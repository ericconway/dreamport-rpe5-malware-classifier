{
    "filepath": "/home/chris/data/rpe005/malware_samples_exercise/20190521_153008_rpe005_malware_alert/23c98d48062eac1b5cce1e7294dba92f24ad535e0b16abb40370f84552bf8a58",
    "fileinfo": {
        "labels": {
            "family": "bad_sample_3",
            "software": "test_file"
        },
        "md5": "5d2b31a30e360765db14fae87342967c",
        "type": "ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, stripped",
        "clamav": "OK",
        "blobs": null
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;call sym.go.runtime.throw;ud2": 63,
                "mov qword [var_8h], ;call sym.go.runtime.throw;ud2;call sym.go.runtime.morestack_noctxt;jmp sym.go.runtime.badmcall": 1,
                "call sym.go.runtime.gopanic;ud2;call sym.go.runtime.morestack_noctxt;jmp sym.go.runtime.badreflectcall;int3": 1,
                "jbe ;sub rsp, ;mov qword [var_40h], rbp;lea rbp, [var_40h];mov rax, qword [arg_50h]": 3,
                "cmp dword [], 0;jne ;mov rcx, qword [arg_50h];mov qword [rdx + rax*8], rcx;mov rax, qword []": 1,
                "mov rax, qword [];mov qword [], rax;lea rax, [];mov qword [rsp], rax;call sym.go.runtime.unlock": 1,
                "mov qword [rsp], rax;call sym.go.runtime.unlock;mov rbp, qword [var_40h];add rsp, ;ret": 4,
                "lea rbp, [var_40h];mov byte [], 1;xor eax, eax;jmp ;inc eax": 1,
                "lea ecx, [rdx + 1];mov eax, dword [var_20h];cmp ecx, eax;jge ;mov dword [var_24h], ecx": 1,
                "mov qword [var_30h], rcx;mov qword [var_38h], rax;mov rdx, qword [var_30h];cmp rax, 8;jge ": 1,
                "add rax, ;mov rdx, rax;neg rax;sar rax, ;and rax, 8": 1,
                "jbe ;sub rsp, ;mov qword [var_10h], rbp;lea rbp, [var_10h];mov rax, qword [arg_20h]": 3,
                "mov edi, ecx;cmp rdi, rsi;jae ;shl rdi, 4;mov rdi, qword [rdx + rdi]": 1,
                "cmp rdi, rsi;jae ;shl rdi, 4;mov rdi, qword [rdx + rdi];cmp rbx, rdi": 1,
                "shl rcx, 4;mov rcx, qword [rdx + rcx + 8];cmp rcx, rbx;jae ;add rcx, rdi": 1,
                "add rcx, rdi;mov qword [arg_28h], rcx;mov qword [arg_30h], rax;mov rbp, qword [var_10h];add rsp, ": 1,
                "ret;mov ecx, r8d;lea edi, [rcx + 1];cmp rdi, rsi;jae ": 1,
                "call sym.go.runtime.panicindex;ud2;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 1,
                "int3;int3;int3;mov rcx, qword fs:[];lea rax, [rsp - ]": 54,
                "and rdx, 1;xor esi, esi;jmp ;lea rsi, [rdi + 1];mov rdx, r8": 1,
                "jne ;mov eax, dword [rdx + rsi + ];mov dword [arg_d8h], eax;mov rbp, qword [var_98h];add rsp, ": 1,
                "sar rdi, ;and rdi, r10;add rdi, r9;sub r8, r10;jmp ": 1,
                "mov rdx, qword [arg_a8h];mov rax, qword [var_58h];cmp qword [rdx], rax;mov qword [rsp], rdi;mov qword [var_8h], r8": 1,
                "mov rdx, qword [var_30h];cmp byte [var_48h], 0;je ;mov rbx, qword [arg_c0h];cmp qword [var_58h], rbx": 1,
                "mov rcx, rbx;shr rbx, 3;and rbx, 1;shl rbx, 7;lea rdi, [rax + rbx]": 1,
                "mov r8d, dword [rax + rbx + 8];mov r9, qword [rax + rbx];mov qword [rdi + rdx], r9;mov dword [rdi + rdx + 8], r8d;mov dword [rdi + rdx + ], esi": 1,
                "mov eax, dword [var_54h];mov dword [arg_d8h], eax;mov rbp, qword [var_98h];add rsp, ;ret": 1,
                "mov rbp, qword [var_98h];add rsp, ;ret;cmp dword [], 0;jne ": 1,
                "jne ;movzx ebx, byte [arg_d0h];test bl, bl;je ;mov qword [var_68h], rax": 1,
                "jbe ;sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h];mov rax, qword [arg_38h]": 22,
                "mov qword [arg_48h], rcx;mov qword [arg_50h], rax;mov rbp, qword [var_28h];add rsp, ;ret": 1,
                "mov rax, qword [arg_38h];test rax, rax;je ;mov eax, dword [arg_48h];movsxd rax, eax": 2,
                "add rsp, ;ret;xorps xmm0, xmm0;movups xmmword [arg_50h], xmm0;mov rbp, qword [var_28h]": 2,
                "movzx edx, byte [arg_88h];mov byte [var_28h], dl;call sym.go.runtime.pcvalue;mov eax, dword [var_30h];mov rcx, qword [var_40h]": 3,
                "mov qword [arg_98h], 1;mov dword [arg_a0h], 0;mov rbp, qword [var_60h];add rsp, ;ret": 6,
                "movups xmmword [var_50h], xmm0;mov rcx, qword [var_48h];mov qword [var_50h], rcx;mov qword [var_58h], rax;mov rcx, qword [var_50h]": 3,
                "add rsp, ;ret;mov dword [var_3ch], eax;mov rax, qword [arg_70h];mov qword [rsp], rax": 4,
                "call sym.go.runtime.printsp;mov rax, qword [var_48h];mov qword [rsp], rax;call sym.go.runtime.printhex;call sym.go.runtime.printsp": 4,
                "call sym.go.runtime.morestack_noctxt;jmp sym.go.runtime.pcdatavalue;int3;int3;int3": 2,
                "jge ;mov dword [arg_78h], ;mov rbp, qword [var_38h];add rsp, ;ret": 2,
                "mov qword [rsp], rax;mov qword [var_8h], ;call sym.go.runtime.printstring;mov rax, qword [arg_28h];mov qword [rsp], rax": 2,
                "mov rcx, rdx;jmp ;call sym.go.runtime.morestack_noctxt;jmp sym.go.runtime.funcdata;int3": 2,
                "call sym.go.runtime.morestack_noctxt;jmp sym.go.runtime.funcdata;int3;int3;int3": 2,
                "add rdx, rsi;mov qword [arg_68h], rdx;sub rax, rbx;mov qword [arg_70h], rax;mov qword [arg_78h], rcx": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], rsi;call sym.go.runtime.readvarint;mov ebx, dword [var_18h];mov ecx, dword [var_1ch]": 1,
                "lea rbp, [rsp];mov rax, qword [arg_10h];mov rdx, qword [arg_18h];xor ecx, ecx;xor ebx, ebx": 1,
                "or ebx, edi;test r9b, ;jne ;mov dword [arg_28h], r8d;mov dword [arg_2ch], ebx": 1,
                "cmp dword [], 0;jne ;xorps xmm0, xmm0;movups xmmword [rdx], xmm0;movups xmmword [rdx + ], xmm0": 1,
                "lea rdx, [];mov qword [rcx + ], rdx;lea rdx, [];mov qword [rcx + ], rdx;cmp dword [], 0": 1,
                "mov qword [rcx + ], rax;mov rax, qword fs:[];mov rax, qword [rax + ];mov rax, qword [rax + ];mov eax, dword [rax + 8]": 1,
                "je ;movzx ecx, byte [arg_59h];cmp cl, ;jne ;movzx ecx, byte [arg_5ah]": 1,
                "je ;mov qword [var_28h], rax;mov qword [var_30h], rcx;mov qword [rsp], rcx;mov qword [var_8h], rax": 1,
                "jb ;cmp al, ;setbe al;mov byte [arg_60h], al;mov rbp, qword [var_38h]": 1,
                "jmp ;xor eax, eax;jmp ;mov eax, 1;jmp ": 1,
                "movzx ecx, byte [var_18h];mov rax, qword [var_28h];jmp ;xor eax, eax;jmp ": 1,
                "mov byte [arg_60h], 1;mov rbp, qword [var_38h];add rsp, ;ret;mov byte [arg_60h], 0": 1,
                "mov byte [arg_60h], 0;mov rbp, qword [var_38h];add rsp, ;ret;cmp cl, 9": 1,
                "cmp cl, ;sete cl;jmp ;mov byte [arg_60h], 0;mov rbp, qword [var_38h]": 1,
                "jmp ;mov byte [arg_60h], 0;mov rbp, qword [var_38h];add rsp, ;ret": 1,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov rax, qword [arg_48h];mov ecx, dword [rax + ];mov edx, ecx": 1,
                "cmp rbx, 9;jae ;shl rbx, 4;lea rsi, [];mov rdi, qword [rbx + rsi]": 1,
                "mov qword [var_8h], 2;call sym.go.runtime.printstring;mov rax, qword [var_30h];mov qword [rsp], rax;mov rax, qword [var_20h]": 1,
                "mov qword [rsp], rax;mov rax, qword [var_20h];mov qword [var_8h], rax;call sym.go.runtime.printstring;call sym.go.runtime.printunlock": 1,
                "cmp rax, 1;jge ;mov rax, qword [arg_48h];cmp qword [rax + ], 0;jne ": 1,
                "mov qword [rsp], rax;mov qword [var_8h], 2;call sym.go.runtime.printstring;mov rax, qword [var_18h];mov qword [rsp], rax": 13,
                "mov qword [rsp], rax;mov qword [var_8h], 8;call sym.go.runtime.printstring;call sym.go.runtime.printunlock;jmp ": 1,
                "call sym.go.runtime.printstring;call sym.go.runtime.printunlock;jmp ;call sym.go.runtime.nanotime;mov rax, qword [rsp]": 1,
                "mov dword [var_1ch], edi;call sym.go.runtime.callCgoMmap;mov rax, qword [var_20h];mov rcx, qword [var_28h];mov qword [rcx], rax": 1,
                "mov qword [rcx], rax;mov rbp, qword [var_30h];add rsp, ;ret;call sym.go.runtime.morestack": 1,
                "mov qword [var_8h], rax;call sym.go.runtime.callCgoMunmap;mov rbp, qword [var_10h];add rsp, ;ret": 2,
                "mov rcx, qword [var_20h];mov dword [rcx], eax;mov rbp, qword [var_28h];add rsp, ;ret": 3,
                "ret;call sym.go.runtime.morestack;jmp sym.go.runtime.sigaction.func1;int3;int3": 3,
                "jbe ;sub rsp, ;mov qword [var_20h], rbp;lea rbp, [var_20h];mov rax, qword [rdx + ]": 34,
                "call sym.go.runtime.printstring;mov rax, qword [var_10h];mov qword [rsp], rax;call sym.go.runtime.printhex;lea rax, []": 26,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;call sym.go.runtime.printstring;mov rax, qword [var_18h]": 23,
                "mov rbp, qword [var_8h];add rsp, ;ret;call sym.go.runtime.morestack;jmp sym.go.runtime.chanrecv.func1": 7,
                "ret;call sym.go.runtime.morestack;jmp sym.go.runtime.chanrecv.func1;int3;int3": 7,
                "mov qword [var_48h], rax;mov rcx, qword [rdx + 8];mov qword [var_50h], rcx;mov rdx, qword [rcx];mov qword [rsp], rdx": 8,
                "mov rcx, qword [var_10h];mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ;sub rsp, ": 1,
                "test al, al;je ;mov rdi, qword [var_48h];mov qword [rdi + 8], ;cmp dword [], 0": 7,
                "mov qword [rsp], rdx;mov rcx, qword [var_38h];mov qword [var_8h], rcx;mov byte [var_10h], 3;call sym.go.runtime.funcdata": 6,
                "mov rcx, qword [var_18h];cmp rcx, 0;cmp eax, ;jne ;mov rdi, qword [var_48h]": 6,
                "ret;dec rcx;mov qword [rax], rcx;mov qword [rsp], rdx;mov rax, qword [var_38h]": 5,
                "mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax;mov qword [var_10h], 8;call sym.go.runtime.memequal": 5,
                "lea rax, [];mov qword [var_8h], rax;mov qword [var_10h], 8;call sym.go.runtime.memequal;movzx eax, byte [var_18h]": 5,
                "int3;mov rcx, qword fs:[];mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 2,
                "mov rdx, qword [rdx + 8];mov rdx, qword [rdx];mov qword [rsp], rdx;mov byte [var_8h], al;mov byte [var_9h], cl": 6,
                "mov rdx, qword [rdx];mov qword [rsp], rdx;mov byte [var_8h], al;mov byte [var_9h], cl;call sym.go.runtime.largeAlloc": 6,
                "mov rbx, qword [rdx + ];mov qword [var_20h], rbx;mov rdx, qword [rdx + 8];mov qword [rsp], rdx;mov qword [var_8h], rax": 6,
                "mov qword [var_8h], rax;mov qword [rsp], rax;call sym.go.runtime.__mcache_.releaseAll;mov rax, qword [var_8h];mov qword [rsp], rax": 6,
                "mov rcx, qword [var_8h];mov qword [rcx], rax;mov qword [], rcx;lea rax, [];mov qword [rsp], rax": 5,
                "sub rsp, ;mov qword [var_8h], rbp;lea rbp, [var_8h];mov rax, qword [rdx + 8];mov rax, qword [rax + 8]": 5,
                "mov rbx, qword [rdx + ];mov rsi, qword [rdx + ];mov rdx, qword [rdx + ];mov rax, qword [rax + 8];mov rcx, qword [rcx + 8]": 6,
                "mov qword [var_18h], rsi;mov qword [var_20h], rdx;call sym.go.runtime.addfinalizer;cmp byte [var_28h], 0;je ": 6,
                "add qword [], rax;mov rax, qword [rcx];mov qword [], rax;mov rbp, qword [var_18h];add rsp, ": 8,
                "mov rbp, qword [var_18h];add rsp, ;ret;call sym.go.runtime.morestack;jmp sym.go.runtime.gcStart.func2": 8,
                "lea rbp, [var_8h];mov rax, qword [arg_18h];mov qword [rsp], rax;call sym.go.runtime.wbBufFlush1;mov rax, qword [arg_18h]": 9,
                "cmp byte [rax + ], 0;je ;mov ecx, 1;lea rdx, [];lock xadd dword [rdx], ecx": 9,
                "int3;int3;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];mov rcx, qword fs:[]": 3,
                "mov qword [var_18h], rbp;lea rbp, [var_18h];mov rax, qword fs:[];mov rax, qword [rax + ];mov rax, qword [rax + ]": 9,
                "lea rbp, [var_30h];mov rax, qword [rdx + 8];mov qword [var_28h], rax;mov rcx, qword [];mov qword [var_10h], rcx": 9,
                "cmp rbx, rcx;jge ;mov qword [var_8h], rbx;mov rax, qword [rdx + rbx*8];mov qword [var_18h], rax": 9,
                "lea rbp, [var_10h];mov byte [rsp], 1;call sym.go.runtime.startTheWorldWithSema;mov rax, qword [var_8h];sub rax, qword []": 9,
                "ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.runtime.gcMarkDone.func3;int3;int3": 9,
                "jne ;mov eax, 1;mov byte [], al;test al, al;je ": 9,
                "call sym.go.runtime.gcSweep;mov rbp, qword [var_18h];add rsp, ;ret;mov rcx, qword fs:[]": 1,
                "mov rdx, qword [rcx];mov rbx, qword fs:[];mov esi, dword [rdx + ];lea edi, [rsi - 1];mov dword [rdx + ], edi": 9,
                "cmp byte [rbx + ], 0;je ;mov qword [rbx + ], ;mov rdx, qword [rcx + 8];test rdx, rdx": 8,
                "mov rcx, qword [rdx + 8];mov qword [var_18h], rcx;mov qword [rsp], rcx;movabs rdx, ;mov qword [var_8h], rdx": 8,
                "mov rax, qword [var_18h];cmp byte [rax + ], 0;je ;lea rax, [];mov qword [rsp], rax": 8,
                "mov qword [var_8h], ;call sym.go.runtime.gcDrain;jmp ;lea rax, [];mov qword [rsp], rax": 6,
                "mov rax, qword [var_20h];mov qword [rsp], rax;movabs rax, ;mov qword [var_8h], rax;call sym.go.runtime.casgstatus": 6,
                "mov rbp, qword [var_10h];add rsp, ;ret;call sym.go.runtime.morestack;jmp sym.go.runtime.gcAssistAlloc.func1": 7,
                "mov qword [var_8h], rcx;mov qword [var_10h], rax;call sym.go.runtime.scanframeworker;mov byte [arg_38h], 1;mov rbp, qword [var_18h]": 6,
                "mov byte [arg_38h], 1;mov rbp, qword [var_18h];add rsp, ;ret;call sym.go.runtime.morestack": 6,
                "add rsp, ;ret;call sym.go.runtime.morestack;jmp sym.go.runtime.getempty.func1;int3": 5,
                "jmp sym.go.runtime.getempty.func1;int3;int3;int3;int3": 5,
                "mov rax, rcx;movzx ecx, byte [var_1fh];cmp rdx, ;jge ;cmp cl, 0": 5,
                "jbe ;lea rbx, [rsi + rbx];lea rbx, [rbx - 1];dec rsi;not rsi": 5,
                "lea rbx, [rbx - 1];dec rsi;not rsi;and rbx, rsi;and rsi, rax": 5,
                "and rcx, rbx;mov rbx, qword [rdx + ];mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "shr rdi, ;cmp rdi, segment.LOAD0;jae ;mov rbx, qword [rbx + rdi*8];test byte [rbx], al": 3,
                "dec rbx;not rbx;and rcx, rbx;jmp ;test byte [rax], al": 2,
                "movzx ebx, byte [rdx + ];mov rsi, qword [rdx + ];mov qword [var_20h], rsi;mov rdx, qword [rdx + 8];mov qword [rsp], rdx": 2,
                "mov qword [rsp], rdx;mov qword [var_8h], rax;mov byte [var_10h], cl;mov byte [var_11h], bl;call sym.go.runtime.__mheap_.alloc_m": 2,
                "mov qword [var_40h], rbp;lea rbp, [var_40h];mov rax, qword [rdx + 8];mov qword [var_38h], rax;test byte [rax], al": 3,
                "mov rax, qword [rdx + 8];mov qword [var_38h], rax;test byte [rax], al;mov rcx, qword [rdx + ];mov qword [var_28h], rcx": 3,
                "cmp dl, 0;mov qword [rsp], rax;call sym.go.runtime.lock;mov rax, qword [var_30h];mov rcx, qword [rax + ]": 3,
                "call sym.go.runtime.unlock;mov rbp, qword [var_40h];add rsp, ;ret;lea rax, []": 3,
                "mov rdx, qword [rdx + 8];mov qword [rsp], rdx;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rdx, qword [rdx + 8];mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], 0;mov qword [var_18h], rcx": 9,
                "mov rax, qword [var_18h];mov qword [rsp], rax;call sym.go.runtime.printpointer;lea rax, [];mov qword [rsp], rax": 7,
                "call sym.go.runtime.printint;call sym.go.runtime.printnl;call sym.go.runtime.printunlock;mov rbp, qword [var_20h];add rsp, ": 7,
                "mov rbp, qword [var_20h];add rsp, ;ret;call sym.go.runtime.morestack;jmp sym.go.runtime.futexwakeup.func1": 7,
                "call sym.go.runtime.morestack;jmp sym.go.runtime.futexwakeup.func1;int3;int3;int3": 7,
                "jmp sym.go.runtime.futexwakeup.func1;int3;int3;int3;int3": 7,
                "lea rbp, [var_10h];mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ;sub rsp, ": 1,
                "jae ;lea rdx, [rcx + rcx*2];lea rbx, [rax + rdx*8];lea rbx, [rbx + ];mov rsi, qword [rax + rdx*8 + ]": 8,
                "lea rdx, [rcx + rcx*2];lea rbx, [rax + rdx*8];lea rbx, [rbx + ];mov rsi, qword [rax + rdx*8 + ];shr rsi, 1": 8,
                "call sym.go.runtime.growslice;mov rax, qword [var_28h];mov rcx, qword [var_30h];mov rdx, qword [var_38h];mov rbx, qword [var_48h]": 7,
                "jmp ;lea rax, [];mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "lea rax, [];mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ;sub rsp, ": 4,
                "add rsp, ;ret;call sym.go.runtime.panicindex;ud2;call sym.go.runtime.morestack": 16,
                "call sym.go.runtime.panicindex;ud2;call sym.go.runtime.morestack;jmp sym.go.runtime.newdefer.func1;int3": 6,
                "mov qword [var_28h], rbp;lea rbp, [var_28h];mov rax, qword [rdx + ];movsxd rcx, dword [rdx + 8];test rcx, rcx": 6,
                "mov rdi, qword [var_20h];call sym.go.runtime.gcWriteBarrier;jmp ;add rcx, ;shr rcx, 7": 5,
                "shr rcx, 7;cmp rcx, ;jae ;lea rdx, [];movzx ecx, byte [rdx + rcx]": 5,
                "add rcx, ;jmp ;call sym.go.runtime.panicindex;ud2;call sym.go.runtime.panicindex": 4,
                "mov qword [r9 + r8*8 - 8], 0;mov r8, qword [rdx + rsi*8 + ];test r10, r10;jl ;cmp r10, r8": 4,
                "cmp dword [], 0;jne ;mov qword [rax + ], r11;jmp ;lea rdi, [rax + ]": 4,
                "lea rdx, [];mov rbx, qword [rdx + rcx*8];cmp dword [], 0;jne ;mov qword [rax + ], rbx": 2,
                "cmp dword [], 0;jne ;mov qword [rax + ], rbx;mov rax, qword [var_18h];mov qword [rdx + rcx*8], rax": 2,
                "ret;lea rdi, [rax + ];mov rax, rbx;call sym.go.runtime.gcWriteBarrier;lea rdi, [rdx + rcx*8]": 2,
                "call sym.go.runtime.morestack_noctxt;jmp sym.go.runtime.preprintpanics.func1;int3;mov rcx, qword fs:[];cmp rsp, qword [rcx + ]": 3,
                "mov rax, qword [rdx + 8];mov qword [var_18h], rax;mov rcx, qword [rdx + ];mov qword [var_10h], rcx;call sym.go.runtime.printlock": 4,
                "mov rbp, qword [var_38h];add rsp, ;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "cmp rsp, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_48h], rbp;lea rbp, [var_48h]": 87,
                "je ;mov rax, qword [var_30h];test rax, rax;jne ;mov rax, qword [var_38h]": 5,
                "ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.runtime.fatalpanic.func2;int3;int3": 6,
                "lea rbp, [var_28h];xorps xmm0, xmm0;movups xmmword [var_18h], xmm0;mov rax, qword [arg_38h];mov ecx, ": 7,
                "movups xmmword [var_18h], xmm0;mov rax, qword [arg_38h];mov ecx, ;mov rcx, qword fs:[];cmp rsp, qword [rcx + ]": 1,
                "add eax, ;mov byte [rsp + rcx + ], al;jmp ;lea rax, [var_18h];mov qword [rsp], rax": 6,
                "add rsp, ;ret;call sym.go.runtime.morestack;jmp sym.go.runtime.goready.func1;int3": 9,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 8;call sym.go.runtime.printstring;mov rax, qword [var_18h]": 8,
                "sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h];mov rax, qword [rdx + ];mov ecx, dword [rdx + ]": 13,
                "mov qword [var_8h], 2;call sym.go.runtime.printstring;mov rax, qword [var_18h];mov qword [rsp], rax;call sym.go.runtime.printhex": 12,
                "mov qword [rsp], rax;call sym.go.runtime.printhex;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 1": 18,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 2;call sym.go.runtime.printstring;call sym.go.runtime.printunlock": 18,
                "mov qword [var_8h], ;call sym.go.runtime.throw;ud2;call sym.go.runtime.morestack;jmp sym.go.runtime.entersyscallblock.func1": 6,
                "lea rbp, [var_38h];mov rax, qword [rdx + ];mov rcx, qword [rdx + 8];mov qword [var_10h], rcx;mov rdx, qword [rax + ]": 6,
                "cmp byte [], 0;je ;mov rax, qword [var_8h];test rax, rax;jne ": 5,
                "call sym.go.runtime.morestack;jmp sym.go.runtime.exitsyscallfast.func1;int3;int3;int3": 5,
                "mov rcx, qword [var_10h];mov rdx, qword [var_18h];mov qword [rdx], rax;mov qword [rdx + 8], rcx;mov rbp, qword [var_20h]": 11,
                "mov qword [rdx], rax;mov qword [rdx + 8], rcx;mov rbp, qword [var_20h];add rsp, ;ret": 11,
                "mov rax, qword [rdx + 8];mov qword [var_18h], rax;mov dword [rsp], ;call sym.go.runtime.stackalloc;mov rax, qword [var_8h]": 6,
                "mov dword [rax + ], ecx;mov qword [rsp], rax;call sym.go.runtime.unlock;mov rbp, qword [var_18h];add rsp, ": 7,
                "mov rcx, qword [rdx + ];mov qword [var_8h], rcx;mov qword [rax + ], rcx;mov qword [rsp], rax;call sym.go.runtime.unlock": 7,
                "mov qword [var_20h], rsi;mov qword [var_28h], rdi;call sym.go.runtime.selunlock;mov rbp, qword [var_30h];add rsp, ": 15,
                "call sym.go.runtime.selunlock;mov rbp, qword [var_30h];add rsp, ;ret;mov rcx, qword fs:[]": 1,
                "mov rbp, qword [var_30h];add rsp, ;ret;call sym.go.runtime.morestack;jmp sym.go.runtime.selectgo.func2": 7,
                "lea rcx, [rcx + rcx*2];lea rdx, [];mov ecx, dword [rdx + rcx*8];bt ecx, 7;jae ": 7,
                "sar rcx, 5;cmp rcx, 2;jae ;mov ebx, dword [rsp + rcx*4 + ];shl rcx, 2": 11,
                "mov rax, qword [];mov qword [rsp], rax;lea rax, [var_28h];mov qword [var_8h], rax;call sym.go.runtime.chansend1": 6,
                "lea rdi, [var_40h];mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ;sub rsp, ": 1,
                "lea rax, [var_2ch];mov qword [var_48h], rax;mov word [var_78h], 1;mov rax, qword [];mov qword [var_68h], rax": 5,
                "jbe ;cmp rax, ;jae ;lea rcx, [rax + rax*2];lea rdx, []": 4,
                "sub rsp, ;mov qword [var_60h], rbp;lea rbp, [var_60h];mov rax, qword [rdx + ];mov rcx, qword fs:[]": 1,
                "mov byte [arg_10h], ;ret;int3;int3;int3": 3,
                "mov rcx, qword [rax + ];test rcx, rcx;je ;mov edx, dword [var_24h];test edx, edx": 3,
                "mov qword [rax], rcx;mov byte [arg_90h], 1;mov rbp, qword [var_58h];add rsp, ;ret": 3,
                "movabs rax, ;mov qword [rsp], rax;call sym.go.runtime.float64frombits;movsd xmm0, qword [var_8h];movsd qword [], xmm0": 3,
                "mov rax, qword [];cmp dword [], 0;jne ;mov qword [], rax;mov rax, qword []": 12,
                "mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax;call sym.go.runtime.funcPC;mov rax, qword [var_10h]": 6,
                "call sym.go.runtime.funcPC;mov rax, qword [var_10h];mov qword [], rax;lea rax, [];mov qword [rsp], rax": 3,
                "ret;jne ;call sym.go.runtime.throwinit;ud2;mov byte [], 1": 29,
                "call sym.go.runtime.init.3;call sym.go.runtime.init.4;call sym.go.runtime.init.5;call sym.go.runtime.init.6;mov byte [], 2": 2,
                "je ;mov rax, qword [arg_38h];movzx eax, byte [rax + ];mov rcx, qword [arg_30h];cmp byte [rcx + ], al": 2,
                "call sym.go.runtime.strhash;mov rax, qword [var_10h];mov rcx, qword [arg_30h];lea rdx, [rcx + ];mov qword [rsp], rdx": 5,
                "cmp qword [rbx + 8], rdx;je ;xor ecx, ecx;test cl, cl;je ": 17,
                "ret;xor eax, eax;jmp ;mov qword [rsp], rsi;mov qword [var_8h], rcx": 4,
                "mov qword [var_10h], rdx;call sym.go.runtime.memequal;movzx ecx, byte [var_18h];mov rax, qword [arg_30h];mov rbx, qword [arg_38h]": 17,
                "jmp sym.go.type..eq.runtime.modulehash;int3;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 2,
                "add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.type..eq.runtime.treapNode;int3": 2,
                "cmp qword [rdx + ], rax;sete al;mov byte [arg_40h], al;mov rbp, qword [var_20h];add rsp, ": 5,
                "call sym.go.runtime.memequal;movzx ecx, byte [var_18h];mov rax, qword [arg_38h];mov rdx, qword [arg_30h];jmp ": 13,
                "jmp ;xor ecx, ecx;jmp ;mov qword [rsp], rbx;mov qword [var_8h], rsi": 2,
                "xor ecx, ecx;jmp ;xor ecx, ecx;jmp ;call sym.go.runtime.morestack_noctxt": 4,
                "jmp ;xor ecx, ecx;jmp ;call sym.go.runtime.morestack_noctxt;jmp sym.go.type..eq.runtime.funcinl": 2,
                "call sym.go.runtime.f64hash;mov rax, qword [var_10h];mov qword [arg_40h], rax;mov rbp, qword [var_20h];add rsp, ": 2,
                "add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.type..hash.runtime.gcControllerState;int3": 2,
                "mov rax, qword [arg_30h];movsd xmm0, qword [rax + ];mov rcx, qword [arg_38h];movsd xmm1, qword [rcx + ];ucomisd xmm0, xmm1": 2,
                "jmp sym.go.type..eq.runtime.gcControllerState;int3;int3;int3;int3": 2,
                "ret;call sym.go.runtime.morestack_noctxt;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rax, qword [arg_8h];mov rax, qword [rax + 8];mov qword [arg_10h], rax;ret;int3": 1,
                "sub rsp, ;mov qword [var_70h], rbp;lea rbp, [var_70h];mov rax, qword [arg_80h];mov rcx, qword [rax + 8]": 2,
                "mov rbp, qword [rbp];mov qword [var_18h], rdx;mov qword [var_20h], rcx;mov qword [var_28h], rbx;mov rcx, qword [arg_88h]": 1,
                "mov rcx, qword [arg_90h];mov qword [var_38h], rcx;mov qword [var_60h], ;mov qword [var_68h], ;cmp dword [], 0": 1,
                "mov qword [var_60h], ;mov qword [var_68h], ;cmp dword [], 0;jne ;mov rcx, qword [var_18h]": 1,
                "mov rbp, qword [rbp];mov rbp, qword [var_70h];add rsp, ;ret;lea rcx, []": 1,
                "add rsp, ;ret;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax": 1,
                "mov rdx, qword [rcx + ];test rdx, rdx;jle ;mov rbx, qword [rcx + 8];mov rsi, qword [rcx]": 1,
                "mov qword [rcx + ], 0;mov rdx, qword [rcx + 8];cmp qword [rcx + ], rdx;jge ;mov eax, ": 1,
                "jmp ;mov rdx, qword [var_38h];lea rax, [rdx - 1];mov rcx, rbx;test rax, rax": 1,
                "mov r8, qword [rcx + ];mov rax, qword [rax + ];mov qword [rsp], r8;sub rsi, rdi;mov r8, rsi": 1,
                "add rsp, ;ret;lea rdi, [rbx + ];mov rax, rcx;call sym.go.runtime.gcWriteBarrier": 5,
                "ret;lea rdi, [rbx + ];mov rax, rcx;call sym.go.runtime.gcWriteBarrier;mov rcx, qword fs:[]": 1,
                "movzx ecx, byte [rax + ];test cl, 1;je ;mov ecx, ;movzx edx, word [rax + ]": 1,
                "test cl, 1;je ;mov ecx, ;movzx edx, word [rax + ];test dx, dx": 1,
                "mov qword [var_50h], rsi;mov qword [var_f0h], r8;mov eax, ;mov word [r8 + r10], ax;mov eax, ": 1,
                "mov qword [var_20h], rdx;call sym.go.runtime.growslice;mov rdi, qword [var_28h];mov rsi, qword [var_38h];mov rax, qword [var_88h]": 1,
                "mov r8, qword [var_28h];mov rax, qword [arg_118h];mov rcx, qword [var_40h];mov rdx, qword [var_100h];mov rbx, qword [var_68h]": 1,
                "mov r9, qword [var_e8h];mov r10, qword [var_80h];jmp ;mov r10, rdi;jmp ": 1,
                "xor edx, edx;mov qword [var_58h], rax;mov qword [var_100h], rdx;mov qword [var_48h], rcx;cmp rax, 1": 1,
                "mov qword [var_48h], rcx;cmp rax, 1;jne ;lea rbx, [rcx + 1];cmp rbx, rsi": 1,
                "ja ;mov byte [r8 + rcx], ;xor ecx, ecx;jmp ;mov qword [var_50h], rsi": 1,
                "sub rsp, ;mov qword [var_1a0h], rbp;lea rbp, [var_1a0h];mov rax, qword [arg_1b0h];movzx ecx, byte [rax + ]": 1,
                "test rcx, rcx;je ;movzx edx, byte [rcx + ];and edx, ;cmp rdx, ": 1,
                "lea rdi, [rdx + 1];cmp rdi, rbx;ja ;lea rbx, [rdx + 1];mov qword [rax + ], rbx": 1,
                "movzx ebx, bl;and rbx, rdx;lea rdx, [rsi + rbx];mov qword [var_78h], rdx;mov qword [var_8h], rdx": 1,
                "mov qword [var_78h], rdx;mov qword [var_8h], rdx;mov qword [var_10h], rcx;call sym.go.reflect.addTypeBits;mov rax, qword [var_90h]": 1,
                "mov rax, qword [rax];mov rcx, qword [var_78h];lea rdx, [rcx + rax];mov rax, qword [var_e8h];mov rcx, qword [arg_1b8h]": 1,
                "mov rsi, qword [var_68h];mov rdi, qword [var_100h];cmp r8, rsi;jl ;mov rsi, rdx": 1,
                "test r8w, ;jne ;xor edi, edi;xor r8d, r8d;mov qword [var_70h], rdi": 1,
                "movzx ebx, bl;and rbx, rdx;lea rdx, [rsi + rbx];mov qword [var_80h], rdx;mov qword [var_8h], rdx": 1,
                "mov rdi, qword [var_70h];mov r8, qword [var_100h];mov r9, qword [var_78h];cmp r10, rdi;jl ": 1,
                "call sym.go.runtime.newobject;mov rax, qword [var_8h];mov byte [rax + ], 8;mov rcx, qword [var_80h];mov rdx, rcx": 1,
                "mov qword [rax], rcx;mov rcx, qword [var_e8h];mov edx, dword [rcx];shl rdx, 3;mov qword [rax + 8], rdx": 1,
                "mov rcx, qword [var_e8h];mov edx, dword [rcx];shl rdx, 3;mov qword [rax + 8], rdx;cmp dword [rcx], 0": 1,
                "mov rdx, qword [arg_1b8h];test rdx, rdx;mov qword [var_d8h], rax;je ;mov qword [rsp], rdx": 1,
                "test rdx, rdx;mov qword [var_d8h], rax;je ;mov qword [rsp], rdx;call sym.go.reflect.__rtype_.String": 1,
                "mov qword [var_20h], rdx;lea rdx, [];mov qword [var_28h], rdx;mov qword [var_30h], 2;mov qword [var_38h], rcx": 1,
                "lea rdx, [];mov qword [var_28h], rdx;mov qword [var_30h], 2;mov qword [var_38h], rcx;mov qword [var_40h], rax": 1,
                "mov rax, qword [var_8h];lea rcx, [];mov qword [rax], rcx;cmp dword [], 0;jne ": 33,
                "jne ;mov rax, qword [arg_28h];movzx ecx, byte [rax + ];and ecx, ;cmp rcx, ": 1,
                "mov rax, qword [arg_30h];mov rax, qword [rax + ];mov qword [arg_40h], rax;mov rbp, qword [var_18h];add rsp, ": 1,
                "mov rbp, qword [var_18h];add rsp, ;ret;mov qword [var_10h], rax;lea rax, []": 2,
                "mov rdi, qword [var_8h];mov qword [rdi + 8], ;cmp dword [], 0;jne ;lea rax, []": 6,
                "sub rsp, ;mov qword [var_10h], rbp;lea rbp, [var_10h];mov rax, qword [arg_30h];mov qword [rsp], rax": 1,
                "bt eax, 7;jae ;mov rax, qword [arg_28h];mov rax, qword [rax];mov qword [rsp], rax": 1,
                "call sym.go.runtime.gopanic;ud2;call sym.go.runtime.morestack_noctxt;jmp sym.go.reflect.Value.Close;mov rcx, qword fs:[]": 1,
                "mov qword [var_8h], rax;call sym.go.runtime.gopanic;ud2;call sym.go.runtime.morestack_noctxt;jmp sym.go.reflect.Swapper.func1": 1,
                "cmp r8, rcx;jae ;mov rax, qword [rdx + r8*8];lea rcx, [rdx + r8*8];cmp dword [], 0": 3,
                "call sym.go.runtime.gcWriteBarrier;mov rdi, rcx;mov rax, rsi;call sym.go.runtime.gcWriteBarrier;jmp ": 3,
                "mov rax, rsi;call sym.go.runtime.gcWriteBarrier;jmp ;call sym.go.runtime.panicindex;ud2": 3,
                "jmp sym.go.reflect.Swapper.func3;int3;int3;int3;int3": 3,
                "mov rdx, qword [arg_10h];cmp rdx, rax;jae ;mov ebx, dword [rcx + rdx*4];mov rsi, qword [arg_18h]": 6,
                "jae ;mov qword [var_18h], rcx;mov qword [var_30h], rbx;mov qword [var_38h], rdx;mov rax, qword [rax]": 7,
                "mov qword [var_18h], rcx;mov qword [var_30h], rbx;mov qword [var_38h], rdx;mov rax, qword [rax];mov qword [var_40h], rax": 7,
                "mov qword [var_40h], rax;mov qword [rsp], rbx;mov qword [var_8h], rdx;imul rdi, rcx;lea rsi, [rdi + rax]": 7,
                "mov qword [rsp], rbx;mov qword [var_8h], rdx;imul rdi, rcx;lea rsi, [rdi + rax];mov qword [var_28h], rsi": 7,
                "mov rax, qword [var_38h];mov qword [var_10h], rax;call sym.go.reflect.typedmemmove;mov rbp, qword [var_48h];add rsp, ": 6,
                "mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rcx;call sym.go.runtime.memequal;movzx eax, byte [var_18h]": 6,
                "call sym.go.runtime.morestack;jmp sym.go.reflect.__structType_.FieldByName.func1;int3;int3;int3": 6,
                "cmp r8, rsi;ja ;mov qword [var_68h], rcx;mov qword [var_58h], r8;mov qword [var_50h], rsi": 6,
                "mov qword [var_60h], rax;mov rcx, qword [var_68h];mov qword [rsp], rcx;mov rcx, qword [var_58h];mov qword [var_8h], rcx": 6,
                "mov qword [var_10h], rax;call sym.go.runtime.panicdottypeE;ud2;call sym.go.runtime.morestack;jmp sym.go.reflect.FuncOf.func1": 4,
                "lea rdi, [arg_30h];cmp qword [rbx], rdi;jne ;mov qword [rbx], rsp;jmp ": 4,
                "mov byte [var_18h], 0;lea rax, [var_18h];mov qword [var_10h], rax;call sym.go.reflect.callMethod;mov rbp, qword [var_20h]": 1,
                "mov qword [arg_38h], rax;mov rbp, qword [var_18h];add rsp, ;ret;call sym.go.runtime.panicwrap": 1,
                "add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.type..eq.reflect.funcType;int3": 2,
                "mov rax, qword [arg_8h];test byte [rax], al;mov qword [arg_8h], rax;mov qword [arg_10h], 0;jmp sym.go.reflect.__rtype_.ChanDir": 117,
                "jmp sym.go.reflect.__rtype_.Elem;int3;int3;int3;int3": 111,
                "lea rdi, [arg_28h];xorps xmm0, xmm0;lea rdi, [rdi - ];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 321,
                "jmp sym.go.reflect.__rtype_.FieldByIndex;int3;int3;int3;sub rsp, 8": 108,
                "int3;mov rax, qword [arg_8h];test byte [rax], al;mov qword [arg_8h], rax;mov rcx, qword fs:[]": 1,
                "mov rax, qword [arg_8h];mov rax, qword [arg_8h];test byte [rax], al;mov qword [arg_8h], rax;mov qword [arg_10h], 0": 13,
                "xorps xmm0, xmm0;movups xmmword [arg_10h], xmm0;jmp sym.go.reflect.__rtype_.Key;int3;int3": 112,
                "test byte [rax], al;mov qword [arg_8h], rax;mov qword [arg_10h], 0;jmp sym.go.reflect.__rtype_.Len;int3": 112,
                "mov qword [arg_10h], rax;mov rbp, qword [rsp];add rsp, 8;mov rax, qword [arg_8h];test byte [rax], al": 7,
                "int3;mov rax, qword [arg_8h];test byte [rax], al;sub rsp, 8;mov qword [rsp], rbp": 14,
                "mov rax, qword [arg_8h];test byte [rax], al;mov qword [arg_8h], rax;mov qword [arg_10h], 0;jmp sym.go.reflect.__rtype_.NumOut": 105,
                "mov qword [arg_8h], rax;mov rax, qword [arg_8h];test byte [rax], al;mov qword [arg_8h], rax;mov byte [arg_20h], 0": 7,
                "add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.type..hash.reflect.ValueError;mov rax, qword [arg_8h]": 1,
                "mov qword [var_8h], rcx;call sym.go.type..hash.reflect.funcType;mov rax, qword [var_10h];mov rcx, qword [arg_30h];add rcx, ": 103,
                "mov qword [rsp], rax;mov rax, qword [arg_38h];add rax, ;mov qword [var_8h], rax;mov qword [var_10h], ": 92,
                "mov qword [arg_8h], rax;mov rax, qword [arg_8h];test byte [rax], al;mov qword [arg_8h], rax;xorps xmm0, xmm0": 1,
                "jmp sym.go.reflect.__rtype_.Comparable;int3;int3;mov rax, qword [arg_8h];test byte [rax], al": 1,
                "jmp sym.go.type..hash.reflect.funcTypeFixed16;int3;int3;int3;int3": 17,
                "movups xmmword [arg_10h], xmm0;jmp sym.go.reflect.__rtype_.Elem;int3;int3;mov rax, qword [arg_8h]": 5,
                "mov rbp, qword [rsp];add rsp, 8;jmp sym.go.reflect.__rtype_.Field;mov rax, qword [arg_8h];test byte [rax], al": 5,
                "call fcn.004586b1;mov rbp, qword [rbp];mov rax, qword [arg_10h];mov rax, qword [arg_8h];test byte [rax], al": 6,
                "add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.type..hash.reflect.funcTypeFixed64;mov rax, qword [arg_8h]": 1,
                "int3;sub rsp, 8;mov qword [rsp], rbp;mov rax, qword [arg_8h];test byte [rax], al": 1,
                "lea rcx, [rax + 1];mov rbx, qword [arg_40h];mov rsi, qword [arg_50h];jmp ;mov qword [rsp], rcx": 1,
                "jne ;lea rcx, [rdx + 1];cmp rcx, rsi;jge ;mov qword [var_18h], rcx": 1,
                "call rax;movzx edi, byte [var_10h];mov rax, qword [arg_48h];mov rcx, qword [var_20h];mov rdx, qword [var_18h]": 1,
                "mov rax, qword [var_30h];mov qword [rsp], rax;mov rax, qword [var_28h];mov qword [var_8h], rax;mov rdx, qword [arg_50h]": 2,
                "mov rdx, qword [arg_50h];mov rax, qword [rdx];call rax;mov rax, qword [var_20h];lea rcx, [rax + rax]": 2,
                "mov qword [var_8h], rsi;mov rdx, qword [arg_48h];mov rdi, qword [rdx];call rdi;cmp byte [var_10h], 0": 2,
                "test rbx, rbx;jge ;jmp ;mov qword [var_28h], rsi;mov qword [rsp], rcx": 3,
                "mov rax, qword [rdx];call rax;mov rax, qword [arg_58h];mov qword [rsp], rax;mov rcx, qword [arg_60h]": 3,
                "mov qword [rsp], rax;mov rcx, qword [arg_40h];mov qword [var_8h], rcx;mov rdx, qword [arg_28h];mov rbx, qword [rdx]": 8,
                "jne ;jmp ;dec rdx;mov qword [var_40h], rdx;cmp rcx, rdx": 3,
                "mov rax, qword [arg_98h];mov rbx, qword [var_60h];mov rsi, qword [var_48h];mov rdx, qword [var_40h];mov qword [var_40h], rdx": 3,
                "mov qword [var_8h], rax;mov rdx, qword [arg_90h];mov rcx, qword [rdx];call rcx;mov rax, qword [var_50h]": 3,
                "mov rdx, qword [arg_90h];mov rcx, qword [rdx];call rcx;mov rax, qword [var_50h];lea rsi, [rax + 1]": 3,
                "mov rcx, qword [rdx];call rcx;mov rax, qword [var_50h];lea rsi, [rax + 1];mov rcx, qword fs:[]": 1,
                "jmp ;mov qword [rsp], rax;lea rax, [rcx - 1];mov qword [var_68h], rax;mov qword [var_8h], rax": 2,
                "call rbx;movzx ebx, byte [var_10h];xor ebx, 1;mov rax, qword [arg_98h];mov rcx, qword [var_48h]": 2,
                "jl ;cmp rdi, 5;jmp ;mov qword [rsp], rax;mov qword [var_8h], rbx": 2,
                "cmp rdi, 5;jmp ;mov qword [rsp], rax;mov qword [var_8h], rbx;mov rdx, qword [arg_88h]": 2,
                "mov rsi, qword [arg_98h];mov qword [var_8h], rsi;mov rdx, qword [arg_88h];mov rdi, qword [rdx];call rdi": 3,
                "mov qword [var_8h], rsi;mov rdx, qword [arg_88h];mov rdi, qword [rdx];call rdi;cmp byte [var_10h], 0": 1,
                "jmp ;mov qword [rsp], rax;lea rcx, [rdx - 1];mov qword [var_8h], rcx;mov rcx, qword [arg_88h]": 1,
                "mov rsi, qword [var_48h];jmp ;mov qword [rsp], rax;mov qword [var_8h], rcx;mov rdx, qword [arg_88h]": 1,
                "mov rbx, qword [var_60h];mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ;sub rsp, ": 1,
                "mov rcx, r9;mov qword [arg_70h], rdi;mov qword [arg_68h], rsi;mov r8, rdi;sub rdi, rsi": 1,
                "lea rbx, [rdi + 1];mov rax, qword [arg_60h];mov rcx, qword [arg_58h];mov rsi, qword [arg_68h];mov r8, qword [arg_70h]": 1,
                "je ;mov rax, qword [var_38h];mov qword [rsp], rax;mov rcx, qword [var_40h];mov qword [var_8h], rcx": 1,
                "mov qword [var_10h], rsi;mov qword [var_18h], r8;call sym.go.sort.insertionSort_func;mov rbp, qword [var_48h];add rsp, ": 1,
                "mov rbx, qword [rbx + rsi + 8];mov qword [rsp], rdx;mov qword [var_8h], rbx;mov qword [var_10h], rax;mov qword [var_18h], rcx": 2,
                "mov qword [var_18h], rcx;call sym.go.runtime.cmpstring;cmp qword [var_20h], 0;setge byte [arg_40h];mov rbp, qword [var_28h]": 2,
                "add rsp, 8;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.sort.init;int3": 2,
                "jne ;call sym.go.runtime.throwinit;ud2;mov byte [], 1;call sym.go.syscall.init": 2,
                "call sym.go.runtime.init;call sym.go.internal_poll.init.ializers;mov byte [], 2;mov rbp, qword [rsp];add rsp, 8": 1,
                "mov rax, qword [var_20h];mov rcx, qword [var_30h];test rcx, rcx;je ;mov qword [rsp], rcx": 1,
                "ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.internal_syscall_unix.IsNonblock;int3;int3": 1,
                "mov rbp, qword [rsp];add rsp, 8;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.internal_syscall_unix.init": 1,
                "jmp sym.go.internal_syscall_unix.init;int3;int3;int3;int3": 1,
                "je ;mov qword [rsp], rax;mov rax, qword [arg_50h];mov qword [var_8h], rax;call sym.go.os.__File_.readdir": 1,
                "mov qword [arg_58h], rbx;mov qword [arg_60h], rdx;mov qword [arg_68h], rcx;mov qword [arg_70h], rax;mov qword [arg_78h], rsi": 1,
                "mov qword [arg_68h], rcx;mov qword [arg_70h], rax;mov qword [arg_78h], rsi;mov rbp, qword [var_38h];add rsp, ": 1,
                "mov qword [var_30h], rbp;lea rbp, [var_30h];lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 1,
                "mov qword [arg_48h], rdx;mov qword [arg_50h], rcx;mov qword [arg_58h], rax;mov rbp, qword [var_30h];add rsp, ": 1,
                "mov qword [arg_58h], rax;mov rbp, qword [var_30h];add rsp, ;ret;call sym.go.runtime.morestack_noctxt": 1,
                "add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.os.glob..func1;int3": 1,
                "ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.os.glob..func1;int3;mov rcx, qword fs:[]": 1,
                "mov qword [], rcx;cmp dword [], 0;jne ;mov qword [], rax;lea rax, []": 7,
                "mov qword [], rax;cmp dword [], 0;jne ;mov qword [], rcx;mov rcx, qword []": 1,
                "jne ;mov qword [], rcx;call sym.go.os.glob..func1;mov rax, qword [var_18h];mov rcx, qword [rsp]": 1,
                "mov rcx, qword [rsp];mov rdx, qword [var_8h];mov rbx, qword [var_10h];mov qword [], rdx;cmp dword [], 0": 1,
                "jmp sym.go.os.init.ializers;int3;int3;int3;mov rcx, qword fs:[]": 1,
                "add rsp, 8;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.os.init;int3": 1,
                "lea rax, [];mov qword [rsp], rax;call sym.go.runtime.newobject;mov rax, qword [var_8h];lea rcx, []": 22,
                "jmp ;call sym.go.runtime.morestack_noctxt;jmp sym.go.fmt.init.ializers;int3;int3": 1,
                "mov byte [], 1;call sym.go.strconv.init;call sym.go.internal_fmtsort.init;call sym.go.io.init;call sym.go.os.init": 1,
                "call sym.go.io.init;call sym.go.os.init;call sym.go.reflect.init;call sym.go.sync.init;call sym.go.math.init": 1,
                "mov rbp, qword [var_20h];add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.type..hash.fmt.fmt": 1,
                "lea rbp, [var_40h];mov rax, qword [arg_50h];mov rcx, qword [rax + ];mov qword [var_28h], rcx;mov rdx, qword [arg_60h]": 1,
                "mov r8, qword [rax + ];test rcx, rcx;jge ;add rcx, rbx;test rdx, rdx": 1,
                "jge ;add rcx, rbx;test rdx, rdx;jl ;cmp rdi, rdx": 1,
                "neg r10;sar r10, ;and rcx, r10;add rcx, rsi;cmp rcx, r8": 1,
                "and rcx, r10;add rcx, rsi;cmp rcx, r8;jne ;lea rcx, [rdi + rdx]": 1,
                "jne ;lea rcx, [rdi + rdx];xor edx, edx;mov qword [var_18h], rdx;jmp ": 1,
                "test r9, r9;jl ;cmp rcx, r9;ja ;cmp r9, rbx": 1,
                "cmp rax, ;jl ;mov eax, ;jmp ;mov rcx, rax": 3,
                "jmp ;mov rcx, rax;shl rax, 3;mov qword [rsp + rax + ], 9;lea rax, [rcx + 1]": 1,
                "mov rcx, rax;shl rax, 3;mov qword [rsp + rax + ], 7;lea rax, [rcx + 1];cmp rax, ": 1,
                "cmp rax, ;jl ;lea rax, [];mov qword [rsp], rax;lea rax, [var_28h]": 1,
                "je ;mov rcx, qword [rax + 8];mov rax, qword [rax];mov rdx, qword [arg_18h];cmp rdx, rcx": 2,
                "mov ecx, dword [rax + r8*8 + 4];mov r9, r8;shl r8, 3;movzx r10d, word [rax + r8];mov word [rax + rdx], r10w": 1,
                "cmp qword [rbx], rdi;jne ;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov qword [var_8h], rax;mov rax, qword [arg_48h];mov qword [var_10h], rax;mov rax, qword [arg_50h];mov qword [var_18h], rax": 6,
                "lea rbp, [var_10h];mov dword [rsp], ;call sym.go.hash_crc32.simpleMakeTable;mov rax, qword [var_8h];cmp dword [], 0": 1,
                "mov rax, qword [var_8h];cmp dword [], 0;jne ;mov qword [], rax;mov rbp, qword [var_10h]": 1,
                "mov qword [], rax;mov rbp, qword [var_10h];add rsp, ;ret;lea rdi, []": 1,
                "call sym.go.runtime.morestack_noctxt;jmp sym.go.hash_crc32.init.ializers;int3;int3;int3": 1,
                "movdqu xmm14, xmmword [rsi + ];pclmulqdq xmm5, xmm0, ;pclmulqdq xmm6, xmm0, ;pclmulqdq xmm7, xmm0, ;pclmulqdq xmm8, xmm0, ": 1,
                "pclmulqdq xmm8, xmm0, ;pxor xmm1, xmm5;pxor xmm2, xmm6;pxor xmm3, xmm7;pxor xmm4, xmm8": 1,
                "movdqa xmm0, xmmword [];movdqa xmm5, xmm1;pclmulqdq xmm1, xmm0, 0;pclmulqdq xmm5, xmm0, ;pxor xmm1, xmm5": 1,
                "pclmulqdq xmm1, xmm0, 0;pclmulqdq xmm5, xmm0, ;pxor xmm1, xmm5;pxor xmm1, xmm3;movdqa xmm5, xmm1": 1,
                "movdqa xmm5, xmm1;pclmulqdq xmm1, xmm0, 0;pclmulqdq xmm5, xmm0, ;pxor xmm1, xmm5;pxor xmm1, xmm10": 1,
                "movq xmm0, qword [];psrlq xmm3, ;psrldq xmm2, 4;pand xmm1, xmm3;pclmulqdq xmm1, xmm0, 0": 1,
                "mov rax, qword [var_8h];mov qword [var_28h], rax;mov qword [rsp], rax;mov rcx, qword [arg_40h];mov qword [var_8h], rcx": 1,
                "mov rcx, qword [arg_48h];mov qword [var_10h], rcx;call sym.go.compress_gzip.__Reader_.Reset;mov rax, qword [var_18h];mov rcx, qword [var_20h]": 1,
                "lea rax, [rsp - ];cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_3d0h], rbp": 1,
                "mov qword [var_138h], 0;lea rdi, [var_140h];xorps xmm0, xmm0;lea rdi, [rdi - ];mov qword [rsp - ], rbp": 1,
                "call fcn.0045860a;mov rbp, qword [rbp];mov rax, qword [arg_3e0h];mov rcx, qword [rax + ];mov rdx, qword [rax + ]": 1,
                "int3;int3;int3;mov rax, qword [rdx + 8];mov ecx, dword [arg_8h]": 1,
                "int3;mov rax, qword [rdx + 8];mov ecx, dword [arg_8h];cmp ecx, ;jge ": 1,
                "lea rbp, [var_20h];mov rax, qword [rdx + ];mov rcx, qword [rdx + 8];mov qword [rsp], rcx;mov qword [var_8h], rax": 3,
                "lea rbp, [var_20h];mov rax, qword [arg_38h];mov rcx, qword [rax];mov rdx, qword [arg_30h];mov rbx, qword [rdx + 8]": 4,
                "mov rcx, qword [rax + ];cmp qword [rdx + ], rcx;jne ;mov rax, qword [rax + ];cmp qword [rdx + ], rax": 3,
                "mov rax, qword [arg_38h];mov rdx, qword [arg_30h];jmp ;call sym.go.runtime.morestack_noctxt;jmp sym.go.type..eq.strings.Reader": 3,
                "xorps xmm0, xmm0;movups xmmword [var_38h], xmm0;lea rcx, [];mov qword [var_38h], rcx;mov qword [var_40h], rax": 3,
                "mov qword [arg_68h], rcx;mov rbp, qword [var_48h];add rsp, ;ret;call sym.go.runtime.morestack_noctxt": 3,
                "sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp];mov rax, qword [arg_30h];mov rcx, qword [arg_28h]": 3,
                "mov byte [rsi + rax], dil;lea rdi, [rax + 1];mov rax, rbx;mov rdx, rdi;mov rbx, rax": 3,
                "lea edi, [rsi - ];mov r8d, 1;test r8b, r8b;je ;lea rsi, [rax + rax]": 2,
                "jb ;cmp dl, ;ja ;lea esi, [rdx - ];mov r8d, 1": 3,
                "je ;shl edi, 4;or edi, esi;mov rdx, qword [arg_18h];cmp rax, rdx": 2,
                "lea rax, [];add rax, rdx;mov qword [arg_50h], rax;mov rbp, qword [rsp];add rsp, 8": 1,
                "jmp ;call sym.go.runtime.morestack_noctxt;jmp sym.go.regexp.mergeRuneSets.func1;int3;int3": 1,
                "call sym.go.runtime.morestack_noctxt;jmp sym.go.regexp.mergeRuneSets.func1;int3;int3;int3": 1,
                "mov rbx, qword [rdx + ];mov rsi, qword [rdx + ];mov rdi, qword [rax];mov r8d, dword [arg_100h];cmp qword [rax + 8], r8": 2,
                "mov r8d, dword [arg_100h];cmp qword [rax + 8], r8;jbe ;mov eax, r8d;shl r8, 6": 2,
                "mov eax, r8d;shl r8, 6;lea r9, [rdi + r8];mov r10, qword [rcx + 8];mov r11, qword [rcx]": 2,
                "lea r9, [rdi + r8];mov r10, qword [rcx + 8];mov r11, qword [rcx];cmp eax, r10d;jb ": 2,
                "movzx ecx, byte [rdi + r8];cmp cl, 5;ja ;cmp cl, 2;ja ": 2,
                "mov rdx, qword [rcx + ];mov rbx, qword [var_d8h];mov rsi, qword [var_90h];mov edi, dword [rsi + rbx + 4];cmp qword [rcx + ], rdi": 2,
                "mov qword [var_88h], r8;mov rdx, qword [rdx + rdi*8];test r8, r8;ja ;xor edi, edi": 2,
                "mov rax, qword [var_e0h];mov rcx, qword [rax + ];mov edx, dword [arg_100h];cmp qword [rax + ], rdx;jbe ": 2,
                "lea rbx, [rdx + rdx*2];mov rsi, qword [var_88h];mov qword [rcx + rbx*8 + 8], rsi;mov rsi, qword [var_80h];mov qword [rcx + rbx*8 + ], rsi": 2,
                "mov qword [var_10h], rax;call sym.go.runtime.makeslice;mov rax, qword [var_18h];mov rcx, qword [var_90h];mov rdx, qword [var_88h]": 2,
                "mov r8d, dword [rcx + rbx + 4];cmp qword [rax + ], rsi;ja ;jmp ;movzx eax, byte [var_4bh]": 2,
                "mov rax, rcx;jmp ;mov qword [var_c8h], rdx;lea rax, [];mov qword [rsp], rax": 2,
                "jmp ;mov qword [var_e8h], rbx;mov rdx, qword [rbx];mov eax, dword [r8 + rdi + 4];mov dword [rsp], eax": 2,
                "mov ebx, dword [rdx + rcx + 4];mov rsi, qword [arg_110h];cmp rbx, rsi;jae ;mov rdi, qword [arg_108h]": 2,
                "jae ;mov rdi, qword [arg_108h];movzx r8d, byte [rdi + rbx];mov r9d, dword [rdx + rcx + 8];cmp r9, rsi": 2,
                "jae ;mov byte [var_4bh], al;mov qword [rsp], r10;lea rax, [r11 + r11*2];lea rax, [r8 + rax*8]": 1,
                "mov qword [rsp], r10;lea rax, [r11 + r11*2];lea rax, [r8 + rax*8];mov qword [var_8h], rax;mov dword [var_10h], r9d": 1,
                "mov qword [var_8h], rax;mov dword [var_10h], r9d;mov dword [var_14h], r11d;call sym.go.regexp.mergeRuneSets;mov rax, qword [var_e0h]": 1,
                "mov dword [var_14h], r11d;call sym.go.regexp.mergeRuneSets;mov rax, qword [var_e0h];mov rcx, qword [rax + ];mov rdx, qword [var_28h]": 1,
                "call sym.go.regexp.__Regexp_.expand;mov rax, qword [var_70h];mov rcx, qword [var_78h];mov rdx, qword [var_80h];mov qword [arg_c8h], rax": 1,
                "ja ;mov rdi, qword [arg_78h];mov qword [var_60h], rdi;mov qword [var_48h], rsi;add rdx, rdi": 2,
                "jmp sym.go.regexp.__Regexp_.ReplaceAllLiteralString.func1;int3;int3;int3;int3": 2,
                "mov rcx, qword [rdx + ];mov rdx, qword [rdx + 8];mov rbx, qword [arg_88h];test rbx, rbx;jbe ": 3,
                "cmp rbx, rcx;ja ;sub rbx, rdi;mov rcx, rbx;neg rbx": 3,
                "ja ;sub rbx, rdi;mov rcx, rbx;neg rbx;sar rbx, ": 3,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;mov rax, qword [rdx];call rax;mov rax, qword [var_18h]": 3,
                "mov qword [var_40h], rdi;add rcx, rdx;mov qword [rsp], rcx;mov qword [var_8h], rsi;mov qword [var_10h], rax": 6,
                "mov qword [arg_a8h], rax;mov rbp, qword [var_58h];add rsp, ;ret;mov qword [var_50h], rsi": 3,
                "mov rdx, qword [var_90h];jmp ;call sym.go.runtime.gcWriteBarrier;jmp ;call sym.go.runtime.morestack": 3,
                "jmp ;call sym.go.runtime.gcWriteBarrier;jmp ;call sym.go.runtime.morestack;jmp sym.go.regexp.__Regexp_.ReplaceAll.func1": 3,
                "mov qword [var_58h], rdi;mov qword [var_40h], rsi;add rcx, rdi;mov qword [rsp], rcx;mov qword [var_8h], rdx": 4,
                "mov qword [var_40h], rax;mov qword [var_50h], rdx;lea rax, [];mov qword [rsp], rax;mov rax, qword [arg_70h]": 3,
                "sar rdi, ;and rdi, rsi;add rcx, rdi;mov qword [rsp], rcx;sub rbx, rsi": 3,
                "je ;mov rbx, qword [arg_80h];test rbx, rbx;mov rcx, qword fs:[];cmp rsp, qword [rcx + ]": 1,
                "mov rbx, qword [arg_80h];test rbx, rbx;jbe ;mov rsi, qword [arg_78h];mov r8, qword [rsi]": 3,
                "mov r11, rcx;mov r9, rax;mov rax, qword [var_58h];mov rcx, rdi;jmp ": 3,
                "mov r9, rax;mov rax, qword [var_58h];mov rcx, rdi;jmp ;call sym.go.runtime.gcWriteBarrier": 3,
                "jmp ;call sym.go.runtime.panicslice;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "call sym.go.runtime.morestack;jmp sym.go.regexp.__Regexp_.FindAll.func1;int3;int3;int3": 2,
                "mov qword [var_48h], rbp;lea rbp, [var_48h];mov rcx, qword [rdx + 8];mov qword [var_40h], rcx;cmp qword [rcx], 0": 12,
                "mov rdx, qword [arg_68h];mov rbx, rcx;mov r8, rax;mov rcx, rdi;jmp ": 5,
                "jmp ;call sym.go.runtime.gcWriteBarrier;jmp ;lea rax, [];mov qword [rsp], rax": 15,
                "jmp sym.go.regexp.__Regexp_.FindAllIndex.func1;int3;int3;int3;int3": 2,
                "cmp qword [rdx], 0;je ;mov rsi, qword [arg_80h];test rsi, rsi;jbe ": 3,
                "cmp r11, rcx;ja ;lea rcx, [r10 + 1];mov qword [rdx + 8], rcx;shl r10, 4": 3,
                "mov qword [var_10h], r10;mov qword [var_18h], rcx;mov qword [var_20h], r11;call sym.go.runtime.growslice;mov rax, qword [var_28h]": 2,
                "mov rdx, rdi;mov r12, qword [var_48h];mov r10, rcx;mov r8, rax;mov rax, qword [var_58h]": 2,
                "ud2;call sym.go.runtime.morestack;jmp sym.go.regexp.__Regexp_.FindAllString.func1;int3;int3": 2,
                "mov qword [var_58h], rax;cmp qword [rax], 0;je ;lea rax, [];mov qword [rsp], rax": 3,
                "cmp qword [rax], 0;je ;lea rax, [];mov qword [rsp], rax;mov rax, qword [arg_78h]": 3,
                "lea rdi, [r9 + 1];cmp rdi, rsi;jge ;mov r8, rdi;shl rdi, 1": 3,
                "cmp dword [], 0;jne ;mov qword [rax + r13*8], r8;jmp ;mov rcx, qword fs:[]": 1,
                "mov qword [var_8h], 0;mov qword [var_10h], ;call sym.go.runtime.makeslice;mov rax, qword [var_18h];mov rdi, qword [var_58h]": 2,
                "lea rbx, [rdx + 1];mov rsi, qword [rcx];mov r8, qword [rcx + ];cmp rbx, r8;ja ": 6,
                "jne ;mov qword [rdi], rax;mov rdx, rcx;mov rsi, rax;mov rcx, rdi": 4,
                "xor r8d, r8d;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ;sub rsp, ": 1,
                "jmp ;inc r8;cmp r8, rdi;jge ;mov r9, r8": 2,
                "cmp r8, rcx;jae ;mov r8, r9;shl r9, 4;mov r10, qword [rdx + r9]": 2,
                "cmp dword [], 0;jne ;mov qword [rax + r9], r10;jmp ;mov r9, rdi": 2,
                "mov qword [r8 + rcx*8 + 8], rdi;mov qword [r8 + rcx*8 + ], rdi;lea rdi, [r8 + rcx*8];cmp dword [], 0;jne ": 2,
                "jne ;call sym.go.runtime.throwinit;ud2;mov byte [], 1;call sym.go.regexp_syntax.init": 2,
                "call sym.go.bytes.init;call sym.go.strconv.init;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "call sym.go.regexp.init.0;mov byte [], 2;mov rbp, qword [rsp];add rsp, 8;ret": 1,
                "mov qword [arg_8h], rax;mov byte [arg_18h], 0;jmp sym.go.regexp_syntax.__Inst_.MatchEmptyWidth;int3;int3": 1,
                "ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.type..hash.regexp.entry;int3;int3": 1,
                "mov rcx, qword [arg_38h];mov qword [var_8h], rcx;call sym.go.runtime.interhash;mov rax, qword [var_10h];mov rcx, qword [arg_30h]": 1,
                "sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h];mov rax, qword [rdx + 8];mov rcx, qword [rdx + ]": 3,
                "mov qword [rsp], rax;mov qword [var_8h], ;call sym.go.regexp.MustCompile;mov rax, qword [var_10h];cmp dword [], 0": 42,
                "call sym.go.regexp.init;call sym.go.runtime.init;call sym.go.strings.init;call sym.go.unicode.init;call sym.go.github.com_robertkrimen_otto_dbg.init.ializers": 2,
                "add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.type..hash.github.com_robertkrimen_otto_dbg._frmt;int3": 2,
                "mov qword [rsp], rax;call sym.go.runtime.gorecover;mov rax, qword [var_10h];mov rcx, qword [var_8h];test rcx, rcx": 6,
                "jne ;mov rcx, qword [arg_28h];mov qword [rcx], rdx;cmp dword [], 0;jne ": 1,
                "ret;lea rdi, [rcx + 8];mov rax, rbx;call sym.go.runtime.gcWriteBarrier;jmp ": 1,
                "ud2;call sym.go.runtime.morestack_noctxt;jmp sym.go.encoding_json.__encodeState_.marshal.func1;int3;int3": 1,
                "mov rax, qword [arg_58h];mov qword [var_18h], rax;movzx eax, byte [arg_60h];mov byte [var_20h], al;movzx eax, byte [arg_61h]": 2,
                "mov rbp, qword [var_30h];add rsp, ;ret;call sym.go.runtime.morestack;jmp sym.go.encoding_json.typeEncoder.func1": 2,
                "mov qword [var_10h], rsi;mov qword [var_18h], rax;call sym.go.runtime.cmpstring;cmp qword [var_20h], 0;setl byte [arg_48h]": 3,
                "mov rcx, qword [rax];mov rdx, qword [rax + 8];mov rax, qword [rax + ];mov rbx, qword [arg_68h];cmp rbx, rdx": 4,
                "mov rax, qword [var_50h];mov rcx, qword [var_40h];mov rdx, qword [rcx + rax + ];mov rbx, qword [var_48h];mov rsi, qword [rbx + rax + ]": 4,
                "mov qword [var_10h], rax;mov rax, qword [arg_68h];mov qword [var_18h], rax;mov rax, qword [arg_70h];mov qword [var_20h], rax": 7,
                "mov rbp, qword [var_58h];add rsp, ;ret;mov rcx, qword [var_50h];mov rsi, qword [var_40h]": 4,
                "lea rbp, [var_20h];lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 0;call sym.go.reflect.TypeOf": 4,
                "mov rcx, qword [var_18h];mov rax, qword [rax + ];mov qword [rsp], rcx;call rax;mov rax, qword [var_10h]": 6,
                "jmp ;call sym.go.runtime.morestack_noctxt;jmp sym.go.encoding_json.init.ializers;int3;int3": 2,
                "call sym.go.io.init;call sym.go.encoding_json.init.ializers;mov byte [], 2;mov rbp, qword [rsp];add rsp, 8": 1,
                "mov rsi, qword [arg_10h];cmp qword [rax + ], rsi;jbe ;lea rax, [rsi + rsi*2];shl rax, 4": 1,
                "setge byte [arg_18h];mov rbp, qword [rsp];add rsp, 8;ret;setge byte [arg_18h]": 1,
                "mov rax, qword [var_28h];mov rcx, qword [var_30h];mov qword [rsp], 0;mov rdx, qword [var_40h];mov qword [var_8h], rdx": 1,
                "mov qword [var_20h], rcx;call sym.go.runtime.concatstring2;mov rax, qword [var_28h];mov rcx, qword [var_30h];test rcx, rcx": 1,
                "call sym.go.runtime.concatstring2;mov rax, qword [var_28h];mov rcx, qword [var_30h];test rcx, rcx;lea rdx, []": 1,
                "mov qword [var_40h], rcx;lea rax, [];mov qword [rsp], rax;call sym.go.runtime.newobject;mov rax, qword [var_8h]": 1,
                "jne ;mov rcx, qword [arg_78h];mov qword [rax + ], rcx;mov rcx, qword [var_40h];mov qword [rax + ], rcx": 1,
                "ja ;lea rsi, [rbx + 1];mov qword [rdx + 8], rsi;lea rdi, [r8 + rbx*8];cmp dword [], 0": 1,
                "ret;call sym.go.runtime.gcWriteBarrier;lea rdi, [rdx + ];call sym.go.runtime.gcWriteBarrier;jmp ": 1,
                "jne ;mov qword [rdi], rax;mov rdx, rdi;mov rbx, rcx;mov r8, rax": 1,
                "jmp sym.go.github.com_robertkrimen_otto_ast.__Comments_.FetchAll.func1;int3;int3;int3;int3": 1,
                "mov rax, qword [var_18h];inc rax;cmp rax, 4;jl ;mov qword [arg_40h], rcx": 2,
                "inc rax;cmp rax, 4;jl ;mov qword [arg_40h], rcx;mov rbp, qword [var_20h]": 2,
                "jl ;mov qword [arg_40h], rcx;mov rbp, qword [var_20h];add rsp, ;ret": 2,
                "mov qword [var_8h], rsi;mov qword [var_10h], r8;call sym.go.runtime.efaceeq;cmp byte [var_18h], 0;jne ": 2,
                "cmp byte [var_18h], 0;jne ;mov byte [arg_48h], 0;mov rbp, qword [var_28h];add rsp, ": 2,
                "add rsp, ;ret;mov byte [arg_48h], 1;mov rbp, qword [var_28h];add rsp, ": 2,
                "jg ;cmp rax, 6;jne ;lea rax, [];mov ecx, 2": 2,
                "cmp rax, 8;jne ;lea rax, [];mov ecx, 2;jmp ": 2,
                "jmp ;cmp rax, 9;jne ;lea rax, [];mov ecx, 3": 2,
                "jne ;lea rax, [];mov ecx, 3;jmp ;cmp rax, ": 2,
                "mov ecx, 4;jmp ;call sym.go.runtime.panicwrap;ud2;lea rdi, [arg_10h]": 1,
                "mov rcx, qword [arg_38h];mov qword [var_8h], rcx;mov qword [var_10h], 8;call sym.go.runtime.memhash;mov rax, qword [var_18h]": 1,
                "mov rcx, qword [arg_30h];lea rdx, [rcx + 8];mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "cmp dword [], 0;jne ;mov qword [rdx + 8], rax;mov rbp, qword [var_50h];add rsp, ": 1,
                "jmp ;xor edx, edx;jmp ;mov rbp, qword [var_50h];add rsp, ": 1,
                "mov rax, qword [var_10h];mov qword [var_48h], rax;mov rcx, qword [arg_b8h];mov qword [rsp], rcx;call sym.go.runtime.convT64": 1,
                "mov qword [var_48h], rax;mov rcx, qword [arg_b8h];mov qword [rsp], rcx;call sym.go.runtime.convT64;mov rax, qword [var_8h]": 1,
                "call sym.go.runtime.convT64;mov rax, qword [var_8h];mov qword [var_40h], rax;mov rcx, qword [arg_c0h];mov qword [rsp], rcx": 1,
                "mov rax, qword [var_8h];mov qword [var_40h], rax;mov rcx, qword [arg_c0h];mov qword [rsp], rcx;call sym.go.runtime.convT64": 1,
                "mov qword [var_50h], rcx;mov rdx, qword [var_48h];mov qword [var_58h], rdx;lea rdx, [];mov qword [var_60h], rdx": 1,
                "mov rcx, qword [var_28h];mov qword [arg_d8h], rcx;mov qword [arg_e0h], rax;mov rbp, qword [var_90h];add rsp, ": 1,
                "mov rax, qword [arg_100h];mov qword [var_10h], rax;mov rax, qword [arg_108h];mov qword [var_18h], rax;mov rax, qword [arg_110h]": 1,
                "mov qword [var_20h], rax;call sym.go.fmt.Sprintf;mov rax, qword [arg_d8h];test byte [rax], al;mov rcx, qword [var_30h]": 1,
                "mov rcx, qword [var_48h];mov qword [rax + ], rcx;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rax, qword [rdx + ];mov rcx, qword [rdx + ];mov qword [var_58h], rcx;mov rbx, qword [rdx + ];mov qword [var_50h], rbx": 2,
                "mov rax, qword [arg_a0h];mov qword [var_20h], rax;mov qword [var_28h], rdx;mov qword [var_30h], rbx;mov rax, qword [var_50h]": 2,
                "mov qword [var_28h], rdx;mov qword [var_30h], rbx;mov rax, qword [var_50h];mov qword [var_38h], rax;mov rax, qword [var_58h]": 2,
                "mov rcx, qword [rcx];mov qword [rsp], r9;mov qword [var_8h], rdx;mov qword [var_10h], rdi;mov qword [var_18h], r8": 3,
                "mov rsi, qword [arg_70h];mov qword [var_18h], rsi;mov rsi, qword [arg_78h];mov qword [var_20h], rsi;mov qword [var_28h], rax": 4,
                "mov qword [var_38h], rcx;mov qword [var_40h], rbx;call sym.go.encoding_gob.__Decoder_.decodeSlice;mov rbp, qword [var_48h];add rsp, ": 4,
                "mov rax, qword [rdx + ];mov rcx, qword [rdx + 8];mov rax, qword [rax];mov qword [rsp], rcx;mov qword [var_8h], rax": 5,
                "mov rbp, qword [var_38h];add rsp, ;ret;call sym.go.runtime.morestack;jmp sym.go.encoding_gob.__Decoder_.decOpFor.func5": 6,
                "mov qword [var_18h], rcx;call sym.go.encoding_gob.__Decoder_.ignoreArray;mov rbp, qword [var_20h];add rsp, ;ret": 7,
                "mov qword [var_8h], rdx;mov qword [var_10h], rax;mov qword [var_18h], rcx;call sym.go.encoding_gob.__Decoder_.ignoreMap;mov rbp, qword [var_20h]": 7,
                "sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h];mov rax, qword [rdx + 8];mov rcx, qword [arg_30h]": 8,
                "mov rcx, qword [rcx];mov rax, qword [rax];mov qword [rsp], rcx;mov qword [var_8h], rax;mov rcx, qword fs:[]": 1,
                "mov qword [var_8h], rax;call sym.go.encoding_gob.__Decoder_.ignoreStruct;mov rbp, qword [var_10h];add rsp, ;ret": 8,
                "call sym.go.runtime.morestack;jmp sym.go.encoding_gob.__Decoder_.decIgnoreOpFor.func5;int3;int3;int3": 8,
                "mov rdx, qword [arg_58h];mov rbx, qword [arg_50h];mov rdi, qword [rbx];mov qword [rsp], rdi;mov qword [var_8h], rax": 9,
                "mov qword [var_8h], rax;mov qword [var_10h], rbx;mov qword [var_18h], rdx;mov qword [var_20h], rcx;mov qword [var_28h], rsi": 9,
                "test sil, sil;jne ;mov rsi, qword [arg_70h];test rsi, rsi;jne ": 8,
                "mov rdx, qword [rdx];mov rbx, qword [var_18h];mov qword [rsp], rcx;mov qword [var_8h], rax;mov rax, qword [arg_80h]": 14,
                "mov rbx, qword [arg_78h];jmp ;call sym.go.runtime.morestack;jmp sym.go.encoding_gob.encOpFor.func1;int3": 6,
                "jmp sym.go.encoding_gob.encOpFor.func2;int3;int3;int3;int3": 4,
                "mov rbp, qword [var_70h];add rsp, ;ret;bt r8d, 7;jae ": 3,
                "call sym.go.runtime.gcWriteBarrier;jmp ;lea r9, [rdi - ];cmp r9, 1;jbe ": 2,
                "jne ;test byte [rax], al;xorps xmm0, xmm0;movups xmmword [var_38h], xmm0;mov rcx, qword [rax + ]": 3,
                "mov rcx, qword [rax + ];test rcx, rcx;je ;mov rdx, rcx;cmp rcx, ": 3,
                "movups xmmword [var_38h], xmm0;mov rax, qword [var_40h];mov rcx, qword [var_38h];lea rdx, [];cmp rcx, rdx": 3,
                "mov rcx, qword [rcx + 8];mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax;mov rax, qword [arg_68h]": 3,
                "sub rsp, ;mov qword [var_30h], rbp;lea rbp, [var_30h];mov rax, qword [arg_48h];cmp byte [rax + ], 0": 3,
                "cmp rcx, ;ja ;lea rbx, [rcx - ];cmp rbx, 1;ja ": 3,
                "lea rbx, [rcx - ];cmp rbx, 1;ja ;bt edx, 9;jae ": 3,
                "je ;mov rbp, qword [var_30h];add rsp, ;mov rcx, qword fs:[];cmp rsp, qword [rcx + ]": 1,
                "cmp rcx, ;jne ;mov rbx, qword [arg_58h];cmp qword [rbx], 0;sete cl": 2,
                "cmp qword [rbx], 0;sete cl;jmp ;lea rax, [];mov qword [rsp], rax": 2,
                "sete cl;jmp ;lea rax, [];mov qword [rsp], rax;call sym.go.runtime.newobject": 2,
                "je ;cmp rcx, ;je ;jmp ;mov rdx, rcx": 2,
                "jmp ;mov rax, qword [var_28h];mov qword [rdi + ], rax;lea rax, [];mov qword [rsp], rax": 2,
                "jmp sym.go.encoding_gob.encOpFor.func5;int3;int3;int3;int3": 2,
                "mov rcx, qword [rdx + ];mov rdx, qword [rdx + ];cmp byte [rax + ], ;jne ;mov rbx, qword [arg_78h]": 3,
                "cmp byte [rax + ], ;jne ;mov rbx, qword [arg_78h];bt ebx, 8;jae ": 3,
                "mov rax, qword [arg_70h];mov qword [var_8h], rax;mov qword [var_10h], rbx;call sym.go.reflect.Value.Addr;mov rax, qword [var_20h]": 3,
                "mov qword [var_8h], rbx;mov rbx, qword [var_30h];mov qword [var_10h], rbx;mov qword [var_18h], rcx;mov qword [var_20h], rax": 3,
                "mov rbx, qword [var_30h];mov qword [var_10h], rbx;mov qword [var_18h], rcx;mov qword [var_20h], rax;mov qword [var_28h], rdx": 3,
                "mov qword [], rcx;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;mov qword [var_10h], 0": 2,
                "cmp dword [], 0;jne ;lea rax, [];mov qword [rdi], rax;lea rax, []": 22,
                "mov qword [rsp], rax;mov rcx, qword [var_50h];mov qword [var_8h], rcx;mov qword [var_10h], ;call sym.go.runtime.mapassign_fast64": 12,
                "mov rcx, qword fs:[];lea rax, [rsp - 8];cmp rax, qword [rcx + ];jbe ;sub rsp, ": 7,
                "lea rax, [rsp - 8];cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_80h], rbp": 7,
                "movzx edx, byte [var_3fh];mov rbx, qword [var_68h];mov rdi, qword [arg_a0h];cmp rsi, rdi;jge ": 1,
                "jge ;mov qword [var_60h], rsi;mov rcx, qword [arg_98h];mov rdx, qword [rcx + rsi*8];mov rbx, qword [rdx]": 1,
                "mov rcx, qword [arg_98h];mov rdx, qword [rcx + rsi*8];mov rbx, qword [rdx];mov qword [var_70h], rbx;mov rdi, qword [rdx + 8]": 1,
                "add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.github.com_robertkrimen_otto.___runtime_.cmpl_functionDeclarati;int3": 1,
                "mov rax, qword [rax + ];movzx ecx, byte [rax + ];mov rdx, qword [rax + ];mov rax, qword [rax + ];mov rbx, qword [arg_90h]": 1,
                "mov rax, qword [rax + ];mov rbx, qword [arg_90h];test rbx, rbx;jle ;mov byte [var_3fh], cl": 1,
                "mov rdi, rax;mov rax, qword [var_40h];mov qword [var_68h], rsi;mov qword [var_50h], rdi;mov rcx, qword [rsi]": 1,
                "mov qword [var_60h], rcx;mov rbx, qword [rsi + 8];mov qword [var_48h], rbx;mov r8, qword [rax + ];mov qword [rsp], rdx": 1,
                "movzx ebx, byte [var_3fh];mov byte [var_18h], bl;mov qword [var_20h], 0;xorps xmm0, xmm0;movups xmmword [var_28h], xmm0": 1,
                "movups xmmword [var_28h], xmm0;call rcx;jmp ;call sym.go.runtime.morestack_noctxt;jmp sym.go.github.com_robertkrimen_otto.___runtime_.cmpl_variableDeclarati": 1,
                "mov qword [var_c8h], rbp;lea rbp, [var_c8h];mov rax, qword [arg_d8h];mov rcx, qword [rax + ];cmp qword [rcx], 0": 1,
                "mov qword [var_88h], rsi;mov rdi, qword [rcx + 8];mov rcx, qword [rcx];mov rdx, qword [rdx];mov qword [rsp], rax": 1,
                "mov qword [rsp], rax;call sym.go.runtime.newobject;mov rax, qword [var_8h];movups xmm0, xmmword [];movups xmmword [rax], xmm0": 1,
                "call sym.go.runtime.newobject;mov rax, qword [var_8h];mov word [rax], ;mov byte [rax + 2], ;mov qword [arg_78h], rax": 3,
                "mov rax, qword [var_18h];mov rcx, qword [var_20h];mov rdx, qword [var_28h];mov qword [arg_78h], rax;mov qword [arg_80h], rcx": 3,
                "ud2;call sym.go.runtime.morestack_noctxt;jmp sym.go.github.com_robertkrimen_otto._builtinGlobal_encodeURI.func1;int3;int3": 3,
                "call fcn.00458a0c;mov rbp, qword [rbp];mov rcx, qword [var_b8h];mov qword [rsp], rcx;lea rdi, [var_8h]": 3,
                "mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458a0c;mov rbp, qword [rbp];mov qword [var_68h], rax": 3,
                "jne ;mov rax, qword [var_98h];mov rcx, qword [rax + ];mov rdx, qword [rcx + ];mov qword [rsp], rax": 3,
                "call rax;mov byte [arg_140h], 1;mov rbp, qword [var_120h];add rsp, ;ret": 3,
                "mov byte [var_30h], 0;mov rax, qword [rbx];mov rdx, rbx;call rax;jmp ": 3,
                "sub rsp, ;mov qword [var_178h], rbp;lea rbp, [var_178h];mov rax, qword [rdx + ];mov rcx, qword [rdx + ]": 5,
                "mov qword [var_178h], rbp;lea rbp, [var_178h];mov rax, qword [rdx + ];mov rcx, qword [rdx + ];mov qword [var_d8h], rcx": 5,
                "mov rdx, qword [var_e0h];mov qword [rsp], rdx;lea rdi, [var_8h];lea rsi, [var_e8h];mov qword [rsp - ], rbp": 5,
                "lea rsi, [var_e8h];mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.004589e2;mov rbp, qword [rbp]": 5,
                "cmp byte [var_c0h], 0;jne ;mov byte [arg_198h], 1;mov rbp, qword [var_178h];add rsp, ": 5,
                "mov qword [var_50h], rbp;lea rbp, [var_50h];mov qword [var_48h], rdx;mov rax, qword [rdx + ];mov rcx, qword [rax + ]": 6,
                "mov rdx, rcx;call rdi;mov rax, qword [var_48h];mov rax, qword [rax + 8];mov rcx, qword [var_28h]": 6,
                "mov rbx, qword [var_20h];mov rsi, qword [var_18h];mov qword [rsp], rax;mov qword [var_8h], rsi;mov qword [var_10h], rbx": 6,
                "mov rax, qword [var_40h];mov rcx, qword [rax + ];mov rbx, qword [var_28h];mov rsi, qword [var_20h];mov rdi, qword [var_30h]": 6,
                "mov rbp, qword [var_50h];add rsp, ;ret;call sym.go.runtime.morestack;jmp sym.go.github.com_robertkrimen_otto.builtinObject_defineProperties.fun": 3,
                "mov rbx, qword [rdx + ];mov qword [var_20h], rbx;mov rdx, qword [rcx + 8];mov qword [rsp], rax;mov rax, qword [arg_38h]": 8,
                "call rax;mov rax, qword [var_18h];mov rax, qword [rax + ];mov rcx, qword fs:[];lea rax, [rsp - ]": 1,
                "mov rbx, rcx;and rcx, 7;cmp rcx, 1;je ;mov byte [arg_68h], 1": 3,
                "jmp ;call sym.go.runtime.morestack;jmp sym.go.github.com_robertkrimen_otto.builtinObject_isFrozen.func1;int3;int3": 4,
                "mov rbp, qword [var_48h];add rsp, ;ret;mov rcx, qword [var_40h];mov rbx, qword [rcx + ]": 4,
                "mov qword [var_10h], rcx;mov qword [var_18h], rax;mov qword [var_20h], rdi;mov qword [var_28h], rsi;mov byte [var_30h], 1": 4,
                "mov rcx, qword [arg_60h];mov qword [rsp], rcx;mov rcx, qword [arg_68h];mov qword [var_8h], rcx;call sym.go.runtime.convTstring": 4,
                "lea rcx, [rcx + rcx*2];mov qword [rsi + rcx*8], 3;lea rdx, [];mov qword [rsi + rcx*8 + 8], rdx;lea rdx, [rsi + rcx*8]": 4,
                "jmp ;mov qword [var_40h], rdi;lea rax, [];mov rcx, qword fs:[];cmp rsp, qword [rcx + ]": 1,
                "mov rax, rdi;mov rdi, qword [var_40h];jmp ;call sym.go.runtime.gcWriteBarrier;jmp ": 4,
                "lea rdx, [rbx + rcx*8];lea rdx, [rdx + ];cmp dword [], 0;jne ;mov qword [rbx + rcx*8 + ], rdi": 2,
                "call sym.go.runtime.morestack;jmp sym.go.github.com_robertkrimen_otto.builtinObject_getOwnPropertyNames.;int3;int3;int3": 1,
                "mov qword [rsp], rax;call sym.go.runtime.newobject;mov rax, qword [var_8h];mov qword [arg_70h], rax;xorps xmm0, xmm0": 1,
                "mov rdx, qword [var_40h];mov rbx, qword [rdx + ];mov rsi, qword [rdx + ];cmp rax, rsi;jae ": 1,
                "cmp rax, rsi;jae ;mov rcx, qword fs:[];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "lea rsi, [];cmp rsi, rbx;jne ;movups xmm0, xmmword [rdx];movups xmmword [var_118h], xmm0": 1,
                "movups xmmword [var_a8h], xmm0;movups xmm0, xmmword [var_138h];movups xmmword [var_b8h], xmm0;movups xmm0, xmmword [var_148h];movups xmmword [var_c8h], xmm0": 1,
                "movups xmm0, xmmword [var_148h];movups xmmword [var_c8h], xmm0;je ;cmp ecx, ;jne ": 1,
                "jne ;lea rcx, [];cmp rcx, rbx;jne ;mov rcx, qword [rax + ]": 1,
                "je ;mov rcx, qword [rax + ];mov rax, qword [rax + ];test rax, rax;je ": 1,
                "jne ;movups xmm0, xmmword [var_58h];movups xmmword [rax], xmm0;movups xmm0, xmmword [var_68h];movups xmmword [rax + ], xmm0": 1,
                "lea rcx, [var_58h];mov qword [var_10h], rcx;call sym.go.runtime.typedmemmove;mov rax, qword [var_50h];jmp ": 1,
                "mov edx, 0;mov edi, 0;jmp ;mov rax, rdx;mov edx, 0": 1,
                "jmp ;mov rax, rdx;jmp ;lea rax, [];mov qword [rsp], rax": 1,
                "mov rax, rdx;jmp ;lea rax, [];mov qword [rsp], rax;call sym.go.runtime.newobject": 1,
                "lea rcx, [var_98h];mov qword [var_10h], rcx;call sym.go.runtime.typedmemmove;mov rax, qword [var_50h];jmp ": 1,
                "mov rax, qword [arg_58h];mov qword [var_8h], rax;mov rax, qword [arg_60h];mov qword [var_10h], rax;call sym.go.github.com_robertkrimen_otto.Value.float64": 10,
                "movsd xmm1, qword [var_20h];ucomisd xmm1, xmm0;sete cl;setnp al;and ecx, eax": 10,
                "mov rbp, qword [var_28h];add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.github.com_robertkrimen_otto.makeEqualDispatch.func2": 2,
                "add rsp, ;ret;call sym.go.runtime.morestack;jmp sym.go.github.com_robertkrimen_otto.New.func1;int3": 5,
                "ret;call sym.go.runtime.morestack;jmp sym.go.github.com_robertkrimen_otto.New.func1;int3;int3": 5,
                "call sym.go.runtime.morestack;jmp sym.go.github.com_robertkrimen_otto.New.func1;int3;int3;int3": 5,
                "mov qword [var_8h], rdx;mov qword [var_10h], rbx;mov byte [var_18h], 0;call sym.go.github.com_robertkrimen_otto.___objectStash_.getBinding;mov rax, qword [var_30h]": 6,
                "mov qword [rbx], rdx;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ;sub rsp, ": 1,
                "mov rbx, qword [rdx + ];mov rsi, qword [rdx + ];mov rdi, qword [rdx + ];mov rdx, qword [rdx + ];mov rax, qword [rax + ]": 6,
                "mov rax, qword [rax + ];mov qword [rsp], rax;mov qword [var_8h], rbx;mov qword [var_10h], rcx;mov qword [var_18h], rdx": 6,
                "mov rbp, qword [var_38h];add rsp, ;ret;call sym.go.runtime.morestack;jmp sym.go.github.com_robertkrimen_otto.Otto.Set.func1": 6,
                "cmp dword [], 0;jne ;mov qword [rcx + ], rax;mov rbp, qword [rsp];add rsp, 8": 10,
                "mov qword [var_40h], rcx;mov rbx, qword [rdx + ];mov rsi, qword [rdx + ];mov rdi, qword [rdx + ];mov rdx, qword [rdx + ]": 7,
                "mov rcx, qword [var_28h];mov rdx, qword [var_30h];mov rbx, qword [var_40h];mov qword [rbx], rcx;mov qword [rbx + 8], rdx": 6,
                "mov qword [rsp], rax;mov qword [var_8h], rdi;mov qword [var_10h], rsi;mov rcx, qword fs:[];cmp rsp, qword [rcx + ]": 1,
                "mov rsi, qword [var_30h];mov qword [rsi], rcx;mov qword [rsi + 8], rax;cmp dword [], 0;jne ": 6,
                "mov qword [rsi + 8], rax;cmp dword [], 0;jne ;mov qword [rsi + ], rbx;mov rbp, qword [var_38h]": 6,
                "cmp dword [], 0;jne ;mov rax, qword [arg_58h];mov qword [r8 + rdx], rax;mov byte [arg_68h], 1": 12,
                "mov rax, qword [arg_58h];call sym.go.runtime.gcWriteBarrier;jmp ;mov qword [var_40h], rcx;lea rax, []": 12,
                "jne ;mov rdx, rax;jne ;mov rcx, qword [rax + 8];mov rdx, qword [rax]": 5,
                "movups xmm0, xmmword [var_c0h];movups xmmword [var_80h], xmm0;movups xmm0, xmmword [var_d0h];movups xmmword [var_90h], xmm0;movups xmm0, xmmword [var_e0h]": 5,
                "movups xmmword [var_50h], xmm0;movups xmm0, xmmword [var_a0h];movups xmmword [var_60h], xmm0;movups xmm0, xmmword [var_b0h];movups xmmword [var_70h], xmm0": 4,
                "call sym.go.runtime.gcWriteBarrier;jmp ;mov qword [rsp], rcx;mov qword [var_8h], rax;call sym.go.runtime.convTstring": 3,
                "mov r8, qword [rcx];jne ;mov rcx, qword [arg_110h];mov byte [rcx], 1;mov rcx, qword [arg_120h]": 3,
                "movups xmmword [var_f0h], xmm0;jmp ;lea rdi, [rax + 8];xor eax, eax;call sym.go.runtime.gcWriteBarrier": 2,
                "call sym.go.runtime.gcWriteBarrier;jmp ;mov rax, rdx;mov rdx, rcx;mov rcx, rax": 2,
                "mov qword [var_8h], rbx;mov qword [var_10h], rcx;call sym.go.github.com_robertkrimen_otto.___runtime_.toValue;mov rax, qword [var_18h];mov rcx, qword [var_28h]": 3,
                "mov qword [rbx + 8], rdx;cmp dword [], 0;jne ;mov qword [rbx + ], rcx;mov rbp, qword [var_38h]": 4,
                "mov rdi, qword [rsp + ];mov qword [rsp], rdi;mov qword [rsp + 8], rax;mov qword [rsp + ], rdx;mov qword [rsp + ], rcx": 2,
                "mov rbp, qword [rsp + ];add rsp, ;ret;call sym.go.runtime.gcWriteBarrier;add rdi, 8": 2,
                "ret;call sym.go.runtime.gcWriteBarrier;add rdi, 8;mov rax, rcx;call sym.go.runtime.gcWriteBarrier": 3,
                "mov rbx, qword [rdx + ];mov qword [rsp + ], rbx;mov rsi, qword [rdx + ];mov qword [rsp + ], rsi;mov rdi, qword [rsp + ]": 1,
                "and ebx, ;mov rdi, rbx;bts rbx, 7;test sil, ;cmove rdi, rbx": 1,
                "mov rbx, qword [rsp + ];mov qword [rsp + ], rbx;mov rbx, qword [rdx];call rbx;mov rax, qword [rsp + ]": 1,
                "mov rax, qword [rax + ];mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;mov rbx, qword [rsp + ];mov qword [rsp + ], rbx": 1,
                "mov qword [rsp + ], rax;call sym.go.github.com_robertkrimen_otto.___runtime_.convertCallParameter;mov rax, qword [rsp + ];mov rcx, qword [rax + 8];mov rbx, qword [rax + ]": 1,
                "mov r8, qword [rsp + ];mov qword [rsp], rcx;mov qword [rsp + 8], rax;mov qword [rsp + ], rbx;mov rax, qword [rsp + ]": 1,
                "mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax": 1,
                "mov qword [rsp + ], rsi;call sym.go.reflect.Value.SetMapIndex;mov byte [rsp + ], 1;mov rbp, qword [rsp + ];add rsp, ": 1,
                "jl ;mov rdx, qword [rsp + ];mov rbx, qword [rdx + ];mov rsi, qword [rdx + ];mov rdx, qword [rdx + 8]": 1,
                "test rcx, rcx;jle ;mov qword [var_118h], rax;mov qword [var_c0h], rcx;xor ebx, ebx": 2,
                "lea rdi, [rsi - 1];mov qword [var_b8h], rdi;cmp rbx, rdi;jge ;xor r8d, r8d": 2,
                "call rax;mov rax, qword [var_10h];mov rcx, qword [var_8h];mov rdx, qword [var_b0h];mov qword [var_e0h], rax": 2,
                "mov rcx, qword [var_98h];mov rdx, qword [var_b8h];cmp rcx, rdx;je ;mov rax, qword [var_118h]": 2,
                "mov qword [rsp], rsi;mov qword [var_8h], rcx;mov qword [var_10h], rbx;mov qword [var_18h], rdx;mov rcx, qword [var_80h]": 2,
                "mov qword [r9 + r8*8], rdx;mov qword [r9 + r8*8 + 8], rcx;lea rcx, [rbx + 1];mov rdx, qword [var_c0h];cmp rcx, rdx": 2,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], rdx;mov qword [var_18h], r9;mov qword [var_20h], rsi": 2,
                "mov rax, qword [var_18h];mov qword [var_100h], rax;mov rcx, qword [var_108h];xor edx, edx;jmp ": 2,
                "mov qword [var_150h], rdx;lea rax, [];mov qword [rsp], rax;lea rcx, [var_140h];mov rcx, qword fs:[]": 1,
                "lea rcx, [];mov qword [var_8h], rcx;mov qword [var_10h], rax;call sym.go.github.com_robertkrimen_otto.___runtime_.toValue;mov rax, qword [var_20h]": 1,
                "mov qword [var_30h], rbx;mov rdx, qword [rdx + 8];mov qword [rsp], rdx;mov qword [var_8h], rax;mov byte [var_10h], cl": 1,
                "xorps xmm0, xmm0;movsd qword [arg_40h], xmm0;mov byte [arg_48h], 1;mov rbp, qword [var_20h];add rsp, ": 2,
                "movups xmmword [var_60h], xmm0;movups xmmword [var_70h], xmm0;movups xmmword [var_80h], xmm0;mov rcx, qword [rax + ];mov rax, qword [rax + ]": 3,
                "jmp ;mov rdx, qword [rdx + ];test rdx, rdx;je ;mov rbx, qword [rdx + ]": 5,
                "mov rbp, qword [var_30h];add rsp, ;ret;mov qword [rsp], rax;mov qword [var_8h], rcx": 5,
                "add rsp, ;ret;mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rdx": 6,
                "mov qword [rcx + ], rax;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ;sub rsp, 8": 1,
                "sub rsp, ;mov qword [var_70h], rbp;lea rbp, [var_70h];mov rax, qword [rdx + ];mov qword [var_68h], rax": 7,
                "mov r10, qword [rdx + ];mov r11, qword [rdx + ];mov rdx, qword [rdx + ];mov qword [rsp], rbx;mov qword [var_8h], rcx": 3,
                "mov rbp, qword [var_70h];add rsp, ;ret;lea rdi, [rbx + ];mov rax, rdx": 7,
                "mov rbx, qword [rdx + 8];mov rsi, qword [rdx + ];mov rdi, qword [rdx + ];mov r8, qword [rdx + ];mov r9, qword [rdx + ]": 4,
                "mov rcx, qword [var_18h];mov rdi, qword [var_28h];mov qword [rdi + 8], rax;cmp dword [], 0;jne ": 11,
                "mov rbp, qword [var_30h];add rsp, ;ret;mov rax, rcx;call sym.go.runtime.gcWriteBarrier": 11,
                "mov rcx, qword [var_20h];mov byte [rcx], al;mov rbp, qword [var_28h];add rsp, ;ret": 6,
                "mov qword [var_10h], rbx;call sym.go.github.com_robertkrimen_otto.Value.float64;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rax, qword [arg_58h];mov qword [var_8h], rax;mov rcx, qword [arg_60h];mov qword [var_10h], rcx;mov rsi, qword [rdx]": 7,
                "ret;mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], rax;call sym.go.github.com_robertkrimen_otto.Value.export": 6,
                "mov rax, qword [var_10h];cmp dword [], 0;jne ;mov qword [], rax;mov byte [rsp], 1": 4,
                "jne ;mov qword [], rax;call sym.go.math.NaN;movsd xmm0, qword [rsp];movsd qword [], xmm0": 3,
                "movabs rax, ;mov qword [rsp], rax;call sym.go.math.Float64frombits;movsd xmm0, qword [var_8h];movsd qword [], xmm0": 2,
                "call sym.go.runtime.mapassign_fast64;mov rax, qword [var_18h];mov byte [rax], 0;lea rax, [];mov qword [rsp], rax": 3,
                "mov qword [], rax;call sym.go.runtime.makemap_small;mov rcx, qword fs:[];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "mov qword [var_70h], rax;mov rcx, qword [rdx + ];mov qword [var_60h], rcx;mov rdx, qword [rdx + 8];mov qword [var_78h], rdx": 15,
                "mov rdx, qword [rdx + 8];mov qword [var_78h], rdx;mov rdi, rsp;lea rsi, [arg_a8h];mov qword [rsp - ], rbp": 15,
                "mov qword [var_78h], rdx;mov rdi, rsp;lea rsi, [arg_a8h];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 15,
                "call sym.go.runtime.convTstring;mov rax, qword [var_10h];mov qword [var_88h], rax;mov rcx, qword [var_90h];mov qword [rsp], rcx": 15,
                "jmp ;lea rdi, [rax + 8];mov rdx, rax;mov rax, qword [var_88h];call sym.go.runtime.gcWriteBarrier": 11,
                "mov rax, qword [var_80h];call sym.go.runtime.gcWriteBarrier;mov rcx, qword fs:[];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 3,
                "call sym.go.runtime.throwinit;ud2;mov byte [], 1;call sym.go.fmt.init;call sym.go.github.com_robertkrimen_otto.init": 2,
                "mov qword [var_8h], rcx;mov qword [var_10h], rdx;call sym.go.runtime.memequal;movzx eax, byte [var_18h];jmp ": 1,
                "jmp sym.go.type..eq.github.com_gen0cide_gscript_engine.NativeField;int3;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov qword [var_8h], rcx;call sym.go.runtime.strhash;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rcx, qword [arg_18h];test rcx, rcx;jl ;test byte [rax], al;mov rdx, rcx": 1,
                "cmp rcx, 3;jae ;mov ebx, dword [rax + rcx*4];bt ebx, edx;jae ": 1,
                "mov qword [arg_8h], rax;jmp sym.go.sync.__Mutex_.Unlock;int3;int3;int3": 1,
                "mov dword [rsp], ;mov rax, qword [];mov rcx, qword [];mov rdx, qword [];mov qword [var_8h], rax": 9,
                "mov rdx, qword [];mov rbx, qword [];mov rsi, qword [];mov qword [var_8h], rsi;mov qword [var_10h], rbx": 8,
                "mov qword [rsp], rdx;mov rdx, qword [var_40h];mov qword [var_8h], rdx;mov rdx, qword [var_58h];mov qword [var_10h], rdx": 1,
                "mov rdx, qword [var_40h];mov qword [var_8h], rdx;mov rdx, qword [var_58h];mov qword [var_10h], rdx;mov rdx, qword [var_48h]": 1,
                "mov rdx, qword [var_48h];mov qword [var_18h], rdx;movabs rdx, ;mov qword [var_20h], rdx;mov qword [var_28h], rax": 1,
                "mov rbp, qword [var_68h];add rsp, ;ret;mov rax, qword [var_50h];call sym.go.runtime.gcWriteBarrier": 1,
                "ret;mov rax, qword [var_50h];call sym.go.runtime.gcWriteBarrier;jmp ;call sym.go.runtime.morestack_noctxt": 1,
                "mov qword [var_30h], rbp;lea rbp, [var_30h];mov dword [rsp], ;mov rax, qword [];mov rcx, qword []": 1,
                "mov rbx, qword [];mov rsi, qword [];mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rsi": 6,
                "mov qword [arg_58h], rax;mov qword [arg_60h], rcx;mov rbp, qword [var_40h];add rsp, ;ret": 6,
                "mov rbp, qword [var_40h];add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.main.__LNXYSCEEWLYHMX_.DZUEOXSTYHID.func2": 2,
                "jmp sym.go.main.main.func3.1;int3;int3;int3;int3": 6,
                "mov qword [var_18h], rdx;call sym.go.main.g;mov rax, qword [var_20h];mov qword [var_60h], rax;mov rcx, qword [var_28h]": 7,
                "mov rcx, qword [rcx + 8];mov qword [var_50h], rcx;lea rax, [];mov qword [rsp], rax;call sym.go.runtime.newobject": 12,
                "mov qword [rsp], rcx;mov rcx, qword [var_60h];mov qword [var_8h], rcx;mov rcx, qword [var_38h];mov qword [var_10h], rcx": 9,
                "call sym.go.runtime.gcWriteBarrier;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ;sub rsp, ": 1,
                "mov rax, qword [var_40h];call sym.go.runtime.gcWriteBarrier;mov rax, rcx;mov rcx, qword fs:[];cmp rsp, qword [rcx + ]": 1,
                "insb byte [rdi], dx;add byte [rax], al;invalid;outsd dx, dword [esi];push rsp": 1,
                "add byte [rsi], al;imul esi, dword [rbx + ], ;add byte [rsi], al;imul esi, dword [rbx + ], ;add byte [rsi], al": 4,
                "outsd dx, dword [rsi];movsxd rsp, dword [rcx + ];jae ;add byte [rsi], al;insb byte [rdi], dx": 1,
                "jae ;add byte [rsi], al;insb byte [rdi], dx;outsd dx, dword [rsi];jb ": 1,
                "insb byte [rdi], dx;outsd dx, dword [rsi];outsd dx, dword [rsi];imul esi, dword [rbp + ], 0;add byte [rsi], al": 1,
                "outsb dx, byte [rsi];insb byte [rdi], dx;insd dword [rdi], dx;jae ;add byte [rsi], al": 1,
                "insd dword [rdi], dx;imul esp, dword [rsp + rbp*2 + ], ;outsb dx, byte [rsi];outsd dx, dword [rsi];outsd dx, dword [rsi]": 1,
                "add byte [rsi], al;outsd dx, dword [rsi];insb byte [rdi], dx;jbe ;insb byte [rdi], dx": 1,
                "jb ;outsb dx, byte [rsi];je ;add byte [rsi], al;jo str.random": 1,
                "sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];sub dword [rax], eax;add byte [rdi], al": 1,
                "add byte ss:[rax], al;invalid;sub dh, byte [rbp + ];outsb dx, byte [rsi];je ": 1,
                "invalid;je ;add dword [rax], eax;invalid;imul r13d, dword fs:[rbp + r12*2 + 1], ": 1,
                "invalid;outsb dx, byte [rsi];add dword [rax], eax;invalid;invalid": 1,
                "invalid;invalid;invalid;outsb dx, byte [rsi];jb str.ChanDir": 1,
                "add byte [rdi], al;invalid;push ;jb str.Closing;add byte [rdi], al": 1,
                "insb byte [rdi], dx;outsd dx, dword [rsi];jae ;outsb dx, byte [rsi];add dword [eax], eax": 1,
                "invalid;outsd dx, dword [rsi];insd dword [rdi], dx;insd dword [rdi], dx;outsb dx, byte gs:[rsi]": 1,
                "insd dword [rdi], dx;outsb dx, byte gs:[rsi];je str.Compile;add byte [rdi], al;invalid": 1,
                "outsb dx, byte [rsi];add dword [rax], eax;invalid;movsxd rsi, dword gs:[rdx + ];jo ": 1,
                "invalid;jne ;je str.Disable;add byte [rdi], al;invalid": 1,
                "jne ;je str.Disable;add byte [rdi], al;invalid;imul r14d, dword [rbx + ], ": 1,
                "imul r14d, dword [rbx + ], ;add byte [rdi], al;invalid;imul r14d, dword [rbx + ], ;add byte [rdi], al": 1,
                "je ;jb ;add dword [rax], eax;invalid;imul r13d, dword [rsi + ], ": 1,
                "je ;xor al, byte [rcx];add byte [rdi], al;invalid;insb byte [rdi], dx": 1,
                "invalid;je ;xor al, 1;add byte [rdi], al;invalid": 1,
                "invalid;invalid;invalid;jae str.HasSHA2;push rsi": 1,
                "jae str.HasSHA2;push rsi;pop rax;xor al, byte [rcx];add byte [rdi], al": 1,
                "add dword [rax], eax;invalid;invalid;invalid;jae ": 2,
                "push rax;push rax;add dword [rax], eax;invalid;invalid": 1,
                "invalid;invalid;invalid;jne ;movsxd rbp, dword [rdi + ]": 1,
                "jne ;movsxd rbp, dword [rdi + ];add byte [rax], al;invalid;movsxd rsi, dword [edx + esi*2 + ]": 1,
                "insb byte [rdi], dx;outsd dx, dword [rsi];ja ;add byte [rdi], al;invalid": 1,
                "imul ebp, dword [rsi], ;invalid;push ;jp ;add byte [rax], al": 1,
                "invalid;imul ebp, dword [rsi + ], ;add byte [rax], al;invalid;imul ebp, dword [rsi + ], ": 1,
                "add byte [rax], al;invalid;insb byte [rdi], dx;outsd dx, dword [rsi];outsb dx, byte [rsi]": 1,
                "push ;invalid;insd dword [rdi], dx;invalid;je ": 1,
                "invalid;insd dword [rdi], dx;invalid;je ;push ": 1,
                "jne str.onepass;invalid;invalid;insb byte [rdi], dx;add byte gs:[rax], al": 1,
                "outsb dx, byte [rsi];invalid;insd dword [rdi], dx;outsd dx, dword gs:[rsi];add byte [rax], al": 1,
                "js ;outsb dx, byte [rsi];je ;add byte [rdi], al;invalid": 1,
                "insd dword [rdi], dx;invalid;insb byte [rdi], dx;insb byte [rdi], dx;outsd dx, dword [rsi]": 1,
                "jb ;add byte [rax], al;invalid;jo str.private;or byte [rsi + ], ah": 1,
                "outsw dx, word [rsi];add byte [rax], al;or byte [rsi + ], ah;outsb dx, byte [rsi];movsxd rcx, dword [rsi + ]": 1,
                "movsxd rcx, dword [rsi + ];insd dword [rdi], dx;add byte gs:[rax], al;or byte [rsi + ], ah;outsb dx, byte [rsi]": 2,
                "jb ;je str.isRegExp;add byte [rax], al;or byte [rdi + ], ah;je ": 3,
                "invalid;jo str.isSelect;outsd dx, dword [rsi];invalid;insb byte [rdi], dx": 3,
                "or byte [rcx + ], ch;push rdx;js str.location;add byte [rax], al;or byte [rcx + ], ch": 3,
                "movsxd rsi, dword gs:[rax + rax];or byte [rcx + ], ch;pop rdi;jbe ;insb byte [rdi], dx": 3,
                "jbe ;insb byte [rdi], dx;jne str.mantbits;add byte [rax], al;or byte [rbx + ], ch": 3,
                "imul esi, dword [rbx + rsi*2], ;or byte [rbp + ], ch;jo ;imul ebp, dword [rsi + ], ;or byte [rbp + ], ch": 3,
                "or byte [rbp + ], ch;js ;jb ;movsxd rsi, dword [rbx];add byte [rax], cl": 3,
                "or byte [rbp + ], ch;outsb dx, byte gs:[rsi];je str.nextBase;invalid;insb byte [rdi], dx": 3,
                "or byte [rsi + ], ch;jae ;jo ;add byte [rax], cl;or byte [rsi + ], ch": 3,
                "outsd dx, dword [rsi];jb ;add byte [rax], cl;or byte [rsi + ], ch;ja str.numInstr": 3,
                "add byte [rax], cl;or byte [rdi + ], ch;jb ;je ;jb ": 3,
                "outsb dx, byte gs:[rsi];or byte [rsi + ], ah;outsb dx, byte [rsi];movsxd rdx, dword [rcx + rdi*2 + ];add byte gs:[rax], al": 1,
                "jb ;outsb dx, byte gs:[rsi];je ;add byte [rax], cl;or byte [rax + ], dh": 1,
                "jo ;jb ;invalid;je ;add byte [rax], al": 1,
                "jae ;jns ;add byte [rcx], cl;or dword [rsi + ], ebp;insd dword [rdi], dx": 1,
                "insd dword [rdi], dx;insb byte [rdi], dx;outsd dx, dword [rsi];movsxd rbp, dword [rbx + ];add byte [rax], al": 1,
                "outsb dx, byte [rsi];je ;invalid;insb byte [rdi], dx;add byte gs:[rax], al": 1,
                "add byte gs:[rax], al;or dword [rax + ], esi;push ;jae ;add byte [rcx], cl": 1,
                "insd dword [rdi], dx;add byte [rax], al;or dword [rdx + ], esi;movsxd rbp, dword [rdi + ];jb ": 1,
                "jb ;add byte [rcx], cl;or dword [rbx + ], esi;invalid;outsb dx, byte [rsi]": 1,
                "push ;movsxd rbp, dword [rbx];add byte [rcx], cl;or dword [rbx + ], esi;push ": 1,
                "push ;outsb dx, byte gs:[rsi];add byte [rax], al;or dword [rbx + ], esi;insd dword [rdi], dx": 1,
                "outsb dx, byte gs:[rsi];add byte [rax], al;or dword [rbx + ], esi;insd dword [rdi], dx;imul esp, dword [rbx + ], ": 1,
                "add byte [rax], al;or dword [rbx + ], esi;insd dword [rdi], dx;imul esp, dword [rbx + ], ;add byte [rcx], cl": 1,
                "outsb dx, byte [rsi];push rdx;invalid;outsb dx, byte [rsi];add byte fs:[rax], al": 1,
                "insb byte [rdi], dx;add dword [rax], eax;or ch, byte [rdx];jae ;outsb dx, byte [rsi]": 1,
                "jp ;outsb dx, byte [rsi];add byte gs:[rax], al;or ch, byte [rdx];jne ": 1,
                "or al, byte [rbx + ];insd dword [rdi], dx;insd dword [rdi], dx;outsb dx, byte gs:[rsi];je ": 1,
                "invalid;jo str.CommonType;add byte [rdx], cl;or al, byte [rbx + ];insd dword [rdi], dx": 1,
                "jns ;add dword gs:[rax], eax;or al, byte [rbx + ];insd dword [rdi], dx;jo ": 1,
                "or al, byte [rbx + ];insd dword [rdi], dx;jo ;jb ;jae ": 1,
                "or al, byte [rbx + ];outsb dx, byte gs:[rsi];je ;invalid;insb byte [rdi], dx": 1,
                "insb byte [rdi], dx;add dword [rax], eax;or al, byte [rbp + ];outsd dx, dword [rsi];outsb dx, byte gs:[rsi]": 1,
                "outsd dx, dword [rsi];outsb dx, byte gs:[rsi];add dword [rax], eax;or al, byte [rbp + ];movsxd rbp, dword [rdi + ]": 1,
                "or al, byte [rsi + ];insb byte [rdi], dx;insb byte [rdi], dx;imul esp, dword [rdi + ], ;or al, byte [rsi + ]": 1,
                "jo ;add byte fs:[rax], al;or ebp, dword [rdx];push ;outsd dx, dword [rsi]": 1,
                "imul sp, word cs:[rbp + ], ;add byte [rbx], cl;or ebp, dword [rdx];insb byte [rdi], dx;outsd dx, dword [rsi]": 1,
                "add byte [rbx], cl;or ebp, dword [rdx];outsd dx, dword [rsi];jae ;jb ": 1,
                "outsb dx, byte [rsi];outsb dx, byte [rsi];add byte [rax], al;or ebp, dword [rdx];outsd dx, dword [rsi]": 1,
                "outsd dx, dword [rsi];jae ;je str.url.Values;insd dword [rdi], dx;outsd dx, dword gs:[rsi]": 1,
                "add dword [rax], eax;or ebp, dword [rdx];outsd dx, dword [rsi];je ;outsd dx, dword [rsi]": 1,
                "pop rdi;outsb dx, byte [rsi];outsd dx, dword [rsi];add byte gs:[rax], al;or ebp, dword [rdx]": 1,
                "js ;push ;invalid;add dword [rax], eax;or ebp, dword [rdx]": 1,
                "jae str.AddComments;add byte [rbx], cl;or eax, dword [rcx + ];outsd dx, dword fs:[rsi];insd dword [rdi], dx": 1,
                "or eax, dword [rbx + ];outsb dx, byte [rsi];je ;imul ebp, dword [rsi + ], ;add byte [rbx], cl": 1,
                "imul ebp, dword [rsi + ], ;add byte [rbx], cl;or eax, dword [rbx + ];outsb dx, byte [rsi];je ": 1,
                "add dword [rax], eax;or eax, dword [rsi + ];insb byte [rdi], dx;jns ;invalid": 1,
                "or eax, dword [rdi + ];invalid;invalid;invalid;jo ": 1,
                "add qword [r8], r8;or ecx, dword [rcx + ];imul esi, dword [rcx + rbp*2 + ], ;jb str.IsPrimitive;add byte [rbx], cl": 1,
                "jb ;invalid;insd dword [rdi], dx;add dword [rax], eax;or ecx, dword [rsi + ]": 1,
                "or esp, dword [rsi + ];jne ;push ;jb ;add byte [rax], al": 1,
                "outsb dx, byte [rsi];jbe ;insb byte [rdi], dx;imul esp, dword [rax + rax], ;or esp, dword [rdi + ]": 1,
                "add byte [rbx], cl;or esp, dword [rdi + ];outsd dx, dword [rsi];invalid;invalid": 1,
                "invalid;invalid;insb byte [rdi], dx;push rbx;je ": 7,
                "je ;jae ;add byte [rax], al;or ebp, dword [rax + ];jae ": 1,
                "invalid;jo ;insd dword [rdi], dx;invalid;jb ": 1,
                "outsb dx, byte [rsi];outsd dx, dword [rsi];jb ;jb ;invalid": 1,
                "invalid;jns ;add byte [rbx], cl;or ebp, dword [rcx + ];outsb dx, byte [rsi]": 1,
                "or ebp, dword [rcx + ];outsb dx, byte [rsi];outsd dx, dword [rsi];jb ;push rbx": 1,
                "outsd dx, dword [rsi];jb ;push rbx;insb byte [rdi], dx;imul esp, dword [rbx + ], ": 1,
                "outsd dx, dword [rsi];imul esp, dword [rbp + ], ;add byte [rax], al;or ebp, dword [rcx + ];imul esi, dword fs:[rdx + ], ": 1,
                "insb byte [rdi], dx;add byte [rax], al;or ebp, dword [rcx + rbp*2 + ];jb ;insb byte [rdi], dx": 1,
                "add byte [rax], r8b;or ebp, dword [rbp + ];jns ;outsd dx, dword gs:[rsi];outsb dx, byte [rsi]": 1,
                "insd dword [rdi], dx;add byte [rax], al;or ebp, dword [rsi + ];je ;movsxd rbp, dword [rbx + ]": 1,
                "je ;add byte [rax], al;or ebp, dword [rsi + ];insd dword [rdi], dx;jae ": 1,
                "or ebp, dword [rsi + ];insd dword [rdi], dx;jae ;push rsp;add byte [rax], r8b": 1,
                "add byte [rbx], cl;or ebp, dword [rsi + ];insb byte [rdi], dx;invalid;invalid": 1,
                "insd dword [rdi], dx;invalid;jb ;invalid;insb byte [rdi], dx": 1,
                "outsw dx, word [rsi];jb ;movsxd rax, dword fs:[eax];add byte [rbx], cl;or ebp, dword [rdi + ]": 1,
                "movsxd rbp, dword [rax];sub dword [rax], eax;add byte [rdx + rbp], cl;or al, ;movsxd rbp, dword [rax + ]": 1,
                "add dword [rax], r8d;or al, ;movsxd rsi, dword [rdx + ];xor esi, dword [rdx];push rsp": 1,
                "pop rbx;pop rbp;imul ebp, dword [rsi + ], ;or al, ;jne ": 4,
                "add byte gs:[rax], al;or al, ;outsd dx, dword [esi];invalid;insd dword [rdi], dx": 7,
                "invalid;jo ;jns ;add dword gs:[rax], eax;or al, ": 7,
                "invalid;jb str.io.WriterTo;add byte [rdx + rbp], cl;or al, ;imul ebp, dword [rdi + ], ": 7,
                "or al, ;push ;outsd dx, dword [rsi];outsb dx, byte [rsi];jne ": 7,
                "jne ;insb byte [rdi], dx;outsd dx, dword cs:[rsi];jb ;add byte [rdx + rbp], cl": 7,
                "invalid;push ;movsxd rsi, dword [rcx + rax];or al, ;outsd dx, dword [rsi]": 7,
                "je ;outsd dx, dword [rsi];push rbx;movsxd rsi, dword [rdx + ];jo ": 15,
                "je ;outsd dx, dword [rsi];pop rdi;jb ;insd dword [rdi], dx": 7,
                "outsb dx, byte [rsi];push rbx;outsd dx, dword [rsi];jne ;movsxd rsp, dword [rbp]": 7,
                "add byte [rdx + rbp], cl;or al, ;jb ;outsb dx, byte [rsi];je ": 7,
                "jae ;outsb dx, byte [rsi];movsxd rbp, dword [rsi];outsd dx, dword [rsi];movsxd rbp, dword [rbx + ]": 11,
                "outsd dx, dword [rsi];movsxd rbp, dword [rbx + ];jb ;add byte [rdx + rbp], cl;or al, ": 7,
                "jo ;add dword [rax], eax;or al, ;jae ;outsb dx, byte [rsi]": 6,
                "add dword [rax], eax;or al, ;jae ;outsb dx, byte [rsi];je ": 12,
                "add dword [rax], eax;or al, ;push rax;pop rdx;push rsp": 1,
                "je ;invalid;movsxd rsp, dword [rbp];add byte [rdi], cl;or al, ": 1,
                "insb byte [rdi], dx;invalid;invalid;push ;movsxd rsi, dword [rax + rax]": 1,
                "invalid;invalid;push ;movsxd rsi, dword [rax + rax];or al, ": 1,
                "outsd dx, dword [rsi];imul esp, dword [rbx + ], ;outsb dx, byte [rsi];add byte fs:[rax], al;or al, ": 1,
                "push ;movsxd rsi, dword [rbx + rsi*2];add byte [rax + rbp*2], cl;or al, ;jne ": 1,
                "invalid;movsxd rbp, dword [rax + ];add byte [rax], al;or al, ;invalid": 1,
                "or al, ;invalid;jae ;push rdx;jne ": 1,
                "jae ;pop rdi;movsxd rbx, dword [edi + ];outsb dx, byte [rsi];imul edi, dword [rax], ": 1,
                "outsd dx, dword [rsi];outsb dx, byte [rsi];je str.newEvalError;add byte fs:[rax], al;or al, ": 1,
                "imul ebp, dword [rsi + ], ;add byte [rsi + rbp*2], cl;or al, ;ja ;jbe ": 1,
                "movsxd rsp, dword [rbp];add byte [rsi + rbp*2], cl;or al, ;ja ;jns ": 1,
                "jb ;insb byte [rdi], dx;outsd dx, dword [rsi];ja ;add byte [rsi + rbp*2], cl": 1,
                "push rax;invalid;jae ;push rdx;jne ": 2,
                "add byte [rdi + rbp*2], cl;or al, ;jbe str.productTable;jb ;insb byte [rdi], dx": 1,
                "invalid;jb str.readdirnames;push rax;or eax, ;movsxd rbp, dword [rax]": 1,
                "add byte [], cl;outsb dx, byte gs:[rsi];movsxd rcx, dword [rcx + ];jae ;jb ": 6,
                "invalid;jns ;outsb dx, byte [rsi];js ;add byte [], cl": 6,
                "invalid;outsb dx, byte [rsi];outsb dx, byte [rsi];jb str.os.LinkError;add byte [], cl": 6,
                "js ;add byte [rax], al;or eax, ;outsd dx, dword [rsi];pop rdi": 6,
                "pop rdi;insb byte [edi], dx;outsd dx, dword [rsi];invalid;invalid": 6,
                "jae ;jb ;jb ;outsd dx, dword [rsi];jb ": 6,
                "add byte [], cl;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];imul ebp, dword [rsi + ], ;jb ": 6,
                "je str.syntax.Flags;insd dword [rdi], dx;imul esi, dword cs:[rcx + ], ;or eax, ;je str.time.Weekday": 6,
                "je str.time.Weekday;insd dword [rdi], dx;outsb dx, byte cs:[rsi];invalid;insd dword [rdi], dx": 6,
                "insd dword [rdi], dx;outsb dx, byte cs:[rsi];invalid;insd dword [rdi], dx;add byte gs:[rax], al": 8,
                "insd dword [rdi], dx;invalid;jo ;outsb dx, byte [rsi];add dword [rax], eax": 6,
                "push rdi;imul esp, dword gs:[rcx + ], 1;add byte [], cl;or eax, ;push rbp": 3,
                "imul esp, dword gs:[rcx + ], 1;add byte [], cl;or eax, ;push rbp;jae ": 3,
                "jb ;outsb dx, byte [rsi];outsw dx, word [rsi];add byte [rax], al;or eax, ": 2,
                "add byte [rax], al;or eax, ;outsb dx, byte gs:[rsi];movsxd rbp, dword [rdi + ];imul ebp, dword [rsi + ], ": 1,
                "or eax, ;outsb dx, byte gs:[rsi];movsxd rbp, dword [rdi + ];imul ebp, dword [rsi + ], ;or eax, ": 1,
                "movsxd rbp, dword [rdi + ];imul ebp, dword [rsi + ], ;or eax, ;outsb dx, byte [esi];movsxd rbp, dword gs:[rcx + ]": 1,
                "insb byte [rdi], dx;jo ;jb ;add byte [rsi], cl;sub ah, byte [rdi + ]": 12,
                "add byte [rsi], cl;sub ah, byte [rdi + ];invalid;imul sp, word cs:[rbp + ], ;jns ": 6,
                "invalid;insb byte [rdi], dx;outsd dx, dword [rsi];jae ;jb ": 6,
                "jae ;jb ;add byte [rsi], cl;sub ch, byte [rcx + ];push rdx": 6,
                "jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx;add byte gs:[rax], al": 6,
                "insb byte [rdi], dx;jne ;add byte [rax], al;invalid;sub dh, byte [rdx + ]": 6,
                "jne ;add byte [rax], al;invalid;sub dh, byte [rdx + ];insb byte [rdi], dx": 6,
                "movsxd rsi, dword gs:[rsi + rbp + ];je ;jo ;add byte [rax], al;invalid": 12,
                "sub dh, byte [rdx + ];js ;je ;jb ;invalid": 7,
                "js ;je ;jb ;invalid;add dword fs:[rax], eax": 6,
                "pop rdi;je ;jo ;add byte [rax], al;invalid": 6,
                "movsxd rsp, dword [rbp];add byte [rsi], cl;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ": 4,
                "imul r14, qword cs:[ebx + ], ;sub dh, byte [rdx + ];outsb dx, byte [rsi];sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;jae ;invalid": 66,
                "jb ;add byte [rsi], cl;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ": 1,
                "je ;insd dword [rdi], dx;ja ;imul esi, dword [rcx + rsi*2], ;sub dh, byte [rdx + ]": 1,
                "insb byte [rdi], dx;jns ;add byte [rsi], cl;sub dh, byte [rbx + ];outsb dx, byte [rsi]": 1,
                "outsb dx, byte [rsi];jae ;add byte [rsi], cl;sub dh, byte [rbx + ];jae ": 1,
                "jo ;jb ;jb ;add dword [rax], eax;invalid": 1,
                "sub dword [rax], esp;jne ;outsb dx, byte [rsi];je ;je ": 12,
                "jb ;movsxd rsi, dword [rsp + rdx*2 + ];jo ;add dword [rax], eax;cvtpi2ps xmm5, qword [rcx + ]": 6,
                "sub ch, byte [rdx + ];outsd dx, dword [rsi];outsb dx, byte [rsi];invalid;invalid": 35,
                "jae ;jb ;outsb dx, byte [rsi];pop rbp;imul ebp, dword [rsi + ], ": 73,
                "je ;outsd dx, dword [rsi];pop rdi;jo ;outsd dx, dword [rsi]": 34,
                "add byte fs:[rax], al;cvtpi2ps xmm6, qword [rdx + ];insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];je ": 6,
                "cvtpi2ps xmm6, qword [rdx + ];imul esi, dword [ebx + ], ;outsb dx, byte [rsi];je ;jns ": 6,
                "invalid;invalid;jne ;imul esp, dword [rbp + ], 0;add byte [rdi], cl": 6,
                "invalid;invalid;invalid;invalid;push rsi": 8,
                "invalid;jb ;add byte [rdi], cl;sub dh, byte [rdx + ];outsb dx, byte [rsi]": 6,
                "add byte [rax], al;cvtpi2ps xmm6, qword [rdx + ];sub dh, byte [rdx + ];sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "je ;insd dword [rdi], dx;movsxd rcx, dword cs:[ebp + ];add byte gs:[rax], al;cvtpi2ps xmm6, qword [rdx + ]": 4,
                "je ;insd dword [rdi], dx;insb byte [rdi], dx;outsb dx, byte [rsi];outsd dx, dword [rsi]": 2,
                "jae ;jae ;je ;add byte [rdi], cl;sub dh, byte [rdx + ]": 1,
                "jb ;outsb dx, byte cs:[rsi];je ;jb ;invalid": 1,
                "sub dh, byte [rbx + ];outsb dx, byte [rsi];movsxd rbp, dword [rsi];jo ;outsd dx, dword [rsi]": 8,
                "movsxd rbp, dword [rsi];jo ;outsd dx, dword [rsi];insb byte [rdi], dx;outsd dx, dword [rsi]": 8,
                "jo ;add byte [rdi], cl;sub dh, byte [rbx + ];jae ;invalid": 1,
                "insb byte [rdi], dx;insb byte [rdi], dx;jae ;push ;cvtpi2ps xmm6, qword [rbx + ]": 1,
                "jae ;invalid;insb byte [rdi], dx;insb byte [rdi], dx;push rdx": 16,
                "imul ebp, dword [rsi + ], ;je str.FindAllSubmatch;insd dword [rdi], dx;jp ;outsb dx, byte [rsi]": 1,
                "jp ;outsb dx, byte [rsi];push rsp;jb ;outsb dx, byte [rsi]": 2,
                "imul r14, qword [rbx + ], ;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];sub dword [rax], esp": 1,
                "xor al, byte [rax];add byte [rax], dl;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 6,
                "movsxd rbp, dword [rax];imul ebp, dword [rdi + ], ;jb str.gob.emptyStruct;add byte [rax], al;adc byte [rdx], ch": 8,
                "jb str.io.StringWriter;add byte [rax], al;adc byte [rdx], ch;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 9,
                "imul ebp, dword [rbp + ], ;sub ah, byte [rdi + ];invalid;insd dword [rdi], dx;jo ": 10,
                "insd dword [rdi], dx;jo ;jns ;je ;jne str.os.ProcessState": 10,
                "jne str.os.ProcessState;je ;add byte [rax], dl;sub ch, byte [rcx + ];push rbx": 10,
                "jo ;outsb dx, byte [rsi];movsxd rbp, dword [rdi + ];jb ;add byte [rax], dl": 10,
                "imul ebp, dword [rdi + ], ;sub ch, byte [rbp + ];jo ;jae ;jb str.reflect.ChanDir": 10,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];insb byte [rdi], dx;add dword [rax], eax;adc byte [rdx], ch": 10,
                "adc byte [rdx], ch;sub dh, byte [rdx + ];insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];invalid": 10,
                "movsxd rsi, dword gs:[rsi + rbp + ];je ;push rsp;jns ;add byte gs:[rax], al": 10,
                "adc byte [rdx], ch;sub dh, byte [rdx + ];insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];js ": 10,
                "jns ;add byte gs:[rax], al;adc byte [rdx], ch;sub dh, byte [rdx + ];js ": 10,
                "je ;insd dword [rdi], dx;insb byte [rdi], dx;push ;add byte [rax], al": 10,
                "jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx;jbe ": 15,
                "je ;insd dword [rdi], dx;jbe ;movsxd rax, dword [rbx + rsi*2 + ];add byte [rax], al": 11,
                "insd dword [rdi], dx;jne ;movsxd rsi, dword [rsi + ];insb byte [rdi], dx;add byte [rax], al": 9,
                "insd dword [rdi], dx;insb byte [rdi], dx;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 2,
                "insd dword [rdi], dx;invalid;jo ;jns ;sub ah, byte [rsi + ]": 1,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;outsb dx, byte cs:[rsi];invalid": 2,
                "push rsp;invalid;invalid;push rsp;add byte [rax], al": 3,
                "insd dword [rdi], dx;jae ;movsxd rsi, dword [eax + edi*2 + ];add byte [rax], al;adc byte [rdx], ch": 1,
                "je ;insd dword [rdi], dx;jae ;imul ebp, dword [esi + ], ;sub dh, byte [rdx + ]": 1,
                "jae ;imul ebp, dword [esi + ], ;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ": 1,
                "je ;insd dword [rdi], dx;jae ;movsxd rbp, dword gs:[rcx + ];insb byte [rdi], dx": 3,
                "jae ;movsxd rbp, dword gs:[rcx + ];insb byte [rdi], dx;add byte [rax], al;adc dword [rdx], ebp": 1,
                "sub bl, byte [rbx + ];pop rbp;sub ch, byte [rdi + ];je str.regexp.thread;pop rdi": 1,
                "jo ;jb ;add byte [rcx], dl;sub bl, byte [rbx + ];pop rbp": 1,
                "invalid;imul sp, word cs:[rbp + ], ;jns ;add byte gs:[rax], al;adc dword [rdx], ebp": 1,
                "add byte [rcx], dl;sub bl, byte [rbx + ];sub dh, byte [rbx + ];outsb dx, byte [rsi];je ": 1,
                "outsd dx, dword [rsi];insd dword [rdi], dx;insd dword [rdi], dx;outsb dx, byte gs:[rsi];je ": 41,
                "movsxd rbp, dword [rax];sub dword [rax], esp;pop rbx;pop rbp;jne ": 39,
                "insd dword [rdi], dx;movsxd rax, dword cs:[edx + ];je ;add byte [rax], al;adc dword [rdx], ebp": 1,
                "add byte [rcx], dl;sub bl, byte [rbx + ];je ;imul esp, dword [rbp + ], ;pop rdi": 1,
                "je ;outsd dx, dword [rsi];jb ;je ;je ": 1,
                "outsb dx, byte [rsi];cmp al, ;and byte [rdi + ], ch;push rbx;imul esp, dword [rdi + ], ": 13,
                "movsxd rbp, dword [rax + ];imul r13, qword [rsi + ], ;add byte [rcx], dl;sub ah, byte [rbp + ];imul ebp, dword [esi + ], ": 1,
                "imul esi, dword [rsi + ], ;add byte [rcx], dl;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 1,
                "insd dword [rdi], dx;sub dword cs:[eax], eax;add byte [rcx], dl;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 5,
                "insd dword [rdi], dx;jo ;add byte [rax], al;adc dword [rdx], ebp;sub ah, byte [rsi + ]": 6,
                "movsxd rbp, dword [rax];outsd dx, dword [esi];invalid;je ;jo ": 8,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];insb byte [rdi], dx;add byte [rax], al;adc dword [rdx], ebp": 19,
                "sub ah, byte [rdi + ];invalid;movsxd rbp, dword gs:[rdi + ];jb ;je ": 10,
                "push rbx;jns ;je ;js ;jb ": 10,
                "outsd dx, dword [rsi];jb ;add byte [rcx], dl;sub ch, byte [rdx + ];outsd dx, dword [rsi]": 10,
                "je ;je ;add byte [rax], al;adc dword [rdx], ebp;sub ch, byte [rdx + ]": 20,
                "outsb dx, byte gs:[rsi];movsxd rbp, dword [rdi + ];push rbx;je ;je ": 11,
                "jne ;movsxd rax, dword [rax];add byte [rcx], dl;sub ch, byte [rbp + ];jo ": 10,
                "outsb dx, byte [rsi];pop rbp;imul ebp, dword [rsi + ], ;adc dword [rdx], ebp;sub ch, byte [rdi + ]": 10,
                "adc dword [rdx], ebp;sub ch, byte [rdi + ];je ;pop rdi;invalid": 10,
                "jne ;movsxd rdx, dword [rcx + rdi*2 + ];add byte gs:[rax], al;adc dword [rdx], ebp;sub dh, byte [rdx + ]": 11,
                "sub dh, byte [rdx + ];outsb dx, byte [rsi];je ;insd dword [rdi], dx;movsxd rbp, dword cs:[rax + ]": 10,
                "jo ;add byte [rax], al;adc dword [rdx], ebp;jb str.runtime.mapextra;outsb dx, byte [rsi]": 9,
                "insd dword [rdi], dx;imul esi, dword fs:[rsi + ], ;add byte [rax], al;adc dword [rdx], ebp;sub dh, byte [rdx + ]": 8,
                "add byte [rax], al;adc dword [rdx], ebp;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ": 28,
                "jne ;movsxd rcx, dword [rcx + ];outsw dx, word [rsi];add byte [rax], al;adc dword [rdx], ebp": 7,
                "insd dword [rdi], dx;invalid;jo ;js ;jb ": 4,
                "insd dword [rdi], dx;insd dword [rdi], dx;invalid;jb str.runtime.semaRoot;imul esi, dword [rbx + r14*2], ": 3,
                "je ;sub dh, byte [rdx + ];insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];jne ": 2,
                "imul ebp, dword [rsi + ], ;add byte [rcx], dl;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ": 2,
                "insd dword [rdi], dx;jae ;insd dword [rdi], dx;invalid;push rdx": 11,
                "outsb dx, byte [rsi];jb ;add byte [rcx], dl;sub dh, byte [rdx + ];outsb dx, byte [rsi]": 2,
                "jae ;movsxd rsi, dword [rax + rax];adc dword [rdx], ebp;sub dh, byte [rdx + ];outsb dx, byte [rsi]": 2,
                "outsb dx, byte [rsi];jbe ;js ;insb byte [rdi], dx;outsd dx, dword [rsi]": 17,
                "invalid;jae ;imul ebp, dword [rcx + ], ;adc dword [rdx], ebp;sub dh, byte [rbx + ]": 1,
                "outsb dx, byte [rsi];je ;js ;jo ;je ": 1,
                "outsd dx, dword [rsi];imul ebp, dword [rsi + ], ;adc ch, byte [rdx];sub bl, byte [rbx + ];sub ch, byte [rdx]": 1,
                "outsb dx, byte gs:[rsi];je ;imul sp, word [rbp + ], 0;adc ch, byte [rdx];sub bl, byte [rbx + ]": 1,
                "pop rdi;jb ;add byte [rdx], dl;sub bl, byte [rbx + ];sub dh, byte [rdx + ]": 1,
                "jne ;imul esp, dword [rbp + ], 0;add byte [rdx], dl;sub bl, byte [rbx + ];sub dh, byte [rbx + ]": 1,
                "sub bl, byte [rbx + ];jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];insd dword [rdi], dx": 1,
                "insd dword [rdi], dx;jne ;movsxd rsi, dword [rcx + ];add byte [rax], al;adc ch, byte [rdx]": 2,
                "jae ;push rbx;je ;je ;insd dword [rdi], dx": 19,
                "jae ;imul ebp, dword [rdi + ], ;sub ah, byte [rcx + ];je ;ja ": 2,
                "add byte [rdx], dl;sub ah, byte [rdx + ];jae ;xor al, ;insb byte [rdi], dx": 1,
                "sub ah, byte [rbp + ];imul ebp, dword [esi + ], ;imul esi, dword [rsi + ], ;add dword [rax], eax;adc ch, byte [rdx]": 1,
                "sub ah, byte [rsi + ];invalid;je ;imul esp, dword fs:[rbx + ], ;jb ": 1,
                "and byte [rcx + ], ch;je ;add byte [rax], al;adc ch, byte [rdx];sub ah, byte [rsi + ]": 2,
                "adc ch, byte [rdx];sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];sub dword [rax], esp": 38,
                "js ;xor bh, byte [rax];add byte [rax], al;adc ch, byte [rdx];sub ah, byte [rsi + ]": 6,
                "sub dword [rax], esp;jne ;insb byte [rdi], dx;push rsi;invalid": 9,
                "invalid;insb byte [rdi], dx;jne ;jae ;add byte [rdx], dl": 9,
                "adc ch, byte [rdx];sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];jae ": 13,
                "outsd dx, dword [rsi];invalid;je ;outsb dx, byte [rsi];movsxd rbp, dword [rdi + ]": 20,
                "invalid;jae ;add byte [rax], al;adc ch, byte [rdx];outsd dx, dword [rsi]": 13,
                "push r11;add qword [r8], rax;adc ch, byte [rdx];sub dh, byte [rax + ];insb byte [rdi], dx": 11,
                "push rsp;imul ebp, dword [rbp + ], ;jb ;outsd dx, dword [rsi];jb ": 11,
                "movsxd rsp, dword [rbp + 1];add byte [rdx], dl;sub dh, byte [rdx + ];insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 9,
                "movsxd rsi, dword gs:[rsi + rbp + ];sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];imul ebp, dword [rsi + ], ": 1,
                "invalid;jns ;jne ;jns ;add byte [rdx], dl": 7,
                "imul esi, dword [rdx], ;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ;insd dword [rdi], dx": 4,
                "invalid;invalid;imul esi, dword [rsi + rsi*2 + ], ;add byte [rax], al;adc ch, byte [rdx]": 2,
                "outsd dx, dword [rsi];je ;outsd dx, dword [rsi];pop rdi;jae str.func_string____int": 3,
                "movsxd rbp, dword [rax];sub dword [rax], esp;jae ;outsb dx, byte [rsi];movsxd rbp, dword [rsi]": 4,
                "movsxd rbp, dword [rax];insb byte [rdi], dx;outsd dx, dword [rsi];invalid;je str.func_uint32__error": 7,
                "outsb dx, byte [rsi];je ;je ;sub dword [rax], esp;invalid": 19,
                "add byte [rax], al;adc ebp, dword [rdx];sub ah, byte [rdi + ];invalid;outsd dx, dword cs:[esi]": 11,
                "adc ebp, dword [rdx];sub ch, byte [rdx + ];outsd dx, dword [rsi];outsb dx, byte [rsi];jae ": 11,
                "jne ;jno ;outsd dx, dword [rsi];je ;push rsi": 11,
                "outsd dx, dword [rsi];je ;push rsi;invalid;insb byte [rdi], dx": 11,
                "jb ;jo ;jb ;jns ;add byte [rbx], dl": 11,
                "jb ;jns ;add byte [rbx], dl;sub ch, byte [rdi + ];je ": 11,
                "invalid;invalid;push ;movsxd rsi, dword [rax + rax];adc ebp, dword [rdx]": 11,
                "invalid;push ;movsxd rsi, dword [rcx + rax];adc ebp, dword [rdx];sub dh, byte [rdx + ]": 11,
                "push rsp;jns ;add byte gs:[rax], al;adc ebp, dword [rdx];jb ": 11,
                "jae ;imul ebp, dword [rsi + ], ;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ": 7,
                "invalid;jne ;imul esp, dword [rbp + ], ;jns ;add byte gs:[rax], al": 6,
                "jb ;add byte [rax], al;adc ebp, dword [rdx];sub dh, byte [rdx + ];outsb dx, byte [rsi]": 5,
                "outsb dx, byte [rsi];je ;add byte [rbx], dl;sub dh, byte [rdx + ];outsb dx, byte [rsi]": 4,
                "insd dword [rdi], dx;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];jne ": 2,
                "add byte [rax], al;adc ebp, dword [rdx];jb ;outsb dx, byte [rsi];sub ah, byte [rsi + ]": 1,
                "adc ebp, dword [rdx];jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx": 1,
                "invalid;invalid;je ;add byte [rax], al;adc ebp, dword [rdx]": 1,
                "sub dword [rax], esp;sub byte [rcx + ], ch;je ;and byte [rbp + ], ah;jb ": 6,
                "sub byte [rcx + ], ch;je ;and byte [rbp + ], ah;jb ;jb ": 21,
                "imul esp, dword gs:[rcx + ], 0;add byte [rdx + rbp], dl;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 7,
                "je str.func_reflect.Value;sub dword [rax], esp;pop rbx;pop rbp;imul ebp, dword [rsi + ], ": 9,
                "je ;sub dword [rax], esp;jne ;outsb dx, byte [rsi];je ": 36,
                "adc al, ;sub ch, byte [rdx + ];outsd dx, dword [rsi];outsb dx, byte [rsi];invalid": 13,
                "pop r8;add byte [rax], al;adc al, ;sub ch, byte [rbp + ];jo ": 13,
                "invalid;je ;jo ;pop rbp;invalid": 24,
                "je ;pop rdi;outsd dx, dword [esi];push rbx;insb byte [rdi], dx": 13,
                "jb ;add byte [rdx + rbp], dl;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 13,
                "insd dword [rdi], dx;invalid;invalid;invalid;insb byte [rdi], dx": 11,
                "movsxd rbp, dword [rbx + ];movsxd rbp, dword gs:[rdi + ];add byte fs:[rax], al;adc al, ;sub ah, byte [rsi + ]": 1,
                "je ;insd dword [rdi], dx;jae ;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 3,
                "add byte [rax], al;adc al, ;sub dh, byte [rbx + ];jne ;movsxd rsp, dword [rbp + ]": 3,
                "invalid;jo ;add byte [rdx + rbp], dl;sub dh, byte [rbx + ];jae ": 2,
                "insb byte [rdi], dx;push rbx;jns ;push rax;jb ": 1,
                "sub al, ;jb ;outsd dx, dword [rsi];jb ;add byte [rax], al": 148,
                "sub dword [rax], esp;sub byte [rbx + ], dh;jb ;outsb dx, byte [rsi];sub al, ": 32,
                "adc eax, ;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];invalid": 6,
                "movsxd rbp, dword [rax];invalid;jae ;js ;jb ": 7,
                "js ;jb ;jae ;imul ebp, dword [rdi + ], ;sub ah, byte [rsi + ]": 8,
                "adc eax, ;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];imul ebp, dword [rsi + ], ": 17,
                "outsb dx, byte [rsi];movsxd rbp, dword [rax];jb ;imul esi, dword [ebx + ], ;outsb dx, byte [rsi]": 11,
                "outsb dx, byte [rsi];jbe ;insb byte [rdi], dx;imul esp, dword [rdx + rax*2 + ], ;jb ": 14,
                "je ;invalid;push ;movsxd rsi, dword [rax + rax];adc eax, ": 14,
                "pop rdi;jae ;invalid;jae ;push rdx": 14,
                "add byte [], dl;sub dh, byte [rdx + ];insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];invalid": 13,
                "movsxd rsi, dword gs:[rsi + rbp + ];invalid;imul esp, dword [rbp + ], ;outsb dx, byte [rsi];movsxd rcx, dword [rcx + ]": 13,
                "insd dword [rdi], dx;movsxd rax, dword cs:[edx + esi*2 + ];imul ebp, dword [rsi + ], ;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "insd dword [rdi], dx;jb ;jne ;imul esp, dword [rbp + ], 0;add byte [], dl": 3,
                "jb ;add byte [rax], al;invalid;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 55,
                "sub byte [rcx + ], ch;je ;xor al, ;and byte [rcx + ], ch;je ": 2,
                "jb ;outsb dx, byte [rsi];sub al, ;invalid;outsd dx, dword [rsi]": 43,
                "je ;pop rdi;jb ;outsb dx, byte [rsi];je str.func______ast.Comment": 5,
                "movsxd rbp, dword [rax];sub dword [rax], esp;sub dh, byte [rcx + rbp*2 + ];outsd dx, dword cs:[rsi];movsxd rsp, dword [rcx + ]": 9,
                "outsd dx, dword cs:[rsi];movsxd rsp, dword [rcx + ];imul ebp, dword [rdi + ], ;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 9,
                "jns str.func_complex128__bool;jo ;add byte [rsi], dl;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 11,
                "movsxd rbp, dword [rax];sub dword [rax], esp;jae ;jae ;invalid": 12,
                "jae ;jae ;invalid;insb byte [rdi], dx;insb byte [rdi], dx": 50,
                "outsd dx, dword [rsi];jb ;add byte [rsi], dl;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 16,
                "push rsp;imul ebp, dword [rbp + ], ;jb ;jb ;add byte [rsi], dl": 18,
                "jb ;jb ;add byte [rsi], dl;sub ch, byte [rbp + ];jo ": 18,
                "outsd dx, dword [rsi];push bx;je ;je ;insd dword [rdi], dx": 17,
                "outsb dx, byte gs:[rsi];je ;add byte [rsi], dl;sub dh, byte [rax + ];jb ": 13,
                "sub dh, byte [rax + ];jb ;jb ;pop rdi;push rdx": 13,
                "insd dword [rdi], dx;je str.cmpl_call_nodeFunction;invalid;movsxd rsp, dword [rbp + ];je ": 7,
                "invalid;movsxd rsp, dword [rbp + ];je ;movsxd rbp, dword [rbx + ];je ": 7,
                "jae ;push rbx;jns str.fromPropertyDescriptor;invalid;outsd dx, dword [rsi]": 6,
                "outsb dx, byte [rsi];insb byte [rdi], dx;invalid;invalid;jb ": 4,
                "invalid;invalid;jb ;insb byte [rdi], dx;invalid": 3,
                "jne ;movsxd rsi, dword [rcx + rbp*2 + ];outsb dx, byte [rsi];add byte [rax], al;invalid": 2,
                "je ;and byte [rcx + ], ch;je ;add byte [rax], al;invalid": 1,
                "movsxd rbp, dword [rax];insw word [rdi], dx;je ;push rbx;je ": 6,
                "imul ebp, dword [rsi + ], ;outsb dx, byte [rsi];je ;xor ch, byte [rax];imul ebp, dword [rsi + ], ": 9,
                "movsxd rsi, dword gs:[rsi + rbp + ];jns ;add byte gs:[rax], al;invalid;sub ah, byte [rsi + ]": 11,
                "push rbx;je ;imul ebp, dword [rsi + ], ;sub ch, byte [rbp + ];jo ": 12,
                "insd dword [rdi], dx;outsb dx, byte gs:[rsi];je ;add byte [rdi], dl;sub dh, byte [rdx + ]": 12,
                "movsxd rsp, dword cs:[rdi + ];je ;jb ;invalid;jae ": 12,
                "jae ;invalid;jb ;add byte [rax], al;invalid": 12,
                "invalid;jb ;add byte [rax], al;invalid;sub dh, byte [rdx + ]": 12,
                "je ;insd dword [rdi], dx;jbe ;jae ;sub ah, byte [rsi + ]": 1,
                "insb byte [rdi], dx;outsd dx, dword [rsi];movsxd rsp, dword [rcx + ];outsb dx, byte [rsi];je ": 6,
                "sub dh, byte [rbx + ];jae str.ReferenceErrorPrototype;invalid;insb byte [rdi], dx;insb byte [rdi], dx": 5,
                "push rdx;jb ;outsb dx, byte [rsi];movsxd rsp, dword [rbp + ];jb ": 2,
                "insb byte [rdi], dx;imul r14, qword [rbp + ], ;jb ;outsb dx, byte [rsi];add eax, dword [eax]": 2,
                "jne ;movsxd rsp, dword [rbp + ];add byte [rsi], cl;push ;outsd dx, dword [rsi]": 2,
                "invalid;push rsi;jb ;imul ebp, dword [rdi + ], ;push ": 2,
                "imul ebp, dword [rdi + ], ;push ;outsd dx, dword [rsi];outsb dx, byte [rsi];cmp ah, byte [rdx]": 2,
                "jbe ;jne ;movsxd rsi, dword [rcx + rbp*2 + ];outsb dx, byte [rsi];invalid": 11,
                "movsxd rbp, dword [rax];sub dword [rax], esp;sub byte [rsi + ], ah;outsd dx, dword [rsi];invalid": 2,
                "jne ;add byte [rax], al;sbb byte [rdx], ch;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 7,
                "outsd dx, dword [rsi];jae ;imul r13d, dword [rbp + r12*2 + ], ;and byte [rbp + ], ah;jb ": 13,
                "jns ;sub dword gs:[rax], esp;invalid;outsd dx, dword [rsi];outsd dx, dword [rsi]": 12,
                "outsb dx, byte [rsi];sub dword [eax], esp;outsd dx, dword [rsi];je ;outsd dx, dword [rsi]": 21,
                "invalid;jb ;push ;jo ;jb ": 13,
                "imul ebp, dword [rsi + ], ;sub ch, byte [rbp + ];jo ;jae ;jb ": 13,
                "movsxd rsi, dword [rcx + rbp*2 + ];outsb dx, byte [rsi];add byte [rax], al;sbb byte [rdx], ch;outsd dx, dword [rsi]": 13,
                "jae ;imul ebp, dword [rdi + ], ;sub ch, byte [rdi + ];sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "pop rdi;outsb dx, byte [rsi];outsd dx, dword [rsi];push rdx;js ": 10,
                "push rdx;js ;imul r14, qword [rbp + ], ;sbb byte [rdx], ch;sub ch, byte [rdi + ]": 10,
                "outsb dx, byte [rsi];sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];sub dh, byte [rbp + ]": 1,
                "pop rdi;jo ;outsd dx, dword [rsi];sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "jne ;movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;add byte [rax], bl;sub dh, byte [rdx + ]": 27,
                "je ;insd dword [rdi], dx;jo ;jb ;imul esi, dword [rbx + ], ": 10,
                "jae ;invalid;movsxd rbp, dword [rbx + ];outsd dx, dword [rsi];sub ah, byte [rsi + ]": 1,
                "pop rdi;jbe ;jb ;invalid;invalid": 4,
                "add byte [rax], al;sbb byte [rax + ], dh;jo ;jb ;imul esi, dword gs:[rdi + r14*2 + ], ": 4,
                "outsd dx, dword [rsi];insb byte [rdi], dx;jns ;add byte [rcx], bl;sub bl, byte [rbx + ]": 4,
                "jae ;xor al, ;outsd dx, dword [rsi];jb ;jne ": 1,
                "jne ;je ;outsb dx, byte [rsi];jo ;je ": 1,
                "movsxd rsi, dword gs:[rsi + rbp + ];je ;outsd dx, dword [rsi];add byte fs:[rax], al;sbb dword [rdx], ebp": 2,
                "je ;outsd dx, dword [rsi];add byte fs:[rax], al;sbb dword [rdx], ebp;sub ah, byte [rsi + ]": 2,
                "sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];imul ebp, dword [rdi + ], ;push rdx": 16,
                "outsb dx, byte [rsi];sub dword [eax], esp;imul ebp, dword [rsi + ], ;sub ch, byte [rbp + ];jo ": 7,
                "outsb dx, byte [rsi];je ;xor al, 0;add byte [rcx], bl;sub ch, byte [rbp + ]": 7,
                "je ;add byte [rcx], bl;sub ch, byte [rdi + ];je ;pop rdi": 32,
                "push ;insd dword [rdi], dx;outsb dx, byte gs:[rsi];je ;add byte [rcx], bl": 7,
                "je ;pop rdi;outsb dx, byte [rsi];outsd dx, dword [rsi];jne ": 10,
                "outsb dx, byte [rsi];outsd dx, dword [rsi];push rdi;push ;je ": 3,
                "push rdi;push ;je ;je ;insd dword [rdi], dx": 9,
                "movsxd rcx, dword cs:[ebp + ];jb ;push rdi;outsd dx, dword [rsi];jb ": 2,
                "jb ;jae ;imul esp, dword [rdi + ], ;js ;jb ": 1,
                "outsb dx, byte [rsi];je ;add byte [rdx], bl;sub ah, byte [rcx + ];je ": 1,
                "sub dh, byte [rdx + ];js ;push rdx;js ;sub dword [rax], esp": 3,
                "sub dword [rcx], ebp;and byte [rbp + ], ah;jb ;jb ;add byte [rdx], bl": 7,
                "add byte [rdx], bl;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];imul ebp, dword [rdi + ], ": 10,
                "push rdx;invalid;invalid;jb ;and byte [rbx + ], bl": 11,
                "outsb dx, byte [rsi];movsxd rbp, dword [rax];insb byte [rdi], dx;outsd dx, dword [rsi];jb ": 12,
                "outsd dx, dword [rsi];jb ;add byte [rdx], bl;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 13,
                "push rsp;jns ;jb ;outsd dx, dword [rsi];jb ": 18,
                "jns ;jb ;outsd dx, dword [rsi];jb ;add byte [rdx], bl": 16,
                "jne ;outsb dx, byte [rsi];je ;add byte [rax], al;sbb ch, byte [rdx]": 31,
                "sbb ch, byte [rdx];sub ch, byte [rbp + ];jo ;jae ;jb ": 28,
                "jb ;jns ;add byte [rdx], bl;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "je str.runtime.sliceInterfacePtr;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];imul ebp, dword [rsi + ], ": 1,
                "outsb dx, byte gs:[rsi];je ;add byte [rdx], bl;sub ch, byte [rdi + ];sub ah, byte [rsi + ]": 1,
                "insb byte [rdi], dx;jb ;je ;je ;add byte [rax], al": 6,
                "movsxd rsi, dword [rdx + rax*2 + ];jb ;add byte [rdx], bl;sub dh, byte [rdx + ];outsb dx, byte [rsi]": 4,
                "add byte [rdx], bl;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ;insd dword [rdi], dx": 4,
                "movsxd rbp, dword [rbx + ];invalid;push ;movsxd rsi, dword [rdx + rdx*2 + ];movsxd rbp, dword [rdi + ]": 3,
                "insb byte [rdi], dx;insb byte [rdi], dx;push rbx;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "insb byte [rdi], dx;push rbx;je ;jb ;jne ": 1,
                "add byte fs:[rax], al;sbb dh, byte [rax + ];jo ;jb ;jne str.e_func____int32__int__error": 1,
                "sbb ebp, dword [rdx];pop rbx;cmp byte [rbp + ], bl;jne ;je ": 1,
                "je ;sub dword [rax], esp;sub byte [rcx + ], ch;je ;and byte [rbp + ], ah": 5,
                "insb byte [rdi], dx;imul esp, dword [rbp + rdx*2 + ], ;push ;jb ;jb str.e_json.UnsupportedValueError": 6,
                "push ;jb ;jb str.e_json.UnsupportedValueError;add byte [rbx], bl;sbb ebp, dword [rdx]": 6,
                "invalid;jne ;imul esp, dword [rbp + ], ;outsd dx, dword [esi];invalid": 29,
                "pop rdi;outsb dx, byte [rsi];outsd dx, dword [rsi];imul ebp, dword gs:[rsi + ], ;jo ": 13,
                "je ;jb ;invalid;movsxd rsp, dword [rbp + ];je ": 12,
                "insd dword [rdi], dx;jne ;sbb ebp, dword [rdx];jne ;movsxd rbp, dword [rax]": 1,
                "insd dword [rdi], dx;jne ;outsb dx, byte [rsi];je ;xor al, ": 1,
                "jae ;jae ;invalid;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "sub byte [rcx + ], ch;je ;and byte [rbx + ], dh;jb ;outsb dx, byte [rsi]": 1,
                "add byte [rdx + rbp], bl;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];jae str.map.bucket_reflect.Type_int": 9,
                "jae ;jb ;outsb dx, byte [rsi];sub dword [eax], esp;jae ": 25,
                "jns ;pop rbp;sub ah, byte [rdi + ];invalid;outsb dx, byte gs:[rsi]": 22,
                "invalid;invalid;jne ;jb ;je ": 8,
                "insb byte [rdi], dx;sub dword [rax], eax;add byte [], bl;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 5,
                "outsb dx, byte gs:[rsi];je ;add byte [rax], al;sbb eax, ;sub ah, byte [rsi + ]": 7,
                "jb ;outsb dx, byte [rsi];sub al, ;jne ;movsxd rbp, dword [rax]": 17,
                "outsb dx, byte [rsi];sub al, ;jne ;movsxd rbp, dword [rax];sub dword [rax], esp": 12,
                "imul ebp, dword [rsi + ], ;pop rbx;pop rbp;jae ;jb ": 13,
                "outsd dx, dword [rsi];jb ;add byte [], bl;sub ch, byte [rbp + ];jo ": 15,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];insb byte [rdi], dx;add byte [rax], al;sbb eax, ": 27,
                "imul esi, dword [rbp + ], ;imul ebp, dword [rsi + ], ;jb ;invalid;movsxd rsp, dword [rbp + ]": 13,
                "invalid;movsxd rsp, dword [rbp + ];jnp ;add byte [rax], al;sbb eax, ": 13,
                "pop rbp;sub ah, byte [rdi + ];invalid;ja str.map_string_otto._dclProperty;jb ": 11,
                "jns ;add byte gs:[rax], al;sbb eax, ;sub ch, byte [rbp + ];jo str.map_string_otto._dclProperty": 11,
                "sbb eax, ;sub ch, byte [rbp + ];jo str.map_string_otto._dclProperty;imul ebp, dword [rsi + ], ;movsxd rsp, dword [rbp + ]": 11,
                "jnp ;pop rbp;sub dh, byte [rbx + ];outsb dx, byte [rsi];movsxd rbp, dword [rsi]": 25,
                "movsxd rbp, dword [rsi];sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];invalid": 1,
                "jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];jns str.otto._nodeVariableExpression;pop rbp": 10,
                "sbb eax, ;sub ch, byte [rbp + ];jo str.otto._nodeVariableExpression;jae ;jb ": 9,
                "sub ch, byte [rbp + ];jo str.syscall.RawSockaddrLinklayer;jae ;jb ;sub ah, byte [rsi + ]": 1,
                "jns ;add byte [], bl;sub ch, byte [rdi + ];je ;pop rdi": 8,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];je ;adc dword [rdx + ], ebp;push ": 4,
                "add byte [rax], al;sbb eax, ;movsxd rbp, dword [rbp + ];insb byte [rdi], dx;pop rdi": 3,
                "add byte [], bl;jo ;jb ;jne ;je ": 2,
                "jae ;imul ebp, dword [rdi + ], ;sub bl, byte [rbx + ];pop rbp;pop rbx": 2,
                "invalid;movsxd rbp, dword [rax + ];outsb dx, byte [rsi];je ;add byte [rsi], bl": 1,
                "pop rbp;jne str.func_string_____uint8__error;outsb dx, byte [rsi];je ;add byte [rax], al": 4,
                "outsd dx, dword [rsi];outsb dx, byte [rsi];add byte [rax], al;invalid;sub ah, byte [rsi + ]": 5,
                "imul ebp, dword [rbp + ], ;insd dword [rdi], dx;jne ;invalid;je ": 11,
                "invalid;jne ;imul esp, dword [rbp + ], ;sub ah, byte [rdi + ];invalid": 11,
                "jo ;push ;je ;imul ebp, dword [rsi + ], ;outsd dx, dword [rsi]": 19,
                "sub ch, byte [rbp + ];jo ;outsd dx, dword [rsi];je ;outsd dx, dword [rsi]": 11,
                "je ;outsd dx, dword [rsi];pop rdi;insb byte [rdi], dx;jae ": 14,
                "push r15;pop rcx;pop r8;push ;jno ": 9,
                "ja ;jne ;add byte [rsi], bl;movsxd rbp, dword [rbp + ];sub ah, byte [rsi + ]": 1,
                "sub bl, byte [rbx + ];sub bl, byte [rbx + ];xor dword [rcx], edi;xor al, ;xor byte [rbx*2 + ], dh": 2,
                "xor al, ;xor byte [rbx*2 + ], dh;je ;insd dword [rdi], dx;push ": 2,
                "push ;jb ;outsb dx, byte [rsi];invalid;add byte [rax], al": 2,
                "outsb dx, byte [rsi];je ;sub dword [rax], esp;imul ebp, dword [rsi + ], ;sub ah, byte [rsi + ]": 2,
                "sub dword [rax], esp;imul ebp, dword [rsi + ], ;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 2,
                "je ;and byte [rbx + ], bl;pop rbp;jne ;outsb dx, byte [rsi]": 7,
                "outsd dx, dword [rsi];insb byte [rdi], dx;sub dword [rax], eax;add byte [rdi], bl;sub ch, byte [rbp + ]": 13,
                "pop rbp;sub ah, byte [rbp + ];imul ebp, dword [esi + ], ;imul esi, dword [rsi + ], ;je ": 18,
                "add byte [rdi], bl;sub ch, byte [rbp + ];jo ;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "outsb dx, byte gs:[rsi];je ;imul esi, dword [rbx + ], ;movsxd rbp, dword [rbp + ];insb byte [rdi], dx": 1,
                "jne ;movsxd rbp, dword [rax];sub dword [rax], esp;sub byte [rbx + ], dh;jae ": 1,
                "movsxd rbp, dword [rax];sub dword [rax], esp;sub byte [rbx + ], dh;jae ;invalid": 1,
                "outsb dx, byte [rsi];outsb dx, byte [rsi];sub al, ;jb ;outsd dx, dword [rsi]": 1,
                "jne ;je ;imul esp, dword [rbp + ], ;and byte [rdx], ch;jne ": 3,
                "invalid;insb byte [rdi], dx;jne ;add byte [rax], al;and byte [rdx], ch": 5,
                "add byte [rax], al;and byte [rdx], ch;insd dword [rdi], dx;invalid;jo ": 25,
                "jne ;imul esp, dword [rbp + ], ;outsd dx, dword [esi];invalid;je str.map.hdr_reflect.Type__gob.decOp": 5,
                "outsd dx, dword [esi];invalid;je str.map.hdr_reflect.Type__gob.decOp;jo ;pop rbp": 5,
                "invalid;jne ;imul esp, dword [rbp + ], ;imul ebp, dword [rsi + ], ;outsb dx, byte [rsi]": 5,
                "imul esp, dword [rbp + ], ;imul ebp, dword [rsi + ], ;outsb dx, byte [rsi];jae ;push ax": 5,
                "je ;xor al, byte [rax];add byte [rax], ah;and byte [rdx], ch;insd dword [rdi], dx": 5,
                "je ;jo ;add byte fs:[rax], al;and byte [rdx], ch;insd dword [rdi], dx": 5,
                "insd dword [rdi], dx;invalid;jo ;push ;imul ebp, dword [rsi + ], ": 5,
                "jo ;add byte [rax], al;and byte [rdx], ch;insd dword [rdi], dx;invalid": 5,
                "je ;pop rdi;outsd dx, dword [rsi];invalid;push ": 64,
                "and byte [rdx], ch;insd dword [rdi], dx;invalid;jo ;jb ": 5,
                "add byte [rax], ah;and byte [rbx + ], ah;jo ;pop rdi;jbe ": 3,
                "insb byte [rdi], dx;js ;jb str.github.com_robertkrimen_otto_file;jae ;imul ebp, dword [rdi + ], ": 2,
                "je ;je ;sub al, ;jb ;outsd dx, dword [rsi]": 2,
                "jne ;sub al, ;jb ;outsd dx, dword [rsi];jb ": 29,
                "jo ;invalid;jne str.map.bucket_string_token._keyword;imul esp, dword [rbp + ], ;outsd dx, dword [esi]": 8,
                "sub ah, byte [rdi + ];invalid;movsxd rcx, dword gs:[rdi + ];add byte [rax], al;and dword [rdx], ebp": 8,
                "invalid;movsxd rcx, dword gs:[rdi + ];add byte [rax], al;and dword [rdx], ebp;insd dword [rdi], dx": 8,
                "insd dword [rdi], dx;invalid;jo ;invalid;jne str.map.hdr_string__engine.NativeVar": 9,
                "outsd dx, dword [rsi];insb byte [rdi], dx;add byte [rax], al;and dword [rdx], ebp;insd dword [rdi], dx": 9,
                "invalid;jo ;push ;outsb dx, byte [rsi];je ": 9,
                "jo ;push ;and dword [rdx], ebp;jne ;movsxd rbp, dword [rax]": 1,
                "je ;imul ebp, dword [rsi + ], ;outsd dx, dword [rsi];pop rdi;movsxd rbp, dword fs:[rax + rdx*2 + ]": 8,
                "imul ebp, dword [esi + ], ;and dword [rdx], ebp;jne ;movsxd rbp, dword [rax];imul ebp, dword [rsi + ], ": 1,
                "xor al, ;jge ;add byte [rcx], ah;and dword [rdx], ebp;jae ": 3,
                "jge ;add byte [rcx], ah;and dword [rbx + ], esp;jo ;pop rdi": 2,
                "jb ;add byte [rax], al;and ch, byte [rdx];jne ;movsxd rbp, dword [rax]": 4,
                "outsb dx, byte [rsi];add byte [rax], al;and ch, byte [rdx];insd dword [rdi], dx;invalid": 4,
                "invalid;jo ;imul esi, dword [rbp + ], ;imul ebp, dword [rsi + ], ;imul ebp, dword [esi + ], ": 17,
                "imul esi, dword [rbp + ], ;imul ebp, dword [rsi + ], ;imul ebp, dword [esi + ], ;imul esi, dword [rsi + ], ;add byte [rdx], ah": 4,
                "je ;jae ;pop rbp;sub ch, byte [rdi + ];je ": 8,
                "push ;jne ;outsb dx, byte [rsi];je ;xor ah, byte [rax]": 4,
                "outsb dx, byte [rsi];and byte [ebp], bh;add byte [rdx], ah;and ch, byte [rdx];jne ": 1,
                "movsxd rbp, dword [rsi];jne ;js ;and byte [rbp + ], ch;and ch, byte [rdx]": 1,
                "js ;and byte [rbp + ], ch;and ch, byte [rdx];jne ;movsxd rbp, dword [rax]": 1,
                "invalid;jb ;push ;add byte [rax], al;and ebp, dword [rdx]": 1,
                "outsd dx, dword [rsi];je ;outsd dx, dword [rsi];jne ;movsxd rsi, dword [rcx + rbp*2 + ]": 2,
                "invalid;insb byte [rdi], dx;jne ;add byte [rax], al;and ebp, dword [rdx]": 2,
                "and ebp, dword [rdx];jne ;movsxd rbp, dword [rax];jb ;insb byte [rdi], dx": 3,
                "outsb dx, byte [rsi];sub dword [eax], esp;sub byte [rdx], ch;outsd dx, dword [rsi];je ": 4,
                "je ;jo ;add byte [rax], al;and ebp, dword [rdx];insd dword [rdi], dx": 4,
                "outsb dx, byte [rsi];push rdx;invalid;outsb dx, byte [rsi];and byte fs:[rbp], bh": 1,
                "jne ;outsb dx, byte [rsi];je ;and al, ;pop rbx": 1,
                "sub dword gs:[eax], esp;jb ;outsd dx, dword [rsi];jb ;add byte [rdx + rbp], ah": 2,
                "outsb dx, byte [rsi];sub dword [eax], esp;sub byte [rdx + ], dh;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 10,
                "insb byte [rdi], dx;add byte [rax], al;and al, ;insd dword [rdi], dx;invalid": 5,
                "imul esp, dword [rbp + ], ;imul ebp, dword [rsi + ], ;movsxd rsp, dword [rbp + ];jnp ;pop rbp": 5,
                "imul esi, dword [rdx + ], ;movsxd rsi, dword [rax + ];jge ;add byte [rdx + rbp], ah;and al, ": 5,
                "pop rdi;movsxd rbp, dword fs:[rbx + rdx*2 + ];and al, ;jne ;movsxd rbp, dword [rax]": 1,
                "jb ;outsb dx, byte [rsi];and byte [ebp], bh;add byte [rdx + rbp], ah;and al, ": 3,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;and byte cs:[ebp], bh;add byte [rdx + rbp], ah": 2,
                "and byte [rsi + ], al;jne ;outsb dx, byte [rsi];je ;and eax, ": 1,
                "imul esp, dword [rbp + ], ;and byte [rdx], ch;pop rbx;pop rbp;jae ": 3,
                "and byte [rdx + ], ah;outsd dx, dword [rsi];insb byte [rdi], dx;add byte [rax], al;sub ah, byte es:[rsi + ]": 5,
                "jne ;add byte [rax], al;sub ah, byte es:[rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 12,
                "movsxd rbp, dword [rax];jne ;movsxd rbp, dword [rax];jae ;jb ": 9,
                "jb ;outsd dx, dword [rsi];jb ;add byte [rax], al;sub ah, byte es:[rsi + ]": 8,
                "add byte [rax], al;sub ch, byte es:[rbp + ];jo ;invalid;jne ": 18,
                "outsd dx, dword [esi];invalid;movsxd rax, dword gs:[rbp + ];imul ebp, dword [esi + ], ;sub ch, byte es:[rbp + ]": 9,
                "je ;add byte [rsi], ah;sub ch, byte es:[rbp + ];jo ;invalid": 9,
                "jb ;movsxd rsi, dword [rax + ];and byte [rsi + ], al;jne ;sub ah, byte es:[rsi + ]": 1,
                "je ;je ;cmp esp, dword [rax];jae ;insb byte [rdi], dx": 9,
                "imul ebp, dword [rbp + ], ;xor al, ;jge ;add byte [rsi], ah;sub dh, byte es:[rbx + ]": 4,
                "imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx;invalid;outsb dx, byte gs:[esi];xor byte [rbx + ], ah": 3,
                "jno ;sub dword [rax], esp;jb ;outsd dx, dword [rsi];jb ": 5,
                "jb ;outsd dx, dword [rsi];jb ;add byte [rdi], ah;invalid": 5,
                "invalid;imul esi, dword [rdx + ], ;movsxd rsi, dword [rax + ];jge ;add byte [rdi], ah": 6,
                "invalid;invalid;invalid;invalid;movsxd rsp, dword [rbp + ]": 6,
                "imul ebp, dword [rsi + ], ;movsxd rsp, dword [rbp + ];jnp ;sub dword [rax], esp;sub byte [rcx + ], ch": 5,
                "je ;cmp esp, dword [rax];insb byte [rdi], dx;insd dword [rdi], dx;jo ": 8,
                "cmp esp, dword [rax];insb byte [rdi], dx;insd dword [rdi], dx;jo ;sub ah, byte [rdi + ]": 11,
                "cmp esp, dword [rax];push ;outsb dx, byte [esi];invalid;insb byte [rdi], dx": 3,
                "movsxd rbp, dword [rbx + ];jb ;and byte [rbp + ], ah;jb ;jb ": 22,
                "sub dword [rdx], ebp;jne ;movsxd rbp, dword [rax];jae ;jb ": 10,
                "outsb dx, byte [rsi];sub al, ;jne ;movsxd rbp, dword [rax];jae ": 5,
                "invalid;jo ;push ;push ;and byte [rdi + ], ch": 4,
                "sub al, ;sub ah, byte [rbp + ];imul ebp, dword [esi + ], ;imul esi, dword [rsi + ], ;invalid": 6,
                "add byte [rdx], ch;sub ch, byte [rdx];jne ;movsxd rbp, dword [rax];jne ": 6,
                "jo ;add byte [rax], al;sub ch, byte [rdx];insd dword [rdi], dx;invalid": 6,
                "push rdx;and byte [rdx + ], ch;outsd dx, dword [rsi];outsb dx, byte [rsi];insb byte [rdi], dx": 4,
                "je str.struct___F_uintptr__R_json.structEncoder;insd dword [rdi], dx;jb ;insd dword [rdi], dx;jne ": 4,
                "sub ch, byte [rdi + ];sub ch, byte [rdx];jne ;movsxd rbp, dword [rax];jne ": 1,
                "sub ebp, dword [rdx];jae ;jb ;sub ch, byte [rdx];insd dword [rdi], dx": 1,
                "je ;je ;cmp esp, dword [rax];invalid;and byte [rbx + ], bl": 1,
                "cmp esp, dword [rax];invalid;and byte [rbx + ], bl;jae ;jb ": 1,
                "jb ;outsb dx, byte [rsi];cmp esp, dword [eax];js ;jae ": 7,
                "outsb dx, byte [rsi];sub dword [eax], esp;sub ch, byte [rdi + ];je ;pop rdi": 1,
                "jo ;invalid;jne ;imul esp, dword [rbp + ], ;movsxd rbp, dword [rax + ]": 2,
                "and byte [rdi + ], ch;je ;pop rdi;jb ;jb str.struct___Struct_reflect.Type__Field_string": 9,
                "jb ;jb str.struct___Struct_reflect.Type__Field_string;outsb dx, byte [rsi];movsxd rsp, dword [rbp];add byte [], ch": 9,
                "je ;sub al, ;jne ;movsxd rbp, dword [rax];jne ": 1,
                "je ;jnp ;push rbx;je ;jne ": 8,
                "jb ;insb byte [rdi], dx;sub eax, ;movsxd rbp, dword [rax];sub ch, byte [rdi + ]": 1,
                "outsb dx, byte [rsi];and byte [ebp], bh;add byte [], ch;sub eax, ;pop rdi": 7,
                "add byte [], ch;sub eax, ;pop rdi;jbe ;insb byte [rdi], dx": 7,
                "and byte [rax], ch;imul ebp, dword [rsi + ], ;jae ;invalid;insb byte [rdi], dx": 7,
                "outsb dx, byte [rsi];je ;add byte [rax], al;invalid;sub dh, byte [rbx + ]": 6,
                "jo ;and byte [rdx], ch;jne ;outsb dx, byte [rsi];je ": 5,
                "and byte [rbp], bh;add byte [rax], dh;xor byte [rdx], ch;jne ;movsxd rbp, dword [rax]": 5,
                "add byte [rax], al;xor byte [rdx], ch;jne ;movsxd rbp, dword [rax];imul ebp, dword [rsi + ], ": 6,
                "invalid;insb byte [rdi], dx;jne ;add byte [rax], al;xor byte [rdx], ch": 7,
                "xor byte [rdx], ch;insd dword [rdi], dx;invalid;jo ;sub ah, byte cs:[rsi + ]": 1,
                "outsd dx, dword [esi];invalid;movsxd rax, dword gs:[rbp + ];imul ebp, dword [esi + ], ;xor byte [rdx], ch": 10,
                "xor byte [rdx], ch;jae ;jb ;movsxd rsi, dword [rax + ];and byte [rsi + ], al": 19,
                "imul ebp, dword [esi + ], ;sub ch, byte [rdx];outsd dx, dword [esi];invalid;movsxd rax, dword gs:[rbp + ]": 6,
                "je ;and byte [rbp], bh;add byte [rax], dh;xor byte [rdx], ch;jae ": 7,
                "outsb dx, byte [rsi];je ;xor byte [rdx], ch;jne ;movsxd rbp, dword [rax]": 1,
                "jae ;movsxd rsp, dword [rax];jne ;outsb dx, byte [rsi];je ": 3,
                "movsxd rsi, dword [rax + ];and byte [rdx + ], dh;outsd dx, dword [rsi];je ;jb ": 9,
                "imul ebp, dword [rsi + ], ;jae ;jae ;invalid;insb byte [rdi], dx": 3,
                "outsb dx, byte [rsi];je ;sub al, ;xor byte [rdx], ch;jne ": 1,
                "and byte [rax], ch;pop rbx;pop rbp;jne ;outsb dx, byte [rsi]": 3,
                "add byte [rax], al;xor dword [rdx], ebp;jne ;movsxd rbp, dword [rax];jae ": 7,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];insb byte [rdi], dx;add byte [rax], al;xor dword [rdx], ebp": 6,
                "cmp esp, dword [rax];pop rdi;pop rdi;and byte [rdx], ch;jb str.2_struct___F_uintptr__sv___json.reflectWithString": 6,
                "je ;imul ebp, dword [rsi + ], ;xor ch, byte [rdx];jae ;jb ": 5,
                "insd dword [rdi], dx;jne ;xor dword [rdx], ebp;jne ;movsxd rbp, dword [rax]": 1,
                "je ;insd dword [rdi], dx;imul r14, qword cs:[ebx + ], ;xor ch, byte [rdx];jae ": 4,
                "jb ;jne ;xor dword [rdx], ebp;insd dword [rdi], dx;invalid": 1,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;cmp esp, dword cs:[eax];je ": 2,
                "je ;je ;cmp esp, dword [rax];outsd dx, dword [rsi];insb byte [rdi], dx": 4,
                "cmp esp, dword [rax];outsd dx, dword [rsi];insb byte [rdi], dx;jbe ;insb byte [rdi], dx": 3,
                "and byte [rsi + ], ch;ja ;invalid;insb byte [rdi], dx;and byte [rbp + ], dh": 2,
                "jae ;outsd dx, dword cs:[rsi];sub al, ;pop rbx;pop rbp": 2,
                "outsd dx, dword [rsi];insd dword [rdi], dx;insd dword [rdi], dx;outsb dx, byte gs:[rsi];xor al, ": 1,
                "xor al, ;jne ;movsxd rbp, dword [rax];jne ;movsxd rbp, dword [rax]": 2,
                "insb byte [rdi], dx;sub dword [rax], esp;sub byte [rdx + ], dh;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 2,
                "insb byte [rdi], dx;sub dword [rax], eax;add byte [rdx + rbp], dh;xor al, ;jae ": 2,
                "je ;insd dword [rdi], dx;cmp esp, dword cs:[eax];jae ;invalid": 2,
                "push rdi;outsd dx, dword [rsi];jb ;and byte [rcx + ], ch;je ": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], cl;add byte [rax], al;add byte [rax], al": 19,
                "invalid;movsxd rax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [rax], al": 2,
                "xchg eax, ebx;add byte [rax], cl;or byte [rsi], dh;xor dl, bl;lea eax, [rax]": 2,
                "xchg eax, edx;mov ebx, ;add byte [rax], al;mov edi, 0;add byte [rax], al": 2,
                "add byte [rax], al;add ah, dh;jl ;inc byte [rax];or byte [rax], cl": 2,
                "add byte [rax], al;xor al, ;jne ;movsxd rbp, dword [rax];jne ": 1,
                "xor eax, ;jne ;je ;jnp ;and byte [rbp + ], r14b": 3,
                "outsd dx, dword [rsi];imul ebp, dword [rsi + ], ;outsb dx, byte [rsi];and byte [rbp + ], dh;outsb dx, byte [rsi]": 1,
                "jnp ;jae ;jp ;and byte [rbp + ], dh;outsb dx, byte [rsi]": 1,
                "invalid;insb byte [rdi], dx;insb byte [rdi], dx;outsd dx, dword [rsi];movsxd rsp, dword [rax]": 4,
                "outsd dx, dword [rsi];movsxd rsp, dword [rax];jne ;outsb dx, byte [rsi];je ": 4,
                "je ;xor al, ;jge ;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], bl;add byte [rax], al;add byte [rax], al;add byte [rax], al": 2,
                "add al, cl;insd dword [rdi], dx;loopne ;add cl, byte [rax];or byte [rdi], dl": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;sbb byte [rax], al": 2,
                "je ;je ;cmp esp, dword [rax];and byte gs:[rdx], ch;outsb dx, byte gs:[rsi]": 2,
                "and byte [rbx + ], dh;jp ;and byte [rbp + ], dh;outsb dx, byte [rsi];je ": 2,
                "jb ;outsb dx, byte [rsi];and byte [ebp], bh;add byte [rdi], dh;invalid": 3,
                "invalid;sub dh, byte [rbx + ];jb ;movsxd rsi, dword [rax + ];and byte [rbp + ], dh": 3,
                "invalid;insb byte [rdi], dx;and byte gs:[rdx + ], dh;outsb dx, byte [rsi];je ": 2,
                "insd dword [rdi], dx;push rcx;jne ;jne ;cmp esp, dword [rax]": 2,
                "outsb dx, byte [rsi];je str.8_struct___F_uintptr__value_otto.Value__result__float64;insd dword [rdi], dx;push ;sub al, ": 3,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];insb byte [rdi], dx;sub dword [rax], eax;add byte [rax], bh": 3,
                "invalid;pop rbp;jae ;jb ;movsxd rsi, dword [rax + ]": 1,
                "sub ah, byte [rdx + ];outsd dx, dword [rsi];insb byte [rdi], dx;and byte [rbp], bh;add byte [rdx], bh": 2,
                "jae ;movsxd rsi, dword [eax + edi*2 + ];sub al, ;sub dh, byte [rdx + ];outsb dx, byte [rsi]": 3,
                "jne ;imul esp, dword [rbp + ], ;jge ;add byte [rdx], bh;cmp ch, byte [rdx]": 3,
                "add byte [rdx], bh;cmp ch, byte [rdx];jae ;jb str.struct___F_uintptr__frame__runtime.stkframe__bad_uintptr;movsxd rsi, dword [rax + ]": 3,
                "cmp ch, byte [rdx];jae ;jb str.struct___F_uintptr__frame__runtime.stkframe__bad_uintptr;movsxd rsi, dword [rax + ];and byte [rdi + rbp*2 + ], ch": 3,
                "jae ;jb str.struct___F_uintptr__frame__runtime.stkframe__bad_uintptr;movsxd rsi, dword [rax + ];and byte [rdi + rbp*2 + ], ch;imul esp, dword [rax], ": 3,
                "jb ;cmp ch, byte [rdx];jne ;movsxd rbp, dword [rax];sub dh, byte [rdx + ]": 1,
                "add byte [rbx], bh;cmp ebp, dword [rdx];jae ;jb ;movsxd rsi, dword [rax + ]": 3,
                "outsb dx, byte [rsi];cmp esp, dword [eax];jae ;movsxd rsp, dword [rax];jae ": 8,
                "movsxd rsp, dword [rax];jae ;jb ;outsb dx, byte [rsi];and byte [ebp], bh": 8,
                "je ;insd dword [rdi], dx;cmp esp, dword cs:[eax];jo ;and byte [rbp + ], dh": 4,
                "outsd dx, dword [esi];invalid;jne ;jb ;jns ": 2,
                "add byte [rax], al;add byte [rcx], al;add byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rax], al;add ch, al;invalid;call qword [rbx];invalid": 2,
                "add dword [rcx], eax;add dword [rax], ;lea eax, [rax];add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;sar byte [rbx + ], 0;add byte [rbx], al;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;sub dh, byte ds:[rbx + ];jb ;movsxd rsi, dword [rax + ];and byte [rsi + ], al": 1,
                "invalid;push ;movsxd rsi, dword [rsp + rbp + ];sub ch, byte [rdi + ];je ": 6,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];insb byte [rdi], dx;cmp esp, dword [rax];outsd dx, dword [rsi]": 7,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;jo ;and byte [rdi + ], bl": 6,
                "jbe ;insb byte [rdi], dx;jne ;and byte [rbx + ], dh;jb ": 5,
                "js ;push rdx;js ;cmp esp, dword [rax];jb ": 4,
                "cmp esp, dword gs:[rax];jae ;insb byte [rdi], dx;and byte [rdx], ch;outsd dx, dword [rsi]": 6,
                "je ;cmp esp, dword [rax];jae ;invalid;jae ": 3,
                "movsxd rbp, dword [rbx + ];jb ;jb ;pop rbx;pop rbp": 3,
                "insb byte [rdi], dx;outsd dx, dword [rsi];invalid;je ;and byte [rdx + ], ah": 1,
                "and byte [rdx + ], ah;outsd dx, dword [rsi];insb byte [rdi], dx;add byte [rax], al;sub r14b, byte [r11 + ]": 1,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;cmp esp, dword gs:[rax];outsb dx, byte [rsi]": 1,
                "je ;je ;cmp esp, dword [rax];jbe ;outsd dx, dword [rsi]": 1,
                "movsxd rsi, dword gs:[rsi + rbp + ];jns ;cmp esp, dword gs:[rax];jae ;insb byte [rdi], dx": 2,
                "jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx;and byte gs:[rbp], bh": 1,
                "sub dword [rax], esp;sub byte [rbx + ], dh;jb ;outsd dx, dword [rsi];outsb dx, byte [rsi]": 1,
                "invalid;je ;add byte [rax], al;push rcx;sub dh, byte [rbx + ]": 1,
                "jne ;and byte [rdx + ], dh;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];invalid": 1,
                "invalid;movsxd rsp, dword [rbp + ];jnp ;cmp esp, dword [rax];jb ": 2,
                "jo ;and byte [rdx], ch;jae ;jb ;outsb dx, byte [rsi]": 1,
                "jne ;outsb dx, byte [rsi];je ;cmp esp, dword [rax];jb ": 1,
                "jae ;jp ;and byte [rdx], ch;jne ;outsb dx, byte [rsi]": 1,
                "jp ;and byte [rdx], ch;jne ;outsb dx, byte [rsi];je ": 1,
                "cmp esp, dword [rax];outsb dx, byte [rsi];jp ;jb ;and byte [rdx + ], ah": 1,
                "js ;and byte [rbx + ], dh;invalid;movsxd rbp, dword [rbx + ];jb ": 1,
                "imul r14, qword cs:[ebx + ], ;imul ebp, dword [rsi + ], ;add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "push ;jne ;je ;jnp ;imul esi, dword [rcx + rdi*2 + ], ": 1,
                "xor byte [rax], dh;xor byte [rbp + ], bl;outsb dx, byte [rsi];jae ;push ax": 1,
                "xor byte [rbp + ], bl;outsb dx, byte [rsi];jae ;push ax;outsd dx, dword [rsi]": 1,
                "insb byte [rdi], dx;push ;jb ;and byte [rdx + ], dh;and byte [rbx + ], bl": 1,
                "imul ebp, dword [rsi + ], ;push ;jae ;jb ;movsxd rsi, dword [rax + ]": 1,
                "push ;jae ;jb ;movsxd rsi, dword [rax + ];and byte [rsi + ], al": 2,
                "jb ;insd dword [rdi], dx;cmp esp, dword [rax];jbe ;insb byte [rdi], dx": 1,
                "insb byte [rdi], dx;jne ;cmp esp, dword [rax];je ;imul esi, dword [rbx + ], ": 1,
                "jb ;cmp esp, dword [eax];jbe ;jae ;je ": 1,
                "cmp esp, dword [eax];jbe ;jae ;je ;jne ": 1,
                "jae ;pop rbx;pop rbp;pop rbx;pop rbp": 1,
                "pop rbx;pop rbp;imul ebp, dword [rsi + ], ;imul ebp, dword [rsi + ], ;jne ": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rdx + ], al;or byte [rax], cl": 1,
                "add byte [rax], al;add byte [rdx + ], al;or byte [rax], cl;xor eax, ;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rsi + 2], al;add byte [rax], al": 1,
                "sar byte [], 1;invalid;add byte [rsi], bl;and eax, ;add al, byte [rax]": 1,
                "invalid;add byte [rax], ah;cmp ecx, dword [rsi];add byte [rdx], dl;add eax, dword [rax]": 1,
                "invalid;add al, dl;cmp ecx, dword [rsi];add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;pop rax;add byte [rax], al;add byte [rax], al": 1,
                "invalid;invalid;xor byte [], dh;invalid;invalid": 2,
                "and eax, ;cmp esp, dword [rsi];cmp eax, ;sub dword [rax], esp;sub dword [rax], ebp": 2,
                "xor byte [rbx + ], dh;xor eax, ;cmp al, ;cmp al, ;cmp eax, ": 2,
                "je ;jne ;movsxd rcx, dword [rbp + ];outsb dx, byte [rsi];insb byte [rdi], dx": 2,
                "imul ebx, dword [rdx + ], ;pop rbx;pop rbp;and bh, byte [rdx];and cl, byte [rdx]": 2,
                "pop rbp;or bl, byte [rsi + ];outsd dx, dword fs:[rsi];imul ebp, dword [rcx], ;insd dword [rdi], dx": 2,
                "and byte [r8], r12b;push rax;and byte [], ah;and byte [], ch;and byte [rsi], bh": 2,
                "push rax;and byte [], ah;and byte [], ch;and byte [rsi], bh;and byte [rax], ah": 2,
                "invalid;invalid;jns ;imul esi, dword [rdx + ], ;js ": 2,
                "and byte [rcx + ], ah;and byte [rax], ah;jo ;and byte [rcx + ], ch;and byte [rax], ah": 2,
                "jb ;jp ;je ;invalid;jns ": 2,
                "insb byte [rdi], dx;outsb dx, byte gs:[rsi];je ;insd dword [rdi], dx;imul ebp, dword [rsi + ], ": 2,
                "insb byte [rdi], dx;imul esp, dword [rbx + ], ;insd dword [rdi], dx;jb ;invalid": 2,
                "jne ;jb ;je ;jb ;jb ": 2,
                "je ;jb ;jb ;outsb dx, byte [rsi];xor dword gs:[rax], esp": 2,
                "invalid;jae ;jb ;ja ;jo ": 2,
                "outsd dx, dword [rsi];jne ;outsb dx, byte [rsi];je ;jne ": 2,
                "outsb dx, byte [rsi];je ;xor al, ;invalid;imul esi, dword [rcx + rbp*2 + ], ": 2,
                "jae ;invalid;outsb dx, byte [rsi];and byte [rax], ah;sub byte [rbx + ], dh": 2,
                "invalid;outsb dx, byte [rsi];sub dword [rax], esp;sub byte [rdx + rsi*2 + ], dh;jo ": 2,
                "push rsi;invalid;insb byte [rdi], dx;jne ;and byte ds:[rcx + rdi*2 + ], ah": 2,
                "jb ;outsd dx, dword [rsi];outsb dx, byte [rsi];jbe ;jb ": 2,
                "jbe ;jb ;jns ;jb ;outsd dx, dword [rsi]": 2,
                "outsd dx, dword [rsi];jb ;invalid;jns ;jb ": 2,
                "je ;invalid;invalid;invalid;outsb dx, byte [rsi]": 2,
                "je ;outsb dx, byte [rsi];jae ;outsd dx, dword [rsi];jo ": 2,
                "outsb dx, byte [rsi];invalid;invalid;invalid;invalid": 2,
                "invalid;invalid;invalid;imul ebp, dword fs:[rsi + ], ;invalid": 2,
                "outsb dx, byte [rsi];imul ecx, dword [rbp + ], ;jb ;movsxd rsi, dword [rdi + rbp*2 + ];jb ": 2,
                "and byte [rbx + ], dl;outsb dx, byte [rsi];outsb dx, byte [rsi];outsd dx, dword [rsi];je ": 2,
                "invalid;jae ;and byte [rbp + ], dh;invalid;invalid": 2,
                "cmp eax, ;jbe ;insb byte [rdi], dx;cmp eax, ;imul ebp, dword [rsi + ], ": 2,
                "outsd dx, dword [rsi];jb ;and eax, ;jnp ;js ": 2,
                "je ;push ;push rdx;jne ;xor dword gs:[rcx + ], ecx": 2,
                "push ;invalid;imul ecx, dword fs:[rcx + rcx*2 + ], ;pop r8;pop rdi": 2,
                "insd dword [rdi], dx;outsd dx, dword [rsi];outsb dx, byte [rsi];outsd dx, dword [esi];insb byte [rdi], dx": 2,
                "invalid;invalid;outsb dx, byte [rsi];push rax;invalid": 2,
                "push rax;invalid;jb ;push rbp;imul ebp, dword [rsi + ], ": 2,
                "invalid;outsb dx, byte [rsi];jae ;push rsp;jns ": 2,
                "invalid;outsb dx, byte [rsi];imul edi, dword [rdx], ;pop rbx;cmp ah, byte [rbx + ]": 2,
                "cmp ah, byte [rcx + rbp*2 + ];imul esi, dword [rdx + rdi + ], ;invalid;jo ;cmp bl, byte [rbp + ]": 2,
                "jb ;pop rbp;pop rbx;cmp dh, byte [rax + ];imul ebp, dword [rsi + ], ": 2,
                "invalid;je ;insd dword [rdi], dx;imul esp, dword [rbx + ], ;and byte fs:[rcx + ], ch": 2,
                "jne ;movsxd rbp, dword fs:[rdi + ];jns ;je ;movsxd rbp, dword [rbx + ]": 2,
                "jne ;je ;jo ;and byte fs:[rdi + rbp*2 + ], ch;invalid": 1,
                "insb byte [rdi], dx;jne ;and byte [rdx], ah;je ;jae ": 1,
                "je ;jae ;je ;imul ebp, dword [rsi + ], ;jb ": 1,
                "invalid;and byte fs:[rsi + ], ah;invalid;insd dword [rdi], dx;and byte gs:[rcx + ], ch": 1,
                "jne ;invalid;invalid;and byte fs:[rbx + ], dh;movsxd rbp, dword gs:[rcx + ]": 1,
                "invalid;and byte fs:[rbx + ], dh;movsxd rbp, dword gs:[rcx + ];insb byte [rdi], dx;and byte [rbx + ], ch": 1,
                "invalid;je ;jae ;imul bp, word gs:[rsi + ], ;outsd dx, dword [rsi]": 1,
                "outsb dx, byte [rsi];movsxd rsi, dword [ebx + ];jb ;outsb dx, byte [rsi];imul esi, dword [rbx + ], ": 1,
                "imul bp, word [rsi + ], ;je ;imul ebp, dword [rcx + ], ;je ;imul esi, dword [rbx + ], ": 1,
                "movsxd rsi, dword [rdi + rbp*2 + ];jns ;je ;jo ;and byte [rax + ], ch": 1,
                "imul ebp, dword [rsi + ], ;outsd dx, dword [rsi];outsd dx, dword [rsi];and byte [rbp + ], ch;outsb dx, byte [rsi]": 1,
                "outsb dx, byte [rsi];movsxd rsi, dword [rcx + rbp*2 + ];outsb dx, byte [rsi];invalid;jne ": 1,
                "outsb dx, byte [rsi];invalid;jne ;jb ;jae ": 1,
                "imul rsp, qword [rbp + ], ;jo ;jae ;jb ;outsd dx, dword [rsi]": 1,
                "pop rdi;push rsp;jb ;outsb dx, byte [rsi];invalid": 1,
                "push rbp;outsb dx, byte [rsi];imul bp, word gs:[rsi + ], ;insb byte [rdi], dx;invalid": 1,
                "imul bp, word gs:[rsi + ], ;insb byte [rdi], dx;invalid;invalid;insb byte [rdi], dx": 1,
                "invalid;insb byte [rdi], dx;and byte [rdi], ah;and eax, ;outsb dx, byte [rsi]": 1,
                "jbe ;insb byte [rdi], dx;imul esp, dword [rax + ], ;movsxd rbp, dword [rcx + ];jae ": 1,
                "jae ;invalid;invalid;and byte fs:[rsi + ], ah;outsb dx, byte [rsi]": 1,
                "jae ;insd dword [rdi], dx;and byte [rax + ], dh;and byte gs:[ebx + ], dh;jp ": 1,
                "push rax;outsd dx, dword [rsi];imul ebp, dword [rsi + ], ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 1,
                "jae ;jo ;and byte [rcx + ], ch;jbe ;insb byte [rdi], dx": 1,
                "je ;insd dword [rdi], dx;cmp ah, byte gs:[rax];movsxd rbp, dword [rdi + ];jne ": 1,
                "jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx;cmp ah, byte gs:[rax]": 10,
                "invalid;jb ;insb byte [rdi], dx;outsd dx, dword [rsi];movsxd rbp, dword [rbx + ]": 1,
                "je ;and byte [rsi + ], ch;je ;jb ;movsxd rbp, dword [rdi + ]": 1,
                "and byte [rdi + ], al;and byte [rbx + ], dh;jb ;movsxd rsi, dword [rax + ];imul esp, dword [rbp + ], ": 1,
                "jle ;and esp, dword [rsi];sub ch, byte [rax];sub dword [], edi;invalid": 1,
                "pop rbp;sub dword [rdi], ebp;insb byte [rdi], dx;imul esp, dword [rdx + ], ;invalid": 1,
                "jb ;and byte [rbx + ], dh;outsd dx, dword [rsi];jo ;xor byte [], ch": 1,
                "jo ;outsd dx, dword [rsi];jb ;or ah, byte [rdx + ];and byte fs:[], ah": 1,
                "movsxd rsp, dword gs:[ecx + ];invalid;je ;movsxd rbp, dword [rdi + ];jbe ": 1,
                "jbe ;movsxd rsp, dword [rbp + ];outsd dx, dword [rsi];jb ;jb ": 1,
                "and byte gs:[rcx + ], ch;movsxd rbp, dword [rdi + ];jb ;movsxd rsi, dword [rdi + ];je ": 1,
                "jb ;movsxd rsi, dword [rdi + ];je ;imul ebp, dword [rsi + ], ;and byte [], ah": 1,
                "insd dword [rdi], dx;and byte [rbx + ], ah;insb byte [rdi], dx;insb byte [rdi], dx;imul ebp, dword [rsi + ], ": 1,
                "cmp ah, byte gs:[rax];pop rsp;and eax, ;jno ;outsb dx, byte [rsi]": 1,
                "outsb dx, byte [rsi];jbe ;insb byte [rdi], dx;imul esp, dword [rax + ], ;movsxd rbp, dword [rbx + ]": 1,
                "je ;movsxd rbp, dword [rdi + ];and byte [rbx + ], dh;push ;imul esi, dword [rbx + ], ": 1,
                "and byte [rsi + ], ch;je ;jae ;jo ;outsd dx, dword [rsi]": 1,
                "outsd dx, dword [rsi];jb ;jo ;outsb dx, byte [rsi];imul esp, dword [rbx + ], ": 1,
                "and byte [rax + ], ch;jae ;outsb dx, byte [rsi];outsd dx, dword [rsi];and byte [rsi + ], ah": 1,
                "and byte [rbx + ], dh;outsd dx, dword [rsi];jne ;and byte fs:[rsi + ], ch;jbe ": 1,
                "xor byte [rsi], dh;sub eax, ;xor eax, ;xor byte [], dh;sub eax, ": 1,
                "xor dword [rdx], esi;xor eax, ;push rbp;cmp r12b, byte [r8];movsxd rsp, dword [rcx + ]": 1,
                "movsxd rsp, dword [rcx + ];and byte [rsi + ], ch;je ;outsb dx, byte gs:[rsi];invalid": 1,
                "jae ;jae ;movsxd rsp, dword [rdi + ];pop rdi;je ": 1,
                "pop rdi;je ;jb ;invalid;pop rdi": 1,
                "invalid;cmp ah, byte fs:[rax];invalid;invalid;and byte fs:[rbx + ], dh": 1,
                "je ;jo ;and byte [rdi + ], dh;outsd dx, dword [rsi];outsb dx, byte [rsi]": 1,
                "imul esp, dword [rbp + ], ;movsxd rbp, dword [rax + ];movsxd rbp, dword [rbx + ];cmp ah, byte fs:[rax];and eax, ": 1,
                "push ;invalid;invalid;cmp ah, byte fs:[rax];outsb dx, byte [rsi]": 1,
                "je ;insd dword [rdi], dx;jb ;outsd dx, dword [rsi];jne ": 1,
                "insb byte [rdi], dx;insb byte [rdi], dx;jne ;js ;outsb dx, byte [rsi]": 1,
                "js ;outsb dx, byte [rsi];jbe ;insb byte [rdi], dx;imul esp, dword [rax + ], ": 1,
                "outsb dx, byte [rsi];invalid;invalid;invalid;je ": 1,
                "and byte gs:[rsi + ], ch;insb byte [rdi], dx;and byte [rsi + ], dh;insb byte [rdi], dx;jne ": 1,
                "and byte [rdx + ], dh;outsb dx, byte [rsi];je ;insd dword [rdi], dx;and byte gs:[rbx + ], dh": 1,
                "insb byte [rdi], dx;imul ebp, dword gs:[rsi + ], ;and byte [rcx + rdi*2 + ], dh;and byte gs:[rax + ], dh;jae ": 1,
                "jae ;and byte fs:[rdi + rbp*2 + ], dh;outsb dx, byte [rsi];ja ;sub dword [rdx + ], ebp": 1,
                "outsb dx, byte [rsi];cmp ah, byte [rax];push rbp;outsb dx, byte [rsi];insd dword [rdi], dx": 1,
                "jae ;imul ebp, dword [rsi + ], ;movsxd rbp, dword [rbx + ];imul ebp, dword [rsi + ], ;outsb dx, byte [rsi]": 1,
                "outsb dx, byte fs:[rsi];and byte fs:[rax + ], dh;imul ebp, dword fs:[rsi + ], ;invalid;jne ": 1,
                "movsxd rsi, dword [rcx];cmp ah, byte [rax];outsb dx, byte [rsi];ja ;and byte [ecx + ], ch": 1,
                "and byte [rdx + rsi*2 + ], ah;jbe ;jb ;outsb dx, byte [rsi];outsd dx, dword [rsi]": 1,
                "outsb dx, byte [rsi];sub eax, ;and byte [rcx + rdi*2 + ], dh;jb ;insb byte [rdi], dx": 2,
                "invalid;and byte fs:[rsi + ], ch;outsd dx, dword [rsi];and byte gs:[rcx + ], ah;jb ": 1,
                "and byte [rdi + rbp*2 + ], ch;jae ;outsb dx, byte [rsi];je ;js ": 1,
                "jb ;outsd dx, dword [rsi];jb ;jae ;invalid": 1,
                "outsb dx, byte [rsi];outsb dx, byte [rsi];imul ebp, dword [rsi + ], ;insb byte [rdi], dx;invalid": 1,
                "invalid;outsb dx, byte [rsi];je ;outsd dx, dword [rsi];and byte [rbp + ], ch": 1,
                "and byte [rcx + rbp*2 + ], ah;jb ;outsb dx, byte [rsi];je ;jae ": 1,
                "and byte [rcx + ], ch;and byte [rax + ], dh;jo ;jb ;outsd dx, dword [rsi]": 1,
                "and byte [rdx + ], dh;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];invalid;jo ": 1,
                "and byte [rbx + ], ah;jne ;invalid;invalid;invalid": 1,
                "insb byte [rdi], dx;imul esp, dword [rax + ], ;invalid;jb ;js ": 1,
                "push r13;push rbx;push rdx;xor dword [rdx], edi;and byte [rbp + ], dh": 1,
                "and byte [rdx + ], ah;je ;outsb dx, byte gs:[rsi];and byte [rcx + ], ah;jae ": 1,
                "je ;je ;and byte [rbp + ], ah;je ;jns ": 1,
                "je ;insd dword [rdi], dx;jo ;and byte [rdi + rbp*2 + ], dh;jb ": 1,
                "sub dword [rcx + ], ebp;and byte [rcx + rbp*2 + ], ch;jb ;insb byte [rdi], dx;and byte [rdx + rsi*2 + ], dh": 3,
                "jo ;outsb dx, byte [rsi];je ;jb ;invalid": 1,
                "and byte [rbp + ], ah;jb ;jb ;sub eax, ;jne ": 1,
                "outsd dx, dword [rsi];outsb dx, byte [rsi];cmp ah, byte [rax];imul ebp, dword [rsi + ], ;and byte [rsi + ], ch": 1,
                "invalid;je ;outsd dx, dword [rsi];outsb dx, byte [rsi];insd dword [rdi], dx": 1,
                "and byte [rcx + rbp*2 + ], ch;je ;invalid;movsxd rsp, dword [rbp + ];cmp ah, byte [rax]": 1,
                "jo ;outsd dx, dword fs:[rsi];outsb dx, byte [rsi];and byte gs:[rcx + ], ah;and byte [rax + ], ch": 1,
                "and byte [rdx + ], dh;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];invalid;imul esp, dword [rbp + ], ": 1,
                "invalid;imul esp, dword [rbp + ], ;imul esp, dword [rbx + ], ;invalid;invalid": 2,
                "je ;insd dword [rdi], dx;cmp ah, byte gs:[rax];movsxd rsp, dword [rcx + ];outsb dx, byte [rsi]": 1,
                "movsxd rsp, dword [rcx + ];and byte gs:[rbp + ], ch;insd dword [rdi], dx;outsd dx, dword [rsi];jb ": 1,
                "and byte [rbx + ], dh;outsb dx, byte [esi];invalid;insb byte [rdi], dx;pop rdi": 1,
                "and byte [rcx + ], ah;and byte fs:[rdx + rsi*2 + ], dh;invalid;jo ;jae ": 1,
                "jae ;outsd dx, dword fs:[rsi];and byte [rsi + ], ch;je ;insd dword [rdi], dx": 2,
                "xor dh, byte [];sub eax, ;xor dl, byte [rcx + rsi + ];cmp dh, byte [rax];xor al, ": 1,
                "cmp dh, byte [rax];xor al, ;xor byte [], dh;cmp dword [rcx], edi;cmp dword [rcx], edi": 1,
                "movsxd rsi, dword gs:[rbp + ];and byte [rbp + ], ah;jb ;jb ;and byte [], ah": 1,
                "pop rsp;sub ebx, dword [rbp + rbp + ];pop rsp;jnp ;jge ": 1,
                "outsb dx, byte [rsi];imul bp, word [ebp + ], ;jo ;and byte [rdi + rbp*2 + ], ah;jae ": 1,
                "invalid;je ;cmp ah, byte [rax];movsxd rbp, dword [rdi + ];jb ": 1,
                "outsb dx, byte [rsi];outsd dx, dword [rsi];je ;jo ;imul ebp, dword [rsi + ], ": 1,
                "imul esi, dword [rbx + ], ;insb byte [rdi], dx;insb byte [rdi], dx;outsd dx, dword [rsi];movsxd rdi, dword [rdx]": 1,
                "and byte [rdi + ], ch;jb ;je ;jb ;jae ": 1,
                "jo ;and byte [rdx + ], ah;and byte fs:[rbx + ], dh;invalid;outsb dx, byte [rsi]": 1,
                "outsd dx, dword [rsi];jb ;and byte [rbp + ], ah;jo ;imul ebp, dword [rsi + ], ": 1,
                "xor eax, ;xor eax, ;xor dh, byte [];xor dh, byte [];cmp byte [rcx], bh": 1,
                "xor dh, byte [rsi];cmp dword [], esi;jb ;and byte [rdx + ], ah;and byte [rdx + rsi*2 + ], ah": 1,
                "insb byte [rdi], dx;imul esp, dword [rax + ], ;imul esp, dword [rsi + ], ;jae ;invalid": 2,
                "and byte fs:[rcx + ], ah;and byte fs:[rcx + ], ch;push ;invalid;jb ": 1,
                "jae ;outsd dx, dword [rsi];jo ;invalid;imul esi, dword [rax + ], ": 1,
                "and byte [rcx + ], al;jo ;outsb dx, byte [rsi];outsb dx, byte fs:[rsi];je ": 1,
                "je ;insd dword [rdi], dx;cmp ah, byte gs:[rax];insd dword [rdi], dx;imul esi, dword [rbx + ], ": 1,
                "je ;outsb dx, byte gs:[rsi];and byte [rdx], dh;and byte [rcx + ], ah;and byte fs:[rbx], dh": 1,
                "outsb dx, byte gs:[rsi];and byte [rdx], dh;and byte [rcx + ], ah;and byte fs:[rbx], dh;and byte ss:[rdx + ], dh": 1,
                "invalid;je ;cmp ah, byte [rcx + ];jo ;imul esp, dword [rbx + ], ": 1,
                "xor edi, dword [rcx];xor dword [rcx], edi;xor byte [rsi], dh;invalid;xor edi, dword [rax]": 1,
                "xor dword ss:[rdi], esi;xor esi, dword [rdi];cmp dword [rax], edi;cmp byte [rax + rsi], dh;xor esi, dword []": 1,
                "xor esi, dword [rdi];cmp dword [rax], edi;cmp byte [rax + rsi], dh;xor esi, dword [];xor eax, ": 1,
                "jo ;je ;and byte [rdi + ], dh;je ;and byte [rsi + ], ch": 1,
                "je ;imul ebp, dword [rsi + ], ;imul ebp, dword [rsi + ], ;js ;outsd dx, dword [rsi]": 1,
                "js ;outsd dx, dword [rsi];jb ;and byte fs:[rsi + ], ah;insb byte [rdi], dx": 2,
                "jae ;imul ebp, dword [rdi + ], ;outsb dx, byte [rsi];jbe ;insb byte [rdi], dx": 1,
                "js ;movsxd rsi, dword gs:[rbp + ];and byte [], ah;outsd dx, dword [rsi];je ": 1,
                "xor ah, byte [rax];ja ;jne ;and byte fs:[rdi + ], ch;jb ": 1,
                "push ;and byte [rbx + ], ah;outsb dx, byte [rsi];je ;imul ebp, dword [rsi + ], ": 1,
                "and byte fs:[rdi + ], dh;imul ebp, dword [rbp + ], ;and byte [ebx + ], ah;movsxd rbp, dword gs:[rbx + ];invalid": 1,
                "and eax, ;and byte [rdx + ], dh;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];imul ebp, dword [rsi + ], ": 1,
                "and byte [rdx + ], dh;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];imul ebp, dword [rsi + ], ;outsd dx, dword [rsi]": 1,
                "movsxd rsi, dword gs:[rdx + rdi + ];movsxd rsp, dword [rcx + ];insb byte [rdi], dx;and byte [rdi + ], ch;and byte [rbp + ], cl": 1,
                "outsd dx, dword [rsi];jne ;and byte [rdi + ], dh;je ;and byte [rcx + ], ch": 1,
                "jbe ;jb ;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rdx + rdi + ]": 1,
                "invalid;je ;and byte fs:[rdx + ], ah;and byte [rbp + ], cl;imul esp, dword [rbp + ], ": 1,
                "je ;jae ;imul esi, dword [rbx + ], ;imul ebp, dword [rsi + ], ;and byte [rbx + ], dh": 1,
                "jae ;imul esi, dword [rbx + ], ;imul ebp, dword [rsi + ], ;and byte [rbx + ], dh;invalid": 1,
                "je ;imul ebp, dword [rsi + ], ;jb ;and byte [rax + ], dh;imul ebp, dword [rsi + ], ": 1,
                "and byte gs:[rdi + ], ch;and byte [rsi + ], al;js ;insb byte [rdi], dx;insb byte [rdi], dx": 1,
                "invalid;outsw dx, word gs:[rsi];jb ;and byte [rsi + ], al;js ": 1,
                "outsb dx, byte [rsi];imul esi, dword [rdx + rcx + ], ;je ;outsb dx, byte [rsi];and byte [ecx + ], ah": 1,
                "movsxd rsp, dword [rbp + ];and eax, ;and byte [rcx + ], ah;jb ;invalid": 1,
                "insb byte [rdi], dx;jne ;push rbx;insb byte [rdi], dx;imul esp, dword [rbx + ], ": 1,
                "movsxd rsi, dword [rdx + ];jo ;and byte [rsi + ], dh;insb byte [rdi], dx;jne ": 1,
                "and byte [rcx + ], ch;and byte [rbx + ], ah;jb ;outsb dx, byte gs:[rsi];je ": 1,
                "jns ;invalid;je ;push ;jb ": 1,
                "je ;jb ;invalid;je ;xor byte [rax], dh": 1,
                "xor dword [rcx], esi;xor dword [rdx], esi;xor dword [rbx], esi;xor dword [rcx + rsi], esi;xor eax, ": 1,
                "xor dword [rax], edi;xor dword [rcx], edi;xor dh, byte [rax];xor dh, byte [rcx];xor dh, byte [rdx]": 1,
                "xor bh, byte [rax];xor bh, byte [rcx];xor esi, dword [rax];xor esi, dword [rcx];xor esi, dword [rdx]": 1,
                "xor al, ;xor al, ;xor al, ;xor eax, ;xor dh, byte []": 1,
                "xor al, ;xor al, ;xor eax, ;xor dh, byte [];xor eax, ": 1,
                "cmp dword [rax], esi;cmp dword [rcx], esi;cmp dword [rdx], esi;cmp dword [rbx], esi;cmp dword [rcx + rdi], esi": 1,
                "push rbp;add byte [rax], al;add byte [rax], al;add byte [rax + ], al;push rsp": 1,
                "mov rcx, qword [arg_20h];mov rdx, qword [arg_8h];xor ebx, ebx;xor esi, esi;jmp ": 1,
                "cmp rax, rbx;ja ;mov qword [var_40h], rax;mov qword [var_38h], rcx;mov qword [var_48h], rdx": 1,
                "mov rdx, qword [arg_80h];mov qword [var_8h], rdx;mov qword [var_10h], rax;mov qword [var_18h], rbx;mov qword [var_20h], rdx": 1,
                "call sym.go.runtime.panicslice;ud2;call sym.go.runtime.morestack_noctxt;jmp sym.go.crypto_cipher.StreamReader.Read;int3": 1,
                "jne ;mov qword [var_20h], rax;lea rcx, [];mov qword [rsp], rcx;mov qword [var_10h], rax": 1,
                "mov qword [var_20h], rax;lea rcx, [];mov qword [rsp], rcx;mov qword [var_10h], rax;call sym.go.runtime.makeslice": 1,
                "call sym.go.runtime.makeslice;mov rax, qword [var_18h];mov qword [var_40h], rax;lea rcx, [];mov qword [rsp], rcx": 1,
                "mov rax, qword [var_8h];mov rcx, qword [arg_58h];mov qword [rax], rcx;cmp dword [], 0;jne ": 1,
                "cmp dword [], 0;jne ;mov rcx, qword [var_38h];mov qword [rax + ], rcx;mov qword [rax + ], 0": 1,
                "jne ;mov rcx, qword [var_38h];mov qword [rax + ], rcx;mov qword [rax + ], 0;mov rcx, qword [rax + ]": 1,
                "mov qword [rax + ], 0;mov rcx, qword [rax + ];mov rdx, qword [arg_70h];cmp rcx, rdx;cmovg rcx, rdx": 1,
                "call sym.go.runtime.memmove;mov rax, qword [var_30h];jmp ;lea rdi, [rax + ];mov rcx, rax": 1,
                "jmp ;lea rdi, [rax + 8];mov rcx, rax;mov rax, qword [arg_60h];call sym.go.runtime.gcWriteBarrier": 1,
                "mov rcx, rax;mov rax, qword [arg_60h];call sym.go.runtime.gcWriteBarrier;mov rax, rcx;jmp ": 1,
                "mov rbx, qword [rcx + ];mov rsi, qword [rcx + ];mov rdi, qword [rcx + ];mov r8, rbx;sub rbx, rdi": 1,
                "mov rdx, qword [var_40h];lea rbx, [rsi + rdx];mov rax, rdx;mov rcx, qword [arg_58h];mov rdx, qword [rcx + ]": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], rdx;call sym.go.github.com_robertkrimen_otto.Value.string;mov rax, qword [var_18h];mov qword [var_40h], rax": 1,
                "mov byte [var_20h], 1;call sym.go.github.com_robertkrimen_otto.rangeStartEnd;mov rax, qword [var_28h];mov rcx, qword [var_30h];cmp rax, rcx": 1,
                "ja ;mov rdx, qword [var_38h];cmp rcx, rdx;ja ;sub rcx, rax": 1,
                "mov qword [arg_b0h], rcx;mov qword [arg_b8h], rax;mov rbp, qword [var_48h];add rsp, ;ret": 1,
                "ud2;call sym.go.runtime.morestack_noctxt;jmp sym.go.github.com_robertkrimen_otto.builtinString_substring;int3;int3": 1,
                "jmp sym.go.github.com_robertkrimen_otto.builtinString_substring;int3;int3;int3;int3": 1,
                "mov rcx, qword [var_38h];add rax, rcx;mov qword [rsp], rax;mov qword [var_8h], rdx;call sym.go.runtime.convTstring": 2,
                "mov qword [rsp], rax;mov rax, qword [arg_60h];mov rcx, qword [arg_58h];mov rdx, qword [arg_50h];mov qword [var_8h], rdx": 4,
                "mov rax, qword [arg_60h];mov rcx, qword [arg_58h];mov rdx, qword [arg_50h];mov qword [var_8h], rdx;mov qword [var_10h], rcx": 4,
                "mov qword [var_8h], rcx;mov qword [var_10h], rax;call sym.go.github.com_robertkrimen_otto.Value.string;mov rax, qword [var_18h];mov rcx, qword [var_20h]": 4,
                "mov rbp, qword [var_28h];add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.github.com_robertkrimen_otto.builtinString_toUpperCase": 1,
                "mov rax, qword [arg_58h];mov rcx, qword [arg_60h];mov rdx, qword [arg_68h];mov qword [var_8h], rax;mov qword [var_10h], rcx": 1,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rdx;call sym.go.github.com_robertkrimen_otto.Value.string;mov rax, qword [var_20h]": 1,
                "mov qword [var_8h], rcx;mov qword [var_10h], rdx;call sym.go.github.com_robertkrimen_otto.Value.string;mov rax, qword [var_20h];mov rcx, qword [var_18h]": 1,
                "mov rax, qword [arg_58h];mov rcx, qword [arg_60h];mov rdx, qword [arg_68h];or esi, dword [rbx + ];invalid": 1,
                "invalid;js ;invalid;invalid;insd dword [rdi], dx": 1,
                "add byte [rax], al;or esi, dword [rbp + ];je ;movsxd rsi, dword gs:[rbp + rbp*2 + ];jo ": 1,
                "insb byte [rdi], dx;pop rdi;invalid;insb byte [rdi], dx;insb byte [rdi], dx": 1,
                "or esi, dword [rdi + ];imul esi, dword [rbp + rsi*2 + ], ;add byte [rax], al;or esi, dword [rdi + ];imul esp, dword [rbp + ], ": 1,
                "or esi, dword [rdi + ];outsd dx, dword [rsi];insb byte [rdi], dx;push rdx;js ": 1,
                "insb byte [rdi], dx;push rdx;js ;add byte [rax], al;or esi, dword [rdi + ]": 1,
                "cmp byte [rax], al;add byte [rdx + rbp], cl;sub dh, byte [rbx + ];outsb dx, byte [rsi];movsxd rbp, dword [rsi]": 1,
                "outsb dx, byte [rsi];je ;add byte ss:[rax], al;or al, ;pop rbx": 2,
                "xor al, byte [rax];add byte [rdx + rbp], cl;or al, ;pop rbx;xor al, ": 1,
                "xor al, ;cmp dword [rsi], esi;pop rbp;jne ;outsb dx, byte [rsi]": 1,
                "movups xmmword [rdi], xmm0;add rdi, ;movups xmm0, xmmword [rsi];movups xmmword [rdi], xmm0;movups xmmword [rdi + ], xmm0": 1,
                "sub rbx, ;add rdi, ;cmp rbx, ;jae ;jmp ": 16,
                "vpxor ymm0, ymm0, ymm0;cmp rbx, ;jae ;vmovdqu ymmword [rdi], ymm0;vmovdqu ymmword [rdi + ], ymm0": 16,
                "vmovdqu ymmword [rdi + rbx - ], ymm0;vzeroupper;ret;vmovdqu ymmword [rdi], ymm0;mov rsi, rdi": 15,
                "vmovntdq ymmword [rdi + ], ymm0;sub rbx, ;add rdi, ;cmp rbx, ;jae ": 14,
                "ret;mov qword [rdi], rax;ret;mov qword [rdi], rax;mov qword [rdi + rbx - 8], rax": 14,
                "movdqu xmmword [rdi + rbx - ], xmm0;movdqu xmmword [rdi + rbx - ], xmm0;movdqu xmmword [rdi + rbx - ], xmm0;movdqu xmmword [rdi + rbx - ], xmm0;movdqu xmmword [rdi + rbx - ], xmm0": 48,
                "test rbx, rbx;movups xmm0, xmmword [rsi];add rsi, ;movups xmmword [rdi], xmm0;add rdi, ": 1,
                "mov rdi, qword [arg_8h];mov rsi, qword [arg_10h];mov rbx, qword [arg_18h];test rbx, rbx;je ": 9,
                "jne ;cmp rsi, rdi;jbe ;cmp rbx, ;jbe ": 7,
                "jne ;mov eax, esi;or eax, edi;test eax, 7;je ": 6,
                "mov eax, esi;or eax, edi;test eax, 7;je ;mov rcx, rbx": 6,
                "ret;mov ax, word [rsi];mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rax, qword [arg_50h];mov qword [var_8h], rax;mov rax, qword [arg_58h];mov qword [var_10h], rax;mov rax, qword [arg_60h]": 2,
                "xor edx, edx;jmp ;call sym.go.runtime.morestack_noctxt;jmp sym.go.syscall.fcntl;int3": 1,
                "ret;mov qword [rsp], rax;call sym.go.runtime.convT64;mov rcx, qword [var_8h];lea rax, []": 2,
                "mov qword [rsp], rax;call sym.go.runtime.convT64;mov rcx, qword [var_8h];lea rax, [];jmp ": 2,
                "ja ;jne ;mov rcx, qword [];mov rdx, qword [];mov qword [arg_78h], rax": 1,
                "lock cmpxchg qword [rcx], rbx;sete dl;test dl, dl;je ;mov byte [arg_28h], 1": 1,
                "mov rbp, qword [var_10h];add rsp, ;ret;mov byte [arg_28h], 0;mov rbp, qword [var_10h]": 1,
                "mov rcx, qword [arg_30h];movabs rdx, ;test rax, rdx;jne ;jmp ": 1,
                "mov ebx, ;movabs rsi, ;mov qword [var_28h], rdx;mov qword [var_18h], rsi;mov qword [var_10h], rbx": 1,
                "test rdi, rax;jne ;mov r8, rdi;or rdi, rax;add rdi, 8": 1,
                "mov rdx, qword [var_28h];mov rbx, qword [var_10h];mov rsi, qword [var_18h];mov r9, qword [var_20h];jmp ": 1,
                "mov rcx, qword [rax + ];mov qword [var_60h], rcx;mov rdx, qword [rax + ];mov qword [var_40h], rdx;mov rbx, qword [rax + ]": 1,
                "mov qword [rsi + ], rbx;mov qword [rsi + ], rcx;lea rax, [];mov qword [rsp], rax;call sym.go.runtime.newobject": 1,
                "mov r9, qword [rdx];cmp rsi, r8;ja ;lea rsi, [rbx + 1];mov qword [rdx + 8], rsi": 1,
                "mov qword [rsi + ], rax;cmp dword [], 0;jne ;mov qword [rsi + ], rbx;mov qword [rsi + ], rdx": 1,
                "jne ;mov qword [rdx + ], rax;lea rax, [];mov qword [arg_90h], rax;mov qword [arg_98h], rdx": 1,
                "jmp ;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r9;mov qword [var_10h], rbx": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r9;mov qword [var_10h], rbx;mov qword [var_18h], r8": 1,
                "jmp ;call sym.go.runtime.gcWriteBarrier;jmp ;mov rdx, qword [rcx + ];mov qword [rsp], rdx": 1,
                "mov qword [var_10h], rax;call sym.go.github.com_robertkrimen_otto_ast.__Comments_.SetExpression;mov rax, qword [var_58h];mov rcx, qword [arg_80h];jmp ": 1,
                "ret;call sym.go.runtime.morestack_noctxt;jmp fcn.00531260;int3;int3": 1,
                "jmp fcn.00531260;int3;int3;int3;int3": 1,
                "jbe ;sub rsp, ;mov qword [var_98h], rbp;lea rbp, [var_98h];mov qword [var_80h], 0": 1,
                "jne ;mov rcx, qword [rax + ];bt ecx, 1;jb ;mov qword [rsp], rax": 1,
                "mov qword [rsi + ], rcx;mov qword [rsi + ], rbx;cmp dword [], 0;jne ;mov qword [rsi + ], rax": 5,
                "lea rdi, [rsi + ];call sym.go.runtime.gcWriteBarrier;jmp ;mov rcx, qword [rax + ];mov rcx, qword fs:[]": 1,
                "jb ;mov qword [rsp], rax;call sym.go.github.com_robertkrimen_otto_parser.___parser_.scan;mov rax, qword [var_8h];mov rcx, qword [var_20h]": 5,
                "mov qword [arg_d8h], rdx;mov rdx, qword [var_90h];mov qword [arg_e0h], rdx;mov qword [arg_e8h], rax;mov qword [arg_f0h], rcx": 1,
                "mov rcx, qword [var_90h];jmp ;mov rax, qword [rax + ];mov qword [rsp], rcx;call rax": 1,
                "xor ecx, ecx;jmp ;lea rdi, [rsi + ];mov rax, rbx;call sym.go.runtime.gcWriteBarrier": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], 3;call sym.go.github.com_robertkrimen_otto_ast.__Comments_.MarkComments;mov rax, qword [arg_d0h];jmp ": 1,
                "jbe ;sub rsp, ;mov qword [var_118h], rbp;lea rbp, [var_118h];xorps xmm0, xmm0": 1,
                "cmp qword [rsi + ], ;jne ;mov qword [var_50h], rax;mov qword [var_38h], rcx;mov rdx, qword [rsi + ]": 1,
                "mov rdx, qword [var_38h];mov qword [var_90h], rdx;lea rdx, [];mov qword [var_98h], rdx;mov qword [var_a0h], 5": 1,
                "bt ebx, 1;jb ;movups xmm0, xmmword [var_88h];movups xmmword [arg_130h], xmm0;movups xmm0, xmmword [var_98h]": 1,
                "jb ;movups xmm0, xmmword [var_88h];movups xmmword [arg_130h], xmm0;movups xmm0, xmmword [var_98h];movups xmmword [arg_140h], xmm0": 1,
                "call sym.go.github.com_robertkrimen_otto_parser.___parser_.parsePrimaryExpr;mov rax, qword [var_10h];mov rcx, qword [var_8h];mov rdx, qword [arg_48h];mov rbx, qword [rdx + ]": 1,
                "cmp rbx, ;je ;cmp rbx, ;jne ;mov qword [rsp], rdx": 3,
                "cmp rbx, ;jne ;mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax": 3,
                "mov byte [var_10h], dl;mov qword [var_18h], rax;call sym.go.runtime.deferproc;test eax, eax;jne ": 5,
                "mov rsi, rax;mov rax, rcx;mov rcx, rsi;mov rbx, qword [rdx + ];cmp rbx, ": 2,
                "jne ;mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax;call sym.go.github.com_robertkrimen_otto_parser.___parser_.parseCallExpress": 2,
                "mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], rax;call sym.go.github.com_robertkrimen_otto_ast.__Comments_.SetExpression;mov rax, qword [var_60h]": 2,
                "call sym.go.github.com_robertkrimen_otto_ast.CommentMap.AddComments;mov rax, qword [var_70h];mov rcx, qword [var_50h];mov rdx, qword [arg_90h];jmp ": 2,
                "mov rax, qword [arg_90h];mov rcx, qword [rax + ];mov word [rcx + ], ;mov rcx, qword [var_38h];mov rdx, qword [var_58h]": 2,
                "mov rax, qword [arg_90h];mov rcx, qword [rax + ];mov word [rcx + ], ;jmp ;call sym.go.runtime.deferreturn": 2,
                "mov qword [var_50h], rsi;mov rdi, qword [rdx + ];bt edi, 1;jb ;mov qword [rsp], rdx": 1,
                "mov qword [rax], rcx;mov rcx, qword [var_50h];mov qword [rax + 8], rcx;mov rcx, qword [var_48h];mov qword [rax + ], rcx": 2,
                "mov qword [rax + ], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_60h];mov qword [rax + ], rcx": 1,
                "cmp dword [], 0;jne ;mov rcx, qword [var_60h];mov qword [rax + ], rcx;mov byte [rax + ], 1": 1,
                "lea rbp, [var_80h];mov rax, qword [arg_90h];mov rcx, qword [rax + ];mov qword [var_68h], rcx;cmp rcx, ": 1,
                "mov rbx, qword [var_20h];mov rsi, qword [arg_90h];mov qword [rsi + ], rdx;mov qword [rsi + ], rax;cmp dword [], 0": 2,
                "jne ;mov qword [rsi + ], rcx;mov qword [rsi + ], rbx;mov qword [rsp], rsi;call fcn.00533bc0": 2,
                "mov qword [rsp], rsi;call fcn.00533bc0;mov rax, qword [var_10h];mov qword [var_78h], rax;mov rcx, qword [var_8h]": 1,
                "mov rbp, qword [var_80h];add rsp, ;ret;lea rdi, [rax + ];mov rcx, rax": 2,
                "lea rbx, [];cmp rbx, rcx;jne ;lea rax, [];mov qword [rsp], rax": 1,
                "jne ;lea rbx, [];cmp rbx, rcx;je ;cmp edx, ": 1,
                "mov qword [var_20h], ;mov qword [var_28h], 0;xorps xmm0, xmm0;movups xmmword [var_30h], xmm0;call sym.go.github.com_robertkrimen_otto_parser.___parser_.error": 3,
                "xorps xmm0, xmm0;movups xmmword [var_30h], xmm0;call sym.go.github.com_robertkrimen_otto_parser.___parser_.error;mov rax, qword [arg_90h];mov qword [rsp], rax": 2,
                "call sym.go.runtime.newobject;mov rax, qword [var_8h];mov rcx, qword [var_50h];mov qword [rax], rcx;mov rcx, qword [arg_90h]": 1,
                "call sym.go.github.com_robertkrimen_otto_parser.___parser_.parsePostfixExpr;mov rax, qword [var_8h];mov rcx, qword [var_10h];mov qword [arg_98h], rax;mov qword [arg_a0h], rcx": 1,
                "call sym.go.runtime.newobject;mov rdx, qword [var_8h];lea rax, [];mov qword [rdx], rax;cmp dword [], 0": 25,
                "mov qword [rax + ], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_48h];mov qword [rax + ], rcx": 15,
                "cmp rdx, ;je ;mov qword [arg_70h], rcx;mov qword [arg_78h], rax;mov rbp, qword [var_58h]": 6,
                "mov rbp, qword [var_58h];add rsp, ;ret;lea rdi, [rdx + 8];mov rax, qword [arg_68h]": 15,
                "ret;lea rdi, [rdx + 8];mov rax, qword [arg_68h];call sym.go.runtime.gcWriteBarrier;jmp ": 15,
                "jmp ;call sym.go.runtime.morestack_noctxt;jmp fcn.005343f0;int3;int3": 2,
                "mov rax, qword [rdx];call rax;mov rax, qword [arg_68h];mov rcx, qword [rax + ];mov rbx, qword [var_8h]": 3,
                "call sym.go.runtime.deferproc;test eax, eax;jne ;mov rax, qword [arg_68h];mov rcx, qword [rax + ]": 3,
                "cmp dword [], 0;jne ;mov qword [rsi + ], rbx;mov qword [rsi + ], rcx;mov qword [rsp], rsi": 3,
                "test dl, dl;je ;mov rdx, qword [rax + ];bt edx, 1;jb ": 2,
                "cmp dword [], 0;jne ;mov rcx, qword [var_50h];mov qword [rax + ], rcx;lea rcx, []": 2,
                "jmp ;mov rax, qword [var_30h];mov qword [arg_70h], rax;mov rax, qword [var_48h];mov qword [arg_78h], rax": 1,
                "mov rax, qword [var_8h];mov rcx, qword [rsp];mov rbx, qword [arg_68h];jmp ;mov byte [rax + ], 1": 1,
                "mov qword [rsi + ], rcx;mov qword [rsi + ], rbx;mov rdx, qword [var_50h];mov rax, qword [rdx];call rax": 1,
                "mov rax, qword [arg_68h];call sym.go.runtime.gcWriteBarrier;jmp ;call sym.go.runtime.morestack_noctxt;jmp fcn.00534b20": 1,
                "cmp qword [rdx + ], ;jne ;mov qword [var_30h], rcx;mov qword [var_40h], rax;mov rbx, qword [rdx + ]": 9,
                "jmp ;mov rax, qword [rdx + ];mov qword [rsp], rax;call sym.go.github.com_robertkrimen_otto_ast.__Comments_.Unset;mov rdx, qword [arg_68h]": 9,
                "mov qword [rsp], rax;call sym.go.github.com_robertkrimen_otto_ast.__Comments_.Unset;mov rdx, qword [arg_68h];jmp ;mov qword [arg_70h], rcx": 9,
                "mov rax, qword [arg_68h];call sym.go.runtime.gcWriteBarrier;jmp ;call sym.go.runtime.morestack_noctxt;jmp fcn.00535300": 2,
                "call sym.go.runtime.gcWriteBarrier;jmp ;call sym.go.runtime.morestack_noctxt;jmp fcn.00535300;int3": 2,
                "mov qword [var_58h], rbp;lea rbp, [var_58h];mov rax, qword [arg_68h];mov qword [rsp], rax;call sym.go.github.com_robertkrimen_otto_parser.___parser_.parseLogicalOrEx": 1,
                "mov rax, qword [var_18h];mov rcx, qword [var_8h];mov rdx, qword [var_20h];mov rbx, qword [var_10h];mov rcx, qword fs:[]": 1,
                "mov rcx, qword [var_8h];mov rdx, qword [var_20h];mov rbx, qword [var_10h];mov rcx, qword fs:[];lea rax, [rsp - 8]": 1,
                "mov rax, qword [var_8h];mov rcx, qword [var_10h];mov rdx, qword [arg_90h];mov rbx, qword [rdx + ];cmp rbx, ": 1,
                "mov qword [var_50h], rax;mov qword [var_48h], rbx;mov qword [var_68h], rcx;mov rsi, qword [rdx + ];mov qword [var_58h], rsi": 1,
                "lea rdx, [];cmp rdx, rax;jne ;mov qword [rsp], rsi;call fcn.00535920": 1,
                "call sym.go.runtime.newobject;mov rax, qword [var_8h];mov rcx, qword [var_50h];mov qword [rax + 8], rcx;cmp dword [], 0": 1,
                "cmp dword [], 0;jne ;mov rcx, qword [var_68h];mov qword [rax + ], rcx;mov rcx, qword [var_48h]": 1,
                "bt edx, 1;jb ;lea rcx, [];mov qword [arg_98h], rcx;mov qword [arg_a0h], rax": 1,
                "mov qword [rsp], rcx;lea rcx, [];mov qword [var_8h], rcx;mov qword [var_10h], rax;call sym.go.github.com_robertkrimen_otto_ast.__Comments_.SetExpression": 1,
                "ret;cmp rbx, ;jne ;mov ebx, ;jmp ": 1,
                "mov ebx, ;jmp ;cmp rbx, ;jg ;cmp rbx, ": 2,
                "jmp ;cmp rbx, ;je ;jmp ;call sym.go.runtime.morestack_noctxt": 1,
                "lea rbp, [var_80h];lea rax, [];mov qword [rsp], rax;call sym.go.runtime.newobject;mov rdx, qword [var_8h]": 1,
                "call sym.go.runtime.deferproc;test eax, eax;jne ;mov rax, qword [arg_30h];mov qword [rsp], rax": 2,
                "mov rbp, qword [var_20h];add rsp, ;ret;lea rdi, [rdx + ];call sym.go.runtime.gcWriteBarrier": 2,
                "lea rdi, [rdx + ];call sym.go.runtime.gcWriteBarrier;jmp ;lea rdi, [rdx + ];call sym.go.runtime.gcWriteBarrier": 1,
                "mov rax, rbx;mov rdi, rdx;jmp ;mov rdx, rax;mov rax, rcx": 1,
                "mov qword [var_48h], rbp;lea rbp, [var_48h];mov rax, qword [arg_58h];mov qword [rsp], rax;mov qword [var_8h], ": 1,
                "call sym.go.github.com_robertkrimen_otto_parser.___parser_.expect;mov rax, qword [var_40h];jmp ;mov rax, qword [rcx + ];mov qword [rsp], rax": 1,
                "mov rsi, qword [var_18h];mov qword [rsp], rcx;lea rcx, [];mov qword [var_8h], rcx;mov rcx, qword [var_40h]": 1,
                "mov qword [var_28h], rsi;mov qword [var_30h], 2;call sym.go.github.com_robertkrimen_otto_ast.CommentMap.AddComments;mov rax, qword [var_40h];mov rcx, qword [arg_58h]": 1,
                "xor esi, esi;mov rdi, qword [rcx + ];cmp byte [rdi + ], 0;je ;mov qword [var_68h], rdx": 1,
                "mov qword [var_10h], rax;mov rdx, qword [var_68h];mov qword [var_18h], rdx;mov rdx, qword [var_50h];mov qword [var_20h], rdx": 1,
                "cmp rdx, ;je ;cmp rdx, 2;mov rcx, qword fs:[];lea rax, [rsp - ]": 1,
                "call sym.go.runtime.newobject;mov rax, qword [var_8h];mov rcx, qword [var_78h];mov qword [rax + 8], rcx;cmp dword [], 0": 1,
                "movzx edx, byte [rcx + ];mov byte [rcx + ], 1;mov dword [rsp], ;lea rcx, [];mov qword [var_8h], rcx": 1,
                "mov rax, qword [var_8h];mov qword [var_88h], rax;cmp qword [rax + 8], 0;je ;mov rcx, qword [var_80h]": 1,
                "cmp qword [rax + 8], 0;je ;mov rcx, qword [var_80h];mov rdx, qword [rcx + ];mov rbx, qword [rcx + ]": 1,
                "call sym.go.runtime.gcWriteBarrier;jmp ;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rbx": 1,
                "mov rbx, rax;mov rax, qword [var_88h];mov rcx, qword [var_80h];jmp ;lea rdi, [rbx + ]": 1,
                "jmp ;lea rdi, [rbx + ];call sym.go.runtime.gcWriteBarrier;jmp ;mov rcx, qword [var_80h]": 1,
                "cmp qword [rcx + ], ;jne ;mov rdx, qword [var_48h];mov qword [rcx + ], rdx;jmp ": 1,
                "mov rcx, qword [arg_c0h];mov qword [rsp], rcx;lea rdx, [];mov qword [var_8h], rdx;mov qword [var_10h], rax": 1,
                "mov rcx, qword [var_80h];jmp ;mov qword [rsp], rax;call sym.go.github.com_robertkrimen_otto_parser.___parser_.scan;mov rax, qword [var_10h]": 1,
                "mov rbx, qword [var_18h];mov rsi, qword [arg_c0h];mov qword [rsi + ], rcx;mov qword [rsi + ], rbx;cmp dword [], 0": 1,
                "mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax;mov rax, qword [var_80h];mov qword [var_10h], rax": 1,
                "lea rdi, [rsi + ];call sym.go.runtime.gcWriteBarrier;jmp ;mov rsi, rax;jmp ": 1,
                "mov rcx, qword [var_8h];mov qword [var_18h], rcx;mov rdx, qword [arg_48h];mov qword [rsp], rdx;mov qword [var_8h], ": 1,
                "mov qword [var_18h], rcx;mov rdx, qword [arg_48h];mov qword [rsp], rdx;mov qword [var_8h], ;call sym.go.github.com_robertkrimen_otto_parser.___parser_.expect": 1,
                "mov rcx, qword [var_20h];mov qword [rax + ], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_30h]": 1,
                "xor ecx, ecx;xor edx, edx;mov qword [var_20h], rcx;mov qword [var_38h], rdx;mov rbx, qword [rax + ]": 1,
                "mov rcx, rax;mov rax, qword [arg_68h];call sym.go.runtime.gcWriteBarrier;mov rax, rcx;jmp ": 1,
                "mov qword [var_110h], rbp;lea rbp, [var_110h];mov rax, qword [arg_120h];mov rcx, qword [rax + ];bt ecx, 1": 1,
                "jbe ;sub rsp, ;mov qword [var_88h], rbp;lea rbp, [var_88h];xorps xmm0, xmm0": 1,
                "test eax, eax;jne ;mov rax, qword [arg_98h];mov rcx, qword [rax + ];bt ecx, 1": 1,
                "mov qword [var_50h], rcx;mov qword [var_48h], rdx;mov qword [var_78h], rbx;lea rax, [];mov qword [rsp], rax": 1,
                "jne ;mov qword [rsp], rcx;call sym.go.github.com_robertkrimen_otto_parser.___parser_.parseBlockStatem;mov rax, qword [var_8h];lea rcx, []": 1,
                "mov qword [var_8h], rcx;mov rdx, qword [var_68h];mov qword [var_10h], rdx;mov rbx, qword [var_80h];mov qword [var_18h], rbx": 1,
                "cmp rbx, rdx;ja ;mov rsi, qword [arg_110h];cmp rdx, rsi;ja ": 1,
                "xorps xmm0, xmm0;movups xmmword [var_78h], xmm0;movups xmmword [var_88h], xmm0;movups xmmword [var_98h], xmm0;movups xmmword [var_a8h], xmm0": 1,
                "lea rbx, [];mov qword [var_78h], rbx;mov rbx, qword [arg_100h];mov qword [var_80h], rbx;mov rbx, qword [arg_108h]": 1,
                "mov qword [var_70h], rdi;add rdx, rdi;mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax": 1,
                "mov rax, qword [arg_340h];mov rcx, qword [arg_338h];mov rdx, qword [arg_330h];mov qword [rsp], rdx;mov qword [var_8h], rcx": 1,
                "mov qword [var_8h], rcx;mov qword [var_10h], rax;call sym.go.runtime.stringtoslicebyte;mov rax, qword [var_20h];mov qword [var_c0h], rax": 1,
                "lea rdi, [var_2b8h];lea rsi, [arg_318h];mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458a1a": 1,
                "mov rbx, qword [rbx];cmp rbx, 6;jne ;xor ebx, ebx;xor esi, esi": 1,
                "xor esi, esi;xor edi, edi;mov qword [var_168h], rbx;mov qword [var_a8h], rsi;mov qword [var_b8h], rdi": 1,
                "mov rax, qword [var_18h];mov rcx, qword [var_b8h];cmp rcx, 5;jne ;mov rdx, qword [rax + 8]": 1,
                "call sym.go.github.com_robertkrimen_otto.___runtime_.cmpl_functionDeclarati;mov rax, qword [arg_60h];mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rbx, qword [rax + ]": 1,
                "mov rdx, qword [rax + ];mov rbx, qword [rax + ];mov rsi, qword [arg_58h];mov qword [rsp], rsi;mov qword [var_8h], rbx": 1,
                "mov rdx, qword [arg_60h];mov rbx, qword [rdx + ];cmp dword [], 0;jne ;mov qword [rcx + ], rbx": 1,
                "mov rax, qword [var_20h];mov rcx, qword [var_30h];mov rdx, qword [var_28h];mov qword [arg_70h], rax;mov qword [arg_78h], rdx": 1,
                "mov qword [rax], rcx;cmp dword [], 0;jne ;mov rdx, qword [var_40h];mov qword [rax + 8], rdx": 1,
                "mov rdx, qword [var_40h];mov qword [rax + 8], rdx;mov qword [rax + ], rcx;cmp dword [], 0;jne ": 1,
                "mov qword [rax + ], rdx;mov rcx, qword [var_38h];mov qword [rax + ], rcx;mov rcx, qword [arg_58h];mov qword [rsp], rcx": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;call sym.go.github.com_robertkrimen_otto.___runtime_.enterScope;mov dword [rsp], 8;lea rax, []": 1,
                "mov rax, qword [arg_58h];mov qword [var_10h], rax;call sym.go.runtime.deferproc;test eax, eax;jne ": 1,
                "mov qword [var_10h], rax;call sym.go.runtime.deferproc;test eax, eax;jne ;jmp ": 1,
                "mov rcx, rax;mov rax, rdx;call sym.go.runtime.gcWriteBarrier;lea rdi, [rcx + ];mov rax, qword [var_38h]": 1,
                "mov rax, qword [var_38h];call sym.go.runtime.gcWriteBarrier;mov rax, rcx;jmp ;lea rdi, [rax + 8]": 1,
                "call sym.go.runtime.gcWriteBarrier;mov rbx, rax;mov rax, rdx;mov rdx, rbx;jmp ": 1,
                "sub rsp, ;mov qword [var_a0h], rbp;lea rbp, [var_a0h];lea rax, [];mov qword [rsp], rax": 1,
                "mov qword [var_a0h], rbp;lea rbp, [var_a0h];lea rax, [];mov qword [rsp], rax;mov rax, qword [arg_f0h]": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], rax;call sym.go.runtime.makeslice;mov rax, qword [var_18h];mov qword [var_80h], rax": 1,
                "mov rdx, qword [var_60h];mov rsi, rax;movzx edi, byte [var_47h];mov rax, qword [var_80h];mov r8, qword [rbx + 8]": 1,
                "movabs r10, ;cmp qword [r9], r10;jne ;cmp byte [r9 + 8], ;jne ": 1,
                "mov qword [var_78h], rbx;mov qword [var_58h], rsi;mov byte [var_47h], dil;mov r11, qword [arg_f0h];cmp rsi, r11": 1,
                "mov byte [var_47h], dil;mov r11, qword [arg_f0h];cmp rsi, r11;jge ;lea r12, [rsi + rsi*2]": 1,
                "mov r15, qword [r13 + r12*8];mov r12, qword [r13 + r12*8 + ];shl rsi, 4;mov qword [rax + rsi + 8], r8;lea rcx, [rax + rsi]": 1,
                "mov qword [var_98h], rdx;lea rdx, [];mov qword [rsp], rdx;lea rbx, [var_88h];mov qword [var_8h], rbx": 1,
                "mov rcx, qword [var_10h];mov rdx, qword [var_70h];mov rbx, qword [rdx + ];mov rbx, qword [rbx + ];mov qword [rsp], rdx": 1,
                "mov qword [rsp], rdx;lea rsi, [];mov qword [var_8h], rsi;mov qword [var_10h], 6;mov rcx, qword fs:[]": 1,
                "mov rcx, qword [rax + 8];mov rdx, qword [rax + ];mov rbx, qword [arg_80h];mov qword [rsp], rbx;mov qword [var_8h], rcx": 1,
                "mov qword [var_10h], rdx;call sym.go.github.com_robertkrimen_otto.___runtime_.cmpl_evaluate_nodeExpr;mov rax, qword [var_18h];mov rcx, qword [var_28h];mov rdx, qword [var_20h]": 1,
                "mov rbp, qword [var_70h];add rsp, ;ret;mov rax, qword [rbx + ];mov rcx, qword [rbx + ]": 1,
                "mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax;call sym.go.github.com_robertkrimen_otto.___runtime_.cmpl_evaluate_nodeExpr;mov rax, qword [arg_88h]": 1,
                "mov qword [var_20h], rax;mov qword [var_28h], rcx;mov qword [var_30h], rdx;mov qword [var_38h], rbx;call sym.go.github.com_robertkrimen_otto.___runtime_.calculateBinaryExpress": 1,
                "call sym.go.github.com_robertkrimen_otto.Value.bool;cmp byte [var_18h], 0;je ;mov rax, qword [arg_88h];mov rcx, qword [rax + ]": 1,
                "mov rdx, qword [var_18h];mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax;call sym.go.github.com_robertkrimen_otto.Value.resolve": 1,
                "mov qword [var_48h], rdx;mov rbx, qword [arg_78h];mov rsi, qword [rbx + ];mov rdi, qword [rbx + ];mov r8, qword [arg_70h]": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rdx;mov qword [var_10h], rax;call sym.go.github.com_robertkrimen_otto.Value.resolve;mov rax, qword [var_18h]": 1,
                "mov qword [rsp], rsi;mov qword [var_8h], rbx;mov rbx, qword [var_48h];mov qword [var_10h], rbx;mov rbx, qword [var_50h]": 1,
                "mov qword [var_20h], rbx;mov qword [var_28h], rax;mov qword [var_30h], rcx;mov qword [var_38h], rdx;call sym.go.github.com_robertkrimen_otto.___runtime_.calculateComparison": 1,
                "add rsp, ;ret;call sym.go.runtime.morestack_noctxt;jmp sym.go.github.com_robertkrimen_otto.___runtime_.cmpl_evaluate_nodeBina;int3": 1,
                "call sym.go.runtime.morestack_noctxt;jmp sym.go.github.com_robertkrimen_otto.___runtime_.cmpl_evaluate_nodeBina;int3;int3;int3": 1,
                "jbe ;sub rsp, ;mov qword [var_1d0h], rbp;lea rbp, [var_1d0h];xorps xmm0, xmm0": 1,
                "jne ;mov rbx, qword [arg_1e8h];test rbx, rbx;je ;mov esi, dword [rbx + ]": 1,
                "xor ebx, ebx;jmp ;mov rsi, qword [var_b0h];add rsi, ;mov rcx, qword [arg_1e0h]": 1,
                "mov rcx, qword [var_78h];cmp rax, rcx;jl ;mov rax, qword [];mov rcx, qword []": 1,
                "jne ;lea rax, [];cmp rax, rbx;jne ;mov rdx, qword [rcx + ]": 1,
                "mov rax, qword [];mov rcx, qword [];mov rdx, qword [];mov qword [arg_1f8h], rdx;mov qword [arg_200h], rcx": 1,
                "je ;mov rax, qword [rbx + 8];movups xmmword [var_b8h], xmm0;mov qword [var_b8h], rax;mov rax, qword [arg_1f0h]": 1,
                "mov qword [var_8h], rcx;mov qword [var_10h], rax;call sym.go.github.com_robertkrimen_otto.Value.resolve;mov rax, qword [var_18h];mov rcx, qword [var_28h]": 1,
                "mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rdx, qword [var_10h];mov qword [var_c8h], rdx;mov qword [var_d0h], rcx": 1,
                "mov qword [var_c8h], rdx;mov qword [var_d0h], rcx;mov qword [var_d8h], rax;mov qword [arg_1f8h], rdx;mov qword [arg_200h], rcx": 1,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;call sym.go.github.com_robertkrimen_otto.toValue;mov rax, qword [var_18h];mov rcx, qword [var_20h]": 1,
                "call sym.go.github.com_robertkrimen_otto.toValue;mov rax, qword [var_18h];mov rcx, qword [var_20h];mov rdx, qword [var_10h];mov qword [arg_1f8h], rdx": 1,
                "mov qword [arg_1f8h], rdx;mov qword [arg_200h], rax;mov qword [arg_208h], rcx;call sym.go.runtime.deferreturn;mov rbp, qword [var_1d0h]": 1,
                "jne ;mov qword [rcx + ], 0;mov rdx, qword [rax];mov rbx, qword [rax + 8];mov rcx, qword fs:[]": 1,
                "jbe ;sub rsp, ;mov qword [var_58h], rbp;lea rbp, [var_58h];mov rax, qword [arg_78h]": 1,
                "sub rsp, ;mov qword [var_58h], rbp;lea rbp, [var_58h];mov rax, qword [arg_78h];test rax, rax": 1,
                "xor ebx, ebx;xor esi, esi;xor edi, edi;jmp ;mov r8, qword [var_50h]": 1,
                "mov qword [var_50h], rcx;mov qword [var_40h], rdx;mov qword [var_38h], rbx;mov qword [var_30h], rsi;mov qword [var_48h], rdi": 1,
                "inc rbx;mov rsi, qword [arg_78h];cmp rbx, rsi;jl ;mov qword [arg_88h], rcx": 1,
                "mov qword [arg_90h], rdx;mov qword [arg_98h], rax;mov rbp, qword [var_58h];add rsp, ;ret": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], rdx;call sym.go.github.com_robertkrimen_otto.Value.resolve;mov rcx, qword [var_18h];mov rdx, qword [var_20h]": 1,
                "mov qword [var_10h], rdx;call sym.go.github.com_robertkrimen_otto.Value.resolve;mov rcx, qword [var_18h];mov rdx, qword [var_20h];mov rax, qword [var_28h]": 1,
                "call sym.go.github.com_robertkrimen_otto.Value.resolve;mov rcx, qword [var_18h];mov rdx, qword [var_20h];mov rax, qword [var_28h];jmp ": 1,
                "mov rcx, qword [arg_c0h];mov rdx, qword [rcx + ];lea rbx, [rdx + 1];mov rsi, qword [rcx + ];mov r8, qword [rcx + ]": 1,
                "mov rsi, qword [rcx + ];mov r8, qword [rcx + ];cmp rbx, rsi;ja ;shl rdx, 4": 2,
                "mov rax, qword [arg_c8h];mov rdx, qword [rax];mov qword [var_40h], rdx;mov rdi, qword [rax + 8];mov qword [var_88h], rdi": 1,
                "lea r13, [rdi + ];mov r14, rbx;mov r11, rax;mov r10, rcx;mov r9, rdx": 1,
                "mov r14, rbx;mov r11, rax;mov r10, rcx;mov r9, rdx;mov rcx, qword [arg_c0h]": 1,
                "mov rcx, qword [var_20h];mov rdx, qword [var_28h];cmp rax, 6;jne ;mov rax, qword [var_90h]": 1,
                "inc rbx;mov rsi, qword [var_80h];cmp rbx, rsi;jl ;mov qword [var_50h], rdx": 1,
                "mov rax, r15;mov rcx, r12;mov rdx, r14;mov rbx, qword [var_58h];mov rsi, qword [var_60h]": 1,
                "mov r13, qword [rax + ];test r12, r12;jle ;mov qword [var_80h], r12;xor r14d, r14d": 1,
                "mov rbp, qword [var_b0h];add rsp, ;ret;cmp rax, 7;je ": 1,
                "mov rcx, qword [var_48h];mov rdx, qword [var_50h];jmp ;mov rdx, qword [var_50h];mov rax, qword [var_90h]": 1,
                "jbe ;sub rsp, ;mov qword [var_d8h], rbp;lea rbp, [var_d8h];mov rcx, qword [arg_e8h]": 1,
                "mov qword [var_68h], rdi;mov rcx, qword [rcx + ];mov qword [var_b8h], rcx;mov r8, qword [];mov qword [var_88h], r8": 1,
                "mov qword [rsp], rax;call sym.go.runtime.newobject;mov rax, qword [var_8h];mov qword [var_d0h], rax;mov rcx, qword []": 1,
                "mov qword [rax + ], r15;mov rcx, qword [var_98h];mov rbx, qword [rcx + ];mov rdx, qword [rbx + ];mov qword [rsp], rcx": 1,
                "mov qword [rsp], rcx;mov byte [var_8h], 0;mov qword [var_10h], rax;mov rax, qword [rdx];call rax": 1,
                "test rax, rax;je ;mov rax, qword [rax + ];cmp dword [], 0;jne ": 1,
                "mov rax, qword [var_b8h];call sym.go.runtime.gcWriteBarrier;mov rax, rdx;mov r11, qword [var_b8h];jmp ": 1,
                "mov rax, qword [var_b0h];call sym.go.runtime.gcWriteBarrier;mov rax, rdx;mov r8, qword [var_b0h];jmp ": 1,
                "mov r8, qword [var_b0h];jmp ;lea rdi, [rax + 8];mov rdx, rax;mov rax, qword [arg_e8h]": 1,
                "call sym.go.runtime.gcWriteBarrier;mov rax, rdx;mov rbx, qword [arg_e8h];jmp ;lea rdi, [rax + ]": 1,
                "mov qword [arg_f8h], rax;mov qword [arg_100h], rdx;mov qword [arg_108h], rcx;mov rbp, qword [var_d8h];add rsp, ": 1,
                "xorps xmm0, xmm0;movups xmmword [arg_d0h], xmm0;mov qword [arg_e0h], 0;movups xmmword [var_98h], xmm0;mov qword [var_a8h], 0": 1,
                "call sym.go.github.com_robertkrimen_otto.___runtime_.tryCatchEvaluate;mov rax, qword [var_18h];mov rcx, qword [var_20h];mov rdx, qword [var_10h];mov qword [var_98h], rdx": 1,
                "mov qword [arg_e0h], rcx;call sym.go.runtime.deferreturn;mov rbp, qword [var_b0h];add rsp, ;ret": 2,
                "lea rax, [var_98h];mov qword [var_8h], rax;call sym.go.runtime.convT2E;mov rax, qword [var_18h];mov qword [var_78h], rax": 1,
                "mov rcx, qword [var_28h];mov rdx, qword [var_18h];cmp rdx, 7;je ;mov rax, qword [var_48h]": 1,
                "mov rcx, qword [var_90h];mov qword [var_28h], rcx;mov byte [var_30h], 0;call rdx;xorps xmm0, xmm0": 1,
                "xorps xmm0, xmm0;movups xmmword [var_98h], xmm0;mov qword [var_a8h], 0;lea rax, [];mov qword [rsp], rax": 1,
                "call sym.go.runtime.gcWriteBarrier;lea rdi, [rcx + ];mov rdx, rax;mov rax, qword [arg_c8h];call sym.go.runtime.gcWriteBarrier": 2,
                "call sym.go.runtime.gcWriteBarrier;mov rcx, rax;jmp ;mov rsi, qword [arg_c8h];jmp ": 1,
                "mov qword [rax + ], rsi;mov rsi, qword [rcx + ];lea r8, [];mov qword [rsi], r8;cmp dword [], 0": 1,
                "add rsp, ;ret;call sym.go.runtime.deferreturn;mov rbp, qword [var_50h];add rsp, ": 1,
                "mov rsi, rax;mov rax, qword [var_40h];call sym.go.runtime.gcWriteBarrier;mov rax, rbx;mov rbx, rsi": 1,
                "mov rax, rdi;mov rdi, rdx;mov rbx, rax;lea rax, [];call sym.go.runtime.gcWriteBarrier": 1,
                "lea rcx, [];cmp rcx, rax;jne ;mov rcx, qword [arg_2d0h];jne ": 1,
                "mov rdx, qword [var_180h];mov rbx, qword [rdx + ];mov qword [var_d0h], rbx;lea rsi, [];mov qword [rsp], rsi": 1,
                "mov qword [var_1f0h], rax;lea rcx, [];mov qword [rsp], rcx;call sym.go.runtime.newobject;mov rax, qword [var_8h]": 1,
                "cmp dword [], 0;jne ;mov rcx, qword fs:[];cmp rsp, qword [rcx + ];jbe ": 1,
                "sub rsp, ;mov qword [var_60h], rbp;lea rbp, [var_60h];mov rax, qword [arg_70h];mov qword [rsp], rax": 1,
                "mov qword [var_10h], rcx;mov rcx, qword [arg_88h];mov qword [var_18h], rcx;mov rcx, qword [arg_90h];mov qword [var_20h], rcx": 1,
                "mov qword [var_30h], rcx;mov rcx, qword [arg_a8h];mov qword [var_38h], rcx;call sym.go.github.com_robertkrimen_otto.___runtime_._newNativeFunctionObje;mov rax, qword [var_40h]": 1,
                "jne ;mov rcx, qword [arg_70h];mov qword [rax + 8], rcx;mov rdx, qword [var_48h];mov qword [rax + ], rdx": 1,
                "mov qword [var_18h], rcx;mov qword [var_20h], 8;mov qword [var_28h], 0;mov qword [var_30h], rax;mov qword [var_38h], 0": 1,
                "mov qword [var_28h], 0;mov qword [var_30h], rax;mov qword [var_38h], 0;call sym.go.github.com_robertkrimen_otto.___runtime_._newNativeFunctionObje;mov rax, qword [var_40h]": 1,
                "lea rax, [];mov qword [rsp], rax;lea rax, [var_50h];mov qword [var_8h], rax;call sym.go.runtime.convT2E": 1,
                "lea rax, [var_50h];mov qword [var_8h], rax;call sym.go.runtime.convT2E;mov rax, qword [var_10h];mov rcx, qword [var_18h]": 1,
                "mov qword [rsp], rdx;lea rsi, [];mov qword [var_8h], rsi;mov qword [var_10h], 6;mov qword [var_18h], rax": 1,
                "mov rax, qword [rbx];mov rdx, rbx;call rax;mov rax, qword [var_48h];mov qword [arg_b0h], rax": 1,
                "add rsp, ;ret;lea rdi, [rax + 8];mov rcx, rax;mov rax, qword [arg_70h]": 1,
                "mov rcx, qword [arg_d8h];mov qword [var_88h], rcx;mov rcx, qword [arg_e0h];mov qword [var_90h], rcx;mov rcx, qword [arg_e8h]": 1,
                "mov qword [rsp], rdx;lea rdx, [var_70h];mov qword [var_8h], rdx;call sym.go.runtime.convT2E;mov rax, qword [var_10h]": 1,
                "mov rax, qword [var_10h];mov rcx, qword [var_18h];mov rdx, qword [var_48h];mov qword [rdx + ], rax;cmp dword [], 0": 1,
                "mov rsi, qword [rbx + ];mov rdx, qword [rsi + ];mov qword [rsp], rbx;lea rsi, [];mov qword [var_8h], rsi": 1,
                "mov qword [var_68h], rax;lea rax, [];mov qword [rsp], rax;lea rcx, [var_58h];mov rcx, qword fs:[]": 1,
                "mov qword [var_58h], rbp;lea rbp, [var_58h];mov rax, qword [arg_68h];mov rcx, qword [rax + ];lea rdx, []": 1,
                "mov rcx, qword [rax + ];lea rdx, [];mov qword [rsp], rdx;mov qword [var_8h], rcx;mov rcx, qword [arg_70h]": 1,
                "mov qword [var_40h], rax;mov rcx, qword [var_30h];mov qword [var_38h], rcx;lea rdx, [];mov qword [rsp], rdx": 3,
                "mov qword [rdi + 8], rax;cmp dword [], 0;jne ;mov rax, qword [var_40h];mov qword [rdi], rax": 3,
                "jmp ;mov rax, qword [arg_68h];mov rax, qword [rax + ];lea rcx, [];mov qword [rsp], rcx": 1,
                "sub rsp, ;mov qword [var_60h], rbp;lea rbp, [var_60h];lea rax, [];mov qword [rsp], rax": 2,
                "movups xmmword [arg_90h], xmm0;lea rax, [];mov qword [arg_a0h], rax;mov qword [arg_a8h], rdi;mov rbp, qword [var_60h]": 2,
                "mov rcx, qword [var_18h];mov qword [rcx + ], rax;call sym.go.github.com_robertkrimen_otto.New;mov rax, qword [rsp];cmp dword [], 0": 1,
                "mov rax, rcx;jmp ;lea rdi, [rax + ];mov rcx, rax;mov rax, qword [arg_40h]": 1,
                "mov rcx, rax;mov rax, qword [arg_40h];call sym.go.runtime.gcWriteBarrier;mov rax, rcx;jmp ": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rdx;mov rcx, qword [arg_a8h];mov qword [var_10h], rcx;mov rdx, qword [arg_b0h]": 1,
                "\u001b[2K": 1,
                "[esil at 0x004d7d08] TODO:": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "WKOtcZMcFo4SGbDyFRGF/OJ_nL0rCWr_HFmLECpiU/c614B8tAzywuYyfJEWcf/V_-6_cB54vH-KgTjrmSF": 1,
                "D$xH9D$": 5,
                "L$(H9A": 3,
                "D$`H9D$": 8,
                "I8H9y@": 1,
                "L$8H9L$": 1,
                "D$pH9B(t": 1,
                "t+M9A t": 3,
                "D9L$Xu": 1,
                "t+H9w t": 1,
                "L9L$Xu": 1,
                "Z`H9Z8": 1,
                "H`H9H8t%": 1,
                "L$@H9A8u H": 1,
                "H9AxwEH9": 1,
                "|$,HcC": 1,
                "H+5JuL": 1,
                "Hc5,,N": 1,
                "Hc5CoL": 1,
                "D$xHcH": 1,
                "X(9Z(v9H": 1,
                "H9s uPH9B": 1,
                "|$<fD9": 1,
                "\\$D9YX": 1,
                "Xg8YguDH": 1,
                "H+D$ H": 1,
                "H8H9H0}BH": 1,
                "D$ H)5": 1,
                "L$ H+A": 2,
                "\\$HH9Z": 1,
                "L$8H9A(": 1,
                "D$'H97": 1,
                "D$+e+H": 1,
                "H9A0tbH": 1,
                "H9H0tkH": 1,
                "T$L9T$H": 1,
                "L$0H9Hp": 1,
                "ulH9ZHuf": 1,
                "memprofiH92u": 1,
                "memprofiH": 2,
                "memprofi": 2,
                "9noneu": 1,
                "9crasu": 1,
                "9singu8f": 1,
                "t$H9HXt": 1,
                "P89Q8v0H9A": 1,
                "v89w8@": 1,
                "T$0Hc[": 1,
                "\\$8Hcs": 1,
                "D$8<@H": 1,
                "L9B(v H": 1,
                "@8L+@(M": 1,
                "<3@8:ui": 1,
                "HcD$0H": 3,
                "t$hH9p": 2,
                "L$XHcT$(H": 2,
                "H9\\$Xv": 1,
                "HcD$TH": 1,
                "\\$HHcR": 1,
                "L$H9A ~": 2,
                "L$(8A'v": 1,
                "K(H9S0": 1,
                "K(L9K0": 1,
                "A(H9q0": 1,
                "HcD$(H": 2,
                "runtime.H": 3,
                "HcD$ H": 1,
                "L$PHcT$(H": 1,
                "|$PH97": 1,
                "runtime.H9": 1,
                "T$@H9J0": 1,
                "p8H9X@": 4,
                "B8H9Z@": 3,
                "D$pH9D$": 2,
                "D$hH9D$": 2,
                "D$@H9D$": 3,
                "f9C8vG": 1,
                "t$4H9q0": 1,
                "l$ HcB": 1,
                "3dH94%": 1,
                "sPdH94%": 1,
                "H+t$(dH": 1,
                "T$09J$u>": 1,
                "H(9J(t": 1,
                "L$0H9A": 4,
                "L$08A'": 1,
                "L$(H9A8": 1,
                "T$0H9J": 3,
                "r(H9p(t11": 1,
                "H0H9J0u": 1,
                "@8H9B8": 1,
                "r H9X(t#1": 1,
                "@0H9B0": 2,
                "T$0H9JPu": 1,
                "JXH9HX": 1,
                "t?H91u]H": 1,
                "\\$HH)C": 1,
                "0H92t#1": 3,
                "Q0H+Q(H": 1,
                "Z0H+Z(H": 2,
                "Z0H9Z(": 1,
                "|$@H9J": 1,
                "Q(H9Q0uMH": 1,
                "H0H+H(H": 1,
                "Q0H+Q(H9Q": 1,
                "Q0H9Q(}RH": 1,
                "|,0H9B": 1,
                "R H9P t": 9,
                "Q8H9A@~": 1,
                "X8H9P@": 1,
                "Q8H9A@": 2,
                "X8L9P@": 1,
                "y8H9Y@": 1,
                "\\$HH9X@": 1,
                "C8H9{@": 1,
                "D$(H9D$": 4,
                "D$ H9D$": 1,
                "Q2f9P2": 1,
                "P0f9Q0": 1,
                "Q@H9P@t": 1,
                "Q@H9P@": 1,
                "D$HH9D$": 4,
                "D$xH9H@": 1,
                "x8H9p@w": 1,
                "CallSlicL": 1,
                "\\$@H9X@": 1,
                "T$(H9B@": 1,
                "T$0H9B": 2,
                "\\$HH9S": 1,
                "L$HH9A": 1,
                "L$ H9L$": 1,
                "L$8H9J": 1,
                "p(H9X tR1": 1,
                "H0H9J0u:H": 1,
                "H8H9J8u,H": 1,
                "H@H9J@": 1,
                "@HH9BH": 1,
                "L$(~<H": 1,
                "t$8H9r": 1,
                "L$pH9L$": 1,
                "D$PH9D$": 2,
                "L$(HcT$<H": 1,
                "-07:00:0H9": 1,
                "-07:00:0": 10,
                "2006t<H": 1,
                "Z07:00:0H9": 1,
                "Z07:00:0": 1,
                "t/@80u*H": 1,
                "9WITAt": 1,
                "t2H9X@": 1,
                ",H9XH~&H": 1,
                "tNH9X@": 1,
                "HH9XH~BH": 1,
                "D$8H9D$ ulH": 1,
                "t$`H9N": 1,
                "t$HttH": 1,
                "r H9X(": 1,
                "r0H9H8tF1": 1,
                "R@H9XHt": 1,
                "8fileunH": 1,
                "H9z }/H": 1,
                "r@H9p@t<1": 1,
                "p H9H(tF1": 1,
                "X8H9P0t": 1,
                "H H9J uSH": 1,
                "H(H9J(uEH": 1,
                "H0H9J0": 1,
                "method:L": 1,
                "(BADINDEH": 1,
                "(MISSINGH": 1,
                "%!(NOVERM": 1,
                "%!(EXTRAM": 1,
                "%!(BADPRM": 1,
                "BADPREC)M": 1,
                "%!(BADWIM": 1,
                "t$0H9J s5H": 1,
                "\\$pH9C s[H": 1,
                "t$@H9K seH": 1,
                "9QxtaH": 1,
                "D$PH+D$": 1,
                "L$hH9A@": 1,
                "o\\$ fE": 1,
                "o\\$0fE": 1,
                "o\\$@fE": 1,
                "o\\$PfE": 1,
                "o\\$`fE": 1,
                "o\\$pfE": 1,
                "J(f9H(uR": 1,
                "J0H9H0t": 1,
                "D$`tZH": 1,
                "D$`8D$": 1,
                "L$X8L$": 1,
                "<0r*<9w&H": 1,
                "D$7< u0H": 1,
                "L$XH9L$ t=H": 1,
                "Z8H9B@t": 1,
                "p(H9Z0": 1,
                "r8H9J@": 1,
                "pPH9rP": 1,
                "JX8HXu|H": 1,
                "p`H9ZhtF1": 1,
                "ZpH9Jxt": 1,
                "T$hA82": 1,
                "t$BfE9": 1,
                "XPM9XHu^M": 1,
                "n0M9l$0A": 1,
                "H(L9@8": 1,
                "Y(H9A0u41": 1,
                "QXH9PXt]": 1,
                "q`H9Qht": 1,
                "PHH9QHt": 1,
                "QPH9PPt": 1,
                "PHH9PPu&H": 1,
                "YHH9YP": 1,
                "D$PH9A": 1,
                "H9A0|>H": 1,
                "Y H9Q(w": 1,
                ",$M9T$": 1,
                "XHH9PPw": 1,
                "bHM9ZP": 1,
                "Q(H9A0v>": 1,
                "L$@H9H": 1,
                "H H9P(": 3,
                "C L9C(": 2,
                "D9f0v+L": 3,
                "D9^0v*L": 1,
                "D9a0v+L": 1,
                "D9a0v?L": 1,
                "0H92t01": 1,
                "8fatauCA": 1,
                "H91uMt3H": 1,
                "D$hu1H": 1,
                "<1rQ<9wMH": 1,
                "t$PH9^@}": 1,
                "8falst": 1,
                "8trueA": 1,
                "Ku_=*!": 1,
                "<:tF<[u!H": 1,
                "D$0< w": 2,
                "uP<]u&H": 1,
                "un<}uDH": 1,
                "H H9J u|H": 1,
                "r(H9X0tF1": 2,
                "R@H9P@t": 2,
                "D$`H9\\$h": 1,
                "s(H9S0": 1,
                "~@H9^H": 1,
                "L$xH+A H": 1,
                "H H9J u": 1,
                "@(H9B(": 1,
                "D$8H9D$": 2,
                "L$PH9K": 1,
                "0H92tq1": 1,
                "J H9H u": 2,
                "J(H9H(": 1,
                "@ H9C t": 3,
                "R(H9P(t": 3,
                "r(H9p(tF1": 1,
                "X@H9P8t": 1,
                "R8H9H@t": 1,
                "9falsu": 1,
                "x@4uuH": 1,
                "y@1tPH": 1,
                "x ^uOH": 1,
                "9trueuHH": 1,
                "9falsui": 1,
                "y /tiH": 1,
                "T$xH9P": 1,
                "<0rY<7wU": 1,
                "L$`H+A": 1,
                "H H9J u<H": 1,
                "R(H9X0t": 2,
                "0H92tp1": 1,
                "L$8H9H": 1,
                "D$P8X9": 1,
                "H H9L$": 1,
                "L$hH9H(": 1,
                "H H+H0H": 1,
                "\\$8t(H": 1,
                "T$0H+B": 1,
                "T$8H+B": 2,
                "T$8H+J": 1,
                "L$`H9A@~^H": 1,
                "D$H8X8": 1,
                "H9T$ u5u": 1,
                "L$xH+A": 1,
                "T$`H+B": 1,
                "0H92t|1": 1,
                "H H9J u+": 1,
                "D$0<Ar": 1,
                "<arM<z": 1,
                "<0r<<9": 1,
                "8ArrauF": 1,
                "8GoAru": 1,
                ":GoAru": 2,
                "8Striu": 1,
                ":Striu": 1,
                "FunctionH9": 5,
                "?Striu": 1,
                "?Boolu": 1,
                "9GoAru": 2,
                "FunctionH9>@": 1,
                "Function1": 2,
                ":RegEt": 1,
                "L$@t#H": 1,
                "argumentM9": 1,
                "argument": 2,
                ">evalA": 1,
                "FunctionL97@": 1,
                "8evalA": 1,
                "FunctionM9": 1,
                "t$xH9p": 1,
                "T$pH9P": 1,
                "\\$XH9Y": 1,
                "t$XH9p": 1,
                "L$HL9I": 1,
                "t$`H9p": 1,
                "t$PH9p": 1,
                "t$HH9p": 1,
                "D$|#D$": 1,
                "D$|3D$": 1,
                "D$O8D$": 1,
                "L$hH9L$ t": 1,
                "URIErrorH": 1,
                "EvalErroH9": 1,
                "TypeErroH9": 1,
                "RangeErrH": 1,
                "SyntaxErH9": 1,
                "ReferencH9": 1,
                "FunctionH92": 1,
                "Function": 2,
                "L$HH9D$P": 1,
                "L$HH9D$PvaH": 1,
                "L$XH9D$`v[H": 1,
                "9Arrau": 1,
                "9Striu": 1,
                "u*z(fH": 1,
                "D$/8D$": 2,
                "L$8H9L$ t": 2,
                "|$PH9\\$Xt$H": 2,
                ":FALSuM": 1,
                ":Falsu/": 1,
                "_B>fu2H": 1,
                "r0H9X8tF1": 1,
                "K H9H uR": 1,
                "K(8H(uEH": 1,
                "K0H9H0u7H": 1,
                "K8H9H8t": 1,
                "H9H tF1": 1,
                "H H9J uXH": 1,
                "p0H9X(t\"1": 1,
                "R H9X(t": 1,
                "<$Objeu": 1,
                "errors": 2,
                "regexp": 2,
                "*[]int": 1,
                "*error": 1,
                "*int16": 1,
                "*int32": 1,
                "*int64": 1,
                "*uint8": 1,
                "Accept": 1,
                "ArrayT": 1,
                "Assign": 1,
                "Before": 1,
                "Blocks": 1,
                "Buffer": 1,
                "Callee": 1,
                "CanSet": 1,
                "Chroot": 1,
                "Column": 1,
                "Consts": 1,
                "Debugf": 1,
                "Decode": 1,
                "Delete": 1,
                "Enable": 1,
                "Encode": 1,
                "Errorf": 1,
                "Exited": 1,
                "Expand": 1,
                "Export": 1,
                "Family": 1,
                "Fatalf": 1,
                "Fchdir": 1,
                "Fchmod": 1,
                "Fchown": 1,
                "Fields": 1,
                "Format": 1,
                "Getenv": 1,
                "Groups": 1,
                "Halted": 1,
                "HasADX": 1,
                "HasAES": 1,
                "HasAVX": 1,
                "HasFMA": 1,
                "HasSM3": 1,
                "HasSM4": 1,
                "HasSVE": 1,
                "Hatype": 1,
                "Header": 1,
                "HostID": 1,
                "Infoln": 1,
                "InitVM": 1,
                "Int31n": 1,
                "Int63n": 1,
                "Iovlen": 1,
                "IsNull": 1,
                "IsZero": 1,
                "Layout": 1,
                "Length": 1,
                "Linger": 1,
                "Logger": 1,
                "Lookup": 1,
                "Majflt": 1,
                "MaxCap": 1,
                "Maxrss": 1,
                "Member": 1,
                "Method": 1,
                "Minflt": 1,
                "Minute": 1,
                "Msgrcv": 1,
                "Msgsnd": 1,
                "Munmap": 1,
                "NewGCM": 1,
                "Nivcsw": 1,
                "Noctty": 1,
                "NumCap": 1,
                "NumOut": 1,
                "Number": 1,
                "Object": 1,
                "Offset": 1,
                "Opaque": 1,
                "Output": 1,
                "Panicf": 1,
                "Paused": 1,
                "Prefix": 1,
                "Printf": 1,
                "Ptrace": 1,
                "Pwrite": 1,
                "ReadAt": 1,
                "RegExp": 1,
                "Return": 1,
                "Scheme": 1,
                "Search": 1,
                "Second": 1,
                "SetCap": 1,
                "SetInt": 1,
                "SetLen": 1,
                "SetNaN": 1,
                "Setsid": 1,
                "Signal": 1,
                "Slice3": 1,
                "SliceT": 1,
                "Source": 1,
                "Strict": 1,
                "Stride": 1,
                "String": 1,
                "Struct": 1,
                "Switch": 1,
                "Uint32": 1,
                "Uint64": 1,
                "Unlock": 1,
                "Update": 1,
                "Warnln": 1,
                "Writer": 1,
                "Writev": 1,
                "ZoneId": 1,
                "_defer": 1,
                "_error": 1,
                "_outer": 1,
                "_panic": 1,
                "_parse": 1,
                "_write": 1,
                "active": 1,
                "addSec": 1,
                "allocs": 1,
                "append": 1,
                "arenas": 1,
                "argLen": 1,
                "arglen": 1,
                "argmap": 1,
                "attach": 1,
                "bitmap": 1,
                "branch": 1,
                "bucket": 1,
                "callee": 1,
                "canPut": 1,
                "chunks": 1,
                "cipher": 1,
                "closed": 1,
                "common": 1,
                "concat": 1,
                "cutoff": 1,
                "cutset": 1,
                "cycles": 1,
                "decref": 1,
                "delete": 1,
                "digest": 1,
                "divMul": 1,
                "divmod": 1,
                "e_type": 1,
                "efence": 1,
                "elemOp": 1,
                "encode": 1,
                "endTop": 1,
                "etypes": 1,
                "events": 1,
                "exists": 1,
                "exited": 1,
                "expand": 1,
                "expect": 1,
                "export": 1,
                "factor": 1,
                "fields": 1,
                "fmtSbx": 1,
                "format": 1,
                "frames": 1,
                "funcID": 1,
                "future": 1,
                "gc_sys": 1,
                "gcdata": 1,
                "genCol": 1,
                "getPtr": 1,
                "global": 1,
                "goTime": 1,
                "handle": 1,
                "helper": 1,
                "holder": 1,
                "inList": 1,
                "incref": 1,
                "inputs": 1,
                "insert": 1,
                "int31n": 1,
                "intbuf": 1,
                "iovecs": 1,
                "isCall": 1,
                "isDate": 1,
                "isFile": 1,
                "isFree": 1,
                "isdone": 1,
                "labels": 1,
                "layout": 1,
                "length": 1,
                "lineno": 1,
                "locabs": 1,
                "logger": 1,
                "lookup": 1,
                "mapped": 1,
                "mcache": 1,
                "mcount": 1,
                "member": 1,
                "method": 1,
                "minute": 1,
                "misses": 1,
                "munmap": 1,
                "mustBe": 1,
                "native": 1,
                "nbytes": 1,
                "nchunk": 1,
                "needed": 1,
                "nelems": 1,
                "newval": 1,
                "nmidle": 1,
                "noCopy": 1,
                "noscan": 1,
                "npages": 1,
                "npidle": 1,
                "numCap": 1,
                "number": 1,
                "object": 1,
                "offset": 1,
                "oldval": 1,
                "opaque": 1,
                "opcode": 1,
                "outbuf": 1,
                "palloc": 1,
                "parent": 1,
                "parked": 1,
                "pcfile": 1,
                "period": 1,
                "prefix": 1,
                "procid": 1,
                "ptrbit": 1,
                "putGen": 1,
                "putPtr": 1,
                "pwrite": 1,
                "qcount": 1,
                "quoted": 1,
                "random": 1,
                "reader": 1,
                "refill": 1,
                "remove": 1,
                "repeat": 1,
                "result": 1,
                "revise": 1,
                "rflags": 1,
                "rusage": 1,
                "rwlock": 1,
                "scases": 1,
                "second": 1,
                "setLoc": 1,
                "shared": 1,
                "sharpV": 1,
                "shift2": 1,
                "signal": 1,
                "source": 1,
                "sparse": 1,
                "state1": 1,
                "status": 1,
                "strict": 1,
                "string": 1,
                "symOff": 1,
                "symtab": 1,
                "tagLen": 1,
                "target": 1,
                "thread": 1,
                "ticket": 1,
                "toRead": 1,
                "tryGet": 1,
                "tstart": 1,
                "tv_sec": 1,
                "unlock": 1,
                "unused": 1,
                "update": 1,
                "values": 1,
                "varint": 1,
                "vd_aux": 1,
                "vd_cnt": 1,
                "vd_ndx": 1,
                "vdsoPC": 1,
                "vdsoSP": 1,
                "verdef": 1,
                "versym": 1,
                "wanted": 1,
                "writer": 1,
                "xcount": 1,
                "net/url": 1,
                "reflect": 1,
                "runtime": 2,
                "strconv": 1,
                "strings": 2,
                "syscall": 2,
                "unicode": 1,
                "**uint8": 1,
                "*[0]int": 1,
                "*[1]int": 1,
                "*[2]int": 1,
                "*[4]int": 1,
                "*[5]int": 1,
                "*[6]int": 1,
                "*[8]int": 1,
                "*[9]int": 1,
                "*[]bool": 1,
                "*[]int8": 1,
                "*[]uint": 1,
                "*fmt.pp": 1,
                "*func()": 1,
                "*string": 1,
                "*uint16": 1,
                "*uint32": 1,
                "*uint64": 1,
                "AddDate": 1,
                "AddFile": 1,
                "Address": 1,
                "Blksize": 1,
                "Boolean": 1,
                "CanAddr": 1,
                "ChanDir": 1,
                "Closing": 1,
                "Comment": 1,
                "Compile": 1,
                "Complex": 1,
                "Context": 1,
                "Control": 1,
                "Convert": 1,
                "Current": 1,
                "DbgDbgf": 1,
                "Debugln": 1,
                "Decrypt": 1,
                "Default": 1,
                "Disable": 1,
                "Discard": 1,
                "Encrypt": 1,
                "Errorln": 1,
                "Factory": 1,
                "Fatalln": 1,
                "Feature": 1,
                "Finally": 1,
                "FindAll": 1,
                "Float32": 1,
                "Float64": 1,
                "HasAVX2": 1,
                "HasBMI1": 1,
                "HasBMI2": 1,
                "HasERMS": 1,
                "HasFCMA": 1,
                "HasFPHP": 1,
                "HasSHA1": 1,
                "HasSHA2": 1,
                "HasSHA3": 1,
                "HasSSE2": 1,
                "HasSSE3": 1,
                "ISOWeek": 1,
                "Ifindex": 1,
                "Imports": 1,
                "Inblock": 1,
                "IsValid": 1,
                "Literal": 1,
                "Longest": 1,
                "MapKeys": 1,
                "Message": 1,
                "Minutes": 1,
                "ModTime": 1,
                "Namelen": 1,
                "Opening": 1,
                "Operand": 1,
                "Oublock": 1,
                "Panicln": 1,
                "Pattern": 1,
                "PkgPath": 1,
                "Pkttype": 1,
                "Pointer": 1,
                "Postfix": 1,
                "Println": 1,
                "RLocker": 1,
                "RUnlock": 1,
                "RawPath": 1,
                "RawRead": 1,
                "ReadMsg": 1,
                "Readdir": 1,
                "Release": 1,
                "RoundUp": 1,
                "Seconds": 1,
                "SetBool": 1,
                "SetName": 1,
                "SetTime": 1,
                "SetUint": 1,
                "Setctty": 1,
                "Setpgid": 1,
                "Shuffle": 1,
                "Stopped": 1,
                "StructT": 1,
                "Success": 1,
                "Symbols": 1,
                "Syscall": 1,
                "Timeout": 1,
                "ToFloat": 1,
                "ToValue": 1,
                "TryRecv": 1,
                "TrySend": 1,
                "Weekday": 1,
                "WriteAt": 1,
                "WriteTo": 1,
                "X__pad0": 1,
                "YearDay": 1,
                "_delete": 1,
                "_exists": 1,
                "_object": 1,
                "aborted": 1,
                "advance": 1,
                "alignme": 1,
                "alllink": 1,
                "allnext": 1,
                "alloc_m": 1,
                "allowIn": 1,
                "amended": 1,
                "argSize": 1,
                "badVerb": 1,
                "balance": 1,
                "blocked": 1,
                "buckets": 1,
                "bufLock": 1,
                "by_size": 1,
                "byteBuf": 1,
                "callers": 1,
                "central": 1,
                "cgoCtxt": 1,
                "closing": 1,
                "codegen": 1,
                "compile": 1,
                "context": 1,
                "copyLen": 1,
                "created": 1,
                "current": 1,
                "debuggc": 1,
                "declare": 1,
                "defined": 1,
                "dequeue": 1,
                "destroy": 1,
                "dirinfo": 1,
                "disable": 1,
                "discard": 1,
                "dispose": 1,
                "doMatch": 1,
                "doPrint": 1,
                "docrash": 1,
                "e_entry": 1,
                "e_flags": 1,
                "e_ident": 1,
                "e_phnum": 1,
                "e_phoff": 1,
                "e_shnum": 1,
                "e_shoff": 1,
                "elemEnc": 1,
                "elseEnc": 1,
                "enabled": 1,
                "encInit": 1,
                "encoder": 1,
                "enqueue": 1,
                "entries": 1,
                "expbits": 1,
                "fileSet": 1,
                "filetab": 1,
                "finally": 1,
                "float64": 1,
                "flushed": 1,
                "fmt0x64": 1,
                "fmtBool": 1,
                "fnStash": 1,
                "forward": 1,
                "freeBuf": 1,
                "frexp10": 1,
                "funcoff": 1,
                "gctrace": 1,
                "genLine": 1,
                "getEmit": 1,
                "getSlow": 1,
                "gnuHash": 1,
                "gobType": 1,
                "goidgen": 1,
                "growing": 1,
                "gsignal": 1,
                "hasName": 1,
                "hasmain": 1,
                "hdrsize": 1,
                "huffSym": 1,
                "ignored": 1,
                "inCount": 1,
                "invalid": 1,
                "isArray": 1,
                "isEmpty": 1,
                "isError": 1,
                "isValid": 1,
                "keyKind": 1,
                "keysize": 1,
                "lexical": 1,
                "libcall": 1,
                "literal": 1,
                "lockedg": 1,
                "lockedm": 1,
                "longest": 1,
                "marshal": 1,
                "matched": 1,
                "message": 1,
                "methods": 1,
                "modTime": 1,
                "morebuf": 1,
                "mutable": 1,
                "nameLen": 1,
                "nameOff": 1,
                "nameoff": 1,
                "newDate": 1,
                "nextInt": 1,
                "next_gc": 1,
                "nlookup": 1,
                "nmalloc": 1,
                "nmfreed": 1,
                "noStack": 1,
                "npcdata": 1,
                "onepass": 1,
                "operand": 1,
                "outUsed": 1,
                "padChar": 1,
                "pattern": 1,
                "pauseNS": 1,
                "pinSlow": 1,
                "pkgPath": 1,
                "pkgpath": 1,
                "pointer": 1,
                "popList": 1,
                "postfix": 1,
                "preempt": 1,
                "prepare": 1,
                "primary": 1,
                "private": 1,
                "program": 1,
                "ptrdata": 1,
                "pushAll": 2,
                "pushcnt": 1,
                "putFast": 1,
                "racectx": 1,
                "readErr": 1,
                "readPos": 1,
                "readVal": 1,
                "readdir": 1,
                "readers": 1,
                "reading": 1,
                "reclaim": 1,
                "recover": 1,
                "release": 1,
                "resolve": 1,
                "restart": 1,
                "reviver": 1,
                "roffset": 1,
                "runlock": 1,
                "runnext": 1,
                "sa_mask": 1,
                "scratch": 1,
                "seedPos": 1,
                "setDone": 1,
                "setMono": 1,
                "setPath": 1,
                "setSpan": 1,
                "setType": 1,
                "set_rip": 1,
                "set_rsp": 1,
                "set_sec": 1,
                "si_addr": 1,
                "si_code": 1,
                "sigaddr": 1,
                "sigcode": 1,
                "sigmask": 1,
                "skipNop": 1,
                "sortkey": 1,
                "spanKey": 1,
                "special": 1,
                "ss_size": 1,
                "st_info": 1,
                "st_name": 1,
                "st_size": 1,
                "started": 1,
                "startpc": 1,
                "success": 1,
                "switch2": 1,
                "switch3": 1,
                "switch4": 1,
                "switch6": 1,
                "symHash": 1,
                "sysStat": 1,
                "tagSize": 1,
                "takeAll": 1,
                "textOff": 1,
                "timeEnd": 1,
                "toValue": 1,
                "topbits": 1,
                "tophash": 1,
                "tv_nsec": 1,
                "tv_usec": 1,
                "typeOff": 1,
                "typemap": 1,
                "unixSec": 1,
                "varList": 1,
                "vd_hash": 1,
                "vd_next": 1,
                "verHash": 1,
                "version": 1,
                "visited": 1,
                "waiting": 1,
                "wrapErr": 1,
                "wrapped": 1,
                "writeOn": 1,
                "encoding": 1,
                "*[16]int": 1,
                "*[19]int": 1,
                "*[2]int8": 1,
                "*[8]bool": 1,
                "*[][]int": 1,
                "*[]error": 1,
                "*[]int16": 1,
                "*[]int32": 1,
                "*[]int64": 1,
                "*[]uint8": 1,
                "*cpu.x86": 1,
                "*float32": 1,
                "*float64": 1,
                "*fmt.fmt": 1,
                "*os.File": 1,
                "*os.file": 1,
                "*poll.FD": 1,
                "*uintptr": 1,
                "*url.URL": 1,
                "Argument": 1,
                "Buffered": 1,
                "CapNames": 1,
                "Comments": 1,
                "Contains": 1,
                "CoreDump": 1,
                "Debugger": 1,
                "ExitCode": 1,
                "FetchAll": 1,
                "FileLine": 1,
                "Filename": 1,
                "Flowinfo": 1,
                "Fragment": 1,
                "GoString": 1,
                "HasASIMD": 1,
                "HasCPUID": 1,
                "HasCRC32": 1,
                "HasDCPOP": 1,
                "HasJSCVT": 1,
                "HasLRCPC": 1,
                "HasPMULL": 1,
                "HasSSE41": 1,
                "HasSSE42": 1,
                "HasSSSE3": 1,
                "Hostname": 1,
                "IsNumber": 1,
                "IsObject": 1,
                "IsStream": 1,
                "IsString": 1,
                "Location": 1,
                "MapIndex": 1,
                "MapRange": 1,
                "Multiply": 1,
                "Nsignals": 1,
                "NumField": 1,
                "Operator": 1,
                "Overhead": 1,
                "Packages": 1,
                "Password": 1,
                "Position": 1,
                "Protocol": 1,
                "RawQuery": 1,
                "RawWrite": 1,
                "ReadByte": 1,
                "ReadFrom": 1,
                "ReadLine": 1,
                "ReadRune": 1,
                "Required": 1,
                "Scope_id": 1,
                "Sequence": 1,
                "SetBytes": 1,
                "SetConst": 1,
                "SetFlags": 1,
                "SetFloat": 1,
                "Shutdown": 1,
                "Signaled": 1,
                "Simplify": 1,
                "SysUsage": 1,
                "ToString": 1,
                "Truncate": 1,
                "URIError": 1,
                "UnixNano": 1,
                "UserTime": 1,
                "Username": 1,
                "WriteMsg": 1,
                "_fnStash": 1,
                "_runtime": 1,
                "addExtra": 1,
                "addNonGo": 1,
                "allspans": 1,
                "arrayEnc": 1,
                "asserted": 1,
                "assignTo": 1,
                "baseMask": 1,
                "baseaddr": 1,
                "bitCount": 1,
                "bytedata": 1,
                "cacheEnd": 1,
                "capNames": 1,
                "cgocheck": 1,
                "checkPut": 1,
                "cmpl_run": 1,
                "coalesce": 1,
                "codebits": 1,
                "collapse": 1,
                "comments": 1,
                "concrete": 1,
                "contains": 1,
                "continpc": 1,
                "coprimes": 1,
                "copyData": 1,
                "copyDist": 1,
                "countBuf": 1,
                "dataqsiz": 1,
                "dclStash": 1,
                "debugGen": 1,
                "debugger": 1,
                "decIndir": 1,
                "decOpFor": 1,
                "decode32": 1,
                "decode64": 1,
                "default_": 1,
                "describe": 1,
                "divShift": 1,
                "doPrintf": 1,
                "e_ehsize": 1,
                "elemsize": 1,
                "elemtype": 1,
                "embedded": 1,
                "enablegc": 1,
                "encIndir": 1,
                "endCycle": 1,
                "eofError": 1,
                "erroring": 1,
                "fastrand": 1,
                "fieldnum": 1,
                "filename": 1,
                "flushGen": 1,
                "fmtBytes": 1,
                "fmtFlags": 1,
                "fmtFloat": 1,
                "freeList": 1,
                "freeSpan": 1,
                "freeWait": 1,
                "freelink": 1,
                "fullHead": 1,
                "fullTail": 1,
                "funcInfo": 1,
                "funcName": 1,
                "funcType": 1,
                "generate": 1,
                "getValue": 1,
                "goRegexp": 1,
                "hasLabel": 1,
                "heapGoal": 1,
                "heap_sys": 1,
                "histSize": 1,
                "inSwitch": 1,
                "initSpan": 1,
                "isMarked": 1,
                "isRegExp": 1,
                "isSelect": 1,
                "it_value": 1,
                "keyIndir": 1,
                "lastByte": 1,
                "lastFreq": 1,
                "lastRead": 1,
                "lastpoll": 1,
                "libcallg": 1,
                "linkMask": 1,
                "loadAddr": 1,
                "location": 1,
                "mantbits": 1,
                "mappings": 1,
                "matchcap": 1,
                "maxprocs": 1,
                "mcentral": 1,
                "moreBits": 1,
                "mstartfn": 1,
                "namesInd": 1,
                "nbgsweep": 1,
                "ncgocall": 1,
                "needzero": 1,
                "newArray": 1,
                "newBytes": 1,
                "newError": 1,
                "newStack": 1,
                "nextBase": 1,
                "nextFree": 1,
                "nextUint": 1,
                "nonblock": 1,
                "nonempty": 1,
                "noptrbss": 1,
                "numExtra": 1,
                "numInstr": 1,
                "objIndex": 1,
                "operator": 1,
                "outCount": 1,
                "overflow": 1,
                "parseFor": 1,
                "parseInt": 1,
                "password": 1,
                "pauseGen": 1,
                "pause_ns": 1,
                "pointers": 1,
                "pollable": 1,
                "position": 1,
                "prevRune": 1,
                "previous": 1,
                "printArg": 1,
                "priority": 1,
                "property": 1,
                "pushBack": 1,
                "putBatch": 1,
                "putValue": 1,
                "raceaddr": 1,
                "rcvrType": 1,
                "readLock": 1,
                "readable": 1,
                "recvType": 1,
                "released": 1,
                "runnable": 1,
                "runqhead": 1,
                "runqsize": 1,
                "runqtail": 1,
                "rwunlock": 1,
                "sa_flags": 1,
                "scanNext": 1,
                "scanWork": 1,
                "scavenge": 1,
                "sendType": 1,
                "sendZero": 1,
                "seqStart": 1,
                "sequence": 1,
                "setError": 1,
                "setRunes": 1,
                "setSpans": 1,
                "setValue": 1,
                "set_nsec": 1,
                "set_usec": 1,
                "shutdown": 1,
                "si_errno": 1,
                "si_signo": 1,
                "sigcode0": 1,
                "sigcode1": 1,
                "sleeping": 1,
                "sockaddr": 1,
                "specials": 1,
                "spineCap": 1,
                "spineLen": 1,
                "spinning": 1,
                "ss_flags": 1,
                "st_other": 1,
                "st_shndx": 1,
                "st_value": 1,
                "stackTab": 1,
                "stktopsp": 1,
                "stopnote": 1,
                "stopping": 1,
                "stopwait": 1,
                "stwprocs": 1,
                "sudogbuf": 1,
                "sweepers": 1,
                "sweepgen": 1,
                "sysAlloc": 1,
                "sysUsage": 1,
                "tagCount": 1,
                "targetpc": 1,
                "throwing": 1,
                "ticksEnd": 1,
                "tmpClass": 1,
                "toObject": 1,
                "tracebuf": 1,
                "traceseq": 1,
                "truncate": 1,
                "tryAlloc": 1,
                "tryStore": 1,
                "uncommon": 1,
                "userTime": 1,
                "username": 1,
                "variable": 1,
                "vd_flags": 1,
                "waitRead": 1,
                "waitlink": 1,
                "waitlock": 1,
                "waitnote": 1,
                "waittail": 1,
                "wireType": 1,
                "writable": 1,
                "writeBuf": 1,
                "writeOff": 1,
                "writeSet": 1,
                "writebuf": 1,
                "math/rand": 1,
                "os/signal": 1,
                "*[0]int32": 1,
                "*[0]uint8": 1,
                "*[14]int8": 1,
                "*[1]int32": 1,
                "*[1]uint8": 1,
                "*[288]int": 1,
                "*[2]int32": 1,
                "*[2]uint8": 1,
                "*[316]int": 1,
                "*[3]int64": 1,
                "*[3]uint8": 1,
                "*[4]int32": 1,
                "*[4]uint8": 1,
                "*[5]int32": 1,
                "*[5]int64": 1,
                "*[5]uint8": 1,
                "*[6]int32": 1,
                "*[7]int32": 1,
                "*[8]int32": 1,
                "*[8]int64": 1,
                "*[8]uint8": 1,
                "*[96]int8": 1,
                "*[9]int32": 1,
                "*[9]uint8": 1,
                "*[]*uint8": 1,
                "*[]string": 1,
                "*[]uint16": 1,
                "*[]uint32": 1,
                "*[]uint64": 1,
                "*ast.Node": 1,
                "*chan int": 1,
                "*dbg.Dbgr": 1,
                "*file.Idx": 1,
                "*otto._at": 1,
                "*sync.Map": 1,
                "AddImport": 1,
                "AfterHook": 1,
                "Alternate": 1,
                "Anonymous": 1,
                "BlockSize": 1,
                "CallSlice": 1,
                "Continued": 1,
                "EvalError": 1,
                "FindIndex": 1,
                "Ftruncate": 1,
                "GobDecode": 1,
                "GobEncode": 1,
                "HasPOPCNT": 1,
                "HasSHA512": 1,
                "Interface": 1,
                "Interrupt": 1,
                "IsBoolean": 1,
                "IsDefined": 1,
                "IsRegular": 1,
                "LeftBrace": 1,
                "MatchRune": 1,
                "Multiaddr": 1,
                "NonceSize": 1,
                "Normalize": 1,
                "NumMethod": 1,
                "NumSubexp": 1,
                "Pad_cgo_0": 1,
                "Pad_cgo_1": 1,
                "Parameter": 1,
                "Pdeathsig": 1,
                "Precision": 1,
                "ReadBytes": 1,
                "ReadSlice": 1,
                "RoundDown": 1,
                "Semicolon": 1,
                "SetLogger": 1,
                "SetOutput": 1,
                "SetPrefix": 1,
                "SetString": 1,
                "Signature": 1,
                "Specified": 1,
                "StartCond": 1,
                "Statement": 1,
                "Temporary": 1,
                "ToBoolean": 1,
                "ToInteger": 1,
                "TrapCause": 1,
                "TypeError": 1,
                "ValueElem": 1,
                "WaitWrite": 1,
                "WriteByte": 1,
                "WriteOnce": 1,
                "WriteRune": 1,
                "X__unused": 1,
                "_dclStash": 1,
                "absSource": 1,
                "addObject": 1,
                "aesCipher": 1,
                "allArenas": 1,
                "allocBits": 1,
                "alternate": 1,
                "ancestors": 1,
                "argNumber": 1,
                "arguments": 1,
                "availRead": 1,
                "backtrack": 1,
                "badArgNum": 1,
                "bitCounts": 1,
                "bitLength": 1,
                "cacheSpan": 1,
                "cacheZone": 1,
                "caughtsig": 1,
                "chrOffset": 1,
                "cmpl_eval": 1,
                "construct": 1,
                "copyCheck": 1,
                "dataBlock": 1,
                "dataCount": 1,
                "dateValue": 1,
                "decodeInt": 1,
                "decodeMap": 1,
                "deferlock": 1,
                "deferpool": 1,
                "deletable": 1,
                "divShift2": 1,
                "doExecute": 1,
                "doOnePass": 1,
                "doPrintln": 1,
                "e_machine": 1,
                "e_version": 1,
                "elemIndir": 1,
                "encodeInt": 1,
                "encodeMap": 1,
                "enginePtr": 1,
                "enoptrbss": 1,
                "enumerate": 1,
                "equalFold": 1,
                "fixedSize": 1,
                "floatBits": 1,
                "fmtString": 1,
                "framePool": 1,
                "freeindex": 1,
                "freqcache": 1,
                "gcbssmask": 1,
                "gcwaiting": 1,
                "getLength": 1,
                "goidcache": 1,
                "hasPrefix": 1,
                "heap_idle": 1,
                "heap_live": 1,
                "heap_scan": 1,
                "ignoreMap": 1,
                "insertNew": 1,
                "instQueue": 1,
                "isGNUHash": 1,
                "isPointer": 1,
                "itablinks": 1,
                "largefree": 1,
                "lastTicks": 1,
                "libcallpc": 1,
                "libcallsp": 1,
                "localSize": 1,
                "lockOwner": 1,
                "lockedExt": 1,
                "lockedInt": 1,
                "lockorder": 1,
                "lostExtra": 1,
                "mallocing": 1,
                "maxmcount": 1,
                "mspan_sys": 1,
                "multiline": 1,
                "nBSSRoots": 1,
                "nameBytes": 1,
                "nevacuate": 1,
                "newNumber": 1,
                "newObject": 1,
                "newReader": 1,
                "newRegExp": 1,
                "newRegexp": 1,
                "newString": 1,
                "nextArena": 1,
                "nextBlock": 1,
                "nextIndex": 1,
                "nextwaitm": 1,
                "nfuncdata": 1,
                "nonceSize": 1,
                "noptrdata": 1,
                "noverflow": 1,
                "npagesKey": 1,
                "numBlocks": 1,
                "numSubexp": 1,
                "omitEmpty": 1,
                "openScope": 1,
                "other_sys": 1,
                "padString": 1,
                "pad_cgo_0": 1,
                "pageInUse": 1,
                "pageMarks": 1,
                "panicking": 1,
                "parameter": 1,
                "pause_end": 1,
                "pclntable": 1,
                "pkghashes": 1,
                "popWriter": 1,
                "prefixEnd": 1,
                "printlock": 1,
                "profilehz": 1,
                "prototype": 1,
                "ptrToThis": 1,
                "pushValue": 1,
                "readFlush": 1,
                "readIndex": 1,
                "readSlice": 2,
                "readerSem": 1,
                "recovered": 1,
                "reference": 1,
                "reordered": 1,
                "retOffset": 1,
                "saveError": 1,
                "scanGroup": 1,
                "scanWhile": 1,
                "scavenged": 1,
                "schedlink": 1,
                "schedtick": 1,
                "schedwhen": 1,
                "semicolon": 1,
                "setMarked": 1,
                "sizeclass": 1,
                "sourceCol": 1,
                "spanalloc": 1,
                "spanclass": 1,
                "spineLock": 1,
                "stackLock": 1,
                "stacksize": 1,
                "startAddr": 1,
                "startSema": 1,
                "startTime": 1,
                "statement": 1,
                "stepState": 1,
                "stringSeq": 1,
                "stripMono": 1,
                "sudoglock": 1,
                "sweepdone": 1,
                "syscallpc": 1,
                "syscallsp": 1,
                "tMarkTerm": 1,
                "timeStart": 1,
                "totaltime": 1,
                "traceback": 1,
                "traceskip": 1,
                "typelinks": 1,
                "unmarshal": 1,
                "useNumber": 1,
                "valueKind": 1,
                "valuesize": 1,
                "waitWrite": 1,
                "waitsince": 1,
                "walkTreap": 1,
                "wbufSpans": 1,
                "writeBits": 1,
                "writeByte": 1,
                "writeCode": 1,
                "writeCopy": 1,
                "writeLock": 1,
                "writeMark": 1,
                "writerSem": 1,
                "crypto/aes": 1,
                "hash/crc32": 1,
                "*[0]string": 1,
                "*[108]int8": 1,
                "*[10]int32": 1,
                "*[11]int32": 1,
                "*[128]bool": 1,
                "*[12]int32": 1,
                "*[13]int32": 1,
                "*[14]int32": 1,
                "*[14]uint8": 1,
                "*[15]int32": 1,
                "*[15]uint8": 1,
                "*[16]int32": 1,
                "*[16]uint8": 1,
                "*[17]int32": 1,
                "*[19]int32": 1,
                "*[1]string": 1,
                "*[1]uint16": 1,
                "*[1]uint32": 1,
                "*[1]uint64": 1,
                "*[20]uint8": 1,
                "*[24]uint8": 1,
                "*[25]int32": 1,
                "*[27]int32": 1,
                "*[2]string": 1,
                "*[2]uint32": 1,
                "*[2]uint64": 1,
                "*[30]int32": 1,
                "*[32]int32": 1,
                "*[32]uint8": 1,
                "*[36]int32": 1,
                "*[39]int32": 1,
                "*[3]string": 1,
                "*[3]uint32": 1,
                "*[3]uint64": 1,
                "*[40]int32": 1,
                "*[40]uint8": 1,
                "*[42]uint8": 1,
                "*[44]int32": 1,
                "*[45]int32": 1,
                "*[46]int32": 1,
                "*[4]string": 1,
                "*[4]uint16": 1,
                "*[51]int32": 1,
                "*[5]string": 1,
                "*[64]uint8": 1,
                "*[65]int64": 1,
                "*[65]uint8": 1,
                "*[67]uint8": 1,
                "*[68]uint8": 1,
                "*[6]string": 1,
                "*[73]int32": 1,
                "*[7]string": 1,
                "*[80]uint8": 1,
                "*[8]*uint8": 1,
                "*[8]string": 1,
                "*[8]uint32": 1,
                "*[8]uint64": 1,
                "*[9]string": 1,
                "*[][]int32": 1,
                "*[][]uint8": 1,
                "*[]float32": 1,
                "*[]float64": 1,
                "*[]uintptr": 1,
                "*chan bool": 1,
                "*complex64": 1,
                "*cpu.arm64": 1,
                "*dbg._emit": 1,
                "*dbg._frmt": 1,
                "*file.File": 1,
                "*fmt.State": 1,
                "*func(int)": 1,
                "*gob.decOp": 1,
                "*gob.encOp": 1,
                "*io.Reader": 1,
                "*io.Writer": 1,
                "*os.Signal": 1,
                "*otto.Otto": 1,
                "*rand.Rand": 1,
                "*runtime.g": 1,
                "*runtime.m": 1,
                "*runtime.p": 1,
                "*struct {}": 1,
                "*sync.Once": 1,
                "*sync.Pool": 1,
                "*syntax.Op": 1,
                "*time.Time": 1,
                "*time.zone": 1,
                "*unicode.d": 1,
                "*url.Error": 1,
                "AddComment": 1,
                "AfterBlock": 1,
                "BeforeHook": 1,
                "Cloneflags": 1,
                "CommentMap": 1,
                "CommonType": 1,
                "Comparable": 1,
                "Comparison": 1,
                "Consequent": 1,
                "Controllen": 1,
                "Credential": 1,
                "DecodedLen": 1,
                "EncodedLen": 1,
                "EntryPoint": 1,
                "ExitStatus": 1,
                "ExpFloat64": 1,
                "Expression": 1,
                "FieldAlign": 1,
                "FindString": 1,
                "ForceQuery": 1,
                "Foreground": 1,
                "HasASIMDDP": 1,
                "HasASIMDHP": 1,
                "HasATOMICS": 1,
                "HasEVTSTRM": 1,
                "HasOSXSAVE": 1,
                "Identifier": 1,
                "Implements": 1,
                "ImportPath": 1,
                "IsFunction": 1,
                "IsVariadic": 1,
                "LayoutElem": 1,
                "LoadScript": 1,
                "Nanosecond": 1,
                "RangeError": 1,
                "RawControl": 1,
                "ReadDirent": 1,
                "ReadString": 1,
                "ReplaceAll": 1,
                "RequestURI": 1,
                "RightBrace": 1,
                "SetComplex": 1,
                "SetPointer": 1,
                "SetTimeout": 1,
                "Stacktrace": 1,
                "StopSignal": 1,
                "SystemTime": 1,
                "UnreadByte": 1,
                "UnreadRune": 1,
                "UnsafeAddr": 1,
                "_interface": 1,
                "_newRegExp": 1,
                "afterBlock": 1,
                "allMatches": 1,
                "allocCache": 1,
                "allocCount": 1,
                "arenaHints": 1,
                "assistTime": 1,
                "availWrite": 1,
                "bgMarkDone": 1,
                "bucketsize": 1,
                "buildIndex": 1,
                "cacheStart": 1,
                "cachealloc": 1,
                "canAddrEnc": 1,
                "catchPanic": 1,
                "cgoCallers": 1,
                "checkValid": 1,
                "checkempty": 1,
                "clearflags": 1,
                "closeScope": 1,
                "cmpl_parse": 1,
                "comparison": 1,
                "compileDec": 1,
                "consequent": 1,
                "countAlloc": 1,
                "countState": 1,
                "createType": 1,
                "decodeUint": 1,
                "definition": 1,
                "delivering": 1,
                "e_shstrndx": 1,
                "encodeUint": 1,
                "enoptrdata": 1,
                "enterScope": 1,
                "enumerable": 1,
                "escapeHTML": 1,
                "expression": 1,
                "extensible": 1,
                "fieldAlign": 1,
                "fieldalign": 1,
                "findObject": 1,
                "fixsigcode": 1,
                "fmtBoolean": 1,
                "fmtComplex": 1,
                "fmtInteger": 1,
                "fmtPointer": 1,
                "fmtUnicode": 1,
                "frameStore": 1,
                "freeManual": 1,
                "free_bytes": 1,
                "gc_trigger": 1,
                "gcdatamask": 1,
                "gcmarkBits": 1,
                "gcscandone": 1,
                "getBinding": 1,
                "goSigStack": 1,
                "goodArgNum": 1,
                "hasBinding": 1,
                "heap_alloc": 1,
                "heap_inuse": 1,
                "identifier": 1,
                "ignoreCase": 1,
                "inFunction": 1,
                "insertBack": 1,
                "invalidptr": 1,
                "isBlocking": 1,
                "isCallable": 1,
                "isExported": 1,
                "largealloc": 1,
                "leaveScope": 1,
                "loadOffset": 1,
                "local_scan": 1,
                "lookupName": 1,
                "matchCount": 1,
                "mcache_sys": 1,
                "missLocked": 1,
                "missingArg": 1,
                "modulename": 1,
                "nDataRoots": 1,
                "nSpanRoots": 1,
                "nameNonEsc": 1,
                "nativeFile": 1,
                "nativeLine": 1,
                "needextram": 1,
                "newArrayOf": 1,
                "newBoolean": 1,
                "newConsole": 1,
                "newGoArray": 1,
                "newGoSlice": 1,
                "newLiteral": 1,
                "nlargefree": 1,
                "nmspinning": 1,
                "nsmallfree": 1,
                "offsetAnon": 1,
                "offsetFreq": 1,
                "oldbuckets": 1,
                "pagesInUse": 1,
                "pagesSwept": 1,
                "parseClass": 1,
                "parseForIn": 1,
                "parseState": 1,
                "parseThrow": 1,
                "pauseStack": 1,
                "pauseStart": 1,
                "pluginpath": 1,
                "precedence": 1,
                "preemptoff": 1,
                "prefixRune": 1,
                "printValue": 1,
                "properties": 1,
                "pushWriter": 1,
                "raceignore": 1,
                "readHeader": 1,
                "readString": 1,
                "readUnlock": 1,
                "readerPass": 1,
                "readerWait": 1,
                "releaseAll": 1,
                "removeNode": 1,
                "removeSpan": 1,
                "replaceAll": 1,
                "rotateLeft": 1,
                "runtimeCtx": 1,
                "sa_handler": 1,
                "safeString": 1,
                "savedError": 1,
                "scanEscape": 1,
                "scanString": 1,
                "schedtrace": 1,
                "selectDone": 1,
                "sendTypeId": 1,
                "setBinding": 1,
                "sigContext": 1,
                "signalLock": 1,
                "sleepUntil": 1,
                "sourceLine": 1,
                "sourcesInd": 1,
                "stackLimit": 1,
                "stackcache": 1,
                "stacks_sys": 1,
                "startCycle": 1,
                "storedSize": 1,
                "sudogcache": 1,
                "sweepSpans": 1,
                "symstrings": 1,
                "sysmonnote": 1,
                "sysmontick": 1,
                "sysmonwait": 1,
                "systemTime": 1,
                "tSweepTerm": 1,
                "thisObject": 1,
                "throwsplit": 1,
                "ticksStart": 1,
                "tinyallocs": 1,
                "tinyoffset": 1,
                "traceLimit": 1,
                "traceSweep": 1,
                "traceSwept": 1,
                "tracelastp": 1,
                "treapalloc": 1,
                "tryGetFast": 1,
                "typeString": 1,
                "userForced": 1,
                "valueArray": 1,
                "vd_version": 1,
                "visitQueue": 1,
                "waitreason": 1,
                "widPresent": 1,
                "workbufhdr": 1,
                "writeBlock": 1,
                "writeBytes": 1,
                "writeClear": 1,
                "writeSlice": 1,
                "sync/atomic": 1,
                "**runtime.g": 1,
                "**runtime.p": 1,
                "**sync.Pool": 1,
                "*[0]uintptr": 1,
                "*[100]uint8": 1,
                "*[10]string": 1,
                "*[11]string": 1,
                "*[128]uint8": 1,
                "*[129]uint8": 1,
                "*[12]string": 1,
                "*[15]string": 1,
                "*[16]uint16": 1,
                "*[16]uint64": 1,
                "*[1][]int32": 1,
                "*[1]uintptr": 1,
                "*[20]uint64": 1,
                "*[22]string": 1,
                "*[23]string": 1,
                "*[248]uint8": 1,
                "*[249]uint8": 1,
                "*[24]string": 1,
                "*[256]uint8": 1,
                "*[26]string": 1,
                "*[27]string": 1,
                "*[286]int32": 1,
                "*[2]uintptr": 1,
                "*[317]uint8": 1,
                "*[31]string": 1,
                "*[32]string": 1,
                "*[3]float64": 1,
                "*[412]int32": 1,
                "*[41]string": 1,
                "*[440]int32": 1,
                "*[46]string": 1,
                "*[4]uintptr": 1,
                "*[512]uint8": 1,
                "*[5]float64": 1,
                "*[607]int64": 1,
                "*[65]uint32": 1,
                "*[67]uint16": 1,
                "*[67]uint64": 1,
                "*[6]float64": 1,
                "*[6]uintptr": 1,
                "*[768]uint8": 1,
                "*[800]uint8": 1,
                "*[86]uint16": 1,
                "*[87]string": 1,
                "*[8][]uint8": 1,
                "*[]*os.File": 1,
                "*[][]string": 1,
                "*[][]uint32": 1,
                "*[]ast.Node": 1,
                "*aes.gcmAsm": 1,
                "*cipher.ofb": 1,
                "*complex128": 1,
                "*cpu.option": 1,
                "*fmt.buffer": 1,
                "*func() int": 1,
                "*func(bool)": 1,
                "*gob.typeId": 1,
                "*json.field": 1,
                "*log.Logger": 1,
                "*os.Process": 1,
                "*os.dirInfo": 1,
                "*os.rawConn": 1,
                "*os.timeout": 1,
                "*otto.Error": 1,
                "*otto.Value": 1,
                "*otto._node": 1,
                "*regexp.job": 1,
                "*sync.Mutex": 1,
                "*sync.entry": 1,
                "*time.Month": 1,
                "*url.Values": 1,
                "AddComments": 1,
                "AmbientCaps": 1,
                "AtLineBreak": 1,
                "ContainerID": 1,
                "ContextSkip": 1,
                "DecodeValue": 1,
                "EncodeValue": 1,
                "EscapedPath": 1,
                "FieldByName": 1,
                "GidMappings": 1,
                "GobEncoderT": 1,
                "HasASIMDFHM": 1,
                "HasASIMDRDM": 1,
                "Initializer": 1,
                "IsPrimitive": 1,
                "IsUndefined": 1,
                "LatinOffset": 1,
                "LeftBracket": 1,
                "LoadOrStore": 1,
                "MarkPrimary": 1,
                "MarshalJSON": 1,
                "MarshalText": 1,
                "MatchReader": 1,
                "MatchString": 1,
                "Multistream": 1,
                "Nanoseconds": 1,
                "NoSetGroups": 1,
                "NormFloat64": 1,
                "OverflowInt": 1,
                "SetBlocking": 1,
                "SetDeadline": 1,
                "SetMapIndex": 1,
                "SubexpNames": 1,
                "SymbolTable": 1,
                "SyntaxError": 1,
                "SyscallConn": 1,
                "UidMappings": 1,
                "WithPadding": 1,
                "WriteString": 1,
                "_thisObject": 1,
                "acquiretime": 1,
                "allocManual": 1,
                "alloc_bytes": 1,
                "appendGroup": 1,
                "assistQueue": 1,
                "bgMarkReady": 1,
                "bytesMarked": 1,
                "checkBucket": 1,
                "clearMarked": 1,
                "clobberfree": 1,
                "codegenFreq": 1,
                "configureOn": 1,
                "createstack": 1,
                "dclProperty": 1,
                "decodeArray": 1,
                "decodeSlice": 1,
                "decodeValue": 1,
                "deferreturn": 1,
                "dirtyLocked": 1,
                "dynamicSize": 1,
                "e_phentsize": 1,
                "e_shentsize": 1,
                "encodeArray": 1,
                "ensureSwept": 1,
                "enumerateOn": 1,
                "externalDec": 1,
                "externalEnc": 1,
                "findfunctab": 1,
                "finishBlock": 1,
                "flushedWork": 1,
                "gccheckmark": 1,
                "gcscanvalid": 1,
                "getArgument": 1,
                "getProperty": 1,
                "globalStash": 1,
                "hasInstance": 1,
                "hasOverflow": 1,
                "hasProperty": 1,
                "heap_marked": 1,
                "ignoreArray": 1,
                "ignoreSlice": 1,
                "inIteration": 1,
                "indexTokens": 1,
                "indirectkey": 1,
                "initializer": 1,
                "it_interval": 1,
                "literalFreq": 1,
                "marshalJSON": 1,
                "maybeConcat": 1,
                "millisecond": 1,
                "mspan_inuse": 1,
                "multistream": 1,
                "nStackRoots": 1,
                "nameEscHTML": 1,
                "newSigstack": 1,
                "newURIError": 1,
                "newoverflow": 1,
                "next_sample": 1,
                "nlargealloc": 1,
                "noldbuckets": 1,
                "npausesweep": 1,
                "numberValue": 1,
                "numforcedgc": 1,
                "objectClass": 1,
                "objectStash": 1,
                "offsetEmbed": 1,
                "oldoverflow": 1,
                "overflowBuf": 1,
                "parseEscape": 1,
                "parseRepeat": 1,
                "parseSource": 1,
                "passwordSet": 1,
                "precPresent": 1,
                "preemptible": 1,
                "preemptscan": 1,
                "prefixBytes": 1,
                "prepareRead": 1,
                "pushBackAll": 1,
                "readHuffman": 1,
                "readMessage": 1,
                "readerCount": 1,
                "recvMessage": 1,
                "regExpValue": 1,
                "releasetime": 1,
                "rotateRight": 1,
                "runtimehash": 1,
                "sa_restorer": 1,
                "safePointFn": 1,
                "safeToValue": 1,
                "scanBracket": 1,
                "scanNewline": 1,
                "scavengeAll": 1,
                "scheddetail": 1,
                "setDeadline": 1,
                "set_sigaddr": 1,
                "set_sigcode": 1,
                "setoverflow": 1,
                "shouldVisit": 1,
                "speciallock": 1,
                "stackguard0": 1,
                "stackguard1": 1,
                "startBucket": 1,
                "stdoutOrErr": 1,
                "storeLocked": 1,
                "stringBytes": 1,
                "stringValue": 1,
                "stringsLock": 1,
                "subexpNames": 1,
                "sweepArenas": 1,
                "syscalltick": 1,
                "syscallwhen": 1,
                "textsectmap": 1,
                "total_alloc": 1,
                "uncacheSpan": 1,
                "unknownType": 1,
                "unusedsince": 1,
                "valueQuoted": 1,
                "waittraceev": 1,
                "waitunlockf": 1,
                "wakeupExtra": 1,
                "wholeRegexp": 1,
                "writeTokens": 1,
                "writeUnlock": 1,
                "encoding/gob": 1,
                "encoding/hex": 1,
                "internal/cpu": 1,
                "unicode/utf8": 1,
                "**sync.entry": 1,
                "*[1024]uint8": 1,
                "*[11]float32": 1,
                "*[128]uint16": 1,
                "*[128]uint32": 1,
                "*[133]string": 1,
                "*[140]uint16": 1,
                "*[16]uintptr": 1,
                "*[23]float64": 1,
                "*[256]uint32": 1,
                "*[256]uint64": 1,
                "*[32]uintptr": 1,
                "*[33]float64": 1,
                "*[396]uint32": 1,
                "*[4096]uint8": 1,
                "*[456]uint16": 1,
                "*[512]uint32": 1,
                "*[64]uintptr": 1,
                "*[65]uintptr": 1,
                "*[67]uintptr": 1,
                "*[8192]uint8": 1,
                "*[8][]string": 1,
                "*[8]ast.Node": 1,
                "*[][16]int32": 1,
                "*[][][]uint8": 1,
                "*[]complex64": 1,
                "*[]gob.decOp": 1,
                "*[]gob.encOp": 1,
                "*[]io.Writer": 1,
                "*[]os.Signal": 1,
                "*[]struct {}": 1,
                "*[]sync.Pool": 1,
                "*[]time.zone": 1,
                "*ast.Comment": 1,
                "*ast.Program": 1,
                "*chan func()": 1,
                "*chan uint32": 1,
                "*cipher.AEAD": 1,
                "*crc32.Table": 1,
                "*flate.hcode": 1,
                "*func() bool": 1,
                "*func() uint": 1,
                "*func([]int)": 1,
                "*func(int32)": 1,
                "*func(int64)": 1,
                "*func(uint8)": 1,
                "*gob.Decoder": 1,
                "*gob.Encoder": 1,
                "*gob.gobType": 1,
                "*gob.mapType": 1,
                "*gzip.Header": 1,
                "*gzip.Reader": 1,
                "*io.WriterTo": 1,
                "*json.Number": 1,
                "*null.Logger": 1,
                "*os.FileInfo": 1,
                "*os.FileMode": 1,
                "*os.ProcAttr": 1,
                "*os.fileStat": 1,
                "*otto.Object": 1,
                "*otto.Script": 1,
                "*otto._clone": 1,
                "*otto._error": 1,
                "*otto._frame": 1,
                "*otto._scope": 1,
                "*otto._stash": 1,
                "*parser.Mode": 1,
                "*rand.Source": 1,
                "*runtime.hex": 1,
                "*runtime.mOS": 1,
                "*sync.Locker": 1,
                "*sync.noCopy": 1,
                "*syntax.Inst": 1,
                "*syntax.Prog": 1,
                "*syntax.frag": 1,
                "*sys.Uintreg": 1,
                "*time.dataIO": 1,
                "*token.Token": 1,
                "*url.timeout": 1,
                "APCJEAHZBJDT": 1,
                "AppendFormat": 1,
                "ArgumentList": 1,
                "AssignableTo": 1,
                "BEHHORBDYJII": 1,
                "CanInterface": 1,
                "ContextLimit": 1,
                "DZUEOXSTYHID": 1,
                "DecodeString": 1,
                "DefaultValue": 1,
                "Discriminant": 1,
                "EnableAssets": 1,
                "ExpandString": 1,
                "FieldByIndex": 1,
                "FindAllIndex": 1,
                "FindSubmatch": 1,
                "FixedDecimal": 1,
                "HasPCLMULQDQ": 1,
                "KeysByParent": 1,
                "MarkComments": 1,
                "MatchRunePos": 1,
                "MethodByName": 1,
                "MoveComments": 1,
                "OverflowUint": 1,
                "QEWVMTOFJRYG": 1,
                "Readdirnames": 1,
                "RightBracket": 1,
                "RuntimeError": 1,
                "Unshareflags": 1,
                "XLALOPHPHAUK": 1,
                "XORKeyStream": 1,
                "ZIJTNXLCAZNK": 1,
                "_objectStash": 1,
                "aesCipherAsm": 1,
                "argumentList": 1,
                "assignBucket": 1,
                "atomicstatus": 1,
                "bgScanCredit": 1,
                "buckhash_sys": 1,
                "cmpl_program": 1,
                "configurable": 1,
                "configureOff": 1,
                "configureSet": 1,
                "decodeSingle": 1,
                "decodeStruct": 1,
                "decoderCache": 1,
                "decompressor": 1,
                "deferpoolbuf": 1,
                "dequeueSudoG": 1,
                "discriminant": 1,
                "encodeSingle": 1,
                "encodeStruct": 1,
                "enlistWorker": 1,
                "enumerateOff": 1,
                "enumerateSet": 1,
                "errorContext": 1,
                "exportNative": 1,
                "formatHeader": 1,
                "functionList": 1,
                "gcAssistTime": 1,
                "gcpacertrace": 1,
                "globalObject": 1,
                "goidcacheend": 1,
                "hasPrimitive": 1,
                "heap_objects": 1,
                "huffmanBlock": 1,
                "idleMarkTime": 1,
                "ignoreSingle": 1,
                "ignoreStruct": 1,
                "ignorerCache": 1,
                "lastRuneSize": 1,
                "last_gc_unix": 1,
                "linktimehash": 1,
                "literalStore": 1,
                "madvdontneed": 1,
                "markDoneSema": 1,
                "markrootJobs": 1,
                "markrootNext": 1,
                "mcache_inuse": 1,
                "messageValue": 1,
                "modulehashes": 1,
                "morePointers": 1,
                "newEvalError": 1,
                "newReference": 1,
                "newTypeError": 1,
                "nextCharFreq": 1,
                "nextOverflow": 1,
                "nextPairFreq": 1,
                "nmidlelocked": 1,
                "objectCoerce": 1,
                "onePassRunes": 1,
                "operandCount": 1,
                "overflowTime": 1,
                "paniconfault": 1,
                "parseProgram": 1,
                "pickFreeSpan": 1,
                "preparePanic": 1,
                "prepareWrite": 1,
                "prescavenged": 1,
                "productTable": 1,
                "propertyList": 1,
                "propertyMode": 1,
                "readdirnames": 1,
                "reclaimChunk": 1,
                "reclaimIndex": 1,
                "reflectValue": 1,
                "reflexivekey": 1,
                "rescheduling": 1,
                "sameSizeGrow": 1,
                "scanMantissa": 1,
                "setGlobalRef": 1,
                "shutdownSema": 1,
                "stacks_inuse": 1,
                "sweepWaiters": 1,
                "sysexitticks": 1,
                "takeOverflow": 1,
                "timersBucket": 1,
                "toValueArray": 1,
                "triggerRatio": 1,
                "tryBacktrack": 1,
                "tryWriteCopy": 1,
                "variableList": 1,
                "waitCanceled": 1,
                "wasLineBreak": 1,
                "writeMessage": 1,
                "writePadding": 1,
                "compress/gzip": 1,
                "crypto/cipher": 1,
                "encoding/json": 1,
                "internal/poll": 1,
                "regexp/syntax": 1,
                "**ast.Comment": 1,
                "*[100]uintptr": 1,
                "*[128]float32": 1,
                "*[128]uintptr": 1,
                "*[1]time.zone": 1,
                "*[252]uintptr": 1,
                "*[253]uintptr": 1,
                "*[256]float32": 1,
                "*[512]uintptr": 1,
                "*[56524]int32": 1,
                "*[5]sync.Pool": 1,
                "*[64488]uint8": 1,
                "*[6]os.Signal": 1,
                "*[8]gob.decOp": 1,
                "*[8]struct {}": 1,
                "*[]*file.File": 1,
                "*[]*gob.decOp": 1,
                "*[]*gob.encOp": 1,
                "*[]*runtime.g": 1,
                "*[]*runtime.p": 1,
                "*[]*sync.Pool": 1,
                "*[]complex128": 1,
                "*[]cpu.option": 1,
                "*[]gob.typeId": 1,
                "*[]json.field": 1,
                "*[]otto.Value": 1,
                "*[]regexp.job": 1,
                "*ast.Comments": 1,
                "*ast.Property": 1,
                "*atomic.Value": 1,
                "*bufio.Reader": 1,
                "*bytes.Buffer": 1,
                "*bytes.Reader": 1,
                "*bytes.readOp": 1,
                "*cipher.Block": 1,
                "*dbg._emitLog": 1,
                "*file.FileSet": 1,
                "*flate.Reader": 1,
                "*flate.byFreq": 1,
                "*fmt.Stringer": 1,
                "*fmt.fmtFlags": 1,
                "*func() error": 1,
                "*func() int32": 1,
                "*func() int64": 1,
                "*func(func())": 1,
                "*func(string)": 1,
                "*func(uint64)": 1,
                "*gob.decInstr": 1,
                "*gob.encInstr": 1,
                "*gob.gobError": 1,
                "*gob.typeInfo": 1,
                "*gob.wireType": 1,
                "*interface {}": 1,
                "*json.byIndex": 1,
                "*json.encOpts": 1,
                "*json.scanner": 1,
                "*os.LinkError": 1,
                "*os.PathError": 1,
                "*otto.Context": 1,
                "*otto._global": 1,
                "*otto._number": 1,
                "*otto._object": 1,
                "*otto._result": 1,
                "*parser.Error": 1,
                "*path.lazybuf": 1,
                "*poll.fdMutex": 1,
                "*reflect.Kind": 1,
                "*reflect.Type": 1,
                "*reflect.flag": 1,
                "*reflect.name": 1,
                "*regexp.entry": 1,
                "*regexp.input": 1,
                "*regexp.queue": 1,
                "*runtime.Func": 1,
                "*runtime.bmap": 1,
                "*runtime.hmap": 1,
                "*runtime.itab": 1,
                "*runtime.name": 1,
                "*runtime.note": 1,
                "*sourcemap.fn": 1,
                "*sync.RWMutex": 1,
                "*sync.rlocker": 1,
                "*syntax.Error": 1,
                "*syntax.Flags": 1,
                "*time.Weekday": 1,
                "*url.Userinfo": 1,
                "*url.encoding": 1,
                "AssignDecimal": 1,
                "ConvertibleTo": 1,
                "DatePrototype": 1,
                "FindAllString": 1,
                "InterfaceData": 1,
                "LiteralPrefix": 1,
                "MakeTypeError": 1,
                "MarshalBinary": 1,
                "OverflowFloat": 1,
                "ParameterList": 1,
                "SetControllen": 1,
                "SetEntryPoint": 1,
                "SetExpression": 1,
                "SetsockoptInt": 1,
                "UnmarshalJSON": 1,
                "UnmarshalText": 1,
                "WithSourceMap": 1,
                "ZeroReadIsEOF": 1,
                "applyComments": 1,
                "cgoCallersUse": 1,
                "checknonempty": 1,
                "compileSingle": 1,
                "constructSafe": 1,
                "convertNumber": 1,
                "createBinding": 1,
                "decodeQuantum": 1,
                "deleteBinding": 1,
                "evaluateBreak": 1,
                "firstZoneUsed": 1,
                "footerWritten": 1,
                "futureKeyword": 1,
                "gcAssistBytes": 1,
                "handleMethods": 1,
                "headerWritten": 1,
                "heap_released": 1,
                "incrnoverflow": 1,
                "indirectvalue": 1,
                "isCheckmarked": 1,
                "isSpanInTreap": 1,
                "leadingRegexp": 1,
                "leadingString": 1,
                "markStartTime": 1,
                "marshalBinary": 1,
                "missingMethod": 1,
                "needkeyupdate": 1,
                "needsScavenge": 1,
                "newBaseObject": 1,
                "newDateObject": 1,
                "newRangeError": 1,
                "newTypeBuffer": 1,
                "nextFreeIndex": 1,
                "nextStatement": 1,
                "oldbucketmask": 1,
                "panicURIError": 1,
                "parameterList": 1,
                "parseFunction": 1,
                "popParseState": 1,
                "propertyNames": 1,
                "propertyOrder": 1,
                "reclaimCredit": 1,
                "safePointNote": 1,
                "safePointWait": 1,
                "sourceRootURL": 1,
                "startingtrace": 1,
                "waittraceskip": 1,
                "compress/flate": 1,
                "**gob.typeInfo": 1,
                "**otto._object": 1,
                "**runtime.itab": 1,
                "*[0]*sync.Pool": 1,
                "*[0]json.field": 1,
                "*[0]otto.Value": 1,
                "*[1000]uintptr": 1,
                "*[16][16]int32": 1,
                "*[1]json.field": 1,
                "*[1]otto.Value": 1,
                "*[25]gob.decOp": 1,
                "*[25]gob.encOp": 1,
                "*[2]otto.Value": 1,
                "*[8]*gob.decOp": 1,
                "*[8]*gob.encOp": 1,
                "*[8]gob.typeId": 1,
                "*[8]otto.Value": 1,
                "*[]*sync.entry": 1,
                "*[]crc32.Table": 1,
                "*[]flate.hcode": 1,
                "*[]gob.gobType": 1,
                "*[]os.FileInfo": 1,
                "*[]otto._frame": 1,
                "*[]syntax.Inst": 1,
                "*aes.aesCipher": 1,
                "*ast.Statement": 1,
                "*cipher.Stream": 1,
                "*engine.Engine": 1,
                "*file.Position": 1,
                "*fmt.Formatter": 1,
                "*func() string": 1,
                "*func() uint32": 1,
                "*func() uint64": 1,
                "*func([]uint8)": 1,
                "*func(float64)": 1,
                "*func(int) int": 1,
                "*func(uintptr)": 1,
                "*gob.arrayType": 1,
                "*gob.decBuffer": 1,
                "*gob.decEngine": 1,
                "*gob.decHelper": 1,
                "*gob.encBuffer": 1,
                "*gob.encEngine": 1,
                "*gob.encHelper": 1,
                "*gob.fieldType": 1,
                "*gob.sliceType": 1,
                "*io.ByteReader": 1,
                "*io.ReadCloser": 1,
                "*io.ReaderFrom": 1,
                "*io.RuneReader": 1,
                "*logger.Logger": 1,
                "*otto._fnStash": 1,
                "*otto._runtime": 1,
                "*parser._scope": 1,
                "*poll.pollDesc": 1,
                "*rand.Source64": 1,
                "*reflect.Value": 1,
                "*reflect.rtype": 1,
                "*reflect.tflag": 1,
                "*regexp.Regexp": 1,
                "*regexp.inputs": 1,
                "*regexp.thread": 1,
                "*runtime.Frame": 1,
                "*runtime._func": 1,
                "*runtime._type": 1,
                "*runtime.eface": 1,
                "*runtime.gList": 1,
                "*runtime.gobuf": 1,
                "*runtime.hchan": 1,
                "*runtime.hiter": 1,
                "*runtime.iface": 1,
                "*runtime.mheap": 1,
                "*runtime.mlink": 1,
                "*runtime.mspan": 1,
                "*runtime.mutex": 1,
                "*runtime.scase": 1,
                "*runtime.slice": 1,
                "*runtime.stack": 1,
                "*runtime.sudog": 1,
                "*runtime.tflag": 1,
                "*runtime.timer": 1,
                "*runtime.waitq": 1,
                "*runtime.wbBuf": 1,
                "*sort.lessSwap": 1,
                "*sync.readOnly": 1,
                "*syntax.InstOp": 1,
                "*syntax.Regexp": 1,
                "*syntax.parser": 1,
                "*syntax.ranges": 1,
                "*syscall.Errno": 1,
                "*syscall.Iovec": 1,
                "*time.Duration": 1,
                "*time.Location": 1,
                "*url.temporary": 1,
                "ArrayPrototype": 1,
                "CallerLocation": 1,
                "EncodeToString": 1,
                "ErrorPrototype": 1,
                "MakeRangeError": 1,
                "ReferenceError": 1,
                "ReplaceAllFunc": 1,
                "ResetLineBreak": 1,
                "RoundedInteger": 1,
                "SetsockoptByte": 1,
                "TextMarshalerT": 1,
                "_statementNode": 1,
                "addtimerLocked": 2,
                "allocfreetrace": 1,
                "arenaHintAlloc": 1,
                "arrayInterface": 1,
                "canCheckPrefix": 1,
                "canWriteRecord": 1,
                "cmpl_runOrEval": 1,
                "compatibleType": 1,
                "convertNumeric": 1,
                "createOverflow": 1,
                "decIgnoreOpFor": 1,
                "defineProperty": 1,
                "deltimerLocked": 2,
                "enumerateValue": 1,
                "evaluateDivide": 1,
                "evaluateModulo": 1,
                "freeSpanLocked": 1,
                "gcBgMarkWorker": 1,
                "gcstoptheworld": 1,
                "getOwnProperty": 1,
                "gobDecodeOpFor": 1,
                "hasOwnProperty": 1,
                "hashMightPanic": 1,
                "heapArenaAlloc": 1,
                "increfAndClose": 1,
                "isNumberObject": 1,
                "isStringObject": 1,
                "manualFreeList": 1,
                "maxBitStateLen": 1,
                "mustBeExported": 1,
                "newArrayObject": 1,
                "newClassObject": 1,
                "newErrorObject": 1,
                "newGoMapObject": 1,
                "newObjectStash": 1,
                "newSyntaxError": 1,
                "offsetEncoding": 1,
                "panicTypeError": 1,
                "parseClassChar": 1,
                "parseDotMember": 1,
                "parsePerlFlags": 1,
                "parseStatement": 1,
                "pause_total_ns": 1,
                "physPageBounds": 1,
                "prefixComplete": 1,
                "primitiveValue": 1,
                "procresizetime": 1,
                "pushParseState": 1,
                "runSafePointFn": 1,
                "scanIdentifier": 1,
                "scavengeCredit": 1,
                "sendActualType": 1,
                "setCheckmarked": 1,
                "skipWhiteSpace": 1,
                "sysblocktraced": 1,
                "timeoutMonitor": 1,
                "toReflectValue": 1,
                "traceBufHeader": 1,
                "traceReclaimed": 1,
                "truncateString": 1,
                "tryLoadOrStore": 1,
                "valueInterface": 1,
                "writeBlockHuff": 1,
                "encoding/base64": 1,
                "**gob.decEngine": 1,
                "**gob.fieldType": 1,
                "**reflect.rtype": 1,
                "**regexp.thread": 1,
                "**runtime._type": 1,
                "**runtime.hchan": 1,
                "**runtime.mspan": 1,
                "**runtime.sudog": 1,
                "**syntax.Regexp": 1,
                "**time.Location": 1,
                "*[15]cpu.option": 1,
                "*[2097152]uint8": 1,
                "*[8]*sync.entry": 1,
                "*[8]gob.gobType": 1,
                "*[]*ast.Comment": 1,
                "*[]ast.Property": 1,
                "*[]gob.decInstr": 1,
                "*[]gob.encInstr": 1,
                "*[]interface {}": 1,
                "*[]reflect.Kind": 1,
                "*[]reflect.Type": 1,
                "*[]regexp.entry": 1,
                "*ast.CommentMap": 1,
                "*ast.Expression": 1,
                "*ast.Identifier": 1,
                "*base64.decoder": 1,
                "*base64.encoder": 1,
                "*chan os.Signal": 1,
                "*chan struct {}": 1,
                "*flate.Resetter": 1,
                "*fmt.GoStringer": 1,
                "*func() []uint8": 1,
                "*func() float32": 1,
                "*func() float64": 1,
                "*func() uintptr": 1,
                "*func(ast.Node)": 1,
                "*func(int) bool": 1,
                "*func(int, int)": 1,
                "*gob.CommonType": 1,
                "*gob.GobDecoder": 1,
                "*gob.GobEncoder": 1,
                "*gob.structType": 1,
                "*io.WriteCloser": 1,
                "*json.Marshaler": 1,
                "*json.jsonError": 1,
                "*map[string]int": 1,
                "*os.newFileKind": 1,
                "*otto._compiler": 1,
                "*otto._dclStash": 1,
                "*otto._ecmaTime": 1,
                "*otto._property": 1,
                "*parser._parser": 1,
                "*rand.rngSource": 1,
                "*reflect.Method": 1,
                "*reflect.method": 1,
                "*regexp.machine": 1,
                "*registry.Entry": 1,
                "*runtime.Frames": 1,
                "*runtime._defer": 1,
                "*runtime._panic": 1,
                "*runtime.bucket": 1,
                "*runtime.dbgVar": 1,
                "*runtime.elfSym": 1,
                "*runtime.funcID": 1,
                "*runtime.gQueue": 1,
                "*runtime.gcBits": 1,
                "*runtime.gcMode": 1,
                "*runtime.gcWork": 1,
                "*runtime.lfnode": 1,
                "*runtime.mTreap": 1,
                "*runtime.mcache": 1,
                "*runtime.mstats": 1,
                "*runtime.schedt": 1,
                "*runtime.sigset": 1,
                "*runtime.stackt": 1,
                "*runtime.tmpBuf": 1,
                "*signal.handler": 1,
                "*sort.Interface": 1,
                "*strings.Reader": 1,
                "*sync.WaitGroup": 1,
                "*sync.poolLocal": 1,
                "*syntax.EmptyOp": 1,
                "*syscall.IPMreq": 1,
                "*syscall.Linger": 1,
                "*syscall.Msghdr": 1,
                "*syscall.Rusage": 1,
                "*syscall.Signal": 1,
                "*syscall.Stat_t": 1,
                "*syscall._C_int": 1,
                "*time.zoneTrans": 1,
                "*token._keyword": 1,
                "*unsafe.Pointer": 1,
                "DebuggerEnabled": 1,
                "DeclarationList": 1,
                "FieldByNameFunc": 1,
                "FindAllSubmatch": 1,
                "FindReaderIndex": 1,
                "FindStringIndex": 1,
                "LeftParenthesis": 1,
                "MakeCustomError": 1,
                "MakeSyntaxError": 1,
                "MatchEmptyWidth": 1,
                "NumberPrototype": 1,
                "ObjectPrototype": 1,
                "OverflowComplex": 1,
                "PostProcessNode": 1,
                "RegExpPrototype": 1,
                "SetRandomSource": 1,
                "SetReadDeadline": 1,
                "ShortestDecimal": 1,
                "StringPrototype": 1,
                "UnmarshalBinary": 1,
                "_expressionNode": 1,
                "addErrorContext": 1,
                "addLostAtomic64": 1,
                "allocSpanLocked": 1,
                "codegenEncoding": 1,
                "declarationList": 1,
                "decodeInterface": 1,
                "encodeInterface": 1,
                "errorUnexpected": 1,
                "exportedMethods": 1,
                "formatWithStack": 1,
                "gc_cpu_fraction": 1,
                "generateCodegen": 1,
                "getDecEnginePtr": 1,
                "ignoreInterface": 1,
                "initialHeapLive": 1,
                "insertSemicolon": 1,
                "isBooleanObject": 1,
                "literalEncoding": 1,
                "local_largefree": 1,
                "lookupFirstZone": 1,
                "markBitsForBase": 1,
                "newDecoderState": 1,
                "newEncoderState": 1,
                "newNodeFunction": 1,
                "newNumberObject": 1,
                "newRegExpObject": 1,
                "newStringObject": 1,
                "objectInterface": 1,
                "pagesSweptBasis": 1,
                "panicRangeError": 1,
                "parseExpression": 1,
                "parseIdentifier": 1,
                "parseNamedClass": 1,
                "parseRightParen": 1,
                "persistentAlloc": 1,
                "prepareForSweep": 1,
                "recoveryHandler": 1,
                "scavengeLargest": 1,
                "setReadDeadline": 1,
                "stackWorkBufHdr": 1,
                "swapVerticalBar": 1,
                "thisClassObject": 1,
                "typeErrorResult": 1,
                "unexpungeLocked": 1,
                "unmarshalBinary": 1,
                "internal/fmtsort": 1,
                "internal/testlog": 1,
                "**ast.Identifier": 1,
                "**registry.Entry": 1,
                "**runtime._defer": 1,
                "**signal.handler": 1,
                "*[0]interface {}": 1,
                "*[129]*runtime.g": 1,
                "*[1]interface {}": 1,
                "*[2]interface {}": 1,
                "*[3]interface {}": 1,
                "*[4]interface {}": 1,
                "*[6]interface {}": 1,
                "*[8]interface {}": 1,
                "*[8]reflect.Kind": 1,
                "*[8]reflect.Type": 1,
                "*[]*gob.typeInfo": 1,
                "*[]*gob.wireType": 1,
                "*[]*otto._object": 1,
                "*[]*runtime.bmap": 1,
                "*[]*runtime.itab": 1,
                "*[]ast.Statement": 1,
                "*[]gob.decHelper": 1,
                "*[]gob.encHelper": 1,
                "*[]reflect.Value": 1,
                "*[]runtime.Frame": 1,
                "*[]runtime.scase": 1,
                "*[]syscall.Iovec": 1,
                "*ast.Declaration": 1,
                "*ast.IfStatement": 1,
                "*ast.NullLiteral": 1,
                "*base64.Encoding": 1,
                "*dbg.DbgFunction": 1,
                "*dbg._emitLogger": 1,
                "*dbg._emitWriter": 1,
                "*flate.byLiteral": 1,
                "*flate.levelInfo": 1,
                "*func() []string": 1,
                "*func() file.Idx": 1,
                "*func(*dbg.Dbgr)": 1,
                "*func(int) []int": 1,
                "*func(int) error": 1,
                "*func(int) int32": 1,
                "*func(int32) int": 1,
                "*func(io.Reader)": 1,
                "*func(io.Writer)": 1,
                "*func(time.Time)": 1,
                "*gob.emptyStruct": 1,
                "*io.StringWriter": 1,
                "*json.mapEncoder": 1,
                "*json.ptrEncoder": 1,
                "*json.tagOptions": 1,
                "*map[string]bool": 1,
                "*os.ProcessState": 1,
                "*os.SyscallError": 1,
                "*otto._exception": 1,
                "*otto._reference": 1,
                "*otto._valueKind": 1,
                "*reflect.ChanDir": 1,
                "*reflect.MapIter": 1,
                "*reflect.imethod": 1,
                "*reflect.nameOff": 1,
                "*reflect.ptrType": 1,
                "*reflect.textOff": 1,
                "*reflect.typeAlg": 1,
                "*reflect.typeOff": 1,
                "*regexp.bitState": 1,
                "*regexp.lazyFlag": 1,
                "*runtime.elfEhdr": 1,
                "*runtime.evacDst": 1,
                "*runtime.funcinl": 1,
                "*runtime.functab": 1,
                "*runtime.funcval": 1,
                "*runtime.imethod": 1,
                "*runtime.lfstack": 1,
                "*runtime.libcall": 1,
                "*runtime.maptype": 1,
                "*runtime.nameOff": 1,
                "*runtime.profBuf": 1,
                "*runtime.ptrtype": 1,
                "*runtime.rwmutex": 1,
                "*runtime.sigTabT": 1,
                "*runtime.sigctxt": 1,
                "*runtime.siginfo": 1,
                "*runtime.special": 1,
                "*runtime.textOff": 1,
                "*runtime.timeval": 1,
                "*runtime.typeAlg": 1,
                "*runtime.typeOff": 1,
                "*runtime.workbuf": 1,
                "*signal.stopping": 1,
                "*strconv.decimal": 1,
                "*strings.Builder": 1,
                "*syntax.compiler": 1,
                "*syscall.IPMreqn": 1,
                "*syscall.RawConn": 1,
                "*syscall.Timeval": 1,
                "*syscall.mmapper": 1,
                "*time.ParseError": 1,
                "*unicode.Range16": 1,
                "*unicode.Range32": 1,
                "*url.EscapeError": 1,
                "BinaryMarshalerT": 1,
                "BooleanPrototype": 1,
                "DeclareNamespace": 1,
                "ReplaceAllString": 1,
                "ResolveReference": 1,
                "RightParenthesis": 1,
                "SetWriteDeadline": 1,
                "SetsockoptIPMreq": 1,
                "SetsockoptLinger": 1,
                "_declarationNode": 1,
                "decodeGobDecoder": 1,
                "encodeGobEncoder": 1,
                "enterGlobalScope": 1,
                "evaluateMultiply": 1,
                "freeDecoderState": 1,
                "freeEncoderState": 1,
                "gcMarkWorkerMode": 1,
                "gcshrinkstackoff": 1,
                "ignoreGobDecoder": 1,
                "isDataDescriptor": 1,
                "last_gc_nanotime": 1,
                "literalInterface": 1,
                "local_nlargefree": 1,
                "local_nsmallfree": 1,
                "local_tinyallocs": 1,
                "markBitsForIndex": 1,
                "markWorkerLabels": 1,
                "mustBeAssignable": 1,
                "nFlushCacheRoots": 1,
                "newBooleanObject": 1,
                "newBoundFunction": 1,
                "newFunctionStash": 1,
                "newGoArrayObject": 1,
                "newGoSliceObject": 1,
                "panicSyntaxError": 1,
                "parseIfStatement": 1,
                "parseVerticalBar": 1,
                "refillAllocCache": 1,
                "replacerFunction": 1,
                "setWriteDeadline": 1,
                "tryCatchEvaluate": 1,
                "tryExpungeLocked": 1,
                "tryGrowByReslice": 2,
                "writeFixedHeader": 1,
                "**[]syscall.Iovec": 1,
                "**runtime.funcval": 1,
                "**runtime.special": 1,
                "*[1]*otto._object": 1,
                "*[1]reflect.Value": 1,
                "*[2]runtime.Frame": 1,
                "*[8]*gob.typeInfo": 1,
                "*[8]*gob.wireType": 1,
                "*[8]*otto._object": 1,
                "*[8]gob.decHelper": 1,
                "*[8]gob.encHelper": 1,
                "*[]*gob.fieldType": 1,
                "*[]*otto._fnStash": 1,
                "*[]*reflect.rtype": 1,
                "*[]*regexp.thread": 1,
                "*[]*runtime._type": 1,
                "*[]*runtime.mspan": 1,
                "*[]*runtime.sudog": 1,
                "*[]*runtime.timer": 1,
                "*[]*syntax.Regexp": 1,
                "*[][]*ast.Comment": 1,
                "*[]ast.Expression": 1,
                "*[]func() []uint8": 1,
                "*[]otto._property": 1,
                "*[]reflect.method": 1,
                "*[]runtime.dbgVar": 1,
                "*[]runtime.elfSym": 1,
                "*[]runtime.gcBits": 1,
                "*[]time.zoneTrans": 1,
                "*[]token._keyword": 1,
                "*[]unsafe.Pointer": 1,
                "*aes.KeySizeError": 1,
                "*aes.aesCipherAsm": 1,
                "*aes.aesCipherGCM": 1,
                "*ast.ArrayLiteral": 1,
                "*ast.BadStatement": 1,
                "*ast.ForStatement": 1,
                "*ast.TryStatement": 1,
                "*chan<- os.Signal": 1,
                "*cpu.CacheLinePad": 1,
                "*engine.NativeVar": 1,
                "*func() io.Writer": 1,
                "*func() time.Time": 1,
                "*func(*otto.Otto)": 1,
                "*func(*runtime.g)": 1,
                "*func(*runtime.p)": 1,
                "*func(complex128)": 1,
                "*func(gob.typeId)": 1,
                "*func(int32) bool": 1,
                "*func(int64) bool": 1,
                "*func(string) int": 1,
                "*gob.decoderState": 1,
                "*gob.encoderState": 1,
                "*gob.userTypeInfo": 1,
                "*io.LimitedReader": 1,
                "*json.SyntaxError": 1,
                "*json.Unmarshaler": 1,
                "*json.decodeState": 1,
                "*json.encodeState": 1,
                "*json.encoderFunc": 1,
                "*map[string]int64": 1,
                "*otto._dateObject": 1,
                "*otto._numberKind": 1,
                "*otto._resultKind": 1,
                "*otto._stringWide": 1,
                "*parser.ErrorList": 1,
                "*reflect.cacheKey": 1,
                "*reflect.funcType": 1,
                "*regexp.runeSlice": 1,
                "*runtime.arenaIdx": 1,
                "*runtime.chantype": 1,
                "*runtime.divMagic": 1,
                "*runtime.finblock": 1,
                "*runtime.fixalloc": 1,
                "*runtime.funcInfo": 1,
                "*runtime.guintptr": 1,
                "*runtime.heapBits": 1,
                "*runtime.mapextra": 1,
                "*runtime.markBits": 1,
                "*runtime.mcentral": 1,
                "*runtime.muintptr": 1,
                "*runtime.parkInfo": 1,
                "*runtime.pollDesc": 1,
                "*runtime.puintptr": 1,
                "*runtime.semaRoot": 1,
                "*runtime.stackmap": 1,
                "*runtime.stkframe": 1,
                "*runtime.stringer": 1,
                "*runtime.textsect": 1,
                "*runtime.timespec": 1,
                "*runtime.traceBuf": 1,
                "*runtime.vdsoInfo": 1,
                "*sort.StringSlice": 1,
                "*strconv.NumError": 1,
                "*strconv.extFloat": 1,
                "*strings.asciiSet": 1,
                "*syntax.ErrorCode": 1,
                "*syntax.charGroup": 1,
                "*syntax.patchList": 1,
                "*syscall.IPv6Mreq": 1,
                "*syscall.Sockaddr": 1,
                "*syscall.Timespec": 1,
                "*syscall._Socklen": 1,
                "*unicode.foldPair": 1,
                "*utf8.acceptRange": 1,
                "json:\"file\"": 1,
                "FindSubmatchIndex": 1,
                "FunctionPrototype": 1,
                "ReplaceAllLiteral": 1,
                "SetsockoptIPMreqn": 1,
                "URIErrorPrototype": 1,
                "allocBitsForIndex": 1,
                "assistWorkPerByte": 1,
                "cmpl_parseOrThrow": 1,
                "decodeArrayHelper": 1,
                "dedicatedMarkTime": 1,
                "defineOwnProperty": 1,
                "forwardOrBoundary": 1,
                "ignoreArrayHelper": 1,
                "implicitSemicolon": 1,
                "incrementOverflow": 1,
                "initCheckmarkSpan": 1,
                "newGoStructObject": 1,
                "newNativeFunction": 1,
                "newReferenceError": 1,
                "optionalSemicolon": 1,
                "parseArgumentList": 1,
                "parseArrayLiteral": 1,
                "parseTryStatement": 1,
                "parseUnicodeClass": 1,
                "poolLocalInternal": 1,
                "regularExpression": 1,
                "stackObjectBufHdr": 1,
                "sweepPagesPerByte": 1,
                "writeBlockDynamic": 1,
                "writeStoredHeader": 1,
                "**engine.NativeVar": 1,
                "**gob.encoderState": 1,
                "*[1]*syntax.Regexp": 1,
                "*[1]ast.Expression": 1,
                "*[1]time.zoneTrans": 1,
                "*[1]unsafe.Pointer": 1,
                "*[4]*reflect.rtype": 1,
                "*[8]*otto._fnStash": 1,
                "*[8]*reflect.rtype": 1,
                "*[8]*runtime._type": 1,
                "*[8][]*ast.Comment": 1,
                "*[8]func() []uint8": 1,
                "*[8]otto._property": 1,
                "*[8]token._keyword": 1,
                "*[8]unsafe.Pointer": 1,
                "*[]**gob.decEngine": 1,
                "*[]*ast.Identifier": 1,
                "*[]*otto._dclStash": 1,
                "*[]*registry.Entry": 1,
                "*[]*runtime._defer": 1,
                "*[]*runtime.bucket": 1,
                "*[]*signal.handler": 1,
                "*[]ast.Declaration": 1,
                "*[]flate.levelInfo": 1,
                "*[]reflect.imethod": 1,
                "*[]runtime.evacDst": 1,
                "*[]runtime.functab": 1,
                "*[]runtime.imethod": 1,
                "*[]runtime.sigTabT": 1,
                "*[]runtime.typeAlg": 1,
                "*[]runtime.typeOff": 1,
                "*[]signal.stopping": 1,
                "*[]unicode.Range16": 1,
                "*[]unicode.Range32": 1,
                "*ast.BadExpression": 1,
                "*ast.CaseStatement": 1,
                "*ast.DotExpression": 1,
                "*ast.NewExpression": 1,
                "*ast.NumberLiteral": 1,
                "*ast.ObjectLiteral": 1,
                "*ast.ParameterList": 1,
                "*ast.RegExpLiteral": 1,
                "*ast.StringLiteral": 1,
                "*ast.WithStatement": 1,
                "*base64vlq.Decoder": 1,
                "*engine.NativeFunc": 1,
                "*engine.NativeType": 1,
                "*flate.dictDecoder": 1,
                "*flate.literalNode": 1,
                "*fmtsort.SortedMap": 1,
                "*func() (int, int)": 1,
                "*func() *otto.Otto": 1,
                "*func() [2]uintptr": 1,
                "*func() [][]string": 1,
                "*func() complex128": 1,
                "*func() gob.typeId": 1,
                "*func() otto.Value": 1,
                "*func() time.Month": 1,
                "*func() url.Values": 1,
                "*func(int) []uint8": 1,
                "*func(int32) int32": 1,
                "*func(int64) error": 1,
                "*func(int64) int64": 1,
                "*func(string) bool": 1,
                "*func(uint64) bool": 1,
                "*func(uint8) error": 1,
                "*json.arrayEncoder": 1,
                "*json.floatEncoder": 1,
                "*json.sliceEncoder": 1,
                "*map[string]string": 1,
                "*map[string]uint64": 1,
                "*otto.FunctionCall": 1,
                "*otto._dclProperty": 1,
                "*otto._goMapObject": 1,
                "*otto._nodeLiteral": 1,
                "*otto._nodeProgram": 1,
                "*otto._objectClass": 1,
                "*otto._objectStash": 1,
                "*otto._stringASCII": 1,
                "*poll.TimeoutError": 1,
                "*rand.lockedSource": 1,
                "*reflect.StructTag": 1,
                "*reflect.bitVector": 1,
                "*reflect.fieldScan": 1,
                "*reflect.layoutKey": 1,
                "*reflect.sliceType": 1,
                "*regexp.inputBytes": 1,
                "*runtime._typePair": 1,
                "*runtime.arenaHint": 1,
                "*runtime.bitvector": 1,
                "*runtime.elfVerdef": 1,
                "*runtime.finalizer": 1,
                "*runtime.gcTrigger": 1,
                "*runtime.gclinkptr": 1,
                "*runtime.heapArena": 1,
                "*runtime.itimerval": 1,
                "*runtime.mSpanList": 1,
                "*runtime.memRecord": 1,
                "*runtime.notInHeap": 1,
                "*runtime.pollCache": 1,
                "*runtime.profIndex": 1,
                "*runtime.ptabEntry": 1,
                "*runtime.spanClass": 1,
                "*runtime.sweepdata": 1,
                "*runtime.treapIter": 1,
                "*runtime.treapNode": 1,
                "*sourcemap.mapping": 1,
                "*strconv.floatInfo": 1,
                "*strconv.leftCheat": 1,
                "*struct { r1 int }": 1,
                "*struct { r2 int }": 1,
                "*struct { r3 int }": 1,
                "*struct { r4 int }": 1,
                "*struct { r5 int }": 1,
                "*struct { r6 int }": 1,
                "*struct { r7 int }": 1,
                "*testlog.Interface": 1,
                "*unicode.CaseRange": 1,
                "EvalErrorPrototype": 1,
                "FindAllStringIndex": 1,
                "FindStringSubmatch": 1,
                "SetDebuggerHandler": 1,
                "SetStackDepthLimit": 1,
                "SetStackTraceLimit": 1,
                "SetsockoptIPv6Mreq": 1,
                "TypeErrorPrototype": 1,
                "assistBytesPerWork": 1,
                "blockUntilWaitable": 1,
                "canWriteTwoRecords": 1,
                "clearCheckmarkSpan": 1,
                "decodeIgnoredValue": 1,
                "decodeTypeSequence": 1,
                "enterFunctionScope": 1,
                "fractionalMarkTime": 1,
                "getIgnoreEnginePtr": 1,
                "haveTemplateThread": 1,
                "newArgumentsObject": 1,
                "newPrimitiveObject": 1,
                "parseBracketMember": 1,
                "parseCaseStatement": 1,
                "parseFunctionBlock": 1,
                "parseNewExpression": 1,
                "parseObjectLiteral": 1,
                "parseParameterList": 1,
                "parseRegExpLiteral": 1,
                "parseSourceElement": 1,
                "parseStatementList": 1,
                "parseWithStatement": 1,
                "scanNumericLiteral": 1,
                "sendTypeDescriptor": 1,
                "setMarkedNonAtomic": 1,
                "skipLineWhiteSpace": 1,
                "sweepHeapLiveBasis": 1,
                "tracebackancestors": 1,
                "writeDynamicHeader": 1,
                "**ast.CaseStatement": 1,
                "**engine.NativeFunc": 1,
                "**engine.NativeType": 1,
                "**otto._objectClass": 1,
                "**runtime.heapArena": 1,
                "**runtime.notInHeap": 1,
                "**runtime.treapNode": 1,
                "*[0]unicode.Range16": 1,
                "*[16]*reflect.rtype": 1,
                "*[16]runtime.dbgVar": 1,
                "*[1]unicode.Range16": 1,
                "*[1]unicode.Range32": 1,
                "*[2]runtime.evacDst": 1,
                "*[2]unicode.Range16": 1,
                "*[2]unicode.Range32": 1,
                "*[32]*reflect.rtype": 1,
                "*[3]unicode.Range16": 1,
                "*[3]unicode.Range32": 1,
                "*[41]token._keyword": 1,
                "*[4]unicode.Range16": 1,
                "*[4]unicode.Range32": 1,
                "*[512]*runtime.itab": 1,
                "*[5]*runtime._defer": 1,
                "*[5]unicode.Range16": 1,
                "*[5]unicode.Range32": 1,
                "*[64]*reflect.rtype": 1,
                "*[6]unicode.Range16": 1,
                "*[6]unicode.Range32": 1,
                "*[7]unicode.Range16": 1,
                "*[7]unicode.Range32": 1,
                "*[8]**gob.decEngine": 1,
                "*[8]*otto._dclStash": 1,
                "*[8]*signal.handler": 1,
                "*[8]runtime.typeOff": 1,
                "*[8]unicode.Range16": 1,
                "*[8]unicode.Range32": 1,
                "*[9]unicode.Range16": 1,
                "*[9]unicode.Range32": 1,
                "*[][]*runtime._type": 1,
                "*[]chan<- os.Signal": 1,
                "*[]runtime.arenaIdx": 1,
                "*[]runtime.divMagic": 1,
                "*[]runtime.guintptr": 1,
                "*[]runtime.textsect": 1,
                "*[]strconv.extFloat": 1,
                "*[]syntax.charGroup": 1,
                "*[]unicode.foldPair": 1,
                "*[]utf8.acceptRange": 1,
                "*ast.BlockStatement": 1,
                "*ast.BooleanLiteral": 1,
                "*ast.CallExpression": 1,
                "*ast.CatchStatement": 1,
                "*ast.EmptyStatement": 1,
                "*ast.ForInStatement": 1,
                "*ast.ThisExpression": 1,
                "*ast.ThrowStatement": 1,
                "*ast.WhileStatement": 1,
                "*engine.NativeConst": 1,
                "*engine.NativeField": 1,
                "*errors.errorString": 1,
                "*flate.decompressor": 1,
                "*func() (int, bool)": 1,
                "*func() os.FileMode": 1,
                "*func() otto._stash": 1,
                "*func() sync.Locker": 1,
                "*func(*ast.Comment)": 1,
                "*func([]uint8) bool": 1,
                "*func(float64) bool": 1,
                "*func(interface {})": 1,
                "*func(string) []int": 1,
                "*func(uint32) error": 1,
                "*func(uintptr) bool": 1,
                "*gob.gobEncoderType": 1,
                "*json.structEncoder": 1,
                "*json.unquotedValue": 1,
                "*map[*uint8][]uint8": 1,
                "*otto._nodeProperty": 1,
                "*otto._propertyMode": 1,
                "*otto._regExpObject": 1,
                "*otto._stringObject": 1,
                "*reflect.ValueError": 1,
                "*reflect.layoutType": 1,
                "*reflect.structType": 1,
                "*regexp.inputReader": 1,
                "*regexp.inputString": 1,
                "*regexp.onePassInst": 1,
                "*regexp.onePassProg": 1,
                "*runtime.adjustinfo": 1,
                "*runtime.bucketType": 1,
                "*runtime.cgoCallers": 1,
                "*runtime.cpuProfile": 1,
                "*runtime.epollevent": 1,
                "*runtime.gcSweepBuf": 1,
                "*runtime.mSpanState": 1,
                "*runtime.moduledata": 1,
                "*runtime.modulehash": 1,
                "*runtime.plainError": 1,
                "*runtime.profAtomic": 1,
                "*runtime.randomEnum": 1,
                "*runtime.sigactiont": 1,
                "*runtime.sysmontick": 1,
                "*runtime.traceAlloc": 1,
                "*runtime.traceStack": 1,
                "*runtime.waitReason": 1,
                "*runtime.workbufhdr": 1,
                "*sourcemap.Consumer": 1,
                "*sourcemap.mappings": 1,
                "*syscall.Credential": 1,
                "*syscall.WaitStatus": 1,
                "*time.fileSizeError": 1,
                "*unicode.RangeTable": 1,
                "AssignComputeBounds": 1,
                "ImportNativePackage": 1,
                "json:\"names\"": 1,
                "RangeErrorPrototype": 1,
                "SetsockoptInet4Addr": 1,
                "calculateComparison": 1,
                "compileIgnoreSingle": 1,
                "indexOfArgumentName": 1,
                "isGenericDescriptor": 1,
                "newDeclarationStash": 1,
                "panicReferenceError": 1,
                "parseBlockStatement": 1,
                "parseBreakStatement": 1,
                "parseCallExpression": 1,
                "parseEmptyStatement": 1,
                "parseObjectProperty": 1,
                "parseSourceElements": 1,
                "parseThrowStatement": 1,
                "parseWhileStatement": 1,
                "removeLeadingRegexp": 1,
                "removeLeadingString": 1,
                "specialprofilealloc": 1,
                "runtime/internal/sys": 1,
                "**engine.NativeConst": 1,
                "**regexp.onePassProg": 1,
                "**runtime.moduledata": 1,
                "*[10]unicode.Range16": 1,
                "*[11]unicode.Range16": 1,
                "*[128]*reflect.rtype": 1,
                "*[128]*runtime.sudog": 1,
                "*[12]unicode.Range16": 1,
                "*[134]*runtime.mspan": 1,
                "*[13]unicode.Range16": 1,
                "*[13]unicode.Range32": 1,
                "*[14]runtime.typeAlg": 1,
                "*[14]unicode.Range16": 1,
                "*[15]unicode.Range16": 1,
                "*[15]unicode.Range32": 1,
                "*[16]flate.levelInfo": 1,
                "*[16]unicode.Range16": 1,
                "*[16]unicode.Range32": 1,
                "*[18]unicode.Range16": 1,
                "*[18]unicode.Range32": 1,
                "*[20]unicode.Range16": 1,
                "*[21]unicode.Range16": 1,
                "*[22]unicode.Range16": 1,
                "*[23]unicode.Range16": 1,
                "*[24]unicode.Range32": 1,
                "*[25]unicode.Range16": 1,
                "*[28]unicode.Range16": 1,
                "*[31]unicode.Range16": 1,
                "*[31]unicode.Range32": 1,
                "*[32]*runtime._defer": 1,
                "*[32]unicode.Range16": 1,
                "*[33]unicode.Range16": 1,
                "*[33]unicode.Range32": 1,
                "*[34]unicode.Range32": 1,
                "*[35]unicode.Range32": 1,
                "*[36]unicode.Range32": 1,
                "*[37]unicode.Range16": 1,
                "*[38]unicode.Range32": 1,
                "*[39]unicode.Range32": 1,
                "*[40]unicode.Range16": 1,
                "*[43]unicode.Range16": 1,
                "*[43]unicode.Range32": 1,
                "*[44]unicode.Range16": 1,
                "*[48]unicode.Range32": 1,
                "*[58]unicode.Range32": 1,
                "*[59]unicode.Range32": 1,
                "*[5]utf8.acceptRange": 1,
                "*[62]unicode.Range32": 1,
                "*[63]unicode.Range16": 1,
                "*[64]unicode.Range32": 1,
                "*[65]runtime.sigTabT": 1,
                "*[66]unicode.Range16": 1,
                "*[70]unicode.Range16": 1,
                "*[72]unicode.Range32": 1,
                "*[77]unicode.Range32": 1,
                "*[8][]*runtime._type": 1,
                "*[8]chan<- os.Signal": 1,
                "*[8]strconv.extFloat": 1,
                "*[8]syntax.charGroup": 1,
                "*[91]unicode.Range32": 1,
                "*[92]unicode.Range16": 1,
                "*[97]unicode.Range16": 1,
                "*[]*engine.NativeVar": 1,
                "*[][]*runtime._defer": 1,
                "*[]flate.literalNode": 1,
                "*[]otto._dclProperty": 1,
                "*[]reflect.fieldScan": 1,
                "*[]runtime._typePair": 1,
                "*[]runtime.finalizer": 1,
                "*[]runtime.mSpanList": 1,
                "*[]runtime.ptabEntry": 1,
                "*[]sourcemap.mapping": 1,
                "*[]strconv.leftCheat": 1,
                "*[]unicode.CaseRange": 1,
                "*ast.BranchStatement": 1,
                "*ast.CommentPosition": 1,
                "*ast.EmptyExpression": 1,
                "*ast.FunctionLiteral": 1,
                "*ast.ReturnStatement": 1,
                "*ast.SwitchStatement": 1,
                "*ast.UnaryExpression": 1,
                "*cipher.StreamReader": 1,
                "*crc32.slicing8Table": 1,
                "*flate.InternalError": 1,
                "*func() (int, error)": 1,
                "*func() *otto.Object": 1,
                "*func() interface {}": 1,
                "*func() otto.Context": 1,
                "*func() reflect.Kind": 1,
                "*func() reflect.Type": 1,
                "*func() time.Weekday": 1,
                "*func(*runtime.itab)": 1,
                "*func([]uint8) []int": 1,
                "*func([]uint8) error": 1,
                "*func(int, int) bool": 1,
                "*func(reflect.Value)": 1,
                "*func(string) string": 1,
                "*func(uintptr) uint8": 1,
                "*json.MarshalerError": 1,
                "*main.LNXYSCEEWLYHMX": 1,
                "*map.hdr[string]bool": 1,
                "*map[gob.typeId]bool": 1,
                "*otto._goArrayObject": 1,
                "*otto._goSliceObject": 1,
                "*otto._nodeStatement": 1,
                "*reflect.StructField": 1,
                "*reflect.methodValue": 1,
                "*reflect.sliceHeader": 1,
                "*reflect.structField": 1,
                "*regexp.queueOnePass": 1,
                "*runtime.blockRecord": 1,
                "*runtime.errorString": 1,
                "*runtime.gcBitsArena": 1,
                "*runtime.linearAlloc": 1,
                "*runtime.randomOrder": 1,
                "*runtime.stackObject": 1,
                "*runtime.structfield": 1,
                "*runtime.traceBufPtr": 1,
                "*sourcemap.sourceMap": 1,
                "*syscall.RawSockaddr": 1,
                "*syscall.SysProcAttr": 1,
                "CompileWithSourceMap": 1,
                "FindAllSubmatchIndex": 1,
                "ReplaceAllStringFunc": 1,
                "SyntaxErrorPrototype": 1,
                "convertCallParameter": 1,
                "errorUnexpectedToken": 1,
                "findRunnableGCWorker": 1,
                "gcFractionalMarkTime": 1,
                "indexOfParameterName": 1,
                "isAccessorDescriptor": 1,
                "parsePerlClassEscape": 1,
                "parseReturnStatement": 1,
                "parseShiftExpression": 1,
                "parseSwitchStatement": 1,
                "parseUnaryExpression": 1,
                "readMultiLineComment": 1,
                "retrieveAssetAsBytes": 1,
                "skipMultiLineComment": 1,
                "gopkg.in/sourcemap.v1": 1,
                "*[0]reflect.fieldScan": 1,
                "*[100]unicode.Range16": 1,
                "*[102]unicode.Range16": 1,
                "*[103]unicode.Range16": 1,
                "*[109]unicode.Range16": 1,
                "*[112]unicode.Range16": 1,
                "*[117]unicode.Range16": 1,
                "*[123]unicode.Range16": 1,
                "*[126]unicode.Range16": 1,
                "*[147]unicode.Range16": 1,
                "*[150]unicode.Range32": 1,
                "*[176]unicode.Range16": 1,
                "*[178]unicode.Range16": 1,
                "*[189]unicode.Range32": 1,
                "*[1]reflect.fieldScan": 1,
                "*[282]unicode.Range16": 1,
                "*[359]unicode.Range16": 1,
                "*[4]runtime.mSpanList": 1,
                "*[5][]*runtime._defer": 1,
                "*[67]runtime.divMagic": 1,
                "*[8192]*runtime.mspan": 1,
                "*[87]strconv.extFloat": 1,
                "*[88]unicode.foldPair": 1,
                "*[8]*engine.NativeVar": 1,
                "*[8]otto._dclProperty": 1,
                "*[8]runtime._typePair": 1,
                "*[]*ast.CaseStatement": 1,
                "*[]*engine.NativeFunc": 1,
                "*[]*engine.NativeType": 1,
                "*[]*otto._objectStash": 1,
                "*[]*runtime.heapArena": 1,
                "*[]otto._nodeProperty": 1,
                "*[]regexp.onePassInst": 1,
                "*[]runtime.epollevent": 1,
                "*[]runtime.gcSweepBuf": 1,
                "*[]runtime.modulehash": 1,
                "*ast.AssignExpression": 1,
                "*ast.BinaryExpression": 1,
                "*ast.DoWhileStatement": 1,
                "*engine.NativePackage": 1,
                "*flate.huffmanDecoder": 1,
                "*flate.huffmanEncoder": 1,
                "*func() (bool, error)": 1,
                "*func() (string, int)": 1,
                "*func() reflect.Value": 1,
                "*func() time.Duration": 1,
                "*func(*os.file) error": 1,
                "*func([]uint8) string": 1,
                "*func(ast.Expression)": 1,
                "*func(func() float64)": 1,
                "*func(int) otto.Value": 1,
                "*func(int, int) error": 1,
                "*func(registry.Entry)": 1,
                "*func(string, string)": 1,
                "*func(time.Time) bool": 1,
                "*func(unsafe.Pointer)": 1,
                "*hex.InvalidByteError": 1,
                "*json.condAddrEncoder": 1,
                "*map[reflect.Type]int": 1,
                "*otto._goStructObject": 1,
                "*otto._lessThanResult": 1,
                "*otto._nativeFunction": 1,
                "*otto._nodeExpression": 1,
                "*otto._nodeIdentifier": 1,
                "*otto._propertyGetSet": 1,
                "*otto._stashReference": 1,
                "*reflect.makeFuncImpl": 1,
                "*reflect.stringHeader": 1,
                "*reflect.uncommonType": 1,
                "*runtime.ancestorInfo": 1,
                "*runtime.forcegcstate": 1,
                "*runtime.gcDrainFlags": 1,
                "*runtime.gsignalStack": 1,
                "*runtime.pcvalueCache": 1,
                "*runtime.stackWorkBuf": 1,
                "*runtime.stringStruct": 1,
                "*runtime.timersBucket": 1,
                "*runtime.uncommontype": 1,
                "*strconv.decimalSlice": 1,
                "*syscall.SockaddrUnix": 1,
                "*syscall.SysProcIDMap": 1,
                "*url.InvalidHostError": 1,
                "FindAllStringSubmatch": 1,
                "ImportStandardLibrary": 1,
                "LoadScriptWithTimeout": 1,
                "assignEncodingAndSize": 1,
                "disallowUnknownFields": 1,
                "evaluateBreakContinue": 1,
                "gcMarkWorkerStartTime": 1,
                "newNodeFunctionObject": 1,
                "parseDoWhileStatement": 1,
                "readSingleLineComment": 1,
                "retrieveAssetAsString": 1,
                "skipSingleLineComment": 1,
                "specialfinalizeralloc": 1,
                "*[256]runtime.guintptr": 1,
                "*[2]runtime.gcSweepBuf": 1,
                "*[35]runtime.mSpanList": 1,
                "*[61]strconv.leftCheat": 1,
                "*[65520]runtime.gcBits": 1,
                "*[8]*engine.NativeFunc": 1,
                "*[8]*engine.NativeType": 1,
                "*[8]*otto._objectStash": 1,
                "*[]*engine.NativeConst": 1,
                "*[]*engine.NativeField": 1,
                "*[]*reflect.structType": 1,
                "*[]*runtime.moduledata": 1,
                "*[]*unicode.RangeTable": 1,
                "*[][32]*runtime._defer": 1,
                "*[]otto._nodeStatement": 1,
                "*[]reflect.structField": 1,
                "*[]runtime.stackObject": 1,
                "*ast.BracketExpression": 1,
                "*ast.DebuggerStatement": 1,
                "*ast.FunctionStatement": 1,
                "*ast.LabelledStatement": 1,
                "*ast.VariableStatement": 1,
                "*func() (int64, error)": 1,
                "*func() (int64, int64)": 1,
                "*func() (string, bool)": 1,
                "*func() (uint8, error)": 1,
                "*func() *otto._runtime": 1,
                "*func() *reflect.rtype": 1,
                "*func() *regexp.Regexp": 1,
                "*func() *syntax.Regexp": 1,
                "*func() *time.Location": 1,
                "*func() []*ast.Comment": 1,
                "*func() syntax.EmptyOp": 1,
                "*func() syscall.Signal": 1,
                "*func(...interface {})": 1,
                "*func([]uint8) []uint8": 1,
                "*func(complex128) bool": 1,
                "*func(io.Reader) error": 1,
                "*func(os.Signal) error": 1,
                "*func(string) []string": 1,
                "*func(time.Time) error": 1,
                "*map.bucket[string]int": 1,
                "*map.hdr[string]string": 1,
                "*map[reflect.Type]bool": 1,
                "*map[string]otto.Value": 1,
                "*otto._argumentsObject": 1,
                "*otto._nodeDeclaration": 1,
                "*otto._nodeIfStatement": 1,
                "*parser._RegExp_parser": 1,
                "*reflect.interfaceType": 1,
                "*regexp.onePassMachine": 1,
                "*runtime.gcTriggerKind": 1,
                "*runtime.interfacetype": 1,
                "*runtime.itabTableType": 1,
                "*runtime.stackfreelist": 1,
                "*runtime.traceStackPtr": 1,
                "*runtime.vdsoSymbolKey": 1,
                "*syscall.SockaddrInet4": 1,
                "*syscall.SockaddrInet6": 1,
                "addCountsAndClearFlags": 1,
                "cmpl_call_nodeFunction": 1,
                "fromPropertyDescriptor": 1,
                "newBoundFunctionObject": 1,
                "parseContinueStatement": 1,
                "parseDebuggerStatement": 1,
                "parseFunctionStatement": 1,
                "parseObjectPropertyKey": 1,
                "parsePostfixExpression": 1,
                "parsePrimaryExpression": 1,
                "parseVariableStatement": 1,
                "vmRetrieveAssetAsBytes": 1,
                "*[100000]unsafe.Pointer": 1,
                "*[101]runtime.finalizer": 1,
                "*[304]unicode.CaseRange": 1,
                "*[5]*unicode.RangeTable": 1,
                "*[5][32]*runtime._defer": 1,
                "*[8]*engine.NativeConst": 1,
                "*[8]*engine.NativeField": 1,
                "*[8]*reflect.structType": 1,
                "*[8]*unicode.RangeTable": 1,
                "*[]otto._lessThanResult": 1,
                "*[]otto._nodeExpression": 1,
                "*[]runtime.ancestorInfo": 1,
                "*[]syscall.SysProcIDMap": 1,
                "*ast.SequenceExpression": 1,
                "*ast.VariableExpression": 1,
                "*encoding.TextMarshaler": 1,
                "*flate.huffmanBitWriter": 1,
                "*func() (int, int, int)": 1,
                "*func() (string, error)": 1,
                "*func() []reflect.Value": 1,
                "*func() reflect.ChanDir": 1,
                "*func([]uint8, []uint8)": 1,
                "*func(fmt.State, int32)": 1,
                "*func(func(*otto.Otto))": 1,
                "*func(int) (int, error)": 1,
                "*func(int) (int32, int)": 1,
                "*func(int) otto.Context": 1,
                "*func(int) reflect.Type": 1,
                "*func(strconv.extFloat)": 1,
                "*json.reflectWithString": 1,
                "*map.bucket[string]bool": 1,
                "*map.iter[string]string": 1,
                "*map[*gob.typeInfo]bool": 1,
                "*otto._defaultValueHint": 1,
                "*otto._nodeArrayLiteral": 1,
                "*otto._nodeForStatement": 1,
                "*otto._nodeTryStatement": 1,
                "*reflect.emptyInterface": 1,
                "*reflect.funcTypeFixed4": 1,
                "*reflect.funcTypeFixed8": 1,
                "*runtime.cgothreadstart": 1,
                "*runtime.memRecordCycle": 1,
                "*runtime.stackObjectBuf": 1,
                "*runtime.stackScanState": 1,
                "*runtime.traceBufHeader": 1,
                "*runtime.vdsoVersionKey": 1,
                "*sync.poolLocalInternal": 1,
                "*syscall.RawSockaddrAny": 1,
                "CallFunctionWithTimeout": 1,
                "FindReaderSubmatchIndex": 1,
                "FindStringSubmatchIndex": 1,
                "ReferenceErrorPrototype": 1,
                "ReplaceAllLiteralString": 1,
                "Sources": 1,
                "json:\"sources\"": 1,
                "Version": 1,
                "json:\"version\"": 1,
                "newNativeFunctionObject": 1,
                "parseAdditiveExpression": 1,
                "parseEqualityExpression": 1,
                "parseIterationStatement": 1,
                "vmRetrieveAssetAsString": 1,
                "**ast.VariableExpression": 1,
                "*[1125899906842623]uint8": 1,
                "*[128]runtime.epollevent": 1,
                "*[179999]*runtime.bucket": 1,
                "*[562949953421311]uint16": 1,
                "*[63]runtime.stackObject": 1,
                "*[8]otto._lessThanResult": 1,
                "*[]*engine.NativePackage": 1,
                "*[]otto._nodeDeclaration": 1,
                "*[]runtime.stackfreelist": 1,
                "*[]runtime.traceStackPtr": 1,
                "*[]runtime.vdsoSymbolKey": 1,
                "*ast.ExpressionStatement": 1,
                "*ast.FunctionDeclaration": 1,
                "*ast.VariableDeclaration": 1,
                "*flate.CorruptInputError": 1,
                "*func() ([]uint8, error)": 1,
                "*func() (float64, error)": 1,
                "*func() *base64.Encoding": 1,
                "*func() *reflect.MapIter": 1,
                "*func(*url.URL) *url.URL": 1,
                "*func([]uint8) [][]uint8": 1,
                "*func(int) reflect.Value": 1,
                "*func(int, string) error": 1,
                "*func(int32, int32) bool": 1,
                "*func(os.FileMode) error": 1,
                "*func(otto.Value) string": 1,
                "*func(reflect.Type) bool": 1,
                "*func(string) otto.Value": 1,
                "*json.UnmarshalTypeError": 1,
                "*map.bucket[string]int64": 1,
                "*map.hdr[string][]string": 1,
                "*map[string]interface {}": 1,
                "*otto._constructFunction": 1,
                "*otto._nodeCaseStatement": 1,
                "*otto._nodeDotExpression": 1,
                "*otto._nodeNewExpression": 1,
                "*otto._nodeObjectLiteral": 1,
                "*otto._nodeRegExpLiteral": 1,
                "*otto._nodeWithStatement": 1,
                "*otto._propertyReference": 1,
                "*reflect.funcTypeFixed16": 1,
                "*reflect.funcTypeFixed32": 1,
                "*reflect.funcTypeFixed64": 1,
                "*runtime.cgoTracebackArg": 1,
                "*runtime.pcvalueCacheEnt": 1,
                "*runtime.persistentAlloc": 1,
                "*runtime.stackWorkBufHdr": 1,
                "*runtime.traceStackTable": 1,
                "*syscall.RawSockaddrUnix": 1,
                "*syscall.SockaddrNetlink": 1,
                "_newNativeFunctionObject": 1,
                "cmpl_functionDeclaration": 1,
                "cmpl_variableDeclaration": 1,
                "parseBitwiseOrExpression": 1,
                "parseForOrForInStatement": 1,
                "parseLogicalOrExpression": 1,
                "parseVariableDeclaration": 1,
                "**otto._nodeCaseStatement": 1,
                "*[0]*engine.NativePackage": 1,
                "*[2]runtime.vdsoSymbolKey": 1,
                "*[4]runtime.stackfreelist": 1,
                "*[8]*engine.NativePackage": 1,
                "*[]json.reflectWithString": 1,
                "*[]runtime.memRecordCycle": 1,
                "*base64.CorruptInputError": 1,
                "*encoding.BinaryMarshaler": 1,
                "*encoding.TextUnmarshaler": 1,
                "*func(int) reflect.Method": 1,
                "*func(int32) (int, error)": 1,
                "*func(interface {}) error": 1,
                "*func(io.RuneReader) bool": 1,
                "*func(reflect.Value) bool": 1,
                "*func(string, bool) error": 1,
                "*func(string, string) int": 1,
                "*map.bucket[string]string": 1,
                "*map.bucket[string]uint64": 1,
                "*map.hdr[reflect.Type]int": 1,
                "*map.iter[string][]string": 1,
                "*map[gob.typeId]gob.decOp": 1,
                "*map[int32]unsafe.Pointer": 1,
                "*map[unsafe.Pointer]int32": 1,
                "*otto._bindFunctionObject": 1,
                "*otto._nodeBlockStatement": 1,
                "*otto._nodeCallExpression": 1,
                "*otto._nodeCatchStatement": 1,
                "*otto._nodeEmptyStatement": 1,
                "*otto._nodeForInStatement": 1,
                "*otto._nodeFunctionObject": 1,
                "*otto._nodeThisExpression": 1,
                "*otto._nodeThrowStatement": 1,
                "*otto._nodeWhileStatement": 1,
                "*reflect.funcTypeFixed128": 1,
                "*runtime.cgoSymbolizerArg": 1,
                "*runtime.gcMarkWorkerMode": 1,
                "*runtime.semaProfileFlags": 1,
                "*runtime.specialfinalizer": 1,
                "*syscall.RawSockaddrInet4": 1,
                "*syscall.RawSockaddrInet6": 1,
                "Mappings": 1,
                "json:\"mappings\"": 1,
                "calculateBinaryExpression": 1,
                "cmpl_evaluate_nodeProgram": 1,
                "fractionalUtilizationGoal": 1,
                "parseAssignmentExpression": 1,
                "parseBitwiseAndExpression": 1,
                "parseConditionlExpression": 1,
                "parseLogicalAndExpression": 1,
                "parseRelationalExpression": 1,
                "*[3]runtime.memRecordCycle": 1,
                "*[]*ast.VariableExpression": 1,
                "*[]runtime.pcvalueCacheEnt": 1,
                "*ast.ConditionalExpression": 1,
                "*func(*flate.decompressor)": 1,
                "*func(*regexp.Regexp) bool": 1,
                "*func(*syntax.Regexp) bool": 1,
                "*func([]int) reflect.Value": 1,
                "*func(ast.CommentPosition)": 1,
                "*func(file.Idx) *file.File": 1,
                "*func(func(uintptr)) error": 1,
                "*func(int) regexp.lazyFlag": 1,
                "*func(int, func(int, int))": 1,
                "*func(int, int, int) error": 1,
                "*func(io.RuneReader) []int": 1,
                "*func(logger.Logger) error": 1,
                "*func(reflect.Value) error": 1,
                "*func(string) (int, error)": 1,
                "*func(string, int) [][]int": 1,
                "*func(uint32, []bool) bool": 1,
                "*json.UnsupportedTypeError": 1,
                "*map.bucket[*uint8][]uint8": 1,
                "*map.hdr[reflect.Type]bool": 1,
                "*map[gob.typeId]*gob.decOp": 1,
                "*map[string]func() []uint8": 1,
                "*map[string]otto._property": 1,
                "*map[string]token._keyword": 1,
                "*otto._nodeBranchStatement": 1,
                "*otto._nodeFunctionLiteral": 1,
                "*otto._nodeReturnStatement": 1,
                "*otto._nodeSwitchStatement": 1,
                "*otto._nodeUnaryExpression": 1,
                "*runtime.gcControllerState": 1,
                "*runtime.sliceInterfacePtr": 1,
                "*runtime.stackObjectBufHdr": 1,
                "*runtime.stackObjectRecord": 1,
                "*syscall.SockaddrLinklayer": 1,
                "FindAllStringSubmatchIndex": 1,
                "GidMappingsEnableSetgroups": 1,
                "dedicatedMarkWorkersNeeded": 1,
                "parseFunctionParameterList": 1,
                "*[8]runtime.pcvalueCacheEnt": 1,
                "*[]*otto._nodeCaseStatement": 1,
                "*encoding.BinaryUnmarshaler": 1,
                "*func() (int32, int, error)": 1,
                "*func([]uint8) (int, error)": 1,
                "*func([]uint8, int) [][]int": 1,
                "*func(int) ([]uint8, error)": 1,
                "*func(string) reflect.Value": 1,
                "*func(string, int) []string": 1,
                "*json.InvalidUnmarshalError": 1,
                "*json.UnsupportedValueError": 1,
                "*map.bucket[gob.typeId]bool": 1,
                "*map.bucket[string][]string": 1,
                "*map.hdr[*gob.typeInfo]bool": 1,
                "*map[gob.typeId]gob.gobType": 1,
                "*otto._nativeFunctionObject": 1,
                "*otto._nodeAssignExpression": 1,
                "*otto._nodeBinaryExpression": 1,
                "*otto._nodeDoWhileStatement": 1,
                "*runtime.TypeAssertionError": 1,
                "*runtime.stringInterfacePtr": 1,
                "*runtime.traceAllocBlockPtr": 1,
                "*runtime.uint16InterfacePtr": 1,
                "*runtime.uint32InterfacePtr": 1,
                "*runtime.uint64InterfacePtr": 1,
                "*syscall.RawSockaddrNetlink": 1,
                "LNXYSCEEWLYHMXCQKLPZMADUPZX": 1,
                "LNXYSCEEWLYHMXGSBTLTKYMHLEL": 1,
                "LNXYSCEEWLYHMXHBZSIAIEQOVHI": 1,
                "LNXYSCEEWLYHMXKPVMBZURTDTYA": 1,
                "LNXYSCEEWLYHMXLECUSRECPVOEP": 1,
                "LNXYSCEEWLYHMXRYBWRXABALMMQ": 1,
                "LNXYSCEEWLYHMXXMIYXHYDTESYQ": 1,
                "cmpl_evaluate_nodeStatement": 1,
                "parseLeftHandSideExpression": 1,
                "github.com/robertkrimen/otto": 1,
                "*[4194304]*runtime.heapArena": 1,
                "*[8192]runtime.traceStackPtr": 1,
                "*[]runtime.stackObjectRecord": 1,
                "*func() (int, string, error)": 1,
                "*func() (os.FileInfo, error)": 1,
                "*func(*syscall.Stat_t) error": 1,
                "*func([]uint8, []uint8) bool": 1,
                "*func(file.Position, string)": 1,
                "*func(int) ([]string, error)": 1,
                "*func(int, int, uint8) error": 1,
                "*func(interface {}, uintptr)": 1,
                "*func(string) (string, bool)": 1,
                "*func(string, []uint8) error": 1,
                "*func(string, string) string": 1,
                "*func(uint8) (string, error)": 1,
                "*func(uintptr) (string, int)": 1,
                "*map.bucket[reflect.Type]int": 1,
                "*map.hdr[string]interface {}": 1,
                "*map[*reflect.structType]int": 1,
                "*map[reflect.Type]*gob.decOp": 1,
                "*map[reflect.Type]*gob.encOp": 1,
                "*map[reflect.Type]gob.typeId": 1,
                "*map[string]syntax.charGroup": 1,
                "*map[uint32][]*runtime._type": 1,
                "*otto._nodeBracketExpression": 1,
                "*otto._nodeDebuggerStatement": 1,
                "*otto._nodeLabelledStatement": 1,
                "*otto._nodeVariableStatement": 1,
                "cmpl_evaluate_nodeExpression": 1,
                "parseVariableDeclarationList": 1,
                "*[]*otto._nodeFunctionLiteral": 1,
                "*[][8]runtime.pcvalueCacheEnt": 1,
                "*func() (interface {}, error)": 1,
                "*func() (reflect.Value, bool)": 1,
                "*func() (runtime.Frame, bool)": 1,
                "*func() *reflect.uncommonType": 1,
                "*func([]uint8, []int) []uint8": 1,
                "*func([]uint8, int) [][]uint8": 1,
                "*func(ast.Node, *ast.Comment)": 1,
                "*func(int, bool) otto.Context": 1,
                "*func(int, int) reflect.Value": 1,
                "*func(int32) *base64.Encoding": 1,
                "*func(string) (string, error)": 1,
                "*func(string, func() []uint8)": 1,
                "*func(string, int) [][]string": 1,
                "*func(uint32, []uint8) uint32": 1,
                "*func(uint8) ([]uint8, error)": 1,
                "*func(uintptr, uintptr) error": 1,
                "*map.bucket[reflect.Type]bool": 1,
                "*map.bucket[string]otto.Value": 1,
                "*map.iter[string]interface {}": 1,
                "*map[*reflect.structType]bool": 1,
                "*map[gob.typeId]*gob.wireType": 1,
                "*map[interface {}]*sync.entry": 1,
                "*map[reflect.Type]gob.gobType": 1,
                "*map[string]*engine.NativeVar": 1,
                "*map[string]otto._dclProperty": 1,
                "*otto._nodeSequenceExpression": 1,
                "*otto._nodeVariableExpression": 1,
                "*syscall.RawSockaddrLinklayer": 1,
                "SourceRoot": 1,
                "json:\"sourceRoot\"": 1,
                "cmpl_evaluate_nodeIfStatement": 1,
                "parseMultiplicativeExpression": 1,
                "*[2][8]runtime.pcvalueCacheEnt": 1,
                "*base64.newlineFilteringReader": 1,
                "*func() ([]uint8, bool, error)": 1,
                "*func() (int, time.Month, int)": 1,
                "*func(*regexp.Regexp, int) int": 1,
                "*func([]uint8, string) []uint8": 1,
                "*func(file.Idx) *file.Position": 1,
                "*func(int) reflect.StructField": 1,
                "*func(int, int, int) time.Time": 1,
                "*func(string) ([]uint8, error)": 1,
                "*func(string, ...interface {})": 1,
                "*func(string, bool) otto.Value": 1,
                "*func(time.Duration) time.Time": 1,
                "*func(time.Time) time.Duration": 1,
                "*map.bucket[*gob.typeInfo]bool": 1,
                "*map.hdr[gob.typeId]*gob.decOp": 1,
                "*map.hdr[string]otto._property": 1,
                "*map[otto._lessThanResult]bool": 1,
                "*map[string]*engine.NativeFunc": 1,
                "*map[string]*engine.NativeType": 1,
                "*otto._nodeExpressionStatement": 1,
                "LNXYSCEEWLYHMXjcqxibpgjzovuwdu": 1,
                "cmpl_evaluate_nodeArrayLiteral": 1,
                "cmpl_evaluate_nodeForStatement": 1,
                "cmpl_evaluate_nodeTryStatement": 1,
                "gopkg.in/sourcemap.v1/base64vlq": 1,
                "*[46912496118442]runtime.elfSym": 1,
                "*[]*[4194304]*runtime.heapArena": 1,
                "*func(*json.scanner, uint8) int": 1,
                "*func(*otto._clone) otto._stash": 1,
                "*func(*time.Location) time.Time": 1,
                "*func([]uint8, []uint8) []uint8": 1,
                "*func([]uint8, int) [][][]uint8": 1,
                "*func(func(uintptr) bool) error": 1,
                "*func(int, int, [4]uint8) error": 1,
                "*func(io.Reader) (int64, error)": 1,
                "*func(io.Reader, []uint8) error": 1,
                "*func(io.Writer) (int64, error)": 1,
                "*func(string) (*url.URL, error)": 1,
                "*func(string, bool, otto.Value)": 1,
                "*func(string, otto.Value, bool)": 1,
                "*map.bucket[string]interface {}": 1,
                "*map.hdr[gob.typeId]gob.gobType": 1,
                "*map.iter[string]otto._property": 1,
                "*map[gob.typeId]**gob.decEngine": 1,
                "*map[reflect.Kind]gob.decHelper": 1,
                "*map[reflect.Kind]gob.encHelper": 1,
                "*map[reflect.Type]*gob.typeInfo": 1,
                "*map[string]*engine.NativeConst": 1,
                "*map[string]*engine.NativeField": 1,
                "*map[string]*unicode.RangeTable": 1,
                "*otto._builtinJSON_parseContext": 1,
                "*struct { F uintptr": 6,
                "s string }": 3,
                "cmpl_evaluate_nodeDotExpression": 1,
                "cmpl_evaluate_nodeNewExpression": 1,
                "cmpl_evaluate_nodeObjectLiteral": 1,
                "cmpl_evaluate_nodeStatementList": 1,
                "cmpl_evaluate_nodeWithStatement": 1,
                "github.com/robertkrimen/otto/ast": 1,
                "github.com/robertkrimen/otto/dbg": 1,
                "*[1]*[4194304]*runtime.heapArena": 1,
                "*[]map[otto._lessThanResult]bool": 1,
                "*func() (syscall.RawConn, error)": 1,
                "*func(*[][]uint8) (int64, error)": 1,
                "*func([]int) reflect.StructField": 1,
                "*func(int64, int) (int64, error)": 1,
                "*func(string, string) otto.Value": 1,
                "*map.bucket[gob.typeId]gob.decOp": 1,
                "*map.bucket[int32]unsafe.Pointer": 1,
                "*map.bucket[unsafe.Pointer]int32": 1,
                "*map.hdr[ast.Node][]*ast.Comment": 1,
                "*map.hdr[reflect.Type]*gob.decOp": 1,
                "*map.hdr[reflect.Type]*gob.encOp": 1,
                "*map.hdr[reflect.Type]gob.typeId": 1,
                "*map.hdr[uint32][]*runtime._type": 1,
                "*map.iter[gob.typeId]gob.gobType": 1,
                "*map[*otto._object]*otto._object": 1,
                "*map[runtime._typePair]struct {}": 1,
                "*otto._nodeConditionalExpression": 1,
                "is []int8 }": 1,
                "cmpl_evaluate_nodeCallExpression": 1,
                "cmpl_evaluate_nodeForInStatement": 1,
                "cmpl_evaluate_nodeWhileStatement": 1,
                "!github.com/robertkrimen/otto/file": 1,
                "!*[4]map[otto._lessThanResult]bool": 1,
                "!*[]map[gob.typeId]**gob.decEngine": 1,
                "!*func() (*os.ProcessState, error)": 1,
                "!*func(*otto._object, string) bool": 1,
                "!*func(int) ([]os.FileInfo, error)": 1,
                "!*func(interface {}, interface {})": 1,
                "!*func(map[gob.typeId]bool) string": 1,
                "!*func(reflect.Type) reflect.Value": 1,
                "!*func(string) (otto.Value, error)": 1,
                "!*func(string, interface {}) error": 1,
                "!*map.bucket[gob.typeId]*gob.decOp": 1,
                "!*map.bucket[string]func() []uint8": 1,
                "!*map.bucket[string]otto._property": 1,
                "!*map.bucket[string]token._keyword": 1,
                "!*map.hdr[*reflect.structType]bool": 1,
                "!*map.hdr[interface {}]*sync.entry": 1,
                "!*map.hdr[string]*engine.NativeVar": 1,
                "!*map.hdr[string]otto._dclProperty": 1,
                "!*map.iter[ast.Node][]*ast.Comment": 1,
                "!*map[string]*engine.NativePackage": 1,
                "!*struct { F uintptr": 4,
                "is []int16 }": 1,
                "is []int32 }": 1,
                "is []int64 }": 1,
                "now *int64 }": 1,
                "!cmpl_evaluate_nodeSwitchStatement": 1,
                "!cmpl_evaluate_nodeUnaryExpression": 1,
                "!parseBitwiseExclusiveOrExpression": 1,
                "\"github.com/gen0cide/gscript/engine": 1,
                "\"github.com/gen0cide/gscript/logger": 1,
                "\"github.com/robertkrimen/otto/token": 1,
                "\"*[8]map[gob.typeId]**gob.decEngine": 1,
                "\"*func([]uint8, int64) (int, error)": 1,
                "\"*func(int, int, int) reflect.Value": 1,
                "\"*func(otto.Value, otto.Value) bool": 1,
                "\"*func(reflect.Value) reflect.Value": 1,
                "\"*func(string) (os.FileInfo, error)": 1,
                "\"*func(time.Duration) time.Duration": 1,
                "\"*map.bucket[gob.typeId]gob.gobType": 1,
                "\"*map.hdr[string]*engine.NativeFunc": 1,
                "\"*map.hdr[string]*engine.NativeType": 1,
                "\"*map.iter[interface {}]*sync.entry": 1,
                "\"*map.iter[string]*engine.NativeVar": 1,
                "\"*map.iter[string]otto._dclProperty": 1,
                "\"*map[*otto._fnStash]*otto._fnStash": 1,
                "\"*struct { F uintptr": 5,
                "hash uint32 }": 1,
                "l *[]string }": 1,
                "name string }": 1,
                "repl string }": 1,
                "ss []string }": 1,
                "\"*struct { b bool": 1,
                "x interface {} }": 1,
                "\"*struct { runtime.gList": 1,
                "n int32 }": 3,
                "\"*struct { sync.Mutex": 1,
                "m sync.Map }": 1,
                "\"cmpl_evaluate_nodeAssignExpression": 1,
                "\"cmpl_evaluate_nodeBinaryExpression": 1,
                "\"cmpl_evaluate_nodeDoWhileStatement": 1,
                "#github.com/robertkrimen/otto/parser": 1,
                "#*func(*otto._object) json.Marshaler": 1,
                "#*func(otto.FunctionCall) otto.Value": 1,
                "#*func(reflect.Value, reflect.Value)": 1,
                "#*func(string) (*otto.Object, error)": 1,
                "#*map.bucket[*reflect.structType]int": 1,
                "#*map.bucket[ast.Node][]*ast.Comment": 1,
                "#*map.bucket[reflect.Type]*gob.decOp": 1,
                "#*map.bucket[reflect.Type]*gob.encOp": 1,
                "#*map.bucket[reflect.Type]gob.typeId": 1,
                "#*map.bucket[string]syntax.charGroup": 1,
                "#*map.bucket[uint32][]*runtime._type": 1,
                "#*map.hdr[reflect.Type]*gob.typeInfo": 1,
                "#*map.hdr[string]*engine.NativeConst": 1,
                "#*map.iter[string]*engine.NativeFunc": 1,
                "#*map.iter[string]*engine.NativeType": 1,
                "#*map[runtime.typeOff]*runtime._type": 1,
                "#*otto._builtinJSON_stringifyContext": 1,
                "#*struct { F uintptr": 3,
                "R *rand.Rand }": 1,
                "dst *uintptr }": 2,
                "repl []uint8 }": 1,
                "#*struct { idx file.Idx": 1,
                "count int }": 1,
                "#cmpl_evaluate_nodeBracketExpression": 1,
                "$*[]func(otto.Value, otto.Value) bool": 1,
                "$*func([]*engine.NativePackage) error": 1,
                "$*func([]uint8, []uint8) (int, error)": 1,
                "$*func(int, int) (cipher.AEAD, error)": 1,
                "$*func(string) (reflect.Method, bool)": 1,
                "$*map.bucket[*reflect.structType]bool": 1,
                "$*map.bucket[gob.typeId]*gob.wireType": 1,
                "$*map.bucket[interface {}]*sync.entry": 1,
                "$*map.bucket[reflect.Type]gob.gobType": 1,
                "$*map.bucket[string]*engine.NativeVar": 1,
                "$*map.bucket[string]otto._dclProperty": 1,
                "$*map.hdr[runtime._typePair]struct {}": 1,
                "$*map.iter[reflect.Type]*gob.typeInfo": 1,
                "$*map.iter[string]*engine.NativeConst": 1,
                "$*map[*otto._dclStash]*otto._dclStash": 1,
                "$*struct { F uintptr": 4,
                "cutset string }": 1,
                "gp *runtime.g }": 3,
                "restart *bool }": 1,
                "self dbg.Dbgr }": 1,
                "$cmpl_evaluate_nodeSequenceExpression": 1,
                "$cmpl_evaluate_nodeVariableExpression": 1,
                "$parseLeftHandSideExpressionAllowCall": 1,
                "%github.com/robertkrimen/otto/registry": 1,
                "%*[8]func(otto.Value, otto.Value) bool": 1,
                "%*[]map[runtime.typeOff]*runtime._type": 1,
                "%*func(*sourcemap.Consumer) *file.File": 1,
                "%*func(unsafe.Pointer, unsafe.Pointer)": 1,
                "%*map.bucket[otto._lessThanResult]bool": 1,
                "%*map.bucket[string]*engine.NativeFunc": 1,
                "%*map.bucket[string]*engine.NativeType": 1,
                "%*map[chan<- os.Signal]*signal.handler": 1,
                "%*struct { F uintptr": 3,
                "_g_ *runtime.g }": 4,
                "keys *[]string }": 1,
                "t reflect.Type }": 2,
                "&*func(*runtime.g, unsafe.Pointer) bool": 1,
                "&*func(*strconv.decimalSlice, int) bool": 1,
                "&*func([]reflect.Value) []reflect.Value": 1,
                "&*func(func(string) bool) reflect.Value": 1,
                "&*func(int, int, *syscall.IPMreq) error": 1,
                "&*func(int, int, *syscall.Linger) error": 1,
                "&*func(interface {}, interface {}) bool": 1,
                "&*func(string, string) ([]uint8, error)": 1,
                "&*func(unsafe.Pointer, uintptr) uintptr": 1,
                "&*map.bucket[gob.typeId]**gob.decEngine": 1,
                "&*map.bucket[reflect.Kind]gob.decHelper": 1,
                "&*map.bucket[reflect.Kind]gob.encHelper": 1,
                "&*map.bucket[reflect.Type]*gob.typeInfo": 1,
                "&*map.bucket[string]*engine.NativeConst": 1,
                "&*map.bucket[string]*engine.NativeField": 1,
                "&*map.bucket[string]*unicode.RangeTable": 1,
                "&*struct { F uintptr": 4,
                "R rand.Source64 }": 1,
                "result *[][]int }": 1,
                "self *otto.Otto }": 1,
                "startTime int64 }": 1,
                "&*struct { cycle uint32": 1,
                "flushed bool }": 1,
                "'github.com/gen0cide/gscript/logger/null": 1,
                "'*func() (token.Token, string, file.Idx)": 1,
                "'*func(*ast.Program) (otto.Value, error)": 1,
                "'*func(*otto._object, string) otto.Value": 1,
                "'*func(*otto._object, string, bool) bool": 1,
                "'*func(int, int, *syscall.IPMreqn) error": 1,
                "'*func(interface {}) (otto.Value, error)": 1,
                "'*map.bucket[*otto._object]*otto._object": 1,
                "'*map.bucket[runtime._typePair]struct {}": 1,
                "'*struct { F uintptr": 6,
                "R *engine.Engine }": 1,
                "c *runtime.hchan }": 1,
                "e *runtime.eface }": 1,
                "h *runtime.mheap }": 1,
                "preemptible bool }": 1,
                "x *reflect.rtype }": 1,
                "'*struct { signalLock uint32": 1,
                "hz int32 }": 1,
                "'cmpl_evaluate_nodeConditionalExpression": 1,
                "(*func(int, int, *syscall.IPv6Mreq) error": 1,
                "(*func(interface {}) (interface {}, bool)": 1,
                "(*func(otto._defaultValueHint) otto.Value": 1,
                "(*map.bucket[string]*engine.NativePackage": 1,
                "(*struct { F uintptr": 7,
                "R *parser._parser }": 1,
                "R json.mapEncoder }": 1,
                "R json.ptrEncoder }": 1,
                "c *runtime.mcache }": 1,
                "elemOp *gob.decOp }": 2,
                "h *signal.handler }": 1,
                "s **runtime.mspan }": 3,
                ")*func(dbg._frmt, string, ...interface {})": 1,
                ")*func(int) (int, syscall.Sockaddr, error)": 1,
                ")*func(string) (reflect.StructField, bool)": 1,
                ")*func(string, func(string) string) string": 1,
                ")*map.bucket[*otto._fnStash]*otto._fnStash": 1,
                ")*map.hdr[chan<- os.Signal]*signal.handler": 1,
                ")*struct { F uintptr": 3,
                "info *gob.typeInfo }": 1,
                "keys *[]otto.Value }": 1,
                "self *otto._object }": 2,
                "**func() (dbg.DbgFunction, dbg.DbgFunction)": 1,
                "**func(string, *engine.NativePackage) error": 1,
                "**func(unsafe.Pointer, unsafe.Pointer) bool": 1,
                "**map.bucket[runtime.typeOff]*runtime._type": 1,
                "**map.iter[chan<- os.Signal]*signal.handler": 1,
                "**map[*otto._objectStash]*otto._objectStash": 1,
                "**map[int]func(otto.Value, otto.Value) bool": 1,
                "**struct { F uintptr": 5,
                "R json.arrayEncoder }": 1,
                "R json.floatEncoder }": 1,
                "R json.sliceEncoder }": 1,
                "ps []unsafe.Pointer }": 1,
                "rw *runtime.rwmutex }": 1,
                "**struct { addr uintptr": 1,
                "len int": 1,
                "cap int }": 1,
                "+*map.bucket[*otto._dclStash]*otto._dclStash": 1,
                "+*struct { F uintptr": 5,
                "R json.structEncoder }": 1,
                "a []string": 1,
                "x string }": 1,
                "as *strings.asciiSet }": 1,
                "fields *[]json.field }": 1,
                "object *otto._object }": 3,
                ",*func(*otto._object, string) *otto._property": 1,
                ",*func(func(interface {}, interface {}) bool)": 1,
                ",*map.bucket[chan<- os.Signal]*signal.handler": 1,
                "-*func(*otto._object, bool, func(string) bool)": 1,
                "-*func(*runtime.stkframe, unsafe.Pointer) bool": 1,
                "-*func([]uint8) (int, syscall.Sockaddr, error)": 1,
                "-*func([]uint8, func([]uint8) []uint8) []uint8": 1,
                "-*func([]uint8, string, string, []int) []uint8": 1,
                "-*func([]uint8, syscall.Sockaddr) (int, error)": 1,
                "-*func(string, bool, otto._at) otto._reference": 1,
                "-*struct { F uintptr": 2,
                "R *main.LNXYSCEEWLYHMX }": 1,
                "R json.condAddrEncoder }": 1,
                "-*struct { Struct reflect.Type": 1,
                "Field string }": 3,
                "-cmpl_evaluate_nodeBinaryExpression_comparison": 1,
                ".*func() (int, syscall.Sockaddr, string, error)": 1,
                ".*func(*otto._object, string, otto.Value, bool)": 1,
                ".*func(ast.Node, ast.Node, ast.CommentPosition)": 1,
                ".*func(int, int) (int, syscall.Sockaddr, error)": 1,
                ".*struct { F uintptr": 1,
                "addr *uint32": 1,
                "ret int32 }": 1,
                "/*func([]uint8, []uint8, []uint8, []int) []uint8": 1,
                "/*struct { F uintptr": 2,
                "R *runtime.itabTableType }": 1,
                "pc *uintptr": 1,
                "ret *string }": 1,
                "/*struct { runtime.timersBucket": 1,
                "pad [64]uint8 }": 3,
                "0*func(*sourcemap.mappings) (sourcemap.fn, error)": 1,
                "0*func(int, int) (string, string, int, int, bool)": 1,
                "0*func(reflect.Value, reflect.Type) reflect.Value": 1,
                "0*map[reflect.Type]map[gob.typeId]**gob.decEngine": 1,
                "0*struct { F uintptr": 4,
                "argumentList []otto.Value }": 1,
                "enginePtr **gob.decEngine }": 2,
                "pp *runtime.p": 1,
                "sc uintptr }": 1,
                "src uintptr": 1,
                "0*struct { lock runtime.mutex": 1,
                "q runtime.gQueue }": 2,
                "0*struct { root runtime.semaRoot": 1,
                "pad [40]uint8 }": 3,
                "1*[]struct { runtime.timersBucket": 1,
                "1*func() (unsafe.Pointer, syscall._Socklen, error)": 1,
                "1*func([]uint8, []uint8, []uint8, []uint8) []uint8": 1,
                "1*func(int, int64, int, int, int) ([]uint8, error)": 1,
                "1*func(string, interface {}) (*otto.Script, error)": 1,
                "1*func(string, string, ...interface {}) otto.Value": 1,
                "1*map.bucket[*otto._objectStash]*otto._objectStash": 1,
                "1*map.bucket[int]func(otto.Value, otto.Value) bool": 1,
                "1*struct { F uintptr": 2,
                "result *[]string": 1,
                "sp uintptr": 4,
                "2*[]struct { root runtime.semaRoot": 1,
                "2*func(string, ...interface {}) (otto.Value, error)": 1,
                "2*struct { F uintptr": 1,
                "sv []json.reflectWithString }": 1,
                "2*struct { lock runtime.mutex": 2,
                "list runtime.gList }": 2,
                "2*struct { runtime.mutex": 1,
                "runtime.persistentAlloc }": 1,
                "3*[64]struct { runtime.timersBucket": 1,
                "3*struct { F uintptr": 4,
                "gp *runtime.g": 8,
                "traceskip int }": 1,
                "oldval uint32": 2,
                "newval uint32 }": 1,
                "result *[][]string": 1,
                "result *[][]uint8": 1,
                "b []uint8 }": 2,
                "3*struct { mcentral runtime.mcentral": 1,
                "pad [8]uint8 }": 3,
                "4*func(ast.Node, []*ast.Comment, ast.CommentPosition)": 1,
                "4*func(func(string) bool) (reflect.StructField, bool)": 1,
                "4*struct { F uintptr": 3,
                "_p_ *runtime.p }": 1,
                "scanWork int64 }": 1,
                "siz int32": 2,
                "d **runtime._defer }": 1,
                "5*[251]struct { root runtime.semaRoot": 1,
                "5*[]struct { mcentral runtime.mcentral": 1,
                "5*func(*json.encodeState, reflect.Value, json.encOpts)": 1,
                "5*struct { F uintptr": 3,
                "addr unsafe.Pointer": 2,
                "n uintptr }": 1,
                "result *[][][]uint8": 1,
                "value otto.Value": 5,
                "result *bool }": 2,
                "5*struct { size uint32": 1,
                "nmalloc uint64": 3,
                "nfree uint64 }": 3,
                "6*func(interface {}, interface {}) (interface {}, bool)": 1,
                "6*func(otto.Value, ...interface {}) (otto.Value, error)": 1,
                "6*struct { F uintptr": 2,
                "e *engine.Engine": 1,
                "prefix string }": 1,
                "result *int64 }": 1,
                "7*[]struct { size uint32": 1,
                "7*func(*otto._object, string, otto._property, bool) bool": 1,
                "7*func(uint64, int, bool, bool, *strconv.floatInfo) bool": 1,
                "7*map.bucket[reflect.Type]map[gob.typeId]**gob.decEngine": 1,
                "7*struct { F uintptr": 2,
                "stacksize int32": 1,
                "newg *runtime.g }": 1,
                "result *string }": 1,
                "7*struct { user bool": 1,
                "runnable runtime.gQueue": 1,
                "8*[134]struct { mcentral runtime.mcentral": 1,
                "8*func(*runtime.hchan, unsafe.Pointer, bool) (bool, bool)": 1,
                "8*struct { F uintptr": 2,
                "rw *runtime.rwmutex": 1,
                "m *runtime.m }": 1,
                "result *float64 }": 1,
                "9*[67]struct { size uint32": 1,
                "9*func(*runtime.hchan, unsafe.Pointer, bool, uintptr) bool": 1,
                "9*struct { F uintptr": 2,
                "gcw *runtime.gcWork }": 2,
                "object *otto._object": 3,
                ":*func(*runtime.siginfo, *runtime.sigctxt, *runtime.g) bool": 1,
                ":*func([]uint8, []uint8, []uint8, []uint8) ([]uint8, error)": 1,
                ":*struct { F uintptr": 2,
                "keyOp *gob.decOp": 2,
                "p unsafe.Pointer": 1,
                "b *runtime.bucket }": 1,
                ":*struct { lock runtime.mutex": 1,
                "free [35]runtime.mSpanList }": 1,
                "*func([]uint8, []uint8, syscall.Sockaddr) (int, int, error)": 1,
                "frame *runtime.stkframe": 1,
                "bad uintptr }": 1,
                "repl func(string) string": 1,
                "src string }": 2,
                "<*struct { F uintptr": 5,
                "elemOp *gob.decOp": 4,
                "wire *gob.wireType }": 1,
                "pc uintptr": 7,
                "sp uintptr }": 1,
                "info *runtime.vdsoInfo": 1,
                "version int32 }": 1,
                "ut *gob.userTypeInfo": 1,
                "rt reflect.Type }": 1,
                ">*func(uintptr, uintptr, int, int, int, int64) (uintptr, error)": 1,
                ">*struct { F uintptr": 2,
                "repl func([]uint8) []uint8": 1,
                "src []uint8 }": 2,
                "wg *sync.WaitGroup": 1,
                "f *json.encoderFunc }": 1,
                "?*func(*otto._object, *otto._object, *otto._clone) *otto._object": 1,
                "?*func(string, interface {}, interface {}) (*otto.Script, error)": 1,
                "@*func([]uint8, []uint8) (int, int, int, syscall.Sockaddr, error)": 1,
                "@*func(string, interface {}, ...interface {}) (otto.Value, error)": 1,
                "@*struct { F uintptr": 1,
                "ok *bool": 1,
                "oldp *runtime.p": 1,
                "@*struct { name string": 1,
                "exists bool": 1,
                "defined bool": 1,
                "value string }": 1,
                "A*struct { F uintptr": 3,
                "re *regexp.Regexp": 2,
                "repl string": 1,
                "runtime *otto._runtime": 1,
                "scases []runtime.scase": 1,
                "lockorder []uint16 }": 1,
                "B*struct { F uintptr": 4,
                "dec *gob.Decoder": 1,
                "newval uint32": 1,
                "rcvrType reflect.Type": 1,
                "ut *gob.userTypeInfo }": 1,
                "target []uint8": 1,
                "match []int": 1,
                "matchCount int }": 1,
                "D*struct { F uintptr": 1,
                "self otto.Otto": 3,
                "name string": 4,
                "value otto.Value }": 2,
                "E*struct { F uintptr": 3,
                "c *sourcemap.Consumer": 1,
                "genLine int": 1,
                "genCol int }": 1,
                "h *runtime.mheap": 3,
                "s *runtime.mspan": 2,
                "large bool }": 1,
                "value *otto.Value }": 3,
                "F*struct { F uintptr": 1,
                "self otto.Object": 2,
                "G*func(*strconv.decimalSlice, *strconv.extFloat, *strconv.extFloat) bool": 1,
                "G*struct { F uintptr": 1,
                "H*struct { F uintptr": 3,
                "propertyNames *[]otto.Value }": 1,
                "self *otto._runtime": 9,
                "node *otto._nodeTryStatement }": 1,
                "v otto.Value": 2,
                "t reflect.Type": 5,
                "self *otto._runtime }": 1,
                "I*struct { F uintptr": 1,
                "state *runtime.stackScanState": 1,
                "J*struct { F uintptr": 1,
                "ovfl error": 2,
                "helper gob.decHelper }": 2,
                "K*struct { F uintptr": 1,
                "result map[string]interface {} }": 1,
                "L*struct { F uintptr": 1,
                "sp1 uintptr": 1,
                "sp2 uintptr": 1,
                "sp3 uintptr": 1,
                "M*struct { F uintptr": 1,
                "elemOp *gob.encOp": 2,
                "elemIndir int": 1,
                "helper gob.encHelper }": 1,
                "M*struct { enabled bool": 1,
                "pad [3]uint8": 1,
                "needed bool": 1,
                "cgo bool": 1,
                "alignme uint64 }": 1,
                "N*struct { lock runtime.mutex": 1,
                "free runtime.mSpanList": 2,
                "busy runtime.mSpanList }": 2,
                "O*struct { F uintptr": 1,
                "ctx otto._builtinJSON_parseContext": 1,
                "Q*func(uint64, int, bool, *strconv.floatInfo) (strconv.extFloat, strconv.extFloat)": 1,
                "Q*struct { F uintptr": 1,
                "typ reflect.Type": 2,
                "value reflect.Value }": 1,
                "R*struct { F uintptr": 2,
                "value interface {}": 1,
                "result *otto.Value }": 4,
                "srepl *string": 1,
                "repl []uint8": 1,
                "S*struct { F uintptr": 1,
                "size *uintptr": 1,
                "needzero bool": 1,
                "noscan bool": 1,
                "S*struct { lock runtime.mutex": 1,
                "stack runtime.gList": 1,
                "noStack runtime.gList": 1,
                "V*struct { F uintptr": 1,
                "ovfl error }": 1,
                "W*struct { F uintptr": 1,
                "keyOp *gob.encOp": 1,
                "keyIndir int": 1,
                "elemIndir int }": 1,
                "X*struct { F uintptr": 1,
                "typ *runtime._type": 1,
                "src unsafe.Pointer": 1,
                "off uintptr": 1,
                "size uintptr }": 1,
                "Z*struct { F uintptr": 2,
                "size uintptr": 2,
                "align uintptr": 1,
                "sysStat *uint64": 1,
                "p **runtime.notInHeap }": 1,
                "[*struct { F uintptr": 2,
                "sv otto.Value": 1,
                "r *reflect.Value }": 1,
                "vv *reflect.Value }": 1,
                "\\*struct { F uintptr": 1,
                "m reflect.Value": 1,
                "o *otto._object": 1,
                "]*struct { F uintptr": 1,
                "call otto.FunctionCall": 1,
                "properties *otto._object": 1,
                "^*struct { c unsafe.Pointer": 1,
                "elem unsafe.Pointer": 3,
                "kind uint16": 3,
                "releasetime uint64 }": 3,
                "_*struct { F uintptr": 1,
                "skip int": 1,
                "pcbuf []uintptr": 1,
                "n *int }": 1,
                "`*[]struct { c unsafe.Pointer": 1,
                "`*struct { F uintptr": 1,
                "sig *uint32": 1,
                "new *runtime.sigactiont": 1,
                "old *runtime.sigactiont": 1,
                "ret *int32 }": 1,
                "a*[2]struct { c unsafe.Pointer": 1,
                "a*struct { F uintptr": 1,
                "msgs *runtime._panic": 1,
                "docrash *bool }": 1,
                "c*struct { F uintptr": 1,
                "s *reflect.sliceHeader": 1,
                "typ *reflect.rtype": 2,
                "tmp unsafe.Pointer }": 1,
                "d*struct { F uintptr": 1,
                "a *otto.Value": 1,
                "v *reflect.Value }": 1,
                "e*struct { F uintptr": 1,
                "needsScavenge *bool": 1,
                "prescavenged *uintptr }": 1,
                "e*struct { lock runtime.mutex": 1,
                "next int32": 1,
                "m map[int32]unsafe.Pointer": 1,
                "minv map[unsafe.Pointer]int32 }": 1,
                "f*struct { F uintptr": 1,
                "fn **runtime.funcval": 1,
                "argp unsafe.Pointer": 1,
                "pc uintptr }": 1,
                "h*struct { ityp *reflect.rtype": 1,
                "hash uint32": 1,
                "_ [4]uint8": 3,
                "fun [100000]unsafe.Pointer }": 1,
                "i*struct { sync.Mutex": 1,
                "m map[chan<- os.Signal]*signal.handler": 1,
                "ref [65]int64": 1,
                "stopping []signal.stopping }": 1,
                "j*struct { F uintptr": 2,
                "cmpl_program *otto._nodeProgram": 1,
                "eval bool": 1,
                "value *otto.Value": 1,
                "this otto.Value": 2,
                "argumentList []interface {}": 3,
                "q*struct { F uintptr": 1,
                "e *runtime.eface": 1,
                "f *runtime.eface": 1,
                "nret uintptr": 1,
                "fint *runtime._type": 1,
                "ot *runtime.ptrtype }": 1,
                "q*struct { lock runtime.mutex": 1,
                "newm runtime.muintptr": 1,
                "waiting bool": 1,
                "wake runtime.note": 1,
                "haveTemplateThread uint32 }": 1,
                "r*struct { F uintptr": 2,
                "n uintptr": 1,
                "prot int32": 1,
                "flags int32": 1,
                "fd int32": 1,
                "off uint32": 1,
                "ret *uintptr }": 1,
                "npage uintptr": 1,
                "spanclass runtime.spanClass": 1,
                "large bool": 1,
                "t*struct { F uintptr": 1,
                "ctx *otto._builtinJSON_stringifyContext": 1,
                "holder *otto._object": 1,
                "object map[string]interface {} }": 1,
                "u*struct { F uintptr": 1,
                "node *otto._nodeCallExpression": 1,
                "|*struct { F uintptr": 1,
                "rt *otto._runtime": 1,
                "*struct { note runtime.note": 1,
                "mask [3]uint32": 1,
                "wanted [3]uint32": 1,
                "ignored [3]uint32": 1,
                "recv [3]uint32": 1,
                "state uint32": 1,
                "delivering uint32": 1,
                "inuse bool }": 1,
                "*struct { lock runtime.mutex": 1,
                "free *runtime.gcBitsArena": 1,
                "next *runtime.gcBitsArena": 1,
                "current *runtime.gcBitsArena": 1,
                "previous *runtime.gcBitsArena }": 1,
                "into otto._nodeExpression": 1,
                "body []otto._nodeStatement": 1,
                "labels []string": 1,
                "enumerateValue *otto.Value": 1,
                "object **otto._object }": 1,
                "p **regexp.onePassProg": 1,
                "visitQueue *regexp.queueOnePass": 1,
                "check *func(uint32, []bool) bool": 1,
                "onePassRunes [][]int32": 1,
                "instQueue *regexp.queueOnePass }": 1,
                "6*struct { allocfreetrace int32": 1,
                "cgocheck int32": 1,
                "clobberfree int32": 1,
                "efence int32": 1,
                "gccheckmark int32": 1,
                "gcpacertrace int32": 1,
                "gcshrinkstackoff int32": 1,
                "gcstoptheworld int32": 1,
                "gctrace int32": 1,
                "invalidptr int32": 1,
                "madvdontneed int32": 1,
                "sbrk int32": 1,
                "scavenge int32": 1,
                "scheddetail int32": 1,
                "schedtrace int32": 1,
                "tracebackancestors int32 }": 1,
                "lockOwner *runtime.g": 1,
                "enabled bool": 1,
                "shutdown bool": 1,
                "headerWritten bool": 1,
                "footerWritten bool": 1,
                "shutdownSema uint32": 1,
                "seqStart uint64": 1,
                "ticksStart int64": 1,
                "ticksEnd int64": 1,
                "timeStart int64": 1,
                "timeEnd int64": 1,
                "seqGC uint64": 1,
                "reading runtime.traceBufPtr": 1,
                "empty runtime.traceBufPtr": 1,
                "fullHead runtime.traceBufPtr": 1,
                "fullTail runtime.traceBufPtr": 1,
                "reader runtime.guintptr": 1,
                "stackTab runtime.traceStackTable": 1,
                "stringsLock runtime.mutex": 1,
                "strings map[string]uint64": 1,
                "stringSeq uint64": 1,
                "markWorkerLabels [3]uint64": 1,
                "bufLock runtime.mutex": 1,
                "buf runtime.traceBufPtr }": 1,
                "d*struct { full runtime.lfstack": 1,
                "empty runtime.lfstack": 1,
                "pad0 cpu.CacheLinePad": 1,
                "wbufSpans struct { lock runtime.mutex": 1,
                "_ uint32": 3,
                "bytesMarked uint64": 1,
                "markrootNext uint32": 1,
                "markrootJobs uint32": 1,
                "nproc uint32": 1,
                "tstart int64": 1,
                "nwait uint32": 1,
                "ndone uint32": 1,
                "nFlushCacheRoots int": 1,
                "nDataRoots int": 1,
                "nBSSRoots int": 1,
                "nSpanRoots int": 1,
                "nStackRoots int": 1,
                "startSema uint32": 1,
                "markDoneSema uint32": 1,
                "bgMarkReady runtime.note": 1,
                "bgMarkDone uint32": 1,
                "mode runtime.gcMode": 1,
                "userForced bool": 1,
                "totaltime int64": 1,
                "initialHeapLive uint64": 1,
                "assistQueue struct { lock runtime.mutex": 1,
                "sweepWaiters struct { lock runtime.mutex": 1,
                "cycles uint32": 1,
                "stwprocs int32": 1,
                "maxprocs int32": 1,
                "tSweepTerm int64": 1,
                "tMark int64": 1,
                "tMarkTerm int64": 1,
                "tEnd int64": 1,
                "pauseNS int64": 1,
                "pauseStart int64": 1,
                "heap0 uint64": 1,
                "heap1 uint64": 1,
                "heap2 uint64": 1,
                "heapGoal uint64 }": 1,
                "!#$%&'()*+,-./05:": 1,
                "<=>?@CEFGLMNPSZ[\"": 1,
                "]^`himst{|}~ + @ P [!=%=%s%v&&&": 1,
                "&=&^()) )()": 1,
                "*=+++=, ---=->///=/i00010s25: :]<<<===> >=>>CcCfCoCsDoIfLlLmLoLtLuMcMeMnNdNlNoOSPIPcPdPePfPiPoPsScSkSmSoTZYiZlZpZs[]\":\"": 1,
                "\\D\\E\\S\\W\\d\\s\\w": 1,
                "^=doi)ifinmsnss us{}|=||}": 1,
                "G  M  P %v *( -  <  >  m=!==%25%2B%: &^='\"'): // ///125625: `<<====>>=>>>???AprAugDecEOFFebForFriHanJanJulJunKeyLN2LaoMarMayMonMroNaNNkoNovOctOp(PC=SatSepSunThuTueUTCVaiWed": 1,
                "absadxaesavxcosdaydirdupendexpfmaforgc getgp infintletlogmapmaxminnannewnilnowobjpc=poppowptrsetsintantryu00var": 1,
                "!=  ->  <== as  at  fp= in  is  lr: of  on  pc= sp: sp=$1$2'\\'') = ) m=) {": 1,
                "+Inf+inf, n -Inf-inf20063125: p=>>>=ARCHAhomCallChamDashDateG.%sGOGCJSONJulyJuneLN10LisuMathMiaoModiNULLNewaThaiWith[]%s\\u00": 1,
                "m=] n=acosasinatanavx2basebindbmi1bmi2boolcallcap cas1cas2cas3cas4cas5cas6caseceilchandeaddropelseenumermsevalexecfailfilefunchouridleinfoint8joinjsonkeyskindnamenew nonenullopenpushquitreadsbrkscvgsealseeksomesortsqrtsse2sse3statsynctestthistimetrimtruetypeuintvoidwaitwarnwith ...": 1,
                "H_T= H_a= H_g= MB,  W_a= and  cnt= for  h_a= h_g= h_t= max= not  ptr  siz= tab= top= u_a= u_g=%25$1%d:%d%s:%d+0000, ..., fp:/etc/1562578125<nil>AdlamAprilArrayBamumBatakBuhidColonErrorFinalGreekKhmerLOG2ELatinLimbuLocalMarchNushuOghamOriyaOsageRunicSQRT2STermTakriTamilWhile\\u202amd64applyargp=arrayatan2breakbytescatchchdirchmodchownclasscloseconstdebugerroreveryfalsefaultfcntlfloatfloorgcinggob: indexinputint16int32int64isNaNlinuxlstatmatchmonthpanicparseroundrune shiftsleepslicesplitsse41sse42ssse3stacksuperthrowtraceuint8valuewhilewrite (MB)": 1,
                "Value addr= base  code= ctxt: curg= goid  jobs= list= m->p= next= p->m= prev= span= varp=%s: %s(...)": 1,
                "*_+-./, not /%s/%s390625<-chanArabicAugustBrahmiCarianChakmaCommonCopticCreateFormatFridayGOROOTGothicHangulHatranHebrewHyphenKaithiKhojkiLOG10ELepchaLycianLydianMondayNUMBERNumberObjectRegExpRejangSCHED STRINGStringSundaySyriacTai_LeTangutTeluguThaana[%d]%s[]byte\\ufffd^\\s*%/acceptassertbound calleecallerchan<-charAtconcatcreatedeleteefenceempty errno escapeexportfilterfreezegetDayglobalhangupimportkilledlengthminutenumberobjectpopcntpublicrandomreadatreducereturnrune1 searchsecondselectsourcesplicestaticstringstructsubstrsweep switchtoJSONtoken(typeofuint16uint32uint64waitid    at  (scan  (scan) (trap  MB in  Value> dying= locks= m->g0= nmsys= s=nil": 1,
                "using %s %s": 1,
                "%s (%s)%s = {}, goid=, sys: 19531252006-019765625AvestanBOOLEANBengaliBooleanBrailleCOMMENTChanDirConvertCypriotDeseretElbasanGODEBUGGoArrayGranthaHanunooILLEGALIO waitInstAltInstNopJanuaryKEYWORDKannadaLeadingMandaicMarchenMultaniMyanmarOctoberOsmanyaRadicalSQRT1_2SharadaShavianSiddhamSignal SinhalaSoyomboSwapperTagalogTibetanTirhutaTuesdayUNKNOWN": 1,
                "value=_ENGINEabortedaccept4alt -> any -> booleanclosurecompilecomplexconsolecs     defaultextendsfinallyfloat32float64forEachfs     gctracegetDategetTimegetYeargs     indexOfinvalidisArraykey of messagenop -> number packagepanic: privater10    r11    r12    r13    r14    r15    r8     r9     rax    rbp    rbx    rcx    rdi    rdx    replacereverserflags rip    rsi    rsp    runningsetDatesetTimesetYearsignal stoppedsyscalltimeEndtoFixeduintptrunknownunshiftvalueOfwaitingwriteat etypes  goal": 1,
                "= is not  mcount= minutes nalloc= newval= nfreed= packed= pointer stack=[ status %!Month(%s:%d:%d(?%s:%s), idle: 15:04:0548828125ArmenianBalineseBopomofoBugineseCherokeeCyrillicDecemberDuployanEthiopicExtenderFebruaryFunctionGODEBUG=GeorgianGoStringGujaratiGurmukhiHiraganaInfinityInstFailInstRuneJavaneseKatakanaKayah_LiLinear_ALinear_BMahajaniNovemberOl_ChikiParseIntPhags_PaSaturdayTagbanwaTai_ThamTai_VietThursdayTifinaghTrailingURIErrorUgaritic[:word:][signal": 1,
                "stack=[argumentbad instcgocheckcontinuedebuggerfunctiongetHoursgetMonthgo1.12.5infinityinternalisFiniteisFrozenisSealedno anodeno erroropPseudoparseIntreadlinkrunnableruntime.scavengesetHourssetMonthsignal: strconv.toStringtrimLefttruncateunescapeunknown(writable (forced) -> node= as type  blocked= defersc= in use)": 1,
                "lockedg= lockedm= m->curg= ms cpu,  not in [ of type  runtime= s.limit= s.state= sigcode= threads= u_a/u_g= wbuf1.n= wbuf2.n=(unknown)+infinity, newval=, oldval=-Infinity-infinity/dev/null244140625: inuse: : status=<unknown>ArgumentsBassa_VahBhaiksukiCallSliceCuneiformDiacriticEvalErrorG.%s = {}Hex_DigitInheritedInstMatchInstRune1InterfaceKhudawadiLINUX_2.6MAX_VALUEMIN_VALUEMalayalamMongolianNabataeanPalmyreneParseBoolParseUintSamaritanSeptemberSundaneseTypeErrorWednesday[:^word:][:alnum:][:alpha:][:ascii:][:blank:][:cntrl:][:digit:][:graph:][:lower:][:print:][:punct:][:space:][:upper:]argumentsatomicor8bad indirbus errorchan sendcomplex64continuedcopystackctxt != 0decodeURIempty urlencodeURIfuncargs(getUTCDayinterfaceinterruptlastIndexlocaltimemSpanDeadmSpanFreemap[%s]%smultilinenewosprocno errorsomitemptypanicwaitpclmulqdqprotectedprototyperecover: reflect: rwxrwxrwxsignal 32signal 33signal 34signal 35signal 36signal 37signal 38signal 39signal 40signal 41signal 42signal 43signal 44signal 45signal 46signal 47signal 48signal 49signal 50signal 51signal 52signal 53signal 54signal 55signal 56signal 57signal 58signal 59signal 60signal 61signal 62signal 63signal 64stringifysubstringtrimRightundefinedunhandled} stack=[ MB goal,  actual": 1,
                "= flushGen  gfreecnt= pages at  returned  runqsize= runqueue= s.base()= spinning= stopwait= sweepgen  sweepgen= targetpc= throwing= until pc=%!Weekday((function(/dev/stdin12207031252006-01-022006T15:046103515625: parsing DeprecatedDevanagariGC forced": 1,
                "GOMAXPROCSGlagoliticIDENTIFIERKharoshthiManichaeanOld_ItalicOld_PermicOld_TurkicOther_MathParseFloatPhoenicianRangeErrorSaurashtra[:^alnum:][:^alpha:][:^ascii:][:^blank:][:^cntrl:][:^digit:][:^graph:][:^lower:][:^print:][:^punct:][:^space:][:^upper:][:xdigit:]^(?:0[xX])_reserved1atomicand8casgstatuscharCodeAtcomplex128enumerablegetMinutesgetSecondsgetUTCDategoroutine ignoreCaseimplementsinstanceofinvalidptrmSpanInUseowner diedparseFloatreaddirentrune <nil>runtime: gschedtracesemacquiresetMinutessetSecondssetUTCDateshort readterminatedtracefree(tracegc()": 1,
                "unknown pc  of size   (targetpc= gcwaiting= gp.status= heap_live= idleprocs= in status  m->mcache= mallocing= ms clock,  nBSSRoots= p->mcache= p->status= s.nelems=  schedtick= span.list=([^~!*()'])(anonymous)*NativeType/dev/stderr/dev/stdout30517578125: frame.sp=<anonymous>": 1,
                "<invalid opComment: %vGOTRACEBACKIdeographicInstCaptureInstRuneAnyNew_Tai_LueNot DefinedOld_PersianPau_Cin_HauSignWritingSoft_DottedSyntaxErrorWarang_CitiWhite_Space[:^xdigit:][object %s]alarm clockbad addressbad messagebad timedivbroken pipecgocall nilclobberfreeconstructorcreated by element of environmentfile existsfinal tokenfloat32nan2float64nan2float64nan3gccheckmarkgetFullYeargetUTCHoursgetUTCMonthi/o timeoutlastIndexOflost mcachemSpanManualmethodargs(reduceRightreflect.Setruntime: P runtime: p scheddetailsetFullYearsetUTCHourssetUTCMonthsetnonblockshort writestack faulttime: file toFloat(%T)toGMTStringtoISOStringtoLowerCasetoPrecisiontoUTCStringtoUpperCasetracealloc(unreachablevalue for \" = struct {  [recovered] allocCount  found at *( gcscandone  m->gsignal= minTrigger= nDataRoots= nSpanRoots= pages/byte": 1,
                "preemptoff= s.elemsize= s.sweepgen= span.limit= span.state= sysmonwait= t.spanKey=  wbuf1=<nil> wbuf2=<nil>%s error: %s) p->status=, consumed: , released: -byte limit": 1,
                "15258789062515:04:05 MST2014-04-13/1762939453125Bidi_ControlI/O possibleInstAltMatchInvalid DateJoin_ControlMeetei_MayekPahawh_HmongSora_SompengSyloti_Nagriabi mismatchaltmatch -> anynotnl -> bad flushGenbad g statusbad recoverycan't happencas64 failedchan receivechild exitedconfigurabledumping heapend tracegc": 1,
                "entersyscallexit status fromCharCodegcpacertracehost is downillegal seekinvalid slotisExtensiblelfstack.pushmadvdontneedreflect.Copyreleasep: m=runtime: gp=short buffertoDateStringtoTimeStringunexpected )unknown typewirep: p->m= != sweepgen  MB released": 1,
                "MB) workers= called from  failed with  flushedWork  gcscanvalid  heap_marked= idlethreads= in host name is nil, not  is too large nStackRoots= out of range s.spanclass= span.base()= syscalltick= work.nproc=  work.nwait= , gp->status=, not pointer-byte block (2006-01T15:042006T15:04:053814697265625<native code>GC sweep waitMasaram_GondiMende_KikakuiOld_HungarianSIGKILL: killSIGQUIT: quitURI malformedUnmatched ')'[object Null]bad flushGen bad map statedalTLDpSugct?exchange fullfatal error: getTypeInfo: getUTCMinutesgetUTCSecondsinvalid UTF-8invalid base isPrototypeOflen(str) <= 1level 3 resetload64 failedlocaleComparenil stackbasenot availableout of memoryparsing time power failuresetUTCMinutessetUTCSecondssrmount errorstill in liststop signal: timer expiredtoBoolean(%T)toExponentialtriggerRatio=value method xadd64 failedxchg64 failed}": 1,
                "sched={pc: (core dumped) but progSize  nmidlelocked= on zero Value out of range  t.npagesKey=  to finalizer  untyped args %v.string( %T)-thread limit": 1,
                "/proc/self/exe1907348632812595367431640625: extra text: GC assist waitGC worker initInstEmptyWidthMB": 1,
                "allocated Other_ID_StartPattern_SyntaxQuotation_MarkReferenceErrorSIGABRT: abortScript Timeout\" out of range\\.+*?()|[]{}^$allocfreetracebad allocCountbad span statebad stack sizedefinePropertyerror(%T, ...)file too largefinalizer waitgcstoptheworldgetPrototypeOfgetUTCFullYearhasOwnPropertyinvalid sourceinvalid syntaxis a directorykey size wronglevel 2 haltedlevel 3 haltednil elem type!no module datano such deviceprotocol errorruntime: full=s.allocCount= semaRoot queuesetUTCFullYearstack overflowstopm spinningstore64 failedsync.Cond.Waittext file busytoLocaleStringtoo many linkstoo many usersunexpected EOFunknown methodunreachable:  unsafe.Pointerwindow changedwork.full != 0  with GC prog": 1,
                "2006T15:04-0700476837158203125: cannot parse <invalid Value>ASCII_Hex_DigitFIXME TypeErrorGetAssetAsBytesHere be dragonsInvalid time %vMemfdCreate: %vOther_LowercaseOther_UppercasePsalter_Pahlavi]": 1,
                "morebuf={pc:advertise errorbad debugCallV1bad system callconsole.%s >>> force gc (idle)getMillisecondsinvalid paddingkey has expiredmalloc deadlockmissing mcache?ms: gomaxprocs=negative offsetnetwork is downno medium foundno such processnot a directoryrecovery failedruntime error: runtime: frame scan missed a gsetMillisecondsstartm: m has pstopm holding ptype conversion already": 1,
                "errno= mheap.sweepgen= not in ranges:": 1,
                "untyped locals , not a function/proc/self/fd/%d0123456789ABCDEF0123456789abcdef2006-01-02T15:042006-01T15:04:052384185791015625: value of type GC worker (idle)GODEBUG: value \"GetAssetAsStringImperial_AramaicInstRuneAnyNotNLMeroitic_CursiveMon, 02 Jan 2006Other_AlphabeticSIGNONE: no trapZanabazar_Square": 1,
                "runtime stack:": 1,
                "^\\x00-\\x{10FFFF}after object keybad frame layoutbad special kindbad symbol tablecastogscanstatusdefinePropertiesgc: unswept spangcshrinkstackoffinteger overflowinvalid argumentinvalid exchangeinvalid spdelta mSpanList.insertmSpanList.removemessage too longmissing stackmapno route to hostnon-Go function": 1,
                "object is remotepacer: H_m_prev=reflect mismatchregexp: Compile(remote I/O errorruntime:  g:  g=runtime: gp: gp=runtime: nelems=schedule: in cgosigaction failedstopped (signal)time: bad [0-9]*value size wrongversion mismatchworkbuf is empty initialHeapLive= spinningthreads=%s: Line %d:%d %s0123456789ABCDEFX0123456789abcdefx119209289550781252006T15:04:05.00059604644775390625: missing method GC assist markingNEGATIVE_INFINITYOld_North_ArabianOld_South_ArabianOther_ID_ContinuePOSITIVE_INFINITYSIGBUS: bus errorSIGCONT: continueSIGINT: interruptSentence_TerminalUnexpected numberUnexpected stringUnified_Ideographbad TinySizeClasscorrupt zip file entersyscallblockexec format errorfractional secondfutexwakeup addr=getTimezoneOffsetgp.waiting != nilin string literalinvalid bit size key align too biglocked m0 woke upmark - bad statusmarkBits overflowmissing closing )missing closing ]nextId too large:no data availablenotetsleepg on g0permission deniedpreventExtensionsreflect.Value.Capreflect.Value.Intreflect.Value.Lenreflect: New(nil)reflect: call of runtime: nameOff runtime: next_gc=runtime: pointer runtime: textOff runtime: typeOff scanobject n == 0select (no cases)stack: frame={sp:thread exhaustiontoLocaleLowerCasetoLocaleUpperCaseunknown caller pcwait for GC cyclewrong medium type  but memory size  because dotdotdot to non-Go memory %v (%v) %s %v (%v), locked to thread2006-01T15:04-07002006T15:04:05-0700298023223876953125: day out of rangeCaucasian_AlbanianRFS specific errorRegional_IndicatorUnterminated groupVariation_Selector[^\\x00-\\x{10FFFF}][object Undefined]bad lfnode addressbad manualFreeListbufio: buffer fullconnection refuseddecodeURIComponentencodeURIComponentfile name too longforEachP: not donegarbage collectiongetUTCMillisecondsidentifier removedin numeric literalindex out of rangeinput/output errorinvalid character multihop attemptedno child processesno locks availableoperation canceledracy use of timersreflect.Value.Callreflect.Value.Elemreflect.Value.Sendreflect.Value.Typereflect.Value.Uintreflect: Zero(nil)segmentation faultsetUTCMillisecondsstreams pipe errorsystem page size (toLocaleDateStringtoLocaleTimeStringtracebackancestorsunknown stash typeunknown time zone use of closed filevalue out of range called using nil * t.spanKey.npages= '%s' is not defined,  g->atomicstatus=, gp->atomicstatus=/usr/lib/locale/TZ/14901161193847656252006-01-02 15:04:052006-01-02T15:04:057450580596923828125Canadian_AboriginalFunction.toString()IDS_Binary_OperatorPattern_White_SpaceSIGTRAP: trace trapUnexpected token %v__vdso_gettimeofday_cgo_setenv missingafter array elementbad file descriptorbad kind in runfinqbad notifyList sizebad runtime": 1,
                "mstartbad value for fieldcgocall unavailabledevice not a streamdirectory not emptydisk quota exceededfile already closedfile already existsfile does not existgetOwnPropertyNamesillegal instructioninvalid URL escape m not found in allmmarking free objectmarkroot: bad indexmissing ']' in hostmspan.sweep: state=notesleep not on g0nwait > work.nprocspanic during mallocpanic during panic": 1,
                "panic holding lockspanicwrap: no ( in panicwrap: no ) in reflect.Value.Fieldreflect.Value.Floatreflect.Value.Indexreflect.Value.IsNilreflect.Value.Sliceruntime: insert t= runtime: pcdata is runtime: preempt g0semaRoot rotateLeftskip this directorystopm holding locksstopped (tty input)too many open filesunaligned sysUnusedunexpected InstFailunknown wait reasonvalue align too big markroot jobs done": 1,
                "to unallocated span%v is not a function/usr/share/zoneinfo/2006-01T15:04:05.00037252902984619140625: leftover defer sp=Egyptian_HieroglyphsError executing fileIDS_Trinary_OperatorMeroitic_HieroglyphsSIGALRM: alarm clockSIGTERM: terminationSeek: invalid offsetSeek: invalid whenceTerminal_PunctuationUndefined label '%s'[invalid char class]__vdso_clock_gettimebad defer size classbad font file formatbad system page sizebad use of bucket.bpbad use of bucket.mpchan send (nil chan)close of nil channelconnection timed outextra data in bufferfloating point errorforcegc: phase errorgc_trigger underflowgo of nil func valuegopark: bad g statusgzip: invalid headerinvalid repeat countinvalid request codeis a named type filejson: Unmarshal(nil json: Unmarshal(nil)key has been revokedmSpanList.insertBackmalloc during signalnon-empty swept listnotetsleep not on g0p mcache not flushedpacer: assist ratio=preempt off reason: propertyIsEnumerablereflect.Value.Methodreflect.Value.SetIntreflect.Value.Slice3reflect.makeFuncStubreflect: cannot use runtime: casgstatus runtime: double waitruntime: unknown pc semaRoot rotateRightstopped (tty output)time: invalid numbertrace: out of memoryurgent I/O conditionvalue > utf8.MaxRunewirep: already in goworkbuf is not emptywrite of Go pointer  gp.gcscanvalid=true": 1,
                "of unexported method previous allocCount=([eE][\\+\\-])0+([1-9])1862645149230957031252006-01-02T15:04-07002006-01T15:04:05-0700931322574615478515625Anatolian_HieroglyphsHere be dragons -- %sInscriptional_PahlaviOther_Grapheme_ExtendString not terminatedUnexpected identifierUnknown comparator %s_cgo_unsetenv missingafter top-level valuebad type in compare: block device requiredbufio: negative countcheckdead: runnable gconcurrent map writesdefer on system stackfindrunnable: wrong pin string escape codeinvalid named capturelink has been severedpackage not installedpanic on system stackread-only file systemreflect.Value.Complexreflect.Value.Pointerreflect.Value.SetUintreleasep: invalid argruntime: confused by runtime: newstack at runtime: newstack sp=runtime: work.nwait= stale NFS file handlestartlockedm: m has pstartm: m is spinningstate not recoverablestopg: invalid statustrace/breakpoint trapuser defined signal 1user defined signal 2virtual timer expired into Go struct field  received during fork": 1,
                "'%s' is not a function([^~!@#$&*()=:/,": 1,
                "?+'])/lib/time/zoneinfo.zip2006T15:04:05.000-07004656612873077392578125Inscriptional_ParthianSIGSTKFLT: stack faultSIGTSTP: keyboard stop[0-9eE\\+\\-\\.]|Infinityaddress already in useargument list too longassembly checks failedbad g->status in readybad sweepgen in refillcall not at safe pointcannot allocate memoryerror parsing regexp: freeIndex is not validgetenv before env initgzip: invalid checksuminteger divide by zerointerface conversion: invalid message lengthinvalid sourcemap typeinvalid value: %v (%T)json: unknown field %qminpc or maxpc invalidnetwork is unreachablenewRegExpObject: %s %snon-Go function at pc=oldoverflow is not nilprotocol not availableprotocol not supportedreflect.Value.MapIndexreflect.Value.SetFloatremote address changedruntime.main not on m0runtime: out of memoryruntime: work.nwait = runtime:scanstack: gp=s.freeindex > s.nelemsscanstack - bad statussend on closed channelslice length too largespan has no free spacestack not a power of 2timer goroutine (idle)trace reader (blocked)trace: alloc too largeunexpected length codevalue is not an objectwirep: invalid p state into Go value of type %s (and %d more errors)%v is not a constructor) must be a power of 2": 1,
                ", received remote type 2006-01-02T15:04:05.00023283064365386962890625<invalid reflect.Value>Array.length != Value{}CPU time limit exceededIllegal boolean literalIllegal break statementIllegal numeric literalInvalid UTF-8 characterLogical_Order_ExceptionMB during sweep": 1,
                "swept Noncharacter_Code_PointSIGIO: i/o now possibleSIGSYS: bad system callUnexpected end of input\", missing CPU support": 1,
                "bad %s slice length: %dbytes.Buffer: too largecan't convert to %s: %scannot convert %v to %vchan receive (nil chan)close of closed channeldevice or resource busyfatal: morestack on g0": 1,
                "flate: internal error: garbage collection scangcDrain phase incorrectgetBinding: %s: missinginterrupted system callinvalid URI for requestinvalid escape sequenceinvalid escape: \\%s: %qinvalid m->lockedInt = json: cannot unmarshal left over markroot jobsmakechan: bad alignmentmissing protocol schememissing type in runfinqmisuse of profBuf.writenanotime returning zerono space left on deviceoperation not permittedoperation not supportedpanic during preemptoffprocresize: invalid argprofiling timer expiredreferenceError == nil: reflect.Value.Interfacereflect.Value.NumMethodreflect.methodValueCallruntime: internal errorruntime: invalid type  runtime: netpoll failedruntime: s.allocCount= s.allocCount > s.nelemsschedule: holding lockssetBinding: %s: missingspan has no free stacksstack growth after forksyntax error in patternunexpected map key typeunexpected signal valueunknown empty width argunknown type in isZero unlock of unlocked lockwork.nwait > work.nproc/usr/share/lib/zoneinfo/1164153218269348144531252006-01-02T15:04:05-07002006-01-02T15:04:05.000Z582076609134674072265625Illegal return statementRawSockaddrAny too smallUnexpected reserved word\", required CPU feature": 1,
                "^[$_\\p{L}][$_\\p{L}\\d}]*$bad defer entry in panicbad defer size class: i=block index out of rangecan't scan our own stackconnection reset by peerdouble traceGCSweepStartencodeArray: nil elementfile size limit exceededflate: maxBits too largefloating point exceptionfunction not implementedgcDrainN phase incorrectgetOwnPropertyDescriptorhash of unhashable type initSpan: unaligned baseinvalid argument to Intnjson: unsupported type: level 2 not synchronizedlink number out of rangenon-empty decoder bufferout of streams resourcesqueuefinalizer during GCreflect.Value.SetComplexreflect.Value.UnsafeAddrrunqsteal: runq overflowruntime: found obj at *(runtime: predecessor t= span has no free objectsstack trace unavailable": 1,
                "structure needs cleaningthis should never happen to unused region of span2006-01-02T15:04:05Z07:002006-01T15:04:05.000-07002910383045673370361328125GODEBUG: can not enable \"Label '%s' already exists_cgo_thread_start missingallgadd: bad status Gidlearena already initializedbad status in shrinkstackbootstrap type wrong id: chansend: spurious wakeupcheckId: %d should be %d": 1,
                "checkdead: no m for timercheckdead: no p for timercould not locate asset %serror decoding []byte: %sinconsistent poll.fdMutexinvalid cross-device linkjson: Unexpected key typejson: unsupported value: missing stack in newstackmissing traceGCSweepStartnet/url: invalid userinfono buffer space availableno such device or addressno such file or directoryoperation now in progressreflect.Value.OverflowIntreflect.Value.SetMapIndexreflect: Bits of nil Typereleasep: invalid p stateremaining pointer buffersresource deadlock avoidedruntime:      t.spanKey= runtime: epollwait on fd runtime: misaligned func runtime: program exceeds runtime": 1,
                "lock: lock countslice bounds out of rangesocket type not supportedstartm: p has runnable gsstoplockedm: not runnableunexpected fault address  using unaddressable value using zero Value argument1455191522836685180664062572759576141834259033203125GODEBUG: can not disable \"Illegal continue statementIllegal hexadecimal numberRangeError: %f (%v) to intSIGSTOP: stop, unblockable^[a-zA-Z\\$][a-zA-Z0-9\\$]*$call from unknown functioncorrupted semaphore ticketentersyscall inconsistent forEachP: P did not run fnfreeSpan given cached spanfreedefer with d.fn != nilgob: local interface type initSpan: unaligned lengthinvalid argument to Int31ninvalid argument to Int63ninvalid port %q after hostinvalid request descriptorname not unique on networkno CSI structure availableno message of desired typenotewakeup - double wakeupout of memory (stackalloc)persistentalloc: size == 0reflect.Value.CanInterfacereflect.Value.MethodByNamereflect.Value.OverflowUintrequired key not availableruntime: bad span s.state=startlockedm: locked to meunlock of unlocked rwmutex is not assignable to type  returned wrong type: have !#$%&()*+-./:<=>?@[]^_{|}~ 363797880709171295166015625G waiting list is corruptedIllegal newline after throwRangeError: %d (%v) to int8RangeError: %f (%v) to uintSIGILL: illegal instructionSIGXCPU: cpu limit exceeded[\\+\\-]?(?:[Ii]nf$|infinity)\"2006-01-02T15:04:05Z07:00\"address not a stack addressafter object key:value pairbad data: undefined type %scan't convert from %q to %qchannel number out of rangecommunication error on senddecode can't handle type %sgcstopm: not waiting for gcgrowslice: cap out of rangeinternal lockOSThread errorinvalid argument to Shuffleinvalid profile bucket typeinvalid type name length %dkey was rejected by servicelarge span treap rotateLeftmakechan: size out of rangemakeslice: cap out of rangemakeslice: len out of rangemspan.sweep: bad span statenot a XENIX named type fileos: process not initializedos: unsupported signal typeprogToPointerMask: overflowreflect.Value.OverflowFloatrestartg: unexpected statusrunlock of unlocked rwmutexruntime: checkdead: find g runtime: checkdead: nmidle=runtime: corrupted polldescruntime: netpollinit failedruntime: thread ID overflowruntime": 1,
                "unlock: lock countsignal received during forksigsend: inconsistent statestack size not a power of 2startm: negative nmspinningstopTheWorld: holding lockstime: invalid location namework.nwait was > work.nproc args stack map entries for 18189894035458564758300781252006-01-02T15:04:05.000-07009094947017729282379150390625FixedStack is not power-of-2Prepended_Concatenation_MarkRangeError: %d (%v) to int16RangeError: %d (%v) to int32RangeError: %d (%v) to uint8SIGHUP: terminal line hangupSIGWINCH: window size changeUnterminated character class[originating from goroutine can't happen: encode type %scan't preserve unlinked spancomparing uncomparable type destination address requiredfatal: morestack on gsignal": 1,
                "file descriptor in bad statefindrunnable: netpoll with pgcstopm: negative nmspinninggob: cannot encode nil valuegob: duplicate type receivedgob: unknown size of uintptrinvalid runtime symbol tableinvalid type passed to new()json: Unmarshal(non-pointer large span treap rotateRightmheap.freeSpanLocked - span missing stack in shrinkstackmspan.sweep: m is not lockedneed padding in bucket (key)newproc1: new g is not Gdeadnewproc1: newg missing stacknotewakeup - double wakeup (os: process already finishedos: process already releasedprotocol driver not attachedreflect.MakeSlice: len > capreflect: In of non-func typereflect: Key of non-map typeregion exceeds uintptr rangeruntime: bad lfnode address runtime: casgstatus: oldval=runtime: no module data for runtime: stat overflow: val strconv:": 1,
                "> (den<<shift)/2unexpected end of JSON inputunsupported compression for  cannot be converted to type 45474735088646411895751953125LockOSThread nesting overflowMon, 02 Jan 2006 15:04:05 GMTMon, 02 Jan 2006 15:04:05 MSTRangeError: %d (%v) to uint16RangeError: %d (%v) to uint32RangeError: %f (%v) to uint64SIGPIPE: write to broken pipeSIGPWR: power failure restartTime.UnmarshalBinary: no dataaddspecial on invalid pointerbufio.Scanner: token too longcrypto/aes: invalid key size executing on Go runtime stackfunction () { [native code] }gc done but gcphase != _GCoffgfput: bad status (not Gdead)gob: encoder: message too biggob: unknown size of int/uintinvalid character class rangeinvalid length of trace eventio: read/write on closed pipemachine is not on the networkno XENIX semaphores availablenumerical result out of rangeoperation already in progresspadding contained in alphabetprotocol family not supportedre2: Invalid (%s) <lookahead>reflect.Value.OverflowComplexreflect: Elem of invalid typereflect: Out of non-func typeruntime: impossible type kindruntime: marking free object runtime: mmap: access denied": 1,
                "runtime: p.gcMarkWorkerMode= runtime: split stack overflowruntime: stat underflow: val runtime: sudog with non-nil cruntime: unknown pc in defer semacquire not on the G stackstring concatenation too longsyntax error scanning booleantoo many open files in systemtraceback has leftover defers (types from different scopes) in prepareForSweep": 1,
                "sweepgen  locals stack map entries for %/panic//%@: %v != reflect.Map%?/(panic|fatal|check)(?:\\s|$)227373675443232059478759765625GODEBUG: unknown cpu feature \"Invalid regular expression: %sMapIter.Key called before NextRangeError: %f (%v) to float32SIGPROF: profiling alarm clockSIGUSR1: user-defined signal 1SIGUSR2: user-defined signal 2SIGVTALRM: virtual alarm clockabi mismatch detected between assignment to entry in nil mapattempt to register empty namecheckdead: inconsistent countsfailed to get system page sizefreedefer with d._panic != nilgob: decoding into local type in exponent of numeric literalinappropriate ioctl for deviceinvalid function symbol table": 1,
                "invalid pointer found on stacklength mismatch in decodeArraylength mismatch in ignoreArraylooking for beginning of valueneed padding in bucket (value)node is not its parent's childprotocol wrong type for socketreflect: Len of non-array typerunqputslow: queue is not fullruntime: bad pointer in frame runtime: found in object at *(runtime: impossible type kind socket operation on non-socketstrings: negative Repeat countsync: inconsistent mutex statesync: unlock of unlocked mutextype %s has no exported fieldsunaddressable value of type %s%s is not assignable to type %s) not in usable address space: ...additional frames elided...": 1,
                ".lib section in a.out corrupted11368683772161602973937988281255684341886080801486968994140625Already saw a default in switchCannot access member '%s' of %sSIGSEGV: segmentation violationVM hit timeout after %v secondsbad write barrier buffer boundscall from within the Go runtimecannot assign requested addresscasgstatus: bad incoming valuescheckmark found unmarked objectencodeReflectValue: nil elementencoding/hex: invalid byte: %#Uentersyscallblock inconsistent expected %d argument(s)": 1,
                "got %dfmt: unknown base": 1,
                "can't happenfunction %s() { [native code] }in literal null (expecting 'l')in literal null (expecting 'u')in literal true (expecting 'e')in literal true (expecting 'r')in literal true (expecting 'u')inserting span already in treapinternal error - misuse of itabjson: invalid number literal %qmalformed time zone informationmergeRuneSets odd length []runenon in-use span in unswept listpacer: sweep done at heap size reflect.MakeSlice: negative capreflect.MakeSlice: negative lenreflect: NumIn of non-func typeresetspinning: not a spinning mruntime: cannot allocate memoryruntime: split stack overflow: signal_recv: inconsistent state (types from different packages)28421709430404007434844970703125Invalid left-hand side in for-inMapIter.Value called before NextMaximum call stack size exceededSIGFPE: floating-point exceptionSIGTTOU: background write to tty\" not supported for cpu option \"bootstrap type already present: bufio: invalid use of UnreadBytebufio: invalid use of UnreadRunebufio: tried to fill full buffercrypto/aes: input not full blockend outside usable address spacein literal false (expecting 'a')in literal false (expecting 'e')in literal false (expecting 'l')in literal false (expecting 's')non-Go code disabled sigaltstacknumerical argument out of domainpanic while printing panic valuere2: Invalid \\%d <backreference>re2: Invalid \\%s <backreference>reflect.nameFrom: tag too long: reflect: NumOut of non-func typeremovespecial on invalid pointerresource temporarily unavailableruntime: mcall function returnedruntime: newstack called from g=runtime: stack split at bad timeruntime: sudog with non-nil elemruntime: sudog with non-nil nextruntime: sudog with non-nil prevscanstack: goroutine not stoppedsoftware caused connection abortsweep increased allocation countsync: Unlock of unlocked RWMutexsync: negative WaitGroup counteruse of closed network connection of method on nil interface value%/panic//%@: %v != reflect.Struct142108547152020037174224853515625710542735760100185871124267578125GODEBUG: no value specified for \"SIGCHLD: child status has changedSIGTTIN: background read from ttySIGXFSZ: file size limit exceededbase outside usable address spacebytes.Buffer.Grow: negative countbytes.Reader.Seek: invalid whenceconcurrent map read and map writecreateBinding: %s: already existscrypto/aes: output not full blockfindrunnable: negative nmspinningfreeing stack not in a stack spanheapBitsSetType: unexpected shiftleafCounts[maxBits][maxBits] != nmisrounded allocation in sysAllocre2: Illegal branch in scanEscapereflect.nameFrom: name too long: reflect: ChanDir of non-chan typereflect: Field index out of rangereflect: Field of non-struct typereflect: array index out of rangereflect: slice index out of rangeregexp: unhandled case in compileruntime: castogscanstatus oldval=runtime: epollcreate failed with runtime: failed mSpanList.insert runtime: goroutine stack exceeds runtime: memory allocated by OS [runtime: name offset out of rangeruntime: text offset out of rangeruntime: type offset out of rangestackalloc not on scheduler stackstoplockedm: inconsistent lockingsync: RUnlock of unlocked RWMutextoo many levels of symbolic linkstreap insert finds a broken treaptreap node with nil spanKey foundwaiting for unsupported file type3552713678800500929355621337890625Missing catch or finally after tryOTTO DOES NOT UNDERSTAND THIS TYPEOther_Default_Ignorable_Code_PointRangeError: %v to reflect.Kind: %vSIGURG: urgent condition on socketconverting %v to %v would overflowcrypto/aes: invalid buffer overlapforEachP: sched.safePointWait != 0illegal base64 data at input byte in \\u hexadecimal character escapeinvalid escape: \\%s: len(%q) != %dinvalid nested repetition operatorinvalid or unsupported Perl syntaxmspan.ensureSwept: m is not lockedname too long (%d bytes): %.20q...out of memory allocating allArenasreflect.FuncOf: too many argumentsreflect: Field index out of boundsreflect: Method index out of rangereflect: recv on send-only channelreflect: send on recv-only channelreflect: string index out of rangeruntime.SetFinalizer: cannot pass runtime: g is running but p is notruntime: unexpected return pc for schedule: spinning with local workspan and treap sizes do not match?too many references: cannot splice177635683940025046467781066894531252006-01-02T15:04:05.999999999Z07:0088817841970012523233890533447265625VM encountered unexpected error: %v^(.*)(?:(Z)|([\\+\\-]\\d{2}):(\\d{2}))$converting %v to %v would underflowencoding/hex: odd length hex stringfile type does not support deadlinefindfunc: bad findfunctab entry idxfindrunnable: netpoll with spinningflate: corrupt input before offset greyobject: obj not pointer-alignedmheap.freeSpanLocked - invalid freenetwork dropped connection on resetos/signal: Notify using nil channelpersistentalloc: align is too largepidleput: P has non-empty run queuereflect.MakeSlice of non-slice typeruntime: close polldesc w/o unblockruntime: inconsistent read deadlinestring data too long for buffer: %dstrings.Reader.Seek: invalid whencetraceback did not unwind completelytransport endpoint is not connected0123456789abcdefghijklmnopqrstuvwxyz444089209850062616169452667236328125Error opening memory file descriptorGo pointer stored into non-Go memoryInvalid left-hand side in assignmentMStats vs MemStatsType size mismatchTime.UnmarshalBinary: invalid lengthaccessing a corrupted shared librarybytes.Reader.ReadAt: negative offsetbytes.Reader.Seek: negative positioncould not initialize virtual machinekey size not a multiple of key alignreflect: IsVariadic of non-func typereflect: NumField of non-struct typereflect: funcLayout of non-func typeruntime: bad notifyList size - sync=runtime: inconsistent write deadlineruntime: invalid pc-encoded table f=runtime: invalid typeBitsBulkBarrierruntime: mcall called on m->g0 stackruntime: sudog with non-nil waitlinkruntime: unblock on closing polldescruntime: wrong goroutine in newstacksignal arrived during cgo execution": 1,
                "strings.Builder.Grow: negative countsyntax error scanning complex numbertoo many arguments for call to new()uncaching span but s.allocCount == 0) is smaller than minimum page size (2220446049250313080847263336181640625Converting circular structure to JSONInvalid regular expression: missing /\\$(?:[\\$\\&\\'\\`1-9]|0[1-9]|[1-9][0-9])_cgo_notify_runtime_init_done missingall goroutines are asleep - deadlock!bad data: ignore can't handle type %sbytes.Buffer: truncation out of rangecannot exec a shared library directlycipher: message authentication failedcrypto/cipher: incorrect GCM tag sizecrypto/cipher: invalid buffer overlapgob NewTypeObject can't handle type: name not registered for interface: %qoperation not possible due to RF-killreflect.Value.Bytes of non-byte slicereflect.Value.Bytes of non-rune slicereflect.Value.Convert: value of type reflect: Bits of non-arithmetic Type runtime: allocation size out of rangeruntime: failed mSpanList.insertBack setprofilebucket: profile already setstartTheWorld: inconsistent mp->nextpstrings: Repeat count causes overflowtype not registered for interface: %svalue too large for defined data type1110223024625156540423631668090820312555511151231257827021181583404541015625Unable to test for equality: %v ==? %vafter decimal point in numeric literalarg size to reflect.call more than 1GBcan not access a needed shared libraryconcurrent map iteration and map writedecode: corrupted data: negative deltaempty name for remote field of type %sencoding alphabet is not 64-bytes longexpected at least %d arguments": 1,
                "got %dgcBgMarkWorker: blackening not enabledgob: DecodeValue of unassignable valuegob: unknown type id or corrupted datamakechan: invalid channel element typenot enough arguments for call to new()reflect: Method on nil interface valueruntime: blocked read on free polldescruntime: sudog with non-false isSelectstrings.Reader.ReadAt: negative offsetstrings.Reader.Seek: negative positionsyscall: readInt with unsupported sizetime: missing Location in call to Date2006-01-02 15:04:05.999999999 -0700 MST277555756156289135105907917022705078125GobDecoder: length too large for buffercan't represent recursive pointer type gob: cannot encode nil pointer of type heapBitsSetTypeGCProg: small allocationmismatched count during itab table copymissing argument to repetition operatormspan.sweep: bad span state after sweepout of memory allocating heap arena mapreflect.MakeMapWithSize of non-map typereflect: FieldByName of non-struct typeruntime: blocked write on free polldescruntime: casfrom_Gscanstatus failed gp=runtime: function symbol table header: span and treap node npages do not matchstack growth not allowed in system calltrailing backslash at end of expressiontransport endpoint is already connected13877787807814456755295395851135253906256938893903907228377647697925567626953125Here be dragons: cmpl.parseStatement(%T)Invalid identifier escape value: %c (%s)MapIter.Key called on exhausted iteratoraddress family not supported by protocolbulkBarrierPreWrite: unaligned argumentscannot free workbufs when work.full != 0crypto/cipher: message too large for GCMcrypto/cipher: output smaller than inputdeferproc: d.panic != nil after newdeferin.value.(Value) != true": 1,
                "in.value is %Trefill of span with free space remainingreflect.Value.Call: call of nil functionreflect.Value.Call: wrong argument countreflect.Value.SetBytes of non-byte slicereflect.Value.setRunes of non-rune slicereflect: FieldByIndex of non-struct typeruntime.SetFinalizer: first argument is runtime: out of memory: cannot allocate runtime: typeBitsBulkBarrier with type  value size not a multiple of value alignwrong type (%s) for received field %s.%s received on thread with no signal stack": 1,
                "%s slice too big: %d elements of %d bytes34694469519536141888238489627838134765625Here be dragons: cmpl.parseExpression(%T)MapIter.Next called on exhausted iteratorTime.UnmarshalBinary: unsupported versionbinary: varint overflows a 64-bit integerbytes.Buffer.WriteTo: invalid Write countbytes.Reader.WriteTo: invalid Write countcan't call pointer on a non-pointer ValuegcSweep being done but phase is not GCoffgob: attempt to decode into a non-pointerjson: error calling MarshalJSON for type mheap.freeSpanLocked - invalid span statemheap.freeSpanLocked - invalid stack freenet/url: invalid control character in URLobjects added out of order or overlappingreflect.Value.Addr of unaddressable valueruntime.SetFinalizer: second argument is runtime: blocked read on closing polldescruntime: typeBitsBulkBarrier without typesetCheckmarked and isCheckmarked disagreestopTheWorld: not stopped (stopwait != 0)strconv: illegal AppendInt/FormatInt basetime: missing Location in call to Time.IntoString() radix must be between 2 and 36 received but handler not on signal stack": 1,
                "//# sourceMappingURL=data:application/json173472347597680709441192448139190673828125867361737988403547205962240695953369140625Calling RegExp.exec on a non-RegExp objectJSON.stringify: invalid length: %v (%[1]T)MapIter.Value called on exhausted iteratorTime.MarshalBinary: unexpected zone offsetacquireSudog: found s.elem != nil in cachecandidate mspan for allocation is not freegob: bad data: field numbers out of boundsgob: encoded unsigned integer out of rangegrew heap, but no adequate free span foundlooking for beginning of object key stringnon-empty mark queue after concurrent markon a locked thread with no template threadpersistentalloc: align is not a power of 2reflect: Call with too few input argumentsruntime: blocked write on closing polldescsync/atomic: store of nil value into Valueunexpected signal during runtime executionunsupported type %v for numeric conversion(?i)(?:%)(3B|2F|3F|3A|40|26|3D|2B|24|2C|23)Here be dragons: evaluate_nodeStatement(%T)bufio: tried to rewind past start of buffercandidate mspan for allocation is too smallgcBgMarkWorker: unexpected gcMarkWorkerModeheapBitsSetTypeGCProg: unexpected bit countinterrupted system call should be restartedmultiple Read calls return no data or errorreflect: Call with too many input argumentsreflect: CallSlice of non-variadic functionreflect: FieldByNameFunc of non-struct typereflect: nil type passed to Type.Implementsruntime.SetFinalizer: finalizer already setruntime.SetFinalizer: first argument is nilruntime: casfrom_Gscanstatus bad oldval gp=runtime: heapBitsSetTypeGCProg: total bits runtime: releaseSudog with non-nil gp.paramunknown runnable goroutine during bootstrap using value obtained using unexported fieldHere be dragons: evaluate_nodeExpression(%T)Invalid identifier escape character: %c (%s)argument type mismatch - expected %s, got %Tconverting float64 to float32 would overflowencoding alphabet contains newline charactergcmarknewobject called while doing checkmarkinvalid conversion of %q to reflect.Kind: %vout of memory allocating heap arena metadatareflect: call of MakeFunc with non-Func typereflect: funcLayout with interface receiver reflect: function created by MakeFunc using reflect: slice length out of range in SetLenruntime: lfstack.push invalid packing: node=toFixed() precision must be between 0 and 20Here be dragons: parseProgram.declaration(%T)cannot send after transport endpoint shutdownexitsyscall: syscall frame is no longer validheapBitsSetType: called with non-pointer typeignore decode: corrupted data: negative deltainvalid value (map): missing runtime: %v (%T)reflect: internal error: invalid method indexreflect: nil type passed to Type.AssignableToruntime: failed mSpanList.remove span.npages= returned value obtained from unexported fieldbytes.Reader.UnreadByte: at beginning of slicebytes.Reader.UnreadRune: at beginning of slicecipher.NewOFB: IV length must equal block sizefirst path segment in URL cannot contain coloninvalid slice length %d: exceeds input size %dlength of string exceeds input size (%d bytes)memory reservation exceeds address space limitpanicwrap: unexpected string after type name: reflect.Value.Slice: slice index out of boundsreflect: nil type passed to Type.ConvertibleToreflect: slice capacity out of range in SetCapruntime: debugCallV1 called by unknown caller runtime: failed to create new OS thread (have runtime: name offset base pointer out of rangeruntime: panic before malloc heap initialized": 1,
                "runtime: text offset base pointer out of rangeruntime: type offset base pointer out of rangestopTheWorld: not stopped (status != _Pgcstop)toPrecision() precision must be greater than 1P has cached GC work at end of mark terminationattempting to link in too many shared librariesbufio: reader returned negative count from Readinvalid string length %d: exceeds input size %dinvalid type name length %d: exceeds input sizeinvalid value (slice): missing runtime: %v (%T)reflect.Value.Slice3: slice index out of boundsreflect.Value.UnsafeAddr of unaddressable valuereflect: CallSlice with too few input argumentsNODE: %v, Comments: %v, Future: %v(LINEBREAK:%v)Time.MarshalJSON: year outside of range [0,9999]Time.MarshalText: year outside of range [0,9999]bufio: writer returned negative count from Writeinvalid value (struct): missing runtime: %v (%T)reflect: CallSlice with too many input argumentsruntime: cannot map pages in arena address spacestrconv: illegal AppendFloat/FormatFloat bitSizebad interface encoding: name too large for buffercasgstatus: waiting for Gwaiting but is Grunnableconverting %v to %v would cause loss of precisiongob: registering duplicate names for %s: %q != %qgob: registering duplicate types for %q: %s != %sinvalid conversion of %v (%v) to reflect.Kind: %vinvalid memory address or nil pointer dereferenceinvalid or incomplete multibyte or wide characterpanicwrap: unexpected string after package name: reflect.Value.Slice: slice of unaddressable arrayruntime.reflect_makemap: unsupported map key types.allocCount != s.nelems && freeIndex == s.nelemsstrconv: internal error, rest != 0 but needed > 0strconv: num > den<<shift in adjustLastDigitFixedstrings.Reader.UnreadByte: at beginning of stringstrings.Reader.UnreadRune: at beginning of stringstrings.Reader.WriteTo: invalid WriteString countattempt to execute system stack code on user stackcrypto/cipher: incorrect nonce length given to GCMinvalid uint data length %d: exceeds input size %dmallocgc called with gcphase == _GCmarkterminationrecursive call during initialization - linker skewreflect.Value.Slice3: slice of unaddressable arrayJSON decoder out of sync - data changing underfoot?can't set embedded pointer to unexported struct: %vfatal: systemstack called from unexpected goroutinecasfrom_Gscanstatus: gp->status is not in scan statedecode: corrupted data: non-zero delta for singletonruntime.SetFinalizer: pointer not in allocated blockruntime: use of FixAlloc_Alloc before FixAlloc_Init": 1,
                "Expecting a function in instanceof check, but got: %vTime.MarshalBinary: zone offset has fractional minutefunction symbol table not sorted by program counter: namespace %s is already defined in virtual machine %sreflect.Value.Slice: string slice index out of boundsreflect: non-interface type passed to Type.ImplementsHere be dragons: cmpl.parseProgram.DeclarationList(%T)": 1,
                "goroutine running on other thread": 1,
                "stack unavailable": 1,
                "bytes.Buffer: reader returned negative count from ReadgcControllerState.findRunnable: blackening not enabledno goroutines (main called runtime.Goexit) - deadlock!reflect.FuncOf does not support more than 50 argumentsbufio.Scanner: SplitFunc returns negative advance countcasfrom_Gscanstatus:top gp->status is not in scan stategentraceback callback cannot be used with non-zero skipnewproc: function arguments too large for new goroutinereflect.FuncOf: last arg of variadic func must be slicereflect: internal error: invalid use of makeMethodValueruntime error: could not locate the JSON runtime objectbad interface encoding: data length too large for bufferin gcMark expecting to see gcphase as _GCmarkterminationinvalid interface value length %d: exceeds input size %dstrings: illegal use of non-zero Builder copied by valueGobDecoder: invalid data length %d: exceeds input size %dgentraceback cannot trace user goroutine on its own stacknon-Go code set up signal handler without SA_ONSTACK flagruntime:stoplockedm: g is not Grunnable or Gscanrunnable": 1,
                "sync: WaitGroup misuse: Add called concurrently with Waittype mismatch: no fields matched compiling decoder for %sgob: cannot encode nil pointer of type %s inside interfacejson: cannot set embedded pointer to unexported struct: %vbufio.Scanner: SplitFunc returns advance count beyond inputreflect: indirection through nil pointer to embedded structruntime: mmap: too much locked memory (check 'ulimit -l').": 1,
                "sync/atomic: store of inconsistently typed value into Valuesync: WaitGroup is reused before previous Wait has returnedbytes.Reader.UnreadRune: previous operation was not ReadRunesourcemap: got version=%d, but only 3rd version is supportedCannot supply flags when constructing one RegExp from anotherreflect: wrong return count from function created by MakeFuncruntime: may need to increase max user processes (ulimit -u)": 1,
                "type mismatch in decoder: want struct type %s": 1,
                "got non-structfound bad pointer in Go heap (incorrect use of unsafe or cgo?)runtime: internal error: misuse of lockOSThread/unlockOSThreadstrings.Reader.UnreadRune: previous operation was not ReadRuneABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_decoding array or slice: length exceeds input size (%d elements)json: invalid number literal, trying to unmarshal %q into Number": 1,
                "runtime.SetFinalizer: pointer not at beginning of allocated blockstrconv: internal error: extFloat.FixedDecimal called with n == 0decoding int array or slice: length exceeds input size (%d elements)runtime:greyobject: checkmarks finds unexpected unmarked object obj=decoding bool array or slice: length exceeds input size (%d elements)decoding int8 array or slice: length exceeds input size (%d elements)decoding uint array or slice: length exceeds input size (%d elements)Here be dragons: evaluate_nodeObjectLiteral: invalid property.Kind: %vbytes.Buffer: UnreadByte: previous operation was not a successful readdecoding int16 array or slice: length exceeds input size (%d elements)decoding int32 array or slice: length exceeds input size (%d elements)decoding int64 array or slice: length exceeds input size (%d elements)decoding string array or slice: length exceeds input size (%d elements)decoding uint16 array or slice: length exceeds input size (%d elements)decoding uint32 array or slice: length exceeds input size (%d elements)decoding uint64 array or slice: length exceeds input size (%d elements)json: invalid use of ,string struct tag, trying to unmarshal %q into %vtoo many concurrent operations on a single file or socket (max 1048575) can only be decoded from remote interface type": 1,
                "received concrete type decoding float32 array or slice: length exceeds input size (%d elements)decoding float64 array or slice: length exceeds input size (%d elements)decoding uintptr array or slice: length exceeds input size (%d elements)bytes.Buffer: UnreadRune: previous operation was not a successful ReadRunedecoding complex64 array or slice: length exceeds input size (%d elements)can't convert object": 1,
                "field %q was supplied but does not exist on target %vdecoding complex128 array or slice: length exceeds input size (%d elements)runtime: found space for saved base pointer, but no framepointer experiment": 1,
                "json: invalid use of ,string struct tag, trying to unmarshal unquoted value into %vreflect.Value.Interface: cannot return value obtained from unexported field or methodconverting JavaScript values to Go functions with more than one return value is currently not supportedNoMatchEmptyMatchLiteralCharClassAnyCharNotNLAnyCharBeginLineEndLineBeginTextEndTextWordBoundaryNoWordBoundaryCaptureStarPlusQuestRepeatConcatAlternate00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899": 1,
                "#\" ###": 1,
                "KKKHHH": 1,
                "GGGGGGG": 1,
                "#!a A`": 1,
                "`( 0)@": 1,
                "!a`d A": 1,
                "%%%%%!  %": 1,
                "'gcedD": 1,
                "@DLE (A": 1,
                "oommmmmmm": 1,
                "@BFGED": 2,
                "333##\"\"": 1,
                "\"#2:>6\"\"": 1,
                "\" $,@A": 1,
                "(!#cbd`": 1,
                "@DLE (BA": 1,
                "----------": 1,
                "(89==9": 1,
                "@BDdeumd": 1,
                "'''''''!!  '&": 1,
                "@` !AH": 1,
                "#######!": 1,
                "!\"b`@B": 1,
                "@BJkKiI": 1,
                "@B! \"$": 1,
                "@BFOoge`a": 1,
                "Hh`d fbca@q": 1,
                "@BFGONMLHI": 1,
                "@`ACca": 1,
                "#%$c@`": 1,
                "(*:89)": 1,
                "@BFGONnmlhHI": 1,
                "@BFGONMLD": 1,
                "$\"b `@": 1,
                "----,,,,,,,,,((((-": 1,
                "CAa`pxhH": 1,
                ")!!!!!": 1,
                "===55540": 1,
                "440=======": 1,
                ",$NBJC": 1,
                "%!! $$              !!  %": 1,
                "--))))))))))))))))))))))))())(": 1,
                "g(g(g(g(G(G(C(@(@(": 1,
                "(C(C(@(": 1,
                "K&KfKv": 1,
                ")!!!!!!!!!!": 1,
                "B@@A@`": 1,
                "))))!!!": 1,
                "))))))))!!": 1,
                "!!!!!!!!!!": 1,
                "!!!!!!": 1,
                "!\"$%&*,-.2568<=ABCDEIQTUVX\\bcefhj": 1,
                "$\"\"\"\"'I$": 1,
                "DDDDTU": 1,
                "UUUUUU": 3,
                "UUUUUUU": 2,
                "UUUUUUUU": 1,
                "UUUUUUUUUU": 1,
                "UUUUUUUUUUU": 1,
                "UUUUUUUUUUUUUUUUUUUUU": 1,
                "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU": 1,
                "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<": 1,
                "D$<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<": 1,
                "UUUUUUUSUU": 1,
                "``````": 1,
                "<<<<<<<<<<<<<<<<": 1,
                "xxxxxxxxxxxxxxxx": 1,
                "@@@@@@@@@@@@@@@@": 1,
                "@@@@@@@@@@@@@@@@i": 1,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"": 2,
                "DDDDDDDDDDDDDDDD": 2,
                "%$$$$$$$$$$$": 1,
                "HHHHHHHHHHHHHHHH": 2,
                "!!!!!!!!!!!!!!!!": 2,
                "BBBBBBBBBBBBBBBB": 2,
                "$$$$$$$$$$$$$$$$": 1,
                "WUUUUU": 1,
                "UUUUUUUUUUUUU": 1,
                "UUUUUUUUUUUUUUUU": 1,
                "\\x08\\x0": 1,
                "S=v<y5": 1,
                "?333333": 2,
                "?ffffff": 2,
                "333333": 1,
                "/opt/go": 1,
                "call frame too large": 1,
                "@UUUUUU": 1,
                "?UUUUUU": 1,
                "!(+15<AIJ3": 1,
                "$).6:?DHN": 1,
                "(.19ACJNS": 1,
                "&+,0133456": 1,
                "&26>ISt": 1,
                "!$(+-/013": 1,
                ".noptrdata": 1,
                ".noptrbss": 1,
                ".note.go.buildid": 1,
                ".elfdata": 1,
                ".rodata": 1,
                ".typelink": 1,
                ".itablink": 1,
                ".gosymtab": 1,
                ".gopclntab": 1,
                ".shstrtab": 1,
                "sync/atomic.(*Value).Load": 1,
                "sync/atomic.(*Value).Store": 1,
                "sync/atomic.CompareAndSwapUintptr": 1,
                "sync/atomic.StoreUint32": 1,
                "sync/atomic.StoreUintptr": 1,
                "internal/cpu.Initialize": 1,
                "internal/cpu.processOptions": 1,
                "internal/cpu.indexByte": 1,
                "internal/cpu.doinit": 1,
                "internal/cpu.isSet": 1,
                "internal/cpu.cpuid": 1,
                "internal/cpu.xgetbv": 1,
                "type..hash.internal/cpu.CacheLinePad": 1,
                "type..eq.internal/cpu.CacheLinePad": 1,
                "type..hash.internal/cpu.arm64": 1,
                "type..eq.internal/cpu.arm64": 1,
                "type..hash.internal/cpu.option": 1,
                "type..eq.internal/cpu.option": 1,
                "type..hash.internal/cpu.x86": 1,
                "type..eq.internal/cpu.x86": 1,
                "type..hash.[15]internal/cpu.option": 1,
                "type..eq.[15]internal/cpu.option": 1,
                "runtime/internal/atomic.Cas64": 1,
                "runtime/internal/atomic.Casuintptr": 1,
                "runtime/internal/atomic.Storeuintptr": 1,
                "runtime/internal/atomic.Store": 1,
                "runtime/internal/atomic.Store64": 1,
                "internal/bytealg.countGeneric": 1,
                "internal/bytealg.countGenericString": 1,
                "internal/bytealg.init.0": 1,
                "internal/bytealg.init": 1,
                "runtime.cmpstring": 1,
                "cmpbody": 1,
                "internal/bytealg.Count": 1,
                "internal/bytealg.CountString": 1,
                "countbody": 1,
                "internal/bytealg.Equal": 1,
                "runtime.memequal": 1,
                "runtime.memequal_varlen": 1,
                "memeqbody": 1,
                "internal/bytealg.Index": 1,
                "internal/bytealg.IndexString": 1,
                "indexbody": 1,
                "internal/bytealg.IndexByte": 1,
                "internal/bytealg.IndexByteString": 1,
                "indexbytebody": 1,
                "runtime.memhash0": 1,
                "runtime.memhash8": 1,
                "runtime.memhash16": 1,
                "runtime.memhash128": 1,
                "runtime.memhash_varlen": 1,
                "runtime.strhash": 1,
                "runtime.f32hash": 1,
                "runtime.fastrand": 1,
                "runtime.f64hash": 1,
                "runtime.c64hash": 1,
                "runtime.c128hash": 1,
                "runtime.interhash": 1,
                "runtime.isDirectIface": 1,
                "runtime.nilinterhash": 1,
                "runtime.memequal0": 1,
                "runtime.memequal8": 1,
                "runtime.memequal16": 1,
                "runtime.memequal32": 1,
                "runtime.memequal64": 1,
                "runtime.memequal128": 1,
                "runtime.f32equal": 1,
                "runtime.f64equal": 1,
                "runtime.c64equal": 1,
                "runtime.c128equal": 1,
                "runtime.strequal": 1,
                "runtime.interequal": 1,
                "runtime.nilinterequal": 1,
                "runtime.efaceeq": 1,
                "runtime.ifaceeq": 1,
                "runtime.alginit": 1,
                "runtime.initAlgAES": 1,
                "runtime.atomicwb": 1,
                "runtime.(*wbBuf).putFast": 1,
                "runtime.atomicstorep": 1,
                "sync/atomic.StorePointer": 1,
                "sync/atomic.CompareAndSwapPointer": 1,
                "runtime.mmap": 1,
                "runtime.munmap": 1,
                "runtime.sigaction": 1,
                "runtime.cgocall": 1,
                "runtime.cgoIsGoPointer": 1,
                "runtime.activeModules": 1,
                "runtime.cgoInRange": 1,
                "runtime.cgoCheckWriteBarrier": 1,
                "runtime.cgoCheckMemmove": 1,
                "runtime.cgoCheckSliceCopy": 1,
                "runtime.add": 1,
                "runtime.cgoCheckTypedBlock": 1,
                "runtime.spanOfUnchecked": 1,
                "runtime.arenaIndex": 1,
                "runtime.heapBitsForAddr": 1,
                "runtime.heapBits.bits": 1,
                "runtime.heapBits.next": 1,
                "runtime.add1": 1,
                "runtime.cgoCheckBits": 1,
                "runtime.addb": 1,
                "runtime.cgoCheckUsingType": 1,
                "runtime.makechan": 1,
                "runtime.(*hchan).raceaddr": 1,
                "runtime.chansend1": 1,
                "runtime.chansend": 1,
                "runtime.(*waitq).enqueue": 1,
                "runtime.goparkunlock": 1,
                "runtime.chanbuf": 1,
                "runtime.send": 1,
                "runtime.sendDirect": 1,
                "runtime.recvDirect": 1,
                "runtime.closechan": 1,
                "runtime.(*gList).push": 1,
                "runtime.(*guintptr).set": 1,
                "runtime.(*gList).empty": 1,
                "runtime.(*gList).pop": 1,
                "runtime.chanrecv1": 1,
                "runtime.chanrecv": 1,
                "runtime.recv": 1,
                "runtime.selectnbsend": 1,
                "runtime.selectnbrecv": 1,
                "reflect.chansend": 1,
                "reflect.chanrecv": 1,
                "reflect.chanlen": 1,
                "reflect.chancap": 1,
                "reflect.chanclose": 1,
                "runtime.(*waitq).dequeue": 1,
                "runtime.init.0": 1,
                "runtime.(*cpuProfile).add": 1,
                "runtime.(*cpuProfile).addNonGo": 1,
                "runtime.(*cpuProfile).addExtra": 1,
                "runtime.funcPC": 1,
                "runtime.GOMAXPROCS": 1,
                "runtime.debugCallCheck": 1,
                "runtime.debugCallWrap": 1,
                "runtime.gogetenv": 1,
                "runtime.envKeyEqual": 1,
                "runtime.(*TypeAssertionError).RuntimeError": 1,
                "runtime.(*TypeAssertionError).Error": 1,
                "runtime.errorString.RuntimeError": 1,
                "runtime.errorString.Error": 1,
                "runtime.plainError.RuntimeError": 1,
                "runtime.plainError.Error": 1,
                "runtime.printany": 1,
                "runtime.typestring": 1,
                "runtime.panicwrap": 1,
                "runtime.Caller": 1,
                "runtime.CallersFrames": 1,
                "runtime.GOROOT": 1,
                "runtime.float64frombits": 1,
                "runtime.memhash": 1,
                "runtime.readUnaligned64": 1,
                "runtime.rotl_31": 1,
                "runtime.readUnaligned32": 1,
                "runtime.memhash32": 1,
                "runtime.memhash64": 1,
                "runtime.getitab": 1,
                "runtime.(*_type).nameOff": 1,
                "runtime.(*itabTableType).find": 1,
                "runtime.itabHashFunc": 1,
                "runtime.itabAdd": 1,
                "runtime.(*itabTableType).add": 1,
                "runtime.(*itab).init": 1,
                "runtime.(*_type).typeOff": 1,
                "runtime.name.isExported": 1,
                "runtime.itabsinit": 1,
                "runtime.panicdottypeE": 1,
                "runtime.panicdottypeI": 1,
                "runtime.convT2E": 1,
                "runtime.convT16": 1,
                "runtime.convT32": 1,
                "runtime.convT64": 1,
                "runtime.convTstring": 1,
                "runtime.convTslice": 1,
                "runtime.convT2I": 1,
                "runtime.convI2I": 1,
                "runtime.assertI2I": 1,
                "runtime.assertI2I2": 1,
                "runtime.assertE2I": 1,
                "runtime.assertE2I2": 1,
                "reflect.ifaceE2I": 1,
                "runtime.iterate_itabs": 1,
                "runtime.(*lfstack).push": 1,
                "runtime.lfstackPack": 1,
                "runtime.lfstackUnpack": 1,
                "runtime.(*lfstack).pop": 1,
                "runtime.lfnodeValidate": 1,
                "runtime.lock": 1,
                "runtime.unlock": 1,
                "runtime.notewakeup": 1,
                "runtime.notesleep": 1,
                "runtime.notetsleep_internal": 1,
                "runtime.notetsleep": 1,
                "runtime.notetsleepg": 1,
                "runtime.mallocinit": 1,
                "runtime.(*mheap).sysAlloc": 1,
                "runtime.round": 1,
                "runtime.(*fixalloc).free": 1,
                "runtime.sysReserve": 1,
                "runtime.sysReserveAligned": 1,
                "runtime.(*mcache).nextFree": 1,
                "runtime.mallocgc": 1,
                "runtime.acquirem": 1,
                "runtime.gomcache": 1,
                "runtime.releasem": 1,
                "runtime.nextFreeFast": 1,
                "runtime.gcTrigger.test": 1,
                "runtime.makeSpanClass": 1,
                "runtime.bool2int": 1,
                "runtime.(*mspan).base": 1,
                "runtime.largeAlloc": 1,
                "runtime.newobject": 1,
                "reflect.unsafe_New": 1,
                "runtime.newarray": 1,
                "reflect.unsafe_NewArray": 1,
                "runtime.profilealloc": 1,
                "runtime.nextSample": 1,
                "runtime.fastexprand": 1,
                "runtime.fastlog2": 1,
                "runtime.float64bits": 1,
                "runtime.persistentalloc": 1,
                "runtime.persistentalloc1": 1,
                "runtime.(*notInHeap).add": 1,
                "runtime.inPersistentAlloc": 1,
                "runtime.(*linearAlloc).alloc": 1,
                "runtime.(*hmap).incrnoverflow": 1,
                "runtime.(*hmap).newoverflow": 1,
                "runtime.(*bmap).overflow": 1,
                "runtime.(*bmap).setoverflow": 1,
                "runtime.(*hmap).createOverflow": 1,
                "runtime.makemap_small": 1,
                "runtime.makemap": 1,
                "runtime.overLoadFactor": 1,
                "runtime.bucketShift": 1,
                "runtime.makeBucketArray": 1,
                "runtime.roundupsize": 1,
                "runtime.mapaccess1": 1,
                "runtime.bucketMask": 1,
                "runtime.(*hmap).sameSizeGrow": 1,
                "runtime.evacuated": 1,
                "runtime.tophash": 1,
                "runtime.(*maptype).indirectkey": 1,
                "runtime.(*maptype).indirectvalue": 1,
                "runtime.(*maptype).hashMightPanic": 1,
                "runtime.mapaccess2": 1,
                "runtime.mapaccessK": 1,
                "runtime.mapassign": 1,
                "runtime.isEmpty": 1,
                "runtime.(*hmap).growing": 1,
                "runtime.tooManyOverflowBuckets": 1,
                "runtime.(*maptype).needkeyupdate": 1,
                "runtime.mapdelete": 1,
                "runtime.mapiterinit": 1,
                "runtime.mapiternext": 1,
                "runtime.(*maptype).reflexivekey": 1,
                "runtime.(*hmap).oldbucketmask": 1,
                "runtime.(*hmap).noldbuckets": 1,
                "runtime.hashGrow": 1,
                "runtime.growWork": 1,
                "runtime.evacuate": 1,
                "runtime.advanceEvacuationMark": 1,
                "runtime.bucketEvacuated": 1,
                "reflect.makemap": 1,
                "runtime.ismapkey": 1,
                "reflect.mapaccess": 1,
                "reflect.mapassign": 1,
                "reflect.mapdelete": 1,
                "reflect.mapiterinit": 1,
                "reflect.mapiternext": 1,
                "reflect.mapiterkey": 1,
                "reflect.mapitervalue": 1,
                "reflect.maplen": 1,
                "runtime.mapaccess1_fast32": 1,
                "runtime.(*bmap).keys": 1,
                "runtime.mapaccess2_fast32": 1,
                "runtime.mapassign_fast32": 1,
                "runtime.mapdelete_fast32": 1,
                "runtime.growWork_fast32": 1,
                "runtime.evacuate_fast32": 1,
                "runtime.mapaccess1_fast64": 1,
                "runtime.mapaccess2_fast64": 1,
                "runtime.mapassign_fast64": 1,
                "runtime.mapassign_fast64ptr": 1,
                "runtime.mapdelete_fast64": 1,
                "runtime.growWork_fast64": 1,
                "runtime.evacuate_fast64": 1,
                "runtime.mapaccess1_faststr": 1,
                "runtime.mapaccess2_faststr": 1,
                "runtime.mapassign_faststr": 1,
                "runtime.mapdelete_faststr": 1,
                "runtime.growWork_faststr": 1,
                "runtime.evacuate_faststr": 1,
                "runtime.typedmemmove": 1,
                "reflect.typedmemmove": 1,
                "reflect.typedmemmovepartial": 1,
                "runtime.reflectcallmove": 1,
                "runtime.typedslicecopy": 1,
                "reflect.typedslicecopy": 1,
                "runtime.typedmemclr": 1,
                "reflect.typedmemclr": 1,
                "reflect.typedmemclrpartial": 1,
                "runtime.memclrHasPointers": 1,
                "runtime.(*mspan).refillAllocCache": 1,
                "runtime.(*gcBits).bytep": 1,
                "runtime.(*mspan).nextFreeIndex": 1,
                "runtime.markBitsForAddr": 1,
                "runtime.spanOf": 1,
                "runtime.(*mspan).objIndex": 1,
                "runtime.(*mspan).markBitsForIndex": 1,
                "runtime.(*gcBits).bitp": 1,
                "runtime.findObject": 1,
                "runtime.heapBits.nextArena": 1,
                "runtime.heapBits.forward": 1,
                "runtime.heapBits.forwardOrBoundary": 1,
                "runtime.bulkBarrierPreWrite": 1,
                "runtime.puintptr.ptr": 1,
                "runtime.heapBits.isPointer": 1,
                "runtime.bulkBarrierPreWriteSrcOnly": 1,
                "runtime.bulkBarrierBitmap": 1,
                "runtime.typeBitsBulkBarrier": 1,
                "runtime.heapBits.initSpan": 1,
                "runtime.(*mspan).layout": 1,
                "runtime.newAllocBits": 1,
                "runtime.heapBits.initCheckmarkSpan": 1,
                "runtime.heapBits.clearCheckmarkSpan": 1,
                "runtime.(*mspan).countAlloc": 1,
                "runtime.heapBitsSetType": 1,
                "runtime.heapBitsSetTypeGCProg": 1,
                "runtime.progToPointerMask": 1,
                "runtime.runGCProg": 1,
                "runtime.subtract1": 1,
                "runtime.subtractb": 1,
                "runtime.materializeGCProg": 1,
                "runtime.allocmcache": 1,
                "runtime.freemcache": 1,
                "runtime.(*mcache).refill": 1,
                "runtime.(*mcache).releaseAll": 1,
                "runtime.(*mcache).prepareForSweep": 1,
                "runtime.(*mcentral).cacheSpan": 1,
                "runtime.spanClass.sizeclass": 1,
                "runtime.traceHeapAlloc": 1,
                "runtime.(*mcentral).uncacheSpan": 1,
                "runtime.(*mcentral).freeSpan": 1,
                "runtime.(*mspan).inList": 1,
                "runtime.(*mcentral).grow": 1,
                "runtime.sysAlloc": 1,
                "runtime.sysUnused": 1,
                "runtime.sysUsed": 1,
                "runtime.sysFree": 1,
                "runtime.sysMap": 1,
                "runtime.queuefinalizer": 1,
                "runtime.wakefing": 1,
                "runtime.createfing": 1,
                "runtime.runfinq": 1,
                "runtime.SetFinalizer": 1,
                "runtime.(*functype).dotdotdot": 1,
                "runtime.(*functype).in": 1,
                "runtime.(*functype).out": 1,
                "runtime.(*fixalloc).alloc": 1,
                "runtime.gcinit": 1,
                "runtime.readgogc": 1,
                "runtime.atoi32": 1,
                "runtime.gcenable": 1,
                "runtime/debug.setGCPercent": 1,
                "runtime.(*gcControllerState).startCycle": 1,
                "runtime.(*gcControllerState).revise": 1,
                "runtime.(*gcControllerState).endCycle": 1,
                "runtime.(*gcControllerState).enlistWorker": 1,
                "runtime.fastrandn": 1,
                "runtime.preemptone": 1,
                "runtime.(*gcControllerState).findRunnableGCWorker": 1,
                "runtime.gcMarkWorkAvailable": 1,
                "runtime.(*gcWork).empty": 1,
                "runtime.(*lfstack).empty": 1,
                "runtime.(*gcControllerState).findRunnableGCWorker.func1": 1,
                "runtime.guintptr.ptr": 1,
                "runtime.pollFractionalWorkerExit": 1,
                "runtime.gcSetTriggerRatio": 1,
                "runtime.isSweepDone": 1,
                "runtime.GC": 1,
                "runtime.Gosched": 1,
                "runtime.gcWaitOnMark": 1,
                "runtime.gcStart": 1,
                "runtime.semacquire": 1,
                "runtime.setGCPhase": 1,
                "runtime.gcBgMarkPrepare": 1,
                "runtime.semrelease": 1,
                "runtime.traceGCSTWStart": 1,
                "runtime.traceGCStart": 1,
                "runtime.gcMarkDone": 1,
                "runtime.gcMarkTermination": 1,
                "runtime.traceGCDone": 1,
                "runtime.gcBgMarkStartWorkers": 1,
                "runtime.noteclear": 1,
                "runtime.gcBgMarkWorker": 1,
                "runtime.(*muintptr).set": 1,
                "runtime.(*puintptr).set": 1,
                "runtime.gcMark": 1,
                "runtime.gcSweep": 1,
                "runtime.gcResetMarkState": 1,
                "sync.runtime_registerPoolCleanup": 1,
                "runtime.clearpools": 1,
                "runtime.itoaDiv": 1,
                "runtime.fmtNSAsMS": 1,
                "runtime.(*treapNode).pred": 1,
                "runtime.(*treapNode).succ": 1,
                "runtime.treapIter.prev": 1,
                "runtime.(*mTreap).start": 1,
                "runtime.(*mTreap).end": 1,
                "runtime.(*mTreap).insert": 1,
                "runtime.(*mTreap).removeNode": 1,
                "runtime.(*mTreap).find": 1,
                "runtime.(*mTreap).removeSpan": 1,
                "runtime.(*mTreap).erase": 1,
                "runtime.(*mTreap).rotateLeft": 1,
                "runtime.(*mTreap).rotateRight": 1,
                "runtime.gcMarkRootPrepare": 1,
                "runtime.gcMarkRootPrepare.func1": 1,
                "runtime.(*gcSweepBuf).numBlocks": 1,
                "runtime.gcMarkRootCheck": 1,
                "runtime.readgstatus": 1,
                "runtime.markroot": 1,
                "runtime.markrootBlock": 1,
                "runtime.markrootFreeGStacks": 1,
                "runtime.(*gList).pushAll": 1,
                "runtime.(*gQueue).empty": 1,
                "runtime.markrootSpans": 1,
                "runtime.gcAssistAlloc": 1,
                "runtime.traceGCMarkAssistDone": 1,
                "runtime.traceGCMarkAssistStart": 1,
                "runtime.gcAssistAlloc1": 1,
                "runtime.gcWakeAllAssists": 1,
                "runtime.(*gQueue).popList": 1,
                "runtime.gcParkAssist": 1,
                "runtime.(*gQueue).pushBack": 1,
                "runtime.gcFlushBgCredit": 1,
                "runtime.(*gQueue).pop": 1,
                "runtime.scanstack": 1,
                "runtime.(*stackScanState).buildIndex": 1,
                "runtime.(*stackObject).setType": 1,
                "runtime.dematerializeGCProg": 1,
                "runtime.scanframeworker": 1,
                "runtime.gcDrain": 1,
                "runtime.(*gcWork).tryGetFast": 1,
                "runtime.gcDrainN": 1,
                "runtime.scanblock": 1,
                "runtime.scanobject": 1,
                "runtime.spanClass.noscan": 1,
                "runtime.(*gcWork).putFast": 1,
                "runtime.shade": 1,
                "runtime.greyobject": 1,
                "runtime.markBits.isMarked": 1,
                "runtime.heapBits.isCheckmarked": 1,
                "runtime.heapBits.setCheckmarked": 1,
                "runtime.(*mspan).isFree": 1,
                "runtime.markBits.setMarked": 1,
                "runtime.pageIndexOf": 1,
                "runtime.gcDumpObject": 1,
                "runtime.gcmarknewobject": 1,
                "runtime.gcMarkTinyAllocs": 1,
                "runtime.initCheckmarks": 1,
                "runtime.clearCheckmarks": 1,
                "runtime.init.1": 1,
                "runtime.(*stackScanState).putPtr": 1,
                "runtime.(*stackScanState).getPtr": 1,
                "runtime.(*stackScanState).addObject": 1,
                "runtime.binarySearchTree": 1,
                "runtime.(*stackScanState).findObject": 1,
                "runtime.finishsweep_m": 1,
                "runtime.bgsweep": 1,
                "F2E,F2": 1,
                "runtime.sweepone": 1,
                "runtime.(*gcSweepBuf).pop": 1,
                "runtime.(*mspan).ensureSwept": 1,
                "runtime.(*mspan).sweep": 1,
                "runtime.markBits.setMarkedNonAtomic": 1,
                "runtime.(*mspan).markBitsForBase": 1,
                "runtime.(*mspan).allocBitsForIndex": 1,
                "runtime.(*markBits).advance": 1,
                "runtime.sysFault": 1,
                "runtime.deductSweepCredit": 1,
                "runtime.clobberfree": 1,
                "runtime.(*gcSweepBuf).push": 1,
                "runtime.(*gcSweepBuf).block": 1,
                "runtime.init.2": 1,
                "runtime.(*gcWork).init": 1,
                "runtime.(*gcWork).put": 1,
                "runtime.(*gcWork).putBatch": 1,
                "runtime.(*gcWork).tryGet": 1,
                "runtime.(*gcWork).dispose": 1,
                "runtime.(*gcWork).balance": 1,
                "runtime.(*workbuf).checknonempty": 1,
                "runtime.(*workbuf).checkempty": 1,
                "runtime.getempty": 1,
                "runtime.putempty": 1,
                "runtime.putfull": 1,
                "runtime.trygetfull": 1,
                "runtime.handoff": 1,
                "runtime.prepareFreeWorkbufs": 1,
                "runtime.freeSomeWbufs": 1,
                "runtime.(*mSpanList).isEmpty": 1,
                "runtime.(*mheap).coalesce": 1,
                "runtime.(*mspan).released": 1,
                "runtime.(*mspan).physPageBounds": 1,
                "runtime.(*mspan).scavenge": 1,
                "runtime.recordspan": 1,
                "runtime.inHeapOrStack": 1,
                "runtime.spanOfHeap": 1,
                "runtime.(*mheap).init": 1,
                "runtime.(*fixalloc).init": 1,
                "runtime.(*mcentral).init": 1,
                "runtime.(*mSpanList).init": 1,
                "runtime.(*mheap).reclaim": 1,
                "runtime.(*mheap).reclaimChunk": 1,
                "runtime.(*mheap).alloc_m": 1,
                "runtime.(*mheap).alloc": 1,
                "runtime.(*mheap).allocManual": 1,
                "runtime.(*mheap).setSpans": 1,
                "runtime.(*mheap).pickFreeSpan": 1,
                "runtime.(*mheap).allocSpanLocked": 1,
                "runtime.(*mspan).init": 1,
                "runtime.(*mheap).setSpan": 1,
                "runtime.(*mheap).grow": 1,
                "runtime.(*mheap).freeSpan": 1,
                "runtime.(*mheap).freeManual": 1,
                "runtime.(*mheap).freeSpanLocked": 1,
                "runtime.(*mheap).scavengeLargest": 1,
                "runtime.(*treapIter).valid": 1,
                "runtime.(*treapIter).span": 1,
                "runtime.(*mheap).scavengeAll": 1,
                "runtime.treapIter.next": 1,
                "runtime.(*mheap).scavenge": 1,
                "runtime.(*mSpanList).remove": 1,
                "runtime.(*mSpanList).insert": 1,
                "runtime.(*mSpanList).insertBack": 1,
                "runtime.(*mSpanList).takeAll": 1,
                "runtime.addspecial": 1,
                ".3-\".3-4": 1,
                "runtime.removespecial": 1,
                "-|.3-#.3-8": 1,
                "runtime.addfinalizer": 1,
                "runtime.removefinalizer": 1,
                "4T*+).": 1,
                "runtime.setprofilebucket": 1,
                "runtime.freespecial": 1,
                "4`*+)]*+):": 1,
                "runtime.newMarkBits": 1,
                "runtime.(*gcBitsArena).tryAlloc": 1,
                "runtime.nextMarkBitArenaEpoch": 1,
                "runtime.newArenaMayUnlock": 1,
                "runtime.newBucket": 1,
                "runtime.(*bucket).mp": 1,
                "runtime.(*bucket).bp": 1,
                "runtime.stkbucket": 1,
                "runtime.(*bucket).stk": 1,
                "runtime.eqslice": 1,
                "runtime.mProf_NextCycle": 1,
                "runtime.mProf_Flush": 1,
                "runtime.mProf_FlushLocked": 1,
                "runtime.(*memRecordCycle).add": 1,
                "runtime.mProf_PostSweep": 1,
                "runtime.mProf_Malloc": 1,
                "runtime.mProf_Free": 1,
                "runtime.blockevent": 1,
                "runtime.blocksampled": 1,
                "runtime.saveblockevent": 1,
                "sync.event": 1,
                "runtime.tracealloc": 1,
                "runtime.tracefree": 1,
                "runtime.tracegc": 1,
                "runtime.init.3": 1,
                "runtime.cachestats": 1,
                "runtime.flushmcache": 1,
                "runtime.purgecachedstats": 1,
                "runtime.mSysStatInc": 1,
                "runtime.mSysStatDec": 1,
                "runtime.(*wbBuf).reset": 1,
                "runtime.wbBufFlush": 1,
                "runtime.(*wbBuf).discard": 1,
                "runtime.wbBufFlush1": 1,
                "internal/poll.runtime_pollServerInit": 1,
                "internal/poll.runtime_pollOpen": 1,
                "internal/poll.runtime_pollClose": 1,
                "runtime.netpollclose": 1,
                "runtime.(*pollCache).free": 1,
                "internal/poll.runtime_pollReset": 1,
                "runtime.netpollcheckerr": 1,
                "internal/poll.runtime_pollWait": 1,
                "internal/poll.runtime_pollSetDeadline": 1,
                "runtime.netpollgoready": 1,
                "internal/poll.runtime_pollUnblock": 1,
                "runtime.netpollready": 1,
                "runtime.netpollblockcommit": 1,
                "runtime.netpollblock": 1,
                "runtime.netpollunblock": 1,
                "runtime.netpolldeadlineimpl": 1,
                "runtime.netpollDeadline": 1,
                "runtime.netpollReadDeadline": 1,
                "runtime.netpollWriteDeadline": 1,
                "runtime.(*pollCache).alloc": 1,
                "runtime.netpollinit": 1,
                "runtime.netpollopen": 1,
                "runtime.netpoll": 1,
                "runtime.futexsleep": 1,
                "runtime.(*timespec).set_sec": 1,
                "runtime.(*timespec).set_nsec": 1,
                "runtime.futexwakeup": 1,
                "runtime.getproccount": 1,
                "runtime.newosproc": 1,
                "runtime.sigprocmask": 1,
                "runtime.mcount": 1,
                "runtime.sysargs": 1,
                "runtime.argv_index": 1,
                "runtime.sysauxv": 1,
                "runtime.osinit": 1,
                "runtime.getRandomData": 1,
                "runtime.minit": 1,
                "runtime.setsig": 1,
                "runtime.sigfillset": 1,
                "runtime.setsigstack": 1,
                "runtime.sysSigaction": 1,
                "runtime.panicCheckMalloc": 1,
                "runtime.panicindex": 1,
                "runtime.hasPrefix": 1,
                "runtime.panicslice": 1,
                "runtime.panicdivide": 1,
                "runtime.throwinit": 1,
                "runtime.deferproc": 1,
                "runtime.deferArgs": 1,
                "runtime.testdefersizes": 1,
                "runtime.deferclass": 1,
                "runtime.totaldefersize": 1,
                "|/K0\"/?0": 1,
                "runtime.init.4": 1,
                "runtime.newdefer": 1,
                "runtime.freedefer": 1,
                "runtime.freedeferpanic": 1,
                "runtime.freedeferfn": 1,
                "runtime.deferreturn": 1,
                "runtime.preprintpanics": 1,
                "runtime.printpanics": 1,
                "runtime.gopanic": 1,
                "runtime.getargp": 1,
                "runtime.gorecover": 1,
                "sync.throw": 1,
                "runtime.throw": 1,
                "runtime.recovery": 1,
                "runtime.fatalthrow": 1,
                "runtime.fatalpanic": 1,
                "runtime.startpanic_m": 1,
                "runtime.dopanic_m": 1,
                "runtime.signame": 1,
                "runtime.gotraceback": 1,
                "runtime.shouldPushSigpanic": 1,
                "runtime.funcInfo.valid": 1,
                "runtime.recordForPanic": 1,
                "runtime.printlock": 1,
                "runtime.printunlock": 1,
                "runtime.gwrite": 1,
                "runtime.writeErr": 1,
                "runtime.printsp": 1,
                "runtime.printnl": 1,
                "runtime.printbool": 1,
                "runtime.printfloat": 1,
                "runtime.printcomplex": 1,
                "runtime.printuint": 1,
                "runtime.printint": 1,
                "runtime.printhex": 1,
                "runtime.printpointer": 1,
                "runtime.printstring": 1,
                "runtime.bytes": 1,
                "runtime.printslice": 1,
                "runtime.printeface": 1,
                "runtime.hexdumpWords": 1,
                "runtime.main": 1,
                "runtime.lockOSThread": 1,
                "runtime.dolockOSThread": 1,
                "runtime.startTemplateThread": 1,
                "os.runtime_beforeExit": 1,
                "runtime.init.5": 1,
                "runtime.forcegchelper": 1,
                "runtime.gopark": 1,
                "'k(.'c": 1,
                "runtime.goready": 1,
                "runtime.acquireSudog": 1,
                "runtime.releaseSudog": 1,
                "runtime.badmcall": 1,
                "runtime.badmcall2": 1,
                "runtime.badreflectcall": 1,
                "runtime.badmorestackg0": 1,
                "runtime.badmorestackgsignal": 1,
                "runtime.badctxt": 1,
                "runtime.allgadd": 1,
                "runtime.cpuinit": 1,
                "runtime.schedinit": 1,
                "runtime.tracebackinit": 1,
                "runtime.msigsave": 1,
                "runtime.goenvs": 1,
                "runtime.checkmcount": 1,
                "runtime.mcommoninit": 1,
                "runtime.mpreinit": 1,
                "runtime.ready": 1,
                "runtime.wakep": 1,
                "runtime.dumpgstatus": 1,
                "runtime.freezetheworld": 1,
                "runtime.casfrom_Gscanstatus": 1,
                "runtime.castogscanstatus": 1,
                "runtime.casgstatus": 1,
                "runtime.scang": 1,
                "runtime.restartg": 1,
                "runtime.stopTheWorld": 1,
                "runtime.startTheWorld": 1,
                "runtime.stopTheWorldWithSema": 1,
                "runtime.pidleget": 1,
                "runtime.startTheWorldWithSema": 1,
                "runtime.netpollinited": 1,
                "runtime.traceGCSTWDone": 1,
                "runtime.mstart": 1,
                "runtime.mstart1": 1,
                "runtime.mstartm0": 1,
                "runtime.mexit": 1,
                "runtime.sigblock": 1,
                "runtime.unminit": 1,
                "runtime.forEachP": 1,
                "runtime.runSafePointFn": 1,
                "runtime.allocm": 1,
                "runtime.needm": 1,
                "runtime.unlockextra": 1,
                "runtime.newextram": 1,
                "runtime.oneNewExtraM": 1,
                "runtime.dropm": 1,
                "runtime.msigrestore": 1,
                "runtime.lockextra": 1,
                "runtime.newm": 1,
                "runtime.newm1": 1,
                "runtime.templateThread": 1,
                "runtime.muintptr.ptr": 1,
                "runtime.stopm": 1,
                "runtime.mput": 1,
                "runtime.mspinning": 1,
                "runtime.startm": 1,
                "runtime.mget": 1,
                "runtime.handoffp": 1,
                "runtime.stoplockedm": 1,
                "runtime.startlockedm": 1,
                "runtime.gcstopm": 1,
                "runtime.execute": 1,
                "runtime.findrunnable": 1,
                "runtime.(*randomEnum).next": 1,
                "runtime.(*randomEnum).done": 1,
                "runtime.(*randomEnum).position": 1,
                "runtime.(*randomOrder).start": 1,
                "runtime.pollWork": 1,
                "runtime.resetspinning": 1,
                "runtime.injectglist": 1,
                "runtime.globrunqput": 1,
                "runtime.schedule": 1,
                "runtime.parkunlock_c": 1,
                "runtime.park_m": 1,
                "runtime.dropg": 1,
                "runtime.setMNoWB": 1,
                "runtime.setGNoWB": 1,
                "runtime.goschedImpl": 1,
                "runtime.gosched_m": 1,
                "runtime.traceGoSched": 1,
                "runtime.gopreempt_m": 1,
                "runtime.traceGoPreempt": 1,
                "runtime.goexit1": 1,
                "runtime.traceGoEnd": 1,
                "runtime.goexit0": 1,
                "runtime.save": 1,
                "runtime.reentersyscall": 1,
                "runtime.entersyscall": 1,
                "runtime.entersyscall_sysmon": 1,
                "runtime.entersyscall_gcwait": 1,
                "runtime.entersyscallblock": 1,
                "runtime.entersyscallblock_handoff": 1,
                "runtime.traceGoSysCall": 1,
                "runtime.exitsyscall": 1,
                "runtime.exitsyscallfast": 1,
                "runtime.exitsyscallfast_reacquired": 1,
                "runtime.exitsyscallfast_pidle": 1,
                "runtime.exitsyscall0": 1,
                "syscall.runtime_BeforeExec": 1,
                "syscall.runtime_AfterExec": 1,
                "runtime.malg": 1,
                "runtime.newproc": 1,
                "runtime.newproc1": 1,
                "runtime.gostartcallfn": 1,
                "runtime.gostartcall": 1,
                "runtime.stackmapdata": 1,
                "runtime.saveAncestors": 1,
                "runtime.gfput": 1,
                "runtime.gfget": 1,
                "runtime.gfpurge": 1,
                "runtime.LockOSThread": 1,
                "runtime.UnlockOSThread": 1,
                "runtime.dounlockOSThread": 1,
                "runtime.unlockOSThread": 1,
                "runtime.badunlockosthread": 1,
                "runtime._System": 1,
                "runtime._ExternalCode": 1,
                "runtime._LostExternalCode": 1,
                "runtime._GC": 1,
                "runtime._VDSO": 1,
                "runtime.sigprof": 1,
                "runtime.sigprofNonGo": 1,
                "runtime.sigprofNonGoPC": 1,
                "runtime.setsSP": 1,
                "runtime.procresize": 1,
                "runtime.globrunqputhead": 1,
                "runtime.(*gQueue).push": 1,
                "runtime.traceGomaxprocs": 1,
                "runtime.acquirep": 1,
                "runtime.wirep": 1,
                "runtime.releasep": 1,
                "runtime.incidlelocked": 1,
                "runtime.checkdead": 1,
                "runtime.sysmon": 1,
                "runtime.retake": 1,
                "runtime.preemptall": 1,
                "runtime.schedtrace": 1,
                "runtime.waitReason.String": 1,
                "runtime.schedEnableUser": 1,
                "runtime.globrunqputbatch": 1,
                "runtime.(*gQueue).pushBackAll": 1,
                "runtime.schedEnabled": 1,
                "runtime.globrunqget": 1,
                "runtime.pidleput": 1,
                "runtime.runqempty": 1,
                "runtime.runqput": 1,
                "runtime.(*guintptr).cas": 1,
                "runtime.runqputslow": 1,
                "runtime.runqget": 1,
                "runtime.runqgrab": 1,
                "runtime.runqsteal": 1,
                "sync.runtime_procPin": 1,
                "runtime.procPin": 1,
                "sync.runtime_procUnpin": 1,
                "runtime.procUnpin": 1,
                "sync/atomic.runtime_procPin": 1,
                "sync/atomic.runtime_procUnpin": 1,
                "sync.runtime_canSpin": 1,
                "sync.runtime_doSpin": 1,
                "runtime.(*randomOrder).reset": 1,
                "runtime.gcd": 1,
                "runtime.(*profBuf).takeOverflow": 1,
                "runtime.(*profBuf).incrementOverflow": 1,
                "runtime.(*profBuf).canWriteRecord": 1,
                "runtime.(*profAtomic).load": 1,
                "runtime.profIndex.tagCount": 1,
                "runtime.countSub": 1,
                "runtime.(*profBuf).canWriteTwoRecords": 1,
                "runtime.(*profBuf).write": 1,
                "runtime.(*profBuf).hasOverflow": 1,
                "runtime.profIndex.addCountsAndClearFlags": 1,
                "runtime.(*profAtomic).cas": 1,
                "runtime.(*profBuf).wakeupExtra": 1,
                "syscall.runtime_envs": 1,
                "os.runtime_args": 1,
                "syscall.Exit": 1,
                "runtime.args": 1,
                "runtime.goargs": 1,
                "runtime.gostringnocopy": 1,
                "runtime.goenvs_unix": 1,
                "runtime.testAtomic64": 1,
                "runtime.check": 1,
                "runtime.parsedebugvars": 1,
                "runtime/debug.SetTraceback": 1,
                "runtime.timediv": 1,
                "reflect.typelinks": 1,
                "reflect.resolveNameOff": 1,
                "reflect.resolveTypeOff": 1,
                "reflect.resolveTextOff": 1,
                "reflect.addReflectOff": 1,
                "runtime.reflectOffsLock": 1,
                "runtime.reflectOffsUnlock": 1,
                "runtime.extendRandom": 1,
                "runtime.(*rwmutex).rlock": 1,
                "runtime.(*rwmutex).runlock": 1,
                "runtime.(*rwmutex).lock": 1,
                "runtime.(*rwmutex).unlock": 1,
                "runtime.sellock": 1,
                "runtime.selunlock": 1,
                "runtime.selparkcommit": 1,
                "runtime.selectgo": 1,
                "runtime.(*hchan).sortkey": 1,
                "runtime.(*waitq).dequeueSudoG": 1,
                "sync.runtime_Semacquire": 1,
                "internal/poll.runtime_Semacquire": 1,
                "sync.runtime_Semrelease": 1,
                "sync.runtime_SemacquireMutex": 1,
                "internal/poll.runtime_Semrelease": 1,
                "runtime.readyWithTime": 1,
                "runtime.semacquire1": 1,
                "runtime.semroot": 1,
                "runtime.semrelease1": 1,
                "runtime.cansemacquire": 1,
                "runtime.(*semaRoot).queue": 1,
                "runtime.(*semaRoot).dequeue": 1,
                "runtime.(*semaRoot).rotateLeft": 1,
                "runtime.(*semaRoot).rotateRight": 1,
                "sync.runtime_notifyListCheck": 1,
                "sync.runtime_nanotime": 1,
                "runtime.dumpregs": 1,
                "runtime.(*sigctxt).rax": 1,
                "runtime.(*sigctxt).regs": 1,
                "runtime.(*sigctxt).rbx": 1,
                "runtime.(*sigctxt).rcx": 1,
                "runtime.(*sigctxt).rdx": 1,
                "runtime.(*sigctxt).rdi": 1,
                "runtime.(*sigctxt).rsi": 1,
                "runtime.(*sigctxt).rbp": 1,
                "runtime.(*sigctxt).rsp": 1,
                "runtime.(*sigctxt).r8": 1,
                "runtime.(*sigctxt).r9": 1,
                "runtime.(*sigctxt).r10": 1,
                "runtime.(*sigctxt).r11": 1,
                "runtime.(*sigctxt).r12": 1,
                "runtime.(*sigctxt).r13": 1,
                "runtime.(*sigctxt).r14": 1,
                "runtime.(*sigctxt).r15": 1,
                "runtime.(*sigctxt).rip": 1,
                "runtime.(*sigctxt).rflags": 1,
                "runtime.(*sigctxt).cs": 1,
                "runtime.(*sigctxt).fs": 1,
                "runtime.(*sigctxt).gs": 1,
                "runtime.(*sigctxt).preparePanic": 1,
                "runtime.(*sigctxt).set_rsp": 1,
                "runtime.(*sigctxt).set_rip": 1,
                "runtime.sighandler": 1,
                "runtime.(*sigctxt).sigpc": 1,
                "runtime.isAbortPC": 1,
                "runtime.(*sigctxt).sigcode": 1,
                "os/signal.signal_ignored": 1,
                "runtime.(*sigctxt).sigsp": 1,
                "runtime.(*sigctxt).fault": 1,
                "runtime.(*sigctxt).sigaddr": 1,
                "os.sigpipe": 1,
                "runtime.init.6": 1,
                "runtime.initsig": 1,
                "runtime.getsig": 1,
                "runtime.sigInstallGoHandler": 1,
                "runtime.sigInitIgnored": 1,
                "runtime.sigenable": 1,
                "runtime.setThreadCPUProfiler": 1,
                "runtime.(*timeval).set_usec": 1,
                "runtime.sigpipe": 1,
                "runtime.sigtrampgo": 1,
                "runtime.setSignalstackSP": 1,
                "runtime.setGsignalStack": 1,
                "runtime.restoreGsignalStack": 1,
                "runtime.sigpanic": 1,
                "runtime.canpanic": 1,
                "runtime.panicmem": 1,
                "runtime.panicoverflow": 1,
                "runtime.panicfloat": 1,
                "runtime.dieFromSignal": 1,
                "runtime.raisebadsignal": 1,
                "runtime.crash": 1,
                "runtime.ensureSigM": 1,
                "runtime.noSignalStack": 1,
                "runtime.sigNotOnStack": 1,
                "runtime.signalDuringFork": 1,
                "runtime.badsignal": 1,
                "runtime.sigfwdgo": 1,
                "runtime.unblocksig": 1,
                "runtime.sigaddset": 1,
                "runtime.minitSignals": 1,
                "runtime.minitSignalStack": 1,
                "runtime.minitSignalMask": 1,
                "runtime.blockableSig": 1,
                "runtime.sigdelset": 1,
                "runtime.unminitSignals": 1,
                "runtime.signalstack": 1,
                "runtime.sigsend": 1,
                "os/signal.signal_recv": 1,
                "os/signal.signal_enable": 1,
                "runtime.makeslice": 1,
                "runtime.panicmakeslicelen": 1,
                "runtime.panicmakeslicecap": 1,
                "runtime.growslice": 1,
                "runtime.isPowerOfTwo": 1,
                "MKN8M8N": 1,
                "*MMN/M:N": 1,
                "MKN6M:N": 1,
                "runtime.stackinit": 1,
                "runtime.stacklog2": 1,
                "runtime.stackpoolalloc": 1,
                "runtime.gclinkptr.ptr": 1,
                "runtime.stackpoolfree": 1,
                "runtime.stackcacherefill": 1,
                "runtime.stackcacherelease": 1,
                "runtime.stackcache_clear": 1,
                "runtime.stackalloc": 1,
                "runtime.stackfree": 1,
                "runtime.adjustpointers": 1,
                "runtime/internal/sys.Ctz8": 1,
                "runtime.adjustframe": 1,
                "runtime.adjustpointer": 1,
                "runtime.adjustctxt": 1,
                "runtime.adjustdefers": 1,
                "runtime.adjustsudogs": 1,
                "runtime.findsghi": 1,
                "runtime.syncadjustsudogs": 1,
                "runtime.copystack": 1,
                "runtime.adjustpanics": 1,
                "runtime.round2": 1,
                "runtime.newstack": 1,
                "runtime.shrinkstack": 1,
                "runtime.freeStackSpans": 1,
                "runtime.getStackMap": 1,
                "runtime.morestackc": 1,
                "runtime.concatstrings": 1,
                "runtime.stringDataOnStack": 1,
                "runtime.concatstring2": 1,
                "runtime.concatstring3": 1,
                "runtime.concatstring4": 1,
                "runtime.concatstring5": 1,
                "runtime.slicebytetostring": 1,
                "runtime.rawstringtmp": 1,
                "runtime.stringtoslicebyte": 1,
                "runtime.stringtoslicerune": 1,
                "runtime.slicerunetostring": 1,
                "runtime.intstring": 1,
                "runtime.rawstring": 1,
                "runtime.rawbyteslice": 1,
                "runtime.rawruneslice": 1,
                "runtime.gostring": 1,
                "runtime.index": 1,
                "runtime.atoi": 1,
                "runtime.findnull": 1,
                "runtime.badsystemstack": 1,
                "reflect.memmove": 1,
                "runtime.(*Frames).Next": 1,
                "runtime.(*Func).Entry": 1,
                "runtime.expandCgoFrames": 1,
                "runtime.modulesinit": 1,
                "runtime.moduledataverify": 1,
                "runtime.moduledataverify1": 1,
                "runtime.FuncForPC": 1,
                "runtime.(*Func).Name": 1,
                "runtime.(*Func).funcInfo": 1,
                "runtime.(*Func).FileLine": 1,
                "runtime.findmoduledatap": 1,
                "runtime.findfunc": 1,
                "runtime.pcvalue": 1,
                "runtime.pcvalueCacheKey": 1,
                "runtime.funcname": 1,
                "runtime.cfuncname": 1,
                "runtime.funcnameFromNameoff": 1,
                "0JL*K7": 1,
                "runtime.funcline1": 1,
                "runtime.funcline": 1,
                "runtime.funcspdelta": 1,
                "runtime.pcdatavalue": 1,
                "runtime.pcdatastart": 1,
                "runtime.pcdatavalue1": 1,
                "runtime.funcdata": 1,
                "runtime.step": 1,
                "runtime.readvarint": 1,
                "time.Sleep": 1,
                "runtime.(*timer).assignBucket": 1,
                "runtime.badTimer": 1,
                "runtime.goroutineReady": 1,
                "runtime.addtimer": 1,
                "runtime.(*timersBucket).addtimerLocked": 1,
                "runtime.deltimer": 1,
                "runtime.(*timersBucket).deltimerLocked": 1,
                "runtime.modtimer": 1,
                "runtime.timerproc": 1,
                "runtime.timejump": 1,
                "runtime.timejumpLocked": 1,
                "runtime.siftupTimer": 1,
                "runtime.siftdownTimer": 1,
                "time.now": 1,
                "runtime.traceReader": 1,
                "runtime.traceProcFree": 1,
                "runtime.traceFullQueue": 1,
                "runtime.traceBufPtr.ptr": 1,
                "runtime.traceEvent": 1,
                "runtime.traceEventLocked": 1,
                "runtime.(*traceBufPtr).set": 1,
                "runtime.(*traceBuf).byte": 1,
                "runtime.traceStackID": 1,
                "runtime.traceAcquireBuffer": 1,
                "runtime.traceReleaseBuffer": 1,
                "runtime.traceFlush": 1,
                "runtime.(*traceBuf).varint": 1,
                "runtime.(*traceStackTable).put": 1,
                "runtime.(*traceStack).stack": 1,
                "runtime.(*traceStackTable).find": 1,
                "runtime.(*traceStackTable).newStack": 1,
                "runtime.(*traceAlloc).alloc": 1,
                "runtime.(*traceAllocBlockPtr).set": 1,
                "runtime.traceProcStart": 1,
                "runtime.traceProcStop": 1,
                "runtime.traceGCSweepStart": 1,
                "runtime.traceGCSweepSpan": 1,
                "runtime.traceGCSweepDone": 1,
                "runtime.traceGoCreate": 1,
                "runtime.traceGoStart": 1,
                "runtime.traceGoPark": 1,
                "runtime.traceGoUnpark": 1,
                "runtime.traceGoSysExit": 1,
                "runtime.traceGoSysBlock": 1,
                "runtime.traceNextGC": 1,
                "runtime.tracebackdefers": 1,
                "runtime.getArgInfoFast": 1,
                "runtime.gentraceback": 1,
                "runtime.topofstack": 1,
                "runtime.elideWrapperCalling": 1,
                "runtime.getArgInfo": 1,
                "runtime.tracebackCgoContext": 1,
                "runtime.printcreatedby": 1,
                "runtime.printcreatedby1": 1,
                "runtime.traceback": 1,
                "runtime.tracebacktrap": 1,
                "runtime.traceback1": 1,
                "runtime.printAncestorTraceback": 1,
                "runtime.printAncestorTracebackFuncInfo": 1,
                "runtime.callers": 1,
                "runtime.gcallers": 1,
                "runtime.showframe": 1,
                "runtime.showfuncinfo": 1,
                "runtime.contains": 1,
                "runtime.isExportedRuntime": 1,
                "&D%1&b": 1,
                "runtime.goroutineheader": 1,
                "runtime.tracebackothers": 1,
                "runtime.tracebackHexdump": 1,
                "runtime.isSystemGoroutine": 1,
                "runtime.printCgoTraceback": 1,
                "runtime.printOneCgoTraceback": 1,
                "runtime.callCgoSymbolizer": 1,
                "runtime.cgoContextPCs": 1,
                "runtime.(*_type).string": 1,
                "runtime.(*_type).uncommon": 1,
                "runtime.(*_type).name": 1,
                "runtime.(*_type).pkgpath": 1,
                "runtime.resolveNameOff": 1,
                "runtime.resolveTypeOff": 1,
                "runtime.(*_type).textOff": 1,
                "runtime.name.tagLen": 1,
                "runtime.name.data": 1,
                "runtime.name.nameLen": 1,
                "runtime.name.name": 1,
                "runtime.name.tag": 1,
                "runtime.name.pkgPath": 1,
                "runtime.typelinksinit": 1,
                "runtime.typesEqual": 1,
                "runtime.decoderune": 1,
                "runtime.encoderune": 1,
                "runtime.vdsoInitFromSysinfoEhdr": 1,
                "runtime.vdsoFindVersion": 1,
                "runtime.vdsoParseSymbols": 1,
                "runtime.vdsoauxv": 1,
                "runtime.inVDSOPage": 1,
                "runtime.mmap.func1": 1,
                "runtime.munmap.func1": 1,
                "runtime.sigaction.func1": 1,
                "runtime.cgoCheckWriteBarrier.func1": 1,
                "runtime.cgoCheckTypedBlock.func1": 1,
                "runtime.chansend.func1": 1,
                "runtime.chanrecv.func1": 1,
                "runtime.debugCallCheck.func1": 1,
                "runtime.debugCallWrap.func1": 1,
                "runtime.mallocgc.func1": 1,
                "runtime.persistentalloc.func1": 1,
                "runtime.freemcache.func1": 1,
                "runtime.SetFinalizer.func1": 1,
                "runtime.SetFinalizer.func2": 1,
                "runtime.gcStart.func1": 1,
                "runtime.gcStart.func2": 1,
                "runtime.gcMarkDone.func1.1": 1,
                "runtime.gcMarkDone.func1": 1,
                "runtime.gcMarkDone.func2": 1,
                "runtime.gcMarkDone.func3": 1,
                "runtime.gcMarkTermination.func1": 1,
                "runtime.gcMarkTermination.func2": 1,
                "runtime.gcMarkTermination.func3": 1,
                "runtime.gcMarkTermination.func4.1": 1,
                "runtime.gcMarkTermination.func4": 1,
                "runtime.gcBgMarkWorker.func1": 1,
                "runtime.gcBgMarkWorker.func2": 1,
                "runtime.markroot.func1": 1,
                "runtime.gcAssistAlloc.func1": 1,
                "runtime.scanstack.func1": 1,
                "runtime.getempty.func1": 1,
                "runtime.freeSomeWbufs.func1": 1,
                "runtime.(*mheap).coalesce.func1": 1,
                "runtime.(*mheap).coalesce.func2": 1,
                "runtime.(*mheap).alloc.func1": 1,
                "runtime.(*mheap).freeSpan.func1": 1,
                "runtime.mProf_Malloc.func1": 1,
                "runtime.tracealloc.func1": 1,
                "runtime.tracefree.func1": 1,
                "runtime.wbBufFlush.func1": 1,
                "runtime.futexwakeup.func1": 1,
                "runtime.sysSigaction.func1": 1,
                "runtime.newdefer.func1": 1,
                "runtime.newdefer.func2": 1,
                ">/K0F/00": 1,
                "runtime.freedefer.func1": 1,
                "runtime.preprintpanics.func1": 1,
                "runtime.throw.func1": 1,
                "runtime.fatalthrow.func1": 1,
                "runtime.fatalpanic.func1": 1,
                "runtime.fatalpanic.func2": 1,
                "runtime.hexdumpWords.func1": 1,
                "runtime.main.func1": 1,
                "runtime.main.func2": 1,
                "runtime.goready.func1": 1,
                "runtime.casgstatus.func1": 1,
                "runtime.casgstatus.func2": 1,
                "runtime.startTheWorld.func1": 1,
                "runtime.reentersyscall.func1": 1,
                "runtime.entersyscallblock.func1": 1,
                "runtime.entersyscallblock.func2": 1,
                "runtime.exitsyscallfast.func1": 1,
                "runtime.exitsyscallfast_reacquired.func1": 1,
                "runtime.malg.func1": 1,
                "runtime.newproc.func1": 1,
                "runtime.gfget.func1": 1,
                "runtime.(*rwmutex).rlock.func1": 1,
                "runtime.(*rwmutex).lock.func1": 1,
                "runtime.selectgo.func1": 1,
                "runtime.selectgo.func2": 1,
                "runtime.ensureSigM.func1": 1,
                "runtime.callers.func1": 1,
                "runtime.tracebackHexdump.func1": 1,
                "runtime.vdsoParseSymbols.func1": 1,
                "runtime._ELF_ST_TYPE": 1,
                "runtime._ELF_ST_BIND": 1,
                "runtime.init.ializers": 1,
                "runtime.init": 1,
                "runtime.skipPleaseUseCallersFrames": 1,
                "_rt0_amd64": 1,
                "runtime.rt0_go": 1,
                "runtime.asminit": 1,
                "runtime.gogo": 1,
                "runtime.mcall": 1,
                "runtime.systemstack_switch": 1,
                "runtime.systemstack": 1,
                "runtime.morestack": 1,
                "runtime.morestack_noctxt": 1,
                "runtime.reflectcall": 1,
                "callRet": 1,
                "runtime.call32": 1,
                "runtime.call64": 1,
                "runtime.call128": 1,
                "runtime.call256": 1,
                "runtime.call512": 1,
                "runtime.call1024": 1,
                "runtime.call2048": 1,
                "runtime.call4096": 1,
                "runtime.call8192": 1,
                "runtime.call16384": 1,
                "runtime.call32768": 1,
                "runtime.call65536": 1,
                "runtime.call131072": 1,
                "runtime.call262144": 1,
                "runtime.call524288": 1,
                "runtime.call1048576": 1,
                "runtime.call2097152": 1,
                "runtime.call4194304": 1,
                "runtime.call8388608": 1,
                "runtime.call16777216": 1,
                "runtime.call33554432": 1,
                "runtime.call67108864": 1,
                "runtime.call134217728": 1,
                "runtime.call268435456": 1,
                "runtime.call536870912": 1,
                "runtime.call1073741824": 1,
                "runtime.procyield": 1,
                "runtime.publicationBarrier": 1,
                "runtime.jmpdefer": 1,
                "gosave": 1,
                "runtime.asmcgocall": 1,
                "runtime.setg": 1,
                "setg_gcc": 1,
                "runtime.abort": 1,
                "runtime.stackcheck": 1,
                "runtime.cputicks": 1,
                "runtime.aeshash": 1,
                "runtime.aeshashstr": 1,
                "runtime.aeshashbody": 1,
                "runtime.aeshash32": 1,
                "runtime.aeshash64": 1,
                "runtime.checkASM": 1,
                "runtime.return0": 1,
                "runtime.goexit": 1,
                "runtime.gcWriteBarrier": 1,
                "runtime.debugCallV1": 1,
                "debugCall32": 1,
                "debugCall64": 1,
                "debugCall128": 1,
                "debugCall256": 1,
                "debugCall512": 1,
                "debugCall1024": 1,
                "debugCall2048": 1,
                "debugCall4096": 1,
                "debugCall8192": 1,
                "debugCall16384": 1,
                "debugCall32768": 1,
                "debugCall65536": 1,
                "runtime.debugCallPanicked": 1,
                "runtime.duffzero": 1,
                "runtime.duffcopy": 1,
                "runtime.memclrNoHeapPointers": 1,
                "runtime.memmove": 1,
                "_rt0_amd64_linux": 1,
                "runtime.exit": 1,
                "runtime.exitThread": 1,
                "runtime.open": 1,
                "runtime.closefd": 1,
                "runtime.write": 1,
                "runtime.read": 1,
                "runtime.usleep": 1,
                "runtime.gettid": 1,
                "runtime.raise": 1,
                "runtime.raiseproc": 1,
                "runtime.setitimer": 1,
                "runtime.mincore": 1,
                "runtime.walltime": 1,
                "runtime.nanotime": 1,
                "runtime.rtsigprocmask": 1,
                "runtime.rt_sigaction": 1,
                "runtime.callCgoSigaction": 1,
                "runtime.sigfwd": 1,
                "runtime.sigtramp": 1,
                "runtime.cgoSigtramp": 1,
                "runtime.sigreturn": 1,
                "runtime.sysMmap": 1,
                "runtime.callCgoMmap": 1,
                "runtime.sysMunmap": 1,
                "runtime.callCgoMunmap": 1,
                "runtime.madvise": 1,
                "runtime.futex": 1,
                "runtime.clone": 1,
                "runtime.sigaltstack": 1,
                "runtime.settls": 1,
                "runtime.osyield": 1,
                "runtime.sched_getaffinity": 1,
                "runtime.epollcreate": 1,
                "runtime.epollcreate1": 1,
                "runtime.epollctl": 1,
                "runtime.epollwait": 1,
                "runtime.closeonexec": 1,
                "runtime.(*name).name": 1,
                "type..hash.runtime.uncommontype": 1,
                "type..eq.runtime.uncommontype": 1,
                "type..hash.runtime._panic": 1,
                "type..eq.runtime._panic": 1,
                "type..hash.runtime._defer": 1,
                "type..eq.runtime._defer": 1,
                "type..hash.runtime.sysmontick": 1,
                "type..eq.runtime.sysmontick": 1,
                "type..hash.runtime.special": 1,
                "type..eq.runtime.special": 1,
                "type..hash.runtime.markBits": 1,
                "type..eq.runtime.markBits": 1,
                "type..hash.runtime.mcache": 1,
                "type..eq.runtime.mcache": 1,
                "type..hash.struct { runtime.gList": 1,
                "runtime.n int32 }": 6,
                "type..eq.struct { runtime.gList": 1,
                "type..hash.runtime.gcWork": 1,
                "type..eq.runtime.gcWork": 1,
                "type..hash.runtime.wbBuf": 1,
                "type..eq.runtime.wbBuf": 1,
                "runtime.(*waitReason).String": 1,
                "type..hash.runtime.sudog": 1,
                "type..eq.runtime.sudog": 1,
                "type..hash.runtime.hchan": 1,
                "type..eq.runtime.hchan": 1,
                "type..hash.[6]string": 1,
                "type..eq.[6]string": 1,
                "type..hash.[9]string": 1,
                "type..eq.[9]string": 1,
                "type..hash.runtime.bitvector": 1,
                "type..eq.runtime.bitvector": 1,
                "type..hash.runtime.itab": 1,
                "type..eq.runtime.itab": 1,
                "type..hash.runtime._func": 1,
                "type..eq.runtime._func": 1,
                "type..hash.runtime.modulehash": 1,
                "type..eq.runtime.modulehash": 1,
                "type..hash.runtime.treapNode": 1,
                "type..eq.runtime.treapNode": 1,
                "type..hash.runtime.gcSweepBuf": 1,
                "type..eq.runtime.gcSweepBuf": 1,
                "type..hash.[2]runtime.gcSweepBuf": 1,
                "type..eq.[2]runtime.gcSweepBuf": 1,
                "type..hash.runtime.arenaHint": 1,
                "type..eq.runtime.arenaHint": 1,
                "type..hash.runtime.mcentral": 1,
                "type..eq.runtime.mcentral": 1,
                "type..hash.struct { runtime.mcentral runtime.mcentral": 1,
                "runtime.pad [8]uint8 }": 4,
                "type..eq.struct { runtime.mcentral runtime.mcentral": 1,
                "type..hash.[134]struct { runtime.mcentral runtime.mcentral": 1,
                "type..eq.[134]struct { runtime.mcentral runtime.mcentral": 1,
                "type..hash.runtime.specialfinalizer": 1,
                "type..eq.runtime.specialfinalizer": 1,
                "type..hash.runtime.rwmutex": 1,
                "type..eq.runtime.rwmutex": 1,
                "type..hash.runtime.scase": 1,
                "type..eq.runtime.scase": 1,
                "type..hash.runtime.siginfo": 1,
                "type..eq.runtime.siginfo": 1,
                "type..hash.[2]string": 1,
                "type..eq.[2]string": 1,
                "type..hash.[3]string": 1,
                "type..eq.[3]string": 1,
                "type..hash.[4]string": 1,
                "type..eq.[4]string": 1,
                "type..hash.[5]string": 1,
                "type..eq.[5]string": 1,
                "runtime.(*itabTableType).add-fm": 1,
                "type..hash.runtime.Frame": 1,
                "type..eq.runtime.Frame": 1,
                "type..hash.[2]runtime.Frame": 1,
                "type..eq.[2]runtime.Frame": 1,
                "type..hash.runtime.TypeAssertionError": 1,
                "type..eq.runtime.TypeAssertionError": 1,
                "type..hash.runtime.cpuProfile": 1,
                "type..eq.runtime.cpuProfile": 1,
                "type..hash.runtime.dbgVar": 1,
                "type..eq.runtime.dbgVar": 1,
                "runtime.(*errorString).Error": 1,
                "runtime.(*errorString).RuntimeError": 1,
                "type..hash.runtime.finblock": 1,
                "type..eq.runtime.finblock": 1,
                "type..hash.runtime.forcegcstate": 1,
                "type..eq.runtime.forcegcstate": 1,
                "type..hash.runtime.funcinl": 1,
                "type..eq.runtime.funcinl": 1,
                "type..hash.runtime.gcControllerState": 1,
                "type..eq.runtime.gcControllerState": 1,
                "type..hash.runtime.gcTrigger": 1,
                "type..eq.runtime.gcTrigger": 1,
                "type..hash.runtime.hiter": 1,
                "type..eq.runtime.hiter": 1,
                "type..hash.struct { runtime.size uint32": 1,
                "runtime.nmalloc uint64": 4,
                "runtime.nfree uint64 }": 4,
                "type..eq.struct { runtime.size uint32": 1,
                "type..hash.[67]struct { runtime.size uint32": 1,
                "type..eq.[67]struct { runtime.size uint32": 1,
                "type..hash.runtime.mstats": 1,
                "type..eq.runtime.mstats": 1,
                "runtime.(*plainError).Error": 1,
                "runtime.(*plainError).RuntimeError": 1,
                "type..hash.struct { runtime.user bool": 1,
                "runtime.runnable runtime.gQueue": 2,
                "type..eq.struct { runtime.user bool": 1,
                "type..hash.struct { runtime.lock runtime.mutex": 2,
                "runtime.stack runtime.gList": 2,
                "runtime.noStack runtime.gList": 2,
                "type..eq.struct { runtime.lock runtime.mutex": 2,
                "type..hash.runtime.semaRoot": 1,
                "type..eq.runtime.semaRoot": 1,
                "type..hash.runtime.sigTabT": 1,
                "type..eq.runtime.sigTabT": 1,
                "type..hash.runtime.stackmap": 1,
                "type..eq.runtime.stackmap": 1,
                "type..hash.runtime.sweepdata": 1,
                "type..eq.runtime.sweepdata": 1,
                "type..hash.runtime.traceStack": 1,
                "type..eq.runtime.traceStack": 1,
                "type..hash.runtime.traceStackTable": 1,
                "type..eq.runtime.traceStackTable": 1,
                "type..hash.runtime.vdsoSymbolKey": 1,
                "type..eq.runtime.vdsoSymbolKey": 1,
                "type..hash.runtime.vdsoVersionKey": 1,
                "type..eq.runtime.vdsoVersionKey": 1,
                "type..hash.[16]runtime.dbgVar": 1,
                "type..eq.[16]runtime.dbgVar": 1,
                "type..hash.[24]string": 1,
                "type..eq.[24]string": 1,
                "type..hash.struct { runtime.root runtime.semaRoot": 1,
                "runtime.pad [40]uint8 }": 4,
                "type..eq.struct { runtime.root runtime.semaRoot": 1,
                "type..hash.[251]struct { runtime.root runtime.semaRoot": 1,
                "type..eq.[251]struct { runtime.root runtime.semaRoot": 1,
                "type..hash.[2]runtime.vdsoSymbolKey": 1,
                "type..eq.[2]runtime.vdsoSymbolKey": 1,
                "type..hash.[33]float64": 1,
                "type..eq.[33]float64": 1,
                "type..hash.[65]runtime.sigTabT": 1,
                "type..eq.[65]runtime.sigTabT": 1,
                "type..hash.struct { runtime.cycle uint32": 1,
                "runtime.flushed bool }": 2,
                "type..eq.struct { runtime.cycle uint32": 1,
                "type..hash.struct { runtime.enabled bool": 1,
                "runtime.pad [3]uint8": 2,
                "runtime.needed bool": 2,
                "runtime.cgo bool": 2,
                "runtime.alignme uint64 }": 2,
                "type..eq.struct { runtime.enabled bool": 1,
                "type..hash.struct { runtime.full runtime.lfstack": 1,
                "runtime.empty runtime.lfstack": 2,
                "runtime.pad0 internal/cpu.CacheLinePad": 2,
                "runtime.wbufSpans struct { runtime.lock runtime.mutex": 2,
                "runtime.free runtime.mSpanList": 2,
                "runtime.busy runtime.mSpanList }": 2,
                "runtime.bytesMarked uint64": 2,
                "runtime.markrootNext uint32": 2,
                "runtime.markrootJobs uint32": 2,
                "runtime.nproc uint32": 2,
                "runtime.tstart int64": 2,
                "runtime.nwait uint32": 2,
                "runtime.ndone uint32": 2,
                "runtime.nFlushCacheRoots int": 2,
                "runtime.nDataRoots int": 2,
                "runtime.nBSSRoots int": 2,
                "runtime.nSpanRoots int": 2,
                "runtime.nStackRoots int": 2,
                "runtime.startSema uint32": 2,
                "runtime.markDoneSema uint32": 2,
                "runtime.bgMarkReady runtime.note": 2,
                "runtime.bgMarkDone uint32": 2,
                "runtime.mode runtime.gcMode": 2,
                "runtime.userForced bool": 2,
                "runtime.totaltime int64": 2,
                "runtime.initialHeapLive uint64": 2,
                "runtime.assistQueue struct { runtime.lock runtime.mutex": 2,
                "runtime.q runtime.gQueue }": 2,
                "runtime.sweepWaiters struct { runtime.lock runtime.mutex": 2,
                "runtime.list runtime.gList }": 2,
                "runtime.cycles uint32": 2,
                "runtime.stwprocs int32": 2,
                "runtime.maxprocs int32": 2,
                "runtime.tSweepTerm int64": 2,
                "runtime.tMark int64": 2,
                "runtime.tMarkTerm int64": 2,
                "runtime.tEnd int64": 2,
                "runtime.pauseNS int64": 2,
                "runtime.pauseStart int64": 2,
                "runtime.heap0 uint64": 2,
                "runtime.heap1 uint64": 2,
                "runtime.heap2 uint64": 2,
                "runtime.heapGoal uint64 }": 2,
                "type..eq.struct { runtime.full runtime.lfstack": 1,
                "runtime.newm runtime.muintptr": 2,
                "runtime.waiting bool": 2,
                "runtime.wake runtime.note": 2,
                "runtime.haveTemplateThread uint32 }": 2,
                "type..hash.struct { runtime.note runtime.note": 1,
                "runtime.mask [3]uint32": 2,
                "runtime.wanted [3]uint32": 2,
                "runtime.ignored [3]uint32": 2,
                "runtime.recv [3]uint32": 2,
                "runtime.state uint32": 2,
                "runtime.delivering uint32": 2,
                "runtime.inuse bool }": 2,
                "type..eq.struct { runtime.note runtime.note": 1,
                "errors.New": 1,
                "errors.(*errorString).Error": 1,
                "sync.(*noCopy).Lock": 1,
                "sync.(*noCopy).Unlock": 1,
                "sync.(*Map).Load": 1,
                "sync.(*entry).load": 1,
                "sync.(*Map).Store": 1,
                "sync.(*entry).unexpungeLocked": 1,
                "sync.(*entry).storeLocked": 1,
                "sync.newEntry": 1,
                "sync.(*entry).tryStore": 1,
                "sync.(*Map).LoadOrStore": 1,
                "sync.(*entry).tryLoadOrStore": 1,
                "sync.(*Map).Delete": 1,
                "sync.(*entry).delete": 1,
                "sync.(*Map).Range": 1,
                "sync.(*Map).missLocked": 1,
                "sync.(*Map).dirtyLocked": 1,
                "sync.(*entry).tryExpungeLocked": 1,
                "sync.(*Mutex).Lock": 1,
                "sync.(*Mutex).Unlock": 1,
                "sync.(*Once).Do": 1,
                "sync.(*Pool).Put": 1,
                "sync.(*Pool).Get": 1,
                "sync.(*Pool).getSlow": 1,
                "sync.indexLocal": 1,
                "sync.(*Pool).pin": 1,
                "sync.(*Pool).pinSlow": 1,
                "sync.poolCleanup": 1,
                "sync.init.0": 1,
                "sync.init.1": 1,
                "sync.(*RWMutex).RLock": 1,
                "sync.(*RWMutex).RUnlock": 1,
                "sync.(*RWMutex).Lock": 1,
                "sync.(*RWMutex).Unlock": 1,
                "sync.(*RWMutex).RLocker": 1,
                "sync.(*rlocker).Lock": 1,
                "sync.(*rlocker).Unlock": 1,
                "sync.(*WaitGroup).Add": 1,
                "sync.(*WaitGroup).state": 1,
                "sync.(*WaitGroup).Done": 1,
                "sync.(*WaitGroup).Wait": 1,
                "sync.init.ializers": 1,
                "sync.init": 1,
                "sync.(*poolLocalInternal).Lock": 1,
                "sync.(*poolLocalInternal).Unlock": 1,
                "sync.(*poolLocal).Lock": 1,
                "sync.(*poolLocal).Unlock": 1,
                "io.WriteString": 1,
                "io.ReadAtLeast": 1,
                "io.copyBuffer": 1,
                "io.(*LimitedReader).Read": 1,
                "io.init.ializers": 1,
                "io.init": 1,
                "type..hash.io.LimitedReader": 1,
                "type..eq.io.LimitedReader": 1,
                "unicode/utf8.DecodeRune": 1,
                "unicode/utf8.DecodeRuneInString": 1,
                "unicode/utf8.DecodeLastRune": 1,
                "unicode/utf8.RuneStart": 1,
                "unicode/utf8.DecodeLastRuneInString": 1,
                "unicode/utf8.EncodeRune": 1,
                "unicode/utf8.RuneCount": 1,
                "unicode/utf8.RuneCountInString": 1,
                "unicode/utf8.ValidString": 1,
                "unicode.In": 1,
                "unicode.IsSpace": 1,
                "unicode.is16": 1,
                "unicode.is32": 1,
                "unicode.Is": 1,
                "unicode.isExcludingLatin": 1,
                "unicode.to": 1,
                "unicode.ToUpper": 1,
                "unicode.To": 1,
                "unicode.ToLower": 1,
                "unicode.SimpleFold": 1,
                "unicode.init.ializers": 1,
                "unicode.init": 1,
                "bytes.(*Buffer).Bytes": 1,
                "bytes.(*Buffer).String": 1,
                "bytes.(*Buffer).Len": 1,
                "bytes.(*Buffer).Cap": 1,
                "bytes.(*Buffer).Truncate": 1,
                "bytes.(*Buffer).Reset": 1,
                "bytes.(*Buffer).grow": 1,
                "bytes.(*Buffer).tryGrowByReslice": 1,
                "bytes.(*Buffer).Grow": 1,
                "bytes.(*Buffer).Write": 1,
                "bytes.(*Buffer).WriteString": 1,
                "bytes.(*Buffer).ReadFrom": 1,
                "bytes.makeSlice": 1,
                "bytes.(*Buffer).WriteTo": 1,
                "bytes.(*Buffer).WriteByte": 1,
                "bytes.(*Buffer).WriteRune": 1,
                "bytes.(*Buffer).Read": 1,
                "bytes.(*Buffer).empty": 1,
                "bytes.(*Buffer).Next": 1,
                "bytes.(*Buffer).ReadByte": 1,
                "bytes.(*Buffer).ReadRune": 1,
                "bytes.(*Buffer).UnreadRune": 1,
                "bytes.(*Buffer).UnreadByte": 1,
                "bytes.(*Buffer).ReadBytes": 1,
                "bytes.(*Buffer).readSlice": 1,
                "bytes.IndexByte": 1,
                "bytes.(*Buffer).ReadString": 1,
                "bytes.explode": 1,
                "bytes.Count": 1,
                "bytes.genSplit": 1,
                "bytes.EqualFold": 1,
                "bytes.Index": 1,
                "internal/bytealg.Cutover": 1,
                "bytes.Equal": 1,
                "bytes.indexRabinKarp": 1,
                "bytes.hashStr": 1,
                "bytes.(*Reader).Len": 1,
                "bytes.(*Reader).Size": 1,
                "bytes.(*Reader).Read": 1,
                "bytes.(*Reader).ReadAt": 1,
                "bytes.(*Reader).ReadByte": 1,
                "bytes.(*Reader).UnreadByte": 1,
                "bytes.(*Reader).ReadRune": 1,
                "bytes.(*Reader).UnreadRune": 1,
                "bytes.(*Reader).Seek": 1,
                "G!0\"$!": 1,
                "\"L!0\"$!": 1,
                "bytes.(*Reader).WriteTo": 1,
                "bytes.(*Reader).Reset": 1,
                "bytes.makeSlice.func1": 1,
                "bytes.init.ializers": 1,
                "bytes.init": 1,
                "bufio.(*Reader).Size": 1,
                "bufio.(*Reader).Reset": 1,
                "bufio.(*Reader).reset": 1,
                "bufio.(*Reader).fill": 1,
                "bufio.(*Reader).Peek": 1,
                "bufio.(*Reader).readErr": 1,
                "bufio.(*Reader).Discard": 1,
                "bufio.(*Reader).Buffered": 1,
                "bufio.(*Reader).Read": 1,
                "bufio.(*Reader).ReadByte": 1,
                "bufio.(*Reader).UnreadByte": 1,
                "bufio.(*Reader).ReadRune": 1,
                "unicode/utf8.FullRune": 1,
                "bufio.(*Reader).UnreadRune": 1,
                "bufio.(*Reader).ReadSlice": 1,
                "bufio.(*Reader).ReadLine": 1,
                "bufio.(*Reader).ReadBytes": 1,
                "bufio.(*Reader).ReadString": 1,
                "bufio.(*Reader).WriteTo": 1,
                "bufio.(*Reader).writeBuf": 1,
                "bufio.init.ializers": 1,
                "bufio.init": 1,
                "math.asin": 1,
                "math.NaN": 1,
                "math.acos": 1,
                "math.satan": 1,
                "math.xatan": 1,
                "math.atan": 1,
                "math.atan2": 1,
                "math.IsNaN": 1,
                "math.Signbit": 1,
                "math.Copysign": 1,
                "math.IsInf": 1,
                "math.Inf": 1,
                "math.frexp": 1,
                "math.normalize": 1,
                "math.Abs": 1,
                "math.Float64frombits": 1,
                "math.Float64bits": 1,
                "math.ldexp": 1,
                "math.log10": 1,
                "math.mod": 1,
                "math.modf": 1,
                "math.pow": 1,
                "math.isOddInt": 1,
                "math.cos": 1,
                "math.sin": 1,
                "math.tan": 1,
                "math.trigReduce": 1,
                "math/bits.LeadingZeros64": 1,
                "math.init.ializers": 1,
                "math.init": 1,
                "math.Asin": 1,
                "math.Acos": 1,
                "math.Atan2": 1,
                "math.Atan": 1,
                "math.Max": 1,
                "math.Min": 1,
                "math.Exp": 1,
                "math.Floor": 1,
                "math.Ceil": 1,
                "math.Frexp": 1,
                "math.Ldexp": 1,
                "math.Log10": 1,
                "math.Log": 1,
                "math.Mod": 1,
                "math.Modf": 1,
                "math.Pow": 1,
                "math.Sin": 1,
                "math.Cos": 1,
                "math.Tan": 1,
                "type..hash.[5]float64": 1,
                "type..eq.[5]float64": 1,
                "type..hash.[6]float64": 1,
                "type..eq.[6]float64": 1,
                "type..hash.[3]float64": 1,
                "type..eq.[3]float64": 1,
                "strconv.equalIgnoreCase": 1,
                "strconv.special": 1,
                "strconv.(*decimal).set": 1,
                "strconv.readFloat": 1,
                "strconv.(*decimal).floatBits": 1,
                "strconv.atof64exact": 1,
                "strconv.atof32exact": 1,
                "strconv.atof32": 1,
                "strconv.rangeError": 1,
                "strconv.syntaxError": 1,
                "strconv.atof64": 1,
                "strconv.ParseFloat": 1,
                "strconv.(*NumError).Error": 1,
                "strconv.Quote": 1,
                "strconv.quoteWith": 1,
                "strconv.baseError": 1,
                "strconv.Itoa": 1,
                "strconv.bitSizeError": 1,
                "strconv.ParseUint": 1,
                "strconv.ParseInt": 1,
                "strconv.(*decimal).String": 1,
                "strconv.digitZero": 1,
                "strconv.trim": 1,
                "strconv.(*decimal).Assign": 1,
                "strconv.rightShift": 1,
                "strconv.prefixIsLessThan": 1,
                "strconv.leftShift": 1,
                "strconv.(*decimal).Shift": 1,
                "strconv.(*decimal).Round": 1,
                "strconv.shouldRoundUp": 1,
                "strconv.(*decimal).RoundDown": 1,
                "strconv.(*decimal).RoundUp": 1,
                "strconv.(*decimal).RoundedInteger": 1,
                "strconv.(*extFloat).floatBits": 1,
                "strconv.(*extFloat).Normalize": 1,
                "strconv.(*extFloat).AssignComputeBounds": 1,
                "strconv.(*extFloat).Multiply": 1,
                "strconv.(*extFloat).AssignDecimal": 1,
                "strconv.(*extFloat).frexp10": 1,
                "strconv.frexp10Many": 1,
                "strconv.(*extFloat).FixedDecimal": 1,
                "strconv.adjustLastDigitFixed": 1,
                "strconv.(*extFloat).ShortestDecimal": 1,
                "strconv.adjustLastDigit": 1,
                "strconv.FormatFloat": 1,
                "strconv.max": 1,
                "strconv.genericFtoa": 1,
                "math.Float32bits": 1,
                "strconv.bigFtoa": 1,
                "strconv.formatDigits": 1,
                "strconv.roundShortest": 1,
                "strconv.fmtE": 1,
                "strconv.min": 1,
                "strconv.fmtF": 1,
                "strconv.fmtB": 1,
                "strconv.FormatUint": 1,
                "strconv.small": 1,
                "strconv.FormatInt": 1,
                "strconv.AppendInt": 1,
                "strconv.AppendUint": 1,
                "strconv.formatBits": 1,
                "strconv.isPowerOfTwo": 1,
                "math/bits.TrailingZeros": 1,
                "strconv.appendQuotedWith": 1,
                "strconv.appendQuotedRuneWith": 1,
                "unicode/utf8.ValidRune": 1,
                "strconv.appendEscapedRune": 1,
                "strconv.CanBackquote": 1,
                "strconv.UnquoteChar": 1,
                "strconv.unhex": 1,
                "strconv.Unquote": 1,
                "strconv.contains": 1,
                "strconv.bsearch16": 1,
                "strconv.bsearch32": 1,
                "strconv.IsPrint": 1,
                "strconv.isInGraphicList": 1,
                "strconv.init.ializers": 1,
                "strconv.init": 1,
                "type..hash.strconv.NumError": 1,
                "type..eq.strconv.NumError": 1,
                "type..hash.strconv.decimal": 1,
                "type..eq.strconv.decimal": 1,
                "type..hash.strconv.extFloat": 1,
                "type..eq.strconv.extFloat": 1,
                "type..hash.strconv.leftCheat": 1,
                "type..eq.strconv.leftCheat": 1,
                "type..hash.[11]float32": 1,
                "type..eq.[11]float32": 1,
                "type..hash.[23]float64": 1,
                "type..eq.[23]float64": 1,
                "type..hash.[61]strconv.leftCheat": 1,
                "type..eq.[61]strconv.leftCheat": 1,
                "type..hash.[87]strconv.extFloat": 1,
                "type..eq.[87]strconv.extFloat": 1,
                "type..hash.[8]strconv.extFloat": 1,
                "type..eq.[8]strconv.extFloat": 1,
                "reflect.MakeFunc": 1,
                "reflect.makeMethodValue": 1,
                "reflect.(*rtype).Kind": 1,
                "reflect.Swapper": 1,
                "reflect.ValueOf": 1,
                "reflect.escapes": 1,
                "reflect.unpackEface": 1,
                "reflect.ifaceIndir": 1,
                "reflect.Value.Kind": 1,
                "reflect.flag.kind": 1,
                "reflect.(*rtype).Size": 1,
                "reflect.name.tagLen": 1,
                "reflect.name.data": 1,
                "reflect.name.nameLen": 1,
                "reflect.add": 1,
                "reflect.name.name": 1,
                "reflect.name.tag": 1,
                "reflect.name.pkgPath": 1,
                "reflect.newName": 1,
                "reflect.Kind.String": 1,
                "reflect.(*rtype).uncommon": 1,
                "reflect.(*rtype).String": 1,
                "reflect.(*rtype).nameOff": 1,
                "reflect.(*rtype).Bits": 1,
                "reflect.(*rtype).Align": 1,
                "reflect.(*rtype).FieldAlign": 1,
                "reflect.(*rtype).common": 1,
                "reflect.(*rtype).exportedMethods": 1,
                "reflect.(*uncommonType).exportedMethods": 1,
                "reflect.(*rtype).NumMethod": 1,
                "reflect.(*interfaceType).NumMethod": 1,
                "reflect.(*rtype).Method": 1,
                "reflect.(*rtype).typeOff": 1,
                "reflect.(*funcType).in": 1,
                "reflect.(*rtype).textOff": 1,
                "reflect.(*funcType).out": 1,
                "reflect.(*rtype).IsVariadic": 1,
                "reflect.(*rtype).MethodByName": 1,
                "reflect.(*rtype).PkgPath": 1,
                "reflect.(*rtype).Name": 1,
                "reflect.(*rtype).ChanDir": 1,
                "reflect.(*rtype).Elem": 1,
                "reflect.toType": 1,
                "reflect.(*rtype).Field": 1,
                "reflect.(*rtype).FieldByIndex": 1,
                "reflect.(*rtype).FieldByName": 1,
                "reflect.(*rtype).FieldByNameFunc": 1,
                "reflect.(*rtype).In": 1,
                "reflect.(*rtype).Key": 1,
                "reflect.(*rtype).Len": 1,
                "reflect.(*rtype).NumField": 1,
                "reflect.(*rtype).NumIn": 1,
                "reflect.(*rtype).NumOut": 1,
                "reflect.(*rtype).Out": 1,
                "reflect.ChanDir.String": 1,
                "reflect.(*interfaceType).Method": 1,
                "reflect.name.isExported": 1,
                "reflect.(*interfaceType).MethodByName": 1,
                "reflect.StructTag.Get": 1,
                "reflect.StructTag.Lookup": 1,
                "reflect.(*structType).Field": 1,
                "reflect.(*structField).embedded": 1,
                "reflect.(*structField).offset": 1,
                "reflect.(*structType).FieldByIndex": 1,
                "reflect.(*structType).FieldByNameFunc": 1,
                "reflect.(*structType).FieldByName": 1,
                "reflect.TypeOf": 1,
                "reflect.(*rtype).ptrTo": 1,
                "reflect.resolveReflectName": 1,
                "reflect.fnv1": 1,
                "reflect.(*rtype).Implements": 1,
                "reflect.(*rtype).AssignableTo": 1,
                "reflect.(*rtype).ConvertibleTo": 1,
                "reflect.(*rtype).Comparable": 1,
                "reflect.implements": 1,
                "reflect.(*uncommonType).methods": 1,
                "reflect.directlyAssignable": 1,
                "reflect.haveIdenticalType": 1,
                "reflect.haveIdenticalUnderlyingType": 1,
                "reflect.typesByString": 1,
                "reflect.rtypeOff": 1,
                "reflect.FuncOf": 1,
                "reflect.funcStr": 1,
                "reflect.SliceOf": 1,
                "reflect.funcLayout": 1,
                "reflect.(*bitVector).append": 1,
                "reflect.(*rtype).pointers": 1,
                "reflect.addTypeBits": 1,
                "reflect.packEface": 1,
                "reflect.(*ValueError).Error": 1,
                "reflect.methodName": 1,
                "reflect.flag.mustBe": 1,
                "reflect.flag.mustBeExported": 1,
                "reflect.flag.mustBeAssignable": 1,
                "reflect.Value.Addr": 1,
                "reflect.flag.ro": 1,
                "reflect.Value.Bool": 1,
                "reflect.Value.Bytes": 1,
                "reflect.Value.runes": 1,
                "reflect.Value.CanAddr": 1,
                "reflect.Value.CanSet": 1,
                "reflect.Value.Call": 1,
                "reflect.Value.CallSlice": 1,
                "reflect.Value.call": 1,
                "reflect.storeRcvr": 1,
                "-2.R->0(": 1,
                "reflect.callReflect": 1,
                "reflect.methodReceiver": 1,
                "reflect.callMethod": 1,
                "reflect.funcName": 1,
                "reflect.Value.Cap": 1,
                "reflect.Value.pointer": 1,
                "reflect.Value.Close": 1,
                "reflect.Value.Complex": 1,
                "reflect.Value.Elem": 1,
                "reflect.Value.Field": 1,
                "reflect.Value.FieldByIndex": 1,
                "reflect.Value.IsNil": 1,
                "reflect.Value.FieldByName": 1,
                "reflect.Value.FieldByNameFunc": 1,
                "reflect.Value.Float": 1,
                "reflect.Value.Index": 1,
                "reflect.arrayAt": 1,
                "reflect.Value.Int": 1,
                "reflect.Value.CanInterface": 1,
                "reflect.Value.Interface": 1,
                "reflect.valueInterface": 1,
                "reflect.Value.InterfaceData": 1,
                "reflect.Value.IsValid": 1,
                "reflect.Value.Len": 1,
                "reflect.Value.MapIndex": 1,
                "reflect.Value.MapKeys": 1,
                "reflect.(*MapIter).Key": 1,
                "reflect.(*MapIter).Value": 1,
                "reflect.(*MapIter).Next": 1,
                "reflect.Value.MapRange": 1,
                "reflect.copyVal": 1,
                "reflect.Value.Method": 1,
                "reflect.Value.NumMethod": 1,
                "reflect.Value.MethodByName": 1,
                "reflect.Value.NumField": 1,
                "reflect.Value.OverflowComplex": 1,
                "reflect.overflowFloat32": 1,
                "reflect.Value.OverflowFloat": 1,
                "reflect.Value.OverflowInt": 1,
                "reflect.Value.OverflowUint": 1,
                "reflect.Value.Pointer": 1,
                "reflect.Value.Recv": 1,
                "reflect.Value.recv": 1,
                "reflect.Value.Send": 1,
                "reflect.Value.send": 1,
                "reflect.Value.Set": 1,
                "reflect.Value.SetBool": 1,
                "reflect.Value.SetBytes": 1,
                "reflect.Value.setRunes": 1,
                "reflect.Value.SetComplex": 1,
                "reflect.Value.SetFloat": 1,
                "reflect.Value.SetInt": 1,
                "reflect.Value.SetLen": 1,
                "reflect.Value.SetCap": 1,
                "reflect.Value.SetMapIndex": 1,
                "reflect.Value.SetUint": 1,
                "reflect.Value.SetPointer": 1,
                "reflect.Value.SetString": 1,
                "reflect.Value.Slice": 1,
                "reflect.Value.Slice3": 1,
                "reflect.Value.String": 1,
                "reflect.Value.TryRecv": 1,
                "reflect.Value.TrySend": 1,
                "reflect.Value.Type": 1,
                "reflect.Value.Uint": 1,
                "reflect.Value.UnsafeAddr": 1,
                "reflect.typesMustMatch": 1,
                "reflect.Copy": 1,
                "reflect.MakeSlice": 1,
                "reflect.MakeMapWithSize": 1,
                "reflect.Zero": 1,
                "reflect.New": 1,
                "reflect.Value.assignTo": 1,
                "reflect.Value.Convert": 1,
                "reflect.convertOp": 1,
                "reflect.makeInt": 1,
                "reflect.makeFloat": 1,
                "reflect.makeComplex": 1,
                "reflect.makeString": 1,
                "reflect.makeBytes": 1,
                "reflect.makeRunes": 1,
                "reflect.cvtInt": 1,
                "reflect.cvtUint": 1,
                "reflect.cvtFloatInt": 1,
                "reflect.cvtFloatUint": 1,
                "reflect.cvtIntFloat": 1,
                "reflect.cvtUintFloat": 1,
                "reflect.cvtFloat": 1,
                "reflect.cvtComplex": 1,
                "reflect.cvtIntString": 1,
                "reflect.cvtUintString": 1,
                "reflect.cvtBytesString": 1,
                "reflect.cvtStringBytes": 1,
                "reflect.cvtRunesString": 1,
                "reflect.cvtStringRunes": 1,
                "reflect.cvtDirect": 1,
                "reflect.cvtT2I": 1,
                "reflect.cvtI2I": 1,
                "reflect.Swapper.func1": 1,
                "reflect.Swapper.func2": 1,
                "reflect.Swapper.func3": 1,
                "reflect.Swapper.func4": 1,
                "reflect.Swapper.func5": 1,
                "reflect.Swapper.func6": 1,
                "reflect.Swapper.func7": 1,
                "reflect.Swapper.func8": 1,
                "reflect.Swapper.func9": 1,
                "reflect.(*structType).FieldByName.func1": 1,
                "reflect.FuncOf.func1": 1,
                "reflect.funcLayout.func1": 1,
                "reflect.init.ializers": 1,
                "reflect.init": 1,
                "reflect.makeFuncStub": 1,
                "reflect.methodValueCall": 1,
                "reflect.(*ChanDir).String": 1,
                "reflect.(*StructTag).Get": 1,
                "reflect.(*StructTag).Lookup": 1,
                "reflect.(*Kind).String": 1,
                "reflect.(*name).name": 1,
                "type..hash.reflect.uncommonType": 1,
                "type..eq.reflect.uncommonType": 1,
                "reflect.(*Value).Addr": 1,
                "reflect.(*Value).Bool": 1,
                "reflect.(*Value).Bytes": 1,
                "reflect.(*Value).Call": 1,
                "reflect.(*Value).CallSlice": 1,
                "reflect.(*Value).CanAddr": 1,
                "reflect.(*Value).CanInterface": 1,
                "reflect.(*Value).CanSet": 1,
                "reflect.(*Value).Cap": 1,
                "reflect.(*Value).Close": 1,
                "reflect.(*Value).Complex": 1,
                "reflect.(*Value).Convert": 1,
                "reflect.(*Value).Elem": 1,
                "reflect.(*Value).Field": 1,
                "reflect.(*Value).FieldByIndex": 1,
                "reflect.(*Value).FieldByName": 1,
                "reflect.(*Value).FieldByNameFunc": 1,
                "reflect.(*Value).Float": 1,
                "reflect.(*Value).Index": 1,
                "reflect.(*Value).Int": 1,
                "reflect.(*Value).Interface": 1,
                "reflect.(*Value).InterfaceData": 1,
                "reflect.(*Value).IsNil": 1,
                "reflect.(*Value).IsValid": 1,
                "reflect.(*Value).Kind": 1,
                "reflect.(*Value).Len": 1,
                "reflect.(*Value).MapIndex": 1,
                "reflect.(*Value).MapKeys": 1,
                "reflect.(*Value).MapRange": 1,
                "reflect.(*Value).Method": 1,
                "reflect.(*Value).MethodByName": 1,
                "reflect.(*Value).NumField": 1,
                "reflect.(*Value).NumMethod": 1,
                "reflect.(*Value).OverflowComplex": 1,
                "reflect.(*Value).OverflowFloat": 1,
                "reflect.(*Value).OverflowInt": 1,
                "reflect.(*Value).OverflowUint": 1,
                "reflect.(*Value).Pointer": 1,
                "reflect.(*Value).Recv": 1,
                "reflect.(*Value).Send": 1,
                "reflect.(*Value).Set": 1,
                "reflect.(*Value).SetBool": 1,
                "reflect.(*Value).SetBytes": 1,
                "reflect.(*Value).SetCap": 1,
                "reflect.(*Value).SetComplex": 1,
                "reflect.(*Value).SetFloat": 1,
                "reflect.(*Value).SetInt": 1,
                "reflect.(*Value).SetLen": 1,
                "reflect.(*Value).SetMapIndex": 1,
                "reflect.(*Value).SetPointer": 1,
                "reflect.(*Value).SetString": 1,
                "reflect.(*Value).SetUint": 1,
                "reflect.(*Value).Slice": 1,
                "reflect.(*Value).Slice3": 1,
                "reflect.(*Value).String": 1,
                "reflect.(*Value).TryRecv": 1,
                "reflect.(*Value).TrySend": 1,
                "reflect.(*Value).Type": 1,
                "reflect.(*Value).Uint": 1,
                "reflect.(*Value).UnsafeAddr": 1,
                "type..hash.reflect.Method": 1,
                "type..eq.reflect.Method": 1,
                "reflect.(*structType).Align": 1,
                "reflect.(*structType).AssignableTo": 1,
                "reflect.(*structType).Bits": 1,
                "reflect.(*structType).ChanDir": 1,
                "reflect.(*structType).Comparable": 1,
                "reflect.(*structType).ConvertibleTo": 1,
                "reflect.(*structType).Elem": 1,
                "reflect.(*structType).FieldAlign": 1,
                "reflect.(*structType).Implements": 1,
                "reflect.(*structType).In": 1,
                "reflect.(*structType).IsVariadic": 1,
                "reflect.(*structType).Key": 1,
                "reflect.(*structType).Kind": 1,
                "reflect.(*structType).Len": 1,
                "reflect.(*structType).Method": 1,
                "reflect.(*structType).MethodByName": 1,
                "reflect.(*structType).Name": 1,
                "reflect.(*structType).NumField": 1,
                "reflect.(*structType).NumIn": 1,
                "reflect.(*structType).NumMethod": 1,
                "reflect.(*structType).NumOut": 1,
                "reflect.(*structType).Out": 1,
                "reflect.(*structType).PkgPath": 1,
                "reflect.(*structType).Size": 1,
                "reflect.(*structType).String": 1,
                "reflect.(*structType).common": 1,
                "reflect.(*structType).uncommon": 1,
                "type..hash.reflect.funcType": 1,
                "type..eq.reflect.funcType": 1,
                "reflect.(*funcType).Align": 1,
                "reflect.(*funcType).AssignableTo": 1,
                "reflect.(*funcType).Bits": 1,
                "reflect.(*funcType).ChanDir": 1,
                "reflect.(*funcType).Comparable": 1,
                "reflect.(*funcType).ConvertibleTo": 1,
                "reflect.(*funcType).Elem": 1,
                "reflect.(*funcType).Field": 1,
                "reflect.(*funcType).FieldAlign": 1,
                "reflect.(*funcType).FieldByIndex": 1,
                "reflect.(*funcType).FieldByName": 1,
                "reflect.(*funcType).FieldByNameFunc": 1,
                "reflect.(*funcType).Implements": 1,
                "reflect.(*funcType).In": 1,
                "reflect.(*funcType).IsVariadic": 1,
                "reflect.(*funcType).Key": 1,
                "reflect.(*funcType).Kind": 1,
                "reflect.(*funcType).Len": 1,
                "reflect.(*funcType).Method": 1,
                "reflect.(*funcType).MethodByName": 1,
                "reflect.(*funcType).Name": 1,
                "reflect.(*funcType).NumField": 1,
                "reflect.(*funcType).NumIn": 1,
                "reflect.(*funcType).NumMethod": 1,
                "reflect.(*funcType).NumOut": 1,
                "reflect.(*funcType).Out": 1,
                "reflect.(*funcType).PkgPath": 1,
                "reflect.(*funcType).Size": 1,
                "reflect.(*funcType).String": 1,
                "reflect.(*funcType).common": 1,
                "reflect.(*funcType).uncommon": 1,
                "type..hash.reflect.ValueError": 1,
                "type..eq.reflect.ValueError": 1,
                "type..hash.reflect.funcTypeFixed128": 1,
                "type..eq.reflect.funcTypeFixed128": 1,
                "reflect.(*funcTypeFixed128).Align": 1,
                "reflect.(*funcTypeFixed128).AssignableTo": 1,
                "reflect.(*funcTypeFixed128).Bits": 1,
                "reflect.(*funcTypeFixed128).ChanDir": 1,
                "reflect.(*funcTypeFixed128).Comparable": 1,
                "reflect.(*funcTypeFixed128).ConvertibleTo": 1,
                "reflect.(*funcTypeFixed128).Elem": 1,
                "reflect.(*funcTypeFixed128).Field": 1,
                "reflect.(*funcTypeFixed128).FieldAlign": 1,
                "reflect.(*funcTypeFixed128).FieldByIndex": 1,
                "reflect.(*funcTypeFixed128).FieldByName": 1,
                "reflect.(*funcTypeFixed128).FieldByNameFunc": 1,
                "reflect.(*funcTypeFixed128).Implements": 1,
                "reflect.(*funcTypeFixed128).In": 1,
                "reflect.(*funcTypeFixed128).IsVariadic": 1,
                "reflect.(*funcTypeFixed128).Key": 1,
                "reflect.(*funcTypeFixed128).Kind": 1,
                "reflect.(*funcTypeFixed128).Len": 1,
                "reflect.(*funcTypeFixed128).Method": 1,
                "reflect.(*funcTypeFixed128).MethodByName": 1,
                "reflect.(*funcTypeFixed128).Name": 1,
                "reflect.(*funcTypeFixed128).NumField": 1,
                "reflect.(*funcTypeFixed128).NumIn": 1,
                "reflect.(*funcTypeFixed128).NumMethod": 1,
                "reflect.(*funcTypeFixed128).NumOut": 1,
                "reflect.(*funcTypeFixed128).Out": 1,
                "reflect.(*funcTypeFixed128).PkgPath": 1,
                "reflect.(*funcTypeFixed128).Size": 1,
                "reflect.(*funcTypeFixed128).String": 1,
                "reflect.(*funcTypeFixed128).common": 1,
                "reflect.(*funcTypeFixed128).uncommon": 1,
                "type..hash.reflect.funcTypeFixed16": 1,
                "type..eq.reflect.funcTypeFixed16": 1,
                "reflect.(*funcTypeFixed16).Align": 1,
                "reflect.(*funcTypeFixed16).AssignableTo": 1,
                "reflect.(*funcTypeFixed16).Bits": 1,
                "reflect.(*funcTypeFixed16).ChanDir": 1,
                "reflect.(*funcTypeFixed16).Comparable": 1,
                "reflect.(*funcTypeFixed16).ConvertibleTo": 1,
                "reflect.(*funcTypeFixed16).Elem": 1,
                "reflect.(*funcTypeFixed16).Field": 1,
                "reflect.(*funcTypeFixed16).FieldAlign": 1,
                "reflect.(*funcTypeFixed16).FieldByIndex": 1,
                "reflect.(*funcTypeFixed16).FieldByName": 1,
                "reflect.(*funcTypeFixed16).FieldByNameFunc": 1,
                "reflect.(*funcTypeFixed16).Implements": 1,
                "reflect.(*funcTypeFixed16).In": 1,
                "reflect.(*funcTypeFixed16).IsVariadic": 1,
                "reflect.(*funcTypeFixed16).Key": 1,
                "reflect.(*funcTypeFixed16).Kind": 1,
                "reflect.(*funcTypeFixed16).Len": 1,
                "reflect.(*funcTypeFixed16).Method": 1,
                "reflect.(*funcTypeFixed16).MethodByName": 1,
                "reflect.(*funcTypeFixed16).Name": 1,
                "reflect.(*funcTypeFixed16).NumField": 1,
                "reflect.(*funcTypeFixed16).NumIn": 1,
                "reflect.(*funcTypeFixed16).NumMethod": 1,
                "reflect.(*funcTypeFixed16).NumOut": 1,
                "reflect.(*funcTypeFixed16).Out": 1,
                "reflect.(*funcTypeFixed16).PkgPath": 1,
                "reflect.(*funcTypeFixed16).Size": 1,
                "reflect.(*funcTypeFixed16).String": 1,
                "reflect.(*funcTypeFixed16).common": 1,
                "reflect.(*funcTypeFixed16).uncommon": 1,
                "type..hash.reflect.funcTypeFixed32": 1,
                "type..eq.reflect.funcTypeFixed32": 1,
                "reflect.(*funcTypeFixed32).Align": 1,
                "reflect.(*funcTypeFixed32).AssignableTo": 1,
                "reflect.(*funcTypeFixed32).Bits": 1,
                "reflect.(*funcTypeFixed32).ChanDir": 1,
                "reflect.(*funcTypeFixed32).Comparable": 1,
                "reflect.(*funcTypeFixed32).ConvertibleTo": 1,
                "reflect.(*funcTypeFixed32).Elem": 1,
                "reflect.(*funcTypeFixed32).Field": 1,
                "reflect.(*funcTypeFixed32).FieldAlign": 1,
                "reflect.(*funcTypeFixed32).FieldByIndex": 1,
                "reflect.(*funcTypeFixed32).FieldByName": 1,
                "reflect.(*funcTypeFixed32).FieldByNameFunc": 1,
                "reflect.(*funcTypeFixed32).Implements": 1,
                "reflect.(*funcTypeFixed32).In": 1,
                "reflect.(*funcTypeFixed32).IsVariadic": 1,
                "reflect.(*funcTypeFixed32).Key": 1,
                "reflect.(*funcTypeFixed32).Kind": 1,
                "reflect.(*funcTypeFixed32).Len": 1,
                "reflect.(*funcTypeFixed32).Method": 1,
                "reflect.(*funcTypeFixed32).MethodByName": 1,
                "reflect.(*funcTypeFixed32).Name": 1,
                "reflect.(*funcTypeFixed32).NumField": 1,
                "reflect.(*funcTypeFixed32).NumIn": 1,
                "reflect.(*funcTypeFixed32).NumMethod": 1,
                "reflect.(*funcTypeFixed32).NumOut": 1,
                "reflect.(*funcTypeFixed32).Out": 1,
                "reflect.(*funcTypeFixed32).PkgPath": 1,
                "reflect.(*funcTypeFixed32).Size": 1,
                "reflect.(*funcTypeFixed32).String": 1,
                "reflect.(*funcTypeFixed32).common": 1,
                "reflect.(*funcTypeFixed32).uncommon": 1,
                "type..hash.reflect.funcTypeFixed4": 1,
                "type..eq.reflect.funcTypeFixed4": 1,
                "reflect.(*funcTypeFixed4).Align": 1,
                "reflect.(*funcTypeFixed4).AssignableTo": 1,
                "reflect.(*funcTypeFixed4).Bits": 1,
                "reflect.(*funcTypeFixed4).ChanDir": 1,
                "reflect.(*funcTypeFixed4).Comparable": 1,
                "reflect.(*funcTypeFixed4).ConvertibleTo": 1,
                "reflect.(*funcTypeFixed4).Elem": 1,
                "reflect.(*funcTypeFixed4).Field": 1,
                "reflect.(*funcTypeFixed4).FieldAlign": 1,
                "reflect.(*funcTypeFixed4).FieldByIndex": 1,
                "reflect.(*funcTypeFixed4).FieldByName": 1,
                "reflect.(*funcTypeFixed4).FieldByNameFunc": 1,
                "reflect.(*funcTypeFixed4).Implements": 1,
                "reflect.(*funcTypeFixed4).In": 1,
                "reflect.(*funcTypeFixed4).IsVariadic": 1,
                "reflect.(*funcTypeFixed4).Key": 1,
                "reflect.(*funcTypeFixed4).Kind": 1,
                "reflect.(*funcTypeFixed4).Len": 1,
                "reflect.(*funcTypeFixed4).Method": 1,
                "reflect.(*funcTypeFixed4).MethodByName": 1,
                "reflect.(*funcTypeFixed4).Name": 1,
                "reflect.(*funcTypeFixed4).NumField": 1,
                "reflect.(*funcTypeFixed4).NumIn": 1,
                "reflect.(*funcTypeFixed4).NumMethod": 1,
                "reflect.(*funcTypeFixed4).NumOut": 1,
                "reflect.(*funcTypeFixed4).Out": 1,
                "reflect.(*funcTypeFixed4).PkgPath": 1,
                "reflect.(*funcTypeFixed4).Size": 1,
                "reflect.(*funcTypeFixed4).String": 1,
                "reflect.(*funcTypeFixed4).common": 1,
                "reflect.(*funcTypeFixed4).uncommon": 1,
                "type..hash.reflect.funcTypeFixed64": 1,
                "type..eq.reflect.funcTypeFixed64": 1,
                "reflect.(*funcTypeFixed64).Align": 1,
                "reflect.(*funcTypeFixed64).AssignableTo": 1,
                "reflect.(*funcTypeFixed64).Bits": 1,
                "reflect.(*funcTypeFixed64).ChanDir": 1,
                "reflect.(*funcTypeFixed64).Comparable": 1,
                "reflect.(*funcTypeFixed64).ConvertibleTo": 1,
                "reflect.(*funcTypeFixed64).Elem": 1,
                "reflect.(*funcTypeFixed64).Field": 1,
                "reflect.(*funcTypeFixed64).FieldAlign": 1,
                "reflect.(*funcTypeFixed64).FieldByIndex": 1,
                "reflect.(*funcTypeFixed64).FieldByName": 1,
                "reflect.(*funcTypeFixed64).FieldByNameFunc": 1,
                "reflect.(*funcTypeFixed64).Implements": 1,
                "reflect.(*funcTypeFixed64).In": 1,
                "reflect.(*funcTypeFixed64).IsVariadic": 1,
                "reflect.(*funcTypeFixed64).Key": 1,
                "reflect.(*funcTypeFixed64).Kind": 1,
                "reflect.(*funcTypeFixed64).Len": 1,
                "reflect.(*funcTypeFixed64).Method": 1,
                "reflect.(*funcTypeFixed64).MethodByName": 1,
                "reflect.(*funcTypeFixed64).Name": 1,
                "reflect.(*funcTypeFixed64).NumField": 1,
                "reflect.(*funcTypeFixed64).NumIn": 1,
                "reflect.(*funcTypeFixed64).NumMethod": 1,
                "reflect.(*funcTypeFixed64).NumOut": 1,
                "reflect.(*funcTypeFixed64).Out": 1,
                "reflect.(*funcTypeFixed64).PkgPath": 1,
                "reflect.(*funcTypeFixed64).Size": 1,
                "reflect.(*funcTypeFixed64).String": 1,
                "reflect.(*funcTypeFixed64).common": 1,
                "reflect.(*funcTypeFixed64).uncommon": 1,
                "type..hash.reflect.funcTypeFixed8": 1,
                "type..eq.reflect.funcTypeFixed8": 1,
                "reflect.(*funcTypeFixed8).Align": 1,
                "reflect.(*funcTypeFixed8).AssignableTo": 1,
                "reflect.(*funcTypeFixed8).Bits": 1,
                "reflect.(*funcTypeFixed8).ChanDir": 1,
                "reflect.(*funcTypeFixed8).Comparable": 1,
                "reflect.(*funcTypeFixed8).ConvertibleTo": 1,
                "reflect.(*funcTypeFixed8).Elem": 1,
                "reflect.(*funcTypeFixed8).Field": 1,
                "reflect.(*funcTypeFixed8).FieldAlign": 1,
                "reflect.(*funcTypeFixed8).FieldByIndex": 1,
                "reflect.(*funcTypeFixed8).FieldByName": 1,
                "reflect.(*funcTypeFixed8).FieldByNameFunc": 1,
                "reflect.(*funcTypeFixed8).Implements": 1,
                "reflect.(*funcTypeFixed8).In": 1,
                "reflect.(*funcTypeFixed8).IsVariadic": 1,
                "reflect.(*funcTypeFixed8).Key": 1,
                "reflect.(*funcTypeFixed8).Kind": 1,
                "reflect.(*funcTypeFixed8).Len": 1,
                "reflect.(*funcTypeFixed8).Method": 1,
                "reflect.(*funcTypeFixed8).MethodByName": 1,
                "reflect.(*funcTypeFixed8).Name": 1,
                "reflect.(*funcTypeFixed8).NumField": 1,
                "reflect.(*funcTypeFixed8).NumIn": 1,
                "reflect.(*funcTypeFixed8).NumMethod": 1,
                "reflect.(*funcTypeFixed8).NumOut": 1,
                "reflect.(*funcTypeFixed8).Out": 1,
                "reflect.(*funcTypeFixed8).PkgPath": 1,
                "reflect.(*funcTypeFixed8).Size": 1,
                "reflect.(*funcTypeFixed8).String": 1,
                "reflect.(*funcTypeFixed8).common": 1,
                "reflect.(*funcTypeFixed8).uncommon": 1,
                "reflect.(*interfaceType).Align": 1,
                "reflect.(*interfaceType).AssignableTo": 1,
                "reflect.(*interfaceType).Bits": 1,
                "reflect.(*interfaceType).ChanDir": 1,
                "reflect.(*interfaceType).Comparable": 1,
                "reflect.(*interfaceType).ConvertibleTo": 1,
                "reflect.(*interfaceType).Elem": 1,
                "reflect.(*interfaceType).Field": 1,
                "reflect.(*interfaceType).FieldAlign": 1,
                "reflect.(*interfaceType).FieldByIndex": 1,
                "reflect.(*interfaceType).FieldByName": 1,
                "reflect.(*interfaceType).FieldByNameFunc": 1,
                "reflect.(*interfaceType).Implements": 1,
                "reflect.(*interfaceType).In": 1,
                "reflect.(*interfaceType).IsVariadic": 1,
                "reflect.(*interfaceType).Key": 1,
                "reflect.(*interfaceType).Kind": 1,
                "reflect.(*interfaceType).Len": 1,
                "reflect.(*interfaceType).Name": 1,
                "reflect.(*interfaceType).NumField": 1,
                "reflect.(*interfaceType).NumIn": 1,
                "reflect.(*interfaceType).NumOut": 1,
                "reflect.(*interfaceType).Out": 1,
                "reflect.(*interfaceType).PkgPath": 1,
                "reflect.(*interfaceType).Size": 1,
                "reflect.(*interfaceType).String": 1,
                "reflect.(*interfaceType).common": 1,
                "reflect.(*interfaceType).uncommon": 1,
                "type..hash.struct { reflect.ityp *reflect.rtype": 1,
                "reflect.typ *reflect.rtype": 2,
                "reflect.hash uint32": 2,
                "reflect.fun [100000]unsafe.Pointer }": 2,
                "type..eq.struct { reflect.ityp *reflect.rtype": 1,
                "reflect.(*ptrType).Align": 1,
                "reflect.(*ptrType).AssignableTo": 1,
                "reflect.(*ptrType).Bits": 1,
                "reflect.(*ptrType).ChanDir": 1,
                "reflect.(*ptrType).Comparable": 1,
                "reflect.(*ptrType).ConvertibleTo": 1,
                "reflect.(*ptrType).Elem": 1,
                "reflect.(*ptrType).Field": 1,
                "reflect.(*ptrType).FieldAlign": 1,
                "reflect.(*ptrType).FieldByIndex": 1,
                "reflect.(*ptrType).FieldByName": 1,
                "reflect.(*ptrType).FieldByNameFunc": 1,
                "reflect.(*ptrType).Implements": 1,
                "reflect.(*ptrType).In": 1,
                "reflect.(*ptrType).IsVariadic": 1,
                "reflect.(*ptrType).Key": 1,
                "reflect.(*ptrType).Kind": 1,
                "reflect.(*ptrType).Len": 1,
                "reflect.(*ptrType).Method": 1,
                "reflect.(*ptrType).MethodByName": 1,
                "reflect.(*ptrType).Name": 1,
                "reflect.(*ptrType).NumField": 1,
                "reflect.(*ptrType).NumIn": 1,
                "reflect.(*ptrType).NumMethod": 1,
                "reflect.(*ptrType).NumOut": 1,
                "reflect.(*ptrType).Out": 1,
                "reflect.(*ptrType).PkgPath": 1,
                "reflect.(*ptrType).Size": 1,
                "reflect.(*ptrType).String": 1,
                "reflect.(*ptrType).common": 1,
                "reflect.(*ptrType).uncommon": 1,
                "reflect.(*sliceType).Align": 1,
                "reflect.(*sliceType).AssignableTo": 1,
                "reflect.(*sliceType).Bits": 1,
                "reflect.(*sliceType).ChanDir": 1,
                "reflect.(*sliceType).Comparable": 1,
                "reflect.(*sliceType).ConvertibleTo": 1,
                "reflect.(*sliceType).Elem": 1,
                "reflect.(*sliceType).Field": 1,
                "reflect.(*sliceType).FieldAlign": 1,
                "reflect.(*sliceType).FieldByIndex": 1,
                "reflect.(*sliceType).FieldByName": 1,
                "reflect.(*sliceType).FieldByNameFunc": 1,
                "reflect.(*sliceType).Implements": 1,
                "reflect.(*sliceType).In": 1,
                "reflect.(*sliceType).IsVariadic": 1,
                "reflect.(*sliceType).Key": 1,
                "reflect.(*sliceType).Kind": 1,
                "reflect.(*sliceType).Len": 1,
                "reflect.(*sliceType).Method": 1,
                "reflect.(*sliceType).MethodByName": 1,
                "reflect.(*sliceType).Name": 1,
                "reflect.(*sliceType).NumField": 1,
                "reflect.(*sliceType).NumIn": 1,
                "reflect.(*sliceType).NumMethod": 1,
                "reflect.(*sliceType).NumOut": 1,
                "reflect.(*sliceType).Out": 1,
                "reflect.(*sliceType).PkgPath": 1,
                "reflect.(*sliceType).Size": 1,
                "reflect.(*sliceType).String": 1,
                "reflect.(*sliceType).common": 1,
                "reflect.(*sliceType).uncommon": 1,
                "type..hash.[27]string": 1,
                "type..eq.[27]string": 1,
                "type..hash.struct { reflect.b bool": 1,
                "reflect.x interface {} }": 2,
                "type..eq.struct { reflect.b bool": 1,
                "go.(*struct { sync.Mutex": 4,
                "reflect.m sync.Map }).Lock": 1,
                "reflect.m sync.Map }).Unlock": 1,
                "sort.Search": 1,
                "sort.SearchStrings": 1,
                "sort.StringSlice.Search": 1,
                "sort.Slice": 1,
                "sort.insertionSort": 1,
                "sort.siftDown": 1,
                "sort.heapSort": 1,
                "sort.medianOfThree": 1,
                "sort.swapRange": 1,
                "sort.doPivot": 1,
                "sort.quickSort": 1,
                "sort.Sort": 1,
                "sort.maxDepth": 1,
                "sort.StringSlice.Len": 1,
                "sort.StringSlice.Less": 1,
                "sort.StringSlice.Swap": 1,
                "sort.StringSlice.Sort": 1,
                "sort.Stable": 1,
                "sort.stable": 1,
                "sort.symMerge": 1,
                "sort.rotate": 1,
                "sort.insertionSort_func": 1,
                "sort.siftDown_func": 1,
                "sort.heapSort_func": 1,
                "sort.medianOfThree_func": 1,
                "sort.doPivot_func": 1,
                "sort.quickSort_func": 1,
                "sort.SearchStrings.func1": 1,
                "sort.init": 1,
                "sort.(*StringSlice).Len": 1,
                "sort.(*StringSlice).Less": 1,
                "sort.(*StringSlice).Search": 1,
                "sort.(*StringSlice).Sort": 1,
                "sort.(*StringSlice).Swap": 1,
                "internal/fmtsort.(*SortedMap).Len": 1,
                "internal/fmtsort.(*SortedMap).Less": 1,
                "internal/fmtsort.(*SortedMap).Swap": 1,
                "internal/fmtsort.Sort": 1,
                "internal/fmtsort.compare": 1,
                "internal/fmtsort.floatCompare": 1,
                "internal/fmtsort.isNaN": 1,
                "internal/fmtsort.nilCompare": 1,
                "internal/fmtsort.init": 1,
                "syscall.readIntLE": 1,
                "syscall.ParseDirent": 1,
                "syscall.direntNamlen": 1,
                "syscall.copyenv": 1,
                "syscall.Getenv": 1,
                "syscall.Environ": 1,
                "syscall.SlicePtrFromStrings": 1,
                "syscall.BytePtrFromString": 1,
                "syscall.SetNonblock": 1,
                "syscall.Exec": 1,
                "syscall.itoa": 1,
                "syscall.uitoa": 1,
                "syscall.ByteSliceFromString": 1,
                "syscall.(*Timespec).Unix": 1,
                "syscall.(*Timeval).Unix": 1,
                "syscall.(*Timespec).Nano": 1,
                "syscall.(*Timeval).Nano": 1,
                "syscall.WaitStatus.Exited": 1,
                "syscall.WaitStatus.Signaled": 1,
                "syscall.WaitStatus.Stopped": 1,
                "syscall.WaitStatus.Continued": 1,
                "syscall.WaitStatus.CoreDump": 1,
                "syscall.WaitStatus.ExitStatus": 1,
                "syscall.WaitStatus.Signal": 1,
                "syscall.WaitStatus.StopSignal": 1,
                "syscall.WaitStatus.TrapCause": 1,
                "syscall.Wait4": 1,
                "syscall.(*SockaddrInet4).sockaddr": 1,
                "syscall.(*SockaddrInet6).sockaddr": 1,
                "syscall.(*SockaddrUnix).sockaddr": 1,
                "syscall.(*SockaddrLinklayer).sockaddr": 1,
                "syscall.(*SockaddrNetlink).sockaddr": 1,
                "syscall.anyToSockaddr": 1,
                "syscall.Accept": 1,
                "syscall.Accept4": 1,
                "syscall.Recvmsg": 1,
                "syscall.(*Iovec).SetLen": 1,
                "syscall.(*Msghdr).SetControllen": 1,
                "syscall.SendmsgN": 1,
                "syscall.direntIno": 1,
                "syscall.readInt": 1,
                "syscall.direntReclen": 1,
                "syscall.(*mmapper).Mmap": 1,
                "syscall.(*mmapper).Munmap": 1,
                "syscall.Errno.Error": 1,
                "syscall.Errno.Temporary": 1,
                "syscall.Errno.Timeout": 1,
                "syscall.Signal.Signal": 1,
                "syscall.Signal.String": 1,
                "syscall.GetsockoptInt": 1,
                "syscall.Recvfrom": 1,
                "syscall.Sendto": 1,
                "syscall.openat": 1,
                "syscall.errnoErr": 1,
                "syscall.readlinkat": 1,
                "syscall.wait4": 1,
                "syscall.Close": 1,
                "syscall.Dup": 1,
                "syscall.Fchdir": 1,
                "syscall.Fchmod": 1,
                "syscall.fcntl": 1,
                "syscall.Fsync": 1,
                "syscall.Getdents": 1,
                "syscall.Kill": 1,
                "syscall.read": 1,
                "syscall.write": 1,
                "syscall.munmap": 1,
                "syscall.Fchown": 1,
                "syscall.Fstat": 1,
                "syscall.Ftruncate": 1,
                "syscall.Pread": 1,
                "syscall.Pwrite": 1,
                "syscall.Seek": 1,
                "syscall.Shutdown": 1,
                "syscall.accept": 1,
                "syscall.accept4": 1,
                "syscall.fstatat": 1,
                "syscall.getsockopt": 1,
                "syscall.setsockopt": 1,
                "syscall.recvfrom": 1,
                "syscall.sendto": 1,
                "syscall.recvmsg": 1,
                "syscall.sendmsg": 1,
                "syscall.mmap": 1,
                "syscall.init.ializers": 1,
                "syscall.init": 1,
                "syscall.Syscall": 1,
                "syscall.Syscall6": 1,
                "syscall.RawSyscall": 1,
                "type..hash.[7]string": 1,
                "type..eq.[7]string": 1,
                "syscall.(*Errno).Error": 1,
                "syscall.(*Errno).Temporary": 1,
                "syscall.(*Errno).Timeout": 1,
                "syscall.(*Signal).Signal": 1,
                "syscall.(*Signal).String": 1,
                "type..hash.syscall.SockaddrInet4": 1,
                "type..eq.syscall.SockaddrInet4": 1,
                "type..hash.syscall.SockaddrLinklayer": 1,
                "type..eq.syscall.SockaddrLinklayer": 1,
                "type..hash.syscall.SockaddrUnix": 1,
                "type..eq.syscall.SockaddrUnix": 1,
                "syscall.(*WaitStatus).Continued": 1,
                "syscall.(*WaitStatus).CoreDump": 1,
                "syscall.(*WaitStatus).ExitStatus": 1,
                "syscall.(*WaitStatus).Exited": 1,
                "syscall.(*WaitStatus).Signal": 1,
                "syscall.(*WaitStatus).Signaled": 1,
                "syscall.(*WaitStatus).StopSignal": 1,
                "syscall.(*WaitStatus).Stopped": 1,
                "syscall.(*WaitStatus).TrapCause": 1,
                "syscall.(*mmapper).Lock": 1,
                "syscall.(*mmapper).Unlock": 1,
                "type..hash.[133]string": 1,
                "type..eq.[133]string": 1,
                "type..hash.[32]string": 1,
                "type..eq.[32]string": 1,
                "internal/testlog.Open": 1,
                "internal/testlog.Logger": 1,
                "internal/testlog.Stat": 1,
                "time.nextStdChunk": 1,
                "time.isDigit": 1,
                "time.startsWithLowerCase": 1,
                "time.match": 1,
                "time.lookup": 1,
                "time.appendInt": 1,
                "time.atoi": 1,
                "time.formatNano": 1,
                "time.Time.String": 1,
                "time.Time.Format": 1,
                "time.Time.AppendFormat": 1,
                "time.absClock": 1,
                "time.Time.Nanosecond": 1,
                "time.(*Time).nsec": 1,
                "time.absWeekday": 1,
                "time.(*ParseError).Error": 1,
                "time.quote": 1,
                "time.getnum": 1,
                "time.cutspace": 1,
                "time.skip": 1,
                "time.parse": 1,
                "time.daysIn": 1,
                "time.isLeap": 1,
                "time.(*Time).unixSec": 1,
                "time.(*Time).sec": 1,
                "time.FixedZone": 1,
                "time.(*Time).setLoc": 1,
                "time.(*Time).stripMono": 1,
                "time.parseTimeZone": 1,
                "time.parseGMT": 1,
                "time.parseSignedOffset": 1,
                "time.parseNanoseconds": 1,
                "time.leadingInt": 1,
                "time.open": 1,
                "syscall.Open": 1,
                "time.closefd": 1,
                "time.preadn": 1,
                "syscall.Read": 1,
                "time.(*Time).addSec": 1,
                "time.Time.After": 1,
                "time.Time.Before": 1,
                "time.Time.Equal": 1,
                "time.Month.String": 1,
                "time.Weekday.String": 1,
                "time.Time.IsZero": 1,
                "time.Time.abs": 1,
                "time.(*Location).get": 1,
                "time.Time.locabs": 1,
                "time.Time.Date": 1,
                "time.Time.Year": 1,
                "time.Time.Month": 1,
                "time.Time.Day": 1,
                "time.Time.Weekday": 1,
                "time.Time.ISOWeek": 1,
                "time.Time.Clock": 1,
                "time.Time.Hour": 1,
                "time.Time.Minute": 1,
                "time.Time.Second": 1,
                "time.Time.YearDay": 1,
                "time.Duration.String": 1,
                "time.fmtFrac": 1,
                "time.fmtInt": 1,
                "time.Duration.Nanoseconds": 1,
                "time.Duration.Seconds": 1,
                "time.Duration.Minutes": 1,
                "time.Duration.Hours": 1,
                "time.Duration.Truncate": 1,
                "time.Duration.Round": 1,
                "time.lessThanHalf": 1,
                "time.Time.Add": 1,
                "time.Time.Sub": 1,
                "time.Since": 1,
                "time.Until": 1,
                "time.Time.AddDate": 1,
                "time.Time.Location": 1,
                "time.Time.date": 1,
                "time.absDate": 1,
                "time.Now": 1,
                "time.Time.UTC": 1,
                "time.Time.Local": 1,
                "time.Time.In": 1,
                "time.Time.Zone": 1,
                "time.Time.Unix": 1,
                "time.Time.UnixNano": 1,
                "time.Time.MarshalBinary": 1,
                "time.(*Time).UnmarshalBinary": 1,
                "time.Time.GobEncode": 1,
                "time.(*Time).GobDecode": 1,
                "time.Time.MarshalJSON": 1,
                "time.(*Time).UnmarshalJSON": 1,
                "time.Parse": 1,
                "time.Time.MarshalText": 1,
                "time.(*Time).UnmarshalText": 1,
                "time.Unix": 1,
                "time.unixTime": 1,
                "time.Date": 1,
                "time.norm": 1,
                "time.Time.Truncate": 1,
                "time.Time.Round": 1,
                "time.div": 1,
                "time.(*Location).String": 1,
                "time.(*Location).lookup": 1,
                "time.(*Location).lookupFirstZone": 1,
                "time.(*Location).firstZoneUsed": 1,
                "time.(*Location).lookupName": 1,
                "time.fileSizeError.Error": 1,
                "time.(*dataIO).big4": 1,
                "time.(*dataIO).read": 1,
                "time.byteString": 1,
                "time.LoadLocationFromTZData": 1,
                "time.(*dataIO).byte": 1,
                "7)42/#": 1,
                "time.loadTzinfoFromDirOrZip": 1,
                "time.loadTzinfoFromZip": 1,
                "time.get4": 1,
                "time.get2": 1,
                "\\(5'D(": 1,
                "time.loadTzinfo": 1,
                "time.loadLocation": 1,
                "time.readFile": 1,
                "time.read": 1,
                "time.initLocal": 1,
                "time.init.ializers": 1,
                "time.init": 1,
                "type..hash.time.zone": 1,
                "type..eq.time.zone": 1,
                "type..hash.time.zoneTrans": 1,
                "type..eq.time.zoneTrans": 1,
                "time.(*Time).Add": 1,
                "time.(*Time).AddDate": 1,
                "time.(*Time).After": 1,
                "time.(*Time).AppendFormat": 1,
                "time.(*Time).Before": 1,
                "time.(*Time).Clock": 1,
                "time.(*Time).Date": 1,
                "time.(*Time).Day": 1,
                "time.(*Time).Equal": 1,
                "time.(*Time).Format": 1,
                "time.(*Time).GobEncode": 1,
                "time.(*Time).Hour": 1,
                "time.(*Time).ISOWeek": 1,
                "time.(*Time).In": 1,
                "time.(*Time).IsZero": 1,
                "time.(*Time).Local": 1,
                "time.(*Time).Location": 1,
                "time.(*Time).MarshalBinary": 1,
                "time.(*Time).MarshalJSON": 1,
                "time.(*Time).MarshalText": 1,
                "time.(*Time).Minute": 1,
                "time.(*Time).Month": 1,
                "time.(*Time).Nanosecond": 1,
                "time.(*Time).Round": 1,
                "time.(*Time).Second": 1,
                "time.(*Time).String": 1,
                "time.(*Time).Sub": 1,
                "time.(*Time).Truncate": 1,
                "time.(*Time).UTC": 1,
                "time.(*Time).Unix": 1,
                "time.(*Time).UnixNano": 1,
                "time.(*Time).Weekday": 1,
                "time.(*Time).Year": 1,
                "time.(*Time).YearDay": 1,
                "time.(*Time).Zone": 1,
                "time.(*Duration).Hours": 1,
                "time.(*Duration).Minutes": 1,
                "time.(*Duration).Nanoseconds": 1,
                "time.(*Duration).Round": 1,
                "time.(*Duration).Seconds": 1,
                "time.(*Duration).String": 1,
                "time.(*Duration).Truncate": 1,
                "time.(*Month).String": 1,
                "time.(*Weekday).String": 1,
                "type..hash.[8]string": 1,
                "type..eq.[8]string": 1,
                "type..hash.time.ParseError": 1,
                "type..eq.time.ParseError": 1,
                "time.(*fileSizeError).Error": 1,
                "type..hash.[12]string": 1,
                "type..eq.[12]string": 1,
                "type..hash.[1]time.zone": 1,
                "type..eq.[1]time.zone": 1,
                "type..hash.[1]time.zoneTrans": 1,
                "type..eq.[1]time.zoneTrans": 1,
                "internal/poll.(*TimeoutError).Error": 1,
                "internal/poll.(*TimeoutError).Timeout": 1,
                "internal/poll.(*TimeoutError).Temporary": 1,
                "internal/poll.consume": 1,
                "internal/poll.(*FD).Fsync": 1,
                "internal/poll.(*FD).incref": 1,
                "internal/poll.errClosing": 1,
                "internal/poll.fcntl": 1,
                "internal/poll.(*fdMutex).incref": 1,
                "internal/poll.(*fdMutex).increfAndClose": 1,
                "internal/poll.(*fdMutex).decref": 1,
                "internal/poll.(*fdMutex).rwlock": 1,
                "internal/poll.(*fdMutex).rwunlock": 1,
                "internal/poll.(*FD).decref": 1,
                "internal/poll.(*FD).readUnlock": 1,
                "internal/poll.(*FD).writeUnlock": 1,
                "internal/poll.(*pollDesc).init": 1,
                "internal/poll.(*pollDesc).prepare": 1,
                "internal/poll.convertErr": 1,
                "internal/poll.(*pollDesc).wait": 1,
                "internal/poll.(*FD).SetDeadline": 1,
                "internal/poll.(*FD).SetReadDeadline": 1,
                "internal/poll.(*FD).SetWriteDeadline": 1,
                "internal/poll.setDeadlineImpl": 1,
                "internal/poll.(*FD).Fchmod": 1,
                "internal/poll.(*FD).Fchown": 1,
                "internal/poll.(*FD).Ftruncate": 1,
                "internal/poll.(*FD).Init": 1,
                "internal/poll.(*FD).destroy": 1,
                "internal/poll.(*pollDesc).close": 1,
                "internal/poll.(*FD).Close": 1,
                "internal/poll.(*pollDesc).evict": 1,
                "internal/poll.(*FD).Shutdown": 1,
                "internal/poll.(*FD).SetBlocking": 1,
                "internal/poll.(*FD).Read": 1,
                "internal/poll.(*FD).readLock": 1,
                "internal/poll.(*pollDesc).prepareRead": 1,
                "internal/poll.(*pollDesc).pollable": 1,
                "internal/poll.(*pollDesc).waitRead": 1,
                "internal/poll.(*FD).eofError": 1,
                "internal/poll.(*FD).Pread": 1,
                "internal/poll.(*FD).ReadFrom": 1,
                "internal/poll.(*FD).ReadMsg": 1,
                "internal/poll.(*FD).Write": 1,
                "internal/poll.(*FD).writeLock": 1,
                "internal/poll.(*pollDesc).prepareWrite": 1,
                "syscall.Write": 1,
                "internal/poll.(*pollDesc).waitWrite": 1,
                "internal/poll.(*FD).Pwrite": 1,
                "internal/poll.(*FD).WriteTo": 1,
                "internal/poll.(*FD).WriteMsg": 1,
                "internal/poll.(*FD).Accept": 1,
                "internal/poll.(*FD).Seek": 1,
                "internal/poll.(*FD).ReadDirent": 1,
                "syscall.ReadDirent": 1,
                "internal/poll.(*FD).Fchdir": 1,
                "internal/poll.(*FD).Fstat": 1,
                "internal/poll.DupCloseOnExec": 1,
                "internal/poll.dupCloseOnExecOld": 1,
                "syscall.CloseOnExec": 1,
                "internal/poll.(*FD).Dup": 1,
                "internal/poll.(*FD).WaitWrite": 1,
                "internal/poll.(*FD).WriteOnce": 1,
                "internal/poll.(*FD).RawControl": 1,
                "internal/poll.(*FD).RawRead": 1,
                "internal/poll.(*FD).RawWrite": 1,
                "internal/poll.writev": 1,
                "internal/poll.accept": 1,
                "internal/poll.(*FD).SetsockoptInt": 1,
                "syscall.SetsockoptInt": 1,
                "internal/poll.(*FD).SetsockoptInet4Addr": 1,
                "syscall.SetsockoptInet4Addr": 1,
                "internal/poll.(*FD).SetsockoptLinger": 1,
                "syscall.SetsockoptLinger": 1,
                "internal/poll.(*FD).SetsockoptIPMreqn": 1,
                "syscall.SetsockoptIPMreqn": 1,
                "internal/poll.(*FD).SetsockoptByte": 1,
                "syscall.SetsockoptByte": 1,
                "internal/poll.(*FD).SetsockoptIPMreq": 1,
                "syscall.SetsockoptIPMreq": 1,
                "internal/poll.(*FD).SetsockoptIPv6Mreq": 1,
                "syscall.SetsockoptIPv6Mreq": 1,
                "internal/poll.(*FD).Writev": 1,
                "internal/poll.glob..func1": 1,
                "internal/poll.init.ializers": 1,
                "internal/poll.init": 1,
                "type..hash.internal/poll.FD": 1,
                "type..eq.internal/poll.FD": 1,
                "internal/syscall/unix.IsNonblock": 1,
                "internal/syscall/unix.init": 1,
                "os.(*File).Readdir": 1,
                "os.(*File).Readdirnames": 1,
                "os.(*File).readdirnames": 1,
                "os.wrapSyscallError": 1,
                "os.NewSyscallError": 1,
                "os.(*PathError).Error": 1,
                "os.(*PathError).Timeout": 1,
                "os.(*SyscallError).Error": 1,
                "os.(*SyscallError).Timeout": 1,
                "os.underlyingError": 1,
                "os.(*Process).Release": 1,
                "os.(*Process).release": 1,
                "os.(*Process).Kill": 1,
                "os.(*Process).kill": 1,
                "os.(*Process).Signal": 1,
                "os.(*Process).Wait": 1,
                "os.(*ProcessState).UserTime": 1,
                "os.(*ProcessState).userTime": 1,
                "os.(*ProcessState).SystemTime": 1,
                "os.(*ProcessState).systemTime": 1,
                "os.(*ProcessState).Exited": 1,
                "os.(*ProcessState).exited": 1,
                "os.(*ProcessState).Success": 1,
                "os.(*ProcessState).success": 1,
                "os.(*ProcessState).Sys": 1,
                "os.(*ProcessState).sys": 1,
                "os.(*ProcessState).SysUsage": 1,
                "os.(*ProcessState).sysUsage": 1,
                "os.(*ProcessState).Pid": 1,
                "os.(*ProcessState).String": 1,
                "H[G\"H^G": 1,
                "os.(*ProcessState).ExitCode": 1,
                "os.(*Process).wait": 1,
                "os.(*Process).setDone": 1,
                "os.(*Process).signal": 1,
                "os.(*Process).done": 1,
                "os.(*File).Name": 1,
                "os.(*LinkError).Error": 1,
                "os.(*File).Read": 1,
                "os.(*File).checkValid": 1,
                "os.(*File).read": 1,
                "os.(*File).wrapErr": 1,
                "os.(*File).ReadAt": 1,
                "os.(*File).pread": 1,
                "os.(*File).Write": 1,
                "os.(*File).write": 1,
                "os.epipecheck": 1,
                "os.(*File).WriteAt": 1,
                "os.(*File).pwrite": 1,
                "os.(*File).Seek": 1,
                "os.(*File).seek": 1,
                "os.(*File).WriteString": 1,
                "os.OpenFile": 1,
                "os.(*File).Chmod": 1,
                "os.(*File).SetDeadline": 1,
                "os.(*File).SetReadDeadline": 1,
                "os.(*File).SetWriteDeadline": 1,
                "os.(*File).SyscallConn": 1,
                "os.newRawConn": 1,
                "os.Readlink": 1,
                "syscall.Readlink": 1,
                "os.fixCount": 1,
                "os.(*File).chmod": 1,
                "os.syscallMode": 1,
                "os.FileMode.Perm": 1,
                "os.(*File).Chown": 1,
                "os.(*File).Truncate": 1,
                "os.(*File).Sync": 1,
                "os.(*File).Chdir": 1,
                "os.(*File).setDeadline": 1,
                "os.(*File).setReadDeadline": 1,
                "os.(*File).setWriteDeadline": 1,
                "os.(*File).Fd": 1,
                "os.NewFile": 1,
                "os.newFile": 1,
                "os.openFileNolog": 1,
                "os.(*File).Close": 1,
                "os.(*file).close": 1,
                "os.(*File).readdir": 1,
                "os.IsNotExist": 1,
                "os.isNotExist": 1,
                "os.basename": 1,
                "os.init.0": 1,
                "os.Exit": 1,
                "os.(*rawConn).Control": 1,
                "os.(*rawConn).Read": 1,
                "os.(*rawConn).Write": 1,
                "os.Lstat": 1,
                "os.fillFileStatFromSys": 1,
                "os.timespecToTime": 1,
                "os.(*File).Stat": 1,
                "os.lstatNolog": 1,
                "syscall.Lstat": 1,
                "os.itoa": 1,
                "os.uitoa": 1,
                "os.FileMode.String": 1,
                "os.FileMode.IsDir": 1,
                "os.FileMode.IsRegular": 1,
                "os.(*fileStat).Name": 1,
                "os.(*fileStat).IsDir": 1,
                "os.(*fileStat).Mode": 1,
                "os.(*fileStat).Size": 1,
                "os.(*fileStat).ModTime": 1,
                "os.(*fileStat).Sys": 1,
                "os.(*Process).blockUntilWaitable": 1,
                "os.glob..func1": 1,
                "os.init.ializers": 1,
                "os.init": 1,
                "type..hash.os.file": 1,
                "type..eq.os.file": 1,
                "os.(*FileMode).IsDir": 1,
                "os.(*FileMode).IsRegular": 1,
                "os.(*FileMode).Perm": 1,
                "os.(*FileMode).String": 1,
                "type..hash.os.LinkError": 1,
                "type..eq.os.LinkError": 1,
                "type..hash.os.PathError": 1,
                "type..eq.os.PathError": 1,
                "type..hash.os.Process": 1,
                "type..eq.os.Process": 1,
                "type..hash.os.ProcessState": 1,
                "type..eq.os.ProcessState": 1,
                "type..hash.os.SyscallError": 1,
                "type..eq.os.SyscallError": 1,
                "type..hash.os.fileStat": 1,
                "type..eq.os.fileStat": 1,
                "fmt.(*fmt).writePadding": 1,
                "fmt.(*fmt).pad": 1,
                "fmt.(*buffer).Write": 1,
                "-v0(/Q&": 1,
                "fmt.(*fmt).padString": 1,
                "fmt.(*buffer).WriteString": 1,
                "IvL(KQB": 1,
                "fmt.(*fmt).fmtBoolean": 1,
                "fmt.(*fmt).fmtUnicode": 1,
                "unicode/utf8.RuneLen": 1,
                "fmt.(*fmt).fmtInteger": 1,
                "fmt.(*fmt).truncateString": 1,
                "fmt.(*fmt).truncate": 1,
                "fmt.(*fmt).fmtS": 1,
                "fmt.(*fmt).fmtBs": 1,
                "fmt.(*fmt).fmtSbx": 1,
                "fmt.(*fmt).fmtQ": 1,
                "strconv.AppendQuoteToASCII": 1,
                "strconv.AppendQuote": 1,
                "fmt.(*fmt).fmtC": 1,
                "fmt.(*fmt).fmtQc": 1,
                "strconv.AppendQuoteRuneToASCII": 1,
                "strconv.AppendQuoteRune": 1,
                "fmt.(*fmt).fmtFloat": 1,
                "strconv.AppendFloat": 1,
                "fmt.(*buffer).WriteByte": 1,
                "fmt.(*buffer).WriteRune": 1,
                "fmt.newPrinter": 1,
                "fmt.(*fmt).init": 1,
                "fmt.(*fmt).clearflags": 1,
                "fmt.(*pp).free": 1,
                "fmt.(*pp).Width": 1,
                "fmt.(*pp).Precision": 1,
                "fmt.(*pp).Flag": 1,
                "fmt.(*pp).Write": 1,
                "fmt.(*pp).WriteString": 1,
                "fmt.Fprintf": 1,
                "fmt.Sprintf": 1,
                "fmt.Sprint": 1,
                "fmt.Fprintln": 1,
                "fmt.Sprintln": 1,
                "fmt.getField": 1,
                "fmt.parsenum": 1,
                "fmt.tooLarge": 1,
                "fmt.(*pp).unknownType": 1,
                "fmt.(*pp).badVerb": 1,
                "fmt.(*pp).fmtBool": 1,
                "fmt.(*pp).fmt0x64": 1,
                "fmt.(*pp).fmtInteger": 1,
                "fmt.(*pp).fmtFloat": 1,
                "fmt.(*pp).fmtComplex": 1,
                "fmt.(*pp).fmtString": 1,
                "fmt.(*fmt).fmtSx": 1,
                "fmt.(*pp).fmtBytes": 1,
                "fmt.(*fmt).fmtBx": 1,
                "fmt.(*pp).fmtPointer": 1,
                "fmt.(*pp).catchPanic": 1,
                "fmt.(*pp).handleMethods": 1,
                "fmt.(*pp).printArg": 1,
                "fmt.(*pp).printValue": 1,
                "(<'=*,)": 1,
                "F)E[FKE": 1,
                "fmt.intFromArg": 1,
                "fmt.parseArgNumber": 1,
                "fmt.(*pp).argNumber": 1,
                "fmt.(*pp).badArgNum": 1,
                "fmt.(*pp).missingArg": 1,
                "fmt.(*pp).doPrintf": 1,
                "fmt.(*pp).doPrint": 1,
                "fmt.(*pp).doPrintln": 1,
                "fmt.glob..func1": 1,
                "fmt.init.ializers": 1,
                "fmt.init": 1,
                "type..hash.fmt.fmt": 1,
                "type..eq.fmt.fmt": 1,
                "compress/flate.(*dictDecoder).writeCopy": 1,
                "compress/flate.init.0": 1,
                "compress/flate.newHuffmanBitWriter": 1,
                "compress/flate.newHuffmanEncoder": 1,
                "compress/flate.generateFixedLiteralEncoding": 1,
                "compress/flate.reverseBits": 1,
                "math/bits.Reverse16": 1,
                "compress/flate.generateFixedOffsetEncoding": 1,
                "compress/flate.(*huffmanEncoder).bitCounts": 1,
                "compress/flate.(*huffmanEncoder).assignEncodingAndSize": 1,
                "compress/flate.(*byLiteral).sort": 1,
                "compress/flate.(*huffmanEncoder).generate": 1,
                "compress/flate.(*hcode).set": 1,
                "compress/flate.(*byFreq).sort": 1,
                "compress/flate.byLiteral.Len": 1,
                "compress/flate.byLiteral.Less": 1,
                "compress/flate.byLiteral.Swap": 1,
                "compress/flate.byFreq.Len": 1,
                "compress/flate.byFreq.Less": 1,
                "compress/flate.byFreq.Swap": 1,
                "compress/flate.CorruptInputError.Error": 1,
                "compress/flate.InternalError.Error": 1,
                "compress/flate.(*huffmanDecoder).init": 1,
                "compress/flate.(*decompressor).nextBlock": 1,
                "compress/flate.(*decompressor).Read": 1,
                "compress/flate.(*dictDecoder).readFlush": 1,
                "compress/flate.(*decompressor).Close": 1,
                "compress/flate.(*decompressor).readHuffman": 1,
                "compress/flate.(*decompressor).huffmanBlock": 1,
                "compress/flate.(*dictDecoder).tryWriteCopy": 1,
                "compress/flate.(*dictDecoder).availWrite": 1,
                "compress/flate.(*dictDecoder).writeByte": 1,
                "math/bits.Reverse8": 1,
                "compress/flate.(*dictDecoder).histSize": 1,
                "compress/flate.(*decompressor).finishBlock": 1,
                "compress/flate.(*dictDecoder).availRead": 1,
                "compress/flate.(*decompressor).dataBlock": 1,
                "io.ReadFull": 1,
                "compress/flate.noEOF": 1,
                "compress/flate.(*decompressor).copyData": 1,
                "compress/flate.(*dictDecoder).writeSlice": 1,
                "compress/flate.(*dictDecoder).writeMark": 1,
                "compress/flate.(*decompressor).moreBits": 1,
                "compress/flate.(*decompressor).huffSym": 1,
                "compress/flate.fixedHuffmanDecoderInit": 1,
                "compress/flate.(*decompressor).Reset": 1,
                "compress/flate.makeReader": 1,
                "compress/flate.(*dictDecoder).init": 1,
                "bufio.NewReader": 1,
                "bufio.NewReaderSize": 1,
                "compress/flate.NewReader": 1,
                "compress/flate.fixedHuffmanDecoderInit.func1": 1,
                "compress/flate.init.ializers": 1,
                "compress/flate.init": 1,
                "compress/flate.(*byLiteral).Len": 1,
                "compress/flate.(*byLiteral).Less": 1,
                "compress/flate.(*byLiteral).Swap": 1,
                "compress/flate.(*byFreq).Len": 1,
                "compress/flate.(*byFreq).Less": 1,
                "compress/flate.(*byFreq).Swap": 1,
                "type..hash.compress/flate.literalNode": 1,
                "type..eq.compress/flate.literalNode": 1,
                "compress/flate.(*CorruptInputError).Error": 1,
                "compress/flate.(*InternalError).Error": 1,
                "encoding/binary.init.ializers": 1,
                "encoding/binary.init": 1,
                "hash.init": 1,
                "hash/crc32.ieeeInit": 1,
                "hash/crc32.archAvailableIEEE": 1,
                "hash/crc32.archInitIEEE": 1,
                "hash/crc32.Update": 1,
                "hash/crc32.ChecksumIEEE": 1,
                "hash/crc32.archUpdateIEEE": 1,
                "hash/crc32.simpleMakeTable": 1,
                "hash/crc32.simplePopulateTable": 1,
                "hash/crc32.simpleUpdate": 1,
                "hash/crc32.slicingMakeTable": 1,
                "hash/crc32.slicingUpdate": 1,
                "hash/crc32.ieeeInit.func1": 1,
                "hash/crc32.init.ializers": 1,
                "hash/crc32.init": 1,
                "hash/crc32.ieeeCLMUL": 1,
                "compress/gzip.NewReader": 1,
                "compress/gzip.(*Reader).Reset": 1,
                "compress/gzip.(*Reader).Multistream": 1,
                "compress/gzip.(*Reader).readString": 1,
                "compress/gzip.(*Reader).readHeader": 1,
                "encoding/binary.littleEndian.Uint32": 1,
                "compress/gzip.noEOF": 1,
                "encoding/binary.littleEndian.Uint16": 1,
                "compress/gzip.(*Reader).Read": 1,
                "compress/gzip.(*Reader).Close": 1,
                "compress/gzip.init.ializers": 1,
                "compress/gzip.init": 1,
                "crypto/subtle.ConstantTimeCompare": 1,
                "crypto/subtle.ConstantTimeByteEq": 1,
                "crypto/cipher.StreamReader.Read": 1,
                "crypto/cipher.NewOFB": 1,
                "crypto/cipher.(*ofb).refill": 1,
                "crypto/cipher.(*ofb).XORKeyStream": 1,
                "crypto/internal/subtle.InexactOverlap": 1,
                "crypto/internal/subtle.AnyOverlap": 1,
                "crypto/cipher.xorBytes": 1,
                "crypto/cipher.init.ializers": 1,
                "crypto/cipher.init": 1,
                "crypto/cipher.xorBytesSSE2": 1,
                "type..hash.crypto/cipher.StreamReader": 1,
                "type..eq.crypto/cipher.StreamReader": 1,
                "crypto/cipher.(*StreamReader).Read": 1,
                "crypto/aes.(*aesCipherGCM).NewGCM": 1,
                "crypto/aes.(*gcmAsm).NonceSize": 1,
                "crypto/aes.(*gcmAsm).Overhead": 1,
                "crypto/aes.(*gcmAsm).Seal": 1,
                "crypto/aes.sliceForAppend": 1,
                "crypto/aes.(*gcmAsm).Open": 1,
                "crypto/aes.encryptBlockGo": 1,
                "encoding/binary.bigEndian.Uint32": 1,
                "encoding/binary.bigEndian.PutUint32": 1,
                "crypto/aes.decryptBlockGo": 1,
                "crypto/aes.expandKeyGo": 1,
                "crypto/aes.rotw": 1,
                "crypto/aes.subw": 1,
                "crypto/aes.KeySizeError.Error": 1,
                "crypto/aes.NewCipher": 1,
                "crypto/aes.newCipherGeneric": 1,
                "crypto/aes.(*aesCipher).BlockSize": 1,
                "crypto/aes.(*aesCipher).Encrypt": 1,
                "crypto/aes.(*aesCipher).Decrypt": 1,
                "crypto/aes.newCipher": 1,
                "crypto/aes.(*aesCipherAsm).BlockSize": 1,
                "crypto/aes.(*aesCipherAsm).Encrypt": 1,
                "crypto/aes.(*aesCipherAsm).Decrypt": 1,
                "crypto/aes.init.ializers": 1,
                "crypto/aes.init": 1,
                "crypto/aes.encryptBlockAsm": 1,
                "crypto/aes.decryptBlockAsm": 1,
                "crypto/aes.expandKeyAsm": 1,
                "_expand_key_128": 1,
                "_expand_key_192a": 1,
                "_expand_key_192b": 1,
                "_expand_key_256a": 1,
                "_expand_key_256b": 1,
                "crypto/aes.gcmAesFinish": 1,
                "crypto/aes.gcmAesInit": 1,
                "crypto/aes.gcmAesData": 1,
                "crypto/aes.gcmAesEnc": 1,
                "crypto/aes.gcmAesDec": 1,
                "crypto/aes.(*aesCipherGCM).BlockSize": 1,
                "crypto/aes.(*aesCipherGCM).Decrypt": 1,
                "crypto/aes.(*aesCipherGCM).Encrypt": 1,
                "crypto/aes.(*KeySizeError).Error": 1,
                "encoding/base64.NewEncoding": 1,
                "encoding/base64.Encoding.WithPadding": 1,
                "encoding/base64.Encoding.Strict": 1,
                "encoding/base64.(*Encoding).Encode": 1,
                "encoding/base64.(*Encoding).EncodeToString": 1,
                "encoding/base64.(*Encoding).EncodedLen": 1,
                "encoding/base64.(*encoder).Write": 1,
                "encoding/base64.(*encoder).Close": 1,
                "encoding/base64.CorruptInputError.Error": 1,
                "encoding/base64.(*Encoding).decodeQuantum": 1,
                "encoding/base64.(*Encoding).DecodeString": 1,
                "encoding/base64.(*Encoding).DecodedLen": 1,
                "encoding/base64.(*decoder).Read": 1,
                "encoding/base64.(*Encoding).Decode": 1,
                "encoding/binary.bigEndian.PutUint64": 1,
                "encoding/base64.(*Encoding).decode32": 1,
                "encoding/base64.(*Encoding).decode64": 1,
                "encoding/base64.(*newlineFilteringReader).Read": 1,
                "encoding/base64.init.ializers": 1,
                "encoding/base64.init": 1,
                "encoding/base64.(*CorruptInputError).Error": 1,
                "type..hash.encoding/base64.Encoding": 1,
                "type..eq.encoding/base64.Encoding": 1,
                "encoding/base64.(*Encoding).Strict": 1,
                "encoding/base64.(*Encoding).WithPadding": 1,
                "type..hash.encoding/base64.encoder": 1,
                "type..eq.encoding/base64.encoder": 1,
                "strings.(*Builder).String": 1,
                "strings.(*Builder).Len": 1,
                "strings.(*Builder).Cap": 1,
                "strings.(*Builder).Reset": 1,
                "strings.(*Builder).Grow": 1,
                "strings.(*Builder).copyCheck": 1,
                "strings.(*Builder).grow": 1,
                "strings.(*Builder).Write": 1,
                "strings.(*Builder).WriteByte": 1,
                "strings.(*Builder).WriteRune": 1,
                "strings.(*Builder).WriteString": 1,
                "strings.(*Reader).Len": 1,
                "strings.(*Reader).Size": 1,
                "strings.(*Reader).Read": 1,
                "strings.(*Reader).ReadAt": 1,
                "strings.(*Reader).ReadByte": 1,
                "strings.(*Reader).UnreadByte": 1,
                "strings.(*Reader).ReadRune": 1,
                "strings.(*Reader).UnreadRune": 1,
                "strings.(*Reader).Seek": 1,
                "strings.(*Reader).WriteTo": 1,
                "strings.(*Reader).Reset": 1,
                "strings.explode": 1,
                "strings.hashStr": 1,
                "strings.hashStrRev": 1,
                "strings.Count": 1,
                "strings.LastIndex": 1,
                "strings.IndexRune": 1,
                "strings.IndexByte": 1,
                "strings.IndexAny": 1,
                "strings.(*asciiSet).contains": 1,
                "strings.LastIndexByte": 1,
                "strings.genSplit": 1,
                "strings.Join": 1,
                "strings.Map": 1,
                "strings.Repeat": 1,
                "strings.ToUpper": 1,
                "strings.ToLower": 1,
                "strings.TrimRightFunc": 1,
                "strings.TrimFunc": 1,
                "strings.TrimLeftFunc": 1,
                "strings.indexFunc": 1,
                "strings.lastIndexFunc": 1,
                "strings.makeASCIISet": 1,
                "strings.makeCutsetFunc": 1,
                "strings.Trim": 1,
                "strings.TrimLeft": 1,
                "strings.TrimRight": 1,
                "strings.Replace": 1,
                "strings.EqualFold": 1,
                "strings.Index": 1,
                "strings.indexRabinKarp": 1,
                "strings.makeCutsetFunc.func1": 1,
                "strings.makeCutsetFunc.func2": 1,
                "strings.makeCutsetFunc.func3": 1,
                "strings.init": 1,
                "type..hash.strings.Reader": 1,
                "type..eq.strings.Reader": 1,
                "encoding/hex.InvalidByteError.Error": 1,
                "encoding/hex.Decode": 1,
                "encoding/hex.fromHexChar": 1,
                "encoding/hex.init.ializers": 1,
                "encoding/hex.init": 1,
                "encoding/hex.(*InvalidByteError).Error": 1,
                "net/url.(*Error).Error": 1,
                "net/url.(*Error).Timeout": 1,
                "net/url.(*Error).Temporary": 1,
                "net/url.EscapeError.Error": 1,
                "net/url.InvalidHostError.Error": 1,
                "net/url.shouldEscape": 1,
                "net/url.unescape": 1,
                "net/url.ishex": 1,
                "net/url.unhex": 1,
                "net/url.escape": 1,
                "net/url.(*Userinfo).Username": 1,
                "net/url.(*Userinfo).Password": 1,
                "net/url.(*Userinfo).String": 1,
                "net/url.getscheme": 1,
                "net/url.split": 1,
                "net/url.Parse": 1,
                "net/url.parse": 1,
                "strings.HasSuffix": 1,
                "strings.HasPrefix": 1,
                "net/url.parseAuthority": 1,
                "strings.Contains": 1,
                "net/url.UserPassword": 1,
                "net/url.User": 1,
                "net/url.parseHost": 1,
                "fmt.Errorf": 1,
                "net/url.(*URL).setPath": 1,
                "net/url.(*URL).EscapedPath": 1,
                "net/url.validEncodedPath": 1,
                "net/url.validOptionalPort": 1,
                "net/url.(*URL).String": 1,
                "net/url.Values.Get": 1,
                "net/url.Values.Set": 1,
                "net/url.Values.Add": 1,
                "net/url.Values.Del": 1,
                "net/url.parseQuery": 1,
                "net/url.QueryUnescape": 1,
                "net/url.Values.Encode": 1,
                "sort.Strings": 1,
                "net/url.QueryEscape": 1,
                "net/url.resolvePath": 1,
                "strings.Split": 1,
                "strings.TrimPrefix": 1,
                "net/url.(*URL).IsAbs": 1,
                "net/url.(*URL).Parse": 1,
                "net/url.(*URL).ResolveReference": 1,
                "net/url.(*URL).Query": 1,
                "net/url.ParseQuery": 1,
                "net/url.(*URL).RequestURI": 1,
                "net/url.(*URL).Hostname": 1,
                "net/url.(*URL).Port": 1,
                "net/url.stripPort": 1,
                "net/url.portOnly": 1,
                "net/url.(*URL).MarshalBinary": 1,
                "net/url.(*URL).UnmarshalBinary": 1,
                "net/url.validUserinfo": 1,
                "net/url.stringContainsCTLByte": 1,
                "net/url.init": 1,
                "type..hash.net/url.Error": 1,
                "type..eq.net/url.Error": 1,
                "net/url.(*EscapeError).Error": 1,
                "net/url.(*InvalidHostError).Error": 1,
                "type..hash.net/url.Userinfo": 1,
                "type..eq.net/url.Userinfo": 1,
                "type..hash.net/url.URL": 1,
                "type..eq.net/url.URL": 1,
                "net/url.(*Values).Add": 1,
                "net/url.(*Values).Del": 1,
                "net/url.(*Values).Encode": 1,
                "net/url.(*Values).Get": 1,
                "net/url.(*Values).Set": 1,
                "regexp/syntax.patchList.patch": 1,
                "regexp/syntax.patchList.append": 1,
                "regexp/syntax.patchList.next": 1,
                "regexp/syntax.Compile": 1,
                "regexp/syntax.(*compiler).init": 1,
                "regexp/syntax.(*compiler).inst": 1,
                "regexp/syntax.(*compiler).compile": 1,
                "regexp/syntax.(*compiler).nop": 1,
                "regexp/syntax.(*compiler).empty": 1,
                "regexp/syntax.(*compiler).plus": 1,
                "regexp/syntax.(*compiler).cap": 1,
                "regexp/syntax.(*compiler).cat": 1,
                "regexp/syntax.(*compiler).alt": 1,
                "regexp/syntax.(*compiler).quest": 1,
                "regexp/syntax.(*compiler).star": 1,
                "regexp/syntax.(*compiler).rune": 1,
                "regexp/syntax.Op.String": 1,
                "regexp/syntax.(*Error).Error": 1,
                "regexp/syntax.ErrorCode.String": 1,
                "regexp/syntax.(*parser).push": 1,
                "regexp/syntax.(*parser).maybeConcat": 1,
                "regexp/syntax.(*parser).reuse": 1,
                "regexp/syntax.(*parser).newLiteral": 1,
                "regexp/syntax.(*parser).newRegexp": 1,
                "regexp/syntax.minFoldRune": 1,
                "regexp/syntax.(*parser).literal": 1,
                "regexp/syntax.(*parser).op": 1,
                "regexp/syntax.(*parser).repeat": 1,
                "regexp/syntax.repeatIsValid": 1,
                "regexp/syntax.(*parser).concat": 1,
                "regexp/syntax.(*parser).alternate": 1,
                "regexp/syntax.cleanAlt": 1,
                "regexp/syntax.(*parser).collapse": 1,
                "regexp/syntax.(*parser).factor": 1,
                "regexp/syntax.(*parser).leadingString": 1,
                "regexp/syntax.(*parser).leadingRegexp": 1,
                "regexp/syntax.isCharClass": 1,
                "C'*/ MI": 1,
                "regexp/syntax.(*parser).removeLeadingString": 1,
                "regexp/syntax.(*parser).removeLeadingRegexp": 1,
                "regexp/syntax.literalRegexp": 1,
                "regexp/syntax.Parse": 1,
                "regexp/syntax.(*parser).parseRepeat": 1,
                "regexp/syntax.(*parser).parsePerlFlags": 1,
                "regexp/syntax.isValidCaptureName": 1,
                "regexp/syntax.isalnum": 1,
                "regexp/syntax.(*parser).parseInt": 1,
                "regexp/syntax.matchRune": 1,
                "regexp/syntax.(*parser).parseVerticalBar": 1,
                "regexp/syntax.mergeCharClass": 1,
                "regexp/syntax.(*parser).swapVerticalBar": 1,
                "regexp/syntax.(*parser).parseRightParen": 1,
                "regexp/syntax.(*parser).parseEscape": 1,
                "regexp/syntax.unhex": 1,
                "regexp/syntax.(*parser).parseClassChar": 1,
                "regexp/syntax.(*parser).parsePerlClassEscape": 1,
                "regexp/syntax.(*parser).parseNamedClass": 1,
                "regexp/syntax.(*parser).appendGroup": 1,
                "regexp/syntax.(*parser).parseUnicodeClass": 1,
                "regexp/syntax.unicodeTable": 1,
                "regexp/syntax.(*parser).parseClass": 1,
                "regexp/syntax.cleanClass": 1,
                "regexp/syntax.appendLiteral": 1,
                "regexp/syntax.appendRange": 1,
                "regexp/syntax.appendFoldedRange": 1,
                "regexp/syntax.appendClass": 1,
                "regexp/syntax.appendFoldedClass": 1,
                "regexp/syntax.appendNegatedClass": 1,
                "regexp/syntax.appendTable": 1,
                "regexp/syntax.appendNegatedTable": 1,
                "regexp/syntax.negateClass": 1,
                "regexp/syntax.ranges.Less": 1,
                "regexp/syntax.ranges.Len": 1,
                "regexp/syntax.ranges.Swap": 1,
                "regexp/syntax.checkUTF8": 1,
                "regexp/syntax.nextRune": 1,
                "regexp/syntax.InstOp.String": 1,
                "regexp/syntax.(*Prog).String": 1,
                "regexp/syntax.(*Prog).skipNop": 1,
                "regexp/syntax.(*Prog).Prefix": 1,
                "regexp/syntax.(*Inst).op": 1,
                "regexp/syntax.(*Prog).StartCond": 1,
                "regexp/syntax.(*Inst).MatchRune": 1,
                "regexp/syntax.(*Inst).MatchRunePos": 1,
                "regexp/syntax.(*Inst).MatchEmptyWidth": 1,
                "regexp/syntax.IsWordChar": 1,
                "regexp/syntax.(*Inst).String": 1,
                "regexp/syntax.bw": 1,
                "regexp/syntax.dumpProg": 1,
                "regexp/syntax.dumpInst": 1,
                "regexp/syntax.u32": 1,
                "strconv.QuoteToASCII": 1,
                "regexp/syntax.(*Regexp).Equal": 1,
                "regexp/syntax.writeRegexp": 1,
                "regexp/syntax.(*Regexp).String": 1,
                "regexp/syntax.escape": 1,
                "unicode.IsPrint": 1,
                "strings.ContainsRune": 1,
                "regexp/syntax.(*Regexp).MaxCap": 1,
                "regexp/syntax.(*Regexp).CapNames": 1,
                "regexp/syntax.(*Regexp).capNames": 1,
                "regexp/syntax.(*Regexp).Simplify": 1,
                "regexp/syntax.simplify1": 1,
                "P'((D'": 1,
                "J?(@D?": 1,
                "regexp/syntax.init.ializers": 1,
                "regexp/syntax.init": 1,
                "regexp/syntax.(*InstOp).String": 1,
                "regexp/syntax.(*Op).String": 1,
                "regexp/syntax.(*ErrorCode).String": 1,
                "type..hash.regexp/syntax.Error": 1,
                "type..eq.regexp/syntax.Error": 1,
                "regexp/syntax.(*ranges).Len": 1,
                "regexp/syntax.(*ranges).Less": 1,
                "regexp/syntax.(*ranges).Swap": 1,
                "type..hash.[11]string": 1,
                "type..eq.[11]string": 1,
                "regexp.freeBitState": 1,
                "regexp.(*inputs).clear": 1,
                "regexp.(*bitState).reset": 1,
                "regexp.(*Regexp).tryBacktrack": 1,
                "regexp.(*bitState).push": 1,
                "regexp.(*bitState).shouldVisit": 1,
                "regexp.(*Regexp).backtrack": 1,
                "regexp.newBitState": 1,
                "regexp.(*inputs).init": 1,
                "regexp.(*inputs).newBytes": 1,
                "regexp.(*inputs).newString": 1,
                "regexp.(*machine).init": 1,
                "regexp.lazyFlag.match": 1,
                "regexp.(*machine).match": 1,
                "regexp.newLazyFlag": 1,
                "regexp.(*machine).clear": 1,
                "regexp.(*machine).step": 1,
                "regexp.(*machine).add": 1,
                "regexp.(*machine).alloc": 1,
                "regexp.freeOnePassMachine": 1,
                "regexp.(*Regexp).doOnePass": 1,
                "regexp.newOnePassMachine": 1,
                "regexp.(*inputs).newReader": 1,
                "regexp.(*Regexp).doExecute": 1,
                "regexp.onePassPrefix": 1,
                "regexp.iop": 1,
                "regexp.onePassNext": 1,
                "regexp.mergeRuneSets": 1,
                "regexp.mergeRuneSets.func2": 1,
                "regexp.cleanupOnePass": 1,
                "regexp.onePassCopy": 1,
                "regexp.runeSlice.Len": 1,
                "regexp.runeSlice.Less": 1,
                "regexp.runeSlice.Swap": 1,
                "regexp.makeOnePass": 1,
                "regexp.newQueue": 1,
                "regexp.(*queueOnePass).clear": 1,
                "regexp.(*queueOnePass).insert": 1,
                "regexp.(*queueOnePass).contains": 1,
                "regexp.(*queueOnePass).insertNew": 1,
                "regexp.(*queueOnePass).empty": 1,
                "regexp.(*queueOnePass).next": 1,
                "regexp.compileOnePass": 1,
                "regexp.(*Regexp).String": 1,
                "regexp.(*Regexp).Copy": 1,
                "regexp.(*Regexp).Longest": 1,
                "regexp.compile": 1,
                "regexp.maxBitStateLen": 1,
                "regexp.shouldBacktrack": 1,
                "regexp.(*Regexp).get": 1,
                "regexp.(*Regexp).put": 1,
                "regexp.MustCompile": 1,
                "regexp.Compile": 1,
                "regexp.quote": 1,
                "regexp.(*Regexp).NumSubexp": 1,
                "regexp.(*Regexp).SubexpNames": 1,
                "regexp.(*inputString).step": 1,
                "regexp.(*inputString).canCheckPrefix": 1,
                "regexp.(*inputString).hasPrefix": 1,
                "regexp.(*inputString).index": 1,
                "regexp.(*inputString).context": 1,
                "regexp.(*inputBytes).step": 1,
                "regexp.(*inputBytes).canCheckPrefix": 1,
                "regexp.(*inputBytes).hasPrefix": 1,
                "bytes.HasPrefix": 1,
                "regexp.(*inputBytes).index": 1,
                "regexp.(*inputBytes).context": 1,
                "regexp.(*inputReader).step": 1,
                "regexp.(*inputReader).canCheckPrefix": 1,
                "regexp.(*inputReader).hasPrefix": 1,
                "regexp.(*inputReader).index": 1,
                "regexp.(*inputReader).context": 1,
                "regexp.(*Regexp).LiteralPrefix": 1,
                "regexp.(*Regexp).MatchReader": 1,
                "regexp.(*Regexp).doMatch": 1,
                "regexp.(*Regexp).MatchString": 1,
                "regexp.(*Regexp).Match": 1,
                "regexp.(*Regexp).ReplaceAllString": 1,
                "regexp.(*Regexp).ReplaceAllLiteralString": 1,
                "regexp.(*Regexp).ReplaceAllStringFunc": 1,
                "regexp.(*Regexp).replaceAll": 1,
                "regexp.(*Regexp).ReplaceAll": 1,
                "regexp.(*Regexp).ReplaceAllLiteral": 1,
                "regexp.(*Regexp).ReplaceAllFunc": 1,
                "regexp.init.0": 1,
                "regexp.QuoteMeta": 1,
                "regexp.special": 1,
                "regexp.(*Regexp).pad": 1,
                "regexp.(*Regexp).allMatches": 1,
                "regexp.(*Regexp).Find": 1,
                "regexp.(*Regexp).FindIndex": 1,
                "regexp.(*Regexp).FindString": 1,
                "regexp.(*Regexp).FindStringIndex": 1,
                "regexp.(*Regexp).FindReaderIndex": 1,
                "regexp.(*Regexp).FindSubmatch": 1,
                "regexp.(*Regexp).Expand": 1,
                "regexp.(*Regexp).ExpandString": 1,
                "regexp.(*Regexp).expand": 1,
                "regexp.extract": 1,
                "unicode.IsLetter": 1,
                "unicode.IsDigit": 1,
                "regexp.(*Regexp).FindSubmatchIndex": 1,
                "regexp.(*Regexp).FindStringSubmatch": 1,
                "regexp.(*Regexp).FindStringSubmatchIndex": 1,
                "regexp.(*Regexp).FindReaderSubmatchIndex": 1,
                "regexp.(*Regexp).FindAll": 1,
                "regexp.(*Regexp).FindAllIndex": 1,
                "regexp.(*Regexp).FindAllString": 1,
                "regexp.(*Regexp).FindAllStringIndex": 1,
                "regexp.(*Regexp).FindAllSubmatch": 1,
                "regexp.(*Regexp).FindAllSubmatchIndex": 1,
                "regexp.(*Regexp).FindAllStringSubmatch": 1,
                "regexp.(*Regexp).FindAllStringSubmatchIndex": 1,
                "regexp.(*Regexp).Split": 1,
                "regexp.mergeRuneSets.func1": 1,
                "regexp.makeOnePass.func1": 1,
                "regexp.(*Regexp).ReplaceAllString.func1": 1,
                "regexp.(*Regexp).ReplaceAllLiteralString.func1": 1,
                "regexp.(*Regexp).ReplaceAllStringFunc.func1": 1,
                "regexp.(*Regexp).ReplaceAll.func1": 1,
                "regexp.(*Regexp).ReplaceAllLiteral.func1": 1,
                "regexp.(*Regexp).ReplaceAllFunc.func1": 1,
                "regexp.(*Regexp).FindAll.func1": 1,
                "regexp.(*Regexp).FindAllIndex.func1": 1,
                "regexp.(*Regexp).FindAllString.func1": 1,
                "regexp.(*Regexp).FindAllStringIndex.func1": 1,
                "regexp.(*Regexp).FindAllSubmatch.func1": 1,
                "regexp.(*Regexp).FindAllSubmatchIndex.func1": 1,
                "regexp.(*Regexp).FindAllStringSubmatch.func1": 1,
                "regexp.(*Regexp).FindAllStringSubmatchIndex.func1": 1,
                "regexp.init": 1,
                "regexp.(*onePassInst).MatchEmptyWidth": 1,
                "regexp.(*onePassInst).MatchRune": 1,
                "regexp.(*onePassInst).MatchRunePos": 1,
                "regexp.(*onePassInst).String": 1,
                "type..hash.regexp.entry": 1,
                "type..eq.regexp.entry": 1,
                "type..hash.regexp.inputReader": 1,
                "type..eq.regexp.inputReader": 1,
                "type..hash.regexp.job": 1,
                "type..eq.regexp.job": 1,
                "regexp.(*runeSlice).Len": 1,
                "regexp.(*runeSlice).Less": 1,
                "regexp.(*runeSlice).Swap": 1,
                "unicode/utf16.Encode": 1,
                "unicode/utf16.EncodeRune": 1,
                "unicode/utf16.Decode": 1,
                "unicode/utf16.DecodeRune": 1,
                "log.New": 1,
                "log.(*Logger).SetOutput": 1,
                "log.itoa": 1,
                "log.(*Logger).formatHeader": 1,
                "log.(*Logger).Output": 1,
                "log.(*Logger).Printf": 1,
                "log.(*Logger).Print": 1,
                "log.(*Logger).Println": 1,
                "log.(*Logger).Fatal": 1,
                "log.(*Logger).Fatalf": 1,
                "log.(*Logger).Fatalln": 1,
                "log.(*Logger).Panic": 1,
                "log.(*Logger).Panicf": 1,
                "log.(*Logger).Panicln": 1,
                "log.(*Logger).Flags": 1,
                "log.(*Logger).SetFlags": 1,
                "log.(*Logger).Prefix": 1,
                "log.(*Logger).SetPrefix": 1,
                "log.(*Logger).Writer": 1,
                "log.Printf": 1,
                "log.Println": 1,
                "log.Fatalf": 1,
                "log.Panicf": 1,
                "log.init.ializers": 1,
                "log.init": 1,
                "github.com/robertkrimen/otto/dbg.operandCount": 1,
                "github.com/robertkrimen/otto/dbg.parseFormat": 1,
                "github.com/robertkrimen/otto/dbg.New": 1,
                "github.com/robertkrimen/otto/dbg.NewDbgr": 1,
                "github.com/robertkrimen/otto/dbg.Dbgr.Dbg": 1,
                "github.com/robertkrimen/otto/dbg.(*Dbgr).getEmit": 1,
                "github.com/robertkrimen/otto/dbg.standardEmit": 1,
                "github.com/robertkrimen/otto/dbg.Dbgr.Dbgf": 1,
                "github.com/robertkrimen/otto/dbg.Dbgr.DbgDbgf": 1,
                "github.com/robertkrimen/otto/dbg.Dbgr.dbgf": 1,
                "github.com/robertkrimen/otto/dbg.(*Dbgr).SetOutput": 1,
                "github.com/robertkrimen/otto/dbg._emitWriter.emit": 1,
                "github.com/robertkrimen/otto/dbg.ln": 1,
                "github.com/robertkrimen/otto/dbg._emitLogger.emit": 1,
                "github.com/robertkrimen/otto/dbg._emitLog.emit": 1,
                "github.com/robertkrimen/otto/dbg.Dbgr.DbgDbgf.func1": 1,
                "github.com/robertkrimen/otto/dbg.Dbgr.DbgDbgf.func2": 1,
                "github.com/robertkrimen/otto/dbg.init.ializers": 1,
                "github.com/robertkrimen/otto/dbg.init": 1,
                "type..hash.github.com/robertkrimen/otto/dbg._frmt": 1,
                "type..eq.github.com/robertkrimen/otto/dbg._frmt": 1,
                "github.com/robertkrimen/otto/dbg.(*Dbgr).Dbg": 1,
                "github.com/robertkrimen/otto/dbg.(*Dbgr).DbgDbgf": 1,
                "github.com/robertkrimen/otto/dbg.(*Dbgr).Dbgf": 1,
                "github.com/robertkrimen/otto/dbg.(*_emitWriter).emit": 1,
                "github.com/robertkrimen/otto/dbg.(*_emitLog).emit": 1,
                "github.com/robertkrimen/otto/dbg.(*_emitLogger).emit": 1,
                "encoding/json.Unmarshal": 1,
                "encoding/json.(*decodeState).init": 1,
                "encoding/json.(*UnmarshalTypeError).Error": 1,
                "encoding/json.(*InvalidUnmarshalError).Error": 1,
                "encoding/json.(*decodeState).unmarshal": 1,
                "encoding/json.(*scanner).reset": 1,
                "encoding/json.Number.String": 1,
                "encoding/json.Number.Float64": 1,
                "encoding/json.Number.Int64": 1,
                "encoding/json.isValidNumber": 1,
                "encoding/json.(*decodeState).addErrorContext": 1,
                "encoding/json.(*decodeState).skip": 1,
                "encoding/json.(*decodeState).scanNext": 1,
                "encoding/json.(*decodeState).scanWhile": 1,
                "encoding/json.(*decodeState).value": 1,
                "encoding/json.(*decodeState).readIndex": 1,
                "encoding/json.(*decodeState).valueQuoted": 1,
                "encoding/json.indirect": 1,
                "encoding/json.(*decodeState).array": 1,
                "encoding/json.(*decodeState).saveError": 1,
                "encoding/json.(*decodeState).object": 1,
                "reflect.PtrTo": 1,
                "reflect.MakeMap": 1,
                "/ 0`/ 0d": 1,
                "aT7S6V*s": 1,
                "b'aH`L_2d": 1,
                "#A#P#_<4#3ad#c": 1,
                "encoding/json.(*decodeState).convertNumber": 1,
                "encoding/json.(*decodeState).literalStore": 1,
                "%!6$*9": 1,
                "%7):7I": 1,
                "%K)N7]": 1,
                "%O6R*g": 1,
                "%]6`*u": 1,
                "f7e6h*}": 1,
                "VoU/X W": 1,
                "encoding/json.(*decodeState).valueInterface": 1,
                "encoding/json.(*decodeState).arrayInterface": 1,
                "encoding/json.(*decodeState).objectInterface": 1,
                "encoding/json.unquote": 1,
                "encoding/json.(*decodeState).literalInterface": 1,
                "encoding/json.getu4": 1,
                "encoding/json.unquoteBytes": 1,
                "unicode/utf16.IsSurrogate": 1,
                "encoding/json.Marshal": 1,
                "encoding/json.HTMLEscape": 1,
                "encoding/json.(*UnsupportedTypeError).Error": 1,
                "encoding/json.(*UnsupportedValueError).Error": 1,
                "encoding/json.(*MarshalerError).Error": 1,
                "encoding/json.newEncodeState": 1,
                "encoding/json.(*encodeState).marshal": 1,
                "encoding/json.isEmptyValue": 1,
                "encoding/json.(*encodeState).reflectValue": 1,
                "encoding/json.valueEncoder": 1,
                "encoding/json.typeEncoder": 1,
                "encoding/json.newTypeEncoder": 1,
                "encoding/json.invalidValueEncoder": 1,
                "encoding/json.marshalerEncoder": 1,
                "encoding/json.(*encodeState).error": 1,
                "encoding/json.addrMarshalerEncoder": 1,
                "encoding/json.textMarshalerEncoder": 1,
                "encoding/json.addrTextMarshalerEncoder": 1,
                "encoding/json.boolEncoder": 1,
                "encoding/json.intEncoder": 1,
                "encoding/json.uintEncoder": 1,
                "encoding/json.floatEncoder.encode": 1,
                "encoding/json.stringEncoder": 1,
                "encoding/json.interfaceEncoder": 1,
                "encoding/json.unsupportedTypeEncoder": 1,
                "encoding/json.structEncoder.encode": 1,
                "encoding/json.newStructEncoder": 1,
                "encoding/json.mapEncoder.encode": 1,
                "encoding/json.newMapEncoder": 1,
                "encoding/json.encodeByteSlice": 1,
                "encoding/base64.NewEncoder": 1,
                "encoding/json.sliceEncoder.encode": 1,
                "encoding/json.newSliceEncoder": 1,
                "encoding/json.arrayEncoder.encode": 1,
                "encoding/json.newArrayEncoder": 1,
                "encoding/json.ptrEncoder.encode": 1,
                "encoding/json.newPtrEncoder": 1,
                "encoding/json.condAddrEncoder.encode": 1,
                "encoding/json.newCondAddrEncoder": 1,
                "encoding/json.isValidTag": 1,
                "encoding/json.typeByIndex": 1,
                "encoding/json.(*reflectWithString).resolve": 1,
                "encoding/json.(*encodeState).string": 1,
                "encoding/json.(*encodeState).stringBytes": 1,
                "encoding/json.byIndex.Len": 1,
                "encoding/json.byIndex.Swap": 1,
                "encoding/json.byIndex.Less": 1,
                "encoding/json.typeFields": 1,
                "encoding/json.dominantField": 1,
                "#0 !@\"": 1,
                "I(\"V*gK$0": 1,
                "encoding/json.cachedTypeFields": 1,
                "encoding/json.foldFunc": 1,
                "encoding/json.equalFoldRight": 1,
                "encoding/json.asciiEqualFold": 1,
                "encoding/json.simpleLetterEqualFold": 1,
                "encoding/json.compact": 1,
                "encoding/json.newline": 1,
                "encoding/json.Indent": 1,
                "encoding/json.checkValid": 1,
                "encoding/json.(*SyntaxError).Error": 1,
                "encoding/json.(*scanner).eof": 1,
                "encoding/json.stateBeginValueOrEmpty": 1,
                "encoding/json.isSpace": 1,
                "encoding/json.stateBeginValue": 1,
                "encoding/json.(*scanner).error": 1,
                "encoding/json.(*scanner).pushParseState": 1,
                "encoding/json.stateBeginStringOrEmpty": 1,
                "encoding/json.stateBeginString": 1,
                "encoding/json.stateEndValue": 1,
                "encoding/json.(*scanner).popParseState": 1,
                "encoding/json.stateEndTop": 1,
                "encoding/json.stateInString": 1,
                "encoding/json.stateInStringEsc": 1,
                "encoding/json.stateInStringEscU": 1,
                "encoding/json.stateInStringEscU1": 1,
                "encoding/json.stateInStringEscU12": 1,
                "encoding/json.stateInStringEscU123": 1,
                "encoding/json.stateNeg": 1,
                "encoding/json.state1": 1,
                "encoding/json.state0": 1,
                "encoding/json.stateDot": 1,
                "encoding/json.stateDot0": 1,
                "encoding/json.stateE": 1,
                "encoding/json.stateESign": 1,
                "encoding/json.stateE0": 1,
                "encoding/json.stateT": 1,
                "encoding/json.stateTr": 1,
                "encoding/json.stateTru": 1,
                "encoding/json.stateF": 1,
                "encoding/json.stateFa": 1,
                "encoding/json.stateFal": 1,
                "encoding/json.stateFals": 1,
                "encoding/json.stateN": 1,
                "encoding/json.stateNu": 1,
                "encoding/json.stateNul": 1,
                "encoding/json.stateError": 1,
                "encoding/json.quoteChar": 1,
                "encoding/json.parseTag": 1,
                "encoding/json.tagOptions.Contains": 1,
                "encoding/json.(*encodeState).marshal.func1": 1,
                "encoding/json.typeEncoder.func1": 1,
                "encoding/json.mapEncoder.encode.func1": 1,
                "encoding/json.typeFields.func1": 1,
                "encoding/json.init.ializers": 1,
                "encoding/json.init": 1,
                "encoding/json.(*encodeState).Bytes": 1,
                "encoding/json.(*encodeState).Cap": 1,
                "encoding/json.(*encodeState).Grow": 1,
                "encoding/json.(*encodeState).Len": 1,
                "encoding/json.(*encodeState).Next": 1,
                "encoding/json.(*encodeState).Read": 1,
                "encoding/json.(*encodeState).ReadByte": 1,
                "encoding/json.(*encodeState).ReadBytes": 1,
                "encoding/json.(*encodeState).ReadFrom": 1,
                "encoding/json.(*encodeState).ReadRune": 1,
                "encoding/json.(*encodeState).ReadString": 1,
                "encoding/json.(*encodeState).Reset": 1,
                "encoding/json.(*encodeState).String": 1,
                "encoding/json.(*encodeState).Truncate": 1,
                "encoding/json.(*encodeState).UnreadByte": 1,
                "encoding/json.(*encodeState).UnreadRune": 1,
                "encoding/json.(*encodeState).Write": 1,
                "encoding/json.(*encodeState).WriteByte": 1,
                "encoding/json.(*encodeState).WriteRune": 1,
                "encoding/json.(*encodeState).WriteString": 1,
                "encoding/json.(*encodeState).WriteTo": 1,
                "type..hash.[2]interface {}": 1,
                "type..eq.[2]interface {}": 1,
                "encoding/json.(*jsonError).Error": 1,
                "encoding/json.jsonError.Error": 1,
                "type..hash.encoding/json.reflectWithString": 1,
                "type..eq.encoding/json.reflectWithString": 1,
                "encoding/json.floatEncoder.encode-fm": 1,
                "encoding/json.structEncoder.encode-fm": 1,
                "encoding/json.mapEncoder.encode-fm": 1,
                "encoding/json.sliceEncoder.encode-fm": 1,
                "encoding/json.arrayEncoder.encode-fm": 1,
                "encoding/json.ptrEncoder.encode-fm": 1,
                "encoding/json.condAddrEncoder.encode-fm": 1,
                "type..hash.struct { Struct reflect.Type": 1,
                "type..eq.struct { Struct reflect.Type": 1,
                "type..hash.encoding/json.MarshalerError": 1,
                "type..eq.encoding/json.MarshalerError": 1,
                "encoding/json.(*Number).Float64": 1,
                "encoding/json.(*Number).Int64": 1,
                "encoding/json.(*Number).String": 1,
                "type..hash.encoding/json.SyntaxError": 1,
                "type..eq.encoding/json.SyntaxError": 1,
                "type..hash.encoding/json.UnmarshalTypeError": 1,
                "type..eq.encoding/json.UnmarshalTypeError": 1,
                "type..hash.encoding/json.UnsupportedValueError": 1,
                "type..eq.encoding/json.UnsupportedValueError": 1,
                "encoding/json.(*byIndex).Len": 1,
                "encoding/json.(*byIndex).Less": 1,
                "encoding/json.(*byIndex).Swap": 1,
                "encoding/json.(*tagOptions).Contains": 1,
                "path.(*lazybuf).string": 1,
                "path.Clean": 1,
                "path.(*lazybuf).append": 1,
                "path.(*lazybuf).index": 1,
                "path.Join": 1,
                "path.Base": 1,
                "path.Dir": 1,
                "path.Split": 1,
                "path.init.ializers": 1,
                "path.init": 1,
                "gopkg.in/sourcemap.v1/base64vlq.init.0": 1,
                "gopkg.in/sourcemap.v1/base64vlq.Decoder.Decode": 1,
                "gopkg.in/sourcemap.v1/base64vlq.fromVLQSigned": 1,
                "gopkg.in/sourcemap.v1/base64vlq.init": 1,
                "gopkg.in/sourcemap.v1/base64vlq.(*Decoder).Decode": 1,
                "gopkg.in/sourcemap%2ev1.Parse": 1,
                "gopkg.in/sourcemap%2ev1.(*Consumer).File": 1,
                "gopkg.in/sourcemap%2ev1.(*Consumer).Source": 1,
                "gopkg.in/sourcemap%2ev1.(*Consumer).absSource": 1,
                "path.IsAbs": 1,
                "gopkg.in/sourcemap%2ev1.parseMappings": 1,
                "strings.NewReader": 1,
                "gopkg.in/sourcemap.v1/base64vlq.NewDecoder": 1,
                "gopkg.in/sourcemap%2ev1.(*mappings).parse": 1,
                "gopkg.in/sourcemap%2ev1.(*mappings).pushValue": 1,
                "gopkg.in/sourcemap%2ev1.parseGenCol": 1,
                "gopkg.in/sourcemap%2ev1.parseSourcesInd": 1,
                "gopkg.in/sourcemap%2ev1.parseSourceLine": 1,
                "gopkg.in/sourcemap%2ev1.parseSourceCol": 1,
                "gopkg.in/sourcemap%2ev1.parseNamesInd": 1,
                "gopkg.in/sourcemap%2ev1.(*Consumer).Source.func1": 1,
                "gopkg.in/sourcemap%2ev1.init": 1,
                "github.com/robertkrimen/otto/file.(*Position).String": 1,
                "github.com/robertkrimen/otto/file.(*Position).isValid": 1,
                "github.com/robertkrimen/otto/file.(*FileSet).AddFile": 1,
                "github.com/robertkrimen/otto/file.(*FileSet).nextBase": 1,
                "github.com/robertkrimen/otto/file.(*FileSet).File": 1,
                "github.com/robertkrimen/otto/file.(*FileSet).Position": 1,
                "github.com/robertkrimen/otto/file.(*File).WithSourceMap": 1,
                "github.com/robertkrimen/otto/file.(*File).Name": 1,
                "github.com/robertkrimen/otto/file.(*File).Source": 1,
                "github.com/robertkrimen/otto/file.(*File).Base": 1,
                "github.com/robertkrimen/otto/file.(*File).Position": 1,
                "github.com/robertkrimen/otto/file.init": 1,
                "type..hash.github.com/robertkrimen/otto/file.File": 1,
                "type..eq.github.com/robertkrimen/otto/file.File": 1,
                "type..hash.github.com/robertkrimen/otto/file.Position": 1,
                "type..eq.github.com/robertkrimen/otto/file.Position": 1,
                "github.com/robertkrimen/otto/token.Token.String": 1,
                "github.com/robertkrimen/otto/token.init.ializers": 1,
                "github.com/robertkrimen/otto/token.init": 1,
                "github.com/robertkrimen/otto/token.(*Token).String": 1,
                "type..hash.github.com/robertkrimen/otto/token._keyword": 1,
                "type..eq.github.com/robertkrimen/otto/token._keyword": 1,
                "type..hash.[41]github.com/robertkrimen/otto/token._keyword": 1,
                "type..eq.[41]github.com/robertkrimen/otto/token._keyword": 1,
                "type..hash.[41]string": 1,
                "type..eq.[41]string": 1,
                "type..hash.[87]string": 1,
                "type..eq.[87]string": 1,
                "github.com/robertkrimen/otto/ast.CommentPosition.String": 1,
                "github.com/robertkrimen/otto/ast.Comment.String": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).String": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).FetchAll": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).Fetch": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).ResetLineBreak": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).MarkPrimary": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).AfterBlock": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).AddComment": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).MarkComments": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).Unset": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).SetExpression": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).PostProcessNode": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).applyComments": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).AtLineBreak": 1,
                "github.com/robertkrimen/otto/ast.CommentMap.AddComment": 1,
                "github.com/robertkrimen/otto/ast.CommentMap.AddComments": 1,
                "github.com/robertkrimen/otto/ast.CommentMap.Size": 1,
                "github.com/robertkrimen/otto/ast.CommentMap.MoveComments": 1,
                "github.com/robertkrimen/otto/ast.(*ArrayLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*AssignExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*BadExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*BinaryExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*BooleanLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*BracketExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*CallExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*ConditionalExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*DotExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*EmptyExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*Identifier)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*NewExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*NullLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*NumberLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*ObjectLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*RegExpLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*SequenceExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*StringLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*ThisExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*UnaryExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*VariableExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*BadStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*BlockStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*BranchStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*CaseStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*CatchStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*DebuggerStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*DoWhileStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*EmptyStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*ExpressionStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*ForInStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*ForStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*IfStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*LabelledStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*ReturnStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*SwitchStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*ThrowStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*TryStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*VariableStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*WhileStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*WithStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionDeclaration)._declarationNode": 1,
                "github.com/robertkrimen/otto/ast.(*VariableDeclaration)._declarationNode": 1,
                "github.com/robertkrimen/otto/ast.(*ArrayLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*AssignExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BadExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BinaryExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BooleanLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BracketExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*CallExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ConditionalExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*DotExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*EmptyExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*Identifier).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*NewExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*NullLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*NumberLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ObjectLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*RegExpLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*SequenceExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*StringLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ThisExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*UnaryExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*VariableExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BadStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BlockStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BranchStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*CaseStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*CatchStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*DebuggerStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*DoWhileStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*EmptyStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ExpressionStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ForInStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ForStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*IfStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*LabelledStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*Program).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ReturnStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*SwitchStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ThrowStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*TryStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*VariableStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*WhileStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*WithStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ArrayLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*AssignExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BadExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BinaryExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BooleanLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BracketExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*CallExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ConditionalExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*DotExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*Identifier).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*EmptyExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*NewExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*NullLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*NumberLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ObjectLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*RegExpLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*SequenceExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*StringLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ThisExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*UnaryExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*VariableExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BadStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BlockStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BranchStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*CaseStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*CatchStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*DebuggerStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*DoWhileStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*EmptyStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ExpressionStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ForInStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ForStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*IfStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*LabelledStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*Program).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ReturnStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*SwitchStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ThrowStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*TryStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*VariableStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*WhileStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*WithStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).FetchAll.func1": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).Fetch.func1": 1,
                "github.com/robertkrimen/otto/ast.init": 1,
                "type..hash.[4]interface {}": 1,
                "type..eq.[4]interface {}": 1,
                "github.com/robertkrimen/otto/ast.(*CommentPosition).String": 1,
                "type..hash.github.com/robertkrimen/otto/ast.Comment": 1,
                "type..eq.github.com/robertkrimen/otto/ast.Comment": 1,
                "github.com/robertkrimen/otto/ast.(*Comment).String": 1,
                "type..hash.github.com/robertkrimen/otto/ast.AssignExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.AssignExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.BinaryExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.BinaryExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.BooleanLiteral": 1,
                "type..eq.github.com/robertkrimen/otto/ast.BooleanLiteral": 1,
                "type..hash.github.com/robertkrimen/otto/ast.BracketExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.BracketExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.Identifier": 1,
                "type..eq.github.com/robertkrimen/otto/ast.Identifier": 1,
                "type..hash.github.com/robertkrimen/otto/ast.CatchStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.CatchStatement": 1,
                "github.com/robertkrimen/otto/ast.(*CommentMap).AddComment": 1,
                "github.com/robertkrimen/otto/ast.(*CommentMap).AddComments": 1,
                "github.com/robertkrimen/otto/ast.(*CommentMap).MoveComments": 1,
                "github.com/robertkrimen/otto/ast.(*CommentMap).Size": 1,
                "type..hash.github.com/robertkrimen/otto/ast.ConditionalExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.ConditionalExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.DoWhileStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.DoWhileStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.DotExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.DotExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.ForInStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.ForInStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.ForStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.ForStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.IfStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.IfStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.LabelledStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.LabelledStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.NullLiteral": 1,
                "type..eq.github.com/robertkrimen/otto/ast.NullLiteral": 1,
                "type..hash.github.com/robertkrimen/otto/ast.NumberLiteral": 1,
                "type..eq.github.com/robertkrimen/otto/ast.NumberLiteral": 1,
                "type..hash.github.com/robertkrimen/otto/ast.Property": 1,
                "type..eq.github.com/robertkrimen/otto/ast.Property": 1,
                "type..hash.github.com/robertkrimen/otto/ast.RegExpLiteral": 1,
                "type..eq.github.com/robertkrimen/otto/ast.RegExpLiteral": 1,
                "type..hash.github.com/robertkrimen/otto/ast.ReturnStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.ReturnStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.StringLiteral": 1,
                "type..eq.github.com/robertkrimen/otto/ast.StringLiteral": 1,
                "type..hash.github.com/robertkrimen/otto/ast.ThrowStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.ThrowStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.TryStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.TryStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.UnaryExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.UnaryExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.VariableExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.VariableExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.WhileStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.WhileStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.WithStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.WithStatement": 1,
                "path/filepath.init.ializers": 1,
                "path/filepath.init": 1,
                "io/ioutil.readAll": 1,
                "io/ioutil.ReadFile": 1,
                "os.Open": 1,
                "io/ioutil.readAll.func1": 1,
                "io/ioutil.init": 1,
                "github.com/robertkrimen/otto/parser.Error.Error": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).error": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).idxOf": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Add": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).errorUnexpected": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).errorUnexpectedToken": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Reset": 1,
                "github.com/robertkrimen/otto/parser.ErrorList.Len": 1,
                "github.com/robertkrimen/otto/parser.ErrorList.Swap": 1,
                "github.com/robertkrimen/otto/parser.ErrorList.Less": 1,
                "github.com/robertkrimen/otto/parser.ErrorList.Sort": 1,
                "github.com/robertkrimen/otto/parser.ErrorList.Error": 1,
                "github.com/robertkrimen/otto/parser.ErrorList.Err": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseIdentifier": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).next": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parsePrimaryExpression": 1,
                "github.com/robertkrimen/otto/token.IsKeyword": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseRegExpLiteral": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseVariableDeclaration": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseVariableDeclarationList": 1,
                "github.com/robertkrimen/otto/parser.(*_scope).declare": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseObjectPropertyKey": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseObjectProperty": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseObjectLiteral": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseArrayLiteral": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseArgumentList": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseCallExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseDotMember": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBracketMember": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseNewExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseLeftHandSideExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseLeftHandSideExpressionAllowCall": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parsePostfixExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseUnaryExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseMultiplicativeExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseAdditiveExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseShiftExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseRelationalExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseEqualityExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBitwiseAndExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBitwiseExclusiveOrExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBitwiseOrExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseLogicalAndExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseLogicalOrExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseConditionlExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseAssignmentExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseExpression": 1,
                "github.com/robertkrimen/otto/parser.isIdentifierStart": 1,
                "github.com/robertkrimen/otto/parser.isIdentifierPart": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scanIdentifier": 1,
                "github.com/robertkrimen/otto/parser.hex2decimal": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scan": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).switch2": 1,
                "github.com/robertkrimen/otto/parser.digitValue": 1,
                "github.com/robertkrimen/otto/ast.NewComment": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).switch3": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).switch4": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).switch6": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).read": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).read": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).readSingleLineComment": 1,
                "github.com/robertkrimen/otto/parser.isLineTerminator": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).readMultiLineComment": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).skipSingleLineComment": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).skipMultiLineComment": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).skipWhiteSpace": 1,
                "github.com/robertkrimen/otto/parser.(*_parser)._peek": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scanMantissa": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scanEscape": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scanString": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scanNewline": 1,
                "github.com/robertkrimen/otto/parser.parseNumberLiteral": 1,
                "github.com/robertkrimen/otto/parser.parseStringLiteral": 1,
                "bytes.NewBuffer": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scanNumericLiteral": 1,
                "github.com/robertkrimen/otto/parser.isDigit": 1,
                "github.com/robertkrimen/otto/parser.isDecimalDigit": 1,
                "github.com/robertkrimen/otto/parser.ReadSource": 1,
                "io.Copy": 1,
                "github.com/robertkrimen/otto/parser.ReadSourceMap": 1,
                "github.com/robertkrimen/otto/parser.ParseFileWithSourceMap": 1,
                "github.com/robertkrimen/otto/parser._newParser": 1,
                "github.com/robertkrimen/otto/file.NewFile": 1,
                "github.com/robertkrimen/otto/ast.NewComments": 1,
                "bytes.Split": 1,
                "bytes.SplitN": 1,
                "github.com/robertkrimen/otto/parser.ParseFunction": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).Scan": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parse": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).optionalSemicolon": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).expect": 1,
                "github.com/robertkrimen/otto/parser.lineCount": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).position": 1,
                "github.com/robertkrimen/otto/parser.TransformRegExp": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).scan": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).scanGroup": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).scanBracket": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).scanEscape": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).pass": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).error": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).closeScope": 1,
                "github.com/robertkrimen/otto/parser.(*_scope).hasLabel": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBlockStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseStatementList": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseEmptyStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseTryStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseFunctionParameterList": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseFunctionStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseFunction": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).slice": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseFunctionBlock": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).openScope": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseDebuggerStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).semicolon": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseReturnStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseThrowStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseSwitchStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseWithStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseCaseStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseIterationStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseForIn": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseFor": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseForOrForInStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseVariableStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseDoWhileStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseWhileStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseIfStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseSourceElements": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseSourceElement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseProgram": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBreakStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseContinueStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).nextStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseLeftHandSideExpressionAllowCall.func1": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseRelationalExpression.func1": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseFunctionBlock.func1": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseSwitchStatement.func1": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseIterationStatement.func1": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseDoWhileStatement.func1": 1,
                "github.com/robertkrimen/otto/parser.init.ializers": 1,
                "github.com/robertkrimen/otto/parser.init": 1,
                "github.com/robertkrimen/otto/parser.(*Error).Error": 1,
                "type..hash.[3]interface {}": 1,
                "type..eq.[3]interface {}": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseUnaryExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseMultiplicativeExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseAdditiveExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseShiftExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseRelationalExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseEqualityExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBitwiseAndExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBitwiseExclusiveOrExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBitwiseOrExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseLogicalAndExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseAssignmentExpression-fm": 1,
                "type..hash.github.com/robertkrimen/otto/parser.Error": 1,
                "type..eq.github.com/robertkrimen/otto/parser.Error": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Err": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Error": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Len": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Less": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Sort": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Swap": 1,
                "math/rand.(*Rand).ExpFloat64": 1,
                "math/rand.(*Rand).Float64": 1,
                "math/rand.(*Rand).Int63": 1,
                "math/rand.(*Rand).Uint32": 1,
                "math/rand.(*Rand).NormFloat64": 1,
                "math/rand.absInt32": 1,
                "math/rand.NewSource": 1,
                "math/rand.New": 1,
                "math/rand.(*Rand).Seed": 1,
                "math/rand.(*Rand).Uint64": 1,
                "math/rand.(*Rand).Int31": 1,
                "math/rand.(*Rand).Int": 1,
                "math/rand.(*Rand).Int63n": 1,
                "math/rand.(*Rand).Int31n": 1,
                "math/rand.(*Rand).int31n": 1,
                "math/rand.(*Rand).Intn": 1,
                "math/rand.(*Rand).Float32": 1,
                "math/rand.(*Rand).Perm": 1,
                "math/rand.(*Rand).Shuffle": 1,
                "math/rand.(*Rand).Read": 1,
                "math/rand.read": 1,
                "math/rand.Float64": 1,
                "math/rand.(*lockedSource).Int63": 1,
                "math/rand.(*lockedSource).Uint64": 1,
                "math/rand.(*lockedSource).Seed": 1,
                "math/rand.(*lockedSource).seedPos": 1,
                "math/rand.(*lockedSource).read": 1,
                "math/rand.(*rngSource).Seed": 1,
                "math/rand.seedrand": 1,
                "math/rand.(*rngSource).Int63": 1,
                "math/rand.(*rngSource).Uint64": 1,
                "math/rand.init.ializers": 1,
                "math/rand.init": 1,
                "type..hash.math/rand.Rand": 1,
                "type..eq.math/rand.Rand": 1,
                "math/rand.(*Rand).Int63-fm": 1,
                "math/rand.Source64.Int63-fm": 1,
                "type..hash.math/rand.lockedSource": 1,
                "type..eq.math/rand.lockedSource": 1,
                "type..hash.[128]float32": 1,
                "type..eq.[128]float32": 1,
                "type..hash.[256]float32": 1,
                "type..eq.[256]float32": 1,
                "github.com/robertkrimen/otto/registry.(*Entry).Enable": 1,
                "github.com/robertkrimen/otto/registry.(*Entry).Disable": 1,
                "github.com/robertkrimen/otto/registry.Entry.Source": 1,
                "github.com/robertkrimen/otto/registry.Apply": 1,
                "github.com/robertkrimen/otto/registry.init.ializers": 1,
                "github.com/robertkrimen/otto/registry.init": 1,
                "github.com/robertkrimen/otto/registry.(*Entry).Source": 1,
                "encoding/gob.decBoolArray": 1,
                "encoding/gob.decBoolSlice": 1,
                "encoding/gob.(*decBuffer).Len": 1,
                "encoding/gob.decComplex64Array": 1,
                "encoding/gob.decComplex64Slice": 1,
                "encoding/gob.float32FromBits": 1,
                "encoding/gob.float64FromBits": 1,
                "encoding/gob.error_": 1,
                "encoding/gob.decComplex128Array": 1,
                "encoding/gob.decComplex128Slice": 1,
                "encoding/gob.decFloat32Array": 1,
                "encoding/gob.decFloat32Slice": 1,
                "encoding/gob.decFloat64Array": 1,
                "encoding/gob.decFloat64Slice": 1,
                "encoding/gob.decIntArray": 1,
                "encoding/gob.decIntSlice": 1,
                "encoding/gob.decInt16Array": 1,
                "encoding/gob.decInt16Slice": 1,
                "encoding/gob.decInt32Array": 1,
                "encoding/gob.decInt32Slice": 1,
                "encoding/gob.decInt64Array": 1,
                "encoding/gob.decInt64Slice": 1,
                "encoding/gob.decInt8Array": 1,
                "encoding/gob.decInt8Slice": 1,
                "encoding/gob.decStringArray": 1,
                "encoding/gob.decStringSlice": 1,
                "encoding/gob.(*decBuffer).Drop": 1,
                "encoding/gob.(*decBuffer).Bytes": 1,
                "encoding/gob.decUintArray": 1,
                "encoding/gob.decUintSlice": 1,
                "encoding/gob.decUint16Array": 1,
                "encoding/gob.decUint16Slice": 1,
                "encoding/gob.decUint32Array": 1,
                "encoding/gob.decUint32Slice": 1,
                "encoding/gob.decUint64Array": 1,
                "encoding/gob.decUint64Slice": 1,
                "encoding/gob.decUintptrArray": 1,
                "encoding/gob.decUintptrSlice": 1,
                "encoding/gob.(*decBuffer).Read": 1,
                "encoding/gob.(*decBuffer).Size": 1,
                "encoding/gob.(*decBuffer).Reset": 1,
                "encoding/gob.(*decBuffer).ReadByte": 1,
                "encoding/gob.(*Decoder).freeDecoderState": 1,
                "encoding/gob.decodeUintReader": 1,
                "encoding/gob.(*decoderState).decodeUint": 1,
                "encoding/gob.(*decoderState).decodeInt": 1,
                "encoding/gob.(*decoderState).getLength": 1,
                "encoding/gob.ignoreUint": 1,
                "encoding/gob.ignoreTwoUints": 1,
                "encoding/gob.decAlloc": 1,
                "encoding/gob.decBool": 1,
                "encoding/gob.decInt8": 1,
                "encoding/gob.decUint8": 1,
                "encoding/gob.decInt16": 1,
                "encoding/gob.decUint16": 1,
                "encoding/gob.decInt32": 1,
                "encoding/gob.decUint32": 1,
                "encoding/gob.decInt64": 1,
                "encoding/gob.decUint64": 1,
                "encoding/gob.decFloat32": 1,
                "encoding/gob.decFloat64": 1,
                "encoding/gob.decComplex64": 1,
                "encoding/gob.decComplex128": 1,
                "encoding/gob.decUint8Slice": 1,
                "encoding/gob.decString": 1,
                "encoding/gob.ignoreUint8Array": 1,
                "encoding/gob.(*Decoder).decodeSingle": 1,
                "encoding/gob.(*Decoder).newDecoderState": 1,
                "encoding/gob.(*Decoder).decodeStruct": 1,
                "encoding/gob.(*Decoder).ignoreStruct": 1,
                "encoding/gob.(*Decoder).ignoreSingle": 1,
                "encoding/gob.(*Decoder).decodeArrayHelper": 1,
                "encoding/gob.(*Decoder).decodeArray": 1,
                "encoding/gob.decodeIntoValue": 1,
                "encoding/gob.(*Decoder).decodeMap": 1,
                "encoding/gob.(*Decoder).ignoreArrayHelper": 1,
                "encoding/gob.(*Decoder).ignoreArray": 1,
                "encoding/gob.(*Decoder).ignoreMap": 1,
                "encoding/gob.(*Decoder).decodeSlice": 1,
                "encoding/gob.(*Decoder).ignoreSlice": 1,
                "encoding/gob.(*Decoder).decodeInterface": 1,
                ",6+D,6+.": 1,
                "encoding/gob.(*Decoder).ignoreInterface": 1,
                "encoding/gob.(*Decoder).decodeGobDecoder": 1,
                "encoding/gob.(*Decoder).ignoreGobDecoder": 1,
                "encoding/gob.(*Decoder).decOpFor": 1,
                "encoding/gob.overflow": 1,
                "\"[?<@v": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor": 1,
                "encoding/gob.(*Decoder).gobDecodeOpFor": 1,
                "encoding/gob.(*Decoder).compatibleType": 1,
                "encoding/gob.(*Decoder).typeString": 1,
                "encoding/gob.(*wireType).string": 1,
                "encoding/gob.(*Decoder).compileSingle": 1,
                "encoding/gob.(*Decoder).compileIgnoreSingle": 1,
                "encoding/gob.(*Decoder).compileDec": 1,
                "encoding/gob.(*Decoder).getDecEnginePtr": 1,
                "encoding/gob.(*Decoder).getIgnoreEnginePtr": 1,
                "encoding/gob.(*Decoder).decodeValue": 1,
                "encoding/gob.(*Decoder).decodeIgnoredValue": 1,
                "encoding/gob.init.0": 1,
                "encoding/gob.allocValue": 1,
                "encoding/gob.(*Decoder).recvType": 1,
                "encoding/gob.(*Decoder).recvMessage": 1,
                "encoding/gob.(*Decoder).readMessage": 1,
                "encoding/gob.(*Decoder).nextInt": 1,
                "encoding/gob.toInt": 1,
                "encoding/gob.(*Decoder).nextUint": 1,
                "encoding/gob.(*Decoder).decodeTypeSequence": 1,
                "encoding/gob.(*Decoder).Decode": 1,
                "encoding/gob.(*Decoder).DecodeValue": 1,
                "encoding/gob.encBoolArray": 1,
                "encoding/gob.encBoolSlice": 1,
                "encoding/gob.encComplex64Array": 1,
                "encoding/gob.encComplex64Slice": 1,
                "encoding/gob.floatBits": 1,
                "encoding/gob.encComplex128Array": 1,
                "encoding/gob.encComplex128Slice": 1,
                "encoding/gob.encFloat32Array": 1,
                "encoding/gob.encFloat32Slice": 1,
                "encoding/gob.encFloat64Array": 1,
                "encoding/gob.encFloat64Slice": 1,
                "encoding/gob.encIntArray": 1,
                "encoding/gob.encIntSlice": 1,
                "encoding/gob.encInt16Array": 1,
                "encoding/gob.encInt16Slice": 1,
                "encoding/gob.encInt32Array": 1,
                "encoding/gob.encInt32Slice": 1,
                "encoding/gob.encInt64Array": 1,
                "encoding/gob.encInt64Slice": 1,
                "encoding/gob.encInt8Array": 1,
                "encoding/gob.encInt8Slice": 1,
                "encoding/gob.encStringArray": 1,
                "encoding/gob.encStringSlice": 1,
                "encoding/gob.(*encBuffer).WriteString": 1,
                "encoding/gob.encUintArray": 1,
                "encoding/gob.encUintSlice": 1,
                "encoding/gob.encUint16Array": 1,
                "encoding/gob.encUint16Slice": 1,
                "encoding/gob.encUint32Array": 1,
                "encoding/gob.encUint32Slice": 1,
                "encoding/gob.encUint64Array": 1,
                "encoding/gob.encUint64Slice": 1,
                "encoding/gob.encUintptrArray": 1,
                "encoding/gob.encUintptrSlice": 1,
                "encoding/gob.(*encBuffer).WriteByte": 1,
                "encoding/gob.(*encBuffer).Write": 1,
                "encoding/gob.(*encBuffer).Len": 1,
                "encoding/gob.(*encBuffer).Bytes": 1,
                "encoding/gob.(*encBuffer).Reset": 1,
                "encoding/gob.(*Encoder).freeEncoderState": 1,
                "encoding/gob.(*encoderState).encodeUint": 1,
                "encoding/gob.(*encoderState).encodeInt": 1,
                "encoding/gob.encIndirect": 1,
                "encoding/gob.encBool": 1,
                "encoding/gob.(*encoderState).update": 1,
                "encoding/gob.encInt": 1,
                "encoding/gob.encUint": 1,
                "encoding/gob.encFloat": 1,
                "encoding/gob.encComplex": 1,
                "encoding/gob.encUint8Array": 1,
                "encoding/gob.encString": 1,
                "encoding/gob.encStructTerminator": 1,
                "encoding/gob.valid": 1,
                "encoding/gob.(*Encoder).encodeSingle": 1,
                "encoding/gob.(*Encoder).newEncoderState": 1,
                "encoding/gob.(*Encoder).encodeStruct": 1,
                "encoding/gob.(*Encoder).encodeArray": 1,
                "encoding/gob.encodeReflectValue": 1,
                "reflect.Indirect": 1,
                "encoding/gob.(*Encoder).encodeMap": 1,
                "encoding/gob.(*Encoder).encodeInterface": 1,
                "encoding/gob.(*Encoder).writer": 1,
                "encoding/gob.(*Encoder).sendTypeId": 1,
                "encoding/gob.(*Encoder).pushWriter": 1,
                "encoding/gob.(*Encoder).popWriter": 1,
                "A&&%4&&%k": 1,
                "encoding/gob.isZero": 1,
                "encoding/gob.(*Encoder).encodeGobEncoder": 1,
                "encoding/gob.encOpFor": 1,
                "encoding/gob.gobEncodeOpFor": 1,
                "encoding/gob.compileEnc": 1,
                "encoding/gob.getEncEngine": 1,
                "encoding/gob.buildEncEngine": 1,
                "encoding/gob.(*Encoder).encode": 1,
                "encoding/gob.(*Encoder).writeMessage": 1,
                "encoding/gob.(*Encoder).setError": 1,
                "encoding/gob.(*Encoder).sendActualType": 1,
                "encoding/gob.(*Encoder).sendType": 1,
                "encoding/gob.(*Encoder).Encode": 1,
                "encoding/gob.(*Encoder).sendTypeDescriptor": 1,
                "encoding/gob.(*Encoder).EncodeValue": 1,
                "encoding/gob.errorf": 1,
                "encoding/gob.catchError": 1,
                "encoding/gob.validUserType": 1,
                "ew/x3w": 1,
                "encoding/gob.implementsInterface": 1,
                "encoding/gob.userType": 1,
                "encoding/gob.setTypeId": 1,
                "encoding/gob.typeId.string": 1,
                "encoding/gob.typeId.gobType": 1,
                "encoding/gob.typeId.name": 1,
                "encoding/gob.(*CommonType).id": 1,
                "encoding/gob.(*CommonType).setId": 1,
                "encoding/gob.(*CommonType).string": 1,
                "encoding/gob.(*CommonType).safeString": 1,
                "encoding/gob.(*CommonType).name": 1,
                "encoding/gob.init.1": 1,
                "encoding/gob.(*arrayType).init": 1,
                "encoding/gob.(*arrayType).safeString": 1,
                "encoding/gob.(*arrayType).string": 1,
                "encoding/gob.(*gobEncoderType).safeString": 1,
                "encoding/gob.(*gobEncoderType).string": 1,
                "encoding/gob.(*mapType).init": 1,
                "encoding/gob.(*mapType).safeString": 1,
                "encoding/gob.(*mapType).string": 1,
                "encoding/gob.(*sliceType).init": 1,
                "encoding/gob.(*sliceType).safeString": 1,
                "encoding/gob.(*sliceType).string": 1,
                "encoding/gob.(*structType).safeString": 1,
                "encoding/gob.(*structType).string": 1,
                "encoding/gob.newTypeObject": 1,
                "encoding/gob.newGobEncoderType": 1,
                "encoding/gob.newMapType": 1,
                "encoding/gob.newArrayType": 1,
                "encoding/gob.newStructType": 1,
                "encoding/gob.newSliceType": 1,
                "403\"<G": 1,
                ":#+1*G": 1,
                "encoding/gob.isExported": 1,
                "unicode.IsUpper": 1,
                "encoding/gob.isSent": 1,
                "encoding/gob.getBaseType": 1,
                "encoding/gob.getType": 1,
                "encoding/gob.checkId": 1,
                "encoding/gob.bootstrapType": 1,
                "encoding/gob.getTypeInfo": 1,
                "encoding/gob.lookupTypeInfo": 1,
                "encoding/gob.buildTypeInfo": 1,
                "encoding/gob.mustGetTypeInfo": 1,
                "encoding/gob.RegisterName": 1,
                "encoding/gob.Register": 1,
                "encoding/gob.registerBasics": 1,
                "encoding/gob.glob..func1": 1,
                "encoding/gob.(*Decoder).decOpFor.func1": 1,
                "encoding/gob.(*Decoder).decOpFor.func2": 1,
                "encoding/gob.(*Decoder).decOpFor.func3": 1,
                "encoding/gob.(*Decoder).decOpFor.func4": 1,
                "encoding/gob.(*Decoder).decOpFor.func5": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor.func1": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor.func2": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor.func3": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor.func4": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor.func5": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor.func6": 1,
                "encoding/gob.(*Decoder).gobDecodeOpFor.func1": 1,
                "encoding/gob.encOpFor.func1": 1,
                "encoding/gob.encOpFor.func2": 1,
                "encoding/gob.encOpFor.func3": 1,
                "encoding/gob.encOpFor.func4": 1,
                "encoding/gob.encOpFor.func5": 1,
                "encoding/gob.gobEncodeOpFor.func1": 1,
                "encoding/gob.newTypeObject.func1": 1,
                "encoding/gob.init.ializers": 1,
                "encoding/gob.init": 1,
                "encoding/gob.(*sliceType).id": 1,
                "encoding/gob.(*sliceType).name": 1,
                "encoding/gob.(*sliceType).setId": 1,
                "encoding/gob.(*structType).id": 1,
                "encoding/gob.(*structType).name": 1,
                "encoding/gob.(*structType).setId": 1,
                "encoding/gob.(*arrayType).id": 1,
                "encoding/gob.(*arrayType).name": 1,
                "encoding/gob.(*arrayType).setId": 1,
                "encoding/gob.(*gobEncoderType).id": 1,
                "encoding/gob.(*gobEncoderType).name": 1,
                "encoding/gob.(*gobEncoderType).setId": 1,
                "encoding/gob.(*mapType).id": 1,
                "encoding/gob.(*mapType).name": 1,
                "encoding/gob.(*mapType).setId": 1,
                "encoding/gob.(*typeId).name": 1,
                "encoding/gob.(*typeId).string": 1,
                "type..hash.encoding/gob.CommonType": 1,
                "type..eq.encoding/gob.CommonType": 1,
                "type..hash.encoding/gob.arrayType": 1,
                "type..eq.encoding/gob.arrayType": 1,
                "type..hash.encoding/gob.sliceType": 1,
                "type..eq.encoding/gob.sliceType": 1,
                "type..hash.encoding/gob.fieldType": 1,
                "type..eq.encoding/gob.fieldType": 1,
                "type..hash.encoding/gob.mapType": 1,
                "type..eq.encoding/gob.mapType": 1,
                "type..hash.encoding/gob.gobEncoderType": 1,
                "type..eq.encoding/gob.gobEncoderType": 1,
                "type..hash.encoding/gob.userTypeInfo": 1,
                "type..eq.encoding/gob.userTypeInfo": 1,
                "type..hash.encoding/gob.encoderState": 1,
                "type..eq.encoding/gob.encoderState": 1,
                "type..hash.encoding/gob.typeInfo": 1,
                "type..eq.encoding/gob.typeInfo": 1,
                "github.com/robertkrimen/otto.builtinGlobal_eval": 1,
                "github.com/robertkrimen/otto.FunctionCall.Argument": 1,
                "github.com/robertkrimen/otto.valueOfArrayIndex": 1,
                "github.com/robertkrimen/otto.getValueOfArrayIndex": 1,
                "github.com/robertkrimen/otto.Value.isEmpty": 1,
                "github.com/robertkrimen/otto.Value.IsString": 1,
                "github.com/robertkrimen/otto.(*_runtime).enterGlobalScope": 1,
                "github.com/robertkrimen/otto.newScope": 1,
                "github.com/robertkrimen/otto.builtinGlobal_isNaN": 1,
                "github.com/robertkrimen/otto.toValue_bool": 1,
                "github.com/robertkrimen/otto.builtinGlobal_isFinite": 1,
                "github.com/robertkrimen/otto.builtinGlobal_parseInt": 1,
                "github.com/robertkrimen/otto.digitValue": 1,
                "github.com/robertkrimen/otto.NaNValue": 1,
                "github.com/robertkrimen/otto.toValue_float64": 1,
                "github.com/robertkrimen/otto.toValue_int64": 1,
                "github.com/robertkrimen/otto.builtinGlobal_parseFloat": 1,
                "github.com/robertkrimen/otto._builtinGlobal_encodeURI": 1,
                "github.com/robertkrimen/otto.(*_runtime).panicURIError": 1,
                "github.com/robertkrimen/otto.toValue_string": 1,
                "github.com/robertkrimen/otto.builtinGlobal_encodeURI": 1,
                "github.com/robertkrimen/otto.builtinGlobal_encodeURIComponent": 1,
                "github.com/robertkrimen/otto._decodeURI": 1,
                "github.com/robertkrimen/otto.builtinGlobal_decodeURI": 1,
                "github.com/robertkrimen/otto.builtinGlobal_decodeURIComponent": 1,
                "github.com/robertkrimen/otto.builtin_shouldEscape": 1,
                "github.com/robertkrimen/otto.builtin_escape": 1,
                "github.com/robertkrimen/otto.builtin_unescape": 1,
                "encoding/hex.DecodeString": 1,
                "github.com/robertkrimen/otto.builtinGlobal_escape": 1,
                "github.com/robertkrimen/otto.builtinGlobal_unescape": 1,
                "github.com/robertkrimen/otto.builtinArray": 1,
                "github.com/robertkrimen/otto.builtinNewArray": 1,
                "github.com/robertkrimen/otto.builtinNewArrayNative": 1,
                "github.com/robertkrimen/otto.Value.IsNumber": 1,
                "github.com/robertkrimen/otto.(*_runtime).newArray": 1,
                "github.com/robertkrimen/otto.builtinArray_toString": 1,
                "github.com/robertkrimen/otto.(*_object).get": 1,
                "github.com/robertkrimen/otto.builtinArray_toLocaleString": 1,
                "github.com/robertkrimen/otto.arrayIndexToString": 1,
                "github.com/robertkrimen/otto.(*_runtime).panicTypeError": 1,
                "github.com/robertkrimen/otto.builtinArray_concat": 1,
                "github.com/robertkrimen/otto.isArray": 1,
                "github.com/robertkrimen/otto.(*_object).hasProperty": 1,
                "github.com/robertkrimen/otto.builtinArray_shift": 1,
                "github.com/robertkrimen/otto.(*_object).put": 1,
                "github.com/robertkrimen/otto.(*_object).delete": 1,
                "github.com/robertkrimen/otto.builtinArray_push": 1,
                "github.com/robertkrimen/otto.builtinArray_pop": 1,
                "github.com/robertkrimen/otto.toValue_uint32": 1,
                "github.com/robertkrimen/otto.builtinArray_join": 1,
                "github.com/robertkrimen/otto.Value.IsDefined": 1,
                "github.com/robertkrimen/otto.builtinArray_splice": 1,
                "github.com/robertkrimen/otto.FunctionCall.getArgument": 1,
                "github.com/robertkrimen/otto.builtinArray_slice": 1,
                "github.com/robertkrimen/otto.builtinArray_unshift": 1,
                "github.com/robertkrimen/otto.builtinArray_reverse": 1,
                "github.com/robertkrimen/otto.sortCompare": 1,
                "github.com/robertkrimen/otto.arraySortSwap": 1,
                "github.com/robertkrimen/otto.arraySortQuickPartition": 1,
                "github.com/robertkrimen/otto.arraySortQuickSort": 1,
                "github.com/robertkrimen/otto.builtinArray_sort": 1,
                "github.com/robertkrimen/otto.Value.IsUndefined": 1,
                "github.com/robertkrimen/otto.builtinArray_isArray": 1,
                "github.com/robertkrimen/otto.builtinArray_indexOf": 1,
                "github.com/robertkrimen/otto.toValue_int": 1,
                "github.com/robertkrimen/otto.builtinArray_lastIndexOf": 1,
                "github.com/robertkrimen/otto.builtinArray_every": 1,
                "github.com/robertkrimen/otto.builtinArray_some": 1,
                "github.com/robertkrimen/otto.builtinArray_forEach": 1,
                "github.com/robertkrimen/otto.builtinArray_map": 1,
                "github.com/robertkrimen/otto.builtinArray_filter": 1,
                "github.com/robertkrimen/otto.builtinArray_reduce": 1,
                "github.com/robertkrimen/otto.builtinArray_reduceRight": 1,
                "github.com/robertkrimen/otto.builtinBoolean": 1,
                "github.com/robertkrimen/otto.builtinNewBoolean": 1,
                "github.com/robertkrimen/otto.(*_runtime).newBoolean": 1,
                "github.com/robertkrimen/otto.builtinBoolean_toString": 1,
                "github.com/robertkrimen/otto.Value.IsBoolean": 1,
                "github.com/robertkrimen/otto.builtinBoolean_valueOf": 1,
                "github.com/robertkrimen/otto.builtinDate": 1,
                "github.com/robertkrimen/otto.(*_dateObject).Time": 1,
                "github.com/robertkrimen/otto.builtinNewDate": 1,
                "github.com/robertkrimen/otto.(*_runtime).newDate": 1,
                "github.com/robertkrimen/otto.builtinDate_toString": 1,
                "github.com/robertkrimen/otto.builtinDate_toDateString": 1,
                "github.com/robertkrimen/otto.builtinDate_toTimeString": 1,
                "github.com/robertkrimen/otto.builtinDate_toUTCString": 1,
                "github.com/robertkrimen/otto.builtinDate_toISOString": 1,
                "github.com/robertkrimen/otto.builtinDate_toJSON": 1,
                "github.com/robertkrimen/otto.builtinDate_toGMTString": 1,
                "github.com/robertkrimen/otto.builtinDate_getTime": 1,
                "github.com/robertkrimen/otto.(*_dateObject).Epoch": 1,
                "github.com/robertkrimen/otto.builtinDate_setTime": 1,
                "github.com/robertkrimen/otto.(*_dateObject).Value": 1,
                "github.com/robertkrimen/otto._builtinDate_beforeSet": 1,
                "github.com/robertkrimen/otto.builtinDate_parse": 1,
                "github.com/robertkrimen/otto.builtinDate_UTC": 1,
                "github.com/robertkrimen/otto.builtinDate_now": 1,
                "github.com/robertkrimen/otto.builtinDate_toLocaleString": 1,
                "github.com/robertkrimen/otto.builtinDate_toLocaleDateString": 1,
                "github.com/robertkrimen/otto.builtinDate_toLocaleTimeString": 1,
                "github.com/robertkrimen/otto.builtinDate_valueOf": 1,
                "github.com/robertkrimen/otto.builtinDate_getYear": 1,
                "github.com/robertkrimen/otto.builtinDate_getFullYear": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCFullYear": 1,
                "github.com/robertkrimen/otto.builtinDate_getMonth": 1,
                "github.com/robertkrimen/otto.dateFromGoMonth": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCMonth": 1,
                "github.com/robertkrimen/otto.builtinDate_getDate": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCDate": 1,
                "github.com/robertkrimen/otto.builtinDate_getDay": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCDay": 1,
                "github.com/robertkrimen/otto.builtinDate_getHours": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCHours": 1,
                "github.com/robertkrimen/otto.builtinDate_getMinutes": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCMinutes": 1,
                "github.com/robertkrimen/otto.builtinDate_getSeconds": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCSeconds": 1,
                "github.com/robertkrimen/otto.builtinDate_getMilliseconds": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCMilliseconds": 1,
                "github.com/robertkrimen/otto.builtinDate_getTimezoneOffset": 1,
                "github.com/robertkrimen/otto.builtinDate_setMilliseconds": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCMilliseconds": 1,
                "github.com/robertkrimen/otto.builtinDate_setSeconds": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCSeconds": 1,
                "github.com/robertkrimen/otto.builtinDate_setMinutes": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCMinutes": 1,
                "github.com/robertkrimen/otto.builtinDate_setHours": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCHours": 1,
                "github.com/robertkrimen/otto.builtinDate_setDate": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCDate": 1,
                "github.com/robertkrimen/otto.builtinDate_setMonth": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCMonth": 1,
                "github.com/robertkrimen/otto.builtinDate_setYear": 1,
                "github.com/robertkrimen/otto.builtinDate_setFullYear": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCFullYear": 1,
                "github.com/robertkrimen/otto.builtinError": 1,
                "github.com/robertkrimen/otto.builtinNewError": 1,
                "github.com/robertkrimen/otto.builtinError_toString": 1,
                "github.com/robertkrimen/otto.(*_runtime).newEvalError": 1,
                "github.com/robertkrimen/otto.builtinEvalError": 1,
                "github.com/robertkrimen/otto.builtinNewEvalError": 1,
                "github.com/robertkrimen/otto.(*_runtime).newTypeError": 1,
                "github.com/robertkrimen/otto.builtinTypeError": 1,
                "github.com/robertkrimen/otto.builtinNewTypeError": 1,
                "github.com/robertkrimen/otto.(*_runtime).newRangeError": 1,
                "github.com/robertkrimen/otto.builtinRangeError": 1,
                "github.com/robertkrimen/otto.builtinNewRangeError": 1,
                "github.com/robertkrimen/otto.(*_runtime).newURIError": 1,
                "github.com/robertkrimen/otto.(*_runtime).newReferenceError": 1,
                "github.com/robertkrimen/otto.builtinReferenceError": 1,
                "github.com/robertkrimen/otto.builtinNewReferenceError": 1,
                "github.com/robertkrimen/otto.(*_runtime).newSyntaxError": 1,
                "github.com/robertkrimen/otto.builtinSyntaxError": 1,
                "github.com/robertkrimen/otto.builtinNewSyntaxError": 1,
                "github.com/robertkrimen/otto.builtinURIError": 1,
                "github.com/robertkrimen/otto.builtinNewURIError": 1,
                "github.com/robertkrimen/otto.builtinFunction": 1,
                "github.com/robertkrimen/otto.builtinNewFunction": 1,
                "github.com/robertkrimen/otto.builtinNewFunctionNative": 1,
                "github.com/robertkrimen/otto.builtinFunction_toString": 1,
                "github.com/robertkrimen/otto.builtinFunction_apply": 1,
                "github.com/robertkrimen/otto.builtinFunction_call": 1,
                "github.com/robertkrimen/otto.builtinFunction_bind": 1,
                "github.com/robertkrimen/otto.FunctionCall.slice": 1,
                "github.com/robertkrimen/otto.builtinJSON_parse": 1,
                "github.com/robertkrimen/otto.(*_runtime).newObject": 1,
                "github.com/robertkrimen/otto.(*_runtime).newClassObject": 1,
                "github.com/robertkrimen/otto.newObject": 1,
                "github.com/robertkrimen/otto.(*_runtime).panicSyntaxError": 1,
                "github.com/robertkrimen/otto.builtinJSON_reviveWalk": 1,
                "github.com/robertkrimen/otto.(*_object).defineProperty": 1,
                "github.com/robertkrimen/otto.(*_object).defineOwnProperty": 1,
                "github.com/robertkrimen/otto.(*_object).enumerate": 1,
                "github.com/robertkrimen/otto.builtinJSON_parseWalk": 1,
                "github.com/robertkrimen/otto.builtinJSON_stringify": 1,
                "github.com/robertkrimen/otto.builtinJSON_stringifyWalk": 1,
                "github.com/robertkrimen/otto.Value.IsObject": 1,
                "github.com/robertkrimen/otto.Value.IsFunction": 1,
                "github.com/robertkrimen/otto.builtinMath_abs": 1,
                "github.com/robertkrimen/otto.builtinMath_acos": 1,
                "github.com/robertkrimen/otto.builtinMath_asin": 1,
                "github.com/robertkrimen/otto.builtinMath_atan": 1,
                "github.com/robertkrimen/otto.builtinMath_atan2": 1,
                "github.com/robertkrimen/otto.builtinMath_cos": 1,
                "github.com/robertkrimen/otto.builtinMath_ceil": 1,
                "github.com/robertkrimen/otto.builtinMath_exp": 1,
                "github.com/robertkrimen/otto.builtinMath_floor": 1,
                "github.com/robertkrimen/otto.builtinMath_log": 1,
                "github.com/robertkrimen/otto.builtinMath_max": 1,
                "github.com/robertkrimen/otto.negativeInfinityValue": 1,
                "github.com/robertkrimen/otto.builtinMath_min": 1,
                "github.com/robertkrimen/otto.positiveInfinityValue": 1,
                "github.com/robertkrimen/otto.builtinMath_pow": 1,
                "github.com/robertkrimen/otto.builtinMath_random": 1,
                "github.com/robertkrimen/otto.builtinMath_round": 1,
                "github.com/robertkrimen/otto.builtinMath_sin": 1,
                "github.com/robertkrimen/otto.builtinMath_sqrt": 1,
                "github.com/robertkrimen/otto.builtinMath_tan": 1,
                "github.com/robertkrimen/otto.builtinNumber": 1,
                "github.com/robertkrimen/otto.numberValueFromNumberArgumentList": 1,
                "github.com/robertkrimen/otto.builtinNewNumber": 1,
                "github.com/robertkrimen/otto.builtinNumber_toString": 1,
                "github.com/robertkrimen/otto.(*_runtime).panicRangeError": 1,
                "github.com/robertkrimen/otto.builtinNumber_valueOf": 1,
                "github.com/robertkrimen/otto.builtinNumber_toFixed": 1,
                "github.com/robertkrimen/otto.builtinNumber_toExponential": 1,
                "github.com/robertkrimen/otto.builtinNumber_toPrecision": 1,
                "github.com/robertkrimen/otto.builtinNumber_toLocaleString": 1,
                "github.com/robertkrimen/otto.builtinObject": 1,
                "github.com/robertkrimen/otto.builtinNewObject": 1,
                "github.com/robertkrimen/otto.builtinObject_valueOf": 1,
                "github.com/robertkrimen/otto.builtinObject_hasOwnProperty": 1,
                "github.com/robertkrimen/otto.(*_object).hasOwnProperty": 1,
                "github.com/robertkrimen/otto.builtinObject_isPrototypeOf": 1,
                "github.com/robertkrimen/otto.FunctionCall.toObject": 1,
                "github.com/robertkrimen/otto.builtinObject_propertyIsEnumerable": 1,
                "github.com/robertkrimen/otto.(*_object).getOwnProperty": 1,
                "github.com/robertkrimen/otto._property.enumerable": 1,
                "github.com/robertkrimen/otto.builtinObject_toString": 1,
                "github.com/robertkrimen/otto.Value.IsNull": 1,
                "github.com/robertkrimen/otto.builtinObject_toLocaleString": 1,
                "github.com/robertkrimen/otto.builtinObject_getPrototypeOf": 1,
                "github.com/robertkrimen/otto.builtinObject_getOwnPropertyDescriptor": 1,
                "github.com/robertkrimen/otto.builtinObject_defineProperty": 1,
                "github.com/robertkrimen/otto.builtinObject_defineProperties": 1,
                "github.com/robertkrimen/otto.builtinObject_create": 1,
                "github.com/robertkrimen/otto.builtinObject_isExtensible": 1,
                "github.com/robertkrimen/otto.builtinObject_preventExtensions": 1,
                "github.com/robertkrimen/otto.builtinObject_isSealed": 1,
                "github.com/robertkrimen/otto.builtinObject_seal": 1,
                "github.com/robertkrimen/otto.builtinObject_isFrozen": 1,
                "github.com/robertkrimen/otto.builtinObject_freeze": 1,
                "github.com/robertkrimen/otto.builtinObject_keys": 1,
                "github.com/robertkrimen/otto.builtinObject_getOwnPropertyNames": 1,
                "github.com/robertkrimen/otto.builtinRegExp": 1,
                "github.com/robertkrimen/otto.builtinNewRegExp": 1,
                "github.com/robertkrimen/otto.builtinRegExp_toString": 1,
                "github.com/robertkrimen/otto.builtinRegExp_exec": 1,
                "github.com/robertkrimen/otto.builtinRegExp_test": 1,
                "github.com/robertkrimen/otto.builtinRegExp_compile": 1,
                "github.com/robertkrimen/otto.stringValueFromStringArgumentList": 1,
                "github.com/robertkrimen/otto.builtinString": 1,
                "github.com/robertkrimen/otto.builtinNewString": 1,
                "github.com/robertkrimen/otto.builtinString_toString": 1,
                "github.com/robertkrimen/otto.builtinString_valueOf": 1,
                "github.com/robertkrimen/otto.builtinString_fromCharCode": 1,
                "github.com/robertkrimen/otto.toValue_string16": 1,
                "github.com/robertkrimen/otto.builtinString_charAt": 1,
                "github.com/robertkrimen/otto.(*_object).stringValue": 1,
                "github.com/robertkrimen/otto.builtinString_charCodeAt": 1,
                "github.com/robertkrimen/otto.toValue_uint16": 1,
                "github.com/robertkrimen/otto.builtinString_concat": 1,
                "github.com/robertkrimen/otto.builtinString_indexOf": 1,
                "github.com/robertkrimen/otto.builtinString_lastIndexOf": 1,
                "github.com/robertkrimen/otto.builtinString_match": 1,
                "github.com/robertkrimen/otto.(*_object).regExpValue": 1,
                "github.com/robertkrimen/otto.builtinString_findAndReplaceString": 1,
                "github.com/robertkrimen/otto.builtinString_replace": 1,
                "github.com/robertkrimen/otto.builtinString_search": 1,
                "github.com/robertkrimen/otto.builtinString_split": 1,
                "github.com/robertkrimen/otto.Value.isRegExp": 1,
                "strings.SplitN": 1,
                "github.com/robertkrimen/otto.builtinString_slice": 1,
                "github.com/robertkrimen/otto.builtinString_substring": 1,
                "github.com/robertkrimen/otto.builtinString_substr": 1,
                "github.com/robertkrimen/otto.builtinString_toLowerCase": 1,
                "github.com/robertkrimen/otto.builtinString_toUpperCase": 1,
                "github.com/robertkrimen/otto.builtinString_trim": 1,
                "github.com/robertkrimen/otto.builtinString_trimLeft": 1,
                "github.com/robertkrimen/otto.builtinString_trimRight": 1,
                "github.com/robertkrimen/otto.builtinString_localeCompare": 1,
                "github.com/robertkrimen/otto.builtinString_toLocaleLowerCase": 1,
                "github.com/robertkrimen/otto.builtinString_toLocaleUpperCase": 1,
                "github.com/robertkrimen/otto.(*_runtime).clone": 1,
                "github.com/robertkrimen/otto.(*_runtime).newObjectStash": 1,
                "github.com/robertkrimen/otto.(*_runtime).newBaseObject": 1,
                "github.com/robertkrimen/otto.(*_clone).object": 1,
                "github.com/robertkrimen/otto.(*_clone).value": 1,
                "github.com/robertkrimen/otto.(*_clone).valueArray": 1,
                "github.com/robertkrimen/otto.(*_clone).property": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_functionDeclaration": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_variableDeclaration": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).newDeclarationStash": 1,
                "github.com/robertkrimen/otto.(*_runtime)._newRegExp": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeArrayLiteral": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeBinaryExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeBinaryExpression_comparison": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeBracketExpression": 1,
                "github.com/robertkrimen/otto.newPropertyReference": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeConditionalExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeDotExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeNewExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeObjectLiteral": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeSequenceExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeUnaryExpression": 1,
                "github.com/robertkrimen/otto.toValue_int32": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement": 1,
                "github.com/robertkrimen/otto.newReturnResult": 1,
                "github.com/robertkrimen/otto.newException": 1,
                "@FCE\"^c]nRcQ": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeDoWhileStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForInStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeSwitchStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeWhileStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeWithStatement": 1,
                "github.com/robertkrimen/otto.(*_compiler).parseExpression": 1,
                "B0A3D'_+": 1,
                "github.com/robertkrimen/otto.(*_compiler).parseStatement": 1,
                "2H.G2t=": 1,
                "github.com/robertkrimen/otto.cmpl_parse": 1,
                "github.com/robertkrimen/otto.(*_compiler).parse": 1,
                "github.com/robertkrimen/otto.(*_compiler)._parse": 1,
                "github.com/robertkrimen/otto.(*_nodeArrayLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeAssignExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeBinaryExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeBracketExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeCallExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeConditionalExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeDotExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeFunctionLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeIdentifier)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeNewExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeObjectLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeRegExpLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeSequenceExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeThisExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeUnaryExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeVariableExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeBlockStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeBranchStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeCaseStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeCatchStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeDebuggerStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeDoWhileStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeEmptyStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeExpressionStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeForInStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeForStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeIfStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeLabelledStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeReturnStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeSwitchStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeThrowStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeTryStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeVariableStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeWhileStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeWithStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.formatForConsole": 1,
                "github.com/robertkrimen/otto.builtinConsole_log": 1,
                "github.com/robertkrimen/otto.builtinConsole_error": 1,
                "github.com/robertkrimen/otto.builtinConsole_dir": 1,
                "github.com/robertkrimen/otto.builtinConsole_time": 1,
                "github.com/robertkrimen/otto.builtinConsole_timeEnd": 1,
                "github.com/robertkrimen/otto.builtinConsole_trace": 1,
                "github.com/robertkrimen/otto.builtinConsole_assert": 1,
                "github.com/robertkrimen/otto._error.format": 1,
                "github.com/robertkrimen/otto._error.formatWithStack": 1,
                "github.com/robertkrimen/otto._frame.location": 1,
                "github.com/robertkrimen/otto.Error.Error": 1,
                "github.com/robertkrimen/otto.Error.String": 1,
                "github.com/robertkrimen/otto.newError": 1,
                "github.com/robertkrimen/otto._error.describe": 1,
                "github.com/robertkrimen/otto.catchPanic": 1,
                "github.com/robertkrimen/otto.(*_runtime).evaluateDivide": 1,
                "github.com/robertkrimen/otto.positiveZeroValue": 1,
                "github.com/robertkrimen/otto.negativeZeroValue": 1,
                "github.com/robertkrimen/otto.(*_runtime).calculateBinaryExpression": 1,
                "github.com/robertkrimen/otto.valueKindDispatchKey": 1,
                "github.com/robertkrimen/otto.makeEqualDispatch": 1,
                "github.com/robertkrimen/otto.calculateLessThan": 1,
                "github.com/robertkrimen/otto.(*_runtime).calculateComparison": 1,
                "github.com/robertkrimen/otto.newContext": 1,
                "github.com/robertkrimen/otto.(*_object).primitiveValue": 1,
                "github.com/robertkrimen/otto.(*_runtime).newArrayOf": 1,
                "github.com/robertkrimen/otto.(*_runtime).newString": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNumber": 1,
                "github.com/robertkrimen/otto.(*_runtime).newRegExp": 1,
                "github.com/robertkrimen/otto.(*_runtime).newError": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNativeFunction": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNodeFunction": 1,
                "github.com/robertkrimen/otto.(*_runtime).newBoundFunction": 1,
                "github.com/robertkrimen/otto._newContext": 1,
                "Y--0'/": 1,
                "YI-L'K": 1,
                "YW-Z'Y": 1,
                "github.com/robertkrimen/otto.newConsoleObject": 1,
                "Y+*.'-": 1,
                "YG*J'I": 1,
                "YU*X'W": 1,
                "Yc*f'e": 1,
                "Yq*t's": 1,
                "github.com/robertkrimen/otto.(*_object).DefaultValue": 1,
                "github.com/robertkrimen/otto.Value.IsPrimitive": 1,
                "github.com/robertkrimen/otto.(*_object).String": 1,
                "github.com/robertkrimen/otto.(*_object)._delete": 1,
                "github.com/robertkrimen/otto.objectEnumerate": 1,
                "github.com/robertkrimen/otto.init.0": 1,
                "github.com/robertkrimen/otto.objectGetOwnProperty": 1,
                "github.com/robertkrimen/otto.(*_object)._read": 1,
                "github.com/robertkrimen/otto.objectGetProperty": 1,
                "github.com/robertkrimen/otto.(*_object).getProperty": 1,
                "github.com/robertkrimen/otto.objectGet": 1,
                "github.com/robertkrimen/otto.objectCanPut": 1,
                "github.com/robertkrimen/otto._objectCanPut": 1,
                "github.com/robertkrimen/otto._property.writable": 1,
                "github.com/robertkrimen/otto.objectPut": 1,
                "github.com/robertkrimen/otto.(*_runtime).typeErrorResult": 1,
                "github.com/robertkrimen/otto.objectHasProperty": 1,
                "github.com/robertkrimen/otto.objectHasOwnProperty": 1,
                "github.com/robertkrimen/otto.objectDefineOwnProperty": 1,
                "github.com/robertkrimen/otto._property.isEmpty": 1,
                "github.com/robertkrimen/otto._property.isGenericDescriptor": 1,
                "github.com/robertkrimen/otto._property.isDataDescriptor": 1,
                "github.com/robertkrimen/otto._property.writeSet": 1,
                "github.com/robertkrimen/otto._property.configurable": 1,
                "github.com/robertkrimen/otto.(*_object)._write": 1,
                "github.com/robertkrimen/otto._property.isAccessorDescriptor": 1,
                "github.com/robertkrimen/otto._property.enumerateSet": 1,
                ")J\"E,<": 1,
                "github.com/robertkrimen/otto.objectDelete": 1,
                "github.com/robertkrimen/otto.objectClone": 1,
                "github.com/robertkrimen/otto.(*_clone).stash": 1,
                "github.com/robertkrimen/otto.New": 1,
                "github.com/robertkrimen/otto.(*_runtime).newConsole": 1,
                "github.com/robertkrimen/otto.Otto.Run": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_run": 1,
                "github.com/robertkrimen/otto.Value.safe": 1,
                "github.com/robertkrimen/otto.Otto.Eval": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_eval": 1,
                "github.com/robertkrimen/otto.Otto.Get": 1,
                "github.com/robertkrimen/otto.Otto.Set": 1,
                "github.com/robertkrimen/otto.Otto.ToValue": 1,
                "github.com/robertkrimen/otto.Otto.SetDebuggerHandler": 1,
                "github.com/robertkrimen/otto.Otto.SetRandomSource": 1,
                "github.com/robertkrimen/otto.Otto.SetStackDepthLimit": 1,
                "github.com/robertkrimen/otto.Otto.SetStackTraceLimit": 1,
                "github.com/robertkrimen/otto.Otto.MakeCustomError": 1,
                "github.com/robertkrimen/otto.Otto.MakeRangeError": 1,
                "github.com/robertkrimen/otto.Otto.MakeSyntaxError": 1,
                "github.com/robertkrimen/otto.Otto.MakeTypeError": 1,
                "github.com/robertkrimen/otto.Otto.Context": 1,
                "github.com/robertkrimen/otto.Otto.ContextLimit": 1,
                "github.com/robertkrimen/otto.Otto.ContextSkip": 1,
                "github.com/robertkrimen/otto.Otto.Call": 1,
                "github.com/robertkrimen/otto.Otto.Object": 1,
                "@C*D#E": 1,
                "github.com/robertkrimen/otto.(*Otto).Copy": 1,
                "github.com/robertkrimen/otto.Object.Call": 1,
                "github.com/robertkrimen/otto.Object.Value": 1,
                "github.com/robertkrimen/otto.Object.Get": 1,
                "github.com/robertkrimen/otto.Object.Set": 1,
                "github.com/robertkrimen/otto.Object.Keys": 1,
                "github.com/robertkrimen/otto.Object.KeysByParent": 1,
                "github.com/robertkrimen/otto.Object.Class": 1,
                "github.com/robertkrimen/otto.(*_runtime).toValueArray": 1,
                "github.com/robertkrimen/otto.stringToArrayIndex": 1,
                "github.com/robertkrimen/otto.valueToRangeIndex": 1,
                "github.com/robertkrimen/otto.rangeStartEnd": 1,
                "github.com/robertkrimen/otto.rangeStartLength": 1,
                "github.com/robertkrimen/otto.hereBeDragons": 1,
                "github.com/robertkrimen/otto._property.get": 1,
                "github.com/robertkrimen/otto.toPropertyDescriptor": 1,
                "github.com/robertkrimen/otto.(*_property).writeOn": 1,
                "github.com/robertkrimen/otto.(*_property).writeOff": 1,
                "github.com/robertkrimen/otto.(*_property).configureOn": 1,
                "github.com/robertkrimen/otto.(*_property).configureOff": 1,
                "github.com/robertkrimen/otto.(*_property).enumerateOn": 1,
                "github.com/robertkrimen/otto.(*_property).enumerateOff": 1,
                "github.com/robertkrimen/otto.(*_runtime).fromPropertyDescriptor": 1,
                "github.com/robertkrimen/otto.(*_runtime).enterScope": 1,
                "github.com/robertkrimen/otto.(*_runtime).leaveScope": 1,
                "github.com/robertkrimen/otto.(*_runtime).enterFunctionScope": 1,
                "github.com/robertkrimen/otto.(*_runtime).newFunctionStash": 1,
                "github.com/robertkrimen/otto.(*_runtime).putValue": 1,
                "github.com/robertkrimen/otto.(*_runtime).tryCatchEvaluate": 1,
                "github.com/robertkrimen/otto.(*_runtime).toObject": 1,
                "github.com/robertkrimen/otto.(*_runtime).objectCoerce": 1,
                "github.com/robertkrimen/otto.checkObjectCoercible": 1,
                "github.com/robertkrimen/otto.testObjectCoercible": 1,
                "github.com/robertkrimen/otto.(*_runtime).safeToValue": 1,
                "github.com/robertkrimen/otto.(*_runtime).convertNumeric": 1,
                "(#'.2#": 1,
                "#%ET#=#": 1,
                "github.com/robertkrimen/otto.(*_runtime).convertCallParameter": 1,
                "github.com/robertkrimen/otto.Value.Class": 1,
                "*Q$&I.": 1,
                "*{$&IX": 1,
                "(-'\"*@)": 1,
                "gG0#/.": 1,
                "github.com/robertkrimen/otto.(*_runtime).toValue": 1,
                "github.com/robertkrimen/otto.(*_runtime).newGoArray": 1,
                "github.com/robertkrimen/otto.(*_runtime).newGoSlice": 1,
                "github.com/robertkrimen/otto.(*_runtime).newGoSliceObject": 1,
                "github.com/robertkrimen/otto._newGoSliceObject": 1,
                "<nE4FD9": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_parse": 1,
                "github.com/robertkrimen/otto.(*_runtime).parseSource": 1,
                "github.com/robertkrimen/otto.(*_runtime).parse": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_runOrEval": 1,
                "github.com/robertkrimen/otto.(*_runtime).parseThrow": 1,
                "github.com/robertkrimen/otto.(*_runtime).panicReferenceError": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_parseOrThrow": 1,
                "github.com/robertkrimen/otto.(*Otto).Compile": 1,
                "github.com/robertkrimen/otto.(*Otto).CompileWithSourceMap": 1,
                "github.com/robertkrimen/otto.(*Script).String": 1,
                "github.com/robertkrimen/otto.(*_objectStash).runtime": 1,
                "github.com/robertkrimen/otto.(*_objectStash).clone": 1,
                "github.com/robertkrimen/otto.(*_clone).objectStash": 1,
                "github.com/robertkrimen/otto.(*_objectStash).hasBinding": 1,
                "github.com/robertkrimen/otto.(*_objectStash).createBinding": 1,
                "github.com/robertkrimen/otto.(*_objectStash).setBinding": 1,
                "github.com/robertkrimen/otto.(*_objectStash).setValue": 1,
                "github.com/robertkrimen/otto.(*_objectStash).getBinding": 1,
                "github.com/robertkrimen/otto.(*_objectStash).deleteBinding": 1,
                "github.com/robertkrimen/otto.(*_objectStash).outer": 1,
                "github.com/robertkrimen/otto.(*_objectStash).newReference": 1,
                "github.com/robertkrimen/otto.(*_dclStash).clone": 1,
                "github.com/robertkrimen/otto.(*_clone).dclStash": 1,
                "github.com/robertkrimen/otto.(*_clone).dclProperty": 1,
                "github.com/robertkrimen/otto.(*_dclStash).hasBinding": 1,
                "github.com/robertkrimen/otto.(*_dclStash).runtime": 1,
                "github.com/robertkrimen/otto.(*_dclStash).createBinding": 1,
                "github.com/robertkrimen/otto.(*_dclStash).setBinding": 1,
                "github.com/robertkrimen/otto.(*_dclStash).setValue": 1,
                "github.com/robertkrimen/otto.(*_dclStash).getBinding": 1,
                "github.com/robertkrimen/otto.(*_dclStash).deleteBinding": 1,
                "github.com/robertkrimen/otto.(*_dclStash).outer": 1,
                "github.com/robertkrimen/otto.(*_dclStash).newReference": 1,
                "github.com/robertkrimen/otto.(*_fnStash).clone": 1,
                "github.com/robertkrimen/otto.(*_clone).fnStash": 1,
                "github.com/robertkrimen/otto.getStashProperties": 1,
                "github.com/robertkrimen/otto.(*_runtime).newArgumentsObject": 1,
                "github.com/robertkrimen/otto._argumentsObject.clone": 1,
                "github.com/robertkrimen/otto._argumentsObject.get": 1,
                "github.com/robertkrimen/otto._argumentsObject.put": 1,
                "github.com/robertkrimen/otto.argumentsGet": 1,
                "github.com/robertkrimen/otto.argumentsGetOwnProperty": 1,
                "github.com/robertkrimen/otto.argumentsDefineOwnProperty": 1,
                "github.com/robertkrimen/otto.argumentsDelete": 1,
                "github.com/robertkrimen/otto._argumentsObject.delete": 1,
                "github.com/robertkrimen/otto.(*_runtime).newArrayObject": 1,
                "github.com/robertkrimen/otto.objectLength": 1,
                "github.com/robertkrimen/otto.arrayUint32": 1,
                "github.com/robertkrimen/otto.isUint32": 1,
                "github.com/robertkrimen/otto.arrayDefineOwnProperty": 1,
                "github.com/robertkrimen/otto.(*_runtime).newBooleanObject": 1,
                "github.com/robertkrimen/otto.(*_runtime).newPrimitiveObject": 1,
                "github.com/robertkrimen/otto.ecmaTime": 1,
                "github.com/robertkrimen/otto.(*_ecmaTime).goTime": 1,
                "github.com/robertkrimen/otto.dateToGoMonth": 1,
                "github.com/robertkrimen/otto.(*_dateObject).SetNaN": 1,
                "github.com/robertkrimen/otto.(*_dateObject).SetTime": 1,
                "github.com/robertkrimen/otto.timeToEpoch": 1,
                "github.com/robertkrimen/otto.(*_dateObject).Set": 1,
                "github.com/robertkrimen/otto.epochToInteger": 1,
                "github.com/robertkrimen/otto.epochToTime": 1,
                "github.com/robertkrimen/otto.(*_runtime).newDateObject": 1,
                "github.com/robertkrimen/otto.dateObjectOf": 1,
                "github.com/robertkrimen/otto.(*_object).dateValue": 1,
                "github.com/robertkrimen/otto.newDateTime": 1,
                "github.com/robertkrimen/otto.dateParse": 1,
                "github.com/robertkrimen/otto.(*_runtime).newErrorObject": 1,
                "github.com/robertkrimen/otto.defaultConstruct": 1,
                "github.com/robertkrimen/otto.(*_runtime)._newNativeFunctionObject": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNativeFunctionObject": 1,
                "github.com/robertkrimen/otto.(*_runtime).newBoundFunctionObject": 1,
                "github.com/robertkrimen/otto._bindFunctionObject.construct": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNodeFunctionObject": 1,
                "github.com/robertkrimen/otto.(*_object).isCall": 1,
                "github.com/robertkrimen/otto.(*_object).call": 1,
                "github.com/robertkrimen/otto.(*_object).construct": 1,
                "github.com/robertkrimen/otto.(*_object).hasInstance": 1,
                "github.com/robertkrimen/otto.(*FunctionCall).thisObject": 1,
                "github.com/robertkrimen/otto.(*FunctionCall).thisClassObject": 1,
                "github.com/robertkrimen/otto.FunctionCall.CallerLocation": 1,
                "github.com/robertkrimen/otto.(*_runtime).newGoArrayObject": 1,
                "github.com/robertkrimen/otto._newGoArrayObject": 1,
                "github.com/robertkrimen/otto._goArrayObject.getValue": 1,
                "github.com/robertkrimen/otto._goArrayObject.setValue": 1,
                "github.com/robertkrimen/otto.goArrayGetOwnProperty": 1,
                "github.com/robertkrimen/otto.goArrayEnumerate": 1,
                "github.com/robertkrimen/otto.goArrayDefineOwnProperty": 1,
                "github.com/robertkrimen/otto.goArrayDelete": 1,
                "C8D$I.J&": 1,
                "github.com/robertkrimen/otto.(*_runtime).newGoMapObject": 1,
                "github.com/robertkrimen/otto._newGoMapObject": 1,
                "github.com/robertkrimen/otto.goMapGetOwnProperty": 1,
                "github.com/robertkrimen/otto._goMapObject.toKey": 1,
                "github.com/robertkrimen/otto.goMapEnumerate": 1,
                "github.com/robertkrimen/otto.goMapDefineOwnProperty": 1,
                "github.com/robertkrimen/otto._goMapObject.toValue": 1,
                "github.com/robertkrimen/otto.goMapDelete": 1,
                "github.com/robertkrimen/otto._goSliceObject.getValue": 1,
                "github.com/robertkrimen/otto._goSliceObject.setValue": 1,
                "github.com/robertkrimen/otto.goSliceGetOwnProperty": 1,
                "github.com/robertkrimen/otto.goSliceEnumerate": 1,
                "github.com/robertkrimen/otto.goSliceDefineOwnProperty": 1,
                "github.com/robertkrimen/otto.goSliceDelete": 1,
                "98:$?.@&": 1,
                "github.com/robertkrimen/otto.(*_runtime).newGoStructObject": 1,
                "github.com/robertkrimen/otto._newGoStructObject": 1,
                "github.com/robertkrimen/otto._goStructObject.getValue": 1,
                "github.com/robertkrimen/otto.validGoStructName": 1,
                "github.com/robertkrimen/otto._goStructObject.field": 1,
                "github.com/robertkrimen/otto._goStructObject.setValue": 1,
                "github.com/robertkrimen/otto.goStructGetOwnProperty": 1,
                "github.com/robertkrimen/otto.goStructEnumerate": 1,
                "github.com/robertkrimen/otto.goStructCanPut": 1,
                "github.com/robertkrimen/otto.goStructPut": 1,
                "github.com/robertkrimen/otto.goStructMarshalJSON": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNumberObject": 1,
                "github.com/robertkrimen/otto.(*_propertyReference).invalid": 1,
                "github.com/robertkrimen/otto.(*_propertyReference).getValue": 1,
                "github.com/robertkrimen/otto.(*_propertyReference).putValue": 1,
                "github.com/robertkrimen/otto.(*_propertyReference).delete": 1,
                "github.com/robertkrimen/otto.(*_stashReference).invalid": 1,
                "github.com/robertkrimen/otto.(*_stashReference).getValue": 1,
                "github.com/robertkrimen/otto.(*_stashReference).putValue": 1,
                "github.com/robertkrimen/otto.(*_stashReference).delete": 1,
                "github.com/robertkrimen/otto.getIdentifierReference": 1,
                "github.com/robertkrimen/otto.(*_runtime).newRegExpObject": 1,
                "github.com/robertkrimen/otto.execRegExp": 1,
                "github.com/robertkrimen/otto.execResultToArray": 1,
                "github.com/robertkrimen/otto._stringASCII.Length": 1,
                "github.com/robertkrimen/otto._stringASCII.At": 1,
                "github.com/robertkrimen/otto._stringASCII.String": 1,
                "github.com/robertkrimen/otto._stringWide.Length": 1,
                "github.com/robertkrimen/otto._stringWide.At": 1,
                "github.com/robertkrimen/otto._stringWide.String": 1,
                "github.com/robertkrimen/otto._newStringObject": 1,
                "github.com/robertkrimen/otto.stringAt": 1,
                "github.com/robertkrimen/otto.(*_runtime).newStringObject": 1,
                "github.com/robertkrimen/otto.stringEnumerate": 1,
                "github.com/robertkrimen/otto.stringGetOwnProperty": 1,
                "github.com/robertkrimen/otto.Value.isCallable": 1,
                "github.com/robertkrimen/otto.Value.Call": 1,
                "github.com/robertkrimen/otto.Value.call": 1,
                "github.com/robertkrimen/otto.Value.constructSafe": 1,
                "github.com/robertkrimen/otto.Value.construct": 1,
                "github.com/robertkrimen/otto.Value.IsNaN": 1,
                "github.com/robertkrimen/otto.toValue_reflectValuePanic": 1,
                "github.com/robertkrimen/otto.toValue": 1,
                "a|UbR5I:": 1,
                "(A'&F1E": 1,
                "github.com/robertkrimen/otto.Value.String": 1,
                "github.com/robertkrimen/otto.Value.ToBoolean": 1,
                "github.com/robertkrimen/otto.Value.numberValue": 1,
                "github.com/robertkrimen/otto.Value.ToFloat": 1,
                "github.com/robertkrimen/otto.Value.ToInteger": 1,
                "github.com/robertkrimen/otto.Value.ToString": 1,
                "github.com/robertkrimen/otto.Value._object": 1,
                "github.com/robertkrimen/otto.Value.Object": 1,
                "github.com/robertkrimen/otto._newObject": 1,
                "github.com/robertkrimen/otto.Value.reference": 1,
                "github.com/robertkrimen/otto.Value.resolve": 1,
                "github.com/robertkrimen/otto.sameValue": 1,
                "github.com/robertkrimen/otto.strictEqualityComparison": 1,
                "github.com/robertkrimen/otto.Value.Export": 1,
                "github.com/robertkrimen/otto.Value.export": 1,
                ".* )8* ):": 1,
                ".* )5* )": 1,
                "[*'+Q,6)": 1,
                "github.com/robertkrimen/otto.Value.evaluateBreakContinue": 1,
                "github.com/robertkrimen/otto.Value.evaluateBreak": 1,
                "github.com/robertkrimen/otto.Value.exportNative": 1,
                "github.com/robertkrimen/otto.Value.toReflectValue": 1,
                "5#6&*+": 1,
                "5+3.'3": 1,
                "5C)F7K": 1,
                "5K)N1S": 1,
                "5S)V7[": 1,
                "5[)^1c": 1,
                "5c6f*k": 1,
                "github.com/robertkrimen/otto.stringToReflectValue": 1,
                "strconv.ParseBool": 1,
                "github.com/robertkrimen/otto.Value.bool": 1,
                "github.com/robertkrimen/otto.parseNumber": 1,
                "github.com/robertkrimen/otto.Value.float64": 1,
                "github.com/robertkrimen/otto.toIntegerFloat": 1,
                "github.com/robertkrimen/otto.Value.number": 1,
                "github.com/robertkrimen/otto.toInt32": 1,
                "github.com/robertkrimen/otto.toUint32": 1,
                "github.com/robertkrimen/otto.toUint16": 1,
                "github.com/robertkrimen/otto.toNumberPrimitive": 1,
                "github.com/robertkrimen/otto.toPrimitive": 1,
                "github.com/robertkrimen/otto._toPrimitive": 1,
                "github.com/robertkrimen/otto.floatToString": 1,
                "github.com/robertkrimen/otto.numberToStringRadix": 1,
                "github.com/robertkrimen/otto.Value.string": 1,
                "strconv.FormatBool": 1,
                "github.com/robertkrimen/otto.glob..func1": 1,
                "github.com/robertkrimen/otto.glob..func2": 1,
                "github.com/robertkrimen/otto._builtinGlobal_encodeURI.func1": 1,
                "github.com/robertkrimen/otto.builtinJSON_reviveWalk.func1": 1,
                "github.com/robertkrimen/otto.builtinJSON_stringifyWalk.func1": 1,
                "github.com/robertkrimen/otto.builtinJSON_stringifyWalk.func2": 1,
                "github.com/robertkrimen/otto.builtinObject_defineProperties.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_create.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_isSealed.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_seal.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_isFrozen.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_freeze.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_keys.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_getOwnPropertyNames.func1": 1,
                "github.com/robertkrimen/otto.builtinString_findAndReplaceString.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForInStatement.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func2": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func3": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeWithStatement.func1": 1,
                "github.com/robertkrimen/otto.catchPanic.func1": 1,
                "github.com/robertkrimen/otto.(*_exception).eject": 1,
                "github.com/robertkrimen/otto.makeEqualDispatch.func1": 1,
                "github.com/robertkrimen/otto.makeEqualDispatch.func2": 1,
                "github.com/robertkrimen/otto.makeEqualDispatch.func3": 1,
                "github.com/robertkrimen/otto.makeEqualDispatch.func4": 1,
                "github.com/robertkrimen/otto.New.func1": 1,
                "github.com/robertkrimen/otto.Otto.Get.func1": 1,
                "github.com/robertkrimen/otto.Otto.getValue": 1,
                "github.com/robertkrimen/otto.Otto.Set.func1": 1,
                "github.com/robertkrimen/otto.Otto.setValue": 1,
                "github.com/robertkrimen/otto.Otto.Call.func1": 1,
                "github.com/robertkrimen/otto.Otto.Call.func2": 1,
                "github.com/robertkrimen/otto.Object.Get.func1": 1,
                "github.com/robertkrimen/otto.Object.Set.func1": 1,
                "github.com/robertkrimen/otto.Object.Keys.func1": 1,
                "github.com/robertkrimen/otto.Object.KeysByParent.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).tryCatchEvaluate.func1": 1,
                "github.com/robertkrimen/otto._error.messageValue": 1,
                "github.com/robertkrimen/otto.(*_runtime).safeToValue.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).convertCallParameter.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).convertCallParameter.func2": 1,
                "github.com/robertkrimen/otto.(*_runtime).convertCallParameter.func3": 1,
                "github.com/robertkrimen/otto.(*_runtime).convertCallParameter.func4": 1,
                "github.com/robertkrimen/otto.(*_runtime).toValue.func1.1": 1,
                "github.com/robertkrimen/otto.(*_runtime).toValue.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1": 1,
                "github.com/robertkrimen/otto.newDateTime.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).newErrorObject.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNativeFunctionObject.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNodeFunctionObject.func1": 1,
                "github.com/robertkrimen/otto.(*_object).call.func1": 1,
                "github.com/robertkrimen/otto.(*_object).call.func2": 1,
                "github.com/robertkrimen/otto.Value.Call.func1": 1,
                "github.com/robertkrimen/otto.Value.constructSafe.func1": 1,
                "github.com/robertkrimen/otto.Value.String.func1": 1,
                "github.com/robertkrimen/otto.Value.ToBoolean.func1": 1,
                "github.com/robertkrimen/otto.Value.ToFloat.func1": 1,
                "github.com/robertkrimen/otto.Value.ToInteger.func1": 1,
                "github.com/robertkrimen/otto.Value.ToString.func1": 1,
                "github.com/robertkrimen/otto.Value.export.func1": 1,
                "github.com/robertkrimen/otto.init.ializers": 1,
                "github.com/robertkrimen/otto.init": 1,
                "github.com/robertkrimen/otto.(*_fnStash).createBinding": 1,
                "github.com/robertkrimen/otto.(*_fnStash).deleteBinding": 1,
                "github.com/robertkrimen/otto.(*_fnStash).getBinding": 1,
                "github.com/robertkrimen/otto.(*_fnStash).hasBinding": 1,
                "github.com/robertkrimen/otto.(*_fnStash).newReference": 1,
                "github.com/robertkrimen/otto.(*_fnStash).outer": 1,
                "github.com/robertkrimen/otto.(*_fnStash).runtime": 1,
                "github.com/robertkrimen/otto.(*_fnStash).setBinding": 1,
                "github.com/robertkrimen/otto.(*_fnStash).setValue": 1,
                "github.com/robertkrimen/otto.(*Error).Error": 1,
                "github.com/robertkrimen/otto.(*Error).String": 1,
                "github.com/robertkrimen/otto.(*_stringWide).At": 1,
                "github.com/robertkrimen/otto.(*_stringWide).Length": 1,
                "github.com/robertkrimen/otto.(*_stringWide).String": 1,
                "type..hash.github.com/robertkrimen/otto._frame": 1,
                "type..eq.github.com/robertkrimen/otto._frame": 1,
                "type..hash.github.com/robertkrimen/otto.Value": 1,
                "type..eq.github.com/robertkrimen/otto.Value": 1,
                "github.com/robertkrimen/otto.(*Value).Call": 1,
                "github.com/robertkrimen/otto.(*Value).Class": 1,
                "github.com/robertkrimen/otto.(*Value).Export": 1,
                "github.com/robertkrimen/otto.(*Value).IsBoolean": 1,
                "github.com/robertkrimen/otto.(*Value).IsDefined": 1,
                "github.com/robertkrimen/otto.(*Value).IsFunction": 1,
                "github.com/robertkrimen/otto.(*Value).IsNaN": 1,
                "github.com/robertkrimen/otto.(*Value).IsNull": 1,
                "github.com/robertkrimen/otto.(*Value).IsNumber": 1,
                "github.com/robertkrimen/otto.(*Value).IsObject": 1,
                "github.com/robertkrimen/otto.(*Value).IsPrimitive": 1,
                "github.com/robertkrimen/otto.(*Value).IsString": 1,
                "github.com/robertkrimen/otto.(*Value).IsUndefined": 1,
                "github.com/robertkrimen/otto.(*Value).Object": 1,
                "github.com/robertkrimen/otto.(*Value).String": 1,
                "github.com/robertkrimen/otto.(*Value).ToBoolean": 1,
                "github.com/robertkrimen/otto.(*Value).ToFloat": 1,
                "github.com/robertkrimen/otto.(*Value).ToInteger": 1,
                "github.com/robertkrimen/otto.(*Value).ToString": 1,
                "github.com/robertkrimen/otto.(*Value).string": 1,
                "type..hash.github.com/robertkrimen/otto._dclProperty": 1,
                "type..eq.github.com/robertkrimen/otto._dclProperty": 1,
                "type..hash.github.com/robertkrimen/otto._property": 1,
                "type..eq.github.com/robertkrimen/otto._property": 1,
                "type..hash.github.com/robertkrimen/otto._objectStash": 1,
                "type..eq.github.com/robertkrimen/otto._objectStash": 1,
                "type..hash.github.com/robertkrimen/otto._scope": 1,
                "type..eq.github.com/robertkrimen/otto._scope": 1,
                "github.com/robertkrimen/otto.(*Otto).Call": 1,
                "github.com/robertkrimen/otto.(*Otto).Context": 1,
                "github.com/robertkrimen/otto.(*Otto).ContextLimit": 1,
                "github.com/robertkrimen/otto.(*Otto).ContextSkip": 1,
                "github.com/robertkrimen/otto.(*Otto).Eval": 1,
                "github.com/robertkrimen/otto.(*Otto).Get": 1,
                "github.com/robertkrimen/otto.(*Otto).MakeCustomError": 1,
                "github.com/robertkrimen/otto.(*Otto).MakeRangeError": 1,
                "github.com/robertkrimen/otto.(*Otto).MakeSyntaxError": 1,
                "github.com/robertkrimen/otto.(*Otto).MakeTypeError": 1,
                "github.com/robertkrimen/otto.(*Otto).Object": 1,
                "github.com/robertkrimen/otto.(*Otto).Run": 1,
                "github.com/robertkrimen/otto.(*Otto).Set": 1,
                "github.com/robertkrimen/otto.(*Otto).SetDebuggerHandler": 1,
                "github.com/robertkrimen/otto.(*Otto).SetRandomSource": 1,
                "github.com/robertkrimen/otto.(*Otto).SetStackDepthLimit": 1,
                "github.com/robertkrimen/otto.(*Otto).SetStackTraceLimit": 1,
                "github.com/robertkrimen/otto.(*Otto).ToValue": 1,
                "type..hash.github.com/robertkrimen/otto._nodeDeclaration": 1,
                "type..eq.github.com/robertkrimen/otto._nodeDeclaration": 1,
                "type..hash.github.com/robertkrimen/otto.Script": 1,
                "type..eq.github.com/robertkrimen/otto.Script": 1,
                "github.com/robertkrimen/otto.(*FunctionCall).Argument": 1,
                "github.com/robertkrimen/otto.(*FunctionCall).CallerLocation": 1,
                "type..hash.github.com/robertkrimen/otto._nodeAssignExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeAssignExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeBinaryExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeBinaryExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeBracketExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeBracketExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeConditionalExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeConditionalExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeDotExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeDotExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeIfStatement": 1,
                "type..eq.github.com/robertkrimen/otto._nodeIfStatement": 1,
                "type..hash.github.com/robertkrimen/otto._nodeProperty": 1,
                "type..eq.github.com/robertkrimen/otto._nodeProperty": 1,
                "type..hash.github.com/robertkrimen/otto._nodeCatchStatement": 1,
                "type..eq.github.com/robertkrimen/otto._nodeCatchStatement": 1,
                "type..hash.github.com/robertkrimen/otto._nodeTryStatement": 1,
                "type..eq.github.com/robertkrimen/otto._nodeTryStatement": 1,
                "type..hash.github.com/robertkrimen/otto._nodeUnaryExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeUnaryExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeVariableExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeVariableExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeWithStatement": 1,
                "type..eq.github.com/robertkrimen/otto._nodeWithStatement": 1,
                "type..hash.github.com/robertkrimen/otto._dateObject": 1,
                "type..eq.github.com/robertkrimen/otto._dateObject": 1,
                "type..hash.github.com/robertkrimen/otto._regExpObject": 1,
                "type..eq.github.com/robertkrimen/otto._regExpObject": 1,
                "type..hash.github.com/robertkrimen/otto.Object": 1,
                "type..eq.github.com/robertkrimen/otto.Object": 1,
                "github.com/robertkrimen/otto.(*Object).Call": 1,
                "github.com/robertkrimen/otto.(*Object).Class": 1,
                "github.com/robertkrimen/otto.(*Object).Get": 1,
                "github.com/robertkrimen/otto.(*Object).Keys": 1,
                "github.com/robertkrimen/otto.(*Object).KeysByParent": 1,
                "github.com/robertkrimen/otto.(*Object).Set": 1,
                "github.com/robertkrimen/otto.(*Object).Value": 1,
                "type..hash.github.com/robertkrimen/otto._number": 1,
                "type..eq.github.com/robertkrimen/otto._number": 1,
                "type..hash.[1]github.com/robertkrimen/otto.Value": 1,
                "type..eq.[1]github.com/robertkrimen/otto.Value": 1,
                "type..hash.github.com/robertkrimen/otto._result": 1,
                "type..eq.github.com/robertkrimen/otto._result": 1,
                "type..hash.[6]interface {}": 1,
                "type..eq.[6]interface {}": 1,
                "type..hash.github.com/robertkrimen/otto._nodeFunctionObject": 1,
                "type..eq.github.com/robertkrimen/otto._nodeFunctionObject": 1,
                "type..hash.github.com/robertkrimen/otto._goArrayObject": 1,
                "type..eq.github.com/robertkrimen/otto._goArrayObject": 1,
                "type..hash.github.com/robertkrimen/otto._nodeBranchStatement": 1,
                "type..eq.github.com/robertkrimen/otto._nodeBranchStatement": 1,
                "type..hash.github.com/robertkrimen/otto._nodeIdentifier": 1,
                "type..eq.github.com/robertkrimen/otto._nodeIdentifier": 1,
                "type..hash.github.com/robertkrimen/otto._nodeLabelledStatement": 1,
                "type..eq.github.com/robertkrimen/otto._nodeLabelledStatement": 1,
                "type..hash.github.com/robertkrimen/otto._nodeLiteral": 1,
                "type..eq.github.com/robertkrimen/otto._nodeLiteral": 1,
                "type..hash.github.com/robertkrimen/otto._nodeRegExpLiteral": 1,
                "type..eq.github.com/robertkrimen/otto._nodeRegExpLiteral": 1,
                "type..hash.github.com/robertkrimen/otto._propertyReference": 1,
                "type..eq.github.com/robertkrimen/otto._propertyReference": 1,
                "type..hash.github.com/robertkrimen/otto._stashReference": 1,
                "type..eq.github.com/robertkrimen/otto._stashReference": 1,
                "github.com/robertkrimen/otto.(*_stringASCII).At": 1,
                "github.com/robertkrimen/otto.(*_stringASCII).Length": 1,
                "github.com/robertkrimen/otto.(*_stringASCII).String": 1,
                "type..hash.[10]string": 1,
                "type..eq.[10]string": 1,
                "type..hash.[15]string": 1,
                "type..eq.[15]string": 1,
                "type..hash.[22]string": 1,
                "type..eq.[22]string": 1,
                "type..hash.[23]string": 1,
                "type..eq.[23]string": 1,
                "type..hash.[26]string": 1,
                "type..eq.[26]string": 1,
                "type..hash.[31]string": 1,
                "type..eq.[31]string": 1,
                "type..hash.[46]string": 1,
                "type..eq.[46]string": 1,
                "type..hash.[2]github.com/robertkrimen/otto.Value": 1,
                "type..eq.[2]github.com/robertkrimen/otto.Value": 1,
                "type..hash.struct { github.com/robertkrimen/otto.name string": 1,
                "github.com/robertkrimen/otto.exists bool": 2,
                "github.com/robertkrimen/otto.defined bool": 2,
                "github.com/robertkrimen/otto.value string }": 2,
                "type..eq.struct { github.com/robertkrimen/otto.name string": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Print": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Printf": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Println": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Debug": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Debugf": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Debugln": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Info": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Infof": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Infoln": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Warn": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Warnf": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Warnln": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Error": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Errorf": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Errorln": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Fatal": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Fatalf": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Fatalln": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).retrieveAssetAsString": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).retrieveAssetAsBytes": 1,
                "github.com/gen0cide/gscript/engine.New": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).InitVM": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).SetLogger": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).DeclareNamespace": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).ImportNativePackage": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).ImportStandardLibrary": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).SetConst": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).SetTimeout": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).AddImport": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).SetName": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).SetID": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).LoadScript": 1,
                "github.com/robertkrimen/otto/parser.ParseFile": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).Exec": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).setGlobalRef": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).EnableAssets": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).Raise": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).SetEntryPoint": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).LoadScriptWithTimeout": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).CallFunctionWithTimeout": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).recoveryHandler": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).timeoutMonitor": 1,
                "github.com/gen0cide/gscript/engine.normalizeConsoleArgs": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory": 1,
                "github.com/gen0cide/gscript/engine.HijackConsoleLogging": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).createType": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).timeoutMonitor.func1": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory.func1": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory.func2": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory.func3": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory.func4": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory.func5": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory.func6": 1,
                "github.com/gen0cide/gscript/engine.init.ializers": 1,
                "github.com/gen0cide/gscript/engine.init": 1,
                "type..hash.github.com/gen0cide/gscript/engine.NativeField": 1,
                "type..eq.github.com/gen0cide/gscript/engine.NativeField": 1,
                "type..hash.github.com/gen0cide/gscript/engine.NativeConst": 1,
                "type..eq.github.com/gen0cide/gscript/engine.NativeConst": 1,
                "type..hash.github.com/gen0cide/gscript/engine.NativeVar": 1,
                "type..eq.github.com/gen0cide/gscript/engine.NativeVar": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).createType-fm": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).retrieveAssetAsString-fm": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).retrieveAssetAsBytes-fm": 1,
                "go-memorymodule.MemoryRunBinary": 1,
                "go-memorymodule.memfdCreate": 1,
                "go-memorymodule.OpenMemoryFD": 1,
                "go-memorymodule.ExecMemoryFD": 1,
                "os.Environ": 1,
                "go-memorymodule.memoryRunBinary": 1,
                "go-memorymodule.init": 1,
                "os/signal.Notify": 1,
                "os/signal.process": 1,
                "os/signal.(*handler).want": 1,
                "os/signal.loop": 1,
                "os/signal.init.0": 1,
                "os/signal.signum": 1,
                "os/signal.Notify.func1": 1,
                "os/signal.(*handler).set": 1,
                "os/signal.enableSignal": 1,
                "os/signal.init": 1,
                "os/signal.m map[chan<- os.Signal]*os/signal.handler": 2,
                "os/signal.ref [65]int64": 2,
                "os/signal.stopping []os/signal.stopping }).Lock": 1,
                "os/signal.stopping []os/signal.stopping }).Unlock": 1,
                "main.NewLNXYSCEEWLYHMX": 1,
                "main.(*LNXYSCEEWLYHMX).DZUEOXSTYHID": 1,
                "main.(*LNXYSCEEWLYHMX).BEHHORBDYJII": 1,
                "main.(*LNXYSCEEWLYHMX).QEWVMTOFJRYG": 1,
                "main.(*LNXYSCEEWLYHMX).XLALOPHPHAUK": 1,
                "main.(*LNXYSCEEWLYHMX).ZIJTNXLCAZNK": 1,
                "main.(*LNXYSCEEWLYHMX).APCJEAHZBJDT": 1,
                "main.LNXYSCEEWLYHMXD": 1,
                "bytes.NewReader": 1,
                "encoding/base64.NewDecoder": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXjcqxibpgjzovuwdu": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXKPVMBZURTDTYA": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXXMIYXHYDTESYQ": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXLECUSRECPVOEP": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXRYBWRXABALMMQ": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXGSBTLTKYMHLEL": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXCQKLPZMADUPZX": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXHBZSIAIEQOVHI": 1,
                "main.main": 1,
                "main.g": 1,
                "main.(*LNXYSCEEWLYHMX).DZUEOXSTYHID.func1": 1,
                "main.(*LNXYSCEEWLYHMX).DZUEOXSTYHID.func2": 1,
                "main.(*LNXYSCEEWLYHMX).DZUEOXSTYHID.func3": 1,
                "main.main.func1": 1,
                "main.main.func2": 1,
                "main.main.func3.1": 1,
                "main.main.func3": 1,
                "main.init.ializers": 1,
                "main.init": 1,
                "type..hash.[6]os.Signal": 1,
                "type..eq.[6]os.Signal": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXjcqxibpgjzovuwdu-fm": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXKPVMBZURTDTYA-fm": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXXMIYXHYDTESYQ-fm": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXLECUSRECPVOEP-fm": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXRYBWRXABALMMQ-fm": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXGSBTLTKYMHLEL-fm": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXCQKLPZMADUPZX-fm": 1,
                "main.(*LNXYSCEEWLYHMX).LNXYSCEEWLYHMXHBZSIAIEQOVHI-fm": 1,
                "/tmp/dqn6X4orOBNY2PLz/main.go": 1,
                "/tmp/dqn6X4orOBNY2PLz/LNXYSCEEWLYHMX.go": 1,
                "/opt/go/src/os/signal/signal_unix.go": 1,
                "/opt/go/src/os/signal/signal.go": 1,
                "/opt/go/src/os/env.go": 1,
                "/root/go/src/go-memorymodule/memorymodule_linux_amd64.go": 1,
                "/root/go/src/go-memorymodule/memorymodule.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/engine/native_package.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/engine/logger.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/engine/executor.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/engine/errors.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/engine/engine.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/engine/assets.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/logger/null/null_logger.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/dbg.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/value_string.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/value_primitive.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/value_number.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/value_boolean.go": 1,
                "/opt/go/src/strconv/atob.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_number.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_go_struct.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_go_map.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_go_array.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_error.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_boolean.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_arguments.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/script.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_go_slice.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/otto.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/object_class.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/evaluate.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/console.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/cmpl.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/cmpl_parse.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/result.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/cmpl_evaluate_statement.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_reference.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/cmpl_evaluate_expression.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/cmpl_evaluate.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/stash.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/clone.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_regexp.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_string.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_string.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_regexp.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/property.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_object.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_number.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_math.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_json.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_function.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_error.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_date.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_date.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_boolean.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_array.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/object.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/global.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_array.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/error.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/inline.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/scope.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/runtime.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/value.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/otto_.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_function.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin.go": 1,
                "/opt/go/src/encoding/gob/encoder.go": 1,
                "/opt/go/src/encoding/gob/encode.go": 1,
                "/opt/go/src/encoding/gob/enc_helpers.go": 1,
                "/opt/go/src/encoding/gob/decoder.go": 1,
                "/opt/go/src/encoding/gob/type.go": 1,
                "/opt/go/src/encoding/gob/error.go": 1,
                "/opt/go/src/encoding/gob/decode.go": 1,
                "/opt/go/src/encoding/gob/dec_helpers.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/registry/registry.go": 1,
                "/opt/go/src/math/rand/rng.go": 1,
                "/opt/go/src/math/rand/normal.go": 1,
                "/opt/go/src/math/rand/rand.go": 1,
                "/opt/go/src/math/rand/exp.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/dbg.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/statement.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/regexp.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/lexer.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/scope.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/expression.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/parser.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/error.go": 1,
                "/opt/go/src/io/ioutil/ioutil.go": 1,
                "/opt/go/src/path/filepath/path.go": 1,
                "/opt/go/src/path/filepath/match.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/ast/node.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/ast/comments.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/token/token_const.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/token/token.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/file/file.go": 1,
                "/root/go/src/gopkg.in/sourcemap.v1/sourcemap.go": 1,
                "/root/go/src/gopkg.in/sourcemap.v1/consumer.go": 1,
                "/root/go/src/gopkg.in/sourcemap.v1/base64vlq/base64_vlq.go": 1,
                "/opt/go/src/path/match.go": 1,
                "/opt/go/src/path/path.go": 1,
                "/opt/go/src/encoding/json/tags.go": 1,
                "/opt/go/src/encoding/json/indent.go": 1,
                "/opt/go/src/encoding/json/fold.go": 1,
                "/opt/go/src/encoding/json/encode.go": 1,
                "/opt/go/src/encoding/json/scanner.go": 1,
                "/opt/go/src/encoding/json/decode.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/dbg/dbg.go": 1,
                "/opt/go/src/log/log.go": 1,
                "/opt/go/src/unicode/utf16/utf16.go": 1,
                "/opt/go/src/unicode/digit.go": 1,
                "/opt/go/src/regexp/regexp.go": 1,
                "/opt/go/src/regexp/onepass.go": 1,
                "/opt/go/src/regexp/exec.go": 1,
                "/opt/go/src/regexp/backtrack.go": 1,
                "/opt/go/src/regexp/syntax/perl_groups.go": 1,
                "/opt/go/src/regexp/syntax/simplify.go": 1,
                "/opt/go/src/regexp/syntax/regexp.go": 1,
                "/opt/go/src/regexp/syntax/prog.go": 1,
                "/opt/go/src/regexp/syntax/parse.go": 1,
                "/opt/go/src/regexp/syntax/op_string.go": 1,
                "/opt/go/src/regexp/syntax/compile.go": 1,
                "/opt/go/src/net/url/url.go": 1,
                "/opt/go/src/encoding/hex/hex.go": 1,
                "/opt/go/src/strings/strings.go": 1,
                "/opt/go/src/strings/reader.go": 1,
                "/opt/go/src/strings/builder.go": 1,
                "/opt/go/src/encoding/base64/base64.go": 1,
                "/opt/go/src/crypto/aes/gcm_amd64.s": 1,
                "/opt/go/src/crypto/aes/asm_amd64.s": 1,
                "/opt/go/src/crypto/aes/cipher_asm.go": 1,
                "/opt/go/src/crypto/aes/cipher.go": 1,
                "/opt/go/src/crypto/aes/block.go": 1,
                "/opt/go/src/crypto/aes/aes_gcm.go": 1,
                "/opt/go/src/crypto/cipher/xor_amd64.s": 1,
                "/opt/go/src/crypto/cipher/gcm.go": 1,
                "/opt/go/src/crypto/cipher/xor_amd64.go": 1,
                "/opt/go/src/crypto/internal/subtle/aliasing.go": 1,
                "/opt/go/src/crypto/cipher/ofb.go": 1,
                "/opt/go/src/crypto/cipher/io.go": 1,
                "/opt/go/src/crypto/subtle/constant_time.go": 1,
                "/opt/go/src/encoding/binary/binary.go": 1,
                "/opt/go/src/compress/gzip/gunzip.go": 1,
                "/opt/go/src/hash/crc32/crc32_amd64.s": 1,
                "/opt/go/src/hash/crc32/crc32_generic.go": 1,
                "/opt/go/src/hash/crc32/crc32_amd64.go": 1,
                "/opt/go/src/hash/crc32/crc32.go": 1,
                "/opt/go/src/encoding/binary/varint.go": 1,
                "/opt/go/src/compress/flate/inflate.go": 1,
                "/opt/go/src/compress/flate/huffman_code.go": 1,
                "/opt/go/src/compress/flate/huffman_bit_writer.go": 1,
                "/opt/go/src/compress/flate/dict_decoder.go": 1,
                "/opt/go/src/fmt/scan.go": 1,
                "/opt/go/src/fmt/print.go": 1,
                "/opt/go/src/fmt/format.go": 1,
                "/opt/go/src/os/executable_procfs.go": 1,
                "/opt/go/src/os/wait_waitid.go": 1,
                "/opt/go/src/os/types_unix.go": 1,
                "/opt/go/src/os/str.go": 1,
                "/opt/go/src/os/stat_unix.go": 1,
                "/opt/go/src/os/stat_linux.go": 1,
                "/opt/go/src/os/stat.go": 1,
                "/opt/go/src/os/proc.go": 1,
                "/opt/go/src/os/path_unix.go": 1,
                "/opt/go/src/os/error_unix.go": 1,
                "/opt/go/src/os/types.go": 1,
                "/opt/go/src/os/rawconn.go": 1,
                "/opt/go/src/os/file_unix.go": 1,
                "/opt/go/src/os/file_posix.go": 1,
                "/opt/go/src/os/file.go": 1,
                "/opt/go/src/syscall/zerrors_linux_amd64.go": 1,
                "/opt/go/src/os/exec_posix.go": 1,
                "/opt/go/src/os/exec_unix.go": 1,
                "/opt/go/src/os/exec.go": 1,
                "/opt/go/src/os/error.go": 1,
                "/opt/go/src/os/error_posix.go": 1,
                "/opt/go/src/os/dir_unix.go": 1,
                "/opt/go/src/os/dir.go": 1,
                "/opt/go/src/internal/syscall/unix/nonblocking.go": 1,
                "/opt/go/src/internal/poll/writev.go": 1,
                "/opt/go/src/internal/poll/sockoptip.go": 1,
                "/opt/go/src/internal/poll/sockopt_unix.go": 1,
                "/opt/go/src/internal/poll/sockopt_linux.go": 1,
                "/opt/go/src/internal/poll/sockopt.go": 1,
                "/opt/go/src/internal/poll/sock_cloexec.go": 1,
                "/opt/go/src/internal/poll/fd_writev_unix.go": 1,
                "/opt/go/src/internal/poll/fd_unix.go": 1,
                "/opt/go/src/internal/poll/fd_posix.go": 1,
                "/opt/go/src/internal/poll/fd_poll_runtime.go": 1,
                "/opt/go/src/internal/poll/fd_mutex.go": 1,
                "/opt/go/src/internal/poll/fd_fsync_posix.go": 1,
                "/opt/go/src/internal/poll/fd.go": 1,
                "/opt/go/src/time/zoneinfo_unix.go": 1,
                "/opt/go/src/time/zoneinfo_read.go": 1,
                "/opt/go/src/time/sys_unix.go": 1,
                "/opt/go/src/time/zoneinfo.go": 1,
                "/opt/go/src/time/time.go": 1,
                "/opt/go/src/time/format.go": 1,
                "/opt/go/src/internal/testlog/log.go": 1,
                "/opt/go/src/syscall/asm_linux_amd64.s": 1,
                "/opt/go/src/syscall/zsyscall_linux_amd64.go": 1,
                "/opt/go/src/syscall/syscall_unix.go": 1,
                "/opt/go/src/syscall/syscall_linux_amd64.go": 1,
                "/opt/go/src/syscall/str.go": 1,
                "/opt/go/src/syscall/syscall.go": 1,
                "/opt/go/src/syscall/exec_unix.go": 1,
                "/opt/go/src/syscall/env_unix.go": 1,
                "/opt/go/src/syscall/syscall_linux.go": 1,
                "/opt/go/src/syscall/dirent.go": 1,
                "/opt/go/src/internal/fmtsort/sort.go": 1,
                "/opt/go/src/sort/zfuncversion.go": 1,
                "/opt/go/src/sort/sort.go": 1,
                "/opt/go/src/sort/slice.go": 1,
                "/opt/go/src/sort/search.go": 1,
                "/opt/go/src/reflect/asm_amd64.s": 1,
                "/opt/go/src/reflect/value.go": 1,
                "/opt/go/src/reflect/swapper.go": 1,
                "/opt/go/src/reflect/type.go": 1,
                "/opt/go/src/reflect/makefunc.go": 1,
                "/opt/go/src/strconv/ftoa.go": 1,
                "/opt/go/src/strconv/extfloat.go": 1,
                "/opt/go/src/strconv/decimal.go": 1,
                "/opt/go/src/strconv/itoa.go": 1,
                "/opt/go/src/strconv/quote.go": 1,
                "/opt/go/src/strconv/atoi.go": 1,
                "/opt/go/src/strconv/atof.go": 1,
                "/opt/go/src/math/tan_amd64.s": 1,
                "/opt/go/src/math/sin_amd64.s": 1,
                "/opt/go/src/math/pow_stub.s": 1,
                "/opt/go/src/math/modf_amd64.s": 1,
                "/opt/go/src/math/mod_amd64.s": 1,
                "/opt/go/src/math/log_amd64.s": 1,
                "/opt/go/src/math/log10_amd64.s": 1,
                "/opt/go/src/math/ldexp_amd64.s": 1,
                "/opt/go/src/math/frexp_amd64.s": 1,
                "/opt/go/src/math/floor_amd64.s": 1,
                "/opt/go/src/math/exp_amd64.s": 1,
                "/opt/go/src/math/dim_amd64.s": 1,
                "/opt/go/src/math/atan_amd64.s": 1,
                "/opt/go/src/math/atan2_amd64.s": 1,
                "/opt/go/src/math/asin_amd64.s": 1,
                "/opt/go/src/math/exp_asm.go": 1,
                "/opt/go/src/math/bits/bits.go": 1,
                "/opt/go/src/math/trig_reduce.go": 1,
                "/opt/go/src/math/tan.go": 1,
                "/opt/go/src/math/sin.go": 1,
                "/opt/go/src/math/pow.go": 1,
                "/opt/go/src/math/modf.go": 1,
                "/opt/go/src/math/mod.go": 1,
                "/opt/go/src/math/log10.go": 1,
                "/opt/go/src/math/ldexp.go": 1,
                "/opt/go/src/math/unsafe.go": 1,
                "/opt/go/src/math/abs.go": 1,
                "/opt/go/src/math/frexp.go": 1,
                "/opt/go/src/math/copysign.go": 1,
                "/opt/go/src/math/signbit.go": 1,
                "/opt/go/src/math/atan2.go": 1,
                "/opt/go/src/math/atan.go": 1,
                "/opt/go/src/math/bits.go": 1,
                "/opt/go/src/math/asin.go": 1,
                "/opt/go/src/bufio/scan.go": 1,
                "/opt/go/src/bufio/bufio.go": 1,
                "/opt/go/src/bytes/reader.go": 1,
                "/opt/go/src/bytes/bytes.go": 1,
                "/opt/go/src/bytes/buffer.go": 1,
                "/opt/go/src/unicode/tables.go": 1,
                "/opt/go/src/unicode/letter.go": 1,
                "/opt/go/src/unicode/graphic.go": 1,
                "/opt/go/src/unicode/utf8/utf8.go": 1,
                "/opt/go/src/io/pipe.go": 1,
                "/opt/go/src/io/io.go": 1,
                "/opt/go/src/sync/waitgroup.go": 1,
                "/opt/go/src/sync/rwmutex.go": 1,
                "/opt/go/src/sync/runtime.go": 1,
                "/opt/go/src/sync/pool.go": 1,
                "/opt/go/src/sync/once.go": 1,
                "/opt/go/src/sync/mutex.go": 1,
                "/opt/go/src/sync/map.go": 1,
                "/opt/go/src/sync/cond.go": 1,
                "/opt/go/src/errors/errors.go": 1,
                "/opt/go/src/runtime/sys_linux_amd64.s": 1,
                "/opt/go/src/runtime/rt0_linux_amd64.s": 1,
                "/opt/go/src/runtime/memmove_amd64.s": 1,
                "/opt/go/src/runtime/memclr_amd64.s": 1,
                "/opt/go/src/runtime/duff_amd64.s": 1,
                "/opt/go/src/runtime/asm_amd64.s": 1,
                "/opt/go/src/runtime/asm.s": 1,
                "/opt/go/src/runtime/vdso_linux.go": 1,
                "/opt/go/src/runtime/utf8.go": 1,
                "/opt/go/src/runtime/timestub.go": 1,
                "/opt/go/src/runtime/time.go": 1,
                "/opt/go/src/runtime/internal/sys/intrinsics.go": 1,
                "/opt/go/src/runtime/slice.go": 1,
                "/opt/go/src/runtime/sigqueue.go": 1,
                "/opt/go/src/runtime/signal_sighandler.go": 1,
                "/opt/go/src/runtime/signal_linux_amd64.go": 1,
                "/opt/go/src/runtime/signal_amd64x.go": 1,
                "/opt/go/src/runtime/select.go": 1,
                "/opt/go/src/runtime/rwmutex.go": 1,
                "/opt/go/src/runtime/runtime.go": 1,
                "/opt/go/src/runtime/profbuf.go": 1,
                "/opt/go/src/runtime/stack.go": 1,
                "/opt/go/src/runtime/sys_x86.go": 1,
                "/opt/go/src/runtime/traceback.go": 1,
                "/opt/go/src/runtime/write_err.go": 1,
                "/opt/go/src/runtime/print.go": 1,
                "/opt/go/src/runtime/signal_unix.go": 1,
                "/opt/go/src/runtime/panic.go": 1,
                "/opt/go/src/runtime/os_linux_generic.go": 1,
                "/opt/go/src/runtime/defs_linux_amd64.go": 1,
                "/opt/go/src/runtime/os_linux.go": 1,
                "/opt/go/src/runtime/netpoll_epoll.go": 1,
                "/opt/go/src/runtime/netpoll.go": 1,
                "/opt/go/src/runtime/mstats.go": 1,
                "/opt/go/src/runtime/mprof.go": 1,
                "/opt/go/src/runtime/mgcstack.go": 1,
                "/opt/go/src/runtime/mgcsweepbuf.go": 1,
                "/opt/go/src/runtime/mgcmark.go": 1,
                "/opt/go/src/runtime/mgclarge.go": 1,
                "/opt/go/src/runtime/sema.go": 1,
                "/opt/go/src/runtime/mgcsweep.go": 1,
                "/opt/go/src/runtime/mgcwork.go": 1,
                "/opt/go/src/runtime/string.go": 1,
                "/opt/go/src/runtime/mfinal.go": 1,
                "/opt/go/src/runtime/trace.go": 1,
                "/opt/go/src/runtime/mcentral.go": 1,
                "/opt/go/src/runtime/mcache.go": 1,
                "/opt/go/src/runtime/mbarrier.go": 1,
                "/opt/go/src/runtime/map_faststr.go": 1,
                "/opt/go/src/runtime/map_fast64.go": 1,
                "/opt/go/src/runtime/map_fast32.go": 1,
                "/opt/go/src/runtime/msize.go": 1,
                "/opt/go/src/runtime/map.go": 1,
                "/opt/go/src/runtime/fastlog2.go": 1,
                "/opt/go/src/runtime/mgc.go": 1,
                "/opt/go/src/runtime/runtime1.go": 1,
                "/opt/go/src/runtime/mem_linux.go": 1,
                "/opt/go/src/runtime/mfixalloc.go": 1,
                "/opt/go/src/runtime/malloc.go": 1,
                "/opt/go/src/runtime/lock_futex.go": 1,
                "/opt/go/src/runtime/lfstack_64bit.go": 1,
                "/opt/go/src/runtime/lfstack.go": 1,
                "/opt/go/src/runtime/type.go": 1,
                "/opt/go/src/runtime/iface.go": 1,
                "/opt/go/src/runtime/unaligned1.go": 1,
                "/opt/go/src/runtime/hash64.go": 1,
                "/opt/go/src/runtime/float.go": 1,
                "/opt/go/src/runtime/extern.go": 1,
                "/opt/go/src/runtime/error.go": 1,
                "/opt/go/src/runtime/env_posix.go": 1,
                "/opt/go/src/runtime/debugcall.go": 1,
                "/opt/go/src/runtime/debug.go": 1,
                "/opt/go/src/runtime/cpuprof.go": 1,
                "/opt/go/src/runtime/cpuflags_amd64.go": 1,
                "/opt/go/src/runtime/runtime2.go": 1,
                "/opt/go/src/runtime/proc.go": 1,
                "/opt/go/src/runtime/chan.go": 1,
                "/opt/go/src/runtime/mbitmap.go": 1,
                "/opt/go/src/runtime/mheap.go": 1,
                "/opt/go/src/runtime/cgocheck.go": 1,
                "/opt/go/src/runtime/symtab.go": 1,
                "/opt/go/src/runtime/cgocall.go": 1,
                "/opt/go/src/runtime/cgo_sigaction.go": 1,
                "/opt/go/src/runtime/cgo_mmap.go": 1,
                "/opt/go/src/runtime/mwbbuf.go": 1,
                "/opt/go/src/runtime/atomic_pointer.go": 1,
                "/opt/go/src/runtime/typekind.go": 1,
                "/opt/go/src/runtime/stubs.go": 1,
                "/opt/go/src/runtime/alg.go": 1,
                "/opt/go/src/internal/bytealg/indexbyte_amd64.s": 1,
                "/opt/go/src/internal/bytealg/index_amd64.s": 1,
                "/opt/go/src/internal/bytealg/equal_amd64.s": 1,
                "/opt/go/src/internal/bytealg/count_amd64.s": 1,
                "/opt/go/src/internal/bytealg/compare_amd64.s": 1,
                "/opt/go/src/internal/bytealg/index_amd64.go": 1,
                "/opt/go/src/internal/bytealg/count_native.go": 1,
                "/opt/go/src/runtime/internal/atomic/asm_amd64.s": 1,
                "<autogenerated>": 1,
                "/opt/go/src/internal/cpu/cpu_x86.s": 1,
                "/opt/go/src/internal/cpu/cpu_x86.go": 1,
                "/opt/go/src/internal/cpu/cpu.go": 1,
                "/opt/go/src/sync/atomic/asm.s": 1,
                "/opt/go/src/sync/atomic/value.go": 1,
                "/dev/urandom": 1,
                "/proc/self/auxv": 1,
                "!-4=DMT`nuy}": 1,
                "dSsZUGpWgYTNRR6T7i0OQuUhXWEkN9uRJXQwdho67XLY6XFRHpKRp8xpdn59zV2AItWANaH8SO55nP3rVX5e0fBu0JaLWDA4)": 1,
                "fatal error: cgo callback before cgo call": 1,
                "KUUUUU": 1,
                "?HUUUUU": 1,
                "o$_jZkbkU": 1,
                "!\"#$$%%&&'''((()**+++++,,,,,,----......///0012222222222333333333344555566666777777777778888888888999999::::::::::::::::": 1,
                "<<<<<===========>>>>>>>>>>??????????????????????@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB": 1,
                "!\"#$%&'()*+,-./0123456789:": 1,
                "<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~": 1,
                "+/,_,&-": 1,
                "@?}[=?": 1,
                "S>\"MN>": 1,
                "2>>H->": 1,
                "hy={uh=": 1,
                "c~,\"l~": 1,
                "/0=H10": 1,
                "n60/&80": 1,
                "B09<D0": 1,
                "[0jr]0": 1,
                "W_0'@a0": 1,
                "-c0B e0": 1,
                "m0J0o0": 1,
                "Fq0-ds0u": 1,
                "y0X,|0vu~0": 1,
                "' 0 ^ p q t": 1,
                "!&$@$J$`$s+v+": 1,
                ",'-----0-g-o-p-": 1,
                "='9-6d": 1,
                "_jbF~T": 1,
                "11#?*0": 1,
                ",4$8_@": 1,
                "t\\lHBW": 1,
                "QPeA~S": 1,
                ">4$8,@": 1,
                "p\\lHtW": 1,
                "+HpXhE": 1,
                "T[$:.6": 1,
                "=j&&LZ66lA??~": 1,
                "}{))R>": 1,
                "f\"\"D~**T": 1,
                "V22dN::t": 1,
                "o%%Jr..\\$": 1,
                "&&Lj66lZ??~A": 1,
                "99rKJJ": 1,
                "==zGdd": 1,
                "\"\"Df**T~": 1,
                "22dV::tN": 1,
                "$$Hl\\\\": 1,
                "C77nYmm": 1,
                "%%Jo..\\r": 1,
                "55j_WW": 1,
                "&Lj&6lZ6?~A?": 1,
                "~=zG=d": 1,
                "\"Df\"*T~*": 1,
                "2dV2:tN:": 1,
                "x%Jo%.\\r.": 1,
                "a5j_5W": 1,
                "ggV}++": 1,
                "Lj&&lZ66~A??": 1,
                "bS11*?": 1,
                "Xt,,4.": 1,
                "MMfU33": 1,
                "PPxD<<%": 1,
                "Bc!! 0": 1,
                "~~zG==": 1,
                "Df\"\"T~**": 1,
                "dV22tN::": 1,
                "xxJo%%\\r..8$": 1,
                "pp|B>>q": 1,
                "aaj_55": 1,
                "UUPx((": 1,
                "?/*p?3": 1,
                "B?Qt??u+<?": 1,
                "&?XS$?": 1,
                "r>b<o>": 1,
                "Y>z)W>": 1,
                "L>5~J>3": 1,
                "@>VK>>": 1,
                "Q=TvL=": 1,
                "_'/1P*/r<-/": 1,
                "L/dYO/": 1,
                "x/1b{/": 1,
                ".0EP00": 1,
                "10{:30": 1,
                "<0<*>0": 1,
                "fL0RWN0": 1,
                "RP0*YR0FkT0": 1,
                "$42j?+": 1,
                "Qy8v8L": 1,
                "2@z$Zf": 1,
                "{$WcI6k2": 1,
                "XT1a~uL": 1,
                "6e%9m8": 1,
                "u~`q`l|=": 1,
                "word: wkotczmcfo": 1,
                "word: sgbdyfrgf": 1,
                "word: hfmlecpiu": 1,
                "word: tazywuyyfjewcf": 1,
                "word: kgtjrmsf": 1,
                "word: memprofih": 3,
                "word: memprofi": 2,
                "word: runtime": 2299,
                "word: callslicl": 1,
                "word: fileunh": 1,
                "word: method": 31,
                "word: badindeh": 1,
                "word: missingh": 1,
                "word: noverm": 1,
                "word: extram": 1,
                "word: badprm": 1,
                "word: badprec": 1,
                "word: badwim": 1,
                "word: fatauca": 1,
                "word: trueuhh": 1,
                "word: falsui": 1,
                "word: arrauf": 1,
                "word: functionh": 7,
                "word: function": 19,
                "word: argumentm": 1,
                "word: argument": 18,
                "word: functionl": 1,
                "word: functionm": 1,
                "word: urierrorh": 1,
                "word: evalerroh": 1,
                "word: typeerroh": 1,
                "word: rangeerrh": 1,
                "word: syntaxerh": 1,
                "word: referench": 1,
                "word: falsum": 1,
                "word: errors": 9,
                "word: regexp": 394,
                "word: accept": 7,
                "word: arrayt": 1,
                "word: assign": 3,
                "word: before": 11,
                "word: blocks": 1,
                "word: buffer": 46,
                "word: callee": 2,
                "word: canset": 3,
                "word: chroot": 1,
                "word: column": 1,
                "word: consts": 1,
                "word: debugf": 2,
                "word: decode": 15,
                "word: delete": 10,
                "word: enable": 4,
                "word: encode": 29,
                "word: errorf": 4,
                "word: exited": 6,
                "word: expand": 9,
                "word: export": 6,
                "word: family": 3,
                "word: fatalf": 4,
                "word: fchdir": 3,
                "word: fchmod": 3,
                "word: fchown": 3,
                "word: fields": 4,
                "word: format": 8,
                "word: getenv": 2,
                "word: groups": 2,
                "word: halted": 1,
                "word: hasadx": 1,
                "word: hasaes": 1,
                "word: hasavx": 2,
                "word: hasfma": 1,
                "word: hassve": 1,
                "word: hatype": 1,
                "word: header": 3,
                "word: hostid": 1,
                "word: infoln": 2,
                "word: initvm": 2,
                "word: iovlen": 1,
                "word: isnull": 3,
                "word: iszero": 5,
                "word: layout": 3,
                "word: length": 43,
                "word: linger": 3,
                "word: logger": 67,
                "word: lookup": 6,
                "word: majflt": 1,
                "word: maxcap": 2,
                "word: maxrss": 1,
                "word: member": 3,
                "word: minflt": 1,
                "word: minute": 4,
                "word: msgrcv": 1,
                "word: msgsnd": 1,
                "word: munmap": 6,
                "word: newgcm": 2,
                "word: nivcsw": 1,
                "word: noctty": 1,
                "word: numcap": 2,
                "word: numout": 14,
                "word: number": 22,
                "word: object": 114,
                "word: offset": 11,
                "word: opaque": 2,
                "word: output": 6,
                "word: panicf": 3,
                "word: paused": 1,
                "word: prefix": 5,
                "word: printf": 4,
                "word: ptrace": 1,
                "word: pwrite": 5,
                "word: readat": 6,
                "word: return": 8,
                "word: scheme": 1,
                "word: search": 6,
                "word: second": 5,
                "word: setcap": 3,
                "word: setint": 3,
                "word: setlen": 4,
                "word: setnan": 2,
                "word: setsid": 1,
                "word: signal": 126,
                "word: slicet": 1,
                "word: source": 11,
                "word: strict": 4,
                "word: stride": 1,
                "word: string": 376,
                "word: struct": 268,
                "word: switch": 10,
                "word: unlock": 17,
                "word: update": 4,
                "word: warnln": 2,
                "word: writer": 11,
                "word: writev": 5,
                "word: zoneid": 1,
                "word: active": 1,
                "word: addsec": 2,
                "word: allocs": 1,
                "word: append": 4,
                "word: arenas": 1,
                "word: arglen": 2,
                "word: argmap": 1,
                "word: attach": 1,
                "word: bitmap": 1,
                "word: branch": 2,
                "word: bucket": 67,
                "word: canput": 1,
                "word: chunks": 1,
                "word: cipher": 31,
                "word: closed": 6,
                "word: common": 13,
                "word: concat": 4,
                "word: cutoff": 1,
                "word: cutset": 2,
                "word: cycles": 4,
                "word: decref": 3,
                "word: digest": 1,
                "word: divmul": 1,
                "word: divmod": 1,
                "word: efence": 2,
                "word: elemop": 9,
                "word: endtop": 1,
                "word: etypes": 2,
                "word: events": 1,
                "word: exists": 6,
                "word: expect": 2,
                "word: factor": 2,
                "word: fmtsbx": 2,
                "word: frames": 4,
                "word: funcid": 2,
                "word: future": 2,
                "word: gcdata": 1,
                "word: gencol": 2,
                "word: getptr": 2,
                "word: global": 3,
                "word: gotime": 2,
                "word: handle": 4,
                "word: helper": 4,
                "word: holder": 2,
                "word: inlist": 2,
                "word: incref": 3,
                "word: inputs": 7,
                "word: insert": 7,
                "word: intbuf": 1,
                "word: iovecs": 1,
                "word: iscall": 2,
                "word: isdate": 1,
                "word: isfile": 1,
                "word: isfree": 2,
                "word: isdone": 1,
                "word: labels": 2,
                "word: lineno": 1,
                "word: locabs": 2,
                "word: mapped": 1,
                "word: mcache": 16,
                "word: mcount": 3,
                "word: misses": 1,
                "word: mustbe": 2,
                "word: native": 6,
                "word: nbytes": 1,
                "word: nchunk": 1,
                "word: needed": 6,
                "word: nelems": 4,
                "word: newval": 5,
                "word: nmidle": 2,
                "word: nocopy": 4,
                "word: noscan": 3,
                "word: npages": 4,
                "word: npidle": 1,
                "word: oldval": 7,
                "word: opcode": 1,
                "word: outbuf": 1,
                "word: palloc": 1,
                "word: parent": 2,
                "word: parked": 1,
                "word: pcfile": 1,
                "word: period": 1,
                "word: procid": 1,
                "word: ptrbit": 1,
                "word: putgen": 1,
                "word: putptr": 2,
                "word: qcount": 1,
                "word: quoted": 1,
                "word: random": 2,
                "word: reader": 80,
                "word: refill": 3,
                "word: remove": 3,
                "word: repeat": 6,
                "word: result": 21,
                "word: revise": 2,
                "word: rflags": 2,
                "word: rusage": 2,
                "word: rwlock": 2,
                "word: scases": 2,
                "word: setloc": 2,
                "word: shared": 5,
                "word: sharpv": 1,
                "word: sparse": 1,
                "word: status": 17,
                "word: symoff": 1,
                "word: symtab": 2,
                "word: taglen": 3,
                "word: target": 3,
                "word: thread": 13,
                "word: ticket": 1,
                "word: toread": 1,
                "word: tryget": 2,
                "word: tstart": 4,
                "word: unused": 3,
                "word: values": 14,
                "word: varint": 4,
                "word: vdsopc": 1,
                "word: vdsosp": 1,
                "word: verdef": 1,
                "word: versym": 1,
                "word: wanted": 4,
                "word: xcount": 1,
                "word: reflect": 882,
                "word: strconv": 130,
                "word: strings": 79,
                "word: syscall": 204,
                "word: unicode": 140,
                "word: adddate": 3,
                "word: addfile": 2,
                "word: address": 12,
                "word: blksize": 1,
                "word: boolean": 5,
                "word: canaddr": 3,
                "word: chandir": 18,
                "word: closing": 7,
                "word: comment": 17,
                "word: compile": 10,
                "word: complex": 13,
                "word: context": 11,
                "word: control": 3,
                "word: convert": 8,
                "word: current": 3,
                "word: dbgdbgf": 5,
                "word: debugln": 2,
                "word: decrypt": 4,
                "word: default": 4,
                "word: disable": 4,
                "word: discard": 4,
                "word: encrypt": 4,
                "word: errorln": 2,
                "word: factory": 1,
                "word: fatalln": 3,
                "word: feature": 3,
                "word: finally": 3,
                "word: findall": 3,
                "word: hasbmi": 2,
                "word: haserms": 1,
                "word: hasfcma": 1,
                "word: hasfphp": 1,
                "word: hassha": 4,
                "word: hassse": 4,
                "word: isoweek": 3,
                "word: ifindex": 1,
                "word: imports": 1,
                "word: inblock": 1,
                "word: isvalid": 5,
                "word: literal": 14,
                "word: longest": 3,
                "word: mapkeys": 3,
                "word: message": 7,
                "word: minutes": 4,
                "word: modtime": 3,
                "word: namelen": 4,
                "word: opening": 2,
                "word: operand": 2,
                "word: oublock": 1,
                "word: panicln": 2,
                "word: pattern": 2,
                "word: pkgpath": 18,
                "word: pkttype": 1,
                "word: pointer": 71,
                "word: postfix": 2,
                "word: println": 4,
                "word: rlocker": 5,
                "word: runlock": 5,
                "word: rawpath": 1,
                "word: rawread": 2,
                "word: readmsg": 2,
                "word: readdir": 4,
                "word: release": 4,
                "word: roundup": 2,
                "word: seconds": 3,
                "word: setbool": 3,
                "word: setname": 2,
                "word: settime": 3,
                "word: setuint": 3,
                "word: setctty": 1,
                "word: setpgid": 1,
                "word: shuffle": 2,
                "word: stopped": 5,
                "word: structt": 1,
                "word: success": 4,
                "word: symbols": 1,
                "word: timeout": 11,
                "word: tofloat": 5,
                "word: tovalue": 19,
                "word: tryrecv": 3,
                "word: trysend": 3,
                "word: weekday": 8,
                "word: writeat": 2,
                "word: writeto": 10,
                "word: yearday": 3,
                "word: aborted": 1,
                "word: advance": 4,
                "word: alignme": 4,
                "word: alllink": 1,
                "word: allnext": 1,
                "word: allowin": 1,
                "word: amended": 1,
                "word: argsize": 1,
                "word: badverb": 2,
                "word: balance": 2,
                "word: blocked": 7,
                "word: buckets": 1,
                "word: buflock": 2,
                "word: bytebuf": 1,
                "word: callers": 3,
                "word: central": 1,
                "word: cgoctxt": 1,
                "word: codegen": 1,
                "word: copylen": 1,
                "word: created": 3,
                "word: debuggc": 1,
                "word: declare": 2,
                "word: defined": 11,
                "word: dequeue": 3,
                "word: destroy": 2,
                "word: dirinfo": 2,
                "word: dispose": 2,
                "word: domatch": 2,
                "word: doprint": 2,
                "word: docrash": 2,
                "word: elemenc": 1,
                "word: elseenc": 1,
                "word: enabled": 5,
                "word: encinit": 1,
                "word: encoder": 29,
                "word: enqueue": 2,
                "word: entries": 3,
                "word: expbits": 1,
                "word: fileset": 6,
                "word: filetab": 1,
                "word: flushed": 4,
                "word: fmtbool": 2,
                "word: fnstash": 20,
                "word: forward": 2,
                "word: freebuf": 1,
                "word: funcoff": 1,
                "word: gctrace": 2,
                "word: genline": 2,
                "word: getemit": 2,
                "word: getslow": 2,
                "word: gnuhash": 1,
                "word: gobtype": 11,
                "word: goidgen": 1,
                "word: growing": 2,
                "word: gsignal": 3,
                "word: hasname": 1,
                "word: hasmain": 1,
                "word: hdrsize": 1,
                "word: huffsym": 2,
                "word: ignored": 5,
                "word: incount": 1,
                "word: invalid": 62,
                "word: isarray": 3,
                "word: isempty": 5,
                "word: iserror": 1,
                "word: keykind": 1,
                "word: keysize": 1,
                "word: lexical": 1,
                "word: libcall": 2,
                "word: lockedg": 2,
                "word: lockedm": 2,
                "word: marshal": 4,
                "word: matched": 2,
                "word: methods": 2,
                "word: morebuf": 2,
                "word: mutable": 1,
                "word: nameoff": 7,
                "word: newdate": 2,
                "word: nextint": 2,
                "word: nlookup": 1,
                "word: nmalloc": 8,
                "word: nmfreed": 1,
                "word: nostack": 4,
                "word: npcdata": 1,
                "word: onepass": 2,
                "word: outused": 1,
                "word: padchar": 1,
                "word: pausens": 4,
                "word: pinslow": 2,
                "word: poplist": 2,
                "word: preempt": 3,
                "word: prepare": 2,
                "word: primary": 1,
                "word: private": 1,
                "word: program": 9,
                "word: ptrdata": 1,
                "word: pushall": 3,
                "word: pushcnt": 1,
                "word: putfast": 3,
                "word: racectx": 1,
                "word: readerr": 2,
                "word: readpos": 1,
                "word: readval": 1,
                "word: readers": 1,
                "word: reading": 2,
                "word: reclaim": 2,
                "word: recover": 1,
                "word: resolve": 3,
                "word: restart": 2,
                "word: reviver": 1,
                "word: roffset": 1,
                "word: runnext": 1,
                "word: scratch": 1,
                "word: seedpos": 2,
                "word: setdone": 2,
                "word: setmono": 1,
                "word: setpath": 2,
                "word: setspan": 2,
                "word: settype": 2,
                "word: sigaddr": 3,
                "word: sigcode": 6,
                "word: sigmask": 1,
                "word: skipnop": 2,
                "word: sortkey": 2,
                "word: spankey": 5,
                "word: special": 8,
                "word: started": 1,
                "word: startpc": 1,
                "word: symhash": 1,
                "word: sysstat": 2,
                "word: tagsize": 1,
                "word: takeall": 2,
                "word: textoff": 6,
                "word: timeend": 3,
                "word: topbits": 1,
                "word: tophash": 2,
                "word: typeoff": 11,
                "word: typemap": 1,
                "word: unixsec": 2,
                "word: varlist": 1,
                "word: verhash": 1,
                "word: version": 8,
                "word: visited": 1,
                "word: waiting": 8,
                "word: wraperr": 2,
                "word: wrapped": 1,
                "word: writeon": 2,
                "word: encoding": 562,
                "word: uintptr": 218,
                "word: buffered": 2,
                "word: capnames": 4,
                "word: comments": 20,
                "word: contains": 10,
                "word: coredump": 3,
                "word: debugger": 2,
                "word: exitcode": 2,
                "word: fetchall": 3,
                "word: fileline": 2,
                "word: filename": 2,
                "word: flowinfo": 1,
                "word: fragment": 1,
                "word: gostring": 2,
                "word: hasasimd": 1,
                "word: hascpuid": 1,
                "word: hascrc": 1,
                "word: hasdcpop": 1,
                "word: hasjscvt": 1,
                "word: haslrcpc": 1,
                "word: haspmull": 1,
                "word: hasssse": 1,
                "word: hostname": 2,
                "word: isnumber": 3,
                "word: isobject": 3,
                "word: isstream": 1,
                "word: isstring": 3,
                "word: location": 18,
                "word: mapindex": 3,
                "word: maprange": 3,
                "word: multiply": 2,
                "word: nsignals": 1,
                "word: numfield": 16,
                "word: operator": 2,
                "word: overhead": 2,
                "word: packages": 2,
                "word: password": 3,
                "word: position": 13,
                "word: protocol": 2,
                "word: rawquery": 1,
                "word: rawwrite": 2,
                "word: readbyte": 7,
                "word: readfrom": 4,
                "word: readline": 2,
                "word: readrune": 6,
                "word: required": 2,
                "word: sequence": 2,
                "word: setbytes": 4,
                "word: setconst": 2,
                "word: setflags": 2,
                "word: setfloat": 3,
                "word: shutdown": 5,
                "word: signaled": 3,
                "word: simplify": 4,
                "word: sysusage": 4,
                "word: tostring": 14,
                "word: truncate": 10,
                "word: urierror": 1,
                "word: unixnano": 3,
                "word: usertime": 4,
                "word: username": 3,
                "word: writemsg": 2,
                "word: addextra": 2,
                "word: addnongo": 2,
                "word: allspans": 1,
                "word: arrayenc": 1,
                "word: asserted": 1,
                "word: assignto": 2,
                "word: basemask": 1,
                "word: baseaddr": 1,
                "word: bitcount": 1,
                "word: bytedata": 1,
                "word: cacheend": 1,
                "word: cgocheck": 3,
                "word: checkput": 1,
                "word: coalesce": 4,
                "word: codebits": 1,
                "word: collapse": 2,
                "word: concrete": 2,
                "word: continpc": 1,
                "word: coprimes": 1,
                "word: copydata": 2,
                "word: copydist": 1,
                "word: countbuf": 1,
                "word: dataqsiz": 1,
                "word: dclstash": 20,
                "word: debuggen": 1,
                "word: decindir": 1,
                "word: decopfor": 7,
                "word: describe": 2,
                "word: divshift": 2,
                "word: doprintf": 2,
                "word: ehsize": 1,
                "word: elemsize": 2,
                "word: elemtype": 1,
                "word: embedded": 5,
                "word: enablegc": 1,
                "word: encindir": 1,
                "word: endcycle": 2,
                "word: eoferror": 2,
                "word: erroring": 1,
                "word: fastrand": 2,
                "word: fieldnum": 1,
                "word: flushgen": 3,
                "word: fmtbytes": 2,
                "word: fmtflags": 2,
                "word: fmtfloat": 3,
                "word: freelist": 1,
                "word: freespan": 4,
                "word: freewait": 1,
                "word: freelink": 1,
                "word: fullhead": 2,
                "word: fulltail": 2,
                "word: funcinfo": 4,
                "word: funcname": 3,
                "word: functype": 40,
                "word: generate": 2,
                "word: getvalue": 7,
                "word: goregexp": 1,
                "word: haslabel": 2,
                "word: heapgoal": 4,
                "word: histsize": 2,
                "word: inswitch": 1,
                "word: initspan": 4,
                "word: ismarked": 2,
                "word: isregexp": 2,
                "word: isselect": 1,
                "word: keyindir": 2,
                "word: lastbyte": 1,
                "word: lastfreq": 1,
                "word: lastread": 1,
                "word: lastpoll": 1,
                "word: libcallg": 1,
                "word: linkmask": 1,
                "word: loadaddr": 1,
                "word: mantbits": 1,
                "word: mappings": 7,
                "word: matchcap": 1,
                "word: maxprocs": 4,
                "word: mcentral": 24,
                "word: morebits": 2,
                "word: mstartfn": 1,
                "word: namesind": 1,
                "word: nbgsweep": 1,
                "word: ncgocall": 1,
                "word: needzero": 2,
                "word: newarray": 4,
                "word: newbytes": 2,
                "word: newerror": 3,
                "word: newstack": 6,
                "word: nextbase": 2,
                "word: nextfree": 2,
                "word: nextuint": 2,
                "word: nonblock": 1,
                "word: nonempty": 1,
                "word: noptrbss": 2,
                "word: numextra": 1,
                "word: numinstr": 1,
                "word: objindex": 2,
                "word: outcount": 1,
                "word: overflow": 5,
                "word: parsefor": 2,
                "word: parseint": 4,
                "word: pausegen": 1,
                "word: pointers": 2,
                "word: pollable": 2,
                "word: prevrune": 1,
                "word: previous": 8,
                "word: printarg": 2,
                "word: priority": 1,
                "word: property": 35,
                "word: pushback": 2,
                "word: putbatch": 2,
                "word: putvalue": 4,
                "word: raceaddr": 2,
                "word: rcvrtype": 2,
                "word: readlock": 2,
                "word: readable": 1,
                "word: recvtype": 2,
                "word: released": 5,
                "word: runnable": 7,
                "word: runqhead": 1,
                "word: runqsize": 2,
                "word: runqtail": 1,
                "word: rwunlock": 2,
                "word: scannext": 2,
                "word: scanwork": 2,
                "word: scavenge": 4,
                "word: sendtype": 2,
                "word: sendzero": 1,
                "word: seqstart": 2,
                "word: seterror": 2,
                "word: setrunes": 3,
                "word: setspans": 2,
                "word: setvalue": 8,
                "word: sleeping": 1,
                "word: sockaddr": 14,
                "word: specials": 1,
                "word: spinecap": 1,
                "word: spinelen": 1,
                "word: spinning": 4,
                "word: stacktab": 2,
                "word: stktopsp": 1,
                "word: stopnote": 1,
                "word: stopping": 9,
                "word: stopwait": 3,
                "word: stwprocs": 4,
                "word: sudogbuf": 1,
                "word: sweepers": 1,
                "word: sweepgen": 8,
                "word: sysalloc": 3,
                "word: tagcount": 2,
                "word: targetpc": 3,
                "word: throwing": 2,
                "word: ticksend": 2,
                "word: tmpclass": 1,
                "word: toobject": 3,
                "word: tracebuf": 4,
                "word: traceseq": 1,
                "word: tryalloc": 2,
                "word: trystore": 2,
                "word: uncommon": 14,
                "word: variable": 1,
                "word: waitread": 2,
                "word: waitlink": 1,
                "word: waitlock": 1,
                "word: waitnote": 1,
                "word: waittail": 1,
                "word: wiretype": 8,
                "word: writable": 3,
                "word: writebuf": 3,
                "word: writeoff": 2,
                "word: writeset": 2,
                "word: addimport": 2,
                "word: afterhook": 1,
                "word: alternate": 3,
                "word: anonymous": 3,
                "word: blocksize": 4,
                "word: callslice": 6,
                "word: continued": 3,
                "word: evalerror": 1,
                "word: findindex": 2,
                "word: ftruncate": 3,
                "word: gobdecode": 2,
                "word: gobencode": 3,
                "word: haspopcnt": 1,
                "word: interface": 81,
                "word: interrupt": 1,
                "word: isboolean": 3,
                "word: isdefined": 3,
                "word: isregular": 3,
                "word: leftbrace": 1,
                "word: matchrune": 4,
                "word: multiaddr": 1,
                "word: noncesize": 3,
                "word: normalize": 3,
                "word: nummethod": 15,
                "word: numsubexp": 3,
                "word: parameter": 2,
                "word: pdeathsig": 1,
                "word: precision": 4,
                "word: readbytes": 4,
                "word: readslice": 5,
                "word: rounddown": 2,
                "word: semicolon": 3,
                "word: setlogger": 2,
                "word: setoutput": 3,
                "word: setprefix": 2,
                "word: setstring": 3,
                "word: signature": 1,
                "word: specified": 2,
                "word: startcond": 2,
                "word: statement": 6,
                "word: temporary": 6,
                "word: toboolean": 4,
                "word: tointeger": 4,
                "word: trapcause": 3,
                "word: typeerror": 1,
                "word: valueelem": 1,
                "word: waitwrite": 4,
                "word: writebyte": 8,
                "word: writeonce": 2,
                "word: writerune": 5,
                "word: abssource": 2,
                "word: addobject": 2,
                "word: aescipher": 5,
                "word: allarenas": 1,
                "word: allocbits": 1,
                "word: ancestors": 1,
                "word: argnumber": 2,
                "word: arguments": 6,
                "word: availread": 2,
                "word: backtrack": 3,
                "word: badargnum": 2,
                "word: bitcounts": 2,
                "word: bitlength": 1,
                "word: cachespan": 2,
                "word: cachezone": 1,
                "word: caughtsig": 1,
                "word: chroffset": 1,
                "word: construct": 4,
                "word: copycheck": 2,
                "word: datablock": 2,
                "word: datacount": 1,
                "word: datevalue": 2,
                "word: decodeint": 2,
                "word: decodemap": 2,
                "word: deferlock": 1,
                "word: deferpool": 1,
                "word: deletable": 1,
                "word: doexecute": 2,
                "word: doonepass": 2,
                "word: doprintln": 2,
                "word: machine": 9,
                "word: elemindir": 3,
                "word: encodeint": 2,
                "word: encodemap": 2,
                "word: engineptr": 3,
                "word: enoptrbss": 1,
                "word: enumerate": 2,
                "word: equalfold": 3,
                "word: fixedsize": 1,
                "word: floatbits": 4,
                "word: fmtstring": 2,
                "word: framepool": 1,
                "word: freeindex": 4,
                "word: freqcache": 1,
                "word: gcbssmask": 1,
                "word: gcwaiting": 2,
                "word: getlength": 2,
                "word: goidcache": 1,
                "word: hasprefix": 7,
                "word: ignoremap": 2,
                "word: insertnew": 2,
                "word: instqueue": 2,
                "word: isgnuhash": 1,
                "word: ispointer": 2,
                "word: itablinks": 1,
                "word: largefree": 2,
                "word: lastticks": 1,
                "word: libcallpc": 1,
                "word: libcallsp": 1,
                "word: localsize": 1,
                "word: lockowner": 2,
                "word: lockedext": 1,
                "word: lockedint": 2,
                "word: lockorder": 2,
                "word: lostextra": 1,
                "word: mallocing": 2,
                "word: maxmcount": 1,
                "word: multiline": 1,
                "word: nbssroots": 5,
                "word: namebytes": 1,
                "word: nevacuate": 1,
                "word: newnumber": 2,
                "word: newobject": 5,
                "word: newreader": 7,
                "word: newregexp": 6,
                "word: newstring": 3,
                "word: nextarena": 2,
                "word: nextblock": 2,
                "word: nextindex": 1,
                "word: nextwaitm": 1,
                "word: nfuncdata": 1,
                "word: noptrdata": 2,
                "word: noverflow": 1,
                "word: npageskey": 2,
                "word: numblocks": 2,
                "word: omitempty": 1,
                "word: openscope": 2,
                "word: padstring": 2,
                "word: pageinuse": 1,
                "word: pagemarks": 1,
                "word: panicking": 1,
                "word: pclntable": 1,
                "word: pkghashes": 1,
                "word: popwriter": 2,
                "word: prefixend": 1,
                "word: printlock": 2,
                "word: profilehz": 1,
                "word: prototype": 1,
                "word: ptrtothis": 1,
                "word: pushvalue": 2,
                "word: readflush": 2,
                "word: readindex": 2,
                "word: readersem": 1,
                "word: recovered": 2,
                "word: reference": 5,
                "word: reordered": 1,
                "word: retoffset": 1,
                "word: saveerror": 2,
                "word: scangroup": 2,
                "word: scanwhile": 2,
                "word: scavenged": 1,
                "word: schedlink": 1,
                "word: schedtick": 2,
                "word: schedwhen": 1,
                "word: setmarked": 2,
                "word: sizeclass": 2,
                "word: sourcecol": 1,
                "word: spanalloc": 1,
                "word: spanclass": 7,
                "word: spinelock": 1,
                "word: stacklock": 1,
                "word: stacksize": 2,
                "word: startaddr": 1,
                "word: startsema": 4,
                "word: starttime": 2,
                "word: stepstate": 1,
                "word: stringseq": 2,
                "word: stripmono": 2,
                "word: sudoglock": 1,
                "word: sweepdone": 1,
                "word: syscallpc": 1,
                "word: syscallsp": 1,
                "word: tmarkterm": 4,
                "word: timestart": 2,
                "word: totaltime": 4,
                "word: traceback": 4,
                "word: traceskip": 2,
                "word: typelinks": 2,
                "word: unmarshal": 10,
                "word: usenumber": 1,
                "word: valuekind": 2,
                "word: valuesize": 1,
                "word: waitsince": 1,
                "word: walktreap": 1,
                "word: wbufspans": 4,
                "word: writebits": 1,
                "word: writecode": 1,
                "word: writecopy": 2,
                "word: writelock": 2,
                "word: writemark": 2,
                "word: writersem": 1,
                "word: crypto": 66,
                "word: syntax": 143,
                "word: addcomment": 4,
                "word: afterblock": 3,
                "word: beforehook": 1,
                "word: cloneflags": 1,
                "word: commentmap": 10,
                "word: commontype": 9,
                "word: comparable": 13,
                "word: comparison": 4,
                "word: consequent": 2,
                "word: controllen": 1,
                "word: credential": 2,
                "word: decodedlen": 2,
                "word: encodedlen": 2,
                "word: entrypoint": 1,
                "word: exitstatus": 3,
                "word: expfloat": 2,
                "word: expression": 10,
                "word: fieldalign": 15,
                "word: findstring": 2,
                "word: forcequery": 1,
                "word: foreground": 1,
                "word: hasasimddp": 1,
                "word: hasasimdhp": 1,
                "word: hasatomics": 1,
                "word: hasevtstrm": 1,
                "word: hasosxsave": 1,
                "word: identifier": 12,
                "word: implements": 14,
                "word: importpath": 1,
                "word: isfunction": 3,
                "word: isvariadic": 14,
                "word: layoutelem": 1,
                "word: loadscript": 2,
                "word: nanosecond": 3,
                "word: rangeerror": 7,
                "word: rawcontrol": 2,
                "word: readdirent": 3,
                "word: readstring": 6,
                "word: replaceall": 5,
                "word: requesturi": 2,
                "word: rightbrace": 1,
                "word: setcomplex": 3,
                "word: setpointer": 3,
                "word: settimeout": 2,
                "word: stacktrace": 1,
                "word: stopsignal": 3,
                "word: systemtime": 4,
                "word: unreadbyte": 9,
                "word: unreadrune": 11,
                "word: unsafeaddr": 4,
                "word: allmatches": 2,
                "word: alloccache": 1,
                "word: alloccount": 8,
                "word: arenahints": 1,
                "word: assisttime": 1,
                "word: availwrite": 2,
                "word: bgmarkdone": 4,
                "word: bucketsize": 1,
                "word: buildindex": 2,
                "word: cachestart": 1,
                "word: cachealloc": 1,
                "word: canaddrenc": 1,
                "word: catchpanic": 4,
                "word: cgocallers": 2,
                "word: checkvalid": 3,
                "word: checkempty": 2,
                "word: clearflags": 2,
                "word: closescope": 2,
                "word: compiledec": 2,
                "word: countalloc": 2,
                "word: countstate": 1,
                "word: createtype": 3,
                "word: decodeuint": 2,
                "word: definition": 1,
                "word: delivering": 4,
                "word: shstrndx": 1,
                "word: encodeuint": 2,
                "word: enoptrdata": 1,
                "word: enterscope": 2,
                "word: enumerable": 2,
                "word: escapehtml": 1,
                "word: extensible": 1,
                "word: findobject": 3,
                "word: fixsigcode": 1,
                "word: fmtboolean": 2,
                "word: fmtcomplex": 2,
                "word: fmtinteger": 3,
                "word: fmtpointer": 2,
                "word: fmtunicode": 2,
                "word: framestore": 1,
                "word: freemanual": 2,
                "word: trigger": 2,
                "word: gcdatamask": 1,
                "word: gcmarkbits": 1,
                "word: gcscandone": 2,
                "word: getbinding": 4,
                "word: gosigstack": 1,
                "word: goodargnum": 1,
                "word: hasbinding": 4,
                "word: ignorecase": 1,
                "word: infunction": 1,
                "word: insertback": 3,
                "word: invalidptr": 2,
                "word: isblocking": 1,
                "word: iscallable": 2,
                "word: isexported": 4,
                "word: largealloc": 2,
                "word: leavescope": 2,
                "word: loadoffset": 1,
                "word: lookupname": 2,
                "word: matchcount": 2,
                "word: misslocked": 2,
                "word: missingarg": 2,
                "word: modulename": 1,
                "word: ndataroots": 5,
                "word: nspanroots": 5,
                "word: namenonesc": 1,
                "word: nativefile": 1,
                "word: nativeline": 1,
                "word: needextram": 1,
                "word: newarrayof": 2,
                "word: newboolean": 2,
                "word: newconsole": 2,
                "word: newgoarray": 2,
                "word: newgoslice": 2,
                "word: newliteral": 2,
                "word: nlargefree": 2,
                "word: nmspinning": 1,
                "word: nsmallfree": 2,
                "word: offsetanon": 1,
                "word: offsetfreq": 1,
                "word: oldbuckets": 1,
                "word: pagesinuse": 1,
                "word: pagesswept": 1,
                "word: parseclass": 2,
                "word: parseforin": 2,
                "word: parsestate": 1,
                "word: parsethrow": 2,
                "word: pausestack": 1,
                "word: pausestart": 4,
                "word: pluginpath": 1,
                "word: precedence": 1,
                "word: preemptoff": 2,
                "word: prefixrune": 1,
                "word: printvalue": 2,
                "word: properties": 2,
                "word: pushwriter": 2,
                "word: raceignore": 1,
                "word: readheader": 2,
                "word: readunlock": 2,
                "word: readerpass": 1,
                "word: readerwait": 1,
                "word: releaseall": 2,
                "word: removenode": 2,
                "word: removespan": 2,
                "word: rotateleft": 3,
                "word: runtimectx": 1,
                "word: handler": 17,
                "word: safestring": 7,
                "word: savederror": 1,
                "word: scanescape": 3,
                "word: scanstring": 2,
                "word: schedtrace": 3,
                "word: selectdone": 1,
                "word: sendtypeid": 2,
                "word: setbinding": 4,
                "word: sigcontext": 1,
                "word: signallock": 2,
                "word: sleepuntil": 1,
                "word: sourceline": 1,
                "word: sourcesind": 1,
                "word: stacklimit": 1,
                "word: stackcache": 2,
                "word: stacks": 2,
                "word: startcycle": 2,
                "word: storedsize": 1,
                "word: sudogcache": 1,
                "word: sweepspans": 1,
                "word: symstrings": 1,
                "word: sysmonnote": 1,
                "word: sysmontick": 4,
                "word: sysmonwait": 2,
                "word: tsweepterm": 4,
                "word: thisobject": 3,
                "word: throwsplit": 1,
                "word: ticksstart": 2,
                "word: tinyallocs": 2,
                "word: tinyoffset": 1,
                "word: tracelimit": 1,
                "word: tracesweep": 1,
                "word: traceswept": 1,
                "word: tracelastp": 1,
                "word: treapalloc": 1,
                "word: trygetfast": 2,
                "word: typestring": 3,
                "word: userforced": 4,
                "word: valuearray": 2,
                "word: visitqueue": 2,
                "word: waitreason": 4,
                "word: widpresent": 1,
                "word: workbufhdr": 2,
                "word: writeblock": 1,
                "word: writebytes": 1,
                "word: writeclear": 1,
                "word: writeslice": 2,
                "word: atomic": 22,
                "word: gcmasm": 5,
                "word: option": 8,
                "word: typeid": 33,
                "word: process": 18,
                "word: rawconn": 7,
                "word: addcomments": 3,
                "word: ambientcaps": 1,
                "word: atlinebreak": 2,
                "word: containerid": 1,
                "word: contextskip": 3,
                "word: decodevalue": 5,
                "word: encodevalue": 2,
                "word: escapedpath": 2,
                "word: fieldbyname": 17,
                "word: gidmappings": 1,
                "word: gobencodert": 1,
                "word: hasasimdfhm": 1,
                "word: hasasimdrdm": 1,
                "word: initializer": 2,
                "word: isprimitive": 3,
                "word: isundefined": 3,
                "word: latinoffset": 1,
                "word: leftbracket": 1,
                "word: loadorstore": 2,
                "word: markprimary": 2,
                "word: marshaljson": 6,
                "word: marshaltext": 4,
                "word: matchreader": 2,
                "word: matchstring": 2,
                "word: multistream": 3,
                "word: nanoseconds": 3,
                "word: nosetgroups": 1,
                "word: normfloat": 2,
                "word: overflowint": 3,
                "word: setblocking": 2,
                "word: setdeadline": 5,
                "word: setmapindex": 3,
                "word: subexpnames": 3,
                "word: symboltable": 1,
                "word: syntaxerror": 6,
                "word: syscallconn": 2,
                "word: uidmappings": 1,
                "word: withpadding": 3,
                "word: writestring": 10,
                "word: acquiretime": 1,
                "word: allocmanual": 2,
                "word: appendgroup": 2,
                "word: assistqueue": 4,
                "word: bgmarkready": 4,
                "word: bytesmarked": 4,
                "word: checkbucket": 1,
                "word: clearmarked": 1,
                "word: clobberfree": 3,
                "word: codegenfreq": 1,
                "word: configureon": 2,
                "word: createstack": 1,
                "word: dclproperty": 11,
                "word: decodearray": 2,
                "word: decodeslice": 2,
                "word: deferreturn": 2,
                "word: dirtylocked": 2,
                "word: dynamicsize": 1,
                "word: phentsize": 1,
                "word: shentsize": 1,
                "word: encodearray": 2,
                "word: ensureswept": 3,
                "word: enumerateon": 2,
                "word: externaldec": 1,
                "word: externalenc": 1,
                "word: findfunctab": 2,
                "word: finishblock": 2,
                "word: flushedwork": 2,
                "word: gccheckmark": 2,
                "word: gcscanvalid": 3,
                "word: getargument": 2,
                "word: getproperty": 2,
                "word: globalstash": 1,
                "word: hasinstance": 2,
                "word: hasoverflow": 2,
                "word: hasproperty": 2,
                "word: marked": 2,
                "word: ignorearray": 2,
                "word: ignoreslice": 2,
                "word: initeration": 1,
                "word: indextokens": 1,
                "word: indirectkey": 2,
                "word: interval": 1,
                "word: literalfreq": 1,
                "word: maybeconcat": 2,
                "word: millisecond": 1,
                "word: nstackroots": 5,
                "word: nameeschtml": 1,
                "word: newsigstack": 1,
                "word: newurierror": 2,
                "word: newoverflow": 2,
                "word: sample": 1,
                "word: nlargealloc": 1,
                "word: noldbuckets": 2,
                "word: npausesweep": 1,
                "word: numbervalue": 2,
                "word: numforcedgc": 1,
                "word: objectclass": 3,
                "word: objectstash": 22,
                "word: offsetembed": 1,
                "word: oldoverflow": 2,
                "word: overflowbuf": 1,
                "word: parseescape": 2,
                "word: parserepeat": 2,
                "word: parsesource": 2,
                "word: passwordset": 1,
                "word: precpresent": 1,
                "word: preemptible": 2,
                "word: preemptscan": 1,
                "word: prefixbytes": 1,
                "word: prepareread": 2,
                "word: pushbackall": 2,
                "word: readhuffman": 2,
                "word: readmessage": 2,
                "word: readercount": 1,
                "word: recvmessage": 2,
                "word: regexpvalue": 2,
                "word: releasetime": 4,
                "word: rotateright": 3,
                "word: runtimehash": 1,
                "word: restorer": 1,
                "word: safepointfn": 1,
                "word: safetovalue": 3,
                "word: scanbracket": 2,
                "word: scannewline": 2,
                "word: scavengeall": 2,
                "word: scheddetail": 2,
                "word: setoverflow": 2,
                "word: shouldvisit": 2,
                "word: speciallock": 1,
                "word: stackguard": 2,
                "word: startbucket": 1,
                "word: stdoutorerr": 1,
                "word: storelocked": 2,
                "word: stringbytes": 2,
                "word: stringvalue": 2,
                "word: stringslock": 2,
                "word: sweeparenas": 1,
                "word: syscalltick": 2,
                "word: syscallwhen": 1,
                "word: textsectmap": 1,
                "word: uncachespan": 2,
                "word: unknowntype": 2,
                "word: unusedsince": 1,
                "word: valuequoted": 2,
                "word: waittraceev": 1,
                "word: waitunlockf": 1,
                "word: wakeupextra": 2,
                "word: wholeregexp": 1,
                "word: writetokens": 1,
                "word: writeunlock": 2,
                "word: internal": 182,
                "word: decoder": 63,
                "word: maptype": 15,
                "word: writerto": 1,
                "word: fileinfo": 5,
                "word: filemode": 11,
                "word: procattr": 1,
                "word: filestat": 9,
                "word: script": 7,
                "word: parser": 321,
                "word: locker": 2,
                "word: uintreg": 1,
                "word: dataio": 4,
                "word: apcjeahzbjdt": 2,
                "word: appendformat": 3,
                "word: argumentlist": 6,
                "word: assignableto": 13,
                "word: behhorbdyjii": 2,
                "word: caninterface": 3,
                "word: contextlimit": 3,
                "word: dzueoxstyhid": 5,
                "word: decodestring": 3,
                "word: defaultvalue": 2,
                "word: discriminant": 2,
                "word: enableassets": 2,
                "word: expandstring": 2,
                "word: fieldbyindex": 16,
                "word: findallindex": 3,
                "word: findsubmatch": 2,
                "word: fixeddecimal": 3,
                "word: haspclmulqdq": 1,
                "word: keysbyparent": 4,
                "word: markcomments": 2,
                "word: matchrunepos": 3,
                "word: methodbyname": 15,
                "word: movecomments": 3,
                "word: overflowuint": 3,
                "word: qewvmtofjryg": 2,
                "word: readdirnames": 4,
                "word: rightbracket": 1,
                "word: runtimeerror": 6,
                "word: unshareflags": 1,
                "word: xlalophphauk": 2,
                "word: xorkeystream": 2,
                "word: zijtnxlcaznk": 2,
                "word: aescipherasm": 5,
                "word: assignbucket": 2,
                "word: atomicstatus": 3,
                "word: bgscancredit": 1,
                "word: buckhash": 1,
                "word: configurable": 2,
                "word: configureoff": 2,
                "word: configureset": 1,
                "word: decodesingle": 2,
                "word: decodestruct": 2,
                "word: decodercache": 1,
                "word: decompressor": 14,
                "word: deferpoolbuf": 1,
                "word: dequeuesudog": 2,
                "word: encodesingle": 2,
                "word: encodestruct": 2,
                "word: enlistworker": 2,
                "word: enumerateoff": 2,
                "word: enumerateset": 2,
                "word: errorcontext": 1,
                "word: exportnative": 2,
                "word: formatheader": 2,
                "word: functionlist": 1,
                "word: gcassisttime": 1,
                "word: gcpacertrace": 2,
                "word: globalobject": 1,
                "word: goidcacheend": 1,
                "word: hasprimitive": 1,
                "word: objects": 1,
                "word: huffmanblock": 2,
                "word: idlemarktime": 1,
                "word: ignoresingle": 2,
                "word: ignorestruct": 2,
                "word: ignorercache": 1,
                "word: lastrunesize": 1,
                "word: linktimehash": 1,
                "word: literalstore": 2,
                "word: madvdontneed": 2,
                "word: markdonesema": 4,
                "word: markrootjobs": 4,
                "word: markrootnext": 4,
                "word: messagevalue": 2,
                "word: modulehashes": 1,
                "word: morepointers": 1,
                "word: newevalerror": 2,
                "word: newreference": 4,
                "word: newtypeerror": 2,
                "word: nextcharfreq": 1,
                "word: nextoverflow": 1,
                "word: nextpairfreq": 1,
                "word: nmidlelocked": 2,
                "word: objectcoerce": 2,
                "word: onepassrunes": 2,
                "word: operandcount": 2,
                "word: overflowtime": 1,
                "word: paniconfault": 1,
                "word: parseprogram": 4,
                "word: pickfreespan": 2,
                "word: preparepanic": 2,
                "word: preparewrite": 2,
                "word: prescavenged": 2,
                "word: producttable": 1,
                "word: propertylist": 1,
                "word: propertymode": 2,
                "word: reclaimchunk": 2,
                "word: reclaimindex": 1,
                "word: reflectvalue": 2,
                "word: reflexivekey": 2,
                "word: rescheduling": 1,
                "word: samesizegrow": 2,
                "word: scanmantissa": 2,
                "word: setglobalref": 2,
                "word: shutdownsema": 2,
                "word: sweepwaiters": 4,
                "word: sysexitticks": 1,
                "word: takeoverflow": 2,
                "word: timersbucket": 7,
                "word: tovaluearray": 2,
                "word: triggerratio": 1,
                "word: trybacktrack": 2,
                "word: trywritecopy": 2,
                "word: variablelist": 1,
                "word: waitcanceled": 1,
                "word: waslinebreak": 1,
                "word: writemessage": 2,
                "word: writepadding": 2,
                "word: compress": 76,
                "word: readop": 1,
                "word: emitlog": 3,
                "word: byfreq": 8,
                "word: stringer": 2,
                "word: decinstr": 2,
                "word: encinstr": 2,
                "word: goberror": 1,
                "word: typeinfo": 14,
                "word: byindex": 7,
                "word: encopts": 2,
                "word: scanner": 11,
                "word: linkerror": 4,
                "word: patherror": 5,
                "word: lazybuf": 4,
                "word: fdmutex": 6,
                "word: sourcemap": 38,
                "word: rwmutex": 20,
                "word: userinfo": 6,
                "word: assigndecimal": 2,
                "word: convertibleto": 13,
                "word: dateprototype": 1,
                "word: findallstring": 3,
                "word: interfacedata": 3,
                "word: literalprefix": 2,
                "word: maketypeerror": 3,
                "word: marshalbinary": 7,
                "word: overflowfloat": 4,
                "word: parameterlist": 3,
                "word: setcontrollen": 2,
                "word: setentrypoint": 2,
                "word: setexpression": 2,
                "word: setsockoptint": 3,
                "word: unmarshaljson": 2,
                "word: unmarshaltext": 2,
                "word: withsourcemap": 2,
                "word: zeroreadiseof": 1,
                "word: applycomments": 2,
                "word: cgocallersuse": 1,
                "word: checknonempty": 2,
                "word: compilesingle": 2,
                "word: constructsafe": 3,
                "word: convertnumber": 2,
                "word: createbinding": 4,
                "word: decodequantum": 2,
                "word: deletebinding": 4,
                "word: evaluatebreak": 2,
                "word: firstzoneused": 2,
                "word: footerwritten": 2,
                "word: futurekeyword": 1,
                "word: gcassistbytes": 1,
                "word: handlemethods": 2,
                "word: headerwritten": 2,
                "word: incrnoverflow": 2,
                "word: indirectvalue": 2,
                "word: ischeckmarked": 3,
                "word: isspanintreap": 1,
                "word: leadingregexp": 2,
                "word: leadingstring": 2,
                "word: markstarttime": 1,
                "word: missingmethod": 1,
                "word: needkeyupdate": 2,
                "word: needsscavenge": 2,
                "word: newbaseobject": 2,
                "word: newdateobject": 2,
                "word: newrangeerror": 2,
                "word: newtypebuffer": 1,
                "word: nextfreeindex": 2,
                "word: nextstatement": 2,
                "word: oldbucketmask": 2,
                "word: panicurierror": 2,
                "word: parsefunction": 3,
                "word: popparsestate": 2,
                "word: propertynames": 2,
                "word: propertyorder": 1,
                "word: reclaimcredit": 1,
                "word: safepointnote": 1,
                "word: safepointwait": 2,
                "word: sourcerooturl": 1,
                "word: startingtrace": 1,
                "word: waittraceskip": 1,
                "word: stream": 1,
                "word: engine": 131,
                "word: formatter": 1,
                "word: arraytype": 9,
                "word: decbuffer": 8,
                "word: decengine": 12,
                "word: dechelper": 7,
                "word: encbuffer": 7,
                "word: encengine": 1,
                "word: enchelper": 6,
                "word: fieldtype": 5,
                "word: slicetype": 41,
                "word: bytereader": 1,
                "word: readcloser": 1,
                "word: readerfrom": 1,
                "word: runereader": 3,
                "word: polldesc": 13,
                "word: lessswap": 1,
                "word: readonly": 1,
                "word: instop": 3,
                "word: ranges": 8,
                "word: duration": 20,
                "word: arrayprototype": 1,
                "word: callerlocation": 3,
                "word: encodetostring": 2,
                "word: errorprototype": 1,
                "word: makerangeerror": 3,
                "word: referenceerror": 1,
                "word: replaceallfunc": 3,
                "word: resetlinebreak": 2,
                "word: roundedinteger": 2,
                "word: setsockoptbyte": 3,
                "word: textmarshalert": 1,
                "word: statementnode": 41,
                "word: addtimerlocked": 3,
                "word: allocfreetrace": 2,
                "word: arenahintalloc": 1,
                "word: arrayinterface": 2,
                "word: cancheckprefix": 4,
                "word: canwriterecord": 2,
                "word: runoreval": 3,
                "word: compatibletype": 2,
                "word: convertnumeric": 2,
                "word: createoverflow": 2,
                "word: decignoreopfor": 8,
                "word: defineproperty": 3,
                "word: deltimerlocked": 3,
                "word: enumeratevalue": 2,
                "word: evaluatedivide": 2,
                "word: evaluatemodulo": 1,
                "word: freespanlocked": 6,
                "word: gcbgmarkworker": 4,
                "word: gcstoptheworld": 2,
                "word: getownproperty": 2,
                "word: gobdecodeopfor": 3,
                "word: hasownproperty": 3,
                "word: hashmightpanic": 2,
                "word: heaparenaalloc": 1,
                "word: increfandclose": 2,
                "word: isnumberobject": 1,
                "word: isstringobject": 1,
                "word: manualfreelist": 1,
                "word: maxbitstatelen": 2,
                "word: mustbeexported": 2,
                "word: newarrayobject": 2,
                "word: newclassobject": 2,
                "word: newerrorobject": 3,
                "word: newgomapobject": 3,
                "word: newobjectstash": 2,
                "word: newsyntaxerror": 2,
                "word: offsetencoding": 1,
                "word: panictypeerror": 2,
                "word: parseclasschar": 2,
                "word: parsedotmember": 2,
                "word: parseperlflags": 2,
                "word: parsestatement": 4,
                "word: physpagebounds": 2,
                "word: prefixcomplete": 1,
                "word: primitivevalue": 2,
                "word: procresizetime": 1,
                "word: pushparsestate": 2,
                "word: runsafepointfn": 2,
                "word: scanidentifier": 2,
                "word: scavengecredit": 1,
                "word: sendactualtype": 2,
                "word: setcheckmarked": 2,
                "word: skipwhitespace": 2,
                "word: sysblocktraced": 1,
                "word: timeoutmonitor": 3,
                "word: toreflectvalue": 2,
                "word: tracebufheader": 2,
                "word: tracereclaimed": 1,
                "word: truncatestring": 2,
                "word: tryloadorstore": 2,
                "word: valueinterface": 3,
                "word: writeblockhuff": 1,
                "word: resetter": 1,
                "word: gostringer": 1,
                "word: gobdecoder": 2,
                "word: gobencoder": 1,
                "word: structtype": 46,
                "word: writecloser": 1,
                "word: marshaler": 2,
                "word: jsonerror": 3,
                "word: newfilekind": 1,
                "word: compiler": 18,
                "word: ecmatime": 3,
                "word: rngsource": 4,
                "word: registry": 14,
                "word: dbgvar": 7,
                "word: elfsym": 3,
                "word: gqueue": 14,
                "word: gcbits": 5,
                "word: gcmode": 4,
                "word: gcwork": 14,
                "word: lfnode": 3,
                "word: mtreap": 10,
                "word: mstats": 4,
                "word: schedt": 1,
                "word: sigset": 1,
                "word: stackt": 1,
                "word: tmpbuf": 1,
                "word: waitgroup": 10,
                "word: poollocal": 3,
                "word: emptyop": 2,
                "word: ipmreq": 2,
                "word: msghdr": 2,
                "word: zonetrans": 7,
                "word: keyword": 10,
                "word: unsafe": 43,
                "word: debuggerenabled": 1,
                "word: declarationlist": 3,
                "word: fieldbynamefunc": 16,
                "word: findallsubmatch": 3,
                "word: findreaderindex": 2,
                "word: findstringindex": 2,
                "word: leftparenthesis": 1,
                "word: makecustomerror": 3,
                "word: makesyntaxerror": 3,
                "word: matchemptywidth": 3,
                "word: numberprototype": 1,
                "word: objectprototype": 1,
                "word: overflowcomplex": 3,
                "word: postprocessnode": 2,
                "word: regexpprototype": 1,
                "word: setrandomsource": 3,
                "word: setreaddeadline": 5,
                "word: shortestdecimal": 2,
                "word: stringprototype": 1,
                "word: unmarshalbinary": 7,
                "word: expressionnode": 40,
                "word: adderrorcontext": 2,
                "word: addlostatomic": 1,
                "word: allocspanlocked": 2,
                "word: codegenencoding": 1,
                "word: decodeinterface": 2,
                "word: encodeinterface": 2,
                "word: errorunexpected": 2,
                "word: exportedmethods": 3,
                "word: formatwithstack": 2,
                "word: fraction": 1,
                "word: generatecodegen": 1,
                "word: getdecengineptr": 2,
                "word: ignoreinterface": 2,
                "word: initialheaplive": 5,
                "word: insertsemicolon": 1,
                "word: isbooleanobject": 1,
                "word: literalencoding": 1,
                "word: lookupfirstzone": 2,
                "word: markbitsforbase": 2,
                "word: newdecoderstate": 2,
                "word: newencoderstate": 2,
                "word: newnodefunction": 2,
                "word: newnumberobject": 2,
                "word: newregexpobject": 2,
                "word: newstringobject": 3,
                "word: objectinterface": 2,
                "word: pagessweptbasis": 1,
                "word: panicrangeerror": 2,
                "word: parseexpression": 4,
                "word: parseidentifier": 2,
                "word: parsenamedclass": 2,
                "word: parserightparen": 2,
                "word: persistentalloc": 7,
                "word: prepareforsweep": 3,
                "word: recoveryhandler": 2,
                "word: scavengelargest": 2,
                "word: stackworkbufhdr": 2,
                "word: swapverticalbar": 2,
                "word: thisclassobject": 2,
                "word: typeerrorresult": 2,
                "word: unexpungelocked": 2,
                "word: fmtsort": 12,
                "word: testlog": 6,
                "word: declaration": 3,
                "word: ifstatement": 6,
                "word: nullliteral": 6,
                "word: dbgfunction": 3,
                "word: emitlogger": 3,
                "word: emitwriter": 3,
                "word: byliteral": 8,
                "word: levelinfo": 3,
                "word: emptystruct": 1,
                "word: stringwriter": 1,
                "word: mapencoder": 5,
                "word: ptrencoder": 4,
                "word: tagoptions": 3,
                "word: processstate": 19,
                "word: syscallerror": 5,
                "word: exception": 2,
                "word: mapiter": 8,
                "word: imethod": 4,
                "word: ptrtype": 34,
                "word: typealg": 4,
                "word: bitstate": 4,
                "word: lazyflag": 3,
                "word: elfehdr": 1,
                "word: evacdst": 3,
                "word: funcinl": 3,
                "word: functab": 2,
                "word: funcval": 3,
                "word: lfstack": 13,
                "word: profbuf": 10,
                "word: sigtabt": 7,
                "word: sigctxt": 32,
                "word: siginfo": 4,
                "word: timeval": 5,
                "word: workbuf": 3,
                "word: decimal": 15,
                "word: builder": 15,
                "word: ipmreqn": 2,
                "word: mmapper": 5,
                "word: parseerror": 4,
                "word: escapeerror": 3,
                "word: binarymarshalert": 1,
                "word: booleanprototype": 1,
                "word: declarenamespace": 2,
                "word: replaceallstring": 3,
                "word: resolvereference": 2,
                "word: rightparenthesis": 1,
                "word: setwritedeadline": 5,
                "word: setsockoptipmreq": 3,
                "word: setsockoptlinger": 3,
                "word: declarationnode": 3,
                "word: decodegobdecoder": 2,
                "word: encodegobencoder": 2,
                "word: enterglobalscope": 2,
                "word: evaluatemultiply": 1,
                "word: freedecoderstate": 2,
                "word: freeencoderstate": 2,
                "word: gcmarkworkermode": 3,
                "word: gcshrinkstackoff": 2,
                "word: ignoregobdecoder": 2,
                "word: isdatadescriptor": 2,
                "word: nanotime": 3,
                "word: literalinterface": 2,
                "word: markbitsforindex": 2,
                "word: markworkerlabels": 2,
                "word: mustbeassignable": 2,
                "word: nflushcacheroots": 4,
                "word: newbooleanobject": 2,
                "word: newboundfunction": 2,
                "word: newfunctionstash": 2,
                "word: newgoarrayobject": 3,
                "word: newgosliceobject": 3,
                "word: panicsyntaxerror": 2,
                "word: parseifstatement": 2,
                "word: parseverticalbar": 2,
                "word: refillalloccache": 2,
                "word: replacerfunction": 1,
                "word: trycatchevaluate": 3,
                "word: tryexpungelocked": 2,
                "word: trygrowbyreslice": 3,
                "word: writefixedheader": 1,
                "word: keysizeerror": 3,
                "word: aesciphergcm": 5,
                "word: arrayliteral": 4,
                "word: badstatement": 4,
                "word: forstatement": 6,
                "word: trystatement": 6,
                "word: cachelinepad": 6,
                "word: nativevar": 10,
                "word: decoderstate": 4,
                "word: encoderstate": 7,
                "word: usertypeinfo": 5,
                "word: limitedreader": 4,
                "word: unmarshaler": 1,
                "word: decodestate": 19,
                "word: encodestate": 29,
                "word: encoderfunc": 2,
                "word: dateobject": 9,
                "word: numberkind": 1,
                "word: resultkind": 1,
                "word: stringwide": 7,
                "word: errorlist": 15,
                "word: cachekey": 1,
                "word: runeslice": 7,
                "word: arenaidx": 2,
                "word: chantype": 1,
                "word: divmagic": 3,
                "word: finblock": 3,
                "word: fixalloc": 6,
                "word: guintptr": 7,
                "word: heapbits": 12,
                "word: mapextra": 1,
                "word: markbits": 7,
                "word: muintptr": 6,
                "word: parkinfo": 1,
                "word: puintptr": 3,
                "word: semaroot": 17,
                "word: stackmap": 3,
                "word: stkframe": 3,
                "word: textsect": 2,
                "word: timespec": 6,
                "word: vdsoinfo": 2,
                "word: stringslice": 11,
                "word: numerror": 4,
                "word: extfloat": 25,
                "word: asciiset": 3,
                "word: errorcode": 3,
                "word: chargroup": 5,
                "word: patchlist": 4,
                "word: socklen": 2,
                "word: foldpair": 3,
                "word: acceptrange": 3,
                "word: findsubmatchindex": 2,
                "word: functionprototype": 1,
                "word: replaceallliteral": 3,
                "word: setsockoptipmreqn": 3,
                "word: urierrorprototype": 1,
                "word: allocbitsforindex": 2,
                "word: assistworkperbyte": 1,
                "word: parseorthrow": 2,
                "word: decodearrayhelper": 2,
                "word: dedicatedmarktime": 1,
                "word: defineownproperty": 2,
                "word: forwardorboundary": 2,
                "word: ignorearrayhelper": 2,
                "word: implicitsemicolon": 1,
                "word: incrementoverflow": 2,
                "word: initcheckmarkspan": 2,
                "word: newgostructobject": 3,
                "word: newnativefunction": 2,
                "word: newreferenceerror": 2,
                "word: optionalsemicolon": 2,
                "word: parseargumentlist": 2,
                "word: parsearrayliteral": 2,
                "word: parsetrystatement": 2,
                "word: parseunicodeclass": 2,
                "word: poollocalinternal": 4,
                "word: regularexpression": 1,
                "word: stackobjectbufhdr": 2,
                "word: sweeppagesperbyte": 1,
                "word: writeblockdynamic": 1,
                "word: writestoredheader": 1,
                "word: badexpression": 4,
                "word: casestatement": 6,
                "word: dotexpression": 6,
                "word: newexpression": 4,
                "word: numberliteral": 6,
                "word: objectliteral": 4,
                "word: regexpliteral": 6,
                "word: stringliteral": 6,
                "word: withstatement": 6,
                "word: nativefunc": 8,
                "word: nativetype": 9,
                "word: dictdecoder": 11,
                "word: literalnode": 4,
                "word: sortedmap": 4,
                "word: arrayencoder": 4,
                "word: floatencoder": 4,
                "word: sliceencoder": 4,
                "word: functioncall": 12,
                "word: gomapobject": 3,
                "word: nodeliteral": 4,
                "word: nodeprogram": 5,
                "word: stringascii": 7,
                "word: timeouterror": 4,
                "word: lockedsource": 8,
                "word: structtag": 5,
                "word: bitvector": 5,
                "word: fieldscan": 4,
                "word: layoutkey": 1,
                "word: inputbytes": 6,
                "word: typepair": 6,
                "word: arenahint": 3,
                "word: elfverdef": 1,
                "word: finalizer": 5,
                "word: gctrigger": 4,
                "word: gclinkptr": 2,
                "word: heaparena": 6,
                "word: itimerval": 1,
                "word: mspanlist": 23,
                "word: memrecord": 1,
                "word: notinheap": 4,
                "word: pollcache": 3,
                "word: profindex": 3,
                "word: ptabentry": 2,
                "word: sweepdata": 3,
                "word: treapiter": 5,
                "word: treapnode": 6,
                "word: mapping": 2,
                "word: floatinfo": 3,
                "word: leftcheat": 7,
                "word: caserange": 3,
                "word: evalerrorprototype": 1,
                "word: findallstringindex": 3,
                "word: findstringsubmatch": 2,
                "word: setdebuggerhandler": 3,
                "word: setstackdepthlimit": 3,
                "word: setstacktracelimit": 3,
                "word: setsockoptipv": 3,
                "word: typeerrorprototype": 1,
                "word: assistbytesperwork": 1,
                "word: blockuntilwaitable": 2,
                "word: canwritetworecords": 2,
                "word: clearcheckmarkspan": 2,
                "word: decodeignoredvalue": 2,
                "word: decodetypesequence": 2,
                "word: enterfunctionscope": 2,
                "word: fractionalmarktime": 1,
                "word: getignoreengineptr": 2,
                "word: havetemplatethread": 4,
                "word: newargumentsobject": 2,
                "word: newprimitiveobject": 2,
                "word: parsebracketmember": 2,
                "word: parsecasestatement": 2,
                "word: parsefunctionblock": 3,
                "word: parsenewexpression": 2,
                "word: parseobjectliteral": 2,
                "word: parseparameterlist": 1,
                "word: parseregexpliteral": 2,
                "word: parsesourceelement": 2,
                "word: parsestatementlist": 2,
                "word: parsewithstatement": 2,
                "word: scannumericliteral": 2,
                "word: sendtypedescriptor": 2,
                "word: setmarkednonatomic": 2,
                "word: skiplinewhitespace": 1,
                "word: sweepheaplivebasis": 1,
                "word: tracebackancestors": 2,
                "word: writedynamicheader": 1,
                "word: blockstatement": 4,
                "word: booleanliteral": 6,
                "word: callexpression": 4,
                "word: catchstatement": 6,
                "word: emptystatement": 4,
                "word: forinstatement": 6,
                "word: thisexpression": 4,
                "word: throwstatement": 6,
                "word: whilestatement": 6,
                "word: nativeconst": 10,
                "word: nativefield": 7,
                "word: errorstring": 7,
                "word: gobencodertype": 8,
                "word: structencoder": 4,
                "word: unquotedvalue": 1,
                "word: nodeproperty": 4,
                "word: regexpobject": 3,
                "word: stringobject": 1,
                "word: valueerror": 4,
                "word: layouttype": 1,
                "word: inputreader": 8,
                "word: inputstring": 6,
                "word: onepassinst": 6,
                "word: onepassprog": 3,
                "word: adjustinfo": 1,
                "word: buckettype": 1,
                "word: cpuprofile": 6,
                "word: epollevent": 3,
                "word: gcsweepbuf": 11,
                "word: mspanstate": 1,
                "word: moduledata": 3,
                "word: modulehash": 4,
                "word: plainerror": 5,
                "word: profatomic": 3,
                "word: randomenum": 4,
                "word: sigactiont": 3,
                "word: tracealloc": 4,
                "word: tracestack": 4,
                "word: consumer": 8,
                "word: waitstatus": 19,
                "word: filesizeerror": 3,
                "word: rangetable": 6,
                "word: assigncomputebounds": 2,
                "word: importnativepackage": 2,
                "word: rangeerrorprototype": 1,
                "word: setsockoptinet": 3,
                "word: calculatecomparison": 2,
                "word: compileignoresingle": 2,
                "word: indexofargumentname": 1,
                "word: isgenericdescriptor": 2,
                "word: newdeclarationstash": 2,
                "word: panicreferenceerror": 2,
                "word: parseblockstatement": 2,
                "word: parsebreakstatement": 2,
                "word: parsecallexpression": 2,
                "word: parseemptystatement": 2,
                "word: parseobjectproperty": 2,
                "word: parsesourceelements": 2,
                "word: parsethrowstatement": 2,
                "word: parsewhilestatement": 2,
                "word: removeleadingregexp": 2,
                "word: removeleadingstring": 2,
                "word: specialprofilealloc": 1,
                "word: branchstatement": 4,
                "word: commentposition": 6,
                "word: emptyexpression": 4,
                "word: functionliteral": 4,
                "word: returnstatement": 6,
                "word: switchstatement": 4,
                "word: unaryexpression": 6,
                "word: streamreader": 5,
                "word: slicing": 1,
                "word: internalerror": 3,
                "word: marshalererror": 4,
                "word: lnxysceewlyhmx": 28,
                "word: goarrayobject": 5,
                "word: gosliceobject": 3,
                "word: nodestatement": 7,
                "word: structfield": 10,
                "word: methodvalue": 1,
                "word: sliceheader": 2,
                "word: queueonepass": 9,
                "word: blockrecord": 1,
                "word: gcbitsarena": 6,
                "word: linearalloc": 2,
                "word: randomorder": 3,
                "word: stackobject": 4,
                "word: tracebufptr": 8,
                "word: rawsockaddr": 1,
                "word: sysprocattr": 1,
                "word: compilewithsourcemap": 2,
                "word: findallsubmatchindex": 3,
                "word: replaceallstringfunc": 3,
                "word: syntaxerrorprototype": 1,
                "word: convertcallparameter": 6,
                "word: errorunexpectedtoken": 2,
                "word: findrunnablegcworker": 3,
                "word: gcfractionalmarktime": 1,
                "word: indexofparametername": 1,
                "word: isaccessordescriptor": 2,
                "word: parseperlclassescape": 2,
                "word: parsereturnstatement": 2,
                "word: parseshiftexpression": 3,
                "word: parseswitchstatement": 3,
                "word: parseunaryexpression": 3,
                "word: readmultilinecomment": 2,
                "word: retrieveassetasbytes": 3,
                "word: skipmultilinecomment": 2,
                "word: assignexpression": 6,
                "word: binaryexpression": 6,
                "word: dowhilestatement": 6,
                "word: nativepackage": 8,
                "word: huffmandecoder": 2,
                "word: huffmanencoder": 4,
                "word: invalidbyteerror": 3,
                "word: condaddrencoder": 4,
                "word: gostructobject": 4,
                "word: lessthanresult": 7,
                "word: nativefunction": 1,
                "word: nodeexpression": 6,
                "word: nodeidentifier": 4,
                "word: propertygetset": 1,
                "word: stashreference": 7,
                "word: makefuncimpl": 1,
                "word: stringheader": 1,
                "word: uncommontype": 9,
                "word: ancestorinfo": 2,
                "word: forcegcstate": 3,
                "word: gcdrainflags": 1,
                "word: gsignalstack": 1,
                "word: pcvaluecache": 1,
                "word: stackworkbuf": 1,
                "word: stringstruct": 1,
                "word: decimalslice": 3,
                "word: sockaddrunix": 4,
                "word: sysprocidmap": 2,
                "word: invalidhosterror": 3,
                "word: findallstringsubmatch": 3,
                "word: importstandardlibrary": 2,
                "word: loadscriptwithtimeout": 2,
                "word: assignencodingandsize": 2,
                "word: disallowunknownfields": 1,
                "word: evaluatebreakcontinue": 2,
                "word: gcmarkworkerstarttime": 1,
                "word: newnodefunctionobject": 3,
                "word: parsedowhilestatement": 3,
                "word: readsinglelinecomment": 2,
                "word: retrieveassetasstring": 3,
                "word: skipsinglelinecomment": 2,
                "word: specialfinalizeralloc": 1,
                "word: bracketexpression": 6,
                "word: debuggerstatement": 4,
                "word: functionstatement": 4,
                "word: labelledstatement": 6,
                "word: variablestatement": 4,
                "word: argumentsobject": 5,
                "word: nodedeclaration": 4,
                "word: nodeifstatement": 6,
                "word: interfacetype": 33,
                "word: onepassmachine": 1,
                "word: gctriggerkind": 1,
                "word: itabtabletype": 5,
                "word: stackfreelist": 3,
                "word: tracestackptr": 3,
                "word: vdsosymbolkey": 7,
                "word: sockaddrinet": 6,
                "word: addcountsandclearflags": 2,
                "word: nodefunction": 2,
                "word: frompropertydescriptor": 2,
                "word: newboundfunctionobject": 2,
                "word: parsecontinuestatement": 2,
                "word: parsedebuggerstatement": 2,
                "word: parsefunctionstatement": 2,
                "word: parseobjectpropertykey": 2,
                "word: parsepostfixexpression": 2,
                "word: parseprimaryexpression": 2,
                "word: parsevariablestatement": 2,
                "word: vmretrieveassetasbytes": 1,
                "word: sequenceexpression": 4,
                "word: variableexpression": 8,
                "word: textmarshaler": 1,
                "word: huffmanbitwriter": 1,
                "word: reflectwithstring": 6,
                "word: defaultvaluehint": 2,
                "word: nodearrayliteral": 4,
                "word: nodeforstatement": 4,
                "word: nodetrystatement": 10,
                "word: emptyinterface": 1,
                "word: functypefixed": 204,
                "word: cgothreadstart": 1,
                "word: memrecordcycle": 4,
                "word: stackobjectbuf": 1,
                "word: stackscanstate": 7,
                "word: vdsoversionkey": 3,
                "word: rawsockaddrany": 1,
                "word: callfunctionwithtimeout": 2,
                "word: findreadersubmatchindex": 2,
                "word: findstringsubmatchindex": 2,
                "word: referenceerrorprototype": 1,
                "word: replaceallliteralstring": 3,
                "word: sources": 2,
                "word: newnativefunctionobject": 5,
                "word: parseadditiveexpression": 3,
                "word: parseequalityexpression": 3,
                "word: parseiterationstatement": 3,
                "word: vmretrieveassetasstring": 1,
                "word: expressionstatement": 4,
                "word: functiondeclaration": 4,
                "word: variabledeclaration": 4,
                "word: corruptinputerror": 6,
                "word: unmarshaltypeerror": 4,
                "word: constructfunction": 1,
                "word: nodecasestatement": 4,
                "word: nodedotexpression": 6,
                "word: nodenewexpression": 4,
                "word: nodeobjectliteral": 5,
                "word: noderegexpliteral": 4,
                "word: nodewithstatement": 7,
                "word: propertyreference": 7,
                "word: cgotracebackarg": 1,
                "word: pcvaluecacheent": 5,
                "word: tracestacktable": 7,
                "word: rawsockaddrunix": 1,
                "word: sockaddrnetlink": 2,
                "word: parsebitwiseorexpression": 3,
                "word: parsefororforinstatement": 2,
                "word: parselogicalorexpression": 2,
                "word: parsevariabledeclaration": 2,
                "word: binarymarshaler": 1,
                "word: textunmarshaler": 1,
                "word: bindfunctionobject": 2,
                "word: nodeblockstatement": 2,
                "word: nodecallexpression": 5,
                "word: nodecatchstatement": 4,
                "word: nodeemptystatement": 2,
                "word: nodeforinstatement": 5,
                "word: nodefunctionobject": 3,
                "word: nodethisexpression": 2,
                "word: nodethrowstatement": 2,
                "word: nodewhilestatement": 4,
                "word: cgosymbolizerarg": 1,
                "word: semaprofileflags": 1,
                "word: specialfinalizer": 3,
                "word: rawsockaddrinet": 2,
                "word: calculatebinaryexpression": 2,
                "word: evaluate": 64,
                "word: fractionalutilizationgoal": 1,
                "word: parseassignmentexpression": 3,
                "word: parsebitwiseandexpression": 3,
                "word: parseconditionlexpression": 2,
                "word: parselogicalandexpression": 3,
                "word: parserelationalexpression": 4,
                "word: conditionalexpression": 6,
                "word: unsupportedtypeerror": 2,
                "word: nodebranchstatement": 4,
                "word: nodefunctionliteral": 3,
                "word: nodereturnstatement": 2,
                "word: nodeswitchstatement": 4,
                "word: nodeunaryexpression": 6,
                "word: gccontrollerstate": 9,
                "word: sliceinterfaceptr": 1,
                "word: stackobjectrecord": 2,
                "word: sockaddrlinklayer": 4,
                "word: findallstringsubmatchindex": 3,
                "word: gidmappingsenablesetgroups": 1,
                "word: dedicatedmarkworkersneeded": 1,
                "word: parsefunctionparameterlist": 2,
                "word: binaryunmarshaler": 1,
                "word: invalidunmarshalerror": 2,
                "word: unsupportedvalueerror": 4,
                "word: nativefunctionobject": 1,
                "word: nodeassignexpression": 6,
                "word: nodebinaryexpression": 8,
                "word: nodedowhilestatement": 4,
                "word: typeassertionerror": 5,
                "word: stringinterfaceptr": 1,
                "word: traceallocblockptr": 2,
                "word: interfaceptr": 3,
                "word: rawsockaddrnetlink": 1,
                "word: lnxysceewlyhmxcqklpzmadupzx": 3,
                "word: lnxysceewlyhmxgsbtltkymhlel": 3,
                "word: lnxysceewlyhmxhbzsiaieqovhi": 3,
                "word: lnxysceewlyhmxkpvmbzurtdtya": 3,
                "word: lnxysceewlyhmxlecusrecpvoep": 3,
                "word: lnxysceewlyhmxrybwrxabalmmq": 3,
                "word: lnxysceewlyhmxxmiyxhydtesyq": 3,
                "word: parselefthandsideexpression": 2,
                "word: github": 1452,
                "word: robertkrimen": 1379,
                "word: nodebracketexpression": 6,
                "word: nodedebuggerstatement": 2,
                "word: nodelabelledstatement": 4,
                "word: nodevariablestatement": 2,
                "word: parsevariabledeclarationlist": 2,
                "word: nodesequenceexpression": 4,
                "word: nodevariableexpression": 6,
                "word: rawsockaddrlinklayer": 1,
                "word: sourceroot": 2,
                "word: parsemultiplicativeexpression": 3,
                "word: newlinefilteringreader": 2,
                "word: nodeexpressionstatement": 2,
                "word: lnxysceewlyhmxjcqxibpgjzovuwdu": 3,
                "word: builtinjson": 12,
                "word: parsecontext": 2,
                "word: nodestatementlist": 2,
                "word: nodeconditionalexpression": 6,
                "word: parsebitwiseexclusiveorexpression": 3,
                "word: gscript": 73,
                "word: stringifycontext": 2,
                "word: parselefthandsideexpressionallowcall": 3,
                "word: cefglmnpsz": 1,
                "word: cccfcocsdoiflllmloltlumcmemnndnlnoospipcpdpepfpipopsscsksmsotzyizlzpzs": 1,
                "word: ifinmsnss": 1,
                "word: apraugdeceoffebforfrihanjanjuljunkeyln": 1,
                "word: laomarmaymonmronannkonovoctop": 1,
                "word: satsepsunthutueutcvaiwed": 1,
                "word: absadxaesavxcosdaydirdupendexpfmaforgc": 1,
                "word: infintletlogmapmaxminnannewnilnowobjpc": 1,
                "word: poppowptrsetsintantryu": 1,
                "word: archahomcallchamdashdateg": 1,
                "word: sgogcjsonjulyjuneln": 1,
                "word: lisumathmiaomodinullnewathaiwith": 1,
                "word: acosasinatanavx": 1,
                "word: basebindbmi": 1,
                "word: boolcallcap": 1,
                "word: caseceilchandeaddropelseenumermsevalexecfailfilefunchouridleinfoint": 1,
                "word: joinjsonkeyskindnamenew": 1,
                "word: nonenullopenpushquitreadsbrkscvgsealseeksomesortsqrtsse": 1,
                "word: statsynctestthistimetrimtruetypeuintvoidwaitwarnwith": 1,
                "word: adlamaprilarraybamumbatakbuhidcolonerrorfinalgreekkhmerlog": 1,
                "word: elatinlimbulocalmarchnushuoghamoriyaosagerunicsqrt": 1,
                "word: stermtakritamilwhile": 1,
                "word: applyargp": 1,
                "word: arrayatan": 1,
                "word: breakbytescatchchdirchmodchownclasscloseconstdebugerroreveryfalsefaultfcntlfloatfloorgcinggob": 1,
                "word: indexinputint": 1,
                "word: isnanlinuxlstatmatchmonthpanicparseroundrune": 1,
                "word: shiftsleepslicesplitsse": 1,
                "word: stacksuperthrowtraceuint": 1,
                "word: valuewhilewrite": 1,
                "word: chanarabicaugustbrahmicarianchakmacommoncopticcreateformatfridaygorootgothichangulhatranhebrewhyphenkaithikhojkilog": 1,
                "word: elepchalycianlydianmondaynumbernumberobjectregexprejangsched": 1,
                "word: stringstringsundaysyriactai": 1,
                "word: letangutteluguthaana": 1,
                "word: acceptassertbound": 1,
                "word: calleecallerchan": 1,
                "word: charatconcatcreatedeleteefenceempty": 1,
                "word: escapeexportfilterfreezegetdayglobalhangupimportkilledlengthminutenumberobjectpopcntpublicrandomreadatreducereturnrune": 1,
                "word: searchsecondselectsourcesplicestaticstringstructsubstrsweep": 1,
                "word: switchtojsontoken": 1,
                "word: typeofuint": 1,
                "word: waitid": 2,
                "word: avestanbooleanbengalibooleanbraillecommentchandirconvertcypriotdeseretelbasangodebuggoarraygranthahanunooillegalio": 1,
                "word: waitinstaltinstnopjanuarykeywordkannadaleadingmandaicmarchenmultanimyanmaroctoberosmanyaradicalsqrt": 1,
                "word: sharadashaviansiddhamsignal": 1,
                "word: sinhalasoyomboswappertagalogtibetantirhutatuesdayunknown": 1,
                "word: engineabortedaccept": 1,
                "word: booleanclosurecompilecomplexconsolecs": 1,
                "word: defaultextendsfinallyfloat": 1,
                "word: foreachfs": 1,
                "word: gctracegetdategettimegetyeargs": 1,
                "word: indexofinvalidisarraykey": 1,
                "word: messagenop": 1,
                "word: packagepanic": 1,
                "word: privater": 1,
                "word: replacereverserflags": 1,
                "word: runningsetdatesettimesetyearsignal": 1,
                "word: stoppedsyscalltimeendtofixeduintptrunknownunshiftvalueofwaitingwriteat": 1,
                "word: nalloc": 1,
                "word: nfreed": 1,
                "word: packed": 1,
                "word: armenianbalinesebopomofobuginesecherokeecyrillicdecemberduployanethiopicextenderfebruaryfunctiongodebug": 1,
                "word: georgiangostringgujaratigurmukhihiraganainfinityinstfailinstrunejavanesekatakanakayah": 1,
                "word: lilinear": 1,
                "word: alinear": 1,
                "word: bmahajaninovemberol": 1,
                "word: chikiparseintphags": 1,
                "word: pasaturdaytagbanwatai": 1,
                "word: thamtai": 1,
                "word: vietthursdaytifinaghtrailingurierrorugaritic": 1,
                "word: argumentbad": 1,
                "word: instcgocheckcontinuedebuggerfunctiongethoursgetmonthgo": 1,
                "word: infinityinternalisfiniteisfrozenissealedno": 1,
                "word: anodeno": 1,
                "word: erroroppseudoparseintreadlinkrunnableruntime": 1,
                "word: scavengesethourssetmonthsignal": 1,
                "word: tostringtrimlefttruncateunescapeunknown": 1,
                "word: forced": 2,
                "word: defersc": 1,
                "word: threads": 1,
                "word: unknown": 14,
                "word: infinity": 4,
                "word: argumentsbassa": 1,
                "word: vahbhaiksukicallslicecuneiformdiacriticevalerrorg": 1,
                "word: digitinheritedinstmatchinstrune": 1,
                "word: interfacekhudawadilinux": 1,
                "word: valuemin": 1,
                "word: valuemalayalammongoliannabataeanpalmyreneparseboolparseuintsamaritanseptembersundanesetypeerrorwednesday": 1,
                "word: argumentsatomicor": 1,
                "word: indirbus": 1,
                "word: errorchan": 1,
                "word: sendcomplex": 1,
                "word: continuedcopystackctxt": 1,
                "word: decodeuriempty": 1,
                "word: urlencodeurifuncargs": 1,
                "word: getutcdayinterfaceinterruptlastindexlocaltimemspandeadmspanfreemap": 1,
                "word: smultilinenewosprocno": 1,
                "word: errorsomitemptypanicwaitpclmulqdqprotectedprototyperecover": 1,
                "word: rwxrwxrwxsignal": 1,
                "word: stringifysubstringtrimrightundefinedunhandled": 1,
                "word: actual": 1,
                "word: gfreecnt": 1,
                "word: returned": 6,
                "word: runqueue": 1,
                "word: parsing": 2,
                "word: deprecateddevanagarigc": 1,
                "word: gomaxprocsglagoliticidentifierkharoshthimanichaeanold": 1,
                "word: italicold": 1,
                "word: permicold": 1,
                "word: turkicother": 1,
                "word: mathparsefloatphoenicianrangeerrorsaurashtra": 1,
                "word: xdigit": 2,
                "word: reserved": 2,
                "word: atomicand": 1,
                "word: casgstatuscharcodeatcomplex": 1,
                "word: enumerablegetminutesgetsecondsgetutcdategoroutine": 1,
                "word: ignorecaseimplementsinstanceofinvalidptrmspaninuseowner": 1,
                "word: diedparsefloatreaddirentrune": 1,
                "word: gschedtracesemacquiresetminutessetsecondssetutcdateshort": 1,
                "word: readterminatedtracefree": 1,
                "word: tracegc": 3,
                "word: idleprocs": 1,
                "word: stderr": 1,
                "word: stdout": 1,
                "word: opcomment": 1,
                "word: vgotracebackideographicinstcaptureinstruneanynew": 1,
                "word: luenot": 1,
                "word: definedold": 1,
                "word: persianpau": 1,
                "word: hausignwritingsoft": 1,
                "word: dottedsyntaxerrorwarang": 1,
                "word: citiwhite": 1,
                "word: clockbad": 1,
                "word: addressbad": 2,
                "word: messagebad": 1,
                "word: timedivbroken": 1,
                "word: pipecgocall": 1,
                "word: nilclobberfreeconstructorcreated": 1,
                "word: element": 2,
                "word: environmentfile": 1,
                "word: existsfinal": 1,
                "word: tokenfloat": 1,
                "word: gccheckmarkgetfullyeargetutchoursgetutcmonthi": 1,
                "word: timeoutlastindexoflost": 1,
                "word: mcachemspanmanualmethodargs": 1,
                "word: reducerightreflect": 1,
                "word: setruntime": 2,
                "word: scheddetailsetfullyearsetutchourssetutcmonthsetnonblockshort": 1,
                "word: writestack": 1,
                "word: faulttime": 1,
                "word: togmtstringtoisostringtolowercasetoprecisiontoutcstringtouppercasetracealloc": 1,
                "word: unreachablevalue": 1,
                "word: mintrigger": 1,
                "word: consumed": 1,
                "word: controli": 1,
                "word: possibleinstaltmatchinvalid": 1,
                "word: datejoin": 1,
                "word: controlmeetei": 1,
                "word: mayekpahawh": 1,
                "word: hmongsora": 1,
                "word: sompengsyloti": 1,
                "word: nagriabi": 1,
                "word: mismatchaltmatch": 1,
                "word: anynotnl": 1,
                "word: flushgenbad": 1,
                "word: statusbad": 1,
                "word: recoverycan": 1,
                "word: happencas": 1,
                "word: failedchan": 1,
                "word: receivechild": 1,
                "word: exitedconfigurabledumping": 1,
                "word: heapend": 1,
                "word: entersyscallexit": 1,
                "word: fromcharcodegcpacertracehost": 1,
                "word: downillegal": 1,
                "word: seekinvalid": 1,
                "word: slotisextensiblelfstack": 1,
                "word: pushmadvdontneedreflect": 1,
                "word: copyreleasep": 1,
                "word: buffertodatestringtotimestringunexpected": 1,
                "word: typewirep": 1,
                "word: workers": 1,
                "word: called": 17,
                "word: failed": 8,
                "word: idlethreads": 1,
                "word: waitmasaram": 1,
                "word: gondimende": 1,
                "word: kikakuiold": 1,
                "word: hungariansigkill": 1,
                "word: killsigquit": 1,
                "word: quituri": 1,
                "word: malformedunmatched": 1,
                "word: statedaltldpsugct": 1,
                "word: exchange": 1,
                "word: fullfatal": 1,
                "word: gettypeinfo": 2,
                "word: getutcminutesgetutcsecondsinvalid": 1,
                "word: isprototypeoflen": 1,
                "word: resetload": 1,
                "word: failedlocalecomparenil": 1,
                "word: stackbasenot": 1,
                "word: availableout": 1,
                "word: memoryparsing": 1,
                "word: failuresetutcminutessetutcsecondssrmount": 1,
                "word: errorstill": 1,
                "word: liststop": 1,
                "word: expiredtoboolean": 1,
                "word: toexponentialtriggerratio": 1,
                "word: failedxchg": 1,
                "word: dumped": 1,
                "word: progsize": 1,
                "word: untyped": 2,
                "word: assist": 3,
                "word: waitgc": 1,
                "word: worker": 2,
                "word: initinstemptywidthmb": 1,
                "word: allocated": 4,
                "word: startpattern": 1,
                "word: syntaxquotation": 1,
                "word: markreferenceerrorsigabrt": 1,
                "word: abortscript": 1,
                "word: allocfreetracebad": 1,
                "word: alloccountbad": 1,
                "word: statebad": 1,
                "word: sizedefinepropertyerror": 1,
                "word: largefinalizer": 1,
                "word: waitgcstoptheworldgetprototypeofgetutcfullyearhasownpropertyinvalid": 1,
                "word: sourceinvalid": 1,
                "word: syntaxis": 1,
                "word: directorykey": 1,
                "word: wronglevel": 1,
                "word: haltedlevel": 1,
                "word: haltednil": 1,
                "word: module": 2,
                "word: datano": 1,
                "word: deviceprotocol": 1,
                "word: errorruntime": 3,
                "word: queuesetutcfullyearstack": 1,
                "word: overflowstopm": 1,
                "word: spinningstore": 1,
                "word: failedsync": 1,
                "word: waittext": 1,
                "word: busytolocalestringtoo": 1,
                "word: linkstoo": 1,
                "word: usersunexpected": 1,
                "word: eofunknown": 1,
                "word: methodunreachable": 1,
                "word: pointerwindow": 1,
                "word: changedwork": 1,
                "word: cannot": 18,
                "word: digitfixme": 1,
                "word: typeerrorgetassetasbyteshere": 1,
                "word: dragonsinvalid": 1,
                "word: vmemfdcreate": 1,
                "word: vother": 1,
                "word: lowercaseother": 1,
                "word: uppercasepsalter": 1,
                "word: pahlavi": 1,
                "word: advertise": 1,
                "word: errorbad": 1,
                "word: debugcallv": 3,
                "word: system": 11,
                "word: callconsole": 1,
                "word: getmillisecondsinvalid": 1,
                "word: paddingkey": 1,
                "word: expiredmalloc": 1,
                "word: deadlockmissing": 1,
                "word: gomaxprocs": 2,
                "word: negative": 21,
                "word: offsetnetwork": 1,
                "word: downno": 1,
                "word: medium": 2,
                "word: foundno": 1,
                "word: processnot": 1,
                "word: directoryrecovery": 1,
                "word: failedruntime": 3,
                "word: missed": 1,
                "word: gsetmillisecondsstartm": 1,
                "word: pstopm": 1,
                "word: holding": 5,
                "word: conversion": 5,
                "word: already": 18,
                "word: locals": 2,
                "word: abcdef": 2,
                "word: godebug": 5,
                "word: getassetasstringimperial": 1,
                "word: aramaicinstruneanynotnlmeroitic": 1,
                "word: cursivemon": 1,
                "word: alphabeticsignone": 1,
                "word: trapzanabazar": 1,
                "word: square": 1,
                "word: keybad": 1,
                "word: layoutbad": 1,
                "word: kindbad": 1,
                "word: symbol": 5,
                "word: tablecastogscanstatusdefinepropertiesgc": 1,
                "word: unswept": 2,
                "word: spangcshrinkstackoffinteger": 1,
                "word: overflowinvalid": 1,
                "word: argumentinvalid": 1,
                "word: exchangeinvalid": 1,
                "word: spdelta": 1,
                "word: insertmspanlist": 1,
                "word: removemessage": 1,
                "word: longmissing": 1,
                "word: stackmapno": 1,
                "word: hostnon": 1,
                "word: remotepacer": 1,
                "word: mismatchregexp": 1,
                "word: remote": 4,
                "word: schedule": 3,
                "word: cgosigaction": 1,
                "word: failedstopped": 1,
                "word: wrongversion": 1,
                "word: mismatchworkbuf": 1,
                "word: spinningthreads": 1,
                "word: abcdefx": 2,
                "word: missing": 13,
                "word: markingnegative": 1,
                "word: infinityold": 1,
                "word: arabianold": 1,
                "word: arabianother": 1,
                "word: continuepositive": 1,
                "word: infinitysigbus": 1,
                "word: errorsigcont": 1,
                "word: continuesigint": 1,
                "word: interruptsentence": 1,
                "word: terminalunexpected": 1,
                "word: numberunexpected": 1,
                "word: stringunified": 1,
                "word: ideographbad": 1,
                "word: tinysizeclasscorrupt": 1,
                "word: entersyscallblockexec": 1,
                "word: errorfractional": 1,
                "word: secondfutexwakeup": 1,
                "word: gettimezoneoffsetgp": 1,
                "word: literalinvalid": 2,
                "word: biglocked": 1,
                "word: upmark": 1,
                "word: statusmarkbits": 1,
                "word: overflowmissing": 1,
                "word: nextid": 1,
                "word: availablenotetsleepg": 1,
                "word: permission": 1,
                "word: deniedpreventextensionsreflect": 1,
                "word: capreflect": 3,
                "word: intreflect": 1,
                "word: lenreflect": 2,
                "word: scanobject": 2,
                "word: select": 2,
                "word: exhaustiontolocalelowercasetolocaleuppercaseunknown": 1,
                "word: caller": 3,
                "word: pcwait": 1,
                "word: cyclewrong": 1,
                "word: memory": 12,
                "word: because": 1,
                "word: dotdotdot": 2,
                "word: locked": 4,
                "word: rangecaucasian": 1,
                "word: albanianrfs": 1,
                "word: specific": 1,
                "word: errorregional": 1,
                "word: indicatorunterminated": 1,
                "word: groupvariation": 1,
                "word: selector": 1,
                "word: undefined": 2,
                "word: manualfreelistbufio": 1,
                "word: fullconnection": 1,
                "word: refuseddecodeuricomponentencodeuricomponentfile": 1,
                "word: longforeachp": 1,
                "word: donegarbage": 1,
                "word: collectiongetutcmillisecondsidentifier": 1,
                "word: removedin": 1,
                "word: numeric": 5,
                "word: literalindex": 1,
                "word: rangeinput": 1,
                "word: errorinvalid": 2,
                "word: character": 6,
                "word: multihop": 1,
                "word: attemptedno": 1,
                "word: processesno": 1,
                "word: availableoperation": 1,
                "word: canceledracy": 1,
                "word: timersreflect": 1,
                "word: callreflect": 2,
                "word: elemreflect": 1,
                "word: sendreflect": 1,
                "word: typereflect": 10,
                "word: uintreflect": 1,
                "word: segmentation": 2,
                "word: faultsetutcmillisecondsstreams": 1,
                "word: errorsystem": 1,
                "word: tolocaledatestringtolocaletimestringtracebackancestorsunknown": 1,
                "word: typeunknown": 1,
                "word: filevalue": 1,
                "word: locale": 1,
                "word: canadian": 1,
                "word: aboriginalfunction": 1,
                "word: binary": 11,
                "word: operatorpattern": 1,
                "word: spacesigtrap": 1,
                "word: trapunexpected": 1,
                "word: gettimeofday": 1,
                "word: setenv": 1,
                "word: missingafter": 2,
                "word: elementbad": 1,
                "word: descriptorbad": 1,
                "word: runfinqbad": 1,
                "word: notifylist": 2,
                "word: sizebad": 2,
                "word: mstartbad": 1,
                "word: fieldcgocall": 1,
                "word: unavailabledevice": 1,
                "word: streamdirectory": 1,
                "word: emptydisk": 1,
                "word: exceededfile": 1,
                "word: closedfile": 1,
                "word: existsfile": 1,
                "word: existgetownpropertynamesillegal": 1,
                "word: instructioninvalid": 1,
                "word: escape": 11,
                "word: allmmarking": 1,
                "word: objectmarkroot": 1,
                "word: indexmissing": 1,
                "word: hostmspan": 1,
                "word: notesleep": 2,
                "word: nprocspanic": 1,
                "word: during": 13,
                "word: mallocpanic": 1,
                "word: lockspanicwrap": 1,
                "word: panicwrap": 2,
                "word: fieldreflect": 1,
                "word: floatreflect": 1,
                "word: indexreflect": 2,
                "word: isnilreflect": 1,
                "word: sliceruntime": 1,
                "word: pcdata": 1,
                "word: rotateleftskip": 1,
                "word: directorystopm": 1,
                "word: locksstopped": 1,
                "word: filesunaligned": 1,
                "word: sysunusedunexpected": 1,
                "word: instfailunknown": 1,
                "word: reasonvalue": 1,
                "word: markroot": 4,
                "word: unallocated": 1,
                "word: zoneinfo": 6,
                "word: leftover": 2,
                "word: egyptian": 1,
                "word: hieroglyphserror": 1,
                "word: executing": 2,
                "word: fileids": 1,
                "word: trinary": 1,
                "word: operatormeroitic": 1,
                "word: hieroglyphssigalrm": 1,
                "word: clocksigterm": 1,
                "word: terminationseek": 1,
                "word: offsetseek": 1,
                "word: whenceterminal": 1,
                "word: punctuationundefined": 1,
                "word: gettimebad": 1,
                "word: classbad": 1,
                "word: formatbad": 1,
                "word: mpchan": 1,
                "word: channelconnection": 1,
                "word: outextra": 1,
                "word: bufferfloating": 1,
                "word: errorforcegc": 1,
                "word: errorgc": 1,
                "word: underflowgo": 1,
                "word: valuegopark": 1,
                "word: statusgzip": 1,
                "word: headerinvalid": 1,
                "word: countinvalid": 1,
                "word: request": 2,
                "word: codeis": 1,
                "word: filejson": 1,
                "word: revokedmspanlist": 1,
                "word: insertbackmalloc": 1,
                "word: signalnon": 1,
                "word: listnotetsleep": 1,
                "word: flushedpacer": 1,
                "word: reason": 1,
                "word: propertyisenumerablereflect": 1,
                "word: methodreflect": 1,
                "word: setintreflect": 1,
                "word: makefuncstubreflect": 1,
                "word: casgstatus": 5,
                "word: double": 3,
                "word: waitruntime": 1,
                "word: rotaterightstopped": 1,
                "word: numbertrace": 1,
                "word: memoryurgent": 1,
                "word: conditionvalue": 1,
                "word: maxrunewirep": 1,
                "word: goworkbuf": 1,
                "word: emptywrite": 1,
                "word: unexported": 6,
                "word: anatolian": 1,
                "word: hieroglyphshere": 1,
                "word: dragons": 8,
                "word: sinscriptional": 1,
                "word: pahlaviother": 1,
                "word: grapheme": 1,
                "word: extendstring": 1,
                "word: terminatedunexpected": 1,
                "word: identifierunknown": 1,
                "word: comparator": 1,
                "word: unsetenv": 1,
                "word: valuebad": 1,
                "word: compare": 3,
                "word: device": 3,
                "word: requiredbufio": 1,
                "word: countcheckdead": 1,
                "word: gconcurrent": 1,
                "word: writesdefer": 1,
                "word: stackfindrunnable": 1,
                "word: codeinvalid": 1,
                "word: capturelink": 1,
                "word: severedpackage": 1,
                "word: installedpanic": 1,
                "word: stackread": 1,
                "word: systemreflect": 1,
                "word: complexreflect": 1,
                "word: pointerreflect": 1,
                "word: setuintreleasep": 1,
                "word: argruntime": 1,
                "word: confused": 1,
                "word: handlestartlockedm": 1,
                "word: pstartm": 1,
                "word: spinningstate": 1,
                "word: recoverablestopg": 1,
                "word: statustrace": 1,
                "word: breakpoint": 1,
                "word: trapuser": 1,
                "word: virtual": 4,
                "word: expired": 1,
                "word: received": 7,
                "word: inscriptional": 1,
                "word: parthiansigstkflt": 1,
                "word: faultsigtstp": 1,
                "word: keyboard": 1,
                "word: infinityaddress": 1,
                "word: useargument": 1,
                "word: longassembly": 1,
                "word: checks": 1,
                "word: failedbad": 1,
                "word: readybad": 1,
                "word: refillcall": 1,
                "word: pointcannot": 1,
                "word: allocate": 3,
                "word: memoryerror": 1,
                "word: validgetenv": 1,
                "word: initgzip": 1,
                "word: checksuminteger": 1,
                "word: divide": 1,
                "word: zerointerface": 1,
                "word: lengthinvalid": 2,
                "word: typeinvalid": 2,
                "word: qminpc": 1,
                "word: invalidnetwork": 1,
                "word: unreachablenewregexpobject": 1,
                "word: nilprotocol": 1,
                "word: availableprotocol": 1,
                "word: supportedreflect": 1,
                "word: mapindexreflect": 1,
                "word: setfloatremote": 1,
                "word: changedruntime": 1,
                "word: memoryruntime": 2,
                "word: scanstack": 3,
                "word: nelemsscanstack": 1,
                "word: statussend": 1,
                "word: channelslice": 1,
                "word: largespan": 1,
                "word: spacestack": 1,
                "word: goroutine": 8,
                "word: largeunexpected": 1,
                "word: codevalue": 1,
                "word: objectwirep": 1,
                "word: constructor": 1,
                "word: exceededillegal": 1,
                "word: literalillegal": 1,
                "word: statementillegal": 2,
                "word: characterlogical": 1,
                "word: exceptionmb": 1,
                "word: noncharacter": 1,
                "word: pointsigio": 1,
                "word: possiblesigsys": 1,
                "word: callunexpected": 1,
                "word: support": 3,
                "word: dbytes": 1,
                "word: largecan": 1,
                "word: scannot": 1,
                "word: receive": 1,
                "word: channeldevice": 1,
                "word: resource": 1,
                "word: busyfatal": 1,
                "word: morestack": 4,
                "word: garbage": 1,
                "word: collection": 1,
                "word: scangcdrain": 1,
                "word: incorrectgetbinding": 1,
                "word: missinginterrupted": 1,
                "word: callinvalid": 1,
                "word: requestinvalid": 1,
                "word: sequenceinvalid": 1,
                "word: qinvalid": 1,
                "word: jobsmakechan": 1,
                "word: alignmentmissing": 1,
                "word: schememissing": 1,
                "word: runfinqmisuse": 1,
                "word: writenanotime": 1,
                "word: returning": 1,
                "word: zerono": 1,
                "word: deviceoperation": 1,
                "word: permittedoperation": 1,
                "word: supportedpanic": 1,
                "word: preemptoffprocresize": 1,
                "word: argprofiling": 1,
                "word: expiredreferenceerror": 1,
                "word: interfacereflect": 1,
                "word: nummethodreflect": 1,
                "word: methodvaluecallruntime": 1,
                "word: netpoll": 6,
                "word: nelemsschedule": 1,
                "word: lockssetbinding": 1,
                "word: missingspan": 1,
                "word: stacksstack": 1,
                "word: growth": 2,
                "word: forksyntax": 1,
                "word: patternunexpected": 1,
                "word: typeunexpected": 1,
                "word: valueunknown": 1,
                "word: argunknown": 1,
                "word: unlocked": 6,
                "word: lockwork": 1,
                "word: illegal": 8,
                "word: statementrawsockaddrany": 1,
                "word: smallunexpected": 1,
                "word: panicbad": 1,
                "word: rangecan": 1,
                "word: stackconnection": 1,
                "word: peerdouble": 1,
                "word: tracegcsweepstartencodearray": 1,
                "word: elementfile": 1,
                "word: exceededflate": 1,
                "word: maxbits": 3,
                "word: largefloating": 1,
                "word: exceptionfunction": 1,
                "word: implementedgcdrainn": 1,
                "word: incorrectgetownpropertydescriptorhash": 1,
                "word: unhashable": 1,
                "word: unaligned": 4,
                "word: baseinvalid": 1,
                "word: intnjson": 1,
                "word: unsupported": 8,
                "word: synchronizedlink": 1,
                "word: rangenon": 1,
                "word: bufferout": 1,
                "word: streams": 1,
                "word: resourcesqueuefinalizer": 1,
                "word: gcreflect": 1,
                "word: setcomplexreflect": 1,
                "word: unsafeaddrrunqsteal": 1,
                "word: overflowruntime": 3,
                "word: predecessor": 1,
                "word: objectsstack": 1,
                "word: unavailable": 2,
                "word: structure": 3,
                "word: cleaningthis": 1,
                "word: should": 3,
                "word: happen": 2,
                "word: region": 1,
                "word: missingallgadd": 1,
                "word: gidlearena": 1,
                "word: initializedbad": 1,
                "word: shrinkstackbootstrap": 1,
                "word: chansend": 5,
                "word: spurious": 1,
                "word: wakeupcheckid": 1,
                "word: checkdead": 4,
                "word: timercheckdead": 1,
                "word: timercould": 1,
                "word: locate": 2,
                "word: serror": 1,
                "word: decoding": 16,
                "word: sinconsistent": 1,
                "word: fdmutexinvalid": 1,
                "word: linkjson": 1,
                "word: unexpected": 13,
                "word: typejson": 1,
                "word: newstackmissing": 1,
                "word: tracegcsweepstartnet": 1,
                "word: userinfono": 1,
                "word: availableno": 2,
                "word: addressno": 1,
                "word: directoryoperation": 1,
                "word: progressreflect": 1,
                "word: overflowintreflect": 1,
                "word: setmapindexreflect": 1,
                "word: typereleasep": 1,
                "word: stateremaining": 1,
                "word: buffersresource": 1,
                "word: deadlock": 3,
                "word: avoidedruntime": 1,
                "word: epollwait": 2,
                "word: misaligned": 1,
                "word: exceeds": 28,
                "word: countslice": 1,
                "word: bounds": 1,
                "word: rangesocket": 1,
                "word: supportedstartm": 1,
                "word: gsstoplockedm": 1,
                "word: runnableunexpected": 1,
                "word: unaddressable": 5,
                "word: continue": 1,
                "word: hexadecimal": 2,
                "word: numberrangeerror": 1,
                "word: intsigstop": 1,
                "word: unblockable": 1,
                "word: functioncorrupted": 1,
                "word: semaphore": 1,
                "word: ticketentersyscall": 1,
                "word: inconsistent": 10,
                "word: foreachp": 2,
                "word: fnfreespan": 1,
                "word: cached": 2,
                "word: spanfreedefer": 1,
                "word: nilgob": 2,
                "word: ninvalid": 2,
                "word: hostinvalid": 1,
                "word: descriptorname": 1,
                "word: unique": 1,
                "word: networkno": 2,
                "word: desired": 1,
                "word: typenotewakeup": 1,
                "word: wakeupout": 1,
                "word: stackalloc": 2,
                "word: caninterfacereflect": 1,
                "word: methodbynamereflect": 1,
                "word: overflowuintrequired": 1,
                "word: availableruntime": 1,
                "word: startlockedm": 2,
                "word: meunlock": 1,
                "word: assignable": 2,
                "word: corruptedillegal": 1,
                "word: newline": 3,
                "word: throwrangeerror": 1,
                "word: uintsigill": 1,
                "word: instructionsigxcpu": 1,
                "word: exceeded": 1,
                "word: addressafter": 1,
                "word: pairbad": 1,
                "word: qchannel": 1,
                "word: rangecommunication": 1,
                "word: senddecode": 1,
                "word: sgcstopm": 1,
                "word: gcgrowslice": 1,
                "word: rangeinternal": 1,
                "word: lockosthread": 5,
                "word: shuffleinvalid": 1,
                "word: profile": 2,
                "word: rejected": 1,
                "word: servicelarge": 1,
                "word: rotateleftmakechan": 1,
                "word: rangemakeslice": 2,
                "word: rangemspan": 1,
                "word: statenot": 1,
                "word: fileos": 1,
                "word: initializedos": 1,
                "word: typeprogtopointermask": 1,
                "word: overflowreflect": 1,
                "word: overflowfloatrestartg": 1,
                "word: statusrunlock": 1,
                "word: rwmutexruntime": 1,
                "word: corrupted": 7,
                "word: polldescruntime": 5,
                "word: netpollinit": 2,
                "word: countsignal": 1,
                "word: forksigsend": 1,
                "word: statestack": 1,
                "word: startm": 2,
                "word: nmspinningstoptheworld": 1,
                "word: lockstime": 1,
                "word: namework": 1,
                "word: fixedstack": 1,
                "word: prepended": 1,
                "word: concatenation": 2,
                "word: markrangeerror": 1,
                "word: sighup": 1,
                "word: terminal": 1,
                "word: hangupsigwinch": 1,
                "word: window": 1,
                "word: changeunterminated": 1,
                "word: originating": 1,
                "word: preserve": 1,
                "word: unlinked": 1,
                "word: spancomparing": 1,
                "word: uncomparable": 1,
                "word: destination": 1,
                "word: requiredfatal": 1,
                "word: descriptor": 1,
                "word: statefindrunnable": 1,
                "word: pgcstopm": 1,
                "word: nmspinninggob": 1,
                "word: valuegob": 2,
                "word: duplicate": 3,
                "word: receivedgob": 1,
                "word: uintptrinvalid": 1,
                "word: tableinvalid": 1,
                "word: passed": 5,
                "word: rotaterightmheap": 1,
                "word: shrinkstackmspan": 1,
                "word: lockedneed": 1,
                "word: padding": 2,
                "word: newproc": 4,
                "word: gdeadnewproc": 1,
                "word: stacknotewakeup": 1,
                "word: wakeup": 1,
                "word: finishedos": 1,
                "word: releasedprotocol": 1,
                "word: driver": 1,
                "word: attachedreflect": 1,
                "word: makeslice": 8,
                "word: typeregion": 1,
                "word: rangeruntime": 7,
                "word: inputunsupported": 1,
                "word: compression": 1,
                "word: converted": 1,
                "word: nesting": 1,
                "word: overflowmon": 1,
                "word: gmtmon": 1,
                "word: mstrangeerror": 1,
                "word: sigpipe": 3,
                "word: broken": 2,
                "word: pipesigpwr": 1,
                "word: failure": 1,
                "word: restarttime": 1,
                "word: dataaddspecial": 1,
                "word: pointerbufio": 1,
                "word: longcrypto": 1,
                "word: stackfunction": 1,
                "word: gcphase": 3,
                "word: gcoffgfput": 1,
                "word: biggob": 1,
                "word: uintinvalid": 1,
                "word: rangeinvalid": 1,
                "word: eventio": 1,
                "word: pipemachine": 1,
                "word: semaphores": 1,
                "word: availablenumerical": 1,
                "word: rangeoperation": 1,
                "word: progresspadding": 1,
                "word: contained": 1,
                "word: alphabetprotocol": 1,
                "word: supportedre": 1,
                "word: lookahead": 1,
                "word: overflowcomplexreflect": 1,
                "word: typeruntime": 5,
                "word: impossible": 2,
                "word: kindruntime": 1,
                "word: marking": 1,
                "word: access": 3,
                "word: denied": 1,
                "word: underflow": 1,
                "word: cruntime": 1,
                "word: semacquire": 5,
                "word: stackstring": 1,
                "word: longsyntax": 1,
                "word: scanning": 2,
                "word: booleantoo": 1,
                "word: systemtraceback": 1,
                "word: defers": 1,
                "word: different": 2,
                "word: scopes": 1,
                "word: regular": 2,
                "word: smapiter": 1,
                "word: nextrangeerror": 1,
                "word: sigprof": 2,
                "word: profiling": 1,
                "word: clocksigusr": 1,
                "word: sigusr": 1,
                "word: sigvtalrm": 1,
                "word: clockabi": 1,
                "word: mismatch": 6,
                "word: detected": 1,
                "word: between": 3,
                "word: assignment": 1,
                "word: mapattempt": 1,
                "word: register": 2,
                "word: namecheckdead": 1,
                "word: countsfailed": 1,
                "word: sizefreedefer": 1,
                "word: exponent": 1,
                "word: literalinappropriate": 1,
                "word: deviceinvalid": 1,
                "word: stacklength": 1,
                "word: decodearraylength": 1,
                "word: ignorearraylooking": 1,
                "word: beginning": 7,
                "word: valueneed": 1,
                "word: childprotocol": 1,
                "word: socketreflect": 1,
                "word: typerunqputslow": 1,
                "word: fullruntime": 1,
                "word: socket": 2,
                "word: operation": 5,
                "word: socketstrings": 1,
                "word: countsync": 2,
                "word: statesync": 1,
                "word: mutextype": 1,
                "word: exported": 1,
                "word: fieldsunaddressable": 1,
                "word: usable": 3,
                "word: additional": 1,
                "word: elided": 1,
                "word: section": 1,
                "word: switchcannot": 1,
                "word: ssigsegv": 1,
                "word: violationvm": 1,
                "word: secondsbad": 1,
                "word: barrier": 1,
                "word: boundscall": 1,
                "word: within": 1,
                "word: runtimecannot": 1,
                "word: requested": 1,
                "word: addresscasgstatus": 1,
                "word: incoming": 1,
                "word: valuescheckmark": 1,
                "word: unmarked": 2,
                "word: objectencodereflectvalue": 1,
                "word: elementencoding": 1,
                "word: uentersyscallblock": 1,
                "word: expected": 2,
                "word: happenfunction": 1,
                "word: expecting": 11,
                "word: inserting": 1,
                "word: treapinternal": 1,
                "word: misuse": 3,
                "word: itabjson": 1,
                "word: qmalformed": 1,
                "word: informationmergerunesets": 1,
                "word: runenon": 1,
                "word: listpacer": 1,
                "word: typeresetspinning": 1,
                "word: mruntime": 1,
                "word: inmapiter": 1,
                "word: nextmaximum": 1,
                "word: exceededsigfpe": 1,
                "word: floating": 1,
                "word: exceptionsigttou": 1,
                "word: background": 2,
                "word: supported": 2,
                "word: bootstrap": 2,
                "word: present": 1,
                "word: unreadbytebufio": 1,
                "word: unreadrunebufio": 1,
                "word: buffercrypto": 1,
                "word: blockend": 1,
                "word: outside": 4,
                "word: spacein": 1,
                "word: disabled": 1,
                "word: sigaltstacknumerical": 1,
                "word: domainpanic": 1,
                "word: printing": 1,
                "word: valuere": 1,
                "word: backreference": 2,
                "word: namefrom": 2,
                "word: typeremovespecial": 1,
                "word: pointerresource": 1,
                "word: temporarily": 1,
                "word: unavailableruntime": 1,
                "word: returnedruntime": 1,
                "word: timeruntime": 1,
                "word: elemruntime": 1,
                "word: nextruntime": 1,
                "word: prevscanstack": 1,
                "word: stoppedsoftware": 1,
                "word: caused": 1,
                "word: connection": 3,
                "word: abortsweep": 1,
                "word: increased": 1,
                "word: allocation": 5,
                "word: rwmutexsync": 1,
                "word: counteruse": 1,
                "word: network": 1,
                "word: sigchld": 1,
                "word: changedsigttin": 1,
                "word: ttysigxfsz": 1,
                "word: exceededbase": 1,
                "word: spacebytes": 1,
                "word: countbytes": 2,
                "word: whenceconcurrent": 1,
                "word: writecreatebinding": 1,
                "word: existscrypto": 1,
                "word: blockfindrunnable": 1,
                "word: nmspinningfreeing": 1,
                "word: spanheapbitssettype": 1,
                "word: shiftleafcounts": 1,
                "word: nmisrounded": 1,
                "word: sysallocre": 1,
                "word: scanescapereflect": 1,
                "word: rangereflect": 3,
                "word: rangeregexp": 1,
                "word: unhandled": 1,
                "word: compileruntime": 1,
                "word: castogscanstatus": 2,
                "word: epollcreate": 3,
                "word: rangestackalloc": 1,
                "word: scheduler": 1,
                "word: stackstoplockedm": 1,
                "word: lockingsync": 1,
                "word: rwmutextoo": 1,
                "word: levels": 1,
                "word: symbolic": 1,
                "word: linkstreap": 1,
                "word: treaptreap": 1,
                "word: foundwaiting": 1,
                "word: tryotto": 1,
                "word: understand": 1,
                "word: typeother": 1,
                "word: ignorable": 1,
                "word: pointrangeerror": 1,
                "word: vsigurg": 1,
                "word: urgent": 1,
                "word: condition": 1,
                "word: socketconverting": 1,
                "word: overflowcrypto": 1,
                "word: overlapforeachp": 1,
                "word: escapeinvalid": 1,
                "word: dinvalid": 2,
                "word: nested": 1,
                "word: repetition": 2,
                "word: operatorinvalid": 1,
                "word: syntaxmspan": 1,
                "word: lockedname": 1,
                "word: allocating": 3,
                "word: allarenasreflect": 1,
                "word: funcof": 5,
                "word: argumentsreflect": 2,
                "word: boundsreflect": 4,
                "word: channelreflect": 2,
                "word: setfinalizer": 10,
                "word: running": 2,
                "word: notruntime": 1,
                "word: workspan": 1,
                "word: references": 1,
                "word: splice": 2,
                "word: encountered": 1,
                "word: converting": 2,
                "word: underflowencoding": 1,
                "word: stringfile": 1,
                "word: deadlinefindfunc": 1,
                "word: idxfindrunnable": 1,
                "word: spinningflate": 1,
                "word: corrupt": 1,
                "word: greyobject": 3,
                "word: alignedmheap": 1,
                "word: freenetwork": 1,
                "word: dropped": 1,
                "word: resetos": 1,
                "word: notify": 4,
                "word: channelpersistentalloc": 1,
                "word: largepidleput": 1,
                "word: queuereflect": 1,
                "word: unblockruntime": 1,
                "word: deadlinestring": 1,
                "word: dstrings": 2,
                "word: whencetraceback": 1,
                "word: unwind": 1,
                "word: completelytransport": 1,
                "word: endpoint": 3,
                "word: connected": 2,
                "word: abcdefghijklmnopqrstuvwxyz": 3,
                "word: descriptorgo": 1,
                "word: stored": 1,
                "word: memoryinvalid": 1,
                "word: assignmentmstats": 1,
                "word: memstatstype": 1,
                "word: mismatchtime": 1,
                "word: lengthaccessing": 1,
                "word: librarybytes": 1,
                "word: offsetbytes": 1,
                "word: positioncould": 1,
                "word: initialize": 2,
                "word: machinekey": 1,
                "word: multiple": 2,
                "word: alignreflect": 1,
                "word: funclayout": 4,
                "word: deadlineruntime": 1,
                "word: encoded": 2,
                "word: typebitsbulkbarrierruntime": 1,
                "word: stackruntime": 1,
                "word: waitlinkruntime": 1,
                "word: unblock": 1,
                "word: newstacksignal": 1,
                "word: arrived": 1,
                "word: execution": 1,
                "word: countsyntax": 1,
                "word: numbertoo": 1,
                "word: uncaching": 1,
                "word: smaller": 2,
                "word: minimum": 1,
                "word: circular": 1,
                "word: jsoninvalid": 1,
                "word: missingall": 1,
                "word: goroutines": 2,
                "word: asleep": 1,
                "word: ignore": 1,
                "word: sbytes": 1,
                "word: truncation": 1,
                "word: rangecannot": 1,
                "word: library": 1,
                "word: directlycipher": 1,
                "word: authentication": 1,
                "word: failedcrypto": 1,
                "word: incorrect": 3,
                "word: sizecrypto": 1,
                "word: overlapgob": 1,
                "word: newtypeobject": 3,
                "word: registered": 2,
                "word: qoperation": 1,
                "word: possible": 1,
                "word: killreflect": 1,
                "word: slicereflect": 5,
                "word: arithmetic": 1,
                "word: setprofilebucket": 2,
                "word: setstarttheworld": 1,
                "word: nextpstrings": 1,
                "word: causes": 1,
                "word: overflowtype": 1,
                "word: svalue": 1,
                "word: unable": 1,
                "word: equality": 1,
                "word: vafter": 1,
                "word: literalarg": 1,
                "word: libraryconcurrent": 1,
                "word: iteration": 1,
                "word: writedecode": 1,
                "word: deltaempty": 1,
                "word: sencoding": 1,
                "word: alphabet": 2,
                "word: longexpected": 1,
                "word: dgcbgmarkworker": 1,
                "word: blackening": 2,
                "word: enabledgob": 1,
                "word: unassignable": 1,
                "word: datamakechan": 1,
                "word: channel": 1,
                "word: typenot": 1,
                "word: enough": 1,
                "word: valueruntime": 2,
                "word: isselectstrings": 1,
                "word: offsetstrings": 1,
                "word: positionsyscall": 1,
                "word: readint": 2,
                "word: sizetime": 1,
                "word: buffercan": 1,
                "word: represent": 1,
                "word: recursive": 1,
                "word: heapbitssettypegcprog": 3,
                "word: allocationmismatched": 1,
                "word: copymissing": 1,
                "word: operatormspan": 1,
                "word: sweepout": 1,
                "word: mapreflect": 1,
                "word: makemapwithsize": 2,
                "word: casfrom": 3,
                "word: gscanstatus": 5,
                "word: matchstack": 1,
                "word: allowed": 1,
                "word: calltrailing": 1,
                "word: backslash": 1,
                "word: expressiontransport": 1,
                "word: exhausted": 3,
                "word: iteratoraddress": 1,
                "word: protocolbulkbarrierprewrite": 1,
                "word: argumentscannot": 1,
                "word: workbufs": 1,
                "word: gcmcrypto": 1,
                "word: inputdeferproc": 1,
                "word: newdeferin": 1,
                "word: trefill": 1,
                "word: remainingreflect": 1,
                "word: functionreflect": 2,
                "word: countreflect": 1,
                "word: typebitsbulkbarrier": 3,
                "word: alignwrong": 1,
                "word: elements": 18,
                "word: iteratortime": 2,
                "word: versionbinary": 1,
                "word: overflows": 1,
                "word: integerbytes": 1,
                "word: countcan": 1,
                "word: valuegcsweep": 1,
                "word: gcoffgob": 1,
                "word: attempt": 1,
                "word: pointerjson": 1,
                "word: calling": 2,
                "word: statemheap": 1,
                "word: freenet": 1,
                "word: urlobjects": 1,
                "word: overlappingreflect": 1,
                "word: without": 2,
                "word: typesetcheckmarked": 1,
                "word: disagreestoptheworld": 1,
                "word: appendint": 3,
                "word: formatint": 2,
                "word: basetime": 1,
                "word: intostring": 1,
                "word: sourcemappingurl": 1,
                "word: application": 1,
                "word: objectjson": 1,
                "word: stringify": 2,
                "word: offsetacquiresudog": 1,
                "word: cachecandidate": 1,
                "word: freegob": 1,
                "word: numbers": 1,
                "word: boundsgob": 1,
                "word: unsigned": 1,
                "word: integer": 1,
                "word: rangegrew": 1,
                "word: adequate": 1,
                "word: foundlooking": 1,
                "word: stringnon": 1,
                "word: concurrent": 2,
                "word: markon": 1,
                "word: template": 1,
                "word: threadpersistentalloc": 1,
                "word: argumentsruntime": 2,
                "word: polldescsync": 1,
                "word: valueunexpected": 1,
                "word: executionunsupported": 1,
                "word: rewind": 1,
                "word: buffercandidate": 1,
                "word: smallgcbgmarkworker": 1,
                "word: gcmarkworkermodeheapbitssettypegcprog": 1,
                "word: countinterrupted": 1,
                "word: restartedmultiple": 1,
                "word: errorreflect": 1,
                "word: variadic": 2,
                "word: implementsruntime": 1,
                "word: nilruntime": 1,
                "word: releasesudog": 2,
                "word: paramunknown": 1,
                "word: obtained": 3,
                "word: fieldhere": 1,
                "word: tconverting": 1,
                "word: overflowencoding": 1,
                "word: charactergcmarknewobject": 1,
                "word: checkmarkinvalid": 1,
                "word: metadatareflect": 1,
                "word: makefunc": 4,
                "word: receiver": 1,
                "word: setlenruntime": 1,
                "word: packing": 1,
                "word: tofixed": 2,
                "word: transport": 1,
                "word: shutdownexitsyscall": 1,
                "word: longer": 1,
                "word: validheapbitssettype": 1,
                "word: typeignore": 1,
                "word: deltainvalid": 1,
                "word: assignabletoruntime": 1,
                "word: fieldbytes": 1,
                "word: slicebytes": 1,
                "word: slicecipher": 1,
                "word: newofb": 2,
                "word: sizefirst": 1,
                "word: segment": 1,
                "word: contain": 1,
                "word: coloninvalid": 1,
                "word: dlength": 1,
                "word: reservation": 1,
                "word: limitpanicwrap": 1,
                "word: convertibletoreflect": 1,
                "word: capacity": 1,
                "word: setcapruntime": 1,
                "word: create": 3,
                "word: malloc": 4,
                "word: initialized": 1,
                "word: rangestoptheworld": 1,
                "word: pgcstop": 1,
                "word: toprecision": 2,
                "word: greater": 1,
                "word: terminationattempting": 1,
                "word: librariesbufio": 1,
                "word: readinvalid": 1,
                "word: sizeinvalid": 1,
                "word: valuereflect": 1,
                "word: argumentsnode": 1,
                "word: linebreak": 1,
                "word: writeinvalid": 1,
                "word: spacestrconv": 1,
                "word: appendfloat": 2,
                "word: formatfloat": 2,
                "word: bitsizebad": 1,
                "word: buffercasgstatus": 1,
                "word: gwaiting": 1,
                "word: grunnableconverting": 1,
                "word: precisiongob": 1,
                "word: registering": 2,
                "word: sinvalid": 1,
                "word: vinvalid": 1,
                "word: dereferenceinvalid": 1,
                "word: incomplete": 1,
                "word: multibyte": 1,
                "word: characterpanicwrap": 1,
                "word: package": 2,
                "word: arrayruntime": 1,
                "word: makemap": 5,
                "word: nelemsstrconv": 1,
                "word: adjustlastdigitfixedstrings": 1,
                "word: stringstrings": 2,
                "word: countattempt": 1,
                "word: execute": 2,
                "word: stackcrypto": 1,
                "word: gcminvalid": 1,
                "word: dmallocgc": 1,
                "word: gcmarkterminationrecursive": 1,
                "word: initialization": 1,
                "word: linker": 1,
                "word: skewreflect": 1,
                "word: arrayjson": 1,
                "word: changing": 1,
                "word: underfoot": 1,
                "word: vfatal": 1,
                "word: systemstack": 3,
                "word: goroutinecasfrom": 1,
                "word: statedecode": 1,
                "word: singletonruntime": 1,
                "word: blockruntime": 1,
                "word: instanceof": 1,
                "word: fractional": 1,
                "word: minutefunction": 1,
                "word: sorted": 1,
                "word: counter": 1,
                "word: namespace": 1,
                "word: sreflect": 1,
                "word: implementshere": 1,
                "word: readgccontrollerstate": 1,
                "word: findrunnable": 2,
                "word: enabledno": 1,
                "word: goexit": 4,
                "word: argumentsbufio": 1,
                "word: splitfunc": 2,
                "word: returns": 2,
                "word: countcasfrom": 1,
                "word: stategentraceback": 1,
                "word: callback": 2,
                "word: skipnewproc": 1,
                "word: goroutinereflect": 1,
                "word: makemethodvalueruntime": 1,
                "word: objectbad": 1,
                "word: bufferin": 1,
                "word: gcmark": 2,
                "word: gcmarkterminationinvalid": 1,
                "word: copied": 1,
                "word: valuegobdecoder": 1,
                "word: dgentraceback": 1,
                "word: stacknon": 1,
                "word: onstack": 1,
                "word: flagruntime": 1,
                "word: stoplockedm": 2,
                "word: grunnable": 1,
                "word: gscanrunnable": 1,
                "word: concurrently": 1,
                "word: waittype": 1,
                "word: compiling": 1,
                "word: inside": 1,
                "word: interfacejson": 1,
                "word: vbufio": 1,
                "word: beyond": 1,
                "word: inputreflect": 1,
                "word: indirection": 1,
                "word: through": 1,
                "word: structruntime": 1,
                "word: ulimit": 2,
                "word: inconsistently": 1,
                "word: valuesync": 1,
                "word: reused": 1,
                "word: returnedbytes": 1,
                "word: readrunesourcemap": 1,
                "word: supportedcannot": 1,
                "word: supply": 1,
                "word: constructing": 1,
                "word: anotherreflect": 1,
                "word: makefuncruntime": 1,
                "word: increase": 1,
                "word: processes": 1,
                "word: structfound": 1,
                "word: unlockosthreadstrings": 1,
                "word: readruneabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 1,
                "word: abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 1,
                "word: trying": 3,
                "word: blockstrconv": 1,
                "word: checkmarks": 1,
                "word: vbytes": 1,
                "word: successful": 2,
                "word: readdecoding": 1,
                "word: operations": 1,
                "word: single": 1,
                "word: decoded": 1,
                "word: readrunedecoding": 1,
                "word: supplied": 1,
                "word: vdecoding": 1,
                "word: framepointer": 1,
                "word: experiment": 1,
                "word: unquoted": 1,
                "word: vreflect": 1,
                "word: methodconverting": 1,
                "word: javascript": 1,
                "word: functions": 1,
                "word: currently": 1,
                "word: supportednomatchemptymatchliteralcharclassanycharnotnlanycharbeginlineendlinebegintextendtextwordboundarynowordboundarycapturestarplusquestrepeatconcatalternate": 1,
                "word: kkkhhh": 1,
                "word: ggggggg": 1,
                "word: oommmmmmm": 1,
                "word: bddeumd": 1,
                "word: bjkkii": 1,
                "word: bfooge": 1,
                "word: bfgonmlhi": 1,
                "word: bfgonnmlhhi": 1,
                "word: bfgonmld": 1,
                "word: abcdeiqtuvx": 1,
                "word: bcefhj": 1,
                "word: ddddtu": 1,
                "word: uuuuuu": 5,
                "word: uuuuuuu": 2,
                "word: uuuuuuuu": 1,
                "word: uuuuuuuuuu": 1,
                "word: uuuuuuuuuuu": 1,
                "word: uuuuuuuuuuuuuuuuuuuuu": 1,
                "word: uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu": 1,
                "word: uuuuuuusuu": 1,
                "word: xxxxxxxxxxxxxxxx": 1,
                "word: dddddddddddddddd": 2,
                "word: hhhhhhhhhhhhhhhh": 2,
                "word: bbbbbbbbbbbbbbbb": 2,
                "word: wuuuuu": 1,
                "word: uuuuuuuuuuuuu": 1,
                "word: uuuuuuuuuuuuuuuu": 1,
                "word: ffffff": 2,
                "word: buildid": 1,
                "word: elfdata": 1,
                "word: rodata": 1,
                "word: typelink": 1,
                "word: itablink": 1,
                "word: gosymtab": 1,
                "word: gopclntab": 1,
                "word: shstrtab": 1,
                "word: compareandswapuintptr": 1,
                "word: storeuint": 1,
                "word: storeuintptr": 2,
                "word: processoptions": 1,
                "word: indexbyte": 5,
                "word: doinit": 1,
                "word: xgetbv": 1,
                "word: casuintptr": 1,
                "word: bytealg": 19,
                "word: countgeneric": 1,
                "word: countgenericstring": 1,
                "word: cmpstring": 1,
                "word: cmpbody": 1,
                "word: countstring": 1,
                "word: countbody": 1,
                "word: memequal": 8,
                "word: varlen": 2,
                "word: memeqbody": 1,
                "word: indexstring": 1,
                "word: indexbody": 1,
                "word: indexbytestring": 1,
                "word: indexbytebody": 1,
                "word: memhash": 8,
                "word: strhash": 1,
                "word: interhash": 1,
                "word: isdirectiface": 1,
                "word: nilinterhash": 1,
                "word: strequal": 1,
                "word: interequal": 1,
                "word: nilinterequal": 1,
                "word: efaceeq": 1,
                "word: ifaceeq": 1,
                "word: alginit": 1,
                "word: initalgaes": 1,
                "word: atomicwb": 1,
                "word: atomicstorep": 1,
                "word: storepointer": 1,
                "word: compareandswappointer": 1,
                "word: sigaction": 4,
                "word: cgocall": 2,
                "word: cgoisgopointer": 1,
                "word: activemodules": 1,
                "word: cgoinrange": 1,
                "word: cgocheckwritebarrier": 2,
                "word: cgocheckmemmove": 1,
                "word: cgocheckslicecopy": 1,
                "word: cgochecktypedblock": 2,
                "word: spanofunchecked": 1,
                "word: arenaindex": 1,
                "word: heapbitsforaddr": 1,
                "word: cgocheckbits": 1,
                "word: cgocheckusingtype": 1,
                "word: makechan": 1,
                "word: goparkunlock": 1,
                "word: chanbuf": 1,
                "word: senddirect": 1,
                "word: recvdirect": 1,
                "word: closechan": 1,
                "word: chanrecv": 4,
                "word: selectnbsend": 1,
                "word: selectnbrecv": 1,
                "word: chanlen": 1,
                "word: chancap": 1,
                "word: chanclose": 1,
                "word: funcpc": 1,
                "word: debugcallcheck": 2,
                "word: debugcallwrap": 2,
                "word: gogetenv": 1,
                "word: envkeyequal": 1,
                "word: printany": 1,
                "word: callersframes": 1,
                "word: goroot": 1,
                "word: frombits": 4,
                "word: readunaligned": 2,
                "word: getitab": 1,
                "word: itabhashfunc": 1,
                "word: itabadd": 1,
                "word: itabsinit": 1,
                "word: panicdottypee": 1,
                "word: panicdottypei": 1,
                "word: convtstring": 1,
                "word: convtslice": 1,
                "word: asserti": 2,
                "word: asserte": 2,
                "word: ifacee": 1,
                "word: iterate": 1,
                "word: lfstackpack": 1,
                "word: lfstackunpack": 1,
                "word: lfnodevalidate": 1,
                "word: notewakeup": 1,
                "word: notetsleep": 2,
                "word: notetsleepg": 1,
                "word: mallocinit": 1,
                "word: sysreserve": 1,
                "word: sysreservealigned": 1,
                "word: mallocgc": 2,
                "word: acquirem": 1,
                "word: gomcache": 1,
                "word: releasem": 1,
                "word: nextfreefast": 1,
                "word: makespanclass": 1,
                "word: profilealloc": 1,
                "word: nextsample": 1,
                "word: fastexprand": 1,
                "word: fastlog": 2,
                "word: inpersistentalloc": 1,
                "word: overloadfactor": 1,
                "word: bucketshift": 1,
                "word: makebucketarray": 1,
                "word: roundupsize": 1,
                "word: mapaccess": 9,
                "word: bucketmask": 1,
                "word: evacuated": 1,
                "word: mapaccessk": 1,
                "word: mapassign": 6,
                "word: toomanyoverflowbuckets": 1,
                "word: mapdelete": 5,
                "word: mapiterinit": 2,
                "word: mapiternext": 2,
                "word: hashgrow": 1,
                "word: growwork": 4,
                "word: evacuate": 4,
                "word: advanceevacuationmark": 1,
                "word: bucketevacuated": 1,
                "word: ismapkey": 1,
                "word: mapiterkey": 1,
                "word: mapitervalue": 1,
                "word: maplen": 1,
                "word: faststr": 7,
                "word: typedmemmove": 2,
                "word: typedmemmovepartial": 1,
                "word: reflectcallmove": 1,
                "word: typedslicecopy": 2,
                "word: typedmemclr": 2,
                "word: typedmemclrpartial": 1,
                "word: memclrhaspointers": 1,
                "word: markbitsforaddr": 1,
                "word: spanof": 1,
                "word: bulkbarrierprewrite": 1,
                "word: bulkbarrierprewritesrconly": 1,
                "word: bulkbarrierbitmap": 1,
                "word: newallocbits": 1,
                "word: heapbitssettype": 1,
                "word: progtopointermask": 1,
                "word: rungcprog": 1,
                "word: subtract": 1,
                "word: subtractb": 1,
                "word: materializegcprog": 1,
                "word: allocmcache": 1,
                "word: freemcache": 2,
                "word: traceheapalloc": 1,
                "word: sysunused": 1,
                "word: sysused": 1,
                "word: sysfree": 1,
                "word: sysmap": 1,
                "word: queuefinalizer": 1,
                "word: wakefing": 1,
                "word: createfing": 1,
                "word: runfinq": 1,
                "word: gcinit": 1,
                "word: readgogc": 1,
                "word: gcenable": 1,
                "word: setgcpercent": 1,
                "word: fastrandn": 1,
                "word: preemptone": 1,
                "word: gcmarkworkavailable": 1,
                "word: pollfractionalworkerexit": 1,
                "word: gcsettriggerratio": 1,
                "word: issweepdone": 1,
                "word: gosched": 2,
                "word: gcwaitonmark": 1,
                "word: gcstart": 3,
                "word: setgcphase": 1,
                "word: gcbgmarkprepare": 1,
                "word: semrelease": 4,
                "word: tracegcstwstart": 1,
                "word: tracegcstart": 1,
                "word: gcmarkdone": 5,
                "word: gcmarktermination": 6,
                "word: tracegcdone": 1,
                "word: gcbgmarkstartworkers": 1,
                "word: noteclear": 1,
                "word: gcsweep": 1,
                "word: gcresetmarkstate": 1,
                "word: registerpoolcleanup": 1,
                "word: clearpools": 1,
                "word: itoadiv": 1,
                "word: fmtnsasms": 1,
                "word: gcmarkrootprepare": 2,
                "word: gcmarkrootcheck": 1,
                "word: readgstatus": 1,
                "word: markrootblock": 1,
                "word: markrootfreegstacks": 1,
                "word: markrootspans": 1,
                "word: gcassistalloc": 3,
                "word: tracegcmarkassistdone": 1,
                "word: tracegcmarkassiststart": 1,
                "word: gcwakeallassists": 1,
                "word: gcparkassist": 1,
                "word: gcflushbgcredit": 1,
                "word: dematerializegcprog": 1,
                "word: scanframeworker": 1,
                "word: gcdrain": 1,
                "word: gcdrainn": 1,
                "word: scanblock": 1,
                "word: pageindexof": 1,
                "word: gcdumpobject": 1,
                "word: gcmarknewobject": 1,
                "word: gcmarktinyallocs": 1,
                "word: initcheckmarks": 1,
                "word: clearcheckmarks": 1,
                "word: binarysearchtree": 1,
                "word: finishsweep": 1,
                "word: bgsweep": 1,
                "word: sweepone": 1,
                "word: sysfault": 1,
                "word: deductsweepcredit": 1,
                "word: getempty": 2,
                "word: putempty": 1,
                "word: putfull": 1,
                "word: trygetfull": 1,
                "word: handoff": 2,
                "word: preparefreeworkbufs": 1,
                "word: freesomewbufs": 2,
                "word: recordspan": 1,
                "word: inheaporstack": 1,
                "word: spanofheap": 1,
                "word: addspecial": 1,
                "word: removespecial": 1,
                "word: addfinalizer": 1,
                "word: removefinalizer": 1,
                "word: freespecial": 1,
                "word: newmarkbits": 1,
                "word: nextmarkbitarenaepoch": 1,
                "word: newarenamayunlock": 1,
                "word: newbucket": 1,
                "word: stkbucket": 1,
                "word: eqslice": 1,
                "word: nextcycle": 1,
                "word: flushlocked": 1,
                "word: postsweep": 1,
                "word: blockevent": 1,
                "word: blocksampled": 1,
                "word: saveblockevent": 1,
                "word: tracefree": 2,
                "word: cachestats": 1,
                "word: flushmcache": 1,
                "word: purgecachedstats": 1,
                "word: msysstatinc": 1,
                "word: msysstatdec": 1,
                "word: wbbufflush": 3,
                "word: pollserverinit": 1,
                "word: pollopen": 1,
                "word: pollclose": 1,
                "word: netpollclose": 1,
                "word: pollreset": 1,
                "word: netpollcheckerr": 1,
                "word: pollwait": 1,
                "word: pollsetdeadline": 1,
                "word: netpollgoready": 1,
                "word: pollunblock": 1,
                "word: netpollready": 1,
                "word: netpollblockcommit": 1,
                "word: netpollblock": 1,
                "word: netpollunblock": 1,
                "word: netpolldeadlineimpl": 1,
                "word: netpolldeadline": 1,
                "word: netpollreaddeadline": 1,
                "word: netpollwritedeadline": 1,
                "word: netpollopen": 1,
                "word: futexsleep": 1,
                "word: futexwakeup": 2,
                "word: getproccount": 1,
                "word: newosproc": 1,
                "word: sigprocmask": 1,
                "word: sysargs": 1,
                "word: sysauxv": 1,
                "word: osinit": 1,
                "word: getrandomdata": 1,
                "word: setsig": 1,
                "word: sigfillset": 1,
                "word: setsigstack": 1,
                "word: syssigaction": 2,
                "word: paniccheckmalloc": 1,
                "word: panicindex": 1,
                "word: panicslice": 1,
                "word: panicdivide": 1,
                "word: throwinit": 1,
                "word: deferproc": 1,
                "word: deferargs": 1,
                "word: testdefersizes": 1,
                "word: deferclass": 1,
                "word: totaldefersize": 1,
                "word: newdefer": 3,
                "word: freedefer": 2,
                "word: freedeferpanic": 1,
                "word: freedeferfn": 1,
                "word: preprintpanics": 2,
                "word: printpanics": 1,
                "word: gopanic": 1,
                "word: getargp": 1,
                "word: gorecover": 1,
                "word: recovery": 1,
                "word: fatalthrow": 2,
                "word: fatalpanic": 3,
                "word: startpanic": 1,
                "word: dopanic": 1,
                "word: signame": 1,
                "word: gotraceback": 1,
                "word: shouldpushsigpanic": 1,
                "word: recordforpanic": 1,
                "word: printunlock": 1,
                "word: gwrite": 1,
                "word: writeerr": 1,
                "word: printsp": 1,
                "word: printnl": 1,
                "word: printbool": 1,
                "word: printfloat": 1,
                "word: printcomplex": 1,
                "word: printuint": 1,
                "word: printint": 1,
                "word: printhex": 1,
                "word: printpointer": 1,
                "word: printstring": 1,
                "word: printslice": 1,
                "word: printeface": 1,
                "word: hexdumpwords": 2,
                "word: dolockosthread": 1,
                "word: starttemplatethread": 1,
                "word: beforeexit": 1,
                "word: forcegchelper": 1,
                "word: gopark": 1,
                "word: goready": 2,
                "word: acquiresudog": 1,
                "word: badmcall": 2,
                "word: badreflectcall": 1,
                "word: badmorestackg": 1,
                "word: badmorestackgsignal": 1,
                "word: badctxt": 1,
                "word: allgadd": 1,
                "word: cpuinit": 1,
                "word: schedinit": 1,
                "word: tracebackinit": 1,
                "word: msigsave": 1,
                "word: goenvs": 2,
                "word: checkmcount": 1,
                "word: mcommoninit": 1,
                "word: mpreinit": 1,
                "word: dumpgstatus": 1,
                "word: freezetheworld": 1,
                "word: restartg": 1,
                "word: stoptheworld": 1,
                "word: starttheworld": 2,
                "word: stoptheworldwithsema": 1,
                "word: pidleget": 1,
                "word: starttheworldwithsema": 1,
                "word: netpollinited": 1,
                "word: tracegcstwdone": 1,
                "word: mstart": 2,
                "word: mstartm": 1,
                "word: sigblock": 1,
                "word: unminit": 1,
                "word: allocm": 1,
                "word: unlockextra": 1,
                "word: newextram": 1,
                "word: onenewextram": 1,
                "word: msigrestore": 1,
                "word: lockextra": 1,
                "word: templatethread": 1,
                "word: mspinning": 1,
                "word: handoffp": 1,
                "word: gcstopm": 1,
                "word: pollwork": 1,
                "word: resetspinning": 1,
                "word: injectglist": 1,
                "word: globrunqput": 1,
                "word: parkunlock": 1,
                "word: setmnowb": 1,
                "word: setgnowb": 1,
                "word: goschedimpl": 1,
                "word: tracegosched": 1,
                "word: gopreempt": 1,
                "word: tracegopreempt": 1,
                "word: tracegoend": 1,
                "word: reentersyscall": 2,
                "word: entersyscall": 3,
                "word: sysmon": 2,
                "word: gcwait": 1,
                "word: entersyscallblock": 4,
                "word: tracegosyscall": 1,
                "word: exitsyscall": 2,
                "word: exitsyscallfast": 5,
                "word: reacquired": 2,
                "word: beforeexec": 1,
                "word: afterexec": 1,
                "word: gostartcallfn": 1,
                "word: gostartcall": 1,
                "word: stackmapdata": 1,
                "word: saveancestors": 1,
                "word: gfpurge": 1,
                "word: unlockosthread": 2,
                "word: dounlockosthread": 1,
                "word: badunlockosthread": 1,
                "word: externalcode": 1,
                "word: lostexternalcode": 1,
                "word: sigprofnongo": 1,
                "word: sigprofnongopc": 1,
                "word: setssp": 1,
                "word: procresize": 1,
                "word: globrunqputhead": 1,
                "word: tracegomaxprocs": 1,
                "word: acquirep": 1,
                "word: releasep": 1,
                "word: incidlelocked": 1,
                "word: retake": 1,
                "word: preemptall": 1,
                "word: schedenableuser": 1,
                "word: globrunqputbatch": 1,
                "word: schedenabled": 1,
                "word: globrunqget": 1,
                "word: pidleput": 1,
                "word: runqempty": 1,
                "word: runqput": 1,
                "word: runqputslow": 1,
                "word: runqget": 1,
                "word: runqgrab": 1,
                "word: runqsteal": 1,
                "word: procpin": 3,
                "word: procunpin": 3,
                "word: canspin": 1,
                "word: dospin": 1,
                "word: countsub": 1,
                "word: goargs": 1,
                "word: gostringnocopy": 1,
                "word: testatomic": 1,
                "word: parsedebugvars": 1,
                "word: settraceback": 1,
                "word: timediv": 1,
                "word: resolvenameoff": 2,
                "word: resolvetypeoff": 2,
                "word: resolvetextoff": 1,
                "word: addreflectoff": 1,
                "word: reflectoffslock": 1,
                "word: reflectoffsunlock": 1,
                "word: extendrandom": 1,
                "word: sellock": 1,
                "word: selunlock": 1,
                "word: selparkcommit": 1,
                "word: selectgo": 3,
                "word: semacquiremutex": 1,
                "word: readywithtime": 1,
                "word: semroot": 1,
                "word: cansemacquire": 1,
                "word: notifylistcheck": 1,
                "word: dumpregs": 1,
                "word: sighandler": 2,
                "word: isabortpc": 1,
                "word: initsig": 1,
                "word: getsig": 1,
                "word: siginstallgohandler": 1,
                "word: siginitignored": 1,
                "word: sigenable": 1,
                "word: setthreadcpuprofiler": 1,
                "word: sigtrampgo": 1,
                "word: setsignalstacksp": 1,
                "word: setgsignalstack": 1,
                "word: restoregsignalstack": 1,
                "word: sigpanic": 1,
                "word: canpanic": 1,
                "word: panicmem": 1,
                "word: panicoverflow": 1,
                "word: panicfloat": 1,
                "word: diefromsignal": 1,
                "word: raisebadsignal": 1,
                "word: ensuresigm": 2,
                "word: nosignalstack": 1,
                "word: signotonstack": 1,
                "word: signalduringfork": 1,
                "word: badsignal": 1,
                "word: sigfwdgo": 1,
                "word: unblocksig": 1,
                "word: sigaddset": 1,
                "word: minitsignals": 1,
                "word: minitsignalstack": 1,
                "word: minitsignalmask": 1,
                "word: blockablesig": 1,
                "word: sigdelset": 1,
                "word: unminitsignals": 1,
                "word: signalstack": 1,
                "word: sigsend": 1,
                "word: panicmakeslicelen": 1,
                "word: panicmakeslicecap": 1,
                "word: growslice": 1,
                "word: ispoweroftwo": 2,
                "word: stackinit": 1,
                "word: stacklog": 1,
                "word: stackpoolalloc": 1,
                "word: stackpoolfree": 1,
                "word: stackcacherefill": 1,
                "word: stackcacherelease": 1,
                "word: stackfree": 1,
                "word: adjustpointers": 1,
                "word: adjustframe": 1,
                "word: adjustpointer": 1,
                "word: adjustctxt": 1,
                "word: adjustdefers": 1,
                "word: adjustsudogs": 1,
                "word: findsghi": 1,
                "word: syncadjustsudogs": 1,
                "word: copystack": 1,
                "word: adjustpanics": 1,
                "word: shrinkstack": 1,
                "word: freestackspans": 1,
                "word: getstackmap": 1,
                "word: morestackc": 1,
                "word: concatstrings": 1,
                "word: stringdataonstack": 1,
                "word: concatstring": 4,
                "word: slicebytetostring": 1,
                "word: rawstringtmp": 1,
                "word: stringtoslicebyte": 1,
                "word: stringtoslicerune": 1,
                "word: slicerunetostring": 1,
                "word: intstring": 1,
                "word: rawstring": 1,
                "word: rawbyteslice": 1,
                "word: rawruneslice": 1,
                "word: findnull": 1,
                "word: badsystemstack": 1,
                "word: memmove": 3,
                "word: expandcgoframes": 1,
                "word: modulesinit": 1,
                "word: moduledataverify": 2,
                "word: funcforpc": 1,
                "word: findmoduledatap": 1,
                "word: findfunc": 1,
                "word: pcvalue": 1,
                "word: pcvaluecachekey": 1,
                "word: cfuncname": 1,
                "word: funcnamefromnameoff": 1,
                "word: funcline": 2,
                "word: funcspdelta": 1,
                "word: pcdatavalue": 2,
                "word: pcdatastart": 1,
                "word: funcdata": 1,
                "word: readvarint": 1,
                "word: badtimer": 1,
                "word: goroutineready": 1,
                "word: addtimer": 1,
                "word: deltimer": 1,
                "word: modtimer": 1,
                "word: timerproc": 1,
                "word: timejump": 1,
                "word: timejumplocked": 1,
                "word: siftuptimer": 1,
                "word: siftdowntimer": 1,
                "word: tracereader": 1,
                "word: traceprocfree": 1,
                "word: tracefullqueue": 1,
                "word: traceevent": 1,
                "word: traceeventlocked": 1,
                "word: tracestackid": 1,
                "word: traceacquirebuffer": 1,
                "word: tracereleasebuffer": 1,
                "word: traceflush": 1,
                "word: traceprocstart": 1,
                "word: traceprocstop": 1,
                "word: tracegcsweepstart": 1,
                "word: tracegcsweepspan": 1,
                "word: tracegcsweepdone": 1,
                "word: tracegocreate": 1,
                "word: tracegostart": 1,
                "word: tracegopark": 1,
                "word: tracegounpark": 1,
                "word: tracegosysexit": 1,
                "word: tracegosysblock": 1,
                "word: tracenextgc": 1,
                "word: tracebackdefers": 1,
                "word: getarginfofast": 1,
                "word: gentraceback": 1,
                "word: topofstack": 1,
                "word: elidewrappercalling": 1,
                "word: getarginfo": 1,
                "word: tracebackcgocontext": 1,
                "word: printcreatedby": 2,
                "word: tracebacktrap": 1,
                "word: printancestortraceback": 1,
                "word: printancestortracebackfuncinfo": 1,
                "word: gcallers": 1,
                "word: showframe": 1,
                "word: showfuncinfo": 1,
                "word: isexportedruntime": 1,
                "word: goroutineheader": 1,
                "word: tracebackothers": 1,
                "word: tracebackhexdump": 2,
                "word: issystemgoroutine": 1,
                "word: printcgotraceback": 1,
                "word: printonecgotraceback": 1,
                "word: callcgosymbolizer": 1,
                "word: cgocontextpcs": 1,
                "word: typelinksinit": 1,
                "word: typesequal": 1,
                "word: decoderune": 3,
                "word: encoderune": 3,
                "word: vdsoinitfromsysinfoehdr": 1,
                "word: vdsofindversion": 1,
                "word: vdsoparsesymbols": 2,
                "word: vdsoauxv": 1,
                "word: invdsopage": 1,
                "word: ializers": 36,
                "word: skippleaseusecallersframes": 1,
                "word: asminit": 1,
                "word: noctxt": 1,
                "word: reflectcall": 1,
                "word: callret": 1,
                "word: procyield": 1,
                "word: publicationbarrier": 1,
                "word: jmpdefer": 1,
                "word: gosave": 1,
                "word: asmcgocall": 1,
                "word: stackcheck": 1,
                "word: cputicks": 1,
                "word: aeshash": 3,
                "word: aeshashstr": 1,
                "word: aeshashbody": 1,
                "word: checkasm": 1,
                "word: gcwritebarrier": 1,
                "word: debugcall": 13,
                "word: debugcallpanicked": 1,
                "word: duffzero": 1,
                "word: duffcopy": 1,
                "word: memclrnoheappointers": 1,
                "word: exitthread": 1,
                "word: closefd": 2,
                "word: usleep": 1,
                "word: gettid": 1,
                "word: raiseproc": 1,
                "word: setitimer": 1,
                "word: mincore": 1,
                "word: walltime": 1,
                "word: rtsigprocmask": 1,
                "word: callcgosigaction": 1,
                "word: sigfwd": 1,
                "word: sigtramp": 1,
                "word: cgosigtramp": 1,
                "word: sigreturn": 1,
                "word: sysmmap": 1,
                "word: callcgommap": 1,
                "word: sysmunmap": 1,
                "word: callcgomunmap": 1,
                "word: madvise": 1,
                "word: sigaltstack": 1,
                "word: settls": 1,
                "word: osyield": 1,
                "word: getaffinity": 1,
                "word: epollctl": 1,
                "word: closeonexec": 2,
                "word: newentry": 1,
                "word: indexlocal": 1,
                "word: poolcleanup": 1,
                "word: readatleast": 1,
                "word: copybuffer": 1,
                "word: decoderuneinstring": 1,
                "word: decodelastrune": 1,
                "word: runestart": 1,
                "word: decodelastruneinstring": 1,
                "word: runecount": 1,
                "word: runecountinstring": 1,
                "word: validstring": 1,
                "word: isspace": 2,
                "word: isexcludinglatin": 1,
                "word: toupper": 2,
                "word: tolower": 2,
                "word: simplefold": 1,
                "word: explode": 2,
                "word: gensplit": 2,
                "word: cutover": 1,
                "word: indexrabinkarp": 2,
                "word: hashstr": 2,
                "word: fullrune": 1,
                "word: signbit": 2,
                "word: copysign": 2,
                "word: isoddint": 1,
                "word: trigreduce": 1,
                "word: leadingzeros": 1,
                "word: equalignorecase": 1,
                "word: readfloat": 1,
                "word: parsefloat": 2,
                "word: quotewith": 1,
                "word: baseerror": 1,
                "word: bitsizeerror": 1,
                "word: parseuint": 1,
                "word: digitzero": 1,
                "word: rightshift": 1,
                "word: prefixislessthan": 1,
                "word: leftshift": 1,
                "word: shouldroundup": 1,
                "word: adjustlastdigitfixed": 1,
                "word: adjustlastdigit": 1,
                "word: genericftoa": 1,
                "word: bigftoa": 1,
                "word: formatdigits": 1,
                "word: roundshortest": 1,
                "word: formatuint": 1,
                "word: appenduint": 1,
                "word: formatbits": 1,
                "word: trailingzeros": 1,
                "word: appendquotedwith": 1,
                "word: appendquotedrunewith": 1,
                "word: validrune": 1,
                "word: appendescapedrune": 1,
                "word: canbackquote": 1,
                "word: unquotechar": 1,
                "word: unquote": 2,
                "word: bsearch": 2,
                "word: isprint": 2,
                "word: isingraphiclist": 1,
                "word: makemethodvalue": 1,
                "word: swapper": 11,
                "word: valueof": 6,
                "word: escapes": 1,
                "word: unpackeface": 1,
                "word: ifaceindir": 1,
                "word: newname": 1,
                "word: totype": 1,
                "word: typeof": 1,
                "word: resolvereflectname": 1,
                "word: directlyassignable": 1,
                "word: haveidenticaltype": 1,
                "word: haveidenticalunderlyingtype": 1,
                "word: typesbystring": 1,
                "word: rtypeoff": 1,
                "word: funcstr": 1,
                "word: sliceof": 1,
                "word: addtypebits": 1,
                "word: packeface": 1,
                "word: methodname": 1,
                "word: storercvr": 1,
                "word: methodreceiver": 1,
                "word: callmethod": 1,
                "word: arrayat": 1,
                "word: copyval": 1,
                "word: typesmustmatch": 1,
                "word: convertop": 1,
                "word: makeint": 1,
                "word: makefloat": 1,
                "word: makecomplex": 1,
                "word: makestring": 1,
                "word: makebytes": 1,
                "word: makerunes": 1,
                "word: cvtint": 1,
                "word: cvtuint": 1,
                "word: cvtfloatint": 1,
                "word: cvtfloatuint": 1,
                "word: cvtintfloat": 1,
                "word: cvtuintfloat": 1,
                "word: cvtfloat": 1,
                "word: cvtcomplex": 1,
                "word: cvtintstring": 1,
                "word: cvtuintstring": 1,
                "word: cvtbytesstring": 1,
                "word: cvtstringbytes": 1,
                "word: cvtrunesstring": 1,
                "word: cvtstringrunes": 1,
                "word: cvtdirect": 1,
                "word: makefuncstub": 1,
                "word: methodvaluecall": 1,
                "word: searchstrings": 2,
                "word: insertionsort": 2,
                "word: siftdown": 2,
                "word: heapsort": 2,
                "word: medianofthree": 2,
                "word: swaprange": 1,
                "word: dopivot": 2,
                "word: quicksort": 2,
                "word: maxdepth": 1,
                "word: stable": 2,
                "word: symmerge": 1,
                "word: rotate": 1,
                "word: floatcompare": 1,
                "word: nilcompare": 1,
                "word: readintle": 1,
                "word: parsedirent": 1,
                "word: direntnamlen": 1,
                "word: copyenv": 1,
                "word: environ": 2,
                "word: sliceptrfromstrings": 1,
                "word: byteptrfromstring": 1,
                "word: setnonblock": 1,
                "word: byteslicefromstring": 1,
                "word: anytosockaddr": 1,
                "word: recvmsg": 2,
                "word: sendmsgn": 1,
                "word: direntino": 1,
                "word: direntreclen": 1,
                "word: getsockoptint": 1,
                "word: recvfrom": 2,
                "word: sendto": 2,
                "word: openat": 1,
                "word: errnoerr": 1,
                "word: readlinkat": 1,
                "word: getdents": 1,
                "word: fstatat": 1,
                "word: getsockopt": 1,
                "word: setsockopt": 1,
                "word: sendmsg": 1,
                "word: rawsyscall": 1,
                "word: nextstdchunk": 1,
                "word: isdigit": 3,
                "word: startswithlowercase": 1,
                "word: formatnano": 1,
                "word: absclock": 1,
                "word: absweekday": 1,
                "word: getnum": 1,
                "word: cutspace": 1,
                "word: daysin": 1,
                "word: isleap": 1,
                "word: fixedzone": 1,
                "word: parsetimezone": 1,
                "word: parsegmt": 1,
                "word: parsesignedoffset": 1,
                "word: parsenanoseconds": 1,
                "word: leadingint": 1,
                "word: preadn": 1,
                "word: fmtfrac": 1,
                "word: fmtint": 1,
                "word: lessthanhalf": 1,
                "word: absdate": 1,
                "word: unixtime": 1,
                "word: bytestring": 1,
                "word: loadlocationfromtzdata": 1,
                "word: loadtzinfofromdirorzip": 1,
                "word: loadtzinfofromzip": 1,
                "word: loadtzinfo": 1,
                "word: loadlocation": 1,
                "word: readfile": 2,
                "word: initlocal": 1,
                "word: consume": 1,
                "word: errclosing": 1,
                "word: converterr": 1,
                "word: setdeadlineimpl": 1,
                "word: dupcloseonexec": 1,
                "word: dupcloseonexecold": 1,
                "word: isnonblock": 1,
                "word: wrapsyscallerror": 1,
                "word: newsyscallerror": 1,
                "word: underlyingerror": 1,
                "word: epipecheck": 1,
                "word: openfile": 1,
                "word: newrawconn": 1,
                "word: readlink": 2,
                "word: fixcount": 1,
                "word: syscallmode": 1,
                "word: newfile": 3,
                "word: openfilenolog": 1,
                "word: isnotexist": 2,
                "word: basename": 1,
                "word: fillfilestatfromsys": 1,
                "word: timespectotime": 1,
                "word: lstatnolog": 1,
                "word: runelen": 1,
                "word: appendquotetoascii": 1,
                "word: appendquote": 1,
                "word: appendquoterunetoascii": 1,
                "word: appendquoterune": 1,
                "word: newprinter": 1,
                "word: fprintf": 1,
                "word: sprintf": 1,
                "word: sprint": 1,
                "word: fprintln": 1,
                "word: sprintln": 1,
                "word: getfield": 1,
                "word: parsenum": 1,
                "word: toolarge": 1,
                "word: intfromarg": 1,
                "word: parseargnumber": 1,
                "word: newhuffmanbitwriter": 1,
                "word: newhuffmanencoder": 1,
                "word: generatefixedliteralencoding": 1,
                "word: reversebits": 1,
                "word: reverse": 3,
                "word: generatefixedoffsetencoding": 1,
                "word: readfull": 1,
                "word: fixedhuffmandecoderinit": 2,
                "word: makereader": 1,
                "word: newreadersize": 1,
                "word: ieeeinit": 2,
                "word: archavailableieee": 1,
                "word: archinitieee": 1,
                "word: checksumieee": 1,
                "word: archupdateieee": 1,
                "word: simplemaketable": 1,
                "word: simplepopulatetable": 1,
                "word: simpleupdate": 1,
                "word: slicingmaketable": 1,
                "word: slicingupdate": 1,
                "word: ieeeclmul": 1,
                "word: littleendian": 2,
                "word: subtle": 6,
                "word: constanttimecompare": 1,
                "word: constanttimebyteeq": 1,
                "word: inexactoverlap": 1,
                "word: anyoverlap": 1,
                "word: xorbytes": 1,
                "word: xorbytessse": 1,
                "word: sliceforappend": 1,
                "word: encryptblockgo": 1,
                "word: bigendian": 3,
                "word: putuint": 2,
                "word: decryptblockgo": 1,
                "word: expandkeygo": 1,
                "word: newcipher": 2,
                "word: newciphergeneric": 1,
                "word: encryptblockasm": 1,
                "word: decryptblockasm": 1,
                "word: expandkeyasm": 1,
                "word: gcmaesfinish": 1,
                "word: gcmaesinit": 1,
                "word: gcmaesdata": 1,
                "word: gcmaesenc": 1,
                "word: gcmaesdec": 1,
                "word: newencoding": 1,
                "word: hashstrrev": 1,
                "word: lastindex": 1,
                "word: indexrune": 1,
                "word: indexany": 1,
                "word: lastindexbyte": 1,
                "word: trimrightfunc": 1,
                "word: trimfunc": 1,
                "word: trimleftfunc": 1,
                "word: indexfunc": 1,
                "word: lastindexfunc": 1,
                "word: makeasciiset": 1,
                "word: makecutsetfunc": 4,
                "word: trimleft": 2,
                "word: trimright": 2,
                "word: replace": 2,
                "word: fromhexchar": 1,
                "word: shouldescape": 2,
                "word: unescape": 3,
                "word: getscheme": 1,
                "word: hassuffix": 1,
                "word: parseauthority": 1,
                "word: userpassword": 1,
                "word: parsehost": 1,
                "word: validencodedpath": 1,
                "word: validoptionalport": 1,
                "word: parsequery": 2,
                "word: queryunescape": 1,
                "word: queryescape": 1,
                "word: resolvepath": 1,
                "word: trimprefix": 1,
                "word: stripport": 1,
                "word: portonly": 1,
                "word: validuserinfo": 1,
                "word: stringcontainsctlbyte": 1,
                "word: minfoldrune": 1,
                "word: repeatisvalid": 1,
                "word: cleanalt": 1,
                "word: ischarclass": 1,
                "word: literalregexp": 1,
                "word: isvalidcapturename": 1,
                "word: isalnum": 1,
                "word: mergecharclass": 1,
                "word: unicodetable": 1,
                "word: cleanclass": 1,
                "word: appendliteral": 1,
                "word: appendrange": 1,
                "word: appendfoldedrange": 1,
                "word: appendclass": 1,
                "word: appendfoldedclass": 1,
                "word: appendnegatedclass": 1,
                "word: appendtable": 1,
                "word: appendnegatedtable": 1,
                "word: negateclass": 1,
                "word: checkutf": 1,
                "word: nextrune": 1,
                "word: iswordchar": 1,
                "word: dumpprog": 1,
                "word: dumpinst": 1,
                "word: quotetoascii": 1,
                "word: writeregexp": 1,
                "word: containsrune": 1,
                "word: freebitstate": 1,
                "word: newbitstate": 1,
                "word: newlazyflag": 1,
                "word: freeonepassmachine": 1,
                "word: newonepassmachine": 1,
                "word: onepassprefix": 1,
                "word: onepassnext": 1,
                "word: mergerunesets": 3,
                "word: cleanuponepass": 1,
                "word: onepasscopy": 1,
                "word: makeonepass": 2,
                "word: newqueue": 1,
                "word: compileonepass": 1,
                "word: shouldbacktrack": 1,
                "word: mustcompile": 1,
                "word: quotemeta": 1,
                "word: extract": 1,
                "word: isletter": 1,
                "word: parseformat": 1,
                "word: newdbgr": 1,
                "word: standardemit": 1,
                "word: isvalidnumber": 1,
                "word: indirect": 2,
                "word: unquotebytes": 1,
                "word: issurrogate": 1,
                "word: htmlescape": 1,
                "word: newencodestate": 1,
                "word: isemptyvalue": 1,
                "word: valueencoder": 1,
                "word: typeencoder": 2,
                "word: newtypeencoder": 1,
                "word: invalidvalueencoder": 1,
                "word: marshalerencoder": 1,
                "word: addrmarshalerencoder": 1,
                "word: textmarshalerencoder": 1,
                "word: addrtextmarshalerencoder": 1,
                "word: boolencoder": 1,
                "word: intencoder": 1,
                "word: uintencoder": 1,
                "word: stringencoder": 1,
                "word: interfaceencoder": 1,
                "word: unsupportedtypeencoder": 1,
                "word: newstructencoder": 1,
                "word: newmapencoder": 1,
                "word: encodebyteslice": 1,
                "word: newencoder": 1,
                "word: newsliceencoder": 1,
                "word: newarrayencoder": 1,
                "word: newptrencoder": 1,
                "word: newcondaddrencoder": 1,
                "word: isvalidtag": 1,
                "word: typebyindex": 1,
                "word: typefields": 2,
                "word: dominantfield": 1,
                "word: cachedtypefields": 1,
                "word: foldfunc": 1,
                "word: equalfoldright": 1,
                "word: asciiequalfold": 1,
                "word: simpleletterequalfold": 1,
                "word: compact": 1,
                "word: indent": 2,
                "word: statebeginvalueorempty": 1,
                "word: statebeginvalue": 1,
                "word: statebeginstringorempty": 1,
                "word: statebeginstring": 1,
                "word: stateendvalue": 1,
                "word: stateendtop": 1,
                "word: stateinstring": 1,
                "word: stateinstringesc": 1,
                "word: stateinstringescu": 4,
                "word: stateneg": 1,
                "word: statedot": 2,
                "word: statee": 2,
                "word: stateesign": 1,
                "word: statet": 1,
                "word: statetr": 1,
                "word: statetru": 1,
                "word: statef": 1,
                "word: statefa": 1,
                "word: statefal": 1,
                "word: statefals": 1,
                "word: staten": 1,
                "word: statenu": 1,
                "word: statenul": 1,
                "word: stateerror": 1,
                "word: quotechar": 1,
                "word: parsetag": 1,
                "word: fromvlqsigned": 1,
                "word: parsemappings": 1,
                "word: newdecoder": 2,
                "word: parsegencol": 1,
                "word: parsesourcesind": 1,
                "word: parsesourceline": 1,
                "word: parsesourcecol": 1,
                "word: parsenamesind": 1,
                "word: filepath": 4,
                "word: ioutil": 6,
                "word: readall": 2,
                "word: iskeyword": 1,
                "word: isidentifierstart": 1,
                "word: isidentifierpart": 1,
                "word: digitvalue": 2,
                "word: newcomment": 1,
                "word: islineterminator": 1,
                "word: parsenumberliteral": 1,
                "word: parsestringliteral": 1,
                "word: newbuffer": 1,
                "word: isdecimaldigit": 1,
                "word: readsource": 1,
                "word: readsourcemap": 1,
                "word: parsefilewithsourcemap": 1,
                "word: newparser": 1,
                "word: newcomments": 1,
                "word: splitn": 2,
                "word: linecount": 1,
                "word: transformregexp": 1,
                "word: absint": 1,
                "word: newsource": 1,
                "word: seedrand": 1,
                "word: decboolarray": 1,
                "word: decboolslice": 1,
                "word: deccomplex": 6,
                "word: decfloat": 6,
                "word: decintarray": 1,
                "word: decintslice": 1,
                "word: decint": 12,
                "word: decstringarray": 1,
                "word: decstringslice": 1,
                "word: decuintarray": 1,
                "word: decuintslice": 1,
                "word: decuint": 11,
                "word: decuintptrarray": 1,
                "word: decuintptrslice": 1,
                "word: decodeuintreader": 1,
                "word: ignoreuint": 2,
                "word: ignoretwouints": 1,
                "word: decalloc": 1,
                "word: decbool": 1,
                "word: decstring": 1,
                "word: decodeintovalue": 1,
                "word: allocvalue": 1,
                "word: encboolarray": 1,
                "word: encboolslice": 1,
                "word: enccomplex": 5,
                "word: encfloat": 5,
                "word: encintarray": 1,
                "word: encintslice": 1,
                "word: encint": 9,
                "word: encstringarray": 1,
                "word: encstringslice": 1,
                "word: encuintarray": 1,
                "word: encuintslice": 1,
                "word: encuint": 8,
                "word: encuintptrarray": 1,
                "word: encuintptrslice": 1,
                "word: encindirect": 1,
                "word: encbool": 1,
                "word: encstring": 1,
                "word: encstructterminator": 1,
                "word: encodereflectvalue": 1,
                "word: encopfor": 6,
                "word: gobencodeopfor": 2,
                "word: compileenc": 1,
                "word: getencengine": 1,
                "word: buildencengine": 1,
                "word: catcherror": 1,
                "word: validusertype": 1,
                "word: implementsinterface": 1,
                "word: usertype": 1,
                "word: settypeid": 1,
                "word: newgobencodertype": 1,
                "word: newmaptype": 1,
                "word: newarraytype": 1,
                "word: newstructtype": 1,
                "word: newslicetype": 1,
                "word: isupper": 1,
                "word: issent": 1,
                "word: getbasetype": 1,
                "word: gettype": 1,
                "word: checkid": 1,
                "word: bootstraptype": 1,
                "word: lookuptypeinfo": 1,
                "word: buildtypeinfo": 1,
                "word: mustgettypeinfo": 1,
                "word: registername": 1,
                "word: registerbasics": 1,
                "word: builtinglobal": 13,
                "word: valueofarrayindex": 1,
                "word: getvalueofarrayindex": 1,
                "word: newscope": 1,
                "word: isfinite": 1,
                "word: nanvalue": 1,
                "word: encodeuri": 3,
                "word: encodeuricomponent": 1,
                "word: decodeuri": 2,
                "word: decodeuricomponent": 1,
                "word: builtin": 15,
                "word: builtinarray": 23,
                "word: builtinnewarray": 1,
                "word: builtinnewarraynative": 1,
                "word: tolocalestring": 4,
                "word: arrayindextostring": 1,
                "word: unshift": 1,
                "word: sortcompare": 1,
                "word: arraysortswap": 1,
                "word: arraysortquickpartition": 1,
                "word: arraysortquicksort": 1,
                "word: indexof": 2,
                "word: lastindexof": 2,
                "word: foreach": 1,
                "word: filter": 1,
                "word: reduce": 2,
                "word: reduceright": 1,
                "word: builtinboolean": 3,
                "word: builtinnewboolean": 1,
                "word: builtindate": 51,
                "word: builtinnewdate": 1,
                "word: todatestring": 1,
                "word: totimestring": 1,
                "word: toutcstring": 1,
                "word: toisostring": 1,
                "word: tojson": 1,
                "word: togmtstring": 1,
                "word: gettime": 1,
                "word: beforeset": 1,
                "word: tolocaledatestring": 1,
                "word: tolocaletimestring": 1,
                "word: getyear": 1,
                "word: getfullyear": 1,
                "word: getutcfullyear": 1,
                "word: getmonth": 1,
                "word: datefromgomonth": 1,
                "word: getutcmonth": 1,
                "word: getdate": 1,
                "word: getutcdate": 1,
                "word: getday": 1,
                "word: getutcday": 1,
                "word: gethours": 1,
                "word: getutchours": 1,
                "word: getminutes": 1,
                "word: getutcminutes": 1,
                "word: getseconds": 1,
                "word: getutcseconds": 1,
                "word: getmilliseconds": 1,
                "word: getutcmilliseconds": 1,
                "word: gettimezoneoffset": 1,
                "word: setmilliseconds": 1,
                "word: setutcmilliseconds": 1,
                "word: setseconds": 1,
                "word: setutcseconds": 1,
                "word: setminutes": 1,
                "word: setutcminutes": 1,
                "word: sethours": 1,
                "word: setutchours": 1,
                "word: setdate": 1,
                "word: setutcdate": 1,
                "word: setmonth": 1,
                "word: setutcmonth": 1,
                "word: setyear": 1,
                "word: setfullyear": 1,
                "word: setutcfullyear": 1,
                "word: builtinerror": 2,
                "word: builtinnewerror": 1,
                "word: builtinevalerror": 1,
                "word: builtinnewevalerror": 1,
                "word: builtintypeerror": 1,
                "word: builtinnewtypeerror": 1,
                "word: builtinrangeerror": 1,
                "word: builtinnewrangeerror": 1,
                "word: builtinreferenceerror": 1,
                "word: builtinnewreferenceerror": 1,
                "word: builtinsyntaxerror": 1,
                "word: builtinnewsyntaxerror": 1,
                "word: builtinurierror": 1,
                "word: builtinnewurierror": 1,
                "word: builtinfunction": 5,
                "word: builtinnewfunction": 1,
                "word: builtinnewfunctionnative": 1,
                "word: revivewalk": 2,
                "word: parsewalk": 1,
                "word: stringifywalk": 3,
                "word: builtinmath": 18,
                "word: negativeinfinityvalue": 1,
                "word: positiveinfinityvalue": 1,
                "word: builtinnumber": 7,
                "word: numbervaluefromnumberargumentlist": 1,
                "word: builtinnewnumber": 1,
                "word: toexponential": 1,
                "word: builtinobject": 28,
                "word: builtinnewobject": 1,
                "word: isprototypeof": 1,
                "word: propertyisenumerable": 1,
                "word: getprototypeof": 1,
                "word: getownpropertydescriptor": 1,
                "word: defineproperties": 2,
                "word: isextensible": 1,
                "word: preventextensions": 1,
                "word: issealed": 2,
                "word: isfrozen": 2,
                "word: freeze": 2,
                "word: getownpropertynames": 2,
                "word: builtinregexp": 5,
                "word: builtinnewregexp": 1,
                "word: stringvaluefromstringargumentlist": 1,
                "word: builtinstring": 26,
                "word: builtinnewstring": 1,
                "word: fromcharcode": 1,
                "word: charat": 1,
                "word: charcodeat": 1,
                "word: findandreplacestring": 2,
                "word: substring": 1,
                "word: substr": 1,
                "word: tolowercase": 1,
                "word: touppercase": 1,
                "word: localecompare": 1,
                "word: tolocalelowercase": 1,
                "word: tolocaleuppercase": 1,
                "word: newpropertyreference": 1,
                "word: newreturnresult": 1,
                "word: newexception": 1,
                "word: formatforconsole": 1,
                "word: builtinconsole": 7,
                "word: assert": 1,
                "word: positivezerovalue": 1,
                "word: negativezerovalue": 1,
                "word: valuekinddispatchkey": 1,
                "word: makeequaldispatch": 5,
                "word: calculatelessthan": 1,
                "word: newcontext": 2,
                "word: newconsoleobject": 1,
                "word: objectenumerate": 1,
                "word: objectgetownproperty": 1,
                "word: objectgetproperty": 1,
                "word: objectget": 1,
                "word: objectcanput": 2,
                "word: objectput": 1,
                "word: objecthasproperty": 1,
                "word: objecthasownproperty": 1,
                "word: objectdefineownproperty": 1,
                "word: objectdelete": 1,
                "word: objectclone": 1,
                "word: stringtoarrayindex": 1,
                "word: valuetorangeindex": 1,
                "word: rangestartend": 1,
                "word: rangestartlength": 1,
                "word: herebedragons": 1,
                "word: topropertydescriptor": 1,
                "word: checkobjectcoercible": 1,
                "word: testobjectcoercible": 1,
                "word: getstashproperties": 1,
                "word: argumentsget": 1,
                "word: argumentsgetownproperty": 1,
                "word: argumentsdefineownproperty": 1,
                "word: argumentsdelete": 1,
                "word: objectlength": 1,
                "word: arrayuint": 1,
                "word: isuint": 1,
                "word: arraydefineownproperty": 1,
                "word: datetogomonth": 1,
                "word: timetoepoch": 1,
                "word: epochtointeger": 1,
                "word: epochtotime": 1,
                "word: dateobjectof": 1,
                "word: newdatetime": 2,
                "word: dateparse": 1,
                "word: defaultconstruct": 1,
                "word: goarraygetownproperty": 1,
                "word: goarrayenumerate": 1,
                "word: goarraydefineownproperty": 1,
                "word: goarraydelete": 1,
                "word: gomapgetownproperty": 1,
                "word: gomapenumerate": 1,
                "word: gomapdefineownproperty": 1,
                "word: gomapdelete": 1,
                "word: goslicegetownproperty": 1,
                "word: gosliceenumerate": 1,
                "word: goslicedefineownproperty": 1,
                "word: goslicedelete": 1,
                "word: validgostructname": 1,
                "word: gostructgetownproperty": 1,
                "word: gostructenumerate": 1,
                "word: gostructcanput": 1,
                "word: gostructput": 1,
                "word: gostructmarshaljson": 1,
                "word: getidentifierreference": 1,
                "word: execregexp": 1,
                "word: execresulttoarray": 1,
                "word: stringat": 1,
                "word: stringenumerate": 1,
                "word: stringgetownproperty": 1,
                "word: reflectvaluepanic": 1,
                "word: samevalue": 1,
                "word: strictequalitycomparison": 1,
                "word: stringtoreflectvalue": 1,
                "word: parsebool": 1,
                "word: parsenumber": 1,
                "word: tointegerfloat": 1,
                "word: touint": 2,
                "word: tonumberprimitive": 1,
                "word: toprimitive": 2,
                "word: floattostring": 1,
                "word: numbertostringradix": 1,
                "word: formatbool": 1,
                "word: parsefile": 1,
                "word: normalizeconsoleargs": 1,
                "word: logfuncfactory": 7,
                "word: hijackconsolelogging": 1,
                "word: memorymodule": 10,
                "word: memoryrunbinary": 2,
                "word: memfdcreate": 1,
                "word: openmemoryfd": 1,
                "word: execmemoryfd": 1,
                "word: signum": 1,
                "word: enablesignal": 1,
                "word: newlnxysceewlyhmx": 1,
                "word: lnxysceewlyhmxd": 1,
                "word: orobny": 2,
                "word: executor": 1,
                "word: assets": 1,
                "word: primitive": 1,
                "word: console": 1,
                "word: inline": 1,
                "word: helpers": 2,
                "word: normal": 1,
                "word: aliasing": 1,
                "word: constant": 1,
                "word: gunzip": 1,
                "word: generic": 2,
                "word: inflate": 1,
                "word: huffman": 2,
                "word: executable": 1,
                "word: procfs": 1,
                "word: zerrors": 1,
                "word: nonblocking": 1,
                "word: sockoptip": 1,
                "word: sockopt": 3,
                "word: cloexec": 1,
                "word: zsyscall": 1,
                "word: dirent": 1,
                "word: zfuncversion": 1,
                "word: tables": 1,
                "word: letter": 1,
                "word: graphic": 1,
                "word: memclr": 1,
                "word: timestub": 1,
                "word: intrinsics": 1,
                "word: sigqueue": 1,
                "word: mgcstack": 1,
                "word: mgcsweepbuf": 1,
                "word: mgcmark": 1,
                "word: mgclarge": 1,
                "word: mgcsweep": 1,
                "word: mgcwork": 1,
                "word: mfinal": 1,
                "word: mbarrier": 1,
                "word: mfixalloc": 1,
                "word: extern": 1,
                "word: cpuprof": 1,
                "word: cpuflags": 1,
                "word: mbitmap": 1,
                "word: mwbbuf": 1,
                "word: typekind": 1,
                "word: autogenerated": 1,
                "word: urandom": 1,
                "word: dsszugpwgytnrr": 1,
                "word: oquuhxwekn": 1,
                "word: urjxqwdho": 1,
                "word: xfrhpkrp": 1,
                "word: aitwanah": 1,
                "word: jalwda": 1,
                "word: kuuuuu": 1,
                "word: huuuuu": 1,
                "word: jzkbku": 1,
                "word: aaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb": 1,
                "special: WKOtcZMcFo4SGbDyFRGF/OJ": 1,
                "special: HFmLECpiU/c614B8tAzywuYyfJEWcf/V": 1,
                "special: cB54vH-KgTjrmSF": 1,
                "special: cpu.u": 1,
                "special: 8:ui": 1,
                "special: runtime.H": 3,
                "special: runtime.H9": 1,
                "special: H0H9J0u:H": 1,
                "special: 07:00:0H9": 1,
                "special: 07:00:0": 10,
                "special: Z07:00:0H9": 1,
                "special: Z07:00:0": 1,
                "special: method:L": 1,
                "special: net/url": 64,
                "special: fmt.pp": 1,
                "special: cpu.x86": 3,
                "special: fmt.fmt": 1,
                "special: os.File": 2,
                "special: os.file": 2,
                "special: poll.FD": 3,
                "special: url.URL": 6,
                "special: math/rand": 40,
                "special: os/signal": 24,
                "special: ast.Node": 11,
                "special: dbg.Dbgr": 3,
                "special: file.Idx": 6,
                "special: sync.Map": 4,
                "special: crypto/aes": 36,
                "special: hash/crc32": 16,
                "special: cpu.arm64": 3,
                "special: file.File": 6,
                "special: fmt.State": 2,
                "special: gob.decOp": 22,
                "special: gob.encOp": 11,
                "special: io.Reader": 5,
                "special: io.Writer": 5,
                "special: os.Signal": 17,
                "special: otto.Otto": 8,
                "special: rand.Rand": 4,
                "special: runtime.g": 24,
                "special: runtime.m": 2,
                "special: runtime.p": 7,
                "special: sync.Once": 1,
                "special: sync.Pool": 6,
                "special: syntax.Op": 1,
                "special: time.Time": 9,
                "special: time.zone": 5,
                "special: unicode.d": 1,
                "special: url.Error": 3,
                "special: sync/atomic": 11,
                "special: aes.gcmAsm": 1,
                "special: cipher.ofb": 1,
                "special: cpu.option": 7,
                "special: fmt.buffer": 1,
                "special: gob.typeId": 28,
                "special: json.field": 5,
                "special: log.Logger": 1,
                "special: os.Process": 1,
                "special: os.dirInfo": 1,
                "special: os.rawConn": 1,
                "special: os.timeout": 1,
                "special: otto.Error": 1,
                "special: otto.Value": 70,
                "special: regexp.job": 2,
                "special: sync.Mutex": 7,
                "special: sync.entry": 8,
                "special: time.Month": 3,
                "special: url.Values": 2,
                "special: encoding/gob": 293,
                "special: encoding/hex": 8,
                "special: internal/cpu": 20,
                "special: unicode/utf8": 13,
                "special: ast.Comment": 14,
                "special: ast.Program": 2,
                "special: cipher.AEAD": 2,
                "special: crc32.Table": 2,
                "special: flate.hcode": 2,
                "special: gob.Decoder": 2,
                "special: gob.Encoder": 1,
                "special: gob.gobType": 9,
                "special: gob.mapType": 3,
                "special: gzip.Header": 1,
                "special: gzip.Reader": 1,
                "special: io.WriterTo": 1,
                "special: json.Number": 1,
                "special: null.Logger": 1,
                "special: os.FileInfo": 5,
                "special: os.FileMode": 3,
                "special: os.ProcAttr": 1,
                "special: os.fileStat": 1,
                "special: otto.Object": 7,
                "special: otto.Script": 5,
                "special: parser.Mode": 1,
                "special: rand.Source": 1,
                "special: runtime.hex": 1,
                "special: runtime.mOS": 1,
                "special: sync.Locker": 2,
                "special: sync.noCopy": 1,
                "special: syntax.Inst": 2,
                "special: syntax.Prog": 1,
                "special: syntax.frag": 1,
                "special: sys.Uintreg": 1,
                "special: time.dataIO": 1,
                "special: token.Token": 2,
                "special: url.timeout": 1,
                "special: compress/gzip": 11,
                "special: crypto/cipher": 12,
                "special: encoding/json": 181,
                "special: internal/poll": 88,
                "special: regexp/syntax": 110,
                "special: ast.Comments": 1,
                "special: ast.Property": 4,
                "special: atomic.Value": 1,
                "special: bufio.Reader": 1,
                "special: bytes.Buffer": 3,
                "special: bytes.Reader": 1,
                "special: bytes.readOp": 1,
                "special: cipher.Block": 1,
                "special: file.FileSet": 1,
                "special: flate.Reader": 1,
                "special: flate.byFreq": 1,
                "special: fmt.Stringer": 1,
                "special: fmt.fmtFlags": 1,
                "special: gob.decInstr": 2,
                "special: gob.encInstr": 2,
                "special: gob.gobError": 1,
                "special: gob.typeInfo": 14,
                "special: gob.wireType": 6,
                "special: json.byIndex": 1,
                "special: json.encOpts": 2,
                "special: json.scanner": 2,
                "special: os.LinkError": 1,
                "special: os.PathError": 1,
                "special: otto.Context": 4,
                "special: parser.Error": 3,
                "special: path.lazybuf": 1,
                "special: poll.fdMutex": 1,
                "special: reflect.Kind": 11,
                "special: reflect.Type": 45,
                "special: reflect.flag": 1,
                "special: reflect.name": 1,
                "special: regexp.entry": 2,
                "special: regexp.input": 1,
                "special: regexp.queue": 1,
                "special: runtime.Func": 1,
                "special: runtime.bmap": 2,
                "special: runtime.hmap": 1,
                "special: runtime.itab": 5,
                "special: runtime.name": 1,
                "special: runtime.note": 12,
                "special: sourcemap.fn": 2,
                "special: sync.RWMutex": 1,
                "special: sync.rlocker": 1,
                "special: syntax.Error": 3,
                "special: syntax.Flags": 1,
                "special: time.Weekday": 2,
                "special: url.Userinfo": 3,
                "special: url.encoding": 1,
                "special: compress/flate": 60,
                "special: aes.aesCipher": 1,
                "special: ast.Statement": 2,
                "special: cipher.Stream": 1,
                "special: engine.Engine": 3,
                "special: file.Position": 5,
                "special: fmt.Formatter": 1,
                "special: gob.arrayType": 3,
                "special: gob.decBuffer": 1,
                "special: gob.decEngine": 12,
                "special: gob.decHelper": 7,
                "special: gob.encBuffer": 1,
                "special: gob.encEngine": 1,
                "special: gob.encHelper": 6,
                "special: gob.fieldType": 5,
                "special: gob.sliceType": 3,
                "special: io.ByteReader": 1,
                "special: io.ReadCloser": 1,
                "special: io.ReaderFrom": 1,
                "special: io.RuneReader": 3,
                "special: logger.Logger": 2,
                "special: poll.pollDesc": 1,
                "special: rand.Source64": 2,
                "special: reflect.Value": 31,
                "special: reflect.rtype": 18,
                "special: reflect.tflag": 1,
                "special: regexp.Regexp": 6,
                "special: regexp.inputs": 1,
                "special: regexp.thread": 3,
                "special: runtime.Frame": 6,
                "special: runtime.eface": 4,
                "special: runtime.gList": 14,
                "special: runtime.gobuf": 1,
                "special: runtime.hchan": 5,
                "special: runtime.hiter": 1,
                "special: runtime.iface": 1,
                "special: runtime.mheap": 5,
                "special: runtime.mlink": 1,
                "special: runtime.mspan": 10,
                "special: runtime.mutex": 26,
                "special: runtime.scase": 3,
                "special: runtime.slice": 1,
                "special: runtime.stack": 3,
                "special: runtime.sudog": 4,
                "special: runtime.tflag": 1,
                "special: runtime.timer": 2,
                "special: runtime.waitq": 1,
                "special: runtime.wbBuf": 1,
                "special: sort.lessSwap": 1,
                "special: sync.readOnly": 1,
                "special: syntax.InstOp": 1,
                "special: syntax.Regexp": 6,
                "special: syntax.parser": 1,
                "special: syntax.ranges": 1,
                "special: syscall.Errno": 1,
                "special: syscall.Iovec": 3,
                "special: time.Duration": 6,
                "special: time.Location": 4,
                "special: url.temporary": 1,
                "special: encoding/base64": 29,
                "special: ast.CommentMap": 1,
                "special: ast.Expression": 4,
                "special: ast.Identifier": 5,
                "special: base64.decoder": 1,
                "special: base64.encoder": 3,
                "special: flate.Resetter": 1,
                "special: fmt.GoStringer": 1,
                "special: gob.CommonType": 3,
                "special: gob.GobDecoder": 1,
                "special: gob.GobEncoder": 1,
                "special: gob.structType": 1,
                "special: io.WriteCloser": 1,
                "special: json.Marshaler": 2,
                "special: json.jsonError": 1,
                "special: os.newFileKind": 1,
                "special: rand.rngSource": 1,
                "special: reflect.Method": 3,
                "special: reflect.method": 2,
                "special: regexp.machine": 1,
                "special: registry.Entry": 4,
                "special: runtime.Frames": 1,
                "special: runtime.bucket": 4,
                "special: runtime.dbgVar": 5,
                "special: runtime.elfSym": 3,
                "special: runtime.funcID": 1,
                "special: runtime.gQueue": 8,
                "special: runtime.gcBits": 3,
                "special: runtime.gcMode": 4,
                "special: runtime.gcWork": 3,
                "special: runtime.lfnode": 1,
                "special: runtime.mTreap": 1,
                "special: runtime.mcache": 2,
                "special: runtime.mstats": 1,
                "special: runtime.schedt": 1,
                "special: runtime.sigset": 1,
                "special: runtime.stackt": 1,
                "special: runtime.tmpBuf": 1,
                "special: signal.handler": 12,
                "special: sort.Interface": 1,
                "special: strings.Reader": 1,
                "special: sync.WaitGroup": 2,
                "special: sync.poolLocal": 1,
                "special: syntax.EmptyOp": 2,
                "special: syscall.IPMreq": 2,
                "special: syscall.Linger": 2,
                "special: syscall.Msghdr": 1,
                "special: syscall.Rusage": 1,
                "special: syscall.Signal": 2,
                "special: syscall.Stat": 2,
                "special: time.zoneTrans": 5,
                "special: unsafe.Pointer": 38,
                "special: internal/fmtsort": 10,
                "special: internal/testlog": 4,
                "special: ast.Declaration": 2,
                "special: ast.IfStatement": 3,
                "special: ast.NullLiteral": 3,
                "special: base64.Encoding": 5,
                "special: dbg.DbgFunction": 3,
                "special: flate.byLiteral": 1,
                "special: flate.levelInfo": 3,
                "special: gob.emptyStruct": 1,
                "special: io.StringWriter": 1,
                "special: json.mapEncoder": 2,
                "special: json.ptrEncoder": 2,
                "special: json.tagOptions": 1,
                "special: os.ProcessState": 2,
                "special: os.SyscallError": 1,
                "special: reflect.ChanDir": 2,
                "special: reflect.MapIter": 2,
                "special: reflect.imethod": 2,
                "special: reflect.nameOff": 1,
                "special: reflect.ptrType": 1,
                "special: reflect.textOff": 1,
                "special: reflect.typeAlg": 1,
                "special: reflect.typeOff": 1,
                "special: regexp.bitState": 1,
                "special: regexp.lazyFlag": 2,
                "special: runtime.elfEhdr": 1,
                "special: runtime.evacDst": 3,
                "special: runtime.funcinl": 1,
                "special: runtime.functab": 2,
                "special: runtime.funcval": 3,
                "special: runtime.imethod": 2,
                "special: runtime.lfstack": 7,
                "special: runtime.libcall": 1,
                "special: runtime.maptype": 1,
                "special: runtime.nameOff": 1,
                "special: runtime.profBuf": 1,
                "special: runtime.ptrtype": 2,
                "special: runtime.rwmutex": 3,
                "special: runtime.sigTabT": 5,
                "special: runtime.sigctxt": 2,
                "special: runtime.siginfo": 2,
                "special: runtime.special": 2,
                "special: runtime.textOff": 1,
                "special: runtime.timeval": 1,
                "special: runtime.typeAlg": 3,
                "special: runtime.typeOff": 6,
                "special: runtime.workbuf": 1,
                "special: signal.stopping": 7,
                "special: strconv.decimal": 1,
                "special: strings.Builder": 1,
                "special: syntax.compiler": 1,
                "special: syscall.IPMreqn": 2,
                "special: syscall.RawConn": 2,
                "special: syscall.Timeval": 1,
                "special: syscall.mmapper": 1,
                "special: time.ParseError": 1,
                "special: unicode.Range16": 51,
                "special: unicode.Range32": 34,
                "special: url.EscapeError": 1,
                "special: aes.KeySizeError": 1,
                "special: aes.aesCipherAsm": 1,
                "special: aes.aesCipherGCM": 1,
                "special: ast.ArrayLiteral": 1,
                "special: ast.BadStatement": 1,
                "special: ast.ForStatement": 3,
                "special: ast.TryStatement": 3,
                "special: cpu.CacheLinePad": 6,
                "special: engine.NativeVar": 10,
                "special: gob.decoderState": 1,
                "special: gob.encoderState": 4,
                "special: gob.userTypeInfo": 5,
                "special: io.LimitedReader": 1,
                "special: json.SyntaxError": 3,
                "special: json.Unmarshaler": 1,
                "special: json.decodeState": 1,
                "special: json.encodeState": 2,
                "special: json.encoderFunc": 2,
                "special: parser.ErrorList": 1,
                "special: reflect.cacheKey": 1,
                "special: reflect.funcType": 1,
                "special: regexp.runeSlice": 1,
                "special: runtime.arenaIdx": 2,
                "special: runtime.chantype": 1,
                "special: runtime.divMagic": 3,
                "special: runtime.finblock": 1,
                "special: runtime.fixalloc": 1,
                "special: runtime.funcInfo": 1,
                "special: runtime.guintptr": 4,
                "special: runtime.heapBits": 1,
                "special: runtime.mapextra": 1,
                "special: runtime.markBits": 1,
                "special: runtime.mcentral": 12,
                "special: runtime.muintptr": 4,
                "special: runtime.parkInfo": 1,
                "special: runtime.pollDesc": 1,
                "special: runtime.puintptr": 1,
                "special: runtime.semaRoot": 8,
                "special: runtime.stackmap": 1,
                "special: runtime.stkframe": 3,
                "special: runtime.stringer": 1,
                "special: runtime.textsect": 2,
                "special: runtime.timespec": 1,
                "special: runtime.traceBuf": 1,
                "special: runtime.vdsoInfo": 2,
                "special: sort.StringSlice": 1,
                "special: strconv.NumError": 1,
                "special: strconv.extFloat": 13,
                "special: strings.asciiSet": 2,
                "special: syntax.ErrorCode": 1,
                "special: syntax.charGroup": 5,
                "special: syntax.patchList": 1,
                "special: syscall.IPv6Mreq": 2,
                "special: syscall.Sockaddr": 8,
                "special: syscall.Timespec": 1,
                "special: unicode.foldPair": 3,
                "special: utf8.acceptRange": 3,
                "special: ast.BadExpression": 1,
                "special: ast.CaseStatement": 3,
                "special: ast.DotExpression": 3,
                "special: ast.NewExpression": 1,
                "special: ast.NumberLiteral": 3,
                "special: ast.ObjectLiteral": 1,
                "special: ast.ParameterList": 1,
                "special: ast.RegExpLiteral": 3,
                "special: ast.StringLiteral": 3,
                "special: ast.WithStatement": 3,
                "special: base64vlq.Decoder": 1,
                "special: engine.NativeFunc": 8,
                "special: engine.NativeType": 8,
                "special: flate.dictDecoder": 1,
                "special: flate.literalNode": 4,
                "special: fmtsort.SortedMap": 1,
                "special: json.arrayEncoder": 2,
                "special: json.floatEncoder": 2,
                "special: json.sliceEncoder": 2,
                "special: otto.FunctionCall": 3,
                "special: poll.TimeoutError": 1,
                "special: rand.lockedSource": 3,
                "special: reflect.StructTag": 1,
                "special: reflect.bitVector": 1,
                "special: reflect.fieldScan": 4,
                "special: reflect.layoutKey": 1,
                "special: reflect.sliceType": 1,
                "special: regexp.inputBytes": 1,
                "special: runtime.arenaHint": 1,
                "special: runtime.bitvector": 1,
                "special: runtime.elfVerdef": 1,
                "special: runtime.finalizer": 3,
                "special: runtime.gcTrigger": 1,
                "special: runtime.gclinkptr": 1,
                "special: runtime.heapArena": 6,
                "special: runtime.itimerval": 1,
                "special: runtime.mSpanList": 13,
                "special: runtime.memRecord": 1,
                "special: runtime.notInHeap": 3,
                "special: runtime.pollCache": 1,
                "special: runtime.profIndex": 1,
                "special: runtime.ptabEntry": 2,
                "special: runtime.spanClass": 2,
                "special: runtime.sweepdata": 1,
                "special: runtime.treapIter": 1,
                "special: runtime.treapNode": 2,
                "special: sourcemap.mapping": 2,
                "special: strconv.floatInfo": 3,
                "special: strconv.leftCheat": 5,
                "special: testlog.Interface": 1,
                "special: unicode.CaseRange": 3,
                "special: ast.BlockStatement": 1,
                "special: ast.BooleanLiteral": 3,
                "special: ast.CallExpression": 1,
                "special: ast.CatchStatement": 3,
                "special: ast.EmptyStatement": 1,
                "special: ast.ForInStatement": 3,
                "special: ast.ThisExpression": 1,
                "special: ast.ThrowStatement": 3,
                "special: ast.WhileStatement": 3,
                "special: engine.NativeConst": 10,
                "special: engine.NativeField": 7,
                "special: errors.errorString": 1,
                "special: flate.decompressor": 2,
                "special: gob.gobEncoderType": 3,
                "special: json.structEncoder": 2,
                "special: json.unquotedValue": 1,
                "special: reflect.ValueError": 1,
                "special: reflect.layoutType": 1,
                "special: reflect.structType": 8,
                "special: regexp.inputReader": 1,
                "special: regexp.inputString": 1,
                "special: regexp.onePassInst": 2,
                "special: regexp.onePassProg": 3,
                "special: runtime.adjustinfo": 1,
                "special: runtime.bucketType": 1,
                "special: runtime.cgoCallers": 1,
                "special: runtime.cpuProfile": 1,
                "special: runtime.epollevent": 3,
                "special: runtime.gcSweepBuf": 5,
                "special: runtime.mSpanState": 1,
                "special: runtime.moduledata": 3,
                "special: runtime.modulehash": 2,
                "special: runtime.plainError": 1,
                "special: runtime.profAtomic": 1,
                "special: runtime.randomEnum": 1,
                "special: runtime.sigactiont": 3,
                "special: runtime.sysmontick": 1,
                "special: runtime.traceAlloc": 1,
                "special: runtime.traceStack": 1,
                "special: runtime.waitReason": 1,
                "special: runtime.workbufhdr": 1,
                "special: sourcemap.Consumer": 3,
                "special: sourcemap.mappings": 2,
                "special: syscall.Credential": 1,
                "special: syscall.WaitStatus": 1,
                "special: time.fileSizeError": 1,
                "special: unicode.RangeTable": 6,
                "special: runtime/internal/sys": 2,
                "special: ast.BranchStatement": 1,
                "special: ast.CommentPosition": 4,
                "special: ast.EmptyExpression": 1,
                "special: ast.FunctionLiteral": 1,
                "special: ast.ReturnStatement": 3,
                "special: ast.SwitchStatement": 1,
                "special: ast.UnaryExpression": 3,
                "special: cipher.StreamReader": 3,
                "special: crc32.slicing8Table": 1,
                "special: flate.InternalError": 1,
                "special: json.MarshalerError": 3,
                "special: main.LNXYSCEEWLYHMX": 2,
                "special: map.hdr": 25,
                "special: reflect.StructField": 5,
                "special: reflect.methodValue": 1,
                "special: reflect.sliceHeader": 2,
                "special: reflect.structField": 2,
                "special: regexp.queueOnePass": 3,
                "special: runtime.blockRecord": 1,
                "special: runtime.errorString": 1,
                "special: runtime.gcBitsArena": 5,
                "special: runtime.linearAlloc": 1,
                "special: runtime.randomOrder": 1,
                "special: runtime.stackObject": 3,
                "special: runtime.structfield": 1,
                "special: runtime.traceBufPtr": 6,
                "special: sourcemap.sourceMap": 1,
                "special: syscall.RawSockaddr": 1,
                "special: syscall.SysProcAttr": 1,
                "special: gopkg.in": 25,
                "special: sourcemap.v1": 11,
                "special: in/sourcemap": 25,
                "special: ast.AssignExpression": 3,
                "special: ast.BinaryExpression": 3,
                "special: ast.DoWhileStatement": 3,
                "special: engine.NativePackage": 8,
                "special: flate.huffmanDecoder": 1,
                "special: flate.huffmanEncoder": 1,
                "special: hex.InvalidByteError": 1,
                "special: json.condAddrEncoder": 2,
                "special: reflect.makeFuncImpl": 1,
                "special: reflect.stringHeader": 1,
                "special: reflect.uncommonType": 2,
                "special: runtime.ancestorInfo": 2,
                "special: runtime.forcegcstate": 1,
                "special: runtime.gcDrainFlags": 1,
                "special: runtime.gsignalStack": 1,
                "special: runtime.pcvalueCache": 1,
                "special: runtime.stackWorkBuf": 1,
                "special: runtime.stringStruct": 1,
                "special: runtime.timersBucket": 4,
                "special: runtime.uncommontype": 1,
                "special: strconv.decimalSlice": 3,
                "special: syscall.SockaddrUnix": 1,
                "special: syscall.SysProcIDMap": 2,
                "special: url.InvalidHostError": 1,
                "special: ast.BracketExpression": 3,
                "special: ast.DebuggerStatement": 1,
                "special: ast.FunctionStatement": 1,
                "special: ast.LabelledStatement": 3,
                "special: ast.VariableStatement": 1,
                "special: map.bucket": 54,
                "special: reflect.interfaceType": 1,
                "special: regexp.onePassMachine": 1,
                "special: runtime.gcTriggerKind": 1,
                "special: runtime.interfacetype": 1,
                "special: runtime.itabTableType": 2,
                "special: runtime.stackfreelist": 3,
                "special: runtime.traceStackPtr": 3,
                "special: runtime.vdsoSymbolKey": 5,
                "special: syscall.SockaddrInet4": 1,
                "special: syscall.SockaddrInet6": 1,
                "special: ast.SequenceExpression": 1,
                "special: ast.VariableExpression": 5,
                "special: encoding.TextMarshaler": 1,
                "special: flate.huffmanBitWriter": 1,
                "special: json.reflectWithString": 5,
                "special: map.iter": 14,
                "special: reflect.emptyInterface": 1,
                "special: reflect.funcTypeFixed4": 1,
                "special: reflect.funcTypeFixed8": 1,
                "special: runtime.cgothreadstart": 1,
                "special: runtime.memRecordCycle": 3,
                "special: runtime.stackObjectBuf": 1,
                "special: runtime.stackScanState": 2,
                "special: runtime.traceBufHeader": 1,
                "special: runtime.vdsoVersionKey": 1,
                "special: sync.poolLocalInternal": 1,
                "special: syscall.RawSockaddrAny": 1,
                "special: ast.ExpressionStatement": 1,
                "special: ast.FunctionDeclaration": 1,
                "special: ast.VariableDeclaration": 1,
                "special: flate.CorruptInputError": 1,
                "special: json.UnmarshalTypeError": 3,
                "special: reflect.funcTypeFixed16": 1,
                "special: reflect.funcTypeFixed32": 1,
                "special: reflect.funcTypeFixed64": 1,
                "special: runtime.cgoTracebackArg": 1,
                "special: runtime.pcvalueCacheEnt": 5,
                "special: runtime.persistentAlloc": 2,
                "special: runtime.stackWorkBufHdr": 1,
                "special: runtime.traceStackTable": 2,
                "special: syscall.RawSockaddrUnix": 1,
                "special: syscall.SockaddrNetlink": 1,
                "special: base64.CorruptInputError": 1,
                "special: encoding.BinaryMarshaler": 1,
                "special: encoding.TextUnmarshaler": 1,
                "special: reflect.funcTypeFixed128": 1,
                "special: runtime.cgoSymbolizerArg": 1,
                "special: runtime.gcMarkWorkerMode": 1,
                "special: runtime.semaProfileFlags": 1,
                "special: runtime.specialfinalizer": 1,
                "special: syscall.RawSockaddrInet4": 1,
                "special: syscall.RawSockaddrInet6": 1,
                "special: ast.ConditionalExpression": 3,
                "special: json.UnsupportedTypeError": 1,
                "special: runtime.gcControllerState": 1,
                "special: runtime.sliceInterfacePtr": 1,
                "special: runtime.stackObjectBufHdr": 1,
                "special: runtime.stackObjectRecord": 2,
                "special: syscall.SockaddrLinklayer": 1,
                "special: encoding.BinaryUnmarshaler": 1,
                "special: json.InvalidUnmarshalError": 1,
                "special: json.UnsupportedValueError": 3,
                "special: runtime.TypeAssertionError": 1,
                "special: runtime.stringInterfacePtr": 1,
                "special: runtime.traceAllocBlockPtr": 1,
                "special: runtime.uint16InterfacePtr": 1,
                "special: runtime.uint32InterfacePtr": 1,
                "special: runtime.uint64InterfacePtr": 1,
                "special: syscall.RawSockaddrNetlink": 1,
                "special: github.com": 1316,
                "special: com/robertkrimen/otto": 875,
                "special: syscall.RawSockaddrLinklayer": 1,
                "special: base64.newlineFilteringReader": 1,
                "special: v1/base64vlq": 7,
                "special: com/robertkrimen/otto/ast": 216,
                "special: com/robertkrimen/otto/dbg": 29,
                "special: com/robertkrimen/otto/file": 18,
                "special: com/gen0cide/gscript/engine": 46,
                "special: com/gen0cide/gscript/logger": 1,
                "special: com/robertkrimen/otto/token": 10,
                "special: com/robertkrimen/otto/parser": 156,
                "special: com/robertkrimen/otto/registry": 8,
                "special: com/gen0cide/gscript/logger/null": 19,
                "special: Inf-inf20063125": 1,
                "special: etc/1562578125": 1,
                "special: 19531252006-019765625AvestanBOOLEANBengaliBo": 1,
                "special: 15:04:0548828125ArmenianBalineseBopomo": 1,
                "special: uggerfunctiongetHoursgetMonthgo1.12.5infinityinternalisFiniteisFroze": 1,
                "special: oparseIntreadlinkrunnableruntime.scavengesetHourssetMonthsignal": 1,
                "special: strconv.toStringtrimLefttruncateunescape": 1,
                "special: s.limit": 1,
                "special: s.state": 2,
                "special: wbuf1.n": 1,
                "special: wbuf2.n": 1,
                "special: 2.6MAX": 1,
                "special: a/u": 1,
                "special: infinity/dev/null244140625": 1,
                "special: Infinity-infinity": 1,
                "special: s.base": 1,
                "special: dev/stdin12207031252006": 1,
                "special: stdin12207031252006-01-022006T15": 1,
                "special: 022006T15:046103515625": 1,
                "special: gp.status": 1,
                "special: s.nelems": 2,
                "special: span.list": 1,
                "special: frame.sp": 1,
                "special: reduceRightreflect.Setruntime": 1,
                "special: NativeType/dev/stderr/dev/stdout30517578125": 1,
                "special: tFullYeargetUTCHoursgetUTCMonthi/o": 1,
                "special: pages/byte": 1,
                "special: s.elemsize": 1,
                "special: s.sweepgen": 1,
                "special: span.limit": 1,
                "special: span.state": 1,
                "special: t.spanKey": 2,
                "special: 13/1762939453125Bidi": 1,
                "special: ControlI/O": 1,
                "special: MST2014-04-13": 1,
                "special: 15258789062515:04:05": 1,
                "special: slotisExtensiblelfstack.pushmadvdontneedreflect.Copyreleasep": 1,
                "special: s.spanclass": 1,
                "special: span.base": 1,
                "special: work.nproc": 3,
                "special: work.nwait": 3,
                "special: pointer-byte": 1,
                "special: 2006-01T15": 2,
                "special: UTF-8invalid": 1,
                "special: 01T15:042006T15:04:053814697265625": 1,
                "special: t.npagesKey": 1,
                "special: v.string": 1,
                "special: s.allocCount": 4,
                "special: failedsync.Cond.Waittext": 1,
                "special: unsafe.Pointerwindow": 1,
                "special: changedwork.full": 1,
                "special: proc/self/exe1907348632812595367431640625": 1,
                "special: 04-0700476837158203125": 1,
                "special: 2006T15:04": 1,
                "special: mheap.sweepgen": 1,
                "special: pc:advertise": 1,
                "special: function/proc/self/fd": 1,
                "special: 456789ABCDEF0123456789abcdef2006-01-02T15": 1,
                "special: 042006-01T15": 1,
                "special: 02T15:042006": 1,
                "special: 01T15:04:052384185791015625": 1,
                "special: mSpanList.insertmSpanList.removemessage": 1,
                "special: hostnon-Go": 1,
                "special: 05.00059604644775390625": 1,
                "special: getTimezoneOffsetgp.waiting": 1,
                "special: deniedpreventExtensionsreflect.Value.Capreflect.Value.Intreflect.Value.Lenreflect": 1,
                "special: timersreflect.Value.Callreflect.Value.Elemreflect.Value.Sendreflect.Value.Typereflect.Value.Uintreflect": 1,
                "special: t.spanKey.npages": 1,
                "special: AboriginalFunction.toString": 1,
                "special: I/O": 2,
                "special: rangeinput/output": 1,
                "special: usr/lib/locale/TZ/14901161193847656252006": 1,
                "special: 0-9": 2,
                "special: non-Go": 3,
                "special: thread2006-01T15": 1,
                "special: 04-07002006T15": 1,
                "special: 05-0700298023223876953125": 1,
                "special: 14901161193847656252006-01-02": 1,
                "special: 052006-01-02T15": 1,
                "special: 9abcdefx119209289550781252006T15:04:05": 1,
                "special: large:no": 1,
                "special: sp:thread": 1,
                "special: 01T15:04": 1,
                "special: 07002006T15:04:05": 1,
                "special: 15:04:052006": 1,
                "special: 02T15:04:057450580596923828125Canadian": 1,
                "special: hostmspan.sweep": 1,
                "special: work.nprocspanic": 1,
                "special: reflect.Value.Fieldreflect.Value.Floatreflect.Value.Indexreflect.Value.IsNilreflect.Value.Sliceruntime": 1,
                "special: 05.00037252902984619140625": 1,
                "special: bucket.bpbad": 1,
                "special: bucket.mpchan": 1,
                "special: revokedmSpanList.insertBackmalloc": 1,
                "special: propertyIsEnumerablereflect.Value.Methodreflect.Value.SetIntreflect.Value.Slice3reflect.makeFuncStubreflect": 1,
                "special: utf8.MaxRunewirep": 1,
                "special: gp.gcscanvalid": 1,
                "special: function/usr/share/zoneinfo/2006": 1,
                "special: signalnon-empty": 1,
                "special: 01T15:04:05": 3,
                "special: systemreflect.Value.Complexreflect.Value.Pointerreflect.Value.SetUintreleasep": 1,
                "special: statustrace/breakpoint": 1,
                "special: 1-9": 4,
                "special: 1862645149230957031252006-01-02T15": 1,
                "special: 04-07002006-01T15": 1,
                "special: 05-0700931322574615478515625Anatoli": 1,
                "special: top-level": 1,
                "special: stackread-only": 1,
                "special: 02T15:04": 1,
                "special: zoneinfo.zip2006T15": 1,
                "special: 05.000": 3,
                "special: supportedreflect.Value.MapIndexreflect.Value.SetFloatremote": 1,
                "special: changedruntime.main": 1,
                "special: s.freeindex": 1,
                "special: s.nelemsscanstack": 1,
                "special: lib/time/zoneinfo": 1,
                "special: 000-07004656612873077392578125Inscri": 1,
                "special: 0-9eE": 1,
                "special: snon-Go": 1,
                "special: zip2006T15:04:05": 1,
                "special: runtime:scanstack": 1,
                "special: 05.00023283064365386962890625": 1,
                "special: Array.length": 1,
                "special: i/o": 1,
                "special: 2006-01-02T15": 2,
                "special: UTF-8": 1,
                "special: 02T15:04:05": 5,
                "special: dbytes.Buffer": 1,
                "special: profBuf.writenanotime": 1,
                "special: reflect.Value.Interfacereflect.Value.NumMethodreflect.methodValueCallruntime": 1,
                "special: s.nelemsschedule": 1,
                "special: lockwork.nwait": 1,
                "special: 05.000Z582076609134674072265625Ille": 1,
                "special: nproc/usr/share/lib/zoneinfo/1164153218269348144531252006": 1,
                "special: 1164153218269348144531252006-01-02T15": 1,
                "special: 05-07002006-01-02T15": 1,
                "special: GCreflect.Value.SetComplexreflect.Value.UnsafeAddrrunqsteal": 1,
                "special: rangenon-empty": 1,
                "special: span2006-01-02T15": 1,
                "special: 002006-01T15": 1,
                "special: 000-07002910383045673370361328125GOD": 1,
                "special: 02T15:04:05Z07:002006": 1,
                "special: poll.fdMutexinvalid": 1,
                "special: progressreflect.Value.OverflowIntreflect.Value.SetMapIndexreflect": 1,
                "special: traceGCSweepStartnet/url": 1,
                "special: cross-device": 1,
                "special: d.fn": 1,
                "special: 0reflect.Value.CanInterfacereflect.Value.MethodByNamereflect.Value.OverflowUintrequired": 1,
                "special: rangemspan.sweep": 1,
                "special: overflowreflect.Value.OverflowFloatrestartg": 1,
                "special: a-zA-Z": 1,
                "special: a-zA-Z0-9": 1,
                "special: 02T15:04:05Z07:00": 1,
                "special: key:value": 1,
                "special: namework.nwait": 1,
                "special: 18189894035458564758300781252006-01-02T15": 1,
                "special: 000-07009094947017729282379150390625": 1,
                "special: power-of-2Prepended": 1,
                "special: rotateRightmheap.freeSpanLocked": 1,
                "special: shrinkstackmspan.sweep": 1,
                "special: attachedreflect.MakeSlice": 1,
                "special: non-pointer": 3,
                "special: non-func": 6,
                "special: non-map": 2,
                "special: restartTime.UnmarshalBinary": 1,
                "special: pointerbufio.Scanner": 1,
                "special: reflect.Value.OverflowComplexreflect": 1,
                "special: longcrypto/aes": 1,
                "special: int/uintinvalid": 1,
                "special: read/write": 1,
                "special: 15:04:05": 3,
                "special: p.gcMarkWorkerMode": 1,
                "special: reflect.Map": 1,
                "special: sMapIter.Key": 1,
                "special: non-nil": 6,
                "special: user-defined": 2,
                "special: non-array": 1,
                "special: non-socketstrings": 1,
                "special: a.out": 1,
                "special: reflect.MakeSlice": 2,
                "special: capreflect.MakeSlice": 1,
                "special: inMapIter.Value": 1,
                "special: reflect.nameFrom": 1,
                "special: reflect.Struct14210854715202003717422485": 1,
                "special: spacebytes.Buffer.Grow": 1,
                "special: countbytes.Reader.Seek": 1,
                "special: scanEscapereflect.nameFrom": 1,
                "special: mSpanList.insert": 1,
                "special: sched.safePointWait": 1,
                "special: syntaxmspan.ensureSwept": 1,
                "special: allArenasreflect.FuncOf": 1,
                "special: rangeruntime.SetFinalizer": 1,
                "special: 05.999999999Z07": 1,
                "special: alignedmheap.freeSpanLocked": 1,
                "special: queuereflect.MakeSlice": 1,
                "special: dstrings.Reader.Seek": 1,
                "special: mismatchTime.UnmarshalBinary": 1,
                "special: librarybytes.Reader.ReadAt": 1,
                "special: offsetbytes.Reader.Seek": 1,
                "special: elementencoding/hex": 1,
                "special: buffercrypto/aes": 1,
                "special: existscrypto/aes": 1,
                "special: overflowcrypto/aes": 1,
                "special: underflowencoding/hex": 1,
                "special: resetos/signal": 1,
                "special: w/o": 1,
                "special: in-use": 1,
                "special: left-hand": 2,
                "special: for-inMapIter": 1,
                "special: floating-point": 1,
                "special: non-chan": 1,
                "special: non-struct": 5,
                "special: send-only": 1,
                "special: recv-only": 1,
                "special: 83940025046467781066894531252006-01-02T15": 1,
                "special: pointer-alignedmheap": 1,
                "special: non-empty": 1,
                "special: non-slice": 1,
                "special: pc-encoded": 1,
                "special: 999999999Z07:00888178419700125232338905334472": 1,
                "special: strings.Builder.Grow": 1,
                "special: sbytes.Buffer": 1,
                "special: killreflect.Value.Bytes": 1,
                "special: slicereflect.Value.Bytes": 1,
                "special: slicereflect.Value.Convert": 1,
                "special: mSpanList.insertBack": 1,
                "special: reflect.call": 1,
                "special: isSelectstrings.Reader.ReadAt": 1,
                "special: offsetstrings.Reader.Seek": 1,
                "special: 05.999999999": 1,
                "special: operatormspan.sweep": 1,
                "special: mapreflect.MakeMapWithSize": 1,
                "special: cmpl.parseStatement": 1,
                "special: MapIter.Key": 1,
                "special: work.full": 1,
                "special: d.panic": 1,
                "special: newdeferin.value": 1,
                "special: in.value": 1,
                "special: remainingreflect.Value.Call": 1,
                "special: functionreflect.Value.Call": 1,
                "special: countreflect.Value.SetBytes": 1,
                "special: slicereflect.Value.setRunes": 1,
                "special: typeruntime.SetFinalizer": 1,
                "special: failedcrypto/cipher": 1,
                "special: sizecrypto/cipher": 1,
                "special: 0crypto/cipher": 1,
                "special: GCMcrypto/cipher": 1,
                "special: RF-killreflect": 1,
                "special: non-byte": 2,
                "special: non-rune": 2,
                "special: non-arithmetic": 1,
                "special: 64-bytes": 1,
                "special: non-false": 1,
                "special: Date2006-01-02": 1,
                "special: cmpl.parseExpression": 1,
                "special: MapIter.Next": 1,
                "special: iteratorTime.UnmarshalBinary": 1,
                "special: integerbytes.Buffer.WriteTo": 1,
                "special: countbytes.Reader.WriteTo": 1,
                "special: mheap.freeSpanLocked": 1,
                "special: statemheap.freeSpanLocked": 1,
                "special: overlappingreflect.Value.Addr": 1,
                "special: valueruntime.SetFinalizer": 1,
                "special: Time.IntoString": 1,
                "special: freenet/url": 1,
                "special: AppendInt/FormatInt": 1,
                "special: 64-bit": 1,
                "special: non-pointerjson": 1,
                "special: RegExp.exec": 1,
                "special: objectJSON.stringify": 1,
                "special: MapIter.Value": 1,
                "special: iteratorTime.MarshalBinary": 1,
                "special: s.elem": 1,
                "special: Type.Implementsruntime.SetFinalizer": 1,
                "special: setruntime.SetFinalizer": 1,
                "special: gp.paramunknown": 1,
                "special: lfstack.push": 1,
                "special: parseProgram.declaration": 1,
                "special: Type.AssignableToruntime": 1,
                "special: mSpanList.remove": 1,
                "special: span.npages": 1,
                "special: fieldbytes.Reader.UnreadByte": 1,
                "special: slicebytes.Reader.UnreadRune": 1,
                "special: slicecipher.NewOFB": 1,
                "special: reflect.Value.Slice": 3,
                "special: Type.ConvertibleToreflect": 1,
                "special: application/json1734723475976807094411924481": 1,
                "special: polldescsync/atomic": 1,
                "special: non-RegExp": 1,
                "special: stringnon-empty": 1,
                "special: non-variadic": 1,
                "special: non-Func": 1,
                "special: data:application": 1,
                "special: reflect.Value.Slice3": 2,
                "special: boundsreflect.Value.UnsafeAddr": 1,
                "special: Time.MarshalJSON": 1,
                "special: Time.MarshalText": 1,
                "special: arrayruntime.reflect": 1,
                "special: types.allocCount": 1,
                "special: s.nelemsstrconv": 1,
                "special: adjustLastDigitFixedstrings.Reader.UnreadByte": 1,
                "special: stringstrings.Reader.UnreadRune": 1,
                "special: stringstrings.Reader.WriteTo": 1,
                "special: skewreflect.Value.Slice3": 1,
                "special: singletonruntime.SetFinalizer": 1,
                "special: AppendFloat/FormatFloat": 1,
                "special: stackcrypto/cipher": 1,
                "special: non-zero": 3,
                "special: vTime.MarshalBinary": 1,
                "special: sreflect.Value.Slice": 1,
                "special: Type.ImplementsHere": 1,
                "special: cmpl.parseProgram.DeclarationList": 1,
                "special: non-interface": 1,
                "special: ReadgcControllerState.findRunnable": 1,
                "special: runtime.Goexit": 1,
                "special: reflect.FuncOf": 2,
                "special: argumentsbufio.Scanner": 1,
                "special: goroutinereflect.FuncOf": 1,
                "special: stacknon-Go": 1,
                "special: Gscanstatus:top": 1,
                "special: flagruntime:stoplockedm": 1,
                "special: vbufio.Scanner": 1,
                "special: returnedbytes.Reader.UnreadRune": 1,
                "special: unlockOSThreadstrings.Reader.UnreadRune": 1,
                "special: lockOSThread/unlockOSThreadstrings": 1,
                "special: non-structfound": 1,
                "special: runtime.SetFinalizer": 2,
                "special: extFloat.FixedDecimal": 1,
                "special: property.Kind": 1,
                "special: vbytes.Buffer": 1,
                "special: runtime:greyobject": 1,
                "special: vreflect.Value.Interface": 1,
                "special: opt/go": 1,
                "special: note.go.buildid": 1,
                "special: atomic.CompareAndSwapUintptr": 1,
                "special: atomic.StoreUint32": 1,
                "special: atomic.StoreUintptr": 1,
                "special: cpu.Initialize": 1,
                "special: cpu.processOptions": 1,
                "special: cpu.indexByte": 1,
                "special: cpu.doinit": 1,
                "special: cpu.isSet": 1,
                "special: cpu.cpuid": 1,
                "special: cpu.xgetbv": 1,
                "special: hash.internal": 5,
                "special: eq.internal": 5,
                "special: atomic.Cas64": 1,
                "special: runtime/internal/atomic": 5,
                "special: atomic.Casuintptr": 1,
                "special: atomic.Storeuintptr": 1,
                "special: atomic.Store": 1,
                "special: atomic.Store64": 1,
                "special: bytealg.countGeneric": 1,
                "special: internal/bytealg": 12,
                "special: bytealg.countGenericString": 1,
                "special: bytealg.init.0": 1,
                "special: bytealg.init": 1,
                "special: runtime.cmpstring": 1,
                "special: bytealg.Count": 1,
                "special: bytealg.CountString": 1,
                "special: bytealg.Equal": 1,
                "special: runtime.memequal": 2,
                "special: bytealg.Index": 1,
                "special: bytealg.IndexString": 1,
                "special: bytealg.IndexByte": 1,
                "special: bytealg.IndexByteString": 1,
                "special: runtime.memhash0": 1,
                "special: runtime.memhash8": 1,
                "special: runtime.memhash16": 1,
                "special: runtime.memhash128": 1,
                "special: runtime.memhash": 2,
                "special: runtime.strhash": 1,
                "special: runtime.f32hash": 1,
                "special: runtime.fastrand": 1,
                "special: runtime.f64hash": 1,
                "special: runtime.c64hash": 1,
                "special: runtime.c128hash": 1,
                "special: runtime.interhash": 1,
                "special: runtime.isDirectIface": 1,
                "special: runtime.nilinterhash": 1,
                "special: runtime.memequal0": 1,
                "special: runtime.memequal8": 1,
                "special: runtime.memequal16": 1,
                "special: runtime.memequal32": 1,
                "special: runtime.memequal64": 1,
                "special: runtime.memequal128": 1,
                "special: runtime.f32equal": 1,
                "special: runtime.f64equal": 1,
                "special: runtime.c64equal": 1,
                "special: runtime.c128equal": 1,
                "special: runtime.strequal": 1,
                "special: runtime.interequal": 1,
                "special: runtime.nilinterequal": 1,
                "special: runtime.efaceeq": 1,
                "special: runtime.ifaceeq": 1,
                "special: runtime.alginit": 1,
                "special: runtime.initAlgAES": 1,
                "special: runtime.atomicwb": 1,
                "special: runtime.atomicstorep": 1,
                "special: atomic.StorePointer": 1,
                "special: atomic.CompareAndSwapPointer": 1,
                "special: runtime.mmap": 1,
                "special: runtime.munmap": 1,
                "special: runtime.sigaction": 1,
                "special: runtime.cgocall": 1,
                "special: runtime.cgoIsGoPointer": 1,
                "special: runtime.activeModules": 1,
                "special: runtime.cgoInRange": 1,
                "special: runtime.cgoCheckWriteBarrier": 1,
                "special: runtime.cgoCheckMemmove": 1,
                "special: runtime.cgoCheckSliceCopy": 1,
                "special: runtime.add": 1,
                "special: runtime.cgoCheckTypedBlock": 1,
                "special: runtime.spanOfUnchecked": 1,
                "special: runtime.arenaIndex": 1,
                "special: runtime.heapBitsForAddr": 1,
                "special: runtime.heapBits.bits": 1,
                "special: runtime.heapBits.next": 1,
                "special: runtime.add1": 1,
                "special: runtime.cgoCheckBits": 1,
                "special: runtime.addb": 1,
                "special: runtime.cgoCheckUsingType": 1,
                "special: runtime.makechan": 1,
                "special: runtime.chansend1": 1,
                "special: runtime.chansend": 1,
                "special: runtime.goparkunlock": 1,
                "special: runtime.chanbuf": 1,
                "special: runtime.send": 1,
                "special: runtime.sendDirect": 1,
                "special: runtime.recvDirect": 1,
                "special: runtime.closechan": 1,
                "special: runtime.chanrecv1": 1,
                "special: runtime.chanrecv": 1,
                "special: runtime.recv": 3,
                "special: runtime.selectnbsend": 1,
                "special: runtime.selectnbrecv": 1,
                "special: reflect.chansend": 1,
                "special: reflect.chanrecv": 1,
                "special: reflect.chanlen": 1,
                "special: reflect.chancap": 1,
                "special: reflect.chanclose": 1,
                "special: runtime.init.0": 1,
                "special: runtime.funcPC": 1,
                "special: runtime.GOMAXPROCS": 1,
                "special: runtime.debugCallCheck": 1,
                "special: runtime.debugCallWrap": 1,
                "special: runtime.gogetenv": 1,
                "special: runtime.envKeyEqual": 1,
                "special: runtime.errorString.RuntimeError": 1,
                "special: runtime.errorString.Error": 1,
                "special: runtime.plainError.RuntimeError": 1,
                "special: runtime.plainError.Error": 1,
                "special: runtime.printany": 1,
                "special: runtime.typestring": 1,
                "special: runtime.panicwrap": 1,
                "special: runtime.Caller": 1,
                "special: runtime.CallersFrames": 1,
                "special: runtime.GOROOT": 1,
                "special: runtime.float64frombits": 1,
                "special: runtime.readUnaligned64": 1,
                "special: runtime.rotl": 1,
                "special: runtime.readUnaligned32": 1,
                "special: runtime.memhash32": 1,
                "special: runtime.memhash64": 1,
                "special: runtime.getitab": 1,
                "special: runtime.itabHashFunc": 1,
                "special: runtime.itabAdd": 1,
                "special: runtime.name.isExported": 1,
                "special: runtime.itabsinit": 1,
                "special: runtime.panicdottypeE": 1,
                "special: runtime.panicdottypeI": 1,
                "special: runtime.convT2E": 1,
                "special: runtime.convT16": 1,
                "special: runtime.convT32": 1,
                "special: runtime.convT64": 1,
                "special: runtime.convTstring": 1,
                "special: runtime.convTslice": 1,
                "special: runtime.convT2I": 1,
                "special: runtime.convI2I": 1,
                "special: runtime.assertI2I": 1,
                "special: runtime.assertI2I2": 1,
                "special: runtime.assertE2I": 1,
                "special: runtime.assertE2I2": 1,
                "special: reflect.ifaceE2I": 1,
                "special: runtime.iterate": 1,
                "special: runtime.lfstackPack": 1,
                "special: runtime.lfstackUnpack": 1,
                "special: runtime.lfnodeValidate": 1,
                "special: runtime.lock": 11,
                "special: runtime.unlock": 1,
                "special: runtime.notewakeup": 1,
                "special: runtime.notesleep": 1,
                "special: runtime.notetsleep": 2,
                "special: runtime.notetsleepg": 1,
                "special: runtime.mallocinit": 1,
                "special: runtime.round": 1,
                "special: runtime.sysReserve": 1,
                "special: runtime.sysReserveAligned": 1,
                "special: runtime.mallocgc": 1,
                "special: runtime.acquirem": 1,
                "special: runtime.gomcache": 1,
                "special: runtime.releasem": 1,
                "special: runtime.nextFreeFast": 1,
                "special: runtime.gcTrigger.test": 1,
                "special: runtime.makeSpanClass": 1,
                "special: runtime.bool2int": 1,
                "special: runtime.largeAlloc": 1,
                "special: runtime.newobject": 1,
                "special: reflect.unsafe": 2,
                "special: runtime.newarray": 1,
                "special: runtime.profilealloc": 1,
                "special: runtime.nextSample": 1,
                "special: runtime.fastexprand": 1,
                "special: runtime.fastlog2": 1,
                "special: runtime.float64bits": 1,
                "special: runtime.persistentalloc": 1,
                "special: runtime.persistentalloc1": 1,
                "special: runtime.inPersistentAlloc": 1,
                "special: runtime.makemap": 2,
                "special: runtime.overLoadFactor": 1,
                "special: runtime.bucketShift": 1,
                "special: runtime.makeBucketArray": 1,
                "special: runtime.roundupsize": 1,
                "special: runtime.mapaccess1": 4,
                "special: runtime.bucketMask": 1,
                "special: runtime.evacuated": 1,
                "special: runtime.tophash": 1,
                "special: runtime.mapaccess2": 4,
                "special: runtime.mapaccessK": 1,
                "special: runtime.mapassign": 5,
                "special: runtime.isEmpty": 1,
                "special: runtime.tooManyOverflowBuckets": 1,
                "special: runtime.mapdelete": 4,
                "special: runtime.mapiterinit": 1,
                "special: runtime.mapiternext": 1,
                "special: runtime.hashGrow": 1,
                "special: runtime.growWork": 4,
                "special: runtime.evacuate": 4,
                "special: runtime.advanceEvacuationMark": 1,
                "special: runtime.bucketEvacuated": 1,
                "special: reflect.makemap": 1,
                "special: runtime.ismapkey": 1,
                "special: reflect.mapaccess": 1,
                "special: reflect.mapassign": 1,
                "special: reflect.mapdelete": 1,
                "special: reflect.mapiterinit": 1,
                "special: reflect.mapiternext": 1,
                "special: reflect.mapiterkey": 1,
                "special: reflect.mapitervalue": 1,
                "special: reflect.maplen": 1,
                "special: runtime.typedmemmove": 1,
                "special: reflect.typedmemmove": 1,
                "special: reflect.typedmemmovepartial": 1,
                "special: runtime.reflectcallmove": 1,
                "special: runtime.typedslicecopy": 1,
                "special: reflect.typedslicecopy": 1,
                "special: runtime.typedmemclr": 1,
                "special: reflect.typedmemclr": 1,
                "special: reflect.typedmemclrpartial": 1,
                "special: runtime.memclrHasPointers": 1,
                "special: runtime.markBitsForAddr": 1,
                "special: runtime.spanOf": 1,
                "special: runtime.findObject": 1,
                "special: runtime.heapBits.nextArena": 1,
                "special: runtime.heapBits.forward": 1,
                "special: runtime.heapBits.forwardOrBoundary": 1,
                "special: runtime.bulkBarrierPreWrite": 1,
                "special: runtime.puintptr.ptr": 1,
                "special: runtime.heapBits.isPointer": 1,
                "special: runtime.bulkBarrierPreWriteSrcOnly": 1,
                "special: runtime.bulkBarrierBitmap": 1,
                "special: runtime.typeBitsBulkBarrier": 1,
                "special: runtime.heapBits.initSpan": 1,
                "special: runtime.newAllocBits": 1,
                "special: runtime.heapBits.initCheckmarkSpan": 1,
                "special: runtime.heapBits.clearCheckmarkSpan": 1,
                "special: runtime.heapBitsSetType": 1,
                "special: runtime.heapBitsSetTypeGCProg": 1,
                "special: runtime.progToPointerMask": 1,
                "special: runtime.runGCProg": 1,
                "special: runtime.subtract1": 1,
                "special: runtime.subtractb": 1,
                "special: runtime.materializeGCProg": 1,
                "special: runtime.allocmcache": 1,
                "special: runtime.freemcache": 1,
                "special: runtime.spanClass.sizeclass": 1,
                "special: runtime.traceHeapAlloc": 1,
                "special: runtime.sysAlloc": 1,
                "special: runtime.sysUnused": 1,
                "special: runtime.sysUsed": 1,
                "special: runtime.sysFree": 1,
                "special: runtime.sysMap": 1,
                "special: runtime.queuefinalizer": 1,
                "special: runtime.wakefing": 1,
                "special: runtime.createfing": 1,
                "special: runtime.runfinq": 1,
                "special: runtime.gcinit": 1,
                "special: runtime.readgogc": 1,
                "special: runtime.atoi32": 1,
                "special: runtime.gcenable": 1,
                "special: debug.setGCPercent": 1,
                "special: runtime/debug": 2,
                "special: runtime.fastrandn": 1,
                "special: runtime.preemptone": 1,
                "special: runtime.gcMarkWorkAvailable": 1,
                "special: findRunnableGCWorker.func1": 1,
                "special: runtime.guintptr.ptr": 1,
                "special: runtime.pollFractionalWorkerExit": 1,
                "special: runtime.gcSetTriggerRatio": 1,
                "special: runtime.isSweepDone": 1,
                "special: runtime.GC": 1,
                "special: runtime.Gosched": 1,
                "special: runtime.gcWaitOnMark": 1,
                "special: runtime.gcStart": 1,
                "special: runtime.semacquire": 1,
                "special: runtime.setGCPhase": 1,
                "special: runtime.gcBgMarkPrepare": 1,
                "special: runtime.semrelease": 1,
                "special: runtime.traceGCSTWStart": 1,
                "special: runtime.traceGCStart": 1,
                "special: runtime.gcMarkDone": 1,
                "special: runtime.gcMarkTermination": 1,
                "special: runtime.traceGCDone": 1,
                "special: runtime.gcBgMarkStartWorkers": 1,
                "special: runtime.noteclear": 1,
                "special: runtime.gcBgMarkWorker": 1,
                "special: runtime.gcMark": 1,
                "special: runtime.gcSweep": 1,
                "special: runtime.gcResetMarkState": 1,
                "special: sync.runtime": 10,
                "special: runtime.clearpools": 1,
                "special: runtime.itoaDiv": 1,
                "special: runtime.fmtNSAsMS": 1,
                "special: runtime.treapIter.prev": 1,
                "special: runtime.gcMarkRootPrepare": 1,
                "special: runtime.gcMarkRootPrepare.func1": 1,
                "special: runtime.gcMarkRootCheck": 1,
                "special: runtime.readgstatus": 1,
                "special: runtime.markroot": 1,
                "special: runtime.markrootBlock": 1,
                "special: runtime.markrootFreeGStacks": 1,
                "special: runtime.markrootSpans": 1,
                "special: runtime.gcAssistAlloc": 1,
                "special: runtime.traceGCMarkAssistDone": 1,
                "special: runtime.traceGCMarkAssistStart": 1,
                "special: runtime.gcAssistAlloc1": 1,
                "special: runtime.gcWakeAllAssists": 1,
                "special: runtime.gcParkAssist": 1,
                "special: runtime.gcFlushBgCredit": 1,
                "special: runtime.scanstack": 1,
                "special: runtime.dematerializeGCProg": 1,
                "special: runtime.scanframeworker": 1,
                "special: runtime.gcDrain": 1,
                "special: runtime.gcDrainN": 1,
                "special: runtime.scanblock": 1,
                "special: runtime.scanobject": 1,
                "special: runtime.spanClass.noscan": 1,
                "special: runtime.shade": 1,
                "special: runtime.greyobject": 1,
                "special: runtime.markBits.isMarked": 1,
                "special: runtime.heapBits.isCheckmarked": 1,
                "special: runtime.heapBits.setCheckmarked": 1,
                "special: runtime.markBits.setMarked": 1,
                "special: runtime.pageIndexOf": 1,
                "special: runtime.gcDumpObject": 1,
                "special: runtime.gcmarknewobject": 1,
                "special: runtime.gcMarkTinyAllocs": 1,
                "special: runtime.initCheckmarks": 1,
                "special: runtime.clearCheckmarks": 1,
                "special: runtime.init.1": 1,
                "special: runtime.binarySearchTree": 1,
                "special: runtime.finishsweep": 1,
                "special: runtime.bgsweep": 1,
                "special: runtime.sweepone": 1,
                "special: runtime.markBits.setMarkedNonAtomic": 1,
                "special: runtime.sysFault": 1,
                "special: runtime.deductSweepCredit": 1,
                "special: runtime.clobberfree": 1,
                "special: runtime.init.2": 1,
                "special: runtime.getempty": 1,
                "special: runtime.putempty": 1,
                "special: runtime.putfull": 1,
                "special: runtime.trygetfull": 1,
                "special: runtime.handoff": 1,
                "special: runtime.prepareFreeWorkbufs": 1,
                "special: runtime.freeSomeWbufs": 1,
                "special: runtime.recordspan": 1,
                "special: runtime.inHeapOrStack": 1,
                "special: runtime.spanOfHeap": 1,
                "special: runtime.treapIter.next": 1,
                "special: runtime.addspecial": 1,
                "special: 3-4": 1,
                "special: runtime.removespecial": 1,
                "special: 3-8": 1,
                "special: runtime.addfinalizer": 1,
                "special: runtime.removefinalizer": 1,
                "special: runtime.setprofilebucket": 1,
                "special: runtime.freespecial": 1,
                "special: runtime.newMarkBits": 1,
                "special: runtime.nextMarkBitArenaEpoch": 1,
                "special: runtime.newArenaMayUnlock": 1,
                "special: runtime.newBucket": 1,
                "special: runtime.stkbucket": 1,
                "special: runtime.eqslice": 1,
                "special: runtime.mProf": 7,
                "special: runtime.blockevent": 1,
                "special: runtime.blocksampled": 1,
                "special: runtime.saveblockevent": 1,
                "special: sync.event": 1,
                "special: runtime.tracealloc": 1,
                "special: runtime.tracefree": 1,
                "special: runtime.tracegc": 1,
                "special: runtime.init.3": 1,
                "special: runtime.cachestats": 1,
                "special: runtime.flushmcache": 1,
                "special: runtime.purgecachedstats": 1,
                "special: runtime.mSysStatInc": 1,
                "special: runtime.mSysStatDec": 1,
                "special: runtime.wbBufFlush": 1,
                "special: runtime.wbBufFlush1": 1,
                "special: poll.runtime": 9,
                "special: runtime.netpollclose": 1,
                "special: runtime.netpollcheckerr": 1,
                "special: runtime.netpollgoready": 1,
                "special: runtime.netpollready": 1,
                "special: runtime.netpollblockcommit": 1,
                "special: runtime.netpollblock": 1,
                "special: runtime.netpollunblock": 1,
                "special: runtime.netpolldeadlineimpl": 1,
                "special: runtime.netpollDeadline": 1,
                "special: runtime.netpollReadDeadline": 1,
                "special: runtime.netpollWriteDeadline": 1,
                "special: runtime.netpollinit": 1,
                "special: runtime.netpollopen": 1,
                "special: runtime.netpoll": 1,
                "special: runtime.futexsleep": 1,
                "special: runtime.futexwakeup": 1,
                "special: runtime.getproccount": 1,
                "special: runtime.newosproc": 1,
                "special: runtime.sigprocmask": 1,
                "special: runtime.mcount": 1,
                "special: runtime.sysargs": 1,
                "special: runtime.argv": 1,
                "special: runtime.sysauxv": 1,
                "special: runtime.osinit": 1,
                "special: runtime.getRandomData": 1,
                "special: runtime.minit": 1,
                "special: runtime.setsig": 1,
                "special: runtime.sigfillset": 1,
                "special: runtime.setsigstack": 1,
                "special: runtime.sysSigaction": 1,
                "special: runtime.panicCheckMalloc": 1,
                "special: runtime.panicindex": 1,
                "special: runtime.hasPrefix": 1,
                "special: runtime.panicslice": 1,
                "special: runtime.panicdivide": 1,
                "special: runtime.throwinit": 1,
                "special: runtime.deferproc": 1,
                "special: runtime.deferArgs": 1,
                "special: runtime.testdefersizes": 1,
                "special: runtime.deferclass": 1,
                "special: runtime.totaldefersize": 1,
                "special: runtime.init.4": 1,
                "special: runtime.newdefer": 1,
                "special: runtime.freedefer": 1,
                "special: runtime.freedeferpanic": 1,
                "special: runtime.freedeferfn": 1,
                "special: runtime.deferreturn": 1,
                "special: runtime.preprintpanics": 1,
                "special: runtime.printpanics": 1,
                "special: runtime.gopanic": 1,
                "special: runtime.getargp": 1,
                "special: runtime.gorecover": 1,
                "special: sync.throw": 1,
                "special: runtime.throw": 1,
                "special: runtime.recovery": 1,
                "special: runtime.fatalthrow": 1,
                "special: runtime.fatalpanic": 1,
                "special: runtime.startpanic": 1,
                "special: runtime.dopanic": 1,
                "special: runtime.signame": 1,
                "special: runtime.gotraceback": 1,
                "special: runtime.shouldPushSigpanic": 1,
                "special: runtime.funcInfo.valid": 1,
                "special: runtime.recordForPanic": 1,
                "special: runtime.printlock": 1,
                "special: runtime.printunlock": 1,
                "special: runtime.gwrite": 1,
                "special: runtime.writeErr": 1,
                "special: runtime.printsp": 1,
                "special: runtime.printnl": 1,
                "special: runtime.printbool": 1,
                "special: runtime.printfloat": 1,
                "special: runtime.printcomplex": 1,
                "special: runtime.printuint": 1,
                "special: runtime.printint": 1,
                "special: runtime.printhex": 1,
                "special: runtime.printpointer": 1,
                "special: runtime.printstring": 1,
                "special: runtime.bytes": 1,
                "special: runtime.printslice": 1,
                "special: runtime.printeface": 1,
                "special: runtime.hexdumpWords": 1,
                "special: runtime.main": 1,
                "special: runtime.lockOSThread": 1,
                "special: runtime.dolockOSThread": 1,
                "special: runtime.startTemplateThread": 1,
                "special: os.runtime": 2,
                "special: runtime.init.5": 1,
                "special: runtime.forcegchelper": 1,
                "special: runtime.gopark": 1,
                "special: runtime.goready": 1,
                "special: runtime.acquireSudog": 1,
                "special: runtime.releaseSudog": 1,
                "special: runtime.badmcall": 1,
                "special: runtime.badmcall2": 1,
                "special: runtime.badreflectcall": 1,
                "special: runtime.badmorestackg0": 1,
                "special: runtime.badmorestackgsignal": 1,
                "special: runtime.badctxt": 1,
                "special: runtime.allgadd": 1,
                "special: runtime.cpuinit": 1,
                "special: runtime.schedinit": 1,
                "special: runtime.tracebackinit": 1,
                "special: runtime.msigsave": 1,
                "special: runtime.goenvs": 2,
                "special: runtime.checkmcount": 1,
                "special: runtime.mcommoninit": 1,
                "special: runtime.mpreinit": 1,
                "special: runtime.ready": 1,
                "special: runtime.wakep": 1,
                "special: runtime.dumpgstatus": 1,
                "special: runtime.freezetheworld": 1,
                "special: runtime.casfrom": 1,
                "special: runtime.castogscanstatus": 1,
                "special: runtime.casgstatus": 1,
                "special: runtime.scang": 1,
                "special: runtime.restartg": 1,
                "special: runtime.stopTheWorld": 1,
                "special: runtime.startTheWorld": 1,
                "special: runtime.stopTheWorldWithSema": 1,
                "special: runtime.pidleget": 1,
                "special: runtime.startTheWorldWithSema": 1,
                "special: runtime.netpollinited": 1,
                "special: runtime.traceGCSTWDone": 1,
                "special: runtime.mstart": 1,
                "special: runtime.mstart1": 1,
                "special: runtime.mstartm0": 1,
                "special: runtime.mexit": 1,
                "special: runtime.sigblock": 1,
                "special: runtime.unminit": 1,
                "special: runtime.forEachP": 1,
                "special: runtime.runSafePointFn": 1,
                "special: runtime.allocm": 1,
                "special: runtime.needm": 1,
                "special: runtime.unlockextra": 1,
                "special: runtime.newextram": 1,
                "special: runtime.oneNewExtraM": 1,
                "special: runtime.dropm": 1,
                "special: runtime.msigrestore": 1,
                "special: runtime.lockextra": 1,
                "special: runtime.newm": 3,
                "special: runtime.newm1": 1,
                "special: runtime.templateThread": 1,
                "special: runtime.muintptr.ptr": 1,
                "special: runtime.stopm": 1,
                "special: runtime.mput": 1,
                "special: runtime.mspinning": 1,
                "special: runtime.startm": 1,
                "special: runtime.mget": 1,
                "special: runtime.handoffp": 1,
                "special: runtime.stoplockedm": 1,
                "special: runtime.startlockedm": 1,
                "special: runtime.gcstopm": 1,
                "special: runtime.execute": 1,
                "special: runtime.findrunnable": 1,
                "special: runtime.pollWork": 1,
                "special: runtime.resetspinning": 1,
                "special: runtime.injectglist": 1,
                "special: runtime.globrunqput": 1,
                "special: runtime.schedule": 1,
                "special: runtime.parkunlock": 1,
                "special: runtime.park": 1,
                "special: runtime.dropg": 1,
                "special: runtime.setMNoWB": 1,
                "special: runtime.setGNoWB": 1,
                "special: runtime.goschedImpl": 1,
                "special: runtime.gosched": 1,
                "special: runtime.traceGoSched": 1,
                "special: runtime.gopreempt": 1,
                "special: runtime.traceGoPreempt": 1,
                "special: runtime.goexit1": 1,
                "special: runtime.traceGoEnd": 1,
                "special: runtime.goexit0": 1,
                "special: runtime.save": 1,
                "special: runtime.reentersyscall": 1,
                "special: runtime.entersyscall": 3,
                "special: runtime.entersyscallblock": 2,
                "special: runtime.traceGoSysCall": 1,
                "special: runtime.exitsyscall": 1,
                "special: runtime.exitsyscallfast": 4,
                "special: runtime.exitsyscall0": 1,
                "special: syscall.runtime": 3,
                "special: runtime.malg": 1,
                "special: runtime.newproc": 1,
                "special: runtime.newproc1": 1,
                "special: runtime.gostartcallfn": 1,
                "special: runtime.gostartcall": 1,
                "special: runtime.stackmapdata": 1,
                "special: runtime.saveAncestors": 1,
                "special: runtime.gfput": 1,
                "special: runtime.gfget": 1,
                "special: runtime.gfpurge": 1,
                "special: runtime.LockOSThread": 1,
                "special: runtime.UnlockOSThread": 1,
                "special: runtime.dounlockOSThread": 1,
                "special: runtime.unlockOSThread": 1,
                "special: runtime.badunlockosthread": 1,
                "special: runtime.sigprof": 1,
                "special: runtime.sigprofNonGo": 1,
                "special: runtime.sigprofNonGoPC": 1,
                "special: runtime.setsSP": 1,
                "special: runtime.procresize": 1,
                "special: runtime.globrunqputhead": 1,
                "special: runtime.traceGomaxprocs": 1,
                "special: runtime.acquirep": 1,
                "special: runtime.wirep": 1,
                "special: runtime.releasep": 1,
                "special: runtime.incidlelocked": 1,
                "special: runtime.checkdead": 1,
                "special: runtime.sysmon": 1,
                "special: runtime.retake": 1,
                "special: runtime.preemptall": 1,
                "special: runtime.schedtrace": 1,
                "special: runtime.waitReason.String": 1,
                "special: runtime.schedEnableUser": 1,
                "special: runtime.globrunqputbatch": 1,
                "special: runtime.schedEnabled": 1,
                "special: runtime.globrunqget": 1,
                "special: runtime.pidleput": 1,
                "special: runtime.runqempty": 1,
                "special: runtime.runqput": 1,
                "special: runtime.runqputslow": 1,
                "special: runtime.runqget": 1,
                "special: runtime.runqgrab": 1,
                "special: runtime.runqsteal": 1,
                "special: runtime.procPin": 1,
                "special: runtime.procUnpin": 1,
                "special: atomic.runtime": 2,
                "special: runtime.gcd": 1,
                "special: runtime.profIndex.tagCount": 1,
                "special: runtime.countSub": 1,
                "special: runtime.profIndex.addCountsAndClearFlags": 1,
                "special: syscall.Exit": 1,
                "special: runtime.args": 1,
                "special: runtime.goargs": 1,
                "special: runtime.gostringnocopy": 1,
                "special: runtime.testAtomic64": 1,
                "special: runtime.check": 1,
                "special: runtime.parsedebugvars": 1,
                "special: debug.SetTraceback": 1,
                "special: runtime.timediv": 1,
                "special: reflect.typelinks": 1,
                "special: reflect.resolveNameOff": 1,
                "special: reflect.resolveTypeOff": 1,
                "special: reflect.resolveTextOff": 1,
                "special: reflect.addReflectOff": 1,
                "special: runtime.reflectOffsLock": 1,
                "special: runtime.reflectOffsUnlock": 1,
                "special: runtime.extendRandom": 1,
                "special: runtime.sellock": 1,
                "special: runtime.selunlock": 1,
                "special: runtime.selparkcommit": 1,
                "special: runtime.selectgo": 1,
                "special: runtime.readyWithTime": 1,
                "special: runtime.semacquire1": 1,
                "special: runtime.semroot": 1,
                "special: runtime.semrelease1": 1,
                "special: runtime.cansemacquire": 1,
                "special: runtime.dumpregs": 1,
                "special: runtime.sighandler": 1,
                "special: runtime.isAbortPC": 1,
                "special: signal.signal": 3,
                "special: os.sigpipe": 1,
                "special: runtime.init.6": 1,
                "special: runtime.initsig": 1,
                "special: runtime.getsig": 1,
                "special: runtime.sigInstallGoHandler": 1,
                "special: runtime.sigInitIgnored": 1,
                "special: runtime.sigenable": 1,
                "special: runtime.setThreadCPUProfiler": 1,
                "special: runtime.sigpipe": 1,
                "special: runtime.sigtrampgo": 1,
                "special: runtime.setSignalstackSP": 1,
                "special: runtime.setGsignalStack": 1,
                "special: runtime.restoreGsignalStack": 1,
                "special: runtime.sigpanic": 1,
                "special: runtime.canpanic": 1,
                "special: runtime.panicmem": 1,
                "special: runtime.panicoverflow": 1,
                "special: runtime.panicfloat": 1,
                "special: runtime.dieFromSignal": 1,
                "special: runtime.raisebadsignal": 1,
                "special: runtime.crash": 1,
                "special: runtime.ensureSigM": 1,
                "special: runtime.noSignalStack": 1,
                "special: runtime.sigNotOnStack": 1,
                "special: runtime.signalDuringFork": 1,
                "special: runtime.badsignal": 1,
                "special: runtime.sigfwdgo": 1,
                "special: runtime.unblocksig": 1,
                "special: runtime.sigaddset": 1,
                "special: runtime.minitSignals": 1,
                "special: runtime.minitSignalStack": 1,
                "special: runtime.minitSignalMask": 1,
                "special: runtime.blockableSig": 1,
                "special: runtime.sigdelset": 1,
                "special: runtime.unminitSignals": 1,
                "special: runtime.signalstack": 1,
                "special: runtime.sigsend": 1,
                "special: runtime.makeslice": 1,
                "special: runtime.panicmakeslicelen": 1,
                "special: runtime.panicmakeslicecap": 1,
                "special: runtime.growslice": 1,
                "special: runtime.isPowerOfTwo": 1,
                "special: MMN/M": 1,
                "special: M:N": 1,
                "special: MKN6M:N": 1,
                "special: runtime.stackinit": 1,
                "special: runtime.stacklog2": 1,
                "special: runtime.stackpoolalloc": 1,
                "special: runtime.gclinkptr.ptr": 1,
                "special: runtime.stackpoolfree": 1,
                "special: runtime.stackcacherefill": 1,
                "special: runtime.stackcacherelease": 1,
                "special: runtime.stackcache": 1,
                "special: runtime.stackalloc": 1,
                "special: runtime.stackfree": 1,
                "special: runtime.adjustpointers": 1,
                "special: sys.Ctz8": 1,
                "special: runtime.adjustframe": 1,
                "special: runtime.adjustpointer": 1,
                "special: runtime.adjustctxt": 1,
                "special: runtime.adjustdefers": 1,
                "special: runtime.adjustsudogs": 1,
                "special: runtime.findsghi": 1,
                "special: runtime.syncadjustsudogs": 1,
                "special: runtime.copystack": 1,
                "special: runtime.adjustpanics": 1,
                "special: runtime.round2": 1,
                "special: runtime.newstack": 1,
                "special: runtime.shrinkstack": 1,
                "special: runtime.freeStackSpans": 1,
                "special: runtime.getStackMap": 1,
                "special: runtime.morestackc": 1,
                "special: runtime.concatstrings": 1,
                "special: runtime.stringDataOnStack": 1,
                "special: runtime.concatstring2": 1,
                "special: runtime.concatstring3": 1,
                "special: runtime.concatstring4": 1,
                "special: runtime.concatstring5": 1,
                "special: runtime.slicebytetostring": 1,
                "special: runtime.rawstringtmp": 1,
                "special: runtime.stringtoslicebyte": 1,
                "special: runtime.stringtoslicerune": 1,
                "special: runtime.slicerunetostring": 1,
                "special: runtime.intstring": 1,
                "special: runtime.rawstring": 1,
                "special: runtime.rawbyteslice": 1,
                "special: runtime.rawruneslice": 1,
                "special: runtime.gostring": 1,
                "special: runtime.index": 1,
                "special: runtime.atoi": 1,
                "special: runtime.findnull": 1,
                "special: runtime.badsystemstack": 1,
                "special: reflect.memmove": 1,
                "special: runtime.expandCgoFrames": 1,
                "special: runtime.modulesinit": 1,
                "special: runtime.moduledataverify": 1,
                "special: runtime.moduledataverify1": 1,
                "special: runtime.FuncForPC": 1,
                "special: runtime.findmoduledatap": 1,
                "special: runtime.findfunc": 1,
                "special: runtime.pcvalue": 1,
                "special: runtime.pcvalueCacheKey": 1,
                "special: runtime.funcname": 1,
                "special: runtime.cfuncname": 1,
                "special: runtime.funcnameFromNameoff": 1,
                "special: runtime.funcline1": 1,
                "special: runtime.funcline": 1,
                "special: runtime.funcspdelta": 1,
                "special: runtime.pcdatavalue": 1,
                "special: runtime.pcdatastart": 1,
                "special: runtime.pcdatavalue1": 1,
                "special: runtime.funcdata": 1,
                "special: runtime.step": 1,
                "special: runtime.readvarint": 1,
                "special: time.Sleep": 1,
                "special: runtime.badTimer": 1,
                "special: runtime.goroutineReady": 1,
                "special: runtime.addtimer": 1,
                "special: runtime.deltimer": 1,
                "special: runtime.modtimer": 1,
                "special: runtime.timerproc": 1,
                "special: runtime.timejump": 1,
                "special: runtime.timejumpLocked": 1,
                "special: runtime.siftupTimer": 1,
                "special: runtime.siftdownTimer": 1,
                "special: time.now": 1,
                "special: runtime.traceReader": 1,
                "special: runtime.traceProcFree": 1,
                "special: runtime.traceFullQueue": 1,
                "special: runtime.traceBufPtr.ptr": 1,
                "special: runtime.traceEvent": 1,
                "special: runtime.traceEventLocked": 1,
                "special: runtime.traceStackID": 1,
                "special: runtime.traceAcquireBuffer": 1,
                "special: runtime.traceReleaseBuffer": 1,
                "special: runtime.traceFlush": 1,
                "special: runtime.traceProcStart": 1,
                "special: runtime.traceProcStop": 1,
                "special: runtime.traceGCSweepStart": 1,
                "special: runtime.traceGCSweepSpan": 1,
                "special: runtime.traceGCSweepDone": 1,
                "special: runtime.traceGoCreate": 1,
                "special: runtime.traceGoStart": 1,
                "special: runtime.traceGoPark": 1,
                "special: runtime.traceGoUnpark": 1,
                "special: runtime.traceGoSysExit": 1,
                "special: runtime.traceGoSysBlock": 1,
                "special: runtime.traceNextGC": 1,
                "special: runtime.tracebackdefers": 1,
                "special: runtime.getArgInfoFast": 1,
                "special: runtime.gentraceback": 1,
                "special: runtime.topofstack": 1,
                "special: runtime.elideWrapperCalling": 1,
                "special: runtime.getArgInfo": 1,
                "special: runtime.tracebackCgoContext": 1,
                "special: runtime.printcreatedby": 1,
                "special: runtime.printcreatedby1": 1,
                "special: runtime.traceback": 1,
                "special: runtime.tracebacktrap": 1,
                "special: runtime.traceback1": 1,
                "special: runtime.printAncestorTraceback": 1,
                "special: runtime.printAncestorTracebackFuncInfo": 1,
                "special: runtime.callers": 1,
                "special: runtime.gcallers": 1,
                "special: runtime.showframe": 1,
                "special: runtime.showfuncinfo": 1,
                "special: runtime.contains": 1,
                "special: runtime.isExportedRuntime": 1,
                "special: runtime.goroutineheader": 1,
                "special: runtime.tracebackothers": 1,
                "special: runtime.tracebackHexdump": 1,
                "special: runtime.isSystemGoroutine": 1,
                "special: runtime.printCgoTraceback": 1,
                "special: runtime.printOneCgoTraceback": 1,
                "special: runtime.callCgoSymbolizer": 1,
                "special: runtime.cgoContextPCs": 1,
                "special: runtime.resolveNameOff": 1,
                "special: runtime.resolveTypeOff": 1,
                "special: runtime.name.tagLen": 1,
                "special: runtime.name.data": 1,
                "special: runtime.name.nameLen": 1,
                "special: runtime.name.name": 1,
                "special: runtime.name.tag": 1,
                "special: runtime.name.pkgPath": 1,
                "special: runtime.typelinksinit": 1,
                "special: runtime.typesEqual": 1,
                "special: runtime.decoderune": 1,
                "special: runtime.encoderune": 1,
                "special: runtime.vdsoInitFromSysinfoEhdr": 1,
                "special: runtime.vdsoFindVersion": 1,
                "special: runtime.vdsoParseSymbols": 1,
                "special: runtime.vdsoauxv": 1,
                "special: runtime.inVDSOPage": 1,
                "special: runtime.mmap.func1": 1,
                "special: runtime.munmap.func1": 1,
                "special: runtime.sigaction.func1": 1,
                "special: runtime.cgoCheckWriteBarrier.func1": 1,
                "special: runtime.cgoCheckTypedBlock.func1": 1,
                "special: runtime.chansend.func1": 1,
                "special: runtime.chanrecv.func1": 1,
                "special: runtime.debugCallCheck.func1": 1,
                "special: runtime.debugCallWrap.func1": 1,
                "special: runtime.mallocgc.func1": 1,
                "special: runtime.persistentalloc.func1": 1,
                "special: runtime.freemcache.func1": 1,
                "special: runtime.SetFinalizer.func1": 1,
                "special: runtime.SetFinalizer.func2": 1,
                "special: runtime.gcStart.func1": 1,
                "special: runtime.gcStart.func2": 1,
                "special: runtime.gcMarkDone.func1.1": 1,
                "special: runtime.gcMarkDone.func1": 1,
                "special: runtime.gcMarkDone.func2": 1,
                "special: runtime.gcMarkDone.func3": 1,
                "special: runtime.gcMarkTermination.func1": 1,
                "special: runtime.gcMarkTermination.func2": 1,
                "special: runtime.gcMarkTermination.func3": 1,
                "special: runtime.gcMarkTermination.func4.1": 1,
                "special: runtime.gcMarkTermination.func4": 1,
                "special: runtime.gcBgMarkWorker.func1": 1,
                "special: runtime.gcBgMarkWorker.func2": 1,
                "special: runtime.markroot.func1": 1,
                "special: runtime.gcAssistAlloc.func1": 1,
                "special: runtime.scanstack.func1": 1,
                "special: runtime.getempty.func1": 1,
                "special: runtime.freeSomeWbufs.func1": 1,
                "special: coalesce.func1": 1,
                "special: coalesce.func2": 1,
                "special: alloc.func1": 1,
                "special: freeSpan.func1": 1,
                "special: Malloc.func1": 1,
                "special: runtime.tracealloc.func1": 1,
                "special: runtime.tracefree.func1": 1,
                "special: runtime.wbBufFlush.func1": 1,
                "special: runtime.futexwakeup.func1": 1,
                "special: runtime.sysSigaction.func1": 1,
                "special: runtime.newdefer.func1": 1,
                "special: runtime.newdefer.func2": 1,
                "special: K0F/00": 1,
                "special: runtime.freedefer.func1": 1,
                "special: runtime.preprintpanics.func1": 1,
                "special: runtime.throw.func1": 1,
                "special: runtime.fatalthrow.func1": 1,
                "special: runtime.fatalpanic.func1": 1,
                "special: runtime.fatalpanic.func2": 1,
                "special: runtime.hexdumpWords.func1": 1,
                "special: runtime.main.func1": 1,
                "special: runtime.main.func2": 1,
                "special: runtime.goready.func1": 1,
                "special: runtime.casgstatus.func1": 1,
                "special: runtime.casgstatus.func2": 1,
                "special: runtime.startTheWorld.func1": 1,
                "special: runtime.reentersyscall.func1": 1,
                "special: runtime.entersyscallblock.func1": 1,
                "special: runtime.entersyscallblock.func2": 1,
                "special: runtime.exitsyscallfast.func1": 1,
                "special: reacquired.func1": 1,
                "special: runtime.malg.func1": 1,
                "special: runtime.newproc.func1": 1,
                "special: runtime.gfget.func1": 1,
                "special: rlock.func1": 1,
                "special: lock.func1": 1,
                "special: runtime.selectgo.func1": 1,
                "special: runtime.selectgo.func2": 1,
                "special: runtime.ensureSigM.func1": 1,
                "special: runtime.callers.func1": 1,
                "special: runtime.tracebackHexdump.func1": 1,
                "special: runtime.vdsoParseSymbols.func1": 1,
                "special: runtime.init.ializers": 1,
                "special: runtime.init": 1,
                "special: runtime.skipPleaseUseCallersFrames": 1,
                "special: runtime.rt0": 1,
                "special: runtime.asminit": 1,
                "special: runtime.gogo": 1,
                "special: runtime.mcall": 1,
                "special: runtime.systemstack": 2,
                "special: runtime.morestack": 2,
                "special: runtime.reflectcall": 1,
                "special: runtime.call32": 1,
                "special: runtime.call64": 1,
                "special: runtime.call128": 1,
                "special: runtime.call256": 1,
                "special: runtime.call512": 1,
                "special: runtime.call1024": 1,
                "special: runtime.call2048": 1,
                "special: runtime.call4096": 1,
                "special: runtime.call8192": 1,
                "special: runtime.call16384": 1,
                "special: runtime.call32768": 1,
                "special: runtime.call65536": 1,
                "special: runtime.call131072": 1,
                "special: runtime.call262144": 1,
                "special: runtime.call524288": 1,
                "special: runtime.call1048576": 1,
                "special: runtime.call2097152": 1,
                "special: runtime.call4194304": 1,
                "special: runtime.call8388608": 1,
                "special: runtime.call16777216": 1,
                "special: runtime.call33554432": 1,
                "special: runtime.call67108864": 1,
                "special: runtime.call134217728": 1,
                "special: runtime.call268435456": 1,
                "special: runtime.call536870912": 1,
                "special: runtime.call1073741824": 1,
                "special: runtime.procyield": 1,
                "special: runtime.publicationBarrier": 1,
                "special: runtime.jmpdefer": 1,
                "special: runtime.asmcgocall": 1,
                "special: runtime.setg": 1,
                "special: runtime.abort": 1,
                "special: runtime.stackcheck": 1,
                "special: runtime.cputicks": 1,
                "special: runtime.aeshash": 1,
                "special: runtime.aeshashstr": 1,
                "special: runtime.aeshashbody": 1,
                "special: runtime.aeshash32": 1,
                "special: runtime.aeshash64": 1,
                "special: runtime.checkASM": 1,
                "special: runtime.return0": 1,
                "special: runtime.goexit": 1,
                "special: runtime.gcWriteBarrier": 1,
                "special: runtime.debugCallV1": 1,
                "special: runtime.debugCallPanicked": 1,
                "special: runtime.duffzero": 1,
                "special: runtime.duffcopy": 1,
                "special: runtime.memclrNoHeapPointers": 1,
                "special: runtime.memmove": 1,
                "special: runtime.exit": 1,
                "special: runtime.exitThread": 1,
                "special: runtime.open": 1,
                "special: runtime.closefd": 1,
                "special: runtime.write": 1,
                "special: runtime.read": 1,
                "special: runtime.usleep": 1,
                "special: runtime.gettid": 1,
                "special: runtime.raise": 1,
                "special: runtime.raiseproc": 1,
                "special: runtime.setitimer": 1,
                "special: runtime.mincore": 1,
                "special: runtime.walltime": 1,
                "special: runtime.nanotime": 1,
                "special: runtime.rtsigprocmask": 1,
                "special: runtime.rt": 1,
                "special: runtime.callCgoSigaction": 1,
                "special: runtime.sigfwd": 1,
                "special: runtime.sigtramp": 1,
                "special: runtime.cgoSigtramp": 1,
                "special: runtime.sigreturn": 1,
                "special: runtime.sysMmap": 1,
                "special: runtime.callCgoMmap": 1,
                "special: runtime.sysMunmap": 1,
                "special: runtime.callCgoMunmap": 1,
                "special: runtime.madvise": 1,
                "special: runtime.futex": 1,
                "special: runtime.clone": 1,
                "special: runtime.sigaltstack": 1,
                "special: runtime.settls": 1,
                "special: runtime.osyield": 1,
                "special: runtime.sched": 1,
                "special: runtime.epollcreate": 1,
                "special: runtime.epollcreate1": 1,
                "special: runtime.epollctl": 1,
                "special: runtime.epollwait": 1,
                "special: runtime.closeonexec": 1,
                "special: hash.runtime.uncommontype": 1,
                "special: eq.runtime.uncommontype": 1,
                "special: hash.runtime": 3,
                "special: eq.runtime": 3,
                "special: hash.runtime.sysmontick": 1,
                "special: eq.runtime.sysmontick": 1,
                "special: hash.runtime.special": 1,
                "special: eq.runtime.special": 1,
                "special: hash.runtime.markBits": 1,
                "special: eq.runtime.markBits": 1,
                "special: hash.runtime.mcache": 1,
                "special: eq.runtime.mcache": 1,
                "special: hash.struct": 15,
                "special: runtime.n": 6,
                "special: eq.struct": 15,
                "special: hash.runtime.gcWork": 1,
                "special: eq.runtime.gcWork": 1,
                "special: hash.runtime.wbBuf": 1,
                "special: eq.runtime.wbBuf": 1,
                "special: hash.runtime.sudog": 1,
                "special: eq.runtime.sudog": 1,
                "special: hash.runtime.hchan": 1,
                "special: eq.runtime.hchan": 1,
                "special: hash.runtime.bitvector": 1,
                "special: eq.runtime.bitvector": 1,
                "special: hash.runtime.itab": 1,
                "special: eq.runtime.itab": 1,
                "special: hash.runtime.modulehash": 1,
                "special: eq.runtime.modulehash": 1,
                "special: hash.runtime.treapNode": 1,
                "special: eq.runtime.treapNode": 1,
                "special: hash.runtime.gcSweepBuf": 1,
                "special: eq.runtime.gcSweepBuf": 1,
                "special: hash.runtime.arenaHint": 1,
                "special: eq.runtime.arenaHint": 1,
                "special: hash.runtime.mcentral": 1,
                "special: eq.runtime.mcentral": 1,
                "special: runtime.pad": 10,
                "special: hash.runtime.specialfinalizer": 1,
                "special: eq.runtime.specialfinalizer": 1,
                "special: hash.runtime.rwmutex": 1,
                "special: eq.runtime.rwmutex": 1,
                "special: hash.runtime.scase": 1,
                "special: eq.runtime.scase": 1,
                "special: hash.runtime.siginfo": 1,
                "special: eq.runtime.siginfo": 1,
                "special: add-fm": 1,
                "special: hash.runtime.Frame": 1,
                "special: eq.runtime.Frame": 1,
                "special: hash.runtime.TypeAssertionError": 1,
                "special: eq.runtime.TypeAssertionError": 1,
                "special: hash.runtime.cpuProfile": 1,
                "special: eq.runtime.cpuProfile": 1,
                "special: hash.runtime.dbgVar": 1,
                "special: eq.runtime.dbgVar": 1,
                "special: hash.runtime.finblock": 1,
                "special: eq.runtime.finblock": 1,
                "special: hash.runtime.forcegcstate": 1,
                "special: eq.runtime.forcegcstate": 1,
                "special: hash.runtime.funcinl": 1,
                "special: eq.runtime.funcinl": 1,
                "special: hash.runtime.gcControllerState": 1,
                "special: eq.runtime.gcControllerState": 1,
                "special: hash.runtime.gcTrigger": 1,
                "special: eq.runtime.gcTrigger": 1,
                "special: hash.runtime.hiter": 1,
                "special: eq.runtime.hiter": 1,
                "special: runtime.size": 4,
                "special: runtime.nmalloc": 4,
                "special: runtime.nfree": 4,
                "special: hash.runtime.mstats": 1,
                "special: eq.runtime.mstats": 1,
                "special: runtime.user": 2,
                "special: runtime.runnable": 2,
                "special: runtime.noStack": 2,
                "special: hash.runtime.semaRoot": 1,
                "special: eq.runtime.semaRoot": 1,
                "special: hash.runtime.sigTabT": 1,
                "special: eq.runtime.sigTabT": 1,
                "special: hash.runtime.stackmap": 1,
                "special: eq.runtime.stackmap": 1,
                "special: hash.runtime.sweepdata": 1,
                "special: eq.runtime.sweepdata": 1,
                "special: hash.runtime.traceStack": 1,
                "special: eq.runtime.traceStack": 1,
                "special: hash.runtime.traceStackTable": 1,
                "special: eq.runtime.traceStackTable": 1,
                "special: hash.runtime.vdsoSymbolKey": 1,
                "special: eq.runtime.vdsoSymbolKey": 1,
                "special: hash.runtime.vdsoVersionKey": 1,
                "special: eq.runtime.vdsoVersionKey": 1,
                "special: runtime.root": 4,
                "special: runtime.cycle": 2,
                "special: runtime.flushed": 2,
                "special: runtime.enabled": 2,
                "special: runtime.needed": 2,
                "special: runtime.cgo": 2,
                "special: runtime.alignme": 2,
                "special: runtime.full": 2,
                "special: runtime.empty": 2,
                "special: runtime.pad0": 2,
                "special: runtime.wbufSpans": 2,
                "special: runtime.free": 2,
                "special: runtime.busy": 2,
                "special: runtime.bytesMarked": 2,
                "special: runtime.markrootNext": 2,
                "special: runtime.markrootJobs": 2,
                "special: runtime.nproc": 2,
                "special: runtime.tstart": 2,
                "special: runtime.nwait": 2,
                "special: runtime.ndone": 2,
                "special: runtime.nFlushCacheRoots": 2,
                "special: runtime.nDataRoots": 2,
                "special: runtime.nBSSRoots": 2,
                "special: runtime.nSpanRoots": 2,
                "special: runtime.nStackRoots": 2,
                "special: runtime.startSema": 2,
                "special: runtime.markDoneSema": 2,
                "special: runtime.bgMarkReady": 2,
                "special: runtime.bgMarkDone": 2,
                "special: runtime.mode": 2,
                "special: runtime.userForced": 2,
                "special: runtime.totaltime": 2,
                "special: runtime.initialHeapLive": 2,
                "special: runtime.assistQueue": 2,
                "special: runtime.q": 2,
                "special: runtime.sweepWaiters": 2,
                "special: runtime.list": 2,
                "special: runtime.cycles": 2,
                "special: runtime.stwprocs": 2,
                "special: runtime.maxprocs": 2,
                "special: runtime.tSweepTerm": 2,
                "special: runtime.tMark": 2,
                "special: runtime.tMarkTerm": 2,
                "special: runtime.tEnd": 2,
                "special: runtime.pauseNS": 2,
                "special: runtime.pauseStart": 2,
                "special: runtime.heap0": 2,
                "special: runtime.heap1": 2,
                "special: runtime.heap2": 2,
                "special: runtime.heapGoal": 2,
                "special: runtime.waiting": 2,
                "special: runtime.wake": 2,
                "special: runtime.haveTemplateThread": 2,
                "special: runtime.mask": 2,
                "special: runtime.wanted": 2,
                "special: runtime.ignored": 2,
                "special: runtime.state": 2,
                "special: runtime.delivering": 2,
                "special: runtime.inuse": 2,
                "special: errors.New": 1,
                "special: sync.newEntry": 1,
                "special: sync.indexLocal": 1,
                "special: sync.poolCleanup": 1,
                "special: sync.init.0": 1,
                "special: sync.init.1": 1,
                "special: sync.init.ializers": 1,
                "special: sync.init": 1,
                "special: io.WriteString": 1,
                "special: io.ReadAtLeast": 1,
                "special: io.copyBuffer": 1,
                "special: io.init.ializers": 1,
                "special: io.init": 1,
                "special: hash.io.LimitedReader": 1,
                "special: eq.io.LimitedReader": 1,
                "special: utf8.DecodeRune": 1,
                "special: utf8.DecodeRuneInString": 1,
                "special: utf8.DecodeLastRune": 1,
                "special: utf8.RuneStart": 1,
                "special: utf8.DecodeLastRuneInString": 1,
                "special: utf8.EncodeRune": 1,
                "special: utf8.RuneCount": 1,
                "special: utf8.RuneCountInString": 1,
                "special: utf8.ValidString": 1,
                "special: unicode.In": 1,
                "special: unicode.IsSpace": 1,
                "special: unicode.is16": 1,
                "special: unicode.is32": 1,
                "special: unicode.Is": 1,
                "special: unicode.isExcludingLatin": 1,
                "special: unicode.to": 1,
                "special: unicode.ToUpper": 1,
                "special: unicode.To": 1,
                "special: unicode.ToLower": 1,
                "special: unicode.SimpleFold": 1,
                "special: unicode.init.ializers": 1,
                "special: unicode.init": 1,
                "special: bytes.makeSlice": 1,
                "special: bytes.IndexByte": 1,
                "special: bytes.explode": 1,
                "special: bytes.Count": 1,
                "special: bytes.genSplit": 1,
                "special: bytes.EqualFold": 1,
                "special: bytes.Index": 1,
                "special: bytealg.Cutover": 1,
                "special: bytes.Equal": 1,
                "special: bytes.indexRabinKarp": 1,
                "special: bytes.hashStr": 1,
                "special: bytes.makeSlice.func1": 1,
                "special: bytes.init.ializers": 1,
                "special: bytes.init": 1,
                "special: utf8.FullRune": 1,
                "special: bufio.init.ializers": 1,
                "special: bufio.init": 1,
                "special: math.asin": 1,
                "special: math.NaN": 1,
                "special: math.acos": 1,
                "special: math.satan": 1,
                "special: math.xatan": 1,
                "special: math.atan": 1,
                "special: math.atan2": 1,
                "special: math.IsNaN": 1,
                "special: math.Signbit": 1,
                "special: math.Copysign": 1,
                "special: math.IsInf": 1,
                "special: math.Inf": 1,
                "special: math.frexp": 1,
                "special: math.normalize": 1,
                "special: math.Abs": 1,
                "special: math.Float64frombits": 1,
                "special: math.Float64bits": 1,
                "special: math.ldexp": 1,
                "special: math.log10": 1,
                "special: math.mod": 1,
                "special: math.modf": 1,
                "special: math.pow": 1,
                "special: math.isOddInt": 1,
                "special: math.cos": 1,
                "special: math.sin": 1,
                "special: math.tan": 1,
                "special: math.trigReduce": 1,
                "special: bits.LeadingZeros64": 1,
                "special: math/bits": 4,
                "special: math.init.ializers": 1,
                "special: math.init": 1,
                "special: math.Asin": 1,
                "special: math.Acos": 1,
                "special: math.Atan2": 1,
                "special: math.Atan": 1,
                "special: math.Max": 1,
                "special: math.Min": 1,
                "special: math.Exp": 1,
                "special: math.Floor": 1,
                "special: math.Ceil": 1,
                "special: math.Frexp": 1,
                "special: math.Ldexp": 1,
                "special: math.Log10": 1,
                "special: math.Log": 1,
                "special: math.Mod": 1,
                "special: math.Modf": 1,
                "special: math.Pow": 1,
                "special: math.Sin": 1,
                "special: math.Cos": 1,
                "special: math.Tan": 1,
                "special: strconv.equalIgnoreCase": 1,
                "special: strconv.special": 1,
                "special: strconv.readFloat": 1,
                "special: strconv.atof64exact": 1,
                "special: strconv.atof32exact": 1,
                "special: strconv.atof32": 1,
                "special: strconv.rangeError": 1,
                "special: strconv.syntaxError": 1,
                "special: strconv.atof64": 1,
                "special: strconv.ParseFloat": 1,
                "special: strconv.Quote": 1,
                "special: strconv.quoteWith": 1,
                "special: strconv.baseError": 1,
                "special: strconv.Itoa": 1,
                "special: strconv.bitSizeError": 1,
                "special: strconv.ParseUint": 1,
                "special: strconv.ParseInt": 1,
                "special: strconv.digitZero": 1,
                "special: strconv.trim": 1,
                "special: strconv.rightShift": 1,
                "special: strconv.prefixIsLessThan": 1,
                "special: strconv.leftShift": 1,
                "special: strconv.shouldRoundUp": 1,
                "special: strconv.frexp10Many": 1,
                "special: strconv.adjustLastDigitFixed": 1,
                "special: strconv.adjustLastDigit": 1,
                "special: strconv.FormatFloat": 1,
                "special: strconv.max": 1,
                "special: strconv.genericFtoa": 1,
                "special: math.Float32bits": 1,
                "special: strconv.bigFtoa": 1,
                "special: strconv.formatDigits": 1,
                "special: strconv.roundShortest": 1,
                "special: strconv.fmtE": 1,
                "special: strconv.min": 1,
                "special: strconv.fmtF": 1,
                "special: strconv.fmtB": 1,
                "special: strconv.FormatUint": 1,
                "special: strconv.small": 1,
                "special: strconv.FormatInt": 1,
                "special: strconv.AppendInt": 1,
                "special: strconv.AppendUint": 1,
                "special: strconv.formatBits": 1,
                "special: strconv.isPowerOfTwo": 1,
                "special: bits.TrailingZeros": 1,
                "special: strconv.appendQuotedWith": 1,
                "special: strconv.appendQuotedRuneWith": 1,
                "special: utf8.ValidRune": 1,
                "special: strconv.appendEscapedRune": 1,
                "special: strconv.CanBackquote": 1,
                "special: strconv.UnquoteChar": 1,
                "special: strconv.unhex": 1,
                "special: strconv.Unquote": 1,
                "special: strconv.contains": 1,
                "special: strconv.bsearch16": 1,
                "special: strconv.bsearch32": 1,
                "special: strconv.IsPrint": 1,
                "special: strconv.isInGraphicList": 1,
                "special: strconv.init.ializers": 1,
                "special: strconv.init": 1,
                "special: hash.strconv.NumError": 1,
                "special: eq.strconv.NumError": 1,
                "special: hash.strconv.decimal": 1,
                "special: eq.strconv.decimal": 1,
                "special: hash.strconv.extFloat": 1,
                "special: eq.strconv.extFloat": 1,
                "special: hash.strconv.leftCheat": 1,
                "special: eq.strconv.leftCheat": 1,
                "special: reflect.MakeFunc": 1,
                "special: reflect.makeMethodValue": 1,
                "special: reflect.Swapper": 1,
                "special: reflect.ValueOf": 1,
                "special: reflect.escapes": 1,
                "special: reflect.unpackEface": 1,
                "special: reflect.ifaceIndir": 1,
                "special: reflect.Value.Kind": 1,
                "special: reflect.flag.kind": 1,
                "special: reflect.name.tagLen": 1,
                "special: reflect.name.data": 1,
                "special: reflect.name.nameLen": 1,
                "special: reflect.add": 1,
                "special: reflect.name.name": 1,
                "special: reflect.name.tag": 1,
                "special: reflect.name.pkgPath": 1,
                "special: reflect.newName": 1,
                "special: reflect.Kind.String": 1,
                "special: reflect.toType": 1,
                "special: reflect.ChanDir.String": 1,
                "special: reflect.name.isExported": 1,
                "special: reflect.StructTag.Get": 1,
                "special: reflect.StructTag.Lookup": 1,
                "special: reflect.TypeOf": 1,
                "special: reflect.resolveReflectName": 1,
                "special: reflect.fnv1": 1,
                "special: reflect.implements": 1,
                "special: reflect.directlyAssignable": 1,
                "special: reflect.haveIdenticalType": 1,
                "special: reflect.haveIdenticalUnderlyingType": 1,
                "special: reflect.typesByString": 1,
                "special: reflect.rtypeOff": 1,
                "special: reflect.funcStr": 1,
                "special: reflect.SliceOf": 1,
                "special: reflect.funcLayout": 1,
                "special: reflect.addTypeBits": 1,
                "special: reflect.packEface": 1,
                "special: reflect.methodName": 1,
                "special: reflect.flag.mustBe": 1,
                "special: reflect.flag.mustBeExported": 1,
                "special: reflect.flag.mustBeAssignable": 1,
                "special: reflect.Value.Addr": 1,
                "special: reflect.flag.ro": 1,
                "special: reflect.Value.Bool": 1,
                "special: reflect.Value.Bytes": 1,
                "special: reflect.Value.runes": 1,
                "special: reflect.Value.CanAddr": 1,
                "special: reflect.Value.CanSet": 1,
                "special: reflect.Value.Call": 1,
                "special: reflect.Value.CallSlice": 1,
                "special: reflect.Value.call": 1,
                "special: reflect.storeRcvr": 1,
                "special: 2.R": 1,
                "special: reflect.callReflect": 1,
                "special: reflect.methodReceiver": 1,
                "special: reflect.callMethod": 1,
                "special: reflect.funcName": 1,
                "special: reflect.Value.Cap": 1,
                "special: reflect.Value.pointer": 1,
                "special: reflect.Value.Close": 1,
                "special: reflect.Value.Complex": 1,
                "special: reflect.Value.Elem": 1,
                "special: reflect.Value.Field": 1,
                "special: reflect.Value.FieldByIndex": 1,
                "special: reflect.Value.IsNil": 1,
                "special: reflect.Value.FieldByName": 1,
                "special: reflect.Value.FieldByNameFunc": 1,
                "special: reflect.Value.Float": 1,
                "special: reflect.Value.Index": 1,
                "special: reflect.arrayAt": 1,
                "special: reflect.Value.Int": 1,
                "special: reflect.Value.CanInterface": 1,
                "special: reflect.Value.Interface": 1,
                "special: reflect.valueInterface": 1,
                "special: reflect.Value.InterfaceData": 1,
                "special: reflect.Value.IsValid": 1,
                "special: reflect.Value.Len": 1,
                "special: reflect.Value.MapIndex": 1,
                "special: reflect.Value.MapKeys": 1,
                "special: reflect.Value.MapRange": 1,
                "special: reflect.copyVal": 1,
                "special: reflect.Value.Method": 1,
                "special: reflect.Value.NumMethod": 1,
                "special: reflect.Value.MethodByName": 1,
                "special: reflect.Value.NumField": 1,
                "special: reflect.Value.OverflowComplex": 1,
                "special: reflect.overflowFloat32": 1,
                "special: reflect.Value.OverflowFloat": 1,
                "special: reflect.Value.OverflowInt": 1,
                "special: reflect.Value.OverflowUint": 1,
                "special: reflect.Value.Pointer": 1,
                "special: reflect.Value.Recv": 1,
                "special: reflect.Value.recv": 1,
                "special: reflect.Value.Send": 1,
                "special: reflect.Value.send": 1,
                "special: reflect.Value.Set": 1,
                "special: reflect.Value.SetBool": 1,
                "special: reflect.Value.SetBytes": 1,
                "special: reflect.Value.setRunes": 1,
                "special: reflect.Value.SetComplex": 1,
                "special: reflect.Value.SetFloat": 1,
                "special: reflect.Value.SetInt": 1,
                "special: reflect.Value.SetLen": 1,
                "special: reflect.Value.SetCap": 1,
                "special: reflect.Value.SetMapIndex": 1,
                "special: reflect.Value.SetUint": 1,
                "special: reflect.Value.SetPointer": 1,
                "special: reflect.Value.SetString": 1,
                "special: reflect.Value.String": 1,
                "special: reflect.Value.TryRecv": 1,
                "special: reflect.Value.TrySend": 1,
                "special: reflect.Value.Type": 1,
                "special: reflect.Value.Uint": 1,
                "special: reflect.Value.UnsafeAddr": 1,
                "special: reflect.typesMustMatch": 1,
                "special: reflect.Copy": 1,
                "special: reflect.MakeMapWithSize": 1,
                "special: reflect.Zero": 1,
                "special: reflect.New": 1,
                "special: reflect.Value.assignTo": 1,
                "special: reflect.Value.Convert": 1,
                "special: reflect.convertOp": 1,
                "special: reflect.makeInt": 1,
                "special: reflect.makeFloat": 1,
                "special: reflect.makeComplex": 1,
                "special: reflect.makeString": 1,
                "special: reflect.makeBytes": 1,
                "special: reflect.makeRunes": 1,
                "special: reflect.cvtInt": 1,
                "special: reflect.cvtUint": 1,
                "special: reflect.cvtFloatInt": 1,
                "special: reflect.cvtFloatUint": 1,
                "special: reflect.cvtIntFloat": 1,
                "special: reflect.cvtUintFloat": 1,
                "special: reflect.cvtFloat": 1,
                "special: reflect.cvtComplex": 1,
                "special: reflect.cvtIntString": 1,
                "special: reflect.cvtUintString": 1,
                "special: reflect.cvtBytesString": 1,
                "special: reflect.cvtStringBytes": 1,
                "special: reflect.cvtRunesString": 1,
                "special: reflect.cvtStringRunes": 1,
                "special: reflect.cvtDirect": 1,
                "special: reflect.cvtT2I": 1,
                "special: reflect.cvtI2I": 1,
                "special: reflect.Swapper.func1": 1,
                "special: reflect.Swapper.func2": 1,
                "special: reflect.Swapper.func3": 1,
                "special: reflect.Swapper.func4": 1,
                "special: reflect.Swapper.func5": 1,
                "special: reflect.Swapper.func6": 1,
                "special: reflect.Swapper.func7": 1,
                "special: reflect.Swapper.func8": 1,
                "special: reflect.Swapper.func9": 1,
                "special: FieldByName.func1": 1,
                "special: reflect.FuncOf.func1": 1,
                "special: reflect.funcLayout.func1": 1,
                "special: reflect.init.ializers": 1,
                "special: reflect.init": 1,
                "special: reflect.makeFuncStub": 1,
                "special: reflect.methodValueCall": 1,
                "special: hash.reflect.uncommonType": 1,
                "special: eq.reflect.uncommonType": 1,
                "special: hash.reflect.Method": 1,
                "special: eq.reflect.Method": 1,
                "special: hash.reflect.funcType": 1,
                "special: eq.reflect.funcType": 1,
                "special: hash.reflect.ValueError": 1,
                "special: eq.reflect.ValueError": 1,
                "special: hash.reflect.funcTypeFixed128": 1,
                "special: eq.reflect.funcTypeFixed128": 1,
                "special: hash.reflect.funcTypeFixed16": 1,
                "special: eq.reflect.funcTypeFixed16": 1,
                "special: hash.reflect.funcTypeFixed32": 1,
                "special: eq.reflect.funcTypeFixed32": 1,
                "special: hash.reflect.funcTypeFixed4": 1,
                "special: eq.reflect.funcTypeFixed4": 1,
                "special: hash.reflect.funcTypeFixed64": 1,
                "special: eq.reflect.funcTypeFixed64": 1,
                "special: hash.reflect.funcTypeFixed8": 1,
                "special: eq.reflect.funcTypeFixed8": 1,
                "special: reflect.ityp": 2,
                "special: reflect.typ": 2,
                "special: reflect.hash": 2,
                "special: reflect.fun": 2,
                "special: reflect.b": 2,
                "special: reflect.x": 2,
                "special: reflect.m": 2,
                "special: sort.Search": 1,
                "special: sort.SearchStrings": 1,
                "special: sort.StringSlice.Search": 1,
                "special: sort.Slice": 1,
                "special: sort.insertionSort": 2,
                "special: sort.siftDown": 2,
                "special: sort.heapSort": 2,
                "special: sort.medianOfThree": 2,
                "special: sort.swapRange": 1,
                "special: sort.doPivot": 2,
                "special: sort.quickSort": 2,
                "special: sort.Sort": 1,
                "special: sort.maxDepth": 1,
                "special: sort.StringSlice.Len": 1,
                "special: sort.StringSlice.Less": 1,
                "special: sort.StringSlice.Swap": 1,
                "special: sort.StringSlice.Sort": 1,
                "special: sort.Stable": 1,
                "special: sort.stable": 1,
                "special: sort.symMerge": 1,
                "special: sort.rotate": 1,
                "special: sort.SearchStrings.func1": 1,
                "special: sort.init": 1,
                "special: fmtsort.Sort": 1,
                "special: fmtsort.compare": 1,
                "special: fmtsort.floatCompare": 1,
                "special: fmtsort.isNaN": 1,
                "special: fmtsort.nilCompare": 1,
                "special: fmtsort.init": 1,
                "special: syscall.readIntLE": 1,
                "special: syscall.ParseDirent": 1,
                "special: syscall.direntNamlen": 1,
                "special: syscall.copyenv": 1,
                "special: syscall.Getenv": 1,
                "special: syscall.Environ": 1,
                "special: syscall.SlicePtrFromStrings": 1,
                "special: syscall.BytePtrFromString": 1,
                "special: syscall.SetNonblock": 1,
                "special: syscall.Exec": 1,
                "special: syscall.itoa": 1,
                "special: syscall.uitoa": 1,
                "special: syscall.ByteSliceFromString": 1,
                "special: syscall.WaitStatus.Exited": 1,
                "special: syscall.WaitStatus.Signaled": 1,
                "special: syscall.WaitStatus.Stopped": 1,
                "special: syscall.WaitStatus.Continued": 1,
                "special: syscall.WaitStatus.CoreDump": 1,
                "special: syscall.WaitStatus.ExitStatus": 1,
                "special: syscall.WaitStatus.Signal": 1,
                "special: syscall.WaitStatus.StopSignal": 1,
                "special: syscall.WaitStatus.TrapCause": 1,
                "special: syscall.Wait4": 1,
                "special: syscall.anyToSockaddr": 1,
                "special: syscall.Accept": 1,
                "special: syscall.Accept4": 1,
                "special: syscall.Recvmsg": 1,
                "special: syscall.SendmsgN": 1,
                "special: syscall.direntIno": 1,
                "special: syscall.readInt": 1,
                "special: syscall.direntReclen": 1,
                "special: syscall.Errno.Error": 1,
                "special: syscall.Errno.Temporary": 1,
                "special: syscall.Errno.Timeout": 1,
                "special: syscall.Signal.Signal": 1,
                "special: syscall.Signal.String": 1,
                "special: syscall.GetsockoptInt": 1,
                "special: syscall.Recvfrom": 1,
                "special: syscall.Sendto": 1,
                "special: syscall.openat": 1,
                "special: syscall.errnoErr": 1,
                "special: syscall.readlinkat": 1,
                "special: syscall.wait4": 1,
                "special: syscall.Close": 1,
                "special: syscall.Dup": 1,
                "special: syscall.Fchdir": 1,
                "special: syscall.Fchmod": 1,
                "special: syscall.fcntl": 1,
                "special: syscall.Fsync": 1,
                "special: syscall.Getdents": 1,
                "special: syscall.Kill": 1,
                "special: syscall.read": 1,
                "special: syscall.write": 1,
                "special: syscall.munmap": 1,
                "special: syscall.Fchown": 1,
                "special: syscall.Fstat": 1,
                "special: syscall.Ftruncate": 1,
                "special: syscall.Pread": 1,
                "special: syscall.Pwrite": 1,
                "special: syscall.Seek": 1,
                "special: syscall.Shutdown": 1,
                "special: syscall.accept": 1,
                "special: syscall.accept4": 1,
                "special: syscall.fstatat": 1,
                "special: syscall.getsockopt": 1,
                "special: syscall.setsockopt": 1,
                "special: syscall.recvfrom": 1,
                "special: syscall.sendto": 1,
                "special: syscall.recvmsg": 1,
                "special: syscall.sendmsg": 1,
                "special: syscall.mmap": 1,
                "special: syscall.init.ializers": 1,
                "special: syscall.init": 1,
                "special: syscall.Syscall": 1,
                "special: syscall.Syscall6": 1,
                "special: syscall.RawSyscall": 1,
                "special: hash.syscall.SockaddrInet4": 1,
                "special: eq.syscall.SockaddrInet4": 1,
                "special: hash.syscall.SockaddrLinklayer": 1,
                "special: eq.syscall.SockaddrLinklayer": 1,
                "special: hash.syscall.SockaddrUnix": 1,
                "special: eq.syscall.SockaddrUnix": 1,
                "special: testlog.Open": 1,
                "special: testlog.Logger": 1,
                "special: testlog.Stat": 1,
                "special: time.nextStdChunk": 1,
                "special: time.isDigit": 1,
                "special: time.startsWithLowerCase": 1,
                "special: time.match": 1,
                "special: time.lookup": 1,
                "special: time.appendInt": 1,
                "special: time.atoi": 1,
                "special: time.formatNano": 1,
                "special: time.Time.String": 1,
                "special: time.Time.Format": 1,
                "special: time.Time.AppendFormat": 1,
                "special: time.absClock": 1,
                "special: time.Time.Nanosecond": 1,
                "special: time.absWeekday": 1,
                "special: time.quote": 1,
                "special: time.getnum": 1,
                "special: time.cutspace": 1,
                "special: time.skip": 1,
                "special: time.parse": 1,
                "special: time.daysIn": 1,
                "special: time.isLeap": 1,
                "special: time.FixedZone": 1,
                "special: time.parseTimeZone": 1,
                "special: time.parseGMT": 1,
                "special: time.parseSignedOffset": 1,
                "special: time.parseNanoseconds": 1,
                "special: time.leadingInt": 1,
                "special: time.open": 1,
                "special: syscall.Open": 1,
                "special: time.closefd": 1,
                "special: time.preadn": 1,
                "special: syscall.Read": 1,
                "special: time.Time.After": 1,
                "special: time.Time.Before": 1,
                "special: time.Time.Equal": 1,
                "special: time.Month.String": 1,
                "special: time.Weekday.String": 1,
                "special: time.Time.IsZero": 1,
                "special: time.Time.abs": 1,
                "special: time.Time.locabs": 1,
                "special: time.Time.Date": 1,
                "special: time.Time.Year": 1,
                "special: time.Time.Month": 1,
                "special: time.Time.Day": 1,
                "special: time.Time.Weekday": 1,
                "special: time.Time.ISOWeek": 1,
                "special: time.Time.Clock": 1,
                "special: time.Time.Hour": 1,
                "special: time.Time.Minute": 1,
                "special: time.Time.Second": 1,
                "special: time.Time.YearDay": 1,
                "special: time.Duration.String": 1,
                "special: time.fmtFrac": 1,
                "special: time.fmtInt": 1,
                "special: time.Duration.Nanoseconds": 1,
                "special: time.Duration.Seconds": 1,
                "special: time.Duration.Minutes": 1,
                "special: time.Duration.Hours": 1,
                "special: time.Duration.Truncate": 1,
                "special: time.Duration.Round": 1,
                "special: time.lessThanHalf": 1,
                "special: time.Time.Add": 1,
                "special: time.Time.Sub": 1,
                "special: time.Since": 1,
                "special: time.Until": 1,
                "special: time.Time.AddDate": 1,
                "special: time.Time.Location": 1,
                "special: time.Time.date": 1,
                "special: time.absDate": 1,
                "special: time.Now": 1,
                "special: time.Time.UTC": 1,
                "special: time.Time.Local": 1,
                "special: time.Time.In": 1,
                "special: time.Time.Zone": 1,
                "special: time.Time.Unix": 1,
                "special: time.Time.UnixNano": 1,
                "special: time.Time.MarshalBinary": 1,
                "special: time.Time.GobEncode": 1,
                "special: time.Time.MarshalJSON": 1,
                "special: time.Parse": 1,
                "special: time.Time.MarshalText": 1,
                "special: time.Unix": 1,
                "special: time.unixTime": 1,
                "special: time.Date": 1,
                "special: time.norm": 1,
                "special: time.Time.Truncate": 1,
                "special: time.Time.Round": 1,
                "special: time.div": 1,
                "special: time.fileSizeError.Error": 1,
                "special: time.byteString": 1,
                "special: time.LoadLocationFromTZData": 1,
                "special: time.loadTzinfoFromDirOrZip": 1,
                "special: time.loadTzinfoFromZip": 1,
                "special: time.get4": 1,
                "special: time.get2": 1,
                "special: time.loadTzinfo": 1,
                "special: time.loadLocation": 1,
                "special: time.readFile": 1,
                "special: time.read": 1,
                "special: time.initLocal": 1,
                "special: time.init.ializers": 1,
                "special: time.init": 1,
                "special: hash.time.zone": 1,
                "special: eq.time.zone": 1,
                "special: hash.time.zoneTrans": 1,
                "special: eq.time.zoneTrans": 1,
                "special: hash.time.ParseError": 1,
                "special: eq.time.ParseError": 1,
                "special: poll.consume": 1,
                "special: poll.errClosing": 1,
                "special: poll.fcntl": 1,
                "special: poll.convertErr": 1,
                "special: poll.setDeadlineImpl": 1,
                "special: syscall.Write": 1,
                "special: syscall.ReadDirent": 1,
                "special: poll.DupCloseOnExec": 1,
                "special: poll.dupCloseOnExecOld": 1,
                "special: syscall.CloseOnExec": 1,
                "special: poll.writev": 1,
                "special: poll.accept": 1,
                "special: syscall.SetsockoptInt": 1,
                "special: syscall.SetsockoptInet4Addr": 1,
                "special: syscall.SetsockoptLinger": 1,
                "special: syscall.SetsockoptIPMreqn": 1,
                "special: syscall.SetsockoptByte": 1,
                "special: syscall.SetsockoptIPMreq": 1,
                "special: syscall.SetsockoptIPv6Mreq": 1,
                "special: poll.glob": 1,
                "special: poll.init.ializers": 1,
                "special: poll.init": 1,
                "special: unix.IsNonblock": 1,
                "special: internal/syscall/unix": 2,
                "special: unix.init": 1,
                "special: os.wrapSyscallError": 1,
                "special: os.NewSyscallError": 1,
                "special: os.underlyingError": 1,
                "special: os.epipecheck": 1,
                "special: os.OpenFile": 1,
                "special: os.newRawConn": 1,
                "special: os.Readlink": 1,
                "special: syscall.Readlink": 1,
                "special: os.fixCount": 1,
                "special: os.syscallMode": 1,
                "special: os.FileMode.Perm": 1,
                "special: os.NewFile": 1,
                "special: os.newFile": 1,
                "special: os.openFileNolog": 1,
                "special: os.IsNotExist": 1,
                "special: os.isNotExist": 1,
                "special: os.basename": 1,
                "special: os.init.0": 1,
                "special: os.Exit": 1,
                "special: os.Lstat": 1,
                "special: os.fillFileStatFromSys": 1,
                "special: os.timespecToTime": 1,
                "special: os.lstatNolog": 1,
                "special: syscall.Lstat": 1,
                "special: os.itoa": 1,
                "special: os.uitoa": 1,
                "special: os.FileMode.String": 1,
                "special: os.FileMode.IsDir": 1,
                "special: os.FileMode.IsRegular": 1,
                "special: os.glob": 1,
                "special: os.init.ializers": 1,
                "special: os.init": 1,
                "special: hash.os.file": 1,
                "special: eq.os.file": 1,
                "special: hash.os.LinkError": 1,
                "special: eq.os.LinkError": 1,
                "special: hash.os.PathError": 1,
                "special: eq.os.PathError": 1,
                "special: hash.os.Process": 1,
                "special: eq.os.Process": 1,
                "special: hash.os.ProcessState": 1,
                "special: eq.os.ProcessState": 1,
                "special: hash.os.SyscallError": 1,
                "special: eq.os.SyscallError": 1,
                "special: hash.os.fileStat": 1,
                "special: eq.os.fileStat": 1,
                "special: utf8.RuneLen": 1,
                "special: strconv.AppendQuoteToASCII": 1,
                "special: strconv.AppendQuote": 1,
                "special: strconv.AppendQuoteRuneToASCII": 1,
                "special: strconv.AppendQuoteRune": 1,
                "special: strconv.AppendFloat": 1,
                "special: fmt.newPrinter": 1,
                "special: fmt.Fprintf": 1,
                "special: fmt.Sprintf": 1,
                "special: fmt.Sprint": 1,
                "special: fmt.Fprintln": 1,
                "special: fmt.Sprintln": 1,
                "special: fmt.getField": 1,
                "special: fmt.parsenum": 1,
                "special: fmt.tooLarge": 1,
                "special: fmt.intFromArg": 1,
                "special: fmt.parseArgNumber": 1,
                "special: fmt.glob": 1,
                "special: fmt.init.ializers": 1,
                "special: fmt.init": 1,
                "special: hash.fmt.fmt": 1,
                "special: eq.fmt.fmt": 1,
                "special: flate.init.0": 1,
                "special: flate.newHuffmanBitWriter": 1,
                "special: flate.newHuffmanEncoder": 1,
                "special: flate.generateFixedLiteralEncoding": 1,
                "special: flate.reverseBits": 1,
                "special: bits.Reverse16": 1,
                "special: flate.generateFixedOffsetEncoding": 1,
                "special: flate.byLiteral.Len": 1,
                "special: flate.byLiteral.Less": 1,
                "special: flate.byLiteral.Swap": 1,
                "special: flate.byFreq.Len": 1,
                "special: flate.byFreq.Less": 1,
                "special: flate.byFreq.Swap": 1,
                "special: flate.CorruptInputError.Error": 1,
                "special: flate.InternalError.Error": 1,
                "special: bits.Reverse8": 1,
                "special: io.ReadFull": 1,
                "special: flate.noEOF": 1,
                "special: flate.fixedHuffmanDecoderInit": 1,
                "special: flate.makeReader": 1,
                "special: bufio.NewReader": 1,
                "special: bufio.NewReaderSize": 1,
                "special: flate.NewReader": 1,
                "special: flate.fixedHuffmanDecoderInit.func1": 1,
                "special: flate.init.ializers": 1,
                "special: flate.init": 1,
                "special: hash.compress": 1,
                "special: eq.compress": 1,
                "special: binary.init.ializers": 1,
                "special: encoding/binary": 7,
                "special: binary.init": 1,
                "special: hash.init": 1,
                "special: crc32.ieeeInit": 1,
                "special: crc32.archAvailableIEEE": 1,
                "special: crc32.archInitIEEE": 1,
                "special: crc32.Update": 1,
                "special: crc32.ChecksumIEEE": 1,
                "special: crc32.archUpdateIEEE": 1,
                "special: crc32.simpleMakeTable": 1,
                "special: crc32.simplePopulateTable": 1,
                "special: crc32.simpleUpdate": 1,
                "special: crc32.slicingMakeTable": 1,
                "special: crc32.slicingUpdate": 1,
                "special: crc32.ieeeInit.func1": 1,
                "special: crc32.init.ializers": 1,
                "special: crc32.init": 1,
                "special: crc32.ieeeCLMUL": 1,
                "special: gzip.NewReader": 1,
                "special: binary.littleEndian.Uint32": 1,
                "special: gzip.noEOF": 1,
                "special: binary.littleEndian.Uint16": 1,
                "special: gzip.init.ializers": 1,
                "special: gzip.init": 1,
                "special: subtle.ConstantTimeCompare": 1,
                "special: crypto/subtle": 2,
                "special: subtle.ConstantTimeByteEq": 1,
                "special: cipher.StreamReader.Read": 1,
                "special: cipher.NewOFB": 1,
                "special: subtle.InexactOverlap": 1,
                "special: crypto/internal/subtle": 2,
                "special: subtle.AnyOverlap": 1,
                "special: cipher.xorBytes": 1,
                "special: cipher.init.ializers": 1,
                "special: cipher.init": 1,
                "special: cipher.xorBytesSSE2": 1,
                "special: hash.crypto": 1,
                "special: eq.crypto": 1,
                "special: aes.sliceForAppend": 1,
                "special: aes.encryptBlockGo": 1,
                "special: binary.bigEndian.Uint32": 1,
                "special: binary.bigEndian.PutUint32": 1,
                "special: aes.decryptBlockGo": 1,
                "special: aes.expandKeyGo": 1,
                "special: aes.rotw": 1,
                "special: aes.subw": 1,
                "special: aes.KeySizeError.Error": 1,
                "special: aes.NewCipher": 1,
                "special: aes.newCipherGeneric": 1,
                "special: aes.newCipher": 1,
                "special: aes.init.ializers": 1,
                "special: aes.init": 1,
                "special: aes.encryptBlockAsm": 1,
                "special: aes.decryptBlockAsm": 1,
                "special: aes.expandKeyAsm": 1,
                "special: aes.gcmAesFinish": 1,
                "special: aes.gcmAesInit": 1,
                "special: aes.gcmAesData": 1,
                "special: aes.gcmAesEnc": 1,
                "special: aes.gcmAesDec": 1,
                "special: base64.NewEncoding": 1,
                "special: base64.Encoding.WithPadding": 1,
                "special: base64.Encoding.Strict": 1,
                "special: base64.CorruptInputError.Error": 1,
                "special: binary.bigEndian.PutUint64": 1,
                "special: base64.init.ializers": 1,
                "special: base64.init": 1,
                "special: hash.encoding": 16,
                "special: eq.encoding": 16,
                "special: strings.explode": 1,
                "special: strings.hashStr": 1,
                "special: strings.hashStrRev": 1,
                "special: strings.Count": 1,
                "special: strings.LastIndex": 1,
                "special: strings.IndexRune": 1,
                "special: strings.IndexByte": 1,
                "special: strings.IndexAny": 1,
                "special: strings.LastIndexByte": 1,
                "special: strings.genSplit": 1,
                "special: strings.Join": 1,
                "special: strings.Map": 1,
                "special: strings.Repeat": 1,
                "special: strings.ToUpper": 1,
                "special: strings.ToLower": 1,
                "special: strings.TrimRightFunc": 1,
                "special: strings.TrimFunc": 1,
                "special: strings.TrimLeftFunc": 1,
                "special: strings.indexFunc": 1,
                "special: strings.lastIndexFunc": 1,
                "special: strings.makeASCIISet": 1,
                "special: strings.makeCutsetFunc": 1,
                "special: strings.Trim": 1,
                "special: strings.TrimLeft": 1,
                "special: strings.TrimRight": 1,
                "special: strings.Replace": 1,
                "special: strings.EqualFold": 1,
                "special: strings.Index": 1,
                "special: strings.indexRabinKarp": 1,
                "special: strings.makeCutsetFunc.func1": 1,
                "special: strings.makeCutsetFunc.func2": 1,
                "special: strings.makeCutsetFunc.func3": 1,
                "special: strings.init": 1,
                "special: hash.strings.Reader": 1,
                "special: eq.strings.Reader": 1,
                "special: hex.InvalidByteError.Error": 1,
                "special: hex.Decode": 1,
                "special: hex.fromHexChar": 1,
                "special: hex.init.ializers": 1,
                "special: hex.init": 1,
                "special: url.EscapeError.Error": 1,
                "special: url.InvalidHostError.Error": 1,
                "special: url.shouldEscape": 1,
                "special: url.unescape": 1,
                "special: url.ishex": 1,
                "special: url.unhex": 1,
                "special: url.escape": 1,
                "special: url.getscheme": 1,
                "special: url.split": 1,
                "special: url.Parse": 1,
                "special: url.parse": 1,
                "special: strings.HasSuffix": 1,
                "special: strings.HasPrefix": 1,
                "special: url.parseAuthority": 1,
                "special: strings.Contains": 1,
                "special: url.UserPassword": 1,
                "special: url.User": 1,
                "special: url.parseHost": 1,
                "special: fmt.Errorf": 1,
                "special: url.validEncodedPath": 1,
                "special: url.validOptionalPort": 1,
                "special: url.Values.Get": 1,
                "special: url.Values.Set": 1,
                "special: url.Values.Add": 1,
                "special: url.Values.Del": 1,
                "special: url.parseQuery": 1,
                "special: url.QueryUnescape": 1,
                "special: url.Values.Encode": 1,
                "special: sort.Strings": 1,
                "special: url.QueryEscape": 1,
                "special: url.resolvePath": 1,
                "special: strings.Split": 1,
                "special: strings.TrimPrefix": 1,
                "special: url.ParseQuery": 1,
                "special: url.stripPort": 1,
                "special: url.portOnly": 1,
                "special: url.validUserinfo": 1,
                "special: url.stringContainsCTLByte": 1,
                "special: url.init": 1,
                "special: hash.net": 3,
                "special: eq.net": 3,
                "special: syntax.patchList.patch": 1,
                "special: syntax.patchList.append": 1,
                "special: syntax.patchList.next": 1,
                "special: syntax.Compile": 1,
                "special: syntax.Op.String": 1,
                "special: syntax.ErrorCode.String": 1,
                "special: syntax.minFoldRune": 1,
                "special: syntax.repeatIsValid": 1,
                "special: syntax.cleanAlt": 1,
                "special: syntax.isCharClass": 1,
                "special: syntax.literalRegexp": 1,
                "special: syntax.Parse": 1,
                "special: syntax.isValidCaptureName": 1,
                "special: syntax.isalnum": 1,
                "special: syntax.matchRune": 1,
                "special: syntax.mergeCharClass": 1,
                "special: syntax.unhex": 1,
                "special: syntax.unicodeTable": 1,
                "special: syntax.cleanClass": 1,
                "special: syntax.appendLiteral": 1,
                "special: syntax.appendRange": 1,
                "special: syntax.appendFoldedRange": 1,
                "special: syntax.appendClass": 1,
                "special: syntax.appendFoldedClass": 1,
                "special: syntax.appendNegatedClass": 1,
                "special: syntax.appendTable": 1,
                "special: syntax.appendNegatedTable": 1,
                "special: syntax.negateClass": 1,
                "special: syntax.ranges.Less": 1,
                "special: syntax.ranges.Len": 1,
                "special: syntax.ranges.Swap": 1,
                "special: syntax.checkUTF8": 1,
                "special: syntax.nextRune": 1,
                "special: syntax.InstOp.String": 1,
                "special: syntax.IsWordChar": 1,
                "special: syntax.bw": 1,
                "special: syntax.dumpProg": 1,
                "special: syntax.dumpInst": 1,
                "special: syntax.u32": 1,
                "special: strconv.QuoteToASCII": 1,
                "special: syntax.writeRegexp": 1,
                "special: syntax.escape": 1,
                "special: unicode.IsPrint": 1,
                "special: strings.ContainsRune": 1,
                "special: syntax.simplify1": 1,
                "special: syntax.init.ializers": 1,
                "special: syntax.init": 1,
                "special: hash.regexp": 1,
                "special: eq.regexp": 1,
                "special: regexp.freeBitState": 1,
                "special: regexp.newBitState": 1,
                "special: regexp.lazyFlag.match": 1,
                "special: regexp.newLazyFlag": 1,
                "special: regexp.freeOnePassMachine": 1,
                "special: regexp.newOnePassMachine": 1,
                "special: regexp.onePassPrefix": 1,
                "special: regexp.iop": 1,
                "special: regexp.onePassNext": 1,
                "special: regexp.mergeRuneSets": 1,
                "special: regexp.mergeRuneSets.func2": 1,
                "special: regexp.cleanupOnePass": 1,
                "special: regexp.onePassCopy": 1,
                "special: regexp.runeSlice.Len": 1,
                "special: regexp.runeSlice.Less": 1,
                "special: regexp.runeSlice.Swap": 1,
                "special: regexp.makeOnePass": 1,
                "special: regexp.newQueue": 1,
                "special: regexp.compileOnePass": 1,
                "special: regexp.compile": 1,
                "special: regexp.maxBitStateLen": 1,
                "special: regexp.shouldBacktrack": 1,
                "special: regexp.MustCompile": 1,
                "special: regexp.Compile": 1,
                "special: regexp.quote": 1,
                "special: bytes.HasPrefix": 1,
                "special: regexp.init.0": 1,
                "special: regexp.QuoteMeta": 1,
                "special: regexp.special": 1,
                "special: regexp.extract": 1,
                "special: unicode.IsLetter": 1,
                "special: unicode.IsDigit": 1,
                "special: regexp.mergeRuneSets.func1": 1,
                "special: regexp.makeOnePass.func1": 1,
                "special: ReplaceAllString.func1": 1,
                "special: ReplaceAllLiteralString.func1": 1,
                "special: ReplaceAllStringFunc.func1": 1,
                "special: ReplaceAll.func1": 1,
                "special: ReplaceAllLiteral.func1": 1,
                "special: ReplaceAllFunc.func1": 1,
                "special: FindAll.func1": 1,
                "special: FindAllIndex.func1": 1,
                "special: FindAllString.func1": 1,
                "special: FindAllStringIndex.func1": 1,
                "special: FindAllSubmatch.func1": 1,
                "special: FindAllSubmatchIndex.func1": 1,
                "special: FindAllStringSubmatch.func1": 1,
                "special: FindAllStringSubmatchIndex.func1": 1,
                "special: regexp.init": 1,
                "special: hash.regexp.entry": 1,
                "special: eq.regexp.entry": 1,
                "special: hash.regexp.inputReader": 1,
                "special: eq.regexp.inputReader": 1,
                "special: hash.regexp.job": 1,
                "special: eq.regexp.job": 1,
                "special: utf16.Encode": 1,
                "special: unicode/utf16": 5,
                "special: utf16.EncodeRune": 1,
                "special: utf16.Decode": 1,
                "special: utf16.DecodeRune": 1,
                "special: log.New": 1,
                "special: log.itoa": 1,
                "special: log.Printf": 1,
                "special: log.Println": 1,
                "special: log.Fatalf": 1,
                "special: log.Panicf": 1,
                "special: log.init.ializers": 1,
                "special: log.init": 1,
                "special: dbg.operandCount": 1,
                "special: dbg.parseFormat": 1,
                "special: dbg.New": 1,
                "special: dbg.NewDbgr": 1,
                "special: dbg.Dbgr.Dbg": 1,
                "special: dbg.standardEmit": 1,
                "special: dbg.Dbgr.Dbgf": 1,
                "special: dbg.Dbgr.DbgDbgf": 1,
                "special: dbg.Dbgr.dbgf": 1,
                "special: emitWriter.emit": 1,
                "special: dbg.ln": 1,
                "special: emitLogger.emit": 1,
                "special: emitLog.emit": 1,
                "special: dbg.Dbgr.DbgDbgf.func1": 1,
                "special: dbg.Dbgr.DbgDbgf.func2": 1,
                "special: dbg.init.ializers": 1,
                "special: dbg.init": 1,
                "special: hash.github.com": 68,
                "special: eq.github.com": 68,
                "special: json.Unmarshal": 1,
                "special: json.Number.String": 1,
                "special: json.Number.Float64": 1,
                "special: json.Number.Int64": 1,
                "special: json.isValidNumber": 1,
                "special: json.indirect": 1,
                "special: reflect.PtrTo": 1,
                "special: reflect.MakeMap": 1,
                "special: VoU/X": 1,
                "special: json.unquote": 1,
                "special: json.getu4": 1,
                "special: json.unquoteBytes": 1,
                "special: utf16.IsSurrogate": 1,
                "special: json.Marshal": 1,
                "special: json.HTMLEscape": 1,
                "special: json.newEncodeState": 1,
                "special: json.isEmptyValue": 1,
                "special: json.valueEncoder": 1,
                "special: json.typeEncoder": 1,
                "special: json.newTypeEncoder": 1,
                "special: json.invalidValueEncoder": 1,
                "special: json.marshalerEncoder": 1,
                "special: json.addrMarshalerEncoder": 1,
                "special: json.textMarshalerEncoder": 1,
                "special: json.addrTextMarshalerEncoder": 1,
                "special: json.boolEncoder": 1,
                "special: json.intEncoder": 1,
                "special: json.uintEncoder": 1,
                "special: json.floatEncoder.encode": 2,
                "special: json.stringEncoder": 1,
                "special: json.interfaceEncoder": 1,
                "special: json.unsupportedTypeEncoder": 1,
                "special: json.structEncoder.encode": 2,
                "special: json.newStructEncoder": 1,
                "special: json.mapEncoder.encode": 2,
                "special: json.newMapEncoder": 1,
                "special: json.encodeByteSlice": 1,
                "special: base64.NewEncoder": 1,
                "special: json.sliceEncoder.encode": 2,
                "special: json.newSliceEncoder": 1,
                "special: json.arrayEncoder.encode": 2,
                "special: json.newArrayEncoder": 1,
                "special: json.ptrEncoder.encode": 2,
                "special: json.newPtrEncoder": 1,
                "special: json.condAddrEncoder.encode": 2,
                "special: json.newCondAddrEncoder": 1,
                "special: json.isValidTag": 1,
                "special: json.typeByIndex": 1,
                "special: json.byIndex.Len": 1,
                "special: json.byIndex.Swap": 1,
                "special: json.byIndex.Less": 1,
                "special: json.typeFields": 1,
                "special: json.dominantField": 1,
                "special: json.cachedTypeFields": 1,
                "special: json.foldFunc": 1,
                "special: json.equalFoldRight": 1,
                "special: json.asciiEqualFold": 1,
                "special: json.simpleLetterEqualFold": 1,
                "special: json.compact": 1,
                "special: json.newline": 1,
                "special: json.Indent": 1,
                "special: json.checkValid": 1,
                "special: json.stateBeginValueOrEmpty": 1,
                "special: json.isSpace": 1,
                "special: json.stateBeginValue": 1,
                "special: json.stateBeginStringOrEmpty": 1,
                "special: json.stateBeginString": 1,
                "special: json.stateEndValue": 1,
                "special: json.stateEndTop": 1,
                "special: json.stateInString": 1,
                "special: json.stateInStringEsc": 1,
                "special: json.stateInStringEscU": 1,
                "special: json.stateInStringEscU1": 1,
                "special: json.stateInStringEscU12": 1,
                "special: json.stateInStringEscU123": 1,
                "special: json.stateNeg": 1,
                "special: json.state1": 1,
                "special: json.state0": 1,
                "special: json.stateDot": 1,
                "special: json.stateDot0": 1,
                "special: json.stateE": 1,
                "special: json.stateESign": 1,
                "special: json.stateE0": 1,
                "special: json.stateT": 1,
                "special: json.stateTr": 1,
                "special: json.stateTru": 1,
                "special: json.stateF": 1,
                "special: json.stateFa": 1,
                "special: json.stateFal": 1,
                "special: json.stateFals": 1,
                "special: json.stateN": 1,
                "special: json.stateNu": 1,
                "special: json.stateNul": 1,
                "special: json.stateError": 1,
                "special: json.quoteChar": 1,
                "special: json.parseTag": 1,
                "special: json.tagOptions.Contains": 1,
                "special: marshal.func1": 1,
                "special: json.typeEncoder.func1": 1,
                "special: json.mapEncoder.encode.func1": 1,
                "special: json.typeFields.func1": 1,
                "special: json.init.ializers": 1,
                "special: json.init": 1,
                "special: json.jsonError.Error": 1,
                "special: encode-fm": 7,
                "special: path.Clean": 1,
                "special: path.Join": 1,
                "special: path.Base": 1,
                "special: path.Dir": 1,
                "special: path.Split": 1,
                "special: path.init.ializers": 1,
                "special: path.init": 1,
                "special: base64vlq.init.0": 1,
                "special: base64vlq.Decoder.Decode": 1,
                "special: base64vlq.fromVLQSigned": 1,
                "special: base64vlq.init": 1,
                "special: 2ev1.Parse": 1,
                "special: path.IsAbs": 1,
                "special: 2ev1.parseMappings": 1,
                "special: strings.NewReader": 1,
                "special: base64vlq.NewDecoder": 1,
                "special: 2ev1.parseGenCol": 1,
                "special: 2ev1.parseSourcesInd": 1,
                "special: 2ev1.parseSourceLine": 1,
                "special: 2ev1.parseSourceCol": 1,
                "special: 2ev1.parseNamesInd": 1,
                "special: Source.func1": 1,
                "special: 2ev1.init": 1,
                "special: file.init": 1,
                "special: token.Token.String": 1,
                "special: token.init.ializers": 1,
                "special: token.init": 1,
                "special: ast.CommentPosition.String": 1,
                "special: ast.Comment.String": 1,
                "special: ast.CommentMap.AddComment": 1,
                "special: ast.CommentMap.AddComments": 1,
                "special: ast.CommentMap.Size": 1,
                "special: ast.CommentMap.MoveComments": 1,
                "special: FetchAll.func1": 1,
                "special: Fetch.func1": 1,
                "special: ast.init": 1,
                "special: filepath.init.ializers": 1,
                "special: path/filepath": 2,
                "special: filepath.init": 1,
                "special: ioutil.readAll": 1,
                "special: io/ioutil": 4,
                "special: ioutil.ReadFile": 1,
                "special: os.Open": 1,
                "special: ioutil.readAll.func1": 1,
                "special: ioutil.init": 1,
                "special: parser.Error.Error": 1,
                "special: parser.ErrorList.Len": 1,
                "special: parser.ErrorList.Swap": 1,
                "special: parser.ErrorList.Less": 1,
                "special: parser.ErrorList.Sort": 1,
                "special: parser.ErrorList.Error": 1,
                "special: parser.ErrorList.Err": 1,
                "special: token.IsKeyword": 1,
                "special: parser.isIdentifierStart": 1,
                "special: parser.isIdentifierPart": 1,
                "special: parser.hex2decimal": 1,
                "special: parser.digitValue": 1,
                "special: ast.NewComment": 1,
                "special: parser.isLineTerminator": 1,
                "special: parser.parseNumberLiteral": 1,
                "special: parser.parseStringLiteral": 1,
                "special: bytes.NewBuffer": 1,
                "special: parser.isDigit": 1,
                "special: parser.isDecimalDigit": 1,
                "special: parser.ReadSource": 1,
                "special: io.Copy": 1,
                "special: parser.ReadSourceMap": 1,
                "special: parser.ParseFileWithSourceMap": 1,
                "special: file.NewFile": 1,
                "special: ast.NewComments": 1,
                "special: bytes.Split": 1,
                "special: bytes.SplitN": 1,
                "special: parser.ParseFunction": 1,
                "special: parser.lineCount": 1,
                "special: parser.TransformRegExp": 1,
                "special: eLeftHandSideExpressionAllowCall.func1": 1,
                "special: parseRelationalExpression.func1": 1,
                "special: parseFunctionBlock.func1": 1,
                "special: parseSwitchStatement.func1": 1,
                "special: parseIterationStatement.func1": 1,
                "special: parseDoWhileStatement.func1": 1,
                "special: parser.init.ializers": 1,
                "special: parser.init": 1,
                "special: parseUnaryExpression-fm": 1,
                "special: parseMultiplicativeExpression-fm": 1,
                "special: parseAdditiveExpression-fm": 1,
                "special: parseShiftExpression-fm": 1,
                "special: parseRelationalExpression-fm": 1,
                "special: parseEqualityExpression-fm": 1,
                "special: parseBitwiseAndExpression-fm": 1,
                "special: arseBitwiseExclusiveOrExpression-fm": 1,
                "special: parseBitwiseOrExpression-fm": 1,
                "special: parseLogicalAndExpression-fm": 1,
                "special: parseAssignmentExpression-fm": 1,
                "special: rand.absInt32": 1,
                "special: rand.NewSource": 1,
                "special: rand.New": 1,
                "special: rand.read": 1,
                "special: rand.Float64": 1,
                "special: rand.seedrand": 1,
                "special: rand.init.ializers": 1,
                "special: rand.init": 1,
                "special: hash.math": 2,
                "special: eq.math": 2,
                "special: Int63-fm": 2,
                "special: rand.Source64.Int63": 1,
                "special: registry.Entry.Source": 1,
                "special: registry.Apply": 1,
                "special: registry.init.ializers": 1,
                "special: registry.init": 1,
                "special: gob.decBoolArray": 1,
                "special: gob.decBoolSlice": 1,
                "special: gob.decComplex64Array": 1,
                "special: gob.decComplex64Slice": 1,
                "special: gob.float32FromBits": 1,
                "special: gob.float64FromBits": 1,
                "special: gob.error": 1,
                "special: gob.decComplex128Array": 1,
                "special: gob.decComplex128Slice": 1,
                "special: gob.decFloat32Array": 1,
                "special: gob.decFloat32Slice": 1,
                "special: gob.decFloat64Array": 1,
                "special: gob.decFloat64Slice": 1,
                "special: gob.decIntArray": 1,
                "special: gob.decIntSlice": 1,
                "special: gob.decInt16Array": 1,
                "special: gob.decInt16Slice": 1,
                "special: gob.decInt32Array": 1,
                "special: gob.decInt32Slice": 1,
                "special: gob.decInt64Array": 1,
                "special: gob.decInt64Slice": 1,
                "special: gob.decInt8Array": 1,
                "special: gob.decInt8Slice": 1,
                "special: gob.decStringArray": 1,
                "special: gob.decStringSlice": 1,
                "special: gob.decUintArray": 1,
                "special: gob.decUintSlice": 1,
                "special: gob.decUint16Array": 1,
                "special: gob.decUint16Slice": 1,
                "special: gob.decUint32Array": 1,
                "special: gob.decUint32Slice": 1,
                "special: gob.decUint64Array": 1,
                "special: gob.decUint64Slice": 1,
                "special: gob.decUintptrArray": 1,
                "special: gob.decUintptrSlice": 1,
                "special: gob.decodeUintReader": 1,
                "special: gob.ignoreUint": 1,
                "special: gob.ignoreTwoUints": 1,
                "special: gob.decAlloc": 1,
                "special: gob.decBool": 1,
                "special: gob.decInt8": 1,
                "special: gob.decUint8": 1,
                "special: gob.decInt16": 1,
                "special: gob.decUint16": 1,
                "special: gob.decInt32": 1,
                "special: gob.decUint32": 1,
                "special: gob.decInt64": 1,
                "special: gob.decUint64": 1,
                "special: gob.decFloat32": 1,
                "special: gob.decFloat64": 1,
                "special: gob.decComplex64": 1,
                "special: gob.decComplex128": 1,
                "special: gob.decUint8Slice": 1,
                "special: gob.decString": 1,
                "special: gob.ignoreUint8Array": 1,
                "special: gob.decodeIntoValue": 1,
                "special: gob.overflow": 1,
                "special: gob.init.0": 1,
                "special: gob.allocValue": 1,
                "special: gob.toInt": 1,
                "special: gob.encBoolArray": 1,
                "special: gob.encBoolSlice": 1,
                "special: gob.encComplex64Array": 1,
                "special: gob.encComplex64Slice": 1,
                "special: gob.floatBits": 1,
                "special: gob.encComplex128Array": 1,
                "special: gob.encComplex128Slice": 1,
                "special: gob.encFloat32Array": 1,
                "special: gob.encFloat32Slice": 1,
                "special: gob.encFloat64Array": 1,
                "special: gob.encFloat64Slice": 1,
                "special: gob.encIntArray": 1,
                "special: gob.encIntSlice": 1,
                "special: gob.encInt16Array": 1,
                "special: gob.encInt16Slice": 1,
                "special: gob.encInt32Array": 1,
                "special: gob.encInt32Slice": 1,
                "special: gob.encInt64Array": 1,
                "special: gob.encInt64Slice": 1,
                "special: gob.encInt8Array": 1,
                "special: gob.encInt8Slice": 1,
                "special: gob.encStringArray": 1,
                "special: gob.encStringSlice": 1,
                "special: gob.encUintArray": 1,
                "special: gob.encUintSlice": 1,
                "special: gob.encUint16Array": 1,
                "special: gob.encUint16Slice": 1,
                "special: gob.encUint32Array": 1,
                "special: gob.encUint32Slice": 1,
                "special: gob.encUint64Array": 1,
                "special: gob.encUint64Slice": 1,
                "special: gob.encUintptrArray": 1,
                "special: gob.encUintptrSlice": 1,
                "special: gob.encIndirect": 1,
                "special: gob.encBool": 1,
                "special: gob.encInt": 1,
                "special: gob.encUint": 1,
                "special: gob.encFloat": 1,
                "special: gob.encComplex": 1,
                "special: gob.encUint8Array": 1,
                "special: gob.encString": 1,
                "special: gob.encStructTerminator": 1,
                "special: gob.valid": 1,
                "special: gob.encodeReflectValue": 1,
                "special: reflect.Indirect": 1,
                "special: gob.isZero": 1,
                "special: gob.encOpFor": 1,
                "special: gob.gobEncodeOpFor": 1,
                "special: gob.compileEnc": 1,
                "special: gob.getEncEngine": 1,
                "special: gob.buildEncEngine": 1,
                "special: gob.errorf": 1,
                "special: gob.catchError": 1,
                "special: gob.validUserType": 1,
                "special: ew/x3w": 1,
                "special: gob.implementsInterface": 1,
                "special: gob.userType": 1,
                "special: gob.setTypeId": 1,
                "special: gob.typeId.string": 1,
                "special: gob.typeId.gobType": 1,
                "special: gob.typeId.name": 1,
                "special: gob.init.1": 1,
                "special: gob.newTypeObject": 1,
                "special: gob.newGobEncoderType": 1,
                "special: gob.newMapType": 1,
                "special: gob.newArrayType": 1,
                "special: gob.newStructType": 1,
                "special: gob.newSliceType": 1,
                "special: gob.isExported": 1,
                "special: unicode.IsUpper": 1,
                "special: gob.isSent": 1,
                "special: gob.getBaseType": 1,
                "special: gob.getType": 1,
                "special: gob.checkId": 1,
                "special: gob.bootstrapType": 1,
                "special: gob.getTypeInfo": 1,
                "special: gob.lookupTypeInfo": 1,
                "special: gob.buildTypeInfo": 1,
                "special: gob.mustGetTypeInfo": 1,
                "special: gob.RegisterName": 1,
                "special: gob.Register": 1,
                "special: gob.registerBasics": 1,
                "special: gob.glob": 1,
                "special: decOpFor.func1": 1,
                "special: decOpFor.func2": 1,
                "special: decOpFor.func3": 1,
                "special: decOpFor.func4": 1,
                "special: decOpFor.func5": 1,
                "special: decIgnoreOpFor.func1": 1,
                "special: decIgnoreOpFor.func2": 1,
                "special: decIgnoreOpFor.func3": 1,
                "special: decIgnoreOpFor.func4": 1,
                "special: decIgnoreOpFor.func5": 1,
                "special: decIgnoreOpFor.func6": 1,
                "special: gobDecodeOpFor.func1": 1,
                "special: gob.encOpFor.func1": 1,
                "special: gob.encOpFor.func2": 1,
                "special: gob.encOpFor.func3": 1,
                "special: gob.encOpFor.func4": 1,
                "special: gob.encOpFor.func5": 1,
                "special: gob.gobEncodeOpFor.func1": 1,
                "special: gob.newTypeObject.func1": 1,
                "special: gob.init.ializers": 1,
                "special: gob.init": 1,
                "special: otto.builtinGlobal": 11,
                "special: otto.FunctionCall.Argument": 1,
                "special: otto.valueOfArrayIndex": 1,
                "special: otto.getValueOfArrayIndex": 1,
                "special: otto.Value.isEmpty": 1,
                "special: otto.Value.IsString": 1,
                "special: otto.newScope": 1,
                "special: otto.toValue": 11,
                "special: otto.digitValue": 1,
                "special: otto.NaNValue": 1,
                "special: otto.builtin": 3,
                "special: hex.DecodeString": 1,
                "special: otto.builtinArray": 23,
                "special: otto.builtinNewArray": 1,
                "special: otto.builtinNewArrayNative": 1,
                "special: otto.Value.IsNumber": 1,
                "special: otto.arrayIndexToString": 1,
                "special: otto.isArray": 1,
                "special: otto.Value.IsDefined": 1,
                "special: otto.FunctionCall.getArgument": 1,
                "special: otto.sortCompare": 1,
                "special: otto.arraySortSwap": 1,
                "special: otto.arraySortQuickPartition": 1,
                "special: otto.arraySortQuickSort": 1,
                "special: otto.Value.IsUndefined": 1,
                "special: otto.builtinBoolean": 3,
                "special: otto.builtinNewBoolean": 1,
                "special: otto.Value.IsBoolean": 1,
                "special: otto.builtinDate": 50,
                "special: otto.builtinNewDate": 1,
                "special: otto.dateFromGoMonth": 1,
                "special: otto.builtinError": 2,
                "special: otto.builtinNewError": 1,
                "special: otto.builtinEvalError": 1,
                "special: otto.builtinNewEvalError": 1,
                "special: otto.builtinTypeError": 1,
                "special: otto.builtinNewTypeError": 1,
                "special: otto.builtinRangeError": 1,
                "special: otto.builtinNewRangeError": 1,
                "special: otto.builtinReferenceError": 1,
                "special: otto.builtinNewReferenceError": 1,
                "special: otto.builtinSyntaxError": 1,
                "special: otto.builtinNewSyntaxError": 1,
                "special: otto.builtinURIError": 1,
                "special: otto.builtinNewURIError": 1,
                "special: otto.builtinFunction": 5,
                "special: otto.builtinNewFunction": 1,
                "special: otto.builtinNewFunctionNative": 1,
                "special: otto.FunctionCall.slice": 1,
                "special: otto.builtinJSON": 8,
                "special: otto.newObject": 1,
                "special: otto.Value.IsObject": 1,
                "special: otto.Value.IsFunction": 1,
                "special: otto.builtinMath": 18,
                "special: otto.negativeInfinityValue": 1,
                "special: otto.positiveInfinityValue": 1,
                "special: otto.builtinNumber": 7,
                "special: otto.numberValueFromNumberArgumentLis": 1,
                "special: otto.builtinNewNumber": 1,
                "special: otto.builtinObject": 28,
                "special: otto.builtinNewObject": 1,
                "special: otto.FunctionCall.toObject": 1,
                "special: property.enumerable": 1,
                "special: otto.Value.IsNull": 1,
                "special: otto.builtinRegExp": 5,
                "special: otto.builtinNewRegExp": 1,
                "special: otto.stringValueFromStringArgumentLis": 1,
                "special: otto.builtinString": 26,
                "special: otto.builtinNewString": 1,
                "special: otto.Value.isRegExp": 1,
                "special: strings.SplitN": 1,
                "special: otto.newPropertyReference": 1,
                "special: otto.newReturnResult": 1,
                "special: otto.newException": 1,
                "special: 2H.G2t": 1,
                "special: otto.cmpl": 1,
                "special: otto.formatForConsole": 1,
                "special: otto.builtinConsole": 7,
                "special: error.format": 1,
                "special: error.formatWithStack": 1,
                "special: frame.location": 1,
                "special: otto.Error.Error": 1,
                "special: otto.Error.String": 1,
                "special: otto.newError": 1,
                "special: error.describe": 1,
                "special: otto.catchPanic": 1,
                "special: otto.positiveZeroValue": 1,
                "special: otto.negativeZeroValue": 1,
                "special: otto.valueKindDispatchKey": 1,
                "special: otto.makeEqualDispatch": 1,
                "special: otto.calculateLessThan": 1,
                "special: otto.newContext": 1,
                "special: YI-L": 1,
                "special: YW-Z": 1,
                "special: otto.newConsoleObject": 1,
                "special: otto.Value.IsPrimitive": 1,
                "special: otto.objectEnumerate": 1,
                "special: otto.init.0": 1,
                "special: otto.objectGetOwnProperty": 1,
                "special: otto.objectGetProperty": 1,
                "special: otto.objectGet": 1,
                "special: otto.objectCanPut": 1,
                "special: property.writable": 1,
                "special: otto.objectPut": 1,
                "special: otto.objectHasProperty": 1,
                "special: otto.objectHasOwnProperty": 1,
                "special: otto.objectDefineOwnProperty": 1,
                "special: property.isEmpty": 1,
                "special: property.isGenericDescriptor": 1,
                "special: property.isDataDescriptor": 1,
                "special: property.writeSet": 1,
                "special: property.configurable": 1,
                "special: property.isAccessorDescriptor": 1,
                "special: property.enumerateSet": 1,
                "special: otto.objectDelete": 1,
                "special: otto.objectClone": 1,
                "special: otto.New": 1,
                "special: otto.Otto.Run": 1,
                "special: otto.Value.safe": 1,
                "special: otto.Otto.Eval": 1,
                "special: otto.Otto.Get": 1,
                "special: otto.Otto.Set": 1,
                "special: otto.Otto.ToValue": 1,
                "special: otto.Otto.SetDebuggerHandler": 1,
                "special: otto.Otto.SetRandomSource": 1,
                "special: otto.Otto.SetStackDepthLimit": 1,
                "special: otto.Otto.SetStackTraceLimit": 1,
                "special: otto.Otto.MakeCustomError": 1,
                "special: otto.Otto.MakeRangeError": 1,
                "special: otto.Otto.MakeSyntaxError": 1,
                "special: otto.Otto.MakeTypeError": 1,
                "special: otto.Otto.Context": 1,
                "special: otto.Otto.ContextLimit": 1,
                "special: otto.Otto.ContextSkip": 1,
                "special: otto.Otto.Call": 1,
                "special: otto.Otto.Object": 1,
                "special: otto.Object.Call": 1,
                "special: otto.Object.Value": 1,
                "special: otto.Object.Get": 1,
                "special: otto.Object.Set": 1,
                "special: otto.Object.Keys": 1,
                "special: otto.Object.KeysByParent": 1,
                "special: otto.Object.Class": 1,
                "special: otto.stringToArrayIndex": 1,
                "special: otto.valueToRangeIndex": 1,
                "special: otto.rangeStartEnd": 1,
                "special: otto.rangeStartLength": 1,
                "special: otto.hereBeDragons": 1,
                "special: property.get": 1,
                "special: otto.toPropertyDescriptor": 1,
                "special: otto.checkObjectCoercible": 1,
                "special: otto.testObjectCoercible": 1,
                "special: otto.Value.Class": 1,
                "special: otto.getStashProperties": 1,
                "special: argumentsObject.clone": 1,
                "special: argumentsObject.get": 1,
                "special: argumentsObject.put": 1,
                "special: otto.argumentsGet": 1,
                "special: otto.argumentsGetOwnProperty": 1,
                "special: otto.argumentsDefineOwnProperty": 1,
                "special: otto.argumentsDelete": 1,
                "special: argumentsObject.delete": 1,
                "special: otto.objectLength": 1,
                "special: otto.arrayUint32": 1,
                "special: otto.isUint32": 1,
                "special: otto.arrayDefineOwnProperty": 1,
                "special: otto.ecmaTime": 1,
                "special: otto.dateToGoMonth": 1,
                "special: otto.timeToEpoch": 1,
                "special: otto.epochToInteger": 1,
                "special: otto.epochToTime": 1,
                "special: otto.dateObjectOf": 1,
                "special: otto.newDateTime": 1,
                "special: otto.dateParse": 1,
                "special: otto.defaultConstruct": 1,
                "special: bindFunctionObject.construct": 1,
                "special: otto.FunctionCall.CallerLocation": 1,
                "special: goArrayObject.getValue": 1,
                "special: goArrayObject.setValue": 1,
                "special: otto.goArrayGetOwnProperty": 1,
                "special: otto.goArrayEnumerate": 1,
                "special: otto.goArrayDefineOwnProperty": 1,
                "special: otto.goArrayDelete": 1,
                "special: I.J": 1,
                "special: otto.goMapGetOwnProperty": 1,
                "special: goMapObject.toKey": 1,
                "special: otto.goMapEnumerate": 1,
                "special: otto.goMapDefineOwnProperty": 1,
                "special: goMapObject.toValue": 1,
                "special: otto.goMapDelete": 1,
                "special: goSliceObject.getValue": 1,
                "special: goSliceObject.setValue": 1,
                "special: otto.goSliceGetOwnProperty": 1,
                "special: otto.goSliceEnumerate": 1,
                "special: otto.goSliceDefineOwnProperty": 1,
                "special: otto.goSliceDelete": 1,
                "special: goStructObject.getValue": 1,
                "special: otto.validGoStructName": 1,
                "special: goStructObject.field": 1,
                "special: goStructObject.setValue": 1,
                "special: otto.goStructGetOwnProperty": 1,
                "special: otto.goStructEnumerate": 1,
                "special: otto.goStructCanPut": 1,
                "special: otto.goStructPut": 1,
                "special: otto.goStructMarshalJSON": 1,
                "special: otto.getIdentifierReference": 1,
                "special: otto.execRegExp": 1,
                "special: otto.execResultToArray": 1,
                "special: stringASCII.Length": 1,
                "special: stringASCII.At": 1,
                "special: stringASCII.String": 1,
                "special: stringWide.Length": 1,
                "special: stringWide.At": 1,
                "special: stringWide.String": 1,
                "special: otto.stringAt": 1,
                "special: otto.stringEnumerate": 1,
                "special: otto.stringGetOwnProperty": 1,
                "special: otto.Value.isCallable": 1,
                "special: otto.Value.Call": 1,
                "special: otto.Value.call": 1,
                "special: otto.Value.constructSafe": 1,
                "special: otto.Value.construct": 1,
                "special: otto.Value.IsNaN": 1,
                "special: otto.Value.String": 1,
                "special: otto.Value.ToBoolean": 1,
                "special: otto.Value.numberValue": 1,
                "special: otto.Value.ToFloat": 1,
                "special: otto.Value.ToInteger": 1,
                "special: otto.Value.ToString": 1,
                "special: otto.Value.Object": 1,
                "special: otto.Value.reference": 1,
                "special: otto.Value.resolve": 1,
                "special: otto.sameValue": 1,
                "special: otto.strictEqualityComparison": 1,
                "special: otto.Value.Export": 1,
                "special: otto.Value.export": 1,
                "special: otto.Value.evaluateBreakContinue": 1,
                "special: otto.Value.evaluateBreak": 1,
                "special: otto.Value.exportNative": 1,
                "special: otto.Value.toReflectValue": 1,
                "special: otto.stringToReflectValue": 1,
                "special: strconv.ParseBool": 1,
                "special: otto.Value.bool": 1,
                "special: otto.parseNumber": 1,
                "special: otto.Value.float64": 1,
                "special: otto.toIntegerFloat": 1,
                "special: otto.Value.number": 1,
                "special: otto.toInt32": 1,
                "special: otto.toUint32": 1,
                "special: otto.toUint16": 1,
                "special: otto.toNumberPrimitive": 1,
                "special: otto.toPrimitive": 1,
                "special: otto.floatToString": 1,
                "special: otto.numberToStringRadix": 1,
                "special: otto.Value.string": 1,
                "special: strconv.FormatBool": 1,
                "special: otto.glob": 2,
                "special: encodeURI.func1": 1,
                "special: reviveWalk.func1": 1,
                "special: stringifyWalk.func1": 1,
                "special: stringifyWalk.func2": 1,
                "special: defineProperties.func1": 1,
                "special: create.func1": 1,
                "special: isSealed.func1": 1,
                "special: seal.func1": 1,
                "special: isFrozen.func1": 1,
                "special: freeze.func1": 1,
                "special: keys.func1": 1,
                "special: getOwnPropertyNames.func1": 1,
                "special: findAndReplaceString.func1": 1,
                "special: nodeProgram.func1": 1,
                "special: nodeStatement.func1": 1,
                "special: nodeForInStatement.func1": 1,
                "special: nodeTryStatement.func1": 1,
                "special: nodeTryStatement.func2": 1,
                "special: nodeTryStatement.func3": 1,
                "special: nodeWithStatement.func1": 1,
                "special: otto.catchPanic.func1": 1,
                "special: otto.makeEqualDispatch.func1": 1,
                "special: otto.makeEqualDispatch.func2": 1,
                "special: otto.makeEqualDispatch.func3": 1,
                "special: otto.makeEqualDispatch.func4": 1,
                "special: otto.New.func1": 1,
                "special: otto.Otto.Get.func1": 1,
                "special: otto.Otto.getValue": 1,
                "special: otto.Otto.Set.func1": 1,
                "special: otto.Otto.setValue": 1,
                "special: otto.Otto.Call.func1": 1,
                "special: otto.Otto.Call.func2": 1,
                "special: otto.Object.Get.func1": 1,
                "special: otto.Object.Set.func1": 1,
                "special: otto.Object.Keys.func1": 1,
                "special: otto.Object.KeysByParent.func1": 1,
                "special: tryCatchEvaluate.func1": 1,
                "special: error.messageValue": 1,
                "special: safeToValue.func1": 1,
                "special: convertCallParameter.func1": 1,
                "special: convertCallParameter.func2": 1,
                "special: convertCallParameter.func3": 1,
                "special: convertCallParameter.func4": 1,
                "special: toValue.func1.1": 1,
                "special: toValue.func1": 1,
                "special: runOrEval.func1": 1,
                "special: otto.newDateTime.func1": 1,
                "special: newErrorObject.func1": 1,
                "special: newNativeFunctionObject.func1": 1,
                "special: newNodeFunctionObject.func1": 1,
                "special: call.func1": 1,
                "special: call.func2": 1,
                "special: otto.Value.Call.func1": 1,
                "special: otto.Value.constructSafe.func1": 1,
                "special: otto.Value.String.func1": 1,
                "special: otto.Value.ToBoolean.func1": 1,
                "special: otto.Value.ToFloat.func1": 1,
                "special: otto.Value.ToInteger.func1": 1,
                "special: otto.Value.ToString.func1": 1,
                "special: otto.Value.export.func1": 1,
                "special: otto.init.ializers": 1,
                "special: otto.init": 1,
                "special: otto.name": 2,
                "special: otto.exists": 2,
                "special: otto.defined": 2,
                "special: otto.value": 2,
                "special: engine.New": 1,
                "special: parser.ParseFile": 1,
                "special: engine.normalizeConsoleArgs": 1,
                "special: engine.logFuncFactory": 1,
                "special: engine.HijackConsoleLogging": 1,
                "special: timeoutMonitor.func1": 1,
                "special: engine.logFuncFactory.func1": 1,
                "special: engine.logFuncFactory.func2": 1,
                "special: engine.logFuncFactory.func3": 1,
                "special: engine.logFuncFactory.func4": 1,
                "special: engine.logFuncFactory.func5": 1,
                "special: engine.logFuncFactory.func6": 1,
                "special: engine.init.ializers": 1,
                "special: engine.init": 1,
                "special: createType-fm": 1,
                "special: retrieveAssetAsString-fm": 1,
                "special: retrieveAssetAsBytes-fm": 1,
                "special: memorymodule.MemoryRunBinary": 1,
                "special: go-memorymodule": 8,
                "special: memorymodule.memfdCreate": 1,
                "special: memorymodule.OpenMemoryFD": 1,
                "special: memorymodule.ExecMemoryFD": 1,
                "special: os.Environ": 1,
                "special: memorymodule.memoryRunBinary": 1,
                "special: memorymodule.init": 1,
                "special: signal.Notify": 1,
                "special: signal.process": 1,
                "special: signal.loop": 1,
                "special: signal.init.0": 1,
                "special: signal.signum": 1,
                "special: signal.Notify.func1": 1,
                "special: signal.enableSignal": 1,
                "special: signal.init": 1,
                "special: signal.m": 2,
                "special: signal.ref": 2,
                "special: main.NewLNXYSCEEWLYHMX": 1,
                "special: main.LNXYSCEEWLYHMXD": 1,
                "special: bytes.NewReader": 1,
                "special: base64.NewDecoder": 1,
                "special: main.main": 1,
                "special: main.g": 1,
                "special: DZUEOXSTYHID.func1": 1,
                "special: DZUEOXSTYHID.func2": 1,
                "special: DZUEOXSTYHID.func3": 1,
                "special: main.main.func1": 1,
                "special: main.main.func2": 1,
                "special: main.main.func3.1": 1,
                "special: main.main.func3": 1,
                "special: main.init.ializers": 1,
                "special: main.init": 1,
                "special: LNXYSCEEWLYHMXjcqxibpgjzovuwdu-fm": 1,
                "special: LNXYSCEEWLYHMXKPVMBZURTDTYA-fm": 1,
                "special: LNXYSCEEWLYHMXXMIYXHYDTESYQ-fm": 1,
                "special: LNXYSCEEWLYHMXLECUSRECPVOEP-fm": 1,
                "special: LNXYSCEEWLYHMXRYBWRXABALMMQ-fm": 1,
                "special: LNXYSCEEWLYHMXGSBTLTKYMHLEL-fm": 1,
                "special: LNXYSCEEWLYHMXCQKLPZMADUPZX-fm": 1,
                "special: LNXYSCEEWLYHMXHBZSIAIEQOVHI-fm": 1,
                "special: main.go": 1,
                "special: tmp/dqn6X4orOBNY2PLz/main": 1,
                "special: LNXYSCEEWLYHMX.go": 1,
                "special: tmp/dqn6X4orOBNY2PLz/LNXYSCEEWLYHMX": 1,
                "special: unix.go": 17,
                "special: opt/go/src/os/signal/signal": 2,
                "special: signal.go": 1,
                "special: env.go": 1,
                "special: opt/go/src/os/env": 1,
                "special: amd64.go": 10,
                "special: root/go/src/go": 2,
                "special: memorymodule/memorymodule": 2,
                "special: memorymodule.go": 1,
                "special: package.go": 1,
                "special: root/go/src/github": 75,
                "special: com/gen0cide/gscript/engine/native": 1,
                "special: logger.go": 2,
                "special: com/gen0cide/gscript/engine/logger": 1,
                "special: executor.go": 1,
                "special: com/gen0cide/gscript/engine/executor": 1,
                "special: errors.go": 2,
                "special: com/gen0cide/gscript/engine/errors": 1,
                "special: engine.go": 1,
                "special: com/gen0cide/gscript/engine/engine": 1,
                "special: assets.go": 1,
                "special: com/gen0cide/gscript/engine/assets": 1,
                "special: com/gen0cide/gscript/logger/null/null": 1,
                "special: dbg.go": 3,
                "special: string.go": 5,
                "special: com/robertkrimen/otto/value": 5,
                "special: primitive.go": 1,
                "special: number.go": 3,
                "special: boolean.go": 3,
                "special: atob.go": 1,
                "special: opt/go/src/strconv/atob": 1,
                "special: com/robertkrimen/otto/type": 14,
                "special: struct.go": 1,
                "special: map.go": 3,
                "special: array.go": 3,
                "special: error.go": 7,
                "special: arguments.go": 1,
                "special: script.go": 1,
                "special: com/robertkrimen/otto/script": 1,
                "special: slice.go": 3,
                "special: otto.go": 1,
                "special: com/robertkrimen/otto/otto": 2,
                "special: class.go": 1,
                "special: com/robertkrimen/otto/object": 2,
                "special: evaluate.go": 2,
                "special: com/robertkrimen/otto/evaluate": 1,
                "special: console.go": 1,
                "special: com/robertkrimen/otto/console": 1,
                "special: cmpl.go": 1,
                "special: com/robertkrimen/otto/cmpl": 5,
                "special: parse.go": 2,
                "special: result.go": 1,
                "special: com/robertkrimen/otto/result": 1,
                "special: statement.go": 2,
                "special: reference.go": 1,
                "special: expression.go": 2,
                "special: stash.go": 1,
                "special: com/robertkrimen/otto/stash": 1,
                "special: clone.go": 1,
                "special: com/robertkrimen/otto/clone": 1,
                "special: regexp.go": 5,
                "special: com/robertkrimen/otto/builtin": 12,
                "special: property.go": 1,
                "special: com/robertkrimen/otto/property": 1,
                "special: object.go": 2,
                "special: math.go": 1,
                "special: json.go": 1,
                "special: function.go": 2,
                "special: date.go": 2,
                "special: global.go": 1,
                "special: com/robertkrimen/otto/global": 1,
                "special: com/robertkrimen/otto/error": 1,
                "special: inline.go": 1,
                "special: com/robertkrimen/otto/inline": 1,
                "special: scope.go": 2,
                "special: com/robertkrimen/otto/scope": 1,
                "special: runtime.go": 4,
                "special: com/robertkrimen/otto/runtime": 1,
                "special: value.go": 3,
                "special: builtin.go": 1,
                "special: encoder.go": 1,
                "special: opt/go/src/encoding/gob/encoder": 1,
                "special: encode.go": 2,
                "special: opt/go/src/encoding/gob/encode": 1,
                "special: helpers.go": 2,
                "special: opt/go/src/encoding/gob/enc": 1,
                "special: decoder.go": 2,
                "special: opt/go/src/encoding/gob/decoder": 1,
                "special: type.go": 3,
                "special: opt/go/src/encoding/gob/type": 1,
                "special: opt/go/src/encoding/gob/error": 1,
                "special: decode.go": 2,
                "special: opt/go/src/encoding/gob/decode": 1,
                "special: opt/go/src/encoding/gob/dec": 1,
                "special: registry.go": 1,
                "special: com/robertkrimen/otto/registry/registry": 1,
                "special: rng.go": 1,
                "special: opt/go/src/math/rand/rng": 1,
                "special: normal.go": 1,
                "special: opt/go/src/math/rand/normal": 1,
                "special: rand.go": 1,
                "special: opt/go/src/math/rand/rand": 1,
                "special: exp.go": 1,
                "special: opt/go/src/math/rand/exp": 1,
                "special: com/robertkrimen/otto/parser/dbg": 1,
                "special: com/robertkrimen/otto/parser/statement": 1,
                "special: com/robertkrimen/otto/parser/regexp": 1,
                "special: lexer.go": 1,
                "special: com/robertkrimen/otto/parser/lexer": 1,
                "special: com/robertkrimen/otto/parser/scope": 1,
                "special: com/robertkrimen/otto/parser/expression": 1,
                "special: parser.go": 1,
                "special: com/robertkrimen/otto/parser/parser": 1,
                "special: com/robertkrimen/otto/parser/error": 1,
                "special: ioutil.go": 1,
                "special: opt/go/src/io/ioutil/ioutil": 1,
                "special: path.go": 2,
                "special: opt/go/src/path/filepath/path": 1,
                "special: match.go": 2,
                "special: opt/go/src/path/filepath/match": 1,
                "special: node.go": 1,
                "special: com/robertkrimen/otto/ast/node": 1,
                "special: comments.go": 1,
                "special: com/robertkrimen/otto/ast/comments": 1,
                "special: const.go": 1,
                "special: com/robertkrimen/otto/token/token": 2,
                "special: token.go": 1,
                "special: file.go": 2,
                "special: com/robertkrimen/otto/file/file": 1,
                "special: sourcemap.go": 1,
                "special: root/go/src/gopkg": 3,
                "special: v1/sourcemap": 1,
                "special: consumer.go": 1,
                "special: v1/consumer": 1,
                "special: vlq.go": 1,
                "special: v1/base64vlq/base64": 1,
                "special: opt/go/src/path/match": 1,
                "special: opt/go/src/path/path": 1,
                "special: tags.go": 1,
                "special: opt/go/src/encoding/json/tags": 1,
                "special: indent.go": 1,
                "special: opt/go/src/encoding/json/indent": 1,
                "special: fold.go": 1,
                "special: opt/go/src/encoding/json/fold": 1,
                "special: opt/go/src/encoding/json/encode": 1,
                "special: scanner.go": 1,
                "special: opt/go/src/encoding/json/scanner": 1,
                "special: opt/go/src/encoding/json/decode": 1,
                "special: com/robertkrimen/otto/dbg/dbg": 1,
                "special: log.go": 2,
                "special: opt/go/src/log/log": 1,
                "special: utf16.go": 1,
                "special: opt/go/src/unicode/utf16/utf16": 1,
                "special: digit.go": 1,
                "special: opt/go/src/unicode/digit": 1,
                "special: opt/go/src/regexp/regexp": 1,
                "special: onepass.go": 1,
                "special: opt/go/src/regexp/onepass": 1,
                "special: exec.go": 2,
                "special: opt/go/src/regexp/exec": 1,
                "special: backtrack.go": 1,
                "special: opt/go/src/regexp/backtrack": 1,
                "special: groups.go": 1,
                "special: opt/go/src/regexp/syntax/perl": 1,
                "special: simplify.go": 1,
                "special: opt/go/src/regexp/syntax/simplify": 1,
                "special: opt/go/src/regexp/syntax/regexp": 1,
                "special: prog.go": 1,
                "special: opt/go/src/regexp/syntax/prog": 1,
                "special: opt/go/src/regexp/syntax/parse": 1,
                "special: opt/go/src/regexp/syntax/op": 1,
                "special: compile.go": 1,
                "special: opt/go/src/regexp/syntax/compile": 1,
                "special: url.go": 1,
                "special: opt/go/src/net/url/url": 1,
                "special: hex.go": 1,
                "special: opt/go/src/encoding/hex/hex": 1,
                "special: strings.go": 1,
                "special: opt/go/src/strings/strings": 1,
                "special: reader.go": 2,
                "special: opt/go/src/strings/reader": 1,
                "special: builder.go": 1,
                "special: opt/go/src/strings/builder": 1,
                "special: base64.go": 1,
                "special: opt/go/src/encoding/base64/base64": 1,
                "special: amd64.s": 32,
                "special: opt/go/src/crypto/aes/gcm": 1,
                "special: opt/go/src/crypto/aes/asm": 1,
                "special: asm.go": 2,
                "special: opt/go/src/crypto/aes/cipher": 2,
                "special: cipher.go": 1,
                "special: block.go": 1,
                "special: opt/go/src/crypto/aes/block": 1,
                "special: gcm.go": 2,
                "special: opt/go/src/crypto/aes/aes": 1,
                "special: opt/go/src/crypto/cipher/xor": 2,
                "special: opt/go/src/crypto/cipher/gcm": 1,
                "special: aliasing.go": 1,
                "special: opt/go/src/crypto/internal/subtle/aliasing": 1,
                "special: ofb.go": 1,
                "special: opt/go/src/crypto/cipher/ofb": 1,
                "special: io.go": 2,
                "special: opt/go/src/crypto/cipher/io": 1,
                "special: time.go": 3,
                "special: opt/go/src/crypto/subtle/constant": 1,
                "special: binary.go": 1,
                "special: opt/go/src/encoding/binary/binary": 1,
                "special: gunzip.go": 1,
                "special: opt/go/src/compress/gzip/gunzip": 1,
                "special: opt/go/src/hash/crc32/crc32": 4,
                "special: generic.go": 2,
                "special: crc32.go": 1,
                "special: varint.go": 1,
                "special: opt/go/src/encoding/binary/varint": 1,
                "special: inflate.go": 1,
                "special: opt/go/src/compress/flate/inflate": 1,
                "special: code.go": 1,
                "special: opt/go/src/compress/flate/huffman": 2,
                "special: writer.go": 1,
                "special: opt/go/src/compress/flate/dict": 1,
                "special: scan.go": 2,
                "special: opt/go/src/fmt/scan": 1,
                "special: print.go": 2,
                "special: opt/go/src/fmt/print": 1,
                "special: format.go": 2,
                "special: opt/go/src/fmt/format": 1,
                "special: procfs.go": 1,
                "special: opt/go/src/os/executable": 1,
                "special: waitid.go": 1,
                "special: opt/go/src/os/wait": 1,
                "special: opt/go/src/os/types": 2,
                "special: str.go": 2,
                "special: opt/go/src/os/str": 1,
                "special: opt/go/src/os/stat": 3,
                "special: linux.go": 6,
                "special: stat.go": 1,
                "special: proc.go": 2,
                "special: opt/go/src/os/proc": 1,
                "special: opt/go/src/os/path": 1,
                "special: opt/go/src/os/error": 3,
                "special: types.go": 1,
                "special: rawconn.go": 1,
                "special: opt/go/src/os/rawconn": 1,
                "special: opt/go/src/os/file": 3,
                "special: posix.go": 6,
                "special: opt/go/src/syscall/zerrors": 1,
                "special: opt/go/src/os/exec": 3,
                "special: opt/go/src/os/dir": 2,
                "special: dir.go": 1,
                "special: nonblocking.go": 1,
                "special: opt/go/src/internal/syscall/unix/nonblocking": 1,
                "special: writev.go": 1,
                "special: opt/go/src/internal/poll/writev": 1,
                "special: sockoptip.go": 1,
                "special: opt/go/src/internal/poll/sockoptip": 1,
                "special: opt/go/src/internal/poll/sockopt": 3,
                "special: sockopt.go": 1,
                "special: cloexec.go": 1,
                "special: opt/go/src/internal/poll/sock": 1,
                "special: opt/go/src/internal/poll/fd": 7,
                "special: mutex.go": 2,
                "special: fd.go": 1,
                "special: opt/go/src/time/zoneinfo": 3,
                "special: read.go": 1,
                "special: opt/go/src/time/sys": 1,
                "special: zoneinfo.go": 1,
                "special: opt/go/src/time/time": 1,
                "special: opt/go/src/time/format": 1,
                "special: opt/go/src/internal/testlog/log": 1,
                "special: opt/go/src/syscall/asm": 1,
                "special: opt/go/src/syscall/zsyscall": 1,
                "special: opt/go/src/syscall/syscall": 4,
                "special: opt/go/src/syscall/str": 1,
                "special: syscall.go": 1,
                "special: opt/go/src/syscall/exec": 1,
                "special: opt/go/src/syscall/env": 1,
                "special: dirent.go": 1,
                "special: opt/go/src/syscall/dirent": 1,
                "special: sort.go": 2,
                "special: opt/go/src/internal/fmtsort/sort": 1,
                "special: zfuncversion.go": 1,
                "special: opt/go/src/sort/zfuncversion": 1,
                "special: opt/go/src/sort/sort": 1,
                "special: opt/go/src/sort/slice": 1,
                "special: search.go": 1,
                "special: opt/go/src/sort/search": 1,
                "special: opt/go/src/reflect/asm": 1,
                "special: opt/go/src/reflect/value": 1,
                "special: swapper.go": 1,
                "special: opt/go/src/reflect/swapper": 1,
                "special: opt/go/src/reflect/type": 1,
                "special: makefunc.go": 1,
                "special: opt/go/src/reflect/makefunc": 1,
                "special: ftoa.go": 1,
                "special: opt/go/src/strconv/ftoa": 1,
                "special: extfloat.go": 1,
                "special: opt/go/src/strconv/extfloat": 1,
                "special: decimal.go": 1,
                "special: opt/go/src/strconv/decimal": 1,
                "special: itoa.go": 1,
                "special: opt/go/src/strconv/itoa": 1,
                "special: quote.go": 1,
                "special: opt/go/src/strconv/quote": 1,
                "special: atoi.go": 1,
                "special: opt/go/src/strconv/atoi": 1,
                "special: atof.go": 1,
                "special: opt/go/src/strconv/atof": 1,
                "special: opt/go/src/math/tan": 2,
                "special: opt/go/src/math/sin": 2,
                "special: stub.s": 1,
                "special: opt/go/src/math/pow": 2,
                "special: opt/go/src/math/modf": 2,
                "special: opt/go/src/math/mod": 2,
                "special: opt/go/src/math/log": 1,
                "special: opt/go/src/math/log10": 2,
                "special: opt/go/src/math/ldexp": 2,
                "special: opt/go/src/math/frexp": 2,
                "special: opt/go/src/math/floor": 1,
                "special: opt/go/src/math/exp": 2,
                "special: opt/go/src/math/dim": 1,
                "special: opt/go/src/math/atan": 2,
                "special: opt/go/src/math/atan2": 2,
                "special: opt/go/src/math/asin": 2,
                "special: bits.go": 2,
                "special: opt/go/src/math/bits/bits": 1,
                "special: reduce.go": 1,
                "special: opt/go/src/math/trig": 1,
                "special: tan.go": 1,
                "special: sin.go": 1,
                "special: pow.go": 1,
                "special: modf.go": 1,
                "special: mod.go": 1,
                "special: log10.go": 1,
                "special: ldexp.go": 1,
                "special: unsafe.go": 1,
                "special: opt/go/src/math/unsafe": 1,
                "special: abs.go": 1,
                "special: opt/go/src/math/abs": 1,
                "special: frexp.go": 1,
                "special: copysign.go": 1,
                "special: opt/go/src/math/copysign": 1,
                "special: signbit.go": 1,
                "special: opt/go/src/math/signbit": 1,
                "special: atan2.go": 1,
                "special: atan.go": 1,
                "special: opt/go/src/math/bits": 1,
                "special: asin.go": 1,
                "special: opt/go/src/bufio/scan": 1,
                "special: bufio.go": 1,
                "special: opt/go/src/bufio/bufio": 1,
                "special: opt/go/src/bytes/reader": 1,
                "special: bytes.go": 1,
                "special: opt/go/src/bytes/bytes": 1,
                "special: buffer.go": 1,
                "special: opt/go/src/bytes/buffer": 1,
                "special: tables.go": 1,
                "special: opt/go/src/unicode/tables": 1,
                "special: letter.go": 1,
                "special: opt/go/src/unicode/letter": 1,
                "special: graphic.go": 1,
                "special: opt/go/src/unicode/graphic": 1,
                "special: utf8.go": 2,
                "special: opt/go/src/unicode/utf8/utf8": 1,
                "special: pipe.go": 1,
                "special: opt/go/src/io/pipe": 1,
                "special: opt/go/src/io/io": 1,
                "special: waitgroup.go": 1,
                "special: opt/go/src/sync/waitgroup": 1,
                "special: rwmutex.go": 2,
                "special: opt/go/src/sync/rwmutex": 1,
                "special: opt/go/src/sync/runtime": 1,
                "special: pool.go": 1,
                "special: opt/go/src/sync/pool": 1,
                "special: once.go": 1,
                "special: opt/go/src/sync/once": 1,
                "special: opt/go/src/sync/mutex": 1,
                "special: opt/go/src/sync/map": 1,
                "special: cond.go": 1,
                "special: opt/go/src/sync/cond": 1,
                "special: opt/go/src/errors/errors": 1,
                "special: opt/go/src/runtime/sys": 2,
                "special: opt/go/src/runtime/rt0": 1,
                "special: opt/go/src/runtime/memmove": 1,
                "special: opt/go/src/runtime/memclr": 1,
                "special: opt/go/src/runtime/duff": 1,
                "special: opt/go/src/runtime/asm": 2,
                "special: asm.s": 2,
                "special: opt/go/src/runtime/vdso": 1,
                "special: opt/go/src/runtime/utf8": 1,
                "special: timestub.go": 1,
                "special: opt/go/src/runtime/timestub": 1,
                "special: opt/go/src/runtime/time": 1,
                "special: intrinsics.go": 1,
                "special: opt/go/src/runtime/internal/sys/intrinsics": 1,
                "special: opt/go/src/runtime/slice": 1,
                "special: sigqueue.go": 1,
                "special: opt/go/src/runtime/sigqueue": 1,
                "special: sighandler.go": 1,
                "special: opt/go/src/runtime/signal": 4,
                "special: amd64x.go": 1,
                "special: select.go": 1,
                "special: opt/go/src/runtime/select": 1,
                "special: opt/go/src/runtime/rwmutex": 1,
                "special: opt/go/src/runtime/runtime": 1,
                "special: profbuf.go": 1,
                "special: opt/go/src/runtime/profbuf": 1,
                "special: stack.go": 1,
                "special: opt/go/src/runtime/stack": 1,
                "special: x86.go": 2,
                "special: traceback.go": 1,
                "special: opt/go/src/runtime/traceback": 1,
                "special: err.go": 1,
                "special: opt/go/src/runtime/write": 1,
                "special: opt/go/src/runtime/print": 1,
                "special: panic.go": 1,
                "special: opt/go/src/runtime/panic": 1,
                "special: opt/go/src/runtime/os": 2,
                "special: opt/go/src/runtime/defs": 1,
                "special: epoll.go": 1,
                "special: opt/go/src/runtime/netpoll": 2,
                "special: netpoll.go": 1,
                "special: mstats.go": 1,
                "special: opt/go/src/runtime/mstats": 1,
                "special: mprof.go": 1,
                "special: opt/go/src/runtime/mprof": 1,
                "special: mgcstack.go": 1,
                "special: opt/go/src/runtime/mgcstack": 1,
                "special: mgcsweepbuf.go": 1,
                "special: opt/go/src/runtime/mgcsweepbuf": 1,
                "special: mgcmark.go": 1,
                "special: opt/go/src/runtime/mgcmark": 1,
                "special: mgclarge.go": 1,
                "special: opt/go/src/runtime/mgclarge": 1,
                "special: sema.go": 1,
                "special: opt/go/src/runtime/sema": 1,
                "special: mgcsweep.go": 1,
                "special: opt/go/src/runtime/mgcsweep": 1,
                "special: mgcwork.go": 1,
                "special: opt/go/src/runtime/mgcwork": 1,
                "special: opt/go/src/runtime/string": 1,
                "special: mfinal.go": 1,
                "special: opt/go/src/runtime/mfinal": 1,
                "special: trace.go": 1,
                "special: opt/go/src/runtime/trace": 1,
                "special: mcentral.go": 1,
                "special: opt/go/src/runtime/mcentral": 1,
                "special: mcache.go": 1,
                "special: opt/go/src/runtime/mcache": 1,
                "special: mbarrier.go": 1,
                "special: opt/go/src/runtime/mbarrier": 1,
                "special: faststr.go": 1,
                "special: opt/go/src/runtime/map": 4,
                "special: fast64.go": 1,
                "special: fast32.go": 1,
                "special: msize.go": 1,
                "special: opt/go/src/runtime/msize": 1,
                "special: fastlog2.go": 1,
                "special: opt/go/src/runtime/fastlog2": 1,
                "special: mgc.go": 1,
                "special: opt/go/src/runtime/mgc": 1,
                "special: runtime1.go": 1,
                "special: opt/go/src/runtime/runtime1": 1,
                "special: opt/go/src/runtime/mem": 1,
                "special: mfixalloc.go": 1,
                "special: opt/go/src/runtime/mfixalloc": 1,
                "special: malloc.go": 1,
                "special: opt/go/src/runtime/malloc": 1,
                "special: futex.go": 1,
                "special: opt/go/src/runtime/lock": 1,
                "special: 64bit.go": 1,
                "special: opt/go/src/runtime/lfstack": 2,
                "special: lfstack.go": 1,
                "special: opt/go/src/runtime/type": 1,
                "special: iface.go": 1,
                "special: opt/go/src/runtime/iface": 1,
                "special: unaligned1.go": 1,
                "special: opt/go/src/runtime/unaligned1": 1,
                "special: hash64.go": 1,
                "special: opt/go/src/runtime/hash64": 1,
                "special: float.go": 1,
                "special: opt/go/src/runtime/float": 1,
                "special: extern.go": 1,
                "special: opt/go/src/runtime/extern": 1,
                "special: opt/go/src/runtime/error": 1,
                "special: opt/go/src/runtime/env": 1,
                "special: debugcall.go": 1,
                "special: opt/go/src/runtime/debugcall": 1,
                "special: debug.go": 1,
                "special: opt/go/src/runtime/debug": 1,
                "special: cpuprof.go": 1,
                "special: opt/go/src/runtime/cpuprof": 1,
                "special: opt/go/src/runtime/cpuflags": 1,
                "special: runtime2.go": 1,
                "special: opt/go/src/runtime/runtime2": 1,
                "special: opt/go/src/runtime/proc": 1,
                "special: chan.go": 1,
                "special: opt/go/src/runtime/chan": 1,
                "special: mbitmap.go": 1,
                "special: opt/go/src/runtime/mbitmap": 1,
                "special: mheap.go": 1,
                "special: opt/go/src/runtime/mheap": 1,
                "special: cgocheck.go": 1,
                "special: opt/go/src/runtime/cgocheck": 1,
                "special: symtab.go": 1,
                "special: opt/go/src/runtime/symtab": 1,
                "special: cgocall.go": 1,
                "special: opt/go/src/runtime/cgocall": 1,
                "special: sigaction.go": 1,
                "special: opt/go/src/runtime/cgo": 2,
                "special: mmap.go": 1,
                "special: mwbbuf.go": 1,
                "special: opt/go/src/runtime/mwbbuf": 1,
                "special: pointer.go": 1,
                "special: opt/go/src/runtime/atomic": 1,
                "special: typekind.go": 1,
                "special: opt/go/src/runtime/typekind": 1,
                "special: stubs.go": 1,
                "special: opt/go/src/runtime/stubs": 1,
                "special: alg.go": 1,
                "special: opt/go/src/runtime/alg": 1,
                "special: opt/go/src/internal/bytealg/indexbyte": 1,
                "special: opt/go/src/internal/bytealg/index": 2,
                "special: opt/go/src/internal/bytealg/equal": 1,
                "special: opt/go/src/internal/bytealg/count": 2,
                "special: opt/go/src/internal/bytealg/compare": 1,
                "special: native.go": 1,
                "special: opt/go/src/runtime/internal/atomic/asm": 1,
                "special: x86.s": 1,
                "special: opt/go/src/internal/cpu/cpu": 3,
                "special: cpu.go": 1,
                "special: opt/go/src/sync/atomic/asm": 1,
                "special: opt/go/src/sync/atomic/value": 1,
                "special: dev/urandom": 1,
                "special: proc/self/auxv": 1,
                "special: Fq0-ds0u": 1,
                "special: 0-g-o-p": 1,
                "special: 9-6d": 1,
                "special: 2dV2:tN": 1,
                "special: L/dYO": 1,
                "special: x/1b": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "radare2: ----": 1,
                "radare2: -r-x .text": 1,
                "radare2: -r-- .rodata": 1,
                "radare2: .shstrtab": 1,
                "radare2: -r-- .typelink": 1,
                "radare2: -r-- .itablink": 1,
                "radare2: -r-- .gosymtab": 1,
                "radare2: -r-- .gopclntab": 1,
                "radare2: -rw- .noptrdata": 1,
                "radare2: -rw- .data": 1,
                "radare2: -rw- .bss": 1,
                "radare2: -rw- .noptrbss": 1,
                "radare2: -r-- .note.go.buildid": 1,
                "radare2: -r-- PHDR": 1,
                "radare2: -r-- NOTE": 1,
                "radare2: -r-x LOAD0": 1,
                "radare2: -r-- LOAD1": 1,
                "radare2: -rw- LOAD2": 1,
                "radare2: -rw- GNU_STACK": 1,
                "radare2: NONE": 1,
                "radare2: -rw- ehdr": 1,
                "radare2: type=program": 1,
                "radare2: .rodata)  utf8 zone\u0408` blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata)  utf8 \\b\\b60\u068d blocks=Basic Latin,Arabic": 940,
                "radare2: .rodata)  utf8 \\b\\b20\u068d blocks=Basic Latin,Arabic": 7,
                "radare2: .rodata)  utf8 \u01f5*R\\a blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u063b\\a\\b\\b blocks=Arabic,Basic Latin": 1,
                "radare2: .rodata)  utf8 \\\\e\\a\\b\\b:0\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 \\b\\b10\u068d blocks=Basic Latin,Arabic": 4,
                "radare2: .rodata)  utf8 \u0291w1\\a blocks=IPA Extensions,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0407\\a\\b\\b blocks=Cyrillic,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u04f3y\\a\\b\\b blocks=Cyrillic,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0140\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rodata)  utf8 9\u0477$\\a\\b\\b blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata)  utf8 \u0374\\a\\b\\b blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .rodata)  utf8 \\a\\b\\b90\u068d blocks=Basic Latin,Arabic": 9,
                "radare2: .rodata)  utf8 \\\\a\\b\\b90\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 =ap\\a\\b\\b90\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 3\u055d\\a\\b\\b blocks=Basic Latin,Armenian": 1,
                "radare2: .rodata)  utf8 A\\a\\b\\b90\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 G\\a\\b\\b90\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 \u0321\\a\\b\\b blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0264=\\a\\b\\b blocks=IPA Extensions,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u211f\\a\\b\\b blocks=Letterlike Symbols,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0611\\a\\b\\b blocks=Arabic,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u055cD\\a\\b\\b blocks=Armenian,Basic Latin": 1,
                "radare2: .rodata)  utf8 H\u02f0\\a\\b\\b blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .rodata)  utf8 \u03c5-\\a\\b\\b blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .rodata)  utf8 Z\u059d\\a\\b\\b blocks=Basic Latin,Hebrew": 1,
                "radare2: .rodata) utf16le \\r\u00a0\\r\u61ce blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs": 1,
                "radare2: .rodata)  utf8 \u05acX\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rodata)  utf8 =\u0792\\a\\b\\b blocks=Basic Latin,Thaana": 1,
                "radare2: .rodata)  utf8 6R\u0258\\a\\b\\b blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rodata)  utf8 @\u0106\\a\\b\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata)  utf8 \u03aa\u032f\\a\\b\\b blocks=Greek and Coptic,Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0718g\\a\\b\\b blocks=Syriac,Basic Latin": 1,
                "radare2: .rodata)  utf8 a\u012e\\a\\b\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata)  utf8 \u059c\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u05d8\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0702\\a\\b\\b blocks=Syriac,Basic Latin": 1,
                "radare2: .rodata)  utf8 F\u02487\\a\\b\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata)  utf8 t\u06aa!\\a\\b\\b blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 \u00fe\\a\\b\\b blocks=Latin-1 Supplement,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0516Xp\\a\\b\\b blocks=Cyrillic Supplement,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0212\\a\\b\\b blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u05da\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0141\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u011b`J\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rodata) utf16le p\\tp\\t\u3000 blocks=Basic Latin,CJK Symbols and Punctuation": 1,
                "radare2: .rodata) utf16le p\\t\u7400\\b\u3000 blocks=Basic Latin,CJK Unified Ideographs,CJK Symbols and Punctuation": 1,
                "radare2: .rodata)  utf8  !#$%&'()*+,-./05:;<=>?@CEFGLMNPSZ[\"\\n\\t]^`himst{|}~ + @ P [!=%=%s%v&&&;&=&^()) )()\\n*=+++=, ---=->///=/i00010s25: :]<<<===> >=>>CcCfCoCsDoIfLlLmLoLtLuMcMeMnNdNlNoOSPIPcPdPePfPiPoPsScSkSmSoTZYiZlZpZs[]\":\"\\n\\D\\E\\S\\W\\d\\s\\w\\n ]:]\\n^=doi)ifinmsnss us{}|=||}\\n\u00b5     G  M  P %v *( -  <  >  m=!==%25%2B%: &^='\"'): // ///125625: `<<====>>=>>>???AprAugDecEOFFebForFriHanJanJulJunKeyLN2LaoMarMayMonMroNaNNkoNovOctOp(PC=SatSepSunThuTueUTCVaiWed\\n})]:\\nabsadxaesavxcosdaydirdupendexpfmaforgc getgp infintletlogmapmaxminnannewnilnowobjpc=poppowptrsetsintantryu00var\u00b5s\u03bcs\ufffd !=  ->  <== as  at  fp= in  is  lr: of  on  pc= sp: sp=$1$2'\\'') = ) m=) {\\n+Inf+inf, n -Inf-inf20063125: p=>>>=ARCHAhomCallChamDashDateG.%sGOGCJSONJulyJuneLN10LisuMathMiaoModiNULLNewaThaiWith[]%s\\u00\\n\\tm=] n=acosasinatanavx2basebindbmi1bmi2boolcallcap cas1cas2cas3cas4cas5cas6caseceilchandeaddropelseenumermsevalexecfailfilefunchouridleinfoint8joinjsonkeyskindnamenew nonenullopenpushquitreadsbrkscvgsealseeksomesortsqrtsse2sse3statsynctestthistimetrimtruetypeuintvoidwaitwarnwith ...\\n H_T= H_a= H_g= MB,  W_a= and  cnt= for  h_a= h_g= h_t= max= not  ptr  siz= tab= top= u_a= u_g=%25$1%d:%d%s:%d+0000, ..., fp:/etc/1562578125<nil>AdlamAprilArrayBamumBatakBuhidColonErrorFinalGreekKhmerLOG2ELatinLimbuLocalMarchNushuOghamOriyaOsageRunicSQRT2STermTakriTamilWhile\\u202amd64applyargp=arrayatan2breakbytescatchchdirchmodchownclasscloseconstdebugerroreveryfalsefaultfcntlfloatfloorgcinggob: indexinputint16int32int64isNaNlinuxlstatmatchmonthpanicparseroundrune shiftsleepslicesplitsse41sse42ssse3stacksuperthrowtraceuint8valuewhilewrite (MB)\\n Value addr= base  code= ctxt: curg= goid  jobs= list= m->p= next= p->m= prev= span= varp=%s: %s(...)\\n*_+-./, not /%s/%s390625<-chanArabicAugustBrahmiCarianChakmaCommonCopticCreateFormatFridayGOROOTGothicHangulHatranHebrewHyphenKaithiKhojkiLOG10ELepchaLycianLydianMondayNUMBERNumberObjectRegExpRejangSCHED STRINGStringSundaySyriacTai_LeTangutTeluguThaana[%d]%s[]byte\\ufffd^\\s*%/acceptassertbound calleecallerchan<-charAtconcatcre blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic,Specials": 1,
                "radare2: .rodata)  utf8 atedeleteefenceempty errno escapeexportfilterfreezegetDayglobalhangupimportkilledlengthminutenumberobjectpopcntpublicrandomreadatreducereturnrune1 searchsecondselectsourcesplicestaticstringstructsubstrsweep switchtoJSONtoken(typeofuint16uint32uint64waitid    at  (scan  (scan) (trap  MB in  Value> dying= locks= m->g0= nmsys= s=nil\\n using %s %s; %s (%s)%s = {}, goid=, sys: 19531252006-019765625AvestanBOOLEANBengaliBooleanBrailleCOMMENTChanDirConvertCypriotDeseretElbasanGODEBUGGoArrayGranthaHanunooILLEGALIO waitInstAltInstNopJanuaryKEYWORDKannadaLeadingMandaicMarchenMultaniMyanmarOctoberOsmanyaRadicalSQRT1_2SharadaShavianSiddhamSignal SinhalaSoyomboSwapperTagalogTibetanTirhutaTuesdayUNKNOWN\\tdefer \\ttypes \\tvalue=_ENGINEabortedaccept4alt -> any -> booleanclosurecompilecomplexconsolecs     defaultextendsfinallyfloat32float64forEachfs     gctracegetDategetTimegetYeargs     indexOfinvalidisArraykey of messagenop -> number packagepanic: privater10    r11    r12    r13    r14    r15    r8     r9     rax    rbp    rbx    rcx    rdi    rdx    replacereverserflags rip    rsi    rsp    runningsetDatesetTimesetYearsignal stoppedsyscalltimeEndtoFixeduintptrunknownunshiftvalueOfwaitingwriteat etypes  goal\u0394= is not  mcount= minutes nalloc= newval= nfreed= packed= pointer stack=[ status %!Month(%s:%d:%d(?%s:%s), idle: 15:04:0548828125ArmenianBalineseBopomofoBugineseCherokeeCyrillicDecemberDuployanEthiopicExtenderFebruaryFunctionGODEBUG=GeorgianGoStringGujaratiGurmukhiHiraganaInfinityInstFailInstRuneJavaneseKatakanaKayah_LiLinear_ALinear_BMahajaniNovemberOl_ChikiParseIntPhags_PaSaturdayTagbanwaTai_ThamTai_VietThursdayTifinaghTrailingURIErrorUgaritic[:word:][signal \\n-----\\n\\n\\tstack=[argumentbad instcgocheckcontinuedebuggerfunctiongetHoursgetMonthgo1.12.5infinityinternalisFiniteisFrozenisSealedno anodeno erroropPseudoparseIntreadlinkrunnableruntime.scavengesetHourssetMonthsignal: strconv.toStringtrimLefttruncateunescapeunknown(writable (forced) -> node= as type  blocked= defersc= in use)\\n lockedg= lockedm= m->curg= ms cpu,   blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rodata)  utf8 not in [ of type  runtime= s.limit= s.state= sigcode= threads= u_a/u_g= wbuf1.n= wbuf2.n=(unknown)+infinity, newval=, oldval=-Infinity-infinity/dev/null244140625: inuse: : status=<unknown>ArgumentsBassa_VahBhaiksukiCallSliceCuneiformDiacriticEvalErrorG.%s = {}Hex_DigitInheritedInstMatchInstRune1InterfaceKhudawadiLINUX_2.6MAX_VALUEMIN_VALUEMalayalamMongolianNabataeanPalmyreneParseBoolParseUintSamaritanSeptemberSundaneseTypeErrorWednesday[:^word:][:alnum:][:alpha:][:ascii:][:blank:][:cntrl:][:digit:][:graph:][:lower:][:print:][:punct:][:space:][:upper:]argumentsatomicor8bad indirbus errorchan sendcomplex64continuedcopystackctxt != 0decodeURIempty urlencodeURIfuncargs(getUTCDayinterfaceinterruptlastIndexlocaltimemSpanDeadmSpanFreemap[%s]%smultilinenewosprocno errorsomitemptypanicwaitpclmulqdqprotectedprototyperecover: reflect: rwxrwxrwxsignal 32signal 33signal 34signal 35signal 36signal 37signal 38signal 39signal 40signal 41signal 42signal 43signal 44signal 45signal 46signal 47signal 48signal 49signal 50signal 51signal 52signal 53signal 54signal 55signal 56signal 57signal 58signal 59signal 60signal 61signal 62signal 63signal 64stringifysubstringtrimRightundefinedunhandled} stack=[ MB goal,  actual\u0394= flushGen  gfreecnt= pages at  returned  runqsize= runqueue= s.base()= spinning= stopwait= sweepgen  sweepgen= targetpc= throwing= until pc=%!Weekday((function(/dev/stdin12207031252006-01-022006T15:046103515625: parsing DeprecatedDevanagariGC forced\\nGOMAXPROCSGlagoliticIDENTIFIERKharoshthiManichaeanOld_ItalicOld_PermicOld_TurkicOther_MathParseFloatPhoenicianRangeErrorSaurashtra[:^alnum:][:^alpha:][:^ascii:][:^blank:][:^cntrl:][:^digit:][:^graph:][:^lower:][:^print:][:^punct:][:^space:][:^upper:][:xdigit:]^(?:0[xX])_reserved1atomicand8casgstatuscharCodeAtcomplex128enumerablegetMinutesgetSecondsgetUTCDategoroutine ignoreCaseimplementsinstanceofinvalidptrmSpanInUseowner diedparseFloatreaddirentrune <nil>runtime: gschedtracesemacquiresetMinutessetSecondssetUTCDateshort readterminatedtracefree(tracegc() blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rodata)  utf8 own caller pcwait for GC cyclewrong medium type  but memory size  because dotdotdot to non-Go memory %v (%v) %s %v (%v), locked to thread2006-01T15:04-07002006T15:04:05-0700298023223876953125: day out of rangeCaucasian_AlbanianRFS specific errorRegional_IndicatorUnterminated groupVariation_Selector[^\\x00-\\x{10FFFF}][object Undefined]bad lfnode addressbad manualFreeListbufio: buffer fullconnection refuseddecodeURIComponentencodeURIComponentfile name too longforEachP: not donegarbage collectiongetUTCMillisecondsidentifier removedin numeric literalindex out of rangeinput/output errorinvalid character multihop attemptedno child processesno locks availableoperation canceledracy use of timersreflect.Value.Callreflect.Value.Elemreflect.Value.Sendreflect.Value.Typereflect.Value.Uintreflect: Zero(nil)segmentation faultsetUTCMillisecondsstreams pipe errorsystem page size (toLocaleDateStringtoLocaleTimeStringtracebackancestorsunknown stash typeunknown time zone use of closed filevalue out of range called using nil * t.spanKey.npages= '%s' is not defined,  g->atomicstatus=, gp->atomicstatus=/usr/lib/locale/TZ/14901161193847656252006-01-02 15:04:052006-01-02T15:04:057450580596923828125Canadian_AboriginalFunction.toString()IDS_Binary_OperatorPattern_White_SpaceSIGTRAP: trace trapUnexpected token %v__vdso_gettimeofday_cgo_setenv missingafter array elementbad file descriptorbad kind in runfinqbad notifyList sizebad runtime\u00b7mstartbad value for fieldcgocall unavailabledevice not a streamdirectory not emptydisk quota exceededfile already closedfile already existsfile does not existgetOwnPropertyNamesillegal instructioninvalid URL escape m not found in allmmarking free objectmarkroot: bad indexmissing ']' in hostmspan.sweep: state=notesleep not on g0nwait > work.nprocspanic during mallocpanic during panic\\npanic holding lockspanicwrap: no ( in panicwrap: no ) in reflect.Value.Fieldreflect.Value.Floatreflect.Value.Indexreflect.Value.IsNilreflect.Value.Sliceruntime: insert t= runtime: pcdata is runtime: preempt g0semaRoot rotate blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata)  utf8 obj at *(runtime: predecessor t= span has no free objectsstack trace unavailable\\nstructure needs cleaningthis should never happen to unused region of span2006-01-02T15:04:05Z07:002006-01T15:04:05.000-07002910383045673370361328125GODEBUG: can not enable \"Label '%s' already exists_cgo_thread_start missingallgadd: bad status Gidlearena already initializedbad status in shrinkstackbootstrap type wrong id: chansend: spurious wakeupcheckId: %d should be %d\\ncheckdead: no m for timercheckdead: no p for timercould not locate asset %serror decoding []byte: %sinconsistent poll.fdMutexinvalid cross-device linkjson: Unexpected key typejson: unsupported value: missing stack in newstackmissing traceGCSweepStartnet/url: invalid userinfono buffer space availableno such device or addressno such file or directoryoperation now in progressreflect.Value.OverflowIntreflect.Value.SetMapIndexreflect: Bits of nil Typereleasep: invalid p stateremaining pointer buffersresource deadlock avoidedruntime:      t.spanKey= runtime: epollwait on fd runtime: misaligned func runtime: program exceeds runtime\u00b7lock: lock countslice bounds out of rangesocket type not supportedstartm: p has runnable gsstoplockedm: not runnableunexpected fault address  using unaddressable value using zero Value argument1455191522836685180664062572759576141834259033203125GODEBUG: can not disable \"Illegal continue statementIllegal hexadecimal numberRangeError: %f (%v) to intSIGSTOP: stop, unblockable^[a-zA-Z\\$][a-zA-Z0-9\\$]*$call from unknown functioncorrupted semaphore ticketentersyscall inconsistent forEachP: P did not run fnfreeSpan given cached spanfreedefer with d.fn != nilgob: local interface type initSpan: unaligned lengthinvalid argument to Int31ninvalid argument to Int63ninvalid port %q after hostinvalid request descriptorname not unique on networkno CSI structure availableno message of desired typenotewakeup - double wakeupout of memory (stackalloc)persistentalloc: size == 0reflect.Value.CanInterfacereflect.Value.MethodByNamereflect.Value.OverflowUintrequir blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata)  utf8 ed key not availableruntime: bad span s.state=startlockedm: locked to meunlock of unlocked rwmutex is not assignable to type  returned wrong type: have !#$%&()*+-./:<=>?@[]^_{|}~ 363797880709171295166015625G waiting list is corruptedIllegal newline after throwRangeError: %d (%v) to int8RangeError: %f (%v) to uintSIGILL: illegal instructionSIGXCPU: cpu limit exceeded[\\+\\-]?(?:[Ii]nf$|infinity)\"2006-01-02T15:04:05Z07:00\"address not a stack addressafter object key:value pairbad data: undefined type %scan't convert from %q to %qchannel number out of rangecommunication error on senddecode can't handle type %sgcstopm: not waiting for gcgrowslice: cap out of rangeinternal lockOSThread errorinvalid argument to Shuffleinvalid profile bucket typeinvalid type name length %dkey was rejected by servicelarge span treap rotateLeftmakechan: size out of rangemakeslice: cap out of rangemakeslice: len out of rangemspan.sweep: bad span statenot a XENIX named type fileos: process not initializedos: unsupported signal typeprogToPointerMask: overflowreflect.Value.OverflowFloatrestartg: unexpected statusrunlock of unlocked rwmutexruntime: checkdead: find g runtime: checkdead: nmidle=runtime: corrupted polldescruntime: netpollinit failedruntime: thread ID overflowruntime\u00b7unlock: lock countsignal received during forksigsend: inconsistent statestack size not a power of 2startm: negative nmspinningstopTheWorld: holding lockstime: invalid location namework.nwait was > work.nproc args stack map entries for 18189894035458564758300781252006-01-02T15:04:05.000-07009094947017729282379150390625FixedStack is not power-of-2Prepended_Concatenation_MarkRangeError: %d (%v) to int16RangeError: %d (%v) to int32RangeError: %d (%v) to uint8SIGHUP: terminal line hangupSIGWINCH: window size changeUnterminated character class[originating from goroutine can't happen: encode type %scan't preserve unlinked spancomparing uncomparable type destination address requiredfatal: morestack on gsignal\\nfile descriptor in bad statefindrunnable: netpoll with pgcstopm blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata)  utf8 : negative nmspinninggob: cannot encode nil valuegob: duplicate type receivedgob: unknown size of uintptrinvalid runtime symbol tableinvalid type passed to new()json: Unmarshal(non-pointer large span treap rotateRightmheap.freeSpanLocked - span missing stack in shrinkstackmspan.sweep: m is not lockedneed padding in bucket (key)newproc1: new g is not Gdeadnewproc1: newg missing stacknotewakeup - double wakeup (os: process already finishedos: process already releasedprotocol driver not attachedreflect.MakeSlice: len > capreflect: In of non-func typereflect: Key of non-map typeregion exceeds uintptr rangeruntime: bad lfnode address runtime: casgstatus: oldval=runtime: no module data for runtime: stat overflow: val strconv: \u03b5 > (den<<shift)/2unexpected end of JSON inputunsupported compression for  cannot be converted to type 45474735088646411895751953125LockOSThread nesting overflowMon, 02 Jan 2006 15:04:05 GMTMon, 02 Jan 2006 15:04:05 MSTRangeError: %d (%v) to uint16RangeError: %d (%v) to uint32RangeError: %f (%v) to uint64SIGPIPE: write to broken pipeSIGPWR: power failure restartTime.UnmarshalBinary: no dataaddspecial on invalid pointerbufio.Scanner: token too longcrypto/aes: invalid key size executing on Go runtime stackfunction () { [native code] }gc done but gcphase != _GCoffgfput: bad status (not Gdead)gob: encoder: message too biggob: unknown size of int/uintinvalid character class rangeinvalid length of trace eventio: read/write on closed pipemachine is not on the networkno XENIX semaphores availablenumerical result out of rangeoperation already in progresspadding contained in alphabetprotocol family not supportedre2: Invalid (%s) <lookahead>reflect.Value.OverflowComplexreflect: Elem of invalid typereflect: Out of non-func typeruntime: impossible type kindruntime: marking free object runtime: mmap: access denied\\nruntime: p.gcMarkWorkerMode= runtime: split stack overflowruntime: stat underflow: val runtime: sudog with non-nil cruntime: unknown pc in defer semacquire not on the G stackstring concatenation  blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rodata) utf32le \\a\\a\u0109\u0140\\a\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf32le \\a\\b\ud800\udf03\u8808\\a blocks=Basic Latin,Old Italic,CJK Unified Ideographs": 1,
                "radare2: .rodata) utf32le \\a\\a\ud800\udf03\ud850\udc00\\a blocks=Basic Latin,Old Italic,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le \\b\\a\ud800\udd01\u4404 blocks=Basic Latin,Aegean Numbers,CJK Unified Ideographs Extension A": 1,
                "radare2: .rodata) utf32le \\t\ud840\udc42\u0100\\b blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin Extended-A": 1,
                "radare2: .rodata) utf32le \\b\\t\\a\u0405 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata) utf32le \\t\ud800\udc05\udbc0\udc00\u0110\\n\\a blocks=Basic Latin,Linear B Syllabary,Supplementary Private Use Area-B,Latin Extended-A": 1,
                "radare2: .rodata) utf16le YI\u0800\u2800@ blocks=Basic Latin,Samaritan,Braille Patterns": 1,
                "radare2: .rodata) utf32le E\u00c8\ud81a\udcd32 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le E\u00bf\ud81a\udcd3) blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le C\u00a0\ud81a\udcd3A blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le :\u00da\ud84f\udd76R blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le Us\ud859\udcc8_ blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le B\u00d0\ud85e\udd69F blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le B\u00f4\ud81a\udcd3M blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 1\u00c5\ud853\udc7aW blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le ?p\ud868\udf02} blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf16le \\tIM\u014d\u0109 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le EG\u0147\u0105 blocks=Basic Latin,Latin Extended-A": 2,
                "radare2: .rodata) utf32le \\a\\t\ud840\udc00\ud800\udd02 blocks=Basic Latin,CJK Unified Ideographs Extension B,Aegean Numbers": 1,
                "radare2: .rodata) utf32le !\\a\\n\ud800\udc00 blocks=Basic Latin,Linear B Syllabary": 1,
                "radare2: .rodata)  utf8 \\f$dD\u0124 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\bH\u0848\\t@( \\b blocks=Basic Latin,Mandaic": 1,
                "radare2: .rodata) utf16le \\f,l\u012c\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf32le \\b\\f\ud800\udc00\ud802\udd8d blocks=Basic Latin,Linear B Syllabary,Meroitic Hieroglyphs": 1,
                "radare2: .rodata) utf32le \\b\\n\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le \\b\\n\ud840\udc00\ud800\udc42 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary": 1,
                "radare2: .rodata) utf32le \\t\\n\ud840\udc00\ud800\udc00 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary": 1,
                "radare2: .rodata) utf16le  $\u0100\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le %18:": 1,
                "radare2: .rodata) utf32le \\t\\t\ud840\udc00\ud800\udd00 blocks=Basic Latin,CJK Unified Ideographs Extension B,Aegean Numbers": 1,
                "radare2: .rodata) utf32le \\t\\n\ud840\udc00b\udbc0\udc00\ud800\udc11 blocks=Basic Latin,CJK Unified Ideographs Extension B,Supplementary Private Use Area-B,Linear B Syllabary": 1,
                "radare2: .rodata) utf16le UUUT": 1,
                "radare2: .rodata) utf16le ,,,,": 1,
                "radare2: .rodata)  utf8 \\v+ @": 1,
                "radare2: .rodata) utf16le dddD": 1,
                "radare2: .rodata) utf16le  @\u0100\\n blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le @\\b\u0200\u0220 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le #CA@": 1,
                "radare2: .rodata) utf16le \" D\u0302\u0502 blocks=Basic Latin,Combining Diacritical Marks,Cyrillic Supplement": 1,
                "radare2: .rodata) utf16le A\u00c1\u2000\u2080 blocks=Basic Latin,Latin-1 Supplement,General Punctuation,Superscripts and Subscripts": 1,
                "radare2: .rodata) utf16le \\n*( \u020a\u0206\\f blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\f\\n\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 2,
                "radare2: .rodata) utf16le &$\u0124\u0324\u0320\u0300\u0200\\f\\f blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\b\\b\u0168\u0168\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf32le \\f\\t\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf16le \\fED\u0144\\a\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le JJJB": 1,
                "radare2: .rodata) utf16le $d`!": 1,
                "radare2: .rodata) utf32le \\r\\f\ud800\udc00\ud840\udc22 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf16le  @\u0140\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le p`hjzx`": 1,
                "radare2: .rodata) utf16le \\n!\u0201\\t blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\r\\f\ud840\udc00\ud800\udc02 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary": 1,
                "radare2: .rodata) utf16le !A\u0420\u0400\u0401a blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata) utf16le \\nI\u0149\u0109 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \"!\\b$": 1,
                "radare2: .rodata) utf16le a` !\u0125@A blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le 222\"\"": 1,
                "radare2: .rodata) utf16le OK\u00cb\u01cb blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le `b\u0840\u1840\u5840\u5860B blocks=Basic Latin,Mandaic,Mongolian,CJK Unified Ideographs": 1,
                "radare2: .rodata) utf16le DL@\\b": 2,
                "radare2: .rodata) utf16le $\u00a4\u02a4\u0284\u02c4 blocks=Basic Latin,Latin-1 Supplement,IPA Extensions,Spacing Modifier Letters": 1,
                "radare2: .rodata) utf16le \\f\\b\u0148\u0140 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le $dD\u0144FB@\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\fD\\b\\t\"": 1,
                "radare2: .rodata) utf16le \\n*\u00aa\u04aa\u04ea\u0480\u0400\u0401 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rodata) utf16le \\t)\u00a9\u04a8 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rodata) utf16le \\b(\u0128,l blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le @$!\\fA": 1,
                "radare2: .rodata) utf16le \"#cC\u0243\u0242B blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\v\\t\u0103\u0102\u0100@` blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le 9y\u00f8\u00b8\u00bc\u01bc\u01be blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le BJ\"bc": 1,
                "radare2: .rodata) utf16le  ,LH": 1,
                "radare2: .rodata) utf16le    \"\u0422\u0402\u0406 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata) utf16le \\t)\u0100! blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le &.*\\n\u010a\u0103\u0101\u0141\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\f\\f\\f\\f": 1,
                "radare2: .rodata) utf16le @\u00c0\u01c0\\f\\f blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le F.\u0126\u0106A blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le !\u00a1\u02a1\u02a0\u0220\u0200\\b blocks=Basic Latin,Latin-1 Supplement,IPA Extensions,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\f,\u0121\u0120\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le L@\\b\\t\\f": 1,
                "radare2: .rodata) utf16le  !#\u0123\u0120\u0100\u0100\u0110\u0118\u0108\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\b @EA": 1,
                "radare2: .rodata) utf32le 8\u00c5\ud81a\udcd3d blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 8\u00c6\ud81a\udcd3e blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le Ck\ud81a\udcd3\u00c3 blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le CC\ud81a\udcd3\u01a1 blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le (a\ud81a\udcd33 blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le :*\ud84e\ude0f0 blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le U]\ud859\udcc8* blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le U`\ud858\udfeeO blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le U4\ud859\udcc8v blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u029c blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le \\ef\ud81a\udcd3\u00af blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le \\ea\ud81b\udf02\u01a7 blocks=Basic Latin,Miao,Latin Extended-B": 1,
                "radare2: .rodata) utf32le L\u00d9\ud847\uded5O blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le \\ey\ud81a\udcd3\u011d blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le I\u00d6\ud81a\udcd3W blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le `\u00ca\ud81a\udcd3: blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf16le \" \u0540\u0541 blocks=Basic Latin,Armenian": 1,
                "radare2: .rodata) utf16le @HL\\\u015c^_OOokcC blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\v\\tCc\u0103\u0143B@ blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\b\\b\\n\\v\\e": 1,
                "radare2: .rodata) utf16le TDPRB\u0100I\u01c0 blocks=Basic Latin,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\f\\f\\f\\f\\f\\f\\f\\f\\f\\f\\f\u0100\\f\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le &@ \\f\\b": 1,
                "radare2: .rodata) utf16le \\v\\v\\v\\v\\v\\v": 1,
                "radare2: .rodata) utf16le \\b( $\\a": 1,
                "radare2: .rodata) utf16le \\fH\\n\u00a0\u0220`\\t blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le Nnfvtp`": 1,
                "radare2: .rodata) utf16le DL \\f\u014c blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le AE@D\u0204 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\t\\b `": 1,
                "radare2: .rodata) utf16le @D@PBBBbAAAI\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le %\u00c5e\u0164\u0120\u0100$\u0124\u0144 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf16le Ff&\u0126\u0106 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\b( \"": 1,
                "radare2: .rodata) utf16le @\\a!\u0421\u0461\u0400\u0401A\u0420\\t blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata) utf16le @``@": 1,
                "radare2: .rodata) utf16le \\b(h\\a\u0107\u0103\u0143 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\a \u0102\\f\u0106 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\n\\b \\a\\t\\f$": 1,
                "radare2: .rodata) utf16le Aa\\t)!\\b\\a\\n\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le hh ```` \u0180   blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\b\\b( \u00a0 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le @A\\n `\\a": 1,
                "radare2: .rodata) utf16le DF\\b\\f(": 1,
                "radare2: .rodata) utf16le @A*\\vKk+/\u102a\u1028\u1068(\\b !# blocks=Basic Latin,Myanmar": 1,
                "radare2: .rodata) utf16le \\b\\f\\f\\r": 1,
                "radare2: .rodata) utf16le @`\\b\\t": 1,
                "radare2: .rodata) utf16le \\a\\f\u0104\u0304\u0300\u0204\u010c\u0108\\rE blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Latin Extended-B": 1,
                "radare2: .rodata) utf16le @LH\\b\u0140\u0100\u0101(A\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le ID$\\t": 1,
                "radare2: .rodata) utf16le \\nJ@\u0440\u0c40 blocks=Basic Latin,Cyrillic,Telugu": 1,
                "radare2: .rodata) utf16le \\aD\"I\u00c9\u00c8 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le B\u00c2\u01c2A@\u00c0 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\v\\n L": 1,
                "radare2: .rodata) utf16le @`\\n\\b( \\a": 1,
                "radare2: .rodata) utf16le \"*\u00aa\u01aa\u012a\u0122\u0120 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\b \"B\u0142@\u00c0*\u012a\u022a\u0228\u0220( blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\b \u2020\u1008( blocks=Basic Latin,General Punctuation,Myanmar": 1,
                "radare2: .rodata) utf16le !A@\u1040B blocks=Basic Latin,Myanmar": 1,
                "radare2: .rodata) utf16le \" $!\u1000\u0800\u2020\u2000\\t blocks=Basic Latin,Myanmar,Samaritan,General Punctuation": 1,
                "radare2: .rodata) utf16le #+\" `": 1,
                "radare2: .rodata) utf16le \\nA@\\b": 1,
                "radare2: .rodata) utf16le ED\u0140\u0101\u0100@AI blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le B `\\f": 1,
                "radare2: .rodata) utf16le  !A\u00c1@\u0440 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rodata) utf16le HI\u0149\u0349\\b\u1008 blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Myanmar": 1,
                "radare2: .rodata) utf16le @@\u0200\u0200\\b\\b   blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le  \u00a0!\u0201\\b@ blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le  \"C\u00c3B@ blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le \\a#\\b\\f\u0206\u0246\u0204\\t\u0209\u020cA blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\b\\b\u2000\u2008 blocks=Basic Latin,General Punctuation": 1,
                "radare2: .rodata) utf16le \\t\\t\u0208\u0400\u0500 blocks=Basic Latin,Latin Extended-B,Cyrillic,Cyrillic Supplement": 1,
                "radare2: .rodata) utf16le  `@$(": 1,
                "radare2: .rodata) utf16le @BCA": 1,
                "radare2: .rodata) utf16le \\a\\nHh\\t)!a \\f": 1,
                "radare2: .rodata) utf16le HDL\\t": 1,
                "radare2: .rodata) utf16le CGB\\n\u0208\\t\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\r%$ @\u0200\u0201A blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le *(\u0228\u0208\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 09\ud81a\udcd3\u00a6 blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le B\u00c3\ud85e\udd69\u0288 blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B,IPA Extensions": 1,
                "radare2: .rodata) utf32le R\u00d5\ud81a\uddc4* blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le jg\ud80c\udf300 blocks=Basic Latin,Egyptian Hieroglyphs": 1,
                "radare2: .rodata) utf32le jn\ud80c\udf30\u0142 blocks=Basic Latin,Egyptian Hieroglyphs,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\n*\"\u00a2\u04a2\u01a2 blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Latin Extended-B": 1,
                "radare2: .rodata) utf16le &\u00a6\u01a4\u03a0@ blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Greek and Coptic": 1,
                "radare2: .rodata) utf16le \\b\\n*\"b": 1,
                "radare2: .rodata) utf16le  !\u00a1\u04a1\u14a1 blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Unified Canadian Aboriginal Syllabics": 1,
                "radare2: .rodata) utf16le \"\\nH@": 1,
                "radare2: .rodata) utf16le \\n\\b( \"&#\u0123!\u0121\u0921\u0821\u0829@A\u0800\u0801\\t)\u0920\u0101\u0100 blocks=Basic Latin,Latin Extended-A,Devanagari,Samaritan": 1,
                "radare2: .rodata) utf16le NJ\\n\\b'&": 1,
                "radare2: .rodata) utf16le \\r\\t)A": 1,
                "radare2: .rodata) utf16le B\\r \"": 1,
                "radare2: .rodata) utf16le \\n\\b(H\\f": 1,
                "radare2: .rodata) utf16le & \".*(\\f": 1,
                "radare2: .rodata) utf16le  \u00a0\u00e0\u00e1\u00c0\u01c0\u01c1 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\bA\u0100\u0101\\t\\f( blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\v\\t \"bBa'%\\f\\r": 1,
                "radare2: .rodata) utf16le AQUEP": 1,
                "radare2: .rodata) utf16le %@$\u0106\u0146\u0346\u0100\u0101\u0103\\n(!a  blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf16le \\t\" \u0100\u0104\u0108 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le @A$(": 1,
                "radare2: .rodata) utf16le \\n\\bH@\u0240\u0640\u0440\u0400\u0401 blocks=Basic Latin,Latin Extended-B,Arabic,Cyrillic": 1,
                "radare2: .rodata) utf16le \\n\\v*\\b": 1,
                "radare2: .rodata) utf16le \\t\\a%,": 1,
                "radare2: .rodata) utf16le ! )\u00a1 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le D$d\u0464 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata) utf16le \\f@#!a \\t()\\vI\\b\\n\\r": 1,
                "radare2: .rodata) utf16le  \\f\\t\\a,(\"": 1,
                "radare2: .rodata) utf16le a`bh\\v#$\\n*\u0100\u0120 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\b( \\f": 1,
                "radare2: .rodata) utf16le DBH\\b": 1,
                "radare2: .rodata) utf16le  \u00c0\u0440\u0400\u0401 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rodata) utf16le Ad`\u0140J\u044a\u0142(\u0100\u0101\u0102 blocks=Basic Latin,Latin Extended-A,Cyrillic": 1,
                "radare2: .rodata) utf32le $\\f\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf16le #CGg\u0263 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rodata) utf16le A!a\u0261 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rodata) utf16le \\aBG\\b\\n": 1,
                "radare2: .rodata) utf16le @\\fH\u010c\u014c\u0100\u0101\\rAC!$\" blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le (\"!\\nBF": 1,
                "radare2: .rodata) utf16le KCIi\\r%e": 1,
                "radare2: .rodata) utf32le :\u00fc\ud84e\ude0f2 blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le \\ey\ud81a\udcd3\u00db blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le \\ey\ud81a\udcd3\u0461 blocks=Basic Latin,Bamum Supplement,Cyrillic": 1,
                "radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u00a7 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u00ce blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u00c3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u00d9 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 09\ud81a\udcd34 blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 09\ud81a\udcd3\u00cc blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le E\u00b6\ud81a\udcd3\u0119 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le E\u00b6\ud81a\udcd3\u01c3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u01aa blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le j\u00c9\ud80c\udf30A blocks=Basic Latin,Latin-1 Supplement,Egyptian Hieroglyphs": 1,
                "radare2: .rodata) utf32le j\u00d2\ud80c\udf30\u0117 blocks=Basic Latin,Latin-1 Supplement,Egyptian Hieroglyphs,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\r\\tEe\u0105\u0125% blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le @\\f,L\\b": 1,
                "radare2: .rodata) utf16le !@AC\u0104\u0845\u0843\u0841\\f\u00a1 blocks=Basic Latin,Latin Extended-A,Mandaic,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le '\\n\ud800\udc00\ud840\udc05 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf16le \\vK\\b\\t@\\nHIACG\u0247\u02c7\u0200\u0201E\u0244\u0245 blocks=Basic Latin,Latin Extended-B,Spacing Modifier Letters": 1,
                "radare2: .rodata) utf16le \"&! M\\f": 1,
                "radare2: .rodata) utf16le `\\b(": 1,
                "radare2: .rodata) utf16le \\tI!\u00a1a\u0102\u010a\u0142\u0101\u0100 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le )\\f\ud800\udc00\ud840\udc04 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf16le CJFD\u00c4\u04c4\u0cc4\u0ccc blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Kannada": 1,
                "radare2: .rodata) utf16le \\b $\\aGA": 1,
                "radare2: .rodata) utf16le  `\u0220!\u0469\u0460\u0462\u04e2 blocks=Basic Latin,Latin Extended-B,Cyrillic": 1,
                "radare2: .rodata) utf32le   \u2820\u2800 blocks=Basic Latin,Braille Patterns": 1,
                "radare2: .rodata) utf16le \"b\u0822\u0a20\u0222 blocks=Basic Latin,Samaritan,Gurmukhi,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\bHJ\u044aB `!\u2400\u0400\u00c0 blocks=Basic Latin,Cyrillic,Control Pictures,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le A\u00c1\u04c1\u0401\u0481\u0480\u0400\\t)iI blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rodata) utf16le \\b(\\nD": 1,
                "radare2: .rodata) utf16le !\" `@": 1,
                "radare2: .rodata) utf32le ?K\ud856\udca4\u00a4 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le ?N\ud856\udca4\u00c4 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le ?Q\ud855\udeeb\u00f6 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le 09\ud81a\udcd3; blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le BC\ud85e\udc4b= blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le BZ\ud85e\udc6c\u00cc blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le ! $A`\\t(\\r)\\f%": 1,
                "radare2: .rodata) utf16le @H\\nEID\\a#\u00a3 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le cC\\v\u0241\u0201\u0281\u00c1 blocks=Basic Latin,Latin Extended-B,IPA Extensions,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le ,\\f\u010c\u0104\u0184\u0180 blocks=Basic Latin,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\a'g\u0267\u0266\u1266\u3266 blocks=Basic Latin,IPA Extensions,Ethiopic,Enclosed CJK Letters and Months": 1,
                "radare2: .rodata) utf16le Aab\u0200\u0201 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le $\u00a4\u00a5\u00a6\u0102 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\bA@B\"\u0122 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le J*\u012a\\n blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le /on\u016e\u056e\u0168hHD blocks=Basic Latin,Latin Extended-A,Armenian": 1,
                "radare2: .rodata) utf16le C\\tIB\"": 1,
                "radare2: .rodata) utf16le `b\u0262@#! ,l\\b\\n blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rodata) utf32le @ \u0400\\bk blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata) utf16le (((((((": 1,
                "radare2: .rodata) utf16le           ((((((   \\b\\b\\b\\b\\b\\b": 1,
                "radare2: .rodata) utf16le  \\a!G@CA\\b(\\n\\vK\"\\fDBFN\u0142\u0146\u0942 blocks=Basic Latin,Latin Extended-A,Devanagari": 1,
                "radare2: .rodata) utf16le ,\u00ac\u00ec#`H$: blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le @h(": 1,
                "radare2: .rodata) utf16le DH\\t\\f$d\u00c4 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le \\aea\u1000\u1001\u1021\u1061\u0160 blocks=Basic Latin,Myanmar,Latin Extended-A": 1,
                "radare2: .rodata) utf16le B\u00c2\u00c0\u0202u blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\b\\f\u010c\u018c blocks=Basic Latin,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rodata) utf16le 555555555555555555": 2,
                "radare2: .rodata) utf16le .L\u00ccD\u0109\\v\u020b blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3X blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d6\ud81a\udcd3\u0126 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 3": 1,
                "radare2: .rodata) utf32le (\u00c4\ud81a\udcd3c blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le (\u00db\ud81a\udcd3\u01bf blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 3\u00d6\ud81a\udcd3\u0140 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le [\u00b2\ud81a\udcd3\u015b blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le \\a3\u00d2\ud81a\udcd3\u01ee blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\a3\u00d2\ud81a\udcd3\u01f0 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\ey\ud81a\udcd3\u057b blocks=Basic Latin,Bamum Supplement,Armenian": 1,
                "radare2: .rodata) utf32le \\ey\ud81a\udcd3\u07a0 blocks=Basic Latin,Bamum Supplement,Thaana": 1,
                "radare2: .rodata) utf32le 5+\ud81a\udcd3Y blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 5-\ud81a\udcd3v blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u00b2 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u00b9 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 5$\ud81a\udcd3\u014b blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 6+\ud81a\udcd3Y blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 6-\ud81a\udcd3x blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u00b4 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u00bb blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 6$\ud81a\udcd3\u014d blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 5S\ud81a\udcd3Y blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 5U\ud81a\udcd3v blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u00b7 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u00be blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 5F\ud81a\udcd3\u0118 blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 5L\ud81a\udcd3\u0155 blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 6S\ud81a\udcd3Y blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 6U\ud81a\udcd3x blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u00b9 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u00c0 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 6F\ud81a\udcd3\u011a blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 6L\ud81a\udcd3\u0157 blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le \\t3\u00d2\ud81a\udcd3\u01e8 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 5\u00a7\ud81a\udcd3\u01ad blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 5\u00ae\ud81a\udcd3\u01b7 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\f3\u00d2\ud81a\udcd3\u0288 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le 6\u00a7\ud81a\udcd3\u01ad blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 6\u00ae\ud81a\udcd3\u01b9 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\f3\u00d2\ud81a\udcd3\u028a blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le 6\u00e2\ud81a\udcd3\u026d blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le \\f3\u00d2\ud81a\udcd3\u02a3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le 7\u00f8\ud81a\udcd3\u02a3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le \\f3\u00d2\ud81a\udcd3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf16le \\b\"\\b#\\b\u8003\\b\u8001 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rodata) utf32le \"\"\"#": 1,
                "radare2: .rodata) utf32le \\a3\u00d2\ud81a\udcd3\u0170 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 2,
                "radare2: .rodata) utf32le \\v3\u00d2\ud81a\udcd3\u0199 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 2,
                "radare2: .rodata) utf32le \\r3\u00d2\ud81a\udcd3\u028d blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 2,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u0294 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 2,
                "radare2: .rodata) utf32le \\a3\u00d2\ud81a\udcd3\u01a1 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\v3\u00d2\ud81a\udcd3\u01ca blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\r3\u00d2\ud81a\udcd3\u02f8 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Spacing Modifier Letters": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u0304 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf32le ?": 1,
                "radare2: .rodata) utf32le \\v3\u00d2\ud81a\udcd3\u0221 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\n3\u00d2\ud81a\udcd3\u0443 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Cyrillic": 1,
                "radare2: .rodata) utf32le \\r3\u0455\ud835\udf15\u0492 blocks=Basic Latin,Cyrillic,Mathematical Alphanumeric Symbols": 1,
                "radare2: .rodata) utf32le \\a1\u07c0\ud855\udc79\u0276 blocks=Basic Latin,NKo,CJK Unified Ideographs Extension B,IPA Extensions": 1,
                "radare2: .rodata) utf32le \\n1\u07c0\ud855\udc79\u03ae blocks=Basic Latin,NKo,CJK Unified Ideographs Extension B,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u0500 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Cyrillic Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u0310 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u0396 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u0360 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf32le &H\ud81a\udcd3\u00ce blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le &3\ud81a\udcd3\u01a0 blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le &5\ud81a\udcd3\u01b2 blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le &,\ud81a\udcd3\u0228 blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le &'\ud81a\udcd3\u0253 blocks=Basic Latin,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le &#\ud81a\udcd3\u02a4 blocks=Basic Latin,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3m blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 2,
                "radare2: .rodata) utf32le 7&\ud81a\udcd3\u00db blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u013a blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 7-\ud81a\udcd3\u014b blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 7G\ud81a\udcd3\u019c blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 7I\ud81a\udcd3\u01c2 blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 7=\ud81a\udcd3\u023d blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 7=\ud81a\udcd3\u0239 blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 7Q\ud81a\udcd3\u028e blocks=Basic Latin,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le 7W\ud81a\udcd3\u02cf blocks=Basic Latin,Bamum Supplement,Spacing Modifier Letters": 1,
                "radare2: .rodata) utf32le 7^\ud81a\udcd3\u0310 blocks=Basic Latin,Bamum Supplement,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf32le 7d\ud81a\udcd3\u0351 blocks=Basic Latin,Bamum Supplement,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u03c4 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u03d0 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 76\ud81a\udcd3\u040c blocks=Basic Latin,Bamum Supplement,Cyrillic": 1,
                "radare2: .rodata) utf32le 7|\ud81a\udcd3y blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u014a blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 7\u00a6\ud81a\udcd3\u01b4 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 7\u00a8\ud81a\udcd3\u01da blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 7\u00b0\ud81a\udcd3\u02ae blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le 7\u00b6\ud81a\udcd3\u02ef blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Spacing Modifier Letters": 1,
                "radare2: .rodata) utf32le 7\u00bd\ud81a\udcd3\u0330 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf32le 7\u00c3\ud81a\udcd3\u0371 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u03ec blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u03f8 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u050e blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Cyrillic Supplement": 1,
                "radare2: .rodata) utf32le Yx\ud85e\udd69\u045c blocks=Basic Latin,CJK Unified Ideographs Extension B,Cyrillic": 1,
                "radare2: .rodata)  utf8 m\u06f6m\u06f6 blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata) utf16le \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c blocks=Basic Latin,CJK Unified Ideographs Extension A": 1,
                "radare2: .rodata) utf16le \"\"\"\"\"\"\"\"\u447f\u4400\u4400\u4400\u4400\u4400\u4400\u4400\u7f00 blocks=Basic Latin,CJK Unified Ideographs Extension A,CJK Unified Ideographs": 1,
                "radare2: (.rodata) ascii": 2,
                "radare2: .rodata)  utf8 m\u06f6m\u06ea blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 <pQ\u0318 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .rodata)  utf8 C\u0760d@ blocks=Basic Latin,Arabic Supplement": 1,
                "radare2: .rodata)  utf8 333333\u04ff blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata)  utf8 B.\u6fd4% blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rodata)  utf8 k[T(0": 1,
                "radare2: .noptrdata) utf32le 09!~az ~AZ": 1,
                "radare2: .noptrdata)  utf8 \\e6l\u062bM blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata) utf32le AZaz\\t\\t": 1,
                "radare2: .noptrdata) utf32le \\t\\r": 1,
                "radare2: .noptrdata) utf32le \\t\\n\\f\\r": 1,
                "radare2: .noptrdata) utf32le 09AZaz": 1,
                "radare2: .noptrdata) utf32le 09AFaf": 1,
                "radare2: .noptrdata) utf32le 09AZ__az!/:@[`{~09AZ__az": 1,
                "radare2: .noptrdata)  utf8 ?HUUUUU\u017f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .noptrdata) utf16le $\u00a2~\u00a3\u00a5 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata) utf16le )]4}\u0f3b blocks=Basic Latin,Tibetan": 1,
                "radare2: .noptrdata) utf16le  0@P`p": 1,
                "radare2: .noptrdata) utf16le \\a\\b\u8009\\n\u800c\u800c\\r blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .noptrdata) utf16le \\e %&\u8028*058@\u8048JPU\u8060jp blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .noptrdata) utf16le ([3{\u0f3a blocks=Basic Latin,Tibetan": 1,
                "radare2: .noptrdata)  utf8 x2+\u0176\u00caw blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 o$_jZkbkU\u051d blocks=Basic Latin,Cyrillic Supplement": 1,
                "radare2: .noptrdata)  utf8 NgmkC": 1,
                "radare2: .noptrdata)  utf8 R;\u05b3) blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 [j\u02fe9JLX blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .noptrdata)  utf8 \u0127~=d] blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata) utf16le \\a\\b\\t\\n\\v\\f\\r": 1,
                "radare2: .noptrdata) utf16le  !\"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`ABCDEFGHIJ\u212aLMNOPQR\u017fTUVWXYZ{|}~ blocks=Basic Latin,Letterlike Symbols,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 ld?\u06cc_? blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 _+?\u0518(? blocks=Basic Latin,Cyrillic Supplement": 1,
                "radare2: .noptrdata)  utf8 >A\u039a> blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 u_>\u07f0Y> blocks=Basic Latin,NKo": 1,
                "radare2: .noptrdata)  utf8 S>\"MN>": 1,
                "radare2: .noptrdata)  utf8 8>\u02aa2>>H-> blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 =\ubdb1=L blocks=Basic Latin,Hangul Syllables": 1,
                "radare2: .noptrdata)  utf8 hy={uh=\u01b9W= blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 M\\r<X\u0535; blocks=Basic Latin,Armenian": 1,
                "radare2: .noptrdata)  utf8 ~\uf820~\\r blocks=Basic Latin,Private Use Area": 1,
                "radare2: .noptrdata)  utf8 ~u2~": 1,
                "radare2: .noptrdata)  utf8 ~'\u07e5~ blocks=Basic Latin,NKo": 1,
                "radare2: .noptrdata)  utf8 /k\u0317/ blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 \u055f/`J blocks=Armenian,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 Y0\u02d1[0jr]0 blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .noptrdata) utf16le /:\\v;?": 1,
                "radare2: .noptrdata) utf16le }\u00a1$\u00a7\u00ab blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata) utf16le $+\\a<>": 1,
                "radare2: .noptrdata) utf16le  ~\u00a1\u0377\u037a blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 QSeA~\u00e4 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 v\u0308%L blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 *\u0140D5& blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 \u011dS.4 blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u056e='9-6d blocks=Armenian,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0184}$J blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u028c6\\v\u0518\u03c1 blocks=IPA Extensions,Basic Latin,Cyrillic Supplement,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 a\u05daz\\f blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 \\f%\u2f0bI<(A blocks=Basic Latin,Kangxi Radicals": 1,
                "radare2: .noptrdata)  utf8 \u010aS.4 blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 gwB\u8c3d blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .noptrdata)  utf8 \u0184 $J blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 ,}V\u06103\" blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 ~\u03fc!\\b blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 5<Nt7\u0282 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 ,xQeF": 1,
                "radare2: .noptrdata)  utf8 I)i\u024eD blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 {7\u04e5\\b(0 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 @\"\u0184  blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 \u04e5\\b70 blocks=Cyrillic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0221G\\n|| blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u056e6'9-\\nd blocks=Armenian,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0185}$J blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u02986\\v\u0526\u03c1 blocks=IPA Extensions,Basic Latin,Cyrillic Supplement,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 cc\u0184|| blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 kk\u05b1oo blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 \u0151P00` blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0303\\44h blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u062bS11b? blocks=Arabic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u01d5e##F^ blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 i''N\u0372 blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 \u06afc!!B0 blocks=Arabic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0723f\"\"D~**T blocks=Syriac,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u020bY77n blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u03efee\u028ezz blocks=Greek and Coptic,Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 B>>|\u0135 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 ,cc\u01a5|| blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 \\rkk\u05bdoo\u07b1 blocks=Basic Latin,Hebrew,Thaana": 1,
                "radare2: .noptrdata)  utf8 \u0151T00`P blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 gg\u03a9++V} blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 \u0249@}} blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0303O44h\\ blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u062bs11bS blocks=Arabic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u01d5R##Fe blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 4.\\e\\e6-nn\u0732ZZ blocks=Basic Latin,Syriac": 1,
                "radare2: .noptrdata)  utf8 \u06afu!!Bc blocks=Arabic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0341L\\f\\f blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 ==zGdd\u022c]] blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 \u07a7y^^ blocks=Thaana,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u020bC77nYmm\u06b7 blocks=Latin Extended-B,Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 \u0571dNN blocks=Armenian,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 ll\u0634VV blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 %ee\u02afzz\udbfa\udfaeG blocks=Basic Latin,IPA Extensions,Supplementary Private Use Area-B": 1,
                "radare2: .noptrdata)  utf8 \u0761|tt blocks=Arabic Supplement,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 ff\u032aHH blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 aa\u00a355j_WW blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 \"3ii\u04bb blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 \u0387IUU blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 hh\u0438AA blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 ,:c\u01a5c| blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 k\u05bdko\u07b1o\u0151T blocks=Basic Latin,Hebrew,Thaana,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 g\u03a9g+V}+ blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 v\u028fE\u0282 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 \u0533g\u0522_ blocks=Armenian,Basic Latin,Cyrillic Supplement": 1,
                "radare2: .noptrdata)  utf8 r\\e[7u\u00b7 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 #Fe#\u00dd^ blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 \\e6-\\en\u0732nZ blocks=Basic Latin,Syriac": 1,
                "radare2: .noptrdata)  utf8 R;vM;\u05b7a\u05b3}\u03b3)R{) blocks=Basic Latin,Hebrew,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 [j\u053ej\u02cdF\u02feg\u067e9rK9J blocks=Basic Latin,Armenian,Spacing Modifier Letters,Arabic": 1,
                "radare2: .noptrdata)  utf8 wv\u06afu blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 \u0113W\u0127U blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 ~=zG=d\u022cd] blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 s` `": 1,
                "radare2: .noptrdata)  utf8 \u04fdn\u04ecC blocks=Cyrillic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 7nY7m\u06b7m blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 l\u0634lV blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 e\u02afez blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 s\u01f4\u0197Q blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 q\u0135f\u032afH blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 a\u00a3a5j_5W blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 i\u04bbi\u0669p\u064e\\a blocks=Basic Latin,Cyrillic,Arabic": 1,
                "radare2: .noptrdata)  utf8 U(Px(\u07e5z\u07cc blocks=Basic Latin,NKo": 1,
                "radare2: .noptrdata)  utf8 Bh\u0438hA blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 \u05bdkk\u07b1oo blocks=Hebrew,Basic Latin,Thaana": 1,
                "radare2: .noptrdata)  utf8 \u03a9ggV}++ blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 6-\\e\\e\u0732nn blocks=Basic Latin,Syriac": 1,
                "radare2: .noptrdata)  utf8 [[\u053ejj blocks=Basic Latin,Armenian": 1,
                "radare2: .noptrdata)  utf8 ~~zG==\u022cdd blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 ss ``": 1,
                "radare2: .noptrdata)  utf8 C\ufb2c\u0126bb9 blocks=Basic Latin,Alphabetic Presentation Forms,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 nY77\u06b7mm blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 NNI\u0a69\u0634ll blocks=Basic Latin,Gurmukhi,Arabic": 1,
                "radare2: .noptrdata)  utf8 zzG\u9bae blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .noptrdata)  utf8 \\b\\bo\u057a blocks=Basic Latin,Armenian": 1,
                "radare2: .noptrdata)  utf8 KKa\u073d blocks=Basic Latin,Syriac": 1,
                "radare2: .noptrdata)  utf8 pp|B>>q\u0135 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 \u00a3aaj_55 blocks=Latin-1 Supplement,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 WWi\u0439 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 \\r\\re\u06bf blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 BB\u0438hh blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 TTm\u05bb blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 (_?x\\bY?\u0575S? blocks=Basic Latin,Armenian": 1,
                "radare2: .noptrdata)  utf8 A\\b?\u012e blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 >\\e\u023f> blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 z>\u0425w>@ blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 \\r>\u03e3\\v> blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 <O\u0791<+ blocks=Basic Latin,Thaana": 1,
                "radare2: .noptrdata)  utf8 t<\u0275e< blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 t+<\u0185 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 T/\u00aeW/ blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 /M\\f/7": 1,
                "radare2: .noptrdata)  utf8 /a\u0317/T0 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 /\ud51a/5 blocks=Basic Latin,Hangul Syllables": 1,
                "radare2: .noptrdata)  utf8 \u019e/p. blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u072f/'P blocks=Syriac,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0132/): blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 F0\u05e2H0 blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 V0\u03b4X0 blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 W\u03b6]y blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 H8o\ua590 blocks=Basic Latin,Vai": 1,
                "radare2: .noptrdata)  utf8 \u0308Po\\t\u033c blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u020c8e\u07b0 blocks=Latin Extended-B,Basic Latin,Thaana": 1,
                "radare2: .noptrdata)  utf8 \u03e7z^KD blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u024a;n! blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 Ls\u0534x blocks=Basic Latin,Armenian": 1,
                "radare2: .noptrdata)  utf8 a]4\ufc3d+ blocks=Basic Latin,Arabic Presentation Forms-A": 1,
                "radare2: .noptrdata)  utf8 d[\u05de\u05d2 blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8  Erj": 1,
                "radare2: .noptrdata)  utf8 b\\^9\u9e29NtH\u1b84\\ blocks=Basic Latin,CJK Unified Ideographs,Sundanese": 1,
                "radare2: .noptrdata)  utf8 \u06b79BA blocks=Arabic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u01f6@_' blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0204\u012f7& blocks=Latin Extended-B,Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 p@:\u0795 blocks=Basic Latin,Thaana": 1,
                "radare2: .noptrdata)  utf8 \u0480L+\" blocks=Cyrillic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 #wn\u0277B3 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 Z\u063d}\" blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 \\a'\\bz\u0328 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 |<\u066b^b blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 v-:D": 1,
                "radare2: .noptrdata)  utf8 \\aOr$t": 1,
                "radare2: .noptrdata)  utf8 \uf73c~=s\ua90f blocks=Private Use Area,Basic Latin,Kayah Li": 1,
                "radare2: .noptrdata)  utf8 \"yu\u0445 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 )\u013c?'k blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 =O2O)\u04c4 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 \u023e`*{ blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 >N\u0727V blocks=Basic Latin,Syriac": 1,
                "radare2: .noptrdata)  utf8 eGD\\vq": 1,
                "radare2: .noptrdata)  utf8 @LmS\u0417 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 rU\\a\u0591T blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 \\n\u0451|\u0615 blocks=Basic Latin,Cyrillic,Arabic": 1,
                "radare2: .noptrdata)  utf8 \\f\u01b0YJ blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 )Xe\u07a8.8 blocks=Basic Latin,Thaana": 1,
                "radare2: .noptrdata)  utf8 z\u0316ZSt; blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 Cn(\u068f blocks=Basic Latin,Arabic": 1,
                "radare2: arch     x86": 1,
                "radare2: baddr    0x400000": 1,
                "radare2: binsz    5232640": 1,
                "radare2: bintype  elf": 1,
                "radare2: bits     64": 1,
                "radare2: canary   false": 1,
                "radare2: class    ELF64": 1,
                "radare2: crypto   false": 1,
                "radare2: endian   little": 1,
                "radare2: havecode true": 1,
                "radare2: laddr    0x0": 1,
                "radare2: lang     go": 1,
                "radare2: linenum  false": 1,
                "radare2: lsyms    false": 1,
                "radare2: machine  AMD x86-64 architecture": 1,
                "radare2: maxopsz  16": 1,
                "radare2: minopsz  1": 1,
                "radare2: nx       true": 1,
                "radare2: os       linux": 1,
                "radare2: pcalign  0": 1,
                "radare2: pic      false": 1,
                "radare2: relocs   false": 1,
                "radare2: rpath    NONE": 1,
                "radare2: sanitiz  false": 1,
                "radare2: static   true": 1,
                "radare2: stripped true": 1,
                "radare2: subsys   linux": 1,
                "radare2: va       true": 1,
                "radare2: ELF64       0x464c457f": 1,
                "radare2: Type        0x0002": 1,
                "radare2: Machine     0x003e": 1,
                "radare2: Version     0x00000001": 1,
                "radare2: Entrypoint  0x004593c0": 1,
                "radare2: PhOff       0x00000040": 1,
                "radare2: ShOff       0x000001c8": 1,
                "radare2: 5232640": 1,
                "clamav: Cannot dlopen libclamunrar_iface: file not found - unrar support unavailable": 1,
                "clamav: cli_loadftm: File type signature for Microsoft Windows Shortcut File not loaded (required f-level: 1??)": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 7?? bytes": 1,
                "clamav: bytecode self test running": 1,
                "clamav: Bytecode 4?????????: executing in JIT mode": 1,
                "clamav: bytecode finished in 0 us": 1,
                "clamav: bytecode self test succeeded": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 1????? bytes": 1,
                "clamav: Bytecode: 94 bytecode prepared with JIT": 1,
                "clamav: Recognized ELF file": 1,
                "clamav: in cli_scanelf": 1,
                "clamav: ELF: ELF class 2 (64-bit)": 2,
                "clamav: ELF: File is little-endian - conversion not required": 1,
                "clamav: ELF: File type: Executable": 1,
                "clamav: ELF: Machine type: AMD x86-64": 1,
                "clamav: ELF: Number of program headers: 7": 2,
                "clamav: ELF: Program header table offset: 64": 1,
                "clamav: ELF: Segment #0": 1,
                "clamav: ELF: Segment type: 0x6": 1,
                "clamav: ELF: Segment offset: 0x40": 1,
                "clamav: ELF: Segment virtual address: 0x4?????": 3,
                "clamav: ELF: Segment real size: 0x1??": 1,
                "clamav: ELF: Segment virtual size: 0x1??": 1,
                "clamav: ELF: Segment #1": 1,
                "clamav: ELF: Segment type: 0x4": 1,
                "clamav: ELF: Segment offset: 0xf??": 1,
                "clamav: ELF: Segment real size: 0x64": 1,
                "clamav: ELF: Segment virtual size: 0x64": 1,
                "clamav: ELF: Segment #2": 1,
                "clamav: ELF: Segment type: 0x1": 3,
                "clamav: ELF: Segment offset: 0x0": 3,
                "clamav: ELF: Segment real size: 0x2?????": 2,
                "clamav: ELF: Segment virtual size: 0x2?????": 2,
                "clamav: ELF: Segment #3": 1,
                "clamav: ELF: Segment offset: 0x2?????": 1,
                "clamav: ELF: Segment virtual address: 0x6?????": 1,
                "clamav: ELF: Segment #4": 1,
                "clamav: ELF: Segment offset: 0x4?????": 1,
                "clamav: ELF: Segment virtual address: 0x8?????": 1,
                "clamav: ELF: Segment real size: 0x5????": 1,
                "clamav: ELF: Segment virtual size: 0x7????": 1,
                "clamav: ELF: Segment #5": 1,
                "clamav: ELF: Segment type: 0x6???????": 2,
                "clamav: ELF: Segment virtual address: 0x0": 2,
                "clamav: ELF: Segment real size: 0x0": 2,
                "clamav: ELF: Segment virtual size: 0x0": 2,
                "clamav: ELF: Segment #6": 1,
                "clamav: ELF: Entry point address: 0x00000000004?????": 1,
                "clamav: ELF: Entry point offset: 0x000000000005???? (3?????)": 1,
                "clamav: ELF: Number of sections: 13": 2,
                "clamav: ELF: Section header table offset: 4??": 1,
                "clamav: ELF: Section 0": 1,
                "clamav: ELF: Section offset: 0": 1,
                "clamav: ELF: Section size: 0": 2,
                "clamav: ELF: Section type: Null (no associated section)": 1,
                "clamav: ELF: Section 1": 1,
                "clamav: ELF: Section offset: 4???": 1,
                "clamav: ELF: Section size: 2??????": 1,
                "clamav: ELF: Section type: Program information": 8,
                "clamav: ELF: Section occupies memory": 11,
                "clamav: ELF: Section contains executable code": 1,
                "clamav: ELF: Section 2": 1,
                "clamav: ELF: Section offset: 2??????": 1,
                "clamav: ELF: Section size: 1??????": 2,
                "clamav: ELF: Section 3": 1,
                "clamav: ELF: Section offset: 3??????": 5,
                "clamav: ELF: Section size: 1??": 2,
                "clamav: ELF: Section type: String table": 1,
                "clamav: ELF: Section 4": 1,
                "clamav: ELF: Section size: 7???": 1,
                "clamav: ELF: Section 5": 1,
                "clamav: ELF: Section size: 1???": 1,
                "clamav: ELF: Section 6": 1,
                "clamav: ELF: Section 7": 1,
                "clamav: ELF: Section 8": 1,
                "clamav: ELF: Section offset: 4??????": 1,
                "clamav: ELF: Section size: 3?????": 1,
                "clamav: ELF: Section contains writable data": 4,
                "clamav: ELF: Section 9": 1,
                "clamav: ELF: Section offset: 5??????": 3,
                "clamav: ELF: Section size: 3????": 1,
                "clamav: ELF: Section 10": 1,
                "clamav: ELF: Section size: 1?????": 1,
                "clamav: ELF: Section type: Empty section (NOBITS)": 2,
                "clamav: ELF: Section 11": 1,
                "clamav: ELF: Section size: 1????": 1,
                "clamav: ELF: Section 12": 1,
                "clamav: ELF: Section offset: 3???": 1,
                "clamav: ELF: Section type: Note section": 1,
                "clamav: in cli_elfheader": 1,
                "clamav: Matched signature for file type ZIP-SFX at 7?????": 1,
                "clamav: ZIP/ZIP-SFX signature found at 7?????": 1,
                "clamav: in cli_unzip_single": 1,
                "clamav: cli_unzip: lh - ZMDNAME:0:$pH\ufffdQ\u0016H\ufffd\ufffd\u0002\u000f\ufffd\ufffd:8??:2?????????:8348ffff:0:0:1": 1,
                "clamav: CDBNAME:CL_TYPE_ZIP:2?????????:$pH\ufffdQ\u0016H\ufffd\ufffd\u0002\u000f\ufffd\ufffd:2?????????:8??:0:0:2?????????:(nil)": 1,
                "clamav: cli_unzip: lh - has data desc": 1,
                "clamav: cli_magic_scandesc: returning 0  at line 2???": 1,
                "clamav: malware family: OK": 1,
                "clamav: OK": 1,
                "clamav: Scanned files: 1": 1,
                "clamav: Infected files: 0": 1,
                "radare2: ----;radare2: -r-x .text": 1,
                "radare2: -r-x .text;radare2: -r-- .rodata": 1,
                "radare2: -r-- .rodata;radare2: .shstrtab": 1,
                "radare2: .shstrtab;radare2: -r-- .typelink": 1,
                "radare2: -r-- .typelink;radare2: -r-- .itablink": 1,
                "radare2: -r-- .itablink;radare2: -r-- .gosymtab": 1,
                "radare2: -r-- .gosymtab;radare2: -r-- .gopclntab": 1,
                "radare2: -r-- .gopclntab;radare2: -rw- .noptrdata": 1,
                "radare2: -rw- .noptrdata;radare2: -rw- .data": 1,
                "radare2: -rw- .data;radare2: -rw- .bss": 1,
                "radare2: -rw- .bss;radare2: -rw- .noptrbss": 1,
                "radare2: -rw- .noptrbss;radare2: -r-- .note.go.buildid": 1,
                "radare2: -r-- .note.go.buildid;radare2: -r-- PHDR": 1,
                "radare2: -r-- PHDR;radare2: -r-- NOTE": 1,
                "radare2: -r-- NOTE;radare2: -r-x LOAD0": 1,
                "radare2: -r-x LOAD0;radare2: -r-- LOAD1": 1,
                "radare2: -r-- LOAD1;radare2: -rw- LOAD2": 1,
                "radare2: -rw- LOAD2;radare2: -rw- GNU_STACK": 1,
                "radare2: -rw- GNU_STACK;radare2: NONE": 1,
                "radare2: NONE;radare2: -rw- ehdr": 1,
                "radare2: -rw- ehdr;radare2: type=program": 1,
                "radare2: type=program;radare2: .rodata)  utf8 zone\u0408` blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata)  utf8 zone\u0408` blocks=Basic Latin,Cyrillic;radare2: .rodata)  utf8 \\b\\b60\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 \\b\\b60\u068d blocks=Basic Latin,Arabic;radare2: .rodata)  utf8 \\b\\b20\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 \\b\\b20\u068d blocks=Basic Latin,Arabic;radare2: .rodata)  utf8 \u01f5*R\\a blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u01f5*R\\a blocks=Latin Extended-B,Basic Latin;radare2: .rodata)  utf8 \u063b\\a\\b\\b blocks=Arabic,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u063b\\a\\b\\b blocks=Arabic,Basic Latin;radare2: .rodata)  utf8 \\\\e\\a\\b\\b:0\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 \\\\e\\a\\b\\b:0\u068d blocks=Basic Latin,Arabic;radare2: .rodata)  utf8 \\b\\b10\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 \\b\\b10\u068d blocks=Basic Latin,Arabic;radare2: .rodata)  utf8 \u0291w1\\a blocks=IPA Extensions,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0291w1\\a blocks=IPA Extensions,Basic Latin;radare2: .rodata)  utf8 \u0407\\a\\b\\b blocks=Cyrillic,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0407\\a\\b\\b blocks=Cyrillic,Basic Latin;radare2: .rodata)  utf8 \u04f3y\\a\\b\\b blocks=Cyrillic,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u04f3y\\a\\b\\b blocks=Cyrillic,Basic Latin;radare2: .rodata)  utf8 \u0140\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0140\\a\\b\\b blocks=Latin Extended-A,Basic Latin;radare2: .rodata)  utf8 9\u0477$\\a\\b\\b blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata)  utf8 9\u0477$\\a\\b\\b blocks=Basic Latin,Cyrillic;radare2: .rodata)  utf8 \u0374\\a\\b\\b blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0374\\a\\b\\b blocks=Greek and Coptic,Basic Latin;radare2: .rodata)  utf8 \\a\\b\\b90\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 \\a\\b\\b90\u068d blocks=Basic Latin,Arabic;radare2: .rodata)  utf8 \\\\a\\b\\b90\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 \\\\a\\b\\b90\u068d blocks=Basic Latin,Arabic;radare2: .rodata)  utf8 =ap\\a\\b\\b90\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 =ap\\a\\b\\b90\u068d blocks=Basic Latin,Arabic;radare2: .rodata)  utf8 3\u055d\\a\\b\\b blocks=Basic Latin,Armenian": 1,
                "radare2: .rodata)  utf8 3\u055d\\a\\b\\b blocks=Basic Latin,Armenian;radare2: .rodata)  utf8 A\\a\\b\\b90\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 A\\a\\b\\b90\u068d blocks=Basic Latin,Arabic;radare2: .rodata)  utf8 G\\a\\b\\b90\u068d blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 G\\a\\b\\b90\u068d blocks=Basic Latin,Arabic;radare2: .rodata)  utf8 \u0321\\a\\b\\b blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0321\\a\\b\\b blocks=Combining Diacritical Marks,Basic Latin;radare2: .rodata)  utf8 \u0264=\\a\\b\\b blocks=IPA Extensions,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0264=\\a\\b\\b blocks=IPA Extensions,Basic Latin;radare2: .rodata)  utf8 \u211f\\a\\b\\b blocks=Letterlike Symbols,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u211f\\a\\b\\b blocks=Letterlike Symbols,Basic Latin;radare2: .rodata)  utf8 \u0611\\a\\b\\b blocks=Arabic,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0611\\a\\b\\b blocks=Arabic,Basic Latin;radare2: .rodata)  utf8 \u055cD\\a\\b\\b blocks=Armenian,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u055cD\\a\\b\\b blocks=Armenian,Basic Latin;radare2: .rodata)  utf8 H\u02f0\\a\\b\\b blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .rodata)  utf8 H\u02f0\\a\\b\\b blocks=Basic Latin,Spacing Modifier Letters;radare2: .rodata)  utf8 \u03c5-\\a\\b\\b blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u03c5-\\a\\b\\b blocks=Greek and Coptic,Basic Latin;radare2: .rodata)  utf8 Z\u059d\\a\\b\\b blocks=Basic Latin,Hebrew": 1,
                "radare2: .rodata)  utf8 Z\u059d\\a\\b\\b blocks=Basic Latin,Hebrew;radare2: .rodata) utf16le \\r\u00a0\\r\u61ce blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs": 1,
                "radare2: .rodata) utf16le \\r\u00a0\\r\u61ce blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs;radare2: .rodata)  utf8 \u05acX\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u05acX\\a\\b\\b blocks=Hebrew,Basic Latin;radare2: .rodata)  utf8 =\u0792\\a\\b\\b blocks=Basic Latin,Thaana": 1,
                "radare2: .rodata)  utf8 =\u0792\\a\\b\\b blocks=Basic Latin,Thaana;radare2: .rodata)  utf8 6R\u0258\\a\\b\\b blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rodata)  utf8 6R\u0258\\a\\b\\b blocks=Basic Latin,IPA Extensions;radare2: .rodata)  utf8 @\u0106\\a\\b\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata)  utf8 @\u0106\\a\\b\\b blocks=Basic Latin,Latin Extended-A;radare2: .rodata)  utf8 \u03aa\u032f\\a\\b\\b blocks=Greek and Coptic,Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u03aa\u032f\\a\\b\\b blocks=Greek and Coptic,Combining Diacritical Marks,Basic Latin;radare2: .rodata)  utf8 \u0718g\\a\\b\\b blocks=Syriac,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0718g\\a\\b\\b blocks=Syriac,Basic Latin;radare2: .rodata)  utf8 a\u012e\\a\\b\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata)  utf8 a\u012e\\a\\b\\b blocks=Basic Latin,Latin Extended-A;radare2: .rodata)  utf8 \u059c\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u059c\\a\\b\\b blocks=Hebrew,Basic Latin;radare2: .rodata)  utf8 \u05d8\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u05d8\\a\\b\\b blocks=Hebrew,Basic Latin;radare2: .rodata)  utf8 \u0702\\a\\b\\b blocks=Syriac,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0702\\a\\b\\b blocks=Syriac,Basic Latin;radare2: .rodata)  utf8 F\u02487\\a\\b\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata)  utf8 F\u02487\\a\\b\\b blocks=Basic Latin,Latin Extended-B;radare2: .rodata)  utf8 t\u06aa!\\a\\b\\b blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 t\u06aa!\\a\\b\\b blocks=Basic Latin,Arabic;radare2: .rodata)  utf8 \u00fe\\a\\b\\b blocks=Latin-1 Supplement,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u00fe\\a\\b\\b blocks=Latin-1 Supplement,Basic Latin;radare2: .rodata)  utf8 \u0516Xp\\a\\b\\b blocks=Cyrillic Supplement,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0516Xp\\a\\b\\b blocks=Cyrillic Supplement,Basic Latin;radare2: .rodata)  utf8 \u0212\\a\\b\\b blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0212\\a\\b\\b blocks=Latin Extended-B,Basic Latin;radare2: .rodata)  utf8 \u05da\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u05da\\a\\b\\b blocks=Hebrew,Basic Latin;radare2: .rodata)  utf8 \u0141\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u0141\\a\\b\\b blocks=Latin Extended-A,Basic Latin;radare2: .rodata)  utf8 \u011b`J\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rodata)  utf8 \u011b`J\\a\\b\\b blocks=Latin Extended-A,Basic Latin;radare2: .rodata) utf16le p\\tp\\t\u3000 blocks=Basic Latin,CJK Symbols and Punctuation": 1,
                "radare2: .rodata) utf16le p\\tp\\t\u3000 blocks=Basic Latin,CJK Symbols and Punctuation;radare2: .rodata) utf16le p\\t\u7400\\b\u3000 blocks=Basic Latin,CJK Unified Ideographs,CJK Symbols and Punctuation": 1,
                "radare2: .rodata) utf16le p\\t\u7400\\b\u3000 blocks=Basic Latin,CJK Unified Ideographs,CJK Symbols and Punctuation;radare2: .rodata)  utf8  !#$%&'()*+,-./05:;<=>?@CEFGLMNPSZ[\"\\n\\t]^`himst{|}~ + @ P [!=%=%s%v&&&;&=&^()) )()\\n*=+++=, ---=->///=/i00010s25: :]<<<===> >=>>CcCfCoCsDoIfLlLmLoLtLuMcMeMnNdNlNoOSPIPcPdPePfPiPoPsScSkSmSoTZYiZlZpZs[]\":\"\\n\\D\\E\\S\\W\\d\\s\\w\\n ]:]\\n^=doi)ifinmsnss us{}|=||}\\n\u00b5     G  M  P %v *( -  <  >  m=!==%25%2B%: &^='\"'): // ///125625: `<<====>>=>>>???AprAugDecEOFFebForFriHanJanJulJunKeyLN2LaoMarMayMonMroNaNNkoNovOctOp(PC=SatSepSunThuTueUTCVaiWed\\n})]:\\nabsadxaesavxcosdaydirdupendexpfmaforgc getgp infintletlogmapmaxminnannewnilnowobjpc=poppowptrsetsintantryu00var\u00b5s\u03bcs\ufffd !=  ->  <== as  at  fp= in  is  lr: of  on  pc= sp: sp=$1$2'\\'') = ) m=) {\\n+Inf+inf, n -Inf-inf20063125: p=>>>=ARCHAhomCallChamDashDateG.%sGOGCJSONJulyJuneLN10LisuMathMiaoModiNULLNewaThaiWith[]%s\\u00\\n\\tm=] n=acosasinatanavx2basebindbmi1bmi2boolcallcap cas1cas2cas3cas4cas5cas6caseceilchandeaddropelseenumermsevalexecfailfilefunchouridleinfoint8joinjsonkeyskindnamenew nonenullopenpushquitreadsbrkscvgsealseeksomesortsqrtsse2sse3statsynctestthistimetrimtruetypeuintvoidwaitwarnwith ...\\n H_T= H_a= H_g= MB,  W_a= and  cnt= for  h_a= h_g= h_t= max= not  ptr  siz= tab= top= u_a= u_g=%25$1%d:%d%s:%d+0000, ..., fp:/etc/1562578125<nil>AdlamAprilArrayBamumBatakBuhidColonErrorFinalGreekKhmerLOG2ELatinLimbuLocalMarchNushuOghamOriyaOsageRunicSQRT2STermTakriTamilWhile\\u202amd64applyargp=arrayatan2breakbytescatchchdirchmodchownclasscloseconstdebugerroreveryfalsefaultfcntlfloatfloorgcinggob: indexinputint16int32int64isNaNlinuxlstatmatchmonthpanicparseroundrune shiftsleepslicesplitsse41sse42ssse3stacksuperthrowtraceuint8valuewhilewrite (MB)\\n Value addr= base  code= ctxt: curg= goid  jobs= list= m->p= next= p->m= prev= span= varp=%s: %s(...)\\n*_+-./, not /%s/%s390625<-chanArabicAugustBrahmiCarianChakmaCommonCopticCreateFormatFridayGOROOTGothicHangulHatranHebrewHyphenKaithiKhojkiLOG10ELepchaLycianLydianMondayNUMBERNumberObjectRegExpRejangSCHED STRINGStringSundaySyriacTai_LeTangutTeluguThaana[%d]%s[]byte\\ufffd^\\s*%/acceptassertbound calleecallerchan<-charAtconcatcre blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic,Specials": 1,
                "radare2: .rodata)  utf8  !#$%&'()*+,-./05:;<=>?@CEFGLMNPSZ[\"\\n\\t]^`himst{|}~ + @ P [!=%=%s%v&&&;&=&^()) )()\\n*=+++=, ---=->///=/i00010s25: :]<<<===> >=>>CcCfCoCsDoIfLlLmLoLtLuMcMeMnNdNlNoOSPIPcPdPePfPiPoPsScSkSmSoTZYiZlZpZs[]\":\"\\n\\D\\E\\S\\W\\d\\s\\w\\n ]:]\\n^=doi)ifinmsnss us{}|=||}\\n\u00b5     G  M  P %v *( -  <  >  m=!==%25%2B%: &^='\"'): // ///125625: `<<====>>=>>>???AprAugDecEOFFebForFriHanJanJulJunKeyLN2LaoMarMayMonMroNaNNkoNovOctOp(PC=SatSepSunThuTueUTCVaiWed\\n})]:\\nabsadxaesavxcosdaydirdupendexpfmaforgc getgp infintletlogmapmaxminnannewnilnowobjpc=poppowptrsetsintantryu00var\u00b5s\u03bcs\ufffd !=  ->  <== as  at  fp= in  is  lr: of  on  pc= sp: sp=$1$2'\\'') = ) m=) {\\n+Inf+inf, n -Inf-inf20063125: p=>>>=ARCHAhomCallChamDashDateG.%sGOGCJSONJulyJuneLN10LisuMathMiaoModiNULLNewaThaiWith[]%s\\u00\\n\\tm=] n=acosasinatanavx2basebindbmi1bmi2boolcallcap cas1cas2cas3cas4cas5cas6caseceilchandeaddropelseenumermsevalexecfailfilefunchouridleinfoint8joinjsonkeyskindnamenew nonenullopenpushquitreadsbrkscvgsealseeksomesortsqrtsse2sse3statsynctestthistimetrimtruetypeuintvoidwaitwarnwith ...\\n H_T= H_a= H_g= MB,  W_a= and  cnt= for  h_a= h_g= h_t= max= not  ptr  siz= tab= top= u_a= u_g=%25$1%d:%d%s:%d+0000, ..., fp:/etc/1562578125<nil>AdlamAprilArrayBamumBatakBuhidColonErrorFinalGreekKhmerLOG2ELatinLimbuLocalMarchNushuOghamOriyaOsageRunicSQRT2STermTakriTamilWhile\\u202amd64applyargp=arrayatan2breakbytescatchchdirchmodchownclasscloseconstdebugerroreveryfalsefaultfcntlfloatfloorgcinggob: indexinputint16int32int64isNaNlinuxlstatmatchmonthpanicparseroundrune shiftsleepslicesplitsse41sse42ssse3stacksuperthrowtraceuint8valuewhilewrite (MB)\\n Value addr= base  code= ctxt: curg= goid  jobs= list= m->p= next= p->m= prev= span= varp=%s: %s(...)\\n*_+-./, not /%s/%s390625<-chanArabicAugustBrahmiCarianChakmaCommonCopticCreateFormatFridayGOROOTGothicHangulHatranHebrewHyphenKaithiKhojkiLOG10ELepchaLycianLydianMondayNUMBERNumberObjectRegExpRejangSCHED STRINGStringSundaySyriacTai_LeTangutTeluguThaana[%d]%s[]byte\\ufffd^\\s*%/acceptassertbound calleecallerchan<-charAtconcatcre blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic,Specials;radare2: .rodata)  utf8 atedeleteefenceempty errno escapeexportfilterfreezegetDayglobalhangupimportkilledlengthminutenumberobjectpopcntpublicrandomreadatreducereturnrune1 searchsecondselectsourcesplicestaticstringstructsubstrsweep switchtoJSONtoken(typeofuint16uint32uint64waitid    at  (scan  (scan) (trap  MB in  Value> dying= locks= m->g0= nmsys= s=nil\\n using %s %s; %s (%s)%s = {}, goid=, sys: 19531252006-019765625AvestanBOOLEANBengaliBooleanBrailleCOMMENTChanDirConvertCypriotDeseretElbasanGODEBUGGoArrayGranthaHanunooILLEGALIO waitInstAltInstNopJanuaryKEYWORDKannadaLeadingMandaicMarchenMultaniMyanmarOctoberOsmanyaRadicalSQRT1_2SharadaShavianSiddhamSignal SinhalaSoyomboSwapperTagalogTibetanTirhutaTuesdayUNKNOWN\\tdefer \\ttypes \\tvalue=_ENGINEabortedaccept4alt -> any -> booleanclosurecompilecomplexconsolecs     defaultextendsfinallyfloat32float64forEachfs     gctracegetDategetTimegetYeargs     indexOfinvalidisArraykey of messagenop -> number packagepanic: privater10    r11    r12    r13    r14    r15    r8     r9     rax    rbp    rbx    rcx    rdi    rdx    replacereverserflags rip    rsi    rsp    runningsetDatesetTimesetYearsignal stoppedsyscalltimeEndtoFixeduintptrunknownunshiftvalueOfwaitingwriteat etypes  goal\u0394= is not  mcount= minutes nalloc= newval= nfreed= packed= pointer stack=[ status %!Month(%s:%d:%d(?%s:%s), idle: 15:04:0548828125ArmenianBalineseBopomofoBugineseCherokeeCyrillicDecemberDuployanEthiopicExtenderFebruaryFunctionGODEBUG=GeorgianGoStringGujaratiGurmukhiHiraganaInfinityInstFailInstRuneJavaneseKatakanaKayah_LiLinear_ALinear_BMahajaniNovemberOl_ChikiParseIntPhags_PaSaturdayTagbanwaTai_ThamTai_VietThursdayTifinaghTrailingURIErrorUgaritic[:word:][signal \\n-----\\n\\n\\tstack=[argumentbad instcgocheckcontinuedebuggerfunctiongetHoursgetMonthgo1.12.5infinityinternalisFiniteisFrozenisSealedno anodeno erroropPseudoparseIntreadlinkrunnableruntime.scavengesetHourssetMonthsignal: strconv.toStringtrimLefttruncateunescapeunknown(writable (forced) -> node= as type  blocked= defersc= in use)\\n lockedg= lockedm= m->curg= ms cpu,   blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rodata)  utf8 atedeleteefenceempty errno escapeexportfilterfreezegetDayglobalhangupimportkilledlengthminutenumberobjectpopcntpublicrandomreadatreducereturnrune1 searchsecondselectsourcesplicestaticstringstructsubstrsweep switchtoJSONtoken(typeofuint16uint32uint64waitid    at  (scan  (scan) (trap  MB in  Value> dying= locks= m->g0= nmsys= s=nil\\n using %s %s; %s (%s)%s = {}, goid=, sys: 19531252006-019765625AvestanBOOLEANBengaliBooleanBrailleCOMMENTChanDirConvertCypriotDeseretElbasanGODEBUGGoArrayGranthaHanunooILLEGALIO waitInstAltInstNopJanuaryKEYWORDKannadaLeadingMandaicMarchenMultaniMyanmarOctoberOsmanyaRadicalSQRT1_2SharadaShavianSiddhamSignal SinhalaSoyomboSwapperTagalogTibetanTirhutaTuesdayUNKNOWN\\tdefer \\ttypes \\tvalue=_ENGINEabortedaccept4alt -> any -> booleanclosurecompilecomplexconsolecs     defaultextendsfinallyfloat32float64forEachfs     gctracegetDategetTimegetYeargs     indexOfinvalidisArraykey of messagenop -> number packagepanic: privater10    r11    r12    r13    r14    r15    r8     r9     rax    rbp    rbx    rcx    rdi    rdx    replacereverserflags rip    rsi    rsp    runningsetDatesetTimesetYearsignal stoppedsyscalltimeEndtoFixeduintptrunknownunshiftvalueOfwaitingwriteat etypes  goal\u0394= is not  mcount= minutes nalloc= newval= nfreed= packed= pointer stack=[ status %!Month(%s:%d:%d(?%s:%s), idle: 15:04:0548828125ArmenianBalineseBopomofoBugineseCherokeeCyrillicDecemberDuployanEthiopicExtenderFebruaryFunctionGODEBUG=GeorgianGoStringGujaratiGurmukhiHiraganaInfinityInstFailInstRuneJavaneseKatakanaKayah_LiLinear_ALinear_BMahajaniNovemberOl_ChikiParseIntPhags_PaSaturdayTagbanwaTai_ThamTai_VietThursdayTifinaghTrailingURIErrorUgaritic[:word:][signal \\n-----\\n\\n\\tstack=[argumentbad instcgocheckcontinuedebuggerfunctiongetHoursgetMonthgo1.12.5infinityinternalisFiniteisFrozenisSealedno anodeno erroropPseudoparseIntreadlinkrunnableruntime.scavengesetHourssetMonthsignal: strconv.toStringtrimLefttruncateunescapeunknown(writable (forced) -> node= as type  blocked= defersc= in use)\\n lockedg= lockedm= m->curg= ms cpu,   blocks=Basic Latin,Greek and Coptic;radare2: .rodata)  utf8 not in [ of type  runtime= s.limit= s.state= sigcode= threads= u_a/u_g= wbuf1.n= wbuf2.n=(unknown)+infinity, newval=, oldval=-Infinity-infinity/dev/null244140625: inuse: : status=<unknown>ArgumentsBassa_VahBhaiksukiCallSliceCuneiformDiacriticEvalErrorG.%s = {}Hex_DigitInheritedInstMatchInstRune1InterfaceKhudawadiLINUX_2.6MAX_VALUEMIN_VALUEMalayalamMongolianNabataeanPalmyreneParseBoolParseUintSamaritanSeptemberSundaneseTypeErrorWednesday[:^word:][:alnum:][:alpha:][:ascii:][:blank:][:cntrl:][:digit:][:graph:][:lower:][:print:][:punct:][:space:][:upper:]argumentsatomicor8bad indirbus errorchan sendcomplex64continuedcopystackctxt != 0decodeURIempty urlencodeURIfuncargs(getUTCDayinterfaceinterruptlastIndexlocaltimemSpanDeadmSpanFreemap[%s]%smultilinenewosprocno errorsomitemptypanicwaitpclmulqdqprotectedprototyperecover: reflect: rwxrwxrwxsignal 32signal 33signal 34signal 35signal 36signal 37signal 38signal 39signal 40signal 41signal 42signal 43signal 44signal 45signal 46signal 47signal 48signal 49signal 50signal 51signal 52signal 53signal 54signal 55signal 56signal 57signal 58signal 59signal 60signal 61signal 62signal 63signal 64stringifysubstringtrimRightundefinedunhandled} stack=[ MB goal,  actual\u0394= flushGen  gfreecnt= pages at  returned  runqsize= runqueue= s.base()= spinning= stopwait= sweepgen  sweepgen= targetpc= throwing= until pc=%!Weekday((function(/dev/stdin12207031252006-01-022006T15:046103515625: parsing DeprecatedDevanagariGC forced\\nGOMAXPROCSGlagoliticIDENTIFIERKharoshthiManichaeanOld_ItalicOld_PermicOld_TurkicOther_MathParseFloatPhoenicianRangeErrorSaurashtra[:^alnum:][:^alpha:][:^ascii:][:^blank:][:^cntrl:][:^digit:][:^graph:][:^lower:][:^print:][:^punct:][:^space:][:^upper:][:xdigit:]^(?:0[xX])_reserved1atomicand8casgstatuscharCodeAtcomplex128enumerablegetMinutesgetSecondsgetUTCDategoroutine ignoreCaseimplementsinstanceofinvalidptrmSpanInUseowner diedparseFloatreaddirentrune <nil>runtime: gschedtracesemacquiresetMinutessetSecondssetUTCDateshort readterminatedtracefree(tracegc() blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rodata)  utf8 not in [ of type  runtime= s.limit= s.state= sigcode= threads= u_a/u_g= wbuf1.n= wbuf2.n=(unknown)+infinity, newval=, oldval=-Infinity-infinity/dev/null244140625: inuse: : status=<unknown>ArgumentsBassa_VahBhaiksukiCallSliceCuneiformDiacriticEvalErrorG.%s = {}Hex_DigitInheritedInstMatchInstRune1InterfaceKhudawadiLINUX_2.6MAX_VALUEMIN_VALUEMalayalamMongolianNabataeanPalmyreneParseBoolParseUintSamaritanSeptemberSundaneseTypeErrorWednesday[:^word:][:alnum:][:alpha:][:ascii:][:blank:][:cntrl:][:digit:][:graph:][:lower:][:print:][:punct:][:space:][:upper:]argumentsatomicor8bad indirbus errorchan sendcomplex64continuedcopystackctxt != 0decodeURIempty urlencodeURIfuncargs(getUTCDayinterfaceinterruptlastIndexlocaltimemSpanDeadmSpanFreemap[%s]%smultilinenewosprocno errorsomitemptypanicwaitpclmulqdqprotectedprototyperecover: reflect: rwxrwxrwxsignal 32signal 33signal 34signal 35signal 36signal 37signal 38signal 39signal 40signal 41signal 42signal 43signal 44signal 45signal 46signal 47signal 48signal 49signal 50signal 51signal 52signal 53signal 54signal 55signal 56signal 57signal 58signal 59signal 60signal 61signal 62signal 63signal 64stringifysubstringtrimRightundefinedunhandled} stack=[ MB goal,  actual\u0394= flushGen  gfreecnt= pages at  returned  runqsize= runqueue= s.base()= spinning= stopwait= sweepgen  sweepgen= targetpc= throwing= until pc=%!Weekday((function(/dev/stdin12207031252006-01-022006T15:046103515625: parsing DeprecatedDevanagariGC forced\\nGOMAXPROCSGlagoliticIDENTIFIERKharoshthiManichaeanOld_ItalicOld_PermicOld_TurkicOther_MathParseFloatPhoenicianRangeErrorSaurashtra[:^alnum:][:^alpha:][:^ascii:][:^blank:][:^cntrl:][:^digit:][:^graph:][:^lower:][:^print:][:^punct:][:^space:][:^upper:][:xdigit:]^(?:0[xX])_reserved1atomicand8casgstatuscharCodeAtcomplex128enumerablegetMinutesgetSecondsgetUTCDategoroutine ignoreCaseimplementsinstanceofinvalidptrmSpanInUseowner diedparseFloatreaddirentrune <nil>runtime: gschedtracesemacquiresetMinutessetSecondssetUTCDateshort readterminatedtracefree(tracegc() blocks=Basic Latin,Greek and Coptic;radare2: .rodata)  utf8 own caller pcwait for GC cyclewrong medium type  but memory size  because dotdotdot to non-Go memory %v (%v) %s %v (%v), locked to thread2006-01T15:04-07002006T15:04:05-0700298023223876953125: day out of rangeCaucasian_AlbanianRFS specific errorRegional_IndicatorUnterminated groupVariation_Selector[^\\x00-\\x{10FFFF}][object Undefined]bad lfnode addressbad manualFreeListbufio: buffer fullconnection refuseddecodeURIComponentencodeURIComponentfile name too longforEachP: not donegarbage collectiongetUTCMillisecondsidentifier removedin numeric literalindex out of rangeinput/output errorinvalid character multihop attemptedno child processesno locks availableoperation canceledracy use of timersreflect.Value.Callreflect.Value.Elemreflect.Value.Sendreflect.Value.Typereflect.Value.Uintreflect: Zero(nil)segmentation faultsetUTCMillisecondsstreams pipe errorsystem page size (toLocaleDateStringtoLocaleTimeStringtracebackancestorsunknown stash typeunknown time zone use of closed filevalue out of range called using nil * t.spanKey.npages= '%s' is not defined,  g->atomicstatus=, gp->atomicstatus=/usr/lib/locale/TZ/14901161193847656252006-01-02 15:04:052006-01-02T15:04:057450580596923828125Canadian_AboriginalFunction.toString()IDS_Binary_OperatorPattern_White_SpaceSIGTRAP: trace trapUnexpected token %v__vdso_gettimeofday_cgo_setenv missingafter array elementbad file descriptorbad kind in runfinqbad notifyList sizebad runtime\u00b7mstartbad value for fieldcgocall unavailabledevice not a streamdirectory not emptydisk quota exceededfile already closedfile already existsfile does not existgetOwnPropertyNamesillegal instructioninvalid URL escape m not found in allmmarking free objectmarkroot: bad indexmissing ']' in hostmspan.sweep: state=notesleep not on g0nwait > work.nprocspanic during mallocpanic during panic\\npanic holding lockspanicwrap: no ( in panicwrap: no ) in reflect.Value.Fieldreflect.Value.Floatreflect.Value.Indexreflect.Value.IsNilreflect.Value.Sliceruntime: insert t= runtime: pcdata is runtime: preempt g0semaRoot rotate blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata)  utf8 own caller pcwait for GC cyclewrong medium type  but memory size  because dotdotdot to non-Go memory %v (%v) %s %v (%v), locked to thread2006-01T15:04-07002006T15:04:05-0700298023223876953125: day out of rangeCaucasian_AlbanianRFS specific errorRegional_IndicatorUnterminated groupVariation_Selector[^\\x00-\\x{10FFFF}][object Undefined]bad lfnode addressbad manualFreeListbufio: buffer fullconnection refuseddecodeURIComponentencodeURIComponentfile name too longforEachP: not donegarbage collectiongetUTCMillisecondsidentifier removedin numeric literalindex out of rangeinput/output errorinvalid character multihop attemptedno child processesno locks availableoperation canceledracy use of timersreflect.Value.Callreflect.Value.Elemreflect.Value.Sendreflect.Value.Typereflect.Value.Uintreflect: Zero(nil)segmentation faultsetUTCMillisecondsstreams pipe errorsystem page size (toLocaleDateStringtoLocaleTimeStringtracebackancestorsunknown stash typeunknown time zone use of closed filevalue out of range called using nil * t.spanKey.npages= '%s' is not defined,  g->atomicstatus=, gp->atomicstatus=/usr/lib/locale/TZ/14901161193847656252006-01-02 15:04:052006-01-02T15:04:057450580596923828125Canadian_AboriginalFunction.toString()IDS_Binary_OperatorPattern_White_SpaceSIGTRAP: trace trapUnexpected token %v__vdso_gettimeofday_cgo_setenv missingafter array elementbad file descriptorbad kind in runfinqbad notifyList sizebad runtime\u00b7mstartbad value for fieldcgocall unavailabledevice not a streamdirectory not emptydisk quota exceededfile already closedfile already existsfile does not existgetOwnPropertyNamesillegal instructioninvalid URL escape m not found in allmmarking free objectmarkroot: bad indexmissing ']' in hostmspan.sweep: state=notesleep not on g0nwait > work.nprocspanic during mallocpanic during panic\\npanic holding lockspanicwrap: no ( in panicwrap: no ) in reflect.Value.Fieldreflect.Value.Floatreflect.Value.Indexreflect.Value.IsNilreflect.Value.Sliceruntime: insert t= runtime: pcdata is runtime: preempt g0semaRoot rotate blocks=Basic Latin,Latin-1 Supplement;radare2: .rodata)  utf8 obj at *(runtime: predecessor t= span has no free objectsstack trace unavailable\\nstructure needs cleaningthis should never happen to unused region of span2006-01-02T15:04:05Z07:002006-01T15:04:05.000-07002910383045673370361328125GODEBUG: can not enable \"Label '%s' already exists_cgo_thread_start missingallgadd: bad status Gidlearena already initializedbad status in shrinkstackbootstrap type wrong id: chansend: spurious wakeupcheckId: %d should be %d\\ncheckdead: no m for timercheckdead: no p for timercould not locate asset %serror decoding []byte: %sinconsistent poll.fdMutexinvalid cross-device linkjson: Unexpected key typejson: unsupported value: missing stack in newstackmissing traceGCSweepStartnet/url: invalid userinfono buffer space availableno such device or addressno such file or directoryoperation now in progressreflect.Value.OverflowIntreflect.Value.SetMapIndexreflect: Bits of nil Typereleasep: invalid p stateremaining pointer buffersresource deadlock avoidedruntime:      t.spanKey= runtime: epollwait on fd runtime: misaligned func runtime: program exceeds runtime\u00b7lock: lock countslice bounds out of rangesocket type not supportedstartm: p has runnable gsstoplockedm: not runnableunexpected fault address  using unaddressable value using zero Value argument1455191522836685180664062572759576141834259033203125GODEBUG: can not disable \"Illegal continue statementIllegal hexadecimal numberRangeError: %f (%v) to intSIGSTOP: stop, unblockable^[a-zA-Z\\$][a-zA-Z0-9\\$]*$call from unknown functioncorrupted semaphore ticketentersyscall inconsistent forEachP: P did not run fnfreeSpan given cached spanfreedefer with d.fn != nilgob: local interface type initSpan: unaligned lengthinvalid argument to Int31ninvalid argument to Int63ninvalid port %q after hostinvalid request descriptorname not unique on networkno CSI structure availableno message of desired typenotewakeup - double wakeupout of memory (stackalloc)persistentalloc: size == 0reflect.Value.CanInterfacereflect.Value.MethodByNamereflect.Value.OverflowUintrequir blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata)  utf8 obj at *(runtime: predecessor t= span has no free objectsstack trace unavailable\\nstructure needs cleaningthis should never happen to unused region of span2006-01-02T15:04:05Z07:002006-01T15:04:05.000-07002910383045673370361328125GODEBUG: can not enable \"Label '%s' already exists_cgo_thread_start missingallgadd: bad status Gidlearena already initializedbad status in shrinkstackbootstrap type wrong id: chansend: spurious wakeupcheckId: %d should be %d\\ncheckdead: no m for timercheckdead: no p for timercould not locate asset %serror decoding []byte: %sinconsistent poll.fdMutexinvalid cross-device linkjson: Unexpected key typejson: unsupported value: missing stack in newstackmissing traceGCSweepStartnet/url: invalid userinfono buffer space availableno such device or addressno such file or directoryoperation now in progressreflect.Value.OverflowIntreflect.Value.SetMapIndexreflect: Bits of nil Typereleasep: invalid p stateremaining pointer buffersresource deadlock avoidedruntime:      t.spanKey= runtime: epollwait on fd runtime: misaligned func runtime: program exceeds runtime\u00b7lock: lock countslice bounds out of rangesocket type not supportedstartm: p has runnable gsstoplockedm: not runnableunexpected fault address  using unaddressable value using zero Value argument1455191522836685180664062572759576141834259033203125GODEBUG: can not disable \"Illegal continue statementIllegal hexadecimal numberRangeError: %f (%v) to intSIGSTOP: stop, unblockable^[a-zA-Z\\$][a-zA-Z0-9\\$]*$call from unknown functioncorrupted semaphore ticketentersyscall inconsistent forEachP: P did not run fnfreeSpan given cached spanfreedefer with d.fn != nilgob: local interface type initSpan: unaligned lengthinvalid argument to Int31ninvalid argument to Int63ninvalid port %q after hostinvalid request descriptorname not unique on networkno CSI structure availableno message of desired typenotewakeup - double wakeupout of memory (stackalloc)persistentalloc: size == 0reflect.Value.CanInterfacereflect.Value.MethodByNamereflect.Value.OverflowUintrequir blocks=Basic Latin,Latin-1 Supplement;radare2: .rodata)  utf8 ed key not availableruntime: bad span s.state=startlockedm: locked to meunlock of unlocked rwmutex is not assignable to type  returned wrong type: have !#$%&()*+-./:<=>?@[]^_{|}~ 363797880709171295166015625G waiting list is corruptedIllegal newline after throwRangeError: %d (%v) to int8RangeError: %f (%v) to uintSIGILL: illegal instructionSIGXCPU: cpu limit exceeded[\\+\\-]?(?:[Ii]nf$|infinity)\"2006-01-02T15:04:05Z07:00\"address not a stack addressafter object key:value pairbad data: undefined type %scan't convert from %q to %qchannel number out of rangecommunication error on senddecode can't handle type %sgcstopm: not waiting for gcgrowslice: cap out of rangeinternal lockOSThread errorinvalid argument to Shuffleinvalid profile bucket typeinvalid type name length %dkey was rejected by servicelarge span treap rotateLeftmakechan: size out of rangemakeslice: cap out of rangemakeslice: len out of rangemspan.sweep: bad span statenot a XENIX named type fileos: process not initializedos: unsupported signal typeprogToPointerMask: overflowreflect.Value.OverflowFloatrestartg: unexpected statusrunlock of unlocked rwmutexruntime: checkdead: find g runtime: checkdead: nmidle=runtime: corrupted polldescruntime: netpollinit failedruntime: thread ID overflowruntime\u00b7unlock: lock countsignal received during forksigsend: inconsistent statestack size not a power of 2startm: negative nmspinningstopTheWorld: holding lockstime: invalid location namework.nwait was > work.nproc args stack map entries for 18189894035458564758300781252006-01-02T15:04:05.000-07009094947017729282379150390625FixedStack is not power-of-2Prepended_Concatenation_MarkRangeError: %d (%v) to int16RangeError: %d (%v) to int32RangeError: %d (%v) to uint8SIGHUP: terminal line hangupSIGWINCH: window size changeUnterminated character class[originating from goroutine can't happen: encode type %scan't preserve unlinked spancomparing uncomparable type destination address requiredfatal: morestack on gsignal\\nfile descriptor in bad statefindrunnable: netpoll with pgcstopm blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata)  utf8 ed key not availableruntime: bad span s.state=startlockedm: locked to meunlock of unlocked rwmutex is not assignable to type  returned wrong type: have !#$%&()*+-./:<=>?@[]^_{|}~ 363797880709171295166015625G waiting list is corruptedIllegal newline after throwRangeError: %d (%v) to int8RangeError: %f (%v) to uintSIGILL: illegal instructionSIGXCPU: cpu limit exceeded[\\+\\-]?(?:[Ii]nf$|infinity)\"2006-01-02T15:04:05Z07:00\"address not a stack addressafter object key:value pairbad data: undefined type %scan't convert from %q to %qchannel number out of rangecommunication error on senddecode can't handle type %sgcstopm: not waiting for gcgrowslice: cap out of rangeinternal lockOSThread errorinvalid argument to Shuffleinvalid profile bucket typeinvalid type name length %dkey was rejected by servicelarge span treap rotateLeftmakechan: size out of rangemakeslice: cap out of rangemakeslice: len out of rangemspan.sweep: bad span statenot a XENIX named type fileos: process not initializedos: unsupported signal typeprogToPointerMask: overflowreflect.Value.OverflowFloatrestartg: unexpected statusrunlock of unlocked rwmutexruntime: checkdead: find g runtime: checkdead: nmidle=runtime: corrupted polldescruntime: netpollinit failedruntime: thread ID overflowruntime\u00b7unlock: lock countsignal received during forksigsend: inconsistent statestack size not a power of 2startm: negative nmspinningstopTheWorld: holding lockstime: invalid location namework.nwait was > work.nproc args stack map entries for 18189894035458564758300781252006-01-02T15:04:05.000-07009094947017729282379150390625FixedStack is not power-of-2Prepended_Concatenation_MarkRangeError: %d (%v) to int16RangeError: %d (%v) to int32RangeError: %d (%v) to uint8SIGHUP: terminal line hangupSIGWINCH: window size changeUnterminated character class[originating from goroutine can't happen: encode type %scan't preserve unlinked spancomparing uncomparable type destination address requiredfatal: morestack on gsignal\\nfile descriptor in bad statefindrunnable: netpoll with pgcstopm blocks=Basic Latin,Latin-1 Supplement;radare2: .rodata)  utf8 : negative nmspinninggob: cannot encode nil valuegob: duplicate type receivedgob: unknown size of uintptrinvalid runtime symbol tableinvalid type passed to new()json: Unmarshal(non-pointer large span treap rotateRightmheap.freeSpanLocked - span missing stack in shrinkstackmspan.sweep: m is not lockedneed padding in bucket (key)newproc1: new g is not Gdeadnewproc1: newg missing stacknotewakeup - double wakeup (os: process already finishedos: process already releasedprotocol driver not attachedreflect.MakeSlice: len > capreflect: In of non-func typereflect: Key of non-map typeregion exceeds uintptr rangeruntime: bad lfnode address runtime: casgstatus: oldval=runtime: no module data for runtime: stat overflow: val strconv: \u03b5 > (den<<shift)/2unexpected end of JSON inputunsupported compression for  cannot be converted to type 45474735088646411895751953125LockOSThread nesting overflowMon, 02 Jan 2006 15:04:05 GMTMon, 02 Jan 2006 15:04:05 MSTRangeError: %d (%v) to uint16RangeError: %d (%v) to uint32RangeError: %f (%v) to uint64SIGPIPE: write to broken pipeSIGPWR: power failure restartTime.UnmarshalBinary: no dataaddspecial on invalid pointerbufio.Scanner: token too longcrypto/aes: invalid key size executing on Go runtime stackfunction () { [native code] }gc done but gcphase != _GCoffgfput: bad status (not Gdead)gob: encoder: message too biggob: unknown size of int/uintinvalid character class rangeinvalid length of trace eventio: read/write on closed pipemachine is not on the networkno XENIX semaphores availablenumerical result out of rangeoperation already in progresspadding contained in alphabetprotocol family not supportedre2: Invalid (%s) <lookahead>reflect.Value.OverflowComplexreflect: Elem of invalid typereflect: Out of non-func typeruntime: impossible type kindruntime: marking free object runtime: mmap: access denied\\nruntime: p.gcMarkWorkerMode= runtime: split stack overflowruntime: stat underflow: val runtime: sudog with non-nil cruntime: unknown pc in defer semacquire not on the G stackstring concatenation  blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rodata)  utf8 : negative nmspinninggob: cannot encode nil valuegob: duplicate type receivedgob: unknown size of uintptrinvalid runtime symbol tableinvalid type passed to new()json: Unmarshal(non-pointer large span treap rotateRightmheap.freeSpanLocked - span missing stack in shrinkstackmspan.sweep: m is not lockedneed padding in bucket (key)newproc1: new g is not Gdeadnewproc1: newg missing stacknotewakeup - double wakeup (os: process already finishedos: process already releasedprotocol driver not attachedreflect.MakeSlice: len > capreflect: In of non-func typereflect: Key of non-map typeregion exceeds uintptr rangeruntime: bad lfnode address runtime: casgstatus: oldval=runtime: no module data for runtime: stat overflow: val strconv: \u03b5 > (den<<shift)/2unexpected end of JSON inputunsupported compression for  cannot be converted to type 45474735088646411895751953125LockOSThread nesting overflowMon, 02 Jan 2006 15:04:05 GMTMon, 02 Jan 2006 15:04:05 MSTRangeError: %d (%v) to uint16RangeError: %d (%v) to uint32RangeError: %f (%v) to uint64SIGPIPE: write to broken pipeSIGPWR: power failure restartTime.UnmarshalBinary: no dataaddspecial on invalid pointerbufio.Scanner: token too longcrypto/aes: invalid key size executing on Go runtime stackfunction () { [native code] }gc done but gcphase != _GCoffgfput: bad status (not Gdead)gob: encoder: message too biggob: unknown size of int/uintinvalid character class rangeinvalid length of trace eventio: read/write on closed pipemachine is not on the networkno XENIX semaphores availablenumerical result out of rangeoperation already in progresspadding contained in alphabetprotocol family not supportedre2: Invalid (%s) <lookahead>reflect.Value.OverflowComplexreflect: Elem of invalid typereflect: Out of non-func typeruntime: impossible type kindruntime: marking free object runtime: mmap: access denied\\nruntime: p.gcMarkWorkerMode= runtime: split stack overflowruntime: stat underflow: val runtime: sudog with non-nil cruntime: unknown pc in defer semacquire not on the G stackstring concatenation  blocks=Basic Latin,Greek and Coptic;radare2: .rodata) utf32le \\a\\a\u0109\u0140\\a\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf32le \\a\\a\u0109\u0140\\a\\b blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf32le \\a\\b\ud800\udf03\u8808\\a blocks=Basic Latin,Old Italic,CJK Unified Ideographs": 1,
                "radare2: .rodata) utf32le \\a\\b\ud800\udf03\u8808\\a blocks=Basic Latin,Old Italic,CJK Unified Ideographs;radare2: .rodata) utf32le \\a\\a\ud800\udf03\ud850\udc00\\a blocks=Basic Latin,Old Italic,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le \\a\\a\ud800\udf03\ud850\udc00\\a blocks=Basic Latin,Old Italic,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le \\b\\a\ud800\udd01\u4404 blocks=Basic Latin,Aegean Numbers,CJK Unified Ideographs Extension A": 1,
                "radare2: .rodata) utf32le \\b\\a\ud800\udd01\u4404 blocks=Basic Latin,Aegean Numbers,CJK Unified Ideographs Extension A;radare2: .rodata) utf32le \\t\ud840\udc42\u0100\\b blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin Extended-A": 1,
                "radare2: .rodata) utf32le \\t\ud840\udc42\u0100\\b blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin Extended-A;radare2: .rodata) utf32le \\b\\t\\a\u0405 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata) utf32le \\b\\t\\a\u0405 blocks=Basic Latin,Cyrillic;radare2: .rodata) utf32le \\t\ud800\udc05\udbc0\udc00\u0110\\n\\a blocks=Basic Latin,Linear B Syllabary,Supplementary Private Use Area-B,Latin Extended-A": 1,
                "radare2: .rodata) utf32le \\t\ud800\udc05\udbc0\udc00\u0110\\n\\a blocks=Basic Latin,Linear B Syllabary,Supplementary Private Use Area-B,Latin Extended-A;radare2: .rodata) utf16le YI\u0800\u2800@ blocks=Basic Latin,Samaritan,Braille Patterns": 1,
                "radare2: .rodata) utf16le YI\u0800\u2800@ blocks=Basic Latin,Samaritan,Braille Patterns;radare2: .rodata) utf32le E\u00c8\ud81a\udcd32 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le E\u00c8\ud81a\udcd32 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le E\u00bf\ud81a\udcd3) blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le E\u00bf\ud81a\udcd3) blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le C\u00a0\ud81a\udcd3A blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le C\u00a0\ud81a\udcd3A blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le :\u00da\ud84f\udd76R blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le :\u00da\ud84f\udd76R blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le Us\ud859\udcc8_ blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le Us\ud859\udcc8_ blocks=Basic Latin,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le B\u00d0\ud85e\udd69F blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le B\u00d0\ud85e\udd69F blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le B\u00f4\ud81a\udcd3M blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le B\u00f4\ud81a\udcd3M blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 1\u00c5\ud853\udc7aW blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le 1\u00c5\ud853\udc7aW blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le ?p\ud868\udf02} blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le ?p\ud868\udf02} blocks=Basic Latin,CJK Unified Ideographs Extension B;radare2: .rodata) utf16le \\tIM\u014d\u0109 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\tIM\u014d\u0109 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le EG\u0147\u0105 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le EG\u0147\u0105 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf32le \\a\\t\ud840\udc00\ud800\udd02 blocks=Basic Latin,CJK Unified Ideographs Extension B,Aegean Numbers": 1,
                "radare2: .rodata) utf32le \\a\\t\ud840\udc00\ud800\udd02 blocks=Basic Latin,CJK Unified Ideographs Extension B,Aegean Numbers;radare2: .rodata) utf32le !\\a\\n\ud800\udc00 blocks=Basic Latin,Linear B Syllabary": 1,
                "radare2: .rodata) utf32le !\\a\\n\ud800\udc00 blocks=Basic Latin,Linear B Syllabary;radare2: .rodata)  utf8 \\f$dD\u0124 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata)  utf8 \\f$dD\u0124 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le \\bH\u0848\\t@( \\b blocks=Basic Latin,Mandaic": 1,
                "radare2: .rodata) utf16le \\bH\u0848\\t@( \\b blocks=Basic Latin,Mandaic;radare2: .rodata) utf16le \\f,l\u012c\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\f,l\u012c\\b blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf32le \\b\\f\ud800\udc00\ud802\udd8d blocks=Basic Latin,Linear B Syllabary,Meroitic Hieroglyphs": 1,
                "radare2: .rodata) utf32le \\b\\f\ud800\udc00\ud802\udd8d blocks=Basic Latin,Linear B Syllabary,Meroitic Hieroglyphs;radare2: .rodata) utf32le \\b\\n\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le \\b\\n\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le \\b\\n\ud840\udc00\ud800\udc42 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary": 1,
                "radare2: .rodata) utf32le \\b\\n\ud840\udc00\ud800\udc42 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary;radare2: .rodata) utf32le \\t\\n\ud840\udc00\ud800\udc00 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary": 1,
                "radare2: .rodata) utf32le \\t\\n\ud840\udc00\ud800\udc00 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary;radare2: .rodata) utf16le  $\u0100\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le  $\u0100\\f blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le %18:": 1,
                "radare2: .rodata) utf16le %18:;radare2: .rodata) utf32le \\t\\t\ud840\udc00\ud800\udd00 blocks=Basic Latin,CJK Unified Ideographs Extension B,Aegean Numbers": 1,
                "radare2: .rodata) utf32le \\t\\t\ud840\udc00\ud800\udd00 blocks=Basic Latin,CJK Unified Ideographs Extension B,Aegean Numbers;radare2: .rodata) utf32le \\t\\n\ud840\udc00b\udbc0\udc00\ud800\udc11 blocks=Basic Latin,CJK Unified Ideographs Extension B,Supplementary Private Use Area-B,Linear B Syllabary": 1,
                "radare2: .rodata) utf32le \\t\\n\ud840\udc00b\udbc0\udc00\ud800\udc11 blocks=Basic Latin,CJK Unified Ideographs Extension B,Supplementary Private Use Area-B,Linear B Syllabary;radare2: .rodata) utf16le UUUT": 1,
                "radare2: .rodata) utf16le UUUT;radare2: .rodata) utf16le ,,,,": 1,
                "radare2: .rodata) utf16le ,,,,;radare2: .rodata)  utf8 \\v+ @": 1,
                "radare2: .rodata)  utf8 \\v+ @;radare2: .rodata) utf16le dddD": 1,
                "radare2: .rodata) utf16le dddD;radare2: .rodata) utf16le  @\u0100\\n blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le  @\u0100\\n blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le @\\b\u0200\u0220 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le @\\b\u0200\u0220 blocks=Basic Latin,Latin Extended-B;radare2: .rodata) utf16le #CA@": 1,
                "radare2: .rodata) utf16le #CA@;radare2: .rodata) utf16le \" D\u0302\u0502 blocks=Basic Latin,Combining Diacritical Marks,Cyrillic Supplement": 1,
                "radare2: .rodata) utf16le \" D\u0302\u0502 blocks=Basic Latin,Combining Diacritical Marks,Cyrillic Supplement;radare2: .rodata) utf16le A\u00c1\u2000\u2080 blocks=Basic Latin,Latin-1 Supplement,General Punctuation,Superscripts and Subscripts": 1,
                "radare2: .rodata) utf16le A\u00c1\u2000\u2080 blocks=Basic Latin,Latin-1 Supplement,General Punctuation,Superscripts and Subscripts;radare2: .rodata) utf16le \\n*( \u020a\u0206\\f blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\n*( \u020a\u0206\\f blocks=Basic Latin,Latin Extended-B;radare2: .rodata) utf32le \\f\\n\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le \\f\\n\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B;radare2: .rodata) utf16le &$\u0124\u0324\u0320\u0300\u0200\\f\\f blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Latin Extended-B": 1,
                "radare2: .rodata) utf16le &$\u0124\u0324\u0320\u0300\u0200\\f\\f blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Latin Extended-B;radare2: .rodata) utf16le \\b\\b\u0168\u0168\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\b\\b\u0168\u0168\\b blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf32le \\f\\t\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le \\f\\t\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B;radare2: .rodata) utf16le \\fED\u0144\\a\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\fED\u0144\\a\\f blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le JJJB": 1,
                "radare2: .rodata) utf16le JJJB;radare2: .rodata) utf16le $d`!": 1,
                "radare2: .rodata) utf16le $d`!;radare2: .rodata) utf32le \\r\\f\ud800\udc00\ud840\udc22 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le \\r\\f\ud800\udc00\ud840\udc22 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B;radare2: .rodata) utf16le  @\u0140\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le  @\u0140\u0100 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le p`hjzx`": 1,
                "radare2: .rodata) utf16le p`hjzx`;radare2: .rodata) utf16le \\n!\u0201\\t blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\n!\u0201\\t blocks=Basic Latin,Latin Extended-B;radare2: .rodata) utf32le \\r\\f\ud840\udc00\ud800\udc02 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary": 1,
                "radare2: .rodata) utf32le \\r\\f\ud840\udc00\ud800\udc02 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary;radare2: .rodata) utf16le !A\u0420\u0400\u0401a blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata) utf16le !A\u0420\u0400\u0401a blocks=Basic Latin,Cyrillic;radare2: .rodata) utf16le \\nI\u0149\u0109 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\nI\u0149\u0109 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le \"!\\b$": 1,
                "radare2: .rodata) utf16le \"!\\b$;radare2: .rodata) utf16le a` !\u0125@A blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le a` !\u0125@A blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le 222\"\"": 1,
                "radare2: .rodata) utf16le 222\"\";radare2: .rodata) utf16le OK\u00cb\u01cb blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le OK\u00cb\u01cb blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rodata) utf16le `b\u0840\u1840\u5840\u5860B blocks=Basic Latin,Mandaic,Mongolian,CJK Unified Ideographs": 1,
                "radare2: .rodata) utf16le `b\u0840\u1840\u5840\u5860B blocks=Basic Latin,Mandaic,Mongolian,CJK Unified Ideographs;radare2: .rodata) utf16le DL@\\b": 1,
                "radare2: .rodata) utf16le DL@\\b;radare2: .rodata) utf16le $\u00a4\u02a4\u0284\u02c4 blocks=Basic Latin,Latin-1 Supplement,IPA Extensions,Spacing Modifier Letters": 1,
                "radare2: .rodata) utf16le $\u00a4\u02a4\u0284\u02c4 blocks=Basic Latin,Latin-1 Supplement,IPA Extensions,Spacing Modifier Letters;radare2: .rodata) utf16le \\f\\b\u0148\u0140 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\f\\b\u0148\u0140 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le $dD\u0144FB@\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le $dD\u0144FB@\u0100 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le \\fD\\b\\t\"": 1,
                "radare2: .rodata) utf16le \\fD\\b\\t\";radare2: .rodata) utf16le \\n*\u00aa\u04aa\u04ea\u0480\u0400\u0401 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rodata) utf16le \\n*\u00aa\u04aa\u04ea\u0480\u0400\u0401 blocks=Basic Latin,Latin-1 Supplement,Cyrillic;radare2: .rodata) utf16le \\t)\u00a9\u04a8 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rodata) utf16le \\t)\u00a9\u04a8 blocks=Basic Latin,Latin-1 Supplement,Cyrillic;radare2: .rodata) utf16le \\b(\u0128,l blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\b(\u0128,l blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le @$!\\fA": 1,
                "radare2: .rodata) utf16le @$!\\fA;radare2: .rodata) utf16le \"#cC\u0243\u0242B blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \"#cC\u0243\u0242B blocks=Basic Latin,Latin Extended-B;radare2: .rodata) utf16le \\v\\t\u0103\u0102\u0100@` blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\v\\t\u0103\u0102\u0100@` blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le 9y\u00f8\u00b8\u00bc\u01bc\u01be blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le 9y\u00f8\u00b8\u00bc\u01bc\u01be blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rodata) utf16le BJ\"bc": 1,
                "radare2: .rodata) utf16le BJ\"bc;radare2: .rodata) utf16le  ,LH": 1,
                "radare2: .rodata) utf16le  ,LH;radare2: .rodata) utf16le    \"\u0422\u0402\u0406 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata) utf16le    \"\u0422\u0402\u0406 blocks=Basic Latin,Cyrillic;radare2: .rodata) utf16le \\t)\u0100! blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\t)\u0100! blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le &.*\\n\u010a\u0103\u0101\u0141\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le &.*\\n\u010a\u0103\u0101\u0141\u0100 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le \\f\\f\\f\\f": 1,
                "radare2: .rodata) utf16le \\f\\f\\f\\f;radare2: .rodata) utf16le @\u00c0\u01c0\\f\\f blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le @\u00c0\u01c0\\f\\f blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rodata) utf16le F.\u0126\u0106A blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le F.\u0126\u0106A blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le !\u00a1\u02a1\u02a0\u0220\u0200\\b blocks=Basic Latin,Latin-1 Supplement,IPA Extensions,Latin Extended-B": 1,
                "radare2: .rodata) utf16le !\u00a1\u02a1\u02a0\u0220\u0200\\b blocks=Basic Latin,Latin-1 Supplement,IPA Extensions,Latin Extended-B;radare2: .rodata) utf16le \\f,\u0121\u0120\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\f,\u0121\u0120\u0100 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le L@\\b\\t\\f": 1,
                "radare2: .rodata) utf16le L@\\b\\t\\f;radare2: .rodata) utf16le  !#\u0123\u0120\u0100\u0100\u0110\u0118\u0108\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le  !#\u0123\u0120\u0100\u0100\u0110\u0118\u0108\\b blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le \\b @EA": 1,
                "radare2: .rodata) utf16le \\b @EA;radare2: .rodata) utf32le 8\u00c5\ud81a\udcd3d blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 8\u00c5\ud81a\udcd3d blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 8\u00c6\ud81a\udcd3e blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 8\u00c6\ud81a\udcd3e blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le Ck\ud81a\udcd3\u00c3 blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le Ck\ud81a\udcd3\u00c3 blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement;radare2: .rodata) utf32le CC\ud81a\udcd3\u01a1 blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le CC\ud81a\udcd3\u01a1 blocks=Basic Latin,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le (a\ud81a\udcd33 blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le (a\ud81a\udcd33 blocks=Basic Latin,Bamum Supplement;radare2: .rodata) utf32le :*\ud84e\ude0f0 blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le :*\ud84e\ude0f0 blocks=Basic Latin,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le U]\ud859\udcc8* blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le U]\ud859\udcc8* blocks=Basic Latin,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le U`\ud858\udfeeO blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le U`\ud858\udfeeO blocks=Basic Latin,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le U4\ud859\udcc8v blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le U4\ud859\udcc8v blocks=Basic Latin,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u029c blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u029c blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions;radare2: .rodata) utf32le \\ef\ud81a\udcd3\u00af blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le \\ef\ud81a\udcd3\u00af blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement;radare2: .rodata) utf32le \\ea\ud81b\udf02\u01a7 blocks=Basic Latin,Miao,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\ea\ud81b\udf02\u01a7 blocks=Basic Latin,Miao,Latin Extended-B;radare2: .rodata) utf32le L\u00d9\ud847\uded5O blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le L\u00d9\ud847\uded5O blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le \\ey\ud81a\udcd3\u011d blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le \\ey\ud81a\udcd3\u011d blocks=Basic Latin,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le I\u00d6\ud81a\udcd3W blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le I\u00d6\ud81a\udcd3W blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le `\u00ca\ud81a\udcd3: blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le `\u00ca\ud81a\udcd3: blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf16le \" \u0540\u0541 blocks=Basic Latin,Armenian": 1,
                "radare2: .rodata) utf16le \" \u0540\u0541 blocks=Basic Latin,Armenian;radare2: .rodata) utf16le @HL\\\u015c^_OOokcC blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le @HL\\\u015c^_OOokcC blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le \\v\\tCc\u0103\u0143B@ blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\v\\tCc\u0103\u0143B@ blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le \\b\\b\\n\\v\\e": 1,
                "radare2: .rodata) utf16le \\b\\b\\n\\v\\e;radare2: .rodata) utf16le TDPRB\u0100I\u01c0 blocks=Basic Latin,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rodata) utf16le TDPRB\u0100I\u01c0 blocks=Basic Latin,Latin Extended-A,Latin Extended-B;radare2: .rodata) utf16le \\f\\f\\f\\f\\f\\f\\f\\f\\f\\f\\f\u0100\\f\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\f\\f\\f\\f\\f\\f\\f\\f\\f\\f\\f\u0100\\f\\f blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le &@ \\f\\b": 1,
                "radare2: .rodata) utf16le &@ \\f\\b;radare2: .rodata) utf16le \\v\\v\\v\\v\\v\\v": 1,
                "radare2: .rodata) utf16le \\v\\v\\v\\v\\v\\v;radare2: .rodata) utf16le \\b( $\\a": 1,
                "radare2: .rodata) utf16le \\b( $\\a;radare2: .rodata) utf16le \\fH\\n\u00a0\u0220`\\t blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\fH\\n\u00a0\u0220`\\t blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rodata) utf16le Nnfvtp`": 1,
                "radare2: .rodata) utf16le Nnfvtp`;radare2: .rodata) utf16le DL \\f\u014c blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le DL \\f\u014c blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le AE@D\u0204 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le AE@D\u0204 blocks=Basic Latin,Latin Extended-B;radare2: .rodata) utf16le \\t\\b `": 1,
                "radare2: .rodata) utf16le \\t\\b `;radare2: .rodata) utf16le @D@PBBBbAAAI\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le @D@PBBBbAAAI\u0100 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le %\u00c5e\u0164\u0120\u0100$\u0124\u0144 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf16le %\u00c5e\u0164\u0120\u0100$\u0124\u0144 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A;radare2: .rodata) utf16le Ff&\u0126\u0106 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le Ff&\u0126\u0106 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le \\b( \"": 1,
                "radare2: .rodata) utf16le \\b( \";radare2: .rodata) utf16le @\\a!\u0421\u0461\u0400\u0401A\u0420\\t blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata) utf16le @\\a!\u0421\u0461\u0400\u0401A\u0420\\t blocks=Basic Latin,Cyrillic;radare2: .rodata) utf16le @``@": 1,
                "radare2: .rodata) utf16le @``@;radare2: .rodata) utf16le \\b(h\\a\u0107\u0103\u0143 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\b(h\\a\u0107\u0103\u0143 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le \\a \u0102\\f\u0106 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\a \u0102\\f\u0106 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le \\n\\b \\a\\t\\f$": 1,
                "radare2: .rodata) utf16le \\n\\b \\a\\t\\f$;radare2: .rodata) utf16le Aa\\t)!\\b\\a\\n\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le Aa\\t)!\\b\\a\\n\u0100 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le hh ```` \u0180   blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le hh ```` \u0180   blocks=Basic Latin,Latin Extended-B;radare2: .rodata) utf16le \\b\\b( \u00a0 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le \\b\\b( \u00a0 blocks=Basic Latin,Latin-1 Supplement;radare2: .rodata) utf16le @A\\n `\\a": 1,
                "radare2: .rodata) utf16le @A\\n `\\a;radare2: .rodata) utf16le DF\\b\\f(": 1,
                "radare2: .rodata) utf16le DF\\b\\f(;radare2: .rodata) utf16le @A*\\vKk+/\u102a\u1028\u1068(\\b !# blocks=Basic Latin,Myanmar": 1,
                "radare2: .rodata) utf16le @A*\\vKk+/\u102a\u1028\u1068(\\b !# blocks=Basic Latin,Myanmar;radare2: .rodata) utf16le \\b\\f\\f\\r": 1,
                "radare2: .rodata) utf16le \\b\\f\\f\\r;radare2: .rodata) utf16le @`\\b\\t": 1,
                "radare2: .rodata) utf16le @`\\b\\t;radare2: .rodata) utf16le \\a\\f\u0104\u0304\u0300\u0204\u010c\u0108\\rE blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\a\\f\u0104\u0304\u0300\u0204\u010c\u0108\\rE blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Latin Extended-B;radare2: .rodata) utf16le @LH\\b\u0140\u0100\u0101(A\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le @LH\\b\u0140\u0100\u0101(A\\f blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le ID$\\t": 1,
                "radare2: .rodata) utf16le ID$\\t;radare2: .rodata) utf16le \\nJ@\u0440\u0c40 blocks=Basic Latin,Cyrillic,Telugu": 1,
                "radare2: .rodata) utf16le \\nJ@\u0440\u0c40 blocks=Basic Latin,Cyrillic,Telugu;radare2: .rodata) utf16le \\aD\"I\u00c9\u00c8 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le \\aD\"I\u00c9\u00c8 blocks=Basic Latin,Latin-1 Supplement;radare2: .rodata) utf16le B\u00c2\u01c2A@\u00c0 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le B\u00c2\u01c2A@\u00c0 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rodata) utf16le \\v\\n L": 1,
                "radare2: .rodata) utf16le \\v\\n L;radare2: .rodata) utf16le @`\\n\\b( \\a": 1,
                "radare2: .rodata) utf16le @`\\n\\b( \\a;radare2: .rodata) utf16le \"*\u00aa\u01aa\u012a\u0122\u0120 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \"*\u00aa\u01aa\u012a\u0122\u0120 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Latin Extended-A;radare2: .rodata) utf16le \\b \"B\u0142@\u00c0*\u012a\u022a\u0228\u0220( blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\b \"B\u0142@\u00c0*\u012a\u022a\u0228\u0220( blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B;radare2: .rodata) utf16le \\b \u2020\u1008( blocks=Basic Latin,General Punctuation,Myanmar": 1,
                "radare2: .rodata) utf16le \\b \u2020\u1008( blocks=Basic Latin,General Punctuation,Myanmar;radare2: .rodata) utf16le !A@\u1040B blocks=Basic Latin,Myanmar": 1,
                "radare2: .rodata) utf16le !A@\u1040B blocks=Basic Latin,Myanmar;radare2: .rodata) utf16le \" $!\u1000\u0800\u2020\u2000\\t blocks=Basic Latin,Myanmar,Samaritan,General Punctuation": 1,
                "radare2: .rodata) utf16le \" $!\u1000\u0800\u2020\u2000\\t blocks=Basic Latin,Myanmar,Samaritan,General Punctuation;radare2: .rodata) utf16le #+\" `": 1,
                "radare2: .rodata) utf16le #+\" `;radare2: .rodata) utf16le \\nA@\\b": 1,
                "radare2: .rodata) utf16le \\nA@\\b;radare2: .rodata) utf16le ED\u0140\u0101\u0100@AI blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le ED\u0140\u0101\u0100@AI blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le B `\\f": 1,
                "radare2: .rodata) utf16le B `\\f;radare2: .rodata) utf16le  !A\u00c1@\u0440 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rodata) utf16le  !A\u00c1@\u0440 blocks=Basic Latin,Latin-1 Supplement,Cyrillic;radare2: .rodata) utf16le HI\u0149\u0349\\b\u1008 blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Myanmar": 1,
                "radare2: .rodata) utf16le HI\u0149\u0349\\b\u1008 blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Myanmar;radare2: .rodata) utf16le @@\u0200\u0200\\b\\b   blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le @@\u0200\u0200\\b\\b   blocks=Basic Latin,Latin Extended-B;radare2: .rodata) utf16le  \u00a0!\u0201\\b@ blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le  \u00a0!\u0201\\b@ blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rodata) utf16le  \"C\u00c3B@ blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le  \"C\u00c3B@ blocks=Basic Latin,Latin-1 Supplement;radare2: .rodata) utf16le \\a#\\b\\f\u0206\u0246\u0204\\t\u0209\u020cA blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\a#\\b\\f\u0206\u0246\u0204\\t\u0209\u020cA blocks=Basic Latin,Latin Extended-B;radare2: .rodata) utf16le \\b\\b\u2000\u2008 blocks=Basic Latin,General Punctuation": 1,
                "radare2: .rodata) utf16le \\b\\b\u2000\u2008 blocks=Basic Latin,General Punctuation;radare2: .rodata) utf16le \\t\\t\u0208\u0400\u0500 blocks=Basic Latin,Latin Extended-B,Cyrillic,Cyrillic Supplement": 1,
                "radare2: .rodata) utf16le \\t\\t\u0208\u0400\u0500 blocks=Basic Latin,Latin Extended-B,Cyrillic,Cyrillic Supplement;radare2: .rodata) utf16le  `@$(": 1,
                "radare2: .rodata) utf16le  `@$(;radare2: .rodata) utf16le @BCA": 1,
                "radare2: .rodata) utf16le @BCA;radare2: .rodata) utf16le \\a\\nHh\\t)!a \\f": 1,
                "radare2: .rodata) utf16le \\a\\nHh\\t)!a \\f;radare2: .rodata) utf16le HDL\\t": 1,
                "radare2: .rodata) utf16le HDL\\t;radare2: .rodata) utf16le CGB\\n\u0208\\t\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le CGB\\n\u0208\\t\\b blocks=Basic Latin,Latin Extended-B;radare2: .rodata) utf16le \\r%$ @\u0200\u0201A blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\r%$ @\u0200\u0201A blocks=Basic Latin,Latin Extended-B;radare2: .rodata) utf16le *(\u0228\u0208\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le *(\u0228\u0208\\b blocks=Basic Latin,Latin Extended-B;radare2: .rodata) utf32le 09\ud81a\udcd3\u00a6 blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le 09\ud81a\udcd3\u00a6 blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement;radare2: .rodata) utf32le B\u00c3\ud85e\udd69\u0288 blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B,IPA Extensions": 1,
                "radare2: .rodata) utf32le B\u00c3\ud85e\udd69\u0288 blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B,IPA Extensions;radare2: .rodata) utf32le R\u00d5\ud81a\uddc4* blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le R\u00d5\ud81a\uddc4* blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le jg\ud80c\udf300 blocks=Basic Latin,Egyptian Hieroglyphs": 1,
                "radare2: .rodata) utf32le jg\ud80c\udf300 blocks=Basic Latin,Egyptian Hieroglyphs;radare2: .rodata) utf32le jn\ud80c\udf30\u0142 blocks=Basic Latin,Egyptian Hieroglyphs,Latin Extended-A": 1,
                "radare2: .rodata) utf32le jn\ud80c\udf30\u0142 blocks=Basic Latin,Egyptian Hieroglyphs,Latin Extended-A;radare2: .rodata) utf16le \\n*\"\u00a2\u04a2\u01a2 blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \\n*\"\u00a2\u04a2\u01a2 blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Latin Extended-B;radare2: .rodata) utf16le &\u00a6\u01a4\u03a0@ blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Greek and Coptic": 1,
                "radare2: .rodata) utf16le &\u00a6\u01a4\u03a0@ blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Greek and Coptic;radare2: .rodata) utf16le \\b\\n*\"b": 1,
                "radare2: .rodata) utf16le \\b\\n*\"b;radare2: .rodata) utf16le  !\u00a1\u04a1\u14a1 blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Unified Canadian Aboriginal Syllabics": 1,
                "radare2: .rodata) utf16le  !\u00a1\u04a1\u14a1 blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Unified Canadian Aboriginal Syllabics;radare2: .rodata) utf16le \"\\nH@": 1,
                "radare2: .rodata) utf16le \"\\nH@;radare2: .rodata) utf16le \\n\\b( \"&#\u0123!\u0121\u0921\u0821\u0829@A\u0800\u0801\\t)\u0920\u0101\u0100 blocks=Basic Latin,Latin Extended-A,Devanagari,Samaritan": 1,
                "radare2: .rodata) utf16le \\n\\b( \"&#\u0123!\u0121\u0921\u0821\u0829@A\u0800\u0801\\t)\u0920\u0101\u0100 blocks=Basic Latin,Latin Extended-A,Devanagari,Samaritan;radare2: .rodata) utf16le NJ\\n\\b'&": 1,
                "radare2: .rodata) utf16le NJ\\n\\b'&;radare2: .rodata) utf16le \\r\\t)A": 1,
                "radare2: .rodata) utf16le \\r\\t)A;radare2: .rodata) utf16le B\\r \"": 1,
                "radare2: .rodata) utf16le B\\r \";radare2: .rodata) utf16le \\n\\b(H\\f": 1,
                "radare2: .rodata) utf16le \\n\\b(H\\f;radare2: .rodata) utf16le & \".*(\\f": 1,
                "radare2: .rodata) utf16le & \".*(\\f;radare2: .rodata) utf16le  \u00a0\u00e0\u00e1\u00c0\u01c0\u01c1 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le  \u00a0\u00e0\u00e1\u00c0\u01c0\u01c1 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rodata) utf16le \\bA\u0100\u0101\\t\\f( blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\bA\u0100\u0101\\t\\f( blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le \\v\\t \"bBa'%\\f\\r": 1,
                "radare2: .rodata) utf16le \\v\\t \"bBa'%\\f\\r;radare2: .rodata) utf16le AQUEP": 1,
                "radare2: .rodata) utf16le AQUEP;radare2: .rodata) utf16le %@$\u0106\u0146\u0346\u0100\u0101\u0103\\n(!a  blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf16le %@$\u0106\u0146\u0346\u0100\u0101\u0103\\n(!a  blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks;radare2: .rodata) utf16le \\t\" \u0100\u0104\u0108 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\t\" \u0100\u0104\u0108 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le @A$(": 1,
                "radare2: .rodata) utf16le @A$(;radare2: .rodata) utf16le \\n\\bH@\u0240\u0640\u0440\u0400\u0401 blocks=Basic Latin,Latin Extended-B,Arabic,Cyrillic": 1,
                "radare2: .rodata) utf16le \\n\\bH@\u0240\u0640\u0440\u0400\u0401 blocks=Basic Latin,Latin Extended-B,Arabic,Cyrillic;radare2: .rodata) utf16le \\n\\v*\\b": 1,
                "radare2: .rodata) utf16le \\n\\v*\\b;radare2: .rodata) utf16le \\t\\a%,": 1,
                "radare2: .rodata) utf16le \\t\\a%,;radare2: .rodata) utf16le ! )\u00a1 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le ! )\u00a1 blocks=Basic Latin,Latin-1 Supplement;radare2: .rodata) utf16le D$d\u0464 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata) utf16le D$d\u0464 blocks=Basic Latin,Cyrillic;radare2: .rodata) utf16le \\f@#!a \\t()\\vI\\b\\n\\r": 1,
                "radare2: .rodata) utf16le \\f@#!a \\t()\\vI\\b\\n\\r;radare2: .rodata) utf16le  \\f\\t\\a,(\"": 1,
                "radare2: .rodata) utf16le  \\f\\t\\a,(\";radare2: .rodata) utf16le a`bh\\v#$\\n*\u0100\u0120 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le a`bh\\v#$\\n*\u0100\u0120 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le \\b( \\f": 1,
                "radare2: .rodata) utf16le \\b( \\f;radare2: .rodata) utf16le DBH\\b": 1,
                "radare2: .rodata) utf16le DBH\\b;radare2: .rodata) utf16le  \u00c0\u0440\u0400\u0401 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rodata) utf16le  \u00c0\u0440\u0400\u0401 blocks=Basic Latin,Latin-1 Supplement,Cyrillic;radare2: .rodata) utf16le Ad`\u0140J\u044a\u0142(\u0100\u0101\u0102 blocks=Basic Latin,Latin Extended-A,Cyrillic": 1,
                "radare2: .rodata) utf16le Ad`\u0140J\u044a\u0142(\u0100\u0101\u0102 blocks=Basic Latin,Latin Extended-A,Cyrillic;radare2: .rodata) utf32le $\\f\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le $\\f\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B;radare2: .rodata) utf16le #CGg\u0263 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rodata) utf16le #CGg\u0263 blocks=Basic Latin,IPA Extensions;radare2: .rodata) utf16le A!a\u0261 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rodata) utf16le A!a\u0261 blocks=Basic Latin,IPA Extensions;radare2: .rodata) utf16le \\aBG\\b\\n": 1,
                "radare2: .rodata) utf16le \\aBG\\b\\n;radare2: .rodata) utf16le @\\fH\u010c\u014c\u0100\u0101\\rAC!$\" blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le @\\fH\u010c\u014c\u0100\u0101\\rAC!$\" blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le (\"!\\nBF": 1,
                "radare2: .rodata) utf16le (\"!\\nBF;radare2: .rodata) utf16le KCIi\\r%e": 1,
                "radare2: .rodata) utf16le KCIi\\r%e;radare2: .rodata) utf32le :\u00fc\ud84e\ude0f2 blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le :\u00fc\ud84e\ude0f2 blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le \\ey\ud81a\udcd3\u00db blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le \\ey\ud81a\udcd3\u00db blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement;radare2: .rodata) utf32le \\ey\ud81a\udcd3\u0461 blocks=Basic Latin,Bamum Supplement,Cyrillic": 1,
                "radare2: .rodata) utf32le \\ey\ud81a\udcd3\u0461 blocks=Basic Latin,Bamum Supplement,Cyrillic;radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u00a7 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u00a7 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u00ce blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u00ce blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u00c3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u00c3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u00d9 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u00d9 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 09\ud81a\udcd34 blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 09\ud81a\udcd34 blocks=Basic Latin,Bamum Supplement;radare2: .rodata) utf32le 09\ud81a\udcd3\u00cc blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le 09\ud81a\udcd3\u00cc blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement;radare2: .rodata) utf32le E\u00b6\ud81a\udcd3\u0119 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le E\u00b6\ud81a\udcd3\u0119 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le E\u00b6\ud81a\udcd3\u01c3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le E\u00b6\ud81a\udcd3\u01c3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u01aa blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le L\u00c2\ud81a\udcd3\u01aa blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le j\u00c9\ud80c\udf30A blocks=Basic Latin,Latin-1 Supplement,Egyptian Hieroglyphs": 1,
                "radare2: .rodata) utf32le j\u00c9\ud80c\udf30A blocks=Basic Latin,Latin-1 Supplement,Egyptian Hieroglyphs;radare2: .rodata) utf32le j\u00d2\ud80c\udf30\u0117 blocks=Basic Latin,Latin-1 Supplement,Egyptian Hieroglyphs,Latin Extended-A": 1,
                "radare2: .rodata) utf32le j\u00d2\ud80c\udf30\u0117 blocks=Basic Latin,Latin-1 Supplement,Egyptian Hieroglyphs,Latin Extended-A;radare2: .rodata) utf16le \\r\\tEe\u0105\u0125% blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\r\\tEe\u0105\u0125% blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le @\\f,L\\b": 1,
                "radare2: .rodata) utf16le @\\f,L\\b;radare2: .rodata) utf16le !@AC\u0104\u0845\u0843\u0841\\f\u00a1 blocks=Basic Latin,Latin Extended-A,Mandaic,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le !@AC\u0104\u0845\u0843\u0841\\f\u00a1 blocks=Basic Latin,Latin Extended-A,Mandaic,Latin-1 Supplement;radare2: .rodata) utf32le '\\n\ud800\udc00\ud840\udc05 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le '\\n\ud800\udc00\ud840\udc05 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B;radare2: .rodata) utf16le \\vK\\b\\t@\\nHIACG\u0247\u02c7\u0200\u0201E\u0244\u0245 blocks=Basic Latin,Latin Extended-B,Spacing Modifier Letters": 1,
                "radare2: .rodata) utf16le \\vK\\b\\t@\\nHIACG\u0247\u02c7\u0200\u0201E\u0244\u0245 blocks=Basic Latin,Latin Extended-B,Spacing Modifier Letters;radare2: .rodata) utf16le \"&! M\\f": 1,
                "radare2: .rodata) utf16le \"&! M\\f;radare2: .rodata) utf16le `\\b(": 1,
                "radare2: .rodata) utf16le `\\b(;radare2: .rodata) utf16le \\tI!\u00a1a\u0102\u010a\u0142\u0101\u0100 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\tI!\u00a1a\u0102\u010a\u0142\u0101\u0100 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A;radare2: .rodata) utf32le )\\f\ud800\udc00\ud840\udc04 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le )\\f\ud800\udc00\ud840\udc04 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B;radare2: .rodata) utf16le CJFD\u00c4\u04c4\u0cc4\u0ccc blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Kannada": 1,
                "radare2: .rodata) utf16le CJFD\u00c4\u04c4\u0cc4\u0ccc blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Kannada;radare2: .rodata) utf16le \\b $\\aGA": 1,
                "radare2: .rodata) utf16le \\b $\\aGA;radare2: .rodata) utf16le  `\u0220!\u0469\u0460\u0462\u04e2 blocks=Basic Latin,Latin Extended-B,Cyrillic": 1,
                "radare2: .rodata) utf16le  `\u0220!\u0469\u0460\u0462\u04e2 blocks=Basic Latin,Latin Extended-B,Cyrillic;radare2: .rodata) utf32le   \u2820\u2800 blocks=Basic Latin,Braille Patterns": 1,
                "radare2: .rodata) utf32le   \u2820\u2800 blocks=Basic Latin,Braille Patterns;radare2: .rodata) utf16le \"b\u0822\u0a20\u0222 blocks=Basic Latin,Samaritan,Gurmukhi,Latin Extended-B": 1,
                "radare2: .rodata) utf16le \"b\u0822\u0a20\u0222 blocks=Basic Latin,Samaritan,Gurmukhi,Latin Extended-B;radare2: .rodata) utf16le \\bHJ\u044aB `!\u2400\u0400\u00c0 blocks=Basic Latin,Cyrillic,Control Pictures,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le \\bHJ\u044aB `!\u2400\u0400\u00c0 blocks=Basic Latin,Cyrillic,Control Pictures,Latin-1 Supplement;radare2: .rodata) utf16le A\u00c1\u04c1\u0401\u0481\u0480\u0400\\t)iI blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rodata) utf16le A\u00c1\u04c1\u0401\u0481\u0480\u0400\\t)iI blocks=Basic Latin,Latin-1 Supplement,Cyrillic;radare2: .rodata) utf16le \\b(\\nD": 1,
                "radare2: .rodata) utf16le \\b(\\nD;radare2: .rodata) utf16le !\" `@": 1,
                "radare2: .rodata) utf16le !\" `@;radare2: .rodata) utf32le ?K\ud856\udca4\u00a4 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le ?K\ud856\udca4\u00a4 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement;radare2: .rodata) utf32le ?N\ud856\udca4\u00c4 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le ?N\ud856\udca4\u00c4 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement;radare2: .rodata) utf32le ?Q\ud855\udeeb\u00f6 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le ?Q\ud855\udeeb\u00f6 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement;radare2: .rodata) utf32le 09\ud81a\udcd3; blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 09\ud81a\udcd3; blocks=Basic Latin,Bamum Supplement;radare2: .rodata) utf32le BC\ud85e\udc4b= blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rodata) utf32le BC\ud85e\udc4b= blocks=Basic Latin,CJK Unified Ideographs Extension B;radare2: .rodata) utf32le BZ\ud85e\udc6c\u00cc blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le BZ\ud85e\udc6c\u00cc blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement;radare2: .rodata) utf16le ! $A`\\t(\\r)\\f%": 1,
                "radare2: .rodata) utf16le ! $A`\\t(\\r)\\f%;radare2: .rodata) utf16le @H\\nEID\\a#\u00a3 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le @H\\nEID\\a#\u00a3 blocks=Basic Latin,Latin-1 Supplement;radare2: .rodata) utf16le cC\\v\u0241\u0201\u0281\u00c1 blocks=Basic Latin,Latin Extended-B,IPA Extensions,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le cC\\v\u0241\u0201\u0281\u00c1 blocks=Basic Latin,Latin Extended-B,IPA Extensions,Latin-1 Supplement;radare2: .rodata) utf32le ,\\f\u010c\u0104\u0184\u0180 blocks=Basic Latin,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rodata) utf32le ,\\f\u010c\u0104\u0184\u0180 blocks=Basic Latin,Latin Extended-A,Latin Extended-B;radare2: .rodata) utf16le \\a'g\u0267\u0266\u1266\u3266 blocks=Basic Latin,IPA Extensions,Ethiopic,Enclosed CJK Letters and Months": 1,
                "radare2: .rodata) utf16le \\a'g\u0267\u0266\u1266\u3266 blocks=Basic Latin,IPA Extensions,Ethiopic,Enclosed CJK Letters and Months;radare2: .rodata) utf16le Aab\u0200\u0201 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rodata) utf16le Aab\u0200\u0201 blocks=Basic Latin,Latin Extended-B;radare2: .rodata) utf16le $\u00a4\u00a5\u00a6\u0102 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf16le $\u00a4\u00a5\u00a6\u0102 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A;radare2: .rodata) utf16le \\bA@B\"\u0122 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\bA@B\"\u0122 blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le J*\u012a\\n blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rodata) utf16le J*\u012a\\n blocks=Basic Latin,Latin Extended-A;radare2: .rodata) utf16le /on\u016e\u056e\u0168hHD blocks=Basic Latin,Latin Extended-A,Armenian": 1,
                "radare2: .rodata) utf16le /on\u016e\u056e\u0168hHD blocks=Basic Latin,Latin Extended-A,Armenian;radare2: .rodata) utf16le C\\tIB\"": 1,
                "radare2: .rodata) utf16le C\\tIB\";radare2: .rodata) utf16le `b\u0262@#! ,l\\b\\n blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rodata) utf16le `b\u0262@#! ,l\\b\\n blocks=Basic Latin,IPA Extensions;radare2: .rodata) utf32le @ \u0400\\bk blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata) utf32le @ \u0400\\bk blocks=Basic Latin,Cyrillic;radare2: .rodata) utf16le (((((((": 1,
                "radare2: .rodata) utf16le (((((((;radare2: .rodata) utf16le           ((((((   \\b\\b\\b\\b\\b\\b": 1,
                "radare2: .rodata) utf16le           ((((((   \\b\\b\\b\\b\\b\\b;radare2: .rodata) utf16le  \\a!G@CA\\b(\\n\\vK\"\\fDBFN\u0142\u0146\u0942 blocks=Basic Latin,Latin Extended-A,Devanagari": 1,
                "radare2: .rodata) utf16le  \\a!G@CA\\b(\\n\\vK\"\\fDBFN\u0142\u0146\u0942 blocks=Basic Latin,Latin Extended-A,Devanagari;radare2: .rodata) utf16le ,\u00ac\u00ec#`H$: blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le ,\u00ac\u00ec#`H$: blocks=Basic Latin,Latin-1 Supplement;radare2: .rodata) utf16le @h(": 1,
                "radare2: .rodata) utf16le @h(;radare2: .rodata) utf16le DH\\t\\f$d\u00c4 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rodata) utf16le DH\\t\\f$d\u00c4 blocks=Basic Latin,Latin-1 Supplement;radare2: .rodata) utf16le \\aea\u1000\u1001\u1021\u1061\u0160 blocks=Basic Latin,Myanmar,Latin Extended-A": 1,
                "radare2: .rodata) utf16le \\aea\u1000\u1001\u1021\u1061\u0160 blocks=Basic Latin,Myanmar,Latin Extended-A;radare2: .rodata) utf16le B\u00c2\u00c0\u0202u blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf16le B\u00c2\u00c0\u0202u blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rodata) utf32le \\b\\f\u010c\u018c blocks=Basic Latin,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\b\\f\u010c\u018c blocks=Basic Latin,Latin Extended-A,Latin Extended-B;radare2: .rodata) utf16le 555555555555555555": 1,
                "radare2: .rodata) utf16le 555555555555555555;radare2: .rodata) utf16le .L\u00ccD\u0109\\v\u020b blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rodata) utf16le .L\u00ccD\u0109\\v\u020b blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A,Latin Extended-B;radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3X blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3X blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 3\u00d6\ud81a\udcd3\u0126 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 3\u00d6\ud81a\udcd3\u0126 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le 3": 1,
                "radare2: .rodata) utf32le 3;radare2: .rodata) utf32le (\u00c4\ud81a\udcd3c blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le (\u00c4\ud81a\udcd3c blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le (\u00db\ud81a\udcd3\u01bf blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le (\u00db\ud81a\udcd3\u01bf blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le 3\u00d6\ud81a\udcd3\u0140 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 3\u00d6\ud81a\udcd3\u0140 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le [\u00b2\ud81a\udcd3\u015b blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le [\u00b2\ud81a\udcd3\u015b blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le \\a3\u00d2\ud81a\udcd3\u01ee blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\a3\u00d2\ud81a\udcd3\u01ee blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le \\a3\u00d2\ud81a\udcd3\u01f0 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\a3\u00d2\ud81a\udcd3\u01f0 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le \\ey\ud81a\udcd3\u057b blocks=Basic Latin,Bamum Supplement,Armenian": 1,
                "radare2: .rodata) utf32le \\ey\ud81a\udcd3\u057b blocks=Basic Latin,Bamum Supplement,Armenian;radare2: .rodata) utf32le \\ey\ud81a\udcd3\u07a0 blocks=Basic Latin,Bamum Supplement,Thaana": 1,
                "radare2: .rodata) utf32le \\ey\ud81a\udcd3\u07a0 blocks=Basic Latin,Bamum Supplement,Thaana;radare2: .rodata) utf32le 5+\ud81a\udcd3Y blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 5+\ud81a\udcd3Y blocks=Basic Latin,Bamum Supplement;radare2: .rodata) utf32le 5-\ud81a\udcd3v blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 5-\ud81a\udcd3v blocks=Basic Latin,Bamum Supplement;radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u00b2 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u00b2 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u00b9 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u00b9 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 5$\ud81a\udcd3\u014b blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 5$\ud81a\udcd3\u014b blocks=Basic Latin,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le 6+\ud81a\udcd3Y blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 6+\ud81a\udcd3Y blocks=Basic Latin,Bamum Supplement;radare2: .rodata) utf32le 6-\ud81a\udcd3x blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 6-\ud81a\udcd3x blocks=Basic Latin,Bamum Supplement;radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u00b4 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u00b4 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u00bb blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u00bb blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 6$\ud81a\udcd3\u014d blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 6$\ud81a\udcd3\u014d blocks=Basic Latin,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le 5S\ud81a\udcd3Y blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 5S\ud81a\udcd3Y blocks=Basic Latin,Bamum Supplement;radare2: .rodata) utf32le 5U\ud81a\udcd3v blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 5U\ud81a\udcd3v blocks=Basic Latin,Bamum Supplement;radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u00b7 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u00b7 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u00be blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u00be blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 5F\ud81a\udcd3\u0118 blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 5F\ud81a\udcd3\u0118 blocks=Basic Latin,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le 5L\ud81a\udcd3\u0155 blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 5L\ud81a\udcd3\u0155 blocks=Basic Latin,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le 6S\ud81a\udcd3Y blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 6S\ud81a\udcd3Y blocks=Basic Latin,Bamum Supplement;radare2: .rodata) utf32le 6U\ud81a\udcd3x blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 6U\ud81a\udcd3x blocks=Basic Latin,Bamum Supplement;radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u00b9 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u00b9 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u00c0 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u00c0 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 6F\ud81a\udcd3\u011a blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 6F\ud81a\udcd3\u011a blocks=Basic Latin,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le 6L\ud81a\udcd3\u0157 blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 6L\ud81a\udcd3\u0157 blocks=Basic Latin,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le \\t3\u00d2\ud81a\udcd3\u01e8 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\t3\u00d2\ud81a\udcd3\u01e8 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le 5\u00a7\ud81a\udcd3\u01ad blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 5\u00a7\ud81a\udcd3\u01ad blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le 5\u00ae\ud81a\udcd3\u01b7 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 5\u00ae\ud81a\udcd3\u01b7 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le \\f3\u00d2\ud81a\udcd3\u0288 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le \\f3\u00d2\ud81a\udcd3\u0288 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions;radare2: .rodata) utf32le 6\u00a7\ud81a\udcd3\u01ad blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 6\u00a7\ud81a\udcd3\u01ad blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le 6\u00ae\ud81a\udcd3\u01b9 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 6\u00ae\ud81a\udcd3\u01b9 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le \\f3\u00d2\ud81a\udcd3\u028a blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le \\f3\u00d2\ud81a\udcd3\u028a blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions;radare2: .rodata) utf32le 6\u00e2\ud81a\udcd3\u026d blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le 6\u00e2\ud81a\udcd3\u026d blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions;radare2: .rodata) utf32le \\f3\u00d2\ud81a\udcd3\u02a3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le \\f3\u00d2\ud81a\udcd3\u02a3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions;radare2: .rodata) utf32le 7\u00f8\ud81a\udcd3\u02a3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le 7\u00f8\ud81a\udcd3\u02a3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions;radare2: .rodata) utf32le \\f3\u00d2\ud81a\udcd3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le \\f3\u00d2\ud81a\udcd3 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf16le \\b\"\\b#\\b\u8003\\b\u8001 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rodata) utf16le \\b\"\\b#\\b\u8003\\b\u8001 blocks=Basic Latin,CJK Unified Ideographs;radare2: .rodata) utf32le \"\"\"#": 1,
                "radare2: .rodata) utf32le \"\"\"#;radare2: .rodata) utf32le \\a3\u00d2\ud81a\udcd3\u0170 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le \\a3\u00d2\ud81a\udcd3\u0170 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le \\v3\u00d2\ud81a\udcd3\u0199 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\v3\u00d2\ud81a\udcd3\u0199 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le \\r3\u00d2\ud81a\udcd3\u028d blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le \\r3\u00d2\ud81a\udcd3\u028d blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions;radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u0294 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u0294 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions;radare2: .rodata) utf32le \\a3\u00d2\ud81a\udcd3\u01a1 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\a3\u00d2\ud81a\udcd3\u01a1 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le \\v3\u00d2\ud81a\udcd3\u01ca blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\v3\u00d2\ud81a\udcd3\u01ca blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le \\r3\u00d2\ud81a\udcd3\u02f8 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Spacing Modifier Letters": 1,
                "radare2: .rodata) utf32le \\r3\u00d2\ud81a\udcd3\u02f8 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Spacing Modifier Letters;radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u0304 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u0304 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Combining Diacritical Marks;radare2: .rodata) utf32le ?": 1,
                "radare2: .rodata) utf32le ?;radare2: .rodata) utf32le \\v3\u00d2\ud81a\udcd3\u0221 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le \\v3\u00d2\ud81a\udcd3\u0221 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le \\n3\u00d2\ud81a\udcd3\u0443 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Cyrillic": 1,
                "radare2: .rodata) utf32le \\n3\u00d2\ud81a\udcd3\u0443 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Cyrillic;radare2: .rodata) utf32le \\r3\u0455\ud835\udf15\u0492 blocks=Basic Latin,Cyrillic,Mathematical Alphanumeric Symbols": 1,
                "radare2: .rodata) utf32le \\r3\u0455\ud835\udf15\u0492 blocks=Basic Latin,Cyrillic,Mathematical Alphanumeric Symbols;radare2: .rodata) utf32le \\a1\u07c0\ud855\udc79\u0276 blocks=Basic Latin,NKo,CJK Unified Ideographs Extension B,IPA Extensions": 1,
                "radare2: .rodata) utf32le \\a1\u07c0\ud855\udc79\u0276 blocks=Basic Latin,NKo,CJK Unified Ideographs Extension B,IPA Extensions;radare2: .rodata) utf32le \\n1\u07c0\ud855\udc79\u03ae blocks=Basic Latin,NKo,CJK Unified Ideographs Extension B,Greek and Coptic": 1,
                "radare2: .rodata) utf32le \\n1\u07c0\ud855\udc79\u03ae blocks=Basic Latin,NKo,CJK Unified Ideographs Extension B,Greek and Coptic;radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u0500 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Cyrillic Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u0500 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Cyrillic Supplement;radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u0310 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u0310 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Combining Diacritical Marks;radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u0396 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u0396 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic;radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u0360 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u0360 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Combining Diacritical Marks;radare2: .rodata) utf32le &H\ud81a\udcd3\u00ce blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le &H\ud81a\udcd3\u00ce blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement;radare2: .rodata) utf32le &3\ud81a\udcd3\u01a0 blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le &3\ud81a\udcd3\u01a0 blocks=Basic Latin,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le &5\ud81a\udcd3\u01b2 blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le &5\ud81a\udcd3\u01b2 blocks=Basic Latin,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le &,\ud81a\udcd3\u0228 blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le &,\ud81a\udcd3\u0228 blocks=Basic Latin,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le &'\ud81a\udcd3\u0253 blocks=Basic Latin,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le &'\ud81a\udcd3\u0253 blocks=Basic Latin,Bamum Supplement,IPA Extensions;radare2: .rodata) utf32le &#\ud81a\udcd3\u02a4 blocks=Basic Latin,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le &#\ud81a\udcd3\u02a4 blocks=Basic Latin,Bamum Supplement,IPA Extensions;radare2: .rodata) utf32le 3\u00da\ud81a\udcd3m blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3m blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement;radare2: .rodata) utf32le 7&\ud81a\udcd3\u00db blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement": 1,
                "radare2: .rodata) utf32le 7&\ud81a\udcd3\u00db blocks=Basic Latin,Bamum Supplement,Latin-1 Supplement;radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u013a blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u013a blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le 7-\ud81a\udcd3\u014b blocks=Basic Latin,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 7-\ud81a\udcd3\u014b blocks=Basic Latin,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le 7G\ud81a\udcd3\u019c blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 7G\ud81a\udcd3\u019c blocks=Basic Latin,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le 7I\ud81a\udcd3\u01c2 blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 7I\ud81a\udcd3\u01c2 blocks=Basic Latin,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le 7=\ud81a\udcd3\u023d blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 7=\ud81a\udcd3\u023d blocks=Basic Latin,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le 7=\ud81a\udcd3\u0239 blocks=Basic Latin,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 7=\ud81a\udcd3\u0239 blocks=Basic Latin,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le 7Q\ud81a\udcd3\u028e blocks=Basic Latin,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le 7Q\ud81a\udcd3\u028e blocks=Basic Latin,Bamum Supplement,IPA Extensions;radare2: .rodata) utf32le 7W\ud81a\udcd3\u02cf blocks=Basic Latin,Bamum Supplement,Spacing Modifier Letters": 1,
                "radare2: .rodata) utf32le 7W\ud81a\udcd3\u02cf blocks=Basic Latin,Bamum Supplement,Spacing Modifier Letters;radare2: .rodata) utf32le 7^\ud81a\udcd3\u0310 blocks=Basic Latin,Bamum Supplement,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf32le 7^\ud81a\udcd3\u0310 blocks=Basic Latin,Bamum Supplement,Combining Diacritical Marks;radare2: .rodata) utf32le 7d\ud81a\udcd3\u0351 blocks=Basic Latin,Bamum Supplement,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf32le 7d\ud81a\udcd3\u0351 blocks=Basic Latin,Bamum Supplement,Combining Diacritical Marks;radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u03c4 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u03c4 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic;radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u03d0 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u03d0 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic;radare2: .rodata) utf32le 76\ud81a\udcd3\u040c blocks=Basic Latin,Bamum Supplement,Cyrillic": 1,
                "radare2: .rodata) utf32le 76\ud81a\udcd3\u040c blocks=Basic Latin,Bamum Supplement,Cyrillic;radare2: .rodata) utf32le 7|\ud81a\udcd3y blocks=Basic Latin,Bamum Supplement": 1,
                "radare2: .rodata) utf32le 7|\ud81a\udcd3y blocks=Basic Latin,Bamum Supplement;radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u014a blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u014a blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-A;radare2: .rodata) utf32le 7\u00a6\ud81a\udcd3\u01b4 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 7\u00a6\ud81a\udcd3\u01b4 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le 7\u00a8\ud81a\udcd3\u01da blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B": 1,
                "radare2: .rodata) utf32le 7\u00a8\ud81a\udcd3\u01da blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Latin Extended-B;radare2: .rodata) utf32le 7\u00b0\ud81a\udcd3\u02ae blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions": 1,
                "radare2: .rodata) utf32le 7\u00b0\ud81a\udcd3\u02ae blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,IPA Extensions;radare2: .rodata) utf32le 7\u00b6\ud81a\udcd3\u02ef blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Spacing Modifier Letters": 1,
                "radare2: .rodata) utf32le 7\u00b6\ud81a\udcd3\u02ef blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Spacing Modifier Letters;radare2: .rodata) utf32le 7\u00bd\ud81a\udcd3\u0330 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Combining Diacritical Marks": 1,
                "radare2: .rodata) utf32le 7\u00bd\ud81a\udcd3\u0330 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Combining Diacritical Marks;radare2: .rodata) utf32le 7\u00c3\ud81a\udcd3\u0371 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 7\u00c3\ud81a\udcd3\u0371 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic;radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u03ec blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u03ec blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic;radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u03f8 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic": 1,
                "radare2: .rodata) utf32le 3\u00da\ud81a\udcd3\u03f8 blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Greek and Coptic;radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u050e blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Cyrillic Supplement": 1,
                "radare2: .rodata) utf32le 3\u00d2\ud81a\udcd3\u050e blocks=Basic Latin,Latin-1 Supplement,Bamum Supplement,Cyrillic Supplement;radare2: .rodata) utf32le Yx\ud85e\udd69\u045c blocks=Basic Latin,CJK Unified Ideographs Extension B,Cyrillic": 1,
                "radare2: .rodata) utf32le Yx\ud85e\udd69\u045c blocks=Basic Latin,CJK Unified Ideographs Extension B,Cyrillic;radare2: .rodata)  utf8 m\u06f6m\u06f6 blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 m\u06f6m\u06f6 blocks=Basic Latin,Arabic;radare2: .rodata) utf16le \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c blocks=Basic Latin,CJK Unified Ideographs Extension A": 1,
                "radare2: .rodata) utf16le \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c blocks=Basic Latin,CJK Unified Ideographs Extension A;radare2: .rodata) utf16le \"\"\"\"\"\"\"\"\u447f\u4400\u4400\u4400\u4400\u4400\u4400\u4400\u7f00 blocks=Basic Latin,CJK Unified Ideographs Extension A,CJK Unified Ideographs": 1,
                "radare2: .rodata) utf16le \"\"\"\"\"\"\"\"\u447f\u4400\u4400\u4400\u4400\u4400\u4400\u4400\u7f00 blocks=Basic Latin,CJK Unified Ideographs Extension A,CJK Unified Ideographs;radare2: (.rodata) ascii": 1,
                "radare2: (.rodata) ascii;radare2: .rodata)  utf8 m\u06f6m\u06ea blocks=Basic Latin,Arabic": 1,
                "radare2: .rodata)  utf8 m\u06f6m\u06ea blocks=Basic Latin,Arabic;radare2: .rodata)  utf8 <pQ\u0318 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .rodata)  utf8 <pQ\u0318 blocks=Basic Latin,Combining Diacritical Marks;radare2: .rodata)  utf8 C\u0760d@ blocks=Basic Latin,Arabic Supplement": 1,
                "radare2: .rodata)  utf8 C\u0760d@ blocks=Basic Latin,Arabic Supplement;radare2: .rodata)  utf8 333333\u04ff blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rodata)  utf8 333333\u04ff blocks=Basic Latin,Cyrillic;radare2: .rodata)  utf8 B.\u6fd4% blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rodata)  utf8 B.\u6fd4% blocks=Basic Latin,CJK Unified Ideographs;radare2: .rodata)  utf8 k[T(0": 1,
                "radare2: .rodata)  utf8 k[T(0;radare2: .noptrdata) utf32le 09!~az ~AZ": 1,
                "radare2: .noptrdata) utf32le 09!~az ~AZ;radare2: .noptrdata)  utf8 \\e6l\u062bM blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 \\e6l\u062bM blocks=Basic Latin,Arabic;radare2: .noptrdata) utf32le AZaz\\t\\t": 1,
                "radare2: .noptrdata) utf32le AZaz\\t\\t;radare2: .noptrdata) utf32le \\t\\r": 1,
                "radare2: .noptrdata) utf32le \\t\\r;radare2: .noptrdata) utf32le \\t\\n\\f\\r": 1,
                "radare2: .noptrdata) utf32le \\t\\n\\f\\r;radare2: .noptrdata) utf32le 09AZaz": 1,
                "radare2: .noptrdata) utf32le 09AZaz;radare2: .noptrdata) utf32le 09AFaf": 1,
                "radare2: .noptrdata) utf32le 09AFaf;radare2: .noptrdata) utf32le 09AZ__az!/:@[`{~09AZ__az": 1,
                "radare2: .noptrdata) utf32le 09AZ__az!/:@[`{~09AZ__az;radare2: .noptrdata)  utf8 ?HUUUUU\u017f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 ?HUUUUU\u017f blocks=Basic Latin,Latin Extended-A;radare2: .noptrdata) utf16le $\u00a2~\u00a3\u00a5 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata) utf16le $\u00a2~\u00a3\u00a5 blocks=Basic Latin,Latin-1 Supplement;radare2: .noptrdata) utf16le )]4}\u0f3b blocks=Basic Latin,Tibetan": 1,
                "radare2: .noptrdata) utf16le )]4}\u0f3b blocks=Basic Latin,Tibetan;radare2: .noptrdata) utf16le  0@P`p": 1,
                "radare2: .noptrdata) utf16le  0@P`p;radare2: .noptrdata) utf16le \\a\\b\u8009\\n\u800c\u800c\\r blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .noptrdata) utf16le \\a\\b\u8009\\n\u800c\u800c\\r blocks=Basic Latin,CJK Unified Ideographs;radare2: .noptrdata) utf16le \\e %&\u8028*058@\u8048JPU\u8060jp blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .noptrdata) utf16le \\e %&\u8028*058@\u8048JPU\u8060jp blocks=Basic Latin,CJK Unified Ideographs;radare2: .noptrdata) utf16le ([3{\u0f3a blocks=Basic Latin,Tibetan": 1,
                "radare2: .noptrdata) utf16le ([3{\u0f3a blocks=Basic Latin,Tibetan;radare2: .noptrdata)  utf8 x2+\u0176\u00caw blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 x2+\u0176\u00caw blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement;radare2: .noptrdata)  utf8 o$_jZkbkU\u051d blocks=Basic Latin,Cyrillic Supplement": 1,
                "radare2: .noptrdata)  utf8 o$_jZkbkU\u051d blocks=Basic Latin,Cyrillic Supplement;radare2: .noptrdata)  utf8 NgmkC": 1,
                "radare2: .noptrdata)  utf8 NgmkC;radare2: .noptrdata)  utf8 R;\u05b3) blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 R;\u05b3) blocks=Basic Latin,Hebrew;radare2: .noptrdata)  utf8 [j\u02fe9JLX blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .noptrdata)  utf8 [j\u02fe9JLX blocks=Basic Latin,Spacing Modifier Letters;radare2: .noptrdata)  utf8 \u0127~=d] blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0127~=d] blocks=Latin Extended-A,Basic Latin;radare2: .noptrdata) utf16le \\a\\b\\t\\n\\v\\f\\r": 1,
                "radare2: .noptrdata) utf16le \\a\\b\\t\\n\\v\\f\\r;radare2: .noptrdata) utf16le  !\"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`ABCDEFGHIJ\u212aLMNOPQR\u017fTUVWXYZ{|}~ blocks=Basic Latin,Letterlike Symbols,Latin Extended-A": 1,
                "radare2: .noptrdata) utf16le  !\"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`ABCDEFGHIJ\u212aLMNOPQR\u017fTUVWXYZ{|}~ blocks=Basic Latin,Letterlike Symbols,Latin Extended-A;radare2: .noptrdata)  utf8 ld?\u06cc_? blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 ld?\u06cc_? blocks=Basic Latin,Arabic;radare2: .noptrdata)  utf8 _+?\u0518(? blocks=Basic Latin,Cyrillic Supplement": 1,
                "radare2: .noptrdata)  utf8 _+?\u0518(? blocks=Basic Latin,Cyrillic Supplement;radare2: .noptrdata)  utf8 >A\u039a> blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 >A\u039a> blocks=Basic Latin,Greek and Coptic;radare2: .noptrdata)  utf8 u_>\u07f0Y> blocks=Basic Latin,NKo": 1,
                "radare2: .noptrdata)  utf8 u_>\u07f0Y> blocks=Basic Latin,NKo;radare2: .noptrdata)  utf8 S>\"MN>": 1,
                "radare2: .noptrdata)  utf8 S>\"MN>;radare2: .noptrdata)  utf8 8>\u02aa2>>H-> blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 8>\u02aa2>>H-> blocks=Basic Latin,IPA Extensions;radare2: .noptrdata)  utf8 =\ubdb1=L blocks=Basic Latin,Hangul Syllables": 1,
                "radare2: .noptrdata)  utf8 =\ubdb1=L blocks=Basic Latin,Hangul Syllables;radare2: .noptrdata)  utf8 hy={uh=\u01b9W= blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 hy={uh=\u01b9W= blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 M\\r<X\u0535; blocks=Basic Latin,Armenian": 1,
                "radare2: .noptrdata)  utf8 M\\r<X\u0535; blocks=Basic Latin,Armenian;radare2: .noptrdata)  utf8 ~\uf820~\\r blocks=Basic Latin,Private Use Area": 1,
                "radare2: .noptrdata)  utf8 ~\uf820~\\r blocks=Basic Latin,Private Use Area;radare2: .noptrdata)  utf8 ~u2~": 1,
                "radare2: .noptrdata)  utf8 ~u2~;radare2: .noptrdata)  utf8 ~'\u07e5~ blocks=Basic Latin,NKo": 1,
                "radare2: .noptrdata)  utf8 ~'\u07e5~ blocks=Basic Latin,NKo;radare2: .noptrdata)  utf8 /k\u0317/ blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 /k\u0317/ blocks=Basic Latin,Combining Diacritical Marks;radare2: .noptrdata)  utf8 \u055f/`J blocks=Armenian,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u055f/`J blocks=Armenian,Basic Latin;radare2: .noptrdata)  utf8 Y0\u02d1[0jr]0 blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .noptrdata)  utf8 Y0\u02d1[0jr]0 blocks=Basic Latin,Spacing Modifier Letters;radare2: .noptrdata) utf16le /:\\v;?": 1,
                "radare2: .noptrdata) utf16le /:\\v;?;radare2: .noptrdata) utf16le }\u00a1$\u00a7\u00ab blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata) utf16le }\u00a1$\u00a7\u00ab blocks=Basic Latin,Latin-1 Supplement;radare2: .noptrdata) utf16le $+\\a<>": 1,
                "radare2: .noptrdata) utf16le $+\\a<>;radare2: .noptrdata) utf16le  ~\u00a1\u0377\u037a blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "radare2: .noptrdata) utf16le  ~\u00a1\u0377\u037a blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic;radare2: .noptrdata)  utf8 QSeA~\u00e4 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 QSeA~\u00e4 blocks=Basic Latin,Latin-1 Supplement;radare2: .noptrdata)  utf8 v\u0308%L blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 v\u0308%L blocks=Basic Latin,Combining Diacritical Marks;radare2: .noptrdata)  utf8 *\u0140D5& blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 *\u0140D5& blocks=Basic Latin,Latin Extended-A;radare2: .noptrdata)  utf8 \u011dS.4 blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u011dS.4 blocks=Latin Extended-A,Basic Latin;radare2: .noptrdata)  utf8 \u056e='9-6d blocks=Armenian,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u056e='9-6d blocks=Armenian,Basic Latin;radare2: .noptrdata)  utf8 \u0184}$J blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0184}$J blocks=Latin Extended-B,Basic Latin;radare2: .noptrdata)  utf8 \u028c6\\v\u0518\u03c1 blocks=IPA Extensions,Basic Latin,Cyrillic Supplement,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 \u028c6\\v\u0518\u03c1 blocks=IPA Extensions,Basic Latin,Cyrillic Supplement,Greek and Coptic;radare2: .noptrdata)  utf8 a\u05daz\\f blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 a\u05daz\\f blocks=Basic Latin,Hebrew;radare2: .noptrdata)  utf8 \\f%\u2f0bI<(A blocks=Basic Latin,Kangxi Radicals": 1,
                "radare2: .noptrdata)  utf8 \\f%\u2f0bI<(A blocks=Basic Latin,Kangxi Radicals;radare2: .noptrdata)  utf8 \u010aS.4 blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u010aS.4 blocks=Latin Extended-A,Basic Latin;radare2: .noptrdata)  utf8 gwB\u8c3d blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .noptrdata)  utf8 gwB\u8c3d blocks=Basic Latin,CJK Unified Ideographs;radare2: .noptrdata)  utf8 \u0184 $J blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0184 $J blocks=Latin Extended-B,Basic Latin;radare2: .noptrdata)  utf8 ,}V\u06103\" blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 ,}V\u06103\" blocks=Basic Latin,Arabic;radare2: .noptrdata)  utf8 ~\u03fc!\\b blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 ~\u03fc!\\b blocks=Basic Latin,Greek and Coptic;radare2: .noptrdata)  utf8 5<Nt7\u0282 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 5<Nt7\u0282 blocks=Basic Latin,IPA Extensions;radare2: .noptrdata)  utf8 ,xQeF": 1,
                "radare2: .noptrdata)  utf8 ,xQeF;radare2: .noptrdata)  utf8 I)i\u024eD blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 I)i\u024eD blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 {7\u04e5\\b(0 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 {7\u04e5\\b(0 blocks=Basic Latin,Cyrillic;radare2: .noptrdata)  utf8 @\"\u0184  blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 @\"\u0184  blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 \u04e5\\b70 blocks=Cyrillic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u04e5\\b70 blocks=Cyrillic,Basic Latin;radare2: .noptrdata)  utf8 \u0221G\\n|| blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0221G\\n|| blocks=Latin Extended-B,Basic Latin;radare2: .noptrdata)  utf8 \u056e6'9-\\nd blocks=Armenian,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u056e6'9-\\nd blocks=Armenian,Basic Latin;radare2: .noptrdata)  utf8 \u0185}$J blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0185}$J blocks=Latin Extended-B,Basic Latin;radare2: .noptrdata)  utf8 \u02986\\v\u0526\u03c1 blocks=IPA Extensions,Basic Latin,Cyrillic Supplement,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 \u02986\\v\u0526\u03c1 blocks=IPA Extensions,Basic Latin,Cyrillic Supplement,Greek and Coptic;radare2: .noptrdata)  utf8 cc\u0184|| blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 cc\u0184|| blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 kk\u05b1oo blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 kk\u05b1oo blocks=Basic Latin,Hebrew;radare2: .noptrdata)  utf8 \u0151P00` blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0151P00` blocks=Latin Extended-A,Basic Latin;radare2: .noptrdata)  utf8 \u0303\\44h blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0303\\44h blocks=Combining Diacritical Marks,Basic Latin;radare2: .noptrdata)  utf8 \u062bS11b? blocks=Arabic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u062bS11b? blocks=Arabic,Basic Latin;radare2: .noptrdata)  utf8 \u01d5e##F^ blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u01d5e##F^ blocks=Latin Extended-B,Basic Latin;radare2: .noptrdata)  utf8 i''N\u0372 blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 i''N\u0372 blocks=Basic Latin,Greek and Coptic;radare2: .noptrdata)  utf8 \u06afc!!B0 blocks=Arabic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u06afc!!B0 blocks=Arabic,Basic Latin;radare2: .noptrdata)  utf8 \u0723f\"\"D~**T blocks=Syriac,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0723f\"\"D~**T blocks=Syriac,Basic Latin;radare2: .noptrdata)  utf8 \u020bY77n blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u020bY77n blocks=Latin Extended-B,Basic Latin;radare2: .noptrdata)  utf8 \u03efee\u028ezz blocks=Greek and Coptic,Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 \u03efee\u028ezz blocks=Greek and Coptic,Basic Latin,IPA Extensions;radare2: .noptrdata)  utf8 B>>|\u0135 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 B>>|\u0135 blocks=Basic Latin,Latin Extended-A;radare2: .noptrdata)  utf8 ,cc\u01a5|| blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 ,cc\u01a5|| blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 \\rkk\u05bdoo\u07b1 blocks=Basic Latin,Hebrew,Thaana": 1,
                "radare2: .noptrdata)  utf8 \\rkk\u05bdoo\u07b1 blocks=Basic Latin,Hebrew,Thaana;radare2: .noptrdata)  utf8 \u0151T00`P blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0151T00`P blocks=Latin Extended-A,Basic Latin;radare2: .noptrdata)  utf8 gg\u03a9++V} blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 gg\u03a9++V} blocks=Basic Latin,Greek and Coptic;radare2: .noptrdata)  utf8 \u0249@}} blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0249@}} blocks=Latin Extended-B,Basic Latin;radare2: .noptrdata)  utf8 \u0303O44h\\ blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0303O44h\\ blocks=Combining Diacritical Marks,Basic Latin;radare2: .noptrdata)  utf8 \u062bs11bS blocks=Arabic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u062bs11bS blocks=Arabic,Basic Latin;radare2: .noptrdata)  utf8 \u01d5R##Fe blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u01d5R##Fe blocks=Latin Extended-B,Basic Latin;radare2: .noptrdata)  utf8 4.\\e\\e6-nn\u0732ZZ blocks=Basic Latin,Syriac": 1,
                "radare2: .noptrdata)  utf8 4.\\e\\e6-nn\u0732ZZ blocks=Basic Latin,Syriac;radare2: .noptrdata)  utf8 \u06afu!!Bc blocks=Arabic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u06afu!!Bc blocks=Arabic,Basic Latin;radare2: .noptrdata)  utf8 \u0341L\\f\\f blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0341L\\f\\f blocks=Combining Diacritical Marks,Basic Latin;radare2: .noptrdata)  utf8 ==zGdd\u022c]] blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 ==zGdd\u022c]] blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 \u07a7y^^ blocks=Thaana,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u07a7y^^ blocks=Thaana,Basic Latin;radare2: .noptrdata)  utf8 \u020bC77nYmm\u06b7 blocks=Latin Extended-B,Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 \u020bC77nYmm\u06b7 blocks=Latin Extended-B,Basic Latin,Arabic;radare2: .noptrdata)  utf8 \u0571dNN blocks=Armenian,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0571dNN blocks=Armenian,Basic Latin;radare2: .noptrdata)  utf8 ll\u0634VV blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 ll\u0634VV blocks=Basic Latin,Arabic;radare2: .noptrdata)  utf8 %ee\u02afzz\udbfa\udfaeG blocks=Basic Latin,IPA Extensions,Supplementary Private Use Area-B": 1,
                "radare2: .noptrdata)  utf8 %ee\u02afzz\udbfa\udfaeG blocks=Basic Latin,IPA Extensions,Supplementary Private Use Area-B;radare2: .noptrdata)  utf8 \u0761|tt blocks=Arabic Supplement,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0761|tt blocks=Arabic Supplement,Basic Latin;radare2: .noptrdata)  utf8 ff\u032aHH blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 ff\u032aHH blocks=Basic Latin,Combining Diacritical Marks;radare2: .noptrdata)  utf8 aa\u00a355j_WW blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 aa\u00a355j_WW blocks=Basic Latin,Latin-1 Supplement;radare2: .noptrdata)  utf8 \"3ii\u04bb blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 \"3ii\u04bb blocks=Basic Latin,Cyrillic;radare2: .noptrdata)  utf8 \u0387IUU blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0387IUU blocks=Greek and Coptic,Basic Latin;radare2: .noptrdata)  utf8 hh\u0438AA blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 hh\u0438AA blocks=Basic Latin,Cyrillic;radare2: .noptrdata)  utf8 ,:c\u01a5c| blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 ,:c\u01a5c| blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 k\u05bdko\u07b1o\u0151T blocks=Basic Latin,Hebrew,Thaana,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 k\u05bdko\u07b1o\u0151T blocks=Basic Latin,Hebrew,Thaana,Latin Extended-A;radare2: .noptrdata)  utf8 g\u03a9g+V}+ blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 g\u03a9g+V}+ blocks=Basic Latin,Greek and Coptic;radare2: .noptrdata)  utf8 v\u028fE\u0282 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 v\u028fE\u0282 blocks=Basic Latin,IPA Extensions;radare2: .noptrdata)  utf8 \u0533g\u0522_ blocks=Armenian,Basic Latin,Cyrillic Supplement": 1,
                "radare2: .noptrdata)  utf8 \u0533g\u0522_ blocks=Armenian,Basic Latin,Cyrillic Supplement;radare2: .noptrdata)  utf8 r\\e[7u\u00b7 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 r\\e[7u\u00b7 blocks=Basic Latin,Latin-1 Supplement;radare2: .noptrdata)  utf8 #Fe#\u00dd^ blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 #Fe#\u00dd^ blocks=Basic Latin,Latin-1 Supplement;radare2: .noptrdata)  utf8 \\e6-\\en\u0732nZ blocks=Basic Latin,Syriac": 1,
                "radare2: .noptrdata)  utf8 \\e6-\\en\u0732nZ blocks=Basic Latin,Syriac;radare2: .noptrdata)  utf8 R;vM;\u05b7a\u05b3}\u03b3)R{) blocks=Basic Latin,Hebrew,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 R;vM;\u05b7a\u05b3}\u03b3)R{) blocks=Basic Latin,Hebrew,Greek and Coptic;radare2: .noptrdata)  utf8 [j\u053ej\u02cdF\u02feg\u067e9rK9J blocks=Basic Latin,Armenian,Spacing Modifier Letters,Arabic": 1,
                "radare2: .noptrdata)  utf8 [j\u053ej\u02cdF\u02feg\u067e9rK9J blocks=Basic Latin,Armenian,Spacing Modifier Letters,Arabic;radare2: .noptrdata)  utf8 wv\u06afu blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 wv\u06afu blocks=Basic Latin,Arabic;radare2: .noptrdata)  utf8 \u0113W\u0127U blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0113W\u0127U blocks=Latin Extended-A,Basic Latin;radare2: .noptrdata)  utf8 ~=zG=d\u022cd] blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 ~=zG=d\u022cd] blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 s` `": 1,
                "radare2: .noptrdata)  utf8 s` `;radare2: .noptrdata)  utf8 \u04fdn\u04ecC blocks=Cyrillic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u04fdn\u04ecC blocks=Cyrillic,Basic Latin;radare2: .noptrdata)  utf8 7nY7m\u06b7m blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 7nY7m\u06b7m blocks=Basic Latin,Arabic;radare2: .noptrdata)  utf8 l\u0634lV blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 l\u0634lV blocks=Basic Latin,Arabic;radare2: .noptrdata)  utf8 e\u02afez blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 e\u02afez blocks=Basic Latin,IPA Extensions;radare2: .noptrdata)  utf8 s\u01f4\u0197Q blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 s\u01f4\u0197Q blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 q\u0135f\u032afH blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 q\u0135f\u032afH blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks;radare2: .noptrdata)  utf8 a\u00a3a5j_5W blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 a\u00a3a5j_5W blocks=Basic Latin,Latin-1 Supplement;radare2: .noptrdata)  utf8 i\u04bbi\u0669p\u064e\\a blocks=Basic Latin,Cyrillic,Arabic": 1,
                "radare2: .noptrdata)  utf8 i\u04bbi\u0669p\u064e\\a blocks=Basic Latin,Cyrillic,Arabic;radare2: .noptrdata)  utf8 U(Px(\u07e5z\u07cc blocks=Basic Latin,NKo": 1,
                "radare2: .noptrdata)  utf8 U(Px(\u07e5z\u07cc blocks=Basic Latin,NKo;radare2: .noptrdata)  utf8 Bh\u0438hA blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 Bh\u0438hA blocks=Basic Latin,Cyrillic;radare2: .noptrdata)  utf8 \u05bdkk\u07b1oo blocks=Hebrew,Basic Latin,Thaana": 1,
                "radare2: .noptrdata)  utf8 \u05bdkk\u07b1oo blocks=Hebrew,Basic Latin,Thaana;radare2: .noptrdata)  utf8 \u03a9ggV}++ blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u03a9ggV}++ blocks=Greek and Coptic,Basic Latin;radare2: .noptrdata)  utf8 6-\\e\\e\u0732nn blocks=Basic Latin,Syriac": 1,
                "radare2: .noptrdata)  utf8 6-\\e\\e\u0732nn blocks=Basic Latin,Syriac;radare2: .noptrdata)  utf8 [[\u053ejj blocks=Basic Latin,Armenian": 1,
                "radare2: .noptrdata)  utf8 [[\u053ejj blocks=Basic Latin,Armenian;radare2: .noptrdata)  utf8 ~~zG==\u022cdd blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 ~~zG==\u022cdd blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 ss ``": 1,
                "radare2: .noptrdata)  utf8 ss ``;radare2: .noptrdata)  utf8 C\ufb2c\u0126bb9 blocks=Basic Latin,Alphabetic Presentation Forms,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 C\ufb2c\u0126bb9 blocks=Basic Latin,Alphabetic Presentation Forms,Latin Extended-A;radare2: .noptrdata)  utf8 nY77\u06b7mm blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 nY77\u06b7mm blocks=Basic Latin,Arabic;radare2: .noptrdata)  utf8 NNI\u0a69\u0634ll blocks=Basic Latin,Gurmukhi,Arabic": 1,
                "radare2: .noptrdata)  utf8 NNI\u0a69\u0634ll blocks=Basic Latin,Gurmukhi,Arabic;radare2: .noptrdata)  utf8 zzG\u9bae blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .noptrdata)  utf8 zzG\u9bae blocks=Basic Latin,CJK Unified Ideographs;radare2: .noptrdata)  utf8 \\b\\bo\u057a blocks=Basic Latin,Armenian": 1,
                "radare2: .noptrdata)  utf8 \\b\\bo\u057a blocks=Basic Latin,Armenian;radare2: .noptrdata)  utf8 KKa\u073d blocks=Basic Latin,Syriac": 1,
                "radare2: .noptrdata)  utf8 KKa\u073d blocks=Basic Latin,Syriac;radare2: .noptrdata)  utf8 pp|B>>q\u0135 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 pp|B>>q\u0135 blocks=Basic Latin,Latin Extended-A;radare2: .noptrdata)  utf8 \u00a3aaj_55 blocks=Latin-1 Supplement,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u00a3aaj_55 blocks=Latin-1 Supplement,Basic Latin;radare2: .noptrdata)  utf8 WWi\u0439 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 WWi\u0439 blocks=Basic Latin,Cyrillic;radare2: .noptrdata)  utf8 \\r\\re\u06bf blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 \\r\\re\u06bf blocks=Basic Latin,Arabic;radare2: .noptrdata)  utf8 BB\u0438hh blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 BB\u0438hh blocks=Basic Latin,Cyrillic;radare2: .noptrdata)  utf8 TTm\u05bb blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 TTm\u05bb blocks=Basic Latin,Hebrew;radare2: .noptrdata)  utf8 (_?x\\bY?\u0575S? blocks=Basic Latin,Armenian": 1,
                "radare2: .noptrdata)  utf8 (_?x\\bY?\u0575S? blocks=Basic Latin,Armenian;radare2: .noptrdata)  utf8 A\\b?\u012e blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 A\\b?\u012e blocks=Basic Latin,Latin Extended-A;radare2: .noptrdata)  utf8 >\\e\u023f> blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 >\\e\u023f> blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 z>\u0425w>@ blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 z>\u0425w>@ blocks=Basic Latin,Cyrillic;radare2: .noptrdata)  utf8 \\r>\u03e3\\v> blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 \\r>\u03e3\\v> blocks=Basic Latin,Greek and Coptic;radare2: .noptrdata)  utf8 <O\u0791<+ blocks=Basic Latin,Thaana": 1,
                "radare2: .noptrdata)  utf8 <O\u0791<+ blocks=Basic Latin,Thaana;radare2: .noptrdata)  utf8 t<\u0275e< blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 t<\u0275e< blocks=Basic Latin,IPA Extensions;radare2: .noptrdata)  utf8 t+<\u0185 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 t+<\u0185 blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 T/\u00aeW/ blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .noptrdata)  utf8 T/\u00aeW/ blocks=Basic Latin,Latin-1 Supplement;radare2: .noptrdata)  utf8 /M\\f/7": 1,
                "radare2: .noptrdata)  utf8 /M\\f/7;radare2: .noptrdata)  utf8 /a\u0317/T0 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 /a\u0317/T0 blocks=Basic Latin,Combining Diacritical Marks;radare2: .noptrdata)  utf8 /\ud51a/5 blocks=Basic Latin,Hangul Syllables": 1,
                "radare2: .noptrdata)  utf8 /\ud51a/5 blocks=Basic Latin,Hangul Syllables;radare2: .noptrdata)  utf8 \u019e/p. blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u019e/p. blocks=Latin Extended-B,Basic Latin;radare2: .noptrdata)  utf8 \u072f/'P blocks=Syriac,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u072f/'P blocks=Syriac,Basic Latin;radare2: .noptrdata)  utf8 \u0132/): blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0132/): blocks=Latin Extended-A,Basic Latin;radare2: .noptrdata)  utf8 F0\u05e2H0 blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 F0\u05e2H0 blocks=Basic Latin,Hebrew;radare2: .noptrdata)  utf8 V0\u03b4X0 blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 V0\u03b4X0 blocks=Basic Latin,Greek and Coptic;radare2: .noptrdata)  utf8 W\u03b6]y blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .noptrdata)  utf8 W\u03b6]y blocks=Basic Latin,Greek and Coptic;radare2: .noptrdata)  utf8 H8o\ua590 blocks=Basic Latin,Vai": 1,
                "radare2: .noptrdata)  utf8 H8o\ua590 blocks=Basic Latin,Vai;radare2: .noptrdata)  utf8 \u0308Po\\t\u033c blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0308Po\\t\u033c blocks=Combining Diacritical Marks,Basic Latin;radare2: .noptrdata)  utf8 \u020c8e\u07b0 blocks=Latin Extended-B,Basic Latin,Thaana": 1,
                "radare2: .noptrdata)  utf8 \u020c8e\u07b0 blocks=Latin Extended-B,Basic Latin,Thaana;radare2: .noptrdata)  utf8 \u03e7z^KD blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u03e7z^KD blocks=Greek and Coptic,Basic Latin;radare2: .noptrdata)  utf8 \u024a;n! blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u024a;n! blocks=Latin Extended-B,Basic Latin;radare2: .noptrdata)  utf8 Ls\u0534x blocks=Basic Latin,Armenian": 1,
                "radare2: .noptrdata)  utf8 Ls\u0534x blocks=Basic Latin,Armenian;radare2: .noptrdata)  utf8 a]4\ufc3d+ blocks=Basic Latin,Arabic Presentation Forms-A": 1,
                "radare2: .noptrdata)  utf8 a]4\ufc3d+ blocks=Basic Latin,Arabic Presentation Forms-A;radare2: .noptrdata)  utf8 d[\u05de\u05d2 blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 d[\u05de\u05d2 blocks=Basic Latin,Hebrew;radare2: .noptrdata)  utf8  Erj": 1,
                "radare2: .noptrdata)  utf8  Erj;radare2: .noptrdata)  utf8 b\\^9\u9e29NtH\u1b84\\ blocks=Basic Latin,CJK Unified Ideographs,Sundanese": 1,
                "radare2: .noptrdata)  utf8 b\\^9\u9e29NtH\u1b84\\ blocks=Basic Latin,CJK Unified Ideographs,Sundanese;radare2: .noptrdata)  utf8 \u06b79BA blocks=Arabic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u06b79BA blocks=Arabic,Basic Latin;radare2: .noptrdata)  utf8 \u01f6@_' blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u01f6@_' blocks=Latin Extended-B,Basic Latin;radare2: .noptrdata)  utf8 \u0204\u012f7& blocks=Latin Extended-B,Latin Extended-A,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0204\u012f7& blocks=Latin Extended-B,Latin Extended-A,Basic Latin;radare2: .noptrdata)  utf8 p@:\u0795 blocks=Basic Latin,Thaana": 1,
                "radare2: .noptrdata)  utf8 p@:\u0795 blocks=Basic Latin,Thaana;radare2: .noptrdata)  utf8 \u0480L+\" blocks=Cyrillic,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u0480L+\" blocks=Cyrillic,Basic Latin;radare2: .noptrdata)  utf8 #wn\u0277B3 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .noptrdata)  utf8 #wn\u0277B3 blocks=Basic Latin,IPA Extensions;radare2: .noptrdata)  utf8 Z\u063d}\" blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 Z\u063d}\" blocks=Basic Latin,Arabic;radare2: .noptrdata)  utf8 \\a'\\bz\u0328 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 \\a'\\bz\u0328 blocks=Basic Latin,Combining Diacritical Marks;radare2: .noptrdata)  utf8 |<\u066b^b blocks=Basic Latin,Arabic": 1,
                "radare2: .noptrdata)  utf8 |<\u066b^b blocks=Basic Latin,Arabic;radare2: .noptrdata)  utf8 v-:D": 1,
                "radare2: .noptrdata)  utf8 v-:D;radare2: .noptrdata)  utf8 \\aOr$t": 1,
                "radare2: .noptrdata)  utf8 \\aOr$t;radare2: .noptrdata)  utf8 \uf73c~=s\ua90f blocks=Private Use Area,Basic Latin,Kayah Li": 1,
                "radare2: .noptrdata)  utf8 \uf73c~=s\ua90f blocks=Private Use Area,Basic Latin,Kayah Li;radare2: .noptrdata)  utf8 \"yu\u0445 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 \"yu\u0445 blocks=Basic Latin,Cyrillic;radare2: .noptrdata)  utf8 )\u013c?'k blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .noptrdata)  utf8 )\u013c?'k blocks=Basic Latin,Latin Extended-A;radare2: .noptrdata)  utf8 =O2O)\u04c4 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 =O2O)\u04c4 blocks=Basic Latin,Cyrillic;radare2: .noptrdata)  utf8 \u023e`*{ blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .noptrdata)  utf8 \u023e`*{ blocks=Latin Extended-B,Basic Latin;radare2: .noptrdata)  utf8 >N\u0727V blocks=Basic Latin,Syriac": 1,
                "radare2: .noptrdata)  utf8 >N\u0727V blocks=Basic Latin,Syriac;radare2: .noptrdata)  utf8 eGD\\vq": 1,
                "radare2: .noptrdata)  utf8 eGD\\vq;radare2: .noptrdata)  utf8 @LmS\u0417 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .noptrdata)  utf8 @LmS\u0417 blocks=Basic Latin,Cyrillic;radare2: .noptrdata)  utf8 rU\\a\u0591T blocks=Basic Latin,Hebrew": 1,
                "radare2: .noptrdata)  utf8 rU\\a\u0591T blocks=Basic Latin,Hebrew;radare2: .noptrdata)  utf8 \\n\u0451|\u0615 blocks=Basic Latin,Cyrillic,Arabic": 1,
                "radare2: .noptrdata)  utf8 \\n\u0451|\u0615 blocks=Basic Latin,Cyrillic,Arabic;radare2: .noptrdata)  utf8 \\f\u01b0YJ blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .noptrdata)  utf8 \\f\u01b0YJ blocks=Basic Latin,Latin Extended-B;radare2: .noptrdata)  utf8 )Xe\u07a8.8 blocks=Basic Latin,Thaana": 1,
                "radare2: .noptrdata)  utf8 )Xe\u07a8.8 blocks=Basic Latin,Thaana;radare2: .noptrdata)  utf8 z\u0316ZSt; blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .noptrdata)  utf8 z\u0316ZSt; blocks=Basic Latin,Combining Diacritical Marks;radare2: .data)  utf8 Cn(\u068f blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 Cn(\u068f blocks=Basic Latin,Arabic;radare2: arch     x86": 1,
                "radare2: arch     x86;radare2: baddr    0x400000": 1,
                "radare2: baddr    0x400000;radare2: binsz    5232640": 1,
                "radare2: binsz    5232640;radare2: bintype  elf": 1,
                "radare2: bintype  elf;radare2: bits     64": 1,
                "radare2: bits     64;radare2: canary   false": 1,
                "radare2: canary   false;radare2: class    ELF64": 1,
                "radare2: class    ELF64;radare2: crypto   false": 1,
                "radare2: crypto   false;radare2: endian   little": 1,
                "radare2: endian   little;radare2: havecode true": 1,
                "radare2: havecode true;radare2: laddr    0x0": 1,
                "radare2: laddr    0x0;radare2: lang     go": 1,
                "radare2: lang     go;radare2: linenum  false": 1,
                "radare2: linenum  false;radare2: lsyms    false": 1,
                "radare2: lsyms    false;radare2: machine  AMD x86-64 architecture": 1,
                "radare2: machine  AMD x86-64 architecture;radare2: maxopsz  16": 1,
                "radare2: maxopsz  16;radare2: minopsz  1": 1,
                "radare2: minopsz  1;radare2: nx       true": 1,
                "radare2: nx       true;radare2: os       linux": 1,
                "radare2: os       linux;radare2: pcalign  0": 1,
                "radare2: pcalign  0;radare2: pic      false": 1,
                "radare2: pic      false;radare2: relocs   false": 1,
                "radare2: relocs   false;radare2: rpath    NONE": 1,
                "radare2: rpath    NONE;radare2: sanitiz  false": 1,
                "radare2: sanitiz  false;radare2: static   true": 1,
                "radare2: static   true;radare2: stripped true": 1,
                "radare2: stripped true;radare2: subsys   linux": 1,
                "radare2: subsys   linux;radare2: va       true": 1,
                "radare2: va       true;radare2: ELF64       0x464c457f": 1,
                "radare2: ELF64       0x464c457f;radare2: Type        0x0002": 1,
                "radare2: Type        0x0002;radare2: Machine     0x003e": 1,
                "radare2: Machine     0x003e;radare2: Version     0x00000001": 1,
                "radare2: Version     0x00000001;radare2: Entrypoint  0x004593c0": 1,
                "radare2: Entrypoint  0x004593c0;radare2: PhOff       0x00000040": 1,
                "radare2: PhOff       0x00000040;radare2: ShOff       0x000001c8": 1,
                "radare2: ShOff       0x000001c8;radare2: 5232640": 1,
                "radare2: 5232640;clamav: Cannot dlopen libclamunrar_iface: file not found - unrar support unavailable": 1,
                "clamav: Cannot dlopen libclamunrar_iface: file not found - unrar support unavailable;clamav: cli_loadftm: File type signature for Microsoft Windows Shortcut File not loaded (required f-level: 1??)": 1,
                "clamav: cli_loadftm: File type signature for Microsoft Windows Shortcut File not loaded (required f-level: 1??);clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 7?? bytes": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 7?? bytes;clamav: bytecode self test running": 1,
                "clamav: bytecode self test running;clamav: Bytecode 4?????????: executing in JIT mode": 1,
                "clamav: Bytecode 4?????????: executing in JIT mode;clamav: bytecode finished in 0 us": 1,
                "clamav: bytecode finished in 0 us;clamav: bytecode self test succeeded": 1,
                "clamav: bytecode self test succeeded;clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 1????? bytes": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 1????? bytes;clamav: Bytecode: 94 bytecode prepared with JIT": 1,
                "clamav: Bytecode: 94 bytecode prepared with JIT;clamav: Recognized ELF file": 1,
                "clamav: Recognized ELF file;clamav: in cli_scanelf": 1,
                "clamav: in cli_scanelf;clamav: ELF: ELF class 2 (64-bit)": 1,
                "clamav: ELF: ELF class 2 (64-bit);clamav: ELF: File is little-endian - conversion not required": 1,
                "clamav: ELF: File is little-endian - conversion not required;clamav: ELF: File type: Executable": 1,
                "clamav: ELF: File type: Executable;clamav: ELF: Machine type: AMD x86-64": 1,
                "clamav: ELF: Machine type: AMD x86-64;clamav: ELF: Number of program headers: 7": 1,
                "clamav: ELF: Number of program headers: 7;clamav: ELF: Program header table offset: 64": 1,
                "clamav: ELF: Program header table offset: 64;clamav: ELF: Segment #0": 1,
                "clamav: ELF: Segment #0;clamav: ELF: Segment type: 0x6": 1,
                "clamav: ELF: Segment type: 0x6;clamav: ELF: Segment offset: 0x40": 1,
                "clamav: ELF: Segment offset: 0x40;clamav: ELF: Segment virtual address: 0x4?????": 1,
                "clamav: ELF: Segment virtual address: 0x4?????;clamav: ELF: Segment real size: 0x1??": 1,
                "clamav: ELF: Segment real size: 0x1??;clamav: ELF: Segment virtual size: 0x1??": 1,
                "clamav: ELF: Segment virtual size: 0x1??;clamav: ELF: Segment #1": 1,
                "clamav: ELF: Segment #1;clamav: ELF: Segment type: 0x4": 1,
                "clamav: ELF: Segment type: 0x4;clamav: ELF: Segment offset: 0xf??": 1,
                "clamav: ELF: Segment offset: 0xf??;clamav: ELF: Segment real size: 0x64": 1,
                "clamav: ELF: Segment real size: 0x64;clamav: ELF: Segment virtual size: 0x64": 1,
                "clamav: ELF: Segment virtual size: 0x64;clamav: ELF: Segment #2": 1,
                "clamav: ELF: Segment #2;clamav: ELF: Segment type: 0x1": 1,
                "clamav: ELF: Segment type: 0x1;clamav: ELF: Segment offset: 0x0": 1,
                "clamav: ELF: Segment offset: 0x0;clamav: ELF: Segment real size: 0x2?????": 1,
                "clamav: ELF: Segment real size: 0x2?????;clamav: ELF: Segment virtual size: 0x2?????": 1,
                "clamav: ELF: Segment virtual size: 0x2?????;clamav: ELF: Segment #3": 1,
                "clamav: ELF: Segment #3;clamav: ELF: Segment offset: 0x2?????": 1,
                "clamav: ELF: Segment offset: 0x2?????;clamav: ELF: Segment virtual address: 0x6?????": 1,
                "clamav: ELF: Segment virtual address: 0x6?????;clamav: ELF: Segment #4": 1,
                "clamav: ELF: Segment #4;clamav: ELF: Segment offset: 0x4?????": 1,
                "clamav: ELF: Segment offset: 0x4?????;clamav: ELF: Segment virtual address: 0x8?????": 1,
                "clamav: ELF: Segment virtual address: 0x8?????;clamav: ELF: Segment real size: 0x5????": 1,
                "clamav: ELF: Segment real size: 0x5????;clamav: ELF: Segment virtual size: 0x7????": 1,
                "clamav: ELF: Segment virtual size: 0x7????;clamav: ELF: Segment #5": 1,
                "clamav: ELF: Segment #5;clamav: ELF: Segment type: 0x6???????": 1,
                "clamav: ELF: Segment type: 0x6???????;clamav: ELF: Segment virtual address: 0x0": 1,
                "clamav: ELF: Segment virtual address: 0x0;clamav: ELF: Segment real size: 0x0": 1,
                "clamav: ELF: Segment real size: 0x0;clamav: ELF: Segment virtual size: 0x0": 1,
                "clamav: ELF: Segment virtual size: 0x0;clamav: ELF: Segment #6": 1,
                "clamav: ELF: Segment #6;clamav: ELF: Entry point address: 0x00000000004?????": 1,
                "clamav: ELF: Entry point address: 0x00000000004?????;clamav: ELF: Entry point offset: 0x000000000005???? (3?????)": 1,
                "clamav: ELF: Entry point offset: 0x000000000005???? (3?????);clamav: ELF: Number of sections: 13": 1,
                "clamav: ELF: Number of sections: 13;clamav: ELF: Section header table offset: 4??": 1,
                "clamav: ELF: Section header table offset: 4??;clamav: ELF: Section 0": 1,
                "clamav: ELF: Section 0;clamav: ELF: Section offset: 0": 1,
                "clamav: ELF: Section offset: 0;clamav: ELF: Section size: 0": 1,
                "clamav: ELF: Section size: 0;clamav: ELF: Section type: Null (no associated section)": 1,
                "clamav: ELF: Section type: Null (no associated section);clamav: ELF: Section 1": 1,
                "clamav: ELF: Section 1;clamav: ELF: Section offset: 4???": 1,
                "clamav: ELF: Section offset: 4???;clamav: ELF: Section size: 2??????": 1,
                "clamav: ELF: Section size: 2??????;clamav: ELF: Section type: Program information": 1,
                "clamav: ELF: Section type: Program information;clamav: ELF: Section occupies memory": 1,
                "clamav: ELF: Section occupies memory;clamav: ELF: Section contains executable code": 1,
                "clamav: ELF: Section contains executable code;clamav: ELF: Section 2": 1,
                "clamav: ELF: Section 2;clamav: ELF: Section offset: 2??????": 1,
                "clamav: ELF: Section offset: 2??????;clamav: ELF: Section size: 1??????": 1,
                "clamav: ELF: Section size: 1??????;clamav: ELF: Section 3": 1,
                "clamav: ELF: Section 3;clamav: ELF: Section offset: 3??????": 1,
                "clamav: ELF: Section offset: 3??????;clamav: ELF: Section size: 1??": 1,
                "clamav: ELF: Section size: 1??;clamav: ELF: Section type: String table": 1,
                "clamav: ELF: Section type: String table;clamav: ELF: Section 4": 1,
                "clamav: ELF: Section 4;clamav: ELF: Section size: 7???": 1,
                "clamav: ELF: Section size: 7???;clamav: ELF: Section 5": 1,
                "clamav: ELF: Section 5;clamav: ELF: Section size: 1???": 1,
                "clamav: ELF: Section size: 1???;clamav: ELF: Section 6": 1,
                "clamav: ELF: Section 6;clamav: ELF: Section 7": 1,
                "clamav: ELF: Section 7;clamav: ELF: Section 8": 1,
                "clamav: ELF: Section 8;clamav: ELF: Section offset: 4??????": 1,
                "clamav: ELF: Section offset: 4??????;clamav: ELF: Section size: 3?????": 1,
                "clamav: ELF: Section size: 3?????;clamav: ELF: Section contains writable data": 1,
                "clamav: ELF: Section contains writable data;clamav: ELF: Section 9": 1,
                "clamav: ELF: Section 9;clamav: ELF: Section offset: 5??????": 1,
                "clamav: ELF: Section offset: 5??????;clamav: ELF: Section size: 3????": 1,
                "clamav: ELF: Section size: 3????;clamav: ELF: Section 10": 1,
                "clamav: ELF: Section 10;clamav: ELF: Section size: 1?????": 1,
                "clamav: ELF: Section size: 1?????;clamav: ELF: Section type: Empty section (NOBITS)": 1,
                "clamav: ELF: Section type: Empty section (NOBITS);clamav: ELF: Section 11": 1,
                "clamav: ELF: Section 11;clamav: ELF: Section size: 1????": 1,
                "clamav: ELF: Section size: 1????;clamav: ELF: Section 12": 1,
                "clamav: ELF: Section 12;clamav: ELF: Section offset: 3???": 1,
                "clamav: ELF: Section offset: 3???;clamav: ELF: Section type: Note section": 1,
                "clamav: ELF: Section type: Note section;clamav: in cli_elfheader": 1,
                "clamav: in cli_elfheader;clamav: Matched signature for file type ZIP-SFX at 7?????": 1,
                "clamav: Matched signature for file type ZIP-SFX at 7?????;clamav: ZIP/ZIP-SFX signature found at 7?????": 1,
                "clamav: ZIP/ZIP-SFX signature found at 7?????;clamav: in cli_unzip_single": 1,
                "clamav: in cli_unzip_single;clamav: cli_unzip: lh - ZMDNAME:0:$pH\ufffdQ\u0016H\ufffd\ufffd\u0002\u000f\ufffd\ufffd:8??:2?????????:8348ffff:0:0:1": 1,
                "clamav: cli_unzip: lh - ZMDNAME:0:$pH\ufffdQ\u0016H\ufffd\ufffd\u0002\u000f\ufffd\ufffd:8??:2?????????:8348ffff:0:0:1;clamav: CDBNAME:CL_TYPE_ZIP:2?????????:$pH\ufffdQ\u0016H\ufffd\ufffd\u0002\u000f\ufffd\ufffd:2?????????:8??:0:0:2?????????:(nil)": 1,
                "clamav: CDBNAME:CL_TYPE_ZIP:2?????????:$pH\ufffdQ\u0016H\ufffd\ufffd\u0002\u000f\ufffd\ufffd:2?????????:8??:0:0:2?????????:(nil);clamav: cli_unzip: lh - has data desc": 1,
                "clamav: cli_unzip: lh - has data desc;clamav: cli_magic_scandesc: returning 0  at line 2???": 1,
                "clamav: cli_magic_scandesc: returning 0  at line 2???;clamav: malware family: OK": 1,
                "clamav: malware family: OK;clamav: OK": 1,
                "clamav: OK;clamav: Scanned files: 1": 1,
                "clamav: Scanned files: 1;clamav: Infected files: 0": 1,
                "File type: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, stripped": 1,
                "File type segment: ELF 64-bit LSB executable": 1,
                "File type word: ELF": 1,
                "File type word: 64-bit": 1,
                "File type word: LSB": 1,
                "File type word: executable": 1,
                "File type segment:  x86-64": 1,
                "File type word: x86-64": 1,
                "File type segment:  version 1 (SYSV)": 1,
                "File type word: version": 1,
                "File type word: 1": 1,
                "File type word: (SYSV)": 1,
                "File type segment:  statically linked": 1,
                "File type word: statically": 1,
                "File type word: linked": 1,
                "File type segment:  stripped": 1,
                "File type word: stripped": 1,
                "blob file types: ": 1
            }
        }
    ]
}