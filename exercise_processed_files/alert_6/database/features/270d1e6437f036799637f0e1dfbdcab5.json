{
    "filepath": "/home/chris/data/rpe005/malware_samples_exercise/20190522_110020_rpe005_malware_alert/6fb5e8ee[1].js",
    "fileinfo": {
        "labels": {
            "family": "bad_sample_6",
            "software": "test_file"
        },
        "md5": "270d1e6437f036799637f0e1dfbdcab5",
        "type": "ASCII text, with very long lines, with no line terminators",
        "clamav": "OK",
        "blobs": "Extracted 1 blobs (1 ASCII)"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {}
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "var IPv6Tests": 1,
                "(function(n){function c(t){var r,c,o,l,f,s,i,a,v": 2,
                "try{if(y(),t==null||t.length==0)return": 2,
                "if(r=sj_cook.get(n.ipv6testcookie,n.ipv6testcrumb),r!=null&&r==\"1\"&&!u)return": 2,
                "if(c=sj_cook.get(n.ipv6testcookie,n.iptypecrumb),r!=null&&c&&u&&(o=Number(r),l=(new Date).getTime(),o!=NaN&&o>l))return": 1,
                "if(f=_d.getElementsByTagName(\"head\")[0],!f)return": 1,
                "if(s=\"ipV6TestScript\"+t,i=sj_ce(\"script\",s),i.type=\"text/javascript\",i.async=!0,i.onerror=function(){Log.Log(\"ipv6test\",\"IPv6Test Dom_ \"+t,\"IPv6TestError\",!1,\"Error\",\"JSONP call resulted in error.\")},a=_ge(s),a&&f)return": 1,
                "f.insertBefore(i,f.firstChild)": 1,
                "i.setAttribute(\"src\",_w.location.protocol+\"//\"+t+\".bing.com/ipv6test/test\")": 1,
                "e&&p()": 2,
                "v=u?(new Date).getTime()+h:\"1\"": 1,
                "sj_cook.set(n.ipv6testcookie,n.ipv6testcrumb,v.toString(),!1)}catch(w){Log.Log(\"ipv6test\",\"Dom_ \"+t,\"IPv6TestError\",!1,\"Error\",\"Failed to make JSONP call. Exception - \"+w.message)}}function l(t){if(!t){Log.Log(\"ipv6test\",\"IPv6TestResponseError\",\"IPv6TestError\",!1,\"Error\",\"Got null response from endpoint.\")": 1,
                "return}try{var i=JSON.parse(a(t)),r=i&&i.type?i.type:\"0\"": 1,
                "f==\"6\"&&(r=f)": 2,
                "sj_cook.set(n.ipv6testcookie,n.iptypecrumb,r,!1)}catch(u){Log.Log(\"ipv6test\",\"IPv6ResponseError\",\"IPv6TestError\",!1,\"Error\",\"Failed to parse response. Exception - \"+u.message)}}function a(n){var t=sj_ce(\"textarea\")": 1,
                "return t.innerHTML=n,t.value}function v(){o?n.PingServer(r):_d.body.addEventListener&&(_d.body.addEventListener(\"DOMNodeInserted\",i),_d.body.addEventListener(\"DOMNodeRemoved\",i))}function y(){_d.body.removeEventListener&&(_d.body.removeEventListener(\"DOMNodeInserted\",i),_d.body.removeEventListener(\"DOMNodeRemoved\",i))}function i(){try{t!=null&&(clearInterval(t),t=null)": 1,
                "t=setTimeout(function(){n.PingServer(r)},1e3)}catch(i){Log.Log(\"ipv6test\",\"IPv6TestPingError\",\"IPv6TestError\",!1,\"Error\",\"Exception initiating ping-\"+i.message)}}function p(){var n=new XMLHttpRequest": 1,
                "n.open(\"GET\",\"/ipv6test/test?FORM=MONITR\",!0)": 1,
                "n.overrideMimeType&&n.overrideMimeType(\"text/plain\")": 1,
                "n.send()}function w(t,i,u){t!=null&&t===\"6\"&&(r=s,f=t)": 2,
                "typeof i==\"boolean\"&&(e=i)": 2,
                "typeof u==\"boolean\"&&(o=u)": 2,
                "try{sj_evt.bind(\"onP1\",n.observeDOMChanges,!0)}catch(h){Log.Log(\"ipv6test\",\"IPv6TestBindError\",\"IPv6TestError\",!1,\"Error\",\"Exception binding onP1 - \"+h.message)}}n.ipv6testcookie=\"ipv6\"": 1,
                "n.ipv6testcrumb=\"hit\"": 2,
                "n.iptypecrumb=\"t\"": 2,
                "var t,s=\"4\",r=\"www2\",u=!0,h=36e5,f=\"4\",e=!1,o=!1": 2,
                "n.PingServer=c": 1,
                "n.TestIPv6Response=l": 1,
                "n.observeDOMChanges=v": 1,
                "n.Init=w})(IPv6Tests||(IPv6Tests={})),function(){try{typeof ipd!=\"undefined\"&&ipd!=null&&IPv6Tests.Init(ipd.ipt,ipd.secall,ipd.pd)}catch(n){Log.Log(\"ipv6test\",\"IPv6TestInitError\",\"IPv6TestError\",!1,\"Error\",\"Exception calling init method - \"+n.message)}}()": 1,
                "word: function": 24,
                "word: length": 2,
                "word: return": 14,
                "word: testcookie": 10,
                "word: testcrumb": 6,
                "word: iptypecrumb": 6,
                "word: number": 2,
                "word: gettime": 4,
                "word: getelementsbytagname": 2,
                "word: testscript": 2,
                "word: script": 2,
                "word: javascript": 2,
                "word: onerror": 2,
                "word: testerror": 14,
                "word: resulted": 2,
                "word: insertbefore": 2,
                "word: firstchild": 2,
                "word: setattribute": 2,
                "word: location": 2,
                "word: protocol": 2,
                "word: tostring": 2,
                "word: failed": 4,
                "word: exception": 10,
                "word: message": 10,
                "word: testresponseerror": 2,
                "word: response": 6,
                "word: endpoint": 2,
                "word: responseerror": 2,
                "word: textarea": 2,
                "word: innerhtml": 2,
                "word: pingserver": 6,
                "word: addeventlistener": 6,
                "word: domnodeinserted": 4,
                "word: domnoderemoved": 4,
                "word: removeeventlistener": 6,
                "word: clearinterval": 2,
                "word: settimeout": 2,
                "word: testpingerror": 2,
                "word: initiating": 2,
                "word: xmlhttprequest": 2,
                "word: monitr": 2,
                "word: overridemimetype": 4,
                "word: typeof": 6,
                "word: boolean": 4,
                "word: observedomchanges": 4,
                "word: testbinderror": 2,
                "word: binding": 2,
                "word: testipv": 2,
                "word: undefined": 2,
                "word: secall": 2,
                "word: testiniterror": 2,
                "word: calling": 2,
                "word: method": 2,
                "special: t.length": 2,
                "special: cook.get": 4,
                "special: n.ipv6testcookie": 10,
                "special: n.ipv6testcrumb": 6,
                "special: n.iptypecrumb": 6,
                "special: d.getElementsByTagName": 1,
                "special: i.type": 6,
                "special: i.async": 2,
                "special: i.onerror": 2,
                "special: Log.Log": 7,
                "special: f.insertBefore": 1,
                "special: f.firstChild": 1,
                "special: i.setAttribute": 1,
                "special: w.location.protocol": 2,
                "special: bing.com": 2,
                "special: cook.set": 4,
                "special: v.toString": 1,
                "special: w.message": 2,
                "special: JSON.parse": 1,
                "special: u.message": 2,
                "special: t.innerHTML": 1,
                "special: t.value": 2,
                "special: n.PingServer": 3,
                "special: d.body.addEventListener": 3,
                "special: d.body.removeEventListener": 3,
                "special: i.message": 2,
                "special: n.open": 2,
                "special: n.overrideMimeType": 2,
                "special: n.send": 2,
                "special: evt.bind": 2,
                "special: n.observeDOMChanges": 2,
                "special: h.message": 2,
                "special: n.TestIPv6Response": 1,
                "special: n.Init": 1,
                "special: IPv6Tests.Init": 1,
                "special: ipd.ipt": 2,
                "special: ipd.secall": 2,
                "special: ipd.pd": 2,
                "special: n.message": 2,
                "special: text/javascript": 2,
                "special: com/ipv6test/test": 2,
                "special: ipv6test/test": 2,
                "special: text/plain": 2,
                "var ipv6tests": 1,
                "if(c=sj_cook.get(n.ipv6testcookie,n.iptypecrumb),r!=null&&c&&u&&(o=number(r),l=(new date).gettime(),o!=nan&&o>l))return": 1,
                "if(f=_d.getelementsbytagname(\"head\")[0],!f)return": 1,
                "if(s=\"ipv6testscript\"+t,i=sj_ce(\"script\",s),i.type=\"text/javascript\",i.async=!0,i.onerror=function(){log.log(\"ipv6test\",\"ipv6test dom_ \"+t,\"ipv6testerror\",!1,\"error\",\"jsonp call resulted in error.\")},a=_ge(s),a&&f)return": 1,
                "f.insertbefore(i,f.firstchild)": 1,
                "i.setattribute(\"src\",_w.location.protocol+\"//\"+t+\".bing.com/ipv6test/test\")": 1,
                "v=u?(new date).gettime()+h:\"1\"": 1,
                "sj_cook.set(n.ipv6testcookie,n.ipv6testcrumb,v.tostring(),!1)}catch(w){log.log(\"ipv6test\",\"dom_ \"+t,\"ipv6testerror\",!1,\"error\",\"failed to make jsonp call. exception - \"+w.message)}}function l(t){if(!t){log.log(\"ipv6test\",\"ipv6testresponseerror\",\"ipv6testerror\",!1,\"error\",\"got null response from endpoint.\")": 1,
                "return}try{var i=json.parse(a(t)),r=i&&i.type?i.type:\"0\"": 1,
                "sj_cook.set(n.ipv6testcookie,n.iptypecrumb,r,!1)}catch(u){log.log(\"ipv6test\",\"ipv6responseerror\",\"ipv6testerror\",!1,\"error\",\"failed to parse response. exception - \"+u.message)}}function a(n){var t=sj_ce(\"textarea\")": 1,
                "return t.innerhtml=n,t.value}function v(){o?n.pingserver(r):_d.body.addeventlistener&&(_d.body.addeventlistener(\"domnodeinserted\",i),_d.body.addeventlistener(\"domnoderemoved\",i))}function y(){_d.body.removeeventlistener&&(_d.body.removeeventlistener(\"domnodeinserted\",i),_d.body.removeeventlistener(\"domnoderemoved\",i))}function i(){try{t!=null&&(clearinterval(t),t=null)": 1,
                "t=settimeout(function(){n.pingserver(r)},1e3)}catch(i){log.log(\"ipv6test\",\"ipv6testpingerror\",\"ipv6testerror\",!1,\"error\",\"exception initiating ping-\"+i.message)}}function p(){var n=new xmlhttprequest": 1,
                "n.open(\"get\",\"/ipv6test/test?form=monitr\",!0)": 1,
                "n.overridemimetype&&n.overridemimetype(\"text/plain\")": 1,
                "try{sj_evt.bind(\"onp1\",n.observedomchanges,!0)}catch(h){log.log(\"ipv6test\",\"ipv6testbinderror\",\"ipv6testerror\",!1,\"error\",\"exception binding onp1 - \"+h.message)}}n.ipv6testcookie=\"ipv6\"": 1,
                "n.pingserver=c": 1,
                "n.testipv6response=l": 1,
                "n.observedomchanges=v": 1,
                "n.init=w})(ipv6tests||(ipv6tests={})),function(){try{typeof ipd!=\"undefined\"&&ipd!=null&&ipv6tests.init(ipd.ipt,ipd.secall,ipd.pd)}catch(n){log.log(\"ipv6test\",\"ipv6testiniterror\",\"ipv6testerror\",!1,\"error\",\"exception calling init method - \"+n.message)}}()": 1,
                "special: d.getelementsbytagname": 1,
                "special: log.log": 7,
                "special: f.insertbefore": 1,
                "special: f.firstchild": 1,
                "special: i.setattribute": 1,
                "special: v.tostring": 1,
                "special: json.parse": 1,
                "special: t.innerhtml": 1,
                "special: n.pingserver": 3,
                "special: d.body.addeventlistener": 3,
                "special: d.body.removeeventlistener": 3,
                "special: n.overridemimetype": 2,
                "special: n.observedomchanges": 2,
                "special: n.testipv6response": 1,
                "special: n.init": 1,
                "special: ipv6tests.init": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "clamav: Cannot dlopen libclamunrar_iface: file not found - unrar support unavailable": 1,
                "clamav: cli_loadftm: File type signature for Microsoft Windows Shortcut File not loaded (required f-level: 1??)": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 7?? bytes": 1,
                "clamav: bytecode self test running": 1,
                "clamav: Bytecode 4?????????: executing in JIT mode": 1,
                "clamav: bytecode finished in 0 us": 1,
                "clamav: bytecode self test succeeded": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 1????? bytes": 1,
                "clamav: Bytecode: 94 bytecode prepared with JIT": 1,
                "clamav: Recognized ASCII text": 1,
                "clamav: cli_magic_scandesc: returning 0  at line 2???": 1,
                "clamav: malware family: OK": 1,
                "clamav: OK": 1,
                "clamav: Scanned files: 1": 1,
                "clamav: Infected files: 0": 1,
                "clamav: extracted blobs": 1,
                "clamav: extracted 1 blobs": 1,
                "clamav: blob size: 2???": 1,
                "clamav: Cannot dlopen libclamunrar_iface: file not found - unrar support unavailable;clamav: cli_loadftm: File type signature for Microsoft Windows Shortcut File not loaded (required f-level: 1??)": 1,
                "clamav: cli_loadftm: File type signature for Microsoft Windows Shortcut File not loaded (required f-level: 1??);clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 7?? bytes": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 7?? bytes;clamav: bytecode self test running": 1,
                "clamav: bytecode self test running;clamav: Bytecode 4?????????: executing in JIT mode": 1,
                "clamav: Bytecode 4?????????: executing in JIT mode;clamav: bytecode finished in 0 us": 1,
                "clamav: bytecode finished in 0 us;clamav: bytecode self test succeeded": 1,
                "clamav: bytecode self test succeeded;clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 1????? bytes": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 1????? bytes;clamav: Bytecode: 94 bytecode prepared with JIT": 1,
                "clamav: Bytecode: 94 bytecode prepared with JIT;clamav: Recognized ASCII text": 1,
                "clamav: Recognized ASCII text;clamav: cli_magic_scandesc: returning 0  at line 2???": 1,
                "clamav: cli_magic_scandesc: returning 0  at line 2???;clamav: malware family: OK": 1,
                "clamav: malware family: OK;clamav: OK": 1,
                "clamav: OK;clamav: Scanned files: 1": 1,
                "clamav: Scanned files: 1;clamav: Infected files: 0": 1,
                "clamav: Infected files: 0;clamav: extracted blobs": 1,
                "clamav: extracted blobs;clamav: extracted 1 blobs": 1,
                "clamav: extracted 1 blobs;clamav: blob size: 2???": 1,
                "File type: ASCII text, with very long lines, with no line terminators": 1,
                "File type segment: ASCII text": 1,
                "File type word: ASCII": 1,
                "File type word: text": 1,
                "File type segment:  with very long lines": 1,
                "File type word: with": 2,
                "File type word: very": 1,
                "File type word: long": 1,
                "File type word: lines": 1,
                "File type segment:  with no line terminators": 1,
                "File type word: no": 1,
                "File type word: line": 1,
                "File type word: terminators": 1,
                "Extracted blob: ASCII text, with very long lines, with no line terminators": 1,
                "blob file types: ASCII": 1
            }
        }
    ]
}