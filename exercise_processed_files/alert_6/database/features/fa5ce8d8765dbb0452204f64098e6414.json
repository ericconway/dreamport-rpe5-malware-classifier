{
    "filepath": "/home/chris/data/rpe005/malware_samples_exercise/20190522_110020_rpe005_malware_alert/gwd-events-support.1.0[1].js",
    "fileinfo": {
        "labels": {
            "family": "bad_sample_6",
            "software": "test_file"
        },
        "md5": "fa5ce8d8765dbb0452204f64098e6414",
        "type": "ASCII text, with very long lines, with no line terminators",
        "clamav": "OK",
        "blobs": "Extracted 1 blobs (1 ASCII)"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {}
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "var gwd=gwd||{}": 2,
                "gwd.actions=gwd.actions||{}": 2,
                "gwd.actions.events=gwd.actions.events||{}": 2,
                "gwd.actions.events.getElementById=function(id){var element=document.getElementById(id)": 1,
                "if(!element){var pageDeck=document.querySelector(\"[is=gwd-pagedeck]\")": 1,
                "if(pageDeck){if(typeof pageDeck.getElementById===\"function\"){element=pageDeck.getElementById(id)}}}if(!element){switch(id){case\"document.body\":element=document.body": 1,
                "case\"document\":element=document": 2,
                "case\"window\":element=window": 2,
                "default:break}}return element}": 2,
                "gwd.actions.events.addHandler=function(eventTarget,eventName,eventHandler,useCapture){var targetElement=gwd.actions.events.getElementById(eventTarget)": 1,
                "if(targetElement){targetElement.addEventListener(eventName,eventHandler,useCapture)}}": 1,
                "gwd.actions.events.removeHandler=function(eventTarget,eventName,eventHandler,useCapture){var targetElement=gwd.actions.events.getElementById(eventTarget)": 1,
                "if(targetElement){targetElement.removeEventListener(eventName,eventHandler,useCapture)}}": 1,
                "gwd.actions.events.setInlineStyle=function(id,styles){var element=gwd.actions.events.getElementById(id)": 1,
                "if(!element||!styles){return}var transitionProperty=element.style.transition!==undefined?\"transition\":\"-webkit-transition\"": 1,
                "var prevTransition=element.style[transitionProperty]": 1,
                "var splitStyles=styles.split(/\\s*": 1,
                "var nameValue": 1,
                "splitStyles.forEach(function(splitStyle){if(splitStyle){var regex=new RegExp(\"[:](?![/]{2})\")": 1,
                "nameValue=splitStyle.split(regex)": 1,
                "nameValue[1]=nameValue[1]?nameValue[1].trim():null": 1,
                "if(!(nameValue[0]&&nameValue[1])){return}element.style.setProperty(nameValue[0],nameValue[1])}})": 1,
                "function restoreTransition(event){var el=event.target": 1,
                "el.style.transition=prevTransition": 1,
                "el.removeEventListener(event.type,restoreTransition,false)}element.addEventListener(\"transitionend\",restoreTransition,false)": 1,
                "element.addEventListener(\"webkitTransitionEnd\",restoreTransition,false)}": 1,
                "gwd.actions.gwdDoubleclick=gwd.actions.gwdDoubleclick||{}": 1,
                "gwd.actions.gwdDoubleclick.exit=function(receiver,exitId,url,opt_collapseOnExit,opt_pauseMedia,opt_pageId){gwd.actions.events.getElementById(receiver).exit(exitId,url,opt_collapseOnExit,opt_pauseMedia,opt_pageId)}": 1,
                "word: actions": 30,
                "word: events": 20,
                "word: getelementbyid": 16,
                "word: function": 16,
                "word: element": 30,
                "word: document": 12,
                "word: pagedeck": 10,
                "word: queryselector": 2,
                "word: typeof": 2,
                "word: switch": 2,
                "word: window": 4,
                "word: default": 2,
                "word: return": 6,
                "word: addhandler": 2,
                "word: eventtarget": 8,
                "word: eventname": 8,
                "word: eventhandler": 8,
                "word: usecapture": 8,
                "word: targetelement": 12,
                "word: addeventlistener": 6,
                "word: removehandler": 2,
                "word: removeeventlistener": 4,
                "word: setinlinestyle": 2,
                "word: styles": 6,
                "word: transitionproperty": 4,
                "word: transition": 8,
                "word: undefined": 2,
                "word: webkit": 2,
                "word: prevtransition": 4,
                "word: splitstyles": 4,
                "word: namevalue": 18,
                "word: foreach": 2,
                "word: splitstyle": 6,
                "word: regexp": 2,
                "word: setproperty": 2,
                "word: restoretransition": 8,
                "word: target": 2,
                "word: transitionend": 2,
                "word: webkittransitionend": 2,
                "word: gwddoubleclick": 6,
                "word: receiver": 4,
                "word: exitid": 4,
                "word: collapseonexit": 4,
                "word: pausemedia": 4,
                "word: pageid": 4,
                "special: gwd.actions": 4,
                "special: gwd.actions.events": 4,
                "special: gwd.actions.events.getElementById": 5,
                "special: document.getElementById": 1,
                "special: document.querySelector": 1,
                "special: pageDeck.getElementById": 2,
                "special: document.body": 4,
                "special: gwd.actions.events.addHandler": 1,
                "special: targetElement.addEventListener": 1,
                "special: gwd.actions.events.removeHandler": 1,
                "special: targetElement.removeEventListener": 1,
                "special: gwd.actions.events.setInlineStyle": 1,
                "special: element.style.transition": 2,
                "special: element.style": 2,
                "special: styles.split": 2,
                "special: splitStyles.forEach": 1,
                "special: splitStyle.split": 1,
                "special: element.style.setProperty": 1,
                "special: event.target": 2,
                "special: el.style.transition": 2,
                "special: el.removeEventListener": 1,
                "special: event.type": 2,
                "special: element.addEventListener": 2,
                "special: gwd.actions.gwdDoubleclick": 2,
                "special: gwd.actions.gwdDoubleclick.exit": 1,
                "special: gwd-pagedeck": 2,
                "special: webkit-transition": 2,
                "special: default:break": 2,
                "gwd.actions.events.getelementbyid=function(id){var element=document.getelementbyid(id)": 1,
                "if(!element){var pagedeck=document.queryselector(\"[is=gwd-pagedeck]\")": 1,
                "if(pagedeck){if(typeof pagedeck.getelementbyid===\"function\"){element=pagedeck.getelementbyid(id)}}}if(!element){switch(id){case\"document.body\":element=document.body": 1,
                "gwd.actions.events.addhandler=function(eventtarget,eventname,eventhandler,usecapture){var targetelement=gwd.actions.events.getelementbyid(eventtarget)": 1,
                "if(targetelement){targetelement.addeventlistener(eventname,eventhandler,usecapture)}}": 1,
                "gwd.actions.events.removehandler=function(eventtarget,eventname,eventhandler,usecapture){var targetelement=gwd.actions.events.getelementbyid(eventtarget)": 1,
                "if(targetelement){targetelement.removeeventlistener(eventname,eventhandler,usecapture)}}": 1,
                "gwd.actions.events.setinlinestyle=function(id,styles){var element=gwd.actions.events.getelementbyid(id)": 1,
                "if(!element||!styles){return}var transitionproperty=element.style.transition!==undefined?\"transition\":\"-webkit-transition\"": 1,
                "var prevtransition=element.style[transitionproperty]": 1,
                "var splitstyles=styles.split(/\\s*": 1,
                "var namevalue": 1,
                "splitstyles.foreach(function(splitstyle){if(splitstyle){var regex=new regexp(\"[:](?![/]{2})\")": 1,
                "namevalue=splitstyle.split(regex)": 1,
                "namevalue[1]=namevalue[1]?namevalue[1].trim():null": 1,
                "if(!(namevalue[0]&&namevalue[1])){return}element.style.setproperty(namevalue[0],namevalue[1])}})": 1,
                "function restoretransition(event){var el=event.target": 1,
                "el.style.transition=prevtransition": 1,
                "el.removeeventlistener(event.type,restoretransition,false)}element.addeventlistener(\"transitionend\",restoretransition,false)": 1,
                "element.addeventlistener(\"webkittransitionend\",restoretransition,false)}": 1,
                "gwd.actions.gwddoubleclick=gwd.actions.gwddoubleclick||{}": 1,
                "gwd.actions.gwddoubleclick.exit=function(receiver,exitid,url,opt_collapseonexit,opt_pausemedia,opt_pageid){gwd.actions.events.getelementbyid(receiver).exit(exitid,url,opt_collapseonexit,opt_pausemedia,opt_pageid)}": 1,
                "special: gwd.actions.events.getelementbyid": 5,
                "special: document.getelementbyid": 1,
                "special: document.queryselector": 1,
                "special: pagedeck.getelementbyid": 2,
                "special: gwd.actions.events.addhandler": 1,
                "special: targetelement.addeventlistener": 1,
                "special: gwd.actions.events.removehandler": 1,
                "special: targetelement.removeeventlistener": 1,
                "special: gwd.actions.events.setinlinestyle": 1,
                "special: splitstyles.foreach": 1,
                "special: splitstyle.split": 1,
                "special: element.style.setproperty": 1,
                "special: el.removeeventlistener": 1,
                "special: element.addeventlistener": 2,
                "special: gwd.actions.gwddoubleclick": 2,
                "special: gwd.actions.gwddoubleclick.exit": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "clamav: Cannot dlopen libclamunrar_iface: file not found - unrar support unavailable": 1,
                "clamav: cli_loadftm: File type signature for Microsoft Windows Shortcut File not loaded (required f-level: 1??)": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 7?? bytes": 1,
                "clamav: bytecode self test running": 1,
                "clamav: Bytecode 4?????????: executing in JIT mode": 1,
                "clamav: bytecode finished in 0 us": 1,
                "clamav: bytecode self test succeeded": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 1????? bytes": 1,
                "clamav: Bytecode: 94 bytecode prepared with JIT": 1,
                "clamav: Recognized ASCII text": 1,
                "clamav: cli_magic_scandesc: returning 0  at line 2???": 1,
                "clamav: malware family: OK": 1,
                "clamav: OK": 1,
                "clamav: Scanned files: 1": 1,
                "clamav: Infected files: 0": 1,
                "clamav: extracted blobs": 1,
                "clamav: extracted 1 blobs": 1,
                "clamav: blob size: 2???": 1,
                "clamav: Cannot dlopen libclamunrar_iface: file not found - unrar support unavailable;clamav: cli_loadftm: File type signature for Microsoft Windows Shortcut File not loaded (required f-level: 1??)": 1,
                "clamav: cli_loadftm: File type signature for Microsoft Windows Shortcut File not loaded (required f-level: 1??);clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 7?? bytes": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 7?? bytes;clamav: bytecode self test running": 1,
                "clamav: bytecode self test running;clamav: Bytecode 4?????????: executing in JIT mode": 1,
                "clamav: Bytecode 4?????????: executing in JIT mode;clamav: bytecode finished in 0 us": 1,
                "clamav: bytecode finished in 0 us;clamav: bytecode self test succeeded": 1,
                "clamav: bytecode self test succeeded;clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 1????? bytes": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 1????? bytes;clamav: Bytecode: 94 bytecode prepared with JIT": 1,
                "clamav: Bytecode: 94 bytecode prepared with JIT;clamav: Recognized ASCII text": 1,
                "clamav: Recognized ASCII text;clamav: cli_magic_scandesc: returning 0  at line 2???": 1,
                "clamav: cli_magic_scandesc: returning 0  at line 2???;clamav: malware family: OK": 1,
                "clamav: malware family: OK;clamav: OK": 1,
                "clamav: OK;clamav: Scanned files: 1": 1,
                "clamav: Scanned files: 1;clamav: Infected files: 0": 1,
                "clamav: Infected files: 0;clamav: extracted blobs": 1,
                "clamav: extracted blobs;clamav: extracted 1 blobs": 1,
                "clamav: extracted 1 blobs;clamav: blob size: 2???": 1,
                "File type: ASCII text, with very long lines, with no line terminators": 1,
                "File type segment: ASCII text": 1,
                "File type word: ASCII": 1,
                "File type word: text": 1,
                "File type segment:  with very long lines": 1,
                "File type word: with": 2,
                "File type word: very": 1,
                "File type word: long": 1,
                "File type word: lines": 1,
                "File type segment:  with no line terminators": 1,
                "File type word: no": 1,
                "File type word: line": 1,
                "File type word: terminators": 1,
                "Extracted blob: ASCII text, with very long lines, with no line terminators": 1,
                "blob file types: ASCII": 1
            }
        }
    ]
}