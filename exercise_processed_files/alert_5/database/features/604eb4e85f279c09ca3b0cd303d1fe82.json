{
    "filepath": "/home/chris/data/rpe005/malware_samples_exercise/20190522_112322_rpe005_malware_alert/benzalazineDMtZoQcjHGTspSHRWiZqmm40Khm6i4MLzo1jDRC7G4auHiOh0ZLoqlQnmE0xFWq7",
    "fileinfo": {
        "labels": {
            "family": "bad_sample_5",
            "software": "test_file"
        },
        "md5": "604eb4e85f279c09ca3b0cd303d1fe82",
        "type": "PE32+ executable (GUI) x86-64 (stripped to external PDB), for MS Windows",
        "clamav": "OK",
        "blobs": null
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "int3;int3;mov byte [rsp + ], 1;ret;int3": 11,
                "mov byte [rsp + ], al;mov rbp, qword [rsp + ];(reloc.msvcrt.dll__cexit);add rsp, ;ret": 2,
                "sub rcx, rdx;mov rbx, rcx;neg rcx;(reloc.msvcrt.dll_fwrite);sar rcx, ": 2,
                "neg rcx;(reloc.msvcrt.dll_fwrite);sar rcx, ;and rdx, rcx;add rax, rdx": 2,
                "and rdx, rcx;add rax, rdx;(reloc.msvcrt.dll_malloc);mov rcx, qword [rsp + ];mov rdx, qword [rcx + ]": 2,
                "(reloc.msvcrt.dll_malloc);mov rcx, qword [rsp + ];mov rdx, qword [rcx + ];(reloc.msvcrt.dll_mbstowcs);mov rcx, qword [rcx + ]": 2,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword [rsp + ];lea rcx, [rax - 1];mov rdx, qword [rsp + ]": 1,
                "movzx ecx, byte [rax + rbx - 1];cmp ecx, ;jl ;test rax, rax;jl ": 1,
                "mov esi, dword [rsp + ];mov eax, dword [rsp + ];jmp ;mov esi, ;jmp ": 1,
                "mov eax, ;jmp ;call fcn.0042ea20;ud2;call fcn.00456090": 1,
                "sub rcx, rbx;mov qword [rsp + 8], rcx;mov qword [rsp + ], rsi;call fcn.00462a80;mov eax, dword [rsp + ]": 1,
                "mov rbp, qword [rsp + ];add rsp, ;ret;mov dword [rsp + ], ;mov qword [rsp + ], 0": 1,
                "mov rdx, qword [rax];mov rbx, qword [rsp + ];mov rsi, qword [rbx + ];jmp qword [];jmp ": 1,
                "insb byte [rdi], dx;add byte [rax], al;invalid;outsd dx, dword [esi];push rsp": 1,
                "add byte [rsi], al;imul esi, dword [rbx + ], ;add byte [rsi], al;imul esi, dword [rbx + ], ;add byte [rsi], al": 4,
                "outsd dx, dword [rsi];movsxd rsp, dword [rcx + ];jae ;add byte [rsi], al;insb byte [rdi], dx": 1,
                "jae ;add byte [rsi], al;insb byte [rdi], dx;outsd dx, dword [rsi];jb ": 1,
                "insb byte [rdi], dx;outsd dx, dword [rsi];outsd dx, dword [rsi];imul esi, dword [rbp + ], 0;add byte [rsi], al": 1,
                "outsb dx, byte [rsi];insb byte [rdi], dx;insd dword [rdi], dx;jae ;add byte [rsi], al": 1,
                "insd dword [rdi], dx;imul esp, dword [rsp + rbp*2 + ], ;outsb dx, byte [rsi];outsd dx, dword [rsi];outsd dx, dword [rsi]": 1,
                "add byte [rsi], al;outsd dx, dword [rsi];insb byte [rdi], dx;jbe ;insb byte [rdi], dx": 1,
                "sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];sub dword [rax], eax;add byte [rdi], al": 2,
                "add byte ss:[rax], al;invalid;sub dh, byte [rbp + ];outsb dx, byte [rsi];je ": 2,
                "invalid;je ;add dword [rax], eax;invalid;imul r13d, dword fs:[rbp + r12*2 + 1], ": 2,
                "jne ;jb ;add dword [rax], eax;invalid;invalid": 1,
                "invalid;invalid;invalid;outsb dx, byte [rsi];jb str.ChanDir": 1,
                "add byte [rdi], al;invalid;push ;jb str.Closing;add byte [rdi], al": 1,
                "insb byte [rdi], dx;outsd dx, dword [rsi];jae ;outsb dx, byte [rsi];add dword [eax], eax": 1,
                "invalid;outsd dx, dword [rsi];insd dword [rdi], dx;insd dword [rdi], dx;outsb dx, byte gs:[rsi]": 1,
                "insd dword [rdi], dx;outsb dx, byte gs:[rsi];je str.Compile;add byte [rdi], al;invalid": 1,
                "outsb dx, byte [rsi];add dword [rax], eax;invalid;movsxd rsi, dword gs:[rdx + ];jo ": 1,
                "invalid;jne ;je str.Disable;add byte [rdi], al;invalid": 1,
                "jne ;je str.Disable;add byte [rdi], al;invalid;imul r14d, dword [rbx + ], ": 1,
                "imul r14d, dword [rbx + ], ;add byte [rdi], al;invalid;imul r14d, dword [rbx + ], ;add byte [rdi], al": 1,
                "je ;jb ;add dword [rax], eax;invalid;imul r13d, dword [rsi + ], ": 1,
                "je ;xor al, byte [rcx];add byte [rdi], al;invalid;insb byte [rdi], dx": 1,
                "invalid;je ;xor al, 1;add byte [rdi], al;invalid": 1,
                "invalid;invalid;invalid;jae str.HasSHA2;push rsi": 1,
                "jae str.HasSHA2;push rsi;pop rax;xor al, byte [rcx];add byte [rdi], al": 1,
                "add dword [rax], eax;invalid;invalid;invalid;jae ": 2,
                "push rax;push rax;add dword [rax], eax;invalid;invalid": 1,
                "invalid;invalid;invalid;jne ;movsxd rbp, dword [rdi + ]": 1,
                "jne ;movsxd rbp, dword [rdi + ];add byte [rax], al;invalid;movsxd rsi, dword [edx + esi*2 + ]": 1,
                "imul esi, dword [rax + rax], ;invalid;je ;outsb dx, byte [rsi];outsw dx, word [rsi]": 1,
                "outsw dx, word [rsi];add byte [rax], al;invalid;je ;insb byte [rdi], dx": 1,
                "insb byte [rdi], dx;outsd dx, dword [rsi];ja ;add byte [rdi], al;invalid": 1,
                "add byte [rdi], al;invalid;outsd dx, dword [esi];invalid;push rsp": 1,
                "invalid;imul ebp, dword [rsi + ], ;add byte [rax], al;invalid;imul ebp, dword [rsi + ], ": 1,
                "add byte [rax], al;invalid;insb byte [rdi], dx;outsd dx, dword [rsi];outsb dx, byte [rsi]": 1,
                "push ;invalid;insd dword [rdi], dx;invalid;je ": 1,
                "invalid;insd dword [rdi], dx;invalid;je ;push ": 1,
                "jne str.onepass;invalid;invalid;insb byte [rdi], dx;add byte gs:[rax], al": 1,
                "outsb dx, byte [rsi];invalid;insd dword [rdi], dx;outsd dx, dword gs:[rsi];add byte [rax], al": 1,
                "js ;outsb dx, byte [rsi];je ;add byte [rdi], al;invalid": 1,
                "insd dword [rdi], dx;invalid;insb byte [rdi], dx;insb byte [rdi], dx;outsd dx, dword [rsi]": 4,
                "outsw dx, word [rsi];add byte [rax], al;or byte [rsi + ], ah;outsb dx, byte [rsi];movsxd rcx, dword [rsi + ]": 1,
                "movsxd rcx, dword [rsi + ];insd dword [rdi], dx;add byte gs:[rax], al;or byte [rsi + ], ah;outsb dx, byte [rsi]": 2,
                "je ;invalid;insb byte [rdi], dx;jne str.isRegExp;add byte [rax], al": 3,
                "imul esi, dword [rbx + rsi*2], ;or byte [rbp + ], ch;jo ;imul ebp, dword [rsi + ], ;or byte [rbp + ], ch": 3,
                "or byte [rbp + ], ch;js ;jb ;movsxd rsi, dword [rbx];add byte [rax], cl": 3,
                "jae str.nextFree;outsd dx, dword [rsi];invalid;add byte fs:[rax], al;or byte [rsi + ], ch": 3,
                "or byte [rsi + ], ch;jae ;jo ;add byte [rax], cl;or byte [rsi + ], ch": 3,
                "js str.pauseGen;push rbp;imul ebp, dword [rsi + ], ;or byte [rsi + ], ch;outsb dx, byte [rsi]": 3,
                "add byte [rax], cl;or byte [rdi + ], ch;jb ;je ;jb ": 3,
                "jb ;outsb dx, byte gs:[rsi];je ;add byte [rax], cl;or dword [rsi + ], ebp": 1,
                "je ;add byte [rax], cl;or dword [rsi + ], ebp;jne ;movsxd rsp, dword [rcx + ]": 1,
                "jo ;jb ;invalid;je ;add byte [rax], al": 1,
                "jae ;jns ;add byte [rcx], cl;or dword [rsi + ], ebp;insd dword [rdi], dx": 1,
                "insd dword [rdi], dx;insb byte [rdi], dx;outsd dx, dword [rsi];movsxd rbp, dword [rbx + ];add byte [rax], al": 1,
                "outsb dx, byte [rsi];je ;invalid;insb byte [rdi], dx;add byte gs:[rax], al": 1,
                "add byte gs:[rax], al;or dword [rax + ], esi;push ;jae ;add byte [rcx], cl": 1,
                "insd dword [rdi], dx;add byte [rax], al;or dword [rdx + ], esi;movsxd rbp, dword [rdi + ];jb ": 1,
                "jb ;add byte [rcx], cl;or dword [rbx + ], esi;invalid;outsb dx, byte [rsi]": 1,
                "push ;movsxd rbp, dword [rbx];add byte [rcx], cl;or dword [rbx + ], esi;push ": 1,
                "push ;outsb dx, byte gs:[rsi];add byte [rax], al;or dword [rbx + ], esi;insd dword [rdi], dx": 1,
                "outsb dx, byte gs:[rsi];add byte [rax], al;or dword [rbx + ], esi;insd dword [rdi], dx;imul esp, dword [rbx + ], ": 1,
                "add byte [rax], al;or dword [rbx + ], esi;insd dword [rdi], dx;imul esp, dword [rbx + ], ;add byte [rcx], cl": 1,
                "invalid;movsxd rbp, dword [rbx + ];outsd dx, dword [rsi];or ch, byte [rdx];jne ": 1,
                "outsb dx, byte [rsi];push rdx;invalid;outsb dx, byte [rsi];add byte fs:[rax], al": 1,
                "insb byte [rdi], dx;add dword [rax], eax;or ch, byte [rdx];jae ;outsb dx, byte [rsi]": 1,
                "je str.AfterBlock;js ;jo str.time.Time;add byte [rdx], cl;or ch, byte [rdx]": 1,
                "push rsp;imul ebp, dword [rbp + ], ;je ;insd dword [rdi], dx;invalid": 1,
                "jp ;outsb dx, byte [rsi];add byte gs:[rax], al;or ch, byte [rdx];jne ": 1,
                "or al, byte [rbx + ];insd dword [rdi], dx;insd dword [rdi], dx;outsb dx, byte gs:[rsi];je ": 1,
                "invalid;jo str.CommonType;add byte [rdx], cl;or al, byte [rbx + ];insd dword [rdi], dx": 1,
                "jns ;add dword gs:[rax], eax;or al, byte [rbx + ];insd dword [rdi], dx;jo ": 1,
                "or al, byte [rbx + ];insd dword [rdi], dx;jo ;jb ;jae ": 1,
                "outsb dx, byte [rsi];jae ;jno ;outsb dx, byte gs:[rsi];je str.DecodedLen": 1,
                "add byte [rdx], cl;or al, byte [rbp + ];outsd dx, dword [rsi];outsb dx, byte gs:[rsi];add dword [rax], eax": 1,
                "outsd dx, dword [rsi];outsb dx, byte gs:[rsi];add dword [rax], eax;or al, byte [rbp + ];movsxd rbp, dword [rdi + ]": 1,
                "or al, byte [rsi + ];insb byte [rdi], dx;insb byte [rdi], dx;imul esp, dword [rdi + ], ;or al, byte [rsi + ]": 1,
                "jo ;add byte fs:[rax], al;or ebp, dword [rdx];push ;outsd dx, dword [rsi]": 1,
                "imul sp, word cs:[rbp + ], ;add byte [rbx], cl;or ebp, dword [rdx];insb byte [rdi], dx;outsd dx, dword [rsi]": 1,
                "add byte [rbx], cl;or ebp, dword [rdx];outsd dx, dword [rsi];jae ;jb ": 1,
                "outsb dx, byte [rsi];outsb dx, byte [rsi];add byte [rax], al;or ebp, dword [rdx];outsd dx, dword [rsi]": 1,
                "add dword [rax], eax;or ebp, dword [rdx];outsd dx, dword [rsi];je ;outsd dx, dword [rsi]": 1,
                "pop rdi;outsb dx, byte [rsi];outsd dx, dword [rsi];add byte gs:[rax], al;or ebp, dword [rdx]": 1,
                "or ebp, dword [rdx];jo ;insb byte [rdi], dx;insb byte [rdi], dx;imul ebp, dword cs:[rdi + ], ": 1,
                "js ;push ;invalid;add dword [rax], eax;or ebp, dword [rdx]": 1,
                "movsxd rbp, dword [rsi];jne str.ContextSkip;js ;add byte [rbx], cl;sub dh, byte [rbx + ]": 1,
                "outsb dx, byte gs:[rsi];je ;add dword [rax], eax;or eax, dword [rcx + ];imul r13, qword [rsi + ], ": 1,
                "imul eax, dword [rcx], 0;or eax, dword [rdx + ];movsxd rbp, dword [rbx + ];invalid;jae ": 1,
                "add dword [rax], eax;or eax, dword [rsi + ];insb byte [rdi], dx;jns ;invalid": 1,
                "invalid;invalid;push ;movsxd rsi, dword [rbx + rsi*2 + 1];add byte [rbx], cl": 1,
                "push ;movsxd rsi, dword [rbx + rsi*2 + 1];add byte [rbx], cl;or eax, dword [rdi + ];je ": 1,
                "or esp, dword [rsi + ];jne ;push ;jb ;add byte [rax], al": 1,
                "outsb dx, byte [rsi];jbe ;insb byte [rdi], dx;imul esp, dword [rax + rax], ;or esp, dword [rdi + ]": 1,
                "add byte [rbx], cl;or esp, dword [rdi + ];outsd dx, dword [rsi];invalid;invalid": 1,
                "invalid;invalid;insb byte [rdi], dx;push rbx;je ": 5,
                "je ;jae ;add byte [rax], al;or ebp, dword [rax + ];jae ": 1,
                "invalid;jo ;insd dword [rdi], dx;invalid;jb ": 1,
                "outsb dx, byte [rsi];outsd dx, dword [rsi];jb ;jb ;invalid": 1,
                "invalid;jns ;add byte [rbx], cl;or ebp, dword [rcx + ];outsb dx, byte [rsi]": 1,
                "or ebp, dword [rcx + ];outsb dx, byte [rsi];outsd dx, dword [rsi];jb ;push rbx": 1,
                "outsd dx, dword [rsi];jb ;push rbx;insb byte [rdi], dx;imul esp, dword [rbx + ], ": 1,
                "outsd dx, dword [rsi];imul esp, dword [rbp + ], ;add byte [rax], al;or ebp, dword [rcx + ];imul esi, dword fs:[rdx + ], ": 1,
                "add byte [rax], r8b;or ebp, dword [rbp + ];jns ;outsd dx, dword gs:[rsi];outsb dx, byte [rsi]": 1,
                "insd dword [rdi], dx;add byte [rax], al;or ebp, dword [rsi + ];je ;movsxd rbp, dword [rbx + ]": 1,
                "je ;add byte [rax], al;or ebp, dword [rsi + ];insd dword [rdi], dx;jae ": 1,
                "or ebp, dword [rsi + ];insd dword [rdi], dx;jae ;push rsp;add byte [rax], r8b": 1,
                "add byte [rbx], cl;or ebp, dword [rsi + ];insb byte [rdi], dx;invalid;invalid": 1,
                "insd dword [rdi], dx;invalid;jb ;invalid;insb byte [rdi], dx": 1,
                "outsw dx, word [rsi];jb ;movsxd rax, dword fs:[eax];add byte [rbx], cl;or ebp, dword [rdi + ]": 1,
                "jb ;push rdx;jo ;invalid;je ": 1,
                "invalid;je ;add byte [rbx], cl;or esi, dword [rax + ];or al, ": 1,
                "outsb dx, byte [rsi];movsxd rbp, dword [rax];sub dword [rcx], eax;add byte [rdx + rbp], cl;or al, ": 1,
                "add dword [rax], r8d;or al, ;movsxd rsi, dword [rdx + ];xor esi, dword [rdx];push rsp": 1,
                "pop rbx;pop rbp;imul ebp, dword [rsi + ], ;or al, ;jne ": 4,
                "add byte gs:[rax], al;or al, ;outsd dx, dword [esi];invalid;insd dword [rdi], dx": 7,
                "invalid;jo ;jns ;add dword gs:[rax], eax;or al, ": 7,
                "invalid;jb str.io.WriterTo;add byte [rdx + rbp], cl;or al, ;imul ebp, dword [rdi + ], ": 7,
                "or al, ;push ;outsd dx, dword [rsi];outsb dx, byte [rsi];jne ": 7,
                "jne ;insb byte [rdi], dx;outsd dx, dword cs:[rsi];jb ;add byte [rdx + rbp], cl": 7,
                "invalid;push ;movsxd rsi, dword [rcx + rax];or al, ;outsd dx, dword [rsi]": 7,
                "je ;outsd dx, dword [rsi];push rbx;movsxd rsi, dword [rdx + ];jo ": 13,
                "je ;outsd dx, dword [rsi];pop rdi;jb ;insd dword [rdi], dx": 7,
                "outsb dx, byte [rsi];push rbx;outsd dx, dword [rsi];jne ;movsxd rsp, dword [rbp]": 7,
                "add byte [rdx + rbp], cl;or al, ;jb ;outsb dx, byte [rsi];je ": 7,
                "jae ;outsb dx, byte [rsi];movsxd rbp, dword [rsi];outsd dx, dword [rsi];movsxd rbp, dword [rbx + ]": 11,
                "outsd dx, dword [rsi];movsxd rbp, dword [rbx + ];jb ;add byte [rdx + rbp], cl;or al, ": 7,
                "jo ;add dword [rax], eax;or al, ;jae ;outsb dx, byte [rsi]": 6,
                "add dword [rax], eax;or al, ;jae ;outsb dx, byte [rsi];je ": 12,
                "add qword cs:[rax], r8;or al, ;jae ;jae str.AssignableTo;invalid": 4,
                "jae str.AssignableTo;invalid;insb byte [rdi], dx;insb byte [rdi], dx;or al, ": 1,
                "invalid;insb byte [rdi], dx;insb byte [rdi], dx;or al, ;jne ": 1,
                "je ;invalid;movsxd rsp, dword [rbp];add byte [rdi], cl;or al, ": 1,
                "insb byte [rdi], dx;invalid;invalid;push ;movsxd rsi, dword [rax + rax]": 1,
                "invalid;invalid;push ;movsxd rsi, dword [rax + rax];or al, ": 1,
                "outsd dx, dword [rsi];imul esp, dword [rbx + ], ;outsb dx, byte [rsi];add byte fs:[rax], al;or al, ": 1,
                "push ;movsxd rsi, dword [rbx + rsi*2];add byte [rax + rbp*2], cl;or al, ;jne ": 1,
                "or al, ;invalid;jae ;push rdx;jne ": 1,
                "jae ;pop rdi;movsxd rbx, dword [edi + ];outsb dx, byte [rsi];imul edi, dword [rax], ": 1,
                "outsd dx, dword [rsi];outsb dx, byte [rsi];je str.newEvalError;add byte fs:[rax], al;or al, ": 1,
                "imul ebp, dword [rsi + ], ;add byte [rsi + rbp*2], cl;or al, ;ja ;jbe ": 1,
                "movsxd rsp, dword [rbp];add byte [rsi + rbp*2], cl;or al, ;ja ;jns ": 1,
                "jb ;insb byte [rdi], dx;outsd dx, dword [rsi];ja ;add byte [rsi + rbp*2], cl": 1,
                "push rax;invalid;jae ;push rdx;jne ": 2,
                "add byte [], cl;outsb dx, byte gs:[rsi];movsxd rcx, dword [rcx + ];jae ;jb ": 6,
                "invalid;jns ;outsb dx, byte [rsi];js ;add byte [], cl": 6,
                "invalid;outsb dx, byte [rsi];outsb dx, byte [rsi];jb str.os.LinkError;add byte [], cl": 6,
                "js ;add byte [rax], al;or eax, ;outsd dx, dword [rsi];pop rdi": 6,
                "pop rdi;insb byte [edi], dx;outsd dx, dword [rsi];invalid;invalid": 6,
                "jae ;jb ;jb ;outsd dx, dword [rsi];jb ": 6,
                "insb byte [rdi], dx;jne str.registry.Key;js ;add byte [], cl;insb byte [rdi], dx": 6,
                "add byte [], cl;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];imul ebp, dword [rsi + ], ;jb ": 6,
                "insd dword [rdi], dx;outsb dx, byte cs:[rsi];invalid;insd dword [rdi], dx;add byte gs:[rax], al": 8,
                "insd dword [rdi], dx;invalid;jo ;outsb dx, byte [rsi];add dword [rax], eax": 6,
                "push rdi;jne str.url.encoding;js ;add byte [], cl;or eax, ": 6,
                "je ;or eax, ;movsxd rbp, dword [rax];sub dword [rax], esp;imul ebp, dword [rsi + ], ": 2,
                "or eax, ;movsxd rsp, dword [rcx + ];insb byte [rdi], dx;or eax, ;movsxd rbp, dword [rax]": 1,
                "insb byte [rdi], dx;jo ;jb ;add byte [rsi], cl;sub ah, byte [rdi + ]": 12,
                "add byte [rsi], cl;sub ah, byte [rdi + ];invalid;imul sp, word cs:[rbp + ], ;jns ": 6,
                "invalid;insb byte [rdi], dx;outsd dx, dword [rsi];jae ;jb ": 6,
                "jae ;jb ;add byte [rsi], cl;sub ch, byte [rcx + ];push rdx": 6,
                "jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx;add byte gs:[rax], al": 7,
                "insb byte [rdi], dx;jne ;add byte [rax], al;invalid;sub dh, byte [rdx + ]": 6,
                "jne ;add byte [rax], al;invalid;sub dh, byte [rdx + ];insb byte [rdi], dx": 6,
                "movsxd rsi, dword gs:[rsi + rbp + ];je ;jo ;add byte [rax], al;invalid": 11,
                "sub dh, byte [rdx + ];js ;je ;jb ;invalid": 7,
                "js ;je ;jb ;invalid;add dword fs:[rax], eax": 6,
                "pop rdi;je ;jo ;add byte [rax], al;invalid": 5,
                "movsxd rsp, dword [rbp];add byte [rsi], cl;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ": 3,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;jae ;invalid": 69,
                "jb ;add byte [rsi], cl;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ": 1,
                "je ;insd dword [rdi], dx;ja ;imul esi, dword [rcx + rsi*2], ;sub dh, byte [rdx + ]": 1,
                "insb byte [rdi], dx;jns ;add byte [rsi], cl;sub dh, byte [rbx + ];outsb dx, byte [rsi]": 1,
                "outsb dx, byte [rsi];jae ;add byte [rsi], cl;sub dh, byte [rbx + ];jae ": 1,
                "jo ;jb ;jb ;add dword [rax], eax;invalid": 1,
                "sub dword [rax], esp;jne ;outsb dx, byte [rsi];je ;je ": 13,
                "jb ;movsxd rsi, dword [rsp + rdx*2 + ];jo ;add dword [rax], eax;cvtpi2ps xmm5, qword [rcx + ]": 6,
                "sub ch, byte [rdx + ];outsd dx, dword [rsi];outsb dx, byte [rsi];invalid;invalid": 35,
                "je ;outsd dx, dword [rsi];pop rdi;jo ;outsd dx, dword [rsi]": 36,
                "add byte [rdi], cl;sub dh, byte [rax + ];jb ;jb str.reflect.Method;pop rdi": 6,
                "jb str.reflect.Method;pop rdi;jo ;jb ;jb ": 6,
                "jb ;jb ;add byte [rdi], cl;sub dh, byte [rax + ];insb byte [rdi], dx": 6,
                "insb byte [rdi], dx;outsd dx, dword cs:[rsi];jo ;jb str.runtime.Frames;je ": 6,
                "cvtpi2ps xmm6, qword [rdx + ];sub dh, byte [rdx + ];outsb dx, byte [rsi];jb ;push rbx": 6,
                "add byte fs:[rax], al;cvtpi2ps xmm6, qword [rdx + ];insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];je ": 6,
                "cvtpi2ps xmm6, qword [rdx + ];imul esi, dword [ebx + ], ;outsb dx, byte [rsi];je ;jns ": 6,
                "invalid;invalid;jne ;imul esp, dword [rbp + ], 0;add byte [rdi], cl": 6,
                "invalid;invalid;invalid;invalid;push rsi": 8,
                "invalid;jb ;add byte [rdi], cl;sub dh, byte [rdx + ];outsb dx, byte [rsi]": 6,
                "je ;insd dword [rdi], dx;movsxd rcx, dword cs:[ebp + ];add byte gs:[rax], al;cvtpi2ps xmm6, qword [rdx + ]": 5,
                "je ;insd dword [rdi], dx;insb byte [rdi], dx;outsb dx, byte [rsi];outsd dx, dword [rsi]": 3,
                "add byte gs:[rax], al;cvtpi2ps xmm6, qword [rdx + ];sub dh, byte [rdx + ];sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "jae ;jae ;je ;add byte [rdi], cl;sub dh, byte [rdx + ]": 1,
                "jb ;outsb dx, byte cs:[rsi];je ;jb ;invalid": 1,
                "sub dh, byte [rbx + ];outsb dx, byte [rsi];movsxd rbp, dword [rsi];jo ;outsd dx, dword [rsi]": 9,
                "movsxd rbp, dword [rsi];jo ;outsd dx, dword [rsi];insb byte [rdi], dx;outsd dx, dword [rsi]": 8,
                "js str.syscall.Linger;insd dword [rdi], dx;jo ;jns ;jo ": 1,
                "jo ;add byte [rdi], cl;sub dh, byte [rbx + ];jae ;invalid": 1,
                "jae ;invalid;insb byte [rdi], dx;insb byte [rdi], dx;push rdx": 13,
                "jp ;outsb dx, byte [rsi];push rsp;jb ;outsb dx, byte [rsi]": 2,
                "invalid;invalid;invalid;jne str.GetIntegerValue;jb ": 1,
                "xor al, byte [rax];add byte [rax], dl;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 6,
                "movsxd rbp, dword [rax];imul ebp, dword [rdi + ], ;jb str.gob.emptyStruct;add byte [rax], al;adc byte [rdx], ch": 8,
                "jb str.io.StringWriter;add byte [rax], al;adc byte [rdx], ch;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 9,
                "imul ebp, dword [rbp + ], ;sub ah, byte [rdi + ];invalid;insd dword [rdi], dx;jo ": 10,
                "insd dword [rdi], dx;jo ;jns ;je ;jne str.os.ProcessState": 10,
                "jne str.os.ProcessState;je ;add byte [rax], dl;sub ch, byte [rcx + ];push rbx": 10,
                "jo ;outsb dx, byte [rsi];movsxd rbp, dword [rdi + ];jb ;add byte [rax], dl": 10,
                "imul ebp, dword [rdi + ], ;sub ch, byte [rbp + ];jo ;jae ;jb str.reflect.ChanDir": 10,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];insb byte [rdi], dx;add dword [rax], eax;adc byte [rdx], ch": 10,
                "adc byte [rdx], ch;sub dh, byte [rdx + ];insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];invalid": 10,
                "movsxd rsi, dword gs:[rsi + rbp + ];je ;push rsp;jns ;add byte gs:[rax], al": 10,
                "adc byte [rdx], ch;sub dh, byte [rdx + ];insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];js ": 10,
                "jns ;add byte gs:[rax], al;adc byte [rdx], ch;sub dh, byte [rdx + ];js ": 10,
                "jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx;jbe ": 11,
                "je ;insd dword [rdi], dx;jbe ;movsxd rax, dword [rbx + rsi*2 + ];add byte [rax], al": 11,
                "insd dword [rdi], dx;jne ;movsxd rsi, dword [rsi + ];insb byte [rdi], dx;add byte [rax], al": 9,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;outsb dx, byte cs:[rsi];invalid": 3,
                "je ;insd dword [rdi], dx;jae ;movsxd rbp, dword gs:[rcx + ];insb byte [rdi], dx": 3,
                "insb byte [rdi], dx;invalid;invalid;invalid;jp ": 15,
                "jp ;add qword [rax], r8;adc byte [rdx], ch;sub dh, byte [rbx + ];jae ": 1,
                "je ;add dword [rax], eax;adc byte [rdx], ch;sub dh, byte [rcx + rbp*2 + ];push rax": 1,
                "outsd dx, dword [rsi];jb ;add byte [rax], dl;sub dh, byte [rbp + ];imul esp, dword [rbx + ], ": 1,
                "invalid;outsb dx, byte [rsi];xor dword gs:[esi], esi;add dword [rax], eax;adc byte [rdx], ch": 1,
                "jb ;je ;je ;jo ;add dword [rax], eax": 3,
                "add dword [rax], eax;adc byte [rbp + ], al;movsxd rbp, dword gs:[rcx + ];invalid;invalid": 1,
                "movsxd rsp, dword [rbp + 1];add byte [rax], dl;je ;outsd dx, dword [rsi];jb str.SetsockoptIPMreq": 1,
                "add byte [rax], dl;je ;outsd dx, dword [rsi];jb str.SetsockoptIPMreq;sub ch, byte [rdx]": 1,
                "jae ;movsxd rbp, dword gs:[rcx + ];insb byte [rdi], dx;add byte [rax], al;adc dword [rdx], ebp": 1,
                "sub bl, byte [rbx + ];pop rbp;sub ch, byte [rdi + ];je str.regexp.thread;pop rdi": 1,
                "jo ;jb ;add byte [rcx], dl;sub bl, byte [rbx + ];pop rbp": 1,
                "invalid;imul sp, word cs:[rbp + ], ;jns ;add byte gs:[rax], al;adc dword [rdx], ebp": 1,
                "add byte [rcx], dl;sub bl, byte [rbx + ];sub dh, byte [rbx + ];outsb dx, byte [rsi];je ": 1,
                "outsd dx, dword [rsi];insd dword [rdi], dx;insd dword [rdi], dx;outsb dx, byte gs:[rsi];je ": 47,
                "movsxd rbp, dword [rax];sub dword [rax], esp;pop rbx;pop rbp;jne ": 45,
                "insd dword [rdi], dx;movsxd rax, dword cs:[edx + ];je ;add byte [rax], al;adc dword [rdx], ebp": 2,
                "insb byte [rdi], dx;sub bl, byte [rbx + ];jne ;movsxd rbp, dword [rax];sub dword [rax], esp": 1,
                "jae ;jae ;invalid;insb byte [rdi], dx;insb byte [rdi], dx": 103,
                "add byte [rcx], dl;sub bl, byte [rbx + ];je ;imul esp, dword [rbp + ], ;pop rdi": 1,
                "je ;outsd dx, dword [rsi];jb ;je ;je ": 1,
                "movsxd rbp, dword [rax + ];imul r13, qword [rsi + ], ;add byte [rcx], dl;sub ah, byte [rbp + ];imul ebp, dword [esi + ], ": 1,
                "imul esi, dword [rsi + ], ;add byte [rcx], dl;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 1,
                "insd dword [rdi], dx;sub dword cs:[eax], eax;add byte [rcx], dl;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 7,
                "insd dword [rdi], dx;jo ;add byte [rax], al;adc dword [rdx], ebp;sub ah, byte [rsi + ]": 8,
                "movsxd rbp, dword [rax];outsd dx, dword [esi];invalid;je ;jo ": 10,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];insb byte [rdi], dx;add byte [rax], al;adc dword [rdx], ebp": 22,
                "sub ah, byte [rdi + ];invalid;movsxd rbp, dword gs:[rdi + ];jb ;je ": 12,
                "push rbx;jns ;je ;js ;jb ": 13,
                "outsd dx, dword [rsi];jb ;add byte [rcx], dl;sub ch, byte [rdx + ];outsd dx, dword [rsi]": 12,
                "je ;je ;add byte [rax], al;adc dword [rdx], ebp;sub ch, byte [rdx + ]": 24,
                "outsb dx, byte gs:[rsi];movsxd rbp, dword [rdi + ];push rbx;je ;je ": 14,
                "jne ;movsxd rax, dword [rax];add byte [rcx], dl;sub ch, byte [rbp + ];jo ": 12,
                "jae ;jb ;outsb dx, byte [rsi];pop rbp;imul ebp, dword [rsi + ], ": 54,
                "outsb dx, byte [rsi];pop rbp;imul ebp, dword [rsi + ], ;adc dword [rdx], ebp;sub ch, byte [rdi + ]": 12,
                "adc dword [rdx], ebp;sub ch, byte [rdi + ];je ;pop rdi;invalid": 12,
                "insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];jne ;movsxd rdx, dword [rcx + rdi*2 + ];sub ah, byte [rsi + ]": 2,
                "jne ;movsxd rdx, dword [rcx + rdi*2 + ];add byte gs:[rax], al;adc dword [rdx], ebp;sub dh, byte [rdx + ]": 12,
                "sub dh, byte [rdx + ];outsb dx, byte [rsi];je ;insd dword [rdi], dx;movsxd rbp, dword cs:[rax + ]": 8,
                "jo ;add byte [rax], al;adc dword [rdx], ebp;jb str.runtime.mapextra;outsb dx, byte [rsi]": 7,
                "insd dword [rdi], dx;imul esi, dword fs:[rsi + ], ;add byte [rax], al;adc dword [rdx], ebp;sub dh, byte [rdx + ]": 7,
                "add byte [rax], al;adc dword [rdx], ebp;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ": 20,
                "jne ;movsxd rcx, dword [rcx + ];outsw dx, word [rsi];add byte [rax], al;adc dword [rdx], ebp": 5,
                "insd dword [rdi], dx;push ;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 1,
                "insd dword [rdi], dx;invalid;jo ;js ;jb ": 3,
                "insd dword [rdi], dx;insd dword [rdi], dx;invalid;jb str.runtime.semaRoot;imul esi, dword [rbx + r14*2], ": 2,
                "imul ebp, dword [rsi + ], ;add byte [rcx], dl;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ": 2,
                "insd dword [rdi], dx;jae ;insd dword [rdi], dx;invalid;push rdx": 10,
                "outsb dx, byte [rsi];jb ;add byte [rcx], dl;sub dh, byte [rdx + ];outsb dx, byte [rsi]": 2,
                "jae ;movsxd rsi, dword [rax + rax];adc dword [rdx], ebp;sub dh, byte [rdx + ];outsb dx, byte [rsi]": 2,
                "outsb dx, byte [rsi];jbe ;js ;insb byte [rdi], dx;outsd dx, dword [rsi]": 20,
                "invalid;jae ;imul ebp, dword [rcx + ], ;adc dword [rdx], ebp;sub dh, byte [rbx + ]": 1,
                "outsb dx, byte [rsi];je ;js ;jo ;je ": 1,
                "outsd dx, dword [rsi];imul ebp, dword [rsi + ], ;adc ch, byte [rdx];sub bl, byte [rbx + ];sub ch, byte [rdx]": 1,
                "outsb dx, byte gs:[rsi];je ;imul sp, word [rbp + ], 0;adc ch, byte [rdx];sub bl, byte [rbx + ]": 1,
                "pop rdi;jb ;add byte [rdx], dl;sub bl, byte [rbx + ];sub dh, byte [rdx + ]": 1,
                "sub bl, byte [rbx + ];jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];insd dword [rdi], dx": 1,
                "insd dword [rdi], dx;jne ;movsxd rsi, dword [rcx + ];add byte [rax], al;adc ch, byte [rdx]": 2,
                "jae ;push rbx;je ;je ;insd dword [rdi], dx": 19,
                "jae ;imul ebp, dword [rdi + ], ;sub ah, byte [rcx + ];je ;ja ": 2,
                "add byte [rdx], dl;sub ah, byte [rdx + ];jae ;xor al, ;insb byte [rdi], dx": 1,
                "sub ah, byte [rbp + ];imul ebp, dword [esi + ], ;imul esi, dword [rsi + ], ;add dword [rax], eax;adc ch, byte [rdx]": 1,
                "sub ah, byte [rsi + ];invalid;je ;imul esp, dword fs:[rbx + ], ;jb ": 1,
                "and byte [rcx + ], ch;je ;add byte [rax], al;adc ch, byte [rdx];sub ah, byte [rsi + ]": 2,
                "adc ch, byte [rdx];sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];sub dword [rax], esp": 41,
                "js ;xor bh, byte [rax];add byte [rax], al;adc ch, byte [rdx];sub ah, byte [rsi + ]": 6,
                "sub dword [rax], esp;jne ;insb byte [rdi], dx;push rsi;invalid": 9,
                "invalid;insb byte [rdi], dx;jne ;jae ;add byte [rdx], dl": 9,
                "adc ch, byte [rdx];sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];jae ": 13,
                "outsd dx, dword [rsi];invalid;je ;outsb dx, byte [rsi];movsxd rbp, dword [rdi + ]": 20,
                "invalid;jae ;add byte [rax], al;adc ch, byte [rdx];outsd dx, dword [rsi]": 13,
                "push r11;add qword [r8], rax;adc ch, byte [rdx];sub dh, byte [rax + ];insb byte [rdi], dx": 11,
                "push rsp;imul ebp, dword [rbp + ], ;jb ;outsd dx, dword [rsi];jb ": 11,
                "movsxd rsp, dword [rbp + 1];add byte [rdx], dl;sub dh, byte [rdx + ];insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 9,
                "movsxd rsi, dword gs:[rsi + rbp + ];sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];imul ebp, dword [rsi + ], ": 1,
                "invalid;jns ;jne ;jns ;add byte [rdx], dl": 7,
                "imul esi, dword [rdx], ;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ;insd dword [rdi], dx": 4,
                "invalid;invalid;imul esi, dword [rsi + rsi*2 + ], ;add byte [rax], al;adc ch, byte [rdx]": 2,
                "outsd dx, dword [rsi];je ;outsd dx, dword [rsi];pop rdi;jae str.func_string____int": 3,
                "movsxd rbp, dword [rax];sub dword [rax], esp;jae ;outsb dx, byte [rsi];movsxd rbp, dword [rsi]": 4,
                "outsb dx, byte [rsi];je ;je ;sub dword [rax], esp;invalid": 21,
                "add byte [rax], al;adc ebp, dword [rdx];sub ah, byte [rdi + ];invalid;outsd dx, dword cs:[esi]": 12,
                "adc ebp, dword [rdx];sub ch, byte [rdx + ];outsd dx, dword [rsi];outsb dx, byte [rsi];jae ": 12,
                "jne ;jno ;outsd dx, dword [rsi];je ;push rsi": 12,
                "outsd dx, dword [rsi];je ;push rsi;invalid;insb byte [rdi], dx": 12,
                "jb ;jo ;jb ;jns ;add byte [rbx], dl": 12,
                "jb ;jns ;add byte [rbx], dl;sub ch, byte [rdi + ];je ": 12,
                "invalid;invalid;push ;movsxd rsi, dword [rax + rax];adc ebp, dword [rdx]": 12,
                "invalid;push ;movsxd rsi, dword [rcx + rax];adc ebp, dword [rdx];sub dh, byte [rdx + ]": 12,
                "push rsp;jns ;add byte gs:[rax], al;adc ebp, dword [rdx];jb ": 12,
                "jae ;imul ebp, dword [rsi + ], ;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ": 8,
                "invalid;jne ;imul esp, dword [rbp + ], ;jns ;add byte gs:[rax], al": 8,
                "insb byte [rdi], dx;jb ;add byte [rax], al;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "adc ebp, dword [rdx];jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx": 14,
                "invalid;invalid;je ;add byte [rax], al;adc ebp, dword [rdx]": 4,
                "sub dword [rax], esp;sub byte [rcx + ], ch;je ;and byte [rbp + ], ah;jb ": 6,
                "sub byte [rcx + ], ch;je ;and byte [rbp + ], ah;jb ;jb ": 23,
                "imul esp, dword gs:[rcx + ], 0;add byte [rdx + rbp], dl;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 7,
                "je str.func_reflect.Value;sub dword [rax], esp;pop rbx;pop rbp;imul ebp, dword [rsi + ], ": 9,
                "je ;sub dword [rax], esp;jne ;outsb dx, byte [rsi];je ": 39,
                "adc al, ;sub ch, byte [rdx + ];outsd dx, dword [rsi];outsb dx, byte [rsi];invalid": 13,
                "sub ch, byte [rbp + ];imul ebp, dword [rsi + ], ;push rbp;push rbp;pop rcx": 13,
                "push rdx;push rbp;push rdi;pop rdx;add byte [rax], r8b": 15,
                "invalid;je ;jo ;pop rbp;invalid": 30,
                "je ;pop rdi;outsd dx, dword [esi];push rbx;insb byte [rdi], dx": 13,
                "jb ;add byte [rdx + rbp], dl;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 11,
                "insd dword [rdi], dx;push rbx;je ;movsxd rbp, dword [rbx + ];movsxd rbp, dword gs:[rdi + ]": 9,
                "insd dword [rdi], dx;invalid;invalid;invalid;insb byte [rdi], dx": 7,
                "sub al, ;jb ;outsd dx, dword [rsi];jb ;add byte [rax], al": 149,
                "sub dword [rax], esp;sub byte [rbx + ], dh;jb ;outsb dx, byte [rsi];sub al, ": 34,
                "adc eax, ;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];invalid": 6,
                "movsxd rbp, dword [rax];invalid;jae ;js ;jb ": 7,
                "js ;jb ;jae ;imul ebp, dword [rdi + ], ;sub ah, byte [rsi + ]": 7,
                "adc eax, ;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];imul ebp, dword [rsi + ], ": 17,
                "outsb dx, byte [rsi];movsxd rbp, dword [rax];jb ;imul esi, dword [ebx + ], ;outsb dx, byte [rsi]": 11,
                "outsb dx, byte [rsi];jbe ;insb byte [rdi], dx;imul esp, dword [rdx + rax*2 + ], ;jb ": 14,
                "imul ebp, dword [rsi + ], ;sub ch, byte [rbp + ];jo ;jae ;jb ": 28,
                "je ;invalid;push ;movsxd rsi, dword [rax + rax];adc eax, ": 14,
                "pop rdi;jae ;invalid;jae ;push rdx": 13,
                "add byte [], dl;sub dh, byte [rdx + ];insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];invalid": 12,
                "movsxd rsi, dword gs:[rsi + rbp + ];invalid;imul esp, dword [rbp + ], ;outsb dx, byte [rsi];movsxd rcx, dword [rcx + ]": 12,
                "je ;insd dword [rdi], dx;jae ;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 2,
                "insd dword [rdi], dx;jb ;jne ;imul esp, dword [rbp + ], 0;add byte [], dl": 2,
                "je ;jo ;add byte [rax], al;adc eax, ;sub ah, byte [rsi + ]": 1,
                "jb ;add byte [rax], al;invalid;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 76,
                "jb ;outsb dx, byte [rsi];sub al, ;invalid;outsd dx, dword [rsi]": 48,
                "je ;pop rdi;jb ;outsb dx, byte [rsi];je str.func______ast.Comment": 4,
                "movsxd rbp, dword [rax];sub dword [rax], esp;sub dh, byte [rcx + rbp*2 + ];outsd dx, dword cs:[rsi];movsxd rsp, dword [rcx + ]": 8,
                "outsd dx, dword cs:[rsi];movsxd rsp, dword [rcx + ];imul ebp, dword [rdi + ], ;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 8,
                "jns str.func_complex128__bool;jo ;add byte [rsi], dl;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 10,
                "movsxd rbp, dword [rax];sub dword [rax], esp;jae ;jae ;invalid": 11,
                "outsd dx, dword [rsi];jb ;add byte [rsi], dl;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 15,
                "push rsp;imul ebp, dword [rbp + ], ;jb ;jb ;add byte [rsi], dl": 17,
                "jb ;jb ;add byte [rsi], dl;sub ch, byte [rbp + ];jo ": 17,
                "jb ;add byte [rsi], dl;sub ch, byte [rbp + ];jo ;push ": 17,
                "outsd dx, dword [rsi];push bx;je ;je ;insd dword [rdi], dx": 19,
                "outsb dx, byte gs:[rsi];je ;add byte [rsi], dl;sub dh, byte [rax + ];jb ": 14,
                "sub dh, byte [rax + ];jb ;jb ;pop rdi;push rdx": 14,
                "invalid;movsxd rsp, dword [rbp + ];je ;movsxd rbp, dword [rbx + ];je ": 7,
                "insb byte [rdi], dx;push rbx;outsd dx, dword [rsi];movsxd rbp, dword [rbx + ];sub ah, byte [rsi + ]": 1,
                "jne ;movsxd rsi, dword [rcx + rbp*2 + ];outsb dx, byte [rsi];add byte [rax], al;invalid": 4,
                "jne ;jne ;movsxd rsi, dword [rcx + rbp*2 + ];outsb dx, byte [rsi];invalid": 2,
                "je ;and byte [rcx + ], ch;je ;add byte [rax], al;invalid": 1,
                "movsxd rbp, dword [rax];insw word [rdi], dx;je ;push rbx;je ": 7,
                "imul ebp, dword [rsi + ], ;outsb dx, byte [rsi];je ;xor ch, byte [rax];imul ebp, dword [rsi + ], ": 10,
                "movsxd rsi, dword gs:[rsi + rbp + ];jns ;add byte gs:[rax], al;invalid;sub ah, byte [rsi + ]": 12,
                "push rbx;je ;imul ebp, dword [rsi + ], ;sub ch, byte [rbp + ];jo ": 13,
                "insd dword [rdi], dx;outsb dx, byte gs:[rsi];je ;add byte [rdi], dl;sub dh, byte [rdx + ]": 13,
                "movsxd rsp, dword cs:[rdi + ];je ;jb ;invalid;jae ": 12,
                "jae ;invalid;jb ;add byte [rax], al;invalid": 12,
                "invalid;jb ;add byte [rax], al;invalid;sub dh, byte [rdx + ]": 12,
                "jb ;add byte [rdi], dl;sub dh, byte [rbx + ];outsb dx, byte [rsi];movsxd rbp, dword [rsi]": 8,
                "insb byte [rdi], dx;outsd dx, dword [rsi];movsxd rsp, dword [rcx + ];outsb dx, byte [rsi];je ": 7,
                "sub dh, byte [rbx + ];jae str.FindStringSubmatchIndex;invalid;insb byte [rdi], dx;insb byte [rdi], dx": 6,
                "jae str.GetUserProfileDirectory;invalid;insb byte [rdi], dx;insb byte [rdi], dx;ja ": 5,
                "jne ;movsxd rsi, dword [rcx + rbp*2 + ];outsb dx, byte [rsi];sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "jb ;jb ;imul bp, word [rbp + ], ;movsxd rsi, dword gs:[rdi + rbp*2 + ];jns ": 2,
                "push rdx;jb ;outsb dx, byte [rsi];movsxd rsp, dword [rbp + ];jb ": 3,
                "insb byte [rdi], dx;imul r14, qword [rbp + ], ;jb ;outsb dx, byte [rsi];add eax, dword [eax]": 2,
                "jne ;movsxd rsp, dword [rbp + ];add byte [rsi], cl;push ;outsd dx, dword [rsi]": 2,
                "invalid;push rsi;jb ;imul ebp, dword [rdi + ], ;push ": 2,
                "imul ebp, dword [rdi + ], ;push ;outsd dx, dword [rsi];outsb dx, byte [rsi];cmp ah, byte [rdx]": 2,
                "jbe ;jne ;movsxd rsi, dword [rcx + rbp*2 + ];outsb dx, byte [rsi];invalid": 18,
                "outsd dx, dword [rsi];outsb dx, byte [rsi];push rbx;je str.179999__runtime.bucket;je ": 2,
                "push rbx;je str.179999__runtime.bucket;je ;insd dword [rdi], dx;outsb dx, byte gs:[rsi]": 1,
                "movsxd rbp, dword [rax];sub dword [rax], esp;sub byte [rsi + ], ah;outsd dx, dword [rsi];invalid": 2,
                "movsxd rsp, dword [rbp + ];jae ;and byte [rbp + ], ah;jb ;jb ": 5,
                "jne ;add byte [rax], al;sbb byte [rdx], ch;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 8,
                "outsd dx, dword [rsi];jae ;imul r13d, dword [rbp + r12*2 + ], ;and byte [rbp + ], ah;jb ": 15,
                "jns ;sub dword gs:[rax], esp;invalid;outsd dx, dword [rsi];outsd dx, dword [rsi]": 13,
                "outsb dx, byte [rsi];sub dword [eax], esp;outsd dx, dword [rsi];je ;outsd dx, dword [rsi]": 22,
                "invalid;jb ;push ;jo ;jb ": 14,
                "jo ;pop rdi;imul ebp, dword [rsi + ], ;sub ch, byte [rdi + ];je ": 14,
                "movsxd rsi, dword [rcx + rbp*2 + ];outsb dx, byte [rsi];add byte [rax], al;sbb byte [rdx], ch;outsd dx, dword [rsi]": 14,
                "outsd dx, dword [rsi];pop rdi;outsb dx, byte [rsi];outsd dx, dword [rsi];sub ah, byte [rsi + ]": 1,
                "je ;add byte [rax], bl;sub ch, byte [rdi + ];je ;sub ah, byte [rsi + ]": 1,
                "pop rdi;outsb dx, byte [rsi];outsd dx, dword [rsi];push rdx;js ": 9,
                "push rdx;js ;imul r14, qword [rbp + ], ;sbb byte [rdx], ch;sub ch, byte [rdi + ]": 9,
                "jne ;movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;add byte [rax], bl;sub dh, byte [rdx + ]": 25,
                "je ;insd dword [rdi], dx;jo ;jb ;imul esi, dword [rbx + ], ": 10,
                "je ;sub dh, byte [rdx + ];insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];jne ": 1,
                "pop rdi;jbe ;jb ;invalid;invalid": 5,
                "add byte [rax], al;sbb byte [rax + ], dh;jo ;jb ;imul esi, dword gs:[rdi + r14*2 + ], ": 4,
                "sub bl, byte [rbx + ];movsxd rbp, dword [rbp + ];insb byte [rdi], dx;pop rdi;jne ": 1,
                "jae ;xor al, ;outsd dx, dword [rsi];jb ;jne ": 1,
                "jne ;je ;outsb dx, byte [rsi];jo ;je ": 1,
                "movsxd rsi, dword gs:[rsi + rbp + ];je ;outsd dx, dword [rsi];add byte fs:[rax], al;sbb dword [rdx], ebp": 3,
                "je ;outsd dx, dword [rsi];add byte fs:[rax], al;sbb dword [rdx], ebp;sub ah, byte [rsi + ]": 3,
                "sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];imul ebp, dword [rdi + ], ;push rdx": 17,
                "outsb dx, byte [rsi];sub dword [eax], esp;imul ebp, dword [rsi + ], ;sub ch, byte [rbp + ];jo ": 7,
                "outsb dx, byte [rsi];je ;xor al, 0;add byte [rcx], bl;sub ch, byte [rbp + ]": 7,
                "je ;add byte [rcx], bl;sub ch, byte [rdi + ];je ;pop rdi": 30,
                "push ;insd dword [rdi], dx;outsb dx, byte gs:[rsi];je ;add byte [rcx], bl": 7,
                "je ;pop rdi;outsb dx, byte [rsi];outsd dx, dword [rsi];jne ": 6,
                "outsb dx, byte [rsi];outsd dx, dword [rsi];push rdi;push ;je ": 2,
                "push rdi;push ;je ;je ;insd dword [rdi], dx": 12,
                "imul r15d, dword gs:[rax + ], ;add dword [rax], eax;sbb dword [rdx], ebp;sub dh, byte [rdx + ];outsb dx, byte [rsi]": 2,
                "movsxd rcx, dword cs:[ebp + ];jb ;push rdi;outsd dx, dword [rsi];jb ": 1,
                "add byte gs:[rax], al;sbb dword [rdx], ebp;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ": 1,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;jae str.syscall.SIDAndAttributes;insd dword [rdi], dx": 1,
                "jb ;jae ;imul esp, dword [rdi + ], ;js ;jb ": 1,
                "insd dword [rdi], dx;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];sub ah, byte [rsi + ]": 1,
                "sub dh, byte [rdx + ];js ;push rdx;js ;sub dword [rax], esp": 2,
                "sub dword [rcx], ebp;and byte [rbp + ], ah;jb ;jb ;add byte [rdx], bl": 7,
                "add byte [rdx], bl;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];imul ebp, dword [rdi + ], ": 10,
                "push rdx;invalid;invalid;jb ;and byte [rbx + ], bl": 11,
                "outsb dx, byte [rsi];movsxd rbp, dword [rax];insb byte [rdi], dx;outsd dx, dword [rsi];jb ": 12,
                "outsd dx, dword [rsi];jb ;add byte [rdx], bl;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 13,
                "push rsp;jns ;jb ;outsd dx, dword [rsi];jb ": 16,
                "jns ;jb ;outsd dx, dword [rsi];jb ;add byte [rdx], bl": 16,
                "sbb ch, byte [rdx];sub ch, byte [rbp + ];jo ;jae ;jb ": 31,
                "jne ;outsb dx, byte [rsi];je ;add byte [rax], al;sbb ch, byte [rdx]": 16,
                "jb ;jns ;add byte [rdx], bl;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "outsb dx, byte gs:[rsi];je ;add byte [rdx], bl;sub ch, byte [rdi + ];sub ah, byte [rsi + ]": 1,
                "insb byte [rdi], dx;jb ;je ;je ;add byte [rax], al": 11,
                "movsxd rsi, dword [rdx + rax*2 + ];jb ;add byte [rdx], bl;sub dh, byte [rdx + ];outsb dx, byte [rsi]": 5,
                "add byte [rdx], bl;sub dh, byte [rdx + ];outsb dx, byte [rsi];je ;insd dword [rdi], dx": 5,
                "movsxd rbp, dword [rbx + ];invalid;push ;movsxd rsi, dword [rdx + rdx*2 + ];movsxd rbp, dword [rdi + ]": 4,
                "imul ebp, dword [rsi + ], ;invalid;je ;push ;sub ah, byte [rsi + ]": 1,
                "invalid;outsb dx, byte [rsi];insb byte [rdi], dx;add byte gs:[rax], al;sbb ah, byte [rbp + ]": 1,
                "add byte fs:[rax], al;sbb dh, byte [rax + ];jo ;jb ;jne str.e_func____int32__int__error": 1,
                "sbb ebp, dword [rdx];pop rbx;cmp byte [rbp + ], bl;jne ;je ": 1,
                "je ;sub dword [rax], esp;sub byte [rcx + ], ch;je ;and byte [rbp + ], ah": 5,
                "jb str.e_json.InvalidUnmarshalError;add byte [rbx], bl;sbb ebp, dword [rdx];push ;outsd dx, dword [rsi]": 11,
                "insb byte [rdi], dx;imul esp, dword [rbp + rdx*2 + ], ;push ;jb ;jb str.e_json.UnsupportedValueError": 11,
                "push ;jb ;jb str.e_json.UnsupportedValueError;add byte [rbx], bl;sbb ebp, dword [rdx]": 11,
                "invalid;jne ;imul esp, dword [rbp + ], ;outsd dx, dword [esi];invalid": 36,
                "sbb ebp, dword [rdx];outsd dx, dword [rsi];sbb ebp, dword [rdx];jne ;movsxd rbp, dword [rax]": 1,
                "pop rdi;outsb dx, byte [rsi];outsd dx, dword [rsi];imul ebp, dword gs:[rsi + ], ;jo ": 13,
                "imul ebp, dword [rdi + ], ;sbb ebp, dword [rdx];outsd dx, dword [rsi];je ;sbb ebp, dword [rdx]": 1,
                "je ;jb ;invalid;movsxd rsp, dword [rbp + ];je ": 8,
                "add byte [rax], al;sbb ebp, dword [rdx];jb ;sbb ebp, dword [rdx];jne ": 1,
                "jb ;je str.func_interface_____uintptr;outsd dx, dword [rsi];outsb dx, byte [rsi];sub dword [rax], esp": 2,
                "add byte [rdx + rbp], bl;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];jae str.map.bucket_reflect.Type_int": 7,
                "jae ;jb ;outsb dx, byte [rsi];sub dword [eax], esp;jae ": 24,
                "jns ;pop rbp;sub ah, byte [rdi + ];invalid;outsb dx, byte gs:[rsi]": 23,
                "invalid;invalid;jne ;jb ;je ": 7,
                "insb byte [rdi], dx;insb byte [rdi], dx;push rbx;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "xor eax, ;jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx": 1,
                "je ;insd dword [rdi], dx;push ;jb str.func____interface_____error;outsb dx, byte [rsi]": 1,
                "insb byte [rdi], dx;sub dword [rax], eax;add byte [], bl;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 7,
                "outsb dx, byte gs:[rsi];je ;add byte [rax], al;sbb eax, ;sub ah, byte [rsi + ]": 8,
                "sub al, ;pop rbx;pop rbp;jae ;jb ": 13,
                "jb ;outsb dx, byte [rsi];sub al, ;jne ;movsxd rbp, dword [rax]": 20,
                "outsb dx, byte [rsi];sub al, ;jne ;movsxd rbp, dword [rax];sub dword [rax], esp": 14,
                "imul ebp, dword [rsi + ], ;pop rbx;pop rbp;jae ;jb ": 15,
                "outsb dx, byte [rsi];movsxd rbp, dword [rax];jae ;jae ;invalid": 18,
                "outsd dx, dword [rsi];jb ;add byte [rax], al;sbb eax, ;sub ch, byte [rbp + ]": 16,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];insb byte [rdi], dx;add byte [rax], al;sbb eax, ": 27,
                "imul esi, dword [rbp + ], ;imul ebp, dword [rsi + ], ;jb ;invalid;movsxd rsp, dword [rbp + ]": 13,
                "invalid;movsxd rsp, dword [rbp + ];jnp ;add byte [rax], al;sbb eax, ": 13,
                "pop rbp;sub ah, byte [rdi + ];invalid;ja str.map_string_otto._dclProperty;jb ": 11,
                "jns ;add byte gs:[rax], al;sbb eax, ;sub ch, byte [rbp + ];jo str.map_string_otto._dclProperty": 11,
                "sbb eax, ;sub ch, byte [rbp + ];jo str.map_string_otto._dclProperty;imul ebp, dword [rsi + ], ;movsxd rsp, dword [rbp + ]": 11,
                "jnp ;pop rbp;sub dh, byte [rbx + ];outsb dx, byte [rsi];movsxd rbp, dword [rsi]": 27,
                "jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];jns str.otto._nodeVariableExpression;pop rbp": 10,
                "sbb eax, ;sub ch, byte [rbp + ];jo str.otto._nodeVariableExpression;jae ;jb ": 9,
                "jo ;jb ;jns ;add byte [], bl;sub ch, byte [rdi + ]": 8,
                "jns ;add byte [], bl;sub ch, byte [rdi + ];je ;pop rdi": 7,
                "js ;jb ;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 1,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];je ;adc dword [rdx + ], ebp;push ": 5,
                "add byte [rax], al;sbb eax, ;movsxd rbp, dword [rbp + ];insb byte [rdi], dx;pop rdi": 4,
                "add byte [], bl;jo ;jb ;jne ;je ": 3,
                "jae ;imul ebp, dword [rdi + ], ;sub bl, byte [rbx + ];pop rbp;pop rbx": 2,
                "invalid;movsxd rbp, dword [rax + ];outsb dx, byte [rsi];je ;add byte [rsi], bl": 2,
                "sub ah, byte [rdx + ];sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];jne ": 1,
                "pop rbp;jne str.func_string_____uint8__error;outsb dx, byte [rsi];je ;add byte [rax], al": 4,
                "outsd dx, dword [rsi];outsb dx, byte [rsi];add byte [rax], al;invalid;sub ah, byte [rsi + ]": 5,
                "imul ebp, dword [rbp + ], ;insd dword [rdi], dx;jne ;invalid;je ": 12,
                "invalid;jne ;imul esp, dword [rbp + ], ;sub ah, byte [rdi + ];invalid": 12,
                "jo ;push ;je ;imul ebp, dword [rsi + ], ;outsd dx, dword [rsi]": 20,
                "sub ch, byte [rbp + ];jo ;outsd dx, dword [rsi];je ;outsd dx, dword [rsi]": 12,
                "je ;outsd dx, dword [rsi];pop rdi;insb byte [rdi], dx;jae ": 17,
                "jbe ;js ;invalid;push ;jne ": 7,
                "push rbp;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];jae ": 1,
                "push rax;push rbp;push rax;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "js ;push ;insd dword [rdi], dx;jbe ;jbe ": 2,
                "push rbp;jne ;ja ;jns ;imul esi, dword [rdi + ], ": 2,
                "push rdi;pop rdx;movsxd r13, dword [rdx + ];insb byte [rdi], dx;invalid": 1,
                "movsxd rbp, dword [rax];sub dword [rax], esp;sub byte [rbx + ], dh;jae ;invalid": 6,
                "outsb dx, byte [rsi];je ;sub dword [rax], esp;imul ebp, dword [rsi + ], ;sub ah, byte [rsi + ]": 2,
                "sub dword [rax], esp;imul ebp, dword [rsi + ], ;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 2,
                "je ;and byte [rbx + ], bl;pop rbp;jne ;outsb dx, byte [rsi]": 8,
                "outsd dx, dword [rsi];insb byte [rdi], dx;sub dword [rax], eax;add byte [rdi], bl;sub ch, byte [rbp + ]": 14,
                "movsxd rcx, dword gs:[rax + ];insb byte [rdi], dx;jo ;sub ah, byte [rsi + ];outsb dx, byte [rsi]": 1,
                "pop rbp;sub ah, byte [rbp + ];imul ebp, dword [esi + ], ;imul esi, dword [rsi + ], ;je ": 19,
                "add byte [rdi], bl;sub ch, byte [rbp + ];sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 1,
                "jae ;jae ;jb ;outsb dx, byte [rsi];and byte [ebp + 1], bh": 3,
                "invalid;jne ;sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 1,
                "jb ;invalid;jne ;invalid;invalid": 2,
                "invalid;jne ;invalid;invalid;invalid": 2,
                "jne ;movsxd rbp, dword [rax];sub dword [rax], esp;sub byte [rbx + ], dh;jae ": 5,
                "outsb dx, byte [rsi];outsb dx, byte [rsi];sub al, ;jb ;outsd dx, dword [rsi]": 1,
                "jne ;je ;imul esp, dword [rbp + ], ;and byte [rdx], ch;jne ": 3,
                "invalid;insb byte [rdi], dx;jne ;add byte [rax], al;and byte [rdx], ch": 5,
                "add byte [rax], al;and byte [rdx], ch;insd dword [rdi], dx;invalid;jo ": 25,
                "jne ;imul esp, dword [rbp + ], ;outsd dx, dword [esi];invalid;je str.map.hdr_reflect.Type__gob.decOp": 5,
                "outsd dx, dword [esi];invalid;je str.map.hdr_reflect.Type__gob.decOp;jo ;pop rbp": 5,
                "invalid;jne ;imul esp, dword [rbp + ], ;imul ebp, dword [rsi + ], ;outsb dx, byte [rsi]": 5,
                "imul esp, dword [rbp + ], ;imul ebp, dword [rsi + ], ;outsb dx, byte [rsi];jae ;push ax": 5,
                "je ;xor al, byte [rax];add byte [rax], ah;and byte [rdx], ch;insd dword [rdi], dx": 5,
                "je ;jo ;add byte fs:[rax], al;and byte [rdx], ch;insd dword [rdi], dx": 5,
                "insd dword [rdi], dx;invalid;jo ;push ;imul ebp, dword [rsi + ], ": 5,
                "jo ;add byte [rax], al;and byte [rdx], ch;insd dword [rdi], dx;invalid": 5,
                "je ;pop rdi;outsd dx, dword [rsi];invalid;push ": 66,
                "and byte [rdx], ch;insd dword [rdi], dx;invalid;jo ;jb ": 5,
                "outsb dx, byte [rsi];insb byte [rdi], dx;imul r13d, dword gs:[rbp + r12*2 + ], ;insd dword [rdi], dx;invalid": 9,
                "outsd dx, dword [rsi];and byte [rdx], ch;jne ;movsxd rbp, dword [rax];imul ebp, dword [rsi + ], ": 1,
                "je ;je ;sub al, ;jb ;outsd dx, dword [rsi]": 5,
                "movsxd rbp, dword [rbx + ];jb ;and byte [rbp + ], ah;jb ;jb ": 13,
                "jne ;sub al, ;jb ;outsd dx, dword [rsi];jb ": 32,
                "jo ;invalid;jne str.map.bucket_string_token._keyword;imul esp, dword [rbp + ], ;outsd dx, dword [esi]": 9,
                "sub ah, byte [rdi + ];invalid;movsxd rcx, dword gs:[rdi + ];add byte [rax], al;and dword [rdx], ebp": 9,
                "invalid;movsxd rcx, dword gs:[rdi + ];add byte [rax], al;and dword [rdx], ebp;insd dword [rdi], dx": 9,
                "insd dword [rdi], dx;invalid;jo ;invalid;jne str.map.hdr_string__engine.NativeVar": 10,
                "outsd dx, dword [rsi];insb byte [rdi], dx;add byte [rax], al;and dword [rdx], ebp;insd dword [rdi], dx": 10,
                "invalid;jo ;push ;outsb dx, byte [rsi];je ": 10,
                "outsb dx, byte [rsi];movsxd rbp, dword [rsi];outsb dx, byte gs:[rsi];je ;and dword [rdx], ebp": 1,
                "je ;imul ebp, dword [rsi + ], ;outsd dx, dword [rsi];pop rdi;movsxd rbp, dword fs:[rax + rdx*2 + ]": 8,
                "imul ebp, dword [esi + ], ;and dword [rdx], ebp;jne ;movsxd rbp, dword [rax];imul ebp, dword [rsi + ], ": 1,
                "xor al, ;jge ;add byte [rcx], ah;and dword [rdx], ebp;jae ": 3,
                "jge ;add byte [rcx], ah;and dword [rbx + ], esp;jo ;pop rdi": 2,
                "outsw dx, word [rsi];sub al, ;jb ;outsd dx, dword [rsi];jb ": 1,
                "jb ;add byte [rax], al;and ch, byte [rdx];jne ;movsxd rbp, dword [rax]": 3,
                "outsb dx, byte [rsi];add byte [rax], al;and ch, byte [rdx];insd dword [rdi], dx;invalid": 4,
                "jb ;invalid;movsxd rsp, dword [rbp + ];jnp str.memorymodule._Ctype_HMEMORYMODULE;pop rbp": 4,
                "jnp str.memorymodule._Ctype_HMEMORYMODULE;pop rbp;sub dh, byte [rbx + ];outsb dx, byte [rsi];movsxd rbp, dword [rsi]": 4,
                "invalid;jo ;imul esi, dword [rbp + ], ;imul ebp, dword [rsi + ], ;imul ebp, dword [esi + ], ": 17,
                "imul esi, dword [rbp + ], ;imul ebp, dword [rsi + ], ;imul ebp, dword [esi + ], ;imul esi, dword [rsi + ], ;add byte [rdx], ah": 4,
                "je ;jae ;pop rbp;sub ch, byte [rdi + ];je ": 9,
                "jae ;add byte [rax], al;and ch, byte [rdx];insd dword [rdi], dx;insd dword [rdi], dx": 4,
                "push ;jne ;outsb dx, byte [rsi];je ;xor ah, byte [rax]": 4,
                "outsb dx, byte [rsi];and byte [ebp], bh;add byte [rdx], ah;and ch, byte [rdx];jne ": 1,
                "jb ;and ch, byte [rdx];jne ;movsxd rbp, dword [rax];imul ebp, dword [rsi + ], ": 1,
                "movsxd rbp, dword [rsi];and ebp, dword [rdx];jne ;movsxd rbp, dword [rax];sub dword [rax], esp": 1,
                "invalid;jb ;push ;add byte [rax], al;and ebp, dword [rdx]": 2,
                "and ebp, dword [rdx];jne ;movsxd rbp, dword [rax];sub dh, byte [rbx + ];jae ": 3,
                "outsd dx, dword [rsi];je ;outsd dx, dword [rsi];jne ;movsxd rsi, dword [rcx + rbp*2 + ]": 4,
                "invalid;insb byte [rdi], dx;jne ;add byte [rax], al;and ebp, dword [rdx]": 4,
                "and ebp, dword [rdx];jne ;movsxd rbp, dword [rax];jb ;insb byte [rdi], dx": 5,
                "outsb dx, byte [rsi];sub dword [eax], esp;sub byte [rdx], ch;outsd dx, dword [rsi];je ": 6,
                "je ;jo ;add byte [rax], al;and ebp, dword [rdx];insd dword [rdi], dx": 6,
                "and ebp, dword [rdx];insd dword [rdi], dx;invalid;jo ;and ebp, dword [rdx]": 1,
                "outsb dx, byte [rsi];push rdx;invalid;outsb dx, byte [rsi];and byte fs:[rbp], bh": 1,
                "jne ;outsb dx, byte [rsi];je ;and al, ;pop rbx": 1,
                "sub dword gs:[eax], esp;jb ;outsd dx, dword [rsi];jb ;add byte [rdx + rbp], ah": 2,
                "outsb dx, byte [rsi];sub dword [eax], esp;sub byte [rdx + ], dh;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 12,
                "insb byte [rdi], dx;add byte [rax], al;and al, ;insd dword [rdi], dx;invalid": 6,
                "imul esp, dword [rbp + ], ;imul ebp, dword [rsi + ], ;movsxd rsp, dword [rbp + ];jnp ;pop rbp": 6,
                "imul esi, dword [rdx + ], ;movsxd rsi, dword [rax + ];jge ;add byte [rdx + rbp], ah;and al, ": 6,
                "jb ;outsb dx, byte [rsi];and byte [ebp], bh;add byte [rdx + rbp], ah;and al, ": 3,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;and byte cs:[ebp], bh;add byte [rdx + rbp], ah": 2,
                "and byte [rsi + ], al;jne ;outsb dx, byte [rsi];je ;and eax, ": 1,
                "imul esp, dword [rbp + ], ;and byte [rdx], ch;pop rbx;pop rbp;jae ": 5,
                "je ;and byte [rbp], bh;add byte [], ah;and eax, ;jne ": 5,
                "jb ;outsd dx, dword [rsi];jb ;add byte [rax], al;sub ah, byte es:[rsi + ]": 15,
                "and byte [rdx + ], ah;outsd dx, dword [rsi];insb byte [rdi], dx;add byte [rax], al;sub ah, byte es:[rsi + ]": 7,
                "jne ;add byte [rax], al;sub ah, byte es:[rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax]": 14,
                "movsxd rbp, dword [rax];jne ;movsxd rbp, dword [rax];jae ;jb ": 10,
                "outsd dx, dword [rsi];sub ah, byte es:[rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];sub dword [rax], esp": 1,
                "add byte [rax], al;sub ch, byte es:[rbp + ];jo ;invalid;jne ": 20,
                "outsd dx, dword [esi];invalid;movsxd rax, dword gs:[rbp + ];imul ebp, dword [esi + ], ;sub ch, byte es:[rbp + ]": 10,
                "je ;add byte [rsi], ah;sub ch, byte es:[rbp + ];jo ;invalid": 9,
                "jb ;movsxd rsi, dword [rax + ];and byte [rsi + ], al;jne ;sub ah, byte es:[rsi + ]": 1,
                "je ;je ;cmp esp, dword [rax];jae ;insb byte [rdi], dx": 15,
                "imul ebp, dword [rbp + ], ;xor al, ;jge ;add byte [rsi], ah;sub dh, byte es:[rbx + ]": 4,
                "imul esi, dword [eax + ebp*2 + ], ;sub ah, byte es:[rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rax];jae ": 1,
                "add byte [rax], al;add byte [rdi], ah;invalid;imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx": 2,
                "imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx;invalid;outsb dx, byte gs:[esi];xor byte [rbx + ], ah": 23,
                "invalid;imul esi, dword [rdx + ], ;movsxd rsi, dword [rax + ];jge ;add byte [rdi], ah": 6,
                "invalid;invalid;invalid;invalid;movsxd rsp, dword [rbp + ]": 6,
                "imul ebp, dword [rsi + ], ;movsxd rsp, dword [rbp + ];jnp ;sub dword [rax], esp;sub byte [rcx + ], ch": 6,
                "jnp ;sub al, ;invalid;invalid;sub ah, byte [rsi + ]": 1,
                "je ;cmp esp, dword [rax];insb byte [rdi], dx;insd dword [rdi], dx;jo ": 8,
                "cmp esp, dword [rax];insb byte [rdi], dx;insd dword [rdi], dx;jo ;sub ah, byte [rdi + ]": 10,
                "sub dword [rdx], ebp;jne ;movsxd rbp, dword [rax];jae ;jb ": 13,
                "outsb dx, byte [rsi];sub al, ;jne ;movsxd rbp, dword [rax];jae ": 6,
                "sub al, ;sub ah, byte [rbp + ];imul ebp, dword [esi + ], ;imul esi, dword [rsi + ], ;invalid": 5,
                "add byte [rdx], ch;sub ch, byte [rdx];jne ;movsxd rbp, dword [rax];jne ": 5,
                "imul ebp, dword [rsi + ], ;jne str.map_int_func_otto.Value__otto.Value__bool;jae ;push ax;outsd dx, dword [rsi]": 6,
                "jne str.map_int_func_otto.Value__otto.Value__bool;jae ;push ax;outsd dx, dword [rsi];imul ebp, dword [rsi + ], ": 6,
                "jo ;add byte [rax], al;sub ch, byte [rdx];insd dword [rdi], dx;invalid": 6,
                "invalid;sub ch, byte [rdx];jne ;movsxd rbp, dword [rax];sub dword [rax], esp": 1,
                "push rdx;and byte [rdx + ], ch;outsd dx, dword [rsi];outsb dx, byte [rsi];insb byte [rdi], dx": 4,
                "je ;sub dword [rax], esp;sub ch, byte [rdx];insd dword [rdi], dx;invalid": 1,
                "je ;je ;cmp esp, dword [rax];invalid;and byte [rbx + ], bl": 4,
                "cmp esp, dword [rax];invalid;and byte [rbx + ], bl;jae ;jb ": 3,
                "jb ;outsb dx, byte [rsi];cmp esp, dword [eax];js ;jae ": 8,
                "imul sp, word cs:[rbp + ], ;jge ;add byte [rbx], ch;sub ebp, dword [rdx];jae ": 3,
                "outsb dx, byte [rsi];sub dword [eax], esp;sub ch, byte [rdi + ];je ;pop rdi": 4,
                "jne ;movsxd rbp, dword [rax];jae ;jb ;sub ebp, dword [rdx]": 1,
                "jae ;invalid;insb byte [rdi], dx;insb byte [rdi], dx;jns ": 6,
                "je ;sub al, ;jne ;movsxd rbp, dword [rax];jne ": 1,
                "and byte [rdx], ch;insd dword [rdi], dx;invalid;imul ebp, dword [rsi + ], ;push rbp": 8,
                "je ;jnp ;push rbx;je ;jne ": 6,
                "outsb dx, byte [rsi];and byte [ebp], bh;add byte [], ch;sub eax, ;pop rdi": 5,
                "add byte [], ch;sub eax, ;pop rdi;jbe ;insb byte [rdi], dx": 5,
                "add byte [rsi], ch;sub dh, byte cs:[rbx + ];jb ;movsxd rsi, dword [rax + ];and byte [rbx + ], dh": 4,
                "jb ;outsd dx, dword [rsi];jb ;jge ;add byte [rdi], ch": 3,
                "jb ;jge ;add byte [rdi], ch;invalid;sub ah, byte [rsi + ]": 3,
                "outsb dx, byte [rsi];je ;add byte [rax], al;invalid;sub dh, byte [rbx + ]": 3,
                "jo ;and byte [rdx], ch;jne ;outsb dx, byte [rsi];je ": 3,
                "and byte [rbp], bh;add byte [rax], dh;xor byte [rdx], ch;jne ;movsxd rbp, dword [rax]": 3,
                "add byte [rax], al;xor byte [rdx], ch;jne ;movsxd rbp, dword [rax];imul ebp, dword [rsi + ], ": 4,
                "invalid;insb byte [rdi], dx;jne ;add byte [rax], al;xor byte [rdx], ch": 6,
                "outsd dx, dword [esi];invalid;movsxd rax, dword gs:[rbp + ];imul ebp, dword [esi + ], ;xor byte [rdx], ch": 9,
                "xor byte [rdx], ch;jae ;jb ;movsxd rsi, dword [rax + ];and byte [rsi + ], al": 17,
                "imul ebp, dword [esi + ], ;sub ch, byte [rdx];outsd dx, dword [esi];invalid;movsxd rax, dword gs:[rbp + ]": 7,
                "je ;and byte [rbp], bh;add byte [rax], dh;xor byte [rdx], ch;jae ": 7,
                "outsb dx, byte [rsi];je ;xor byte [rdx], ch;jne ;movsxd rbp, dword [rax]": 1,
                "jae ;movsxd rsp, dword [rax];jne ;outsb dx, byte [rsi];je ": 3,
                "movsxd rsi, dword [rax + ];and byte [rdx + ], dh;outsd dx, dword [rsi];je ;jb ": 7,
                "jne ;outsb dx, byte [rsi];je str.1_func_string__interface_______otto.Script__error;and byte [rbp], bh;add byte [rcx], dh": 3,
                "je ;add byte [rax], al;xor byte [rdx], ch;jne ;movsxd rbp, dword [rax]": 1,
                "add byte [rax], al;xor byte [rdx], ch;jne ;movsxd rbp, dword [rax];jb ": 1,
                "add byte [rax], al;xor dword [rdx], ebp;jne ;movsxd rbp, dword [rax];jae ": 4,
                "jo ;sub al, ;jb ;outsd dx, dword [rsi];xor dword [rdx], ebp": 1,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];insb byte [rdi], dx;add byte [rax], al;xor dword [rdx], ebp": 4,
                "cmp esp, dword [rax];pop rdi;pop rdi;and byte [rdx], ch;jb str.2_struct___F_uintptr__sv___json.reflectWithString": 4,
                "je ;imul ebp, dword [rsi + ], ;xor ch, byte [rdx];jae ;jb ": 4,
                "je ;insd dword [rdi], dx;imul r14, qword cs:[ebx + ], ;xor ch, byte [rdx];jae ": 4,
                "jb ;jne ;xor dword [rdx], ebp;insd dword [rdi], dx;invalid": 1,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;cmp esp, dword cs:[eax];je ": 2,
                "je ;je ;cmp esp, dword [rax];outsd dx, dword [rsi];insb byte [rdi], dx": 5,
                "cmp esp, dword [rax];outsd dx, dword [rsi];insb byte [rdi], dx;jbe ;insb byte [rdi], dx": 5,
                "and byte [rsi + ], ch;ja ;invalid;insb byte [rdi], dx;and byte [rbp + ], dh": 3,
                "xor ebp, dword [rdx];jae ;jb ;movsxd rsi, dword [rax + ];and byte [rdi + ], ch": 1,
                "jae ;outsd dx, dword cs:[rsi];sub al, ;pop rbx;pop rbp": 1,
                "xor al, ;jne ;movsxd rbp, dword [rax];jne ;movsxd rbp, dword [rax]": 2,
                "insb byte [rdi], dx;sub dword [rax], esp;sub byte [rdx + ], dh;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 2,
                "insb byte [rdi], dx;sub dword [rax], eax;add byte [rdx + rbp], dh;xor al, ;jae ": 2,
                "je ;insd dword [rdi], dx;cmp esp, dword cs:[eax];jae ;invalid": 2,
                "push rdi;outsd dx, dword [rsi];jb ;and byte [rcx + ], ch;je ": 2,
                "add byte [eax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rax], cl;add byte [rax], al;add byte [rax], al": 17,
                "add byte [rax], al;add byte [rax], al;xchg eax, esp;mov dword [rax], 0;add byte [rax + ], al": 2,
                "add byte [rax], al;xchg eax, esp;mov dword [rax], 0;add byte [rax + ], al;add byte [eax], al": 1,
                "xor eax, ;jne ;je ;jnp ;and byte [rbp + ], r14b": 3,
                "jnp ;jae ;jp ;and byte [rbp + ], dh;outsb dx, byte [rsi]": 1,
                "invalid;insb byte [rdi], dx;insb byte [rdi], dx;outsd dx, dword [rsi];movsxd rsp, dword [rax]": 4,
                "outsd dx, dword [rsi];movsxd rsp, dword [rax];jne ;outsb dx, byte [rsi];je ": 4,
                "je ;xor al, ;jge ;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], bl;add byte [rax], al;add byte [rax], al;add byte [rax], al": 2,
                "invalid;jmp ;add byte [rax], al;sub byte [], 0;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;sbb byte [rax], al": 2,
                "je ;je ;cmp esp, dword [rax];and byte gs:[rdx], ch;outsb dx, byte gs:[rsi]": 2,
                "sub bl, byte [rbx + ];jae ;jb ;movsxd rsi, dword [rax + ];and byte [rbx + ], dl": 2,
                "and byte [rbx + ], dh;jp ;and byte [rbp + ], dh;outsb dx, byte [rsi];je ": 2,
                "outsb dx, byte [rsi];je ;je ;cmp esp, dword [rax];sub ah, byte ss:[rsi + ]": 1,
                "jb ;outsb dx, byte [rsi];and byte [ebp], bh;add byte [rdi], dh;invalid": 2,
                "invalid;sub dh, byte [rbx + ];jb ;movsxd rsi, dword [rax + ];and byte [rbp + ], dh": 2,
                "invalid;insb byte [rdi], dx;and byte gs:[rdx + ], dh;outsb dx, byte [rsi];je ": 2,
                "insd dword [rdi], dx;push rcx;jne ;jne ;cmp esp, dword [rax]": 2,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];insb byte [rdi], dx;sub dword [rax], eax;add byte [rax], bh": 3,
                "pop rbx;xor dword ss:[rbp + ], ebx;je ;jne ;je ": 2,
                "and byte [rsi + ], al;cmp byte [rdx], ch;jne ;movsxd rbp, dword [rax];sub dh, byte [rdx + ]": 1,
                "invalid;pop rbp;jae ;jb ;movsxd rsi, dword [rax + ]": 1,
                "sub ah, byte [rdx + ];outsd dx, dword [rsi];insb byte [rdi], dx;and byte [rbp], bh;add byte [rdx], bh": 2,
                "jne ;imul esp, dword [rbp + ], ;jge ;add byte [rdx], bh;cmp ch, byte [rdx]": 2,
                "add byte [rdx], bh;cmp ch, byte [rdx];jae ;jb str.struct___F_uintptr__frame__runtime.stkframe__bad_uintptr;movsxd rsi, dword [rax + ]": 2,
                "cmp ch, byte [rdx];jae ;jb str.struct___F_uintptr__frame__runtime.stkframe__bad_uintptr;movsxd rsi, dword [rax + ];and byte [rdi + rbp*2 + ], ch": 2,
                "jae ;jb str.struct___F_uintptr__frame__runtime.stkframe__bad_uintptr;movsxd rsi, dword [rax + ];and byte [rdi + rbp*2 + ], ch;imul esp, dword [rax], ": 2,
                "add byte [rbx], bh;cmp ebp, dword [rdx];jae ;jb ;movsxd rsi, dword [rax + ]": 5,
                "outsb dx, byte [rsi];cmp esp, dword [eax];jae ;movsxd rsp, dword [rax];jae ": 8,
                "movsxd rsp, dword [rax];jae ;jb ;outsb dx, byte [rsi];and byte [ebp], bh": 8,
                "je ;insd dword [rdi], dx;cmp esp, dword cs:[eax];jo ;and byte [rbp + ], dh": 3,
                "outsd dx, dword [esi];invalid;jne ;jb ;jns ": 3,
                "xor ch, byte [rax];sub dh, byte [rbp + ];outsb dx, byte [rsi];je ;sub dword [rax], esp": 2,
                "sub byte [rsi], bh;invalid;add dword [rcx], eax;add eax, ;add byte gs:[rax], al": 2,
                "add byte [rsi + ], dh;jne ;add byte [rax], al;add byte [rax], al;mov dl, 0": 1,
                "add byte [rcx + ], ah;or byte [rax], cl;xor dh, al;jp ;add byte [rax], al": 1,
                "std;stc;add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "insd dword [rdi], dx;push rsp;sbb dh, byte [rbx - ];jo ;add byte gs:[rax], al": 1,
                "invalid;push ;movsxd rsi, dword [rsp + rbp + ];sub ch, byte [rdi + ];je ": 4,
                "outsb dx, byte [rsi];sub al, ;jne ;movsxd rbp, dword [rax];sub dh, byte [rax + ]": 4,
                "outsd dx, dword [rsi];outsd dx, dword [rsi];insb byte [rdi], dx;cmp esp, dword [rax];outsd dx, dword [rsi]": 7,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;jo ;and byte [rdi + ], bl": 6,
                "jbe ;insb byte [rdi], dx;jne ;and byte [rbx + ], dh;jb ": 5,
                "js ;push rdx;js ;cmp esp, dword [rax];jb ": 5,
                "jb ;outsb dx, byte [rsi];je ;invalid;sub ah, byte [rsi + ]": 1,
                "cmp esp, dword gs:[rax];jae ;insb byte [rdi], dx;and byte [rdx], ch;outsd dx, dword [rsi]": 6,
                "push ;movsxd rsi, dword [rax + ];add byte [rax], al;sub sil, byte [rbx + ];jb ": 4,
                "outsb dx, byte gs:[rsi];outsw dx, word [rsi];and byte [rbp], bh;add byte [rdx + ], al;sub sil, byte [rbx + ]": 1,
                "insb byte [rdi], dx;outsd dx, dword [rsi];invalid;je ;and byte [rdx + ], ah": 1,
                "and byte [rdx + ], ah;outsd dx, dword [rsi];insb byte [rdi], dx;add byte [rax], al;sub r14b, byte [r11 + ]": 1,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;cmp esp, dword gs:[rax];outsb dx, byte [rsi]": 1,
                "je ;je ;cmp esp, dword [rax];jbe ;outsd dx, dword [rsi]": 1,
                "movsxd rsi, dword gs:[rsi + rbp + ];jns ;cmp esp, dword gs:[rax];jae ;insb byte [rdi], dx": 2,
                "jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx;and byte gs:[rbp], bh": 1,
                "movsxd rsi, dword [rsi + ];jb ;jne ;outsb dx, byte [rsi];je ": 1,
                "sub dword [rax], esp;sub byte [rbx + ], dh;jb ;outsd dx, dword [rsi];outsb dx, byte [rsi]": 1,
                "invalid;je ;add byte [rax], al;push rcx;sub dh, byte [rbx + ]": 1,
                "jne ;and byte [rdx + ], dh;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];invalid": 1,
                "invalid;movsxd rsp, dword [rbp + ];jnp ;cmp esp, dword [rax];jb ": 2,
                "jo ;and byte [rdx], ch;jae ;jb ;outsb dx, byte [rsi]": 1,
                "jne ;outsb dx, byte [rsi];je ;cmp esp, dword [rax];jb ": 1,
                "jae ;jp ;and byte [rdx], ch;jne ;outsb dx, byte [rsi]": 1,
                "jp ;and byte [rdx], ch;jne ;outsb dx, byte [rsi];je ": 1,
                "cmp esp, dword [rax];outsb dx, byte [rsi];jp ;jb ;and byte [rdx + ], ah": 1,
                "js ;and byte [rbx + ], dh;invalid;movsxd rbp, dword [rbx + ];jb ": 1,
                "imul r14, qword cs:[ebx + ], ;imul ebp, dword [rsi + ], ;add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "sub ah, byte [rdi + ];invalid;movsxd rcx, dword gs:[rdi + ];cmp esp, dword [rax];je ": 1,
                "jge ;add byte [rdx + ], bl;pop rdx;sub dh, byte [rbx + ];jb ": 1,
                "jae ;jae ;je ;je ;sub dh, byte [rbp + ]": 1,
                "jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx;outsb dx, byte cs:[rsi]": 15,
                "push rbx;outsd dx, dword [rsi];movsxd rbp, dword [rbx + ];jb ;and byte [rdx], ch": 2,
                "insb byte [rdi], dx;insb byte [rdi], dx;jbe ;jb str.struct___F_uintptr__self__otto._runtime__v_otto.Value__t_reflect.Type__vv__reflect.Value;invalid": 2,
                "invalid;jo ;sub dword fs:[rax], esp;jb ;outsd dx, dword [rsi]": 5,
                "pop rbx;sub dh, byte [rbx + ];jb ;movsxd rsi, dword [rax + ];and byte [rsi + ], al": 4,
                "invalid;insb byte [rdi], dx;jne ;cmp esp, dword [rax];jae ": 1,
                "insb byte [rdi], dx;jne ;cmp esp, dword [rax];jae ;insb byte [rdi], dx": 1,
                "outsb dx, byte [rsi];je ;je ;cmp esp, dword [rax];movsxd rsp, dword [rcx + ]": 1,
                "jo ;jb ;imul esp, dword [rbp + ], ;je ;pop rdi": 1,
                "push rbx;invalid;out , eax;invalid;invalid": 1,
                "jns ;and byte [rbp + ], dh;outsb dx, byte [rsi];je ;xor ch, byte [rax]": 2,
                "outsb dx, byte [rsi];je ;xor ch, byte [rax];jae ;jb ": 2,
                "push ;jne ;je ;jnp ;imul esi, dword [rcx + rdi*2 + ], ": 2,
                "xor byte [rax], dh;xor byte [rbp + ], bl;outsb dx, byte [rsi];jae ;push ax": 2,
                "xor byte [rbp + ], bl;outsb dx, byte [rsi];jae ;push ax;outsd dx, dword [rsi]": 2,
                "push ;jae ;jb ;movsxd rsi, dword [rax + ];and byte [rsi + ], al": 5,
                "jb ;insd dword [rdi], dx;cmp esp, dword [rax];jbe ;insb byte [rdi], dx": 3,
                "insb byte [rdi], dx;jne ;cmp esp, dword [rax];je ;imul esi, dword [rbx + ], ": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rdi + ], dh;jne ;add byte [rax], al": 2,
                "movabs al, byte [];add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rsi + rbx + ], bh;or byte [rbx], dh": 1,
                "add byte [rax], al;add byte [rax], al;fnstcw word [rbp - ];add dword [rax], eax;add al, 0": 1,
                "add byte [rax], al;fnstcw word [rbp - ];add dword [rax], eax;add al, 0;add dword [rax], eax": 1,
                "jb ;cmp esp, dword [eax];jbe ;jae ;je ": 1,
                "cmp esp, dword [eax];jbe ;jae ;je ;jne ": 1,
                "jae ;pop rbx;pop rbp;pop rbx;pop rbp": 1,
                "pop rbx;pop rbp;imul ebp, dword [rsi + ], ;imul ebp, dword [rsi + ], ;jne ": 1,
                "jne ;add byte [rax], al;add byte [rax], al;and eax, ;mov ch, 1": 1,
                "add byte [rax], al;and eax, ;mov ch, 1;add byte [rax], al;in al, dx": 1,
                "add byte [rax], al;add byte [rax], al;packssdw mm0, qword [rax];add byte [rax], al;add byte [rax], al": 1,
                "add eax, dword [rax];jo ;add byte [rax], al;add byte [rcx + 2], cl;add byte [rdx], al": 1,
                "add byte [rcx + 2], cl;add byte [rdx], al;cmp al, byte [rax];add byte [rax + ], al;movsxd rax, dword [rax]": 1,
                "add al, al;add rax, qword [rax];add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;jbe ;jne ;add byte [rax], al": 1,
                "add byte [rax + ], al;add byte [rax], al;add al, ah;sub ebp, dword [rbx];add byte [rax], al": 1,
                "add al, dh;jb ;add byte [rsi + 2], bl;add byte [rax], al;add byte [rdi + 2], dl": 1,
                "add byte [rsi + 2], bl;add byte [rax], al;add byte [rdi + 2], dl;add byte [rax], dl;je ": 1,
                "js ;add byte [rax + ], ah;str word [rax + ];invalid;add eax, dword [rax]": 1,
                "and eax, ;cmp esp, dword [rsi];cmp eax, ;sub dword [rax], esp;sub dword [rax], ebp": 1,
                "xor byte [rbx + ], dh;xor eax, ;cmp al, ;cmp al, ;cmp eax, ": 1,
                "je ;jne ;movsxd rcx, dword [rbp + ];outsb dx, byte [rsi];insb byte [rdi], dx": 1,
                "imul ebx, dword [rdx + ], ;pop rbx;pop rbp;and bh, byte [rdx];and cl, byte [rdx]": 1,
                "sub bl, byte [rsp + rax*2 + ];pop r12;push rbx;pop rsp;push rdi": 1,
                "xor byte [], dh;xor byte [rdi], dh;sub esi, dword [rax];cmp byte [rbx], ch;xor byte [rcx], bh": 1,
                "xor byte [rcx], dh;sub eax, ;xor ebp, dword [];xor eax, ;xor byte [rax], bh": 1,
                "push rsp;jo ;jne ;push rbx;push rsp": 1,
                "invalid;invalid;invalid;imul r13, qword [rdi + ], ;jbe ": 1,
                "push rbx;invalid;je ;jo ;je ": 1,
                "je ;push rbx;jne ;push rsp;push ": 1,
                "invalid;je ;jb ;invalid;jns ": 2,
                "invalid;jns ;imul esp, dword [rsi + ], ;push rsp;jb ": 2,
                "jb ;invalid;invalid;jb ;je ": 2,
                "outsb dx, byte [rsi];pop rbx;jae ;outsb dx, byte [esi];invalid": 2,
                "outsd dx, dword [esi];xor dword [rsi], ebp;xor dword [rdx], esi;xor eax, ;and byte [rax], ah": 2,
                "imul ebp, dword [rsi + ], ;jns ;outsb dx, byte [rsi];je ;jb ": 2,
                "outsb dx, byte gs:[rsi];je ;xor dword [rax], esi;and byte [rax], ah;and byte [rax], ah": 2,
                "and byte [rax], ah;and byte [rax], ah;jb ;and byte [rax], ah;and byte [rax], ah": 2,
                "and byte [rax], ah;jb ;imul esp, dword [rax], ;jb ;insb byte [rdi], dx": 2,
                "insb byte [rdi], dx;invalid;jae ;and byte [rdx + ], dh;jo ": 2,
                "and byte [rax], ah;jb ;outsb dx, byte [rsi];outsb dx, byte [rsi];invalid": 2,
                "imul esi, dword [rcx + ], ;invalid;imul ebp, dword [rdi + ], ;outsw dx, word [rsi];jb ": 2,
                "outsd dx, dword [rsi];insd dword [rdi], dx;jo ;je ;jb ": 2,
                "invalid;je ;push rax;jb ;movsxd rsp, dword [rbp + ]": 2,
                "outsd dx, dword [rsi];outsb dx, byte [rsi];jae ;insb byte [rdi], dx;outsd dx, dword gs:[rsi]": 1,
                "push rcx;push rcx;push rax;invalid;je ": 1,
                "pop rdi;push rbx;jns ;je ;js ": 1,
                "outsd dx, dword [rsi];jne ;and byte [rdi + ], ch;and byte [rdx + ], dh;outsb dx, byte [rsi]": 6,
                "invalid;movsxd rbp, dword [rbx + ];jae ;jp ;imul bp, word gs:[rsi + ], ": 1,
                "imul esp, dword [rbp + ], ;js ;insb byte [rdi], dx;jne ;push ": 1,
                "insb byte [rdi], dx;jne ;and byte [rdx], ah;je ;jae ": 1,
                "insd dword [rdi], dx;push rdi;je ;jne ;jb ": 1,
                "push rax;invalid;je ;invalid;invalid": 2,
                "outsd dx, dword [rsi];outsb dx, byte [rsi];push rax;invalid;je ": 1,
                "outsb dx, byte [rsi];push rax;invalid;je ;invalid": 1,
                "imul ebp, dword [rbp + ], ;jb ;js ;jb ;imul ebp, dword [rsi + ], ": 1,
                "invalid;and byte fs:[rsi + ], ah;invalid;insd dword [rdi], dx;and byte gs:[rcx + ], ch": 1,
                "jne ;invalid;invalid;and byte fs:[rbx + ], dh;movsxd rbp, dword gs:[rcx + ]": 1,
                "invalid;and byte fs:[rbx + ], dh;movsxd rbp, dword gs:[rcx + ];insb byte [rdi], dx;and byte [rbx + ], ch": 1,
                "invalid;je ;jae ;imul bp, word gs:[rsi + ], ;outsd dx, dword [rsi]": 1,
                "outsb dx, byte [rsi];movsxd rsi, dword [ebx + ];jb ;outsb dx, byte [rsi];imul esi, dword [rbx + ], ": 1,
                "movsxd rsi, dword gs:[rsi + rbp + ];invalid;insb byte [rdi], dx;jne ;insb byte [rdi], dx": 2,
                "jne ;jae ;imul ebp, dword [rdx + rsi*2 + ], ;je ;push rsi": 1,
                "insb byte [rdi], dx;jne ;push rbx;insb byte [rdi], dx;imul esp, dword [rbx + ], ": 2,
                "jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx;cmp ah, byte gs:[rax]": 15,
                "imul ebp, dword [rsi + ], ;je ;and byte [rdx + ], dh;outsb dx, byte [rsi];je ": 1,
                "invalid;je ;and byte [rcx + ], ch;and byte [rdx + ], dh;outsb dx, byte [rsi]": 1,
                "movsxd rsi, dword [rdi + rbp*2 + ];jns ;je ;jo ;and byte [rax + ], ch": 1,
                "invalid;jb ;and byte [rcx + rbp*2 + ], dl;outsb dx, byte gs:[rsi];invalid": 1,
                "imul esp, dword [rcx + ], ;jb ;insb byte [edi], dx;jns ;push ": 1,
                "imul esp, dword [rcx + ], ;outsb dx, byte [rsi];invalid;invalid;jb ": 2,
                "jb ;and byte [rcx + rbp*2 + ], dl;outsb dx, byte gs:[rsi];je ;invalid": 2,
                "jae ;sub eax, ;outsb dx, byte [rsi];jae ;jb ": 1,
                "jb ;and byte [rcx + rbp*2 + ], dl;je ;je ;outsd dx, dword [rsi]": 1,
                "je ;je ;outsd dx, dword [rsi];imul ebp, dword [rsi + ], ;insd dword [rdi], dx": 1,
                "outsd dx, dword [rsi];imul ebp, dword [rsi + ], ;insd dword [rdi], dx;invalid;je ": 1,
                "je ;jb ;jb ;jo ;insd dword [rdi], dx": 1,
                "movsxd rbp, dword [rcx + ];imul esp, dword [rbx + ], ;invalid;invalid;jb ": 3,
                "jb ;and byte [rcx + rbp*2 + ], dl;push rdx;invalid;invalid": 1,
                "jne ;jns ;push rbx;je ;outsb dx, byte [rsi]": 1,
                "and byte [rdx + ], dh;imul bp, word [rsp + rbp*2 + ], ;insb byte [rdi], dx;and byte [rsi + ], ch;je ": 1,
                "and byte [rsi + ], ch;je ;invalid;je ;jae ": 1,
                "movsxd rsp, dword [rcx + ];and byte gs:[rbp + ], ch;insd dword [rdi], dx;outsd dx, dword [rsi];jb ": 1,
                "outsd dx, dword [rsi];jb ;jb ;outsd dx, dword [rsi];jb ": 2,
                "insd dword [rdi], dx;imul ebp, dword [rsi + ], ;jne ;je ;insd dword [rdi], dx": 1,
                "jne ;push r8;push rbp;sub byte [rcx], ch;imul ebp, dword [rsi + ], ": 1,
                "imul ebp, dword [rsi + ], ;and byte [rcx + rbp*2 + ], ah;imul esp, dword [rbp + ], ;jb ;imul ebp, dword [rsi + ], ": 1,
                "imul esp, dword [rbp + ], ;jb ;imul ebp, dword [rsi + ], ;movsxd rsp, dword [rbp + ];movsxd rbp, dword [rdi + ]": 1,
                "jbe ;jb ;imul ebp, dword [rdi + ], ;jbe ;insb byte [rdi], dx": 1,
                "jo ;imul ebp, dword [rsi + ], ;and byte [rsi + ], dh;insb byte [rdi], dx;jne ": 1,
                "insb byte [rdi], dx;jne ;cmp ah, byte [rax];and eax, ;push rsp": 1,
                "ja ;js ;invalid;invalid;push ": 1,
                "cmp eax, ;jbe ;jb ;insb byte [rdi], dx;outsd dx, dword [rsi]": 1,
                "ja ;imul esi, dword [rbx + ], ;outsb dx, byte [rsi];imul ebp, dword [rax + rsi*2 + ], ;outsd dx, dword [rsi]": 1,
                "imul ebp, dword [rcx + ], ;outsd dx, dword [rsi];je ;movsxd rbp, dword [rdi + ];and byte [rsi + ], ch": 1,
                "and byte [r8 + ], dl;movsxd rbp, dword [rcx + ];imul esp, dword [rbx + ], ;invalid;invalid": 1,
                "and byte [r15 + ], dl;jae ;jb ;and byte [rbx + ], dl;invalid": 1,
                "and byte [rdx + ], dh;jae ;jb ;and byte fs:[rdi + ], dh;jb ": 1,
                "jb ;outsb dx, byte gs:[rsi];je ;jns ;imul ebp, dword [rsi + ], ": 1,
                "jb ;outsd dx, dword [rsi];jne ;insb byte [rdi], dx;and byte gs:[rdx + rsi*2 + ], dh": 1,
                "je ;imul ebp, dword [rbp + ], ;outsb dx, byte [rsi];je ;movsxd rax, dword fs:[edx + esi*2 + ]": 1,
                "imul ebp, dword [rsi + ], ;jae ;and byte [rcx + ], ch;movsxd rbp, dword [rdi + ];jb ": 1,
                "jne ;jae ;jo ;outsd dx, dword [rsi];jb ": 4,
                "sub eax, ;jns ;movsxd rbp, dword gs:[rdi + ];jb ;invalid": 1,
                "je ;outsd dx, dword [rsi];outsb dx, byte [rsi];and byte [rsi + ], ch;ja ": 1,
                "insb byte [rdi], dx;movsxd rsi, dword gs:[rdx + rdi + ];imul esi, dword [rbx + r14*2 + ], ;imul ebp, dword [rax + ], ;insb byte [rdi], dx": 1,
                "jae ;jo ;and byte [rcx + ], ch;jbe ;insb byte [rdi], dx": 1,
                "insb byte [rdi], dx;outsd dx, dword [rsi];movsxd rbp, dword [rbx + ];invalid;jbe ": 1,
                "outsd dx, dword [rsi];movsxd rbp, dword [rbx + ];invalid;jbe ;imul esp, dword [rbp + ], ": 1,
                "movsxd rsp, dword [rax];outsd dx, dword [rsi];and byte [rdx + ], dh;outsb dx, byte [rsi];je ": 1,
                "je ;insd dword [rdi], dx;cmp ah, byte gs:[rax];insd dword [rdi], dx;imul esi, dword [rbx + ], ": 1,
                "insd dword [rdi], dx;and byte [rbp + ], ah;movsxd rsp, dword [rbp + ];jae ;jb ": 1,
                "and byte [rbp + ], ah;movsxd rsp, dword [rbp + ];jae ;jb ;outsb dx, byte [rsi]": 1,
                "and byte [rsi + ], ch;je ;jae ;jo ;outsd dx, dword [rsi]": 1,
                "invalid;invalid;insb byte [rdi], dx;and byte gs:[rdi + ], ah;jae ": 1,
                "jne ;and byte [rcx + rdi*2 + ], dh;and byte gs:[rbp + ], dh;imul ebp, dword [rsi + ], ;jb ": 1,
                "jb ;and byte [], ah;jbe ;and byte [rdi + rbp*2 + ], dh;imul ebp, dword [rsi + ], ": 3,
                "invalid;jb ;and byte [rcx + rbp*2 + ], dl;push rdi;jae ": 1,
                "and byte [rcx + rbp*2 + ], dl;pop rsi;pop rbx;invalid;sub eax, ": 1,
                "invalid;insb byte [rdi], dx;insb byte [rdi], dx;and byte [rsi + ], ah;outsd dx, dword [rsi]": 2,
                "outsd dx, dword [rsi];jb ;and byte [rcx + rbp*2 + ], dh;imul esp, dword [rbp + ], ;outsb dx, byte [rsi]": 1,
                "je ;invalid;invalid;imul ebp, dword [rbp + ], ;imul bp, word [rsi + ], ": 1,
                "jb ;invalid;movsxd rbp, dword [rax + ];cmp ah, byte [rax];push rax": 1,
                "jb ;jb ;ja ;je ;and byte [rsi + rbp + ], ah": 1,
                "outsd dx, dword [esi];invalid;cmp ah, byte [rax];insb byte [rdi], dx;outsd dx, dword [rsi]": 1,
                "outsb dx, byte gs:[rsi];je ;imul ebp, dword [rsi + ], ;and byte [rcx + ], ah;jne ": 1,
                "outsd dx, dword [rsi];jb ;invalid;insd dword [rdi], dx;and byte gs:[rsi + ], ch": 1,
                "jb ;outsb dx, byte [rsi];outsd dx, dword [rsi];and byte [rbx + ], al;and byte [r11 + ], sil": 1,
                "imul esi, dword [rbx + ], ;insb byte [rdi], dx;insb byte [rdi], dx;outsd dx, dword [rsi];movsxd rdi, dword [rdx]": 2,
                "jp ;and byte [], bh;insb byte [rdi], dx;push rax;jb ": 1,
                "movsxd rsi, dword [rbp + ];and byte [rbx + ], ah;invalid;jae ;pop rbx": 1,
                "and byte [rsi + ], ah;outsd dx, dword [rsi];insd dword [rdi], dx;and byte [rdi + ], ah;jb ": 1,
                "imul esi, dword [rdx + ], ;outsd dx, dword [rsi];jb ;cmp eax, ;jae ": 1,
                "imul esp, dword [rdi + ], ;imul ebp, dword [rbp + ], ;jb ;jo ;outsd dx, dword [rsi]": 1,
                "insb byte [rdi], dx;and byte [rdi + ], dh;je ;and byte [rax + ], dh;movsxd rsi, dword [rbx + ]": 1,
                "jo ;cmp ah, byte [rax];outsb dx, byte [rsi];invalid;invalid": 1,
                "outsb dx, byte [rsi];invalid;invalid;invalid;je ": 3,
                "and byte gs:[rsi + ], ch;insb byte [rdi], dx;and byte [rsi + ], dh;insb byte [rdi], dx;jne ": 1,
                "and byte [rdx + ], dh;outsb dx, byte [rsi];je ;insd dword [rdi], dx;and byte gs:[rbx + ], dh": 1,
                "insb byte [rdi], dx;imul ebp, dword gs:[rsi + ], ;and byte [rcx + rdi*2 + ], dh;and byte gs:[rax + ], dh;jae ": 1,
                "jae ;and byte fs:[rdi + rbp*2 + ], dh;outsb dx, byte [rsi];ja ;sub dword [rdx + ], ebp": 1,
                "outsb dx, byte [rsi];cmp ah, byte [rax];push rbp;outsb dx, byte [rsi];insd dword [rdi], dx": 1,
                "ja ;outsd dx, dword [rsi];insd dword [rdi], dx;jo ;js ": 1,
                "jae ;jo ;ja ;imul esi, dword [rdi + rbx*2 + ], ;jb ": 1,
                "je ;insd dword [rdi], dx;cmp ah, byte gs:[rax];insd dword [rdi], dx;invalid": 1,
                "insd dword [rdi], dx;cmp ah, byte gs:[rax];jae ;invalid;je ": 1,
                "movsxd rsi, dword [rcx + ];imul esi, dword [rdx + ], ;and byte [rdi + ], ch;and byte [rax + rbp*2 + ], dh;and byte [rdi + ], al": 1,
                "and byte [rdi + rbp*2 + ], ch;jae ;outsb dx, byte [rsi];je ;js ": 1,
                "jb ;outsd dx, dword [rsi];jb ;jae ;invalid": 1,
                "outsb dx, byte [rsi];outsb dx, byte [rsi];imul ebp, dword [rsi + ], ;insb byte [rdi], dx;invalid": 1,
                "and byte [rcx + rbp*2 + ], ah;jb ;outsb dx, byte [rsi];je ;jae ": 1,
                "and byte [rcx + ], ch;and byte [rax + ], dh;jo ;jb ;outsd dx, dword [rsi]": 1,
                "and eax, ;and byte [], ah;je ;invalid;insb byte [rdi], dx": 1,
                "je ;xor al, ;invalid;jns ;jae ": 2,
                "invalid;invalid;jb ;and byte [rcx + rbp*2 + ], dl;and byte gs:[rax], ch": 1,
                "and byte [rcx + rbp*2 + ], dl;and byte gs:[rax], ch;js ;movsxd rbp, dword [rdi + ];push rcx": 1,
                "js ;movsxd rbp, dword [rdi + ];push rcx;push rdi;push r10": 1,
                "movsxd rsp, dword [rcx + ];push rbx;je ;outsb dx, byte [rsi];invalid": 1,
                "and byte [rdx + ], dh;outsb dx, byte [rsi];je ;insd dword [rdi], dx;movsxd rsp, dword gs:[rcx + ]": 1,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;movsxd rsp, dword gs:[rcx + ];outsb dx, byte [rsi]": 1,
                "jne ;and byte fs:[rbp + ], dh;insd dword [rdi], dx;invalid;jb ": 1,
                "jne ;and eax, ;invalid;movsxd rbp, dword [rbx + ];jb ": 1,
                "jb ;outsb dx, byte [rsi];movsxd rsp, dword [rbp + ];jb ;xor bh, byte [rdx]": 1,
                "movsxd rsp, dword [rbp + ];jb ;xor bh, byte [rdx];and byte [rcx + ], cl;jbe ": 1,
                "jb ;insd dword [rdi], dx;cmp ah, byte [rax];je ;and byte [edi + ebp*2 + ], dh": 1,
                "jbe ;jae ;movsxd rbp, dword gs:[rcx + ];insb byte [rdi], dx;and byte [rdi + ], ch": 1,
                "jbe ;insb byte [rdi], dx;imul esp, dword [rax + ], ;jb ;jae ": 1,
                "je ;insd dword [rdi], dx;cmp ah, byte gs:[rax];jae ;je ": 1,
                "outsb dx, byte [rsi];and byte [rcx + ], ah;outsd dx, dword [rsi];jb ;jae ": 1,
                "outsb dx, byte [rsi];je ;jns ;movsxd rdi, dword [rdx];and byte [rbp + ], dl": 1,
                "jns ;movsxd rdi, dword [rdx];and byte [rbp + ], dl;insb byte [rdi], dx;outsd dx, dword [rsi]": 1,
                "and byte [rbp + ], dh;insb byte [rdi], dx;outsd dx, dword [rsi];movsxd rbp, dword [rbx + ];and byte fs:[rdx + ], dl": 1,
                "outsb dx, byte [rsi];je ;jb ;jae ;and byte [rdi + ], ch": 1,
                "insb byte [rdi], dx;pop rdi;outsd dx, dword [rsi];pop rdi;push rax": 1,
                "outsd dx, dword [rsi];ja ;jb ;jo ;outsd dx, dword [rsi]": 1,
                "push ;movsxd rbp, dword gs:[rcx + ];invalid;insb byte [rdi], dx;and byte [rbx + ], ah": 1,
                "jo ;outsd dx, dword [rsi];jb ;and byte fs:[rax + ], dl;jb ": 1,
                "and byte [rdi + rbp*2 + ], ch;and byte [eax], ch;and eax, ;je ;jae ": 1,
                "je ;jae ;cmp ah, byte [rax];and eax, ;outsd dx, dword cs:[rsi]": 1,
                "jne ;movsxd rcx, dword [rdi + ];cmp ah, byte [rax];je ;outsd dx, dword [rsi]": 1,
                "jns ;and byte gs:[rbx + ], dh;jp ;and byte [rbp + ], ch;jae ": 1,
                "imul ebp, dword [rsi + ], ;and byte [rbp + ], ch;je ;push rbp;outsb dx, byte [rsi]": 1,
                "je ;insd dword [rdi], dx;and byte [rcx + rbp*2 + ], ah;movsxd rsi, dword gs:[rdi + rbp*2 + ];jns ": 1,
                "invalid;je ;jbe ;and byte [rdi + ], ch;jae ": 1,
                "imul ebp, dword [rsi + ], ;imul edi, dword [rdx + ], ;je ;invalid;insb byte [rdi], dx": 1,
                "imul esp, dword [rdi + ], ;movsxd rsi, dword gs:[rdx + rdi + ];jae ;invalid;jb ": 1,
                "outsb dx, byte [rsi];sub eax, ;and byte [rcx + rdi*2 + ], dh;jb ;insb byte [rdi], dx": 1,
                "insd dword [rdi], dx;cmp ah, byte gs:[rax];push rsi;imul esi, dword [rdx + ], ;jne ": 1,
                "and byte [rbp + ], ch;xor byte ds:[eax], ah;jae ;invalid;movsxd rbp, dword [rbx + ]": 1,
                "and byte [rsi + ], ch;je ;invalid;movsxd rsp, dword [rbx + ];jae ": 1,
                "and byte [rcx + ], ah;outsb dx, byte [rsi];and byte fs:[rbx + ], dh;invalid;jb ": 1,
                "jae ;insb byte [rdi], dx;outsd dx, dword [rsi];outsb dx, byte [rsi];js ": 1,
                "invalid;movsxd rbp, dword [rbx + ];outsb dx, byte [rsi];imul ebp, dword [rsi + ], ;and byte [rbp + ], ah": 1,
                "jne ;outsb dx, byte gs:[rsi];je ;and byte [rsi + ], ah;jb ": 1,
                "and byte [rsi + ], ah;outsb dx, byte [rsi];movsxd rsi, dword [rcx + rbp*2 + ];outsb dx, byte [rsi];jb ": 1,
                "outsb dx, byte gs:[rsi];je ;movsxd rbp, dword [rdi + ];outsb dx, byte [rsi];je ": 1,
                "sub eax, ;and byte [rbx + ], dh;imul esp, dword [rbx + ], ;movsxd rsi, dword gs:[rsi + rbp + ];invalid": 1,
                "js ;outsd dx, dword [rsi];and byte [rsi + ], ch;outsb dx, byte [rsi];sub eax, ": 1,
                "imul ebp, dword [rsi + ], ;jb ;and byte [rsi + ], ah;jb ;je ": 1,
                "and byte [rsi + ], ah;jb ;je ;invalid;jb ": 1,
                "je ;and byte [rax + ], dh;jae ;and byte fs:[rdi + rbp*2 + ], dh;jne ": 1,
                "jo ;and byte gs:[rdi + ], ch;and byte [rsi + ], dh;insb byte [rdi], dx;jne ": 1,
                "and byte fs:[rsi + ], ah;insb byte [rdi], dx;and byte fs:[], ah;and eax, ;imul esp, dword [rbx + ], ": 1,
                "je ;and byte [rdi + ], ch;and byte [], ah;je ;jae ": 1,
                "xor dh, byte [rdi];cmp byte [rbx], dh;cmp byte [rcx], dh;xor esi, dword [rdi + rsi];xor eax, ": 1,
                "cmp byte [rbx], dh;cmp byte [rcx], dh;xor esi, dword [rdi + rsi];xor eax, ;jb ": 1,
                "je ;jb ;js ;and byte [rbx + ], ah;insb byte [rdi], dx": 1,
                "jb ;imul ebp, dword [rdi + ], ;and byte gs:[rbx + ], dh;jb ;outsb dx, byte [rsi]": 1,
                "outsd dx, dword [rsi];outsb dx, byte [rsi];sub eax, ;jns ;insd dword [rdi], dx": 1,
                "imul ebp, dword [rsi + ], ;jb ;jne ;outsb dx, byte gs:[rsi];je ": 1,
                "and byte [rsi + ], ch;insb byte [rdi], dx;and byte [rsi + ], dh;insb byte [rdi], dx;jne ": 1,
                "and byte gs:[rdi + ], ch;and byte [rsi + ], al;js ;insb byte [rdi], dx;insb byte [rdi], dx": 1,
                "invalid;outsw dx, word gs:[rsi];jb ;and byte [rsi + ], al;js ": 1,
                "outsb dx, byte [rsi];imul esi, dword [rdx + rcx + ], ;je ;outsb dx, byte [rsi];and byte [ecx + ], ah": 1,
                "invalid;insd dword [rdi], dx;cmp ah, byte gs:[rax];jae ;outsd dx, dword [rsi]": 1,
                "movsxd rsp, dword [rbp + ];and eax, ;and byte [rcx + ], ah;jb ;invalid": 1,
                "invalid;invalid;je ;jbe ;jne ": 1,
                "jb ;ja ;jb ;push ;outsd dx, dword [rsi]": 2,
                "imul ebp, dword [rsi + ], ;and byte [rbp + ], dh;and byte gs:[rdi + ], ch;and byte [rbx + rsi*2], ch;je ": 2,
                "je ;and byte fs:[rsi + ], dh;insb byte [rdi], dx;jne ;and byte [rcx + ], ch": 2,
                "outsb dx, byte [rsi];outsd dx, dword [rsi];je ;jb ;je ": 2,
                "js ;outsd dx, dword [rsi];jb ;and byte fs:[rsi + ], ah;insb byte [rdi], dx": 2,
                "and byte [rdx + ], ah;je ;imul esi, dword fs:[rsi + ], ;and byte [rbx + ], ah;movsxd rbp, dword gs:[rbx + ]": 2,
                "and byte [rbx + ], ah;movsxd rbp, dword gs:[rbx + ];outsb dx, byte [rsi];outsd dx, dword [rsi];jae ": 2,
                "movsxd rsi, dword [rdx + ];jo ;and byte [rsi + ], dh;insb byte [rdi], dx;jne ": 2,
                "and byte [rcx + ], ch;and byte [rbx + ], ah;jb ;outsb dx, byte gs:[rsi];je ": 2,
                "jb ;jne ;jae ;sub dword [rax], esp;jb ": 2,
                "and byte fs:[rcx + ], ah;and byte [rbp + ], ah;jo ;jns ;insb byte [rdi], dx": 2,
                "and byte [rbp + ], dh;jb ;invalid;insd dword [rdi], dx;cmp ah, byte gs:[rax]": 2,
                "jns ;invalid;je ;push ;jb ": 2,
                "movsxd rsi, dword [rcx + rdi*2 + ];sub dword gs:[rsi], ebp;outsd dx, dword fs:[rsi];je ;outsd dx, dword [rsi]": 1,
                "movsxd rsi, dword [rcx + rdi*2 + ];sub dword gs:[rsi], ebp;imul ebp, dword [rsi], ;jb ;outsb dx, byte [rsi]": 2,
                "jne ;movsxd rsi, dword [rcx + rdi*2 + ];sub dword gs:[rsi], ebp;outsd dx, dword [rsi];jne ": 3,
                "std;add edi, dword [rdi + ];mov esi, ;rol byte [rbx], ;mov edi, ": 3,
                "add al, byte [rdx];add dl, byte [rbx];add dword [rdx], eax;add al, byte [rdx];add dl, byte [rbx]": 3,
                "add eax, dword [rdx];or byte [rdx], dl;add dword [rcx + rax], eax;add al, 1;add bl, byte [rcx]": 3,
                "or dword [rax], edx;adc byte [rcx], dl;or byte [rdx], bl;add dword [rdi + 9], ebx;invalid": 3,
                "add dword [rdi + 9], ebx;invalid;invalid;invalid;invalid": 3,
                "or byte [rbx], bh;add eax, ;sahf;add dword [rdi - ], esp;add dword [rdi], eax": 3,
                "sbb eax, ;sbb ecx, dword [];outsb dx, byte [rsi];add eax, ;add byte [rcx + rax - ], cl": 3,
                "invalid;or al, byte [rax];add byte [rsi + ], bh;adc eax, ;invalid": 3,
                "add edx, dword [rsp + rax];invalid;add edx, dword [rsp + rax];invalid;add edx, dword [rsp + rax]": 13,
                "invalid;add edx, dword [rsp + rax];invalid;add edx, dword [rsp + rax];invalid": 13,
                "add byte [rax], al;add byte [rdi + rbp*2], al;add byte [rax], al;add byte [rax], al;enter , 0": 2,
                "je ;insd dword [rdi], dx;sub byte cs:[rdx], ch;movsxd rax, dword [ebx + ];outsb dx, byte [rsi]": 1,
                "je ;je ;sub dword [rsi], ebp;imul bp, word [rsi + ], ;outsb dx, byte [rsi]": 1,
                "je ;jo ;jb ;add byte [rdx], al;invalid": 1,
                "or al, byte [rax];sbb r13b, byte [rdx];sbb dword [rcx], ecx;or dword [rcx], ecx;or cl, byte [rdx]": 1,
                "sbb r13b, byte [rdx];sbb dword [rcx], ecx;or dword [rcx], ecx;or cl, byte [rdx];imul esi, dword [], ": 1,
                "add dword [rax], ecx;invalid;add eax, ;add al, byte [rcx];add ch, byte [rdx]": 1,
                "add dword [rdi + rax], eax;add dword [rdx], ecx;add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "add dword [rdx], ecx;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rdi + ], dh": 1,
                "add byte [rax], al;add byte [rdi + ], dh;add byte [rax], al;outsd dx, dword [rsi];add al, byte [rax]": 1,
                "add byte [rdi + rbp*2], bl;add byte [rax], al;add byte [rax], al;add byte [rax], al;sbb al, ": 93,
                "add byte [rax], ch;add al, byte [];or al, byte [rax];add byte [rax], al;add al, dl": 1,
                "add byte [rax], al;add al, dl;mov bh, ;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;sub byte [rax + 2], dh;add byte [rcx], bh;jo ;add byte [rdi + ], al": 1,
                "sub byte [rax + 2], dh;add byte [rcx], bh;jo ;add byte [rdi + ], al;add al, byte [rax]": 1,
                "add dword [rax + rdx], 2;and byte [rcx], cl;add cl, byte [rcx];sbb al, ;jo ": 1,
                "xchg eax, edx;add al, byte [rax];invalid;xchg eax, edx;add al, byte [rax]": 1,
                "outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al;add byte [rax], al;sbb al, ": 15,
                "push rdx;outsd dx, dword [rsi];outsd dx, dword [rsi];je ;push ": 1,
                "or bl, byte [rdx - ];add eax, dword [rax];fadd dword [rcx];sub byte [rdx], al;adc al, ": 1,
                "or byte [rax], dl;add cl, byte [rdx];or eax, dword [];or cl, byte [rbp + ];add cl, byte [rax + ]": 1,
                "add eax, ;add edx, dword [rsp + rax];add eax, ;add edx, dword [rsp + rax];add eax, ": 5,
                "add dword [rdx], ecx;add byte [rax], al;lahf;add dword [rdx], eax;or al, byte [rcx]": 1,
                "lahf;add dword [rdx], eax;or al, byte [rcx];test eax, ;add al, byte []": 1,
                "add al, byte [rax];add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [], al": 1,
                "add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [], al;in eax, dx": 1,
                "or al, byte [rax];add byte [rbx + 4], ah;add eax, ;add eax, ;or al, byte [rax]": 1,
                "add byte [rax + ], dh;add byte [rax], al;add byte [rax + ], dh;add eax, dword [rax];and byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;add dl, ch;sub dword [rbx], eax;add byte [rax], al": 1,
                "invalid;add edx, dword [rsp + rax];invalid;add dword [rdx], ecx;add byte [rax], al": 2,
                "add eax, ;add edx, dword [rdi + 4];add eax, ;add eax, dword [rbp + 4];add eax, ": 1,
                "je ;insd dword [rdi], dx;je ;invalid;push rbx": 1,
                "add al, 5;add al, 5;or word [rcx + 8], sp;invalid;or byte [rcx + ], ah": 1,
                "or byte [rcx + ], ah;add al, ;add al, ;add al, 1;xchg eax, ecx": 1,
                "add cl, byte [rdx];sub eax, ;adc dword [rcx], eax;or al, byte [rax];add byte [rdx + ], bl": 1,
                "adc byte [rbx], al;add dword [rcx + rax], eax;add edx, dword [rsi + rax];adc byte [], al;sub byte [rax], cl": 1,
                "invalid;add eax, dword [rax];invalid;invalid;add eax, dword [rax]": 1,
                "invalid;invalid;add eax, dword [rax];add eax, dword [rax];add byte [rax], al": 1,
                "add byte [rax], al;invalid;invalid;add eax, dword [rax];add byte [rax], al": 1,
                "add eax, ;add dl, dl;add byte [rax], al;add byte [rax], al;add byte [rax + ], ah": 1,
                "je ;insd dword [rdi], dx;outsb dx, byte cs:[rsi];outsd dx, dword [rsi];ja ": 1,
                "outsb dx, byte cs:[rsi];outsd dx, dword [rsi];ja ;push rax;add byte [r8], al": 1,
                "push rax;add byte [r8], al;add al, byte [rax + rsi*2];retf ;add dword [rax], eax": 1,
                "add al, byte [rax + rsi*2];retf ;add dword [rax], eax;xor cl, bh;add dword [rax], eax": 1,
                "add dword [rax], eax;xor cl, bh;add dword [rax], eax;sahf;invalid": 1,
                "and dword [rcx], ecx;add bl, byte [rdx];invalid;adc edx, dword [rax];invalid": 1,
                "sub al, 2;add eax, ;add esi, dword [rax];add byte [rdx + rax], bh;add dword ss:[rsi], edx": 1,
                "add al, ;sbb al, 5;add al, byte [];add cl, byte [rax];add cl, byte [rcx]": 1,
                "add byte [rax], al;add al, cl;sub eax, ;add byte [rax], al;cmp byte [rcx + rsi*2], dl": 1,
                "je ;insd dword [rdi], dx;insd dword [rdi], dx;invalid;imul ebp, dword [rsi], ": 1,
                "invalid;jb ;push rsp;insd dword [rdi], dx;jo ": 1,
                "add dword [rax], eax;fiadd word [rcx];sub byte [rdx], al;adc eax, ;or al, 7": 1,
                "fiadd word [rcx];sub byte [rdx], al;adc eax, ;or al, 7;invalid": 1,
                "add dword fs:[rdx], eax;adc byte [rbp + ], ch;add cl, byte [rdx];or al, ;or byte [rcx], al": 1,
                "or al, byte [rcx];add eax, ;add dword [rdx], ecx;sbb eax, ;adc dword [rbx], ecx": 1,
                "and eax, ;or bl, byte [rcx];or dword [rcx + rax + ], ebx;add eax, ;add ebp, dword []": 1,
                "push rax;cmp byte [rdi + 1], cl;push rax;add qword ss:[r8 + ], r10;or r8, qword [r8]": 1,
                "sub byte [rdx], al;or al, byte [rsi];add dword [rdx], eax;or byte [rsp + rbx], al;add al, 1": 1,
                "adc byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;js ": 1,
                "sub ebp, dword [rdi];add byte [rax], al;add byte [rax], al;add byte [rdi + rbp*2], bl;add byte [rax], al": 2,
                "add al, ;add al, 6;add al, dh;jne ;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;add al, ;add al, 0;xor byte [rdx + 4], cl": 1,
                "insd dword [rdi], dx;sub byte cs:[rdx], ch;jne ;movsxd rbp, dword [rcx];imul r13d, dword cs:[rbp + r12*2 + ], ": 1,
                "jg ;add byte [rcx], ;jg ;add byte [rdx], bh;mov ch, 1": 1,
                "add byte [rcx + 2], ah;add eax, ;add ebp, dword [rax];add cl, byte [rdx];add byte [rax], al": 1,
                "add byte [rax + ], dl;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rcx - ], ch": 1,
                "scasd eax, dword [rdi];add al, 0;add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "or al, byte [rax];add byte [rax], al;add byte [rax], al;add byte [rax], al;add al, dh": 4,
                "add al, 0;add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [rdx + rdi*2], al": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rdx + rdi*2], al;add al, 0;mov cl, byte [rbx + 4]": 1,
                "invalid;invalid;sbb eax, dword [rdi];invalid;invalid": 1,
                "invalid;invalid;invalid;adc dword [rdi], eax;invalid": 1,
                "invalid;adc dword [rdi], eax;invalid;or al, byte [rax];add byte [rcx], dh": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;jo ;add byte [rax], r8b": 4,
                "jo ;add byte [rax], r8b;add byte [rax], al;add byte [rax], al;add al, 0": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;sub cl, byte [rsp + rax];push rbp": 1,
                "add al, 0;add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [rcx + rdi*8], al": 1,
                "mov edi, ;invalid;mov edi, ;invalid;add dword [rdi + ], edi": 1,
                "sbb byte [rbx], dl;invalid;add bl, byte [rax];int3;invalid": 1,
                "adc al, 8;add eax, ;add eax, ;or dword [rsi], eax;add eax, ": 1,
                "movabs dword [], eax;adc al, ;add eax, ;or edx, dword [rsp + rcx];invalid": 1,
                "movsxd rbp, dword [rsi + ];insd dword [rdi], dx;add byte gs:[rax], al;jb ;outsb dx, byte [rsi]": 1,
                "je ;insd dword [rdi], dx;movsxd rsp, dword cs:[rsi + ];outsb dx, byte [rsi];movsxd rbp, dword [rsi + ]": 2,
                "movsxd rbp, dword [rsi + ];insd dword [rdi], dx;add byte gs:[rax], al;add bl, byte [rsi];invalid": 2,
                "invalid;or al, byte [rax];add byte [rdi + 4], al;add eax, ;add eax, ": 2,
                "add dword [], eax;add dword [rsi], eax;invalid;sub al, byte [];add al, byte [rdx]": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;xor eax, ;add al, 0": 2,
                "add byte [rax], al;add al, dl;xor dword [rdi], ebp;add byte [rax], al;add byte [rax], al": 5,
                "add byte [rax], al;add byte [rax], al;add al, ah;xchg eax, ebp;jne ": 2,
                "add bl, byte [rsi];invalid;jo ;add dword [rax + ], esp;pop rdi": 3,
                "pop rdi;add dword [rax + 7], esp;pop rdi;or al, byte [rax];cmp dl, byte [rcx + 6]": 3,
                "sub byte [rsi + rax], al;rol dword [rdx], cl;add edx, esp;add al, byte [rdx];invalid": 3,
                "add al, 5;add eax, ;or al, byte [rax];add byte [rsi], ch;add al, byte [rbx]": 3,
                "rol byte [rcx], 1;invalid;iretd;add dword [rcx], eax;rol byte [rcx], 1": 13,
                "invalid;iretd;add dword [rcx], eax;rol byte [rcx], 1;invalid": 4,
                "rol byte [rcx], 1;invalid;iretd;add dword [rdx], ecx;add byte [rdx], bh": 4,
                "add dword [rdx], ecx;add byte [rdx], bh;mov ebx, ;add dl, al;or ebp, dword [rax]": 4,
                "mov ebx, ;add dl, al;or ebp, dword [rax];add al, 6;cmc": 4,
                "add dl, al;or ebp, dword [rax];add al, 6;cmc;add al, byte [rbx]": 4,
                "add byte [rax], al;add byte [rax], al;push rax;add al, 0;cli": 4,
                "add al, 0;std;push rax;add al, 0;add eax, dword [rax]": 3,
                "add byte [rax], al;lock add dword [rax + rax], ;push rcx;add al, 0;sub byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;test dword [rcx + 4], edx;add byte [rbp - ], dl;push rcx": 3,
                "add al, byte [rdi];invalid;adc dword [rdi], eax;add al, 4;rol dword [rcx], cl": 3,
                "add al, ;add ecx, dword [rsp + rax];or al, byte [rbx];or dword [rdx + rcx], eax;add ecx, dword [rbx]": 3,
                "invalid;invalid;je ;jbe ;insb byte [rdi], dx": 3,
                "push rbx;invalid;or byte [rax], bl;push rax;add byte [rax + ], al": 2,
                "add dword [rax], edx;add byte [rsi + ], cl;adc al, byte [rdx];or al, byte [rax];add byte [rax], al": 1,
                "add eax, ;or al, 6;add al, byte [rsi];invalid;add dword [rbx + ], edx": 1,
                "or byte [], al;or al, 2;or byte [rbx], al;or eax, dword [rdx];or dword [rdx], ecx": 1,
                "adc dword [rdx], eax;or al, byte [rax];add byte [rdi + 2], dl;or eax, dword [rcx];or eax, ": 1,
                "or al, byte [rax];add byte [rdi + 2], dl;or eax, dword [rcx];or eax, ;add al, byte []": 1,
                "or dword [rdx], eax;or byte [rcx], al;adc eax, dword [rax + ];adc dword [rdi], ecx;or bl, byte [rbx]": 1,
                "add byte [rax], al;add byte [rax], al;sbb byte [rdi + rbp*2], ch;add byte [rax], al;add byte [rax], al": 115,
                "outsb dx, byte [rsi];je ;add byte [rdx], al;add al, ;push rax": 1,
                "add byte [rax], al;add byte [rax], al;add byte [], al;xor edx, dword [rdi + 4];add byte [rbx + ], dl": 1,
                "outsd dx, dword [rsi];ja ;jne ;movsxd rbp, dword [rcx + ];outsw dx, word [rsi]": 1,
                "invalid;sub al, 6;or eax, ;or byte [rcx], ch;mov byte [rax], cl": 1,
                "add al, ;or byte [rbx], ah;or eax, ;add bh, bh;invalid": 1,
                "invalid;or cl, byte [];add ah, byte [rbx];or edx, dword [rax];or al, ": 1,
                "or al, ;or eax, dword [rdx];or dh, byte [rcx];or dword [rax], esp;invalid": 1,
                "add byte [rdx], al;invalid;add byte [rcx], ;add bh, byte [rdi + 1];add byte [rcx], ": 1,
                "add byte [rcx], ;add bh, byte [rdi + ];add byte [rdx + ], bl;insb byte [rdi], dx;push rsp": 1,
                "jb ;jno ;invalid;sbb ch, byte [rbx + rax + 2];add eax, ": 1,
                "add byte [rax], al;rol byte [rcx], cl;add al, 5;add eax, ;or dword [rsi], eax": 1,
                "add eax, ;add eax, ;sub byte [rax], cl;add eax, ;invalid": 1,
                "add al, 5;add edx, dword [rsp + rax];adc al, 3;adc al, 4;lar eax, word []": 1,
                "add eax, ;add al, byte [rsi];add dword [rsp + rax + 6], edx;add eax, dword [rbx];add al, ": 1,
                "rol byte [rcx], cl;add al, byte [];add ecx, dword [rcx];jb ;outsb dx, byte [rsi]": 1,
                "insd dword [rdi], dx;movsxd rsp, dword cs:[rdi + ];push ;jb ;je ": 2,
                "movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rsi];push rax;xchg eax, esp": 2,
                "add eax, ;add ecx, dword [rcx];add al, 5;add edx, dword [rsp + rax];add eax, ": 16,
                "add eax, ;add edx, dword [rsp + rax];invalid;add dword [rdx], ecx;add byte [rax], al": 33,
                "insb byte [rdi], dx;outsd dx, dword [rsi];movsxd rbp, dword [rbx + ];jne ;movsxd rsi, dword [rcx]": 9,
                "add bl, byte [rdx];push rax;cmp ecx, dword [rdi + 8];add byte [rdx + ], al;add byte [rdx + ], ah": 3,
                "add byte [rdx + ], al;add byte [rdx + ], ah;add cl, byte [rdx];add eax, dword [rdi];add byte [rax], al": 3,
                "add byte [rax], al;add r9b, byte [r15];add dword [rdi], eax;add byte [rax], al;add byte [rax], al": 9,
                "add byte [r8], r8b;add byte [rax], al;add byte [rax], bl;mov bh, 4;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], dh;mov bh, 4;add byte [rdi], dh;mov bh, 4": 3,
                "add byte [rdi], dh;mov bh, 4;add byte [rdx], bh;mov bh, 4;add byte [rbx], al": 3,
                "mov bh, 4;add byte [rax], al;add byte [rax], al;add byte [rax], al;sbb al, ": 3,
                "sub eax, ;add byte [rax], al;cmp byte [rax + 4], bh;add byte [rax], al;add byte [rax], al": 4,
                "add al, 0;cmp byte [rax + ], 0;add byte [rax], al;add byte [rax], al;add al, ": 4,
                "add al, 0;out , al;add al, 0;add byte [rax], al;add byte [rax], al": 3,
                "invalid;invalid;insb byte [rdi], dx;insb byte [rdi], dx;push ": 4,
                "add dword [rbp - ], esp;add dword [rdx], ecx;add byte [rdx + ], cl;lsl edx, dword [rax];lodsb al, byte [rsi]": 4,
                "add dword [rcx], ;add dword [rax + ], ecx;invalid;or al, byte [rdx];or al, byte [rax]": 3,
                "add byte [rax], al;adc byte [rdi], ch;add byte [r8], r8b;add byte [rax], al;add byte [rax - ], ah": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;jge ;add al, 0": 3,
                "invalid;invalid;insb byte [rdi], dx;insb byte [rdi], dx;push rdi": 3,
                "add byte [rsi + ], ch;add bl, byte [rax];add dl, byte [rax];add eax, ;add al, 5": 3,
                "sub byte [rdi], ;add byte [rax], al;add byte [rax], al;add byte [rax], cl;mov edx, 4": 3,
                "add byte [rax], cl;mov edx, 4;add byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rax], al;and byte [rdx - ], bh;add al, 0;sub bh, byte [rdx + ];add byte [rax], al": 3,
                "sub eax, ;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al": 47,
                "add byte [rax], al;add byte [rax], al;add byte [rdi - ], bh;mov edx, ;add al, 0": 3,
                "add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [rbx + rdx*8], al;mov edx, 4": 3,
                "outsb dx, byte [rsi];je ;jb ;outsb dx, byte [rsi];je ": 1,
                "insd dword [rdi], dx;jb ;insd dword [rdi], dx;movsxd rsp, dword [rcx + ];push ": 4,
                "movsxd rsp, dword [rcx + ];push ;outsb dx, byte [rsi];movsxd rsi, dword [rcx];add byte [rax], al": 4,
                "outsb dx, byte [rsi];movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rsi];xor byte [rbp + ], cl": 4,
                "add bl, byte [rsi];xor byte [rbp + ], cl;jbe ;adc dword [rbx], ebp;adc ah, byte [rax + rax]": 4,
                "add cl, byte [rdx];sbb dword [rdx], ecx;add byte [rax], al;xor eax, ;invalid": 4,
                "add byte [rax], al;add byte [rax], al;adc byte [rsp + rax], bh;add byte [rax], al;add byte [rax], al": 4,
                "push rbx;je ;imul ebp, dword [rsi + ], ;jb ;jne ": 8,
                "imul ebp, dword [rsi + ], ;jb ;jne ;movsxd rsi, dword [rcx];add byte [rax], al": 4,
                "imul ebp, dword [rsi + ], ;jb ;jne ;movsxd rsi, dword [rdx];add byte [rax], al": 4,
                "jb ;jne ;movsxd rsi, dword [rdx];add byte [rax], al;add bl, byte [rdx]": 14,
                "jo ;outsd dx, dword [rsi];add dword [rax + ], esi;outsd dx, dword [rsi];or al, byte [rax]": 10,
                "add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [rbx + rdi*2], al;mov ebp, 4": 3,
                "outsb dx, byte [rsi];je ;insd dword [rdi], dx;movsxd rdx, dword cs:[ebx + ];invalid": 8,
                "movsxd rdx, dword cs:[ebx + ];invalid;jb ;jne ;movsxd rsi, dword [rdx]": 4,
                "push rbx;invalid;or byte [rax], al;jne ;adc byte [], ": 4,
                "jne ;adc byte [], ;add cl, byte [rdx];add cl, byte [rdx];invalid": 4,
                "add byte [rax], al;sal byte [rdx], 1;add byte [r8], r8b;add byte [rax], al;add byte [rax + ], cl": 4,
                "add byte [rsi + rdi*4], al;mov esi, 4;add byte [rax], al;retf;mov esi, 4": 4,
                "add ebp, dword [rdi];add al, byte [rdi];add byte [rax], al;sub eax, ;add al, 5": 4,
                "add ebp, dword [rdi];add al, byte [rdi];add byte [rax + ], dl;add byte [r8], r8b;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;movabs rdi, ;add al, 0": 4,
                "js ;or eax, dword [rax];popf;add dword [rax], eax;cwde": 4,
                "cwde;invalid;and al, 2;and byte [rdx], cl;sbb byte [rdx], al": 4,
                "add eax, ;sbb byte [rdi + rcx], al;add dword [rdx], ecx;add byte [rax], al;push rdi": 4,
                "jne ;movsxd rsi, dword [rdx];add byte [rax], al;add bl, byte [rsi];jo ": 8,
                "mov word [rcx], ax;sbb ah, byte [rdx];sbb dword [rax], ebx;sbb cl, byte [rcx];sbb dword [rdx], ecx": 4,
                "add bl, byte [rdx];xor byte [rdi], ch;invalid;or byte [rax], al;push cx": 4,
                "add byte [rax], al;rol qword [rax + rax], 0;add byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "add al, 0;jo ;add al, 0;jae ;add al, 0": 3,
                "add byte [rax], al;add byte [rcx], cl;ret 4;adc eax, ;jb ": 1,
                "imul ebp, dword [rsi + ], ;jne ;movsxd rsi, dword [rdx];add byte [rax], al;add bl, byte [rsi]": 4,
                "xor byte [rdi + rbp], bl;or byte [rax], al;add dh, al;sbb bh, byte [rsi];add byte [rax], al": 4,
                "or byte [rax], al;add dh, al;sbb bh, byte [rsi];add byte [rax], al;sub byte [rdx], al": 4,
                "sub byte [rdx], al;sgdt [rdi];add byte [rax], al;add byte [rax], al;lock add byte ss:[r8], r8b": 4,
                "add byte [rax], al;scasb al, byte [rdi];ret;add al, 0;add byte [rax], al": 3,
                "add byte [r8], r8b;add byte [rax], al;add byte [rax], dl;invalid;add al, 0": 3,
                "je ;insd dword [rdi], dx;movsxd rax, dword cs:[edx + ];invalid;invalid": 8,
                "push rdi;outsd dx, dword [rsi];jb ;jb ;jne ": 8,
                "or bl, bh;adc eax, ;invalid;add al, 8;invalid": 4,
                "add dword [rcx + ], esi;or bl, bl;sbb dword [rax], edx;fcomp qword [rcx];add cl, byte [rsi + rax]": 4,
                "add ch, byte [rdi + 1];jo ;outsd dx, dword [rsi];or al, byte [rax];cmpsw word [rsi], word ptr [rdi]": 4,
                "cmpsw word [rsi], word ptr [rdi];add dword [rdi], esi;add dword [rdx], eax;invalid;add dword [rsi], eax": 4,
                "or al, ;add al, byte [rdx];jb ;outsb dx, byte [rsi];je ": 1,
                "invalid;or al, ;add cl, byte [rdx];or eax, dword [rsi];add al, 6": 3,
                "invalid;or al, byte [];add byte [rax], al;add r8b, byte [];add ebx, dword [rcx]": 3,
                "add byte [rax], al;add r8b, byte [];add ebx, dword [rcx];add al, 7;add edx, dword [rdi]": 3,
                "mov dword [rax + rax], ;cmp eax, edi;add al, 0;add byte [rax], al;add byte [rax], al": 2,
                "add dword [rax + ], esi;outsd dx, dword [rsi];or al, byte [rax];mov byte [rcx], al;push rbp": 3,
                "invalid;invalid;invalid;jmp ;add al, byte [rsi]": 2,
                "or al, 2;invalid;sub ecx, dword [rdx];adc byte [rax], bl;add cl, byte [rsp + rdx]": 2,
                "push rbp;add al, byte [rsi];add dword [rsi + ], ebx;add al, byte [];add ebx, dword []": 2,
                "add byte [rax], al;add al, dl;cmp al, byte [rbp];add byte [rax], al;add byte [rax], al": 2,
                "insd dword [rdi], dx;movsxd rax, dword cs:[ecx + ];jae ;jae ;insb byte [rdi], dx": 2,
                "or byte [rax], al;mov byte [rcx], al;add r14b, cl;invalid;sub al, 2": 2,
                "add byte [rax], al;add byte [rax], al;enter 4, ;add byte [rax], al;add byte [rax], al": 2,
                "add byte [rcx - ], bl;add al, 0;invalid;enter 4, ;enter 4, 3": 2,
                "insd dword [rdi], dx;jae ;invalid;outsb dx, byte [rsi];jae ": 3,
                "insd dword [rdi], dx;je ;insd dword [rdi], dx;jo ;jns ": 4,
                "cmp eax, dword [rbp];add byte [rax], al;add byte [rax], al;jo ;add al, 0": 3,
                "leave;add al, 0;add byte [rax], al;add byte [rax], al;iretd": 3,
                "add byte [rax], al;sub byte [rdi + rbp*2], bl;add byte [rax], al;add byte [rax], al;add ah, cl": 3,
                "add dl, byte [rax];add dl, byte [rcx];add al, byte [rax];or al, byte [rdx];popfq": 4,
                "invalid;add eax, ;add al, byte [rdx];add dword [rdx], eax;add al, byte [rbx]": 3,
                "sub eax, dword [rcx];add ecx, dword [rcx];xor edx, dword [rax];mov rdx, cr1;add eax, dword [rdx]": 3,
                "xor edx, dword [rax];mov rdx, cr1;add eax, dword [rdx];invalid;or ebx, dword [rsi]": 3,
                "add byte [r8], r8b;add byte [rax], al;add byte [rax + ], bh;add byte [rax], al;add byte [rax], al": 5,
                "cld;mov al, ;add byte [rax], al;add byte [rax], al;add byte [rax], al": 2,
                "sub al, ;adc dword [], ecx;jb ;outsb dx, byte [rsi];je ": 1,
                "or byte [rsi], cl;add eax, ;add dword [rdx], eax;invalid;add dword [rcx], eax": 2,
                "int 4;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "add eax, dword [rdi];add byte [rax], al;add al, 5;add eax, ;add byte [rsi + 2], cl": 2,
                "invalid;add al, 0;add byte [rax], al;add byte [rax], al;and esi, ecx": 2,
                "add byte [rax], al;pop rax;sbb al, ;add byte [rax], al;add byte [rax], al": 6,
                "add cl, byte [rdi];or eax, dword [rdi];sbb al, byte [rdx];add al, 7;add al, 9": 3,
                "or al, byte [rdi];invalid;or al, byte [rax];add byte [rdx + rax + 5], ah;add edx, dword [rcx + ]": 2,
                "xor byte [rcx], ch;invalid;or byte [rax], al;mov es, word [rcx];add r10b, cl": 3,
                "or byte [rax], al;mov es, word [rcx];add r10b, cl;add eax, ;or al, byte [rbx]": 3,
                "add byte [rax], al;add byte [rax], ch;iretd;add al, 0;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;iretd;add al, 0": 3,
                "iretd;add al, 0;add byte [rax], al;add byte [rax], al;add byte [rdi + rbp*2], bl": 6,
                "add byte [rax], al;add bl, byte [rdx];push rax;jb ;outsb dx, byte [rsi]": 1,
                "push rax;cmp ecx, dword [rdi + 8];add byte [rsi - ], cl;or eax, ;or al, byte [rbx]": 7,
                "add byte [rax], al;add byte [rax], al;movabs al, byte [];iretd;add al, 0": 3,
                "add al, 0;add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [rsp + rax*4], al": 3,
                "movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rdx];and byte [rax], bh;invalid": 4,
                "add bl, byte [rdx];and byte [rax], bh;invalid;or byte [rax], al;sub byte [rdx], bl": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;or ecx, edx;add al, 0": 4,
                "add al, 0;adc cl, dl;jb ;outsb dx, byte [rsi];je ": 1,
                "add byte [rax], al;and dl, cl;add al, 0;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;mov al, ;add byte [r8], r8b": 4,
                "jne ;movsxd rsi, dword [rdx];add byte [rax], al;add bl, byte [rdx];push ": 4,
                "movsxd rsi, dword [rdx];add byte [rax], al;add bl, byte [rdx];push ;mov word [rcx], es": 4,
                "or dword [rdx + rax], esp;add bl, byte [r11];add ecx, dword [rdx];add byte [rax], al;and al, 2": 4,
                "invalid;rol byte [rax + rax], cl;rol byte fs:[rax + rax], cl;add eax, dword [rax];add byte [rax], al": 3,
                "invalid;invalid;invalid;or al, byte [rax];xor cl, byte [rax + ]": 4,
                "add ecx, dword [rcx];add al, ;add edx, dword [rsp + rax];invalid;add dword [rdx], ecx": 8,
                "add byte [rax], al;add byte [rax], al;add al, dl;add byte [r8], r8b;jb ": 1,
                "adc eax, ;add byte [rax], al;add byte [rax], al;add byte [rax], al;add al, ": 3,
                "add byte [rax], al;add al, ;rol dword [rax + rax], cl;add byte [rax], al;add byte [rax], al": 3,
                "imul esp, dword [rbp + ], ;jne ;movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rdx]": 4,
                "add byte [rax], al;lock add byte [r8], r8b;add byte [rax], al;add byte [rax - ], ah;add al, 0": 3,
                "add byte [rax], al;add byte [rdi + rdi*4], al;invalid;add al, 0;add byte [rax], al": 3,
                "sub byte [rdi + rbp*2], bl;add byte [rax], al;add byte [rax], al;add al, bh;xor ebp, dword [rdi]": 3,
                "add al, bh;xor ebp, dword [rdi];add byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rax], al;add bl, byte [rsi];loopne ;pushfq;add ebx, edi": 4,
                "xchg eax, esi;add esp, ecx;add eax, dword [rax];mov esp, ;add cl, byte [rax + 4]": 3,
                "invalid;add eax, ;add eax, dword [rbx];or byte [rdx + rax], cl;invalid": 3,
                "add eax, ;add eax, ;invalid;add dword [rdx], ecx;add byte [rax], al": 3,
                "xchg eax, esi;add dword [rbp + ], eax;sub dword [r11 + ], r9d;sub dword [rax], r14d;sub al, byte [rdx]": 3,
                "jb ;add al, 0;add eax, dword [rax];add byte [rax], al;add byte [rax], al": 2,
                "add byte [rax], al;add byte [rax + rsi*4], al;invalid;add al, 0;add byte [rax], al": 2,
                "movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rsi];push rax;mov ah, 2": 3,
                "add ah, byte [rdx + rax];or dword [rdx], eax;adc byte [rdx], al;or al, byte [];add dl, byte [rcx]": 3,
                "or dword [rdx], eax;adc byte [rdx], al;or al, byte [];add dl, byte [rcx];invalid": 3,
                "add al, 0;push rcx;xlatb;add al, 0;push rbp": 2,
                "xlatb;add al, 0;push rbp;xlatb;add al, 0": 2,
                "add byte [rax], al;add bl, byte [rdx];sub dword [rdi], edi;add dword [rax + ], eax;invalid": 8,
                "invalid;add byte [rsi - ], dl;invalid;and al, 2;and byte [rdx], al": 3,
                "rcl bh, 1;add al, 0;add byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "add edx, dword [rbx];add al, ;add dword [rdx], ecx;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rax], al;xchg eax, edx;fadd dword [rax + rax];wait;fadd dword [rax + rax]": 3,
                "add al, ;fadd dword [rax + rax];invalid;fadd dword [rax + rax];int ": 3,
                "add byte [rax], al;cmp bh, dh;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al": 3,
                "add dword [rdi + ], edi;jb ;outsb dx, byte [rsi];je ;insd dword [rdi], dx": 1,
                "add byte [rax], al;xchg cl, bl;add al, 0;add byte [rax], al;add byte [rax], al": 3,
                "add al, dh;fld dword [rax + rax];add byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "insb byte [rdi], dx;jo ;outsb dx, byte [rsi];imul esp, dword [rbx + ], ;xor al, byte [rax]": 4,
                "add byte [rax], al;in al, dx;fild dword [rax + rax];neg ebx;add al, 0": 3,
                "invalid;imul ebp, dword [rsi + ], ;xor al, byte [rax];add byte [rdx], al;sbb dl, byte [rax]": 4,
                "xor al, byte [rax];add byte [rdx], al;sbb dl, byte [rax];sbb cl, byte [rdi];add dword [rax], edx": 4,
                "add dl, byte [rbx];add cl, byte [rdx];add eax, dword [rdi];add byte [rax], al;cmp al, byte [rdx]": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], cl;fld qword [rax + rax];add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;and bl, ch;add al, 0;sub bl, ch": 4,
                "fld qword [rax + rax];out dx, al;fld qword [rax + rax];add eax, dword [rax];add byte [rax], al": 3,
                "movsxd rsi, dword [rdx];add byte [rax], al;add bl, byte [rsi];invalid;fadd qword [rcx]": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rbp - ], bh;fiadd word [rax + rax]": 3,
                "loope ;add byte [rbx], al;add byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "jne ;movsxd rsi, dword [rdx];add byte [rax], al;add bl, byte [rsi];add byte [rcx], ": 3,
                "adc al, 4;invalid;add dword [rdx], ecx;add byte [rax], al;mov al, ": 2,
                "add al, bh;loope ;add byte [rax], al;add byte [rax], al;add byte [rax], al": 2,
                "add byte [rax], al;add byte [rsi + ], cl;add byte [rax], al;call ;add byte [rax], al": 2,
                "jns ;movsxd rsp, dword [rcx + ];insb byte [rdi], dx;invalid;invalid": 6,
                "movsxd rsp, dword [rcx + ];insb byte [rdi], dx;invalid;invalid;jae ": 6,
                "add dl, byte [r10];add cl, byte [rbx];add cl, byte [rax + rcx];add ebx, ebp;and dword [rax], ebx": 3,
                "and dword [rax + ], eax;add byte [rax], al;insd dword [rdi], dx;add bl, byte [rax];add dword [rdx], edi": 3,
                "add al, byte [];add esp, dword [rcx];add al, 5;add ecx, dword [rdx];add cl, byte [rdx]": 3,
                "add byte [rax], al;add bl, byte [rdx];and byte [rcx], bh;invalid;or byte [rax], al": 3,
                "xor eax, dword [rax + ];add byte [rax], al;xor eax, dword [rdx];add eax, ;add byte [rax], al": 3,
                "add byte [rax], cl;in al, 4;add byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "outsb dx, byte cs:[rsi];ja ;jb ;movsxd rbp, dword [rsi];jne ": 4,
                "pop r15;or byte [rax], al;add al, bl;xor dh, byte [rdi];add bl, byte [rdi]": 3,
                "push rcx;add cl, byte [rdi];add dword [rdi], eax;add byte [rax], al;add byte [rax], al": 3,
                "insd dword [rdi], dx;jne ;js ;jb ;outsd dx, dword [rsi]": 4,
                "invalid;or al, byte [rax];movabs byte [], al;adc al, byte [rdx + ];add byte [rcx + rsi + 2], dl": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], ah;out 4, al;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rdi], dh;out 4, al;add byte [rdi - ], al": 3,
                "je ;insd dword [rdi], dx;movsxd rsp, dword cs:[rcx + ];insb byte [rdi], dx;jb ": 4,
                "insb byte [rdi], dx;jb ;jne ;movsxd rsi, dword [rcx];add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax + ], dl;add byte [rax], al;add al, al;out 4, al": 3,
                "add byte [rax], al;add al, 0;sbb al, ;add byte [rax], al;add byte [rax], al": 3,
                "movsxd rbp, dword [rbx + ];js ;jne ;jo ;jne ": 4,
                "add al, byte [rsi];add al, 6;invalid;invalid;jb ": 1,
                "add al, 0;add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [rax + rbp*4], al": 3,
                "add eax, ;mov ah, 4;sbb eax, dword [rdx];sbb eax, dword [rdx];sbb eax, dword [rdx]": 2,
                "add al, ;add edx, dword [rax];add cl, byte [rdx];add byte [rax], al;add byte [rax], al": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;invalid;pop rbx": 2,
                "add byte [rax], al;insd dword [rdi], dx;invalid;imul ebp, dword [rsi], ;mov eax, ": 1,
                "add al, 0;add byte [rax], al;add byte [rax], al;invalid;jb ": 1,
                "insb byte [rdi], dx;invalid;invalid;movsxd rbp, dword [rbx + ];outsd dx, dword [esi]": 1,
                "add al, 2;add eax, dword [rdx];add al, byte [rax + rcx];add al, byte [rdi];add al, byte [rdx]": 1,
                "add eax, dword [rdx];add al, byte [rax + rcx];add al, byte [rdi];add al, byte [rdx];add al, byte [rdx + rax]": 1,
                "add al, 2;add al, 2;add al, ;invalid;add al, byte [rdi]": 1,
                "add al, byte [rdi];add al, byte [rdx + rax];add al, 2;add al, 6;add eax, ": 1,
                "add al, byte [rbx];add al, byte [rdx + rax];add al, 2;add al, ;invalid": 1,
                "add al, 8;add al, 2;add al, byte [rdx];invalid;add al, byte [rdx]": 1,
                "add al, byte [rdx];invalid;or al, byte [rax];add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add al, al;jns ": 1,
                "jp ;add byte [rax], al;add byte [rax], al;add al, bh;std": 1,
                "add byte [rax], al;add byte [rax], al;add al, bh;std;add al, 0": 1,
                "add byte [rax], al;invalid;inc byte [rax + rax];or bh, dh;add al, 0": 1,
                "mov eax, ;or eax, ;add byte [rax], al;add byte [rax], al;xor byte [rdx + ], bh": 1,
                "inc byte [rax + rax];pop rbx;inc byte [rax + rax];add byte [rax], al;add byte [rax], al": 1,
                "movsxd rbp, dword [rbx + ];push ;add byte [rdx], al;add byte es:[rax - ], bh;or eax, ": 1,
                "cmp byte [rdx + ], 0;add byte [rax], al;add byte [rax], al;lock inc byte [rax + rax];and byte [rax], al": 1,
                "add byte [rax], al;lock inc byte [rax + rax];and byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax - ], ah;add byte [r8], r8b;add byte [rax], al;add byte [rax], ah;add eax, ": 1,
                "add eax, 0;add byte [rdx + ], dl;add eax, 0;add byte [rbx + rbp + ], ah;add byte [rax], al": 1,
                "add byte [rbx + rbp + ], ah;add byte [rax], al;add byte [rax], al;add byte [rax], al;sbb al, ": 9,
                "movsxd rax, dword [rax];add byte [rdx], al;sbb dl, byte [rax + ];add qword [r8 + 4], r10;invalid": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;loopne ;add byte [r8], r8b": 2,
                "add dword [rax], eax;add byte [rdi], dh;add al, byte [];add esp, dword [rax];invalid": 2,
                "add eax, ;add byte [rax], al;invalid;add al, byte [];add esp, dword [rax]": 2,
                "add eax, ;add byte [rdi + rbp + ], cl;add byte [rax], al;adc al, 0;add byte [rax + rdx*4], al": 2,
                "invalid;push rax;pop rdx;add qword [r8 + ], r10;or r8b, byte [r8]": 2,
                "add byte [rbx + rsi], al;xor byte [], al;add byte [rax + rsi], bh;add eax, 0;add byte [rax], bl": 2,
                "jo ;outsd dx, dword [rsi];add byte gs:[rax], al;je ;jo ": 1,
                "add dword [rax], eax;add byte [rdx + rax + 5], al;add edx, dword [rdi];add al, 5;add edx, dword [rdi]": 3,
                "add edx, dword [rdi];add al, 5;add esp, dword [rax];invalid;add eax, ": 1,
                "add esp, dword [rax];add al, 5;add edx, dword [rdx + rax];or al, byte [rax];add byte [rax], al": 1,
                "push rsp;add eax, ;add byte [rax], al;add byte [rax], al;add byte [rdx], dh": 1,
                "push rsp;add eax, ;add byte [rax], al;add byte [rax], al;add dh, ah": 2,
                "add byte [rbx], cl;push rbp;add eax, 0;add byte [rax], bl;sub al, ": 2,
                "add byte [rax], al;add r8b, byte [];add edx, dword [rdi];add al, 5;add edx, dword [rdi]": 2,
                "add eax, ;add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rax + rsi*4], al": 2,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rax + rsi*4], al;push rbp": 2,
                "add eax, ;add byte [rax + rax], dl;add byte [rcx], al;push rsi;add eax, 0": 1,
                "sub dword [rdi], edi;add dword [rax + ], eax;invalid;invalid;add al, ah": 1,
                "invalid;add eax, dword [rdi];add byte [rax], al;and al, 2;invalid": 1,
                "add eax, 6;add byte [rax], al;add byte [rax], al;add byte [rax], al;add eax, ": 1,
                "invalid;add byte [rsi], dl;invalid;invalid;add byte [rbx], al": 1,
                "add al, ;invalid;invalid;add byte [rax], al;add byte [rax], al": 10,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax + rsi + ], al": 66,
                "imul edi, dword [rdx + ], ;add bl, byte [rsi];push rax;xchg dword [rcx], eax;add qword [r8 + ], r10": 2,
                "add byte [rdx + ], dh;add byte [rax], al;add byte [rax + rax], dl;add byte [rsi*4 + ], al;add byte [rax], al": 1,
                "add al, al;invalid;invalid;add byte [rax], al;add byte [rax], al": 3,
                "sbb dl, byte [rax];sbb al, ;add dword [rax], edx;xor ecx, dword [rdi];or byte [rax], al": 4,
                "or eax, dword [rdx + rsi];add dword [rdi], eax;add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;invalid;rol byte [rsi], 1;add byte [rax], al;add byte [rax], al": 1,
                "add al, 3;or byte [rsi], al;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 1,
                "movsxd rdx, dword [rcx + rdi*2 + ];sub dword gs:[rsi], ebp;imul ebp, dword [rsi], ;jb ;insb byte [rdi], dx": 1,
                "movsxd rsi, dword gs:[rsi + rbp + ];sub dh, byte [rdx + ];jns ;sub dword gs:[rsi], ebp;je ": 1,
                "sti;add dword [rax], ecx;cli;add dword [], eax;add edx, dword [rax]": 2,
                "mov al, byte [rbx];invalid;or byte [rdx], cl;invalid;add edx, dword []": 2,
                "adc byte [rax + ], al;adc al, ;add eax, dword [rdi + ];push rcx;mov es, word [rbx]": 2,
                "add eax, dword [rdi + ];push rcx;mov es, word [rbx];adc eax, ;add dword [rsi], ebx": 2,
                "adc byte [rdx], dl;cvttps2pi mm2, qword [rdx];adc eax, ;adc ebp, eax;add dword [rsi], edx": 2,
                "add esp, dword [rdx];add al, ;or cl, byte [rdx];adc dword [rcx], ebx;adc al, byte [rcx]": 2,
                "or byte [rdx], al;adc byte [rdx], al;sbb byte [rsi], al;or byte [rdx], al;sbb dword [rbx], ebx": 1,
                "add al, byte [rdi];add dword [rsp + rax], eax;or dword [rdi], esp;sub dword [rdx], ebp;or byte [rcx], ah": 1,
                "insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];jne ;movsxd rdx, dword [rbx + ];jb ": 1,
                "and eax, dword [rdx];adc eax, dword [rdx];add dword [rbx + ], edx;add al, ;mov ss, word [rax]": 1,
                "or dword [rax + ], eax;add ah, byte [rsi + 4];adc eax, ;add cl, byte [rax];add dword [rdx], ecx": 1,
                "adc eax, ;add cl, byte [rax];add dword [rdx], ecx;invalid;rol dword [rcx], cl": 1,
                "adc byte [rcx], al;add ebp, dword cs:[];xchg eax, ebx;adc byte [], al;invalid": 1,
                "adc byte [rdx], cl;add byte [rax], al;cmp dword [rdx], eax;add ah, byte [ebp + 2];add r12b, byte [rdi]": 1,
                "add byte [rax + 2], dh;sub eax, dword [rcx];invalid;invalid;add eax, dword []": 1,
                "or byte [], al;add eax, ;invalid;or byte [rax], dl;add al, byte [rbx]": 1,
                "add dword [rsi], ebp;invalid;or eax, ;or byte [rax], cl;invalid": 1,
                "invalid;add dword [rdx], edx;add al, byte [];add dword [rdi], eax;add dword [rdx], ecx": 1,
                "invalid;or eax, ;add al, byte [rsi];invalid;invalid": 1,
                "add al, byte [rsi];invalid;invalid;or byte [rcx + 2], ah;add al, byte []": 1,
                "invalid;add al, ;sbb dword [rax], esp;and al, 1;invalid": 1,
                "invalid;add dword [rbx], edx;add dword [rdx], ecx;jb ;insb byte [rdi], dx": 1,
                "xchg eax, ecx;add dword [rsi], eax;neg dword [rdi];invalid;add al, byte []": 1,
                "add al, 2;add al, 1;invalid;add cl, byte [rdi];add ecx, dword [rsi + rax]": 1,
                "invalid;adc eax, dword [];invalid;invalid;add eax, ": 1,
                "or byte [rsi], al;add al, ;add al, byte [rdx + rax];add al, 1;sbb al, byte [rdx]": 1,
                "add dword [rdx], eax;invalid;adc eax, ;or byte [rsi], al;add eax, dword []": 1,
                "add eax, dword [];add al, ;add ecx, dword [rax + rcx];or edi, dword gs:[rbx + rax + ];add eax, ": 1,
                "add dword [rdx + ], edx;add al, ;add al, byte [rdx];xchg eax, ebp;add dword [], eax": 1,
                "cld;and byte [rsi], cl;mov bl, 1;sbb al, 7;jae ": 1,
                "and byte [rsi], cl;mov bl, 1;sbb al, 7;jae ;invalid": 1,
                "movsxd rax, dword [rdi];sbb al, ;sub dword [rdx], eax;add dword [rbx + ], r13d;and eax, ": 1,
                "and eax, dword [rdx];and al, 2;adc eax, dword [rdx];xor al, 2;push rbp": 1,
                "add eax, ;xor byte [rbx], al;or byte [rsi], al;sbb byte [rdx], al;or byte [rdx], al": 1,
                "invalid;adc dl, byte [];add dword [rdi], eax;or al, 7;or eax, ": 1,
                "invalid;invalid;add dword [rax + ], eax;invalid;or eax, dword [rax]": 1,
                "add byte [rax], al;add al, ;or al, byte [rdi];add byte [rdi + ], al;invalid": 1,
                "outsd dx, dword [rsi];jae ;add byte [rax], al;add bl, byte [rsi];xor byte [rcx + ], ch": 1,
                "add byte [rax], al;add bl, byte [rsi];xor byte [rcx + ], ch;add dword [rax], esi;and eax, ": 1,
                "and al, 2;invalid;add dword [rdi], eax;add byte [rax], al;and al, 4": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;imul r8d, dword [r15], 0;push rdx": 1,
                "add byte [rax], al;add byte [rdi + rbx*2], al;imul eax, dword [rdi], 0;add byte [rax], al;add byte [rax], al": 1,
                "invalid;invalid;add al, al;add ah, byte [rdi];xor byte [rdx + rax], ah": 2,
                "invalid;add bl, byte [rsi];add eax, dword [rdi];add byte [rax], al;and al, 2": 2,
                "add byte [rax], al;and byte [rbx], cl;add byte [r8], al;add byte [rax], al;add al, bl": 2,
                "add byte [rax], al;add al, bl;imul eax, dword [rdi], 0;adc byte [rax], al;add byte [rax], al": 2,
                "adc byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;out dx, eax": 2,
                "add byte [rax], al;add byte [rax], al;out dx, eax;imul eax, dword [rdi], 0;cli": 2,
                "add dword [rax], eax;mov r8, qword [rcx];add byte [rax], al;and al, byte [rdx];sub al, 3": 3,
                "and al, byte [rdx];sub al, 3;sub al, 4;invalid;add dword [rdx], ecx": 3,
                "add byte [rax], al;add byte [rax], al;add al, ;insb byte [rdi], dx;invalid": 3,
                "invalid;add byte [rax], al;add byte [rax], al;add byte [rdx + ], bh;add byte [rax], al": 3,
                "jo ;jb ;jne ;movsxd rsi, dword [rax + rax];add byte [rdx], al": 4,
                "jo ;add byte [r8], al;add byte [rax], al;add byte [rax], dh;insd dword [rdi], dx": 3,
                "add byte [rax], al;add byte [rdi + ], ah;invalid;add byte [rax + ], dh;invalid": 3,
                "add byte [rax], al;add byte [rsi + rbp*2 + 7], bh;add byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "invalid;add al, al;add cl, byte [rax];outsb dx, byte [rsi];add byte [rax], al": 4,
                "invalid;add byte [rax], al;outsd dx, dword [rsi];invalid;add byte [rdi + rbp*2], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add al, 7;outsd dx, dword [rsi]": 3,
                "add al, ;outsd dx, dword [rsi];invalid;add ah, dh;outsd dx, dword [rsi]": 4,
                "add byte [rax], al;pushfq;invalid;outsd dx, dword [rsi];add byte [rax], al": 3,
                "add byte [rax], al;add bl, byte [rsi];movabs al, byte [];invalid;lahf": 8,
                "or al, byte [rdx];adc eax, dword [rax + ];or eax, ;and al, byte [rdx];or cl, byte []": 4,
                "add dword [rax], ecx;invalid;lar ecx, word [rcx];add cl, byte [rdx];or eax, ": 4,
                "add dword [rbx], eax;or dword [rdx], eax;add al, 4;or dword [], eax;or eax, ": 4,
                "or eax, ;sub byte [rsi], al;or byte [rdx], al;add dword [r12 + r8], eax;or dword [rdx], eax": 3,
                "add eax, ;or byte [rdi], al;invalid;add al, 8;invalid": 3,
                "add al, ;jo ;add byte [rax], al;add byte [rax], al;add ch, bl": 3,
                "jb ;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];ja ": 1,
                "add eax, ;add al, 5;invalid;add dword [rdi], eax;add byte [rax], al": 3,
                "or eax, ;sbb al, ;or al, byte [rax];add byte [rax], ch;add cl, byte [rbx]": 3,
                "or byte [], al;add ebx, dword [];add eax, dword [rsp + rax];invalid;add eax, dword []": 3,
                "add al, dh;sub al, ;add byte [rax], al;add byte [rax], al;add byte [rax], bl": 2,
                "add dword [rdi], eax;add byte [rax], al;movabs al, byte [];jae ;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rdi], dl;jae ;add byte [rdx], ah": 3,
                "jae ;add byte [rbx], al;add byte [rax], al;add byte [rax], al;add byte [rax], al": 5,
                "jb ;add byte [rax], al;add bl, byte [rsi];push rax;pop rdi": 2,
                "add dword [rdi], eax;add byte [rax], al;and al, byte [rdx];or al, 3;or eax, dword [rsp + rdi]": 2,
                "or al, 3;or eax, dword [rsp + rdi];add dword [rdi], eax;add byte [rax], al;add byte [rax], al": 2,
                "add byte [rax], al;loopne ;add byte [r8], al;add byte [rax], al;add byte [rax], ch": 1,
                "add byte [rax], al;add al, byte [rax];jne ;add byte [rax], al;add byte [rax], al": 1,
                "add bl, byte [rcx];add byte [rax], al;add byte [rax + ], dl;add byte [r8], al;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax + ], bl;add byte [rax], al;add byte [rax], 0;add byte [rax], al": 1,
                "invalid;insb byte [rdi], dx;insb byte [rdi], dx;add byte [rax], al;add dl, byte [rax + rdx*2]": 1,
                "movsxd rdx, dword [rcx + rdi*2 + ];add byte gs:[rax], al;add bl, byte [rdx];push rax;or byte ds:[r8], r8b": 1,
                "add byte [rbp + ], cl;add byte [rax], al;add byte [rax + rax], dl;add byte [rax + rdx*4], al;mov bh, 7": 1,
                "push rax;cmp eax, ;pop rdi;add byte [rdi + rbx*2], al;add byte [rax], al": 2,
                "add al, ah;add byte [r8], al;add byte [rax], al;add byte [rax], al;mov eax, ": 2,
                "imul esp, dword [rdi + ], ;add byte [rsi], cl;sbb al, byte [rax];add al, ;add byte [rdi + rax], al": 30,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rbx + rsi*4], al;mov eax, 7": 3,
                "add byte [rsi + rdx], al;add byte [rdi + rax], al;add dword [rdi], ecx;add byte [rdi + rax], al;add dword [rdi], ecx": 149,
                "add byte [rax], al;add byte [rax], al;and byte [rbx + ], cl;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;movabs rdx, ;invalid": 5,
                "sbb al, ;add byte [rax], al;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 2,
                "outsb dx, byte [rsi];movsxd rdx, dword [rcx + rdi*2 + ];sub dword gs:[rsi], ebp;outsd dx, dword [rsi];outsb dx, byte [rsi]": 5,
                "outsd dx, dword [rsi];outsb dx, byte [rsi];jbe ;jb ;imul esp, dword [rdx + ], ": 17,
                "add byte [rdx - ], ah;invalid;add byte [rbp - ], ah;invalid;add byte [rax - ], ch": 5,
                "sub dword gs:[rsi], ebp;insb byte [rdi], dx;insd dword [rdi], dx;add byte [rax], al;add bl, byte [rcx]": 5,
                "xor eax, ;add byte [rax], al;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 165,
                "add al, ;syscall;add byte [rsi], cl;add byte [rcx*2 + ], r8b;or dword [rcx], eax": 64,
                "add al, 7;add edx, dword [rdx];add byte [rax], al;or al, 2;or dword [rdx], eax": 60,
                "add al, 7;add edx, dword [rdx];add byte [rax], dl;add byte [r8], al;add byte [rax], al": 5,
                "add byte [rax], dl;add byte [r8], al;add byte [rax], al;add byte [rax - ], ch;invalid": 5,
                "add byte [rax], al;add byte [rax - ], bl;add byte [rax], al;jb ;insb byte [rdi], dx": 1,
                "add byte [rax - ], bl;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rcx - ], bh": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rcx - ], bh;mov ebp, ": 4,
                "add byte [rcx - ], bh;mov ebp, ;invalid;add byte [rbx], al;add byte [rax], al": 4,
                "pop rsp;insd dword [rdi], dx;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al": 4,
                "or byte [rcx], al;invalid;add al, 7;add ebx, dword [rdx];add byte [rax], al": 49,
                "add byte [rax], al;add byte [rax], bh;mov esi, ;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rax + rax], dl;add byte [rdx + rbp*2], al;mov esi, 7;add byte [rax], al;jne ": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;or byte [rbp + ], 0;add byte [rax], al": 4,
                "add byte [rax], al;clc;mov edi, ;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rbx], bl;rol byte [rdi], 0;invalid;rol byte [rdi], 0;add eax, dword [rax]": 4,
                "movsxd rdx, dword [rcx + rdi*2 + ];sub dword gs:[rsi], ebp;jae ;jb ;insb byte [rdi], dx": 1,
                "add byte [rax], al;add byte [rax], al;movabs eax, dword [];rol byte [rdi], 0;add eax, dword [rax]": 4,
                "invalid;sbb dword [rax], eax;add al, ;add byte [rdi + rax], al;add dword [rdx], edx": 29,
                "add al, ;add byte [rdi + rax], al;add dword [rdx], edx;jb ;insb byte [rdi], dx": 1,
                "outsb dx, byte gs:[rsi];add byte [rax], al;add bl, byte [rdx];add byte [rsi], cl;sbb al, byte [rax]": 34,
                "add byte [rbx - ], al;invalid;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 1,
                "add byte [rbx - ], al;invalid;add byte [rsi - ], al;invalid;add byte [rbx], al": 8,
                "add byte [rax], al;add byte [rax + ], al;add byte [rax], al;add ah, cl;sub al, ": 4,
                "add byte [rax], al;loopne ;invalid;add byte [rax], dl;add byte [rax], al": 4,
                "add byte [rdi + rax], al;invalid;invalid;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rax], dl;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rbx - ], cl": 4,
                "add byte [rax], dl;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rdi], dl": 4,
                "jne ;add byte [rax], al;add bl, byte [rdx];add byte [rsi], cl;sbb al, byte [rax]": 34,
                "add byte [rax + ], al;add byte [rax], al;add byte [rax], ah;mov dword [rdi], ;add byte [rax], al": 5,
                "invalid;add byte [rbx], al;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 2,
                "invalid;add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rbx + rax*2], al": 4,
                "invalid;add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rdx*2 + ], al": 5,
                "sub dword gs:[rsi], ebp;jne ;movsxd rbp, dword [rdi + ];insd dword [rdi], dx;outsd dx, dword [rsi]": 5,
                "invalid;add byte [rcx - ], dh;invalid;add byte [rbx], al;add byte [rax], al": 5,
                "add byte [rax + rsi + ], al;add byte [rax], al;add byte [rax], al;add byte [rcx + rdi*2 + ], dh;je ": 50,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [], al;retf 7": 3,
                "add byte [rax], al;add byte [rax], al;in al, dx;outsd dx, dword ss:[rsi];add byte [rax], al": 7,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;add ah, cl": 32,
                "add al, 1;sbb dword [rsp + rax], ecx;or edx, dword [rdx + rax];add eax, ;add byte [rax], al": 2,
                "add byte [rax + ], ah;add byte [rax], al;add byte [rax], al;add byte [rax], al;add ch, al": 7,
                "add byte [rax], al;add byte [rax], al;add byte [rbx - ], ah;invalid;add byte [rsi - ], ch": 2,
                "add byte [rax], al;add byte [rbx - ], ah;invalid;add byte [rsi - ], ch;invalid": 2,
                "xor byte [rdi + ], cl;add byte [rsi], cl;lea eax, [rcx];add byte [rcx*4 + ], al;add bl, byte [rdi]": 11,
                "invalid;add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rsp + rbx], al": 2,
                "push rdx;add byte [r8], al;add byte [rax], al;add byte [rax], bl;int 7": 4,
                "add byte [rax], al;add byte [rax], bl;int 7;add byte [rax], dl;add byte [rax], al": 4,
                "add al, dl;int 7;add bl, dl;int 7;add byte [rbx], al": 4,
                "add byte [rdi + rax], al;add dword [rbx], edx;add byte [rax + ], ah;add byte [rax], al;add byte [rax], bh": 4,
                "add byte [rax], dl;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax - ], ah": 4,
                "add bl, bh;invalid;invalid;add dh, bh;invalid": 4,
                "invalid;add dh, bh;invalid;invalid;add byte [rcx], al": 4,
                "movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;sub dword [rsi], ebp;insb byte [rdi], dx;insd dword [rdi], dx": 4,
                "sub dword [rsi], ebp;insb byte [rdi], dx;insd dword [rdi], dx;add byte [rax], al;add bl, byte [rcx]": 4,
                "add byte [rax], al;add byte [rbx], dh;rol byte [rdi], 1;add byte [rax], al;add byte [rax], al": 4,
                "jb ;insb byte [rdi], dx;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 5,
                "add byte [rax], al;add byte [rax], dh;rol dword [rdi], 1;add byte [rax], cl;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rdx - ], dh;invalid;add byte [rax], al": 4,
                "sub dword [rsi], ebp;imul r12d, dword [rbp + ], ;outsb dx, byte [rsi];js ;add byte [rdx], al": 5,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rsi + rcx], al;rol byte [rdi], cl": 4,
                "add byte [rcx], bl;rol byte [rdi], cl;add byte [rax], al;add byte [rax], al;add byte [rbp + rbp*2 + ], bl": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rbp + rbp*2 + ], bl;add byte [rax], al;add byte [rax], al": 12,
                "add byte [rax], ah;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax - ], bl": 4,
                "add byte [rax], al;add byte [rax], al;add al, ch;rol dword [rdi], cl;add bl, ch": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rsp + rbp + ], bl;add byte [rax], al;sbb byte [rdi + rbp*2], bl": 24,
                "add byte [rsi + ], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rcx + rcx*4], al;invalid": 4,
                "add byte [rax], al;add byte [rax + rax], dl;add byte [rcx + rcx*4], al;invalid;invalid": 4,
                "add byte [rax], al;loopne ;add byte [r8], al;add byte [rax], al;add al, dh": 4,
                "add byte [r8], al;add byte [rax], al;add al, dh;invalid;invalid": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rcx], dl;invalid;invalid": 4,
                "add byte [rax], al;add byte [rdi], bl;invalid;invalid;add byte [rax], al": 4,
                "add byte [rax], al;push rbp;add byte [r8], al;add byte [rax], al;add byte [rax + ], al": 4,
                "add byte [rax], dl;invalid;invalid;add byte [rax], dl;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rcx], dh;invalid;invalid;add byte [rsi + rdx*8], dh": 4,
                "invalid;invalid;add byte [rsi + rdx*8], dh;invalid;add byte [rdi], dh": 4,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rdx + rdi], al;invalid": 4,
                "add byte [rax], al;add byte [rax + rax], dl;add byte [rdx + rdi], al;invalid;invalid": 4,
                "add byte [rsi], cl;sbb al, byte [rax];jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 3,
                "add byte [rax - ], al;invalid;add byte [rax], dh;add byte [rax], al;add byte [rax], al": 4,
                "invalid;add byte [rcx - ], dh;invalid;add byte [rdi + rdx*8 + 7], dh;add byte [rbx], al": 4,
                "invalid;add byte [rdi + rdx*8 + 7], dh;add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl": 4,
                "add edx, dword [rdi];add byte [rax], al;add byte [rax], al;add byte [rax], al;loopne ": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rsi + ], dl;add byte [rax], al;add byte [rax], al": 5,
                "adc al, 0;add byte [rdi], al;fadd dword [rdi];add byte [rax], al;add byte [rax], al": 4,
                "fld dword [rdi];add byte [rsi], dh;fld dword [rdi];add byte [rcx], bh;fld dword [rdi]": 4,
                "add byte [rax], al;add byte [rax + rax], dl;add byte [rsp + rdi], al;fld dword [rdi];add byte [rax], al": 4,
                "add byte [rsp + rdi], al;fld dword [rdi];add byte [rax], al;add byte [rax], al;add byte [rcx - ], al": 4,
                "imul r15d, dword gs:[rax + ], ;sub dword [rsi], ebp;jne ;outsb dx, byte [rsi];add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rdx + rbx*8 + 7], bl;add byte [rdi - ], bl": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rdx + rbx*8 + 7], bl;add byte [rdi - ], bl;invalid": 4,
                "movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;sub dword [rsi], ebp;jne ;jne ": 5,
                "add byte [rax + rax], dl;add byte [rdx + rsi*8], al;fiadd dword [rdi];add byte [rax], al;add byte [rax], al": 4,
                "add byte [rbp - ], bh;invalid;add byte [rax - ], al;fild dword [rdi];add byte [rbx], al": 4,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rsi + rax*4], al;fild dword [rdi]": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rdx], cl;fadd qword [rdi]": 4,
                "add byte [rax], al;add byte [rax], al;loopne str.reflect.__funcTypeFixed128_.String;add byte [r8], al;add byte [rax], al": 5,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rsi + ], al;add byte [rax], al": 4,
                "add byte [rax + ], bl;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rsi - ], bh": 9,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rsi - ], bh;fld qword [rdi]": 5,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rcx], al;fiadd word [rdi]": 4,
                "add ebp, dword [rbx];jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];sub ah, byte [rsi + ]": 2,
                "fild word [rdi];add byte [rax], al;add byte [rax], al;add ah, ch;outsd dx, dword ss:[rsi]": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rcx], bh;loopne ;add byte [rax], bh": 4,
                "add al, ;add byte [rdi + rax], al;je ;jo ;jno ": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rcx + 7], bl;add byte [rdi - ], bl": 4,
                "sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;push ": 23,
                "add byte [rax], al;rcr byte [rax + ], 1;add byte [rax], al;add byte [rax], al;jb ": 1,
                "add byte [rax], al;add byte [rax + rax], dl;add byte [rax + rdi*8], al;loope ;add byte [rax], al": 4,
                "add byte [rax], al;add ch, bh;loope ;add byte [rax], al;add byte [rax], al": 4,
                "loop ;add byte [rax + ], dl;add byte [rax], al;add byte [rax + rax], dl;add byte [rbx + rdx*4], al": 4,
                "add byte [rax], al;adc byte [rcx + ], bl;add byte [rax], al;add byte [rax], al;add al, bh": 4,
                "jrcxz ;add byte [rax], al;add byte [rax], al;add byte [rdi], ah;jrcxz ": 4,
                "add edx, dword [rdx];jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];sub ah, byte [rsi + ]": 1,
                "outsb dx, byte [rsi];movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;imul r12d, dword cs:[rbp + ], ;outsb dx, byte [esi]": 15,
                "imul r15d, dword gs:[rax + ], ;imul r12d, dword cs:[rbp + ], ;outsb dx, byte [esi];add byte [rax], al;add bl, byte [rdx]": 15,
                "outsb dx, byte [esi];add byte [rax], al;add bl, byte [rdx];jb ;insb byte [rdi], dx": 1,
                "add byte [rcx*2 + ], r8b;or dword [rcx], eax;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 2,
                "out 7, al;add byte [rax], al;add byte [rax], al;add byte [rsi], bh;invalid": 4,
                "add byte [rax + rax], dl;add byte [rcx + rcx*2], al;out 7, al;add byte [rax], al;add byte [rax], al": 4,
                "insd dword [rdi], dx;outsb dx, byte gs:[rsi];je str.reflect.__funcTypeFixed16_.In;add byte [rax], al;add dl, byte [rsi]": 4,
                "add byte [rax], al;add byte [rdi - ], dh;invalid;add byte [rdx - ], bh;invalid": 4,
                "invalid;add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rax + rax*4], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rbp + ], al;add byte [rax], al;add byte [rsp + rbp + ], bl": 4,
                "add al, ch;out 7, eax;add byte [rax], dl;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rax], dl;pop rbx;add byte [r8], al;add byte [rax], al;add byte [rax + ], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax - ], ah;call ": 4,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rcx + rbp*4], al;call ": 4,
                "add byte [rax], al;xor ecx, ebp;invalid;add byte [rcx + rbp*8], dh;invalid": 4,
                "add byte [rcx + rbp*8], dh;invalid;add byte [rdi], dh;jmp ;add byte [rax], al": 4,
                "jmp ;add byte [rax], al;adc al, 0;add byte [rdx + rdi], al;jmp ": 4,
                "add byte [rax], dh;invalid;invalid;add byte [rax], ah;add byte [rax], al": 5,
                "add byte [rdx - ], bl;invalid;add byte [rbp - ], bl;invalid;add byte [rbx], al": 4,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rax], al;invalid": 4,
                "add byte [rax], al;add al, al;pop rbx;jb ;insb byte [rdi], dx": 1,
                "add byte [rax], al;stc;invalid;invalid;add byte [rax], al": 4,
                "add byte [r8], al;add byte [rax], al;add byte [rax], cl;in al, dx;invalid": 4,
                "in al, dx;invalid;add byte [rax], al;add byte [rax], al;add byte [rax], bl": 8,
                "add byte [rdx - ], bh;in al, dx;invalid;add al, al;in al, dx": 4,
                "add al, cl;in al, dx;invalid;add byte [rax], al;add byte [rax], al": 4,
                "outsb dx, byte [rsi];movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;jne ;je ": 23,
                "add byte [rax], al;pop rsp;add byte [r8], al;add byte [rax], al;add al, al": 4,
                "invalid;add byte [rax], al;add byte [rax], al;add byte [rsp + rbp + ], bl;add byte [rax], al": 4,
                "invalid;add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rcx + ], al": 4,
                "add byte [rdx], dl;out dx, eax;invalid;add byte [rax], al;add byte [rax], al": 4,
                "invalid;add byte [rax], al;add byte [rax], al;add byte [rdi + ], bl;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rbx], ah;invalid;invalid": 4,
                "movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;push rbx;je str.reflect.__funcTypeFixed16_.common;imul ebp, dword [rsi + ], ": 5,
                "add byte [rax], al;add byte [rax], al;add byte [rbx - ], dl;invalid;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax + rax], dl;add byte [rcx], al;int1;invalid": 4,
                "add dword [rdi], eax;add byte [rax], al;invalid;pop rbp;add byte [r8], al": 4,
                "add dword [rdx + rax], eax;or dword [rcx], eax;sbb al, byte [rcx];or al, byte [rax];add byte [rax + ], al": 4,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rbx + rbp], al;invalid": 4,
                "invalid;add byte [rax], al;add byte [rax], al;add byte [rdi - ], dl;invalid": 4,
                "add byte [rdi + rax], al;add dword [rbx], edx;add byte [rax], al;add byte [rax], al;add al, ah": 9,
                "invalid;add dl, ah;hlt;invalid;add byte [rbx], al": 4,
                "add byte [rax - ], cl;invalid;add byte [rax], dl;add byte [rax], al;add byte [rax], al": 4,
                "add dl, byte [rsi];jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];sub ah, byte [rsi + ]": 1,
                "add byte [rax], al;add byte [rax + ], ah;add byte [r8], al;add byte [rax], al;add byte [rax], cl": 4,
                "add byte [r8], al;add byte [rax], al;add byte [rax], cl;test dword [rdi], ;add byte [rax], al": 4,
                "add byte [rax - 8], dh;invalid;add byte [rbx - 8], dh;invalid;add byte [rbx], al": 4,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rsi + rsi*2], al;clc": 4,
                "clc;invalid;add byte [rax], al;add byte [rax], al;add byte [rcx + ], al": 4,
                "stc;invalid;add byte [rdx], bl;stc;invalid": 4,
                "add al, 7;add ebx, dword [rdx];add byte [rax], al;add byte [rax], al;and byte [rax + ], 0": 4,
                "invalid;add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rcx + rcx*8], al": 4,
                "add byte [rcx + rcx*8], al;stc;invalid;add byte [rax], al;add byte [rax], al": 4,
                "add al, bl;cli;invalid;add byte [rax], ah;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], ah;invalid": 6,
                "outsd dx, dword cs:[rsi];add byte [rax], al;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 1,
                "add byte [rax], al;add byte [rax + rax], dl;add byte [rdx + rdi*4], al;cld;invalid": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rdi + ], bh;add byte [rax], al;add byte [rax], bl": 8,
                "add byte [rax - 3], al;invalid;add byte [rbx - 3], al;invalid;add byte [rsi - 3], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;sar ebp, cl;invalid": 4,
                "add byte [rax], al;add byte [rcx], bl;inc dword [rdi];add byte [rdi + rdi*8], bl;invalid": 4,
                "add byte [rdi + rax], al;add dword [rbx], edx;add byte [rax + ], al;add byte [rax], al;add byte [rax], bl": 4,
                "add dword [rbx], edx;add byte [rax + ], al;add byte [rax], al;add byte [rax], bl;add byte [rax], cl": 4,
                "add byte [rax + rax], dl;add byte [rbx + rax*2], al;add byte [rax], cl;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], cl;or byte [rax], al;add byte [rax], al;add byte [rax], al": 4,
                "imul r15d, dword gs:[rax + ], ;jne ;outsb dx, byte [rsi];add byte [rax], al;jb ": 1,
                "add byte [rax], al;add byte [rax], al;movabs al, byte [];add byte [rax], cl;add byte [rax], dl": 4,
                "add byte [rax], al;add byte [rax + rax], dl;add byte [rdi + rdx*8], al;add byte [rax], cl;add byte [rax], al": 4,
                "add byte [rax], al;add ah, bl;add byte [rax], cl;add byte [rax], al;add byte [rax], al": 4,
                "add dword [rax], ecx;add byte [rax], al;add byte [rax], al;add dh, bh;add dword [rax], ecx": 4,
                "add dword [rdx], edx;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rbx + ], ah": 5,
                "add byte [rax], dl;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rcx], dl": 4,
                "add byte [rax], al;adc al, 0;add byte [rax], al;add eax, 8;add byte [rax], al": 4,
                "movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;add bl, byte [rdx];push rax;pop rdx": 10,
                "add eax, ;add byte [rax], al;add byte [rax], al;add byte [rax], al;jb ": 1,
                "lea eax, [rcx];add byte [rcx*4 + ], al;add bl, byte [rdi];jb ;insb byte [rdi], dx": 1,
                "add byte [rax + ], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rcx - ], ah": 8,
                "or byte [rax], al;add eax, dword [rax];add byte [rax], al;adc al, 0;add byte [rdx + rbp*4], al": 4,
                "add byte [rax], al;add byte [rax], al;cmp byte [rdi], al;or byte [rax], al;cmp eax, dword [rdi]": 4,
                "or byte [rax], al;add byte [rax], al;add byte [rax], al;invalid;invalid": 16,
                "sub ah, byte [rsi + ];outsb dx, byte [rsi];movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;imul esi, dword [rbx + r14*2], ": 9,
                "movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;imul esi, dword [rbx + r14*2], ;invalid;sbb al, byte [rax]": 8,
                "add dword [rbx], edx;add byte [rdi + rax], al;add dword [rbx], edx;add byte [rax], al;add byte [rax], dh": 4,
                "add dword [rbx], edx;add byte [rax], al;add byte [rax], dh;add byte gs:[r8], al;add byte [rax], al": 4,
                "add byte [rax], al;add al, cl;or byte [rax], cl;add byte [rax], dl;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add ah, bh;or byte [rax], cl;add byte [rax], al": 4,
                "invalid;or dword [rax], ecx;add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl": 4,
                "add byte [rax], al;add byte [rdi + ], dl;add byte [rax], al;add byte [rdi + rbp], cl;outsd dx, dword [rsi]": 4,
                "outsb dx, byte [rsi];movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;outsd dx, dword [rsi];jb ": 1,
                "imul r15d, dword gs:[rax + ], ;outsd dx, dword [rsi];jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 1,
                "or dword [rax], ecx;add byte [rax], bl;add byte [rax], al;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rsi], ah;or cl, byte [rax];add byte [rax], al": 4,
                "add byte [rax + ], cl;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rcx - ], ch": 4,
                "or cl, byte [rax];add byte [rax], al;add byte [rax], al;add cl, al;or cl, byte [rax]": 4,
                "add al, ;syscall;add byte [rsi], cl;add byte [rcx*2 + ], r8b;jb ": 1,
                "add byte [rsi], cl;add byte [rcx*2 + ], r8b;jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rsi + ], cl;or byte [rax], al;push rcx": 4,
                "add byte [rbx + rcx + 8], dl;add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rdi + rdx*2], al": 4,
                "add byte [rax + rax], dl;add byte [rdi + rdx*2], al;or ecx, dword [rax];add byte [rax], al;add byte [rax], al": 4,
                "imul r12d, dword [rbp + ], ;outsb dx, byte [esi];jb ;insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ]": 1,
                "or al, 8;add byte [rax], al;add byte [rax], al;add byte [rdi + ], cl;add byte [rax], al": 4,
                "adc al, 0;add byte [rdi], al;or eax, 8;add byte [rax], al;in al, dx": 4,
                "add byte [rax], al;in al, dx;or eax, 8;add byte [rax], al;or al, ": 4,
                "invalid;or byte [rax], al;add byte [rax], al;add byte [rax], al;jl ": 4,
                "invalid;or byte [rax], al;adc byte [rax], al;add byte [rax], al;add byte [rax], al": 20,
                "adc byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;invalid": 8,
                "add byte [rax], al;invd;add byte [rax], al;add byte [rax], al;add byte [rbp + ], ah": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add al, dl;add byte [r8d], al": 4,
                "add byte [rax], ah;add byte [rax], al;add byte [rax], al;add byte [rax], al;adc qword [rax], rcx": 4,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rdi + rdx*2], al;adc dword [rax], ecx": 4,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rdi*8 + ], al;add byte [rax], al": 4,
                "movsxd rdx, dword [rcx + rdi*2 + ];imul r15d, dword gs:[rax + ], ;invalid;jb ;insb byte [rdi], dx": 1,
                "adc byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;and al, ": 8,
                "invalid;adc ecx, dword [rax];add byte [rdx], ch;adc ecx, dword [rax];add byte [rbx], al": 4,
                "add byte [rdi + rax], al;add dword [rbx], edx;add byte [rax], al;mov al, ;add byte [r8], al": 4,
                "or byte [rax], al;add eax, dword [rax];add byte [rax], al;adc al, 0;add byte [rsi + rcx*2], al": 4,
                "adc al, 0;add byte [rsi + rcx*2], al;adc al, 8;add byte [rax], al;add byte [rax], al": 4,
                "adc al, 8;add byte [rax], al;add byte [rax], al;add byte [rbx + ], dl;or byte [rax], al": 4,
                "adc eax, ;add byte [rax], al;adc al, 0;add byte [rax + rbp*2], al;adc eax, 8": 4,
                "adc eax, ;or byte [rax], al;stc;adc eax, ;add byte [rax], al": 5,
                "or byte [rax], al;add eax, dword [rax];add byte [rax], al;adc al, 0;add byte [rcx + rcx*4], al": 4,
                "add byte [rdi + rax], al;add dword [rdx], edx;add byte [rax], al;add byte [rax], al;imul ecx, dword [rcx], 0": 5,
                "add dword [rdx], edx;add byte [rax], al;add byte [rax], al;imul ecx, dword [rcx], 0;adc byte [rdi], 8": 5,
                "add byte [rax], dl;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rdx - ], ah": 4,
                "or byte [rax], al;add byte [rax], al;add byte [rax], al;mov al, ;or byte [rax], al": 4,
                "add byte [rdx + ], al;or byte [rax], al;add byte [rax], al;add byte [rax], al;int3": 4,
                "sbb byte [rax], cl;add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rcx + rdx*8], al": 4,
                "add ebp, dword [rbx];add dword [rdi], eax;add byte [rax], al;push rax;push ": 4,
                "add dword [rdi], eax;add byte [rax], al;push rax;push ;add byte [rax], al": 4,
                "add dword [rdx + rax], eax;or dword [rcx], eax;sbb al, byte [rcx];or al, byte [rax];add al, ah": 4,
                "add byte [rax], al;add byte [rdx], dl;sbb cl, byte [rax];add byte [], dl;sbb cl, byte [rax]": 4,
                "add byte [rdi + rax], al;add dword [rbx], edx;add byte [rax], al;add byte [rax], al;add byte [rbx + ], ch": 4,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rdx + rax*2], al;sbb ecx, dword [rax]": 4,
                "sbb ecx, dword [rax];add bh, cl;sbb ecx, dword [rax];add dl, dl;sbb ecx, dword [rax]": 4,
                "add byte [rax], al;sbb eax, ;add byte [rax], al;adc al, 0;add byte [rbx + rax], al": 4,
                "sbb eax, 8;add byte [rax], al;xchg eax, edi;sbb eax, 8;add byte [rax], al": 4,
                "add al, al;imul ecx, dword [rcx], 0;add byte [rax], al;add al, bh;sbb eax, ": 5,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;sbb bl, byte [rsi];or byte [rax], al": 4,
                "adc al, 0;add byte [rdi], al;invalid;or byte [rax], al;add byte [rax], al": 8,
                "adc byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;mov edi, ": 4,
                "add eax, dword [rax];add byte [rax], al;adc al, 0;add byte [rax + rcx*8], al;invalid": 4,
                "add byte [rax], al;add al, bl;invalid;or byte [rax], al;mov byte [rax], al": 4,
                "add al, bl;invalid;or byte [rax], al;mov byte [rax], al;add byte [rax], al": 4,
                "or byte [rax], al;add eax, dword [rax];add byte [rax], al;adc al, 0;add byte [rcx + rdi*4], al": 8,
                "add byte [rax], al;or al, ;outsd dx, dword [rsi];add byte [rax], al;jb ": 1,
                "add byte [rax + rax], dl;add byte [rax + rsi*8], al;and dword [rax], ecx;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rax + ], bl;or byte [rax], al;adc byte [rax], al;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rbp + ], cl;add byte [rax], al;add byte [rax], bl;sub al, ": 4,
                "and al, 8;add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rcx + rdi], al": 4,
                "add byte [rax], al;add byte [rsi + ], ch;add byte [rax], al;add byte [rax], al;add byte [rax + ], ah": 5,
                "and al, 8;add dl, cl;and al, 8;add ch, cl;and al, 8": 4,
                "and al, 8;add byte [rax], al;add byte [rax], al;add cl, bl;and al, 8": 4,
                "add byte [rax], al;add byte [rax + ], al;or byte [rax], al;jo ;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;or dword [rsi], esp;or byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;invalid;or byte es:[rax], al;add byte [rax], al": 4,
                "outsb dx, byte [rsi];add byte [r8], al;add byte [rax], al;add byte [rax + ], bh;or byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;popfq;or byte es:[rax], al": 4,
                "add byte [rax], al;sub ah, byte [rdi];or byte [rax], al;sub eax, ;invalid": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rdi + ], ch;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rsi - ], bh;invalid;or byte [rax], al;invalid;invalid": 4,
                "add byte [rax], al;add byte [rax], dh;sub byte [rax], cl;add byte [rax], dl;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add dh, ch;sub byte [rax], cl;add byte [rax], al": 4,
                "je ;or byte [rax], al;ja ;or byte [rax], al;jp ": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rdi], cl;sub cl, byte [rax];add byte [rax], al": 4,
                "add byte [rsp + rbx*4], al;sub cl, byte [rax];add byte [rax], al;add byte [rax], al;add byte [rcx + ], ah": 4,
                "add byte [rdi + rax], al;add dword [rdx], edx;add byte [rax], al;add al, al;outsd dx, dword [rsi]": 5,
                "add dword [rdx], edx;add byte [rax], al;add al, al;outsd dx, dword [rsi];add byte [r8], al": 5,
                "add byte [rax + ], dh;or byte [rax], al;adc byte [rax], al;add byte [rax], al;add byte [rax], al": 8,
                "add byte [rax], al;add byte [rax], al;sub byte [rsi], ch;or byte [rax], al;sub ebp, dword [rsi]": 4,
                "or byte [rax], al;or byte cs:[rax], al;add eax, dword [rax];add byte [rax], al;adc al, 0": 4,
                "add byte [rax], al;invalid;or byte cs:[rax], al;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rax], al;add dh, bl;invalid;or byte [rax], al;loope ": 4,
                "mov al, ;add byte [r8], al;add byte [rax], al;add byte [rax + ], dl;or byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;jns ;or byte [rax], al": 4,
                "jl ;or byte [rax], al;jg ;or byte [rax], al;add eax, dword [rax]": 4,
                "or byte [rax], al;jg ;or byte [rax], al;add eax, dword [rax];add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add al, ch;xor byte [rax], cl;add byte [rax], bl": 4,
                "add byte [rax], al;add byte [rsi], dl;xor dword [rax], ecx;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rax + rax], dl;add byte [rsi], al;xor dword [rax], ecx;add byte [rax], al;add byte [rax], al": 4,
                "xor dword [rax], ecx;add byte [rax], al;add byte [rax], al;add byte [rcx + ], dh;add byte [rax], al": 4,
                "add dl, ah;xor cl, byte [rax];add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl": 4,
                "add byte [rax], al;add byte [rax], al;jg ;or byte [rax], al;xchg byte [rbx], dh": 4,
                "add byte [rax], al;jg ;or byte [rax], al;xchg byte [rbx], dh;or byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rdi + ], dl;add byte [rax], al;add byte [rbp + rbp*2 + ], bl": 4,
                "add byte [rbx], ch;xor al, 8;add byte [rdx], dh;xor al, 8;add byte [], dh": 4,
                "add byte [rbx + ], al;or byte [rax], al;add byte [rax], al;add byte [rax], al;cld": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add dh, cl;xor al, 8": 4,
                "pop rsi;xor eax, ;or byte [rax], al;xor eax, ;add byte [rax], al": 4,
                "add byte [rax], al;add al, dl;xor eax, ;add byte [rax], al;add byte [rax], al": 4,
                "sbb byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;xchg dword [rsi], esi": 4,
                "add byte [rax], al;xchg eax, ebp;or byte ss:[rax], al;add byte [rax], al;add byte [rax], al": 4,
                "xchg eax, ebp;or byte ss:[rax], al;add byte [rax], al;add byte [rax], al;hlt": 4,
                "add byte [rax], al;add al, bh;or byte ss:[rax], al;adc byte [rax], al;add byte [rax], al": 4,
                "add byte [rax], al;sbb byte [rdi], dh;or byte [rax], al;sbb esi, dword [rdi];or byte [rax], al": 4,
                "or byte [rax], al;sbb esi, dword [rdi];or byte [rax], al;invalid;invalid": 4,
                "add byte [rax], al;add byte [rax], al;cmp bh, byte [rax];or byte [rax], al;cmp byte [r8], cl": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;xor byte [rcx + rcx*2], 0;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax - ], al;cmp dword [rax], ecx;add byte [rsi + ], al;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;invalid;je ;add byte [rax], al": 4,
                "invalid;je ;add byte [rax], al;add byte [rax], al;add al, dh": 4,
                "add byte [rcx - ], ah;cmp cl, byte [rax];add byte [rdi + ], ah;add byte [rax], al;add byte [rax + rax], dl": 4,
                "add byte [rax], dl;cmp ecx, dword [rax];add byte [rax], dl;add byte [rax], al;add byte [rax], al": 4,
                "cmp ecx, dword [rax];add byte [rax], dl;add byte [rax], al;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rsi + rdi], al;cmp ecx, dword [rax]": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add dl, al;cmp ecx, dword [rax]": 4,
                "add byte [rbx], al;add byte [rax], al;add byte [rax + rax], dl;add byte [rbx + rcx*8], al;cmp ecx, dword [rax]": 4,
                "add byte [rax], dh;cmp al, 8;add byte [rax], ah;jb ;insb byte [rdi], dx": 1,
                "add byte [rax], bl;add byte [rax], al;add byte [rax], al;add byte [rax], al;add bl, ah": 4,
                "add byte [rax], al;add byte [rax], al;jo ;or byte [rax], al;jae ": 4,
                "sal byte [rbp + ], 1;add byte [rax], al;add byte [rax], al;add al, ah;cmp eax, ": 4,
                "add byte [rax], al;add bh, byte [rsi];or byte [rax], al;add eax, ;or byte ds:[rax], al": 4,
                "insb byte [rdi], dx;movsxd rsi, dword gs:[rsi + rbp + ];sub ch, byte [rcx + ];je ;jb ": 10,
                "add byte [rax], al;add byte [rax], al;push rbp;or byte [rax], al;add byte [rax], al": 3,
                "push rbp;or byte [rax], al;add byte [rax], al;add byte [rax], al;or al, ": 3,
                "add byte [rax], al;add byte [rax + ], cl;or byte [rax], al;adc byte [rax], al;add byte [rax], al": 1,
                "ret;add dword [rdi + ], ebx;add ah, cl;add ch, ah;add dword [rax], eax": 1,
                "add byte [rax], al;add ah, ch;mov dword [rax], ecx;add dl, bh;mov dword [rax], ecx": 1,
                "add ah, byte [rdi + ];invalid;add eax, ;adc ecx, dword [];invalid": 2,
                "syscall;prefetchw byte [rdx];add byte [rax], al;sub byte [rdx], al;xchg eax, ecx": 2,
                "add dword [rbx], eax;or al, byte [rax + rdx*2];add ecx, dword [rdx];add cl, byte [rdx];add byte [rax], al": 2,
                "push ;outsd dx, dword [rsi];jb ;pop rdi;jne ": 3,
                "add bl, byte [rdx + ];invalid;adc al, byte [rdx];and al, byte [rdx];invalid": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rdx + ], bh;add byte [rax], al;add ah, bl": 3,
                "jae ;jb ;insd dword [rdi], dx;imul esp, dword fs:[rcx + ], ;jb ": 3,
                "add al, ;add cl, byte [rcx + rax];and al, byte [rcx];or al, byte [rax];add byte [rax], ch": 3,
                "add dword [rdx], ecx;add byte [rax], al;add byte [rax], al;movabs al, byte [];mov word [rax], cs": 3,
                "add byte [rax], al;add byte [rdx + rsi*2 + ], bh;add byte [rax], al;add byte [rax], al;add byte [rbx + ], dh": 3,
                "outsd dx, dword fs:[rsi];push rax;imul esi, dword [rsi + ], ;outsb dx, byte [rsi];movsxd rax, dword [rax]": 3,
                "add bl, byte [rsi];add eax, ;add al, byte [rdx];sbb al, byte [rbx + rbx];add al, 2": 3,
                "lar eax, word [rsi];add dword [rbx], eax;add eax, ;add al, ;add al, 2": 3,
                "adc eax, ;or al, byte [rbx];invalid;sbb al, byte [];add dword [rdx + rax], eax": 3,
                "add eax, ;or byte [], al;invalid;add eax, ;invalid": 3,
                "add eax, ;add cl, byte [rcx];add al, byte [];and al, 5;cmp eax, dword []": 3,
                "invalid;add eax, ;add dword [rdi], edx;add dl, byte [rdi];add al, byte [rcx + 2]": 3,
                "add al, byte [rcx + 2];cmp al, byte [rbx];add eax, dword [rcx + ];or ecx, dword [rdx];add byte [rax], al": 3,
                "xor al, 1;test dword [rdi], eax;add dword [rdx], ecx;add byte [rax], al;sub eax, dword [rdx]": 3,
                "add dword [rdx], ecx;add byte [rax], al;sub eax, dword [rdx];xor dword [rdx], eax;or byte [rcx], al": 3,
                "or byte [rdi], al;cmp byte [rdx], cl;or byte [rcx], cl;add al, 2;or byte [rcx], al": 2,
                "lea ecx, [rax];add byte [rsi], al;mov cs, word [rax];add byte [rbx], cl;mov cs, word [rax]": 2,
                "movsxd rax, dword [rax];add byte [rdx], al;invalid;movabs al, byte [];cwde": 3,
                "or ebx, dword [rdx];add cl, byte [rsi];or bl, byte [rax];add dword [], ecx;add dword [], eax": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rdx], dl;invalid;or byte [rax], al": 2,
                "add byte [rax], al;add byte [rax], al;sbb al, ;add byte [rax], al;jae ": 1,
                "add bl, byte [rax + 1];or al, byte [rax];add byte [rsi + rax], ah;or byte [rdx], al;or dword [rdx], eax": 2,
                "add byte [rax], al;sbb al, ;add byte [rax], al;add byte [rax], al;add byte [rbx + ], dh": 5,
                "add byte [rax - ], ah;add byte [r8], al;add byte [rax], al;add byte [rax], dh;or byte [rax], al": 2,
                "add byte [rax + rbx*2], al;or byte [rax], al;add byte [rax], al;add byte [rax], al;pop rbp": 2,
                "or byte [rax], al;add byte [rax], al;add byte [rax], al;pop rbp;or byte [rax], al": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rsp + rdx*2 + ], bl;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;xor eax, ;add dl, byte [rbx];add ah, byte [rax];add dword [rcx], ecx": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rcx + rdx*4 - ], ah;or byte [rax], al": 1,
                "outsb dx, byte [rsi];movsxd rsi, dword gs:[rbp + rax*2 + ];jne ;movsxd rsi, dword [rcx];add byte [rax], al": 5,
                "invalid;add eax, ;invalid;add dword [rax], esi;add al, byte [rdi]": 1,
                "add al, ;add edx, dword [rcx];add cl, byte [rdx];add byte [rax], al;xor byte [rbp + ], dh": 1,
                "add byte [rbx], al;or dword [rax], eax;invalid;and ecx, dword [rcx];add byte [rbx], al": 1,
                "invalid;insb byte [rdi], dx;insb byte [rdi], dx;imul ebp, dword cs:[rsi + ], ;insb byte [rdi], dx": 1,
                "add al, ;add bh, byte [rsi];add bh, byte [rsi];add bh, byte [rsi];add bh, byte [rsi]": 4,
                "insb byte [rdi], dx;invalid;ja ;outsb dx, byte [rsi];outsd dx, dword fs:[rsi]": 2,
                "invalid;ja ;outsb dx, byte [rsi];outsd dx, dword fs:[rsi];ja ": 2,
                "invalid;add dword [rax], esi;add al, 7;add ecx, dword [];add al, 5": 1,
                "add al, byte [];add eax, ;invalid;add al, ;add ebx, dword [rdx]": 1,
                "add eax, ;invalid;add al, ;add ebx, dword [rdx];add al, ": 1,
                "push rax;lahf;adc byte [rdi + 1], cl;push rax;invalid": 1,
                "push rax;invalid;add al, ;or al, byte [rax];cld": 1,
                "invalid;add al, ;or al, byte [rax];cld;add ah, dl": 1,
                "add al, ;or al, byte [rax];cld;add ah, dl;adc al, 0": 1,
                "add bh, byte [rsi];add bh, byte [rdx];add dl, byte [rdx + 1];invalid;add dword [rcx], edx": 1,
                "sub al, byte [rbx];imul ebp, dword [rsi + ], ;insb byte [rdi], dx;invalid;jo ": 1,
                "add bl, byte [rdx];movabs al, byte [];xchg eax, esi;add dword [rax], eax;out dx, al": 2,
                "add byte [rax], al;add al, ch;test byte [rdx], cl;add byte [rax], bl;add byte [rax], al": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rsi - ], cl;or al, byte [rax];add byte [rax], al": 2,
                "add byte [rax], al;add byte [rsi - ], cl;or al, byte [rax];add byte [rax], al;add byte [rax], al": 2,
                "add byte [rax + rsi*2 + ], bl;add byte [rax], al;add byte [rax], al;add byte [rcx + ], ch;imul ebp, dword [rsi + ], ": 2,
                "jb ;insd dword [rdi], dx;jne ;movsxd rsi, dword [rcx];add byte [rax], al": 5,
                "test dword [rdx], ecx;add byte [rdx], al;xchg byte [rdx], cl;add byte [rdi], al;xchg byte [rdx], cl": 3,
                "rol byte [rcx], ;add dword [rdi - ], edi;add ebp, dword [rsi + ];sub byte [rdx], al;jl ": 7,
                "add dword [rdi], ecx;add dword [rdx], ecx;add byte [rax - ], ah;add byte [rax], r8b;add byte [rax], al": 3,
                "add byte [rax], r8b;add byte [rax], al;add byte [rax], cl;mov byte [rdx], cl;add byte [rax], bl": 3,
                "add byte [rax], al;add al, ;mov byte [rdx], cl;add byte [rax], al;add byte [rax], al": 6,
                "outsd dx, dword [rsi];jne ;movsxd rsi, dword [rdx];add byte [rax], al;add bl, byte [rsi]": 4,
                "add al, ;add dl, byte [rax + ];imul ebp, dword [rsi + ], ;insb byte [rdi], dx;invalid": 1,
                "add ah, bl;invalid;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al": 3,
                "movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rsi];movabs al, byte [];movsb byte [rdi], byte ptr [rsi]": 4,
                "or eax, ;or al, byte [rax];add byte [rax], ch;add al, ;add dl, byte [rax + ]": 3,
                "add al, ;add dl, byte [rax + ];add al, 5;add al, byte [rdx + rax];invalid": 3,
                "add byte [rax - ], bh;or al, byte [rax];sbb byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "invalid;add ecx, dword [rdx];add byte [rax], al;sub byte [rsi], al;add eax, ": 3,
                "sub byte [rsi], al;add eax, ;add cl, byte [rbx];add al, byte [rdx + rax];invalid": 3,
                "add cl, byte [rbx];add al, byte [rdx + rax];invalid;add dl, byte [rdi];add al, byte [rcx + rax]": 3,
                "add byte [rdx + ], al;add byte [rax], al;add byte [rsp + rsi + ], bh;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;movabs al, byte [];mov ecx, dword [rdx]": 3,
                "add dl, ah;mov ecx, dword [rdx];add byte [rbx], al;add byte [rax], al;add byte [rax], al": 3,
                "invalid;adc al, 6;invalid;add dword [rdi], edx;add al, ": 2,
                "add byte [rax], al;invalid;movabs eax, dword [];or al, byte [rax];add byte [rax], al": 2,
                "movabs eax, dword [];or al, byte [rax];add byte [rax], al;add byte [rax], al;add byte [rax], al": 2,
                "add byte [rax], al;cmp al, ;or al, byte [rax];lea r9d, [r10];add byte [rbx - ], cl": 2,
                "sbb al, ;add byte [rax], al;add byte [rax], al;add byte [rcx + ], ch;imul ebp, dword [rsi + ], ": 2,
                "add byte [rax], al;add byte [rax], al;add al, ;lea ecx, [rdx];add byte [rax], al": 1,
                "sub byte [rdx], ch;imul r13d, dword [rbp + r12*2 + ], ;imul esi, dword fs:[rdx], ;add dword [rdx + ], esp;add dword [rax + ], eax": 1,
                "add al, 5;add al, byte [];or bl, byte [];add byte [rax], al;mov al, ": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;in al, ;add byte [rax], al": 1,
                "invalid;invalid;add dl, byte [rbp + 1];sbb eax, dword [rax];add byte [rax], ch": 1,
                "invalid;cmp al, 2;or al, byte [rax];add byte [rax], al;loopne ": 1,
                "push rsp;or eax, dword [rax];pop rbp;push rsp;or eax, dword [rax]": 1,
                "or eax, dword [rsi + rax*2];add dword [rdx], ecx;add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "je ;add byte [rdx], al;sbb dl, byte [rax + ];or r8, qword [r8];invalid": 1,
                "je ;imul di, word cs:[rax + ], ;jne ;insw word [rdi], dx;invalid": 1,
                "test byte [rax + ], 0;add byte [rax], al;add byte [rax], al;add al, ;or byte [rbx], 0": 1,
                "or eax, dword [rcx + ];add byte [rax], al;add byte [rdi + rbp*2], bl;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add al, cl;sub eax, ;add byte [rax], al;movsxd rbp, dword [rdi + ]": 2,
                "pushfq;or dword [rbx], ;add byte [rax + rax], dl;add byte [rax], al;or dword [rbx], 0": 1,
                "add dword [rdx], ecx;add byte [rax], al;and al, byte [rdx];or al, 3;or eax, dword [rbx + rcx*2]": 5,
                "or eax, dword [rax];cmp eax, ;add byte [rax], al;add byte [rax + rax], dl;add byte [rax + rax*2], al": 1,
                "invalid;or eax, dword [rax];rol dword [rdx - ], cl;or eax, dword [rax];add eax, dword [rax]": 1,
                "imul esp, dword cs:[rbp + ], ;je ;jne ;movsxd rsi, dword [rcx];add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rdx - ], ah;xchg eax, edx": 1,
                "add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [rsi*4 + ], al;add byte [rax], al": 1,
                "invalid;invalid;invalid;add al, cl;add esp, dword [rax + rax - ]": 1,
                "adc al, 0;add byte [rdx + rcx*2], al;xchg eax, ebx;or eax, dword [rax];add byte [rax], al": 1,
                "or al, 3;or eax, dword [rbp - ];add byte ds:[rax], r8b;add byte [rax], al;add byte [rax + ], dl": 1,
                "cmpsb byte [rsi], byte ptr [rdi];xchg eax, ebx;or eax, dword [rax];stosb byte [rdi], al;xchg eax, ebx": 1,
                "add eax, ;add al, byte [rsi];add al, byte [rsi];invalid;add eax, ": 1,
                "add al, byte [rsi];add al, byte [rsi];invalid;add eax, ;add al, byte [rsi]": 1,
                "invalid;add eax, ;add al, byte [rsi];add al, 6;add al, byte [rsi]": 1,
                "add al, byte [rdx + rax];add al, 4;add al, 2;invalid;add al, byte [rsi]": 2,
                "add al, byte [rsi];add al, byte [rsp + rax];or byte [rsp + rax], al;add al, byte [rdx + rax];invalid": 1,
                "invalid;add al, byte [rsp + rax];invalid;add al, byte [rsp + rax];add dword [rax], eax": 1,
                "je ;je ;jne ;movsxd rbp, dword [rsi];jne ": 6,
                "invalid;add eax, ;cmp ecx, dword [rdi];add byte [rax], al;add byte [rax], al": 1,
                "add byte [rsi], bl;and al, ;add byte [rcx], ah;and al, ;add byte [], ah": 1,
                "add byte [rax], al;add al, ;and al, ;add byte [rdx], dh;and al, ": 1,
                "add ch, byte [];adc eax, dword [rcx];or al, byte [rax];invalid;sbb al, byte [rbx]": 2,
                "je ;jne ;movsxd rbp, dword [rsi];jne ;movsxd rsi, dword [rbx]": 3,
                "add byte [rax], al;add byte [rax], al;add al, al;and eax, ;add byte [rax], al": 3,
                "sbb dl, byte [rax + ];add qword [r8 + ], r10;or r8b, byte [r8];invalid;popfq": 1,
                "invalid;or al, 0;add eax, dword [rax];add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;add byte [str.opt_go_src_os_types_windows.go], al;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add ah, byte [rsi];loopne ;wait;add al, ": 1,
                "add cl, byte [rdx];add byte [rsp + rax - ], cl;add ah, byte [rcx + 2];or al, 2;or al, 2": 1,
                "or al, 2;adc al, 1;add eax, ;add al, ;add ch, byte [rdx]": 1,
                "add al, ;add ch, byte [rdx];add al, byte [];sbb byte [rax], ch;add al, ": 1,
                "add al, byte [rsi];and dword [], eax;and al, byte [];add al, byte [rsi];add al, byte [rsi]": 1,
                "or eax, dword [];sbb dword [rdi + 5], eax;or byte [rax + ], dl;or eax, ;add eax, ": 1,
                "add byte [rsi], dh;add al, ;add dword [rdx], eax;sub eax, ;jo ": 1,
                "add byte [rbx + ], cl;or byte [rdx], al;add al, 1;invalid;add cl, byte [rbx]": 1,
                "add dword [rdx + rax - ], edi;add dword [rcx], eax;add eax, ;add dl, byte [rsi + 1];adc al, byte [rdx]": 1,
                "add dword [rdi], ecx;add al, ;add ecx, dword [rax];add al, 4;add ecx, dword [rsi]": 1,
                "add esi, dword [rdi];invalid;add eax, ;add eax, ;add eax, ": 1,
                "invalid;add eax, ;add eax, ;add eax, ;or byte [rcx], al": 1,
                "invalid;xchg eax, esp;add dword [rax], ecx;invalid;add dword [rsi], ecx": 1,
                "add dword [rsi], ecx;add dword [rsi], ecx;add dword [rsi], ecx;add dword [rdi], ebp;add byte [rax], al": 1,
                "add dword [rsi], ecx;add dword [rsi], ecx;add dword [rdi], ebp;add byte [rax], al;add ch, byte ss:[rbx]": 1,
                "sbb dword [rax], ebx;invalid;add cl, byte [];add cl, byte [];add eax, ": 1,
                "add eax, ;sbb al, 2;invalid;invalid;and eax, ": 1,
                "movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rdx];adc byte [rdx], bl;lgdt [rax]": 1,
                "add bl, byte [rdx];adc byte [rdx], bl;lgdt [rax];invalid;invalid": 1,
                "add al, ;add eax, ;or dword [rdi], eax;adc byte [rdx], cl;or dword [rcx], ecx": 1,
                "add eax, ;or dword [rdi], eax;adc byte [rdx], cl;or dword [rcx], ecx;invalid": 1,
                "invalid;add edx, ebp;add ch, bh;add ecx, dword [rdx];add byte [rsp + rax - ], cl": 2,
                "hlt;add bl, byte [rax];or dl, byte [rdi];add cl, byte [rcx];cmp al, 2": 2,
                "cmp al, 2;add dword [rdx + r8], eax;add al, 4;fiadd word [rcx];add bh, byte [rax + 2]": 2,
                "add esp, dword [];mov edx, ;add eax, ;invalid;add eax, ": 2,
                "add al, byte [rbx];add dword [rcx + ], ecx;or byte [rdx], al;invalid;pop rcx": 2,
                "or byte [rdx], al;invalid;pop rcx;sbb byte [rsi], dh;or dword [rax], ebp": 2,
                "or byte [], dl;add dl, byte [rax + 2];add eax, ;loope ;adc dword [rdx], eax": 2,
                "add dl, byte [rax + 2];add eax, ;loope ;adc dword [rdx], eax;invalid": 2,
                "add al, byte [rbx];adc eax, dword [];or eax, ;invalid;hlt": 2,
                "hlt;add eax, dword [];add bl, byte [rsi];invalid;invalid": 2,
                "add bl, byte [rsi];invalid;invalid;cmpsd dword [rsi], dword ptr [rdi];add al, 1": 2,
                "add bl, byte [];out 4, eax;add dword [], ecx;invalid;fiadd word [rsp + rdi*4]": 2,
                "invalid;add al, 7;add dword [rdi], eax;sbb dword [rdi], eax;fadd dword [rdi + rax]": 1,
                "sbb dword [rdi], eax;lock add eax, dword [rdi];add eax, dword [rdi];add eax, ;invalid": 1,
                "add byte [rax], al;add al, ;jl ;add byte [rax], al;add byte [rax], al": 1,
                "or eax, 0;add byte [rdx + rcx*2 + ], cl;add byte [rax], al;add byte [rax], al;add byte [rdx + rdx*2 + ], bh": 1,
                "imul r14, qword [rbp + ], ;jb ;outsb dx, byte [rsi];jne ;movsxd rsi, dword [rcx]": 2,
                "add cl, byte [rdi];add al, byte [rbx];add eax, dword [rbx + rax];invalid;or al, byte []": 2,
                "add eax, ;add byte [rax], al;add byte [rax], al;add byte [rax], al;ret ": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;ret ;add byte [rax], al": 2,
                "add byte [rdx + ], dh;jb ;js ;sub byte cs:[rdx], ch;push rdx": 10,
                "or byte [], dl;sub byte [rax], bl;or byte [rdx], al;or byte [rdx], al;adc byte [rbx], bl": 3,
                "add byte [rax], al;add byte [rax], al;cli;jle ;add byte [rdx], cl": 2,
                "add dword [rcx], eax;rol byte [rcx], 1;push rcx;iretd;add dword [rdx], ecx": 3,
                "add byte [], al;add byte [rax], al;add byte [rdi + rsi*2 + ], cl;add byte [rax], al;add byte [rax], al": 2,
                "movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rsi];rol byte [rcx], 1;add dword [rdx], ": 3,
                "add byte [rax], al;add bl, byte [rsi];rol byte [rcx], 1;add dword [rdx], ;add dword [rdi - ], ebx": 3,
                "xor al, byte [rdx];adc al, ;add eax, dword [rcx];adc eax, ;add al, byte [rbx]": 3,
                "js ;sub dword [rsi], ebp;imul r13d, dword [rsi + ], ;jne ;movsxd rsi, dword [rcx]": 3,
                "int1;add edi, ebx;add dword [rdx], ecx;add byte [rsi + ], cl;invalid": 3,
                "add byte [rsi + ], cl;invalid;adc byte [rcx], dh;add cl, byte [rdx];invalid": 3,
                "invalid;adc byte [rcx], dh;add cl, byte [rdx];invalid;pushfq": 3,
                "invalid;pushfq;add dword [rdx], eax;or al, byte [rcx];xchg dword [rcx], eax": 3,
                "or al, 4;invalid;invalid;or al, byte [rax];add byte [rax], ch": 3,
                "invalid;invalid;add al, ;add dword [rdx], ecx;add byte [rax], al": 5,
                "add al, ;add dword [rdx], ecx;add byte [rax], al;add byte [rax + ], dl;add byte [rax], al": 3,
                "or dword [], ;add byte [rbx], al;add byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add al, 0;jb ": 1,
                "add byte [rax], ch;add al, byte [rdx + rax];xor al, byte [rcx];invalid;add ebp, dword [rax]": 6,
                "invalid;cmp al, 5;or al, 6;or byte [], al;or al, byte [rax]": 6,
                "push rcx;add byte [rax], al;add byte [rax], al;add byte [rax + ], dh;add byte [rax], al": 2,
                "invalid;or eax, ;add byte [rax], al;add byte [rax], al;add al, 5": 2,
                "add bl, byte [rsi];loopne ;mov edx, ;loopne ;int1": 3,
                "or dword [rdx], ecx;add eax, ;jb ;js ;sub byte cs:[rdx], ch": 1,
                "add eax, ;adc byte [rax], cl;or dword [rdx], ecx;add eax, ;or al, byte [rax]": 2,
                "adc byte [rax], cl;or dword [rdx], ecx;add eax, ;or al, byte [rax];add byte [rax], ch": 2,
                "add al, 4;add ch, byte [rax];add dl, byte [rdx];add dword [rbx], esp;add bl, byte [rbx]": 2,
                "invalid;add eax, ;invalid;invalid;add al, ": 2,
                "loopne ;push rcx;add byte [rax], al;add byte [rax], al;add al, dl": 2,
                "or dword [], 0;adc byte [rbp + rcx + ], al;add byte [rax], al;add byte [rax], al;add al, ": 2,
                "add byte [rax], al;add al, ;test dword [], ecx;add byte [rdx - ], ah;or eax, 0": 2,
                "add al, ;test dword [], ecx;add byte [rdx - ], ah;or eax, 0;add byte [rdi + rcx*4], ch": 2,
                "add byte [rax], al;add bl, byte [rsi];rol byte [rcx], 1;fld qword [rdx];iretd": 3,
                "fild word [rcx];iretd;add dword [rdx], ecx;add byte [rsi + ], cl;xchg eax, edx": 3,
                "add byte [rsi + ], cl;xchg eax, edx;adc dword [rsi], esi;add cl, byte [rdx];invalid": 3,
                "adc eax, ;sub byte [rax + ], al;add al, 7;add esp, dword [rax];add al, 5": 3,
                "add al, byte [];add cl, byte [rsi];add al, byte [rbx];adc dword [], esp;add dl, byte [rdx]": 2,
                "add al, 0;out , al;add cl, byte [r10];invalid;invalid": 3,
                "add edx, dword [rdx];or eax, ;sbb ecx, dword [rsi];adc eax, ;sub byte [rcx + rcx], al": 2,
                "add byte [rax - ], dl;or eax, 0;add byte [rax], al;add byte [rax], al;add byte [rbp - ], bl": 2,
                "add al, ah;mov dword [], ecx;add byte [rax], al;add byte [rax], al;add byte [rdi], al": 2,
                "add byte [rax], al;add byte [rax], bl;jb ;js ;sub byte cs:[rdx], ch": 1,
                "invalid;jae ;outsb dx, byte [rsi];jae ;sub dword [rsi], ebp": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax + ], dh;add byte [rax], al;add byte [rax - ], bh": 1,
                "invalid;invalid;invalid;jne ;movsxd rsi, dword [rcx]": 1,
                "or al, byte [rbx];invalid;add byte [rax], al;and al, 2;and eax, ": 3,
                "or eax, ;add byte [rax], al;add byte [rax], al;add byte [rbp - ], cl;mov dh, ": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rbp - ], cl;mov dh, ;add byte [rax + ], bl": 1,
                "add byte [rax], al;add byte [rbp - ], cl;mov dh, ;add byte [rax + ], bl;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rbx + ], ch;add byte [rax], al;add byte [rax], bl;sub al, ": 1,
                "add dword [rdi], eax;add byte [rax], al;add byte [rax], al;add byte [rax], al;add al, ah": 2,
                "add byte [rax], al;add byte [rbp - ], ch;or eax, 0;add byte [rax], al;sbb al, ": 2,
                "imul edi, dword [rdx + ], ;add bl, byte [rsi];outsd dx, dword [rsi];invalid;add dword [rax + ], eax": 2,
                "add al, byte [];add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax + ], ah": 2,
                "add cl, byte [rbx + rax];or eax, dword [rax + rdx*2];add dword [rdx], ecx;add byte [rax], al;and al, byte [rdx]": 1,
                "add byte [rax + ], al;push rdx;add byte [rax], al;add byte [rax], al;add byte [rax + ], cl": 1,
                "mov eax, ;add byte [rax], al;sar dword [rax + ], cl;add byte [rax], al;sbb byte [rdi + rbp*2], ch": 1,
                "add byte [rax + ], dh;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al": 2,
                "or eax, dword [rax];invalid;add al, ;add dword [rax], eax;in al, 5": 2,
                "add byte [rax], al;and al, 6;add al, 1;add eax, ;or byte [], al": 2,
                "add dword [rcx + rax], esp;or al, 1;or al, byte [rax];add byte [rax + ], ah;add byte [rax], al": 2,
                "add byte [rax], al;add byte [rax], al;invalid;or dword [rsi], 0;or dword [rsi], 0": 2,
                "jo ;outsb dx, byte [rsi];movsxd rbp, dword [rdi + ];jb ;outsb dx, byte gs:[rsi]": 3,
                "add dword [rax + 7], esp;pop rdi;or al, byte [rax];invalid;add al, ": 3,
                "add dword [rax], eax;out dx, al;or bl, byte [rdx + ];add ch, byte [rcx + rax + ];add byte [rax], al": 3,
                "out dx, al;or bl, byte [rdx + ];add ch, byte [rcx + rax + ];add byte [rax], al;and al, 4": 3,
                "add byte [rax], al;add byte [rax], al;add al, ;test byte [rsi], cl;add byte [rax], al": 3,
                "add dword [rcx], eax;rol byte [rcx], ;mov edi, ;invalid;mov edi, ": 3,
                "invalid;adc ch, byte [rdx + rax];or ecx, dword [rax];add r15b, byte [rdi];or dword [rdx], ecx": 3,
                "test dword [rsi], ecx;add byte [rax], al;add byte [rax], al;add byte [rdi], ah;test dword [rsi], ecx": 3,
                "movsxd rbp, dword [rdi + ];imul ebp, dword [rsi + ], ;outsb dx, byte [rsi];imul ebp, dword cs:[rsi + ], ;insb byte [rdi], dx": 2,
                "insb byte [rdi], dx;imul edi, dword [rdx + ], ;add bl, byte [rsi];push rax;mov eax, ": 2,
                "mov eax, ;push rax;imul ecx, dword [rdi + ], ;add dword [rax], eax;add al, byte [rbx]": 2,
                "push rax;imul ecx, dword [rdi + ], ;add dword [rax], eax;add al, byte [rbx];invalid": 2,
                "invalid;add byte [rcx + rcx + ], dh;mov dword [rdi], eax;push rdx;add dl, byte [rdx - ]": 2,
                "sub byte [rdx], al;add edx, dword ds:[rsp + rax];sub eax, ;add edx, dword [rsp + rax];add edx, dword ds:[rsp + rax]": 2,
                "popfq;add dword [rax], eax;add al, ;add dword [rax], eax;add byte [rdx], ah": 1,
                "add al, ;add dword [rax], eax;add byte [rdx], ah;add cl, byte [rbx + rax];or eax, dword [rdx + rbx*2]": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax - ], ah;invalid;add byte [rax], ah": 1,
                "add al, ;invalid;invalid;add byte [rax], al;or al, 2": 1,
                "add byte [rax + rax], dl;add byte [rcx + rcx*2], al;ret;invalid;add byte [rax], al": 1,
                "invalid;jo ;xor ah, byte [rbp + ];xor dword [rsi], ebp;imul ebp, dword [rsi + ], ": 1,
                "add byte [rax], ah;test dword [rbp], esi;add byte [rax], al;add byte [rax], al;imul esi, dword [eax + ebp*2 + ], ": 1,
                "outsd dx, dword [rsi];je ;outsd dx, dword [rsi];invalid;imul bp, word [rbp + ], ": 2,
                "jae ;je ;outsd dx, dword [rsi];outsb dx, byte [rsi];sub dword [rsi], ebp": 2,
                "je ;imul ebp, dword [rsi + ], ;imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx;invalid": 1,
                "add ecx, dword [rdx];add byte [rax], al;sub byte [rdx], al;and al, 2;sbb al, 2": 1,
                "add ch, byte [rax];add dh, byte [rbx];add ch, byte [];invalid;add eax, ": 1,
                "add ch, byte [];invalid;add eax, ;cmp byte [rdx], al;add eax, ": 1,
                "add byte [rax], ch;add al, ;add bl, byte [rax];add dword [rdx], ecx;add dword [], ecx": 1,
                "push ;jne ;movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rdx]": 1,
                "invalid;add cl, byte [rdx];add byte [rax], al;and al, byte [rdx];add eax, dword [rdx]": 1,
                "call qword [rbx];add byte [rax], al;add byte [rax], al;loopne ;str word [rax]": 1,
                "adc byte [], ch;sysret;add byte [rdx - ], dh;add dword [rdx], esp;add al, 3": 2,
                "or dword [], eax;add byte [rdx], ah;add al, byte [rbx];add cl, byte [rcx];add eax, ": 2,
                "jae ;imul ebp, dword cs:[rsi + ], ;sbb dl, byte [rax];sbb al, ;add dword [rax], edx": 2,
                "or al, 3;or eax, dword [rbp + ];and al, byte [rdx];or al, 3;or eax, dword [rbp + ]": 2,
                "add byte [rdx + ], al;add byte [rax], al;add byte [rax], bl;sub al, ;add byte [rax], al": 2,
                "pop rbx;xor al, ;imul ebp, dword [rsi + ], ;movsxd rsp, dword [rbp + ];jnp ": 3,
                "ltr word [r8];add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rdx], al": 1,
                "imul ebp, dword [rsi + ], ;movsxd rsp, dword [rbp + ];jnp ;add byte [rax], al;add bl, byte [rsi]": 1,
                "movsxd rsp, dword [rbp + ];jnp ;add byte [rax], al;add bl, byte [rsi];invalid": 1,
                "add byte [rax], al;add byte [rax], al;add ah, dl;ltr si;lldt word [rcx]": 1,
                "add byte [rax], al;add byte [rax + rax], dl;add byte [rbx + rdi], al;sldt word [r13 + ];verw word [rax + ]": 1,
                "add byte [rax], al;add byte [rax], al;mov al, ;push rsp;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;xor eax, ;add byte [rax], al;call ": 1,
                "add byte [rax], al;add byte [rax], al;add eax, ;add byte [rax], al;add byte [rax], al": 9,
                "add eax, ;add byte [rax], al;add byte [rax], al;invalid;jge ": 1,
                "shr byte [rdi], 0;add byte [rax], al;add byte [rax], ah;cmp byte [rax], dh;add byte [rax], al": 1,
                "add byte [rsi + ], 0;add byte [rdi + ], ah;imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx;invalid": 1,
                "add eax, ;or eax, ;add al, byte [];add byte [rax], al;add byte [rax], al": 1,
                "or eax, ;add al, byte [];add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "or byte [rcx + ], dl;imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx;invalid;jb ": 1,
                "invalid;insb byte [rdi], dx;insb byte [rdi], dx;jne ;movsxd rsi, dword [rcx]": 7,
                "adc byte [rax], al;mov bl, ;adc byte [rax], al;mov bh, ;adc byte [rax], al": 1,
                "adc byte [rax], al;add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [rdi*4 + ], al": 1,
                "add al, al;adc byte [rax], al;add byte [rax], al;add byte [rax], al;shr byte [rbx], 1": 1,
                "add dl, byte [rdx];add dl, al;add al, ;add byte [rsi + ], bl;add byte [rdx + rdx], al": 2,
                "imul eax, dword [rbx + ], ;add byte [rbx + rax*2 + ], al;add byte [rax], al;add byte [rax], al;add byte [rsp + rbx*4], al": 2,
                "add al, bh;invalid;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al": 8,
                "and al, byte [rcx + rbx];add eax, ;add byte [rbx], dh;add al, byte [rcx + rax];add dword [rdx], eax": 3,
                "add byte [rbx], dh;add al, byte [rcx + rax];add dword [rdx], eax;adc byte [rcx], al;or eax, ": 3,
                "jnp ;imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx;invalid;jb ": 1,
                "adc byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;adc byte es:[r8], r8b": 3,
                "adc byte es:[r8], r8b;sub dword [rbp + ], eax;add byte [], ch;add byte [rax], al;add byte [rax], al": 3,
                "adc byte [r8], r8b;add byte [rax], al;add byte [rax], al;adc byte ss:[r8], r8b;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;adc byte ss:[r8], r8b;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rax], al;in al, ;adc byte [rax], al;out , eax;adc byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;mov eax, dword [rsi + ]": 3,
                "adc byte [rax], r8b;add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [], al": 3,
                "or al, byte [rax];add byte [rax], ch;add dl, byte [];invalid;invalid": 2,
                "jb ;jb ;imul ebp, dword [rsi + ], ;invalid;adc byte [rbx], bl": 1,
                "lgdt [rax];outsd dx, dword [rsi];ud2;add byte [rsi], cl;mov ah, 1": 1,
                "add dword [rdx], ecx;add byte [rax], al;add cl, byte es:[rbx];add ecx, dword [rbx];add al, ": 1,
                "add dword [rdx], ecx;add byte [rax], al;add byte [rax], al;add byte [rax], al;ror byte [rbp + ], 0": 1,
                "add al, ;adc byte [rax], al;invalid;adc byte [rax], al;sbb ecx, dword [rax + ]": 1,
                "add byte [rax], dl;jae ;add byte [rax], al;add byte [rax], al;add al, ah": 1,
                "pushfq;adc dword [rax], eax;sub byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], ch;add cl, byte [rax];add dl, byte [rsi];add cl, byte [rcx];add dl, byte [rdx]": 2,
                "add ah, byte [rcx];add cl, byte [rdx];add bl, byte [rcx];adc dword [rdx], ecx;add byte [rax], al": 2,
                "cli;popfq;adc dword [rax], eax;lcall [rbp + ];add byte [rax], al": 2,
                "adc dword [rax], eax;lcall [rbp + ];add byte [rax], al;add byte [rax], al;add byte [rcx + rcx], al": 2,
                "adc dword [rax], eax;add byte [rax], al;add byte [rax], al;invalid;xor al, ": 8,
                "or al, ;add bl, byte [rsi + 2];or al, byte [rbx];or al, byte [rax];add byte [rax], ch": 3,
                "invalid;add al, 2;add al, 2;or byte [rdx], al;add al, 2": 3,
                "and al, 2;adc byte [rdx], al;sub byte [rdx], al;sub eax, ;and al, 6": 3,
                "add al, byte [];add byte [rax], al;add byte [rax + ], ah;push rdi;add byte [rax], al": 3,
                "add byte [rax], al;mov byte [rdi - ], bl;adc dword [rax], eax;xchg eax, ebx;lahf": 3,
                "add byte [rsi + ], dh;add cl, byte [rdx];add eax, ;add ch, byte [rax];add bl, byte [rcx]": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rbp + rdx*2 + ], bl;add byte [rax], al": 3,
                "invalid;add al, 2;add al, 1;add eax, ;add dword [], eax": 7,
                "add byte [rax], al;add al, bl;movabs al, byte [];add byte [rax], al;invalid": 3,
                "movabs al, byte [];add byte [rax], al;invalid;movabs eax, dword [];adc dword [rax], eax": 3,
                "movabs al, byte [];movabs eax, dword [];add byte [rax], al;mov dh, ;adc dword [rax], eax": 4,
                "add byte [rax], al;add byte [rdi + rdx*4 + ], bl;add byte [rax], al;add byte [rax], al;add byte [rbp + ], ah": 3,
                "or eax, dword [rdx];xor dword [rbx], eax;invalid;add byte [rax], al;and al, 6": 4,
                "add byte [rax - ], cl;adc dword [rax], eax;sub byte [rax], al;add byte [rax], al;add byte [rax], al": 4,
                "add byte [rax], al;and al, 6;add al, 2;add al, 2;add eax, ": 4,
                "add byte [rax], al;xor byte [rdi + ], 0;add byte [rax], al;add byte [rax], al;or byte [rbx + ], ah": 4,
                "add byte [rax], al;movabs dword ss:[], eax;adc dword [rax], eax;add eax, dword [rax];add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rbx + rcx*2], al;movabs dword [], eax;adc dword [rax], eax": 4,
                "fiadd dword [rdi + rdx*2];add byte [rdx + ], ch;add cl, byte [rdx];add eax, dword [rdi];add byte [rax], al": 4,
                "add cl, byte [rdx];add eax, dword [rdi];add byte [rax], al;and al, 2;add al, 2": 7,
                "sub byte [rbx], al;invalid;add byte [rax], al;and al, 6;add al, 2": 4,
                "add byte [rax], al;and al, 6;add al, 2;add eax, ;add dword [], eax": 4,
                "fiadd dword [rdx + rdx*2];add byte [rsi + ], bh;add cl, byte [rdx];add eax, ;add al, byte [rdx + rax]": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;cmpsb byte [rsi], byte ptr [rdi];movsb byte [rdi], byte ptr [rsi]": 3,
                "add byte [rax], al;cmpsb byte [rsi], byte ptr [rdi];movsb byte [rdi], byte ptr [rsi];adc dword [rax], eax;lodsd eax, dword [rsi]": 3,
                "adc dword [rax], eax;lodsd eax, dword [rsi];movsb byte [rdi], byte ptr [rsi];adc dword [rax], eax;mov cl, ": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rbx + rdi*4], al;movsb byte [rdi], byte ptr [rsi];adc dword [rax], eax": 3,
                "adc dword [rax], eax;add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [rdi + rcx*4], al": 3,
                "movsd dword [rdi], dword ptr [rsi];adc dword [rax], eax;cmpsb byte [rsi], byte ptr [rdi];movsd dword [rdi], dword ptr [rsi];adc dword [rax], eax": 3,
                "movsxd rbp, dword gs:[rdi + ];jb ;outsd dx, dword cs:[esi];invalid;movsxd rbp, dword gs:[rdi + ]": 4,
                "add al, byte [rcx];invalid;invalid;or al, byte [];add byte [rax], ch": 3,
                "add dword [], eax;add ecx, dword [rcx];invalid;and eax, dword [rbx];invalid": 3,
                "invalid;and eax, dword [rbx];invalid;add dword [], esp;cmp al, byte [rdx]": 3,
                "add eax, ;add eax, ;or al, byte [rdi];invalid;invalid": 3,
                "add byte [rax], al;add byte [rax], al;add al, ;cmpsb byte [rsi], byte ptr [rdi];adc dword [rax], eax": 3,
                "add al, ;cmpsb byte [rsi], byte ptr [rdi];adc dword [rax], eax;mov dl, ;adc dword [rax], eax": 3,
                "adc dword [rax], eax;ret ;add byte [rax], al;add byte [rax], al;add byte [rbx + rdx*4 + ], bh": 3,
                "add byte [rax], al;in al, dx;outsb dx, byte gs:[rsi];movsxd rbp, dword [rdi + ];imul ebp, dword [rsi + ], ": 1,
                "movsxd rcx, dword [rdi + ];outsd dx, dword [rsi];jb ;jne ;movsxd rsi, dword [rcx]": 3,
                "rol byte [rcx], 1;out dx, al;add edi, ecx;add dword [rcx], eax;rol byte [rcx], 1": 3,
                "add dword [rdx], ecx;add ah, ah;add al, ;add eax, dword [rax];invalid": 3,
                "adc dword [rax], eax;add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [rcx + rsi*4], al": 2,
                "jl ;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al;add byte [rdi + rcx*4 + ], bh": 2,
                "add byte [rax], al;add byte [rax], al;add al, bh;movsd dword [rdi], dword ptr [rsi];outsd dx, dword [rsi]": 2,
                "invalid;add edi, ecx;add dword [rcx], eax;rol byte [rcx], 1;xor cl, bh": 3,
                "rol byte [rcx], 1;xor cl, bh;add dword [rdx], ecx;add ah, ah;add al, ": 3,
                "and dword [rdx], eax;sbb dword [rcx], ecx;sbb eax, dword [rdx];invalid;invalid": 2,
                "invalid;invalid;or al, byte [rax];add byte [rdx + rax + ], al;add dword [rcx + ], esp": 2,
                "add byte [rax], ch;add al, 9;add al, byte [rcx + rax];or dword [rcx], eax;invalid": 2,
                "or byte [rcx], cl;invalid;or byte [], al;add al, byte [rcx + ];add eax, ": 2,
                "jb ;jne ;movsxd rsi, dword [rbx];add byte [rax], al;add bl, byte [rsi]": 3,
                "add ah, ah;add al, ;add ah, byte [rcx + ];add al, ;movabs byte [], al": 3,
                "or al, 8;mov dl, ;and cl, cl;invalid;or al, byte [rax]": 2,
                "add dh, byte [rax];add dh, byte [rax];add al, byte [];add cl, byte [rdx + rax];or cl, byte [rbx]": 2,
                "or cl, byte [rbx];invlpg byte [rbx + rax];or al, byte [rbx + rax*2];add al, ;invalid": 2,
                "add eax, ;or eax, ;invalid;or dword [rcx], ecx;invalid": 2,
                "adc dword [rax], eax;stosb byte [rdi], al;adc dword [rax], eax;jne ;adc dword [rax], eax": 2,
                "add byte [rax], al;add byte [rax], al;add byte [], al;invalid;stosb byte [rdi], al": 2,
                "add byte [], al;invalid;stosb byte [rdi], al;adc dword [rax], eax;fld xword [rdx + ]": 2,
                "sbb al, ;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al;add ah, bl": 1,
                "add ah, bl;ja ;add byte [rax], al;add byte [rax], al;add byte [rax + ], bl": 1,
                "invalid;retf ;add bh, byte [];add al, 4;add eax, ": 2,
                "add dl, byte [rdx];fiadd word [rsi];add eax, ;invalid;sbb al, 5": 2,
                "add eax, dword [];or al, byte [rax + ];add eax, ;add dword [rsi], ecx;add al, 5": 2,
                "or al, byte [rax + ];add eax, ;add dword [rsi], ecx;add al, 5;add eax, dword [rsp + rcx]": 2,
                "add dword [rsi], ecx;add al, 5;add eax, dword [rsp + rcx];add eax, ;add dword [rcx + rax], eax": 2,
                "add byte [rax], al;add byte [rax], al;add al, al;jg ;add byte [rax], al": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rbp - ], bl;stosd dword [rdi], eax": 2,
                "outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al;add byte [rax + ], bl;outsd dx, dword [rsi]": 5,
                "sbb al, ;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al;add byte [rbp + ], ah": 1,
                "or dword [rax], ebp;add cl, byte [rbx];invalid;add ecx, esi;invalid": 2,
                "or dh, ah;invalid;xor eax, dword [rdx];or dh, bl;invalid": 2,
                "sbb dword [rbx], eax;invalid;invalid;or dword [rbx], eax;invalid": 2,
                "invalid;add dword [rcx + 3], eax;or al, byte [rsi + rsi];add al, ;invalid": 2,
                "add eax, ;add al, byte [];add dword [rsi], ecx;add al, byte [];add eax, dword [rsi + 5]": 2,
                "or al, byte [rsi];invalid;add al, byte [];add al, byte [];invalid": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add eax, ;jmp ": 1,
                "add byte [rax], al;add eax, ;jmp ;lodsd eax, dword [rsi];adc dword [rax], eax": 1,
                "outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al;add byte [rax + rax*4 + ], ch;add byte [rax], al": 1,
                "adc al, 7;add eax, ;add eax, dword [];add dword [rdx], ecx;add byte [rax], al": 2,
                "adc byte [rdx], al;sub byte [rbx], al;invalid;invalid;or dword [rdx], eax": 2,
                "add byte [rax], al;add byte [], al;add byte [rax], al;add byte [rax], al;cli": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rbp + rdx*2 + ], ch;add byte [rax], al;add byte [rax], al": 1,
                "and dword [rdx], eax;adc dword [rcx], ecx;invalid;add byte [rax], al;and al, 4": 2,
                "invalid;add byte [rax], al;and al, 4;add eax, ;add al, ": 2,
                "add byte [rax + ], ah;add byte [rax], al;add byte [rbp + ], ah;outsb dx, byte gs:[rsi];movsxd rbp, dword [rdi + ]": 2,
                "add al, byte [r9 + 2];invalid;invalid;or al, ;sub al, 2": 3,
                "sahf;add dword [rdx + 2], edx;push rdx;add al, byte [rax + 4];add al, byte [rax + 2]": 1,
                "add dword [rcx], edx;jp ;not byte [rax];adc al, ;add eax, ": 1,
                "add dword [rcx], edx;add dword [rcx], edx;imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx;invalid": 1,
                "outsd dx, dword [rsi];outsb dx, byte [rsi];add byte [rax], al;add ah, byte [rsi];add ch, byte [rdx + ]": 1,
                "add byte [rax], al;add byte [rax + rdx*2], bl;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al": 1,
                "add al, byte [];add dword [rbx], ebx;add bl, byte [rcx + rax];invalid;add al, ": 1,
                "add bl, byte [rcx + rax];invalid;add al, ;or eax, ;add al, ": 1,
                "or al, ;add dword [rdx], esi;invalid;or al, byte [rax];add byte [rax], ch": 1,
                "add al, ;add eax, ;add r9b, byte [rbx];adc cl, byte [rcx];adc dword [rdx], ecx": 1,
                "add r9b, byte [rbx];adc cl, byte [rcx];adc dword [rdx], ecx;add cl, byte [];movhps qword [rdx], xmm0": 1,
                "add esp, dword [rbp + ];invalid;add eax, ;add dh, byte [rdx + rax + ];add al, byte [rcx + 1]": 1,
                "add dword [rbx], edi;add al, 4;add eax, dword [];add al, byte [];add bl, byte []": 1,
                "add al, 4;add eax, dword [];add al, byte [];add bl, byte [];invalid": 1,
                "add eax, ;add dword [rdx], edx;invalid;add eax, ;invalid": 1,
                "invalid;add eax, ;or eax, ;invalid;add dword [rdi], ebp": 1,
                "add byte [rbx + ], bh;invalid;add byte [rsp + rsi*2 + ], al;add byte [rax], al;add byte [rax], al": 2,
                "invalid;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al;add byte [rbx + rdi + ], dl": 2,
                "outsb dx, byte [rsi];insb byte [rdi], dx;outsd dx, dword [rsi];invalid;invalid": 3,
                "add dword [rdi + ], ebp;outsd dx, dword [rsi];and dword [rax + ], esi;add byte [rbx + rax + ], bh;add al, ": 3,
                "add ah, byte [rcx + 2];invalid;add dword [rdi], eax;add ecx, dword [rdx];add byte [rax], al": 3,
                "add esp, dword [rdi];invalid;add eax, ;add al, byte [];add ecx, dword [rdi]": 3,
                "add byte [rax], al;add byte [rbx + ], dh;invalid;add byte [rbp + rsi*2 + ], al;invalid": 2,
                "add eax, ;xlatb;jne ;add cl, dh;jne ": 2,
                "add ebx, dword [];add dword [rsp + rbp + ], ebp;sbb byte [rbx], al;add dword [rsi + ], edx;or cl, byte [rcx + rcx]": 3,
                "invalid;invalid;sldt word [rax];cmp dword [rsi], eax;sbb byte [rdx], al": 2,
                "or al, byte [];add al, 1;or byte [rdx], al;invalid;add dl, byte [rsi]": 2,
                "or byte [rdx], al;invalid;add dl, byte [rsi];adc eax, dword [rbx];add dword [rdi], eax": 2,
                "add eax, ;xchg eax, ebx;imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx;invalid": 1,
                "cmp eax, dword [rcx];invalid;add al, ;add bl, byte [rbx];add bl, byte [rdx]": 2,
                "wrmsr;add cl, byte [rdx];add byte [rax], al;cmp dword [rsi], eax;add al, 2": 2,
                "add byte [rax + ], dl;invalid;add byte [rax], bl;add byte [rax], al;add byte [rax], al": 2,
                "add al, ch;js ;add bh, bh;js ;add byte [rax], al": 2,
                "add byte [rax], al;add byte [rbp + rcx*2 + ], bh;add byte [rax], al;insb byte [rdi], dx;pop rax": 4,
                "pop rax;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al;add al, bl": 2,
                "invalid;push ;movsxd rsi, dword [rdi + rbx*2 + ];imul bp, word gs:[rsi + ], ;outsd dx, dword [rsi]": 3,
                "add dh, byte [rax];add eax, ;or al, byte [rax];add byte [rcx], dh;add al, byte [rcx + rax]": 3,
                "add byte [rax + ], dh;add byte [rax], al;add byte [rax - ], cl;outsd dx, dword [rsi];add byte [rax], al": 2,
                "add dword [rdi], ecx;invalid;add dword [rax], ebx;invalid;or dword [rdx + ], esp": 2,
                "sub byte [rcx + rdx], al;add ch, byte [rdx];add dh, byte [rax];add eax, ;sub ecx, dword [rax]": 2,
                "and eax, dword [rdx];invalid;invalid;or al, byte [rax];add byte [rax], ch": 2,
                "or edx, dword [rdx];add dword [rdx], ecx;add byte [rax], al;add byte [rax], al;add byte [rax], al": 2,
                "add byte [rax], al;add al, ;jl ;add byte [rbx + ], ah;invalid": 2,
                "add byte [rax], al;mov al, al;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al": 2,
                "mov al, al;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al;add byte [rdi + ], ah": 2,
                "add esi, dword [rcx];fild word [rdx];add al, ;add al, byte [rcx];loope ": 2,
                "add cl, byte [rbx];cmpsb byte [rsi], byte ptr [rdi];add al, byte [rdx];or byte [rdi], cl;add eax, ": 2,
                "add eax, ;push rax;or edx, ecx;add dword [rax], ecx;leave": 2,
                "add byte [rdx + ], ah;invalid;add byte [rbx], al;add byte [rax], al;add byte [rax], al": 2,
                "add byte [rax], al;add byte [rsp + rdi*4], ch;jo ;add byte [rax], al;add byte [rax], al": 2,
                "add dword es:[], eax;invalid;or eax, dword [];invalid;add al, 2": 2,
                "add byte [rax], al;add byte [rax], al;invalid;invalid;add byte [rax], al": 2,
                "add byte [rdx], dl;jg ;add byte [rdi + ], al;invalid;add byte [rax], al": 2,
                "invalid;push ;movsxd rsi, dword [rdi + rbx*2 + ];jb ;jp ": 2,
                "add eax, ;add dword [rbx], edx;and eax, ;add dword [rcx], eax;add cl, byte [rsi]": 2,
                "add al, byte [rdi];add dword [rdx], eax;invalid;add cl, byte [rdx];add byte [rax], al": 2,
                "add dword [rdx], eax;lsl esp, dword [rdi];add al, ;add dword [rsi], edx;add eax, ": 2,
                "or byte [rsi], cl;invalid;invalid;or dl, byte [rax];or dword [], eax": 2,
                "add al, byte [rdx + rax];add al, 1;add eax, ;add dword [rsp + rax], eax;invalid": 2,
                "adc al, 7;imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx;invalid;jb ": 1,
                "add byte [rax], al;add byte [rdi], dl;adc byte [rsi], 0;invalid;adc byte [rsi], 0": 1,
                "add byte [rax], ch;add al, byte [rdx + rax];lar ebp, word [];or cl, byte [rdi];or dword [], ecx": 2,
                "add al, byte [];sub byte [rsi], al;add al, 3;invalid;invalid": 2,
                "add dword [], eax;add al, ;add ecx, dword [];or byte [rdi + rcx], al;sbb dword [rdi + rcx], eax": 2,
                "add eax, dword [rdx];or cl, byte [];add byte [rax], al;and byte [rbx + ], cl;add byte [rax], al": 1,
                "add al, ;mov ch, 3;add al, ;add ecx, dword [rcx];add al, byte [rcx]": 2,
                "add byte [rax], al;sub byte [rsi], al;add al, 2;add al, 2;add al, 2": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add bh, bl;invalid": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rbx + rdx*2 + ], cl;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rbx + rdx*2 + ], cl;add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "and al, byte [rbx];invalid;invalid;add eax, dword [rdi];imul esi, dword [eax + ebp*2 + ], ": 1,
                "or cl, byte [rax];add dword [rdi + rax], eax;and eax, ;or byte [rdi], al;invalid": 1,
                "invalid;or cl, byte [rdi];or ebp, dword [rcx];or al, byte [rbx];or ebx, dword [rdi]": 1,
                "or ebx, dword [rdi];add al, ;or dl, byte [rbx];or ecx, dword [];add byte [rax], al": 1,
                "and al, byte [rax + ];or dword [rdi], esp;add al, byte [rdi];add byte [rax], al;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;jo ;invalid;add byte [rax], al": 4,
                "add byte [rax], al;add byte [rax], al;add al, ;test dword [rsi], edx;add byte [rax], al": 1,
                "add bl, byte [rdx];adc byte [rdi + rcx], ch;add dword [rax], edx;xor byte [rdi], cl;invalid": 2,
                "add byte [rsi - ], ah;add dword [rdx], esp;add dl, byte [rcx];add dl, byte [rsp + rax];and byte [], al": 2,
                "invalid;add byte [rax], al;and al, byte [rsp + rbx];add eax, ;add al, byte es:[rdi]": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add al, ;xchg byte [rsi], dl": 2,
                "add eax, ;xor ah, byte [rbp + rax + ];add dh, byte [rcx];add al, ;or dh, byte [rdi]": 2,
                "sbb edx, dword [rdx];sbb byte es:[rdi], bl;invalid;sbb ch, byte [rbx + ];invalid": 2,
                "adc eax, ;adc dword [rdx], ebx;add eax, ;invalid;sbb byte [], dl": 2,
                "js ;or al, byte [rax];add dh, ch;add dword [rdx], eax;and eax, dword [rcx]": 2,
                "or al, byte [];add al, 4;add dword [rdx], edx;or eax, ;add al, 3": 2,
                "add al, 3;add eax, dword [rsi];add eax, ;adc byte [rax], dl;cvtpi2ps xmm2, qword [rax]": 2,
                "add ebx, dword [rax];add al, ;add edx, dword [rcx];add al, 5;add dl, byte [rax + ]": 2,
                "add edx, dword [rcx];add al, 5;add dl, byte [rax + ];adc byte [rbx + rdx], al;invalid": 2,
                "add eax, dword [rcx];or dword [rcx], eax;sbb byte [rsi], cl;add eax, ;or eax, ": 2,
                "or al, byte [rax];add byte [rax], al;add byte [rax], al;add byte [rax], al;mov al, ": 5,
                "cmpsb byte [rsi], byte ptr [rdi];add eax, ;sub al, 2;add dword [rdi], eax;add byte [rax], al": 2,
                "xor dword [rdx], eax;sbb dword [rbx], eax;invalid;add byte [rax], al;and al, 6": 2,
                "or dword [rcx], eax;adc al, 2;sidt [rdi];add dword [rdi], eax;imul esi, dword [eax + ebp*2 + ], ": 1,
                "add dword [rdi], eax;add byte [rax], dh;push rbp;invalid;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rbx + rbp + ], ch;add byte [rax], al;sbb byte [rdi + rbp*2], bl;add byte [rax], al": 3,
                "add bl, byte [rdx];adc byte [rsi], dh;lgdt [rax];adc byte [rdi], cl;invalid": 5,
                "add byte [rax], al;add byte [rax], al;movabs al, byte [];mov dword [rsi], edx;add byte [rax], bl": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add bh, ch;mov dword [rsi], edx": 2,
                "add byte [rax + ], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;add al, dl": 2,
                "invalid;add byte [rax], cl;add byte [rax], al;add byte [rax], al;add byte [rax], al": 6,
                "outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al;add byte [rax + ], bh;add byte [rax], al": 2,
                "invalid;outsd dx, dword [rsi];je ;outsd dx, dword [rsi];movsxd rsp, dword cs:[rcx + ]": 3,
                "add al, byte [rcx];popfq;add eax, dword [rdi];add bl, byte [rax];imul esi, dword [eax + ebp*2 + ], ": 1,
                "add dh, byte [rax];add dl, byte [rsi];add eax, ;invalid;or byte [rbx], cl": 2,
                "invalid;or byte [rbx], cl;or edx, dword [rbx + ];and eax, ;invalid": 2,
                "push rsi;or al, ;or edx, dword [rax];or al, ;add dword [rdx], ecx": 1,
                "lea edx, [rsi];add byte [rax], bh;add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], bh;add byte [rax], al;add byte [rax], al;add byte [rax], al;add dh, bh": 1,
                "add byte [rax], al;add byte [rdx], bl;mov ss, word [rsi];add byte [rax], al;add byte [rax], al": 1,
                "add ah, dh;xor al, ;add byte [rax], al;add byte [rax], al;add byte [rax], ch": 7,
                "insb byte [rdi], dx;imul r14d, dword [rbx + ], ;jne ;movsxd rsi, dword [rcx];add byte [rax], al": 1,
                "mov ss, word [rsi];add dl, cl;mov ss, word [rsi];add byte [rbx], al;add byte [rax], al": 1,
                "add al, ;mov ss, word [rsi];add byte [rax], al;add byte [rax], al;add dl, bl": 1,
                "insb byte [rdi], dx;imul r14d, dword [rbx + ], ;jne ;movsxd rsi, dword [rbx];add byte [rax], al": 3,
                "or eax, dword [rax];mov al, 5;test al, 1;add byte [rax + ], bh;add byte [rax], ch": 3,
                "pop rsi;invalid;add byte [rax], al;add byte [rax], al;add byte [rax], cl": 3,
                "add byte [rdx - ], bl;invalid;add byte [rax], al;add byte [rax], al;add ah, dh": 3,
                "add byte [rax], al;add byte [rax], al;add al, cl;invalid;add byte [rax], dl": 3,
                "add byte [rcx], al;xchg eax, ecx;invalid;add byte [rbx], al;add byte [rax], al": 3,
                "add byte [rsi], bl;xchg eax, ecx;invalid;add byte [], ah;add byte [rax], al": 3,
                "invalid;outsd dx, dword [rsi];je ;outsd dx, dword [rsi];ja ": 3,
                "je ;outsd dx, dword [rsi];ja ;jne ;movsxd rsi, dword [rcx]": 3,
                "add cl, bh;xchg eax, ecx;invalid;add byte [rax], cl;xchg eax, edx": 3,
                "add byte [rax], al;pop rsp;invalid;outsd dx, dword [rsi];add byte [rax], al": 2,
                "invalid;outsd dx, dword [rsi];je ;outsd dx, dword [rsi];je ": 18,
                "or al, byte [rax];mov ah, 5;movsb byte [rdi], byte ptr [rsi];add dword [rax], eax;mov es, word []": 3,
                "add cl, byte [rcx + ];add byte [rax], al;xor byte [rax + ], ah;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rcx], al;xchg eax, ebx;invalid;add byte [], al;add byte [rax], al": 2,
                "add byte [rax], al;and al, 6;or byte [rdx], al;add eax, ;add al, byte [rdx + rax]": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax - ], cl;outsd dx, dword [rsi];add byte [rax], al": 2,
                "add byte [rax - ], ah;invalid;add byte [rax], al;add byte [rax], al;add byte [rax], al": 2,
                "or byte [rcx], bh;add dl, byte [rcx + 2];or al, byte [rcx];or eax, dword [rcx];or al, byte [rax]": 3,
                "and al, byte [rdx];or al, byte [rax];add byte [rax], ch;invalid;add al, 2": 3,
                "add al, 2;add al, 1;add eax, ;add dword [], eax;add cl, byte [rdi + rcx]": 3,
                "xchg eax, ebp;invalid;add byte [rax], al;add byte [rax], al;add byte [rax], al": 2,
                "invalid;cmp byte es:[rbx], bh;add dh, dh;or ah, byte [rdx + rax];add al, ": 3,
                "sub byte [rdx], al;add al, 1;adc eax, ;add byte [rax], al;and al, 6": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], dh;xchg eax, edi": 3,
                "add byte [rax], al;add byte [rax + rsi + ], bl;add byte [rax], al;add byte [rax], al;add byte [rsp + rsi], dh": 4,
                "add dword [rcx + rax], ecx;add eax, ;add byte [rax], al;sub byte [rdx], al;xor al, byte [rbx]": 6,
                "sub byte [rsi], al;adc byte [rdx], al;or al, 2;adc al, byte [rdx];add al, ": 5,
                "invalid;add cl, byte [rdx];add byte [rax], al;add byte [rax], al;imul esi, dword [eax + ebp*2 + ], ": 1,
                "add byte [rax + rbx*4], bh;invalid;add byte [rbx], al;add byte [rax], al;add byte [rax], al": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rbx - ], bl;invalid": 2,
                "cdq;invalid;add dh, bh;cdq;invalid": 2,
                "fmul dword [rsi + ];add byte [rax], al;add byte [rax], al;add byte [rax + ], bh;add byte [rax], al": 2,
                "je ;insd dword [rdi], dx;sub dword gs:[rsi], ebp;je ;jns ": 3,
                "adc byte [rcx], al;add eax, dword [rdx];invalid;add al, byte [rcx];rol dword [rcx], cl": 2,
                "mov ebx, ;or cl, byte [rbx];add al, byte [rdx + ];invalid;invalid": 2,
                "invalid;invalid;add dword [rax], edx;invalid;add dword [rcx], ecx": 2,
                "adc byte [rax], dl;adc dword [rdx], ecx;add byte [rax], al;ja ;and eax, dword [rcx]": 2,
                "add al, byte [rbx];invalid;invalid;invalid;add dword [rsi + rcx], eax": 2,
                "add eax, ;or dword [rcx + rcx], eax;sub byte [rcx + rax], cl;invalid;invalid": 1,
                "push sp;outsd dx, dword [rsi];push rsi;invalid;insb byte [rdi], dx": 2,
                "add al, dh;add al, ;add dword [rax], eax;imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx": 1,
                "xor eax, dword [rcx];or al, 3;and eax, ;and al, 6;add al, 1": 1,
                "mov al, ;invalid;add byte [rax], al;add byte [rax], al;add byte [rax], al": 1,
                "add ch, dh;pushfq;invalid;add byte [], al;popfq": 2,
                "add byte [rax], al;add eax, ;movabs dword [], eax;add byte [rax], al;add ah, ch": 2,
                "adc byte [rax + ], dl;add byte [rax], al;fcom dword [rbp + ];add byte [rax], al;add byte [rax], al": 2,
                "adc edx, dword [];adc dword [rdx], edx;or al, byte [];or al, 8;or ebx, dword [rax]": 2,
                "invalid;add ah, ch;sahf;invalid;add byte [rsi], cl": 1,
                "add ah, ch;sahf;invalid;add byte [rsi], cl;lahf": 1,
                "add byte [rax], al;hlt;invalid;jo ;add byte [rax], al": 1,
                "invalid;jo ;add byte [rax], al;add byte [rax], al;mov byte [rdx + ], ah": 1,
                "insd dword [rdi], dx;je ;jb ;jne ;movsxd rsi, dword [rbx]": 2,
                "add byte [rax], al;add ah, byte [rsi];movabs al, byte [];push rdx;lahf": 2,
                "add cl, byte [rcx];add dword [rax], ebx;or ah, byte [rsi];or byte [rbx + ], dh;adc cl, byte [rdi]": 1,
                "add byte [rax], al;mov bh, 1;add dl, byte [rax];add edx, eax;add al, 4": 1,
                "add edx, eax;add al, 4;sbb byte [rbx], al;or al, 4;or al, byte [rbx]": 1,
                "movabs al, byte [];invalid;add byte [rbx], al;add byte [rax], al;add byte [rax], al": 1,
                "add cl, byte [rax];add al, byte [rdx + rax];imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx;invalid": 1,
                "add cl, byte [rax];add al, byte [rdx + rax];invalid;add cl, byte [rdx];invalid": 1,
                "add cl, byte [rdx];invalid;or dl, byte [rdx];add eax, ;sbb dword [], ebp": 1,
                "jno ;add byte [rax], al;add byte [rax], al;add byte [rax - ], bh;invalid": 1,
                "outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al;add byte [rcx + ], bh;add byte [rax], al": 1,
                "add byte [rax], ch;add cl, byte [rax];add cl, byte [];add bl, byte [rdx];add dh, byte [rsi]": 2,
                "add byte [rax], al;jb ;add byte [rax], al;add byte [rax], al;add byte [rax - ], dh": 2,
                "jne ;jne ;movsxd rsi, dword [rcx];add byte [rax], al;add ch, byte [rcx]": 3,
                "add dword [], eax;add dword [], eax;invalid;add bl, byte [rdx];add al, ": 3,
                "xor dword [rax], ebx;imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx;invalid;jb ": 1,
                "invalid;adc ch, byte [rax + ];or byte [rdx], al;or al, 9;add al, ": 2,
                "add al, ;add eax, ;cmp dword [rdx], eax;add dword [rdx + ], esp;sahf": 2,
                "sbb eax, ;invalid;or ecx, dword [];add eax, ;adc dword [], eax": 2,
                "adc eax, ;and al, 9;and ebx, dword [rcx];and al, ;and ebx, dword [rcx]": 2,
                "and al, ;and ebx, dword [rcx];and al, ;or esi, dword [rax];add ebx, dword [rcx]": 2,
                "movhps qword [rax], xmm3;or byte [rbx], al;wbinvd;or al, ;add al, ": 1,
                "add al, ;or al, ;add dh, byte [rcx + rdx];adc al, ;add ch, byte [rdx]": 1,
                "add al, byte [rdx];add ebp, dword [rbx + ];add eax, ;add dword [rdi], eax;add byte [rax], r8b": 1,
                "add eax, ;add dword [rdi], eax;add byte [rax], r8b;cmp dword [rcx + rdx], eax;add al, byte [rcx + rax]": 1,
                "add eax, ;adc ecx, dword [rdx];add eax, ;invalid;or dword [rdx], ecx": 1,
                "or al, byte [rcx];invalid;add dword [rdx], ecx;add byte [rax], al;and al, 2": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax - ], ch;invalid": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax - ], ch;invalid;add byte [rbx - ], bh": 1,
                "add bl, al;cmpsd dword [rsi], dword ptr [rdi];invalid;add dl, dl;cmpsd dword [rsi], dword ptr [rdi]": 1,
                "add dword [rax + ], edx;add qword [r8 + ], r10;add qword [r8 + 7], r10;push rax;invalid": 2,
                "add qword [r8 + 7], r10;push rax;invalid;or r8b, byte [r8];test byte [], al": 2,
                "invalid;or r8b, byte [r8];test byte [], al;cwde;add ebx, dword []": 2,
                "add ebx, dword [];add ebx, dword [rcx];xchg eax, edi;add edx, dword [rcx];cwde": 2,
                "add dword [rcx + ], ecx;add al, 6;adc eax, ;add bl, byte [rbx];add al, 7": 2,
                "add al, ;add dword [rcx], eax;or al, byte [rax];add byte [rax + 2], dh;add al, 1": 2,
                "add byte [rax], al;add al, ;test al, ;add byte [rbp - ], dh;test al, ": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rsp + rbx*8 + ], al;add byte [rax], al;add byte [rax], al": 2,
                "add byte [rsi + ], bh;adc ecx, dword [rdx + ];add byte [rax], ah;cmp al, byte [rdx];xchg eax, edx": 3,
                "invalid;add al, ;add al, byte [rdi];add dword [rax], ecx;add ebx, dword [rax]": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], dl;invalid": 2,
                "sub dword gs:[rsi], ebp;outsb dx, byte [rsi];ja ;invalid;je ": 3,
                "add dl, byte [rsi];add bl, byte [rdx + rax];sbb al, 2;invalid;invalid": 4,
                "or byte [rdi], r14b;adc eax, ;add ch, byte [rbx + 2];and al, byte [rcx];and al, byte [rdx]": 4,
                "invalid;invalid;or eax, ;femms;sbb cl, byte []": 4,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add al, ;stosd dword [rdi], eax": 2,
                "pop rdi;outsd dx, dword [rsi];invalid;push ;imul esi, dword [eax + ebp*2 + ], ": 1,
                "or dword [rdi], esp;add al, byte [rdi];add byte [rax], al;test dword [rcx], esp;add byte [rax], al": 2,
                "add byte [rdi - ], ah;invalid;add byte [rbx - ], dh;invalid;add byte [rbx], al": 2,
                "jne ;movsxd rsi, dword [rdx];add byte [rax], al;add bl, byte [rdx];adc byte [rcx], dh": 3,
                "add byte [rax], al;add byte [rdi], ch;lodsd eax, dword [rsi];invalid;add byte [rdi], bh": 2,
                "jne ;movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rsi];lock add dword [rbp + ], esp": 3,
                "or al, byte [rcx];invalid;add ecx, dword [rdx];add byte [rax], al;sub byte [rdx], al": 3,
                "add byte [rax], al;sub byte [rdx], al;add al, 2;jne ;or al, 3": 3,
                "sub byte [rsi], al;add al, 1;add eax, ;add cl, byte [rdx + rax];add al, 2": 3,
                "add al, 1;add eax, ;add cl, byte [rdx + rax];add al, 2;or byte [rdx], al": 3,
                "movsxd rsi, dword [rbx + rdx*2 + ];jne ;movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rsi]": 3,
                "movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rsi];lock add dword [rdx + ], esp;lock add dword [rsi], ecx": 3,
                "add byte [rax], al;add bl, byte [rsi];lock add dword [rdx + ], esp;lock add dword [rsi], ecx;out dx, eax": 3,
                "add bl, byte [rsi];lock add dword [rdx + ], esp;lock add dword [rsi], ecx;out dx, eax;add dword [rdx], ecx": 3,
                "lock add dword [rdx + ], esp;lock add dword [rsi], ecx;out dx, eax;add dword [rdx], ecx;add dh, ch": 3,
                "add byte [rax], al;sub byte [rdx], al;add al, 2;jb ;or al, 3": 3,
                "add esp, dword [rax];add cl, byte [rdx];add byte [rax], al;and al, 6;add al, 1": 6,
                "scasd eax, dword [rdi];invalid;add byte [rax], al;add byte [rax], al;add ah, dl": 3,
                "invalid;outsb dx, byte [rsi];jne ;movsxd rsi, dword [rcx];add byte [rax], al": 3,
                "add byte [rax], al;and al, 2;add al, 2;sub dword [rcx], eax;adc dword [rcx], eax": 3,
                "adc dword [rcx], eax;invalid;add byte [rax], al;and al, 6;add al, 1": 3,
                "add byte [rax], al;add al, cl;sub eax, ;imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx": 1,
                "add cl, byte [];or dword [], ecx;mov dword [rcx], esp;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;sal byte [rcx + ], 0;add byte [rax], al;add byte [rax], al": 3,
                "sub eax, ;add byte [rax], al;add byte [rax], al;imul esi, dword [eax + ebp*2 + ], ;insd dword [rdi], dx": 1,
                "mov dl, ;add dl, bl;mov dl, ;add byte [rbx], al;add byte [rax], al": 3,
                "add byte [rax], dl;mov bl, ;add byte [rdx], ah;mov bl, ;add byte [rax], al": 3,
                "invalid;add al, ;or cl, byte [rsi];and dword [], ecx;stosb byte [rdi], al": 3,
                "or ebp, dword [rbx + rdx*8];or al, byte [rsp + rdx*8];or cl, byte [rcx];add al, byte [rcx];invalid": 3,
                "cmp al, 2;lidt [rax];add al, ;add dl, byte [rdx + rax];sbb al, ": 3,
                "add al, 1;or al, byte [rdx];and dword [rcx], eax;add dword [rdx], eax;lar eax, word [rbx]": 3,
                "ror byte [rdx + ], 0;add byte [rax + ], bh;add byte [rax], al;add byte [rax], al;imul esi, dword [eax + ebp*2 + ], ": 1,
                "add byte [rax], al;add byte [rsp + rcx*2], ch;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al": 2,
                "fild word [rcx];add eax, esp;add esp, eax;add ebx, edi;add dword [rdx], ecx": 2,
                "add bh, byte [rdx];add bh, byte [rdx];invalid;cmp al, byte [rsp];rol byte [rdi], 1": 1,
                "or eax, ;invalid;inc dword [rdx];and al, byte [rbx];and byte [rax], cl": 1,
                "invalid;inc dword [rdx];and al, byte [rbx];and byte [rax], cl;adc dword [rcx], eax": 1,
                "rol dword [rcx], 1;invalid;add byte [rax], al;sub byte [rdx], al;and dword [rbx], eax": 1,
                "sub byte [rdx], al;and dword [rbx], eax;adc al, 4;invalid;add edx, dword [rsp + rax]": 1,
                "add edx, dword [rsp + rax];add edx, dword es:[rsp + rax];add edx, dword es:[rsp + rax];invalid;add ebx, dword [rbx]": 1,
                "add edx, dword es:[rsp + rax];invalid;add ebx, dword [rbx];add al, ;add edx, dword [rsp + rax]": 1,
                "imul esi, dword [rdi + rbp*2 + ], ;movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rdx];xor byte [rcx], dh": 1,
                "add byte [rax], al;add bl, byte [rdx];xor byte [rcx], dh;invalid;invalid": 1,
                "add dword [rdi], eax;add byte [rax], al;and al, 4;invalid;add dl, byte [rax]": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;cdq;pop rdx": 1,
                "rol byte [rdx], ;add bh, byte [rdi + ];xor eax, ;fiadd word [];push rcx": 8,
                "add al, byte [rsi + ];xor eax, ;add al, byte ss:[rdx + rax];adc al, byte [rdx];or byte [rdx], al": 8,
                "add byte [rax], al;add byte [rax], al;test eax, ;pop rbx;invalid": 2,
                "jns ;jne ;movsxd rsi, dword [rdx];add byte [rax], al;add ah, byte [rsi]": 3,
                "invalid;add byte [rax], al;add byte [rax], al;add byte [rsi], cl;pop rsi": 2,
                "pop rdi;invalid;add byte [rax], al;add byte [rax], al;add al, ah": 2,
                "add byte [rax], al;add byte [rax], al;mov al, ;invalid;add byte [rax], ch": 2,
                "jne ;movsxd rsi, dword [rsi];add byte [rax], al;add ah, byte [rsi];rol byte [rdx], ": 3,
                "add dword [rdi], edx;add al, ;invalid;sub eax, dword [rdx];invalid": 2,
                "add cl, byte [rbx + rax];or eax, dword [rdx*2 + ];and al, byte [rdx];or al, 3;or eax, dword [rdx*2 + ]": 1,
                "add al, byte [rsi];add cl, byte [rdi];invalid;add eax, ;add dword [rdx], eax": 1,
                "invalid;add byte [rax], al;add byte [rax], al;add byte [rax], bh;outsb dx, byte [rsi]": 1,
                "add byte [rax + ], dh;invalid;add byte [rbp + ], dh;invalid;add byte [rbx], al": 1,
                "xchg eax, edx;outsb dx, byte [rsi];invalid;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add al, cl;jne ;add byte [rax], al;add byte [rax], al": 1,
                "movsxd rbx, dword [rdi + ];insd dword [rdi], dx;outsd dx, dword [rsi];jb ;invalid": 2,
                "or byte [rax + ], bl;add cl, byte [rax];add al, byte [];add dword [rdx + rax], eax;add eax, ": 2,
                "add bl, byte [rdx];add bl, byte [rdx];add ah, byte [rbx + rdx];or al, byte [rax];add byte [rax], ch": 3,
                "invalid;or al, byte [rdx];invalid;add dword [rcx + rax], eax;sbb byte [rdx], al": 3,
                "add al, cl;sub eax, ;add byte [rax], al;loopne ;jne ": 2,
                "add byte [rax], al;add byte [rax], al;mov esp, ;add byte [rax], al;add byte [rax], al": 1,
                "add dword [], esp;outsd dx, dword [esi];sub eax, ;jb ;insd dword [rdi], dx": 1,
                "cmpsd dword [rsi], dword ptr [rdi];add al, ;add al, byte [rcx];mov al, 2;scasd eax, dword [rdi]": 1,
                "scasd eax, dword [rdi];add cl, byte [rdx];add ah, ch;add eax, ;add bl, byte ss:[rsi + rcx]": 1,
                "or byte [rdx], al;or byte [rdx], al;or byte [rdx], al;or byte [rdx], al;or ecx, dword [rcx]": 1,
                "or ecx, dword [rdx];invalid;invalid;add ecx, dword [];add byte [rsi], dh": 1,
                "add cl, byte [];add cl, byte [rdx];add cl, byte [rdx];add dl, byte [rdx + rax];sbb byte [rcx], ch": 1,
                "add dl, byte [rdx + rax];sbb byte [rcx], ch;xor ch, byte [rax];invalid;and eax, ": 1,
                "add dword [], eax;add al, byte [];add dword [], eax;add al, byte [];add dword [rax], ebx": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add bh, cl;jae ": 1,
                "add dl, ch;jae ;add byte [rax], al;add byte [rax], al;add byte [rax], bl": 1,
                "jne ;imul ebp, dword [rsi + ], ;jne ;movsxd rsi, dword [rdx];add byte [rax], al": 2,
                "insd dword [rdi], dx;outsd dx, dword [rsi];jne ;imul ebp, dword cs:[rsi + ], ;sbb dl, byte [rax]": 2,
                "add byte [rax], al;add byte [rcx], al;jne ;add byte [], cl;jne ": 1,
                "add al, dl;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al;add byte [rax + ], dh": 1,
                "add dl, dl;jne ;add cl, bl;jne ;add ch, bl": 1,
                "jne ;add ch, bl;jne ;add byte [rbx], al;add byte [rax], al": 1,
                "add byte [rax], al;add bh, ch;jne ;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rdi + ], ch;outsd dx, dword [rsi];jae ;jne ;jb ": 2,
                "jae ;add byte [rdx], al;sbb dh, byte [rax + ];jo ;outsd dx, dword [rsi]": 1,
                "add dword [rax + ], eax;invalid;or al, byte [rax];out dx, al;add eax, ": 1,
                "add cl, byte [rdx];add byte [rax], al;and al, 2;add eax, ;invalid": 1,
                "and al, 2;add eax, ;invalid;adc byte [rsi], al;invalid": 1,
                "xchg eax, esi;adc dword [rdi], 0;movabs eax, dword [];add byte [rax], al;add byte [rax + rax], dl": 1,
                "add byte [rax], al;add byte [rax + rax], dl;add byte [rdi], al;adc dword [rdi], 0;add byte [rax], al": 1,
                "or eax, dword [rsp + rdi];add dword [rdi], eax;add byte [rax], al;add byte [rax], al;movabs al, byte []": 1,
                "jne ;add byte [rax], al;add bl, byte [rdx];push rcx;invalid": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add al, cl;test byte [rdi], dl": 1,
                "add byte [rax], al;add byte [rbp + rsi + ], dh;add byte [rax], al;sub byte [rdi + rbp*2], bl;add byte [rax], al": 1,
                "add qword [r8 + ], r10;push rax;or r8b, byte [r8];invalid;mov dh, 1": 1,
                "add al, byte [rsi];add eax, dword [rsi + rax];add al, 2;add al, 2;invalid": 1,
                "add byte [rax], al;add byte [rcx - ], al;test dword [rdi], edx;add byte [rbp + ], cl;add byte [rax], al": 1,
                "jne ;movsxd rsi, dword [rcx];add byte [rax], al;add bl, byte [rdx];add dword [rdx - ], esi": 10,
                "sub dword [rsi], r13d;push r15;push r9;push rsi;push rdx": 6,
                "add dword [rbx], ecx;add ah, dh;add eax, ;and al, 4;imul eax, dword [rbx], ": 6,
                "push rax;pop rax;insd dword [rdi], dx;invalid;imul ebp, dword [rsi + ], ": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rbx - 4], al;invalid": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rcx - 4], ah;invalid;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rcx - 4], ah;invalid;add byte [rax], al;add byte [rax], al": 3,
                "imul ebp, dword [rsi + ], ;pop rdx;push rbp;push rbp;pop rcx": 12,
                "sub qword [r14], rbp;push rcx;pop rdx;pop rcx;insd dword [rdi], dx": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add al, ;std": 6,
                "push rdi;push rax;insd dword [rdi], dx;invalid;imul ebp, dword [rsi + ], ": 1,
                "push rdi;push rax;jne ;movsxd rsi, dword [rdx];add byte [rax], al": 3,
                "push rax;jne ;movsxd rsi, dword [rdx];add byte [rax], al;add bl, byte [rdx]": 3,
                "add cl, dl;std;invalid;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rbx - 2], ch;invalid;add byte [rsi + rdi*8 + ], dh": 3,
                "add bl, byte [rdx];add dword [rdx - ], esi;add dword [rbx], ecx;add dl, bh;add eax, ": 6,
                "push rdi;pop rdx;sub dword [rsi], r13d;insd dword [rdi], dx;invalid": 1,
                "jae ;add byte [rax], al;add byte [rax], al;add byte [rax + ], dh;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;add ah, ah;call qword [rdi];add byte [rax], al": 3,
                "add byte [rax], dl;sbb byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al": 3,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;movsxd rax, dword [rax]": 3,
                "add byte [rax], bl;add byte [rdx], dh;sbb byte [rax], al;add eax, dword [rax];add byte [rax], al": 3,
                "xor dword cs:[rax], eax;add byte [rdx], al;sbb al, byte [rax + ];invalid;add dword [rax + ], eax": 5,
                "add ah, bl;jo ;add byte [rax], al;add byte [rax], al;add byte [rax], ch": 3,
                "rol byte [rcx], 1;iretd;add dword [rcx], eax;rol byte [rcx], 1;bswap edi": 9,
                "add dword [rbx], ecx;add ah, bh;add eax, ;or byte [rcx], cl;invalid": 3,
                "add eax, ;adc byte [rcx], al;xor dword [rsi], eax;sbb byte [rdx], al;or dword [rcx], eax": 40,
                "or dword [rcx], eax;add cl, byte [rbx];add ah, byte [rcx + ];adc al, byte [rsi];push rsi": 3,
                "add dword [rbx], edx;add al, byte [];add ecx, dword [rcx];invalid;add eax, ": 8,
                "add eax, ;invalid;add dword [rcx], ebp;add esi, dword [rcx];add al, ": 3,
                "add byte [rax + ], cl;add byte [rax], al;add bh, al;add dword [rax], eax;add byte [rcx - ], dh": 1,
                "add eax, ;add byte [rax], al;int3;pop rbp;outsd dx, dword [rsi]": 1,
                "movsxd rsi, dword [rbx];add byte [rax], al;insd dword [rdi], dx;invalid;imul ebp, dword [rsi + ], ": 2,
                "add byte [rcx + rax + ], al;sub al, byte [rdx];add dword [rbx + ], ecx;invalid;sub cl, byte [rax + 9]": 2,
                "add eax, ;add dword [], eax;adc byte [rcx], al;xor dword [rsi], eax;sbb byte [rdx], al": 2,
                "add byte [rcx + 8], cl;sbb byte [rax], al;mov cs, word [rax];sbb byte [rax], al;movabs al, byte []": 1,
                "insd dword [rdi], dx;invalid;imul ebp, dword [rsi + ], ;jne ;movsxd rsi, dword []": 3,
                "add eax, dword [rax];add byte [rax], al;add byte [rax], al;add byte [rdx + rsi*4], al;or al, ": 1,
                "sbb byte [rax], al;add byte [rax], al;add byte [rax], al;int3;pop rbp": 1,
                "insd dword [rdi], dx;invalid;imul ebp, dword [rsi + ], ;pop r10;push rbp": 2,
                "push r12;push rbp;add byte [r8], al;add bl, byte [rsi];rol byte [rcx], 1": 2,
                "sub al, byte [rax + ];add eax, ;or dword [rcx], eax;add eax, ;adc byte [rcx], al": 2,
                "and byte [rbx], al;or al, byte [rax];add byte [rbx + 2], dh;xchg byte [rcx], al;add dword [rcx], ecx": 2,
                "pop rdi;jne ;movsxd rsi, dword [rcx + rbp*2 + ];outsb dx, byte [rsi];outsd dx, dword cs:[esi]": 2,
                "outsd dx, dword cs:[esi];add byte [rax], al;invalid;jb ;outsd dx, dword [rsi]": 7,
                "je ;outsb dx, byte [rsi];pop rdi;invalid;invalid": 1,
                "insb byte [rdi], dx;invalid;invalid;outsb dx, byte [rsi];outsd dx, dword cs:[esi]": 1,
                "outsd dx, dword [rsi];invalid;push ;movsxd rsi, dword [rsi + rbp + ];outsd dx, dword [rsi]": 1,
                "jb ;outsd dx, dword [rsi];je str.root_go_src_github.com_robertkrimen_otto_builtin_array.go;outsd dx, dword [esi];invalid": 1,
                "outsd dx, dword [rsi];invalid;invalid;insb byte [rdi], dx;outsd dx, dword cs:[esi]": 1,
                "outsd dx, dword cs:[esi];add byte [rax], al;invalid;outsd dx, dword [rsi];jo ": 23,
                "jae ;movsxd rbp, dword [rdi];outsb dx, byte gs:[rsi];movsxd rbp, dword [rdi + ];imul ebp, dword [rsi + ], ": 12,
                "outsb dx, byte gs:[rsi];movsxd rbp, dword [rdi + ];imul ebp, dword [rsi + ], ;invalid;outsb dx, byte gs:[rsi]": 3,
                "invalid;outsb dx, byte gs:[rsi];movsxd rbp, dword [rdi + ];jb ;outsd dx, dword [esi]": 1,
                "jb ;outsd dx, dword cs:[esi];add byte [rax], al;invalid;outsd dx, dword [rsi]": 3,
                "movsxd rbp, dword [rdi + ];imul ebp, dword [rsi + ], ;invalid;je ;jo ": 1,
                "imul ebp, dword [rsi + ], ;invalid;movsxd rbx, dword gs:[rdi + ];insb byte [rdi], dx;jo str.opt_go_src_math_rand_normal.go": 1,
                "jo str.opt_go_src_math_rand_normal.go;jb ;outsd dx, dword cs:[esi];add byte [rax], al;invalid": 1,
                "jp ;jne ;movsxd rsi, dword [rsi + ];jb ;imul ebp, dword [rdi + ], ": 1,
                "add byte [rdi], ch;invalid;outsd dx, dword [rsi];jo ;invalid": 11,
                "invalid;outsd dx, dword cs:[esi];add byte [rax], al;invalid;outsd dx, dword [rsi]": 3,
                "invalid;outsd dx, dword [esi];invalid;jae str.opt_go_src_strconv_atoi.go;movsxd rbp, dword [rdi]": 2,
                "invalid;je ;imul ebp, dword [rsi], ;invalid;outsd dx, dword [rsi]": 2,
                "jae ;invalid;outsd dx, dword [rsi];jo ;invalid": 1,
                "je str.opt_go_src_math_log_amd64.s;invalid;jae ;outsb dx, byte [rsi];pop rdi": 1,
                "invalid;jo ;ja ;jae ;jne ": 1,
                "invalid;je ;invalid;insd dword [rdi], dx;outsd dx, dword [rsi]": 2,
                "add byte [rsi + ], ch;scasb al, byte [rdi];pop rbx;push rcx;add byte [rax], al": 1,
                "add byte [rcx + rdx*2], bl;add byte [rax], al;add byte [rax], al;or bl, byte [rcx + rdx*2];add byte [rax], al": 1,
                "add byte [rax], al;or bl, byte [rcx + rdx*2];add byte [rax], al;add byte [rax], al;adc bl, byte [rcx + rdx*2]": 1,
                "add byte [rax], al;sbb al, ;push rcx;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], bh;cmp byte [rcx + rdx*2], bl;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rsi + ], cl;pop rsp;push rcx;add byte [rax], al;add byte [rax], al": 1,
                "pop rsp;push rcx;add byte [rax], al;add byte [rax], al;add byte [rax + ], ah": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rsp + rbx*2 + ], dh;je ;push rcx": 1,
                "add byte [rsi + ], bh;jle ;push rcx;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax + rax], dl;push rsi": 1,
                "outsd dx, dword [rsi];jae ;invalid;invalid;outsb dx, byte [rsi]": 1,
                "movsxd rsi, dword gs:[rcx + rbp*2 + ];outsb dx, byte [rsi];add byte [rbx], ch;add dword [rbp + rsi*2 + ], eax;insb byte [rdi], dx": 1,
                "insb byte [rdi], dx;imul esp, dword [rbx + ], ;outsb dx, byte [rsi];insb byte [rdi], dx;add byte gs:[rcx], dh": 1,
                "outsb dx, byte [rsi];add byte [rax], al;pop rdi;add dword [rbp + ], eax;imul esi, dword [rax + rdx*2 + ], ": 1,
                "je ;je ;imul ebp, dword [rsi + ], ;add dword [rsi + ], eax;imul r12, qword gs:[rdx + ], ": 1,
                "outsb dx, byte [rsi];jmp qword [];jmp qword [];jmp qword [];jmp qword []": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;jmp qword []": 27,
                "add byte [rax], al;jmp qword [];jmp qword [];jmp qword [];push rbx": 1,
                "add byte [rax], al;invalid;je str.vdsoPC;jb ;je ": 1,
                "invalid;invalid;add byte fs:[rax], al;invalid;je ": 1,
                "jb ;outsb dx, byte [rsi];je ;add byte [rsi], al;jbe ": 1,
                "add byte [rax], al;invalid;outsd dx, dword [rsi];jae ;jne ": 1,
                "jbe ;add byte [rax], al;add byte [rax], al;add byte [rax], al;add byte [rdi], al": 1,
                "invalid;js ;invalid;invalid;insd dword [rdi], dx": 1,
                "add byte [rax], al;or esi, dword [rbp + ];je ;movsxd rsi, dword gs:[rbp + rbp*2 + ];jo ": 1,
                "insb byte [rdi], dx;pop rdi;invalid;insb byte [rdi], dx;insb byte [rdi], dx": 1,
                "or esi, dword [rdi + ];outsd dx, dword [rsi];insb byte [rdi], dx;push rdx;js ": 1,
                "insb byte [rdi], dx;push rdx;js ;add byte [rax], al;or esi, dword [rdi + ]": 1,
                "cmp byte [rax], al;add byte [rdx + rbp], cl;sub dh, byte [rbx + ];outsb dx, byte [rsi];movsxd rbp, dword [rsi]": 1,
                "xor dword [rax], esi;xor byte [rbp + ], bl;imul ebp, dword [rsi + ], ;or al, ;pop rbx": 1,
                "outsb dx, byte [rsi];je ;add byte ss:[rax], al;or al, ;pop rbx": 3,
                "add byte ss:[rax], al;or al, ;pop rbx;xor dh, byte [rsi];xor byte [rbp + ], bl": 1,
                "xor byte [rbp + ], bl;imul ebp, dword [rsi + ], ;or al, ;pop rbx;xor esi, dword [rdx]": 1,
                "invalid;invalid;jns ;push rbp;push r10": 1,
                "jb ;je ;outsd dx, dword [rsi];outsb dx, byte [rsi];movsxd rsp, dword [rcx + ]": 1,
                "jns ;jae ;invalid;jo ;js ": 1,
                "invalid;jo ;js ;outsd dx, dword [rsi];jb ": 1,
                "jb ;jp ;je ;invalid;jns ": 1,
                "insb byte [rdi], dx;imul esp, dword [rbx + ], ;insd dword [rdi], dx;jb ;invalid": 1,
                "jne ;jb ;je ;jb ;jb ": 1,
                "je ;jb ;jb ;outsb dx, byte [rsi];xor dword gs:[rax], esp": 1,
                "movsxd rbp, dword [rbx + ];je ;outsd dx, dword [rsi];jne ;movsxd rsp, dword [rbp + ]": 1,
                "invalid;jae ;jb ;ja ;jo ": 1,
                "outsd dx, dword [rsi];jne ;outsb dx, byte [rsi];je ;jne ": 1,
                "movsxd rsi, dword [rdx];add byte [rdx], al;add al, ;test dword [rcx], ;or al, byte [rax]": 2,
                "or al, 0;ret ;cmp al, 5;invalid;add eax, ": 2,
                "invalid;add ebp, esp;invalid;add al, byte [rsi + rcx];add al, byte [rbx]": 2,
                "add al, byte [rdx + rax];add dword [rdx], eax;add al, ;invalid;add al, ": 2,
                "invalid;add al, ;invalid;add cl, byte [rdx];add al, 2": 2,
                "or dword [rdx], eax;add dword [rdx], eax;invalid;add al, byte [rbx];add al, byte [rcx]": 2,
                "mov eax, ;add al, byte [rbx];add al, byte [rcx];add al, byte [rdi];add cl, byte [rbx]": 2,
                "add esi, dword [rdx];add ecx, dword [];add esp, dword [rbx + rax];add dl, byte [rdx];invalid": 2,
                "add al, 2;invalid;add al, byte [rcx];add al, byte [rcx];sbb dword [rbx], eax": 2,
                "add ebp, dword [rbx + rax];sub eax, ;add ebp, dword [rcx];lar eax, word [rdi + rdi*2];add al, ": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rax + ], dl;add byte [rax], r8b;add byte [rax], al": 2,
                "add byte [rax], al;add byte [rax], al;add byte [rcx - ], ah;or eax, dword [rax];jno ": 2,
                "add byte [rax], al;add byte [rcx - ], ah;or eax, dword [rax];jno ;or eax, dword [rax]": 2,
                "invalid;invalid;add byte fs:[rax], al;add bl, byte [rsi];mov al, 1": 2,
                "add bl, byte [rsi];mov al, 1;jrcxz ;scasd eax, dword [rdi];add dword [rcx], eax": 2,
                "add cl, byte [rcx];add dh, byte [];add al, byte [rdi];or eax, ;add cl, byte [rcx]": 2,
                "add byte [rax], al;movabs dword cs:[], eax;or eax, dword [rax];add eax, dword [rax];add byte [rax], al": 2,
                "add al, bl;add eax, dword [rsp + rax + ];sbb dword [rdx], eax;invalid;add dword [], eax": 2,
                "add dword [rdx], eax;add eax, ;or al, byte [rax];add byte [rax], ch;add al, byte [rsi + 2]": 2,
                "sbb byte [rbx], al;invalid;cmovs edx, dword [rax];invalid;or eax, ": 2,
                "invalid;cmovs edx, dword [rax];invalid;or eax, ;add cl, byte [rcx]": 2,
                "invalid;add eax, ;add eax, ;invalid;invalid": 2,
                "or al, byte [rax];sbb byte [rbx + ], 0;add byte [rax], al;add byte [rax], al;xor byte [rbx + rcx + ], ah": 1,
                "sbb byte [rbx + ], 0;add byte [rax], al;add byte [rax], al;xor byte [rbx + rcx + ], ah;add byte [rax], al": 1,
                "add edi, dword [rdi + ];invalid;add dword [rdi - ], edi;add edi, dword [rdi];add cl, byte [rcx]": 2,
                "invalid;or byte [], al;add eax, ;adc cl, byte [rdx];adc eax, ": 2,
                "adc cl, byte [rdx];adc eax, ;adc cl, byte [rax + rcx];add al, byte [rbx];add al, byte []": 2,
                "movsxd rbp, dword [rcx + ];push ;outsd dx, dword [rsi];jb ;jns ": 2,
                "adc al, ;add al, ;invalid;or al, byte [];sysret": 2,
                "or al, byte [];sysret;add eax, ;invalid;invalid": 2,
                "add byte [rax], ch;add bh, byte [rbx];add cl, byte [rcx];add cl, byte [rdx];add cl, byte [rdi + 7]": 2,
                "push rax;add qword [r8 + ], r10;invalid;invalid;add dh, bl": 1,
                "outsd dx, dword [rsi];invalid;invalid;jae ;jae ": 1,
                "add esi, dword [rax];adc dword [rdx], eax;adc bh, byte [rdx];adc dword [], ecx;invalid": 1,
                "add byte [rdx + ], ch;add bl, byte [rax];add r10b, byte [r10 + 4];add dword [rdx + rax], eax;invalid": 1,
                "invalid;push rbx;invalid;push rsp;invalid": 1,
                "invalid;add cl, byte [rax];add al, byte [rdx];mov word [rdx], es;or dword [rdx], edx": 1,
                "pop rbp;add al, ;add edx, dword [rdx];invalid;invalid": 1,
                "sub cl, byte [rdx];pop rbp;add cl, byte [rdx + rax];invalid;add dword [rsp + rax], edx": 1,
                "pop rbp;add cl, byte [rdx + rax];invalid;add dword [rsp + rax], edx;invalid": 1,
                "add eax, ;invalid;or dword [rcx + ], ebx;adc al, byte [rdi + rdi];add byte [rax], al": 1,
                "adc al, byte [rdi + rdi];add byte [rax], al;add byte [rax], al;invalid;jge ": 1,
                "add al, ch;mov bh, ;add byte [rax], bl;add byte [rax], al;add byte [rax], al": 1,
                "adc ecx, dword [rdx + 1];or al, byte [rax];add byte [rdx + rax], ah;pop rax;add dl, byte [rbx + rax]": 1,
                "add byte [rdx + rax], ah;pop rax;add dl, byte [rbx + rax];or al, byte [rax];add byte [rdx], ch": 1,
                "add byte [rax], al;or byte [rcx], bh;outsd dx, dword [rsi];add byte [rax], al;add byte [rax], al": 1,
                "jb ;outsb dx, byte [rsi];add byte [eax], al;add bl, byte [rsi];movabs al, byte []": 1,
                "add bh, byte [rcx];invalid;invalid;add al, byte [rbx];invalid": 1,
                "add edx, dword [rsi + rax];adc dword [], eax;invalid;or byte [rax], cl;invalid": 1,
                "mov bl, ;adc eax, dword [rax];iretd;sub edx, dword [rbx];add al, ah": 1,
                "add byte [rax], al;add ah, bl;lodsd eax, dword [rsi];outsd dx, dword [rsi];add byte [rax], al": 1,
                "add byte [rdx], al;invalid;add dword [rsi + ], edx;add dword [rsi], edi;pop qword [rcx]": 2,
                "add dword [rsi], edi;pop qword [rcx];add dword [rax + ], edx;add dword [rax + ], edx;or al, byte [rax]": 2,
                "invalid;add eax, ;or al, byte [rax];add byte [rax], al;add byte [rax], al": 2,
                "add byte [rax], al;add byte [rax], al;rol cl, ;add byte [rax], al;add byte [rax], al": 2,
                "add byte [rax], al;add al, cl;sub al, ;add byte [rax], ch;add byte [rax], al": 2,
                "invalid;adc ecx, ebp;invalid;sub eax, ;sub byte [rdx], al": 1,
                "add byte [rax], al;sub byte [rax + ], al;add dword [rdx], ecx;add bl, byte [rax];add dword [rdx], ecx": 1,
                "add dword [rdx], ecx;add byte [rax], al;add byte [rax], al;mov al, ;pop rcx": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rcx + rcx], al;adc eax, dword cs:[rax];adc al, ": 1,
                "invalid;jae ;movsxd rbp, dword [rdi];movsxd rsi, dword [rdx + ];jo ": 5,
                "push ;invalid;invalid;outsd dx, dword cs:[esi];add byte [rax], al": 1,
                "jb ;invalid;invalid;imul ebp, dword [rsi + ], ;outsd dx, dword [rsi]": 2,
                "movsxd rsi, dword [rdx + ];xor esi, dword [rdx];pop rdi;outsb dx, byte gs:[esi];jb ": 2,
                "jb ;movsxd rbp, dword [rsi];outsd dx, dword [esi];add byte [rax], al;invalid": 2,
                "movsxd rsi, dword [rdx + ];xor esi, dword [rdx];outsd dx, dword cs:[esi];add byte [rax], al;invalid": 2,
                "outsb dx, byte [rsi];je ;outsd dx, dword [esi];add byte [rax], al;invalid": 2,
                "pop rdi;invalid;imul esi, dword [rdi + rbx*2 + ], ;jb ;outsd dx, dword [esi]": 1,
                "invalid;imul esp, dword fs:[rbx + ], ;outsd dx, dword [rsi];jb ;outsd dx, dword [esi]": 1,
                "xor eax, eax;lea r8, [var_20h];mov rdi, r8;rep stosq qword [rdi], rax;mov rdi, qword []": 1,
                "mov rdi, qword [];mov r9d, dword [rdi];test r9d, r9d;jne ;mov rax, qword gs:[]": 1,
                "jne ;mov rax, qword gs:[];mov rbx, qword [];mov rsi, qword [rax + 8];xor ebp, ebp": 1,
                "mov eax, dword [rsi];cmp eax, 1;je ;mov eax, dword [rsi];test eax, eax": 1,
                "mov dword [], 1;mov eax, dword [rsi];cmp eax, 1;je ;test ebp, ebp": 1,
                "mov rax, qword [];mov qword [], rax;call fcn.0063e570;xor ecx, ecx;mov rax, qword [rax]": 1,
                "test dl, dl;je ;and ecx, 1;je ;mov ecx, 1": 1,
                "mov rcx, qword [r13 + rbx*8];call sub.msvcrt.dll_strlen;lea rsi, [rax + 1];mov rcx, rsi;call sub.msvcrt.dll_malloc": 1,
                "add rbx, 1;cmp rbp, rax;jne ;lea rax, [rdi + r12 - 8];mov qword [rax], 0": 1,
                "je ;mov edx, dword [];test edx, edx;je ;add rsp, ": 1,
                "movzx eax, word [var_60h];jmp ;mov rsi, qword [];mov ebp, 1;mov eax, dword [rsi]": 1,
                "pop rbp;pop r12;pop r13;ret;mov rdx, qword []": 1,
                "cmp qword [arg_38h], 0;je ;mov rax, qword [arg_30h];mov rcx, qword [rax];test rcx, rcx": 1,
                "mov rax, qword [arg_30h];mov rcx, qword [rax];test rcx, rcx;je ;mov rdx, rcx": 1,
                "mov qword [var_8h], rax;call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.004015d0": 1,
                "mov qword [var_10h], rbp;lea rbp, [var_10h];call fcn.00401e80;mov rax, qword [arg_20h];mov qword [rsp], rax": 4,
                "mov qword [rsp], rax;mov rax, qword [arg_28h];mov qword [var_8h], rax;call fcn.004017a0;mov rbp, qword [var_10h]": 4,
                "call fcn.00401e40;mov rax, qword [var_18h];test rax, rax;jl ;cmp rax, 4": 5,
                "lea rdx, [rax - 4];mov rbx, rdx;neg rdx;sar rdx, ;and rdx, 4": 5,
                "jmp ;mov rax, qword [var_78h];mov rcx, qword [var_50h];jmp ;mov byte [var_27h], cl": 5,
                "mov qword [var_40h], rax;xor edx, edx;jmp ;lea rdx, [r8 + 1];cmp rdx, rax": 5,
                "mov rsi, qword [];cmp qword [], rdx;jbe ;mov r8, rdx;shl rdx, 5": 4,
                "cmp r9, rbx;jne ;mov qword [var_38h], rdx;mov qword [var_30h], r8;mov qword [rsp], rsi": 4,
                "jne ;mov qword [var_38h], rdx;mov qword [var_30h], r8;mov qword [rsp], rsi;mov qword [var_8h], rdi": 4,
                "mov byte [rax + rdx + ], 1;mov rax, qword [];cmp qword [], rcx;jbe ;movzx ebx, byte [var_27h]": 4,
                "call fcn.004309d0;mov rax, qword [var_78h];mov rcx, qword [var_50h];jmp ;mov qword [var_40h], r9": 4,
                "call fcn.004309d0;mov rax, qword [var_78h];mov rcx, qword [var_50h];jmp ;mov rcx, qword [var_28h]": 1,
                "movzx esi, byte [rdx + rbx];cmp sil, cl;jne ;mov qword [arg_20h], rbx;ret": 1,
                "cmp eax, 7;jae ;mov rbp, qword [var_30h];add rsp, ;ret": 2,
                "setb byte [];bt eax, ;setb byte [];mov rbp, qword [var_30h];add rsp, ": 2,
                "lea rax, [];call fcn.004580f0;lea rdi, [rcx + ];lea rax, [];call fcn.004580f0": 28,
                "xgetbv;mov dword [arg_8h], eax;mov dword [arg_ch], edx;ret;int3": 3,
                "call fcn.00456090;jmp fcn.00402450;int3;int3;int3": 5,
                "add rax, ;mov qword [rsp + 8], rax;call fcn.00403c00;movzx eax, byte [rsp + ];mov byte [rsp + ], al": 5,
                "cmp rsp, qword [rcx + ];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 13,
                "mov rbx, qword [rsp + ];add rax, rbx;mov qword [rsp + 8], rax;call fcn.00402450;cmp byte [rsp + ], 0": 2,
                "ret;mov byte [rsp + ], 1;mov rbp, qword [rsp + ];add rsp, ;ret": 20,
                "mov byte [rsp + ], 1;mov rbp, qword [rsp + ];add rsp, ;ret;call fcn.00456090": 19,
                "int3;int3;int3;jmp loc.00402730;int3": 2,
                "int3;int3;mov rbx, qword [rsp + 8];mov eax, dword [rsp + ];xchg dword [rbx], eax": 2,
                "int3;int3;int3;mov rax, qword [rsp + 8];mov rcx, qword [rsp + ]": 31,
                "mov byte [], 2;mov rbp, qword [rsp];add rsp, 8;ret;call fcn.00456090": 129,
                "jmp ;cmp r8, ;jbe ;movdqu xmm0, xmmword [rsi];movdqu xmm1, xmmword [rdi]": 3,
                "cmp r8, ;jbe ;movdqu xmm0, xmmword [rsi];movdqu xmm1, xmmword [rdi];pcmpeqb xmm1, xmm0": 3,
                "add rsi, ;add rdi, ;sub r8, ;jmp ;add rsi, ": 3,
                "ret;xor rax, rax;xor rcx, rcx;cmp rbx, rdx;setg al": 3,
                "setg al;sete cl;lea rax, [rcx + rax*2 - 1];mov qword [r9], rax;ret": 3,
                "vmovdqu ymm3, ymmword [rdi];vmovdqu ymm4, ymmword [rsi + ];vmovdqu ymm5, ymmword [rdi + ];vpcmpeqb ymm0, ymm3, ymm2;vpmovmskb eax, ymm0": 3,
                "cmp r8, ;jb ;jmp ;vzeroupper;jmp ": 3,
                "mov al, byte [arg_18h];lea r8, [arg_20h];jmp ;int3;int3": 8,
                "jl ;mov r12, 0;mov rdi, rsi;cmp rbx, ;ja ": 4,
                "pcmpeqb xmm1, xmm0;pmovmskb edx, xmm1;popcnt edx, edx;add r12, rdx;add rdi, ": 4,
                "popcnt edx, edx;add r12, rdx;add rdi, ;cmp rdi, rax;jbe ": 4,
                "cmp rdi, rax;jbe ;mov rsi, qword [arg_8h];mov rbx, qword [arg_10h];mov rdi, qword [arg_18h]": 1,
                "mov rcx, ;sub rcx, rbx;mov r10, ;sar r10, cl;shl r10, cl": 5,
                "sub rcx, rbx;mov r10, ;sar r10, cl;shl r10, cl;movdqu xmm1, xmmword [rsi + rbx - ]": 2,
                "je ;mov rdi, r11;vmovdqu ymm2, ymmword [rdi];vpcmpeqb ymm3, ymm2, ymm1;vpmovmskb edx, ymm3": 2,
                "shl r10, cl;and rdx, r10;popcnt edx, edx;add r12, rdx;mov qword [r8], r12": 2,
                "mov rsi, qword [arg_8h];mov rdi, qword [arg_20h];cmp rsi, rdi;je ;lea rax, [arg_38h]": 3,
                "vmovdqu ymm0, ymmword [rsi];vmovdqu ymm1, ymmword [rdi];vmovdqu ymm2, ymmword [rsi + ];vmovdqu ymm3, ymmword [rdi + ];vpcmpeqb ymm4, ymm0, ymm1": 4,
                "mov byte [rax], 0;ret;vzeroupper;cmp rbx, 8;jbe ": 3,
                "mov rdx, qword [rdi + rbx - 8];cmp rcx, rdx;sete byte [rax];ret;cmp rbx, 0": 2,
                "cmp rcx, rdx;sete byte [rax];ret;cmp rbx, 0;je ": 2,
                "cmp rbx, 0;je ;lea rcx, [rbx*8];neg rcx;cmp sil, ": 2,
                "mov rdx, qword [arg_10h];mov rbp, qword [arg_18h];mov rax, qword [arg_20h];mov r10, rdi;lea r11, [arg_28h]": 4,
                "cmp esi, ebp;je ;add rdi, 1;mov rsi, qword [arg_8h];mov rdi, qword [arg_10h]": 1,
                "cmp rbx, ;jl ;mov rdi, rsi;cmp rbx, ;ja ": 3,
                "movdqu xmm1, xmmword [rdi];pcmpeqb xmm1, xmm0;pmovmskb edx, xmm1;bsf edx, edx;jne ": 2,
                "mov rdi, rax;movdqu xmm1, xmmword [rax];pcmpeqb xmm1, xmm0;pmovmskb edx, xmm1;bsf edx, edx": 2,
                "ret;movdqu xmm1, xmmword [rsi + rbx - ];pcmpeqb xmm1, xmm0;pmovmskb edx, xmm1;mov ecx, ebx": 2,
                "mov qword [rsp + ], rax;mov rbp, qword [rsp + ];add rsp, ;ret;int3": 2,
                "mov qword [var_10h], rax;call fcn.00409930;mov rax, qword [var_18h];mov qword [arg_40h], rax;mov rbp, qword [var_20h]": 3,
                "mov rax, qword [arg_30h];movss xmm0, dword [rax];xorps xmm1, xmm1;ucomiss xmm0, xmm1;jne ": 3,
                "mov ebx, ecx;shl ecx, ;xor ebx, ecx;mov ecx, edx;xor edx, ebx": 5,
                "mov rax, qword [arg_48h];mov rcx, qword [rax];test rcx, rcx;je ;mov rcx, qword [rcx + 8]": 3,
                "lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.0042f900;ud2": 57,
                "movzx eax, byte [rax];mov rcx, qword [rsp + 8];cmp byte [rcx], al;sete byte [rsp + ];ret": 2,
                "movss xmm0, dword [rax];mov rax, qword [rsp + ];movss xmm1, dword [rax];ucomiss xmm0, xmm1;sete cl": 2,
                "mov rax, qword [rsp + ];movss xmm1, dword [rax];ucomiss xmm0, xmm1;sete cl;setnp al": 2,
                "ucomiss xmm0, xmm1;sete cl;setnp al;and ecx, eax;mov byte [rsp + ], cl": 2,
                "ucomisd xmm0, xmm1;sete cl;setnp al;and ecx, eax;mov byte [rsp + ], cl": 2,
                "add rsp, ;ret;mov qword [rsp], rax;call fcn.00450200;mov rax, qword [var_10h]": 6,
                "je ;mov rax, qword [rax + 8];mov rcx, qword [rax + ];mov rdx, qword [rcx + 8];test rdx, rdx": 2,
                "jne ;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;mov qword [var_10h], ": 3,
                "mov qword [var_10h], ;call fcn.0042d590;mov rbp, qword [var_18h];add rsp, ;ret": 4,
                "mov rax, qword [rax];mov rax, qword [rax + ];mov rax, qword [rax + ];test byte [rax], al;mov rcx, qword [rax + ]": 5,
                "cmp qword [rax + ], rcx;je ;mov rbp, qword [var_10h];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [var_8h], rcx;call fcn.00404250;jmp ;int3;int3": 17,
                "call fcn.00404250;jmp ;int3;int3;int3": 17,
                "int3;sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h];cmp byte [], 0": 9,
                "mov rax, qword [arg_48h];mov qword [var_10h], rax;call fcn.00401710;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rcx, qword [arg_48h];mov qword [var_8h], rcx;call fcn.00404250;jmp ;int3": 6,
                "mov rax, qword gs:[];mov rax, qword [rax];mov rax, qword [rax + ];mov qword [var_20h], rax;inc qword [rax + ]": 8,
                "mov rax, qword [rax];mov qword [var_58h], rax;mov rcx, qword [rax + ];cmp qword [rcx + ], rax;jne ": 8,
                "mov rcx, qword gs:[];mov rcx, qword [rcx];sub rsp, ;mov qword [var_10h], rbp;lea rbp, [var_10h]": 1,
                "mov rcx, qword [rcx + ];inc dword [rcx + ];mov rcx, qword gs:[];mov rcx, qword [rcx];mov rdx, qword [rcx + ]": 7,
                "movups xmm0, xmmword [var_30h];movups xmmword [rax + ], xmm0;movups xmm0, xmmword [var_40h];movups xmmword [rax + ], xmm0;mov rbp, qword [var_60h]": 7,
                "movups xmmword [rax + ], xmm0;mov rbp, qword [var_60h];add rsp, ;ret;call fcn.00430940": 6,
                "mov rax, qword gs:[];mov rax, qword [rax];sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h]": 1,
                "mov dword [rsp], 8;lea rax, [];mov qword [var_8h], rax;lea rax, [var_47h];mov qword [var_10h], rax": 5,
                "mov rax, qword [rax + ];cmp byte [], 0;je ;add rax, ;mov rcx, qword [rax]": 4,
                "mov rdx, qword [rax + 8];mov rax, qword [rax + ];mov qword [rsp], 0;mov qword [var_8h], rcx;mov qword [var_10h], rdx": 4,
                "mov qword [var_10h], rdx;mov dword [var_18h], eax;mov dword [var_1ch], 0;call fcn.004560a0;mov byte [var_47h], 0": 4,
                "mov byte [var_47h], 0;call fcn.0042f500;mov rbp, qword [var_68h];add rsp, ;ret": 4,
                "call fcn.00406f10;jmp ;call fcn.0042f500;mov rbp, qword [var_68h];add rsp, ": 4,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rdi;mov qword [var_10h], rdx;sub rsp, ": 1,
                "mov edx, dword [rcx + ];lea ebx, [rdx - 1];mov dword [rcx + ], ebx;cmp edx, 1;jne ": 39,
                "mov qword [rax + ], ;call fcn.0043a110;mov rbp, qword [rsp];add rsp, 8;ret": 1,
                "jne ;mov rcx, qword [rcx];mov qword [var_28h], rcx;mov qword [rsp], rcx;call fcn.00405670": 2,
                "jne ;mov rax, qword [var_30h];movzx ecx, byte [rax + ];and ecx, ;cmp cl, ": 2,
                "movzx ebx, byte [rax + ];mov qword [rsp], rax;mov qword [var_8h], rdx;test bl, ;sete byte [var_10h]": 2,
                "lea rax, [];mov qword [var_18h], rax;mov qword [var_20h], ;call fcn.00404bc0;mov rbp, qword [var_38h]": 3,
                "mov rax, rcx;xor ecx, ecx;jmp ;cmp dl, ;jne ": 1,
                "cmp cl, ;sete cl;jmp ;mov rbp, qword [var_38h];add rsp, ": 1,
                "mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_70h], rbp": 140,
                "movzx ecx, byte [rax + ];test cl, ;jne ;and ecx, ;cmp cl, ": 2,
                "mov byte [var_10h], 1;movzx ecx, byte [arg_91h];mov byte [var_11h], cl;mov rbx, qword [arg_98h];mov qword [var_18h], rbx": 2,
                "mov rax, qword [arg_98h];mov qword [var_18h], rax;mov rax, qword [arg_a0h];mov qword [var_20h], rax;call fcn.00404bc0": 4,
                "mov rax, qword [arg_a0h];mov qword [var_20h], rax;call fcn.00404bc0;mov rbp, qword [var_70h];add rsp, ": 2,
                "cmp cl, ;je ;cmp cl, ;jne ;mov rax, qword [arg_88h]": 2,
                "mov rbp, qword [var_70h];add rsp, ;ret;mov qword [var_58h], rcx;mov qword [rsp], rcx": 2,
                "jne ;mov rax, qword [arg_88h];mov rax, qword [rax + 8];mov qword [arg_88h], rax;mov qword [rsp], rax": 2,
                "mov qword [arg_88h], rax;mov qword [rsp], rax;call fcn.00405670;cmp byte [var_8h], 0;je ": 3,
                "je ;movzx eax, byte [arg_91h];test al, al;je ;mov rax, qword [var_58h]": 2,
                "je ;mov rax, qword [arg_88h];mov rax, qword [rax];mov qword [rsp], rax;call fcn.00405670": 2,
                "jmp ;mov qword [var_28h], rcx;mov qword [var_48h], rdx;mov rcx, qword [rax + ];mov qword [rsp], rcx": 1,
                "mov qword [var_18h], rcx;mov rbx, qword [arg_a0h];mov qword [var_20h], rbx;call fcn.00404bc0;mov rax, qword [arg_80h]": 1,
                "ret;mov rbp, qword [var_70h];add rsp, ;ret;movzx eax, byte [arg_90h]": 1,
                "movzx eax, byte [arg_91h];test al, al;je ;mov rax, qword [arg_88h];mov qword [rsp], rax": 1,
                "jmp ;mov rbp, qword [var_70h];add rsp, ;ret;mov rax, qword [arg_88h]": 1,
                "jle ;mov qword [var_40h], rax;xor edx, edx;jmp ;mov rbx, qword [var_60h]": 1,
                "mov qword [var_38h], rdx;mov rax, qword [rcx + ];mov rbx, qword [rcx + 8];mov qword [rsp], rbx;shr rax, 1": 1,
                "mov byte [var_11h], al;mov rsi, qword [arg_98h];mov qword [var_18h], rsi;mov rdi, qword [arg_a0h];mov qword [var_20h], rdi": 1,
                "mov rcx, qword [var_40h];cmp rax, rcx;jl ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "sub rsp, ;mov qword [var_60h], rbp;lea rbp, [var_60h];mov rax, qword [arg_70h];mov qword [rsp], rax": 16,
                "mov rax, qword [arg_70h];mov qword [rsp], rax;call skip;cmp qword [var_8h], 0;jne ": 1,
                "mov qword [rsp], rax;call skip;cmp qword [var_8h], 0;jne ;mov rax, qword []": 1,
                "jne ;mov rax, qword [];test rax, rax;je ;mov rcx, qword [rax + 8]": 3,
                "cmp rbx, rcx;jge ;mov rsi, qword [rax + rbx*8];mov rdi, qword [rsi + ];mov r8, rdx": 3,
                "test rax, rax;je ;movabs rdx, ;add rdx, rax;mov rbx, rdx": 1,
                "mov rbx, rdx;shr rdx, ;cmp rdx, ;jae ;lea rsi, []": 9,
                "shr rbx, 3;and rbx, 3;add rdx, ;mov qword [var_48h], rdi;mov r8, qword [rcx + ]": 1,
                "mov qword [var_48h], rdi;mov r8, qword [rcx + ];mov qword [var_38h], r8;xor ecx, ecx;jmp ": 1,
                "mov dword [var_ch], esi;mov qword [var_10h], rdx;call fcn.004157e0;mov esi, dword [var_24h];mov ebx, dword [var_20h]": 1,
                "mov rax, qword [var_18h];mov rdx, qword [var_28h];mov rdi, qword [var_48h];mov r8, qword [var_38h];mov r10, qword [var_40h]": 1,
                "xor ebx, ebx;xor eax, eax;jmp ;mov qword [arg_88h], rax;mov qword [arg_90h], 0": 1,
                "jmp ;mov qword [arg_88h], rax;mov qword [arg_90h], 0;mov rbp, qword [var_60h];add rsp, ": 1,
                "mov rax, qword [arg_78h];mov qword [rsp], rax;mov rax, qword [arg_80h];mov qword [var_8h], rax;call fcn.0040ac60": 5,
                "mov qword [var_8h], rax;call fcn.0042f900;ud2;call fcn.0042e8e0;ud2": 9,
                "call ;cmp byte [var_8h], 0;jne ;mov rax, qword [];test rax, rax": 2,
                "cmp byte [var_8h], 0;jne ;mov rax, qword [];test rax, rax;je ": 2,
                "jmp ;mov byte [arg_28h], 1;mov rbp, qword [var_10h];add rsp, ;ret": 1,
                "mov rbp, qword [var_10h];add rsp, ;ret;mov byte [arg_28h], 0;mov rbp, qword [var_10h]": 13,
                "mov qword [rsp + ], rcx;mov qword [rsp + ], rax;mov rcx, qword [rsp + ];mov qword [rsp], rcx;mov qword [rsp + 8], rax": 1,
                "call fcn.0040e060;cmp byte [var_8h], 0;je ;mov rbp, qword [var_28h];add rsp, ": 2,
                "mov qword [var_18h], rax;mov rax, qword [arg_38h];mov qword [var_20h], rax;lea rax, [var_10h];mov qword [rsp], rax": 2,
                "ret;mov rax, qword [arg_30h];mov qword [rsp], rax;mov rax, qword [arg_40h];mov qword [var_8h], rax": 3,
                "mov qword [var_8h], rax;mov rax, qword [arg_48h];mov qword [var_10h], rax;mov rax, qword [arg_50h];mov qword [var_18h], rax": 10,
                "movzx ecx, byte [rax + ];test cl, ;jne ;mov rax, qword [arg_60h];mov qword [rsp], rax": 4,
                "mov rdx, qword [rcx];mov rbx, qword [var_28h];sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h]": 1,
                "mov rbx, qword [var_28h];sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h];mov rax, qword [arg_40h]": 1,
                "mov rcx, rdx;mov rdx, qword [arg_78h];cmp rax, rdx;jl ;mov rbp, qword [var_30h]": 3,
                "ret;mov rbp, qword [var_30h];add rsp, ;ret;mov rbp, qword [var_30h]": 6,
                "mov qword [var_78h], rbp;lea rbp, [var_78h];mov rax, qword [arg_88h];mov rcx, qword [rax + 8];mov rdx, qword [arg_98h]": 4,
                "mov rcx, qword [rcx];mov rdi, qword [arg_90h];xor r8d, r8d;jmp ;inc r8": 4,
                "setb r11b;test r11b, r11b;je ;mov rax, r10;sub r10, rdi": 4,
                "test r11b, r11b;je ;mov rax, r10;sub r10, rdi;mov rcx, qword [r9 + ]": 4,
                "mov rax, r10;sub r10, rdi;mov rcx, qword [r9 + ];lea rsi, [r10 + r12];mov qword [rsp], rsi": 8,
                "jmp ;sub rsp, ;mov qword [var_20h], rbp;lea rbp, [var_20h];mov rax, qword [arg_30h]": 1,
                "mov r8, rsi;shr rsi, ;cmp rsi, ;jae ;lea r9, []": 3,
                "lea r9, [];mov rsi, qword [r9 + rsi*8];shr r8, ;mov r9, r8;and r8, ": 3,
                "mov r9, r8;and r8, ;mov r8, qword [rsi + r8*8];mov r10, rdi;shr rdi, ": 3,
                "mov eax, dword [var_30h];mov rcx, qword [arg_90h];mov rdx, qword [arg_98h];mov rbx, qword [arg_a0h];mov rsi, qword [var_48h]": 2,
                "mov rdx, qword [arg_98h];mov rbx, qword [arg_a0h];mov rsi, qword [var_48h];mov rdi, qword [var_40h];mov r8, qword [var_38h]": 2,
                "movups xmmword [var_58h], xmm0;movups xmmword [var_68h], xmm0;lea rsi, [];mov qword [var_50h], rsi;mov qword [var_58h], rax": 2,
                "mov rbp, qword [var_78h];add rsp, ;ret;lea rax, [];mov qword [rsp], rax": 5,
                "mov rsi, qword [arg_48h];add rax, rsi;mov qword [var_30h], rax;xor esi, esi;xor edi, edi": 2,
                "mov qword [var_30h], rax;xor esi, esi;xor edi, edi;jmp ;add rsi, 8": 2,
                "xor edi, edi;jmp ;add rsi, 8;cmp rsi, rbx;jae ": 2,
                "jae ;test rsi, ;jne ;movzx edi, byte [rdx];inc rdx": 2,
                "mov edi, dword [var_14h];jmp ;shr edi, 1;jmp ;mov rbp, qword [var_38h]": 1,
                "mov rdi, qword [rax + ];cmp qword [rdi], rbx;ja ;mov rdi, qword [rax + ];mov rdi, qword [rdi]": 2,
                "cmp rbx, rdi;mov r8, rbx;cmova rbx, rdi;mov r9, rdi;sub rdi, rbx": 2,
                "mov qword [arg_90h], rsi;mov qword [var_50h], rcx;mov qword [var_28h], rbx;mov qword [rsp], rdi;mov qword [var_8h], rcx": 2,
                "mov r8, qword [r8];cmp rbx, r8;mov r9, rbx;cmova rbx, r8;mov r10, r8": 2,
                "mov rax, qword [var_40h];mov rcx, qword [var_60h];mov rdx, qword [var_48h];mov rbx, qword [var_20h];mov rsi, qword [arg_90h]": 2,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], rbx;mov qword [var_18h], rsi;call fcn.00405e10": 2,
                "mov rbp, qword [var_68h];add rsp, ;ret;mov rbp, qword [var_68h];add rsp, ": 4,
                "ud2;call fcn.00444740;jmp fcn.00405f00;int3;int3": 2,
                "jmp fcn.00405f00;int3;int3;mov rcx, qword gs:[];mov rcx, qword [rcx]": 2,
                "mov rdx, qword [arg_50h];test rdx, rdx;jl ;mov qword [var_28h], rcx;test rax, rax": 3,
                "mov qword [rax + ], rcx;mov rcx, qword [arg_50h];mov qword [rax + 8], rcx;mov qword [arg_58h], rax;mov rbp, qword [var_38h]": 2,
                "mov qword [var_8h], rcx;mov byte [var_10h], 1;call fcn.0040ccf0;mov rax, qword [var_18h];cmp dword [], 0": 6,
                "jmp ;mov rcx, qword [var_30h];lea rdi, [rcx + ];call fcn.004580f0;jmp ": 3,
                "mov rax, qword [arg_38h];mov qword [rsp], rax;mov rax, qword [arg_40h];mov qword [var_8h], rax;mov byte [var_10h], 1": 2,
                "call fcn.004063e0;mov rbp, qword [var_28h];add rsp, ;ret;int3": 2,
                "jbe ;cmp qword [rax], rdx;sete dl;test dl, dl;je ": 3,
                "cmp qword [rax], rcx;jb ;movzx ecx, byte [arg_90h];test cl, cl;jne ": 3,
                "mov byte [arg_a0h], 0;mov rbp, qword [var_70h];add rsp, ;ret;mov rax, qword gs:[]": 3,
                "mov qword [rax + ], ;cmp dword [], 0;jne ;mov rdx, qword [arg_88h];mov qword [rax + ], rdx": 3,
                "mov qword [r11 + ], rax;mov qword [rsi + ], rax;sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h]": 1,
                "mov word [var_10h], ;mov qword [var_18h], 3;call fcn.00431c60;mov rax, qword [var_30h];mov rcx, qword [var_38h]": 2,
                "mov rbp, qword [var_70h];add rsp, ;ret;mov rdi, qword [var_50h];mov rcx, rax": 2,
                "add rsp, ;ret;mov rdi, qword [var_50h];mov rcx, rax;xor eax, eax": 5,
                "mov rdi, r10;call fcn.004580f0;mov rdi, r13;jmp ;cmp dword [], 0": 2,
                "call fcn.004580f0;mov rdi, r9;mov r11, rax;xor eax, eax;call fcn.004580f0": 2,
                "jmp ;mov rsi, rax;mov rax, qword [arg_80h];call fcn.004580f0;mov rax, rsi": 2,
                "mov rcx, qword [rax];mov qword [var_18h], rcx;mov rdx, qword [arg_48h];mov rbx, qword [rdx];call rbx": 1,
                "call rbx;mov rax, qword [var_18h];test byte [rax], al;cmp dword [], 0;jne ": 1,
                "lea rdi, [rax + ];mov rcx, rax;mov rax, qword [arg_38h];call fcn.004580f0;mov rax, rcx": 1,
                "mov rcx, qword [arg_40h];mov qword [var_10h], rcx;call fcn.00406b60;cmp dword [], 0;jne ": 1,
                "call fcn.00416290;mov rax, qword [arg_38h];mov rax, qword [rax];mov rcx, qword [var_20h];mov qword [rsp], rcx": 2,
                "mov rax, qword [arg_38h];mov rax, qword [rax];mov rcx, qword [var_20h];mov qword [rsp], rcx;mov rcx, qword [arg_48h]": 2,
                "mov rcx, qword [var_20h];mov qword [rsp], rcx;mov rcx, qword [arg_48h];mov qword [var_8h], rcx;mov qword [var_10h], rax": 2,
                "mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.00459210;mov rbp, qword [var_28h];add rsp, ": 5,
                "mov rcx, qword [var_20h];mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.00459210;mov rbp, qword [var_28h]": 3,
                "mov qword [rcx + ], rdx;mov qword [var_10h], rcx;mov rax, qword [arg_40h];lea rcx, [rax + ];mov qword [rsp], rcx": 4,
                "mov rax, qword [var_8h];test rax, rax;je ;mov qword [var_20h], rax;mov rcx, qword [rax + ]": 4,
                "mov rax, rcx;jmp ;mov rax, qword [arg_40h];mov rdx, qword [rax + ];mov qword [rsp], rdx": 4,
                "jmp ;mov rcx, qword [var_20h];lea rdi, [rcx + ];xor eax, eax;call fcn.004580f0": 4,
                "mov qword [rcx + ], rax;mov qword [var_10h], rcx;mov rax, qword [arg_40h];lea rcx, [rax + ];mov qword [rsp], rcx": 4,
                "mov qword [var_8h], rax;mov byte [var_10h], 1;call fcn.00406f90;movzx eax, byte [var_19h];mov byte [arg_40h], al": 4,
                "lea rax, [rsp - 8];cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_80h], rbp": 199,
                "mov rdx, qword [arg_98h];test rdx, rdx;jne ;mov rdx, qword [rax + ];mov qword [rsp], rdx": 4,
                "test rdx, rdx;jne ;mov rdx, qword [rax + ];mov qword [rsp], rdx;sub rsp, ": 1,
                "mov qword [rsp], rdx;mov qword [var_8h], rcx;call fcn.00414f80;mov rax, qword [arg_90h];mov rcx, qword [rax + ]": 3,
                "add rsp, ;ret;mov qword [var_40h], rcx;mov rbx, qword [rax + ];mov qword [rsp], rbx": 3,
                "mov qword [var_60h], rdi;mov qword [var_58h], rbx;mov qword [var_50h], rsi;lea r9, [r8 + ];mov r10, qword [r8 + ]": 3,
                "cmp dword [], 0;jne ;mov qword [rax + ], r10;mov qword [r10 + ], rax;mov qword [r8 + ], rax": 3,
                "mov qword [rsp], rax;mov rax, qword [var_68h];mov qword [var_8h], rax;mov word [var_10h], ;mov qword [var_18h], 3": 3,
                "mov rax, qword [var_38h];mov rcx, qword [var_48h];cmp qword [rcx + ], rax;jne ;cmp dword [], 0": 3,
                "cmp rax, 0;setne byte [arg_a9h];mov rbp, qword [var_80h];add rsp, ;ret": 3,
                "xor eax, eax;call fcn.004580f0;mov rdi, qword [var_58h];xor eax, eax;call fcn.004580f0": 3,
                "call fcn.004580f0;mov rdi, qword [var_58h];xor eax, eax;call fcn.004580f0;mov rax, rcx": 3,
                "mov rdi, r8;mov r12, rax;mov rax, r10;call fcn.004580f0;lea rdi, [rax + ]": 3,
                "jmp ;cmp dword [], 0;jne ;mov qword [rax + ], 0;mov qword [r8 + ], rax": 3,
                "mov r12, rax;xor eax, eax;call fcn.004580f0;lea rdi, [r8 + ];mov rax, r12": 2,
                "xor eax, eax;call fcn.004580f0;mov rax, r9;mov rdi, r8;mov r8, r10": 1,
                "mov rdi, rax;mov rax, rdx;call fcn.004580f0;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rbx, qword [arg_48h];test rbx, rbx;jne ;mov rcx, qword [arg_40h];test byte [rcx], al": 1,
                "call rbx;mov rax, qword [var_20h];test byte [rax], al;cmp dword [], 0;jne ": 1,
                "call fcn.00457a60;mov rax, qword [rsp];mov rcx, qword [arg_40h];mov qword [rcx + ], rax;mov rax, qword [var_20h]": 1,
                "mov qword [rax + ], rcx;cmp qword [rax + 8], rcx;jne ;mov qword [rax + ], 0;mov rcx, qword [rax + ]": 1,
                "jbe ;sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h];mov rax, qword [arg_38h]": 133,
                "ret;call fcn.00456090;jmp fcn.00407880;int3;int3": 3,
                "int3;int3;mov rax, qword [arg_8h];test rax, rax;je ": 10,
                "mov rax, qword [arg_8h];test rax, rax;je ;mov rax, qword [rax + 8];mov qword [arg_10h], rax": 6,
                "jne ;xorps xmm0, xmm0;movups xmmword [rcx], xmm0;jmp ;mov rdi, rcx": 7,
                "mov rdi, rcx;xor eax, eax;call fcn.004580f0;lea rbx, [rcx + 8];mov rdi, rbx": 7,
                "je ;cmp eax, ;jne ;mov eax, 1;cmp byte [], 0": 8,
                "mov eax, 1;cmp byte [], 0;je ;xor eax, 1;mov byte [], al": 8,
                "call fcn.0040b600;movsxd rax, dword [];mov qword [var_10h], rax;lea rcx, [];mov qword [rsp], rcx": 9,
                "test rax, rax;jg ;mov rax, qword [var_10h];mov qword [arg_30h], rax;mov rbp, qword [var_18h]": 9,
                "mov qword [arg_30h], rax;mov rbp, qword [var_18h];add rsp, ;ret;call fcn.00456090": 16,
                "mov qword [var_28h], 0;lea rax, [];mov rax, qword [arg_8h];test rax, rax;je ": 1,
                "mov qword [var_10h], rax;call fcn.0042ec20;test eax, eax;jne ;mov rdx, qword [var_28h]": 6,
                "mov rcx, qword [rax + ];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 8,
                "call fcn.00430bf0;call fcn.004309d0;mov rax, qword [arg_30h];movzx eax, word [rax + ];mov rcx, qword gs:[]": 1,
                "mov qword [var_50h], rbp;lea rbp, [var_50h];mov rax, qword [];mov rcx, qword [];test rax, rax": 1,
                "je ;xor r8d, r8d;test r8b, r8b;jne ;inc rbx": 1,
                "mov qword [rsp], rsi;mov qword [var_8h], rdx;mov rax, qword [arg_60h];mov qword [var_10h], rax;mov qword [var_18h], rdx": 1,
                "xor esi, esi;jmp ;inc rsi;cmp rsi, rax;jge ": 10,
                "add edi, ;cmp r8b, ;jb ;cmp r8b, ;ja ": 2,
                "mov rax, qword [rsp + ];mov rcx, qword [rax];test rcx, rcx;jne ;lea rcx, []": 2,
                "call fcn.00450200;mov rax, qword [rsp + 8];mov rcx, qword [rsp + ];mov rdx, qword [rsp + ];mov rbx, qword [rdx + 8]": 2,
                "mov rax, qword [rsp + ];mov rcx, qword [rsp + 8];mov rdx, qword [rsp + ];cmp qword [rdx + ], 0;jne ": 2,
                "mov qword [rsp + ], rcx;mov qword [rsp + ], rax;lea rdi, [rsp + ];lea rsi, [];mov qword [rsp - ], rbp": 2,
                "mov rdx, qword [rsp + ];mov qword [rsp + ], rdx;mov rbx, qword [rsp + ];mov qword [rsp + ], rbx;mov qword [rsp], 0": 2,
                "jmp ;mov rax, qword [rsp + ];mov rcx, qword [rax + 8];mov qword [rsp], rcx;call fcn.00450430": 2,
                "mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rdx, rax;mov rax, rcx;mov rcx, rdx": 1,
                "jmp ;mov rcx, qword [rsp + ];mov qword [rsp], rcx;mov qword [rsp + ], rax;call fcn.00402ce0": 1,
                "mov rcx, qword [rsp + ];mov qword [rsp], rcx;mov qword [rsp + ], rax;call fcn.00402ce0;cmp byte [rsp + ], 0": 1,
                "mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax": 95,
                "mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov qword [rsp + ], rax;mov qword [rsp + ], rcx;mov rbp, qword [rsp + ]": 33,
                "cmp rdx, rax;jne ;mov rdx, qword [arg_c0h];movzx ebx, byte [rdx];je ": 2,
                "movss xmm0, dword [rdx + 4];movss xmm1, dword [rdx];jne ;movss dword [var_28h], xmm0;movss dword [var_24h], xmm1": 1,
                "movss xmm1, dword [rdx];jne ;movss dword [var_28h], xmm0;movss dword [var_24h], xmm1;call fcn.00430940": 1,
                "jmp ;mov byte [var_1eh], bl;call fcn.00430940;movzx eax, byte [var_1eh];movzx eax, al": 1,
                "mov rax, qword [var_68h];mov qword [rsp], rax;call fcn.00431110;call fcn.004309d0;jmp ": 2,
                "jne ;mov rdx, qword [arg_c0h];mov ebx, dword [rdx];je ;cmp ecx, ": 1,
                "jmp ;cmp ecx, ;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 2,
                "cmp ecx, ;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 2,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;mov byte [var_10h], ;call fcn.004031f0;mov rax, qword [var_18h]": 1,
                "mov rax, qword [var_18h];test rax, rax;jl ;lea rcx, [rax - 1];test rcx, rcx": 1,
                "mov rax, qword [var_18h];test rax, rax;jl ;lea rcx, [rax + 2];mov rdx, qword [var_40h]": 1,
                "test rcx, rcx;jl ;cmp rax, rcx;ja ;mov rbx, qword [var_88h]": 1,
                "jmp ;mov rsi, qword [var_90h];movzx edi, word [rsi + rax];cmp di, ;je ": 1,
                "mov rsi, qword [var_90h];movzx edi, word [rsi + rax];cmp di, ;je ;mov eax, 1": 1,
                "neg rdx;sar rdx, ;and rcx, rdx;add rcx, rbx;mov qword [var_e8h], rcx": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], ;mov qword [var_18h], rbx;mov qword [var_20h], rdx;call fcn.00444a60": 1,
                "call fcn.0042ea20;ud2;lea rax, [var_48h];mov qword [rsp], rax;lea rax, []": 1,
                "sub rsp, ;mov qword [var_98h], rbp;lea rbp, [var_98h];lea rax, [];mov qword [rsp], rax": 5,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 6;call fcn.00408380;mov rax, qword [var_10h]": 2,
                "ret;mov rax, qword [];mov rcx, qword [];mov qword [arg_30h], rax;mov qword [arg_38h], rcx": 2,
                "rol rdi, ;movabs r12, ;imul rdi, r12;mov r13, qword [rbx + ];xor r8, r13": 4,
                "jb ;cmp rcx, 8;jbe ;cmp rcx, ;jbe ": 4,
                "rol rbx, ;movabs rax, ;imul rax, rbx;xor rax, qword [rdx + 8];movabs rdx, ": 4,
                "rol rax, ;movabs rcx, ;imul rax, rcx;jmp ;mov rax, qword [arg_30h]": 3,
                "movabs rcx, ;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 2,
                "jbe ;sub rsp, ;mov qword [var_40h], rbp;lea rbp, [var_40h];mov rax, qword [arg_50h]": 128,
                "test bl, 1;jne ;movzx ebx, byte [arg_60h];test bl, bl;je ": 1,
                "mov rcx, qword [arg_58h];mov qword [rax + 8], rcx;mov rcx, qword [arg_50h];mov qword [rax + ], rcx;mov rcx, qword [var_20h]": 2,
                "mov qword [rax + ], rcx;mov rcx, rax;jmp ;lea rdi, [rax + ];mov rcx, rax": 3,
                "test rax, rax;je ;cmp qword [rax + ], 0;jne ;movzx ecx, byte [arg_60h]": 1,
                "movzx ecx, byte [arg_60h];test cl, cl;je ;mov qword [arg_68h], 0;mov rbp, qword [var_40h]": 1,
                "ret;mov qword [rsp], rax;call fcn.0040a2e0;mov rax, qword [var_10h];mov qword [var_20h], rax": 1,
                "call fcn.0040a0c0;mov rax, qword [var_18h];test rax, rax;je ;mov qword [var_28h], rax": 1,
                "call fcn.0040b7f0;mov rax, qword [var_30h];jmp ;mov rax, qword [arg_50h];call fcn.004580f0": 1,
                "call fcn.004580f0;mov rdi, rdx;jmp ;lea rax, [];mov qword [rsp], rax": 3,
                "mov qword [var_8h], ;call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.00409d30": 1,
                "jmp fcn.00409d30;int3;int3;int3;mov rax, qword [arg_8h]": 1,
                "int3;int3;int3;mov rax, qword [arg_8h];mov rcx, qword [rax]": 5,
                "mov ebx, dword [rdx + ];mov rsi, qword [arg_18h];xor ebx, dword [rsi + ];and rbx, rcx;mov edi, 1": 2,
                "add rbx, rdi;and rbx, rcx;mov rdi, r8;lea r8, [rax + rbx*8];lea r8, [r8 + ]": 2,
                "ret;mov qword [arg_20h], 0;ret;int3;mov rcx, qword gs:[]": 2,
                "lea rcx, [rcx + rcx*2];cmp qword [rax + 8], rcx;jae ;mov qword [rsp], rax;mov rax, qword [arg_50h]": 3,
                "mov esi, dword [rax + 8];add rsi, rax;test rbx, rbx;jl ;cmp rbx, ": 4,
                "mov rcx, qword [var_68h];mov rdx, r8;mov rbx, r9;mov rsi, r10;cmp rdi, rsi": 4,
                "mov qword [var_28h], rdi;shl rdi, 4;mov qword [var_40h], rdi;mov ecx, dword [rbx + rdi];mov qword [rsp], rdx": 4,
                "mov rax, qword [var_80h];mov qword [rsp], rax;call fcn.00451030;mov rax, qword [var_10h];mov rcx, qword [var_8h]": 4,
                "call fcn.00451030;mov rax, qword [var_10h];mov rcx, qword [var_8h];test rax, rax;je ": 6,
                "mov r8, r11;cmp rdi, rdx;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [var_80h], rax;mov qword [rsp], rax;call fcn.00450f40;mov rax, qword [var_8h];mov qword [var_78h], rax": 3,
                "mov qword [rsp], rax;call fcn.00450f40;mov rax, qword [var_8h];mov qword [var_78h], rax;mov rcx, qword [var_10h]": 3,
                "mov qword [var_68h], rcx;mov rdx, qword [var_58h];mov rbx, qword [var_90h];mov rsi, qword [var_48h];mov rdi, qword [var_28h]": 2,
                "call fcn.004580f0;jmp ;mov rdx, qword [var_30h];cmp rdx, rax;je ": 2,
                "jmp ;mov qword [rsp], rcx;mov rcx, qword [var_68h];mov qword [var_8h], rcx;mov qword [var_10h], rax": 2,
                "mov qword [rsp], rcx;mov rcx, qword [var_68h];mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.00402ce0": 2,
                "mov rcx, qword [var_68h];mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.00402ce0;movzx eax, byte [var_18h]": 2,
                "movzx eax, byte [var_18h];mov rdx, qword [var_30h];jmp ;mov rax, qword [var_98h];mov ecx, dword [rax]": 2,
                "call fcn.0042e8e0;ud2;call fcn.0042ea20;ud2;call fcn.00456090": 29,
                "ud2;call fcn.00456090;jmp fcn.0040a2e0;int3;mov rcx, qword gs:[]": 1,
                "mov rax, qword [var_10h];lea rdi, [rax + 1];mov rax, qword [var_30h];mov rcx, qword [var_8h];mov rdx, qword [var_20h]": 1,
                "mov rbx, qword [rax + rdx*8];mov rsi, qword [rbx + ];mov qword [var_18h], rsi;mov rbx, qword [rbx + ];mov qword [var_28h], rbx": 1,
                "add rsp, ;ret;xor eax, eax;xor ecx, ecx;jmp ": 18,
                "cmp dword [], 0;jne ;mov rcx, qword [arg_30h];mov qword [rdi], rcx;mov rcx, qword [arg_20h]": 2,
                "mov rcx, qword [arg_20h];mov qword [rdi + 8], rcx;mov rcx, qword [arg_28h];mov qword [rdi + ], rcx;mov qword [rdi + ], 0": 2,
                "mov rax, qword [arg_28h];call fcn.004580f0;mov rdi, rdx;jmp ;lea rax, []": 2,
                "call fcn.004580f0;lea rdi, [rdx + ];mov rax, qword [arg_30h];call fcn.004580f0;mov rdi, rdx": 3,
                "lea rbp, [var_28h];mov rax, qword [arg_38h];mov rcx, qword [rax];mov qword [rsp], rcx;mov qword [var_8h], rax": 4,
                "mov qword [var_8h], rax;mov byte [var_10h], 1;call fcn.0040ccf0;mov rax, qword [var_18h];mov qword [var_20h], rax": 4,
                "mov byte [var_10h], 1;call fcn.0040ccf0;mov rax, qword [var_18h];mov qword [var_20h], rax;mov rcx, qword [arg_38h]": 4,
                "mov rdx, qword [arg_40h];mov qword [var_10h], rdx;call fcn.00414a10;mov rax, qword [arg_38h];mov qword [arg_48h], rax": 4,
                "jne ;lea rax, [];mov qword [arg_38h], rax;mov rbp, qword [var_20h];add rsp, ": 16,
                "call fcn.0040ccf0;mov rax, qword [var_18h];movzx ecx, word [arg_30h];mov word [rax], cx;jmp ": 5,
                "mov rax, qword [var_18h];movzx ecx, word [arg_30h];mov word [rax], cx;jmp ;call fcn.00456090": 5,
                "sub rsp, ;mov qword [var_20h], rbp;lea rbp, [var_20h];mov eax, dword [arg_30h];test eax, eax": 13,
                "mov qword [var_8h], rax;mov byte [var_10h], 0;call fcn.0040ccf0;mov rax, qword [var_18h];mov ecx, dword [arg_30h]": 5,
                "mov rcx, qword [arg_30h];mov qword [rax], rcx;jmp ;call fcn.00456090;mov rcx, qword gs:[]": 1,
                "mov byte [var_10h], 1;call fcn.0040ccf0;mov rdi, qword [var_18h];mov rax, qword [arg_38h];mov qword [rdi + 8], rax": 6,
                "lea rax, [];mov qword [arg_48h], rax;mov rbp, qword [var_20h];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [rdi + 8], rcx;mov qword [rdi + ], rax;cmp dword [], 0;jne ;mov qword [rdi], rdx": 6,
                "cmp dword [], 0;jne ;mov qword [rdi], rdx;mov rax, rdi;jmp ": 6,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.0040adb0;int3": 7,
                "ret;call fcn.00456090;jmp fcn.0040adb0;int3;int3": 7,
                "movups xmmword [arg_48h], xmm0;mov rbp, qword [var_20h];add rsp, ;ret;call fcn.00456090": 6,
                "mov rbp, qword [var_20h];add rsp, ;ret;call fcn.00456090;jmp fcn.0040ae50": 6,
                "mov rax, qword [arg_38h];test rax, rax;je ;mov rcx, qword [arg_30h];mov rcx, qword gs:[]": 1,
                "mov rcx, qword [var_8h];cmp dword [], 0;jne ;mov qword [rcx + ], rax;mov qword [rcx + ], 0": 11,
                "mov rax, qword [arg_40h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 4,
                "mov byte [arg_58h], 1;mov rbp, qword [var_20h];add rsp, ;ret;mov rax, qword [rax + 8]": 5,
                "je ;mov rcx, qword [arg_30h];mov qword [rsp], rcx;mov qword [var_8h], rax;mov byte [var_10h], 0": 5,
                "call fcn.004580f0;jmp ;lea rax, [];mov rcx, qword gs:[];mov rcx, qword [rcx]": 2,
                "mov rdi, qword [arg_50h];test byte [rdi], al;mov rax, qword [var_20h];mov rcx, qword [var_18h];cmp dword [], 0": 5,
                "mov rbp, qword [var_28h];add rsp, ;ret;mov rdx, rax;mov rax, rcx": 5,
                "jmp fcn.0040b270;int3;int3;int3;int3": 4,
                "jmp ;inc rcx;cmp qword [rax], rcx;jbe ;mov rbx, qword [rax + rcx*8 + ]": 5,
                "mov rax, qword [rdx];call rax;mov rax, qword [var_10h];mov rcx, qword [var_8h];jmp ": 5,
                "call rax;mov rax, qword [var_10h];mov rcx, qword [var_8h];jmp ;mov rbp, qword [var_18h]": 5,
                "jmp ;mov rbp, qword [var_18h];add rsp, ;ret;call fcn.00456090": 11,
                "mov qword [var_8h], ;call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.0040b390": 4,
                "int3;mov rcx, qword [arg_8h];mov rdx, qword [rcx];test rdx, rdx;je ": 4,
                "sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h];mov rax, qword [arg_28h];mov rcx, rax": 6,
                "cmovg rax, rcx;mov qword [var_10h], rax;mov rcx, qword [var_20h];mov rdx, qword [arg_38h];xor ebx, ebx": 5,
                "mov rbx, qword [rcx + ];or rbx, 1;mov rsi, rax;mov rax, r8;lock cmpxchg qword [rdx], rbx": 5,
                "xor eax, eax;mov qword [var_18h], rax;cmp rax, rdi;jl ;lea rsi, [rdi + 1]": 4,
                "jae ;mov qword [rsp], ;call fcn.0042dc80;mov rcx, qword [var_20h];mov rdx, qword [arg_38h]": 4,
                "mov rdx, qword [arg_38h];mov rdi, qword [var_10h];mov rsi, qword [var_18h];jmp ;mov rbp, qword [var_28h]": 4,
                "mov rax, qword [rcx + ];mov eax, dword [rax + ];test eax, eax;jl ;jne ": 4,
                "test sil, sil;jne ;xor ebx, ebx;jmp ;mov qword [var_10h], rcx": 4,
                "lea rbp, [var_10h];mov rcx, qword [arg_20h];mov rdx, qword [rcx];mov rax, rdx;mov ebx, 1": 5,
                "mov rdx, rax;xor eax, eax;mov rbx, qword [arg_38h];lock cmpxchg qword [rbx], rcx;sete al": 4,
                "mov qword [var_8h], 0;call fcn.00457780;mov rdx, qword [var_18h];mov rbx, qword [arg_38h];mov rcx, qword gs:[]": 1,
                "mov qword [rsp], ;call fcn.0042dc80;mov rdx, qword [var_18h];jmp ;cmp qword [rbx], 1": 3,
                "mov qword [arg_40h], rcx;mov rax, qword [arg_38h];test rax, rax;jge ;mov rax, qword [rcx + ]": 4,
                "mov byte [rax + ], 0;mov byte [arg_50h], 1;mov rbp, qword [var_20h];add rsp, ;ret": 10,
                "cmp rcx, ;jle ;mov ecx, ;mov qword [rsp], rcx;call fcn.0042dc80": 4,
                "sub rcx, rax;test rcx, rcx;jg ;mov rcx, qword [arg_30h];mov rdx, qword [arg_40h]": 3,
                "xor esi, esi;lock cmpxchg qword [rcx], rsi;sete bl;test bl, bl;je ": 3,
                "mov rax, qword [rax];mov rcx, qword [rax + ];cmp qword [rcx], rax;je ;cmp qword [rcx + ], 0": 3,
                "mov qword [rsp], rcx;call fcn.0042de20;mov rax, qword [arg_38h];mov qword [rsp], rax;mov rax, qword [arg_40h]": 3,
                "cmp qword [rcx], rax;je ;mov qword [rsp], rcx;call fcn.0042de20;call fcn.00438890": 3,
                "mov qword [rsp], rcx;call fcn.0042de20;call fcn.00438890;mov rax, qword [arg_40h];mov qword [rsp], rax": 3,
                "call fcn.0042de20;call fcn.00438890;mov rax, qword [arg_40h];mov qword [rsp], rax;mov rax, qword [arg_48h]": 3,
                "call fcn.0042ed50;xor eax, eax;jmp ;lea rcx, [rax + rax*2];lea rdx, []": 4,
                "lea rcx, [rax + rax*2];lea rdx, [];movzx ebx, word [rdx + rax*2];lea rsi, [];mov dword [rsi + rcx*8], ebx": 4,
                "mov rax, qword gs:[];mov rax, qword [rax];mov qword [var_18h], rax;call fcn.004180a0;mov rax, qword [var_18h]": 3,
                "call fcn.004312e0;mov rax, qword [];mov qword [rsp], rax;call fcn.00431010;lea rax, []": 6,
                "mov qword [rsp], rax;call fcn.00431010;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 81,
                "jmp fcn.0040beb0;int3;int3;mov rcx, qword gs:[];mov rcx, qword [rcx]": 3,
                "sub rsi, qword [rcx + ];mov qword [rcx + ], rsi;mov rsi, qword [rcx + ];mov qword [rbx], rsi;mov qword [rcx + ], rbx": 4,
                "mov rax, qword [var_88h];mov rcx, qword [var_58h];mov qword [var_88h], rax;mov qword [var_58h], rcx;mov rdx, rax": 2,
                "mov rsi, qword [var_58h];mov rdi, qword [var_88h];mov rcx, rsi;mov rdx, rdi;mov rbx, qword [arg_a8h]": 2,
                "mov qword [rsp], rdx;mov qword [var_8h], 8;lea rax, [];mov qword [var_10h], rax;call fcn.0040dc80": 1,
                "shl rsi, 3;mov qword [var_10h], rsi;call fcn.00459210;mov rcx, qword [arg_a8h];jmp ": 1,
                "mov qword [var_10h], rsi;call fcn.00459210;mov rcx, qword [arg_a8h];jmp ;mov qword [rsp], ": 1,
                "call fcn.0040dc80;mov rax, qword [var_18h];test rax, rax;je ;mov r9, qword [var_78h]": 1,
                "mov qword [arg_b8h], rsi;mov qword [arg_c0h], rcx;mov rbp, qword [var_98h];add rsp, ;ret": 1,
                "add rsp, ;ret;movabs rsi, ;lea rdi, [r8 + rsi];shr rdi, ": 1,
                "xor eax, eax;jmp ;inc rax;mov qword [var_20h], rax;mov rcx, qword [arg_50h]": 1,
                "mov qword [var_30h], rbx;mov qword [rsp], rcx;mov rax, qword [var_38h];mov qword [var_8h], rax;mov qword [var_10h], 0": 1,
                "mov rax, qword [var_38h];mov qword [var_8h], rax;mov qword [var_10h], 0;call fcn.004191b0;mov rax, qword [var_28h]": 1,
                "not rdx;and rdx, rax;mov qword [var_18h], rdx;mov qword [rsp], rdx;mov rdx, qword [arg_58h]": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], 0;call fcn.004191b0;mov rax, qword [var_20h];cmp rax, ": 1,
                "mov rbp, qword [var_40h];add rsp, ;ret;mov qword [arg_68h], 0;mov qword [arg_70h], 0": 1,
                "ret;mov qword [arg_68h], 0;mov qword [arg_70h], 0;mov rbp, qword [var_40h];add rsp, ": 1,
                "mov qword [var_8h], ;call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.0040c920": 1,
                "movzx ecx, byte [arg_40h];cmp rcx, ;jae ;mov rdx, qword [rax + rcx*8 + ];mov qword [var_20h], rdx": 2,
                "movzx eax, byte [arg_40h];mov rcx, qword [arg_38h];mov rax, qword [rcx + rax*8 + ];mov qword [var_20h], rax;mov qword [rsp], rax": 2,
                "mov edx, 1;cmp qword [rcx + ], rax;jbe ;mov rbx, qword [rcx + ];imul rax, rbx": 2,
                "add rax, qword [rcx + ];movzx ebx, word [rcx + ];inc ebx;mov word [rcx + ], bx;movzx esi, bx": 2,
                "ret;xor edx, edx;jmp ;mov word [var_16h], bx;mov qword [var_18h], rdi": 2,
                "cmp dword [], 0;je ;mov rcx, qword [arg_a8h];test rcx, rcx;je ": 3,
                "mov rax, qword [var_18h];mov qword [arg_b8h], rax;mov rbp, qword [var_90h];add rsp, ;ret": 3,
                "sub rdx, rax;mov qword [rbx + ], rdx;test rdx, rdx;jl ;mov rax, qword gs:[]": 2,
                "mov rax, qword gs:[];mov rax, qword [rax];mov rdx, qword [rax + ];inc dword [rdx + ];mov rdx, qword [rax + ]": 2,
                "mov rax, qword [rax];mov rdx, qword [rax + ];inc dword [rdx + ];mov rdx, qword [rax + ];test byte [rax], al": 2,
                "cmp qword [rdx + ], rax;je ;mov dword [rdx + ], 1;mov rax, qword gs:[];mov rax, qword [rax]": 2,
                "mov qword [var_58h], rdx;mov qword [var_38h], rsi;mov qword [var_60h], rax;mov byte [var_2fh], r8b;mov qword [var_68h], rbx": 2,
                "mov byte [var_2eh], r9b;test r8b, r8b;je ;xor ecx, ecx;mov qword [var_38h], rsi": 1,
                "je ;mov rax, qword [arg_a0h];mov rcx, qword [var_60h];mov edx, dword [rcx];cmp eax, edx": 1,
                "lea rdx, [rax + 1];test rcx, ;cmovne rax, rdx;mov qword [var_20h], rax;mov rdx, rax": 1,
                "cmovne rax, rdx;mov qword [var_20h], rax;mov rdx, rax;shl rax, ;mov qword [rsp], rax": 1,
                "mov rax, qword [var_18h];test rax, rax;je ;mov rcx, qword [rax + ];mov rdx, qword [arg_40h]": 1,
                "movabs rdx, ;add rdx, rcx;mov rbx, rdx;shr rdx, ;cmp rdx, ": 2,
                "add rdx, rcx;mov rbx, rdx;shr rdx, ;cmp rdx, ;jae ": 2,
                "mov rax, qword [var_28h];mov qword [arg_50h], rax;mov rbp, qword [var_30h];add rsp, ;ret": 12,
                "ret;call fcn.00456090;jmp fcn.0040d8e0;int3;int3": 3,
                "mov rbp, qword [var_10h];add rsp, ;ret;call fcn.00456090;jmp fcn.0040da80": 5,
                "mov eax, ;mov rcx, qword gs:[];mov rcx, qword [rcx];mov rcx, qword [rcx + ];mov edx, dword [rcx + ]": 6,
                "xor esi, edx;mov dword [rcx + ], esi;lea ecx, [rsi + rbx];and ecx, ;inc ecx": 6,
                "mov rsi, rbx;and rbx, ;lea rdi, [];movsd xmm0, qword [rdi + rcx*8];movsd xmm1, qword [rdi + rcx*8 + 8]": 6,
                "jmp ;test rax, rax;jne ;mov dword [arg_18h], 0;mov rbp, qword [rsp]": 6,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov qword [var_8h], 0;mov qword [var_10h], 0;xorps xmm0, xmm0": 6,
                "xorps xmm0, xmm0;movups xmmword [var_18h], xmm0;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [var_18h], rcx;mov rdx, qword gs:[];mov rdx, qword [rdx];mov rbx, qword [rdx + ];inc dword [rbx + ]": 5,
                "mov rdx, qword [rdx + ];mov qword [var_28h], rdx;test rdx, rdx;je ;mov rbx, qword [rdx + ]": 5,
                "test byte [rbx], al;add rbx, ;mov qword [var_20h], rbx;mov rsi, qword [rbx + 8];lea rsi, [rcx + rsi]": 5,
                "jmp ;lea rax, [];cmp rcx, rax;jne ;lea rax, []": 2,
                "call fcn.0040b7f0;jmp ;cmp qword [rbx], 0;je ;mov rcx, rbx": 2,
                "mov rax, qword [arg_60h];mov qword [var_8h], rax;call fcn.00418df0;mov rax, qword [var_10h];mov qword [var_38h], rax": 2,
                "mov rcx, qword [arg_38h];mov qword [rcx + 8], rax;mov rcx, qword [var_20h];jmp ;mov qword [arg_58h], 0": 3,
                "cmp dword [], 0;jne ;mov qword [rdi], 0;mov rdx, qword [rcx + ];test byte [rdx], al": 4,
                "jne ;mov qword [rdi], 0;mov rdx, qword [rcx + ];test byte [rdx], al;cmp dword [], 0": 4,
                "mov rdx, qword [rcx + ];test byte [rdx], al;cmp dword [], 0;jne ;mov qword [rdx + ], 0": 4,
                "test byte [rdx], al;cmp dword [], 0;jne ;mov qword [rdx + ], 0;mov qword [var_40h], r9": 4,
                "mov rdx, qword [rcx + ];cmp qword [rdx], 0;je ;mov rcx, qword [rcx + ];mov rdx, qword [rcx]": 4,
                "mov rbx, qword [rdx + 8];lea rsi, [rbx + 1];mov r8, qword [rdx + ];cmp rsi, r8;ja ": 4,
                "call fcn.0040d880;mov rax, qword [arg_60h];mov rdi, qword [rax + ];test byte [rdi], al;mov rcx, qword [var_8h]": 3,
                "mov rcx, qword [var_8h];cmp dword [], 0;jne ;mov qword [rdi], rcx;mov rcx, rax": 3,
                "mov rax, qword [arg_68h];jmp ;mov rcx, qword [arg_60h];lea rdi, [rcx + ];mov rax, qword [arg_8h]": 1,
                "lea rdi, [rcx + ];mov rax, qword [arg_8h];movzx edx, byte [rax + 9];cmp dl, ;jb ": 1,
                "jne ;mov qword [rdx + ], rax;jmp ;lea rdi, [rdx + ];call fcn.004580f0": 9,
                "mov qword [rsp], rdx;mov qword [var_8h], rcx;mov byte [var_10h], 1;call fcn.0040ccf0;mov r9, qword [var_18h]": 2,
                "mov edx, dword [rax + ];mov ebx, dword [rax + ];mov dword [rax + ], ebx;mov esi, edx;shl edx, ": 3,
                "xor edx, ebx;mov ebx, esi;shr esi, ;xor esi, edx;mov dword [rax + ], esi": 3,
                "mov rbx, qword [arg_50h];mul rbx;jno ;xor eax, eax;mov rdx, qword [arg_58h]": 3,
                "mul rbx;jno ;xor eax, eax;mov rdx, qword [arg_58h];test rdx, rdx": 3,
                "mov dword [rbx + ], r8d;lea ebx, [rdi + r8];mov dword [rdx + ], ebx;xor ecx, ecx;jmp ": 2,
                "jmp ;inc ecx;cmp rax, 8;jle ;mov ebx, 1": 2,
                "mov rdx, qword [arg_58h];mov qword [rdx + ], rax;test rcx, rcx;je ;mov qword [var_30h], rcx": 2,
                "mov rax, qword [var_30h];call fcn.004580f0;jmp ;mov rdx, qword [arg_58h];lea rdi, [rdx + ]": 2,
                "call fcn.004580f0;jmp ;xor ebx, ebx;jmp ;mov qword [var_28h], rax": 2,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rdx, qword [var_8h];mov rax, qword [var_28h]": 2,
                "mov rdx, qword [var_8h];mov rax, qword [var_28h];jmp ;movabs rdx, ;cmp rax, rdx": 2,
                "ja ;lea rcx, [rdi + 7];shr rcx, 3;cmp rcx, ;jae ": 3,
                "jae ;lea r9, [];movzx ecx, byte [rcx + r9];cmp rcx, ;jae ": 5,
                "mov rcx, rdx;xor edx, edx;div rsi;mov qword [var_20h], rcx;mov qword [var_18h], rax": 3,
                "mov qword [rsp], rdx;mov qword [var_8h], rdi;call fcn.004150c0;mov rax, qword [arg_48h];mov rcx, qword [var_18h]": 3,
                "lea rcx, [rdi + ];and rcx, ;jmp ;mov rcx, rdx;mov rbx, qword [arg_38h]": 2,
                "and rcx, ;jmp ;mov rcx, rdx;mov rbx, qword [arg_38h];mov rax, rcx": 2,
                "mov rbx, qword [arg_38h];mov rax, rcx;jmp ;call fcn.0042eb60;ud2": 2,
                "jmp fcn.0040e790;int3;int3;int3;int3": 1,
                "mov esi, 1;shl rsi, cl;lea rcx, [rsi - 1];mov rbx, rcx;and rcx, rax": 24,
                "cmp al, bl;je ;test bl, bl;jne ;lea rax, []": 4,
                "mov rax, qword [var_28h];mov rdx, qword [rax + 8];mov rbx, qword [arg_58h];mov qword [rsp], rbx;mov qword [var_8h], rcx": 3,
                "mov rcx, qword [rdx];call rcx;cmp byte [var_10h], 0;jne ;movzx eax, byte [var_1fh]": 3,
                "jne ;movzx eax, byte [var_1fh];mov rcx, qword [var_30h];mov rdx, qword [var_20h];mov rsi, qword [arg_48h]": 3,
                "jmp ;mov rax, qword [arg_48h];movzx ecx, byte [rax + ];movzx edx, byte [rax + ];mov rbx, qword [var_20h]": 3,
                "lea rcx, [rcx + 8];mov eax, dword [rax + ];bt eax, 1;jae ;mov rax, qword [rcx]": 3,
                "xor ebx, ebx;jmp ;shr rbx, 1;jmp ;mov rax, qword [arg_48h]": 2,
                "mov rax, qword [rcx];mov qword [arg_60h], rax;mov byte [arg_68h], 1;mov rbp, qword [var_38h];add rsp, ": 1,
                "jb ;lea rax, [];mov qword [arg_60h], rax;mov byte [arg_68h], 0;mov rbp, qword [var_38h]": 1,
                "sub rsp, ;mov qword [var_40h], rbp;lea rbp, [var_40h];mov rax, qword [arg_58h];test rax, rax": 7,
                "mov rbx, rcx;and rcx, rax;mov rsi, qword [arg_50h];movzx edi, word [rsi + ];imul rcx, rdi": 2,
                "jae ;mov rcx, qword [rcx];mov qword [var_28h], rcx;mov rax, qword [var_30h];mov rdx, qword [rax + 8]": 1,
                "mov rcx, qword [rcx];mov qword [var_28h], rcx;mov rax, qword [var_30h];mov rdx, qword [rax + 8];mov rbx, qword [arg_60h]": 1,
                "call rsi;cmp byte [var_10h], 0;jne ;movzx eax, byte [var_1fh];mov rcx, qword [var_38h]": 1,
                "mov rsi, qword [arg_50h];jmp ;mov rax, qword [arg_50h];movzx ecx, byte [rax + ];movzx edx, byte [rax + ]": 1,
                "mov rax, qword [arg_50h];movzx ecx, byte [rax + ];movzx edx, byte [rax + ];mov rbx, qword [var_20h];imul rdx, rbx": 1,
                "sub rsp, ;mov qword [var_78h], rbp;lea rbp, [var_78h];mov rax, qword [arg_90h];test rax, rax": 2,
                "movzx ecx, byte [rax + 8];test cl, 4;jne ;mov rcx, qword [arg_88h];mov rbx, qword [rcx + ]": 2,
                "test rcx, rcx;je ;test r11b, r11b;jne ;cmp qword [rdx + ], 0": 2,
                "mov rcx, qword [arg_90h];mov rbx, qword [arg_88h];movzx esi, byte [rcx + 9];mov rdx, rcx;mov ecx, esi": 2,
                "lea rsi, [rdi - 1];and rsi, rax;cmp qword [rdx + ], 0;jne ;movzx edi, word [rbx + ]": 2,
                "mov rax, qword [var_18h];cmp dword [], 0;jne ;mov qword [rdi], rax;mov rdx, qword [arg_90h]": 1,
                "mov qword [var_58h], rcx;movzx r11d, byte [rbx + ];imul r11, r10;lea rsi, [r11 + rsi];lea rsi, [rsi + 8]": 1,
                "jbe ;sub rsp, ;mov qword [var_58h], rbp;lea rbp, [var_58h];mov rax, qword [arg_70h]": 28,
                "movzx ebx, byte [rcx + 8];xor ebx, 4;mov byte [rcx + 8], bl;movzx ebx, byte [rcx + 9];mov rdx, rcx": 3,
                "mov ecx, ebx;mov esi, 1;shl rsi, cl;lea rcx, [rsi - 1];and rcx, rax": 2,
                "mov byte [var_1fh], al;mov rsi, rcx;jmp ;inc rdi;cmp rdi, 8": 1,
                "lea rcx, [rcx + 8];mov qword [var_38h], rcx;mov r8d, dword [rbx + ];bt r8d, 0;jae ": 1,
                "bt r8d, 0;jae ;mov r8, qword [rcx];mov rax, qword [var_40h];mov rdx, qword [rax + 8]": 1,
                "test rax, rax;je ;cmp byte [rax], 0;jne ;mov rax, qword [var_50h]": 1,
                "mov rax, rbx;test byte [rdx], al;cmp rsi, 8;jae ;mov byte [rdx + rsi], 0": 1,
                "mov rdx, qword [arg_70h];dec qword [rdx];jmp ;dec rsi;mov rbx, rax": 1,
                "test bl, ;jne ;mov rax, qword [rdx];mov rcx, qword [var_38h];mov qword [rsp], rcx": 1,
                "lea rdi, [rdi + rcx];lea rdi, [rdi - 8];mov rcx, qword [rdi];test rcx, rcx;je ": 1,
                "je ;mov rsi, qword [rdx + ];mov rax, qword [rsi];cmp dword [], 0;jne ": 1,
                "mov rsi, qword [rdx + ];mov rax, qword [rsi + 8];cmp dword [], 0;jne ;mov qword [rbx + ], rax": 1,
                "jbe ;mov rsi, qword gs:[];mov rsi, qword [rsi];mov rsi, qword [rsi + ];mov edi, dword [rsi + ]": 1,
                "movzx eax, byte [rdx + 8];and eax, 3;cmp al, 3;je ;lea rax, [rdx + 8]": 1,
                "cmp dword [], 0;jne ;mov rdx, qword [arg_28h];mov qword [rdx + ], rax;mov rbx, qword [arg_30h]": 1,
                "mov qword [rdx + ], rax;mov rbx, qword [arg_30h];jmp ;mov rdx, qword [arg_28h];lea rdi, [rdx + ]": 1,
                "lea rdi, [rbx + ];call fcn.004580f0;jmp ;lea rdi, [rbx + ];mov rax, qword [arg_20h]": 1,
                "jmp ;call fcn.00456090;jmp fcn.0040fbd0;int3;int3": 1,
                "lea rbp, [var_78h];mov rdi, qword [arg_88h];mov rbx, qword [rdi + ];movzx esi, byte [rbx + 8];test sil, 4": 2,
                "mov byte [var_2fh], r11b;mov qword [var_58h], r15;movzx r15d, byte [rsi + ];imul r14, r15;lea r14, [r14 + rax*8]": 2,
                "cmp r9b, ;sbb r14, r14;mov rax, rcx;mov ecx, r9d;mov r15, r12": 2,
                "mov rax, qword [var_70h];cmp qword [rdx + ], rax;je ;cmp dword [], 0;jne ": 1,
                "call fcn.004580f0;lea rbx, [rdi + 8];mov rax, rdi;mov rdi, rbx;mov rdx, rax": 1,
                "jmp ;cmp dword [], 0;jne ;mov rcx, qword [var_58h];mov qword [rdi], rcx": 1,
                "shl rax, cl;dec rax;and rax, qword [var_10h];mov rcx, qword [var_30h];cmp rax, rcx": 1,
                "and rax, qword [var_10h];mov rcx, qword [var_30h];cmp rax, rcx;je ;mov rbx, qword [var_60h]": 1,
                "mov rcx, qword [var_30h];cmp rax, rcx;je ;mov rbx, qword [var_60h];mov rsi, qword [var_50h]": 1,
                "mov r9, qword [var_38h];mov r10, qword [var_70h];movzx r11d, byte [var_2fh];mov r12, rcx;jmp ": 1,
                "mov rbx, qword [var_60h];mov rsi, qword [var_50h];mov r8, qword [var_68h];mov r10, qword [var_48h];movzx r11d, byte [var_2fh]": 1,
                "cmp qword [rbx + 8], 0;jne ;cmp dword [], 0;jne ;mov qword [rbx + 8], rax": 1,
                "test byte [rdx], al;cmp dword [], 0;jne ;mov qword [rdx + ], rcx;mov rbp, qword [var_40h]": 1,
                "jmp ;xor edx, edx;jmp ;lea rax, [];mov qword [rsp], rax": 2,
                "mov r8, qword [arg_c8h];imul rsi, r8;mov r9, qword [arg_c0h];add rsi, qword [r9 + ];movzx r10d, byte [r9 + 9]": 3,
                "shl r12, cl;test r11b, r11b;jne ;xorps xmm0, xmm0;movups xmmword [var_68h], xmm0": 3,
                "test r11b, r11b;jne ;xorps xmm0, xmm0;movups xmmword [var_68h], xmm0;movups xmmword [var_78h], xmm0": 3,
                "jmp ;inc rax;movzx r14d, byte [rbx + ];movzx r15d, byte [rbx + ];add r13, r14": 3,
                "ja ;mov byte [rsi + rax], 4;jmp ;cmp r14b, 5;jb ": 6,
                "jmp ;cmp r14b, 5;jb ;mov r15d, dword [rbx + ];bt r15d, 0": 2,
                "jae ;mov r15, qword [r13];mov qword [var_28h], rax;mov qword [var_48h], r11;mov qword [var_58h], r15": 2,
                "mov byte [rsi + rax], r12b;movzx r12d, dil;cmp r12, 2;jae ;shl r12, 5": 2,
                "mov byte [rcx + r10], r14b;mov ecx, dword [rbx + ];bt ecx, 0;jae ;mov rcx, qword [rsp + r12 + ]": 2,
                "jae ;mov rcx, qword [rsp + r12 + ];test byte [rcx], al;cmp dword [], 0;jne ": 2,
                "mov qword [rcx], r15;mov ecx, dword [rbx + ];bt ecx, 1;jae ;mov rcx, qword [rsp + r12 + ]": 2,
                "mov qword [var_8h], rcx;mov qword [var_10h], r11;call fcn.00414a10;mov rax, qword [var_28h];mov rdx, qword [var_40h]": 2,
                "mov qword [var_10h], r13;call fcn.00414a10;mov rax, qword [var_28h];mov rdx, qword [var_40h];mov rbx, qword [arg_b8h]": 2,
                "mov r13, qword [var_50h];jmp ;mov byte [var_26h], r14b;mov rax, qword [rsp + r12 + ];mov qword [rsp], r9": 2,
                "mov rbx, qword [arg_b8h];movzx ecx, byte [rbx + ];lea rax, [rax + rcx*8];lea rax, [rax + 8];mov qword [rsp + r12 + ], rax": 1,
                "mov rdx, qword [var_40h];mov rsi, qword [var_60h];mov r8, qword [arg_c8h];mov r9, qword [arg_c0h];movzx r10d, byte [var_27h]": 1,
                "mov rax, qword [var_10h];mov rcx, qword [arg_c0h];movzx ebx, byte [rcx + 8];test bl, 1;je ": 1,
                "mov qword [rcx + ], rbx;add rdx, ;mov rbx, qword [arg_20h];cmp rdx, rbx;cmova rdx, rbx": 1,
                "jne ;mov qword [rcx + ], 0;mov rdx, qword [rcx + ];test rdx, rdx;je ": 1,
                "mov qword [rcx + ], 0;mov rdx, qword [rcx + ];test rdx, rdx;je ;cmp dword [], 0": 1,
                "add rsp, 8;ret;lea rdi, [rdx + 8];xor eax, eax;call fcn.004580f0": 1,
                "xor r9d, r9d;jmp ;call fcn.00456090;jmp fcn.00410d70;int3": 1,
                "mov ebx, 1;test bl, bl;jne ;mov rbx, qword [rcx + ];mov rsi, qword [rbx]": 2,
                "mov rbx, qword [rcx + ];mov rsi, qword [rbx];cmp rsi, ;jbe ;mov edi, dword [rcx + ]": 2,
                "test dil, dil;jne ;movzx edx, byte [rdx + ];cmp dl, 8;ja ": 2,
                "add rsp, ;ret;cmp byte [rcx + ], sil;setne dil;jmp ": 2,
                "test rax, rax;mov eax, 0;cmovne rax, rcx;mov qword [arg_50h], rax;mov rbp, qword [var_28h]": 2,
                "mov rbp, qword [var_20h];add rsp, ;ret;call fcn.00456090;jmp fcn.004111c0": 3,
                "ret;call fcn.00456090;jmp fcn.004111c0;int3;int3": 3,
                "mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h];mov qword [var_18h], rax;mov rcx, qword [arg_30h]": 6,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.004112a0;int3": 4,
                "mov rax, qword [rax];mov qword [arg_10h], rax;ret;int3;int3": 6,
                "mov rax, qword [arg_8h];mov rax, qword [rax + 8];mov qword [arg_10h], rax;ret;int3": 7,
                "cmp rdx, 8;jae ;mov ebx, dword [arg_38h];cmp dword [rcx], ebx;jne ": 16,
                "cmp dword [rcx], ebx;jne ;movzx ebx, byte [rdx + rax];cmp bl, 1;jbe ": 16,
                "jbe ;mov rcx, qword [arg_28h];movzx ecx, byte [rcx + ];imul rcx, rdx;lea rax, [rcx + rax]": 18,
                "lea rax, [];mov qword [arg_40h], rax;mov rbp, qword [var_18h];add rsp, ;ret": 18,
                "mov qword [rsp], rsi;mov qword [var_8h], rbx;mov rbx, qword [rdx];call rbx;mov rax, qword [var_10h]": 27,
                "test dl, 8;je ;and rbx, rax;imul rbx, rdi;lea rax, [r8 + rbx]": 11,
                "movzx edx, byte [rbx + r8];cmp dl, 1;jbe ;cmp dl, 5;setb dl": 10,
                "jbe ;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 16,
                "mov rbx, qword [rdx];call rbx;mov rax, qword [var_10h];mov qword [var_20h], rax;mov rcx, qword [arg_48h]": 5,
                "jmp ;lea r10, [r12 + 1];mov rcx, rbx;mov r8, r9;mov rbx, r11": 4,
                "test byte [rbx], al;movzx r10d, byte [rbx + r9];cmp r10b, 1;ja ;test rcx, rcx": 5,
                "mov rax, rdx;mov rdx, qword [arg_40h];movzx ebx, byte [rcx + 9];mov rsi, rcx;mov ecx, ebx": 5,
                "mov rdx, qword [arg_40h];movzx ebx, byte [rcx + 9];mov rsi, rcx;mov ecx, ebx;mov edi, 1": 4,
                "movzx ebx, byte [rcx + 9];mov rsi, rcx;mov ecx, ebx;mov edi, 1;shl rdi, cl": 4,
                "test dl, 4;je ;and edx, ;mov byte [rsi + 8], dl;mov qword [arg_58h], rax": 2,
                "mov rbp, qword [var_30h];add rsp, ;ret;mov qword [rsp], rsi;mov qword [var_8h], rdx": 2,
                "movzx edi, word [rsi + ];cmp cl, ;jbe ;mov ecx, ;and ecx, ": 2,
                "xor r9d, r9d;jmp ;mov r11, r9;mov rbx, rcx;mov r9, r8": 2,
                "jmp ;mov rax, qword [arg_40h];mov rcx, qword [rax + ];mov rdx, qword [rcx];mov qword [rsp], rdx": 3,
                "call fcn.0040ccf0;mov rax, qword [var_18h];cmp dword [], 0;jne ;mov rdx, qword [arg_48h]": 3,
                "ud2;call fcn.00456090;jmp fcn.00411760;int3;int3": 1,
                "mov rdx, qword [rbx];mov ebx, dword [rax + ];lea rsi, [arg_58h];mov qword [rsp], rsi;mov qword [var_8h], rbx": 1,
                "lea rcx, [rsi - 1];and rax, rcx;cmp qword [rdx + ], 0;jne ;mov rcx, qword [arg_48h]": 1,
                "mov qword [var_18h], r8;mov rbx, qword [rcx + ];movzx r9d, byte [rbx + ];test r9b, ;je ": 1,
                "lea rax, [rdi + rax];lea rax, [rax + ];test r9b, ;jne ;mov rcx, qword [rbx]": 1,
                "cmp rax, 7;jne ;mov rdx, qword [arg_48h];movzx ebx, word [rdx + ];mov rsi, rcx": 1,
                "jne ;mov rdx, qword [arg_48h];movzx ebx, word [rdx + ];mov rsi, rcx;lea rcx, [rbx + rcx]": 1,
                "movzx ebx, word [rdx + ];mov rsi, rcx;lea rcx, [rbx + rcx];lea rcx, [rcx - 8];mov rcx, qword [rcx]": 1,
                "test rcx, rcx;je ;cmp byte [rcx], 0;jne ;mov rcx, qword [var_30h]": 1,
                "mov rdx, qword [arg_48h];mov rsi, rcx;jmp ;mov rcx, qword [rbx];mov qword [rsp], rax": 1,
                "mov rcx, qword [arg_48h];mov rdx, qword [arg_50h];mov rsi, qword [var_30h];mov r8, qword [var_18h];jmp ": 1,
                "jmp ;mov qword [var_20h], rax;mov rcx, qword [arg_48h];mov qword [rsp], rcx;mov qword [var_8h], rdx": 1,
                "ud2;call fcn.00456090;jmp fcn.00411af0;int3;int3": 1,
                "mov rsi, qword [arg_b8h];imul rbx, rsi;mov rdi, qword [arg_b0h];add rbx, qword [rdi + ];movzx r8d, byte [rdi + 9]": 2,
                "cmp r9b, 5;setb r9b;mov ecx, r8d;mov r10d, 1;shl r10, cl": 2,
                "movzx ecx, byte [var_27h];mov rdx, qword [var_28h];mov rbx, qword [var_50h];mov rsi, qword [arg_b8h];mov rdi, qword [arg_b0h]": 2,
                "mov rcx, qword [rsp + r13 + ];mov qword [rsp], rdi;mov qword [var_8h], rax;mov qword [var_10h], rcx;call fcn.0040e220": 2,
                "mov r11, qword [var_40h];movzx r12d, byte [var_26h];jmp ;mov rcx, qword [rax + ];mov rcx, qword [rcx + ]": 2,
                "mov rcx, qword [rdx];call rcx;mov rax, qword [var_10h];movzx r8d, byte [var_27h];bt rax, r8": 2,
                "mov r11, qword [var_40h];movzx r12d, byte [var_26h];jmp ;movzx r9d, word [rax + ];lea r9, [rbx + r9]": 2,
                "mov rcx, qword [rax + ];movzx ecx, byte [rcx + ];test cl, ;je ;cmp qword [rdi + ], rsi": 2,
                "je ;cmp qword [rdi + ], rsi;je ;mov rbp, qword [var_98h];add rsp, ": 2,
                "mov rax, qword [arg_a8h];mov rsi, qword [arg_b8h];mov rdi, qword [arg_b0h];mov r10, qword [var_38h];jmp ": 1,
                "jne ;mov rax, qword [rax + ];jmp ;inc rdx;add rcx, 8": 3,
                "add rcx, 8;cmp rdx, 8;jae ;mov rbx, qword [arg_38h];cmp qword [rcx], rbx": 3,
                "mov rax, rbx;lea rbx, [rbx + rcx*8];lea rbx, [rbx + 8];mov rdi, qword [arg_50h];mov qword [rbx], rdi": 1,
                "mov r10d, 1;shl r10, cl;shr r10, 1;lea r12, [r10 + r10*2];lea r10, [r10 + r12*4]": 1,
                "shr rax, ;cmp al, 5;jae ;lea ecx, [rax + 5];test byte [rbx], al": 1,
                "movzx eax, byte [rsi + 8];lea rcx, [r8 + rcx];lea rcx, [rcx + ];test al, 4;je ": 1,
                "jmp ;xor r8d, r8d;jmp ;mov r10, rbx;lea rbx, [rbx + r9*8]": 1,
                "jmp ;mov rcx, r10;mov r8, r9;jmp ;mov r9, rbx": 1,
                "call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.00412a50;int3": 1,
                "cmp dword [], 0;jne ;mov qword [r12], r14;mov rax, qword [rbx + ];mov rcx, qword [rsp + rdx + ]": 2,
                "mov r11, qword [var_48h];mov r12, qword [var_38h];mov r13, qword [var_40h];jmp ;mov r15, rdi": 2,
                "jmp ;mov r15, rdi;mov rdi, r12;mov rax, r14;call fcn.004580f0": 2,
                "mov rax, qword [rdx];call rax;mov rax, qword [var_10h];movzx r10d, byte [var_27h];bt rax, r10": 4,
                "call rax;mov rax, qword [var_10h];movzx r10d, byte [var_27h];bt rax, r10;setb dl": 4,
                "lea r11, [rsi + r11];lea r11, [r11 - 8];mov rsi, qword [r11];test rsi, rsi;je ": 4,
                "movzx eax, byte [rax + ];test al, ;je ;cmp qword [r9 + ], r8;je ": 2,
                "mov qword [rsp], r9;mov qword [var_8h], rbx;mov qword [var_10h], r12;call fcn.00410d70;jmp ": 2,
                "call fcn.00410d70;jmp ;movzx eax, word [rbx + ];mov rcx, rax;imul rax, r8": 2,
                "lea r11, [r12 + r8];movzx r13d, word [rbx + ];imul r13, r11;add r13, qword [r9 + ];mov qword [var_78h], r13": 2,
                "cmp rbx, ;jge ;lea rax, [rcx + 8];xor edx, edx;jmp ": 2,
                "je ;mov rax, qword [arg_70h];movzx eax, byte [rax + ];imul rdx, rax;lea rax, [rcx + rdx]": 2,
                "mov rax, qword [arg_70h];movzx eax, byte [rax + ];imul rdx, rax;lea rax, [rcx + rdx];lea rax, [rax + ]": 2,
                "mov qword [var_10h], rbx;call fcn.00402ce0;movzx ebx, byte [var_18h];mov rax, qword [var_50h];mov rcx, qword [var_40h]": 1,
                "cmp qword [rsi + 8], rbx;je ;test byte [rcx], al;movzx r8d, byte [rdx + rcx];test r8b, r8b": 2,
                "test r8b, r8b;jne ;cmp rdi, 8;jne ;lea rax, []": 2,
                "mov qword [var_8h], rsi;mov qword [var_10h], rbx;call fcn.00402ce0;cmp byte [var_18h], 0;je ": 2,
                "mov rcx, qword [var_28h];imul rcx, rax;mov rax, qword [var_40h];lea rax, [rax + rcx];lea rax, [rax + ]": 1,
                "jbe ;mov r8, qword [rsi];mov r9, qword [arg_80h];cmp r8, r9;je ": 2,
                "je ;mov r10d, dword [r8];cmp dword [r9], r10d;jne ;lea r8, [r8 + rbx]": 2,
                "inc rbx;add rdx, ;cmp rbx, 8;jae ;mov rdi, qword [arg_88h]": 2,
                "movzx r8d, byte [rbx + rcx];cmp al, r8b;jne ;mov r8, qword [rdx];mov r9, qword [arg_80h]": 2,
                "imul rbx, rax;lea rax, [rcx + rbx];lea rax, [rax + ];mov qword [arg_90h], rax;mov rbp, qword [var_60h]": 1,
                "mov qword [var_10h], rdi;call fcn.00402ce0;movzx edi, byte [var_18h];movzx eax, byte [var_27h];mov rcx, qword [var_58h]": 2,
                "call fcn.00402ce0;movzx edi, byte [var_18h];movzx eax, byte [var_27h];mov rcx, qword [var_58h];mov rdx, qword [var_48h]": 2,
                "mov rdx, qword [var_48h];mov rbx, qword [var_30h];mov rsi, qword [arg_70h];jmp ;movzx edx, word [rsi + ]": 2,
                "mov rax, qword [var_40h];mov rcx, qword [var_50h];mov rdx, qword [var_38h];jmp ;lea rsi, [rcx + 8]": 1,
                "shr r12, 1;lea r13, [r12 + r12*2];lea r12, [r12 + r13*4];cmp r10, r12;seta r10b": 1,
                "je ;mov qword [rsp], rdx;mov qword [var_8h], rsi;call fcn.00410450;mov rax, qword [arg_68h]": 1,
                "jmp ;mov rax, rbx;mov rcx, rdi;jmp ;mov r10, rdi": 1,
                "cmp rbx, r13;jne ;xor ebx, ebx;test bl, bl;je ": 1,
                "mov rbx, r10;jmp ;mov qword [var_40h], r10;mov qword [var_28h], rcx;mov qword [var_48h], rax": 1,
                "movzx r8d, byte [rbx + ];imul r8, rdi;movzx r9d, byte [rsi + ];lea rcx, [r8 + rcx];lea rcx, [rcx + ]": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.004150c0;mov rax, qword [var_28h];mov rcx, qword [var_48h]": 1,
                "lea rcx, [rcx + rbx];lea rcx, [rcx - 8];mov rcx, qword [rcx];test rcx, rcx;je ": 1,
                "mov qword [var_10h], r9;call fcn.00402ce0;movzx r9d, byte [var_18h];xor r9d, 1;mov rax, qword [var_50h]": 1,
                "je ;mov r15, qword [rsp + rdx + ];test byte [r15], al;mov r12, qword [rsp + rdx + ];and r12, 7": 2,
                "mov rcx, qword [rax];mov qword [rsp], rax;mov rax, qword [arg_40h];mov qword [var_8h], rax;mov rax, qword [arg_48h]": 1,
                "call fcn.004159f0;mov rax, qword [arg_40h];mov qword [rsp], rax;mov rcx, qword [arg_48h];mov qword [var_8h], rcx": 3,
                "jmp ;mov r8, qword [arg_40h];mov rdx, qword [arg_48h];jmp ;mov rcx, qword [arg_58h]": 3,
                "jmp ;mov rax, qword [arg_38h];mov rcx, qword [arg_58h];jmp ;call fcn.00456090": 3,
                "jmp ;call fcn.00456090;jmp fcn.00414b40;int3;int3": 3,
                "mov qword [var_10h], rax;call fcn.004159f0;mov rax, qword [arg_40h];jmp ;mov rax, qword [arg_40h]": 4,
                "mov qword [var_8h], rdx;mov qword [var_10h], rbx;call fcn.00459210;mov rax, qword [var_48h];mov qword [arg_98h], rax": 5,
                "ret;mov rbx, qword [arg_60h];mov qword [rsp], rbx;mov rsi, qword [arg_68h];mov qword [var_8h], rsi": 4,
                "cmp rsp, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_48h], rbp;lea rbp, [var_48h]": 415,
                "movzx ecx, byte [rax + ];test cl, ;je ;mov rcx, qword [arg_68h];mov rdx, qword [arg_80h]": 5,
                "mov rcx, qword [arg_68h];mov rdx, qword [arg_80h];cmp rcx, rdx;cmovg rcx, rdx;test rcx, rcx": 5,
                "mov rax, qword [rax];mov rdx, qword [arg_60h];mov qword [rsp], rdx;mov rdx, qword [arg_78h];mov qword [var_8h], rdx": 5,
                "mov rcx, qword [arg_30h];mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.00458f80;mov rbp, qword [var_18h]": 4,
                "add rsp, ;ret;mov rcx, qword [arg_30h];mov rbx, qword [rax];mov qword [rsp], rcx": 4,
                "mov rcx, qword [arg_30h];mov rbx, qword [rax];mov qword [rsp], rcx;mov qword [var_8h], 0;mov qword [var_10h], rbx": 4,
                "jbe ;sub rsp, ;mov qword [var_10h], rbp;lea rbp, [var_10h];mov rax, qword [arg_20h]": 155,
                "ret;call fcn.00456090;jmp fcn.00414ff0;int3;int3": 5,
                "mov rax, qword [arg_28h];movzx eax, byte [rax + ];test al, ;sub rsp, ;mov qword [var_50h], rbp": 1,
                "je ;mov rax, qword [arg_30h];mov qword [rsp], rax;mov rax, qword [arg_40h];mov qword [var_8h], rax": 5,
                "jmp ;call fcn.00456090;jmp fcn.00415040;int3;int3": 5,
                "call fcn.004159f0;mov rax, qword [arg_28h];mov qword [rsp], rax;mov rax, qword [arg_30h];mov qword [var_8h], rax": 6,
                "mov r9, qword [rax + ];shr r9, cl;and r9, r8;mov qword [rax + ], r9;lea rdx, [rdx + rsi]": 6,
                "jne ;cmp rdx, rbx;jne ;mov qword [rax + ], rdx;mov qword [arg_40h], rdi": 6,
                "mov qword [var_8h], rdx;call skip;mov rax, qword [arg_38h];mov rdx, qword [var_18h];mov rdi, qword [var_20h]": 6,
                "add rcx, qword [rax + ];mov qword [rsp + ], rcx;mov rcx, rdx;and rcx, 7;mov eax, 1": 5,
                "movzx ecx, byte [rax + ];cmp cl, ;sbb rbx, rbx;shr rdx, cl;and rdx, rbx": 5,
                "mov ecx, esi;shr rdx, cl;and rdi, rdx;mov rcx, rdi;jmp ": 4,
                "and rdi, rdx;mov rcx, rdi;jmp ;lea rsi, [];mov rax, qword [rsi + rax*8]": 4,
                "test rax, rax;je ;shr rbx, ;and rbx, ;mov rax, qword [rax + rbx*8]": 4,
                "shr rdx, ;and rdx, ;mov rax, qword [rax + rdx*8 + ];mov rdx, rbx;jmp ": 4,
                "shr rdx, ;cmp rdx, ;jb ;mov rax, qword [arg_10h];mov rcx, qword [arg_8h]": 1,
                "jae ;test rcx, rcx;je ;cmp byte [rcx + ], 2;jne ": 3,
                "mov qword [arg_78h], 0;mov rbp, qword [var_40h];add rsp, ;ret;mov qword [var_38h], rcx": 3,
                "mov rax, qword [var_38h];cmp byte [rax + ], 1;je ;call fcn.00430940;lea rax, []": 2,
                "mov rcx, qword [rax + ];mov qword [var_30h], rcx;movzx edx, byte [rax + ];mov qword [var_28h], rdx;mov rax, qword [rax + ]": 1,
                "mov qword [var_8h], ;call fcn.004312e0;mov rax, qword [var_28h];mov qword [rsp], rax;call fcn.00431010": 17,
                "mov rax, qword [arg_60h];mov qword [rsp], rax;call fcn.00431180;lea rax, [];mov qword [rsp], rax": 3,
                "mov qword [var_8h], ;call fcn.004312e0;call fcn.004309d0;jmp ;cmp qword [rcx + ], rax": 1,
                "sub rax, rdx;and rbx, rax;lea rax, [rbx + rdx];mov rdx, rcx;mov ecx, esi": 1,
                "mov rbp, qword [var_40h];add rsp, ;ret;sub rax, rdx;mov rbx, qword [rcx + ]": 1,
                "mov ecx, esi;shr rax, cl;and rax, rdi;movzx esi, word [r10 + ];imul rsi, rax": 1,
                "test rdx, rdx;je ;shr rbx, ;and rbx, ;mov rdx, qword [rdx + rbx*8]": 1,
                "test rdx, rdx;je ;mov rbx, rax;shr rax, ;and rax, ": 1,
                "int3;int3;mov eax, dword [arg_14h];inc eax;mov ecx, eax": 1,
                "mov dword [arg_28h], 0;mov dword [arg_2ch], edx;add rax, ;mov qword [arg_30h], rax;ret": 1,
                "mov rbx, rax;shr rax, 2;add rcx, rax;and rbx, 3;mov rsi, qword [arg_18h]": 2,
                "and rbx, 3;mov rsi, qword [arg_18h];mov rdi, rsi;cmp rcx, rsi;jbe ": 2,
                "mov qword [arg_38h], rcx;ret;xor ecx, ecx;xor eax, eax;jmp ": 2,
                "jmp ;add rax, rdx;mov qword [arg_28h], rax;mov dword [arg_30h], ebx;mov eax, dword [arg_14h]": 2,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.00415930;int3": 3,
                "int3;sub rsp, ;mov qword [var_78h], rbp;lea rbp, [var_78h];mov rax, qword [arg_90h]": 3,
                "cmp rsi, ;jb ;xor edi, edi;test rdi, rdi;je ": 4,
                "jne ;cmp qword [rdi + ], rcx;ja ;cmp qword [rdi + ], rcx;jbe ": 4,
                "mov r8, qword [rdi + ];test byte [r8], al;test byte [rdi], al;cmp rsi, ;jae ": 4,
                "mov qword [var_10h], rax;call fcn.004157e0;mov rax, qword [var_28h];mov edi, dword [var_24h];mov esi, dword [var_20h]": 4,
                "call fcn.004157e0;mov rax, qword [var_28h];mov edi, dword [var_24h];mov esi, dword [var_20h];mov rcx, qword [var_18h]": 4,
                "jae ;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 7,
                "call fcn.004157e0;mov rcx, qword [var_18h];mov rax, qword [var_28h];mov edi, dword [var_24h];mov esi, dword [var_20h]": 2,
                "mov edi, dword [var_38h];mov r8, qword [var_70h];mov r9, qword [arg_88h];mov r10, qword [var_40h];jmp ": 2,
                "test rax, rax;je ;mov rsi, qword [rax + 8];mov rax, qword [rax];xor edi, edi": 2,
                "jge ;mov r8, qword [rax + rdi*8];mov r9, qword [r8 + ];cmp r9, rcx;ja ": 2,
                "test byte [rsi], al;test byte [rax], al;movabs rax, ;add rax, rcx;mov rdi, rax": 1,
                "test byte [rax], al;shr rdi, ;mov r8, rdi;and rdi, ;mov rax, qword [rax + rdi*8]": 1,
                "je ;mov rdi, rcx;shr rcx, 5;and rcx, ;add rcx, rax": 1,
                "shr rdi, 3;and rdi, 3;add rax, ;mov qword [var_50h], rsi;xor r9d, r9d": 1,
                "call fcn.004157e0;mov rax, qword [var_28h];mov rcx, qword [var_18h];mov r8d, dword [var_24h];mov edi, dword [var_20h]": 1,
                "mov qword [var_40h], rax;mov dword [var_34h], r8d;mov dword [var_30h], edi;mov qword [var_48h], rcx;xorps xmm0, xmm0": 1,
                "mov r9, qword [var_38h];jmp ;mov rbp, qword [var_58h];add rsp, ;ret": 1,
                "mov eax, 1;movzx ebx, byte [r9];test bl, al;je ;mov qword [var_18h], rcx": 2,
                "test bl, al;je ;mov qword [var_18h], rcx;mov qword [var_20h], r9;mov byte [var_17h], al": 2,
                "mov rcx, qword [var_18h];mov rdx, qword [var_28h];mov rsi, qword [arg_50h];mov rdi, qword [arg_48h];mov r8, qword [arg_40h]": 4,
                "test rax, rax;je ;mov rcx, qword [arg_78h];cmp qword [rax], rcx;jne ": 3,
                "mov rcx, qword [arg_78h];cmp qword [rax], rcx;jne ;sub rsp, ;mov qword [var_30h], rbp": 1,
                "cmp qword [rax], rcx;jne ;sub rsp, ;mov qword [var_30h], rbp;lea rbp, [var_30h]": 1,
                "jne ;sub rsp, ;mov qword [var_30h], rbp;lea rbp, [var_30h];mov rax, qword gs:[]": 1,
                "mov rcx, qword gs:[];mov rcx, qword [rcx];mov rcx, qword [rcx + ];mov rdx, qword [rcx + ];mov qword [var_48h], rdx": 2,
                "mov rcx, qword [rax + ];mov rbx, qword [arg_70h];mov rsi, qword [arg_68h];xor edi, edi;xor r8d, r8d": 2,
                "jne ;movzx r8d, byte [rcx];inc rcx;bt r8d, 0;jae ": 2,
                "ret;mov qword [rsp], rax;call fcn.00450200;mov rax, qword [var_10h];mov qword [var_30h], rax": 2,
                "mov qword [var_48h], rdx;test rdx, rdx;jbe ;mov rbx, rdx;xor edx, edx": 2,
                "test ecx, ecx;jne ;mov edx, dword [arg_8ch];mov rbx, qword [arg_80h];mov rsi, qword [arg_90h]": 2,
                "mov edx, ecx;mov ecx, edi;test rax, rax;jbe ;mov qword [var_50h], rax": 2,
                "mov qword [var_18h], rax;call fcn.00415930;mov rax, qword [var_30h];mov ecx, dword [var_2ch];mov edx, dword [var_28h]": 2,
                "mov r8, qword [var_48h];cmp r8, 8;jne ;mov r9, qword [arg_80h];xor r10d, r10d": 2,
                "mov r9, qword [arg_80h];xor r10d, r10d;jmp ;mov qword [var_68h], rax;mov dword [var_44h], ecx": 2,
                "add rsp, ;ret;xor eax, eax;jmp ;lea rax, []": 4,
                "xor eax, eax;mov rcx, qword [arg_68h];mov edx, dword [arg_64h];mov rbx, qword [arg_58h];mov esi, dword [arg_60h]": 2,
                "mov esi, dword [arg_64h];mov rdi, qword [arg_68h];jmp ;mov qword [var_38h], rcx;lea ecx, [rdx + 1]": 2,
                "call fcn.00415860;mov rax, qword [var_38h];lea rcx, [rax + 1];mov rbx, qword [var_20h];mov edx, dword [var_28h]": 2,
                "jne ;xor eax, eax;mov rcx, qword [arg_60h];mov edx, dword [arg_5ch];mov ebx, dword [arg_58h]": 3,
                "shr rcx, 3;xor ebx, ebx;xor esi, esi;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "lea rbp, [var_f8h];mov rdx, qword [arg_110h];cmp rdx, 8;je ;mov rbx, qword [arg_108h]": 4,
                "mov rbx, qword [arg_108h];movabs rsi, ;add rsi, rbx;mov rdi, rsi;shr rsi, ": 4,
                "lea r8, [];mov r9, qword [r8 + rsi*8];test byte [r9], al;shr rdi, ;mov r10, rdi": 4,
                "mov r11, rbx;shr rbx, 5;and rbx, ;add rbx, r9;mov r12, r11": 4,
                "and rbx, ;add rbx, r9;mov r12, r11;shr r11, 3;and r11, 3": 4,
                "cmp rdi, rsi;je ;mov rbx, r12;xor r9d, r9d;mov qword [var_b8h], rcx": 4,
                "jne ;mov qword [var_c8h], r14;mov r9, qword [r13];mov r10, qword [arg_118h];cmp r9, r10": 4,
                "mov qword [var_50h], r8;lea r8, [];jmp ;cmp rbx, ;sbb rax, rax": 4,
                "mov qword [var_50h], r14;sbb rax, rax;mov rcx, r9;shl r14, cl;and r14, rax": 3,
                "jbe ;test r15b, r15b;je ;mov r9d, ;movzx r9d, r9b": 3,
                "mov r9d, ;movzx r9d, r9b;movzx r8d, r15b;mov eax, r9d;mov r9, rdx": 3,
                "movzx r8d, r15b;mov eax, r9d;mov r9, rdx;xor edx, edx;div r8w": 3,
                "mov r8, rdx;sub rdx, rbx;add rdx, ;neg rdx;mov rax, qword [arg_8h]": 1,
                "neg rdx;mov rax, qword [arg_8h];mov rcx, qword [rax + ];mov rdx, rcx;shr rcx, 3": 1,
                "mov r8, rdx;sub rdx, rbx;add rdx, ;neg rdx;cmp rdx, ": 2,
                "mov r11d, 1;shl r11, cl;and r11, rbx;lea rdx, [r11 - 1];mov rbx, rdx": 2,
                "ja ;mov byte [r12], sil;lea rdx, [r8 + 4];lea rbx, [r12 + 1];jmp ": 2,
                "and edx, ;or esi, edx;mov byte [rbx], sil;cmp rdi, r10;je ": 2,
                "mov dword [var_ch], edi;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "lea rbp, [var_58h];mov rcx, qword [arg_98h];test rcx, ;jne ;mov rdx, qword [arg_88h]": 1,
                "mov rdx, qword [arg_88h];mov rax, qword [arg_90h];cmp rdx, rax;je ;test rdx, rdx": 1,
                "mov qword [var_30h], 0;xorps xmm0, xmm0;movups xmmword [var_38h], xmm0;movups xmmword [var_48h], xmm0;mov rdx, rbx": 1,
                "sub rbx, rsi;test rbx, rbx;jbe ;mov byte [var_30h], 1;cmp rbx, 1": 1,
                "mov byte [var_32h], ;dec rbx;mov esi, 3;jmp ;mov r9, rbx": 1,
                "mov byte [rsp + rsi + ], bl;shr r9, 7;inc rsi;mov rbx, r9;cmp rbx, ": 1,
                "jmp ;cmp rsi, ;jae ;mov byte [rsp + rsi + ], bl;lea rbx, [rsi + 1]": 1,
                "mov byte [rsp + rbx + ], 0;mov rax, qword [arg_a0h];mov qword [rsp], rax;lea rax, [var_30h];mov qword [var_8h], rax": 1,
                "shr rax, 3;add rax, 3;shr rax, 2;mov rcx, qword [arg_68h];add rax, rcx": 1,
                "mov qword [var_8h], ;call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.004174d0": 1,
                "shr rax, 3;add rax, 7;shr rax, 3;mov qword [var_30h], rax;lea rcx, [rax + 1]": 2,
                "jl ;cmp rcx, ;ja ;mov rdx, qword [var_30h];cmp rdx, rcx": 2,
                "jbe ;mov qword [var_38h], rax;mov rcx, qword [arg_50h];mov qword [rsp], rcx;mov qword [var_8h], 0": 2,
                "jmp fcn.00417850;int3;int3;int3;sub rsp, 8": 1,
                "mov rbx, qword [arg_20h];xor esi, esi;jmp ;add rax, ;cmp rax, 8": 2,
                "or rsi, ;mov byte [rbx], sil;mov rsi, r8;shr r8, 4;and r8, ": 2,
                "shr rsi, 8;add rbx, 2;jmp ;movzx r8d, byte [rcx];mov r9, r8": 2,
                "mov r11, rsi;and rsi, ;or rsi, ;mov byte [rbx], sil;mov rsi, r11": 2,
                "and r11, ;or r11, ;mov byte [rbx + 1], r11b;shr rsi, 8;add rbx, 2": 2,
                "mov r10, r9;cmp rcx, ;sbb r9, r9;movzx r11d, byte [r10];mov r12, r11": 2,
                "lea r9, [r10 + 1];bt r12d, 7;jb ;xor ecx, ecx;xor r10d, r10d": 2,
                "or r14, r12;inc r9;bt r13d, 7;jb ;imul r14, r8": 2,
                "or rsi, r12;add rax, 8;dec r10;cmp rax, r8;jb ": 1,
                "mov byte [rbx], r11b;shr r11, 8;add rsi, ;inc rbx;cmp rsi, 8": 1,
                "mov r12, rsi;cmp r14, rax;jb ;cmp r12, ;sbb rsi, rsi": 1,
                "mov r8, rcx;mov rcx, r12;mov r10, r8;shl r8, cl;and r8, rsi": 1,
                "add rax, ;shr rax, ;mov qword [var_8h], rax;lea rax, [];mov qword [var_10h], rax": 1,
                "mov qword [var_10h], rcx;mov qword [var_18h], 1;call fcn.00417980;mov rax, qword [var_28h];mov qword [arg_50h], rax": 1,
                "mov rax, qword [var_8h];mov qword [var_10h], rax;mov ecx, dword [];mov dword [rax + ], ecx;lea rcx, []": 2,
                "mov qword [rax + rcx*8 + ], rdx;inc rcx;cmp rcx, ;jl ;mov rax, qword []": 2,
                "je ;mov ebx, dword [];lea esi, [rbx + 3];cmp dword [rdx + ], esi;jne ": 4,
                "je ;movzx ecx, word [rax + ];cmp qword [rax + ], rcx;je ;mov ecx, dword []": 4,
                "call fcn.00456090;jmp fcn.004181e0;int3;int3;int3": 4,
                "mov rax, qword [arg_28h];xor ecx, ecx;jmp ;inc rcx;cmp rcx, ": 5,
                "jbe ;sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h];mov eax, dword []": 12,
                "je ;lea rax, [rdx + ];mov qword [rsp], rax;mov qword [var_8h], rbx;call fcn.00427820": 4,
                "mov qword [var_8h], rbx;call fcn.00427820;mov rax, qword [arg_60h];lea rcx, [rax + ];mov qword [rsp], rcx": 7,
                "cmp byte [], 0;je ;test al, al;je ;mov rax, qword [rcx + ]": 3,
                "lock xadd qword [rdx + ], rax;movzx eax, word [rcx + ];mov rdx, qword [rcx + ];imul rax, rdx;mov rdx, qword [var_30h]": 3,
                "mov qword [var_8h], rax;call skip;mov rax, qword [var_40h];mov rcx, qword [rax + ];mov rdx, qword [rax + ]": 3,
                "call skip;mov rax, qword [var_40h];mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rbx, rcx": 3,
                "mov rcx, qword [var_40h];jmp ;call fcn.0044b740;mov rcx, qword [var_40h];jmp ": 3,
                "mov rcx, qword [var_40h];jmp ;xor esi, esi;jmp ;mov rbx, qword [rdx + ]": 2,
                "je ;movzx eax, byte [];mov byte [var_2bh], al;test al, al;jne ": 2,
                "movzx eax, byte [];mov byte [var_2bh], al;test al, al;jne ;mov qword [rsp], rdx": 2,
                "call fcn.0040b600;mov rax, qword [arg_60h];lea rcx, [rax + ];mov qword [rsp], rcx;mov rcx, qword [var_40h]": 2,
                "mov rbp, qword [var_50h];add rsp, ;ret;call fcn.0044b740;mov rdx, qword [arg_60h]": 1,
                "movzx esi, word [rax + ];mov rdi, rcx;sub rcx, rsi;test rcx, rcx;jg ": 1,
                "mov eax, dword [var_18h];mov ecx, dword [var_1ch];cmp eax, ecx;jne ;mov rax, qword [arg_38h]": 1,
                "mov qword [rsp], rcx;mov rcx, qword [arg_30h];mov qword [var_8h], rcx;call fcn.004279c0;jmp ": 2,
                "jmp fcn.00418ab0;int3;int3;int3;int3": 2,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov rcx, qword [arg_48h];movzx ecx, byte [rcx + 8];mov edx, ecx": 3,
                "mov rdx, qword [];mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rcx;mov qword [var_18h], ": 6,
                "call fcn.0042e480;cmp qword [var_20h], 0;sete bl;mov rax, qword [var_40h];mov rcx, qword [var_28h]": 3,
                "mov rcx, qword [arg_68h];jmp ;shr rcx, 1;and rcx, ;mov qword [var_30h], rcx": 4,
                "call fcn.0042e4e0;cmp qword [var_28h], 0;sete bl;mov rax, qword [var_48h];mov rcx, qword [var_30h]": 3,
                "mov qword [var_8h], ;call fcn.004312e0;mov rax, qword [var_30h];mov qword [rsp], rax;call fcn.00431010": 7,
                "mov rax, qword [var_30h];mov qword [rsp], rax;call fcn.00431010;lea rax, [];mov qword [rsp], rax": 9,
                "call fcn.0042a380;mov rax, qword [];mov qword [rsp], rax;mov rax, qword [arg_40h];mov qword [var_8h], rax": 4,
                "mov eax, dword [rsp];mov qword [var_28h], rax;call fcn.00430940;lea rax, [];mov qword [rsp], rax": 4,
                "mov qword [var_8h], rax;call fcn.00418e60;mov rbp, qword [var_10h];add rsp, ;ret": 3,
                "ret;call fcn.00456090;jmp fcn.004192f0;int3;int3": 4,
                "ud2;call fcn.00456090;jmp fcn.004193c0;int3;int3": 4,
                "sub rsp, ;mov qword [var_20h], rbp;lea rbp, [var_20h];cmp dword [], 0;jne ": 5,
                "call fcn.0040b600;mov rax, qword [];test rax, rax;je ;cmp dword [rax + ], ": 5,
                "lea rax, [];mov qword [var_10h], rax;call fcn.0040dc80;mov rax, qword [var_18h];mov qword [], rax": 5,
                "mov qword [var_10h], rax;call fcn.0040dc80;mov rax, qword [var_18h];mov qword [], rax;mov rcx, qword []": 5,
                "mov rcx, rax;movabs rax, ;imul rcx;add rdx, rcx;sar rdx, 2": 5,
                "cmp rdx, ;jae ;mov ebx, 1;lock xadd dword [rcx + ], ebx;lea rdx, [rdx + rdx*4]": 4,
                "jne ;mov r9, qword [arg_38h];mov qword [rcx + rdx*8 + ], r9;mov r9, qword [arg_40h];mov qword [rcx + rdx*8 + ], r9": 4,
                "mov qword [rcx + rdx*8 + ], r9;mov r9, qword [arg_40h];mov qword [rcx + rdx*8 + ], r9;cmp dword [], 0;jne ": 4,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0;mov rbp, qword [var_20h];add rsp, ": 15,
                "mov rdi, rsi;mov rax, qword [arg_50h];call fcn.004580f0;mov rdi, r8;mov rax, qword [arg_30h]": 4,
                "mov rax, qword [arg_30h];call fcn.004580f0;jmp ;mov rax, qword [arg_38h];call fcn.004580f0": 4,
                "call fcn.00456090;jmp fcn.00419510;int3;int3;int3": 3,
                "mov byte [], 0;mov byte [], 0;mov rax, qword [];mov qword [var_8h], rax;lea rcx, []": 3,
                "test cl, cl;jne ;mov rbp, qword [var_10h];add rsp, ;ret": 4,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];xor eax, eax;xor ecx, ecx;mov qword [rsp + ], rcx": 3,
                "mov qword [rsp + 8], rcx;mov word [rsp + ], ;mov qword [rsp + ], 1;call fcn.00431c60;mov rax, qword [rsp + ]": 3,
                "mov qword [rsp], rax;call fcn.0040b7f0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rdx, qword [rsp + ]": 4,
                "cmp rbx, ;jae ;mov dword [rsp + ], ebx;lea rsi, [rbx + rbx*4];mov qword [rsp + ], rsi": 2,
                "mov r10, qword [rdx + rsi*8 + ];test byte [r10], al;cmp dword [], 0;jne ;mov qword [rax], r10": 2,
                "mov rdx, qword [rsp + ];mov qword [rdx], rcx;mov qword [rdx + 8], rax;mov rax, rdx;mov rcx, qword [rsp + ]": 2,
                "mov r9, qword [rdx + rsi*8 + ];cmp dword [], 0;jne ;mov qword [rax], r9;jmp ": 2,
                "mov qword [rax], r9;jmp ;mov rdi, rax;mov rax, r9;mov rcx, qword gs:[]": 1,
                "mov rdi, rax;mov rax, r9;call fcn.004580f0;mov rax, rdi;jmp ": 1,
                "mov rax, qword [];mov rcx, qword [rsp + ];mov qword [rcx + 8], rax;mov qword [], rcx;lea rax, []": 1,
                "jmp ;lea rax, [];mov qword [rsp], rax;mov qword [rsp + 8], ;call fcn.0042ff30": 3,
                "sub rsp, ;mov qword [var_d8h], rbp;lea rbp, [var_d8h];cmp dword [], 0;jne ": 1,
                "lea rbp, [var_d8h];cmp dword [], 0;jne ;mov rax, qword [arg_e8h];test rax, rax": 1,
                "mov rdx, rax;cmp qword [rcx + ], rax;ja ;cmp qword [rcx + ], rax;ja ": 1,
                "mov qword [var_88h], rcx;movzx ebx, word [rcx + ];test bx, ;jne ;movzx ebx, word [rcx + ]": 1,
                "jl ;cmp rdi, rsi;ja ;sub rsi, rdi;mov edx, edi": 1,
                "jmp ;mov r8, qword [rcx + rdx*8];inc rdx;movzx r9d, byte [r8 + ];lea rdi, [rdi + r9]": 1,
                "mov qword [var_68h], rdi;call fcn.00419800;xorps xmm0, xmm0;movups xmmword [var_a8h], xmm0;movups xmmword [var_b8h], xmm0": 1,
                "ret;mov edx, ;jmp ;movzx esi, byte [rbx + ];and esi, ": 1,
                "cmp sil, ;jne ;cmp qword [rbx + ], 0;je ;mov rax, qword [arg_e8h]": 1,
                "mov rcx, qword [var_88h];mov rbx, qword [var_80h];jmp ;mov rax, qword [var_90h];jmp ": 1,
                "mov qword [rsp], rax;call fcn.00450200;mov rax, qword [var_10h];mov qword [var_70h], rax;mov rcx, qword gs:[]": 1,
                "mov rbp, qword [var_30h];add rsp, ;ret;mov qword [var_28h], rbx;mov rax, qword [rax]": 1,
                "add qword [rax + ], rdx;mov rdx, qword [rax];sub dword [rax + ], edx;mov rdx, qword [rax];add qword [rax + ], rdx": 1,
                "jbe ;cvttsd2si rax, xmm0;mov qword [], rax;call fcn.0041a730;call fcn.0041a8a0": 2,
                "mov qword [], rax;call fcn.0041a730;call fcn.0041a8a0;movabs rax, ;mov qword [], rax": 2,
                "mov qword [], rax;mov rbp, qword [var_10h];add rsp, ;ret;subsd xmm0, xmm1": 2,
                "mov qword [var_8h], 4;call fcn.00408380;mov rax, qword [var_18h];mov rcx, qword [var_10h];cmp rax, 3": 3,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.00445970;mov rax, qword [var_10h];movsxd rcx, eax": 9,
                "ret;call fcn.00456090;jmp fcn.0041a730;int3;int3": 3,
                "mov dword [arg_20h], eax;mov ecx, dword [];mov dword [var_ch], ecx;mov dword [], eax;movsxd rdx, eax": 4,
                "add rsp, ;ret;mov eax, dword [];mov dword [rsp], eax;call fcn.0041bd70": 4,
                "xorps xmm0, xmm0;mov rcx, qword [arg_50h];movups xmmword [rcx], xmm0;movups xmmword [rcx + ], xmm0;movups xmmword [rcx + ], xmm0": 5,
                "mov qword [], ;mov rax, qword [];add rax, ;cmp qword [], rax;jae ": 5,
                "movsd xmm0, qword [var_38h];movsd qword [rsp], xmm0;call fcn.00430cc0;lea rax, [];mov qword [rsp], rax": 3,
                "movsd qword [rcx + ], xmm1;jmp ;subsd xmm1, xmm2;cvttsd2si rdx, xmm1;bts rdx, ": 2,
                "bts rdx, ;jmp ;mov rbx, rdx;shr rdx, 1;and rbx, 1": 2,
                "jl ;xorps xmm0, xmm0;cvtsi2sd xmm0, rbx;movsd xmm1, qword [];mulsd xmm1, xmm0": 2,
                "mulsd xmm1, xmm0;add eax, ;xorps xmm0, xmm0;cvtsi2sd xmm0, eax;divsd xmm1, xmm0": 2,
                "divsd xmm0, xmm2;movsd qword [rbx + ], xmm0;ret;mov rsi, rbx;shr rbx, 1": 2,
                "mov rcx, qword [];test rcx, rcx;jl ;xorps xmm1, xmm1;cvtsi2sd xmm1, rcx": 2,
                "jle ;mov rdx, qword [rcx + ];xorps xmm1, xmm1;cvtsi2sd xmm1, rdx;movsxd rdx, dword []": 2,
                "xorps xmm1, xmm1;cvtsi2sd xmm1, eax;movsd xmm3, qword [];divsd xmm1, xmm3;movsd xmm3, qword []": 2,
                "test rax, rax;jl ;xorps xmm1, xmm1;cvtsi2sd xmm1, rax;movsd qword [var_40h], xmm1": 2,
                "movsd xmm1, qword [var_40h];mulsd xmm0, xmm1;cvttsd2si rax, xmm0;mov qword [rsp], rax;call fcn.00431110": 2,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 5;call fcn.004312e0;movsd xmm0, qword [var_58h]": 2,
                "movsd xmm0, qword [var_60h];movsd qword [rsp], xmm0;call fcn.00430cc0;lea rax, [];mov qword [rsp], rax": 2,
                "movsd qword [rsp], xmm0;call fcn.00430cc0;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 9": 2,
                "shr rcx, 1;and rdx, 1;or rdx, rcx;xorps xmm0, xmm0;cvtsi2sd xmm0, rdx": 1,
                "inc rcx;cmp rcx, 5;jge ;mov rdx, qword gs:[];mov rdx, qword [rdx]": 1,
                "lea edx, [rbx - 1];lea ebx, [rdi + r8];imul rbx, rdx;shr rbx, ;cmp ebx, eax": 1,
                "shr rbx, ;cmp ebx, eax;jl ;lea edx, [rbx + 1];mov rbx, qword []": 1,
                "movsxd rdx, edx;cmp qword [], rdx;jbe ;mov rdx, qword [rbx + rdx*8];cmp dword [rdx + ], 1": 1,
                "je ;mov rbx, qword gs:[];mov rbx, qword [rbx];cmp qword [rbx + ], rdx;jne ": 1,
                "ret;mov rbp, qword [rsp];add rsp, 8;ret;call fcn.0042e8e0": 7,
                "lea rbp, [var_18h];cmp dword [], 0;je ;mov rax, qword [arg_30h];test byte [rax], al": 2,
                "mov rcx, qword [];test rcx, rcx;jne ;mov ecx, dword [];cmp dword [], ecx": 2,
                "mov ecx, 1;test cl, cl;je ;mov rcx, qword [arg_28h];cmp qword [rcx + ], 0": 2,
                "movabs rcx, ;mov qword [var_8h], rcx;call fcn.004336e0;cmp byte [], 0;jne ": 2,
                "mov rax, qword [var_10h];mov qword [rsp], rax;mov qword [var_8h], 0;call fcn.0044bb90;jmp ": 2,
                "mov rax, qword [rsp];sub rax, qword [];test rax, rax;jle ;mov rcx, qword [arg_30h]": 2,
                "add rsp, ;ret;mov rcx, qword [arg_30h];jmp ;mov qword [arg_38h], 0": 2,
                "mov rbp, qword [var_18h];add rsp, ;ret;mov edx, 1;lock xadd qword [rcx + ], rdx": 2,
                "cmp rsp, qword [rcx + ];jbe ;sub rsp, ;mov qword [rsp + 8], rbp;lea rbp, [rsp + 8]": 16,
                "mov rcx, qword [];test rcx, rcx;jl ;xorps xmm2, xmm2;cvtsi2sd xmm2, rcx": 2,
                "test edx, edx;jl ;mov rax, qword [];movsxd rdx, edx;imul rdx, rax": 2,
                "shr rdx, 5;add rdx, rbx;cmp rdx, rcx;cmovb rdx, rcx;mov qword [var_18h], rcx": 2,
                "movsd qword [], xmm0;mov rbp, qword [var_40h];add rsp, ;ret;mov rax, qword []": 1,
                "xorps xmm1, xmm1;cvtsi2sd xmm1, rcx;divsd xmm0, xmm1;movsd qword [], xmm0;mov qword [], rax": 1,
                "mov qword [rsp], rax;call fcn.0041ad20;mov rcx, qword [var_18h];xorps xmm0, xmm0;jmp ": 1,
                "movabs rax, ;mov rdi, rdx;mul rsi;shr rdx, 5;add rbx, rdx": 1,
                "xorps xmm2, xmm2;cvtsi2sd xmm2, rdx;addsd xmm2, xmm2;jmp ;mov rcx, ": 1,
                "mov rax, qword [];mov qword [var_38h], rax;mov rcx, qword [];mov qword [var_30h], rcx;mov rdx, qword []": 1,
                "call fcn.004312e0;mov rax, qword [var_10h];mov qword [rsp], rax;call fcn.00431010;call fcn.00430bf0": 9,
                "call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.0041b7d0;int3": 1,
                "jmp fcn.0041b7d0;int3;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov dword [var_18h], eax;mov dword [rsp], eax;call fcn.0041bd70;mov qword [rsp], 3;mov qword [var_8h], 0": 2,
                "lea ecx, [rax + 1];mov dword [var_1ch], ecx;mov dword [var_10h], ecx;call fcn.0041be40;mov eax, dword [var_1ch]": 2,
                "call fcn.0041be40;mov eax, dword [var_1ch];mov dword [rsp], eax;call fcn.0041bd70;mov eax, dword [var_1ch]": 2,
                "setne cl;test cl, cl;jne ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "inc dword [rdx + ];mov rcx, qword [rcx + ];mov qword [var_20h], rcx;mov edx, dword [];cmp edx, eax": 1,
                "jne ;mov eax, dword [var_18h];add eax, 2;cmp eax, edx;sete al": 1,
                "mov qword [var_18h], 1;call fcn.00431c60;lea rax, [];mov qword [rsp], rax;call fcn.0040b600": 2,
                "mov qword [rsp], rax;call fcn.0040b600;mov eax, dword [];lea ecx, [rax + 1];cmp dword [], 1": 2,
                "mov ecx, dword [arg_30h];cmp eax, ecx;jbe ;lea rax, [];mov qword [rsp], rax": 2,
                "mov qword [var_60h], rbp;lea rbp, [var_60h];mov rax, qword gs:[];mov rax, qword [rax];mov rcx, qword [rax + ]": 7,
                "test byte [rax], al;mov rax, qword gs:[];mov rax, qword [rax];cmp qword [rcx], rax;je ": 3,
                "jne ;lea ebx, [rdx - 1];mov dword [rcx + ], ebx;cmp edx, 1;jne ": 3,
                "test al, al;je ;mov rax, qword [arg_70h];test rax, rax;jne ": 3,
                "call fcn.0043ee70;cmp byte [], 0;jne ;mov rax, qword [];mov rcx, qword []": 3,
                "mov esi, dword [rsi + ];mov edi, dword [];cmp esi, edi;je ;jmp ": 3,
                "inc dword [];lea rax, [];mov qword [rsp], rax;call fcn.0041a980;mov rax, qword []": 2,
                "mov byte [], cl;mov dword [], ;mov dword [], ;call fcn.0041efe0;call fcn.00422540": 2,
                "mov qword [rsp], rax;call fcn.00455ec0;jmp ;movzx ecx, byte [];jmp ": 2,
                "mov qword [var_48h], 0;mov rax, qword [];mov qword [var_48h], rax;mov byte [rsp], 7;mov qword [var_8h], 3": 2,
                "call fcn.0044a760;inc qword [];jmp ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "xor eax, 1;test al, al;je ;mov dword [], 0;lea rax, []": 1,
                "jmp ;call fcn.00456090;jmp fcn.0041c500;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "jne ;mov eax, 1;mov byte [], al;test al, al;je ": 2,
                "call fcn.00459d30;mov rax, qword gs:[];mov rax, qword [rax];mov rcx, qword [rax + ];mov rdx, qword [rsp]": 2,
                "mov rax, qword gs:[];mov rax, qword [rax];mov rcx, qword [rax + ];mov rdx, qword [rsp];mov qword [var_48h], rdx": 2,
                "mov qword [var_188h], rcx;test byte [rax], al;mov qword [rcx + ], 5;lea rdi, [rcx + ];mov qword [var_1a8h], rdi": 2,
                "mov rax, qword [var_190h];mov byte [rax + ], 6;xorps xmm0, xmm0;movups xmmword [var_c0h], xmm0;lea rcx, []": 2,
                "xchg qword [rcx], rax;lea rax, [];mov rcx, rsi;xchg qword [rax], rsi;movzx eax, byte []": 2,
                "lea rbx, [];mov qword [rbx + rax*8], rdx;mov rax, qword [];add rax, qword [];mov qword [], rax": 2,
                "mov qword [rbx + rax*8], rdx;mov rax, qword [];add rax, qword [];mov qword [], rax;movsxd rax, dword []": 2,
                "mov rax, qword [];add rax, qword [];mov qword [], rax;movsxd rax, dword [];mov rdx, qword []": 2,
                "mov rsi, qword [];sub rcx, rsi;movsxd rsi, dword [];imul rsi, rcx;add rsi, qword []": 1,
                "mov qword [], 0;cmp byte [], 0;je ;inc dword [];lea rax, []": 1,
                "movsd qword [var_b8h], xmm0;mov qword [var_d0h], 0;xorps xmm1, xmm1;movups xmmword [var_d8h], xmm1;call fcn.00430940": 1,
                "call fcn.00430940;mov rax, qword [];sub rax, qword [];lea rcx, [var_d0h];mov qword [rsp], rcx": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 3;call fcn.004312e0;call fcn.004309d0": 13,
                "lea rbp, [rsp + ];mov rcx, qword gs:[];mov rcx, qword [rcx];mov qword [rsp + ], rcx;mov rdx, qword [rcx + ]": 1,
                "mov qword [rdx + 8], rax;lea rax, [];mov qword [rsp], rax;call fcn.0040b8e0;lea rax, []": 1,
                "je ;call fcn.00459d30;mov rax, qword [rsp];mov rcx, qword [rsp + ];mov qword [rcx + ], rax": 1,
                "sub rax, rcx;mov rcx, qword [rsp + ];mov rdx, qword [rcx + ];test rdx, rdx;jne ": 1,
                "mov edx, dword [];cmp eax, edx;ja ;jne ;mov rax, qword []": 1,
                "cmp byte [rbx + ], 0;je ;mov qword [rbx + ], ;call fcn.0041c500;mov rax, qword gs:[]": 1,
                "mov qword [rbx + ], ;call fcn.0041c500;mov rax, qword gs:[];mov rax, qword [rax];mov rcx, qword [rax + ]": 1,
                "mov rax, qword [rax + ];mov rcx, qword [rsp + ];mov qword [rcx], rax;mov rax, qword [rsp + ];mov rdx, rax": 1,
                "jmp ;xor eax, eax;jmp ;mov eax, 1;jmp ": 6,
                "mov qword [rsp], rax;call fcn.00431110;lea rax, [];mov qword [rsp], rax;mov qword [rsp + 8], ": 1,
                "cmp qword [], 0;jne ;mov rax, qword [];mov qword [var_68h], rax;mov rcx, qword []": 1,
                "mov qword [var_68h], rax;mov rcx, qword [];mov qword [var_80h], rcx;xor edx, edx;jmp ": 1,
                "mov qword [rsp], rax;call fcn.00424770;mov rax, qword [var_60h];lea rdx, [rax + 1];mov rax, qword [var_68h]": 1,
                "call fcn.0042a5f0;mov rax, qword [var_78h];test byte [rax], al;mov rcx, qword [rax + ];test rcx, rcx": 1,
                "sete cl;test cl, cl;jne ;call fcn.00430940;mov rax, qword [var_78h]": 1,
                "call fcn.00430c40;call fcn.004309d0;mov rax, qword [var_78h];mov rcx, qword [rax + ];test rcx, rcx": 1,
                "call fcn.004312e0;mov rax, qword [var_68h];mov qword [rsp], rax;call fcn.00431110;call fcn.004309d0": 2,
                "mov byte [], 0;call fcn.0042a0e0;mov rax, qword [];mov qword [], rax;mov rax, qword []": 1,
                "call fcn.0042ff30;ud2;mov eax, dword [];mov qword [var_50h], rax;mov ecx, dword []": 1,
                "mov eax, dword [];mov qword [var_50h], rax;mov ecx, dword [];mov qword [var_48h], rcx;mov rdx, qword []": 1,
                "mov qword [var_60h], rbx;mov rsi, qword [];mov qword [var_40h], rsi;mov rdi, qword [];mov qword [var_38h], rdi": 1,
                "mov qword [var_8h], 6;call fcn.004312e0;mov rax, qword [var_50h];mov qword [rsp], rax;call fcn.00431010": 1,
                "sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h];cmp dword [], 0;jne ": 1,
                "mov qword [rsp], rax;call fcn.0040b7f0;mov rax, qword [arg_28h];cmp rax, 2;jne ": 1,
                "jmp fcn.0041de40;int3;int3;int3;int3": 1,
                "jmp ;mov rbx, qword [rcx + rdx*8];mov word [rbx + ], 0;mov qword [rbx + ], 0;inc rdx": 2,
                "mov qword [var_8h], ;call fcn.00458f80;mov rax, qword [var_18h];lea rdx, [rax + 1];mov rax, qword [var_10h]": 2,
                "mov rax, qword [var_18h];lea rdx, [rax + 1];mov rax, qword [var_10h];mov rcx, qword [var_20h];cmp rdx, rax": 2,
                "mov qword [], rax;mov rbp, qword [var_28h];add rsp, ;ret;call fcn.0042e8e0": 2,
                "mov qword [], rax;mov rbp, qword [rsp];add rsp, 8;ret;lea rdi, []": 13,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040b600;mov rax, qword [];jmp ": 4,
                "cmp dword [], 0;jne ;mov qword [], 0;lea rax, [];mov qword [rsp], rax": 5,
                "jmp ;lea rdi, [rdx + ];mov rdx, rax;xor eax, eax;call fcn.004580f0": 3,
                "jmp ;mov rax, qword [rdx];call rax;jmp ;call fcn.00456090": 3,
                "mov qword [rsp], rbp;lea rbp, [rsp];mov rcx, qword [arg_18h];lea rdx, [rcx - 1];mov rbx, qword [arg_30h]": 4,
                "jmp ;mov rdi, rdx;mov rdx, r8;cmp rdi, ;jb ": 4,
                "lea rax, [rdi + ];mov byte [rbx + rsi], al;mov rax, qword [arg_20h];sub rax, rsi;mov rdx, rax": 4,
                "sar rax, ;and rax, rsi;add rax, rbx;mov qword [arg_38h], rax;sub rcx, rsi": 4,
                "cmp rcx, ;jae ;shr rcx, 1;movabs rax, ;mul rcx": 4,
                "mov qword [var_20h], rax;call fcn.0041e370;mov rax, qword [var_28h];mov rcx, qword [var_30h];mov rdx, qword [var_38h]": 4,
                "mov qword [arg_80h], rdx;mov rbp, qword [var_40h];add rsp, ;ret;mov rax, qword [arg_58h]": 4,
                "test rax, rax;jbe ;mov rax, qword [arg_50h];mov byte [rax], ;mov qword [arg_70h], rax": 4,
                "add rsp, ;ret;mov rdx, qword [arg_50h];mov qword [rsp], rdx;mov rdx, qword [arg_58h]": 6,
                "ud2;call fcn.00456090;jmp fcn.0041e450;int3;int3": 3,
                "mov qword [var_18h], rbp;lea rbp, [var_18h];mov rax, qword [arg_28h];mov rcx, qword [rax + 8];sub rsp, 8": 1,
                "ret;mov rax, rcx;mov rcx, qword [rax + ];test rcx, rcx;je ": 7,
                "je ;cmp qword [rcx], rax;je ;cmp qword [rcx + 8], rax;je ": 3,
                "mov rax, qword [var_10h];mov qword [rsp], rax;call fcn.00431290;call fcn.00430bf0;call fcn.004309d0": 11,
                "call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.0041e5e0;int3": 3,
                "mov qword [var_18h], rbp;lea rbp, [var_18h];mov rax, qword [arg_28h];mov rcx, qword [rax];test rcx, rcx": 9,
                "mov rax, rcx;mov rcx, qword [rax + ];test rcx, rcx;je ;cmp qword [rcx + 8], rax": 4,
                "mov rax, rcx;mov rcx, qword [rax + 8];test rcx, rcx;jne ;mov qword [arg_10h], rax": 5,
                "jbe ;lea rdi, [rbx + 8];mov rdx, rbx;mov rbx, rdi;jmp ": 6,
                "mov rdx, rbx;mov rbx, rdi;jmp ;mov qword [var_18h], rdx;mov qword [var_20h], rdi": 6,
                "lea rax, [];mov qword [rsp], rax;call fcn.0041a4e0;mov rax, qword [var_8h];mov qword [var_30h], rax": 6,
                "mov dword [rdx + ], esi;mov edi, ebx;shl ebx, ;xor ebx, edi;mov edi, esi": 5,
                "ud2;call fcn.00456090;jmp fcn.0041e8b0;int3;int3": 4,
                "je ;cmp qword [rdx + 8], rax;jne ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "cmp qword [rdx + 8], rax;jne ;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "je ;cmp qword [rax + ], rcx;jb ;mov rdx, qword [rax + 8];jmp ": 2,
                "jmp ;mov rbx, qword [rax];mov rax, rdx;mov rdx, rbx;jmp ": 2,
                "mov rbx, qword [rdx];mov rsi, qword [rbx + ];cmp rsi, rax;je ;mov rdi, qword [rbx + ]": 3,
                "mov qword [var_8h], rax;call fcn.0041eb90;mov rbp, qword [var_10h];add rsp, ;ret": 4,
                "test rdx, rdx;je ;cmp qword [rdx + 8], rax;jne ;mov qword [rdx + 8], rcx": 10,
                "mov rdi, qword [rcx];test rsi, rsi;je ;mov qword [rsi + ], rcx;mov qword [rcx], rax": 5,
                "mov qword [rax + ], rcx;mov qword [rax + 8], rdi;test rdi, rdi;je ;mov qword [rdi + ], rax": 5,
                "mov qword [rdi + ], rax;mov qword [rax], rbx;test rbx, rbx;je ;mov qword [rbx + ], rax": 5,
                "mov rsi, qword [rbx + ];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "je ;mov rcx, qword [rax + 8];mov rax, qword [rax];xor edx, edx;jmp ": 5,
                "lea rcx, [];lea rax, [rcx + rax*8];lea rax, [rax + ];mov eax, dword [rax];add eax, ": 5,
                "mov dword [], 0;mov rax, qword [];add rax, qword [];add rax, qword [];add rax, qword []": 5,
                "jmp ;inc rax;cmp qword [], rax;jle ;mov rcx, qword []": 5,
                "mov dword [var_14h], eax;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "call fcn.004312e0;mov eax, dword [var_14h];mov eax, eax;mov qword [rsp], rax;call fcn.00431010": 8,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;call fcn.004312e0;movzx eax, byte [var_13h]": 3,
                "movzx eax, byte [var_13h];mov byte [rsp], al;call fcn.00430c40;lea rax, [];mov qword [rsp], rax": 3,
                "ud2;call fcn.0042e8e0;ud2;mov dword [var_1ch], eax;mov dword [var_18h], ecx": 3,
                "ud2;call fcn.00456090;jmp fcn.0041f130;int3;int3": 3,
                "mov rax, qword [];lea ecx, [rax + 2];mov rdx, qword [];lea ebx, [rdx + rax];lea ebx, [rbx + 2]": 3,
                "mov rax, qword [rax + 8];mov dword [var_28h], ecx;mov qword [var_30h], rax;mov qword [var_50h], rbx;xor esi, esi": 2,
                "jl ;mov rbp, qword [var_70h];add rsp, ;ret;xor eax, eax": 2,
                "mov qword [var_38h], rcx;mov qword [var_50h], rax;xor esi, esi;jmp ;mov qword [var_40h], rsi": 2,
                "mov qword [var_10h], rcx;mov rcx, qword [arg_80h];mov qword [var_18h], rcx;sub edx, ebx;mov qword [var_20h], rdx": 2,
                "mov qword [var_18h], rcx;sub edx, ebx;mov qword [var_20h], rdx;call fcn.0041f700;mov rax, qword [var_40h]": 2,
                "ja ;cmp edx, edi;jb ;cmp edi, edx;ja ": 1,
                "cmp edi, edx;ja ;cmp edx, eax;jae ;mov rax, qword []": 1,
                "cmp edx, eax;jae ;mov rax, qword [];sub edx, edi;cmp qword [], rdx": 1,
                "jne ;mov rcx, qword [];mov qword [rax + ], rcx;xorps xmm0, xmm0;movups xmmword [var_58h], xmm0": 1,
                "mov qword [rax + ], rcx;xorps xmm0, xmm0;movups xmmword [var_58h], xmm0;mov qword [var_68h], 0;lea rcx, []": 1,
                "jbe ;sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h];mov rax, qword [arg_58h]": 2,
                "mov rsi, qword [arg_40h];add rsi, rdx;cmp rbx, rsi;jb ;mov rbp, qword [var_28h]": 2,
                "add rsi, rdx;cmp rbx, rsi;jb ;mov rbp, qword [var_28h];add rsp, ": 2,
                "shl rcx, ;mov rax, qword [arg_48h];add rax, rcx;mov qword [var_10h], rax;mov rax, qword [arg_50h]": 2,
                "mov qword [rsp + ], rax;mov rax, qword [rcx + ];test rax, rax;jne ;lea rax, []": 1,
                "mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;mov qword [rsp + ], rax;test rcx, rcx": 1,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0;mov rbp, qword [rsp + ];add rsp, ": 5,
                "sub rsp, ;mov qword [var_60h], rbp;lea rbp, [var_60h];mov eax, dword [];mov dword [var_28h], eax": 2,
                "cmp byte [], 0;je ;cmp qword [rsi + ], 0;je ;mov qword [var_38h], rbx": 2,
                "lea rcx, [rsi + rax];mov qword [rsp], rcx;mov rcx, qword [arg_70h];mov qword [var_8h], rcx;call fcn.00421590": 2,
                "lea rdx, [rcx + ];mov qword [rsp], rdx;mov qword [var_8h], 8;lea rdx, [];mov qword [var_10h], rdx": 2,
                "mov eax, dword [var_2ch];mov qword [rsp], rax;call fcn.00431010;call fcn.00430ba0;mov eax, dword [var_28h]": 2,
                "ud2;call fcn.00456090;jmp fcn.0041f8f0;int3;int3": 2,
                "jmp fcn.0041f8f0;int3;int3;int3;int3": 2,
                "mov rdx, qword [arg_60h];movzx ebx, byte [var_2fh];mov rax, rdx;mov ecx, ebx;mov rdx, qword [rax + ]": 2,
                "mov rdx, qword [rax + ];neg rdx;xorps xmm0, xmm0;cvtsi2sd xmm0, rdx;mulsd xmm0, qword []": 2,
                "jge ;movsd xmm0, qword [];movsd xmm1, qword [];mulsd xmm1, xmm0;cvttsd2si rdx, xmm1": 2,
                "cmp rsi, rbx;jge ;xorps xmm0, xmm0;cvtsi2sd xmm0, rsi;mulsd xmm0, qword []": 2,
                "cmp byte [], 0;je ;test cl, cl;je ;mov byte [var_2fh], cl": 2,
                "call fcn.0044a760;mov rax, qword [arg_60h];mov rbx, qword [var_30h];mov ecx, 1;jmp ": 1,
                "sub rsp, ;mov qword [var_40h], rbp;lea rbp, [var_40h];mov rcx, qword [arg_50h];test byte [rcx], al": 2,
                "test byte [rcx], al;lea rdi, [rcx + ];cmp dword [], 0;jne ;mov qword [rcx + ], 0": 2,
                "mov rax, qword [arg_50h];mov byte [rax + ], 1;mov rcx, qword gs:[];mov rcx, qword [rcx];mov rcx, qword [rcx + ]": 2,
                "mov rcx, qword gs:[];mov rcx, qword [rcx];mov rcx, qword [rcx + ];mov rdx, qword [rcx + ];test byte [rdx], al": 2,
                "mov qword [var_28h], rax;mov rcx, qword [arg_50h];mov qword [rsp], rcx;movabs rdx, ;mov qword [var_8h], rdx": 2,
                "xorps xmm0, xmm0;cvtsi2sd xmm0, rax;mulsd xmm0, qword [];cvttsd2si rax, xmm0;mov rcx, qword [arg_50h]": 2,
                "mov qword [rsp], rax;mov qword [var_8h], ;call fcn.004312e0;mov eax, dword [var_24h];mov qword [rsp], rax": 3,
                "mov qword [var_8h], ;call fcn.0042ff30;ud2;mov dword [var_20h], ecx;mov dword [var_24h], ebx": 1,
                "ud2;mov dword [var_20h], ecx;mov dword [var_24h], ebx;call fcn.00430940;lea rax, []": 1,
                "mov dword [var_20h], ecx;mov dword [var_24h], ebx;call fcn.00430940;lea rax, [];mov qword [rsp], rax": 1,
                "mov qword [var_8h], ;call fcn.0042ff30;ud2;call fcn.00444740;jmp fcn.0041fe10": 1,
                "mov qword [var_20h], rbp;lea rbp, [var_20h];lea rax, [];mov qword [rsp], rax;call fcn.0040b600": 24,
                "mov qword [], rax;jmp ;lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0": 7,
                "jle ;xorps xmm0, xmm0;cvtsi2sd xmm0, rax;mulsd xmm0, qword [];cvttsd2si rax, xmm0": 5,
                "jmp ;mov rax, qword [arg_38h];lea rcx, [];lock xadd qword [rcx], rax;mov rbp, qword [var_28h]": 3,
                "cmp byte [rax + ], 0;jne ;mov ecx, dword [rax + ];bt ecx, ;jae ": 4,
                "cmp rax, rcx;je ;mov qword [rsp], rax;call fcn.00443b30;lea rdi, [var_a8h]": 4,
                "mov qword [var_a0h], 0;lea rcx, [];mov qword [var_90h], rcx;lea rcx, [var_a8h];mov qword [var_98h], rcx": 3,
                "mov qword [var_18h], rax;movups xmmword [var_20h], xmm0;mov qword [var_30h], ;lea rbx, [var_90h];mov qword [var_38h], rbx": 3,
                "mov rax, qword [arg_1f8h];mov qword [rsp], rax;lea rcx, [var_90h];mov qword [var_8h], rcx;mov qword [var_10h], 0": 3,
                "mov qword [var_10h], 0;call fcn.0044bfb0;mov rax, qword [arg_1f8h];mov rcx, qword [rax + ];jmp ": 3,
                "cmp qword [rcx + ], 0;je ;mov qword [var_88h], rcx;lea rax, [rcx + ];mov qword [rsp], rax": 3,
                "je ;mov qword [var_88h], rcx;lea rax, [rcx + ];mov qword [rsp], rax;mov qword [var_8h], 8": 3,
                "mov qword [var_88h], rcx;lea rax, [rcx + ];mov qword [rsp], rax;mov qword [var_8h], 8;mov rcx, qword gs:[]": 1,
                "mov qword [var_8h], 8;lea rax, [];mov qword [var_10h], rax;mov rax, qword [arg_200h];mov qword [var_18h], rax": 2,
                "mov rcx, qword [rax + ];test rcx, rcx;jne ;mov rax, qword [var_1c8h];mov rcx, qword [var_1d8h]": 2,
                "lea rax, [var_a8h];mov qword [rsp], rax;call fcn.00422a20;cmp qword [var_8h], 0;je ": 2,
                "mov eax, dword [rax];add rax, qword [var_1a8h];mov rcx, qword [rcx + 8];mov qword [rsp], rax;mov qword [var_8h], rcx": 2,
                "mov rax, qword [var_78h];test rax, rax;je ;lea rcx, [];mov qword [rsp], rcx": 4,
                "call fcn.00424c50;mov rax, qword [var_1c8h];test rax, rax;jne ;cmp qword [var_1b8h], 0": 1,
                "mov qword [var_8h], rcx;call fcn.00422900;jmp ;lea rcx, [rax + ];mov qword [rsp], rcx": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;call fcn.004312e0;mov eax, dword [var_5ch]": 5,
                "mov edi, dword [var_18h];test edi, edi;jg ;test ebx, ebx;jg ": 1,
                "xor ebx, ebx;jmp ;add rax, ;mov rsi, qword [rax + 8];mov rdi, qword [rax]": 1,
                "mov qword [var_10h], rsi;call fcn.00422b30;mov rax, qword [var_78h];mov rcx, qword [var_58h];mov rdx, qword [arg_90h]": 1,
                "mov rdx, qword [rcx + ];sub rdx, rax;mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rsi": 1,
                "mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rsi;mov rax, qword [arg_a0h];mov qword [var_18h], rax": 1,
                "mov rdx, qword [var_70h];mov ebx, dword [var_54h];jmp ;call fcn.00456090;jmp fcn.00420bb0": 1,
                "lea rsi, [];lea rdi, [rdx + ];mov qword [var_38h], rax;mov qword [var_40h], rsi;mov r8d, dword []": 2,
                "mov rdx, qword [var_40h];test rdx, rdx;jne ;xor eax, eax;test al, al": 2,
                "mov rsi, qword [var_40h];jae ;cmp byte [rax + ], 0;jne ;mov qword [var_30h], rdx": 2,
                "test r9, r9;jne ;xor r8d, r8d;test r8, r8;je ": 2,
                "mov qword [rsp], r8;mov qword [var_8h], rcx;call fcn.00421590;mov rax, qword [arg_58h];mov rcx, qword [rax + ]": 2,
                "lock xadd qword [rbx], rcx;mov rcx, qword [arg_60h];bt ecx, 1;jb ;mov rdx, qword [var_30h]": 2,
                "mov rdx, qword [var_30h];mov rbx, qword [rax + ];mov qword [rax + ], 0;mov rsi, qword [var_18h];sub rsi, rbx": 2,
                "bt ecx, 0;jmp ;mov rax, rdx;jmp ;mov qword [var_28h], rsi": 2,
                "mov qword [rsp], rcx;call fcn.00420350;mov rax, qword [arg_58h];mov rcx, qword [arg_60h];xor edx, edx": 1,
                "mov rax, qword [arg_58h];mov rcx, qword [arg_60h];xor edx, edx;jmp ;mov rcx, qword [arg_60h]": 1,
                "xor edx, edx;jmp ;mov rcx, qword [arg_60h];bt ecx, 0;mov rbx, qword [var_40h]": 1,
                "mov rdx, qword [var_30h];mov rbx, qword [arg_60h];mov rsi, qword [var_40h];mov rdi, qword [var_18h];mov r8, rax": 1,
                "jae ;mov r8, qword [r8 + r9*8 + ];jmp ;xor r8d, r8d;jmp ": 1,
                "mov rbx, qword [arg_38h];jmp ;mov rsi, qword [var_18h];mov rdi, qword [arg_30h];mov r8, qword [arg_38h]": 1,
                "mov r8, qword [arg_38h];mov rcx, rdi;mov rbx, r8;mov rdx, rax;mov rax, rsi": 1,
                "mov rsi, qword [rcx];test rsi, rsi;je ;mov rdi, qword [rsi + ];test rdi, rdi": 1,
                "test rsi, rsi;je ;mov rdi, qword [rsi + ];test rdi, rdi;jne ": 1,
                "lock xadd dword [rdi], esi;mov edi, dword [];cmp esi, edi;jae ;mov qword [rsp], rcx": 1,
                "test rax, rax;je ;mov rcx, qword [arg_30h];mov rdx, qword [var_10h];mov rbx, qword [arg_38h]": 1,
                "jmp ;xorps xmm0, xmm0;movups xmmword [rsp], xmm0;call fcn.0042a4f0;mov rax, qword [arg_30h]": 1,
                "xor esi, esi;jmp ;mov qword [rsp], rcx;call fcn.00424860;mov rax, qword [var_18h]": 1,
                "call fcn.00444740;jmp fcn.004211d0;int3;int3;int3": 1,
                "mov qword [rsp], r8;mov qword [var_8h], rdx;mov qword [var_10h], rsi;call fcn.004153e0;mov rax, qword [var_18h]": 2,
                "mov rax, qword [arg_70h];mov rcx, qword [arg_68h];mov rdx, qword [arg_60h];mov ebx, dword [var_34h];mov rsi, qword [var_48h]": 2,
                "jmp ;mov qword [rsp], rax;mov rax, qword [arg_60h];mov qword [var_8h], rax;mov rbx, qword [var_48h]": 2,
                "mov rbx, rsi;jmp ;mov rbp, qword [var_50h];add rsp, ;ret": 2,
                "lea r8, [rdx + ];mov r9, rdi;shr rdi, ;and rdi, ;mov rdi, qword [rdx + rdi*8 + ]": 2,
                "mov r11, qword [rdi + ];add r11, qword [rdi + ];cmp rdx, r11;jae ;mov r11, qword [r10]": 2,
                "mov qword [rsp], r10;mov qword [var_8h], rdx;call fcn.00424390;mov rax, qword [var_68h];mov rdx, qword [var_40h]": 2,
                "mov esi, dword [var_34h];mov rdi, qword [var_58h];mov r8, qword [var_60h];mov r9, qword [arg_90h];mov r10, qword [arg_98h]": 2,
                "cmp rdx, ;mov edi, ;cmova rdx, rdi;mov qword [var_48h], rdx;xor ecx, ecx": 2,
                "mov rcx, rdi;cmp rcx, rdx;jae ;mov qword [var_50h], rcx;test rcx, rcx": 2,
                "mov qword [var_8h], r9;mov qword [var_10h], r11;call fcn.004153e0;mov rax, qword [var_18h];mov rcx, qword [var_20h]": 2,
                "ret;mov r10, qword [arg_98h];jmp ;mov r10, qword [arg_98h];jmp ": 1,
                "mov rdx, qword [var_28h];test rax, rax;jne ;mov rbp, qword [var_30h];add rsp, ": 2,
                "shr rcx, 3;mov rdi, rsi;and rsi, 7;mov r8, rcx;mov rcx, rsi": 2,
                "mov rsi, rax;shr rax, 5;and rax, ;add rax, rbx;mov rbx, rsi": 2,
                "and rax, ;add rax, rbx;mov rbx, rsi;shr rsi, 3;and rsi, 3": 2,
                "mov rcx, qword [rax];test rcx, rcx;je ;mov rdx, qword [rcx + ];cmp rdx, ": 2,
                "add rsp, ;ret;mov qword [rsp], rax;mov qword [var_8h], rbx;call fcn.00424390": 2,
                "jae ;mov qword [rcx + rdx*8 + ], rbx;inc qword [rcx + ];mov ecx, 1;jmp ": 2,
                "test r10b, ;setne r8b;mov ecx, esi;jmp ;mov rbx, rax": 2,
                "mov rbx, rax;xor esi, esi;xor eax, eax;jmp ;cmp dword [], 0": 2,
                "lock or byte [rsi], r9b;mov rcx, qword [rdx + ];movabs rbx, ;add rbx, rcx;mov rsi, rbx": 2,
                "movzx edi, byte [r8 + rdi];test dil, r9b;sete cl;jmp ;call fcn.0042e8e0": 1,
                "mov rax, qword [arg_80h];movabs rcx, ;add rcx, rax;mov rdx, rcx;shr rcx, ": 1,
                "mov qword [rsp], rax;mov qword [var_8h], 9;call fcn.004312e0;mov rax, qword [var_48h];mov qword [rsp], rax": 1,
                "mov rax, qword [var_48h];mov qword [rsp], rax;call fcn.00431180;lea rax, [];mov qword [rsp], rax": 2,
                "mov rax, qword [var_40h];mov qword [rsp], rax;call fcn.00431010;lea rax, [];mov qword [rsp], rax": 6,
                "mov rax, qword [arg_88h];lea rcx, [rax + 8];mov qword [var_20h], rcx;xor edx, edx;xor ebx, ebx": 1,
                "mov qword [var_20h], rcx;xor edx, edx;xor ebx, ebx;jmp ;add rdx, 8": 1,
                "xor ebx, ebx;jmp ;add rdx, 8;cmp rdx, rcx;jae ": 1,
                "call fcn.004309d0;mov rax, qword [arg_88h];mov rcx, qword [var_20h];mov rdx, qword [var_28h];xor ebx, ebx": 1,
                "mov rcx, qword [var_20h];mov rdx, qword [var_28h];xor ebx, ebx;jmp ;call fcn.00430940": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 5;call fcn.004312e0;call fcn.004309d0": 2,
                "mov rcx, qword [var_8h];lock or byte [rcx], al;mov rax, qword gs:[];mov rax, qword [rax];mov rax, qword [rax + ]": 1,
                "mov qword [var_50h], rcx;xor edx, edx;jmp ;inc rdx;cmp rdx, rax": 2,
                "movabs rdi, ;lea r8, [rsi + rdi];mov r9, r8;shr r8, ;cmp r8, ": 7,
                "xor r10d, r10d;xor r9d, r9d;xor esi, esi;jmp ;mov rbp, qword [var_48h]": 6,
                "mov qword [var_10h], r8;mov qword [var_18h], rbx;mov qword [var_20h], rax;mov qword [var_28h], r11;call fcn.004168b0": 4,
                "mov qword [var_28h], r11;call fcn.004168b0;mov rax, qword [var_30h];mov rcx, qword [var_38h];mov rdx, qword [var_40h]": 4,
                "je ;cmp qword [rdx + ], ;jne ;mov rdx, qword [rcx + ];test rdx, rdx": 4,
                "jae ;mov qword [rdx + rcx*8 + ], rax;inc qword [rdx + ];mov rbp, qword [var_10h];add rsp, ": 4,
                "ret;call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.00422a20": 4,
                "jmp fcn.00422a20;int3;int3;int3;int3": 4,
                "cmp rbx, ;jae ;shl rbx, 5;mov r8d, dword [rcx + rbx + ];mov ebx, dword [rcx + rbx + ]": 4,
                "inc qword [rax + ];mov rbp, qword [var_18h];add rsp, ;ret;mov qword [var_10h], rcx": 4,
                "mov qword [rax + ], rcx;jmp ;call fcn.0042e8e0;ud2;lea rax, []": 4,
                "ud2;call fcn.00456090;jmp fcn.00422b30;int3;int3": 4,
                "mov qword [var_50h], rbp;lea rbp, [var_50h];mov rax, qword [arg_70h];test rax, rax;je ": 5,
                "mov rcx, qword [arg_60h];mov qword [rsp], rcx;mov rcx, qword [arg_68h];mov qword [var_8h], rcx;mov rcx, rax": 5,
                "mov rdx, qword [var_18h];cmp rcx, ;jae ;mov qword [var_40h], rdx;mov qword [arg_60h], rax": 4,
                "jae ;mov qword [var_40h], rdx;mov qword [arg_60h], rax;mov rbx, rcx;shl rcx, 5": 4,
                "dec rax;mov qword [var_10h], rax;call fcn.00422ca0;mov rax, qword [var_20h];mov rcx, qword [var_28h]": 3,
                "mov qword [arg_80h], rax;mov rax, qword [arg_68h];mov qword [arg_88h], rax;mov rbp, qword [var_50h];add rsp, ": 3,
                "mov edx, dword [rcx];cmp eax, edx;jae ;mov rcx, qword [rcx + ];jmp ": 4,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040b600;mov byte [], 1;mov rax, qword [rsp + ]": 4,
                "call fcn.004063a0;lea rax, [];mov qword [rsp], rax;lea rcx, [];mov qword [rsp + 8], rcx": 4,
                "call fcn.00431c60;jmp ;lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0": 3,
                "lea rbx, [];lock xadd dword [rbx], edx;mov edx, dword [];jmp ;mov edx, esi": 4,
                "lock xadd dword [rbx], edx;mov edx, dword [];jmp ;mov edx, esi;mov esi, edx": 4,
                "test rax, rax;je ;movzx edx, byte [rax + ];cmp dl, 1;je ": 3,
                "movzx edx, byte [rax + ];cmp dl, 1;je ;mov edi, dword [rax + ];cmp edi, esi": 3,
                "lea edx, [rsi - 2];cmp dword [rax + ], edx;jne ;lea edi, [rsi - 1];mov r8, rax": 3,
                "lock cmpxchg dword [r8 + ], edi;sete dl;test dl, dl;je ;test r8, r8": 3,
                "je ;test r8, r8;mov qword [var_50h], rcx;movsd qword [var_28h], xmm0;jne ": 3,
                "mov rax, ;mov edx, ;lock xadd dword [rbx], edx;dec edx;test edx, edx": 3,
                "mov rcx, qword [rcx + ];dec dword [rcx + ];mov qword [arg_68h], rax;mov rbp, qword [var_58h];add rsp, ": 3,
                "mov rdx, qword [];mov qword [var_38h], rdx;call fcn.00430940;lea rax, [];mov qword [rsp], rax": 3,
                "mov rax, qword [var_48h];shr rax, ;mov qword [rsp], rax;call fcn.00431010;lea rax, []": 3,
                "mov r8d, r9d;shr r9d, 9;mov rdx, qword [rdi + rdx*8 + 8];mov rdx, qword [rdx + r9*8];test byte [rdx], al": 1,
                "ud2;call fcn.00456090;jmp fcn.00423030;int3;int3": 1,
                "mov rdx, qword [arg_30h];mov ebx, dword [rdx + ];cmp ebx, ecx;je ;lea esi, [rcx + 3]": 2,
                "je ;lea eax, [rcx - 2];lea ebx, [rcx - 1];lock cmpxchg dword [rdx + ], ebx;sete bl": 2,
                "test bl, bl;jne ;mov dword [var_18h], ecx;mov dword [var_1ch], esi;jmp ": 2,
                "lea rbp, [var_c0h];mov rdx, qword gs:[];mov rdx, qword [rdx];mov rbx, qword [rdx + ];cmp dword [rbx + ], 0": 2,
                "mov rdx, qword [rdx];mov rbx, qword [rdx + ];cmp dword [rbx + ], 0;jne ;cmp dword [rbx + ], 0": 2,
                "mov byte [var_2bh], dil;cmp dil, 1;jne ;lea r8d, [rbx - 1];cmp dword [rsi + ], r8d": 2,
                "mov byte [var_26h], dil;mov r9, qword [rsi + ];mov qword [var_40h], r9;mov rdx, qword [rdx + ];mov qword [var_80h], rdx": 2,
                "test r9, r9;je ;mov rcx, rdx;xor edx, edx;div r9": 2,
                "and r12, 7;mov r13, rcx;mov rcx, r12;mov r14d, 1;shl r14d, cl": 2,
                "jmp ;mov r11, qword [r11];mov r13, qword [var_80h];test r11, r11;je ": 2,
                "mov r13, qword [var_80h];test r11, r11;je ;movzx r13d, word [r11 + 8];cmp r13, r14": 2,
                "je ;movzx r13d, word [r11 + 8];cmp r13, r14;jae ;cmp byte [r11 + ], 1": 2,
                "cmp r13, r14;jae ;cmp byte [r11 + ], 1;jne ;bts r15d, ecx": 2,
                "mov r14, qword [var_50h];mov rdx, qword [var_78h];mov rax, qword [var_70h];jmp ;mov r13, qword [var_80h]": 2,
                "mov qword [var_90h], rax;mov byte [var_98h], 1;mov qword [var_a0h], 0;mov rax, qword [rsi + ];mov qword [var_a8h], rax": 2,
                "je ;movzx ecx, byte [var_98h];cmp cl, ;jne ;inc qword [var_90h]": 2,
                "mov byte [var_b0h], 1;jmp ;shl ecx, 1;mov byte [var_b0h], cl;jmp ": 1,
                "jbe ;sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h];movsd xmm0, qword []": 1,
                "sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h];movsd xmm0, qword [];xorps xmm1, xmm1": 1,
                "xorps xmm1, xmm1;ucomisd xmm0, xmm1;jne ;jnp ;cmp byte [], 0": 1,
                "sub rsi, rdx;cmp rbx, rsi;jle ;call fcn.00423030;cmp qword [rsp], ": 1,
                "ret;call fcn.00456090;jmp fcn.00423ed0;int3;int3": 1,
                "mov rdx, qword [var_30h];cmp rax, rdx;jb ;mov qword [rsp], rcx;call fcn.0040b600": 3,
                "cmp rdx, rcx;jb ;mov rbx, qword [rax + ];cmp rcx, rbx;je ": 3,
                "mov qword [var_48h], rax;mov rcx, qword [var_38h];shl rcx, 3;mov rdx, qword [arg_60h];add rcx, qword [rdx + 8]": 3,
                "mov rax, qword [var_30h];inc rax;xchg qword [rdx + ], rax;mov qword [rsp], rdx;call fcn.0040b7f0": 3,
                "test byte [rax], al;mov ecx, dword [var_24h];and rcx, ;mov rdx, qword [arg_68h];mov qword [rax + rcx*8], rdx": 3,
                "cmove rbx, rax;mov qword [var_28h], rbx;shl rbx, 3;mov qword [rsp], rbx;mov rcx, qword []": 3,
                "shl rdx, 3;mov qword [var_10h], rdx;call fcn.00459210;mov rax, qword [var_40h];mov rcx, qword [arg_60h]": 3,
                "mov rcx, qword [arg_60h];jmp ;mov rcx, qword [rcx + 8];lea rcx, [rcx + rax*8];mov rcx, qword [rcx]": 3,
                "lea rbp, [var_8h];call fcn.00424a20;mov rax, qword [rsp];mov rcx, qword [arg_18h];mov qword [rcx], rax": 5,
                "call fcn.00456090;jmp fcn.00424320;int3;int3;int3": 5,
                "mov rcx, qword [rax];test rcx, rcx;je ;cmp qword [rcx + ], ;jne ": 6,
                "je ;cmp qword [rcx + ], ;jne ;mov rdx, qword [rax + 8];mov qword [rax], rdx": 6,
                "cmp dword [], 1;je ;mov rbp, qword [var_10h];add rsp, ;ret": 8,
                "mov rsi, qword [arg_60h];xor edi, edi;jmp ;mov qword [rsp], rdx;call fcn.00424cb0": 5,
                "jne ;add qword [rdx + ], r9;cmp r9, rax;ja ;sub rax, r9": 5,
                "mov r8, rsi;neg rsi;shl r9, 3;sar rsi, ;and rsi, r9": 5,
                "mov rsi, r8;test rax, rax;jle ;mov qword [arg_60h], rsi;mov qword [arg_58h], rax": 5,
                "mov qword [var_30h], rbx;jmp ;mov qword [var_28h], rdx;mov qword [var_20h], r9;mov byte [var_1fh], dil": 5,
                "mov r9, qword [var_20h];jmp ;test dil, dil;je ;cmp dword [], 1": 4,
                "mov rdx, qword [rcx];mov rax, qword [arg_58h];jmp ;mov rbp, qword [var_38h];add rsp, ": 4,
                "ret;mov qword [var_10h], rcx;call fcn.00424d10;mov rax, qword [rsp];test rax, rax": 4,
                "test rax, rax;je ;mov qword [var_8h], rax;mov rax, qword [var_10h];mov qword [rsp], rax": 3,
                "mov qword [rsp], rax;call fcn.00424320;mov rax, qword [arg_28h];mov rcx, qword [rax];jmp ": 3,
                "jmp fcn.00424680;int3;int3;int3;mov rcx, qword gs:[]": 3,
                "mov qword [rsp], rcx;call fcn.00424c50;mov rax, qword [arg_18h];mov qword [rax + 8], 0;mov rcx, qword [rax + ]": 3,
                "mov qword [rax + 8], 0;mov rcx, qword [rax + ];test rcx, rcx;je ;lea rdx, []": 3,
                "je ;mov rdx, qword [rax + 8];mov rbx, qword [rdx + ];test rbx, rbx;je ": 4,
                "test rbx, rbx;je ;jl ;cmp rbx, ;ja ": 4,
                "add rsp, ;ret;mov rbp, qword [var_10h];add rsp, ;ret": 8,
                "cmp qword [rax + ], 0;jne ;mov rbp, qword [var_10h];add rsp, ;ret": 5,
                "ud2;call fcn.00456090;jmp fcn.004249c0;int3;int3": 5,
                "jne ;xor eax, eax;test rax, rax;jne ;mov qword [var_28h], rax": 6,
                "cmp qword [], 0;jne ;cmp qword [var_20h], 0;je ;xor ecx, ecx": 6,
                "cmp qword [var_20h], 0;je ;lea rax, [];mov qword [rsp], rax;call fcn.0040b600": 5,
                "lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.00427820;lea rax, []": 5,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.00427820;lea rax, [];mov qword [rsp], rax": 5,
                "test byte [rax], al;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.0040b390": 10,
                "ret;call fcn.00456090;jmp fcn.00424cb0;int3;mov rcx, qword gs:[]": 5,
                "mov qword [arg_38h], rax;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "ret;call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.00424d90": 5,
                "je ;lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0;mov byte [arg_38h], 0": 6,
                "call fcn.0040b7f0;mov rax, qword [var_8h];cmp rax, 0;setne byte [arg_38h];mov rbp, qword [var_20h]": 6,
                "mov qword [var_60h], rbp;lea rbp, [var_60h];mov byte [var_1fh], 0;mov rax, qword [arg_78h];cmp byte [rax + ], 0": 7,
                "movups xmmword [var_50h], xmm0;lea rcx, [];mov qword [var_38h], rcx;mov qword [var_40h], rax;mov rcx, qword [arg_70h]": 7,
                "lea rbx, [var_20h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "shr rbx, ;cmp rbx, ;jb ;xor ecx, ecx;test rcx, rcx": 11,
                "mov rax, qword [arg_78h];mov rcx, qword [rax + ];shl rcx, ;add rcx, qword [rax + ];movabs rbx, ": 5,
                "call rax;cmp byte [var_1fh], 0;jne ;mov rbp, qword [var_60h];add rsp, ": 4,
                "add rsp, ;ret;mov rax, qword [];sub rax, qword [var_20h];mov qword [], rax": 4,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rcx;mov rcx, qword [var_28h];lea rdx, [var_28h]": 4,
                "jmp ;lea rdi, [];mov rbx, qword [rdi + rbx*8];test rbx, rbx;je ": 7,
                "jmp ;call fcn.00456090;jmp fcn.00424fe0;int3;int3": 3,
                "jmp fcn.00424fe0;int3;int3;int3;int3": 3,
                "shl rcx, ;mov rdx, qword [rax + ];add rcx, rdx;mov rbx, qword [];cmp rbx, ": 3,
                "sar rax, 1;cmp rax, ;mov ecx, ;cmovg rcx, rax;mov qword [rsp + ], rcx": 1,
                "mov qword [rsp + ], rdx;mov rdx, qword [rax + ];mov rbx, qword [rax + ];test rbx, rbx;jle ": 1,
                "mov rdi, qword [rsp + ];cmp qword [rax + ], 0;mov qword [rax + ], rdi;mov qword [rax + ], rsi;mov qword [rax + ], rbx": 1,
                "mov rcx, qword [rsp + 8];add rax, rcx;mov rdx, rax;shr rax, ;cmp rax, ": 1,
                "dec edx;cmp dl, 1;ja ;cmp qword [rax + ], rcx;seta byte [rsp + ]": 1,
                "lea rbx, [];mov rax, qword [rbx + rax*8];test rax, rax;je ;shr rdx, ": 2,
                "test rax, rax;je ;cmp qword [rax + ], rcx;jbe ;mov qword [arg_10h], 0": 1,
                "mov qword [rsp], rbp;lea rbp, [rsp];mov rcx, qword [arg_10h];test byte [rcx], al;mov qword [rcx + ], ": 1,
                "lea rax, [];mov qword [rcx + ], rax;mov byte [rcx + ], 1;mov qword [rcx + ], ;cmp dword [], 0": 1,
                "cmp rax, ;jl ;mov rbp, qword [rsp];add rsp, 8;ret": 1,
                "jmp ;lea rdi, [rcx + ];lea rax, [];call fcn.004580f0;lea rdi, [rcx + ]": 1,
                "call fcn.00456090;jmp fcn.00425650;int3;int3;int3": 1,
                "test r9, r9;jbe ;mov r10, qword [rcx + ];test r10, r10;jbe ": 2,
                "lock cmpxchg qword [rcx + ], r11;sete r11b;movzx r11d, r11b;mov r12, r9;sub r9, r10": 2,
                "movzx r11d, r11b;mov r12, r9;sub r9, r10;test r11, r11;cmovne r12, r9": 2,
                "jmp ;xchg qword [rcx + ], rbx;test al, al;jne ;cmp byte [], 0": 1,
                "movzx edx, byte [r14 + r10];jae ;movzx r8d, byte [r14 + r13];not r8d;mov byte [var_1bh], r8b": 2,
                "test dil, dl;je ;mov qword [var_38h], r14;xor edx, edx;jmp ": 2,
                "test r15b, r8b;je ;lea r15, [r12 + r14*8];add r15, rcx;cmp r15, ": 2,
                "add r15, rcx;cmp r15, ;jae ;mov r15, qword [r9 + r15*8 + ];mov r11d, dword [r15 + ]": 2,
                "mov r11d, dword [r15 + ];lea r13d, [rbx - 2];cmp r11d, r13d;jne ;lea r11d, [rbx - 1]": 2,
                "add rax, rdi;mov rcx, qword [var_40h];test rcx, rcx;cmovne rdi, rax;mov r10, qword [var_80h]": 2,
                "mov r10, qword [var_80h];mov r14, qword [var_38h];movzx r8d, byte [r14 + r10];mov rax, qword [var_78h];movzx ecx, byte [r14 + rax]": 2,
                "movzx ecx, byte [r14 + rax];not ecx;and r8d, ecx;mov rcx, qword [var_50h];mov rdx, rcx": 2,
                "jbe ;test rsi, rsi;jl ;cmp rsi, r14;ja ": 1,
                "sub rax, rcx;shl rax, ;mov qword [rsp], rax;call fcn.0044b690;mov rcx, qword [var_28h]": 1,
                "jmp fcn.00425d20;int3;int3;int3;mov rcx, qword gs:[]": 1,
                "mov rcx, qword [rax + ];mov rcx, qword [rcx + ];mov rcx, qword [rcx + 8];add qword [], rcx;mov rcx, qword [rax + ]": 2,
                "add qword [], rcx;mov rcx, qword [rax + ];mov rcx, qword [rcx + ];mov qword [rcx + 8], 0;mov rcx, qword [rax + ]": 2,
                "mov qword [rsp], rax;call fcn.0040b7f0;mov rax, qword [var_30h];mov qword [arg_68h], rax;mov rbp, qword [var_40h]": 2,
                "mov qword [arg_68h], rax;mov rbp, qword [var_40h];add rsp, ;ret;mov qword [var_28h], 0": 2,
                "jmp ;lea rax, [];mov qword [rsp], rax;call fcn.0041ad20;mov rax, qword [var_30h]": 1,
                "jmp ;mov rcx, qword [arg_50h];mov edx, dword [rcx + ];xchg dword [rax + ], edx;mov edx, dword [rcx + ]": 1,
                "lea rdx, [rdx + rdx*4];lea rdx, [rcx + rdx*8];lea rdx, [rdx + ];mov qword [rsp], rdx;mov qword [var_8h], rax": 1,
                "mov qword [var_8h], rax;call fcn.00424050;mov rax, qword [var_30h];mov byte [rax + ], 1;mov word [rax + ], 0": 1,
                "mov byte [rax + ], cl;shr cl, 1;test cl, cl;jne ;mov rcx, qword [rax + ]": 1,
                "je ;inc qword [];mov rbx, qword [rax + ];add qword [], rbx;inc qword []": 1,
                "lea rbx, [];lock xadd qword [rbx], rcx;jmp ;movsx rcx, cl;cmp rcx, ": 1,
                "lea rdx, [];movzx edx, word [rdx + rcx*2];mov qword [rax + ], rdx;lea rcx, [rcx + rcx*2];mov rdx, rcx": 1,
                "mov byte [var_30h], al;movzx eax, byte [arg_61h];mov byte [var_31h], al;lea rax, [var_10h];mov qword [var_38h], rax": 2,
                "lea rax, [var_18h];mov qword [rsp], rax;call fcn.00455f40;mov rax, qword [var_10h];test rax, rax": 2,
                "cmp byte [rax + ], 0;jne ;mov rax, qword [var_10h];mov byte [rax + ], 0;mov rax, qword [var_10h]": 2,
                "mov rcx, qword [rax + ];mov rax, qword [rax + ];mov qword [rsp], rcx;shl rax, ;mov qword [var_8h], rax": 2,
                "mov byte [rax + ], 2;mov qword [rax + ], 0;mov word [rax + ], 0;mov byte [rax + ], 0;mov qword [rax + ], 0": 2,
                "call fcn.00444740;jmp fcn.004264a0;int3;int3;int3": 2,
                "test byte [rbx], al;mov rdi, rcx;shr rcx, ;shr rsi, ;and rsi, ": 3,
                "jne ;mov rbx, r9;shl r9, ;add r9, rdi;add r9, rdx": 3,
                "mov rbx, r9;shl r9, ;add r9, rdi;add r9, rdx;mov r11, r9": 3,
                "mov rax, qword [var_10h];mov rcx, qword [var_18h];test rcx, rcx;je ;test rax, rax": 4,
                "mov qword [var_8h], rax;call fcn.0041eb90;mov rax, qword [var_20h];jmp ;mov ecx, 1": 4,
                "mov qword [rsp], rdx;mov qword [var_8h], rcx;call fcn.0041eb90;mov rax, qword [var_20h];jmp ": 4,
                "jbe ;lea rbx, [rsi + rbx];lea rbx, [rbx - 1];dec rsi;not rsi": 4,
                "mov qword [var_10h], rdx;mov qword [var_18h], rax;call fcn.00426580;mov rax, qword [arg_40h];shl rax, ": 3,
                "mov rax, qword [var_20h];mov byte [rax + ], 0;mov rdx, qword [arg_40h];jmp ;mov rax, qword [arg_38h]": 3,
                "xorps xmm0, xmm0;movups xmmword [rax], xmm0;mov qword [rax + ], 0;mov qword [rax + ], rcx;sub rsi, rdx": 2,
                "jae ;mov rdi, qword [r9 + rdi*8 + ];test byte [rdi], al;shr r8, ;and r8, ": 2,
                "shr rcx, ;and rcx, ;mov qword [rdi + rcx*8 + ], rax;mov rcx, qword [rax + ];shl rcx, ": 2,
                "mov qword [rdi + rcx*8 + ], rax;mov rcx, qword [rax + ];shl rcx, ;add rcx, qword [rax + ];add rsi, rcx": 2,
                "mov rdi, rsi;shr rsi, ;cmp rsi, ;jae ;mov rsi, qword [r9 + rsi*8 + ]": 2,
                "mov rcx, qword [rbx + ];mov qword [rsp], r9;mov qword [var_8h], rax;mov word [var_10h], 0;mov qword [var_18h], rcx": 1,
                "mov word [var_10h], 0;mov qword [var_18h], rcx;call fcn.00426f90;mov rax, qword [var_20h];mov byte [rax + ], 3": 1,
                "mov qword [var_18h], rcx;call fcn.00426f90;mov rax, qword [var_20h];mov byte [rax + ], 3;mov rdx, qword [arg_40h]": 1,
                "mov rax, qword [arg_38h];mov qword [rsp], rax;mov rcx, qword [arg_40h];mov qword [var_8h], rcx;call fcn.00426c40": 1,
                "shr rcx, ;mov qword [rax + ], rcx;mov word [rax + ], 0;mov byte [rax + ], 0;mov qword [rax + ], 0": 1,
                "mov qword [rsp], rbx;mov qword [var_8h], rdx;mov qword [var_10h], rcx;mov qword [var_18h], rax;call fcn.00426580": 1,
                "ret;call fcn.00456090;jmp fcn.00426c40;int3;int3": 1,
                "sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h];xorps xmm0, xmm0;movups xmmword [var_8h], xmm0": 2,
                "lea rbp, [var_30h];mov rax, qword [arg_48h];movzx ecx, byte [rax + ];cmp cl, 1;jne ": 4,
                "test cx, cx;jne ;mov rdx, qword [arg_40h];mov ebx, dword [rdx + ];cmp dword [rax + ], ebx": 4,
                "movzx edi, byte [rsi + rcx + ];shr rbx, ;and rbx, 7;btr edi, ebx;mov byte [rsi + rcx + ], dil": 4,
                "mov byte [rsi + rcx + ], dil;movzx ecx, byte [arg_50h];test cl, cl;je ;mov rcx, qword [rax + ]": 4,
                "mov rax, qword [arg_48h];cmp byte [rax + ], 0;je ;mov rcx, qword [arg_40h];test byte [rcx], al": 3,
                "mov rcx, qword [arg_48h];mov qword [rcx + ], rax;mov rax, rcx;mov rdx, qword [arg_40h];jmp ": 3,
                "jbe ;mov qword [var_20h], rcx;mov qword [rax + ], 0;lea rcx, [rax + 8];mov qword [var_40h], rcx": 3,
                "mov qword [var_28h], rax;mov rax, qword [arg_60h];mov rcx, qword [var_20h];sub rax, rcx;mov qword [arg_60h], rax": 3,
                "mov qword [var_18h], rax;mov rax, qword [var_38h];mov qword [rsp], rax;mov rcx, qword [var_20h];mov qword [var_8h], rcx": 2,
                "test byte [rcx], al;mov qword [rsp], rcx;call fcn.0040b600;mov rax, qword [arg_60h];mov qword [rsp], rax": 3,
                "mov qword [var_20h], rax;mov rcx, qword [arg_60h];mov qword [rsp], rcx;call fcn.0040b7f0;mov rax, qword [var_48h]": 3,
                "mov rax, qword [var_38h];shr rax, ;mov qword [rsp], rax;call fcn.00431010;lea rax, []": 3,
                "lea rbp, [var_28h];mov rax, qword [arg_40h];mov rcx, qword [rax + ];mov rdx, qword [arg_38h];cmp rcx, rdx": 3,
                "mov qword [rsp], rax;mov qword [var_8h], 6;call fcn.004312e0;mov rax, qword [arg_38h];mov qword [rsp], rax": 2,
                "sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h];mov rax, qword [arg_40h];mov rcx, qword [rax]": 6,
                "mov qword [rsp], rax;call fcn.00431290;call fcn.00430ba0;mov rax, qword [var_10h];mov qword [rsp], rax": 5,
                "call fcn.00431290;call fcn.00430ba0;mov rax, qword [var_10h];mov qword [rsp], rax;call fcn.00431290": 5,
                "mov qword [var_8h], ;call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.004279c0": 2,
                "int3;int3;mov rax, qword [arg_10h];mov rcx, qword [rax];test rcx, rcx": 3,
                "jmp ;ret;int3;int3;int3": 26,
                "mov rax, qword [var_20h];add rax, ;movzx ecx, byte [var_17h];mov rdx, qword [var_18h];jmp ": 4,
                "mov rdx, qword [rax];mov qword [rcx], rdx;mov qword [rax], rcx;mov rax, qword [var_30h];mov qword [rsp], rax": 4,
                "je ;mov qword [rax + ], ;mov byte [arg_58h], 1;mov rbp, qword [var_38h];add rsp, ": 4,
                "ud2;call fcn.00456090;jmp fcn.00427c60;int3;int3": 3,
                "jne ;mov rax, qword [arg_10h];mov rcx, qword [rax];test rcx, rcx;je ": 1,
                "mov rcx, qword [rbx];mov qword [rax], rcx;mov rax, qword [var_30h];mov qword [rsp], rax;call fcn.0040b7f0": 3,
                "lea rcx, [];mov qword [rsp], rcx;call fcn.0040b7f0;mov rax, qword [var_48h];mov byte [rax + ], 1": 3,
                "call fcn.00427c60;cmp byte [var_10h], 0;je ;cmp dword [], 0;jne ": 3,
                "test byte [rax], al;mov qword [rsp], rdx;lea rax, [rbx + ];mov qword [var_38h], rax;mov qword [var_8h], rax": 2,
                "lea rax, [rbx + ];mov qword [var_38h], rax;mov qword [var_8h], rax;call fcn.00421590;mov rax, qword [var_40h]": 2,
                "mov rax, qword [arg_78h];call fcn.004580f0;lea rdi, [rbx + ];mov rax, qword [arg_80h];call fcn.004580f0": 2,
                "ret;mov rbp, qword [var_20h];add rsp, ;ret;call fcn.00456090": 2,
                "mov rcx, qword [arg_38h];mov qword [rax + ], rcx;mov rcx, qword [arg_30h];mov qword [rsp], rcx;mov qword [var_8h], rax": 3,
                "ud2;call fcn.00456090;jmp fcn.00428340;int3;int3": 3,
                "add rsp, ;ret;mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rbx, qword [rax + ]": 5,
                "mov qword [var_20h], rsi;call fcn.00419510;lea rax, [];mov qword [rsp], rax;call fcn.0040b600": 3,
                "mov rax, qword [];mov rcx, qword [arg_48h];add rcx, ;shr rcx, 6;test rax, rax": 4,
                "xor ecx, ecx;test rcx, rcx;jne ;test rax, rax;je ": 4,
                "mov qword [rsp], rax;call fcn.0040b7f0;mov rax, qword [var_20h];mov qword [arg_50h], rax;mov rbp, qword [var_38h]": 4,
                "mov rax, qword [var_20h];mov qword [arg_50h], rax;mov rbp, qword [var_38h];add rsp, ;ret": 4,
                "ret;mov rcx, qword [var_18h];mov rdx, rcx;lock xadd qword [rax], rcx;lea rcx, [rcx + rbx*8]": 3,
                "cmp rcx, ;jbe ;xor ecx, ecx;jmp ;sub rcx, rdx": 3,
                "mov qword [], rax;lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0;mov rax, qword [var_28h]": 3,
                "jmp ;mov qword [arg_50h], rax;mov rbp, qword [var_38h];add rsp, ;ret": 2,
                "add rsp, ;ret;mov rdx, rcx;lock xadd qword [rax], rcx;lea rcx, [rcx + rbx*8]": 2,
                "jmp ;sub rcx, rdx;cmp rcx, ;jae ;lea rax, [rax + rcx]": 2,
                "test rax, rax;je ;mov rcx, qword [];test rcx, rcx;jne ": 2,
                "jne ;jmp ;mov rax, rdx;mov rdx, qword [rax + 8];test rdx, rdx": 2,
                "mov qword [var_20h], rax;mov rcx, qword [rax + 8];mov qword [], rcx;mov qword [rsp], rax;mov qword [var_8h], ": 2,
                "mov qword [var_18h], rax;lea rax, [];mov qword [rsp], rax;call fcn.0040b600;mov rax, qword [var_18h]": 2,
                "mov rax, qword [var_18h];jmp ;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 2,
                "call fcn.00456090;jmp fcn.00428a70;int3;int3;int3": 3,
                "lea rax, [rax + rcx*8];lea rax, [rax + ];mov qword [arg_28h], rax;mov rbp, qword [var_10h];add rsp, ": 9,
                "mov qword [var_50h], rbp;lea rbp, [var_50h];cmp qword [], 0;je ;mov rcx, qword [arg_70h]": 6,
                "mov r8, rbx;shr rbx, 6;xor r8, rbx;lea rbx, [r8 + r8*8];mov r8, rbx": 6,
                "mov qword [var_18h], rcx;mov qword [var_20h], r8;mov rdx, qword [arg_80h];mov qword [var_28h], rdx;call fcn.00428f90": 5,
                "mov rdx, qword [arg_60h];mov rbx, qword [var_38h];mov rdi, qword [arg_68h];mov r8, qword [arg_78h];mov r9, qword [var_40h]": 5,
                "jmp ;xor esi, esi;jmp ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "lea rdx, [rax + ];mov rbx, qword [arg_70h];cmp rdx, rbx;jne ;mov rcx, qword [var_40h]": 4,
                "mov rbx, qword [arg_70h];cmp rdx, rbx;jne ;mov rcx, qword [var_40h];mov qword [rax + ], rcx": 4,
                "cmp rcx, 1;jne ;mov rcx, qword [];mov qword [rax + 8], rcx;mov qword [], rax": 4,
                "mov ecx, ;imul rcx, rax;shr rcx, ;lea ecx, [rcx + rcx*2];shl ecx, ": 3,
                "ret;call fcn.004290d0;mov byte [], 1;jmp ;call fcn.00456090": 3,
                "shr rcx, ;lea ecx, [rcx + rcx*2];mov ebx, edx;sub edx, ecx;shl rdx, 5": 4,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040b600;mov eax, dword [];mov dword [var_14h], eax": 10,
                "mov ecx, dword [var_14h];lea edx, [rcx + 1];mov ebx, ;imul rbx, rdx;shr rbx, ": 5,
                "ret;call fcn.00456090;jmp fcn.004291b0;int3;int3": 5,
                "mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458b94;mov rbp, qword [rbp];mov qword [rsp], 4": 6,
                "lea rbp, [rsp - ];call fcn.00458b94;mov rbp, qword [rbp];mov qword [rsp], 4;lea rax, [var_48h]": 6,
                "call fcn.00458b94;mov rbp, qword [rbp];mov qword [rsp], 4;lea rax, [var_48h];mov qword [var_8h], rax": 6,
                "call fcn.00428b40;mov rax, qword [var_8h];test byte [rax], al;mov ecx, dword [var_3ch];add ecx, 2": 6,
                "inc rdx;mov qword [rax + rcx + ], rdx;mov rdx, qword [rax + rcx + ];mov rbx, qword [arg_180h];add rdx, rbx": 5,
                "ud2;call fcn.00456090;jmp fcn.004292c0;int3;int3": 4,
                "call fcn.00456090;jmp fcn.004292c0;int3;int3;int3": 4,
                "call fcn.0040b7f0;mov rbp, qword [var_18h];add rsp, ;ret;call fcn.00456090": 8,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.004294a0;int3": 4,
                "mov qword [var_18h], rbp;lea rbp, [var_18h];mov rax, qword [arg_28h];test rax, rax;mov ecx, 1": 4,
                "add rsp, ;ret;mov rax, qword [arg_28h];mov qword [rsp], rax;mov rax, qword [arg_30h]": 4,
                "mov rax, qword [arg_28h];mov qword [rsp], rax;mov rax, qword [arg_30h];inc rax;mov qword [var_8h], rax": 4,
                "jg ;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "jle ;mov rbx, qword gs:[];mov rbx, qword [rbx];mov rbx, qword [rbx + ];mov esi, dword [rbx + ]": 9,
                "cmp rdx, rsi;setg cl;mov eax, ecx;jmp ;xor ecx, ecx": 4,
                "mov qword [rsp], rax;lea rax, [var_40h];mov qword [var_8h], rax;mov qword [var_10h], ;mov qword [var_18h], ": 7,
                "mov rax, qword [var_8h];inc qword [rax];mov rax, qword [var_140h];mov qword [rsp], rax;call fcn.00428bb0": 4,
                "mov dword [rbx + ], edi;mov dword [rbx + ], r8d;test rdx, rdx;sete cl;test cl, cl": 5,
                "test rdx, rdx;sete cl;test cl, cl;jne ;mov rbp, qword [var_18h]": 5,
                "mov rbp, qword [var_18h];add rsp, ;ret;mov qword [rsp], rsi;mov rax, qword [arg_30h]": 4,
                "lea rdi, [rsp];mov rsi, qword [rsp + ];mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458e90": 4,
                "mov rax, qword [rsp + ];test byte [rax], al;lea rsi, [rax + ];mov qword [rsp + ], rsi;lea rdi, [rsp]": 2,
                "call fcn.004312e0;mov rax, qword [arg_68h];mov qword [rsp], rax;call fcn.00431290;lea rax, []": 3,
                "mov rax, qword [var_30h];mov qword [rsp], rax;mov rax, qword [var_20h];mov qword [var_8h], rax;call fcn.004312e0": 9,
                "mov qword [var_50h], rax;lea rcx, [var_38h];mov qword [rsp], rcx;call fcn.00455f40;call fcn.00430940": 1,
                "mov qword [rsp], rax;call fcn.0040b7f0;mov rbp, qword [var_58h];add rsp, ;ret": 4,
                "mov byte [rcx + ], 2;call fcn.00430940;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 5,
                "call fcn.004312e0;call fcn.004309d0;mov rax, qword [var_10h];mov qword [rsp], rax;call fcn.0044f450": 2,
                "call fcn.00430940;call fcn.00430bf0;call fcn.004309d0;mov rax, qword [var_10h];mov rax, qword [rax + ]": 5,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.00429df0;int3": 2,
                "ret;call fcn.00456090;jmp fcn.00429df0;int3;mov rcx, qword gs:[]": 2,
                "mov qword [var_8h], ;call fcn.004312e0;call fcn.004309d0;mov rax, qword [var_10h];mov qword [rsp], rax": 3,
                "call fcn.004312e0;call fcn.004309d0;call fcn.00430940;call fcn.00430bf0;call fcn.004309d0": 4,
                "ret;call fcn.00430940;mov rax, qword [];mov qword [rsp], rax;call fcn.00431010": 3,
                "test rbx, rbx;je ;mov qword [var_8h], rdx;mov qword [rsp], rbx;call fcn.0042a200": 4,
                "call fcn.00456090;jmp fcn.0042a0e0;int3;int3;int3": 4,
                "mov rax, qword [arg_8h];mov rcx, qword [rax + 8];add qword [], rcx;mov qword [rax + 8], 0;mov rcx, qword [rax + ]": 6,
                "test rax, rax;je ;mov rcx, qword [arg_38h];mov rdx, rcx;lock xadd qword [rax], rcx": 6,
                "lock xadd qword [rax], rcx;sub rcx, rdx;lea rax, [rcx + rdx];cmp rax, rdx;jb ": 6,
                "add rsp, ;ret;mov qword [var_18h], rcx;call fcn.00430940;lea rax, []": 6,
                "mov rax, qword gs:[];mov rax, qword [rax];mov rax, qword [rax + ];cmp dword [rax + ], 0;jg ": 6,
                "mov rax, qword [arg_30h];test rax, rax;jne ;xorps xmm0, xmm0;movups xmmword [var_10h], xmm0": 6,
                "mov rcx, qword [arg_38h];mov qword [var_8h], rcx;call fcn.004057f0;cmp byte [], 0;je ": 6,
                "mov qword [var_48h], rbp;lea rbp, [var_48h];mov rax, qword [arg_58h];test byte [rax], al;lea rcx, [rax + ]": 6,
                "xor ebx, ebx;jmp ;inc rcx;cmp rcx, rdx;jge ": 5,
                "mov rcx, qword [var_38h];jmp ;test rbx, rbx;jl ;cmp rbx, ": 4,
                "mov qword [rsp], rcx;lea rcx, [rax + ];mov qword [var_8h], rcx;mov qword [var_10h], rbx;mov qword [var_18h], ": 4,
                "mov rax, qword [arg_58h];mov rdx, qword [var_40h];cmp rcx, rdx;jl ;add rax, ": 3,
                "lea rbp, [rsp];call fcn.0042bc90;mov eax, 1;lea rcx, [];xchg dword [rcx], eax": 3,
                "mov rax, qword [var_18h];mov rcx, qword [rax + ];test rcx, rcx;je ;cmp rcx, 1": 3,
                "cmp rcx, 1;jne ;mov rcx, qword [arg_38h];mov qword [rax + ], rcx;mov byte [rax + ], 0": 2,
                "jne ;mov rcx, qword [arg_38h];mov qword [rax + ], rcx;mov byte [rax + ], 0;inc qword [rax + ]": 2,
                "mov qword [rax + ], 0;inc qword [rax + ];mov qword [rax + ], 0;mov qword [rax + ], 0;mov rdx, qword [var_20h]": 2,
                "mov rdx, qword [var_20h];mov qword [rsp], rdx;call fcn.0040b7f0;mov rax, qword [arg_38h];mov qword [rsp], rax": 2,
                "mov qword [rsp], rdx;call fcn.0040b7f0;mov rax, qword [arg_38h];mov qword [rsp], rax;mov rax, qword [var_18h]": 2,
                "mov qword [var_8h], rbp;lea rbp, [var_8h];mov rax, qword [arg_18h];test byte [rax], al;mov qword [rsp], rax": 3,
                "mov rdx, qword [arg_20h];mov qword [rdx], rcx;mov qword [rax + 8], rdx;mov qword [rsp], rax;call fcn.0040b7f0": 3,
                "test rcx, rcx;jne ;mov rcx, qword [rsp + ];cmp rcx, ;jne ": 4,
                "jmp ;xor edx, edx;jmp ;call fcn.00456090;jmp fcn.0042aba0": 4,
                "mov rax, qword [arg_88h];cmp byte [rax + ], 0;jne ;mov rcx, qword [rax + ];mov rdx, qword [rax + ]": 6,
                "mov rsi, qword [arg_90h];test rsi, rsi;jg ;mov r8, qword [arg_98h];cmp r8, ": 5,
                "lea r10, [];cmovne r9, r10;lea rdi, [rax + ];cmp qword [rax + ], 0;je ": 5,
                "je ;cmp rcx, rsi;je ;mov rcx, qword [rax + ];inc rcx": 5,
                "mov qword [var_30h], rcx;call fcn.00449b90;mov rax, qword [arg_88h];mov rax, qword [arg_8h];cmp byte [rax + ], 0": 1,
                "je ;mov rcx, qword [var_40h];cmp qword [rax + ], rcx;je ;mov qword [var_68h], rdi": 4,
                "xchg qword [var_50h], rcx;cmp qword [rax + ], 0;jl ;xor ecx, ecx;cmp qword [rax + ], 0": 4,
                "cmp qword [rax + ], 0;jl ;xor ecx, ecx;cmp qword [rax + ], 0;jl ": 4,
                "test rax, rax;jne ;mov rbp, qword [var_78h];add rsp, ;ret": 3,
                "mov byte [var_ch], 0;call fcn.0042b760;mov rax, qword [var_10h];mov qword [var_50h], rax;mov rcx, qword [var_58h]": 3,
                "call fcn.0042b760;mov rax, qword [var_10h];mov qword [var_50h], rax;mov rcx, qword [var_58h];jmp ": 3,
                "jmp ;mov qword [rsp], rax;mov dword [var_8h], ;mov byte [var_ch], 0;call fcn.0042b760": 2,
                "lea rcx, [];mov qword [rax + ], rcx;cmp dword [], 0;jne ;mov qword [rax + ], rax": 3,
                "lea rcx, [rax + ];mov qword [rsp], rcx;call fcn.00449630;mov rax, qword [arg_88h];jmp ": 2,
                "call fcn.004580f0;jmp ;mov rcx, rax;lea rax, [];call fcn.004580f0": 2,
                "mov byte [var_ch], 0;call fcn.0042b760;mov rax, qword [var_10h];mov qword [var_18h], rax;mov rax, qword [arg_40h]": 1,
                "jmp ;lea rax, [rcx + ];mov qword [rsp], rax;call fcn.00449900;cmp dword [], 0": 2,
                "lea rbp, [var_20h];mov eax, dword [arg_40h];cmp eax, ;jne ;mov rax, qword [arg_38h]": 2,
                "mov rax, qword [arg_38h];mov qword [rsp], rax;mov dword [var_8h], ;mov byte [var_ch], 1;call fcn.0042b760": 4,
                "je ;mov eax, 1;lea rdx, [];lock xadd dword [rdx], eax;mov byte [rsp + ], cl": 2,
                "lea rdx, [];lock xadd dword [rdx], eax;mov byte [rsp + ], cl;mov rbp, qword [rsp + 8];add rsp, ": 2,
                "test byte [rcx], al;lea rdx, [rcx + ];mov ebx, dword [arg_40h];cmp ebx, ;jne ": 3,
                "mov esi, 2;lock cmpxchg qword [rdx], rsi;sete dil;test dil, dil;je ": 3,
                "cmp qword [rcx + ], 0;jge ;mov eax, 2;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "jmp ;mov qword [rdx], 0;mov byte [arg_48h], 1;mov rbp, qword [var_28h];add rsp, ": 2,
                "cmp rax, 1;je ;test rax, rax;jne ;test dl, dl": 3,
                "je ;cmp qword [rax + ], 0;jle ;cmp qword [rax + ], 0;mov rcx, qword gs:[]": 1,
                "cmp qword [rax + ], 0;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov qword [var_8h], ;call fcn.0042ff30;sub rsp, ;mov qword [var_8h], rbp;lea rbp, [var_8h]": 1,
                "mov qword [var_10h], rax;call fcn.0040dc80;mov rax, qword [var_18h];mov rcx, qword [arg_38h];xor edx, edx": 2,
                "mov qword [rsp], rax;call fcn.00431010;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 3": 4,
                "jne ;call fcn.004599b0;mov eax, dword [rsp];mov dword [arg_50h], eax;mov rbp, qword [var_30h]": 3,
                "call fcn.00456090;jmp fcn.0042bd80;int3;int3;int3": 3,
                "cmp qword [], ;je ;mov qword [var_70h], rdx;movzx ecx, byte [arg_888h];test rcx, rcx": 4,
                "cmp qword [], 0;jne ;mov qword [var_68h], 0;mov dword [var_48h], 0;test cl, cl": 4,
                "test cl, cl;je ;mov byte [rdx + ], 1;mov rax, qword [];mov qword [rsp], rax": 4,
                "mov rbp, qword [var_878h];add rsp, ;ret;mov rax, qword [var_70h];mov byte [rax + ], 0": 4,
                "mov eax, dword [rsp];movzx ecx, byte [arg_888h];test cl, cl;je ;cmp qword [var_68h], 0": 4,
                "je ;cqo;idiv rsi;jmp ;neg rax": 7,
                "lea rcx, [var_78h];mov qword [rsp], rax;mov rax, qword [];mov qword [var_8h], rax;mov qword [var_10h], rcx": 4,
                "mov rdx, qword [];mov rax, qword [rax + ];mov qword [rsp], rdx;mov qword [var_8h], rax;mov rax, qword [var_68h]": 3,
                "xor eax, eax;jmp ;call fcn.004599b0;mov eax, dword [rsp];jmp ": 2,
                "mov qword [arg_890h], 0;mov rbp, qword [var_878h];add rsp, ;ret;mov qword [arg_890h], 0": 2,
                "call fcn.0042b4b0;mov rbp, qword [var_20h];add rsp, ;ret;mov dword [var_1ch], ecx": 1,
                "jmp fcn.0042c2e0;int3;int3;int3;int3": 1,
                "call fcn.00456090;jmp fcn.0042c400;int3;mov rcx, qword gs:[];mov rcx, qword [rcx]": 2,
                "lea rcx, [];mov qword [var_8h], rcx;mov qword [var_10h], rax;mov qword [var_18h], ;mov qword [var_20h], rdx": 3,
                "mov rax, qword [var_10h];test rax, rax;je ;mov qword [var_38h], rax;movups xmm0, xmmword []": 4,
                "mov rax, qword [var_20h];cmp dword [], 0;jne ;mov qword [], rax;movups xmm0, xmmword []": 10,
                "mov qword [], rax;movups xmm0, xmmword [];movups xmmword [var_134h], xmm0;movups xmm0, xmmword [];movups xmmword [var_140h], xmm0": 3,
                "movups xmm0, xmmword [];movups xmmword [var_140h], xmm0;mov rax, qword [var_38h];mov qword [rsp], rax;lea rcx, [var_134h]": 3,
                "movabs rax, ;mov qword [var_8bh], rax;movabs rax, ;mov qword [var_92h], rax;mov rax, qword [var_38h]": 3,
                "cmp qword [], 0;je ;cmp qword [], 0;setne al;mov byte [], al": 3,
                "mov qword [var_8h], rax;mov qword [var_10h], ;mov qword [var_18h], ;call fcn.0042c400;mov rax, qword [var_20h]": 7,
                "lea rax, [var_4eh];mov qword [rsp], rax;mov qword [var_8h], ;mov qword [var_10h], ;call fcn.0042c4b0": 2,
                "mov qword [var_7dh], rax;movabs rax, ;mov qword [var_83h], rax;mov rax, qword [var_30h];mov qword [rsp], rax": 1,
                "cmp dword [], 0;jne ;mov qword [], rax;cmp qword [], 0;je ": 4,
                "je ;test rax, rax;je ;movabs rax, ;mov qword [var_58h], rax": 1,
                "mov qword [var_58h], rax;movabs rax, ;mov qword [var_5bh], rax;lea rax, [var_58h];mov qword [rsp], rax": 1,
                "test rax, rax;je ;movabs rcx, ;mov qword [var_102h], rcx;movups xmm0, xmmword []": 1,
                "mov rax, qword [];mov qword [rsp], rax;mov qword [var_8h], ;lea rax, [var_30h];mov qword [var_10h], rax": 1,
                "and rbx, qword [var_30h];lea rsi, [rdx + 1];test rbx, rbx;cmovne rdx, rsi;inc rax": 1,
                "mov rax, qword [];mov qword [rsp], rax;lea rax, [var_38h];mov qword [var_8h], rax;call fcn.0042e3c0": 1,
                "mov qword [rsp], rax;lea rax, [var_38h];mov qword [var_8h], rax;call fcn.0042e3c0;mov eax, dword [var_58h]": 1,
                "mov rax, qword [];mov qword [rsp], rax;mov qword [var_8h], 1;call fcn.0042e3c0;mov rax, qword [var_10h]": 4,
                "call fcn.0042e3c0;mov rax, qword [var_10h];mov dword [arg_30h], eax;mov rbp, qword [var_18h];add rsp, ": 4,
                "lea rbp, [var_50h];lea rcx, [];test byte [rcx], al;mov rax, qword [];cmp dword [], 0": 3,
                "mov rax, qword [];cmp dword [], 0;jne ;mov qword [], rax;lea rcx, []": 6,
                "call fcn.00440040;call fcn.004400b0;lea rax, [];test byte [rax], al;mov rax, qword []": 3,
                "call fcn.004400b0;lea rax, [];test byte [rax], al;mov rax, qword [];mov rcx, qword []": 3,
                "mov rax, qword [];mov qword [rsp], rax;lea rax, [var_20h];mov qword [var_8h], rax;call fcn.0042e3c0": 3,
                "movabs rbx, ;add rdx, rbx;mov rbx, rax;movabs rax, ;mov rsi, rdx": 3,
                "mov qword [var_88h], rbp;lea rbp, [var_88h];movabs rax, ;mov qword [var_56h], rax;movups xmm0, xmmword []": 4,
                "lea rbp, [var_88h];movabs rax, ;mov qword [var_56h], rax;movups xmm0, xmmword [];movups xmmword [var_5eh], xmm0": 3,
                "lea rax, [var_28h];mov qword [var_8h], rax;call fcn.0042e3c0;mov rax, qword [var_28h];test rax, rax": 3,
                "mov qword [var_8h], rax;call fcn.0042e3c0;mov rax, qword [var_28h];test rax, rax;je ": 3,
                "je ;cmp rax, ;jg ;mov qword [var_30h], rax;mov rax, qword []": 3,
                "ud2;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;mov rcx, qword gs:[]": 1,
                "movzx eax, byte [var_18h];mov rcx, qword [arg_30h];mov qword [rsp], rcx;mov rcx, qword [arg_38h];mov qword [var_8h], rcx": 2,
                "call fcn.0042e360;mov rax, qword [var_8h];test byte [rax], al;xor ecx, ecx;xor edx, edx": 3,
                "cmp dword [], 0;jne ;mov qword [], rax;mov rax, qword [var_40h];mov rdx, rax": 3,
                "jne ;mov qword [], rax;mov rax, qword [var_40h];mov rdx, rax;xor ebx, ebx": 3,
                "jbe ;mov qword [var_30h], rbx;mov qword [var_38h], rax;mov qword [var_20h], rsi;mov qword [rsp], rax": 3,
                "mov qword [var_38h], rax;mov qword [var_20h], rsi;mov qword [rsp], rax;call fcn.00445b60;mov rax, qword []": 3,
                "mov rax, qword [];mov rcx, qword [var_8h];mov rdx, qword [var_10h];mov rbx, qword [var_30h];cmp qword [], rbx": 3,
                "mov qword [rax + rbx + 8], rdx;lea rdi, [rax + rbx];cmp dword [], 0;jne ;mov qword [rax + rbx], rcx": 3,
                "int3;int3;sub rsp, ;mov qword [var_48h], rbp;lea rbp, [var_48h]": 6,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;lea rcx, [var_3ch];mov qword [var_10h], rcx;call fcn.0042e420": 3,
                "call fcn.0042e540;mov eax, dword [var_38h];mov dword [arg_70h], eax;mov rbp, qword [var_48h];add rsp, ": 3,
                "jge ;cmp esi, ;jge ;cmp rbx, ;jae ": 3,
                "inc rbx;sub rsp, ;mov qword [var_48h], rbp;lea rbp, [var_48h];mov rax, qword [arg_58h]": 1,
                "jae ;add esi, ;mov edi, esi;sar esi, ;and esi, ": 2,
                "add esi, ;mov edi, esi;sar esi, ;and esi, ;add esi, ": 2,
                "lea rsi, [rbx + 1];cmp rsi, ;jae ;and edi, ;lea esi, [rdi - ]": 2,
                "mov word [r8 + rbx*2 + 2], si;add rbx, 2;lea rdi, [];jmp ;cmp rbx, ": 2,
                "mov qword [var_30h], rbx;mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rdx;call fcn.00452730": 8,
                "mov qword [var_10h], rbx;mov qword [var_18h], ;call fcn.0042dbe0;lea rax, [];mov qword [rsp], rax": 2,
                "mov rcx, qword [arg_50h];mov qword [var_8h], rcx;mov qword [var_10h], rdx;mov eax, eax;mov qword [var_18h], rax": 3,
                "ret;mov rbp, qword [var_40h];add rsp, ;ret;call fcn.0042e8e0": 3,
                "jge ;mov eax, ;mov rcx, qword gs:[];mov rcx, qword [rcx];mov rcx, qword [rcx + ]": 3,
                "je ;xorps xmm0, xmm0;movups xmmword [var_20h], xmm0;lea rcx, [];mov qword [var_20h], rcx": 3,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;call fcn.0042e3c0;cmp qword [var_10h], 0;mov rcx, qword gs:[]": 1,
                "mov rax, qword [var_48h];movsxd rax, eax;mov qword [rsp], rax;call fcn.00431110;lea rax, []": 5,
                "call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.0042dff0;int3": 5,
                "mov qword [rdx + ], rax;call fcn.00457a30;mov rbp, qword [var_98h];add rsp, ;ret": 5,
                "call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.0042e040;int3": 4,
                "call fcn.00456090;jmp fcn.0042e040;int3;int3;int3": 4,
                "mov rax, qword gs:[];mov rax, qword [rax];mov rcx, qword [rax + ];mov rdx, qword [arg_38h];mov qword [rcx + ], rdx": 5,
                "add rsp, ;ret;mov rax, qword [var_20h];jmp ;xor eax, eax": 4,
                "mov qword [rsp], rax;mov qword [rsp + 8], 2;call fcn.0042e3c0;mov dword [rsp + ], 0;sub rsp, ": 1,
                "mov qword [rsp + 8], 2;call fcn.0042e3c0;mov dword [rsp + ], 0;mov rbp, qword [rsp + ];add rsp, ": 8,
                "movsxd rax, eax;mov qword [var_18h], rax;xorps xmm0, xmm0;movups xmmword [var_20h], xmm0;mov qword [var_30h], 0": 8,
                "je ;mov rax, qword [rax + ];test rax, rax;je ;cmp dword [rax + ], 0": 8,
                "mov qword [var_10h], rax;call fcn.0040a940;ud2;call fcn.00456090;jmp fcn.0042e820": 7,
                "mov rax, qword [rax + 8];jmp ;mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax": 9,
                "mov ecx, dword [arg_30h];test ecx, ecx;jne ;call fcn.004580b0;mov rbp, qword [var_20h]": 5,
                "cmp ecx, 8;jne ;cmp dword [rax], 0;jne ;xor eax, eax": 5,
                "jne ;xor eax, eax;mov rcx, qword [rdx];mov qword [rax], rcx;jmp ": 5,
                "movzx edx, word [rsi + rdx*2];mov edi, dword [rsp + rcx*4 + ];test edi, edi;jge ;shl rcx, 2": 4,
                "lea rsi, [];jmp ;lea rdx, [rax + ];jmp ;mov rbp, qword [var_40h]": 4,
                "jmp fcn.0042ed50;int3;int3;int3;int3": 3,
                "jbe ;sub rsp, ;mov qword [var_10h], rbp;lea rbp, [var_10h];xorps xmm0, xmm0": 15,
                "mov qword [], rax;mov rbp, qword [var_10h];add rsp, ;ret;lea rdi, []": 11,
                "sub rsp, ;mov qword [var_60h], rbp;lea rbp, [var_60h];mov qword [var_18h], 0;mov rcx, qword gs:[]": 1,
                "sub rsp, ;mov qword [var_60h], rbp;lea rbp, [var_60h];mov qword [var_18h], 0;mov ecx, dword [arg_70h]": 3,
                "mov qword [var_18h], r10;lea r10, [r8 - 1];mov r11, qword [rbx + rsi*8 + ];cmp qword [r9 + 8], r10;jbe ": 3,
                "mov qword [rbx + rsi*8 + ], r10;cmp qword [var_18h], 0;je ;mov rbx, qword [var_18h];mov dword [rbx], ecx": 3,
                "test byte [rcx], al;mov rax, qword [rdx + ];cmp dword [], 0;jne ;mov qword [rcx + ], rax": 8,
                "mov rax, qword [rdx + ];cmp dword [], 0;jne ;mov qword [rcx + ], rax;mov rax, qword [var_18h]": 3,
                "cmp dword [], 0;jne ;mov qword [rcx + ], rax;mov rax, qword [var_18h];cmp dword [], 0": 3,
                "mov dword [var_38h], ecx;lea rax, [var_18h];mov qword [var_40h], rax;lea rax, [var_30h];mov qword [rsp], rax": 3,
                "mov rdx, qword gs:[];mov rdx, qword [rdx];mov rdx, qword [rdx + ];mov rdx, qword [rdx + ];mov qword [var_50h], rdx": 3,
                "mov qword [r8 + rcx*8], rax;mov rbp, qword [var_70h];add rsp, ;ret;call fcn.004580f0": 3,
                "mov rdi, qword [var_48h];call fcn.004580f0;jmp ;lea rdi, [rax + ];mov rcx, rax": 3,
                "call fcn.004580f0;mov rax, rcx;jmp ;xorps xmm0, xmm0;movups xmmword [var_58h], xmm0": 3,
                "mov qword [var_20h], rbx;test byte [rcx], al;mov rax, qword [rdx + ];cmp dword [], 0;jne ": 4,
                "cmp dword [], 0;jne ;mov qword [rcx + ], rax;mov qword [rsp], rdx;call fcn.0042f250": 4,
                "mov qword [arg_48h], rbx;jmp ;mov qword [var_18h], rcx;mov qword [var_28h], rdx;lea rax, [arg_48h]": 4,
                "mov qword [rsp], rax;lea rcx, [rdx + ];mov qword [var_8h], rcx;movsxd rcx, ebx;mov qword [var_10h], rcx": 4,
                "sub rsp, ;mov qword [var_48h], rbp;lea rbp, [var_48h];mov dword [rsp], 0;lea rax, []": 4,
                "test eax, eax;jne ;mov rax, qword [arg_58h];jmp ;mov rax, qword [rax + ]": 4,
                "mov qword [var_40h], rcx;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rdx;mov qword [var_10h], rcx": 4,
                "mov qword [var_8h], rcx;mov rcx, qword [var_40h];mov qword [var_10h], rcx;call fcn.0040b1c0;mov rax, qword [var_20h]": 4,
                "jne ;call fcn.00430940;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 7": 5,
                "call fcn.004309d0;mov rax, qword [arg_20h];mov rcx, qword [rax + 8];mov rdx, qword [rax + ];mov qword [rsp], rcx": 4,
                "call fcn.004312e0;call fcn.004309d0;jmp ;mov qword [rsp], rcx;call fcn.0042f800": 3,
                "mov qword [rcx + ], rdx;mov ebx, 1;lea rsi, [];lock xadd dword [rsi], ebx;jmp ": 3,
                "lea rdi, [rcx + ];cmp byte [rbx + 4], 0;je ;mov r8, qword [rbx + ];test r8, r8": 3,
                "mov qword [rcx + ], rax;mov qword [rsp], rbx;call fcn.0042f250;jmp ;call fcn.004580f0": 3,
                "je ;cmp byte [rax + ], 0;jne ;test rax, rax;jne ": 2,
                "mov rbp, qword [var_80h];add rsp, ;ret;mov rax, qword [var_30h];mov qword [rcx + ], rax": 2,
                "call fcn.00408aa0;call fcn.00430940;call fcn.00430bf0;call fcn.004309d0;call fcn.00430940": 1,
                "mov rax, qword [var_38h];mov rax, qword [rax + ];mov rcx, qword [rax + ];mov qword [var_28h], rcx;mov rax, qword [rax + ]": 1,
                "mov rcx, qword [rax + ];mov qword [var_28h], rcx;mov rax, qword [rax + ];mov qword [var_40h], rax;call fcn.00430940": 1,
                "mov rdx, qword [rax + ];test rcx, rcx;je ;mov rbx, qword [rax];cmp rcx, rbx": 4,
                "mov qword [rsp], rax;call fcn.00431180;lea rax, [];mov qword [rsp], rax;mov qword [rsp + 8], 2": 8,
                "mov rax, qword [arg_48h];mov qword [var_28h], rax;lea rax, [arg_50h];mov qword [var_30h], rax;lea rax, [var_fh]": 6,
                "mov qword [rax], 0;mov rbp, qword [var_40h];add rsp, ;ret;int3": 6,
                "mov qword [var_8h], 5;call fcn.0042e3c0;mov byte [arg_30h], 0;mov rbp, qword [var_20h];add rsp, ": 5,
                "call fcn.004312e0;sub rsp, ;mov qword [var_20h], rbp;lea rbp, [var_20h];xorps xmm0, xmm0": 1,
                "jmp ;call fcn.00456090;jmp fcn.00430250;int3;int3": 3,
                "lea rbp, [var_48h];mov rax, qword [arg_58h];mov ecx, dword [rax + ];test ecx, ecx;jne ": 4,
                "jne ;mov rcx, qword gs:[];mov rcx, qword [rcx];mov edx, dword [];mov rcx, qword [rcx + ]": 4,
                "mov qword [rsp], rax;call fcn.0040b7f0;mov eax, ;lea rcx, [];lock xadd dword [rcx], eax": 4,
                "test eax, eax;jne ;mov eax, dword [var_28h];bt eax, 0;setb byte [arg_70h]": 4,
                "setb byte [arg_70h];mov rbp, qword [var_48h];add rsp, ;ret;lea rax, []": 4,
                "call fcn.004309d0;mov rax, qword [arg_58h];mov qword [rsp], rax;call fcn.0044f450;mov rax, qword [arg_60h]": 3,
                "mov dword [var_2ch], ecx;call fcn.00430940;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 8": 3,
                "call fcn.00431180;call fcn.004309d0;mov rax, qword [arg_58h];mov rcx, qword [rax + ];mov qword [var_40h], rcx": 2,
                "mov rax, qword [var_40h];mov qword [rsp], rax;call fcn.00431180;lea rax, [];mov qword [rsp], rax": 6,
                "mov rax, qword [var_38h];mov qword [rsp], rax;call fcn.00431180;lea rax, [];mov qword [rsp], rax": 2,
                "call fcn.004312e0;call fcn.004309d0;mov rax, qword [arg_58h];jmp ;call fcn.00456090": 2,
                "cmp qword [rax + ], rcx;je ;mov byte [arg_10h], 0;ret;cmp dword [rax + ], 0": 2,
                "mov byte [arg_10h], 0;ret;cmp dword [rax + ], 0;jne ;cmp dword [rax + ], 0": 2,
                "mov eax, dword [];test eax, eax;jne ;mov rax, qword [arg_40h];mov rcx, qword [arg_48h]": 3,
                "sar rsi, ;shr rsi, ;add rsi, r10;sar rsi, 9;shl rsi, 9": 3,
                "sar rsi, 9;shl rsi, 9;sub r10, rsi;mov qword [], r10;add rbx, r8": 3,
                "cmp rbx, rax;jge ;mov rsi, qword [];cmp rsi, ;ja ": 3,
                "sub rcx, rbx;neg rcx;sar rcx, ;and rcx, rbx;add rcx, rdx": 2,
                "lea rax, [];mov rdx, qword [arg_38h];mov rbx, qword [var_20h];mov rdi, qword [arg_40h];mov r8, qword [var_18h]": 2,
                "mov rbx, qword [var_20h];mov rdi, qword [arg_40h];mov r8, qword [var_18h];mov r9, qword [arg_48h];jmp ": 2,
                "je ;dec dword [rax + ];mov rbp, qword [var_10h];add rsp, ;ret": 3,
                "jmp ;call fcn.00456090;jmp fcn.00430940;int3;int3": 3,
                "cmp cl, 1;je ;mov rbp, qword [var_8h];add rsp, ;ret": 4,
                "mov rax, qword [rax];test rax, rax;je ;mov rcx, qword [rax + ];mov rdx, qword [rax + ]": 5,
                "mov rdx, qword [rax + ];mov rbx, qword [rax + ];test rbx, rbx;je ;mov rsi, qword [rax + ]": 5,
                "cmp rcx, rsi;mov rdi, rcx;cmovg rcx, rsi;neg rdi;sar rdi, ": 5,
                "mov qword [rsp], rax;mov qword [var_8h], 1;call fcn.004312e0;mov rbp, qword [var_10h];add rsp, ": 11,
                "call fcn.00456090;jmp fcn.00430c40;int3;int3;int3": 6,
                "lea rbx, [rdx + ];lea rsi, [var_22h];mov byte [rcx + rsi + 2], bl;inc rcx;xorps xmm0, xmm0": 6,
                "inc rcx;xorps xmm0, xmm0;cvtsi2sd xmm0, rdx;subsd xmm1, xmm0;movsd xmm0, qword []": 6,
                "mov byte [var_2dh], dl;movabs rax, ;imul rbx;add rdx, rbx;sar rdx, 3": 5,
                "shl ecx, 1;mov rsi, rdx;sub edx, ecx;lea ecx, [rdx + ];mov byte [var_2eh], cl": 5,
                "lea rax, [str.._015:______CEFGLMNPSZ];mov qword [rsp], rax;mov qword [var_8h], 1;call fcn.004312e0;movsd xmm0, qword [arg_20h]": 5,
                "call fcn.004312e0;call fcn.004309d0;mov rbp, qword [var_10h];add rsp, ;ret": 10,
                "lea rax, [rbx - 1];mov rcx, rdx;test rax, rax;jle ;mov rdx, rax": 3,
                "ja ;lea rax, [rbx - ];mov rcx, rax;sar rax, ;and rbx, rax": 3,
                "mov qword [var_10h], rcx;call fcn.00430a40;mov rbp, qword [var_80h];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rax, qword [arg_20h];neg rax;jmp ;call fcn.00456090;jmp fcn.00431110": 3,
                "jae ;mov byte [rsp + rcx + ], ;add rcx, ;mov rdx, rcx;sar rcx, ": 4,
                "mov qword [var_10h], rdx;call fcn.00430a40;mov rbp, qword [var_80h];add rsp, ;ret": 4,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 1;call fcn.004312e0;mov rax, qword [arg_28h]": 6,
                "jmp fcn.00431450;int3;int3;int3;mov rcx, qword gs:[]": 6,
                "call rax;call fcn.00430940;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 2": 6,
                "test rdx, rdx;jne ;lea rax, [var_27h];mov qword [rsp], rax;mov qword [var_8h], 1": 6,
                "call fcn.00430a40;mov rax, qword [var_40h];mov rax, qword [rax];mov qword [var_28h], rax;mov qword [rsp], rax": 5,
                "mov rdx, qword [rdx];mov qword [var_40h], rdx;call fcn.00430940;lea rax, [];mov qword [rsp], rax": 5,
                "call fcn.004312e0;call fcn.004309d0;jmp ;mov rax, qword [var_40h];mov qword [rsp], rax": 5,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword gs:[];mov rax, qword [rax];mov qword [rsp + ], rax": 8,
                "mov qword [rdx + ], rax;mov rax, qword [rsp + ];mov rax, qword [rax + ];lea rcx, [];cmp rax, rcx": 3,
                "cmp rax, rcx;jne ;call fcn.00455b60;call fcn.00459d30;cmp qword [rsp], 0": 3,
                "mov qword [], rax;call fcn.0041a800;lea rax, [];mov qword [rsp], rax;mov qword [rsp + 8], 0": 2,
                "jne ;mov rax, qword [];mov qword [rsp], rax;mov qword [rsp + 8], 0;call fcn.00404450": 2,
                "jne ;mov eax, 1;lea rcx, [];xchg dword [rcx], eax;mov rax, qword []": 1,
                "call fcn.00459d30;mov rax, qword [rsp];mov qword [rsp], 2;mov qword [rsp + 8], rax;mov dword [rsp + ], 0": 2,
                "movzx ecx, byte [arg_30h];cmp cl, ;je ;mov rdx, qword gs:[];mov rdx, qword [rdx]": 3,
                "je ;mov qword [rax + ], ;lea rax, [];mov qword [rsp], rax;call fcn.00455ec0": 3,
                "lea rax, [];mov qword [rsp], rax;call fcn.00455ec0;mov rbp, qword [var_10h];add rsp, ": 3,
                "call fcn.00455f40;mov rbp, qword [var_20h];add rsp, ;ret;call fcn.00456090": 4,
                "call fcn.0040b600;mov rax, qword [var_58h];lea rcx, [rax + ];mov qword [var_50h], rcx;mov rdx, qword [rax + ]": 5,
                "mov rdx, qword [];test rdx, rdx;je ;mov rbx, qword [rdx + ];cmp dword [], 0": 5,
                "call fcn.004580f0;mov rax, rsi;jmp ;lea rax, [];mov qword [rsp], rax": 5,
                "mov rax, qword [var_58h];cmp qword [rax + ], 0;je ;mov rcx, qword [rax + ];mov rdx, qword [rax + ]": 3,
                "lea rdi, [rdx + rcx*8];lea rdi, [rdi - 8];cmp dword [], 0;jne ;mov qword [rdx + rcx*8 - 8], 0": 3,
                "call fcn.0042ff30;ud2;call fcn.0042ea20;ud2;call fcn.0042e8e0": 2,
                "mov rcx, qword gs:[];mov rcx, qword [rcx];cmp qword [rcx + ], 0;jne ;mov rdx, qword [rcx + ]": 2,
                "mov qword [var_40h], rdx;mov rbx, qword [rdx + ];mov qword [var_58h], rbx;test byte [rcx], al;mov rcx, qword [rbx + ]": 2,
                "lea rdi, [rdi - 8];cmp dword [], 0;jne ;mov qword [r9 + r8*8 - 8], 0;mov r8, qword [rbx + ]": 2,
                "call fcn.004580f0;mov rax, rsi;jmp ;mov rcx, r11;jmp ": 1,
                "mov rax, r8;jmp ;mov qword [var_48h], rsi;mov qword [var_50h], rcx;lea rax, []": 1,
                "call fcn.0040b600;mov rax, qword [var_48h];test byte [rax], al;mov rcx, qword [];cmp dword [], 0": 1,
                "mov rax, qword [var_48h];test byte [rax], al;mov rcx, qword [];cmp dword [], 0;jne ": 1,
                "jne ;mov qword [rax + ], rcx;mov rax, qword [var_50h];mov qword [], rax;lea rax, []": 1,
                "lea rdi, [];mov rax, qword [var_50h];call fcn.004580f0;jmp ;call fcn.0042ea20": 1,
                "mov qword [arg_18h], rax;ret;int3;mov rcx, qword gs:[];mov rcx, qword [rcx]": 4,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];lea rax, [];mov qword [rsp], rax;lea rax, []": 2,
                "mov qword [var_8h], rax;mov dword [var_10h], ecx;call fcn.0042d800;mov rbp, qword [var_20h];add rsp, ": 5,
                "je ;lea rax, [];mov qword [rsp], rax;call fcn.0040b600;mov rax, qword []": 9,
                "cmp dword [], 0;jne ;mov rcx, qword [arg_50h];mov qword [rdx + rax*8], rcx;mov rax, qword []": 5,
                "call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.00432750;int3": 5,
                "call fcn.00456090;jmp fcn.00432750;int3;int3;int3": 5,
                "movzx eax, byte [];mov byte [], al;movzx eax, byte [];mov byte [], al;mov rbp, qword [var_10h]": 6,
                "lea rcx, [];test byte [rcx], al;mov rcx, qword [];mov qword [], rcx;call fcn.00446bf0": 7,
                "mov rcx, qword [];mov qword [], rcx;call fcn.00446bf0;call fcn.00441360;call fcn.0040beb0": 7,
                "mov rax, qword [var_38h];mov rcx, qword [rax + ];mov qword [rsp], rcx;call fcn.00432c00;call fcn.004328a0": 7,
                "call fcn.004328a0;call fcn.004040c0;call fcn.00446970;call fcn.00451130;sub rsp, ": 1,
                "mov dword [var_24h], eax;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], ;call fcn.00408380": 6,
                "mov rax, qword [var_28h];inc rax;mov rcx, qword [var_30h];mov rdx, qword [var_40h];cmp rax, rcx": 6,
                "jne ;mov qword [], 7;cmp dword [], 0;jne ;lea rax, []": 6,
                "mov qword [var_18h], rbp;lea rbp, [var_18h];mov eax, dword [];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [var_8h], ;call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.00432b40": 3,
                "imul ecx, ecx, ;mov dword [rax + ], ecx;call fcn.00457a60;mov rax, qword [rsp];mov rcx, qword [arg_38h]": 4,
                "je ;mov rbx, qword [rdx];add rbx, ;mov qword [rdx + ], rbx;mov rax, qword []": 4,
                "sub rsp, ;mov qword [var_38h], rbp;lea rbp, [var_38h];cmp byte [], 0;jne ": 3,
                "je ;mov qword [rax + ], ;mov rbp, qword [var_38h];add rsp, ;ret": 12,
                "jmp ;mov rcx, qword gs:[];mov rcx, qword [rcx];mov qword [var_28h], rcx;mov edx, dword [rax + ]": 3,
                "mov rbx, qword [rax + ];mov qword [var_20h], rbx;call fcn.00430940;lea rax, [];mov qword [rsp], rax": 3,
                "mov rax, qword [];mov qword [rsp], rax;mov dword [var_8h], ;call fcn.00459c50;call fcn.0043bdc0": 2,
                "mov qword [rsp], rax;mov qword [var_8h], 9;call fcn.004312e0;mov eax, dword [arg_50h];mov qword [rsp], rax": 5,
                "mov dword [var_1ch], edx;mov rbx, qword [rcx + ];mov qword [var_20h], rbx;call fcn.00430940;lea rax, []": 2,
                "call fcn.00430bf0;call fcn.004309d0;mov rax, qword [var_28h];mov ecx, dword [rax + ];mov dword [var_14h], ecx": 3,
                "call fcn.00431010;call fcn.00430bf0;call fcn.004309d0;mov rax, qword [var_30h];mov ecx, dword [rax + ]": 2,
                "cmp edx, eax;jne ;mov eax, ecx;mov rbx, qword [arg_20h];lock cmpxchg dword [rbx + ], edx": 2,
                "call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.004335f0;int3": 1,
                "mov rdx, qword [arg_60h];cmp rbx, ;jge ;cmp dword [rdx + ], ecx;jne ": 2,
                "mov rcx, rdx;mov edx, edi;mov rsi, rax;mov eax, dword [arg_68h];lock cmpxchg dword [rcx + ], edx": 2,
                "test dil, dil;jne ;mov eax, dword [arg_68h];cmp eax, 4;jne ": 2,
                "mov eax, dword [arg_68h];cmp eax, 4;jne ;cmp dword [rcx + ], 1;je ": 2,
                "call fcn.00459d30;mov rax, qword [rsp];add rax, ;mov ecx, dword [arg_68h];mov rdx, qword [arg_60h]": 2,
                "mov rax, qword [rsp];add rax, ;mov ecx, dword [arg_68h];mov rdx, qword [arg_60h];jmp ": 2,
                "cmp ecx, eax;je ;jmp ;lea rax, [];mov qword [rsp], rax": 2,
                "je ;cmp qword [rax + ], ;jne ;test rcx, rcx;je ": 3,
                "add rax, ;jmp ;call fcn.00459d30;mov rax, qword [rsp];lea rdx, [rax + ]": 3,
                "mov dword [var_8h], ebx;bts ebx, ;mov dword [var_ch], ebx;call fcn.004335f0;cmp byte [var_10h], 0": 2,
                "jmp ;mov rax, qword [arg_50h];cmp byte [rax + ], 0;je ;mov qword [rsp], rax": 2,
                "call fcn.004312e0;mov rax, qword [arg_50h];mov qword [rsp], rax;call fcn.00431290;lea rax, []": 1,
                "mov qword [rsp], rax;mov dword [var_8h], ecx;btr ecx, ;mov dword [var_ch], ecx;call fcn.00433180": 2,
                "lea edx, [rcx - ];cmp edx, 1;jbe ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 2,
                "mov qword [var_20h], rcx;mov edx, dword [rax + ];mov dword [var_10h], edx;mov rbx, qword [rax + ];mov qword [var_18h], rbx": 2,
                "call fcn.004312e0;mov rax, qword [arg_38h];mov qword [rsp], rax;call fcn.00431290;lea rax, []": 3,
                "call fcn.004309d0;mov rax, qword [var_20h];mov ecx, dword [rax + ];mov dword [var_14h], ecx;mov rdx, qword [rax + ]": 1,
                "mov rdx, qword [rax + ];mov qword [var_18h], rdx;call fcn.00430940;lea rax, [];mov qword [rsp], rax": 3,
                "add rsp, ;ret;lea rdi, [rax + ];mov rax, qword [arg_28h];call fcn.004580f0": 2,
                "mov qword [var_10h], rbp;lea rbp, [var_10h];lea rax, [];mov qword [rsp], rax;call fcn.00455f40": 3,
                "lea rdi, [rax + ];xor eax, eax;call fcn.004580f0;jmp ;call fcn.00456090": 3,
                "mov qword [rsp + ], rcx;xor edx, edx;jmp ;inc rdx;mov rax, rdi": 3,
                "xor edx, edx;jmp ;inc rdx;mov rax, rdi;cmp rdx, rax": 6,
                "test sil, sil;je ;cmp byte [], 0;jne ;inc dword [rbx + ]": 3,
                "dec dword [];jmp ;mov qword [rsp + ], rdx;mov qword [rsp + ], rbx;mov qword [rsp], rbx": 3,
                "cmp eax, 0;jg ;cmp dword [], 0;jne ;mov rax, qword []": 3,
                "mov qword [rsp], rax;call fcn.0040b600;mov rbx, qword [rsp + ];mov rsi, qword [rsp + ];jmp ": 2,
                "mov qword [rsp], rax;mov qword [rsp + 8], ;call fcn.0040bd40;cmp byte [rsp + ], 0;je ": 2,
                "mov qword [rsp], rbx;mov qword [rsp + 8], rsi;call fcn.0042ff30;ud2;lea rax, []": 2,
                "test cl, cl;jne ;mov ecx, dword [];test ecx, ecx;je ": 1,
                "test cl, cl;je ;mov rcx, rax;xor eax, eax;lea rdx, []": 1,
                "mov ebx, 1;lock cmpxchg dword [rdx], ebx;sete dl;test dl, dl;jne ": 3,
                "cmp dword [rdx + ], 0;jne ;cmp byte [rax + ], 0;je ;mov qword [rax + ], ": 3,
                "mov rbp, qword [var_50h];add rsp, ;ret;mov qword [rsp], 0;mov byte [var_8h], 1": 1,
                "mov rax, qword [rax];cmp qword [rax], 0;jne ;mov rcx, qword [rax + 8];mov qword [var_8h], rcx": 2,
                "lea rbp, [var_18h];mov rax, qword gs:[];mov rax, qword [rax];mov rcx, qword [rax + ];cmp qword [rcx], rax": 3,
                "mov qword [rsp], rax;lea rax, [arg_28h];mov qword [var_8h], rax;call fcn.00438440;call fcn.00455e50": 3,
                "mov rdx, qword [rcx + ];cmp rax, rdx;jne ;call fcn.004376a0;mov rbp, qword [var_18h]": 3,
                "mov rax, qword [rdx];call rax;lea rax, [];mov rcx, qword [var_10h];jmp ": 3,
                "mov rcx, qword [];mov rdx, qword [rax + ];mov qword [rsp], rcx;mov qword [var_8h], rdx;call fcn.0042e3c0": 4,
                "call fcn.0043b130;lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0;movzx eax, byte [arg_30h]": 4,
                "ud2;call fcn.00456090;jmp fcn.00434750;int3;int3": 3,
                "mov qword [var_40h], rcx;xor edx, edx;jmp ;inc rdx;mov rax, rdi": 3,
                "mov esi, dword [rbx + ];cmp esi, 2;jne ;cmp dword [rbx + ], 1;jne ": 3,
                "jne ;mov rdi, rax;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "cmp dword [rbx + ], 1;jne ;mov rdi, rax;mov eax, esi;xor r8d, r8d": 2,
                "sete sil;test sil, sil;je ;mov qword [var_20h], rdx;cmp byte [], 0": 2,
                "mov qword [var_30h], rbx;mov qword [rsp], rbx;call fcn.0044bdf0;mov rax, qword [var_30h];mov qword [rsp], rax": 2,
                "mov rbx, qword [var_30h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov qword [rsp], rax;call fcn.0040b600;cmp dword [], 0;jne ;mov qword [], 0": 1,
                "mov rax, qword [arg_68h];call fcn.004580f0;jmp ;lea rax, [];mov qword [rsp], rax": 1,
                "ret;lea rax, [];mov qword [rsp], rax;call fcn.0040b8e0;jmp ": 9,
                "mov qword [rax + ], rcx;jmp ;lea rdi, [rax + ];mov rbx, rax;mov rax, rcx": 2,
                "cmp dword [], 0;jne ;mov rcx, qword [var_18h];mov qword [rcx], rax;test byte [rax], al": 2,
                "mov rdx, qword [rdx + ];mov rbx, qword [arg_40h];cmp rbx, rdx;je ;mov rdx, qword [rax + ]": 2,
                "call fcn.004336e0;mov eax, ;lea rcx, [];lock xadd dword [rcx], eax;mov rbp, qword [rsp + ]": 2,
                "lea rcx, [];xchg dword [rcx], eax;mov rax, qword [];mov qword [rsp], rax;mov qword [rsp + 8], 1": 2,
                "xchg dword [rcx], eax;mov rax, qword [];mov qword [rsp], rax;mov qword [rsp + 8], 1;call fcn.0042e3c0": 2,
                "xchg dword [rcx], eax;test eax, eax;jbe ;mov dword [var_14h], eax;xor ecx, ecx": 2,
                "jmp fcn.00435200;int3;int3;int3;int3": 2,
                "mov rax, qword [var_8h];mov qword [var_20h], rax;lea rcx, [];test byte [rcx], al;mov rcx, qword []": 2,
                "call fcn.004336e0;cmp dword [], 0;jne ;mov rcx, qword [var_18h];mov rax, qword [var_20h]": 2,
                "mov rax, rdx;mov rcx, qword [var_18h];jmp ;call fcn.00456090;jmp fcn.004352a0": 2,
                "mov eax, 1;lea rcx, [];lock xadd dword [rcx], eax;mov rax, qword gs:[];mov rax, qword [rax]": 2,
                "mov rax, qword [rsp + ];mov qword [rax + ], 0;mov byte [rsp], 1;call fcn.00435570;mov rax, qword [rsp + 8]": 2,
                "call fcn.00435570;mov rax, qword [rsp + 8];inc dword [];mov rcx, qword [rsp + ];mov qword [rcx + ], rax": 2,
                "mov qword [var_18h], rbp;lea rbp, [var_18h];movzx ecx, byte [arg_28h];xor eax, eax;jmp ": 3,
                "lea rdx, [];call rax;movzx eax, byte [var_17h];jmp ;mov qword [arg_30h], rbx": 3,
                "call rax;movzx eax, byte [var_17h];jmp ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "lea rdx, [];call rax;movzx eax, byte [var_17h];jmp ;int3": 2,
                "call fcn.00434e40;mov rax, qword [var_10h];mov rcx, qword [arg_38h];mov qword [rax + ], rcx;mov rcx, qword gs:[]": 3,
                "mov rcx, qword [var_18h];mov qword [rcx + ], rax;mov qword [], rcx;cmp byte [], 0;jne ": 2,
                "mov byte [], 0;lea rax, [];mov qword [rsp], rax;call fcn.0040b8e0;jmp ": 2,
                "call fcn.00456090;jmp fcn.00435650;int3;mov rcx, qword gs:[];mov rcx, qword [rcx]": 2,
                "cmp byte [], 0;je ;mov qword [var_18h], 0;xorps xmm0, xmm0;movups xmmword [var_20h], xmm0": 3,
                "lea rax, [var_18h];mov qword [var_8h], rax;call fcn.00457780;lea rax, [];mov qword [rsp], rax": 3,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040b600;inc dword [];call fcn.0043b130": 3,
                "call fcn.0040b600;inc dword [];call fcn.0043b130;lea rax, [];mov qword [rsp], rax": 3,
                "call fcn.0040b7f0;lea rax, [];mov qword [rsp], rax;call fcn.0040b970;lea rax, []": 3,
                "mov rax, qword [rax + ];mov qword [rax + ], 0;mov rbp, qword [var_18h];add rsp, ;ret": 3,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040b600;mov rax, qword [arg_30h];test rax, rax": 3,
                "movzx ecx, byte [arg_38h];test cl, cl;jne ;xor edx, edx;test dl, dl": 2,
                "mov rbp, qword [var_20h];add rsp, ;ret;mov rax, qword [var_10h];mov qword [rsp], rax": 2,
                "jl ;mov rbp, qword [var_20h];add rsp, ;ret;lea rax, []": 2,
                "mov rdx, qword [rcx + ];test rdx, rdx;je ;cmp qword [rdx + ], 0;jne ": 3,
                "mov edx, dword [];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "je ;mov rax, qword [arg_20h];mov dword [rax + ], 3;mov eax, dword [];lea ecx, [rax - 1]": 2,
                "call fcn.0040b8e0;jmp ;mov rcx, qword [arg_20h];test byte [rcx], al;cmp dword [rcx + ], 0": 2,
                "call fcn.0040b7f0;mov rax, qword [arg_20h];mov qword [rsp], rax;mov byte [var_8h], 0;call fcn.00435b80": 4,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040b8e0;jmp ;xor ebx, ebx": 1,
                "mov eax, 1;jmp ;mov eax, 1;jmp ;xor edx, edx": 1,
                "xor edx, edx;jmp ;mov edx, 1;jmp ;mov rcx, qword [arg_20h]": 1,
                "xor eax, eax;jmp ;call fcn.00456090;jmp fcn.00435da0;int3": 1,
                "mov rdx, qword [rcx + ];test rdx, rdx;je ;mov rdx, qword [rdx + ];cmp rdx, rcx": 2,
                "je ;mov rdx, qword [rdx + ];cmp rdx, rcx;jne ;mov qword [var_20h], rax": 2,
                "mov rbp, qword [var_30h];add rsp, ;ret;call fcn.0043ae80;call fcn.00435da0": 2,
                "mov qword [var_8h], ;call fcn.004312e0;call fcn.004309d0;mov rax, qword gs:[];mov rcx, qword gs:[]": 1,
                "cmp qword [rax + ], rcx;je ;cmp qword [rcx + ], 0;jne ;mov qword [var_10h], rcx": 2,
                "mov rax, qword [rsp];mov qword [var_10h], rax;lea rcx, [];mov qword [rsp], rcx;call fcn.0040b600": 3,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0;call fcn.004359e0;mov rbp, qword [var_18h]": 3,
                "cmp rax, 4;jge ;mov rbx, qword gs:[];mov rbx, qword [rbx];mov rbx, qword [rbx + ]": 3,
                "je ;mov eax, ebx;mov ebx, edx;xor edx, edx;div r8d": 3,
                "div r8d;mov edx, edx;cmp rdx, r8;jae ;mov qword [var_40h], r9": 3,
                "mov eax, dword [];cmp dword [], eax;jae ;mov eax, 1;test al, al": 3,
                "jae ;mov eax, 1;test al, al;je ;lea rax, []": 2,
                "lea rdx, [];lock xadd dword [rdx], ecx;test rax, rax;je ;mov rcx, qword gs:[]": 1,
                "test al, al;jne ;mov qword [var_58h], rcx;mov rax, qword [];mov qword [var_38h], rax": 1,
                "mov qword [var_58h], rcx;mov rax, qword [];mov qword [var_38h], rax;mov rcx, qword [];mov qword [var_70h], rcx": 1,
                "cmp dword [], 0;jne ;mov rax, qword [var_58h];test byte [rax], al;cmp dword [rax + ], 0": 1,
                "test ecx, ecx;jl ;mov byte [var_27h], dl;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rdx, qword [rcx];test rdx, rdx;je ;test rdx, rdx;je ": 2,
                "mov rax, qword [var_10h];dec rax;test rax, rax;je ;cmp dword [], 0": 2,
                "mov rbp, qword [var_28h];add rsp, ;ret;call fcn.00456090;jmp fcn.00437510": 2,
                "jne ;mov qword [var_30h], rax;cmp qword [rcx + ], 0;jne ;mov rcx, qword [rax + ]": 3,
                "mov qword [var_30h], rax;cmp qword [rcx + ], 0;jne ;mov rcx, qword [rax + ];cmp byte [rcx + ], 0": 3,
                "cmp dword [], 0;jne ;mov rcx, qword [rax + ];mov rcx, qword [rcx + ];test byte [rcx], al": 3,
                "test rax, rax;jne ;test rax, rax;je ;test rax, rax": 3,
                "jne ;mov rax, qword [var_28h];mov qword [rax + ], 0;mov rcx, qword [];test rcx, rcx": 3,
                "call fcn.0043ca80;movzx ebx, byte [var_8h];xor ebx, 1;mov rax, qword [var_28h];movzx ecx, byte [var_1fh]": 2,
                "mov edx, dword [rdx + ];mov ebx, ;imul rbx, rdx;shr rbx, ;imul ebx, ebx, ": 2,
                "shr rbx, ;imul ebx, ebx, ;cmp edx, ebx;jne ;cmp dword [], 0": 2,
                "mov rax, qword [var_20h];jmp ;cmp dword [], 0;je ;mov rax, qword [var_30h]": 1,
                "mov qword [var_8h], rax;call fcn.004336e0;mov rax, qword [var_38h];mov qword [rsp], rax;mov qword [var_8h], 0": 1,
                "call fcn.00436470;mov rax, qword [var_30h];jmp ;call fcn.004360c0;mov rax, qword [var_30h]": 1,
                "call fcn.0040b7f0;mov byte [rsp + ], 1;mov rbp, qword [rsp + 8];add rsp, ;ret": 1,
                "cmp ecx, 2;jne ;mov qword [rsp], rax;movabs rcx, ;mov qword [var_8h], rcx": 1,
                "call fcn.004336e0;mov rax, qword gs:[];mov rax, qword [rax];mov rcx, qword [rax + ];mov rdx, qword [rcx + ]": 4,
                "call fcn.0040b600;mov rax, qword [arg_38h];mov qword [rax + ], 0;mov rcx, qword [];test rcx, rcx": 1,
                "mov rax, qword [arg_38h];mov qword [rax + ], 0;mov rcx, qword [];test rcx, rcx;je ": 1,
                "add rsp, ;ret;mov rax, qword gs:[];mov rax, qword [rax];mov rcx, qword [rax + ]": 9,
                "mov rax, qword [rax];mov rcx, qword [rax + ];mov rcx, qword [rcx + ];mov qword [rax + ], rcx;mov byte [rsp], ": 3,
                "movups xmmword [rsp + ], xmm0;call fcn.0044a760;jmp ;call fcn.00456090;jmp ": 1,
                "mov qword [var_28h], rbp;lea rbp, [var_28h];cmp byte [], 0;jne ;mov rax, qword [arg_38h]": 2,
                "movups xmmword [var_18h], xmm0;call fcn.0044a760;jmp ;call fcn.00456090;jmp fcn.004380e0": 3,
                "lea rbp, [rsp + ];mov rax, qword gs:[];mov rax, qword [rax];mov qword [rsp + ], rax;mov rcx, qword [rsp + ]": 5,
                "call fcn.0044fbf0;cmp byte [rsp + ], 0;je ;mov ecx, ;lea rdx, []": 2,
                "lea rdx, [];lock xadd dword [rdx], ecx;mov rcx, qword [rsp + ];test byte [rcx], al;cmp dword [], 0": 2,
                "mov qword [rcx + ], 0;mov rbx, qword [rsp + ];mov rsi, qword [rbx + ];mov qword [rsi + ], 0;mov byte [rcx + ], 0": 2,
                "xorps xmm0, xmm0;cvtsi2sd xmm0, rax;mulsd xmm0, qword [];cvttsd2si rax, xmm0;lea rsi, []": 2,
                "mov rax, qword gs:[];mov rax, qword [rax];mov rsi, qword [rax + ];mov rdi, qword [rsi + ];test byte [rsi], al": 2,
                "cmp rax, 0;jne ;call fcn.004376a0;mov rbp, qword [rsp + ];add rsp, ": 2,
                "call fcn.00432720;jmp ;int3;int3;int3": 3,
                "mov qword [var_10h], rax;mov rcx, qword [rax + ];inc dword [rcx + ];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rdx, qword [arg_38h];mov qword [rcx + ], rdx;mov qword [rsp], rcx;movabs rbx, ;mov qword [var_8h], rbx": 3,
                "jbe ;xorps xmm0, xmm0;movups xmmword [var_18h], xmm0;lea rcx, [];mov qword [var_18h], rcx": 3,
                "mov qword [var_18h], rcx;mov qword [var_20h], rax;lea rcx, [var_18h];mov qword [rsp], rcx;call fcn.00455f40": 3,
                "mov qword [rsp], rax;mov rax, qword [arg_40h];mov qword [var_8h], rax;call fcn.00438440;mov rax, qword [var_10h]": 2,
                "call fcn.00455f40;mov rax, qword [arg_38h];mov qword [rsp], rax;mov rcx, qword [arg_40h];mov qword [var_8h], rcx": 6,
                "mov qword [rsp], rax;mov rcx, qword [arg_40h];mov qword [var_8h], rcx;call fcn.00438440;mov rax, qword [var_10h]": 2,
                "mov qword [rsp], rax;call fcn.0040b600;mov eax, dword [];test eax, eax;jne ": 3,
                "test eax, eax;jne ;lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0": 3,
                "lea rcx, [];mov qword [rsp], rcx;call fcn.0040b600;cmp dword [], 0;jle ": 3,
                "call fcn.0040b7f0;mov rbp, qword [rsp + ];add rsp, ;ret;lea rax, []": 3,
                "xor edx, edx;jmp ;call fcn.00456090;jmp ;int3": 5,
                "inc dword [rcx + ];mov rcx, qword [arg_60h];mov qword [rsp], rcx;lea rdx, [arg_68h];mov qword [var_8h], rdx": 3,
                "mov qword [var_8h], rdx;call fcn.00438440;mov rax, qword [var_10h];mov rcx, qword [rax + ];sub rsp, ": 1,
                "movups xmmword [var_48h], xmm0;lea rbx, [];mov qword [var_30h], rbx;lea rbx, [arg_68h];mov qword [var_38h], rbx": 2,
                "lea rcx, [];mov qword [var_18h], rcx;lea rcx, [arg_68h];mov qword [var_20h], rcx;mov qword [var_28h], rax": 2,
                "mov qword [var_28h], rax;lea rdx, [var_18h];mov qword [rsp], rdx;call fcn.00455f40;lea rax, []": 2,
                "call fcn.00455f40;mov rax, qword [arg_60h];mov qword [rsp], rax;lea rax, [arg_68h];mov qword [var_8h], rax": 2,
                "cmp byte [], 0;jne ;call fcn.0043ae80;call fcn.00435da0;mov rbp, qword [rsp + ]": 2,
                "xorps xmm0, xmm0;movups xmmword [rsp + ], xmm0;call fcn.0044a760;mov rax, qword gs:[];mov rax, qword [rax]": 2,
                "mov qword [rcx + ], 0;mov qword [rsp], rdx;call fcn.00438d80;cmp byte [var_8h], 0;jne ": 3,
                "mov rcx, qword [var_18h];jmp ;mov rax, qword [];mov qword [rsp], rax;mov dword [var_8h], 0": 2,
                "mov rax, qword [rsp];mov rcx, qword [var_10h];mov qword [rcx + ], rax;mov rax, qword [rcx + ];dec dword [rax + ]": 2,
                "mov rax, qword [var_10h];mov rcx, qword [rax + ];cmp qword [rcx + ], 0;je ;mov qword [rax + ], 0": 2,
                "jmp ;mov rax, qword [var_10h];mov rcx, qword [rax + ];cmp qword [rcx + ], 0;je ": 2,
                "mov rcx, qword [rax + ];mov rcx, qword [rcx + ];inc dword [rcx + ];mov qword [rsp], rax;movabs rcx, ": 2,
                "lea rcx, [var_10h];mov qword [rsp], rcx;call fcn.00455f40;mov rax, qword [var_8h];jmp ": 3,
                "mov qword [var_8h], rax;test cl, cl;jne ;lea rax, [];mov qword [rsp], rax": 3,
                "movabs rdx, ;mov qword [rsp + 8], rdx;call fcn.004336e0;mov rax, qword gs:[];mov rax, qword [rax]": 3,
                "mov qword [rsp], rax;call fcn.0040b600;mov rax, qword [rsp + ];mov qword [rsp], rax;call fcn.0043ca80": 3,
                "mov qword [rsp], rax;call fcn.0043ca80;cmp byte [rsp + 8], 0;je ;mov rax, qword []": 3,
                "mov byte [rsp + 8], 0;call fcn.00436590;sub rsp, ;mov qword [var_20h], rbp;lea rbp, [var_20h]": 1,
                "call fcn.0040b8e0;mov rax, qword [rsp + ];jmp ;mov rcx, qword [rsp + ];mov qword [rcx + ], 0": 2,
                "jmp ;xor eax, eax;jmp ;call fcn.00456090;jmp ": 20,
                "mov dword [var_20h], 0;mov qword [var_28h], 0;lea rcx, [];mov qword [var_18h], rcx;mov rcx, qword gs:[]": 1,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov rax, qword gs:[];mov rax, qword [rax];xorps xmm0, xmm0": 3,
                "mov rcx, qword [arg_68h];test rcx, rcx;je ;mov rdx, qword [rax + ];inc dword [rdx + ]": 3,
                "mov edx, dword [arg_78h];lea ebx, [rdx + 7];and ebx, ;cmp ebx, ;jge ": 3,
                "mov rcx, qword [rax + ];mov rcx, qword [rcx + ];mov qword [var_50h], rcx;mov qword [rsp], rcx;call fcn.00439d60": 3,
                "mov rcx, qword [var_40h];mov qword [rcx + ], rax;mov qword [rcx + ], rax;lea rax, [];test byte [rax], al": 3,
                "mov qword [rcx], rdi;mov qword [rax + ], rdx;mov qword [rax + ], rsi;cmp dword [], 0;jne ": 3,
                "mov qword [rsp], rcx;call fcn.00439890;mov rax, qword [var_8h];cmp dword [], 0;jne ": 3,
                "mov qword [rcx + ], rax;mov rdx, qword [arg_68h];mov rdx, qword [rdx];mov qword [rcx + ], rdx;mov rdx, qword [var_48h]": 3,
                "mov rbx, qword [rbx + ];test rbx, rbx;je ;mov rax, qword [rbx + ];cmp dword [], 0": 3,
                "je ;mov rax, qword [rbx + ];cmp dword [], 0;jne ;mov qword [rcx + ], rax": 3,
                "test cl, cl;je ;cmp byte [], 0;je ;xor eax, eax": 3,
                "call fcn.004580f0;jmp ;mov rcx, qword [var_40h];lea rdi, [rcx + ];call fcn.004580f0": 2,
                "mov qword [var_10h], rcx;call fcn.00459210;cmp byte [], 0;je ;mov rax, qword [var_48h]": 2,
                "jb ;mov qword [var_388h], rax;lea rdx, [];mov qword [rsp], rdx;lea rdx, [rcx - 1]": 1,
                "sar rdx, ;and rdx, ;add rdx, rax;mov qword [var_8h], rdx;mov qword [var_10h], rbx": 1,
                "call fcn.00414d20;lea rdi, [var_60h];xorps xmm0, xmm0;lea rdi, [rdi - ];mov qword [rsp - ], rbp": 1,
                "call fcn.0044f0c0;mov rax, qword [var_28h];mov qword [var_40h], rax;lea rcx, [];mov qword [rsp], rcx": 1,
                "mov qword [arg_3d8h], rdi;mov rbp, qword [var_3c0h];add rsp, ;ret;mov rax, qword [var_388h]": 1,
                "jmp ;call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.00439890": 1,
                "call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.00439890;int3": 1,
                "mov ecx, dword [rax + ];cmp ecx, 6;jne ;mov rcx, qword [rax + 8];mov rdx, qword [rax]": 2,
                "jmp ;inc dword [];mov ecx, dword [rax + ];cmp ecx, ;jl ": 2,
                "mov rcx, qword [rax + ];test rcx, rcx;je ;mov rdx, qword [rcx + ];mov qword [rax + ], rdx": 2,
                "call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.00439be0;int3": 2,
                "jge ;mov rcx, qword [];test rcx, rcx;je ;mov rdx, qword [rcx + ]": 2,
                "je ;mov rdx, qword [rcx + ];mov qword [], rdx;jne ;mov rcx, qword []": 2,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0;mov rax, qword [arg_30h];mov rcx, qword [rax + ]": 2,
                "mov qword [rsp], rax;call fcn.0040b600;mov rax, qword [arg_30h];jmp ;test rcx, rcx": 2,
                "mov qword [var_8h], rcx;xorps xmm0, xmm0;movups xmmword [var_10h], xmm0;lea rax, [];mov qword [var_10h], rax": 2,
                "mov rbp, qword [var_20h];add rsp, ;ret;mov edx, 1;jmp ": 2,
                "mov rdx, qword [rcx + ];mov qword [rax + ], rdx;dec dword [rax + ];cmp qword [rcx], 0;jne ": 3,
                "test cl, cl;jne ;mov rax, qword gs:[];mov rax, qword [rax];mov rcx, qword [rax + ]": 3,
                "mov rax, qword [rdx + ];mov qword [rdx + ], rax;mov rbp, qword [var_10h];add rsp, ;ret": 3,
                "mov qword [var_8h], 0;call fcn.00435650;jmp ;dec ecx;mov dword [rax + ], ecx": 3,
                "cmp dword [rcx + ], 0;je ;mov rax, qword [rax + ];dec dword [rax + ];mov rax, qword gs:[]": 4,
                "imul rbx, rax;add qword [], rbx;mov qword [], rsi;mov rax, qword [];mov ecx, dword [arg_b0h]": 4,
                "cmp qword [rbx + ], 0;jne ;mov qword [var_70h], rbx;test edx, edx;sub rsp, ": 1,
                "mov eax, dword [var_48h];mov ecx, dword [arg_b0h];mov edx, dword [var_40h];jmp ;mov qword [var_68h], rsi": 3,
                "cmp dword [], 0;jne ;mov qword [rax + ], rdx;xor edx, edx;jmp ": 3,
                "jne ;mov qword [], rdi;jmp ;mov rsi, qword [rbx + ];test rsi, rsi": 2,
                "lea rcx, [rax + rax*2];mov rdx, qword [var_80h];mov qword [rdx + rcx*8 + ], 0;mov qword [rdx + rcx*8 + ], ;mov rbx, qword [var_68h]": 1,
                "movsxd rsi, ecx;cmp qword [], rsi;jbe ;mov dword [var_44h], ecx;mov rbx, qword [rbx + rsi*8]": 1,
                "mov rsi, qword gs:[];mov rsi, qword [rsi];mov rdi, qword [rsi + ];mov rdi, qword [rdi + ];mov r8, rdi": 1,
                "mov rdi, qword [rdi + ];mov r8, rdi;cmp rdi, rbx;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [var_8h], rbp;lea rbp, [var_8h];mov rax, qword [arg_18h];mov qword [rsp], rax;call fcn.0043ad10": 1,
                "add rsp, ;ret;call fcn.0044b480;jmp ;call fcn.00456090": 1,
                "cmp qword [rcx + ], 0;jne ;cmp qword [rcx + ], 0;jne ;mov rdx, qword [arg_38h]": 2,
                "mov qword [rcx + ], rdx;mov rax, qword [rax + ];mov qword [rbx + ], rax;mov dword [rbx + ], 1;mov rbp, qword [var_28h]": 2,
                "mov qword [rbx + ], rax;mov dword [rbx + ], 1;mov rbp, qword [var_28h];add rsp, ;ret": 2,
                "mov qword [var_48h], rbp;lea rbp, [var_48h];mov rax, qword gs:[];mov rax, qword [rax];mov rcx, qword [rax + ]": 3,
                "call fcn.0044b510;mov rax, qword [var_20h];mov rdx, qword [var_30h];jmp ;mov rax, qword [rdx + ]": 3,
                "jmp ;mov rax, qword [rdx + ];mov qword [var_28h], rax;mov ecx, dword [rdx + ];mov qword [var_18h], rcx": 3,
                "jg ;sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h];mov rax, qword gs:[]": 1,
                "test eax, eax;jg ;lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0": 3,
                "mov rdx, rax;mov qword [], rax;jmp ;mov rbp, qword [var_50h];add rsp, ": 2,
                "mov qword [rsp], rax;mov qword [var_8h], ;call fcn.004312e0;mov eax, dword [var_24h];mov eax, eax": 2,
                "call fcn.004312e0;mov eax, dword [var_18h];movsxd rax, eax;mov qword [rsp], rax;call fcn.00431110": 1,
                "test al, al;je ;cmp byte [], 0;jne ;inc dword [rcx + ]": 1,
                "mov rax, qword [var_18h];inc rax;mov qword [var_18h], rax;mov dword [rsp], 1;call fcn.0043b0c0": 1,
                "mov rax, qword [var_18h];mov rcx, qword [var_20h];mov rdx, rax;mov rax, qword [arg_40h];jmp ": 1,
                "mov rcx, qword [var_28h];jmp ;mov rax, qword [var_18h];jmp ;xor eax, eax": 1,
                "jne ;mov esi, dword [rbx + ];mov edi, dword [rbx + ];cmp rdi, rsi;je ": 1,
                "jg ;mov rbx, qword [rbx + ];test rbx, rbx;je ;mov rsi, qword gs:[]": 1,
                "jmp ;mov byte [arg_8h], bl;ret;int3;int3": 2,
                "mov qword [rsp], rax;mov qword [var_8h], 6;call fcn.004312e0;mov rax, qword [var_30h];mov rcx, qword [var_b0h]": 3,
                "call fcn.00431110;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;mov rax, qword []": 1,
                "mov qword [rsp], rax;mov qword [var_8h], 3;call fcn.004312e0;mov rax, qword [var_60h];mov qword [rsp], rax": 2,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;call fcn.004312e0;mov rax, qword [var_b0h]": 2,
                "jmp ;call fcn.00430940;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 1": 2,
                "mov qword [rsp], rax;call fcn.00431110;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 4": 1,
                "test rdx, rdx;jne ;mov dword [var_10h], eax;add dword [], eax;xorps xmm0, xmm0": 1,
                "jmp ;mov dword [var_14h], eax;mov qword [rsp], 0;mov byte [var_8h], 0;call fcn.00435b80": 1,
                "cmp dword [], 0;jne ;mov rbp, qword [var_18h];add rsp, ;ret": 1,
                "ret;mov rbx, rdx;mov qword [rdx + ], 0;mov rdx, qword [];test rdx, rdx": 1,
                "jmp ;lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0;mov rbp, qword [var_18h]": 1,
                "ret;mov byte [arg_30h], 1;mov rbp, qword [var_18h];add rsp, ;ret": 2,
                "mov qword [], 0;mov qword [var_20h], rax;lea ecx, [rdx - 1];jmp ;mov rax, qword [arg_38h]": 3,
                "mov qword [rcx + ], rax;mov qword [], rcx;mov eax, 1;lea rcx, [];lock xadd dword [rcx], eax": 4,
                "lea rcx, [];lock xadd dword [rcx], eax;mov rbp, qword [var_10h];add rsp, ;ret": 4,
                "jbe ;sub rsp, ;mov qword [var_30h], rbp;lea rbp, [var_30h];movzx ecx, byte [arg_50h]": 5,
                "mov rax, qword [arg_48h];jmp ;call fcn.00456090;jmp fcn.0043cd20;int3": 5,
                "mov ecx, dword [arg_454h];mov eax, dword [arg_450h];sub ecx, eax;shr ecx, 1;cmp ecx, ": 5,
                "xor ebx, ebx;jmp ;mov edi, ebx;shl rbx, 3;mov rcx, qword gs:[]": 1,
                "mov edi, ebx;shl rbx, 3;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "cmp rbx, ;jb ;jmp ;lea ebx, [rcx + rax];lock cmpxchg dword [rdx + ], ebx": 4,
                "mov rbx, qword [rcx + rbx*8 + ];lea esi, [rdx + 1];mov eax, edx;lock cmpxchg dword [rcx + ], esi;sete dl": 3,
                "sete dl;test dl, dl;je ;mov qword [arg_20h], rbx;mov byte [arg_28h], 0": 3,
                "test dl, dl;je ;mov qword [arg_20h], rbx;mov byte [arg_28h], 0;mov rbp, qword [var_8h]": 3,
                "mov rbx, qword [arg_28h];movzx esi, byte [arg_3ch];mov edi, dword [rbx + ];mov r8d, dword [rbx + ];sub r8d, edi": 3,
                "mov edi, dword [rbx + ];mov r8d, dword [rbx + ];sub r8d, edi;mov r9d, r8d;shr r8d, 1": 3,
                "lea r8d, [r9 + rdi];mov eax, edi;lock cmpxchg dword [rbx + ], r8d;sete dil;test dil, dil": 2,
                "sete dil;test dil, dil;jne ;xor edi, edi;jmp ": 2,
                "xor edi, edi;jmp ;mov dword [arg_40h], r9d;mov rbp, qword [var_18h];add rsp, ": 2,
                "mov dword [arg_40h], r9d;mov rbp, qword [var_18h];add rsp, ;ret;call fcn.00456090": 2,
                "lea rdx, [rax + ];mov qword [var_8h], rdx;mov dword [var_10h], ecx;movzx edx, byte [arg_48h];mov byte [var_14h], dl": 3,
                "cmp eax, ;jae ;xchg dword [rsi + ], edx;mov qword [arg_50h], rbx;mov rbp, qword [var_28h]": 3,
                "mov dword [rcx], eax;mov qword [rcx + ], 0;mov edx, 1;jmp ;lea edx, [rbx + 1]": 8,
                "jbe ;sub rsp, ;mov qword [var_10h], rbp;lea rbp, [var_10h];mov qword [], ": 9,
                "jne ;cmp qword [], 0;jne ;mov qword [], ;mov eax, ": 8,
                "mov dword [var_2ch], 0;xorps xmm0, xmm0;movss dword [var_28h], xmm0;xorps xmm0, xmm0;movsd qword [var_30h], xmm0": 5,
                "mov qword [var_30h], ;movsd xmm0, qword [var_30h];movsd xmm1, qword [];ucomisd xmm0, xmm1;jne ": 3,
                "movss xmm0, dword [var_28h];movss xmm1, dword [];ucomiss xmm1, xmm0;jne ;jnp ": 3,
                "cmp dword [var_8h], ;jne ;call fcn.00458090;cmp byte [rsp], 0;je ": 3,
                "mov qword [var_80h], rbp;lea rbp, [var_80h];mov dword [], 1;mov dword [], 1;lea rax, []": 2,
                "xor eax, eax;xor ecx, ecx;mov rdx, qword [var_38h];mov qword [var_38h], rdx;mov qword [var_60h], rax": 2,
                "mov qword [var_38h], rdx;mov qword [var_60h], rax;mov qword [var_28h], rcx;mov rbx, qword [var_68h];mov qword [rsp], rbx": 2,
                "xor r9d, r9d;jmp ;add rdi, ;mov r10, qword [rdi + 8];mov r11, qword [rdi]": 1,
                "je ;inc r9;cmp r9, r8;jl ;jmp ": 1,
                "test al, al;je ;mov rax, qword [var_70h];mov dword [rax], ecx;mov rax, qword [var_30h]": 1,
                "mov dword [], eax;mov rbp, qword [var_80h];add rsp, ;ret;call fcn.0042ea20": 1,
                "cmp rax, 3;jne ;mov rcx, qword [arg_38h];cmp word [rcx], ;jne ": 2,
                "cmp rax, 4;jne ;cmp dword [rcx], ;jne ;xor eax, eax": 2,
                "sar rbx, ;and rbx, 8;add rbx, rcx;mov qword [var_b8h], rbx;cmp dword [], 0": 3,
                "mov rdx, qword [rax + ];mov rax, qword [rax + ];mov qword [rdi + 8], rdx;mov qword [rdi + ], rcx;cmp dword [], 0": 3,
                "jne ;mov qword [rdi], rax;mov rcx, qword [var_60h];dec rcx;mov qword [var_88h], rcx": 3,
                "mov qword [var_88h], rcx;mov rdx, qword [var_b8h];mov rbx, qword [var_c0h];xor eax, eax;mov esi, 1": 3,
                "mov r9d, 1;mov r10d, 1;jmp ;inc rax;mov r8, r9": 3,
                "mov qword [var_48h], r10;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rdi;mov qword [var_10h], r8": 3,
                "mov rdx, qword [var_b8h];mov eax, dword [arg_10h];mov rdx, qword [arg_8h];mov ecx, ;xor ebx, ebx": 1,
                "mov rax, qword [var_80h];mov rcx, qword [var_88h];mov rdx, qword [var_b8h];mov rbx, qword [var_90h];mov r8, qword [var_50h]": 2,
                "mov qword [var_20h], r12;call fcn.00440d10;mov rbx, qword [var_28h];mov rax, qword [var_30h];mov r10, qword [var_38h]": 2,
                "call fcn.00450540;mov rax, qword [var_10h];mov qword [arg_38h], rax;mov rbp, qword [var_18h];add rsp, ": 3,
                "mov qword [rsp], rax;call fcn.0040b600;cmp qword [], 0;je ;lea rax, []": 4,
                "lea rcx, [];mov qword [rsp], rcx;mov rcx, qword [];mov qword [var_8h], rcx;mov dword [var_10h], eax": 19,
                "mov dword [var_10h], eax;call fcn.00411760;mov rdi, qword [var_18h];test byte [rdi], al;cmp dword [], 0": 7,
                "mov qword [], rax;call fcn.0040e500;mov rax, qword [rsp];cmp dword [], 0;jne ": 4,
                "call fcn.00456090;jmp fcn.0043e790;int3;int3;int3": 4,
                "mov ecx, ;mov rdx, rax;cmovg rax, rcx;sub rdx, rax;mov rsi, qword [rsp]": 5,
                "sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "test byte [rax], al;mov eax, 1;mov rcx, qword [arg_28h];lock xadd dword [rcx + ], eax;inc eax": 4,
                "lock xadd dword [rcx + ], eax;dec eax;test eax, eax;jge ;cmp eax, ": 7,
                "je ;mov rax, qword gs:[];mov rax, qword [rax];mov rcx, qword [rax + ];mov edx, dword [rcx + ]": 6,
                "call fcn.0040b8e0;mov rax, qword [arg_20h];jmp ;lea rax, [];mov qword [rsp], rax": 3,
                "call fcn.00456090;jmp fcn.0043ec40;int3;int3;int3": 4,
                "lea rbp, [var_18h];mov rax, qword [arg_28h];mov qword [rsp], rax;movzx eax, byte [arg_30h];mov byte [var_8h], al": 6,
                "add rdx, rcx;rcr rdx, 1;shr rdx, 7;imul rax, rdx, ;sub rcx, rax": 7,
                "rcr rdx, 1;shr rdx, 7;imul rax, rdx, ;sub rcx, rax;mov qword [var_30h], rcx": 7,
                "test rdx, rdx;je ;mov qword [rbx + ], rdx;mov qword [var_20h], rdx;shl rcx, 6": 7,
                "mov rax, qword [var_50h];mov qword [rsp], rax;call fcn.0040b7f0;mov rax, qword [var_38h];jmp ": 5,
                "rcr rdx, 1;shr rdx, 7;imul rdx, rdx, ;sub rcx, rdx;shl rcx, 6": 5,
                "lea rsi, [rdx + rcx];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "call fcn.0043f7a0;mov rax, qword [var_10h];mov qword [var_30h], rax;mov rcx, qword [var_18h];mov qword [var_20h], rcx": 4,
                "mov rbx, qword [var_40h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rax, qword [arg_58h];mov qword [rsp], rax;call fcn.0043f310;movzx ecx, byte [var_8h];mov rax, qword [var_30h]": 2,
                "mov qword [var_8h], 3;call fcn.00429840;mov rax, qword [var_30h];jmp ;mov rax, qword [var_38h]": 2,
                "test byte [rax], al;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rdi, [rax + ];lea rdx, [rax + ]": 3,
                "mov qword [r8 + ], 0;mov rbp, qword [var_10h];add rsp, ;ret;lea rdi, [r8 + ]": 3,
                "mov rdi, rbx;jmp ;lea rbx, [rax + ];mov rsi, rdi;mov rdi, rbx": 2,
                "jmp ;mov rcx, rdi;mov rdi, rsi;call fcn.004580f0;mov rdi, rcx": 4,
                "mov r8d, edx;shr edx, ;xor edx, r10d;mov dword [rcx + ], edx;lea ecx, [r8 + rdx]": 2,
                "mov qword [var_8h], rcx;call fcn.0043fb30;jmp ;mov qword [rsp], rbx;mov qword [var_8h], rcx": 2,
                "ret;lea rdi, [rax + ];mov rcx, rax;mov rax, r9;call fcn.004580f0": 1,
                "lea rsi, [rdi + ];mov rax, rdi;mov rdi, rsi;mov rcx, rax;mov rax, qword [arg_28h]": 1,
                "sub rsp, ;mov qword [var_30h], rbp;lea rbp, [var_30h];mov rcx, qword [arg_40h];lea rdi, [rcx + 8]": 1,
                "jmp ;add rdx, ;jmp ;mov qword [var_28h], rax;mov qword [var_18h], rdx": 1,
                "mov qword [var_28h], rax;mov qword [var_18h], rdx;cmp qword [rdx + ], 0;jne ;xor ebx, ebx": 1,
                "cmp qword [rdx + ], 0;jne ;xor ebx, ebx;mov rsi, qword [rdx + ];test rsi, rsi": 1,
                "mov rbx, qword [var_10h];mov rsi, qword [rdx + ];test rsi, rsi;je ;je ": 1,
                "mov rbp, qword [var_30h];add rsp, ;ret;lea rdi, [rdx + ];xor eax, eax": 1,
                "mov rax, qword [var_28h];mov rcx, qword [arg_40h];mov rdx, qword [var_18h];mov rdi, qword [var_20h];jmp ": 1,
                "cmp dword [], 0;jne ;mov qword [rsi + ], rax;cmp dword [], 0;jne ": 1,
                "lea rdi, [rax + ];mov rbx, rax;mov rax, rsi;call fcn.004580f0;mov rax, rbx": 1,
                "call fcn.004580f0;jmp ;lea rdi, [rax + ];mov r8, rax;mov rax, rbx": 1,
                "lea rdi, [rbx + ];call fcn.004580f0;jmp ;lea rdi, [rax + ];mov rsi, rax": 2,
                "mov rax, rsi;jmp ;lea rdi, [r8 + ];call fcn.004580f0;jmp ": 2,
                "lea rdi, [r8 + ];call fcn.004580f0;jmp ;lea rdi, [rcx + ];call fcn.004580f0": 2,
                "call fcn.004580f0;mov rax, rsi;jmp ;lea rdi, [rsi + ];mov rsi, rax": 2,
                "mov rsi, rax;mov rax, rcx;call fcn.004580f0;mov rax, rsi;jmp ": 4,
                "lea rbp, [var_10h];mov rax, qword [arg_20h];cmp rax, ;jne ;mov rbp, qword [var_10h]": 2,
                "mov qword [var_8h], rbp;lea rbp, [var_8h];call fcn.00459d30;mov rax, qword [rsp];mov qword [arg_18h], rax": 3,
                "call fcn.00459d30;mov rax, qword [rsp];mov qword [arg_18h], rax;mov rbp, qword [var_8h];add rsp, ": 3,
                "cmp qword [], rax;sete byte [arg_10h];ret;int3;int3": 5,
                "ret;cmp qword [], rcx;jb ;mov qword [rsp], rax;call fcn.004401b0": 6,
                "ret;cmp eax, ;je ;cmp eax, ;je ": 10,
                "je ;jmp ;cmp eax, ;je ;cmp eax, ": 6,
                "jmp ;cmp eax, ;je ;cmp eax, ;je ": 6,
                "mov rcx, qword [rcx + ];mov qword [rax + ], rcx;mov rcx, qword [rsp + ];mov rdx, qword [rcx + ];mov qword [rax + ], rdx": 6,
                "je ;mov rax, qword [rcx + ];add rax, ;mov rdx, rax;mov qword [rcx + ], rdx": 5,
                "mov qword [rsp + 8], rax;call fcn.004401e0;cmp byte [rsp + ], 0;je ;mov dword [rsp + ], ": 4,
                "mov qword [rsp + ], rax;cmp dword [], 0;jne ;mov dword [], 1;mov qword [rax], 0": 3,
                "call fcn.004312e0;mov rax, qword [rsp + ];mov qword [rsp], rax;call fcn.00431180;call fcn.00430ba0": 2,
                "jne ;cmp byte [], 0;jne ;mov rax, qword [rax + ];mov rax, qword [rax + ]": 2,
                "mov qword [var_28h], rax;mov qword [rsp], rcx;mov qword [var_8h], ;mov qword [var_10h], rax;call fcn.00452730": 1,
                "jbe ;sub rsp, ;mov qword [var_10h], rbp;lea rbp, [var_10h];cmp byte [], 0": 2,
                "sete cl;test cl, cl;jne ;mov edx, 2;jmp ": 2,
                "lea rbp, [var_20h];mov rcx, qword [arg_30h];mov rax, qword [rcx];mov rdx, qword [arg_40h];mov rbx, rax": 3,
                "jo ;movabs rcx, ;cmp rax, rcx;ja ;test rsi, rsi": 3,
                "test rsi, rsi;jl ;jmp ;mov rsi, qword [arg_38h];jmp ": 3,
                "call fcn.00456090;jmp fcn.00440c00;int3;int3;int3": 3,
                "lea r8, [rbx + rbx];cmp rdx, r8;jg ;mov r9, qword [arg_78h];cmp r9, ": 3,
                "call fcn.00415ed0;mov rax, qword [var_48h];jmp ;lea rcx, [rdx - ];shr rcx, 7": 2,
                "add rdx, ;and rdx, ;jmp ;lea rbx, [rdi - 1];test rdi, rbx": 1,
                "jae ;lea r10, [];movzx edx, word [r10 + rdx*2];jmp ;lea r10, [rdx + ]": 1,
                "movzx edx, word [r10 + rdx*2];jmp ;lea r10, [rdx + ];cmp r10, rdx;jb ": 1,
                "mov qword [rdx + rax + 8], 0;lea rax, [rcx + 1];cmp rax, ;jl ;ret": 1,
                "movzx eax, byte [arg_48h];cmp rax, 2;jae ;shl rax, 4;lea rdx, []": 3,
                "je ;cmp word [rax + ], 0;jne ;mov rdx, qword [rax + ];test rdx, rdx": 3,
                "mov rbx, rdx;mov rsi, qword [rax + ];mov qword [rdx], rsi;mov qword [rax + ], rbx;mov rdx, qword [rax + ]": 3,
                "mov qword [rax + ], rbx;mov rdx, qword [rax + ];add rcx, rdx;cmp rcx, ;jb ": 3,
                "add rsp, ;ret;mov qword [var_20h], rdx;mov rcx, qword [var_30h];mov qword [rsp], rcx": 3,
                "shr rcx, ;and rcx, ;mov rcx, qword [rdx + rcx*8 + ];test byte [rax], al;test byte [rdx], al": 4,
                "and rcx, ;mov rcx, qword [rdx + rcx*8 + ];test byte [rax], al;test byte [rdx], al;cmp byte [rcx + ], 2": 4,
                "mov rax, qword [rcx + ];test rax, rax;je ;mov rax, rbx;mov rdx, qword [rcx + ]": 4,
                "movzx eax, byte [arg_38h];cmp rax, 2;jae ;shl rax, 4;lea rdx, []": 4,
                "mov rax, qword [var_18h];mov qword [rax + ], 0;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax": 4,
                "add rsp, ;ret;movzx eax, byte [arg_38h];cmp rax, 2;jae ": 4,
                "call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.004415c0;int3": 4,
                "mov qword [rax + rcx + ], rdx;mov rdx, qword [var_10h];mov qword [rax + rcx + ], rdx;mov rbp, qword [var_20h];add rsp, ": 2,
                "ud2;call fcn.00444740;jmp fcn.00441760;int3;int3": 2,
                "cmp rcx, 2;jae ;shl rcx, 4;mov qword [var_30h], rcx;mov rbx, qword [rax + rcx + ]": 3,
                "shl rcx, 4;mov qword [var_30h], rcx;mov rbx, qword [rax + rcx + ];mov qword [var_18h], rbx;mov rsi, qword [rax + rcx + ]": 3,
                "mov qword [rdx + rax + ], rcx;mov rcx, qword [var_20h];mov qword [rdx + rax + ], rcx;mov rbp, qword [var_38h];add rsp, ": 3,
                "movzx ecx, byte [var_17h];mov rdx, qword [var_20h];mov rbx, qword [var_18h];mov rsi, rbx;test rbx, rbx": 3,
                "mov qword [rax + rcx + ], rsi;mov rsi, qword [rax + rcx + ];sub rsi, rdx;mov qword [rax + rcx + ], rsi;mov rax, rbx": 4,
                "mov rax, qword [var_50h];mov rdi, qword [rax + rcx + ];mov edx, dword [arg_70h];jmp ;shr rax, ": 3,
                "mov rax, qword [var_8h];mov qword [var_30h], rax;lea rcx, [];mov qword [rsp], rcx;call fcn.0040b600": 3,
                "shl rax, 4;lea rcx, [];mov rdx, qword [rcx + rax];test rdx, rdx;jne ": 3,
                "lea rax, [];mov qword [rsp], rax;mov rax, qword [var_38h];mov qword [var_8h], rax;lea rax, []": 3,
                "mov eax, eax;mov qword [var_38h], rax;mov qword [rsp], rax;lea rcx, [];mov qword [var_8h], rcx": 3,
                "mov rdx, rcx;mov rbx, qword [arg_70h];mov rsi, rbx;sub rbx, rdx;lea rdi, [rbx - 1]": 3,
                "mov rsi, rbx;sub rbx, rdx;lea rdi, [rbx - 1];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "sub rbx, rdx;lea rdi, [rbx - 1];test rbx, rdi;jne ;lea rdi, [rdx + rbx]": 2,
                "lea rdi, [rdx + rbx];cmp rdi, rsi;jb ;cmp dword [], 0;jne ": 2,
                "mov rsi, rdx;mov rdi, qword [rbx + rax + ];mov qword [rdx], rdi;mov qword [rbx + rax + ], rsi;mov rdx, qword [rbx + rax + ]": 2,
                "mov rdi, qword [rbx + rax + ];mov qword [rdx], rdi;mov qword [rbx + rax + ], rsi;mov rdx, qword [rbx + rax + ];add rcx, rdx": 2,
                "mov qword [rbx + rax + ], rsi;mov rdx, qword [rbx + rax + ];add rcx, rdx;mov qword [rbx + rax + ], rcx;jmp ": 1,
                "mov qword [rbx + rax + ], rcx;jmp ;mov qword [var_38h], rcx;mov qword [var_50h], rbx;mov qword [var_30h], rax": 1,
                "jmp ;mov qword [var_38h], rcx;mov qword [var_50h], rbx;mov qword [var_30h], rax;mov qword [rsp], rbx": 1,
                "mov qword [rsp], rbx;mov byte [var_8h], sil;call fcn.00441860;mov rax, qword [var_30h];mov rcx, qword [var_38h]": 1,
                "mov rax, qword [rdx + ];mov qword [rsp], rax;call fcn.004413c0;mov rax, qword [var_8h];mov qword [var_28h], rax": 1,
                "call fcn.004192a0;mov rbp, qword [var_58h];add rsp, ;ret;call fcn.0042e8e0": 1,
                "add rsp, ;ret;call fcn.0042e8e0;ud2;mov qword [var_40h], rcx": 1,
                "mov rax, qword [var_40h];mov qword [rsp], rax;call fcn.00431290;call fcn.00430bf0;call fcn.004309d0": 1,
                "mov rbx, qword [rcx + 8];mov rsi, qword [rcx + ];mov rdi, qword [arg_68h];movsxd r8, dword [rdi];mov qword [var_38h], r8": 2,
                "mov r11, qword [arg_78h];xor eax, eax;jmp ;mov rax, qword [arg_68h];mov r8, qword [var_38h]": 2,
                "je ;test r8, r8;jbe ;cmp r8, ;jae ": 2,
                "cmp qword [rdi + 8], rbx;jbe ;mov r8, qword [rdi + ];add rbx, r8;mov qword [rsi], rbx": 1,
                "jne ;xor r10d, r10d;xor r11d, r11d;jmp ;lea r11, [r13 + 8]": 1,
                "shr r11, 6;movzx r11d, byte [r9 + r11];mov r13, r12;shr r12, 3;and r12, 7": 1,
                "ja ;cmp qword [rdi + 8], r12;jbe ;mov r15, qword [rdi + ];add r12, r15": 1,
                "ja ;cmp qword [rdx + 8], rcx;jbe ;mov rbx, qword [rdx + ];add rcx, rbx": 1,
                "add rcx, rbx;mov qword [rax + ], rcx;cmp byte [], 0;je ;mov rcx, qword [rax + ]": 1,
                "jbe ;mov rdx, qword [rdx + ];add rcx, rdx;mov qword [rax + ], rcx;ret": 1,
                "mov qword [var_8h], rcx;call fcn.00442890;mov rax, qword [arg_50h];mov rcx, qword [rax + ];test rcx, rcx": 5,
                "lea rax, [rbx + ];mov qword [rsp], rax;call fcn.0040b7f0;mov rax, qword [var_18h];mov rcx, qword [var_20h]": 5,
                "mov qword [var_10h], rcx;call fcn.00459210;mov rax, qword [var_18h];jmp ;mov qword [arg_58h], 0": 5,
                "jmp fcn.00442920;int3;int3;int3;int3": 5,
                "cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_1a8h], rbp;lea rbp, [var_1a8h]": 6,
                "mov rcx, qword [var_68h];sub rcx, rax;mov qword [rsp], rcx;mov rcx, qword [var_78h];sub rcx, rax": 4,
                "mov rax, qword [arg_1b8h];mov rcx, qword [rax + ];cmp qword [var_88h], rcx;ja ;cmp qword [var_90h], rcx": 4,
                "cmp qword [var_90h], rcx;jbe ;mov rdx, qword [var_98h];add rcx, rdx;mov qword [rax + ], rcx": 4,
                "xorps xmm0, xmm0;movups xmmword [var_20h], xmm0;mov qword [var_30h], ;lea rax, [];mov qword [var_38h], rax": 4,
                "lea rax, [];mov qword [var_38h], rax;lea rax, [var_88h];mov qword [var_40h], rax;mov qword [var_48h], 0": 4,
                "lea rax, [var_88h];mov qword [var_40h], rax;mov qword [var_48h], 0;call fcn.0044c1e0;mov rax, qword [var_80h]": 4,
                "mov qword [var_40h], rax;mov qword [var_48h], 0;call fcn.0044c1e0;mov rax, qword [var_80h];mov qword [rsp], rax": 3,
                "mov eax, dword [arg_8h];xor ecx, ecx;jmp ;inc rcx;cmp rcx, ": 2,
                "xor ecx, ecx;jmp ;inc rcx;cmp rcx, ;sbb edx, edx": 2,
                "sbb edx, edx;mov ebx, 1;shl ebx, cl;and ebx, edx;cmp ebx, eax": 2,
                "mov rax, qword [rax];mov rcx, qword [rax + ];mov rdx, qword [rcx + ];mov rbx, rdx;cmp qword [rdx + ], ": 3,
                "cmp qword [rax], rbx;ja ;mov rcx, qword [var_90h];mov eax, dword [arg_8h];xor ecx, ecx": 1,
                "cmp qword [rcx + ], 0;jne ;cmp dword [rcx + ], 0;je ;mov qword [rsp], rax": 2,
                "mov qword [rsp], rax;movabs rcx, ;mov qword [var_8h], rcx;call fcn.00433180;mov rax, qword [var_d0h]": 2,
                "mov rax, qword [var_d0h];mov rcx, qword [rax];add rcx, ;mov qword [rax + ], rcx;lea rcx, [rax + ]": 2,
                "add rcx, ;mov qword [rax + ], rcx;lea rcx, [rax + ];mov qword [rsp], rcx;call fcn.00455e60": 2,
                "lea rcx, [rax + ];mov qword [rsp], rcx;call fcn.00455e60;mov rax, qword [var_d0h];mov qword [rsp], rax": 2,
                "mov qword [rsp], rax;call fcn.00438040;mov rax, qword [var_d0h];mov rcx, qword [rax + 8];sub rcx, qword [rax]": 2,
                "mov qword [var_8h], rcx;call fcn.004336e0;mov rax, qword [var_d0h];mov qword [rsp], rax;mov rcx, qword [var_88h]": 2,
                "mov rax, qword [var_d0h];mov qword [rsp], rax;mov rcx, qword [var_88h];mov qword [var_8h], rcx;mov byte [var_10h], 1": 2,
                "mov rbp, qword [var_180h];add rsp, ;ret;mov rcx, qword [rax + ];mov rdx, qword [rcx + ]": 2,
                "mov qword [var_c8h], r9;call fcn.00430940;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 2,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 4;call fcn.004312e0;mov rax, qword [var_60h]": 2,
                "mov qword [var_18h], rbp;lea rbp, [var_18h];mov rax, qword [arg_28h];mov ecx, dword [rax + ];mov edx, ecx": 1,
                "test rcx, rcx;jne ;mov rbp, qword [var_18h];add rsp, ;ret": 5,
                "mov rdx, qword [rax];mov rbx, rcx;sub rcx, rdx;mov rdx, rcx;shr rcx, 1": 1,
                "shr rdx, 2;cmp rbx, rdx;jae ;cmp qword [rax + ], 0;jne ": 1,
                "call fcn.00442a80;mov rbp, qword [var_18h];add rsp, ;ret;mov rbp, qword [var_18h]": 1,
                "ud2;call fcn.00456090;jmp fcn.00443b30;int3;int3": 1,
                "shl rax, 4;lea rdx, [];lea rbx, [rdx + rax];mov qword [rsp + ], rbx;mov rax, qword [rdx + rax]": 1,
                "jmp ;mov qword [rsp + ], rbx;mov rcx, qword [rbx];mov qword [rsp + ], rcx;mov qword [rsp], rax": 1,
                "mov rcx, qword [rsp + ];mov qword [rsp + 8], rcx;lea rcx, [];mov qword [rsp + ], rcx;call fcn.00426ee0": 1,
                "cmp rax, ;jge ;mov qword [rsp + ], rax;mov rcx, rax;shl rax, 4": 1,
                "je ;mov rdx, qword [rax];mov qword [var_b8h], rdx;mov rbx, qword [rax + 8];mov qword [var_b0h], rbx": 2,
                "cmp ecx, edx;jge ;lea edx, [rbx + 7];sar edx, 3;imul ecx, edx": 1,
                "je ;mov ecx, dword [rsi];shr rdx, 3;cmp edx, ecx;cmovl ecx, edx": 1,
                "mov dword [var_40h], ecx;mov qword [var_a0h], rdx;mov rax, qword [var_b8h];mov qword [rsp], rax;mov rax, qword [var_b0h]": 1,
                "mov dword [arg_f8h], eax;mov rax, qword [var_a0h];mov qword [arg_100h], rax;mov rbp, qword [var_c0h];add rsp, ": 1,
                "mov qword [rsp], rax;mov rcx, qword [var_b0h];mov qword [var_8h], rcx;mov byte [var_10h], 0;call fcn.004484c0": 1,
                "mov ebx, dword [var_44h];mov rdx, rax;mov rax, qword [var_a8h];jmp ;xor ecx, ecx": 1,
                "mov qword [var_58h], rcx;mov qword [rsp], rcx;call fcn.004476f0;mov rax, qword [var_10h];mov rcx, qword [var_8h]": 1,
                "mov rax, qword [var_10h];mov rcx, qword [var_8h];test rcx, rcx;je ;mov rdx, qword [var_58h]": 1,
                "mov qword [var_8h], rax;mov byte [var_10h], 3;call fcn.004484c0;mov ecx, dword [var_34h];cmp ecx, ": 1,
                "call fcn.004484c0;mov ecx, dword [var_34h];cmp ecx, ;mov eax, 0;cmove ecx, eax": 1,
                "jmp ;mov qword [var_90h], rax;mov qword [var_88h], rcx;mov qword [rsp], rcx;mov qword [var_8h], rax": 1,
                "call fcn.00448360;mov edx, dword [var_28h];mov rax, qword [var_90h];mov rcx, qword [var_88h];jmp ": 1,
                "mov qword [var_20h], rcx;call fcn.00448360;mov esi, dword [var_28h];mov rax, qword [arg_d0h];mov rdx, qword [var_b8h]": 1,
                "mov dword [arg_e8h], 0;mov qword [arg_f0h], 0;mov dword [arg_f8h], 0;mov qword [arg_100h], 0;mov rbp, qword [var_c0h]": 1,
                "mov qword [var_88h], rbp;lea rbp, [var_88h];mov rax, qword [arg_a8h];test rax, rax;jle ": 2,
                "xor edi, edi;xor r8d, r8d;jmp ;add rcx, ;mov r9, qword [rcx + 8]": 3,
                "cmp rsi, 1;jne ;mov rcx, qword [arg_98h];test rcx, rcx;je ": 2,
                "jne ;mov rcx, qword [arg_98h];test rcx, rcx;je ;mov ebx, 1": 2,
                "test rcx, rcx;je ;mov ebx, 1;test bl, bl;jne ": 2,
                "mov rbx, r9;mov r9, rsi;mov rsi, r11;mov r10, qword [r8 + 8];cmp rsi, r10": 2,
                "mov r8, qword [var_70h];mov r9, qword [var_58h];mov r10, qword [var_38h];mov r11, qword [var_50h];jmp ": 2,
                "jmp ;cmp rdi, rax;jae ;shl rdi, 4;mov rax, qword [rdx + rdi + 8]": 2,
                "ret;cmp rdi, rax;jae ;mov rbx, rdi;shl rdi, 4": 2,
                "jmp ;xorps xmm0, xmm0;movups xmmword [arg_b8h], xmm0;mov rbp, qword [var_88h];add rsp, ": 2,
                "jl ;inc rsi;mov r8, rdi;mov rdi, rbx;jmp ": 2,
                "mov rdx, qword [arg_a0h];xor esi, esi;xor edi, edi;xor r8d, r8d;jmp ": 2,
                "mov qword [var_8h], ;call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.00444770": 2,
                "mov qword [var_30h], rbp;lea rbp, [var_30h];mov rax, qword [arg_40h];mov qword [rsp], rax;lea rax, [arg_48h]": 15,
                "mov rax, qword [var_28h];mov rcx, qword [var_20h];mov qword [arg_78h], rcx;mov qword [arg_80h], rax;mov rbp, qword [var_30h]": 4,
                "mov rax, qword [arg_40h];mov qword [rsp], rax;lea rax, [arg_48h];mov qword [var_8h], rax;mov qword [var_10h], 5": 4,
                "mov qword [arg_98h], rcx;mov qword [arg_a0h], rax;mov rbp, qword [var_30h];add rsp, ;ret": 4,
                "je ;cmp rax, ;jg ;mov qword [arg_50h], rcx;mov rax, qword [arg_40h]": 5,
                "mov qword [arg_60h], rax;mov qword [arg_68h], rcx;mov qword [arg_70h], rbx;mov rbp, qword [var_30h];add rsp, ": 6,
                "mov qword [arg_70h], rbx;mov rbp, qword [var_30h];add rsp, ;ret;mov qword [rsp], rcx": 6,
                "call fcn.004453d0;mov rdx, qword [var_8h];mov rsi, qword [var_10h];mov rax, qword [var_18h];mov rcx, qword [var_20h]": 6,
                "lea rbp, [var_38h];mov rax, qword [arg_48h];test rax, rax;je ;mov rcx, qword [arg_58h]": 7,
                "mov rdx, qword [arg_50h];cmp rax, rdx;jne ;mov qword [arg_60h], rax;mov qword [arg_68h], rsi": 7,
                "mov qword [arg_60h], rax;mov qword [arg_68h], rsi;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov rcx, qword [var_10h];mov rax, qword [var_8h];mov rbx, qword [var_18h];mov rdx, qword [arg_58h];jmp ": 6,
                "jmp ;call fcn.00456090;jmp fcn.00444e00;int3;int3": 6,
                "mov rbx, qword [var_30h];jmp ;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov rcx, qword [arg_68h];mov rbx, qword [var_30h];jmp ;mov rdi, qword [arg_58h];test rdi, rdi": 5,
                "jmp ;mov rdi, qword [arg_58h];test rdi, rdi;je ;cmp rbx, ": 5,
                "mov qword [var_10h], rdi;call fcn.00452730;mov r9d, dword [var_18h];mov rdi, qword [var_20h];mov rax, qword [arg_60h]": 4,
                "xor eax, eax;xor ecx, ecx;jmp ;mov qword [var_68h], rax;mov rcx, qword [arg_98h]": 4,
                "mov qword [rsp], rbx;mov qword [var_8h], 4;mov qword [var_10h], 4;mov dword [var_18h], edx;call fcn.00452970": 4,
                "mov qword [var_10h], 4;mov dword [var_18h], edx;call fcn.00452970;mov rax, qword [var_68h];inc rax": 4,
                "mov qword [var_8h], rax;call fcn.00444d50;mov rax, qword [var_30h];mov qword [var_60h], rax;mov rcx, qword [var_20h]": 4,
                "mov rax, qword [arg_a0h];mov rcx, qword [arg_98h];mov rdx, qword [var_48h];mov rbx, qword [var_78h];mov rsi, qword [var_58h]": 3,
                "jge ;mov r12d, dword [r8 + r10*4];cmp r11, r9;jge ;cmp r11, rbx": 3,
                "mov qword [arg_b8h], r11;mov rbp, qword [var_80h];add rsp, ;ret;call fcn.0042ea20": 2,
                "call fcn.00452970;mov rax, qword [var_20h];mov rcx, qword [arg_58h];mov rdx, qword [arg_50h];mov rcx, qword gs:[]": 1,
                "mov rax, qword [var_20h];mov rcx, qword [arg_58h];mov rdx, qword [arg_50h];test rax, rax;jl ": 2,
                "call fcn.004453d0;mov rdx, qword [var_28h];mov rbx, qword [var_20h];mov rax, qword [var_8h];mov rcx, qword [var_18h]": 2,
                "mov rcx, qword [arg_30h];mov qword [arg_40h], rcx;mov qword [arg_48h], rax;mov qword [arg_50h], rcx;mov qword [arg_58h], rcx": 3,
                "ja ;lea rcx, [rax + 7];shr rcx, 3;cmp rcx, ;jae ": 4,
                "sub rcx, rdx;mov qword [var_8h], rcx;call fcn.00458f80;mov rax, qword [var_28h];mov rcx, qword [var_20h]": 3,
                "cmp rcx, rdx;jne ;mov qword [arg_50h], rax;mov rax, qword [arg_48h];mov qword [arg_58h], rax": 4,
                "mov qword [arg_60h], rcx;mov rbp, qword [var_38h];add rsp, ;ret;mov qword [var_30h], rax": 4,
                "jmp fcn.004455e0;int3;int3;int3;int3": 3,
                "ret;call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.004457a0": 3,
                "cmp rsi, rcx;jge ;movzx edi, byte [rbx + rsi];cmp byte [rdx], dil;jne ": 3,
                "int3;int3;int3;mov rax, qword [arg_10h];test rax, rax": 9,
                "movzx edi, byte [rax + rbx];cmp dil, ;jb ;cmp dil, ;ja ": 4,
                "ja ;movabs r8, ;cmp rsi, r8;ja ;lea rsi, [rsi + rsi*4]": 4,
                "je ;je ;movabs rax, ;cmp rsi, rax;ja ": 3,
                "mov qword [arg_18h], rax;mov byte [arg_20h], 1;ret;mov qword [arg_18h], 0;mov byte [arg_20h], 0": 3,
                "lea rdx, [rsi + rbx];mov eax, ;mov qword [var_28h], rdx;mov qword [var_20h], rax;mov qword [var_30h], rcx": 4,
                "mov qword [var_50h], rcx;lea rax, [var_58h];mov qword [rsp], rax;mov qword [var_8h], 8;mov qword [var_10h], 8": 4,
                "mov qword [rsp], rax;call fcn.004453d0;mov rax, qword [var_18h];mov qword [var_78h], rax;mov rcx, qword [var_28h]": 4,
                "mov qword [var_60h], rbx;mov rsi, qword [var_10h];mov qword [var_30h], rsi;mov rdi, qword [arg_90h];mov r8, qword [var_40h]": 4,
                "mov qword [arg_a0h], r10;mov rbp, qword [var_80h];add rsp, ;ret;call fcn.0042ea20": 3,
                "call fcn.0042e8e0;ud2;call fcn.0042ea20;ud2;call fcn.0042e8e0": 32,
                "mov rcx, qword [];mov qword [rsp], 2;mov qword [rsp + 8], rax;mov dword [rsp + ], ecx;call fcn.0042d800": 2,
                "cmp rdx, 2;jge ;mov rsi, qword [rcx + 8];mov r8, qword [rcx + ];mov r9, qword [rcx]": 4,
                "mov r8, qword [rcx + ];mov r9, qword [rcx];test rsi, rsi;je ;mov rdx, qword [r9]": 4,
                "and rsi, rcx;lea rcx, [rdi + rsi];mov qword [var_8h], rcx;mov qword [var_10h], rdx;mov qword [var_18h], r10": 3,
                "mov qword [var_18h], r10;mov qword [var_20h], r9;mov qword [var_28h], rdx;mov qword [var_30h], r8;call fcn.00414d20": 3,
                "mov qword [rdi + ], rax;mov rax, qword [var_70h];mov qword [rdi + ], rax;cmp dword [], 0;jne ": 3,
                "mov rdx, qword [var_60h];mov rbx, qword [var_78h];mov r8, qword [var_68h];mov r9, qword [var_a8h];jmp ": 3,
                "mov qword [var_50h], rcx;mov rdx, qword [var_20h];mov qword [var_88h], rdx;mov rbx, qword [var_98h];mov qword [rsp], rbx": 3,
                "mov rbx, qword [var_98h];mov qword [rsp], rbx;mov rsi, qword [var_a0h];mov qword [var_8h], rsi;mov byte [var_10h], 2": 3,
                "movups xmm0, xmmword [];movups xmmword [var_c0h], xmm0;movups xmm0, xmmword [];movups xmmword [var_d0h], xmm0;movups xmm0, xmmword []": 3,
                "movups xmm0, xmmword [];movups xmmword [var_e0h], xmm0;movups xmm0, xmmword [];movups xmmword [var_f0h], xmm0;mov rbx, qword [var_40h]": 3,
                "mov rbx, qword [rdi + ];mov rsi, qword [rdi + ];cmp rdx, rsi;ja ;lea rdx, [rcx + 1]": 3,
                "mov rsi, qword [rdi + ];cmp rdx, rsi;ja ;lea rdx, [rcx + 1];mov qword [rdi + ], rdx": 3,
                "cmp dword [], 0;jne ;movups xmm0, xmmword [var_c0h];movups xmmword [rdx], xmm0;movups xmm0, xmmword [var_d0h]": 2,
                "lea rcx, [rbx + rcx];lea rcx, [rcx + ];movups xmmword [rcx], xmm0;movups xmm0, xmmword [var_f0h];movups xmmword [rcx + ], xmm0": 2,
                "movups xmm0, xmmword [var_f0h];movups xmmword [rcx + ], xmm0;jmp ;lea rax, [];mov qword [rsp], rax": 2,
                "mov rcx, qword [var_58h];mov rdx, qword [var_40h];mov qword [var_48h], rax;mov qword [var_68h], rcx;mov qword [var_40h], rdx": 1,
                "mov qword [rsp], rbx;call fcn.004457a0;mov rax, qword [var_10h];mov qword [var_50h], rax;mov rcx, qword [var_8h]": 1,
                "movups xmm0, xmmword [];movups xmmword [var_b8h], xmm0;movups xmm0, xmmword [];movups xmmword [var_c8h], xmm0;movups xmm0, xmmword []": 1,
                "movups xmmword [var_b8h], xmm0;movups xmm0, xmmword [];movups xmmword [var_c8h], xmm0;movups xmm0, xmmword [];movups xmmword [var_d8h], xmm0": 1,
                "movups xmm0, xmmword [];movups xmmword [var_c8h], xmm0;movups xmm0, xmmword [];movups xmmword [var_d8h], xmm0;mov rdx, qword [arg_f8h]": 1,
                "mov rdx, qword [arg_f8h];mov qword [var_a8h], rdx;mov rbx, qword [var_60h];mov qword [var_b8h], rbx;mov rbx, qword [var_50h]": 1,
                "lea rdi, [rsi + rax];cmp dword [], 0;jne ;movups xmm0, xmmword [var_a8h];movups xmmword [rdi], xmm0": 1,
                "movups xmm0, xmmword [var_c8h];movups xmmword [rax], xmm0;movups xmm0, xmmword [var_d8h];movups xmmword [rax + ], xmm0;cmp qword [var_98h], 0": 1,
                "mov rcx, qword [var_40h];mov rdx, qword [arg_f8h];mov rbx, qword [var_48h];mov rsi, qword [var_58h];jmp ": 1,
                "jne ;mov qword [r8 + rdx*8], rcx;cmp dword [rcx + ], 0;jne ;cmp qword [rcx + ], 0": 2,
                "call fcn.00417850;mov rax, qword [var_18h];mov ecx, dword [var_10h];mov rdx, qword [var_48h];mov dword [rdx + ], ecx": 4,
                "jge ;mov rbx, qword [rdi + rdx*8];cmp byte [rbx + ], 0;je ;cmp dword [], 0": 1,
                "cmp qword [rax + 8], rdx;jbe ;lea rdi, [rcx + rdx*8];cmp dword [], 0;jne ": 1,
                "jne ;lea rbx, [];mov qword [rcx + rdx*8], rbx;lea rcx, [];mov qword [rsp], rcx": 1,
                "lea rax, [];call fcn.004580f0;mov rax, rcx;jmp ;mov rcx, rax": 1,
                "mov qword [var_f8h], rbp;lea rbp, [var_f8h];mov rax, qword [arg_108h];mov rcx, qword [rax];mov rdx, qword [rax]": 3,
                "lea rbp, [var_f8h];mov rax, qword [arg_108h];mov rcx, qword [rax];mov rdx, qword [rax];mov ecx, dword [rcx]": 3,
                "jne ;cmp byte [rdx + 5], 0;jne ;cmp byte [rdx + 6], 1;jne ": 3,
                "cmp rsi, rbx;jge ;mov rdi, rsi;shl rsi, 4;mov r8, qword [rsi + rcx]": 3,
                "mov rcx, qword [r9 + rcx + 8];cmp rcx, r8;jae ;mov qword [var_78h], rdi;mov qword [var_70h], r10": 3,
                "mov qword [rsp], r11;mov qword [var_8h], rax;call fcn.00447e30;mov rax, qword [arg_108h];mov rcx, qword [rax + ]": 3,
                "mov rax, qword [var_60h];mov rax, qword [rax + rdx];mov qword [var_50h], rax;call fcn.00430940;lea rax, []": 3,
                "mov qword [var_50h], rax;call fcn.00430940;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 3,
                "jmp ;mov qword [var_a0h], rdx;mov qword [var_60h], rbx;mov rax, qword [var_70h];mov rax, qword [rax + rcx]": 2,
                "call fcn.00430ba0;mov rax, qword [var_a0h];mov qword [rsp], rax;mov rax, qword [var_60h];mov qword [var_8h], rax": 2,
                "lea rdx, [rax + 1];mov rax, qword [var_78h];mov rcx, qword [arg_108h];cmp rdx, rax;jg ": 2,
                "jne ;shl rbx, 4;mov rcx, qword [rbx + rcx];cmp qword [rax + ], rcx;jne ": 2,
                "mov qword [var_d0h], rsi;movups xmm0, xmmword [rcx + 8];movups xmmword [var_d8h], xmm0;movups xmm0, xmmword [rcx + ];movups xmmword [var_e8h], xmm0": 2,
                "call fcn.004312e0;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 5;call fcn.004312e0": 1,
                "mov qword [rsp], rax;mov qword [var_8h], 5;call fcn.004312e0;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "movsxd rdx, dword [var_28h];mov qword [var_48h], rdx;lea rbx, [];mov qword [rsp], rbx;call fcn.0040d880": 1,
                "mov rcx, qword [var_10h];mov qword [arg_38h], rcx;mov qword [arg_40h], rax;mov rbp, qword [var_20h];add rsp, ": 2,
                "jne ;mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rax, qword [rax + ];mov qword [arg_58h], rdx": 3,
                "mov rbp, qword [var_38h];add rsp, ;ret;mov qword [rsp], rcx;call fcn.004476b0": 3,
                "mov qword [rsp], rcx;call fcn.004476b0;mov rax, qword [arg_48h];mov qword [rsp], rax;mov rax, qword [arg_50h]": 3,
                "mov rax, qword [arg_48h];mov qword [rsp], rax;mov rax, qword [arg_50h];mov qword [var_10h], rax;mov byte [var_18h], 0": 3,
                "mov byte [var_18h], 0;call fcn.00447fa0;movsxd rax, dword [var_30h];mov rcx, qword [var_28h];mov rdx, qword [var_20h]": 3,
                "mov qword [var_10h], rbp;lea rbp, [var_10h];mov rax, qword [arg_20h];mov qword [rsp], rax;call fcn.004476b0": 4,
                "mov edi, ecx;cmp rdi, rsi;jae ;shl rdi, 4;mov rdi, qword [rdx + rdi]": 4,
                "cmp rdi, rsi;jae ;shl rdi, 4;mov rdi, qword [rdx + rdi];cmp rbx, rdi": 4,
                "shl rcx, 4;mov rcx, qword [rdx + rcx + 8];cmp rcx, rbx;jae ;add rcx, rdi": 4,
                "add rcx, rdi;mov qword [arg_28h], rcx;mov qword [arg_30h], rax;mov rbp, qword [var_10h];add rsp, ": 4,
                "ret;mov ecx, r8d;lea edi, [rcx + 1];cmp rdi, rsi;jae ": 4,
                "and rdx, 1;xor esi, esi;jmp ;lea rsi, [rdi + 1];mov rdx, r8": 4,
                "jne ;mov eax, dword [rdx + rsi + ];mov dword [arg_d8h], eax;mov rbp, qword [var_98h];add rsp, ": 4,
                "sar rdi, ;and rdi, r10;add rdi, r9;sub r8, r10;jmp ": 4,
                "mov rdx, qword [arg_a8h];mov rax, qword [var_58h];cmp qword [rdx], rax;mov qword [rsp], rdi;mov qword [var_8h], r8": 4,
                "sete byte [var_28h];call fcn.004485a0;mov rax, qword [var_40h];mov rcx, qword [var_38h];mov rdx, qword [var_30h]": 3,
                "mov rdx, qword [var_30h];cmp byte [var_48h], 0;je ;mov rbx, qword [arg_c0h];cmp qword [var_58h], rbx": 3,
                "jbe ;mov rax, qword [arg_c8h];test rax, rax;je ;mov rcx, qword gs:[]": 3,
                "mov rcx, rbx;shr rbx, 3;and rbx, 1;shl rbx, 7;lea rdi, [rax + rbx]": 3,
                "mov r8d, dword [rax + rbx + 8];mov r9, qword [rax + rbx];mov qword [rdi + rdx], r9;mov dword [rdi + rdx + 8], r8d;mov dword [rdi + rdx + ], esi": 3,
                "mov edx, dword [var_54h];mov qword [rax + rbx], rcx;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov eax, dword [var_54h];mov dword [arg_d8h], eax;mov rbp, qword [var_98h];add rsp, ;ret": 2,
                "mov rbp, qword [var_98h];add rsp, ;ret;cmp dword [], 0;jne ": 2,
                "jne ;movzx ebx, byte [arg_d0h];test bl, bl;je ;mov qword [var_68h], rax": 2,
                "mov qword [var_8h], 4;call fcn.004312e0;mov rax, qword [var_70h];mov qword [rsp], rax;call fcn.00431180": 1,
                "mov rax, qword [arg_b0h];mov rcx, qword [rax + ];mov rdx, qword [rax + 8];mov rax, qword [rax];mov rbx, qword [var_80h]": 1,
                "mov rcx, qword [rax + ];mov rdx, qword [rax + 8];mov rax, qword [rax];mov rbx, qword [var_80h];cmp rbx, rdx": 1,
                "mov rax, qword [rax];mov rbx, qword [var_80h];cmp rbx, rdx;ja ;mov rsi, qword [arg_a8h]": 1,
                "mov rsi, qword [arg_a8h];mov rdi, qword [rsi];mov qword [var_58h], rdi;mov dword [var_54h], ;sub rcx, rbx": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 7;call fcn.004312e0;movsxd rax, dword [var_54h]": 1,
                "mov rcx, qword [var_58h];cmp qword [rsi], rcx;mov qword [rsp], rax;mov qword [var_8h], rdx;mov qword [var_10h], rdi": 1,
                "mov qword [var_10h], rdi;lea rax, [var_58h];mov qword [var_18h], rax;lea rcx, [var_54h];mov qword [var_20h], rcx": 1,
                "mov qword [arg_48h], rcx;mov qword [arg_50h], rax;mov rbp, qword [var_28h];add rsp, ;ret": 7,
                "mov rax, qword [arg_38h];test rax, rax;je ;mov eax, dword [arg_48h];movsxd rax, eax": 2,
                "add rsp, ;ret;xorps xmm0, xmm0;movups xmmword [arg_50h], xmm0;mov rbp, qword [var_28h]": 2,
                "mov qword [var_18h], rdx;mov qword [var_20h], 0;movzx edx, byte [arg_88h];mov byte [var_28h], dl;call fcn.00447870": 3,
                "mov qword [arg_98h], 1;mov dword [arg_a0h], 0;mov rbp, qword [var_60h];add rsp, ;ret": 6,
                "movups xmmword [var_50h], xmm0;mov rcx, qword [var_48h];mov qword [var_50h], rcx;mov qword [var_58h], rax;mov rcx, qword [var_50h]": 3,
                "mov dword [arg_70h], edx;mov rbp, qword [var_38h];add rsp, ;ret;call fcn.00456090": 4,
                "ret;call fcn.00456090;jmp fcn.00448170;int3;int3": 4,
                "add rsp, ;ret;mov dword [var_3ch], eax;mov rax, qword [arg_70h];mov qword [rsp], rax": 4,
                "call fcn.00430ba0;mov rax, qword [arg_80h];mov qword [rsp], rax;call fcn.00431180;call fcn.00430ba0": 4,
                "mov rax, qword [var_40h];mov qword [rsp], rax;call fcn.00431180;call fcn.00430ba0;mov eax, dword [var_3ch]": 4,
                "mov qword [rsp], rcx;call fcn.00431110;call fcn.00430bf0;call fcn.004309d0;mov eax, dword [var_3ch]": 3,
                "mov dword [arg_70h], eax;mov rbp, qword [var_38h];add rsp, ;ret;call fcn.00456090": 4,
                "jge ;mov dword [arg_78h], ;mov rbp, qword [var_38h];add rsp, ;ret": 4,
                "mov rbp, qword [var_18h];add rsp, ;ret;mov qword [var_10h], rdx;call fcn.00430940": 5,
                "ret;mov qword [var_10h], rdx;call fcn.00430940;lea rax, [];mov qword [rsp], rax": 5,
                "call fcn.00456090;jmp fcn.004484c0;int3;int3;int3": 4,
                "add rdx, rsi;mov qword [arg_68h], rdx;sub rax, rbx;mov qword [arg_70h], rax;mov qword [arg_78h], rcx": 4,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;mov rdx, qword [arg_48h];mov qword [var_10h], rdx;call fcn.00448750": 4,
                "lea rbp, [rsp];mov rax, qword [arg_10h];mov rdx, qword [arg_18h];xor ecx, ecx;xor ebx, ebx": 4,
                "or ebx, edi;test r9b, ;jne ;mov dword [arg_28h], r8d;mov dword [arg_2ch], ebx": 4,
                "mov dword [var_30h], 0;mov rcx, qword [arg_48h];mov qword [var_20h], rcx;mov qword [var_28h], 0;mov dword [var_30h], ": 4,
                "mov rcx, qword [];sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp];mov rax, qword [arg_10h]": 1,
                "mov qword [var_18h], rax;mov rcx, qword [];mov qword [rax + ], rcx;mov qword [rax + ], 2;lea rcx, [arg_30h]": 4,
                "mov qword [arg_68h], rax;call fcn.0042f500;mov rbp, qword [var_20h];add rsp, ;ret": 3,
                "mov qword [arg_88h], 0;mov qword [arg_90h], 0;mov qword [arg_98h], 0;mov rax, qword gs:[];mov rax, qword [rax]": 4,
                "mov qword [arg_b0h], 0;mov rax, qword gs:[];mov rax, qword [rax];mov rax, qword [rax + ];inc dword [rax + ]": 4,
                "mov qword [arg_b8h], 0;mov qword [arg_c0h], 0;mov qword [arg_c8h], 0;mov rax, qword gs:[];mov rax, qword [rax]": 4,
                "cmp dword [], 0;jne ;xorps xmm0, xmm0;movups xmmword [rdx], xmm0;movups xmmword [rdx + ], xmm0": 4,
                "lea rdx, [];mov qword [rcx + ], rdx;lea rdx, [];mov qword [rcx + ], rdx;cmp dword [], 0": 4,
                "mov rax, qword [rax];sub rsp, ;mov qword [var_20h], rbp;lea rbp, [var_20h];mov qword [arg_b8h], 0": 1,
                "mov qword [rsp], rax;mov rax, qword [var_30h];mov qword [var_8h], rax;mov word [var_10h], ;mov qword [var_18h], 2": 3,
                "mov rax, qword [rsp + ];mov qword [rsp], rax;mov qword [rsp + 8], 0;call fcn.00431dc0;mov rbp, qword [rsp + ]": 2,
                "shl rax, 7;lea rcx, [];lea rdx, [rcx + rax];mov qword [var_28h], rdx;mov rbx, qword [arg_40h]": 3,
                "jge ;movabs rcx, ;mov qword [rax + ], rcx;mov rcx, qword [arg_50h];mov rdx, qword [rcx + ]": 3,
                "mov rsi, qword [rcx + ];mov r8, qword [rcx + ];cmp rbx, rsi;ja ;lea rbx, [rdx + 1]": 3,
                "cmp qword [rax + 8], 0;jne ;mov rcx, qword [arg_50h];cmp byte [rcx + ], 0;je ": 2,
                "je ;mov rax, qword [rax + ];cmp qword [rcx + ], rax;jg ;cmp byte [rcx + ], 0": 2,
                "jmp ;mov byte [rcx + ], 0;mov rax, qword [rcx + 8];mov qword [rsp], rax;mov qword [var_8h], 0": 2,
                "mov rcx, qword [arg_50h];jmp ;mov byte [arg_60h], 0;mov rbp, qword [var_40h];add rsp, ": 2,
                "mov rcx, qword [var_30h];mov rdx, qword [var_38h];mov rbx, qword [arg_50h];mov qword [rbx + ], rdx;cmp dword [], 0": 4,
                "mov rax, qword [rsi + r8*8 - 8];cmp dword [], 0;jne ;mov qword [rsi + rdx*8], rax;mov rcx, qword [rbx + ]": 3,
                "mov eax, 1;mov byte [arg_58h], 1;mov byte [arg_59h], al;mov rbp, qword [var_38h];add rsp, ": 3,
                "mov rbx, qword [rcx + ];mov rcx, qword [rcx + ];mov qword [rsp], rcx;mov qword [var_8h], rbx;mov qword [var_10h], rdx": 3,
                "jmp fcn.004499e0;int3;int3;int3;int3": 2,
                "mov r8, qword [r8];mov qword [r8 + 8], 0;mov r8, qword [rcx + ];cmp qword [rcx + ], rsi;jbe ": 2,
                "lea rdi, [r8 + rdx*8];lea rdi, [rdi - 8];cmp dword [], 0;jne ;mov qword [r8 + rdx*8 - 8], 0": 2,
                "mov byte [rsp + ], dl;mov rax, qword [rbx + ];mov qword [rsp + ], rax;mov rsi, qword [rbx + ];mov qword [rsp + ], rsi": 1,
                "mov qword [rsp + ], rax;mov rsi, qword [rbx + ];mov qword [rsp + ], rsi;mov rdi, qword [rbx + ];mov qword [rsp + ], rdi": 1,
                "call fcn.0044a3b0;movzx edx, byte [rsp + ];mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rbx, qword [rsp + ]": 1,
                "mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rbx, qword [rsp + ];jmp ;mov rdx, rax": 1,
                "mov rcx, qword [rsp + ];mov rbx, qword [rsp + ];jmp ;test rsi, rsi;jge ": 1,
                "jmp ;test rsi, rsi;jge ;mov byte [rcx + ], 1;lea rax, []": 1,
                "lea rax, [];mov qword [rsp + 8], rax;call fcn.0042f900;ud2;call fcn.0042ea20": 3,
                "mov qword [var_20h], rbp;lea rbp, [var_20h];cmp qword [], 0;je ;xor eax, eax": 1,
                "lea rbp, [var_20h];cmp qword [], 0;je ;xor eax, eax;jmp ": 1,
                "xor eax, eax;jmp ;mov qword [var_10h], rax;shl rax, 7;lea rdx, []": 1,
                "shl rax, 7;lea rdx, [];lea rax, [rax + rdx];mov qword [rsp], rax;call fcn.0040b600": 1,
                "call fcn.0040b600;mov rax, qword [var_10h];inc rax;cmp rax, ;jl ": 1,
                "cmp rax, ;jl ;call fcn.0044a110;mov rax, qword [rsp];mov qword [var_18h], rax": 1,
                "jmp ;mov qword [var_8h], rcx;shl rcx, 7;lea rdx, [];lea rcx, [rcx + rdx]": 1,
                "int3;int3;int3;xor eax, eax;xor ecx, ecx": 1,
                "je ;mov rax, qword [rsi];test rcx, rcx;je ;mov rsi, qword [rcx + ]": 2,
                "mov rax, rcx;jmp ;test rcx, rcx;je ;mov rax, qword [rcx + ]": 2,
                "cmp rax, ;jge ;mov qword [var_10h], rax;mov qword [var_8h], rcx;shl rax, 7": 3,
                "jmp ;mov qword [arg_38h], rcx;mov rbp, qword [var_28h];add rsp, ;ret": 3,
                "jae ;mov r9, qword [rbx + r8*8];cmp qword [r9 + ], rsi;jle ;cmp rcx, rdx": 4,
                "mov rsi, qword [rax + ];jmp ;mov qword [rcx + 8], r8;mov rcx, r13;mov r8, rcx": 4,
                "jae ;mov r12, qword [rbx + rcx*8 + ];mov r12, qword [r12 + ];cmp r12, r10;jge ": 4,
                "jge ;jae ;mov rcx, qword [rbx + rcx*8 + ];mov rcx, qword [rcx + ];cmp rcx, r10": 4,
                "mov rcx, qword [rbx + rcx*8 + ];mov rcx, qword [rcx + ];cmp rcx, r10;jge ;cmp rcx, r12": 4,
                "cmp r13, rdx;jae ;mov rcx, qword [rbx + r13*8];cmp r8, rdx;jae ": 4,
                "mov rax, r9;jmp ;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "jmp ;cmp r8, rdx;jae ;mov rcx, qword [rbx + r8*8];lea rdi, [rbx + r8*8]": 3,
                "jne ;lea rax, [];mov qword [rsp], rax;call fcn.0040b7f0;mov qword [arg_20h], 0": 3,
                "mov qword [arg_20h], rax;mov rbp, qword [var_10h];add rsp, ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "cmp qword [], 0;jne ;mov qword [], rcx;mov qword [], rcx;lea rax, []": 3,
                "jbe ;sub rsp, ;mov qword [var_50h], rbp;lea rbp, [var_50h];call fcn.0044ac70": 4,
                "cmp byte [], 0;je ;mov rbx, qword [arg_68h];test rbx, rbx;jle ": 4,
                "mov rbx, qword [arg_68h];test rbx, rbx;jle ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "je ;mov rbx, qword [arg_68h];test rbx, rbx;jle ;mov rsi, qword gs:[]": 3,
                "call fcn.0044a860;mov eax, dword [var_4ch];mov dword [rsp], eax;call fcn.0044ad30;mov rbp, qword [var_50h]": 3,
                "jge ;mov qword [rsp], rbx;mov eax, dword [arg_80h];mov dword [var_8h], eax;call fcn.0044adc0": 4,
                "mov rdx, qword [rcx + 8];mov qword [rcx + 8], rax;sub rax, rdx;mov rdx, qword [arg_98h];test rdx, rdx": 4,
                "mov qword [var_38h], rdi;mov byte [rcx + rdi + ], r9b;inc qword [rcx + ];cmp r8b, 3;je ": 4,
                "mov rcx, qword [var_50h];test rcx, rcx;je ;add rax, ;mov byte [rcx], al": 3,
                "mov rcx, qword [var_58h];lea rdx, [rcx + ];mov qword [var_8h], rdx;mov qword [var_10h], ;mov qword [var_18h], ": 3,
                "mov rbx, qword [arg_a8h];mov rsi, rbx;jmp ;mov rax, rcx;jmp ": 3,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov rax, qword gs:[];mov rax, qword [rax];mov rcx, qword [arg_48h]": 4,
                "mov rdx, qword [arg_50h];mov qword [var_8h], rdx;mov qword [var_10h], rax;mov qword [var_18h], rcx;call fcn.0044b030": 3,
                "mov qword [var_18h], rcx;call fcn.0044b030;mov eax, dword [var_20h];mov qword [arg_70h], rax;mov rbp, qword [var_38h]": 3,
                "mov rcx, qword [arg_58h];mov qword [var_10h], rcx;mov rcx, qword [arg_60h];mov qword [var_18h], rcx;call fcn.0044efd0": 2,
                "mov qword [var_18h], rcx;call fcn.0044efd0;mov rax, qword [var_20h];mov rcx, qword [var_30h];jmp ": 2,
                "mov rcx, qword [rax + ];inc dword [rcx + ];mov rcx, qword [rax + ];test byte [rax], al;mov rax, qword [rcx + ]": 3,
                "mov edx, dword [rax + 8];mov qword [arg_20h], rcx;mov dword [arg_28h], edx;add rax, ;mov qword [arg_30h], rax": 2,
                "mov qword [arg_30h], rax;mov rbp, qword [var_10h];add rsp, ;ret;mov qword [var_8h], rcx": 2,
                "add rsp, ;ret;mov qword [var_8h], rcx;lea rax, [];mov qword [rsp], rax": 2,
                "jmp fcn.0044ad30;int3;int3;int3;mov rcx, qword gs:[]": 3,
                "call fcn.0044afb0;mov rax, qword [var_30h];mov qword [rsp], rax;mov rax, qword [var_28h];mov qword [var_8h], rax": 4,
                "mov byte [rax + rcx + ], dl;shr rbx, 7;inc rcx;mov rdx, rbx;cmp rdx, ": 4,
                "cmp rdx, ;jb ;cmp rcx, ;jb ;jmp ": 4,
                "jb ;jmp ;cmp rcx, ;jae ;mov byte [rax + rcx + ], dl": 4,
                "jne ;mov rax, qword [arg_58h];test byte [rax], al;mov qword [rsp], rax;call fcn.0040b600": 4,
                "ja ;mov rsi, qword [arg_60h];xor edi, edi;jmp ;mov r8, qword [rsi + rdi*8]": 4,
                "inc rdi;cmp rdi, rbx;jl ;mov qword [var_40h], rax;and rcx, ": 3,
                "mov qword [var_8h], rax;call fcn.004042d0;mov rax, qword [arg_58h];mov qword [rsp], rax;call fcn.0040b7f0": 3,
                "mov dword [arg_78h], eax;mov rbp, qword [var_48h];add rsp, ;ret;mov dword [arg_78h], eax": 3,
                "call fcn.00418df0;mov rax, qword [var_10h];test rax, rax;je ;mov rcx, qword [arg_30h]": 4,
                "test byte [rax], al;mov rdx, qword [rcx + 8];cmp rdx, ;jae ;sub rsp, 8": 1,
                "jae ;sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp];mov rax, qword [arg_10h]": 3,
                "lea rax, [rax + rdx];lea rax, [rax + 8];mov qword [arg_40h], rax;mov rbp, qword [var_20h];add rsp, ": 3,
                "mov qword [var_28h], rax;mov byte [rsp], 5;mov qword [var_8h], ;lea rax, [var_28h];mov qword [var_10h], rax": 4,
                "mov qword [var_18h], 1;mov qword [var_20h], 1;call fcn.0044a760;mov rbp, qword [var_30h];add rsp, ": 9,
                "mov qword [var_20h], 1;call fcn.0044a760;mov rbp, qword [var_30h];add rsp, ;ret": 9,
                "mov rax, qword [rax];mov rax, qword [rax + ];mov rax, qword [rax + ];test byte [rax], al;cmp byte [rax + ], 0": 17,
                "call fcn.00456090;jmp fcn.0044b600;int3;int3;int3": 5,
                "mov byte [rsp], ;mov qword [var_8h], 1;mov qword [var_10h], 0;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [var_10h], 0;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "lea rcx, [var_28h];mov qword [var_10h], rcx;mov qword [var_18h], 2;mov qword [var_20h], 2;call fcn.0044a760": 5,
                "lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], 1;mov qword [var_18h], 1": 6,
                "mov rcx, qword [arg_48h];mov rcx, qword [rcx + ];mov qword [var_28h], rcx;mov qword [var_30h], rax;mov byte [rsp], ": 6,
                "call fcn.0044a760;mov rbp, qword [var_38h];add rsp, ;ret;call fcn.00456090": 6,
                "call fcn.0044a760;jmp ;call fcn.0042e8e0;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "jmp fcn.0044b940;int3;int3;int3;int3": 4,
                "mov qword [var_28h], rbp;lea rbp, [var_28h];movzx eax, byte [arg_38h];test al, ;jne ": 5,
                "xorps xmm0, xmm0;movups xmmword [var_18h], xmm0;call fcn.0044a760;movzx eax, byte [arg_38h];jmp ": 4,
                "mov rax, qword [rcx + ];mov qword [var_28h], rax;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "call fcn.0044a760;mov rbp, qword [var_40h];add rsp, ;ret;call fcn.00456090": 4,
                "jbe ;sub rsp, ;mov qword [var_30h], rbp;lea rbp, [var_30h];cmp qword [], ": 5,
                "jne ;mov rax, qword [];mov qword [var_28h], rax;mov byte [rsp], ;mov qword [var_8h], ": 5,
                "call fcn.0044a760;mov rbp, qword [var_30h];add rsp, ;ret;mov rcx, qword gs:[]": 1,
                "call fcn.00458bc5;mov rbp, qword [rbp];mov rax, qword [arg_b8h];mov rax, qword [rax + ];jmp ": 5,
                "mov qword [var_58h], rax;mov rbx, qword [var_48h];cmp dword [rbx], 0;jne ;xor edx, edx": 4,
                "test dl, dl;cmovne esi, edx;mov rdx, qword [arg_2d8h];cmp rdx, ;jne ": 4,
                "mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458bc5;mov rbp, qword [rbp];mov qword [var_280h], r8": 3,
                "mov rbp, qword [rbp];mov qword [var_280h], r8;mov qword [var_298h], rdx;mov r9, qword [rbx + ];mov r10, qword [rbx + ]": 3,
                "xor edi, edi;mov r12, qword [rbx + ];jmp ;mov r12, qword [r12 + ];test r12, r12": 3,
                "test rax, rax;mov qword [var_248h], rbx;jne ;mov rcx, qword [arg_300h];test rcx, rcx": 2,
                "test rsi, rsi;jne ;test rax, rax;je ;dec r9": 2,
                "test rax, rax;je ;dec r9;movzx r12d, byte [r12 + ];cmp r12b, 9": 2,
                "dec r9;movzx r12d, byte [r12 + ];cmp r12b, 9;test r15, r15;je ": 2,
                "mov qword [rsp + ], r13;mov r13, qword [rsp + ];mov qword [rsp + ], r13;mov qword [rsp + ], 0;mov r13, qword [rsp + ]": 1,
                "mov r15, qword [rsp + ];mov rax, r13;mov rcx, r15;mov rdx, rdi;mov edi, r12d": 1,
                "je ;mov qword [var_78h], rdx;mov qword [var_268h], rbx;mov qword [var_60h], r11;mov qword [arg_2f8h], rsi": 1,
                "mov qword [var_78h], rdx;mov qword [var_268h], rbx;mov qword [var_60h], r11;mov qword [arg_2f8h], rsi;mov byte [var_3bh], r10b": 1,
                "cmp qword [var_2a0h], 0;je ;mov r14, qword [rax + ];test r14, r14;je ": 1,
                "test rbx, rbx;je ;mov rax, qword [arg_2f0h];mov rcx, qword [rax + ];mov qword [var_d8h], rcx": 1,
                "mov qword [var_d8h], rcx;mov rdx, qword [rbx + 8];mov qword [var_d0h], rdx;mov rbx, qword [rbx + ];mov qword [var_c8h], rbx": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;call fcn.004312e0;mov rax, qword [var_d8h]": 1,
                "lea rbp, [var_38h];mov rax, qword [arg_50h];mov ecx, dword [rax + ];movsxd rdx, ecx;movzx ebx, byte [arg_60h]": 1,
                "movsxd rdx, ecx;movzx ebx, byte [arg_60h];test bl, bl;je ;cmp ecx, ": 1,
                "ret;mov qword [var_28h], rdx;mov qword [rsp], rax;mov rcx, qword [arg_58h];mov qword [var_8h], rcx": 1,
                "test rax, rax;je ;xor ecx, ecx;mov rdx, qword [arg_50h];mov rbx, qword [rdx]": 1,
                "movsxd rbx, ebx;test cl, cl;je ;mov rax, rdx;mov rcx, rbx": 1,
                "mov rcx, rbx;jmp ;mov rbx, qword [rax + ];and rbx, ;jmp ": 1,
                "ud2;call fcn.00456090;jmp fcn.0044df20;int3;int3": 1,
                "lea rax, [rsp - ];cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_278h], rbp": 4,
                "mov rdx, qword [arg_2a8h];mov rsi, qword [var_38h];mov rbx, rax;movzx eax, byte [arg_290h];jmp ": 2,
                "ud2;call fcn.00456090;jmp fcn.0044e100;int3;int3": 2,
                "mov qword [var_28h], rcx;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "mov rbp, qword [var_40h];add rsp, ;ret;mov qword [rsp], rcx;mov qword [var_8h], rax": 3,
                "call fcn.0044e450;jmp ;mov qword [var_38h], rax;mov qword [var_30h], rcx;mov qword [rsp], rcx": 2,
                "mov rcx, qword [var_30h];jmp ;call fcn.00456090;jmp fcn.0044e370;int3": 2,
                "mov qword [var_8h], rcx;call fcn.00447e30;mov rax, qword [var_18h];mov qword [var_48h], rax;mov rcx, qword [var_10h]": 3,
                "call fcn.00448170;mov rax, qword [var_20h];mov qword [var_30h], rax;mov rcx, qword [var_18h];mov qword [var_50h], rcx": 3,
                "mov rcx, qword [var_18h];mov qword [var_50h], rcx;movsxd rdx, dword [var_28h];mov qword [var_40h], rdx;call fcn.00430940": 3,
                "mov rax, qword [arg_50h];mov qword [var_18h], rax;mov qword [var_20h], 0;call fcn.0044e750;mov rbp, qword [var_28h]": 3,
                "je ;mov rax, qword [arg_1c0h];mov rcx, qword [rax + ];test rcx, rcx;je ": 5,
                "jne ;mov rcx, qword [rax + ];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "btr ecx, ;cmp ecx, 3;jne ;mov rcx, qword [rax + ];mov rdx, qword [rax + ]": 4,
                "mov qword [var_30h], ;movups xmmword [var_38h], xmm0;mov qword [var_48h], rbx;call fcn.0044c1e0;mov rax, qword [var_50h]": 4,
                "call fcn.0044c1e0;mov rax, qword [var_50h];test rax, rax;jne ;mov rcx, qword [arg_1c8h]": 4,
                "test rax, rax;jle ;mov qword [var_60h], rax;xor edx, edx;jmp ": 4,
                "mov rcx, rbx;mov rdx, rax;mov qword [var_168h], rcx;mov qword [var_58h], rdx;mov rax, qword [rcx]": 4,
                "mov rax, qword [rcx];mov qword [var_170h], rax;movups xmm0, xmmword [rcx + 8];movups xmmword [var_178h], xmm0;movups xmm0, xmmword [rcx + ]": 4,
                "mov rbx, qword [var_28h];lea rdx, [rbx + 1];mov rax, qword [var_50h];mov rcx, qword [var_30h];cmp rdx, rcx": 3,
                "cmp byte [var_18h], 0;je ;mov rax, qword [var_40h];mov qword [rsp], rax;mov rax, qword [var_48h]": 3,
                "je ;mov rax, qword [var_40h];mov qword [rsp], rax;mov rax, qword [var_48h];mov qword [var_8h], rax": 2,
                "jne ;mov rbp, qword [var_58h];add rsp, ;ret;mov qword [rsp], rcx": 2,
                "mov word [var_10h], 0;mov byte [var_12h], 0;call fcn.0044f240;movzx edx, byte [var_18h];mov rax, qword [var_48h]": 2,
                "call fcn.0044f240;movzx edx, byte [var_18h];mov rax, qword [var_48h];mov rcx, qword [var_40h];mov rcx, qword gs:[]": 1,
                "mov rax, qword [var_48h];mov rcx, qword [var_40h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 2,
                "mov rbx, qword [arg_80h];mov qword [var_8h], rbx;mov rbx, qword [arg_88h];mov qword [var_10h], rbx;call fcn.00448170": 2,
                "mov qword [var_58h], rcx;movsxd rdx, dword [var_28h];mov qword [var_48h], rdx;mov rbx, qword [var_30h];cmp rbx, ": 2,
                "mov rbx, qword [var_30h];cmp rbx, ;jne ;movabs rsi, ;mov rdi, qword [var_50h]": 2,
                "jne ;cmp word [rdi + ], ;jne ;cmp byte [rdi + ], ;jne ": 2,
                "call fcn.004309d0;call fcn.00430940;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 1": 5,
                "call fcn.004312e0;mov rax, qword [var_58h];mov qword [rsp], rax;mov rax, qword [var_38h];mov qword [var_8h], rax": 2,
                "mov rsi, qword [var_30h];jmp ;mov rbx, rdi;mov rsi, qword [var_30h];jmp ": 6,
                "mov rcx, qword [arg_78h];mov qword [rsp], rcx;mov rdx, qword [arg_80h];mov qword [var_8h], rdx;mov dword [var_10h], eax": 1,
                "mov rax, qword [var_8h];mov qword [arg_88h], rax;mov rbp, qword [var_58h];add rsp, ;ret": 2,
                "cmp qword [rax + ], rcx;jne ;mov eax, 1;test al, al;jne ": 3,
                "test al, al;jne ;mov rax, qword [arg_30h];mov qword [rsp], rax;mov rax, qword [arg_38h]": 3,
                "jne ;mov rax, qword [arg_30h];mov qword [rsp], rax;mov rax, qword [arg_38h];mov qword [var_8h], rax": 6,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov rax, qword gs:[];mov rax, qword [rax];mov ecx, dword []": 4,
                "je ;movzx ecx, byte [arg_59h];cmp cl, ;jne ;movzx ecx, byte [arg_5ah]": 4,
                "je ;mov qword [var_28h], rax;mov qword [var_30h], rcx;mov qword [rsp], rcx;mov qword [var_8h], rax": 4,
                "jb ;cmp al, ;setbe al;mov byte [arg_60h], al;mov rbp, qword [var_38h]": 4,
                "movzx ecx, byte [var_18h];mov rax, qword [var_28h];jmp ;xor eax, eax;jmp ": 4,
                "mov byte [arg_60h], 1;mov rbp, qword [var_38h];add rsp, ;ret;mov byte [arg_60h], 0": 4,
                "mov byte [arg_60h], 0;mov rbp, qword [var_38h];add rsp, ;ret;cmp cl, 9": 4,
                "cmp cl, ;sete cl;jmp ;mov byte [arg_60h], 0;mov rbp, qword [var_38h]": 4,
                "jmp ;mov byte [arg_60h], 0;mov rbp, qword [var_38h];add rsp, ;ret": 4,
                "mov byte [arg_60h], 1;mov rbp, qword [var_38h];add rsp, ;ret;call fcn.00456090": 3,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov rax, qword [arg_48h];mov ecx, dword [rax + ];mov edx, ecx": 4,
                "cmp rbx, 9;jae ;shl rbx, 4;lea rsi, [];mov rdi, qword [rbx + rsi]": 4,
                "cmp rax, 1;jge ;mov rax, qword [arg_48h];cmp qword [rax + ], 0;jne ": 3,
                "mov rbx, rdi;jmp ;mov ebx, 3;lea rdi, [];jmp ": 1,
                "call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.0044f450;int3": 1,
                "ud2;call fcn.00456090;jmp fcn.0044f450;int3;int3": 1,
                "mov qword [var_30h], rax;mov rcx, qword [];mov qword [var_50h], rcx;mov rdx, qword [arg_68h];mov rbx, qword [var_48h]": 2,
                "call fcn.004309d0;mov rax, qword [var_40h];mov qword [rsp], rax;call fcn.0044e370;mov rax, qword [var_30h]": 2,
                "mov qword [rsp], rax;call fcn.0044e370;mov rax, qword [var_30h];mov rcx, qword [var_50h];mov rdx, qword [arg_68h]": 2,
                "mov rax, qword [var_30h];mov rcx, qword [var_50h];mov rdx, qword [arg_68h];mov rbx, qword [var_48h];mov rsi, qword [var_28h]": 2,
                "mov eax, dword [var_24h];cmp eax, 2;setl cl;mov rax, qword [var_30h];mov rdx, qword [arg_68h]": 1,
                "cmp r9d, 6;sete r8b;jmp ;lea rax, [];mov qword [rsp], rax": 1,
                "mov qword [var_8h], ;mov qword [var_10h], 0;mov rax, qword [var_38h];mov qword [var_18h], rax;call fcn.0044e620": 1,
                "lea rbp, [var_50h];mov rax, qword [arg_70h];mov rcx, qword [rax + ];mov rdx, qword [rax + ];test rdx, rdx": 2,
                "mov qword [var_30h], rbx;mov qword [var_18h], rdx;je ;cmp rbx, rcx;jbe ": 2,
                "mov qword [var_28h], rbx;call fcn.00430940;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 2,
                "mov qword [var_48h], 0;lea rax, [];mov qword [var_38h], rax;mov rax, qword [arg_70h];mov qword [var_40h], rax": 2,
                "mov rax, qword [var_18h];add rax, ;mov rcx, qword [var_20h];lea rdx, [rcx - ];cmp rax, rdx": 2,
                "lea rbp, [var_20h];mov rax, qword [arg_30h];mov rax, qword [rax + ];mov qword [rsp], rax;call fcn.004476f0": 2,
                "add rsp, ;ret;mov byte [arg_40h], 0;mov rbp, qword [var_20h];add rsp, ": 7,
                "mov qword [var_30h], 0;xorps xmm0, xmm0;movups xmmword [var_38h], xmm0;movups xmmword [var_48h], xmm0;movups xmmword [var_58h], xmm0": 3,
                "mov rax, qword [arg_78h];xor ecx, ecx;jmp ;mov qword [var_28h], rcx;mov qword [rsp], rdx": 3,
                "call fcn.0044fe40;mov rax, qword [var_28h];lea rcx, [rax + 1];mov rax, qword [arg_78h];cmp rcx, ": 3,
                "mov rax, qword [arg_78h];cmp rcx, ;jge ;test byte [rax], al;mov rdx, qword [rax + rcx*8]": 6,
                "lea rax, [var_30h];mov qword [rsp], rax;call fcn.00450090;mov rbp, qword [var_68h];add rsp, ": 3,
                "xor ecx, ecx;jmp ;mov qword [var_28h], rcx;mov qword [var_20h], rdx;call fcn.00430940": 3,
                "jg ;mov qword [var_10h], rdx;mov qword [rsp], rcx;call fcn.00450090;mov rax, qword [arg_80h]": 3,
                "mov rcx, qword [rax + ];test rcx, rcx;je ;mov qword [var_38h], rcx;mov qword [rsp], rcx": 3,
                "mov rax, qword [var_8h];mov qword [var_20h], rax;xorps xmm0, xmm0;movups xmmword [var_40h], xmm0;mov rcx, qword [var_38h]": 3,
                "mov qword [var_58h], rax;mov rcx, qword [arg_80h];mov rdx, qword [rcx + ];mov qword [var_18h], rdx;mov rbx, qword [var_50h]": 3,
                "mov rdx, qword [rcx + ];mov qword [var_18h], rdx;mov rbx, qword [var_50h];mov qword [var_30h], rbx;call fcn.00430940": 3,
                "mov qword [rsp], rax;call fcn.00431010;call fcn.00430ba0;call fcn.004309d0;jmp ": 3,
                "jbe ;xorps xmm0, xmm0;movups xmmword [var_18h], xmm0;movups xmmword [var_28h], xmm0;mov rbx, qword [arg_48h]": 3,
                "mov rbx, qword [arg_48h];mov qword [var_18h], rbx;mov rbx, qword [arg_50h];mov qword [var_28h], rbx;mov qword [var_30h], rcx": 3,
                "mov rax, qword [arg_28h];mov ecx, dword [rax + ];mov qword [rsp], rax;mov dword [var_8h], ecx;call fcn.00450540": 4,
                "mov rax, qword [var_10h];mov rcx, qword [var_8h];mov rdx, qword [arg_28h];movzx edx, byte [rdx + ];test dl, 2": 4,
                "sub rsp, ;mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword [rsp + ];movzx ecx, byte [rax + ]": 15,
                "mov qword [arg_38h], rax;mov rbp, qword [var_18h];add rsp, ;ret;xorps xmm0, xmm0": 8,
                "ret;xorps xmm0, xmm0;movups xmmword [arg_30h], xmm0;mov rbp, qword [var_18h];add rsp, ": 9,
                "add rsp, ;ret;mov rax, qword [rax + ];mov qword [rsp], rax;call fcn.00450f40": 3,
                "mov rdx, qword [rdx + ];mov rax, qword [arg_8h];movzx ecx, byte [rax + ];test cl, 1;je ": 1,
                "jmp ;mov rdx, qword [rdx + ];test rdx, rdx;je ;mov rbx, qword [rdx + ]": 3,
                "cmp rcx, rsi;jae ;movsxd rcx, eax;add rcx, rbx;cmp rcx, rsi": 3,
                "mov byte [var_2fh], cl;cmp cl, 0;lea rdx, [];mov qword [rsp], rdx;call fcn.0040b7f0": 3,
                "jne ;call fcn.00430940;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 6,
                "mov qword [var_8h], ;call fcn.004312e0;mov eax, dword [arg_70h];movsxd rax, eax;mov qword [rsp], rax": 5,
                "mov rax, qword [var_48h];mov qword [arg_78h], rax;mov rbp, qword [var_58h];add rsp, ;ret": 2,
                "add rsp, ;ret;mov qword [arg_78h], 0;mov rbp, qword [var_58h];add rsp, ": 2,
                "mov qword [var_8h], 3;call fcn.004312e0;mov rax, qword [var_38h];mov qword [rsp], rax;call fcn.00431180": 2,
                "call fcn.0042ff30;ud2;call fcn.00456090;jmp fcn.00450540;int3": 2,
                "jmp fcn.00450540;int3;int3;int3;int3": 2,
                "jmp ;mov rdx, qword [rdx + ];test rdx, rdx;je ;cmp qword [rdx + ], rcx": 3,
                "call fcn.004113b0;mov rax, qword [var_18h];mov rax, qword [rax];test rax, rax;jne ": 3,
                "test rax, rax;jne ;mov rax, qword [var_48h];mov rcx, qword [rax + ];mov edx, dword [arg_68h]": 2,
                "jne ;mov rax, qword [var_48h];mov rcx, qword [rax + ];mov edx, dword [arg_68h];movsxd rbx, edx": 2,
                "mov rcx, qword [rax + ];mov qword [var_30h], rcx;mov rdx, qword [rax + ];mov qword [var_28h], rdx;call fcn.00430940": 2,
                "mov rax, qword [rax + ];test rax, rax;jne ;jmp ;mov qword [arg_70h], rax": 1,
                "mov rax, qword [arg_58h];lea rcx, [];jmp ;mov rcx, qword [rcx + ];test rcx, rcx": 2,
                "mov r9, qword [rax + rdi*8 + 8];movsxd r10, ebx;cmp r10, r8;jb ;add r9, r8": 2,
                "jmp ;mov qword [var_30h], rdx;mov rax, qword [rcx + ];mov qword [var_28h], rax;call fcn.00430940": 1,
                "mov qword [arg_10h], 0;ret;movzx ecx, word [rax + 1];rol cx, 8;movzx ecx, cx": 3,
                "int3;int3;int3;xorps xmm0, xmm0;movups xmmword [arg_10h], xmm0": 2,
                "jne ;movups xmmword [arg_10h], xmm0;ret;add rax, 3;mov qword [arg_10h], rax": 3,
                "movups xmmword [arg_38h], xmm0;mov rbp, qword [var_20h];add rsp, ;ret;movzx ecx, word [rax + 1]": 4,
                "rol ax, 8;movzx eax, ax;lea rcx, [rax + 3];mov rdx, qword [var_8h];test rdx, rdx": 7,
                "mov eax, dword [rax + rcx];mov dword [var_1ch], eax;mov qword [rsp], rcx;mov eax, dword [var_1ch];mov dword [var_8h], eax": 7,
                "mov qword [var_8h], rax;lea rax, [var_108h];mov qword [var_10h], rax;call fcn.0040e5a0;mov rax, qword [var_18h]": 5,
                "dec rdx;mov qword [var_78h], rdx;xor ebx, ebx;jmp ;inc rsi": 4,
                "mov r11, qword [var_60h];lea r10, [r11 + 1];mov rax, qword [var_80h];mov rcx, qword [var_d0h];mov rdx, qword [var_78h]": 4,
                "add r11, qword [rsi + ];mov qword [var_90h], r11;mov ecx, dword [r11 + ];lea rdx, [];mov qword [rsp], rdx": 4,
                "mov ecx, dword [r11 + ];lea rdx, [];mov qword [rsp], rdx;mov qword [var_8h], rax;mov dword [var_10h], ecx": 4,
                "cmp dword [], 0;jne ;mov rax, qword [var_c0h];mov qword [rdi], rax;jmp ": 3,
                "mov qword [var_10h], rax;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 4,
                "jmp ;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r12;mov dword [var_10h], r11d": 2,
                "mov r11, qword [rax];mov rax, qword [var_80h];jmp ;cmp qword [rdi + ], 0;je ": 2,
                "mov qword [], rdx;lea rdi, [rbx + rcx*8];cmp dword [], 0;jne ;mov qword [rbx + rcx*8], rax": 1,
                "mov rax, qword [var_c0h];mov rcx, qword [var_58h];cmp rdx, rcx;jge ;mov qword [var_50h], rdx": 1,
                "cmp rax, rcx;je ;movzx edx, byte [rax + ];mov ebx, edx;and edx, ": 1,
                "je ;mov byte [arg_148h], 0;mov rbp, qword [var_120h];add rsp, ;ret": 1,
                "jb ;cmp al, ;jbe ;cmp al, ;ja ": 1,
                "cmp al, ;ja ;cmp al, ;jbe ;cmp al, ": 1,
                "movzx ecx, word [rax + ];mov rdx, qword [arg_130h];cmp word [rdx + ], cx;jne ;movzx ecx, word [rdx + ]": 1,
                "jl ;cmp rcx, ;ja ;movzx edi, byte [rax + ];test dil, 1": 1,
                "movzx r10d, word [var_2eh];mov r11, qword [arg_140h];movzx r12d, word [var_2ch];mov r13, qword [var_f8h];mov r14, qword [var_100h]": 1,
                "mov r11, qword [arg_140h];movzx r12d, word [var_2ch];mov r13, qword [var_f8h];mov r14, qword [var_100h];mov rax, qword [arg_138h]": 1,
                "add rax, rdi;mov qword [var_80h], rax;xor edx, edx;jmp ;mov rdi, qword [var_50h]": 1,
                "xor edx, edx;jmp ;mov rdi, qword [var_50h];lea rdx, [rdi + 1];mov rdi, qword [var_38h]": 1,
                "mov rcx, qword [rax + rdx*8];mov qword [rsp], rdi;mov qword [var_8h], rcx;mov qword [var_10h], r8;call fcn.004517d0": 1,
                "jmp ;mov esi, ;jmp ;mov byte [arg_148h], 0;sub rsp, 8": 1,
                "shl esi, 6;and ecx, ;or esi, ecx;cmp esi, ;jg ": 1,
                "and ecx, ;or esi, ecx;cmp esi, ;jg ;mov dword [arg_28h], ": 1,
                "mov dword [arg_28h], esi;add rax, 2;mov qword [arg_30h], rax;mov rbp, qword [rsp];add rsp, 8": 1,
                "cmp dl, ;jb ;cmp dl, ;setbe dil;test dil, dil": 2,
                "cmp cl, ;setbe bl;test bl, bl;je ;and esi, ": 1,
                "mov qword [arg_30h], rax;mov rbp, qword [rsp];add rsp, 8;ret;xor ecx, ecx": 1,
                "setbe r8b;test r8b, r8b;je ;movzx ecx, byte [rbx + rcx + 3];cmp cl, ": 1,
                "je ;movzx ecx, byte [rbx + rcx + 3];cmp cl, ;jb ;cmp cl, ": 1,
                "mov eax, ;mov rcx, qword [arg_18h];cmp rcx, 2;jbe ;mov ecx, eax": 5,
                "sar eax, 6;and eax, ;or eax, ;mov byte [rdx + 2], al;and ecx, ": 5,
                "mov qword [rsp + ], rcx;mov qword [rsp + ], rax;call fcn.00430940;lea rax, [];mov qword [rsp], rax": 2,
                "mov qword [rsp + 8], ;call fcn.0042ff30;ud2;call fcn.00455ff0;jmp ": 2,
                "jne ;mov rdi, qword [rsp + ];mov qword [rdi + 8], ;cmp dword [], 0;jne ": 2,
                "mov qword [rsp + 8], rcx;mov byte [rsp + ], 3;call fcn.004484c0;mov eax, dword [rsp + ];cmp eax, ": 1,
                "call fcn.004580f0;jmp ;cmp rcx, 0;je ;mov rbp, qword [rsp + ]": 1,
                "mov rax, qword [rsp + ];mov qword [rsp + 8], rax;mov dword [rsp + ], 2;mov qword [rsp + ], rcx;mov qword [rsp + ], 0": 1,
                "mov rax, qword [];cmp dword [], 0;jne ;mov qword [], rax;mov rax, qword []": 4,
                "mov rbx, rsi;sub rsp, ;and rsp, ;mov qword [var_10h], rax;mov qword [var_18h], rbx": 1,
                "mov qword [rdi + ], rbx;mov qword [rdi + ], rbx;mov qword [rdi], rbx;mov qword [rdi + 8], rsp;mov eax, 0": 1,
                "lea rax, [];mov qword [rax], rcx;mov qword [rcx + ], rax;cld;call fcn.0043d970": 1,
                "mov rcx, qword gs:[];mov qword [rcx], rdx;mov rsp, qword [rbx];mov rax, qword [rbx + ];mov rdx, qword [rbx + ]": 3,
                "mov rsp, qword [rbx];mov rax, qword [rbx + ];mov rdx, qword [rbx + ];mov rbp, qword [rbx + ];mov qword [rbx], 0": 3,
                "cmp rax, rdx;je ;cmp rax, qword [rbx + ];jne ;lea rsi, []": 5,
                "mov qword [rax + ], rsp;mov qword [rax + ], rax;mov qword [rax + ], rbp;mov qword [rcx], rdx;mov rbx, qword [rdx + ]": 5,
                "ret;mov rdx, rdi;mov rdi, qword [rdi];jmp rdi;lea rax, []": 5,
                "call rax;int 3;int3;int3;int3": 5,
                "int3;mov rcx, qword gs:[];mov rbx, qword [rcx];mov rbx, qword [rbx + ];mov rsi, qword [rbx]": 5,
                "call fcn.004326a0;call fcn.00457a20;mov rsi, qword [rbx + ];cmp qword [rcx], rsi;jne ": 6,
                "mov rsi, qword [rbx + ];cmp qword [rcx], rsi;jne ;call fcn.004326e0;call fcn.00457a20": 6,
                "jne ;call fcn.004326e0;call fcn.00457a20;mov rax, qword [rsp + 8];mov qword [rbx + ], rax": 6,
                "int3;mov ecx, dword [arg_20h];cmp rcx, ;ja ;lea rax, []": 6,
                "ret;call fcn.00456090;jmp ;lea rdi, [rsp + ];cmp qword [rbx], rdi": 15,
                "sub eax, 1;jne ;ret;int3;int3": 1,
                "mov qword [r8 + ], rbp;mov r9, qword [r8 + ];test r9, r9;je ;call fcn.00432720": 4,
                "test r9, r9;je ;call fcn.00432720;ret;int3": 4,
                "mov rdi, rbx;mov rcx, rbx;call rax;mov rcx, qword gs:[];mov rdi, qword [var_30h]": 5,
                "mov rdi, rbx;mov rcx, rbx;call rax;mov rsi, qword [var_28h];mov rsp, rsi": 5,
                "mov rax, qword [arg_40h];mov qword [var_10h], rax;mov rax, qword [arg_48h];mov qword [var_18h], rax;lea rax, []": 6,
                "mov rbx, qword [rdi - 8];mov qword [rsi + ], rbx;mov qword [rsi + ], rdi;mov rbx, qword [rcx];mov rbx, qword [rbx + ]": 6,
                "int3;mov rbx, qword [arg_8h];cmp rbx, 0;jne ;mov qword gs:[], 0": 6,
                "jne ;mov qword gs:[], 0;ret;mov rax, qword [rbx + ];lea rax, [rax + ]": 7,
                "mov rax, qword [rbx + ];lea rax, [rax + ];mov qword gs:[], rax;mov rcx, qword gs:[];mov qword [rcx], rbx": 7,
                "int3;int3;int3;cmp byte [], 1;jne ": 7,
                "int3;int3;mov rax, qword [rsp + 8];mov rcx, qword [rax + 8];mov rax, qword [rax]": 24,
                "add rcx, rcx;lea rax, [];pand xmm1, xmmword [rax + rcx*8];pxor xmm1, xmm0;aesenc xmm1, xmm1": 6,
                "ret;movdqu xmm1, xmmword [rax + rcx - ];add rcx, rcx;lea rax, [];pshufb xmm1, xmmword [rax + rcx*8]": 6,
                "pxor xmm1, xmmword [];aesenc xmm1, xmm1;movdqu xmm2, xmmword [rax];movdqu xmm3, xmmword [rax + rcx - ];pxor xmm2, xmm0": 6,
                "movdqu xmm4, xmmword [rax];movdqu xmm5, xmmword [rax + ];movdqu xmm6, xmmword [rax + rcx - ];movdqu xmm7, xmmword [rax + rcx - ];pxor xmm4, xmm0": 5,
                "aesenc xmm6, xmm6;aesenc xmm7, xmm7;aesenc xmm4, xmm4;aesenc xmm5, xmm5;aesenc xmm6, xmm6": 10,
                "movdqa xmm2, xmm1;movdqa xmm3, xmm1;movdqa xmm4, xmm1;movdqa xmm5, xmm1;movdqa xmm6, xmm1": 9,
                "aesenc xmm13, xmm13;aesenc xmm14, xmm14;aesenc xmm15, xmm15;aesenc xmm8, xmm8;aesenc xmm9, xmm9": 10,
                "aesenc xmm13, xmm13;aesenc xmm14, xmm14;aesenc xmm15, xmm15;pxor xmm8, xmm12;pxor xmm9, xmm13": 4,
                "movdqu xmm4, xmmword [rax + ];movdqu xmm5, xmmword [rax + ];movdqu xmm6, xmmword [rax + ];movdqu xmm7, xmmword [rax + ];aesenc xmm12, xmm4": 1,
                "mov qword [var_78h], rbp;lea rbp, [var_78h];mov qword [var_68h], r14;mov qword [var_70h], r13;mov r13, qword gs:[]": 4,
                "mov qword [var_10h], rbx;mov qword [var_18h], rcx;mov qword [var_20h], rdx;mov qword [var_28h], rsi;mov qword [var_30h], rbp": 4,
                "jmp ;lea rax, [];mov qword [rsp], rax;mov qword [rsp + 8], ;mov rax, 8": 4,
                "mov r15, qword [rsp + ];mov rbp, qword [rsp + ];add rsp, ;ret;int3": 6,
                "jmp ;int3;int3;sub rsp, ;mov qword [var_10h], rbp": 1,
                "mov qword [var_8h], rax;mov rax, 2;int3;mov rbp, qword [rsp + ];add rsp, ": 1,
                "add rsi, ;movups xmmword [rdi], xmm0;movups xmmword [rdi], xmm0;movups xmmword [rdi + ], xmm0;movups xmmword [rdi + ], xmm0": 3,
                "movups xmmword [rdi], xmm0;add rdi, ;movups xmm0, xmmword [rsi];movups xmmword [rdi], xmm0;movups xmmword [rdi + ], xmm0": 2,
                "movups xmm0, xmmword [rsi];add rsi, ;movups xmmword [rdi + ], xmm0;lea rdi, [rdi + ];movups xmmword [rdi], xmm0": 1,
                "sub rbx, ;add rdi, ;cmp rbx, ;jae ;jmp ": 18,
                "vpxor ymm0, ymm0, ymm0;cmp rbx, ;jae ;vmovdqu ymmword [rdi], ymm0;vmovdqu ymmword [rdi + ], ymm0": 18,
                "vmovdqu ymmword [rdi + rbx - ], ymm0;vzeroupper;ret;vmovdqu ymmword [rdi], ymm0;mov rsi, rdi": 17,
                "vmovntdq ymmword [rdi + ], ymm0;sub rbx, ;add rdi, ;cmp rbx, ;jae ": 16,
                "ret;mov qword [rdi], rax;ret;mov qword [rdi], rax;mov qword [rdi + rbx - 8], rax": 16,
                "movdqu xmmword [rdi + ], xmm0;movdqu xmmword [rdi + ], xmm0;movdqu xmmword [rdi + rbx - ], xmm0;movups xmm0, xmmword [rsi];add rsi, ": 1,
                "movdqu xmmword [rdi + rbx - ], xmm0;movdqu xmmword [rdi + rbx - ], xmm0;movdqu xmmword [rdi + rbx - ], xmm0;movdqu xmmword [rdi + rbx - ], xmm0;movdqu xmmword [rdi + rbx - ], xmm0": 52,
                "test rbx, rbx;movups xmm0, xmmword [rsi];add rsi, ;movups xmmword [rdi], xmm0;add rdi, ": 1,
                "mov rdi, qword [arg_8h];mov rsi, qword [arg_10h];mov rbx, qword [arg_18h];test rbx, rbx;je ": 11,
                "jne ;cmp rsi, rdi;jbe ;cmp rbx, ;jbe ": 9,
                "jne ;mov eax, esi;or eax, edi;test eax, 7;je ": 8,
                "mov eax, esi;or eax, edi;test eax, 7;je ;mov rcx, rbx": 8,
                "mov byte [rdi + 2], cl;ret;mov eax, dword [rsi];mov ecx, dword [rsi + rbx - 4];mov dword [rdi], eax": 2,
                "mov qword [rdi], rax;ret;mov rax, qword [rsi];mov rcx, qword [rsi + rbx - 8];mov qword [rdi], rax": 2,
                "mov rax, qword [rsi];mov rcx, qword [rsi + rbx - 8];mov qword [rdi], rax;mov qword [rdi + rbx - 8], rcx;ret": 2,
                "movdqu xmm1, xmmword [rsi + ];movdqu xmm2, xmmword [rsi + rbx - ];movdqu xmm3, xmmword [rsi + rbx - ];movdqu xmmword [rdi], xmm0;movdqu xmmword [rdi + ], xmm1": 2,
                "movdqu xmm0, xmmword [rsi];movdqu xmm1, xmmword [rsi + ];movdqu xmm2, xmmword [rsi + ];movdqu xmm3, xmmword [rsi + ];movdqu xmm4, xmmword [rsi + rbx - ]": 2,
                "movdqu xmmword [rdi], xmm0;movdqu xmmword [rdi + ], xmm1;movdqu xmmword [rdi + ], xmm2;movdqu xmmword [rdi + ], xmm3;movdqu xmmword [rdi + rbx - ], xmm4": 1,
                "ret;sub rbx, ;movdqu xmm0, xmmword [rsi];movdqu xmm1, xmmword [rsi + ];movdqu xmm2, xmmword [rsi + ]": 1,
                "movdqu xmm10, xmmword [rcx - ];sub rbx, r11;movdqu xmm11, xmmword [rcx - ];movdqu xmm12, xmmword [rcx - ];vmovdqu ymm4, ymmword [rsi]": 1,
                "vmovdqa ymmword [rdi], ymm0;vmovdqa ymmword [rdi + ], ymm1;vmovdqa ymmword [rdi + ], ymm2;vmovdqa ymmword [rdi + ], ymm3;add rdi, rax": 1,
                "mov qword [rsp], rcx;lea rdx, [];mov qword [var_8h], rdx;lea r8d, [];mov qword [var_10h], r8": 1,
                "sub rsp, ;mov qword [rsp + ], rdi;mov qword [rsp + ], rsi;mov qword [rsp + ], rbp;mov qword [rsp + ], rbx": 2,
                "mov qword [rsp + ], r12;mov qword [rsp + ], r13;mov qword [rsp + ], r14;mov qword [rsp + ], r15;mov r15, rax": 2,
                "mov qword [rsp + 8], rcx;mov qword [rsp + ], rdx;call r15;mov eax, dword [rsp + ];mov rsp, qword [rsp + ]": 2,
                "mov rbx, qword [rsp + ];mov rbp, qword [rsp + ];mov rsi, qword [rsp + ];mov rdi, qword [rsp + ];add rsp, ": 2,
                "int3;sub rsp, 8;mov qword [rsp + ], rcx;lea rcx, [];mov qword [rsp], rcx": 2,
                "lea rcx, [rsp - ];mov qword [rsp], rcx;add rcx, ;mov qword [var_10h], rcx;mov qword [var_18h], rcx": 3,
                "pop rcx;pop rax;mov rcx, qword gs:[];mov rcx, qword [rcx];mov rsp, qword [rcx + 8]": 3,
                "pop rbp;ret;int3;int3;int3": 3,
                "mov r15, qword gs:[];cmp r15, 0;jne ;call rax;ret": 5,
                "mov rax, rsp;and rsp, ;mov qword [rsp + ], rax;mov rax, qword gs:[];mov eax, dword [rax + ]": 1,
                "mov rax, qword [];call rax;push rbp;mov rbp, rsp;push rbx": 1,
                "sub rsp, ;mov qword [rsp + ], rax;mov rax, qword [];call rax;mov rsp, qword [rsp + ]": 3,
                "mov ebx, dword [rdi];mov ecx, dword [rdi + 8];cmp eax, ecx;jne ;shl rcx, ": 4,
                "cmp eax, ecx;jne ;shl rax, ;or rax, rbx;movabs rdi, ": 5,
                "mov rcx, rax;movabs rax, ;mul rcx;add rdx, rcx;rcr rdx, 1": 5,
                "lea rbp, [rsp + ];mov rbx, qword [rcx + ];test rbx, rbx;jne ;mov rax, qword [rsp + ]": 76,
                "ud2;call fcn.00456090;jmp ;lea rdi, [rsp + ];cmp qword [rbx], rdi": 65,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword [rsp + ];mov qword [rsp], rax;mov qword gs:[], rdi": 1,
                "mov qword [rsp], rax;mov rax, qword [rsp + ];mov qword [rsp + 8], rax;mov qword [rsp + ], ;call fcn.00402ce0": 26,
                "xor ecx, ecx;jmp ;call fcn.00456090;jmp ;int3": 16,
                "mov qword [rsp], rcx;mov qword [rsp + 8], rax;mov qword [rsp + ], ;call fcn.00409930;cmp byte [], 0": 1,
                "mov rdx, qword [rsp + 8];cmp qword [rdx], rcx;jne ;movzx ecx, byte [rax + 8];cmp byte [rdx + 8], cl": 3,
                "mov byte [rsp + ], al;mov rbp, qword [rsp + ];add rsp, ;ret;lea rcx, [rdx + 8]": 1,
                "lea rdx, [rcx + ];mov qword [rsp], rdx;mov qword [rsp + 8], rax;mov qword [rsp + ], 8;call fcn.00409930": 2,
                "mov rax, qword [arg_38h];mov qword [var_8h], rax;mov qword [var_10h], ;call fcn.00402ce0;movzx eax, byte [var_18h]": 4,
                "xor eax, eax;mov rcx, qword [rsp + ];jmp ;mov qword [rsp + ], rax;lea rdx, [rax + rax*4]": 2,
                "mov qword [rsp], rdx;mov qword [rsp + 8], rcx;call fcn.0045b320;mov rcx, qword [rsp + ];mov rax, qword [rsp + ]": 2,
                "mov qword [rsp + 8], rcx;call fcn.0045b320;mov rcx, qword [rsp + ];mov rax, qword [rsp + ];inc rax": 2,
                "jge ;mov qword [rsp + ], rax;lea rcx, [rax + rax*4];mov rdx, qword [rsp + ];lea rbx, [rdx + rcx*8]": 2,
                "mov rbp, qword [var_20h];add rsp, ;ret;call fcn.00456090;jmp fcn.0045b5c0": 3,
                "lea rbp, [var_20h];mov rax, qword [arg_30h];mov qword [rsp], rax;mov rcx, qword [arg_38h];mov rcx, qword gs:[]": 1,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.0045b6d0;int3": 4,
                "mov qword [rsp], rax;mov rcx, qword [arg_30h];mov qword [var_8h], rcx;call fcn.0045b650;cmp byte [var_10h], 0": 4,
                "cmp qword [rcx + ], rax;sete al;mov byte [arg_38h], al;mov rbp, qword [var_18h];add rsp, ": 4,
                "cmp qword [rdx], rcx;jne ;movzx ecx, word [rax + 8];cmp word [rdx + 8], cx;jne ": 4,
                "movzx ecx, word [rax + 8];cmp word [rdx + 8], cx;jne ;movzx ecx, byte [rax + ];mov rcx, qword gs:[]": 1,
                "movzx ecx, byte [rax + ];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rcx, qword [rax + 8];cmp qword [rdx + 8], rcx;jne ;mov rcx, qword [rdx + ];cmp qword [rax + ], rcx": 3,
                "xor eax, eax;mov rcx, qword [arg_38h];jmp ;mov qword [var_18h], rax;lea rdx, [rax + rax*2]": 4,
                "jl ;mov qword [arg_40h], rcx;mov rbp, qword [var_20h];add rsp, ;ret": 4,
                "cmp rsi, rdi;jne ;mov rsi, qword [rcx + rbx*8 + ];mov rbx, qword [rax + rbx*8 + ];cmp rsi, rbx": 6,
                "ret;mov byte [arg_18h], 1;ret;int3;mov rcx, qword gs:[]": 6,
                "mov rcx, qword [rsp + ];add rcx, ;mov qword [rsp], rcx;mov qword [rsp + 8], rax;call fcn.0045bad0": 3,
                "mov qword [rsp + 8], rax;call fcn.0045bb50;movzx eax, byte [rsp + ];jmp ;xor eax, eax": 3,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword [rsp + ];mov qword [rsp], rax;mov rcx, qword gs:[]": 1,
                "call fcn.00456090;jmp fcn.0045be10;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 3,
                "mov qword [rsp], rax;mov qword [rsp + 8], rcx;call fcn.0045be10;mov rcx, qword [rsp + ];mov rax, qword [rsp + ]": 2,
                "mov rcx, qword [rdx + ];mov rbx, qword [rax + ];mov rsi, qword [rdx + ];cmp qword [rax + ], rsi;je ": 2,
                "mov rcx, qword [rax + ];cmp qword [rdx + ], rcx;jne ;mov rax, qword [rax + ];cmp qword [rdx + ], rax": 5,
                "cmp qword [rdx + ], rax;sete al;mov byte [arg_40h], al;mov rbp, qword [var_20h];add rsp, ": 2,
                "mov qword [rsp], rcx;mov qword [rsp + 8], rax;call fcn.004034b0;mov rax, qword [rsp + ];mov qword [rsp + ], rax": 8,
                "mov rdx, qword [rdx + ];cmp qword [rax + ], rbx;je ;xor eax, eax;mov byte [rsp + ], al": 3,
                "add rsp, ;ret;mov qword [rsp], rdx;mov qword [rsp + 8], rcx;mov qword [rsp + ], rbx": 16,
                "call fcn.00456090;jmp fcn.0045cb50;int3;int3;int3": 2,
                "cmp qword [rbx + 8], rdx;je ;xor ecx, ecx;test cl, cl;je ": 3,
                "mov qword [rsp], rcx;mov qword [rsp + 8], rsi;mov qword [rsp + ], rdx;call fcn.00402ce0;movzx ecx, byte [rsp + ]": 3,
                "jmp ;int3;mov rcx, qword gs:[];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [rsp + 8], rax;call fcn.0045d680;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];lea rdx, [rcx + ]": 3,
                "lea rax, [rcx + ];mov qword [rsp + 8], rax;mov qword [rsp + ], ;call fcn.00402ce0;movzx eax, byte [rsp + ]": 3,
                "test rbx, rbx;jne ;cmp qword [rsp + ], 0;je ;mov rax, qword [arg_8h]": 1,
                "cmp qword [rsp + ], 0;je ;mov rax, qword [arg_8h];mov rcx, qword [arg_10h];xor edx, edx": 1,
                "mov rax, qword [rsp + ];mov qword [rsp], rax;mov rax, qword [rsp + ];mov qword [rsp + 8], rax;mov qword [rsp + ], 9": 2,
                "jne ;mov ecx, dword [rdx + ];cmp dword [rax + ], ecx;sete al;mov byte [rsp + ], al": 2,
                "mov rbp, qword [var_20h];add rsp, ;ret;call fcn.00456090;jmp fcn.0045e410": 1,
                "call fcn.00403650;mov rcx, qword [rsp + ];mov rax, qword [rsp + ];inc rax;cmp rax, ": 4,
                "movsd xmm0, qword [rax + rdx*8];movsd xmm1, qword [rcx + rdx*8];ucomisd xmm0, xmm1;jne ;jnp ": 25,
                "mov qword [rsp], rax;call fcn.0040d880;mov rdi, qword [var_8h];mov rax, qword [arg_28h];mov qword [rdi + 8], rax": 1,
                "mov qword [arg_30h], rax;mov qword [arg_38h], rdi;mov rbp, qword [var_10h];add rsp, ;ret": 1,
                "int3;int3;mov rax, qword [arg_8h];mov rcx, qword [rax + 8];mov rax, qword [rax]": 1,
                "movups xmmword [var_48h], xmm0;mov rcx, qword [rax + 8];test rcx, rcx;je ;mov rdx, rcx": 5,
                "mov qword [rsp], rsi;mov qword [var_8h], rcx;lea rcx, [var_58h];mov qword [var_10h], rcx;call fcn.0040ec60": 10,
                "ret;mov rbx, qword [rax + 8];mov rcx, qword [rax];mov rax, rbx;mov edx, 1": 3,
                "jne ;movzx edx, byte [rcx + 8];mov rcx, qword [rcx];mov byte [var_2eh], dl;mov rax, qword [arg_80h]": 5,
                "mov qword [var_58h], rax;mov rbx, qword [arg_88h];mov qword [var_60h], rbx;lea rsi, [];mov qword [rsp], rsi": 5,
                "mov rdx, qword [arg_78h];mov qword [rsp], rdx;call fcn.00460be0;movzx ecx, byte [var_2fh];mov rax, qword [var_30h]": 3,
                "jmp fcn.0045ee90;int3;int3;int3;int3": 3,
                "mov rdx, qword [var_60h];lea rbx, [];cmp qword [var_58h], rbx;jne ;movzx esi, byte [rdx + 8]": 3,
                "mov rcx, qword [arg_b0h];mov qword [var_78h], rcx;mov rdx, qword [arg_b8h];mov qword [var_80h], rdx;lea rbx, []": 3,
                "xor eax, eax;test al, al;jne ;mov rax, qword [arg_a8h];mov qword [rsp], rax": 2,
                "movzx ecx, byte [rcx + 8];mov byte [var_2fh], cl;mov qword [var_88h], rbx;mov byte [var_90h], cl;mov rax, qword [var_88h]": 2,
                "mov byte [var_90h], cl;mov rax, qword [var_88h];mov qword [var_48h], rax;mov rdx, qword [arg_b0h];mov qword [var_78h], rdx": 2,
                "mov rbx, qword [arg_b8h];mov qword [var_80h], rbx;lea rsi, [];mov qword [rsp], rsi;mov qword [var_8h], rax": 2,
                "call fcn.0040ec60;mov rax, qword [var_18h];mov rax, qword [rax];cmp byte [var_20h], 0;je ": 4,
                "mov qword [var_40h], rax;test byte [rax], al;mov qword [rsp], rax;mov rcx, qword [];mov qword [var_8h], rcx": 1,
                "mov qword [rsp], rax;call fcn.00460be0;mov rbp, qword [var_98h];add rsp, ;ret": 1,
                "jne ;mov rax, qword [var_40h];mov qword [rdi], rax;jmp ;mov rax, qword [var_40h]": 9,
                "call fcn.004580f0;jmp ;mov rax, qword [arg_b0h];mov qword [var_78h], rax;mov rcx, qword [arg_b8h]": 1,
                "mov rax, qword [var_38h];mov rcx, qword [rax + 8];mov rax, qword [rax];mov rdx, qword [var_8h];mov qword [var_50h], rdx": 1,
                "mov byte [var_90h], 1;lea rax, [];mov qword [rsp], rax;lea rax, [var_88h];mov qword [var_8h], rax": 1,
                "jmp ;mov rbp, qword [var_98h];add rsp, ;ret;mov qword [rsp], rax": 1,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.0045f6e0;int3": 1,
                "mov rcx, qword [rcx];mov qword [var_98h], rcx;mov byte [var_a0h], bl;mov rax, qword [var_98h];mov rcx, qword [arg_c0h]": 2,
                "lea rax, [var_88h];mov qword [var_10h], rax;call fcn.0040ec60;mov rax, qword [var_18h];mov rax, qword [rax]": 2,
                "cmp rcx, ;jne ;movups xmmword [var_68h], xmm0;mov qword [var_98h], 0;mov byte [var_a0h], 0": 2,
                "mov rax, qword [var_50h];mov qword [arg_e8h], rax;movzx eax, byte [var_37h];mov byte [arg_f0h], al;mov rbp, qword [var_a8h]": 2,
                "jne ;mov rax, qword [var_48h];mov qword [rdi], rax;jmp ;mov rax, qword [var_48h]": 4,
                "mov rdx, qword [arg_b8h];mov rbx, qword [rdx + ];lea rsi, [];mov qword [rsp], rsi;mov qword [var_8h], rbx": 2,
                "cmp byte [var_20h], 0;jne ;movzx eax, byte [var_37h];test al, al;je ": 2,
                "mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h];mov qword [var_60h], rax;mov rcx, qword [arg_d0h]": 2,
                "mov qword [rax + 8], rdx;lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rdi, qword [var_8h]": 2,
                "mov qword [rsp], rax;call fcn.0040d880;mov rdi, qword [var_8h];mov qword [var_40h], rdi;cmp dword [], 0": 2,
                "mov rcx, rbx;jmp ;mov rax, qword [var_40h];call fcn.004580f0;jmp ": 2,
                "call fcn.004580f0;jmp ;lea rdi, [rax + 8];mov rax, qword [arg_d8h];call fcn.004580f0": 2,
                "mov byte [var_a0h], 1;lea rax, [];mov qword [rsp], rax;lea rax, [var_98h];mov qword [var_8h], rax": 1,
                "lea rax, [];mov qword [rsp], rax;lea rax, [var_98h];mov qword [var_8h], rax;call fcn.0040aa50": 6,
                "movups xmmword [var_88h], xmm0;mov qword [rsp], rax;mov rax, qword [arg_d0h];mov qword [var_8h], rax;mov rax, qword [arg_d8h]": 1,
                "mov qword [var_38h], rcx;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rax, qword [var_8h];mov rcx, qword [arg_40h];mov qword [rax], rcx;cmp dword [], 0;jne ": 1,
                "mov qword [arg_58h], rax;mov byte [arg_60h], 1;mov byte [arg_61h], 1;mov rbp, qword [var_28h];add rsp, ": 2,
                "ret;xorps xmm0, xmm0;movups xmmword [arg_50h], xmm0;mov byte [arg_60h], 0;mov byte [arg_61h], 0": 2,
                "add rsp, ;ret;mov qword [rsp], rax;call fcn.004601d0;jmp ": 2,
                "mov qword [rsp], rdx;mov qword [var_8h], rcx;lea rcx, [var_58h];mov qword [var_10h], rcx;call fcn.0040f770": 2,
                "mov byte [rsp + ], 0;mov rcx, qword [rsp + ];lea rdx, [];cmp qword [rsp + ], rdx;jne ": 3,
                "jne ;mov qword [rsp + ], rcx;mov qword [rsp], rax;call fcn.00460be0;xorps xmm0, xmm0": 1,
                "mov rcx, qword [rsp + ];jmp ;mov rcx, qword [rax + ];mov qword [rsp + ], rcx;mov qword [rsp + ], rcx": 1,
                "xor ecx, ecx;jmp ;mov rcx, qword [rax + ];mov qword [rsp + ], rdx;mov qword [rsp + ], rcx": 1,
                "test rdx, rdx;je ;mov rdx, qword [rdx];cmp rcx, rdx;jl ": 2,
                "mov byte [var_28h], 0;mov rcx, qword [rax + ];mov qword [var_20h], rcx;lea rcx, [];mov qword [rsp], rcx": 2,
                "cmp dword [], 0;jne ;mov rax, qword [arg_40h];mov qword [rax + ], 0;mov qword [rax + ], 0": 2,
                "jne ;xorps xmm0, xmm0;movups xmmword [var_40h], xmm0;mov rcx, qword [rax + 8];test rcx, rcx": 2,
                "movups xmmword [var_40h], xmm0;mov rcx, qword [var_48h];lea rdx, [];cmp qword [var_40h], rdx;jne ": 2,
                "mov rcx, qword [var_48h];lea rdx, [];cmp qword [var_40h], rdx;jne ;mov rcx, qword [rcx]": 2,
                "mov rax, qword [var_20h];mov qword [var_50h], rax;mov rax, qword [var_30h];mov qword [var_58h], rax;mov rax, qword [arg_d0h]": 2,
                "ret;call fcn.00456090;jmp fcn.00460630;int3;int3": 2,
                "ret;call fcn.00456090;jmp fcn.00460860;int3;int3": 3,
                "xor ebx, ebx;xor esi, esi;xor edi, edi;jmp ;mov rax, r8": 4,
                "test edx, 4;mov r9d, edx;cmove edx, r8d;lea r8d, [rdx + 8];test r9d, 5": 3,
                "mov edx, dword [rcx];jmp ;test r9d, 5;je ;test rdi, rdi": 3,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;call fcn.0042fee0;mov rcx, qword gs:[]": 1,
                "mov rcx, qword [var_20h];sub rax, rcx;cmp rax, ;setg al;jmp ": 2,
                "mov rdi, qword [var_20h];mov r9d, dword [var_18h];jmp ;test sil, sil;je ": 2,
                "jmp ;test sil, sil;je ;xor edx, edx;mov byte [var_12h], dl": 2,
                "mov rax, qword [var_28h];lea r8, [rax + 1];mov rcx, qword [arg_40h];mov edx, dword [rcx];movzx esi, byte [var_12h]": 2,
                "jb ;mov edx, r8d;sar r8d, 3;test r8d, r8d;je ": 2,
                "ret;mov rbp, qword [var_18h];add rsp, ;ret;lea rax, [rdx + 4]": 2,
                "lea rbp, [var_20h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rax, qword [arg_30h];cmp dword [rax + 8], 0;je ;call fcn.0042f500;mov rbp, qword [var_20h]": 2,
                "jmp ;call fcn.0042f500;mov rbp, qword [var_20h];add rsp, ;ret": 3,
                "call fcn.00461220;mov rax, qword [var_8h];mov qword [var_40h], rax;cmp qword [rax], 0;je ": 3,
                "mov qword [var_18h], rbx;mov qword [var_20h], rdx;call fcn.00440d10;mov rax, qword [var_28h];mov rcx, qword [var_30h]": 7,
                "cmp dword [], 0;jne ;mov qword [rbx + ], rax;mov rsi, rax;mov rax, rbx": 5,
                "jne ;mov qword [rbx + ], rax;mov rsi, rax;mov rax, rbx;jmp ": 5,
                "mov rbp, qword [var_50h];add rsp, ;ret;call fcn.00456090;jmp fcn.00460dc0": 3,
                "dec rcx;test rcx, rcx;jl ;mov rbx, rcx;shl rcx, 4": 3,
                "mov qword [var_18h], rsi;mov rax, qword [var_30h];mov qword [rsp], rax;call fcn.00460be0;mov rax, qword [var_18h]": 3,
                "je ;mov rcx, qword [var_20h];jmp ;mov rax, qword [arg_48h];mov qword [rsp], rax": 3,
                "mov rsi, qword [var_18h];jmp ;lea rdi, [rax + 8];xor eax, eax;call fcn.004580f0": 3,
                "mov qword [var_18h], rdi;mov rbx, qword [rsi + rbx + 8];mov qword [var_30h], rbx;mov qword [rdx + rcx + ], rax;mov rax, qword [var_38h]": 3,
                "mov rax, qword [var_30h];mov rcx, qword [var_18h];mov qword [arg_58h], rcx;mov qword [arg_60h], rax;mov rbp, qword [var_40h]": 2,
                "mov rax, qword [var_48h];cmp rax, rdx;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "cmp rbx, rsi;ja ;lea rbx, [rdx + 1];mov qword [], rbx;lea rdi, [r8 + rdx*8]": 3,
                "mov qword [], rdx;cmp dword [], 0;jne ;mov qword [], rax;mov rdx, rcx": 3,
                "jmp fcn.004612a0;int3;int3;int3;int3": 3,
                "mov qword [rsp + ], rcx;mov rdx, qword [];mov qword [rsp + ], rdx;xor eax, eax;jmp ": 2,
                "shl rbx, 7;mov qword [rsi + rbx], 0;lea r9, [rsi + rbx];lea r9, [r9 + 8];lea r10, [rsi + rbx]": 2,
                "mov qword [rsi + rbx + ], 0;cmp dword [], 0;jne ;mov qword [rsi + rbx + ], 0;jmp ": 2,
                "mov rsi, rax;xor eax, eax;call fcn.004580f0;mov rax, rsi;mov rdi, rbx": 2,
                "shl r9, 4;mov qword [rsp + 8], r9;call fcn.004150c0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 2,
                "mov rax, r12;mov rdi, r11;jmp ;cmp dword [], 0;jne ": 2,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [rsp + 8];xorps xmm0, xmm0": 1,
                "mov qword [var_8h], rbp;lea rbp, [var_8h];mov qword [rsp], ;call fcn.0043ff30;mov rbp, qword [var_8h]": 2,
                "lea rbp, [var_8h];mov qword [rsp], ;call fcn.0043ff30;mov rbp, qword [var_8h];add rsp, ": 2,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;call fcn.0042fee0;mov eax, ": 3,
                "test eax, eax;je ;mov rbp, qword [var_10h];add rsp, ;ret": 3,
                "mov rbp, qword [var_10h];add rsp, ;ret;lea rax, [rcx + 8];mov qword [rsp], rax": 3,
                "mov rbp, qword [rsp + ];add rsp, ;ret;lea rax, [rcx + 8];mov qword [rsp], rax": 3,
                "call fcn.0043ed00;mov rax, qword [rsp + ];lea rdx, [rax + 1];mov eax, dword [rsp + ];mov rcx, qword [rsp + ]": 3,
                "movsxd rbx, eax;cmp rdx, rbx;jl ;mov qword [rsp], rcx;call fcn.00460be0": 3,
                "lea rax, [rcx + 8];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rcx, rax;test rax, 7;jne ;lea rax, [rcx + 8];mov rdx, qword [arg_38h]": 2,
                "jle ;cmp edx, ebx;je ;test edx, edx;jg ": 2,
                "cmp edx, ebx;je ;test edx, edx;jg ;test esi, esi": 2,
                "mov qword [rsp], rax;mov qword [rsp + 8], ;call fcn.00461ad0;mov rbp, qword [rsp + ];add rsp, ": 1,
                "mov rax, qword [var_8h];cmp dword [], 0;jne ;mov qword [], rax;mov rbp, qword [var_10h]": 8,
                "jmp fcn.00461d40;int3;int3;int3;int3": 3,
                "call fcn.00461760;mov byte [], 2;mov rbp, qword [rsp];add rsp, 8;ret": 4,
                "mov rax, qword [rsp + 8];test byte [rax], al;add rax, ;mov qword [rsp + 8], rax;jmp fcn.00460900": 9,
                "mov rax, qword [rsp + 8];test byte [rax], al;add rax, ;mov qword [rsp + 8], rax;jmp fcn.00460be0": 8,
                "mov rcx, qword [rcx + ];mov qword [rsp], rax;mov rax, qword [arg_58h];mov qword [var_8h], rax;mov rax, qword [arg_60h]": 4,
                "mov rdx, qword [var_20h];mov rbx, qword [var_28h];mov rsi, qword [arg_50h];mov qword [rsp], rsi;mov qword [var_8h], rcx": 4,
                "mov qword [var_8h], rcx;mov qword [var_10h], rdx;mov qword [var_18h], rbx;call rax;mov rax, qword [var_20h]": 4,
                "mov qword [var_18h], rbx;call rax;mov rax, qword [var_20h];mov rcx, qword [var_28h];mov rdx, qword [var_30h]": 4,
                "mov rax, qword [var_20h];mov rcx, qword [var_28h];mov rdx, qword [var_30h];mov qword [arg_68h], rax;mov qword [arg_70h], rcx": 8,
                "mov qword [arg_78h], rdx;mov rbp, qword [var_38h];add rsp, ;ret;call fcn.00456090": 4,
                "xor r9d, r9d;xor r10d, r10d;jmp ;mov rcx, qword [rdx + ];mov qword [rsp], rsi": 4,
                "mov qword [var_10h], rax;mov qword [var_18h], r10;call rcx;mov r10, qword [var_30h];mov r9, qword [var_28h]": 4,
                "mov rsi, qword [arg_68h];mov rdi, qword [arg_70h];mov rcx, rbx;mov rdx, qword [arg_60h];mov rbx, qword [arg_80h]": 4,
                "xor eax, eax;xor ecx, ecx;mov qword [arg_90h], r8;mov qword [arg_98h], rax;mov qword [arg_a0h], rcx": 3,
                "mov rbp, qword [var_50h];add rsp, ;ret;test r8, r8;jle ": 3,
                "mov rcx, qword [var_18h];cmp byte [var_28h], 0;jne ;mov rax, qword [arg_98h];test rax, rax": 3,
                "cmp byte [var_28h], 0;jne ;mov rax, qword [arg_98h];test rax, rax;je ": 3,
                "je ;mov rcx, qword [arg_a0h];mov rdx, qword [arg_a8h];mov qword [arg_a0h], rcx;mov qword [arg_98h], rax": 3,
                "xor ebx, ebx;jmp ;mov rcx, qword [arg_a0h];mov rdx, qword [arg_a8h];mov rbx, rax": 3,
                "mov rcx, qword [var_30h];mov qword [var_60h], rcx;mov rdx, qword [var_28h];mov qword [var_48h], rdx;test rax, rax": 3,
                "mov qword [arg_c0h], rcx;mov rbp, qword [var_68h];add rsp, ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rcx, qword [var_60h];mov rdx, qword [var_48h];jmp ;mov rbx, qword [arg_a8h];cmp rax, rbx": 2,
                "jne ;mov rdx, qword [var_48h];mov rax, rcx;mov rcx, qword [var_60h];jmp ": 2,
                "mov rdx, rbx;jmp ;lea rax, [];mov rcx, qword [arg_88h];cmp rax, rcx": 2,
                "mov rax, qword [var_28h];mov rcx, qword [var_20h];mov rdx, qword [var_18h];mov qword [arg_b0h], rdx;mov qword [arg_b8h], rcx": 2,
                "mov qword [rsp], rax;mov rax, qword [arg_78h];mov qword [var_8h], rax;mov rax, qword [arg_80h];mov qword [var_10h], rax": 24,
                "mov rcx, qword [rax + ];test rcx, rcx;jle ;mov rdx, qword [rsp + ];cmp rdx, rcx": 1,
                "mov rbx, qword [rax + 8];mov rdx, qword [rdx + ];mov qword [rsp], rbx;mov rbx, qword [rsp + ];mov qword [rsp + 8], rbx": 1,
                "mov qword [rsp], rbx;mov rbx, qword [rsp + ];mov qword [rsp + 8], rbx;mov qword [rsp + ], rcx;mov rcx, qword [rsp + ]": 1,
                "mov qword [], rcx;cmp dword [], 0;jne ;mov qword [], rax;lea rax, []": 17,
                "jmp ;int3;sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp]": 4,
                "ret;cmp bl, ;ja ;cmp dil, 3;je ": 4,
                "and ebx, ;shl ebx, 6;or edx, ebx;and eax, ;or eax, edx": 4,
                "shl ebx, ;sar ebx, ;mov eax, ebx;not ebx;and ebx, edx": 4,
                "mov dword [arg_28h], ;mov qword [arg_30h], 0;mov rbp, qword [rsp];add rsp, 8;ret": 2,
                "jbe ;movzx esi, byte [rcx + 1];cmp sil, bl;jae ;mov dword [arg_20h], ": 2,
                "and esi, ;or edx, esi;mov dword [arg_20h], edx;mov qword [arg_28h], 2;mov rbp, qword [rsp]": 2,
                "ret;mov dword [arg_58h], ;mov qword [arg_60h], 0;mov rbp, qword [var_30h];add rsp, ": 2,
                "neg rax;sar rax, ;and rax, rsi;add rax, rcx;mov qword [rsp], rax": 2,
                "mov byte [rdx + 3], cl;mov qword [arg_30h], 4;mov rbp, qword [rsp];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "xor edx, edx;xor ebx, ebx;jmp ;inc rbx;cmp rdx, rax": 6,
                "jmp ;mov r8d, esi;and esi, 7;lea r9, [rsi + rdx];cmp r9, rax": 6,
                "jle ;inc rdx;jmp ;shr r8b, 4;movzx r8d, r8b": 6,
                "mov esi, 1;jmp ;cmp r8b, ;ja ;jmp ": 4,
                "lea r8, [rdx + 2];cmp r8, rax;jae ;sub rsp, 8;mov qword [rsp], rbp": 1,
                "je ;mov edi, ebx;and ebx, 7;lea r8, [rbx + rdx];cmp r8, rcx": 3,
                "jne ;mov rdx, r8;jmp ;lea rdi, [rdx + 2];cmp rdi, rcx": 3,
                "add rsp, 8;ret;mov byte [arg_20h], 0;sub rsp, 8;mov qword [rsp], rbp": 1,
                "ret;mov byte [arg_20h], 1;mov rbp, qword [rsp];add rsp, 8;ret": 2,
                "mov byte [arg_20h], 1;mov rbp, qword [rsp];add rsp, 8;ret;call fcn.0042e8e0": 2,
                "sub rsp, ;mov qword [var_20h], rbp;lea rbp, [var_20h];xor eax, eax;jmp ": 7,
                "xor eax, eax;jmp ;mov rcx, qword [var_18h];lea rax, [rcx + 1];mov rcx, qword [arg_40h]": 3,
                "mov qword [var_18h], rax;mov rcx, qword [arg_38h];mov rdx, qword [rcx + rax*8];mov qword [rsp], rdx;mov edx, dword [arg_30h]": 3,
                "cmp eax, ;jg ;lea ecx, [rax - 9];cmp ecx, 4;ja ": 4,
                "call fcn.00456090;jmp fcn.00463720;int3;int3;int3": 3,
                "test cx, cx;je ;mov eax, ebx;xor edx, edx;div cx": 4,
                "ret;mov byte [arg_30h], 0;mov rbp, qword [rsp];add rsp, 8;ret": 8,
                "lea r9, [r8 + r8*2];movzx r10d, word [rdx + r9*2];cmp r10w, ax;ja ;movzx r11d, word [rdx + r9*2 + 2]": 3,
                "movzx r10d, word [rdx + r9*2];cmp r10w, ax;ja ;movzx r11d, word [rdx + r9*2 + 2];cmp ax, r11w": 3,
                "cmp rcx, ;jg ;mov rdx, qword [arg_10h];mov ebx, dword [arg_28h];xor eax, eax": 4,
                "lea rsi, [rax + rax*2];mov edi, dword [rdx + rsi*4];cmp ebx, edi;jb ;mov r8d, dword [rdx + rsi*4 + 4]": 4,
                "mov r8d, dword [rdx + rsi*4 + 4];cmp ebx, r8d;ja ;mov ecx, dword [rdx + rsi*4 + 8];cmp ecx, 1": 4,
                "jbe ;cmp ebx, r9d;jb ;lea rsi, [rcx + rsi];lea rsi, [rsi + 1]": 3,
                "cmp r10d, 1;jne ;mov eax, 1;mov byte [arg_30h], al;mov rbp, qword [rsp]": 3,
                "test rdx, rdx;jle ;cmp dword [rax], edi;jle ;mov byte [arg_48h], 0": 3,
                "mov qword [var_10h], rcx;mov dword [var_18h], edi;call fcn.00463930;movzx eax, byte [var_20h];mov byte [arg_48h], al": 3,
                "call fcn.00456090;jmp fcn.00463a80;int3;int3;int3": 2,
                "jmp fcn.00463a80;int3;int3;int3;int3": 2,
                "mov rsi, qword [rax + ];cmp rcx, rsi;jle ;lea rdi, [rcx - 1];cmp rdi, rcx": 3,
                "movzx edi, word [rdx + rdi*2 - 4];mov r8d, dword [arg_40h];cmp r8d, edi;jg ;cmp rsi, rcx": 3,
                "mov word [var_18h], r8w;call fcn.004637d0;movzx eax, byte [var_20h];mov byte [arg_48h], al;mov rbp, qword [var_28h]": 3,
                "test rcx, rcx;jle ;cmp dword [rax], r8d;jle ;mov byte [arg_48h], 0": 3,
                "add rsp, ;ret;mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rdx": 5,
                "call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.00463b60;int3": 3,
                "mov r9, rbx;shr rbx, ;add rbx, r9;sar rbx, 1;lea r9, [rbx + rdi]": 3,
                "mov r10, qword [rcx + r10];mov qword [var_4h], r10;lea r10, [rcx + r11*4];lea r10, [r10 + 4];movups xmm0, xmmword [r10]": 3,
                "movups xmmword [var_8h], xmm0;mov r10d, dword [var_4h];cmp r10d, edx;jg ;cmp dword [var_8h], edx": 3,
                "and edx, ;and rax, 1;or edx, eax;lea eax, [rdx + r10];mov dword [arg_50h], eax": 3,
                "call fcn.00463c90;mov eax, dword [var_28h];mov dword [arg_48h], eax;mov rbp, qword [var_30h];add rsp, ": 7,
                "call fcn.00456090;jmp fcn.00463e60;int3;int3;int3": 4,
                "mov rsi, rdx;mov rdx, rdi;cmp rsi, rdx;jge ;mov rdi, rdx": 10,
                "sub rdx, rsi;mov r8, rdx;shr rdx, ;add rdx, r8;sar rdx, 1": 10,
                "call fcn.00463dc0;mov eax, dword [var_8h];mov dword [arg_28h], eax;mov rbp, qword [var_10h];add rsp, ": 4,
                "ret;jae ;lea rax, [];movzx eax, word [rax + rcx*2];mov dword [arg_28h], eax": 4,
                "mov qword [rsp], rax;mov qword [var_8h], ;mov qword [var_10h], 0;call fcn.0040e5a0;mov rax, qword [var_18h]": 11,
                "mov qword [var_8h], rdx;lea rbx, [];mov qword [var_10h], rbx;mov qword [var_18h], 1;call fcn.00413cb0": 4,
                "mov qword [rsp + ], rcx;mov qword [rsp + ], rsi;mov rbp, qword [rsp];add rsp, 8;ret": 1,
                "lea rbp, [rsp + ];mov rax, qword [rsp + ];test rax, rax;je ;mov rcx, qword [rax + 8]": 1,
                "mov rcx, qword [rax + 8];sub rcx, qword [rax + ];mov qword [rsp + ], rcx;ret;int3": 1,
                "int3;int3;mov rax, qword [rsp + 8];mov rax, qword [rax + ];mov qword [rsp + ], rax": 9,
                "int3;mov rax, qword [rsp + 8];mov rax, qword [rax + ];mov qword [rsp + ], rax;ret": 8,
                "mov rax, qword [rsp + ];test rax, rax;je ;mov rcx, qword [rsp + ];mov byte [rcx + ], 0": 1,
                "jg ;add rax, rsi;test rax, rax;jl ;cmp rax, rdx": 1,
                "add rsp, ;ret;mov rax, qword [rsp + ];mov qword [rax + 8], 0;mov qword [rax + ], 0": 1,
                "je ;mov qword [rax + 8], 0;mov qword [rax + ], 0;mov byte [rax + ], 0;mov rdx, qword [rax + 8]": 2,
                "mov qword [rax + ], 0;mov byte [rax + ], 0;mov rdx, qword [rax + 8];mov rbx, qword [rax + ];mov rsi, rbx": 2,
                "mov rdx, qword [rax + 8];mov rbx, qword [rax + ];mov rsi, rbx;sub rbx, rdx;mov rdi, qword [arg_58h]": 2,
                "mov ebx, 1;test bl, bl;jne ;mov rdx, qword [rax + 8];mov rbx, qword [rax]": 2,
                "mov rax, qword [arg_50h];mov rcx, qword [var_20h];mov rdi, qword [arg_58h];jmp ;movabs rdx, ": 1,
                "jmp ;movabs rdx, ;sub rdx, r8;sub rdx, rdi;cmp r8, rdx": 1,
                "mov rdx, qword [var_10h];mov rdi, qword [arg_50h];mov rbx, qword [rdi + 8];mov rsi, qword [rdi];mov r8, qword [rdi + ]": 1,
                "mov r8, qword [rdi + ];mov r9, qword [rdi + ];cmp r9, rbx;ja ;sub rbx, r9": 1,
                "mov qword [rsp], rax;mov qword [var_8h], rbx;mov qword [var_10h], rdx;call fcn.00459210;mov rax, qword [var_38h]": 1,
                "mov qword [var_8h], rdi;mov qword [var_10h], ;call fcn.00440c00;mov rax, qword [var_18h];mov rcx, qword [arg_58h]": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.0042f900;ud2;call fcn.0042ea20": 6,
                "mov rcx, qword [rsp + ];mov qword [rsp], rcx;mov qword [rsp + 8], rax;call fcn.00469c70;mov rax, qword [rsp + ]": 1,
                "mov rbx, rcx;sub rcx, rdx;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "cmovg rax, rsi;sub rbx, rdx;neg rbx;sar rbx, ;and rdx, rbx": 1,
                "test cl, cl;je ;mov rcx, qword [rax];mov rbx, qword [rax + 8];mov rax, qword [rax + ]": 2,
                "xorps xmm0, xmm0;movups xmmword [arg_50h], xmm0;mov rbp, qword [var_20h];add rsp, ;ret": 7,
                "mov rdi, qword [arg_80h];mov qword [rsp], rdi;sub rbx, rax;mov r8, rbx;neg rbx": 3,
                "mov r8, rbx;neg rbx;sar rbx, ;and rbx, rax;add rdx, rbx": 3,
                "test eax, eax;jne ;lea rax, [];mov qword [rsp], rax;mov rax, qword [arg_30h]": 3,
                "mov qword [rsp + ], rcx;xorps xmm0, xmm0;movups xmmword [rsp + ], xmm0;mov rbp, qword [rsp + ];add rsp, ": 8,
                "mov rdx, qword [];mov qword [rsp + ], rax;mov qword [rsp + ], rcx;mov qword [rsp + ], rdx;mov rbp, qword [rsp + ]": 7,
                "call fcn.00456090;jmp fcn.0046a6a0;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 2,
                "jmp fcn.0046a6a0;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 2,
                "mov rsi, rbx;sub rbx, rdx;cmp rbx, 4;jl ;lea rbx, [rdx + 4]": 3,
                "cmp rdi, rbx;ja ;mov qword [var_28h], rdx;sub rbx, rdx;mov rcx, rbx": 3,
                "and rbx, rdx;add rbx, rsi;mov qword [rsp], rbx;mov qword [var_8h], 4;mov qword [var_10h], rcx": 3,
                "movups xmmword [rsp + ], xmm0;mov rbp, qword [rsp + ];add rsp, ;ret;mov rax, qword []": 3,
                "mov qword [rsp + ], rdi;mov qword [rsp], rdx;mov qword [rsp + 8], rcx;mov qword [rsp + ], rdi;call fcn.00459210": 5,
                "mov byte [rax + ], 0;mov rcx, qword [rax + 8];mov rdx, qword [rax + ];sub rcx, rdx;mov rbx, qword [rsp + ]": 2,
                "sub rsi, rdx;mov rcx, rsi;neg rsi;sar rsi, ;and rdx, rsi": 1,
                "sar rsi, ;and rdx, rsi;add rdx, rdi;test rbx, rbx;jle ": 1,
                "mov byte [rax + ], ;mov qword [rsp + ], rdx;mov qword [rsp + ], rbx;mov qword [rsp + ], rcx;mov rbp, qword [rsp]": 1,
                "mov qword [rsp], rbp;lea rbp, [rsp];mov rax, qword [rsp + ];mov rcx, qword [rax + 8];mov rdx, qword [rax]": 1,
                "and rdx, rsi;add rdx, rbx;mov qword [rsp], rdx;sub rcx, rsi;mov qword [var_8h], rcx": 1,
                "add rdx, rbx;mov qword [rsp], rdx;sub rcx, rsi;mov qword [var_8h], rcx;mov qword [var_10h], rax": 1,
                "lea rbx, [rcx + rdx];lea rbx, [rbx + 1];test rdx, rdx;jge ;mov rdx, qword [rax + 8]": 1,
                "mov rcx, qword [rsp + ];mov rdx, qword [rsp + ];mov rbx, qword [rsp + ];mov rsi, qword [rsp + ];mov qword [rsp + ], rsi": 2,
                "mov qword [rsp], 0;mov qword [rsp + 8], rbx;mov qword [rsp + ], rdx;mov qword [rsp + ], rcx;call fcn.00444c60": 2,
                "cmp rax, rcx;ja ;mov rdx, qword [var_28h];mov rbx, qword [var_30h];cmp rdx, rbx": 2,
                "call fcn.004580f0;mov r8, rax;mov rax, rdx;jmp ;cmp rdi, rcx": 2,
                "cmp rdi, rcx;jae ;lea r9, [rdi + rdi*2];mov qword [rax + r9*8 + 8], rbx;mov qword [rax + r9*8 + ], rdx": 2,
                "mov qword [rax + r9*8], rsi;test r8, r8;jl ;cmp r8, rcx;ja ": 2,
                "test rax, rax;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 8,
                "je ;mov rcx, qword [arg_58h];mov rdx, qword [arg_60h];mov rbx, qword [arg_50h];xor esi, esi": 2,
                "lea rbx, [rdi + rax];mov rax, rcx;mov rcx, rdx;mov rdx, r8;mov qword [arg_58h], rcx": 2,
                "mov qword [arg_80h], rax;mov rbp, qword [var_40h];add rsp, ;ret;mov rax, qword [arg_68h]": 2,
                "mov rcx, qword [arg_60h];mov qword [var_10h], rcx;mov byte [var_18h], al;call fcn.00402ac0;mov rax, qword [var_20h]": 2,
                "neg rbx;sar rbx, ;and rbx, r11;add r12, rbx;sub r9, r11": 2,
                "mov qword [arg_68h], rsi;mov qword [arg_70h], rdi;mov qword [arg_60h], r8;cmp rbx, rdx;jge ": 2,
                "mov rbx, qword [arg_70h];cmp rdx, rbx;ja ;mov rsi, qword [var_38h];mov r8, qword [var_40h]": 2,
                "cmp rcx, rdx;jae ;lea rbx, [rcx + rcx*2];mov rsi, qword [arg_68h];mov r8, qword [var_48h]": 2,
                "test rax, rax;jl ;mov qword [arg_a0h], r8;mov qword [arg_a8h], rax;mov qword [arg_b0h], rdx": 2,
                "ud2;call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.0046b4d0": 1,
                "mov r9, rsi;neg rsi;sar rsi, ;and rsi, 1;add rbx, rsi": 1,
                "and rax, 1;add rax, rcx;lea rcx, [rdx - 1];cmp r8d, edi;je ": 1,
                "cmp r8d, edi;je ;cmp edi, r8d;mov edx, edi;cmovl edi, r8d": 1,
                "jg ;lea edx, [r8 + ];cmp edx, edi;je ;mov byte [rsp + ], 0": 1,
                "je ;mov rcx, qword [arg_98h];cmp rax, rcx;je ;jg ": 1,
                "movzx ebx, byte [rdx];mov byte [var_3eh], bl;movzx esi, byte [rdx + 1];mov byte [var_3dh], sil;mov rdi, rcx": 1,
                "xor r9d, r9d;xor r10d, r10d;jmp ;mov r9, r11;cmp r9, rcx": 3,
                "cmp r9, rdi;jae ;mov qword [var_68h], r10;movzx r11d, byte [r8 + r9];cmp r11b, bl": 1,
                "add rsp, ;ret;lea r12, [rax + r9];test r12, r12;jl ": 4,
                "test r12, r12;jl ;cmp r9, r12;ja ;mov r13, qword [arg_a0h]": 1,
                "movzx r12d, byte [var_30h];mov rax, qword [arg_b0h];mov rcx, qword [var_40h];mov rdx, qword [arg_a8h];movzx ebx, byte [var_3eh]": 1,
                "mov qword [var_70h], r9;sub r11, r9;mov rdx, r11;neg r11;sar r11, ": 1,
                "mov qword [var_10h], rcx;mov rcx, qword [arg_a8h];mov qword [var_18h], rcx;mov qword [var_20h], rax;mov rax, qword [arg_b8h]": 1,
                "mov byte [var_3fh], bl;movzx esi, byte [rdx + 1];mov byte [var_3ch], sil;mov rdi, rcx;sub rcx, rax": 1,
                "mov qword [var_18h], rdx;mov qword [var_20h], rax;mov rax, qword [arg_b8h];mov qword [var_28h], rax;call fcn.0046c2a0": 1,
                "mov qword [var_8h], rcx;mov rdx, qword [arg_88h];mov qword [var_10h], rdx;call fcn.0046c510;mov eax, dword [var_18h]": 1,
                "mov rdx, qword [arg_60h];mov rbx, qword [arg_68h];mov rsi, qword [arg_80h];xor edi, edi;xor r8d, r8d": 1,
                "cmp r8d, eax;je ;xor r9d, r9d;test r9b, r9b;je ": 1,
                "mov qword [var_48h], r9;mov rax, qword [arg_70h];sub rax, rsi;mov rbx, rax;neg rax": 1,
                "mov ecx, dword [var_38h];mov rdx, qword [arg_60h];mov rbx, qword [arg_68h];mov rsi, qword [var_48h];mov rdi, qword [arg_80h]": 1,
                "add rsp, ;ret;mov qword [arg_90h], 0;mov rbp, qword [var_50h];add rsp, ": 1,
                "mov eax, dword [var_3ch];mov ecx, dword [var_38h];mov rdx, qword [arg_60h];mov rbx, qword [arg_68h];mov rsi, qword [arg_80h]": 1,
                "sub rax, rcx;mov qword [rsp + ], rax;ret;int3;int3": 2,
                "mov rcx, qword [rsp + ];cmp rcx, rax;jne ;cmp rsi, rdi;jge ": 1,
                "mov rbp, qword [rsp + ];add rsp, ;ret;xor eax, eax;xor ecx, ecx": 3,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rdi, qword [rsp + 8];mov qword [rdi + 8], ": 24,
                "ret;lea rax, [];call fcn.004580f0;jmp ;call fcn.00456090": 1,
                "lea rax, [];call fcn.004580f0;jmp ;call fcn.00456090;jmp ": 3,
                "cmp rcx, rdx;jge ;jae ;movzx edx, byte [rbx + rcx];inc rcx": 1,
                "mov rax, qword [rsp + ];mov rcx, qword [rax + 8];mov rdx, qword [rax];mov rbx, qword [rax + ];mov qword [rsp + ], 0": 2,
                "mov qword [rsp + ], rdx;mov qword [rsp + ], rcx;mov qword [rsp + ], rbx;mov rcx, qword [rsp + ];mov qword [rsp + ], rcx": 2,
                "mov qword [rsp + ], rcx;mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;mov qword [rsp + ], ;mov qword [rsp + ], ": 2,
                "call fcn.00458f2a;mov rbp, qword [rbp];mov rbp, qword [rsp + ];add rsp, ;ret": 2,
                "add rsp, ;ret;lea rcx, [];mov qword [rsp], rcx;mov qword [rsp + 8], rax": 2,
                "mov rdx, qword [rcx + ];test rdx, rdx;jle ;mov rbx, qword [rcx + 8];mov rsi, qword [rcx]": 3,
                "mov qword [rcx + ], 0;mov rdx, qword [rcx + 8];cmp qword [rcx + ], rdx;jge ;mov eax, ": 3,
                "jmp ;mov rdx, qword [var_38h];lea rax, [rdx - 1];mov rcx, rbx;test rax, rax": 3,
                "mov r8, qword [rcx + ];mov rax, qword [rax + ];mov qword [rsp], r8;sub rsi, rdi;mov r8, rsi": 3,
                "call fcn.0042f900;ud2;call fcn.0042ea20;ud2;lea rax, []": 3,
                "mov r8, rbx;sub rbx, rsi;cmp rbx, rcx;jge ;cmp qword [rdx + 8], rbx": 1,
                "mov rax, qword [rdx + ];mov rdi, qword [rdx];mov rdx, qword [rdx + ];lea r8, [rdx + rbx];test r8, r8": 1,
                "ja ;cmp r8, rax;ja ;sub rax, rdx;mov r8, rax": 1,
                "mov qword [rsp + ], r8;mov qword [rsp + ], rcx;mov qword [rsp + ], rsi;mov rbp, qword [rsp + 8];add rsp, ": 1,
                "xor esi, esi;xor ecx, ecx;mov rbx, qword [rsp + ];jmp ;mov rax, qword []": 1,
                "mov rbp, qword [rsp + 8];add rsp, ;ret;call fcn.0042ea20;mov rcx, qword gs:[]": 1,
                "sub rsp, ;mov qword [var_38h], rbp;lea rbp, [var_38h];mov rax, qword [arg_48h];movzx ecx, byte [arg_50h]": 1,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov rax, qword [arg_48h];movzx ecx, byte [arg_50h];xor edx, edx": 1,
                "cmp r8, rsi;ja ;mov qword [var_30h], rdx;sub rsi, rdi;mov rax, rsi": 1,
                "ja ;mov qword [var_30h], rdx;sub rsi, rdi;mov rax, rsi;neg rsi": 1,
                "mov qword [var_30h], rdx;sub rsi, rdi;mov rax, rsi;neg rsi;sar rsi, ": 1,
                "jg ;mov qword [rcx + ], rbx;mov rax, qword [rcx + ];mov rdx, qword [rcx + 8];mov rbx, qword [rcx]": 1,
                "ja ;cmp r8, rdx;ja ;mov qword [rcx + ], r8;mov r9, qword [rcx + ]": 1,
                "mov r11, rdx;neg rdx;sar rdx, ;and rsi, rdx;lea rdx, [rsi + rbx]": 1,
                "ud2;call fcn.00456090;jmp fcn.0046e050;int3;int3": 1,
                "call fcn.0046e050;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rdx, qword [rsp + ];mov rbx, qword [rsp + ]": 1,
                "mov qword [rsp + ], rsi;mov esi, 0;cmovne rcx, rsi;mov qword [rsp + ], rcx;cmovne rbx, rsi": 1,
                "je ;dec rbx;mov qword [rdx + ], rbx;dec rax;mov qword [rsp + ], rcx": 1,
                "mov rax, qword [var_18h];mov qword [var_a0h], rax;mov rcx, qword [var_88h];cmp rcx, rax;je ": 1,
                "cmp rcx, rax;je ;mov qword [rsp], rax;mov qword [var_8h], rcx;mov rcx, qword [var_70h]": 1,
                "mov rax, qword [var_18h];mov qword [var_a0h], rax;mov rcx, qword [var_a8h];mov rdx, qword [var_50h];mov rbx, qword [var_78h]": 1,
                "jmp ;inc rsi;add rdi, rbx;mov rbx, r8;cmp rsi, rdx": 1,
                "mov rcx, rbx;sub rbx, rdi;mov rdx, qword [var_70h];cmp rbx, rdx;mov rsi, rbx": 1,
                "mov qword [var_10h], rbx;call fcn.00459210;mov rax, qword [var_a0h];mov rcx, qword [var_78h];jmp ": 1,
                "xor eax, eax;xor ecx, ecx;jmp ;call fcn.0042ea20;ud2": 1,
                "lea rbp, [var_38h];mov rax, qword [arg_48h];mov rcx, qword [rax + ];mov rdx, qword [rax];mov rbx, qword [rax + ]": 1,
                "jl ;cmp rbx, rsi;ja ;cmp rsi, rcx;ja ": 1,
                "mov rcx, qword [];test rcx, rcx;je ;mov rcx, qword [rcx + 8];mov qword [rsp], rcx": 2,
                "ud2;call fcn.00456090;jmp fcn.0046eca0;int3;int3": 1,
                "call fcn.0042ebd0;ud2;mov byte [], 1;call fcn.0046d060;call fcn.00462900": 5,
                "jne ;jnp ;ucomisd xmm1, xmm0;jbe ;movsd xmm2, qword []": 2,
                "ucomisd xmm1, xmm2;jbe ;movsd xmm1, qword [];pxor xmm0, xmm1;movsd qword [arg_28h], xmm0": 2,
                "add rsp, ;ret;divsd xmm4, xmm2;movsd qword [rsp], xmm4;call fcn.0046f300": 2,
                "mov rbp, qword [var_10h];add rsp, ;ret;call fcn.00456090;jmp ": 6,
                "int3;int3;int3;int3;movsd xmm0, qword []": 2,
                "movsd xmm3, qword [];addsd xmm3, xmm2;mulsd xmm3, xmm1;movsd xmm2, qword [];addsd xmm2, xmm3": 4,
                "addsd xmm0, xmm2;movsd qword [arg_10h], xmm0;ret;int3;int3": 1,
                "mov rbp, qword [var_10h];add rsp, ;ret;movsd xmm1, qword [];pxor xmm0, xmm1": 1,
                "movsd xmm0, qword [arg_20h];ucomisd xmm0, xmm0;jne ;jnp ;movsd xmm0, qword []": 1,
                "ucomisd xmm0, xmm0;jne ;jnp ;movsd xmm0, qword [];movsd qword [arg_30h], xmm0": 1,
                "setae al;test al, al;je ;mov rax, qword [arg_20h];shr rax, ": 1,
                "jnp ;movsd xmm3, qword [];ucomisd xmm1, xmm3;jbe ;mov eax, 1": 1,
                "movsd xmm1, qword [];mulsd xmm0, xmm1;mov rax, ;movq rcx, xmm0;movabs rdx, ": 2,
                "movsd xmm2, qword [];mulsd xmm2, xmm0;mov rax, ;mov rcx, qword [arg_10h];add rax, rcx": 2,
                "ucomisd xmm1, xmm2;jbe ;movsd xmm0, qword [];movsd qword [arg_18h], xmm0;ret": 2,
                "movq xmm1, rdx;mulsd xmm0, xmm1;movsd qword [arg_18h], xmm0;ret;mov rax, rbx": 2,
                "sub rsp, ;mov qword [var_40h], rbp;lea rbp, [var_40h];movsd xmm0, qword [arg_58h];xorps xmm1, xmm1": 2,
                "test al, al;jne ;ucomisd xmm2, xmm2;jne ;jp ": 2,
                "jne ;ucomisd xmm2, xmm2;jne ;jp ;ucomisd xmm0, xmm0": 2,
                "movq xmm4, rcx;movsd qword [var_18h], xmm4;jmp ;movsd xmm0, qword [];movsd qword [arg_8h], xmm0": 1,
                "movsd qword [var_18h], xmm4;jmp ;movsd xmm0, qword [];movsd qword [arg_8h], xmm0;ret": 1,
                "jmp ;movsd qword [var_30h], xmm3;movsd qword [rsp], xmm3;call fcn.00471480;movsd xmm0, qword [var_8h]": 1,
                "mov rax, qword [var_10h];mov rcx, qword [var_38h];mov qword [rsp], rcx;lea rdx, [rax - 1];movsd xmm1, qword [var_20h]": 1,
                "mov rcx, rdx;shl rdi, cl;lea r8, [rax + 1];cmp r8, ;jae ": 1,
                "mov rcx, rdx;shl r10, cl;lea r11, [rax + 2];cmp r11, ;jae ": 1,
                "shr r11, cl;and r11, r8;or r10, r11;mov rcx, rdx;shl r12, cl": 1,
                "mul rbx;mov rax, r10;mov rcx, rdx;mul rbx;mov rsi, rax": 1,
                "add rax, rcx;imul rdi, rbx;add rsi, rcx;adc rdi, rdx;mov rdx, rdi": 1,
                "or rdi, r9;shr rdi, ;shl r10, ;or r10, rdi;mov rbx, rdx": 1,
                "jne ;lea rax, [rbx + 1];and rax, 7;movsd xmm2, qword [];subsd xmm1, xmm2": 1,
                "call fcn.00470f70;mov byte [], 2;mov rbp, qword [rsp];add rsp, 8;ret": 4,
                "int3;movabs rax, ;mov r8, qword [arg_8h];cmp rax, r8;je ": 18,
                "movsd xmm1, qword [];addsd xmm1, xmm0;mulsd xmm0, xmm1;addsd xmm0, qword [];add ebx, ": 10,
                "jle ;cmp ebx, ;jge ;shl rbx, ;movq xmm1, rbx": 10,
                "mov qword [arg_10h], rbx;ret;cmp ebx, ;jl ;add ebx, ": 10,
                "jmp ;movsd xmm2, qword [];vfnmadd231sd xmm0, xmm1, xmm2;movsd xmm2, qword [];vfnmadd231sd xmm0, xmm1, xmm2": 9,
                "mulsd xmm0, qword [];movsd xmm1, qword [];vfmadd213sd xmm1, xmm0, qword [];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "int3;int3;mov rax, qword [arg_8h];movabs rdx, ;and rdx, rax": 7,
                "cmp rbx, rcx;jmp ;int3;int3;int3": 1,
                "cmp rbx, rcx;jae ;movq xmm0, rax;movq xmm2, rdx;cvttsd2si rax, xmm0": 7,
                "and ebx, ;sub ebx, ;xorps xmm1, xmm1;cvtsi2sd xmm1, ebx;movsd xmm0, qword []": 7,
                "movsd xmm0, qword [];addsd xmm3, xmm0;mulsd xmm2, xmm3;subsd xmm2, xmm0;movsd xmm0, qword []": 7,
                "divsd xmm3, xmm0;movapd xmm4, xmm3;mulsd xmm4, xmm4;movapd xmm5, xmm4;mulsd xmm5, xmm5": 7,
                "movsd xmm6, qword [];mulsd xmm6, xmm5;mov rax, qword [arg_8h];movabs rdx, ;and rdx, rax": 1,
                "ret;movabs rax, ;mov qword [arg_10h], rax;ret;movabs rax, ": 6,
                "ret;movabs rax, ;mov qword [arg_10h], rax;ret;int3": 6,
                "int3;int3;int3;mov rax, qword [arg_10h];mov rcx, qword [arg_20h]": 5,
                "cmp sil, ;jb ;cmp sil, ;ja ;add esi, ": 6,
                "mov byte [arg_50h], 0;mov rbp, qword [var_28h];add rsp, ;ret;movsd xmm0, qword []": 2,
                "lea rax, [];mov qword [var_10h], rax;mov qword [var_18h], 3;call fcn.004718e0;cmp byte [var_20h], 0": 2,
                "mov rdi, qword [rax + ];mov qword [rax + ], rdi;mov edi, 1;jmp ;mov byte [arg_28h], 0": 3,
                "cmp sil, ;jne ;mov esi, 1;test sil, sil;je ": 3,
                "jne ;add rbx, 2;mov esi, 1;cmp rbx, rcx;jge ": 2,
                "add qword [rax + ], rsi;cmp rbx, rcx;je ;mov byte [arg_28h], 0;mov rbp, qword [rsp]": 1,
                "mov rbx, rsi;mov esi, 1;jmp ;mov byte [arg_28h], 0;mov rbp, qword [rsp]": 1,
                "add rsp, 8;ret;cmp sil, ;sete sil;jmp ": 1,
                "jne ;mov byte [rax + ], 1;mov ebx, 1;jmp ;xor ebx, ebx": 1,
                "mov byte [rax + ], 1;mov ebx, 1;jmp ;xor ebx, ebx;jmp ": 1,
                "mov edx, 1;xor ebx, ebx;xor esi, esi;xor edi, edi;xor r8d, r8d": 2,
                "cmp rdx, rax;jge ;jae ;movzx r13d, byte [rcx + rdx];cmp r13b, ": 2,
                "mov qword [arg_20h], r9;mov qword [arg_28h], 0;mov byte [arg_30h], bl;mov byte [arg_31h], r12b;mov byte [arg_32h], 0": 6,
                "mov byte [arg_31h], r12b;mov byte [arg_32h], 0;mov rbp, qword [rsp];add rsp, 8;ret": 6,
                "jb ;cmp r13b, ;ja ;cmp r13b, ;jne ": 2,
                "jmp ;test sil, sil;je ;movzx esi, dil;test rsi, rsi": 2,
                "cmp dil, ;ja ;xor edi, edi;jmp ;inc rdx": 1,
                "lea rdi, [rdi - ];jmp ;imul rsi, rdi;lea rcx, [r8 + rsi];cmp rdx, rax": 1,
                "mov qword [arg_20h], r9;sub rcx, r10;test r9, r9;mov eax, 0;cmovne rax, rcx": 1,
                "mov ebx, 1;jmp ;xor edx, edx;xor ebx, ebx;jmp ": 3,
                "mov r8, rdx;sub rdx, rdi;mov edi, 1;shl rdi, cl;and rdi, rsi": 1,
                "mov qword [var_30h], r8;mov rcx, qword [rbx];mov qword [rsp], rax;inc rcx;mov qword [var_8h], rcx": 1,
                "mov rsi, qword [rax + 8];cmp rsi, ;sbb rdi, rdi;mov r8, qword [var_30h];inc r8": 1,
                "and rsi, rdx;test rsi, rbx;jne ;mov rdx, qword [rax + ];mov rcx, rbx": 1,
                "jmp ;mov r9, rcx;mov r10, qword [var_30h];jmp ;mov qword [var_30h], rdx": 1,
                "lea rdx, [rcx + rax];lea rdx, [rdx - 1];mov rax, qword [arg_48h];mov rbx, qword [arg_50h];jmp ": 1,
                "jmp ;mov rbx, qword [arg_50h];jmp ;mov rbx, qword [arg_50h];mov rdx, qword [rbx + ]": 1,
                "cmp rcx, ;sbb rax, rax;mov rdx, qword [arg_10h];mov rbx, rdx;shr rdx, cl": 4,
                "test rax, rdx;jne ;test rbx, rbx;jl ;xorps xmm0, xmm0": 4,
                "je ;jle ;cmp rax, ;jg ;cmp rax, ": 4,
                "mulsd xmm0, xmm1;mov eax, ;sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp]": 1,
                "jbe ;movsd xmm1, qword [rcx + rax*8 - ];mulsd xmm0, xmm1;mov eax, ;movsd xmm1, qword []": 1,
                "jbe ;movsd xmm1, qword [rcx + rax*8];mulsd xmm0, xmm1;movsd qword [arg_28h], xmm0;mov byte [arg_30h], 1": 1,
                "movsd qword [arg_28h], xmm0;mov byte [arg_30h], 1;mov rbp, qword [rsp];add rsp, 8;ret": 3,
                "je ;movss xmm1, dword [];pxor xmm0, xmm1;mov rax, qword [arg_18h];test rax, rax": 2,
                "mov rcx, qword [];lea rdx, [rax - ];cmp qword [], rdx;jbe ;movss xmm1, dword [rcx + rax*4 - ]": 2,
                "add rsp, 8;ret;movss xmm1, dword [];ucomiss xmm1, xmm0;ja ": 2,
                "movss xmm1, dword [rcx + rax*4];mulss xmm0, xmm1;movss dword [arg_28h], xmm0;mov byte [arg_2ch], 1;mov rbp, qword [rsp]": 2,
                "jbe ;movss xmm1, dword [rcx + rax*4];divss xmm0, xmm1;movss dword [arg_28h], xmm0;mov byte [arg_2ch], 1": 2,
                "divss xmm0, xmm1;movss dword [arg_28h], xmm0;mov byte [arg_2ch], 1;mov rbp, qword [rsp];add rsp, 8": 2,
                "cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_3a8h], rbp;lea rbp, [var_3a8h]": 4,
                "mov qword [rsp], rax;mov rcx, qword [arg_3c0h];mov qword [var_8h], rcx;call fcn.00471950;movsd xmm0, qword [var_10h]": 4,
                "mov qword [var_8h], rcx;mov rdx, qword [arg_3c0h];mov qword [var_10h], rdx;call fcn.00471c10;cmp byte [var_18h], 0": 4,
                "call fcn.0040d880;mov rdi, qword [var_8h];mov qword [rdi + 8], ;cmp dword [], 0;jne ": 201,
                "cmp dword [], 0;jne ;lea rcx, [];mov qword [rdi], rcx;mov rcx, qword [arg_3c0h]": 8,
                "cmp dword [], 0;jne ;mov rcx, qword [arg_3b8h];mov qword [rdi + ], rcx;mov rcx, qword []": 3,
                "call fcn.00475820;cmp byte [var_28h], 0;je ;lea rax, [var_58h];mov qword [rsp], rax": 2,
                "cmp dword [], 0;jne ;mov qword [rdi + ], rax;mov rax, qword [var_50h];lea rcx, []": 2,
                "jmp ;mov qword [var_38h], rax;mov qword [var_40h], rcx;mov byte [var_37h], dl;mov byte [var_36h], bl": 2,
                "cvtsd2ss xmm0, xmm0;movss dword [arg_3c8h], xmm0;xorps xmm0, xmm0;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "xor edx, edx;mov qword [arg_3c8h], rax;mov qword [arg_3d0h], rcx;mov qword [arg_3d8h], rdx;mov rbp, qword [var_3a8h]": 2,
                "jne ;mov qword [rdi + ], rax;xorps xmm0, xmm0;movsd qword [arg_3c8h], xmm0;lea rax, []": 1,
                "jmp ;movsd qword [arg_3c8h], xmm0;xorps xmm0, xmm0;movups xmmword [arg_3d0h], xmm0;mov rbp, qword [var_3a8h]": 1,
                "cmp rax, ;jne ;mov rax, qword [arg_38h];mov qword [rsp], rax;mov rax, qword [arg_40h]": 2,
                "mov rax, qword [arg_38h];mov qword [rsp], rax;mov rax, qword [arg_40h];mov qword [var_8h], rax;call fcn.004728d0": 1,
                "mov qword [var_8h], rax;call fcn.00472e00;mov rax, qword [var_20h];mov rcx, qword [var_18h];movsd xmm0, qword [var_10h]": 1,
                "mov qword [arg_60h], rax;mov rbp, qword [var_28h];add rsp, ;ret;call fcn.00456090": 9,
                "mov rbx, qword [rsp + ];mov qword [rsp + ], rbx;mov rsi, qword [rsp + ];mov qword [rsp + ], rsi;mov qword [rsp], rdx": 1,
                "mov rcx, qword [var_28h];mov qword [var_40h], rcx;lea rdx, [];mov qword [rsp], rdx;call fcn.0040d880": 10,
                "mov qword [rsp], rdx;call fcn.0040d880;mov rdi, qword [var_8h];mov qword [var_48h], rdi;mov rax, qword [var_38h]": 4,
                "mov qword [rdi + 8], rax;cmp dword [], 0;jne ;mov rax, qword [var_40h];mov qword [rdi], rax": 18,
                "call fcn.0040d880;mov rdi, qword [var_8h];mov rax, qword [arg_68h];mov qword [rdi + 8], rax;cmp dword [], 0": 4,
                "cmp dword [], 0;jne ;mov rcx, qword [arg_70h];mov qword [rdi + ], rcx;lea rcx, []": 4,
                "cmp dword [], 0;jne ;mov rax, qword [var_48h];mov qword [rdi + ], rax;mov qword [arg_88h], rdi": 4,
                "mov qword [var_40h], rax;mov rcx, qword [var_30h];mov qword [var_38h], rcx;lea rdx, [];mov qword [rsp], rdx": 8,
                "mov rax, qword [var_40h];call fcn.004580f0;jmp ;call fcn.00456090;jmp fcn.004737c0": 2,
                "call fcn.00456090;jmp fcn.004737c0;int3;int3;int3": 2,
                "cmp rcx, rdx;jge ;movzx r10d, byte [r9 + rcx];cmp r10b, ;jb ": 3,
                "movzx r10d, byte [r9 + rcx];cmp r10b, ;jb ;cmp r10b, ;ja ": 3,
                "cmp r10, rsi;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "cmp rdx, rcx;jne ;mov rbx, qword [rdi + ];mov rsi, qword [rdi + ];cmp qword [], rsi": 1,
                "mov qword [rdi + ], rax;mov qword [arg_90h], 0;mov qword [arg_98h], rcx;mov qword [arg_a0h], rdi;mov rbp, qword [var_60h]": 1,
                "mov rdi, rdx;mov rbx, rax;mov rax, qword [arg_70h];call fcn.004580f0;mov rdi, rbx": 1,
                "mov rbx, qword [arg_88h];test rbx, rbx;mov esi, ;cmove rbx, rsi;lea rcx, [rbx - 1]": 1,
                "lea rcx, [rbx - 1];cmp rcx, ;sbb rbx, rbx;mov esi, 1;shl rsi, cl": 1,
                "cmovne rcx, rax;mov qword [arg_90h], rcx;xorps xmm0, xmm0;movups xmmword [arg_98h], xmm0;mov rbp, qword [var_60h]": 1,
                "movups xmmword [arg_98h], xmm0;mov rbp, qword [var_60h];add rsp, ;ret;lea rax, []": 1,
                "mov qword [rsp], rax;call fcn.0040d880;mov rdi, qword [var_8h];mov qword [rdi + 8], 8;cmp dword [], 0": 8,
                "mov qword [rdi + ], rax;mov rax, qword [var_40h];neg rax;mov qword [arg_90h], rax;lea rax, []": 1,
                "mov qword [var_50h], rax;mov qword [var_48h], rcx;mov qword [var_58h], rdi;mov qword [rsp], rsi;mov qword [var_8h], rbx": 1,
                "xor edx, edx;jmp ;mov byte [rcx + rdx], ;inc rdx;cmp rdx, rax": 1,
                "mov qword [rsp], rcx;call fcn.00474b50;mov rbp, qword [var_20h];add rsp, ;ret": 3,
                "xor ecx, ecx;xor ebx, ebx;jmp ;lea rsi, [rbx + 1];movzx edi, byte [rbx + rax]": 4,
                "mov r8, rdi;shr rdi, cl;test rsi, rdi;jne ;cmp qword [rax + ], rbx": 4,
                "cmp rbx, ;jb ;jmp ;test r8, r8;jne ": 4,
                "jle ;cmp rbx, ;jae ;movzx r10d, byte [rbx + rax];mov r11, rdi": 4,
                "jmp ;lea rbx, [rbx + rbx*4];shl rbx, 1;mov r9, rdi;mov rdi, rbx": 4,
                "jge ;jae ;add rdi, ;mov byte [rax + r9], dil;lea rdi, [r9 + 1]": 4,
                "jmp ;test rsi, r10;jbe ;mov byte [rax + ], 1;mov rdi, r9": 4,
                "jbe ;mov byte [rax + ], 1;mov rdi, r9;jmp ;mov qword [rax + ], r9": 4,
                "mov rdi, r8;jmp ;call fcn.0042e8e0;ud2;call fcn.0042e8e0": 4,
                "cmp rsp, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_38h], rbp;sub rsp, 8": 1,
                "test rdi, rdi;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 4,
                "mov rax, r8;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "shl r9, cl;and r9, r8;add rdi, r9;mov r8, rax;movabs rax, ": 3,
                "jae ;add rdi, ;mov byte [rbx + rsi - 1], dil;jmp ;test rdi, rdi": 3,
                "ud2;call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.00474ec0": 2,
                "jg ;jmp ;mov qword [arg_28h], rcx;mov qword [rsp], rax;mov qword [var_8h], ": 3,
                "jmp ;mov qword [arg_28h], rcx;mov qword [rsp], rax;mov qword [var_8h], ;call fcn.00474cb0": 3,
                "mov rax, qword [arg_28h];lea rcx, [rax + ];mov rax, qword [arg_20h];cmp rcx, ;jl ": 3,
                "jmp fcn.004750f0;int3;int3;int3;int3": 3,
                "movzx ebx, byte [rcx + rax];cmp bl, ;jne ;lea rsi, [rax + 1];cmp rsi, rdx": 4,
                "jne ;lea rsi, [rax + 1];cmp rsi, rdx;jne ;cmp byte [rcx + ], 0": 4,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.00475310;mov rbp, qword [var_10h];add rsp, ": 4,
                "inc rax;mov qword [rcx + ], rax;mov rbp, qword [rsp];add rsp, 8;ret": 3,
                "int3;int3;int3;mov rax, qword [arg_8h];mov rcx, qword [rax + ]": 7,
                "mov rax, qword [arg_8h];mov rcx, qword [rax + ];cmp rcx, ;jg ;xor edx, edx": 4,
                "lea rdi, [rbx + rbx*4];movzx r8d, byte [rdx + rax];add r8d, ;movzx r8d, r8b;lea rbx, [r8 + rdi*2]": 4,
                "neg rcx;cmp rcx, ;sbb rdi, rdi;lea r8, [rbx - ];neg r8": 4,
                "cmp rcx, ;sbb rdi, rdi;lea r8, [rbx - ];neg r8;cmp r8, ": 4,
                "mov rcx, r8;mov edi, 1;shl rdi, cl;and rdi, r9;lea r8, [r10 + 1]": 4,
                "shl r10, cl;sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp];mov rax, qword [arg_18h]": 1,
                "mov rcx, r9;mov r10d, 1;shl r10, cl;and r10, r11;lea r11, [r10 - 1]": 3,
                "jmp ;mov rax, qword [rdx];shr rax, cl;and rax, r9;mov qword [rdx], rax": 3,
                "mov rax, qword [rsp + 8];mov rdx, qword [rax];test rdx, rdx;jne ;mov qword [rsp + ], 0": 2,
                "jne ;mov qword [rsp + ], 0;ret;bsr rbx, rdx;mov rsi, ": 2,
                "lea rdx, [rdx - ];mov qword [rax + 8], rdx;mov qword [rsp + ], rsi;ret;int3": 2,
                "shr rcx, ;mov edx, edx;mov rbx, qword [arg_10h];mov rsi, rbx;shr rbx, ": 3,
                "add rcx, rdi;mov rdi, rdx;shr rdx, ;add rcx, rdx;mov edx, ebx": 2,
                "mov rcx, qword [arg_18h];add rcx, qword [rax + 8];add rcx, ;mov qword [rax + 8], rcx;ret": 2,
                "sub rsp, ;mov qword [var_30h], rbp;lea rbp, [var_30h];mov rax, qword [arg_48h];mov rdx, qword [arg_40h]": 3,
                "mov qword [var_20h], rbx;lea rax, [r8 + r8*2];lea rcx, [];mov rbx, qword [rcx + rax*8 + 8];mov rsi, rax": 3,
                "mov r8d, 1;shl r8, cl;and r8, rbx;mov rcx, rdx;mov ebx, 1": 2,
                "add rax, rbx;cmp rdx, rax;jl ;mov byte [arg_68h], 1;mov rbp, qword [var_30h]": 2,
                "mov rbp, qword [var_30h];add rsp, ;ret;mov byte [arg_68h], 0;mov rbp, qword [var_30h]": 2,
                "shl rdx, cl;and rdx, rdi;mov qword [r9], rdx;mov rdi, qword [r9 + 8];lea rbx, [rbx + rdi]": 2,
                "lea rbx, [rbx + rdi];lea rbx, [rbx - ];mov qword [r9 + 8], rbx;mov rcx, r9;mov rdx, rsi": 2,
                "and rax, r9;mov qword [rdx], rax;mov qword [rdx + 8], r10;cmp r8, ;jmp ": 2,
                "lea rbp, [var_28h];mov rcx, qword [arg_38h];mov rdx, qword [rcx + 8];lea rbx, [rdx + ];neg rbx": 2,
                "lea r12, [rax - 1];cmp r12, ;jb ;jmp ;mov rdx, qword [arg_68h]": 3,
                "mov rdx, qword [arg_68h];mov r12, rax;jmp ;mov byte [r14 + rax], r15b;lea rax, [r13 + 1]": 3,
                "jmp ;lea rax, [r12 - ];neg rax;mov qword [rdx + ], rax;add rbx, r9": 3,
                "lea rax, [r12 - ];neg rax;mov qword [rdx + ], rax;add rbx, r9;mov qword [rdx + ], rbx": 3,
                "mov qword [var_18h], rcx;mov qword [var_20h], r8;call fcn.00476150;cmp byte [var_28h], 0;je ": 2,
                "mov rbp, qword [var_50h];add rsp, ;ret;mov byte [arg_78h], 0;mov rbp, qword [var_50h]": 1,
                "xor edi, edi;jmp ;xorps xmm0, xmm0;mov rcx, qword [arg_68h];movups xmmword [rcx + ], xmm0": 1,
                "mov rcx, qword [arg_68h];movups xmmword [rcx + ], xmm0;movzx eax, byte [rax + ];mov byte [rcx + ], al;mov byte [arg_78h], 1": 1,
                "movups xmmword [rcx + ], xmm0;movzx eax, byte [rax + ];mov byte [rcx + ], al;mov byte [arg_78h], 1;mov rbp, qword [var_50h]": 1,
                "cmp qword [rax + 8], 0;jbe ;mov byte [rcx], ;mov qword [rax + ], 1;inc qword [rax + ]": 1,
                "cmp qword [rdi + 8], rsi;jne ;movzx ebx, byte [rdi + ];cmp byte [rdx + ], bl;sete bl": 2,
                "movzx ebx, byte [rdi + ];cmp byte [rdx + ], bl;sete bl;test bl, bl;je ": 2,
                "je ;mov qword [var_48h], 0;xorps xmm0, xmm0;movups xmmword [var_50h], xmm0;mov rcx, qword [rdx]": 2,
                "mov rbx, rax;movabs rax, ;mov rsi, rdx;mul rcx;shr rdx, 3": 2,
                "mov rsi, rdx;mul rcx;shr rdx, 3;lea rdi, [rdx + rdx*4];shl rdi, 1": 2,
                "cmp qword [rbx + 8], rsi;jbe ;movzx ecx, byte [rax + rcx - 1];cmp cl, ;je ": 2,
                "jbe ;movzx ecx, byte [rax + rcx - 1];cmp cl, ;je ;test rax, rax": 2,
                "cmp cl, ;je ;test rax, rax;jne ;mov qword [rbx + ], 0": 2,
                "sub r8, r9;mov r9, r11;sub r11, rbx;mov rbx, qword [arg_70h];mov r12, qword [rbx]": 1,
                "mov r10, qword [arg_78h];xor r13d, r13d;jmp ;inc r13;mov rax, qword [var_40h]": 1,
                "sub r12, r13;lea r15, [r12 - 1];cmp r15, ;jae ;lea r15, []": 1,
                "lea r15, [];mov r12, qword [r15 + r12*8 - 8];test r12d, r12d;je ;mov eax, edi": 1,
                "mov eax, edi;xor edx, edx;div r12d;mov rdx, qword [r10];cmp qword [r10 + 8], r13": 1,
                "mov qword [r10 + ], rax;mov rax, qword [var_40h];add rax, r14;mov qword [r10 + ], rax;movzx eax, byte [rbx + ]": 1,
                "mov rax, qword [var_40h];add rax, r14;mov qword [r10 + ], rax;movzx eax, byte [rbx + ];mov byte [r10 + ], al": 1,
                "add rax, r12;mov qword [r10 + ], rax;movzx eax, byte [rbx + ];mov byte [r10 + ], al;mov eax, 1": 1,
                "lea rbp, [rsp];mov rax, qword [arg_38h];mov rcx, rax;shl rax, 1;mov rdx, qword [arg_30h]": 1,
                "ret;mov byte [arg_40h], 0;mov rbp, qword [rsp];add rsp, 8;ret": 2,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 0;mov rax, qword [arg_78h];lea rcx, [rax + 4]": 2,
                "mov qword [var_8h], rdx;mov qword [var_10h], rcx;mov qword [var_18h], rax;call fcn.00444c60;mov rax, qword [var_20h]": 4,
                "mov qword [var_10h], rcx;mov qword [var_18h], rax;call fcn.00444c60;mov rax, qword [var_20h];mov rcx, qword [var_28h]": 4,
                "mov qword [var_18h], rax;call fcn.00444c60;mov rax, qword [var_20h];mov rcx, qword [var_28h];mov qword [arg_88h], rax": 2,
                "cmp rbx, ;sbb r9, r9;mov r10, rcx;mov rcx, rsi;mov r11, rax": 3,
                "mov r10, rcx;mov rcx, rsi;mov r11, rax;shr rax, cl;mov rcx, rdx": 3,
                "and r11, r8;mov rcx, rbx;mov r12d, 1;shl r12, cl;and r12, r9": 3,
                "lea rdx, [r12 - 1];mov r8, rdx;and rdx, rsi;test rdi, rax;cmp rbx, r9": 3,
                "mov r8, rdx;and rdx, rsi;test rdi, rax;cmp rbx, r9;jne ": 3,
                "cmp rbx, r9;jne ;test rsi, r8;je ;lea rax, []": 3,
                "mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rcx;call fcn.00459210;mov rax, qword [var_150h]": 3,
                "mov rax, qword [arg_198h];mov qword [var_8h], rax;mov qword [var_10h], rdx;mov qword [var_18h], rsi;mov qword [var_20h], rbx": 3,
                "jmp ;test r11, r9;jne ;lea rcx, [rbx + 1];test rdi, rax": 3,
                "je ;cmp bl, ;ja ;cmp bl, ;jne ": 2,
                "cmp bl, ;jne ;lea rdi, [rsi + 1];mov r8, rsi;cmp rdi, ": 2,
                "call fcn.004776c0;mov rax, qword [var_70h];mov rcx, qword [var_68h];mov rdx, qword [var_60h];mov qword [arg_1d0h], rdx": 2,
                "add rsp, ;ret;mov qword [var_a0h], rsi;mov qword [var_f0h], 0;movups xmmword [var_f8h], xmm0": 2,
                "ret;mov qword [var_a0h], rsi;mov qword [var_f0h], 0;movups xmmword [var_f8h], xmm0;lea rbx, [var_f0h]": 2,
                "mov qword [var_f0h], 0;movups xmmword [var_f8h], xmm0;lea rbx, [var_f0h];mov qword [var_158h], rbx;mov qword [var_160h], ": 2,
                "lea rcx, [var_158h];mov qword [var_8h], rcx;mov qword [var_10h], rdi;call fcn.00475db0;movzx edi, byte [var_18h]": 1,
                "mov qword [var_8h], rcx;mov qword [var_10h], rdi;call fcn.00475db0;movzx edi, byte [var_18h];movzx eax, byte [var_7fh]": 1,
                "movzx ebx, byte [arg_1b8h];mov rsi, qword [var_a0h];mov r8, qword [arg_1c0h];mov r10, qword [var_148h];jmp ": 1,
                "mov qword [var_3e8h], rbp;lea rbp, [var_3e8h];mov qword [var_80h], 0;lea rdi, [var_88h];xorps xmm0, xmm0": 1,
                "lea rbp, [rsp - ];call fcn.00458aec;mov rbp, qword [rbp];lea rax, [var_80h];mov qword [rsp], rax": 1,
                "movzx eax, byte [arg_418h];mov byte [var_58h], al;call fcn.004776c0;mov rax, qword [var_70h];mov rcx, qword [var_68h]": 1,
                "mov qword [var_78h], rax;mov qword [var_8h], rax;call fcn.004751d0;mov rax, qword [arg_410h];test rax, rax": 1,
                "mov rax, qword [arg_420h];mov qword [var_8h], rax;mov rax, qword [arg_428h];mov qword [var_10h], rax;mov rax, qword [arg_430h]": 1,
                "movups xmmword [var_3d8h], xmm0;lea rax, [var_80h];mov qword [var_3b8h], rax;mov qword [var_3c0h], ;mov qword [var_3c8h], ": 1,
                "movzx edx, byte [arg_418h];cmp dl, ;ja ;cmp dl, ;jne ": 1,
                "ja ;cmp dl, ;jne ;dec rax;mov rcx, qword [arg_410h]": 1,
                "dec rax;mov rcx, qword [arg_410h];test rcx, rcx;jmp ;cmp dl, ": 1,
                "test rcx, rcx;jmp ;mov rax, qword [arg_410h];test rax, rax;jmp ": 2,
                "test rax, rax;jmp ;cmp dl, ;je ;cmp dl, ": 1,
                "cmp qword [arg_c8h], rcx;jg ;mov rbx, rcx;movzx esi, byte [arg_a0h];test rsi, rsi": 2,
                "jge ;cmp rdx, rbx;mov rcx, qword [arg_88h];mov qword [rsp], rcx;mov rcx, qword [arg_90h]": 2,
                "cmovg rdx, rbx;lea rcx, [rdx - 1];mov qword [var_50h], rcx;add eax, ;mov byte [var_58h], al": 1,
                "mov qword [rsp], rax;mov rax, qword [arg_90h];mov qword [var_8h], rax;mov rax, qword [arg_98h];mov qword [var_10h], rax": 13,
                "sub rdx, rsi;test rdx, rdx;mov eax, 0;cmovg rax, rdx;mov qword [var_50h], rax": 1,
                "mov byte [rsi + rcx], ;mov byte [rsi + rcx + 1], al;mov qword [arg_e8h], rsi;mov qword [arg_f0h], rdx;mov qword [arg_f8h], rbx": 1,
                "mov rbx, qword [var_38h];lea rdx, [rax + 2];movzx eax, byte [arg_e0h];mov rcx, qword [arg_90h];jmp ": 1,
                "cmp rcx, rbx;jbe ;lea rdx, [rcx - 1];mov rbx, qword [arg_6b0h];mov qword [var_18h], rbx": 1,
                "lea rax, [var_20h];mov qword [rsp], rax;lea rcx, [rdx + rdx];lea rcx, [rcx + 1];mov qword [var_8h], rcx": 1,
                "movzx r10d, byte [rsp + rdx + ];cmp dil, r8b;je ;mov esi, 1;cmp r10b, r8b": 1,
                "mov esi, 1;cmp r10b, r8b;je ;bt eax, 0;jb ": 1,
                "mov qword [rsp], rcx;call fcn.00474b50;jmp ;mov qword [rsp], rcx;lea rax, [rdx + 1]": 1,
                "jmp ;mov qword [rsp], rcx;lea rax, [rdx + 1];mov qword [var_8h], rax;call fcn.004751d0": 1,
                "cmp rdx, rbx;je ;lea rdx, [rcx + rcx];lea rdx, [rdx - 1];dec rbx": 1,
                "mov rax, qword [arg_90h];mov byte [rax + rcx], ;cmp qword [arg_c8h], 0;je ;mov rcx, qword [arg_b0h]": 2,
                "cmp qword [arg_c8h], 0;je ;mov rcx, qword [arg_b0h];cmp qword [arg_b8h], 0;jbe ": 2,
                "lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], rdx;mov qword [var_18h], rbx": 4,
                "mov esi, ;mov qword [var_58h], rdx;lea rdi, [rcx + 1];cmp rdi, rbx;ja ": 1,
                "add edx, ;mov byte [rax + rdi + 1], dl;mov qword [arg_f0h], rax;mov qword [arg_f8h], rcx;mov qword [arg_100h], rbx": 1,
                "lea rdx, [];mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rdi;mov qword [var_18h], rbx": 1,
                "add rdx, r9;mov r8, r9;sar r9, ;sar rdx, 3;sub rdx, r9": 1,
                "mov qword [var_70h], rdx;mov qword [var_68h], r8;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rsi": 1,
                "lea rcx, [rax + 2];mov rdx, qword [var_70h];mov rdi, qword [arg_98h];mov r8, qword [var_68h];jmp ": 1,
                "mov r10, rdx;imul r8;mov r8, qword [var_58h];add rdx, r8;sar rdx, 3": 1,
                "movzx r9d, dl;imul r9d, r9d, ;shr r9d, ;lea r9d, [r9 + r9*4];shl r9d, 1": 1,
                "mov r8, qword [var_68h];mov r10, qword [var_70h];jmp ;mov qword [arg_98h], rcx;mov byte [var_46h], sil": 1,
                "mov rbx, qword [var_38h];lea rdi, [rcx + 1];mov rcx, qword [arg_98h];mov rdx, qword [var_58h];movzx esi, byte [var_46h]": 1,
                "cmp rdi, r8;ja ;mov qword [var_48h], rdi;lea r9, [rdi + rdx];lea r9, [r9 - 1]": 1,
                "lea r9, [rdi + rdx];lea r9, [r9 - 1];mov qword [arg_98h], r9;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rbp, qword [var_80h];add rsp, ;ret;mov qword [var_68h], rax;lea rcx, []": 1,
                "ret;mov qword [var_68h], rax;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rbx": 1,
                "mov rcx, qword [arg_98h];jmp ;mov rsi, qword [arg_c8h];cmp rsi, rax;cmovl rax, rsi": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rdi;mov qword [var_10h], rax;call fcn.00459210;mov rax, qword [var_60h]": 1,
                "jmp ;mov byte [rdx + rax], ;inc rbx;mov rax, rsi;cmp qword [arg_d0h], rbx": 1,
                "mov qword [var_48h], rbx;mov qword [var_58h], rax;lea rbx, [];mov qword [rsp], rbx;mov qword [var_8h], rdx": 1,
                "mov rdx, qword [var_28h];mov rax, qword [var_30h];mov rcx, qword [var_38h];lea rsi, [rax + 1];mov rax, qword [var_58h]": 1,
                "lea rsi, [rax + 1];mov rax, qword [var_58h];mov rbx, qword [var_48h];jmp ;mov rbx, rdx": 1,
                "mov byte [rbx + rax], ;mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], rdx;mov rax, qword [arg_90h]": 2,
                "mov rcx, qword [arg_98h];mov rsi, qword [arg_a0h];sub rcx, qword [rsi];test rcx, rcx;jl ": 2,
                "mov qword [var_8h], rsi;mov qword [var_10h], rdx;mov qword [var_18h], rcx;mov qword [var_20h], ;setl byte [var_28h]": 2,
                "mov qword [var_20h], ;setl byte [var_28h];mov byte [var_29h], 1;call fcn.004792d0;mov rax, qword [var_38h]": 1,
                "mov qword [var_18h], rdx;mov qword [var_20h], rsi;call fcn.00440d10;mov rax, qword [var_28h];mov rcx, qword [var_30h]": 2,
                "mov qword [var_10h], rcx;mov qword [var_18h], rdx;mov qword [var_20h], rbx;call fcn.00440d10;mov rax, qword [var_28h]": 10,
                "mov rbx, qword [var_28h];mov rax, qword [var_30h];mov rdx, qword [var_38h];lea rcx, [rax + 1];mov rax, qword [arg_78h]": 1,
                "jmp ;call fcn.00456090;jmp fcn.00478980;int3;int3": 1,
                "cmp rax, ;jae ;mov rcx, qword [arg_70h];cmp rcx, ;jne ": 2,
                "mov rcx, qword [arg_70h];cmp rcx, ;jne ;cmp rax, ;jge ": 5,
                "add rsp, ;ret;lea rcx, [rax + rax];lea rcx, [rcx + 2];test rcx, rcx": 5,
                "shl rax, 1;cmp rax, rcx;ja ;cmp rcx, ;ja ": 10,
                "lea rax, [rbx + rdx*2];mov ecx, 2;jmp ;mov qword [rsp], 0;xorps xmm0, xmm0": 2,
                "mov rcx, qword [var_48h];mov qword [arg_78h], rcx;mov qword [arg_80h], rax;mov rbp, qword [var_58h];add rsp, ": 5,
                "mov ecx, 2;jmp ;test rax, rax;mov qword [rsp], 0;xorps xmm0, xmm0": 3,
                "cmp rbx, rsi;ja ;mov rdi, qword [arg_90h];mov qword [var_60h], rsi;mov qword [var_78h], rdi": 3,
                "mov rdi, qword [arg_90h];mov qword [var_60h], rsi;mov qword [var_78h], rdi;add rdx, rdi;mov qword [rsp], rdx": 3,
                "mov qword [arg_c8h], rax;mov rbp, qword [var_80h];add rsp, ;ret;mov qword [var_70h], rax": 6,
                "mov rsi, qword [var_38h];mov rdi, qword [var_28h];mov rax, qword [var_70h];mov rcx, qword [var_58h];mov rdx, qword [arg_98h]": 3,
                "call fcn.00456090;jmp fcn.00478e30;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "jg ;mov qword [var_57h], 0;xorps xmm0, xmm0;movups xmmword [var_58h], xmm0;movups xmmword [var_68h], xmm0": 3,
                "mov rcx, rsi;shl rsi, 1;lea rdx, [rax - 1];lea rdi, [];movzx r8d, byte [rsi + rdi + 1]": 2,
                "shl rsi, 1;lea rdx, [rax - 1];lea rdi, [];movzx r8d, byte [rsi + rdi + 1];cmp rdx, ": 2,
                "mov rax, qword [arg_b8h];mov qword [var_8h], rax;mov qword [var_10h], rdx;mov qword [var_18h], rbx;mov qword [var_20h], rcx": 2,
                "jmp ;mov byte [rsp + rcx + ], sil;mov rsi, rdx;mov rax, r8;mov rdx, rdi": 1,
                "mov rsi, rdx;mov rax, r8;mov rdx, rdi;cmp rsi, rdx;jb ": 1,
                "xor edx, edx;div rdi;mov rdx, rax;imul rax, rdi;sub rsi, rax": 1,
                "jne ;cmp r8d, ;jne ;lea r8, [rcx + 2];cmp r8, rdx": 1,
                "mov r10d, ;mov word [rbx + rcx], r10w;lea r10, [rcx + 3];movzx r11d, byte [rdi];shr r11b, 4": 1,
                "movzx r11d, r11b;lea r12, [];movzx r11d, byte [r12 + r11];cmp r10, rdx;ja ": 1,
                "movzx r11d, byte [r12 + r11];cmp r10, rdx;ja ;mov byte [rcx + rbx + 2], r11b;lea rcx, [r10 + 1]": 1,
                "mov qword [var_20h], r10;call fcn.00440d10;mov rbx, qword [var_28h];mov rax, qword [var_30h];mov rdx, qword [var_38h]": 1,
                "call fcn.00440d10;mov rbx, qword [var_28h];mov rax, qword [var_30h];mov rdx, qword [var_38h];lea r10, [rax + 1]": 1,
                "mov r9, qword [var_48h];jmp ;mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], rdx": 1,
                "jmp ;mov qword [var_50h], rdx;mov qword [var_60h], rbx;mov qword [rsp], rdi;mov qword [var_8h], rax": 1,
                "mov qword [var_50h], rdx;mov qword [var_60h], rbx;mov qword [rsp], rdi;mov qword [var_8h], rax;call fcn.00462c90": 1,
                "lea rax, [rcx + 1];cmp rax, rdx;ja ;mov byte [rbx + rcx], sil;mov qword [arg_a8h], rbx": 1,
                "add rsp, ;ret;lea rsi, [];mov qword [rsp], rsi;mov qword [var_8h], rbx": 7,
                "mov rsi, qword [arg_78h];mov qword [var_8h], rsi;mov qword [var_10h], rax;mov qword [var_18h], rdx;mov qword [var_20h], rcx": 1,
                "jge ;mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], rdx;mov dword [var_18h], eax": 2,
                "mov dword [var_18h], eax;mov byte [var_1ch], sil;movzx eax, byte [arg_6dh];mov byte [var_1dh], al;movzx eax, byte [arg_6eh]": 2,
                "mov rcx, qword [var_28h];mov rdx, qword [var_30h];lea rbx, [rcx + 1];cmp rbx, rdx;ja ": 5,
                "mov rcx, qword [var_30h];mov rdx, qword [var_38h];lea rbx, [rcx + 1];mov rcx, qword [arg_58h];jmp ": 2,
                "lea r9, [rax + 1];movzx eax, byte [var_43h];mov rcx, qword [var_60h];mov rdx, rcx;mov rbx, qword [var_58h]": 2,
                "mov rcx, qword [var_28h];mov eax, dword [arg_90h];mov rdx, qword [arg_80h];mov rbx, qword [var_60h];jmp ": 2,
                "mov rbx, qword [var_60h];jmp ;cmp edx, ;jge ;mov eax, edx": 2,
                "jmp ;cmp edx, ;jge ;mov eax, edx;jmp ": 2,
                "jl ;mov rdi, rcx;mov rcx, rax;mov r8d, edx;sar edx, cl": 2,
                "lea r9, [rbx + 1];and edx, ;lea r10, [];movzx edx, byte [r10 + rdx];cmp r9, rsi": 2,
                "mov rax, qword [var_30h];mov rsi, qword [var_38h];lea r9, [rax + 1];mov rax, qword [var_48h];mov rcx, rax": 2,
                "mov rsi, qword [var_38h];lea r9, [rax + 1];mov rax, qword [var_48h];mov rcx, rax;movzx edx, byte [var_43h]": 2,
                "lea r9, [rax + 1];mov rax, qword [var_48h];mov rcx, rax;movzx edx, byte [var_43h];mov rbx, qword [var_60h]": 2,
                "mov edx, dword [arg_90h];mov rbx, qword [var_58h];jmp ;mov rax, qword [arg_80h];lea rcx, [rax + 2]": 2,
                "mov rdi, qword [arg_80h];jmp ;mov byte [var_43h], dl;lea rax, [];mov qword [rsp], rax": 1,
                "mov qword [rsp], rax;mov qword [var_8h], rsi;mov qword [var_10h], rcx;mov qword [var_18h], rbx;mov qword [var_20h], rdi": 1,
                "mov rbx, qword [var_38h];lea rdi, [rax + 1];mov rax, qword [arg_80h];movzx edx, byte [var_43h];mov r8d, dword [arg_90h]": 1,
                "mov rcx, qword [arg_30h];jmp ;mov rax, rbx;mov rcx, rdx;test rax, rax": 1,
                "mov rdi, rsi;neg rsi;sar rsi, ;and rsi, 2;add rcx, rsi": 2,
                "and rsi, 2;add rcx, rsi;cmp dl, ;ja ;cmp dl, ": 2,
                "cmp dl, ;je ;cmp dl, ;je ;lea ebx, [rdx - ]": 2,
                "mov rax, qword [];mov rcx, qword [];mov dword [arg_48h], 0;mov byte [arg_4ch], 0;xorps xmm0, xmm0": 14,
                "mov qword [arg_50h], rax;mov qword [arg_58h], rbx;xorps xmm0, xmm0;movups xmmword [arg_60h], xmm0;mov rbp, qword [var_20h]": 2,
                "cmp dl, ;jne ;cmp dl, ;jne ;mov eax, 8": 2,
                "cmp dl, ;jne ;mov eax, 8;cmp rdi, rax;jl ": 2,
                "mov r9d, 1;jmp ;xor r8d, r8d;xor r9d, r9d;jmp ": 1,
                "mov edx, esi;xor ecx, ecx;jmp ;cmp esi, ;jg ": 1,
                "mov rbp, qword [var_20h];add rsp, ;ret;cmp dl, ;jne ": 1,
                "mov rax, rcx;mov rbx, rdi;mov edx, ;xor ecx, ecx;jmp ": 1,
                "cmp qword [var_18h], ;jne ;mov rax, qword [var_a0h];mov qword [rsp], rax;mov rcx, qword [var_58h]": 1,
                "mov rcx, qword [var_58h];mov qword [var_8h], rcx;mov byte [var_10h], ;call fcn.004031f0;cmp qword [var_18h], ": 1,
                "mov rcx, qword [arg_c8h];lea rdx, [rcx + rcx*2];lea rdx, [rdx - 6];lea rcx, [rcx + rcx*2];shr rdx, ": 1,
                "test rcx, rcx;jle ;mov qword [var_a8h], rax;mov qword [var_78h], rbx;mov qword [var_80h], rsi": 1,
                "call fcn.0047a9c0;mov rax, qword [var_38h];mov rcx, qword [var_30h];mov rdx, qword [var_28h];mov rbx, qword [var_20h]": 1,
                "mov rax, qword [var_20h];test rax, rax;jl ;cmp rax, 4;ja ": 2,
                "add rsp, ;ret;mov qword [rsp], 0;mov qword [var_8h], rax;mov qword [var_10h], rbx": 1,
                "mov qword [arg_d0h], rcx;mov qword [arg_d8h], rax;xorps xmm0, xmm0;movups xmmword [arg_e0h], xmm0;mov rbp, qword [var_b0h]": 1,
                "mov qword [rsp], rax;mov rcx, qword [var_58h];mov qword [var_8h], rcx;call fcn.00462c90;mov rax, qword [var_18h]": 1,
                "movups xmmword [arg_e0h], xmm0;mov rbp, qword [var_b0h];add rsp, ;ret;cmp rax, 1": 1,
                "mov qword [var_8h], rcx;call fcn.00463530;cmp byte [var_10h], 0;jne ;movzx eax, byte [var_46h]": 1,
                "cmp r9w, ax;jae ;lea rdx, [rdx + rsi];lea rdx, [rdx + 1];jmp ": 1,
                "lea rdx, [rdx + 1];jmp ;mov rdi, r8;mov rdx, rsi;jmp ": 3,
                "sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp];mov eax, dword [arg_28h];mov rcx, qword [arg_10h]": 2,
                "mov eax, dword [arg_88h];cmp eax, ;jg ;cmp eax, ;jl ": 3,
                "mov qword [var_58h], r8;mov qword [rsp], r8;mov qword [var_8h], rsi;mov qword [var_10h], rbx;mov word [var_18h], ax": 3,
                "movzx eax, word [rbx + rax*2];mov esi, dword [arg_88h];cmp si, ax;jb ;or rdx, 1": 3,
                "mov rcx, qword [var_38h];cmp rax, rcx;jl ;mov eax, 1;mov byte [arg_90h], al": 3,
                "jl ;mov eax, 1;mov byte [arg_90h], al;mov rbp, qword [var_78h];add rsp, ": 6,
                "jb ;cmp esi, ;jge ;mov rax, qword [var_70h];mov qword [rsp], rax": 3,
                "mov rbp, qword [rsp];add rsp, 8;ret;call fcn.00456090;jmp fcn.0047be50": 3,
                "mov qword [rsp], rax;mov rcx, qword [rsp + ];mov qword [rsp + 8], rcx;call fcn.004034b0;mov rax, qword [rsp + ]": 24,
                "mov qword [rsp], rsi;mov qword [rsp + 8], rcx;mov qword [rsp + ], rbx;call fcn.00402ce0;movzx ecx, byte [rsp + ]": 30,
                "call fcn.00402ce0;movzx ecx, byte [rsp + ];mov rax, qword [rsp + ];mov rdx, qword [rsp + ];jmp ": 41,
                "xor ecx, ecx;jmp ;mov qword [rsp], rsi;mov qword [rsp + 8], rcx;mov qword [rsp + ], rbx": 11,
                "mov qword [rsp + ], rax;mov rdx, qword [rsp + ];lea rbx, [rdx + rax*4];mov qword [rsp], rbx;mov qword [rsp + 8], rcx": 2,
                "ucomiss xmm0, xmm1;jne ;jnp ;mov byte [rsp + ], 0;ret": 2,
                "mov qword [rsp], rdx;mov qword [rsp + 8], rcx;call fcn.0047c1e0;mov rcx, qword [rsp + ];mov rax, qword [rsp + ]": 1,
                "mov byte [var_4fh], dl;mov qword [rsp], rcx;mov rbx, qword [arg_a8h];mov qword [var_8h], rbx;mov qword [var_10h], rax": 2,
                "and rax, ;movzx edx, byte [var_4fh];and edx, ;or rdx, rax;mov rax, qword [var_18h]": 2,
                "jne ;mov qword [var_50h], rdx;mov qword [var_78h], rbx;lea rax, [];test byte [rax], al": 2,
                "mov qword [rsp], rdx;call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [var_58h];mov qword [rax], rcx": 2,
                "add rsp, ;ret;lea rdi, [rax + ];mov rsi, rax;mov rax, qword [arg_a0h]": 2,
                "mov rax, qword [arg_a0h];call fcn.004580f0;lea rdi, [rsi + ];mov r8, rax;mov rax, qword [arg_a8h]": 2,
                "mov rax, rcx;jmp ;mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax": 2,
                "mov qword [var_8h], rax;call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.0047c910": 2,
                "mov rcx, qword [var_e8h];test rcx, rcx;je ;movzx edx, byte [rcx + ];mov ebx, edx": 3,
                "mov qword [var_38h], rdx;test cl, ;jne ;cmp rdx, 8;je ": 2,
                "mov rax, qword [var_8h];mov qword [var_a8h], rax;lea rcx, [];mov qword [rsp], rcx;call fcn.0040d880": 2,
                "mov rax, qword [var_8h];lea rcx, [];mov qword [rax], rcx;cmp dword [], 0;jne ": 133,
                "mov rax, qword [var_a0h];mov rcx, qword [rax + ];mov qword [var_30h], rcx;mov rdx, qword [rax + 8];mov qword [var_28h], rdx": 1,
                "mov qword [var_40h], rdx;mov rax, qword [rax + ];mov qword [var_48h], rax;lea rbx, [];mov qword [rsp], rbx": 1,
                "call fcn.0040d880;mov rax, qword [var_8h];lea rcx, [];mov qword [rax], rcx;mov rcx, qword [var_40h]": 1,
                "jne ;mov rcx, qword [var_b8h];mov qword [rax + 8], rcx;mov qword [arg_118h], rax;mov rbp, qword [var_f8h]": 1,
                "mov rcx, qword [var_b8h];mov qword [rax + 8], rcx;mov qword [arg_118h], rax;mov rbp, qword [var_f8h];add rsp, ": 1,
                "mov rcx, qword [var_80h];mov qword [rax + ], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_d0h]": 1,
                "mov rax, rcx;jmp ;mov rax, qword [var_a0h];mov rcx, qword [rax + 8];mov qword [var_50h], rcx": 1,
                "jmp ;cmp rdx, 4;je ;mov rax, qword [arg_8h];movzx ecx, byte [rax]": 1,
                "test cl, 4;jne ;xorps xmm0, xmm0;movups xmmword [arg_48h], xmm0;mov rbp, qword [var_30h]": 3,
                "mov qword [var_8h], rbx;mov qword [var_10h], rbx;call fcn.00440c00;mov rax, qword [var_18h];mov rcx, qword [var_48h]": 5,
                "mov rdx, qword [arg_70h];mov rbx, rdx;sar rdx, 8;mov byte [rax + 1], dl;cmp rcx, 2": 4,
                "neg rdx;sar rdx, ;and rdx, 2;add rdx, rbx;mov rbx, qword [arg_78h]": 3,
                "add rsp, ;ret;mov qword [rsp], rdx;mov qword [rsp + 8], ;call fcn.00478cf0": 1,
                "ja ;cmp rcx, ;je ;cmp rcx, ;je ": 2,
                "ret;add rax, ;mov qword [arg_10h], rax;ret;cmp rcx, ": 5,
                "sar rcx, ;and rcx, 1;add rax, rcx;mov qword [arg_40h], rax;mov qword [arg_48h], rdx": 2,
                "int3;mov rax, qword [rsp + 8];mov rax, qword [rax];mov qword [rsp + ], rax;ret": 2,
                "cmp rcx, ;ja ;mov rax, qword [rax];shl rax, 3;mov qword [rsp + ], rax": 2,
                "mov rbp, qword [rsp + ];add rsp, ;ret;mov qword [rsp], rax;call fcn.0047d9e0": 2,
                "add rax, rdx;test rcx, rcx;jl ;cmp rcx, ;ja ": 3,
                "jne ;mov rax, qword [rax + ];mov qword [arg_38h], rax;mov rbp, qword [var_20h];add rsp, ": 3,
                "mov rbp, qword [var_20h];add rsp, ;ret;call fcn.00456090;jmp fcn.0047dce0": 3,
                "call fcn.00456090;jmp fcn.0047dce0;int3;mov rcx, qword gs:[];mov rcx, qword [rcx]": 3,
                "lea rbp, [rsp - ];call fcn.00458f2a;mov rbp, qword [rbp];mov rbp, qword [var_f8h];add rsp, ": 3,
                "mov rdx, qword [arg_108h];mov qword [rsp], rdx;mov dword [var_8h], ecx;call fcn.0043e670;mov rax, qword [var_10h]": 3,
                "cmp rcx, 1;jb ;mov edx, 1;lea rbx, [];mov qword [rax], rbx": 3,
                "mov edi, ;movzx r9d, word [r8 + ];test r9w, r9w;jne ;xor edi, edi": 3,
                "jmp ;inc r10;mov rdx, r12;mov qword [var_90h], rdx;cmp r10, rdi": 3,
                "mov qword [var_90h], rdx;cmp r10, rdi;jge ;mov r11, qword [r9 + r10*8];lea r12, [rdx + 1]": 3,
                "lea r12, [rcx + 1];lea rbx, [];mov rsi, qword [arg_108h];mov rdi, qword [var_68h];mov r8, qword [var_b8h]": 3,
                "mov rsi, qword [arg_108h];mov rdi, qword [var_68h];mov r8, qword [var_b8h];mov r9, qword [var_e0h];mov r10, qword [var_a8h]": 3,
                "mov r10, qword [var_a8h];mov r11, qword [var_c8h];mov rcx, rdx;mov rdx, qword [var_90h];jmp ": 3,
                "cmp rdi, rbx;jge ;mov r9, qword [rdx + rdi*8];lea r10, [r8 + 1];cmp r10, rsi": 2,
                "jne ;mov qword [rax + r8 + 8], r9;jmp ;mov r8, rdi;mov rdi, r12": 2,
                "jmp ;mov r8, rdi;mov rdi, r12;mov r13, rax;mov rax, r9": 2,
                "cmp rcx, ;je ;mov qword [rsp], rax;call fcn.0047d920;mov rax, qword [var_8h]": 1,
                "jmp ;mov rbx, qword [var_80h];add rbx, ;mov rcx, rbx;mov rdx, rax": 3,
                "lea rdi, [arg_110h];lea rsi, [];mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458f2a": 2,
                "mov rax, qword [arg_f8h];mov qword [rsp], rax;mov rax, qword [var_78h];mov qword [var_8h], rax;call fcn.0047dd50": 1,
                "mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458f2a;mov rbp, qword [rbp];mov byte [arg_160h], al": 1,
                "je ;mov qword [rsp], rax;call fcn.0047d920;mov rax, qword [rsp + 8];test rax, rax": 1,
                "test rax, rax;je ;mov eax, dword [rax];mov rcx, qword [rsp + ];mov qword [rsp], rcx": 1,
                "mov qword [rsp + ], rcx;mov rbp, qword [rsp + ];add rsp, ;ret;xorps xmm0, xmm0": 1,
                "call fcn.0047fc70;mov rax, qword [rsp + ];mov qword [rsp + ], rax;lea rdi, [rsp + ];lea rsi, [rsp + ]": 2,
                "call fcn.0047fe80;mov rax, qword [rsp + ];mov qword [rsp + ], rax;lea rdi, [rsp + ];lea rsi, [rsp + ]": 1,
                "mov rax, qword [arg_100h];movzx ecx, byte [rax + ];and ecx, ;cmp rcx, ;jne ": 2,
                "cmp rcx, ;jne ;mov qword [rsp], rax;mov rax, qword [arg_100h];mov qword [var_8h], rax": 2,
                "mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458f1c;mov rbp, qword [rbp];mov rcx, qword [var_80h]": 2,
                "lea rbp, [rsp - ];call fcn.00458f1c;mov rbp, qword [rbp];mov byte [arg_170h], al;mov rbp, qword [var_e8h]": 2,
                "movzx ecx, byte [rax + ];test cl, 1;je ;mov ecx, ;movzx edx, word [rax + ]": 4,
                "test cl, 1;je ;mov ecx, ;movzx edx, word [rax + ];test dx, dx": 3,
                "lea rax, [];mov qword [rsp + 8], rax;call fcn.0042f900;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "jmp ;and edx, ;movzx ebx, word [rax + ];add edx, ebx;movzx edx, dx": 1,
                "mov rax, qword [arg_48h];cmp rax, 1;je ;cmp rax, 2;je ": 2,
                "mov rbp, qword [rbp];mov rax, qword [arg_58h];test rax, rax;jge ;mov rbp, qword [var_40h]": 3,
                "jle ;mov qword [var_18h], rdx;mov ebx, dword [rdx + rax*8];mov qword [rsp], rcx;mov dword [var_8h], ebx": 3,
                "jmp fcn.0047f620;int3;int3;int3;int3": 3,
                "jmp ;mov rbx, qword [var_60h];inc rbx;mov rsi, qword [var_68h];mov rdi, qword [arg_90h]": 3,
                "movzx eax, word [rax + 1];rol ax, 8;mov qword [var_78h], rax;mov rax, qword [var_70h];mov rcx, qword [var_78h]": 3,
                "jmp ;mov rax, qword [arg_90h];mov qword [rsp], rax;mov rax, qword [var_60h];mov qword [var_8h], rax": 3,
                "cmp dl, ;jbe ;cmp dl, ;je ;cmp dl, ": 2,
                "test rcx, rcx;jl ;sub rbx, rdx;mov rsi, rbx;neg rbx": 2,
                "mov ebx, 1;jmp ;inc rbx;cmp rbx, rsi;jge ": 2,
                "sar rsi, ;and rsi, rbx;add rsi, rdx;mov r8, qword [arg_78h];cmp r8, rcx": 2,
                "jle ;lea rbx, [rax + rax*2];mov rsi, qword [rdx + rbx*8 + 8];test rsi, rsi;je ": 2,
                "mov rsi, qword [rdx + rbx*8];movups xmmword [var_38h], xmm0;test rsi, rsi;je ;lea rdi, [rsi + 3]": 2,
                "mov rax, qword [var_10h];mov rcx, qword [var_8h];test rax, rax;je ;mov qword [arg_98h], rcx": 2,
                "mov rax, qword [var_80h];inc rax;mov rcx, qword [arg_b8h];cmp rax, rcx;jge ": 2,
                "inc rax;mov rcx, qword [arg_b8h];cmp rax, rcx;jge ;mov qword [var_80h], rax": 2,
                "jle ;mov qword [var_78h], rbx;mov rax, qword [arg_e8h];mov qword [var_88h], rax;mov rcx, qword [arg_f0h]": 2,
                "movups xmmword [var_178h], xmm0;movups xmmword [var_188h], xmm0;movups xmmword [var_198h], xmm0;mov qword [var_1a8h], 0;lea rdi, [var_1b0h]": 3,
                "lea rbp, [rsp - ];call fcn.00458bc5;mov rbp, qword [rbp];lea rax, [var_1a8h];mov qword [var_188h], rax": 3,
                "mov rax, rdx;mov rcx, rsi;mov rdx, rbx;mov rbx, r10;mov rsi, r9": 2,
                "xor r10d, r10d;xor r11d, r11d;jmp ;mov byte [arg_288h], al;mov rbp, qword [var_200h]": 2,
                "jmp ;mov byte [arg_288h], al;mov rbp, qword [var_200h];add rsp, ;ret": 2,
                "mov rbp, qword [var_200h];add rsp, ;ret;lea rax, [];mov qword [rsp], rax": 2,
                "mov r8, qword [var_e8h];movzx r9d, byte [var_7fh];xor r10d, r10d;jmp ;mov r11, qword [var_a0h]": 2,
                "mov rdx, qword [var_110h];mov rbx, qword [var_b8h];mov rsi, qword [var_b0h];jmp ;mov rcx, qword [var_108h]": 1,
                "xor esi, esi;jmp ;mov rdi, qword [rdi + r8*8 + ];bt edi, 0;setb dil": 1,
                "mov rax, qword [var_88h];mov qword [var_8h], rax;call fcn.0047fc70;mov rax, qword [var_10h];mov qword [arg_160h], rax": 1,
                "mov qword [arg_160h], rax;lea rdi, [arg_168h];lea rsi, [var_18h];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 1,
                "mov qword [var_c8h], rax;mov qword [rsp], rcx;lea rax, [var_b8h];mov qword [var_8h], rax;call fcn.00480080": 1,
                "lea rax, [var_b8h];mov qword [var_8h], rax;call fcn.00480080;movzx eax, byte [var_78h];mov rcx, qword [var_10h]": 1,
                "mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458f1c;mov rbp, qword [rbp];mov byte [arg_1c8h], al": 1,
                "mov rcx, qword [arg_148h];xor esi, esi;jmp ;call fcn.0042e8e0;ud2": 1,
                "mov ecx, dword [rax + ];test ecx, ecx;jne ;lea rcx, [];mov qword [rsp], rcx": 3,
                "lea rcx, [];mov qword [rsp], rcx;call fcn.0040d880;mov rax, qword [var_78h];test byte [rax], al": 4,
                "movups xmmword [rcx + ], xmm0;movups xmm0, xmmword [rax + ];movups xmmword [rcx + ], xmm0;mov rax, qword [var_70h];mov qword [rsp], rax": 2,
                "call fcn.00481260;mov eax, dword [var_20h];mov rcx, qword [var_80h];mov dword [rcx + ], eax;cmp dword [], 0": 2,
                "mov rcx, qword [var_80h];mov dword [rcx + ], eax;cmp dword [], 0;jne ;mov rax, qword [arg_a8h]": 2,
                "lea rdi, [rcx + ];mov rax, qword [arg_a8h];call fcn.004580f0;jmp ;lea rdx, []": 2,
                "inc rbx;imul edx, edx, ;xor edx, esi;cmp rbx, rcx;jl ": 3,
                "mov rcx, qword [rax + ];mov rdx, qword [arg_38h];mov qword [rsp], rdx;call rcx;cmp qword [var_8h], ": 11,
                "jne ;lea rax, [];mov rcx, qword [arg_30h];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [var_8h], rax;call fcn.00481550;movzx eax, byte [var_10h];mov byte [arg_40h], al;mov rbp, qword [var_18h]": 3,
                "mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax;call fcn.0042f900;mov rax, qword [arg_10h]": 1,
                "call fcn.0042f900;mov rax, qword [arg_10h];mov rcx, qword [arg_18h];mov edx, dword [arg_8h];xor ebx, ebx": 1,
                "jne ;mov rax, qword [rsp + ];mov qword [rsp], rax;mov rcx, qword [rsp + ];mov qword [rsp + 8], rcx": 2,
                "mov rax, qword [rsp + ];mov qword [rsp], rax;mov rcx, qword [rsp + ];mov qword [rsp + 8], rcx;call fcn.00481de0": 2,
                "movzx eax, byte [rsp + ];jmp ;mov qword [rsp], rax;lea rax, [];mov qword [rsp + 8], rax": 2,
                "mov qword [rsp], rax;lea rax, [];mov qword [rsp + 8], rax;lea rax, [];mov qword [rsp + ], rax": 4,
                "cmp qword [rax + ], 0;je ;mov rcx, qword [arg_140h];movzx edx, byte [rcx + ];and edx, ": 3,
                "mov rsi, qword [var_48h];lea rdx, [rsi + 1];mov rsi, qword [arg_140h];mov rcx, rsi;mov rbx, rax": 3,
                "mov qword [var_b0h], rdx;mov qword [var_88h], rax;mov rdx, qword [var_a8h];mov rbx, qword [var_120h];mov rsi, qword [var_118h]": 2,
                "mov rcx, qword [var_b8h];mov rdx, qword [var_c0h];mov qword [var_30h], rdx;mov qword [var_60h], rcx;mov rax, qword [var_88h]": 1,
                "lea rdx, [rcx + 3];mov qword [var_108h], rdx;movzx ecx, word [rcx + 1];rol cx, 8;mov qword [var_110h], rcx": 1,
                "mov qword [var_110h], rcx;mov rcx, qword [var_110h];mov rdx, qword [var_108h];mov rbx, qword [var_30h];cmp rcx, rbx": 1,
                "mov dword [var_8h], ecx;call fcn.0043e6d0;mov rax, qword [var_58h];mov rcx, qword [var_a0h];mov ecx, dword [rcx + rax*8 + 4]": 1,
                "xorps xmm0, xmm0;jmp ;mov byte [arg_148h], 0;mov rbp, qword [var_128h];add rsp, ": 1,
                "mov qword [var_28h], rdx;mov qword [var_70h], rax;mov rbx, qword [arg_138h];xor esi, esi;xor edi, edi": 1,
                "mov rax, r8;movzx r8d, word [rax + 4];cmp rsi, r8;jge ;mov r8, qword [rbx + ]": 1,
                "cmp rsi, r8;jge ;mov r8, qword [rbx + ];cmp qword [rbx + ], rdi;jbe ": 1,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.00481de0;int3": 1,
                "mov qword [rsp], rax;mov rax, qword [arg_58h];mov qword [var_8h], rax;mov rax, qword [arg_68h];mov qword [var_10h], rax": 2,
                "cmp qword [var_10h], rax;je ;mov eax, 1;test al, al;je ": 2,
                "je ;mov byte [arg_78h], 0;mov rbp, qword [var_40h];add rsp, ;ret": 2,
                "mov rdx, qword [rcx + ];mov rbx, qword [arg_68h];mov qword [rsp], rbx;call rdx;mov rax, qword [var_20h]": 2,
                "cmp word [rcx + ], dx;jne ;xor edx, edx;jmp ;mov rbx, qword [var_30h]": 3,
                "xor edx, edx;jmp ;mov rbx, qword [var_30h];lea rdx, [rbx + 1];mov rbx, qword [arg_d0h]": 3,
                "test r8w, r8w;jne ;xor edi, edi;xor r8d, r8d;cmp rdx, r8": 2,
                "movzx eax, byte [arg_e0h];mov byte [var_20h], al;call fcn.00481ec0;cmp byte [var_28h], 0;jne ": 3,
                "mov rbp, qword [var_c0h];add rsp, ;ret;xor r8d, r8d;xor edi, edi": 2,
                "mov qword [var_78h], rcx;mov rdx, qword [arg_d8h];mov qword [rsp], rdx;mov rbx, qword [var_40h];mov qword [var_8h], rbx": 1,
                "sub rbx, rsi;jmp ;mov byte [arg_e8h], 0;mov rbp, qword [var_c0h];add rsp, ": 1,
                "xor edx, edx;test dl, dl;jne ;movzx edx, byte [rcx + ];and edx, ": 1,
                "and ebx, ;cmp rbx, ;jne ;cmp qword [rax + ], rdx;je ": 1,
                "mov qword [var_78h], rcx;mov rdx, qword [arg_d8h];mov qword [rsp], rdx;call fcn.0047ea70;mov rax, qword [var_10h]": 1,
                "jbe ;sub rsp, ;mov qword [var_c0h], rbp;lea rbp, [var_c0h];call fcn.0043e2a0": 1,
                "mov qword [var_70h], r14;mov qword [var_88h], r15;mov qword [var_80h], rcx;mov qword [var_78h], r10;mov eax, dword [r11 + r10*4]": 1,
                "lea rcx, [rbx + rdx];lea rcx, [rcx + 1];mov rax, qword [var_88h];jmp ;mov r10, qword [var_88h]": 1,
                "mov r13, r10;mov rdi, rax;mov r9, rdx;mov r8, rbx;mov rax, qword [var_40h]": 1,
                "mov qword [var_48h], r9;mov qword [var_50h], r8;cmp r14, r13;jge ;jae ": 1,
                "cmp rdx, rbx;ja ;mov rax, qword [var_b0h];lea rdi, [rax + rcx*8];cmp dword [], 0": 1,
                "mov qword [rax + rcx*8], rsi;jmp ;mov rcx, rax;mov rax, qword [var_a8h];call fcn.004580f0": 1,
                "mov rax, qword [var_a8h];call fcn.004580f0;mov rax, rcx;jmp ;lea rax, []": 1,
                "lea rdx, [rcx + 1];mov rcx, qword [var_48h];jmp ;mov rax, qword [var_60h];inc rax": 1,
                "mov rcx, r11;mov rdx, qword [var_58h];mov rsi, rax;mov rdi, r14;mov r8, r13": 1,
                "mov rax, qword [var_b0h];mov rcx, qword [var_48h];mov rdx, qword [var_50h];mov qword [arg_e0h], rax;mov qword [arg_e8h], rcx": 1,
                "mov qword [arg_e0h], rax;mov qword [arg_e8h], rcx;mov qword [arg_f0h], rdx;mov rbp, qword [var_c0h];add rsp, ": 1,
                "je ;mov rcx, qword [arg_128h];test rcx, rcx;jne ;mov edx, 1": 2,
                "jle ;cmp rsi, ;jle ;cmp rsi, ;jle ": 4,
                "cmp dword [], 0;jne ;mov rsi, qword [rbx];mov qword [rax], rsi;movups xmm0, xmmword [rbx + 8]": 1,
                "jle ;mov rsi, qword [arg_120h];xor edi, edi;xor r8d, r8d;xor r9d, r9d": 1,
                "xor edi, edi;xor r8d, r8d;xor r9d, r9d;jmp ;mov r10, qword [var_e0h]": 3,
                "mov rdx, qword [var_68h];mov r8, qword [var_60h];mov rcx, qword [var_c0h];mov r9d, eax;mov rax, qword [var_b8h]": 1,
                "shr eax, ;mov byte [var_54h], al;mov eax, dword [r10 + ];shr eax, ;mov byte [var_55h], al": 1,
                "mov byte [var_57h], al;mov dword [rsp], r9d;lea rax, [var_54h];mov qword [var_8h], rax;mov qword [var_10h], 4": 1,
                "cmp r9, r11;jne ;mov qword [var_d0h], rdx;mov qword [var_70h], rbx;lea r9, [rdi + 1]": 1,
                "jl ;mov rcx, qword [var_60h];cmp rcx, ;jg ;mov rcx, qword [var_b8h]": 1,
                "mov dword [rcx + ], eax;mov rbx, qword [arg_128h];mov word [rcx + ], bx;mov word [rcx + ], dx;movzx ebx, byte [arg_150h]": 1,
                "mov rcx, qword [rax + rbx*8];mov qword [var_88h], rcx;mov rdx, qword [var_b8h];mov qword [rsp], rdx;mov qword [var_8h], rcx": 1,
                "mov rbp, qword [var_110h];add rsp, ;ret;lea rax, [];mov qword [rsp], rax": 1,
                "add rsp, ;ret;lea rax, [];mov qword [rsp], rax;call fcn.00460900": 1,
                "mov qword [rsp], rax;call fcn.00460900;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 1,
                "mov qword [var_50h], rsi;mov qword [var_f0h], r8;mov eax, ;mov word [r8 + r10], ax;mov eax, ": 1,
                "mov eax, ;mov byte [r8 + r10 + 2], al;mov rax, qword [r9 + ];mov qword [rsp], rax;call fcn.0047d9e0": 1,
                "mov r8, qword [var_28h];mov rax, qword [arg_118h];mov rcx, qword [var_40h];mov rdx, qword [var_100h];mov rbx, qword [var_68h]": 1,
                "mov r9, qword [var_e8h];mov r10, qword [var_80h];jmp ;mov r10, rdi;jmp ": 1,
                "xor edx, edx;mov qword [var_58h], rax;mov qword [var_100h], rdx;mov qword [var_48h], rcx;cmp rax, 1": 1,
                "mov qword [var_48h], rcx;cmp rax, 1;jne ;lea rbx, [rcx + 1];cmp rbx, rsi": 1,
                "ja ;mov byte [r8 + rcx], ;xor ecx, ecx;jmp ;mov qword [var_50h], rsi": 1,
                "call fcn.0047d9e0;mov rax, qword [var_10h];mov rcx, qword [var_8h];lea rdx, [var_50h];mov qword [rsp], rdx": 1,
                "mov rax, qword [var_10h];mov rcx, qword [var_8h];lea rdx, [var_50h];mov qword [rsp], rdx;lea rdx, []": 1,
                "mov qword [var_18h], rcx;mov qword [var_20h], rax;call fcn.00444a60;mov rax, qword [var_28h];mov qword [var_70h], rax": 1,
                "mov qword [var_d8h], ;mov qword [var_e0h], rdx;xorps xmm0, xmm0;movups xmmword [var_e8h], xmm0;lea rax, []": 1,
                "movups xmmword [var_a0h], xmm0;mov qword [var_b0h], 0;lea rax, [];mov qword [var_90h], rax;lea rax, [var_a0h]": 1,
                "mov qword [var_98h], rax;mov rax, qword [var_90h];mov qword [var_78h], rax;lea rcx, [];mov qword [rsp], rcx": 1,
                "call fcn.0040d880;mov rax, qword [var_78h];test byte [rax], al;mov rcx, qword [var_8h];mov qword [var_88h], rcx": 1,
                "mov qword [var_18h], 1;call fcn.00481260;mov eax, dword [var_20h];mov rcx, qword [var_88h];mov dword [rcx + ], eax": 1,
                "mov rbp, qword [var_f8h];add rsp, ;ret;mov qword [rsp], rcx;lea rax, []": 1,
                "sub rsp, ;mov qword [var_1a0h], rbp;lea rbp, [var_1a0h];mov rax, qword [arg_1b0h];movzx ecx, byte [rax + ]": 2,
                "test rcx, rcx;je ;movzx edx, byte [rcx + ];and edx, ;cmp rdx, ": 2,
                "lea rdi, [rdx + 1];cmp rdi, rbx;ja ;lea rbx, [rdx + 1];mov qword [rax + ], rbx": 2,
                "movzx ebx, bl;and rbx, rdx;lea rdx, [rsi + rbx];mov qword [var_78h], rdx;mov qword [var_8h], rdx": 1,
                "mov rax, qword [rax];mov rcx, qword [var_78h];lea rdx, [rcx + rax];mov rax, qword [var_e8h];mov rcx, qword [arg_1b8h]": 1,
                "mov rsi, qword [var_68h];mov rdi, qword [var_100h];cmp r8, rsi;jl ;mov rsi, rdx": 1,
                "test r8w, ;jne ;xor edi, edi;xor r8d, r8d;mov qword [var_70h], rdi": 1,
                "movzx ebx, bl;and rbx, rdx;lea rdx, [rsi + rbx];mov qword [var_80h], rdx;mov qword [var_8h], rdx": 1,
                "lea rdx, [rsi + rbx];mov qword [var_80h], rdx;mov qword [var_8h], rdx;mov qword [var_10h], rcx;call fcn.004855a0": 1,
                "call fcn.004855a0;mov rax, qword [var_90h];lea r10, [rax + 1];mov rax, qword [var_e0h];mov rax, qword [rax]": 1,
                "mov rdi, qword [var_70h];mov r8, qword [var_100h];mov r9, qword [var_78h];cmp r10, rdi;jl ": 1,
                "mov qword [rax], rcx;mov rcx, qword [var_e8h];mov edx, dword [rcx];shl rdx, 3;mov qword [rax + 8], rdx": 1,
                "mov rcx, qword [var_e8h];mov edx, dword [rcx];shl rdx, 3;mov qword [rax + 8], rdx;cmp dword [rcx], 0": 1,
                "mov rdx, qword [arg_1b8h];test rdx, rdx;mov qword [var_d8h], rax;je ;mov qword [rsp], rdx": 1,
                "mov qword [var_d8h], rax;je ;mov qword [rsp], rdx;call fcn.0047d9e0;mov rax, qword [var_10h]": 1,
                "mov qword [var_100h], rcx;mov rdx, qword [arg_1b0h];mov qword [rsp], rdx;call fcn.0047d9e0;mov rax, qword [var_10h]": 1,
                "mov qword [var_20h], rdx;lea rdx, [];mov qword [var_28h], rdx;mov qword [var_30h], 2;mov qword [var_38h], rcx": 3,
                "lea rdx, [];mov qword [var_28h], rdx;mov qword [var_30h], 2;mov qword [var_38h], rcx;mov qword [var_40h], rax": 3,
                "jbe ;sub rsp, ;mov qword [var_58h], rbp;lea rbp, [var_58h];mov rax, qword [arg_78h]": 21,
                "mov rcx, qword [arg_70h];jmp ;inc dword [rax];mov rcx, rbx;mov edx, dword [rax]": 2,
                "test edx, 7;jne ;mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rsi, qword [rax + 8]": 2,
                "shr ecx, 3;cmp qword [rax + ], rcx;ja ;jmp ;lea rax, []": 2,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rsi;mov qword [var_10h], rdx;mov qword [var_18h], rcx": 2,
                "mov qword [var_20h], rdi;call fcn.00440d10;mov rax, qword [var_28h];mov rcx, qword [var_30h];mov rdx, qword [var_38h]": 14,
                "cmp qword [rax + ], rdx;jbe ;movzx esi, byte [rdx + rcx];and ebx, 7;bts esi, ebx": 3,
                "mov rsi, qword [rax + ];cmp rbx, rsi;ja ;lea rbx, [rdx + 1];mov qword [rax + ], rbx": 2,
                "lea rbx, [rdx + 1];mov qword [rax + ], rbx;mov byte [rcx + rdx], 0;mov rcx, qword [rax + 8];mov edx, dword [rax]": 1,
                "mov qword [rsp], rax;call fcn.0040d8e0;mov rax, qword [var_8h];mov qword [var_18h], rax;mov rcx, qword [arg_40h]": 1,
                "mov rcx, qword [arg_50h];bt ecx, 7;jae ;mov rcx, qword [arg_48h];mov rcx, qword [rcx]": 1,
                "ud2;call fcn.00456090;jmp fcn.00485af0;int3;int3": 1,
                "mov qword [rsp + ], 6;call fcn.00444be0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov qword [rsp + ], rcx": 1,
                "mov qword [rsp + ], rax;mov rbp, qword [rsp + ];add rsp, ;ret;mov qword [rsp], rcx": 1,
                "ret;mov qword [rsp], rcx;mov qword [rsp + 8], ;call fcn.00478cf0;mov rax, qword [rsp + ]": 1,
                "call fcn.00485df0;mov rax, qword [rsp];mov qword [var_50h], rax;mov rcx, qword [var_8h];mov qword [var_48h], rcx": 3,
                "call fcn.00444ae0;mov rax, qword [var_38h];mov rcx, qword [var_40h];mov qword [rsp], rax;mov qword [var_8h], rcx": 11,
                "call fcn.00485df0;mov rax, qword [var_8h];mov rcx, qword [rsp];mov qword [rsp], 0;lea rdx, []": 4,
                "lea rdx, [];mov qword [var_8h], rdx;mov qword [var_10h], 9;mov qword [var_18h], rcx;mov qword [var_20h], rax": 4,
                "mov ecx, ;cmovne rax, rcx;or rax, ;mov qword [arg_48h], rax;mov rbp, qword [var_10h]": 4,
                "jmp fcn.00486280;int3;int3;int3;int3": 3,
                "mov qword [var_18h], rbp;lea rbp, [var_18h];mov rax, qword [arg_38h];mov qword [rsp], rax;mov qword [var_8h], ": 8,
                "mov qword [var_20h], 9;mov rax, qword [arg_80h];mov qword [var_28h], rax;mov rax, qword [arg_88h];mov qword [var_30h], rax": 5,
                "mov rdx, qword [var_50h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_210h], rbp;lea rbp, [var_210h]": 5,
                "sete r9b;movzx r11d, byte [rcx + ];and r11d, ;cmp r11, ;jne ": 5,
                "jl ;mov byte [var_57h], r9b;mov qword [var_78h], rbx;mov qword [var_128h], rsi;mov qword [var_120h], rdi": 4,
                "mov rcx, qword [arg_250h];mov rcx, qword [var_140h];mov rdx, qword [var_148h];mov rbx, qword [var_78h];mov rsi, qword [var_128h]": 4,
                "mov r8, qword [arg_240h];movzx r9d, byte [var_57h];mov r10, qword [arg_238h];mov r11, r13;mov r12, qword [arg_250h]": 4,
                "jae ;mov qword [var_b8h], rax;lea rcx, [rax + rax*2];mov rdx, qword [r14 + rcx*8 + ];mov rbx, qword [r14 + rcx*8 + 8]": 3,
                "call rdx;cmp byte [var_18h], 0;jne ;jmp ;xor esi, esi": 3,
                "movzx r8d, word [rcx + ];test r8w, ;jne ;xor eax, eax;mov qword [var_90h], rax": 2,
                "test r8w, ;jne ;xor eax, eax;mov qword [var_90h], rax;mov qword [rsp], rcx": 2,
                "jne ;mov qword [rsp], rdx;call fcn.00460f70;mov rax, qword [var_10h];mov rcx, qword [var_8h]": 2,
                "mov rcx, qword [var_8h];lea rdx, [];cmp rcx, rdx;jne ;mov rcx, qword [var_148h]": 2,
                "mov rcx, qword [rcx + 8];cmp dword [], 0;jne ;mov qword [rax], rcx;mov ecx, 8": 1,
                "mov rcx, qword [var_158h];mov rdx, qword [rcx];mov qword [rsp], rcx;mov rbx, qword [var_168h];mov qword [var_8h], rbx": 1,
                "call fcn.004560a0;cmp byte [], 0;jne ;mov rax, qword [var_90h];test rax, rax": 1,
                "mov rcx, qword [var_98h];mov qword [var_18h], rcx;call fcn.00415040;lea rax, [];mov qword [rsp], rax": 1,
                "mov qword [var_10h], rbx;call fcn.00440c00;mov rax, qword [var_18h];mov rcx, qword [var_100h];movzx edx, word [rcx + ]": 1,
                "mov qword [var_68h], r12;mov qword [var_c0h], r13;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], r9;mov qword [var_18h], rdx;mov qword [var_20h], r14;call fcn.00440d10": 1,
                "mov qword [var_20h], r14;call fcn.00440d10;mov rax, qword [var_28h];mov rcx, qword [var_30h];mov rdx, qword [var_38h]": 3,
                "bts r12, 7;mov rcx, qword [var_100h];mov rdx, qword [var_90h];mov rbx, qword [var_50h];mov rsi, qword [var_f8h]": 1,
                "mov r11, qword [var_b8h];mov r13, rax;mov rax, qword [var_f0h];jmp ;mov qword [var_e8h], rax": 1,
                "mov qword [var_8h], r9;mov qword [var_10h], rdx;mov rdx, qword [var_e0h];mov rax, qword [rdx];call rax": 1,
                "mov r10, qword [rsi + r8*8];cmp r8, rcx;jae ;mov qword [var_c8h], r10;lea r11, [r8 + r8*2]": 1,
                "call fcn.0043e6d0;mov rax, qword [arg_a8h];mov rcx, qword [var_58h];lea rax, [rcx + rax*8];lea rax, [rax + ]": 1,
                "mov rax, qword [var_10h];movzx eax, byte [rax];test al, 1;je ;lea rax, []": 1,
                "mov rcx, qword [var_10h];mov rdx, qword [arg_90h];mov rax, qword [var_68h];jmp ;mov rdi, qword [var_68h]": 1,
                "call fcn.004580f0;jmp ;mov qword [rsp], 0;lea rax, [];mov qword [var_8h], rax": 2,
                "lea rbp, [var_90h];mov rbx, qword [rcx + ];test rbx, rbx;jne ;mov rax, qword [arg_a0h]": 2,
                "call fcn.00488520;mov rax, qword [var_30h];mov rcx, qword [var_38h];mov rdx, qword [var_40h];mov qword [var_70h], rdx": 2,
                "mov rdx, qword [var_70h];mov qword [var_8h], rdx;mov qword [var_10h], rdi;mov dword [var_18h], ecx;mov rcx, qword [var_48h]": 1,
                "mov rax, qword [var_78h];mov qword [var_10h], rax;call fcn.00460dc0;mov rbp, qword [var_90h];add rsp, ": 1,
                "lea rax, [rax + rdx];lea rax, [rax - 8];mov qword [rsp], rax;mov rax, qword [var_78h];add rdx, rax": 1,
                "mov qword [var_8h], rdx;mov qword [var_10h], rcx;call fcn.00445dd0;mov rax, qword [var_60h];jmp ": 1,
                "mov qword [rsp], rax;call fcn.00447520;mov rax, qword [var_10h];mov rcx, qword [var_8h];mov qword [arg_30h], rcx": 2,
                "jne ;mov rax, qword [arg_28h];movzx ecx, byte [rax + ];and ecx, ;cmp rcx, ": 3,
                "mov qword [rsp], rax;call fcn.00407980;mov rax, qword [var_8h];mov qword [arg_40h], rax;mov rbp, qword [var_18h]": 3,
                "mov rax, qword [arg_30h];mov rax, qword [rax + ];mov qword [arg_40h], rax;mov rbp, qword [var_18h];add rsp, ": 2,
                "mov rbp, qword [var_18h];add rsp, ;ret;mov qword [var_10h], rax;lea rax, []": 4,
                "mov rdi, qword [var_8h];mov qword [rdi + 8], ;cmp dword [], 0;jne ;lea rax, []": 124,
                "lea rax, [];mov qword [rdi], rax;jmp ;lea rax, [];call fcn.004580f0": 116,
                "sub rsp, ;mov qword [var_10h], rbp;lea rbp, [var_10h];mov rax, qword [arg_30h];mov qword [rsp], rax": 22,
                "bt eax, 7;jae ;mov rax, qword [arg_28h];mov rax, qword [rax];mov qword [rsp], rax": 3,
                "sub rsp, ;mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword [rsp + ];and rax, ": 14,
                "movsd xmm0, qword [rax];movsd xmm1, qword [rax + 8];movsd qword [rsp + ], xmm0;movsd qword [rsp + ], xmm1;mov rbp, qword [rsp + ]": 3,
                "jmp ;lea rax, [];call fcn.004580f0;jmp ;mov rax, qword [rsp + ]": 9,
                "ret;mov rax, qword [rsp + ];mov qword [rdi + ], rax;lea rax, [];mov qword [rsp], rax": 8,
                "mov qword [rsp + 8], rdi;call fcn.0042f900;ud2;call fcn.00456090;jmp ": 18,
                "sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h];mov rax, qword [arg_48h];mov rcx, qword gs:[]": 1,
                "mov rax, qword [arg_48h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rax, qword [var_18h];test rax, rax;je ;movzx edx, byte [rax + ];mov ebx, edx": 2,
                "movzx edx, byte [rax + ];mov ebx, edx;and edx, ;mov rsi, rdx;bts rdx, 7": 2,
                "mov rsi, qword [rdx + rax*8];and rcx, ;movzx edi, byte [rbx + ];and edi, ;or rcx, rdi": 3,
                "ud2;call fcn.00456090;jmp fcn.004891e0;int3;int3": 2,
                "mov qword [var_8h], rax;mov qword [var_10h], rdx;mov rax, qword [var_38h];mov qword [var_18h], rax;call fcn.004891e0": 3,
                "mov rcx, qword [arg_98h];cmp rdi, rcx;jge ;mov qword [var_40h], rdi;mov r8, qword [rax + rdi*8]": 3,
                "mov r9, rsi;and rsi, ;mov qword [var_50h], rsi;cmp rsi, ;mov rcx, qword gs:[]": 1,
                "lea r10, [rsi - ];cmp r10, 1;ja ;bt r9d, 9;jae ": 2,
                "mov rax, qword [arg_90h];mov rcx, qword [arg_98h];mov rdx, qword [var_58h];mov rbx, qword [var_60h];mov rsi, qword [var_50h]": 2,
                "mov r9, qword [var_48h];jmp ;mov rax, rbx;mov rcx, rdx;mov rdx, rsi": 2,
                "mov rbp, qword [var_68h];add rsp, ;ret;mov rax, qword [var_50h];mov qword [rdi + ], rax": 2,
                "call fcn.00485e90;mov rax, qword [arg_100h];mov qword [rsp], rax;mov rcx, qword [arg_118h];mov qword [var_8h], rcx": 2,
                "mov qword [var_10h], rax;mov rax, qword [var_e0h];mov rcx, qword [var_d8h];mov rdx, qword [var_d0h];mov qword [var_18h], rdx": 2,
                "mov rcx, qword [var_40h];mov rdx, qword [var_30h];mov qword [arg_128h], rdx;mov qword [arg_130h], rax;mov qword [arg_138h], rcx": 2,
                "jbe ;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 3,
                "mov qword [arg_118h], 0;xorps xmm0, xmm0;movups xmmword [arg_120h], xmm0;mov rbp, qword [var_e8h];add rsp, ": 2,
                "movsd qword [rsp + ], xmm0;mov rbp, qword [rsp + ];add rsp, ;ret;mov qword [rsp + ], rax": 2,
                "jne ;mov rax, qword [arg_40h];mov rdx, qword [arg_28h];cmp qword [rdx + ], rax;jbe ": 3,
                "cmp qword [rdx + 8], rax;jbe ;mov rbx, qword [arg_28h];mov rbx, qword [rbx + ];mov rsi, qword [rbx]": 3,
                "mov rax, qword [arg_40h];mov rdx, qword [arg_30h];cmp qword [rdx + 8], rax;jbe ;mov rdx, qword [rdx]": 2,
                "mov rdx, qword [rdx];mov rbx, qword [];mov qword [arg_48h], rbx;add rax, rdx;mov qword [arg_50h], rax": 2,
                "mov rbp, qword [rsp + ];add rsp, ;ret;mov rax, qword [rsp + ];movsx rax, word [rax]": 1,
                "ret;mov rax, qword [rsp + ];movsx rax, word [rax];mov qword [rsp + ], rax;mov rbp, qword [rsp + ]": 1,
                "mov qword [arg_58h], rcx;mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rbx;call fcn.0048b070": 1,
                "mov qword [var_10h], rbx;call fcn.00485af0;mov rax, qword [var_18h];mov rcx, qword [var_20h];mov qword [arg_70h], rax": 1,
                "mov rax, qword [rsp + ];mov qword [rsp], rax;mov qword [rsp + 8], ;call fcn.00485e90;mov rax, qword [rsp + ]": 3,
                "jmp ;mov byte [rsp + ], 0;mov rbp, qword [rsp + ];add rsp, ;ret": 8,
                "je ;jmp ;mov rax, qword [rsp + ];mov qword [rdi + ], rax;lea rax, []": 2,
                "ud2;call fcn.00456090;jmp fcn.0048a290;int3;int3": 1,
                "mov qword [var_50h], rbp;lea rbp, [var_50h];mov rax, qword [arg_70h];mov qword [rsp], rax;mov qword [var_8h], ": 2,
                "mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax;lea rax, [];mov qword [var_18h], rax": 15,
                "mov rdx, qword [var_38h];mov qword [arg_78h], rdx;mov qword [arg_80h], rcx;mov qword [arg_88h], rax;test rax, ": 2,
                "mov qword [arg_80h], rcx;mov qword [arg_88h], rax;test rax, ;lea rax, [arg_80h];cmovne rax, rcx": 2,
                "bt edx, 7;jae ;mov rbx, qword [arg_68h];mov rbx, qword [rbx];mov qword [rsp], rcx": 2,
                "mov rdx, qword [arg_88h];movzx ebx, byte [rcx + ];mov qword [rsp], rcx;mov rcx, qword [arg_70h];or rcx, rdx": 2,
                "mov qword [arg_a0h], rcx;mov rbp, qword [var_50h];add rsp, ;ret;mov qword [arg_90h], 0": 2,
                "movups xmmword [arg_98h], xmm0;mov rbp, qword [var_50h];add rsp, ;ret;mov rbx, qword [arg_68h]": 2,
                "mov qword [rsp], rax;mov qword [var_8h], ;call fcn.00485e90;mov rax, qword [arg_78h];mov rcx, qword [rax + ]": 3,
                "jne ;bt edx, 7;jae ;mov rdx, qword [arg_80h];mov rdx, qword [rdx]": 2,
                "xor esi, esi;mov qword [var_40h], rsi;mov qword [rsp], rax;mov qword [var_8h], rdx;call fcn.004112a0": 2,
                "mov rax, qword [var_58h];mov qword [rsp], rax;call fcn.00411370;mov rax, qword [var_8h];test rax, rax": 2,
                "mov rdx, qword [var_50h];jmp ;mov rdx, qword [arg_80h];jmp ;call fcn.0042ea20": 2,
                "mov qword [var_48h], rbp;lea rbp, [var_48h];mov rax, qword [arg_58h];mov rcx, qword [rax + ];test rcx, rcx": 6,
                "mov qword [rsp], rcx;call fcn.00411370;cmp qword [var_8h], 0;je ;mov rax, qword [arg_58h]": 6,
                "cmp qword [var_8h], 0;je ;mov rax, qword [arg_58h];mov rcx, qword [rax];mov rcx, qword [rcx + ]": 6,
                "mov rax, qword [arg_58h];mov rcx, qword [rax];mov rcx, qword [rcx + ];mov qword [var_40h], rcx;mov rdx, qword [rax + ]": 6,
                "mov qword [rsp], rax;mov qword [rsp + 8], ;call fcn.00485e90;lea rax, [];mov qword [rsp], rax": 3,
                "mov rcx, qword [arg_40h];mov rcx, qword [rcx];mov qword [arg_48h], rax;mov qword [arg_50h], rcx;mov rax, qword [arg_38h]": 3,
                "cmp rcx, ;ja ;lea rbx, [rcx - ];cmp rbx, 1;ja ": 6,
                "lea rbx, [rcx - ];cmp rbx, 1;ja ;bt edx, 9;jae ": 8,
                "add rsp, ;ret;bt edx, 7;jae ;mov rcx, qword [arg_30h]": 3,
                "cmp qword [rbx], 0;sete cl;jmp ;lea rax, [];mov qword [rsp], rax": 3,
                "lea rbx, [rcx - ];cmp rbx, 1;ja ;bt edx, 9;jmp ": 2,
                "cmp rcx, ;jne ;bt edx, 9;jmp ;mov rdx, rcx": 2,
                "setbe dl;mov rax, qword [arg_28h];mov rcx, qword [arg_38h];jmp ;lea rax, []": 2,
                "lea rax, [];call fcn.004580f0;jmp ;mov rax, qword [var_10h];mov qword [rdi + ], rax": 2,
                "ud2;call fcn.00456090;jmp fcn.0048ae00;int3;int3": 2,
                "cmp al, 0;je ;mov rax, qword [arg_d0h];mov qword [rsp], rax;mov rax, qword [arg_d8h]": 3,
                "mov rdx, qword [var_20h];mov qword [arg_f8h], rdx;mov qword [arg_100h], rax;mov qword [arg_108h], rcx;mov rbp, qword [var_c0h]": 3,
                "call fcn.00485e90;mov rax, qword [rsp + ];mov rax, qword [rax + ];mov qword [rsp + ], rax;mov rbp, qword [rsp + ]": 2,
                "jbe ;ucomisd xmm3, xmm1;setae al;jmp ;xor eax, eax": 2,
                "setae al;jmp ;xor eax, eax;jmp ;movsd xmm3, qword []": 2,
                "xor eax, eax;jmp ;movsd xmm3, qword [];xor eax, eax;jmp ": 2,
                "call fcn.004580f0;mov rax, qword [rsp + ];mov qword [rdi + ], rax;lea rax, [];mov qword [rsp], rax": 3,
                "mov qword [rdi], rcx;mov qword [rdi + 8], 0;mov qword [var_28h], rdi;mov qword [var_20h], rdx;movzx ebx, byte [rcx + ]": 3,
                "jae ;mov rax, qword [arg_48h];mov rax, qword [rax];mov qword [rsp], rax;movzx eax, byte [arg_58h]": 3,
                "mov qword [rsp], rax;movzx eax, byte [arg_58h];mov byte [var_8h], al;mov qword [var_10h], rdx;call fcn.004078f0": 3,
                "mov rdx, qword [rcx];mov rbx, qword [rcx + 8];mov rcx, qword [rcx + ];mov qword [arg_60h], rdx;mov qword [arg_68h], rbx": 3,
                "jne ;xorps xmm0, xmm0;movups xmmword [rdi], xmm0;jmp ;mov ecx, eax": 3,
                "cmp dword [], 0;jne ;mov rcx, qword [var_28h];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [var_10h], rax;mov rax, qword [arg_68h];mov qword [var_18h], rax;mov rax, qword [arg_70h];mov qword [var_20h], rax": 13,
                "call fcn.0048bd40;mov rbp, qword [var_40h];add rsp, ;ret;call fcn.00456090": 3,
                "lea rbp, [var_50h];mov rax, qword [arg_60h];mov rcx, qword [rax + ];bt ecx, 1;jae ": 4,
                "call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.0048bd40;int3": 3,
                "jne ;mov rax, qword [arg_40h];mov qword [rdi], rax;mov rbp, qword [var_18h];add rsp, ": 10,
                "mov qword [rsp], rax;call fcn.004860b0;mov rax, qword [arg_38h];and rax, ;cmp rax, ": 10,
                "add rsp, ;ret;cmp rax, ;jne ;movsd xmm0, qword [arg_40h]": 10,
                "cmp rax, ;jne ;movsd xmm0, qword [arg_40h];mov rax, qword [arg_30h];movsd qword [rax], xmm0": 10,
                "cmp rax, 2;jne ;mov rax, qword [arg_40h];mov rcx, qword [arg_30h];mov qword [rcx], rax": 5,
                "jb ;mov qword [rcx + 8], rax;mov rbp, qword [var_10h];add rsp, ;ret": 4,
                "mov rcx, qword [arg_28h];cmp qword [rcx + 8], rax;jg ;cmp qword [rcx + ], rax;jl ": 5,
                "cmp qword [rcx + ], rax;jl ;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [rsp], rax;call fcn.00485f60;mov rax, qword [arg_88h];mov rcx, qword [arg_90h];mov rdx, qword [arg_80h]": 5,
                "mov rdx, qword [var_38h];mov qword [arg_80h], rdx;mov qword [arg_88h], rcx;mov qword [arg_90h], rax;test rax, ": 5,
                "mov rdx, qword [rdx];mov qword [rsp], rcx;mov qword [var_8h], rdx;mov qword [var_10h], rax;call fcn.00411240": 4,
                "mov qword [var_8h], rdx;mov rax, qword [var_50h];mov qword [var_10h], rax;mov qword [var_18h], rcx;call fcn.004111c0": 3,
                "call fcn.004111c0;mov rbp, qword [var_58h];add rsp, ;ret;mov rdx, qword [arg_70h]": 3,
                "jmp ;cmp rax, 9;jne ;mov rax, qword [arg_40h];mov rcx, qword [arg_30h]": 4,
                "mov word [rcx], ax;jmp ;lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 3,
                "jmp ;cmp rax, ;jne ;mov rax, qword [arg_40h];mov rcx, qword [arg_30h]": 9,
                "mov qword [rdi + ], rax;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 5,
                "test rsi, rsi;jl ;mov rdi, qword [arg_60h];cmp rdi, rsi;jl ": 4,
                "cmp dword [], 0;jne ;mov qword [rdi], rax;test byte [rdx], al;mov qword [arg_68h], rdx": 6,
                "mov rax, qword [arg_40h];jmp ;cmp rax, ;jne ;mov rax, qword [arg_58h]": 4,
                "cmp rdx, rax;jl ;mov rbx, qword [arg_48h];cmp qword [rbx + 8], rdx;jl ": 4,
                "mov rdi, qword [var_8h];mov rax, qword [arg_58h];mov rcx, qword [arg_48h];cmp qword [rcx + 8], rax;jle ": 3,
                "lea rax, [];call fcn.004580f0;mov rax, qword [var_18h];mov qword [rdi + ], rax;lea rax, []": 3,
                "mov rax, qword [rax + ];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 6,
                "test rax, rax;je ;bt eax, 9;jae ;sar rax, ": 4,
                "cmp rax, 9;jne ;mov rax, qword [rsp + ];movzx eax, word [rax];mov qword [rsp + ], rax": 3,
                "movzx eax, word [rax];mov qword [rsp + ], rax;mov rbp, qword [rsp + ];add rsp, ;ret": 3,
                "lea rax, [];call fcn.004580f0;jmp ;mov rax, qword [rsp + ];movzx eax, byte [rax]": 3,
                "add rsp, ;ret;mov rax, qword [rsp + ];mov rax, qword [rax];mov qword [rsp + ], rax": 5,
                "je ;cmp rax, ;je ;cmp rax, ;mov rcx, qword gs:[]": 1,
                "ret;mov rax, qword [rsp + ];mov eax, dword [rax];mov qword [rsp + ], rax;mov rbp, qword [rsp + ]": 2,
                "jbe ;sub rsp, ;mov qword [var_78h], rbp;lea rbp, [var_78h];mov rcx, qword gs:[]": 1,
                "mov qword [rsp], rax;mov rcx, qword [arg_a0h];mov qword [var_8h], rcx;mov rdx, qword [arg_b0h];mov qword [var_10h], rdx": 1,
                "mov qword [rsp], rcx;call rax;mov rax, qword [var_10h];mov qword [var_68h], rax;mov rcx, qword [var_8h]": 1,
                "call rax;mov rax, qword [var_10h];mov qword [var_68h], rax;mov rcx, qword [var_8h];mov qword [var_70h], rcx": 1,
                "mov qword [var_38h], rdx;mov qword [var_40h], 4;mov qword [var_48h], rax;mov qword [var_50h], rcx;call fcn.00444be0": 1,
                "mov rax, qword [arg_a8h];mov qword [rsp], rax;call fcn.0047ea70;mov rax, qword [var_10h];mov qword [var_90h], rax": 2,
                "cmp rdx, ;je ;mov rdx, qword [arg_b0h];mov rbx, qword [rdx];mov rsi, qword [rdx + ]": 2,
                "mov r8, qword [rdi + ];mov r9, qword [rdi + 8];mov rdi, qword [rdi];mov qword [var_50h], r8;mov qword [var_48h], r9": 2,
                "mov qword [var_28h], rax;mov rax, qword [var_50h];mov qword [var_30h], rax;call fcn.00414e60;mov rax, qword [var_38h]": 2,
                "mov rax, qword [var_50h];mov qword [var_30h], rax;call fcn.00414e60;mov rax, qword [var_38h];mov qword [arg_d8h], rax": 2,
                "cmp rax, ;mov rax, qword [var_90h];mov rcx, qword [var_68h];jmp ;lea rax, []": 2,
                "xor edx, edx;jmp ;mov qword [rsp], rcx;call fcn.004860b0;mov rcx, qword [arg_b8h]": 2,
                "mov rbx, qword [arg_38h];mov qword [rsp], rbx;call rdx;mov rax, qword [var_10h];mov rcx, qword [var_8h]": 2,
                "mov qword [arg_40h], rax;mov qword [arg_48h], 0;mov qword [arg_50h], rcx;mov rbp, qword [var_20h];add rsp, ": 3,
                "mov rax, qword [var_8h];mov qword [var_18h], rax;mov rcx, qword [arg_38h];mov qword [rsp], rcx;call fcn.00480e80": 4,
                "mov qword [var_18h], rax;mov rcx, qword [arg_38h];mov qword [rsp], rcx;call fcn.00480e80;mov rax, qword [var_8h]": 3,
                "mov qword [arg_e0h], rax;mov rcx, qword [var_70h];mov rdx, rcx;and rcx, ;cmp rcx, ": 4,
                "jae ;xor ecx, ecx;test cl, cl;jne ;mov rax, qword [var_88h]": 4,
                "jne ;mov rax, qword [var_80h];mov qword [rdx + 8], rax;mov rax, qword [arg_d8h];mov qword [arg_e8h], rax": 4,
                "jmp ;mov rax, qword [arg_d8h];mov qword [rsp], rax;mov rcx, qword [var_68h];mov qword [var_8h], rcx": 3,
                "mov qword [var_10h], rcx;mov rcx, qword [arg_e0h];mov qword [var_18h], rcx;call fcn.0040b270;mov rdx, qword [arg_e0h]": 3,
                "mov rcx, qword [var_8h];mov qword [rsp], 0;mov rdx, qword [arg_c8h];mov qword [var_8h], rdx;mov rdx, qword [arg_d0h]": 2,
                "mov qword [arg_80h], rcx;mov qword [arg_78h], rdx;mov rbx, qword [arg_90h];mov rsi, qword [rbx + ];mov rdi, qword [arg_98h]": 2,
                "call rax;mov rax, qword [var_28h];mov rcx, qword [var_30h];mov rbx, qword [var_38h];mov qword [arg_a0h], rax": 2,
                "mov qword [var_58h], rcx;mov rdx, qword [arg_90h];mov rdx, qword [rdx + ];mov rbx, qword [arg_98h];mov qword [rsp], rbx": 1,
                "mov qword [var_28h], rdx;mov qword [var_30h], ;mov qword [var_38h], rcx;mov qword [var_40h], rax;call fcn.00444b60": 1,
                "ja ;mov rcx, qword [arg_38h];movzx edx, byte [rcx + ];and edx, ;lea rbx, [rdx - 2]": 4,
                "xor ecx, ecx;test cl, cl;je ;mov rcx, qword [arg_40h];movzx edx, byte [rcx + ]": 2,
                "ret;lea rax, [];mov qword [arg_48h], rax;mov rbp, qword [var_28h];add rsp, ": 13,
                "mov qword [rsp], rcx;call rax;mov rax, qword [var_8h];mov qword [var_20h], rax;mov rcx, qword [arg_40h]": 2,
                "call fcn.0047e8c0;cmp qword [var_10h], 0;sete dl;mov rax, qword [arg_38h];mov rcx, qword [arg_40h]": 2,
                "sete dl;mov rax, qword [arg_38h];mov rcx, qword [arg_40h];jmp ;mov rcx, qword [arg_40h]": 2,
                "ret;lea rax, [];mov qword [arg_48h], rax;mov rbp, qword [var_28h];mov rcx, qword gs:[]": 1,
                "cmp rdx, 5;ja ;mov rcx, qword [arg_38h];movzx edx, byte [rcx + ];and edx, ": 1,
                "add rsp, ;ret;add rcx, ;cmp rcx, 1;ja ": 1,
                "ret;add rcx, ;cmp rcx, 1;ja ;mov rcx, qword [arg_38h]": 1,
                "mov rcx, qword [arg_38h];movzx edx, byte [rcx + ];and edx, ;lea rbx, [rdx - 2];cmp rbx, 4": 1,
                "cmp rax, 5;je ;cmp rax, 8;je ;mov rax, qword [arg_40h]": 1,
                "mov rax, qword [var_8h];mov rcx, qword [var_10h];mov rdx, qword [rcx];cmp rdx, 2;ja ": 1,
                "mov rdx, qword [rcx];cmp rdx, 2;ja ;cmp rdx, 1;jne ": 1,
                "mov rdx, qword [arg_30h];mov byte [rax], dl;movzx edx, byte [rcx + ];mov qword [arg_48h], rcx;mov qword [arg_50h], rax": 1,
                "or rdx, rax;bts rdx, 7;mov qword [arg_58h], rdx;mov rbp, qword [var_18h];add rsp, ": 3,
                "jne ;mov rdx, qword [arg_30h];mov word [rax], dx;jmp ;cmp rdx, 4": 1,
                "movsd xmm0, qword [arg_38h];movsd qword [rax + 8], xmm0;jmp ;call fcn.00456090;jmp fcn.0048ef50": 3,
                "mov rax, qword [arg_78h];mov qword [var_8h], rax;call fcn.0048e0e0;mov rax, qword [var_18h];mov rcx, qword [var_10h]": 4,
                "mov rax, qword [var_18h];mov rcx, qword [var_10h];mov rdx, qword [var_20h];mov qword [rsp], rcx;mov qword [var_8h], rax": 17,
                "mov rcx, qword [arg_58h];or rax, rcx;mov qword [arg_98h], rax;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.0048f120;int3": 4,
                "call fcn.00456090;jmp fcn.0048f220;int3;int3;int3": 5,
                "mov rax, qword [rsp + ];mov rax, qword [rax];test rcx, ;mov ecx, 0;mov edx, ": 6,
                "mov rdx, qword [rsp + ];movsx rax, byte [rdx];jmp ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "movsx rax, byte [rdx];jmp ;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov rax, qword [rsp + ];mov rcx, rax;and rax, ;mov qword [rsp + ], rax;cmp rax, 9": 3,
                "cmp rax, 7;jne ;mov rax, qword [rsp + ];mov rax, qword [rax];test rcx, ": 2,
                "mov rsi, qword [arg_78h];mov qword [rsp], rsi;call rbx;cmp qword [var_8h], 0;jne ": 1,
                "mov rax, qword [arg_68h];test rax, ;mov eax, 0;mov ecx, ;cmovne rax, rcx": 1,
                "mov qword [arg_90h], rax;mov rbp, qword [var_48h];add rsp, ;ret;lea rdi, [rdx + 8]": 1,
                "ja ;bt ecx, 9;jae ;mov rax, qword [rsp + ];mov qword [rsp], rax": 2,
                "bt ecx, 9;jae ;mov rax, qword [rsp + ];mov qword [rsp], rax;mov rax, qword [rsp + ]": 2,
                "add rsp, ;ret;bt ecx, 7;jae ;mov rax, qword [rsp + ]": 1,
                "mov rax, qword [rsp + ];mov qword [rsp], rax;mov rax, qword [rsp + ];mov qword [rsp + 8], rax;call fcn.0048dfe0": 1,
                "lea rbp, [rsp + ];mov rax, qword [rsp + ];test rax, rax;jne ;mov rax, qword [rsp + ]": 1,
                "mov byte [], 1;call fcn.00455b60;call fcn.0047be50;call fcn.00461db0;call fcn.004699c0": 2,
                "call fcn.004911a0;mov byte [], 2;mov rbp, qword [rsp];add rsp, 8;ret": 2,
                "call fcn.00488900;mov rbp, qword [rsp + ];add rsp, ;ret;lea rdi, [rsp + ]": 2,
                "mov rcx, qword [rsp + 8];mov qword [rsp + ], rcx;mov qword [rsp + ], rax;mov rbp, qword [rsp + ];add rsp, ": 17,
                "je ;mov rcx, qword [rax + 8];mov rax, qword [rax];mov qword [rsp], rax;mov qword [rsp + 8], rcx": 8,
                "jne ;mov qword [rbx], rsp;jmp ;int3;mov rcx, qword gs:[]": 4,
                "je ;mov rax, qword [rax];mov rcx, qword [];mov rdx, qword [];cmp rax, rcx": 1,
                "mov qword [rsp + ], rcx;mov qword [rsp + ], rax;mov rbp, qword [rsp + ];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "call fcn.00456090;jmp fcn.00494a20;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [rsp + ], 0;jmp ;int3;int3;int3": 14,
                "xorps xmm0, xmm0;movups xmmword [rsp + ], xmm0;jmp fcn.0047ea70;int3;int3": 2,
                "add rsp, 8;jmp fcn.0047ef20;int3;int3;int3": 2,
                "movups xmmword [rsp + ], xmm0;jmp ;int3;int3;int3": 18,
                "cmp byte [var_8h], 0;je ;mov rax, qword [var_20h];mov rcx, qword [var_18h];jmp ": 1,
                "mov qword [arg_48h], rax;mov rbp, qword [var_28h];add rsp, ;ret;call fcn.00456090": 3,
                "call fcn.00456090;jmp fcn.00498880;int3;int3;int3": 1,
                "lea rax, [];mov qword [var_18h], rax;mov rax, qword [arg_58h];mov qword [var_20h], rax;mov rax, qword [arg_60h]": 2,
                "mov rax, qword [arg_58h];mov qword [var_20h], rax;mov rax, qword [arg_60h];mov qword [var_28h], rax;mov rcx, qword [arg_68h]": 2,
                "test rdx, rdx;je ;movzx ebx, byte [rdx + ];mov esi, ebx;and ebx, ": 4,
                "and ebx, ;mov rdi, rbx;bts rbx, 7;test sil, ;cmove rdi, rbx": 5,
                "mov qword [var_30h], rbp;lea rbp, [var_30h];mov rax, qword [arg_50h];lea rcx, [rax + 1];mov rdx, qword [arg_48h]": 4,
                "mov rsi, qword [arg_58h];jmp ;mov rax, qword [rbx + ];mov qword [rsp], rdx;mov qword [var_8h], rcx": 4,
                "dec rcx;mov qword [var_28h], rcx;mov qword [var_10h], rcx;call rax;mov rax, qword [arg_48h]": 4,
                "mov rsi, qword [arg_58h];mov rdi, qword [var_20h];mov rcx, qword [var_28h];cmp rcx, rax;jg ": 4,
                "mov rsi, qword [arg_58h];mov rdi, qword [var_20h];jmp ;mov rbp, qword [var_30h];add rsp, ": 3,
                "ret;call fcn.00456090;jmp fcn.00498be0;int3;int3": 3,
                "call fcn.00456090;jmp fcn.00498be0;int3;int3;int3": 3,
                "mov rdx, qword [arg_68h];cmp rcx, rdx;jge ;lea rbx, [rax + rax];lea rbx, [rbx + 2]": 3,
                "ret;mov qword [var_28h], rcx;mov qword [var_38h], rbx;mov qword [var_20h], rax;mov rcx, qword [arg_50h]": 3,
                "mov qword [var_28h], rcx;mov qword [var_38h], rbx;mov qword [var_20h], rax;mov rcx, qword [arg_50h];mov rdx, qword [rcx + ]": 3,
                "mov qword [var_20h], rax;mov rcx, qword [arg_50h];mov rdx, qword [rcx + ];mov rbx, qword [arg_58h];mov qword [rsp], rbx": 3,
                "mov rdx, qword [rax + ];mov rsi, qword [arg_60h];mov qword [rsp], rsi;mov qword [var_8h], rcx;lea rdi, [rbx + rcx]": 3,
                "mov qword [var_10h], rdi;call rdx;mov rax, qword [arg_58h];mov qword [rsp], rax;mov rcx, qword [arg_60h]": 3,
                "mov qword [var_18h], rdx;mov rbx, qword [arg_68h];mov qword [var_20h], rbx;call fcn.00498cf0;mov rax, qword [var_28h]": 3,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.00498e40;int3": 3,
                "mov rsi, qword [arg_48h];mov qword [var_10h], rsi;call rcx;cmp byte [var_18h], 0;je ": 3,
                "mov rcx, qword [arg_30h];mov rdx, qword [rcx + ];mov rbx, qword [arg_38h];mov qword [rsp], rbx;mov rsi, qword [arg_40h]": 4,
                "inc rax;mov rcx, qword [arg_50h];cmp rax, rcx;jl ;mov rbp, qword [var_20h]": 3,
                "mov qword [var_8h], rsi;mov qword [var_10h], rax;mov qword [var_18h], rdx;lea rdi, [rbx - 1];mov qword [var_40h], rdi": 4,
                "test dil, dil;jne ;jmp ;dec rdx;mov qword [var_60h], rdx": 4,
                "mov qword [var_60h], rdx;jmp ;mov rdi, qword [arg_a0h];sub rdi, rdx;cmp rdi, 5": 3,
                "test bl, bl;jne ;cmp rsi, rcx;jge ;mov rax, qword [arg_88h]": 3,
                "jge ;mov rax, qword [arg_88h];mov rdx, qword [rax + ];mov rbx, qword [arg_90h];mov qword [rsp], rbx": 3,
                "mov rcx, qword [arg_88h];mov rdx, qword [rcx + ];mov rsi, qword [arg_90h];mov qword [rsp], rsi;mov qword [var_8h], rax": 2,
                "cmp byte [var_18h], 0;je ;mov rax, qword [var_38h];mov rcx, qword [var_68h];cmp rax, 1": 2,
                "mov qword [var_8h], rbx;mov rbx, qword [var_68h];dec rbx;mov qword [var_68h], rbx;mov qword [var_10h], rbx": 1,
                "mov rsi, rcx;mov rbx, rax;mov rdx, r9;mov rax, rdi;mov rcx, r8": 1,
                "sub rsi, rbx;cmp rsi, ;jle ;test rdx, rdx;je ": 1,
                "mov qword [var_10h], rbx;mov qword [var_18h], rdi;call fcn.00499140;mov rax, qword [arg_78h];dec rax": 1,
                "mov rsi, qword [var_40h];mov qword [var_10h], rsi;call rcx;jmp ;mov qword [rsp], rcx": 1,
                "mov rbp, qword [var_48h];add rsp, ;ret;call fcn.00456090;jmp fcn.004997b0": 1,
                "call rcx;mov rax, qword [var_8h];mov qword [var_28h], rax;mov qword [rsp], rax;call fcn.00499a70": 2,
                "mov rbp, qword [var_30h];add rsp, ;ret;call fcn.00456090;jmp fcn.004999d0": 2,
                "shl rcx, 4;mov rbx, qword [rsp + ];mov rsi, qword [rbx + rcx + 8];mov rax, qword [rbx + rcx];lea rdi, [rbx + rcx]": 3,
                "mov rbp, qword [rsp];add rsp, 8;ret;mov rdi, r9;call fcn.004580f0": 3,
                "mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.00499cf0;mov rbp, qword [var_18h];add rsp, ": 3,
                "lea rbp, [var_40h];mov eax, ;xor ecx, ecx;jmp ;mov qword [var_30h], rax": 4,
                "call fcn.00498be0;mov rcx, qword [var_30h];lea rax, [rcx + ];mov rdx, qword [arg_60h];cmp rax, rdx": 4,
                "mov rcx, qword [var_30h];lea rax, [rcx + ];mov rdx, qword [arg_60h];cmp rax, rdx;jle ": 4,
                "mov rcx, qword [arg_58h];mov rdx, qword [arg_60h];mov ebx, ;jmp ;mov qword [var_30h], rbx": 3,
                "mov qword [var_30h], rbx;mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], r8;lea rdx, [r8 + rsi]": 3,
                "lea rbx, [r8 + rsi*2];mov rax, qword [arg_50h];mov rcx, qword [arg_58h];mov rdx, qword [arg_60h];mov rdi, qword [var_38h]": 3,
                "mov rdi, qword [var_38h];jmp ;mov rbp, qword [var_40h];add rsp, ;ret": 2,
                "mov qword [var_50h], rdx;cmp rdx, rax;jge ;mov qword [var_40h], rax;mov rbx, qword [arg_90h]": 3,
                "jmp ;mov rcx, qword [var_78h];mov rax, qword [var_50h];jmp ;mov rax, qword [arg_90h]": 3,
                "mov rax, qword [var_50h];jmp ;mov rax, qword [arg_90h];mov rdx, qword [rax + ];mov rbx, qword [arg_98h]": 3,
                "mov qword [var_10h], rcx;call rdx;mov rdx, qword [var_50h];mov rcx, qword [var_70h];lea rax, [rdx - 1]": 3,
                "call rsi;cmp byte [var_18h], 0;je ;mov rax, qword [var_78h];mov rcx, qword [var_58h]": 3,
                "mov qword [var_8h], rax;dec rax;mov qword [var_70h], rax;mov qword [var_10h], rax;call rdx": 3,
                "shr rax, 1;lea rsi, [rdx + rax];cmp rdx, rax;jle ;mov rdi, rsi": 3,
                "sub r9, rdi;mov qword [var_8h], r9;mov qword [var_10h], rdi;call rdx;cmp byte [var_18h], 0": 3,
                "mov qword [var_8h], r9;mov qword [var_10h], rdi;call rdx;cmp byte [var_18h], 0;je ": 3,
                "mov qword [var_20h], r8;call fcn.00499e50;mov rbx, qword [arg_b0h];mov rdi, qword [var_60h];mov r8, qword [var_78h]": 1,
                "mov qword [rsp], rax;mov rcx, qword [arg_98h];mov qword [var_8h], rcx;mov qword [var_10h], rsi;mov qword [var_18h], rdx": 1,
                "jmp ;mov rdi, rsi;mov r8, rax;mov rax, rdx;mov rsi, rcx": 1,
                "mov rax, rdx;mov rsi, rcx;jmp ;call fcn.00456090;jmp fcn.00499e50": 1,
                "mov rax, qword [arg_60h];mov rcx, qword [arg_58h];mov rdx, rax;sub rax, rcx;mov rcx, qword [arg_68h]": 2,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.0049a230;int3": 1,
                "lea rcx, [rax + 1];mov rbx, qword [arg_40h];mov rsi, qword [arg_50h];jmp ;mov qword [rsp], rcx": 2,
                "jne ;lea rcx, [rdx + 1];cmp rcx, rsi;jge ;mov qword [var_18h], rcx": 2,
                "call rax;movzx edi, byte [var_10h];mov rax, qword [arg_48h];mov rcx, qword [var_20h];mov rdx, qword [var_18h]": 2,
                "mov rax, qword [var_30h];mov qword [rsp], rax;mov rax, qword [var_28h];mov qword [var_8h], rax;mov rdx, qword [arg_50h]": 3,
                "mov rdx, qword [arg_50h];mov rax, qword [rdx];call rax;mov rax, qword [var_20h];lea rcx, [rax + rax]": 3,
                "mov qword [var_8h], rsi;mov rdx, qword [arg_48h];mov rdi, qword [rdx];call rdi;cmp byte [var_10h], 0": 3,
                "test rbx, rbx;jge ;jmp ;mov qword [var_28h], rsi;mov qword [rsp], rcx": 4,
                "mov rax, qword [rdx];call rax;mov rax, qword [arg_58h];mov qword [rsp], rax;mov rcx, qword [arg_60h]": 4,
                "mov qword [rsp], rax;mov rcx, qword [arg_40h];mov qword [var_8h], rcx;mov rdx, qword [arg_28h];mov rbx, qword [rdx]": 8,
                "jne ;jmp ;dec rdx;mov qword [var_40h], rdx;cmp rcx, rdx": 3,
                "mov rax, qword [arg_98h];mov rbx, qword [var_60h];mov rsi, qword [var_48h];mov rdx, qword [var_40h];mov qword [var_40h], rdx": 3,
                "mov qword [var_8h], rax;mov rdx, qword [arg_90h];mov rcx, qword [rdx];call rcx;mov rax, qword [var_50h]": 3,
                "mov rdx, qword [arg_90h];mov rcx, qword [rdx];call rcx;mov rax, qword [var_50h];lea rsi, [rax + 1]": 3,
                "jmp ;mov qword [rsp], rax;lea rax, [rcx - 1];mov qword [var_68h], rax;mov qword [var_8h], rax": 3,
                "call rbx;movzx ebx, byte [var_10h];xor ebx, 1;mov rax, qword [arg_98h];mov rcx, qword [var_48h]": 2,
                "jl ;cmp rdi, 5;jmp ;mov qword [rsp], rax;mov qword [var_8h], rbx": 2,
                "cmp rdi, 5;jmp ;mov qword [rsp], rax;mov qword [var_8h], rbx;mov rdx, qword [arg_88h]": 2,
                "mov rsi, qword [arg_98h];mov qword [var_8h], rsi;mov rdx, qword [arg_88h];mov rdi, qword [rdx];call rdi": 3,
                "mov qword [var_8h], rsi;mov rdx, qword [arg_88h];mov rdi, qword [rdx];call rdi;cmp byte [var_10h], 0": 1,
                "jmp ;mov qword [rsp], rax;lea rcx, [rdx - 1];mov qword [var_8h], rcx;mov rcx, qword [arg_88h]": 1,
                "mov rsi, qword [var_48h];jmp ;mov qword [rsp], rax;mov qword [var_8h], rcx;mov rdx, qword [arg_88h]": 1,
                "mov rcx, r9;mov qword [arg_70h], rdi;mov qword [arg_68h], rsi;mov r8, rdi;sub rdi, rsi": 1,
                "lea rbx, [rdi + 1];mov rax, qword [arg_60h];mov rcx, qword [arg_58h];mov rsi, qword [arg_68h];mov r8, qword [arg_70h]": 1,
                "je ;mov rax, qword [var_38h];mov qword [rsp], rax;mov rcx, qword [var_40h];mov qword [var_8h], rcx": 1,
                "ret;call fcn.00456090;jmp fcn.0049ad50;int3;int3": 1,
                "ud2;mov byte [], 1;call fcn.00491260;mov byte [], 2;mov rbp, qword [rsp]": 2,
                "mov rax, qword [rax];mov qword [rsp], rax;mov qword [rsp + 8], rcx;mov qword [rsp + ], rdx;mov rax, qword [rsp + ]": 1,
                "mov qword [rsp], rax;mov qword [rsp + 8], rcx;mov qword [rsp + ], rdx;mov rax, qword [rsp + ];mov qword [rsp + ], rax": 1,
                "mov rdx, qword [rcx];mov rcx, qword [rcx + 8];mov rbx, qword [rsp + ];cmp rbx, rcx;jae ": 1,
                "shl rbx, 4;mov rax, qword [rbx + rdx];mov rsi, qword [rbx + rdx + 8];lea rdi, [rbx + rdx];mov r8, qword [rsp + ]": 1,
                "mov rsi, qword [var_28h];cmp rbx, rsi;jae ;lea r8, [rbx + rbx*2];mov qword [var_38h], r8": 1,
                "mov qword [arg_128h], ;mov rbp, qword [var_e8h];add rsp, ;ret;mov qword [rsp], rcx": 2,
                "mov qword [var_88h], rax;cmp rax, 6;ja ;cmp rax, 1;je ": 2,
                "ja ;cmp rcx, 2;jne ;mov rcx, qword [arg_118h];mov rcx, qword [rcx]": 1,
                "mov rdx, qword [arg_118h];movsx rcx, byte [rdx];jmp ;lea rax, [];mov qword [rsp], rax": 1,
                "jne ;mov rdx, qword [arg_118h];movsxd rcx, dword [rdx];jmp ;cmp rcx, 6": 1,
                "mov qword [arg_58h], 0;mov byte [arg_60h], 0;mov rbp, qword [var_18h];add rsp, ;ret": 1,
                "add rsp, ;ret;mov rax, qword [arg_48h];jmp ;cmp rax, ": 2,
                "cmp rax, ;jne ;mov rcx, qword [arg_48h];cmp qword [rcx], 0;sete al": 2,
                "jmp fcn.0049ce80;int3;int3;int3;int3": 1,
                "lea rax, [];mov qword [rsp], rax;mov rax, qword [];mov qword [var_8h], rax;mov rax, qword [arg_38h]": 2,
                "mov rbp, qword [var_28h];add rsp, ;ret;call fcn.00456090;jmp fcn.0049d250": 2,
                "call fcn.00456090;jmp fcn.0049d250;int3;int3;int3": 2,
                "mov qword [var_8h], rbp;lea rbp, [var_8h];call fcn.0040e500;mov rax, qword [rsp];cmp dword [], 0": 3,
                "jmp ;call fcn.00456090;jmp fcn.0049d2e0;int3;int3": 3,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rcx;call fcn.00440c00;mov rax, qword [var_18h]": 13,
                "mov qword [var_10h], rcx;call fcn.00440c00;mov rax, qword [var_18h];mov rcx, qword [arg_40h];mov rdx, qword [var_20h]": 5,
                "jl ;cmp r8d, ;jl ;cmp r8d, ;jg ": 5,
                "cmp r8d, ;jl ;cmp r8d, ;jg ;cmp rdi, rdx": 5,
                "cmp rdi, rdx;jae ;mov word [rax + rdi*2], ;inc rdi;jmp ": 5,
                "movzx r9d, word [rdx + rbx*2 + 2];cmp r9w, ;jb ;cmp r9w, ;jae ": 5,
                "call fcn.00456090;jmp fcn.0049d550;int3;int3;int3": 3,
                "jbe ;sub rsp, ;mov qword [var_48h], rbp;lea rbp, [var_48h];mov eax, ": 3,
                "lea rax, [];mov qword [var_18h], rax;mov qword [var_20h], 1;call fcn.00444a60;mov rax, qword [var_28h]": 11,
                "mov qword [var_8h], rcx;call fcn.004a12b0;mov rax, qword [var_28h];mov rcx, qword [var_10h];mov rdx, qword [var_30h]": 3,
                "mov rdx, qword [var_30h];mov rbx, qword [var_18h];cmp rbx, 0;test rax, rax;je ": 5,
                "mov rcx, qword [var_28h];mov rdx, qword [var_30h];mov rbx, qword [var_18h];cmp rbx, 0;test rcx, rcx": 10,
                "mov rax, qword [var_8h];mov qword [var_98h], rax;mov rcx, qword [var_60h];mov qword [rsp], rcx;call fcn.0040abe0": 2,
                "mov rax, qword [var_48h];mov rcx, qword [var_50h];mov rdx, qword [var_98h];mov qword [rdx + ], rcx;cmp dword [], 0": 2,
                "mov rax, qword [arg_b8h];call fcn.004580f0;jmp ;lea rdi, [rdx + 8];call fcn.004580f0": 2,
                "jne ;mov rax, qword [arg_b8h];mov qword [rdi], rax;mov rax, qword [var_58h];mov qword [rdi + ], rax": 2,
                "jmp ;mov qword [arg_c8h], 0;mov qword [arg_d0h], rcx;mov qword [arg_d8h], rdx;mov rbp, qword [var_a8h]": 1,
                "jmp fcn.0049d8b0;int3;int3;int3;int3": 1,
                "mov qword [rdx + ], rax;lea rdi, [var_60h];lea rsi, [];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 1,
                "mov rcx, qword [var_20h];mov rdx, qword [var_50h];mov qword [rdx + ], rax;cmp dword [], 0;jne ": 1,
                "movups xmmword [arg_f0h], xmm0;mov rbp, qword [var_c0h];add rsp, ;ret;lea rcx, [rdi + 8]": 1,
                "mov qword [arg_e8h], 0;mov qword [arg_f0h], rax;mov qword [arg_f8h], rdx;mov rbp, qword [var_c0h];add rsp, ": 1,
                "jmp ;call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.0049dcd0": 1,
                "mov rdx, rcx;mov qword [rsp], rdx;mov qword [rsp + 8], rax;call fcn.0042f900;ud2": 1,
                "jg ;test rax, rax;jne ;mov rcx, qword [arg_f8h];mov rcx, qword [rcx + ]": 2,
                "mov rbx, qword [rcx + 8];mov rsi, qword [rcx + ];mov rdi, qword [rcx + ];mov rcx, qword [rcx + ];mov r8, qword [arg_f8h]": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], rdx;mov qword [var_18h], rbx;mov qword [var_20h], rsi;mov qword [var_28h], rdi": 2,
                "mov rdi, qword [rcx + ];mov r8, qword [rcx + ];mov r9, qword [rcx + ];mov rcx, qword [rcx + ];mov r10, qword [arg_f8h]": 1,
                "ret;mov qword [rsp], rax;call fcn.00460900;mov dword [rsp], 8;lea rax, []": 5,
                "call fcn.0049d8b0;mov rax, qword [var_10h];mov rcx, qword [var_20h];mov rdx, qword [var_18h];test rdx, rdx": 1,
                "mov qword [rsp], rax;call fcn.0049f640;mov rax, qword [rsp + ];mov rcx, qword [rsp + 8];test rcx, rcx": 1,
                "mov qword [rax + 8], rcx;mov qword [arg_38h], rax;mov rbp, qword [var_10h];add rsp, ;ret": 2,
                "mov rcx, rax;mov rax, qword [arg_28h];call fcn.004580f0;mov rax, rcx;jmp ": 3,
                "mov rax, qword [arg_28h];call fcn.004580f0;mov rax, rcx;jmp ;lea rdi, [rax + ]": 2,
                "call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [arg_28h];mov qword [rax + ], rcx;cmp dword [], 0": 3,
                "test rcx, rcx;je ;movups xmmword [arg_48h], xmm0;call fcn.0042f500;mov rbp, qword [var_30h]": 4,
                "call fcn.00460900;mov dword [rsp], 8;lea rax, [];mov qword [var_8h], rax;mov rax, qword [arg_40h]": 6,
                "cmp qword [rax + ], 0;je ;xorps xmm0, xmm0;jmp ;mov rcx, qword [rax + ]": 4,
                "mov qword [rsp], rcx;mov qword [var_8h], rbx;mov qword [var_10h], rdx;call fcn.0049dcd0;mov rax, qword [var_20h]": 4,
                "mov rax, qword [var_20h];mov rcx, qword [var_28h];mov rdx, qword [var_18h];test rax, rax;jne ": 4,
                "mov rcx, qword [var_28h];mov rdx, qword [var_18h];test rax, rax;jne ;mov rax, qword [arg_40h]": 4,
                "mov qword [var_8h], rbp;lea rbp, [var_8h];mov rax, qword [arg_18h];mov qword [rsp], rax;call fcn.0049fa60": 5,
                "mov qword [rsp + ], rdx;mov qword [rsp + ], rbx;mov rbp, qword [rsp + ];add rsp, ;ret": 5,
                "mov rcx, qword [var_30h];mov rdx, qword [var_28h];mov rbx, qword [var_18h];cmp rbx, 0;test rdx, rdx": 14,
                "test rdx, rdx;jne ;mov qword [var_40h], rax;mov ecx, ;mov dword [var_3ch], ecx": 5,
                "mov eax, dword [var_3ch];cmp ecx, eax;ja ;test rcx, rcx;jl ": 4,
                "mov qword [var_10h], rax;call fcn.004a1410;mov rax, qword [var_18h];mov rcx, qword [var_20h];mov qword [arg_70h], rax": 3,
                "movups xmmword [arg_70h], xmm0;mov qword [arg_80h], rax;mov qword [arg_88h], rdx;mov rbp, qword [var_50h];add rsp, ": 3,
                "ud2;call fcn.00456090;jmp fcn.0049fbe0;int3;int3": 3,
                "add rsp, ;ret;mov eax, dword [var_38h];test rax, rax;jl ": 3,
                "mov qword [var_10h], rcx;call fcn.004a1410;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "movups xmmword [arg_90h], xmm0;mov rbp, qword [var_50h];add rsp, ;ret;xorps xmm0, xmm0": 2,
                "jbe ;sub rsp, ;mov qword [var_40h], rbp;lea rbp, [var_40h];mov qword [arg_60h], 0": 3,
                "mov rbp, qword [var_40h];add rsp, ;ret;call fcn.0042f500;mov rbp, qword [var_40h]": 7,
                "add rsp, ;ret;mov qword [arg_60h], 0;mov qword [arg_68h], rax;mov qword [arg_70h], rcx": 2,
                "mov qword [var_10h], rbx;lea rsi, [var_4ch];mov qword [var_18h], rsi;mov qword [var_20h], rax;lea rdi, [var_50h]": 5,
                "lea rdx, [];cmp qword [rax + 8], rdx;jne ;cmp qword [rcx], ;jne ": 11,
                "test rdx, rdx;je ;xor ecx, ecx;test rdx, rdx;jne ": 11,
                "jbe ;xor edx, edx;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - 8]": 1,
                "mov qword [rsp], rax;lea rax, [var_30h];mov qword [var_8h], rax;call fcn.004a6c00;mov rax, qword [var_18h]": 2,
                "lea rax, [];mov qword [var_8h], rax;mov rax, qword [var_30h];mov qword [var_10h], rax;call fcn.0042ec20": 3,
                "mov qword [var_10h], ;call fcn.004a1410;mov rax, qword [var_20h];mov rcx, qword [var_18h];mov qword [arg_50h], rcx": 2,
                "mov rbp, qword [var_38h];add rsp, ;ret;call fcn.0042f500;mov rbp, qword [var_38h]": 4,
                "add rsp, ;ret;call fcn.0042f500;mov rbp, qword [var_38h];add rsp, ": 4,
                "jmp fcn.004a0540;int3;int3;int3;int3": 1,
                "mov qword [arg_50h], 0;mov qword [arg_58h], rcx;mov qword [arg_60h], rax;mov rbp, qword [var_38h];add rsp, ": 2,
                "mov qword [arg_50h], rax;xorps xmm0, xmm0;movups xmmword [arg_58h], xmm0;mov rbp, qword [var_38h];add rsp, ": 2,
                "movups xmmword [arg_58h], xmm0;mov rbp, qword [var_38h];add rsp, ;ret;call fcn.0042e8e0": 2,
                "call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.004a06b0;int3": 2,
                "xorps xmm0, xmm0;movups xmmword [arg_b0h], xmm0;movups xmmword [arg_c0h], xmm0;mov qword [arg_d8h], rcx;mov qword [arg_e0h], rax": 8,
                "mov rbp, qword [var_88h];add rsp, ;ret;mov dword [arg_d0h], 0;xorps xmm0, xmm0": 3,
                "mov qword [arg_c0h], rcx;mov qword [arg_c8h], rax;xorps xmm0, xmm0;movups xmmword [arg_d8h], xmm0;mov rcx, qword gs:[]": 1,
                "add rsp, ;ret;mov qword [arg_40h], 0;mov qword [arg_48h], rdx;mov qword [arg_50h], rax": 3,
                "sub rsp, ;mov qword [var_48h], rbp;lea rbp, [var_48h];mov rax, qword [arg_68h];mov dword [var_38h], eax": 3,
                "mov rdx, qword [arg_58h];mov qword [rsp], rdx;mov ebx, dword [arg_60h];mov dword [var_8h], ebx;mov qword [var_10h], rax": 2,
                "jne ;mov ebx, dword [var_3ch];cmp dword [var_38h], ebx;ja ;mov qword [arg_70h], 0": 2,
                "ret;mov qword [arg_70h], 0;mov qword [arg_78h], rax;mov qword [arg_80h], rcx;mov rbp, qword [var_48h]": 2,
                "movups xmmword [arg_78h], xmm0;mov rbp, qword [var_48h];add rsp, ;ret;call fcn.0042e8e0": 2,
                "ret;call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.004a0c00": 2,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov dword [var_28h], ;lea rax, [];mov qword [rsp], rax": 3,
                "lea rax, [];mov qword [rsp], rax;mov ecx, dword [var_28h];mov qword [var_8h], rcx;mov ecx, dword [var_28h]": 5,
                "test rcx, rcx;jbe ;mov qword [var_30h], rax;mov dword [var_2ch], ecx;mov rcx, qword [arg_48h]": 2,
                "mov rcx, qword [var_20h];test rax, rax;je ;je ;lea rdx, []": 2,
                "add rsp, ;ret;mov rax, qword [var_30h];mov qword [rsp], rax;mov eax, dword [var_2ch]": 2,
                "call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.004a0e80;int3": 2,
                "jge ;neg rax;mov qword [rsp], rax;call fcn.004a10a0;mov rcx, qword gs:[]": 1,
                "add rsp, ;ret;mov qword [rsp], rax;call fcn.004a10a0;mov rax, qword [var_10h]": 2,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.004a0fd0;int3": 2,
                "mov qword [var_30h], rbp;lea rbp, [var_30h];mov rax, qword [arg_48h];mov rcx, qword [arg_40h];xor edx, edx": 4,
                "mov rax, qword [arg_48h];mov rcx, qword [arg_40h];xor edx, edx;jmp ;inc rdx": 4,
                "mov qword [arg_50h], rcx;mov qword [arg_58h], rdx;mov qword [arg_60h], rdx;xorps xmm0, xmm0;movups xmmword [arg_68h], xmm0": 4,
                "xorps xmm0, xmm0;movups xmmword [arg_68h], xmm0;mov rbp, qword [var_30h];add rsp, ;ret": 6,
                "jmp ;call fcn.00456090;jmp fcn.004a11a0;int3;int3": 3,
                "sub rsp, ;mov qword [var_d8h], rbp;lea rbp, [var_d8h];mov rax, qword [arg_f0h];mov rcx, qword [arg_e8h]": 4,
                "test bl, bl;jne ;mov qword [arg_f8h], 0;xorps xmm0, xmm0;movups xmmword [arg_100h], xmm0": 4,
                "mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rdx, qword [var_28h];mov qword [rsp], 0;mov qword [var_8h], rcx": 6,
                "mov qword [rsp], rax;mov rax, qword [arg_50h];mov qword [var_8h], rax;call fcn.004a12b0;mov rax, qword [var_10h]": 4,
                "call fcn.004a12b0;mov rax, qword [var_10h];mov rcx, qword [var_18h];cmp rcx, 0;cmp qword [var_28h], 0": 4,
                "mov rcx, qword [var_18h];cmp rcx, 0;cmp qword [var_28h], 0;jne ;cmp rcx, 0": 4,
                "mov qword [var_8h], rax;call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.004a14d0": 4,
                "call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.004a14d0;int3": 4,
                "mov qword [var_28h], ;mov qword [var_30h], 0;call fcn.004a2f50;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov eax, dword [var_38h];cmp qword [var_40h], 0;je ;jmp ;mov eax, ecx": 4,
                "mov qword [var_8h], rdx;mov qword [var_10h], rax;mov qword [var_18h], rcx;call fcn.00445090;mov rax, qword [var_28h]": 4,
                "ret;cmp dx, ;sete dl;jmp ;mov dword [rsp], ": 4,
                "sete dl;jmp ;mov dword [rsp], ;mov qword [var_8h], 0;mov rax, qword [arg_2b8h]": 4,
                "mov qword [rsp], 0;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 2,
                "shl rcx, 4;lea rax, [];mov rdx, qword [rax + rcx];mov rax, qword [rax + rcx + 8];mov qword [arg_2c0h], rdx": 3,
                "mov rdx, qword [rax + rcx];mov rax, qword [rax + rcx + 8];mov qword [arg_2c0h], rdx;mov qword [arg_2c8h], rax;mov rbp, qword [var_2a8h]": 3,
                "call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.004a1570;int3": 3,
                "mov rax, qword [arg_70h];test rax, rax;je ;mov rcx, qword [arg_68h];mov qword [rsp], rcx": 3,
                "or ebx, 4;test rax, ;cmovne edx, ebx;bt eax, ;jb ": 2,
                "mov dword [var_40h], ;mov dword [var_50h], 1;lea rbx, [var_40h];mov rsi, rax;and rax, ": 2,
                "mov rsi, rax;and rax, ;cmp rax, ;jne ;mov eax, 4": 1,
                "xor ebx, ebx;jmp ;mov rdx, rax;and rax, 3;cmp rax, 1": 1,
                "jne ;mov rax, rdx;mov edx, ;jmp ;mov rax, rdx": 1,
                "mov qword [arg_90h], rdx;mov qword [arg_98h], rax;mov rbp, qword [var_58h];add rsp, ;ret": 2,
                "xor eax, eax;xor edx, edx;jmp ;mov qword [arg_88h], ;lea rax, []": 1,
                "mov qword [arg_98h], rax;mov rbp, qword [var_58h];add rsp, ;ret;call fcn.0042e8e0": 1,
                "jmp fcn.004a18c0;int3;int3;int3;int3": 1,
                "mov qword [var_48h], rbp;lea rbp, [var_48h];mov dword [var_44h], 0;mov rax, qword [arg_58h];mov qword [rsp], rax": 5,
                "jne ;cmp qword [rcx], ;je ;mov qword [arg_78h], 0;mov qword [arg_80h], rax": 2,
                "mov qword [arg_78h], 0;xorps xmm0, xmm0;movups xmmword [arg_80h], xmm0;mov rbp, qword [var_48h];add rsp, ": 5,
                "lea rax, [var_44h];mov qword [var_20h], rax;mov qword [var_28h], 0;call fcn.004a33c0;mov rax, qword [var_30h]": 3,
                "mov qword [var_20h], rax;mov qword [var_28h], 0;call fcn.004a33c0;mov rax, qword [var_30h];mov rcx, qword [var_38h]": 3,
                "ret;call fcn.00456090;jmp fcn.004a1c30;int3;int3": 3,
                "call fcn.00448ce0;mov rax, qword [var_50h];test rax, rax;je ;cmp rax, ": 3,
                "mov rax, qword [arg_58h];test rax, rax;jne ;xor eax, eax;mov dword [var_34h], eax": 4,
                "cmp rax, 2;jne ;mov eax, 2;jmp ;xor eax, eax": 4,
                "call fcn.004a3600;mov rax, qword [var_8h];mov qword [var_20h], rax;mov qword [rsp], rax;mov qword [var_8h], 1": 5,
                "mov rax, qword [arg_50h];mov qword [var_10h], rax;mov qword [var_20h], 0;call fcn.0042ec20;test eax, eax": 5,
                "mov qword [arg_60h], rcx;mov qword [arg_68h], rax;call fcn.0042f500;mov rbp, qword [var_40h];add rsp, ": 5,
                "ret;mov qword [arg_60h], rax;mov qword [arg_68h], rcx;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [arg_68h], rcx;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "ret;call fcn.00456090;jmp fcn.004a1f70;int3;int3": 4,
                "mov rax, qword [rsp + 8];mov rcx, qword [rax];test rcx, rcx;jl ;cmp rcx, ": 7,
                "ret;mov qword [rsp + ], 0;mov dword [rsp + ], 0;lea rax, [];mov qword [rsp + ], rax": 8,
                "mov rax, qword [rsp + 8];mov rcx, qword [rax];mov rdx, qword [rax + 8];cmp rdx, ;jg ": 2,
                "mov rcx, qword [rax];mov rdx, qword [rax + 8];cmp rdx, ;jg ;jne ": 2,
                "mov byte [rax + rbx + ], sil;inc rbx;cmp rbx, rdx;jl ;lea ecx, [rdx + 3]": 2,
                "mov ecx, edx;jmp ;mov qword [rsp + ], 0;mov dword [rsp + ], 0;lea rax, []": 2,
                "mov rax, qword [var_8h];mov rcx, qword [arg_48h];movzx edx, byte [rcx + 2];shl rdx, 8;movzx ebx, byte [rcx + 3]": 3,
                "add rdx, rbx;mov qword [rax], rdx;mov edx, dword [rcx + ];mov dword [rax + 8], edx;xor edx, edx": 1,
                "cmp rdx, ;jge ;movzx ebx, byte [rcx + rdx + 2];test bl, bl;jne ": 1,
                "cmp rdx, ;ja ;mov qword [var_30h], rax;mov qword [rsp], 0;lea rax, [rcx + 2]": 1,
                "mov qword [rsp], 0;lea rax, [rcx + 2];mov qword [var_8h], rax;mov qword [var_10h], rdx;mov qword [var_18h], ": 1,
                "mov rdi, qword [var_30h];mov qword [rdi + 8], rcx;cmp dword [], 0;jne ;mov qword [rdi], rax": 1,
                "mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax;call fcn.00460cc0;mov rax, qword []": 8,
                "mov rbp, qword [var_10h];add rsp, ;ret;call fcn.00456090;jmp fcn.004a25e0": 3,
                "mov rax, qword [arg_a8h];mov qword [var_88h], rax;mov rax, qword [arg_b8h];mov qword [var_80h], rax;mov rax, qword [arg_c8h]": 4,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];call fcn.004a25e0;mov rax, qword [rsp + 8];mov rcx, qword [rsp]": 3,
                "lea rbp, [rsp + ];call fcn.004a25e0;mov rax, qword [rsp + 8];mov rcx, qword [rsp];test rcx, rcx": 3,
                "mov rax, qword [rsp + ];mov qword [rdi + 8], rax;cmp dword [], 0;jne ;mov rax, qword [rsp + ]": 3,
                "mov rax, qword [rsp + ];call fcn.004580f0;jmp ;mov rax, qword [rsp + ];mov rax, qword [rax + ]": 3,
                "mov rcx, qword [rsp + ];mov qword [rsp], rcx;call rax;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 3,
                "int3;int3;int3;int3;mov eax, dword [rsp + 8]": 3,
                "int3;int3;mov qword [rsp + ], ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "int3;int3;mov qword [rsp + ], ;ret;int3": 8,
                "mov dword [var_ch], eax;lea rax, [var_34h];mov qword [var_10h], rax;mov dword [var_18h], 4;call fcn.004a5800": 1,
                "mov qword [var_10h], rax;mov dword [var_18h], 4;call fcn.004a5800;mov rax, qword [var_28h];mov rcx, qword [var_20h]": 1,
                "mov qword [arg_68h], rcx;mov qword [arg_70h], rax;mov rbp, qword [var_38h];add rsp, ;ret": 6,
                "jmp fcn.004a29d0;int3;int3;int3;int3": 1,
                "mov qword [rsp], rax;lea rax, [var_28h];mov qword [var_8h], rax;call fcn.004a36f0;mov rax, qword [var_10h]": 2,
                "mov rcx, qword [var_20h];mov rdx, qword [var_18h];test rdx, rdx;je ;mov qword [arg_298h], rax": 2,
                "mov qword [arg_2a8h], rcx;mov rbp, qword [var_278h];add rsp, ;ret;mov ebx, dword [var_28h]": 2,
                "mov dword [r8 + ], ebx;mov ebx, dword [var_50h];mov dword [r8 + ], ebx;lea rbx, [r8 + ];lea r9, [var_54h]": 2,
                "mov rbp, qword [rbp];lea rbx, [r8 + ];lea rsi, [var_25ch];cmp rsi, rbx;je ": 2,
                "movups xmmword [r8 + ], xmm0;jmp ;call fcn.00456090;jmp fcn.004a2a70;int3": 2,
                "mov rdx, qword [var_24h];mov qword [rbx + 4], rdx;mov rdx, qword [var_2ch];mov qword [rbx + ], rdx;mov rdx, qword [var_34h]": 3,
                "mov dword [rbx + ], edx;mov edx, dword [var_40h];mov dword [rbx + ], edx;mov edx, dword [var_44h];mov dword [rbx + ], edx": 3,
                "lea r8, [var_4ch];cmp r8, rdx;je ;mov rdx, qword [var_4ch];mov qword [rbx + ], rdx": 3,
                "movups xmmword [rbx + ], xmm0;movups xmm0, xmmword [var_25eh];movups xmmword [rbx + ], xmm0;jmp ;call fcn.00456090": 3,
                "mov qword [arg_58h], rax;mov qword [arg_60h], rcx;mov rbp, qword [var_40h];add rsp, ;ret": 57,
                "add rsp, ;ret;mov qword [rsp], rax;call fcn.0040abe0;mov rcx, qword [var_8h]": 142,
                "lea rax, [];jmp ;xor eax, eax;xor ecx, ecx;jmp ": 138,
                "mov eax, dword [arg_a0h];mov qword [var_10h], rax;mov rax, qword [arg_a8h];mov qword [var_18h], rax;mov eax, dword [arg_b0h]": 4,
                "jmp ;xor ecx, ecx;xor edx, edx;jmp ;xor ecx, ecx": 3,
                "xor eax, eax;jmp ;xor ecx, ecx;jmp ;call fcn.00456090": 6,
                "xor eax, eax;xor ecx, ecx;jmp ;call fcn.00456090;jmp fcn.004a3520": 3,
                "jmp fcn.004a3520;int3;int3;int3;int3": 3,
                "mov qword [var_40h], rax;mov qword [rsp], rcx;call fcn.0040abe0;mov rdx, qword [var_8h];mov rax, qword [var_40h]": 45,
                "call fcn.0040abe0;mov rdx, qword [var_8h];mov rax, qword [var_40h];lea rcx, [];jmp ": 45,
                "mov qword [rsp], rax;mov qword [var_8h], 2;mov rax, qword [var_48h];mov qword [var_10h], rax;mov rax, qword [var_50h]": 4,
                "cmp rcx, ;jne ;mov rcx, qword [];mov rdx, qword [];mov qword [arg_78h], rax": 4,
                "mov rcx, qword [arg_60h];mov qword [var_40h], rcx;mov qword [rsp], rax;mov qword [var_8h], 2;mov rax, qword [arg_58h]": 27,
                "call fcn.0049fad0;mov rax, qword [var_8h];mov rcx, qword [arg_60h];mov qword [var_48h], rcx;mov qword [rsp], rax": 9,
                "mov qword [arg_78h], rdx;mov rbp, qword [var_50h];add rsp, ;ret;mov qword [var_40h], rax": 4,
                "mov rbp, qword [var_50h];add rsp, ;ret;mov qword [var_40h], rax;mov qword [rsp], rcx": 11,
                "call fcn.00456090;jmp fcn.004a3c90;int3;int3;int3": 4,
                "call fcn.0049fad0;mov rax, qword [var_8h];mov qword [rsp], rax;mov qword [var_8h], 3;mov eax, dword [arg_58h]": 8,
                "movzx eax, byte [arg_5ch];mov eax, eax;mov qword [var_18h], rax;mov eax, dword [arg_60h];mov qword [var_20h], rax": 5,
                "test rax, rax;jne ;test rcx, rcx;je ;cmp rcx, ": 10,
                "mov qword [arg_70h], rcx;mov qword [arg_78h], rdx;mov rbp, qword [var_48h];add rsp, ;ret": 11,
                "mov qword [arg_78h], rdx;mov rbp, qword [var_48h];add rsp, ;ret;mov qword [var_40h], rax": 11,
                "mov rax, qword [arg_50h];mov qword [var_10h], rax;mov eax, dword [arg_58h];mov qword [var_18h], rax;mov qword [var_20h], 0": 5,
                "mov qword [var_60h], rcx;mov rcx, qword [arg_a8h];mov qword [var_58h], rcx;mov qword [rsp], rax;mov qword [var_8h], 5": 5,
                "mov rcx, qword [arg_a8h];mov qword [var_58h], rcx;mov qword [rsp], rax;mov qword [var_8h], 5;mov rax, qword [arg_88h]": 5,
                "mov rax, qword [var_28h];mov rcx, qword [var_38h];cmp eax, ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rdx, qword [];mov dword [arg_68h], eax;mov qword [arg_70h], rcx;mov qword [arg_78h], rdx;mov rbp, qword [var_48h]": 4,
                "call fcn.00448ba0;mov rax, qword [var_28h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "call fcn.00456090;jmp fcn.004a4540;int3;int3;int3": 4,
                "mov qword [rsp + ], rax;xorps xmm0, xmm0;movups xmmword [rsp + ], xmm0;call fcn.00448ba0;mov rax, qword [rsp + ]": 7,
                "mov qword [rsp], rax;mov qword [var_8h], 3;mov rax, qword [arg_50h];mov qword [var_10h], rax;mov eax, dword [arg_58h]": 4,
                "call fcn.00456090;jmp fcn.004a47a0;int3;mov rcx, qword gs:[];mov rcx, qword [rcx]": 3,
                "mov rcx, qword [arg_98h];mov qword [var_68h], rcx;mov rcx, qword [arg_a0h];mov qword [var_60h], rcx;mov qword [rsp], rax": 4,
                "mov rcx, qword [arg_a0h];mov qword [var_60h], rcx;mov qword [rsp], rax;mov qword [var_8h], 4;mov rax, qword [var_70h]": 4,
                "mov rax, qword [var_40h];mov rcx, qword [var_50h];test eax, eax;jne ;test rcx, rcx": 4,
                "call fcn.0040abe0;mov rdx, qword [var_8h];mov rax, qword [var_58h];lea rcx, [];jmp ": 4,
                "mov rax, qword [var_8h];lea rcx, [];jmp ;call fcn.00456090;jmp fcn.004a4aa0": 4,
                "test rax, rax;jne ;xor eax, eax;xor ecx, ecx;mov qword [arg_58h], rcx": 4,
                "cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_e0h], rbp;lea rbp, [var_e0h]": 9,
                "mov qword [rsp], rax;mov qword [var_8h], ;mov rax, qword [arg_f0h];mov qword [var_10h], rax;mov rax, qword [var_d8h]": 4,
                "mov qword [var_30h], rax;mov rax, qword [var_b8h];mov qword [var_38h], rax;mov rax, qword [var_b0h];mov qword [var_40h], rax": 4,
                "mov qword [var_98h], rcx;mov rcx, qword [arg_c8h];mov qword [var_90h], rcx;mov rcx, qword [arg_d0h];mov qword [var_88h], rcx": 15,
                "mov qword [var_88h], rcx;mov rcx, qword [arg_d8h];mov qword [var_80h], rcx;mov rcx, qword [arg_e0h];mov qword [var_78h], rcx": 15,
                "mov qword [rsp], rax;mov qword [var_8h], 8;mov rax, qword [arg_b0h];mov qword [var_10h], rax;mov eax, dword [arg_b8h]": 6,
                "mov qword [var_8h], 8;mov rax, qword [arg_b0h];mov qword [var_10h], rax;mov eax, dword [arg_b8h];mov qword [var_18h], rax": 6,
                "mov qword [var_10h], rax;mov eax, dword [arg_b8h];mov qword [var_18h], rax;mov rax, qword [var_98h];mov qword [var_20h], rax": 6,
                "sub rsp, ;mov qword [var_80h], rbp;lea rbp, [var_80h];mov rax, qword [];mov qword [rsp], rax": 5,
                "mov qword [var_30h], rax;mov rax, qword [var_60h];mov qword [var_38h], rax;call fcn.00448ce0;mov rax, qword [var_40h]": 4,
                "lea rcx, [];jmp ;call fcn.00456090;jmp fcn.004a4fc0;int3": 4,
                "call fcn.00456090;jmp fcn.004a4fc0;int3;int3;int3": 4,
                "jmp fcn.004a4fc0;int3;int3;int3;int3": 4,
                "ret;call fcn.00456090;jmp fcn.004a50f0;int3;int3": 4,
                "jmp ;call fcn.00456090;jmp fcn.004a5160;int3;int3": 4,
                "mov rax, qword [arg_80h];mov qword [var_10h], rax;mov rax, qword [var_68h];mov qword [var_18h], rax;mov eax, dword [arg_90h]": 5,
                "mov eax, dword [arg_90h];mov qword [var_20h], rax;mov rax, qword [var_60h];mov qword [var_28h], rax;mov rax, qword [var_58h]": 5,
                "mov qword [var_8h], 2;mov eax, dword [arg_58h];mov qword [var_10h], rax;mov rax, qword [var_40h];mov qword [var_18h], rax": 4,
                "mov rax, qword [var_40h];mov qword [var_18h], rax;mov qword [var_20h], 0;call fcn.00448ba0;mov rax, qword [var_28h]": 7,
                "mov rax, qword [];mov qword [rsp], rax;call fcn.0049fad0;mov rax, qword [var_8h];mov rcx, qword [arg_b0h]": 11,
                "movsxd rax, eax;mov qword [var_18h], rax;mov eax, dword [arg_60h];movsxd rax, eax;mov qword [var_20h], rax": 3,
                "mov qword [var_10h], rax;mov eax, dword [arg_78h];movsxd rax, eax;mov qword [var_18h], rax;mov eax, dword [arg_7ch]": 4,
                "mov qword [var_8h], 7;mov rax, qword [arg_a8h];mov qword [var_10h], rax;mov rax, qword [var_90h];mov qword [var_18h], rax": 2,
                "mov rax, qword [arg_a8h];mov qword [var_10h], rax;mov rax, qword [var_90h];mov qword [var_18h], rax;mov eax, dword [arg_b8h]": 5,
                "mov rax, qword [var_88h];mov qword [var_28h], rax;mov rax, qword [var_80h];mov qword [var_30h], rax;mov rax, qword [var_78h]": 10,
                "mov qword [var_18h], rax;mov eax, dword [arg_b0h];mov qword [var_20h], rax;mov rax, qword [var_80h];mov qword [var_28h], rax": 2,
                "mov eax, dword [arg_b0h];mov qword [var_20h], rax;mov rax, qword [var_80h];mov qword [var_28h], rax;mov eax, dword [arg_c0h]": 2,
                "mov qword [var_38h], rax;mov rax, qword [var_80h];mov qword [var_40h], rax;mov rax, qword [var_78h];mov qword [var_48h], rax": 3,
                "mov rcx, qword [];mov qword [arg_f0h], rax;mov qword [arg_f8h], rcx;mov rbp, qword [var_98h];add rsp, ": 3,
                "mov rax, qword [arg_50h];mov qword [var_10h], rax;movzx eax, byte [arg_58h];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rax, qword [];mov qword [rsp], rax;call fcn.0049fad0;mov rax, qword [var_8h];mov rcx, qword [arg_70h]": 4,
                "mov rcx, qword [arg_70h];mov qword [var_58h], rcx;mov rcx, qword [arg_78h];mov qword [var_50h], rcx;mov rcx, qword [arg_80h]": 4,
                "mov qword [var_8h], 5;mov rax, qword [var_68h];mov qword [var_10h], rax;mov eax, dword [arg_88h];mov qword [var_18h], rax": 4,
                "mov qword [var_18h], rax;mov eax, dword [arg_8ch];mov qword [var_20h], rax;mov rax, qword [var_60h];mov qword [var_28h], rax": 4,
                "call fcn.00448ce0;mov rax, qword [var_50h];movzx ecx, byte [var_40h];test rcx, rcx;jne ": 4,
                "mov rcx, qword [];mov qword [arg_a0h], rax;mov qword [arg_a8h], rcx;mov rbp, qword [var_70h];add rsp, ": 4,
                "mov qword [arg_a8h], rcx;mov rbp, qword [var_70h];add rsp, ;ret;mov qword [rsp], rax": 4,
                "xor ecx, ecx;mov qword [arg_a0h], rcx;mov qword [arg_a8h], rax;mov rbp, qword [var_70h];add rsp, ": 4,
                "mov rcx, qword [arg_70h];mov qword [var_48h], rcx;mov rcx, qword [arg_78h];mov qword [var_40h], rcx;mov qword [rsp], rax": 4,
                "mov rax, qword [var_40h];mov qword [var_20h], rax;call fcn.00448ba0;mov rax, qword [var_28h];test rax, rax": 4,
                "mov qword [rsp], rax;call fcn.0049fad0;mov rax, qword [var_8h];mov rcx, qword [arg_58h];mov qword [var_40h], rcx": 8,
                "mov rax, qword [var_a0h];mov qword [var_10h], rax;mov rax, qword [var_98h];mov qword [var_18h], rax;mov rax, qword [var_90h]": 8,
                "mov qword [arg_f8h], rcx;mov rbp, qword [var_a8h];add rsp, ;ret;mov qword [rsp], rax": 8,
                "mov qword [var_8h], 2;mov rax, qword [var_48h];mov qword [var_10h], rax;mov rax, qword [var_40h];mov qword [var_18h], rax": 8,
                "cmp rax, ;jne ;mov rax, qword [];mov rcx, qword [];mov qword [arg_70h], rax": 11,
                "mov rbp, qword [var_48h];add rsp, ;ret;call fcn.00456090;jmp fcn.004a6e00": 4,
                "mov rax, qword [];mov rcx, qword [];mov qword [arg_a0h], rax;mov qword [arg_a8h], rcx;mov rbp, qword [var_68h]": 4,
                "jmp fcn.004a7080;int3;int3;int3;int3": 4,
                "xor ecx, ecx;jmp ;call fcn.00456090;jmp fcn.004a71b0;int3": 4,
                "jbe ;sub rsp, ;mov qword [rsp + ], rbp;lea rbp, [rsp + ];movabs rax, ": 8,
                "mov qword [], rax;test rdx, rdx;jne ;mov qword [rsp + ], rcx;mov dword [rsp], ": 6,
                "mov qword [rsp + ], rcx;mov dword [rsp], ;lea rax, [];mov qword [rsp + 8], rax;mov qword [rsp + ], rcx": 6,
                "call fcn.0049d250;mov rax, qword [var_18h];mov rcx, qword [var_10h];mov qword [rsp], rcx;mov qword [var_8h], rax": 34,
                "call fcn.0042ebd0;ud2;mov byte [], 1;call fcn.0049d340;call fcn.00461db0": 1,
                "mov rbp, qword [rsp];add rsp, 8;ret;call fcn.00456090;jmp fcn.004aa650": 1,
                "lea rbp, [rsp + ];mov rax, qword [rsp + ];mov rcx, qword [rax + 8];mov rdx, qword [rax];mov rbx, qword [rsp + ]": 5,
                "mov rbx, qword [rsp + ];mov rsi, qword [rbx + 8];cmp qword [rbx], rdx;je ;xor ecx, ecx": 5,
                "mov qword [rsp + 8], rax;mov qword [rsp + ], 4;call fcn.00409930;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 2,
                "ud2;call fcn.00456090;jmp fcn.004ac140;int3;int3": 2,
                "call fcn.004a4ba0;mov rax, qword [rsp + ];mov rcx, qword [rsp + 8];mov qword [rsp + ], rcx;mov qword [rsp + ], rax": 4,
                "jmp ;call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.004ac280": 3,
                "mov qword [var_8h], rcx;mov ecx, dword [var_50h];mov qword [var_10h], rcx;call fcn.00440c00;mov rsi, qword [var_18h]": 4,
                "mov rsi, qword [var_18h];mov ebx, dword [var_50h];mov rax, qword [var_288h];mov rcx, qword [arg_2a0h];mov rdx, qword [arg_2a8h]": 4,
                "mov r8, qword [var_60h];mov r9, qword [var_58h];xorps xmm0, xmm0;test rbx, rbx;jbe ": 3,
                "mov rcx, qword [var_58h];cmp rax, rcx;jle ;mov rax, qword [];mov rdx, qword []": 3,
                "mov rbx, qword [var_288h];mov qword [arg_2b0h], rbx;mov qword [arg_2b8h], rcx;mov rcx, qword [var_60h];mov qword [arg_2c0h], rcx": 3,
                "add rsp, ;ret;mov rdx, qword [var_288h];mov qword [arg_2b0h], rdx;mov rdx, qword [var_58h]": 2,
                "mov rdi, rdx;mov r8, rax;mov rax, rbx;call fcn.004580f0;mov rdi, r8": 7,
                "mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h];mov qword [var_70h], rax;mov rcx, qword [arg_88h]": 2,
                "jbe ;sub rsp, ;mov qword [var_48h], rbp;lea rbp, [var_48h];mov dword [arg_90h], 0": 2,
                "mov edx, dword [var_44h];mov qword [arg_88h], rdx;mov qword [arg_98h], rax;mov qword [arg_a0h], rcx;mov rbp, qword [var_48h]": 2,
                "mov rax, rbx;test rax, rax;jbe ;mov qword [arg_78h], rdx;mov qword [arg_80h], rax": 3,
                "mov qword [arg_90h], rbx;mov qword [arg_98h], rax;mov qword [arg_a0h], rcx;mov dword [arg_a8h], edx;xorps xmm0, xmm0": 3,
                "sub rsp, ;mov qword [var_a8h], rbp;lea rbp, [var_a8h];xorps xmm0, xmm0;movups xmmword [var_68h], xmm0": 3,
                "mov rax, qword [arg_c0h];mov qword [var_8h], rax;mov rax, qword [arg_c8h];mov qword [var_10h], rax;lea rax, [var_68h]": 3,
                "test rbx, rbx;jne ;lea edx, [rcx - 1];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "cmp edx, 1;ja ;cmp rsi, 0;jne ;xorps xmm0, xmm0": 2,
                "mov rax, qword [arg_890h];mov qword [var_8h], rax;call fcn.004a12b0;mov rax, qword [var_28h];mov rcx, qword [var_30h]": 3,
                "xor eax, eax;rep stosq qword [rdi], rax;mov dword [var_48h], 0;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "xor ecx, ecx;mov qword [var_860h], rcx;mov esi, ;lea rdi, [var_50h];jmp ": 2,
                "mov qword [arg_8b0h], rdx;mov rbp, qword [var_870h];add rsp, ;ret;mov qword [rsp], rdi": 2,
                "mov rax, qword [var_20h];mov rcx, qword [var_18h];mov qword [arg_898h], rcx;mov qword [arg_8a0h], rax;xorps xmm0, xmm0": 2,
                "mov dword [var_28h], 0;mov qword [var_30h], rax;call fcn.004aee50;mov rdx, qword [var_40h];mov rbx, qword [var_38h]": 2,
                "lea rax, [];mov rcx, qword [var_850h];jmp ;xorps xmm0, xmm0;movups xmmword [arg_898h], xmm0": 2,
                "jmp ;xorps xmm0, xmm0;movups xmmword [arg_898h], xmm0;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [arg_8a8h], rdx;mov qword [arg_8b0h], rcx;mov rbp, qword [var_870h];add rsp, ;ret": 1,
                "jbe ;sub rsp, ;mov qword [var_120h], rbp;lea rbp, [var_120h];mov rax, qword [arg_138h]": 2,
                "lea rbp, [var_120h];mov rax, qword [arg_138h];test rax, rax;je ;mov rcx, qword [arg_130h]": 2,
                "lea rbp, [rsp - ];call fcn.00458ba7;mov rbp, qword [rbp];mov eax, ;lea rcx, [var_48h]": 2,
                "mov qword [var_40h], rax;mov qword [var_118h], rcx;mov qword [rsp], rdx;mov qword [var_8h], rcx;mov dword [var_10h], eax": 1,
                "mov rcx, qword [var_28h];mov edx, dword [var_18h];test rax, rax;jne ;mov rax, qword [var_40h]": 1,
                "mov qword [arg_140h], rax;mov qword [arg_148h], rcx;xorps xmm0, xmm0;movups xmmword [arg_150h], xmm0;mov rbp, qword [var_120h]": 1,
                "jbe ;sub rsp, ;mov qword [var_e8h], rbp;lea rbp, [var_e8h];xorps xmm0, xmm0": 2,
                "lea rbp, [var_e8h];xorps xmm0, xmm0;movups xmmword [var_90h], xmm0;movups xmmword [var_a0h], xmm0;movups xmmword [var_b0h], xmm0": 2,
                "call fcn.004aca90;mov eax, dword [var_48h];mov rcx, qword [var_58h];mov rdx, qword [var_50h];mov rbx, qword [var_30h]": 2,
                "test byte [rbx], al;shr rsi, 1;test rsi, rsi;jl ;cmp rsi, ": 2,
                "lea rcx, [rsi - 1];cmp rcx, ;ja ;mov qword [var_68h], rcx;lea rax, []": 2,
                "jne ;cmp r8, rbx;ja ;mov qword [var_88h], rsi;mov qword [var_80h], rdi": 2,
                "shl r8, 1;and r8, rax;lea rax, [rcx + r8];mov qword [rsp], rax;sub rbx, rsi": 2,
                "mov rbx, qword [var_d8h];mov qword [var_8h], rbx;mov qword [var_10h], rax;mov qword [var_18h], rsi;mov qword [var_20h], rcx": 2,
                "mov rax, qword [var_80h];mov rdx, qword [var_d0h];mov rbx, qword [var_78h];jmp ;mov qword [arg_110h], rax": 1,
                "jmp ;mov qword [arg_110h], 0;xorps xmm0, xmm0;movups xmmword [arg_118h], xmm0;mov dword [arg_128h], eax": 1,
                "add rsp, ;ret;mov qword [arg_110h], 0;xorps xmm0, xmm0;movups xmmword [arg_118h], xmm0": 2,
                "movups xmmword [arg_130h], xmm0;mov rbp, qword [var_e8h];add rsp, ;ret;mov rcx, qword []": 1,
                "call fcn.00456090;jmp fcn.004ad590;int3;int3;int3": 1,
                "mov rax, qword [var_30h];mov rcx, qword [var_38h];mov edx, dword [var_48h];mov rbx, qword [var_50h];mov rsi, qword [var_58h]": 2,
                "test rbx, rbx;jne ;mov dword [var_64h], edx;cmp edx, 4;jne ": 2,
                "add rsp, ;ret;cmp edx, ;jne ;cmp rcx, 8": 1,
                "sub rsp, ;mov qword [var_60h], rbp;lea rbp, [var_60h];lea rax, [];mov qword [rsp], rax": 7,
                "mov qword [var_8h], ;mov qword [var_10h], ;call fcn.00440c00;mov rax, qword [arg_70h];mov qword [rsp], rax": 2,
                "mov qword [var_8h], rax;mov rax, qword [arg_80h];mov qword [var_10h], rax;mov qword [var_20h], ;mov qword [var_28h], ": 2,
                "mov qword [arg_88h], 0;xorps xmm0, xmm0;movups xmmword [arg_90h], xmm0;mov dword [arg_a0h], eax;mov qword [arg_a8h], rsi": 2,
                "mov rcx, qword [var_30h];mov rdx, qword [var_28h];mov rbx, qword [var_18h];test rdx, rdx;jne ": 3,
                "test rbx, rbx;jbe ;test byte [rax], al;shl rbx, 1;test rbx, rbx": 3,
                "mov qword [var_10h], rcx;mov ecx, dword [arg_70h];mov dword [var_18h], ecx;mov qword [var_20h], rax;mov qword [var_28h], rbx": 2,
                "cmp dword [], 0;jne ;lea rax, [];mov qword [rdi], rax;lea rax, []": 85,
                "mov qword [var_8h], rbx;mov qword [var_10h], rsi;mov qword [var_18h], r8;mov qword [var_20h], rdi;lea rax, []": 2,
                "mov rax, qword [var_48h];inc rax;mov rcx, qword [var_38h];mov rdx, qword [var_40h];mov rbx, qword [arg_128h]": 2,
                "mov rax, qword [arg_128h];mov rdi, qword [rcx + 8];mov r8, qword [rcx];xor r9d, r9d;jmp ": 2,
                "mov dword [var_18h], 7;mov qword [var_20h], rcx;mov qword [var_28h], rax;mov qword [var_30h], ;call fcn.004addc0": 2,
                "mov rcx, qword [arg_30h];mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.004aed90;mov rax, qword [var_10h]": 2,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.004ae5d0;int3": 2,
                "call fcn.004ac7f0;mov rax, qword [var_8h];mov rcx, qword [var_18h];mov rdx, qword [var_10h];test rdx, rdx": 3,
                "mov qword [var_a0h], rax;mov rcx, qword [var_80h];mov edx, dword [rcx + 8];mov qword [var_78h], rdx;mov ecx, dword [rcx + ]": 3,
                "mov rcx, qword [var_80h];mov edx, dword [rcx + 8];mov qword [var_78h], rdx;mov ecx, dword [rcx + ];lea rbx, []": 3,
                "mov qword [var_8h], rcx;mov qword [var_10h], rcx;call fcn.00440c00;mov rax, qword [var_18h];mov rcx, qword [arg_b8h]": 3,
                "mov edi, dword [var_5ch];xor r8d, r8d;xor r9d, r9d;jmp ;mov rax, qword [var_70h]": 3,
                "lea rax, [];mov qword [rsp], rax;mov ecx, dword [var_54h];mov qword [var_8h], rcx;mov ecx, dword [var_54h]": 3,
                "mov qword [var_90h], rax;mov qword [rsp], rcx;mov dword [var_8h], r8d;mov qword [var_10h], rax;lea rdx, [var_54h]": 2,
                "call fcn.004aec20;mov rax, qword [var_48h];mov rcx, qword [var_40h];test rcx, rcx;je ": 2,
                "mov rax, qword [var_98h];mov qword [arg_c8h], rax;mov qword [arg_d0h], rcx;mov rax, qword [var_68h];mov qword [arg_d8h], rax": 2,
                "mov rdx, qword [var_60h];mov qword [arg_d0h], rdx;mov rdx, qword [var_68h];mov qword [arg_d8h], rdx;mov qword [arg_e0h], rcx": 2,
                "jmp ;lea rdx, [];jmp ;mov eax, dword [var_54h];test rax, rax": 2,
                "mov rdx, qword [var_90h];mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rcx;call fcn.004a1410": 2,
                "mov rdi, r13;test rdx, rdx;jle ;cmp rdx, r9;je ": 2,
                "jmp ;mov qword [var_78h], rdx;mov qword [var_88h], rbx;lea rdx, [];mov qword [rsp], rdx": 2,
                "mov qword [var_88h], rbx;lea rdx, [];mov qword [rsp], rdx;mov rbx, qword [var_98h];mov qword [var_8h], rbx": 2,
                "mov qword [arg_c8h], 0;xorps xmm0, xmm0;movups xmmword [arg_d0h], xmm0;mov qword [arg_e0h], rdx;mov qword [arg_e8h], rcx": 2,
                "xorps xmm0, xmm0;movups xmmword [arg_d0h], xmm0;mov qword [arg_e0h], rdx;mov qword [arg_e8h], rcx;mov rbp, qword [var_a8h]": 2,
                "mov qword [var_60h], rcx;mov qword [rsp], rax;mov qword [var_8h], 6;mov rax, qword [arg_78h];mov qword [var_10h], rax": 2,
                "mov rax, qword [arg_78h];mov qword [var_10h], rax;mov rax, qword [var_58h];mov qword [var_18h], rax;mov eax, dword [arg_88h]": 2,
                "mov qword [var_30h], rax;mov eax, dword [arg_98h];mov qword [var_38h], rax;call fcn.00448ce0;mov rax, qword [var_40h]": 1,
                "mov qword [arg_a0h], rcx;mov qword [arg_a8h], rax;mov rbp, qword [var_68h];add rsp, ;ret": 3,
                "xorps xmm0, xmm0;movups xmmword [var_48h], xmm0;call fcn.00448e20;mov rax, qword [var_58h];test rax, rax": 4,
                "mov qword [var_10h], rax;mov rax, qword [var_48h];mov qword [var_18h], rax;mov eax, dword [arg_78h];mov qword [var_20h], rax": 4,
                "call fcn.0049d250;mov rax, qword [var_10h];mov rcx, qword [var_18h];mov qword [rsp], rax;mov qword [var_8h], rcx": 4,
                "mov rcx, qword [var_18h];mov qword [rsp], rax;mov qword [var_8h], rcx;call fcn.0049f880;mov rax, qword [var_10h]": 4,
                "call fcn.0042ebd0;ud2;mov byte [], 1;call fcn.00462900;call fcn.004aa650": 3,
                "mov rbx, qword [rsp + ];mov esi, dword [rsp + ];mov rdi, qword [rsp + ];mov qword [rsp + ], rbx;mov qword [rsp + ], rdx": 1,
                "mov rcx, qword [rsp + ];mov rdx, qword [rsp + ];mov rbx, qword [rsp + ];mov qword [rsp + ], rbx;mov qword [rsp + ], rdx": 1,
                "cmp rbx, ;jne ;lea rbx, [rdx + 7];cmp rcx, rbx;jl ": 1,
                "cmp esi, ;jne ;movzx esi, word [rdx + rax + 4];cmp si, ;jne ": 1,
                "ja ;mov rsi, qword [rdx + rax];movabs rdi, ;cmp rdi, rsi;jne ": 1,
                "movzx esi, byte [rdx + rax + 1];cmp sil, ;jne ;mov edi, 1;test dil, dil": 1,
                "mov rdi, rbx;jmp ;inc rbx;cmp rbx, rcx;jge ": 1,
                "mov qword [arg_30h], rsi;sub rcx, r8;mov rdx, rcx;neg rcx;sar rcx, ": 1,
                "cmp dil, r8b;jne ;cmp dil, ;jb ;cmp dil, ": 1,
                "jb ;cmp dil, ;jbe ;mov byte [arg_30h], 0;mov rbp, qword [rsp]": 1,
                "lea rbx, [rdx + 1];mov rsi, qword [arg_a8h];cmp rbx, rsi;ja ;mov rax, qword [arg_98h]": 3,
                "cmp rdi, ;jb ;jmp ;lea rdi, [rdx - 1];cmp rdi, ": 3,
                "mov rdx, qword [arg_a0h];jmp ;mov rbx, qword [arg_a0h];mov rax, qword [arg_98h];mov rsi, qword [arg_a8h]": 2,
                "mov rsi, qword [arg_a8h];jmp ;call fcn.0042e8e0;ud2;call fcn.0042e8e0": 2,
                "je ;cmp dl, ;sete dl;dec rax;mov rbx, rax": 2,
                "neg rax;sar rax, ;and rax, 1;add rax, rcx;mov byte [var_3fh], dl": 2,
                "add rax, rcx;mov byte [var_3fh], dl;mov qword [rsp], rax;mov qword [var_8h], rbx;call fcn.004b7990": 2,
                "mov rbp, qword [var_40h];add rsp, ;ret;cmp rcx, 0;jne ": 2,
                "lea rcx, [rsi + rdx];mov qword [rsp], rcx;lea rcx, [var_57h];mov qword [var_8h], rcx;mov qword [var_10h], rax": 2,
                "mov qword [arg_a8h], rax;mov rax, qword [arg_80h];mov qword [arg_b0h], rax;mov rax, qword [arg_88h];mov qword [arg_b8h], rax": 2,
                "call fcn.00456090;jmp fcn.004b16f0;int3;mov rcx, qword gs:[];mov rcx, qword [rcx]": 2,
                "mov qword [var_10h], rdx;lea rdx, [];mov qword [var_18h], rdx;mov qword [var_20h], ;call fcn.004b1cb0": 3,
                "mov qword [var_18h], rdx;mov qword [var_20h], ;call fcn.004b1cb0;mov rax, qword [var_30h];mov rcx, qword [var_28h]": 3,
                "imul rax, rdx, ;sub r8, rax;mov qword [var_58h], r8;cmp rsi, 4;jb ": 2,
                "mov byte [rcx + 3], dil;test rdx, rdx;jne ;xor edx, edx;mov qword [rsp], rcx": 2,
                "mov qword [var_10h], rsi;mov qword [var_18h], r8;mov qword [var_20h], rdx;call fcn.004b12e0;mov rax, qword [var_28h]": 2,
                "mov byte [rax + rcx], ;mov qword [rsp], rax;mov qword [var_8h], rbx;mov qword [var_10h], rdx;mov rax, qword [var_50h]": 2,
                "mov qword [var_18h], rax;mov qword [var_20h], 9;call fcn.004b12e0;mov rax, qword [var_38h];mov rcx, qword [var_30h]": 2,
                "mov qword [var_8h], rdx;mov rdx, qword [var_48h];mov qword [var_10h], rdx;mov qword [var_18h], rax;mov qword [var_20h], rcx": 2,
                "call fcn.00444a60;mov rax, qword [var_28h];mov rcx, qword [var_30h];mov qword [arg_a0h], rax;mov qword [arg_a8h], rcx": 2,
                "mov qword [arg_a0h], rax;mov qword [arg_a8h], rcx;mov rbp, qword [var_78h];add rsp, ;ret": 3,
                "add rsp, ;ret;mov qword [var_60h], rcx;lea rsi, [];mov qword [rsp], rsi": 2,
                "mov rcx, qword [var_60h];jmp ;mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], rsi": 2,
                "mov rsi, qword [var_38h];inc rax;mov rdx, qword [var_68h];mov rbx, qword [var_50h];mov r8, qword [var_58h]": 1,
                "lea rbp, [var_a0h];mov rax, qword [arg_d0h];lea rcx, [rax + ];cmp rcx, ;jge ": 2,
                "mov qword [var_28h], rcx;mov rcx, qword [arg_c8h];mov qword [var_30h], rcx;mov qword [var_38h], rax;call fcn.004b1e10": 2,
                "mov rbx, qword [var_18h];mov qword [var_188h], rbx;mov rsi, qword [arg_1f0h];mov rdi, qword [arg_1f8h];mov r8, ": 2,
                "xor r10d, r10d;xor r11d, r11d;xor r12d, r12d;xor r13d, r13d;mov r14, qword [arg_1d8h]": 2,
                "xor r13d, r13d;mov r14, qword [arg_1d8h];mov r15, qword [arg_1e0h];jmp ;mov rax, r15": 2,
                "mov r14, rbx;mov r15, r11;mov qword [arg_1e8h], rdi;mov rbx, qword [var_188h];mov rdi, qword [var_70h]": 2,
                "mov qword [var_1a0h], rbx;mov qword [var_160h], rsi;mov qword [var_158h], rdi;mov r8, qword [var_60h];test r8, r8": 2,
                "sub r12, rdx;movabs rax, ;imul r12;sar rdx, ;mov r15, r12": 2,
                "movabs rax, ;mov r12, rdx;imul r15;add rdx, r15;mov rax, r15": 2,
                "mov qword [var_68h], r8;mov qword [var_c0h], r10;mov qword [var_a0h], r9;movzx r15d, r11w;cmp r15, ": 2,
                "mov qword [var_8h], rdx;mov qword [var_10h], rdi;movabs rax, ;imul r15;add rdx, r15": 1,
                "je ;mov rdx, qword [];mov rbx, qword [];mov qword [rsp + ], 0;mov qword [rsp + ], rcx": 1,
                "je ;add edx, ;movzx edx, dl;lea rdx, [rdx + rdx*4];add ebx, ": 1,
                "neg rax;sar rax, ;and rax, 2;add rax, rcx;mov qword [rsp + ], rax": 1,
                "lea rbp, [var_20h];mov rax, qword [arg_30h];mov rcx, qword [arg_38h];mov rdx, qword [arg_48h];mov rbx, qword [arg_40h]": 3,
                "mov rax, qword [arg_30h];mov rcx, qword [arg_38h];mov rdx, qword [arg_48h];mov rbx, qword [arg_40h];jmp ": 3,
                "mov rdx, qword [arg_48h];mov rbx, qword [arg_40h];jmp ;mov rcx, rbx;mov rbx, rdx": 3,
                "mov rcx, rbx;mov rbx, rdx;mov rdx, rsi;test rdx, rdx;jle ": 3,
                "add rdx, rbx;dec rcx;mov rbx, rcx;neg rcx;sar rcx, ": 3,
                "mov qword [arg_50h], rax;mov qword [arg_58h], rcx;mov qword [arg_60h], rdx;mov qword [arg_68h], rbx;mov rbp, qword [var_20h]": 6,
                "mov qword [arg_60h], rdx;mov qword [arg_68h], rbx;mov rbp, qword [var_20h];add rsp, ;ret": 6,
                "mov qword [arg_68h], rbx;mov rbp, qword [var_20h];add rsp, ;ret;mov qword [arg_38h], rcx": 3,
                "mov rax, qword [arg_1e8h];mov rcx, qword [arg_1e0h];xor edx, edx;xor ebx, ebx;xor esi, esi": 4,
                "mov rsi, qword [var_158h];mov r8, qword [var_198h];mov r9, rdi;mov qword [var_60h], r14;mov qword [var_128h], rcx": 4,
                "mov rbx, qword [var_90h];mov qword [var_168h], rdx;mov qword [var_90h], rbx;mov qword [var_158h], rsi;mov qword [var_120h], rdi": 3,
                "mov rax, qword [var_20h];mov rcx, qword [var_30h];mov rdx, qword [var_28h];mov rbx, qword [var_18h];mov rsi, qword [var_10h]": 4,
                "mov qword [var_70h], rax;mov qword [var_118h], rdi;mov qword [var_68h], rcx;mov qword [var_130h], rdx;mov qword [var_98h], rbx": 3,
                "mov qword [rsp], rax;mov rax, qword [var_120h];mov qword [var_8h], rax;call fcn.004b42b0;mov rax, qword [var_118h]": 3,
                "test cl, cl;je ;mov rcx, qword [];add rsi, ;mov r8, rsi": 2,
                "jne ;mov rcx, qword [arg_1e0h];mov qword [rdi], rcx;mov rcx, qword [arg_1f8h];mov qword [rdi + ], rcx": 2,
                "mov rdx, rax;mov rax, qword [var_198h];call fcn.004580f0;mov rdi, rdx;jmp ": 1,
                "sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h];mov rax, qword [arg_30h];cmp rax, 3": 1,
                "mov byte [arg_40h], 0;mov rbp, qword [var_18h];add rsp, ;ret;cmp rdx, 3": 1,
                "mov byte [arg_40h], 0;mov rbp, qword [var_18h];add rsp, ;ret;mov qword [arg_38h], 3": 1,
                "cmp rdx, 4;jne ;cmp rax, 3;jbe ;cmp byte [rcx + 3], ": 1,
                "mov byte [arg_40h], 1;mov rbp, qword [var_18h];add rsp, ;ret;cmp rdx, 6": 1,
                "ret;cmp rdx, 6;je ;jmp ;mov qword [rsp], rcx": 1,
                "mov rax, qword [var_10h];add rax, 3;jmp ;mov qword [arg_38h], 4;mov byte [arg_40h], 1": 1,
                "lea rdx, [rax - 1];mov qword [var_50h], rdx;mov rbx, rdx;neg rdx;sar rdx, ": 2,
                "mov rcx, qword [];mov qword [arg_50h], 0;xorps xmm0, xmm0;movups xmmword [arg_58h], xmm0;mov qword [arg_68h], rcx": 2,
                "cmp rbx, rdi;jg ;lea rbx, [rbx + rbx*4];lea rbx, [rsi + rbx*2];lea rbx, [rbx - ]": 3,
                "lea rbx, [rbx - ];test rbx, rbx;jge ;mov rax, qword [];mov rcx, qword []": 3,
                "mov qword [arg_38h], rcx;mov qword [arg_40h], rax;mov rbp, qword [rsp];add rsp, 8;ret": 3,
                "sar rcx, ;and rdx, rcx;add rax, rdx;mov qword [arg_28h], rax;mov qword [arg_30h], rbx": 3,
                "mov rbp, qword [rsp];add rsp, 8;ret;cmp rdx, rcx;jmp ": 3,
                "int3;int3;mov rax, qword [arg_8h];mov rcx, qword [rax];bt rcx, ": 2,
                "mov rax, qword [arg_8h];mov rcx, qword [rax];bt rcx, ;jae ;mov rdx, rcx": 3,
                "lea rsi, [rcx + rbx];test rsi, rsi;jl ;movabs rdi, ;cmp rsi, rdi": 3,
                "int3;int3;mov rax, qword [arg_8h];mov rcx, qword [arg_20h];mov rdx, rax": 10,
                "and rax, rcx;bt rax, ;jb ;bt rdx, ;jae ": 12,
                "bt rcx, ;jae ;mov rsi, rcx;shl rcx, 1;shr rcx, ": 15,
                "shl rcx, 1;shr rcx, ;add rcx, rbx;cmp rdx, rcx;jge ": 4,
                "mov eax, 1;mov byte [arg_38h], al;ret;bt rax, ;jae ": 4,
                "jmp ;mov rdx, qword [arg_10h];bt rsi, ;mov rcx, rax;mov rax, rdx": 4,
                "sar rcx, ;and rax, rcx;lea rax, [rsp + rax + ];mov qword [var_18h], rax;neg rdx": 8,
                "mov rbp, qword [var_60h];add rsp, ;ret;dec rax;shl rax, 4": 4,
                "test rax, rax;jl ;cmp rax, 6;jle ;mov qword [var_4ch], 0": 4,
                "mov qword [var_8h], rcx;mov qword [var_10h], ;lea rcx, [rax - ];mov rdx, rcx;sar rcx, ": 4,
                "ud2;call fcn.00456090;jmp fcn.004b7ed0;int3;int3": 3,
                "lea rbp, [var_48h];mov rax, qword [arg_68h];test rax, rax;je ;lea rcx, []": 7,
                "je ;mov rcx, qword [arg_58h];bt rcx, ;jae ;shl rcx, 1": 7,
                "movabs rdx, ;add rcx, rdx;movabs rdx, ;lea rbx, [rdx + rcx];mov rcx, qword gs:[]": 1,
                "call fcn.004bbc60;mov rax, qword [var_20h];mov rcx, qword [var_38h];add rax, rcx;movabs rcx, ": 3,
                "lea rax, [];mov qword [var_8h], rax;call fcn.00460cc0;mov rax, qword [var_40h];jmp ": 5,
                "mov qword [rsp + 8], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax;mov byte [rsp + ], 1;call fcn.004b99f0": 5,
                "movabs rax, ;mul rdx;shr rdx, ;imul rax, rdx, ;sub rcx, rax": 3,
                "mov rbx, qword [var_28h];mov qword [var_50h], rbx;cmp rbx, ;mov rsi, qword [arg_70h];mov qword [rsp], rsi": 1,
                "cmp rbx, ;mov rsi, qword [arg_70h];mov qword [rsp], rsi;mov rsi, qword [arg_78h];mov qword [var_8h], rsi": 1,
                "mov rsi, qword [arg_80h];mov qword [var_10h], rsi;call fcn.004b8060;mov rax, qword [var_18h];add rax, ": 1,
                "mov rcx, qword [var_40h];mov rdx, rcx;sub rcx, rax;add rcx, 7;mov rbx, rax": 1,
                "cmp rax, 3;jg ;lea rcx, [rsi + 1];test rcx, rcx;jne ": 1,
                "jne ;mov rcx, qword [var_48h];cmp rcx, ;jl ;cmp rbx, 3": 1,
                "sub rbx, rcx;mov rcx, rax;mov rax, rbx;movabs rsi, ;mov rdi, rdx": 1,
                "mov ecx, 1;mov qword [arg_88h], rax;mov qword [arg_90h], rcx;mov rbp, qword [var_60h];add rsp, ": 1,
                "sub rcx, rsi;imul rcx, rcx, ;mov rdi, qword [var_58h];cmp rdi, rcx;je ": 1,
                "mov rdx, rdi;jmp ;mov rcx, qword [var_50h];cmp rcx, ;mov rdx, rdi": 1,
                "mov rdx, rdi;mov eax, ;jmp ;sar rdx, 8;sub rdx, rsi": 1,
                "call fcn.00456090;jmp fcn.004b85d0;int3;int3;int3": 1,
                "sub rdx, rcx;mov qword [arg_48h], rdx;imul rcx, rdx, ;sub rax, rcx;mov rcx, rax": 2,
                "sar rax, 5;mov rdx, rcx;sar rcx, ;sub rax, rcx;mov qword [arg_50h], rax": 2,
                "mov rdx, rcx;sar rcx, ;sub rax, rcx;mov qword [arg_50h], rax;imul rax, rax, ": 2,
                "sub rdx, rax;mov qword [arg_58h], rdx;mov rbp, qword [var_20h];add rsp, ;ret": 2,
                "imul rcx;sar rdx, ;sar rcx, ;sub rdx, rcx;mov qword [rsp + ], rdx": 1,
                "movabs rax, ;imul rcx;lea rax, [rdx + rcx];sar rax, 5;sar rcx, ": 1,
                "int3;mov rax, qword [rsp + 8];and rax, ;movsxd rax, eax;mov qword [rsp + ], rax": 1,
                "mov qword [var_20h], rax;call fcn.004b8fe0;mov rax, qword [var_28h];mov rcx, qword [var_30h];test rax, rax": 2,
                "cmp rcx, ;ja ;mov qword [rsp], 0;lea rax, [rcx - ];mov rdx, rax": 1,
                "mov rcx, qword [var_20h];mov qword [arg_78h], rcx;mov qword [arg_80h], rax;mov rbp, qword [var_60h];add rsp, ": 1,
                "mov qword [var_38h], rdx;imul rbx, rdx, ;sub rcx, rbx;mov qword [var_18h], rcx;call fcn.004b90b0": 1,
                "imul rbx, rdx, ;sub rcx, rbx;mov qword [var_18h], rcx;call fcn.004b90b0;mov rcx, qword [var_20h]": 1,
                "mov rcx, qword [arg_70h];test rcx, rcx;jmp ;mov rdx, qword [arg_70h];test rdx, rdx": 1,
                "test rdx, rdx;mov rax, rcx;jmp ;mov rdx, qword [arg_70h];test rdx, rdx": 1,
                "call fcn.00456090;jmp fcn.004b8c40;int3;int3;int3": 1,
                "cmp rdi, rdx;jge ;mov r9, rax;movabs rax, ;mov r10, rdx": 2,
                "lea r9d, [rcx + ];mov byte [rbx + r8 - 1], r9b;mov rax, rdi;mov rcx, rdx;mov rbx, rsi": 2,
                "int3;movabs rax, ;mov rcx, qword [rsp + 8];imul rcx;add rdx, rcx": 2,
                "int3;int3;int3;int3;mov rcx, qword [rsp + ]": 2,
                "sub rbx, rdx;mov qword [rsp + ], rbx;ret;int3;int3": 2,
                "mov rcx, qword [arg_10h];test rcx, rcx;jle ;mov rax, qword [arg_8h];mov rdx, rax": 3,
                "jle ;mov rax, qword [arg_8h];mov rdx, rax;mov rbx, rdx;cqo": 3,
                "idiv rcx;test rbx, rbx;jge ;mov rax, rdx;neg rdx": 3,
                "lea rbp, [var_10h];movabs rax, ;mov rcx, qword [arg_38h];imul rcx;mov rbx, rcx": 3,
                "sub rdx, rcx;imul rcx, rdx, ;sub rbx, rcx;mov rcx, qword [arg_20h];mov rdi, rcx": 3,
                "mov rdx, qword [arg_38h];lea rbx, [rdx + rcx];test rdx, rdx;jge ;cmp rbx, rcx": 2,
                "mov qword [arg_48h], rdx;mov qword [arg_50h], rax;mov rbp, qword [var_10h];add rsp, ;ret": 2,
                "mov qword [var_8h], rdi;mov qword [var_10h], rbx;sub rdx, rcx;imul rcx, rdx, ;and rax, ": 3,
                "mov rsi, qword [arg_58h];mov rax, rdx;movabs rbx, ;mov rdx, rsi;jmp ": 2,
                "jmp fcn.004b94c0;int3;int3;int3;int3": 2,
                "mov rax, qword [arg_90h];mov rcx, qword [arg_80h];test rax, rax;je ;mov rdx, qword [arg_98h]": 3,
                "mov qword [rsp], rdx;mov rdx, qword [arg_a0h];mov rbx, qword [var_60h];add rdx, rbx;mov qword [var_8h], rdx": 3,
                "mov qword [var_10h], rdx;and rcx, ;movsxd rcx, ecx;mov qword [var_30h], rcx;mov qword [var_38h], rax": 3,
                "mov qword [arg_60h], rax;mov qword [arg_68h], rcx;mov qword [arg_70h], rdx;mov qword [arg_78h], rbx;mov rbp, qword [var_30h]": 4,
                "shr rdx, ;movabs rax, ;mov rcx, rdx;mul rdx;shr rdx, ": 5,
                "movabs rax, ;mov rcx, rdx;mul rdx;shr rdx, ;imul rbx, rdx, ": 5,
                "mov rdx, rcx;shr rcx, 1;movabs rax, ;mov rsi, rdx;mul rcx": 5,
                "lea rbx, [rdx + rcx];movzx edi, byte [arg_18h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "je ;mov rdi, rbx;sar rbx, ;mov r8, rbx;shr rbx, ": 4,
                "add rbx, rcx;add rbx, rdx;sar rbx, 2;shl rbx, 2;cmp rdi, rbx": 4,
                "mov qword [arg_20h], rdi;lea rax, [rcx + 1];mov qword [arg_28h], rax;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "add rbx, rax;mov rsi, rbx;shr rbx, ;test rbx, rbx;je ": 3,
                "mov rdx, qword [];movsxd rcx, ecx;mov qword [arg_28h], rcx;movabs rcx, ;add rax, rcx": 3,
                "shr rax, ;movabs rcx, ;add rax, rcx;mov rcx, qword [arg_58h];mov qword [rsp], rcx": 2,
                "ret;mov rax, qword [rsp + ];jmp ;int3;int3": 2,
                "shr rcx, ;movabs rbx, ;add rcx, rbx;mov qword [var_38h], rcx;lea rax, []": 2,
                "mov rax, qword [var_38h];mov rcx, rax;sar rax, ;mov byte [rdx + 1], al;mov rax, rcx": 2,
                "mov byte [rdx + 4], cl;mov rcx, rax;sar rax, ;mov byte [rdx + 5], al;mov rax, rcx": 2,
                "mov qword [var_10h], rcx;call fcn.004b9f80;mov rax, qword [var_28h];mov rcx, rax;movabs rax, ": 2,
                "sar rcx, ;sub rax, rcx;imul rcx, rax, ;cmp rdx, rcx;jne ": 2,
                "jne ;lea rax, [];mov qword [rdi], rax;xorps xmm0, xmm0;movups xmmword [arg_70h], xmm0": 4,
                "jne ;mov qword [rcx + ], 0;xorps xmm0, xmm0;movups xmmword [arg_80h], xmm0;mov rbp, qword [var_50h]": 2,
                "call fcn.0040d880;mov rax, qword [var_8h];mov qword [var_40h], rax;lea rcx, [];mov qword [rsp], rcx": 12,
                "movzx eax, byte [];mov rdi, qword [var_8h];mov byte [rdi + ], al;mov qword [rdi + 8], 0;cmp dword [], 0": 1,
                "mov qword [rdi], 0;mov rcx, qword [var_38h];mov qword [rdi + ], rcx;mov rcx, qword [var_40h];mov qword [rcx + ], 1": 1,
                "mov qword [rdi], rax;lea rax, [];mov qword [arg_80h], rax;mov qword [arg_88h], rdi;mov rbp, qword [var_50h]": 1,
                "mov qword [arg_88h], rdi;mov rbp, qword [var_50h];add rsp, ;ret;lea rax, []": 1,
                "mov qword [rsp], rax;mov qword [var_8h], 0;mov qword [var_10h], ;call fcn.00440c00;mov rax, qword [var_18h]": 5,
                "call fcn.00440c00;mov rax, qword [var_18h];mov byte [rax], ;mov rcx, qword [arg_70h];mov qword [rsp], rcx": 1,
                "mov rdx, qword [var_40h];lea rbx, [rcx + 1];cmp rbx, rax;ja ;mov byte [rdx + rcx], ": 1,
                "cmp dword [rcx], ;je ;mov qword [rsp], 0;mov qword [rsp + 8], rcx;mov qword [rsp + ], rax": 1,
                "mov qword [rsp + ], rax;call fcn.00444c60;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];lea rdx, []": 2,
                "mov qword [rdi], rax;xorps xmm0, xmm0;movups xmmword [arg_80h], xmm0;mov qword [arg_90h], 0;lea rax, []": 2,
                "mov rax, qword [arg_78h];mov qword [var_10h], rax;mov qword [var_20h], 0;mov qword [var_28h], ;lea rax, []": 2,
                "mov qword [var_30h], rax;mov qword [var_38h], ;call fcn.004b1e10;mov rax, qword [var_40h];mov rcx, qword [var_50h]": 2,
                "mov rcx, qword [var_50h];mov rdx, qword [var_48h];mov qword [arg_80h], rax;mov qword [arg_88h], rdx;mov qword [arg_90h], rcx": 2,
                "ret;call fcn.00456090;jmp fcn.004bad50;int3;int3": 2,
                "sub rbx, rdi;lea rcx, [rcx + rdx];lea rcx, [rcx - 1];test rbx, rbx;cmovl rsi, rcx": 2,
                "test rbx, rbx;cmovl rbx, rcx;mov rax, qword [];movsxd rcx, ebx;mov qword [arg_18h], rcx": 2,
                "sub rdx, rsi;sar rbx, ;dec rdx;sar rdx, 3;sub rdx, rbx": 3,
                "mov rdx, rsi;mov rcx, qword [arg_10h];test rcx, rcx;jge ;movabs rax, ": 1,
                "lea rsi, [r11 + rdx];imul rdx, rdx, ;sub r10, rdx;test rsi, rsi;jge ": 2,
                "jae ;lea r13, [];mov r13d, dword [r13 + rdi*4];movsxd r13, r13d;lea r14, [rdx + r13]": 2,
                "add rbx, r15;sar rbx, 2;shl rbx, 2;cmp rbx, r15;mov rcx, qword gs:[]": 1,
                "add rsp, ;ret;mov rcx, qword [arg_58h];mov rdx, qword [arg_50h];mov rbx, qword [arg_48h]": 1,
                "mov qword [arg_78h], rcx;mov rbp, qword [var_38h];add rsp, ;ret;mov rcx, qword [arg_58h]": 2,
                "lea ebx, [rdx + ];test edx, edx;cmovl edx, ebx;mov eax, 1;mov rbx, qword [arg_28h]": 3,
                "neg rax;xor edx, edx;test rdx, rdx;je ;movabs rax, ": 3,
                "movabs rax, ;imul rbx;mov rsi, rbx;sar rbx, ;sar rdx, ": 3,
                "imul rcx, rdx, ;movsxd rbx, r8d;lea rdx, [rcx + rbx];mov r8, rax;mov rax, rsi": 2,
                "lea rdx, [rcx + rbx];mov r8, rax;mov rax, rsi;jmp ;test ebx, ebx": 2,
                "xor edx, edx;movsxd r8, eax;and r8, 1;movsxd rdx, edx;mov rax, rbx": 2,
                "mov r8d, edx;jmp ;xor eax, eax;jmp ;mov rbx, qword [arg_18h]": 2,
                "ud2;call fcn.0042eb60;ud2;call fcn.0042eb60;ud2": 1,
                "je ;mov rcx, qword [rax + ];mov rdx, qword [rax + ];test rcx, rcx;je ": 2,
                "cmp rdi, r8;jl ;mov rbx, qword [rax + ];mov rsi, qword [rax + ];test rbx, rbx": 2,
                "je ;cmp qword [rsi], rdi;jg ;mov rax, rbx;xor r8d, r8d": 2,
                "mov r11, rbx;shr rbx, ;add rbx, r11;sar rbx, 1;add rbx, r8": 1,
                "mov qword [arg_58h], r9;mov rbp, qword [var_18h];add rsp, ;ret;mov qword [var_10h], rax": 1,
                "movabs rax, ;mov qword [arg_50h], rax;movabs rax, ;mov qword [arg_58h], rax;mov rbp, qword [var_18h]": 1,
                "cmp qword [rax + ], 0;jle ;mov rdx, qword [rax + ];mov rbx, qword [rax + ];movzx ecx, byte [rcx + 8]": 2,
                "test rcx, rcx;jl ;cmp rcx, rbx;jae ;mov rsi, rcx": 2,
                "jne ;mov qword [arg_28h], rsi;mov rbp, qword [var_10h];add rsp, ;ret": 2,
                "ret;mov rcx, qword [rax + ];mov rax, qword [rax + ];xor edx, edx;jmp ": 2,
                "cmp rdx, rax;jl ;mov byte [arg_10h], 0;ret;mov byte [arg_10h], 1": 3,
                "cmp rax, rcx;je ;mov qword [var_58h], rax;mov rcx, qword [rax + ];mov qword [var_50h], rcx": 3,
                "mov rsi, qword [rax + ];cmp qword [rax + ], rbx;jbe ;mov rdi, rbx;shl rbx, 5": 6,
                "jne ;mov rax, qword [var_58h];mov rcx, qword [var_50h];mov rdx, qword [arg_90h];mov rdi, qword [var_40h]": 3,
                "mov byte [arg_b0h], 0;xorps xmm0, xmm0;movups xmmword [arg_b8h], xmm0;call fcn.0042f500;mov rbp, qword [var_68h]": 5,
                "mov qword [var_10h], rcx;call fcn.00402ce0;cmp byte [var_18h], 0;je ;mov rax, qword [arg_a8h]": 3,
                "call fcn.00402ce0;cmp byte [var_18h], 0;je ;mov rax, qword [arg_a8h];mov rcx, qword [var_50h]": 3,
                "mov rdx, qword [var_30h];mov rbx, qword [var_38h];test rdx, rdx;jne ;mov rdx, qword [var_58h]": 1,
                "jmp ;mov byte [arg_b0h], 0;mov qword [arg_b8h], rdx;mov qword [arg_c0h], rbx;call fcn.0042f500": 1,
                "mov rax, qword [var_48h];mov qword [rsp], rax;lea rcx, [];mov qword [var_8h], rcx;mov qword [var_10h], 7": 2,
                "mov qword [var_40h], rcx;mov rax, qword [var_48h];mov qword [rsp], rax;lea rcx, [];mov qword [var_8h], rcx": 1,
                "call fcn.004acf10;mov rsi, qword [var_18h];mov rbx, qword [var_20h];mov rdx, qword [var_28h];mov rax, qword [var_58h]": 1,
                "mov rsi, qword [var_18h];mov rbx, qword [var_20h];mov rdx, qword [var_28h];mov rax, qword [var_58h];mov rcx, qword [var_40h]": 1,
                "ret;call fcn.00456090;jmp fcn.004bc330;int3;int3": 1,
                "mov rax, qword [var_30h];mov rcx, qword [var_28h];mov rdx, qword [var_18h];mov rbx, qword [var_10h];test rcx, rcx": 2,
                "mov rbx, qword [var_10h];test rcx, rcx;jne ;test rdx, rdx;jle ": 2,
                "cmp dword [], 0;jne ;mov rax, qword [var_78h];mov qword [rdi], rax;xorps xmm0, xmm0": 4,
                "cmp rdx, rax;jge ;mov qword [var_48h], rsi;movzx r8d, byte [rcx + rdx];cmp r8d, ": 2,
                "mov qword [var_20h], r9;call fcn.00440d10;mov rdi, qword [var_28h];mov rax, qword [var_30h];mov rbx, qword [var_38h]": 2,
                "mov qword [var_8h], rdi;mov qword [var_10h], rsi;mov qword [var_18h], rbx;call fcn.00445090;mov rax, qword [var_28h]": 2,
                "mov qword [var_8h], ;mov qword [var_10h], ;call fcn.004a1410;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [var_58h], rax;mov rcx, qword [var_20h];mov qword [var_40h], rcx;lea rdx, [];mov qword [rsp], rdx": 2,
                "mov qword [rsp], rdx;mov rbx, qword [];mov qword [var_8h], rbx;mov qword [var_10h], rax;mov qword [var_18h], rcx": 2,
                "mov qword [var_8h], rbx;mov qword [var_10h], rax;mov qword [var_18h], rcx;call fcn.004bc710;mov rax, qword [var_20h]": 2,
                "je ;mov qword [arg_88h], rcx;mov qword [arg_90h], rdx;mov qword [arg_98h], rbx;mov qword [arg_a0h], rax": 2,
                "mov qword [var_8h], rcx;mov qword [var_10h], 1;mov qword [var_18h], rdx;mov qword [var_20h], rbx;mov qword [var_28h], rsi": 3,
                "mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.004b8060;mov rax, qword [arg_88h]": 3,
                "sub rcx, rax;lea rax, [rcx + 7];test rcx, rcx;cmovl rcx, rax;movzx eax, word [rsi + 6]": 2,
                "cmp rdx, 4;jge ;lea rdx, [rax + rax*2];lea rax, [rax + rdx*2];lea rax, [rcx + rax]": 2,
                "mov rcx, qword [var_58h];bt rcx, ;jae ;shl rcx, 1;shr rcx, ": 2,
                "mov rsi, rbx;sar rbx, ;mov rdi, rbx;shr rbx, ;add rbx, rsi": 2,
                "mov rdi, rbx;shr rbx, ;add rbx, rsi;sar rbx, 2;shl rbx, 2": 2,
                "sub rdx, rdi;imul rdx, rdx, ;cmp rdx, rsi;je ;mov eax, 1": 2,
                "sub r8, rdi;imul rdx, r8, ;cmp rdx, rsi;sete al;jmp ": 1,
                "jmp ;mov rbx, rdx;xor eax, eax;jmp ;mov rbx, rdx": 1,
                "mov rbx, qword [var_8h];mov rdi, qword [];cmp qword [], 0;jbe ;mov qword [rdi + 8], rdx": 2,
                "movsxd rax, eax;neg rax;imul rax, rax, ;mov qword [rbx + ], rax;mov byte [rbx + ], 1": 2,
                "mov qword [var_a0h], rcx;mov qword [var_a8h], rax;bt rdx, ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov r11, qword [rdx + rcx + ];sub rax, r11;mov r11, qword [var_90h];mov qword [r11 + r10], rax;movzx ecx, byte [var_42h]": 1,
                "cmp qword [], r9;jbe ;mov qword [var_90h], r10;mov qword [var_50h], rbx;mov qword [var_58h], r9": 1,
                "mov rbx, qword [var_58h];mov rsi, rbx;shl rbx, 4;shl rdx, 5;mov rcx, qword [rdx + rcx + ]": 1,
                "mov rsi, rbx;shl rbx, 4;shl rdx, 5;mov rcx, qword [rdx + rcx + ];sub rax, rcx": 1,
                "lea rcx, [rsi + 1];mov rdx, qword [];cmp qword [], rcx;jbe ;mov qword [var_90h], rdx": 1,
                "lea rdi, [rbx + ];mov rax, rcx;call fcn.004580f0;jmp ;mov rcx, qword [arg_c0h]": 1,
                "mov rax, qword [var_18h];mov qword [], 1;mov qword [], 1;cmp dword [], 0;jne ": 1,
                "lea rax, [];mov qword [rsp], rax;mov rax, qword [var_48h];mov qword [var_8h], rax;lea rcx, []": 1,
                "movabs rcx, ;mov qword [rax], rcx;cmp dword [], 0;jne ;mov rax, qword [var_48h]": 1,
                "dec rax;mov qword [], rax;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 1,
                "mov qword [], rcx;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;mov qword [var_10h], 0": 2,
                "mov qword [rsp], rdi;mov qword [var_8h], rax;mov qword [var_10h], rsi;mov qword [var_18h], rcx;call fcn.00413cb0": 1,
                "mov rdi, qword [var_20h];mov rax, qword [var_38h];mov rcx, rax;shl rax, 5;lea rdx, []": 1,
                "cmp dword [], 0;jne ;mov qword [rdi], rbx;mov qword [rdi + ], r8;jmp ": 1,
                "cmp dword [], 0;jne ;mov qword [], rcx;call fcn.00409890;mov rax, qword [rsp]": 1,
                "call fcn.00409890;mov rax, qword [rsp];mov rcx, qword [var_8h];mov qword [rsp], 0;mov qword [var_8h], rax": 1,
                "call fcn.00456090;jmp fcn.004bd760;int3;int3;int3": 1,
                "jne ;call fcn.0042ebd0;ud2;mov byte [], 1;call fcn.004aa650": 7,
                "mov qword [rsp + 8], rdx;mov qword [rsp + ], rcx;mov rax, qword [rsp + ];mov qword [rsp + ], rax;mov rax, qword [rsp + ]": 3,
                "mov rcx, qword [rax];mov rdx, qword [rax + 8];mov rax, qword [rax + ];mov qword [rsp], rcx;mov qword [rsp + 8], rdx": 6,
                "mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax;call fcn.004b1e10;mov rax, qword [rsp + ]": 1,
                "mov rax, qword [arg_28h];mov qword [rsp], rax;mov rcx, qword [arg_30h];mov qword [var_8h], rcx;call fcn.004034b0": 1,
                "ret;call fcn.00456090;jmp fcn.004c0060;int3;int3": 1,
                "mov qword [rsp], rbx;mov qword [rsp + 8], rcx;mov qword [rsp + ], rdx;call fcn.00402ce0;movzx eax, byte [rsp + ]": 5,
                "mov rbx, qword [rsp + ];add rax, rbx;mov qword [rsp], rax;mov qword [rsp + 8], rcx;call fcn.004c0060": 1,
                "mov rax, qword [var_8h];mov rcx, qword [rsp];test rcx, rcx;jne ;mov qword [var_60h], rax": 5,
                "mov qword [arg_c8h], rax;mov qword [arg_d0h], rcx;mov rbp, qword [var_88h];add rsp, ;ret": 3,
                "mov qword [arg_c0h], rcx;mov qword [arg_c8h], rax;mov rbp, qword [var_88h];add rsp, ;ret": 4,
                "ret;call fcn.00456090;jmp fcn.004c0b80;int3;int3": 3,
                "call fcn.00456090;jmp fcn.004c0e20;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 3,
                "call fcn.00456090;jmp fcn.004c0f20;int3;int3;mov rcx, qword gs:[]": 3,
                "mov eax, dword [arg_78h];mov qword [var_18h], rax;mov rax, qword [var_58h];mov qword [var_20h], rax;mov eax, dword [arg_88h]": 4,
                "lea rbp, [rsp + ];movabs rax, ;mov qword [rsp], rax;mov dword [rsp + 8], ;call fcn.004a5700": 4,
                "mov dword [rsp + ], 8;lea rcx, [rsp + ];mov qword [rsp + ], rcx;xorps xmm0, xmm0;movups xmmword [rsp + ], xmm0": 3,
                "cmp dword [], 0;jne ;mov qword [], rax;lea rax, [];mov rcx, qword gs:[]": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 9;call fcn.0049d250;mov rax, qword [var_18h]": 1,
                "jne ;mov ecx, dword [rdx + ];cmp dword [rax + ], ecx;jne ;mov ecx, dword [rdx + ]": 1,
                "neg rbx;sar rbx, ;and rbx, ;lea rax, [rdi + rbx];cmp dword [], 0": 1,
                "jmp ;mov rdi, rcx;call fcn.004580f0;jmp ;cmp rdx, r9": 1,
                "ja ;sub r9, rdx;mov qword [rdi + 8], r9;sub r10, rdx;mov qword [rdi + ], r10": 1,
                "sub r9, rdx;mov qword [rdi + 8], r9;sub r10, rdx;mov qword [rdi + ], r10;neg r10": 1,
                "lea rax, [r8 + rdx];cmp dword [], 0;jne ;mov qword [rdi], rax;mov rbp, qword [rsp]": 1,
                "mov qword [arg_48h], rax;call fcn.0042f500;mov rbp, qword [var_28h];add rsp, ;ret": 8,
                "mov rax, qword [arg_38h];cmp byte [rax + ], 0;je ;mov rcx, qword [];mov rdx, qword []": 20,
                "lock cmpxchg qword [rcx], rbx;sete dl;test dl, dl;je ;mov byte [arg_28h], 1": 3,
                "call fcn.0043edb0;mov rax, qword [var_10h];add rax, ;mov rcx, qword [arg_30h];movabs rdx, ": 4,
                "mov rcx, qword [arg_30h];movabs rdx, ;test rax, rdx;jne ;jmp ": 4,
                "lea rax, [rcx + ];mov qword [rsp], rax;call fcn.0043edb0;mov rax, qword [var_10h];movabs rcx, ": 4,
                "mov ebx, ;movabs rsi, ;mov qword [var_28h], rdx;mov qword [var_18h], rsi;mov qword [var_10h], rbx": 5,
                "test rdi, rax;jne ;mov r8, rdi;or rdi, rax;add rdi, 8": 5,
                "mov qword [rsp], rdx;call fcn.0043eca0;mov rcx, qword [arg_40h];mov rdx, qword [var_28h];mov rbx, qword [var_10h]": 4,
                "mov rdx, qword [var_28h];mov rbx, qword [var_10h];mov rsi, qword [var_18h];mov r9, qword [var_20h];jmp ": 4,
                "mov eax, 4;movabs rbx, ;movabs rsi, ;jmp ;lea rax, []": 8,
                "call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.004c2600;mov rcx, qword gs:[]": 4,
                "mov eax, 2;movabs rbx, ;mov esi, ;jmp ;mov rcx, qword gs:[]": 1,
                "je ;mov r8, rax;not rax;and rax, rdi;lea r9, [rax - 8]": 4,
                "call fcn.00456090;jmp fcn.004c2770;int3;int3;int3": 3,
                "mov qword [rsp], rax;call fcn.004c2570;cmp byte [var_8h], 0;je ;mov rax, qword [arg_28h]": 4,
                "add rsp, ;ret;mov rax, qword [rsp + ];mov qword [rsp], rax;call fcn.004c5010": 7,
                "call fcn.004c5010;jmp ;call fcn.00456090;jmp ;int3": 7,
                "call fcn.0040abe0;mov rax, qword [var_8h];lea rcx, [];mov qword [arg_48h], rcx;mov qword [arg_50h], rax": 3,
                "mov rbp, qword [var_28h];add rsp, ;ret;call fcn.00456090;jmp fcn.004c2a00": 3,
                "jmp fcn.004c2a00;int3;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 3,
                "cmp rax, 2;jne ;mov rax, qword [];mov rcx, qword [];jmp ": 6,
                "mov rax, qword [];mov rcx, qword [];mov rdx, rax;mov rax, rcx;mov rcx, rdx": 3,
                "mov rdx, rax;mov rax, rcx;mov rcx, rdx;jmp ;mov rax, qword []": 3,
                "ud2;call fcn.00456090;jmp fcn.004c2c10;int3;int3": 3,
                "cmp byte [var_8h], 0;je ;xor eax, eax;xor ecx, ecx;test rax, rax": 6,
                "mov qword [arg_70h], rax;call fcn.0042f500;mov rbp, qword [var_30h];add rsp, ;ret": 2,
                "add rsp, ;ret;mov qword [rsp], rax;mov rax, qword [var_28h];mov qword [var_8h], rax": 2,
                "mov qword [var_10h], rax;call fcn.0042ad30;xorps xmm0, xmm0;movups xmmword [arg_68h], xmm0;call fcn.0042f500": 2,
                "ret;call fcn.0042f500;mov rbp, qword [var_30h];add rsp, ;mov rcx, qword gs:[]": 1,
                "call fcn.0042f500;mov rbp, qword [var_30h];add rsp, ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rbp, qword [var_30h];add rsp, ;ret;mov rax, qword [arg_40h];cmp byte [rax + ], 0": 3,
                "mov rcx, qword [];mov rdx, qword [];jmp ;mov qword [rsp], rax;mov rax, qword [arg_50h]": 1,
                "cmove rax, rcx;jmp ;mov rax, rcx;xor ecx, ecx;jmp ": 1,
                "call fcn.0042ec20;test eax, eax;jne ;lea rax, [];mov qword [arg_48h], rax": 2,
                "cmp rsi, ;je ;lea rax, [arg_370h];sub rax, rsi;cmp rax, ": 6,
                "xor eax, eax;rep stosq qword [rdi], rax;mov dword [arg_34h], ;lea rdx, [arg_38h];mov qword [rsp], rdx": 4,
                "mov rbp, qword [arg_4ec0h];add rsp, ;ret;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "sete byte [];call fcn.004c3460;mov rbp, qword [var_1b8h];add rsp, ;ret": 4,
                "mov rbp, qword [rsp];add rsp, 8;ret;mov rax, qword [rsp + ];call fcn.004580f0": 3,
                "xor eax, eax;call fcn.004580f0;jmp ;call fcn.00456090;jmp ": 4,
                "call fcn.004580f0;jmp ;call fcn.00456090;jmp ;mov rcx, qword gs:[]": 4,
                "mov rbx, qword [rbx + 8];test rbx, rbx;jle ;mov qword [var_50h], rbx;xor eax, eax": 4,
                "cmp r10, r11;ja ;lea r10, [r9 + 1];mov qword [rcx + ], r10;shl r9, 4": 3,
                "lea rdi, [rdi + 8];cmp dword [], 0;jne ;mov qword [r8 + r9 + 8], 0;lea r8, [rax + 1]": 3,
                "jne ;mov qword [rbx + ], rax;mov rdx, qword [var_68h];mov rbx, qword [var_50h];mov rsi, qword [var_60h]": 6,
                "mov rax, r10;jmp ;lea rax, [];mov qword [rsp], rax;mov rcx, qword gs:[]": 1,
                "mov qword [rbx + ], rax;mov rdx, qword [var_68h];mov rbx, qword [var_50h];mov rsi, qword [var_60h];mov r8, qword [var_40h]": 3,
                "mov rsi, qword [var_60h];mov r8, qword [var_40h];mov r9, qword [var_58h];mov r10, rcx;mov r11, rax": 3,
                "test r8, r8;jle ;mov r10, qword [rcx + ];mov r11, qword [rcx + ];mov r12, qword [rcx + ]": 2,
                "jmp fcn.004c3710;int3;int3;int3;int3": 1,
                "jne ;mov qword [rbx + rax + 8], 0;jmp ;xor eax, eax;call fcn.004580f0": 2,
                "ud2;call fcn.00456090;jmp fcn.004c3b30;int3;int3": 2,
                "lea rdi, [rdx + ];xor eax, eax;call fcn.004580f0;jmp ;lea rdi, [rdx + ]": 2,
                "xor eax, eax;call fcn.004580f0;jmp ;lea rdi, [rdx + ];call fcn.004580f0": 2,
                "mov rax, qword [arg_18h];call fcn.004580f0;jmp ;xor eax, eax;call fcn.004580f0": 2,
                "lea rax, [rsp + ];mov qword [rsp + 8], rax;call fcn.004063a0;jmp ;call fcn.0042f500": 2,
                "cmp byte [], 0;je ;mov rax, qword [arg_90h];mov qword [rsp], rax;mov rdx, qword [arg_98h]": 3,
                "cmp qword [], rcx;je ;cmp qword [], rcx;jne ;mov qword [rsp], rcx": 2,
                "je ;cmp byte [], 0;je ;mov rax, qword [var_48h];mov rcx, qword [rax + ]": 2,
                "mov rbx, qword [var_48h];mov rbx, qword [rbx + ];test rbx, rbx;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [rsp], rcx;lea rcx, [var_68h];mov qword [var_8h], rcx;call fcn.004063a0;mov rax, qword [arg_90h]": 1,
                "call fcn.0040abe0;mov rax, qword [var_8h];mov rcx, qword [];lea rdx, [];cmp rcx, rdx": 1,
                "mov rax, qword [arg_90h];mov qword [var_68h], rax;mov rcx, qword [arg_98h];mov qword [var_70h], rcx;mov rcx, qword gs:[]": 1,
                "mov qword [var_70h], rcx;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "sub rsp, ;mov qword [var_88h], rbp;lea rbp, [var_88h];mov rcx, qword [];mov rbx, qword []": 1,
                "jne ;mov rbx, qword [arg_a0h];cmp word [rbx], ;jne ;movzx esi, byte [arg_b0h]": 1,
                "mov r8, qword [];test r8, r8;jne ;test rdx, rdx;jne ": 1,
                "mov qword [rsp], rcx;mov dword [var_8h], ;lea rcx, [var_64h];mov qword [var_10h], rcx;mov dword [var_18h], 4": 1,
                "movups xmmword [arg_c8h], xmm0;mov rbp, qword [var_88h];add rsp, ;ret;lea rax, []": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 0;call fcn.00406160;mov rax, qword [var_10h]": 2,
                "mov rcx, qword [arg_98h];lea rdi, [rcx + ];call fcn.004580f0;jmp ;lea rdi, [rax + ]": 1,
                "je ;jmp ;cmp rcx, 4;jmp ;cmp rcx, 4": 1,
                "xorps xmm0, xmm0;movups xmmword [arg_b8h], xmm0;mov qword [arg_c8h], rdx;mov qword [arg_d0h], rax;mov rbp, qword [var_88h]": 1,
                "mov rdi, qword [r8];mov rdx, r8;call rdi;mov rax, qword [var_80h];mov rcx, qword [arg_a8h]": 1,
                "call rdi;mov rax, qword [var_80h];mov rcx, qword [arg_a8h];mov rdx, qword [var_70h];mov rbx, qword [arg_a0h]": 1,
                "mov rdx, qword [var_70h];mov rbx, qword [arg_a0h];movzx esi, byte [arg_b0h];jmp ;mov rax, qword [arg_98h]": 1,
                "mov rdx, qword [var_10h];mov rax, qword [var_18h];mov rcx, qword [arg_a8h];mov rbx, qword [arg_a0h];movzx esi, byte [arg_b0h]": 1,
                "mov rax, qword [var_78h];mov qword [rdi], rax;xorps xmm0, xmm0;movups xmmword [arg_b8h], xmm0;lea rax, []": 1,
                "ret;mov rax, qword [var_78h];call fcn.004580f0;jmp ;cmp rcx, 3": 1,
                "mov rax, qword [var_78h];call fcn.004580f0;jmp ;cmp rcx, 3;jmp ": 1,
                "mov rcx, qword [var_10h];mov qword [var_18h], rax;mov qword [var_20h], rcx;mov rdx, qword [arg_38h];mov qword [rdx + ], ": 1,
                "je ;mov rcx, qword [rax + ];mov qword [rsp], rcx;call fcn.004a38f0;mov rax, qword [var_8h]": 1,
                "mov qword [rax + ], 0;jmp ;lea rax, [];mov qword [arg_40h], rax;lea rax, []": 1,
                "call fcn.0042f500;mov rbp, qword [rsp + ];add rsp, ;ret;mov qword [rsp + ], rax": 2,
                "sub rsp, ;mov qword [var_48h], rbp;lea rbp, [var_48h];mov qword [arg_78h], 0;xorps xmm0, xmm0": 3,
                "mov rax, qword [arg_58h];test byte [rax], al;mov qword [rsp], rax;mov byte [var_8h], 1;call fcn.004c2600": 3,
                "mov qword [rsp], rax;mov rcx, qword [arg_60h];mov qword [var_8h], rcx;mov rcx, qword [var_38h];mov qword [var_10h], rcx": 2,
                "test rcx, rcx;jne ;test rax, rax;je ;mov qword [arg_78h], rcx": 2,
                "jne ;mov dword [rcx + ], eax;lea rdi, [rcx + ];cmp dword [], 0;jne ": 2,
                "mov qword [var_10h], rax;call fcn.004c3e70;mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rdx, qword [var_28h]": 1,
                "mov qword [var_50h], r9;mov qword [var_48h], rdi;sub rbx, r9;mov rdx, rbx;neg rbx": 2,
                "neg rbx;sar rbx, ;and rbx, r9;add rbx, rax;mov qword [rsp], rbx": 2,
                "and rbx, r9;add rbx, rax;mov qword [rsp], rbx;mov qword [var_8h], rdx;mov qword [var_10h], rdx": 2,
                "cmp rax, rcx;jbe ;jmp ;cmp qword [rcx + ], 1;jb ": 2,
                "sub rbx, rsi;neg rbx;sar rbx, ;and rbx, rsi;add rax, rbx": 1,
                "cmp r10d, ;jl ;cmp r10d, ;jge ;cmp r12d, ": 1,
                "jl ;cmp r10d, ;jge ;cmp r12d, ;jl ": 1,
                "add r10d, ;cmp r10d, ;je ;mov rdi, r11;jmp ": 1,
                "mov rdi, r11;jmp ;mov r11, rdi;jmp ;mov r10d, ": 1,
                "mov qword [var_70h], rbp;lea rbp, [var_70h];mov qword [arg_a8h], 0;xorps xmm0, xmm0;movups xmmword [arg_b0h], xmm0": 1,
                "mov rax, qword [arg_80h];test byte [rax], al;mov qword [rsp], rax;call fcn.004c23a0;cmp byte [var_8h], 0": 1,
                "mov qword [arg_90h], rax;mov rcx, qword [arg_80h];lea rdx, [rcx + ];mov qword [var_68h], rdx;mov qword [rsp], rdx": 1,
                "mov rax, qword [var_20h];mov rcx, qword [var_28h];test rax, rax;jne ;mov rax, qword [arg_80h]": 1,
                "test rax, rax;jne ;mov rax, qword [arg_80h];mov rcx, qword [rax + ];mov dword [rsp], ": 1,
                "mov qword [var_18h], rdx;lea rdx, [var_44h];mov qword [var_20h], rdx;lea rdx, [var_48h];mov qword [var_28h], rdx": 1,
                "cmp qword [rcx], ;jne ;mov rax, qword [];mov rcx, qword [];mov rdx, qword [arg_90h]": 1,
                "mov rdx, qword [arg_90h];test rdx, rdx;je ;mov edx, dword [var_44h];test rdx, rdx": 1,
                "mov rcx, qword [];jmp ;mov rdx, rax;mov rax, rcx;mov rcx, rdx": 1,
                "call fcn.0042f500;mov rbp, qword [var_70h];add rsp, ;ret;call fcn.0042f500": 2,
                "mov qword [arg_a8h], 0;mov qword [arg_b0h], rcx;mov qword [arg_b8h], rax;call fcn.0042f500;mov rbp, qword [var_70h]": 1,
                "je ;cmp rax, ;jle ;mov eax, ;mov qword [rsp + ], rax": 1,
                "jbe ;sub rsp, ;mov qword [var_60h], rbp;lea rbp, [var_60h];mov qword [arg_90h], 0": 1,
                "mov rax, qword [arg_70h];mov qword [var_10h], rax;call fcn.0042ec20;test eax, eax;jne ": 1,
                "jne ;mov rcx, qword [arg_70h];cmp byte [rcx + ], 0;je ;lea rax, [rcx + ]": 1,
                "test eax, eax;jne ;mov rax, qword [arg_88h];mov rcx, qword [arg_80h];mov rdx, qword [arg_78h]": 1,
                "mov rcx, qword [arg_80h];mov rdx, qword [arg_78h];xor ebx, ebx;jmp ;sub rcx, rdx": 1,
                "mov rcx, qword [var_48h];cmp rdx, rcx;jbe ;jmp ;mov qword [arg_90h], rsi": 1,
                "cmp dword [], 0;jne ;mov qword [r8 + ], 0;test rsi, rsi;je ": 1,
                "mov qword [r8 + ], 0;test rsi, rsi;je ;cmp dword [], 0;jne ": 1,
                "jne ;mov qword [r8 + ], rdx;lea rax, [];mov qword [rsp], rax;lea rcx, [r8 + ]": 1,
                "call fcn.004580f0;mov rax, r9;jmp ;mov rsi, rcx;jmp ": 1,
                "mov rsi, rcx;jmp ;mov qword [arg_90h], rbx;xorps xmm0, xmm0;movups xmmword [arg_98h], xmm0": 1,
                "mov qword [arg_90h], rbx;xorps xmm0, xmm0;movups xmmword [arg_98h], xmm0;call fcn.0042f500;mov rbp, qword [var_60h]": 1,
                "movups xmmword [arg_98h], xmm0;call fcn.0042f500;mov rbp, qword [var_60h];add rsp, ;ret": 1,
                "mov qword [var_4c0h], rbp;lea rbp, [var_4c0h];lea rdi, [var_a0h];xorps xmm0, xmm0;mov qword [rsp - ], rbp": 2,
                "mov qword [rsp], rax;mov rcx, qword [var_4b0h];mov qword [var_8h], rcx;mov qword [var_10h], rdx;mov qword [var_18h], rsi": 1,
                "mov dword [var_10h], esi;lea rcx, [var_40h];mov qword [var_18h], rcx;mov qword [var_20h], 0;call fcn.004a5250": 1,
                "ja ;mov qword [var_88h], rdi;mov qword [var_80h], rsi;mov qword [var_4b0h], r8;mov qword [var_98h], rdx": 1,
                "movups xmmword [arg_4f8h], xmm0;mov rbp, qword [var_4c0h];add rsp, ;ret;lea rax, []": 1,
                "cmp r9, 5;jae ;shl r9, 1;lea r11, [];mov rcx, qword gs:[]": 1,
                "mov rax, qword [arg_a0h];mov qword [var_10h], rax;call fcn.0042ec20;test eax, eax;jne ": 3,
                "test rcx, rcx;jle ;mov qword [var_50h], rcx;mov qword [var_48h], rsi;cmp rcx, ": 1,
                "call fcn.0042f500;mov rbp, qword [var_90h];add rsp, ;ret;mov qword [arg_c8h], 0": 2,
                "add rsp, ;ret;mov qword [arg_c8h], 0;mov qword [arg_d0h], rcx;mov qword [arg_d8h], rax": 1,
                "mov rbp, qword [var_90h];add rsp, ;ret;mov qword [arg_c8h], 0;mov qword [arg_d0h], rax": 1,
                "mov qword [rsp], rax;mov rax, qword [rsp + ];mov qword [rsp + 8], rax;lea rcx, [];mov qword [rsp + ], rcx": 1,
                "call fcn.004c3e70;mov rax, qword [rsp + ];mov qword [rsp + ], rax;mov rcx, qword [rsp + ];mov qword [rsp + ], rcx": 1,
                "mov rdx, qword [rsp + ];mov qword [rsp + ], rdx;mov rbx, qword [rsp + ];mov qword [rsp], rbx;call fcn.004c3b30": 1,
                "mov rcx, qword [rdx];call rcx;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [rax + 8], rcx;lea rcx, [];mov qword [rsp], rcx;mov rcx, qword [arg_78h];mov qword [var_8h], rcx": 1,
                "movups xmmword [arg_80h], xmm0;movups xmmword [arg_90h], xmm0;mov rbp, qword [var_40h];add rsp, ;ret": 1,
                "lea rax, [];mov qword [arg_80h], rax;mov qword [arg_88h], 8;mov rax, qword [var_30h];mov qword [arg_90h], rax": 1,
                "mov rcx, rax;mov rax, qword [arg_60h];call fcn.004580f0;mov rax, rcx;jmp ": 5,
                "mov qword [rsp], rax;mov byte [rsp + 8], 1;call fcn.004c2600;cmp byte [rsp + ], 0;je ": 3,
                "mov rdx, qword [rsp + ];mov qword [rsp + ], rdx;mov qword [rsp + ], 2;mov qword [rsp + ], 2;mov rbx, qword [rsp + ]": 1,
                "sub rsp, ;mov qword [var_38h], rbp;lea rbp, [var_38h];mov qword [arg_60h], 0;xorps xmm0, xmm0": 1,
                "mov qword [var_8h], rax;mov rax, qword [arg_48h];mov qword [var_10h], rax;call fcn.0042ec20;test eax, eax": 1,
                "mov rax, qword [arg_48h];cmp byte [rax + ], 0;je ;mov rcx, qword [];mov rdx, qword []": 1,
                "movups xmmword [arg_48h], xmm0;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "add rsp, ;ret;mov dword [arg_40h], 0;mov qword [arg_48h], rcx;mov qword [arg_50h], rax": 3,
                "call fcn.004a39d0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;mov qword [rsp + ], rax": 2,
                "mov rax, qword [arg_38h];mov rax, qword [rax + ];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "call fcn.004c2600;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "test eax, eax;jne ;mov rax, qword [arg_40h];mov rcx, qword [rax + ];mov qword [rsp], rcx": 2,
                "mov rax, qword [var_28h];mov rcx, qword [var_20h];test rcx, rcx;je ;lea rbx, []": 2,
                "mov qword [arg_40h], rax;call fcn.0042f500;mov rbp, qword [var_18h];add rsp, ;ret": 6,
                "mov rbp, qword [var_18h];add rsp, ;ret;mov rax, qword [arg_28h];cmp byte [rax + ], 0": 2,
                "jne ;lea rdx, [];cmp rdx, rax;jne ;mov rdx, qword [arg_38h]": 3,
                "mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h];mov word [rax], ;mov rcx, qword [var_10h]": 3,
                "add rsp, ;ret;mov eax, 0;jmp ;mov qword [var_18h], rdx": 2,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h];mov word [rax], 2": 2,
                "add rsp, ;ret;mov edx, 0;jmp ;call fcn.00456090": 4,
                "mov qword [rsp + ], rbx;mov qword [rsp + ], rcx;mov qword [rsp + ], rax;call fcn.0042f500;mov rbp, qword [rsp + ]": 1,
                "mov qword [rsp + ], rdx;mov rax, qword [rsp + ];mov rcx, qword [rax + ];mov qword [rsp], rcx;call fcn.004a22d0": 1,
                "mov rax, qword [rsp + ];test rax, rax;je ;mov qword [rsp], rax;mov rax, qword [rsp + ]": 4,
                "mov rbx, ;mov rsi, rcx;cmovle rcx, rbx;mov rbx, qword [var_18h];mov rdi, qword [var_40h]": 3,
                "mov rax, r10;mov qword [var_88h], rbx;mov qword [var_68h], r8;mov qword [var_60h], rdi;test rcx, rcx": 3,
                "mov rcx, qword [rax];mov rcx, qword [rcx + ];mov byte [rcx + ], 1;lea rcx, [rdx + ];mov qword [rsp], rcx": 3,
                "mov byte [rcx + ], 1;lea rcx, [rdx + ];mov qword [rsp], rcx;mov qword [var_8h], ;mov qword [var_10h], ": 2,
                "jne ;mov qword [var_48h], rax;mov qword [var_70h], rcx;lea rax, [];mov qword [rsp], rax": 2,
                "mov qword [r8 + rdx], r9;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "mov r8, qword [var_88h];shl rdx, 4;lea r9, [];mov qword [r8 + rdx], r9;lea r10, [r8 + rdx]": 1,
                "lea r9, [];mov qword [r8 + rdx], r9;lea r10, [r8 + rdx];lea r10, [r10 + 8];cmp dword [], 0": 1,
                "mov qword [var_18h], rsi;mov qword [var_20h], rbx;call fcn.00440d10;mov r8, qword [var_28h];mov rax, qword [var_30h]": 4,
                "call fcn.00440d10;mov r8, qword [var_28h];mov rax, qword [var_30h];mov rsi, qword [var_38h];lea rbx, [rax + 1]": 3,
                "mov qword [rsp], rsi;mov qword [var_8h], rbx;mov qword [var_10h], rbx;call fcn.00440c00;mov rax, qword [var_18h]": 5,
                "mov rdx, qword [var_68h];xor ebx, ebx;jmp ;mov rdi, qword [var_58h];lea rdx, [rdi + ]": 1,
                "jl ;mov qword [arg_90h], rsi;mov qword [arg_98h], rcx;mov qword [arg_a0h], rcx;mov rax, qword [var_38h]": 1,
                "mov rbp, qword [var_70h];add rsp, ;ret;mov rax, rdx;call fcn.004580f0": 1,
                "mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rcx, qword [rcx + ];mov qword [rsp], rdx;call rcx": 10,
                "mov rdx, qword [rax + ];mov rcx, qword [rcx + ];mov qword [rsp], rdx;call rcx;mov rax, qword [rsp + ]": 8,
                "lea rax, [];mov qword [rsp + ], rax;mov qword [rsp + ], 2;mov qword [rsp + ], rsi;mov qword [rsp + ], rdi": 3,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword [rsp + ];mov rcx, qword [rax + ];mov rax, qword [rax + ]": 7,
                "mov rax, qword [rax + ];mov qword [rsp], rcx;call rax;movzx eax, byte [rsp + 8];jmp ": 6,
                "mov rdx, qword [rsp + 8];mov rbx, qword [rsp + ];mov qword [rsp], 0;mov qword [rsp + 8], rcx;mov qword [rsp + ], rax": 1,
                "mov qword [rsp + ], rax;lea rax, [];mov qword [rsp + ], rax;mov qword [rsp + ], 2;mov qword [rsp + ], rdx": 1,
                "mov qword [rsp + ], rbx;call fcn.00444ae0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov qword [rsp + ], rax": 1,
                "mov eax, dword [var_10h];mov rcx, qword [var_18h];mov rdx, qword [var_20h];test eax, eax;je ": 1,
                "lea rcx, [];jmp ;lea rcx, [rdi + ];mov rax, rdi;mov rdi, rcx": 3,
                "lea rax, [];mov qword [rdi], rax;mov qword [arg_98h], 0;lea rax, [];mov qword [arg_a0h], rax": 1,
                "call fcn.0040d880;mov rax, qword [var_8h];mov qword [var_78h], rax;mov rcx, qword [var_58h];mov qword [rsp], rcx": 1,
                "mov rax, qword [var_70h];call fcn.004580f0;mov rdi, rdx;jmp ;lea rax, []": 1,
                "jne ;mov rax, qword [var_78h];mov qword [rcx + ], rax;mov qword [arg_98h], rcx;xorps xmm0, xmm0": 1,
                "add rsp, ;ret;call fcn.0042f500;mov rbp, qword [var_80h];add rsp, ": 1,
                "mov byte [var_4h], 0;mov rax, qword [arg_60h];mov dword [var_8h], eax;call fcn.004a3e60;mov rax, qword [var_20h]": 1,
                "mov qword [rdi], rcx;mov rcx, qword [var_38h];mov qword [rdi + ], rcx;cmp dword [], 0;jne ": 1,
                "mov qword [rdi + ], rcx;cmp dword [], 0;jne ;mov rax, qword [var_40h];mov qword [rdi + ], rax": 6,
                "mov rdx, rax;mov rax, qword [var_40h];call fcn.004580f0;mov rdi, rdx;jmp ": 6,
                "lea rax, [];mov qword [arg_50h], rax;mov rbp, qword [var_20h];add rsp, ;ret": 4,
                "mov rbp, qword [var_20h];add rsp, ;ret;call fcn.00456090;jmp fcn.004cb9d0": 2,
                "mov rcx, qword [rax + 8];cmp rcx, ;je ;mov qword [rsp], rcx;call fcn.004a3520": 3,
                "mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h];mov qword [var_38h], rax;mov rcx, qword [arg_58h]": 3,
                "mov qword [rax], rcx;mov rcx, qword [var_30h];mov qword [rax + 8], rcx;lea rcx, [];mov qword [rsp], rcx": 3,
                "jmp ;call fcn.00456090;jmp fcn.004cbe20;int3;int3": 3,
                "sub rsp, ;mov qword [var_40h], rbp;lea rbp, [var_40h];mov rax, qword [arg_60h];mov rcx, qword [arg_58h]": 3,
                "lea rbx, [];mov qword [rsp], rbx;mov qword [var_8h], rdx;mov qword [var_10h], rcx;mov qword [var_18h], rax": 6,
                "mov qword [rsp], rbx;mov qword [var_8h], rdx;mov qword [var_10h], rcx;mov qword [var_18h], rax;mov qword [var_20h], rsi": 3,
                "sub rsp, ;mov qword [var_60h], rbp;lea rbp, [var_60h];mov rax, qword [arg_70h];mov rcx, qword [arg_78h]": 4,
                "mov qword [rsp], rdx;mov qword [var_8h], rbx;mov qword [var_10h], rsi;mov rax, rdi;shr rdi, ": 3,
                "jne ;movzx ebx, byte [var_46h];test bl, bl;je ;mov rsi, qword [arg_78h]": 3,
                "xor ebx, 1;xor edi, edi;mov r9, rcx;mov rcx, rsi;mov rsi, rdx": 3,
                "mov rcx, rsi;mov rsi, rdx;mov rdx, rax;mov rax, r9;mov r10d, ebx": 3,
                "test rax, rax;jle ;movzx edi, byte [rcx];cmp dil, ;jne ": 2,
                "dec rax;mov rdi, rax;neg rax;sar rax, ;and rax, 1": 2,
                "cmp dil, 9;je ;mov qword [var_60h], rdx;mov qword [var_48h], rbx;mov qword [var_40h], rsi": 1,
                "mov rcx, qword [var_18h];mov rdx, qword [var_20h];mov rbx, qword [var_28h];mov qword [arg_78h], rbx;mov rsi, qword [var_30h]": 1,
                "mov rax, qword [var_40h];lea rcx, [rax + 1];mov rdx, qword [var_20h];mov rbx, qword [var_28h];mov rsi, qword [var_48h]": 1,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.004cc420;int3": 1,
                "mov ecx, dword [var_34h];test rcx, rcx;jbe ;mov qword [var_38h], rax;mov rdx, qword [arg_50h]": 2,
                "mov rcx, qword [rcx + ];mov qword [rsp], rdx;call rcx;mov rax, qword [rsp + ];mov rcx, qword [rsp + 8]": 3,
                "lea rbp, [rsp - ];call fcn.00458f0e;mov rbp, qword [rbp];mov rdx, qword [rsp + ];mov rbx, qword [rdx + 8]": 2,
                "mov qword [rsp + ], rsi;mov qword [rsp + ], rbx;mov rbx, qword [rdx + ];mov rdx, qword [rdx + ];mov qword [rsp + ], rbx": 2,
                "mov qword [rsp + ], rbx;mov qword [rsp + ], rdx;mov qword [rsp + ], rcx;mov qword [rsp + ], rax;mov qword [rsp], 0": 3,
                "mov rcx, qword [rax];test byte [rcx], al;mov qword [rsp], rcx;mov rcx, qword [rsp + ];mov qword [rsp + 8], rcx": 2,
                "mov qword [rsp], rcx;mov rcx, qword [rsp + ];mov qword [rsp + 8], rcx;mov rcx, qword [rsp + ];mov qword [rsp + ], rcx": 50,
                "mov qword [rsp + ], rcx;mov rbp, qword [rsp + ];add rsp, ;ret;cmp qword [], rdx": 1,
                "je ;mov qword [rsp + ], rcx;mov qword [rsp + ], rdx;lea rax, [];mov qword [rsp], rax": 1,
                "mov rax, qword [rsp + ];mov qword [rdi + ], rax;mov rax, qword [rsp + ];lea rdx, [];mov rcx, rdi": 1,
                "mov rax, qword [var_20h];mov rcx, qword [var_30h];mov rdx, qword [var_28h];test rax, rax;mov ebx, 0": 1,
                "mov qword [var_40h], rdx;lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rdi, qword [var_8h]": 1,
                "cmp dword [], 0;jne ;mov qword [rdi + ], rax;mov rcx, qword [var_40h];mov qword [rdi + ], rcx": 1,
                "lea rdx, [];jmp ;lea rcx, [rdi + ];mov rax, rdi;mov rdi, rcx": 1,
                "mov rdx, qword [];mov rcx, qword [];jmp ;mov rcx, qword [var_50h];mov rdx, qword [var_38h]": 1,
                "mov qword [rdi], rcx;mov rcx, qword [rsp + ];mov rcx, qword [rcx];mov rdx, qword [rcx + ];mov rax, qword [rcx + ]": 1,
                "mov rax, qword [arg_48h];mov qword [rsp], rax;mov rcx, qword [arg_50h];mov qword [var_8h], rcx;call fcn.004ac060": 1,
                "mov rax, qword [rsp + ];mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax;call fcn.004ce950": 1,
                "ret;mov rdx, qword [];mov rcx, qword [];jmp ;call fcn.00456090": 7,
                "je ;xor edx, edx;test dl, dl;je ;mov qword [arg_60h], rax": 1,
                "mov rcx, qword [arg_50h];mov rcx, qword [rcx];mov rdx, qword [rcx + ];mov rax, qword [rcx + ];mov qword [rdi + ], rdx": 1,
                "mov rdx, rax;mov rax, qword [var_38h];call fcn.004580f0;mov rdi, rdx;jmp ": 7,
                "mov qword [arg_60h], rdx;mov qword [arg_68h], rcx;mov rbp, qword [var_40h];add rsp, ;ret": 3,
                "jmp ;lea rax, [];call fcn.004580f0;jmp ;mov qword [rsp], rcx": 3,
                "jmp ;mov qword [rsp], rcx;mov qword [rsp + 8], rax;mov rdx, qword [];mov qword [rsp + ], rdx": 2,
                "xor edx, edx;test rdx, rdx;je ;mov qword [arg_68h], rdx;mov qword [arg_70h], rcx": 6,
                "mov rax, qword [arg_50h];mov qword [var_8h], rax;mov rax, qword [arg_58h];mov qword [var_10h], rax;mov rax, qword [arg_60h]": 25,
                "mov rcx, qword [arg_60h];mov qword [rax + ], rcx;mov word [rax + ], ;mov rcx, qword [arg_70h];mov qword [rax + ], rcx": 4,
                "mov qword [arg_88h], rax;mov rbp, qword [var_50h];add rsp, ;ret;lea rdi, [rax + ]": 4,
                "jmp ;mov dword [var_44h], 0;mov rax, qword [arg_60h];mov qword [rsp], rax;lea rcx, [var_44h]": 4,
                "mov qword [var_30h], rbp;lea rbp, [var_30h];mov rax, qword [arg_40h];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [var_8h], rax;mov rax, qword [arg_50h];mov qword [var_10h], rax;lea rax, [];mov qword [var_18h], rax": 8,
                "lea rbp, [var_38h];mov rax, qword [arg_48h];mov qword [rsp], rax;mov rcx, qword [arg_50h];mov rcx, qword gs:[]": 1,
                "mov qword [rsp], rax;mov rcx, qword [arg_50h];mov qword [var_8h], rcx;call fcn.004cfe20;mov rax, qword [var_18h]": 4,
                "test rdx, rdx;je ;mov qword [arg_68h], 0;mov qword [arg_70h], rdx;mov qword [arg_78h], rax": 4,
                "ret;mov qword [rsp], rcx;mov rax, qword [arg_48h];mov qword [var_8h], rax;mov rax, qword [arg_50h]": 4,
                "mov qword [var_18h], rax;mov qword [var_20h], 4;call fcn.004ceb00;mov rax, qword [var_28h];mov qword [arg_68h], rax": 3,
                "jne ;mov qword [var_b8h], rax;lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 4,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.004a2a70;mov rax, qword [var_20h];mov rcx, qword [var_18h]": 4,
                "mov rcx, qword [var_18h];mov rdx, qword [var_10h];mov qword [var_40h], rdx;test rcx, rcx;je ": 3,
                "mov qword [arg_f0h], 0;mov qword [arg_f8h], rcx;mov qword [arg_100h], rax;mov rbp, qword [var_d0h];add rsp, ": 6,
                "cmp qword [rax], 2;jne ;mov qword [var_8ch], 0;xorps xmm0, xmm0;movups xmmword [var_90h], xmm0": 3,
                "cmp byte [var_10h], 0;je ;mov rax, qword [var_40h];mov qword [rsp], rax;mov rax, qword [arg_e0h]": 3,
                "mov rax, qword [var_40h];mov qword [rsp], rax;mov rax, qword [arg_e0h];mov qword [var_8h], rax;mov rax, qword [arg_e8h]": 3,
                "ret;mov qword [arg_f0h], 0;mov qword [arg_f8h], rcx;mov qword [arg_100h], rax;mov rbp, qword [var_d0h]": 1,
                "mov rbp, qword [var_d0h];add rsp, ;ret;mov qword [arg_f0h], 0;mov qword [arg_f8h], rdx": 1,
                "mov qword [arg_f8h], rdx;mov qword [arg_100h], rax;mov rbp, qword [var_d0h];add rsp, ;ret": 1,
                "mov rcx, qword [var_c0h];jmp ;mov qword [arg_f0h], 0;mov qword [arg_f8h], rdx;mov qword [arg_100h], rcx": 1,
                "jmp ;mov qword [arg_f0h], 0;mov qword [arg_f8h], rdx;mov qword [arg_100h], rcx;mov rbp, qword [var_d0h]": 1,
                "call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.004cee90;int3": 1,
                "mov rax, rdi;mov rdi, rcx;mov rdx, rax;mov rax, qword [arg_58h];call fcn.004580f0": 8,
                "mov rdi, rcx;mov rdx, rax;mov rax, qword [arg_58h];call fcn.004580f0;mov rdi, rdx": 8,
                "mov rax, qword [var_20h];mov rcx, qword [var_28h];mov rdx, qword [var_30h];test rcx, rcx;je ": 3,
                "mov qword [var_40h], rdx;mov rax, qword [arg_58h];mov qword [rsp], rax;mov rcx, qword [arg_60h];mov qword [var_8h], rcx": 1,
                "mov rax, qword [arg_58h];mov qword [rsp], rax;mov rcx, qword [arg_60h];mov qword [var_8h], rcx;call fcn.004cee90": 1,
                "mov qword [rsp], rax;mov rcx, qword [arg_60h];mov qword [var_8h], rcx;call fcn.004cee90;mov rax, qword [var_10h]": 1,
                "call fcn.00456090;jmp fcn.004cf3c0;int3;int3;int3": 1,
                "cmp qword [rax + ], 0;je ;mov rcx, qword [rax + ];cmp byte [rcx + ], 0;jne ": 1,
                "cmp byte [rcx + ], 0;jne ;mov qword [rsp], rax;call fcn.004c5160;mov rax, qword [var_8h]": 1,
                "lea rax, [];mov qword [var_30h], rdi;mov qword [var_20h], rax;lea rdx, [];mov qword [rsp], rdx": 1,
                "mov rax, qword [var_20h];mov qword [arg_58h], rax;mov rax, qword [var_30h];mov qword [arg_60h], rax;mov rbp, qword [var_40h]": 1,
                "je ;mov rax, qword [];mov rcx, qword [];jmp ;mov rax, qword [var_28h]": 1,
                "jmp ;mov rcx, qword [arg_50h];xor edi, edi;xor eax, eax;jmp ": 1,
                "mov rbp, qword [var_40h];add rsp, ;ret;lea rax, [];mov qword [arg_58h], rax": 1,
                "cmp bl, ;jne ;inc rdx;sub rax, rdx;mov rbx, rax": 2,
                "cmp bl, ;sete bl;jmp ;cmp rax, 2;jle ": 2,
                "and rax, rcx;test rdx, rdx;je ;mov rcx, qword [arg_30h];movzx eax, byte [rcx + rax]": 3,
                "mov qword [rsp], rbp;lea rbp, [rsp];mov rax, qword [arg_18h];cmp rax, 2;jl ": 3,
                "jne ;mov edx, 1;test dl, dl;je ;cmp bl, ": 3,
                "jmp ;inc rbx;cmp rbx, rax;jge ;jae ": 3,
                "jmp ;xorps xmm0, xmm0;movups xmmword [arg_20h], xmm0;mov rbp, qword [rsp];add rsp, 8": 5,
                "sete sil;jmp ;cmp bl, ;sete bl;jmp ": 3,
                "sete dl;jmp ;mov qword [arg_20h], rcx;mov qword [arg_28h], 2;mov rbp, qword [rsp]": 3,
                "cmp dl, ;jb ;cmp dl, ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "call fcn.00440c00;mov rax, qword [var_30h];cmp rax, 3;mov ecx, 3;mov rdx, rax": 3,
                "test r9b, r9b;je ;inc rsi;jmp ;cmp r8b, ": 3,
                "jne ;lea r9, [rsi + 1];cmp rbx, r9;jne ;mov r10d, 1": 2,
                "jne ;mov r10d, 1;jmp ;cmp r10b, ;sete r10b": 1,
                "jmp ;cmp r8b, ;sete r9b;jmp ;cmp rdi, 6": 1,
                "mov qword [var_8h], rcx;mov qword [var_10h], rax;mov qword [var_18h], rdx;call fcn.00444c60;mov rax, qword [var_20h]": 1,
                "mov rax, qword [var_40h];mov rcx, qword [var_28h];mov rdx, qword [var_30h];mov rbx, qword [var_38h];mov qword [arg_68h], rcx": 3,
                "mov rbp, qword [var_48h];add rsp, ;ret;call fcn.00456090;jmp fcn.004d03f0": 3,
                "je ;mov qword [rsp], rcx;call fcn.004c80a0;mov rax, qword [var_18h];mov rcx, qword [var_10h]": 4,
                "call fcn.004c80a0;mov rax, qword [var_18h];mov rcx, qword [var_10h];mov edx, dword [var_8h];test rcx, rcx": 4,
                "test rcx, rcx;jne ;mov dword [var_34h], edx;lea eax, [rdx - 2];cmp eax, 1": 4,
                "jne ;mov dword [var_34h], edx;lea eax, [rdx - 2];cmp eax, 1;ja ": 4,
                "xorps xmm0, xmm0;movups xmmword [arg_70h], xmm0;mov qword [arg_80h], rax;mov qword [arg_88h], rdx;mov rbp, qword [var_58h]": 2,
                "mov qword [rdi + ], rax;mov rcx, qword [var_38h];mov qword [rdi + ], rcx;cmp dword [], 0;jne ": 2,
                "call fcn.004580f0;jmp ;movzx ebx, byte [rdx];cmp bl, ;je ": 2,
                "jne ;movzx ebx, byte [rdx + 1];cmp bl, ;je ;cmp bl, ": 4,
                "ret;mov rax, qword [rcx + ];mov rcx, qword [rax + ];mov rax, qword [rax + ];mov qword [rsp], rcx": 2,
                "mov rax, qword [rcx + ];mov rcx, qword [rax + ];mov rax, qword [rax + ];mov qword [rsp], rcx;mov qword [var_8h], rax": 2,
                "mov rax, qword [var_10h];mov rcx, qword [var_18h];mov rdx, qword [var_20h];mov rbx, qword [var_28h];mov qword [arg_70h], rax": 2,
                "mov rbp, qword [var_58h];add rsp, ;ret;xor edx, edx;jmp ": 2,
                "jbe ;sub rsp, ;mov qword [var_2f0h], rbp;lea rbp, [var_2f0h];xorps xmm0, xmm0": 2,
                "cmp rax, 3;je ;mov rcx, qword [arg_310h];mov qword [rsp], rcx;mov qword [var_8h], rax": 2,
                "mov rax, qword [arg_308h];mov qword [rdi + 8], rax;cmp dword [], 0;jne ;mov rcx, qword [arg_300h]": 1,
                "mov dword [var_8h], 0;lea rax, [var_58h];mov qword [var_10h], rax;call fcn.004a4540;mov rax, qword [var_20h]": 1,
                "ret;call fcn.0042f500;mov rbp, qword [var_2f0h];add rsp, ;ret": 1,
                "call fcn.004a2a70;mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rdx, qword [var_10h];test rcx, rcx": 1,
                "jne ;mov rcx, qword [arg_310h];mov qword [rdi + ], rcx;mov rcx, qword [var_48h];mov qword [rdi + ], rcx": 1,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.004d1330;int3": 1,
                "mul rcx;shr rdx, 3;add rcx, ;lea rsi, [rdx + rdx*4];shl rsi, 1": 2,
                "add rsp, ;ret;lea rax, [];mov qword [arg_60h], rax;mov qword [arg_68h], 1": 2,
                "sub rsp, ;mov qword [var_48h], rbp;lea rbp, [var_48h];mov dword [var_28h], ;lea rax, []": 3,
                "mov qword [var_40h], rax;mov dword [var_2ch], ecx;mov dword [rsp], 5;mov qword [var_8h], rax;lea rcx, [var_28h]": 3,
                "mov rcx, qword [var_30h];mov qword [rdi + ], rcx;cmp dword [], 0;jne ;mov rax, qword [var_38h]": 6,
                "xor ecx, ecx;xor edx, edx;jmp ;mov rcx, rdi;cmp rcx, ": 3,
                "jmp ;mov rcx, rdi;cmp rcx, ;jge ;lea rbx, []": 3,
                "mov qword [var_38h], rcx;mov qword [var_30h], rdx;mov qword [rsp], rbx;mov qword [var_8h], ;mov qword [var_10h], rcx": 2,
                "mov rcx, rdi;cmp rcx, 9;jge ;lea rbx, [];movzx esi, byte [rbx + rcx]": 2,
                "and r8d, r9d;test eax, r8d;je ;cmp rdx, ;jae ": 2,
                "bt eax, ;setb byte [rsp + ];ret;int3;int3": 1,
                "setb byte [rsp + ];ret;int3;int3;mov eax, dword [rsp + 8]": 1,
                "ret;int3;mov eax, dword [rsp + 8];and eax, ;mov dword [rsp + ], eax": 1,
                "mov qword [var_4ch], 0;xorps xmm0, xmm0;movups xmmword [var_50h], xmm0;movups xmmword [var_60h], xmm0;movups xmmword [var_70h], xmm0": 2,
                "movups xmmword [var_50h], xmm0;movups xmmword [var_60h], xmm0;movups xmmword [var_70h], xmm0;mov rax, qword [arg_a8h];mov qword [rsp], rax": 2,
                "mov qword [var_8h], rcx;call fcn.004a39d0;mov rax, qword [var_18h];mov rcx, qword [var_10h];test rcx, rcx": 2,
                "lea rax, [];mov qword [arg_b8h], rax;mov qword [arg_c0h], rdi;mov rbp, qword [var_88h];add rsp, ": 2,
                "lea rcx, [rdi + ];mov rax, rdi;mov rdi, rcx;mov rdx, rax;mov rax, qword [var_80h]": 3,
                "mov rax, rdi;mov rdi, rcx;mov rdx, rax;mov rax, qword [arg_98h];call fcn.004580f0": 2,
                "mov qword [var_40h], rcx;jne ;cmp rdx, ;jne ;mov dword [var_34h], 0": 1,
                "mov qword [rdi + 8], rax;cmp dword [], 0;jne ;mov rax, qword [var_80h];mov qword [rdi], rax": 1,
                "mov eax, dword [var_6ch];mov dword [rdi + ], eax;mov eax, dword [var_70h];mov dword [rdi + ], eax;mov eax, dword [var_68h]": 1,
                "mov qword [arg_b0h], rdi;xorps xmm0, xmm0;movups xmmword [arg_b8h], xmm0;mov rbp, qword [var_88h];add rsp, ": 2,
                "jmp ;lea rax, [];call fcn.004580f0;jmp ;mov edx, 0": 1,
                "mov edx, 0;jmp ;call fcn.00456090;jmp fcn.004d1ab0;mov rax, qword [rsp + 8]": 1,
                "call fcn.00456090;jmp fcn.004d1ab0;mov rax, qword [rsp + 8];mov ecx, dword [rax + ];mov eax, dword [rax + ]": 1,
                "mov qword [], rax;cmp dword [], 0;jne ;mov qword [], rcx;mov rcx, qword []": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], ;call fcn.004cecc0;mov rax, qword [var_18h];cmp dword [], 0": 3,
                "call fcn.00462900;call fcn.00455b60;call fcn.004aa650;call fcn.004ca160;call fcn.00461db0": 2,
                "call fcn.00461db0;call fcn.004bdcd0;call fcn.004c1e20;call fcn.004d2080;call fcn.004cbe20": 2,
                "call fcn.004bdcd0;call fcn.004c1e20;call fcn.004d2080;call fcn.004cbe20;call fcn.004d0170": 2,
                "jmp fcn.004d2370;int3;int3;int3;int3": 2,
                "jmp ;xor ecx, ecx;jmp ;mov rax, qword [rsp + ];mov rdx, qword [rsp + ]": 1,
                "setb byte [rsp + ];mov rbp, qword [rsp];add rsp, 8;ret;call fcn.004092a0": 1,
                "ja ;mov r10, rbx;sub rbx, r8;neg rbx;sar rbx, ": 1,
                "mov r10, rbx;sub rbx, r8;neg rbx;sar rbx, ;and r8, rbx": 1,
                "mov qword [rdi + ], r10;cmp dword [], 0;jne ;mov qword [rdi], rsi;mov rbp, qword [var_40h]": 1,
                "mov rbp, qword [var_40h];add rsp, ;ret;mov rax, rsi;call fcn.004580f0": 1,
                "mov qword [var_28h], r8;lea rax, [];mov qword [rsp], rax;lea rax, [rcx + rbx*2];mov qword [var_30h], rax": 1,
                "call fcn.00440c00;mov rax, qword [arg_50h];mov rcx, qword [rax];mov rdx, qword [rcx + 8];mov rbx, qword [var_30h]": 1,
                "mov rsi, rbx;cmovg rbx, rdx;mov rdx, qword [var_18h];mov rcx, qword [rcx];cmp rdx, rcx": 1,
                "mov rdx, qword [var_18h];mov rcx, qword [rcx];cmp rdx, rcx;jne ;mov rcx, qword [arg_58h]": 1,
                "call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.004d3020;int3": 1,
                "mov rsi, qword [var_38h];mov rdi, qword [var_28h];mov rcx, qword [var_48h];mov rdx, qword [arg_98h];jmp ": 3,
                "mov rdx, qword [rax];mov qword [var_60h], rdx;mov rbx, qword [rdx + 8];mov rsi, qword [arg_98h];lea rdi, [rsi + rbx]": 3,
                "mov rax, qword [var_40h];mov qword [var_8h], rax;call fcn.004d3020;mov rbp, qword [var_78h];add rsp, ": 3,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r9;mov qword [var_10h], rbx;mov qword [var_18h], r8": 5,
                "mov qword [var_10h], rbx;mov qword [var_18h], r8;mov qword [var_20h], rdi;call fcn.00440d10;mov r8, qword [var_38h]": 4,
                "mov qword [var_50h], rbx;mov rsi, qword [rax];mov rdi, qword [rax + ];cmp rbx, rdi;ja ": 4,
                "mov qword [var_10h], rdx;call fcn.00459210;mov rax, qword [var_50h];mov rdi, qword [var_58h];mov qword [rdi + 8], rax": 3,
                "call fcn.00459210;mov rax, qword [var_50h];mov rdi, qword [var_58h];mov qword [rdi + 8], rax;mov rcx, qword gs:[]": 1,
                "mov rax, qword [var_70h];mov qword [rdi], rax;jmp ;mov rax, qword [var_70h];call fcn.004580f0": 4,
                "mov rdi, qword [var_28h];mov rcx, qword [var_48h];mov rdx, qword [arg_98h];jmp ;call fcn.00456090": 1,
                "mov rcx, qword [var_48h];mov rdx, qword [arg_98h];jmp ;call fcn.00456090;jmp fcn.004d3510": 1,
                "call fcn.00456090;jmp fcn.004d3510;int3;int3;int3": 1,
                "je ;mov rsi, qword [arg_78h];cmp rsi, ;jbe ;xor edi, edi": 3,
                "jmp ;lea rdx, [r8 - 1];cmp rdx, rdi;jae ;mov byte [r8 + rcx - 1], ": 2,
                "add rcx, rdx;mov qword [var_8h], rcx;mov qword [var_10h], rsi;mov qword [var_18h], rsi;call fcn.004d31b0": 2,
                "mov rdx, rbx;neg rbx;sar rbx, ;and rbx, rdi;add rbx, rcx": 2,
                "mov qword [var_8h], rdx;mov qword [var_10h], rdx;mov dword [var_18h], esi;call fcn.00463150;mov rax, qword [var_40h]": 2,
                "mov r8d, 2;jmp ;cmp esi, ;jl ;cmp esi, ": 2,
                "jg ;mov r8, ;jmp ;cmp esi, ;jg ": 2,
                "cmp esi, ;jg ;mov r8d, 4;jmp ;mov r8, ": 2,
                "mov rsi, qword [arg_78h];jmp ;mov rsi, qword [arg_78h];xor edi, edi;jmp ": 2,
                "mov qword [var_30h], rbx;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rbx;mov qword [var_10h], rbx": 2,
                "lea rbp, [var_38h];movzx ecx, byte [arg_60h];test cl, cl;je ;mov rcx, qword [arg_50h]": 3,
                "setl dl;test dl, dl;je ;neg rcx;mov rbx, qword [arg_48h]": 2,
                "lea rsi, [rbx + ];cmp byte [rbx + 8], 0;je ;mov rdi, qword [rbx + ];add rdi, qword [rbx + ]": 2,
                "mov eax, ;cmp byte [rbx + 9], 0;je ;mov rdi, qword [rbx + ];test rdi, rdi": 2,
                "cmp r8, 2;jne ;mov r9, rax;jmp ;mov r11, rcx": 2,
                "and rcx, 1;lea r12, [rcx + ];mov byte [rax + rsi - 1], r12b;shr r11, 1;mov rcx, r11": 2,
                "movzx ecx, byte [r12 + rcx];cmp r11, r9;jae ;mov byte [rax + rsi - 1], cl;jmp ": 1,
                "and rdx, rax;lea rax, [rdx + rsi];mov qword [var_8h], rax;mov qword [var_10h], rcx;mov qword [var_18h], rcx": 1,
                "call fcn.004d31b0;movzx eax, byte [var_25h];mov rcx, qword [arg_48h];mov byte [rcx + ], al;mov rbp, qword [var_38h]": 1,
                "ret;cmp byte [rbx + ], 0;je ;lea rdx, [rcx - 1];cmp rdx, rax": 1,
                "and rcx, 7;lea r12, [rcx + ];mov byte [rax + rsi - 1], r12b;shr r11, 3;mov rcx, r11": 1,
                "lea r10, [rax - 1];mov r11, rax;movabs rax, ;mov r12d, edx;mul rcx": 1,
                "mov r12d, edx;mul rcx;shr rdx, 3;add rcx, ;lea r13, [rdx + rdx*4]": 1,
                "jne ;mov r9, qword [arg_70h];mov r10, qword [arg_68h];mov r11, rax;jmp ": 1,
                "mov r9, r11;jmp ;movzx eax, byte [rbx + ];mov byte [var_26h], al;mov byte [rbx + ], 0": 1,
                "movzx eax, byte [var_26h];mov rcx, qword [arg_48h];mov byte [rcx + ], al;mov rbp, qword [var_38h];add rsp, ": 1,
                "jne ;cmp byte [rbx + ], 0;jne ;jmp ;xor edi, edi": 1,
                "jmp ;test rbx, rbx;jl ;mov qword [arg_68h], rdx;mov qword [arg_70h], rbx": 2,
                "mov qword [var_8h], rax;mov qword [var_10h], rcx;call fcn.004d3510;mov rbp, qword [var_28h];add rsp, ": 3,
                "call fcn.004d31b0;mov rbp, qword [var_38h];add rsp, ;ret;call fcn.00456090": 4,
                "je ;movzx r10d, byte [r8 + ];mov r11, rdx;shl rdx, 2;test r10, r10": 5,
                "mov qword [var_48h], rdx;cmp byte [r8 + 8], 0;je ;mov r9, qword [r8 + ];cmp r9, rdx": 5,
                "mov r9, qword [r9];cmp byte [r8 + ], 0;je ;mov r13, qword [arg_c0h];cmp r13, ": 4,
                "cmp r13, ;jbe ;lea r14, [r12 + 2];mov r15, qword [arg_b8h];mov rax, rdx": 4,
                "mov r15, qword [arg_b8h];mov rax, rdx;movzx edx, byte [r15 + ];cmp r14, r10;ja ": 4,
                "and r12d, ;cmp r12, r13;jae ;lea r13, [r14 + 2];movzx r12d, byte [r15 + r12]": 4,
                "cmp r12, r13;jae ;lea r13, [r14 + 2];movzx r12d, byte [r15 + r12];cmp r13, r10": 4,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r9;mov qword [var_10h], r14;mov qword [var_18h], r10": 6,
                "movzx r8d, byte [var_47h];mov r11, qword [var_70h];movzx r12d, byte [var_46h];mov r14, qword [var_58h];mov r15, qword [arg_b8h]": 3,
                "mov rax, qword [var_30h];mov r10, qword [var_38h];lea r14, [rax + 2];mov rcx, qword [arg_a0h];test rcx, rcx": 3,
                "mov r10, qword [var_38h];lea r14, [rax + 2];mov rcx, qword [arg_a0h];test rcx, rcx;mov rax, qword [var_48h]": 3,
                "movzx r8d, byte [var_47h];mov r11, qword [var_70h];mov r12, qword [var_68h];mov r13, qword [arg_c0h];mov r15, qword [arg_b8h]": 3,
                "test rcx, rcx;mov r14, r12;jmp ;mov qword [var_60h], r14;lea rax, []": 3,
                "mov qword [var_20h], r12;call fcn.00440d10;mov r9, qword [var_28h];mov rax, qword [var_30h];mov r10, qword [var_38h]": 3,
                "je ;mov rcx, qword [r8 + ];cmp rcx, rax;jle ;cmp byte [r8 + ], 0": 2,
                "cmp byte [r8 + ], 0;jne ;mov rbp, qword [var_78h];add rsp, ;ret": 2,
                "call fcn.004580f0;mov rax, rcx;jmp ;mov byte [var_47h], dl;mov qword [var_58h], r12": 2,
                "mov qword [rsp], rax;mov qword [var_8h], r9;mov qword [var_10h], r12;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov r11, qword [var_70h];mov r12, qword [var_58h];mov r13, qword [arg_c0h];mov r15, qword [arg_b8h];jmp ": 1,
                "mov qword [rsp], r8;sub r9, rdx;mov qword [var_8h], r9;call fcn.004d3020;mov rcx, qword [arg_a0h]": 1,
                "mov rax, qword [arg_88h];mov qword [rsp], rax;mov rcx, qword [arg_90h];mov qword [var_8h], rcx;mov rcx, qword [arg_98h]": 5,
                "mov rax, qword [var_30h];mov rcx, qword [var_38h];mov rdx, qword [var_40h];mov rbx, qword [arg_88h];mov qword [rsp], rbx": 1,
                "mov qword [var_70h], rax;mov qword [var_48h], rcx;mov qword [rsp], rax;mov qword [var_8h], rcx;call fcn.0047a8b0": 1,
                "mov rax, qword [arg_40h];test byte [rax], al;lea rcx, [rax + ];mov qword [var_28h], rcx;mov qword [rsp], rcx": 2,
                "mov ebx, ;cmova edx, ebx;mov dword [var_18h], edx;call fcn.00463150;mov rax, qword [var_20h]": 2,
                "cmp rax, ;ja ;mov rcx, qword [arg_40h];mov qword [rsp], rcx;mov rcx, qword [var_28h]": 2,
                "ud2;call fcn.00456090;jmp fcn.004d4c10;int3;int3": 2,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov rax, qword [arg_50h];cmp rax, ;mov ecx, ": 3,
                "cmp rax, ;mov ecx, ;cmova eax, ecx;mov rcx, qword [arg_48h];lea rdx, [rcx + ]": 3,
                "mov qword [var_d0h], rbp;lea rbp, [var_d0h];mov rax, qword [arg_e0h];cmp byte [rax + 9], 0;je ": 4,
                "mov qword [var_80h], rcx;lea rdx, [rax + ];mov qword [rsp], rdx;mov qword [var_8h], 1;mov qword [var_10h], ": 4,
                "jbe ;movzx ebx, byte [rcx + 1];cmp bl, ;jne ;inc rcx": 4,
                "mov rdx, qword [var_70h];mov rbx, qword [arg_e0h];mov rdi, qword [var_78h];mov rax, rdi;movzx r8d, byte [var_51h]": 3,
                "jmp ;mov byte [rcx + rax], ;dec rsi;mov rax, rdi;mov qword [var_68h], rax": 3,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;lea rax, [rbx - 1];mov qword [var_10h], rax;call fcn.00459210": 1,
                "mov qword [var_60h], rbp;lea rbp, [var_60h];mov eax, dword [arg_78h];cmp eax, ;jl ": 1,
                "jl ;mov rcx, qword [arg_70h];mov rdx, qword [rcx + 8];mov qword [var_40h], rdx;mov rbx, qword [rcx + ]": 1,
                "add rsp, ;ret;mov rax, qword [var_58h];call fcn.004580f0;jmp ": 9,
                "mov rbx, rax;mov eax, dword [arg_78h];mov rcx, rdi;jmp ;call fcn.004580f0": 1,
                "jmp fcn.004d5870;int3;int3;int3;int3": 1,
                "mov rbp, qword [var_18h];add rsp, ;ret;lea rdi, [rax + ];call fcn.004580f0": 2,
                "call fcn.00456090;jmp fcn.004d5a80;int3;int3;int3": 2,
                "movups xmmword [rcx + ], xmm0;lea rax, [];mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax": 3,
                "lea rax, [];mov qword [var_8h], rax;mov qword [var_10h], rcx;call fcn.00460dc0;mov rbp, qword [var_18h]": 4,
                "mov rax, qword [rsp + 8];mov rcx, qword [rax + ];movzx eax, byte [rax + ];mov qword [rsp + ], rcx;mov rcx, qword gs:[]": 1,
                "movzx eax, byte [rax + ];jmp ;mov byte [rsp + ], 0;ret;mov rax, qword [rsp + 8]": 2,
                "call fcn.00459210;mov rax, qword [rsp + ];mov rdi, qword [rsp + ];mov qword [rdi + 8], rax;mov rax, qword [rsp + ]": 5,
                "mov qword [var_10h], rcx;mov rcx, qword [arg_88h];mov qword [var_18h], rcx;mov rcx, qword [arg_90h];mov qword [var_20h], rcx": 3,
                "mov qword [var_10h], rdx;mov qword [var_18h], rbx;call fcn.00444c60;mov rax, qword [var_20h];mov qword [var_38h], rax": 10,
                "mov rax, qword [var_38h];mov qword [arg_70h], rax;mov rax, qword [var_30h];mov qword [arg_78h], rax;mov rbp, qword [var_48h]": 8,
                "mov qword [var_18h], rcx;call fcn.004de1b0;mov rax, qword [arg_68h];mov rax, qword [rax + ];mov rcx, qword [var_48h]": 4,
                "mov rbx, qword [var_48h];mov qword [rsp], rbx;call fcn.004d5b40;mov rax, qword [var_40h];mov qword [arg_90h], rax": 4,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.004d6310;int3": 4,
                "jge ;mov rdx, qword [arg_10h];mov rbx, qword [arg_18h];xor esi, esi;xor edi, edi": 5,
                "xor edi, edi;jmp ;inc rax;lea r9, [rdi + rdi*4];add r8d, ": 5,
                "mov byte [arg_38h], 0;mov qword [arg_40h], rcx;mov rbp, qword [rsp];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "lea rbp, [var_70h];mov rcx, qword [arg_98h];test rcx, rcx;je ;mov rax, qword [arg_80h]": 5,
                "je ;mov rax, qword [arg_80h];mov rdx, qword [rax + 8];lea rbx, [rdx + 1];mov rsi, qword [rax + ]": 5,
                "mov qword [rax + 8], rbx;mov byte [rdi + rdx], ;mov rdx, qword [arg_88h];mov qword [rsp], rdx;mov rdx, qword [arg_90h]": 5,
                "mov qword [rsp], rdx;mov rdx, qword [arg_90h];mov qword [var_8h], rdx;mov qword [var_10h], rcx;call fcn.0048d320": 5,
                "mov qword [var_50h], rsi;mov rdi, qword [rdx + ];mov r8, qword [rdx];cmp rsi, rdi;ja ": 4,
                "mov qword [rdi + ], rcx;mov rdx, qword [var_40h];mov rbx, qword [var_58h];lea rdx, [rbx + rdx];lea rdx, [rdx + 1]": 4,
                "mov qword [rdi], rbx;cmp rdx, rcx;ja ;lea rcx, [rax + 1];mov qword [rdi + 8], rcx": 7,
                "lea rcx, [rax + 1];mov qword [rdi + 8], rcx;mov byte [rbx + rax], ;mov rbp, qword [var_70h];add rsp, ": 4,
                "mov qword [rsp], rsi;mov qword [var_8h], rbx;mov qword [var_10h], rax;mov qword [var_18h], rcx;mov qword [var_20h], rdx": 6,
                "call fcn.004580f0;mov rax, rbx;mov rbx, qword [var_68h];jmp ;mov qword [var_60h], rcx": 3,
                "mov rdi, qword [arg_80h];mov rcx, qword [rdi + 8];lea rdx, [rcx + 5];mov rbx, qword [rdi + ];mov rsi, qword [rdi]": 2,
                "mov r8d, ;mov dword [rsi + rcx], r8d;mov r8d, ;mov byte [rsi + rcx + 4], r8b;mov qword [rdi + 8], rdx": 2,
                "call fcn.00440d10;mov rbx, qword [var_38h];mov rsi, qword [var_28h];mov rcx, qword [var_50h];mov rdx, qword [var_58h]": 2,
                "cmp rdx, rsi;ja ;mov r8d, ;mov word [rbx + rcx], r8w;mov qword [rdi + 8], rdx": 3,
                "mov rax, qword [rdi + 8];lea rcx, [rax + 1];mov rdx, qword [rdi];mov rbx, qword [rdi + ];cmp rcx, rbx": 2,
                "mov rcx, qword [rdi + ];mov rdx, qword [rdi + ];test rdx, rdx;je ;mov qword [var_80h], rdx": 2,
                "mov qword [var_40h], rax;mov rcx, qword [var_8h];mov rdx, qword [arg_a0h];mov rbx, qword [rdx + 8];mov qword [var_60h], rbx": 2,
                "ja ;mov qword [var_50h], rdi;mov qword [var_78h], r8;lea rdx, [r8 + rbx];mov qword [rsp], rdx": 3,
                "mov qword [rdi + ], rcx;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "mov rax, qword [var_28h];mov rcx, qword [var_30h];mov rdx, qword [var_38h];mov rdi, qword [arg_a0h];mov qword [rdi + ], rdx": 2,
                "mov rbx, rax;mov rax, qword [var_78h];call fcn.004580f0;mov rax, rbx;mov rbx, qword [var_78h]": 1,
                "mov dword [rbx + rcx], r8d;mov r8d, ;mov byte [rbx + rcx + 4], r8b;mov qword [rdi + 8], rdx;mov qword [rdi + ], rsi": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], rcx;call fcn.00459210;mov rax, qword [var_58h];mov rdi, qword [arg_a0h]": 1,
                "jg ;cmp eax, ;jg ;cmp eax, ;je ": 5,
                "add rax, ;mov qword [rsp], rax;mov rax, qword [arg_48h];mov qword [var_8h], rax;mov qword [var_10h], ": 12,
                "mov qword [var_8h], rax;mov qword [var_10h], ;movzx eax, byte [arg_50h];mov byte [var_18h], al;lea rax, []": 9,
                "jmp ;cmp eax, ;je ;cmp eax, ;jne ": 8,
                "add rax, ;mov qword [rsp], rax;mov rax, qword [arg_48h];mov qword [var_8h], rax;mov qword [var_10h], 8": 3,
                "mov qword [var_28h], ;call fcn.004d3c60;jmp ;cmp eax, ;jne ": 3,
                "call fcn.004d3c60;jmp ;call fcn.00456090;jmp fcn.004d7090;int3": 3,
                "cmp eax, ;jne ;mov rax, qword [arg_38h];test byte [rax], al;add rax, ": 2,
                "lea rbp, [var_58h];mov eax, dword [arg_88h];cmp eax, ;jg ;lea ecx, [rax - ]": 2,
                "movsd xmm0, qword [arg_70h];movsd qword [var_8h], xmm0;mov rdx, qword [arg_80h];mov rbx, rdx;shr rdx, ": 2,
                "mov dword [var_18h], ecx;call fcn.004d73b0;mov rdi, qword [arg_68h];mov rax, qword [rdi + 8];lea rcx, [rax + 2]": 2,
                "jne ;mov qword [rdi], rdx;movzx eax, byte [var_47h];mov byte [rdi + ], al;mov rbp, qword [var_58h]": 2,
                "mov byte [rdi + ], al;mov rbp, qword [var_58h];add rsp, ;ret;mov rax, rdx": 2,
                "mov qword [var_18h], rbx;mov qword [var_20h], rcx;call fcn.00440d10;mov rbx, qword [var_38h];mov rdx, qword [var_28h]": 2,
                "jmp ;call fcn.004580f0;jmp ;cmp eax, ;je ": 2,
                "call fcn.004580f0;jmp ;cmp eax, ;je ;mov rcx, qword [arg_68h]": 2,
                "lea ecx, [rax - ];cmp ecx, 2;jbe ;cmp eax, ;je ": 2,
                "je ;cmp eax, ;je ;mov rcx, qword [arg_50h];mov qword [rsp], rcx": 3,
                "mov qword [var_10h], rax;call fcn.004d4a00;jmp ;mov rax, qword [arg_50h];test byte [rax], al": 2,
                "mov rax, qword [arg_60h];mov qword [var_10h], rax;mov qword [var_18h], 0;xorps xmm0, xmm0;movups xmmword [var_20h], xmm0": 4,
                "jne ;mov rax, qword [arg_50h];cmp byte [rax + ], 0;je ;add rax, ": 2,
                "mov qword [var_38h], ;call fcn.004d4460;jmp ;mov rax, qword [arg_50h];test byte [rax], al": 2,
                "call fcn.004d4460;jmp ;mov rax, qword [arg_50h];test byte [rax], al;add rax, ": 2,
                "mov qword [var_a8h], rbp;lea rbp, [var_a8h];mov eax, dword [arg_d8h];cmp eax, ;jg ": 2,
                "mov rdi, qword [rax];cmp rbx, rsi;ja ;mov qword [var_58h], rsi;mov qword [var_90h], rdi": 2,
                "mov qword [var_58h], rsi;mov qword [var_90h], rdi;lea rax, [rdi + rcx];mov qword [rsp], rax;mov rax, qword [arg_e0h]": 2,
                "mov qword [var_8h], rdx;mov byte [var_10h], 1;call fcn.004d6ff0;mov rax, qword [var_50h];inc rax": 2,
                "call fcn.004580f0;mov rax, rsi;jmp ;mov byte [var_47h], dl;mov qword [var_68h], r8": 2,
                "mov rax, rsi;jmp ;mov byte [var_47h], dl;mov qword [var_68h], r8;mov qword [var_60h], rsi": 2,
                "mov rcx, qword [var_30h];mov rdx, qword [var_38h];mov rdi, qword [arg_b8h];mov qword [rdi + ], rdx;mov rcx, qword gs:[]": 1,
                "mov qword [rdi + ], rdx;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "jne ;mov qword [rdi], rax;mov rbx, qword [arg_c0h];mov rdx, rax;mov rax, rcx": 1,
                "mov rbx, qword [arg_c0h];mov rdx, rax;mov rax, rcx;jmp ;call fcn.004580f0": 1,
                "lea rsi, [];mov qword [rsp], rsi;mov qword [var_8h], rdx;mov qword [var_10h], rax;mov qword [var_18h], rcx": 2,
                "mov rdx, qword [arg_e8h];jmp ;mov rcx, qword [rax + 8];lea rdx, [rcx + 1];mov rbx, qword [rax]": 1,
                "jmp ;mov rcx, qword [rax + 8];lea rdx, [rcx + 1];mov rbx, qword [rax];mov rsi, qword [rax + ]": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rsi;mov qword [var_10h], ;mov byte [var_18h], 0;lea rcx, []": 1,
                "cmp rdx, 1;ja ;mov rax, qword [arg_90h];mov qword [rsp], rax;mov rdx, qword [arg_98h]": 1,
                "add rsp, ;ret;cmp ecx, ;je ;cmp ecx, ": 1,
                "mov byte [var_10h], dl;call fcn.004d6ff0;jmp ;cmp ecx, ;jne ": 1,
                "cmp rsi, rdi;ja ;mov qword [var_50h], rdi;mov qword [var_70h], r8;lea rdx, [r8 + rbx]": 1,
                "lea rdx, [rbx + rdx];lea rdx, [rdx + 5];cmp rdx, rcx;ja ;mov ebx, ": 1,
                "mov qword [var_60h], rdx;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r8;mov qword [var_10h], rsi": 1,
                "mov qword [var_10h], rsi;mov qword [var_18h], rcx;mov qword [var_20h], rdx;call fcn.00440d10;mov rcx, qword [var_38h]": 1,
                "call fcn.00440d10;mov rcx, qword [var_38h];mov r8, qword [var_28h];mov rax, qword [var_58h];mov rdx, qword [var_60h]": 1,
                "mov rcx, qword [var_38h];mov r8, qword [var_28h];mov rax, qword [var_58h];mov rdx, qword [var_60h];mov rdi, qword [arg_88h]": 1,
                "jmp ;mov qword [rsp], rdi;mov qword [var_8h], r9;mov byte [var_10h], 1;call fcn.004d6ff0": 1,
                "mov rcx, qword [var_38h];mov rax, qword [var_58h];mov rdx, qword [var_48h];mov rbx, qword [var_60h];mov rsi, qword [var_50h]": 1,
                "mov r8, qword [var_28h];mov rax, qword [var_48h];mov rcx, qword [var_68h];mov rbx, qword [var_60h];jmp ": 1,
                "mov rdx, qword [rax + ];lea rbx, [];mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], rdx": 1,
                "mov qword [var_10h], rdx;call fcn.0040b1c0;mov rax, qword [var_20h];mov rcx, qword [var_18h];cmp byte [var_28h], 0": 2,
                "call fcn.0042f500;mov rbp, qword [var_90h];add rsp, ;ret;lea rax, []": 1,
                "mov ecx, dword [arg_a8h];mov dword [var_28h], ecx;lea rdx, [];mov qword [var_30h], rdx;mov qword [var_38h], 6": 2,
                "je ;jmp ;cmp ecx, ;je ;cmp ecx, ": 4,
                "mov qword [var_8h], rbx;mov qword [var_10h], rax;mov qword [var_18h], rcx;mov qword [var_20h], rdx;mov ecx, dword [arg_a8h]": 1,
                "lea rcx, [];mov qword [var_30h], rcx;mov qword [var_38h], 8;call fcn.0042ec20;test eax, eax": 1,
                "mov rax, qword [rax + ];mov rcx, qword [var_80h];mov qword [rsp], rcx;lea rcx, [];mov qword [var_8h], rcx": 1,
                "mov eax, dword [arg_b0h];mov dword [var_20h], eax;mov qword [var_28h], 0;call fcn.004d9da0;jmp ": 1,
                "mov rax, qword [arg_a8h];call fcn.004580f0;jmp ;mov rax, qword [arg_a8h];mov rcx, qword [arg_a0h]": 1,
                "jmp ;mov rax, qword [arg_a8h];mov rcx, qword [arg_a0h];jmp ;mov qword [rsp], rdx": 1,
                "mov qword [var_8h], r9;mov qword [var_10h], r8;mov byte [var_18h], 1;call fcn.00489ee0;mov rax, qword [var_28h]": 1,
                "mov rax, qword [var_28h];mov rcx, qword [var_20h];mov rdx, qword [arg_98h];mov qword [rdx + ], rcx;cmp dword [], 0": 1,
                "mov dword [var_8h], eax;call fcn.004d8e60;cmp byte [var_10h], 0;jne ;mov rdx, qword [arg_98h]": 1,
                "add rsp, ;ret;mov rdi, qword [var_50h];call fcn.004580f0;jmp ": 1,
                "jbe ;cmp rdx, ;ja ;cmp rdx, ;ja ": 1,
                "mov rcx, qword [var_20h];mov qword [var_100h], rcx;mov rdx, qword [rax + ];mov qword [rsp], rcx;call rdx": 1,
                "call rax;cmp qword [var_8h], 8;jne ;mov rax, qword [var_f8h];cmp rax, ": 1,
                "mov rdx, qword [arg_1e8h];mov qword [var_8h], rdx;mov qword [var_10h], rax;call fcn.0048a290;mov rax, qword [var_18h]": 2,
                "mov qword [var_158h], rax;xor ecx, ecx;jmp ;mov rdx, qword [var_b8h];mov rbx, qword [var_158h]": 1,
                "mov rax, rbx;mov rdx, qword [var_d8h];cmp rcx, rdx;jge ;mov qword [var_b8h], rcx": 1,
                "jge ;mov qword [var_b8h], rcx;mov rax, qword [arg_1e0h];mov qword [rsp], rax;mov rdx, qword [arg_1e8h]": 1,
                "mov rax, qword [arg_1e0h];mov qword [rsp], rax;mov rdx, qword [arg_1e8h];mov qword [var_8h], rdx;mov rbx, qword [arg_1f0h]": 1,
                "jmp ;mov rcx, rdx;mov qword [var_d8h], rcx;mov qword [var_d0h], rdx;mov qword [var_138h], rax": 1,
                "mov rcx, qword [var_8h];mov rdx, qword [arg_1d8h];mov qword [rsp], rdx;mov rdx, qword [var_138h];mov qword [var_8h], rdx": 1,
                "mov qword [var_28h], rcx;mov qword [var_30h], rax;call fcn.004d7950;mov rbp, qword [var_1c8h];add rsp, ": 1,
                "mov rbp, qword [var_1c8h];add rsp, ;ret;mov rcx, qword [arg_1e0h];mov qword [rsp], rcx": 1,
                "mov rdx, qword [var_20h];mov rcx, qword [var_28h];jmp ;mov rax, qword [arg_1d8h];cmp byte [rax + ], 0": 1,
                "jne ;mov qword [], rax;mov qword [var_18h], rcx;mov qword [var_20h], rax;mov rdi, qword [var_18h]": 1,
                "ja ;cmp r9, 3;ja ;cmp r9, 2;jne ": 1,
                "cmp r9, 4;jne ;movsx rax, word [rax];jmp ;cmp r9, 5": 1,
                "ja ;cmp r9, 7;jne ;mov rax, qword [rax];test rax, rax": 1,
                "jne ;mov eax, dword [rax];jmp ;cmp r9, ;jne ": 1,
                "mov rax, qword [rax];jmp ;mov rax, rsi;jmp ;xor r9d, r9d": 1,
                "call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.004dc5c0;int3": 1,
                "ret;mov qword [arg_60h], 0;mov qword [arg_68h], 1;mov byte [arg_70h], 0;mov rbp, qword [var_40h]": 1,
                "mov rbx, qword [arg_38h];mov byte [rbx + ], 1;sub rax, rcx;mov rsi, rax;neg rax": 2,
                "mov rcx, qword [rdi + 8];lea rdx, [rcx + 2];mov rbx, qword [rdi + ];mov rsi, qword [rdi];cmp rdx, rbx": 7,
                "mov qword [rdi + 8], rcx;mov qword [rdi + ], rdx;cmp dword [], 0;jne ;mov qword [rdi], rbx": 7,
                "jmp ;mov qword [var_48h], rdx;mov qword [var_40h], rcx;lea rax, [];mov qword [rsp], rax": 6,
                "mov qword [var_40h], rcx;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rsi;mov qword [var_10h], rcx": 6,
                "mov rdi, qword [arg_60h];jmp ;call fcn.00456090;jmp fcn.004dccc0;int3": 3,
                "jge ;mov qword [rdi + ], 0;mov qword [rdi + ], 0;inc rax;jmp ": 3,
                "mov r8, qword [arg_108h];cmp rbx, r8;jge ;cmp sil, ;jne ": 3,
                "mov byte [rdi + ], r9b;mov byte [rdi + ], 0;movzx r9d, byte [rdi + ];mov byte [rdi + ], r9b;mov byte [rdi + ], 0": 4,
                "mov rdx, r9;mov rdi, r8;mov rbx, rax;mov rax, rcx;mov rcx, rsi": 2,
                "cmp rdx, rsi;jge ;jae ;movzx ebx, byte [r8 + rdx];cmp ebx, ": 2,
                "jne ;mov rbx, qword [rdi + 8];lea r9, [rbx + 1];mov r10, qword [rdi + ];mov r11, qword [rdi]": 1,
                "cmp dword [], 0;jne ;mov qword [rdi], rax;mov rdx, qword [var_60h];mov rsi, qword [arg_f8h]": 1,
                "mov r11, rax;mov rcx, qword [var_98h];jmp ;call fcn.004580f0;jmp ": 1,
                "jmp ;call fcn.004580f0;jmp ;cmp byte [rdi + ], 0;je ": 1,
                "shl rcx, 4;mov rdx, qword [arg_100h];mov rsi, qword [rdx + rcx + 8];mov rcx, qword [rdx + rcx];mov qword [rsp], rdi": 1,
                "mov qword [rsp], rbx;mov qword [var_8h], rcx;call fcn.00462c90;mov ebx, dword [var_10h];mov rax, qword [var_18h]": 1,
                "mov rcx, qword [var_98h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "cmp qword [var_8h], ;sete al;mov byte [var_47h], al;mov rcx, qword [var_48h];test rcx, rcx": 1,
                "jle ;test al, al;je ;mov rax, qword [arg_88h];mov qword [rsp], rax": 1,
                "je ;mov rax, qword [arg_88h];mov qword [rsp], rax;mov rcx, qword [var_50h];mov qword [var_8h], rcx": 1,
                "mov qword [var_10h], rcx;mov dword [var_18h], ;call fcn.004d9370;mov rax, qword [var_48h];inc rax": 1,
                "mov rbp, qword [var_78h];add rsp, ;ret;movzx edx, byte [var_46h];test dl, dl": 1,
                "mov byte [r8 + rbx], ;jmp ;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r8": 1,
                "jne ;mov qword [rdi], rax;mov rdx, rdi;mov rbx, rcx;mov r8, rax": 2,
                "xor eax, eax;jmp ;call fcn.00456090;jmp fcn.004ddfc0;int3": 1,
                "test rdx, rdx;jle ;mov rdi, qword [arg_70h];mov r8, qword [rdi + 8];lea r9, [r8 + 1]": 2,
                "ja ;lea rdx, [rcx + 1];mov qword [rax + 8], rdx;mov byte [rsi + rcx], ;mov rbp, qword [var_60h]": 2,
                "jmp fcn.004de1b0;int3;int3;int3;mov rcx, qword gs:[]": 2,
                "jne ;call fcn.0042ebd0;ud2;mov byte [], 1;call fcn.0047be50": 7,
                "call fcn.004d2370;call fcn.00491260;call fcn.00461db0;call fcn.00470f90;call fcn.004de400": 3,
                "call fcn.004de400;mov byte [], 2;mov rbp, qword [rsp];add rsp, 8;ret": 3,
                "ret;call fcn.00456090;jmp fcn.004de4e0;int3;int3": 3,
                "lea rbp, [var_40h];mov rax, qword [arg_50h];mov rcx, qword [rax + ];mov qword [var_28h], rcx;mov rdx, qword [arg_60h]": 3,
                "mov r8, qword [rax + ];test rcx, rcx;jge ;add rcx, rbx;test rdx, rdx": 3,
                "jge ;add rcx, rbx;test rdx, rdx;jl ;cmp rdi, rdx": 3,
                "neg r10;sar r10, ;and rcx, r10;add rcx, rsi;cmp rcx, r8": 3,
                "and rcx, r10;add rcx, rsi;cmp rcx, r8;jne ;lea rcx, [rdi + rdx]": 3,
                "jne ;lea rcx, [rdi + rdx];xor edx, edx;mov qword [var_18h], rdx;jmp ": 3,
                "test r9, r9;jl ;cmp rcx, r9;ja ;cmp r9, rbx": 3,
                "mov qword [var_38h], r11;mov qword [var_30h], r9;mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], r9": 2,
                "mov qword [rsp], r8;mov qword [var_8h], rcx;mov qword [var_10h], rdx;call fcn.00459210;mov rax, qword [arg_50h]": 2,
                "mov rdx, rcx;mov rcx, rdi;jmp ;call fcn.0042ea20;ud2": 2,
                "lea rbp, [var_a38h];mov qword [var_1e0h], 0;lea rdi, [var_1e8h];mov ecx, ;xor eax, eax": 2,
                "call fcn.00458bae;mov rbp, qword [rbp];mov qword [var_7b0h], 0;lea rdi, [var_7b8h];lea rdi, [rdi - ]": 2,
                "mov qword [var_10h], ;call fcn.00440c00;mov rdx, qword [var_18h];mov qword [var_708h], 0;lea rdi, [var_710h]": 2,
                "mov qword [var_708h], rdx;mov qword [var_710h], ;mov qword [var_718h], ;lea rdx, [];mov qword [rsp], rdx": 2,
                "mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458bae;mov rbp, qword [rbp];mov qword [var_660h], 0": 2,
                "call fcn.00458bae;mov rbp, qword [rbp];mov qword [var_660h], 0;lea rdi, [var_668h];lea rdi, [rdi - ]": 2,
                "mov qword [var_670h], ;lea rdi, [var_858h];lea rdi, [rdi - ];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 2,
                "lea rbp, [rsp - ];call fcn.00458b4f;mov rbp, qword [rbp];lea rdx, [var_1e0h];mov qword [var_9c8h], rdx": 2,
                "call fcn.00458b4f;mov rbp, qword [rbp];lea rdx, [var_1e0h];mov qword [var_9c8h], rdx;mov rcx, qword gs:[]": 1,
                "mov rbp, qword [rbp];lea rdx, [var_1e0h];mov qword [var_9c8h], rdx;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [var_a10h], rdx;lea rdx, [var_708h];mov qword [var_a20h], rdx;lea rdx, [var_660h];mov qword [var_a18h], rdx": 1,
                "mov qword [var_10h], ;call fcn.00440c00;mov rax, qword [var_18h];mov qword [var_658h], rax;lea rcx, []": 1,
                "mov rdi, qword [var_8h];mov qword [rdi + 8], ;mov qword [rdi + ], ;cmp dword [], 0;jne ": 5,
                "cmp dword [], 0;jne ;mov rax, qword [var_658h];mov qword [rdi], rax;mov qword [], rdi": 1,
                "mov qword [rdi + ], ;cmp dword [], 0;jne ;mov rax, qword [var_20h];mov qword [rdi], rax": 4,
                "mov rax, qword [rdi];xor ecx, ecx;jmp ;shl r9, 2;mov word [rax + r9], dx": 2,
                "mov word [rax + r9], dx;mov word [rax + r9 + 2], bx;lea ecx, [r10 + 1];cmp cx, ;jae ": 2,
                "lea edx, [rcx + ];mov ebx, 8;lea esi, [rbx - ];neg esi;cmp sil, ": 2,
                "mov rdx, rcx;shl rcx, 2;mov rbx, rdx;shl edx, ;shr dx, 8": 2,
                "ret;mov rax, qword [var_20h];call fcn.004580f0;jmp ;call fcn.00456090": 2,
                "call fcn.00456090;jmp fcn.004deeb0;int3;int3;int3": 2,
                "jmp ;inc eax;cmp eax, ebx;jg ;cmp rdx, 1": 3,
                "movsxd r8, eax;mov r9d, dword [rsi + ];mov r10d, edi;add edi, dword [rsi + 4];cmp r8, ": 3,
                "movsxd rdx, edx;test rdx, rdx;jl ;cmp rdx, ;ja ": 2,
                "mov ebx, 1;jmp ;mov dword [rcx + rbx*4 + ], esi;inc rbx;test edi, edi": 2,
                "mov ebx, r8d;lea r8d, [rbx - 1];movsxd r9, r8d;cmp r9, ;jae ": 2,
                "jae ;mov dword [var_1ch], r12d;mov qword [var_30h], r9;mov qword [var_28h], r11;mov dword [var_20h], ebx": 1,
                "jmp ;mov ebx, eax;jmp ;call fcn.0042e8e0;ud2": 1,
                "test rax, rax;je ;test r8d, r8d;je ;movsxd r8, r8d": 1,
                "lea r8, [r10 + 1];lea esi, [r13 + 1];mov rcx, rdi;mov rdi, r8;cmp rdi, rax": 1,
                "lea esi, [r13 + 1];mov rcx, rdi;mov rdi, r8;cmp rdi, rax;jge ": 1,
                "mov rdi, r8;cmp rdi, rax;jge ;lea r8d, [rdx - ];neg r8d": 1,
                "cmp rdi, rax;jge ;lea r8d, [rdx - ];neg r8d;cmp r8b, ": 1,
                "neg r8d;cmp r8b, ;sbb r9d, r9d;mov r10, rdi;shl rdi, 3": 1,
                "mov rdi, rcx;mov ecx, r8d;mov r13d, esi;shl esi, cl;and esi, r9d": 1,
                "movzx esi, byte [rsi + r9];movzx r8d, r8b;movzx r8d, byte [r8 + r9];shl r8d, 8;or esi, r8d": 1,
                "jl ;mov rax, rdx;mov rcx, qword [arg_50h];mov rdx, qword [arg_48h];jmp ": 1,
                "jbe ;sub rsp, ;mov qword [var_58h], rbp;lea rbp, [var_58h];mov rcx, qword [arg_68h]": 5,
                "jge ;mov r10d, dword [r8 + rdi*4];test r10d, r10d;je ;cmp r9, rsi": 2,
                "lea r9, [r11 + 1];jmp ;cmp r9, rsi;jae ;mov r10, r9": 2,
                "mov rsi, qword [rcx];cmp qword [rcx + 8], rdx;ja ;jmp ;mov rbp, qword [var_58h]": 2,
                "mov qword [var_40h], r9;mov qword [var_48h], rdx;mov qword [rcx + ], r9;mov qword [rcx + ], rdx;lea rdi, [rcx + ]": 2,
                "mov dword [var_20h], esi;call fcn.004defb0;mov rax, qword [var_30h];mov rcx, qword [var_28h];mov rdx, qword [var_38h]": 2,
                "call fcn.004df4b0;mov rbp, qword [var_58h];add rsp, ;ret;call fcn.004580f0": 2,
                "jne ;mov qword [rcx + ], rax;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.004df680;int3": 1,
                "jmp fcn.004df680;int3;int3;int3;int3": 1,
                "lea rbp, [rsp];mov rax, qword [rsp + ];mov rcx, qword [rsp + ];cmp rax, rcx;jae ": 3,
                "mov rax, qword [rsp + ];mov rcx, qword [rsp + ];cmp rax, rcx;jae ;mov rdx, qword [rsp + ]": 4,
                "shl rax, 3;movzx edi, word [rdx + rax];mov r8, qword [rsp + ];cmp r8, rcx;jae ": 1,
                "mov dword [rdx + r9*8 + 4], ebx;mov rbp, qword [rsp];add rsp, 8;ret;call fcn.0042e8e0": 1,
                "mov rdx, qword [arg_158h];cmp qword [rdx], 0;je ;cmp dword [], 0;jne ": 1,
                "mov qword [rdx], 0;lea rdi, [rdx + 8];mov ecx, ;xor eax, eax;rep stosq qword [rdi], rax": 1,
                "mov rbp, qword [rbp];mov rax, qword [arg_160h];mov rbx, qword [arg_168h];xor ecx, ecx;xor esi, esi": 1,
                "cmp r8, rdi;jl ;mov r9, rdi;mov rdi, r8;mov r8, r9": 1,
                "test rsi, rsi;je ;cmp rsi, ;jae ;mov rdi, qword [rsp + rsi*8 + ]": 1,
                "cmp rsi, ;jae ;mov rdi, qword [rsp + rsi*8 + ];mov r8, rsi;shl rsi, 3": 1,
                "mov rdi, qword [rsp + rsi*8 + ];mov r8, rsi;shl rsi, 3;lea r9, [rdi + 1];mov qword [rsp + rsi + ], r9": 1,
                "movzx edi, byte [r12 + rdi];movzx r11d, r11b;movzx r11d, byte [r12 + r11];shl r11d, 8;or edi, r11d": 1,
                "movzx r11d, byte [r12 + r11];shl r11d, 8;or edi, r11d;movzx edi, di;not r9": 1,
                "jb ;jmp ;mov rcx, r10;jmp ;mov r9, rdi": 1,
                "cmp r9, rdi;jge ;jb ;jmp ;mov byte [arg_178h], 1": 1,
                "ret;add rcx, ;cmp rcx, ;sbb rax, rax;mov ebx, 1": 1,
                "mov qword [rsp], rsi;sar rbx, 1;mov qword [var_40h], rbx;lea rsi, [rbx - ];neg rsi": 1,
                "movzx edx, dx;lea rdi, [];movzx edx, byte [rdi + rdx];movzx r8d, sil;movzx r8d, byte [rdi + r8]": 1,
                "mov qword [var_30h], r8;mov qword [var_20h], rsi;shl rsi, 4;or rsi, ;mov dword [rbx + rdx*4 + 8], esi": 1,
                "ret;mov r8, qword [rax + ];test byte [r8], al;mov r9d, dword [rax + ];cmp rdi, ": 1,
                "test byte [r8], al;mov r9d, dword [rax + ];cmp rdi, ;jae ;lea r10, []": 1,
                "jae ;lea r10, [];mov r11, qword [r10 + rdi*8];cmp r11, ;jae ": 1,
                "mov qword [var_50h], rdi;jmp ;mov qword [rdi + r9*8], 0;inc rsi;cmp rsi, ": 1,
                "jb ;jmp ;mov rcx, qword [rax + ];test byte [rcx], al;lea rdx, [rax + ]": 1,
                "mov qword [var_68h], rbx;mov qword [var_30h], rsi;mov qword [var_40h], rcx;jmp ;mov rax, qword [var_60h]": 1,
                "mov r8d, 1;shl r8d, cl;and r8d, edi;lea edi, [r8 - 1];and edi, r9d": 1,
                "lea rdi, [rax + rsi];mov r8, qword [var_48h];cmp rdi, r8;jg ;xor ecx, ecx": 1,
                "mov qword [arg_98h], rax;mov rbp, qword [var_78h];add rsp, ;ret;mov rax, qword [arg_88h]": 1,
                "ret;mov rax, qword [arg_88h];mov rax, qword [rax + ];mov qword [rsp], rax;call fcn.0040abe0": 1,
                "cmp rcx, ;jne ;mov rax, qword [var_60h];mov rdx, qword [arg_88h];mov ecx, 3": 1,
                "jmp ;cmp rcx, ;jne ;mov rax, qword [var_60h];mov rdx, qword [arg_88h]": 1,
                "je ;cmp rdx, 1;jne ;mov qword [arg_88h], rcx;test byte [rcx], al": 1,
                "mov byte [rdx + rbx], al;mov rdx, qword [rcx + ];inc rdx;mov qword [rcx + ], rdx;mov rbx, qword [rcx + ]": 1,
                "inc rdx;mov qword [rcx + ], rdx;mov rbx, qword [rcx + ];mov rsi, qword [rcx + ];cmp qword [rcx + ], rdx": 1,
                "cmp qword [rcx + ], rdx;jne ;mov r8, qword [rcx + ];cmp r8, rdx;ja ": 1,
                "mov qword [rcx + ], rdx;mov r9, rdx;sub rdx, r8;sub rbx, r8;mov r10, rbx": 1,
                "sub rdx, r8;sub rbx, r8;mov r10, rbx;neg rbx;sar rbx, ": 1,
                "sar rbx, ;and r8, rbx;lea rax, [rsi + r8];cmp qword [rcx + ], r9;jne ": 1,
                "movups xmmword [rcx + ], xmm0;mov byte [rcx + ], 1;mov qword [rcx + ], rdx;mov qword [rcx + ], r10;cmp dword [], 0": 1,
                "jmp ;je ;cmp rax, ;jge ;lea rdx, [rax - ]": 1,
                "jmp ;mov rax, qword [rbx + ];mov qword [rsp], rax;call fcn.0040abe0;mov rax, qword [var_8h]": 1,
                "mov rcx, qword [var_60h];mov rdx, qword [var_68h];mov rbx, qword [var_70h];mov rsi, qword [var_40h];jmp ": 1,
                "mov rcx, qword [var_18h];mov qword [rsp], rcx;mov qword [var_8h], rax;mov rax, qword [arg_68h];lea rcx, [rax + ]": 1,
                "call fcn.00461fe0;mov rax, qword [var_40h];mov rcx, qword [var_38h];mov rdx, qword [arg_68h];mov rbx, qword [rdx + ]": 1,
                "jne ;mov qword [rdx + ], rax;mov rbp, qword [var_58h];add rsp, ;ret": 2,
                "mov rdx, qword [arg_68h];jmp ;mov rax, qword [var_50h];mov rcx, qword [var_48h];mov rdx, qword [arg_68h]": 1,
                "mov rcx, qword [var_48h];mov rdx, qword [arg_68h];jmp ;movzx ecx, word [rdx + ];mov esi, ecx": 1,
                "cmp rbx, rsi;ja ;cmp rsi, r8;ja ;mov qword [rdx + ], rsi": 1,
                "movups xmmword [rdx + ], xmm0;mov byte [rdx + ], 1;mov qword [rdx + ], rcx;mov qword [rdx + ], rsi;cmp dword [], 0": 1,
                "lea rdi, [rdx + ];call fcn.004580f0;jmp ;call fcn.004580f0;jmp ": 1,
                "mov qword [rsp], rbx;call fcn.0040abe0;mov rax, qword [var_8h];lea rcx, [];mov rdx, qword [arg_68h]": 1,
                "lea rbp, [var_70h];mov rax, qword [arg_80h];test byte [rax], al;mov rcx, qword [rax + ];mov rdx, qword [rax + ]": 2,
                "mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rbx, qword [rax + ];mov rsi, qword [rax + ];cmp rsi, rcx": 2,
                "mov qword [var_60h], rax;mov qword [var_48h], rcx;mov qword [rsp], rcx;mov qword [var_8h], rax;mov rdx, qword []": 1,
                "cmp byte [var_18h], 0;je ;mov rax, qword [];mov rcx, qword [];mov rbx, qword [arg_80h]": 1,
                "cmp rdx, rcx;ja ;mov qword [rbx + ], rdx;mov r9, rdx;sub rdx, rsi": 1,
                "mov rbp, qword [var_70h];add rsp, ;ret;lea rdi, [rbx + ];lea rax, []": 1,
                "ud2;call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.004e1b90": 1,
                "mov qword [var_48h], rbp;lea rbp, [var_48h];mov rax, qword [arg_60h];mov rdx, qword [rax];mov rbx, qword [arg_58h]": 2,
                "call rax;movzx eax, byte [var_8h];mov rcx, qword [var_18h];mov rdx, qword [var_10h];test rdx, rdx": 2,
                "mov qword [var_28h], rdx;mov qword [rsp], rdx;mov qword [var_8h], rcx;mov rax, qword [];mov qword [var_10h], rax": 2,
                "mov edx, dword [r9 + rdx*4];mov edi, edx;and edx, ;cmp rdx, rsi;jbe ": 2,
                "test rdx, rdx;jne ;mov dword [rbx + ], r8d;mov qword [rbx + ], rsi;mov rax, qword [rbx + ]": 2,
                "mov dword [rbx + ], r8d;sub rsi, rcx;mov qword [rbx + ], rsi;shr edi, 4;mov qword [arg_68h], rdi": 2,
                "mov qword [rbx + ], rsi;shr edi, 4;mov qword [arg_68h], rdi;xorps xmm0, xmm0;movups xmmword [arg_70h], xmm0": 2,
                "mov rbp, qword [var_10h];add rsp, ;ret;call fcn.00456090;jmp fcn.004e22d0": 3,
                "jmp fcn.004e22d0;int3;int3;int3;int3": 3,
                "mov rsi, qword [rcx + ];cmp rsi, ;je ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "lea rsi, [];mov rdx, rcx;mov ecx, ;rep movsq qword [rdi], qword ptr [rsi];mov qword [rsp + ], rdx": 2,
                "test byte [rdi], al;mov rax, qword [rdi + ];mov qword [rsp + ], rax;mov rax, qword [rdi + ];mov qword [rsp + ], rax": 2,
                "mov qword [rsp + ], rax;mov rax, qword [rdi + ];mov qword [rsp + ], rax;movups xmm0, xmmword [rdi + ];movups xmmword [rsp + ], xmm0": 2,
                "cmovl rbx, rdx;cmp rcx, rsi;jne ;mov qword [rax + ], rbx;cmp qword [rax + ], rbx": 1,
                "call fcn.00459210;mov rax, qword [rsp + ];mov rbx, qword [rsp + ];jmp ;mov rsi, qword [rsp + ]": 1,
                "call fcn.00440c00;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov qword [rcx + ], ;mov qword [rcx + ], ": 1,
                "mov qword [rsp + 8], rdi;lea rax, [rsp + ];mov qword [rsp + ], rax;call fcn.00414a10;jmp ": 1,
                "jne ;cmp qword [rcx + 8], ;jl ;mov rax, rcx;lea rcx, []": 1,
                "mov qword [rsp + ], rax;lea rcx, [];mov qword [rsp], rcx;mov qword [rsp + 8], ;mov qword [rsp + ], ": 1,
                "lea rcx, [];mov qword [rsp], rcx;mov qword [rsp + 8], ;mov qword [rsp + ], ;call fcn.00440c00": 1,
                "lea rax, [];mov qword [rsp], rax;mov rax, qword [rsp + ];mov qword [rsp + 8], rax;lea rcx, [rsp + ]": 1,
                "call fcn.004e22d0;lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h]": 1,
                "mov qword [rcx + ], rax;lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h]": 5,
                "mov rdx, qword [rcx + ];mov rbx, qword [rcx + ];lea rsi, [rcx + ];mov qword [var_50h], rsi;cmp dword [], 0": 1,
                "mov qword [rcx + ], rbx;mov qword [rcx + ], rdx;cmp rdx, ;jl ;cmp qword [rcx + ], ": 1,
                "mov qword [rcx + ], ;mov rax, qword [rcx + ];test rax, rax;jne ;mov qword [rcx + ], 0": 1,
                "mov qword [var_8h], ;mov qword [var_10h], ;call fcn.00440c00;mov rax, qword [var_18h];mov rcx, qword [var_58h]": 1,
                "jmp ;mov qword [var_48h], rax;mov qword [var_38h], rdx;mov qword [var_30h], rbx;lea rax, []": 1,
                "lea rax, [rcx + ];mov qword [var_8h], rax;call fcn.00414f80;mov rdi, qword [var_50h];mov rax, qword [var_48h]": 1,
                "cmp qword [rax + 8], ;jl ;lea rcx, [];jmp ;lea rax, []": 1,
                "mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458bc5;mov rbp, qword [rbp];mov qword [var_60h], rax": 1,
                "mov qword [var_60h], rax;mov qword [var_68h], ;mov qword [var_70h], ;mov rax, qword [arg_c8h];mov qword [var_78h], rax": 1,
                "cmp rax, ;jl ;mov eax, ;jmp ;mov rcx, rax": 2,
                "jmp ;mov rcx, rax;shl rax, 3;mov qword [rsp + rax + ], 9;lea rax, [rcx + 1]": 1,
                "mov rcx, rax;shl rax, 3;mov qword [rsp + rax + ], 7;lea rax, [rcx + 1];cmp rax, ": 1,
                "jmp fcn.004e2e00;int3;int3;int3;int3": 1,
                "movzx edi, word [rax + rdx];mov r8, qword [rsp + ];cmp r8, rcx;jae ;mov ecx, dword [rax + r8*8 + 4]": 2,
                "mov ecx, dword [rax + r8*8 + 4];mov r9, r8;shl r8, 3;movzx r10d, word [rax + r8];mov word [rax + rdx], r10w": 2,
                "mov byte [], 1;call fcn.00462900;call fcn.00470f90;call fcn.00491260;call fcn.004e34b0": 2,
                "je ;cmp byte [], 0;je ;cmp byte [], 0;je ": 3,
                "call fcn.004e3b80;mov rax, qword [rsp + 8];cmp dword [], 0;jne ;mov qword [], rax": 6,
                "lea rax, [];mov qword [], rax;mov rbp, qword [rsp + ];add rsp, ;ret": 3,
                "mov qword [var_18h], rax;mov rax, qword [rdx];call rax;mov eax, dword [var_20h];mov dword [arg_68h], eax": 8,
                "mov dword [arg_68h], eax;mov rbp, qword [var_30h];add rsp, ;ret;call fcn.00456090": 4,
                "mov qword [var_18h], rax;mov rax, qword [rdx];call rax;mov eax, dword [var_20h];mov dword [arg_50h], eax": 4,
                "je ;mov rax, qword [rsp + ];cmp rax, ;jl ;mov rcx, rax": 4,
                "jl ;mov rcx, rax;and rax, ;sub rcx, rax;test rcx, rcx": 3,
                "mov rdx, qword [rsp + ];mov qword [rsp + 8], rdx;mov qword [rsp + ], rcx;mov qword [rsp + ], rax;call fcn.004e3ee0": 3,
                "mov eax, dword [rsp + ];mov rcx, qword [rsp + ];mov rdx, qword [rsp + ];cmp rcx, rdx;ja ": 3,
                "mov qword [rsp + ], rdx;mov qword [rsp + ], rsi;call fcn.004e3c30;mov eax, dword [rsp + ];mov dword [rsp + ], eax": 2,
                "cmp rbx, 8;jge ;mov esi, ecx;and ecx, 1;cmp ecx, 1": 4,
                "int3;int3;int3;mov eax, dword [arg_8h];not eax": 4,
                "mov dword [arg_30h], eax;ret;int3;int3;int3": 4,
                "mov r8d, dword [rdx + r8*4 + ];xor ecx, r8d;movzx r8d, byte [rsi + 4];mov r8d, dword [rdx + r8*4 + ];xor ecx, r8d": 5,
                "mov r8d, dword [rdx + r8*4 + ];xor ecx, r8d;mov r8d, edi;shr edi, ;mov edi, dword [rdx + rdi*4 + ]": 5,
                "shr edi, 8;movzx edi, dil;mov edi, dword [rdx + rdi*4 + ];xor ecx, edi;movzx edi, r8b": 5,
                "mov rdx, qword [arg_48h];mov rbx, qword [arg_60h];mov rsi, qword [arg_50h];mov ecx, dword [arg_40h];jmp ": 5,
                "mov rsi, qword [arg_50h];mov ecx, dword [arg_40h];jmp ;call fcn.00456090;jmp fcn.004e3c30": 5,
                "call fcn.00456090;jmp fcn.004e3c30;int3;mov rcx, qword gs:[];mov rcx, qword [rcx]": 5,
                "lea rbp, [rsp + ];mov eax, dword [rsp + ];mov dword [rsp], eax;mov rax, qword [];mov qword [rsp + 8], rax": 5,
                "movdqu xmm3, xmmword [rsi + ];movdqu xmm4, xmmword [rsi + ];pxor xmm1, xmm0;add rsi, ;mov rcx, qword gs:[]": 1,
                "movdqu xmm14, xmmword [rsi + ];pclmulqdq xmm5, xmm0, ;pclmulqdq xmm6, xmm0, ;pclmulqdq xmm7, xmm0, ;pclmulqdq xmm8, xmm0, ": 5,
                "pclmulqdq xmm8, xmm0, ;pxor xmm1, xmm5;pxor xmm2, xmm6;pxor xmm3, xmm7;pxor xmm4, xmm8": 5,
                "pxor xmm4, xmm8;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "movdqa xmm0, xmmword [];movdqa xmm5, xmm1;pclmulqdq xmm1, xmm0, 0;pclmulqdq xmm5, xmm0, ;pxor xmm1, xmm5": 4,
                "pclmulqdq xmm1, xmm0, 0;pclmulqdq xmm5, xmm0, ;pxor xmm1, xmm5;pxor xmm1, xmm3;movdqa xmm5, xmm1": 4,
                "movdqa xmm5, xmm1;pclmulqdq xmm1, xmm0, 0;pclmulqdq xmm5, xmm0, ;pxor xmm1, xmm5;pxor xmm1, xmm10": 4,
                "movq xmm0, qword [];psrlq xmm3, ;psrldq xmm2, 4;pand xmm1, xmm3;pclmulqdq xmm1, xmm0, 0": 3,
                "mov rax, qword [var_8h];mov qword [var_28h], rax;mov qword [rsp], rax;mov rcx, qword [arg_40h];mov qword [var_8h], rcx": 4,
                "call fcn.004e4160;mov rax, qword [var_18h];mov rcx, qword [var_20h];test rax, rax;je ": 4,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.004e40a0;int3": 4,
                "lea rax, [rsp - ];cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_3d0h], rbp": 5,
                "mov qword [var_138h], 0;lea rdi, [var_140h];xorps xmm0, xmm0;lea rdi, [rdi - ];mov qword [rsp - ], rbp": 5,
                "xorps xmm0, xmm0;lea rdi, [rdi - ];mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458b1a": 5,
                "cmp byte [var_28h], 0;je ;mov rdx, qword [arg_3e0h];mov qword [rdx + ], rax;cmp dword [], 0": 5,
                "mov rdx, qword [var_8h];mov rbx, qword [arg_3e0h];mov qword [rbx], rdx;lea rdi, [rbx + 8];lea rsi, [var_10h]": 4,
                "mov rax, qword [rbx + ];mov rcx, qword [rbx + ];mov qword [arg_3f8h], rax;mov qword [arg_400h], rcx;mov rbp, qword [var_3d0h]": 4,
                "call fcn.004580f0;jmp ;mov rcx, qword [arg_3e8h];lea rdx, [];cmp rcx, rdx": 3,
                "mov rax, qword [arg_3e8h];mov qword [var_f8h], rax;mov rax, qword [arg_3f0h];mov qword [var_100h], rax;mov qword [var_128h], ": 2,
                "int3;movzx eax, byte [rsp + ];mov rcx, qword [rsp + 8];mov byte [rcx + ], al;ret": 2,
                "mov qword [rsp], rdx;call rcx;movzx eax, byte [var_8h];mov rcx, qword [var_18h];mov rdx, qword [var_10h]": 2,
                "test rdx, rdx;jne ;cmp al, ;seta cl;movzx edx, byte [var_46h]": 2,
                "mov dword [rcx + ], eax;movzx eax, byte [var_47h];test al, al;je ;lea rax, []": 1,
                "mov qword [var_8h], 0;mov rcx, qword [var_50h];mov qword [var_10h], rcx;call fcn.00440c00;mov rax, qword [var_18h]": 1,
                "mov rcx, qword [var_50h];mov qword [var_10h], rcx;call fcn.00440c00;mov rax, qword [var_18h];mov rcx, qword [var_50h]": 1,
                "xor edi, edi;jmp ;mov dword [rax + rdi*4], r8d;inc rsi;mov rdi, r9": 1,
                "mov rdi, qword [var_48h];movzx r8d, byte [var_45h];mov rcx, rdx;mov rdx, qword [arg_78h];jmp ": 1,
                "call fcn.00445090;mov rax, qword [var_28h];mov rcx, qword [var_20h];mov qword [arg_80h], rcx;mov qword [arg_88h], rax": 1,
                "mov qword [rsp], 0;mov rcx, qword [var_60h];mov qword [var_8h], rcx;mov qword [var_10h], rax;mov qword [var_18h], ": 1,
                "mov rax, qword [var_20h];mov rcx, qword [var_28h];mov qword [arg_80h], rax;mov qword [arg_88h], rcx;xorps xmm0, xmm0": 1,
                "xorps xmm0, xmm0;movups xmmword [arg_80h], xmm0;mov qword [arg_90h], rdx;mov qword [arg_98h], rcx;mov rbp, qword [var_68h]": 1,
                "xorps xmm0, xmm0;movups xmmword [arg_80h], xmm0;mov qword [arg_90h], rax;mov qword [arg_98h], rcx;mov rbp, qword [var_68h]": 1,
                "mov qword [arg_98h], rcx;mov rbp, qword [var_68h];add rsp, ;ret;call fcn.0042ea20": 1,
                "call fcn.00456090;jmp fcn.004e45b0;int3;int3;int3": 1,
                "mov qword [var_28h], ;call fcn.00461fe0;mov rax, qword [var_40h];mov rcx, qword [var_38h];test rcx, rcx": 2,
                "mov qword [arg_f0h], rdx;mov qword [arg_f8h], rbx;movzx ecx, byte [rax + ];mov byte [arg_110h], cl;mov rcx, qword [var_a0h]": 2,
                "mov rcx, qword [arg_b8h];mov dword [rcx + ], eax;movzx eax, byte [var_4fh];test al, 4;jne ": 2,
                "mov dword [rcx + ], 0;mov rax, qword [rcx + ];mov rdx, qword [rcx + ];test rdx, rdx;je ": 1,
                "mov qword [rsp], rsi;mov qword [var_8h], rbx;mov qword [var_10h], rdx;call fcn.0040ae50;mov rax, qword [var_20h]": 1,
                "mov qword [var_8h], rbx;mov qword [var_10h], rdx;call fcn.0040ae50;mov rax, qword [var_20h];mov rcx, qword [var_18h]": 1,
                "mov rcx, qword [var_18h];mov rdx, qword [var_10h];mov rbx, qword [var_8h];test rcx, rcx;jne ": 1,
                "mov rcx, qword [rax + ];mov rdx, qword [rax + ];test rdx, rdx;jne ;mov rcx, qword [rax + ]": 1,
                "mov rdx, qword [arg_a8h];mov qword [var_8h], rdx;mov rbx, qword [arg_b0h];mov qword [var_10h], rbx;mov rsi, qword [arg_b8h]": 1,
                "ja ;mov qword [var_78h], rax;mov qword [var_88h], rdi;mov edx, dword [rbx + ];mov dword [rsp], edx": 1,
                "mov qword [var_18h], rax;mov qword [var_20h], rcx;call fcn.004e3760;mov eax, dword [var_28h];mov rcx, qword [arg_a0h]": 1,
                "mov rcx, qword [rcx + ];mov qword [arg_c0h], rax;mov qword [arg_c8h], rcx;mov qword [arg_d0h], rdx;mov rbp, qword [var_90h]": 1,
                "mov qword [var_20h], ;mov qword [var_28h], 8;call fcn.00461fe0;mov rax, qword [var_40h];mov rcx, qword [var_38h]": 1,
                "mov rcx, qword [var_78h];mov qword [arg_c0h], rcx;mov qword [arg_c8h], rdx;mov qword [arg_d0h], rax;mov rbp, qword [var_90h]": 1,
                "mov rax, qword [var_68h];mov rcx, qword [var_60h];mov rdx, qword [arg_a0h];mov qword [rdx + ], rcx;cmp dword [], 0": 1,
                "mov rcx, qword [var_60h];mov rdx, qword [arg_a0h];mov qword [rdx + ], rcx;cmp dword [], 0;jne ": 1,
                "mov rcx, qword [arg_20h];mov rdx, qword [arg_8h];xor ebx, ebx;xor esi, esi;jmp ": 3,
                "cmp rax, rbx;ja ;mov qword [var_40h], rax;mov qword [var_38h], rcx;mov qword [var_48h], rdx": 4,
                "mov rdx, qword [arg_80h];mov qword [var_8h], rdx;mov qword [var_10h], rax;mov qword [var_18h], rbx;mov qword [var_20h], rdx": 4,
                "jne ;mov qword [var_20h], rax;lea rcx, [];mov qword [rsp], rcx;mov qword [var_10h], rax": 5,
                "call fcn.00440c00;mov rax, qword [var_18h];mov qword [var_40h], rax;lea rcx, [];mov qword [rsp], rcx": 7,
                "call fcn.00440c00;mov rax, qword [var_18h];mov qword [var_38h], rax;lea rcx, [];mov qword [rsp], rcx": 5,
                "mov rax, qword [var_8h];mov rcx, qword [arg_58h];mov qword [rax], rcx;cmp dword [], 0;jne ": 5,
                "cmp dword [], 0;jne ;mov rcx, qword [var_38h];mov qword [rax + ], rcx;mov qword [rax + ], 0": 5,
                "jne ;mov rcx, qword [var_38h];mov qword [rax + ], rcx;mov qword [rax + ], 0;mov rcx, qword [rax + ]": 5,
                "mov qword [rax + ], 0;mov rcx, qword [rax + ];mov rdx, qword [arg_70h];cmp rcx, rdx;cmovg rcx, rdx": 5,
                "mov rbx, qword [rcx + ];mov rsi, qword [rcx + ];mov rdi, qword [rcx + ];mov r8, rbx;sub rbx, rdi": 4,
                "and rdi, rdx;lea rdx, [rsi + rdi];test rdi, rdi;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rdx, qword [var_40h];lea rbx, [rsi + rdx];mov rax, rdx;mov rcx, qword [arg_58h];mov rdx, qword [rcx + ]": 3,
                "mov rsi, qword [rcx + ];mov rdi, qword [rcx + ];mov qword [rsp], rdx;mov qword [var_8h], rsi;mov qword [var_10h], rbx": 3,
                "neg rdx;sar rdx, ;and rdx, rsi;add rcx, rdx;mov rdx, qword [rax + ]": 2,
                "mov qword [rcx + ], rbx;mov qword [rcx + ], 0;mov rbp, qword [var_48h];add rsp, ;ret": 2,
                "mov rdx, r10;test rcx, rcx;jle ;mov qword [rsp + ], rsi;mov qword [rsp + ], rdi": 1,
                "jle ;mov qword [rsp + ], rsi;mov qword [rsp + ], rdi;mov qword [rsp + ], rcx;mov qword [rsp + ], rdx": 1,
                "mov rax, qword [rsp + ];mov rcx, qword [rax];mov rdx, qword [rax + ];mov qword [rsp + ], rdx;mov rbx, qword [rax + 8]": 1,
                "add rax, rdx;mov qword [rsp + ], rax;sub rbx, rsi;mov qword [rsp + ], rbx;mov qword [rsp + ], r12": 1,
                "sub rcx, rax;mov rdx, qword [rsp + ];sub rdx, rax;mov rbx, rdx;neg rdx": 1,
                "je ;jmp ;mov rsi, rbx;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "ret;mov qword [arg_80h], 0;mov rbp, qword [var_28h];add rsp, ;ret": 1,
                "movdqu xmm1, xmmword [rcx + rax];pxor xmm0, xmm1;movdqu xmmword [rbx + rax], xmm0;add rax, ;cmp rdx, rax": 4,
                "add rax, ;cmp rdx, rax;jne ;ret;sub rdx, 1": 4,
                "je ;test rdx, 7;jne ;sub rdx, 8;mov rdi, qword [rsi + rdx]": 4,
                "mov rax, qword [rax + ];mov rdx, qword [rbx + ];cmp qword [rbx + ], rax;je ;xor eax, eax": 4,
                "ret;mov qword [rsp], rax;mov qword [rsp + 8], rcx;mov qword [rsp + ], rdx;call fcn.00403f90": 4,
                "jmp ;mov qword [rsp], rdx;mov qword [rsp + 8], rcx;mov qword [rsp + ], rsi;call fcn.00403f90": 4,
                "mov qword [rsp], rbx;mov qword [rsp + 8], rax;mov qword [rsp + ], rdx;mov qword [rsp + ], rcx;mov rcx, qword gs:[]": 1,
                "mov qword [rsp + 8], rax;mov qword [rsp + ], rdx;mov qword [rsp + ], rcx;mov rax, qword [rsp + ];mov qword [rsp + ], rax": 3,
                "cmp dword [], 0;jne ;mov qword [rdi], rcx;mov qword [rsp + ], rdi;mov rax, qword [rsp + ]": 2,
                "mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax;xorps xmm0, xmm0;movups xmmword [rsp + ], xmm0": 4,
                "ret;mov rax, rcx;call fcn.004580f0;jmp ;call fcn.00456090": 2,
                "mov rax, rcx;call fcn.004580f0;jmp ;call fcn.00456090;jmp ": 2,
                "int3;sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h];mov rax, qword [arg_60h]": 1,
                "bswap ecx;mov rdi, qword [arg_28h];xor ecx, dword [rdi];cmp rsi, 1;jbe ": 1,
                "movzx r15d, r11b;lea rcx, [];mov r15d, dword [rcx + r15*4];xor r10d, r15d;mov r15d, dword [var_8h]": 1,
                "movzx r15d, r15b;mov r15d, dword [rsi + r15*4];xor r15d, r10d;add r14, 4;mov rdx, qword [var_10h]": 1,
                "add r14, 4;mov rdx, qword [var_10h];mov r10d, dword [var_4h];mov rsi, rdx;mov ecx, ebx": 1,
                "mov ecx, ebx;mov edx, r10d;mov ebx, eax;mov eax, r15d;mov r10d, ecx": 1,
                "jge ;cmp r14, r8;jae ;mov r10d, dword [rdi + r14*4];mov r11d, ecx": 2,
                "shr ecx, ;movzx ecx, cl;mov ecx, dword [r12 + rcx*4];xor r10d, ecx;mov ecx, edx": 2,
                "lea r10, [r14 + 2];cmp r10, r8;jae ;mov dword [var_4h], eax;mov dword [var_8h], ecx": 1,
                "xor r10d, r11d;mov r11d, dword [var_ch];movzx eax, r11b;mov eax, dword [rsi + rax*4];xor eax, r10d": 1,
                "movzx edx, byte [rcx + r10];shl edx, ;mov ebx, r11d;shr r11d, ;movzx esi, r11b": 2,
                "movzx edx, r13b;movzx edx, byte [rdx + rcx];or edx, r9d;mov r9d, ebx;shr ebx, ": 1,
                "jbe ;bswap eax;mov rcx, qword [arg_40h];mov dword [rcx], eax;bswap edx": 1,
                "shr r15d, ;movzx r15d, r15b;mov r15d, dword [r13 + r15*4];xor r11d, r15d;mov r15d, dword [rsp]": 1,
                "add r14, 4;mov r15, qword [var_8h];mov rsi, r15;mov eax, r11d;mov r10d, ebx": 1,
                "mov ebx, dword [r15 + rbx*4];xor r10d, ebx;movzx ebx, dl;lea rsi, [];mov ebx, dword [rsi + rbx*4]": 1,
                "movzx r11d, r11b;mov r11d, dword [r13 + r11*4];xor r10d, r11d;mov r11d, ecx;shr ecx, 8": 1,
                "cmp r10, r8;jae ;mov dword [var_4h], eax;mov r10d, dword [rdi + r14*4 + 8];shr eax, ": 1,
                "movzx eax, al;mov eax, dword [r12 + rax*4];xor r10d, eax;mov eax, dword [rsp];shr eax, ": 1,
                "shr eax, ;movzx eax, al;movzx eax, byte [rax + rcx];shl eax, ;or eax, r10d": 1,
                "movzx eax, byte [rax + rcx];shl eax, ;or eax, r10d;mov r10d, ebx;shr ebx, 8": 1,
                "movzx eax, byte [rax + rcx];or eax, ebx;mov ebx, esi;shr esi, ;movzx esi, byte [rsi + rcx]": 1,
                "mov r9d, r11d;shr r11d, 8;movzx r11d, r11b;movzx r11d, byte [r11 + rcx];shl r11d, 8": 1,
                "movzx ebx, bl;movzx ebx, byte [rbx + rcx];shl ebx, ;or ebx, r10d;shr r12d, 8": 1,
                "xor edx, eax;lea rax, [r14 + 2];cmp rax, r8;jae ;mov eax, dword [rdi + r14*4 + 8]": 1,
                "lea rax, [r14 + 2];cmp rax, r8;jae ;mov eax, dword [rdi + r14*4 + 8];xor eax, esi": 1,
                "jae ;mov esi, dword [rdi + r14*4 + ];xor esi, ecx;mov rcx, qword [arg_40h];cmp rcx, ": 1,
                "bswap edx;mov dword [rcx + 4], edx;bswap eax;mov dword [rcx + 8], eax;sub rsp, 8": 1,
                "mov dword [rbx + r9*4], edx;lea rax, [r9 + 1];mov rdx, r10;mov r8, r11;cmp rax, rcx": 1,
                "mov rdx, r10;mov r8, r11;cmp rax, rcx;jge ;mov r9, rax": 1,
                "cmp rax, rcx;jge ;mov r9, rax;shl rax, 2;cmp rax, rdx": 1,
                "ja ;mov r10, rdx;sub rdx, rax;mov r11, r8;sub r8, rax": 1,
                "mov r10, rdx;sub rdx, rax;mov r11, r8;sub r8, rax;neg r8": 1,
                "jbe ;mov edx, dword [rdi + rax];cmp r9, rsi;jb ;jmp ": 1,
                "jge ;lea rdx, [rax - 1];cmp rdx, rsi;jae ;mov edx, dword [rbx + rax*4 - 4]": 1,
                "cmp rdx, rsi;jae ;mov edx, dword [rbx + rax*4 - 4];test rcx, rcx;je ": 1,
                "mov r8d, edx;cmp rcx, ;je ;cqo;idiv rcx": 1,
                "movzx r8d, byte [r10 + r8];shl r8d, ;mov r11d, r9d;shr r9d, ;movzx r9d, r9b": 1,
                "shr r10d, 8;movzx r10d, r10b;movzx r10d, byte [r10 + r9];shl r10d, 8;or r8d, r10d": 1,
                "jge ;lea r9, [r8 + rsi];lea r9, [r9 - 4];cmp r9, rdi;jae ": 1,
                "mov rcx, qword [arg_48h];mov qword [rsp], rcx;mov qword [var_8h], rax;mov rax, qword [arg_58h];mov qword [var_10h], rax": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;mov rax, qword [arg_58h];mov qword [var_10h], rax;call fcn.004e8370": 1,
                "mov qword [var_8h], rax;mov rax, qword [arg_58h];mov qword [var_10h], rax;call fcn.004e8370;mov rax, qword [var_18h]": 1,
                "mov rdx, qword [var_28h];mov rbx, qword [var_30h];mov qword [arg_60h], rax;mov qword [arg_68h], rcx;mov qword [arg_70h], rdx": 1,
                "mov qword [arg_68h], rcx;mov qword [arg_70h], rdx;mov qword [arg_78h], rbx;mov rbp, qword [var_38h];add rsp, ": 1,
                "mov rax, qword [var_8h];xorps xmm0, xmm0;movups xmmword [arg_60h], xmm0;lea rcx, [];mov qword [arg_70h], rcx": 1,
                "movups xmmword [arg_60h], xmm0;lea rcx, [];mov qword [arg_70h], rcx;mov qword [arg_78h], rax;mov rbp, qword [var_38h]": 1,
                "mov qword [rsp], r9;mov r9, qword [arg_a8h];mov qword [var_8h], r9;mov r9, qword [arg_b0h];mov qword [var_10h], r9": 2,
                "mov rax, qword [var_58h];mov qword [arg_c0h], rax;xorps xmm0, xmm0;movups xmmword [arg_c8h], xmm0;mov rbp, qword [var_90h]": 2,
                "call fcn.00414a10;mov rax, qword [var_58h];jmp ;call fcn.00456090;jmp fcn.004e7ed0": 2,
                "mov rsi, rdx;lea rdi, [rbx + ];cmp rdx, rdi;ja ;mov rdx, rbx": 3,
                "lea rax, [];mov qword [rsp + 8], rax;call fcn.0042f900;ud2;lea rax, []": 7,
                "sub rsp, ;mov qword [var_88h], rbp;lea rbp, [var_88h];cmp byte [], 0;je ": 1,
                "mov qword [var_38h], rbx;mov qword [var_8h], rbx;mov qword [var_10h], rbx;call fcn.00440c00;mov rax, qword [var_18h]": 1,
                "movups xmmword [var_78h], xmm0;mov rcx, qword [var_48h];mov qword [var_58h], rcx;mov rcx, qword [var_38h];mov qword [var_60h], rcx": 1,
                "mov rcx, qword [var_38h];mov qword [var_60h], rcx;mov qword [var_68h], rcx;mov qword [var_70h], rax;mov qword [var_78h], rcx": 1,
                "mov qword [var_78h], rcx;mov qword [var_80h], rcx;cmp dword [], 0;jne ;movups xmm1, xmmword [var_58h]": 1,
                "test rcx, rcx;jbe ;mov rcx, qword [rax];cmp qword [rax + 8], 0;jbe ": 1,
                "jmp ;cmp rcx, ;jne ;mov edx, ;jmp ": 2,
                "mov qword [rsp], rdx;mov qword [rsp + 8], rbx;mov qword [rsp + ], rax;mov qword [rsp + ], rcx;call fcn.004e8a70": 1,
                "setbe cl;test cl, cl;jne ;mov rcx, rax;mov rax, rdx": 1,
                "ud2;mov byte [], 1;call fcn.004e6170;call fcn.004e3530;call fcn.0047be50": 2,
                "call fcn.004e8920;mov byte [], 2;mov rbp, qword [rsp];add rsp, 8;ret": 2,
                "ret;call fcn.00456090;jmp fcn.004e89f0;int3;int3": 2,
                "aesdec xmm0, xmm1;add rax, ;movups xmm1, xmmword [rax];aesdec xmm0, xmm1;movups xmm1, xmmword [rax + ]": 8,
                "mov rdx, qword [arg_20h];movups xmm0, xmmword [rax];movups xmmword [rbx], xmm0;add rbx, ;pxor xmm4, xmm4": 5,
                "movups xmm2, xmmword [rax + ];movups xmmword [rbx], xmm2;add rbx, ;aeskeygenassist xmm1, xmm2, 1;call fcn.004e8e80": 5,
                "call fcn.004e8e90;aeskeygenassist xmm1, xmm2, 2;call fcn.004e8e80;aeskeygenassist xmm1, xmm0, 2;call fcn.004e8e90": 5,
                "aeskeygenassist xmm1, xmm2, 8;call fcn.004e8e40;aeskeygenassist xmm1, xmm2, ;call fcn.004e8df0;aeskeygenassist xmm1, xmm2, ": 5,
                "aeskeygenassist xmm1, xmm2, ;call fcn.004e8e40;aeskeygenassist xmm1, xmm2, ;call fcn.004e8df0;aeskeygenassist xmm1, xmm2, ": 5,
                "pxor xmm0, xmm4;shufps xmm4, xmm0, ;pxor xmm0, xmm4;pxor xmm0, xmm1;movups xmmword [rbx], xmm0": 5,
                "movups xmmword [rbx + ], xmm1;add rbx, ;ret;int3;int3": 5,
                "pxor xmm2, xmm4;pxor xmm2, xmm1;movups xmmword [rbx], xmm2;add rbx, ;ret": 7,
                "int3;int3;mov rdi, qword [arg_8h];mov rsi, qword [arg_10h];mov rdx, qword [arg_18h]": 19,
                "movq xmm0, rax;pinsrq xmm0, rcx, 1;pxor xmm0, xmm8;movdqu xmm8, xmmword [rdi + ];movdqu xmm10, xmmword [rdi + ]": 7,
                "pshufd xmm8, xmm8, ;pxor xmm8, xmm11;movdqu xmm11, xmm14;pclmulqdq xmm11, xmm8, 1;pshufd xmm8, xmm8, ": 10,
                "pxor xmm8, xmm11;pxor xmm8, xmm9;pshufb xmm8, xmm15;pxor xmm8, xmm13;movdqu xmmword [rdx], xmm8": 7,
                "pxor xmm8, xmm9;pshufb xmm8, xmm15;pxor xmm8, xmm13;movdqu xmmword [rdx], xmm8;ret": 7,
                "movdqu xmmword [rdx], xmm8;ret;int3;int3;mov rdi, qword [arg_8h]": 7,
                "jb ;aesenc xmm0, xmm11;movdqu xmm11, xmmword [rsi + ];aesenc xmm0, xmm11;movdqu xmm11, xmmword [rsi + ]": 7,
                "pslld xmm0, 1;pxor xmm0, xmm11;pxor xmm0, xmm12;movdqu xmmword [rdi + ], xmm0;pshufd xmm1, xmm0, ": 7,
                "movdqu xmm11, xmm2;movdqu xmm12, xmm2;movdqu xmm13, xmm3;pclmulqdq xmm11, xmm0, 0;pclmulqdq xmm12, xmm0, ": 7,
                "movdqu xmm15, xmmword [];movdqu xmm14, xmmword [];test rdx, rdx;je ;cmp rdx, ": 7,
                "pclmulqdq xmm8, xmm0, 0;pclmulqdq xmm9, xmm0, ;pclmulqdq xmm10, xmm12, 0;movdqu xmm12, xmmword [rdi + ];jmp fcn.004e8dc0": 1,
                "pshufd xmm12, xmm3, ;pxor xmm3, xmm12;movdqu xmm12, xmmword [rdi + ];pclmulqdq xmm12, xmm3, 0;pxor xmm10, xmm12": 4,
                "pclmulqdq xmm13, xmm5, ;pxor xmm9, xmm13;pshufd xmm12, xmm5, ;pxor xmm5, xmm12;movdqu xmm12, xmmword [rdi + ]": 3,
                "pshufd xmm12, xmm6, ;pxor xmm6, xmm12;movdqu xmm12, xmmword [rdi + ];pclmulqdq xmm12, xmm6, 0;pxor xmm10, xmm12": 2,
                "pclmulqdq xmm12, xmm7, 0;pxor xmm10, xmm12;pxor xmm10, xmm8;pxor xmm10, xmm9;movdqu xmm11, xmm10": 2,
                "pxor xmm0, xmm0;lea rsi, [rsi + rdx - 1];pslldq xmm0, 1;pinsrb xmm0, byte [rsi], 0;lea rsi, [rsi - 1]": 1,
                "xor r11d, r12d;bswap r11d;mov dword [var_8ch], r11d;movdqu xmm11, xmmword [rax + ];aesenc xmm0, xmm11": 1,
                "mov dword [var_8ch], r11d;movdqu xmm11, xmmword [rax + ];aesenc xmm0, xmm11;aesenc xmm1, xmm11;aesenc xmm2, xmm11": 1,
                "mov dword [var_ach], r11d;movdqu xmm11, xmmword [rax + ];aesenc xmm0, xmm11;aesenc xmm1, xmm11;aesenc xmm2, xmm11": 1,
                "xor r11d, r12d;bswap r11d;mov dword [var_dch], r11d;movdqu xmm11, xmmword [rax + ];aesenc xmm0, xmm11": 1,
                "aesenc xmm5, xmm11;aesenc xmm6, xmm11;aesenc xmm7, xmm11;movdqu xmm11, xmmword [rax + ];je ": 1,
                "aesenc xmm7, xmm11;movdqu xmm11, xmmword [rax + ];je ;aesenc xmm0, xmm11;aesenc xmm1, xmm11": 1,
                "aesenclast xmm4, xmm11;aesenclast xmm5, xmm11;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - 8]": 1,
                "mov rax, qword [arg_d8h];mov r13, qword [arg_e0h];shr r13, 2;dec r13;movdqu xmm15, xmmword []": 1,
                "bswap r11d;mov dword [var_2ch], r11d;movdqu xmmword [var_30h], xmm11;add r10d, 1;mov r11d, r10d": 1,
                "mov dword [var_4ch], r11d;movdqu xmmword [var_50h], xmm11;add r10d, 1;mov r11d, r10d;xor r11d, r12d": 1,
                "movdqu xmmword [var_50h], xmm11;add r10d, 1;mov r11d, r10d;xor r11d, r12d;bswap r11d": 1,
                "sub r9, ;movdqu xmm0, xmmword [rsp];movdqu xmm1, xmmword [var_10h];movdqu xmm2, xmmword [var_20h];movdqu xmm3, xmmword [var_30h]": 1,
                "aesenc xmm2, xmm11;aesenc xmm3, xmm11;movdqu xmm12, xmmword [rdi + ];movdqu xmm13, xmm12;aesenc xmm4, xmm11": 6,
                "movdqu xmm13, xmm12;aesenc xmm4, xmm11;aesenc xmm5, xmm11;aesenc xmm6, xmm11;aesenc xmm7, xmm11": 6,
                "pclmulqdq xmm13, xmm11, ;pxor xmm11, xmm12;pxor xmm9, xmm13;movdqu xmm13, xmmword [rdi + ];pclmulqdq xmm11, xmm13, 0": 5,
                "pshufd xmm12, xmm11, ;pclmulqdq xmm13, xmm11, ;pxor xmm11, xmm12;pxor xmm9, xmm13;mov rcx, qword gs:[]": 1,
                "xor ebx, ebx;jmp ;movzx esi, byte [rdx + rbx];mov byte [rax + rsi + ], bl;inc rbx": 1,
                "lea rbp, [rsp - ];call fcn.00458e58;mov rbp, qword [rbp];mov ecx, dword [arg_168h];cmp ecx, ": 2,
                "mov dword [rax + ], ecx;mov qword [arg_170h], rax;mov rbp, qword [var_10h];add rsp, ;ret": 2,
                "mov rsi, qword [arg_18h];mov rdi, qword [arg_20h];mov r8, qword [arg_10h];xor eax, eax;xor r9d, r9d": 3,
                "jae ;shl r10, ;movzx r11d, byte [rdx + rax + 1];shl r11, 8;or r11, r10": 3,
                "shr r10, ;and r10, ;movzx r10d, byte [r10 + r8];cmp r9, rdi;jae ": 3,
                "and r10, ;movzx r10d, byte [r10 + r8];cmp r9, rdi;jae ;mov byte [rsi + r9], r10b": 3,
                "mov r12, r11;shr r11, ;and r11, ;movzx r11d, byte [r8 + r11];cmp r10, rdi": 3,
                "shr r12, 6;and r12, ;movzx r12d, byte [r8 + r12];cmp r10, rdi;jae ": 3,
                "cmp r10, rdi;jae ;mov byte [r9 + rsi + 2], r12b;lea r10, [r9 + 3];and r11, ": 3,
                "cmp rbx, 2;jne ;lea r11, [rax + 1];cmp r11, rcx;jae ": 3,
                "cmp rbx, 2;jne ;lea rax, [r9 + 2];shr rdx, 6;and rdx, ": 2,
                "je ;lea rcx, [r9 + 3];cmp rcx, rdi;jae ;mov byte [r9 + rsi + 3], al": 2,
                "mov rbx, rdx;shl rdx, 3;lea rax, [rdx + 5];mov qword [rsp + ], rax;movabs rdx, ": 1,
                "mov qword [rsp], rax;mov qword [rsp + 8], rdx;mov qword [rsp + ], rdx;call fcn.00440c00;mov rax, qword [rsp + ]": 2,
                "call fcn.00440c00;mov rax, qword [rsp + ];mov qword [rsp + ], rax;mov rcx, qword [rsp + ];mov qword [rsp], rcx": 1,
                "ret;mov rbx, qword [rsp + ];lea rax, [rbx + 2];mov qword [rsp + ], rax;movabs rsi, ": 1,
                "mov qword [rsp + ], rax;movabs rsi, ;imul rsi;lea rdx, [rbx + rdx];lea rdx, [rdx + 2]": 1,
                "mov rax, qword [arg_90h];mov rbx, qword [arg_88h];xor esi, esi;jmp ;mov byte [rcx + rdi + ], r8b": 1,
                "inc qword [rcx + ];inc rsi;cmp rsi, rax;jge ;mov rdi, qword [rcx + ]": 1,
                "cmp rsi, rax;jge ;mov rdi, qword [rcx + ];cmp rdi, 3;jge ": 1,
                "mov qword [arg_88h], rbx;mov rax, qword [rcx + ];mov qword [rsp], rax;lea rax, [rcx + ];mov qword [var_60h], rax": 1,
                "lea rax, [rcx + ];mov qword [var_60h], rax;mov qword [var_8h], rax;mov qword [var_10h], ;mov qword [var_18h], ": 1,
                "call fcn.004eba60;mov rax, qword [arg_80h];mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rcx, qword [rcx + ]": 1,
                "mov rax, qword [arg_80h];mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rcx, qword [rcx + ];mov qword [rsp], rdx": 1,
                "mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rcx, qword [rcx + ];mov qword [rsp], rdx;mov rdx, qword [var_60h]": 1,
                "mov rsi, qword [var_40h];jmp ;sub rsi, rbx;mov rdi, qword [arg_98h];sub rdi, rbx": 1,
                "cmp rdx, ;ja ;mov rax, qword [arg_80h];mov rcx, qword [rax + ];mov rbx, qword [rax + ]": 1,
                "mov rcx, qword [rcx + ];mov qword [rsp], rbx;mov rbx, qword [var_60h];mov qword [var_8h], rbx;mov qword [var_10h], rdx": 1,
                "mov r8, qword [arg_80h];mov ebx, ;jmp ;xor ecx, ecx;jmp ": 1,
                "mov qword [arg_a8h], rdx;mov qword [arg_b0h], rbx;mov rbp, qword [var_70h];add rsp, ;ret": 1,
                "mov qword [var_40h], rbp;lea rbp, [var_40h];mov rax, qword [arg_50h];cmp qword [rax], 0;je ": 1,
                "mov qword [var_10h], ;mov qword [var_18h], ;lea rbx, [rax + ];mov qword [var_20h], rbx;mov qword [var_28h], rcx": 1,
                "call fcn.004580f0;jmp ;lea rsi, [rdx + 2];mov rcx, rax;mov rax, rsi": 1,
                "ud2;call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.004ec330": 1,
                "inc rsi;mov rbx, r8;cmp rsi, 4;jge ;cmp rbx, rcx": 2,
                "movzx r9d, byte [rdx + rdi + ];cmp r9b, ;je ;cmp rsi, 4;jae ": 2,
                "jbe ;mov r10, qword [arg_48h];mov byte [r10], r8b;cmp byte [rdx + ], 0;je ": 1,
                "add rsp, ;ret;lea rax, [rbx - 2];mov qword [rsp], rax;call fcn.0040abe0": 1,
                "add rsp, ;ret;cmp byte [var_16h], 0;setne dl;jmp ": 1,
                "mov qword [arg_98h], rax;mov rbp, qword [var_30h];add rsp, ;ret;cmp bl, ": 1,
                "mov qword [var_8h], rcx;mov rcx, qword [arg_a0h];mov qword [var_10h], rcx;call fcn.00444e00;mov rax, qword [var_20h]": 1,
                "mov qword [var_20h], rcx;mov qword [var_28h], rax;mov qword [var_30h], rdx;call fcn.004ed670;mov rax, qword [var_38h]": 1,
                "mov qword [arg_a8h], rsi;mov qword [arg_b0h], rax;mov qword [arg_b8h], rbx;mov qword [arg_c0h], rcx;mov qword [arg_c8h], rdx": 1,
                "test rbx, rbx;jg ;mov rdx, qword [rcx + 8];mov rbx, qword [rcx];test rbx, rbx": 1,
                "cmp qword [rcx + ], 0;jne ;movabs rax, ;mov rsi, rdx;imul rdx": 1,
                "ja ;cmp rdx, ;ja ;mov rax, qword [rcx + ];mov rsi, qword [rcx + ]": 1,
                "ja ;mov rax, qword [rcx + ];mov rsi, qword [rcx + ];mov rax, qword [rax + ];mov qword [rsp], rsi": 1,
                "mov qword [rsp], rsi;lea rsi, [rbx - ];mov rdi, rsi;sar rsi, ;and rsi, rbx": 1,
                "mov qword [rsp + ], rax;mov rbp, qword [rsp + ];add rsp, ;ret;mov rdi, rsi": 1,
                "jmp ;mov qword [rsp], rdx;mov qword [rsp + 8], rax;mov rax, qword [];mov qword [rsp + ], rax": 1,
                "call fcn.004580f0;jmp ;mov qword [rsp], r8;lea rax, [rcx + ];mov qword [rsp + ], rax": 1,
                "mov qword [rsp + ], rbx;mov qword [rsp + ], ;call fcn.004ed670;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 1,
                "mov r12, rcx;sub rcx, r10;cmp rcx, 8;jl ;cmp rdi, r11": 1,
                "sub rcx, r10;cmp rcx, 8;jl ;cmp rdi, r11;ja ": 1,
                "mov qword [var_70h], rcx;mov qword [var_98h], r8;mov qword [var_a8h], r9;mov qword [var_90h], r10;mov qword [var_60h], rdi": 1,
                "cmp byte [var_28h], 0;je ;mov rcx, qword [var_90h];mov rdx, qword [arg_d0h];cmp rcx, rdx": 1,
                "mov rbx, qword [arg_d8h];mov rsi, rbx;sub rbx, rcx;neg rbx;sar rbx, ": 2,
                "mov rax, qword [var_90h];mov rcx, qword [arg_d0h];cmp rax, rcx;ja ;mov rcx, qword [arg_c0h]": 1,
                "call fcn.004ec650;mov rax, qword [var_50h];mov rcx, qword [var_40h];mov rdx, qword [var_48h];mov rbx, qword [var_58h]": 1,
                "mov rcx, qword [var_40h];mov rdx, qword [var_48h];mov rbx, qword [var_58h];mov rsi, qword [var_90h];add rdx, rsi": 1,
                "mov rdi, qword [arg_c8h];mov r8, rax;mov rax, rdx;mov rdx, qword [arg_d0h];jmp ": 1,
                "jmp ;mov rax, qword [var_78h];mov rcx, qword [arg_d0h];cmp rax, rcx;ja ": 1,
                "je ;movzx ebx, byte [rcx + 1];movzx ebx, byte [rbx + rax + ];cmp ebx, ;je ": 1,
                "mov byte [arg_34h], 1;mov rbp, qword [rsp];add rsp, 8;ret;mov dword [arg_30h], 0": 1,
                "cmp rdx, ;je ;movzx ebx, byte [rcx + 1];movzx ebx, byte [rbx + rax + ];cmp rbx, ": 2,
                "je ;movzx ebx, byte [rcx + 1];movzx ebx, byte [rbx + rax + ];cmp rbx, ;je ": 2,
                "mov rsi, qword [rsp + ];mov rdi, qword [rsp + ];jmp ;inc r8;cmp r8, rax": 2,
                "jge ;movzx r10d, byte [rsi + r8];cmp r10b, ;je ;cmp r10b, ": 2,
                "jmp ;test r9, r9;jg ;mov rax, qword [rsp + ];mov rcx, qword [rax]": 2,
                "add rax, rcx;sar rax, 2;lea rax, [rax + rax*2];mov qword [rsp + ], rax;ret": 1,
                "sar rax, 2;lea rax, [rax + rax*2];mov qword [rsp + ], rax;ret;int3": 1,
                "call fcn.004580f0;jmp ;call fcn.00456090;jmp fcn.004ee1a0;int3": 1,
                "call fcn.00456090;jmp fcn.004ee1a0;int3;int3;int3": 1,
                "mov rax, qword [rsp + ];mov qword [rsp], rax;lea rdi, [rsp + 8];lea rsi, [rsp + ];mov qword [rsp - ], rbp": 1,
                "mov rsi, rax;mov rax, rbx;mov ecx, dword [arg_70h];jmp ;lea rdi, [rbx + 8]": 1,
                "test rbx, rbx;jl ;cmp rbx, rdx;ja ;mov qword [rcx + ], rbx": 1,
                "lea rax, [rax + 4];mov qword [var_48h], rax;mov qword [var_10h], rax;call fcn.00440c00;mov rax, qword [arg_68h]": 1,
                "mov rdi, rax;call fcn.004580f0;jmp ;call fcn.0042ea20;ud2": 1,
                "je ;cmp rcx, rax;jne ;mov rcx, qword [rax + ];mov rdx, qword [rsp + ]": 1,
                "lea rbx, [rcx + rdx];mov qword [rsp + ], rbx;mov rsi, qword [rax + 8];mov rdi, qword [rax + ];cmp rbx, rdi": 1,
                "mov rax, qword [rsp + ];mov qword [rcx + ], rax;cmp dword [], 0;jne ;mov rax, qword [rsp + ]": 1,
                "cmp dword [], 0;jne ;mov rax, qword [rsp + ];mov qword [rcx + 8], rax;mov rax, qword [rsp + ]": 1,
                "movups xmmword [rsp + ], xmm0;mov rbp, qword [rsp + ];add rsp, ;ret;lea rdi, [rcx + 8]": 1,
                "jmp ;mov rax, qword [rsp + 8];mov rcx, qword [rax + ];mov rax, qword [rax + 8];cmp rcx, rax": 1,
                "mov rcx, qword [rax + ];mov rax, qword [rax + 8];cmp rcx, rax;jl ;mov rcx, qword gs:[]": 1,
                "call fcn.00440c00;mov rax, qword [var_18h];mov qword [var_30h], rax;xor ecx, ecx;mov rdx, qword [arg_48h]": 1,
                "mov rsi, qword [var_28h];lea r8, [rsi - 1];cmp rcx, r8;jge ;mov qword [var_20h], rcx": 1,
                "mov rax, qword [var_18h];mov ecx, dword [var_10h];cmp ecx, ;test rax, rax;jl ": 1,
                "mov qword [rax + r8 + 8], rbx;lea rdi, [r8 + rax];cmp dword [], 0;jne ;mov qword [rax + r8], rdx": 1,
                "mov rax, rcx;jmp ;cmp rcx, rax;jg ;mov rax, rcx": 1,
                "call fcn.00456090;jmp fcn.004efbe0;int3;int3;int3": 1,
                "mov rax, qword [arg_40h];mov qword [rsp], rax;mov rax, qword [arg_48h];mov qword [var_8h], rax;mov rax, qword [arg_10h]": 1,
                "mov qword [var_8h], rax;mov rax, qword [arg_10h];mov rcx, qword [arg_8h];xor edx, edx;xor ebx, ebx": 1,
                "mov qword [rsp], rax;mov rax, qword [arg_48h];mov qword [var_8h], rax;call fcn.004633f0;mov rax, qword [var_10h]": 3,
                "ret;call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.004efeb0": 3,
                "jne ;cmp rdx, rsi;ja ;mov rdi, rsi;sub rsi, rdx": 4,
                "je ;xor esi, esi;test sil, sil;jne ;dec rdx": 4,
                "mov rcx, qword [arg_60h];mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.00402ce0;movzx r9d, byte [var_18h]": 4,
                "add rsp, ;ret;mov rax, qword [arg_10h];lea rcx, [rax - 1];mov rdx, qword [arg_8h]": 1,
                "mov qword [var_30h], rdx;mov dword [var_2ch], r9d;mov qword [rsp], rsi;mov rax, qword [arg_60h];mov qword [var_8h], rax": 3,
                "mov rcx, qword [arg_50h];mov qword [var_8h], rcx;mov qword [var_10h], rax;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "ret;mov rax, qword [arg_58h];mov qword [arg_70h], rax;mov rbp, qword [var_40h];add rsp, ": 2,
                "cmp rdx, rax;jge ;movzx ebx, byte [rcx + rdx];cmp ebx, ;jge ": 3,
                "mov rbp, qword [var_38h];add rsp, ;ret;mov qword [var_30h], rdx;mov qword [rsp], rcx": 2,
                "call fcn.00452730;mov ebx, dword [var_18h];mov rsi, qword [var_20h];mov rax, qword [arg_50h];mov rcx, qword [arg_48h]": 2,
                "test eax, eax;jl ;cmp eax, ;jge ;lea rcx, [var_2ch]": 2,
                "call fcn.00456090;jmp fcn.004f0320;int3;int3;int3": 1,
                "mov rdx, qword [arg_90h];mov rbx, qword [arg_80h];xor esi, esi;jmp ;cmp r9, rax": 2,
                "jmp ;cmp r9, rax;jge ;movzx r10d, byte [rdx + r9];cmp r10d, ": 2,
                "mov rax, qword [arg_98h];mov rcx, qword [arg_88h];mov rdx, qword [arg_90h];mov rbx, qword [arg_80h];mov rsi, qword [var_40h]": 4,
                "bt ebx, esi;jae ;mov qword [arg_a0h], rdx;mov rbp, qword [var_70h];add rsp, ": 2,
                "lea rbp, [var_48h];mov rax, qword [arg_80h];test rax, rax;je ;mov rcx, qword [arg_70h]": 4,
                "mov rcx, qword [arg_70h];test rcx, rcx;je ;test rax, rax;mov rcx, qword gs:[]": 1,
                "mov rcx, r8;mov rdx, qword [arg_80h];mov qword [var_30h], rbx;mov qword [arg_60h], rsi;mov qword [arg_58h], rdi": 3,
                "mov qword [arg_58h], rdi;cmp rbx, rdx;jge ;mov qword [rsp], rdi;mov qword [var_8h], rsi": 3,
                "call fcn.004efbe0;mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rdx, qword [var_28h];mov qword [arg_88h], rcx": 2,
                "mov qword [arg_98h], rdx;mov rbp, qword [var_48h];add rsp, ;ret;mov qword [arg_88h], 0": 2,
                "jl ;mov qword [var_78h], rcx;mov rdi, qword [var_b8h];mov r8, qword [var_c0h];mov r9, r8": 3,
                "xor esi, esi;jmp ;mov rdi, qword [var_98h];add rdi, ;mov r8, qword [arg_f8h]": 2,
                "mov rdi, qword [var_98h];add rdi, ;mov r8, qword [arg_f8h];mov r9, qword [arg_f0h];mov rdx, r8": 2,
                "mov qword [var_b0h], rax;mov rax, qword [var_a8h];test rax, rax;je ;lea rcx, [var_a8h]": 1,
                "mov rsi, qword [var_c0h];mov rdi, qword [var_b0h];cmp rbx, rsi;ja ;mov qword [var_a0h], rdi": 1,
                "mov qword [var_60h], rsi;add rax, rdi;mov qword [rsp], rax;mov rax, qword [var_88h];mov qword [var_8h], rax": 1,
                "mov qword [var_60h], rax;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rdi;mov qword [var_10h], rax": 1,
                "xor eax, eax;jmp ;mov rax, qword [var_78h];mov rcx, qword [arg_d0h];cmp rax, rcx": 1,
                "mov qword [var_8h], rbx;call fcn.00462c90;mov eax, dword [var_10h];mov rcx, qword [var_18h];cmp rcx, 1": 1,
                "jne ;mov rdi, qword [var_a0h];lea r8, [rsi + rdi];mov qword [var_78h], r8;mov r9, qword [var_a8h]": 1,
                "ja ;mov qword [var_88h], r10;mov qword [var_70h], r9;lea rax, [r10 + rdi];mov qword [rsp], rax": 1,
                "mov rax, qword [arg_c8h];mov qword [var_8h], rax;mov qword [var_10h], rsi;call fcn.00459210;mov rax, qword [var_78h]": 1,
                "sub rcx, rax;mov rbx, rcx;neg rcx;sar rcx, ;and rax, rcx": 9,
                "mov rbx, rcx;neg rcx;sar rcx, ;and rax, rcx;mov rcx, qword [arg_c8h]": 1,
                "add rax, rcx;cmp qword [var_a8h], 0;je ;mov qword [arg_d0h], rbx;mov qword [arg_c8h], rax": 1,
                "je ;mov qword [arg_d0h], rbx;mov qword [arg_c8h], rax;xor ecx, ecx;jmp ": 1,
                "inc rcx;mov qword [var_78h], rcx;mov dword [rsp], esi;mov rdx, qword [arg_c0h];mov rax, qword [rdx]": 1,
                "mov rdx, qword [arg_c0h];mov rax, qword [rdx];call rax;mov eax, dword [var_8h];test eax, eax": 1,
                "mov rcx, qword [var_a0h];mov rsi, qword [var_98h];lea rdi, [rcx + 1];mov r8, qword [var_a8h];cmp rdi, r8": 1,
                "mov rcx, qword [var_30h];mov rax, qword [var_38h];mov qword [var_a8h], rax;mov qword [var_98h], rsi;mov eax, dword [var_4ch]": 1,
                "lea rax, [var_90h];mov qword [rsp], rax;call fcn.004eee80;lea rbx, [var_90h];jmp ": 1,
                "jmp ;mov qword [rsp], rax;mov qword [var_8h], rbx;mov qword [var_10h], rcx;call fcn.00452730": 1,
                "mov rax, qword [var_a0h];mov rcx, qword [var_98h];mov qword [arg_d8h], rcx;mov qword [arg_e0h], rax;mov rbp, qword [var_b0h]": 1,
                "lea rdx, [rdx + 4];mov qword [var_68h], rdx;mov qword [var_10h], rdx;call fcn.00440c00;mov rax, qword [var_a0h]": 1,
                "mov r8, qword [var_b0h];mov r9, qword [var_a0h];cmp rdi, r8;jbe ;mov qword [var_40h], rcx": 1,
                "mov qword [var_40h], rcx;mov qword [var_80h], rax;mov qword [var_68h], rbx;lea rax, [];mov qword [rsp], rax": 1,
                "test rcx, rcx;je ;lea rbx, [var_98h];cmp rbx, rcx;jne ": 1,
                "mov rax, qword [var_70h];mov qword [var_b0h], rax;mov rax, qword [var_90h];mov qword [var_a0h], rax;mov rax, qword [var_a8h]": 1,
                "mov qword [var_b0h], rax;mov rax, qword [var_90h];mov qword [var_a0h], rax;mov rax, qword [var_a8h];mov rcx, qword [var_a0h]": 1,
                "mov rcx, qword [var_a0h];mov qword [arg_e0h], rcx;mov qword [arg_e8h], rax;mov rbp, qword [var_b8h];add rsp, ": 1,
                "mov rbp, qword [var_b8h];add rsp, ;ret;mov qword [var_78h], rax;mov qword [var_48h], rdx": 1,
                "add rsp, ;ret;mov qword [var_78h], rax;mov qword [var_48h], rdx;mov qword [var_70h], rcx": 1,
                "mov qword [var_70h], rcx;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rdi;mov qword [var_10h], rcx": 1,
                "mov qword [var_8h], r8;mov qword [var_10h], rdx;mov qword [var_18h], rdi;mov qword [var_20h], rbx;call fcn.00440d10": 1,
                "xorps xmm0, xmm0;movups xmmword [arg_e0h], xmm0;mov rbp, qword [var_b8h];add rsp, ;ret": 1,
                "movups xmmword [arg_e0h], xmm0;mov rbp, qword [var_b8h];add rsp, ;ret;lea rax, []": 1,
                "mov qword [var_88h], rbp;lea rbp, [var_88h];mov rax, qword [arg_a0h];mov rcx, qword [arg_98h];xor edx, edx": 3,
                "jge ;movzx esi, byte [rcx + rdx];cmp sil, ;jae ;test bl, bl": 3,
                "mov qword [arg_a8h], rcx;mov qword [arg_b0h], rax;mov rbp, qword [var_88h];add rsp, ;ret": 7,
                "mov rbp, qword [var_88h];add rsp, ;ret;test bl, bl;je ": 3,
                "jl ;xor ebx, ebx;jmp ;lea r9, [rdi + 1];mov qword [var_78h], r9": 3,
                "add esi, ;mov rdi, qword [var_68h];test rdi, rdi;je ;cmp rdx, rdi": 3,
                "cmp r9, r10;jbe ;mov qword [var_48h], rbx;mov byte [var_47h], sil;lea rax, []": 3,
                "mov rdi, qword [var_30h];mov rax, qword [var_38h];mov qword [var_80h], rax;mov qword [var_70h], r8;mov rax, qword [arg_a0h]": 2,
                "add rsp, ;ret;mov qword [var_50h], rsi;lea rcx, [];mov qword [rsp], rcx": 2,
                "mov qword [var_80h], rbx;mov qword [var_70h], rax;mov rax, qword [arg_a0h];mov rcx, qword [arg_98h];lea rdx, [var_68h]": 2,
                "mov qword [rsp], rax;mov qword [var_8h], rbx;mov qword [var_10h], rcx;call fcn.00459210;mov rax, qword [var_60h]": 2,
                "call fcn.00459210;mov rax, qword [var_60h];mov rdx, qword [var_50h];jmp ;mov qword [arg_a8h], rcx": 2,
                "mov qword [arg_b0h], rax;mov rbp, qword [var_88h];add rsp, ;ret;lea rax, []": 2,
                "mov qword [var_8h], rax;call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.004f1fb0": 1,
                "jl ;cmp rax, rcx;ja ;mov qword [arg_58h], rdx;mov qword [arg_60h], rax": 2,
                "neg rcx;sar rcx, ;and rcx, rax;add rcx, rdx;mov qword [rsp], rcx": 2,
                "ud2;call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.004f22a0": 2,
                "neg rcx;sar rcx, ;and rax, rcx;mov rbx, qword [arg_38h];add rax, rbx": 6,
                "jbe ;sub rsp, ;mov qword [var_38h], rbp;lea rbp, [var_38h];xor eax, eax": 3,
                "lea rdi, [rax + 1];mov qword [var_30h], rdi;mov dword [rsp], esi;mov rdx, qword [arg_58h];mov rax, qword [rdx]": 3,
                "mov rax, qword [var_28h];mov qword [arg_68h], rax;mov rbp, qword [var_38h];add rsp, ;ret": 3,
                "mov rcx, qword [arg_40h];mov rdx, rax;jmp ;mov rbx, qword [arg_48h];mov rsi, qword [arg_40h]": 4,
                "call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.004f2540;int3": 4,
                "call fcn.00456090;jmp fcn.004f2540;int3;int3;int3": 4,
                "movups xmmword [arg_18h], xmm0;movups xmmword [arg_28h], xmm0;mov rax, qword [arg_10h];mov rcx, qword [arg_8h];xor edx, edx": 5,
                "add rsp, ;ret;lea rdi, [rax + 8];mov rcx, rax;mov rax, qword [arg_70h]": 10,
                "add rsp, ;ret;mov rcx, qword [arg_50h];test rcx, rcx;je ": 13,
                "mov rax, qword [arg_38h];mov qword [rsp], rax;mov rax, qword [arg_40h];mov qword [var_8h], rax;call fcn.004f22a0": 4,
                "mov rdx, qword [arg_a0h];test rdx, rdx;je ;mov rcx, qword [arg_70h];mov qword [rsp], rcx": 4,
                "call fcn.004efeb0;mov rax, qword [var_20h];test rax, rax;je ;mov rcx, qword [arg_a0h]": 4,
                "lea rcx, [];mov qword [rsp], rcx;mov rcx, qword [arg_98h];mov rdx, qword [arg_88h];sub rcx, rdx": 4,
                "sub rcx, rdx;imul rcx, rax;mov rsi, qword [arg_78h];add rcx, rsi;mov qword [var_38h], rcx": 4,
                "test rdx, rdx;jne ;test r10, r10;jg ;mov r13, r12": 4,
                "test r12, r12;jl ;cmp r13, r12;ja ;cmp r12, rdi": 4,
                "and r13, r12;lea r12, [rcx + r13];cmp rbx, r12;jne ;lea rbx, [r11 + r15]": 3,
                "je ;mov qword [var_30h], rbx;mov qword [var_50h], r14;mov qword [rsp], r12;mov qword [var_8h], r8": 3,
                "sub rdi, r12;mov rdx, rdi;neg rdi;sar rdi, ;and rdi, r12": 2,
                "ja ;sub rdi, r12;mov rbx, rdi;neg rdi;sar rdi, ": 2,
                "mov qword [var_18h], rdx;call fcn.00444c60;mov rax, qword [var_28h];mov rcx, qword [var_20h];mov qword [arg_a8h], rcx": 1,
                "mov qword [var_8h], rcx;mov qword [var_10h], rsi;call fcn.00459210;mov rax, qword [var_58h];mov rdx, qword [var_38h]": 1,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov rax, qword [arg_58h];mov rcx, qword [arg_60h];mov rdx, qword [arg_48h]": 1,
                "je ;cmp ebx, esi;mov ecx, ebx;cmovl ebx, esi;cmovl esi, ecx": 1,
                "mov dword [var_24h], esi;mov dword [rsp], esi;call fcn.00463f00;mov eax, dword [var_8h];mov ecx, dword [var_24h]": 1,
                "mov rax, qword [var_30h];mov rdx, qword [arg_48h];mov rdi, qword [arg_50h];mov r8, qword [var_28h];jmp ": 1,
                "sub rdx, rcx;mov rdi, rdx;neg rdx;sar rdx, ;and rcx, rdx": 1,
                "jmp fcn.004f2ff0;int3;int3;int3;int3": 1,
                "mov rdx, qword [arg_90h];movzx ebx, byte [rdx];mov byte [var_2fh], bl;movzx esi, byte [rdx + 1];mov byte [var_2ch], sil": 2,
                "test rcx, rcx;jl ;cmp r9, rcx;ja ;cmp rcx, rdi": 1,
                "mov qword [var_60h], r9;sub rcx, r9;mov rdx, rcx;neg rcx;sar rcx, ": 1,
                "mov rbx, qword [arg_50h];mov rsi, qword [arg_60h];xor edi, edi;xor r8d, r8d;jmp ": 1,
                "and rsi, r9;add rsi, rdx;cmp r11, rdi;je ;xor esi, esi": 1,
                "mov dword [var_28h], r8d;mov qword [var_30h], r10;mov qword [rsp], rsi;mov rax, qword [arg_58h];mov qword [var_8h], rax": 1,
                "add rsp, ;ret;mov qword [arg_68h], 0;mov rbp, qword [var_38h];add rsp, ": 1,
                "movzx eax, byte [rax];mov ecx, dword [rsp + ];cmp ecx, eax;sete byte [rsp + ];mov rbp, qword [rsp]": 1,
                "mov qword [rsp + ], 1;mov qword [rsp + ], 1;call fcn.004d6050;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 3,
                "sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp];mov rax, qword [arg_30h];mov rcx, qword [arg_28h]": 2,
                "mov byte [rsi + rax], dil;lea rdi, [rax + 1];mov rax, rbx;mov rdx, rdi;mov rbx, rax": 2,
                "lea edi, [rsi - ];mov r8d, 1;test r8b, r8b;je ;lea rsi, [rax + rax]": 2,
                "jb ;cmp dl, ;ja ;lea esi, [rdx - ];mov r8d, 1": 6,
                "je ;shl edi, 4;or edi, esi;mov rdx, qword [arg_18h];cmp rax, rdx": 2,
                "lea rax, [];add rax, rdx;mov qword [arg_50h], rax;mov rbp, qword [rsp];add rsp, 8": 2,
                "jne ;mov rbx, rdx;shl rdx, 1;sub rsp, 8;mov qword [rsp], rbp": 1,
                "ret;cmp al, ;jb ;cmp al, ;jbe ": 1,
                "jb ;cmp al, ;jbe ;mov qword [arg_40h], rbx;lea rcx, []": 1,
                "add rsp, 8;ret;mov qword [arg_40h], rdx;xorps xmm0, xmm0;movups xmmword [arg_48h], xmm0": 1,
                "test rax, rax;je ;movzx eax, byte [rax];mov dword [rsp], eax;call fcn.0040ab60": 3,
                "jbe ;sub rsp, ;mov qword [var_70h], rbp;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 0;mov rax, qword [arg_88h];lea rcx, [rax + rax*2]": 4,
                "mov rax, qword [var_18h];mov qword [rsp], rax;mov qword [var_8h], 0;mov rax, qword [var_48h];mov qword [var_10h], rax": 7,
                "mov byte [var_2ah], 0;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov qword [arg_98h], rcx;mov rbp, qword [var_70h];add rsp, ;ret;call fcn.00456090": 5,
                "mov byte [var_2ah], 0;call fcn.004797d0;mov rax, qword [var_38h];mov rcx, qword [var_40h];mov rdx, qword [var_30h]": 2,
                "int3;movzx eax, byte [arg_8h];cmp al, ;jb ;cmp al, ": 2,
                "movzx eax, byte [arg_8h];cmp al, ;jb ;cmp al, ;ja ": 3,
                "ret;cmp al, ;jb ;cmp al, ;setbe cl": 4,
                "cmp al, ;setbe cl;test cl, cl;jne ;mov rcx, qword [arg_10h]": 3,
                "ret;cmp al, ;je ;jmp ;lea edx, [rax - ]": 3,
                "je ;jmp ;cmp rcx, 4;je ;jmp ": 2,
                "lea r8, [rbx + 2];cmp r8, rdx;jge ;lea r10, [rbx + 1];cmp r10, rdx": 3,
                "cmp r10, rdx;jae ;movzx r10d, byte [rcx + rbx + 1];cmp r10b, ;jb ": 2,
                "jae ;movzx r10d, byte [rcx + rbx + 1];cmp r10b, ;jb ;cmp r10b, ": 2,
                "test r11, r11;jl ;cmp rbx, r11;ja ;cmp r11, rdx": 2,
                "cmp r8b, ;jb ;cmp r8b, ;ja ;lea r11d, [r8 - ]": 4,
                "add rbx, 3;jmp ;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "cmp r10b, ;ja ;add r10d, ;cmp r8b, ;jmp ": 2,
                "ja ;add r10d, ;cmp r8b, ;jmp ;cmp r8b, ": 1,
                "cmp r8b, ;jne ;cmp rax, 6;sete dil;inc rbx": 1,
                "mov rbx, qword [var_60h];inc rbx;mov rax, rbx;mov qword [var_68h], rdx;mov rbx, qword [arg_d0h]": 1,
                "cmp al, ;jne ;mov rax, qword [arg_d8h];cmp rax, 6;jne ": 1,
                "jne ;mov rax, qword [arg_d8h];cmp rax, 6;jne ;mov rcx, qword [var_40h]": 1,
                "jmp ;mov rbx, qword [var_68h];lea rdx, [rbx + 1];mov rcx, qword [var_40h];jmp ": 1,
                "mov qword [var_b0h], rcx;mov qword [var_38h], rsi;test rdx, rdx;jne ;cmp rax, rbx": 1,
                "mov rdi, qword [arg_c8h];cmp rcx, rdi;jne ;xor eax, eax;jmp ": 1,
                "mov qword [var_10h], rax;call fcn.00459210;mov rcx, qword [var_b0h];mov rdx, qword [var_48h];mov rbx, qword [arg_d0h]": 1,
                "mov rdx, qword [var_b0h];mov byte [rdx + rax], ;lea rbx, [rax + 1];movzx esi, byte [var_36h];mov edi, esi": 1,
                "movzx esi, byte [rdi + r8];cmp rbx, rcx;jae ;mov byte [rax + rdx + 2], sil;lea r9, [rax + 3]": 1,
                "add rsp, ;ret;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax": 18,
                "mov qword [var_8h], rax;mov qword [var_10h], rax;call fcn.00440c00;mov rcx, qword [var_18h];mov rax, qword [var_48h]": 1,
                "mov rax, qword [arg_c8h];mov qword [arg_e0h], rax;mov qword [arg_e8h], rbx;mov rbp, qword [var_b8h];add rsp, ": 1,
                "call fcn.004f5010;mov rax, qword [var_18h];mov rcx, qword [var_20h];mov qword [rsp], 0;mov rdx, qword [var_50h]": 1,
                "cmp bl, ;jb ;cmp bl, ;jbe ;cmp bl, ": 2,
                "test rdx, rdx;jne ;xorps xmm0, xmm0;movups xmmword [arg_30h], xmm0;mov qword [arg_40h], rcx": 2,
                "movups xmmword [arg_50h], xmm0;mov rbp, qword [var_10h];add rsp, ;ret;cmp bl, ": 2,
                "lea rax, [];mov qword [arg_50h], rax;mov qword [arg_58h], rdi;mov rbp, qword [var_10h];add rsp, ": 2,
                "mov rbx, qword [arg_38h];mov qword [arg_60h], rbx;mov qword [arg_68h], rax;sub rcx, rdx;mov rax, rcx": 3,
                "mov rax, qword [arg_40h];mov qword [arg_68h], rax;xorps xmm0, xmm0;movups xmmword [arg_70h], xmm0;mov rbp, qword [var_28h]": 3,
                "mov qword [var_60h], rax;mov rax, qword [var_70h];mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], 7": 3,
                "cmp dword [], 0;jne ;mov qword [rsi + ], rax;test rdx, rdx;je ": 3,
                "cmp dword [], 0;jne ;lea rcx, [];mov qword [rdi], rcx;mov rcx, qword [arg_98h]": 3,
                "cmp dword [], 0;jne ;mov rax, qword [var_78h];mov qword [rdi + ], rax;mov qword [arg_a0h], 0": 4,
                "mov qword [arg_b0h], rdi;mov rbp, qword [var_80h];add rsp, ;ret;lea rcx, [rdi + ]": 4,
                "mov rax, qword [var_78h];call fcn.004580f0;mov rdi, rdx;jmp ;lea rcx, [rdi + ]": 4,
                "mov qword [arg_a0h], rsi;xorps xmm0, xmm0;movups xmmword [arg_a8h], xmm0;mov rbp, qword [var_80h];add rsp, ": 2,
                "cmp dword [], 0;jne ;lea rcx, [];mov qword [rax + ], rcx;mov qword [arg_b0h], rax": 2,
                "je ;cmp qword [rdi + 8], 0;je ;mov eax, 1;test al, al": 1,
                "mov qword [rsp], rax;mov qword [var_8h], rbx;call fcn.004f6560;mov rax, qword [var_30h];mov rcx, qword [var_28h]": 1,
                "mov qword [var_8h], rbx;call fcn.004f6560;mov rax, qword [var_30h];mov rcx, qword [var_28h];mov rdx, qword [var_18h]": 1,
                "mov rcx, qword [var_28h];mov rdx, qword [var_18h];mov rbx, qword [var_20h];mov rsi, qword [var_10h];cmp dword [], 0": 1,
                "mov rdx, qword [var_18h];mov rbx, qword [var_20h];mov rsi, qword [var_10h];cmp dword [], 0;jne ": 1,
                "jmp ;mov qword [rsp], rdx;lea rax, [];mov qword [var_8h], rax;mov qword [var_10h], 2": 1,
                "jne ;mov rax, qword [var_58h];test rax, rax;jl ;mov rcx, qword [arg_b8h]": 1,
                "cmp qword [var_20h], 0;jl ;mov rax, qword [arg_b0h];mov qword [rsp], rax;mov rax, qword [var_58h]": 1,
                "mov qword [rsp], rax;mov rax, qword [var_60h];mov qword [var_8h], rax;mov qword [var_10h], 5;call fcn.004f48c0": 1,
                "mov qword [rdi + 8], rax;cmp dword [], 0;jne ;mov rcx, qword [var_78h];mov qword [rdi], rcx": 2,
                "mov qword [rdi], rcx;mov rcx, qword [var_68h];mov qword [rdi + ], rcx;cmp dword [], 0;jne ": 2,
                "mov byte [rdi + ], 1;mov qword [arg_c0h], rdi;mov rax, qword [var_98h];mov qword [arg_c8h], rax;mov rax, qword [var_70h]": 1,
                "mov rax, rdi;mov rdi, rcx;mov rdx, rax;mov rax, qword [var_90h];call fcn.004580f0": 1,
                "call fcn.004580f0;mov rdi, rdx;jmp ;mov rax, qword [var_78h];call fcn.004580f0": 1,
                "movups xmmword [arg_c8h], xmm0;lea rax, [];mov qword [arg_d8h], rax;mov qword [arg_e0h], rdi;mov rbp, qword [var_a0h]": 1,
                "mov rbp, qword [var_a0h];add rsp, ;ret;lea rax, [];call fcn.004580f0": 1,
                "movups xmmword [arg_d8h], xmm0;mov rbp, qword [var_a8h];add rsp, ;ret;mov rcx, qword [arg_b8h]": 1,
                "mov qword [var_10h], rdx;mov qword [var_18h], 1;call fcn.004f0000;mov rax, qword [var_20h];test rax, rax": 4,
                "mov qword [var_8h], rbx;call fcn.004f74c0;cmp byte [var_10h], 0;je ;mov rax, qword [var_58h]": 1,
                "call fcn.004f3240;mov rax, qword [var_20h];test rax, rax;jl ;mov rcx, qword [arg_c0h]": 1,
                "mov qword [var_8h], rdx;mov qword [var_10h], 3;call fcn.004f48c0;mov rax, qword [var_30h];mov rcx, qword [var_28h]": 1,
                "test rcx, rcx;je ;xorps xmm0, xmm0;movups xmmword [arg_c8h], xmm0;mov qword [arg_d8h], rcx": 1,
                "movups xmmword [arg_c8h], xmm0;mov qword [arg_d8h], rcx;mov qword [arg_e0h], rax;mov rbp, qword [var_a8h];add rsp, ": 4,
                "mov rax, qword [var_88h];mov qword [var_8h], rax;mov rax, qword [var_68h];mov qword [var_10h], rax;mov rax, qword [var_80h]": 1,
                "mov qword [var_10h], rax;mov rax, qword [var_80h];mov qword [var_18h], rax;mov rax, qword [var_60h];mov qword [var_20h], rax": 1,
                "mov rbp, qword [var_a8h];add rsp, ;ret;xorps xmm0, xmm0;movups xmmword [arg_c8h], xmm0": 2,
                "xorps xmm0, xmm0;movups xmmword [arg_c8h], xmm0;mov qword [arg_d8h], rcx;mov qword [arg_e0h], rbx;mov rbp, qword [var_a8h]": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;lea rax, [var_98h];mov qword [var_10h], rax": 3,
                "mov qword [var_78h], rax;mov rcx, qword [var_30h];mov qword [var_50h], rcx;lea rdx, [];mov qword [rsp], rdx": 1,
                "ret;lea rdi, [rdx + ];mov rax, qword [arg_50h];call fcn.004580f0;jmp ": 1,
                "jmp ;lea rdi, [rcx + ];mov rax, rdx;call fcn.004580f0;jmp ": 1,
                "cmp byte [rcx], ;je ;mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], 1": 2,
                "lea rax, [];mov qword [arg_50h], rax;mov qword [arg_58h], 1;mov rbp, qword [var_38h];add rsp, ": 2,
                "mov qword [arg_58h], 1;mov rbp, qword [var_38h];add rsp, ;ret;mov rcx, qword [rax + ]": 2,
                "mov rbp, qword [var_38h];add rsp, ;ret;mov rcx, qword [rax + ];mov rdx, qword [rax + ]": 2,
                "call fcn.004f73c0;movzx ecx, byte [var_10h];mov rax, qword [arg_48h];jmp ;call fcn.00456090": 2,
                "je ;cmp bl, ;je ;jmp ;mov byte [arg_40h], 1": 3,
                "cmp byte [rcx], ;jne ;dec rax;mov qword [var_28h], rax;mov rdx, rax": 3,
                "mov qword [var_28h], rax;mov rdx, rax;neg rax;sar rax, ;and rax, 1": 3,
                "neg rax;sar rax, ;and rax, 1;add rax, rcx;mov qword [var_30h], rax": 3,
                "ret;mov qword [rsp], rax;mov qword [var_8h], rdx;mov qword [var_10h], rcx;call fcn.00452730": 3,
                "mov rcx, qword [rax + 8];mov rdx, qword [rax];test rcx, rcx;je ;lea rbx, [var_b0h]": 4,
                "mov rax, qword [var_c8h];mov rdx, qword [var_c0h];mov rbx, qword [var_b8h];lea rsi, [rdx + 1];cmp rsi, rax": 3,
                "mov rdx, qword [rax + ];mov rbx, qword [rax + ];test rdx, rdx;je ;mov rsi, qword [var_b0h]": 3,
                "mov qword [var_78h], rdi;mov r8, qword [var_b8h];mov r9, qword [var_c8h];cmp rdi, r9;ja ": 3,
                "mov qword [var_8h], rbx;mov qword [var_10h], rdx;call fcn.00459210;mov rax, qword [var_78h];mov qword [var_c0h], rax": 3,
                "mov qword [var_b8h], rax;mov rax, qword [arg_e0h];cmp byte [rax + ], 0;je ;mov rcx, qword [var_b0h]": 3,
                "je ;lea rdx, [var_b0h];cmp rdx, rcx;jne ;mov rcx, qword [var_c8h]": 3,
                "je ;lea rdx, [var_b0h];cmp rdx, rcx;jne ;mov rcx, qword [var_c0h]": 2,
                "mov qword [var_78h], rsi;mov rdi, qword [var_b8h];cmp rsi, rdx;ja ;mov qword [var_a8h], rdi": 2,
                "add rbx, rdi;mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.00459210": 2,
                "mov qword [var_b0h], rdx;jmp ;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rbx": 1,
                "lea rbp, [var_a8h];mov rax, qword [arg_c8h];mov rcx, qword [arg_c0h];xor edx, edx;xor ebx, ebx": 1,
                "mov qword [var_68h], rdx;mov qword [var_58h], rax;mov qword [var_88h], rcx;mov qword [var_a0h], rbx;mov qword [rsp], rcx": 1,
                "mov qword [var_88h], rcx;mov qword [var_a0h], rbx;mov qword [rsp], rcx;mov qword [var_8h], rax;lea rdx, []": 1,
                "test rax, rax;jne ;mov rax, qword [var_a0h];mov rcx, qword [var_68h];jmp ": 1,
                "test rdx, rdx;je ;mov rsi, qword [var_68h];test rsi, rsi;mov rdi, qword [var_a0h]": 1,
                "jmp ;mov qword [var_78h], rax;mov qword [var_40h], rcx;mov rax, qword [var_80h];mov qword [rsp], rax": 1,
                "mov qword [var_78h], rax;mov qword [var_40h], rcx;mov rax, qword [var_80h];mov qword [rsp], rax;mov rax, qword [var_50h]": 1,
                "test rdx, rdx;je ;mov rsi, qword [var_68h];test rsi, rsi;cmovne rdx, rsi": 1,
                "mov rdx, qword [var_78h];mov qword [var_10h], rdx;mov rdx, qword [var_40h];mov qword [var_18h], rdx;call fcn.00413cb0": 1,
                "mov rdx, qword [var_40h];mov qword [var_18h], rdx;call fcn.00413cb0;mov rax, qword [var_20h];mov rcx, qword [rax]": 1,
                "lea rdi, [rcx + rdx];cmp dword [], 0;jne ;mov rax, qword [var_70h];mov qword [rcx + rdx], rax": 1,
                "call fcn.004580f0;jmp ;mov qword [var_90h], rax;lea rax, [];mov qword [rsp], rax": 2,
                "call fcn.004580f0;jmp ;mov rcx, qword [var_88h];mov rax, qword [var_58h];xor ebx, ebx": 1,
                "jmp ;mov rcx, qword [var_88h];xor ebx, ebx;xor edx, edx;mov rax, qword [var_58h]": 1,
                "mov qword [arg_d8h], rbx;mov rbp, qword [var_a8h];add rsp, ;ret;call fcn.0042ea20": 1,
                "test rax, rax;je ;xorps xmm0, xmm0;movups xmmword [var_100h], xmm0;movups xmmword [var_110h], xmm0": 2,
                "xor eax, eax;mov rcx, qword [var_f8h];mov rdx, qword [var_70h];jmp ;mov rcx, qword gs:[]": 1,
                "mov rax, qword [var_68h];mov rcx, qword [var_d0h];mov rdx, qword [var_70h];mov qword [var_80h], rax;mov rbx, qword [var_120h]": 1,
                "mov rbx, qword [var_120h];test rbx, rbx;je ;mov rsi, qword [rbx];mov rbx, qword [rbx + 8]": 1,
                "mov qword [var_68h], r8;mov qword [var_70h], rdx;shl rax, 4;mov qword [rcx + rax + 8], rbx;lea rdi, [rcx + rax]": 1,
                "jmp ;mov qword [var_d8h], rsi;mov qword [var_78h], rbx;lea rbx, [];mov qword [rsp], rbx": 1,
                "mov rax, qword [var_30h];mov rdx, qword [var_38h];lea r8, [rax + 1];mov rax, qword [var_80h];mov rbx, qword [var_78h]": 1,
                "mov rsi, qword [var_d8h];jmp ;mov qword [var_f0h], rcx;mov qword [rsp], rcx;mov qword [var_8h], rax": 1,
                "mov qword [var_10h], rdx;call fcn.0040ad00;mov rax, qword [var_18h];lea rcx, [];mov qword [rsp], rcx": 1,
                "lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.004999d0;mov rax, qword [var_80h]": 1,
                "call fcn.004f5010;mov rax, qword [var_18h];mov rcx, qword [var_20h];mov rdx, qword [var_40h];test rdx, rdx": 1,
                "mov qword [var_c8h], rax;mov qword [var_48h], rcx;mov rbx, qword [var_a8h];xor esi, esi;jmp ": 1,
                "test r9, r9;je ;lea r10, [var_100h];cmp r10, r9;jne ": 1,
                "jne ;mov rax, qword [var_110h];mov rdx, qword [var_108h];lea rbx, [rax + 1];mov rsi, qword [var_118h]": 1,
                "mov rax, qword [var_38h];mov rcx, qword [var_30h];test rax, rax;jle ;mov qword [var_48h], rax": 1,
                "cmp byte [r10], ;jne ;inc rbx;cmp rbx, rax;jl ": 1,
                "mov rcx, qword [rdx + rcx];cmp rbx, 1;jne ;cmp byte [rcx], ;jne ": 1,
                "jne ;cmp byte [rcx], ;jne ;lea rcx, [rsi + 1];cmp rcx, r8": 1,
                "cmp rcx, r8;ja ;shl rsi, 4;mov qword [rdi + rsi + 8], 0;lea rdx, [rdi + rsi]": 1,
                "call fcn.004f09d0;mov rax, qword [var_30h];mov rcx, qword [var_28h];cmp rax, 1;jge ": 1,
                "xor edx, edx;test dl, dl;je ;cmp rax, 1;jb ": 1,
                "mov rax, rdi;mov rdi, rdx;mov rbx, rax;xor eax, eax;call fcn.004580f0": 8,
                "xor eax, eax;call fcn.004580f0;mov rdi, rbx;jmp ;mov qword [var_60h], rsi": 1,
                "cmp word [rcx], ;sete cl;test cl, cl;jne ;mov rcx, rsi": 1,
                "mov rsi, r11;jmp ;mov rsi, rdi;mov rdi, r9;mov r12, rax": 1,
                "mov qword [var_70h], rbx;mov qword [var_68h], rsi;mov qword [var_58h], r9;mov qword [var_88h], r10;lea rax, []": 1,
                "mov qword [rsp], rax;mov qword [var_8h], rdi;mov qword [var_10h], rsi;mov qword [var_18h], r8;mov qword [var_20h], r11": 1,
                "call fcn.00440d10;mov rdi, qword [var_28h];mov rax, qword [var_30h];mov r8, qword [var_38h];lea r11, [rax + 1]": 1,
                "mov qword [var_10h], rdx;mov qword [var_18h], 1;call fcn.004f0000;mov rax, qword [var_20h];inc rax": 4,
                "mov qword [rsp], 0;mov rcx, qword [arg_a8h];mov qword [var_8h], rcx;mov qword [var_10h], rax;mov rax, qword [arg_b8h]": 1,
                "setne byte [rsp + ];ret;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458f00;mov rbp, qword [rbp];mov rcx, qword [arg_60h]": 1,
                "mov qword [rdi + 8], rbx;cmp dword [], 0;jne ;mov qword [rdi], rax;cmp qword [rcx + 8], 0": 1,
                "ret;cmp qword [rcx + ], 0;jne ;cmp qword [rcx + ], 0;jne ": 1,
                "cmp dword [], 0;jne ;mov qword [rdi + ], 0;mov qword [arg_68h], rdi;mov rbp, qword [var_48h]": 1,
                "mov rdi, rdx;jmp ;cmp qword [rcx + ], 0;jne ;cmp qword [rcx + ], 0": 1,
                "mov qword [rdi + ], rbx;cmp dword [], 0;jne ;mov qword [rdi + ], rax;cmp qword [rcx + ], 0": 1,
                "mov qword [rsp + ], rax;call fcn.0040e500;mov rax, qword [rsp];mov qword [rsp + ], rax;mov rcx, qword [rsp + ]": 1,
                "ja ;cmp rax, 1;jge ;xor ecx, ecx;test cl, cl": 1,
                "add rsp, ;ret;mov rcx, rax;mov rax, qword [arg_40h];jmp ": 1,
                "mov qword [var_20h], rax;mov rax, qword [arg_40h];mov qword [rsp], rax;lea rcx, [];mov qword [var_8h], rcx": 1,
                "mov rbp, qword [var_30h];add rsp, ;ret;mov rax, qword [arg_40h];mov qword [arg_50h], rax": 1,
                "mov rcx, qword [arg_48h];cmp rax, rcx;ja ;sub rcx, rax;mov rdx, rcx": 4,
                "mov rsi, qword [rsp + ];mov rax, qword [rsp + ];mov rcx, qword [rsp + ];test rax, rax;jne ": 2,
                "mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458f00;mov rbp, qword [rbp];xorps xmm0, xmm0": 3,
                "ret;lea rax, [];mov qword [rsp], rax;mov qword [rsp + 8], rdi;mov qword [rsp + ], rsi": 2,
                "jge ;movzx ebx, byte [rax + rdx];cmp ebx, ;jge ;inc rdx": 2,
                "jge ;inc rdx;cmp ebx, ;jl ;cmp ebx, ": 2,
                "jle ;cmp ebx, ;jl ;cmp ebx, ;jle ": 4,
                "mov rbp, qword [var_28h];add rsp, ;ret;cmp ebx, ;jg ": 2,
                "ret;cmp ebx, ;jg ;cmp ebx, ;je ": 2,
                "jg ;cmp ebx, ;je ;cmp ebx, ;je ": 2,
                "cmp bl, ;jne ;mov byte [arg_18h], 1;ret;mov byte [arg_18h], 0": 2,
                "mov qword [rsp + 8], rax;call fcn.004034b0;sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp]": 1,
                "call fcn.004034b0;sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp];mov eax, dword [arg_20h]": 1,
                "mov esi, dword [rbx + rdx*8 + 8];mov dword [rbx + rdx*8 + 8], eax;jmp ;mov rbp, qword [rsp];add rsp, 8": 1,
                "int3;sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp];mov eax, dword [arg_10h]": 1,
                "je ;mov rdx, qword [arg_18h];mov ebx, eax;jmp ;mov eax, r8d": 2,
                "mov eax, dword [arg_20h];mov dword [arg_28h], eax;mov rbp, qword [rsp];add rsp, 8;ret": 2,
                "mov rax, qword [var_58h];mov rcx, qword [rax + ];mov rdx, qword [rax + 8];mov rbx, qword [rax];lea rsi, [rdx + 1]": 3,
                "movups xmmword [var_80h], xmm0;mov byte [var_68h], 4;mov rbx, qword [var_58h];mov rsi, qword [rbx + 8];mov rdi, qword [rbx]": 3,
                "cmp dword [], 0;jne ;mov qword [rdi], rax;mov rdx, qword [var_50h];mov rbx, rdi": 3,
                "jmp ;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rcx;lea rax, [var_90h]": 3,
                "mov rax, rdi;jmp ;call fcn.004580f0;jmp ;call fcn.00456090": 4,
                "jmp ;call fcn.004580f0;jmp ;call fcn.00456090;jmp fcn.004fb520": 2,
                "test r10, r10;jl ;cmp rbx, r10;ja ;cmp r10, r9": 2,
                "mov qword [var_78h], r10;mov dword [var_48h], esi;mov dword [var_4ch], edi;movzx ecx, word [rax + 2];mov qword [rsp], rdx": 2,
                "add rbx, r8;mov qword [var_8h], rbx;mov qword [var_10h], 1;mov qword [var_18h], rsi;mov word [var_20h], cx": 2,
                "mov qword [var_10h], 1;mov qword [var_18h], rsi;mov word [var_20h], cx;call fcn.004fd790;mov eax, dword [var_2ch]": 2,
                "mov dword [var_10h], ecx;mov dword [var_14h], eax;call fcn.004fd0c0;mov ecx, dword [var_18h];mov eax, dword [var_1ch]": 2,
                "cmp dword [], 0;jne ;mov rdx, qword [var_208h];mov qword [rsi + rax*8], rdx;lea rax, [rsi + rax*8]": 1,
                "jne ;mov rdx, qword [var_208h];mov qword [rsi + rax*8], rdx;lea rax, [rsi + rax*8];lea rax, [rax + 8]": 1,
                "movups xmmword [rax], xmm0;movups xmm0, xmmword [var_220h];movups xmmword [rax + ], xmm0;mov dword [arg_278h], ecx;shl ecx, 1": 1,
                "call fcn.00414a10;mov rcx, qword [var_80h];jmp ;mov qword [var_98h], rax;lea rax, []": 2,
                "xorps xmm0, xmm0;movups xmmword [var_238h], xmm0;movups xmmword [var_248h], xmm0;mov byte [var_230h], 6;mov rax, qword [rax]": 1,
                "mov qword [rsi + rax*8], rdx;lea rax, [rsi + rax*8];lea rax, [rax + 8];movups xmm0, xmmword [var_238h];movups xmmword [rax], xmm0": 1,
                "movups xmmword [rax], xmm0;movups xmm0, xmmword [var_248h];movups xmmword [rax + ], xmm0;mov dword [arg_278h], ecx;shl ecx, 1": 1,
                "mov rdx, rcx;mov rsi, rax;mov rax, rdi;mov rcx, qword [var_80h];jmp ": 1,
                "cmp cl, 6;ja ;cmp cl, 5;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.004fd0c0;int3": 1,
                "mov r8, qword [rsi];cmp qword [rsi + 8], rdi;jbe ;lea rbx, [rdi + rdi*4];mov dword [r8 + rbx*8 + 4], eax": 2,
                "ret;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r8;lea rax, [var_50h]": 2,
                "lea rax, [var_50h];mov qword [var_10h], rax;call fcn.00414a10;mov eax, dword [arg_90h];mov ecx, dword [arg_98h]": 2,
                "mov dword [arg_a4h], eax;mov rbp, qword [var_78h];add rsp, ;ret;call fcn.0042e8e0": 2,
                "call fcn.00456090;jmp fcn.004fd150;int3;int3;int3": 2,
                "jmp fcn.004fd150;int3;int3;int3;int3": 2,
                "mov qword [var_40h], rcx;mov qword [var_50h], 0;xorps xmm0, xmm0;movups xmmword [var_58h], xmm0;movups xmmword [var_68h], xmm0": 3,
                "mov dword [arg_a4h], eax;mov rbp, qword [var_78h];add rsp, ;ret;mov ebx, dword [arg_90h]": 3,
                "lea rbp, [var_80h];mov rax, qword [arg_90h];mov rcx, qword [rax];mov rcx, qword [rcx + 8];mov qword [var_48h], rcx": 3,
                "mov qword [var_48h], rcx;mov qword [var_58h], 0;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov rsi, qword [var_58h];mov qword [rbx + rdx*8], rsi;movups xmm0, xmmword [var_60h];lea rdx, [rbx + rdx*8];lea rdx, [rdx + 8]": 2,
                "movups xmmword [rdx], xmm0;movups xmm0, xmmword [var_70h];movups xmmword [rdx + ], xmm0;mov rdx, qword [rax];mov ebx, ecx": 2,
                "mov rsi, qword [rdx];cmp qword [rdx + 8], rbx;jbe ;lea rdx, [rbx + rbx*4];movzx ebx, byte [arg_a0h]": 2,
                "cmp qword [rdx + 8], rbx;jbe ;lea rdx, [rbx + rbx*4];movzx ebx, byte [arg_a0h];test bl, bl": 2,
                "mov rax, qword [arg_90h];mov rcx, qword [var_48h];jmp ;mov qword [var_50h], rdx;lea rax, []": 2,
                "mov qword [rdi], rax;mov rdx, rdi;mov rsi, rcx;mov rbx, rax;mov rax, qword [arg_90h]": 2,
                "xorps xmm0, xmm0;movups xmmword [var_68h], xmm0;movups xmmword [var_78h], xmm0;mov byte [var_60h], 7;mov rbx, qword [rcx]": 3,
                "movups xmmword [rbx], xmm0;movups xmm0, xmmword [var_78h];movups xmmword [rbx + ], xmm0;mov rcx, qword [rcx];mov ebx, edx": 2,
                "and r8d, 1;movzx edi, dil;test rdi, rdi;mov edi, 0;cmovne r8w, di": 2,
                "mov edi, 0;cmovne r8w, di;movzx edi, r8w;mov dword [rsi + rcx*8 + 8], edi;test r8w, 1": 2,
                "je ;lea rax, [rsi + rcx*8];mov byte [rax], 8;mov dword [arg_c0h], edx;shl edx, 1": 2,
                "mov qword [var_8h], r8;mov qword [var_10h], rsi;mov qword [var_18h], r10;mov qword [var_20h], r9;call fcn.00440d10": 1,
                "mov qword [var_10h], rsi;mov qword [var_18h], r10;mov qword [var_20h], r9;call fcn.00440d10;mov rax, qword [var_28h]": 1,
                "call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.004fd790;int3": 1,
                "jne ;mov ebx, dword [rdx];cmp dword [rdx + 4], ebx;je ;cmp cl, 4": 2,
                "mov eax, dword [rcx + 8];mov dword [rsp], eax;call fcn.00463f00;mov eax, dword [var_8h];mov rcx, qword [arg_58h]": 2,
                "jmp ;xor ecx, ecx;jmp ;mov rax, qword [arg_50h];movzx ecx, word [rax]": 1,
                "movzx edx, word [rcx];and edx, ;mov word [rax + 2], dx;jmp ;mov qword [arg_60h], 0": 1,
                "mov word [rax + 2], dx;jmp ;mov qword [arg_60h], 0;mov rbp, qword [var_40h];add rsp, ": 1,
                "movzx edi, word [rdx + 2];and edi, 1;cmp si, di;jne ;mov qword [var_68h], rbx": 1,
                "shl rdi, 2;mov qword [var_10h], rdi;call fcn.00459210;mov rax, qword [var_50h];mov rcx, qword [var_60h]": 1,
                "mov qword [var_10h], rdi;call fcn.00459210;mov rax, qword [var_50h];mov rcx, qword [var_60h];mov qword [rcx + ], rax": 1,
                "jl ;mov rdx, qword [var_68h];mov qword [rdx + ], 1;mov qword [rdx + ], 2;lea rax, [rdx + ]": 1,
                "mov rcx, qword [var_68h];mov qword [rcx + ], rax;mov qword [rdx + ], rcx;mov byte [arg_a0h], 0;mov rbp, qword [var_80h]": 1,
                "call fcn.004580f0;lea rdi, [rdx + ];mov rax, rcx;call fcn.004580f0;jmp ": 2,
                "call fcn.004580f0;jmp ;lea rdi, [rcx + ];mov rax, qword [var_78h];call fcn.004580f0": 1,
                "call fcn.004580f0;jmp ;mov qword [var_48h], rdi;mov qword [var_70h], r11;mov qword [var_40h], rsi": 1,
                "lea rbp, [var_20h];mov rcx, qword [arg_30h];mov rdi, qword [rcx + ];test rdi, rdi;je ": 6,
                "movzx ecx, word [arg_3ch];mov word [rax + 2], cx;test cx, 1;jne ;mov ecx, dword [arg_38h]": 2,
                "call fcn.004580f0;mov rax, rdx;jmp ;mov qword [var_18h], rax;mov eax, dword [arg_38h]": 2,
                "call fcn.004580f0;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rdx;call fcn.00414f80": 3,
                "call fcn.00463f00;mov eax, dword [var_8h];mov ecx, dword [arg_28h];jmp ;mov dword [var_10h], eax": 3,
                "mov dword [arg_30h], ecx;mov rbp, qword [var_18h];add rsp, ;ret;mov dword [arg_30h], eax": 3,
                "je ;mov qword [var_18h], rdi;mov rax, qword [rdi + ];cmp dword [], 0;jne ": 4,
                "mov rcx, qword [arg_30h];jmp ;call fcn.00456090;jmp fcn.004fe560;int3": 4,
                "add rbx, rsi;xor edx, ;mov rsi, qword [arg_90h];test rsi, rsi;je ": 5,
                "jl ;cmp rsi, rax;ja ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "jne ;mov rax, qword [arg_68h];mov qword [rdi + ], rax;xorps xmm0, xmm0;movups xmmword [arg_98h], xmm0": 8,
                "mov rdi, rcx;mov rdx, rax;mov rax, qword [arg_68h];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov word [var_1eh], dx;mov rdi, qword [rcx + ];test rdi, rdi;je ;mov qword [var_30h], rdi": 2,
                "mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458bbd;mov rbp, qword [rbp];mov rsi, qword [var_30h]": 2,
                "mov r11, qword [arg_58h];mov qword [rsi + ], r11;mov r12, qword [arg_60h];mov qword [rsi + ], r12;mov word [rsi + 2], dx": 2,
                "mov qword [rsi + ], 1;mov qword [rsi + ], 1;lea rdx, [rsi + ];cmp dword [], 0;jne ": 1,
                "jne ;mov qword [rsi + 8], rdx;mov rdi, qword [rsi + 8];cmp dword [], 0;jne ": 1,
                "mov rcx, qword [var_28h];mov rdx, qword [var_20h];cmp rbx, rdx;jge ;mov qword [var_18h], rbx": 1,
                "mov qword [var_18h], rbx;mov rdx, qword [rcx + rbx*8];mov qword [rsp], rdx;mov qword [var_8h], rax;call fcn.004feca0": 1,
                "mov rbp, qword [var_30h];add rsp, ;ret;mov byte [arg_50h], 1;mov rbp, qword [var_30h]": 2,
                "mov rdx, qword [rax + ];mov rbx, qword [rax + ];mov rsi, rbx;jmp ;dec rbx": 2,
                "jl ;mov qword [rax + ], r8;test rsi, rsi;jne ;mov rdi, qword [rax + ]": 2,
                "add rsp, ;ret;lea rdx, [rax + ];mov rbx, rdi;mov rdi, rdx": 2,
                "mov rax, qword [var_28h];mov rcx, qword [arg_48h];mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.004fdcd0": 2,
                "dec rsi;test rsi, rsi;jle ;mov r8, qword [rdx + rsi*8 - 8];cmp byte [r8], ": 3,
                "cmp rsi, rax;ja ;sub rax, rsi;sub rbx, rsi;mov r8, rbx": 3,
                "ja ;sub rax, rsi;sub rbx, rsi;mov r8, rbx;neg rbx": 3,
                "jl ;mov qword [rcx + ], r9;test rax, rax;jg ;jne ": 3,
                "mov qword [var_8h], rbx;call fcn.00414f80;mov rcx, qword [arg_60h];jmp ;lea rax, []": 3,
                "mov rcx, qword [arg_60h];mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.004fdcd0;mov rax, qword [var_10h]": 2,
                "mov rcx, qword [arg_60h];mov rdx, qword [var_40h];mov r8, qword [var_38h];jmp ;call fcn.0042ea20": 2,
                "je ;mov rbp, qword [var_68h];add rsp, ;ret;lea rcx, [rax + ]": 3,
                "jne ;cmp dword [rdx + 4], ;jne ;xorps xmm0, xmm0;movups xmmword [rbx + ], xmm0": 3,
                "cmp dword [rdx + 4], ;jne ;xorps xmm0, xmm0;movups xmmword [rbx + ], xmm0;mov rcx, qword gs:[]": 1,
                "jne ;cmp dword [rdx + 4], 9;jne ;cmp dword [rdx + 8], ;jne ": 2,
                "mov qword [var_10h], rcx;call fcn.00459210;mov rax, qword [var_48h];mov rcx, qword [arg_78h];mov qword [rcx + ], rax": 2,
                "mov rax, qword [var_40h];mov qword [rcx + ], rax;cmp dword [], 0;jne ;mov rax, qword [var_58h]": 2,
                "jne ;mov rax, qword [var_58h];mov qword [rcx + ], rax;jmp ;mov rdi, qword [var_60h]": 2,
                "mov rdi, qword [var_60h];mov rax, qword [var_58h];call fcn.004580f0;jmp ;mov qword [var_50h], rdx": 2,
                "mov rax, qword [var_58h];call fcn.004580f0;jmp ;mov qword [var_50h], rdx;lea rdx, []": 2,
                "mov qword [var_10h], 0;mov qword [var_18h], 2;mov qword [var_20h], rcx;call fcn.00440d10;mov rax, qword [var_28h]": 2,
                "mov rax, rsi;jmp ;call fcn.00456090;jmp fcn.004ff150;int3": 2,
                "lea rbp, [rsp - ];call fcn.00458bbd;mov rbp, qword [rbp];mov rax, qword [var_70h];movzx esi, byte [arg_d0h]": 2,
                "je ;mov r11, qword [rax + 8];mov r12, qword [rax + ];lea r13, [r12 + 1];mov r14, qword [rax + ]": 2,
                "lea r13, [r12 + 1];mov qword [rax + ], r13;lea r13, [r11 + r12*8];cmp dword [], 0;jne ": 2,
                "mov r12, rcx;mov r11, rax;mov rax, qword [var_78h];mov rcx, qword [arg_c0h];jmp ": 2,
                "cmp dword [], 0;jne ;mov rdx, qword [var_88h];mov qword [rcx + 8], rdx;mov rdx, qword [arg_b0h]": 1,
                "mov qword [rbx + ], rax;mov qword [rdx + ], rbx;mov rax, rcx;mov rcx, qword [arg_c0h];mov rbx, qword [var_98h]": 1,
                "mov qword [rdx + ], rbx;mov rax, rcx;mov rcx, qword [arg_c0h];mov rbx, qword [var_98h];movzx esi, byte [arg_d0h]": 1,
                "cmp sil, ;je ;mov qword [arg_d8h], rax;mov rbp, qword [var_a0h];add rsp, ": 1,
                "mov rsi, qword [rax + 8];mov qword [rsp], rdx;mov qword [var_8h], rsi;mov qword [var_10h], rcx;mov qword [var_18h], rbx": 1,
                "mov rax, r8;call fcn.004580f0;mov rax, r9;jmp ;mov rcx, rdi": 1,
                "mov rcx, qword [arg_c0h];mov rdx, qword [arg_b0h];mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 1,
                "jmp ;lea rcx, [rsi + 1];mov rdx, qword [var_70h];mov rsi, qword [arg_198h];movzx r14d, word [var_42h]": 1,
                "mov rsi, qword [arg_198h];movzx r14d, word [var_42h];mov qword [var_60h], rcx;mov rcx, qword [arg_1a0h];mov rsi, qword [var_60h]": 1,
                "test rsi, rsi;jle ;cmp rsi, r10;ja ;mov rcx, qword [var_70h]": 1,
                "mov r14, qword [r15];cmp byte [r14], 3;je ;xor r14d, r14d;xor r15d, r15d": 1,
                "mov rax, qword [var_b8h];jmp ;mov rcx, qword [var_48h];movzx edx, word [var_42h];cmp rdi, r8": 1,
                "mov r11, qword [var_70h];cmp r9, r11;ja ;lea r12, [rbx + r13*8];cmp dword [], 0": 1,
                "mov qword [var_160h], r8;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rbx;mov qword [var_10h], r13": 1,
                "mov qword [var_170h], rdi;mov qword [var_f0h], r9;mov qword [rsp], rdi;mov qword [var_8h], r12;shl r11, 2": 1,
                "mov qword [rcx + ], rdx;cmp dword [], 0;jne ;mov rdx, qword [var_170h];mov qword [rcx + ], rdx": 1,
                "mov r12, qword [arg_1a0h];mov r13, qword [var_a8h];mov rax, r10;mov rcx, qword [var_138h];mov rbx, r11": 1,
                "mov rdi, r13;mov r9, qword [var_80h];cmp r8, rdi;jge ;cmp r8, rsi": 1,
                "jae ;mov qword [var_f0h], r8;mov rcx, qword [rdx + r8*8];mov qword [rsp], rbx;mov qword [var_8h], rcx": 1,
                "mov rax, qword [var_18h];mov rcx, qword [var_f0h];mov rdx, qword [arg_198h];lea rdi, [rdx + rcx*8];cmp dword [], 0": 1,
                "sub rdi, r8;mov qword [var_10h], rdi;mov qword [var_18h], rsi;mov byte [var_20h], ;call fcn.004ff360": 1,
                "jne ;mov byte [rax], 2;mov qword [arg_70h], rax;mov rbp, qword [var_48h];add rsp, ": 1,
                "jbe ;cmp dword [], 0;jne ;mov qword [rdi], rax;cmp byte [rax], 2": 1,
                "lea rax, [r8 - 1];mov qword [var_28h], rax;lea rax, [rbx - 1];mov qword [var_30h], rax;call fcn.00414d20": 1,
                "mov qword [rbx + ], rdx;mov rax, qword [rcx + ];mov rdx, qword [rcx + 8];mov rsi, qword [rcx + ];cmp rax, 1": 2,
                "mov byte [rax], 2;xorps xmm0, xmm0;movups xmmword [rax + ], xmm0;cmp dword [], 0;jne ": 2,
                "jne ;mov rcx, qword [rcx];mov rdx, qword [arg_58h];mov rbx, qword [rdx + ];cmp dword [], 0": 2,
                "mov rsi, rax;mov rax, rbx;call fcn.004580f0;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "call fcn.0040d880;mov rax, qword [var_8h];jmp ;lea rdi, [rcx + ];call fcn.004580f0": 1,
                "mov rax, qword [var_8h];jmp ;lea rdi, [rcx + ];call fcn.004580f0;lea rdi, [rdx + ]": 1,
                "mov rax, qword [var_8h];mov byte [rax], 3;movzx ecx, word [arg_60h];mov word [rax + 2], cx;mov qword [rax + ], 0": 2,
                "mov byte [rax], 3;movzx ecx, word [arg_60h];mov word [rax + 2], cx;mov qword [rax + ], 0;mov qword [rax + ], 2": 2,
                "mov qword [rsp], 0;mov qword [var_8h], rdx;mov qword [var_10h], rcx;call fcn.00444ef0;mov rax, qword [var_28h]": 2,
                "jmp ;call fcn.00456090;jmp fcn.00501410;int3;int3": 2,
                "mov r11, rdx;mov rdx, rcx;mov rcx, r11;test rcx, rcx;je ": 2,
                "mov byte [var_77h], dil;movzx r10d, byte [rdx];cmp r10b, ;ja ;cmp r10b, ": 2,
                "ja ;cmp r10b, ;ja ;cmp r10b, ;jne ": 2,
                "cmp r10b, ;jne ;movzx r8d, word [rax];test r8w, ;je ": 4,
                "sar rcx, ;and rcx, 1;mov rbx, qword [var_f0h];add rcx, rbx;movzx eax, byte [var_77h]": 2,
                "mov rbx, qword [var_20h];mov rsi, qword [var_18h];test rdx, rdx;jne ;mov qword [var_78h], rbx": 2,
                "add rsp, ;ret;cmp r10b, ;je ;mov rcx, qword gs:[]": 1,
                "and rdx, 1;mov r9, qword [var_f0h];lea rcx, [r9 + rdx];mov rdx, r8;movzx eax, byte [var_77h]": 2,
                "mov edi, ;mov byte [var_77h], dil;mov qword [rsp], rax;mov byte [var_8h], dil;xorps xmm0, xmm0": 1,
                "mov qword [var_28h], rcx;lea rbx, [rcx - 1];mov rsi, rbx;neg rbx;sar rbx, ": 1,
                "mov rax, qword [arg_60h];test rax, rax;jne ;mov qword [arg_68h], 0;mov qword [arg_70h], 0": 1,
                "mov byte [arg_88h], 0;mov rbp, qword [var_40h];add rsp, ;ret;mov rcx, qword [arg_58h]": 1,
                "je ;test rdx, rdx;je ;cmp byte [rcx], ;je ": 1,
                "cmp byte [rcx], ;je ;mov rbx, rax;test rdx, rdx;jne ": 1,
                "mov qword [arg_68h], rbx;mov qword [arg_70h], rax;xorps xmm0, xmm0;movups xmmword [arg_78h], xmm0;mov byte [arg_88h], 0": 1,
                "mov rsi, rbx;neg rbx;sar rbx, ;and rbx, 1;lea rdi, [rbx + rcx]": 1,
                "mov qword [var_78h], rbp;lea rbp, [var_78h];mov rax, qword [arg_98h];cmp rax, 4;jle ": 2,
                "neg rdx;sar rdx, ;and rdx, 2;add rdx, rcx;mov rsi, qword [arg_88h]": 2,
                "mov rdx, rsi;mov rbx, rcx;mov rcx, qword [arg_90h];mov rsi, qword [arg_88h];test rbx, rbx": 2,
                "test rdx, rdx;jge ;movzx edx, byte [var_3dh];test dl, dl;je ": 1,
                "jmp ;cmp eax, ;jne ;movzx eax, word [var_3eh];or eax, 8": 1,
                "mov rdx, qword [var_48h];mov ebx, 1;jmp ;xorps xmm0, xmm0;movups xmmword [arg_a0h], xmm0": 1,
                "mov rbp, qword [var_78h];add rsp, ;ret;mov rcx, rbx;jmp ": 1,
                "jmp ;mov qword [rsp], rcx;mov qword [var_8h], rax;mov dword [var_10h], ;call fcn.004f0320": 1,
                "test rcx, rcx;jl ;mov rdx, qword [arg_98h];cmp rcx, rdx;ja ": 1,
                "neg rcx;sar rcx, ;and rcx, rdx;mov rdx, qword [arg_90h];add rcx, rdx": 1,
                "add rsp, ;ret;lea rdi, [rax + ];mov rax, qword [var_70h];call fcn.004580f0": 2,
                "jl ;cmp ebx, ;setle sil;test sil, sil;je ": 1,
                "cmp ebx, ;jl ;cmp ebx, ;setle bl;jmp ": 1,
                "jmp ;xor esi, esi;jmp ;mov qword [rsp], rcx;mov qword [var_8h], rax": 1,
                "mov ebx, dword [var_18h];mov rdx, qword [var_20h];mov rax, qword [arg_40h];mov rcx, qword [arg_38h];jmp ": 1,
                "and rax, 1;add rcx, rax;mov rax, rsi;test rax, rax;je ": 2,
                "jb ;cmp sil, ;jbe ;mov rsi, rdx;sub rdx, rax": 2,
                "mov rdx, rdi;jmp ;mov qword [arg_28h], 0;xorps xmm0, xmm0;movups xmmword [arg_30h], xmm0": 2,
                "mov qword [arg_28h], 0;xorps xmm0, xmm0;movups xmmword [arg_30h], xmm0;mov byte [arg_40h], 0;mov rbp, qword [rsp]": 4,
                "movups xmmword [arg_30h], xmm0;mov byte [arg_40h], 0;mov rbp, qword [rsp];add rsp, 8;ret": 4,
                "cmp cl, 3;je ;cmp cl, 4;jne ;mov ecx, dword [arg_18h]": 3,
                "cmp qword [rax + ], 1;jne ;mov eax, dword [arg_18h];cmp dword [rcx], eax;sete al": 3,
                "jne ;mov eax, dword [arg_18h];cmp dword [rcx], eax;sete al;mov byte [arg_20h], al": 3,
                "cmp cl, 6;jne ;mov byte [arg_20h], 1;mov rbp, qword [rsp];add rsp, 8": 3,
                "call fcn.00503830;cmp byte [var_8h], 0;je ;xorps xmm0, xmm0;movups xmmword [arg_30h], xmm0": 3,
                "call fcn.00456090;jmp fcn.005034d0;int3;int3;int3": 3,
                "movzx ecx, byte [rax];cmp cl, 4;ja ;cmp cl, 3;jne ": 4,
                "cmp word [rcx + 2], dx;jne ;mov rbp, qword [var_50h];add rsp, ;ret": 4,
                "mov qword [var_8h], rcx;mov qword [var_10h], rax;mov dword [var_18h], ebx;mov word [var_1ch], si;call fcn.00506290": 3,
                "call fcn.00506290;mov rax, qword [var_20h];mov rcx, qword [var_30h];mov rdx, qword [var_28h];mov rbx, qword [arg_60h]": 3,
                "mov rcx, qword [rcx + ];mov qword [rsp], rsi;mov qword [var_8h], rbx;mov qword [var_10h], rdx;mov qword [var_18h], rdi": 3,
                "movzx esi, byte [rax];cmp sil, 3;jne ;cmp qword [rax + ], 1;jne ": 3,
                "mov qword [rcx + ], rax;mov byte [arg_50h], 1;mov rbp, qword [var_38h];add rsp, ;ret": 2,
                "mov qword [var_10h], rsi;mov qword [var_20h], r8;cmp rdx, 3;jl ;lea rdi, [rdx - 3]": 1,
                "cmp r9b, 6;sete r10b;jmp ;cmp sil, 4;jne ": 1,
                "mov rax, qword [arg_28h];mov rcx, qword [rax + ];dec rcx;test rcx, rcx;jl ": 2,
                "test rsi, rsi;jl ;mov qword [rax + ], rsi;cmp byte [rcx], ;jne ": 2,
                "jl ;mov qword [rax + ], rsi;cmp byte [rcx], ;jne ;movzx edx, word [rcx + 2]": 2,
                "mov qword [arg_38h], rdi;mov rbp, qword [var_18h];add rsp, ;ret;lea rcx, [rdi + ]": 2,
                "add eax, ;mov ecx, 1;jmp ;inc rcx;lea eax, [rdx + rax*8]": 2,
                "cmp dl, ;jb ;cmp dl, ;jbe ;mov dword [arg_78h], eax": 2,
                "mov qword [arg_88h], rsi;xorps xmm0, xmm0;movups xmmword [arg_90h], xmm0;mov rbp, qword [var_50h];add rsp, ": 3,
                "mov rax, qword [arg_68h];mov qword [rdi + ], rax;mov dword [arg_78h], 0;xorps xmm0, xmm0;movups xmmword [arg_80h], xmm0": 2,
                "mov qword [rdi + ], rax;mov dword [arg_78h], 0;xorps xmm0, xmm0;movups xmmword [arg_80h], xmm0;lea rax, []": 2,
                "call fcn.004580f0;jmp ;cmp eax, ;jge ;cmp eax, ": 1,
                "setle cl;test cl, cl;je ;mov ecx, 1;jmp ": 1,
                "mov dword [arg_78h], ;mov qword [arg_80h], rbx;mov qword [arg_88h], rsi;mov qword [arg_90h], rdx;mov qword [arg_98h], rcx": 3,
                "mov qword [arg_88h], rsi;mov qword [arg_90h], rdx;mov qword [arg_98h], rcx;mov rbp, qword [var_50h];add rsp, ": 4,
                "jne ;test rsi, rsi;je ;mov qword [rsp], rbx;mov qword [var_8h], rsi": 1,
                "mov qword [rsp], rbx;mov qword [var_8h], rsi;call fcn.00507420;mov eax, dword [var_10h];mov rcx, qword [var_30h]": 1,
                "mov rax, qword [var_30h];mov rcx, qword [var_28h];mov rdx, qword [var_18h];mov rbx, qword [var_20h];mov esi, dword [var_10h]": 1,
                "mov rsi, qword [arg_68h];mov qword [rsp], rsi;mov rsi, qword [arg_80h];mov qword [var_8h], rsi;mov rsi, qword [arg_88h]": 2,
                "mov qword [var_8h], rsi;mov rsi, qword [arg_88h];mov qword [var_10h], rsi;mov rsi, qword [arg_90h];mov qword [var_18h], rsi": 2,
                "add rax, rdx;mov qword [arg_b0h], rax;mov qword [arg_b8h], rcx;mov rbp, qword [var_58h];add rsp, ": 2,
                "mov qword [arg_b0h], rax;mov qword [arg_b8h], rcx;mov rbp, qword [var_58h];add rsp, ;ret": 2,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.005046e0;int3": 2,
                "mov qword [var_58h], rax;lea rcx, [];mov qword [rsp], rcx;mov rcx, qword [];mov qword [var_8h], rcx": 3,
                "call fcn.00413370;mov rax, qword [arg_88h];mov rcx, qword [var_58h];sub rax, rcx;mov rdx, rax": 3,
                "mov rsi, qword [var_20h];mov rdi, qword [rsi + 8];mov r8, qword [rsi];mov r9, qword [rsi + ];mov rsi, qword [rsi + ]": 3,
                "mov qword [arg_a8h], rdx;mov qword [arg_b0h], rcx;mov qword [arg_b8h], rax;mov rax, qword [arg_80h];mov qword [arg_c0h], rax": 2,
                "sub rsp, ;mov qword [var_48h], rbp;lea rbp, [var_48h];mov rax, qword [arg_58h];movzx ecx, word [rax]": 3,
                "mov qword [var_8h], rax;mov rax, qword [arg_70h];mov qword [var_10h], rax;mov rax, qword [arg_80h];mov qword [var_18h], rax": 4,
                "mov qword [arg_a8h], rdx;mov rbp, qword [var_48h];add rsp, ;ret;mov rax, qword [arg_60h]": 2,
                "jne ;mov qword [rbx + ], rax;mov qword [rsp], rdi;call fcn.00506150;mov rax, qword [var_8h]": 2,
                "mov qword [var_28h], rdx;call fcn.00506790;mov rax, qword [var_30h];mov rcx, qword [var_38h];mov rdx, qword [var_40h]": 1,
                "call fcn.004580f0;jmp ;call fcn.00456090;jmp fcn.00504b90;mov rcx, qword gs:[]": 1,
                "call fcn.00456090;jmp fcn.00504b90;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 1,
                "cmp rcx, 2;jl ;mov rdx, qword [arg_c8h];cmp byte [rdx], ;jne ": 2,
                "cmp byte [rdx], ;jne ;movzx ebx, byte [rdx + 1];cmp bl, ;je ": 2,
                "neg r8;dec rsi;mov r9, rsi;neg rsi;sar rsi, ": 2,
                "mov qword [arg_f8h], rdx;mov qword [arg_100h], rcx;mov rax, qword [var_80h];mov qword [arg_108h], rax;mov rax, qword [var_50h]": 2,
                "jmp ;test rsi, rsi;je ;mov qword [var_a8h], rsi;mov rax, qword [rcx + ]": 1,
                "call fcn.00506150;mov rax, qword [var_18h];mov rcx, qword [var_10h];mov rdx, qword [var_8h];mov rbx, qword [var_58h]": 1,
                "mov qword [var_20h], rcx;mov qword [var_28h], rax;call fcn.00506950;mov rcx, qword [var_38h];mov rdx, qword [var_30h]": 1,
                "mov qword [var_28h], rax;call fcn.00506950;mov rcx, qword [var_38h];mov rdx, qword [var_30h];mov rax, qword [var_40h]": 1,
                "mov rcx, qword [var_38h];mov rdx, qword [var_30h];mov rax, qword [var_40h];jmp ;mov rax, rdx": 1,
                "mov qword [rdi + ], rcx;cmp dword [], 0;jne ;mov rax, qword [arg_c8h];mov qword [rdi + ], rax": 1,
                "mov qword [var_8h], rcx;mov qword [var_10h], rdx;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 2,
                "mov qword [var_a0h], r8;mov r9, qword [arg_e0h];mov rdi, qword [r9 + ];test rdi, rdi;je ": 1,
                "add r8, qword [rax + ];mov qword [rax + ], 2;movabs r10, ;mov qword [r8], r10;mov r8, ": 1,
                "mov rbx, r8;mov rdx, rax;mov rax, qword [var_b8h];mov r8, qword [var_78h];test rbx, rbx": 1,
                "mov rbx, qword [var_30h];mov rsi, qword [var_60h];mov rdi, qword [var_58h];mov r8, qword [var_50h];test rdi, rdi": 1,
                "mov rdi, qword [var_58h];mov r8, qword [var_50h];test rdi, rdi;jne ;test rbx, rbx": 1,
                "jmp ;mov rax, qword [arg_e0h];mov qword [rsp], rax;mov rcx, qword [var_a8h];mov qword [var_8h], rcx": 1,
                "mov rcx, qword [var_a8h];mov qword [var_8h], rcx;mov rdx, qword [var_80h];mov qword [var_10h], rdx;mov rbx, qword [arg_e8h]": 1,
                "mov qword [var_18h], rbx;mov rsi, qword [arg_f0h];mov qword [var_20h], rsi;call fcn.00504530;mov eax, dword [var_28h]": 1,
                "mov dword [var_18h], ecx;mov dword [var_1ch], eax;call fcn.00506380;mov rax, qword [var_30h];mov rcx, qword [var_28h]": 1,
                "mov dword [var_18h], ecx;mov dword [var_1ch], eax;call fcn.005064d0;mov rax, qword [var_30h];mov rcx, qword [var_28h]": 1,
                "mov rbx, qword [var_38h];mov rsi, qword [var_30h];test rdx, rdx;jne ;mov ecx, dword [var_6ch]": 1,
                "jne ;mov ecx, dword [var_6ch];cmp eax, ecx;jge ;mov rax, qword [var_80h]": 1,
                "mov ecx, dword [var_6ch];cmp eax, ecx;jge ;mov rax, qword [var_80h];mov rcx, rax": 1,
                "mov qword [rsp], rax;mov rax, qword [arg_20h];mov qword [var_8h], rax;call fcn.004999d0;mov rax, qword [arg_20h]": 1,
                "add rsp, ;ret;mov qword [arg_28h], rax;mov qword [arg_30h], rcx;mov qword [arg_38h], rdx": 1,
                "ud2;call fcn.00456090;jmp fcn.00506150;int3;int3": 1,
                "mov dword [var_18h], eax;mov dword [var_1ch], eax;call fcn.00506380;mov rax, qword [var_30h];mov rcx, qword [var_28h]": 2,
                "mov rbp, qword [var_38h];add rsp, ;ret;call fcn.00456090;jmp fcn.00506290": 2,
                "mov qword [var_10h], rax;mov qword [var_18h], rdi;mov qword [var_20h], rsi;call fcn.00440d10;mov rcx, qword [var_28h]": 3,
                "mov qword [var_20h], rsi;call fcn.00440d10;mov rcx, qword [var_28h];mov rax, qword [var_30h];mov rdi, qword [var_38h]": 3,
                "cmp eax, ;jl ;mov rdx, qword [arg_58h];mov rbx, qword [arg_50h];mov rsi, qword [arg_60h]": 4,
                "mov qword [var_8h], rdx;mov qword [var_10h], rcx;mov dword [var_18h], eax;mov dword [var_1ch], eax;call fcn.00506380": 3,
                "mov dword [var_18h], eax;mov dword [var_1ch], eax;call fcn.00506380;mov rax, qword [var_20h];mov qword [arg_50h], rax": 6,
                "call fcn.00463f00;mov eax, dword [var_8h];mov rcx, qword [arg_60h];mov rdx, qword [arg_58h];mov rbx, qword [arg_50h]": 6,
                "cmp eax, ecx;jg ;mov dword [var_3ch], eax;mov qword [rsp], rbx;mov qword [var_8h], rdx": 3,
                "call fcn.00506380;mov rbx, qword [var_20h];mov rdx, qword [var_28h];mov rsi, qword [var_30h];mov ecx, dword [arg_6ch]": 3,
                "mov qword [rsp], rsi;mov qword [var_8h], rbx;mov qword [var_10h], rdx;mov dword [var_18h], r8d;mov dword [var_1ch], eax": 5,
                "mov rax, qword [arg_70h];mov rcx, qword [arg_68h];cmp rdi, rax;jge ;jae ": 5,
                "ud2;call fcn.00456090;jmp fcn.00506790;int3;int3": 2,
                "sub rsp, ;mov qword [var_48h], rbp;lea rbp, [var_48h];mov rax, qword [arg_78h];mov rcx, qword [arg_70h]": 3,
                "mov r9d, dword [rcx + rdi*4 + 4];cmp rdi, rax;jae ;mov r10d, dword [rcx + rdi*4];dec r10d": 3,
                "dec r10d;cmp r8d, r10d;jg ;mov qword [var_40h], rdi;mov dword [var_3ch], r9d": 3,
                "jg ;mov qword [var_40h], rdi;mov dword [var_3ch], r9d;mov qword [rsp], rbx;mov qword [var_8h], rsi": 3,
                "mov rdi, qword [arg_90h];xor r8d, r8d;xor r9d, r9d;jmp ;add rcx, 6": 3,
                "mov qword [var_58h], rax;xor edx, edx;jmp ;add rcx, ;mov r9d, r8d": 3,
                "jle ;lea r8d, [r10 + 1];inc rdx;cmp rdx, rax;jl ": 2,
                "mov r11d, r12d;cmp r11d, r10d;jg ;lea r12d, [r11 - 1];cmp r9d, r12d": 2,
                "mov qword [rsp], rsi;mov qword [var_8h], rbx;mov qword [var_10h], rdi;mov dword [var_18h], r9d;mov dword [var_1ch], r12d": 2,
                "mov dword [var_18h], r9d;mov dword [var_1ch], r12d;call fcn.00506380;mov rsi, qword [var_20h];mov rbx, qword [var_28h]": 2,
                "mov rcx, qword [var_60h];mov rdx, qword [var_50h];mov r8d, dword [var_44h];mov r10d, dword [var_48h];mov r11d, dword [var_38h]": 2,
                "mov r10d, dword [var_48h];mov r11d, dword [var_38h];jmp ;mov r8d, r9d;jmp ": 2,
                "add rsp, ;ret;mov dword [var_44h], esi;mov qword [var_48h], rbx;lea rsi, []": 2,
                "shl rdx, 1;cmp rdx, rcx;jae ;mov rdx, qword [rsp + ];mov rsi, rdx": 1,
                "lea rbx, [rsi + rsi];lea rbx, [rbx + 1];cmp rbx, rcx;jae ;mov eax, dword [rax + rbx*4]": 1,
                "lea rdi, [rdi + 1];cmp rdi, rax;jae ;mov r8, rdx;shl rdx, 1": 1,
                "shl rdx, 1;mov r9d, dword [rcx + rdi*4];cmp rdx, rax;jae ;mov edx, dword [rcx + r8*8]": 1,
                "cmp rbx, rax;jae ;mov r10, rsi;shl rsi, 1;mov r11d, dword [rcx + rbx*4]": 1,
                "mov r11d, dword [rcx + rbx*4];cmp rsi, rax;jae ;mov eax, dword [rcx + r10*8];mov dword [rcx + r8*8], eax": 1,
                "mov rax, qword [var_18h];cmp dword [var_10h], ;jne ;cmp rax, 1;je ": 2,
                "mov rcx, qword [arg_38h];mov qword [rdi + ], rcx;cmp dword [], 0;jne ;mov rax, qword [arg_30h]": 3,
                "mov rax, qword [arg_30h];mov qword [rsp], rax;mov rcx, qword [arg_38h];mov qword [var_8h], rcx;call fcn.00462c90": 2,
                "cmp rcx, 1;je ;mov rdx, qword [arg_38h];cmp rcx, rdx;ja ": 2,
                "neg rdx;sar rdx, ;and rcx, rdx;mov rdx, qword [arg_30h];add rcx, rdx": 2,
                "jae ;jae ;shl rdx, 4;mov rax, qword [rcx + rdx];mov rcx, qword [rcx + rdx + 8]": 2,
                "ret;xorps xmm0, xmm0;movups xmmword [rsp + ], xmm0;mov rbp, qword [rsp];add rsp, 8": 2,
                "movups xmmword [rsp + ], xmm0;mov rbp, qword [rsp];add rsp, 8;ret;call fcn.0042e8e0": 2,
                "lea rbx, [rdx + rdx*4];lea rdx, [rax + rbx*8];movzx ebx, byte [rdx];cmp bl, 6;jne ": 3,
                "jb ;jmp ;cmp bl, 2;je ;mov qword [arg_20h], rdx": 3,
                "ja ;mov edx, 7;cmp dl, 7;jne ;cmp qword [rax + ], 1": 3,
                "cmp qword [rax + ], 1;jne ;xorps xmm0, xmm0;movups xmmword [var_30h], xmm0;movups xmmword [var_40h], xmm0": 3,
                "mov qword [var_28h], rax;mov eax, dword [rdx];lea rcx, [var_30h];mov qword [rsp], rcx;mov dword [var_8h], eax": 3,
                "mov dword [var_8h], eax;call fcn.00507640;mov rax, qword [var_10h];movzx ecx, byte [rax];lea edx, [rcx - 8]": 3,
                "mov qword [rsp], rbp;lea rbp, [rsp];mov rax, qword [arg_10h];mov ecx, dword [rax + ];mov rdx, qword [rax + 8]": 3,
                "jmp ;lea rsi, [rcx + rcx*4];lea rcx, [rax + rsi*8];movzx esi, byte [rcx];cmp sil, 3": 3,
                "jne ;mov ecx, dword [rcx + 4];cmp rcx, rdx;jb ;jmp ": 3,
                "cmp sil, 6;je ;jmp ;mov byte [arg_18h], ;mov rbp, qword [rsp]": 3,
                "mov dword [rsp + 8], eax;call fcn.005078f0;cmp qword [rsp + ], ;setne byte [rsp + ];mov rbp, qword [rsp + ]": 3,
                "mov rdx, qword [rax + ];cmp rdx, 2;jle ;cmp rdx, 4;jne ": 4,
                "cmp rdx, 2;jle ;cmp rdx, 4;jne ;mov eax, dword [arg_30h]": 4,
                "add rbx, 2;cmp rbx, rdx;jge ;jae ;mov esi, dword [rcx + rbx*4]": 4,
                "mov esi, dword [rcx + rbx*4 + 4];cmp eax, esi;jg ;mov rax, rbx;shr rbx, ": 4,
                "mov qword [arg_38h], ;mov rbp, qword [var_18h];add rsp, ;ret;cmp rdx, 6": 3,
                "mov rax, rdx;shr rdx, 1;mov ebx, dword [arg_30h];xor esi, esi;jmp ": 3,
                "je ;cmp rdx, 1;jne ;mov ecx, dword [rcx];mov edx, dword [arg_30h]": 2,
                "mov edx, dword [arg_30h];cmp eax, ecx;je ;cmp eax, edx;jne ": 2,
                "mov eax, dword [arg_30h];cmp dword [rcx], eax;jg ;cmp dword [rcx + 4], eax;jge ": 2,
                "jne ;mov eax, dword [rsp + ];cmp eax, ;jne ;mov eax, 1": 2,
                "jmp ;cmp al, 2;jne ;mov eax, dword [rsp + ];cmp eax, ": 1,
                "cmp al, cl;setne byte [rsp + ];mov rbp, qword [rsp + ];add rsp, ;ret": 1,
                "mov rbp, qword [rsp + ];add rsp, ;ret;cmp ecx, ;jl ": 1,
                "mov rdx, qword [arg_88h];mov rbx, qword [arg_90h];xor eax, eax;jmp ;mov rsi, qword [var_70h]": 1,
                "mov rax, rcx;mov rcx, qword [arg_98h];mov rsi, qword [rbx + 8];mov r8, qword [rbx];mov r9, qword [rdx]": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r9;mov qword [var_10h], rdi;mov qword [var_18h], r11": 1,
                "call fcn.00440d10;mov r11, qword [var_38h];mov r9, qword [var_28h];mov rsi, qword [var_40h];mov rdi, qword [var_48h]": 1,
                "mov rdi, qword [var_48h];mov r8, qword [var_60h];jmp ;cmp dword [], 0;jne ": 1,
                "jmp ;movups xmm0, xmmword [];movups xmmword [var_a8h], xmm0;movups xmm0, xmmword [];movups xmmword [var_b8h], xmm0": 2,
                "movups xmmword [var_a8h], xmm0;movups xmm0, xmmword [];movups xmmword [var_b8h], xmm0;mov qword [var_a8h], rsi;mov qword [var_b0h], rbx": 2,
                "mov rcx, qword [var_80h];mov qword [var_8h], rcx;call fcn.005083c0;mov rax, qword [];mov rcx, qword []": 2,
                "mov qword [var_80h], rcx;mov rdx, qword [var_18h];mov qword [var_40h], rdx;mov rbx, qword [var_10h];mov qword [var_78h], rbx": 2,
                "add rax, rsi;mov qword [var_8h], rax;neg r8;mov qword [var_10h], r8;call fcn.00459210": 2,
                "jmp ;mov rcx, qword [arg_d8h];jmp ;mov rbp, qword [var_c8h];add rsp, ": 1,
                "cmp cl, 4;ja ;cmp cl, 1;ja ;test cl, cl": 2,
                "movups xmm0, xmmword [];movups xmmword [var_1a0h], xmm0;mov rdx, qword [var_120h];mov qword [var_180h], rdx;mov rdx, qword [var_50h]": 2,
                "mov qword [var_180h], rdx;mov rdx, qword [var_50h];mov qword [var_188h], rdx;mov qword [var_1a0h], rcx;mov qword [var_1a8h], rax": 2,
                "call fcn.00507e40;jmp ;cmp cl, 2;je ;cmp cl, 3": 1,
                "call fcn.00478bd0;mov rax, qword [arg_1c8h];mov eax, dword [rax + 4];mov rcx, qword [var_18h];mov qword [var_58h], rcx": 1,
                "mov rcx, qword [var_18h];mov qword [var_58h], rcx;mov rdx, qword [var_10h];mov qword [var_108h], rdx;mov qword [rsp], rax": 1,
                "movups xmm0, xmmword [];movups xmmword [var_1a0h], xmm0;mov rdx, qword [var_108h];mov qword [var_180h], rdx;mov rdx, qword [var_58h]": 1,
                "mov rdx, qword [var_108h];mov qword [var_180h], rdx;mov rdx, qword [var_58h];mov qword [var_188h], rdx;mov qword [var_1a0h], rcx": 1,
                "call fcn.00478bd0;mov rax, qword [arg_1c8h];mov eax, dword [rax + 4];mov rcx, qword [var_18h];mov qword [var_60h], rcx": 1,
                "mov qword [var_10h], rax;mov rax, qword [var_138h];mov qword [var_18h], rax;mov rax, qword [var_78h];mov qword [var_20h], rax": 1,
                "mov rax, qword [var_20h];mov rcx, qword [var_28h];movups xmm0, xmmword [];movups xmmword [var_150h], xmm0;movups xmm0, xmmword []": 1,
                "jne ;cmp dl, ;ja ;lea ebx, [rdx - 3];cmp bl, 1": 1,
                "cmp dl, ;jne ;mov rdx, qword [rcx + ];cmp qword [rax + ], rdx;je ": 1,
                "je ;mov edx, 1;test dl, dl;je ;mov eax, 1": 1,
                "mov byte [arg_58h], 0;mov rbp, qword [var_38h];add rsp, ;ret;mov rdx, qword [rax + 8]": 2,
                "cmp qword [rax + ], 0;jbe ;mov rax, qword [rdx];mov rdx, qword [rcx + 8];cmp qword [rcx + ], 0": 3,
                "cmp dl, ;je ;add edx, ;cmp dl, 1;ja ": 1,
                "mov rax, rsi;mov rcx, rdi;mov rdx, r8;cmp rbx, rax;jge ": 1,
                "ret;cmp rax, rcx;sete byte [arg_58h];mov rbp, qword [var_38h];add rsp, ": 1,
                "sete byte [arg_58h];mov rbp, qword [var_38h];add rsp, ;ret;mov rcx, qword [arg_50h]": 1,
                "sub rsp, ;mov qword [var_138h], rbp;lea rbp, [var_138h];mov rcx, qword [arg_150h];mov rcx, qword gs:[]": 1,
                "mov rcx, qword [arg_150h];mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "mov rbx, qword [rax + 8];mov rsi, qword [rax + ];lea r8, [rdx + 4];cmp r8, rsi;ja ": 1,
                "mov ecx, dword [rbx + rsi*4];mov qword [rsp], rax;mov dword [var_8h], ecx;mov byte [var_ch], 0;call fcn.0050b5e0": 1,
                "mov rbx, qword [rax + 8];lea rsi, [rdx + 1];cmp rsi, rcx;ja ;mov r8d, ": 1,
                "mov qword [var_a8h], rdx;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rbx;mov qword [var_10h], rdx": 1,
                "mov rdi, rax;call fcn.004580f0;jmp ;lea rdi, [rax + 8];mov rdx, rax": 1,
                "mov rdx, qword [var_b0h];mov r8, qword [var_a8h];jmp ;cmp dword [], 0;jne ": 1,
                "mov rbx, qword [rax + ];lea rsi, [rbx + ];mov qword [var_b0h], rsi;cmp rsi, rcx;ja ": 1,
                "mov rdi, rax;call fcn.004580f0;jmp ;mov rax, qword [arg_148h];mov qword [rsp], rax": 1,
                "call fcn.004580f0;jmp ;mov rax, qword [arg_148h];mov qword [rsp], rax;mov dword [var_8h], ": 1,
                "xor edx, edx;jmp ;mov rbx, qword [var_90h];lea rdx, [rbx + 2];mov rbx, qword [arg_148h]": 1,
                "jmp ;mov rbx, qword [var_90h];lea rdx, [rbx + 2];mov rbx, qword [arg_148h];mov rsi, qword [arg_150h]": 1,
                "mov rax, rsi;mov rcx, rbx;mov rbx, qword [rax + ];mov rsi, qword [rax + ];cmp rdx, rbx": 1,
                "mov rsi, qword [rax + ];cmp rdx, rbx;jge ;lea rdi, [rdx + 1];cmp rdi, rbx": 1,
                "jae ;mov qword [var_90h], rdx;mov dword [var_58h], edi;mov eax, dword [rsi + rdx*4];mov dword [var_50h], eax": 1,
                "sub rsp, ;mov qword [var_80h], rbp;lea rbp, [var_80h];mov ecx, dword [arg_98h];cmp ecx, ": 1,
                "mov rcx, qword [rax + ];mov rdx, qword [rax + 8];mov rbx, qword [rax + ];lea rsi, [rcx + 2];cmp rsi, rbx": 1,
                "cmp rsi, rbx;ja ;mov r8d, ;mov word [rdx + rcx], r8w;mov qword [rax + ], rsi": 1,
                "mov qword [rax + ], rsi;mov qword [rax + ], rbx;cmp dword [], 0;jne ;mov qword [rax + 8], rdx": 1,
                "jmp ;mov qword [var_58h], rsi;mov qword [var_50h], rdx;lea rax, [];mov qword [rsp], rax": 2,
                "mov rdx, qword [var_50h];mov rsi, qword [var_58h];jmp ;cmp dword [], 0;jne ": 2,
                "mov qword [var_78h], rdi;cmp dword [], 0;jne ;mov qword [rax + 8], rsi;movsxd rax, ecx": 1,
                "cmp byte [rax], ;jne ;mov rcx, qword [rax + ];mov rdx, qword [rax + 8];mov qword [var_28h], rdx": 1,
                "jmp fcn.0050c300;int3;int3;int3;int3": 1,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov rcx, qword [arg_48h];cmp byte [rcx], ;jne ": 3,
                "jne ;mov rdx, qword [rcx + ];mov rbx, qword [rcx + ];mov rax, qword [rcx + ];mov rsi, qword [arg_58h]": 3,
                "mov rsi, qword [arg_58h];cmp rdx, rsi;jae ;shl rdx, 4;mov r8, qword [arg_50h]": 3,
                "mov rax, qword [rcx + rdx*8];mov qword [rsp], rax;mov qword [var_8h], r8;mov qword [var_10h], rsi;mov rax, qword [arg_60h]": 3,
                "mov qword [var_100h], rbp;lea rbp, [var_100h];mov rax, qword [arg_110h];test rax, rax;je ": 4,
                "call fcn.0050c570;mov rax, qword [var_8h];mov qword [var_b8h], rax;mov rcx, qword [var_c8h];mov rdx, qword [arg_110h]": 4,
                "mov rdx, qword [var_38h];mov rbx, qword [var_f0h];mov qword [rbx + ], rdx;cmp dword [], 0;jne ": 5,
                "xorps xmm0, xmm0;mov rcx, qword [var_c8h];movups xmmword [rcx + ], xmm0;cmp dword [], 0;jne ": 3,
                "mov rdx, qword [rax + ];mov rbx, qword [rax + 8];mov rsi, qword [var_68h];cmp rsi, rdx;ja ": 3,
                "mov qword [var_e8h], rdi;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rdi;mov qword [var_10h], rsi": 3,
                "mov rdx, qword [arg_110h];jmp ;lea rdi, [rcx + 8];mov rdx, rax;mov rax, qword [var_e8h]": 3,
                "jmp ;lea rdi, [rcx + 8];mov rdx, rax;mov rax, qword [var_e8h];call fcn.004580f0": 3,
                "mov rax, rdx;jmp ;mov qword [var_70h], rdx;mov qword [var_e0h], rbx;lea rax, []": 2,
                "mov qword [rsp], rax;call fcn.0050c570;mov rax, qword [var_8h];mov rcx, qword [arg_110h];movzx edx, byte [rcx]": 2,
                "je ;mov rbx, qword [rcx + 8];cmp qword [rcx + ], 0;jbe ;cmp qword [rbx], rax": 1,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h];movzx ecx, byte [var_43h]": 1,
                "add rsp, ;ret;cmp cl, ;jne ;cmp qword [rax + ], 0": 1,
                "mov qword [var_158h], rbp;lea rbp, [var_158h];call fcn.0040e500;mov rax, qword [rsp];mov qword [var_150h], rax": 1,
                "mov rcx, qword [];mov qword [var_28h], rcx;mov rdx, qword [];mov qword [var_140h], rdx;lea rbx, []": 1,
                "mov qword [var_118h], rax;mov rcx, qword [];mov qword [var_30h], rcx;mov rdx, qword [];mov qword [var_28h], rdx": 1,
                "jne ;mov rcx, qword [var_110h];mov qword [rax + 8], rcx;mov rax, qword [];mov qword [var_30h], rax": 1,
                "mov qword [var_28h], rcx;mov rdx, qword [];mov qword [var_100h], rdx;lea rbx, [];mov qword [rsp], rbx": 1,
                "mov qword [var_28h], rcx;mov rdx, qword [];mov qword [var_f8h], rdx;lea rbx, [];mov qword [rsp], rbx": 1,
                "call fcn.00456090;jmp fcn.0050ec20;int3;int3;int3": 1,
                "xor eax, eax;call fcn.004580f0;jmp ;mov qword [rcx + ], 0;cmp dword [], 0": 1,
                "lea rbp, [var_28h];mov rax, qword [arg_48h];mov rcx, qword [arg_38h];mov qword [rcx], rax;cmp qword [rcx + ], 0": 2,
                "mov qword [var_8h], rax;mov qword [var_10h], ;call fcn.00440c00;mov rax, qword [var_18h];mov rcx, qword [var_20h]": 2,
                "mov qword [rdx + ], ;cmp dword [], 0;jne ;mov qword [rdx + ], rax;mov rcx, rdx": 2,
                "imul rbx, rsi;mov rdi, qword [arg_d8h];add rbx, rdi;mov r8, qword [rcx + ];mov r9, rbx": 3,
                "jae ;xor ebx, ebx;mov byte [var_42h], dl;test bl, bl;je ": 2,
                "mov dword [r8 + rbx], esi;mov byte [r8 + rbx + 4], 0;mov qword [r8 + rbx + 8], rdi;mov rbx, qword [arg_c0h];mov rsi, qword [arg_c8h]": 2,
                "movups xmm0, xmmword [r12];movups xmmword [var_90h], xmm0;movzx r12d, byte [var_78h];cmp r12b, 4;ja ": 2,
                "je ;mov edi, dword [var_80h];xor r9d, r9d;mov r10, qword [rcx];inc r10": 2,
                "imul r10, rdi;add r10, r11;mov r12, qword [rcx + ];mov r13, r10;shr r10, 5": 2,
                "jle ;dec r8;mov r9, r8;shl r8, 4;mov r10d, dword [rdi + r8]": 1,
                "jmp ;mov r12, qword [rax + ];mov r13, qword [r12];cmp qword [r12 + 8], r10;jbe ": 1,
                "cmp qword [r12 + 8], r10;jbe ;movzx r9d, byte [r9 + r13];cmp r9b, 5;je ": 1,
                "jbe ;movzx r9d, byte [r9 + r13];cmp r9b, 5;je ;mov r9, qword [rcx + ]": 1,
                "mov r12, qword [rcx + ];mov r13, qword [rcx + ];lea r14, [r12 + 1];cmp r14, r9;ja ": 1,
                "mov rdx, qword [var_38h];mov rbx, qword [arg_b8h];mov qword [rbx + ], rdx;cmp dword [], 0;jne ": 2,
                "jne ;mov qword [rbx + ], rax;movzx edx, byte [var_42h];mov rbx, qword [arg_c0h];mov rsi, qword [arg_c8h]": 2,
                "mov r13, rax;mov rax, qword [arg_b0h];mov rcx, qword [arg_b8h];jmp ;mov rdi, qword [var_70h]": 1,
                "mov rax, qword [arg_b0h];mov rcx, qword [arg_b8h];jmp ;mov rdi, qword [var_70h];call fcn.004580f0": 1,
                "mov r12d, dword [var_7ch];cmp r12, r10;jae ;lea r13, [r12 + r12*4];shl r13, 3": 1,
                "lea r10, [r12 + r12*4];shl r10, 3;movzx r9d, byte [r10 + r9];cmp r9b, 5;je ": 1,
                "je ;mov r9, qword [rcx];inc r9;imul r9, r12;add r9, r11": 1,
                "mov dword [r10 + r9], r12d;mov byte [r10 + r9 + 4], 0;mov qword [r10 + r9 + 8], r11;mov r10d, dword [var_80h];mov r11, qword [rcx]": 1,
                "mov qword [r10 + r9 + 8], r11;mov r10d, dword [var_80h];mov r11, qword [rcx];mov edi, r10d;movzx r9d, byte [var_43h]": 1,
                "mov qword [var_18h], r13;mov qword [var_20h], r14;call fcn.00440d10;mov rax, qword [var_28h];mov rcx, qword [var_30h]": 1,
                "mov qword [var_88h], rbp;lea rbp, [var_88h];mov rax, qword [arg_98h];movzx ecx, byte [rax + ];cmp cl, ": 1,
                "lea rbp, [var_88h];mov rax, qword [arg_98h];movzx ecx, byte [rax + ];cmp cl, ;je ": 1,
                "jne ;test byte [rax], al;mov rcx, qword [arg_a0h];test rcx, rcx;je ": 1,
                "mov qword [var_68h], rcx;mov qword [var_48h], rbx;mov rsi, qword [arg_98h];mov rdi, qword [rsi + ];mov qword [rsp], rax": 1,
                "call fcn.0050f3a0;movzx eax, byte [var_47h];test al, 4;je ;mov rax, qword [var_70h]": 1,
                "mov qword [var_80h], r8;lea rax, [r8 + rdx*8];mov qword [rsp], rax;mov qword [var_8h], rsi;shl rcx, 3": 1,
                "mov rax, qword [arg_e8h];mov qword [arg_100h], rax;mov rbp, qword [var_88h];add rsp, ;ret": 1,
                "mov qword [arg_f0h], 0;xorps xmm0, xmm0;movups xmmword [arg_f8h], xmm0;mov rbp, qword [var_88h];add rsp, ": 5,
                "mov rdx, qword [arg_c8h];jmp ;mov rax, qword [var_70h];mov rcx, qword [arg_98h];mov rdx, qword [var_68h]": 1,
                "mov rcx, qword [arg_98h];mov rdx, qword [var_68h];mov rbx, qword [var_48h];mov rsi, qword [var_50h];cmp rdi, rsi": 1,
                "mov rcx, qword [arg_98h];mov rdx, qword [var_68h];mov rbx, qword [var_48h];mov rsi, qword [var_50h];jmp ": 1,
                "mov rcx, qword [arg_c0h];mov qword [rax + ], rcx;cmp dword [], 0;jne ;mov rdx, qword [arg_b8h]": 1,
                "lea rdi, [rax + ];mov rdx, rax;mov rax, qword [arg_b8h];call fcn.004580f0;mov rax, rdx": 1,
                "ja ;mov qword [rax + ], rbx;mov rbp, qword [rsp];add rsp, 8;ret": 1,
                "int3;int3;movzx eax, byte [arg_10h];test al, al;je ": 1,
                "int3;movzx eax, byte [arg_10h];test al, al;je ;mov rcx, qword [arg_8h]": 1,
                "and eax, ;test al, 4;je ;test ecx, ecx;jge ": 2,
                "and eax, ;test al, 8;je ;test edx, edx;jge ": 2,
                "and eax, ;test al, al;je ;cmp ecx, ;jl ": 2,
                "and eax, ;jmp ;cmp edx, ;jl ;cmp edx, ": 2,
                "jmp ;mov byte [arg_18h], 1;ret;mov byte [arg_18h], 0;ret": 2,
                "mov r14, qword [var_98h];mov r15, qword [var_a8h];mov rdi, rax;mov r10d, r11d;mov r8, r15": 3,
                "jne ;mov qword [var_a0h], rsi;mov r11, qword [rdi];cmp qword [r11 + ], 0;jle ": 3,
                "add rsp, ;ret;mov rax, qword [arg_c8h];jmp ;mov dword [var_60h], eax": 1,
                "mov rbx, qword [rdi + ];mov qword [rsp], rdi;mov qword [var_8h], r8;mov dword [var_10h], eax;mov qword [var_18h], rsi": 1,
                "mov r8, qword [var_b0h];mov r9, qword [var_a8h];jmp ;mov rax, qword [arg_d0h];mov rcx, qword [rax + ]": 1,
                "jmp ;mov rax, qword [arg_d0h];mov rcx, qword [rax + ];mov rdx, qword [rdi];mov rbx, qword [arg_d8h]": 1,
                "call rdx;mov eax, dword [var_10h];mov dword [var_64h], eax;mov rcx, qword [var_18h];mov qword [var_78h], rcx": 1,
                "jmp ;mov rax, qword [arg_c8h];jmp ;mov qword [var_90h], rbx;mov qword [var_88h], rcx": 1,
                "mov qword [rsp], rdx;call rcx;movzx r11d, byte [var_8h];mov eax, dword [var_6ch];mov rcx, qword [var_88h]": 1,
                "mov rsi, qword [var_a0h];mov rdi, qword [arg_c8h];mov r8, qword [var_b0h];mov r9, qword [var_a8h];movzx r10d, byte [var_53h]": 1,
                "mov qword [rsp], rdx;mov qword [var_8h], rsi;call rcx;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rax, r8;call fcn.004580f0;mov rax, r9;jmp ;mov qword [var_58h], rbx": 1,
                "call fcn.004580f0;jmp ;call fcn.00456090;jmp fcn.005110f0;int3": 1,
                "mov ebx, dword [arg_c8h];mov rsi, qword [arg_a8h];xor eax, eax;jmp ;lea rax, [r9 + 1]": 2,
                "mov rax, qword [r8 + rax + 8];test rax, rax;je ;mov qword [var_68h], r9;mov qword [var_70h], rax": 2,
                "cmp qword [rax + ], 0;jle ;mov r10, qword [rcx + ];cmp qword [rcx + ], 0;jbe ": 2,
                "lea rdi, [r11 + r10*8];cmp dword [], 0;jne ;mov qword [r11 + r10*8], rax;jmp ": 2,
                "mov qword [var_8h], r11;mov qword [var_10h], r10;mov qword [var_18h], r8;mov qword [var_20h], r12;call fcn.00440d10": 2,
                "jbe ;mov r13, qword [arg_b8h];cmp qword [r12 + 8], r13;setl r12b;test r12b, r12b": 2,
                "jne ;mov qword [r8 + r11*8], rax;jmp ;call fcn.004580f0;jmp ": 2,
                "mov qword [var_40h], rax;call fcn.00511930;mov rax, qword [var_48h];mov rcx, qword [arg_a0h];movzx edx, byte [var_57h]": 1,
                "mov r10, qword [rsi + ];mov r11, qword [rsi + ];mov r12, qword [rsi + ];lea r14, [r9 + 1];cmp r14, r11": 1,
                "jmp ;mov r13, rdi;mov rdi, rbx;mov r14, rax;mov rax, r12": 1,
                "test r9, r9;jl ;cmp r9, r12;ja ;mov qword [rcx + ], r9": 1,
                "jae ;mov r9, r10;shl r10, 4;lea rdi, [r11 + r10];lea rdi, [rdi + 8]": 1,
                "jne ;mov qword [r11 + r10 + 8], 0;mov dword [r11 + r10], r8d;mov r12, qword [rcx];cmp qword [rcx + 8], r8": 1,
                "mov rcx, qword [arg_d8h];cmp rax, rcx;jae ;mov rcx, qword [var_50h];mov rdx, qword [arg_d0h]": 1,
                "mov rax, qword [var_90h];mov qword [arg_f8h], rax;mov rbp, qword [var_a0h];add rsp, ;ret": 1,
                "mov rbp, qword [var_a0h];add rsp, ;ret;mov rax, qword [arg_e8h];mov rcx, qword [rax]": 1,
                "mov qword [var_38h], r10;mov qword [var_40h], rsi;call fcn.00511930;mov rsi, qword [var_48h];mov rax, qword [var_68h]": 1,
                "mov rcx, qword [arg_d8h];mov rdx, qword [arg_b0h];mov rcx, rax;mov rdx, qword [arg_d8h];mov rbx, qword [arg_b0h]": 1,
                "mov r8, qword [arg_d0h];cmp r8, rcx;jne ;cmp dword [], 0;jne ": 1,
                "cmp dword [], 0;jne ;mov qword [r11 + r10 + 8], rsi;xor eax, eax;jmp ": 1,
                "mov r11, qword [var_88h];jmp ;mov rcx, rdi;mov rdi, rsi;call fcn.004580f0": 1,
                "call fcn.004580f0;mov rdi, rcx;jmp ;mov qword [var_78h], rax;lea rax, []": 1,
                "mov rax, qword [var_18h];mov rcx, qword [var_58h];mov rdx, qword [var_70h];mov qword [rdx + ], rcx;mov rcx, qword [var_60h]": 1,
                "mov rsi, qword [var_70h];jmp ;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [var_a8h], rcx;mov qword [var_70h], rdx;mov rax, qword [rdx + ];mov qword [rsp], rcx;mov rbx, qword [arg_150h]": 2,
                "mov rsi, qword [arg_150h];test rsi, rsi;jne ;movabs rdi, ;or rdi, rax": 2,
                "or rdi, rax;mov r8, qword [arg_110h];mov r9, qword [r8 + ];mov r10, qword [r9 + ];mov r11, qword [r9]": 2,
                "mov dword [var_48h], edx;mov dword [var_4ch], eax;mov qword [var_60h], rcx;shl r9, 6;lea r11, [r12 + r9]": 2,
                "movups xmm0, xmmword [r11];movups xmmword [var_c0h], xmm0;lea r11, [r12 + r9];lea r11, [r11 + ];movups xmm0, xmmword [r11]": 2,
                "mov qword [r12 + r11*8], rsi;jmp ;lea rcx, [var_c0h];mov qword [rsp], rcx;mov dword [var_8h], eax": 2,
                "jmp ;cmp r11b, 3;jne ;mov qword [rsp], rdi;mov eax, dword [var_c8h]": 2,
                "call fcn.005109c0;cmp byte [var_10h], 0;je ;mov r8, qword [arg_110h];mov r10, qword [var_a0h]": 2,
                "ja ;mov r8, qword [arg_160h];mov qword [arg_170h], rdi;mov qword [var_b8h], r8;lea rax, [r8 + rdx*8]": 1,
                "shl rcx, 3;mov qword [var_10h], rcx;call fcn.00459210;mov rax, qword [var_a0h];mov qword [rsp], rax": 1,
                "mov qword [var_10h], rcx;call fcn.00459210;mov rax, qword [var_a0h];mov qword [rsp], rax;call fcn.00511f00": 1,
                "mov rax, qword [var_98h];mov qword [arg_180h], rax;mov rax, qword [arg_170h];mov qword [arg_188h], rax;mov rbp, qword [var_100h]": 1,
                "call fcn.00511f00;mov qword [arg_178h], 0;xorps xmm0, xmm0;movups xmmword [arg_180h], xmm0;mov rbp, qword [var_100h]": 1,
                "lea rbp, [var_b8h];mov rax, qword [arg_118h];test rax, rax;lea rcx, [];cmovne rcx, rax": 1,
                "mov rsi, qword [arg_d0h];test rsi, rsi;je ;mov qword [rsp], rbx;call fcn.00515120": 1,
                "mov qword [var_8h], rbx;call fcn.00510940;mov rax, qword [var_98h];mov qword [rsp], rax;mov rcx, qword [var_80h]": 1,
                "mov qword [rsp], rax;mov rcx, qword [var_80h];mov qword [var_8h], rcx;mov rcx, qword [var_a0h];mov qword [var_10h], rcx": 1,
                "mov qword [var_90h], rbx;mov rsi, qword [rax + ];mov rdi, qword [arg_128h];cmp rbx, rdi;ja ": 1,
                "mov rsi, qword [rax + ];mov rdi, qword [arg_128h];cmp rbx, rdi;ja ;mov r8, qword [var_b0h]": 1,
                "mov qword [var_10h], rcx;call fcn.00459210;mov rax, qword [arg_c8h];mov qword [rsp], rax;mov rax, qword [var_98h]": 1,
                "mov qword [rsp], rax;mov rax, qword [var_98h];mov qword [var_8h], rax;call fcn.005155b0;mov rax, qword [var_b0h]": 1,
                "mov rax, qword [arg_128h];mov qword [arg_140h], rax;mov rbp, qword [var_b8h];add rsp, ;ret": 1,
                "mov rcx, qword [var_88h];mov rdx, qword [arg_120h];mov rsi, qword [var_a8h];jmp ;mov rax, qword [arg_c8h]": 1,
                "mov qword [arg_130h], 0;xorps xmm0, xmm0;movups xmmword [arg_138h], xmm0;mov rbp, qword [var_b8h];add rsp, ": 1,
                "jne ;mov qword [rax + ], rcx;lea rcx, [rax + ];lea rdx, [];jmp ": 1,
                "lea rdi, [rax + ];mov rcx, rax;mov rax, qword [arg_f8h];call fcn.004580f0;mov rax, rcx": 1,
                "jmp ;mov rdi, qword [arg_100h];mov r8, qword [arg_e8h];lea r9, [r8 + rdi];cmp qword [rbx + ], r9": 1,
                "mov rbx, qword [arg_e0h];mov qword [var_8h], rbx;mov qword [var_10h], r8;mov rbx, qword [arg_f0h];mov qword [var_18h], rbx": 1,
                "mov qword [rsp], rbx;mov rbx, qword [arg_d0h];mov qword [var_8h], rbx;mov rbx, qword [arg_d8h];mov qword [var_10h], rbx": 1,
                "mov rbx, qword [arg_110h];mov qword [var_48h], rbx;mov qword [var_50h], rcx;mov qword [var_58h], rdx;mov qword [var_60h], rax": 1,
                "sub rsp, ;mov qword [var_50h], rbp;lea rbp, [var_50h];mov rax, qword [arg_60h];mov rcx, qword [rax + 8]": 2,
                "mov rcx, qword [rax + 8];mov rdx, qword [rax];mov rbx, qword [rax + ];cmp rbx, rcx;jae ": 10,
                "cmp rbx, rcx;jae ;lea rsi, [rbx + rbx*4];mov rdi, rsi;shl rsi, 3": 2,
                "lea rsi, [rbx + rbx*4];mov rdi, rsi;shl rsi, 3;movzx esi, byte [rsi + rdx];cmp sil, 3": 2,
                "lea rdi, [rsi + rsi*4];lea rdi, [rdx + rdi*8];jmp ;lea r8, [rsi + rsi*4];lea rdi, [rdx + r8*8]": 1,
                "cmp r8b, 6;jne ;mov esi, dword [rdi + 4];cmp rsi, rcx;jb ": 1,
                "movzx ecx, byte [rdi];lea edx, [rcx - 8];cmp dl, 2;ja ;mov edx, 7": 1,
                "add rsp, ;ret;mov ecx, r8d;jmp ;xorps xmm0, xmm0": 1,
                "ud2;call fcn.00456090;jmp fcn.00513210;int3;int3": 2,
                "mov qword [var_a8h], rbp;lea rbp, [var_a8h];mov qword [arg_d0h], 0;xorps xmm0, xmm0;movups xmmword [arg_d8h], xmm0": 3,
                "jb ;bt ebx, 0;jb ;mov qword [var_70h], rbx;mov qword [var_68h], rcx": 3,
                "mov byte [var_47h], 1;mov dword [rsp], ;lea rax, [];mov qword [var_8h], rax;lea rax, [var_47h]": 3,
                "test eax, eax;jne ;mov qword [var_60h], ;mov rax, qword [arg_b8h];mov rcx, qword [var_68h]": 3,
                "cmp rsi, rcx;jge ;mov rdi, qword [var_50h];cmp rdi, rbx;jl ": 2,
                "ret;mov rdi, qword [rax];mov r8, qword [rax + 8];cmp rsi, r8;jae ": 2,
                "ja ;lea rdi, [r8 + 2];mov qword [var_98h], rdi;mov dword [r11 + r8*4], r9d;mov dword [r11 + r8*4 + 4], esi": 2,
                "mov rdx, qword [arg_c0h];mov rbx, qword [var_70h];jmp ;mov dword [var_4ch], r9d;mov dword [var_48h], esi": 2,
                "mov rax, qword [arg_b8h];mov rcx, qword [var_68h];mov rdx, qword [arg_c0h];mov rbx, qword [var_70h];mov esi, dword [var_48h]": 2,
                "mov rcx, qword [var_68h];mov rdx, qword [arg_c0h];mov rbx, qword [var_70h];mov esi, dword [var_48h];mov r9d, dword [var_4ch]": 2,
                "mov dword [var_48h], edi;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rsi;mov qword [var_10h], r10": 1,
                "mov rdx, qword [rcx];mov rcx, qword [rcx + 8];test rcx, rcx;jle ;mov qword [var_20h], rcx": 1,
                "mov qword [var_58h], rsi;movups xmm0, xmmword [rdx + 8];movups xmmword [var_60h], xmm0;movups xmm0, xmmword [rdx + ];movups xmmword [var_70h], xmm0": 1,
                "movups xmm0, xmmword [var_70h];movups xmmword [var_48h], xmm0;movzx esi, byte [var_30h];cmp sil, 6;ja ": 1,
                "jl ;mov rbp, qword [var_c0h];add rsp, ;ret;add esi, ": 1,
                "cmp sil, 4;ja ;mov rsi, qword [rbx];cmp qword [rbx + 8], rax;jbe ": 1,
                "lea rdi, [rax + rsi];lea rdi, [rdi + ];cmp dword [], 0;jne ;mov qword [rsi + rax + ], 0": 2,
                "lea rdi, [rdi + ];cmp dword [], 0;jne ;mov qword [rsi + rax + ], 0;xorps xmm0, xmm0": 1,
                "movups xmm0, xmmword [var_48h];movups xmmword [var_98h], xmm0;mov rsi, qword [rbx];cmp qword [rbx + 8], r8;jbe ": 1,
                "movups xmmword [r9 + ], xmm0;lea rsi, [rsi + rax];lea rsi, [rsi + ];movups xmm0, xmmword [var_a0h];movups xmmword [rsi], xmm0": 1,
                "mov rax, rsi;jmp ;call fcn.0042e8e0;ud2;call fcn.0042e8e0": 1,
                "mov qword [rdi + ], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_40h];mov qword [rdi], rcx": 2,
                "mov rax, qword [rax];test rcx, rcx;jle ;mov qword [var_30h], rdi;mov qword [var_28h], rcx": 2,
                "mov qword [var_28h], rcx;xor edx, edx;jmp ;add rax, ;mov rbx, qword [rax]": 2,
                "mov rbx, qword [var_70h];mov qword [var_48h], rbx;movups xmm0, xmmword [var_78h];movups xmmword [var_50h], xmm0;movups xmm0, xmmword [var_88h]": 2,
                "mov qword [var_48h], rbx;movups xmm0, xmmword [var_78h];movups xmmword [var_50h], xmm0;movups xmm0, xmmword [var_88h];movups xmmword [var_60h], xmm0": 2,
                "movups xmmword [var_128h], xmm0;movups xmmword [var_138h], xmm0;movups xmmword [var_148h], xmm0;mov rbx, qword [var_48h];mov qword [var_118h], rbx": 2,
                "jne ;movups xmm0, xmmword [var_118h];movups xmmword [r8], xmm0;movups xmm0, xmmword [var_128h];movups xmmword [r8 + ], xmm0": 2,
                "mov rdx, qword [rdi + 8];mov rbx, qword [rdi];cmp rcx, rdx;jae ;mov rsi, rcx": 2,
                "lea r8, [rbx + rcx];lea r8, [r8 + 4];lea r9, [rbx + rcx];lea r9, [r9 + 8];mov r10d, dword [rbx + rcx + 8]": 2,
                "jae ;shl r10, 6;lea rdx, [rbx + r10];movups xmm0, xmmword [rdx];movups xmmword [var_d8h], xmm0": 2,
                "lea rdx, [rbx + r10];lea rdx, [rdx + ];movups xmm0, xmmword [rdx];movups xmmword [var_108h], xmm0;movzx edx, byte [var_d8h]": 1,
                "movups xmm0, xmmword [rdx];movups xmmword [var_108h], xmm0;movzx edx, byte [var_d8h];test dl, dl;jne ": 1,
                "movups xmmword [var_a8h], xmm0;lea rbx, [rcx + rdx];lea rbx, [rbx + ];movups xmm0, xmmword [rbx];movups xmmword [var_b8h], xmm0": 1,
                "lea rcx, [rcx + ];movups xmm0, xmmword [rcx];movups xmmword [var_c8h], xmm0;movzx ecx, byte [var_98h];test cl, cl": 1,
                "movups xmm0, xmmword [rbx];movups xmmword [var_f8h], xmm0;lea rcx, [rdx + rcx];lea rcx, [rcx + ];movups xmm0, xmmword [rcx]": 1,
                "mov qword [var_b8h], rcx;mov qword [var_c0h], rcx;mov rax, qword [arg_120h];mov rax, qword [rax + 8];mov qword [var_40h], rax": 1,
                "xorps xmm0, xmm0;movups xmmword [var_68h], xmm0;movups xmmword [var_78h], xmm0;movups xmmword [var_88h], xmm0;mov qword [var_60h], 0": 1,
                "mov qword [var_100h], rcx;lea rdx, [var_98h];mov qword [var_108h], rdx;lea rdx, [var_d0h];mov qword [var_48h], rdx": 1,
                "lea rdx, [var_98h];mov qword [var_108h], rdx;lea rdx, [var_d0h];mov qword [var_48h], rdx;mov qword [var_c8h], 0": 1,
                "jbe ;mov rsi, rax;shl rax, 6;mov qword [r8 + rax + ], r9;mov qword [r8 + rax + ], r11": 1,
                "lea rdi, [rdi + ];cmp dword [], 0;jne ;mov qword [r8 + rax + ], r10;jmp ": 1,
                "cmp rdi, rsi;jae ;mov dword [rbx + rdi*4], 0;mov rbx, qword [var_b0h];mov esi, dword [var_c8h]": 1,
                "jae ;mov dword [rbx + rdi*4], 0;mov rbx, qword [var_b0h];mov esi, dword [var_c8h];cmp qword [var_b8h], rsi": 1,
                "jbe ;mov dword [rbx + rsi*4], edx;inc dword [var_c8h];jmp ;mov edi, edx": 1,
                "jmp ;mov edi, edx;cmp rdi, rsi;jae ;mov edi, dword [rbx + rdi*4]": 1,
                "cmp edx, esi;jmp ;xor edi, edi;jmp ;mov qword [arg_128h], 0": 1,
                "xor edi, edi;jmp ;mov qword [arg_128h], 0;mov rbp, qword [var_110h];add rsp, ": 1,
                "jmp ;add rbx, ;mov rsi, qword [rbx];mov qword [var_40h], rsi;movups xmm0, xmmword [rbx + 8]": 1,
                "mov r8d, dword [var_1ch];cmp r8, rsi;jae ;lea r8, [r8 + r8*4];shl r8, 3": 1,
                "mov qword [arg_80h], 0;mov rbp, qword [var_68h];add rsp, ;ret;cmp r9b, 3": 1,
                "mov rcx, qword [var_60h];mov qword [rsp], rcx;call fcn.0050c3b0;mov rax, qword [var_10h];mov qword [var_48h], rax": 2,
                "mov rcx, qword [var_18h];mov qword [var_50h], rcx;mov rdx, qword [var_8h];mov qword [var_70h], rdx;mov rbx, qword [var_60h]": 2,
                "movzx edx, byte [arg_a2h];mov byte [rdi + ], dl;mov qword [rdi + ], rax;cmp qword [rdi + ], 0;je ": 1,
                "mov qword [rsi + ], rax;mov byte [rsi + ], cl;mov dword [rsi + ], edx;mov rax, qword [rsi + ];mov rcx, qword [rsi + ]": 1,
                "mov rax, qword [rsi + ];mov rcx, qword [rsi + ];test rax, rax;jne ;mov rax, qword [var_68h]": 1,
                "lea rdx, [];mov rbx, qword [rdx + rcx*8];test rbx, rbx;je ;cmp rbx, rax": 1,
                "mov rbx, qword [rdx + rcx*8];test rbx, rbx;je ;cmp rbx, rax;jl ": 1,
                "jmp ;mov qword [rsp], rcx;call fcn.005076b0;mov rax, qword [var_10h];mov rcx, qword [var_8h]": 1,
                "mov rax, qword [var_10h];mov rcx, qword [var_8h];movzx edx, byte [var_18h];mov rbx, qword [var_58h];mov qword [rbx + ], rax": 1,
                "jmp ;mov rcx, rax;mov rax, qword [arg_90h];call fcn.004580f0;lea rdx, [rdi + ]": 1,
                "mov qword [arg_b8h], rdx;mov rbp, qword [var_80h];add rsp, ;ret;call fcn.0042e8e0": 1,
                "mov rcx, qword [rax + ];cmp rcx, 5;jae ;lea rax, [rcx + rcx*2];lea rcx, []": 2,
                "cmp dword [], 0;jne ;mov qword [rax + 8], rdx;mov qword [var_40h], rax;mov rdx, qword [rcx + ]": 1,
                "jge ;mov qword [var_28h], rsi;mov rdx, qword [rax + rsi*8];mov qword [var_38h], rdx;mov rbx, qword [rcx + ]": 1,
                "mov qword [var_10h], rbx;call fcn.00440c00;mov rax, qword [var_18h];mov rcx, qword [arg_c8h];mov rdx, qword [rcx + ]": 1,
                "jne ;movups xmm1, xmmword [var_88h];mov rax, qword [var_40h];movups xmmword [rax + ], xmm1;movups xmm1, xmmword [var_98h]": 1,
                "movups xmm1, xmmword [var_98h];movups xmmword [rax + ], xmm1;movups xmm1, xmmword [var_a8h];movups xmmword [rax + ], xmm1;lea rax, []": 1,
                "mov rcx, qword [arg_c8h];jmp ;lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 1,
                "(reloc.KERNEL32.dll_ExitProcess);call fcn.004580f0;lea rcx, [rdi + 8];mov rax, rdi;mov rdi, rcx": 1,
                "call fcn.004580f0;mov rdi, rdx;jmp ;call fcn.0042e8e0;ud2": 1,
                "mov rcx, qword [var_28h];mov rdx, qword [var_18h];(reloc.KERNEL32.dll_GetLastError);test rax, rax;jne ": 2,
                "mov qword [var_68h], rcx;(reloc.KERNEL32.dll_GetProcAddress);mov rax, qword [arg_88h];mov qword [rsp], rax;mov rax, qword [arg_90h]": 2,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;call fcn.0040ac60;(reloc.KERNEL32.dll_GetThreadLocale);mov rax, qword [var_10h]": 2,
                "mov qword [var_8h], rcx;(reloc.KERNEL32.dll_LeaveCriticalSection);call fcn.0047a8b0;cmp byte [var_10h], 0;je ": 3,
                "mov rcx, qword [arg_68h];(reloc.KERNEL32.dll_QueryPerformanceCounter);mov qword [var_20h], rcx;mov qword [var_28h], rax;mov qword [var_30h], 1": 3,
                "(reloc.KERNEL32.dll_SetLastError);mov byte [var_2ah], 0;call fcn.004797d0;mov rax, qword [var_30h];(reloc.KERNEL32.dll_SetProcessPriorityBoost)": 3,
                "mov rcx, qword [var_28h];mov qword [arg_70h], rax;mov qword [arg_78h], rcx;mov rbp, qword [var_50h];add rsp, ": 3,
                "(reloc.KERNEL32.dll_TerminateProcess);mov rax, qword [rsp + 8];mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rax, qword [rax + ]": 2,
                "(reloc.msvcrt.dll___getmainargs);mov qword [rsp + ], 0;mov rbp, qword [rsp + ];(reloc.msvcrt.dll___initenv);add rsp, ": 2,
                "mov qword [rsp + ], 0;mov rbp, qword [rsp + ];(reloc.msvcrt.dll___initenv);add rsp, ;ret": 2,
                "call fcn.004f3240;cmp qword [var_20h], 0;jl ;mov rax, qword [arg_98h];mov rcx, qword [rax + ]": 1,
                "mov qword [var_80h], rbx;mov qword [rsp], rax;mov qword [var_8h], 0;movups xmmword [var_10h], xmm0;mov qword [var_20h], rdx": 1,
                "jmp fcn.00516450;int3;int3;int3;int3": 1,
                "movups xmmword [rsp + ], xmm0;mov qword [rsp + ], rax;mov qword [rsp + ], rcx;mov qword [rsp + ], 2;lea rax, [rsp + ]": 1,
                "mov qword [var_c0h], rcx;lea rdx, [];mov qword [rsp], rdx;call fcn.0040d880;mov rax, qword [arg_108h]": 2,
                "mov rax, qword [arg_108h];test rax, rax;mov rcx, qword [arg_128h];mov rdx, qword [arg_110h];mov rbx, rcx": 2,
                "mov rcx, qword [arg_128h];mov rdx, qword [arg_110h];mov rbx, rcx;cmovne rcx, rdx;mov qword [var_90h], rcx": 2,
                "mov rsi, qword [arg_130h];mov rdi, qword [var_e8h];mov r8, rax;mov r9, qword [var_98h];mov r10, qword [var_c8h]": 2,
                "mov qword [var_88h], r12;cmp r8, rcx;jg ;mov qword [var_80h], r8;mov rcx, qword [arg_100h]": 2,
                "mov r10, qword [arg_120h];mov qword [var_30h], r10;mov qword [var_38h], rbx;mov qword [var_40h], r8;mov qword [var_48h], rsi": 1,
                "mov rax, qword [var_38h];mov rcx, qword [var_30h];mov rbx, qword [var_40h];mov rsi, qword [arg_108h];test rsi, rsi": 1,
                "sar rax, ;and rax, r8;add rax, rsi;mov qword [rsp], rax;sub r9, r8": 1,
                "mov rcx, qword [var_80h];add rax, rcx;mov rdx, qword [var_d0h];mov rdx, qword [rdx + 8];cmp rax, rdx": 1,
                "mov rcx, r9;neg r9;sar r9, ;and r9, r8;mov rdx, qword [arg_120h]": 1,
                "mov qword [var_8h], rcx;mov qword [var_10h], r9;mov qword [var_18h], r12;mov qword [var_20h], r10;call fcn.00440d10": 1,
                "and rsi, rdi;mov r12, qword [arg_120h];add rsi, r12;mov r13, qword [var_a0h];cmp r10, r13": 1,
                "mov r12, qword [arg_120h];add rsi, r12;mov r13, qword [var_a0h];cmp r10, r13;ja ": 1,
                "mov rbx, qword [arg_90h];mov qword [rsp], rbx;mov qword [var_8h], rax;mov qword [var_10h], rcx;mov qword [var_18h], rdx": 3,
                "mov qword [var_18h], rdx;movups xmmword [var_20h], xmm0;mov qword [var_30h], 2;lea rax, [var_58h];mov qword [var_38h], rax": 1,
                "cmp cl, ;sbb esi, esi;and ebx, ;lea rdi, [];movzx r8d, byte [rbx + rdi]": 2,
                "xor ecx, ecx;jmp ;lea rcx, [r9 + 1];cmp rcx, rax;jge ": 3,
                "jge ;movzx ebx, byte [rdx + rcx];cmp bl, ;jae ;mov esi, ebx": 3,
                "movzx ebx, byte [rdx + rcx];cmp bl, ;jae ;mov esi, ebx;shr bl, 4": 3,
                "mov r13d, 1;shl r13d, cl;and r13d, r10d;test r13b, r9b;setne r8b": 3,
                "jbe ;mov qword [arg_68h], rdx;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax": 3,
                "test rax, rax;mov rcx, qword [arg_f0h];mov rdx, qword [arg_100h];mov rbx, rcx;cmovne rcx, rdx": 4,
                "mov r12, ;jmp ;mov r13, qword [var_a8h];mov r14, qword [arg_f8h];mov r15, qword [arg_108h]": 3,
                "mov rcx, qword [r8 + ];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov qword [var_80h], r12;mov qword [var_88h], r11;mov rcx, qword [r8 + ];mov rcx, qword [rcx + ];mov qword [rsp], r8": 2,
                "mov qword [var_40h], r11;mov qword [var_48h], rcx;mov qword [var_50h], 0;movups xmmword [var_58h], xmm0;call fcn.00512a90": 2,
                "mov rbx, qword [rdx + 8];mov rsi, qword [var_88h];cmp rsi, rbx;je ;mov esi, 1": 2,
                "mov qword [var_18h], rax;call fcn.005176b0;mov rax, qword [var_30h];mov rcx, qword [var_28h];mov rdx, qword [var_20h]": 2,
                "mov rax, qword [var_a0h];inc rax;mov rbx, qword [var_b8h];mov rdi, qword [var_c0h];jmp ": 2,
                "jmp ;mov r8, qword [var_a8h];test r8, r8;jl ;cmp rsi, r8": 2,
                "ja ;sub r8, rsi;mov rcx, r8;neg r8;sar r8, ": 2,
                "mov rcx, r8;neg r8;sar r8, ;and r8, rsi;mov rdx, qword [arg_e8h]": 2,
                "jmp fcn.005177b0;int3;int3;int3;int3": 2,
                "mov qword [var_50h], 0;movups xmmword [var_58h], xmm0;call fcn.00512a90;mov rax, qword [var_68h];mov rcx, qword [var_78h]": 1,
                "ret;call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.00517f60": 1,
                "mov qword [rsp + ], 0;mov qword [rsp + ], 2;mov qword [rsp + ], 0;movups xmmword [rsp + ], xmm0;call fcn.00512a90": 1,
                "mov qword [rsp + ], rdx;mov rbx, qword [rsp + ];mov qword [rsp + ], rbx;mov rbx, qword [rsp + ];mov qword [rsp + ], rbx": 1,
                "jge ;mov r9, r8;shl r8, 1;cmp r8, rdx;jge ": 2,
                "mov r9, qword [rdi + r9];test r9, r9;jl ;lea r10, [r8 + r8];lea r10, [r10 + 1]": 1,
                "lea r10, [r8 + r8];lea r10, [r10 + 1];cmp r10, rdx;jae ;mov r10, qword [rdi + r10*8]": 1,
                "ja ;mov qword [var_50h], rax;mov rdx, qword [arg_b8h];lea rbx, [rax + rdx];mov qword [var_68h], rbx": 1,
                "mov qword [arg_b0h], rdi;mov qword [arg_c0h], rsi;lea rcx, [rdi + rdx];mov qword [rsp], rcx;mov rcx, qword [arg_c8h]": 1,
                "mov qword [arg_c0h], rsi;lea rcx, [rdi + rdx];mov qword [rsp], rcx;mov rcx, qword [arg_c8h];mov qword [var_8h], rcx": 1,
                "mov qword [var_8h], rbx;mov rbx, qword [var_68h];mov qword [var_10h], rbx;mov qword [var_18h], rcx;mov qword [var_20h], rax": 1,
                "jl ;lea rbx, [rax + rax];lea rbx, [rbx + 1];mov rsi, qword [arg_108h];cmp rbx, rsi": 1,
                "neg r9;sar r9, ;and r9, rdi;lea rdi, [r8 + r9];mov r9, qword [arg_c0h]": 1,
                "mov r9, qword [arg_c0h];cmp r11, r9;ja ;mov r13, qword [arg_b0h];mov qword [arg_b0h], r13": 1,
                "mov rcx, qword [arg_b0h];mov rdx, qword [arg_c0h];mov rsi, qword [arg_108h];mov rbx, rdx;mov rdi, rcx": 1,
                "mov r14, qword [arg_b0h];mov qword [arg_b0h], r14;mov qword [arg_c0h], r13;lea rax, [r14 + r10];mov qword [rsp], rax": 1,
                "sub rsp, ;mov qword [var_38h], rbp;lea rbp, [var_38h];mov rax, qword [arg_50h];cmp rax, 2": 1,
                "jne ;cmp byte [rcx + 1], ;jne ;add rax, ;mov rdx, rax": 1,
                "movzx ecx, byte [var_23h];mov rdx, r8;mov rbx, rsi;mov qword [var_30h], rbx;cmp rbx, rdx": 1,
                "mov qword [var_30h], rbx;cmp rbx, rdx;jge ;ja ;sub rdx, rbx": 1,
                "add rdx, rax;mov qword [rsp], rdx;mov qword [var_8h], rsi;call fcn.00462c90;mov eax, dword [var_10h]": 1,
                "mov qword [var_28h], rcx;cmp eax, ;ja ;movzx edx, al;lea rbx, []": 1,
                "lea rbx, [];movzx edx, byte [rdx + rbx];test dl, ;setne dl;test dl, dl": 1,
                "test rax, rax;je ;jl ;mov rcx, qword [arg_50h];cmp rax, rcx": 1,
                "jl ;mov rcx, qword [arg_50h];cmp rax, rcx;ja ;movzx edx, byte [var_23h]": 1,
                "cmp rax, rcx;jge ;mov rdx, qword [arg_48h];movzx ebx, byte [rdx + rax];cmp bl, ": 1,
                "jb ;cmp r8b, ;ja ;cmp rdi, ;jl ": 1,
                "cmp rdi, ;jl ;test rax, rax;mov rsi, ;jbe ": 1,
                "jl ;test rax, rax;mov rsi, ;jbe ;cmp byte [rdx], ": 1,
                "jmp ;test rax, rax;jmp ;test rax, rax;mov rsi, rdi": 1,
                "lea rdx, [rax - 1];mov rax, rbx;xor ecx, ecx;jmp ;xorps xmm0, xmm0": 1,
                "ud2;call fcn.00456090;jmp fcn.00519180;int3;int3": 1,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword [rsp + ];mov rcx, qword [rax + ];mov rcx, qword [rcx + ]": 3,
                "lea rbp, [var_b8h];xorps xmm0, xmm0;movups xmmword [var_90h], xmm0;movups xmmword [var_a0h], xmm0;mov rax, qword [arg_c8h]": 1,
                "mov rcx, qword [rcx + ];mov qword [rsp], rax;movups xmmword [var_8h], xmm0;mov qword [var_18h], 0;movups xmmword [var_20h], xmm0": 1,
                "lea rcx, [];mov qword [rsp], rcx;inc rax;mov qword [var_80h], rax;mov qword [var_8h], rax": 1,
                "jae ;mov r8, r9;shl r9, 4;mov r10, qword [rbx + r9];test r10, r10": 1,
                "cmp dword [], 0;jne ;mov qword [rax + r9], r10;jmp ;mov r9, rdi": 1,
                "ret;mov qword [arg_e0h], 0;xorps xmm0, xmm0;movups xmmword [arg_e8h], xmm0;mov rbp, qword [var_b8h]": 1,
                "xorps xmm0, xmm0;movups xmmword [var_8h], xmm0;mov qword [var_18h], 0;movups xmmword [var_20h], xmm0;mov rdx, qword [arg_98h]": 2,
                "mov rcx, qword [var_28h];mov rdx, qword [var_30h];mov qword [arg_a8h], rax;mov qword [arg_b0h], rcx;mov qword [arg_b8h], rdx": 2,
                "mov qword [arg_a8h], rax;mov qword [arg_b0h], rcx;mov qword [arg_b8h], rdx;mov rbp, qword [var_80h];add rsp, ": 2,
                "mov qword [rsp + ], 0;xorps xmm0, xmm0;movups xmmword [rsp + ], xmm0;mov qword [rsp + ], 0;movups xmmword [rsp + ], xmm0": 3,
                "mov rdx, qword [rsp + ];mov qword [rsp + ], rdx;mov rbx, qword [rsp + ];mov qword [rsp], rbx;movups xmmword [rsp + 8], xmm0": 3,
                "mov qword [rsp + ], rdx;mov rbx, qword [rsp + ];mov qword [rsp], rbx;movups xmmword [rsp + 8], xmm0;mov qword [rsp + ], rax": 3,
                "mov qword [rsp + ], rax;call fcn.005177b0;mov rax, qword [rsp + ];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp], rax;movups xmmword [rsp + 8], xmm0;mov rax, qword [rsp + ]": 1,
                "mov qword [rsp + ], rax;mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;inc rax;mov rcx, qword [rsp + ]": 1,
                "lea rax, [var_50h];mov qword [var_48h], rax;mov rax, qword [arg_78h];mov qword [rsp], rax;mov rax, qword [arg_80h]": 5,
                "mov qword [var_38h], rax;call fcn.005177b0;mov rax, qword [var_50h];mov rcx, qword [var_58h];mov rdx, qword [var_60h]": 7,
                "lea rax, [var_50h];mov qword [var_48h], rax;mov rax, qword [arg_78h];mov qword [rsp], rax;movups xmmword [var_8h], xmm0": 2,
                "mov qword [var_60h], rax;mov rax, qword [arg_90h];mov qword [var_68h], rax;mov rcx, qword [arg_98h];mov qword [var_70h], rcx": 3,
                "mov rdx, qword [rsp + ];test rdx, rdx;je ;mov qword [rsp], rcx;mov rcx, qword [rsp + ]": 3,
                "mov qword [rsp], rcx;mov rcx, qword [rsp + ];mov qword [rsp + 8], rcx;mov qword [rsp + ], rdx;mov qword [rsp + ], rax": 3,
                "mov qword [rsp + 8], rcx;mov qword [rsp + ], rdx;mov qword [rsp + ], rax;call fcn.00519d80;mov rax, qword [rsp + ]": 3,
                "call fcn.00519d80;mov rax, qword [rsp + ];mov qword [rsp + ], rax;mov rcx, qword [rsp + ];mov qword [rsp + ], rcx": 3,
                "cmp r11, r15;jge ;test r13, r13;jbe ;mov r10, qword [r14]": 3,
                "jl ;cmp r12, r10;ja ;cmp r10, rbx;ja ": 3,
                "cmp dword [], 0;jne ;mov qword [rax + r11], r10;inc r9;mov r10, qword [r14 + 8]": 3,
                "cmp dword [], 0;jne ;mov qword [rax + r13], rbx;mov qword [rsp + ], rax;mov qword [rsp + ], rdx": 2,
                "mov rax, rsi;jmp ;mov qword [rsp + ], r13;mov qword [rsp + ], r8;mov qword [rsp + ], rbx": 2,
                "mov qword [rsp + ], rcx;mov qword [rsp + ], rdx;call fcn.00440d10;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 2,
                "mov qword [rsp + ], r8;mov qword [rsp + ], r9;mov qword [rsp + ], r15;mov qword [rsp + ], r10;mov qword [rsp + ], r14": 2,
                "mov qword [rsp + ], r15;mov qword [rsp + ], r10;mov qword [rsp + ], r14;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rcx, qword [];mov qword [rdi + 8], rax;cmp dword [], 0;jne ;mov rcx, qword gs:[]": 1,
                "call fcn.0050ec20;call fcn.00461db0;call fcn.00462900;call fcn.0049aff0;call fcn.004f3bd0": 1,
                "mov qword [rsp + ], 1;call fcn.00409930;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];add rcx, ": 1,
                "call fcn.00409930;mov rax, qword [rsp + ];mov qword [rsp + ], rax;mov rbp, qword [rsp + ];mov rcx, qword gs:[]": 1,
                "mov rax, qword [rsp + ];mov qword [rsp + ], rax;mov rbp, qword [rsp + ];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rcx, qword [arg_28h];mov qword [rax + ], rcx;mov rcx, qword [arg_38h];mov qword [rax + ], rcx;cmp dword [], 0": 1,
                "test eax, eax;jne ;mov rcx, qword [rsp + ];mov rdx, qword [rsp + ];mov qword [rdx + ], rcx": 2,
                "lea rsi, [rdi + ];lea rdi, [rdx + rdx*4];shl rdi, 1;sub rsi, rdi;cmp rbx, ": 2,
                "shl rdi, 1;sub rsi, rdi;cmp rbx, ;jb ;jmp ": 2,
                "mov rdx, qword [rcx + 8];mov rbx, rdx;sub rdx, rax;add rdx, ;mov qword [var_50h], rdx": 2,
                "cmp rdx, rdi;ja ;mov qword [var_48h], rdi;mov qword [var_78h], rsi;lea rcx, [rsi + rbx]": 2,
                "mov qword [var_78h], rsi;lea rcx, [rsi + rbx];mov qword [rsp], rcx;mov qword [var_8h], rax;neg r9": 2,
                "mov rdi, qword [arg_90h];mov qword [rdi + 8], rax;mov rax, qword [var_48h];mov qword [rdi + ], rax;cmp dword [], 0": 2,
                "mov r9, qword [rdx + 8];cmp rsi, r8;ja ;mov qword [var_78h], r8;mov qword [var_90h], rdi": 3,
                "mov rdi, qword [arg_c8h];mov qword [rdi + 8], rax;mov rax, qword [var_78h];mov qword [rdi + ], rax;cmp dword [], 0": 3,
                "mov rax, qword [arg_c0h];mov rcx, qword [rax + ];test rcx, 7;je ;bt ecx, 5": 2,
                "mov qword [var_a8h], rdx;bt rcx, ;jae ;mov rdx, rcx;shl rcx, 1": 2,
                "shl rcx, 1;shr rcx, ;movabs rbx, ;add rcx, rbx;mov qword [var_a0h], rcx": 2,
                "inc rcx;sub rax, rcx;mov rbx, rax;neg rax;sar rax, ": 2,
                "add rax, rdx;mov qword [arg_f0h], rbx;mov rcx, qword [rdi + 8];mov qword [var_80h], rcx;lea rdx, [rbx + rcx]": 2,
                "mov qword [var_10h], rbx;call fcn.00459210;mov rax, qword [var_78h];mov rdi, qword [arg_c8h];mov qword [rdi + 8], rax": 2,
                "mov esi, ;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "mov rcx, qword [var_78h];mov rdi, qword [arg_c8h];jmp ;lea rsi, [];mov qword [rsp], rsi": 1,
                "mov rax, rdx;jmp ;mov rbx, qword [arg_f0h];mov rax, qword [arg_e8h];jmp ": 1,
                "mov rdx, qword [var_28h];mov qword [var_50h], rdx;mov rbx, qword [arg_c8h];mov qword [rsp], rbx;mov qword [var_8h], rax": 1,
                "call fcn.0051dce0;mov rax, qword [arg_c8h];mov rcx, qword [rax + 8];lea rdx, [rcx + 1];mov rbx, qword [rax + ]": 1,
                "lea rbp, [var_a0h];xorps xmm0, xmm0;movups xmmword [arg_d0h], xmm0;call fcn.004b9d00;mov rax, qword [arg_b0h]": 1,
                "mov qword [var_98h], rbx;mov qword [rsp], rax;call fcn.00460900;mov dword [rsp], 8;lea rax, []": 1,
                "mov qword [var_8h], rsi;mov rdi, qword [var_70h];mov qword [var_10h], rdi;mov rdi, qword [var_78h];mov qword [var_18h], rdi": 1,
                "mov rcx, qword [rax + ];mov qword [var_68h], rcx;mov rdx, qword [arg_c8h];lea rbx, [rcx + rdx];mov qword [var_60h], rbx": 1,
                "mov qword [rcx + ], rbx;mov rsi, qword [arg_c8h];test rsi, rsi;jne ;mov rdi, qword [var_68h]": 1,
                "mov rbp, qword [var_a0h];add rsp, ;ret;lea rcx, [];mov qword [rsp], rcx": 1,
                "mov qword [rsp], rax;call fcn.00460be0;mov rax, qword [arg_b8h];mov qword [rsp], rax;call fcn.004096a0": 1,
                "mov qword [rsp], rax;call fcn.004096a0;mov rax, qword [var_20h];mov qword [var_48h], rax;movzx ecx, byte [var_28h]": 1,
                "mov rdx, qword [arg_48h];mov qword [rsp], rdx;mov qword [var_8h], 2;mov qword [var_10h], rax;mov qword [var_18h], rcx": 5,
                "mov qword [rsp], 1;call fcn.004d0180;mov rbp, qword [rsp + ];add rsp, ;ret": 5,
                "call fcn.00456090;jmp fcn.0051f170;int3;int3;int3": 3,
                "mov qword [rdx + ], rcx;cmp dword [], 0;jne ;mov rax, qword [rsp + ];mov qword [rdx + 8], rax": 1,
                "mov qword [var_10h], rax;mov rax, qword [arg_60h];mov qword [var_18h], rax;mov rax, qword [arg_68h];mov qword [var_20h], rax": 6,
                "mov rcx, qword [var_28h];mov rdx, qword [var_30h];mov qword [rsp], rax;mov qword [var_8h], 2;mov qword [var_10h], rcx": 4,
                "call fcn.00456090;jmp fcn.0051f7a0;int3;int3;int3": 3,
                "mov rax, qword [];lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax;xorps xmm0, xmm0": 5,
                "jmp ;call fcn.00456090;jmp fcn.0051f930;int3;int3": 5,
                "cmp sil, ;je ;cmp sil, ;je ;inc rbx": 6,
                "je ;inc rbx;add rdx, 2;cmp rdx, rax;jl ": 6,
                "jbe ;sub rsp, ;mov qword [var_90h], rbp;lea rbp, [var_90h];mov rcx, qword gs:[]": 1,
                "mov rax, qword [arg_a0h];mov qword [var_30h], rax;mov rcx, qword [arg_a8h];mov qword [var_38h], rcx;movups xmmword [var_40h], xmm0": 6,
                "jne ;xor eax, eax;xor ecx, ecx;mov qword [var_80h], rax;mov rcx, qword gs:[]": 1,
                "call fcn.004f3240;mov rax, qword [var_20h];cmp rax, ;je ;test rax, rax": 7,
                "mov qword [arg_b0h], rdx;mov qword [arg_b8h], rax;add rax, 2;cmp rax, rcx;ja ": 5,
                "cmp r9, 5;jne ;cmp dword [r8], ;jne ;cmp byte [r8 + 4], ": 10,
                "jge ;add rcx, ;mov rbx, qword [rcx + 8];mov rsi, qword [rcx + ];mov rdi, qword [rcx]": 4,
                "mov rax, qword [var_10h];mov qword [arg_d0h], rax;mov rbp, qword [var_90h];add rsp, ;ret": 4,
                "mov rcx, qword [var_88h];mov qword [arg_b0h], rcx;mov rcx, qword [var_80h];mov qword [arg_b8h], rcx;xor ebx, ebx": 3,
                "jmp fcn.0051fe70;int3;int3;int3;int3": 2,
                "je ;mov rax, qword [arg_80h];mov rax, qword [rax + ];mov rcx, qword [arg_88h];mov rcx, qword gs:[]": 1,
                "mov qword [var_58h], rcx;call rax;mov rbp, qword [var_70h];add rsp, ;ret": 2,
                "call rax;mov rbp, qword [var_70h];add rsp, ;ret;xorps xmm0, xmm0": 2,
                "mov qword [arg_80h], rax;mov qword [arg_88h], rcx;jmp ;call fcn.00456090;jmp fcn.0051ff30": 2,
                "mov rax, qword [var_8h];lea rcx, [];mov qword [rax], rcx;mov rcx, qword [arg_28h];mov qword [rax + 8], rcx": 3,
                "mov rcx, qword [arg_30h];mov qword [rax + ], rcx;mov rcx, qword [var_10h];mov qword [arg_38h], rcx;mov qword [arg_40h], rax": 3,
                "mov qword [var_10h], rdx;call fcn.0046a150;mov rax, qword [var_a0h];mov rcx, qword [var_88h];cmp rax, rcx": 4,
                "cmp bl, ;je ;lea rbx, [rax + 2];test rbx, rbx;jl ": 4,
                "cmp rax, rbx;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rcx, qword [var_120h];mov rdx, qword [var_70h];mov rbx, r8;mov rsi, r9;xorps xmm0, xmm0": 3,
                "mov rax, qword [var_8h];mov qword [rsp], rax;call fcn.004472f0;mov rax, qword [var_8h];mov qword [rsp], rax": 7,
                "and rdx, rax;mov r8, qword [var_120h];add rdx, r8;mov qword [var_e0h], rdx;sub rbx, rdi": 2,
                "mov r8, qword [var_120h];add rdx, r8;mov qword [var_e0h], rdx;sub rbx, rdi;mov qword [var_78h], rbx": 2,
                "jle ;mov qword [var_d0h], rax;mov qword [var_c8h], rdi;test rcx, rcx;jg ": 2,
                "mov r9, qword [var_160h];mov r10, qword [var_158h];cmp r9, rax;ja ;mov qword [var_120h], r8": 2,
                "mov r10, qword [var_158h];cmp r9, rax;ja ;mov qword [var_120h], r8;mov qword [var_68h], rdi": 2,
                "mov qword [var_68h], rdi;mov qword [var_70h], rsi;mov qword [rsp], 0;sub r10, r9;mov rdx, r10": 2,
                "sub rax, r9;mov qword [var_10h], rax;mov qword [var_18h], rdx;call fcn.00444c60;mov rax, qword [var_28h]": 2,
                "mov qword [var_10h], rax;mov qword [var_18h], rdx;call fcn.00444c60;mov rax, qword [var_28h];mov qword [var_60h], rax": 2,
                "mov qword [var_18h], rdx;call fcn.00444c60;mov rax, qword [var_28h];mov qword [var_60h], rax;mov rcx, qword [var_20h]": 2,
                "lea r9, [rdi + rdx];lea r9, [r9 + 8];cmp dword [], 0;jne ;mov qword [rdi + rdx + 8], r8": 2,
                "mov r9, qword [var_80h];jmp ;cmp qword [arg_1b0h], 0;je ;mov rdx, qword [arg_1b0h]": 1,
                "call fcn.004d0180;jmp ;lea rdx, [var_50h];mov qword [rsp], rdx;mov qword [var_8h], rcx": 1,
                "lea rbp, [var_28h];mov rax, qword [arg_70h];test rax, rax;je ;cmp byte [arg_60h], 0": 3,
                "cmp byte [arg_60h], 0;jne ;cmp byte [arg_61h], 0;je ;mov rcx, qword [arg_68h]": 3,
                "call fcn.0051f670;jmp ;mov rcx, qword [arg_68h];mov qword [rsp], rcx;mov qword [var_8h], rax": 3,
                "mov rax, qword [arg_80h];mov qword [var_18h], rax;mov rax, qword [arg_88h];mov qword [var_20h], rax;call fcn.0051f850": 3,
                "sub rsp, ;mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword [rdx + 8];mov rcx, qword [rdx + ]": 5,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 6;call fcn.00515750;mov rax, qword [var_10h]": 3,
                "mov qword [], rax;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;call fcn.00515750": 10,
                "call fcn.004580f0;jmp ;call fcn.00456090;jmp fcn.005214e0;int3": 3,
                "mov rdx, qword [rsp + ];mov rbx, qword [rdx];mov rsi, qword [rdx + 8];cmp qword [rax + 8], rsi;je ": 4,
                "je ;mov rcx, qword [rax];mov rax, qword [rax + 8];mov qword [rsp], rcx;mov qword [rsp + 8], rax": 11,
                "mov rax, qword [rax + 8];mov qword [rsp], rcx;mov qword [rsp + 8], rax;call fcn.005200b0;mov rax, qword [rsp + ]": 2,
                "call fcn.005221c0;mov rax, qword [var_20h];mov rcx, qword [var_18h];mov qword [arg_70h], rcx;mov qword [arg_78h], rax": 1,
                "mov rbp, qword [var_38h];add rsp, ;ret;call fcn.00456090;jmp fcn.00521c70": 1,
                "call fcn.00456090;jmp fcn.00521c70;int3;int3;int3": 1,
                "lea rsi, [];mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458f00;mov rbp, qword [rbp]": 1,
                "mov qword [rsp + ], rax;mov qword [rsp + ], ;mov qword [rsp + ], rdx;mov qword [rsp + ], rbx;call fcn.00444b60": 1,
                "je ;mov rax, qword [rsp + ];mov rcx, qword [rax];mov rax, qword [rax + 8];mov rcx, qword [rcx + ]": 1,
                "mov rax, qword [rax + 8];mov rcx, qword [rcx + ];mov qword [rsp], rax;call rcx;mov rax, qword [rsp + 8]": 12,
                "call rcx;mov rax, qword [rsp + 8];mov rcx, qword [rsp + ];mov qword [rsp], 0;lea rdx, []": 3,
                "mov qword [arg_a8h], rax;mov rbp, qword [var_78h];add rsp, ;ret;lea rdi, [rax + 8]": 1,
                "call fcn.004580f0;mov rax, rcx;jmp ;xor ecx, ecx;xor eax, eax": 1,
                "bt esi, 9;jae ;xor edi, edi;test dil, dil;jne ": 1,
                "mov rcx, qword [var_50h];mov qword [var_10h], rcx;mov rcx, qword [var_38h];mov qword [var_18h], rcx;call fcn.00522c50": 1,
                "mov qword [arg_a8h], rax;mov rbp, qword [var_78h];add rsp, ;ret;mov rax, qword [arg_88h]": 1,
                "call fcn.004580f0;jmp ;mov rax, rdx;xor edx, edx;xor ebx, ebx": 1,
                "movzx eax, byte [rcx];cmp al, ;jne ;lea rax, [rbx - 1];mov rdx, rax": 1,
                "ja ;lea rcx, [rdx - 2];mov rdx, rcx;neg rcx;sar rcx, ": 1,
                "mov rcx, rdx;neg rdx;sar rdx, ;and rdx, 1;add rax, rdx": 2,
                "lea rcx, [rdx - 1];test rcx, rcx;jbe ;movzx ebx, byte [rax + 1];cmp bl, ": 1,
                "mov rdx, qword [rax + ];test rcx, rcx;je ;mov rbx, qword [arg_38h];test rbx, rbx": 2,
                "mov rbx, qword [arg_38h];test rbx, rbx;je ;cmp dword [rbx + ], ;jne ": 2,
                "mov rcx, qword [arg_30h];mov rbx, qword [rcx + ];mov rax, qword [rcx + ];mov qword [rdx + ], rbx;cmp dword [], 0": 2,
                "mov rbp, qword [var_20h];add rsp, ;ret;lea rdi, [rdx + ];call fcn.004580f0": 7,
                "jmp ;cmp qword [rax + ], 0;jne ;mov rbx, qword [arg_38h];jmp ": 2,
                "mov rsi, qword [rax];cmp rcx, rbx;jge ;mov rdx, qword [rax + ];jae ": 3,
                "mov qword [rsp], rbx;mov byte [var_8h], cl;mov rcx, qword [rdx];call rcx;mov rax, qword [var_10h]": 3,
                "call rcx;mov rax, qword [var_10h];mov rcx, qword [arg_28h];mov qword [rcx + ], rax;inc qword [rcx + ]": 3,
                "call fcn.00533950;mov rax, qword [var_8h];mov rcx, qword [arg_28h];mov qword [rcx + ], rax;mov rax, qword [rcx + 8]": 3,
                "ud2;call fcn.00456090;jmp fcn.00522aa0;int3;int3": 3,
                "mov qword [rdx + ], rax;mov qword [rdx + ], rcx;mov rbp, qword [var_38h];add rsp, ;ret": 4,
                "call fcn.005243f0;mov rax, qword [var_28h];mov rcx, qword [var_20h];test rcx, rcx;jne ": 4,
                "call fcn.00523720;mov rax, qword [var_20h];mov rcx, qword [var_28h];test rax, rax;jne ": 4,
                "test rsi, rsi;jl ;mov rdi, qword [var_50h];dec rdi;mov rcx, qword gs:[]": 1,
                "mov qword [var_8h], rax;call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.00522c50": 3,
                "ud2;call fcn.00456090;jmp fcn.00522c50;int3;int3": 3,
                "mov rax, qword [arg_28h];mov rcx, qword [rax + ];cmp rcx, 1;je ;cmp rcx, 2": 3,
                "call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.00522eb0;int3": 2,
                "mov qword [var_70h], rbp;lea rbp, [var_70h];mov rax, qword [arg_90h];mov rcx, rax;and rax, ": 3,
                "je ;mov rcx, qword [var_38h];mov rdx, rcx;and rcx, ;cmp rcx, ": 2,
                "test rax, ;je ;movzx ecx, byte [var_37h];test cl, cl;je ": 2,
                "cmp byte [var_28h], 0;jne ;movzx eax, byte [arg_98h];test al, al;je ": 2,
                "mov rcx, qword [var_58h];mov rbx, qword [rcx];test rbx, rbx;jne ;mov rax, qword [var_50h]": 1,
                "mov rbx, qword [rcx];test rbx, rbx;jne ;mov rax, qword [var_50h];mov qword [rsp], rax": 1,
                "mov qword [var_8h], rsi;mov rdi, qword [var_38h];mov qword [var_10h], rdi;mov qword [var_18h], rcx;mov qword [var_20h], rax": 1,
                "mov qword [arg_c0h], rax;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "mov qword [var_8h], rcx;mov rdx, qword [arg_100h];mov qword [var_10h], rdx;mov byte [var_18h], 0;call fcn.00522fa0": 1,
                "mov rcx, qword [var_28h];mov rdx, qword [var_50h];mov rbx, qword [var_48h];mov rsi, qword [var_40h];mov rdi, qword [var_30h]": 2,
                "jle ;mov rcx, qword [var_b8h];mov qword [rsp], rcx;mov rdx, qword [var_c0h];mov qword [var_8h], rdx": 1,
                "mov rcx, qword [var_b8h];mov qword [rsp], rcx;mov rdx, qword [var_c0h];mov qword [var_8h], rdx;mov rbx, qword [var_90h]": 3,
                "mov rbx, qword [var_90h];mov qword [var_10h], rbx;call fcn.0048a290;mov rax, qword [var_60h];cmp qword [var_18h], rax": 1,
                "mov qword [var_10h], rbx;call fcn.0048a290;mov rax, qword [var_60h];cmp qword [var_18h], rax;jle ": 1,
                "call fcn.0048a290;mov rax, qword [var_60h];cmp qword [var_18h], rax;jle ;mov rcx, qword [var_88h]": 1,
                "call rax;mov rax, qword [var_10h];mov rcx, qword [var_8h];mov qword [rsp], rcx;mov qword [var_8h], rax": 12,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.0048dfe0;mov rax, qword [var_10h];mov qword [var_b0h], rax": 1,
                "mov rax, qword [var_b0h];mov qword [var_18h], rax;mov rcx, qword [var_a8h];mov qword [var_20h], rcx;mov rdx, qword [var_80h]": 1,
                "call fcn.00488cb0;mov rax, qword [var_60h];cmp qword [var_18h], rax;jle ;mov rax, qword [var_b8h]": 1,
                "mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rdx, qword [arg_2c0h];mov qword [rdx + ], rcx;cmp dword [], 0": 1,
                "mov rcx, qword [var_238h];lea rdx, [rcx + rax];cmp byte [var_30h], 0;jne ;mov rbx, qword [var_1d0h]": 1,
                "mov qword [var_8h], rsi;mov qword [var_10h], rbx;mov rax, qword [var_1d8h];mov qword [var_18h], rax;mov rbx, qword [var_f0h]": 1,
                "call rdi;movzx eax, byte [var_30h];mov rcx, qword [var_238h];mov rdx, qword [var_1c8h];mov rbx, qword [var_1d0h]": 1,
                "jmp ;test rdx, rdx;je ;mov qword [var_200h], rdx;movzx ebx, byte [rdx + ]": 1,
                "mov rsi, qword [rdx + ];mov qword [var_110h], rsi;mov r8, qword [rdx + ];mov qword [var_1f8h], r8;mov r9, qword [var_130h]": 1,
                "movzx ebx, byte [var_5fh];mov rsi, qword [var_110h];mov rdi, qword [var_230h];mov r8, qword [var_1f8h];mov r12, qword [var_228h]": 1,
                "mov rdi, rdx;jmp ;call fcn.004580f0;jmp ;xor eax, eax": 1,
                "lea rbp, [var_350h];mov rax, qword [arg_370h];test rax, rax;jne ;mov rax, qword [arg_380h]": 2,
                "mov rax, qword [arg_380h];mov qword [rsp], rax;mov rax, qword [arg_388h];mov qword [var_8h], rax;mov rax, qword [arg_390h]": 3,
                "mov rcx, qword [rcx + 8];xorps xmm0, xmm0;movups xmmword [var_330h], xmm0;movups xmmword [var_340h], xmm0;lea rdx, []": 2,
                "mov rax, qword [var_30h];mov qword [var_a0h], rax;mov rcx, qword [var_28h];mov qword [var_198h], rcx;lea rdx, []": 2,
                "mov qword [rdi + 8], rax;cmp dword [], 0;jne ;mov rax, qword [var_198h];mov qword [rdi], rax": 2,
                "mov rcx, qword [var_20h];mov rdx, qword [arg_360h];mov qword [rdx + ], rax;cmp dword [], 0;jne ": 2,
                "mov rdx, qword [arg_368h];movzx ebx, byte [rdx];cmp bl, ;je ;movzx eax, byte [arg_398h]": 2,
                "mov rdx, qword [arg_380h];mov qword [rsp], rdx;mov rdx, qword [arg_388h];mov qword [var_8h], rdx;mov rdx, qword [arg_390h]": 2,
                "mov rdx, qword [arg_360h];mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "lea rsi, [];mov qword [rsp], rsi;call fcn.0040d880;mov rdi, qword [var_8h];mov rax, qword [var_68h]": 1,
                "mov rcx, qword [var_158h];mov qword [rdi], rcx;mov rcx, qword [var_100h];mov qword [rdi + ], rcx;cmp dword [], 0": 1,
                "mov rdx, rax;mov rax, qword [var_1e8h];call fcn.004580f0;mov rdi, rdx;jmp ": 1,
                "lea rcx, [];jmp ;mov rax, qword [arg_380h];mov qword [rsp], rax;mov rax, qword [arg_388h]": 1,
                "call fcn.0048d320;mov rax, qword [var_20h];mov qword [var_108h], rax;mov rcx, qword [var_18h];mov qword [var_100h], rcx": 1,
                "lea rax, [];mov rcx, qword [var_28h];mov qword [arg_48h], rax;mov qword [arg_50h], rcx;mov rbp, qword [var_30h]": 1,
                "mov qword [arg_98h], rdi;mov qword [arg_a0h], rcx;mov qword [arg_a8h], rsi;mov rbp, qword [var_80h];add rsp, ": 2,
                "mov qword [var_18h], rsi;call fcn.00413cb0;mov rax, qword [var_20h];mov rcx, qword [var_48h];mov qword [rax], rcx": 2,
                "je ;mov rcx, qword [rax + ];cmp rcx, 5;je ;cmp rcx, 4": 2,
                "jmp fcn.00529eb0;int3;int3;int3;int3": 1,
                "test rbx, rbx;jbe ;movzx edx, byte [rdx + rsi];cmp dl, ;ja ": 2,
                "lea rax, [];mov qword [arg_70h], rax;cmp dl, ;sete al;movzx eax, al": 2,
                "shl edx, 4;movzx ebx, bl;add edx, ebx;cmp rcx, 4;jge ": 2,
                "movzx ebx, bl;add edx, ebx;cmp rcx, 4;jge ;movzx ebx, byte [rax + rcx + 2]": 2,
                "movzx ebx, byte [rax + rcx + 2];cmp bl, ;jb ;cmp bl, ;ja ": 2,
                "mov rax, qword [arg_a8h];cmp rax, 2;jl ;mov rcx, qword [arg_a0h];cmp byte [rcx], ": 3,
                "mov rax, qword [var_18h];mov rcx, qword [var_38h];test rcx, rcx;jl ;mov rdx, qword [arg_b0h]": 2,
                "mov byte [rax + rbx], r9b;add rcx, 2;inc rbx;jmp ;cmp r9b, ": 2,
                "jmp ;cmp r9b, ;je ;mov qword [arg_b8h], 0;xorps xmm0, xmm0": 2,
                "jl ;cmp eax, ;jl ;cmp eax, ;setl cl": 2,
                "cmp eax, ;jl ;cmp eax, ;setl cl;mov rdx, qword [var_38h]": 2,
                "setl cl;mov rdx, qword [var_38h];lea rbx, [rdx + 6];mov qword [var_58h], rbx;test cl, cl": 2,
                "mov qword [arg_98h], rax;xorps xmm0, xmm0;movups xmmword [arg_a0h], xmm0;mov rbp, qword [var_68h];add rsp, ": 2,
                "inc rdx;cmp rdx, rax;jge ;mov qword [var_40h], rdx;movzx esi, byte [rcx + rdx]": 2,
                "je ;cmp sil, ;je ;cmp sil, ;jne ": 2,
                "mov r8, rsi;neg rsi;sar rsi, ;and rsi, rbx;add rsi, rcx": 4,
                "mov qword [var_18h], r8;call fcn.0046a020;mov rax, qword [arg_58h];mov qword [rsp], rax;lea rcx, []": 4,
                "movzx edx, byte [rcx + rax + 2];and edx, ;mov rbx, qword [];cmp qword [], rdx;jbe ": 3,
                "mov qword [var_10h], 4;call fcn.0046a150;movzx eax, byte [var_3fh];shr al, 4;movzx eax, al": 3,
                "mov qword [rsp], rdx;mov rdx, qword [arg_70h];sub rdx, rbx;mov rsi, rdx;neg rdx": 2,
                "mov qword [var_10h], rax;mov qword [var_18h], rsi;call fcn.0046a020;mov rbp, qword [var_48h];add rsp, ": 2,
                "lea rbp, [rsp + ];mov rax, qword [rsp + ];mov rcx, qword [rax + ];mov rax, qword [rax + ];mov qword [rsp], 0": 1,
                "sub rsp, ;mov qword [var_38h], rbp;lea rbp, [var_38h];xorps xmm0, xmm0;movups xmmword [arg_68h], xmm0": 2,
                "mov byte [var_21h], al;call fcn.0052bbd0;xorps xmm0, xmm0;movups xmmword [arg_68h], xmm0;call fcn.0042f500": 2,
                "mov rbp, qword [var_38h];add rsp, ;ret;call fcn.00456090;jmp fcn.0052b600": 2,
                "jne ;mov rcx, qword [arg_40h];movsxd rax, dword [rcx];jmp ;mov rcx, qword [arg_40h]": 3,
                "mov rax, qword [rcx];jmp ;lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 2,
                "call fcn.004580f0;jmp ;lea rcx, [rax - ];cmp rcx, 1;ja ": 2,
                "xorps xmm1, xmm1;ucomisd xmm0, xmm1;sete cl;setnp al;and ecx, eax": 2,
                "mov qword [var_10h], rcx;call fcn.0048a290;cmp qword [var_18h], 0;sete byte [arg_50h];mov rbp, qword [var_28h]": 1,
                "mov rax, qword [arg_40h];mov rax, qword [rax];test rax, rax;sete al;jmp ": 1,
                "jbe ;jmp ;mov rax, qword [var_20h];mov qword [rdi + ], rax;lea rax, []": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rdi;call fcn.0042f900;mov rcx, qword gs:[]": 1,
                "lea rbp, [var_28h];mov rax, qword [arg_40h];mov qword [rsp], rax;mov rcx, qword [arg_48h];mov qword [var_8h], rcx": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.0052bd10;mov rax, qword [var_10h];mov qword [arg_50h], rax": 2,
                "mov rcx, qword [rax + 8];lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rcx;mov rcx, qword [arg_68h]": 3,
                "lea rdx, [];cmp rcx, rdx;jne ;mov qword [arg_70h], rax;mov rbp, qword [var_50h]": 3,
                "je ;lea rdx, [];cmp rax, rdx;jne ;mov qword [arg_70h], rcx": 3,
                "mov qword [arg_70h], rcx;mov rbp, qword [var_50h];add rsp, ;ret;mov rax, qword [arg_60h]": 3,
                "mov rax, qword [var_40h];mov qword [rsp], rax;mov qword [var_8h], ;call fcn.00461ad0;mov rax, qword [var_48h]": 3,
                "mov rdx, rax;mov rax, qword [var_48h];call fcn.004580f0;mov rbx, qword [arg_60h];test rbx, rbx": 3,
                "call fcn.004580f0;mov rbx, qword [arg_60h];test rbx, rbx;mov rax, rcx;mov rcx, rdx": 3,
                "jmp ;mov rcx, rax;jmp ;mov qword [rsp], rax;mov qword [var_8h], rdx": 3,
                "jbe ;lea rax, [];mov qword [arg_48h], rax;mov rbp, qword [var_20h];add rsp, ": 1,
                "add rsp, ;ret;mov rax, qword [];mov qword [arg_48h], rax;mov rbp, qword [var_20h]": 2,
                "mov qword [rsp], rax;mov rax, qword [arg_38h];mov qword [var_8h], rax;call fcn.0052e630;mov rax, qword [var_10h]": 1,
                "call fcn.0052bfe0;mov rax, qword [var_18h];lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax": 2,
                "test dl, dl;jne ;ucomisd xmm0, xmm0;jne ;jp ": 1,
                "cmp rcx, ;jne ;movsd xmm2, qword [];ucomisd xmm2, xmm1;jbe ": 1,
                "cmp bl, ;jne ;lea rbx, [rdx - 3];cmp rbx, rdx;jae ": 1,
                "lea rbx, [rdx - 3];cmp rbx, rdx;jae ;movzx ebx, byte [rdx + rcx - 3];cmp bl, ": 1,
                "jae ;movzx ebx, byte [rdx + rcx - 3];cmp bl, ;jne ;lea rbx, [rdx - 2]": 1,
                "jne ;mov rbx, qword [arg_b0h];mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], rdx": 1,
                "mov qword [var_10h], ;mov rax, qword [arg_a8h];mov qword [var_18h], rax;call fcn.00476900;mov rax, qword [var_28h]": 1,
                "mov qword [rdi + ], rax;cmp dword [], 0;jne ;mov rcx, qword [arg_b8h];mov qword [rdi], rcx": 1,
                "mov rax, qword [arg_b8h];call fcn.004580f0;lea rcx, [rdi + 8];mov rax, rdi;mov rdi, rcx": 1,
                "mov rdi, rcx;mov rdx, rax;mov rax, qword [arg_c0h];call fcn.004580f0;mov rdi, rdx": 1,
                "movsd xmm0, qword [rax];jmp ;mov qword [var_68h], rax;lea rax, [];mov qword [rsp], rax": 1,
                "jmp ;xorps xmm0, xmm0;movups xmmword [var_88h], xmm0;lea rax, [];mov qword [var_88h], rax": 1,
                "mov r13, qword [arg_c0h];mov r14, qword [arg_d0h];mov qword [var_40h], rsi;cmp r15, r10;jge ": 1,
                "test r11, r11;je ;mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], rsi": 1,
                "mov rdx, qword [var_28h];jmp ;inc rdi;mov rax, r12;mov rcx, r13": 1,
                "test al, al;je ;mov rax, qword [var_70h];mov rcx, qword [arg_a0h];mov rdx, qword [rcx + rax + ]": 1,
                "call fcn.0046a150;mov rax, qword [var_70h];mov rcx, qword [arg_a0h];movzx ebx, byte [rcx + rax + ];mov rdx, qword [rcx + rax + ]": 1,
                "jmp ;mov rax, qword [var_70h];mov rcx, qword [arg_a0h];mov rdx, qword [rcx + rax + ];mov rbx, qword [rcx + rax + ]": 1,
                "mov r13, qword [arg_c0h];mov r14, qword [arg_d0h];jmp ;cmp r8b, ;jne ": 1,
                "mov qword [rsp], rax;mov byte [var_8h], ;call fcn.0046a6a0;jmp ;mov rax, qword [var_58h]": 1,
                "mov rcx, rax;and rax, ;mov qword [var_70h], rax;cmp rax, ;ja ": 2,
                "jb ;bt ecx, 7;jae ;mov rax, qword [arg_160h];mov rdx, qword [rax]": 2,
                "mov rax, qword [arg_150h];test byte [rax], al;mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax": 2,
                "test rcx, rcx;jg ;mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rcx": 2,
                "mov qword [var_10h], rcx;call fcn.0040ad00;mov rax, qword [var_18h];xorps xmm0, xmm0;movups xmmword [var_c8h], xmm0": 2,
                "lea rcx, [];mov qword [var_c8h], rcx;mov rcx, qword [var_b0h];mov qword [var_d0h], rcx;mov rdx, qword [var_48h]": 2,
                "movups xmmword [var_118h], xmm0;movups xmm0, xmmword [rcx + ];movups xmmword [var_128h], xmm0;mov rbx, qword [var_110h];mov qword [var_e8h], rbx": 2,
                "mov rsi, qword [rdx];call rsi;mov rax, qword [var_50h];inc rax;mov rcx, qword [var_48h]": 2,
                "mov byte [var_8h], ;call fcn.0046a6a0;mov rbp, qword [var_138h];add rsp, ;ret": 2,
                "mov qword [var_70h], rsi;mov r8, qword [rdx + 8];mov qword [var_98h], r8;mov r9, qword [rdx];mov qword [var_90h], r9": 2,
                "lea r10, [rbx + rbx*4];mov qword [rax + r10*8 + ], rsi;lea rdi, [rax + r10*8];lea r11, [rax + r10*8];lea r11, [r11 + 8]": 2,
                "mov rax, qword [var_8h];mov rcx, qword [var_10h];test rax, rax;jne ;mov rcx, qword [var_58h]": 2,
                "cmp rcx, rdx;jl ;mov rax, qword [var_b0h];mov rcx, rdx;jmp ": 2,
                "mov rax, qword [var_b0h];mov rcx, rdx;jmp ;mov qword [var_60h], rax;mov qword [var_80h], rcx": 1,
                "mov rax, qword [var_90h];mov qword [rsp], rax;mov rax, qword [var_98h];mov qword [var_8h], rax;mov rax, qword [var_70h]": 1,
                "mov qword [rsp + ], ;mov rbx, qword [rsp + ];mov qword [rsp + ], rbx;mov qword [rsp + ], rsi;mov rbx, qword [rsp + ]": 1,
                "mov qword [rsp + ], rsi;mov rbx, qword [rsp + ];mov qword [rsp + ], rbx;call fcn.004eba60;mov rax, qword [rsp + ]": 1,
                "mov rcx, qword [rsp + ];mov qword [rsp + 8], rcx;mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;mov qword [rsp + ], ": 1,
                "mov byte [rsp + 8], ;call fcn.0046a6a0;mov rbp, qword [rsp + ];add rsp, ;ret": 1,
                "mov qword [rsp + 8], rcx;mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;mov qword [rsp + ], rcx;call fcn.0046a020": 1,
                "mov rax, qword [rsp + 8];cmp dword [], 0;jne ;mov rcx, qword [rsp + ];mov qword [rax + ], rcx": 1,
                "lea rdx, [rdx + 2];sar rcx, ;sar rdx, 1;sub rdx, rcx;shl rdx, 2": 1,
                "lea rbp, [var_38h];mov rax, qword [arg_68h];mov rcx, rax;and rax, ;mov qword [var_30h], rax": 5,
                "cmp rbx, 1;ja ;bt ecx, 9;jae ;mov rax, qword [arg_50h]": 1,
                "ja ;bt ecx, 9;jae ;mov rax, qword [arg_50h];mov qword [rsp], rax": 1,
                "mov rdx, qword [arg_48h];mov rax, qword [rdx];call rax;mov rbp, qword [var_38h];add rsp, ": 4,
                "bt ecx, 7;jae ;mov rax, qword [arg_60h];mov rbx, qword [rax];test rbx, rbx": 1,
                "mov rax, qword [arg_60h];mov rbx, qword [rax];test rbx, rbx;sete bl;test bl, bl": 1,
                "test bl, bl;je ;mov rax, qword [arg_50h];test byte [rax], al;mov qword [rsp], rax": 1,
                "call fcn.0046a150;mov rbp, qword [var_38h];add rsp, ;ret;mov rax, qword [arg_60h]": 4,
                "cmp qword [rax], 0;sete bl;jmp ;lea rax, [];mov qword [rsp], rax": 1,
                "lea rax, [];call fcn.004580f0;jmp ;lea rbx, [rax - ];cmp rbx, 1": 1,
                "mov rdx, qword [arg_48h];mov qword [rsp], rdx;call rcx;mov rax, qword [var_8h];mov rcx, qword [var_10h]": 2,
                "cmp dword [], 0;jne ;mov rcx, qword [var_20h];mov qword [rax + 8], rcx;mov qword [arg_50h], rax": 2,
                "xor eax, 1;jmp ;mov qword [rsp], rcx;lea rax, [];mov qword [var_8h], rax": 2,
                "call fcn.00456090;jmp fcn.0052f510;int3;int3;int3": 2,
                "mov rcx, qword [var_40h];jmp ;mov rax, qword [arg_60h];mov qword [rsp], rax;mov byte [var_8h], ": 2,
                "mov qword [var_8h], rax;call fcn.0052bd10;mov rax, qword [var_10h];mov qword [var_18h], rax;lea rcx, []": 6,
                "mov rax, qword [var_10h];mov qword [var_18h], rax;lea rcx, [];mov qword [rsp], rcx;call fcn.0040d880": 7,
                "jae ;mov rax, qword [arg_58h];mov qword [rsp], rax;mov rax, qword [arg_60h];mov qword [var_8h], rax": 3,
                "mov qword [var_8h], rax;mov qword [var_10h], rcx;call fcn.00489000;mov rax, qword [var_28h];mov rcx, qword [var_20h]": 3,
                "mov rax, qword [var_28h];mov rcx, qword [var_20h];mov rdx, qword [var_18h];mov rbx, qword [arg_50h];mov qword [rsp], rbx": 3,
                "mov qword [var_10h], rcx;mov qword [var_18h], rax;movzx eax, byte [arg_70h];mov byte [var_20h], al;movzx eax, byte [arg_71h]": 3,
                "test dl, dl;je ;mov rax, qword [arg_50h];test byte [rax], al;mov qword [rsp], rax": 3,
                "jmp fcn.0052f8f0;int3;int3;int3;int3": 3,
                "call fcn.0052bd10;mov rax, qword [var_10h];mov qword [var_18h], rax;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "movzx eax, byte [arg_69h];mov byte [var_21h], al;mov rdx, qword [arg_38h];mov rax, qword [rdx];call rax": 4,
                "call fcn.00456090;jmp fcn.0052fb70;int3;int3;int3": 4,
                "mov qword [rax], rcx;cmp dword [], 0;jne ;mov rcx, qword [arg_20h];mov qword [rax + 8], rcx": 4,
                "mov rdx, qword [arg_48h];movzx ebx, byte [rdx + rcx];cmp ebx, ;jge ;inc rcx": 4,
                "lea rdx, [];movzx ecx, byte [rcx + rdx];test cl, ;setne cl;test cl, cl": 4,
                "jmp ;xor eax, eax;jmp ;mov rcx, qword [];mov qword [rsp], rcx": 4,
                "call fcn.00458f1c;mov rbp, qword [rbp];mov rdx, qword [var_b0h];mov rcx, qword [var_a8h];mov rax, qword [var_80h]": 4,
                "mov qword [var_80h], rax;mov qword [arg_100h], rcx;mov qword [arg_108h], rdx;mov rbx, qword [arg_110h];mov rsi, qword [rbx + rax*8]": 4,
                "call rax;mov rax, qword [var_10h];mov rcx, qword [var_8h];jmp ;mov qword [arg_128h], rcx": 4,
                "jne ;mov rcx, qword [rax + 8];mov rbx, qword [rax];mov qword [rsp], rbx;mov qword [var_8h], rcx": 4,
                "mov rcx, qword [rax + ];and rcx, ;mov qword [var_38h], rcx;lea rdx, [rcx - 2];cmp rdx, 4": 3,
                "and rcx, ;mov qword [var_38h], rcx;lea rdx, [rcx - 2];cmp rdx, 4;ja ": 3,
                "call fcn.004580f0;jmp ;cmp rcx, 3;jne ;movsx rcx, byte [rdx]": 2,
                "mov rcx, qword [rdx];jmp ;lea rdx, [rcx - 7];cmp rdx, 5;ja ": 2,
                "ja ;cmp rcx, 7;jne ;mov rcx, qword [rdx];mov qword [rsp], rcx": 2,
                "lea rdi, [rdx + ];call fcn.004580f0;jmp ;cmp rcx, 8;jne ": 2,
                "jmp ;cmp rcx, 9;jne ;movzx ecx, word [rdx];jmp ": 2,
                "cmp rcx, ;jne ;mov ecx, dword [rdx];jmp ;cmp rcx, ": 2,
                "jne ;mov rcx, qword [rdx];jmp ;mov rcx, qword [rcx + ];mov qword [rsp], rax": 2,
                "mov rcx, qword [rcx + ];mov qword [rsp], rax;call rcx;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "jne ;mov qword [rdx + ], rcx;mov rax, qword [var_30h];mov qword [arg_60h], rax;mov rax, qword [var_40h]": 1,
                "je ;xor r9d, r9d;test r9b, r9b;jne ;mov byte [var_33h], dil": 1,
                "cmp al, ;je ;cmp al, ;jne ;mov rcx, qword [arg_60h]": 1,
                "movzx r9d, byte [r10 + rdi];jmp ;mov qword [var_38h], rsi;sub rax, rbx;mov rsi, rax": 1,
                "sub rbx, rdx;mov rsi, rbx;neg rbx;sar rbx, ;and rdx, rbx": 1,
                "call fcn.0046a150;mov rax, qword [var_48h];mov rcx, qword [var_40h];lea rsi, [rcx + rax];mov rax, qword [arg_70h]": 1,
                "call fcn.0046a6a0;mov rax, qword [arg_78h];mov rcx, qword [arg_70h];movzx edx, byte [arg_88h];xor ebx, ebx": 1,
                "xor esi, esi;cmp rbx, rax;jge ;jae ;mov qword [var_50h], rbx": 1,
                "mov rax, qword [arg_68h];mov qword [rsp], rax;lea rcx, [];mov qword [var_8h], rcx;mov qword [var_10h], 3": 1,
                "cmp al, ;je ;cmp al, ;jne ;mov rcx, qword [arg_68h]": 1,
                "mov rcx, qword [var_20h];mov qword [var_48h], rcx;cmp eax, ;jne ;cmp rcx, 1": 1,
                "lea rbx, [rcx + rdi];mov rax, qword [arg_78h];mov rcx, qword [arg_70h];movzx edx, byte [arg_88h];lea r8, []": 1,
                "lea r8, [];mov rsi, qword [var_40h];jmp ;mov dword [var_3ch], eax;mov rdx, qword [var_40h]": 1,
                "mov qword [rsp], rcx;mov byte [var_8h], al;call fcn.0046a6a0;mov rax, qword [var_50h];mov rcx, qword [var_48h]": 1,
                "lea rsi, [rcx + rax];mov rax, qword [arg_78h];mov rcx, qword [arg_70h];movzx edx, byte [arg_88h];lea r8, []": 2,
                "and rbx, rax;mov r8, qword [arg_70h];add rbx, r8;mov qword [var_8h], rbx;sub rdx, rax": 1,
                "ja ;sub rsp, 8;mov qword [rsp], rbp;lea rbp, [rsp];mov rax, qword [arg_28h]": 1,
                "shl r9, 4;mov r10, qword [rdx + r9 + ];add r9, rdx;cmp qword [r9 + ], rdi;jle ": 1,
                "lea rdi, [var_7f0h];xorps xmm0, xmm0;lea rdi, [rdi - ];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 2,
                "mov rbp, qword [rbp];call fcn.00445e30;xorps xmm0, xmm0;movups xmmword [var_248h], xmm0;movups xmmword [var_258h], xmm0": 2,
                "xor ebx, ebx;lea rsi, [var_78h];lea rdi, [var_248h];jmp ;mov r9, qword [var_198h]": 2,
                "mov rdi, rax;mov rdx, rbx;mov rbx, rcx;mov rcx, r9;mov qword [var_198h], rcx": 2,
                "mov rdi, qword [var_a8h];jmp ;lea rax, [];mov qword [rsp], rax;lea rcx, [var_218h]": 2,
                "mov qword [rsp], rdi;call rsi;mov rax, qword [var_d0h];cmp qword [var_8h], rax;jle ": 2,
                "mov rax, qword [var_d0h];cmp qword [var_8h], rax;jle ;mov rcx, qword [var_590h];mov rcx, qword [rcx + ]": 2,
                "cmp rax, 1;jne ;cmp byte [rcx], ;jne ;mov rax, qword [var_1b0h]": 1,
                "mov rcx, qword [var_20h];mov qword [var_158h], rcx;mov rdx, qword [var_10h];mov qword [var_170h], rdx;mov rbx, qword [var_18h]": 1,
                "jne ;mov rax, qword [rcx + 8];mov rdx, qword [rcx];mov rcx, qword [rcx + ];mov qword [arg_68h], rdx": 1,
                "mov qword [var_18h], rcx;mov qword [var_20h], rax;call fcn.0045f760;mov rax, qword [var_28h];mov rcx, qword [var_30h]": 1,
                "cmp dil, ;je ;jmp ;lea rax, [];mov qword [arg_20h], rax": 2,
                "mov r8, rsi;neg rsi;sar rsi, ;and rsi, 1;add rbx, rsi": 2,
                "add rbx, rsi;dec rdx;jmp ;mov byte [rsp + ], 0;mov rbp, qword [rsp + ]": 2,
                "mov rbp, qword [rsp + ];add rsp, ;ret;mov byte [rsp + ], 0;mov rbp, qword [rsp + ]": 45,
                "ja ;sub rax, rcx;mov r8, qword [rsp + ];sub r8, rcx;mov rsi, r8": 2,
                "mov byte [rsp + ], 1;mov rbp, qword [rsp + ];add rsp, ;ret;call fcn.0042ea20": 1,
                "cmp r9, rdx;jge ;ja ;mov qword [rsp], rax;sub rsi, r9": 1,
                "neg rsi;sar rsi, ;and rsi, r9;add rsi, rcx;mov qword [var_8h], rsi": 1,
                "movzx ebx, byte [var_3fh];cmp bl, ;jne ;lea rsi, [rax + 2];mov rdi, qword [arg_80h]": 1,
                "mov qword [rsp], rdx;mov rbx, qword [arg_88h];sub rbx, rax;mov rdi, rbx;neg rbx": 1,
                "add rbx, r8;mov qword [var_8h], rbx;sub rcx, rax;mov qword [var_10h], rcx;mov qword [var_18h], rdi": 1,
                "mov byte [rax + ], 0;mov rax, qword [var_58h];mov rcx, qword [rax + ];mov rax, qword [rax + ];mov qword [arg_98h], rax": 1,
                "mov rbx, qword [rcx + 8];sub rbx, rdx;mov rsi, qword [rcx + ];cmp rax, rbx;jg ": 1,
                "mov rbx, qword [var_50h];inc rbx;mov rdi, qword [var_58h];mov rdx, rcx;mov ecx, eax": 2,
                "mov rbx, qword [arg_80h];cmp rax, rbx;jge ;mov qword [var_50h], rax;mov qword [var_48h], rdx": 2,
                "mov byte [var_36h], cl;test rax, rax;je ;movzx eax, byte [var_37h];cmp al, ": 2,
                "movzx eax, byte [var_36h];mov rcx, qword [var_48h];jmp ;mov rcx, qword [arg_70h];mov qword [rsp], rcx": 4,
                "mov qword [var_48h], rdx;mov byte [var_36h], cl;mov rbx, qword [arg_70h];mov qword [rsp], rbx;mov byte [var_8h], al": 2,
                "mov rcx, qword [arg_70h];mov byte [rcx + ], 0;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "jmp ;xorps xmm0, xmm0;movups xmmword [arg_b0h], xmm0;mov rbp, qword [var_60h];add rsp, ": 1,
                "movups xmmword [arg_50h], xmm0;mov rbp, qword [var_20h];add rsp, ;ret;lea rcx, [rdi + ]": 1,
                "mov qword [arg_30h], ;mov rbp, qword [var_18h];add rsp, ;ret;lea rax, []": 2,
                "movzx eax, byte [rsp + ];cmp al, ;ja ;jne ;mov ecx, 1": 2,
                "mov qword [rsp], rcx;mov byte [rsp + 8], al;call fcn.00534420;mov rax, qword [rsp + ];mov qword [rsp + ], rax": 3,
                "mov rcx, qword [rsp + ];mov qword [rsp], rcx;mov byte [rsp + 8], al;call fcn.00533b60;mov rax, qword [rsp + ]": 2,
                "mov ecx, 1;jmp ;cmp al, ;jne ;mov ecx, 1": 2,
                "ret;lea rax, [];call fcn.004580f0;jmp ;cmp cl, ": 15,
                "mov rax, qword [var_10h];mov qword [var_58h], rax;mov rcx, qword [var_8h];mov qword [var_68h], rcx;lea rdx, []": 7,
                "cmp rcx, rbx;ja ;lea rcx, [rax + 1];mov qword [rdi + ], rcx;mov qword [rdx + rax*8], 2": 1,
                "lea rax, [];mov qword [rdi], rax;mov byte [rdi + 8], 1;mov qword [rsp], rdi;movzx eax, byte [arg_88h]": 2,
                "mov qword [rdi], rax;mov byte [rsp], bl;call fcn.005374e0;mov rax, qword [var_10h];mov qword [var_58h], rax": 2,
                "mov rdi, rcx;call fcn.004580f0;jmp ;call fcn.004580f0;jmp ": 2,
                "mov qword [arg_90h], 8;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "lea rbp, [var_70h];movzx ecx, byte [arg_88h];cmp cl, ;jne ;mov eax, 1": 1,
                "sete al;jmp ;call fcn.00456090;jmp fcn.00534bd0;int3": 1,
                "jmp ;cmp cl, ;jae ;mov rdi, qword [rsp + ];test byte [rdi], al": 1,
                "mov rcx, qword [rsp + 8];mov qword [rsp + ], rcx;lea rdx, [];mov qword [rsp], rdx;call fcn.0040d880": 4,
                "mov rcx, qword [rsp + ];mov rdi, qword [rsp + ];mov qword [rdi + 8], rax;cmp dword [], 0;jne ": 2,
                "je ;mov rdi, qword [rsp + ];test byte [rdi], al;cmp dword [], 0;jne ": 1,
                "add rsp, ;ret;mov qword [rsp + ], 0;mov rbp, qword [rsp + ];add rsp, ": 2,
                "sub rsp, ;mov qword [var_70h], rbp;lea rbp, [var_70h];movzx ecx, byte [arg_88h];mov rcx, qword gs:[]": 1,
                "movzx eax, byte [rsp + ];cmp al, ;jb ;cmp al, ;jbe ": 1,
                "jbe ;mov rcx, qword [rsp + ];mov qword [rsp], rcx;mov byte [rsp + 8], al;call fcn.00534420": 1,
                "jbe ;sub rsp, ;mov qword [var_88h], rbp;lea rbp, [var_88h];movzx eax, byte [arg_98h]": 1,
                "lea rbp, [var_88h];movzx eax, byte [arg_98h];cmp al, ;je ;cmp al, ": 1,
                "mov rax, qword [var_18h];mov qword [rsp], rax;mov qword [var_8h], 0;mov rax, qword [var_58h];mov qword [var_10h], rax": 1,
                "mov qword [var_10h], rax;mov rax, qword [var_80h];mov qword [var_18h], rax;mov rax, qword [var_50h];mov qword [var_20h], rax": 1,
                "lea rcx, [];mov qword [var_8h], rcx;mov qword [var_10h], 1;add rax, ;mov rbx, rax": 1,
                "mov qword [var_18h], rax;mov qword [var_20h], rbx;mov qword [var_28h], rcx;mov qword [var_30h], 1;call fcn.00444ae0": 1,
                "mov qword [arg_a8h], 3;mov rbp, qword [var_88h];add rsp, ;ret;lea rax, []": 1,
                "je ;test rax, rax;jl ;mov rcx, qword [arg_40h];cmp rax, rcx": 2,
                "mov qword [arg_48h], rbx;mov qword [arg_50h], rax;sub rcx, rdx;mov rax, rcx;neg rcx": 2,
                "mov rax, qword [arg_38h];mov qword [arg_48h], rax;mov rax, qword [arg_40h];mov qword [arg_50h], rax;xorps xmm0, xmm0": 2,
                "mov rax, qword [arg_40h];mov qword [arg_50h], rax;xorps xmm0, xmm0;movups xmmword [arg_58h], xmm0;mov rbp, qword [var_28h]": 2,
                "add rsp, ;ret;lea rdi, [rcx + 8];mov rax, rbx;call fcn.004580f0": 3,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword [rdx + ];mov rcx, qword [rdx + 8];mov rdx, qword [rsp + ]": 2,
                "mov rsi, qword [rsp + ];cmp rsi, rax;jae ;lea rax, [rsi + rsi*4];mov rsi, qword [rcx + rax*8 + ]": 1,
                "mov rcx, qword [var_18h];mov rax, qword [rax + ];mov qword [rsp], rcx;call rax;mov rax, qword [var_10h]": 1,
                "mov qword [], rcx;lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h]": 1,
                "call fcn.004ee3b0;call fcn.004de4e0;call fcn.00491260;call fcn.0047be50;call fcn.004699c0": 2,
                "call fcn.00537cf0;mov byte [], 2;mov rbp, qword [rsp];add rsp, 8;ret": 2,
                "jbe ;mov byte [rbx + rsi], ;inc qword [var_88h];mov ebx, 1;mov rsi, rbx": 1,
                "mov rbx, r8;jmp ;cmp dil, ;jne ;lea rdi, [rbx + 1]": 1,
                "mov rbx, rdi;jmp ;mov r8, qword [var_60h];cmp qword [var_68h], rbx;jbe ": 1,
                "jbe ;movzx r8d, byte [r8 + rbx];jmp ;cmp dl, ;je ": 1,
                "test rbx, rbx;jle ;cmp qword [var_70h], 0;je ;mov rbx, qword [var_70h]": 1,
                "movzx esi, byte [rsi + rbx];cmp sil, ;jne ;inc rbx;mov qword [var_88h], rbx": 2,
                "cmp sil, ;jne ;inc rbx;mov qword [var_88h], rbx;jmp ": 2,
                "mov rax, qword [arg_a8h];mov rcx, qword [arg_a0h];movzx edx, byte [var_37h];mov rdi, qword [var_58h];jmp ": 3,
                "mov rsi, qword [var_68h];mov r8, qword [var_60h];cmp rbx, rsi;jge ;jae ": 1,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov rax, qword [arg_50h];test rax, rax;jle ": 9,
                "lea rbp, [var_38h];mov rax, qword [arg_50h];test rax, rax;jle ;mov rcx, qword [arg_48h]": 9,
                "inc rbx;cmp rbx, rax;jl ;xorps xmm0, xmm0;movups xmmword [arg_60h], xmm0": 1,
                "jl ;xorps xmm0, xmm0;movups xmmword [arg_60h], xmm0;mov rbp, qword [var_38h];add rsp, ": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.005396d0;mov rax, qword [var_10h];mov rcx, qword [var_18h]": 1,
                "ret;call fcn.00456090;jmp fcn.0053a0e0;int3;int3": 1,
                "ja ;mov rcx, qword [arg_38h];mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.005396d0": 3,
                "ud2;mov byte [], 1;call fcn.004f3bd0;call fcn.0053a3a0;mov byte [], 2": 5,
                "call fcn.0053a3a0;mov byte [], 2;mov rbp, qword [rsp];add rsp, 8;ret": 5,
                "call fcn.00456090;jmp fcn.0053a420;int3;int3;int3": 5,
                "lea rdx, [];mov byte [rdx + rcx], al;inc rax;cmp rax, ;jl ": 6,
                "mov qword [var_20h], rdx;mov qword [var_28h], rcx;mov rax, qword [arg_40h];mov rcx, qword [rax + ];mov rdx, qword [arg_48h]": 6,
                "mov qword [arg_60h], rax;mov rbp, qword [var_30h];add rsp, ;ret;mov rax, rcx": 6,
                "cmovne rdx, rcx;mov qword [arg_50h], rdx;xorps xmm0, xmm0;movups xmmword [arg_58h], xmm0;mov rbp, qword [var_30h]": 6,
                "jmp fcn.0053a4c0;int3;int3;int3;int3": 6,
                "ud2;mov byte [], 1;call fcn.00462900;call fcn.0053a490;mov byte [], 2": 6,
                "mov byte [], 1;call fcn.00462900;call fcn.0053a490;mov byte [], 2;mov rbp, qword [rsp]": 6,
                "mov qword [var_10h], rcx;lea rcx, [];mov qword [var_18h], rcx;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [var_10h], rcx;lea rcx, [];mov qword [var_18h], rcx;mov qword [var_20h], rax;call fcn.00521c70": 5,
                "mov rax, qword [var_30h];mov rcx, qword [var_28h];xor eax, eax;jmp ;lea rcx, []": 1,
                "mov rcx, qword [var_28h];mov rdx, qword [var_20h];mov rbx, qword [var_10h];mov rsi, qword [var_18h];test rcx, rcx": 4,
                "call fcn.0040d880;mov rdi, qword [var_8h];cmp dword [], 0;jne ;mov rcx, qword [var_60h]": 4,
                "mov qword [arg_c8h], rax;mov qword [arg_d0h], rdx;mov rbp, qword [var_88h];add rsp, ;ret": 2,
                "cmp qword [rdx + 8], 0;mov ecx, 0;cmovne rcx, rdx;mov rax, qword [var_68h];jmp ": 2,
                "cmovne rcx, rdx;mov rax, qword [var_68h];jmp ;mov qword [arg_c0h], 0;mov qword [arg_c8h], rcx": 2,
                "call fcn.0040abe0;mov rax, qword [var_8h];mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 1,
                "mov rcx, qword [var_18h];mov rdx, qword [var_38h];mov rbx, qword [rdx + ];test rbx, rbx;jl ": 1,
                "mov rdi, qword [rsi + ];cmp qword [rsi + ], rbx;jbe ;mov qword [var_40h], rcx;mov qword [var_30h], rax": 1,
                "mov qword [arg_c8h], rdx;mov byte [arg_d0h], 1;mov rbp, qword [var_78h];add rsp, ;ret": 1,
                "mov rax, qword [var_30h];mov rcx, qword [var_40h];mov rdx, qword [var_38h];jmp ;mov r8d, 0": 1,
                "mov qword [var_10h], ;mov qword [var_18h], ;call fcn.00476900;mov rdi, qword [var_28h];mov r8, qword [var_20h]": 1,
                "jmp ;xorps xmm0, xmm0;jmp ;xor edi, edi;xor r8d, r8d": 1,
                "jmp ;xor ecx, ecx;xor eax, eax;jmp ;xorps xmm0, xmm0": 1,
                "xor eax, eax;jmp ;xorps xmm0, xmm0;movups xmmword [arg_a0h], xmm0;movups xmmword [arg_b0h], xmm0": 1,
                "xorps xmm0, xmm0;movups xmmword [arg_a0h], xmm0;movups xmmword [arg_b0h], xmm0;mov qword [arg_c0h], 0;mov qword [arg_c8h], 0": 2,
                "add rsp, ;ret;mov rdi, qword [rbx + rdx + 8];mov r8, qword [arg_98h];cmp rdi, r8": 1,
                "lea rdi, [var_68h];mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458f00;mov rbp, qword [rbp]": 2,
                "add rsp, ;ret;cmp qword [rax + 8], 0;je ;mov rax, qword [arg_100h]": 1,
                "ret;mov rax, qword [var_28h];call fcn.004580f0;lea rcx, [rdi + 8];mov rax, rdi": 2,
                "lea rcx, [rdi + 8];mov rax, rdi;mov rdi, rcx;mov rdx, rax;mov rax, qword [var_18h]": 2,
                "mov qword [rbx + ], rdx;cmp dword [], 0;jne ;mov qword [rbx + ], rax;mov rbx, rcx": 3,
                "mov rsi, rax;mov rax, qword [arg_190h];jmp ;lea rdi, [rbx + ];call fcn.004580f0": 2,
                "mov qword [var_b0h], rcx;mov rcx, qword [rax + ];mov qword [var_b8h], rcx;mov rcx, qword [rax + ];mov qword [var_c0h], rcx": 2,
                "mov qword [rax + ], rbx;lea rcx, [rcx + rcx*2];shl rcx, 4;lea rbx, [rsi + rcx];movups xmm0, xmmword [var_b0h]": 2,
                "lea rcx, [rcx + rcx*2];shl rcx, 4;lea rbx, [rsi + rcx];movups xmm0, xmmword [var_b0h];movups xmmword [rbx], xmm0": 2,
                "jmp ;cmp dl, ;jne ;cmp qword [rax + ], 1;jne ": 2,
                "lea rcx, [rcx + ];movups xmm0, xmmword [var_90h];movups xmmword [rcx], xmm0;movups xmm0, xmmword [var_a0h];movups xmmword [rcx + ], xmm0": 1,
                "mov byte [rax + ], 0;jmp ;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rcx": 1,
                "jmp ;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rbx": 1,
                "mov qword [var_60h], rcx;mov rcx, qword [rax + ];mov qword [var_68h], rcx;mov rcx, qword [rax + ];mov qword [var_70h], rcx": 1,
                "call fcn.004f3bd0;call fcn.0053a5c0;mov byte [], 2;mov rbp, qword [rsp];add rsp, 8": 1,
                "jne ;mov qword [rsp + ], rdx;mov qword [rsp + ], rcx;mov rbx, qword [rax + ];mov qword [rsp], rbx": 1,
                "movups xmmword [rsp + ], xmm0;movups xmmword [rsp + ], xmm0;lea rcx, [];mov qword [rsp + ], rcx;mov rdx, qword [rsp + ]": 1,
                "mov rdx, qword [rsp + ];mov qword [rsp + 8], rdx;mov rdx, qword [rsp + ];mov qword [rsp + ], rdx;mov qword [rsp + ], rax": 1,
                "mov qword [rax + 8], rcx;cmp dword [], 0;jne ;mov rcx, qword [rsp + ];mov qword [rax], rcx": 1,
                "mov qword [rax], rcx;mov rcx, qword [rsp + ];mov qword [rax + ], rcx;cmp dword [], 0;jne ": 2,
                "mov rcx, qword [rsp + ];mov qword [rax + ], rcx;mov rdx, qword [rsp + ];mov rbx, qword [rdx + 8];lea rsi, [rbx + 1]": 1,
                "ja ;lea rsi, [rbx + 1];mov qword [rdx + 8], rsi;lea rdi, [r8 + rbx*8];cmp dword [], 0": 1,
                "mov qword [rsp + ], r9;mov qword [rsp + ], rsi;call fcn.00440d10;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 1,
                "call fcn.004580f0;jmp ;lea rdi, [rax + ];mov rcx, rax;mov rax, qword [rsp + ]": 1,
                "mov rsi, qword [rax + rbx*8];mov rdi, qword [rsi + ];mov r8, qword [rsi + ];add r8, rdi;cmp rdx, r8": 1,
                "je ;mov rdi, qword [var_60h];mov qword [rdi + 8], rax;cmp dword [], 0;jne ": 1,
                "mov qword [rdi], rbx;mov qword [rdi + ], rcx;mov qword [rdi + ], rdx;mov rax, rdi;jmp ": 1,
                "jmp ;mov rbx, rax;mov rax, rsi;call fcn.004580f0;mov rax, rbx": 1,
                "mov rax, rsi;call fcn.004580f0;mov rax, rbx;jmp ;call fcn.00456090": 1,
                "ret;lea rax, [];mov qword [arg_60h], rax;mov qword [arg_68h], 7;mov rbp, qword [var_48h]": 2,
                "call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.0053ca90;int3": 2,
                "mov qword [var_40h], rbp;lea rbp, [var_40h];lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 3,
                "mov rax, qword [var_30h];lea rcx, [rax + 1];mov rax, qword [var_38h];cmp rcx, ;jl ": 3,
                "ud2;mov byte [], 1;call fcn.0047be50;call fcn.0053cbb0;mov byte [], 2": 4,
                "mov byte [], 1;call fcn.0047be50;call fcn.0053cbb0;mov byte [], 2;mov rbp, qword [rsp]": 4,
                "call fcn.0047be50;call fcn.0053cbb0;mov byte [], 2;mov rbp, qword [rsp];add rsp, 8": 4,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.0053cdb0;mov rcx, qword gs:[]": 4,
                "sub rsp, ;mov qword [var_70h], rbp;lea rbp, [var_70h];mov qword [arg_88h], 0;xorps xmm0, xmm0": 1,
                "mov qword [arg_90h], rax;mov rax, qword [var_58h];mov qword [arg_98h], rax;call fcn.0042f500;mov rbp, qword [var_70h]": 1,
                "call fcn.0042f500;mov rbp, qword [var_70h];add rsp, ;ret;mov qword [var_58h], r8": 1,
                "mov rsi, qword [var_38h];mov rax, qword [var_60h];mov rcx, qword [var_50h];mov rdx, qword [var_48h];mov rbx, qword [var_40h]": 1,
                "jbe ;sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h];mov qword [arg_30h], 0": 2,
                "mov qword [var_18h], rbp;lea rbp, [var_18h];mov qword [arg_30h], 0;xorps xmm0, xmm0;movups xmmword [arg_38h], xmm0": 2,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rcx, qword [rsp + ];cmp byte [rcx + ], 0;je ": 2,
                "mov rax, qword [rsp + ];call fcn.004580f0;jmp ;lea rax, [];mov qword [rsp], rax": 6,
                "jmp ;mov rdx, qword [rcx + ];mov rbx, qword [rcx + 8];mov rsi, qword [rcx + ];lea r8, [rsi + 1]": 2,
                "je ;cmp qword [rcx + ], 0;je ;xor eax, eax;test al, al": 1,
                "cmp qword [rcx + ], 0;je ;xor eax, eax;test al, al;je ": 1,
                "mov rdi, qword [rdx + rsi*8];cmp qword [rdi + ], ;jne ;mov qword [rdi + ], rbx;jmp ": 1,
                "mov rax, qword [rax + ];xor edx, edx;jmp ;inc rdx;cmp rdx, rax": 1,
                "mov word [rax + ], 0;mov byte [rax + ], 0;mov rbp, qword [var_40h];add rsp, ;ret": 2,
                "mov rdx, qword [arg_50h];mov rbx, qword [rdx + ];mov rsi, qword [rdx + ];lea rdi, [];mov qword [rsp], rdi": 2,
                "mov rdx, qword [rcx + ];mov rbx, qword [rcx + ];test rbx, rbx;jne ;xor eax, eax": 3,
                "jne ;mov rax, qword [arg_78h];mov qword [rcx + ], rax;mov rbp, qword [var_58h];add rsp, ": 3,
                "mov rdx, qword [rcx + ];mov rbx, qword [arg_78h];mov qword [rsp], rbx;call rdx;mov rax, qword [var_38h]": 3,
                "jmp fcn.0053dc90;int3;int3;int3;int3": 3,
                "mov rdi, qword [rcx + 8];mov qword [rsp], rdx;mov qword [var_8h], rax;mov rdx, qword [arg_68h];mov qword [var_10h], rdx": 3,
                "mov qword [var_20h], rsi;mov qword [var_28h], rbx;mov rdx, qword [arg_70h];mov qword [var_30h], rdx;call fcn.0053e260": 3,
                "mov qword [var_28h], rbx;mov rdx, qword [arg_70h];mov qword [var_30h], rdx;call fcn.0053e260;xorps xmm0, xmm0": 3,
                "mov qword [var_10h], rcx;mov qword [var_18h], rdx;mov qword [var_20h], rbx;mov qword [var_28h], rsi;mov rcx, qword [arg_70h]": 2,
                "mov qword [var_18h], rdx;mov qword [var_20h], rbx;mov qword [var_28h], rsi;mov rcx, qword [arg_70h];mov qword [var_30h], rcx": 2,
                "mov qword [var_30h], rcx;call fcn.0053e260;xorps xmm0, xmm0;mov rax, qword [arg_48h];movups xmmword [rax + ], xmm0": 2,
                "jmp ;mov rax, qword [arg_48h];mov rcx, qword [rax];mov rdx, qword [rax + ];mov rbx, qword [rax + 8]": 2,
                "mov rcx, qword [arg_60h];test rcx, rcx;jmp ;lea rdi, [rax + 8];mov rcx, rax": 2,
                "mov qword [rsp], rdx;mov rbx, qword [rsp + ];mov qword [rsp + 8], rbx;lea rsi, [rsp + ];mov qword [rsp + ], rsi": 1,
                "mov rax, qword [rsp + ];mov qword [rsp + ], rax;lea rax, [];mov qword [rsp], rax;mov rax, qword [rsp + ]": 1,
                "mov qword [rsp + ], rax;lea rax, [];mov qword [rsp], rax;mov rax, qword [rsp + ];mov qword [rsp + 8], rax": 1,
                "call fcn.004580f0;jmp ;mov rax, qword [rsp + ];call fcn.004580f0;jmp ": 1,
                "mov rcx, qword [arg_a8h];cmp rax, rcx;jge ;mov qword [var_50h], rax;mov rdx, qword [arg_a0h]": 2,
                "mov rdx, qword [var_28h];mov rax, qword [var_30h];mov rcx, qword [var_38h];lea rbx, [rax + 1];mov rax, qword [var_40h]": 1,
                "call fcn.00456090;jmp fcn.0053e260;int3;int3;int3": 1,
                "call fcn.0040fbd0;xor eax, eax;jmp ;mov qword [var_18h], rax;mov rax, qword [var_30h]": 2,
                "jne ;mov qword [arg_a0h], rax;mov rbp, qword [var_88h];add rsp, ;ret": 2,
                "mov qword [var_b8h], rax;mov rcx, qword [arg_108h];mov qword [var_c0h], rcx;lea rdx, [];mov qword [rsp], rdx": 6,
                "mov qword [var_70h], rcx;mov qword [var_40h], rbx;mov qword [var_48h], rax;lea rdi, [rcx + rdx*8];cmp dword [], 0": 3,
                "cmp dword [], 0;jne ;mov rax, qword [var_70h];mov qword [rdi], rax;mov rax, qword [arg_f0h]": 3,
                "mov rax, qword [var_18h];mov rax, qword [rax + 8];mov qword [var_60h], rax;lea rcx, [];mov qword [rsp], rcx": 6,
                "mov rdx, qword [var_60h];lea rbx, [rdx - 1];cmp qword [rax + 8], rbx;jbe ;lea rdi, [rcx + rdx*8]": 2,
                "mov qword [var_60h], rdx;mov qword [var_80h], rcx;mov qword [var_58h], rax;lea rax, [];mov qword [rsp], rax": 2,
                "jg ;cmp rax, 6;jne ;lea rax, [];mov ecx, 2": 1,
                "cmp rax, 8;jne ;lea rax, [];mov ecx, 2;jmp ": 1,
                "jmp ;cmp rax, 9;jne ;lea rax, [];mov ecx, 3": 1,
                "jne ;lea rax, [];mov ecx, 3;jmp ;cmp rax, ": 1,
                "call fcn.00455b60;call fcn.0049aff0;call fcn.004f3bd0;call fcn.004aa650;call fcn.004c1e20": 2,
                "movups xmmword [arg_70h], xmm0;movups xmmword [arg_80h], xmm0;mov rax, qword [arg_58h];mov qword [rsp], rax;mov rax, qword [arg_60h]": 3,
                "mov rax, qword [var_40h];mov qword [rsp], rax;call fcn.004d04b0;mov rax, qword [var_8h];mov rcx, qword [var_10h]": 2,
                "mov rsi, qword [var_18h];mov qword [arg_68h], rsi;mov qword [arg_70h], rax;mov qword [arg_78h], rcx;mov qword [arg_80h], rdx": 2,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040b1c0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 2,
                "call fcn.0040ac60;mov rax, qword [var_10h];mov qword [var_48h], rax;mov rcx, qword [arg_b8h];mov qword [rsp], rcx": 3,
                "mov qword [var_50h], rcx;mov rdx, qword [var_48h];mov qword [var_58h], rdx;lea rdx, [];mov qword [var_60h], rdx": 3,
                "mov qword [var_20h], 4;call fcn.004d6050;mov rax, qword [var_30h];mov rcx, qword [var_28h];mov qword [arg_d8h], rcx": 2,
                "mov rcx, qword [var_28h];mov qword [arg_d8h], rcx;mov qword [arg_e0h], rax;mov rbp, qword [var_90h];add rsp, ": 2,
                "mov rax, qword [arg_100h];mov qword [var_10h], rax;mov rax, qword [arg_108h];mov qword [var_18h], rax;mov rax, qword [arg_110h]": 3,
                "mov rdx, qword [var_38h];mov rbx, qword [arg_d8h];mov qword [rbx + ], rdx;cmp dword [], 0;jne ": 3,
                "mov rax, rcx;jmp ;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax": 3,
                "jmp ;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax;lea rcx, [var_a0h]": 3,
                "call fcn.00414a10;mov rax, qword [var_60h];jmp ;cmp ecx, ;jne ": 3,
                "lea rax, [var_68h];mov qword [var_10h], rax;mov qword [var_18h], 1;mov qword [var_20h], 1;call fcn.004d6050": 2,
                "jmp ;mov ecx, 0;jmp ;mov rdx, qword [arg_e8h];mov ebx, 0": 1,
                "mov qword [rsp], rcx;lea rcx, [];mov qword [var_8h], rcx;mov rcx, qword gs:[];mov rcx, qword [rcx]": 2,
                "mov qword [var_18h], rax;mov qword [var_20h], ;lea rax, [var_48h];mov qword [var_28h], rax;mov qword [var_30h], 1": 1,
                "mov qword [var_28h], rax;mov qword [var_30h], 1;mov qword [var_38h], 1;call fcn.005436e0;mov rax, qword [var_40h]": 3,
                "lea rbp, [var_70h];mov rax, qword [arg_88h];cmp rax, 2;je ;mov qword [rsp], rax": 2,
                "mov rax, qword [var_8h];mov rcx, qword [var_10h];mov rdx, qword [arg_88h];cmp rdx, 5;jg ": 2,
                "cmp rdx, 4;je ;cmp rdx, 5;je ;mov qword [var_48h], rcx": 2,
                "mov qword [var_60h], rcx;mov qword [var_68h], rax;mov rax, qword [arg_80h];mov qword [rsp], rax;lea rax, []": 2,
                "cmp rdx, 8;je ;cmp rdx, 9;jne ;mov rax, qword [arg_80h]": 2,
                "jne ;mov rcx, qword [rsp + ];mov qword [rax], rcx;movups xmm0, xmmword [rsp + ];movups xmmword [rax + 8], xmm0": 1,
                "mov rax, qword [var_a8h];mov qword [rsp], rax;movups xmm0, xmmword [var_b0h];movups xmmword [var_8h], xmm0;movups xmm0, xmmword [var_c0h]": 1,
                "mov rax, qword [var_38h];mov rcx, qword [var_40h];mov qword [arg_108h], rax;mov qword [arg_110h], rcx;mov rbp, qword [var_e0h]": 1,
                "mov qword [var_70h], rcx;movups xmm0, xmmword [rax + 8];movups xmmword [var_78h], xmm0;movups xmm0, xmmword [rax + ];movups xmmword [var_88h], xmm0": 1,
                "lea rcx, [];mov qword [var_50h], rcx;mov rcx, qword [var_48h];mov qword [var_58h], rcx;lea rcx, []": 1,
                "mov qword [var_68h], rax;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;lea rax, [var_50h]": 1,
                "mov qword [arg_108h], rcx;mov qword [arg_110h], rax;mov rbp, qword [var_e0h];add rsp, ;ret": 1,
                "mov qword [rdi + ], rax;mov rax, qword [arg_58h];mov rcx, qword [rax + ];bt ecx, 1;jb ": 2,
                "mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax;mov qword [var_10h], rdi;call fcn.0053dc90": 2,
                "lea rdi, [rsi + ];mov rax, rbx;call fcn.004580f0;jmp ;mov rcx, qword [rax + ]": 7,
                "cmp rdi, 6;je ;cmp rdi, 7;je ;mov qword [rsp], rax": 2,
                "mov rcx, qword [rcx + ];mov qword [rax + 8], rcx;lea rcx, [];mov qword [arg_c8h], rcx;mov qword [arg_d0h], rax": 4,
                "mov qword [arg_c8h], rcx;mov qword [arg_d0h], rax;mov rbp, qword [var_b0h];add rsp, ;ret": 13,
                "mov rax, qword [var_90h];call fcn.004580f0;mov rax, rcx;jmp ;mov rdi, qword [var_a8h]": 2,
                "call fcn.004580f0;jmp ;mov qword [rsp], rax;call fcn.0054b5a0;mov rax, qword [var_10h]": 2,
                "mov rbx, qword [var_18h];mov rsi, qword [arg_c0h];mov qword [rsi + ], rcx;mov qword [rsi + ], rbx;cmp dword [], 0": 3,
                "mov qword [rsi + ], rcx;mov qword [rsi + ], rbx;cmp dword [], 0;jne ;mov qword [rsi + ], rax": 9,
                "jne ;cmp dword [rcx], ;jne ;cmp byte [rcx + 4], ;jne ": 5,
                "jmp ;mov rax, qword [var_68h];mov qword [rsp], rax;call fcn.0040abe0;mov rax, qword [var_8h]": 2,
                "mov qword [var_28h], 0;xorps xmm0, xmm0;movups xmmword [var_30h], xmm0;call fcn.005436e0;xor edx, edx": 2,
                "mov qword [rsp], rax;call fcn.0054b5a0;mov rax, qword [var_18h];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rbx, qword [var_28h];test rcx, rcx;jne ;lea rax, [];mov qword [rsp], rax": 1,
                "jne ;mov rcx, qword [var_90h];mov qword [rax + 8], rcx;mov rcx, qword [var_58h];mov qword [rax + ], rcx": 1,
                "mov rax, qword [var_10h];mov qword [var_78h], rax;mov rcx, qword [var_8h];mov qword [var_a0h], rcx;mov rdx, qword [var_68h]": 1,
                "lea rbp, [var_d8h];mov rax, qword [arg_e8h];mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov qword [var_88h], rdx": 1,
                "mov qword [var_80h], rsi;cmp rsi, 0;mov qword [rsp], rdx;call fcn.0054b5a0;mov rax, qword [var_8h]": 1,
                "mov qword [var_98h], rcx;mov qword [var_50h], r10;cmp rax, 9;je ;mov rax, qword [var_70h]": 1,
                "mov qword [var_8h], r10;call fcn.00550860;mov rax, qword [var_10h];mov rcx, qword [var_18h];mov rdx, qword [var_20h]": 1,
                "mov rcx, qword [var_98h];mov qword [rax + ], rcx;mov rcx, qword [var_60h];mov qword [rax + ], rcx;cmp dword [], 0": 1,
                "add rsp, ;ret;lea rdi, [rax + ];mov rcx, rax;mov rax, qword [var_90h]": 1,
                "mov rax, rcx;jmp ;lea rdi, [rax + ];mov rcx, rax;mov rax, qword [var_98h]": 1,
                "mov rax, qword [var_68h];mov rcx, qword [var_a8h];jmp ;mov rcx, qword [rcx + ];mov qword [rsp], rax": 1,
                "mov rcx, qword [rcx + ];mov qword [rsp], rax;call rcx;mov rax, qword [var_8h];mov rcx, qword [var_10h]": 4,
                "mov rcx, qword [rax + ];mov qword [var_60h], rcx;mov rdx, qword [rax + ];mov qword [var_40h], rdx;mov rbx, qword [rax + ]": 1,
                "mov r9, qword [rdx];cmp rsi, r8;ja ;lea rsi, [rbx + 1];mov qword [rdx + 8], rsi": 1,
                "mov qword [rsi + ], rax;cmp dword [], 0;jne ;mov qword [rsi + ], rbx;mov qword [rsi + ], rdx": 5,
                "jne ;mov qword [rdx + ], rax;lea rax, [];mov qword [arg_90h], rax;mov qword [arg_98h], rdx": 1,
                "jmp ;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r9;mov qword [var_10h], rbx": 1,
                "jbe ;sub rsp, ;mov qword [var_98h], rbp;lea rbp, [var_98h];mov qword [var_80h], 0": 2,
                "jne ;mov rcx, qword [rax + ];bt ecx, 1;jb ;mov qword [rsp], rax": 2,
                "mov rax, qword [arg_a8h];jmp ;mov rax, qword [rax + ];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rbx, qword [var_88h];mov qword [rax + ], rbx;mov qword [rax + ], rdx;cmp dword [], 0;jne ": 1,
                "mov rdx, qword [rcx + ];mov rbx, qword [rcx + ];mov rsi, qword [rcx + ];lea r8, [rsi + 1];cmp r8, rdx": 1,
                "lea rdi, [rbx + ];call fcn.004580f0;jmp ;lea rdi, [rax + 8];mov rdx, rax": 1,
                "mov rbx, qword [var_b0h];add rcx, rbx;mov qword [rsp], rcx;mov qword [var_8h], rdx;call fcn.0054ded0": 2,
                "mov qword [arg_d8h], rdx;mov rdx, qword [var_90h];mov qword [arg_e0h], rdx;mov qword [arg_e8h], rax;mov qword [arg_f0h], rcx": 1,
                "mov rcx, qword [var_90h];jmp ;mov rax, qword [rax + ];mov qword [rsp], rcx;call rax": 1,
                "jbe ;sub rsp, ;mov qword [var_118h], rbp;lea rbp, [var_118h];xorps xmm0, xmm0": 2,
                "cmp qword [rsi + ], ;jne ;mov qword [var_50h], rax;mov qword [var_38h], rcx;mov rdx, qword [rsi + ]": 2,
                "mov rdx, qword [var_38h];mov qword [var_90h], rdx;lea rdx, [];mov qword [var_98h], rdx;mov qword [var_a0h], 5": 2,
                "mov rbx, qword [rdx + ];bt ebx, 1;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 1,
                "bt ebx, 1;jb ;movups xmm0, xmmword [var_88h];movups xmmword [arg_130h], xmm0;movups xmm0, xmmword [var_98h]": 1,
                "jb ;movups xmm0, xmmword [var_88h];movups xmmword [arg_130h], xmm0;movups xmm0, xmmword [var_98h];movups xmmword [arg_140h], xmm0": 1,
                "mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.0053dc90;jmp ;mov rax, qword [rsi + ]": 1,
                "jmp ;mov rax, qword [rsi + ];mov qword [var_48h], rax;mov qword [rsp], rsi;call fcn.005461e0": 1,
                "mov rax, qword [var_8h];mov rcx, qword [var_48h];mov qword [rax], rcx;cmp dword [], 0;jne ": 1,
                "mov qword [var_c0h], rax;lea rax, [];mov qword [var_c8h], rax;mov qword [var_d0h], 3;lea rax, []": 1,
                "movups xmmword [arg_140h], xmm0;movups xmm0, xmmword [var_d8h];movups xmmword [arg_150h], xmm0;mov rbp, qword [var_118h];add rsp, ": 1,
                "mov rax, rcx;jmp ;mov rax, qword [rsi + ];mov qword [var_40h], rax;mov qword [rsp], rsi": 1,
                "xorps xmm0, xmm0;movups xmmword [var_e8h], xmm0;movups xmmword [var_f8h], xmm0;movups xmmword [var_108h], xmm0;mov rax, qword [var_58h]": 1,
                "mov rax, rcx;jmp ;cmp rbx, 3;mov rsi, qword [arg_128h];jmp ": 1,
                "jmp ;cmp rbx, 3;mov rsi, qword [arg_128h];jmp ;cmp rbx, 3": 1,
                "mov rsi, qword [var_40h];mov qword [var_68h], rdx;mov qword [var_48h], rbx;mov qword [var_40h], rsi;mov rdi, qword [rcx + ]": 2,
                "mov qword [var_68h], rdx;mov qword [var_48h], rbx;mov qword [var_40h], rsi;mov rdi, qword [rcx + ];cmp rdi, ": 2,
                "lea rcx, [rax + 1];mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "mov rcx, qword [rax + ];mov qword [rsp], rcx;call fcn.0053db70;mov rax, qword [arg_b0h];jmp ": 2,
                "bt edi, 1;jb ;mov qword [rsp], rcx;mov qword [var_8h], ;call fcn.00550550": 2,
                "mov qword [var_8h], ;call fcn.00550550;mov rax, qword [var_10h];mov qword [var_50h], rax;lea rcx, []": 2,
                "xor edx, edx;xor ebx, ebx;xor esi, esi;jmp ;mov rbx, rdx": 3,
                "mov qword [var_40h], rdx;mov qword [var_98h], rbx;mov qword [var_48h], rsi;mov rdi, qword [rcx + ];cmp rdi, ": 2,
                "mov qword [var_48h], rsi;mov rdi, qword [rcx + ];cmp rdi, ;je ;cmp rdi, 2": 3,
                "mov qword [rdx], rcx;mov rcx, qword [rax + ];mov qword [rdx + 8], rcx;mov rcx, qword [rax + ];bt ecx, 1": 2,
                "bt ecx, 1;jb ;mov rcx, qword [var_40h];lea rbx, [rcx + 1];mov rsi, qword [var_48h]": 2,
                "jmp ;mov rdi, r9;mov r10, rax;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rax, rdx;call fcn.004580f0;mov rax, r10;jmp ;lea rax, []": 1,
                "lea rbx, [rdx + 1];mov rsi, qword [var_48h];cmp rbx, rsi;ja ;mov rdi, qword [var_98h]": 1,
                "cmp qword [rax + ], ;jne ;mov rax, rsi;mov rcx, rbx;mov rdx, rdi": 1,
                "jb ;mov qword [rsp], rax;mov qword [var_8h], ;call fcn.00550550;mov rax, qword [arg_b0h]": 1,
                "mov rbx, qword [var_70h];mov rsi, qword [var_68h];mov rdi, qword [var_90h];jmp ;mov rcx, qword [rax + ]": 1,
                "jmp ;call fcn.00456090;jmp fcn.00546e00;int3;int3": 1,
                "xor edx, edx;xor ebx, ebx;xor esi, esi;jmp ;mov qword [rsi + ], rbx": 1,
                "mov rax, qword [var_8h];mov qword [var_40h], rax;mov rcx, qword [var_10h];mov qword [var_70h], rcx;mov rdx, qword [arg_98h]": 1,
                "mov qword [rdi + rbx], rax;lea r9, [rdi + rbx];lea r9, [r9 + 8];cmp dword [], 0;jne ": 1,
                "mov qword [var_50h], rsi;mov qword [var_48h], r8;mov rax, qword [rdx + ];bt eax, 1;jb ": 1,
                "mov rax, qword [rdx + ];bt eax, 1;jb ;mov qword [rsp], rdx;call fcn.0054b5a0": 1,
                "mov qword [rsi + ], rcx;jmp ;lea rdi, [rsi + ];mov rax, rcx;call fcn.004580f0": 2,
                "add rsp, ;ret;mov rax, qword [rdx + ];mov qword [rsp], rax;call fcn.0053db70": 1,
                "mov qword [rsp], rax;call fcn.0053dc90;mov rax, qword [var_40h];mov rcx, qword [var_70h];mov rdx, qword [arg_98h]": 1,
                "mov rcx, qword [arg_78h];mov qword [rax], rcx;cmp dword [], 0;jne ;mov rcx, qword [arg_80h]": 2,
                "cmp dword [], 0;jne ;mov rcx, qword [arg_80h];mov qword [rax + 8], rcx;mov rcx, qword [var_38h]": 2,
                "mov rax, qword [var_10h];mov qword [var_88h], rax;mov rcx, qword [arg_b8h];mov rdx, qword [rcx + ];mov qword [var_98h], rdx": 2,
                "mov qword [var_90h], rsi;mov rdi, qword [];mov qword [rsp], rdi;xorps xmm0, xmm0;movups xmmword [var_8h], xmm0": 2,
                "mov qword [rsp], rdi;xorps xmm0, xmm0;movups xmmword [var_8h], xmm0;mov qword [var_18h], 0;movups xmmword [var_20h], xmm0": 2,
                "cmp dword [], 0;jne ;mov rax, qword [var_98h];mov qword [rdi], rax;mov rax, qword [var_a0h]": 2,
                "lea rcx, [];mov qword [arg_d0h], rcx;mov qword [arg_d8h], rax;mov rbp, qword [var_a8h];add rsp, ": 4,
                "mov qword [arg_d0h], rcx;mov qword [arg_d8h], rax;mov rbp, qword [var_a8h];add rsp, ;ret": 4,
                "call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [var_88h];mov qword [rax], rcx;mov rcx, qword [arg_b8h]": 2,
                "mov rcx, qword [var_8h];mov qword [var_18h], rcx;mov rdx, qword [arg_48h];mov qword [rsp], rdx;mov qword [var_8h], ": 6,
                "mov qword [rax + 8], rcx;mov rcx, qword [var_18h];mov qword [rax + ], rcx;cmp dword [], 0;jne ": 3,
                "mov qword [rax + ], rcx;lea rcx, [];mov qword [arg_60h], rcx;mov qword [arg_68h], rax;mov rbp, qword [var_38h]": 2,
                "call fcn.00550550;mov rax, qword [var_10h];mov qword [var_30h], rax;mov rcx, qword [arg_60h];mov qword [rsp], rcx": 3,
                "call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [var_30h];mov qword [rax], rcx;mov rcx, qword [var_38h]": 3,
                "call fcn.00456090;jmp fcn.00547b50;int3;int3;int3": 2,
                "jmp fcn.00547b50;int3;int3;int3;int3": 2,
                "cmp rbx, ;je ;cmp rbx, ;jne ;mov qword [rsp], rdx": 6,
                "cmp rbx, ;jne ;mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax": 9,
                "mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.00547750;mov rax, qword [var_20h];mov rcx, qword [var_18h]": 3,
                "jmp ;mov qword [rsp], rax;call fcn.00547b50;mov rax, qword [var_10h];mov rcx, qword [var_8h]": 3,
                "call fcn.00456090;jmp fcn.00547cf0;int3;int3;int3": 3,
                "mov rsi, rax;mov rax, rcx;mov rcx, rsi;mov rbx, qword [rdx + ];cmp rbx, ": 3,
                "mov qword [rsp], rcx;call fcn.0040ae50;mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rdx, qword [var_68h]": 2,
                "mov qword [var_20h], rax;mov rax, qword [var_40h];mov qword [var_28h], rax;mov qword [var_30h], 1;call fcn.0053e260": 4,
                "jmp ;mov rcx, qword [rax + ];mov qword [rsp], rcx;call fcn.0053d560;mov rax, qword [var_18h]": 2,
                "mov rax, qword [arg_90h];mov rcx, qword [rax + ];mov word [rcx + ], ;mov rcx, qword [var_38h];mov rdx, qword [var_58h]": 2,
                "call fcn.005448f0;mov rcx, qword [var_8h];mov rax, qword [var_10h];mov rdx, qword [arg_90h];jmp ": 2,
                "ret;call fcn.00456090;jmp fcn.00547e60;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [rsp], rax;call fcn.00547e60;mov rax, qword [var_8h];mov rcx, qword [var_10h];mov rdx, qword [arg_80h]": 2,
                "mov qword [var_50h], rsi;mov rdi, qword [rdx + ];bt edi, 1;jb ;mov qword [rsp], rdx": 2,
                "mov qword [rax], rcx;mov rcx, qword [var_50h];mov qword [rax + 8], rcx;mov rcx, qword [var_48h];mov qword [rax + ], rcx": 3,
                "mov qword [rax + ], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_60h];mov qword [rax + ], rcx": 2,
                "cmp dword [], 0;jne ;mov rcx, qword [var_60h];mov qword [rax + ], rcx;mov byte [rax + ], 1": 2,
                "mov qword [var_68h], rax;mov rcx, qword [rcx + ];mov qword [rsp], rcx;lea rcx, [];mov qword [var_8h], rcx": 1,
                "mov rax, qword [var_60h];call fcn.004580f0;mov rax, rcx;jmp ;cmp ecx, ": 1,
                "lea rbp, [var_80h];mov rax, qword [arg_90h];mov rcx, qword [rax + ];mov qword [var_68h], rcx;cmp rcx, ": 2,
                "mov rbx, qword [var_20h];mov rsi, qword [arg_90h];mov qword [rsi + ], rdx;mov qword [rsi + ], rax;cmp dword [], 0": 5,
                "call fcn.005484d0;mov rax, qword [var_10h];mov qword [var_78h], rax;mov rcx, qword [var_8h];mov qword [var_60h], rcx": 2,
                "mov rbp, qword [var_80h];add rsp, ;ret;lea rdi, [rax + ];mov rcx, rax": 3,
                "call fcn.004580f0;mov rax, rcx;jmp ;lea rdi, [rsi + ];mov rax, rcx": 3,
                "lea rbx, [];cmp rbx, rcx;jne ;lea rax, [];mov qword [rsp], rax": 1,
                "call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [var_68h];mov qword [rax], rcx;mov rcx, qword [var_50h]": 1,
                "jne ;lea rbx, [];cmp rbx, rcx;je ;cmp edx, ": 1,
                "mov qword [rsp], rax;call fcn.0040abe0;mov rax, qword [var_8h];mov rcx, qword [arg_90h];mov qword [rsp], rcx": 7,
                "mov rax, qword [arg_90h];mov qword [rsp], rax;call fcn.005589b0;lea rax, [];mov qword [rsp], rax": 4,
                "mov qword [var_58h], rbp;lea rbp, [var_58h];lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 22,
                "mov qword [rax + ], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_48h];mov qword [rax + ], rcx": 18,
                "jmp ;lea rdi, [rsi + ];call fcn.004580f0;jmp ;mov rax, qword [rbx + ]": 3,
                "cmp rdx, ;je ;mov qword [arg_70h], rcx;mov qword [arg_78h], rax;mov rbp, qword [var_58h]": 6,
                "mov rbp, qword [var_58h];add rsp, ;ret;lea rdi, [rdx + 8];mov rax, qword [arg_68h]": 16,
                "mov rax, qword [rdx];call rax;mov rax, qword [arg_68h];mov rcx, qword [rax + ];mov rbx, qword [var_8h]": 2,
                "mov qword [var_8h], rcx;mov byte [var_10h], dil;mov qword [var_18h], rax;call fcn.0042ec20;test eax, eax": 2,
                "cmp dword [], 0;jne ;mov qword [rsi + ], rbx;mov qword [rsi + ], rcx;mov qword [rsp], rsi": 4,
                "test dl, dl;je ;mov rdx, qword [rax + ];bt edx, 1;jb ": 1,
                "cmp dword [], 0;jne ;mov rcx, qword [var_50h];mov qword [rax + ], rcx;lea rcx, []": 3,
                "mov qword [rax + ], rcx;lea rcx, [];mov qword [arg_70h], rcx;mov qword [arg_78h], rax;call fcn.0042f500": 1,
                "jmp ;mov rax, qword [var_30h];mov qword [arg_70h], rax;mov rax, qword [var_48h];mov qword [arg_78h], rax": 1,
                "mov rax, qword [var_8h];mov rcx, qword [rsp];mov rbx, qword [arg_68h];jmp ;mov byte [rax + ], 1": 1,
                "mov qword [rsi + ], rcx;mov qword [rsi + ], rbx;mov rdx, qword [var_50h];mov rax, qword [rdx];call rax": 1,
                "call fcn.00456090;jmp fcn.00549470;int3;int3;int3": 1,
                "cmp qword [rdx + ], ;jne ;mov qword [var_30h], rcx;mov qword [var_40h], rax;mov rbx, qword [rdx + ]": 13,
                "mov rax, qword [rdx + ];mov qword [var_28h], rax;mov qword [rsp], rdx;call fcn.0054b5a0;mov rax, qword [var_8h]": 13,
                "mov qword [var_28h], rax;mov qword [rsp], rdx;call fcn.0054b5a0;mov rax, qword [var_8h];mov rcx, qword [var_20h]": 10,
                "mov rax, qword [arg_68h];call fcn.004580f0;jmp ;call fcn.00456090;jmp fcn.00549c60": 2,
                "mov qword [var_58h], rbp;lea rbp, [var_58h];mov rax, qword [arg_68h];mov qword [rsp], rax;call fcn.00549e50": 3,
                "mov rbx, qword [rdx + ];bt ebx, 1;jb ;mov qword [rsp], rdx;mov qword [var_8h], ": 2,
                "jmp fcn.0054a040;int3;int3;mov rcx, qword gs:[];mov rcx, qword [rcx]": 2,
                "mov rax, qword [var_8h];mov rcx, qword [var_10h];mov rdx, qword [arg_90h];mov rbx, qword [rdx + ];cmp rbx, ": 3,
                "mov qword [var_50h], rax;mov qword [var_48h], rbx;mov qword [var_68h], rcx;mov rsi, qword [rdx + ];mov qword [var_58h], rsi": 2,
                "jne ;mov qword [rsp], rsi;call fcn.0054a280;mov rax, qword [var_10h];mov qword [var_78h], rax": 2,
                "cmp dword [], 0;jne ;mov rcx, qword [var_68h];mov qword [rax + ], rcx;mov rcx, qword [var_48h]": 2,
                "bt edx, 1;jb ;lea rcx, [];mov qword [arg_98h], rcx;mov qword [arg_a0h], rax": 2,
                "ret;cmp rbx, ;jne ;mov ebx, ;jmp ": 1,
                "mov ebx, ;jmp ;cmp rbx, ;jg ;cmp rbx, ": 2,
                "mov rcx, qword [var_60h];mov qword [rax + 8], rcx;mov ecx, 1;mov edx, 1;jmp ": 1,
                "mov rbx, qword [arg_90h];cmp qword [rbx + ], ;jne ;mov qword [rsp], rbx;call fcn.0054b5a0": 1,
                "mov rdi, r8;jmp ;mov qword [var_58h], rbx;mov qword [var_68h], rsi;lea rdx, []": 1,
                "mov rax, qword [var_30h];mov rdi, qword [var_38h];lea rcx, [rax + 1];mov rax, qword [var_40h];mov rbx, qword [var_58h]": 1,
                "call fcn.004580f0;mov rax, rcx;jmp ;mov qword [arg_98h], rcx;mov qword [arg_a0h], rax": 1,
                "mov rbp, qword [var_80h];add rsp, ;ret;lea rdi, [rdx + 8];mov rax, qword [arg_90h]": 1,
                "ret;lea rdi, [rdx + 8];mov rax, qword [arg_90h];call fcn.004580f0;jmp ": 1,
                "jl ;cmp eax, ;ja ;movzx ecx, al;lea rdx, []": 2,
                "movzx edx, byte [var_3bh];mov byte [var_3bh], dl;mov ecx, dword [rax + ];mov dword [rsp], ecx;call fcn.0054aab0": 3,
                "mov rax, qword [arg_168h];cmp dword [rax + ], ;je ;movzx ecx, byte [var_3bh];jmp ": 3,
                "mov ebx, 1;test bl, bl;jne ;mov dword [rsp], ecx;call fcn.0040ab60": 3,
                "call fcn.004580f0;jmp ;cmp edx, ;jl ;cmp edx, ": 2,
                "mov dword [rsp], eax;call fcn.0040ab60;mov rax, qword [var_8h];mov qword [var_b0h], rax;mov qword [rsp], 0": 2,
                "ret;mov rax, qword [var_90h];call fcn.004580f0;jmp ;mov dword [rsp], esi": 1,
                "mov dword [rsp], esi;call fcn.0054a9c0;cmp byte [var_8h], 0;je ;mov rcx, qword [var_68h]": 1,
                "lea rcx, [];mov qword [var_148h], rcx;mov qword [var_150h], rax;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rax, qword [arg_e8h];mov byte [rax + ], 0;xor ecx, ecx;xor edx, edx;jmp ": 1,
                "mov byte [rax + ], 0;xor ecx, ecx;xor edx, edx;jmp ;mov rbx, rcx": 1,
                "mov qword [var_88h], rdx;mov dword [rsp], ecx;call fcn.0054a9c0;cmp byte [var_8h], 0;jne ": 1,
                "jne ;mov eax, dword [var_54h];cmp eax, ;jl ;cmp eax, ": 1,
                "mov rcx, qword [var_90h];mov rdx, qword [var_d0h];jmp ;cmp eax, ;je ": 1,
                "mov rcx, qword [var_d0h];mov rdx, qword [var_90h];mov ebx, ;jmp ;cmp eax, ": 1,
                "jmp ;cmp eax, ;jne ;mov eax, 1;mov rcx, qword [var_d0h]": 1,
                "mov ebx, ;jmp ;mov rax, qword [arg_e8h];cmp dword [rax + ], ;je ": 1,
                "mov rbx, qword [var_28h];cmp rbx, ;sete al;mov rcx, qword [var_d0h];mov rdx, qword [var_90h]": 1,
                "cmp eax, ;je ;mov rax, qword [arg_e8h];mov ecx, dword [rax + ];cmp ecx, ": 1,
                "jl ;cmp ecx, ;jg ;add ecx, ;movsxd rcx, ecx": 2,
                "je ;mov edx, dword [arg_30h];cmp edx, ecx;jne ;mov qword [rsp], rax": 6,
                "jne ;mov qword [rsp], rax;call fcn.0054ccf0;mov rax, qword [arg_18h];cmp dword [rax + ], ": 5,
                "call fcn.0054ccf0;mov rax, qword [arg_18h];cmp dword [rax + ], ;jne ;mov qword [rsp], rax": 5,
                "mov rax, qword [arg_28h];mov qword [arg_48h], rax;mov rbp, qword [var_8h];add rsp, ;ret": 2,
                "add rsp, ;ret;mov rax, qword [arg_38h];mov qword [arg_60h], rax;mov rbp, qword [var_8h]": 3,
                "mov ecx, 1;add qword [rax + ], rcx;mov dword [rax + ], esi;mov rbp, qword [var_58h];add rsp, ": 8,
                "mov rbp, qword [var_58h];add rsp, ;ret;sub rcx, rbx;mov rax, rcx": 8,
                "je ;mov qword [var_50h], rax;mov qword [var_48h], rcx;mov qword [var_58h], rdx;mov qword [rsp], rbx": 4,
                "lea rbx, [rdx + 1];mov rsi, qword [var_48h];cmp rbx, rsi;ja ;mov rdi, qword [var_58h]": 3,
                "lea rax, [];mov qword [rsp], rax;mov rcx, qword [var_58h];mov qword [var_8h], rcx;mov qword [var_10h], rdx": 6,
                "dec rax;test rax, rax;jl ;cmp rax, rcx;ja ": 3,
                "jmp fcn.0054cf70;int3;int3;int3;int3": 3,
                "jmp ;mov dword [rdi + rdx*4], eax;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [var_50h], rax;mov qword [var_48h], rcx;mov qword [var_58h], rdx;mov rbx, qword [arg_70h];mov esi, dword [rbx + ]": 3,
                "mov eax, dword [var_44h];mov rcx, qword [arg_70h];mov rdx, qword [var_48h];jmp ;mov qword [rsp], rcx": 3,
                "ret;call fcn.00456090;jmp fcn.0054d2e0;int3;int3": 3,
                "mov rax, qword [arg_20h];jmp ;mov rcx, qword [arg_20h];mov rax, rcx;mov ecx, dword [rax + ]": 4,
                "jmp ;mov rcx, qword [arg_20h];mov rax, rcx;mov ecx, dword [rax + ];cmp ecx, ": 4,
                "mov byte [rcx + ], 1;mov qword [rsp], rax;call fcn.0054ccf0;jmp ;mov rbp, qword [var_10h]": 4,
                "mov rcx, qword [rax + ];lea rdx, [rcx + 1];cmp qword [rax + ], rdx;jle ;mov rbx, qword [rax]": 4,
                "cmp ecx, ;je ;jmp ;lea edx, [rcx - ];cmp edx, 1": 3,
                "mov qword [rsp], rax;call fcn.0054ccf0;mov rax, qword [arg_18h];mov rcx, qword [arg_20h];mov edx, dword [rax + ]": 4,
                "call fcn.0054ccf0;mov rax, qword [arg_18h];mov rcx, qword [arg_20h];mov edx, dword [rax + ];cmp edx, ": 4,
                "add rsp, ;ret;cmp edx, ;jl ;cmp edx, ": 4,
                "mov rax, qword [arg_20h];mov ecx, dword [rax + ];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [var_10h], rbp;lea rbp, [var_10h];mov rax, qword [arg_20h];mov ecx, dword [rax + ];cmp ecx, ": 4,
                "cmp ecx, ;jle ;cmp ecx, ;jle ;cmp ecx, ": 4,
                "mov qword [rsp], rax;call fcn.0054ccf0;mov eax, 4;mov ecx, dword [arg_28h];mov rdx, qword [arg_20h]": 4,
                "mov eax, 4;mov ecx, dword [arg_28h];mov rdx, qword [arg_20h];jmp ;mov dword [var_ch], eax": 4,
                "call fcn.0054ccf0;mov rbp, qword [var_10h];add rsp, ;ret;cmp ecx, ": 6,
                "add rsp, ;ret;mov qword [rsp], rax;call fcn.0054ccf0;mov rbp, qword [var_10h]": 3,
                "cmp ecx, 1;jbe ;jmp ;call fcn.00456090;jmp fcn.0054d5a0": 2,
                "mov ebx, dword [rax + ];cmp ebx, ecx;je ;mov dword [var_48h], ecx;cmp ebx, ": 3,
                "ret;mov rax, qword [var_58h];call fcn.004580f0;jmp ;mov rax, qword [arg_70h]": 2,
                "jmp ;mov rax, qword [arg_70h];mov rcx, qword [rax + ];mov rdx, qword [arg_78h];add rcx, rdx": 2,
                "mov ecx, ;jmp ;mov rcx, qword [arg_70h];mov qword [rsp], rcx;mov dword [var_8h], eax": 2,
                "neg rax;sar rax, ;and rbx, rax;lea rax, [rbx + rcx];mov qword [arg_80h], rax": 1,
                "call fcn.0054ccf0;mov rax, qword [arg_18h];cmp dword [rax + ], ;je ;mov rbp, qword [var_8h]": 2,
                "ret;call fcn.00456090;jmp fcn.0054da20;int3;int3": 2,
                "mov rcx, qword [rax + ];mov rax, qword [rax + ];cmp qword [], rax;jne ;mov qword [rsp], rax": 2,
                "mov rcx, qword [arg_78h];cmp byte [rcx], ;jne ;movzx edx, byte [rcx + 1];cmp dl, ": 2,
                "mov qword [var_60h], rdx;add rax, ;mov qword [arg_80h], rax;xor ebx, ebx;xorps xmm0, xmm0": 2,
                "xor ebx, ebx;xorps xmm0, xmm0;jmp ;movsd xmm1, qword [];mulsd xmm0, xmm1": 2,
                "xorps xmm0, xmm0;jmp ;movsd xmm1, qword [];mulsd xmm0, xmm1;xorps xmm2, xmm2": 2,
                "jge ;movzx esi, byte [rcx + rbx + 2];cmp esi, ;jge ;inc rbx": 2,
                "lea rax, [];call fcn.004580f0;jmp ;cmp esi, ;jl ": 2,
                "cmp dl, ;sete dl;jmp ;mov qword [var_58h], rax;mov qword [rsp], rcx": 2,
                "mov qword [var_10h], rax;call fcn.0040a940;ud2;call fcn.00456090;jmp fcn.0054da90": 2,
                "xorps xmm0, xmm0;movups xmmword [var_c8h], xmm0;movups xmmword [var_d8h], xmm0;mov qword [var_c0h], 0;movups xmmword [var_c8h], xmm0": 1,
                "jmp ;cmp dl, ;jne ;mov qword [var_48h], rsi;mov qword [var_80h], rdi": 1,
                "jne ;mov qword [var_48h], rsi;mov qword [var_80h], rdi;lea rax, [var_c0h];mov qword [rsp], rax": 1,
                "add r8d, ;mov r9d, 1;test r9b, r9b;jne ;test rax, rax": 1,
                "mov rdx, qword [var_90h];mov qword [var_a8h], rdx;mov qword [var_b0h], rcx;mov qword [var_b8h], rax;lea rax, []": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;lea rax, [var_a0h];mov qword [var_10h], rax": 1,
                "add ecx, ;movsxd rcx, ecx;cmp rcx, ;jl ;mov rcx, qword [rax + 8]": 1,
                "jl ;mov rcx, qword [rax + 8];mov rdx, qword [rax];mov rax, qword [rax + ];test rax, rax": 1,
                "sar rax, ;and rax, rbx;add rax, rdx;mov qword [arg_78h], rax;mov qword [arg_80h], rcx": 1,
                "jl ;cmp ecx, ;setle cl;test cl, cl;jne ": 2,
                "mov qword [rsp], rax;lea rcx, [];mov qword [var_8h], rcx;lea rcx, [];mov qword [var_10h], rcx": 1,
                "lea rcx, [];mov qword [var_18h], rcx;mov qword [var_20h], ;mov qword [var_28h], 0;xorps xmm0, xmm0": 1,
                "mov qword [var_8h], ;call fcn.0054d500;mov rax, qword [arg_60h];mov rdx, qword [var_48h];jmp ": 1,
                "jl ;mov rbx, qword [var_48h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov rbx, qword [var_48h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rcx, rdx;jne ;test rdx, rdx;je ;mov rax, qword [rdx + ]": 1,
                "jne ;test rdx, rdx;je ;mov rax, qword [rdx + ];mov rcx, qword [rdx]": 1,
                "mov rax, qword [rdx + ];mov rcx, qword [rdx];mov rbx, qword [rdx + 8];mov rdx, qword [rdx + ];cmp rax, rbx": 1,
                "mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rcx;call fcn.0040b1c0;mov rax, qword [var_20h]": 3,
                "mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rdx, qword [var_28h];mov qword [arg_98h], rcx;mov qword [arg_a0h], rax": 1,
                "add rax, rdx;mov qword [var_10h], rax;sub rbx, rcx;mov qword [var_18h], rbx;mov qword [var_20h], rsi": 2,
                "cmp dword [], 0;jne ;lea rax, [];mov qword [rdi], rax;mov qword [arg_a0h], 0": 1,
                "lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], rbx;call fcn.0040b1c0": 3,
                "mov eax, dword [var_54h];cmp eax, ;jne ;lea rax, [];mov rcx, qword [arg_90h]": 1,
                "mov rax, qword [arg_98h];jne ;mov qword [arg_a0h], rax;xorps xmm0, xmm0;movups xmmword [arg_a8h], xmm0": 1,
                "mov qword [arg_a0h], rax;mov qword [arg_a8h], rdx;mov qword [arg_b0h], rcx;mov rbp, qword [var_70h];add rsp, ": 1,
                "add rsp, ;ret;mov ebx, 0;mov esi, 0;jmp ": 1,
                "mov rbp, qword [var_70h];add rsp, ;ret;mov rdx, qword [arg_98h];mov esi, 0": 1,
                "mov rcx, qword [arg_150h];mov qword [rsp], rcx;mov rdx, qword [arg_158h];mov qword [var_8h], rdx;mov qword [var_10h], rax": 1,
                "mov qword [rsp], rcx;mov rdx, qword [arg_158h];mov qword [var_8h], rdx;mov qword [var_10h], rax;mov qword [var_18h], rsi": 1,
                "mov qword [rdi + ], rdx;mov qword [var_f0h], rdi;mov rbx, qword [var_98h];mov qword [rdi + ], rbx;cmp dword [], 0": 1,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rdi, qword [var_8h];mov dword [rdi + ], ": 2,
                "mov rdi, rdx;jmp ;mov rcx, rax;mov rax, qword [var_100h];call fcn.004580f0": 1,
                "lea rbx, [rdi + ];mov rax, rdi;mov rdi, rbx;mov rdx, rax;mov rax, qword [var_100h]": 1,
                "call fcn.004580f0;jmp ;mov qword [rsp], 0;mov rax, qword [var_110h];mov qword [var_8h], rax": 1,
                "mov rax, qword [var_110h];mov qword [var_8h], rax;mov rcx, qword [var_80h];mov qword [var_10h], rcx;mov rdx, qword [var_88h]": 1,
                "mov qword [var_8h], rax;mov rcx, qword [var_80h];mov qword [var_10h], rcx;mov rdx, qword [var_88h];mov qword [var_18h], rdx": 1,
                "mov rcx, qword [var_80h];mov qword [var_10h], rcx;mov rdx, qword [var_88h];mov qword [var_18h], rdx;call fcn.00444c60": 1,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [arg_158h]": 1,
                "mov rax, qword [var_28h];mov rcx, qword [var_30h];mov rdx, qword [var_38h];mov rdi, qword [arg_148h];mov qword [rdi + ], rdx": 1,
                "mov qword [var_68h], rax;mov rcx, qword [var_58h];mov qword [var_78h], rcx;lea rdx, [];mov qword [rsp], rdx": 1,
                "mov qword [rax + ], rcx;cmp dword [], 0;jne ;mov rdx, qword [var_78h];mov qword [rax + ], rdx": 1,
                "mov rdx, qword [var_8h];test rcx, rcx;jne ;mov rax, qword [rdx];cmp qword [rdx + 8], 0": 1,
                "call fcn.004580f0;mov rax, rcx;jmp ;mov rdi, qword [var_80h];call fcn.004580f0": 1,
                "mov rdx, qword [var_78h];jmp ;mov qword [rsp], rcx;lea rax, [];mov qword [var_8h], rax": 1,
                "jmp fcn.0054ff20;int3;int3;int3;int3": 1,
                "mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rdx, qword [rsp + 8];mov rbx, qword [rsp + ];mov qword [rsp + ], rdx": 1,
                "mov rcx, qword [rcx + ];test rdx, rdx;jne ;xor ecx, ecx;xor edx, edx": 2,
                "xor ecx, ecx;xor edx, edx;mov qword [arg_58h], rax;mov qword [arg_60h], rdx;mov qword [arg_68h], rcx": 2,
                "mov qword [var_28h], rdx;mov qword [var_30h], 2;call fcn.0053e260;mov rax, qword [var_38h];mov rcx, qword [arg_50h]": 1,
                "mov rax, qword [var_38h];mov rcx, qword [arg_50h];jmp ;lea rdi, [rsi + ];mov rax, rdx": 1,
                "jmp ;mov byte [rax + ], 0;mov rbp, qword [var_28h];add rsp, ;ret": 2,
                "mov rax, qword [var_8h];mov rcx, qword [var_20h];mov rdx, qword [var_18h];mov rbx, qword [var_10h];mov rsi, qword [arg_40h]": 3,
                "mov rdx, qword [var_18h];mov rbx, qword [var_10h];mov rsi, qword [arg_40h];mov qword [rsi + ], rax;mov qword [rsi + ], rdx": 3,
                "xor esi, esi;mov rdi, ;jmp ;mov rsi, rdi;mov rdi, rdx": 4,
                "jmp ;lea ebx, [r8 - ];cmp ebx, 1;ja ;lea rdi, [rsi + 1]": 4,
                "mov rcx, qword [arg_58h];mov rdx, qword [var_40h];movzx ebx, byte [var_2fh];mov rsi, qword [var_30h];mov rdi, qword [var_38h]": 3,
                "movzx ebx, byte [var_2fh];mov rsi, qword [var_30h];mov rdi, qword [var_38h];jmp ;mov qword [arg_68h], rsi": 3,
                "mov qword [var_50h], rbp;lea rbp, [var_50h];mov qword [arg_70h], 0;xorps xmm0, xmm0;movups xmmword [arg_78h], xmm0": 4,
                "mov rdx, qword [rcx];mov rcx, qword [rcx + 8];mov qword [var_28h], rdx;mov qword [var_30h], rcx;mov qword [rsp], rbx": 4,
                "sub rax, rcx;mov qword [var_48h], rax;mov rax, qword [var_28h];mov qword [arg_70h], rax;movups xmm0, xmmword [var_30h]": 4,
                "test rax, rax;je ;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], 0": 4,
                "mov qword [arg_e0h], rax;mov rbp, qword [var_a8h];add rsp, ;ret;lea rax, []": 3,
                "lea rax, [];mov ecx, 5;jmp ;xorps xmm0, xmm0;movups xmmword [arg_c8h], xmm0": 3,
                "mov qword [rsp], rax;mov qword [var_8h], ;lea rcx, [];mov qword [var_10h], rcx;mov qword [var_18h], ": 10,
                "mov qword [var_8h], ;lea rcx, [];mov qword [var_10h], rcx;mov qword [var_18h], ;mov qword [var_20h], 0": 8,
                "cmp ecx, ;je ;cmp ecx, ;jne ;mov qword [rsp], rax": 8,
                "mov rbp, qword [var_48h];add rsp, ;ret;call fcn.00456090;jmp fcn.00550af0": 2,
                "mov rsi, rcx;sub rcx, rbx;mov rdi, rcx;neg rcx;sar rcx, ": 3,
                "movups xmmword [var_48h], xmm0;lea rcx, [];mov qword [var_48h], rcx;mov qword [var_50h], rax;mov rax, qword [arg_68h]": 3,
                "mov qword [var_48h], rcx;mov qword [var_50h], rax;mov rax, qword [arg_68h];mov qword [rsp], rax;mov qword [var_8h], ": 3,
                "mov qword [var_8h], ;lea rcx, [];mov qword [var_10h], rcx;mov qword [var_18h], ;lea rcx, [var_48h]": 2,
                "call fcn.00552540;mov rax, qword [arg_68h];mov byte [rax + ], 1;mov rbp, qword [var_58h];add rsp, ": 2,
                "cmp cl, ;je ;jmp ;call fcn.0042ea20;ud2": 2,
                "call fcn.005523f0;jmp ;cmp ecx, ;je ;mov qword [rsp], rax": 3,
                "add rsp, ;ret;mov qword [rsp], rax;call fcn.005523f0;mov rbp, qword [var_48h]": 3,
                "call fcn.005523f0;mov rbp, qword [var_48h];add rsp, ;ret;call fcn.00456090": 3,
                "mov rax, qword [arg_160h];mov rcx, qword [rax + ];mov qword [var_78h], rcx;mov edx, dword [rax + ];cmp edx, ": 3,
                "call fcn.0054ce40;mov rax, qword [var_68h];mov rcx, qword [var_e0h];lea rdx, [rcx + rax*8];mov rax, qword [var_70h]": 3,
                "mov rcx, qword [var_e0h];lea rdx, [rcx + rax*8];mov rax, qword [var_70h];lea rcx, [rax + 1];mov rax, qword [arg_160h]": 3,
                "lea rcx, [rax + 1];mov rax, qword [arg_160h];mov ebx, dword [rax + ];cmp ebx, ;jl ": 3,
                "cmp rbx, 8;jl ;cmp rcx, 1;jne ;movzx ecx, word []": 3,
                "mov rcx, qword [rax + ];mov qword [rsp], rcx;lea rcx, [var_4ah];mov qword [var_8h], rcx;mov qword [var_10h], 2": 3,
                "mov r8, qword [rdx + ];lea r9, [rsi + 1];cmp r9, rbx;ja ;lea rbx, [rsi + 1]": 5,
                "shl rsi, 4;mov qword [r8 + rsi], rcx;lea rdi, [rsi + r8];lea rdi, [rdi + 8];cmp dword [], 0": 2,
                "mov qword [r8 + rsi], rcx;lea rdi, [rsi + r8];lea rdi, [rdi + 8];cmp dword [], 0;jne ": 2,
                "mov qword [var_8h], ;lea rax, [];mov qword [var_10h], rax;mov qword [var_18h], ;lea rax, [var_140h]": 2,
                "jne ;mov qword [r8 + rsi + 8], rcx;mov rbp, qword [var_150h];add rsp, ;ret": 2,
                "mov qword [var_98h], rax;mov qword [var_108h], rcx;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r8": 2,
                "mov ebx, ;jmp ;lea ebx, [rdx - ];cmp ebx, 1;jbe ": 1,
                "jmp ;lea ebx, [rdx - ];cmp ebx, 1;jbe ;jmp ": 1,
                "cmp rdx, ;jl ;mov rcx, qword [rax + ];mov qword [rsp], rcx;mov byte [var_8h], ": 1,
                "mov rax, qword [var_18h];mov rcx, qword [var_20h];test rax, rax;je ;mov rdx, qword [arg_60h]": 1,
                "cmp r9, rsi;ja ;lea rsi, [r8 + 1];mov qword [rdx + ], rsi;shl r8, 4": 1,
                "shl r8, 4;mov qword [rbx + r8], rax;lea rdi, [rbx + r8];lea rdi, [rdi + 8];cmp dword [], 0": 1,
                "mov qword [rbx + r8], rax;lea rdi, [rbx + r8];lea rdi, [rdi + 8];cmp dword [], 0;jne ": 1,
                "call fcn.004580f0;jmp ;mov qword [var_48h], rcx;mov qword [var_40h], rax;lea rax, []": 1,
                "mov rax, qword [arg_90h];mov qword [var_18h], rax;mov rax, qword [arg_98h];mov qword [var_20h], rax;call fcn.004d6050": 2,
                "mov qword [var_20h], rax;call fcn.004d6050;mov rax, qword [var_28h];mov qword [var_48h], rax;mov rcx, qword [var_30h]": 2,
                "mov qword [var_40h], rcx;lea rdx, [];mov qword [rsp], rdx;call fcn.0040d880;mov rax, qword [var_8h]": 3,
                "cmp dword [], 0;jne ;mov rcx, qword [var_48h];mov qword [rax], rcx;mov rcx, qword [arg_68h]": 2,
                "mov rcx, qword [var_48h];mov qword [rax], rcx;mov rcx, qword [arg_68h];mov rdx, qword [rcx + ];mov rbx, qword [rcx + ]": 2,
                "lea rdi, [rdx + rbx];lea rdi, [rdi + 8];cmp dword [], 0;jne ;mov qword [rdx + rbx + 8], rax": 2,
                "cmp dword [], 0;jne ;mov qword [rcx + ], rax;mov rbp, qword [rsp];add rsp, 8": 4,
                "mov r8, qword [rdx];cmp rdi, rbx;je ;inc rsi;cmp rsi, rcx": 3,
                "add rsp, ;ret;mov rbx, qword [arg_58h];jmp ;call fcn.00456090": 2,
                "mov rax, qword [var_10h];mov rcx, qword [var_38h];mov qword [rcx], rax;mov rax, qword [arg_50h];mov qword [rsp], rax": 3,
                "mov qword [rcx], rax;mov rax, qword [arg_50h];mov qword [rsp], rax;call fcn.00552b30;mov rax, qword [var_10h]": 3,
                "mov rax, qword [arg_50h];mov rdx, qword [rax + ];bt edx, 1;jb ;mov qword [arg_58h], rcx": 3,
                "mov rbx, qword [var_18h];mov rsi, qword [var_10h];mov qword [rsp], rcx;lea rcx, [];mov qword [var_8h], rcx": 2,
                "mov qword [var_18h], rbx;mov qword [var_20h], rdx;mov qword [var_28h], rsi;mov qword [var_30h], 1;call fcn.0053e260": 2,
                "mov qword [var_20h], rdx;mov qword [var_28h], rsi;mov qword [var_30h], 1;call fcn.0053e260;mov rax, qword [arg_50h]": 2,
                "call fcn.00456090;jmp fcn.00552870;int3;int3;int3": 2,
                "mov rdx, qword [var_48h];lea rbx, [rdx + 1];mov rsi, qword [var_50h];cmp rbx, rsi;mov rcx, qword gs:[]": 1,
                "mov rcx, qword [var_60h];mov qword [var_8h], rcx;mov qword [var_10h], rdx;mov qword [var_18h], rsi;mov qword [var_20h], rbx": 2,
                "mov rcx, qword [rax + ];bt ecx, 1;jb ;xor ecx, ecx;mov rcx, qword gs:[]": 1,
                "mov rdx, qword [rbx + ];bt edx, 1;jb ;mov qword [rsp], rbx;call fcn.0054b5a0": 2,
                "je ;lea r9, [rdi + 1];cmp r9, r8;jl ;mov rcx, qword [rsi + ]": 2,
                "mov r10, qword [r9 + ];mov r11, qword [r9 + ];mov r12, qword [r9 + ];lea r13, [r11 + 1];cmp r13, r10": 2,
                "lea rax, [];mov qword [var_8h], rax;mov qword [var_10h], rdi;mov rax, qword [var_100h];mov qword [var_18h], rax": 2,
                "mov rdi, qword [var_d0h];jmp ;lea rcx, [rdi + ];mov rax, rdi;mov rdi, rcx": 2,
                "mov rdi, rdx;jmp ;mov rax, qword [var_c0h];call fcn.004580f0;jmp ": 1,
                "mov rax, qword [var_10h];mov qword [var_70h], rax;mov rcx, qword [arg_c0h];mov qword [rsp], rcx;call fcn.00552870": 1,
                "jne ;mov qword [rsi + ], rbx;mov qword [rsi + ], rcx;mov qword [rsp], rsi;mov qword [var_8h], ": 1,
                "mov qword [rsp], rsi;mov qword [var_8h], ;call fcn.00550550;mov rax, qword [arg_c0h];cmp qword [rax + ], 9": 1,
                "mov qword [var_80h], rax;mov rcx, qword [arg_c0h];mov qword [rsp], rcx;mov qword [var_8h], ;call fcn.00550550": 1,
                "mov qword [rax + ], rdx;mov rdx, qword [var_78h];mov qword [rdx + ], rax;mov rax, qword [arg_c0h];mov rbx, qword [rax + ]": 1,
                "jne ;mov qword [rdx + ], rax;mov rax, qword [arg_c0h];mov rcx, qword [rax + ];bt ecx, 1": 1,
                "cmp qword [rdx + ], 0;jne ;mov rax, qword [rdx];mov qword [rsp], rax;call fcn.0040abe0": 1,
                "mov rax, qword [var_78h];mov rcx, qword [rax + 8];mov rdx, qword [rax + ];mov rcx, qword [rcx + ];mov qword [rsp], rdx": 1,
                "mov qword [var_30h], 1;call fcn.0053e260;mov rax, qword [arg_c0h];mov rdx, qword [var_78h];jmp ": 1,
                "call fcn.0053d560;mov rdx, qword [var_8h];mov rax, qword [var_18h];mov rcx, qword [var_10h];mov rsi, qword [arg_c0h]": 1,
                "mov rdx, qword [var_8h];mov rax, qword [var_18h];mov rcx, qword [var_10h];mov rsi, qword [arg_c0h];jmp ": 1,
                "mov rcx, qword [arg_98h];mov rdx, qword [rcx + ];bt edx, 1;jb ;xor edx, edx": 1,
                "call fcn.00544780;mov rax, qword [var_8h];mov rcx, qword [var_48h];lea rdx, [rcx + 1];mov rbx, qword [var_50h]": 1,
                "lea rdx, [rcx + 1];mov rbx, qword [var_50h];cmp rdx, rbx;ja ;mov rsi, qword [var_80h]": 1,
                "mov rcx, qword [var_58h];mov qword [rax + ], rcx;mov qword [arg_a0h], rax;mov rbp, qword [var_88h];add rsp, ": 1,
                "mov qword [var_60h], rbp;lea rbp, [var_60h];mov rax, qword [arg_70h];mov rcx, qword [rax + ];bt ecx, 1": 2,
                "mov qword [var_8h], ;call fcn.00550550;mov rax, qword [var_10h];mov qword [var_48h], rax;lea rcx, []": 3,
                "lea rcx, [];mov qword [rsp], rcx;call fcn.0040d880;mov rax, qword [var_8h];mov qword [var_58h], rax": 3,
                "mov qword [rsp], rcx;call fcn.0040d880;mov rax, qword [var_8h];mov qword [var_58h], rax;mov rcx, qword [var_48h]": 3,
                "jne ;mov qword [rax + 8], rdx;mov qword [rsp], rcx;call fcn.00554150;mov rax, qword [var_8h]": 2,
                "mov rbx, qword [var_58h];mov qword [rbx + ], rcx;cmp dword [], 0;jne ;mov qword [rbx + ], rdx": 2,
                "mov rbp, qword [var_70h];add rsp, ;ret;lea rdi, [rbx + ];mov rax, rdx": 2,
                "lea rdi, [rbx + ];mov rax, rdx;call fcn.004580f0;jmp ;xor edx, edx": 2,
                "call fcn.004580f0;jmp ;lea rdi, [rax + 8];mov rax, rdx;call fcn.004580f0": 2,
                "mov rax, qword [rcx + ];mov qword [rsp], rax;call fcn.0053db70;mov rax, qword [var_58h];mov rcx, qword [arg_80h]": 2,
                "mov qword [var_8h], 9;call fcn.00550550;mov rax, qword [var_58h];mov rcx, qword [arg_80h];jmp ": 2,
                "mov rcx, qword [arg_80h];jmp ;mov qword [rsp], rcx;call fcn.00544780;mov rax, qword [var_8h]": 2,
                "call fcn.004580f0;mov rax, rdi;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov rax, rdi;mov rcx, qword [var_58h];jmp ;call fcn.0042ea20;ud2": 1,
                "call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.00554570;int3": 1,
                "mov rax, qword [arg_30h];mov qword [rsp], rax;call fcn.00552870;mov rax, qword [var_8h];lea rcx, []": 2,
                "cmp dword [], 0;jne ;mov qword [rdx + ], rax;call fcn.0042f500;mov rbp, qword [var_20h]": 1,
                "mov rax, rbx;mov rdi, rdx;jmp ;mov rdx, rax;mov rax, rcx": 1,
                "mov qword [var_48h], rbp;lea rbp, [var_48h];mov rax, qword [arg_58h];mov qword [rsp], rax;mov qword [var_8h], ": 2,
                "mov rsi, qword [var_18h];mov qword [rsp], rcx;lea rcx, [];mov qword [var_8h], rcx;mov rcx, qword [var_40h]": 2,
                "xor esi, esi;mov rdi, qword [rcx + ];cmp byte [rdi + ], 0;je ;mov qword [var_68h], rdx": 3,
                "mov qword [var_50h], rbx;mov qword [var_58h], rsi;lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 3,
                "mov qword [var_10h], rax;mov rdx, qword [var_68h];mov qword [var_18h], rdx;mov rdx, qword [var_50h];mov qword [var_20h], rdx": 3,
                "je ;cmp rdx, 2;je ;mov qword [rsp], rcx;call fcn.0054a6d0": 3,
                "mov qword [rsp], rcx;call fcn.0054a6d0;mov rax, qword [var_10h];mov rcx, qword [var_8h];mov rdx, qword [var_60h]": 3,
                "mov rax, qword [var_8h];mov rcx, qword [var_48h];mov qword [rax], rcx;mov rcx, qword [arg_80h];mov rcx, qword [rcx + ]": 2,
                "mov rax, qword [var_10h];mov rcx, qword [arg_90h];cmp byte [rcx + ], 0;je ;mov qword [var_48h], rax": 2,
                "call fcn.005436e0;jmp ;mov qword [rsp], rcx;call fcn.0054a6d0;mov rax, qword [var_10h]": 2,
                "call fcn.0040d880;mov rax, qword [arg_90h];mov rcx, qword [rax + ];mov rdx, qword [var_8h];mov qword [rdx], rcx": 2,
                "mov qword [rdx + ], rcx;mov qword [var_68h], rdx;mov rcx, qword [rax + ];bt ecx, 1;jb ": 1,
                "mov rcx, qword [var_58h];mov qword [var_28h], rcx;mov qword [var_30h], 1;call fcn.0053e260;mov rax, qword [arg_90h]": 1,
                "mov rcx, qword [var_8h];mov rdx, qword [var_18h];mov rax, qword [arg_90h];jmp ;call fcn.00456090": 1,
                "jmp ;call fcn.00456090;jmp fcn.00554e90;int3;int3": 1,
                "movzx edx, byte [rcx + ];mov byte [rcx + ], 1;mov dword [rsp], ;lea rcx, [];mov qword [var_8h], rcx": 2,
                "mov rax, qword [var_8h];mov qword [var_88h], rax;cmp qword [rax + 8], 0;je ;mov rcx, qword [var_80h]": 1,
                "cmp qword [rax + 8], 0;je ;mov rcx, qword [var_80h];mov rdx, qword [rcx + ];mov rbx, qword [rcx + ]": 1,
                "mov rbx, rax;mov rax, qword [var_88h];mov rcx, qword [var_80h];jmp ;lea rdi, [rbx + ]": 1,
                "cmp qword [rcx + ], ;jne ;mov rdx, qword [var_48h];mov qword [rcx + ], rdx;jmp ": 1,
                "mov rcx, qword [arg_c0h];mov qword [rsp], rcx;lea rdx, [];mov qword [var_8h], rdx;mov qword [var_10h], rax": 3,
                "mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax;mov rax, qword [var_80h];mov qword [var_10h], rax": 3,
                "mov rax, qword [var_8h];mov qword [var_60h], rax;mov rcx, qword [var_58h];mov qword [rax + 8], rcx;cmp dword [], 0": 2,
                "mov rcx, qword [var_58h];mov qword [rax + 8], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_68h]": 2,
                "mov qword [rdx + ], rcx;lea rax, [];mov qword [arg_98h], rax;mov qword [arg_a0h], rdx;mov rbp, qword [var_80h]": 1,
                "mov qword [var_20h], rdx;mov rdx, qword [var_40h];mov qword [var_28h], rdx;mov qword [var_30h], ;call fcn.0053e260": 1,
                "call fcn.0040d880;mov rax, qword [var_8h];mov qword [var_58h], rax;mov rcx, qword [arg_88h];mov rdx, qword [rcx + ]": 2,
                "mov rcx, qword [arg_88h];mov rax, rcx;mov rcx, qword [rax + ];cmp rcx, 2;je ": 2,
                "mov rsi, qword [rdx + ];mov rdi, qword [rdx + ];lea r8, [rsi + 1];cmp r8, rbx;ja ": 2,
                "mov qword [var_8h], rdi;mov qword [var_10h], rsi;mov qword [var_18h], rbx;mov qword [var_20h], r8;call fcn.00440d10": 2,
                "call fcn.004580f0;jmp ;mov rcx, qword [rax + ];bt ecx, 1;jb ": 2,
                "bt ecx, 1;jb ;mov rax, qword [var_58h];mov qword [arg_90h], rax;mov rbp, qword [var_78h]": 2,
                "ret;mov rax, qword [rax + ];mov rax, qword [rax];mov qword [rsp], rax;lea rax, []": 1,
                "call fcn.00550550;mov rax, qword [arg_88h];mov qword [rsp], rax;call fcn.0054a6d0;mov rax, qword [var_8h]": 1,
                "mov qword [var_50h], rax;mov rcx, qword [var_10h];mov qword [var_48h], rcx;mov rdx, qword [var_8h];mov qword [var_68h], rdx": 1,
                "mov qword [arg_38h], rcx;mov qword [arg_40h], rax;call fcn.0042f500;mov rbp, qword [var_20h];add rsp, ": 2,
                "mov qword [rsp], rax;call fcn.0054a6d0;mov rax, qword [var_10h];mov qword [var_28h], rax;mov rcx, qword [var_8h]": 3,
                "mov rcx, qword [var_20h];mov qword [rax + ], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_30h]": 2,
                "xor ecx, ecx;xor edx, edx;mov qword [var_20h], rcx;mov qword [var_38h], rdx;mov rbx, qword [rax + ]": 3,
                "mov qword [rsp], rax;mov qword [var_8h], ;call fcn.00550550;mov rax, qword [arg_58h];mov qword [rsp], rax": 3,
                "mov qword [var_8h], ;call fcn.00550550;mov rax, qword [arg_58h];mov qword [rsp], rax;call fcn.00555f50": 3,
                "call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [arg_60h];mov qword [rax + 8], rcx;cmp dword [], 0": 3,
                "call fcn.004580f0;mov rax, rcx;jmp ;mov qword [rsp], rax;call fcn.0054a6d0": 3,
                "jmp fcn.00556160;int3;int3;int3;int3": 3,
                "mov qword [var_110h], rbp;lea rbp, [var_110h];mov rax, qword [arg_120h];mov rcx, qword [rax + ];bt ecx, 1": 3,
                "mov qword [var_98h], rbx;mov qword [rsp], rax;mov qword [var_8h], ;call fcn.00550550;mov rax, qword [var_10h]": 3,
                "mov qword [rsp], rcx;mov qword [var_8h], ;call fcn.00550550;mov rax, qword [arg_120h];cmp qword [rax + ], ": 3,
                "xor esi, esi;xor edi, edi;mov qword [var_58h], rbx;mov qword [var_f8h], rsi;mov qword [var_60h], rdi": 3,
                "xor edi, edi;mov qword [var_58h], rbx;mov qword [var_f8h], rsi;mov qword [var_60h], rdi;mov qword [rsp], rax": 3,
                "call fcn.00545e50;mov rax, qword [var_18h];mov rcx, qword [var_20h];mov rdx, qword [var_10h];cmp rax, 1": 2,
                "bt eax, 1;jb ;mov qword [rsp], rbx;call fcn.0054b5a0;mov rax, qword [var_8h]": 2,
                "mov rcx, qword [var_20h];mov rdx, qword [var_18h];mov rbx, qword [var_10h];mov rsi, qword [arg_120h];mov qword [rsi + ], rax": 2,
                "mov rdi, qword [rsi + ];mov rdi, qword [rdi];test rdx, rdx;jbe ;mov qword [var_e0h], rdi": 2,
                "mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rdx, qword [var_e0h];mov qword [rsp], rdx;mov qword [var_8h], rcx": 1,
                "call fcn.0053e260;movzx eax, byte [var_4eh];mov rcx, qword [var_70h];mov rdx, qword [var_68h];mov rbx, qword [var_e8h]": 1,
                "test rdx, rdx;jbe ;mov rax, qword [rbx + 8];mov rcx, qword [rbx];test rcx, rcx": 1,
                "mov qword [arg_130h], rax;mov rbp, qword [var_110h];add rsp, ;ret;mov qword [var_d8h], rax": 1,
                "ret;mov qword [var_d8h], rax;mov rdx, qword [rcx + ];mov rdx, qword [rdx];mov qword [rsp], rdx": 1,
                "mov rcx, qword [arg_88h];mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.00545e50;mov rax, qword [var_18h]": 1,
                "mov rcx, qword [arg_88h];jmp ;lea rdi, [rax + 8];mov rcx, rax;mov rax, qword [var_68h]": 1,
                "jbe ;sub rsp, ;mov qword [var_88h], rbp;lea rbp, [var_88h];xorps xmm0, xmm0": 2,
                "test eax, eax;jne ;mov rax, qword [arg_98h];mov rcx, qword [rax + ];bt ecx, 1": 2,
                "mov qword [var_50h], rcx;mov qword [var_48h], rdx;mov qword [var_78h], rbx;lea rax, [];mov qword [rsp], rax": 2,
                "mov qword [var_8h], rcx;mov rdx, qword [var_68h];mov qword [var_10h], rdx;mov rbx, qword [var_80h];mov qword [var_18h], rbx": 2,
                "mov rdx, qword [var_10h];mov rcx, qword [var_8h];mov rbx, qword [var_18h];mov rax, qword [arg_90h];jmp ": 2,
                "jmp fcn.00557440;int3;int3;int3;int3": 1,
                "call fcn.0040d880;mov rax, qword [arg_90h];mov rcx, qword [rax + ];mov rdx, qword [var_8h];mov qword [var_60h], rdx": 2,
                "jmp ;mov rbx, qword [arg_88h];mov rdx, rdi;mov rax, rcx;mov rcx, rsi": 1,
                "cmp qword [rbx + ], 2;je ;mov qword [var_58h], rcx;mov qword [var_70h], rdx;mov qword [var_50h], rax": 1,
                "mov qword [var_20h], rdx;lea rbx, [];mov qword [rsp], rbx;call fcn.0040d880;mov rdi, qword [var_8h]": 2,
                "mov rbp, qword [var_38h];add rsp, ;ret;lea rcx, [rax + ];mov rdx, rdi": 2,
                "mov qword [rsp], rax;mov qword [var_8h], ;call fcn.00550550;mov rax, qword [var_10h];mov qword [var_50h], rax": 3,
                "mov rax, qword [var_80h];jmp ;cmp byte [rdx + ], 0;jne ;mov qword [rsp], rax": 2,
                "movups xmmword [var_30h], xmm0;call fcn.005436e0;mov rax, qword [arg_c0h];mov qword [rsp], rax;call fcn.005589b0": 2,
                "cmp rdx, ;je ;cmp rdx, 9;jne ;mov qword [rsp], rcx": 3,
                "mov qword [var_18h], rax;mov qword [var_20h], ;lea rax, [var_a0h];mov qword [var_28h], rax;mov qword [var_30h], 1": 2,
                "mov qword [rax + 8], rcx;lea rcx, [];mov qword [arg_a0h], rcx;mov qword [arg_a8h], rax;mov rbp, qword [var_88h]": 2,
                "mov rax, qword [arg_98h];mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax;mov rax, qword [var_70h]": 1,
                "mov rcx, qword [rax + ];add rcx, qword [rax + 8];mov qword [var_60h], rcx;lea rax, [];mov qword [rsp], rax": 1,
                "jmp ;lea rdi, [rsi + ];mov rax, rbx;call fcn.004580f0;mov rdx, qword [var_58h]": 1,
                "cmp rcx, ;jg ;cmp rcx, ;jg ;cmp rcx, 2": 2,
                "cmp rcx, ;jne ;mov rcx, qword [rax + ];mov rdx, qword [rax + ];cmp rcx, rdx": 2,
                "cmp rbx, ;jl ;cmp rcx, rdx;jg ;mov qword [rsp], rax": 1,
                "cmp rcx, ;je ;jmp ;call fcn.00456090;jmp fcn.005589b0": 1,
                "movzx ecx, byte [rsp + 8];mov byte [rax + ], cl;ret;int3;int3": 1,
                "call fcn.0053ffb0;call fcn.0046d060;call fcn.0047be50;call fcn.004f3bd0;call fcn.004699c0": 2,
                "movups xmm0, xmmword [rax + ];movups xmmword [rsp + ], xmm0;movups xmm0, xmmword [rax + ];movups xmmword [rsp + ], xmm0;mov rax, qword [rsp + ]": 2,
                "call fcn.00403a00;mov rcx, qword [rsp + ];mov rax, qword [rsp + ];inc rax;cmp rax, 3": 2,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.00559ec0;int3": 1,
                "jmp fcn.00559ec0;int3;int3;int3;int3": 1,
                "mov rax, qword [var_20h];mov qword [var_38h], rax;mov rcx, qword [var_18h];mov qword [var_30h], rcx;lea rdx, []": 2,
                "mov qword [rsp], rdx;call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [arg_50h];mov qword [rax], rcx": 2,
                "call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [arg_50h];mov qword [rax], rcx;cmp dword [], 0": 2,
                "jne ;mov rcx, qword [arg_58h];mov qword [rax + 8], rcx;mov rcx, qword [var_30h];mov qword [rax + ], rcx": 2,
                "add rsp, ;ret;lea rdi, [rax + ];mov rcx, rax;mov rax, qword [var_38h]": 2,
                "jmp fcn.00559f40;int3;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 2,
                "mov rcx, qword [rax];mov rdx, qword [rax + 8];lea rbx, [];cmp rcx, rbx;jne ": 2,
                "mov qword [rsp], rdx;mov rcx, qword [rsp + ];mov qword [rsp + 8], rcx;add rax, ;mov qword [rsp + ], rax": 2,
                "call fcn.0055ae50;mov rbp, qword [rsp + ];add rsp, ;ret;mov rax, qword [rcx + ]": 2,
                "xor edx, edx;div rcx;mov qword [var_18h], rdx;mov rdi, qword [rsi + 8];mov rbx, qword [rbx + ]": 1,
                "jbe ;sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h];mov ecx, dword [arg_30h]": 2,
                "sar rdx, ;jmp ;mov rax, qword [arg_28h];mov rcx, qword [rax];mov rdx, qword [rax + 8]": 2,
                "cmp edx, ecx;jg ;mov eax, edx;mov ecx, dword [arg_30h];cdq": 2,
                "lea rbp, [var_20h];mov rax, qword [arg_30h];mov rcx, qword [rax];mov rdx, qword [rax + 8];mov rcx, qword [rcx + ]": 3,
                "mov dword [var_14h], edx;mov rax, rsi;jmp ;mov rax, qword [arg_30h];mov rcx, qword [rax]": 3,
                "jmp fcn.0055a590;int3;int3;int3;int3": 3,
                "call fcn.0055a320;mov rax, qword [var_10h];mov qword [arg_38h], rax;mov rbp, qword [var_18h];add rsp, ": 3,
                "movsd xmm2, qword [];ucomisd xmm0, xmm2;jne ;jnp ;cvtsd2ss xmm0, xmm0": 2,
                "jmp ;movss dword [rsp + ], xmm0;mov rbp, qword [rsp + ];add rsp, ;ret": 2,
                "mov rbx, qword [rdx + rax*8];mov rsi, qword [rsp + ];cmp rsi, rcx;jb ;jmp ": 2,
                "dec rax;jmp ;mov qword [rsp + ], rax;mov rcx, qword [rsp + ];mov qword [rsp], rcx": 1,
                "mov qword [rsp], rcx;mov qword [rsp + 8], rax;mov rdx, qword [rsp + ];mov rax, qword [rdx];call rax": 4,
                "cmp rax, ;jg ;jmp ;mov qword [rsp + ], rax;mov rcx, qword [rsp + ]": 1,
                "jne ;mov qword [rsp], rcx;mov rcx, qword [rsp + ];mov qword [rsp + 8], rcx;mov rcx, qword [rsp + ]": 1,
                "movzx ecx, byte [rax];mov rbx, qword [arg_40h];mov rsi, qword [rbx];mov rdi, qword [arg_20h];mov r8, qword [arg_28h]": 1,
                "mov rsi, qword [rsp];mov rax, qword [arg_48h];mov rdx, qword [var_8h];mov rbx, qword [arg_40h];mov rdi, qword [arg_20h]": 1,
                "jmp ;mov rax, qword [var_10h];mov rcx, qword [rax];mov rdx, qword [rax + 8];mov rcx, qword [rcx + ]": 2,
                "mov rax, qword [rsp + ];test byte [rax], al;mov qword [rsp], rax;call fcn.00460900;mov rax, qword [rsp + ]": 6,
                "ret;call fcn.00456090;jmp fcn.0055ae50;int3;int3": 3,
                "lea ebx, [rdx + ];test edx, edx;cmovl edx, ebx;test rax, rax;jl ": 3,
                "test rax, rax;jl ;movsxd rbx, edx;mov esi, ;imul rsi, rbx": 3,
                "cmovl edx, ebx;movsxd rbx, edx;mov esi, ;imul rsi, rbx;sar rsi, ": 3,
                "movsxd rbx, edx;xor r8, rbx;lea rbx, [];mov rsi, qword [rbx + rax*8];xor rsi, r8": 3,
                "test rdx, rdx;jge ;add rcx, ;mov qword [rax + 8], rcx;mov rcx, qword [rax + 8]": 5,
                "mov rbx, qword [rax];cmp rbx, ;jae ;mov rbx, qword [rax + rbx*8 + ];add rdx, rbx": 5,
                "mov rbx, qword [rax + rbx*8 + ];add rdx, rbx;mov qword [rax + rcx*8 + ], rdx;btr rdx, ;mov qword [rsp + ], rdx": 3,
                "mov qword [var_38h], rbp;lea rbp, [var_38h];mov qword [rsp], 1;call fcn.00559ec0;lea rax, []": 2,
                "jmp ;call fcn.00456090;jmp fcn.0055b2a0;int3;int3": 2,
                "mov byte [], 2;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov rax, qword [];mov qword [var_20h], rax;mov rcx, qword [];mov qword [var_18h], rcx;xor edx, edx": 1,
                "je ;mov qword [var_10h], rdx;mov rax, qword [rbx + 8];mov byte [rsp], sil;mov qword [var_8h], rax": 1,
                "mov rax, qword [rbx + 8];mov byte [rsp], sil;mov qword [var_8h], rax;mov rdx, qword [arg_38h];mov rax, qword [rdx]": 1,
                "mov rdx, qword [arg_38h];mov rax, qword [rdx];call rax;mov rax, qword [var_20h];mov rcx, qword [var_18h]": 1,
                "mov rcx, qword [var_18h];mov rdx, qword [var_10h];jmp ;mov rbp, qword [var_28h];add rsp, ": 1,
                "mov qword [rsp + ], rax;call fcn.0048cb60;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rdx, qword [rsp + ]": 44,
                "mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax;call fcn.0055bc80;movzx eax, byte [rsp + ]": 3,
                "cmp rcx, rdx;jne ;mov rcx, qword [rax];mov rax, qword [rax + 8];jne ": 20,
                "mov rdi, qword [rsi + 8];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov qword [var_20h], 1;call fcn.00571910;mov rsi, qword [arg_68h];jmp ;mov byte [arg_a0h], 1": 9,
                "ud2;call fcn.00456090;jmp fcn.0055bc80;int3;mov rcx, qword gs:[]": 3,
                "jmp ;mov rbx, rax;shl rax, 3;movsd xmm2, qword [var_38h];cvtsd2ss xmm2, xmm2": 2,
                "mov rsi, qword [var_48h];movss dword [rsi + rax], xmm2;cvtsd2ss xmm0, xmm0;movss dword [rsi + rax + 4], xmm0;lea rdx, [rbx + 1]": 2,
                "movsd xmm2, qword [];pxor xmm2, xmm0;movsd qword [var_38h], xmm0;movsd xmm3, qword [];ucomisd xmm2, xmm3": 2,
                "movups xmm2, xmm0;jmp ;mov qword [rsp], rbx;call fcn.0040abe0;mov rax, qword [var_8h]": 4,
                "jmp ;call fcn.0042e8e0;ud2;xorps xmm0, xmm0;movups xmmword [var_50h], xmm0": 1,
                "mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax;call fcn.0055c370;movzx eax, byte [rsp + ]": 1,
                "call fcn.00456090;jmp fcn.0055c370;int3;int3;int3": 1,
                "mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax;call fcn.0055c660;movzx eax, byte [rsp + ]": 1,
                "lea rdx, [rax + 1];mov rax, rcx;mov rcx, rbx;mov rbx, qword [arg_98h];cmp rdx, rbx": 2,
                "movsd xmm4, qword [];ucomisd xmm4, xmm2;jae ;mov rax, qword [var_38h];mov rcx, qword [var_30h]": 2,
                "xorps xmm0, xmm0;movups xmmword [var_58h], xmm0;lea rcx, [];mov qword [var_58h], rcx;mov qword [var_60h], rax": 18,
                "lea rdx, [var_58h];mov qword [var_10h], rdx;mov qword [var_18h], 1;mov qword [var_20h], 1;mov rcx, qword gs:[]": 1,
                "jmp ;call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.0055c9c0": 1,
                "jmp ;mov rdi, qword [var_40h];mov qword [rdi + rbx*8], rax;inc rbx;mov rax, rsi": 2,
                "call fcn.0055f880;mov rax, qword [var_8h];movabs rcx, ;cmp rax, rcx;jl ": 2,
                "mov qword [rsp + ], rax;call fcn.0055cfa0;movzx eax, byte [rsp + ];mov byte [rsp + ], al;mov rbp, qword [rsp + ]": 1,
                "mov qword [rsp], rsi;call fcn.0055f880;mov rax, qword [var_8h];cmp rax, ;jl ": 6,
                "mov qword [var_8h], rax;call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.0055cfa0": 1,
                "mov qword [rsp + ], rax;call fcn.0055d2c0;movzx eax, byte [rsp + ];mov byte [rsp + ], al;mov rbp, qword [rsp + ]": 1,
                "call fcn.00456090;jmp fcn.0055d2c0;int3;int3;int3": 1,
                "mov qword [rbx + rcx*8], rax;lea rsi, [rcx + 1];mov rax, rdx;mov rcx, rbx;mov rdx, rsi": 7,
                "mov rax, qword [rsp + ];mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax;call fcn.0055d890": 1,
                "cmp rcx, rdx;jg ;mov rdx, qword [rax + 8];mov rbx, qword [rdx + ];mov rcx, qword gs:[]": 1,
                "mov rsi, qword [rdx];mov rdi, qword [rdx + 8];mov rdx, qword [rdx + ];cmp rdx, rdi;ja ": 1,
                "sub rbx, rdx;mov r8, rbx;neg rbx;sar rbx, ;and rbx, rdx": 1,
                "mov qword [var_8h], rbx;mov qword [var_10h], rcx;mov qword [var_18h], r8;call fcn.00444c60;mov rax, qword [var_20h]": 1,
                "mov rax, qword [var_8h];cmp rax, ;ja ;mov rcx, qword [var_38h];mov rdx, qword [var_30h]": 4,
                "mov rbx, qword [rax];mov rsi, qword [rax + ];cmp rsi, rdx;ja ;sub rdx, rsi": 1,
                "mov r8, rdi;cmovg rdi, rdx;sub rcx, rsi;neg rcx;sar rcx, ": 1,
                "lea rbp, [rsp + ];mov rax, qword [rsp + ];mov rcx, qword [rax + 8];mov rdx, qword [rax + ];sub rcx, rdx": 1,
                "sub rsp, ;mov qword [var_60h], rbp;lea rbp, [var_60h];mov rax, qword [arg_90h];cmp rax, 1": 1,
                "lea rbp, [var_60h];mov rax, qword [arg_90h];cmp rax, 1;jb ;mov rcx, qword [arg_70h]": 1,
                "je ;mov rax, qword [arg_88h];test rax, rax;jbe ;mov rax, qword [arg_80h]": 1,
                "mov qword [arg_a0h], rdx;mov qword [arg_a8h], rcx;mov qword [arg_b0h], rax;mov rbp, qword [var_60h];add rsp, ": 2,
                "jmp ;mov rdx, qword [var_48h];mov rcx, qword [var_50h];mov rax, qword [var_58h];jmp ": 1,
                "mov rcx, qword [var_50h];mov rax, qword [var_58h];jmp ;mov rax, qword [];mov rcx, qword []": 1,
                "mov rax, qword [var_58h];jmp ;mov rax, qword [];mov rcx, qword [];mov qword [arg_98h], 0": 1,
                "mov qword [arg_98h], rcx;mov qword [arg_a0h], 1;xorps xmm0, xmm0;movups xmmword [arg_a8h], xmm0;mov rbp, qword [var_60h]": 1,
                "call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.0055f2a0;int3": 1,
                "mov rax, qword [arg_98h];mov rcx, qword [rax + 8];mov rdx, qword [rcx + ];mov rbx, qword [rcx + 8];mov rsi, qword [rcx]": 2,
                "mov qword [var_70h], rdx;mov qword [var_78h], rcx;mov qword [var_80h], rax;lea rax, [];mov qword [rsp], rax": 6,
                "ud2;mov rax, qword [];mov rcx, qword [];xorps xmm0, xmm0;movups xmmword [var_58h], xmm0": 1,
                "movups xmmword [var_58h], xmm0;mov qword [var_58h], rax;mov qword [var_60h], rcx;lea rax, [];mov qword [rsp], rax": 1,
                "lea rax, [var_58h];mov qword [var_8h], rax;call fcn.0040aa50;mov rax, qword [var_10h];mov rcx, qword [var_18h]": 3,
                "call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.0055f580;int3": 1,
                "mov rdx, qword [rcx + 8];sub rdx, qword [rcx + ];cmp rdx, rax;jl ;movabs rcx, ": 3,
                "call fcn.0055f580;mov rbp, qword [rsp + ];add rsp, ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [rsp], rax;call fcn.0055f580;mov rbp, qword [rsp + ];add rsp, ;ret": 4,
                "call fcn.0055f580;mov rbp, qword [rsp + ];add rsp, ;ret;call fcn.00456090": 4,
                "mov qword [var_48h], rbp;lea rbp, [var_48h];mov rax, qword [arg_58h];mov rcx, qword [arg_60h];mov rdx, qword [arg_68h]": 3,
                "mov qword [var_30h], rbx;mov qword [var_40h], rcx;mov qword [var_38h], rax;mov qword [rsp], rax;mov qword [var_8h], rcx": 3,
                "call fcn.0048e0e0;mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rdx, qword [var_10h];mov rbx, qword [var_38h]": 3,
                "mov rbx, qword [var_38h];mov qword [rsp], rbx;mov rsi, qword [var_40h];mov qword [var_8h], rsi;mov rdi, qword [var_30h]": 3,
                "mov qword [rsp], rbx;mov rsi, qword [var_40h];mov qword [var_8h], rsi;mov rdi, qword [var_30h];mov qword [var_10h], rdi": 3,
                "mov rdx, rcx;jmp ;mov qword [var_30h], rdx;lea rax, [];mov qword [rsp], rax": 3,
                "call fcn.0055f580;cmp qword [rsp + 8], 0;mov rax, qword [rsp + ];mov qword [rsp], rax;mov rax, qword [rsp + ]": 3,
                "mov qword [rsp + 8], rax;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "ret;mov rax, qword [rsp + ];mov rcx, qword [rax + ];mov rax, qword [rax + ];xorps xmm0, xmm0": 2,
                "mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;mov qword [rsp + ], rax;call fcn.0048c900;mov rbp, qword [rsp + ]": 1,
                "mov qword [rsp], rax;mov qword [rsp + 8], rcx;call fcn.0042f900;ud2;call fcn.00456090": 2,
                "mov qword [var_8h], rax;mov qword [var_10h], rcx;mov qword [var_18h], rdx;call fcn.0042ec20;test eax, eax": 14,
                "add rax, rbx;mov rbx, qword [arg_a0h];mov rsi, qword [rbx];mov rdi, qword [rbx + 8];cmp rax, rdi": 2,
                "mov rsi, qword [rbx];mov rdi, qword [rbx + 8];cmp rax, rdi;jge ;jae ": 2,
                "mov r9, qword [rsi + rdi + ];mov r10, qword [rsi + rdi + ];mov r11, qword [rsi + rdi + ];test r11, r11;jne ": 2,
                "jmp ;mov qword [var_70h], rsi;mov qword [var_68h], r8;mov qword [var_58h], rdi;mov rax, qword [arg_a8h]": 2,
                "mov qword [var_58h], rdi;mov rax, qword [arg_a8h];mov qword [rsp], rax;mov rcx, qword [arg_b0h];mov qword [var_8h], rcx": 2,
                "mov qword [var_10h], rdx;mov qword [var_18h], r11;mov qword [var_20h], r9;mov qword [var_28h], r10;call fcn.00489340": 2,
                "mov qword [var_18h], r11;mov qword [var_20h], r9;mov qword [var_28h], r10;call fcn.00489340;mov rax, qword [var_40h]": 2,
                "mov qword [var_28h], r10;call fcn.00489340;mov rax, qword [var_40h];mov rcx, qword [var_38h];mov rdx, qword [var_30h]": 2,
                "mov rdi, qword [var_58h];mov r8, qword [var_68h];mov r9, rcx;mov r10, rdx;mov rcx, qword [var_60h]": 2,
                "mov rcx, qword [var_60h];mov rdx, rbx;jmp ;mov qword [rsp], rdx;mov qword [var_8h], rcx": 2,
                "mov qword [var_78h], rcx;mov qword [var_80h], rax;lea rax, [];mov qword [rsp], rax;lea rax, [var_78h]": 1,
                "mov rax, qword [var_8h];test rax, rax;jl ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rdi, qword [rbx];cmp rax, rsi;jge ;jb ;jmp ": 1,
                "mov rbp, qword [var_50h];add rsp, ;ret;lea rdi, [rdx + 8];call fcn.004580f0": 1,
                "mov qword [rsp], rcx;mov rax, qword [var_28h];mov qword [var_8h], rax;mov rax, qword [];mov rcx, qword []": 2,
                "call rax;mov rax, qword [var_8h];mov qword [var_48h], rax;cmp rax, ;xor ecx, ecx": 2,
                "mov rax, qword [var_48h];mov rdx, qword [arg_a8h];cmp rcx, rdx;jge ;mov qword [var_40h], rcx": 2,
                "ret;lea rdx, [rdi + ];mov rdi, rdx;mov rax, qword [arg_b8h];call fcn.004580f0": 2,
                "jmp ;mov rbp, qword [var_68h];add rsp, ;ret;mov rax, qword [arg_80h]": 2,
                "mov qword [var_20h], rdi;mov r8, qword [arg_b0h];mov qword [var_28h], r8;mov r9, qword [arg_b8h];mov rcx, qword gs:[]": 1,
                "mov qword [var_20h], rcx;mov rcx, qword [arg_88h];mov qword [var_28h], rcx;mov qword [var_30h], rax;mov rax, qword [arg_98h]": 2,
                "mov rdx, qword [arg_48h];mov rax, qword [rdx];call rax;mov rax, qword [arg_58h];mov qword [arg_78h], rax": 2,
                "mov rbx, qword [arg_110h];mov rbx, qword [rbx + ];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [var_10h], rdx;call fcn.00489000;mov rax, qword [arg_120h];mov qword [rsp], rax;mov rcx, qword [arg_140h]": 2,
                "mov rbx, qword [arg_128h];mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "mov qword [var_8h], rcx;mov rdx, qword [var_88h];mov qword [var_10h], rdx;call fcn.00489000;mov rax, qword [var_18h]": 1,
                "mov rdx, qword [var_88h];mov qword [var_10h], rdx;call fcn.00489000;mov rax, qword [var_18h];mov rcx, qword [var_20h]": 1,
                "jge ;mov qword [var_28h], rax;mov rbx, qword [arg_68h];mov rsi, qword [rbx + 8];mov r8, qword [rsi + ]": 1,
                "mov qword [var_40h], rcx;mov qword [var_48h], rax;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 1,
                "mov rax, rdi;mov rdi, rcx;mov rbx, rax;xor eax, eax;call fcn.004580f0": 1,
                "mov qword [var_28h], rbp;lea rbp, [var_28h];mov rax, qword [arg_40h];mov qword [rsp], rax;call fcn.0055f580": 2,
                "mov rax, qword [arg_50h];cmp qword [var_8h], rax;jne ;mov rcx, qword [arg_38h];mov qword [rsp], rcx": 2,
                "mov rax, qword [arg_50h];jmp ;call fcn.00456090;jmp fcn.00562790;int3": 2,
                "mov qword [var_20h], rbx;mov rdx, qword [arg_78h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "lea rbx, [rdi + ];mov rax, rdi;mov rdi, rbx;mov rdx, rax;xor eax, eax": 2,
                "mov rdi, rbx;mov rdx, rax;xor eax, eax;call fcn.004580f0;mov rdi, rdx": 2,
                "test rdx, rdx;jge ;mov rax, qword [var_50h];mov rcx, qword [rax + ];mov rdx, qword [var_68h]": 3,
                "mov rcx, qword [var_80h];mov qword [var_90h], rcx;lea rcx, [];mov qword [var_98h], rcx;mov rdx, qword [var_70h]": 2,
                "call fcn.00571910;mov rax, qword [arg_d8h];mov qword [rsp], rax;mov rcx, qword [arg_e0h];mov qword [var_8h], rcx": 1,
                "ret;mov rcx, qword [arg_d8h];mov qword [rsp], rcx;mov rdx, qword [arg_e0h];mov qword [var_8h], rdx": 1,
                "mov qword [var_18h], 0;mov qword [var_20h], rax;call fcn.0048cb60;mov rax, qword [var_30h];mov rcx, qword [var_28h]": 1,
                "mov rax, rcx;mov rcx, rdx;xor edx, edx;div rbx;cmp rax, rcx": 1,
                "div rbx;cmp rax, rcx;setne dl;test dl, dl;jne ": 1,
                "ja ;sub rbx, r8;mov r9, rbx;neg rbx;sar rbx, ": 3,
                "neg rbx;sar rbx, ;and rbx, r8;add rbx, rsi;sub rdi, r8": 3,
                "lea rax, [];mov qword [var_8h], rax;lea rax, [var_a8h];mov qword [var_10h], rax;call fcn.0045ee90": 2,
                "mov rcx, qword [rax + ];mov rdx, qword [var_88h];mov qword [rsp], rdx;mov rbx, qword [arg_110h];mov qword [var_8h], rbx": 2,
                "mov qword [var_e0h], rax;mov qword [var_e8h], rcx;mov rax, qword [arg_118h];mov qword [var_f0h], rax;lea rax, []": 2,
                "mov rax, qword [var_90h];mov qword [rsp], rax;mov rax, qword [var_58h];mov qword [var_8h], rax;mov rax, qword [var_50h]": 2,
                "mov qword [rsp], rax;mov qword [var_8h], ;lea rax, [var_c8h];mov qword [var_10h], rax;mov qword [var_18h], 1": 3,
                "mov rax, qword [var_58h];mov rbx, qword [var_90h];mov r9, qword [var_50h];mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [rdx + ], rax;mov rax, qword [arg_88h];mov qword [rsp], rax;mov byte [var_8h], 1;call fcn.00568880": 1,
                "xorps xmm0, xmm0;movups xmmword [var_18h], xmm0;call fcn.00571910;mov rax, qword [var_28h];jmp ": 2,
                "mov qword [rsp], rax;call fcn.0040abe0;mov rax, qword [var_8h];mov qword [var_40h], rax;mov rcx, qword [var_38h]": 1,
                "xorps xmm0, xmm0;movups xmmword [var_58h], xmm0;movups xmmword [var_68h], xmm0;lea rcx, [];mov qword [var_58h], rcx": 1,
                "movups xmmword [var_58h], xmm0;movups xmmword [var_68h], xmm0;lea rcx, [];mov qword [var_58h], rcx;mov rdx, qword [var_40h]": 1,
                "mov qword [var_58h], rcx;mov rdx, qword [var_40h];mov qword [var_60h], rdx;mov qword [var_68h], rcx;mov qword [var_70h], rax": 1,
                "mov rax, qword [var_30h];mov rcx, qword [arg_90h];jmp ;lea rax, [];mov qword [rsp], rax": 1,
                "call fcn.00571910;mov rax, qword [var_30h];jmp ;lea rax, [];mov qword [rsp], rax": 1,
                "mov rax, qword [arg_88h];mov rcx, qword [rax + ];mov rax, qword [rax + ];xorps xmm0, xmm0;movups xmmword [var_48h], xmm0": 1,
                "mov qword [var_30h], rax;cmp byte [var_10h], 0;je ;mov rcx, qword [arg_a8h];mov rdx, qword [rcx + 8]": 2,
                "mov rdx, qword [rdx + ];cmp rdx, rdi;ja ;sub rsi, rdx;mov qword [var_40h], rsi": 2,
                "and rsi, rdx;add rbx, rsi;mov qword [var_48h], rbx;sub rdi, rdx;cmp rdi, rax": 2,
                "sub rdi, rdx;cmp rdi, rax;jl ;test rax, rax;jl ": 2,
                "jl ;test rax, rax;jl ;cmp rax, r8;ja ": 2,
                "ret;mov rax, qword [arg_b0h];mov qword [rsp], rax;mov rax, qword [arg_b8h];mov qword [var_8h], rax": 2,
                "mov rax, qword [arg_c0h];mov qword [var_10h], rax;mov byte [var_18h], 1;call fcn.00489ee0;mov rax, qword [var_20h]": 2,
                "mov rcx, qword [var_20h];mov rax, qword [var_28h];jmp ;mov rax, qword [arg_b0h];mov qword [rsp], rax": 3,
                "mov rax, qword [var_18h];mov rcx, qword [var_20h];mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 1,
                "call fcn.00571910;mov rax, qword [var_30h];mov rcx, qword [arg_a8h];mov rbx, qword [var_48h];mov r8, qword [var_40h]": 1,
                "mov rax, qword [arg_78h];mov qword [rsp], rax;call fcn.0055f8f0;mov rax, qword [var_8h];mov qword [var_28h], rax": 2,
                "mov qword [rsp], rax;mov qword [var_8h], ;lea rax, [var_40h];mov qword [var_10h], rax;mov qword [var_18h], 2": 1,
                "movups xmmword [var_18h], xmm0;call fcn.00571910;mov rax, qword [var_28h];jmp ;lea rax, []": 1,
                "jbe ;sub rsp, ;mov qword [var_1b8h], rbp;lea rbp, [var_1b8h];mov rax, qword [arg_1d8h]": 2,
                "mov rax, qword [rax + 8];xorps xmm0, xmm0;movups xmmword [var_188h], xmm0;mov qword [var_188h], rax;mov rax, qword [arg_1e0h]": 2,
                "mov qword [var_20h], 1;call fcn.00571910;mov rcx, qword [var_180h];jmp ;mov rax, qword [arg_1d8h]": 2,
                "mov rcx, qword [var_70h];mov qword [rax + 8], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_128h]": 2,
                "mov rax, qword [var_28h];mov qword [var_130h], rax;mov rcx, qword [var_30h];mov qword [var_78h], rcx;mov rdx, qword [arg_1c8h]": 2,
                "mov rcx, qword [var_10h];mov qword [var_1a8h], rax;mov qword [var_1b0h], rcx;mov rax, qword [arg_1c8h];mov qword [rsp], rax": 1,
                "mov qword [var_170h], rax;mov qword [rsp], 0;lea rcx, [];mov qword [var_8h], rcx;mov qword [var_10h], ": 1,
                "mov rcx, qword [var_130h];mov qword [var_18h], rcx;mov rcx, qword [var_78h];mov qword [var_20h], rcx;lea rcx, []": 1,
                "call fcn.00444ae0;mov rax, qword [var_40h];mov qword [var_68h], rax;mov rcx, qword [var_38h];mov qword [var_120h], rcx": 1,
                "mov qword [var_120h], rcx;lea rdx, [];mov qword [rsp], rdx;call fcn.0040d880;mov rdi, qword [var_8h]": 1,
                "mov qword [rax], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_170h];mov qword [rax + 8], rcx": 1,
                "mov qword [var_18h], 1;mov qword [var_20h], 1;call fcn.00571910;mov rdx, qword [var_60h];jmp ": 1,
                "mov ecx, dword [arg_a0h];mov dword [var_10h], ecx;call fcn.00411760;mov rdi, qword [var_18h];test byte [rdi], al": 1,
                "mov qword [rdi], rcx;mov edx, dword [arg_a0h];cmp dword [], edx;jne ;cmp dword [], 0": 1,
                "cmp qword [rax + ], 0;je ;cmp dword [], 0;jne ;lea rax, []": 1,
                "jne ;mov qword [var_40h], rdx;lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 1,
                "call fcn.00565000;mov rax, qword [var_18h];mov qword [var_50h], rax;lea rcx, [];mov qword [rsp], rcx": 1,
                "mov dword [var_2ch], eax;mov rcx, qword [arg_98h];mov qword [rsp], rcx;mov edx, dword [var_28h];mov dword [var_8h], edx": 1,
                "mov qword [rsp], rcx;mov edx, dword [var_28h];mov dword [var_8h], edx;mov rdx, qword [arg_a8h];mov qword [var_10h], rdx": 1,
                "cmp rdx, rbx;jne ;mov qword [rsp], rcx;call fcn.00480e80;mov rcx, qword [var_8h]": 2,
                "sete dil;cmp dl, dil;je ;mov byte [arg_b8h], 0;mov rbp, qword [var_80h]": 2,
                "cmp rsi, 3;sete dil;cmp dl, dil;jne ;test rsi, rsi": 2,
                "cmp dword [], eax;sete byte [arg_b8h];mov rbp, qword [var_80h];add rsp, ;ret": 10,
                "jbe ;add rax, ;cmp rax, 1;ja ;mov eax, dword [arg_a8h]": 2,
                "ja ;cmp rax, ;jne ;movzx eax, byte [var_37h];test al, al": 2,
                "jne ;movzx eax, byte [var_37h];test al, al;je ;mov rax, qword [var_40h]": 3,
                "jne ;mov byte [arg_b8h], 0;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - 8]": 1,
                "mov rax, qword [var_10h];mov rcx, qword [var_8h];mov qword [var_70h], rcx;mov qword [var_78h], rax;mov rdx, qword [var_68h]": 1,
                "mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], rax;mov dword [var_18h], edx;mov rax, qword [arg_b0h]": 1,
                "je ;cmp rax, ;jne ;movzx eax, byte [var_37h];test al, al": 1,
                "movzx eax, byte [var_37h];test al, al;je ;mov rax, qword [var_40h];mov rax, qword [rax + ]": 1,
                "mov rbp, qword [var_80h];add rsp, ;ret;mov qword [var_60h], rax;mov rax, qword [var_38h]": 1,
                "call rcx;mov rax, qword [var_8h];mov rcx, qword [var_10h];mov qword [var_70h], rax;mov qword [var_78h], rcx": 1,
                "mov eax, dword [rax + ];mov rcx, qword [arg_90h];mov qword [rsp], rcx;mov dword [var_18h], eax;mov rax, qword [arg_b0h]": 1,
                "movups xmmword [arg_40h], xmm0;lea rax, [];mov qword [rsp], rax;call fcn.00460900;mov dword [rsp], 8": 1,
                "test rcx, rcx;je ;mov rax, qword [rcx];mov rcx, qword [rcx + 8];mov qword [arg_40h], rax": 1,
                "mov qword [arg_40h], rax;mov qword [arg_48h], rcx;call fcn.0042f500;mov rbp, qword [var_20h];add rsp, ": 1,
                "mov rax, qword [rcx];mov rcx, qword [rcx + 8];jmp ;mov rcx, qword [rax + ];test rcx, rcx": 4,
                "mov rbp, qword [var_20h];add rsp, ;ret;call fcn.00456090;jmp fcn.00565fd0": 1,
                "call fcn.00458baa;mov rbp, qword [rbp];lea rdx, [var_140h];mov qword [var_120h], rdx;call fcn.00445e30": 2,
                "movups xmmword [var_100h], xmm0;lea rdi, [var_1f0h];lea rdi, [rdi - ];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 2,
                "call fcn.00445e30;mov eax, dword [rsp];mov dword [var_ech], eax;mov rax, qword [arg_2d0h];mov qword [rsp], rax": 2,
                "mov qword [var_20h], rax;mov rcx, qword [var_80h];mov qword [var_28h], rcx;lea rdx, [var_e0h];mov qword [var_30h], rdx": 2,
                "mov rcx, qword [var_40h];mov qword [var_58h], rcx;lea rdx, [];mov qword [rsp], rdx;call fcn.0040d880": 2,
                "mov qword [rax + 8], rcx;cmp dword [], 0;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 2,
                "mov rax, qword [var_8h];mov rcx, qword [var_58h];mov qword [rax + 8], rcx;cmp dword [], 0;jne ": 1,
                "mov rcx, qword [var_d8h];mov rdx, qword [rcx];mov rbx, qword [var_b0h];mov rbx, qword [rbx];cmp qword [rcx + 8], 0": 1,
                "mov qword [rdx], 0;xorps xmm0, xmm0;movups xmmword [rdx + 8], xmm0;movups xmmword [rdx + ], xmm0;movups xmmword [rdx + ], xmm0": 2,
                "mov rax, qword [var_c8h];call fcn.004580f0;mov rax, qword [var_d0h];mov rcx, qword [var_d8h];mov rdx, rdi": 1,
                "call fcn.004580f0;mov rax, qword [var_d0h];mov rcx, qword [var_d8h];mov rdx, rdi;xorps xmm0, xmm0": 1,
                "mov eax, dword [arg_2d8h];mov dword [var_8h], eax;call fcn.00565fd0;mov rax, qword [arg_2e0h];mov rcx, qword [rax + ]": 1,
                "mov qword [var_18h], rax;mov rax, qword [var_80h];mov qword [var_20h], rax;lea rax, [];mov qword [var_28h], rax": 2,
                "mov qword [var_10h], 1;call fcn.00440c00;mov rax, qword [var_18h];mov rdi, qword [var_60h];mov qword [rdi + 8], 1": 1,
                "lea rdx, [var_80h];mov qword [var_10h], rdx;call fcn.00565000;mov rax, qword [var_18h];mov qword [var_58h], rax": 1,
                "mov qword [rsp], rdx;call rbx;cmp qword [var_8h], ;jne ;mov rax, qword [arg_3f8h]": 2,
                "mov rax, qword [];mov qword [var_8h], rax;mov eax, dword [arg_3f0h];mov dword [var_10h], eax;call fcn.00411580": 2,
                "mov qword [var_8h], rax;mov eax, dword [arg_3f0h];mov dword [var_10h], eax;call fcn.00411580;mov rax, qword [var_18h]": 2,
                "mov rax, qword [rax];cmp byte [var_20h], 0;je ;lea rdx, [];cmp rax, rdx": 2,
                "test rcx, rcx;je ;lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 2,
                "mov qword [var_10h], rcx;call fcn.00440c00;mov rdi, qword [arg_400h];mov rax, qword [var_18h];mov rcx, qword [var_a0h]": 2,
                "lea rax, [rbx + 1];mov rcx, qword [var_a8h];mov rdx, qword [rcx + ];cmp qword [rcx + ], rax;jle ": 2,
                "jle ;mov qword [var_98h], rax;mov rdx, qword [rdx + rax*8];mov qword [var_b0h], rdx;cmp qword [rdx + 8], 0": 2,
                "mov qword [var_98h], rax;mov rdx, qword [rdx + rax*8];mov qword [var_b0h], rdx;cmp qword [rdx + 8], 0;je ": 2,
                "cmp dword [], 0;jne ;mov rax, qword [var_b8h];mov qword [rdi], rax;mov rax, qword [var_90h]": 1,
                "lea rbp, [rsp - ];call fcn.00458f1c;mov rbp, qword [rbp];cmp al, 0;jne ": 4,
                "lea rdi, [rdi + ];lea r9, [rdx + rsi];cmp dword [], 0;jne ;mov qword [rdx + rsi], 0": 1,
                "mov eax, dword [rsp];mov dword [var_134h], eax;mov rax, qword [var_b0h];mov ecx, dword [rax + ];mov rdx, qword [arg_3e8h]": 1,
                "je ;mov qword [var_48h], rax;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax": 1,
                "cmp dword [], 0;jne ;mov rax, qword [var_58h];mov qword [rdi], rax;mov rax, qword [arg_80h]": 1,
                "mov rdx, qword [var_18h];cmp dword [], 0;jne ;mov rbx, qword [var_58h];mov qword [rbx], rdx": 1,
                "call fcn.00411af0;mov rax, qword [var_50h];mov rcx, qword [var_38h];mov rbx, qword [var_58h];jmp ": 1,
                "mov qword [var_8h], rdx;lea rdx, [var_60h];mov qword [var_10h], rdx;call fcn.0040f150;mov rdi, qword [var_18h]": 1,
                "jne ;mov rax, qword [arg_58h];mov qword [rsp], rax;mov ecx, dword [arg_60h];mov dword [var_8h], ecx": 2,
                "mov qword [rcx], rax;xor eax, eax;xor edx, edx;test rdx, rdx;jne ": 2,
                "jmp ;mov qword [var_38h], rax;mov qword [var_30h], rdx;mov rax, qword [arg_58h];mov rax, qword [rax + ]": 2,
                "mov qword [var_8h], rdx;mov qword [var_10h], rax;call fcn.0048d320;mov rax, qword [var_18h];mov rcx, qword [var_20h]": 2,
                "mov rcx, qword [var_20h];mov rdx, qword [var_28h];mov rbx, qword [arg_98h];mov qword [rbx + ], rcx;cmp dword [], 0": 2,
                "je ;mov rax, qword [arg_98h];mov qword [rsp], rax;mov rax, qword [var_60h];mov qword [var_8h], rax": 2,
                "cmp qword [rax + ], 0;jg ;mov rax, qword [arg_98h];mov qword [rsp], rax;mov qword [var_8h], rcx": 2,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 2,
                "mov qword [var_20h], 1;call fcn.00571910;mov rcx, qword [var_60h];jmp ;mov qword [var_40h], rax": 1,
                "mov rdx, qword [var_18h];mov rbx, qword [arg_40h];mov qword [rbx + ], rdx;cmp dword [], 0;jne ": 2,
                "mov rax, qword [rbx + ];lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax;mov eax, dword [arg_48h]": 2,
                "mov eax, dword [arg_48h];mov dword [var_10h], eax;call fcn.004113b0;mov rax, qword [var_18h];mov rax, qword [rax]": 2,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.00561440;jmp ;mov rbp, qword [var_30h]": 2,
                "mov rsi, rax;mov rax, rcx;call fcn.004580f0;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [var_18h], rax;mov rax, qword [var_10h];test rax, rax;je ;lea rcx, []": 2,
                "jne ;mov qword [], rax;mov qword [], rcx;lea rax, [];mov qword [var_20h], rax": 2,
                "jne ;lea rax, [];lea rcx, [];jmp ;xor eax, eax": 2,
                "cmp eax, ;jge ;mov ecx, 1;test cl, cl;je ": 4,
                "je ;lea rcx, [];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 2,
                "call fcn.0055f2a0;mov rax, qword [var_28h];mov rcx, qword [var_38h];mov rdx, qword [var_40h];test rcx, rcx": 9,
                "mov qword [rax + ], rcx;mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rbx, qword [rax + ];mov rsi, qword [rax + ]": 3,
                "mov rbx, qword [rax + ];mov rsi, qword [rax + ];cmp rsi, rbx;ja ;mov rdi, qword [rax + ]": 3,
                "mov qword [rsp], r8;mov qword [var_8h], rdi;sub rcx, rsi;mov rdi, rcx;neg rcx": 3,
                "mov rcx, qword [var_38h];mov rdx, qword [arg_60h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "je ;mov rbp, qword [var_50h];add rsp, ;ret;mov qword [var_48h], rdi": 2,
                "mov qword [var_48h], rdi;mov qword [rsp], rcx;mov qword [var_8h], rax;mov rax, qword [];mov qword [var_10h], rax": 2,
                "cmp byte [var_18h], 0;je ;mov rax, qword [];mov rcx, qword [];mov rdx, qword [arg_60h]": 2,
                "je ;mov rax, qword [];mov rcx, qword [];mov rdx, qword [arg_60h];mov qword [rdx + ], rcx": 2,
                "jne ;mov qword [rdx + ], rax;jmp ;mov rdi, qword [var_48h];call fcn.004580f0": 2,
                "call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.00568500;int3": 2,
                "mov rbp, qword [rsp + ];add rsp, ;ret;lea rdi, [rdx + ];call fcn.004580f0": 3,
                "lea rax, [];call fcn.004580f0;mov rax, rdi;jmp ;mov rax, qword [rsp + ]": 3,
                "mov rbp, qword [rsp + ];add rsp, ;ret;xor esi, esi;xor eax, eax": 2,
                "jmp ;lea rdi, [];mov rax, qword [rsp + ];call fcn.004580f0;jmp ": 3,
                "mov rax, qword [arg_40h];mov qword [var_10h], rax;call fcn.0042ec20;test eax, eax;mov rcx, qword gs:[]": 1,
                "mov byte [var_8h], 0;call fcn.00568880;mov eax, dword [var_10h];mov rcx, qword [arg_40h];cmp qword [rcx + ], 0": 1,
                "mov qword [arg_68h], rdi;call fcn.0042f500;mov rbp, qword [var_30h];add rsp, ;ret": 1,
                "mov rcx, qword [var_40h];mov rdx, qword [arg_58h];mov rbx, qword [var_38h];jmp ;mov qword [rsp], rdx": 1,
                "and ebx, eax;and edi, ebx;test dil, dil;je ;cmp byte [rdx + ], 0": 2,
                "add rsp, ;ret;mov byte [arg_80h], 0;mov rbp, qword [var_50h];add rsp, ": 2,
                "movq rcx, xmm0;bswap rcx;mov qword [var_8h], rcx;call fcn.0056b410;mov rcx, qword [var_48h]": 2,
                "mov rcx, qword [rax + 8];mov rax, qword [rax];jne ;mov qword [var_30h], rcx;mov qword [var_40h], rax": 4,
                "jne ;mov qword [var_30h], rcx;mov qword [var_40h], rax;mov rdx, qword [arg_58h];xor ebx, ebx": 4,
                "movss xmm0, dword [rax + rbx*4];xorps xmm1, xmm1;ucomiss xmm0, xmm1;jne ;jp ": 2,
                "mov ecx, 0;mov eax, 0;jmp ;call fcn.00456090;jmp fcn.00569670": 2,
                "jmp fcn.00569670;int3;int3;int3;int3": 2,
                "jmp fcn.00569880;int3;int3;int3;int3": 2,
                "mov eax, 0;mov ecx, 0;jmp ;call fcn.00456090;jmp fcn.00569a90": 2,
                "jmp ;call fcn.00456090;jmp fcn.00569a90;int3;int3": 2,
                "mov byte [rsp + ], 0;mov rbp, qword [rsp + ];add rsp, ;ret;mov rcx, qword gs:[]": 1,
                "je ;mov qword [rsp], rdx;movsx rax, si;mov qword [var_8h], rax;call fcn.0056b640": 2,
                "call fcn.00569e70;movzx eax, byte [rsp + ];mov byte [rsp + ], al;mov rbp, qword [rsp + ];add rsp, ": 2,
                "mov qword [rsp + ], rcx;mov qword [rsp + ], rdx;call fcn.0056a440;movzx eax, byte [rsp + ];mov byte [rsp + ], al": 2,
                "mov qword [rsp + ], rdx;call fcn.0056a440;movzx eax, byte [rsp + ];mov byte [rsp + ], al;mov rbp, qword [rsp + ]": 2,
                "jne ;mov rax, qword [rcx];mov rcx, qword [rcx + 8];jne ;test rcx, rcx": 2,
                "xor ebx, ebx;jmp ;add rax, ;mov qword [var_80h], rax;mov qword [var_60h], rbx": 2,
                "mov qword [var_48h], rsi;mov qword [rsp], rdx;mov qword [var_8h], rsi;call fcn.0056b410;mov rax, qword [arg_98h]": 2,
                "mov rdx, qword [rcx + 8];mov rbx, qword [var_48h];lea rsi, [rdx + rbx];mov qword [var_58h], rsi;mov rdi, qword [rcx + ]": 2,
                "mov qword [rsp], rax;mov rax, qword [var_68h];mov qword [var_8h], rax;mov qword [var_10h], rbx;call fcn.00459210": 2,
                "jne ;mov rax, qword [var_78h];mov qword [rdi], rax;mov rax, qword [var_80h];mov rcx, qword [var_40h]": 2,
                "mov rbx, qword [var_60h];jmp ;mov rax, qword [var_78h];call fcn.004580f0;jmp ": 2,
                "mov rdi, qword [var_38h];mov r8, qword [var_28h];mov rdx, qword [var_50h];mov rbx, qword [var_48h];jmp ": 2,
                "mov qword [rsp + ], rdx;call fcn.0056af10;movzx eax, byte [rsp + ];mov byte [rsp + ], al;mov rbp, qword [rsp + ]": 2,
                "lea rbx, [rdx + 1];mov qword [rax + 8], rbx;movzx eax, byte [rsp + ];mov byte [rcx + rdx], al;mov rbp, qword [rsp + ]": 2,
                "mov rcx, qword [rcx + 8];mov rdx, qword [rcx + ];mov rbx, qword [rcx];mov rsi, qword [rcx + 8];lea rdi, [rsi + 1]": 1,
                "lea rdi, [rsi + 1];cmp rdi, rdx;ja ;lea rdx, [rsi + 1];mov qword [rcx + 8], rdx": 1,
                "ja ;lea rdx, [rsi + 1];mov qword [rcx + 8], rdx;mov byte [rbx + rsi], al;mov rbp, qword [var_78h]": 1,
                "mov byte [rbx + rsi], al;mov rbp, qword [var_78h];add rsp, ;ret;mov qword [var_60h], rcx": 1,
                "mov qword [var_58h], rdx;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], r8;mov qword [var_10h], rdi": 1,
                "shl rax, 1;or rax, 1;mov rcx, qword [arg_20h];mov qword [rsp], rcx;mov qword [var_8h], rax": 2,
                "mov rax, qword [arg_48h];mov rcx, qword [arg_50h];mov rdx, qword [arg_58h];mov rbx, qword [arg_60h];jmp ": 3,
                "jb ;bt esi, 7;jae ;mov rdx, qword [rcx];test rdx, rdx": 3,
                "call fcn.00456090;jmp fcn.0056b6b0;int3;int3;int3": 2,
                "jmp fcn.0056b6b0;int3;int3;int3;int3": 2,
                "test rcx, rcx;jne ;test al, al;je ;mov rax, qword [rsp + ]": 2,
                "sub rax, qword [rdx + ];mov qword [rsp], rdx;mov qword [rsp + 8], rax;call fcn.0056b410;mov rax, qword [rsp + ]": 4,
                "jmp ;mov rcx, qword [rsp + ];cmp byte [rcx + ], 0;jne ;jmp ": 4,
                "add rsp, ;ret;mov qword [rsp + ], rax;mov rax, qword [rcx + 8];mov rdx, qword [rsp + ]": 2,
                "jmp ;cmp rax, 4;jne ;mov rcx, qword [rsp + ];movsx rax, word [rcx]": 1,
                "lea rbp, [var_18h];mov rax, qword [arg_38h];test rax, ;je ;mov rcx, rax": 1,
                "mov qword [var_8h], rdi;call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.0056c330": 1,
                "cmp dword [], 0;jne ;mov qword [rcx + ], rax;mov byte [rdx + ], 0;mov qword [rdx + ], 0": 11,
                "mov qword [rsp], rsi;mov qword [var_8h], rbx;mov qword [var_10h], rcx;call fcn.0056c330;cmp byte [var_18h], 0": 2,
                "jne ;mov rax, qword [var_60h];mov qword [rax + ], ;xor ecx, ecx;jmp ": 2,
                "cmp qword [rdx + 8], rcx;jle ;mov qword [var_48h], rcx;mov qword [var_80h], rbx;mov rax, qword [arg_c0h]": 2,
                "shl rcx, 4;mov rdx, qword [var_80h];lea rbx, [rdx + rcx];mov rsi, qword [arg_b0h];cmp qword [rsi + ], rax": 2,
                "mov qword [var_8h], rax;mov qword [var_10h], rdx;mov qword [var_18h], rdi;call fcn.0056b6b0;mov rax, qword [var_30h]": 2,
                "ret;call fcn.00456090;jmp fcn.0056c6b0;int3;int3": 1,
                "jge ;mov qword [var_38h], rax;mov rcx, qword [arg_80h];mov qword [rsp], rcx;mov rdx, qword [arg_88h]": 2,
                "jbe ;sub rsp, ;mov qword [var_50h], rbp;lea rbp, [var_50h];mov rax, qword [arg_88h]": 2,
                "xor edx, edx;jmp ;inc rdx;mov rcx, rdi;cmp rdx, rax": 2,
                "call fcn.00489000;mov rdi, qword [var_28h];mov rbx, qword [var_18h];mov rsi, qword [var_20h];mov rax, qword [arg_88h]": 2,
                "mov qword [var_90h], rbp;lea rbp, [var_90h];mov rcx, qword [arg_a0h];mov rdx, qword [rcx + ];lea rdi, [rcx + ]": 2,
                "jne ;mov rbx, qword [arg_a8h];mov qword [rdx + 8], rbx;cmp qword [rbx + 8], 0;jne ": 2,
                "jne ;mov qword [rbx + 8], 0;mov qword [rbx + ], ;lea rax, [rbx + ];cmp dword [], 0": 2,
                "test rax, rax;jle ;mov rcx, qword [var_60h];xor edx, edx;jmp ": 2,
                "mov qword [var_8h], rcx;mov rdx, qword [arg_c0h];mov qword [var_10h], rdx;mov rbx, qword [var_78h];mov qword [var_18h], rbx": 2,
                "mov rcx, qword [var_48h];cmp rax, rcx;jl ;mov rcx, qword [arg_a0h];mov rax, qword [rcx + ]": 2,
                "lea rdi, [rcx + ];call fcn.004580f0;mov rdi, qword [var_88h];mov rax, rcx;call fcn.004580f0": 2,
                "jne ;mov qword [rsi + ], rax;mov byte [r8 + ], 0;mov qword [r8 + ], 0;cmp dword [], 0": 2,
                "cmp dword [], 0;jne ;mov r9, qword [arg_108h];mov qword [r8 + 8], r9;cmp qword [r9 + 8], 0": 2,
                "jne ;mov qword [r9 + 8], 0;mov qword [r9 + ], ;lea rax, [r9 + ];cmp dword [], 0": 2,
                "mov qword [r9 + 8], 0;mov qword [r9 + ], ;lea rax, [r9 + ];cmp dword [], 0;jne ": 2,
                "mov r11, qword [rax];test r11, r11;sete r11b;test r11b, r11b;je ": 2,
                "sete r11b;test r11b, r11b;je ;mov qword [rsp], r8;mov qword [var_8h], 0": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], r10;call fcn.00489000;mov rax, qword [var_28h]": 1,
                "mov rax, qword [var_10h];mov qword [var_78h], rax;mov rcx, qword [rax + ];mov rdx, qword [rax + ];test rdx, rdx": 1,
                "mov rcx, qword [var_20h];cmp byte [var_28h], 0;je ;lea rdx, [];cmp rdx, rax": 1,
                "mov qword [var_80h], rax;mov rcx, qword [rcx + 8];mov qword [var_40h], rcx;mov rdx, qword [var_98h];mov qword [rsp], rdx": 1,
                "mov qword [var_40h], rcx;mov rdx, qword [var_98h];mov qword [rsp], rdx;mov qword [var_8h], rcx;call fcn.0056b410": 1,
                "mov rbx, qword [var_40h];lea rsi, [rdx + rbx];mov qword [var_60h], rsi;mov rdi, qword [rcx];mov r8, qword [rcx + ]": 1,
                "cmp rsi, r8;ja ;mov qword [var_58h], r8;mov qword [var_b0h], rdi;lea rax, [rdi + rdx]": 1,
                "mov qword [rdi], rax;mov rax, qword [arg_100h];mov rcx, qword [rax + ];mov rdx, qword [rax + 8];lea rbx, [rcx - 1]": 1,
                "mov rdx, qword [var_78h];mov qword [var_20h], rdx;call fcn.00570f70;mov rax, qword [arg_100h];mov rcx, qword [rax + ]": 1,
                "lea rax, [];mov qword [rsp], rax;call fcn.00460f70;mov rax, qword [var_8h];mov rcx, qword [var_10h]": 1,
                "mov qword [rdi], rax;mov rax, qword [arg_100h];mov qword [rsp], rax;mov qword [var_8h], rdi;mov rcx, qword gs:[]": 1,
                "mov qword [var_40h], rax;mov rdx, qword [arg_60h];mov qword [rsp], rdx;mov rbx, qword [arg_68h];mov qword [var_8h], rbx": 1,
                "mov byte [arg_78h], 1;mov rbp, qword [var_50h];add rsp, ;ret;lea rdx, [rax - ]": 1,
                "jmp ;mov rax, qword [arg_68h];jmp ;cmp rax, ;jne ": 1,
                "jne ;mov rax, qword [arg_60h];mov qword [rsp], rax;mov rax, qword [arg_68h];mov qword [var_8h], rax": 1,
                "ja ;cmp rax, 1;je ;lea rdx, [rax - 2];cmp rdx, 4": 1,
                "jmp ;cmp rax, 4;jne ;mov rcx, qword [arg_68h];movsx rax, word [rcx]": 1,
                "movsxd rax, dword [rcx];jmp ;mov rcx, qword [arg_68h];mov rax, qword [rcx];jmp ": 1,
                "mov rbp, qword [var_50h];add rsp, ;ret;lea rdx, [rax - 7];cmp rdx, 5": 1,
                "mov rcx, qword [arg_68h];movzx eax, byte [rcx];jmp ;mov rcx, qword [arg_68h];mov rcx, qword gs:[]": 1,
                "cmp qword [r8 + 8], 0;jne ;mov qword [r8 + 8], 0;mov qword [r8 + ], ;lea rax, [r8 + ]": 1,
                "mov qword [r8 + ], ;lea rax, [r8 + ];cmp dword [], 0;jne ;mov qword [r8], rax": 1,
                "jmp ;mov rax, qword [var_70h];call fcn.004580f0;jmp ;mov qword [var_48h], rdx": 1,
                "mov qword [rsp], rax;mov qword [var_8h], rdi;mov qword [var_10h], rdx;mov qword [var_18h], r8;mov qword [var_20h], rsi": 1,
                "call fcn.004580f0;mov rdi, r8;mov r8, rax;jmp ;call fcn.004580f0": 1,
                "mov rdi, r8;mov r8, rax;jmp ;call fcn.004580f0;jmp ": 1,
                "mov rcx, qword [var_20h];mov rax, qword [rax + ];mov qword [rsp], rcx;call rax;mov rcx, qword [var_28h]": 1,
                "mov rax, qword [var_20h];mov rdx, qword [var_10h];mov rbx, qword [var_8h];mov rcx, qword [var_28h];jmp ": 1,
                "mov qword [rsp], rcx;call rax;mov rdx, qword [var_10h];mov rbx, qword [var_8h];mov rcx, qword [var_28h]": 1,
                "cmp qword [rdi], 0;je ;cmp qword [rdi], 0;je ;mov qword [arg_108h], rdi": 1,
                "mov rcx, qword [arg_f0h];mov qword [var_d0h], rcx;lea rdx, [];mov qword [rsp], rdx;mov rdx, qword [arg_f8h]": 1,
                "cmp rax, ;jne ;cmp dword [], 0;jne ;lea rax, []": 1,
                "jne ;cmp dword [], 0;jne ;lea rax, [];mov rcx, qword [var_b0h]": 1,
                "mov qword [var_c8h], rax;mov qword [var_d0h], rcx;mov rax, qword [rax + ];mov qword [rsp], rcx;call rax": 1,
                "mov rcx, qword [var_a0h];mov qword [rax + 8], rcx;mov rcx, qword [var_60h];mov qword [rax + ], rcx;cmp dword [], 0": 1,
                "mov qword [rcx], rax;jmp ;lea rdi, [rax + ];mov rcx, rax;mov rax, qword [var_88h]": 1,
                "call fcn.004580f0;mov rdi, qword [var_b0h];mov rax, rcx;call fcn.004580f0;mov rcx, rdi": 2,
                "lea rdi, [rax + 8];mov rcx, rax;mov rax, qword [var_80h];call fcn.004580f0;mov rdi, qword [var_b0h]": 1,
                "call fcn.00456090;jmp fcn.0056f320;int3;int3;int3": 1,
                "cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_2a0h], rbp;lea rbp, [var_2a0h]": 2,
                "lea rbx, [];mov qword [rsp], rbx;call fcn.0040d880;mov rax, qword [var_8h];mov qword [var_b0h], rax": 7,
                "lea rbp, [rsp - ];call fcn.00458b9f;mov rbp, qword [rbp];lea rcx, [var_1d0h];mov qword [var_148h], rcx": 2,
                "call fcn.00445e30;mov eax, dword [rsp];mov dword [var_144h], eax;mov rax, qword [arg_2b0h];mov rcx, qword [rax + ]": 2,
                "mov qword [rsp], rbx;mov qword [var_8h], rax;call rdx;mov rax, qword [var_10h];mov qword [var_168h], rax": 2,
                "mov rcx, qword [var_28h];xorps xmm0, xmm0;movups xmmword [var_108h], xmm0;movups xmmword [var_118h], xmm0;movups xmmword [var_128h], xmm0": 2,
                "movups xmmword [var_128h], xmm0;mov rax, qword [rax];mov qword [var_108h], rax;mov rax, qword [var_78h];mov qword [var_110h], rax": 2,
                "mov qword [var_118h], rdx;mov qword [var_120h], rsi;mov qword [var_128h], rbx;mov qword [var_130h], rcx;mov rcx, qword [var_b0h]": 2,
                "lea rdx, [rdx + ];movups xmm1, xmmword [var_118h];movups xmmword [rdx], xmm1;movups xmm1, xmmword [var_128h];movups xmmword [rdx + ], xmm1": 2,
                "mov qword [var_d8h], rax;mov rax, qword [var_b0h];mov rcx, qword [rax + 8];mov rdx, qword [rax];lea rbx, [rcx + 1]": 1,
                "movups xmm0, xmmword [var_d8h];movups xmmword [rbx], xmm0;lea rcx, [rdx + rcx];lea rcx, [rcx + ];movups xmm0, xmmword [var_e8h]": 1,
                "xorps xmm0, xmm0;movups xmmword [var_20h], xmm0;mov rcx, qword [rax + ];test rcx, rcx;je ": 1,
                "mov rcx, qword [rax + ];test rcx, rcx;je ;mov rdx, rcx;cmp rcx, ": 3,
                "mov qword [var_8h], rax;mov rax, qword [arg_58h];mov qword [var_10h], rax;call fcn.0056fce0;mov rcx, qword [var_18h]": 1,
                "jmp ;mov ecx, 0;jmp ;mov rcx, qword [rax + ];mov qword [var_20h], rdx": 1,
                "test cl, cl;jne ;mov rax, qword [arg_d8h];test byte [rax], al;lea rcx, [rax + 4]": 2,
                "mov qword [var_10h], rax;call fcn.0042ec20;test eax, eax;jne ;xorps xmm0, xmm0": 4,
                "lea rdx, [];cmp qword [var_30h], rdx;jne ;jne ;mov qword [arg_f0h], rcx": 2,
                "cmp qword [var_30h], rdx;jne ;jne ;mov qword [arg_f0h], rcx;call fcn.0042f500": 2,
                "call fcn.0042f500;mov rbp, qword [var_c8h];add rsp, ;ret;mov rcx, qword [arg_e8h]": 2,
                "mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.00412a50;mov rax, qword [var_18h]": 2,
                "call fcn.00412a50;mov rax, qword [var_18h];mov byte [rax], 1;mov rax, qword [arg_e0h];mov qword [rsp], rax": 2,
                "mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax;call fcn.004015d0;mov rcx, qword [var_20h]": 2,
                "mov rbp, qword [var_c8h];add rsp, ;ret;mov qword [arg_f0h], 0;call fcn.0042f500": 2,
                "cmp rdi, ;jne ;mov qword [var_40h], r8;mov qword [rsp], rbx;mov qword [var_8h], rsi": 3,
                "cmp qword [rcx + ], 0;je ;xor ecx, ecx;test cl, cl;je ": 2,
                "xor ecx, ecx;test cl, cl;je ;mov rcx, qword [arg_70h];mov qword [rsp], rcx": 2,
                "ret;mov rcx, qword [arg_70h];mov qword [rsp], rcx;mov rcx, qword [arg_78h];mov qword [var_8h], rcx": 2,
                "call fcn.0056c450;jmp ;mov qword [var_30h], rdi;mov qword [var_50h], rsi;mov qword [var_48h], rbx": 2,
                "mov rax, qword [var_58h];mov rbx, qword [var_48h];mov rsi, qword [var_50h];mov rdi, qword [var_30h];jmp ": 2,
                "lea rbp, [var_98h];mov rcx, qword [arg_c0h];mov rdx, qword [rcx + 8];lea rbx, [rdx - 9];mov rsi, qword [rcx + ]": 2,
                "mov r8, qword [rcx];movabs r9, ;cmp rbx, r9;jge ;mov qword [var_50h], rsi": 2,
                "ja ;lea rsi, [rsi + rdx];lea rsi, [rsi - 9];cmp rsi, rdx;mov rdi, rsi": 2,
                "sar rdx, ;and rbx, rdx;mov rdx, qword [var_78h];add rdx, rbx;cmp rdx, rcx": 2,
                "jne ;mov rax, qword [arg_b0h];mov rax, qword [rax + ];mov rcx, qword [arg_b8h];mov qword [rsp], rcx": 2,
                "lea r8, [rbx + rsi];mov qword [var_68h], r8;mov r9, qword [rdi + ];mov r10, qword [rdi];cmp r8, r9": 2,
                "jmp ;mov qword [rdi + 8], 0;jmp ;lea rax, [];mov qword [rsp], rax": 1,
                "mov qword [rsp], rax;call fcn.005757f0;mov rax, qword [var_8h];mov rcx, qword [var_10h];mov rdx, qword [var_18h]": 3,
                "je ;mov byte [arg_160h], 0;mov rbp, qword [var_118h];add rsp, ;ret": 2,
                "mov rbp, qword [var_118h];add rsp, ;ret;mov qword [rbx + ], rcx;cmp dword [], 0": 2,
                "mov rbx, qword [rax + 8];mov rsi, qword [arg_128h];mov qword [rsp], rsi;mov qword [var_8h], rbx;mov qword [var_10h], rdx": 1,
                "mov qword [rsp], rdx;mov rbx, qword [arg_130h];mov qword [var_8h], rbx;mov rsi, qword [arg_138h];mov qword [var_10h], rsi": 1,
                "mov rbx, qword [var_80h];mov qword [var_8h], rbx;call rcx;mov rax, qword [var_10h];mov qword [var_b0h], rax": 1,
                "add rsp, ;ret;mov rax, qword [arg_150h];mov rax, qword [rax + ];mov rcx, qword [arg_158h]": 1,
                "mov rdx, qword [arg_158h];mov qword [rsp], rdx;call rcx;mov rax, qword [var_10h];mov rcx, qword [var_8h]": 1,
                "mov qword [var_a0h], rcx;mov qword [var_a8h], rax;mov rax, qword [arg_128h];mov qword [rsp], rax;mov rcx, qword gs:[]": 1,
                "mov qword [rsp], rcx;call rax;cmp qword [var_8h], 8;jne ;mov byte [arg_98h], 0": 1,
                "ret;call fcn.00456090;jmp fcn.00570c70;int3;int3": 1,
                "jmp fcn.00570c70;int3;int3;int3;int3": 1,
                "bts rdx, 7;test bl, ;cmove rsi, rdx;mov rdx, qword [rsp + ];mov qword [rsp], rdx": 1,
                "test bl, ;cmove rsi, rdx;mov rdx, qword [rsp + ];mov qword [rsp], rdx;mov qword [rsp + 8], rcx": 1,
                "mov rdx, qword [rsp + ];mov qword [rsp], rdx;mov qword [rsp + 8], rcx;mov qword [rsp + ], rax;mov qword [rsp + ], rsi": 1,
                "call fcn.00571140;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;mov qword [rsp + ], rax": 1,
                "je ;mov rcx, qword [rax + 8];mov rdx, qword [rax];mov qword [var_40h], rdx;mov qword [var_48h], rcx": 2,
                "mov rbx, qword [rax + ];lea rsi, [];mov qword [rsp], rsi;mov qword [var_8h], rbx;lea rbx, [var_50h]": 2,
                "call fcn.00456090;jmp fcn.00570f70;int3;int3;int3": 1,
                "mov rax, qword [arg_a0h];cmp qword [rax + ], 1;jb ;mov qword [rax + ], 1;mov rcx, qword [arg_a8h]": 2,
                "call fcn.00459210;mov rax, qword [var_58h];mov rcx, qword [arg_a0h];mov qword [rcx + ], rax;mov rax, qword [var_50h]": 2,
                "lea rdi, [rcx + ];mov qword [var_78h], rdi;test rdx, rdx;je ;mov rax, qword [rdx + ]": 2,
                "mov rbx, qword [rcx + 8];lea rsi, [rax - 1];cmp rsi, rax;jae ;mov qword [var_70h], rdx": 2,
                "mov rax, qword [rax + ];mov qword [arg_c0h], rcx;mov qword [arg_c8h], rax;call fcn.0042f500;mov rbp, qword [var_90h]": 1,
                "mov rdi, rbx;jmp ;lea rbx, [rdx + 8];mov rsi, rdi;mov rdi, rbx": 1,
                "mov rdx, qword [rcx];mov rbx, qword [rcx + 8];jne ;mov rcx, qword [rsp + ];mov qword [rcx], rdx": 1,
                "cmp qword [var_8h], ;jne ;mov rax, qword [var_50h];mov rax, qword [rax + ];mov rcx, qword [var_70h]": 2,
                "mov rcx, qword [var_70h];mov qword [rsp], rcx;call rax;mov rax, qword [var_8h];mov rcx, qword [var_10h]": 2,
                "mov rax, qword [rdx + ];mov rcx, rax;shr rax, ;add rax, rcx;sar rax, 1": 2,
                "call fcn.00444a60;mov rax, qword [var_30h];mov qword [var_40h], rax;mov rcx, qword [var_28h];mov qword [var_60h], rcx": 2,
                "jne ;mov rax, qword [var_60h];mov qword [rdi], rax;mov qword [arg_a0h], 0;lea rax, []": 2,
                "mov rax, qword [var_60h];call fcn.004580f0;jmp ;mov rdi, qword [var_78h];mov rbx, rax": 1,
                "mov rax, rcx;call fcn.004580f0;mov rax, rbx;jmp ;mov rax, qword [var_58h]": 1,
                "mov rax, rbx;jmp ;mov rax, qword [var_58h];mov rcx, qword [rax + 8];mov rdx, qword [rax]": 1,
                "lea rdx, [];mov qword [rsp], rdx;mov qword [var_8h], rax;mov rax, qword [arg_98h];mov qword [var_10h], rax": 1,
                "mov qword [rcx + ], 2;mov byte [rcx + ], al;mov rax, qword [arg_90h];test rax, rax;jmp ": 1,
                "mov byte [rcx + ], al;mov rax, qword [arg_90h];test rax, rax;jmp ;mov rax, qword [arg_90h]": 1,
                "mov rax, qword [arg_48h];test rax, rax;je ;mov rcx, qword [arg_50h];xor edx, edx": 1,
                "xor edx, edx;jmp ;mov byte [var_27h], al;mov rax, qword [var_28h];mov rax, qword [rax + ]": 1,
                "cmp byte [var_18h], 0;jne ;mov rax, qword [var_28h];mov rcx, qword [rax + ];mov rdx, qword [var_30h]": 1,
                "jne ;mov rax, qword [var_28h];mov rcx, qword [rax + ];mov rdx, qword [var_30h];mov qword [rsp], rdx": 1,
                "mov rax, qword [arg_48h];lea rcx, [];cmp rax, rcx;jne ;mov rax, qword [arg_50h]": 1,
                "lea rcx, [];cmp rax, rcx;jne ;mov rax, qword [arg_50h];mov qword [rsp], rax": 1,
                "mov qword [var_8h], rax;mov rax, qword [arg_60h];mov qword [var_10h], rax;call fcn.00481290;cmp byte [var_18h], 0": 1,
                "ret;mov byte [arg_68h], 1;movzx eax, byte [var_27h];mov byte [arg_69h], al;mov rbp, qword [var_38h]": 1,
                "mov rbp, qword [var_38h];add rsp, ;ret;mov byte [arg_68h], 0;mov byte [arg_69h], 0": 1,
                "add rsp, ;ret;mov byte [arg_68h], 0;mov byte [arg_69h], 0;mov rbp, qword [var_38h]": 1,
                "mov byte [arg_69h], 0;mov rbp, qword [var_38h];add rsp, ;ret;mov qword [rsp], rax": 1,
                "mov rcx, qword [rax + ];mov rdx, qword [arg_38h];mov qword [rsp], rdx;mov ebx, dword [];mov dword [var_8h], ebx": 3,
                "call rax;mov rax, qword [var_10h];mov rcx, qword [var_8h];mov qword [arg_38h], rcx;mov qword [arg_40h], rax": 8,
                "mov qword [var_8h], rax;call fcn.005763b0;mov rax, qword [var_10h];mov eax, dword [rax];mov dword [rsp], ": 12,
                "call fcn.005751f0;xorps xmm0, xmm0;movups xmmword [var_c0h], xmm0;mov dword [var_d0h], 0;lea rax, []": 3,
                "mov rax, qword [var_38h];test rax, rax;je ;lea rcx, [];mov qword [rsp], rcx": 1,
                "mov qword [], rax;mov rbp, qword [var_1f0h];add rsp, ;ret;lea rdi, []": 1,
                "mov qword [var_8h], rax;call fcn.00572320;mov rax, qword [arg_28h];mov rax, qword [rax + ];mov rcx, qword [arg_30h]": 4,
                "mov rbp, qword [var_10h];add rsp, ;ret;call fcn.00456090;jmp fcn.00572ca0": 1,
                "mov ecx, dword [rax + ];lea rdx, [];mov qword [rsp], rdx;mov rbx, qword [arg_88h];mov qword [var_8h], rbx": 2,
                "mov qword [var_8h], rbx;mov dword [var_10h], ecx;call fcn.004113b0;mov rax, qword [var_18h];cmp byte [rax], 0": 8,
                "mov rax, qword [arg_80h];mov ecx, dword [rax + ];test ecx, ecx;jne ;xor ecx, ecx": 2,
                "mov qword [var_60h], rcx;mov qword [var_68h], rax;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 6": 2,
                "call rax;mov rax, qword [var_18h];mov qword [var_40h], rax;mov rcx, qword [var_10h];mov qword [var_50h], rcx": 2,
                "mov rcx, qword [var_10h];mov qword [var_50h], rcx;mov rdx, qword [var_48h];mov qword [rsp], rdx;mov rdx, qword [var_38h]": 2,
                "mov qword [rsp], rdx;mov rdx, qword [var_38h];mov qword [var_8h], rdx;call fcn.0040ac60;mov rax, qword [var_10h]": 2,
                "mov qword [var_68h], rdx;mov qword [var_70h], rcx;mov qword [var_78h], rax;lea rax, [];mov qword [rsp], rax": 2,
                "mov dword [var_10h], ecx;call fcn.004113b0;mov rax, qword [var_18h];mov rdx, qword [rax + 8];mov rcx, qword [rax]": 2,
                "jmp fcn.00573380;int3;int3;int3;int3": 3,
                "mov ecx, dword [rax + ];lea rdx, [];mov qword [rsp], rdx;mov rbx, qword [arg_60h];mov qword [var_8h], rbx": 3,
                "mov rbx, qword [arg_60h];mov qword [var_8h], rbx;mov dword [var_10h], ecx;call fcn.004113b0;mov rax, qword [var_18h]": 3,
                "xorps xmm0, xmm0;movups xmmword [var_38h], xmm0;lea rcx, [];mov qword [var_38h], rcx;mov qword [var_40h], rax": 4,
                "lea rcx, [];mov qword [var_38h], rcx;mov qword [var_40h], rax;lea rax, [];mov rcx, qword gs:[]": 1,
                "mov rcx, qword [var_28h];mov qword [arg_68h], rcx;mov qword [arg_70h], rax;mov rbp, qword [var_48h];add rsp, ": 2,
                "call fcn.00456090;jmp fcn.00573430;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 2,
                "mov dword [var_10h], ecx;call fcn.00411580;cmp byte [var_20h], 0;jne ;mov rax, qword [arg_b0h]": 3,
                "mov rax, qword [arg_b0h];mov rcx, qword [rax + 8];mov rdx, qword [rax];mov qword [rsp], 0;mov qword [var_8h], rdx": 3,
                "lea rcx, [];mov qword [var_80h], rcx;mov rdx, qword [var_68h];mov qword [var_88h], rdx;mov qword [var_90h], rcx": 3,
                "mov qword [var_20h], 2;call fcn.004d6050;mov rax, qword [var_28h];mov rcx, qword [var_30h];mov qword [rsp], 0": 2,
                "mov qword [var_10h], rdx;mov qword [var_18h], rax;mov qword [var_20h], rcx;call fcn.00444a60;mov rcx, qword [var_28h]": 2,
                "mov qword [arg_c8h], rcx;mov rbp, qword [var_a0h];add rsp, ;ret;mov rax, qword [arg_b0h]": 1,
                "mov rcx, qword [rax + 8];mov rax, qword [rax];mov qword [arg_c0h], rax;mov qword [arg_c8h], rcx;mov rbp, qword [var_a0h]": 1,
                "call fcn.0040d880;mov rdi, qword [var_8h];mov rax, qword [arg_1a0h];mov qword [rdi + 8], rax;cmp dword [], 0": 2,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rdi;call fcn.00572320;lea rax, []": 2,
                "xorps xmm0, xmm0;movups xmmword [arg_1d0h], xmm0;call fcn.0042f500;mov rbp, qword [var_188h];add rsp, ": 7,
                "mov qword [var_10h], rax;mov rax, qword [arg_1b0h];mov qword [var_18h], rax;mov rcx, qword [arg_1b8h];mov qword [var_20h], rcx": 1,
                "mov rcx, qword [arg_1b8h];mov qword [var_20h], rcx;call fcn.0042ec20;test eax, eax;jne ": 1,
                "jne ;xor eax, eax;xor ecx, ecx;mov qword [arg_1c0h], rcx;mov qword [arg_1c8h], rax": 4,
                "mov qword [arg_1d8h], rdi;call fcn.0042f500;mov rbp, qword [var_188h];add rsp, ;ret": 1,
                "jne ;xor eax, eax;xor ecx, ecx;mov qword [arg_1c0h], rax;mov qword [arg_1c8h], rcx": 1,
                "mov rdx, rax;mov rax, rcx;mov rcx, rdx;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov rax, qword [var_8h];mov qword [var_20h], rcx;mov qword [var_18h], rax;mov rdx, qword [rax + ];mov qword [rsp], rcx": 2,
                "call rdx;cmp qword [var_8h], ;je ;mov rax, qword [var_18h];mov rcx, qword [rax + ]": 2,
                "ret;mov rax, qword [var_18h];mov rax, qword [rax + ];mov rcx, qword [var_20h];mov qword [rsp], rcx": 2,
                "mov qword [var_8h], rdx;mov qword [var_18h], rcx;mov qword [var_20h], rax;call fcn.00575010;mov rax, qword [var_28h]": 3,
                "mov qword [var_10h], rax;mov rax, qword [arg_a0h];mov qword [var_18h], rax;mov rcx, qword [arg_a8h];mov qword [var_20h], rcx": 4,
                "call fcn.0040f150;mov rax, qword [var_18h];mov rcx, qword [var_48h];mov qword [rax], rcx;cmp dword [], 0": 4,
                "movups xmmword [arg_c0h], xmm0;mov rbp, qword [var_78h];add rsp, ;ret;call fcn.00456090": 4,
                "mov ecx, dword [arg_10ch];cmp eax, ecx;jne ;mov rbp, qword [var_f8h];add rsp, ": 4,
                "xorps xmm0, xmm0;movups xmmword [var_78h], xmm0;movups xmmword [var_88h], xmm0;lea rcx, [];mov qword [var_78h], rcx": 4,
                "mov qword [var_68h], rax;mov rcx, qword [var_10h];mov qword [var_58h], rcx;mov edx, dword [arg_10ch];mov dword [rsp], edx": 3,
                "mov rdx, qword [];mov qword [var_8h], rdx;lea rdx, [var_80h];mov qword [var_10h], rdx;call fcn.0040f150": 2,
                "jne ;mov rdx, qword [var_60h];mov qword [rax + 8], rdx;mov qword [rsp], rcx;mov qword [var_8h], rdx": 2,
                "mov qword [rax + 8], rdx;mov qword [rsp], rcx;mov qword [var_8h], rdx;call fcn.00572320;mov eax, dword [arg_c0h]": 2,
                "call fcn.00572320;mov eax, dword [arg_c0h];mov dword [rsp], eax;mov eax, dword [];mov dword [var_4h], eax": 2,
                "lea rdx, [];mov qword [var_8h], rdx;mov qword [var_10h], ;mov rdx, qword [arg_a0h];mov qword [var_18h], rdx": 2,
                "call fcn.0042ec20;test eax, eax;jne ;xorps xmm0, xmm0;movups xmmword [var_90h], xmm0": 2,
                "jne ;mov rdx, qword [arg_128h];mov qword [var_a0h], rdx;mov rbx, qword [arg_130h];mov qword [var_a8h], rbx": 2,
                "test rax, rax;jne ;mov rax, qword [arg_128h];mov rcx, qword [rax + ];mov rdx, qword [arg_130h]": 2,
                "mov qword [rsp], rbx;call rax;mov eax, dword [var_8h];mov dword [var_4ch], eax;lea rcx, []": 2,
                "cmp qword [var_80h], rdx;jne ;lea rdi, [var_b0h];lea rdi, [rdi - ];mov qword [rsp - ], rbp": 2,
                "mov qword [var_8h], rcx;lea rax, [var_b0h];mov qword [var_10h], rax;call fcn.0040fbd0;jmp ": 2,
                "mov rdi, qword [var_18h];test byte [rdi], al;cmp dword [], 0;jne ;mov rax, qword [var_60h]": 3,
                "lea rax, [];mov qword [var_8h], rax;mov rax, qword [var_70h];mov qword [var_10h], rax;call fcn.004015d0": 1,
                "mov qword [rsp], rax;mov rbx, qword [arg_100h];mov qword [var_8h], rbx;call fcn.0040ac60;mov rax, qword [var_40h]": 2,
                "lea rcx, [];mov qword [rsp], rcx;lea rdx, [];mov qword [var_8h], rdx;mov qword [var_18h], rax": 2,
                "mov qword [rsp], rcx;lea rdx, [];mov qword [var_8h], rdx;mov qword [var_18h], rax;mov rax, qword [var_58h]": 2,
                "mov rdx, qword [var_60h];mov rbx, qword [rdx + 8];mov rsi, qword [rdx];test rsi, rsi;je ": 2,
                "mov rsi, qword [rsi + 8];cmp rax, rsi;je ;mov ebx, 1;test bl, bl": 2,
                "jne ;mov rax, qword [rdx + ];mov qword [var_80h], rax;mov rcx, qword [rdx + ];test rcx, rcx": 2,
                "mov qword [var_10h], rbx;call fcn.00402ce0;movzx ebx, byte [var_18h];xor ebx, 1;mov rax, qword [var_50h]": 2,
                "mov rcx, qword [var_70h];lea rdx, [];mov rdi, qword [arg_100h];jmp ;lea rdx, []": 2,
                "mov rcx, qword [var_60h];mov rdx, qword [rcx + 8];mov rcx, qword [rcx];test rcx, rcx;je ": 2,
                "mov rdx, qword [var_60h];xor ebx, ebx;jmp ;xor ecx, ecx;xor edx, edx": 2,
                "mov qword [var_8h], rcx;call fcn.0040ac60;mov rax, qword [var_10h];xorps xmm0, xmm0;movups xmmword [var_b8h], xmm0": 4,
                "mov rax, qword [var_10h];xorps xmm0, xmm0;movups xmmword [var_b8h], xmm0;movups xmmword [var_c8h], xmm0;movups xmmword [var_d8h], xmm0": 2,
                "mov qword [var_d0h], rax;mov qword [var_d8h], rcx;mov qword [var_e0h], rdx;lea rax, [];mov qword [rsp], rax": 1,
                "sub rsp, ;mov qword [var_a8h], rbp;lea rbp, [var_a8h];mov rax, qword [arg_b8h];mov qword [var_98h], rax": 1,
                "mov qword [var_a8h], rbp;lea rbp, [var_a8h];mov rax, qword [arg_b8h];mov qword [var_98h], rax;mov rcx, qword [arg_c0h]": 1,
                "mov rsi, qword [var_80h];mov qword [rsp], rsi;call rbx;cmp qword [var_10h], 0;je ": 1,
                "lea rdx, [];mov qword [var_28h], rdx;mov qword [var_30h], 1;mov qword [var_38h], rax;mov qword [var_40h], rcx": 1,
                "mov rcx, qword [rax + ];mov rdx, qword [var_80h];mov qword [rsp], rdx;call rcx;cmp qword [var_8h], ": 1,
                "mov qword [var_8h], rax;call fcn.00576a30;mov qword [rsp], 0;xorps xmm0, xmm0;movups xmmword [var_8h], xmm0": 20,
                "call fcn.0040e5a0;mov rax, qword [var_18h];mov qword [var_50h], rax;lea rcx, [];mov qword [rsp], rcx": 1,
                "mov qword [rsp], rax;mov rcx, qword [var_50h];mov qword [var_8h], rcx;mov qword [var_10h], 4;call fcn.004126c0": 1,
                "mov qword [rsp], rax;mov rcx, qword [var_50h];mov qword [var_8h], rcx;mov qword [var_10h], 5;call fcn.004126c0": 1,
                "mov rcx, qword [var_50h];mov qword [var_8h], rcx;mov qword [var_10h], 7;call fcn.004126c0;mov rdi, qword [var_18h]": 1,
                "mov qword [var_10h], 0;call fcn.0040e5a0;mov rax, qword [var_18h];mov qword [var_48h], rax;lea rcx, []": 1,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.0057a8b0;int3": 1,
                "mov qword [rsp], rax;mov rcx, qword [rsp + ];mov qword [rsp + 8], rcx;call fcn.0057a8b0;mov rax, qword [rsp + ]": 2,
                "xor eax, eax;xor ecx, ecx;xor edx, edx;test rax, rax;je ": 1,
                "mov qword [var_98h], rbx;mov qword [var_160h], rsi;mov qword [var_a0h], rdi;lea rax, [];mov qword [rsp], rax": 1,
                "mov rcx, qword [var_98h];mov rdx, qword [var_160h];mov rbx, qword [var_a0h];xor esi, esi;xor edi, edi": 1,
                "mov rax, qword [var_98h];mov rcx, qword [var_160h];mov rdx, qword [var_a0h];mov rbx, qword [var_90h];mov rdi, qword [var_158h]": 1,
                "mov rcx, qword [var_160h];mov rdx, qword [var_a0h];mov rbx, qword [var_90h];mov rdi, qword [var_158h];mov r8, qword [var_b8h]": 1,
                "mov qword [var_b8h], r10;mov qword [var_88h], rdi;mov qword [var_158h], rax;mov qword [var_90h], r8;mov rax, rsi": 1,
                "cmp dx, ;jbe ;cmp dx, ;jb ;cmp dx, ": 1,
                "cmp bx, ;ja ;mov dword [var_80h], 0;add edx, ;shl edx, ": 1,
                "mov qword [var_a8h], rax;mov eax, dword [rdx];lea rcx, [var_84h];mov qword [rsp], rcx;mov qword [var_8h], 4": 1,
                "mov rcx, qword [var_88h];lea rdx, [rcx + rax];mov qword [var_b8h], rdx;mov rbx, qword [var_90h];cmp rdx, rbx": 1,
                "mov qword [var_b8h], rdx;mov rbx, qword [var_90h];cmp rdx, rbx;ja ;mov rsi, qword [var_158h]": 1,
                "mov rcx, qword [var_88h];jmp ;mov rax, qword [arg_238h];xorps xmm0, xmm0;movups xmmword [var_168h], xmm0": 1,
                "lea rax, [var_168h];mov qword [var_20h], rax;mov qword [var_28h], 1;mov qword [var_30h], 1;call fcn.005ac850": 1,
                "mov qword [var_20h], rax;mov qword [var_28h], 1;mov qword [var_30h], 1;call fcn.005ac850;movups xmm0, xmmword [var_38h]": 15,
                "mov qword [var_28h], 1;mov qword [var_30h], 1;call fcn.005ac850;movups xmm0, xmmword [var_38h];movups xmmword [var_198h], xmm0": 2,
                "movups xmm0, xmmword [var_38h];movups xmmword [var_198h], xmm0;movups xmm0, xmmword [var_48h];movups xmmword [var_1a8h], xmm0;movups xmm0, xmmword [var_58h]": 2,
                "movups xmmword [var_1b8h], xmm0;movups xmm0, xmmword [var_68h];movups xmmword [var_1c8h], xmm0;lea rax, [];mov qword [rsp], rax": 2,
                "mov rcx, qword [var_10h];mov rdx, qword [var_150h];mov qword [rdx], rcx;cmp dword [], 0;jne ": 1,
                "mov qword [var_10h], 8;mov qword [var_18h], 0;lea rax, [var_178h];mov qword [var_20h], rax;mov qword [var_28h], 1": 1,
                "mov qword [var_148h], rax;lea rcx, [];mov qword [rsp], rcx;lea rcx, [var_198h];mov qword [var_8h], rcx": 1,
                "mov qword [arg_88h], rcx;mov byte [arg_90h], 0;mov rbp, qword [var_58h];add rsp, ;ret": 1,
                "mov rax, qword [arg_70h];mov qword [var_10h], rax;lea rax, [];mov qword [var_18h], rax;mov qword [var_20h], 5": 1,
                "lea rbp, [rsp + ];lea rdi, [rsp + ];lea rsi, [rsp + ];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 17,
                "mov rbp, qword [rbp];mov rax, qword [rsp + ];cmp qword [rsp + ], 0;jle ;mov rcx, qword [rax + 8]": 5,
                "mov rax, qword [rax + ];cmp rdx, 6;jne ;xor eax, eax;xor ecx, ecx": 15,
                "mov qword [rsp + 8], rax;mov byte [rsp + ], 1;call fcn.0057cce0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 1,
                "mov rax, qword [rsp + ];xorps xmm0, xmm0;movups xmmword [rsp + ], xmm0;lea rcx, [];mov qword [rsp + ], rcx": 4,
                "mov qword [rsp], rax;lea rax, [];mov qword [rsp + 8], rax;mov qword [rsp + ], 8;mov qword [rsp + ], 0": 2,
                "mov qword [rsp + 8], rax;mov qword [rsp + ], 8;mov qword [rsp + ], 0;lea rax, [rsp + ];mov qword [rsp + ], rax": 1,
                "lea rax, [rsp + ];mov qword [rsp + ], rax;mov qword [rsp + ], 1;mov qword [rsp + ], 1;call fcn.005ac850": 1,
                "mov qword [rsp], rcx;lea rcx, [rsp + ];mov qword [rsp + 8], rcx;call fcn.0040aa50;mov rax, qword [rsp + ]": 7,
                "mov qword [rsp + 8], rcx;call fcn.0040aa50;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rdx, qword [rsp + ]": 7,
                "jb ;cmp al, ;ja ;mov byte [arg_38h], 0;mov rbp, qword [var_20h]": 1,
                "lea rcx, [rax + 1];mov rdx, qword [var_60h];mov rbx, qword [arg_80h];movzx esi, byte [rbx + rdx];mov rdi, qword [var_58h]": 2,
                "mov rax, qword [var_50h];mov rdx, qword [var_60h];mov rbx, qword [arg_80h];movzx esi, byte [var_43h];jmp ": 2,
                "mov rsi, qword [arg_80h];add rax, rsi;mov qword [rsp], rax;mov qword [var_8h], rbx;call fcn.00462c90": 2,
                "cmp ax, ;jae ;mov ecx, eax;shr ax, 4;movzx eax, ax": 2,
                "mov rax, qword [var_30h];mov rsi, qword [var_38h];lea rbx, [rax + 3];movzx eax, byte [var_43h];movzx ecx, byte [var_42h]": 2,
                "movzx eax, byte [var_43h];movzx ecx, byte [var_42h];mov rdx, qword [var_50h];jmp ;mov rcx, qword [var_50h]": 2,
                "mov qword [var_10h], rcx;mov qword [var_18h], r8;mov qword [var_20h], rdx;call fcn.00440d10;mov r9, qword [var_28h]": 2,
                "movzx ebx, byte [var_42h];movzx esi, byte [var_40h];movzx edi, byte [var_41h];jmp ;mov qword [rsp], 0": 2,
                "jmp ;mov qword [rsp], 0;mov qword [var_8h], rax;mov qword [var_10h], rdi;mov qword [var_18h], rdx": 2,
                "mov qword [var_8h], rax;mov qword [var_10h], rdi;mov qword [var_18h], rdx;call fcn.00444c60;mov rcx, qword gs:[]": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 0;mov rcx, qword [arg_f8h];mov qword [var_10h], rcx": 2,
                "mov qword [rsp], rax;mov qword [var_8h], 0;mov rcx, qword [arg_f8h];mov qword [var_10h], rcx;call fcn.00440c00": 2,
                "mov rdx, qword [var_18h];mov qword [var_c8h], rdx;mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax": 1,
                "ja ;cmp rcx, 0;je ;mov rax, qword [var_d8h];mov rcx, qword [var_60h]": 2,
                "mov qword [rsp], rax;mov qword [var_8h], 1;mov qword [var_10h], 1;call fcn.0049d550;mov rax, qword [var_18h]": 2,
                "mov eax, dword [var_50h];mov rcx, qword [var_58h];jmp ;lea r8, [rsi + 6];test r8, r8": 1,
                "jl ;lea r9, [rsi + 2];cmp r9, r8;ja ;cmp r8, rbx": 1,
                "mov rbx, qword [var_38h];lea rdx, [rax + 1];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov rdx, qword [rcx + ];mov rbx, qword [rcx + 8];mov rsi, qword [rcx];cmp rsi, 2;je ": 1,
                "mov rdx, qword [rsp + ];mov qword [rsp + ], rdx;mov qword [rsp], rax;mov qword [rsp + 8], rcx;mov qword [rsp + ], rdx": 1,
                "mov qword [rsp + ], rdx;mov qword [rsp], rax;mov qword [rsp + 8], rcx;mov qword [rsp + ], rdx;call fcn.00608400": 1,
                "mov qword [rsp + ], rcx;mov qword [rsp + ], rdx;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rdx, qword [rsp + ]": 1,
                "mov qword [rsp + ], rdx;mov byte [rsp + ], 0;lea rdi, [rsp + ];lea rsi, [];mov qword [rsp - ], rbp": 1,
                "call fcn.00458f2a;mov rbp, qword [rbp];call fcn.005ff2e0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 1,
                "mov rcx, qword [rsp + ];mov rdx, qword [rsp + ];mov qword [rsp], rdx;mov qword [rsp + 8], rax;mov qword [rsp + ], rcx": 1,
                "mov rdx, rsi;mov rax, rdi;mov rsi, qword [rsp + ];cmp rcx, rsi;jge ": 1,
                "mov rdx, qword [arg_138h];mov rbx, qword [rdx + ];mov rbx, qword [rbx + ];mov qword [rsp], rdx;mov qword [var_8h], rcx": 1,
                "mov qword [var_8h], ;call fcn.00478cf0;mov rax, qword [var_10h];mov rcx, qword [var_18h];mov qword [var_d8h], rax": 1,
                "mov r9, qword [var_18h];mov qword [var_b8h], r9;mov rdx, qword [rcx + ];mov qword [rsp], rax;mov qword [var_8h], rsi": 1,
                "mov qword [var_18h], 0;mov qword [var_20h], rax;mov qword [var_28h], 2;mov qword [var_30h], 2;mov byte [var_38h], 0": 1,
                "mov byte [var_38h], 0;lea rdi, [var_40h];lea rsi, [];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 10,
                "mov rbp, qword [rbp];call fcn.005ff2e0;mov rax, qword [var_90h];mov rcx, qword [var_a0h];mov rdx, qword [var_98h]": 4,
                "mov rax, qword [var_d0h];mov qword [var_10h], rax;call fcn.006132a0;mov rax, qword [var_20h];mov rcx, qword [var_18h]": 1,
                "mov rax, qword [var_18h];mov rcx, qword [var_20h];mov qword [var_f0h], rax;mov qword [var_f8h], rcx;mov rdx, qword [var_120h]": 1,
                "call fcn.00402860;cmp qword [var_20h], 0;jge ;mov qword [arg_158h], ;mov rbp, qword [var_128h]": 1,
                "mov rbp, qword [var_128h];add rsp, ;ret;mov qword [arg_158h], ;mov rbp, qword [var_128h]": 2,
                "ret;test rbx, rbx;je ;test rsi, rsi;jmp ": 1,
                "test rbx, rbx;je ;test rsi, rsi;jmp ;mov qword [arg_158h], 0": 1,
                "mov rcx, qword [rcx + ];mov qword [rsp], rax;mov qword [var_8h], rbx;mov qword [var_10h], rdx;mov rsi, qword [rcx]": 3,
                "add rsp, ;ret;mov rax, qword [arg_88h];mov rcx, qword [rax + ];mov rdx, qword [rcx + ]": 1,
                "mov qword [var_8h], rax;mov rax, qword [var_40h];mov qword [var_10h], rax;mov rax, qword [var_50h];mov qword [var_18h], rax": 2,
                "jne ;test cl, cl;jmp ;mov rax, qword [arg_88h];mov rcx, qword [rax + ]": 1,
                "test cl, cl;jmp ;mov rax, qword [arg_88h];mov rcx, qword [rax + ];mov rdx, qword [rcx + ]": 1,
                "mov qword [var_8h], rcx;mov rcx, qword [var_40h];mov qword [var_10h], rcx;mov byte [var_18h], 1;mov rcx, qword [rdx]": 1,
                "mov rax, qword [rdx];call rax;jmp ;mov rax, qword [arg_88h];mov rcx, qword [rax + ]": 1,
                "jmp ;call fcn.00456090;jmp fcn.005816d0;int3;int3": 1,
                "jae ;mov qword [var_28h], rax;mov rcx, qword [arg_50h];mov qword [rsp], rcx;mov qword [var_8h], rax": 1,
                "lea rdx, [rax + 1];lea rax, [rcx + 1];mov rcx, rdx;jmp ;mov rax, qword [arg_50h]": 1,
                "mov rax, qword [arg_50h];mov qword [rsp], rax;mov qword [var_8h], rdx;mov qword [var_10h], rbx;call fcn.005816d0": 1,
                "ret;call fcn.00456090;jmp fcn.00581ab0;int3;int3": 1,
                "lea rbp, [rsp - ];call fcn.00458f2a;mov rbp, qword [rbp];mov rcx, qword [rsp + ];cmp qword [rsp + ], 0": 2,
                "mov rbp, qword [rsp + ];add rsp, ;ret;mov rdx, qword [rsp + ];mov qword [rsp], rdx": 2,
                "je ;mov rcx, qword [rax + ];mov rax, qword [rax + 8];cmp rcx, 5;jne ": 1,
                "mov qword [rsp + ], 4;lea rcx, [];mov qword [rsp + ], rcx;movzx eax, al;lea rcx, []": 1,
                "call fcn.005fcab0;cmp dword [], 0;jne ;movups xmm0, xmmword [var_10h];mov rax, qword [var_78h]": 1,
                "cmp dword [], 0;jne ;movups xmm0, xmmword [var_10h];mov rax, qword [var_78h];movups xmmword [rax], xmm0": 1,
                "mov qword [rbx + rcx*8], rax;lea rsi, [rcx + 1];mov rax, rbx;mov rcx, rdx;mov rdx, rsi": 1,
                "mov rdx, rsi;cmp rdx, rcx;jge ;mov rbx, qword [arg_178h];cmp qword [arg_180h], rdx": 1,
                "mov qword [rdx + ], rcx;cmp dword [], 0;jne ;mov qword [rdx + ], rax;mov qword [arg_1a8h], 0": 1,
                "mov rbp, qword [var_138h];add rsp, ;ret;lea rdi, [rdx + ];call fcn.004580f0": 1,
                "mov qword [var_a8h], rdi;and rsi, ;mov qword [var_a0h], rsi;mov qword [var_b0h], rbx;mov rsi, qword [var_a8h]": 1,
                "movups xmm0, xmmword [var_38h];movups xmmword [var_d8h], xmm0;movups xmm0, xmmword [var_48h];movups xmmword [var_e8h], xmm0;lea rax, []": 1,
                "mov qword [arg_1b8h], 0;mov qword [arg_1c0h], 0;xorps xmm0, xmm0;movups xmmword [arg_1c8h], xmm0;mov rbp, qword [var_138h]": 1,
                "mov qword [arg_70h], rax;mov rbp, qword [var_40h];add rsp, ;ret;lea rdi, [rax + ]": 13,
                "jne ;xor eax, eax;xor ecx, ecx;xor edx, edx;mov rbx, qword [rsp + ]": 17,
                "ret;mov rbx, rax;mov rax, rdx;mov rdx, rcx;mov rcx, rbx": 7,
                "jmp fcn.0058c3c0;int3;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 2,
                "mov qword [var_8h], rcx;mov qword [var_10h], 8;mov rcx, qword [arg_58h];mov qword [var_18h], rcx;mov rcx, qword [arg_60h]": 2,
                "call fcn.0058c940;mov rax, qword [rsp + ];mov qword [rsp + ], 5;lea rcx, [];mov qword [rsp + ], rcx": 4,
                "mov qword [var_88h], rdx;mov qword [var_58h], rbx;mov qword [var_80h], rax;mov qword [var_40h], rsi;mov rdi, qword [rdx]": 1,
                "mov qword [var_10h], rsi;lea rax, [];mov qword [var_18h], rax;mov qword [var_20h], 1;call fcn.004f09d0": 3,
                "mov qword [var_8h], rax;mov rax, qword [var_70h];mov qword [var_10h], rax;call fcn.005a6ea0;mov rax, qword [var_18h]": 1,
                "mov qword [var_18h], rdx;call fcn.005b0ec0;mov rax, qword [var_20h];mov qword [arg_c0h], rax;mov rbp, qword [var_90h]": 1,
                "call fcn.004580f0;mov rdi, r8;jmp ;mov qword [var_78h], rdx;mov qword [var_60h], rbx": 1,
                "lea rcx, [rax + 1];mov rax, qword [var_40h];mov rdx, qword [var_78h];mov rbx, qword [var_60h];jmp ": 1,
                "mov qword [var_10h], rax;call fcn.0040a940;ud2;call fcn.00456090;jmp fcn.0058d0c0": 1,
                "mov qword [rsp], rax;lea rax, [];mov qword [rsp + 8], rax;mov qword [rsp + ], 8;call fcn.00600bd0": 1,
                "test rax, rax;je ;mov edx, dword [rax + ];cmp edx, ;jne ": 1,
                "xorps xmm0, xmm0;movups xmmword [rsp + ], xmm0;movups xmmword [rsp + ], xmm0;movups xmmword [rsp + ], xmm0;lea rbx, []": 1,
                "mov qword [var_8h], rcx;mov rbx, qword [arg_190h];mov qword [var_10h], rbx;mov rsi, qword [rdx];call rsi": 1,
                "mov rcx, qword [var_20h];mov qword [var_b8h], rcx;mov rbx, qword [var_18h];mov qword [var_b0h], rbx;mov qword [var_f0h], rbx": 1,
                "mov qword [var_100h], rax;mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.0060ac90": 1,
                "mov rax, qword [var_c0h];mov rcx, qword [rax + ];mov rdx, qword [rcx + ];mov qword [rsp], rax;mov rcx, qword [var_c8h]": 1,
                "mov rcx, qword [rax + ];mov rdx, qword [rcx + ];mov qword [rsp], rax;mov rcx, qword [var_c8h];mov qword [var_8h], rcx": 1,
                "mov qword [var_f0h], rdx;mov qword [var_f8h], rcx;mov qword [var_100h], rax;lea rax, [];mov qword [rsp], rax": 1,
                "mov byte [var_30h], 0;mov rax, qword [rbx];mov rdx, rbx;call rax;jmp ": 5,
                "mov qword [rsp], rax;lea rax, [var_f0h];mov qword [var_8h], rax;call fcn.0040aa50;mov rax, qword [var_18h]": 1,
                "lea rdi, [rax + ];lea rsi, [arg_120h];mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458f1c": 1,
                "mov qword [rsp], rcx;mov byte [var_8h], 0;mov qword [var_10h], rax;mov rax, qword [rdx];call rax": 10,
                "mov ecx, dword [rax + ];cmp ecx, ;ja ;cmp ecx, ;jne ": 5,
                "mov qword [rdi], rcx;mov qword [rdi + ], 6;cmp dword [], 0;jne ;lea rdx, []": 8,
                "mov qword [var_8h], rax;lea rax, [var_f0h];mov qword [var_10h], rax;call fcn.0040fbd0;jmp ": 1,
                "mov rbx, qword [arg_1d0h];movsd xmm0, qword [rbx];je ;cmp ecx, ;jne ": 1,
                "mov qword [var_8h], rsi;mov qword [var_10h], rsi;call fcn.00440c00;mov rax, qword [var_18h];mov rcx, qword [var_a8h]": 1,
                "mov qword [r9 + r8*8 + 8], rcx;lea rdi, [r9 + r8*8];lea rdi, [rdi + ];cmp dword [], 0;jne ": 1,
                "cmp rbx, 5;jne ;lea rsi, [];cmp rcx, rsi;jne ": 1,
                "lea rsi, [];cmp rcx, rsi;jne ;mov rdi, qword [rax + 8];mov r8, qword [rax + ]": 1,
                "jne ;mov rdi, qword [rax + 8];mov r8, qword [rax + ];cmp r8, 6;jne ": 1,
                "jne ;cmp word [rdi + 4], ;jne ;cmp byte [rdi + 6], ;je ": 1,
                "je ;cmp rbx, 2;jle ;cmp rbx, 3;je ": 1,
                "cmp rbx, 3;je ;cmp rbx, 4;je ;cmp rbx, 5": 1,
                "mov qword [rsp], rcx;mov rcx, qword [var_c8h];mov qword [var_8h], rcx;mov rcx, qword [var_130h];mov qword [var_10h], rcx": 1,
                "xorps xmm0, xmm0;movups xmmword [var_1c0h], xmm0;lea rcx, [];mov qword [var_1c0h], rcx;lea rcx, []": 1,
                "movups xmm0, xmmword [var_58h];movups xmmword [var_208h], xmm0;movups xmm0, xmmword [var_68h];movups xmmword [var_218h], xmm0;lea rax, []": 1,
                "mov rax, qword [var_8h];mov qword [var_120h], rax;lea rcx, [];mov qword [rsp], rcx;lea rcx, [var_1e8h]": 1,
                "test eax, eax;jne ;mov rax, qword [var_150h];test rax, rax;je ": 1,
                "lea rdi, [var_8h];lea rsi, [var_230h];mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458ef2": 1,
                "call fcn.00458ef2;mov rbp, qword [rbp];mov qword [var_98h], rdx;mov qword [var_a0h], rax;mov r8, qword [var_150h]": 1,
                "mov qword [var_98h], rdx;mov qword [var_a0h], rax;mov r8, qword [var_150h];mov qword [var_a8h], r8;call fcn.005905d0": 1,
                "mov rbp, qword [var_138h];add rsp, ;ret;mov qword [var_90h], rax;mov qword [var_80h], rcx": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], ;mov qword [var_18h], 0;lea rax, [var_98h];mov qword [var_20h], rax": 2,
                "mov qword [var_8h], rcx;call fcn.0040aa50;mov rax, qword [var_18h];mov rcx, qword [var_10h];mov rdx, qword [var_88h]": 3,
                "call fcn.00611ff0;movsd xmm0, qword [rsp + ];movsd xmm1, qword [];ucomisd xmm0, xmm1;ja ": 1,
                "ucomisd xmm1, xmm0;ja ;movsd qword [rsp + ], xmm0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 1,
                "movsd qword [rsp + ], xmm0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rdx, qword [rsp + ];mov qword [rsp], rdx": 1,
                "movq rax, xmm0;btr rax, ;movq xmm1, rax;movsd xmm2, qword [];ucomisd xmm1, xmm2": 1,
                "call fcn.0040ac60;mov rax, qword [var_10h];mov qword [arg_a8h], 3;lea rcx, [];mov qword [arg_b0h], rcx": 1,
                "mov qword [arg_b0h], rcx;mov qword [arg_b8h], rax;mov rbp, qword [var_48h];add rsp, ;ret": 1,
                "lea rcx, [];jmp ;lea rax, [arg_58h];mov qword [rsp], rax;call fcn.00600b00": 1,
                "mov qword [rsp + 8], rax;mov qword [rsp + ], 8;mov rax, qword [rdx];call rax;mov rax, qword [rsp + ]": 1,
                "mov rax, qword [rsp + ];test rax, rax;je ;mov rax, qword [rax + ];test rax, rax": 1,
                "mov qword [var_10h], rcx;call fcn.006132a0;mov rax, qword [var_20h];mov rcx, qword [var_18h];mov qword [rsp], rcx": 1,
                "lea rcx, [];mov qword [arg_58h], rcx;mov qword [arg_60h], rax;mov rbp, qword [var_28h];add rsp, ": 2,
                "cmp rbx, rdx;ja ;mov rsi, qword [arg_110h];cmp rdx, rsi;ja ": 1,
                "xorps xmm0, xmm0;movups xmmword [var_78h], xmm0;movups xmmword [var_88h], xmm0;movups xmmword [var_98h], xmm0;movups xmmword [var_a8h], xmm0": 1,
                "lea rbx, [];mov qword [var_78h], rbx;mov rbx, qword [arg_100h];mov qword [var_80h], rbx;mov rbx, qword [arg_108h]": 1,
                "lea rbx, [var_78h];mov qword [var_20h], rbx;call fcn.005172f0;mov rax, qword [var_30h];mov rcx, qword [var_28h]": 1,
                "mov qword [var_70h], rdi;add rdx, rdi;mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax": 1,
                "mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;mov rdx, qword [rsp + ];mov qword [rsp + ], rdx;lea rdi, [rsp + ]": 1,
                "mov rbx, qword [rbx];cmp rbx, 6;jne ;xor ebx, ebx;xor esi, esi": 1,
                "test rax, rax;mov eax, 1;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [rsp], rax;mov rax, qword [arg_60h];mov rcx, qword [arg_58h];mov rdx, qword [arg_50h];mov qword [var_8h], rdx": 3,
                "mov rax, qword [arg_60h];mov rcx, qword [arg_58h];mov rdx, qword [arg_50h];mov qword [var_8h], rdx;mov qword [var_10h], rcx": 3,
                "mov qword [var_8h], rax;call fcn.0040ac60;mov rax, qword [var_10h];mov qword [arg_88h], 3;lea rcx, []": 3,
                "call fcn.005f0650;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rdx, qword [rsp + ];mov qword [rsp], rax": 6,
                "mov qword [rsp + 8], rax;lea rax, [];mov qword [rsp + ], rax;mov qword [rsp + ], ;call fcn.004f28e0": 2,
                "mov rax, qword [rsp + ];lea rcx, [];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "call fcn.0059d890;mov rax, qword [var_10h];mov qword [var_110h], rax;mov rcx, qword [arg_298h];mov rdx, qword [rcx + ]": 1,
                "mov rax, qword [var_10h];mov qword [var_d8h], rax;mov rcx, qword [arg_298h];mov rdx, qword [rcx + ];mov rbx, qword [var_158h]": 1,
                "call fcn.0059d890;mov rax, qword [var_10h];mov qword [var_b0h], rax;mov rcx, qword [arg_298h];mov rdx, qword [rcx + ]": 1,
                "mov qword [var_8h], rcx;mov rcx, qword [arg_48h];mov qword [var_10h], rcx;call fcn.004124e0;mov rax, qword [var_18h]": 1,
                "mov rdx, qword [rbx + ];mov qword [rsp], rcx;mov qword [var_8h], rax;mov rax, qword [arg_40h];mov qword [var_10h], rax": 1,
                "ret;mov rax, qword [var_28h];call fcn.004580f0;jmp ;mov qword [arg_50h], rax": 1,
                "call fcn.00456090;jmp fcn.0059d890;int3;int3;int3": 1,
                "sub rsp, ;mov qword [var_18h], rbp;lea rbp, [var_18h];mov rax, qword [arg_38h];test rax, rax": 4,
                "lea rbp, [var_18h];mov rax, qword [arg_38h];test rax, rax;je ;cmp dword [rax + ], ": 2,
                "jne ;lea rcx, [];cmp rax, rcx;jne ;mov rcx, qword [arg_40h]": 2,
                "ret;mov rax, qword [arg_28h];mov qword [rsp], rax;mov qword [var_8h], rcx;call fcn.0059d890": 2,
                "jmp ;mov ecx, 0;jmp ;call fcn.00456090;jmp fcn.0059d9b0": 2,
                "xor ebx, ebx;jmp ;mov rsi, qword [var_40h];lea rdx, [rsi + ];mov rbx, rax": 3,
                "mov rcx, qword [rdx + ];mov rsi, qword [rdx + 8];mov rdi, qword [arg_60h];mov qword [rsp], rdi;mov qword [var_8h], rax": 3,
                "mov qword [arg_80h], rdi;mov qword [arg_88h], rcx;mov qword [arg_90h], rcx;mov rbp, qword [var_50h];add rsp, ": 3,
                "mov rax, qword [arg_c8h];test rax, rax;je ;mov ecx, dword [rax + ];cmp ecx, ": 4,
                "mov ecx, dword [rax + ];cmp ecx, ;jne ;xorps xmm0, xmm0;movups xmmword [var_48h], xmm0": 4,
                "jne ;mov rax, qword [var_50h];test rax, rax;jne ;movups xmm0, xmmword [var_58h]": 4,
                "test rax, rax;jne ;movups xmm0, xmmword [var_58h];movups xmmword [var_88h], xmm0;mov qword [rsp], rdx": 4,
                "mov qword [arg_f0h], rax;mov rbp, qword [var_b0h];add rsp, ;ret;mov rcx, qword [arg_c0h]": 4,
                "mov qword [var_a8h], rdx;lea rax, [];mov qword [rsp], rax;lea rax, [var_98h];mov qword [var_8h], rax": 3,
                "mov qword [rsp], rax;lea rax, [var_98h];mov qword [var_8h], rax;call fcn.0040aa50;mov rcx, qword [var_18h]": 3,
                "mov rdx, qword [rax + ];mov rbx, qword [rax + ];mov rsi, qword [arg_58h];mov qword [rsp], rsi;mov qword [var_8h], rbx": 3,
                "mov rdx, qword [arg_60h];mov rbx, qword [rdx + ];cmp dword [], 0;jne ;mov qword [rcx + ], rbx": 2,
                "mov qword [var_8h], rcx;mov qword [var_10h], rbx;mov qword [var_18h], rdx;call fcn.005a4970;mov rax, qword [var_20h]": 2,
                "mov rax, qword [var_20h];mov rcx, qword [var_30h];mov rdx, qword [var_28h];mov qword [arg_70h], rax;mov qword [arg_78h], rdx": 2,
                "mov qword [rax], rcx;cmp dword [], 0;jne ;mov rdx, qword [var_40h];mov qword [rax + 8], rdx": 4,
                "mov rdx, qword [var_40h];mov qword [rax + 8], rdx;mov qword [rax + ], rcx;cmp dword [], 0;jne ": 4,
                "mov qword [rax + ], rdx;mov rcx, qword [var_38h];mov qword [rax + ], rcx;mov rcx, qword [arg_58h];mov qword [rsp], rcx": 2,
                "mov qword [var_8h], rax;call fcn.005ef810;mov dword [rsp], 8;lea rax, [];mov qword [var_8h], rax": 5,
                "mov qword [var_10h], rax;call fcn.0042ec20;test eax, eax;jne ;jmp ": 2,
                "sub rsp, ;mov qword [var_a0h], rbp;lea rbp, [var_a0h];lea rax, [];mov qword [rsp], rax": 7,
                "mov qword [var_a0h], rbp;lea rbp, [var_a0h];lea rax, [];mov qword [rsp], rax;mov rax, qword [arg_f0h]": 2,
                "mov rdx, qword [var_60h];mov rsi, rax;movzx edi, byte [var_47h];mov rax, qword [var_80h];mov r8, qword [rbx + 8]": 2,
                "movabs r10, ;cmp qword [r9], r10;jne ;cmp byte [r9 + 8], ;jne ": 2,
                "mov qword [var_78h], rbx;mov qword [var_58h], rsi;mov byte [var_47h], dil;mov r11, qword [arg_f0h];cmp rsi, r11": 2,
                "mov byte [var_47h], dil;mov r11, qword [arg_f0h];cmp rsi, r11;jge ;lea r12, [rsi + rsi*2]": 2,
                "mov r15, qword [r13 + r12*8];mov r12, qword [r13 + r12*8 + ];shl rsi, 4;mov qword [rax + rsi + 8], r8;lea rcx, [rax + rsi]": 2,
                "mov qword [var_98h], rdx;lea rdx, [];mov qword [rsp], rdx;lea rbx, [var_88h];mov qword [var_8h], rbx": 2,
                "mov rcx, qword [var_10h];mov rdx, qword [var_70h];mov rbx, qword [rdx + ];mov rbx, qword [rbx + ];mov qword [rsp], rdx": 3,
                "jmp ;inc rdx;cmp rdx, rax;jge ;cmp qword [rcx + ], rdx": 1,
                "call fcn.00478cf0;mov rax, qword [var_18h];mov qword [var_48h], rax;mov rcx, qword [var_10h];mov qword [var_68h], rcx": 1,
                "mov qword [var_8h], rdi;call fcn.0040aa50;mov rax, qword [var_18h];mov rcx, qword [var_10h];mov rdx, qword [var_70h]": 1,
                "mov qword [arg_110h], rcx;mov rbp, qword [var_a0h];add rsp, ;ret;xorps xmm0, xmm0": 1,
                "movzx edx, byte [var_3fh];mov rbx, qword [var_68h];mov rdi, qword [arg_a0h];cmp rsi, rdi;jge ": 1,
                "jge ;mov qword [var_60h], rsi;mov rcx, qword [arg_98h];mov rdx, qword [rcx + rsi*8];mov rbx, qword [rdx]": 1,
                "mov rcx, qword [arg_98h];mov rdx, qword [rcx + rsi*8];mov rbx, qword [rdx];mov qword [var_70h], rbx;mov rdi, qword [rdx + 8]": 1,
                "mov qword [var_8h], r8;mov qword [var_10h], rdx;call fcn.0059e950;mov rax, qword [var_20h];mov qword [var_58h], rax": 1,
                "mov rax, qword [rax + ];movzx ecx, byte [rax + ];mov rdx, qword [rax + ];mov rax, qword [rax + ];mov rbx, qword [arg_90h]": 2,
                "mov rax, qword [rax + ];mov rbx, qword [arg_90h];test rbx, rbx;jle ;mov byte [var_3fh], cl": 2,
                "mov rdi, rax;mov rax, qword [var_40h];mov qword [var_68h], rsi;mov qword [var_50h], rdi;mov rcx, qword [rsi]": 2,
                "mov qword [var_60h], rcx;mov rbx, qword [rsi + 8];mov qword [var_48h], rbx;mov r8, qword [rax + ];mov qword [rsp], rdx": 2,
                "movzx ebx, byte [var_3fh];mov byte [var_18h], bl;mov qword [var_20h], 0;xorps xmm0, xmm0;movups xmmword [var_28h], xmm0": 2,
                "mov qword [var_c8h], rbp;lea rbp, [var_c8h];mov rax, qword [arg_d8h];mov rcx, qword [rax + ];cmp qword [rcx], 0": 3,
                "mov qword [var_88h], rsi;mov rdi, qword [rcx + 8];mov rcx, qword [rcx];mov rdx, qword [rdx];mov qword [rsp], rax": 3,
                "mov rcx, qword [var_28h];mov qword [var_70h], rcx;lea rdx, [];mov qword [rsp], rdx;call fcn.0040d880": 2,
                "mov qword [var_60h], rdx;mov qword [var_90h], rcx;mov qword [rsp], rax;mov qword [var_8h], rbx;mov qword [var_10h], rdx": 2,
                "jne ;mov rax, qword [var_78h];mov qword [rdi + ], rax;call fcn.0040e500;mov rax, qword [rsp]": 1,
                "mov qword [rdi + ], rax;call fcn.0040e500;mov rax, qword [rsp];cmp dword [], 0;jne ": 30,
                "jne ;mov rcx, qword [var_68h];mov qword [rcx + ], rax;mov rax, qword [arg_d8h];mov rbx, qword [var_80h]": 1,
                "mov qword [rcx + ], rax;mov rax, qword [arg_d8h];mov rbx, qword [var_80h];lea rdx, [];jmp ": 1,
                "call fcn.005a27d0;mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rdx, qword [var_10h];mov qword [arg_f0h], rdx": 1,
                "xor esi, esi;xor edi, edi;jmp ;add rcx, ;mov rax, rsi": 1,
                "mov qword [var_80h], rcx;mov qword [var_60h], rax;mov r8, qword [rcx + 8];mov r9, qword [rcx];test r9, r9": 1,
                "mov r9, qword [rcx];test r9, r9;jne ;lea r8, [rsi + 1];cmp r8, rdi": 1,
                "mov r10, qword [];lea rsi, [rsi + rsi*2];mov r11, qword [];mov qword [rbx + rsi*8], r11;mov qword [rbx + rsi*8 + 8], r10": 1,
                "mov qword [rbx + rsi*8 + 8], r10;lea r10, [rbx + rsi*8];lea r10, [r10 + ];cmp dword [], 0;jne ": 1,
                "mov qword [var_18h], rdi;call fcn.005affc0;mov rax, qword [var_20h];mov qword [arg_a8h], 5;lea rcx, []": 1,
                "call fcn.00440d10;mov rbx, qword [var_28h];mov rax, qword [var_30h];mov rdi, qword [var_38h];lea r8, [rax + 1]": 1,
                "mov qword [var_70h], rsi;lea rdx, [];mov qword [rsp], rdx;mov rbx, qword [var_78h];mov qword [var_8h], rbx": 1,
                "mov rdi, qword [var_38h];lea rcx, [rax + 1];mov rax, qword [var_40h];mov rdx, qword [var_58h];mov rbx, qword [var_50h]": 1,
                "mov qword [var_10h], rcx;call fcn.0059e950;mov rax, qword [var_20h];mov qword [var_70h], rax;mov rcx, qword [var_28h]": 2,
                "mov rdx, qword [var_28h];mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rdx;call fcn.0060ae60": 13,
                "mov rdx, qword [var_50h];jmp ;call fcn.00456090;jmp fcn.0059f9c0;int3": 2,
                "mov rcx, qword [rax + 8];mov rdx, qword [rax + ];mov rbx, qword [arg_80h];mov qword [rsp], rbx;mov qword [var_8h], rcx": 2,
                "mov qword [var_8h], rdx;mov qword [var_10h], rcx;call fcn.0060ae60;mov rax, qword [var_18h];mov qword [var_60h], rax": 2,
                "mov rdx, qword [arg_80h];mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rcx;call fcn.0059e950": 4,
                "mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rcx;call fcn.0059e950;mov rax, qword [var_18h]": 4,
                "mov rbp, qword [var_70h];add rsp, ;ret;mov rax, qword [rbx + ];mov rcx, qword [rbx + ]": 2,
                "call fcn.0059e950;mov rax, qword [arg_88h];mov rax, qword [rax];mov rcx, qword [var_18h];mov rdx, qword [var_20h]": 2,
                "mov qword [var_48h], rdx;mov rbx, qword [arg_78h];mov rsi, qword [rbx + ];mov rdi, qword [rbx + ];mov r8, qword [arg_70h]": 2,
                "mov r8, qword [arg_70h];mov qword [rsp], r8;mov qword [var_8h], rdi;mov qword [var_10h], rsi;call fcn.0059e950": 2,
                "mov qword [rsp], rsi;mov qword [var_8h], rbx;mov rbx, qword [var_48h];mov qword [var_10h], rbx;mov rbx, qword [var_50h]": 2,
                "mov qword [var_28h], rax;mov qword [var_30h], rcx;mov qword [var_38h], rdx;call fcn.005aed60;movzx eax, byte [var_40h]": 2,
                "mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rcx;call fcn.0060ae60;mov rax, qword [var_18h]": 2,
                "test rcx, rcx;jne ;mov qword [var_d8h], rdx;mov rax, qword [var_a0h];mov qword [rsp], rax": 2,
                "mov qword [rdi], rcx;mov byte [rdi + ], 0;cmp dword [], 0;jne ;mov rax, qword [var_d8h]": 2,
                "mov rdi, rdx;jmp ;mov rax, qword [var_c8h];call fcn.004580f0;jmp ": 2,
                "mov rcx, qword [var_88h];mov qword [var_8h], rcx;call fcn.0040ac60;mov rax, qword [var_10h];mov qword [var_e0h], rax": 1,
                "mov rcx, qword [var_e0h];mov qword [var_128h], rcx;lea rcx, [];mov qword [var_130h], rcx;mov qword [var_138h], rax": 1,
                "lea rax, [var_100h];mov qword [var_20h], rax;mov qword [var_28h], 4;mov qword [var_30h], 4;call fcn.005ac850": 1,
                "lea rcx, [var_140h];mov qword [var_8h], rcx;call fcn.0040aa50;mov rax, qword [var_10h];mov rcx, qword [var_18h]": 1,
                "cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_280h], rbp;lea rbp, [var_280h]": 2,
                "call fcn.0059e950;mov rax, qword [var_20h];mov qword [var_110h], rax;mov rcx, qword [var_18h];mov qword [var_108h], rcx": 1,
                "mov rdx, qword [var_28h];mov qword [var_160h], rdx;lea rbx, [];mov qword [rsp], rbx;call fcn.0040d880": 1,
                "mov rdx, qword [rcx + ];mov rbx, qword [rcx + ];test rdx, rdx;jle ;mov qword [var_100h], rdx": 1,
                "mov rdx, qword [var_28h];mov rbx, qword [var_20h];mov rsi, qword [var_18h];mov rdi, qword [var_e0h];cmp rcx, rdi": 1,
                "mov rbx, qword [var_c8h];test rbx, rbx;je ;je ;mov esi, dword [rbx + ]": 1,
                "mov r11, qword [arg_298h];mov r12, qword [r11 + 8];mov r11, qword [r11];test r11, r11;je ": 1,
                "mov rax, qword [var_160h];mov qword [var_18h], rax;mov rax, qword [var_150h];mov qword [var_20h], rax;mov rax, qword [var_d8h]": 1,
                "mov qword [var_20h], rax;mov rax, qword [var_d8h];mov qword [var_28h], rax;mov rax, qword [var_e0h];mov qword [var_30h], rax": 1,
                "lea rbp, [rsp - ];call fcn.00458f2a;mov rbp, qword [rbp];call fcn.005ff2e0;mov rax, qword [var_a0h]": 3,
                "mov rdx, qword [var_28h];mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rdx;call fcn.00610df0": 6,
                "mov rax, qword [var_20h];mov rcx, qword [var_28h];mov rdx, qword [var_18h];mov qword [arg_50h], rdx;mov qword [arg_58h], rax": 4,
                "mov rdx, qword [var_18h];mov qword [arg_50h], rdx;mov qword [arg_58h], rax;mov qword [arg_60h], rcx;mov rbp, qword [var_30h]": 4,
                "sub rsp, ;mov qword [var_140h], rbp;lea rbp, [var_140h];mov rax, qword [arg_158h];mov rcx, qword [rax + ]": 2,
                "mov rax, qword [rax];mov qword [var_88h], rax;lea rbx, [];mov qword [rsp], rbx;call fcn.0040d880": 2,
                "mov qword [rdi + 8], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_98h];mov qword [rdi], rcx": 2,
                "lea rcx, [rdi + ];mov rax, rdi;mov rdi, rcx;mov rdx, rax;mov rax, qword [var_a0h]": 2,
                "lea rcx, [];mov qword [rsp], rcx;lea rcx, [var_100h];mov qword [var_8h], rcx;call fcn.0040aa50": 4,
                "jmp fcn.005a12b0;int3;int3;int3;int3": 1,
                "mov rdx, qword [var_28h];mov qword [var_118h], rdx;lea rbx, [];mov qword [rsp], rbx;call fcn.0040d880": 2,
                "mov rax, qword [var_20h];mov qword [var_f0h], rax;mov rcx, qword [var_18h];mov qword [var_80h], rcx;mov rdx, qword [var_c8h]": 1,
                "mov rdx, qword [var_118h];mov qword [var_10h], rdx;call fcn.0060ae60;mov rax, qword [var_28h];mov rcx, qword [var_20h]": 1,
                "mov rdi, qword [var_f0h];jne ;mov rbx, qword [rdi];mov rsi, qword [rdi + 8];mov rdi, qword [arg_200h]": 1,
                "jne ;mov r10, r8;jne ;mov rdi, qword [r8];cmp rdx, 5": 1,
                "mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.0060ac90;mov rax, qword [var_18h];mov qword [rsp], rax": 1,
                "mov qword [var_8h], rax;mov rax, qword [var_90h];mov qword [var_10h], rax;mov rax, qword [var_98h];mov qword [var_18h], rax": 1,
                "lea rax, [];mov qword [rsp], rax;lea rax, [var_130h];mov qword [var_8h], rax;call fcn.0040aa50": 1,
                "mov qword [rsp], rdx;call fcn.0040abe0;mov rax, qword [var_8h];xorps xmm0, xmm0;movups xmmword [var_178h], xmm0": 1,
                "movups xmm0, xmmword [var_48h];movups xmmword [var_1b8h], xmm0;movups xmm0, xmmword [var_58h];movups xmmword [var_1c8h], xmm0;movups xmm0, xmmword [var_68h]": 1,
                "jbe ;sub rsp, ;mov qword [var_120h], rbp;lea rbp, [var_120h];call fcn.0040e500": 1,
                "cmp dword [], 0;jne ;mov qword [rdi + ], rax;mov qword [var_78h], rdi;mov rax, qword [arg_138h]": 1,
                "mov rax, qword [rcx + ];mov rdx, qword [rax];mov rax, qword [rax + 8];mov qword [rsp], rcx;mov qword [var_8h], rsi": 1,
                "mov qword [var_8h], rcx;call fcn.0040aa50;mov rax, qword [var_10h];mov rcx, qword [var_18h];mov rdx, qword [var_78h]": 16,
                "lea rax, [];mov qword [arg_148h], rax;mov rax, qword [var_78h];mov qword [arg_150h], rax;mov rbp, qword [var_120h]": 1,
                "mov qword [arg_148h], rax;mov rax, qword [var_78h];mov qword [arg_150h], rax;mov rbp, qword [var_120h];add rsp, ": 1,
                "mov qword [var_10h], rax;mov qword [var_18h], rdx;call fcn.005b0ec0;mov rax, qword [var_20h];xorps xmm0, xmm0": 1,
                "movups xmmword [var_98h], xmm0;mov qword [var_a0h], rax;lea rax, [];mov qword [rsp], rax;lea rcx, [var_98h]": 1,
                "cmp dword [r8], ;jne ;cmp byte [r8 + 4], ;jne ;mov qword [rsp], rcx": 1,
                "mov rax, qword [var_c8h];mov qword [var_48h], rax;mov rcx, qword [var_c0h];mov qword [var_68h], rcx;mov rdx, qword [var_28h]": 1,
                "lea rax, [var_88h];mov qword [var_10h], rax;mov qword [var_18h], 1;mov qword [var_20h], 1;call fcn.004d6050": 1,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rdx;call fcn.0060ae60;mov rax, qword [var_30h]": 1,
                "mov rcx, qword [var_18h];mov rdx, qword [var_20h];mov rbx, qword [var_28h];mov rsi, qword [var_38h];cmp rax, rsi": 1,
                "sub rsp, ;mov qword [var_60h], rbp;lea rbp, [var_60h];mov rax, qword [arg_78h];mov rcx, qword [rax + 8]": 2,
                "mov rbx, qword [arg_78h];mov rsi, qword [rbx];add rsi, ;cmp rsi, 1;ja ": 2,
                "cmp rsi, 1;ja ;cmp rdx, 8;je ;xor esi, esi": 2,
                "mov qword [arg_80h], rax;mov qword [arg_88h], rdx;mov qword [arg_90h], rcx;mov rbp, qword [var_60h];add rsp, ": 2,
                "movsd xmm0, qword [var_18h];movsd qword [rsp], xmm0;call fcn.0040abe0;mov rax, qword [var_8h];mov qword [arg_80h], 2": 2,
                "mov qword [arg_90h], rax;mov rbp, qword [var_60h];add rsp, ;ret;mov qword [rsp], rdx": 3,
                "movsd xmm0, qword [var_18h];movsd xmm1, qword [];addsd xmm0, xmm1;movsd qword [rsp], xmm0;call fcn.0040abe0": 2,
                "addsd xmm0, xmm1;movsd qword [rsp], xmm0;call fcn.0040abe0;mov rax, qword [var_8h];mov qword [var_50h], rax": 1,
                "ret;mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.0060ae60": 1,
                "mov rbx, qword [arg_78h];cmp byte [rbx + ], 0;je ;mov qword [rsp], rax;mov qword [var_8h], rcx": 1,
                "mov qword [var_10h], rcx;call fcn.0060add0;mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rcx, qword gs:[]": 1,
                "mov rbp, qword [var_58h];add rsp, ;ret;mov rcx, qword [arg_68h];mov rdx, qword [rcx + ]": 1,
                "jbe ;sub rsp, ;mov qword [var_1d0h], rbp;lea rbp, [var_1d0h];xorps xmm0, xmm0": 2,
                "jne ;mov rbx, qword [arg_1e8h];test rbx, rbx;je ;mov esi, dword [rbx + ]": 2,
                "xor ebx, ebx;jmp ;mov rsi, qword [var_b0h];add rsi, ;mov rcx, qword [arg_1e0h]": 2,
                "mov qword [var_70h], rbx;mov qword [rsp], rcx;mov qword [var_8h], rdi;call fcn.005a34a0;mov rax, qword [var_70h]": 2,
                "mov rcx, qword [var_78h];cmp rax, rcx;jl ;mov rax, qword [];mov rcx, qword []": 2,
                "jne ;lea rax, [];cmp rax, rbx;jne ;mov rdx, qword [rcx + ]": 2,
                "mov rax, qword [];mov rcx, qword [];mov rdx, qword [];mov qword [arg_1f8h], rdx;mov qword [arg_200h], rcx": 2,
                "je ;mov rax, qword [rbx + 8];movups xmmword [var_b8h], xmm0;mov qword [var_b8h], rax;mov rax, qword [arg_1f0h]": 2,
                "mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rdx, qword [var_10h];mov qword [var_c8h], rdx;mov qword [var_d0h], rcx": 1,
                "mov qword [var_c8h], rdx;mov qword [var_d0h], rcx;mov qword [var_d8h], rax;mov qword [arg_1f8h], rdx;mov qword [arg_200h], rcx": 1,
                "sub rsp, ;mov qword [var_58h], rbp;lea rbp, [var_58h];mov rax, qword [arg_78h];test rax, rax": 1,
                "xor ebx, ebx;xor esi, esi;xor edi, edi;jmp ;mov r8, qword [var_50h]": 1,
                "mov qword [var_50h], rcx;mov qword [var_40h], rdx;mov qword [var_38h], rbx;mov qword [var_30h], rsi;mov qword [var_48h], rdi": 1,
                "mov qword [var_8h], r8;mov qword [var_10h], rax;call fcn.005a35f0;mov rax, qword [var_20h];mov rcx, qword [var_18h]": 1,
                "inc rbx;mov rsi, qword [arg_78h];cmp rbx, rsi;jl ;mov qword [arg_88h], rcx": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], rdx;call fcn.0060ae60;mov rcx, qword [var_18h]": 1,
                "jmp fcn.005a4970;int3;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 1,
                "mov rcx, qword [arg_c0h];mov rdx, qword [rcx + ];lea rbx, [rdx + 1];mov rsi, qword [rcx + ];mov r8, qword [rcx + ]": 2,
                "mov rsi, qword [rcx + ];mov r8, qword [rcx + ];cmp rbx, rsi;ja ;shl rdx, 4": 6,
                "mov rax, qword [arg_c8h];mov rdx, qword [rax];mov qword [var_40h], rdx;mov rdi, qword [rax + 8];mov qword [var_88h], rdi": 2,
                "lea r13, [rdi + ];mov r14, rbx;mov r11, rax;mov r10, rcx;mov r9, rdx": 2,
                "mov r14, rbx;mov r11, rax;mov r10, rcx;mov r9, rdx;mov rcx, qword [arg_c0h]": 2,
                "mov rcx, qword [var_20h];mov rdx, qword [var_28h];cmp rax, 6;jne ;mov rax, qword [var_90h]": 3,
                "inc rbx;mov rsi, qword [var_80h];cmp rbx, rsi;jl ;mov qword [var_50h], rdx": 2,
                "mov rdi, qword [var_88h];mov qword [var_10h], rdi;call fcn.0059e950;mov rax, qword [var_18h];mov rcx, qword [var_20h]": 2,
                "mov rax, r15;mov rcx, r12;mov rdx, r14;mov rbx, qword [var_58h];mov rsi, qword [var_60h]": 2,
                "mov r13, qword [rax + ];test r12, r12;jle ;mov qword [var_80h], r12;xor r14d, r14d": 2,
                "mov rbp, qword [var_b0h];add rsp, ;ret;cmp rax, 7;je ": 2,
                "mov rcx, qword [var_48h];mov rdx, qword [var_50h];jmp ;mov rdx, qword [var_50h];mov rax, qword [var_90h]": 2,
                "mov rax, qword [var_30h];mov rsi, qword [var_38h];lea rbx, [rax + 1];mov rcx, qword [arg_c0h];mov rdx, qword [var_80h]": 1,
                "jbe ;sub rsp, ;mov qword [var_d8h], rbp;lea rbp, [var_d8h];mov rcx, qword [arg_e8h]": 2,
                "call fcn.0060ae60;mov rax, qword [var_18h];mov rcx, qword [var_28h];mov rdx, qword [var_20h];cmp rax, 1": 2,
                "mov qword [var_68h], rdi;mov rcx, qword [rcx + ];mov qword [var_b8h], rcx;mov r8, qword [];mov qword [var_88h], r8": 1,
                "mov qword [rax + ], r15;mov rcx, qword [var_98h];mov rbx, qword [rcx + ];mov rdx, qword [rbx + ];mov qword [rsp], rcx": 1,
                "test rax, rax;je ;mov rax, qword [rax + ];cmp dword [], 0;jne ": 1,
                "call fcn.004580f0;lea rdi, [rdx + ];mov rax, qword [var_d0h];call fcn.004580f0;lea rdi, [rdx + ]": 1,
                "call fcn.004580f0;mov rax, rdx;mov r11, qword [var_b8h];jmp ;lea rdi, [rax + ]": 1,
                "mov r8, qword [var_b0h];jmp ;lea rdi, [rax + 8];mov rdx, rax;mov rax, qword [arg_e8h]": 1,
                "mov rbx, qword [arg_e8h];jmp ;lea rdi, [rax + ];mov rax, rdx;call fcn.004580f0": 1,
                "mov qword [arg_f8h], rax;mov qword [arg_100h], rdx;mov qword [arg_108h], rcx;mov rbp, qword [var_d8h];add rsp, ": 1,
                "mov r12, qword [var_40h];mov r13, qword [var_70h];mov r14, qword [var_c0h];jmp ;xor r15d, r15d": 1,
                "add r8, ;mov r15, rbx;mov r14, rax;mov rdi, rdx;mov rdx, rcx": 1,
                "mov qword [var_f0h], r14;mov qword [var_e8h], rax;mov qword [var_a8h], r15;mov qword [var_a0h], rdi;mov qword [var_98h], rdx": 1,
                "jmp ;mov rax, qword [var_a0h];mov rcx, qword [var_f0h];mov rdx, qword [var_98h];mov qword [arg_118h], rax": 1,
                "mov rcx, qword [var_f0h];mov rdx, qword [var_98h];mov qword [arg_118h], rax;mov qword [arg_120h], rdx;mov qword [arg_128h], rcx": 1,
                "mov rdx, qword [var_98h];mov qword [arg_118h], rax;mov qword [arg_120h], rdx;mov qword [arg_128h], rcx;mov rbp, qword [var_f8h]": 1,
                "add rsp, ;ret;mov rax, qword [var_90h];mov qword [arg_118h], rax;mov rax, qword [var_88h]": 1,
                "mov rax, qword [var_88h];mov qword [arg_120h], rax;mov rax, qword [var_e0h];mov qword [arg_128h], rax;mov rbp, qword [var_f8h]": 1,
                "mov r11, qword [var_b0h];mov r12, qword [var_40h];mov r13, qword [var_70h];mov r14, qword [var_d8h];jmp ": 1,
                "jmp ;mov rax, qword [var_78h];mov rcx, qword [var_d8h];mov rdx, qword [var_80h];jmp ": 1,
                "mov rbx, qword [rax + 8];mov qword [rsp], rcx;mov qword [var_8h], rdx;mov qword [var_10h], rbx;call fcn.0059e950": 2,
                "mov rax, qword [r9];mov rsi, qword [r9 + 8];mov rdi, qword [arg_100h];mov qword [rsp], rdi;mov qword [var_8h], rax": 2,
                "mov rdi, qword [arg_100h];mov qword [rsp], rdi;mov qword [var_8h], rax;mov qword [var_10h], rsi;call fcn.005a35f0": 2,
                "mov rsi, qword [var_98h];mov r8, qword [var_a0h];mov rbx, rcx;mov rcx, rdx;mov rdx, rax": 2,
                "mov rbx, rax;mov rax, rdx;mov rdx, rbx;jmp ;mov qword [var_80h], rax": 1,
                "mov qword [arg_120h], rax;mov rbp, qword [var_f0h];add rsp, ;ret;mov qword [arg_110h], rcx": 1,
                "mov qword [arg_120h], rdx;mov rbp, qword [var_f0h];add rsp, ;ret;mov rax, rsi": 1,
                "mov qword [var_a0h], rdx;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r8;mov qword [var_10h], rdx": 1,
                "call fcn.0042ea20;ud2;call fcn.00456090;jmp fcn.005a5c60;int3": 1,
                "xorps xmm0, xmm0;movups xmmword [arg_d0h], xmm0;mov qword [arg_e0h], 0;movups xmmword [var_98h], xmm0;mov qword [var_a8h], 0": 1,
                "mov rcx, qword [var_28h];mov rdx, qword [var_18h];cmp rdx, 7;je ;mov rax, qword [var_48h]": 1,
                "mov rcx, qword [var_90h];mov qword [var_28h], rcx;mov byte [var_30h], 0;call rdx;xorps xmm0, xmm0": 1,
                "xorps xmm0, xmm0;movups xmmword [var_98h], xmm0;mov qword [var_a8h], 0;lea rax, [];mov qword [rsp], rax": 1,
                "lea rdi, [rcx + ];mov rdx, rax;mov rax, qword [arg_c8h];call fcn.004580f0;mov rax, rcx": 2,
                "mov rsi, qword [var_50h];mov rdi, qword [var_48h];jmp ;mov r8, qword [var_b0h];add r8, ": 1,
                "mov rdx, rbx;mov rbx, rax;mov qword [var_90h], rbx;mov qword [var_b0h], rcx;mov qword [var_80h], rdx": 1,
                "mov qword [var_80h], rdx;mov qword [var_50h], rsi;mov qword [var_48h], rdi;mov rax, qword [rcx];mov r8, qword [rcx + 8]": 1,
                "mov rbp, qword [var_b8h];add rsp, ;ret;mov rax, qword [var_90h];mov rcx, qword [var_48h]": 1,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], r11;mov qword [var_10h], r9;mov qword [var_18h], r12": 1,
                "mov qword [var_8h], rdx;mov qword [var_10h], rcx;call fcn.0059e950;mov rax, qword [arg_60h];mov rcx, qword [rax + ]": 2,
                "mov qword [rax + ], rsi;mov rsi, qword [rcx + ];lea r8, [];mov qword [rsi], r8;cmp dword [], 0": 1,
                "call fcn.0042f500;mov rbp, qword [var_50h];add rsp, ;ret;lea rdi, [rsi + 8]": 1,
                "call fcn.004580f0;mov rdi, rbx;jmp ;mov rax, qword [arg_60h];call fcn.004580f0": 1,
                "call fcn.00456090;jmp fcn.005a6b50;int3;int3;int3": 1,
                "lea rcx, [];cmp rcx, rax;jne ;mov rcx, qword [arg_2d0h];jne ": 3,
                "mov rdx, qword [var_180h];mov rbx, qword [rdx + ];mov qword [var_d0h], rbx;lea rsi, [];mov qword [rsp], rsi": 2,
                "mov qword [var_1f0h], rax;lea rcx, [];mov qword [rsp], rcx;call fcn.0040d880;mov rax, qword [var_8h]": 2,
                "lea rcx, [];mov qword [rsp], rcx;call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [var_d8h]": 2,
                "mov rcx, qword [var_1f8h];mov qword [rax + 8], rcx;mov rcx, qword [var_d0h];mov qword [rax + ], rcx;mov qword [rax + ], rcx": 2,
                "mov rcx, qword [var_1f0h];mov qword [rax + ], rcx;mov rcx, qword [var_180h];mov rdx, qword [rcx + ];mov rcx, qword [rcx + ]": 1,
                "lea rcx, [r8 + 1];mov rdx, qword [var_d0h];cmp rcx, rdx;jl ;lea rcx, []": 1,
                "mov rax, qword [var_1f0h];call fcn.004580f0;mov rax, rcx;jmp ;lea rdi, [rax + 8]": 1,
                "mov rax, qword [var_160h];mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rdi, qword [var_8h];mov qword [rdi + 8], rdx": 1,
                "mov rdi, qword [var_8h];mov qword [rdi + 8], rdx;cmp dword [], 0;jne ;mov qword [rdi], rcx": 1,
                "mov edx, 0;jmp ;cmp ecx, ;jmp ;cmp ecx, ": 1,
                "mov qword [var_d0h], rax;lea rdx, [];mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rax": 1,
                "mov qword [var_10h], rbx;call fcn.00440c00;mov rax, qword [var_18h];mov qword [var_190h], rax;lea rcx, []": 2,
                "mov qword [rax + ], rdx;cmp dword [], 0;jne ;mov rdx, qword [var_190h];mov qword [rax + ], rdx": 1,
                "mov rcx, qword [var_98h];mov qword [rax + ], rcx;mov qword [rax + ], rcx;cmp dword [], 0;jne ": 1,
                "mov qword [rax + ], rcx;mov qword [rax + ], rcx;cmp dword [], 0;jne ;mov rcx, qword [var_190h]": 1,
                "jne ;mov rcx, qword [var_190h];mov qword [rax + ], rcx;mov rcx, qword [var_c0h];mov rdx, qword [rcx + ]": 1,
                "cmp qword [rcx + ], rbx;jbe ;lea rdi, [rdx + rbx*8];cmp dword [], 0;jne ": 1,
                "mov rcx, qword [rax + 8];mov rdx, qword [rax];mov rbx, qword [arg_1c0h];mov qword [rsp], rbx;mov qword [var_8h], rdx": 1,
                "mov rcx, qword [rcx + rsi*8];mov r8, qword [rcx + ];mov r9, qword [var_48h];cmp qword [rcx + ], r9;jbe ": 1,
                "jbe ;mov rcx, r9;shl r9, 4;mov qword [r8 + r9], rbx;lea rdi, [r8 + r9]": 1,
                "shl r9, 4;mov qword [r8 + r9], rbx;lea rdi, [r8 + r9];lea rdi, [rdi + 8];cmp dword [], 0": 1,
                "mov rcx, rax;mov rbx, rsi;jmp ;mov rbx, rax;mov rax, rdx": 1,
                "call fcn.004580f0;jmp ;lea rdi, [rax + ];mov rcx, rax;mov rax, qword [var_190h]": 1,
                "jmp ;lea rdi, [rax + ];mov rcx, rax;mov rax, qword [var_190h];call fcn.004580f0": 1,
                "mov rax, qword [var_198h];call fcn.004580f0;mov rax, rcx;jmp ;cmp ecx, ": 1,
                "mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.005a6ea0;mov rax, qword [var_20h]": 1,
                "mov qword [rsp], rdx;call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [var_a8h];mov qword [rax], rcx": 1,
                "mov qword [var_8h], rax;call fcn.005ab2f0;mov rax, qword [var_10h];mov qword [arg_30h], rax;mov rbp, qword [var_18h]": 1,
                "mov qword [arg_30h], rax;mov rbp, qword [var_18h];add rsp, ;ret;call fcn.004580f0": 1,
                "sub rsp, ;mov qword [var_c0h], rbp;lea rbp, [var_c0h];mov rax, qword [arg_d8h];mov rcx, qword [rax + 8]": 2,
                "mov rax, qword [var_18h];mov qword [var_a8h], rax;lea rcx, [];mov qword [rsp], rcx;call fcn.0040d880": 2,
                "jne ;mov rcx, qword [var_a8h];mov qword [rdi], rcx;mov rcx, qword [arg_d8h];mov rax, qword [rcx + ]": 2,
                "mov qword [var_18h], r13;mov qword [var_20h], r15;call fcn.00440d10;mov rax, qword [var_28h];mov rcx, qword [var_30h]": 2,
                "mov rax, qword [var_68h];mov rcx, qword [var_70h];jmp ;lea rdi, [rbx + ];call fcn.004580f0": 2,
                "mov qword [rsp], rax;mov qword [var_8h], ;lea rax, [var_b0h];mov qword [var_10h], rax;mov qword [var_18h], 1": 2,
                "jmp ;mov rax, qword [var_78h];call fcn.004580f0;jmp ;mov rax, rsi": 2,
                "call fcn.004580f0;jmp ;mov rax, rsi;jmp ;mov r8, r10": 2,
                "mov rax, rsi;jmp ;mov r8, r10;mov r10d, 0;jmp ": 2,
                "jmp ;mov r8, r10;mov r10d, 0;jmp ;test rsi, rsi": 2,
                "mov rcx, qword [arg_d0h];mov qword [rsp], rcx;lea rdx, [];mov qword [var_8h], rdx;mov qword [var_10h], rax": 2,
                "mov rax, qword [var_20h];mov rcx, qword [var_18h];lea rdx, [];cmp rdx, rcx;jne ": 2,
                "mov rcx, qword [var_80h];mov rbx, qword [rcx + ];mov rsi, qword [rcx + ];mov r8, qword [rcx + ];lea r9, [rsi + 1]": 2,
                "mov r8, rax;mov rax, qword [var_90h];mov rcx, rbx;jmp ;lea rdi, [rbx + ]": 1,
                "mov rcx, qword [arg_b0h];xor edx, edx;xor ebx, ebx;lea rsi, [var_40h];xor edi, edi": 1,
                "movups xmmword [var_78h], xmm0;lea rax, [];mov qword [rsp], rax;lea r8, [var_88h];mov qword [var_8h], r8": 1,
                "mov qword [var_78h], rax;mov qword [var_80h], rcx;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], 2": 1,
                "mov qword [arg_d0h], rcx;mov rbp, qword [var_a0h];add rsp, ;ret;mov rax, rdi": 1,
                "mov qword [rsp], rcx;mov qword [rsp + 8], rax;mov qword [rsp + ], rdx;call fcn.005abb60;mov rax, qword [rsp + ]": 2,
                "movups xmmword [rsp + ], xmm0;mov qword [rsp + ], 0;mov rbp, qword [rsp + ];add rsp, ;ret": 2,
                "movups xmmword [rsp + ], xmm0;mov qword [rsp + ], 0;ret;int3;int3": 3,
                "mov rbp, qword [var_60h];add rsp, ;ret;mov qword [rsp], rcx;mov qword [var_8h], rax": 1,
                "mov rax, qword [var_10h];mov qword [var_38h], rax;mov rcx, qword [arg_80h];mov rdx, qword [arg_88h];mov qword [rsp], rcx": 1,
                "call fcn.00456090;jmp fcn.005ac040;int3;int3;int3": 1,
                "movups xmmword [var_20h], xmm0;movups xmm0, xmmword [arg_118h];movups xmmword [var_30h], xmm0;call fcn.005ac040;mov rax, qword [var_40h]": 2,
                "jle ;mov qword [var_70h], rbx;xor esi, esi;jmp ;mov r8, qword [var_80h]": 2,
                "lea rdi, [var_88h];mov rsi, rdx;mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458f2a": 2,
                "mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458f2a;mov rbp, qword [rbp];mov rdi, rsp": 5,
                "mov rcx, rax;jmp ;call fcn.00456090;jmp fcn.005ac1a0;int3": 2,
                "jbe ;sub rsp, ;mov qword [var_b8h], rbp;lea rbp, [var_b8h];cmp byte [arg_c8h], 0": 3,
                "mov rax, qword [arg_e8h];test rax, rax;jne ;mov eax, 9;lea rcx, []": 2,
                "test rdx, rdx;lea rbx, [];cmove rcx, rbx;mov rbx, qword [rax + ];mov qword [var_40h], rbx": 2,
                "cmove rcx, rbx;mov rbx, qword [rax + ];mov qword [var_40h], rbx;mov rax, qword [rax + ];mov qword [var_48h], rax": 2,
                "mov qword [var_40h], rbx;mov rax, qword [rax + ];mov qword [var_48h], rax;mov qword [rsp], rcx;mov ecx, ": 2,
                "mov rdx, qword [var_60h];mov qword [var_90h], rdx;lea rdx, [];mov qword [var_98h], rdx;mov rbx, qword [var_58h]": 2,
                "call fcn.004d6050;mov rax, qword [var_28h];mov rcx, qword [var_30h];jmp ;call fcn.00456090": 1,
                "movups xmm0, xmmword [rsp + ];movups xmmword [rsp + ], xmm0;movups xmm0, xmmword [rsp + ];movups xmmword [rsp + ], xmm0;call fcn.005ac1a0": 1,
                "movups xmmword [rsp + ], xmm0;movups xmm0, xmmword [rsp + ];movups xmmword [rsp + ], xmm0;call fcn.005ac1a0;mov rax, qword [rsp + ]": 1,
                "mov r8, qword [rcx + ];test r8, r8;jne ;mov r8, rcx;jmp ": 1,
                "mov r9, qword [arg_178h];mov r10, qword [r9 + rbx + 8];mov rbx, qword [r9 + rbx];lea r11, [];cmp r11, rbx": 1,
                "mov r10, qword [r9 + rbx + 8];mov rbx, qword [r9 + rbx];lea r11, [];cmp r11, rbx;jne ": 1,
                "lea r11, [];cmp r11, rbx;jne ;mov rbx, qword [r10];jne ": 1,
                "mov rbx, qword [r9 + 8];lea r10, [];cmp rdx, r10;jne ;mov rdx, qword [rbx + 8]": 1,
                "jne ;mov rdx, qword [rbx + 8];mov rbx, qword [rbx];mov r10, qword [arg_188h];dec r10": 1,
                "lea r10, [r10 + r10*4];shl r10, 4;lea rdi, [r12 + r10];cmp dword [], 0;jne ": 1,
                "mov qword [var_40h], rax;lea rsi, [rcx + ];lea rdi, [var_f8h];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 1,
                "mov r12, qword [var_90h];mov r13, qword [var_88h];lea r14, [r12 + 1];cmp r14, r10;ja ": 1,
                "lea r10, [r12 + r12*4];shl r10, 4;lea rdi, [r13 + r10];cmp dword [], 0;jne ": 1,
                "call fcn.00458f2a;mov rbp, qword [rbp];jmp ;lea rax, [];mov qword [rsp], rax": 1,
                "mov rax, qword [var_38h];mov qword [var_98h], rax;mov qword [var_88h], r13;mov rax, qword [var_40h];mov rcx, qword [var_50h]": 1,
                "mov qword [var_78h], rcx;mov qword [var_80h], rax;movups xmm0, xmmword [var_68h];movups xmmword [arg_190h], xmm0;movups xmm0, xmmword [var_78h]": 1,
                "movups xmm0, xmmword [var_68h];movups xmmword [arg_190h], xmm0;movups xmm0, xmmword [var_78h];movups xmmword [arg_1a0h], xmm0;movups xmm0, xmmword [var_88h]": 1,
                "mov qword [var_8h], r12;mov qword [var_10h], r10;mov qword [var_18h], r14;mov qword [var_20h], r13;call fcn.00440d10": 1,
                "lea rbp, [var_18h];xorps xmm0, xmm0;movups xmmword [arg_30h], xmm0;mov dword [rsp], 8;lea rax, []": 1,
                "jne ;mov rdx, qword [arg_28h];mov rax, qword [rdx];call rax;xorps xmm0, xmm0": 1,
                "jne ;jp ;movsd xmm2, qword [];ucomisd xmm0, xmm2;jbe ": 4,
                "mov eax, 1;test al, al;jne ;xorps xmm3, xmm3;ucomisd xmm3, xmm0": 2,
                "bt rax, ;setb al;mov rcx, qword [arg_30h];bt rcx, ;setb cl": 6,
                "movsd xmm4, qword [];ucomisd xmm4, xmm0;seta al;jmp ;movsd xmm0, qword []": 2,
                "ret;movsd xmm3, qword [];ucomisd xmm3, xmm1;seta al;jmp ": 1,
                "movsd xmm3, qword [];ucomisd xmm3, xmm1;seta al;jmp ;movsd xmm3, qword []": 1,
                "call fcn.0060ae60;mov rax, qword [var_28h];mov qword [var_d0h], rax;mov rcx, qword [var_20h];mov qword [var_a0h], rcx": 1,
                "mov rcx, qword [var_18h];mov qword [var_98h], rcx;mov rdx, qword [var_20h];mov qword [var_a0h], rdx;mov rbx, qword [var_a8h]": 2,
                "mov qword [var_98h], rcx;mov rdx, qword [var_20h];mov qword [var_a0h], rdx;mov rbx, qword [var_a8h];mov qword [rsp], rbx": 1,
                "mov qword [var_a0h], rdx;mov rbx, qword [var_a8h];mov qword [rsp], rbx;mov rbx, qword [var_b0h];mov qword [var_8h], rbx": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], rdx;call fcn.00612d50;mov rax, qword [var_28h];mov qword [var_d8h], rax": 1,
                "jne ;mov rcx, qword [var_d8h];mov qword [rdi], rcx;mov rcx, qword [var_80h];mov qword [rdi + ], rcx": 1,
                "jne ;mov rax, qword [arg_1a0h];mov qword [rsp], rax;mov rax, qword [arg_1a8h];mov rcx, qword gs:[]": 1,
                "mov qword [var_48h], rbp;lea rbp, [var_48h];mov qword [rsp], 2;mov qword [var_8h], 5;mov rax, qword []": 1,
                "mov rax, qword [var_10h];mov qword [var_38h], rax;mov qword [rsp], 3;mov qword [var_8h], 5;mov rcx, qword []": 1,
                "mov rax, qword [var_10h];mov qword [var_28h], rax;mov qword [rsp], 5;mov qword [var_8h], 3;mov rcx, qword []": 1,
                "call rcx;mov rax, qword [var_10h];mov qword [var_20h], rax;call fcn.0040e500;mov rax, qword [rsp]": 1,
                "jne ;lea rax, [];mov qword [rdi], rax;mov rax, qword [var_40h];mov qword [arg_58h], rax": 1,
                "jmp ;call fcn.00456090;jmp fcn.005ae850;int3;int3": 1,
                "mov rbx, qword [arg_a0h];mov qword [rsp], rbx;mov rbx, qword [arg_a8h];mov qword [var_8h], rbx;mov rbx, qword [arg_b0h]": 2,
                "call fcn.00611960;movsd xmm0, qword [var_18h];movsd qword [var_48h], xmm0;mov rax, qword [var_38h];mov qword [rsp], rax": 2,
                "seta al;test al, al;je ;mov qword [arg_c0h], 1;mov rbp, qword [var_78h]": 2,
                "add rsp, ;ret;mov qword [arg_c0h], 0;mov rbp, qword [var_78h];add rsp, ": 2,
                "mov qword [rsp], rdx;mov rdx, qword [var_30h];mov qword [var_8h], rdx;mov rdx, qword [var_60h];mov qword [var_10h], rdx": 2,
                "jmp ;call fcn.00456090;jmp fcn.005aea90;int3;int3": 2,
                "call fcn.00456090;jmp fcn.005aea90;int3;int3;int3": 2,
                "jmp fcn.005aea90;int3;int3;int3;mov rcx, qword gs:[]": 1,
                "mov rbx, qword [arg_1d8h];mov qword [var_8h], rbx;mov rbx, qword [arg_1e0h];mov qword [var_10h], rbx;call fcn.0060ae60": 2,
                "mov r8d, 1;mov r9d, 1;test r8b, r8b;je ;mov byte [var_4eh], sil": 2,
                "je ;mov byte [var_4eh], sil;cmp rdi, 2;jg ;cmp rdi, 1": 2,
                "mov byte [arg_1e8h], al;mov rbp, qword [var_198h];add rsp, ;ret;cmp rdi, 2": 2,
                "cmp rdi, 2;jne ;mov qword [rsp], rdi;mov rax, qword [var_88h];mov qword [var_8h], rax": 2,
                "mov qword [var_10h], rax;call fcn.00611960;movsd xmm0, qword [var_18h];movsd qword [var_58h], xmm0;mov rax, qword [var_78h]": 2,
                "mov rax, qword [var_c0h];mov qword [var_10h], rax;call fcn.0060ac90;mov rax, qword [var_18h];mov rcx, qword gs:[]": 1,
                "call fcn.0060ac90;mov rax, qword [var_b0h];cmp qword [var_18h], rax;sete al;movzx esi, byte [var_4eh]": 1,
                "mov rax, qword [var_18h];mov qword [var_c0h], rax;mov rcx, qword [var_20h];mov qword [var_68h], rcx;mov rdx, qword [var_78h]": 1,
                "cmp rdi, 5;je ;cmp rax, 5;jne ;mov qword [rsp], rax": 1,
                "cmp rax, 5;jne ;mov qword [rsp], rax;mov qword [var_8h], rdx;mov qword [var_10h], rcx": 1,
                "mov qword [var_8h], ;mov rax, qword [var_80h];mov qword [var_10h], rax;mov rcx, qword [var_88h];mov qword [var_18h], rcx": 1,
                "mov qword [var_18h], rcx;mov rdx, qword [var_c0h];mov qword [var_20h], rdx;mov rbx, qword [var_100h];mov rsi, qword [var_f8h]": 1,
                "mov qword [rsp], rdi;mov rax, qword [var_88h];mov qword [var_8h], rax;mov rcx, qword [var_c0h];mov qword [var_10h], rcx": 1,
                "mov qword [rdi + ], rbx;mov qword [var_28h], rdi;mov byte [rdi + ], 1;mov qword [rdi + ], ;cmp dword [], 0": 1,
                "jne ;mov rcx, qword [rax + ];mov rdx, qword [rax + 8];lea rbx, [];cmp rbx, rdx": 1,
                "mov rdx, qword [rax + 8];lea rbx, [];cmp rbx, rdx;jne ;cmp dword [], 0": 1,
                "call fcn.004580f0;jmp ;mov rdx, qword [var_30h];lea rdi, [rdx + ];mov rax, rcx": 1,
                "call fcn.004580f0;mov rcx, rax;jmp ;mov qword [rsp], rdx;mov qword [var_8h], rbx": 1,
                "lea rbp, [var_30h];mov rax, qword [arg_40h];mov rcx, qword [rax + ];mov rax, qword [rax + ];test rax, rax": 2,
                "mov rbx, qword [rcx + 8];mov rsi, qword [rcx + ];je ;lea rdx, [];mov qword [rsp], rdx": 2,
                "mov ebx, 0;mov esi, 0;mov edx, 0;jmp ;call fcn.00456090": 2,
                "mov rcx, qword [arg_b8h];mov dword [var_8h], ecx;call fcn.005fabf0;mov rax, qword [var_10h];test byte [rax], al": 2,
                "mov rcx, qword [arg_50h];mov qword [var_18h], rcx;call fcn.00605590;mov rax, qword [var_20h];test byte [rax], al": 4,
                "jne ;movups xmm0, xmmword [rcx];movups xmmword [var_100h], xmm0;movups xmm0, xmmword [rcx + ];movups xmmword [var_110h], xmm0": 4,
                "movups xmmword [var_150h], xmm0;movups xmm0, xmmword [var_68h];movups xmmword [var_160h], xmm0;lea rax, [];mov qword [rsp], rax": 3,
                "movups xmm0, xmmword [var_68h];movups xmmword [var_160h], xmm0;lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 3,
                "mov qword [var_8h], rcx;call fcn.0040aa50;mov rax, qword [var_18h];mov rcx, qword [var_10h];mov rdx, qword [var_80h]": 6,
                "jmp ;mov qword [var_78h], rax;mov qword [var_88h], rcx;mov qword [rsp], rdx;mov rax, qword [arg_1a8h]": 3,
                "mov rcx, qword [var_88h];jmp ;mov qword [rsp], rax;mov rax, qword [arg_190h];mov qword [var_8h], rax": 3,
                "jge ;cmp rax, 8;jne ;movabs rcx, ;mov rdx, qword [arg_78h]": 3,
                "cmp qword [rdx], rcx;jne ;cmp byte [rdx + 8], ;je ;mov rcx, qword [arg_70h]": 2,
                "mov qword [arg_a8h], rax;mov rbp, qword [var_60h];add rsp, ;ret;mov qword [var_40h], rax": 2,
                "mov rdx, rbx;call rax;mov rax, qword [var_40h];jmp ;lea rdi, [rax + ]": 1,
                "mov qword [var_18h], rax;call fcn.0058cba0;mov rax, qword [var_20h];mov qword [arg_a8h], rax;mov rbp, qword [var_60h]": 1,
                "mov rbp, qword [var_60h];add rsp, ;ret;mov rdx, qword [arg_78h];jmp ": 1,
                "mov rcx, qword [arg_98h];mov qword [var_10h], rcx;mov rcx, qword [arg_a0h];mov qword [var_18h], rcx;mov rcx, qword [arg_a8h]": 4,
                "mov rax, qword [rsp];mov qword [var_50h], rax;lea rcx, [];mov qword [rsp], rcx;call fcn.0040d880": 6,
                "mov qword [var_68h], rax;mov qword [var_70h], rdi;lea rcx, [];mov qword [rsp], rcx;lea rdx, [var_60h]": 3,
                "mov qword [var_10h], 9;mov qword [var_18h], rcx;mov qword [var_20h], rax;mov qword [var_28h], ;mov byte [var_30h], 0": 5,
                "mov rbx, qword [rbx + ];mov qword [rsp], rdx;lea rdx, [];mov qword [var_8h], rdx;mov qword [var_10h], ": 3,
                "mov rax, qword [arg_88h];call fcn.004580f0;mov rcx, rax;jmp ;lea rdi, [rax + ]": 2,
                "jmp fcn.005b0ba0;int3;int3;int3;int3": 1,
                "mov qword [var_70h], rbp;lea rbp, [var_70h];mov rax, qword [arg_80h];mov qword [rsp], rax;mov rcx, qword [arg_88h]": 2,
                "lea rbp, [var_70h];mov rax, qword [arg_80h];mov qword [rsp], rax;mov rcx, qword [arg_88h];mov qword [var_8h], rcx": 2,
                "test byte [rax], al;mov rcx, qword [arg_80h];mov rdx, qword [rcx + ];cmp dword [], 0;jne ": 2,
                "mov qword [var_60h], rax;mov rax, qword [var_50h];mov qword [var_68h], rax;lea rcx, [];mov qword [rsp], rcx": 2,
                "mov rax, qword [var_50h];mov qword [var_68h], rax;lea rcx, [];mov qword [rsp], rcx;lea rcx, [var_58h]": 1,
                "call fcn.00456090;jmp fcn.005b0ec0;int3;int3;int3": 1,
                "sub rsp, ;mov qword [var_1040h], rbp;lea rbp, [var_1040h];lea rax, [];mov qword [rsp], rax": 2,
                "cmp dword [], 0;jne ;mov qword [rax + ], rbx;mov qword [rax + ], 0;mov byte [rax + ], 1": 2,
                "jne ;mov qword [rcx + ], rax;lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 2,
                "jne ;mov qword [rdi + ], rax;mov qword [var_bb0h], rdi;mov byte [rdi + ], 1;lea rax, []": 2,
                "mov qword [var_ff0h], 2;lea rax, [];mov qword [var_ff8h], rax;lea rcx, [];mov qword [var_1000h], rcx": 3,
                "movups xmmword [var_1010h], xmm0;movups xmmword [var_1020h], xmm0;movups xmmword [var_1030h], xmm0;lea rcx, [];mov qword [var_1008h], rcx": 3,
                "jne ;mov rcx, qword [var_ba0h];mov qword [rax + 8], rcx;mov rax, qword [var_ba8h];mov rcx, qword [var_38h]": 1,
                "mov qword [rdx + ], rax;xorps xmm0, xmm0;movups xmmword [var_ff0h], xmm0;mov qword [var_1000h], 0;mov qword [var_ff0h], 2": 1,
                "call fcn.0040e500;mov rax, qword [rsp];mov qword [var_b98h], rax;lea rcx, [];mov qword [rsp], rcx": 1,
                "lea rdx, [];mov qword [rsp], rdx;mov rbx, qword [var_b98h];mov qword [var_8h], rbx;lea rsi, []": 1,
                "mov rbx, qword [var_b98h];mov qword [var_8h], rbx;lea rsi, [];mov qword [var_10h], rsi;mov qword [var_18h], 6": 1,
                "cmp dword [], 0;jne ;mov rcx, qword [var_ba0h];mov qword [rax + 8], rcx;mov rax, qword [var_b98h]": 1,
                "cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_218h], rbp;lea rbp, [var_218h]": 1,
                "mov byte [rdi + ], 1;call fcn.0040e500;mov rax, qword [rsp];mov qword [var_e8h], rax;lea rcx, []": 1,
                "lea rdx, [];mov qword [rsp], rdx;mov rbx, qword [var_e8h];mov qword [var_8h], rbx;lea rsi, []": 1,
                "mov rbx, qword [var_e8h];mov qword [var_8h], rbx;lea rsi, [];mov qword [var_10h], rsi;mov qword [var_18h], 6": 1,
                "jne ;mov qword [rcx + ], rax;lea rax, [];mov qword [rsp], rax;lea rcx, [var_1e0h]": 2,
                "mov rcx, qword [var_18h];mov rdx, qword [var_50h];mov qword [rdx + ], rax;cmp dword [], 0;jne ": 2,
                "cmp dword [], 0;jne ;mov qword [rdx + ], rax;xorps xmm0, xmm0;movups xmmword [var_1c8h], xmm0": 1,
                "jne ;mov qword [rdi + ], rax;mov qword [var_58h], rdi;mov byte [rdi + ], 1;call fcn.0040e500": 1,
                "mov byte [rdi + ], 1;call fcn.0040e500;mov rax, qword [rsp];mov qword [var_d0h], rax;lea rcx, []": 1,
                "movups xmm0, xmmword [];movups xmmword [var_e8h], xmm0;lea rcx, [var_d8h];xor edx, edx;jmp ": 2,
                "mov rsi, qword [rbx];mov rdx, rbx;call rsi;mov rax, qword [var_18h];mov qword [var_b0h], rax": 2,
                "mov qword [var_b0h], rax;mov rcx, qword [var_20h];mov qword [var_a8h], rcx;mov rbx, qword [var_28h];mov qword [var_c8h], rbx": 2,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;mov qword [var_10h], rbx;call fcn.00608400;cmp byte [var_18h], 0": 2,
                "mov rax, qword [rax];mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax;mov qword [var_10h], 9": 11,
                "lea rcx, [];mov qword [rsp], rcx;lea rcx, [var_118h];mov qword [var_8h], rcx;call fcn.0040aa50": 2,
                "call fcn.0060ac90;mov rax, qword [var_18h];mov qword [rsp], rax;mov qword [var_8h], 5;lea rax, []": 2,
                "je ;mov qword [arg_178h], rdx;mov qword [arg_180h], rcx;mov qword [arg_188h], rax;mov rbp, qword [var_158h]": 2,
                "lea rcx, [var_f8h];jmp ;mov ecx, 2;jmp ;mov rax, qword [arg_168h]": 2,
                "mov rcx, qword [rax + ];movzx edx, byte [var_28h];mov byte [var_47h], dl;cmp dl, 0;lea rbx, []": 3,
                "call fcn.00414110;movzx eax, byte [var_47h];cmp al, 0;je ;mov rax, qword [arg_a0h]": 2,
                "je ;mov rax, qword [arg_a0h];mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rbx, qword [rax + ]": 1,
                "mov rcx, qword [rax + ];mov rdx, qword [rax + ];mov rbx, qword [rax + ];lea rsi, [rbx - 1];mov rdi, qword [var_48h]": 1,
                "cmp rsi, rdi;jne ;cmp rdi, rcx;ja ;mov qword [rax + ], rdi": 1,
                "jne ;cmp rdi, rcx;ja ;mov qword [rax + ], rdi;mov rcx, qword [var_80h]": 1,
                "cmp r8, r9;ja ;cmp rdi, r8;ja ;mov qword [var_58h], r9": 1,
                "and rdi, r9;add rdi, rdx;mov qword [var_8h], rdi;mov qword [var_10h], rbx;mov qword [var_18h], r8": 1,
                "add rdi, rdx;mov qword [var_8h], rdi;mov qword [var_10h], rbx;mov qword [var_18h], r8;mov qword [var_20h], rcx": 1,
                "mov qword [var_48h], rcx;mov qword [var_30h], rdx;mov rdi, qword [rcx + 8];mov r8, qword [rcx];test sil, sil": 2,
                "jne ;lea rdi, [rdx + 1];cmp rdi, rbx;jl ;mov rbp, qword [var_50h]": 2,
                "lea rdi, [rdx + 1];cmp rdi, rbx;jl ;mov rbp, qword [var_50h];add rsp, ": 2,
                "mov qword [rdi + ], r13;mov qword [rdi + ], 0;mov qword [], rdi;lea rax, [];mov qword [rsp], rax": 2,
                "mov qword [rdi + ], r9;lea r9, [];mov qword [rdi + ], r9;lea r10, [];mov qword [rdi + ], r10": 2,
                "lea r10, [];mov qword [rdi + ], r10;lea r11, [];mov qword [rdi + ], r11;mov qword [rdi + ], 0": 2,
                "mov qword [arg_68h], rdx;mov qword [arg_70h], rax;mov rbp, qword [var_38h];add rsp, ;ret": 1,
                "mov rdx, qword [rcx];mov qword [rsp], rax;mov rcx, qword [arg_120h];mov qword [var_8h], rcx;mov rbx, qword [arg_128h]": 2,
                "jmp ;lea rdi, [rdx + 8];call fcn.004580f0;jmp ;mov rcx, qword [var_a0h]": 2,
                "lea rdi, [rdx + 8];call fcn.004580f0;jmp ;mov rcx, qword [var_a0h];test rcx, rcx": 2,
                "mov qword [var_8h], rax;mov rax, qword [arg_128h];mov qword [var_10h], rax;mov rax, qword [rdx];call rax": 2,
                "movups xmmword [var_88h], xmm0;lea rsi, [];cmp rsi, rdx;jne ;movups xmm0, xmmword [rcx]": 2,
                "mov rcx, qword [arg_118h];cmp byte [rcx + ], 0;je ;mov rax, qword [rax + ];and rax, ": 2,
                "sete byte [arg_130h];mov qword [arg_138h], 0;mov qword [arg_140h], 0;mov rbp, qword [var_108h];add rsp, ": 2,
                "mov qword [arg_140h], rcx;mov rbp, qword [var_108h];add rsp, ;ret;movups xmmword [var_a8h], xmm0": 1,
                "mov rax, qword [arg_118h];movzx eax, byte [rax + ];mov byte [arg_130h], al;mov qword [arg_138h], 0;mov qword [arg_140h], 0": 1,
                "mov rcx, qword [var_28h];cmp byte [var_18h], 0;je ;test rcx, rcx;jne ": 1,
                "call fcn.0040aa50;mov rax, qword [var_18h];mov rcx, qword [var_10h];mov rdx, qword [var_b8h];mov qword [rdx], rcx": 1,
                "mov rax, qword [var_18h];mov rcx, qword [var_10h];mov rdx, qword [var_b8h];mov qword [rdx], rcx;cmp dword [], 0": 1,
                "mov rbx, qword [rdx + 8];mov rsi, qword [rdx + ];mov rdi, qword [rdx];mov rdx, qword [rcx + ];mov qword [rsp], rax": 1,
                "mov rax, qword [arg_130h];mov qword [var_8h], rax;mov rax, qword [arg_138h];mov qword [var_10h], rax;mov qword [var_18h], rdi": 1,
                "jmp ;mov rax, qword [arg_140h];mov qword [var_c0h], rax;mov rax, qword [arg_148h];mov qword [var_c8h], rax": 1,
                "call fcn.0040aa50;mov rax, qword [var_10h];mov rcx, qword [var_18h];mov rdx, qword [arg_128h];mov rbx, qword [rdx + ]": 1,
                "mov rdx, qword [var_10h];mov qword [var_c0h], rdx;mov qword [var_c8h], rax;mov qword [var_d0h], rcx;lea rax, []": 1,
                "mov rax, qword [var_8h];mov rcx, qword [arg_140h];mov qword [rax], rcx;mov rcx, qword [arg_148h];mov qword [rax + 8], rcx": 1,
                "mov qword [rax + 8], rcx;cmp dword [], 0;jne ;mov rcx, qword [arg_150h];mov qword [rax + ], rcx": 1,
                "mov qword [rax + ], rcx;mov rcx, qword [var_b0h];mov qword [rsp], rcx;mov rcx, qword [var_c0h];mov rdx, qword [var_d0h]": 1,
                "mov qword [var_18h], rdx;mov qword [var_20h], rax;mov qword [var_28h], 1;mov qword [var_30h], 1;mov byte [var_38h], 0": 1,
                "sub rsp, ;mov qword [var_208h], rbp;lea rbp, [var_208h];mov rax, qword [arg_218h];mov rcx, qword [rax + ]": 2,
                "mov esi, 1;xor esi, 1;test sil, sil;jne ;mov rsi, rdx": 1,
                "mov r9, qword [rax + 8];mov r10, qword [rax];mov qword [var_1b0h], r10;mov qword [var_1b8h], r9;mov qword [var_1c0h], r8": 1,
                "mov qword [var_1b8h], r9;mov qword [var_1c0h], r8;movups xmmword [var_1a0h], xmm0;lea r11, [];cmp r11, rcx": 1,
                "movups xmm1, xmmword [var_170h];movups xmmword [var_130h], xmm1;bt ebx, 7;jb ;mov r12d, 1": 1,
                "je ;bt ebx, 7;jb ;cmp rdi, rcx;mov r12d, 1": 1,
                "je ;movups xmmword [var_1a0h], xmm0;cmp r11, rdx;jne ;movups xmm1, xmmword [r8]": 1,
                "test sil, sil;je ;btr rdx, 7;mov rsi, qword [var_a8h];mov rdi, rsi": 1,
                "and rdx, 1;or rdx, rsi;test rsi, 2;cmovne rsi, rdx;and rsi, ": 1,
                "mov qword [var_18h], rbx;call fcn.00413cb0;mov rax, qword [var_20h];mov rcx, qword [var_80h];mov qword [rax], rcx": 1,
                "cmp dword [], 0;jne ;mov rcx, qword [var_b8h];mov qword [rax + 8], rcx;movzx ecx, byte [var_7fh]": 1,
                "ret;mov rcx, qword [arg_218h];mov rdx, qword [rcx + ];mov rbx, qword [rcx + ];mov rsi, qword [rcx + ]": 1,
                "jne ;mov rax, qword [arg_220h];mov qword [rdx + rbx], rax;jmp ;mov rax, qword [arg_220h]": 1,
                "cmp dword [], 0;jne ;mov qword [rbx + ], rax;mov rdx, rax;mov rsi, rcx": 1,
                "movzx ecx, byte [arg_e8h];test cl, cl;jne ;mov byte [arg_f0h], 0;mov rbp, qword [var_c0h]": 1,
                "call fcn.005ac850;movups xmm0, xmmword [var_38h];movups xmmword [var_80h], xmm0;movups xmm0, xmmword [var_48h];movups xmmword [var_90h], xmm0": 9,
                "mov rax, qword [arg_e0h];mov qword [var_10h], rax;call fcn.005e7730;mov byte [arg_f0h], 1;mov rbp, qword [var_c0h]": 1,
                "mov rsi, qword [rsp + ];test byte [rsi], al;cmp dword [], 0;jne ;mov qword [rsp - ], rbp": 1,
                "lea rbp, [rsp - ];call fcn.00458f1c;mov rbp, qword [rbp];mov rcx, qword [rsp + ];mov rax, qword [rcx]": 1,
                "test rbx, rbx;je ;mov rbx, qword [rbx];lea rax, [];mov qword [rsp], rax": 1,
                "mov qword [rsp + ], 0;call fcn.0040e5a0;mov rax, qword [rsp + ];cmp dword [], 0;jne ": 1,
                "mov qword [rsp + ], rsi;call fcn.00414d20;mov rax, qword [rsp + ];mov rcx, qword [rax + ];lea rdi, [rsp + ]": 1,
                "mov qword [rsp], rdi;mov qword [rsp + 8], rbx;mov qword [rsp + ], rdx;mov qword [rsp + ], rcx;call fcn.0059db90": 1,
                "mov rax, qword [rsp + ];mov rcx, qword [rax + ];mov rdx, qword [rsp + ];mov qword [rsp + ], rdx;mov rbx, qword [rsp + ]": 1,
                "lea rdi, [];mov qword [rsp], rdi;mov qword [rsp + 8], rcx;mov rcx, qword [rsp + ];mov qword [rsp + ], rcx": 1,
                "mov qword [rsp + ], rcx;mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;call fcn.00413cb0;mov rax, qword [rsp + ]": 1,
                "mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;call fcn.00413cb0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 1,
                "mov rdi, qword [rax];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "cmp dword [], 0;jne ;mov rcx, qword [var_48h];mov qword [rax + 8], rcx;test byte [rcx], al": 1,
                "mov qword [var_58h], rax;lea rcx, [var_50h];mov qword [rsp], rcx;call fcn.0055b960;mov rax, qword [var_40h]": 1,
                "mov qword [var_10h], rax;xorps xmm0, xmm0;movups xmmword [var_18h], xmm0;mov byte [var_28h], 0;call fcn.005f6c70": 2,
                "cmovl rdi, rdx;mov qword [arg_88h], rdi;mov edx, 0;cmovl rdx, rbx;mov qword [arg_90h], rdx": 2,
                "lea rbp, [var_68h];xorps xmm0, xmm0;movups xmmword [arg_98h], xmm0;mov qword [arg_a8h], 0;movups xmmword [arg_b0h], xmm0": 3,
                "jne ;mov qword [rax + ], rdx;mov rcx, qword [var_58h];mov qword [rax + ], rcx;mov rcx, qword [arg_80h]": 3,
                "lea rdi, [rax + 8];mov rdx, rax;mov rax, qword [var_60h];call fcn.004580f0;mov rbx, rax": 3,
                "lea rbp, [var_60h];xorps xmm0, xmm0;movups xmmword [var_18h], xmm0;mov qword [var_28h], 0;movups xmmword [var_30h], xmm0": 4,
                "movups xmmword [var_40h], xmm0;movups xmmword [var_50h], xmm0;lea rax, [];mov qword [var_30h], rax;mov rax, qword [arg_70h]": 4,
                "mov qword [var_48h], rax;mov rax, qword [arg_88h];mov qword [var_50h], rax;lea rax, [var_18h];mov qword [var_58h], rax": 3,
                "mov rcx, qword [var_10h];cmp qword [var_18h], 6;jge ;mov rdx, qword [var_28h];mov rbx, qword [var_20h]": 3,
                "cmp qword [var_18h], 6;jge ;mov rdx, qword [var_28h];mov rbx, qword [var_20h];mov rsi, qword [var_18h]": 5,
                "mov rbp, qword [var_60h];add rsp, ;ret;xorps xmm0, xmm0;movups xmmword [var_18h], xmm0": 3,
                "mov rsi, qword [var_20h];test rcx, rcx;je ;mov qword [arg_c0h], rcx;mov qword [arg_c8h], rax": 4,
                "mov rbp, qword [var_80h];add rsp, ;ret;xorps xmm0, xmm0;movups xmmword [var_40h], xmm0": 4,
                "ret;xorps xmm0, xmm0;movups xmmword [var_40h], xmm0;movups xmmword [var_50h], xmm0;movups xmmword [var_60h], xmm0": 4,
                "mov qword [var_70h], rsi;mov qword [var_78h], rdx;lea rax, [var_40h];mov qword [rsp], rax;call fcn.005ace40": 3,
                "lea rdi, [rcx + ];mov rax, qword [rsp + ];call fcn.004580f0;jmp ;call fcn.00456090": 4,
                "mov rax, qword [arg_78h];mov qword [var_8h], rax;call fcn.0040ac60;mov rax, qword [arg_58h];mov qword [rsp], rax": 3,
                "call fcn.0040ac60;mov rax, qword [arg_58h];mov qword [rsp], rax;lea rcx, [];mov qword [var_8h], rcx": 3,
                "call fcn.005f59d0;mov rax, qword [arg_58h];mov qword [rsp], rax;mov rcx, qword [arg_60h];mov qword [var_8h], rcx": 3,
                "mov qword [var_30h], 0;call fcn.005b06e0;mov rax, qword [var_38h];mov rcx, qword [arg_58h];mov qword [rsp], rcx": 2,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.005ebbe0;int3": 3,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.005ebcc0;int3": 4,
                "cmp dword [], 0;jne ;mov qword [rcx + rdx], rdi;mov rax, qword [var_a8h];mov rcx, qword [arg_1a0h]": 2,
                "mov rcx, qword [var_10h];test rax, rax;jle ;mov qword [var_90h], rax;xor edx, edx": 1,
                "call fcn.005ac3a0;mov rax, qword [arg_210h];mov rcx, qword [arg_208h];mov rdx, qword [arg_200h];lea rbx, [rcx + 1]": 1,
                "mov rcx, qword [var_30h];mov rax, qword [var_38h];mov qword [arg_210h], rax;mov qword [arg_200h], rdx;mov r8, qword [var_c8h]": 1,
                "cmp qword [var_8h], 0;sete dl;mov rax, qword [var_c0h];mov rcx, qword [var_80h];jmp ": 1,
                "mov qword [var_78h], rcx;mov rdx, qword [var_20h];mov qword [var_70h], rdx;lea rbx, [];mov qword [rsp], rbx": 1,
                "mov qword [arg_168h], 0;movups xmmword [arg_170h], xmm0;mov rax, qword [arg_128h];cmp rax, 4;jge ": 1,
                "jge ;xor ecx, ecx;test cl, cl;je ;cmp rax, 4": 1,
                "test cl, cl;je ;cmp rax, 4;jb ;add rax, ": 1,
                "mov rcx, qword [arg_118h];mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.005ef810;mov dword [rsp], ": 1,
                "mov qword [var_10h], rax;mov rcx, qword [arg_118h];mov qword [var_18h], rcx;call fcn.0042ec20;test eax, eax": 1,
                "mov qword [var_8h], rcx;mov rcx, qword [arg_138h];mov qword [var_10h], rcx;call fcn.005f0810;mov rax, qword [var_28h]": 1,
                "mov qword [rsp], rcx;mov rcx, qword [arg_118h];mov qword [var_8h], rcx;lea rdx, [];mov qword [var_10h], rdx": 1,
                "mov rax, qword [var_30h];mov rcx, qword [var_28h];mov rdx, qword [var_40h];mov rbx, qword [var_38h];mov rsi, qword [var_20h]": 3,
                "mov qword [var_20h], rax;mov rax, qword [var_80h];mov qword [var_28h], rax;mov rax, qword [var_90h];mov qword [var_30h], rax": 1,
                "test rcx, rcx;je ;xorps xmm0, xmm0;movups xmmword [arg_158h], xmm0;mov qword [arg_168h], 0": 2,
                "mov qword [arg_168h], 0;mov qword [arg_170h], rcx;mov qword [arg_178h], rdx;call fcn.0042f500;mov rbp, qword [var_100h]": 2,
                "mov qword [arg_170h], rcx;mov qword [arg_178h], rdx;call fcn.0042f500;mov rbp, qword [var_100h];add rsp, ": 2,
                "call fcn.0042f500;mov rbp, qword [var_100h];add rsp, ;ret;mov qword [arg_158h], rax": 2,
                "mov qword [arg_158h], rax;mov qword [arg_160h], rbx;mov qword [arg_168h], rsi;xorps xmm0, xmm0;movups xmmword [arg_170h], xmm0": 2,
                "mov qword [arg_160h], rbx;mov qword [arg_168h], rsi;xorps xmm0, xmm0;movups xmmword [arg_170h], xmm0;call fcn.0042f500": 2,
                "mov qword [var_20h], rax;mov rax, qword [var_90h];mov qword [var_28h], rax;mov rax, qword [arg_140h];mov qword [var_30h], rax": 1,
                "cmp dword [], 0;jne ;mov rax, qword [var_60h];mov qword [rdi], rax;mov qword [arg_98h], 0": 1,
                "mov qword [arg_a0h], rax;mov qword [arg_a8h], rdi;mov rbp, qword [var_68h];add rsp, ;ret": 1,
                "mov qword [var_10h], rdx;call fcn.0060acd0;mov rax, qword [var_18h];mov qword [arg_98h], rax;xorps xmm0, xmm0": 1,
                "mov rax, rcx;mov rcx, rdx;jmp ;call fcn.00456090;jmp ": 1,
                "lea rbp, [var_70h];mov rax, qword [arg_80h];mov qword [rsp], rax;mov rax, qword [arg_88h];mov qword [var_8h], rax": 2,
                "mov rdx, qword [arg_98h];mov qword [var_18h], rdx;mov rbx, qword [arg_a0h];mov qword [var_20h], rbx;mov rbx, qword [arg_a8h]": 2,
                "mov qword [var_18h], rdx;mov rbx, qword [arg_a0h];mov qword [var_20h], rbx;mov rbx, qword [arg_a8h];mov qword [var_28h], rbx": 2,
                "test rdx, rdx;je ;xorps xmm0, xmm0;movups xmmword [arg_c8h], xmm0;mov qword [arg_d8h], 0": 2,
                "mov rdx, qword [var_68h];mov rbx, qword [var_50h];mov rsi, qword [var_58h];mov qword [arg_c8h], rax;mov qword [arg_d0h], rbx": 2,
                "lea rbp, [var_90h];mov rax, qword [arg_a0h];mov rcx, qword [rax];mov qword [rsp], rcx;mov rcx, qword [arg_d0h]": 3,
                "call fcn.005f0810;mov rax, qword [var_18h];mov rcx, qword [var_38h];mov rdx, qword [var_30h];mov rbx, qword [var_28h]": 3,
                "mov rcx, qword [arg_b0h];mov qword [var_58h], rcx;mov rcx, qword [arg_b8h];mov qword [var_60h], rcx;mov rcx, qword [arg_c0h]": 3,
                "mov rbp, qword [var_90h];add rsp, ;ret;call fcn.00456090;jmp fcn.005ed540": 3,
                "mov rcx, qword [var_18h];mov qword [rax + 8], rcx;mov rcx, qword [arg_30h];mov rbx, qword [rcx + ];mov rdx, qword [rbx + ]": 4,
                "call rax;mov rax, qword [var_18h];mov rcx, qword [rax + ];mov rbx, qword [rax + 8];mov rax, qword [rax]": 4,
                "mov qword [arg_50h], rax;mov qword [arg_58h], rbx;mov qword [arg_60h], rcx;mov rbp, qword [var_20h];add rsp, ": 4,
                "mov rcx, qword [var_68h];mov rbx, qword [var_58h];mov rsi, qword [var_40h];jmp ;lea rdi, [rax + 8]": 3,
                "mov rax, qword [arg_80h];cmp rax, 1;je ;lea rcx, [];mov qword [rsp], rcx": 3,
                "mov qword [var_8h], rax;mov qword [var_10h], rax;call fcn.00440c00;mov rax, qword [var_18h];mov rcx, qword [arg_80h]": 3,
                "xor ebx, ebx;jmp ;mov rsi, qword [var_50h];lea rdx, [rsi + ];mov rbx, rax": 3,
                "mov qword [var_30h], rbx;mov rax, qword [rdx];mov rcx, qword [rdx + 8];mov rsi, qword [arg_70h];mov qword [rsp], rsi": 3,
                "mov qword [rdi + rcx*8 + ], rsi;inc rax;mov rcx, qword [arg_80h];cmp rax, rcx;jl ": 3,
                "jmp ;mov rdi, rax;jmp ;mov rax, qword [arg_78h];mov rcx, qword [rax + 8]": 3,
                "mov rbp, qword [var_60h];add rsp, ;ret;mov esi, 0;mov edx, 0": 2,
                "ret;call fcn.00456090;jmp fcn.005edc20;mov rcx, qword gs:[];mov rcx, qword [rcx]": 2,
                "mov rcx, qword [arg_58h];add rax, rcx;test rax, rax;mov ecx, 0;cmovl rax, rcx": 3,
                "test rax, rax;mov ecx, 0;cmovl rax, rcx;mov qword [arg_68h], rax;mov rbp, qword [var_30h]": 3,
                "mov rcx, qword [arg_50h];cmp rcx, 1;je ;jle ;mov rcx, qword gs:[]": 1,
                "mov qword [arg_68h], rax;mov rax, qword [arg_60h];mov qword [arg_70h], rax;mov rbp, qword [var_38h];add rsp, ": 4,
                "ret;mov rdi, rbx;mov rbx, rsi;mov rsi, rdi;jmp ": 3,
                "mov qword [var_38h], rcx;xorps xmm0, xmm0;movups xmmword [var_48h], xmm0;mov rdx, qword [arg_68h];mov rbx, qword [rdx + 8]": 3,
                "xorps xmm0, xmm0;movups xmmword [var_48h], xmm0;mov rdx, qword [arg_68h];mov rbx, qword [rdx + 8];mov rsi, qword [rdx]": 3,
                "add rsp, ;ret;mov qword [rsp], rax;mov qword [var_8h], rcx;mov rax, qword [arg_78h]": 2,
                "mov rax, qword [var_28h];mov rcx, qword [var_30h];mov qword [rsp], 0;mov rdx, qword [var_40h];mov qword [var_8h], rdx": 2,
                "mov ecx, dword [rax + ];cmp ecx, ;jne ;xorps xmm0, xmm0;movups xmmword [var_a8h], xmm0": 3,
                "cmp rdx, rax;jne ;mov rdx, qword [arg_e0h];movups xmm1, xmmword [rdx];movups xmmword [var_b8h], xmm1": 3,
                "movups xmm1, xmmword [var_b8h];movups xmmword [var_a8h], xmm1;jne ;cmp qword [var_a8h], 0;jne ": 3,
                "jne ;xorps xmm0, xmm0;movups xmmword [arg_f8h], xmm0;mov qword [arg_108h], 0;mov rbp, qword [var_c8h]": 3,
                "mov rcx, qword [var_20h];mov rdx, qword [var_18h];mov rbx, qword [var_10h];mov qword [rsp], rax;mov qword [var_8h], rbx": 2,
                "mov edx, 0;mov ecx, 0;jmp ;movups xmmword [var_b8h], xmm0;mov rdx, qword [arg_e0h]": 2,
                "call fcn.00456090;jmp fcn.005ee2d0;int3;int3;int3": 2,
                "jbe ;sub rsp, ;mov qword [var_138h], rbp;lea rbp, [var_138h];mov qword [arg_168h], 0": 3,
                "lea rbp, [var_138h];mov qword [arg_168h], 0;xorps xmm0, xmm0;movups xmmword [arg_170h], xmm0;mov rax, qword [arg_150h]": 3,
                "mov rsi, qword [rbx + ];mov rdx, qword [rsi + ];mov qword [rsp], rbx;lea rsi, [];mov qword [var_8h], rsi": 7,
                "call fcn.0040aa50;mov rax, qword [var_18h];mov rcx, qword [var_10h];mov qword [arg_168h], rcx;mov qword [arg_170h], rax": 4,
                "mov rax, qword [var_b8h];mov rcx, qword [rax + ];mov rdx, qword [rcx + ];mov qword [rsp], rax;lea rax, []": 2,
                "movups xmm0, xmmword [var_68h];movups xmmword [var_128h], xmm0;lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 2,
                "mov rax, qword [rsp];mov qword [var_60h], rax;lea rcx, [];mov qword [rsp], rcx;call fcn.0040d880": 4,
                "mov rax, qword [arg_e8h];bt eax, 7;jb ;mov ecx, 1;mov qword [var_58h], rdi": 1,
                "mov rdx, rbx;call rax;mov qword [var_a8h], 4;lea rax, [];mov qword [var_b0h], rax": 3,
                "movzx ecx, cl;lea rbx, [];add rcx, rbx;mov qword [var_b8h], rcx;lea rcx, []": 2,
                "cmp rcx, 8;sete cl;movzx ecx, cl;lea rbx, [];add rcx, rbx": 1,
                "sete al;movzx eax, al;lea rcx, [];add rax, rcx;mov qword [var_b8h], rax": 1,
                "mov rbx, qword [arg_e0h];movups xmm1, xmmword [rbx];movups xmmword [var_88h], xmm1;movups xmm1, xmmword [var_88h];movups xmmword [var_98h], xmm1": 1,
                "movups xmm1, xmmword [var_88h];movups xmmword [var_98h], xmm1;movups xmm1, xmmword [var_88h];movups xmmword [var_68h], xmm1;jne ": 1,
                "jne ;cmp qword [var_68h], 0;je ;mov esi, 1;test sil, sil": 1,
                "test byte [rax], al;mov rcx, qword [arg_e0h];mov rdx, qword [rcx + ];cmp dword [], 0;jne ": 1,
                "mov qword [rax + ], rdx;mov rdx, qword [rcx + ];test rdx, rdx;je ;mov rbx, qword [rcx + ]": 1,
                "inc rdx;mov qword [rax + ], rdx;cmp dword [], 0;jne ;mov qword [rcx + ], rax": 1,
                "movups xmm0, xmmword [var_58h];movups xmmword [var_b0h], xmm0;movups xmm0, xmmword [var_68h];movups xmmword [var_c0h], xmm0;lea rax, []": 3,
                "movups xmm0, xmmword [var_68h];movups xmmword [var_c0h], xmm0;lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 3,
                "lea rbp, [var_48h];mov rax, qword [arg_60h];test rax, rax;je ;mov rcx, qword [arg_68h]": 2,
                "mov rax, qword [var_38h];mov qword [rdi + ], rax;call fcn.0040e500;mov rax, qword [rsp];cmp dword [], 0": 2,
                "jne ;mov qword [rax + ], rdx;mov rcx, qword [var_30h];mov qword [rax + ], rcx;mov rcx, qword [arg_58h]": 2,
                "call fcn.005efeb0;mov rdx, qword [var_20h];jmp ;mov rcx, qword [var_40h];lea rdi, [rcx + ]": 2,
                "mov rdi, rdx;mov rax, qword [var_38h];call fcn.004580f0;jmp ;mov rax, qword [arg_58h]": 2,
                "mov rax, qword [var_38h];call fcn.004580f0;jmp ;mov rax, qword [arg_58h];call fcn.004580f0": 2,
                "mov qword [var_70h], rbp;lea rbp, [var_70h];mov rax, qword [arg_88h];mov rax, qword [rax + ];mov rcx, qword [arg_90h]": 3,
                "mov qword [var_20h], rax;call fcn.0042ec20;test eax, eax;jne ;mov rdx, qword [arg_40h]": 3,
                "jmp ;cmp rax, 4;je ;cmp rax, 5;jne ": 5,
                "cmp rax, 4;je ;cmp rax, 5;jne ;mov rcx, qword gs:[]": 1,
                "mov qword [rax + ], rcx;mov qword [arg_f8h], rax;mov rbp, qword [var_c8h];add rsp, ;ret": 2,
                "mov rax, rdx;jmp ;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rdx": 2,
                "ud2;call fcn.00456090;jmp fcn.005efeb0;int3;int3": 2,
                "mov rcx, qword [arg_d0h];mov qword [rsp], rcx;mov qword [var_8h], rax;mov rax, qword [arg_e0h];mov qword [var_10h], rax": 5,
                "mov qword [var_8h], rax;mov rax, qword [arg_e0h];mov qword [var_10h], rax;mov rax, qword [arg_e8h];mov qword [var_18h], rax": 4,
                "ret;mov rax, qword [arg_d0h];mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax": 4,
                "jne ;lea rax, [];mov qword [rdi], rax;mov qword [arg_f0h], 0;lea rax, []": 2,
                "call fcn.005fbc10;mov rax, qword [var_20h];test byte [rax], al;mov rcx, qword [arg_d0h];mov rcx, qword [rcx + ]": 1,
                "lea rbp, [var_c0h];mov rax, qword [arg_d8h];cmp rax, 4;jg ;cmp rax, 1": 2,
                "call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.005f0650;int3": 1,
                "mov qword [var_58h], rbp;lea rbp, [var_58h];xorps xmm0, xmm0;movups xmmword [var_18h], xmm0;mov qword [var_28h], 0": 2,
                "mov qword [rsp], rax;call fcn.005ace40;mov rax, qword [var_10h];mov rcx, qword [var_8h];mov rdx, qword [var_18h]": 16,
                "call fcn.00456090;jmp fcn.005f0810;int3;int3;int3": 2,
                "jne ;movss xmm0, dword [rax];cvtss2sd xmm0, xmm0;movsd qword [var_80h], xmm0;mov rax, qword [arg_290h]": 3,
                "mov rax, qword [var_8h];lea rcx, [rax - 2];cmp rcx, 9;ja ;movsd xmm0, qword [var_80h]": 3,
                "jp ;mov qword [rsp], rax;call fcn.0040abe0;mov rax, qword [var_8h];cmp byte [], 0": 3,
                "mov qword [], rcx;cmp dword [], 0;jne ;mov qword [], rax;mov qword [var_150h], rcx": 2,
                "add rax, ;cmp rax, 4;ja ;mov rax, qword [var_98h];test rax, rax": 2,
                "ja ;mov rax, qword [var_98h];test rax, rax;jl ;mov rax, qword [arg_290h]": 2,
                "and rdx, rax;cmp rdx, rbx;jne ;mov rax, qword [var_f0h];mov qword [rsp], rax": 2,
                "mov qword [var_8h], rax;mov rax, qword [var_88h];mov qword [var_10h], rax;mov rax, qword [arg_290h];mov qword [var_18h], rax": 2,
                "mov qword [var_10h], rax;mov rax, qword [arg_290h];mov qword [var_18h], rax;mov rax, qword [arg_298h];mov qword [var_20h], rax": 2,
                "mov rdx, qword [var_30h];mov qword [arg_2a0h], rax;mov qword [arg_2a8h], rdx;mov qword [arg_2b0h], rcx;mov rbp, qword [var_260h]": 2,
                "mov qword [var_8h], rax;mov qword [var_10h], ;mov qword [var_18h], 0;lea rax, [var_190h];mov qword [var_20h], rax": 2,
                "mov qword [var_18h], 0;lea rax, [var_190h];mov qword [var_20h], rax;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "jne ;mov rax, qword [arg_4d8h];mov qword [rsp], rax;mov rcx, qword [arg_4e0h];mov qword [var_8h], rcx": 1,
                "mov qword [var_158h], rax;mov rcx, qword [var_8h];mov qword [var_88h], rcx;mov rdx, qword [var_178h];mov rbx, qword [rdx + 8]": 1,
                "mov rax, qword [var_40h];mov qword [var_108h], rax;mov rcx, qword [var_38h];mov qword [var_1e8h], rcx;mov rdx, qword [var_30h]": 1,
                "lea rdi, [];cmp rdi, rbx;jne ;xor ebx, ebx;mov byte [var_7fh], bl": 1,
                "lea rbx, [];cmp rbx, rcx;jne ;mov qword [rsp], rcx;mov rax, qword [arg_168h]": 1,
                "jne ;cmp byte [], 0;je ;mov qword [], rbx;cmp dword [], 0": 1,
                "mov qword [], rbx;cmp dword [], 0;jne ;mov qword [], rax;mov qword [var_f8h], rax": 1,
                "mov rsi, rdx;bts rdx, 7;test bl, ;cmove rsi, rdx;mov qword [rsp], rcx": 1,
                "mov qword [rsp], rax;call fcn.004472f0;mov rax, qword [var_8h];test rax, rax;jne ": 1,
                "mov rdi, qword [arg_158h];mov qword [rsp], rdi;mov qword [var_8h], rsi;mov qword [var_10h], rbx;mov qword [var_18h], rcx": 1,
                "mov qword [var_10h], rbx;mov qword [var_18h], rcx;mov qword [var_20h], rax;mov qword [var_28h], rdx;mov rax, qword [var_f8h]": 1,
                "call fcn.005b0ba0;mov rax, qword [var_38h];mov qword [arg_170h], 5;lea rcx, [];mov qword [arg_178h], rcx": 1,
                "mov qword [rsp], rax;call fcn.00447520;mov rax, qword [var_10h];mov qword [var_68h], rax;mov rcx, qword [var_8h]": 1,
                "mov qword [rsp], rdx;mov rdx, qword [var_60h];mov qword [var_8h], rdx;call fcn.004475f0;mov rax, qword [var_10h]": 1,
                "mov qword [rsp], rax;mov qword [var_8h], rcx;call fcn.0053a1d0;mov rax, qword [var_18h];mov rcx, qword [var_10h]": 1,
                "call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [arg_160h];mov qword [rax], rcx;cmp dword [], 0": 1,
                "bts rsi, 7;test dil, ;cmove r8, rsi;mov rax, qword [rax + 8];mov qword [var_40h], r8": 1,
                "cmp r8, ;je ;cmp r8, ;je ;cmp r8, ": 1,
                "jne ;mov qword [], rax;mov qword [var_100h], rcx;mov qword [var_108h], rax;mov rcx, qword [var_100h]": 1,
                "mov qword [var_100h], rcx;mov qword [var_108h], rax;mov rcx, qword [var_100h];test rcx, rcx;je ": 1,
                "xor edx, edx;xor ebx, ebx;xor esi, esi;mov qword [var_98h], rax;mov qword [var_e8h], rcx": 1,
                "mov qword [var_e8h], rcx;mov qword [var_b8h], rdx;mov qword [var_78h], rbx;mov qword [var_88h], rsi;mov rdi, qword [var_a0h]": 1,
                "sub rsp, ;mov qword [var_28h], rbp;lea rbp, [var_28h];call fcn.0040e500;mov rax, qword [rsp]": 1,
                "mov qword [rax + 8], rcx;lea rcx, [];mov rdx, qword [var_10h];mov qword [rdx + ], rcx;cmp dword [], 0": 1,
                "mov qword [rdx + ], rax;mov rcx, qword [arg_38h];mov rax, qword [rcx + ];cmp dword [], 0;jne ": 1,
                "ret;mov rdi, qword [var_18h];call fcn.004580f0;jmp ;lea rdi, [rdx + ]": 1,
                "mov r8, rax;lea rax, [];call fcn.004580f0;mov rdi, r8;jmp ": 1,
                "call fcn.004580f0;mov rdi, r8;jmp ;mov r8, rdi;mov rdi, rsi": 1,
                "call fcn.004580f0;lea r8, [rsi + ];mov rdi, r8;mov rax, qword [var_20h];call fcn.004580f0": 1,
                "mov rax, qword [arg_38h];call fcn.004580f0;mov rcx, rax;jmp ;call fcn.00456090": 1,
                "mov qword [rsp], 0;mov rax, qword [arg_70h];mov qword [var_8h], rax;mov rax, qword [arg_78h];mov qword [var_10h], rax": 2,
                "ret;call fcn.00456090;jmp fcn.005f69f0;int3;int3": 2,
                "call fcn.00456090;jmp fcn.005f69f0;int3;int3;int3": 2,
                "lea rdx, [];cmp rdx, rax;jne ;mov rdx, qword [arg_78h];je ": 3,
                "mov qword [rsp], 0;xorps xmm0, xmm0;movups xmmword [var_8h], xmm0;mov qword [var_18h], rax;mov rax, qword [arg_78h]": 3,
                "jmp ;mov qword [arg_90h], 0;mov qword [arg_98h], rdx;xorps xmm0, xmm0;mov rcx, qword gs:[]": 1,
                "mov edx, 0;jmp ;call fcn.00456090;jmp fcn.005f6af0;int3": 2,
                "lea rbp, [var_98h];xorps xmm0, xmm0;movups xmmword [var_58h], xmm0;mov qword [var_68h], 0;mov rax, qword [arg_a8h]": 3,
                "mov qword [var_68h], 0;mov rax, qword [arg_a8h];mov qword [rsp], rax;mov rcx, qword [arg_b0h];mov qword [var_8h], rcx": 3,
                "mov qword [var_18h], rcx;mov rcx, qword [arg_c8h];mov qword [var_20h], rcx;call fcn.005f6af0;mov rax, qword [var_28h]": 3,
                "mov rcx, qword [arg_c8h];mov qword [var_20h], rcx;call fcn.005f6af0;mov rax, qword [var_28h];mov rcx, qword [var_30h]": 3,
                "mov rbx, qword [var_60h];mov rsi, qword [var_68h];mov qword [arg_d8h], rdx;mov qword [arg_e0h], rbx;mov qword [arg_e8h], rsi": 3,
                "ret;cmp rdx, 8;jne ;mov qword [var_50h], rax;mov qword [var_48h], rcx": 3,
                "lea rax, [rsp - ];cmp rax, qword [rcx + ];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [var_108h], rbp;lea rbp, [var_108h];mov rax, qword [arg_120h];test rax, rax;jne ": 3,
                "mov rcx, qword [arg_128h];mov rdx, qword [rcx];mov rbx, qword [rcx + 8];jne ;test rbx, rbx": 3,
                "jbe ;mov rax, qword [rdx];mov rcx, qword [rax + ];mov rdx, qword [rax + ];cmp rdx, ": 3,
                "mov qword [var_8h], rax;mov qword [var_10h], ;mov qword [var_18h], 0;lea rax, [var_a8h];mov qword [var_20h], rax": 3,
                "mov qword [var_10h], ;mov qword [var_18h], 0;lea rax, [var_a8h];mov qword [var_20h], rax;mov qword [var_28h], 1": 3,
                "call fcn.004580f0;jmp ;mov qword [var_90h], rax;mov qword [rsp], rcx;lea rax, []": 2,
                "jmp ;mov qword [var_90h], rax;mov qword [rsp], rcx;lea rax, [];mov qword [var_8h], rax": 2,
                "mov qword [var_8h], rax;mov qword [var_10h], rdx;call fcn.00402ce0;cmp byte [var_18h], 0;jne ": 2,
                "jmp ;mov rax, qword [var_90h];mov rcx, qword [rax + ];mov rax, qword [rax + ];mov qword [rsp], rax": 2,
                "lea rdi, [rdx + 8];mov rax, rcx;call fcn.004580f0;jmp ;mov rax, qword [rax + ]": 1,
                "mov qword [var_20h], rcx;mov rcx, qword [arg_80h];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov qword [var_28h], rcx;mov rcx, qword [arg_88h];mov qword [var_30h], rcx;call fcn.005f69f0;mov rax, qword [var_38h]": 1,
                "mov rdx, qword [var_48h];mov rbx, qword [arg_68h];mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], rdx": 1,
                "jmp fcn.005f73d0;int3;int3;int3;int3": 1,
                "call fcn.005f7540;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rdx, qword [rsp + ];mov qword [rsp + ], rax": 1,
                "mov rdx, qword [arg_b8h];mov qword [var_30h], rdx;mov qword [var_38h], 0;call fcn.0054f680;mov rax, qword [var_50h]": 2,
                "test rcx, rcx;jne ;mov qword [var_68h], rdx;mov qword [rsp], rdx;call fcn.005ab230": 2,
                "call fcn.00456090;jmp fcn.005f7540;int3;int3;int3": 2,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword [rsp + ];mov rcx, qword [rax + ];lea rdx, []": 4,
                "mov qword [rsp + ], rcx;call fcn.004124e0;mov rax, qword [rsp + ];movzx ecx, byte [rsp + ];mov rax, qword [rax]": 1,
                "mov rcx, qword [arg_78h];mov qword [var_8h], rcx;mov rbx, qword [arg_80h];mov qword [var_10h], rbx;mov rsi, qword [rdx]": 1,
                "cmp byte [var_18h], 0;jne ;mov rax, qword [arg_70h];mov rax, qword [rax + ];mov qword [var_40h], rax": 1,
                "xorps xmm0, xmm0;movups xmmword [var_8h], xmm0;call fcn.005ee030;mov rax, qword [var_20h];mov rcx, qword [var_18h]": 4,
                "call rax;mov rbp, qword [rsp + ];add rsp, ;ret;call fcn.00456090": 1,
                "call fcn.00456090;jmp fcn.005f7ca0;int3;int3;int3": 2,
                "mov rsi, qword [rdx];call rsi;cmp byte [var_18h], 0;jne ;movzx eax, byte [arg_110h]": 3,
                "mov qword [var_88h], rcx;lea rdx, [];mov qword [var_90h], rdx;mov qword [var_98h], rcx;mov qword [var_a0h], rax": 3,
                "mov qword [var_78h], rax;lea rcx, [];mov qword [rsp], rcx;lea rcx, [var_a8h];mov qword [var_8h], rcx": 2,
                "mov qword [rdi + 8], rcx;cmp dword [], 0;jne ;mov rcx, qword [rsp + ];mov qword [rdi], rcx": 1,
                "mov qword [rdi], rcx;movzx ecx, byte [rsp + ];mov byte [rdi + ], cl;cmp dword [], 0;jne ": 1,
                "mov qword [rdi + ], rax;lea rax, [];mov qword [rsp + ], rax;mov qword [rsp + ], rdi;mov rbp, qword [rsp + ]": 1,
                "mov qword [var_10h], 0;call fcn.0040e5a0;mov rax, qword [var_18h];mov qword [var_58h], rax;mov rcx, qword [arg_f0h]": 1,
                "mov rcx, qword [arg_f0h];mov rdx, qword [rcx + ];lea rdi, [var_80h];xorps xmm0, xmm0;lea rdi, [rdi - ]": 1,
                "test rcx, rcx;je ;mov rax, qword [var_88h];mov rdx, qword [rax + ];mov rbx, qword [rax + 8]": 1,
                "mov byte [var_3eh], r8b;mov r9, qword [rcx + 8];mov qword [var_40h], r9;mov rcx, qword [rcx];mov qword [var_70h], rcx": 1,
                "movzx eax, byte [rax + ];mov byte [var_3dh], al;mov r10, qword [arg_f8h];mov qword [rsp], r10;mov qword [var_8h], rsi": 1,
                "mov qword [var_48h], rdx;lea rbx, [];mov qword [rsp], rbx;mov rsi, qword [var_58h];mov qword [var_8h], rsi": 1,
                "mov qword [rdi + 8], rcx;cmp dword [], 0;jne ;mov qword [rdi], rdx;mov qword [rdi + ], rax": 1,
                "ret;mov rcx, rax;mov rax, rdx;call fcn.004580f0;lea rdx, [rdi + ]": 1,
                "call rax;mov rax, qword [var_18h];mov rcx, qword [var_10h];jmp ;xor edx, edx": 1,
                "lea rbx, [];mov qword [rsp], rbx;mov qword [var_8h], rdx;mov rdx, qword [arg_f0h];mov qword [var_10h], rdx": 1,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword [rsp + ];mov rax, qword [rax + ];lea rcx, []": 2,
                "mov rax, qword [rsp + ];mov qword [rsp + ], rax;mov rax, qword [rsp + ];mov qword [rsp + ], rax;call fcn.004137f0": 1,
                "mov qword [var_58h], rbp;lea rbp, [var_58h];mov rax, qword [arg_68h];mov rcx, qword [rax + ];lea rdx, []": 3,
                "mov rcx, qword [rax + ];lea rdx, [];mov qword [rsp], rdx;mov qword [var_8h], rcx;mov rcx, qword [arg_70h]": 3,
                "mov rax, qword [arg_78h];mov qword [var_18h], rax;call fcn.00413cb0;mov rax, qword [var_20h];mov rcx, qword [arg_88h]": 1,
                "mov rcx, qword [arg_90h];mov qword [rax + 8], rcx;mov byte [rax + ], 1;movzx ecx, byte [arg_80h];mov byte [rax + ], cl": 1,
                "movzx ecx, byte [arg_80h];mov byte [rax + ], cl;mov byte [rax + ], 0;cmp dword [], 0;jne ": 1,
                "jmp fcn.005f8670;int3;int3;int3;int3": 2,
                "lea rdx, [];mov qword [rsp], rdx;mov qword [var_8h], rcx;mov rcx, qword [arg_100h];mov qword [var_10h], rcx": 2,
                "mov qword [rsp], rdx;mov qword [var_8h], rcx;mov rcx, qword [arg_100h];mov qword [var_10h], rcx;mov rbx, qword [arg_108h]": 2,
                "mov rax, qword [rax];movzx ecx, byte [arg_128h];test cl, cl;jne ;mov rbp, qword [var_e8h]": 2,
                "jmp ;lea rdi, [rax + ];mov rax, qword [arg_120h];call fcn.004580f0;jmp ": 2,
                "lea rdi, [rax + ];mov rax, qword [arg_120h];call fcn.004580f0;jmp ;mov rax, qword [arg_100h]": 2,
                "ud2;call fcn.00456090;jmp fcn.005f8850;int3;int3": 1,
                "cmp sil, 0;movzx eax, byte [rax + ];cmp al, 0;cmp byte [rsp + ], 0;je ": 1,
                "mov rax, qword [arg_168h];jne ;mov rax, qword [rax + ];lea rdi, [var_f0h];xorps xmm0, xmm0": 1,
                "call fcn.0040fea0;mov rax, qword [var_60h];mov rcx, qword [var_68h];mov rdx, qword [var_88h];mov rbx, qword [var_f0h]": 2,
                "mov qword [rdx + rcx + 8], rsi;lea rdi, [rdx + rcx];cmp dword [], 0;jne ;mov qword [rdx + rcx], rbx": 2,
                "call fcn.00440d10;mov rdx, qword [var_28h];mov rax, qword [var_30h];mov rcx, qword [var_38h];lea r8, [rax + 1]": 3,
                "mov rbx, qword [var_f0h];test rbx, rbx;je ;mov rsi, qword [rbx];mov rbx, qword [rbx + 8]": 1,
                "mov rsi, qword [rbx];mov rbx, qword [rbx + 8];lea r8, [rcx + 1];cmp r8, rax;ja ": 1,
                "mov qword [var_58h], rcx;mov qword [var_50h], rbx;lea rbx, [];mov qword [rsp], rbx;mov qword [var_8h], rdx": 1,
                "mov rax, qword [var_30h];mov rcx, qword [var_38h];lea r8, [rax + 1];mov rbx, qword [var_50h];mov rsi, qword [var_78h]": 1,
                "jmp fcn.005f9530;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ];cmp rax, qword [rcx + ]": 1,
                "jne ;lea rdx, [];mov qword [rdi + 8], rdx;mov rax, qword [];lea rdx, [rdi + ]": 1,
                "xorps xmm0, xmm0;movups xmmword [var_70h], xmm0;mov qword [var_80h], 0;lea rdx, [];mov qword [rsp], rdx": 1,
                "mov qword [var_70h], 2;lea rcx, [];mov qword [var_78h], rcx;mov qword [var_80h], rax;lea rax, []": 1,
                "mov rbp, qword [var_b0h];add rsp, ;ret;lea rdi, [rdx + ];call fcn.004580f0": 1,
                "call fcn.004580f0;jmp ;mov rdi, rdx;call fcn.004580f0;jmp ": 1,
                "jmp ;mov rdi, rdx;call fcn.004580f0;jmp ;mov rbx, rdi": 1,
                "sub rsp, ;mov qword [var_78h], rbp;lea rbp, [var_78h];mov qword [arg_b8h], 0;xorps xmm0, xmm0": 2,
                "movups xmmword [arg_c0h], xmm0;movups xmmword [arg_d0h], xmm0;mov rax, qword [arg_90h];mov qword [var_40h], rax;lea rcx, []": 2,
                "mov rdx, qword [var_48h];mov qword [var_50h], rdx;mov rdx, qword [var_40h];mov qword [var_58h], rdx;mov qword [var_60h], rdx": 2,
                "call rax;mov rcx, qword [var_10h];mov rax, qword [var_18h];jmp ;call fcn.00456090": 1,
                "mov rax, qword [arg_70h];mov qword [rsp], rax;mov rax, qword [arg_78h];mov qword [var_8h], rax;call fcn.005edc20": 5,
                "mov rbp, qword [var_38h];add rsp, ;ret;mov rcx, qword [arg_60h];mov rbx, qword [arg_68h]": 2,
                "add rsp, ;ret;mov rcx, qword [arg_60h];mov rbx, qword [arg_68h];mov rcx, qword [rcx + ]": 2,
                "mov rax, qword [var_30h];mov rcx, qword [var_20h];mov rdx, qword [var_28h];mov qword [arg_80h], rcx;mov qword [arg_88h], rdx": 2,
                "call rdx;mov rbp, qword [var_38h];add rsp, ;ret;call fcn.0042e8e0": 3,
                "mov rax, qword [rsp + ];mov rcx, qword [rax + ];mov rdx, qword [rax + 8];mov rax, qword [rax];movzx ebx, byte [rsp + ]": 2,
                "movzx ebx, byte [rsp + ];mov rsi, qword [rsp + ];mov qword [rsi], rax;mov qword [rsi + ], rcx;test rbx, rbx": 2,
                "mov qword [rsp + ], 0;mov rax, qword [rsp + ];mov qword [rsp], rax;movups xmm0, xmmword [rsp + ];movups xmmword [rsp + 8], xmm0": 1,
                "jmp ;lea rdi, [rsi + 8];mov rcx, rax;mov rax, rdx;call fcn.004580f0": 1,
                "lea rdi, [rsi + 8];mov rcx, rax;mov rax, rdx;call fcn.004580f0;mov rax, rcx": 2,
                "lea rbp, [var_70h];call fcn.0040e500;mov rax, qword [rsp];mov qword [var_50h], rax;lea rcx, []": 1,
                "cmp dword [], 0;jne ;mov qword [rdi + ], rax;mov rsi, qword [var_50h];mov qword [rdi + ], rsi": 1,
                "lea rax, [];mov qword [rdi + 8], rax;mov eax, dword [arg_88h];mov dword [rsp], eax;call fcn.0040ab60": 1,
                "mov qword [rdi + 8], rax;mov eax, dword [arg_88h];mov dword [rsp], eax;call fcn.0040ab60;mov rax, qword [var_8h]": 1,
                "call fcn.004580f0;jmp ;lea rcx, [rdi + ];mov rsi, rdi;mov rdi, rcx": 1,
                "mov rsi, rdi;mov rdi, rcx;call fcn.004580f0;mov rdi, rsi;jmp ": 3,
                "cmp dword [rcx], ;jne ;cmp byte [rcx + 4], ;je ;cmp rbx, 6": 2,
                "jne ;cmp byte [rcx + 4], ;je ;cmp rbx, 6;jne ": 2,
                "cmp rcx, rbx;jne ;mov rax, qword [rax];mov dword [arg_48h], eax;mov rbp, qword [var_30h]": 2,
                "call rax;mov rax, qword [var_20h];mov rcx, qword [var_28h];lea rbx, [];cmp rbx, rax": 2,
                "lea rbx, [];cmp rbx, rax;jne ;mov eax, dword [rcx];mov dword [arg_48h], eax": 2,
                "mov eax, dword [rcx];mov dword [arg_48h], eax;mov rbp, qword [var_30h];add rsp, ;ret": 2,
                "mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax;mov qword [var_10h], ;xorps xmm0, xmm0": 2,
                "mov qword [var_8h], rdx;call fcn.0042f900;ud2;call fcn.00456090;jmp fcn.005fb050": 2,
                "lea rsi, [];cmp rsi, rbx;jne ;mov rdx, qword [rcx + 8];mov rbx, qword [rcx]": 2,
                "jne ;mov rdi, qword [rsp + ];cmp dword [rdi], ;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "je ;movups xmmword [rsp + ], xmm0;mov qword [rsp + ], 0;cmp r8, rsi;jne ": 1,
                "mov r8, qword [r8];mov qword [rsp + ], r8;mov qword [rsp + ], r9;mov qword [rsp + ], r10;jne ": 1,
                "jne ;mov qword [rsp + ], rax;mov qword [rsp + ], rcx;mov rdx, qword [rsp + ];mov qword [rsp], rdx": 1,
                "mov qword [rsp], rax;mov qword [rsp + 8], rdx;mov qword [rsp + ], rbx;mov byte [rsp + ], 0;mov rdx, qword [rcx]": 1,
                "lea rax, [];mov qword [var_40h], rax;mov rax, qword [var_20h];lea rcx, [];add rax, rcx": 1,
                "mov rax, qword [var_10h];mov rcx, qword [var_18h];mov rdx, qword [var_28h];mov qword [rdx + ], rax;cmp dword [], 0": 1,
                "mov byte [var_18h], 0;call fcn.004b99f0;mov rax, qword [var_20h];mov qword [var_40h], rax;mov rcx, qword [arg_b8h]": 2,
                "mov rbx, qword [arg_c8h];mov qword [var_10h], rbx;call fcn.004b8060;mov rax, qword [var_18h];mov qword [var_58h], rax": 2,
                "sar rcx, ;sar rdx, ;sub rdx, rcx;mov rax, qword [var_58h];mov rcx, rax": 2,
                "mov rcx, rax;shr rax, 1;movabs rbx, ;mov rsi, rdx;mul rbx": 2,
                "sar rcx, ;sar rax, 5;sub rax, rcx;mov rcx, qword [var_18h];mov rdx, rax": 2,
                "movups xmmword [var_78h], xmm0;movups xmm0, xmmword [];movups xmmword [var_88h], xmm0;movups xmm0, xmmword [];movups xmmword [var_98h], xmm0": 2,
                "movups xmm0, xmmword [];movups xmmword [var_98h], xmm0;mov rdx, qword [var_40h];mov qword [var_68h], rdx;mov rdx, qword [var_48h]": 2,
                "mov rbx, rdx;imul rcx;sar rdx, ;sar rcx, ;sub rdx, rcx": 2,
                "ret;mov rax, qword [];mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 1,
                "mov qword [var_8h], rcx;mov qword [var_10h], rbx;mov qword [var_18h], rsi;mov qword [var_20h], rdi;mov qword [var_28h], r8": 2,
                "int3;int3;mov rax, qword [rsp + 8];mov rcx, qword [rax + ];mov rdx, qword [rax + 8]": 2,
                "mov qword [rcx + ], ;movsd xmm0, qword [];movsd qword [rsp], xmm0;call fcn.0040abe0;mov rax, qword [rsp + 8]": 1,
                "add rcx, rbx;mov rbx, qword [arg_20h];mov qword [rsp], rbx;and rdx, ;movsxd rdx, edx": 2,
                "sub rdx, rcx;xorps xmm0, xmm0;cvtsi2sd xmm0, rdx;movsd qword [var_8h], xmm0;call fcn.005fc3f0": 2,
                "add rsp, ;ret;mov rdx, rcx;mov rcx, qword [arg_30h];jmp ": 2,
                "movsd qword [rsp], xmm0;call fcn.0040abe0;mov rax, qword [var_8h];mov rcx, qword [arg_40h];mov qword [rcx + ], 2": 3,
                "mov rax, qword [var_8h];mov rcx, qword [arg_40h];mov qword [rcx + ], 2;lea rdx, [];mov qword [rcx + ], rdx": 6,
                "mov qword [rsp], rax;call fcn.0040abe0;mov rax, qword [var_8h];mov rcx, qword [arg_40h];mov qword [rcx + ], 2": 3,
                "call fcn.004580f0;cmp rbx, 0;jmp ;movsd qword [rsp], xmm0;call fcn.004713b0": 2,
                "call fcn.004713b0;movsd xmm1, qword [var_8h];movsd xmm0, qword [arg_48h];jmp ;cmp byte [], 0": 2,
                "cvttsd2si rax, xmm1;jmp ;movsd qword [rsp], xmm0;call fcn.00471410;movsd xmm1, qword [var_8h]": 2,
                "jmp ;movsd qword [rsp], xmm0;call fcn.00471410;movsd xmm1, qword [var_8h];movsd xmm0, qword [arg_48h]": 2,
                "sar rdx, ;mov rsi, rbx;sar rbx, ;sub rdx, rbx;lea rbx, [rdx + rcx]": 3,
                "sub rdx, rbx;lea rbx, [rdx + rcx];imul rdi, rdx, ;sub rsi, rdi;lea rcx, [rdx + rcx]": 3,
                "lea rcx, [rdx + rcx];lea rcx, [rcx - 1];test rsi, rsi;cmovl rbx, rcx;lea rcx, [rsi + ]": 3,
                "mov rax, qword [var_60h];mov rcx, qword [var_58h];mov qword [arg_88h], rcx;mov qword [arg_90h], rax;mov qword [arg_98h], 0": 2,
                "ret;cmp rdx, ;jge ;mov rsi, rdx;mov rbx, rcx": 2,
                "movups xmm0, xmmword [var_30h];movups xmmword [var_70h], xmm0;movups xmm0, xmmword [var_40h];movups xmmword [var_80h], xmm0;movups xmm0, xmmword [var_50h]": 2,
                "mov qword [rsp], rax;lea rax, [var_70h];mov qword [var_8h], rax;call fcn.0040aa50;mov rax, qword [var_10h]": 2,
                "movups xmm0, xmmword [var_c0h];movups xmmword [var_80h], xmm0;movups xmm0, xmmword [var_d0h];movups xmmword [var_90h], xmm0;movups xmm0, xmmword [var_e0h]": 2,
                "movups xmm0, xmmword [var_e0h];movups xmmword [var_a0h], xmm0;movups xmm0, xmmword [var_f0h];movups xmmword [var_b0h], xmm0;movups xmm0, xmmword [var_80h]": 2,
                "movups xmmword [var_f0h], xmm0;jmp ;mov rax, qword [arg_150h];mov qword [rsp], rax;lea rax, []": 2,
                "lea rax, [];mov qword [var_8h], rax;mov qword [var_10h], 9;movups xmmword [var_18h], xmm0;movups xmmword [var_28h], xmm0": 2,
                "jmp ;lea rdi, [rdx + 8];call fcn.004580f0;jmp ;cmp dword [rcx], ": 2,
                "mov qword [var_c8h], rbp;lea rbp, [var_c8h];xorps xmm0, xmm0;movups xmmword [var_a8h], xmm0;movups xmmword [var_b8h], xmm0": 3,
                "movsxd rcx, ecx;add rcx, rdx;movabs rdx, ;lea rax, [rdx + rcx];mov qword [var_58h], rax": 2,
                "jb ;movsd xmm2, qword [];ucomisd xmm2, xmm1;jb ;movsd xmm2, qword []": 1,
                "mov qword [var_10h], rax;movsd xmm1, qword [var_80h];cvttsd2si rax, xmm1;mov qword [var_18h], rax;movsd xmm1, qword [var_78h]": 1,
                "shr rcx, ;movabs rbx, ;add rcx, rbx;and rdx, ;mov rcx, qword gs:[]": 1,
                "lea rbp, [var_80h];mov rax, qword [];mov qword [rsp], rax;mov rax, qword [arg_90h];mov qword [var_8h], rax": 1,
                "cmp rcx, 3;jbe ;mov rsi, qword [rax + ];mov rdi, qword [rax + ];cmp rcx, 4": 1,
                "mov qword [rsp], 0;mov qword [var_8h], rbx;mov qword [var_10h], rdx;mov qword [var_18h], rdi;mov qword [var_20h], rsi": 1,
                "mov qword [var_30h], rcx;call fcn.00444ae0;mov rax, qword [var_40h];mov rcx, qword [var_38h];mov rdx, qword []": 1,
                "mov qword [var_70h], rcx;mov qword [var_58h], rax;xor esi, esi;jmp ;mov rdi, qword [var_78h]": 1,
                "test rdx, rdx;jne ;bt rcx, ;jae ;mov rax, rcx": 1,
                "add rsp, ;ret;mov rdx, rax;mov rax, rcx;mov rcx, rdx": 1,
                "mov rdi, qword [var_8h];cmp dword [], 0;jne ;mov rcx, qword [arg_120h];mov qword [rdi], rcx": 2,
                "call fcn.0040ac60;mov rax, qword [var_10h];mov qword [var_b8h], 3;lea rcx, [];mov qword [var_c0h], rcx": 2,
                "mov rcx, qword [var_18h];mov rdx, qword [var_88h];mov rbx, qword [rdx + ];mov rbx, qword [rbx + ];mov qword [rsp], rdx": 2,
                "mov qword [var_10h], 7;mov qword [var_18h], rax;mov qword [var_20h], rcx;mov qword [var_28h], ;mov byte [var_30h], 0": 2,
                "mov rcx, qword [arg_120h];mov qword [rsp], rcx;lea rcx, [];mov qword [var_8h], rcx;mov qword [var_10h], 3": 1,
                "mov qword [var_c8h], rbp;lea rbp, [var_c8h];mov rax, qword [arg_d8h];mov rcx, qword [rax];mov rcx, qword gs:[]": 1,
                "mov qword [rdi + 8], rax;mov rax, qword [arg_d8h];mov rcx, qword [rax + ];mov rdx, qword [rcx + ];mov qword [rsp], rax": 1,
                "mov rcx, qword [rax];mov rcx, qword [rcx + ];lea rdx, [];mov ebx, 5;mov qword [rsp], rbx": 1,
                "cmp rax, 5;jne ;mov qword [arg_f8h], rax;mov qword [arg_100h], rcx;mov qword [arg_108h], rdx": 1,
                "jmp ;mov rdx, rdi;mov rdi, rsi;mov rax, rcx;call fcn.004580f0": 1,
                "lea rax, [];mov rdi, rdx;jmp ;lea r8, [rdi + ];mov rdx, rdi": 1,
                "mov qword [var_80h], rdx;mov rdx, qword [arg_d8h];mov qword [var_88h], rdx;mov rdx, qword [arg_e0h];mov qword [var_90h], rdx": 2,
                "mov qword [var_98h], rdx;lea rdx, [];mov qword [rsp], rdx;lea rdx, [var_68h];mov qword [var_8h], rdx": 2,
                "lea rdx, [];mov qword [rsp], rdx;lea rdx, [var_68h];mov qword [var_8h], rdx;call fcn.0040aa50": 2,
                "mov rcx, qword [var_18h];mov rdx, qword [var_40h];mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 1,
                "call fcn.0040abe0;mov rax, qword [var_8h];mov qword [var_50h], 2;lea rcx, [];mov qword [var_58h], rcx": 1,
                "mov qword [var_18h], rcx;mov qword [var_20h], rax;mov qword [var_28h], 0;mov byte [var_30h], 0;mov rax, qword [rbx]": 6,
                "jne ;mov rcx, qword [arg_70h];mov qword [rax + 8], rcx;mov rdx, qword [var_48h];mov qword [rax + ], rdx": 2,
                "mov qword [var_18h], rcx;mov qword [var_20h], 8;mov qword [var_28h], 0;mov qword [var_30h], rax;mov qword [var_38h], 0": 2,
                "mov qword [rsp], rdx;lea rsi, [];mov qword [var_8h], rsi;mov qword [var_10h], 6;mov qword [var_18h], rax": 2,
                "mov rax, qword [rbx];mov rdx, rbx;call rax;mov rax, qword [var_48h];mov qword [arg_b0h], rax": 2,
                "mov rcx, qword [arg_d8h];mov qword [var_88h], rcx;mov rcx, qword [arg_e0h];mov qword [var_90h], rcx;mov rcx, qword [arg_e8h]": 2,
                "mov rax, qword [var_10h];mov rcx, qword [var_18h];mov rdx, qword [var_48h];mov qword [rdx + ], rax;cmp dword [], 0": 2,
                "mov qword [var_68h], rbx;mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], rbx;call fcn.0060a810": 2,
                "mov qword [rsp], rax;call fcn.0040abe0;mov rax, qword [var_8h];mov qword [var_58h], 2;lea rcx, []": 1,
                "mov qword [var_28h], 0;mov byte [var_30h], 0;mov rax, qword [rdx];call rax;xorps xmm0, xmm0": 2,
                "movups xmmword [var_58h], xmm0;mov qword [var_68h], 0;lea rax, [];mov qword [rsp], rax;lea rax, [var_58h]": 1,
                "mov qword [arg_f8h], rax;mov rbp, qword [var_a8h];add rsp, ;ret;lea rdi, [rdx + ]": 1,
                "call fcn.004580f0;lea rdi, [rdx + ];mov rax, qword [var_50h];call fcn.004580f0;mov rdi, rdx": 1,
                "mov qword [var_10h], rdx;mov qword [var_18h], rbx;mov rcx, qword [arg_198h];mov qword [var_20h], rcx;mov qword [var_28h], rdx": 1,
                "mov qword [var_8h], rax;mov qword [var_10h], rbx;mov qword [var_18h], rcx;mov rax, qword [rdx];call rax": 1,
                "mov qword [var_10h], rbx;mov qword [var_18h], rcx;mov rax, qword [rdx];call rax;mov rax, qword [var_30h]": 1,
                "mov qword [arg_1b0h], rbx;mov qword [arg_1b8h], rcx;mov qword [arg_1c0h], rax;mov rbp, qword [var_150h];add rsp, ": 1,
                "call fcn.005ac850;movups xmm0, xmmword [var_38h];movups xmmword [var_110h], xmm0;movups xmm0, xmmword [var_48h];movups xmmword [var_120h], xmm0": 1,
                "movups xmmword [var_110h], xmm0;movups xmm0, xmmword [var_48h];movups xmmword [var_120h], xmm0;movups xmm0, xmmword [var_58h];movups xmmword [var_130h], xmm0": 1,
                "movups xmm0, xmmword [var_48h];movups xmmword [var_120h], xmm0;movups xmm0, xmmword [var_58h];movups xmmword [var_130h], xmm0;movups xmm0, xmmword [var_68h]": 1,
                "ud2;call fcn.00456090;jmp fcn.005fe910;int3;int3": 1,
                "jne ;mov qword [rdx + ], rcx;mov rax, qword [arg_a8h];mov rcx, qword [rax + 8];mov rdx, qword [rax]": 2,
                "mov qword [rsp], rax;lea rax, [var_60h];mov qword [var_8h], rax;call fcn.0040aa50;mov rax, qword [var_18h]": 1,
                "jne ;mov rcx, qword [arg_a0h];mov qword [rax + 8], rcx;mov rdx, qword [var_40h];mov qword [rax + ], rdx": 1,
                "lea rdi, [rax + 8];mov rcx, rax;mov rax, qword [arg_a0h];call fcn.004580f0;lea rdi, [rcx + ]": 1,
                "lea rbx, [];cmp rbx, rcx;jne ;mov rbx, qword [rax];mov qword [var_38h], rbx": 1,
                "movups xmm0, xmmword [var_40h];movups xmmword [var_8h], xmm0;movups xmm0, xmmword [var_50h];movups xmmword [var_18h], xmm0;movups xmm0, xmmword [var_60h]": 1,
                "setne byte [arg_88h];mov rbp, qword [var_70h];add rsp, ;ret;mov qword [var_38h], 0": 1,
                "lea rax, [rsp - ];cmp rax, qword [rcx + ];jbe ;sub rsp, ;mov qword [var_398h], rbp": 2,
                "mov r10, qword [rbx + ];mov r11, qword [rbx + 8];je ;cmp r8d, ;jne ": 2,
                "movzx ecx, byte [arg_3e0h];test cl, cl;je ;mov rcx, qword [rax];cmp qword [rcx + ], rax": 2,
                "test cl, cl;je ;mov rcx, qword [rax];cmp qword [rcx + ], rax;sete cl": 2,
                "mov rcx, qword [arg_3d0h];mov qword [var_330h], rcx;mov rcx, qword [arg_3d8h];mov qword [var_338h], rcx;mov rax, qword [rax]": 2,
                "mov rdx, qword [var_1e8h];mov rdi, rsp;lea rsi, [var_2f8h];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 2,
                "mov byte [arg_3e0h], cl;mov rax, qword [r8 + 8];mov rcx, qword [r8];mov qword [rsp], rbx;mov qword [var_8h], rcx": 2,
                "mov rbp, qword [rbp];mov rax, qword [var_1d8h];mov rcx, qword [var_1d0h];mov qword [var_350h], rcx;mov qword [var_358h], rax": 2,
                "mov qword [var_360h], rax;mov rax, qword [var_1c8h];mov rcx, qword [var_1c0h];mov qword [var_378h], rcx;mov qword [var_380h], rax": 2,
                "xor ecx, ecx;jmp ;cmp r8d, ;jne ;mov qword [var_188h], 0": 2,
                "jne ;mov rcx, qword [rbx];mov qword [var_1f8h], rcx;movups xmm1, xmmword [rbx + 8];movups xmmword [var_200h], xmm1": 1,
                "mov qword [var_18h], rdi;mov rax, qword [arg_3c8h];mov qword [var_20h], rax;mov qword [var_28h], rcx;mov rax, qword [arg_3d8h]": 1,
                "mov qword [var_20h], rax;mov qword [var_28h], rcx;mov rax, qword [arg_3d8h];mov qword [var_30h], rax;call fcn.00414d20": 1,
                "lea rbp, [var_208h];mov rax, qword [arg_218h];mov rcx, qword [rax + ];mov rbx, qword [rax + ];test rbx, rbx": 1,
                "call fcn.005fdae0;mov rax, qword [var_28h];mov rcx, qword [var_20h];mov rdx, qword [var_30h];mov qword [var_a8h], rcx": 1,
                "mov qword [var_a8h], rcx;mov qword [var_b0h], rax;mov qword [var_b8h], rdx;mov qword [arg_238h], rcx;mov qword [arg_240h], rax": 1,
                "movups xmm1, xmmword [var_1b8h];movups xmmword [var_148h], xmm1;jne ;cmp qword [var_148h], 0;je ": 1,
                "mov rdx, qword [var_150h];test rdx, rdx;je ;mov qword [rsp], rax;mov rax, qword [arg_220h]": 1,
                "test rdx, rdx;je ;mov qword [rsp], rax;mov rax, qword [arg_220h];mov qword [var_8h], rax": 1,
                "mov rcx, qword [var_28h];mov rbx, qword [var_30h];mov qword [var_a8h], rax;mov qword [var_b0h], rcx;mov qword [var_b8h], rbx": 1,
                "movups xmm0, xmmword [rcx + ];movups xmmword [var_180h], xmm0;jne ;mov rax, qword [var_158h];mov qword [rsp], rax": 1,
                "mov rax, qword [arg_220h];mov qword [var_38h], rax;mov rax, qword [arg_228h];mov qword [var_40h], rax;mov rax, qword [arg_230h]": 1,
                "mov qword [var_48h], rax;call fcn.005fe910;mov rax, qword [var_60h];mov rcx, qword [var_58h];mov rdx, qword [var_50h]": 1,
                "mov rdx, qword [var_50h];mov qword [var_a8h], rdx;mov qword [var_b0h], rcx;mov qword [var_b8h], rax;mov rcx, qword gs:[]": 1,
                "lea rbp, [var_d0h];mov rax, qword [arg_e0h];mov qword [rsp], rax;call fcn.005ff1a0;cmp byte [var_8h], 0": 1,
                "mov rcx, qword [var_88h];jmp ;mov rax, qword [rax + ];test rax, rax;je ": 1,
                "movups xmmword [var_28h], xmm0;call fcn.005ac850;movups xmm0, xmmword [var_38h];movups xmmword [var_90h], xmm0;movups xmm0, xmmword [var_48h]": 2,
                "lea rcx, [var_90h];mov qword [var_8h], rcx;call fcn.0040aa50;mov rax, qword [var_18h];mov rcx, qword [var_10h]": 1,
                "jmp ;lea rdi, [rdx + 8];call fcn.004580f0;jmp ;mov byte [arg_100h], 0": 1,
                "mov qword [rsp + ], rdx;mov qword [rsp + ], rcx;mov qword [rsp + ], rax;ret;mov rcx, rdx": 1,
                "mov qword [rsp + ], rax;ret;mov rcx, rdx;mov rdx, rbx;jmp ": 1,
                "mov qword [var_30h], rbp;lea rbp, [var_30h];mov rax, qword [arg_40h];cmp qword [rax + 8], 0;je ": 2,
                "mov rbx, qword [arg_40h];mov rsi, qword [rbx];mov qword [rsp], rsi;mov qword [var_8h], rdx;mov qword [var_10h], rcx": 2,
                "jmp fcn.00600b00;int3;int3;int3;int3": 1,
                "mov rax, qword [arg_d0h];mov qword [rsp], rax;call fcn.00600b00;mov rax, qword [var_8h];mov rcx, qword [rax + 8]": 2,
                "mov rcx, qword [rax + 8];mov rax, qword [rax + ];mov rdx, qword [arg_e0h];cmp rax, rdx;jne ": 2,
                "mov rax, qword [rax + ];test byte [rax], al;lea rsi, [rax + ];lea rdi, [rsp + ];mov qword [rsp - ], rbp": 2,
                "mov rbp, qword [rbp];call fcn.005ac3a0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov qword [rsp + ], rcx": 2,
                "call fcn.0040e500;mov rax, qword [rsp];mov qword [var_18h], rax;lea rcx, [];mov qword [rsp], rcx": 3,
                "mov rax, qword [rsp];mov qword [var_18h], rax;lea rcx, [];mov qword [rsp], rcx;call fcn.0040d880": 3,
                "jne ;mov rcx, qword [arg_30h];mov qword [rdi], rcx;mov qword [rdi + ], 6;lea rdx, [rdi + 8]": 3,
                "cmp dword [], 0;jne ;lea rcx, [];mov qword [rdi + 8], rcx;mov qword [var_10h], rdi": 3,
                "call fcn.0040d880;mov rax, qword [var_8h];mov rcx, qword [arg_48h];mov qword [rax + ], rcx;cmp dword [], 0": 3,
                "and rcx, ;cmp rcx, ;sete byte [rax + ];mov ecx, 8;mov edx, ": 3,
                "mov rax, qword [arg_70h];mov rcx, qword [arg_68h];mov rdx, qword [arg_60h];mov rbx, rax;and rax, ": 2,
                "mov rbx, rax;and rax, ;cmp rax, ;je ;mov qword [var_38h], rbx": 2,
                "mov qword [var_10h], r8;call fcn.0048d320;mov rax, qword [var_18h];mov rcx, qword [var_20h];mov rax, qword [rax + ]": 3,
                "mov qword [rsp], rcx;call rax;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov rbx, qword [var_28h];mov rsi, qword [var_30h];test rcx, rcx;jne ;mov rax, qword [var_58h]": 2,
                "mov qword [rdx], rax;cmp dword [], 0;jne ;mov qword [rdx + 8], rcx;mov rax, qword [var_50h]": 2,
                "cmp dword [], 0;jne ;mov qword [rdx + 8], rcx;mov rax, qword [var_50h];mov rax, qword [rax + ]": 2,
                "mov qword [rsp], rax;mov qword [var_8h], rdx;mov qword [var_10h], rcx;call fcn.005f59d0;mov rax, qword [var_18h]": 1,
                "add rsp, ;ret;lea rdi, [rsi + 8];mov rcx, rax;mov rax, rdx": 1,
                "mov rcx, qword [arg_c0h];jmp ;mov qword [rsp], rdx;mov qword [var_8h], rsi;lea rax, []": 1,
                "cmp rdx, rbx;jne ;mov rax, qword [rcx];mov rdx, qword [rcx + ];mov rcx, qword [rcx + 8]": 1,
                "jne ;mov rcx, qword [arg_40h];mov qword [rdi], rcx;mov qword [rdi + ], 6;lea rdx, [rdi + 8]": 2,
                "lea rax, [];mov qword [rdi + 8], rax;mov rbx, qword [];lea rsi, [rdi + ];cmp dword [], 0": 2,
                "jne ;mov qword [rdi + ], rbx;mov rbx, qword [var_28h];mov qword [rdi + ], rbx;mov byte [rdi + ], 1": 2,
                "mov qword [var_20h], rdi;mov rax, qword [];cmp dword [], 0;jne ;mov qword [rdi + ], rax": 2,
                "mov qword [rdi + ], rax;mov rax, qword [arg_48h];mov qword [rsp], rax;mov rax, qword [arg_50h];mov qword [var_8h], rax": 2,
                "call fcn.004580f0;jmp ;mov rdi, rsi;call fcn.004580f0;jmp ": 2,
                "call fcn.004580f0;mov rdi, rbx;jmp ;mov rax, qword [arg_40h];call fcn.004580f0": 2,
                "lea rbp, [var_40h];mov rax, qword [arg_60h];mov rcx, rax;and rax, ;cmp rax, ": 4,
                "jne ;mov rax, qword [arg_50h];mov qword [rsp], rax;mov rdx, qword [arg_58h];mov qword [var_8h], rdx": 2,
                "mov rdx, qword [arg_58h];mov qword [var_8h], rdx;mov qword [var_10h], rcx;call fcn.0048d320;mov rax, qword [var_18h]": 2,
                "jne ;mov rax, qword [arg_50h];mov qword [rdi], rax;mov rax, qword [arg_58h];mov qword [rdi + 8], rax": 4,
                "mov rax, qword [var_30h];mov qword [rdi + ], rax;mov rax, qword [var_28h];mov qword [rdi + ], rax;mov qword [arg_68h], rdi": 2,
                "mov rdi, rdx;jmp ;mov qword [rsp], rax;call fcn.0040abe0;mov rax, qword [var_8h]": 4,
                "mov rcx, qword [rcx];mov qword [rsp], rcx;mov qword [rsp + 8], rdx;mov qword [rsp + ], rax;mov rax, qword [rsp + ]": 1,
                "mov qword [rsp + ], rdx;mov byte [rsp + ], 1;call fcn.00489ee0;mov rax, qword [rsp + ];mov rax, qword [rax]": 1,
                "call fcn.005f59d0;mov rax, qword [rsp + ];mov rcx, qword [rsp + ];mov rdx, qword [rsp + ];mov qword [rsp + ], rdx": 1,
                "mov qword [rsp + ], rdx;mov qword [rsp + ], rax;mov qword [rsp + ], rcx;lea rax, [];mov qword [rsp], rax": 1,
                "mov qword [var_8h], rcx;mov rdx, qword [arg_80h];mov qword [var_10h], rdx;mov rbx, qword [arg_88h];mov qword [var_18h], rbx": 2,
                "mov rax, qword [var_30h];mov rcx, qword [var_28h];mov rdx, qword [var_20h];cmp byte [var_38h], 0;jne ": 2,
                "ret;mov qword [var_48h], rax;mov qword [var_58h], rcx;mov qword [var_50h], rdx;mov rax, qword [arg_70h]": 2,
                "mov qword [var_8h], rax;mov rax, qword [var_48h];mov qword [var_10h], rax;mov qword [var_18h], rdx;mov qword [var_20h], rbx": 2,
                "mov rax, qword [arg_88h];cmp rax, 6;jne ;mov rcx, qword [arg_80h];cmp dword [rcx], ": 3,
                "mov qword [rsp], rcx;mov qword [var_8h], rdx;mov qword [var_10h], rax;call fcn.0048a290;mov rax, qword [var_18h]": 3,
                "jne ;mov rcx, qword [rdx + 8];mov rbx, qword [rdx + ];mov rdx, qword [rdx];mov qword [rsp], rdx": 3,
                "cmp dword [], 0;jne ;mov qword [rdx + 8], rax;mov qword [rdx + ], ;mov rcx, qword gs:[]": 1,
                "mov qword [var_8h], rcx;mov qword [var_10h], rdx;call fcn.005f59d0;mov rdx, qword [var_18h];mov rax, qword [var_28h]": 2,
                "mov qword [var_18h], rax;mov rcx, qword [arg_88h];mov qword [var_20h], rcx;call fcn.0048b150;mov rax, qword [var_30h]": 2,
                "mov rcx, qword [arg_88h];mov qword [var_20h], rcx;call fcn.0048b150;mov rax, qword [var_30h];mov rcx, qword [var_38h]": 2,
                "mov rax, qword [var_30h];mov rcx, qword [var_38h];mov rdx, qword [var_28h];test rdx, rdx;je ": 2,
                "mov rcx, qword [var_38h];mov rdx, qword [var_28h];test rdx, rdx;je ;mov qword [rsp], rdx": 2,
                "test rdx, rdx;je ;mov qword [rsp], rdx;mov qword [var_8h], rax;mov rcx, qword gs:[]": 1,
                "mov qword [var_18h], rcx;call fcn.004137f0;mov rax, qword [var_20h];mov rcx, qword [rax + ];movzx edx, byte [var_28h]": 1,
                "mov rbx, qword [rax];mov rax, qword [rax + 8];mov rsi, qword [var_48h];mov qword [rsi], rbx;mov qword [rsi + ], rcx": 1,
                "mov qword [rsi + 8], rax;mov qword [arg_90h], rcx;mov rbp, qword [var_68h];add rsp, ;ret": 1,
                "call fcn.00489000;mov rcx, qword [var_28h];mov rax, qword [var_30h];mov rdx, qword [arg_60h];jmp ": 2,
                "call fcn.00456090;jmp fcn.00604540;int3;int3;int3": 2,
                "je ;mov rdx, qword [arg_58h];mov rsi, qword [arg_50h];mov qword [rsp], rsi;mov qword [var_8h], rdx": 2,
                "mov qword [var_18h], rax;mov rax, qword [arg_70h];mov qword [var_20h], rax;call fcn.0048b150;mov rax, qword [var_38h]": 2,
                "call fcn.00489000;mov rsi, qword [var_18h];mov rdx, qword [var_20h];mov rbx, qword [var_28h];mov rax, qword [arg_70h]": 2,
                "cmp rax, ;je ;mov rax, qword [arg_108h];mov rdx, qword [arg_100h];mov qword [rsp], rdx": 3,
                "mov rbp, qword [rbp];mov rcx, qword [var_88h];mov qword [arg_128h], rcx;lea rdi, [arg_130h];lea rsi, [var_90h]": 2,
                "jmp ;call fcn.00456090;jmp fcn.006048b0;int3;int3": 2,
                "call fcn.00458f1c;mov rbp, qword [rbp];cmp al, 0;jne ;mov byte [arg_168h], 0": 3,
                "mov qword [var_18h], rax;mov rax, qword [arg_148h];mov qword [var_20h], rax;call fcn.00604700;mov rax, qword [var_d0h]": 3,
                "mov rax, qword [rax + ];mov qword [rsp], rsi;call rax;mov rax, qword [var_8h];mov rcx, qword [arg_150h]": 3,
                "test rcx, rcx;jne ;mov rax, qword [var_a0h];mov qword [rsp], rax;mov rax, qword [var_a8h]": 2,
                "mov rax, qword [var_a8h];mov qword [var_8h], rax;mov rax, qword [var_98h];mov qword [var_10h], rax;mov qword [var_18h], rdx": 2,
                "mov rcx, qword [rsp + ];mov qword [rsp + ], rcx;call fcn.00604700;mov rax, qword [rsp + ];mov rcx, qword [rsp + ]": 2,
                "xor edx, edx;jmp ;mov rbx, qword [rsp + ];lea rdx, [rbx + 1];mov rax, qword [rsp + ]": 1,
                "mov rdi, rdx;jmp ;mov rax, qword [arg_80h];call fcn.004580f0;jmp ": 2,
                "je ;mov rbx, qword [rcx + ];mov rsi, qword [rax + 8];mov rdi, qword [rax];movzx eax, byte [rax + ]": 1,
                "mov rdi, qword [rax];movzx eax, byte [rax + ];mov rdx, qword [rbx + ];mov qword [rsp], rcx;mov qword [rsp + 8], rdi": 1,
                "mov qword [var_10h], rsi;call rcx;cmp byte [var_18h], 0;je ;mov rax, qword [arg_60h]": 1,
                "mov qword [var_8h], rcx;mov rcx, qword [arg_78h];mov qword [var_10h], rcx;movzx ecx, byte [arg_80h];mov byte [var_18h], cl": 1,
                "call fcn.00605ce0;mov rax, qword [var_40h];mov rcx, qword [var_38h];mov qword [arg_90h], rcx;mov qword [arg_98h], rax": 1,
                "mov qword [rdi + ], 0;mov rax, qword [arg_88h];mov qword [rdi + ], rax;lea rax, [];mov qword [arg_90h], rax": 1,
                "mov rdi, rdx;jmp ;mov rax, qword [arg_70h];call fcn.004580f0;jmp ": 1,
                "jbe ;sub rsp, ;mov qword [var_260h], rbp;lea rbp, [var_260h];call fcn.0040e500": 2,
                "inc rbx;cmp r12d, ;jne ;test r11b, r11b;jne ": 2,
                "test r11b, r11b;jne ;mov r11d, 1;jmp ;mov rax, qword [arg_278h]": 2,
                "mov rax, qword [arg_280h];mov qword [var_8h], rax;call fcn.0040ac60;mov rax, qword [var_10h];mov qword [var_d8h], rax": 3,
                "jmp ;lea rdi, [rdx + 8];call fcn.004580f0;jmp ;mov qword [var_90h], rbx": 1,
                "lea rcx, [];mov qword [var_190h], rcx;lea rdx, [];mov qword [var_198h], rdx;mov qword [var_1a0h], rcx": 1,
                "mov qword [var_190h], rbp;lea rbp, [var_190h];mov rax, qword [arg_1a0h];mov rcx, qword [rax + 8];cmp qword [rax + ], 6": 1,
                "jne ;cmp word [rcx + 4], ;jne ;mov rcx, qword [rax + ];mov rdx, qword [rcx + ]": 1,
                "mov rbx, qword [var_20h];mov qword [var_98h], rbx;mov rdx, qword [rcx + ];mov qword [rsp], rax;lea rcx, []": 1,
                "mov rbx, qword [var_18h];mov qword [rsp], rbx;mov qword [var_8h], rcx;mov qword [var_10h], rax;call fcn.00610df0": 1,
                "mov qword [var_a8h], rsi;mov qword [var_88h], rdi;test rsi, rsi;je ;cmp rdi, 1": 1,
                "mov rdx, rcx;call rax;mov rdx, qword [var_90h];mov rsi, qword [var_a8h];mov rdi, qword [var_88h]": 1,
                "mov rbp, qword [var_190h];add rsp, ;ret;mov rdx, qword [arg_1b0h];cmp rcx, rdx": 1,
                "xorps xmm0, xmm0;movups xmmword [var_c0h], xmm0;movups xmmword [var_d0h], xmm0;movups xmmword [var_e0h], xmm0;mov rsi, qword [arg_1a0h]": 1,
                "mov rdi, qword [var_20h];mov rsi, qword [var_18h];mov rdx, qword [var_28h];movzx eax, byte [var_7fh];mov rcx, qword [var_80h]": 1,
                "movups xmmword [var_120h], xmm0;movups xmmword [var_130h], xmm0;movups xmmword [var_140h], xmm0;jmp ;mov rax, qword [rax]": 1,
                "mov rbx, qword [arg_c0h];xor esi, esi;jmp ;inc rsi;cmp rsi, rcx": 1,
                "cmp rsi, rcx;jge ;mov r8, rsi;shl rsi, 1;cmp rsi, rbx": 1,
                "mov rbx, qword [arg_c0h];mov rsi, rcx;mov rcx, qword [var_60h];jmp ;call fcn.004580f0": 1,
                "call fcn.004580f0;jmp ;test rbx, rbx;jbe ;mov rbx, qword [rdx]": 1,
                "mov rdx, qword [arg_a0h];mov qword [rsp], rdx;mov qword [var_8h], rax;mov qword [var_10h], rcx;mov qword [var_18h], rcx": 1,
                "mov qword [rsp], rdx;lea rsi, [];mov qword [var_8h], rsi;mov qword [var_10h], 5;mov qword [var_18h], rax": 1,
                "call fcn.0042e8e0;ud2;call fcn.00456090;jmp fcn.00607600;int3": 1,
                "ud2;call fcn.00456090;jmp fcn.00607600;int3;int3": 1,
                "mov rax, qword [arg_30h];call fcn.004580f0;jmp ;mov qword [rsp], rcx;mov qword [var_8h], rax": 1,
                "jmp fcn.00607cf0;int3;int3;mov rcx, qword gs:[];mov rcx, qword [rcx]": 2,
                "mov qword [var_8h], rax;mov rax, qword [arg_a8h];mov qword [var_10h], rax;call fcn.006132a0;mov rax, qword [var_20h]": 3,
                "mov rax, qword [var_20h];mov rcx, qword [var_18h];mov qword [rsp], rcx;mov qword [var_8h], rax;call fcn.00607bf0": 3,
                "mov qword [rdi + 8], rcx;mov rax, qword [];lea rcx, [rdi + ];mov qword [var_58h], rcx;cmp dword [], 0": 3,
                "mov rax, qword [var_60h];call fcn.004580f0;mov rdi, rdx;jmp ;lea rcx, [rdi + 8]": 3,
                "mov qword [rsp + ], rcx;mov qword [rsp], rcx;mov qword [rsp + 8], ;call fcn.00478cf0;mov rax, qword [rsp + ]": 2,
                "mov qword [var_60h], rax;mov rax, qword [arg_c8h];mov qword [var_68h], rax;lea rax, [var_18h];mov qword [var_70h], rax": 2,
                "call fcn.00456090;jmp fcn.00608490;int3;int3;int3": 2,
                "mov rcx, qword [arg_140h];mov qword [var_8h], rcx;mov rcx, qword [arg_148h];mov qword [var_10h], rcx;mov rcx, qword [arg_150h]": 3,
                "test rax, rax;je ;mov qword [rsp], rax;lea rax, [];mov qword [var_8h], rax": 6,
                "movups xmmword [var_e8h], xmm0;lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h]": 3,
                "mov qword [rsp], rcx;lea rcx, [var_b8h];mov qword [var_8h], rcx;call fcn.0040aa50;mov rax, qword [var_10h]": 3,
                "jmp fcn.006085f0;int3;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 3,
                "mov qword [var_28h], 0;lea rdi, [var_30h];lea rdi, [rdi - ];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 4,
                "lea rax, [];mov qword [var_30h], rax;mov rax, qword [arg_a0h];mov qword [var_38h], rax;mov rax, qword [arg_a8h]": 4,
                "mov qword [var_60h], rax;mov rax, qword [arg_d0h];mov qword [var_68h], rax;mov rax, qword [arg_d8h];mov rcx, qword gs:[]": 1,
                "mov qword [var_78h], rax;mov rax, qword [arg_e8h];mov qword [var_80h], rax;lea rax, [var_18h];mov qword [var_88h], rax": 3,
                "mov qword [var_80h], rax;lea rax, [var_18h];mov qword [var_88h], rax;lea rax, [var_30h];mov qword [rsp], rax": 3,
                "mov rax, qword [arg_e0h];test rax, rax;je ;cmp dword [rax + ], ;jne ": 3,
                "mov rcx, qword [var_20h];mov rdx, qword [var_28h];mov rbx, qword [var_80h];mov qword [rsp], rbx;mov qword [var_8h], rcx": 3,
                "mov qword [var_10h], rdx;mov qword [var_18h], rax;call fcn.005ffed0;mov rax, qword [var_30h];mov rcx, qword [var_28h]": 3,
                "call fcn.00456090;jmp fcn.006089d0;int3;int3;int3": 2,
                "mov rax, qword [rsp + 8];cmp rax, 3;sete byte [rsp + ];ret;int3": 1,
                "mov rax, qword [rsp + ];mov rcx, qword [rax + 8];mov rax, qword [rax + ];mov qword [rsp + ], rcx;mov qword [rsp + ], rax": 1,
                "mov qword [var_98h], rax;mov qword [var_a0h], rcx;mov qword [rsp], 0;lea rax, [];mov qword [var_8h], rax": 3,
                "mov qword [var_10h], 9;mov qword [var_18h], 0;lea rax, [var_78h];mov qword [var_20h], rax;mov qword [var_28h], 3": 3,
                "cmp rdx, rax;jne ;mov rbx, qword [arg_1a0h];movzx esi, byte [rbx];je ": 2,
                "cmp byte [var_28h], 0;jne ;mov ecx, dword [var_7ch];cmp ecx, ;jne ": 2,
                "mov rsi, qword [rax + 8];mov r8, qword [rax];mov r9, qword [rax + ];je ;jmp ": 2,
                "lea rdx, [r9 - ];cmp rdx, 1;ja ;bt ecx, 9;jb ": 2,
                "movsx rax, byte [rsi];mov qword [arg_1a8h], 2;lea rcx, [];mov qword [arg_1b0h], rcx;movzx eax, al": 1,
                "mov qword [rsp], rax;call fcn.0040abe0;mov rax, qword [var_8h];mov qword [arg_1a8h], 2;lea rcx, []": 3,
                "cmp r9, 6;jne ;mov rax, qword [rsi];mov qword [rsp], rax;call fcn.0040abe0": 1,
                "mov qword [arg_1b8h], rax;mov rbp, qword [var_188h];add rsp, ;ret;mov eax, dword [rsi]": 1,
                "xorps xmm0, xmm0;movups xmmword [var_28h], xmm0;movups xmmword [var_38h], xmm0;lea rax, [];mov qword [var_20h], rax": 11,
                "mov qword [var_30h], rax;mov rax, qword [arg_68h];mov qword [var_38h], rax;lea rax, [var_1fh];mov qword [var_40h], rax": 2,
                "mov qword [rsp], rax;call fcn.005ace40;mov rax, qword [var_10h];mov rcx, qword [var_8h];movzx edx, byte [var_1fh]": 2,
                "mov rax, qword [var_10h];mov rcx, qword [var_8h];mov rdx, qword [var_18h];mov qword [arg_70h], rdx;mov qword [arg_78h], rcx": 5,
                "je ;mov qword [arg_40h], 0;mov rbp, qword [var_18h];add rsp, ;ret": 7,
                "mov qword [rdi], rcx;mov rcx, qword [arg_28h];mov qword [rdi + 8], rcx;mov rcx, qword [arg_30h];mov qword [rdi + ], rcx": 6,
                "jne ;xorps xmm0, xmm0;movups xmmword [arg_58h], xmm0;mov rbp, qword [var_30h];mov rcx, qword gs:[]": 1,
                "mov qword [var_10h], rcx;call fcn.0040b1c0;mov rax, qword [var_20h];mov rcx, qword [var_18h];mov rcx, qword gs:[]": 1,
                "call rcx;mov rax, qword [var_10h];mov rcx, qword [var_18h];mov rdx, qword [var_8h];mov qword [arg_58h], rdx": 6,
                "jne ;jp ;movq rax, xmm1;bt rax, ;setb al": 6,
                "cmp rax, 5;jne ;mov qword [rsp], rax;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "jmp ;mov qword [rsp], rax;mov rax, qword [arg_68h];mov qword [var_8h], rax;mov rax, qword [arg_70h]": 10,
                "cmp byte [var_18h], al;sete al;jmp ;mov qword [rsp], rax;mov rax, qword [arg_68h]": 5,
                "mov qword [var_10h], rdx;call fcn.006132a0;mov rax, qword [var_18h];mov rcx, qword [var_38h];cmp qword [var_20h], rcx": 5,
                "call fcn.006132a0;mov rax, qword [var_18h];mov rcx, qword [var_38h];cmp qword [var_20h], rcx;je ": 5,
                "mov qword [var_40h], rcx;mov rdx, qword [arg_78h];mov qword [rsp], rdx;mov rdx, qword [arg_80h];mov qword [var_8h], rdx": 1,
                "mov rcx, qword [rsp + ];mov qword [rsp + ], rax;mov qword [rsp + ], rcx;xorps xmm0, xmm0;movups xmmword [rsp + ], xmm0": 2,
                "mov qword [var_140h], rbp;lea rbp, [var_140h];mov rax, qword [arg_150h];cmp rax, 2;jle ": 2,
                "mov rax, qword [var_18h];mov rcx, qword [rax + ];mov rdx, qword [rax + ];test rcx, rcx;je ": 2,
                "je ;mov ebx, dword [rcx + ];cmp ebx, ;ja ;cmp ebx, ": 2,
                "xor ecx, ecx;xor edx, edx;xor ebx, ebx;xor esi, esi;mov rdi, qword [var_100h]": 1,
                "mov r8, rsi;mov rbx, rcx;mov rsi, rdx;mov ecx, r11d;mov rdx, rax": 1,
                "mov qword [var_78h], r8;mov qword [var_c8h], r10;mov qword [var_88h], rbx;mov qword [var_68h], rdx;mov qword [rsp], rcx": 1,
                "mov rcx, qword [rax + ];mov rdx, qword [var_18h];mov qword [var_80h], rdx;mov rbx, qword [var_10h];mov qword [var_e0h], rbx": 1,
                "mov qword [var_10h], rdx;mov rsi, qword [rcx];mov rdx, rcx;call rsi;cmp byte [var_18h], 0": 1,
                "mov rbx, qword [var_28h];mov qword [var_128h], rcx;mov qword [var_130h], rax;mov qword [var_138h], rbx;mov qword [rsp], rcx": 1,
                "lea r9, [r8 + 1];mov r10, qword [var_78h];cmp r9, r10;ja ;mov r11, qword [var_f8h]": 1,
                "mov rax, qword [var_c0h];mov rcx, qword [var_58h];mov rdx, qword [var_48h];mov rbx, qword [var_b0h];mov rsi, qword [var_a8h]": 1,
                "xor ebx, ebx;jmp ;cmp rdx, 1;jne ;cmp rbx, ": 1,
                "movups xmm0, xmmword [rax];movups xmmword [var_60h], xmm0;movups xmm0, xmmword [rax + ];movups xmmword [var_70h], xmm0;movups xmm0, xmmword [rax + ]": 3,
                "mov rax, qword [var_30h];cmp rax, 2;jne ;mov rax, qword [arg_c0h];test rax, rax": 1,
                "jmp fcn.0060c300;int3;int3;int3;int3": 1,
                "jne ;lea rbx, [];cmp rbx, rcx;jne ;mov rbx, qword [arg_68h]": 3,
                "mov qword [arg_78h], rax;mov rbp, qword [var_48h];add rsp, ;ret;mov rbx, qword [arg_68h]": 2,
                "mov r8d, 0;mov edi, 0;jmp ;mov rbx, qword [arg_68h];jmp ": 2,
                "mov edi, 0;jmp ;mov rbx, qword [arg_68h];jmp ;mov rbx, qword [arg_68h]": 2,
                "mov rdx, qword [arg_68h];mov qword [var_10h], rdx;call fcn.0060ac90;mov rax, qword [var_18h];mov rcx, qword [rax + ]": 2,
                "jne ;lea rbx, [];cmp rbx, rcx;jne ;mov rbx, rax": 3,
                "lea rbx, [];cmp rbx, rcx;jne ;mov rbx, rax;je ": 3,
                "je ;mov rax, qword [arg_58h];jmp ;mov rax, qword [rbx + ];mov rcx, qword [rbx]": 2,
                "mov rdx, qword [rax];mov rax, qword [rax + ];mov qword [rsp], rdx;mov qword [var_8h], rcx;mov qword [var_10h], rax": 1,
                "jne ;lea rax, [];cmp rax, rcx;jne ;jne ": 1,
                "mov rcx, qword [rbx];mov rdx, qword [rbx + ];mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], rdx": 1,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;mov qword [var_10h], rdx;mov byte [var_18h], 1;call fcn.00489ee0": 1,
                "jne ;lea rbx, [];cmp rbx, rdx;jne ;movss xmm0, dword [rax]": 1,
                "ja ;cmp rcx, 4;ja ;cmp rcx, 1;ja ": 1,
                "mov qword [arg_4a8h], rsi;xorps xmm0, xmm0;movups xmmword [arg_4b0h], xmm0;mov rbp, qword [var_468h];add rsp, ": 1,
                "lea rcx, [];jmp ;mov rcx, qword [arg_478h];mov qword [var_280h], rcx;mov qword [var_288h], rdx": 1,
                "mov qword [rsp], rdx;call fcn.0040abe0;mov rax, qword [var_8h];xorps xmm0, xmm0;movups xmmword [var_438h], xmm0": 1,
                "mov qword [var_448h], rcx;mov rcx, qword [var_c0h];mov qword [var_450h], rcx;lea rcx, [];mov qword [var_458h], rcx": 1,
                "mov qword [var_20h], 3;call fcn.004d6050;mov rax, qword [var_28h];mov qword [var_e0h], rax;mov rcx, qword [var_30h]": 1,
                "jne ;mov rcx, qword [arg_478h];mov qword [rsp], rcx;mov qword [var_8h], rdx;mov qword [var_10h], rax": 1,
                "cmp rax, ;jge ;mov rcx, qword [arg_478h];mov qword [var_280h], rcx;mov rcx, qword [arg_480h]": 1,
                "mov qword [var_168h], rax;mov rcx, qword [var_160h];test rcx, rcx;je ;movzx edx, byte [rcx + ]": 1,
                "cmp rcx, 7;ja ;cmp rcx, 3;ja ;cmp rcx, 1": 1,
                "cmp rcx, 1;jge ;jge ;jne ;mov rdx, qword [arg_160h]": 1,
                "movups xmmword [arg_190h], xmm0;mov rbp, qword [var_150h];add rsp, ;ret;xor ecx, ecx": 1,
                "cmp dword [], 0;jne ;mov qword [rdi + ], rax;xor eax, eax;mov rcx, rdi": 1,
                "mov qword [var_8h], rcx;lea rdx, [];mov qword [var_10h], rdx;mov qword [var_18h], 4;call fcn.00402860": 1,
                "mov qword [var_8h], rcx;lea rdx, [str.himst_________P_______s_v____________________________________i00010s25:_:_____________CcCfCoCsDoIfLlLmLoLtLuMcMeMnNdNlNoOSPIPcPdPePfPiPoPsScSkSmSoYiZlZpZs___:________D__E__S__W__d__s__w____:_____dogci_ifinmsnsoss_us________________G__M__P__v_________________m_____25_2B_:________:__00_03_04_05_06_07_08_09_10_11_12_13_14_01_02_03_04_05_06_08_09_11_12______125625:_________________ADTASTAprAugBSTCATCDTCETCSTDecDltEATEDTEETEOFESTFebForFriGMTHDTHSTHanIDTISTJSTJanJulJunKSTKeyLN2LaoMDTMSKMSTMarMayMonMroNDTNSTNULNaNNkoNovOctOp_PC_PDTPKTPSTSatSepStdSunThuTueUTCVaiWATWETWed__________:__absadxaesavxcosdaydirendexpfmaforgc_getgp_infintip4letlogmapmaxminnannewnilnowobjos2pc_poppowptrsetsintantcptryu00var__s__s________________as__at__fp__in__is__lr:_of__on__pc__sp:_sp__1_2___________m_______Inf_inf__n__Inf_inf20063125:_p_____ACDTACSTAEDTAESTAKDTAKSTARCHAWSTAhomArgsCESTCallChamDashDateEESTFileFuncG._sGOGCGOOSJSONJulyJuneKillLN10LisuMathMiaoModiNULLNZDTNZSTNewaSASTStatThaiUserWESTWith___s__u00____m___n_acosasin;mov qword [var_10h], rdx;mov qword [var_18h], 1;call fcn.00402860": 1,
                "cmp rcx, 4;jne ;lea rax, [];mov rcx, qword [arg_98h];cmp rax, rcx": 1,
                "je ;mov ebx, dword [rdx + ];cmp ebx, ;ja ;cmp ebx, ": 1,
                "mov qword [var_8h], rdi;mov qword [var_10h], rsi;call fcn.0049d550;cmp qword [var_20h], 0;setne byte [arg_a8h]": 1,
                "jmp ;cmp ebx, ;jmp ;mov byte [arg_a8h], sil;mov rbp, qword [var_80h]": 1,
                "ja ;cmp ebx, ;jne ;lea rsi, [];cmp rsi, rdx": 1,
                "je ;cmp byte [], 0;je ;mov qword [], rdx;mov rcx, qword gs:[]": 1,
                "je ;mov eax, 1;test al, al;je ;mov rax, qword [var_90h]": 1,
                "test al, al;je ;movsd xmm0, qword [];movsd qword [arg_b8h], xmm0;mov rbp, qword [var_98h]": 1,
                "movsd xmm0, qword [];movsd qword [arg_80h], xmm0;mov rbp, qword [var_58h];add rsp, ;ret": 2,
                "movzx ecx, byte [rdx];jne ;movzx eax, cl;xorps xmm0, xmm0;cvtsi2sd xmm0, eax": 2,
                "mov rdx, qword [arg_78h];mov rbx, qword [rdx];mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "mov rdx, qword [arg_78h];mov ebx, dword [rdx];je ;cmp ecx, ;jne ": 2,
                "add rsp, ;ret;mov ecx, 0;jmp ;xorps xmm0, xmm0": 1,
                "jmp ;xorps xmm0, xmm0;cvtsi2sd xmm0, ebx;movsd qword [arg_80h], xmm0;mov rbp, qword [var_58h]": 1,
                "lea rcx, [];cmp rcx, rax;jne ;mov rcx, qword [rdx + 8];mov rbx, qword [rdx]": 1,
                "jne ;mov qword [rsp], rbx;mov qword [var_8h], rcx;call fcn.00611690;movsd xmm0, qword [var_10h]": 1,
                "mov ebx, 0;mov ecx, 0;jmp ;mov ebx, 0;jmp ": 1,
                "movsd qword [arg_48h], xmm0;mov rbp, qword [var_20h];add rsp, ;ret;ucomisd xmm0, xmm0": 1,
                "movsd xmm0, qword [var_8h];jmp ;cmp byte [], 0;je ;roundsd xmm0, xmm0, 2": 6,
                "jne ;lea rdx, [];cmp rdx, rax;jne ;mov rdx, qword [arg_50h]": 5,
                "movsd qword [arg_68h], xmm0;mov rbp, qword [var_30h];add rsp, ;ret;movsd qword [rsp], xmm0": 2,
                "roundsd xmm1, xmm0, 2;jmp ;movsd qword [rsp], xmm0;call fcn.00471410;movsd xmm1, qword [var_8h]": 2,
                "ret;xorps xmm0, xmm0;movups xmmword [arg_58h], xmm0;movsd qword [arg_68h], xmm1;mov rbp, qword [var_30h]": 2,
                "xorps xmm0, xmm0;movsd qword [arg_68h], xmm0;mov rbp, qword [var_30h];add rsp, ;ret": 10,
                "mov rbp, qword [var_30h];add rsp, ;ret;mov ebx, 0;jmp ": 2,
                "jne ;lea rcx, [];cmp rcx, rax;jne ;movzx ecx, word [rdx]": 6,
                "jne ;movzx ecx, word [rdx];jne ;mov qword [arg_58h], 0;movsx rax, cx": 2,
                "mov ebx, 0;jmp ;mov rdx, qword [arg_50h];jmp ;mov rdx, qword [arg_50h]": 1,
                "mov rdx, qword [arg_50h];jmp ;mov rdx, qword [arg_50h];jmp ;call fcn.00456090": 1,
                "jne ;movzx ecx, word [rdx];je ;mov rcx, qword [arg_30h];mov qword [rsp], rcx": 3,
                "ucomisd xmm1, xmm0;seta al;jmp ;movsx rax, cx;mov dword [arg_48h], eax": 1,
                "mov dword [arg_48h], ebx;mov rbp, qword [var_20h];add rsp, ;ret;mov rdx, qword [arg_40h]": 2,
                "mov rdx, qword [arg_40h];jmp ;call fcn.00456090;jmp fcn.00612580;int3": 1,
                "jmp ;movsx rax, bx;mov dword [arg_48h], eax;mov rbp, qword [var_20h];add rsp, ": 1,
                "call fcn.00456090;jmp fcn.006127e0;int3;int3;int3": 1,
                "movsd xmm1, qword [];ucomisd xmm1, xmm0;seta al;jmp ;mov word [arg_48h], cx": 1,
                "jmp ;movzx eax, bl;mov word [arg_48h], ax;mov rbp, qword [var_20h];add rsp, ": 1,
                "mov qword [var_10h], rax;call fcn.0060ac90;mov rax, qword [var_18h];mov qword [rsp], rax;mov rax, qword [arg_88h]": 4,
                "mov rax, qword [arg_88h];mov qword [var_8h], rax;call fcn.005e7320;mov rax, qword [var_18h];mov rcx, qword [var_10h]": 4,
                "mov rbp, qword [var_60h];add rsp, ;ret;mov qword [arg_90h], rax;mov rax, qword [arg_78h]": 4,
                "test al, al;je ;mov rax, qword [arg_48h];bt rax, ;jae ": 4,
                "mov qword [rsp], rax;call fcn.004714a0;movsd xmm0, qword [var_8h];movsd xmm1, qword [];ucomisd xmm0, xmm1": 4,
                "seta al;jmp ;lea rax, [];mov qword [arg_58h], rax;mov qword [arg_60h], 3": 4,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.00612f90;int3": 4,
                "ucomisd xmm0, xmm1;ja ;movsd xmm1, qword [];ucomisd xmm1, xmm0;jbe ": 4,
                "mov qword [arg_50h], rax;mov qword [arg_58h], 9;mov rbp, qword [var_20h];add rsp, ;mov rcx, qword gs:[]": 1,
                "jmp fcn.00613180;int3;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ]": 1,
                "jne ;lea rdx, [];cmp rdx, rcx;jne ;mov rdi, qword [rsi]": 3,
                "cmp rax, 1;je ;test rcx, rcx;je ;mov eax, dword [rcx + ]": 3,
                "lea rcx, [];jmp ;cmp eax, ;jne ;cmp rbx, rcx": 3,
                "jmp ;cmp eax, ;jne ;cmp rbx, rcx;jne ": 3,
                "mov qword [var_10h], rax;mov qword [var_18h], rdx;call fcn.00445090;mov rax, qword [var_28h];mov rcx, qword [var_20h]": 2,
                "mov qword [arg_98h], rax;mov rbp, qword [var_68h];add rsp, ;ret;xorps xmm0, xmm0": 2,
                "jmp ;mov edx, 0;mov ebx, 0;mov eax, 0;jmp ": 2,
                "cmp eax, ;jmp ;cmp eax, ;jne ;lea rdx, []": 3,
                "movzx eax, al;mov qword [rsp], rax;mov qword [var_8h], ;call fcn.00478bd0;mov rax, qword [var_18h]": 2,
                "ja ;cmp eax, ;jne ;lea rdx, [];mov rcx, qword gs:[]": 1,
                "add rsp, ;ret;mov eax, 0;jmp ;mov qword [rsp], rdx": 1,
                "mov qword [arg_98h], rax;mov rbp, qword [var_68h];add rsp, ;ret;mov edx, 0": 1,
                "jne ;movss xmm0, dword [rsi];jne ;xorps xmm1, xmm1;ucomiss xmm0, xmm1": 1,
                "jg ;mov qword [rsp], 0;lea rax, [rcx + ];mov qword [var_8h], rax;call fcn.004452a0": 1,
                "jmp fcn.00613cc0;int3;int3;int3;int3": 1,
                "lea rdi, [rsp + ];mov qword [rsp - ], rbp;lea rbp, [rsp - ];call fcn.00458f1c;mov rbp, qword [rbp]": 1,
                "mov rax, qword [var_10h];cmp dword [], 0;jne ;mov qword [], rax;mov byte [rsp], 1": 1,
                "jne ;mov qword [], rax;call ;movsd xmm0, qword [rsp];movsd qword [], xmm0": 1,
                "mov qword [var_10h], 1;call fcn.004126c0;mov rax, qword [var_18h];mov byte [rax], 1;lea rax, []": 2,
                "call fcn.004126c0;mov rax, qword [var_18h];mov byte [rax], 1;lea rax, [];mov qword [rsp], rax": 4,
                "mov rcx, qword [var_48h];mov qword [var_8h], rcx;mov qword [var_10h], 2;call fcn.004126c0;mov rax, qword [var_18h]": 1,
                "mov qword [], rax;call fcn.0040e500;mov rax, qword [rsp];mov qword [var_30h], rax;lea rcx, []": 1,
                "mov rax, qword [rsp];mov qword [var_30h], rax;lea rcx, [];mov qword [rsp], rcx;mov qword [var_8h], rax": 1,
                "ud2;mov byte [], 1;call fcn.004f40e0;call fcn.00470f90;call fcn.004fa740": 1,
                "call fcn.004f40e0;call fcn.00470f90;call fcn.004fa740;call fcn.0051d600;call fcn.0047be50": 1,
                "call fcn.004699c0;call fcn.00558d00;call fcn.0046d060;call fcn.00537f40;call fcn.0055b390": 1,
                "test byte [rax], al;mov qword [rsp + 8], rax;jmp fcn.005f8670;int3;int3": 1,
                "mov rax, qword [rsp + ];test rax, rax;je ;movups xmm0, xmmword [rax];movups xmmword [rsp + ], xmm0": 1,
                "mov qword [rsp], rax;mov rcx, qword [arg_38h];mov qword [var_8h], rcx;mov qword [var_10h], 1;call fcn.00409930": 1,
                "jmp fcn.00619b50;int3;int3;mov rcx, qword gs:[];mov rcx, qword [rcx]": 2,
                "mov rbp, qword [var_20h];add rsp, ;ret;call fcn.00456090;jmp fcn.00619ca0": 3,
                "mov qword [rsp], rcx;mov qword [rsp + 8], rax;lea rax, [];mov qword [rsp + ], rax;call fcn.0040a850": 2,
                "jmp ;mov rax, qword [arg_68h];mov rax, qword [rax + ];lea rcx, [];mov qword [rsp], rcx": 1,
                "lea rbp, [var_60h];lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h]": 2,
                "movups xmmword [arg_90h], xmm0;lea rax, [];mov qword [arg_a0h], rax;mov qword [arg_a8h], rdi;mov rbp, qword [var_60h]": 2,
                "ret;mov rax, qword [var_40h];call fcn.004580f0;jmp ;mov rax, qword [arg_70h]": 2,
                "cmp dword [], 0;jne ;mov rcx, qword [var_18h];mov qword [rcx + ], rax;call fcn.0040e500": 4,
                "mov rax, rcx;jmp ;lea rdi, [rax + ];mov rcx, rax;mov rax, qword [arg_40h]": 2,
                "mov qword [rsp], rcx;mov qword [var_8h], rdx;mov rcx, qword [arg_a8h];mov qword [var_10h], rcx;mov rdx, qword [arg_b0h]": 3,
                "mov rax, qword [arg_a0h];mov rax, qword [rax];mov rcx, qword [rax + 8];mov rax, qword [rax];mov rdx, qword [var_28h]": 2,
                "mov rcx, qword [rax + 8];mov rax, qword [rax];mov rdx, qword [var_28h];mov rbx, qword [var_30h];mov qword [rsp], rax": 2,
                "mov qword [arg_c0h], rcx;mov qword [arg_c8h], rdx;mov rbp, qword [var_90h];add rsp, ;ret": 2,
                "add rsp, ;ret;mov qword [arg_b8h], rax;xorps xmm0, xmm0;movups xmmword [arg_c0h], xmm0": 2,
                "mov qword [arg_b8h], 0;mov qword [arg_c0h], rcx;mov qword [arg_c8h], rax;mov rbp, qword [var_90h];add rsp, ": 2,
                "add rsp, ;ret;mov rax, qword [arg_a8h];mov qword [rsp], rax;mov rax, qword [arg_b0h]": 2,
                "mov rax, qword [arg_b0h];mov qword [var_8h], rax;call fcn.0040ac60;mov rax, qword [var_10h];mov qword [var_58h], rax": 2,
                "mov qword [var_18h], 2;mov qword [var_20h], 2;call fcn.004d6050;mov rax, qword [var_30h];mov qword [var_48h], rax": 2,
                "lea rax, [];mov qword [arg_c0h], rax;mov qword [arg_c8h], rdi;mov rcx, qword gs:[];mov rcx, qword [rcx]": 1,
                "mov qword [var_10h], rdx;call fcn.0061ffe0;mov rax, qword [var_18h];mov rcx, qword [var_28h];mov rdx, qword [var_20h]": 2,
                "call fcn.0040fea0;mov rax, qword [var_178h];test rax, rax;je ;mov rcx, qword [var_180h]": 2,
                "ret;mov rax, qword [arg_200h];mov rcx, qword [rax + ];lea rdi, [var_118h];xorps xmm0, xmm0": 2,
                "mov rcx, qword [rax + ];lea rdi, [var_118h];xorps xmm0, xmm0;lea rdi, [rdi - ];mov qword [rsp - ], rbp": 2,
                "lea rdx, [];mov qword [rsp], rdx;mov qword [var_8h], rcx;lea rcx, [var_118h];mov qword [var_10h], rcx": 2,
                "mov rcx, qword [rcx];mov rdx, qword [rax];mov rax, qword [rax + 8];mov rbx, qword [var_50h];mov rsi, qword [rbx]": 3,
                "mov rax, qword [rax + 8];mov rbx, qword [var_50h];mov rsi, qword [rbx];mov rdi, qword [rbx + 8];mov r8, qword [rbx + ]": 3,
                "mov rbx, qword [var_50h];mov rsi, qword [rbx];mov rdi, qword [rbx + 8];mov r8, qword [rbx + ];mov r9, qword [rbx + ]": 3,
                "mov rdi, qword [rbx + 8];mov r8, qword [rbx + ];mov r9, qword [rbx + ];mov r10, qword [rcx + ];mov rcx, qword [rcx + ]": 2,
                "mov r9, qword [rbx + ];mov r10, qword [rcx + ];mov rcx, qword [rcx + ];mov qword [rsp], rsi;mov qword [var_8h], rdi": 2,
                "mov qword [var_28h], rax;mov qword [var_30h], r10;mov qword [var_38h], rcx;call fcn.005ed540;mov rax, qword [var_40h]": 2,
                "mov rax, qword [rax + ];lea rdi, [var_58h];xorps xmm0, xmm0;lea rdi, [rdi - ];mov qword [rsp - ], rbp": 1,
                "call fcn.004580f0;jmp ;mov qword [arg_208h], rdx;mov qword [arg_210h], rcx;mov rbp, qword [var_1d8h]": 1,
                "mov qword [arg_120h], rcx;mov rbp, qword [var_e8h];add rsp, ;ret;mov rax, qword [var_60h]": 1,
                "mov rbp, qword [var_e8h];add rsp, ;ret;mov rax, qword [var_60h];mov qword [rsp], rax": 1,
                "mov rax, qword [arg_f8h];mov rcx, qword [rax + ];mov rdx, qword [var_28h];mov rbx, qword [var_30h];lea rsi, []": 1,
                "mov rcx, qword [rax + ];mov rdx, qword [var_28h];mov rbx, qword [var_30h];lea rsi, [];mov qword [rsp], rsi": 1,
                "mov qword [arg_120h], rdx;mov rbp, qword [var_e8h];add rsp, ;ret;xorps xmm0, xmm0": 1,
                "movups xmmword [arg_118h], xmm0;mov rbp, qword [var_e8h];add rsp, ;ret;call fcn.00456090": 1,
                "sub rsp, ;mov qword [var_68h], rbp;lea rbp, [var_68h];mov rax, qword [arg_78h];mov rcx, qword [rax]": 2,
                "mov rcx, qword [rcx + 8];xorps xmm0, xmm0;movups xmmword [var_50h], xmm0;mov qword [var_60h], 0;mov qword [rsp], rcx": 2,
                "mov rcx, qword [arg_90h];mov qword [var_8h], rcx;mov rcx, qword [arg_98h];mov qword [var_10h], rcx;call fcn.005f0810": 2,
                "mov qword [arg_a8h], rbx;mov rbp, qword [var_68h];add rsp, ;ret;mov qword [var_50h], rdx": 2,
                "mov rcx, qword [rax];mov qword [var_48h], rcx;mov rax, qword [rax + 8];mov qword [var_40h], rax;lea rdx, []": 2,
                "je ;mov qword [var_58h], rax;mov qword [var_60h], rcx;je ;mov rdx, qword [rax + 8]": 1,
                "add rsp, ;ret;lea rdi, [rax + 8];mov rcx, rax;mov rax, qword [var_60h]": 2,
                "mov qword [var_8h], rcx;mov qword [var_10h], 2;lea rcx, [];mov qword [var_18h], rcx;lea rdx, []": 2,
                "mov qword [var_10h], rcx;mov qword [var_18h], 6;lea rcx, [];mov qword [var_20h], rcx;mov qword [var_28h], rax": 1,
                "test rax, rax;je ;mov qword [arg_58h], rax;mov qword [arg_60h], rcx;mov rbp, qword [var_40h]": 1,
                "mov rdx, rax;mov rax, rcx;mov rcx, rdx;jmp ;mov qword [arg_58h], rcx": 3,
                "mov rcx, qword [var_38h];mov qword [arg_58h], rax;mov qword [arg_60h], rcx;mov rbp, qword [var_40h];add rsp, ": 30,
                "mov rcx, rax;mov rax, qword [arg_50h];call fcn.004580f0;mov rax, rcx;mov rcx, qword [arg_50h]": 2,
                "mov rax, qword [rax + 8];mov qword [rsp], rcx;mov qword [var_8h], rax;mov rax, qword [arg_80h];mov qword [var_10h], rax": 2,
                "mov qword [var_20h], rax;mov rax, qword [var_48h];mov qword [var_28h], rax;call fcn.005eba10;mov rax, qword [var_30h]": 2,
                "add rsp, ;ret;lea rdi, [rax + ];mov rcx, rax;mov rax, qword [var_58h]": 2,
                "mov qword [var_28h], rdx;call fcn.0042ec20;test eax, eax;jne ;lea rax, []": 4,
                "mov rcx, qword [var_10h];cmp dword [], 0;jne ;mov qword [rdi], rcx;mov dword [rsp], 8": 4,
                "call fcn.004392f0;mov rax, qword [arg_58h];mov rax, qword [rax];mov rcx, qword [rax];mov rax, qword [rax + 8]": 2,
                "mov rcx, qword [var_28h];mov rdx, qword [var_40h];mov rbx, qword [var_38h];mov rsi, qword [var_20h];mov qword [arg_68h], rsi": 2,
                "call fcn.004392f0;lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [arg_80h]": 2,
                "mov qword [rsp], rcx;mov qword [var_8h], rax;mov rax, qword [arg_88h];mov qword [var_10h], rax;mov rax, qword [arg_90h]": 2,
                "mov qword [var_40h], 1;call fcn.005ec750;mov rax, qword [var_58h];mov rcx, qword [var_50h];mov rdx, qword [var_68h]": 2,
                "mov qword [rsp + ], 1;call rdx;mov rbp, qword [rsp + ];add rsp, ;ret": 3,
                "mov qword [rsp + ], rbp;lea rbp, [rsp + ];mov rax, qword [rsp + ];mov rcx, qword [rax + ];imul rcx, rcx, ": 1,
                "cmp byte [rax + ], 0;jne ;lea rcx, [];mov qword [rsp + ], rcx;mov rax, qword [rax]": 1,
                "jne ;lea rcx, [];mov qword [rsp + ], rcx;mov rax, qword [rax];mov rax, qword [rax]": 1,
                "xor esi, esi;lea rdi, [var_70h];xor r8d, r8d;jmp ;mov r9, qword [var_b8h]": 1,
                "xor r13d, r13d;mov qword [var_b8h], rcx;mov qword [var_88h], rbx;mov qword [var_78h], rsi;mov qword [var_b0h], rdi": 1,
                "mov qword [var_e0h], r11;xorps xmm0, xmm0;movups xmmword [var_c0h], xmm0;lea rax, [];mov qword [rsp], rax": 1,
                "lea rbx, [rdi + rax];cmp dword [], 0;jne ;mov qword [rdi + rax], rdx;mov rax, qword [var_88h]": 1,
                "mov qword [var_18h], rdi;lea rcx, [];mov qword [var_20h], rcx;mov qword [var_28h], 9;mov qword [var_30h], rdx": 1,
                "mov rcx, qword [arg_78h];mov qword [var_8h], rcx;call fcn.0040ac60;mov rax, qword [var_10h];xorps xmm0, xmm0": 1,
                "cmp rdx, 4;jne ;cmp dword [rbx], ;je ;lea rax, []": 1,
                "lea rcx, [];mov qword [var_10h], rcx;mov qword [var_18h], 7;call fcn.005ecf60;mov rax, qword [var_20h]": 1,
                "jne ;mov rcx, qword [];mov rdx, qword [];test rcx, rcx;jle ": 1,
                "jne ;mov rax, qword [var_58h];inc rax;mov rcx, qword [var_60h];cmp rax, rcx": 1,
                "mov rcx, qword [var_60h];cmp rax, rcx;jl ;xorps xmm0, xmm0;movups xmmword [arg_98h], xmm0": 1,
                "cmp rax, rcx;jl ;xorps xmm0, xmm0;movups xmmword [arg_98h], xmm0;mov rbp, qword [var_80h]": 1,
                "ret;mov qword [arg_98h], rdx;mov qword [arg_a0h], rcx;mov rbp, qword [var_80h];add rsp, ": 1,
                "jl ;jg ;lea rdi, [var_88h];lea rsi, [arg_f0h];mov qword [rsp - ], rbp": 2,
                "jg ;lea rdi, [var_88h];lea rsi, [arg_f0h];mov qword [rsp - ], rbp;lea rbp, [rsp - ]": 2,
                "mov rbp, qword [rbp];mov rax, qword [var_b8h];cmp qword [var_c0h], 0;jle ;mov rcx, qword [rax]": 2,
                "jne ;mov rdx, rcx;je ;xorps xmm0, xmm0;movups xmmword [var_68h], xmm0": 2,
                "mov qword [var_78h], rax;mov qword [var_80h], rdx;mov rax, qword [arg_e8h];mov qword [rsp], rax;lea rax, []": 2,
                "movups xmmword [var_30h], xmm0;call fcn.006216d0;mov rax, qword [var_40h];mov rcx, qword [var_50h];mov rdx, qword [var_48h]": 1,
                "mov rcx, qword [var_50h];mov rdx, qword [var_48h];mov qword [arg_140h], rax;mov qword [arg_148h], rdx;mov qword [arg_150h], rcx": 1,
                "mov qword [rsp], rcx;mov qword [rsp + 8], rax;call fcn.00403a00;mov rax, qword [rsp + ];mov qword [rsp + ], rax": 3,
                "test cl, cl;je ;mov rcx, qword [rdx + ];mov rdx, qword [rdx + ];mov rbx, qword [rax + ]": 2,
                "call rcx;mov rdi, qword [rsp + ];mov rsi, qword [rsp + ];movups xmm6, xmmword [rsp + ];movups xmm7, xmmword [rsp + ]": 2,
                "mov rax, qword [arg_78h];cmp rax, 1;jne ;mov rcx, qword [arg_70h];cmp qword [rcx + 8], 0": 3,
                "je ;mov rdx, qword [arg_58h];mov qword [rsp], rdx;mov rdx, qword [arg_60h];mov qword [var_8h], rdx": 3,
                "mov rdx, qword [var_40h];mov qword [arg_88h], rcx;mov qword [arg_90h], rax;mov qword [arg_98h], rdx;mov rbp, qword [var_48h]": 3,
                "movups xmmword [var_20h], xmm0;call fcn.006248c0;mov rax, qword [var_30h];mov rcx, qword [var_38h];mov rdx, qword [var_40h]": 3,
                "mov rbp, qword [var_48h];add rsp, ;ret;mov rcx, qword [arg_70h];jmp ": 3,
                "lea rbp, [var_20h];mov rax, qword [arg_38h];lea rcx, [rax + 1];mov qword [rsp], rcx;call fcn.00624830": 4,
                "mov dword [arg_38h], 0;lea rax, [arg_30h];mov qword [var_18h], rax;mov rax, qword [];mov qword [rsp], rax": 4,
                "call fcn.00404400;jmp ;call fcn.00456090;jmp fcn.00624640;mov rcx, qword gs:[]": 1,
                "mov qword [rsp], rax;call fcn.00404400;lea rax, [];mov qword [rsp], rax;mov rcx, qword [arg_40h]": 4,
                "mov qword [rsp], rax;mov rcx, qword [arg_40h];mov qword [var_8h], rcx;call fcn.00404400;lea rax, []": 4,
                "lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ;call fcn.0042ff30;jmp ": 5,
                "mov rax, qword [rax];test rcx, rcx;jbe ;mov rbx, qword [arg_a8h];mov rsi, qword [rbx]": 3,
                "mov qword [var_10h], rax;mov qword [var_18h], 1;mov qword [var_20h], 1;call fcn.00404a00;mov rax, qword [arg_a8h]": 3,
                "mov rax, qword [arg_a8h];mov rcx, qword [rax + ];mov rdx, qword [rax + 8];mov rax, qword [rax];mov qword [rsp], rax": 3,
                "call fcn.00624640;mov eax, dword [var_8h];mov dword [arg_40h], eax;mov rbp, qword [var_28h];add rsp, ": 2,
                "ret;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], rdi;mov qword [var_10h], rsi": 4,
                "mov qword [rsp], 0;lea rax, [var_30h];mov qword [var_8h], rax;lea rax, [var_2ch];mov qword [var_10h], rax": 4,
                "call fcn.004a6710;mov rax, qword [var_18h];mov rcx, qword [var_20h];test rax, rax;je ": 4,
                "mov byte [arg_48h], 0;mov qword [arg_50h], rax;mov qword [arg_58h], rcx;mov rbp, qword [var_38h];add rsp, ": 4,
                "call fcn.00456090;jmp fcn.00625060;int3;int3;int3": 4,
                "mov rax, qword [var_20h];mov rcx, qword [var_18h];mov qword [arg_78h], rcx;mov qword [arg_80h], rax;mov rcx, qword gs:[]": 1,
                "mov qword [arg_80h], rax;mov rcx, qword gs:[];mov rcx, qword [rcx];cmp rsp, qword [rcx + ];jbe ": 1,
                "mov qword [arg_90h], rcx;call fcn.0042f500;mov rbp, qword [var_48h];add rsp, ;ret": 3,
                "jmp ;xorps xmm0, xmm0;movups xmmword [arg_78h], xmm0;mov qword [arg_88h], rcx;mov qword [arg_90h], rax": 2,
                "mov qword [var_8h], rax;mov rax, qword [arg_60h];mov qword [var_10h], rax;mov rcx, qword [arg_68h];mov qword [var_18h], rcx": 3,
                "movups xmmword [arg_90h], xmm0;mov rbp, qword [var_40h];add rsp, ;ret;mov qword [arg_80h], rcx": 3,
                "mov rbp, qword [var_40h];add rsp, ;ret;mov qword [arg_80h], rcx;mov qword [arg_88h], rax": 3,
                "ret;call fcn.00456090;jmp fcn.00625390;int3;mov rcx, qword gs:[]": 2,
                "mov rsi, qword [var_20h];mov rdi, qword [var_48h];mov r8, qword [var_28h];test rcx, rcx;jne ": 3,
                "je ;mov dword [rsp], eax;call fcn.0040ab60;mov rax, qword [var_8h];xorps xmm0, xmm0": 3,
                "call fcn.0040ab60;mov rax, qword [var_8h];xorps xmm0, xmm0;movups xmmword [var_60h], xmm0;lea rcx, []": 6,
                "sub rsp, ;mov qword [var_70h], rbp;lea rbp, [var_70h];xorps xmm0, xmm0;movups xmmword [rsp], xmm0": 3,
                "mov rax, qword [arg_80h];mov qword [var_10h], rax;mov rax, qword [arg_88h];mov qword [var_18h], rax;call fcn.004a0130": 3,
                "mov qword [var_8h], rax;movabs rax, ;mov qword [var_10h], rax;lea rax, [var_b0h];mov qword [var_18h], rax": 3,
                "mov qword [var_10h], rax;lea rax, [var_b0h];mov qword [var_18h], rax;mov dword [var_20h], ;lea rax, [var_50h]": 3,
                "lea rax, [];mov qword [var_8h], rax;mov rax, qword [var_b0h];mov qword [var_10h], rax;call fcn.0042ec20": 2,
                "xor ebx, ebx;xor esi, esi;xor edi, edi;jmp ;inc rdx": 2,
                "mov r8, qword [rcx + rdx*8];test r8, r8;je ;mov qword [var_c0h], rbx;mov qword [var_68h], rsi": 2,
                "cmp rbx, rsi;ja ;mov rdi, qword [var_c0h];shl rdx, 4;mov qword [rdi + rdx + 8], rcx": 2,
                "ret;mov qword [arg_120h], rbx;mov qword [arg_128h], rdi;mov qword [arg_130h], rsi;xorps xmm0, xmm0": 1,
                "mov qword [var_e0h], rcx;mov qword [var_e8h], rax;lea rax, [];mov qword [rsp], rax;mov qword [var_8h], ": 1,
                "mov qword [var_18h], 2;mov qword [var_20h], 2;call fcn.004d6050;mov rax, qword [var_28h];mov qword [var_a0h], rax": 1,
                "cmp dword [], 0;jne ;mov rax, qword [var_a0h];mov qword [rdi], rax;xorps xmm0, xmm0": 1,
                "mov rax, rdi;mov rdi, rcx;mov rdx, rax;mov rax, qword [arg_a0h];call fcn.004580f0": 1,
                "jmp fcn.00625e80;int3;mov rcx, qword gs:[];mov rcx, qword [rcx];lea rax, [rsp - ]": 1,
                "mov qword [var_10h], rax;call fcn.0042ec20;test eax, eax;jne ;mov rax, qword [var_70h]": 2,
                "mov rax, qword [var_70h];mov qword [rsp], rax;mov dword [var_8h], 1;mov qword [var_10h], ;call fcn.004a0c00": 2,
                "mov rcx, qword [var_28h];mov rdx, qword [var_20h];test rdx, rdx;je ;xor eax, eax": 2,
                "jne ;mov qword [var_90h], rax;mov rax, qword [var_70h];mov qword [rsp], rax;mov dword [var_8h], 5": 2,
                "mov qword [var_68h], rax;mov qword [var_88h], rcx;mov rax, qword [var_98h];mov rax, qword [rax];mov qword [rsp], rax": 2,
                "mov qword [rsp], rax;call fcn.004a0540;mov rax, qword [var_10h];mov rcx, qword [var_8h];mov rdx, qword [var_18h]": 2,
                "mov rbx, qword [var_20h];test rdx, rdx;jne ;mov qword [var_78h], rax;mov qword [var_a0h], rcx": 2,
                "mov rax, qword [var_70h];mov qword [rsp], rax;call fcn.004a0e80;mov rax, qword [var_8h];mov rcx, qword [var_10h]": 2,
                "mov rax, qword [var_90h];mov rax, qword [rax];mov qword [rsp], rax;call fcn.006254e0;mov rax, qword [var_8h]": 2,
                "mov rax, qword [var_50h];mov rcx, qword [var_58h];mov rdx, qword [var_60h];mov qword [arg_c0h], rax;mov qword [arg_c8h], rcx": 1,
                "mov rbp, qword [var_b0h];add rsp, ;ret;xor ecx, ecx;xor eax, eax": 1,
                "xor ecx, ecx;xor eax, eax;jmp ;mov qword [arg_c0h], 0;mov qword [arg_c8h], rdx": 1,
                "xor ecx, ecx;jmp ;call fcn.0042f500;mov rbp, qword [var_b0h];add rsp, ": 1,
                "call fcn.0042f500;mov rbp, qword [var_b0h];add rsp, ;ret;call fcn.00456090": 1,
                "call fcn.0049ffa0;mov rax, qword [var_10h];mov rcx, qword [var_20h];mov rdx, qword [var_18h];test rdx, rdx": 2,
                "mov qword [var_10h], rsi;mov qword [var_18h], rax;call fcn.00625880;mov rax, qword [var_40h];mov rcx, qword [var_28h]": 2,
                "mov rbx, qword [var_30h];mov rsi, qword [var_20h];test rdx, rdx;jne ;mov qword [var_48h], rcx": 2,
                "mov qword [var_48h], rcx;test rcx, rcx;jle ;mov qword [var_50h], rbx;mov qword [var_60h], rsi": 2,
                "mov qword [var_8h], rax;mov qword [var_10h], rcx;mov qword [var_18h], rbx;mov qword [var_20h], rsi;call fcn.00440d10": 1,
                "jne ;mov rax, qword [var_60h];mov rcx, qword [var_48h];mov rdx, qword [arg_88h];mov rbx, qword [var_50h]": 1,
                "xorps xmm0, xmm0;movups xmmword [arg_98h], xmm0;mov qword [arg_a8h], rdx;mov qword [arg_b0h], rax;mov rbp, qword [var_78h]": 1,
                "call fcn.0042ebd0;ud2;mov byte [], 1;call fcn.00461db0;call fcn.004de4e0": 2,
                "jmp ;xor eax, eax;jmp ;mov qword [rsp], rsi;mov qword [rsp + 8], rbx": 1,
                "xor eax, eax;jmp ;mov qword [rsp], rsi;mov qword [rsp + 8], rbx;mov qword [rsp + ], rcx": 1,
                "mov qword [var_18h], ;call fcn.00413cb0;mov rdi, qword [var_20h];test byte [rdi], al;cmp dword [], 0": 29,
                "mov qword [var_8h], rax;mov qword [var_10h], ;mov qword [var_18h], rcx;mov qword [var_20h], rdx;mov qword [var_28h], rbx": 24,
                "ret;call fcn.00456090;jmp fcn.00626fd0;int3;int3": 2,
                "call fcn.00621530;mov rax, qword [arg_50h];mov rax, qword [rax];mov qword [rsp], rax;lea rax, []": 18,
                "ud2;call fcn.00456090;jmp fcn.00627190;int3;int3": 4,
                "mov qword [var_a0h], rbp;lea rbp, [var_a0h];lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 5,
                "mov rcx, qword [var_78h];mov qword [rcx + ], rax;lea rax, [];mov qword [rsp], rax;call fcn.0040d880": 5,
                "mov qword [rdx + ], rax;mov rax, qword [var_78h];mov rcx, qword [rax + ];lea rdx, [];mov qword [rsp], rdx": 4,
                "jne ;mov rcx, qword [arg_b0h];mov qword [rax + 8], rcx;mov rdx, qword [var_50h];mov qword [rdx + ], rax": 4,
                "call fcn.0040d880;mov rdi, qword [var_8h];mov qword [var_60h], rdi;mov qword [rdi + 8], 5;cmp dword [], 0": 3,
                "mov qword [rax + 8], rcx;mov rdx, qword [var_60h];mov qword [rdx + ], rax;call fcn.0040e500;mov rax, qword [rsp]": 3,
                "mov qword [rsp], rdx;mov qword [var_8h], rcx;lea rcx, [];mov qword [var_10h], rcx;mov qword [var_18h], 5": 5,
                "cmp dword [], 0;jne ;mov rcx, qword [arg_b0h];mov qword [rax + 8], rcx;mov rdx, qword [var_70h]": 1,
                "mov rcx, qword [arg_b0h];mov qword [rax + 8], rcx;mov rdx, qword [var_70h];mov qword [rdx + ], rax;call fcn.0040e500": 1,
                "cmp dword [], 0;jne ;lea rax, [];mov qword [rdi + ], rax;call fcn.0040e500": 13,
                "cmp dword [], 0;jne ;lea rcx, [];mov qword [rdi], rcx;mov qword [var_50h], rdi": 3,
                "jne ;mov rcx, qword [arg_70h];mov qword [rax + 8], rcx;mov rdx, qword [var_50h];mov qword [rdx + ], rax": 3,
                "mov qword [rdi], rax;lea rax, [];mov qword [rsp], rax;lea rax, [var_40h];mov qword [var_8h], rax": 3,
                "mov qword [var_8h], rdi;inc rax;mov qword [var_10h], rax;mov qword [var_18h], rcx;call fcn.00620820": 3,
                "mov rax, qword [var_20h];mov rcx, qword [var_28h];test rax, rax;je ;mov qword [arg_78h], rax": 3,
                "movups xmmword [arg_78h], xmm0;mov rbp, qword [var_60h];add rsp, ;ret;mov rdx, rax": 3,
                "mov rdi, rdx;lea rax, [];call fcn.004580f0;jmp ;lea rax, []": 7,
                "lea rax, [];call fcn.004580f0;lea rcx, [];jmp ;mov rcx, qword [var_48h]": 3,
                "jne ;mov qword [var_a0h], rax;mov qword [var_60h], rcx;lea rax, [];mov qword [rsp], rax": 8,
                "mov qword [rsp], 0;mov rcx, qword [arg_e0h];mov qword [var_8h], rcx;mov rcx, qword [arg_e8h];mov qword [var_10h], rcx": 8,
                "mov qword [rdi + ], rax;cmp dword [], 0;jne ;mov rax, qword [var_98h];mov qword [rdi], rax": 5,
                "xorps xmm0, xmm0;movups xmmword [var_70h], xmm0;mov rax, qword [var_60h];mov qword [rsp], rax;mov rax, qword [var_a0h]": 5,
                "cmp dword [], 0;jne ;mov rcx, qword [var_b0h];mov qword [rax + ], rcx;lea rax, []": 5,
                "mov qword [rax + ], rcx;lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rax, qword [var_8h]": 5,
                "mov qword [var_18h], rax;mov qword [var_20h], 0;xorps xmm0, xmm0;movups xmmword [var_28h], xmm0;call fcn.004621c0": 5,
                "lea rbp, [var_98h];cmp qword [arg_e8h], 0;jg ;call fcn.00624190;mov rax, qword [arg_f8h]": 3,
                "mov qword [arg_110h], rsi;mov rbp, qword [var_98h];add rsp, ;ret;mov rbx, rcx": 3,
                "mov qword [arg_110h], rcx;mov rbp, qword [var_98h];add rsp, ;ret;call fcn.00456090": 3,
                "mov qword [var_60h], rax;mov rax, qword [arg_78h];mov rax, qword [rax];mov qword [rsp], rax;lea rax, []": 6,
                "add rsp, ;ret;xorps xmm0, xmm0;movups xmmword [arg_d0h], xmm0;mov qword [arg_e0h], 0": 6,
                "movups xmmword [arg_d0h], xmm0;mov qword [arg_e0h], 0;mov rbp, qword [var_68h];add rsp, ;ret": 6,
                "mov rbx, qword [var_20h];mov rsi, qword [var_28h];test rax, rax;je ;mov qword [var_58h], rax": 3,
                "mov qword [var_78h], rax;lea rax, [];mov qword [var_80h], rax;mov rax, qword [arg_b8h];mov rax, qword [rax]": 3,
                "mov rdx, qword [var_18h];mov rbx, qword [var_28h];mov rsi, qword [var_20h];test rcx, rcx;je ": 76,
                "mov rbp, qword [var_80h];add rsp, ;ret;call fcn.00456090;jmp fcn.006293a0": 3,
                "mov rbp, qword [var_80h];add rsp, ;ret;call fcn.00456090;jmp fcn.00629530": 2,
                "call fcn.0040e500;mov rax, qword [rsp];cmp dword [], 0;jne ;mov rcx, qword [var_c8h]": 32,
                "mov rcx, qword [arg_1d0h];mov qword [rax + 8], rcx;mov rdx, qword [var_d0h];mov qword [rdx + ], rax;mov rax, qword [var_c8h]": 4,
                "mov qword [rcx + ], rax;mov rax, qword [var_c8h];mov rcx, qword [rax + ];lea rdx, [];mov qword [rsp], rdx": 13,
                "mov qword [rax + 8], rcx;mov rdx, qword [var_a0h];mov qword [rdx + ], rax;call fcn.0040e500;mov rax, qword [rsp]": 3,
                "lea rax, [];mov qword [rsp], rax;call fcn.0040d880;mov rdi, qword [var_8h];mov qword [var_98h], rdi": 2,
                "mov rbx, qword [var_8h];mov qword [var_58h], rbx;mov rsi, qword [rsp];mov qword [var_70h], rsi;mov rdi, qword [rax + 8]": 3,
                "test rdx, rdx;je ;je ;mov rax, qword [rdx + 8];xorps xmm0, xmm0": 7,
                "xorps xmm0, xmm0;movups xmmword [var_90h], xmm0;mov qword [var_90h], rax;mov qword [var_98h], rcx;mov rax, qword [arg_e0h]": 3,
                "movups xmmword [var_a0h], xmm0;movups xmmword [var_b0h], xmm0;movups xmmword [var_c0h], xmm0;lea rbx, [];mov qword [var_a0h], rbx": 2,
                "mov qword [var_b8h], rdx;mov qword [var_c0h], rax;mov qword [var_c8h], rcx;mov rax, qword [arg_e0h];mov rax, qword [rax]": 2,
                "mov qword [var_30h], 3;mov qword [var_38h], 3;call fcn.006216d0;mov rax, qword [var_48h];mov rcx, qword [var_50h]": 6,
                "call fcn.006216d0;mov rax, qword [var_48h];mov rcx, qword [var_50h];mov rdx, qword [var_40h];mov qword [arg_138h], rdx": 4,
                "mov rbp, qword [var_d0h];add rsp, ;ret;mov rcx, rax;jmp ": 2,
                "mov qword [var_c0h], rcx;mov rax, qword [var_80h];mov qword [var_c8h], rax;mov rax, qword [arg_e0h];mov rax, qword [rax]": 2,
                "mov rax, qword [arg_38h];mov rax, qword [rax];mov rax, qword [rax + ];lea rcx, [];mov rcx, qword gs:[]": 1,
                "mov rcx, qword [var_d0h];mov qword [rcx + ], rax;call fcn.0040e500;mov rax, qword [rsp];mov rcx, qword gs:[]": 1,
                "jne ;mov rcx, qword [arg_1d8h];mov qword [rax + 8], rcx;mov rdx, qword [var_d8h];mov qword [rdx + ], rax": 4,
                "jne ;mov rcx, qword [arg_1d8h];mov qword [rax + 8], rcx;mov rdx, qword [var_b0h];mov qword [rdx + ], rax": 3,
                "lea rbp, [var_30h];mov rax, qword [arg_40h];mov rax, qword [rax];mov qword [rsp], rax;lea rax, [var_30h]": 1,
                "mov rax, qword [arg_40h];mov rax, qword [rax];mov qword [rsp], rax;lea rax, [var_30h];mov qword [var_8h], rax": 1,
                "mov rdx, qword [rax + 8];mov qword [var_70h], rdx;mov rax, qword [rax];mov qword [var_98h], rax;lea rdi, [var_150h]": 1,
                "mov qword [var_10h], rbx;call fcn.0060b600;mov rax, qword [var_20h];mov rcx, qword [var_18h];test rcx, rcx": 1,
                "mov rdx, qword [rax + ];mov rax, qword [rax];mov rbx, qword [var_98h];mov qword [rsp], rbx;mov rbx, qword [var_70h]": 1,
                "mov qword [rsp], rbx;mov rbx, qword [var_70h];mov qword [var_8h], rbx;mov rbx, qword [var_78h];mov qword [var_10h], rbx": 1,
                "mov rbx, qword [var_78h];mov qword [var_10h], rbx;mov qword [var_18h], rax;mov qword [var_20h], rcx;mov qword [var_28h], rdx": 1,
                "mov rsi, qword [rax + 8];mov rax, qword [rax];mov qword [rsp], rax;mov qword [var_8h], rsi;lea rax, []": 4,
                "xorps xmm0, xmm0;movups xmmword [var_a0h], xmm0;mov qword [var_a0h], rax;mov qword [var_a8h], rcx;mov rax, qword [arg_1b0h]": 1,
                "add rsp, ;ret;mov rax, rdx;jmp ;mov qword [var_88h], rax": 1,
                "mov rax, qword [var_40h];mov rcx, qword [var_48h];test rax, rax;je ;mov rdx, qword [var_58h]": 3,
                "jne ;mov rax, qword [var_30h];mov qword [rdi], rax;lea rax, [];mov qword [rsp], rax": 3,
                "mov rdi, qword [var_8h];mov qword [var_38h], rdi;mov qword [rdi + 8], 4;cmp dword [], 0;jne ": 3,
                "add rsp, ;ret;mov rax, rdx;jmp ;mov qword [var_70h], rax": 3,
                "mov rdx, qword [var_68h];mov qword [var_a0h], rdx;mov qword [var_a8h], rcx;mov qword [var_b0h], rax;mov rax, qword [arg_c8h]": 2,
                "mov rbp, qword [var_b8h];add rsp, ;ret;mov rax, qword [var_58h];test rax, rax": 2,
                "mov rcx, qword [var_60h];mov qword [var_38h], rcx;call fcn.005ed540;mov rax, qword [var_40h];mov rcx, qword [var_48h]": 2,
                "movups xmmword [var_a8h], xmm0;lea rbx, [];mov qword [var_88h], rbx;lea rbx, [];mov qword [var_90h], rbx": 2,
                "lea rbx, [];mov qword [var_88h], rbx;lea rbx, [];mov qword [var_90h], rbx;mov qword [var_98h], rdx": 2,
                "mov qword [arg_130h], rcx;mov rbp, qword [var_b8h];add rsp, ;ret;call fcn.00456090": 1,
                "mov rbp, qword [var_b8h];add rsp, ;ret;call fcn.00456090;jmp fcn.00636430": 1,
                "add rsp, ;ret;call fcn.00456090;jmp fcn.00636430;int3": 1,
                "mov edx, 1;xor ecx, ecx;call qword [];mov qword [], rax;test rax, rax": 1,
                "ret;call qword [];mov ecx, 2;mov ebx, dword [rax];call qword []": 5,
                "mov ecx, 2;mov ebx, dword [rax];call qword [];lea rdx, [];mov rcx, rax": 5,
                "push r12;sub rsp, ;lea rcx, [];call qword [];mov r12d, dword []": 2,
                "call qword [];mov r12d, dword [];lea rcx, [];call qword [];mov eax, r12d": 2,
                "push rbx;sub rsp, ;lea rbx, [];call fcn.0063a990;mov rbp, qword []": 2,
                "test esi, esi;je ;lea rcx, [];call rbp;mov rbx, qword []": 2,
                "lea rcx, [];mov dword [], 1;call qword [];mov rcx, qword [];call qword []": 2,
                "lea rcx, [];call qword [];mov rax, r12;add rsp, ;pop r12": 3,
                "mov rcx, r12;add rsp, ;pop rbx;pop rsi;pop r12": 3,
                "mov rcx, rax;mov r8d, ebx;call sub.msvcrt.dll_fprintf;call sub.msvcrt.dll_abort;push rbx": 3,
                "call sub.msvcrt.dll_fprintf;call sub.msvcrt.dll_abort;push rbx;sub rsp, ;xor eax, eax": 1,
                "mov r8d, ebx;call sub.msvcrt.dll_fprintf;call sub.msvcrt.dll_abort;push rbx;push rbp": 2,
                "mov rax, qword [arg_18h];add rax, rdx;pop rbp;ret;push rbp": 5,
                "push rbp;mov rbp, rsp;mov qword [arg_10h], rcx;pop rbp;ret": 6,
                "mov rax, qword [arg_10h];cmp rax, qword [arg_18h];jae ;mov ecx, ;mov rax, qword []": 8,
                "mov rax, qword [arg_28h];mov rax, qword [rax];movzx eax, word [rax + ];movzx eax, ax;add rax, rdx": 9,
                "jle ;mov rax, qword [arg_28h];mov rax, qword [rax + ];mov rdx, qword [arg_28h];mov rcx, qword [rdx + ]": 9,
                "mov rax, qword [arg_28h];mov rax, qword [rax + ];mov rdx, qword [arg_28h];mov rcx, qword [rdx + ];mov edx, dword [n]": 9,
                "mov rcx, r10;call rax;mov qword [var_20h_2], rax;cmp qword [var_20h_2], 0;jne ": 8,
                "mov qword [var_20h_2], rax;cmp qword [var_20h_2], 0;jne ;mov eax, 0;jmp ": 16,
                "mov eax, dword [n];movsxd rdx, eax;mov rax, qword [var_20h_2];mov r8, rdx;mov edx, 0": 8,
                "mov edx, 0;mov rcx, rax;call sub.msvcrt.dll_memset;jmp ;mov rax, qword [var_10h]": 8,
                "mov rcx, rax;call sub.msvcrt.dll_memset;jmp ;mov rax, qword [var_10h];mov edx, dword [rax + ]": 8,
                "mov rax, qword [var_10h];mov edx, dword [rax + ];mov rax, qword [var_10h];mov eax, dword [rax + ];add eax, edx": 9,
                "mov ecx, dword [rcx + ];mov r10d, ecx;mov rcx, qword [var_10h];mov ecx, dword [rcx + ];mov r8d, ecx": 8,
                "add dword [var_4h], 1;add qword [var_10h], ;mov rax, qword [arg_28h];mov rax, qword [rax];movzx eax, word [rax + 6]": 8,
                "mov eax, dword [rax + ];push rbp;mov rbp, rsp;sub rsp, ;mov qword [arg_10h], rcx": 3,
                "mov eax, dword [rax + ];mov dword [var_4h], eax;jmp ;mov rax, qword [arg_18h];mov eax, dword [rax + ]": 8,
                "test eax, eax;setne al;movzx eax, al;mov dword [var_8h], eax;mov rax, qword [arg_18h]": 4,
                "setne al;movzx eax, al;mov dword [var_8h], eax;mov rax, qword [arg_18h];mov eax, dword [rax + ]": 4,
                "test eax, eax;setne al;movzx eax, al;mov dword [var_ch], eax;mov rax, qword [arg_18h]": 3,
                "setne al;movzx eax, al;mov dword [var_ch], eax;mov rax, qword [arg_18h];mov eax, dword [rax + ]": 3,
                "lea rdx, [rax*4];lea rax, [];mov eax, dword [rdx + rax];mov dword [var_4h], eax;mov rax, qword [arg_18h]": 2,
                "mov rax, qword [var_10h];mov eax, dword [rax + ];mov dword [var_38h], eax;mov dword [var_34h], 0;add qword [var_10h], ": 3,
                "mov rax, qword [var_20h];mov rcx, rax;call fcn.0063ad39;mov qword [var_28h], rax;mov rax, qword [var_10h]": 3,
                "je ;mov eax, dword [var_38h];and eax, ;test eax, eax;jne ": 3,
                "mov dword [var_38h], eax;mov rdx, qword [var_20h];mov rax, qword [var_30h];add rdx, rax;mov rax, qword [var_50h]": 3,
                "mov qword [var_50h], rax;mov rax, qword [var_28h];mov qword [var_48h], rax;mov rax, qword [var_30h];mov qword [var_40h], rax": 2,
                "mov rax, qword [var_10h];mov eax, dword [rax + ];mov dword [var_38h], eax;add dword [var_4h], 1;add qword [var_10h], ": 2,
                "jl ;mov dword [var_34h], 1;lea rax, [var_50h];mov rdx, rax;mov rcx, qword [arg_10h]": 2,
                "sub rsp, ;mov qword [arg_10h], rcx;mov rax, qword [arg_10h];mov rax, qword [rax + 8];mov qword [var_10h], rax": 2,
                "mov eax, dword [rax];test eax, eax;jne ;mov eax, 1;jmp ": 2,
                "jne ;mov eax, 1;add rsp, ;pop rbp;ret": 4,
                "mov qword [var_20h], rax;mov rax, qword [arg_10h];mov rax, qword [rax];add rax, ;mov qword [var_28h], rax": 3,
                "movzx eax, word [rax];movzx eax, ax;and eax, ;mov dword [var_38h], eax;mov eax, dword [var_34h]": 3,
                "mov eax, dword [var_38h];movsxd rdx, eax;mov rax, qword [var_30h];add rax, rdx;push rbp": 1,
                "mov rax, qword [arg_18h];add rdx, rax;mov rax, qword [var_40h];mov qword [rax], rdx;jmp ": 2,
                "mov eax, dword [rax];test eax, eax;jne ;mov eax, 1;add rsp, ": 2,
                "mov eax, 1;jmp ;mov rax, qword [var_30h];mov eax, dword [rax];mov edx, eax": 3,
                "cmp qword [var_38h], 0;jne ;mov ecx, ;mov rax, qword [];call rax": 4,
                "call rax;mov ecx, ;mov rax, qword [];call rax;mov dword [var_ch], 0": 3,
                "mov rax, qword [var_28h];add rax, rdx;mov qword [var_18h], rax;mov rax, qword [var_8h];mov eax, dword [rax + ]": 6,
                "add rax, rdx;mov qword [var_18h], rax;mov rax, qword [var_8h];mov eax, dword [rax + ];push rbp": 1,
                "jne ;mov dword [var_ch], 0;jmp ;push rbp;mov rbp, rsp": 1,
                "jmp ;push rbp;mov rbp, rsp;sub rsp, ;mov qword [arg_10h], rcx": 1,
                "test rax, rax;jne ;mov dword [var_ch], 0;jmp ;add qword [var_18h], 8": 1,
                "add qword [var_20h], 8;mov rax, qword [var_18h];mov rax, qword [rax];test rax, rax;jne ": 1,
                "push rbp;mov rbp, rsp;sub rsp, ;mov qword [rbp + ], rcx;mov qword [rbp + ], rdx": 8,
                "mov rcx, qword [rbp + ];mov rax, qword [];call rax;add rsp, ;pop rbp": 3,
                "mov qword [rbp + ], rdx;push rbp;mov rbp, rsp;sub rsp, ;mov qword [arg_10h], rcx": 1,
                "mov rax, qword [n];mov eax, dword [rax + ];movsxd rdx, eax;mov rax, qword [arg_10h];add rax, rdx": 1,
                "mov qword [var_30h], rax;mov rax, qword [var_30h];cmp rax, qword [var_20h];jbe ;mov rax, qword [var_30h]": 1,
                "mov eax, eax;mov rcx, rax;call fcn.0063ad5f;mov qword [var_58h], rax;mov eax, dword [var_ach]": 1,
                "jne ;mov ecx, ;mov rax, qword [];call rax;mov eax, 0": 8,
                "call rax;mov qword [var_38h], rax;cmp qword [var_38h], 0;jne ;mov rdx, qword [arg_48h]": 1,
                "mov rbp, rsp;sub rsp, ;mov qword [arg_10h], rcx;mov rax, qword [arg_10h];mov qword [var_10h], rax": 1,
                "mov rax, qword [var_10h];mov rax, qword [rax + ];mov rdx, qword [var_10h];mov rdx, qword [rdx + ];mov rcx, qword [var_10h]": 1,
                "jl ;mov rax, qword [var_10h];mov rax, qword [rax + ];mov rcx, rax;call sub.msvcrt.dll_free": 1,
                "mov r8d, ;mov edx, 0;call rax;mov rax, qword [var_10h];mov rcx, qword [rax + ]": 1,
                "mov rax, qword [var_10h];mov rax, qword [rax + ];mov r8, rcx;mov rcx, rax;call fcn.0063adaa": 1,
                "mov eax, ;jmp ;mov rax, qword [var_8h];mov rax, qword [rax + ];call rax": 2,
                "jmp ;mov rax, qword [var_8h];mov rax, qword [rax + ];call rax;add rsp, ": 2,
                "mov rax, qword [rbp + ];mov r9d, 0;mov r8, rdx;mov rdx, rax;mov rcx, qword [rbp + ]": 2,
                "lea rbp, [arg_80h];mov qword [rbp + ], rcx;mov qword [rbp + ], rdx;mov qword [rbp + ], r8;mov rax, qword [rbp + ]": 3,
                "mov r8d, ;mov rdx, rax;call sub.msvcrt.dll_strtol;movzx eax, ax;mov dword [rbp + ], eax": 3,
                "shr rax, ;test rax, rax;jne ;mov rax, qword [rbp + ];mov word [rbp + ], ax": 3,
                "mov eax, dword [rbp + ];cmp eax, dword [rbp + ];jne ;mov eax, dword [rbp + ];sub eax, 1": 5,
                "sub eax, 1;jmp ;mov eax, dword [rbp + ];mov dword [rbp + ], eax;jmp ": 5,
                "call sub.msvcrt.dll_mbstowcs;mov rax, qword [rbp + ];lea rdx, [rax + rax];mov rax, qword [rbp + ];add rax, rdx": 2,
                "mov rax, qword [];call rax;mov dword [rbp + ], eax;cmp dword [rbp + ], 0;jne ": 2,
                "add rax, rdx;push rbp;mov eax, ;call fcn.0063e3f0;sub rsp, rax": 1,
                "mov rax, qword [var_10h];add rax, rdx;mov qword [var_20h], rax;mov rcx, qword [arg_20h];mov rdx, qword [var_20h]": 1,
                "mov rax, qword [var_10h];add rax, rdx;mov qword [var_30h], rax;mov rcx, qword [arg_18h];mov rdx, qword [var_30h]": 1,
                "test ax, ax;jne ;mov ecx, ;mov rax, qword [];call rax": 4,
                "mov edx, eax;mov rax, qword [var_8h];mov eax, dword [rax + 4];mov eax, eax;and eax, ": 1,
                "mov rax, qword [arg_18h];mov qword [var_10h], rax;cmp qword [var_10h], 0;jne ;mov eax, 0": 2,
                "mov rax, qword [var_18h];mov rdx, rax;mov rcx, qword [arg_10h];call fcn.0063cc5c;mov qword [var_8h], rax": 3,
                "mov byte [rax], 0;mov eax, 0;jmp ;mov rax, qword [var_8h];movzx eax, word [rax]": 3,
                "mov rax, qword [rax];test rax, rax;je ;call rax;mov rax, qword []": 2,
                "mov rax, qword [];lea rdx, [rax + 8];mov rax, qword [rax + 8];mov qword [], rdx;test rax, rax": 2,
                "test eax, eax;je ;ret;mov dword [], 1;jmp ": 3,
                "push rdi;push rsi;push rbx;sub rsp, ;mov rbx, qword []": 5,
                "lea rcx, [var_28h];mov r12d, eax;call qword [];xor rsi, qword [var_28h];mov eax, ebp": 5,
                "je ;mov rdx, rax;not rdx;mov qword [], rax;mov qword [], rdx": 4,
                "movabs rdx, ;movabs rax, ;jmp ;push rbp;push rsi": 4,
                "sub rsp, ;mov rax, qword [];cmp dword [rax], 2;je ;mov dword [rax], 2": 3,
                "jne ;mov eax, 1;add rsp, ;pop rbx;pop rsi": 3,
                "ret;call fcn.0063dd90;mov eax, 1;add rsp, ;pop rbx": 3,
                "push rbx;sub rsp, ;movaps xmmword [rsp + ], xmm6;movaps xmmword [rsp + ], xmm7;movaps xmmword [rsp + ], xmm8": 4,
                "mov rsi, qword [rcx + 8];mov ecx, 2;call fcn.0063e530;movsd qword [rsp + ], xmm8;mov r8, rbx": 3,
                "movaps xmm8, xmmword [rsp + ];add rsp, ;pop rbx;pop rsi;ret": 3,
                "pop rbx;pop rsi;ret;lea rbx, [];jmp ": 2,
                "lea rbx, [];jmp ;mov qword [], rcx;jmp sub.msvcrt.dll___setusermatherr;push rsi": 1,
                "sub rsp, ;mov r12, rcx;lea rax, [arg_58h];mov ecx, 2;mov qword [arg_58h], rdx": 3,
                "add rax, ;mov rdx, qword [rax];cmp r12, rdx;jb ;mov r8, qword [rax + 8]": 3,
                "mov r8d, dword [r8 + 8];add rdx, r8;cmp r12, rdx;jb ;add ecx, 1": 3,
                "mov dword [rax], 0;call fcn.0063e090;mov ecx, dword [rbp + ];lea rdx, [lpflOldProtect];mov r8d, ": 3,
                "je ;movzx eax, byte [rsi];mov byte [r12], al;test bl, 2;jne ": 3,
                "jb ;add rsp, ;pop rbx;pop rsi;pop rdi": 3,
                "mov word [r12 + rbx - 2], ax;jmp ;mov rdx, r12;lea rcx, [];call fcn.0063d2f0": 3,
                "push rsi;push rbx;sub rsp, ;lea rbp, [var_80h];mov esi, dword []": 3,
                "pop r15;pop rbp;ret;mov dword [], 1;call fcn.0063dff0": 3,
                "sub rsp, rax;lea rax, [lpflOldProtect];mov qword [], rax;mov rax, r12;sub rax, rbx": 3,
                "je ;cmp r8d, ;jne ;movzx r8d, word [rcx];mov rdi, r15": 2,
                "test r8w, r8w;cmovs r8, r10;add rbx, ;push rbp;push r15": 1,
                "test r8w, r8w;cmovs r8, r10;add rbx, ;sub r8, rdx;mov rdx, r15": 1,
                "mov qword [rbp - ], r8;mov r8d, 2;call ;cmp rbx, r12;jb ": 1,
                "mov edi, eax;or edi, dword [rbx + 8];jne ;mov edx, dword [rbx + ];add rbx, ": 1,
                "call fcn.0063d2c0;xor r8d, r8d;mov eax, r8d;add rsp, ;ret": 1,
                "je ;jbe ;xor r8d, r8d;cmp eax, ;je ": 1,
                "mov ecx, 4;call rax;xor r8d, r8d;mov eax, r8d;add rsp, ": 1,
                "call rax;xor r8d, r8d;mov eax, r8d;add rsp, ;ret": 1,
                "mov eax, r8d;add rsp, ;ret;xor edx, edx;mov ecx, 8": 1,
                "add r12, 1;add rbx, ;mov dword [rdi + 4], ebp;mov edx, dword [rax + ];mov dword [rbx - ], edx": 1,
                "mov rax, rdi;add rdi, 8;sub rax, rsi;mov dword [rbx - 8], edx;mov dword [rbx - 4], eax": 1,
                "mov r8, rsi;lea rcx, [];call qword [];jmp ;push r12": 1,
                "jmp ;push r12;sub rsp, ;mov rdx, qword [rcx];mov eax, dword [rdx]": 1,
                "sub rsp, ;mov rdx, qword [rcx];mov eax, dword [rdx];mov r12, rcx;mov ecx, eax": 1,
                "test rax, rax;je ;mov ecx, 4;call rax;mov eax, ": 1,
                "mov ecx, ;call sub.msvcrt.dll_signal;cmp rax, 1;je ;test rax, rax": 1,
                "or eax, ;jmp ;mov edx, 1;mov ecx, 8;call sub.msvcrt.dll_signal": 1,
                "mov edi, ecx;mov rsi, rdx;test eax, eax;jne ;add rsp, ": 2,
                "test eax, eax;jne ;add rsp, ;pop rbx;pop rsi": 2,
                "pop rdi;ret;or eax, ;jmp ;push r12": 1,
                "test eax, eax;jne ;xor eax, eax;add rsp, ;pop rbx": 1,
                "je ;mov qword [rdx + ], rax;call sub.msvcrt.dll_free;lea rcx, [];call qword []": 1,
                "pop rbx;ret;cmp edx, 3;jne ;mov eax, dword []": 2,
                "lea rcx, [];call qword [];jmp ;mov eax, dword [];test eax, eax": 2,
                "mov eax, dword [];cmp eax, 1;jne ;mov rbx, qword [];test rbx, rbx": 2,
                "ret;push r12;push rsi;push rbx;sub rsp, ": 3,
                "cmp r12, rsi;je ;mov r8d, 8;mov rdx, rbx;mov rcx, r12": 4,
                "sub rsp, ;xor r8d, r8d;mov r9, rcx;mov rcx, qword [];cmp word [rcx], ": 6,
                "test eax, eax;je ;sub eax, 1;lea rax, [rax + rax*4];lea rax, [r8 + rax*8 + ]": 6,
                "je ;sub eax, 1;lea rax, [rax + rax*4];lea rax, [r8 + rax*8 + ];test byte [r8 + ], ": 6,
                "test r9, r9;je ;sub r9, 1;add r8, ;cmp r8, rax": 6,
                "je ;movsxd rax, dword [r9 + ];mov rcx, r8;sub rcx, r9;movsxd rax, dword [rcx + ]": 1,
                "sub rcx, r9;movsxd rax, dword [rcx + ];lea rdx, [rax + rcx];xor eax, eax;cmp dword [rdx], ": 1,
                "lea rdx, [rdx + rdx*4];lea r9, [rax + rdx*8 + ];mov r8d, dword [rax + ];mov rdx, r8;cmp rcx, r8": 6,
                "je ;movzx edx, word [rcx + ];lea rdx, [rcx + rdx + ];movzx ecx, word [rcx + 6];test ecx, ecx": 6,
                "add ecx, dword [rdx + 8];cmp rax, rcx;jb ;add rdx, ;cmp rdx, r10": 5,
                "cmp rdx, r10;jne ;xor r9d, r9d;mov rax, r9;add rsp, ": 5,
                "mov ecx, dword [rax + 4];test ecx, ecx;jne ;mov edx, dword [rax + ];test edx, edx": 5,
                "test edx, edx;je ;test r8d, r8d;jg ;mov r9d, dword [rax + ]": 5,
                "mov r9d, dword [rax + ];add r9, r11;mov rax, r9;add rsp, ;ret": 5,
                "jmp qword [];jmp qword [];jmp qword [];sub rsp, ;xor r8d, r8d": 1,
                "add byte [rax], al;add byte [rax], al;jne ;jae ;jo ": 1,
                "push rcx;push rdx;xor al, ;push rsp;xor ebp, dword [rcx + ]": 1,
                "xor eax, ;invalid;invalid;invalid;invalid": 1,
                "js ;invalid;push r11;xor al, byte [rsi + ];push r8": 1,
                "xor ah, byte [rdx + ];xor eax, ;pop r8;push r15;push rax": 1,
                "sub ebx, dword [rcx + ];push rsp;jb ;xor dword [rbp + ], ebp;push rcx": 1,
                "insb byte [rdi], dx;jp ;jbe ;pop rcx;push rdx": 1,
                "xor eax, ;imul r14, qword [rbx + r13*2 + ], ;jo ;xor dword [rcx + ], eax;js ": 1,
                "cmp byte [rdx + ], cl;movsxd rcx, dword [rbx + ];jae ;invalid;xor dl, byte [rdi + ]": 1,
                "pop rdx;xor r13b, byte [r12 + rdx*2 + ];js ;insb byte [rdi], dx;xor dword [rcx + ], ebp": 1,
                "\u001b[2K": 1,
                "WARNING: Length of base class array at 0x00455bf0 exceeds 32.": 1,
                "Failed to demangle a class name: \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u000b\"": 1,
                "[esil at 0x004eb62f] TODO:": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                "``.data": 1,
                ".rdata": 1,
                "`@.pdata": 1,
                "0@.xdata": 1,
                "0@.bss": 1,
                ".idata": 1,
                "AUATUWVSH": 1,
                "[^_]A\\A]": 2,
                "Go build ID: \"e2aqK87Jocunm0skraTZ/Yi8S8_MNUYeeBEPUjSXm/6cU1W5xjEByTiFwgF4Yq/8t9rX3WZsQ3ERO8zNWXh\"": 1,
                "H95%VO": 1,
                "D$xH9D$": 5,
                "L$(H9A": 3,
                "D$`H9D$": 8,
                "I8H9y@": 1,
                "L$8H9L$": 1,
                "D$pH9B(t": 1,
                "t+M9A t": 3,
                "D9L$Xu": 1,
                "t+H9w t": 1,
                "Z`H9Z8": 1,
                "H`H9H8t%": 1,
                "L$@H9A8u H": 1,
                "D$HH9D$(u": 1,
                "H9AxwEH9": 1,
                "|$,HcC": 1,
                "D$xHcH": 1,
                "X(9Z(v9H": 1,
                "H9s uPH9B": 1,
                "|$,fD9": 1,
                "\\$49YX": 1,
                "Xg8YguDH": 1,
                "H+D$ H": 1,
                "H8H9H0}BH": 1,
                "D$ H)57": 1,
                "L$ H+A": 2,
                "L$p9D$L": 1,
                "kernel32H": 1,
                "l32.dll": 1,
                "LoadLibrH": 2,
                "raryExA": 1,
                "raryExW": 1,
                "advapi32H": 1,
                "i32.dll": 1,
                "SystemFuH": 1,
                "ntdll.dlH": 1,
                "NtWaitFoH": 1,
                "winmm.dlH": 1,
                "timeEndPH": 1,
                "dPeriod": 1,
                "ws2_32.dH": 1,
                "_32.dll": 1,
                "WSAGetOvH": 1,
                "wine_getH": 1,
                "H#\\$0H": 1,
                "GetSysteH": 1,
                "QueryPerH": 1,
                "\\$HH9Z": 1,
                "L$8H9A(": 1,
                "D$+e+H": 1,
                "H9A0tbH": 1,
                "H9H0tkH": 1,
                "T$L9T$H": 1,
                "L$0H9Hp": 1,
                "ulH9ZHuf": 1,
                "memprofiH92u": 1,
                "memprofiH": 2,
                "memprofi": 2,
                "9noneu": 1,
                "9crasu": 1,
                "9singu8f": 1,
                "P89Q8v0H9A": 1,
                "v89w8@": 1,
                "D$8<@H": 1,
                "L9B(v H": 1,
                "@8L+@(M": 1,
                "<3@8:ui": 1,
                "HcD$0H": 3,
                "t$hH9p": 2,
                "L$XHcT$(H": 2,
                "H9\\$Xv": 1,
                "HcD$TH": 1,
                "\\$HHcR": 1,
                "L$H9A ~": 2,
                "L$(8A'v": 1,
                "K(H9S0": 1,
                "K(L9K0": 1,
                "A(H9q0": 1,
                "HcD$(H": 2,
                "runtime.H": 3,
                "HcD$ H": 1,
                "L$PHcT$(H": 1,
                "|$PH97": 1,
                "runtime.H9": 1,
                "T$@H9J0": 1,
                "p8H9X@": 4,
                "B8H9Z@": 3,
                "D$pH9D$": 2,
                "D$hH9D$": 2,
                "D$@H9D$": 3,
                "H+t$(H": 1,
                "T$09J$u>": 1,
                "H(9J(t": 1,
                "L$0H9A": 3,
                "L$08A'": 1,
                "L$(H9A8": 1,
                "r(H9p(t11": 1,
                "H0H9J0u": 1,
                "@8H9B8": 1,
                "r H9X(t#1": 1,
                "@0H9B0": 2,
                "T$0H9JPu": 1,
                "JXH9HX": 1,
                "T$0H9J": 2,
                "t?H91u]H": 1,
                "\\$HH)C": 1,
                "0H92t#1": 3,
                "Q0H+Q(H": 1,
                "Z0H+Z(H": 2,
                "Z0H9Z(": 1,
                "|$@H9J": 1,
                "Q(H9Q0uMH": 1,
                "H0H+H(H": 1,
                "Q0H+Q(H9Q": 1,
                "Q0H9Q(}RH": 1,
                "|,0H9B": 1,
                "R H9P t": 9,
                "Q8H9A@~": 1,
                "X8H9P@": 1,
                "Q8H9A@": 2,
                "X8L9P@": 1,
                "y8H9Y@": 1,
                "\\$HH9X@": 1,
                "C8H9{@": 1,
                "D$(H9D$": 4,
                "D$ H9D$": 1,
                "Q2f9P2": 1,
                "P0f9Q0": 1,
                "Q@H9P@t": 1,
                "Q@H9P@": 1,
                "D$HH9D$": 4,
                "D$xH9H@": 1,
                "x8H9p@w": 1,
                "CallSlicL": 1,
                "\\$@H9X@": 1,
                "T$(H9B@": 1,
                "T$0H9B": 2,
                "\\$HH9S": 1,
                "L$HH9A": 1,
                "L$ H9L$": 1,
                "L$8H9J": 1,
                "p(H9X tR1": 1,
                "H0H9J0u:H": 1,
                "H8H9J8u,H": 1,
                "H@H9J@": 1,
                "@HH9BH": 1,
                "L$(~<H": 1,
                "t$8H9r": 1,
                "L$pH9L$": 1,
                "D$PH9D$": 2,
                "\\$<9\\$8": 2,
                "\\$T9\\$L": 2,
                "\\$,9\\$(": 2,
                "H9L$XucH": 5,
                "H9L$@u]H": 1,
                "H9L$(uWH": 2,
                "@ H9S(t": 1,
                "9t$Hv9H": 1,
                "-07:00:0H9": 1,
                "-07:00:0": 10,
                "2006t<H": 1,
                "Z07:00:0H9": 1,
                "Z07:00:0": 1,
                "t/@80u*H": 1,
                "9WITAt": 1,
                "t2H9X@": 1,
                ",H9XH~&H": 1,
                "tNH9X@": 1,
                "HH9XH~BH": 1,
                "D$8H9D$ ulH": 1,
                "t$`H9N": 1,
                "r H9X(": 2,
                "r0H9H8tF1": 2,
                "R@H9XHt": 2,
                "H9L$@ucH": 2,
                "J 9H u!H": 1,
                "H(H9J(": 1,
                "X(H9P t": 1,
                "T$PHcX(": 1,
                "unixgramH": 1,
                "unixpackH9": 1,
                "D$8uoH": 1,
                "p H9H(tF1": 1,
                "X8H9P0t": 1,
                "rHH9XPt<1": 1,
                "method:L": 1,
                "(BADINDEH": 1,
                "(MISSINGH": 1,
                "%!(NOVERM": 1,
                "%!(EXTRAM": 1,
                "%!(BADPRM": 1,
                "BADPREC)M": 1,
                "%!(BADWIM": 1,
                "t$0H9J s5H": 1,
                "\\$pH9C s[H": 1,
                "t$@H9K seH": 1,
                "9QxtaH": 1,
                "D$PH+D$": 1,
                "L$hH9A@": 1,
                "o\\$ fE": 1,
                "o\\$0fE": 1,
                "o\\$@fE": 1,
                "o\\$PfE": 1,
                "o\\$`fE": 1,
                "o\\$pfE": 1,
                "J(f9H(uR": 1,
                "J0H9H0t": 1,
                "D$`tZH": 1,
                "D$`8D$": 1,
                "L$X8L$": 1,
                "<0r*<9w&H": 1,
                "D$7< u0H": 1,
                "L$XH9L$ t=H": 1,
                "Z8H9B@t": 1,
                "p(H9Z0": 1,
                "r8H9J@": 1,
                "pPH9rP": 1,
                "JX8HXu|H": 1,
                "p`H9ZhtF1": 1,
                "ZpH9Jxt": 1,
                "T$hA82": 1,
                "t$BfE9": 1,
                "XPM9XHu^M": 1,
                "n0M9l$0A": 1,
                "H(L9@8": 1,
                "Y(H9A0u41": 1,
                "QXH9PXt]": 1,
                "q`H9Qht": 1,
                "PHH9QHt": 1,
                "QPH9PPt": 1,
                "PHH9PPu&H": 1,
                "YHH9YP": 1,
                "D$PH9A": 1,
                "H9A0|>H": 1,
                "Y H9Q(w": 1,
                ",$M9T$": 1,
                "XHH9PPw": 1,
                "bHM9ZP": 1,
                "Q(H9A0v>": 1,
                "L$@H9H": 1,
                "H H9P(": 3,
                "C L9C(": 2,
                "D9f0v+L": 3,
                "D9^0v*L": 1,
                "D9a0v+L": 1,
                "D9a0v?L": 1,
                "0H92t01": 1,
                "8fatauCA": 1,
                "H91uMt3H": 1,
                "D$hu1H": 1,
                "<1rQ<9wMH": 1,
                "t$PH9^@}": 1,
                "8falst": 1,
                "8trueA": 1,
                "Ku_=*!": 1,
                "<:tF<[u!H": 1,
                "D$0< w": 2,
                "uP<]u&H": 1,
                "un<}uDH": 1,
                "H H9J u|H": 1,
                "r(H9X0tF1": 2,
                "R@H9P@t": 2,
                "D$`H9\\$h": 1,
                "s(H9S0": 1,
                "~@H9^H": 1,
                "L$xH+A H": 1,
                "H H9J u": 1,
                "@(H9B(": 1,
                "D$8H9D$": 2,
                "L$PH9K": 1,
                "0H92tq1": 1,
                "J H9H u": 2,
                "J(H9H(": 1,
                "@ H9C t": 3,
                "R(H9P(t": 3,
                "r(H9p(tF1": 1,
                "X@H9P8t": 1,
                "R8H9H@t": 1,
                "9falsu": 1,
                "x@4uuH": 1,
                "y@1tPH": 1,
                "x ^uOH": 1,
                "9trueuHH": 1,
                "9falsui": 1,
                "y /tiH": 1,
                "T$xH9P": 1,
                "<0rY<7wU": 1,
                "L$`H+A": 1,
                "H H9J u<H": 1,
                "R(H9X0t": 2,
                "0H92tp1": 1,
                "L$8H9H": 1,
                "D$P8X9": 1,
                "H H9L$": 1,
                "L$hH9H(": 1,
                "H H+H0H": 1,
                "\\$8t(H": 1,
                "T$0H+B": 1,
                "T$8H+B": 2,
                "T$8H+J": 1,
                "L$`H9A@~^H": 1,
                "D$H8X8": 1,
                "H9T$ u5u": 1,
                "L$xH+A": 1,
                "T$`H+B": 1,
                "0H92t|1": 1,
                "H H9J u+": 1,
                "D$0<Ar": 1,
                "<arM<z": 1,
                "<0r<<9": 1,
                "8ArrauF": 1,
                "8GoAru": 1,
                ":GoAru": 2,
                "8Striu": 1,
                ":Striu": 1,
                "FunctionH9": 5,
                "?Striu": 1,
                "?Boolu": 1,
                "9GoAru": 2,
                "FunctionH9>@": 1,
                "Function1": 2,
                ":RegEt": 1,
                "L$@t#H": 1,
                "argumentM9": 1,
                "argument": 2,
                ">evalA": 1,
                "FunctionL97@": 1,
                "8evalA": 1,
                "FunctionM9": 1,
                "t$xH9p": 1,
                "T$pH9P": 1,
                "\\$XH9Y": 1,
                "t$XH9p": 1,
                "L$HL9I": 1,
                "t$`H9p": 1,
                "t$PH9p": 1,
                "t$HH9p": 1,
                "D$|#D$": 1,
                "D$|3D$": 1,
                "D$O8D$": 1,
                "L$hH9L$ t": 1,
                "URIErrorH": 1,
                "EvalErroH9": 1,
                "TypeErroH9": 1,
                "RangeErrH": 1,
                "SyntaxErH9": 1,
                "ReferencH9": 1,
                "FunctionH92": 1,
                "Function": 2,
                "L$HH9D$P": 1,
                "L$HH9D$PvaH": 1,
                "L$XH9D$`v[H": 1,
                "9Arrau": 1,
                "9Striu": 1,
                "u*z(fH": 1,
                "D$/8D$": 2,
                "L$8H9L$ t": 2,
                "|$PH9\\$Xt$H": 2,
                ":FALSuM": 1,
                ":Falsu/": 1,
                "_B>fu2H": 1,
                "r0H9X8tF1": 1,
                "K H9H uR": 1,
                "K(8H(uEH": 1,
                "K0H9H0u7H": 1,
                "K8H9H8t": 1,
                "H9H tF1": 1,
                "H H9J uXH": 1,
                "p0H9X(t\"1": 1,
                "R H9X(t": 1,
                "<$Objeu": 1,
                "ATUWVSH": 4,
                "0[^_]A\\": 3,
                "SUATAUAVAW": 1,
                "A_A^A]A\\][": 1,
                "P[^_]A\\": 2,
                "UAWAVAUATWVSH": 1,
                "[^_A\\A]A^A_]": 1,
                "[^_]A\\": 1,
                "ATWVSH": 1,
                "([^_A\\H": 1,
                "tDHcA<H": 1,
                "tMIcB<L": 1,
                "t@HcA<H": 1,
                "tKIcA<L": 1,
                "tNIcK<L": 1,
                "!-4=DMT`nuy}": 1,
                "4s7AteChGFCa45t9mYZFAqd3STdjdIPkn8uKiV9s1d27BPtVfhkLwfqC0MZ5sX0zIpuUZmquascUXKB7zkqb7NOzg4DcppWHLI2EYkAHzglvbGubJ0Z3zwp8npD7m0g2gvXYUo2f7VedHKwF3VfhmwgxQePq39iy31M2fSPIoDFdEIIuDuTlKHPJNXLVaHLAMhDIdTt4s4Zw1P4gvsZhRpIDoYXXd04nN2Jg6uZa0aiDZIiVKHwcMbkCr2MyFiL9rSdrW0FwHVQhL0UQXuxROPgNJhHCTeCm0": 1,
                "fatal error: cgo callback before cgo call": 1,
                "KUUUUU": 1,
                "?HUUUUU": 1,
                "o$_jZkbkU": 1,
                "!\"#$$%%&&'''((()**+++++,,,,,,----......///0012222222222333333333344555566666777777777778888888888999999::::::::::::::::": 1,
                "<<<<<===========>>>>>>>>>>??????????????????????@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB": 1,
                "!\"#$%&'()*+,-./0123456789:": 1,
                "<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~": 1,
                "+/,_,&-": 1,
                "@?}[=?": 1,
                "S>\"MN>": 1,
                "2>>H->": 1,
                "hy={uh=": 1,
                "c~,\"l~": 1,
                "/0=H10": 1,
                "n60/&80": 1,
                "B09<D0": 1,
                "[0jr]0": 1,
                "W_0'@a0": 1,
                "-c0B e0": 1,
                "m0J0o0": 1,
                "Fq0-ds0u": 1,
                "y0X,|0vu~0": 1,
                "' 0 ^ p q t": 1,
                "!&$@$J$`$s+v+": 1,
                ",'-----0-g-o-p-": 1,
                "='9-6d": 1,
                "_jbF~T": 1,
                "11#?*0": 1,
                ",4$8_@": 1,
                "t\\lHBW": 1,
                "QPeA~S": 1,
                ">4$8,@": 1,
                "p\\lHtW": 1,
                "+HpXhE": 1,
                "T[$:.6": 1,
                "=j&&LZ66lA??~": 1,
                "}{))R>": 1,
                "f\"\"D~**T": 1,
                "V22dN::t": 1,
                "o%%Jr..\\$": 1,
                "&&Lj66lZ??~A": 1,
                "99rKJJ": 1,
                "==zGdd": 1,
                "\"\"Df**T~": 1,
                "22dV::tN": 1,
                "$$Hl\\\\": 1,
                "C77nYmm": 1,
                "%%Jo..\\r": 1,
                "55j_WW": 1,
                "&Lj&6lZ6?~A?": 1,
                "~=zG=d": 1,
                "\"Df\"*T~*": 1,
                "2dV2:tN:": 1,
                "x%Jo%.\\r.": 1,
                "a5j_5W": 1,
                "ggV}++": 1,
                "Lj&&lZ66~A??": 1,
                "bS11*?": 1,
                "Xt,,4.": 1,
                "MMfU33": 1,
                "PPxD<<%": 1,
                "Bc!! 0": 1,
                "~~zG==": 1,
                "Df\"\"T~**": 1,
                "dV22tN::": 1,
                "xxJo%%\\r..8$": 1,
                "pp|B>>q": 1,
                "aaj_55": 1,
                "UUPx((": 1,
                "?/*p?3": 1,
                "B?Qt??u+<?": 1,
                "&?XS$?": 1,
                "r>b<o>": 1,
                "Y>z)W>": 1,
                "L>5~J>3": 1,
                "@>VK>>": 1,
                "Q=TvL=": 1,
                "_'/1P*/r<-/": 1,
                "L/dYO/": 1,
                "x/1b{/": 1,
                ".0EP00": 1,
                "10{:30": 1,
                "<0<*>0": 1,
                "fL0RWN0": 1,
                "RP0*YR0FkT0": 1,
                "$42j?+": 1,
                "Qy8v8L": 1,
                "2@z$Zf": 1,
                "{$WcI6k2": 1,
                "XT1a~uL": 1,
                "6e%9m8": 1,
                "u~`q`l|=": 1,
                "errors": 2,
                "regexp": 2,
                "*[]int": 1,
                "*error": 1,
                "*int16": 1,
                "*int32": 1,
                "*int64": 1,
                "*uint8": 1,
                "Accept": 1,
                "ArrayT": 1,
                "Assign": 1,
                "Before": 1,
                "Buffer": 1,
                "BySize": 1,
                "Callee": 1,
                "CanSet": 1,
                "Column": 1,
                "Consts": 1,
                "Cycles": 1,
                "Debugf": 1,
                "Decode": 1,
                "Delete": 1,
                "Enable": 1,
                "Encode": 1,
                "Errorf": 1,
                "ExecIO": 1,
                "Exited": 1,
                "Expand": 1,
                "Export": 1,
                "Family": 1,
                "Fatalf": 1,
                "Fchdir": 1,
                "Fchmod": 1,
                "Fchown": 1,
                "Fields": 1,
                "Format": 1,
                "Getenv": 1,
                "HEvent": 1,
                "Halted": 1,
                "Handle": 1,
                "HasADX": 1,
                "HasAES": 1,
                "HasAVX": 1,
                "HasFMA": 1,
                "HasSM3": 1,
                "HasSM4": 1,
                "HasSVE": 1,
                "Header": 1,
                "Infoln": 1,
                "InitVM": 1,
                "Int31n": 1,
                "Int63n": 1,
                "IsNull": 1,
                "IsZero": 1,
                "LastGC": 1,
                "Layout": 1,
                "Length": 1,
                "Linger": 1,
                "Logger": 1,
                "Lookup": 1,
                "MaxCap": 1,
                "Member": 1,
                "Method": 1,
                "Minute": 1,
                "NewGCM": 1,
                "NextGC": 1,
                "NumCap": 1,
                "NumOut": 1,
                "Number": 1,
                "Object": 1,
                "Offset": 1,
                "Opaque": 1,
                "Output": 1,
                "Panicf": 1,
                "Paused": 1,
                "Prefix": 1,
                "Printf": 1,
                "Pwrite": 1,
                "ReadAt": 1,
                "RegExp": 1,
                "Return": 1,
                "Scheme": 1,
                "Search": 1,
                "Second": 1,
                "SetCap": 1,
                "SetInt": 1,
                "SetLen": 1,
                "SetNaN": 1,
                "Signal": 1,
                "Slice3": 1,
                "SliceT": 1,
                "Source": 1,
                "Stack0": 1,
                "Strict": 1,
                "Stride": 1,
                "String": 1,
                "Struct": 1,
                "Switch": 1,
                "Uint32": 1,
                "Uint64": 1,
                "Unlock": 1,
                "Update": 1,
                "Warnln": 1,
                "Writer": 1,
                "Writev": 1,
                "ZoneId": 1,
                "_defer": 1,
                "_error": 1,
                "_outer": 1,
                "_panic": 1,
                "_parse": 1,
                "_write": 1,
                "active": 1,
                "addSec": 1,
                "allocs": 1,
                "append": 1,
                "arenas": 1,
                "argLen": 1,
                "arglen": 1,
                "argmap": 1,
                "attach": 1,
                "bitmap": 1,
                "branch": 1,
                "bucket": 1,
                "callee": 1,
                "canPut": 1,
                "chunks": 1,
                "cipher": 1,
                "closed": 1,
                "common": 1,
                "concat": 1,
                "cutoff": 1,
                "cutset": 1,
                "cycles": 1,
                "decref": 1,
                "delete": 1,
                "digest": 1,
                "divMul": 1,
                "divmod": 1,
                "efence": 1,
                "eflags": 1,
                "elemOp": 1,
                "encode": 1,
                "endTop": 1,
                "etypes": 1,
                "exists": 1,
                "exited": 1,
                "expand": 1,
                "expect": 1,
                "export": 1,
                "factor": 1,
                "fields": 1,
                "fmtSbx": 1,
                "format": 1,
                "frames": 1,
                "funcID": 1,
                "future": 1,
                "gc_sys": 1,
                "gcdata": 1,
                "genCol": 1,
                "getPtr": 1,
                "global": 1,
                "goTime": 1,
                "handle": 1,
                "helper": 1,
                "hevent": 1,
                "holder": 1,
                "inList": 1,
                "incref": 1,
                "inputs": 1,
                "insert": 1,
                "int31n": 1,
                "intbuf": 1,
                "isCall": 1,
                "isDate": 1,
                "isFile": 1,
                "isFree": 1,
                "isdone": 1,
                "labels": 1,
                "layout": 1,
                "length": 1,
                "lineno": 1,
                "locabs": 1,
                "logger": 1,
                "lookup": 1,
                "mapped": 1,
                "mcache": 1,
                "mcount": 1,
                "member": 1,
                "method": 1,
                "minute": 1,
                "misses": 1,
                "mustBe": 1,
                "native": 1,
                "nbytes": 1,
                "nchunk": 1,
                "needed": 1,
                "nelems": 1,
                "newval": 1,
                "nmidle": 1,
                "noCopy": 1,
                "noscan": 1,
                "npages": 1,
                "npidle": 1,
                "numCap": 1,
                "number": 1,
                "object": 1,
                "offset": 1,
                "oldval": 1,
                "opaque": 1,
                "opcode": 1,
                "outbuf": 1,
                "p1home": 1,
                "p2home": 1,
                "p3home": 1,
                "p4home": 1,
                "p5home": 1,
                "p6home": 1,
                "palloc": 1,
                "parent": 1,
                "parked": 1,
                "pcfile": 1,
                "period": 1,
                "prefix": 1,
                "procid": 1,
                "ptrbit": 1,
                "putGen": 1,
                "putPtr": 1,
                "pwrite": 1,
                "qcount": 1,
                "quoted": 1,
                "random": 1,
                "reader": 1,
                "refill": 1,
                "remove": 1,
                "repeat": 1,
                "result": 1,
                "revise": 1,
                "rusage": 1,
                "rwlock": 1,
                "second": 1,
                "setLoc": 1,
                "set_ip": 1,
                "set_lr": 1,
                "set_sp": 1,
                "shared": 1,
                "sharpV": 1,
                "shift2": 1,
                "signal": 2,
                "source": 1,
                "sparse": 1,
                "state1": 1,
                "status": 1,
                "strict": 1,
                "string": 1,
                "submit": 1,
                "tagLen": 1,
                "target": 1,
                "thread": 1,
                "ticket": 1,
                "toRead": 1,
                "tryGet": 1,
                "tstart": 1,
                "unlock": 1,
                "unused": 1,
                "update": 1,
                "values": 1,
                "varint": 1,
                "vdsoPC": 1,
                "vdsoSP": 1,
                "wanted": 1,
                "writer": 1,
                "xcount": 1,
                "net/url": 1,
                "os/user": 1,
                "reflect": 1,
                "runtime": 2,
                "strconv": 1,
                "strings": 2,
                "syscall": 2,
                "unicode": 1,
                "**uint8": 1,
                "*[0]int": 1,
                "*[1]int": 1,
                "*[2]int": 1,
                "*[4]int": 1,
                "*[5]int": 1,
                "*[6]int": 1,
                "*[8]int": 1,
                "*[9]int": 1,
                "*[]bool": 1,
                "*[]int8": 1,
                "*[]uint": 1,
                "*fmt.pp": 1,
                "*func()": 1,
                "*string": 1,
                "*uint16": 1,
                "*uint32": 1,
                "*uint64": 1,
                "AddDate": 1,
                "AddFile": 1,
                "Boolean": 1,
                "Buffers": 1,
                "CanAddr": 1,
                "ChanDir": 1,
                "Closing": 1,
                "CmdLine": 1,
                "Comment": 1,
                "Compile": 1,
                "Complex": 1,
                "Context": 1,
                "Control": 1,
                "Convert": 1,
                "Current": 1,
                "DbgDbgf": 1,
                "DebugGC": 1,
                "Debugln": 1,
                "Decrypt": 1,
                "Default": 1,
                "Disable": 1,
                "Discard": 1,
                "Encrypt": 1,
                "Errorln": 1,
                "Factory": 1,
                "Fatalln": 1,
                "Feature": 1,
                "Finally": 1,
                "FindAll": 1,
                "Float32": 1,
                "Float64": 1,
                "HasAVX2": 1,
                "HasBMI1": 1,
                "HasBMI2": 1,
                "HasERMS": 1,
                "HasFCMA": 1,
                "HasFPHP": 1,
                "HasSHA1": 1,
                "HasSHA2": 1,
                "HasSHA3": 1,
                "HasSSE2": 1,
                "HasSSE3": 1,
                "HeapSys": 1,
                "HomeDir": 1,
                "ISOWeek": 1,
                "Imports": 1,
                "InitBuf": 1,
                "InitMsg": 1,
                "IsValid": 1,
                "Literal": 1,
                "Longest": 1,
                "Lookups": 1,
                "Mallocs": 1,
                "MapKeys": 1,
                "Message": 1,
                "Minutes": 1,
                "ModTime": 1,
                "Namelen": 1,
                "NewProc": 1,
                "ObjName": 1,
                "Opening": 1,
                "Operand": 1,
                "Panicln": 1,
                "Pattern": 1,
                "PauseNs": 1,
                "PkgPath": 1,
                "Pointer": 1,
                "Postfix": 1,
                "Println": 1,
                "RLocker": 1,
                "RUnlock": 1,
                "RawPath": 1,
                "RawRead": 1,
                "ReadMsg": 1,
                "Readdir": 1,
                "Release": 1,
                "RoundUp": 1,
                "Seconds": 1,
                "SetBool": 1,
                "SetName": 1,
                "SetTime": 1,
                "SetUint": 1,
                "Shuffle": 1,
                "Stopped": 1,
                "StructT": 1,
                "Success": 1,
                "Symbols": 1,
                "Syscall": 1,
                "Timeout": 1,
                "ToFloat": 1,
                "ToValue": 1,
                "TryRecv": 1,
                "TrySend": 1,
                "Version": 2,
                "Weekday": 1,
                "WriteAt": 1,
                "WriteTo": 1,
                "YearDay": 1,
                "_delete": 1,
                "_exists": 1,
                "_object": 1,
                "aborted": 1,
                "advance": 1,
                "alignme": 1,
                "alllink": 1,
                "allnext": 1,
                "alloc_m": 1,
                "allowIn": 1,
                "amended": 1,
                "argSize": 1,
                "badVerb": 1,
                "balance": 1,
                "blocked": 1,
                "buckets": 1,
                "bufLock": 1,
                "by_size": 1,
                "byteBuf": 1,
                "callers": 1,
                "central": 1,
                "cgoCtxt": 1,
                "closing": 1,
                "codegen": 1,
                "compile": 1,
                "context": 1,
                "copyLen": 1,
                "created": 1,
                "current": 1,
                "debuggc": 1,
                "declare": 1,
                "defined": 1,
                "dequeue": 1,
                "destroy": 1,
                "dirinfo": 1,
                "disable": 1,
                "discard": 1,
                "dispose": 1,
                "doMatch": 1,
                "doPrint": 1,
                "docrash": 1,
                "elemEnc": 1,
                "elseEnc": 1,
                "enabled": 1,
                "encInit": 1,
                "encoder": 1,
                "enqueue": 1,
                "entries": 1,
                "expbits": 1,
                "fileSet": 1,
                "filetab": 1,
                "finally": 1,
                "float64": 1,
                "flushed": 1,
                "fmt0x64": 1,
                "fmtBool": 1,
                "fnStash": 1,
                "forward": 1,
                "freeBuf": 1,
                "frexp10": 1,
                "funcoff": 1,
                "gctrace": 1,
                "genLine": 1,
                "getEmit": 1,
                "getInfo": 1,
                "getSlow": 1,
                "gobType": 1,
                "goidgen": 1,
                "growing": 1,
                "gsignal": 1,
                "hasName": 1,
                "hasmain": 1,
                "huffSym": 1,
                "ignored": 1,
                "inCount": 1,
                "invalid": 1,
                "isArray": 1,
                "isEmpty": 1,
                "isError": 1,
                "isValid": 1,
                "isempty": 1,
                "keyKind": 1,
                "keysize": 1,
                "lexical": 1,
                "libcall": 1,
                "literal": 1,
                "lockedg": 1,
                "lockedm": 1,
                "longest": 1,
                "marshal": 1,
                "matched": 1,
                "message": 1,
                "methods": 1,
                "morebuf": 1,
                "mutable": 1,
                "nameLen": 1,
                "nameOff": 1,
                "nameoff": 1,
                "newDate": 1,
                "nextInt": 1,
                "next_gc": 1,
                "nlookup": 1,
                "nmalloc": 1,
                "nmfreed": 1,
                "noStack": 1,
                "npcdata": 1,
                "onepass": 1,
                "operand": 1,
                "outUsed": 1,
                "padChar": 1,
                "pattern": 1,
                "pauseNS": 1,
                "pinSlow": 1,
                "pkgPath": 1,
                "pkgpath": 1,
                "pointer": 1,
                "popList": 1,
                "postfix": 1,
                "preempt": 1,
                "prepare": 1,
                "primary": 1,
                "private": 1,
                "program": 1,
                "protect": 1,
                "ptrdata": 1,
                "pushAll": 2,
                "pushcnt": 1,
                "putFast": 1,
                "racectx": 1,
                "readErr": 1,
                "readPos": 1,
                "readVal": 1,
                "readdir": 1,
                "readers": 1,
                "reading": 1,
                "reclaim": 1,
                "recover": 1,
                "release": 1,
                "resolve": 1,
                "restart": 1,
                "reviver": 1,
                "roffset": 1,
                "runlock": 1,
                "runnext": 1,
                "scratch": 1,
                "seedPos": 1,
                "setDone": 1,
                "setMono": 1,
                "setPath": 1,
                "setSpan": 1,
                "setType": 1,
                "sigmask": 1,
                "skipNop": 1,
                "sortkey": 1,
                "spanKey": 1,
                "special": 1,
                "started": 1,
                "startpc": 1,
                "success": 1,
                "switch2": 1,
                "switch3": 1,
                "switch4": 1,
                "switch6": 1,
                "sysStat": 1,
                "tagSize": 1,
                "takeAll": 1,
                "textOff": 1,
                "timeEnd": 1,
                "toValue": 1,
                "topbits": 1,
                "tophash": 1,
                "typeOff": 1,
                "typemap": 1,
                "unixSec": 1,
                "varList": 1,
                "version": 1,
                "visited": 1,
                "waiting": 1,
                "wrapErr": 1,
                "wrapped": 1,
                "writeOn": 1,
                "encoding": 1,
                "**uint16": 1,
                "*[16]int": 1,
                "*[19]int": 1,
                "*[2]int8": 1,
                "*[8]bool": 1,
                "*[][]int": 1,
                "*[]error": 1,
                "*[]int16": 1,
                "*[]int32": 1,
                "*[]int64": 1,
                "*[]uint8": 1,
                "*cpu.x86": 1,
                "*float32": 1,
                "*float64": 1,
                "*fmt.fmt": 1,
                "*os.File": 1,
                "*os.file": 1,
                "*poll.FD": 1,
                "*uintptr": 1,
                "*url.URL": 1,
                "Argument": 1,
                "Buffered": 1,
                "CapNames": 1,
                "ChainLen": 1,
                "Comments": 1,
                "Contains": 1,
                "CoreDump": 1,
                "Debugger": 1,
                "EnableGC": 1,
                "ExitCode": 1,
                "ExitTime": 1,
                "FetchAll": 1,
                "FileLine": 1,
                "FileName": 1,
                "Filename": 1,
                "FindProc": 1,
                "Flowinfo": 1,
                "Fragment": 1,
                "GetValue": 1,
                "GoString": 1,
                "GroupIds": 1,
                "HasASIMD": 1,
                "HasCPUID": 1,
                "HasCRC32": 1,
                "HasDCPOP": 1,
                "HasJSCVT": 1,
                "HasLRCPC": 1,
                "HasPMULL": 1,
                "HasSSE41": 1,
                "HasSSE42": 1,
                "HasSSSE3": 1,
                "HeapIdle": 1,
                "Hostname": 1,
                "InitBufs": 1,
                "Internal": 1,
                "IsNumber": 1,
                "IsObject": 1,
                "IsStream": 1,
                "IsString": 1,
                "Location": 1,
                "MSpanSys": 1,
                "MapIndex": 1,
                "MapRange": 1,
                "MaxUdpDg": 1,
                "Multiply": 1,
                "NumField": 1,
                "Operator": 1,
                "OtherSys": 1,
                "Overhead": 1,
                "Packages": 1,
                "Password": 1,
                "PauseEnd": 1,
                "Position": 1,
                "Protocol": 1,
                "RawQuery": 1,
                "RawWrite": 1,
                "ReadByte": 1,
                "ReadFrom": 1,
                "ReadLine": 1,
                "ReadRune": 1,
                "Required": 1,
                "Scope_id": 1,
                "Sequence": 1,
                "SetBytes": 1,
                "SetConst": 1,
                "SetFlags": 1,
                "SetFloat": 1,
                "Shutdown": 1,
                "Signaled": 1,
                "Simplify": 1,
                "Sockaddr": 1,
                "StackSys": 1,
                "SysUsage": 1,
                "ToString": 1,
                "Truncate": 1,
                "URIError": 1,
                "UnixNano": 1,
                "UserTime": 1,
                "Username": 1,
                "WSAIoctl": 1,
                "WriteMsg": 1,
                "_fnStash": 1,
                "_runtime": 1,
                "allspans": 1,
                "arrayEnc": 1,
                "asserted": 1,
                "assignTo": 1,
                "baseMask": 1,
                "baseaddr": 1,
                "bitCount": 1,
                "bytedata": 1,
                "cacheEnd": 1,
                "capNames": 1,
                "cgocheck": 1,
                "checkPut": 1,
                "cmpl_run": 1,
                "coalesce": 1,
                "codebits": 1,
                "collapse": 1,
                "comments": 1,
                "concrete": 1,
                "contains": 1,
                "continpc": 1,
                "coprimes": 1,
                "copyData": 1,
                "copyDist": 1,
                "countBuf": 1,
                "dataqsiz": 1,
                "dclStash": 1,
                "debugGen": 1,
                "debugger": 1,
                "decIndir": 1,
                "decOpFor": 1,
                "decode32": 1,
                "decode64": 1,
                "default_": 1,
                "describe": 1,
                "divShift": 1,
                "doPrintf": 1,
                "elemsize": 1,
                "elemtype": 1,
                "embedded": 1,
                "enablegc": 1,
                "encIndir": 1,
                "endCycle": 1,
                "eofError": 1,
                "erroring": 1,
                "fastrand": 1,
                "fieldnum": 1,
                "filename": 1,
                "filetype": 1,
                "flushGen": 1,
                "fmtBytes": 1,
                "fmtFlags": 1,
                "fmtFloat": 1,
                "freeList": 1,
                "freeSpan": 1,
                "freeWait": 1,
                "freelink": 1,
                "fullHead": 1,
                "fullTail": 1,
                "funcInfo": 1,
                "funcName": 1,
                "funcType": 1,
                "generate": 1,
                "getValue": 1,
                "goRegexp": 1,
                "hasLabel": 1,
                "heapGoal": 1,
                "heap_sys": 1,
                "histSize": 1,
                "inSwitch": 1,
                "initSpan": 1,
                "internal": 1,
                "isMarked": 1,
                "isRegExp": 1,
                "isSelect": 1,
                "keyIndir": 1,
                "lastByte": 1,
                "lastFreq": 1,
                "lastRead": 1,
                "lastbits": 1,
                "lastpoll": 1,
                "libcallg": 1,
                "linkMask": 1,
                "location": 1,
                "mantbits": 1,
                "mappings": 1,
                "matchcap": 1,
                "maxprocs": 1,
                "mcentral": 1,
                "moreBits": 1,
                "mstartfn": 1,
                "mustFind": 1,
                "mustLoad": 1,
                "namesInd": 1,
                "nbgsweep": 1,
                "ncgocall": 1,
                "needdata": 1,
                "needzero": 1,
                "newArray": 1,
                "newBytes": 1,
                "newError": 1,
                "newStack": 1,
                "nextBase": 1,
                "nextFree": 1,
                "nextUint": 1,
                "nonempty": 1,
                "noptrbss": 1,
                "numInstr": 1,
                "objIndex": 1,
                "operator": 1,
                "outCount": 1,
                "overflow": 1,
                "parseFor": 1,
                "parseInt": 1,
                "password": 1,
                "pauseGen": 1,
                "pause_ns": 1,
                "pointers": 1,
                "pollable": 1,
                "position": 1,
                "prevRune": 1,
                "previous": 1,
                "printArg": 1,
                "priority": 1,
                "property": 1,
                "pushBack": 1,
                "putBatch": 1,
                "putValue": 1,
                "raceaddr": 1,
                "rcvrType": 1,
                "readLock": 1,
                "readable": 1,
                "readbyte": 1,
                "recvAddr": 1,
                "recvType": 1,
                "released": 1,
                "runnable": 1,
                "runqhead": 1,
                "runqsize": 1,
                "runqtail": 1,
                "rwunlock": 1,
                "scanNext": 1,
                "scanWork": 1,
                "scavenge": 1,
                "sendAddr": 1,
                "sendType": 1,
                "sendZero": 1,
                "seqStart": 1,
                "sequence": 1,
                "setError": 1,
                "setRunes": 1,
                "setSpans": 1,
                "setValue": 1,
                "shutdown": 1,
                "sigcode0": 1,
                "sigcode1": 1,
                "sleeping": 1,
                "sockaddr": 1,
                "specials": 1,
                "spineCap": 1,
                "spineLen": 1,
                "spinning": 1,
                "stackTab": 1,
                "stktopsp": 1,
                "stopnote": 1,
                "stopwait": 1,
                "stwprocs": 1,
                "sudogbuf": 1,
                "sweepers": 1,
                "sweepgen": 1,
                "sysAlloc": 1,
                "sysUsage": 1,
                "targetpc": 1,
                "throwing": 1,
                "ticksEnd": 1,
                "tmpClass": 1,
                "toObject": 1,
                "tracebuf": 1,
                "traceseq": 1,
                "truncate": 1,
                "tryAlloc": 1,
                "tryStore": 1,
                "uncommon": 1,
                "userTime": 1,
                "username": 1,
                "variable": 1,
                "waitRead": 1,
                "waitlink": 1,
                "waitlock": 1,
                "waitnote": 1,
                "waitsema": 1,
                "waittail": 1,
                "wireType": 1,
                "writable": 1,
                "writeBuf": 1,
                "writeOff": 1,
                "writeSet": 1,
                "writebuf": 1,
                "math/rand": 1,
                "*[0]int32": 1,
                "*[0]uint8": 1,
                "*[14]int8": 1,
                "*[1]int32": 1,
                "*[1]uint8": 1,
                "*[288]int": 1,
                "*[2]int32": 1,
                "*[2]uint8": 1,
                "*[316]int": 1,
                "*[3]int64": 1,
                "*[3]uint8": 1,
                "*[4]int32": 1,
                "*[4]uint8": 1,
                "*[5]int32": 1,
                "*[5]int64": 1,
                "*[5]uint8": 1,
                "*[6]int32": 1,
                "*[8]int32": 1,
                "*[8]int64": 1,
                "*[8]uint8": 1,
                "*[9]uint8": 1,
                "*[]string": 1,
                "*[]uint16": 1,
                "*[]uint32": 1,
                "*[]uint64": 1,
                "*ast.Node": 1,
                "*chan int": 1,
                "*dbg.Dbgr": 1,
                "*file.Idx": 1,
                "*otto._at": 1,
                "*sync.Map": 1,
                "AddImport": 1,
                "AfterHook": 1,
                "Alternate": 1,
                "Anonymous": 1,
                "BlockSize": 1,
                "CallSlice": 1,
                "ClearBufs": 1,
                "ConnectEx": 1,
                "Continued": 1,
                "DayOfWeek": 1,
                "EvalError": 1,
                "FindIndex": 1,
                "FreeBytes": 1,
                "Ftruncate": 1,
                "GobDecode": 1,
                "GobEncode": 1,
                "HasPOPCNT": 1,
                "HasSHA512": 1,
                "HeapAlloc": 2,
                "HeapInuse": 1,
                "Interface": 1,
                "Interrupt": 1,
                "IsBoolean": 1,
                "IsDefined": 1,
                "IsRegular": 1,
                "LeftBrace": 1,
                "MCacheSys": 1,
                "MatchRune": 1,
                "Multiaddr": 1,
                "NonceSize": 1,
                "Normalize": 1,
                "NumMethod": 1,
                "NumSubexp": 1,
                "Parameter": 1,
                "Precision": 1,
                "ReadBytes": 1,
                "ReadSlice": 1,
                "Reserved0": 1,
                "Reserved1": 1,
                "RoundDown": 1,
                "Semicolon": 1,
                "SetLogger": 1,
                "SetOutput": 1,
                "SetPrefix": 1,
                "SetString": 1,
                "Signature": 1,
                "Specified": 1,
                "StartCond": 1,
                "Statement": 1,
                "Temporary": 1,
                "ToBoolean": 1,
                "ToInteger": 1,
                "TrapCause": 1,
                "TypeError": 1,
                "ValueElem": 1,
                "WriteByte": 1,
                "WriteRune": 1,
                "_dclStash": 1,
                "absSource": 1,
                "acceptOne": 1,
                "addObject": 1,
                "aesCipher": 1,
                "allArenas": 1,
                "allocBits": 1,
                "alternate": 1,
                "ancestors": 1,
                "argNumber": 1,
                "arguments": 1,
                "availRead": 1,
                "backtrack": 1,
                "badArgNum": 1,
                "bitCounts": 1,
                "bitLength": 1,
                "cacheSpan": 1,
                "cacheZone": 1,
                "caughtsig": 1,
                "chrOffset": 1,
                "cmpl_eval": 1,
                "construct": 1,
                "copyCheck": 1,
                "dataBlock": 1,
                "dateValue": 1,
                "decodeInt": 1,
                "decodeMap": 1,
                "deferlock": 1,
                "deferpool": 1,
                "deletable": 1,
                "divShift2": 1,
                "doExecute": 1,
                "doOnePass": 1,
                "doPrintln": 1,
                "elemIndir": 1,
                "encodeInt": 1,
                "encodeMap": 1,
                "empty0": 1,
                "enginePtr": 1,
                "enoptrbss": 1,
                "enumerate": 1,
                "equalFold": 1,
                "fixedSize": 1,
                "floatBits": 1,
                "fmtString": 1,
                "framePool": 1,
                "freeindex": 1,
                "freqcache": 1,
                "gcbssmask": 1,
                "gcwaiting": 1,
                "getLength": 1,
                "goidcache": 1,
                "hasPrefix": 1,
                "heap_idle": 1,
                "heap_live": 1,
                "heap_scan": 1,
                "ignoreMap": 1,
                "insertNew": 1,
                "instQueue": 1,
                "isConsole": 1,
                "isPointer": 1,
                "isSymlink": 1,
                "itablinks": 1,
                "largefree": 1,
                "lastTicks": 1,
                "libcallpc": 1,
                "libcallsp": 1,
                "localSize": 1,
                "lockOwner": 1,
                "lockedExt": 1,
                "lockedInt": 1,
                "mallocing": 1,
                "maxmcount": 1,
                "mspan_sys": 1,
                "multiline": 1,
                "nBSSRoots": 1,
                "nameBytes": 1,
                "nevacuate": 1,
                "newNumber": 1,
                "newObject": 1,
                "newReader": 1,
                "newRegExp": 1,
                "newRegexp": 1,
                "newString": 1,
                "nextArena": 1,
                "nextBlock": 1,
                "nextIndex": 1,
                "nextwaitm": 1,
                "nfuncdata": 1,
                "nonceSize": 1,
                "noptrdata": 1,
                "noverflow": 1,
                "npagesKey": 1,
                "numBlocks": 1,
                "numSubexp": 1,
                "omitEmpty": 1,
                "openScope": 1,
                "other_sys": 1,
                "padString": 1,
                "pad_cgo_0": 1,
                "pageInUse": 1,
                "pageMarks": 1,
                "panicking": 1,
                "parameter": 1,
                "pause_end": 1,
                "pclntable": 1,
                "pkghashes": 1,
                "popWriter": 1,
                "prefixEnd": 1,
                "printlock": 1,
                "profilehz": 1,
                "prototype": 1,
                "ptrToThis": 1,
                "pushValue": 1,
                "readFlush": 1,
                "readIndex": 1,
                "readSlice": 1,
                "readerSem": 1,
                "recovered": 1,
                "reference": 1,
                "reordered": 1,
                "retOffset": 1,
                "saveError": 1,
                "scanGroup": 1,
                "scanWhile": 1,
                "scavenged": 1,
                "schedlink": 1,
                "schedtick": 1,
                "schedwhen": 1,
                "semicolon": 1,
                "setMarked": 1,
                "sizeclass": 1,
                "sourceCol": 1,
                "spanalloc": 1,
                "spanclass": 1,
                "spineLock": 1,
                "stackLock": 1,
                "stacksize": 1,
                "startAddr": 1,
                "startSema": 1,
                "startTime": 1,
                "statement": 1,
                "stepState": 1,
                "stringSeq": 1,
                "stripMono": 1,
                "sudoglock": 1,
                "sweepdone": 1,
                "syscallpc": 1,
                "syscallsp": 1,
                "tMarkTerm": 1,
                "timeStart": 1,
                "totaltime": 1,
                "traceback": 1,
                "traceskip": 1,
                "typelinks": 1,
                "unmarshal": 1,
                "useNumber": 1,
                "valueKind": 1,
                "valuesize": 1,
                "waitWrite": 1,
                "waitsince": 1,
                "walkTreap": 1,
                "wbufSpans": 1,
                "writeBits": 1,
                "writeByte": 1,
                "writeCode": 1,
                "writeCopy": 1,
                "writeLock": 1,
                "writeMark": 1,
                "writerSem": 1,
                "crypto/aes": 1,
                "hash/crc32": 1,
                "*[0]string": 1,
                "*[100]int8": 1,
                "*[108]int8": 1,
                "*[10]uint8": 1,
                "*[11]uint8": 1,
                "*[128]bool": 1,
                "*[13]int32": 1,
                "*[13]uint8": 1,
                "*[14]uint8": 1,
                "*[15]uint8": 1,
                "*[16]int32": 1,
                "*[16]uint8": 1,
                "*[17]int32": 1,
                "*[17]uint8": 1,
                "*[18]uint8": 1,
                "*[19]int32": 1,
                "*[1]string": 1,
                "*[1]uint16": 1,
                "*[1]uint32": 1,
                "*[1]uint64": 1,
                "*[20]uint8": 1,
                "*[22]uint8": 1,
                "*[23]uint8": 1,
                "*[24]uint8": 1,
                "*[26]uint8": 1,
                "*[27]uint8": 1,
                "*[28]uint8": 1,
                "*[2]string": 1,
                "*[2]uint32": 1,
                "*[2]uint64": 1,
                "*[30]int32": 1,
                "*[32]int32": 1,
                "*[32]uint8": 1,
                "*[3]string": 1,
                "*[3]uint32": 1,
                "*[3]uint64": 1,
                "*[40]uint8": 1,
                "*[42]uint8": 1,
                "*[4]string": 1,
                "*[5]string": 1,
                "*[64]uint8": 1,
                "*[65]uint8": 1,
                "*[67]uint8": 1,
                "*[68]uint8": 1,
                "*[6]string": 1,
                "*[7]string": 1,
                "*[7]uint32": 1,
                "*[80]uint8": 1,
                "*[8]string": 1,
                "*[8]uint32": 1,
                "*[8]uint64": 1,
                "*[9]string": 1,
                "*[][]int32": 1,
                "*[][]uint8": 1,
                "*[]float32": 1,
                "*[]float64": 1,
                "*[]uintptr": 1,
                "*chan bool": 1,
                "*complex64": 1,
                "*cpu.arm64": 1,
                "*dbg._emit": 1,
                "*dbg._frmt": 1,
                "*file.File": 1,
                "*fmt.State": 1,
                "*func(int)": 1,
                "*gob.decOp": 1,
                "*gob.encOp": 1,
                "*io.Reader": 1,
                "*io.Writer": 1,
                "*os.Signal": 1,
                "*otto.Otto": 1,
                "*rand.Rand": 1,
                "*runtime.g": 1,
                "*runtime.m": 1,
                "*runtime.p": 1,
                "*struct {}": 1,
                "*sync.Once": 1,
                "*sync.Pool": 1,
                "*syntax.Op": 1,
                "*time.Time": 1,
                "*time.abbr": 1,
                "*time.zone": 1,
                "*unicode.d": 1,
                "*url.Error": 1,
                "*user.User": 1,
                "AddComment": 1,
                "AfterBlock": 1,
                "AllocBytes": 1,
                "Attributes": 1,
                "BeforeHook": 1,
                "CommentMap": 1,
                "CommonType": 1,
                "Comparable": 1,
                "Comparison": 1,
                "Consequent": 1,
                "DecodedLen": 1,
                "EncodedLen": 1,
                "EntryPoint": 1,
                "ExitStatus": 1,
                "ExpFloat64": 1,
                "Expression": 1,
                "FieldAlign": 1,
                "FindString": 1,
                "ForceQuery": 1,
                "HasASIMDDP": 1,
                "HasASIMDHP": 1,
                "HasATOMICS": 1,
                "HasEVTSTRM": 1,
                "HasOSXSAVE": 1,
                "HideWindow": 1,
                "Identifier": 1,
                "Implements": 1,
                "ImportPath": 1,
                "InUseBytes": 1,
                "IsFunction": 1,
                "IsVariadic": 1,
                "KernelTime": 1,
                "LayoutElem": 1,
                "LoadScript": 1,
                "MSpanInuse": 1,
                "MaxSockets": 1,
                "Nanosecond": 1,
                "OffsetHigh": 1,
                "ProviderId": 1,
                "RangeError": 1,
                "RawControl": 1,
                "ReadString": 1,
                "ReparseTag": 1,
                "ReplaceAll": 1,
                "RequestURI": 1,
                "RightBrace": 1,
                "SetComplex": 1,
                "SetPointer": 1,
                "SetTimeout": 1,
                "Setsockopt": 1,
                "SocketType": 1,
                "StackInuse": 1,
                "Stacktrace": 1,
                "StopSignal": 1,
                "SystemTime": 1,
                "TotalAlloc": 1,
                "UnreadByte": 1,
                "UnreadRune": 1,
                "UnsafeAddr": 1,
                "ValueCount": 1,
                "VendorInfo": 1,
                "_interface": 1,
                "_newRegExp": 1,
                "afterBlock": 1,
                "allMatches": 1,
                "allocCache": 1,
                "allocCount": 1,
                "arenaHints": 1,
                "assistTime": 1,
                "availWrite": 1,
                "bgMarkDone": 1,
                "bucketsize": 1,
                "buildIndex": 1,
                "cacheStart": 1,
                "cachealloc": 1,
                "canAddrEnc": 1,
                "catchPanic": 1,
                "cgoCallers": 1,
                "checkValid": 1,
                "checkempty": 1,
                "clearflags": 1,
                "closeScope": 1,
                "cmpl_parse": 1,
                "comparison": 1,
                "compileDec": 1,
                "consequent": 1,
                "countAlloc": 1,
                "countState": 1,
                "createType": 1,
                "decodeUint": 1,
                "definition": 1,
                "delivering": 1,
                "dwpagesize": 1,
                "encodeUint": 1,
                "enoptrdata": 1,
                "enterScope": 1,
                "enumerable": 1,
                "escapeHTML": 1,
                "expression": 1,
                "extensible": 1,
                "fieldAlign": 1,
                "fieldalign": 1,
                "findObject": 1,
                "fmtBoolean": 1,
                "fmtComplex": 1,
                "fmtInteger": 1,
                "fmtPointer": 1,
                "fmtUnicode": 1,
                "frameStore": 1,
                "freeManual": 1,
                "free_bytes": 1,
                "gc_trigger": 1,
                "gcdatamask": 1,
                "gcmarkBits": 1,
                "gcscandone": 1,
                "getBinding": 1,
                "goSigStack": 1,
                "goodArgNum": 1,
                "hasBinding": 1,
                "heap_alloc": 1,
                "heap_inuse": 1,
                "identifier": 1,
                "ignoreCase": 1,
                "inFunction": 1,
                "insertBack": 1,
                "invalidptr": 1,
                "isCallable": 1,
                "isExported": 1,
                "largealloc": 1,
                "leaveScope": 1,
                "loadFileId": 1,
                "local_scan": 1,
                "lookupName": 1,
                "lpFileName": 1,
                "matchCount": 1,
                "mcache_sys": 1,
                "missLocked": 1,
                "missingArg": 1,
                "modulename": 1,
                "nDataRoots": 1,
                "nSpanRoots": 1,
                "nameNonEsc": 1,
                "nativeFile": 1,
                "nativeLine": 1,
                "needextram": 1,
                "newArrayOf": 1,
                "newBoolean": 1,
                "newConsole": 1,
                "newGoArray": 1,
                "newGoSlice": 1,
                "newLiteral": 1,
                "nlargefree": 1,
                "nmspinning": 1,
                "nsmallfree": 1,
                "offsetAnon": 1,
                "offsetFreq": 1,
                "oldbuckets": 1,
                "pagesInUse": 1,
                "pagesSwept": 1,
                "parseClass": 1,
                "parseForIn": 1,
                "parseState": 1,
                "parseThrow": 1,
                "pauseStack": 1,
                "pauseStart": 1,
                "pluginpath": 1,
                "precedence": 1,
                "preemptoff": 1,
                "prefixRune": 1,
                "printValue": 1,
                "properties": 1,
                "pushWriter": 1,
                "raceignore": 1,
                "readHeader": 1,
                "readString": 1,
                "readUnlock": 1,
                "readerPass": 1,
                "readerWait": 1,
                "readuint16": 1,
                "regionSize": 1,
                "releaseAll": 1,
                "removeNode": 1,
                "removeSpan": 1,
                "replaceAll": 1,
                "rotateLeft": 1,
                "runtimeCtx": 1,
                "safeString": 1,
                "savedError": 1,
                "scanEscape": 1,
                "scanString": 1,
                "schedtrace": 1,
                "selectDone": 1,
                "sendTypeId": 1,
                "setBinding": 1,
                "sigContext": 1,
                "sleepUntil": 1,
                "sourceLine": 1,
                "sourcesInd": 1,
                "stackLimit": 1,
                "stackcache": 1,
                "stacks_sys": 1,
                "startCycle": 1,
                "storedSize": 1,
                "sudogcache": 1,
                "sweepSpans": 1,
                "sysmonnote": 1,
                "sysmontick": 1,
                "sysmonwait": 1,
                "systemTime": 1,
                "tSweepTerm": 1,
                "thisObject": 1,
                "throwsplit": 1,
                "ticksStart": 1,
                "tinyallocs": 1,
                "tinyoffset": 1,
                "traceLimit": 1,
                "traceSweep": 1,
                "traceSwept": 1,
                "tracelastp": 1,
                "treapalloc": 1,
                "tryGetFast": 1,
                "typeString": 1,
                "userForced": 1,
                "valueArray": 1,
                "visitQueue": 1,
                "waitreason": 1,
                "widPresent": 1,
                "workbufhdr": 1,
                "writeBlock": 1,
                "writeBytes": 1,
                "writeClear": 1,
                "writeSlice": 1,
                "sync/atomic": 1,
                "**runtime.g": 1,
                "**runtime.p": 1,
                "**sync.Pool": 1,
                "*[0]uintptr": 1,
                "*[100]uint8": 1,
                "*[10]string": 1,
                "*[11]string": 1,
                "*[128]uint8": 1,
                "*[129]uint8": 1,
                "*[12]string": 1,
                "*[13]uint16": 1,
                "*[14]uint16": 1,
                "*[15]string": 1,
                "*[15]uint64": 1,
                "*[16]string": 1,
                "*[16]uint16": 1,
                "*[1][]int32": 1,
                "*[1]uintptr": 1,
                "*[20]uint64": 1,
                "*[22]string": 1,
                "*[23]string": 1,
                "*[248]uint8": 1,
                "*[249]uint8": 1,
                "*[24]string": 1,
                "*[256]int32": 1,
                "*[256]uint8": 1,
                "*[257]uint8": 1,
                "*[26]string": 1,
                "*[27]string": 1,
                "*[286]int32": 1,
                "*[2]uintptr": 1,
                "*[317]uint8": 1,
                "*[31]string": 1,
                "*[32]uint16": 1,
                "*[3]float64": 1,
                "*[41]string": 1,
                "*[46]string": 1,
                "*[4]uintptr": 1,
                "*[512]uint8": 1,
                "*[521]uint8": 1,
                "*[5]float64": 1,
                "*[607]int64": 1,
                "*[67]uint16": 1,
                "*[67]uint64": 1,
                "*[6]float64": 1,
                "*[6]uintptr": 1,
                "*[768]uint8": 1,
                "*[800]uint8": 1,
                "*[86]uint16": 1,
                "*[87]string": 1,
                "*[]*os.File": 1,
                "*[][]string": 1,
                "*[][]uint32": 1,
                "*[]ast.Node": 1,
                "*aes.gcmAsm": 1,
                "*chan error": 1,
                "*cipher.ofb": 1,
                "*complex128": 1,
                "*cpu.option": 1,
                "*fmt.buffer": 1,
                "*func() int": 1,
                "*func(bool)": 1,
                "*gob.typeId": 1,
                "*json.field": 1,
                "*log.Logger": 1,
                "*os.Process": 1,
                "*os.dirInfo": 1,
                "*os.rawConn": 1,
                "*os.timeout": 1,
                "*otto.Error": 1,
                "*otto.Value": 1,
                "*otto._node": 1,
                "*poll.ioSrv": 1,
                "*regexp.job": 1,
                "*sync.Mutex": 1,
                "*sync.entry": 1,
                "*time.Month": 1,
                "*url.Values": 1,
                "*user.Group": 1,
                "AddComments": 1,
                "AtLineBreak": 1,
                "BuckHashSys": 1,
                "BufferCount": 1,
                "ContextSkip": 1,
                "DecodeValue": 1,
                "DeleteValue": 1,
                "Description": 1,
                "EncodeValue": 1,
                "EscapedPath": 1,
                "FieldByName": 1,
                "FileSizeLow": 1,
                "FreeObjects": 1,
                "GetFileType": 1,
                "GobEncoderT": 1,
                "HasASIMDFHM": 1,
                "HasASIMDRDM": 1,
                "HeapObjects": 1,
                "HighVersion": 1,
                "Initializer": 1,
                "IsPrimitive": 1,
                "IsUndefined": 1,
                "LatinOffset": 1,
                "LeftBracket": 1,
                "LoadOrStore": 1,
                "LowDateTime": 1,
                "MCacheInuse": 1,
                "MarkPrimary": 1,
                "MarshalJSON": 1,
                "MarshalText": 1,
                "MatchReader": 1,
                "MatchString": 1,
                "MaxSockAddr": 1,
                "MaxValueLen": 1,
                "MessageSize": 1,
                "MinSockAddr": 1,
                "Multistream": 1,
                "Nanoseconds": 1,
                "NormFloat64": 1,
                "NumForcedGC": 1,
                "OverflowInt": 1,
                "SetDeadline": 1,
                "SetMapIndex": 1,
                "StackRecord": 1,
                "SubKeyCount": 1,
                "SubexpNames": 1,
                "SymbolTable": 1,
                "SyntaxError": 1,
                "SyscallConn": 1,
                "WithPadding": 1,
                "WriteString": 1,
                "_thisObject": 1,
                "acquiretime": 1,
                "allocManual": 1,
                "alloc_bytes": 1,
                "appendGroup": 1,
                "assistQueue": 1,
                "baseAddress": 1,
                "bgMarkReady": 1,
                "bytesMarked": 1,
                "checkBucket": 1,
                "clearMarked": 1,
                "clobberfree": 1,
                "codegenFreq": 1,
                "configureOn": 1,
                "createstack": 1,
                "dclProperty": 1,
                "decodeArray": 1,
                "decodeSlice": 1,
                "decodeValue": 1,
                "deferreturn": 1,
                "dirtyLocked": 1,
                "dynamicSize": 1,
                "encodeArray": 1,
                "ensureSwept": 1,
                "enumerateOn": 1,
                "externalDec": 1,
                "externalEnc": 1,
                "findfunctab": 1,
                "finishBlock": 1,
                "flushedWork": 1,
                "gccheckmark": 1,
                "gcscanvalid": 1,
                "getArgument": 1,
                "getProperty": 1,
                "globalStash": 1,
                "hasInstance": 1,
                "hasProperty": 1,
                "heap_marked": 1,
                "ignoreArray": 1,
                "ignoreSlice": 1,
                "inIteration": 1,
                "indexTokens": 1,
                "indirectkey": 1,
                "initializer": 1,
                "literalFreq": 1,
                "marshalJSON": 1,
                "maybeConcat": 1,
                "millisecond": 1,
                "mspan_inuse": 1,
                "multistream": 1,
                "nStackRoots": 1,
                "nameEscHTML": 1,
                "newSigstack": 1,
                "newURIError": 1,
                "newoverflow": 1,
                "next_sample": 1,
                "nlargealloc": 1,
                "noldbuckets": 1,
                "npausesweep": 1,
                "numberValue": 1,
                "numforcedgc": 1,
                "objectClass": 1,
                "objectStash": 1,
                "offsetEmbed": 1,
                "oldoverflow": 1,
                "parseEscape": 1,
                "parseRepeat": 1,
                "parseSource": 1,
                "passwordSet": 1,
                "precPresent": 1,
                "preemptible": 1,
                "preemptscan": 1,
                "prefixBytes": 1,
                "prepareRead": 1,
                "pushBackAll": 1,
                "readConsole": 1,
                "readHuffman": 1,
                "readMessage": 1,
                "readerCount": 1,
                "recvMessage": 1,
                "regExpValue": 1,
                "releasetime": 1,
                "rotateRight": 1,
                "runtimehash": 1,
                "safePointFn": 1,
                "safeToValue": 1,
                "scanBracket": 1,
                "scanNewline": 1,
                "scavengeAll": 1,
                "scheddetail": 1,
                "setDeadline": 1,
                "setoverflow": 1,
                "shouldVisit": 1,
                "speciallock": 1,
                "stackguard0": 1,
                "stackguard1": 1,
                "startBucket": 1,
                "storeLocked": 1,
                "stringBytes": 1,
                "stringValue": 1,
                "stringsLock": 1,
                "subexpNames": 1,
                "sweepArenas": 1,
                "syscalltick": 1,
                "syscallwhen": 1,
                "textsectmap": 1,
                "total_alloc": 1,
                "uncacheSpan": 1,
                "unknownType": 1,
                "unusedsince": 1,
                "valueQuoted": 1,
                "waittraceev": 1,
                "waitunlockf": 1,
                "wholeRegexp": 1,
                "writeTokens": 1,
                "writeUnlock": 1,
                "encoding/gob": 1,
                "encoding/hex": 1,
                "internal/cpu": 1,
                "unicode/utf8": 1,
                "**sync.entry": 1,
                "*[100]uint16": 1,
                "*[1024]uint8": 1,
                "*[11]float32": 1,
                "*[128]uint16": 1,
                "*[128]uint32": 1,
                "*[131]string": 1,
                "*[134]string": 1,
                "*[140]uint16": 1,
                "*[16]uintptr": 1,
                "*[23]float64": 1,
                "*[256]uint16": 1,
                "*[256]uint32": 1,
                "*[256]uint64": 1,
                "*[259]uint16": 1,
                "*[260]uint16": 1,
                "*[300]uint16": 1,
                "*[32]uintptr": 1,
                "*[33]float64": 1,
                "*[396]uint32": 1,
                "*[456]uint16": 1,
                "*[512]uint32": 1,
                "*[67]uintptr": 1,
                "*[8][]string": 1,
                "*[8]ast.Node": 1,
                "*[][16]int32": 1,
                "*[][][]uint8": 1,
                "*[]complex64": 1,
                "*[]gob.decOp": 1,
                "*[]gob.encOp": 1,
                "*[]io.Writer": 1,
                "*[]struct {}": 1,
                "*[]sync.Pool": 1,
                "*[]time.abbr": 1,
                "*[]time.zone": 1,
                "*ast.Comment": 1,
                "*ast.Program": 1,
                "*chan func()": 1,
                "*cipher.AEAD": 1,
                "*crc32.Table": 1,
                "*flate.hcode": 1,
                "*func() bool": 1,
                "*func() uint": 1,
                "*func([]int)": 1,
                "*func(int32)": 1,
                "*func(int64)": 1,
                "*func(uint8)": 1,
                "*gob.Decoder": 1,
                "*gob.Encoder": 1,
                "*gob.gobType": 1,
                "*gob.mapType": 1,
                "*gzip.Header": 1,
                "*gzip.Reader": 1,
                "*io.WriterTo": 1,
                "*json.Number": 1,
                "*null.Logger": 1,
                "*os.FileInfo": 1,
                "*os.FileMode": 1,
                "*os.ProcAttr": 1,
                "*os.fileStat": 1,
                "*otto.Object": 1,
                "*otto.Script": 1,
                "*otto._clone": 1,
                "*otto._error": 1,
                "*otto._frame": 1,
                "*otto._scope": 1,
                "*otto._stash": 1,
                "*parser.Mode": 1,
                "*rand.Source": 1,
                "*runtime.hex": 1,
                "*runtime.mOS": 1,
                "*sync.Locker": 1,
                "*sync.noCopy": 1,
                "*syntax.Inst": 1,
                "*syntax.Prog": 1,
                "*syntax.frag": 1,
                "*sys.Uintreg": 1,
                "*syscall.DLL": 1,
                "*syscall.SID": 1,
                "*token.Token": 1,
                "*url.timeout": 1,
                "AGXVINEYHTFX": 1,
                "AllocObjects": 1,
                "AppendFormat": 1,
                "ArgumentList": 1,
                "AssignableTo": 1,
                "BGNCMWOQVRMB": 1,
                "CPMOPLTETPBZ": 1,
                "CanInterface": 1,
                "ChainEntries": 1,
                "ContextLimit": 1,
                "CreationTime": 1,
                "DVUXRUMKXMEK": 1,
                "DaylightBias": 1,
                "DaylightDate": 1,
                "DaylightName": 1,
                "DecodeString": 1,
                "DefaultValue": 1,
                "Discriminant": 1,
                "EFEQGYKSQTKJ": 1,
                "EnableAssets": 1,
                "ExpandString": 1,
                "FieldByIndex": 1,
                "FileIndexLow": 1,
                "FileSizeHigh": 1,
                "FindAllIndex": 1,
                "FindNextFile": 1,
                "FindSubmatch": 1,
                "FixedDecimal": 1,
                "GetTokenUser": 1,
                "HGREUMTOFZEH": 1,
                "HLWWNWTCDHAB": 1,
                "HTRFTTODOGQZ": 1,
                "HasPCLMULQDQ": 1,
                "HeapReleased": 1,
                "HighDateTime": 1,
                "InUseObjects": 1,
                "InternalHigh": 1,
                "JQTYPQHTTDDV": 1,
                "JUNUYUVTWQVG": 1,
                "KIBUOIZXAGSF": 1,
                "KeysByParent": 1,
                "MarkComments": 1,
                "MatchRunePos": 1,
                "MaxSubKeyLen": 1,
                "MethodByName": 1,
                "Milliseconds": 1,
                "MoveComments": 1,
                "MustFindProc": 1,
                "NFICSQEJTKAG": 1,
                "NJVOTXMCJRSH": 1,
                "OMEGAKINUAAC": 1,
                "OverflowUint": 1,
                "PauseTotalNs": 1,
                "PrimaryGroup": 1,
                "ProtocolName": 1,
                "QZYRBDXWNFPI": 1,
                "RGQCQFLWDBLS": 1,
                "RSJNGSYGMEYC": 1,
                "Readdirnames": 1,
                "RightBracket": 1,
                "RuntimeError": 1,
                "StandardBias": 1,
                "StandardDate": 1,
                "StandardName": 1,
                "SystemStatus": 1,
                "TQQEOUBVDVRY": 1,
                "UYIWYJQXWEDW": 1,
                "XNAZLWRGZURQ": 1,
                "XORKeyStream": 1,
                "ZAZLURQCPWDN": 1,
                "ZJWAFSLKFQVF": 1,
                "ZKOVEHOPHPQI": 1,
                "ZKTHRNUAFEHK": 1,
                "_objectStash": 1,
                "aesCipherAsm": 1,
                "argumentList": 1,
                "assignBucket": 1,
                "atomicstatus": 1,
                "bgScanCredit": 1,
                "buckhash_sys": 1,
                "cmpl_program": 1,
                "configurable": 1,
                "configureOff": 1,
                "configureSet": 1,
                "contextflags": 1,
                "debugcontrol": 1,
                "decodeSingle": 1,
                "decodeStruct": 1,
                "decoderCache": 1,
                "decompressor": 1,
                "deferpoolbuf": 1,
                "dequeueSudoG": 1,
                "discriminant": 1,
                "encodeSingle": 1,
                "encodeStruct": 1,
                "enlistWorker": 1,
                "enumerateOff": 1,
                "enumerateSet": 1,
                "errorContext": 1,
                "exportNative": 1,
                "formatHeader": 1,
                "functionList": 1,
                "gcAssistTime": 1,
                "gcpacertrace": 1,
                "globalObject": 1,
                "goidcacheend": 1,
                "hasPrimitive": 1,
                "heap_objects": 1,
                "huffmanBlock": 1,
                "idleMarkTime": 1,
                "ignoreSingle": 1,
                "ignoreStruct": 1,
                "ignorerCache": 1,
                "internalhigh": 1,
                "lastRuneSize": 1,
                "last_gc_unix": 1,
                "linktimehash": 1,
                "literalStore": 1,
                "madvdontneed": 1,
                "markDoneSema": 1,
                "markrootJobs": 1,
                "markrootNext": 1,
                "mcache_inuse": 1,
                "messageValue": 1,
                "modulehashes": 1,
                "morePointers": 1,
                "newEvalError": 1,
                "newReference": 1,
                "newTypeError": 1,
                "nextCharFreq": 1,
                "nextOverflow": 1,
                "nextPairFreq": 1,
                "nmidlelocked": 1,
                "objectCoerce": 1,
                "onePassRunes": 1,
                "operandCount": 1,
                "paniconfault": 1,
                "parseProgram": 1,
                "pickFreeSpan": 1,
                "prepareWrite": 1,
                "prescavenged": 1,
                "productTable": 1,
                "propertyList": 1,
                "propertyMode": 1,
                "readdirnames": 1,
                "reclaimChunk": 1,
                "reclaimIndex": 1,
                "reflectValue": 1,
                "reflexivekey": 1,
                "rescheduling": 1,
                "sameSizeGrow": 1,
                "scanMantissa": 1,
                "setGlobalRef": 1,
                "shutdownSema": 1,
                "stacks_inuse": 1,
                "sweepWaiters": 1,
                "sysexitticks": 1,
                "timersBucket": 1,
                "toValueArray": 1,
                "triggerRatio": 1,
                "tryBacktrack": 1,
                "tryWriteCopy": 1,
                "variableList": 1,
                "waitCanceled": 1,
                "wasLineBreak": 1,
                "writeConsole": 1,
                "writeMessage": 1,
                "writePadding": 1,
                "compress/gzip": 1,
                "crypto/cipher": 1,
                "encoding/json": 1,
                "internal/poll": 1,
                "regexp/syntax": 1,
                "**ast.Comment": 1,
                "**syscall.SID": 1,
                "*[1000]uint16": 1,
                "*[100]uintptr": 1,
                "*[1024]uint16": 1,
                "*[128]float32": 1,
                "*[128]uintptr": 1,
                "*[1]time.zone": 1,
                "*[252]uintptr": 1,
                "*[253]uintptr": 1,
                "*[256]float32": 1,
                "*[512]uintptr": 1,
                "*[5]sync.Pool": 1,
                "*[64488]uint8": 1,
                "*[8]gob.decOp": 1,
                "*[8]struct {}": 1,
                "*[8]time.abbr": 1,
                "*[]*file.File": 1,
                "*[]*gob.decOp": 1,
                "*[]*gob.encOp": 1,
                "*[]*runtime.g": 1,
                "*[]*runtime.p": 1,
                "*[]*sync.Pool": 1,
                "*[]complex128": 1,
                "*[]cpu.option": 1,
                "*[]gob.typeId": 1,
                "*[]json.field": 1,
                "*[]otto.Value": 1,
                "*[]regexp.job": 1,
                "*ast.Comments": 1,
                "*ast.Property": 1,
                "*atomic.Value": 1,
                "*bufio.Reader": 1,
                "*bytes.Buffer": 1,
                "*bytes.Reader": 1,
                "*bytes.readOp": 1,
                "*cipher.Block": 1,
                "*dbg._emitLog": 1,
                "*file.FileSet": 1,
                "*flate.Reader": 1,
                "*flate.byFreq": 1,
                "*fmt.Stringer": 1,
                "*fmt.fmtFlags": 1,
                "*func() error": 1,
                "*func() int32": 1,
                "*func() int64": 1,
                "*func(func())": 1,
                "*func(string)": 1,
                "*func(uint64)": 1,
                "*gob.decInstr": 1,
                "*gob.encInstr": 1,
                "*gob.gobError": 1,
                "*gob.typeInfo": 1,
                "*gob.wireType": 1,
                "*interface {}": 1,
                "*json.byIndex": 1,
                "*json.encOpts": 1,
                "*json.scanner": 1,
                "*os.LinkError": 1,
                "*os.PathError": 1,
                "*otto.Context": 1,
                "*otto._global": 1,
                "*otto._number": 1,
                "*otto._object": 1,
                "*otto._result": 1,
                "*parser.Error": 1,
                "*path.lazybuf": 1,
                "*poll.fdMutex": 1,
                "*reflect.Kind": 1,
                "*reflect.Type": 1,
                "*reflect.flag": 1,
                "*reflect.name": 1,
                "*regexp.entry": 1,
                "*regexp.input": 1,
                "*regexp.queue": 1,
                "*registry.Key": 1,
                "*runtime.Func": 1,
                "*runtime.bmap": 1,
                "*runtime.hmap": 1,
                "*runtime.itab": 1,
                "*runtime.name": 1,
                "*runtime.note": 1,
                "*sourcemap.fn": 1,
                "*sync.RWMutex": 1,
                "*sync.rlocker": 1,
                "*syntax.Error": 1,
                "*syntax.Flags": 1,
                "*syscall.GUID": 1,
                "*syscall.Proc": 1,
                "*time.Weekday": 1,
                "*url.Userinfo": 1,
                "*url.encoding": 1,
                "AddressFamily": 1,
                "AssignDecimal": 1,
                "ConvertibleTo": 1,
                "CreationFlags": 1,
                "DatePrototype": 1,
                "FileIndexHigh": 1,
                "FindAllString": 1,
                "GCCPUFraction": 1,
                "InheritHandle": 1,
                "InterfaceData": 1,
                "LastWriteTime": 1,
                "LiteralPrefix": 1,
                "LookupAccount": 1,
                "MakeTypeError": 1,
                "MarshalBinary": 1,
                "NumberOfLinks": 1,
                "OverflowFloat": 1,
                "ParameterList": 1,
                "ProtocolChain": 1,
                "ProviderFlags": 1,
                "ServiceFlags1": 1,
                "ServiceFlags2": 1,
                "ServiceFlags3": 1,
                "ServiceFlags4": 1,
                "SetDWordValue": 1,
                "SetEntryPoint": 1,
                "SetExpression": 1,
                "SetQWordValue": 1,
                "SetsockoptInt": 1,
                "UnmarshalJSON": 1,
                "UnmarshalText": 1,
                "WithSourceMap": 1,
                "ZeroReadIsEOF": 1,
                "applyComments": 1,
                "cgoCallersUse": 1,
                "checknonempty": 1,
                "compileSingle": 1,
                "constructSafe": 1,
                "convertNumber": 1,
                "createBinding": 1,
                "decodeQuantum": 1,
                "deleteBinding": 1,
                "readSlice0": 1,
                "evaluateBreak": 1,
                "exceptioncode": 1,
                "firstZoneUsed": 1,
                "footerWritten": 1,
                "futureKeyword": 1,
                "gcAssistBytes": 1,
                "handleMethods": 1,
                "headerWritten": 1,
                "heap_released": 1,
                "incrnoverflow": 1,
                "indirectvalue": 1,
                "isCheckmarked": 1,
                "isSpanInTreap": 1,
                "lastWriteTime": 1,
                "leadingRegexp": 1,
                "leadingString": 1,
                "markStartTime": 1,
                "marshalBinary": 1,
                "missingMethod": 1,
                "needkeyupdate": 1,
                "needsScavenge": 1,
                "newBaseObject": 1,
                "newDateObject": 1,
                "newRangeError": 1,
                "newTypeBuffer": 1,
                "nextFreeIndex": 1,
                "nextStatement": 1,
                "oldbucketmask": 1,
                "panicURIError": 1,
                "parameterList": 1,
                "parseFunction": 1,
                "popParseState": 1,
                "propertyNames": 1,
                "propertyOrder": 1,
                "reclaimCredit": 1,
                "safePointNote": 1,
                "safePointWait": 1,
                "skipSyncNotif": 1,
                "sourceRootURL": 1,
                "startingtrace": 1,
                "vectorcontrol": 1,
                "waittraceskip": 1,
                "compress/flate": 1,
                "**gob.typeInfo": 1,
                "**otto._object": 1,
                "**runtime.itab": 1,
                "*[0]*sync.Pool": 1,
                "*[0]json.field": 1,
                "*[0]otto.Value": 1,
                "*[131072]uint8": 1,
                "*[16][16]int32": 1,
                "*[1]json.field": 1,
                "*[1]otto.Value": 1,
                "*[25]gob.decOp": 1,
                "*[25]gob.encOp": 1,
                "*[2]otto.Value": 1,
                "*[8]*gob.decOp": 1,
                "*[8]*gob.encOp": 1,
                "*[8]gob.typeId": 1,
                "*[8]otto.Value": 1,
                "*[]*sync.entry": 1,
                "*[]crc32.Table": 1,
                "*[]flate.hcode": 1,
                "*[]gob.gobType": 1,
                "*[]os.FileInfo": 1,
                "*[]otto._frame": 1,
                "*[]syntax.Inst": 1,
                "*aes.aesCipher": 1,
                "*ast.Statement": 1,
                "*cipher.Stream": 1,
                "*engine.Engine": 1,
                "*file.Position": 1,
                "*fmt.Formatter": 1,
                "*func() string": 1,
                "*func() uint32": 1,
                "*func() uint64": 1,
                "*func([]uint8)": 1,
                "*func(float64)": 1,
                "*func(int) int": 1,
                "*func(uintptr)": 1,
                "*gob.arrayType": 1,
                "*gob.decBuffer": 1,
                "*gob.decEngine": 1,
                "*gob.decHelper": 1,
                "*gob.encBuffer": 1,
                "*gob.encEngine": 1,
                "*gob.encHelper": 1,
                "*gob.fieldType": 1,
                "*gob.sliceType": 1,
                "*io.ByteReader": 1,
                "*io.ReadCloser": 1,
                "*io.ReaderFrom": 1,
                "*io.RuneReader": 1,
                "*logger.Logger": 1,
                "*otto._fnStash": 1,
                "*otto._runtime": 1,
                "*parser._scope": 1,
                "*poll.ioSrvReq": 1,
                "*poll.pollDesc": 1,
                "*rand.Source64": 1,
                "*reflect.Value": 1,
                "*reflect.rtype": 1,
                "*reflect.tflag": 1,
                "*regexp.Regexp": 1,
                "*regexp.inputs": 1,
                "*regexp.thread": 1,
                "*runtime.Frame": 1,
                "*runtime._func": 1,
                "*runtime._type": 1,
                "*runtime.eface": 1,
                "*runtime.gList": 1,
                "*runtime.gobuf": 1,
                "*runtime.hchan": 1,
                "*runtime.hiter": 1,
                "*runtime.iface": 1,
                "*runtime.m128a": 1,
                "*runtime.mheap": 1,
                "*runtime.mlink": 1,
                "*runtime.mspan": 1,
                "*runtime.mutex": 1,
                "*runtime.slice": 1,
                "*runtime.stack": 1,
                "*runtime.sudog": 1,
                "*runtime.tflag": 1,
                "*runtime.timer": 1,
                "*runtime.waitq": 1,
                "*runtime.wbBuf": 1,
                "*sort.lessSwap": 1,
                "*sync.readOnly": 1,
                "*syntax.InstOp": 1,
                "*syntax.Regexp": 1,
                "*syntax.parser": 1,
                "*syntax.ranges": 1,
                "*syscall.Errno": 1,
                "*syscall.Token": 1,
                "*time.Duration": 1,
                "*time.Location": 1,
                "*url.temporary": 1,
                "ArrayPrototype": 1,
                "CallerLocation": 1,
                "CatalogEntryId": 1,
                "EncodeToString": 1,
                "ErrorPrototype": 1,
                "FileAttributes": 1,
                "GetBinaryValue": 1,
                "GetStringValue": 1,
                "LastAccessTime": 1,
                "MakeRangeError": 1,
                "ReadValueNames": 1,
                "ReferenceError": 1,
                "ReplaceAllFunc": 1,
                "ResetLineBreak": 1,
                "RoundedInteger": 1,
                "SecurityScheme": 1,
                "SetBinaryValue": 1,
                "SetStringValue": 1,
                "TextMarshalerT": 1,
                "_statementNode": 1,
                "addtimerLocked": 2,
                "allocationBase": 1,
                "allocfreetrace": 1,
                "arenaHintAlloc": 1,
                "arrayInterface": 1,
                "canCheckPrefix": 1,
                "cmpl_runOrEval": 1,
                "compatibleType": 1,
                "convertNumeric": 1,
                "createOverflow": 1,
                "decIgnoreOpFor": 1,
                "defineProperty": 1,
                "deltimerLocked": 2,
                "enumerateValue": 1,
                "evaluateDivide": 1,
                "evaluateModulo": 1,
                "exceptionflags": 1,
                "freeSpanLocked": 1,
                "gcBgMarkWorker": 1,
                "gcstoptheworld": 1,
                "getOwnProperty": 1,
                "gobDecodeOpFor": 1,
                "hasOwnProperty": 1,
                "hashMightPanic": 1,
                "heapArenaAlloc": 1,
                "increfAndClose": 1,
                "isNumberObject": 1,
                "isStringObject": 1,
                "manualFreeList": 1,
                "maxBitStateLen": 1,
                "mustBeExported": 1,
                "newArrayObject": 1,
                "newClassObject": 1,
                "newErrorObject": 1,
                "newGoMapObject": 1,
                "newObjectStash": 1,
                "newSyntaxError": 1,
                "offsetEncoding": 1,
                "panicTypeError": 1,
                "parseClassChar": 1,
                "parseDotMember": 1,
                "parsePerlFlags": 1,
                "parseStatement": 1,
                "pause_total_ns": 1,
                "physPageBounds": 1,
                "prefixComplete": 1,
                "primitiveValue": 1,
                "procresizetime": 1,
                "pushParseState": 1,
                "readbyteOffset": 1,
                "runSafePointFn": 1,
                "scanIdentifier": 1,
                "scavengeCredit": 1,
                "sendActualType": 1,
                "setCheckmarked": 1,
                "setStringValue": 1,
                "skipWhiteSpace": 1,
                "sysblocktraced": 1,
                "timeoutMonitor": 1,
                "toReflectValue": 1,
                "traceBufHeader": 1,
                "traceReclaimed": 1,
                "truncateString": 1,
                "tryLoadOrStore": 1,
                "valueInterface": 1,
                "vectorregister": 1,
                "writeBlockHuff": 1,
                "encoding/base64": 1,
                "go-memorymodule": 1,
                "**gob.decEngine": 1,
                "**gob.fieldType": 1,
                "**reflect.rtype": 1,
                "**regexp.thread": 1,
                "**runtime._type": 1,
                "**runtime.hchan": 1,
                "**runtime.mspan": 1,
                "**runtime.sudog": 1,
                "**syntax.Regexp": 1,
                "**time.Location": 1,
                "*[134]time.abbr": 1,
                "*[15]cpu.option": 1,
                "*[8]*sync.entry": 1,
                "*[8]gob.gobType": 1,
                "*[]*ast.Comment": 1,
                "*[]ast.Property": 1,
                "*[]gob.decInstr": 1,
                "*[]gob.encInstr": 1,
                "*[]interface {}": 1,
                "*[]reflect.Kind": 1,
                "*[]reflect.Type": 1,
                "*[]regexp.entry": 1,
                "*ast.CommentMap": 1,
                "*ast.Expression": 1,
                "*ast.Identifier": 1,
                "*base64.decoder": 1,
                "*base64.encoder": 1,
                "*flate.Resetter": 1,
                "*fmt.GoStringer": 1,
                "*func() []uint8": 1,
                "*func() float32": 1,
                "*func() float64": 1,
                "*func() uintptr": 1,
                "*func(ast.Node)": 1,
                "*func(int) bool": 1,
                "*func(int, int)": 1,
                "*gob.CommonType": 1,
                "*gob.GobDecoder": 1,
                "*gob.GobEncoder": 1,
                "*gob.structType": 1,
                "*io.WriteCloser": 1,
                "*json.Marshaler": 1,
                "*json.jsonError": 1,
                "*otto._compiler": 1,
                "*otto._dclStash": 1,
                "*otto._ecmaTime": 1,
                "*otto._property": 1,
                "*parser._parser": 1,
                "*poll.operation": 1,
                "*rand.rngSource": 1,
                "*reflect.Method": 1,
                "*reflect.method": 1,
                "*regexp.machine": 1,
                "*registry.Entry": 1,
                "*runtime.Frames": 1,
                "*runtime._defer": 1,
                "*runtime._panic": 1,
                "*runtime.bucket": 1,
                "*runtime.dbgVar": 1,
                "*runtime.funcID": 1,
                "*runtime.gQueue": 1,
                "*runtime.gcBits": 1,
                "*runtime.gcMode": 1,
                "*runtime.gcWork": 1,
                "*runtime.lfnode": 1,
                "*runtime.mTreap": 1,
                "*runtime.mcache": 1,
                "*runtime.mstats": 1,
                "*runtime.net_op": 1,
                "*runtime.schedt": 1,
                "*runtime.sigset": 1,
                "*runtime.tmpBuf": 1,
                "*sort.Interface": 1,
                "*strings.Reader": 1,
                "*sync.WaitGroup": 1,
                "*sync.poolLocal": 1,
                "*syntax.EmptyOp": 1,
                "*syscall.Handle": 1,
                "*syscall.IPMreq": 1,
                "*syscall.Linger": 1,
                "*syscall.Rusage": 1,
                "*syscall.Signal": 1,
                "*syscall.WSABuf": 1,
                "*time.zoneTrans": 1,
                "*token._keyword": 1,
                "*unsafe.Pointer": 1,
                "*windows.WSAMsg": 1,
                "DebuggerEnabled": 1,
                "DeclarationList": 1,
                "FieldByNameFunc": 1,
                "FindAllSubmatch": 1,
                "FindReaderIndex": 1,
                "FindStringIndex": 1,
                "GetIntegerValue": 1,
                "GetStringsValue": 1,
                "LeftParenthesis": 1,
                "MakeCustomError": 1,
                "MakeSyntaxError": 1,
                "MatchEmptyWidth": 1,
                "MaxValueNameLen": 1,
                "NumberPrototype": 1,
                "ObjectPrototype": 1,
                "OverflowComplex": 1,
                "PostProcessNode": 1,
                "ProcessRemoteIO": 1,
                "ReadSubKeyNames": 1,
                "RegExpPrototype": 1,
                "SetRandomSource": 1,
                "SetReadDeadline": 1,
                "SetStringsValue": 1,
                "ShortestDecimal": 1,
                "StringPrototype": 1,
                "UnmarshalBinary": 1,
                "_expressionNode": 1,
                "addErrorContext": 1,
                "allocSpanLocked": 1,
                "codegenEncoding": 1,
                "declarationList": 1,
                "decodeInterface": 1,
                "dwprocessortype": 1,
                "encodeInterface": 1,
                "errorUnexpected": 1,
                "exceptionrecord": 1,
                "exportedMethods": 1,
                "formatWithStack": 1,
                "gc_cpu_fraction": 1,
                "generateCodegen": 1,
                "getDecEnginePtr": 1,
                "ignoreInterface": 1,
                "initialHeapLive": 1,
                "insertSemicolon": 1,
                "isBooleanObject": 1,
                "lastbranchtorip": 1,
                "literalEncoding": 1,
                "local_largefree": 1,
                "lookupFirstZone": 1,
                "markBitsForBase": 1,
                "newDecoderState": 1,
                "newEncoderState": 1,
                "newNodeFunction": 1,
                "newNumberObject": 1,
                "newRegExpObject": 1,
                "newStringObject": 1,
                "objectInterface": 1,
                "pagesSweptBasis": 1,
                "panicRangeError": 1,
                "parseExpression": 1,
                "parseIdentifier": 1,
                "parseNamedClass": 1,
                "parseRightParen": 1,
                "persistentAlloc": 1,
                "prepareForSweep": 1,
                "recoveryHandler": 1,
                "scavengeLargest": 1,
                "setReadDeadline": 1,
                "stackWorkBufHdr": 1,
                "swapVerticalBar": 1,
                "thisClassObject": 1,
                "typeErrorResult": 1,
                "unexpungeLocked": 1,
                "unmarshalBinary": 1,
                "wprocessorlevel": 1,
                "internal/fmtsort": 1,
                "internal/testlog": 1,
                "**ast.Identifier": 1,
                "**registry.Entry": 1,
                "**runtime._defer": 1,
                "*[0]interface {}": 1,
                "*[129]*runtime.g": 1,
                "*[1]interface {}": 1,
                "*[2]interface {}": 1,
                "*[3]interface {}": 1,
                "*[4]interface {}": 1,
                "*[6]interface {}": 1,
                "*[8]interface {}": 1,
                "*[8]reflect.Kind": 1,
                "*[8]reflect.Type": 1,
                "*[]*gob.typeInfo": 1,
                "*[]*gob.wireType": 1,
                "*[]*otto._object": 1,
                "*[]*runtime.bmap": 1,
                "*[]*runtime.itab": 1,
                "*[]ast.Statement": 1,
                "*[]gob.decHelper": 1,
                "*[]gob.encHelper": 1,
                "*[]reflect.Value": 1,
                "*[]runtime.Frame": 1,
                "*[]runtime.m128a": 1,
                "*ast.Declaration": 1,
                "*ast.IfStatement": 1,
                "*ast.NullLiteral": 1,
                "*base64.Encoding": 1,
                "*dbg.DbgFunction": 1,
                "*dbg._emitLogger": 1,
                "*dbg._emitWriter": 1,
                "*flate.byLiteral": 1,
                "*flate.levelInfo": 1,
                "*func() []string": 1,
                "*func() file.Idx": 1,
                "*func(*dbg.Dbgr)": 1,
                "*func(int) []int": 1,
                "*func(int) error": 1,
                "*func(int) int32": 1,
                "*func(int32) int": 1,
                "*func(io.Reader)": 1,
                "*func(io.Writer)": 1,
                "*func(time.Time)": 1,
                "*gob.emptyStruct": 1,
                "*io.StringWriter": 1,
                "*json.mapEncoder": 1,
                "*json.ptrEncoder": 1,
                "*json.tagOptions": 1,
                "*map[string]bool": 1,
                "*os.ProcessState": 1,
                "*os.SyscallError": 1,
                "*otto._exception": 1,
                "*otto._reference": 1,
                "*otto._valueKind": 1,
                "*reflect.ChanDir": 1,
                "*reflect.MapIter": 1,
                "*reflect.imethod": 1,
                "*reflect.nameOff": 1,
                "*reflect.ptrType": 1,
                "*reflect.textOff": 1,
                "*reflect.typeAlg": 1,
                "*reflect.typeOff": 1,
                "*regexp.bitState": 1,
                "*regexp.lazyFlag": 1,
                "*runtime.context": 1,
                "*runtime.evacDst": 1,
                "*runtime.funcinl": 1,
                "*runtime.functab": 1,
                "*runtime.funcval": 1,
                "*runtime.imethod": 1,
                "*runtime.lfstack": 1,
                "*runtime.libcall": 1,
                "*runtime.maptype": 1,
                "*runtime.nameOff": 1,
                "*runtime.ptrtype": 1,
                "*runtime.rwmutex": 1,
                "*runtime.special": 1,
                "*runtime.textOff": 1,
                "*runtime.typeAlg": 1,
                "*runtime.typeOff": 1,
                "*runtime.workbuf": 1,
                "*strconv.decimal": 1,
                "*strings.Builder": 1,
                "*syntax.compiler": 1,
                "*syscall.LazyDLL": 1,
                "*syscall.RawConn": 1,
                "*syscall.WSAData": 1,
                "*time.ParseError": 1,
                "*unicode.Range16": 1,
                "*unicode.Range32": 1,
                "*url.EscapeError": 1,
                "BinaryMarshalerT": 1,
                "BooleanPrototype": 1,
                "DeclareNamespace": 1,
                "NetworkByteOrder": 1,
                "ProviderReserved": 1,
                "ReplaceAllString": 1,
                "ResolveReference": 1,
                "RightParenthesis": 1,
                "SetWriteDeadline": 1,
                "SetsockoptIPMreq": 1,
                "SetsockoptLinger": 1,
                "_declarationNode": 1,
                "appendNameToPath": 1,
                "decodeGobDecoder": 1,
                "encodeGobEncoder": 1,
                "enterGlobalScope": 1,
                "evaluateMultiply": 1,
                "exceptionaddress": 1,
                "freeDecoderState": 1,
                "freeEncoderState": 1,
                "gcMarkWorkerMode": 1,
                "gcshrinkstackoff": 1,
                "ignoreGobDecoder": 1,
                "isDataDescriptor": 1,
                "last_gc_nanotime": 1,
                "literalInterface": 1,
                "local_nlargefree": 1,
                "local_nsmallfree": 1,
                "local_tinyallocs": 1,
                "markBitsForIndex": 1,
                "markWorkerLabels": 1,
                "mustBeAssignable": 1,
                "nFlushCacheRoots": 1,
                "newBooleanObject": 1,
                "newBoundFunction": 1,
                "newFunctionStash": 1,
                "newGoArrayObject": 1,
                "newGoSliceObject": 1,
                "numberparameters": 1,
                "panicSyntaxError": 1,
                "parseIfStatement": 1,
                "parseVerticalBar": 1,
                "refillAllocCache": 1,
                "replacerFunction": 1,
                "setWriteDeadline": 1,
                "tryCatchEvaluate": 1,
                "tryExpungeLocked": 1,
                "tryGrowByReslice": 1,
                "writeFixedHeader": 1,
                "**runtime.funcval": 1,
                "**runtime.special": 1,
                "*[1]*otto._object": 1,
                "*[1]reflect.Value": 1,
                "*[2]runtime.Frame": 1,
                "*[8]*gob.typeInfo": 1,
                "*[8]*gob.wireType": 1,
                "*[8]*otto._object": 1,
                "*[8]gob.decHelper": 1,
                "*[8]gob.encHelper": 1,
                "*[]*gob.fieldType": 1,
                "*[]*otto._fnStash": 1,
                "*[]*reflect.rtype": 1,
                "*[]*regexp.thread": 1,
                "*[]*runtime._type": 1,
                "*[]*runtime.mspan": 1,
                "*[]*runtime.sudog": 1,
                "*[]*runtime.timer": 1,
                "*[]*syntax.Regexp": 1,
                "*[][]*ast.Comment": 1,
                "*[]ast.Expression": 1,
                "*[]func() []uint8": 1,
                "*[]otto._property": 1,
                "*[]reflect.method": 1,
                "*[]runtime.dbgVar": 1,
                "*[]runtime.gcBits": 1,
                "*[]syscall.WSABuf": 1,
                "*[]time.zoneTrans": 1,
                "*[]token._keyword": 1,
                "*[]unsafe.Pointer": 1,
                "*aes.KeySizeError": 1,
                "*aes.aesCipherAsm": 1,
                "*aes.aesCipherGCM": 1,
                "*ast.ArrayLiteral": 1,
                "*ast.BadStatement": 1,
                "*ast.ForStatement": 1,
                "*ast.TryStatement": 1,
                "*cpu.CacheLinePad": 1,
                "*engine.NativeVar": 1,
                "*func() []uintptr": 1,
                "*func() io.Writer": 1,
                "*func() time.Time": 1,
                "*func(*[][]uint8)": 1,
                "*func(*otto.Otto)": 1,
                "*func(*runtime.g)": 1,
                "*func(*runtime.p)": 1,
                "*func(complex128)": 1,
                "*func(gob.typeId)": 1,
                "*func(int32) bool": 1,
                "*func(int64) bool": 1,
                "*func(string) int": 1,
                "*gob.decoderState": 1,
                "*gob.encoderState": 1,
                "*gob.userTypeInfo": 1,
                "*io.LimitedReader": 1,
                "*json.SyntaxError": 1,
                "*json.Unmarshaler": 1,
                "*json.decodeState": 1,
                "*json.encodeState": 1,
                "*json.encoderFunc": 1,
                "*map[string]int64": 1,
                "*otto._dateObject": 1,
                "*otto._numberKind": 1,
                "*otto._resultKind": 1,
                "*otto._stringWide": 1,
                "*parser.ErrorList": 1,
                "*reflect.cacheKey": 1,
                "*reflect.funcType": 1,
                "*regexp.runeSlice": 1,
                "*registry.KeyInfo": 1,
                "*runtime.MemStats": 1,
                "*runtime.arenaIdx": 1,
                "*runtime.chantype": 1,
                "*runtime.divMagic": 1,
                "*runtime.finblock": 1,
                "*runtime.fixalloc": 1,
                "*runtime.funcInfo": 1,
                "*runtime.guintptr": 1,
                "*runtime.heapBits": 1,
                "*runtime.mapextra": 1,
                "*runtime.markBits": 1,
                "*runtime.mcentral": 1,
                "*runtime.muintptr": 1,
                "*runtime.parkInfo": 1,
                "*runtime.pollDesc": 1,
                "*runtime.puintptr": 1,
                "*runtime.semaRoot": 1,
                "*runtime.stackmap": 1,
                "*runtime.stkframe": 1,
                "*runtime.stringer": 1,
                "*runtime.textsect": 1,
                "*runtime.traceBuf": 1,
                "*sort.StringSlice": 1,
                "*strconv.NumError": 1,
                "*strconv.extFloat": 1,
                "*strings.asciiSet": 1,
                "*syntax.ErrorCode": 1,
                "*syntax.charGroup": 1,
                "*syntax.patchList": 1,
                "*syscall.DLLError": 1,
                "*syscall.Filetime": 1,
                "*syscall.IPv6Mreq": 1,
                "*syscall.LazyProc": 1,
                "*syscall.Sockaddr": 1,
                "*unicode.foldPair": 1,
                "*utf8.acceptRange": 1,
                "AlternateFileName": 1,
                "json:\"file\"": 1,
                "FindSubmatchIndex": 1,
                "FunctionPrototype": 1,
                "GetMUIStringValue": 1,
                "ProtocolMaxOffset": 1,
                "ReplaceAllLiteral": 1,
                "URIErrorPrototype": 1,
                "allocBitsForIndex": 1,
                "allocationProtect": 1,
                "assistWorkPerByte": 1,
                "cmpl_parseOrThrow": 1,
                "decodeArrayHelper": 1,
                "dedicatedMarkTime": 1,
                "defineOwnProperty": 1,
                "forwardOrBoundary": 1,
                "ignoreArrayHelper": 1,
                "implicitSemicolon": 1,
                "initCheckmarkSpan": 1,
                "lastbranchfromrip": 1,
                "newGoStructObject": 1,
                "newNativeFunction": 1,
                "newReferenceError": 1,
                "optionalSemicolon": 1,
                "parseArgumentList": 1,
                "parseArrayLiteral": 1,
                "parseTryStatement": 1,
                "parseUnicodeClass": 1,
                "poolLocalInternal": 1,
                "regularExpression": 1,
                "stackObjectBufHdr": 1,
                "sweepPagesPerByte": 1,
                "writeBlockDynamic": 1,
                "writeStoredHeader": 1,
                "**engine.NativeVar": 1,
                "**gob.encoderState": 1,
                "*[1]*syntax.Regexp": 1,
                "*[1]ast.Expression": 1,
                "*[1]time.zoneTrans": 1,
                "*[1]unsafe.Pointer": 1,
                "*[26]runtime.m128a": 1,
                "*[4]*reflect.rtype": 1,
                "*[8]*otto._fnStash": 1,
                "*[8]*reflect.rtype": 1,
                "*[8]*runtime._type": 1,
                "*[8][]*ast.Comment": 1,
                "*[8]func() []uint8": 1,
                "*[8]otto._property": 1,
                "*[8]token._keyword": 1,
                "*[8]unsafe.Pointer": 1,
                "*[]**gob.decEngine": 1,
                "*[]*ast.Identifier": 1,
                "*[]*otto._dclStash": 1,
                "*[]*registry.Entry": 1,
                "*[]*runtime._defer": 1,
                "*[]*runtime.bucket": 1,
                "*[]ast.Declaration": 1,
                "*[]flate.levelInfo": 1,
                "*[]reflect.imethod": 1,
                "*[]runtime.evacDst": 1,
                "*[]runtime.functab": 1,
                "*[]runtime.imethod": 1,
                "*[]runtime.typeAlg": 1,
                "*[]runtime.typeOff": 1,
                "*[]unicode.Range16": 1,
                "*[]unicode.Range32": 1,
                "*ast.BadExpression": 1,
                "*ast.CaseStatement": 1,
                "*ast.DotExpression": 1,
                "*ast.NewExpression": 1,
                "*ast.NumberLiteral": 1,
                "*ast.ObjectLiteral": 1,
                "*ast.ParameterList": 1,
                "*ast.RegExpLiteral": 1,
                "*ast.StringLiteral": 1,
                "*ast.WithStatement": 1,
                "*base64vlq.Decoder": 1,
                "*engine.NativeFunc": 1,
                "*engine.NativeType": 1,
                "*flate.dictDecoder": 1,
                "*flate.literalNode": 1,
                "*fmtsort.SortedMap": 1,
                "*func() (int, int)": 1,
                "*func() *otto.Otto": 1,
                "*func() [2]uintptr": 1,
                "*func() [][]string": 1,
                "*func() complex128": 1,
                "*func() gob.typeId": 1,
                "*func() otto.Value": 1,
                "*func() time.Month": 1,
                "*func() url.Values": 1,
                "*func(int) []uint8": 1,
                "*func(int32) int32": 1,
                "*func(int64) error": 1,
                "*func(int64) int64": 1,
                "*func(string) bool": 1,
                "*func(uint64) bool": 1,
                "*func(uint8) error": 1,
                "*json.arrayEncoder": 1,
                "*json.floatEncoder": 1,
                "*json.sliceEncoder": 1,
                "*map[string]string": 1,
                "*map[string]uint64": 1,
                "*otto.FunctionCall": 1,
                "*otto._dclProperty": 1,
                "*otto._goMapObject": 1,
                "*otto._nodeLiteral": 1,
                "*otto._nodeProgram": 1,
                "*otto._objectClass": 1,
                "*otto._objectStash": 1,
                "*otto._stringASCII": 1,
                "*poll.TimeoutError": 1,
                "*rand.lockedSource": 1,
                "*reflect.StructTag": 1,
                "*reflect.bitVector": 1,
                "*reflect.fieldScan": 1,
                "*reflect.layoutKey": 1,
                "*reflect.sliceType": 1,
                "*regexp.inputBytes": 1,
                "*runtime._typePair": 1,
                "*runtime.arenaHint": 1,
                "*runtime.bitvector": 1,
                "*runtime.finalizer": 1,
                "*runtime.gcTrigger": 1,
                "*runtime.gclinkptr": 1,
                "*runtime.heapArena": 1,
                "*runtime.mSpanList": 1,
                "*runtime.memRecord": 1,
                "*runtime.notInHeap": 1,
                "*runtime.pollCache": 1,
                "*runtime.ptabEntry": 1,
                "*runtime.spanClass": 1,
                "*runtime.sweepdata": 1,
                "*runtime.treapIter": 1,
                "*runtime.treapNode": 1,
                "*sourcemap.mapping": 1,
                "*strconv.floatInfo": 1,
                "*strconv.leftCheat": 1,
                "*struct { r1 int }": 1,
                "*struct { r2 int }": 1,
                "*struct { r3 int }": 1,
                "*struct { r4 int }": 1,
                "*struct { r5 int }": 1,
                "*struct { r6 int }": 1,
                "*struct { r7 int }": 1,
                "*syscall.Tokenuser": 1,
                "*syscall.sysLinger": 1,
                "*testlog.Interface": 1,
                "*unicode.CaseRange": 1,
                "EvalErrorPrototype": 1,
                "FindAllStringIndex": 1,
                "FindStringSubmatch": 1,
                "SecurityDescriptor": 1,
                "SetDebuggerHandler": 1,
                "SetStackDepthLimit": 1,
                "SetStackTraceLimit": 1,
                "SetsockoptIPv6Mreq": 1,
                "TypeErrorPrototype": 1,
                "VolumeSerialNumber": 1,
                "assistBytesPerWork": 1,
                "clearCheckmarkSpan": 1,
                "decodeIgnoredValue": 1,
                "decodeTypeSequence": 1,
                "enterFunctionScope": 1,
                "fractionalMarkTime": 1,
                "getIgnoreEnginePtr": 1,
                "haveTemplateThread": 1,
                "lastexceptiontorip": 1,
                "newArgumentsObject": 1,
                "newPrimitiveObject": 1,
                "parseBracketMember": 1,
                "parseCaseStatement": 1,
                "parseFunctionBlock": 1,
                "parseNewExpression": 1,
                "parseObjectLiteral": 1,
                "parseParameterList": 1,
                "parseRegExpLiteral": 1,
                "parseSourceElement": 1,
                "parseStatementList": 1,
                "parseWithStatement": 1,
                "scanNumericLiteral": 1,
                "sendTypeDescriptor": 1,
                "setMarkedNonAtomic": 1,
                "skipLineWhiteSpace": 1,
                "sweepHeapLiveBasis": 1,
                "tracebackancestors": 1,
                "wprocessorrevision": 1,
                "writeDynamicHeader": 1,
                "**ast.CaseStatement": 1,
                "**engine.NativeFunc": 1,
                "**engine.NativeType": 1,
                "**otto._objectClass": 1,
                "**runtime.heapArena": 1,
                "**runtime.notInHeap": 1,
                "**runtime.treapNode": 1,
                "*[0]unicode.Range16": 1,
                "*[16]*reflect.rtype": 1,
                "*[16]runtime.dbgVar": 1,
                "*[1]unicode.Range16": 1,
                "*[1]unicode.Range32": 1,
                "*[2]runtime.evacDst": 1,
                "*[2]unicode.Range16": 1,
                "*[2]unicode.Range32": 1,
                "*[32]*reflect.rtype": 1,
                "*[3]unicode.Range16": 1,
                "*[3]unicode.Range32": 1,
                "*[41]token._keyword": 1,
                "*[4]unicode.Range16": 1,
                "*[4]unicode.Range32": 1,
                "*[512]*runtime.itab": 1,
                "*[5]*runtime._defer": 1,
                "*[5]unicode.Range16": 1,
                "*[5]unicode.Range32": 1,
                "*[64]*reflect.rtype": 1,
                "*[6]unicode.Range16": 1,
                "*[6]unicode.Range32": 1,
                "*[7]unicode.Range16": 1,
                "*[7]unicode.Range32": 1,
                "*[8]**gob.decEngine": 1,
                "*[8]*otto._dclStash": 1,
                "*[8]runtime.typeOff": 1,
                "*[8]unicode.Range16": 1,
                "*[8]unicode.Range32": 1,
                "*[9]unicode.Range16": 1,
                "*[9]unicode.Range32": 1,
                "*[][]*runtime._type": 1,
                "*[]runtime.arenaIdx": 1,
                "*[]runtime.divMagic": 1,
                "*[]runtime.guintptr": 1,
                "*[]runtime.textsect": 1,
                "*[]strconv.extFloat": 1,
                "*[]syntax.charGroup": 1,
                "*[]unicode.foldPair": 1,
                "*[]utf8.acceptRange": 1,
                "*ast.BlockStatement": 1,
                "*ast.BooleanLiteral": 1,
                "*ast.CallExpression": 1,
                "*ast.CatchStatement": 1,
                "*ast.EmptyStatement": 1,
                "*ast.ForInStatement": 1,
                "*ast.ThisExpression": 1,
                "*ast.ThrowStatement": 1,
                "*ast.WhileStatement": 1,
                "*chan poll.ioSrvReq": 1,
                "*engine.NativeConst": 1,
                "*engine.NativeField": 1,
                "*errors.errorString": 1,
                "*flate.decompressor": 1,
                "*func() (int, bool)": 1,
                "*func() os.FileMode": 1,
                "*func() otto._stash": 1,
                "*func() sync.Locker": 1,
                "*func(*ast.Comment)": 1,
                "*func([]uint8) bool": 1,
                "*func(float64) bool": 1,
                "*func(interface {})": 1,
                "*func(string) []int": 1,
                "*func(string) error": 1,
                "*func(uint32) error": 1,
                "*func(uintptr) bool": 1,
                "*gob.gobEncoderType": 1,
                "*json.structEncoder": 1,
                "*json.unquotedValue": 1,
                "*otto._nodeProperty": 1,
                "*otto._propertyMode": 1,
                "*otto._regExpObject": 1,
                "*otto._stringObject": 1,
                "*reflect.ValueError": 1,
                "*reflect.layoutType": 1,
                "*reflect.structType": 1,
                "*regexp.inputReader": 1,
                "*regexp.inputString": 1,
                "*regexp.onePassInst": 1,
                "*regexp.onePassProg": 1,
                "*runtime.adjustinfo": 1,
                "*runtime.bucketType": 1,
                "*runtime.cgoCallers": 1,
                "*runtime.gcSweepBuf": 1,
                "*runtime.mSpanState": 1,
                "*runtime.moduledata": 1,
                "*runtime.modulehash": 1,
                "*runtime.overlapped": 1,
                "*runtime.plainError": 1,
                "*runtime.randomEnum": 1,
                "*runtime.sysmontick": 1,
                "*runtime.systeminfo": 1,
                "*runtime.traceAlloc": 1,
                "*runtime.traceStack": 1,
                "*runtime.waitReason": 1,
                "*runtime.workbufhdr": 1,
                "*sourcemap.Consumer": 1,
                "*sourcemap.mappings": 1,
                "*syscall.Overlapped": 1,
                "*syscall.Systemtime": 1,
                "*syscall.WaitStatus": 1,
                "*unicode.RangeTable": 1,
                "AssignComputeBounds": 1,
                "ImportNativePackage": 1,
                "json:\"names\"": 1,
                "RangeErrorPrototype": 1,
                "SetsockoptInet4Addr": 1,
                "calculateComparison": 1,
                "compileIgnoreSingle": 1,
                "indexOfArgumentName": 1,
                "isGenericDescriptor": 1,
                "newDeclarationStash": 1,
                "panicReferenceError": 1,
                "parseBlockStatement": 1,
                "parseBreakStatement": 1,
                "parseCallExpression": 1,
                "parseEmptyStatement": 1,
                "parseObjectProperty": 1,
                "parseSourceElements": 1,
                "parseThrowStatement": 1,
                "parseWhileStatement": 1,
                "removeLeadingRegexp": 1,
                "removeLeadingString": 1,
                "specialprofilealloc": 1,
                "runtime/internal/sys": 1,
                "**engine.NativeConst": 1,
                "**regexp.onePassProg": 1,
                "**runtime.moduledata": 1,
                "*[10]unicode.Range16": 1,
                "*[11]unicode.Range16": 1,
                "*[128]*reflect.rtype": 1,
                "*[128]*runtime.sudog": 1,
                "*[12]unicode.Range16": 1,
                "*[134]*runtime.mspan": 1,
                "*[13]unicode.Range16": 1,
                "*[13]unicode.Range32": 1,
                "*[14]runtime.typeAlg": 1,
                "*[14]unicode.Range16": 1,
                "*[15]unicode.Range16": 1,
                "*[15]unicode.Range32": 1,
                "*[16]flate.levelInfo": 1,
                "*[16]unicode.Range16": 1,
                "*[16]unicode.Range32": 1,
                "*[18]unicode.Range16": 1,
                "*[18]unicode.Range32": 1,
                "*[20]unicode.Range16": 1,
                "*[21]unicode.Range16": 1,
                "*[22]unicode.Range16": 1,
                "*[23]unicode.Range16": 1,
                "*[24]unicode.Range32": 1,
                "*[25]unicode.Range16": 1,
                "*[28]unicode.Range16": 1,
                "*[31]unicode.Range16": 1,
                "*[31]unicode.Range32": 1,
                "*[32]*runtime._defer": 1,
                "*[32]unicode.Range16": 1,
                "*[33]unicode.Range16": 1,
                "*[33]unicode.Range32": 1,
                "*[34]unicode.Range32": 1,
                "*[35]unicode.Range32": 1,
                "*[36]unicode.Range32": 1,
                "*[37]unicode.Range16": 1,
                "*[38]unicode.Range32": 1,
                "*[39]unicode.Range32": 1,
                "*[40]unicode.Range16": 1,
                "*[43]unicode.Range16": 1,
                "*[43]unicode.Range32": 1,
                "*[44]unicode.Range16": 1,
                "*[48]unicode.Range32": 1,
                "*[512]*runtime.mspan": 1,
                "*[58]unicode.Range32": 1,
                "*[59]unicode.Range32": 1,
                "*[5]utf8.acceptRange": 1,
                "*[62]unicode.Range32": 1,
                "*[63]unicode.Range16": 1,
                "*[64]unicode.Range32": 1,
                "*[66]unicode.Range16": 1,
                "*[70]unicode.Range16": 1,
                "*[72]unicode.Range32": 1,
                "*[77]unicode.Range32": 1,
                "*[8][]*runtime._type": 1,
                "*[8]strconv.extFloat": 1,
                "*[8]syntax.charGroup": 1,
                "*[91]unicode.Range32": 1,
                "*[92]unicode.Range16": 1,
                "*[97]unicode.Range16": 1,
                "*[]*engine.NativeVar": 1,
                "*[][]*runtime._defer": 1,
                "*[]flate.literalNode": 1,
                "*[]otto._dclProperty": 1,
                "*[]reflect.fieldScan": 1,
                "*[]runtime._typePair": 1,
                "*[]runtime.finalizer": 1,
                "*[]runtime.mSpanList": 1,
                "*[]runtime.ptabEntry": 1,
                "*[]sourcemap.mapping": 1,
                "*[]strconv.leftCheat": 1,
                "*[]unicode.CaseRange": 1,
                "*ast.BranchStatement": 1,
                "*ast.CommentPosition": 1,
                "*ast.EmptyExpression": 1,
                "*ast.FunctionLiteral": 1,
                "*ast.ReturnStatement": 1,
                "*ast.SwitchStatement": 1,
                "*ast.UnaryExpression": 1,
                "*cipher.StreamReader": 1,
                "*crc32.slicing8Table": 1,
                "*flate.InternalError": 1,
                "*func() (int, error)": 1,
                "*func() *otto.Object": 1,
                "*func() interface {}": 1,
                "*func() otto.Context": 1,
                "*func() reflect.Kind": 1,
                "*func() reflect.Type": 1,
                "*func() time.Weekday": 1,
                "*func(*runtime.itab)": 1,
                "*func([]uint8) []int": 1,
                "*func([]uint8) error": 1,
                "*func(int, int) bool": 1,
                "*func(reflect.Value)": 1,
                "*func(string) string": 1,
                "*func(uintptr) uint8": 1,
                "*json.MarshalerError": 1,
                "*main.MDWSFYNZNNMXJN": 1,
                "*main.PUHPXOLPIEVQQD": 1,
                "*main.TCZDEDUUYIATUK": 1,
                "*main.XXIKHRPRUWKJZF": 1,
                "*map.hdr[string]bool": 1,
                "*map[gob.typeId]bool": 1,
                "*otto._goArrayObject": 1,
                "*otto._goSliceObject": 1,
                "*otto._nodeStatement": 1,
                "*reflect.StructField": 1,
                "*reflect.methodValue": 1,
                "*reflect.sliceHeader": 1,
                "*reflect.structField": 1,
                "*regexp.queueOnePass": 1,
                "*runtime.StackRecord": 1,
                "*runtime.blockRecord": 1,
                "*runtime.errorString": 1,
                "*runtime.gcBitsArena": 1,
                "*runtime.linearAlloc": 1,
                "*runtime.randomOrder": 1,
                "*runtime.stackObject": 1,
                "*runtime.stdFunction": 1,
                "*runtime.structfield": 1,
                "*runtime.traceBufPtr": 1,
                "*sourcemap.sourceMap": 1,
                "*syscall.RawSockaddr": 1,
                "*syscall.SysProcAttr": 1,
                "CompileWithSourceMap": 1,
                "FindAllSubmatchIndex": 1,
                "GetTokenPrimaryGroup": 1,
                "ReplaceAllStringFunc": 1,
                "SetExpandStringValue": 1,
                "SyntaxErrorPrototype": 1,
                "convertCallParameter": 1,
                "dwnumberofprocessors": 1,
                "tryGrowByReslice0": 1,
                "errorUnexpectedToken": 1,
                "exceptioninformation": 1,
                "findRunnableGCWorker": 1,
                "gcFractionalMarkTime": 1,
                "indexOfParameterName": 1,
                "isAccessorDescriptor": 1,
                "lastexceptionfromrip": 1,
                "parsePerlClassEscape": 1,
                "parseReturnStatement": 1,
                "parseShiftExpression": 1,
                "parseSwitchStatement": 1,
                "parseUnaryExpression": 1,
                "readMultiLineComment": 1,
                "retrieveAssetAsBytes": 1,
                "skipMultiLineComment": 1,
                "gopkg.in/sourcemap.v1": 1,
                "*[0]reflect.fieldScan": 1,
                "*[100]unicode.Range16": 1,
                "*[102]unicode.Range16": 1,
                "*[103]unicode.Range16": 1,
                "*[109]unicode.Range16": 1,
                "*[112]unicode.Range16": 1,
                "*[117]unicode.Range16": 1,
                "*[123]unicode.Range16": 1,
                "*[126]unicode.Range16": 1,
                "*[147]unicode.Range16": 1,
                "*[150]unicode.Range32": 1,
                "*[176]unicode.Range16": 1,
                "*[178]unicode.Range16": 1,
                "*[189]unicode.Range32": 1,
                "*[1]reflect.fieldScan": 1,
                "*[282]unicode.Range16": 1,
                "*[2]runtime.mSpanList": 1,
                "*[359]unicode.Range16": 1,
                "*[5][]*runtime._defer": 1,
                "*[67]runtime.divMagic": 1,
                "*[87]strconv.extFloat": 1,
                "*[88]unicode.foldPair": 1,
                "*[8]*engine.NativeVar": 1,
                "*[8]otto._dclProperty": 1,
                "*[8]runtime._typePair": 1,
                "*[]*ast.CaseStatement": 1,
                "*[]*engine.NativeFunc": 1,
                "*[]*engine.NativeType": 1,
                "*[]*otto._objectStash": 1,
                "*[]*runtime.heapArena": 1,
                "*[]otto._nodeProperty": 1,
                "*[]regexp.onePassInst": 1,
                "*[]runtime.gcSweepBuf": 1,
                "*[]runtime.modulehash": 1,
                "*ast.AssignExpression": 1,
                "*ast.BinaryExpression": 1,
                "*ast.DoWhileStatement": 1,
                "*engine.NativePackage": 1,
                "*flate.huffmanDecoder": 1,
                "*flate.huffmanEncoder": 1,
                "*func() (bool, error)": 1,
                "*func() (string, int)": 1,
                "*func() reflect.Value": 1,
                "*func() time.Duration": 1,
                "*func(*os.file) error": 1,
                "*func([]uint8) string": 1,
                "*func(ast.Expression)": 1,
                "*func(func() float64)": 1,
                "*func(int) otto.Value": 1,
                "*func(int, int) error": 1,
                "*func(registry.Entry)": 1,
                "*func(string, string)": 1,
                "*func(time.Time) bool": 1,
                "*func(unsafe.Pointer)": 1,
                "*hex.InvalidByteError": 1,
                "*json.condAddrEncoder": 1,
                "*map[reflect.Type]int": 1,
                "*map[string]time.abbr": 1,
                "*otto._goStructObject": 1,
                "*otto._lessThanResult": 1,
                "*otto._nativeFunction": 1,
                "*otto._nodeExpression": 1,
                "*otto._nodeIdentifier": 1,
                "*otto._propertyGetSet": 1,
                "*otto._stashReference": 1,
                "*reflect.makeFuncImpl": 1,
                "*reflect.stringHeader": 1,
                "*reflect.uncommonType": 1,
                "*runtime.ancestorInfo": 1,
                "*runtime.forcegcstate": 1,
                "*runtime.gcDrainFlags": 1,
                "*runtime.gsignalStack": 1,
                "*runtime.pcvalueCache": 1,
                "*runtime.stackWorkBuf": 1,
                "*runtime.stringStruct": 1,
                "*runtime.timersBucket": 1,
                "*runtime.uncommontype": 1,
                "*strconv.decimalSlice": 1,
                "*syscall.SockaddrUnix": 1,
                "*url.InvalidHostError": 1,
                "FindAllStringSubmatch": 1,
                "ImportStandardLibrary": 1,
                "LoadScriptWithTimeout": 1,
                "assignEncodingAndSize": 1,
                "disallowUnknownFields": 1,
                "dwactiveprocessormask": 1,
                "evaluateBreakContinue": 1,
                "gcMarkWorkerStartTime": 1,
                "newNodeFunctionObject": 1,
                "parseDoWhileStatement": 1,
                "readSingleLineComment": 1,
                "retrieveAssetAsString": 1,
                "skipSingleLineComment": 1,
                "specialfinalizeralloc": 1,
                "*[256]runtime.guintptr": 1,
                "*[2]runtime.gcSweepBuf": 1,
                "*[35]runtime.mSpanList": 1,
                "*[61]strconv.leftCheat": 1,
                "*[65520]runtime.gcBits": 1,
                "*[8]*engine.NativeFunc": 1,
                "*[8]*engine.NativeType": 1,
                "*[8]*otto._objectStash": 1,
                "*[]*engine.NativeConst": 1,
                "*[]*engine.NativeField": 1,
                "*[]*reflect.structType": 1,
                "*[]*runtime.moduledata": 1,
                "*[]*unicode.RangeTable": 1,
                "*[][32]*runtime._defer": 1,
                "*[]otto._nodeStatement": 1,
                "*[]reflect.structField": 1,
                "*[]runtime.stackObject": 1,
                "*ast.BracketExpression": 1,
                "*ast.DebuggerStatement": 1,
                "*ast.FunctionStatement": 1,
                "*ast.LabelledStatement": 1,
                "*ast.VariableStatement": 1,
                "*func() (int64, error)": 1,
                "*func() (string, bool)": 1,
                "*func() (uint8, error)": 1,
                "*func() *otto._runtime": 1,
                "*func() *reflect.rtype": 1,
                "*func() *regexp.Regexp": 1,
                "*func() *syntax.Regexp": 1,
                "*func() *time.Location": 1,
                "*func() []*ast.Comment": 1,
                "*func() syntax.EmptyOp": 1,
                "*func() syscall.Signal": 1,
                "*func(...interface {})": 1,
                "*func([]uint8) []uint8": 1,
                "*func(complex128) bool": 1,
                "*func(io.Reader) error": 1,
                "*func(os.Signal) error": 1,
                "*func(string) []string": 1,
                "*func(time.Time) error": 1,
                "*map.hdr[string]string": 1,
                "*map[reflect.Type]bool": 1,
                "*map[string]otto.Value": 1,
                "*otto._argumentsObject": 1,
                "*otto._nodeDeclaration": 1,
                "*otto._nodeIfStatement": 1,
                "*parser._RegExp_parser": 1,
                "*reflect.interfaceType": 1,
                "*regexp.onePassMachine": 1,
                "*runtime.gcTriggerKind": 1,
                "*runtime.interfacetype": 1,
                "*runtime.itabTableType": 1,
                "*runtime.stackfreelist": 1,
                "*runtime.traceStackPtr": 1,
                "*syscall.SockaddrInet4": 1,
                "*syscall.SockaddrInet6": 1,
                "*syscall.Win32finddata": 1,
                "cmpl_call_nodeFunction": 1,
                "fromPropertyDescriptor": 1,
                "newBoundFunctionObject": 1,
                "parseContinueStatement": 1,
                "parseDebuggerStatement": 1,
                "parseFunctionStatement": 1,
                "parseObjectPropertyKey": 1,
                "parsePostfixExpression": 1,
                "parsePrimaryExpression": 1,
                "parseVariableStatement": 1,
                "vmRetrieveAssetAsBytes": 1,
                "*[100000]unsafe.Pointer": 1,
                "*[101]runtime.finalizer": 1,
                "*[304]unicode.CaseRange": 1,
                "*[5]*unicode.RangeTable": 1,
                "*[5][32]*runtime._defer": 1,
                "*[8]*engine.NativeConst": 1,
                "*[8]*engine.NativeField": 1,
                "*[8]*reflect.structType": 1,
                "*[8]*unicode.RangeTable": 1,
                "*[]otto._lessThanResult": 1,
                "*[]otto._nodeExpression": 1,
                "*[]runtime.ancestorInfo": 1,
                "*ast.SequenceExpression": 1,
                "*ast.VariableExpression": 1,
                "*encoding.TextMarshaler": 1,
                "*flate.huffmanBitWriter": 1,
                "*func() (int, int, int)": 1,
                "*func() (string, error)": 1,
                "*func() (uint32, error)": 1,
                "*func() []reflect.Value": 1,
                "*func() reflect.ChanDir": 1,
                "*func([]uint8, []uint8)": 1,
                "*func(fmt.State, int32)": 1,
                "*func(func(*otto.Otto))": 1,
                "*func(int) (int, error)": 1,
                "*func(int) (int32, int)": 1,
                "*func(int) otto.Context": 1,
                "*func(int) reflect.Type": 1,
                "*func(strconv.extFloat)": 1,
                "*json.reflectWithString": 1,
                "*map.bucket[string]bool": 1,
                "*map.iter[string]string": 1,
                "*map[*gob.typeInfo]bool": 1,
                "*otto._defaultValueHint": 1,
                "*otto._nodeArrayLiteral": 1,
                "*otto._nodeForStatement": 1,
                "*otto._nodeTryStatement": 1,
                "*reflect.emptyInterface": 1,
                "*reflect.funcTypeFixed4": 1,
                "*reflect.funcTypeFixed8": 1,
                "*runtime.cgothreadstart": 1,
                "*runtime.memRecordCycle": 1,
                "*runtime.stackObjectBuf": 1,
                "*runtime.stackScanState": 1,
                "*runtime.traceBufHeader": 1,
                "*sync.poolLocalInternal": 1,
                "*syscall.RawSockaddrAny": 1,
                "*syscall.win32finddata1": 1,
                "CallFunctionWithTimeout": 1,
                "FindReaderSubmatchIndex": 1,
                "FindStringSubmatchIndex": 1,
                "GetUserProfileDirectory": 1,
                "ReferenceErrorPrototype": 1,
                "ReplaceAllLiteralString": 1,
                "Sources": 1,
                "json:\"sources\"": 1,
                "json:\"version\"": 1,
                "dwallocationgranularity": 1,
                "newNativeFunctionObject": 1,
                "parseAdditiveExpression": 1,
                "parseEqualityExpression": 1,
                "parseIterationStatement": 1,
                "vmRetrieveAssetAsString": 1,
                "internal/syscall/windows": 1,
                "**ast.VariableExpression": 1,
                "*[179999]*runtime.bucket": 1,
                "*[63]runtime.stackObject": 1,
                "*[8]otto._lessThanResult": 1,
                "*[]*engine.NativePackage": 1,
                "*[]otto._nodeDeclaration": 1,
                "*[]runtime.stackfreelist": 1,
                "*[]runtime.traceStackPtr": 1,
                "*ast.ExpressionStatement": 1,
                "*ast.FunctionDeclaration": 1,
                "*ast.VariableDeclaration": 1,
                "*flate.CorruptInputError": 1,
                "*func() ([]uint8, error)": 1,
                "*func() (float64, error)": 1,
                "*func() *base64.Encoding": 1,
                "*func() *reflect.MapIter": 1,
                "*func(*os.Process) error": 1,
                "*func(*url.URL) *url.URL": 1,
                "*func([]uint8) [][]uint8": 1,
                "*func(int) reflect.Value": 1,
                "*func(int, string) error": 1,
                "*func(int32, int32) bool": 1,
                "*func(os.FileMode) error": 1,
                "*func(otto.Value) string": 1,
                "*func(reflect.Type) bool": 1,
                "*func(string) otto.Value": 1,
                "*json.UnmarshalTypeError": 1,
                "*map.bucket[string]int64": 1,
                "*map.hdr[string][]string": 1,
                "*map[string]interface {}": 1,
                "*memorymodule._Ctype_int": 1,
                "*otto._constructFunction": 1,
                "*otto._nodeCaseStatement": 1,
                "*otto._nodeDotExpression": 1,
                "*otto._nodeNewExpression": 1,
                "*otto._nodeObjectLiteral": 1,
                "*otto._nodeRegExpLiteral": 1,
                "*otto._nodeWithStatement": 1,
                "*otto._propertyReference": 1,
                "*reflect.funcTypeFixed16": 1,
                "*reflect.funcTypeFixed32": 1,
                "*reflect.funcTypeFixed64": 1,
                "*runtime.cgoTracebackArg": 1,
                "*runtime.exceptionrecord": 1,
                "*runtime.overlappedEntry": 1,
                "*runtime.pcvalueCacheEnt": 1,
                "*runtime.persistentAlloc": 1,
                "*runtime.stackWorkBufHdr": 1,
                "*runtime.traceStackTable": 1,
                "*syscall.RawSockaddrUnix": 1,
                "*syscall.WSAProtocolInfo": 1,
                "_newNativeFunctionObject": 1,
                "cmpl_functionDeclaration": 1,
                "cmpl_variableDeclaration": 1,
                "parseBitwiseOrExpression": 1,
                "parseForOrForInStatement": 1,
                "parseLogicalOrExpression": 1,
                "parseVariableDeclaration": 1,
                "**otto._nodeCaseStatement": 1,
                "*[0]*engine.NativePackage": 1,
                "*[2]runtime.stackfreelist": 1,
                "*[8]*engine.NativePackage": 1,
                "*[]json.reflectWithString": 1,
                "*[]runtime.memRecordCycle": 1,
                "*[]syscall.RawSockaddrAny": 1,
                "*base64.CorruptInputError": 1,
                "*encoding.BinaryMarshaler": 1,
                "*encoding.TextUnmarshaler": 1,
                "*func() ([]string, error)": 1,
                "*func(int) reflect.Method": 1,
                "*func(int32) (int, error)": 1,
                "*func(interface {}) error": 1,
                "*func(io.RuneReader) bool": 1,
                "*func(reflect.Value) bool": 1,
                "*func(string, string) int": 1,
                "*map.bucket[string]string": 1,
                "*map.bucket[string]uint64": 1,
                "*map.hdr[reflect.Type]int": 1,
                "*map.iter[string][]string": 1,
                "*map[gob.typeId]gob.decOp": 1,
                "*map[int32]unsafe.Pointer": 1,
                "*map[unsafe.Pointer]int32": 1,
                "*memorymodule._Ctype_char": 1,
                "*otto._bindFunctionObject": 1,
                "*otto._nodeBlockStatement": 1,
                "*otto._nodeCallExpression": 1,
                "*otto._nodeCatchStatement": 1,
                "*otto._nodeEmptyStatement": 1,
                "*otto._nodeForInStatement": 1,
                "*otto._nodeFunctionObject": 1,
                "*otto._nodeThisExpression": 1,
                "*otto._nodeThrowStatement": 1,
                "*otto._nodeWhileStatement": 1,
                "*reflect.funcTypeFixed128": 1,
                "*runtime.MemProfileRecord": 1,
                "*runtime.cgoSymbolizerArg": 1,
                "*runtime.gcMarkWorkerMode": 1,
                "*runtime.semaProfileFlags": 1,
                "*runtime.specialfinalizer": 1,
                "*syscall.RawSockaddrInet4": 1,
                "*syscall.RawSockaddrInet6": 1,
                "*syscall.SIDAndAttributes": 1,
                "*syscall.WSAProtocolChain": 1,
                "Mappings": 1,
                "json:\"mappings\"": 1,
                "calculateBinaryExpression": 1,
                "cmpl_evaluate_nodeProgram": 1,
                "fractionalUtilizationGoal": 1,
                "parseAssignmentExpression": 1,
                "parseBitwiseAndExpression": 1,
                "parseConditionlExpression": 1,
                "parseLogicalAndExpression": 1,
                "parseRelationalExpression": 1,
                "**memorymodule._Ctype_char": 1,
                "*[2]syscall.RawSockaddrAny": 1,
                "*[3]runtime.memRecordCycle": 1,
                "*[]*ast.VariableExpression": 1,
                "*[]runtime.overlappedEntry": 1,
                "*[]runtime.pcvalueCacheEnt": 1,
                "*[]syscall.WSAProtocolInfo": 1,
                "*ast.ConditionalExpression": 1,
                "*func(*flate.decompressor)": 1,
                "*func(*regexp.Regexp) bool": 1,
                "*func(*syntax.Regexp) bool": 1,
                "*func([]int) reflect.Value": 1,
                "*func(ast.CommentPosition)": 1,
                "*func(file.Idx) *file.File": 1,
                "*func(func(uintptr)) error": 1,
                "*func(int) regexp.lazyFlag": 1,
                "*func(int, func(int, int))": 1,
                "*func(int, int, int) error": 1,
                "*func(io.RuneReader) []int": 1,
                "*func(logger.Logger) error": 1,
                "*func(reflect.Value) error": 1,
                "*func(string) (int, error)": 1,
                "*func(string, int) [][]int": 1,
                "*func(uint32, []bool) bool": 1,
                "*json.UnsupportedTypeError": 1,
                "*map.hdr[reflect.Type]bool": 1,
                "*map[gob.typeId]*gob.decOp": 1,
                "*map[string]func() []uint8": 1,
                "*map[string]otto._property": 1,
                "*map[string]token._keyword": 1,
                "*otto._nodeBranchStatement": 1,
                "*otto._nodeFunctionLiteral": 1,
                "*otto._nodeReturnStatement": 1,
                "*otto._nodeSwitchStatement": 1,
                "*otto._nodeUnaryExpression": 1,
                "*runtime.gcControllerState": 1,
                "*runtime.sliceInterfacePtr": 1,
                "*runtime.stackObjectBufHdr": 1,
                "*runtime.stackObjectRecord": 1,
                "*syscall.Tokenprimarygroup": 1,
                "FindAllStringSubmatchIndex": 1,
                "GetFileInformationByHandle": 1,
                "dedicatedMarkWorkersNeeded": 1,
                "parseFunctionParameterList": 1,
                "*[8]runtime.pcvalueCacheEnt": 1,
                "*[]*otto._nodeCaseStatement": 1,
                "*encoding.BinaryUnmarshaler": 1,
                "*func() (int32, int, error)": 1,
                "*func([]uint8) (int, error)": 1,
                "*func([]uint8, int) [][]int": 1,
                "*func(int) ([]uint8, error)": 1,
                "*func(string) *syscall.Proc": 1,
                "*func(string) reflect.Value": 1,
                "*func(string, int) []string": 1,
                "*func(string, string) error": 1,
                "*func(string, uint32) error": 1,
                "*func(string, uint64) error": 1,
                "*func(syscall.Handle) error": 1,
                "*json.InvalidUnmarshalError": 1,
                "*json.UnsupportedValueError": 1,
                "*map.bucket[gob.typeId]bool": 1,
                "*map.bucket[string][]string": 1,
                "*map.hdr[*gob.typeInfo]bool": 1,
                "*map[gob.typeId]gob.gobType": 1,
                "*otto._nativeFunctionObject": 1,
                "*otto._nodeAssignExpression": 1,
                "*otto._nodeBinaryExpression": 1,
                "*otto._nodeDoWhileStatement": 1,
                "*runtime.BlockProfileRecord": 1,
                "*runtime.TypeAssertionError": 1,
                "*runtime.stringInterfacePtr": 1,
                "*runtime.traceAllocBlockPtr": 1,
                "*runtime.uint16InterfacePtr": 1,
                "*runtime.uint32InterfacePtr": 1,
                "*runtime.uint64InterfacePtr": 1,
                "*syscall.SecurityAttributes": 1,
                "MDWSFYNZNNMXJNEEPPLOZDYKCCO": 1,
                "MDWSFYNZNNMXJNLNUKLRENITROG": 1,
                "MDWSFYNZNNMXJNOORZMQUBRDPNI": 1,
                "MDWSFYNZNNMXJNPSYHDEFDZTDQA": 1,
                "MDWSFYNZNNMXJNQVAOJQYSXLSTF": 1,
                "MDWSFYNZNNMXJNQXMHUWNCQPNEO": 1,
                "MDWSFYNZNNMXJNVRHACEWIOVSXS": 1,
                "MDWSFYNZNNMXJNWWAWSHZULFGWS": 1,
                "PUHPXOLPIEVQQDDTGPMTBWUVVPB": 1,
                "PUHPXOLPIEVQQDEIARDEIRSTEDR": 1,
                "PUHPXOLPIEVQQDEKMFFIRIUXQPX": 1,
                "PUHPXOLPIEVQQDGXUTSHLXFJPVY": 1,
                "PUHPXOLPIEVQQDUUZOIGZHYINTL": 1,
                "PUHPXOLPIEVQQDWFYMDLROICZIY": 1,
                "PUHPXOLPIEVQQDYNWFRVRBTYPGG": 1,
                "TCZDEDUUYIATUKAFOAGIWSPBCCX": 1,
                "TCZDEDUUYIATUKBFEPIXYNNRVDN": 1,
                "TCZDEDUUYIATUKCJMFKYQCLGFAI": 1,
                "TCZDEDUUYIATUKHDUGZAAUOGSUV": 1,
                "TCZDEDUUYIATUKNCDUXUPVEXCOY": 1,
                "TCZDEDUUYIATUKUFOQSKPHIFFPB": 1,
                "TCZDEDUUYIATUKZQHILBKOHZOII": 1,
                "XXIKHRPRUWKJZFIDMXSRIPGLCIC": 1,
                "XXIKHRPRUWKJZFPPNEQHCHQYBIF": 1,
                "cmpl_evaluate_nodeStatement": 1,
                "lpmaximumapplicationaddress": 1,
                "lpminimumapplicationaddress": 1,
                "parseLeftHandSideExpression": 1,
                "github.com/robertkrimen/otto": 1,
                "*[1048576]*runtime.heapArena": 1,
                "*[32]syscall.WSAProtocolInfo": 1,
                "*[64]runtime.overlappedEntry": 1,
                "*[8192]runtime.traceStackPtr": 1,
                "*[]*memorymodule._Ctype_char": 1,
                "*[]runtime.stackObjectRecord": 1,
                "*func() (os.FileInfo, error)": 1,
                "*func(*poll.operation) error": 1,
                "*func([]uint8, []uint8) bool": 1,
                "*func(file.Position, string)": 1,
                "*func(int) ([]string, error)": 1,
                "*func(interface {}, uintptr)": 1,
                "*func(string) (string, bool)": 1,
                "*func(string, []uint8) error": 1,
                "*func(string, string) string": 1,
                "*func(uint8) (string, error)": 1,
                "*func(uintptr) (string, int)": 1,
                "*map.bucket[reflect.Type]int": 1,
                "*map.bucket[string]time.abbr": 1,
                "*map.hdr[string]interface {}": 1,
                "*map[*reflect.structType]int": 1,
                "*map[reflect.Type]*gob.decOp": 1,
                "*map[reflect.Type]*gob.encOp": 1,
                "*map[reflect.Type]gob.typeId": 1,
                "*map[string]syntax.charGroup": 1,
                "*map[uint32][]*runtime._type": 1,
                "*otto._nodeBracketExpression": 1,
                "*otto._nodeDebuggerStatement": 1,
                "*otto._nodeLabelledStatement": 1,
                "*otto._nodeVariableStatement": 1,
                "*syscall.Timezoneinformation": 1,
                "cmpl_evaluate_nodeExpression": 1,
                "parseVariableDeclarationList": 1,
                "**[1048576]*runtime.heapArena": 1,
                "*[]*otto._nodeFunctionLiteral": 1,
                "*[][8]runtime.pcvalueCacheEnt": 1,
                "*func() (*syscall.SID, error)": 1,
                "*func() (interface {}, error)": 1,
                "*func() (reflect.Value, bool)": 1,
                "*func() (runtime.Frame, bool)": 1,
                "*func() *reflect.uncommonType": 1,
                "*func([]uint8, []int) []uint8": 1,
                "*func([]uint8, int) [][]uint8": 1,
                "*func(ast.Node, *ast.Comment)": 1,
                "*func(int, bool) otto.Context": 1,
                "*func(int, int) reflect.Value": 1,
                "*func(int32) *base64.Encoding": 1,
                "*func(string) (string, error)": 1,
                "*func(string, []string) error": 1,
                "*func(string, func() []uint8)": 1,
                "*func(string, int) [][]string": 1,
                "*func(syscall.Sockaddr) error": 1,
                "*func(uint32, []uint8) uint32": 1,
                "*func(uint8) ([]uint8, error)": 1,
                "*map.bucket[reflect.Type]bool": 1,
                "*map.bucket[string]otto.Value": 1,
                "*map.iter[string]interface {}": 1,
                "*map[*reflect.structType]bool": 1,
                "*map[gob.typeId]*gob.wireType": 1,
                "*map[interface {}]*sync.entry": 1,
                "*map[reflect.Type]gob.gobType": 1,
                "*map[string]*engine.NativeVar": 1,
                "*map[string]otto._dclProperty": 1,
                "*otto._nodeSequenceExpression": 1,
                "*otto._nodeVariableExpression": 1,
                "SourceRoot": 1,
                "json:\"sourceRoot\"": 1,
                "cmpl_evaluate_nodeIfStatement": 1,
                "parseMultiplicativeExpression": 1,
                "*[2][8]runtime.pcvalueCacheEnt": 1,
                "*base64.newlineFilteringReader": 1,
                "*func() ([]uint8, bool, error)": 1,
                "*func() (int, time.Month, int)": 1,
                "*func(*regexp.Regexp, int) int": 1,
                "*func([]uint8, string) []uint8": 1,
                "*func(file.Idx) *file.Position": 1,
                "*func(int) reflect.StructField": 1,
                "*func(int, int, int) time.Time": 1,
                "*func(string) ([]uint8, error)": 1,
                "*func(string, *poll.FD, error)": 1,
                "*func(string, ...interface {})": 1,
                "*func(string, bool) otto.Value": 1,
                "*func(time.Duration) time.Time": 1,
                "*func(time.Time) time.Duration": 1,
                "*map.bucket[*gob.typeInfo]bool": 1,
                "*map.hdr[gob.typeId]*gob.decOp": 1,
                "*map.hdr[string]otto._property": 1,
                "*map[otto._lessThanResult]bool": 1,
                "*map[string]*engine.NativeFunc": 1,
                "*map[string]*engine.NativeType": 1,
                "*memorymodule._Ctype_ulonglong": 1,
                "*otto._nodeExpressionStatement": 1,
                "MDWSFYNZNNMXJNpuvpvgxibhbwpgud": 1,
                "MDWSFYNZNNMXJNuoswgsghhncghlat": 1,
                "MDWSFYNZNNMXJNzkxhdlxuppzvjcbb": 1,
                "PUHPXOLPIEVQQDdsnwletsdroskjad": 1,
                "PUHPXOLPIEVQQDpnxtuiqflgtdohgv": 1,
                "PUHPXOLPIEVQQDxngjsmvxvwogrsrs": 1,
                "TCZDEDUUYIATUKuownfydiwwwygmoc": 1,
                "XXIKHRPRUWKJZFcjjlakgmzskllqzj": 1,
                "XXIKHRPRUWKJZFokjuqhscbxexnken": 1,
                "XXIKHRPRUWKJZFszduzowdpvztpagw": 1,
                "cmpl_evaluate_nodeArrayLiteral": 1,
                "cmpl_evaluate_nodeForStatement": 1,
                "cmpl_evaluate_nodeTryStatement": 1,
                "gopkg.in/sourcemap.v1/base64vlq": 1,
                "*[]*[1048576]*runtime.heapArena": 1,
                "*func() (syscall.Handle, error)": 1,
                "*func(*json.scanner, uint8) int": 1,
                "*func(*otto._clone) otto._stash": 1,
                "*func(*time.Location) time.Time": 1,
                "*func([]uint8, []uint8) []uint8": 1,
                "*func([]uint8, int) [][][]uint8": 1,
                "*func(func(uintptr) bool) error": 1,
                "*func(int, int, [4]uint8) error": 1,
                "*func(io.Reader) (int64, error)": 1,
                "*func(io.Reader, []uint8) error": 1,
                "*func(io.Writer) (int64, error)": 1,
                "*func(string) (*url.URL, error)": 1,
                "*func(string) *syscall.LazyProc": 1,
                "*func(string, bool, otto.Value)": 1,
                "*func(string, otto.Value, bool)": 1,
                "*map.bucket[string]interface {}": 1,
                "*map.hdr[gob.typeId]gob.gobType": 1,
                "*map.iter[string]otto._property": 1,
                "*map[gob.typeId]**gob.decEngine": 1,
                "*map[reflect.Kind]gob.decHelper": 1,
                "*map[reflect.Kind]gob.encHelper": 1,
                "*map[reflect.Type]*gob.typeInfo": 1,
                "*map[string]*engine.NativeConst": 1,
                "*map[string]*engine.NativeField": 1,
                "*map[string]*unicode.RangeTable": 1,
                "*otto._builtinJSON_parseContext": 1,
                "*runtime.memoryBasicInformation": 1,
                "*struct { F uintptr": 6,
                "s string }": 3,
                "*syscall.Win32FileAttributeData": 1,
                "cmpl_evaluate_nodeDotExpression": 1,
                "cmpl_evaluate_nodeNewExpression": 1,
                "cmpl_evaluate_nodeObjectLiteral": 1,
                "cmpl_evaluate_nodeStatementList": 1,
                "cmpl_evaluate_nodeWithStatement": 1,
                "github.com/robertkrimen/otto/ast": 1,
                "github.com/robertkrimen/otto/dbg": 1,
                "*[]map[otto._lessThanResult]bool": 1,
                "*func() (syscall.RawConn, error)": 1,
                "*func(*[][]uint8) (int64, error)": 1,
                "*func([]int) reflect.StructField": 1,
                "*func(int64, int) (int64, error)": 1,
                "*func(string, string) otto.Value": 1,
                "*map.bucket[gob.typeId]gob.decOp": 1,
                "*map.bucket[int32]unsafe.Pointer": 1,
                "*map.bucket[unsafe.Pointer]int32": 1,
                "*map.hdr[ast.Node][]*ast.Comment": 1,
                "*map.hdr[reflect.Type]*gob.decOp": 1,
                "*map.hdr[reflect.Type]*gob.encOp": 1,
                "*map.hdr[reflect.Type]gob.typeId": 1,
                "*map.hdr[uint32][]*runtime._type": 1,
                "*map.iter[gob.typeId]gob.gobType": 1,
                "*map[*otto._object]*otto._object": 1,
                "*map[runtime._typePair]struct {}": 1,
                "*otto._nodeConditionalExpression": 1,
                "is []int8 }": 1,
                "*syscall.ByHandleFileInformation": 1,
                "*windows.FILE_ATTRIBUTE_TAG_INFO": 1,
                "cmpl_evaluate_nodeCallExpression": 1,
                "cmpl_evaluate_nodeForInStatement": 1,
                "cmpl_evaluate_nodeWhileStatement": 1,
                "!github.com/robertkrimen/otto/file": 1,
                "!internal/syscall/windows/registry": 1,
                "!*[4]map[otto._lessThanResult]bool": 1,
                "!*[64]*[1048576]*runtime.heapArena": 1,
                "!*[]map[gob.typeId]**gob.decEngine": 1,
                "!*func() (*os.ProcessState, error)": 1,
                "!*func() (syscall.Sockaddr, error)": 1,
                "!*func(*otto._object, string) bool": 1,
                "!*func(int) ([]os.FileInfo, error)": 1,
                "!*func(interface {}, interface {})": 1,
                "!*func(map[gob.typeId]bool) string": 1,
                "!*func(reflect.Type) reflect.Value": 1,
                "!*func(string) (otto.Value, error)": 1,
                "!*func(string, interface {}) error": 1,
                "!*map.bucket[gob.typeId]*gob.decOp": 1,
                "!*map.bucket[string]func() []uint8": 1,
                "!*map.bucket[string]otto._property": 1,
                "!*map.bucket[string]token._keyword": 1,
                "!*map.hdr[*reflect.structType]bool": 1,
                "!*map.hdr[interface {}]*sync.entry": 1,
                "!*map.hdr[string]*engine.NativeVar": 1,
                "!*map.hdr[string]otto._dclProperty": 1,
                "!*map.iter[ast.Node][]*ast.Comment": 1,
                "!*map[string]*engine.NativePackage": 1,
                "!*struct { F uintptr": 4,
                "is []int16 }": 1,
                "is []int32 }": 1,
                "is []int64 }": 1,
                "now *int64 }": 1,
                "!cmpl_evaluate_nodeSwitchStatement": 1,
                "!cmpl_evaluate_nodeUnaryExpression": 1,
                "!parseBitwiseExclusiveOrExpression": 1,
                "\"github.com/gen0cide/gscript/engine": 1,
                "\"github.com/gen0cide/gscript/logger": 1,
                "\"github.com/robertkrimen/otto/token": 1,
                "\"*[8]map[gob.typeId]**gob.decEngine": 1,
                "\"*func() (*registry.KeyInfo, error)": 1,
                "\"*func([]uint8, int64) (int, error)": 1,
                "\"*func(int, int, int) reflect.Value": 1,
                "\"*func(otto.Value, otto.Value) bool": 1,
                "\"*func(reflect.Value) reflect.Value": 1,
                "\"*func(time.Duration) time.Duration": 1,
                "\"*map.bucket[gob.typeId]gob.gobType": 1,
                "\"*map.hdr[string]*engine.NativeFunc": 1,
                "\"*map.hdr[string]*engine.NativeType": 1,
                "\"*map.iter[interface {}]*sync.entry": 1,
                "\"*map.iter[string]*engine.NativeVar": 1,
                "\"*map.iter[string]otto._dclProperty": 1,
                "\"*map[*otto._fnStash]*otto._fnStash": 1,
                "\"*memorymodule._Ctype_HMEMORYMODULE": 1,
                "\"*struct { F uintptr": 5,
                "hash uint32 }": 1,
                "l *[]string }": 1,
                "name string }": 1,
                "repl string }": 1,
                "ss []string }": 1,
                "\"*struct { b bool": 1,
                "x interface {} }": 1,
                "\"*struct { runtime.gList": 1,
                "n int32 }": 3,
                "\"*struct { sync.Mutex": 1,
                "m sync.Map }": 1,
                "\"cmpl_evaluate_nodeAssignExpression": 1,
                "\"cmpl_evaluate_nodeBinaryExpression": 1,
                "\"cmpl_evaluate_nodeDoWhileStatement": 1,
                "#github.com/robertkrimen/otto/parser": 1,
                "#*func() (*syscall.Tokenuser, error)": 1,
                "#*func(*otto._object) json.Marshaler": 1,
                "#*func(*syscall.Win32finddata) error": 1,
                "#*func(otto.FunctionCall) otto.Value": 1,
                "#*func(reflect.Value, reflect.Value)": 1,
                "#*func(string) (*otto.Object, error)": 1,
                "#*func(string, bool) (string, error)": 1,
                "#*map.bucket[*reflect.structType]int": 1,
                "#*map.bucket[ast.Node][]*ast.Comment": 1,
                "#*map.bucket[reflect.Type]*gob.decOp": 1,
                "#*map.bucket[reflect.Type]*gob.encOp": 1,
                "#*map.bucket[reflect.Type]gob.typeId": 1,
                "#*map.bucket[string]syntax.charGroup": 1,
                "#*map.bucket[uint32][]*runtime._type": 1,
                "#*map.hdr[reflect.Type]*gob.typeInfo": 1,
                "#*map.hdr[string]*engine.NativeConst": 1,
                "#*map.iter[string]*engine.NativeFunc": 1,
                "#*map.iter[string]*engine.NativeType": 1,
                "#*map[runtime.typeOff]*runtime._type": 1,
                "#*otto._builtinJSON_stringifyContext": 1,
                "#*struct { F uintptr": 3,
                "R *rand.Rand }": 1,
                "dst *uintptr }": 2,
                "repl []uint8 }": 1,
                "#*struct { idx file.Idx": 1,
                "count int }": 1,
                "#cmpl_evaluate_nodeBracketExpression": 1,
                "$*[]func(otto.Value, otto.Value) bool": 1,
                "$*func([]*engine.NativePackage) error": 1,
                "$*func([]uint8, []uint8) (int, error)": 1,
                "$*func(int, int) (cipher.AEAD, error)": 1,
                "$*func(string) (*syscall.Proc, error)": 1,
                "$*func(string) (reflect.Method, bool)": 1,
                "$*map.bucket[*reflect.structType]bool": 1,
                "$*map.bucket[gob.typeId]*gob.wireType": 1,
                "$*map.bucket[interface {}]*sync.entry": 1,
                "$*map.bucket[reflect.Type]gob.gobType": 1,
                "$*map.bucket[string]*engine.NativeVar": 1,
                "$*map.bucket[string]otto._dclProperty": 1,
                "$*map.hdr[runtime._typePair]struct {}": 1,
                "$*map.iter[reflect.Type]*gob.typeInfo": 1,
                "$*map.iter[string]*engine.NativeConst": 1,
                "$*map[*otto._dclStash]*otto._dclStash": 1,
                "$*struct { F uintptr": 4,
                "cutset string }": 1,
                "gp *runtime.g }": 3,
                "restart *bool }": 1,
                "self dbg.Dbgr }": 1,
                "$cmpl_evaluate_nodeSequenceExpression": 1,
                "$cmpl_evaluate_nodeVariableExpression": 1,
                "$parseLeftHandSideExpressionAllowCall": 1,
                "%github.com/robertkrimen/otto/registry": 1,
                "%*[8]func(otto.Value, otto.Value) bool": 1,
                "%*[]map[runtime.typeOff]*runtime._type": 1,
                "%*func(*sourcemap.Consumer) *file.File": 1,
                "%*func(string) (string, uint32, error)": 1,
                "%*func(string) (uint64, uint32, error)": 1,
                "%*func(unsafe.Pointer, unsafe.Pointer)": 1,
                "%*map.bucket[otto._lessThanResult]bool": 1,
                "%*map.bucket[string]*engine.NativeFunc": 1,
                "%*map.bucket[string]*engine.NativeType": 1,
                "%*struct { F uintptr": 4,
                "_g_ *runtime.g }": 4,
                "keys *[]string }": 1,
                "result uintptr }": 1,
                "t reflect.Type }": 2,
                "&*func() (unsafe.Pointer, int32, error)": 1,
                "&*func(*runtime.g, unsafe.Pointer) bool": 1,
                "&*func(*strconv.decimalSlice, int) bool": 1,
                "&*func([]reflect.Value) []reflect.Value": 1,
                "&*func(func(string) bool) reflect.Value": 1,
                "&*func(int, int, *syscall.IPMreq) error": 1,
                "&*func(int, int, *syscall.Linger) error": 1,
                "&*func(interface {}, interface {}) bool": 1,
                "&*func(string) ([]uint8, uint32, error)": 1,
                "&*func(unsafe.Pointer, uintptr) uintptr": 1,
                "&*map.bucket[gob.typeId]**gob.decEngine": 1,
                "&*map.bucket[reflect.Kind]gob.decHelper": 1,
                "&*map.bucket[reflect.Kind]gob.encHelper": 1,
                "&*map.bucket[reflect.Type]*gob.typeInfo": 1,
                "&*map.bucket[string]*engine.NativeConst": 1,
                "&*map.bucket[string]*engine.NativeField": 1,
                "&*map.bucket[string]*unicode.RangeTable": 1,
                "&*struct { F uintptr": 4,
                "R rand.Source64 }": 1,
                "result *[][]int }": 1,
                "self *otto.Otto }": 1,
                "startTime int64 }": 1,
                "&*struct { cycle uint32": 1,
                "flushed bool }": 1,
                "'github.com/gen0cide/gscript/logger/null": 1,
                "'*func() (token.Token, string, file.Idx)": 1,
                "'*func(*ast.Program) (otto.Value, error)": 1,
                "'*func(*otto._object, string) otto.Value": 1,
                "'*func(*otto._object, string, bool) bool": 1,
                "'*func(interface {}) (otto.Value, error)": 1,
                "'*func(string) ([]string, uint32, error)": 1,
                "'*map.bucket[*otto._object]*otto._object": 1,
                "'*map.bucket[runtime._typePair]struct {}": 1,
                "'*struct { F uintptr": 6,
                "R *engine.Engine }": 1,
                "c *runtime.hchan }": 1,
                "e *runtime.eface }": 1,
                "h *runtime.mheap }": 1,
                "preemptible bool }": 1,
                "x *reflect.rtype }": 1,
                "'cmpl_evaluate_nodeConditionalExpression": 1,
                "(*func(int, int, *syscall.IPv6Mreq) error": 1,
                "(*func(int32, int32, *uint8, int32) error": 1,
                "(*func(interface {}) (interface {}, bool)": 1,
                "(*func(otto._defaultValueHint) otto.Value": 1,
                "(*map.bucket[string]*engine.NativePackage": 1,
                "(*struct { F uintptr": 6,
                "R *parser._parser }": 1,
                "R json.mapEncoder }": 1,
                "R json.ptrEncoder }": 1,
                "c *runtime.mcache }": 1,
                "elemOp *gob.decOp }": 2,
                "s **runtime.mspan }": 3,
                ")*func(dbg._frmt, string, ...interface {})": 1,
                ")*func(string) (reflect.StructField, bool)": 1,
                ")*func(string, func(string) string) string": 1,
                ")*map.bucket[*otto._fnStash]*otto._fnStash": 1,
                ")*struct { F uintptr": 3,
                "info *gob.typeInfo }": 1,
                "keys *[]otto.Value }": 1,
                "self *otto._object }": 2,
                "**func() (dbg.DbgFunction, dbg.DbgFunction)": 1,
                "**func(string, *engine.NativePackage) error": 1,
                "**func(unsafe.Pointer, unsafe.Pointer) bool": 1,
                "**map.bucket[runtime.typeOff]*runtime._type": 1,
                "**map[*otto._objectStash]*otto._objectStash": 1,
                "**map[int]func(otto.Value, otto.Value) bool": 1,
                "**struct { F uintptr": 5,
                "R json.arrayEncoder }": 1,
                "R json.floatEncoder }": 1,
                "R json.sliceEncoder }": 1,
                "ps []unsafe.Pointer }": 1,
                "rw *runtime.rwmutex }": 1,
                "+*func() (*syscall.Tokenprimarygroup, error)": 1,
                "+*func(...uintptr) (uintptr, uintptr, error)": 1,
                "+*func(string, []uint8) (int, uint32, error)": 1,
                "+*map.bucket[*otto._dclStash]*otto._dclStash": 1,
                "+*struct { F uintptr": 5,
                "R json.structEncoder }": 1,
                "a []string": 1,
                "x string }": 1,
                "as *strings.asciiSet }": 1,
                "fields *[]json.field }": 1,
                "object *otto._object }": 3,
                ",*func(*otto._object, string) *otto._property": 1,
                ",*func(func(interface {}, interface {}) bool)": 1,
                "-*func(*otto._object, bool, func(string) bool)": 1,
                "-*func(*runtime.stkframe, unsafe.Pointer) bool": 1,
                "-*func(*syscall.ByHandleFileInformation) error": 1,
                "-*func([]uint8) (int, syscall.Sockaddr, error)": 1,
                "-*func([]uint8, func([]uint8) []uint8) []uint8": 1,
                "-*func([]uint8, string, string, []int) []uint8": 1,
                "-*func([]uint8, syscall.Sockaddr) (int, error)": 1,
                "-*func(string) (string, string, uint32, error)": 1,
                "-*func(string, bool, otto._at) otto._reference": 1,
                "-*struct { F uintptr": 5,
                "R *main.MDWSFYNZNNMXJN }": 1,
                "R *main.PUHPXOLPIEVQQD }": 1,
                "R *main.TCZDEDUUYIATUK }": 1,
                "R *main.XXIKHRPRUWKJZF }": 1,
                "R json.condAddrEncoder }": 1,
                "-*struct { Struct reflect.Type": 1,
                "Field string }": 3,
                "-cmpl_evaluate_nodeBinaryExpression_comparison": 1,
                ".*func(*otto._object, string, otto.Value, bool)": 1,
                ".*func(ast.Node, ast.Node, ast.CommentPosition)": 1,
                ".*struct { sync.Once": 1,
                "u *user.User": 1,
                "err error }": 3,
                "/*func([]uint8, []uint8, []uint8, []int) []uint8": 1,
                "/*struct { F uintptr": 2,
                "R *runtime.itabTableType }": 1,
                "pc *uintptr": 1,
                "ret *string }": 1,
                "/*struct { runtime.timersBucket": 1,
                "pad [64]uint8 }": 3,
                "0*func(*sourcemap.mappings) (sourcemap.fn, error)": 1,
                "0*func(int, int) (string, string, int, int, bool)": 1,
                "0*func(reflect.Value, reflect.Type) reflect.Value": 1,
                "0*map[reflect.Type]map[gob.typeId]**gob.decEngine": 1,
                "0*struct { F uintptr": 4,
                "argumentList []otto.Value }": 1,
                "enginePtr **gob.decEngine }": 2,
                "pp *runtime.p": 1,
                "sc uintptr }": 1,
                "src uintptr": 1,
                "0*struct { lock runtime.mutex": 1,
                "q runtime.gQueue }": 2,
                "0*struct { root runtime.semaRoot": 1,
                "pad [40]uint8 }": 3,
                "1*[]struct { runtime.timersBucket": 1,
                "1*func([]uint8, []uint8, []uint8, []uint8) []uint8": 1,
                "1*func(string, interface {}) (*otto.Script, error)": 1,
                "1*func(string, string, ...interface {}) otto.Value": 1,
                "1*map.bucket[*otto._objectStash]*otto._objectStash": 1,
                "1*map.bucket[int]func(otto.Value, otto.Value) bool": 1,
                "1*struct { F uintptr": 2,
                "result *[]string": 1,
                "sp uintptr": 4,
                "2*[]struct { root runtime.semaRoot": 1,
                "2*func(string, ...interface {}) (otto.Value, error)": 1,
                "2*struct { F uintptr": 1,
                "sv []json.reflectWithString }": 1,
                "2*struct { lock runtime.mutex": 2,
                "list runtime.gList }": 2,
                "2*struct { runtime.mutex": 1,
                "runtime.persistentAlloc }": 1,
                "3*[64]struct { runtime.timersBucket": 1,
                "3*struct { F uintptr": 4,
                "gp *runtime.g": 8,
                "traceskip int }": 1,
                "oldval uint32": 2,
                "newval uint32 }": 1,
                "result *[][]string": 1,
                "result *[][]uint8": 1,
                "b []uint8 }": 2,
                "3*struct { mcentral runtime.mcentral": 1,
                "pad [8]uint8 }": 3,
                "3*struct { once sync.Once": 1,
                "addr uintptr": 1,
                "4*func(ast.Node, []*ast.Comment, ast.CommentPosition)": 1,
                "4*func(func(string) bool) (reflect.StructField, bool)": 1,
                "4*struct { F uintptr": 3,
                "_p_ *runtime.p }": 1,
                "scanWork int64 }": 1,
                "siz int32": 2,
                "d **runtime._defer }": 1,
                "5*[251]struct { root runtime.semaRoot": 1,
                "5*[]struct { mcentral runtime.mcentral": 1,
                "5*func(*json.encodeState, reflect.Value, json.encOpts)": 1,
                "5*struct { F uintptr": 3,
                "rawsa []syscall.RawSockaddrAny }": 1,
                "result *[][][]uint8": 1,
                "value otto.Value": 5,
                "result *bool }": 2,
                "5*struct { Size uint32": 1,
                "Mallocs uint64": 7,
                "Frees uint64 }": 7,
                "5*struct { size uint32": 1,
                "nmalloc uint64": 3,
                "nfree uint64 }": 3,
                "6*func(interface {}, interface {}) (interface {}, bool)": 1,
                "6*func(otto.Value, ...interface {}) (otto.Value, error)": 1,
                "6*struct { F uintptr": 2,
                "e *engine.Engine": 1,
                "prefix string }": 1,
                "result *int64 }": 1,
                "7*[]struct { Size uint32": 1,
                "7*[]struct { size uint32": 1,
                "7*func(*otto._object, string, otto._property, bool) bool": 1,
                "7*func(uint64, int, bool, bool, *strconv.floatInfo) bool": 1,
                "7*map.bucket[reflect.Type]map[gob.typeId]**gob.decEngine": 1,
                "7*struct { F uintptr": 2,
                "stacksize int32": 1,
                "newg *runtime.g }": 1,
                "result *string }": 1,
                "7*struct { user bool": 1,
                "runnable runtime.gQueue": 1,
                "8*[134]struct { mcentral runtime.mcentral": 1,
                "8*func(*runtime.hchan, unsafe.Pointer, bool) (bool, bool)": 1,
                "8*struct { F uintptr": 1,
                "result *float64 }": 1,
                "9*[61]struct { Size uint32": 1,
                "9*[67]struct { size uint32": 1,
                "9*func(*runtime.hchan, unsafe.Pointer, bool, uintptr) bool": 1,
                "9*struct { F uintptr": 2,
                "gcw *runtime.gcWork }": 2,
                "object *otto._object": 3,
                ":*func([]uint8, []uint8, []uint8, []uint8) ([]uint8, error)": 1,
                ":*struct { F uintptr": 2,
                "keyOp *gob.decOp": 2,
                "p unsafe.Pointer": 1,
                "b *runtime.bucket }": 1,
                ":*struct { lock runtime.mutex": 1,
                "free [35]runtime.mSpanList }": 1,
                "*func([]uint8, []uint8, syscall.Sockaddr) (int, int, error)": 1,
                "frame *runtime.stkframe": 1,
                "bad uintptr }": 1,
                "repl func(string) string": 1,
                "src string }": 2,
                "*struct { lpFileName *uint16": 1,
                "hFile uintptr": 1,
                "flags uint32 }": 1,
                "<*struct { F uintptr": 4,
                "elemOp *gob.decOp": 4,
                "wire *gob.wireType }": 1,
                "pc uintptr": 4,
                "sp uintptr }": 1,
                "ut *gob.userTypeInfo": 1,
                "rt reflect.Type }": 1,
                "=*func(syscall.Handle, *uint16, uint32, *uint32, *uint8) error": 1,
                ">*struct { F uintptr": 2,
                "repl func([]uint8) []uint8": 1,
                "src []uint8 }": 2,
                "wg *sync.WaitGroup": 1,
                "f *json.encoderFunc }": 1,
                "?*func(*otto._object, *otto._object, *otto._clone) *otto._object": 1,
                "?*func(string, interface {}, interface {}) (*otto.Script, error)": 1,
                "@*func(*poll.operation, func(*poll.operation) error) (int, error)": 1,
                "@*func([]uint8, []uint8) (int, int, int, syscall.Sockaddr, error)": 1,
                "@*func(string, interface {}, ...interface {}) (otto.Value, error)": 1,
                "@*struct { F uintptr": 1,
                "ok *bool": 1,
                "oldp *runtime.p": 1,
                "@*struct { name string": 1,
                "exists bool": 1,
                "defined bool": 1,
                "value string }": 1,
                "A*struct { F uintptr": 2,
                "re *regexp.Regexp": 2,
                "repl string": 1,
                "runtime *otto._runtime": 1,
                "B*struct { F uintptr": 4,
                "dec *gob.Decoder": 1,
                "newval uint32": 1,
                "rcvrType reflect.Type": 1,
                "ut *gob.userTypeInfo }": 1,
                "target []uint8": 1,
                "match []int": 1,
                "matchCount int }": 1,
                "D*struct { F uintptr": 1,
                "self otto.Otto": 3,
                "name string": 4,
                "value otto.Value }": 2,
                "E*struct { F uintptr": 3,
                "c *sourcemap.Consumer": 1,
                "genLine int": 1,
                "genCol int }": 1,
                "h *runtime.mheap": 3,
                "s *runtime.mspan": 2,
                "large bool }": 1,
                "value *otto.Value }": 3,
                "F*struct { F uintptr": 1,
                "self otto.Object": 2,
                "G*func(*strconv.decimalSlice, *strconv.extFloat, *strconv.extFloat) bool": 1,
                "G*struct { F uintptr": 1,
                "H*struct { F uintptr": 3,
                "propertyNames *[]otto.Value }": 1,
                "self *otto._runtime": 9,
                "node *otto._nodeTryStatement }": 1,
                "v otto.Value": 2,
                "t reflect.Type": 5,
                "self *otto._runtime }": 1,
                "I*struct { F uintptr": 1,
                "state *runtime.stackScanState": 1,
                "I*struct { once sync.Once": 1,
                "sendAddr uintptr": 1,
                "recvAddr uintptr": 1,
                "J*struct { F uintptr": 1,
                "ovfl error": 2,
                "helper gob.decHelper }": 2,
                "K*struct { F uintptr": 1,
                "result map[string]interface {} }": 1,
                "L*struct { F uintptr": 1,
                "sp1 uintptr": 1,
                "sp2 uintptr": 1,
                "sp3 uintptr": 1,
                "M*struct { F uintptr": 1,
                "elemOp *gob.encOp": 2,
                "elemIndir int": 1,
                "helper gob.encHelper }": 1,
                "M*struct { enabled bool": 1,
                "pad [3]uint8": 1,
                "needed bool": 1,
                "cgo bool": 1,
                "alignme uint64 }": 1,
                "N*struct { lock runtime.mutex": 1,
                "free runtime.mSpanList": 2,
                "busy runtime.mSpanList }": 2,
                "O*struct { F uintptr": 1,
                "ctx otto._builtinJSON_parseContext": 1,
                "Q*func(uint64, int, bool, *strconv.floatInfo) (strconv.extFloat, strconv.extFloat)": 1,
                "Q*struct { F uintptr": 1,
                "typ reflect.Type": 2,
                "value reflect.Value }": 1,
                "R*struct { F uintptr": 2,
                "value interface {}": 1,
                "result *otto.Value }": 4,
                "srepl *string": 1,
                "repl []uint8": 1,
                "S*struct { F uintptr": 1,
                "size *uintptr": 1,
                "needzero bool": 1,
                "noscan bool": 1,
                "S*struct { lock runtime.mutex": 1,
                "stack runtime.gList": 1,
                "noStack runtime.gList": 1,
                "V*struct { F uintptr": 1,
                "ovfl error }": 1,
                "W*struct { F uintptr": 1,
                "keyOp *gob.encOp": 1,
                "keyIndir int": 1,
                "elemIndir int }": 1,
                "X*struct { F uintptr": 1,
                "typ *runtime._type": 1,
                "src unsafe.Pointer": 1,
                "off uintptr": 1,
                "size uintptr }": 1,
                "Z*func(uint32, *uint8, uint32, *uint8, uint32, *uint32, *syscall.Overlapped, uintptr) error": 1,
                "Z*struct { F uintptr": 2,
                "size uintptr": 2,
                "align uintptr": 1,
                "sysStat *uint64": 1,
                "p **runtime.notInHeap }": 1,
                "[*func(syscall.Handle, syscall.Sockaddr, *uint8, uint32, *uint32, *syscall.Overlapped) error": 1,
                "[*struct { F uintptr": 2,
                "sv otto.Value": 1,
                "r *reflect.Value }": 1,
                "vv *reflect.Value }": 1,
                "\\*struct { F uintptr": 1,
                "m reflect.Value": 1,
                "o *otto._object": 1,
                "]*struct { F uintptr": 1,
                "call otto.FunctionCall": 1,
                "properties *otto._object": 1,
                "_*struct { F uintptr": 1,
                "skip int": 1,
                "pcbuf []uintptr": 1,
                "n *int }": 1,
                "a*struct { F uintptr": 1,
                "msgs *runtime._panic": 1,
                "docrash *bool }": 1,
                "c*struct { F uintptr": 1,
                "s *reflect.sliceHeader": 1,
                "typ *reflect.rtype": 2,
                "tmp unsafe.Pointer }": 1,
                "d*struct { F uintptr": 1,
                "a *otto.Value": 1,
                "v *reflect.Value }": 1,
                "e*struct { F uintptr": 1,
                "needsScavenge *bool": 1,
                "prescavenged *uintptr }": 1,
                "e*struct { lock runtime.mutex": 1,
                "next int32": 1,
                "m map[int32]unsafe.Pointer": 1,
                "minv map[unsafe.Pointer]int32 }": 1,
                "f*struct { F uintptr": 1,
                "fn **runtime.funcval": 1,
                "argp unsafe.Pointer": 1,
                "pc uintptr }": 1,
                "g*func(func() (syscall.Handle, error)) (syscall.Handle, []syscall.RawSockaddrAny, uint32, string, error)": 1,
                "h*struct { ityp *reflect.rtype": 1,
                "hash uint32": 1,
                "_ [4]uint8": 3,
                "fun [100000]unsafe.Pointer }": 1,
                "i*func(syscall.Handle, syscall.Handle, *uint8, uint32, uint32, uint32, *uint32, *syscall.Overlapped) error": 1,
                "j*struct { F uintptr": 2,
                "cmpl_program *otto._nodeProgram": 1,
                "eval bool": 1,
                "value *otto.Value": 1,
                "this otto.Value": 2,
                "argumentList []interface {}": 3,
                "q*struct { F uintptr": 1,
                "e *runtime.eface": 1,
                "f *runtime.eface": 1,
                "nret uintptr": 1,
                "fint *runtime._type": 1,
                "ot *runtime.ptrtype }": 1,
                "q*struct { lock runtime.mutex": 1,
                "newm runtime.muintptr": 1,
                "waiting bool": 1,
                "wake runtime.note": 1,
                "haveTemplateThread uint32 }": 1,
                "r*struct { F uintptr": 1,
                "npage uintptr": 1,
                "spanclass runtime.spanClass": 1,
                "large bool": 1,
                "t*struct { F uintptr": 1,
                "ctx *otto._builtinJSON_stringifyContext": 1,
                "holder *otto._object": 1,
                "object map[string]interface {} }": 1,
                "u*struct { F uintptr": 1,
                "node *otto._nodeCallExpression": 1,
                "|*struct { F uintptr": 1,
                "rt *otto._runtime": 1,
                "*struct { note runtime.note": 1,
                "mask [3]uint32": 1,
                "wanted [3]uint32": 1,
                "ignored [3]uint32": 1,
                "recv [3]uint32": 1,
                "state uint32": 1,
                "delivering uint32": 1,
                "inuse bool }": 1,
                "*struct { lock runtime.mutex": 1,
                "free *runtime.gcBitsArena": 1,
                "next *runtime.gcBitsArena": 1,
                "current *runtime.gcBitsArena": 1,
                "previous *runtime.gcBitsArena }": 1,
                "into otto._nodeExpression": 1,
                "body []otto._nodeStatement": 1,
                "labels []string": 1,
                "enumerateValue *otto.Value": 1,
                "object **otto._object }": 1,
                "p **regexp.onePassProg": 1,
                "visitQueue *regexp.queueOnePass": 1,
                "check *func(uint32, []bool) bool": 1,
                "onePassRunes [][]int32": 1,
                "instQueue *regexp.queueOnePass }": 1,
                "6*struct { allocfreetrace int32": 1,
                "cgocheck int32": 1,
                "clobberfree int32": 1,
                "efence int32": 1,
                "gccheckmark int32": 1,
                "gcpacertrace int32": 1,
                "gcshrinkstackoff int32": 1,
                "gcstoptheworld int32": 1,
                "gctrace int32": 1,
                "invalidptr int32": 1,
                "madvdontneed int32": 1,
                "sbrk int32": 1,
                "scavenge int32": 1,
                "scheddetail int32": 1,
                "schedtrace int32": 1,
                "tracebackancestors int32 }": 1,
                "lockOwner *runtime.g": 1,
                "enabled bool": 1,
                "shutdown bool": 1,
                "headerWritten bool": 1,
                "footerWritten bool": 1,
                "shutdownSema uint32": 1,
                "seqStart uint64": 1,
                "ticksStart int64": 1,
                "ticksEnd int64": 1,
                "timeStart int64": 1,
                "timeEnd int64": 1,
                "seqGC uint64": 1,
                "reading runtime.traceBufPtr": 1,
                "empty runtime.traceBufPtr": 1,
                "fullHead runtime.traceBufPtr": 1,
                "fullTail runtime.traceBufPtr": 1,
                "reader runtime.guintptr": 1,
                "stackTab runtime.traceStackTable": 1,
                "stringsLock runtime.mutex": 1,
                "strings map[string]uint64": 1,
                "stringSeq uint64": 1,
                "markWorkerLabels [3]uint64": 1,
                "bufLock runtime.mutex": 1,
                "buf runtime.traceBufPtr }": 1,
                "d*struct { full runtime.lfstack": 1,
                "empty runtime.lfstack": 1,
                "pad0 cpu.CacheLinePad": 1,
                "wbufSpans struct { lock runtime.mutex": 1,
                "_ uint32": 3,
                "bytesMarked uint64": 1,
                "markrootNext uint32": 1,
                "markrootJobs uint32": 1,
                "nproc uint32": 1,
                "tstart int64": 1,
                "nwait uint32": 1,
                "ndone uint32": 1,
                "nFlushCacheRoots int": 1,
                "nDataRoots int": 1,
                "nBSSRoots int": 1,
                "nSpanRoots int": 1,
                "nStackRoots int": 1,
                "startSema uint32": 1,
                "markDoneSema uint32": 1,
                "bgMarkReady runtime.note": 1,
                "bgMarkDone uint32": 1,
                "mode runtime.gcMode": 1,
                "userForced bool": 1,
                "totaltime int64": 1,
                "initialHeapLive uint64": 1,
                "assistQueue struct { lock runtime.mutex": 1,
                "sweepWaiters struct { lock runtime.mutex": 1,
                "cycles uint32": 1,
                "stwprocs int32": 1,
                "maxprocs int32": 1,
                "tSweepTerm int64": 1,
                "tMark int64": 1,
                "tMarkTerm int64": 1,
                "tEnd int64": 1,
                "pauseNS int64": 1,
                "pauseStart int64": 1,
                "heap0 uint64": 1,
                "heap1 uint64": 1,
                "heap2 uint64": 1,
                "heapGoal uint64 }": 1,
                "!#$%&'()*+,-./015:": 1,
                "<=>?@CEFGLMNPSZ[\"\\": 1,
                "]^`himst{|}~ + @ P [!=%=%s%v&&&": 1,
                "&=&^()) )()": 1,
                "*=+++=, ---=->///=/i00010s25: :]<<<===> >=>>CcCfCoCsDoIfLlLmLoLtLuMcMeMnNdNlNoOSPIPcPdPePfPiPoPsScSkSmSoYiZlZpZs[]\":\"": 1,
                "\\*\\D\\E\\S\\W\\d\\s\\w": 1,
                "^=dogci)ifinmsnsoss us{}|=||}": 1,
                "G  M  P %v )": 1,
                "*( -  <  >  m=!==%25%2B%: &^='\"'): +00+03+04+05+06+07+08+09+10+11+12+13+14-01-02-03-04-05-06-08-09-11-12// ///125625: `<<====>>=>>>???ADTASTAprAugBSTCATCDTCETCSTDecDltEATEDTEETEOFESTFebForFriGMTHDTHSTHanIDTISTJSTJanJulJunKSTKeyLN2LaoMDTMSKMSTMarMayMonMroNDTNSTNULNaNNkoNovOctOp(PC=PDTPKTPSTSatSepStdSunThuTueUTCVaiWATWETWed\\\\?": 1,
                "absadxaesavxcosdaydirendexpfmaforgc getgp infintip4letlogmapmaxminnannewnilnowobjos2pc=poppowptrsetsintantcptryu00var": 1,
                "!=  ->  <== as  at  fp= in  is  lr: of  on  pc= sp: sp=$1$2'\\'') = ) m=) {": 1,
                "+Inf+inf, n -Inf-inf20063125: p=>>>=ACDTACSTAEDTAESTAKDTAKSTARCHAWSTAhomArgsCESTCallChamDashDateEESTFileFuncG.%sGOGCGOOSJSONJulyJuneKillLN10LisuMathMiaoModiNULLNZDTNZSTNewaSASTStatThaiUserWESTWith[]%s\\u00": 1,
                "m=] n=acosasinatanavx2basebindbmi1bmi2boolcallcap cas1cas2cas3cas4cas5cas6caseceilchandeaddropelseenumermsevalexecfailfilefunchouridleinfoint8joinjsonkeyskindnamenew nonenullopenpushquitreadsbrkscvgsealseeksomesortsqrtsse2sse3synctcp6testthistimetrimtruetypeudp6uintuservoidwarnwith ...": 1,
                "H_T= H_a= H_g= MB,  W_a= and  cnt= for  h_a= h_g= h_t= max= not  ptr  siz= tab= top= u_a= u_g=%25$1%d:%d%s:%d+0000+0330+0430+0530+0545+0630+0845+1030+1245+1345, ..., fp:-09301562578125<nil>AdlamAprilArrayBamumBatakBuhidCall ColonErrorFinalFrameGreekGroupKhmerLOG2ELatinLimbuLocalMarchNushuOghamOriyaOsageRunicSQRT2STermStdinTakriTamilWhile\\u202amd64applyargp=arrayatan2breakbytescatchchdirchmodchownclasscloseconstdebugerroreveryfalsefaultfloatfloorgcinggob: indexinputint16int32int64isNaNmatchmonthntohspanicparseroundrune shiftsleepslicesplitsse41sse42ssse3stacksuperthrowtraceuint8usageuser2valuewhilewrite (MB)": 1,
                "Value addr= base  code= ctxt: curg= goid  jobs= list= m->p= next= p->m= prev= span= varp=%s: %s(...)": 1,
                "*_+-./, not /%s/%s390625<-chanArabicAugustBrahmiCarianChakmaCommonCopticCreateDeployFormatFramesFridayGOARCHGOROOTGetACPGothicHangulHatranHebrewHyphenKaithiKhojkiLOG10ELepchaLycianLydianMondayNUMBERNumCPUNumberO_EXCLO_RDWRO_SYNCObjectRegExpRejangSCHED STRINGSignalStderrStdoutStringSundaySyriacTai_LeTangutTeluguThaanaUTC+12UTC+13UTC-02UTC-08UTC-09UTC-11[%d]%s[]byte\\ufffd^\\s*%/assertbound calleecallerchan<-charAtconcatcreatedeleteefenceempty escapeexportfilterfreezegetDayglobalhangupimportkilledlengthlistenminutenumberobjectpopcntpublicrandomreadatreducereturnrune1 searchsecondselectsocketsourcesplicestaticstringstructsubstrsweep switchtoJSONtoken(typeofuint16uint32uint64    at  (scan  (scan) MB in  Value> dying= locks= m->g0= nmsys= s=nil": 1,
                "using %s %s": 1,
                "%s (%s)%s = {}, goid=, sys: 19531252006-019765625AvestanBOOLEANBengaliBooleanBrailleCOMMENTChanDirConvertCopySidCurrentCypriotDeseretDevNullElbasanExecuteGODEBUGGoArrayGranthaHanunooILLEGALIO waitInstAltInstNopJanuaryKEYWORDKannadaLeadingMUI_DltMUI_StdMandaicMarchenModeDirMultaniMyanmarO_TRUNCOctoberOsmanyaProcessRadicalReaddirSQRT1_2SharadaShavianSiddhamSinhalaSoyomboSwapperTagalogTibetanTirhutaTuesdayUNKNOWNWSARecvWSASend": 1,
                "value=_ENGINEabortedalt -> any -> booleanclosurecompilecomplexconnectconsoledefaultextendsfinallyfloat32float64forEachfuntimegctracegetDategetTimegetYearindexOfinvalidisArraykey of messagenop -> number os/userpackagepanic: privatereplacereverserunningruntimesetDatesetTimesetYearsignal syscalltimeEndtoFixeduintptrunknownunshiftvalueOfwaitingwindowswriteat etypes  goal": 1,
                "= is not  mcount= minutes nalloc= newval= nfreed= packed= pointer stack=[ status %!Month(%s:%d:%d(?%s:%s), idle: 15:04:0548828125AcceptExArmenianBalineseBopomofoBugineseCancelIoCherokeeCompilerCyrillicDecemberDuployanErrExistEthiopicExtenderFebruaryFullPathFunctionGeorgianGoStringGujaratiGurmukhiHiraganaHostnameInfinityInstFailInstRuneJavaneseKatakanaKayah_LiLinear_ALinear_BMahajaniMemStatsModePermModeTypeNovemberO_APPENDO_CREATEO_RDONLYO_WRONLYOl_ChikiParseIntPhags_PaProcAttrReadFileSEEK_CURSEEK_ENDSEEK_SETSaturdayTagbanwaTai_ThamTai_VietThursdayTifinaghTrailingURIErrorUgariticWSAIoctl[:word:][]string[signal": 1,
                "stack=[acceptexargumentbad instcgocheckcontinuecs      debuggerfs      functiongetHoursgetMonthgo1.12.5gs      infinityinternalisFiniteisFrozenisSealedno anodeno erroropPseudoparseIntr10     r11     r12     r13     r14     r15     r8      r9      rax     rbp     rbx     rcx     rdi     rflags  rip     rsi     rsp     runnableruntime.scavengesetHourssetMonthshutdownstrconv.toStringtrimLefttruncateunescapeunknown(writablewsaioctl (forced) -> node= as type  blocked= defersc= in use)": 1,
                "lockedg= lockedm= m->curg= ms cpu,  not in [ of type  runtime= s.limit= s.state= threads= u_a/u_g= wbuf1.n= wbuf2.n=(unknown)+infinity, newval=, oldval=-Infinity-infinity244140625: inuse: : status=<unknown>ArgumentsBassa_VahBhaiksukiCallSliceCuneiformDiacriticErrClosedEvalErrorFindCloseG.%s = {}Hex_DigitInheritedInstMatchInstRune1InterfaceInterruptKhudawadiLinkErrorLocalFreeMAX_VALUEMIN_VALUEMalayalamMongolianMoveFileWNabataeanPalmyreneParseBoolParseUintPathErrorSamaritanSeptemberSundaneseTypeErrorWSASendToWednesdayWriteFile[:^word:][:alnum:][:alpha:][:ascii:][:blank:][:cntrl:][:digit:][:graph:][:lower:][:print:][:punct:][:space:][:upper:]__PRELOADargumentsatomicor8bad indirbus errorchan sendcomplex64copystackctxt != 0decodeURIempty urlencodeURIfuncargs(getUTCDayinterfaceinterruptlastIndexloader.gsmSpanDeadmSpanFreemap[%s]%smultilineno errorsomitemptypanicwaitpclmulqdqprotectedprototypepsapi.dllrecover: reflect: rwxrwxrwxstringifysubstringtrimRightundefinedunhandled} stack=[ MB goal,  actual": 1,
                "= flushGen  gfreecnt= pages at  runqsize= runqueue= s.base()= spinning= stopwait= sweepgen  sweepgen= targetpc= throwing= until pc=%!Weekday((function(/dev/stdin12207031252006-01-022006T15:046103515625: parsing CancelIoExCreateFileCreatePipeDeprecatedDevanagariDnsQuery_WErrInvalidException GC forced": 1,
                "GOMAXPROCSGetIfEntryGetVersionGlagoliticIDENTIFIERKharoshthiLockFileExManichaeanModeAppendModeDeviceModeSetgidModeSetuidModeSocketModeStickyOld_ItalicOld_PermicOld_TurkicOther_MathParseFloatPhoenicianRangeErrorSaurashtraWSACleanupWSASocketWWSAStartup[:^alnum:][:^alpha:][:^ascii:][:^blank:][:^cntrl:][:^digit:][:^graph:][:^lower:][:^print:][:^punct:][:^space:][:^upper:][:xdigit:]^(?:0[xX])_reserved1atomicand8casgstatuscharCodeAtcomplex128dnsapi.dllenumerableexitThreadgetMinutesgetSecondsgetUTCDategetsockoptgoroutine ignoreCaseimplementsinstanceofinvalidptrmSpanInUseowner diedparseFloatpreload.gsrune <nil>runtime: gschedtracesemacquiresetMinutessetSecondssetUTCDatesetsockoptterminatedtracefree(tracegc()": 1,
                "unknown pcupload.binws2_32.dll  of size   (targetpc= gcwaiting= gp.status= heap_live= idleprocs= in status  m->mcache= mallocing= ms clock,  nBSSRoots= p->mcache= p->status= s.nelems=  schedtick= span.list=([^~!*()'])(anonymous)*NativeType/dev/stderr/dev/stdout30517578125: frame.sp=<anonymous>": 1,
                "<invalid opCloseHandleComment: %vCreateFileWDeleteFileWErrNotExistExitProcessFreeLibraryGOTRACEBACKGetFileTypeIdeographicInstCaptureInstRuneAnyModeSymlinkMoveFileExWNetShareAddNetShareDelNew_Tai_LueNot DefinedOld_PersianOpenProcessPau_Cin_HauRegCloseKeySetFileTimeSignWritingSoft_DottedStackRecordSyntaxErrorTerminateVMVirtualLockWSARecvFromWarang_CitiWhite_Space[:^xdigit:][object %s]alarm clockbad addressbad messagebad timedivbroken pipecgocall nilclobberfreeclosesocketconstructorcreated by crypt32.dllelement of environmentfile existsfinal tokenfloat32nan2float64nan2float64nan3gccheckmarkgetFullYeargetUTCHoursgetUTCMonthgetpeernamegetsocknamei/o timeoutlastIndexOflost mcachemSpanManualmethodargs(mswsock.dllreduceRightreflect.Setruntime: P runtime: p scheddetailsecur32.dllsetFullYearsetUTCHourssetUTCMonthshell32.dllshort writetoFloat(%T)toGMTStringtoISOStringtoLowerCasetoPrecisiontoUTCStringtoUpperCasetracealloc(unreachableuserenv.dllvalue for \" = struct {  [recovered] allocCount  found at *( gcscandone  m->gsignal= minTrigger= nDataRoots= nSpanRoots= pages/byte": 1,
                "preemptoff= s.elemsize= s.sweepgen= span.limit= span.state= sysmonwait= t.spanKey=  wbuf1=<nil> wbuf2=<nil>%s error: %s) p->status=, consumed: , released: -byte limit": 1,
                "15258789062515:04:05 MST2014-04-13/1762939453125Bidi_ControlFindNextFileGetAddrInfoWGetConsoleCPGetLastErrorGetLengthSidGetStdHandleGetTempPathWInstAltMatchInvalid DateJoin_ControlLoadLibraryWMeetei_MayekPahawh_HmongProcessStateReadConsoleWRevertToSelfSetEndOfFileSora_SompengSyloti_NagriSyscallErrorTransmitFileUnlockFileEx__ENTRYPOINTabi mismatchadvapi32.dllaltmatch -> anynotnl -> bad flushGenbad g statusbad g0 stackbad recoverycan't happencas64 failedchan receiveconfigurabledumping heapend tracegc": 1,
                "entersyscallexit status fromCharCodegcpacertracehost is downillegal seekinvalid slotiphlpapi.dllisExtensiblekernel32.dlllfstack.pushmadvdontneedmemorymodulenetapi32.dllreflect.Copyreleasep: m=runtime: gp=short buffertoDateStringtoTimeStringunexpected )unknown typewirep: p->m= != sweepgen  MB released": 1,
                "MB) workers= called from  flushedWork  gcscanvalid  heap_marked= idlethreads= in host name is nil, not  nStackRoots= out of range s.spanclass= span.base()= syscalltick= work.nproc=  work.nwait= , gp->status=, not pointer-byte block (2006-01T15:042006T15:04:053814697265625<native code>CertOpenStoreErrNoDeadlineErrPermissionFindFirstFileFindNextFileWFreeAddrInfoWGC sweep waitMapViewOfFileMasaram_GondiMende_KikakuiModeExclusiveModeIrregularModeNamedPipeModeTemporaryOld_HungarianPathSeparatorRegDeleteKeyWRegEnumKeyExWRegEnumValueWRegOpenKeyExWTerminateSelfURI malformedUnmatched ')'VirtualUnlockWriteConsoleW[object Null]bad flushGen bad map statedalTLDpSugct?exchange fullfatal error: getTypeInfo: getUTCMinutesgetUTCSecondsgethostbynamegetservbynameinvalid UTF-8invalid base isPrototypeOflen(str) <= 1level 3 resetload64 failedlocaleComparenil stackbasenot availableout of memoryparsing time setUTCMinutessetUTCSecondssrmount errorstill in listtimer expiredtoBoolean(%T)toExponentialtriggerRatio=value method xadd64 failedxchg64 failed}": 1,
                "sched={pc: but progSize  nmidlelocked= on zero Value out of range  procedure in  t.npagesKey=  to finalizer  untyped args %v.string( %T)-thread limit": 1,
                "1907348632812595367431640625: extra text: CertCloseStoreComputerNameExCreateProcessWCryptGenRandomFindFirstFileWFormatMessageWGC assist waitGC worker initGetConsoleModeGetProcAddressGetUserNameExWInstEmptyWidthMB": 1,
                "allocated MDWSFYNZNNMXJNMemProfileRateModeCharDeviceNetUserGetInfoOther_ID_StartPUHPXOLPIEVQQDPattern_SyntaxProcess32NextWQuotation_MarkReferenceErrorRegSetValueExWScript TimeoutSetFilePointerTCZDEDUUYIATUKTranslateNameWXXIKHRPRUWKJZF\" out of range\\.+*?()|[]{}^$allocfreetracebad allocCountbad span statebad stack sizedefinePropertyerror(%T, ...)file too largefinalizer waitgcstoptheworldgetPrototypeOfgetUTCFullYeargetprotobynamehasOwnPropertyinvalid sourceinvalid syntaxis a directorykey size wronglevel 2 haltedlevel 3 haltednil elem type!no module datano such deviceprotocol errorruntime: full=s.allocCount= semaRoot queuesetUTCFullYearstack overflowstopm spinningstore64 failedsync.Cond.Waittext file busytoLocaleStringtoo many linkstoo many usersunexpected EOFunknown methodunreachable:  unsafe.Pointerwinapi error #work.full != 0  with GC prog": 1,
                "2006T15:04-0700476837158203125: cannot parse <invalid Value>ASCII_Hex_DigitCreateHardLinkWDeviceIoControlDuplicateHandleFIXME TypeErrorFailed to find Failed to load FlushViewOfFileGetAdaptersInfoGetAssetAsBytesGetCommandLineWGetProcessTimesGetStartupInfoWHere be dragonsImpersonateSelfInvalid time %vMemoryRunBinaryOpenThreadTokenOther_LowercaseOther_UppercaseProcess32FirstWPsalter_PahlaviRegCreateKeyExWRegDeleteValueWUnmapViewOfFile]": 1,
                "morebuf={pc:advertise errorbad debugCallV1console.%s >>> force gc (idle)getMillisecondsgo-memorymoduleinvalid paddingkey has expiredmalloc deadlockmissing mcache?ms: gomaxprocs=negative offsetnetwork is downno medium foundno such processrecovery failedruntime error: runtime: frame sandbox_cpu1.gssandbox_user.gsscan missed a gsetMillisecondsstartm: m has pstopm holding ptype conversion already": 1,
                "errno= mheap.sweepgen= not in ranges:": 1,
                "untyped locals , not a function0123456789ABCDEF0123456789abcdef2006-01-02T15:042006-01T15:04:052384185791015625: value of type AddDllDirectory": 1,
                "CreateDirectoryWDnsNameCompare_WDuplicateTokenExFlushFileBuffersGC worker (idle)GODEBUG: value \"GetAssetAsStringGetComputerNameWGetCurrentThreadGetFullPathNameWGetLongPathNameWImperial_AramaicInstRuneAnyNotNLMemProfileRecordMeroitic_CursiveMon, 02 Jan 2006NetApiBufferFreeOpenProcessTokenOther_AlphabeticRegQueryInfoKeyWRegQueryValueExWRemoveDirectoryWSetFilePointerExTerminateProcessZanabazar_Square": 1,
                "runtime stack:": 1,
                "^\\x00-\\x{10FFFF}after object keybad frame layoutbad special kindbad symbol tablecastogscanstatusdefinePropertiesgc: unswept spangcshrinkstackoffinteger overflowinvalid argumentinvalid exchangeinvalid spdelta mSpanList.insertmSpanList.removemessage too longmissing stackmapno route to hostnon-Go function": 1,
                "object is remotepacer: H_m_prev=reflect mismatchregexp: Compile(remote I/O errorruntime:  g:  g=runtime: gp: gp=runtime: nelems=schedule: in cgotime: bad [0-9]*timeBeginPeriod": 1,
                "value size wrongversion mismatchworkbuf is empty initialHeapLive= spinningthreads=%s: Line %d:%d %s0123456789ABCDEFX0123456789abcdefx119209289550781252006T15:04:05.00059604644775390625: missing method DnsRecordListFreeFLE Standard TimeGC assist markingGMT Standard TimeGTB Standard TimeGetCurrentProcessGetShortPathNameWLookupAccountSidWNEGATIVE_INFINITYOld_North_ArabianOld_South_ArabianOther_ID_ContinuePOSITIVE_INFINITYPathListSeparatorRegLoadMUIStringWSentence_TerminalUnexpected numberUnexpected stringUnified_IdeographWSAEnumProtocolsWbad TinySizeClassentersyscallblockexec format errorfractional secondgetTimezoneOffsetin string literalinvalid bit size key align too biglocked m0 woke upmark - bad statusmarkBits overflowmissing closing )missing closing ]nextId too large:no data availablenotetsleepg on g0permission deniedpreventExtensionsreflect.Value.Capreflect.Value.Intreflect.Value.Lenreflect: New(nil)reflect: call of runtime.newosprocruntime: nameOff runtime: next_gc=runtime: pointer runtime: textOff runtime: typeOff scanobject n == 0select (no cases)stack: frame={sp:thread exhaustiontoLocaleLowerCasetoLocaleUpperCaseunknown caller pcwait for GC cyclewine_get_version": 1,
                "wrong medium type  but memory size  because dotdotdot to non-Go memory %v (%v) %s %v (%v), locked to thread2006-01T15:04-07002006T15:04:05-0700298023223876953125: day out of rangeArab Standard TimeBlockProfileRecordCaucasian_AlbanianCommandLineToArgvWCreateFileMappingWCuba Standard TimeFiji Standard TimeG.os.TerminateVM()GetComputerNameExWGetExitCodeProcessGetFileAttributesWGetModuleFileNameWIran Standard TimeLookupAccountNameWOmsk Standard TimeRFS specific errorRegional_IndicatorRussia Time Zone 3SetFileAttributesWSystemFunction036": 1,
                "TypeAssertionErrorUnterminated groupVariation_Selector[^\\x00-\\x{10FFFF}][object Undefined]bad lfnode addressbad manualFreeListbufio: buffer fullconnection refuseddecodeURIComponentencodeURIComponentfile name too longforEachP: not donegarbage collectiongetUTCMillisecondsidentifier removedin numeric literalindex out of rangeinput/output errorinvalid character multihop attemptedno child processesno locks availableoperation canceledracy use of timersreflect.Value.Callreflect.Value.Elemreflect.Value.Sendreflect.Value.Typereflect.Value.Uintreflect: Zero(nil)runtime.semacreateruntime.semawakeupsegmentation faultsetUTCMillisecondsstreams pipe errorsystem page size (toLocaleDateStringtoLocaleTimeStringtracebackancestorsunknown stash typeuse of closed filevalue out of range called using nil * t.spanKey.npages= '%s' is not defined,  g->atomicstatus=, gp->atomicstatus=14901161193847656252006-01-02 15:04:052006-01-02T15:04:057450580596923828125Altai Standard TimeBahia Standard TimeCanadian_AboriginalChina Standard TimeCreateSymbolicLinkWCryptReleaseContextEgypt Standard TimeFunction.toString()GetCurrentProcessIdGetSystemDirectoryWGetTokenInformationHaiti Standard TimeIDS_Binary_OperatorIndia Standard TimeKorea Standard TimeLibya Standard TimeMultiByteToWideCharNepal Standard TimePattern_White_SpaceRussia Time Zone 10Russia Time Zone 11Samoa Standard TimeSetTokenInformationSudan Standard TimeSyria Standard TimeTokyo Standard TimeTomsk Standard TimeTonga Standard TimeUnexpected token %vWaitForSingleObjectafter array elementbad file descriptorbad kind in runfinqbad notifyList sizebad runtime": 1,
                "mstartbad value for fielddevice not a streamdirectory not emptydisk quota exceededfile already closedfile already existsfile does not existgetOwnPropertyNamesillegal instructioninvalid URL escape m not found in allmmarking free objectmarkroot: bad indexmissing ']' in hostmspan.sweep: state=notesleep not on g0ntdll.dll not foundnwait > work.nprocspanic during mallocpanic during panic": 1,
                "panic holding lockspanicwrap: no ( in panicwrap: no ) in reflect.Value.Fieldreflect.Value.Floatreflect.Value.Indexreflect.Value.IsNilreflect.Value.Sliceruntime: g0 stack [runtime: insert t= runtime: pcdata is runtime: preempt g0sandbox_hostname.gssemaRoot rotateLeftskip this directorystopm holding lockstoo many open filesunexpected InstFailunknown wait reasonvalue align too bigwinmm.dll not found markroot jobs done": 1,
                "to unallocated span%v is not a function2006-01T15:04:05.00037252902984619140625: leftover defer sp=Arabic Standard TimeAzores Standard TimeCertOpenSystemStoreWCreateProcessAsUserWCryptAcquireContextWEgyptian_HieroglyphsGetAcceptExSockaddrsGetAdaptersAddressesGetCurrentDirectoryWGetFileAttributesExWGetProcessMemoryInfoIDS_Trinary_OperatorIsrael Standard TimeJordan Standard TimeMeroitic_HieroglyphsSeek: invalid offsetSeek: invalid whenceSetCurrentDirectoryWSetHandleInformationTaipei Standard TimeTerminal_PunctuationTurkey Standard TimeUndefined label '%s'[invalid char class]bad defer size classbad font file formatbad system page sizebad use of bucket.bpbad use of bucket.mpchan send (nil chan)close of nil channelconnection timed outextra data in bufferfloating point errorforcegc: phase errorgc_trigger underflowgo of nil func valuegopark: bad g statusgzip: invalid headerinvalid repeat countinvalid request codeis a named type filejson: Unmarshal(nil json: Unmarshal(nil)key has been revokedmSpanList.insertBackmalloc during signalnon-empty swept listnotetsleep not on g0p mcache not flushedpacer: assist ratio=preempt off reason: propertyIsEnumerablereflect.Value.Methodreflect.Value.SetIntreflect.Value.Slice3reflect.makeFuncStubreflect: cannot use runtime: casgstatus runtime: double waitruntime: unknown pc semaRoot rotateRighttime: invalid numbertrace: out of memoryvalue > utf8.MaxRunewirep: already in goworkbuf is not emptywrite of Go pointer ws2_32.dll not found gp.gcscanvalid=true": 1,
                "of unexported method previous allocCount=([eE][\\+\\-])0+([1-9])1862645149230957031252006-01-02T15:04-07002006-01T15:04:05-0700931322574615478515625AdjustTokenPrivilegesAlaskan Standard TimeAnatolian_HieroglyphsArabian Standard TimeBelarus Standard TimeCentral Standard TimeEastern Standard TimeGetProfilesDirectoryWHere be dragons -- %sInscriptional_PahlaviLookupPrivilegeValueWMagadan Standard TimeMorocco Standard TimeMyanmar Standard TimeNamibia Standard TimeNetGetJoinInformationNetUserGetLocalGroupsNorfolk Standard TimeOther_Grapheme_ExtendPacific Standard TimeReadDirectoryChangesWRomance Standard TimeRussian Standard TimeSE Asia Standard TimeSaratov Standard TimeString not terminatedUnexpected identifierUnknown comparator %sYakutsk Standard Timeafter top-level valuebad type in compare: block device requiredbufio: negative countcheckdead: runnable gconcurrent map writesdefer on system stackfindrunnable: wrong pin string escape codeinvalid named capturelink has been severedpackage not installedpanic on system stackread-only file systemreflect.Value.Complexreflect.Value.Pointerreflect.Value.SetUintreleasep: invalid argruntime: confused by runtime: newstack at runtime: newstack sp=runtime: work.nwait= stale NFS file handlestartlockedm: m has pstartm: m is spinningstate not recoverablestopg: invalid statustrace/breakpoint trapuser defined signal 1user defined signal 2 into Go struct field %SystemRoot%\\system32\\'%s' is not a function([^~!@#$&*()=:/,": 1,
                "?+'])/lib/time/zoneinfo.zip2006T15:04:05.000-07004656612873077392578125Aleutian Standard TimeAtlantic Standard TimeCaucasus Standard TimeConvertSidToStringSidWConvertStringSidToSidWCreateIoCompletionPortDateline Standard TimeGeorgian Standard TimeGetEnvironmentStringsWGetTimeZoneInformationHawaiian Standard TimeInscriptional_ParthianMountain Standard TimeNtWaitForSingleObject": 1,
                "Pakistan Standard TimeParaguay Standard TimeSakhalin Standard TimeTasmania Standard Time[0-9eE\\+\\-\\.]|Infinityaddress already in useadvapi32.dll not foundargument list too longassembly checks failedbad g->status in readybad sweepgen in refillcall not at safe pointcannot allocate memoryerror parsing regexp: freeIndex is not validgetenv before env initgzip: invalid checksumint = funtime.NumCPU()integer divide by zerointerface conversion: invalid message lengthinvalid sourcemap typeinvalid value: %v (%T)json: unknown field %qkernel32.dll not foundminpc or maxpc invalidnetwork is unreachablenewRegExpObject: %s %snon-Go function at pc=oldoverflow is not nilprotocol not availableprotocol not supportedreflect.Value.MapIndexreflect.Value.SetFloatremote address changedruntime.main not on m0runtime: work.nwait = runtime:scanstack: gp=s.freeindex > s.nelemsscanstack - bad statussend on closed channelslice length too largespan has no free spacestack not a power of 2timer goroutine (idle)trace reader (blocked)trace: alloc too largeunexpected length codevalue is not an objectwirep: invalid p state into Go value of type %s (and %d more errors)%v is not a constructor) must be a power of 2": 1,
                ", received remote type 2006-01-02T15:04:05.00023283064365386962890625<invalid reflect.Value>Argentina Standard TimeArray.length != Value{}Astrakhan Standard TimeCertGetCertificateChainE. Africa Standard TimeE. Europe Standard TimeFreeEnvironmentStringsWGetEnvironmentVariableWGetSystemTimeAsFileTimeGreenland Standard TimeGreenwich Standard TimeIllegal boolean literalIllegal break statementIllegal numeric literalInvalid UTF-8 characterLogical_Order_ExceptionLord Howe Standard TimeMB during sweep": 1,
                "swept Marquesas Standard TimeMauritius Standard TimeNoncharacter_Code_PointSetEnvironmentVariableWSingapore Standard TimeSri Lanka Standard TimeTocantins Standard TimeUnexpected end of inputVenezuela Standard TimeW. Europe Standard TimeWSAGetOverlappedResult": 1,
                "West Asia Standard TimeWest Bank Standard Time\" not found in registry\", missing CPU support": 1,
                "bad %s slice length: %dbytes.Buffer: too largecan't convert to %s: %scannot convert %v to %vchan receive (nil chan)close of closed channeldevice or resource busyfatal: morestack on g0": 1,
                "flate: internal error: garbage collection scangcDrain phase incorrectgetBinding: %s: missinginterrupted system callinvalid URI for requestinvalid escape sequenceinvalid escape: \\%s: %qinvalid m->lockedInt = json: cannot unmarshal left over markroot jobsmakechan: bad alignmentmissing protocol schememissing type in runfinqnanotime returning zerono space left on deviceoperation not permittedoperation not supportedpanic during preemptoffprocresize: invalid argreferenceError == nil: reflect.Value.Interfacereflect.Value.NumMethodreflect.methodValueCallruntime: internal errorruntime: invalid type  runtime: netpoll failedruntime: s.allocCount= s.allocCount > s.nelemsschedule: holding lockssetBinding: %s: missingspan has no free stacksstack growth after forksyntax error in patternunexpected map key typeunknown empty width argunknown type in isZero work.nwait > work.nproc1164153218269348144531252006-01-02T15:04:05-07002006-01-02T15:04:05.000Z582076609134674072265625Azerbaijan Standard TimeBangladesh Standard TimeCape Verde Standard TimeCertFreeCertificateChainCreateToolhelp32SnapshotGetSystemTimeAsFileTime": 1,
                "GetUserProfileDirectoryWIllegal return statementMagallanes Standard TimeMontevideo Standard TimeNorth Asia Standard TimePacific SA Standard TimeQueryPerformanceCounter": 1,
                "SA Eastern Standard TimeSA Pacific Standard TimeSA Western Standard TimeUS Eastern Standard TimeUnexpected reserved word\", required CPU feature": 1,
                "^[$_\\p{L}][$_\\p{L}\\d}]*$bad defer entry in panicbad defer size class: i=block index out of rangecan't scan our own stackconnection reset by peerdouble traceGCSweepStartencodeArray: nil elementflate: maxBits too largefloating point exceptionfunction not implementedgcDrainN phase incorrectgetOwnPropertyDescriptorhash of unhashable type initSpan: unaligned baseinvalid argument to Intnjson: unsupported type: level 2 not synchronizedlink number out of rangenon-empty decoder buffernot supported by windowsout of streams resourcesqueuefinalizer during GCreflect.Value.SetComplexreflect.Value.UnsafeAddrrunqsteal: runq overflowruntime: C malloc failedruntime: VirtualFree of runtime: found obj at *(runtime: predecessor t= span has no free objectsstack trace unavailable": 1,
                "structure needs cleaningthis should never happen bytes failed with errno= to unused region of span with too many arguments 2006-01-02T15:04:05Z07:002006-01T15:04:05.000-07002910383045673370361328125AUS Central Standard TimeAUS Eastern Standard TimeAfghanistan Standard TimeError executing VM %s: %vExpandEnvironmentStringsWGODEBUG: can not enable \"GetFinalPathNameByHandleWGetQueuedCompletionStatusKaliningrad Standard TimeLabel '%s' already existsMiddle East Standard TimeNew Zealand Standard TimeNorth Korea Standard TimeTransbaikal Standard TimeUS Mountain Standard TimeUlaanbaatar Standard TimeVladivostok Standard TimeW. Mongolia Standard Time_cgo_thread_start missingallgadd: bad status Gidlearena already initializedbad status in shrinkstackbootstrap type wrong id: chansend: spurious wakeupcheckId: %d should be %d": 1,
                "checkdead: no m for timercheckdead: no p for timercould not locate asset %serror decoding []byte: %sinconsistent poll.fdMutexinvalid cross-device linkjson: Unexpected key typejson: unsupported value: missing stack in newstackmissing traceGCSweepStartnet/url: invalid userinfono buffer space availableno such device or addressoperation now in progressreflect.Value.OverflowIntreflect.Value.SetMapIndexreflect: Bits of nil Typereleasep: invalid p stateremaining pointer buffersresource deadlock avoidedruntime:      t.spanKey= runtime: VirtualAlloc of runtime: misaligned func runtime: program exceeds runtime": 1,
                "lock: lock countslice bounds out of rangesocket type not supportedstartm: p has runnable gsstoplockedm: not runnableunexpected fault address unexpected key value type using unaddressable value using zero Value argument1455191522836685180664062572759576141834259033203125Bougainville Standard TimeCentral Asia Standard TimeCertFreeCertificateContextE. Australia Standard TimeEkaterinburg Standard TimeGODEBUG: can not disable \"GetFileInformationByHandleIllegal continue statementIllegal hexadecimal numberLine Islands Standard TimeNewfoundland Standard TimePostQueuedCompletionStatusQueryPerformanceFrequency": 1,
                "RangeError: %f (%v) to intSaint Pierre Standard TimeSouth Africa Standard TimeW. Australia Standard TimeWest Pacific Standard Time^[a-zA-Z\\$][a-zA-Z0-9\\$]*$call from unknown functioncorrupted semaphore ticketentersyscall inconsistent failed to find ConnectEx: forEachP: P did not run fnfreeSpan given cached spanfreedefer with d.fn != nilgob: local interface type initSpan: unaligned lengthinvalid argument to Int31ninvalid argument to Int63ninvalid port %q after hostinvalid request descriptorname not unique on networkno CSI structure availableno message of desired typenotewakeup - double wakeupout of memory (stackalloc)persistentalloc: size == 0reflect.Value.CanInterfacereflect.Value.MethodByNamereflect.Value.OverflowUintrequired key not availableruntime: bad span s.state=startlockedm: locked to me is not assignable to type  returned wrong type: have !#$%&()*+-./:<=>?@[]^_{|}~ 363797880709171295166015625AddVectoredContinueHandler": 1,
                "CertEnumCertificatesInStoreEaster Island Standard TimeError for preloading %s: %vG waiting list is corruptedIllegal newline after throwRangeError: %d (%v) to int8RangeError: %f (%v) to uint[\\+\\-]?(?:[Ii]nf$|infinity)\"2006-01-02T15:04:05Z07:00\"address not a stack addressafter object key:value pairbad data: undefined type %scan't convert from %q to %qcgoUse should not be calledchannel number out of rangecommunication error on sendcould not find QPC syscallsdecode can't handle type %sgcstopm: not waiting for gcgrowslice: cap out of rangeinternal lockOSThread errorinvalid argument to Shuffleinvalid profile bucket typeinvalid type name length %dkey was rejected by servicelarge span treap rotateLeftmakechan: size out of rangemakeslice: cap out of rangemakeslice: len out of rangemspan.sweep: bad span statenot a XENIX named type fileprogToPointerMask: overflowreflect.Value.OverflowFloatrestartg: unexpected statusrunlock of unlocked rwmutexruntime: checkdead: find g runtime: checkdead: nmidle=runtime: corrupted polldescruntime: netpollinit failedruntime: thread ID overflowruntime": 1,
                "unlock: lock countsigsend: inconsistent statestack size not a power of 2startm: negative nmspinningstopTheWorld: holding locksstring cannot have 0 insidetime: invalid location namework.nwait was > work.nproc args stack map entries for 18189894035458564758300781252006-01-02T15:04:05.000-07009094947017729282379150390625Aus Central W. Standard TimeCanada Central Standard TimeCen. Australia Standard TimeCentral Europe Standard TimeCertCreateCertificateContextEnglish name for time zone \"FixedStack is not power-of-2GetFileInformationByHandleExGetQueuedCompletionStatusEx": 1,
                "Prepended_Concatenation_MarkRangeError: %d (%v) to int16RangeError: %d (%v) to int32RangeError: %d (%v) to uint8Unterminated character class[originating from goroutine can't happen: encode type %scan't preserve unlinked spancomparing uncomparable type destination address requirederror = G.os.TerminateSelf()fatal: morestack on gsignal": 1,
                "file descriptor in bad statefindrunnable: netpoll with pgcstopm: negative nmspinninggob: cannot encode nil valuegob: duplicate type receivedgob: unknown size of uintptrinvalid runtime symbol tableinvalid type passed to new()json: Unmarshal(non-pointer large span treap rotateRightmheap.freeSpanLocked - span missing stack in shrinkstackmspan.sweep: m is not lockedneed padding in bucket (key)newproc1: new g is not Gdeadnewproc1: newg missing stackos: process already finishedprotocol driver not attachedreflect.MakeSlice: len > capreflect: In of non-func typereflect: Key of non-map typeregion exceeds uintptr rangeruntime.semasleep unexpectedruntime: bad lfnode address runtime: casgstatus: oldval=runtime: no module data for runtime: stat overflow: val strconv:": 1,
                "> (den<<shift)/2unexpected end of JSON input cannot be converted to type 45474735088646411895751953125Central America Standard TimeCentral Pacific Standard TimeChatham Islands Standard TimeLockOSThread nesting overflowMon, 02 Jan 2006 15:04:05 GMTMon, 02 Jan 2006 15:04:05 MSTN. Central Asia Standard TimeNorth Asia East Standard TimeRangeError: %d (%v) to uint16RangeError: %d (%v) to uint32RangeError: %f (%v) to uint64Time.UnmarshalBinary: no dataaddspecial on invalid pointerbufio.Scanner: token too longcrypto/aes: invalid key size executing on Go runtime stackfunction () { [native code] }gc done but gcphase != _GCoffgfput: bad status (not Gdead)gob: encoder: message too biggob: unknown size of int/uintinvalid character class rangeinvalid length of trace eventio: read/write on closed pipemachine is not on the networkno XENIX semaphores availablenotesleep - waitm out of syncnumerical result out of rangeoperation already in progresspadding contained in alphabetprotocol family not supportedre2: Invalid (%s) <lookahead>reflect.Value.OverflowComplexreflect: Elem of invalid typereflect: Out of non-func typeruntime.semasleep wait_failedruntime: impossible type kindruntime: marking free object runtime: p.gcMarkWorkerMode= runtime: split stack overflowruntime: stat underflow: val runtime: sudog with non-nil cruntime: unknown pc in defer semacquire not on the G stackstring concatenation too longsyntax error scanning booleantimeBegin/EndPeriod not foundtoo many open files in systemtraceback has leftover defers (types from different scopes) in prepareForSweep": 1,
                "sweepgen  locals stack map entries for %/panic//%@: %v != reflect.Map%?/(panic|fatal|check)(?:\\s|$)227373675443232059478759765625Central European Standard TimeCentral Standard Time (Mexico)E. South America Standard TimeEastern Standard Time (Mexico)GODEBUG: unknown cpu feature \"Invalid regular expression: %sMapIter.Key called before NextPacific Standard Time (Mexico)RangeError: %f (%v) to float32Turks And Caicos Standard Timeabi mismatch detected between assignment to entry in nil mapattempt to register empty namecheckdead: inconsistent countsfailed to get system page sizefreedefer with d._panic != nilgob: decoding into local type in exponent of numeric literalinappropriate ioctl for deviceinvalid function symbol table": 1,
                "invalid pointer found on stacklength mismatch in decodeArraylength mismatch in ignoreArraylooking for beginning of valueneed padding in bucket (value)node is not its parent's childnotetsleep - waitm out of syncprotocol wrong type for socketreflect: Len of non-array typerunqputslow: queue is not fullruntime: bad g in cgocallback": 1,
                "runtime: bad pointer in frame runtime: found in object at *(runtime: impossible type kind socket operation on non-socketstrings: negative Repeat countsync: inconsistent mutex statesync: unlock of unlocked mutextype %s has no exported fieldsunaddressable value of type %s%s is not assignable to type %s) not in usable address space: ...additional frames elided...": 1,
                ".lib section in a.out corrupted11368683772161602973937988281255684341886080801486968994140625Already saw a default in switchCannot access member '%s' of %sCentral Brazilian Standard TimeDWORD value is not 4 bytes longMountain Standard Time (Mexico)QWORD value is not 8 bytes longVM hit timeout after %v secondsW. Central Africa Standard Timebad write barrier buffer boundscall from within the Go runtimecannot assign requested addresscasgstatus: bad incoming valuescheckmark found unmarked objectencodeReflectValue: nil elementencoding/hex: invalid byte: %#Uentersyscallblock inconsistent expected %d argument(s)": 1,
                "got %dfmt: unknown base": 1,
                "can't happenfunction %s() { [native code] }in literal null (expecting 'l')in literal null (expecting 'u')in literal true (expecting 'e')in literal true (expecting 'r')in literal true (expecting 'u')inserting span already in treapinternal error - misuse of itabjson: invalid number literal %qmalformed time zone informationmergeRuneSets odd length []runenon in-use span in unswept listpacer: sweep done at heap size reflect.MakeSlice: negative capreflect.MakeSlice: negative lenreflect: NumIn of non-func typeresetspinning: not a spinning mruntime: cannot allocate memoryruntime: failed to commit pagesruntime: split stack overflow:  (types from different packages)28421709430404007434844970703125CertAddCertificateContextToStoreCertVerifyCertificateChainPolicyError importing native VM %s: %vInvalid left-hand side in for-inMapIter.Value called before NextMaximum call stack size exceededWSAGetOverlappedResult not found[*User, error] = user2.Current()\" not supported for cpu option \"bootstrap type already present: bufio: invalid use of UnreadBytebufio: invalid use of UnreadRunebufio: tried to fill full buffercrypto/aes: input not full blockend outside usable address spacein literal false (expecting 'a')in literal false (expecting 'e')in literal false (expecting 'l')in literal false (expecting 's')numerical argument out of domainpanic while printing panic valuere2: Invalid \\%d <backreference>re2: Invalid \\%s <backreference>reflect.nameFrom: tag too long: reflect: NumOut of non-func typeremovespecial on invalid pointerresource temporarily unavailableruntime.semasleep wait_abandonedruntime: failed to release pagesruntime: mcall function returnedruntime: newstack called from g=runtime: setevent failed": 1,
                "errno=runtime: stack split at bad timeruntime: sudog with non-nil elemruntime: sudog with non-nil nextruntime: sudog with non-nil prevscanstack: goroutine not stoppedsoftware caused connection abortsweep increased allocation countsync: Unlock of unlocked RWMutexsync: negative WaitGroup counteruse of closed network connection of method on nil interface value%/panic//%@: %v != reflect.Struct142108547152020037174224853515625710542735760100185871124267578125GODEBUG: no value specified for \"base outside usable address spacebytes.Buffer.Grow: negative countbytes.Reader.Seek: invalid whenceconcurrent map read and map writecreateBinding: %s: already existscrypto/aes: output not full blockfindrunnable: negative nmspinningfreeing stack not in a stack spanheapBitsSetType: unexpected shiftleafCounts[maxBits][maxBits] != nmisrounded allocation in sysAllocre2: Illegal branch in scanEscapereflect.nameFrom: name too long: reflect: ChanDir of non-chan typereflect: Field index out of rangereflect: Field of non-struct typereflect: array index out of rangereflect: slice index out of rangeregexp: unhandled case in compileruntime: castogscanstatus oldval=runtime: failed mSpanList.insert runtime: failed to decommit pagesruntime: goroutine stack exceeds runtime: memory allocated by OS [runtime: name offset out of rangeruntime: text offset out of rangeruntime: type offset out of rangestackalloc not on scheduler stackstoplockedm: inconsistent lockingsync: RUnlock of unlocked RWMutextoo many levels of symbolic linkstreap insert finds a broken treaptreap node with nil spanKey foundwaiting for unsupported file type3552713678800500929355621337890625Missing catch or finally after tryOTTO DOES NOT UNDERSTAND THIS TYPEOther_Default_Ignorable_Code_PointRangeError: %v to reflect.Kind: %vSetFileCompletionNotificationModesVirtualQuery for stack base failedattempting to walk past file path.converting %v to %v would overflowcrypto/aes: invalid buffer overlapforEachP: sched.safePointWait != 0illegal base64 data at input byte in \\u hexadecimal character escapeinvalid escape: \\%s: len(%q) != %dinvalid nested repetition operatorinvalid or unsupported Perl syntaxmspan.ensureSwept: m is not lockedname too long (%d bytes): %.20q...out of memory allocating allArenasreflect.FuncOf: too many argumentsreflect: Field index out of boundsreflect: Method index out of rangereflect: recv on send-only channelreflect: send on recv-only channelreflect: string index out of rangeruntime.SetFinalizer: cannot pass runtime: g is running but p is notruntime: unexpected return pc for schedule: spinning with local workspan and treap sizes do not match?too many references: cannot spliceunexpected runtime.netpoll error: 177635683940025046467781066894531252006-01-02T15:04:05.999999999Z07:0088817841970012523233890533447265625VM encountered unexpected error: %v^(.*)(?:(Z)|([\\+\\-]\\d{2}):(\\d{2}))$converting %v to %v would underflowencoding/hex: odd length hex stringfile type does not support deadlinefindfunc: bad findfunctab entry idxfindrunnable: netpoll with spinningflate: corrupt input before offset greyobject: obj not pointer-alignedmheap.freeSpanLocked - invalid freenetwork dropped connection on resetpersistentalloc: align is too largepidleput: P has non-empty run queuereflect.MakeSlice of non-slice typeruntime: close polldesc w/o unblockruntime: createevent failed": 1,
                "errno=runtime: inconsistent read deadlinestring data too long for buffer: %dstrings.Reader.Seek: invalid whencetraceback did not unwind completelytransport endpoint is not connected0123456789abcdefghijklmnopqrstuvwxyz444089209850062616169452667236328125Error importing assets for VM %s: %vError importing script for VM %s: %vGo pointer stored into non-Go memoryInvalid left-hand side in assignmentMStats vs MemStatsType size mismatchTime.UnmarshalBinary: invalid lengthUnable to determine system directoryaccessing a corrupted shared librarybytes.Reader.ReadAt: negative offsetbytes.Reader.Seek: negative positioncould not initialize virtual machinekey size not a multiple of key alignreflect: IsVariadic of non-func typereflect: NumField of non-struct typereflect: funcLayout of non-func typeruntime: VirtualQuery failed": 1,
                "errno=runtime: bad notifyList size - sync=runtime: inconsistent write deadlineruntime: invalid pc-encoded table f=runtime: invalid typeBitsBulkBarrierruntime: mcall called on m->g0 stackruntime: sudog with non-nil waitlinkruntime: unblock on closing polldescruntime: wrong goroutine in newstackstrings.Builder.Grow: negative countsyntax error scanning complex numbertoo many arguments for call to new()uncaching span but s.allocCount == 0) is smaller than minimum page size (2220446049250313080847263336181640625Converting circular structure to JSONInvalid regular expression: missing /\\$(?:[\\$\\&\\'\\`1-9]|0[1-9]|[1-9][0-9])_cgo_notify_runtime_init_done missingall goroutines are asleep - deadlock!bad data: ignore can't handle type %sbytes.Buffer: truncation out of rangecannot exec a shared library directlycipher: message authentication failedcrypto/cipher: incorrect GCM tag sizecrypto/cipher: invalid buffer overlapgithub.com/gen0cide/gscript/stdlib/osgob NewTypeObject can't handle type: internal error: unknown network type name not registered for interface: %qreflect.Value.Bytes of non-byte slicereflect.Value.Bytes of non-rune slicereflect.Value.Convert: value of type reflect: Bits of non-arithmetic Type runtime: allocation size out of rangeruntime: failed mSpanList.insertBack setprofilebucket: profile already setstartTheWorld: inconsistent mp->nextpstrings: Repeat count causes overflowtype not registered for interface: %svalue too large for defined data type1110223024625156540423631668090820312555511151231257827021181583404541015625Unable to determine system directory: Unable to test for equality: %v ==? %vafter decimal point in numeric literalarg size to reflect.call more than 1GBcan not access a needed shared libraryconcurrent map iteration and map writedecode: corrupted data: negative deltaempty name for remote field of type %sencoding alphabet is not 64-bytes longexpected at least %d arguments": 1,
                "got %dgcBgMarkWorker: blackening not enabledgob: DecodeValue of unassignable valuegob: unknown type id or corrupted datamakechan: invalid channel element typenot enough arguments for call to new()reflect: Method on nil interface valueruntime: blocked read on free polldescruntime: sudog with non-false isSelectstrings.Reader.ReadAt: negative offsetstrings.Reader.Seek: negative positiontime: missing Location in call to Date2006-01-02 15:04:05.999999999 -0700 MST277555756156289135105907917022705078125GobDecoder: length too large for buffercan't represent recursive pointer type gob: cannot encode nil pointer of type heapBitsSetTypeGCProg: small allocationmismatched count during itab table copymissing argument to repetition operatormspan.sweep: bad span state after sweepout of memory allocating heap arena mapreflect.MakeMapWithSize of non-map typereflect: FieldByName of non-struct typeruntime: blocked write on free polldescruntime: casfrom_Gscanstatus failed gp=runtime: function symbol table header: span and treap node npages do not matchstack growth not allowed in system calltoo few arguments passed to function %strailing backslash at end of expressiontransport endpoint is already connected13877787807814456755295395851135253906256938893903907228377647697925567626953125Here be dragons: cmpl.parseStatement(%T)Invalid identifier escape value: %c (%s)MapIter.Key called on exhausted iteratoraddress family not supported by protocolbulkBarrierPreWrite: unaligned argumentscannot free workbufs when work.full != 0crypto/cipher: message too large for GCMcrypto/cipher: output smaller than inputdeferproc: d.panic != nil after newdeferin.value.(Value) != true": 1,
                "in.value is %Trefill of span with free space remainingreflect.Value.Call: call of nil functionreflect.Value.Call: wrong argument countreflect.Value.SetBytes of non-byte slicereflect.Value.setRunes of non-rune slicereflect: FieldByIndex of non-struct typeruntime.SetFinalizer: first argument is runtime: out of memory: cannot allocate runtime: typeBitsBulkBarrier with type  too many arguments passed to function %svalue size not a multiple of value alignwrong type (%s) for received field %s.%s%s slice too big: %d elements of %d bytes34694469519536141888238489627838134765625Here be dragons: cmpl.parseExpression(%T)MapIter.Next called on exhausted iteratorTime.UnmarshalBinary: unsupported version[name string, err error] = os2.Hostname()binary: varint overflows a 64-bit integerbytes.Buffer.WriteTo: invalid Write countbytes.Reader.WriteTo: invalid Write countcan't call pointer on a non-pointer Valuecgo argument has Go pointer to Go pointergcSweep being done but phase is not GCoffgob: attempt to decode into a non-pointerjson: error calling MarshalJSON for type mheap.freeSpanLocked - invalid span statemheap.freeSpanLocked - invalid stack freenet/url: invalid control character in URLobjects added out of order or overlappingpacket is too large (only 1GB is allowed)reflect.Value.Addr of unaddressable valueruntime.SetFinalizer: second argument is runtime: blocked read on closing polldescruntime: typeBitsBulkBarrier without typesetCheckmarked and isCheckmarked disagreestopTheWorld: not stopped (stopwait != 0)strconv: illegal AppendInt/FormatInt basetime: missing Location in call to Time.IntoString() radix must be between 2 and 36user: should be user account type, not %d//# sourceMappingURL=data:application/json173472347597680709441192448139190673828125867361737988403547205962240695953369140625Calling RegExp.exec on a non-RegExp objectJSON.stringify: invalid length: %v (%[1]T)MapIter.Value called on exhausted iteratorTime.MarshalBinary: unexpected zone offsetacquireSudog: found s.elem != nil in cachecandidate mspan for allocation is not freegob: bad data: field numbers out of boundsgob: encoded unsigned integer out of rangegrew heap, but no adequate free span foundlooking for beginning of object key stringnon-empty mark queue after concurrent markon a locked thread with no template threadpersistentalloc: align is not a power of 2reflect: Call with too few input argumentsruntime: blocked write on closing polldescsync/atomic: store of nil value into Valueunexpected signal during runtime executionunsupported type %v for numeric conversion(?i)(?:%)(3B|2F|3F|3A|40|26|3D|2B|24|2C|23)Here be dragons: evaluate_nodeStatement(%T)bufio: tried to rewind past start of buffercandidate mspan for allocation is too smallgcBgMarkWorker: unexpected gcMarkWorkerModeheapBitsSetTypeGCProg: unexpected bit countinterrupted system call should be restartedmultiple Read calls return no data or errorreflect: Call with too many input argumentsreflect: CallSlice of non-variadic functionreflect: FieldByNameFunc of non-struct typereflect: nil type passed to Type.Implementsruntime.SetFinalizer: finalizer already setruntime.SetFinalizer: first argument is nilruntime: casfrom_Gscanstatus bad oldval gp=runtime: heapBitsSetTypeGCProg: total bits runtime: releaseSudog with non-nil gp.paramunknown runnable goroutine during bootstrap using value obtained using unexported fieldHere be dragons: evaluate_nodeExpression(%T)Invalid identifier escape character: %c (%s)argument type mismatch - expected %s, got %Tconverting float64 to float32 would overflowencoding alphabet contains newline charactergcmarknewobject called while doing checkmarkinvalid conversion of %q to reflect.Kind: %vout of memory allocating heap arena metadatareflect: call of MakeFunc with non-Func typereflect: funcLayout with interface receiver reflect: function created by MakeFunc using reflect: slice length out of range in SetLenruntime: lfstack.push invalid packing: node=toFixed() precision must be between 0 and 20Here be dragons: parseProgram.declaration(%T)cannot send after transport endpoint shutdownconversion failed for return 0 (type=%T) - %vexitsyscall: syscall frame is no longer validheapBitsSetType: called with non-pointer typeignore decode: corrupted data: negative deltainvalid value (map): missing runtime: %v (%T)reflect: internal error: invalid method indexreflect: nil type passed to Type.AssignableToruntime: failed mSpanList.remove span.npages= returned value obtained from unexported fieldError injecting standard library for VM %s: %vbytes.Reader.UnreadByte: at beginning of slicebytes.Reader.UnreadRune: at beginning of slicecipher.NewOFB: IV length must equal block sizeconversion failed for return %d (type=%T) - %vfirst path segment in URL cannot contain coloninvalid slice length %d: exceeds input size %dlength of string exceeds input size (%d bytes)memory reservation exceeds address space limitos: unexpected result from WaitForSingleObjectpanicwrap: unexpected string after type name: reflect.Value.Slice: slice index out of boundsreflect: nil type passed to Type.ConvertibleToreflect: slice capacity out of range in SetCapruntime: debugCallV1 called by unknown caller runtime: failed to create new OS thread (have runtime: name offset base pointer out of rangeruntime: panic before malloc heap initialized": 1,
                "runtime: text offset base pointer out of rangeruntime: type offset base pointer out of rangesignal arrived during external code execution": 1,
                "stopTheWorld: not stopped (status != _Pgcstop)toPrecision() precision must be greater than 1P has cached GC work at end of mark terminationattempting to link in too many shared librariesbufio: reader returned negative count from Readinvalid string length %d: exceeds input size %dinvalid type name length %d: exceeds input sizeinvalid value (slice): missing runtime: %v (%T)reflect.Value.Slice3: slice index out of boundsreflect.Value.UnsafeAddr of unaddressable valuereflect: CallSlice with too few input argumentsruntime: CreateIoCompletionPort failed (errno= NODE: %v, Comments: %v, Future: %v(LINEBREAK:%v)Time.MarshalJSON: year outside of range [0,9999]Time.MarshalText: year outside of range [0,9999]bufio: writer returned negative count from Writecould not find GetSystemTimeAsFileTime() syscallinvalid value (struct): missing runtime: %v (%T)reflect: CallSlice with too many input argumentsruntime: cannot map pages in arena address spaceruntime: waitforsingleobject unexpected": 1,
                "result=runtime: waitforsingleobject wait_failed": 1,
                "errno=strconv: illegal AppendFloat/FormatFloat bitSizesyscall: string with NUL passed to StringToUTF16bad interface encoding: name too large for buffercasgstatus: waiting for Gwaiting but is Grunnableconverting %v to %v would cause loss of precisiongob: registering duplicate names for %s: %q != %qgob: registering duplicate types for %q: %s != %sinvalid conversion of %v (%v) to reflect.Kind: %vinvalid memory address or nil pointer dereferenceinvalid or incomplete multibyte or wide characterpanicwrap: unexpected string after package name: reflect.Value.Slice: slice of unaddressable arrayruntime.reflect_makemap: unsupported map key typeruntime: unexpected waitm - semaphore out of syncs.allocCount != s.nelems && freeIndex == s.nelemsstrconv: internal error, rest != 0 but needed > 0strconv: num > den<<shift in adjustLastDigitFixedstrings.Reader.UnreadByte: at beginning of stringstrings.Reader.UnreadRune: at beginning of stringstrings.Reader.WriteTo: invalid WriteString countattempt to execute system stack code on user stackcrypto/cipher: incorrect nonce length given to GCMinvalid uint data length %d: exceeds input size %dmallocgc called with gcphase == _GCmarkterminationrecursive call during initialization - linker skewreflect.Value.Slice3: slice of unaddressable arrayruntime: GetQueuedCompletionStatus failed (errno= runtime: unable to acquire - semaphore out of syncJSON decoder out of sync - data changing underfoot?can't set embedded pointer to unexported struct: %vcould not create multiple assignment structure - %vfatal: systemstack called from unexpected goroutinecasfrom_Gscanstatus: gp->status is not in scan statedecode: corrupted data: non-zero delta for singletonruntime.SetFinalizer: pointer not in allocated blockruntime: GetQueuedCompletionStatusEx failed (errno= runtime: use of FixAlloc_Alloc before FixAlloc_Init": 1,
                "Expecting a function in instanceof check, but got: %vTime.MarshalBinary: zone offset has fractional minutefunction symbol table not sorted by program counter: lookupGroupName: should be group account type, not %dnamespace %s is already defined in virtual machine %sreflect.Value.Slice: string slice index out of boundsreflect: non-interface type passed to Type.ImplementsHere be dragons: cmpl.parseProgram.DeclarationList(%T)": 1,
                "goroutine running on other thread": 1,
                "stack unavailable": 1,
                "bytes.Buffer: reader returned negative count from ReadgcControllerState.findRunnable: blackening not enabledinternal error: polling on unsupported descriptor typeno goroutines (main called runtime.Goexit) - deadlock!reflect.FuncOf does not support more than 50 argumentsruntime: GetQueuedCompletionStatus returned op == nil": 1,
                "runtime: signal received on thread not created by Go.": 1,
                "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zonesbufio.Scanner: SplitFunc returns negative advance countcasfrom_Gscanstatus:top gp->status is not in scan stategentraceback callback cannot be used with non-zero skipnewproc: function arguments too large for new goroutinereflect.FuncOf: last arg of variadic func must be slicereflect: internal error: invalid use of makeMethodValueruntime error: could not locate the JSON runtime objectbad interface encoding: data length too large for bufferfailed to allocate aligned heap memory": 1,
                "too many retriesin gcMark expecting to see gcphase as _GCmarkterminationinvalid interface value length %d: exceeds input size %dstrings: illegal use of non-zero Builder copied by valueGobDecoder: invalid data length %d: exceeds input size %dgentraceback cannot trace user goroutine on its own stackruntime:stoplockedm: g is not Grunnable or Gscanrunnable": 1,
                "sync: WaitGroup misuse: Add called concurrently with Waittype mismatch: no fields matched compiling decoder for %sgob: cannot encode nil pointer of type %s inside interfacejson: cannot set embedded pointer to unexported struct: %vruntime: GetQueuedCompletionStatus returned invalid mode= bufio.Scanner: SplitFunc returns advance count beyond inputreflect: indirection through nil pointer to embedded structsync/atomic: store of inconsistently typed value into Valuesync: WaitGroup is reused before previous Wait has returnedbytes.Reader.UnreadRune: previous operation was not ReadRunesourcemap: got version=%d, but only 3rd version is supportedCannot supply flags when constructing one RegExp from anotherreflect: wrong return count from function created by MakeFunctype mismatch in decoder: want struct type %s": 1,
                "got non-structfound bad pointer in Go heap (incorrect use of unsafe or cgo?)runtime: internal error: misuse of lockOSThread/unlockOSThreadstrings.Reader.UnreadRune: previous operation was not ReadRuneABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_decoding array or slice: length exceeds input size (%d elements)json: invalid number literal, trying to unmarshal %q into Number": 1,
                "runtime.SetFinalizer: pointer not at beginning of allocated blockstrconv: internal error: extFloat.FixedDecimal called with n == 0decoding int array or slice: length exceeds input size (%d elements)runtime:greyobject: checkmarks finds unexpected unmarked object obj=decoding bool array or slice: length exceeds input size (%d elements)decoding int8 array or slice: length exceeds input size (%d elements)decoding uint array or slice: length exceeds input size (%d elements)Here be dragons: evaluate_nodeObjectLiteral: invalid property.Kind: %vbytes.Buffer: UnreadByte: previous operation was not a successful readdecoding int16 array or slice: length exceeds input size (%d elements)decoding int32 array or slice: length exceeds input size (%d elements)decoding int64 array or slice: length exceeds input size (%d elements)decoding string array or slice: length exceeds input size (%d elements)decoding uint16 array or slice: length exceeds input size (%d elements)decoding uint32 array or slice: length exceeds input size (%d elements)decoding uint64 array or slice: length exceeds input size (%d elements)json: invalid use of ,string struct tag, trying to unmarshal %q into %vtoo many concurrent operations on a single file or socket (max 1048575) can only be decoded from remote interface type": 1,
                "received concrete type decoding float32 array or slice: length exceeds input size (%d elements)decoding float64 array or slice: length exceeds input size (%d elements)decoding uintptr array or slice: length exceeds input size (%d elements)[int, error] = memorymodule.MemoryRunBinary(binary []byte, args []string)bytes.Buffer: UnreadRune: previous operation was not a successful ReadRunedecoding complex64 array or slice: length exceeds input size (%d elements)can't convert object": 1,
                "field %q was supplied but does not exist on target %vdecoding complex128 array or slice: length exceeds input size (%d elements)runtime: found space for saved base pointer, but no framepointer experiment": 1,
                "QueryPerformanceFrequency syscall returned zero, running on unsupported hardwarejson: invalid use of ,string struct tag, trying to unmarshal unquoted value into %vreflect.Value.Interface: cannot return value obtained from unexported field or methodQueryPerformanceFrequency overflow 32 bit divider, check nosplit discussion to proceedconverting JavaScript values to Go functions with more than one return value is currently not supportedlistGroupsForUsernameAndDomain: NetUserGetLocalGroups() returned an empty list for domain: %s, username: %sNoMatchEmptyMatchLiteralCharClassAnyCharNotNLAnyCharBeginLineEndLineBeginTextEndTextWordBoundaryNoWordBoundaryCaptureStarPlusQuestRepeatConcatAlternate000102030405060708091011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991QCUfLjDp4vy4lKUeCNn3lI1zA6xFirBEPNr1Py6fLfW0lxkNae0LQmFaL0jyIsLdxpQlesX09VZvGjhKsWrh6hnpOjPlTX8o8+wlP5BvT4Y+S2/td83u4TUQ2YtR21hIUOsgtu5rGQ027bZ2dGE64/tbPvNldaRzbzmHSIAZmPEln9RBkDLa9NvpFgXJU09bH8Bmbpd053oZ1p5Y/6U/B8Pj1HVylr1CVUeEgJsvEANpXEXVKAyttQASQxJMXG1sogTQvUqL2NsWAhKi/rEJa8dl7oCXkvhH+IWfB8+Eb2jluemKJaDu3INKsUU/k6xw9Z+Qsc1quwT5+4niWThNtLJVLV21BUUuQWQlV0wv6JfgQ5qmRNn1JYlARGNo/pxdl5adl3oiEQA0W3b5aGIww0iw6ShXIYMy73RyKAKxoVjNxuFD8CtC6G/CKcYlxR4xVlFGqtLAR07OL/dVvKky/cmtaZNaZSkXa1n8y65w21AO1Mrsvv1JCfY/qrF/3TyFa9iQzknrJ+Vmj68/Gz5Y1q3GVzNBvkiXJ1gnSvHCJGnat1b4mVLNnXN/b3vVOeLgTG1zXTBShwdknQ0aMer7BGIrbIz5YS9inVKVT+vVj3EZqSNaAvZEy278qE3n8kZi3jZDAoKH6tisvxXaQSqQ95brAembFWX3hEdcMibB0FV92fFkAoHrH5/Qm2h2WRpHJ4FvXPYeOLFEZ3r/uDtdbamlLissmkb2Vrv2J8rjmjCGB1eZt/WZeRz2A/YsZbte++4jDiRPSOU0IirI5ZOuKc/z/2l1C0RipNMKwEv+VTj99HSxb21keYHnCgeweesFUoXNNjafg/8WrD2lvEM1cKH3y7VdidAtqmXZunAZwGrf1lAbPFHVQVUQ1qvwU517+7WqP+EZNtToD9F47LTF3LTQe017Ve+i4HO7repAJCX83WNAjR20RF23iQV8bU=UBFquAeMfqy3WF5z4XQC+anQze8i5wMfQKsiu3voKRGpQWimpLKe0oUDtpWwoKd1wp22tv48KPKHbkynXjpOMA9tGJYmjtww8N+Kbh2xfBlXiOska+ct9paWowo5/CLUU1ASGMdNIfcnpd3xQql8kwthbLnEzOkBBljMxEN/t+GpqecjAcxRk6wJruHtK3VUW/lJcC4uBsJO5jfNNknG2/AmFYDmccCgCzoxPRypApYvfC3LAW9G4LNm8dLaF+a++OxzqrQjee8JT/tgeGstfqAJvw8pPLBsDSO2SgPHOXRRByBtsAOO4UHJhBqlkuqHs0y9y6vfefgHyo87KhHoWDbx7QoOEIA/E+kAUn+sOm6+Z7Z+nLt5ixgH7r/pBz0KqCB2i4mMtnHzQjZwZSwibpKLKA==wQGruizszleFDQoiwuOoEeQTfExJllA5J5GMg6dxyIFy3Km7L6em2UcoKMynSqChTUsZsCVIGekpPYfYGn8m//w4+BxZoFrqR9UB+JxQUcZD1Svn1c99i1asgjCrzRTZHtogwNOCRCqST+f48/X16Evpr5NN8MqtWwYEORT2/6ymgoSihRfJEwK+hwyyJ3tI3soT8gxazpup6WaK+or56OlE7JquF+ZMfAiZgsZQ/FDEvkntENHANHTRDrVKOQmuuxQEhwfKaFx7IFKb6y6CaHnSi55Vm8LEABuENtB7t3lkoko+jb7Kw3EfkR0O4x+2g05/XqhfZ6iJAsQ2z1GudiAIX9GeDRr4bo+psvkn8M6UTZ4HMb23iZn3CbtOZPaNSvDquwqT994gcq5MHj8J1pXroA==T12bU6EU4+qG20SFDLY0s2N+N7KKOgiP6z2nREtysf5EdHVTgNQTRsQvXtri0TP3RyCc8u+QdZ58k0a4ca+MCDVsRtHirs2yicPyvR/F03Laa7eY2MmCB7JQ55eLO7vkBH76jPN0j/ndoeuz7HU+DT97+e+KfrwXr/HgOPUvfN2Yj+7Xf2VMEsAuvPKATQIoFRWkhMD7B48+mBNx52GSxiP4wzRTA4I0wxyBOGkRvJPuYR21kKUHRCvr44884DyCZf8XrgYSa/kbxsTpWGB/UtoQs5cJg/msHp0v4ZQpZrZKLkfwcUyzMJJrqvn5swjMkolCy74tjagpycdF6OHgwfCHVonyuY78DN9sTgBKluI+9MmpB8SOlbNTxmlfcST9ToUuwv/TLMmUXjo2V+DDd5SUBw==89+lAHF9WaBRX54eplqNsIYrrvXrLAKhUj95abqDD5KCatrWEy1N+TI3C035zdBBlsnUF6xV4BZCfz3mDAPtMnn3mhddZYNghxhEXVUkThPUtLgDytniTxfvBbi3Qjj+FT+Q0495Cp9l46Wgy1Qq4kaeV14XHg/xhNojntasFe/yetR3BhD67A+lYPLxiXl8oSXKqIRCPLdXFhUdNfwWUH6rmotPcG1TSidUBga7UEk0cBWQhHKrk5KBmWDmjJvODKWJWZbTgRpvVajT6xCvRBtKi4bnGWCJd30MFS35dEpOZ+3UOFRySbShnPSnvpLaqsLPQTZJ1fjor1MCig4YUshaFAR+Et6NY9wVNgCsn8ciSLkgI1eCvejd/YUypdNca4Ib0EFmwwKs0KqT5wZWIxLT+A==": 1,
                "#\" ###": 1,
                "KKKHHH": 1,
                "GGGGGGG": 1,
                "#!a A`": 1,
                "`( 0)@": 1,
                "!a`d A": 1,
                "%%%%%!  %": 1,
                "'gcedD": 1,
                "` 01($@": 1,
                "@DLE (A": 1,
                "oommmmmmm": 1,
                "@BFGED": 2,
                "333##\"\"": 1,
                "\"#2:>6\"\"": 1,
                "\" $,@A": 1,
                "(!#cbd`": 1,
                "@DLE (BA": 1,
                "----------": 1,
                "(89==9": 1,
                "@BDdeumd": 1,
                "'''''''!!  '&": 1,
                "@` !AH": 1,
                "#######!": 1,
                "!\"b`@B": 1,
                "::8800": 1,
                "@BJkKiI": 1,
                ")!a @DL": 1,
                "@B! \"$": 1,
                "@BFOoge`a": 1,
                "Hh`d fbca@q": 1,
                "<<8800": 1,
                "@BFGONMLHI": 1,
                "@`ACca": 1,
                "#%$c@`": 1,
                "FDB#b\"": 1,
                "(*:89)": 1,
                "@BFGONnmlhHI": 1,
                "@BFGONMLD": 1,
                "0088<<>>?<80": 1,
                "$\"b `@": 1,
                "----,,,,,,,,,((((-": 1,
                "@@``ppxx||~~": 1,
                ")!!!!!": 1,
                "===55540": 1,
                "440=======": 1,
                ",$NBJC": 1,
                "%!! $$              !!  %": 1,
                "--))))))))))))))))))))))))())(": 1,
                "g(g(g(g(G(G(C(@(@(": 1,
                "(C(C(@(": 1,
                "K&KfKv": 1,
                ")!!!!!!!!!!": 1,
                "B@@A@`": 1,
                "))))!!!": 1,
                "))))))))!!": 1,
                "!!!!!!!!!!": 1,
                "!!!!!!": 1,
                "!\"$%&*,-.2568<=BCDEIQTUVX\\befhj": 1,
                "$\"\"\"\"'I$": 1,
                "DDDDTU": 1,
                "UUUUUU": 3,
                "UUUUUUU": 2,
                "UUUUUUUUUU": 1,
                "UUUUUUUUUUU": 1,
                "UUUUUUUUUUUUUUUUUUUUU": 1,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"": 1,
                "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU": 1,
                "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU": 1,
                "UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU": 1,
                "<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<": 1,
                "5UUUUUUMS": 1,
                "<<<<<<<<<<<<<<<<": 1,
                "xxxxxxxxxxxxxxxx": 1,
                "@@@@@@@@@@@@@@@@": 2,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"": 1,
                "DDDDDDDDDDDDD": 1,
                "$$$$$$$$$$$$$$$$": 2,
                "HHHHHHHHHHHHHHHH": 2,
                "!!!!!!!!!!!!!!!!": 2,
                "BBBBBBBBBBBBBBBB": 1,
                "BBBBBBBBBBBBBB": 1,
                "UUQUUUUUUUU": 1,
                "mUUUUUUUUUU": 1,
                "UUUUUUUU": 1,
                "TUUUUUUUUUUUUUUU": 1,
                "\\x08\\x0": 1,
                "S=v<y5": 1,
                "?333333": 2,
                "?ffffff": 2,
                "333333": 1,
                "/opt/go": 1,
                "call frame too large": 1,
                "@UUUUUU": 1,
                "?UUUUUU": 1,
                "&)06=?AHL": 1,
                "&)06=?FJP": 1,
                "!&*039@HNQX": 1,
                "$057@MS^": 1,
                "#%()*+-,": 1,
                "!%%&',-../^": 1,
                "go.buildid": 1,
                "sync/atomic.(*Value).Load": 1,
                "sync/atomic.(*Value).Store": 1,
                "sync/atomic.CompareAndSwapUintptr": 1,
                "sync/atomic.StoreUint32": 1,
                "sync/atomic.StoreUintptr": 1,
                "internal/cpu.Initialize": 1,
                "internal/cpu.processOptions": 1,
                "internal/cpu.indexByte": 1,
                "internal/cpu.doinit": 1,
                "internal/cpu.isSet": 1,
                "internal/cpu.cpuid": 1,
                "internal/cpu.xgetbv": 1,
                "type..hash.internal/cpu.CacheLinePad": 1,
                "type..eq.internal/cpu.CacheLinePad": 1,
                "type..hash.internal/cpu.arm64": 1,
                "type..eq.internal/cpu.arm64": 1,
                "type..hash.internal/cpu.option": 1,
                "type..eq.internal/cpu.option": 1,
                "type..hash.internal/cpu.x86": 1,
                "type..eq.internal/cpu.x86": 1,
                "type..hash.[15]internal/cpu.option": 1,
                "type..eq.[15]internal/cpu.option": 1,
                "runtime/internal/atomic.Cas64": 1,
                "runtime/internal/atomic.Casuintptr": 1,
                "runtime/internal/atomic.Storeuintptr": 1,
                "runtime/internal/atomic.Store": 1,
                "runtime/internal/atomic.Store64": 1,
                "internal/bytealg.countGeneric": 1,
                "internal/bytealg.countGenericString": 1,
                "internal/bytealg.init.0": 1,
                "internal/bytealg.init": 1,
                "runtime.cmpstring": 1,
                "cmpbody": 1,
                "internal/bytealg.Count": 1,
                "internal/bytealg.CountString": 1,
                "countbody": 1,
                "internal/bytealg.Equal": 1,
                "runtime.memequal": 1,
                "runtime.memequal_varlen": 1,
                "memeqbody": 1,
                "internal/bytealg.Index": 1,
                "internal/bytealg.IndexString": 1,
                "indexbody": 1,
                "internal/bytealg.IndexByte": 1,
                "internal/bytealg.IndexByteString": 1,
                "indexbytebody": 1,
                "runtime.memhash0": 1,
                "runtime.memhash8": 1,
                "runtime.memhash16": 1,
                "runtime.memhash128": 1,
                "runtime.memhash_varlen": 1,
                "runtime.strhash": 1,
                "runtime.f32hash": 1,
                "runtime.fastrand": 1,
                "runtime.f64hash": 1,
                "runtime.c64hash": 1,
                "runtime.c128hash": 1,
                "runtime.interhash": 1,
                "runtime.isDirectIface": 1,
                "runtime.nilinterhash": 1,
                "runtime.memequal0": 1,
                "runtime.memequal8": 1,
                "runtime.memequal16": 1,
                "runtime.memequal32": 1,
                "runtime.memequal64": 1,
                "runtime.memequal128": 1,
                "runtime.f32equal": 1,
                "runtime.f64equal": 1,
                "runtime.c64equal": 1,
                "runtime.c128equal": 1,
                "runtime.strequal": 1,
                "runtime.interequal": 1,
                "runtime.nilinterequal": 1,
                "runtime.efaceeq": 1,
                "runtime.ifaceeq": 1,
                "runtime.alginit": 1,
                "runtime.initAlgAES": 1,
                "runtime.atomicwb": 1,
                "runtime.(*wbBuf).putFast": 1,
                "runtime.atomicstorep": 1,
                "sync/atomic.StorePointer": 1,
                "sync/atomic.CompareAndSwapPointer": 1,
                "runtime.cgoUse": 1,
                "runtime.cgocall": 1,
                "runtime.cgocallbackg": 1,
                "runtime.lockOSThread": 1,
                "runtime.dolockOSThread": 1,
                "runtime.(*guintptr).set": 1,
                "runtime.(*muintptr).set": 1,
                "runtime.exit": 1,
                "runtime.cgocallbackg1": 1,
                "runtime.unwindm": 1,
                "runtime.acquirem": 1,
                "runtime.releasem": 1,
                "runtime.cgoCheckPointer": 1,
                "runtime.cgoCheckArg": 1,
                "runtime.add": 1,
                "runtime.inheap": 1,
                "runtime.(*structfield).offset": 1,
                "runtime.cgoCheckUnknownPointer": 1,
                "runtime.activeModules": 1,
                "runtime.cgoInRange": 1,
                "runtime.heapBitsForAddr": 1,
                "runtime.arenaIndex": 1,
                "runtime.arenaIdx.l1": 1,
                "runtime.arenaIdx.l2": 1,
                "runtime.heapBits.morePointers": 1,
                "runtime.heapBits.bits": 1,
                "runtime.heapBits.isPointer": 1,
                "runtime.heapBits.next": 1,
                "runtime.add1": 1,
                "runtime.cgoIsGoPointer": 1,
                "runtime._cgo_panic_internal": 1,
                "runtime.gostringnocopy": 1,
                "runtime.cgoCheckWriteBarrier": 1,
                "runtime.cgoCheckMemmove": 1,
                "runtime.cgoCheckSliceCopy": 1,
                "runtime.cgoCheckTypedBlock": 1,
                "runtime.spanOfUnchecked": 1,
                "runtime.cgoCheckBits": 1,
                "runtime.addb": 1,
                "runtime.cgoCheckUsingType": 1,
                "runtime.makechan": 1,
                "runtime.(*hchan).raceaddr": 1,
                "runtime.chansend1": 1,
                "runtime.chansend": 1,
                "runtime.(*waitq).enqueue": 1,
                "runtime.goparkunlock": 1,
                "runtime.chanbuf": 1,
                "runtime.send": 1,
                "runtime.sendDirect": 1,
                "runtime.recvDirect": 1,
                "runtime.closechan": 1,
                "runtime.(*gList).push": 1,
                "runtime.(*gList).empty": 1,
                "runtime.(*gList).pop": 1,
                "runtime.chanrecv1": 1,
                "runtime.chanrecv2": 1,
                "runtime.chanrecv": 1,
                "runtime.recv": 1,
                "runtime.selectnbrecv": 1,
                "reflect.chansend": 1,
                "reflect.chanrecv": 1,
                "reflect.chanlen": 1,
                "reflect.chancap": 1,
                "reflect.chanclose": 1,
                "runtime.(*waitq).dequeue": 1,
                "runtime.init.0": 1,
                "runtime.GOMAXPROCS": 1,
                "runtime.debugCallCheck": 1,
                "runtime.debugCallWrap": 1,
                "runtime.dumpregs": 1,
                "runtime.gogetenv": 1,
                "runtime.envKeyEqual": 1,
                "runtime.lowerASCII": 1,
                "runtime.(*TypeAssertionError).RuntimeError": 1,
                "runtime.(*TypeAssertionError).Error": 1,
                "runtime.errorString.RuntimeError": 1,
                "runtime.errorString.Error": 1,
                "runtime.plainError.RuntimeError": 1,
                "runtime.plainError.Error": 1,
                "runtime.printany": 1,
                "runtime.typestring": 1,
                "runtime.panicwrap": 1,
                "runtime.Caller": 1,
                "runtime.CallersFrames": 1,
                "runtime.GOROOT": 1,
                "runtime.float64frombits": 1,
                "runtime.memhash": 1,
                "runtime.readUnaligned64": 1,
                "runtime.rotl_31": 1,
                "runtime.readUnaligned32": 1,
                "runtime.memhash32": 1,
                "runtime.memhash64": 1,
                "runtime.getitab": 1,
                "runtime.(*_type).nameOff": 1,
                "runtime.(*itabTableType).find": 1,
                "runtime.itabHashFunc": 1,
                "runtime.itabAdd": 1,
                "runtime.(*itabTableType).add": 1,
                "runtime.(*itab).init": 1,
                "runtime.(*_type).typeOff": 1,
                "runtime.name.isExported": 1,
                "runtime.itabsinit": 1,
                "runtime.panicdottypeE": 1,
                "runtime.panicdottypeI": 1,
                "runtime.convT2E": 1,
                "runtime.convT16": 1,
                "runtime.convT32": 1,
                "runtime.convT64": 1,
                "runtime.convTstring": 1,
                "runtime.convTslice": 1,
                "runtime.convT2I": 1,
                "runtime.convI2I": 1,
                "runtime.assertI2I": 1,
                "runtime.assertI2I2": 1,
                "runtime.assertE2I": 1,
                "runtime.assertE2I2": 1,
                "reflect.ifaceE2I": 1,
                "runtime.iterate_itabs": 1,
                "runtime.(*lfstack).push": 1,
                "runtime.lfstackPack": 1,
                "runtime.lfstackUnpack": 1,
                "runtime.(*lfstack).pop": 1,
                "runtime.lfnodeValidate": 1,
                "runtime.lock": 1,
                "runtime.osyield": 1,
                "runtime.unlock": 1,
                "runtime.notewakeup": 1,
                "runtime.notesleep": 1,
                "runtime.notetsleep_internal": 1,
                "runtime.notetsleep": 1,
                "runtime.notetsleepg": 1,
                "runtime.mallocinit": 1,
                "runtime.(*mheap).sysAlloc": 1,
                "runtime.round": 1,
                "runtime.(*fixalloc).free": 1,
                "runtime.sysReserveAligned": 1,
                "runtime.(*mcache).nextFree": 1,
                "runtime.mallocgc": 1,
                "runtime.gomcache": 1,
                "runtime.nextFreeFast": 1,
                "runtime.gcTrigger.test": 1,
                "runtime.makeSpanClass": 1,
                "runtime.bool2int": 1,
                "runtime.(*mspan).base": 1,
                "runtime.largeAlloc": 1,
                "runtime.newobject": 1,
                "reflect.unsafe_New": 1,
                "runtime.newarray": 1,
                "reflect.unsafe_NewArray": 1,
                "runtime.profilealloc": 1,
                "runtime.nextSample": 1,
                "runtime.fastexprand": 1,
                "runtime.fastlog2": 1,
                "runtime.float64bits": 1,
                "runtime.persistentalloc": 1,
                "runtime.persistentalloc1": 1,
                "runtime.(*notInHeap).add": 1,
                "runtime.inPersistentAlloc": 1,
                "runtime.(*linearAlloc).alloc": 1,
                "runtime.(*hmap).incrnoverflow": 1,
                "runtime.(*hmap).newoverflow": 1,
                "runtime.(*bmap).overflow": 1,
                "runtime.(*bmap).setoverflow": 1,
                "runtime.(*hmap).createOverflow": 1,
                "runtime.makemap_small": 1,
                "runtime.makemap": 1,
                "runtime.overLoadFactor": 1,
                "runtime.bucketShift": 1,
                "runtime.makeBucketArray": 1,
                "runtime.roundupsize": 1,
                "runtime.mapaccess1": 1,
                "runtime.bucketMask": 1,
                "runtime.(*hmap).sameSizeGrow": 1,
                "runtime.evacuated": 1,
                "runtime.tophash": 1,
                "runtime.(*maptype).indirectkey": 1,
                "runtime.(*maptype).indirectvalue": 1,
                "runtime.(*maptype).hashMightPanic": 1,
                "runtime.mapaccess2": 1,
                "runtime.mapaccessK": 1,
                "runtime.mapassign": 1,
                "runtime.isEmpty": 1,
                "runtime.(*hmap).growing": 1,
                "runtime.tooManyOverflowBuckets": 1,
                "runtime.(*maptype).needkeyupdate": 1,
                "runtime.mapdelete": 1,
                "runtime.mapiterinit": 1,
                "runtime.mapiternext": 1,
                "runtime.(*maptype).reflexivekey": 1,
                "runtime.(*hmap).oldbucketmask": 1,
                "runtime.(*hmap).noldbuckets": 1,
                "runtime.hashGrow": 1,
                "runtime.growWork": 1,
                "runtime.evacuate": 1,
                "runtime.advanceEvacuationMark": 1,
                "runtime.bucketEvacuated": 1,
                "reflect.makemap": 1,
                "runtime.ismapkey": 1,
                "reflect.mapaccess": 1,
                "reflect.mapassign": 1,
                "reflect.mapdelete": 1,
                "reflect.mapiterinit": 1,
                "reflect.mapiternext": 1,
                "reflect.mapiterkey": 1,
                "reflect.mapitervalue": 1,
                "reflect.maplen": 1,
                "runtime.mapaccess1_fast32": 1,
                "runtime.(*bmap).keys": 1,
                "runtime.mapaccess2_fast32": 1,
                "runtime.mapassign_fast32": 1,
                "runtime.mapdelete_fast32": 1,
                "runtime.growWork_fast32": 1,
                "runtime.evacuate_fast32": 1,
                "runtime.mapaccess1_fast64": 1,
                "runtime.mapaccess2_fast64": 1,
                "runtime.mapassign_fast64": 1,
                "runtime.mapassign_fast64ptr": 1,
                "runtime.growWork_fast64": 1,
                "runtime.evacuate_fast64": 1,
                "runtime.mapaccess1_faststr": 1,
                "runtime.mapaccess2_faststr": 1,
                "runtime.mapassign_faststr": 1,
                "runtime.mapdelete_faststr": 1,
                "runtime.growWork_faststr": 1,
                "runtime.evacuate_faststr": 1,
                "runtime.typedmemmove": 1,
                "reflect.typedmemmove": 1,
                "reflect.typedmemmovepartial": 1,
                "runtime.reflectcallmove": 1,
                "runtime.typedslicecopy": 1,
                "reflect.typedslicecopy": 1,
                "runtime.typedmemclr": 1,
                "reflect.typedmemclr": 1,
                "reflect.typedmemclrpartial": 1,
                "runtime.memclrHasPointers": 1,
                "runtime.(*mspan).refillAllocCache": 1,
                "runtime.(*gcBits).bytep": 1,
                "runtime.(*mspan).nextFreeIndex": 1,
                "runtime.markBitsForAddr": 1,
                "runtime.spanOf": 1,
                "runtime.(*mspan).objIndex": 1,
                "runtime.(*mspan).markBitsForIndex": 1,
                "runtime.(*gcBits).bitp": 1,
                "runtime.findObject": 1,
                "runtime.heapBits.nextArena": 1,
                "runtime.heapBits.forward": 1,
                "runtime.heapBits.forwardOrBoundary": 1,
                "runtime.bulkBarrierPreWrite": 1,
                "runtime.puintptr.ptr": 1,
                "runtime.bulkBarrierPreWriteSrcOnly": 1,
                "runtime.bulkBarrierBitmap": 1,
                "runtime.typeBitsBulkBarrier": 1,
                "runtime.heapBits.initSpan": 1,
                "runtime.(*mspan).layout": 1,
                "runtime.newAllocBits": 1,
                "runtime.heapBits.initCheckmarkSpan": 1,
                "runtime.heapBits.clearCheckmarkSpan": 1,
                "runtime.(*mspan).countAlloc": 1,
                "runtime.heapBitsSetType": 1,
                "runtime.heapBitsSetTypeGCProg": 1,
                "runtime.progToPointerMask": 1,
                "runtime.runGCProg": 1,
                "runtime.subtract1": 1,
                "runtime.subtractb": 1,
                "runtime.materializeGCProg": 1,
                "runtime.allocmcache": 1,
                "runtime.freemcache": 1,
                "runtime.(*mcache).refill": 1,
                "runtime.(*mcache).releaseAll": 1,
                "runtime.(*mcache).prepareForSweep": 1,
                "runtime.(*mcentral).cacheSpan": 1,
                "runtime.spanClass.sizeclass": 1,
                "runtime.traceHeapAlloc": 1,
                "runtime.(*mcentral).uncacheSpan": 1,
                "runtime.(*mcentral).freeSpan": 1,
                "runtime.(*mspan).inList": 1,
                "runtime.(*mcentral).grow": 1,
                "runtime.sysAlloc": 1,
                "runtime.sysUnused": 1,
                "runtime.sysUsed": 1,
                "runtime.sysFree": 1,
                "runtime.sysFault": 1,
                "runtime.sysReserve": 1,
                "runtime.sysMap": 1,
                "runtime.queuefinalizer": 1,
                "runtime.wakefing": 1,
                "runtime.createfing": 1,
                "runtime.runfinq": 1,
                "runtime.SetFinalizer": 1,
                "runtime.(*functype).dotdotdot": 1,
                "runtime.(*functype).in": 1,
                "runtime.(*functype).out": 1,
                "runtime.(*fixalloc).alloc": 1,
                "runtime.gcinit": 1,
                "runtime.readgogc": 1,
                "runtime.atoi32": 1,
                "runtime.gcenable": 1,
                "runtime/debug.setGCPercent": 1,
                "runtime.(*gcControllerState).startCycle": 1,
                "runtime.(*gcControllerState).revise": 1,
                "runtime.(*gcControllerState).endCycle": 1,
                "runtime.(*gcControllerState).enlistWorker": 1,
                "runtime.fastrandn": 1,
                "runtime.preemptone": 1,
                "runtime.(*gcControllerState).findRunnableGCWorker": 1,
                "runtime.gcMarkWorkAvailable": 1,
                "runtime.(*gcWork).empty": 1,
                "runtime.(*lfstack).empty": 1,
                "runtime.(*gcControllerState).findRunnableGCWorker.func1": 1,
                "runtime.guintptr.ptr": 1,
                "runtime.pollFractionalWorkerExit": 1,
                "runtime.gcSetTriggerRatio": 1,
                "runtime.isSweepDone": 1,
                "runtime.GC": 1,
                "runtime.Gosched": 1,
                "runtime.gcWaitOnMark": 1,
                "runtime.gcStart": 1,
                "runtime.semacquire": 1,
                "runtime.setGCPhase": 1,
                "runtime.gcBgMarkPrepare": 1,
                "runtime.semrelease": 1,
                "runtime.traceGCSTWStart": 1,
                "runtime.traceGCStart": 1,
                "runtime.gcMarkDone": 1,
                "runtime.gcMarkTermination": 1,
                "runtime.traceGCDone": 1,
                "runtime.gcBgMarkStartWorkers": 1,
                "runtime.noteclear": 1,
                "runtime.gcBgMarkWorker": 1,
                "runtime.(*puintptr).set": 1,
                "runtime.gcMark": 1,
                "runtime.gcSweep": 1,
                "runtime.gcResetMarkState": 1,
                "sync.runtime_registerPoolCleanup": 1,
                "runtime.clearpools": 1,
                "runtime.itoaDiv": 1,
                "runtime.fmtNSAsMS": 1,
                "runtime.(*treapNode).pred": 1,
                "runtime.(*treapNode).succ": 1,
                "runtime.treapIter.prev": 1,
                "runtime.(*mTreap).start": 1,
                "runtime.(*mTreap).end": 1,
                "runtime.(*mTreap).insert": 1,
                "runtime.(*mTreap).removeNode": 1,
                "runtime.(*mTreap).find": 1,
                "runtime.(*mTreap).removeSpan": 1,
                "runtime.(*mTreap).erase": 1,
                "runtime.(*mTreap).rotateLeft": 1,
                "runtime.(*mTreap).rotateRight": 1,
                "runtime.gcMarkRootPrepare": 1,
                "runtime.gcMarkRootPrepare.func1": 1,
                "runtime.(*gcSweepBuf).numBlocks": 1,
                "runtime.gcMarkRootCheck": 1,
                "runtime.readgstatus": 1,
                "runtime.markroot": 1,
                "runtime.markrootBlock": 1,
                "runtime.markrootFreeGStacks": 1,
                "runtime.(*gList).pushAll": 1,
                "runtime.(*gQueue).empty": 1,
                "runtime.markrootSpans": 1,
                "runtime.gcAssistAlloc": 1,
                "runtime.traceGCMarkAssistDone": 1,
                "runtime.traceGCMarkAssistStart": 1,
                "runtime.gcAssistAlloc1": 1,
                "runtime.gcWakeAllAssists": 1,
                "runtime.(*gQueue).popList": 1,
                "runtime.gcParkAssist": 1,
                "runtime.(*gQueue).pushBack": 1,
                "runtime.gcFlushBgCredit": 1,
                "runtime.(*gQueue).pop": 1,
                "runtime.scanstack": 1,
                "runtime.(*stackScanState).buildIndex": 1,
                "runtime.(*stackObject).setType": 1,
                "runtime.dematerializeGCProg": 1,
                "runtime.scanframeworker": 1,
                "runtime.gcDrain": 1,
                "runtime.(*gcWork).tryGetFast": 1,
                "runtime.gcDrainN": 1,
                "runtime.scanblock": 1,
                "runtime.scanobject": 1,
                "runtime.spanClass.noscan": 1,
                "runtime.(*gcWork).putFast": 1,
                "runtime.shade": 1,
                "runtime.greyobject": 1,
                "runtime.markBits.isMarked": 1,
                "runtime.heapBits.isCheckmarked": 1,
                "runtime.heapBits.setCheckmarked": 1,
                "runtime.(*mspan).isFree": 1,
                "runtime.markBits.setMarked": 1,
                "runtime.pageIndexOf": 1,
                "runtime.gcDumpObject": 1,
                "runtime.gcmarknewobject": 1,
                "runtime.gcMarkTinyAllocs": 1,
                "runtime.initCheckmarks": 1,
                "runtime.clearCheckmarks": 1,
                "runtime.init.1": 1,
                "runtime.(*stackScanState).putPtr": 1,
                "runtime.(*stackScanState).getPtr": 1,
                "runtime.(*stackScanState).addObject": 1,
                "runtime.binarySearchTree": 1,
                "runtime.(*stackScanState).findObject": 1,
                "runtime.finishsweep_m": 1,
                "runtime.bgsweep": 1,
                "T2S,T2": 1,
                "runtime.sweepone": 1,
                "runtime.(*gcSweepBuf).pop": 1,
                "runtime.(*mspan).ensureSwept": 1,
                "runtime.(*mspan).sweep": 1,
                "runtime.markBits.setMarkedNonAtomic": 1,
                "runtime.(*mspan).markBitsForBase": 1,
                "runtime.(*mspan).allocBitsForIndex": 1,
                "runtime.(*markBits).advance": 1,
                "runtime.deductSweepCredit": 1,
                "runtime.clobberfree": 1,
                "runtime.(*gcSweepBuf).push": 1,
                "runtime.(*gcSweepBuf).block": 1,
                "runtime.init.2": 1,
                "runtime.(*gcWork).init": 1,
                "runtime.(*gcWork).put": 1,
                "runtime.(*gcWork).putBatch": 1,
                "runtime.(*gcWork).tryGet": 1,
                "runtime.(*gcWork).dispose": 1,
                "runtime.(*gcWork).balance": 1,
                "runtime.(*workbuf).checknonempty": 1,
                "runtime.(*workbuf).checkempty": 1,
                "runtime.getempty": 1,
                "runtime.putempty": 1,
                "runtime.putfull": 1,
                "runtime.trygetfull": 1,
                "runtime.handoff": 1,
                "runtime.prepareFreeWorkbufs": 1,
                "runtime.freeSomeWbufs": 1,
                "runtime.(*mSpanList).isEmpty": 1,
                "runtime.(*mheap).coalesce": 1,
                "runtime.(*mspan).released": 1,
                "runtime.(*mspan).physPageBounds": 1,
                "runtime.(*mspan).scavenge": 1,
                "runtime.recordspan": 1,
                "runtime.inHeapOrStack": 1,
                "runtime.spanOfHeap": 1,
                "runtime.(*mheap).init": 1,
                "runtime.(*fixalloc).init": 1,
                "runtime.(*mcentral).init": 1,
                "runtime.(*mSpanList).init": 1,
                "runtime.(*mheap).reclaim": 1,
                "runtime.(*mheap).reclaimChunk": 1,
                "runtime.(*mheap).alloc_m": 1,
                "runtime.(*mheap).alloc": 1,
                "runtime.(*mheap).allocManual": 1,
                "runtime.(*mheap).setSpans": 1,
                "runtime.(*mheap).pickFreeSpan": 1,
                "runtime.(*mheap).allocSpanLocked": 1,
                "runtime.(*mspan).init": 1,
                "runtime.(*mheap).setSpan": 1,
                "runtime.(*mheap).grow": 1,
                "runtime.(*mheap).freeSpan": 1,
                "runtime.(*mheap).freeManual": 1,
                "runtime.(*mheap).freeSpanLocked": 1,
                "runtime.(*mheap).scavengeLargest": 1,
                "runtime.(*treapIter).valid": 1,
                "runtime.(*treapIter).span": 1,
                "runtime.(*mheap).scavengeAll": 1,
                "runtime.treapIter.next": 1,
                "runtime.(*mheap).scavenge": 1,
                "runtime.(*mSpanList).remove": 1,
                "runtime.(*mSpanList).insert": 1,
                "runtime.(*mSpanList).insertBack": 1,
                "runtime.(*mSpanList).takeAll": 1,
                "runtime.addspecial": 1,
                "runtime.removespecial": 1,
                "runtime.addfinalizer": 1,
                "runtime.removefinalizer": 1,
                "6[.+-.": 1,
                "runtime.setprofilebucket": 1,
                "runtime.freespecial": 1,
                "6g.+-].+-:": 1,
                "runtime.newMarkBits": 1,
                "runtime.(*gcBitsArena).tryAlloc": 1,
                "runtime.nextMarkBitArenaEpoch": 1,
                "runtime.newArenaMayUnlock": 1,
                "runtime.newBucket": 1,
                "runtime.(*bucket).mp": 1,
                "runtime.(*bucket).bp": 1,
                "runtime.stkbucket": 1,
                "runtime.(*bucket).stk": 1,
                "runtime.eqslice": 1,
                "runtime.mProf_NextCycle": 1,
                "runtime.mProf_Flush": 1,
                "runtime.mProf_FlushLocked": 1,
                "runtime.(*memRecordCycle).add": 1,
                "runtime.mProf_PostSweep": 1,
                "runtime.mProf_Malloc": 1,
                "runtime.mProf_Free": 1,
                "runtime.blockevent": 1,
                "runtime.blocksampled": 1,
                "runtime.saveblockevent": 1,
                "sync.event": 1,
                "runtime.(*StackRecord).Stack": 1,
                "runtime.(*MemProfileRecord).InUseBytes": 1,
                "runtime.(*MemProfileRecord).InUseObjects": 1,
                "runtime.(*MemProfileRecord).Stack": 1,
                "runtime.tracealloc": 1,
                "runtime.tracefree": 1,
                "runtime.tracegc": 1,
                "runtime.init.3": 1,
                "runtime.cachestats": 1,
                "runtime.flushmcache": 1,
                "runtime.purgecachedstats": 1,
                "runtime.mSysStatInc": 1,
                "runtime.mSysStatDec": 1,
                "runtime.(*wbBuf).reset": 1,
                "runtime.wbBufFlush": 1,
                "runtime.(*wbBuf).discard": 1,
                "runtime.wbBufFlush1": 1,
                "internal/poll.runtime_pollServerInit": 1,
                "internal/poll.runtime_pollOpen": 1,
                "internal/poll.runtime_pollClose": 1,
                "runtime.(*pollCache).free": 1,
                "internal/poll.runtime_pollReset": 1,
                "runtime.netpollcheckerr": 1,
                "internal/poll.runtime_pollWait": 1,
                "internal/poll.runtime_pollWaitCanceled": 1,
                "internal/poll.runtime_pollSetDeadline": 1,
                "runtime.netpollgoready": 1,
                "internal/poll.runtime_pollUnblock": 1,
                "runtime.netpollready": 1,
                "runtime.netpollblockcommit": 1,
                "runtime.netpollblock": 1,
                "runtime.netpollunblock": 1,
                "runtime.netpolldeadlineimpl": 1,
                "runtime.netpollDeadline": 1,
                "runtime.netpollReadDeadline": 1,
                "runtime.netpollWriteDeadline": 1,
                "runtime.(*pollCache).alloc": 1,
                "runtime.netpollinit": 1,
                "runtime.netpollopen": 1,
                "runtime.netpoll": 1,
                "runtime.handlecompletion": 1,
                "runtime.windowsFindfunc": 1,
                "runtime.windowsLoadSystemLib": 1,
                "runtime.loadOptionalSyscalls": 1,
                "runtime.getproccount": 1,
                "runtime.osRelax": 1,
                "runtime.osinit": 1,
                "runtime.funcPC": 1,
                "runtime.getPageSize": 1,
                "runtime.nanotimeQPC": 1,
                "runtime.nowQPC": 1,
                "runtime.initWine": 1,
                "runtime.getRandomData": 1,
                "runtime.goenvs": 1,
                "runtime.write": 1,
                "runtime.writeConsole": 1,
                "runtime.writeConsoleUTF16": 1,
                "runtime.semasleep": 1,
                "runtime.semawakeup": 1,
                "runtime.semacreate": 1,
                "runtime.newosproc": 1,
                "runtime.mcount": 1,
                "runtime.exitThread": 1,
                "runtime.minit": 1,
                "runtime.stdcall": 1,
                "runtime.stdcall0": 1,
                "runtime.stdcall1": 1,
                "runtime.stdcall2": 1,
                "runtime.stdcall3": 1,
                "runtime.stdcall4": 1,
                "runtime.stdcall5": 1,
                "runtime.stdcall6": 1,
                "runtime.stdcall7": 1,
                "runtime.ctrlhandler1": 1,
                "runtime.setThreadCPUProfiler": 1,
                "runtime.panicCheckMalloc": 1,
                "runtime.panicindex": 1,
                "runtime.hasPrefix": 1,
                "VnU(V=": 2,
                "runtime.panicslice": 1,
                "runtime.panicdivide": 1,
                "runtime.throwinit": 1,
                "runtime.deferproc": 1,
                "runtime.deferArgs": 1,
                "runtime.testdefersizes": 1,
                "runtime.deferclass": 1,
                "runtime.totaldefersize": 1,
                ")K*\")?*": 1,
                "runtime.init.4": 1,
                "runtime.newdefer": 1,
                "runtime.freedefer": 1,
                "runtime.freedeferpanic": 1,
                "runtime.freedeferfn": 1,
                "runtime.deferreturn": 1,
                "runtime.preprintpanics": 1,
                "runtime.printpanics": 1,
                "runtime.gopanic": 1,
                "runtime.getargp": 1,
                "runtime.gorecover": 1,
                "sync.throw": 1,
                "runtime.throw": 1,
                "runtime.recovery": 1,
                "runtime.fatalthrow": 1,
                "runtime.fatalpanic": 1,
                "runtime.startpanic_m": 1,
                "c'd=c'd": 1,
                "runtime.dopanic_m": 1,
                "runtime.gotraceback": 1,
                "runtime.canpanic": 1,
                "runtime.recordForPanic": 1,
                "runtime.printlock": 1,
                "runtime.printunlock": 1,
                "runtime.gwrite": 1,
                "runtime.printsp": 1,
                "runtime.printnl": 1,
                "runtime.printbool": 1,
                "runtime.printfloat": 1,
                "runtime.printcomplex": 1,
                "runtime.printuint": 1,
                "runtime.printint": 1,
                "runtime.printhex": 1,
                "runtime.printpointer": 1,
                "runtime.printstring": 1,
                "runtime.bytes": 1,
                "runtime.printslice": 1,
                "runtime.printeface": 1,
                "runtime.hexdumpWords": 1,
                "runtime.funcInfo.valid": 1,
                "runtime.main": 1,
                "runtime.startTemplateThread": 1,
                "os.runtime_beforeExit": 1,
                "runtime.init.5": 1,
                "runtime.forcegchelper": 1,
                "runtime.gopark": 1,
                "runtime.goready": 1,
                "runtime.acquireSudog": 1,
                "runtime.releaseSudog": 1,
                "runtime.badmcall": 1,
                "runtime.badmcall2": 1,
                "runtime.badreflectcall": 1,
                "runtime.badmorestackg0": 1,
                "runtime.badmorestackgsignal": 1,
                "runtime.badctxt": 1,
                "runtime.allgadd": 1,
                "runtime.cpuinit": 1,
                "runtime.schedinit": 1,
                "runtime.tracebackinit": 1,
                "runtime.checkmcount": 1,
                "runtime.mcommoninit": 1,
                "runtime.ready": 1,
                "runtime.wakep": 1,
                "runtime.dumpgstatus": 1,
                "runtime.freezetheworld": 1,
                "runtime.usleep": 1,
                "runtime.casfrom_Gscanstatus": 1,
                "runtime.castogscanstatus": 1,
                "runtime.casgstatus": 1,
                "runtime.scang": 1,
                "runtime.restartg": 1,
                "runtime.stopTheWorld": 1,
                "runtime.startTheWorld": 1,
                "runtime.stopTheWorldWithSema": 1,
                "runtime.pidleget": 1,
                "runtime.startTheWorldWithSema": 1,
                "runtime.netpollinited": 1,
                "runtime.traceGCSTWDone": 1,
                "runtime.mstart": 1,
                "runtime.mstart1": 1,
                "runtime.mstartm0": 1,
                "runtime.mexit": 1,
                "runtime.unminit": 1,
                "runtime.forEachP": 1,
                "runtime.runSafePointFn": 1,
                "runtime.allocm": 1,
                "runtime.needm": 1,
                "runtime.unlockextra": 1,
                "runtime.newextram": 1,
                "runtime.oneNewExtraM": 1,
                "runtime.dropm": 1,
                "runtime.lockextra": 1,
                "runtime.newm": 1,
                "runtime.newm1": 1,
                "runtime.templateThread": 1,
                "runtime.muintptr.ptr": 1,
                "runtime.stopm": 1,
                "runtime.mput": 1,
                "runtime.mspinning": 1,
                "runtime.startm": 1,
                "runtime.mget": 1,
                "runtime.handoffp": 1,
                "runtime.stoplockedm": 1,
                "runtime.startlockedm": 1,
                "runtime.gcstopm": 1,
                "runtime.execute": 1,
                "runtime.findrunnable": 1,
                "runtime.(*randomEnum).next": 1,
                "runtime.(*randomEnum).done": 1,
                "runtime.(*randomEnum).position": 1,
                "runtime.(*randomOrder).start": 1,
                "runtime.pollWork": 1,
                "runtime.resetspinning": 1,
                "runtime.injectglist": 1,
                "runtime.globrunqput": 1,
                "runtime.schedule": 1,
                "runtime.parkunlock_c": 1,
                "runtime.park_m": 1,
                "runtime.dropg": 1,
                "runtime.setMNoWB": 1,
                "runtime.setGNoWB": 1,
                "runtime.goschedImpl": 1,
                "runtime.gosched_m": 1,
                "runtime.traceGoSched": 1,
                "runtime.gopreempt_m": 1,
                "runtime.traceGoPreempt": 1,
                "runtime.goexit1": 1,
                "runtime.traceGoEnd": 1,
                "runtime.goexit0": 1,
                "runtime.save": 1,
                "runtime.reentersyscall": 1,
                "runtime.entersyscall": 1,
                "runtime.entersyscall_sysmon": 1,
                "runtime.entersyscall_gcwait": 1,
                "runtime.entersyscallblock": 1,
                "runtime.entersyscallblock_handoff": 1,
                "runtime.traceGoSysCall": 1,
                ".BL#K1": 1,
                "runtime.exitsyscall": 1,
                "runtime.exitsyscallfast": 1,
                "runtime.exitsyscallfast_reacquired": 1,
                "runtime.exitsyscallfast_pidle": 1,
                "runtime.exitsyscall0": 1,
                "runtime.malg": 1,
                "runtime.newproc": 1,
                "runtime.newproc1": 1,
                "runtime.gostartcallfn": 1,
                "runtime.gostartcall": 1,
                "runtime.stackmapdata": 1,
                "runtime.saveAncestors": 1,
                "runtime.gfput": 1,
                "runtime.gfget": 1,
                "runtime.gfpurge": 1,
                "runtime.LockOSThread": 1,
                "runtime.UnlockOSThread": 1,
                "runtime.dounlockOSThread": 1,
                "runtime.unlockOSThread": 1,
                "runtime.badunlockosthread": 1,
                "runtime.procresize": 1,
                "runtime.globrunqputhead": 1,
                "runtime.(*gQueue).push": 1,
                "runtime.traceGomaxprocs": 1,
                "runtime.acquirep": 1,
                "runtime.wirep": 1,
                "runtime.releasep": 1,
                "runtime.incidlelocked": 1,
                "runtime.checkdead": 1,
                "runtime.sysmon": 1,
                "runtime.retake": 1,
                "runtime.preemptall": 1,
                "runtime.schedtrace": 1,
                "runtime.waitReason.String": 1,
                "runtime.schedEnableUser": 1,
                "runtime.globrunqputbatch": 1,
                "runtime.(*gQueue).pushBackAll": 1,
                "runtime.schedEnabled": 1,
                "runtime.globrunqget": 1,
                "runtime.pidleput": 1,
                "runtime.runqempty": 1,
                "runtime.runqput": 1,
                "runtime.(*guintptr).cas": 1,
                "runtime.runqputslow": 1,
                "runtime.runqget": 1,
                "runtime.runqgrab": 1,
                "runtime.runqsteal": 1,
                "sync.runtime_procPin": 1,
                "runtime.procPin": 1,
                "sync.runtime_procUnpin": 1,
                "runtime.procUnpin": 1,
                "sync/atomic.runtime_procPin": 1,
                "sync/atomic.runtime_procUnpin": 1,
                "sync.runtime_canSpin": 1,
                "sync.runtime_doSpin": 1,
                "runtime.(*randomOrder).reset": 1,
                "runtime.gcd": 1,
                "syscall.Exit": 1,
                "runtime.args": 1,
                "runtime.testAtomic64": 1,
                "runtime.check": 1,
                "runtime.parsedebugvars": 1,
                "runtime/debug.SetTraceback": 1,
                "runtime.timediv": 1,
                "reflect.typelinks": 1,
                "reflect.resolveNameOff": 1,
                "reflect.resolveTypeOff": 1,
                "reflect.resolveTextOff": 1,
                "reflect.addReflectOff": 1,
                "runtime.reflectOffsLock": 1,
                "runtime.reflectOffsUnlock": 1,
                "runtime.extendRandom": 1,
                "runtime.(*rwmutex).rlock": 1,
                "runtime.(*rwmutex).runlock": 1,
                "sync.runtime_Semacquire": 1,
                "internal/poll.runtime_Semacquire": 1,
                "sync.runtime_Semrelease": 1,
                "sync.runtime_SemacquireMutex": 1,
                "internal/poll.runtime_Semrelease": 1,
                "runtime.readyWithTime": 1,
                "runtime.semacquire1": 1,
                "runtime.semroot": 1,
                "runtime.semrelease1": 1,
                "runtime.cansemacquire": 1,
                "runtime.(*semaRoot).queue": 1,
                "runtime.(*semaRoot).dequeue": 1,
                "runtime.(*semaRoot).rotateLeft": 1,
                "runtime.(*semaRoot).rotateRight": 1,
                "sync.runtime_notifyListCheck": 1,
                "sync.runtime_nanotime": 1,
                "runtime.disableWER": 1,
                "runtime.initExceptionHandler": 1,
                "runtime.isAbort": 1,
                "runtime.isAbortPC": 1,
                "runtime.(*context).ip": 1,
                "runtime.isgoexception": 1,
                "runtime.exceptionhandler": 1,
                "runtime.(*context).sp": 1,
                "runtime.(*context).set_sp": 1,
                "runtime.(*context).set_ip": 1,
                "runtime.firstcontinuehandler": 1,
                "runtime.lastcontinuehandler": 1,
                "runtime.sigpanic": 1,
                "runtime.panicmem": 1,
                "runtime.panicfloat": 1,
                "runtime.panicoverflow": 1,
                "runtime.setBadSignalMsg": 1,
                "runtime.sigsend": 1,
                "runtime.makeslice": 1,
                "runtime.panicmakeslicelen": 1,
                "runtime.panicmakeslicecap": 1,
                "runtime.growslice": 1,
                "runtime.isPowerOfTwo": 1,
                "runtime.stackinit": 1,
                "runtime.stacklog2": 1,
                "runtime.stackpoolalloc": 1,
                "runtime.gclinkptr.ptr": 1,
                "runtime.stackpoolfree": 1,
                "runtime.stackcacherefill": 1,
                "runtime.stackcacherelease": 1,
                "runtime.stackcache_clear": 1,
                "runtime.stackalloc": 1,
                "runtime.stackfree": 1,
                "runtime.adjustpointers": 1,
                "runtime/internal/sys.Ctz8": 1,
                "runtime.adjustframe": 1,
                "runtime.adjustpointer": 1,
                "runtime.adjustctxt": 1,
                "runtime.adjustdefers": 1,
                "runtime.adjustsudogs": 1,
                "runtime.findsghi": 1,
                "runtime.syncadjustsudogs": 1,
                "runtime.copystack": 1,
                "runtime.adjustpanics": 1,
                "runtime.round2": 1,
                "runtime.newstack": 1,
                "runtime.shrinkstack": 1,
                "runtime.freeStackSpans": 1,
                "runtime.getStackMap": 1,
                "runtime.morestackc": 1,
                "runtime.concatstrings": 1,
                "runtime.stringDataOnStack": 1,
                "runtime.concatstring2": 1,
                "runtime.concatstring3": 1,
                "runtime.concatstring4": 1,
                "runtime.concatstring5": 1,
                "runtime.slicebytetostring": 1,
                "runtime.rawstringtmp": 1,
                "runtime.stringtoslicebyte": 1,
                "runtime.stringtoslicerune": 1,
                "runtime.slicerunetostring": 1,
                "runtime.intstring": 1,
                "runtime.rawstring": 1,
                "runtime.rawbyteslice": 1,
                "@:,R+O": 1,
                "runtime.rawruneslice": 1,
                "@[,M+X": 1,
                "runtime.gostring": 1,
                "runtime.index": 1,
                "runtime.atoi": 1,
                "runtime.findnull": 1,
                "runtime.gostringw": 1,
                "runtime.badsystemstack": 1,
                "reflect.memmove": 1,
                "runtime.(*Frames).Next": 1,
                "runtime.(*Func).Entry": 1,
                "runtime.expandCgoFrames": 1,
                "runtime.modulesinit": 1,
                "runtime.moduledataverify": 1,
                "runtime.moduledataverify1": 1,
                "runtime.FuncForPC": 1,
                "runtime.(*Func).Name": 1,
                "runtime.(*Func).funcInfo": 1,
                "runtime.(*Func).FileLine": 1,
                "runtime.findmoduledatap": 1,
                "runtime.findfunc": 1,
                "runtime.pcvalue": 1,
                "runtime.pcvalueCacheKey": 1,
                "runtime.funcname": 1,
                "runtime.cfuncname": 1,
                "runtime.funcnameFromNameoff": 1,
                "runtime.funcline1": 1,
                "runtime.funcline": 1,
                "runtime.funcspdelta": 1,
                "runtime.pcdatavalue": 1,
                "runtime.pcdatastart": 1,
                "runtime.pcdatavalue1": 1,
                "runtime.funcdata": 1,
                "runtime.step": 1,
                "runtime.readvarint": 1,
                "syscall.loadsystemlibrary": 1,
                "runtime.getLoadLibraryEx": 1,
                "runtime.getLoadLibrary": 1,
                "syscall.loadlibrary": 1,
                "syscall.getprocaddress": 1,
                "runtime.getGetProcAddress": 1,
                "syscall.Syscall": 1,
                "syscall.Syscall6": 1,
                "syscall.Syscall9": 1,
                "syscall.Syscall12": 1,
                "syscall.Syscall15": 1,
                "syscall.Syscall18": 1,
                "time.Sleep": 1,
                "runtime.(*timer).assignBucket": 1,
                "runtime.badTimer": 1,
                "runtime.goroutineReady": 1,
                "runtime.addtimer": 1,
                "runtime.(*timersBucket).addtimerLocked": 1,
                "runtime.deltimer": 1,
                "runtime.(*timersBucket).deltimerLocked": 1,
                "runtime.modtimer": 1,
                "runtime.timerproc": 1,
                "runtime.timejump": 1,
                "runtime.timejumpLocked": 1,
                "runtime.timeSleepUntil": 1,
                "runtime.siftupTimer": 1,
                "runtime.siftdownTimer": 1,
                "runtime.traceReader": 1,
                "runtime.traceProcFree": 1,
                "runtime.traceFullQueue": 1,
                "runtime.traceBufPtr.ptr": 1,
                "runtime.traceEvent": 1,
                "runtime.traceEventLocked": 1,
                "runtime.(*traceBufPtr).set": 1,
                "runtime.(*traceBuf).byte": 1,
                "runtime.traceStackID": 1,
                "runtime.traceAcquireBuffer": 1,
                "runtime.traceReleaseBuffer": 1,
                "runtime.traceFlush": 1,
                "runtime.(*traceBuf).varint": 1,
                "runtime.(*traceStackTable).put": 1,
                "runtime.(*traceStack).stack": 1,
                "runtime.(*traceStackTable).find": 1,
                "runtime.(*traceStackTable).newStack": 1,
                "runtime.(*traceAlloc).alloc": 1,
                "runtime.(*traceAllocBlockPtr).set": 1,
                "runtime.traceProcStart": 1,
                "runtime.traceProcStop": 1,
                "runtime.traceGCSweepStart": 1,
                "runtime.traceGCSweepSpan": 1,
                "runtime.traceGCSweepDone": 1,
                "runtime.traceGoCreate": 1,
                "runtime.traceGoStart": 1,
                "runtime.traceGoPark": 1,
                "runtime.traceGoUnpark": 1,
                "runtime.traceGoSysExit": 1,
                "runtime.traceGoSysBlock": 1,
                "runtime.traceNextGC": 1,
                "runtime.tracebackdefers": 1,
                "runtime.getArgInfoFast": 1,
                "runtime.gentraceback": 1,
                "runtime.topofstack": 1,
                "runtime.elideWrapperCalling": 1,
                "runtime.getArgInfo": 1,
                "runtime.tracebackCgoContext": 1,
                "runtime.printcreatedby": 1,
                "runtime.printcreatedby1": 1,
                "runtime.traceback": 1,
                "runtime.tracebacktrap": 1,
                "runtime.traceback1": 1,
                "runtime.printAncestorTraceback": 1,
                "runtime.printAncestorTracebackFuncInfo": 1,
                "runtime.callers": 1,
                "runtime.gcallers": 1,
                "runtime.showframe": 1,
                "runtime.showfuncinfo": 1,
                "runtime.contains": 1,
                "runtime.isExportedRuntime": 1,
                "ZDY1Zb": 1,
                "runtime.goroutineheader": 1,
                "runtime.tracebackothers": 1,
                "runtime.tracebackHexdump": 1,
                "runtime.isSystemGoroutine": 1,
                "runtime.printCgoTraceback": 1,
                "runtime.printOneCgoTraceback": 1,
                "runtime.callCgoSymbolizer": 1,
                "runtime.cgoContextPCs": 1,
                "runtime.(*_type).string": 1,
                "runtime.(*_type).uncommon": 1,
                "runtime.(*_type).name": 1,
                "runtime.(*_type).pkgpath": 1,
                "runtime.resolveNameOff": 1,
                "runtime.resolveTypeOff": 1,
                "runtime.(*_type).textOff": 1,
                "runtime.name.tagLen": 1,
                "runtime.name.data": 1,
                "runtime.name.nameLen": 1,
                "runtime.name.name": 1,
                "runtime.name.tag": 1,
                "runtime.name.pkgPath": 1,
                "runtime.typelinksinit": 1,
                "runtime.typesEqual": 1,
                "runtime.decoderune": 1,
                "runtime.encoderune": 1,
                "runtime.writeErr": 1,
                "runtime.cgocallbackg1.func1": 1,
                "runtime.cgoCheckWriteBarrier.func1": 1,
                "runtime.cgoCheckTypedBlock.func1": 1,
                "runtime.chansend.func1": 1,
                "runtime.chanrecv.func1": 1,
                "runtime.debugCallCheck.func1": 1,
                "runtime.debugCallWrap.func1": 1,
                "runtime.mallocgc.func1": 1,
                "runtime.persistentalloc.func1": 1,
                "runtime.freemcache.func1": 1,
                "runtime.SetFinalizer.func1": 1,
                "runtime.SetFinalizer.func2": 1,
                "runtime.gcStart.func1": 1,
                "runtime.gcStart.func2": 1,
                "runtime.gcMarkDone.func1.1": 1,
                "runtime.gcMarkDone.func1": 1,
                "runtime.gcMarkDone.func2": 1,
                "runtime.gcMarkDone.func3": 1,
                "runtime.gcMarkTermination.func1": 1,
                "runtime.gcMarkTermination.func2": 1,
                "runtime.gcMarkTermination.func3": 1,
                "runtime.gcMarkTermination.func4.1": 1,
                "runtime.gcMarkTermination.func4": 1,
                "runtime.gcBgMarkWorker.func1": 1,
                "runtime.gcBgMarkWorker.func2": 1,
                "runtime.markroot.func1": 1,
                "runtime.gcAssistAlloc.func1": 1,
                "runtime.scanstack.func1": 1,
                "runtime.getempty.func1": 1,
                "runtime.freeSomeWbufs.func1": 1,
                "runtime.(*mheap).coalesce.func1": 1,
                "runtime.(*mheap).coalesce.func2": 1,
                "runtime.(*mheap).alloc.func1": 1,
                "runtime.(*mheap).freeSpan.func1": 1,
                "runtime.mProf_Malloc.func1": 1,
                "runtime.tracealloc.func1": 1,
                "runtime.tracefree.func1": 1,
                "runtime.wbBufFlush.func1": 1,
                "runtime.semasleep.func1": 1,
                "runtime.semasleep.func2": 1,
                "runtime.semasleep.func3": 1,
                "runtime.semawakeup.func1": 1,
                "runtime.semacreate.func1": 1,
                "runtime.newdefer.func1": 1,
                "runtime.newdefer.func2": 1,
                "E)K*F)0*": 1,
                "runtime.freedefer.func1": 1,
                "runtime.preprintpanics.func1": 1,
                "runtime.throw.func1": 1,
                "runtime.fatalthrow.func1": 1,
                "runtime.fatalpanic.func1": 1,
                "runtime.fatalpanic.func2": 1,
                "runtime.hexdumpWords.func1": 1,
                "runtime.main.func1": 1,
                "runtime.main.func2": 1,
                "runtime.goready.func1": 1,
                "runtime.casgstatus.func1": 1,
                "runtime.casgstatus.func2": 1,
                "runtime.startTheWorld.func1": 1,
                "runtime.reentersyscall.func1": 1,
                "runtime.entersyscallblock.func1": 1,
                "runtime.entersyscallblock.func2": 1,
                "runtime.exitsyscallfast.func1": 1,
                "runtime.exitsyscallfast_reacquired.func1": 1,
                "runtime.malg.func1": 1,
                "runtime.newproc.func1": 1,
                "runtime.gfget.func1": 1,
                "runtime.(*rwmutex).rlock.func1": 1,
                "runtime.callers.func1": 1,
                "runtime.tracebackHexdump.func1": 1,
                "runtime.init.ializers": 1,
                "runtime.init": 1,
                "runtime.skipPleaseUseCallersFrames": 1,
                "runtime.rt0_go": 1,
                "runtime.asminit": 1,
                "runtime.gogo": 1,
                "runtime.mcall": 1,
                "runtime.systemstack_switch": 1,
                "runtime.systemstack": 1,
                "runtime.morestack": 1,
                "runtime.morestack_noctxt": 1,
                "runtime.reflectcall": 1,
                "callRet": 1,
                "runtime.call32": 1,
                "runtime.call64": 1,
                "runtime.call128": 1,
                "runtime.call256": 1,
                "runtime.call512": 1,
                "runtime.call1024": 1,
                "runtime.call2048": 1,
                "runtime.call4096": 1,
                "runtime.call8192": 1,
                "runtime.call16384": 1,
                "runtime.call32768": 1,
                "runtime.call65536": 1,
                "runtime.call131072": 1,
                "runtime.call262144": 1,
                "runtime.call524288": 1,
                "runtime.call1048576": 1,
                "runtime.call2097152": 1,
                "runtime.call4194304": 1,
                "runtime.call8388608": 1,
                "runtime.call16777216": 1,
                "runtime.call33554432": 1,
                "runtime.call67108864": 1,
                "runtime.call134217728": 1,
                "runtime.call268435456": 1,
                "runtime.call536870912": 1,
                "runtime.call1073741824": 1,
                "runtime.procyield": 1,
                "runtime.publicationBarrier": 1,
                "runtime.jmpdefer": 1,
                "gosave": 1,
                "runtime.asmcgocall": 1,
                "runtime.cgocallback": 1,
                "runtime.cgocallback_gofunc": 1,
                "runtime.setg": 1,
                "setg_gcc": 1,
                "runtime.abort": 1,
                "runtime.stackcheck": 1,
                "runtime.cputicks": 1,
                "runtime.aeshash": 1,
                "runtime.aeshashstr": 1,
                "runtime.aeshashbody": 1,
                "runtime.aeshash32": 1,
                "runtime.aeshash64": 1,
                "runtime.checkASM": 1,
                "runtime.return0": 1,
                "_cgo_topofstack": 1,
                "runtime.goexit": 1,
                "runtime.gcWriteBarrier": 1,
                "runtime.debugCallV1": 1,
                "debugCall32": 1,
                "debugCall64": 1,
                "debugCall128": 1,
                "debugCall256": 1,
                "debugCall512": 1,
                "debugCall1024": 1,
                "debugCall2048": 1,
                "debugCall4096": 1,
                "debugCall8192": 1,
                "debugCall16384": 1,
                "debugCall32768": 1,
                "debugCall65536": 1,
                "runtime.debugCallPanicked": 1,
                "runtime.duffzero": 1,
                "runtime.duffcopy": 1,
                "runtime.memclrNoHeapPointers": 1,
                "runtime.memmove": 1,
                "runtime.asmstdcall": 1,
                "runtime.badsignal2": 1,
                "runtime.getlasterror": 1,
                "runtime.sigtramp": 1,
                "runtime.exceptiontramp": 1,
                "runtime.firstcontinuetramp": 1,
                "runtime.lastcontinuetramp": 1,
                "runtime.ctrlhandler": 1,
                "runtime.externalthreadhandler": 1,
                "runtime.tstart_stdcall": 1,
                "runtime.settls": 1,
                "runtime.onosstack": 1,
                "runtime.usleep2": 1,
                "runtime.switchtothread": 1,
                "runtime.nanotime": 1,
                "time.now": 1,
                "runtime.(*name).name": 1,
                "type..hash.runtime.uncommontype": 1,
                "type..eq.runtime.uncommontype": 1,
                "type..hash.runtime._panic": 1,
                "type..eq.runtime._panic": 1,
                "type..hash.runtime._defer": 1,
                "type..eq.runtime._defer": 1,
                "type..hash.runtime.sysmontick": 1,
                "type..eq.runtime.sysmontick": 1,
                "type..hash.runtime.special": 1,
                "type..eq.runtime.special": 1,
                "type..hash.runtime.markBits": 1,
                "type..eq.runtime.markBits": 1,
                "type..hash.runtime.mcache": 1,
                "type..eq.runtime.mcache": 1,
                "type..hash.struct { runtime.gList": 1,
                "runtime.n int32 }": 6,
                "type..eq.struct { runtime.gList": 1,
                "type..hash.runtime.gcWork": 1,
                "type..eq.runtime.gcWork": 1,
                "type..hash.runtime.wbBuf": 1,
                "type..eq.runtime.wbBuf": 1,
                "runtime.(*waitReason).String": 1,
                "type..hash.runtime.sudog": 1,
                "type..eq.runtime.sudog": 1,
                "type..hash.runtime.hchan": 1,
                "type..eq.runtime.hchan": 1,
                "type..hash.[6]string": 1,
                "type..eq.[6]string": 1,
                "type..hash.[9]string": 1,
                "type..eq.[9]string": 1,
                "type..hash.runtime.bitvector": 1,
                "type..eq.runtime.bitvector": 1,
                "type..hash.runtime.itab": 1,
                "type..eq.runtime.itab": 1,
                "type..hash.runtime._func": 1,
                "type..eq.runtime._func": 1,
                "type..hash.runtime.modulehash": 1,
                "type..eq.runtime.modulehash": 1,
                "type..hash.runtime.treapNode": 1,
                "type..eq.runtime.treapNode": 1,
                "type..hash.runtime.gcSweepBuf": 1,
                "type..eq.runtime.gcSweepBuf": 1,
                "type..hash.[2]runtime.gcSweepBuf": 1,
                "type..eq.[2]runtime.gcSweepBuf": 1,
                "type..hash.runtime.arenaHint": 1,
                "type..eq.runtime.arenaHint": 1,
                "type..hash.runtime.mcentral": 1,
                "type..eq.runtime.mcentral": 1,
                "type..hash.struct { runtime.mcentral runtime.mcentral": 1,
                "runtime.pad [8]uint8 }": 4,
                "type..eq.struct { runtime.mcentral runtime.mcentral": 1,
                "type..hash.[134]struct { runtime.mcentral runtime.mcentral": 1,
                "type..eq.[134]struct { runtime.mcentral runtime.mcentral": 1,
                "type..hash.runtime.specialfinalizer": 1,
                "type..eq.runtime.specialfinalizer": 1,
                "type..hash.struct { Size uint32": 1,
                "type..eq.struct { Size uint32": 1,
                "type..hash.[61]struct { Size uint32": 1,
                "type..eq.[61]struct { Size uint32": 1,
                "type..hash.runtime.MemStats": 1,
                "type..eq.runtime.MemStats": 1,
                "type..hash.runtime.net_op": 1,
                "type..eq.runtime.net_op": 1,
                "type..hash.runtime.overlappedEntry": 1,
                "type..eq.runtime.overlappedEntry": 1,
                "type..hash.[64]runtime.overlappedEntry": 1,
                "type..eq.[64]runtime.overlappedEntry": 1,
                "type..hash.runtime.rwmutex": 1,
                "type..eq.runtime.rwmutex": 1,
                "type..hash.[2]string": 1,
                "type..eq.[2]string": 1,
                "type..hash.[3]string": 1,
                "type..eq.[3]string": 1,
                "type..hash.[4]string": 1,
                "type..eq.[4]string": 1,
                "type..hash.[5]string": 1,
                "type..eq.[5]string": 1,
                "type..hash.struct { runtime.lpFileName *uint16": 1,
                "runtime.hFile uintptr": 2,
                "runtime.flags uint32 }": 2,
                "type..eq.struct { runtime.lpFileName *uint16": 1,
                "runtime.(*itabTableType).add-fm": 1,
                "runtime.(*BlockProfileRecord).Stack": 1,
                "type..hash.runtime.Frame": 1,
                "type..eq.runtime.Frame": 1,
                "type..hash.[2]runtime.Frame": 1,
                "type..eq.[2]runtime.Frame": 1,
                "type..hash.runtime.TypeAssertionError": 1,
                "type..eq.runtime.TypeAssertionError": 1,
                "type..hash.runtime.dbgVar": 1,
                "type..eq.runtime.dbgVar": 1,
                "runtime.(*errorString).Error": 1,
                "runtime.(*errorString).RuntimeError": 1,
                "type..hash.runtime.finblock": 1,
                "type..eq.runtime.finblock": 1,
                "type..hash.runtime.forcegcstate": 1,
                "type..eq.runtime.forcegcstate": 1,
                "type..hash.runtime.funcinl": 1,
                "type..eq.runtime.funcinl": 1,
                "type..hash.runtime.gcControllerState": 1,
                "type..eq.runtime.gcControllerState": 1,
                "type..hash.runtime.gcTrigger": 1,
                "type..eq.runtime.gcTrigger": 1,
                "type..hash.runtime.hiter": 1,
                "type..eq.runtime.hiter": 1,
                "type..hash.runtime.memoryBasicInformation": 1,
                "type..eq.runtime.memoryBasicInformation": 1,
                "type..hash.struct { runtime.size uint32": 1,
                "runtime.nmalloc uint64": 4,
                "runtime.nfree uint64 }": 4,
                "type..eq.struct { runtime.size uint32": 1,
                "type..hash.[67]struct { runtime.size uint32": 1,
                "type..eq.[67]struct { runtime.size uint32": 1,
                "type..hash.runtime.mstats": 1,
                "type..eq.runtime.mstats": 1,
                "runtime.(*plainError).Error": 1,
                "runtime.(*plainError).RuntimeError": 1,
                "type..hash.struct { runtime.user bool": 1,
                "runtime.runnable runtime.gQueue": 2,
                "type..eq.struct { runtime.user bool": 1,
                "type..hash.struct { runtime.lock runtime.mutex": 2,
                "runtime.stack runtime.gList": 2,
                "runtime.noStack runtime.gList": 2,
                "type..eq.struct { runtime.lock runtime.mutex": 2,
                "type..hash.runtime.semaRoot": 1,
                "type..eq.runtime.semaRoot": 1,
                "type..hash.runtime.stackmap": 1,
                "type..eq.runtime.stackmap": 1,
                "type..hash.runtime.sweepdata": 1,
                "type..eq.runtime.sweepdata": 1,
                "type..hash.runtime.traceStack": 1,
                "type..eq.runtime.traceStack": 1,
                "type..hash.runtime.traceStackTable": 1,
                "type..eq.runtime.traceStackTable": 1,
                "type..hash.[16]runtime.dbgVar": 1,
                "type..eq.[16]runtime.dbgVar": 1,
                "type..hash.[24]string": 1,
                "type..eq.[24]string": 1,
                "type..hash.struct { runtime.root runtime.semaRoot": 1,
                "runtime.pad [40]uint8 }": 4,
                "type..eq.struct { runtime.root runtime.semaRoot": 1,
                "type..hash.[251]struct { runtime.root runtime.semaRoot": 1,
                "type..eq.[251]struct { runtime.root runtime.semaRoot": 1,
                "type..hash.[33]float64": 1,
                "type..eq.[33]float64": 1,
                "type..hash.struct { runtime.cycle uint32": 1,
                "runtime.flushed bool }": 2,
                "type..eq.struct { runtime.cycle uint32": 1,
                "type..hash.struct { runtime.enabled bool": 1,
                "runtime.pad [3]uint8": 2,
                "runtime.needed bool": 2,
                "runtime.cgo bool": 2,
                "runtime.alignme uint64 }": 2,
                "type..eq.struct { runtime.enabled bool": 1,
                "type..hash.struct { runtime.full runtime.lfstack": 1,
                "runtime.empty runtime.lfstack": 2,
                "runtime.pad0 internal/cpu.CacheLinePad": 2,
                "runtime.wbufSpans struct { runtime.lock runtime.mutex": 2,
                "runtime.free runtime.mSpanList": 2,
                "runtime.busy runtime.mSpanList }": 2,
                "runtime.bytesMarked uint64": 2,
                "runtime.markrootNext uint32": 2,
                "runtime.markrootJobs uint32": 2,
                "runtime.nproc uint32": 2,
                "runtime.tstart int64": 2,
                "runtime.nwait uint32": 2,
                "runtime.ndone uint32": 2,
                "runtime.nFlushCacheRoots int": 2,
                "runtime.nDataRoots int": 2,
                "runtime.nBSSRoots int": 2,
                "runtime.nSpanRoots int": 2,
                "runtime.nStackRoots int": 2,
                "runtime.startSema uint32": 2,
                "runtime.markDoneSema uint32": 2,
                "runtime.bgMarkReady runtime.note": 2,
                "runtime.bgMarkDone uint32": 2,
                "runtime.mode runtime.gcMode": 2,
                "runtime.userForced bool": 2,
                "runtime.totaltime int64": 2,
                "runtime.initialHeapLive uint64": 2,
                "runtime.assistQueue struct { runtime.lock runtime.mutex": 2,
                "runtime.q runtime.gQueue }": 2,
                "runtime.sweepWaiters struct { runtime.lock runtime.mutex": 2,
                "runtime.list runtime.gList }": 2,
                "runtime.cycles uint32": 2,
                "runtime.stwprocs int32": 2,
                "runtime.maxprocs int32": 2,
                "runtime.tSweepTerm int64": 2,
                "runtime.tMark int64": 2,
                "runtime.tMarkTerm int64": 2,
                "runtime.tEnd int64": 2,
                "runtime.pauseNS int64": 2,
                "runtime.pauseStart int64": 2,
                "runtime.heap0 uint64": 2,
                "runtime.heap1 uint64": 2,
                "runtime.heap2 uint64": 2,
                "runtime.heapGoal uint64 }": 2,
                "type..eq.struct { runtime.full runtime.lfstack": 1,
                "runtime.newm runtime.muintptr": 2,
                "runtime.waiting bool": 2,
                "runtime.wake runtime.note": 2,
                "runtime.haveTemplateThread uint32 }": 2,
                "type..hash.struct { runtime.note runtime.note": 1,
                "runtime.mask [3]uint32": 2,
                "runtime.wanted [3]uint32": 2,
                "runtime.ignored [3]uint32": 2,
                "runtime.recv [3]uint32": 2,
                "runtime.state uint32": 2,
                "runtime.delivering uint32": 2,
                "runtime.inuse bool }": 2,
                "type..eq.struct { runtime.note runtime.note": 1,
                "errors.New": 1,
                "errors.(*errorString).Error": 1,
                "sync.(*noCopy).Lock": 1,
                "sync.(*noCopy).Unlock": 1,
                "sync.(*Map).Load": 1,
                "sync.(*entry).load": 1,
                "sync.(*Map).Store": 1,
                "sync.(*entry).unexpungeLocked": 1,
                "sync.(*entry).storeLocked": 1,
                "sync.newEntry": 1,
                "sync.(*entry).tryStore": 1,
                "sync.(*Map).LoadOrStore": 1,
                "sync.(*entry).tryLoadOrStore": 1,
                "sync.(*Map).Delete": 1,
                "sync.(*entry).delete": 1,
                "sync.(*Map).Range": 1,
                "sync.(*Map).missLocked": 1,
                "sync.(*Map).dirtyLocked": 1,
                "sync.(*entry).tryExpungeLocked": 1,
                "sync.(*Mutex).Lock": 1,
                "sync.(*Mutex).Unlock": 1,
                "sync.(*Once).Do": 1,
                "sync.(*Pool).Put": 1,
                "sync.(*Pool).Get": 1,
                "sync.(*Pool).getSlow": 1,
                "sync.indexLocal": 1,
                "sync.(*Pool).pin": 1,
                "sync.(*Pool).pinSlow": 1,
                "sync.poolCleanup": 1,
                "sync.init.0": 1,
                "sync.init.1": 1,
                "sync.(*RWMutex).RLock": 1,
                "sync.(*RWMutex).RUnlock": 1,
                "sync.(*RWMutex).Lock": 1,
                "sync.(*RWMutex).Unlock": 1,
                "sync.(*RWMutex).RLocker": 1,
                "sync.(*rlocker).Lock": 1,
                "sync.(*rlocker).Unlock": 1,
                "sync.(*WaitGroup).Add": 1,
                "sync.(*WaitGroup).state": 1,
                "sync.(*WaitGroup).Done": 1,
                "sync.(*WaitGroup).Wait": 1,
                "sync.init.ializers": 1,
                "sync.init": 1,
                "sync.(*poolLocalInternal).Lock": 1,
                "sync.(*poolLocalInternal).Unlock": 1,
                "sync.(*poolLocal).Lock": 1,
                "sync.(*poolLocal).Unlock": 1,
                "io.WriteString": 1,
                "io.ReadAtLeast": 1,
                "io.copyBuffer": 1,
                "io.(*LimitedReader).Read": 1,
                "io.init.ializers": 1,
                "io.init": 1,
                "type..hash.io.LimitedReader": 1,
                "type..eq.io.LimitedReader": 1,
                "unicode/utf8.DecodeRune": 1,
                "unicode/utf8.DecodeRuneInString": 1,
                "unicode/utf8.DecodeLastRune": 1,
                "unicode/utf8.RuneStart": 1,
                "unicode/utf8.DecodeLastRuneInString": 1,
                "unicode/utf8.EncodeRune": 1,
                "unicode/utf8.RuneCount": 1,
                "unicode/utf8.RuneCountInString": 1,
                "unicode/utf8.ValidString": 1,
                "unicode.In": 1,
                "unicode.IsSpace": 1,
                "unicode.is16": 1,
                "unicode.is32": 1,
                "unicode.Is": 1,
                "unicode.isExcludingLatin": 1,
                "unicode.to": 1,
                "unicode.ToUpper": 1,
                "unicode.To": 1,
                "unicode.ToLower": 1,
                "unicode.SimpleFold": 1,
                "unicode.init.ializers": 1,
                "unicode.init": 1,
                "bytes.(*Buffer).Bytes": 1,
                "bytes.(*Buffer).String": 1,
                "bytes.(*Buffer).Len": 1,
                "bytes.(*Buffer).Cap": 1,
                "bytes.(*Buffer).Truncate": 1,
                "bytes.(*Buffer).Reset": 1,
                "bytes.(*Buffer).grow": 1,
                "bytes.(*Buffer).tryGrowByReslice": 1,
                "bytes.(*Buffer).Grow": 1,
                "bytes.(*Buffer).Write": 1,
                "bytes.(*Buffer).WriteString": 1,
                "bytes.(*Buffer).ReadFrom": 1,
                "bytes.makeSlice": 1,
                "bytes.(*Buffer).WriteTo": 1,
                "bytes.(*Buffer).WriteByte": 1,
                "bytes.(*Buffer).WriteRune": 1,
                "bytes.(*Buffer).Read": 1,
                "bytes.(*Buffer).empty": 1,
                "bytes.(*Buffer).Next": 1,
                "bytes.(*Buffer).ReadByte": 1,
                "bytes.(*Buffer).ReadRune": 1,
                "bytes.(*Buffer).UnreadRune": 1,
                "bytes.(*Buffer).UnreadByte": 1,
                "bytes.(*Buffer).ReadBytes": 1,
                "bytes.(*Buffer).readSlice": 1,
                "bytes.IndexByte": 1,
                "bytes.(*Buffer).ReadString": 1,
                "bytes.explode": 1,
                "bytes.Count": 1,
                "bytes.genSplit": 1,
                "bytes.EqualFold": 1,
                "bytes.Index": 1,
                "internal/bytealg.Cutover": 1,
                "bytes.Equal": 1,
                "bytes.indexRabinKarp": 1,
                "bytes.hashStr": 1,
                "bytes.(*Reader).Len": 1,
                "bytes.(*Reader).Size": 1,
                "bytes.(*Reader).Read": 1,
                "bytes.(*Reader).ReadAt": 1,
                "bytes.(*Reader).ReadByte": 1,
                "bytes.(*Reader).UnreadByte": 1,
                "bytes.(*Reader).ReadRune": 1,
                "bytes.(*Reader).UnreadRune": 1,
                "bytes.(*Reader).Seek": 1,
                "N!0\"$!": 1,
                "\"L!0\"$!": 1,
                "bytes.(*Reader).WriteTo": 1,
                "bytes.(*Reader).Reset": 1,
                "bytes.makeSlice.func1": 1,
                "bytes.init.ializers": 1,
                "bytes.init": 1,
                "bufio.(*Reader).Size": 1,
                "bufio.(*Reader).Reset": 1,
                "bufio.(*Reader).reset": 1,
                "bufio.(*Reader).fill": 1,
                "bufio.(*Reader).Peek": 1,
                "bufio.(*Reader).readErr": 1,
                "bufio.(*Reader).Discard": 1,
                "bufio.(*Reader).Buffered": 1,
                "bufio.(*Reader).Read": 1,
                "bufio.(*Reader).ReadByte": 1,
                "bufio.(*Reader).UnreadByte": 1,
                "bufio.(*Reader).ReadRune": 1,
                "unicode/utf8.FullRune": 1,
                "bufio.(*Reader).UnreadRune": 1,
                "bufio.(*Reader).ReadSlice": 1,
                "bufio.(*Reader).ReadLine": 1,
                "bufio.(*Reader).ReadBytes": 1,
                "bufio.(*Reader).ReadString": 1,
                "bufio.(*Reader).WriteTo": 1,
                "bufio.(*Reader).writeBuf": 1,
                "bufio.init.ializers": 1,
                "bufio.init": 1,
                "math.asin": 1,
                "math.NaN": 1,
                "math.acos": 1,
                "math.satan": 1,
                "math.xatan": 1,
                "math.atan": 1,
                "math.atan2": 1,
                "math.IsNaN": 1,
                "math.Signbit": 1,
                "math.Copysign": 1,
                "math.IsInf": 1,
                "math.Inf": 1,
                "math.frexp": 1,
                "math.normalize": 1,
                "math.Abs": 1,
                "math.Float64frombits": 1,
                "math.Float64bits": 1,
                "math.ldexp": 1,
                "math.log10": 1,
                "math.mod": 1,
                "math.modf": 1,
                "math.pow": 1,
                "math.isOddInt": 1,
                "math.cos": 1,
                "math.sin": 1,
                "math.tan": 1,
                "math.trigReduce": 1,
                "math/bits.LeadingZeros64": 1,
                "math.init.ializers": 1,
                "math.init": 1,
                "math.Asin": 1,
                "math.Acos": 1,
                "math.Atan2": 1,
                "math.Atan": 1,
                "math.Max": 1,
                "math.Min": 1,
                "math.Exp": 1,
                "math.Floor": 1,
                "math.Ceil": 1,
                "math.Frexp": 1,
                "math.Ldexp": 1,
                "math.Log10": 1,
                "math.Log": 1,
                "math.Mod": 1,
                "math.Modf": 1,
                "math.Pow": 1,
                "math.Sin": 1,
                "math.Cos": 1,
                "math.Tan": 1,
                "type..hash.[5]float64": 1,
                "type..eq.[5]float64": 1,
                "type..hash.[6]float64": 1,
                "type..eq.[6]float64": 1,
                "type..hash.[3]float64": 1,
                "type..eq.[3]float64": 1,
                "strconv.equalIgnoreCase": 1,
                "strconv.special": 1,
                "strconv.(*decimal).set": 1,
                "strconv.readFloat": 1,
                "strconv.(*decimal).floatBits": 1,
                "strconv.atof64exact": 1,
                "strconv.atof32exact": 1,
                "strconv.atof32": 1,
                "strconv.rangeError": 1,
                "strconv.syntaxError": 1,
                "strconv.atof64": 1,
                "strconv.ParseFloat": 1,
                "strconv.(*NumError).Error": 1,
                "strconv.Quote": 1,
                "strconv.quoteWith": 1,
                "strconv.baseError": 1,
                "strconv.Itoa": 1,
                "strconv.bitSizeError": 1,
                "strconv.ParseUint": 1,
                "strconv.ParseInt": 1,
                "strconv.(*decimal).String": 1,
                "strconv.digitZero": 1,
                "strconv.trim": 1,
                "strconv.(*decimal).Assign": 1,
                "strconv.rightShift": 1,
                "strconv.prefixIsLessThan": 1,
                "strconv.leftShift": 1,
                "strconv.(*decimal).Shift": 1,
                "strconv.(*decimal).Round": 1,
                "strconv.shouldRoundUp": 1,
                "strconv.(*decimal).RoundDown": 1,
                "strconv.(*decimal).RoundUp": 1,
                "strconv.(*decimal).RoundedInteger": 1,
                "strconv.(*extFloat).floatBits": 1,
                "strconv.(*extFloat).Normalize": 1,
                "strconv.(*extFloat).AssignComputeBounds": 1,
                "strconv.(*extFloat).Multiply": 1,
                "strconv.(*extFloat).AssignDecimal": 1,
                "strconv.(*extFloat).frexp10": 1,
                "strconv.frexp10Many": 1,
                "strconv.(*extFloat).FixedDecimal": 1,
                "strconv.adjustLastDigitFixed": 1,
                "strconv.(*extFloat).ShortestDecimal": 1,
                "strconv.adjustLastDigit": 1,
                "strconv.FormatFloat": 1,
                "strconv.max": 1,
                "strconv.genericFtoa": 1,
                "math.Float32bits": 1,
                "strconv.bigFtoa": 1,
                "strconv.formatDigits": 1,
                "strconv.roundShortest": 1,
                "strconv.fmtE": 1,
                "strconv.min": 1,
                "strconv.fmtF": 1,
                "strconv.fmtB": 1,
                "strconv.FormatUint": 1,
                "strconv.small": 1,
                "strconv.FormatInt": 1,
                "strconv.AppendInt": 1,
                "strconv.AppendUint": 1,
                "strconv.formatBits": 1,
                "strconv.isPowerOfTwo": 1,
                "math/bits.TrailingZeros": 1,
                "strconv.appendQuotedWith": 1,
                "strconv.appendQuotedRuneWith": 1,
                "unicode/utf8.ValidRune": 1,
                "strconv.appendEscapedRune": 1,
                "strconv.CanBackquote": 1,
                "strconv.UnquoteChar": 1,
                "strconv.unhex": 1,
                "strconv.Unquote": 1,
                "strconv.contains": 1,
                "strconv.bsearch16": 1,
                "strconv.bsearch32": 1,
                "strconv.IsPrint": 1,
                "strconv.isInGraphicList": 1,
                "strconv.init.ializers": 1,
                "strconv.init": 1,
                "type..hash.strconv.NumError": 1,
                "type..eq.strconv.NumError": 1,
                "type..hash.strconv.decimal": 1,
                "type..eq.strconv.decimal": 1,
                "type..hash.strconv.extFloat": 1,
                "type..eq.strconv.extFloat": 1,
                "type..hash.strconv.leftCheat": 1,
                "type..eq.strconv.leftCheat": 1,
                "type..hash.[11]float32": 1,
                "type..eq.[11]float32": 1,
                "type..hash.[23]float64": 1,
                "type..eq.[23]float64": 1,
                "type..hash.[61]strconv.leftCheat": 1,
                "type..eq.[61]strconv.leftCheat": 1,
                "type..hash.[87]strconv.extFloat": 1,
                "type..eq.[87]strconv.extFloat": 1,
                "type..hash.[8]strconv.extFloat": 1,
                "type..eq.[8]strconv.extFloat": 1,
                "reflect.MakeFunc": 1,
                "reflect.makeMethodValue": 1,
                "reflect.(*rtype).Kind": 1,
                "reflect.Swapper": 1,
                "reflect.ValueOf": 1,
                "reflect.escapes": 1,
                "reflect.unpackEface": 1,
                "reflect.ifaceIndir": 1,
                "reflect.Value.Kind": 1,
                "reflect.flag.kind": 1,
                "reflect.(*rtype).Size": 1,
                "reflect.name.tagLen": 1,
                "reflect.name.data": 1,
                "reflect.name.nameLen": 1,
                "reflect.add": 1,
                "reflect.name.name": 1,
                "reflect.name.tag": 1,
                "reflect.name.pkgPath": 1,
                "reflect.newName": 1,
                "reflect.Kind.String": 1,
                "reflect.(*rtype).uncommon": 1,
                "reflect.(*rtype).String": 1,
                "reflect.(*rtype).nameOff": 1,
                "reflect.(*rtype).Bits": 1,
                "reflect.(*rtype).Align": 1,
                "reflect.(*rtype).FieldAlign": 1,
                "reflect.(*rtype).common": 1,
                "reflect.(*rtype).exportedMethods": 1,
                "reflect.(*uncommonType).exportedMethods": 1,
                "reflect.(*rtype).NumMethod": 1,
                "reflect.(*interfaceType).NumMethod": 1,
                "reflect.(*rtype).Method": 1,
                "reflect.(*rtype).typeOff": 1,
                "reflect.(*funcType).in": 1,
                "reflect.(*rtype).textOff": 1,
                "reflect.(*funcType).out": 1,
                "reflect.(*rtype).IsVariadic": 1,
                "reflect.(*rtype).MethodByName": 1,
                "reflect.(*rtype).PkgPath": 1,
                "reflect.(*rtype).Name": 1,
                "reflect.(*rtype).ChanDir": 1,
                "reflect.(*rtype).Elem": 1,
                "reflect.toType": 1,
                "reflect.(*rtype).Field": 1,
                "reflect.(*rtype).FieldByIndex": 1,
                "reflect.(*rtype).FieldByName": 1,
                "reflect.(*rtype).FieldByNameFunc": 1,
                "reflect.(*rtype).In": 1,
                "reflect.(*rtype).Key": 1,
                "reflect.(*rtype).Len": 1,
                "reflect.(*rtype).NumField": 1,
                "reflect.(*rtype).NumIn": 1,
                "reflect.(*rtype).NumOut": 1,
                "reflect.(*rtype).Out": 1,
                "reflect.ChanDir.String": 1,
                "reflect.(*interfaceType).Method": 1,
                "reflect.name.isExported": 1,
                "reflect.(*interfaceType).MethodByName": 1,
                "reflect.StructTag.Get": 1,
                "reflect.StructTag.Lookup": 1,
                "reflect.(*structType).Field": 1,
                "reflect.(*structField).embedded": 1,
                "reflect.(*structField).offset": 1,
                "reflect.(*structType).FieldByIndex": 1,
                "reflect.(*structType).FieldByNameFunc": 1,
                "reflect.(*structType).FieldByName": 1,
                "reflect.TypeOf": 1,
                "reflect.(*rtype).ptrTo": 1,
                "reflect.resolveReflectName": 1,
                "reflect.fnv1": 1,
                "reflect.(*rtype).Implements": 1,
                "reflect.(*rtype).AssignableTo": 1,
                "reflect.(*rtype).ConvertibleTo": 1,
                "reflect.(*rtype).Comparable": 1,
                "reflect.implements": 1,
                "reflect.(*uncommonType).methods": 1,
                "reflect.directlyAssignable": 1,
                "reflect.haveIdenticalType": 1,
                "reflect.haveIdenticalUnderlyingType": 1,
                "reflect.typesByString": 1,
                "reflect.rtypeOff": 1,
                "reflect.FuncOf": 1,
                "reflect.funcStr": 1,
                "reflect.SliceOf": 1,
                "reflect.funcLayout": 1,
                "reflect.(*bitVector).append": 1,
                "reflect.(*rtype).pointers": 1,
                "reflect.addTypeBits": 1,
                "reflect.packEface": 1,
                "reflect.(*ValueError).Error": 1,
                "reflect.methodName": 1,
                "reflect.flag.mustBe": 1,
                "reflect.flag.mustBeExported": 1,
                "reflect.flag.mustBeAssignable": 1,
                "reflect.Value.Addr": 1,
                "reflect.flag.ro": 1,
                "reflect.Value.Bool": 1,
                "reflect.Value.Bytes": 1,
                "reflect.Value.runes": 1,
                "reflect.Value.CanAddr": 1,
                "reflect.Value.CanSet": 1,
                "reflect.Value.Call": 1,
                "reflect.Value.CallSlice": 1,
                "reflect.Value.call": 1,
                "reflect.storeRcvr": 1,
                "-2.R->0(": 1,
                "reflect.callReflect": 1,
                "reflect.methodReceiver": 1,
                "reflect.callMethod": 1,
                "reflect.funcName": 1,
                "reflect.Value.Cap": 1,
                "reflect.Value.pointer": 1,
                "reflect.Value.Close": 1,
                "reflect.Value.Complex": 1,
                "reflect.Value.Elem": 1,
                "reflect.Value.Field": 1,
                "reflect.Value.FieldByIndex": 1,
                "reflect.Value.IsNil": 1,
                "reflect.Value.FieldByName": 1,
                "reflect.Value.FieldByNameFunc": 1,
                "reflect.Value.Float": 1,
                "reflect.Value.Index": 1,
                "reflect.arrayAt": 1,
                "reflect.Value.Int": 1,
                "reflect.Value.CanInterface": 1,
                "reflect.Value.Interface": 1,
                "reflect.valueInterface": 1,
                "reflect.Value.InterfaceData": 1,
                "reflect.Value.IsValid": 1,
                "reflect.Value.Len": 1,
                "reflect.Value.MapIndex": 1,
                "reflect.Value.MapKeys": 1,
                "reflect.(*MapIter).Key": 1,
                "reflect.(*MapIter).Value": 1,
                "reflect.(*MapIter).Next": 1,
                "reflect.Value.MapRange": 1,
                "reflect.copyVal": 1,
                "reflect.Value.Method": 1,
                "reflect.Value.NumMethod": 1,
                "reflect.Value.MethodByName": 1,
                "reflect.Value.NumField": 1,
                "reflect.Value.OverflowComplex": 1,
                "reflect.overflowFloat32": 1,
                "reflect.Value.OverflowFloat": 1,
                "reflect.Value.OverflowInt": 1,
                "reflect.Value.OverflowUint": 1,
                "reflect.Value.Pointer": 1,
                "reflect.Value.Recv": 1,
                "reflect.Value.recv": 1,
                "reflect.Value.Send": 1,
                "reflect.Value.send": 1,
                "reflect.Value.Set": 1,
                "reflect.Value.SetBool": 1,
                "reflect.Value.SetBytes": 1,
                "reflect.Value.setRunes": 1,
                "reflect.Value.SetComplex": 1,
                "reflect.Value.SetFloat": 1,
                "reflect.Value.SetInt": 1,
                "reflect.Value.SetLen": 1,
                "reflect.Value.SetCap": 1,
                "reflect.Value.SetMapIndex": 1,
                "reflect.Value.SetUint": 1,
                "reflect.Value.SetPointer": 1,
                "reflect.Value.SetString": 1,
                "reflect.Value.Slice": 1,
                "reflect.Value.Slice3": 1,
                "reflect.Value.String": 1,
                "reflect.Value.TryRecv": 1,
                "reflect.Value.TrySend": 1,
                "reflect.Value.Type": 1,
                "reflect.Value.Uint": 1,
                "reflect.Value.UnsafeAddr": 1,
                "reflect.typesMustMatch": 1,
                "reflect.Copy": 1,
                "reflect.MakeSlice": 1,
                "reflect.MakeMapWithSize": 1,
                "reflect.Zero": 1,
                "reflect.New": 1,
                "reflect.Value.assignTo": 1,
                "reflect.Value.Convert": 1,
                "reflect.convertOp": 1,
                "reflect.makeInt": 1,
                "reflect.makeFloat": 1,
                "reflect.makeComplex": 1,
                "reflect.makeString": 1,
                "reflect.makeBytes": 1,
                "reflect.makeRunes": 1,
                "reflect.cvtInt": 1,
                "reflect.cvtUint": 1,
                "reflect.cvtFloatInt": 1,
                "reflect.cvtFloatUint": 1,
                "reflect.cvtIntFloat": 1,
                "reflect.cvtUintFloat": 1,
                "reflect.cvtFloat": 1,
                "reflect.cvtComplex": 1,
                "reflect.cvtIntString": 1,
                "reflect.cvtUintString": 1,
                "reflect.cvtBytesString": 1,
                "reflect.cvtStringBytes": 1,
                "reflect.cvtRunesString": 1,
                "reflect.cvtStringRunes": 1,
                "reflect.cvtDirect": 1,
                "reflect.cvtT2I": 1,
                "reflect.cvtI2I": 1,
                "reflect.Swapper.func1": 1,
                "reflect.Swapper.func2": 1,
                "reflect.Swapper.func3": 1,
                "reflect.Swapper.func4": 1,
                "reflect.Swapper.func5": 1,
                "reflect.Swapper.func6": 1,
                "reflect.Swapper.func7": 1,
                "reflect.Swapper.func8": 1,
                "reflect.Swapper.func9": 1,
                "reflect.(*structType).FieldByName.func1": 1,
                "reflect.FuncOf.func1": 1,
                "reflect.funcLayout.func1": 1,
                "reflect.init.ializers": 1,
                "reflect.init": 1,
                "reflect.makeFuncStub": 1,
                "reflect.methodValueCall": 1,
                "reflect.(*ChanDir).String": 1,
                "reflect.(*StructTag).Get": 1,
                "reflect.(*StructTag).Lookup": 1,
                "reflect.(*Kind).String": 1,
                "reflect.(*name).name": 1,
                "type..hash.reflect.uncommonType": 1,
                "type..eq.reflect.uncommonType": 1,
                "reflect.(*Value).Addr": 1,
                "reflect.(*Value).Bool": 1,
                "reflect.(*Value).Bytes": 1,
                "reflect.(*Value).Call": 1,
                "reflect.(*Value).CallSlice": 1,
                "reflect.(*Value).CanAddr": 1,
                "reflect.(*Value).CanInterface": 1,
                "reflect.(*Value).CanSet": 1,
                "reflect.(*Value).Cap": 1,
                "reflect.(*Value).Close": 1,
                "reflect.(*Value).Complex": 1,
                "reflect.(*Value).Convert": 1,
                "reflect.(*Value).Elem": 1,
                "reflect.(*Value).Field": 1,
                "reflect.(*Value).FieldByIndex": 1,
                "reflect.(*Value).FieldByName": 1,
                "reflect.(*Value).FieldByNameFunc": 1,
                "reflect.(*Value).Float": 1,
                "reflect.(*Value).Index": 1,
                "reflect.(*Value).Int": 1,
                "reflect.(*Value).Interface": 1,
                "reflect.(*Value).InterfaceData": 1,
                "reflect.(*Value).IsNil": 1,
                "reflect.(*Value).IsValid": 1,
                "reflect.(*Value).Kind": 1,
                "reflect.(*Value).Len": 1,
                "reflect.(*Value).MapIndex": 1,
                "reflect.(*Value).MapKeys": 1,
                "reflect.(*Value).MapRange": 1,
                "reflect.(*Value).Method": 1,
                "reflect.(*Value).MethodByName": 1,
                "reflect.(*Value).NumField": 1,
                "reflect.(*Value).NumMethod": 1,
                "reflect.(*Value).OverflowComplex": 1,
                "reflect.(*Value).OverflowFloat": 1,
                "reflect.(*Value).OverflowInt": 1,
                "reflect.(*Value).OverflowUint": 1,
                "reflect.(*Value).Pointer": 1,
                "reflect.(*Value).Recv": 1,
                "reflect.(*Value).Send": 1,
                "reflect.(*Value).Set": 1,
                "reflect.(*Value).SetBool": 1,
                "reflect.(*Value).SetBytes": 1,
                "reflect.(*Value).SetCap": 1,
                "reflect.(*Value).SetComplex": 1,
                "reflect.(*Value).SetFloat": 1,
                "reflect.(*Value).SetInt": 1,
                "reflect.(*Value).SetLen": 1,
                "reflect.(*Value).SetMapIndex": 1,
                "reflect.(*Value).SetPointer": 1,
                "reflect.(*Value).SetString": 1,
                "reflect.(*Value).SetUint": 1,
                "reflect.(*Value).Slice": 1,
                "reflect.(*Value).Slice3": 1,
                "reflect.(*Value).String": 1,
                "reflect.(*Value).TryRecv": 1,
                "reflect.(*Value).TrySend": 1,
                "reflect.(*Value).Type": 1,
                "reflect.(*Value).Uint": 1,
                "reflect.(*Value).UnsafeAddr": 1,
                "type..hash.reflect.Method": 1,
                "type..eq.reflect.Method": 1,
                "reflect.(*structType).Align": 1,
                "reflect.(*structType).AssignableTo": 1,
                "reflect.(*structType).Bits": 1,
                "reflect.(*structType).ChanDir": 1,
                "reflect.(*structType).Comparable": 1,
                "reflect.(*structType).ConvertibleTo": 1,
                "reflect.(*structType).Elem": 1,
                "reflect.(*structType).FieldAlign": 1,
                "reflect.(*structType).Implements": 1,
                "reflect.(*structType).In": 1,
                "reflect.(*structType).IsVariadic": 1,
                "reflect.(*structType).Key": 1,
                "reflect.(*structType).Kind": 1,
                "reflect.(*structType).Len": 1,
                "reflect.(*structType).Method": 1,
                "reflect.(*structType).MethodByName": 1,
                "reflect.(*structType).Name": 1,
                "reflect.(*structType).NumField": 1,
                "reflect.(*structType).NumIn": 1,
                "reflect.(*structType).NumMethod": 1,
                "reflect.(*structType).NumOut": 1,
                "reflect.(*structType).Out": 1,
                "reflect.(*structType).PkgPath": 1,
                "reflect.(*structType).Size": 1,
                "reflect.(*structType).String": 1,
                "reflect.(*structType).common": 1,
                "reflect.(*structType).uncommon": 1,
                "type..hash.reflect.funcType": 1,
                "type..eq.reflect.funcType": 1,
                "reflect.(*funcType).Align": 1,
                "reflect.(*funcType).AssignableTo": 1,
                "reflect.(*funcType).Bits": 1,
                "reflect.(*funcType).ChanDir": 1,
                "reflect.(*funcType).Comparable": 1,
                "reflect.(*funcType).ConvertibleTo": 1,
                "reflect.(*funcType).Elem": 1,
                "reflect.(*funcType).Field": 1,
                "reflect.(*funcType).FieldAlign": 1,
                "reflect.(*funcType).FieldByIndex": 1,
                "reflect.(*funcType).FieldByName": 1,
                "reflect.(*funcType).FieldByNameFunc": 1,
                "reflect.(*funcType).Implements": 1,
                "reflect.(*funcType).In": 1,
                "reflect.(*funcType).IsVariadic": 1,
                "reflect.(*funcType).Key": 1,
                "reflect.(*funcType).Kind": 1,
                "reflect.(*funcType).Len": 1,
                "reflect.(*funcType).Method": 1,
                "reflect.(*funcType).MethodByName": 1,
                "reflect.(*funcType).Name": 1,
                "reflect.(*funcType).NumField": 1,
                "reflect.(*funcType).NumIn": 1,
                "reflect.(*funcType).NumMethod": 1,
                "reflect.(*funcType).NumOut": 1,
                "reflect.(*funcType).Out": 1,
                "reflect.(*funcType).PkgPath": 1,
                "reflect.(*funcType).Size": 1,
                "reflect.(*funcType).String": 1,
                "reflect.(*funcType).common": 1,
                "reflect.(*funcType).uncommon": 1,
                "type..hash.reflect.ValueError": 1,
                "type..eq.reflect.ValueError": 1,
                "type..hash.reflect.funcTypeFixed128": 1,
                "type..eq.reflect.funcTypeFixed128": 1,
                "reflect.(*funcTypeFixed128).Align": 1,
                "reflect.(*funcTypeFixed128).AssignableTo": 1,
                "reflect.(*funcTypeFixed128).Bits": 1,
                "reflect.(*funcTypeFixed128).ChanDir": 1,
                "reflect.(*funcTypeFixed128).Comparable": 1,
                "reflect.(*funcTypeFixed128).ConvertibleTo": 1,
                "reflect.(*funcTypeFixed128).Elem": 1,
                "reflect.(*funcTypeFixed128).Field": 1,
                "reflect.(*funcTypeFixed128).FieldAlign": 1,
                "reflect.(*funcTypeFixed128).FieldByIndex": 1,
                "reflect.(*funcTypeFixed128).FieldByName": 1,
                "reflect.(*funcTypeFixed128).FieldByNameFunc": 1,
                "reflect.(*funcTypeFixed128).Implements": 1,
                "reflect.(*funcTypeFixed128).In": 1,
                "reflect.(*funcTypeFixed128).IsVariadic": 1,
                "reflect.(*funcTypeFixed128).Key": 1,
                "reflect.(*funcTypeFixed128).Kind": 1,
                "reflect.(*funcTypeFixed128).Len": 1,
                "reflect.(*funcTypeFixed128).Method": 1,
                "reflect.(*funcTypeFixed128).MethodByName": 1,
                "reflect.(*funcTypeFixed128).Name": 1,
                "reflect.(*funcTypeFixed128).NumField": 1,
                "reflect.(*funcTypeFixed128).NumIn": 1,
                "reflect.(*funcTypeFixed128).NumMethod": 1,
                "reflect.(*funcTypeFixed128).NumOut": 1,
                "reflect.(*funcTypeFixed128).Out": 1,
                "reflect.(*funcTypeFixed128).PkgPath": 1,
                "reflect.(*funcTypeFixed128).Size": 1,
                "reflect.(*funcTypeFixed128).String": 1,
                "reflect.(*funcTypeFixed128).common": 1,
                "reflect.(*funcTypeFixed128).uncommon": 1,
                "type..hash.reflect.funcTypeFixed16": 1,
                "type..eq.reflect.funcTypeFixed16": 1,
                "reflect.(*funcTypeFixed16).Align": 1,
                "reflect.(*funcTypeFixed16).AssignableTo": 1,
                "reflect.(*funcTypeFixed16).Bits": 1,
                "reflect.(*funcTypeFixed16).ChanDir": 1,
                "reflect.(*funcTypeFixed16).Comparable": 1,
                "reflect.(*funcTypeFixed16).ConvertibleTo": 1,
                "reflect.(*funcTypeFixed16).Elem": 1,
                "reflect.(*funcTypeFixed16).Field": 1,
                "reflect.(*funcTypeFixed16).FieldAlign": 1,
                "reflect.(*funcTypeFixed16).FieldByIndex": 1,
                "reflect.(*funcTypeFixed16).FieldByName": 1,
                "reflect.(*funcTypeFixed16).FieldByNameFunc": 1,
                "reflect.(*funcTypeFixed16).Implements": 1,
                "reflect.(*funcTypeFixed16).In": 1,
                "reflect.(*funcTypeFixed16).IsVariadic": 1,
                "reflect.(*funcTypeFixed16).Key": 1,
                "reflect.(*funcTypeFixed16).Kind": 1,
                "reflect.(*funcTypeFixed16).Len": 1,
                "reflect.(*funcTypeFixed16).Method": 1,
                "reflect.(*funcTypeFixed16).MethodByName": 1,
                "reflect.(*funcTypeFixed16).Name": 1,
                "reflect.(*funcTypeFixed16).NumField": 1,
                "reflect.(*funcTypeFixed16).NumIn": 1,
                "reflect.(*funcTypeFixed16).NumMethod": 1,
                "reflect.(*funcTypeFixed16).NumOut": 1,
                "reflect.(*funcTypeFixed16).Out": 1,
                "reflect.(*funcTypeFixed16).PkgPath": 1,
                "reflect.(*funcTypeFixed16).Size": 1,
                "reflect.(*funcTypeFixed16).String": 1,
                "reflect.(*funcTypeFixed16).common": 1,
                "reflect.(*funcTypeFixed16).uncommon": 1,
                "type..hash.reflect.funcTypeFixed32": 1,
                "type..eq.reflect.funcTypeFixed32": 1,
                "reflect.(*funcTypeFixed32).Align": 1,
                "reflect.(*funcTypeFixed32).AssignableTo": 1,
                "reflect.(*funcTypeFixed32).Bits": 1,
                "reflect.(*funcTypeFixed32).ChanDir": 1,
                "reflect.(*funcTypeFixed32).Comparable": 1,
                "reflect.(*funcTypeFixed32).ConvertibleTo": 1,
                "reflect.(*funcTypeFixed32).Elem": 1,
                "reflect.(*funcTypeFixed32).Field": 1,
                "reflect.(*funcTypeFixed32).FieldAlign": 1,
                "reflect.(*funcTypeFixed32).FieldByIndex": 1,
                "reflect.(*funcTypeFixed32).FieldByName": 1,
                "reflect.(*funcTypeFixed32).FieldByNameFunc": 1,
                "reflect.(*funcTypeFixed32).Implements": 1,
                "reflect.(*funcTypeFixed32).In": 1,
                "reflect.(*funcTypeFixed32).IsVariadic": 1,
                "reflect.(*funcTypeFixed32).Key": 1,
                "reflect.(*funcTypeFixed32).Kind": 1,
                "reflect.(*funcTypeFixed32).Len": 1,
                "reflect.(*funcTypeFixed32).Method": 1,
                "reflect.(*funcTypeFixed32).MethodByName": 1,
                "reflect.(*funcTypeFixed32).Name": 1,
                "reflect.(*funcTypeFixed32).NumField": 1,
                "reflect.(*funcTypeFixed32).NumIn": 1,
                "reflect.(*funcTypeFixed32).NumMethod": 1,
                "reflect.(*funcTypeFixed32).NumOut": 1,
                "reflect.(*funcTypeFixed32).Out": 1,
                "reflect.(*funcTypeFixed32).PkgPath": 1,
                "reflect.(*funcTypeFixed32).Size": 1,
                "reflect.(*funcTypeFixed32).String": 1,
                "reflect.(*funcTypeFixed32).common": 1,
                "reflect.(*funcTypeFixed32).uncommon": 1,
                "type..hash.reflect.funcTypeFixed4": 1,
                "type..eq.reflect.funcTypeFixed4": 1,
                "reflect.(*funcTypeFixed4).Align": 1,
                "reflect.(*funcTypeFixed4).AssignableTo": 1,
                "reflect.(*funcTypeFixed4).Bits": 1,
                "reflect.(*funcTypeFixed4).ChanDir": 1,
                "reflect.(*funcTypeFixed4).Comparable": 1,
                "reflect.(*funcTypeFixed4).ConvertibleTo": 1,
                "reflect.(*funcTypeFixed4).Elem": 1,
                "reflect.(*funcTypeFixed4).Field": 1,
                "reflect.(*funcTypeFixed4).FieldAlign": 1,
                "reflect.(*funcTypeFixed4).FieldByIndex": 1,
                "reflect.(*funcTypeFixed4).FieldByName": 1,
                "reflect.(*funcTypeFixed4).FieldByNameFunc": 1,
                "reflect.(*funcTypeFixed4).Implements": 1,
                "reflect.(*funcTypeFixed4).In": 1,
                "reflect.(*funcTypeFixed4).IsVariadic": 1,
                "reflect.(*funcTypeFixed4).Key": 1,
                "reflect.(*funcTypeFixed4).Kind": 1,
                "reflect.(*funcTypeFixed4).Len": 1,
                "reflect.(*funcTypeFixed4).Method": 1,
                "reflect.(*funcTypeFixed4).MethodByName": 1,
                "reflect.(*funcTypeFixed4).Name": 1,
                "reflect.(*funcTypeFixed4).NumField": 1,
                "reflect.(*funcTypeFixed4).NumIn": 1,
                "reflect.(*funcTypeFixed4).NumMethod": 1,
                "reflect.(*funcTypeFixed4).NumOut": 1,
                "reflect.(*funcTypeFixed4).Out": 1,
                "reflect.(*funcTypeFixed4).PkgPath": 1,
                "reflect.(*funcTypeFixed4).Size": 1,
                "reflect.(*funcTypeFixed4).String": 1,
                "reflect.(*funcTypeFixed4).common": 1,
                "reflect.(*funcTypeFixed4).uncommon": 1,
                "type..hash.reflect.funcTypeFixed64": 1,
                "type..eq.reflect.funcTypeFixed64": 1,
                "reflect.(*funcTypeFixed64).Align": 1,
                "reflect.(*funcTypeFixed64).AssignableTo": 1,
                "reflect.(*funcTypeFixed64).Bits": 1,
                "reflect.(*funcTypeFixed64).ChanDir": 1,
                "reflect.(*funcTypeFixed64).Comparable": 1,
                "reflect.(*funcTypeFixed64).ConvertibleTo": 1,
                "reflect.(*funcTypeFixed64).Elem": 1,
                "reflect.(*funcTypeFixed64).Field": 1,
                "reflect.(*funcTypeFixed64).FieldAlign": 1,
                "reflect.(*funcTypeFixed64).FieldByIndex": 1,
                "reflect.(*funcTypeFixed64).FieldByName": 1,
                "reflect.(*funcTypeFixed64).FieldByNameFunc": 1,
                "reflect.(*funcTypeFixed64).Implements": 1,
                "reflect.(*funcTypeFixed64).In": 1,
                "reflect.(*funcTypeFixed64).IsVariadic": 1,
                "reflect.(*funcTypeFixed64).Key": 1,
                "reflect.(*funcTypeFixed64).Kind": 1,
                "reflect.(*funcTypeFixed64).Len": 1,
                "reflect.(*funcTypeFixed64).Method": 1,
                "reflect.(*funcTypeFixed64).MethodByName": 1,
                "reflect.(*funcTypeFixed64).Name": 1,
                "reflect.(*funcTypeFixed64).NumField": 1,
                "reflect.(*funcTypeFixed64).NumIn": 1,
                "reflect.(*funcTypeFixed64).NumMethod": 1,
                "reflect.(*funcTypeFixed64).NumOut": 1,
                "reflect.(*funcTypeFixed64).Out": 1,
                "reflect.(*funcTypeFixed64).PkgPath": 1,
                "reflect.(*funcTypeFixed64).Size": 1,
                "reflect.(*funcTypeFixed64).String": 1,
                "reflect.(*funcTypeFixed64).common": 1,
                "reflect.(*funcTypeFixed64).uncommon": 1,
                "type..hash.reflect.funcTypeFixed8": 1,
                "type..eq.reflect.funcTypeFixed8": 1,
                "reflect.(*funcTypeFixed8).Align": 1,
                "reflect.(*funcTypeFixed8).AssignableTo": 1,
                "reflect.(*funcTypeFixed8).Bits": 1,
                "reflect.(*funcTypeFixed8).ChanDir": 1,
                "reflect.(*funcTypeFixed8).Comparable": 1,
                "reflect.(*funcTypeFixed8).ConvertibleTo": 1,
                "reflect.(*funcTypeFixed8).Elem": 1,
                "reflect.(*funcTypeFixed8).Field": 1,
                "reflect.(*funcTypeFixed8).FieldAlign": 1,
                "reflect.(*funcTypeFixed8).FieldByIndex": 1,
                "reflect.(*funcTypeFixed8).FieldByName": 1,
                "reflect.(*funcTypeFixed8).FieldByNameFunc": 1,
                "reflect.(*funcTypeFixed8).Implements": 1,
                "reflect.(*funcTypeFixed8).In": 1,
                "reflect.(*funcTypeFixed8).IsVariadic": 1,
                "reflect.(*funcTypeFixed8).Key": 1,
                "reflect.(*funcTypeFixed8).Kind": 1,
                "reflect.(*funcTypeFixed8).Len": 1,
                "reflect.(*funcTypeFixed8).Method": 1,
                "reflect.(*funcTypeFixed8).MethodByName": 1,
                "reflect.(*funcTypeFixed8).Name": 1,
                "reflect.(*funcTypeFixed8).NumField": 1,
                "reflect.(*funcTypeFixed8).NumIn": 1,
                "reflect.(*funcTypeFixed8).NumMethod": 1,
                "reflect.(*funcTypeFixed8).NumOut": 1,
                "reflect.(*funcTypeFixed8).Out": 1,
                "reflect.(*funcTypeFixed8).PkgPath": 1,
                "reflect.(*funcTypeFixed8).Size": 1,
                "reflect.(*funcTypeFixed8).String": 1,
                "reflect.(*funcTypeFixed8).common": 1,
                "reflect.(*funcTypeFixed8).uncommon": 1,
                "reflect.(*interfaceType).Align": 1,
                "reflect.(*interfaceType).AssignableTo": 1,
                "reflect.(*interfaceType).Bits": 1,
                "reflect.(*interfaceType).ChanDir": 1,
                "reflect.(*interfaceType).Comparable": 1,
                "reflect.(*interfaceType).ConvertibleTo": 1,
                "reflect.(*interfaceType).Elem": 1,
                "reflect.(*interfaceType).Field": 1,
                "reflect.(*interfaceType).FieldAlign": 1,
                "reflect.(*interfaceType).FieldByIndex": 1,
                "reflect.(*interfaceType).FieldByName": 1,
                "reflect.(*interfaceType).FieldByNameFunc": 1,
                "reflect.(*interfaceType).Implements": 1,
                "reflect.(*interfaceType).In": 1,
                "reflect.(*interfaceType).IsVariadic": 1,
                "reflect.(*interfaceType).Key": 1,
                "reflect.(*interfaceType).Kind": 1,
                "reflect.(*interfaceType).Len": 1,
                "reflect.(*interfaceType).Name": 1,
                "reflect.(*interfaceType).NumField": 1,
                "reflect.(*interfaceType).NumIn": 1,
                "reflect.(*interfaceType).NumOut": 1,
                "reflect.(*interfaceType).Out": 1,
                "reflect.(*interfaceType).PkgPath": 1,
                "reflect.(*interfaceType).Size": 1,
                "reflect.(*interfaceType).String": 1,
                "reflect.(*interfaceType).common": 1,
                "reflect.(*interfaceType).uncommon": 1,
                "type..hash.struct { reflect.ityp *reflect.rtype": 1,
                "reflect.typ *reflect.rtype": 2,
                "reflect.hash uint32": 2,
                "reflect.fun [100000]unsafe.Pointer }": 2,
                "type..eq.struct { reflect.ityp *reflect.rtype": 1,
                "reflect.(*ptrType).Align": 1,
                "reflect.(*ptrType).AssignableTo": 1,
                "reflect.(*ptrType).Bits": 1,
                "reflect.(*ptrType).ChanDir": 1,
                "reflect.(*ptrType).Comparable": 1,
                "reflect.(*ptrType).ConvertibleTo": 1,
                "reflect.(*ptrType).Elem": 1,
                "reflect.(*ptrType).Field": 1,
                "reflect.(*ptrType).FieldAlign": 1,
                "reflect.(*ptrType).FieldByIndex": 1,
                "reflect.(*ptrType).FieldByName": 1,
                "reflect.(*ptrType).FieldByNameFunc": 1,
                "reflect.(*ptrType).Implements": 1,
                "reflect.(*ptrType).In": 1,
                "reflect.(*ptrType).IsVariadic": 1,
                "reflect.(*ptrType).Key": 1,
                "reflect.(*ptrType).Kind": 1,
                "reflect.(*ptrType).Len": 1,
                "reflect.(*ptrType).Method": 1,
                "reflect.(*ptrType).MethodByName": 1,
                "reflect.(*ptrType).Name": 1,
                "reflect.(*ptrType).NumField": 1,
                "reflect.(*ptrType).NumIn": 1,
                "reflect.(*ptrType).NumMethod": 1,
                "reflect.(*ptrType).NumOut": 1,
                "reflect.(*ptrType).Out": 1,
                "reflect.(*ptrType).PkgPath": 1,
                "reflect.(*ptrType).Size": 1,
                "reflect.(*ptrType).String": 1,
                "reflect.(*ptrType).common": 1,
                "reflect.(*ptrType).uncommon": 1,
                "reflect.(*sliceType).Align": 1,
                "reflect.(*sliceType).AssignableTo": 1,
                "reflect.(*sliceType).Bits": 1,
                "reflect.(*sliceType).ChanDir": 1,
                "reflect.(*sliceType).Comparable": 1,
                "reflect.(*sliceType).ConvertibleTo": 1,
                "reflect.(*sliceType).Elem": 1,
                "reflect.(*sliceType).Field": 1,
                "reflect.(*sliceType).FieldAlign": 1,
                "reflect.(*sliceType).FieldByIndex": 1,
                "reflect.(*sliceType).FieldByName": 1,
                "reflect.(*sliceType).FieldByNameFunc": 1,
                "reflect.(*sliceType).Implements": 1,
                "reflect.(*sliceType).In": 1,
                "reflect.(*sliceType).IsVariadic": 1,
                "reflect.(*sliceType).Key": 1,
                "reflect.(*sliceType).Kind": 1,
                "reflect.(*sliceType).Len": 1,
                "reflect.(*sliceType).Method": 1,
                "reflect.(*sliceType).MethodByName": 1,
                "reflect.(*sliceType).Name": 1,
                "reflect.(*sliceType).NumField": 1,
                "reflect.(*sliceType).NumIn": 1,
                "reflect.(*sliceType).NumMethod": 1,
                "reflect.(*sliceType).NumOut": 1,
                "reflect.(*sliceType).Out": 1,
                "reflect.(*sliceType).PkgPath": 1,
                "reflect.(*sliceType).Size": 1,
                "reflect.(*sliceType).String": 1,
                "reflect.(*sliceType).common": 1,
                "reflect.(*sliceType).uncommon": 1,
                "type..hash.[27]string": 1,
                "type..eq.[27]string": 1,
                "type..hash.struct { reflect.b bool": 1,
                "reflect.x interface {} }": 2,
                "type..eq.struct { reflect.b bool": 1,
                "go.(*struct { sync.Mutex": 2,
                "reflect.m sync.Map }).Lock": 1,
                "reflect.m sync.Map }).Unlock": 1,
                "sort.Search": 1,
                "sort.SearchStrings": 1,
                "sort.StringSlice.Search": 1,
                "sort.Slice": 1,
                "sort.insertionSort": 1,
                "sort.siftDown": 1,
                "sort.heapSort": 1,
                "sort.medianOfThree": 1,
                "sort.swapRange": 1,
                "sort.doPivot": 1,
                "sort.quickSort": 1,
                "sort.Sort": 1,
                "sort.maxDepth": 1,
                "sort.StringSlice.Len": 1,
                "sort.StringSlice.Less": 1,
                "sort.StringSlice.Swap": 1,
                "sort.StringSlice.Sort": 1,
                "sort.Stable": 1,
                "sort.stable": 1,
                "sort.symMerge": 1,
                "sort.rotate": 1,
                "sort.insertionSort_func": 1,
                "sort.siftDown_func": 1,
                "sort.heapSort_func": 1,
                "sort.medianOfThree_func": 1,
                "sort.doPivot_func": 1,
                "sort.quickSort_func": 1,
                "sort.SearchStrings.func1": 1,
                "sort.init": 1,
                "sort.(*StringSlice).Len": 1,
                "sort.(*StringSlice).Less": 1,
                "sort.(*StringSlice).Search": 1,
                "sort.(*StringSlice).Sort": 1,
                "sort.(*StringSlice).Swap": 1,
                "internal/fmtsort.(*SortedMap).Len": 1,
                "internal/fmtsort.(*SortedMap).Less": 1,
                "internal/fmtsort.(*SortedMap).Swap": 1,
                "internal/fmtsort.Sort": 1,
                "internal/fmtsort.compare": 1,
                "internal/fmtsort.floatCompare": 1,
                "internal/fmtsort.isNaN": 1,
                "internal/fmtsort.nilCompare": 1,
                "internal/fmtsort.init": 1,
                "internal/syscall/windows/sysdll.Add": 1,
                "internal/syscall/windows/sysdll.init.ializers": 1,
                "internal/syscall/windows/sysdll.init": 1,
                "unicode/utf16.Encode": 1,
                "unicode/utf16.EncodeRune": 1,
                "unicode/utf16.Decode": 1,
                "unicode/utf16.DecodeRune": 1,
                "syscall.(*DLLError).Error": 1,
                "syscall.init.0": 1,
                "syscall.LoadDLL": 1,
                "syscall.UTF16PtrFromString": 1,
                "syscall.(*DLL).FindProc": 1,
                "syscall.BytePtrFromString": 1,
                "syscall.(*DLL).MustFindProc": 1,
                "syscall.(*DLL).Release": 1,
                "syscall.(*Proc).Addr": 1,
                "syscall.(*Proc).Call": 1,
                "syscall.(*LazyDLL).Load": 1,
                "syscall.(*LazyDLL).Handle": 1,
                "syscall.(*LazyDLL).mustLoad": 1,
                "syscall.(*LazyDLL).NewProc": 1,
                "syscall.NewLazyDLL": 1,
                "syscall.(*LazyProc).Find": 1,
                "syscall.(*LazyProc).mustFind": 1,
                "syscall.(*LazyProc).Addr": 1,
                "syscall.(*LazyProc).Call": 1,
                "syscall.FullPath": 1,
                "syscall.TranslateAccountName": 1,
                "syscall.StringToSid": 1,
                "syscall.LookupSID": 1,
                "syscall.(*SID).String": 1,
                "syscall.(*SID).Len": 1,
                "syscall.(*SID).Copy": 1,
                "syscall.(*SID).LookupAccount": 1,
                "syscall.OpenCurrentProcessToken": 1,
                "syscall.Token.Close": 1,
                "syscall.Token.getInfo": 1,
                "syscall.Token.GetTokenUser": 1,
                "syscall.Token.GetTokenPrimaryGroup": 1,
                "syscall.Token.GetUserProfileDirectory": 1,
                "syscall.itoa": 1,
                "syscall.uitoa": 1,
                "syscall.ByteSliceFromString": 1,
                "syscall.UTF16FromString": 1,
                "syscall.UTF16ToString": 1,
                "syscall.StringToUTF16Ptr": 1,
                "syscall.StringToUTF16": 1,
                "syscall.Errno.Error": 1,
                "syscall.Errno.Temporary": 1,
                "syscall.Errno.Timeout": 1,
                "syscall.Open": 1,
                "syscall.makeInheritSa": 1,
                "syscall.Read": 1,
                "syscall.Write": 1,
                "syscall.setFilePointerEx": 1,
                "syscall.errnoErr": 1,
                "syscall.Seek": 1,
                "syscall.getStdHandle": 1,
                "syscall.CloseOnExec": 1,
                "syscall.Ftruncate": 1,
                "syscall.(*SockaddrInet4).sockaddr": 1,
                "syscall.(*SockaddrInet6).sockaddr": 1,
                "syscall.(*SockaddrUnix).sockaddr": 1,
                "syscall.(*RawSockaddrAny).Sockaddr": 1,
                "syscall.WSASendto": 1,
                "syscall.LoadConnectEx": 1,
                "syscall.connectEx": 1,
                "syscall.ConnectEx": 1,
                "syscall.WaitStatus.Exited": 1,
                "syscall.WaitStatus.ExitStatus": 1,
                "syscall.WaitStatus.Signal": 1,
                "syscall.WaitStatus.CoreDump": 1,
                "syscall.WaitStatus.Stopped": 1,
                "syscall.WaitStatus.Continued": 1,
                "syscall.WaitStatus.StopSignal": 1,
                "syscall.WaitStatus.Signaled": 1,
                "syscall.WaitStatus.TrapCause": 1,
                "syscall.SetsockoptLinger": 1,
                "syscall.FindFirstFile": 1,
                "syscall.copyFindData": 1,
                "syscall.FindNextFile": 1,
                "syscall.Signal.Signal": 1,
                "syscall.Signal.String": 1,
                "syscall.(*Filetime).Nanoseconds": 1,
                "syscall.FreeLibrary": 1,
                "syscall.formatMessage": 1,
                "syscall.CreateFile": 1,
                "syscall.ReadFile": 1,
                "syscall.WriteFile": 1,
                "syscall.CloseHandle": 1,
                "syscall.GetStdHandle": 1,
                "syscall.findFirstFile1": 1,
                "syscall.findNextFile1": 1,
                "syscall.FindClose": 1,
                "syscall.GetFileInformationByHandle": 1,
                "syscall.SetEndOfFile": 1,
                "syscall.GetTimeZoneInformation": 1,
                "syscall.CancelIo": 1,
                "syscall.CancelIoEx": 1,
                "syscall.OpenProcess": 1,
                "syscall.TerminateProcess": 1,
                "syscall.GetExitCodeProcess": 1,
                "syscall.GetCurrentProcess": 1,
                "syscall.GetProcessTimes": 1,
                "syscall.WaitForSingleObject": 1,
                "syscall.GetFileType": 1,
                "syscall.GetFileAttributesEx": 1,
                "syscall.GetCommandLine": 1,
                "syscall.LocalFree": 1,
                "syscall.SetHandleInformation": 1,
                "syscall.FlushFileBuffers": 1,
                "syscall.GetFullPathName": 1,
                "syscall.RegOpenKeyEx": 1,
                "syscall.RegCloseKey": 1,
                "syscall.RegQueryInfoKey": 1,
                "syscall.RegEnumKeyEx": 1,
                "syscall.RegQueryValueEx": 1,
                "syscall.getCurrentProcessId": 1,
                "syscall.GetConsoleMode": 1,
                "syscall.WriteConsole": 1,
                "syscall.ReadConsole": 1,
                "syscall.WSAStartup": 1,
                "syscall.WSAIoctl": 1,
                "syscall.socket": 1,
                "syscall.Setsockopt": 1,
                "syscall.shutdown": 1,
                "syscall.Closesocket": 1,
                "syscall.AcceptEx": 1,
                "syscall.WSARecv": 1,
                "syscall.WSASend": 1,
                "syscall.WSARecvFrom": 1,
                "syscall.WSASendTo": 1,
                "syscall.SetFileCompletionNotificationModes": 1,
                "syscall.WSAEnumProtocols": 1,
                "syscall.TranslateName": 1,
                "syscall.NetUserGetInfo": 1,
                "syscall.NetGetJoinInformation": 1,
                "syscall.NetApiBufferFree": 1,
                "syscall.LookupAccountSid": 1,
                "syscall.LookupAccountName": 1,
                "syscall.ConvertSidToStringSid": 1,
                "syscall.ConvertStringSidToSid": 1,
                "syscall.GetLengthSid": 1,
                "syscall.CopySid": 1,
                "syscall.OpenProcessToken": 1,
                "syscall.GetTokenInformation": 1,
                "syscall.GetUserProfileDirectory": 1,
                "syscall.getSystemDirectory": 1,
                "syscall.LoadConnectEx.func1": 1,
                "syscall.Socket": 1,
                "syscall.init.ializers": 1,
                "syscall.init": 1,
                "type..hash.syscall.DLL": 1,
                "type..eq.syscall.DLL": 1,
                "type..hash.syscall.Proc": 1,
                "type..eq.syscall.Proc": 1,
                "type..hash.syscall.DLLError": 1,
                "type..eq.syscall.DLLError": 1,
                "syscall.(*Errno).Error": 1,
                "syscall.(*Errno).Temporary": 1,
                "syscall.(*Errno).Timeout": 1,
                "type..hash.syscall.LazyDLL": 1,
                "type..eq.syscall.LazyDLL": 1,
                "type..hash.syscall.LazyProc": 1,
                "type..eq.syscall.LazyProc": 1,
                "syscall.(*Token).Close": 1,
                "syscall.(*Token).GetTokenPrimaryGroup": 1,
                "syscall.(*Token).GetTokenUser": 1,
                "syscall.(*Token).GetUserProfileDirectory": 1,
                "type..hash.syscall.SIDAndAttributes": 1,
                "type..eq.syscall.SIDAndAttributes": 1,
                "type..hash.syscall.Tokenuser": 1,
                "type..eq.syscall.Tokenuser": 1,
                "type..hash.syscall.SysProcAttr": 1,
                "type..eq.syscall.SysProcAttr": 1,
                "type..hash.syscall.SecurityAttributes": 1,
                "type..eq.syscall.SecurityAttributes": 1,
                "syscall.(*Signal).Signal": 1,
                "syscall.(*Signal).String": 1,
                "type..hash.syscall.SockaddrInet4": 1,
                "type..eq.syscall.SockaddrInet4": 1,
                "type..hash.syscall.SockaddrUnix": 1,
                "type..eq.syscall.SockaddrUnix": 1,
                "type..hash.syscall.WSABuf": 1,
                "type..eq.syscall.WSABuf": 1,
                "type..hash.syscall.WSAData": 1,
                "type..eq.syscall.WSAData": 1,
                "syscall.(*WaitStatus).Continued": 1,
                "syscall.(*WaitStatus).CoreDump": 1,
                "syscall.(*WaitStatus).ExitStatus": 1,
                "syscall.(*WaitStatus).Exited": 1,
                "syscall.(*WaitStatus).Signal": 1,
                "syscall.(*WaitStatus).Signaled": 1,
                "syscall.(*WaitStatus).StopSignal": 1,
                "syscall.(*WaitStatus).Stopped": 1,
                "syscall.(*WaitStatus).TrapCause": 1,
                "type..hash.[131]string": 1,
                "type..eq.[131]string": 1,
                "type..hash.[16]string": 1,
                "type..eq.[16]string": 1,
                "type..hash.struct { syscall.once sync.Once": 1,
                "syscall.addr uintptr": 2,
                "syscall.err error }": 2,
                "type..eq.struct { syscall.once sync.Once": 1,
                "internal/testlog.Open": 1,
                "internal/testlog.Logger": 1,
                "internal/testlog.Stat": 1,
                "internal/syscall/windows/registry.Key.Close": 1,
                "internal/syscall/windows/registry.OpenKey": 1,
                "internal/syscall/windows/registry.Key.ReadSubKeyNames": 1,
                "internal/syscall/windows/registry.Key.Stat": 1,
                "internal/syscall/windows/registry.Key.GetValue": 1,
                "internal/syscall/windows/registry.Key.getValue": 1,
                "internal/syscall/windows/registry.Key.GetStringValue": 1,
                "internal/syscall/windows/registry.Key.GetMUIStringValue": 1,
                "internal/syscall/windows/registry.ExpandString": 1,
                "internal/syscall/windows/registry.Key.GetStringsValue": 1,
                "internal/syscall/windows/registry.Key.GetIntegerValue": 1,
                "internal/syscall/windows/registry.Key.GetBinaryValue": 1,
                "internal/syscall/windows/registry.Key.setValue": 1,
                "internal/syscall/windows/registry.Key.SetDWordValue": 1,
                "internal/syscall/windows/registry.Key.SetQWordValue": 1,
                "internal/syscall/windows/registry.Key.setStringValue": 1,
                "internal/syscall/windows/registry.Key.SetStringValue": 1,
                "internal/syscall/windows/registry.Key.SetExpandStringValue": 1,
                "internal/syscall/windows/registry.Key.SetStringsValue": 1,
                "internal/syscall/windows/registry.Key.SetBinaryValue": 1,
                "internal/syscall/windows/registry.Key.DeleteValue": 1,
                "internal/syscall/windows/registry.Key.ReadValueNames": 1,
                "internal/syscall/windows/registry.regSetValueEx": 1,
                "internal/syscall/windows/registry.regEnumValue": 1,
                "internal/syscall/windows/registry.regDeleteValue": 1,
                "internal/syscall/windows/registry.regLoadMUIString": 1,
                "internal/syscall/windows/registry.expandEnvironmentStrings": 1,
                "internal/syscall/windows/registry.errnoErr": 1,
                "internal/syscall/windows/registry.init.ializers": 1,
                "internal/syscall/windows/registry.init": 1,
                "internal/syscall/windows/registry.(*Key).Close": 1,
                "internal/syscall/windows/registry.(*Key).DeleteValue": 1,
                "internal/syscall/windows/registry.(*Key).GetBinaryValue": 1,
                "internal/syscall/windows/registry.(*Key).GetIntegerValue": 1,
                "internal/syscall/windows/registry.(*Key).GetMUIStringValue": 1,
                "internal/syscall/windows/registry.(*Key).GetStringValue": 1,
                "internal/syscall/windows/registry.(*Key).GetStringsValue": 1,
                "internal/syscall/windows/registry.(*Key).GetValue": 1,
                "internal/syscall/windows/registry.(*Key).ReadSubKeyNames": 1,
                "internal/syscall/windows/registry.(*Key).ReadValueNames": 1,
                "internal/syscall/windows/registry.(*Key).SetBinaryValue": 1,
                "internal/syscall/windows/registry.(*Key).SetDWordValue": 1,
                "internal/syscall/windows/registry.(*Key).SetExpandStringValue": 1,
                "internal/syscall/windows/registry.(*Key).SetQWordValue": 1,
                "internal/syscall/windows/registry.(*Key).SetStringValue": 1,
                "internal/syscall/windows/registry.(*Key).SetStringsValue": 1,
                "internal/syscall/windows/registry.(*Key).Stat": 1,
                "time.nextStdChunk": 1,
                "time.isDigit": 1,
                "time.startsWithLowerCase": 1,
                "time.match": 1,
                "time.lookup": 1,
                "time.appendInt": 1,
                "time.atoi": 1,
                "time.formatNano": 1,
                "time.Time.String": 1,
                "time.Time.Format": 1,
                "time.Time.AppendFormat": 1,
                "time.absClock": 1,
                "time.Time.Nanosecond": 1,
                "time.(*Time).nsec": 1,
                "time.absWeekday": 1,
                "time.(*ParseError).Error": 1,
                "time.quote": 1,
                "time.getnum": 1,
                "time.cutspace": 1,
                "time.skip": 1,
                "time.parse": 1,
                "time.daysIn": 1,
                "time.isLeap": 1,
                "time.(*Time).unixSec": 1,
                "time.(*Time).sec": 1,
                "time.FixedZone": 1,
                "time.(*Time).setLoc": 1,
                "time.(*Time).stripMono": 1,
                "time.parseTimeZone": 1,
                "time.parseGMT": 1,
                "time.parseSignedOffset": 1,
                "time.parseNanoseconds": 1,
                "time.leadingInt": 1,
                "time.(*Time).addSec": 1,
                "time.Time.After": 1,
                "time.Time.Before": 1,
                "time.Time.Equal": 1,
                "time.Month.String": 1,
                "time.Weekday.String": 1,
                "time.Time.IsZero": 1,
                "time.Time.abs": 1,
                "time.(*Location).get": 1,
                "time.Time.locabs": 1,
                "time.Time.Date": 1,
                "time.Time.Year": 1,
                "time.Time.Month": 1,
                "time.Time.Day": 1,
                "time.Time.Weekday": 1,
                "time.Time.ISOWeek": 1,
                "time.Time.Clock": 1,
                "time.Time.Hour": 1,
                "time.Time.Minute": 1,
                "time.Time.Second": 1,
                "time.Time.YearDay": 1,
                "time.Duration.String": 1,
                "time.fmtFrac": 1,
                "time.fmtInt": 1,
                "time.Duration.Nanoseconds": 1,
                "time.Duration.Seconds": 1,
                "time.Duration.Minutes": 1,
                "time.Duration.Hours": 1,
                "time.Duration.Truncate": 1,
                "time.Duration.Round": 1,
                "time.lessThanHalf": 1,
                "time.Time.Add": 1,
                "time.Time.Sub": 1,
                "time.Since": 1,
                "time.Until": 1,
                "time.Time.AddDate": 1,
                "time.Time.Location": 1,
                "time.Time.date": 1,
                "time.absDate": 1,
                "time.Now": 1,
                "time.Time.UTC": 1,
                "time.Time.Local": 1,
                "time.Time.In": 1,
                "time.Time.Zone": 1,
                "time.Time.Unix": 1,
                "time.Time.UnixNano": 1,
                "time.Time.MarshalBinary": 1,
                "time.(*Time).UnmarshalBinary": 1,
                "time.Time.GobEncode": 1,
                "time.(*Time).GobDecode": 1,
                "time.Time.MarshalJSON": 1,
                "time.(*Time).UnmarshalJSON": 1,
                "time.Parse": 1,
                "time.Time.MarshalText": 1,
                "time.(*Time).UnmarshalText": 1,
                "time.Unix": 1,
                "time.unixTime": 1,
                "time.Date": 1,
                "time.norm": 1,
                "time.Time.Truncate": 1,
                "time.Time.Round": 1,
                "time.div": 1,
                "time.(*Location).String": 1,
                "time.(*Location).lookup": 1,
                "time.(*Location).lookupFirstZone": 1,
                "time.(*Location).firstZoneUsed": 1,
                "time.(*Location).lookupName": 1,
                "time.matchZoneKey": 1,
                "internal/syscall/windows/registry.LoadRegLoadMUIString": 1,
                "time.toEnglishName": 1,
                "time.extractCAPS": 1,
                "time.abbrev": 1,
                "time.pseudoUnix": 1,
                "time.initLocalFromTZI": 1,
                "time.initLocal": 1,
                "time.init.ializers": 1,
                "time.init": 1,
                "type..hash.time.zone": 1,
                "type..eq.time.zone": 1,
                "type..hash.time.zoneTrans": 1,
                "type..eq.time.zoneTrans": 1,
                "time.(*Time).Add": 1,
                "time.(*Time).AddDate": 1,
                "time.(*Time).After": 1,
                "time.(*Time).AppendFormat": 1,
                "time.(*Time).Before": 1,
                "time.(*Time).Clock": 1,
                "time.(*Time).Date": 1,
                "time.(*Time).Day": 1,
                "time.(*Time).Equal": 1,
                "time.(*Time).Format": 1,
                "time.(*Time).GobEncode": 1,
                "time.(*Time).Hour": 1,
                "time.(*Time).ISOWeek": 1,
                "time.(*Time).In": 1,
                "time.(*Time).IsZero": 1,
                "time.(*Time).Local": 1,
                "time.(*Time).Location": 1,
                "time.(*Time).MarshalBinary": 1,
                "time.(*Time).MarshalJSON": 1,
                "time.(*Time).MarshalText": 1,
                "time.(*Time).Minute": 1,
                "time.(*Time).Month": 1,
                "time.(*Time).Nanosecond": 1,
                "time.(*Time).Round": 1,
                "time.(*Time).Second": 1,
                "time.(*Time).String": 1,
                "time.(*Time).Sub": 1,
                "time.(*Time).Truncate": 1,
                "time.(*Time).UTC": 1,
                "time.(*Time).Unix": 1,
                "time.(*Time).UnixNano": 1,
                "time.(*Time).Weekday": 1,
                "time.(*Time).Year": 1,
                "time.(*Time).YearDay": 1,
                "time.(*Time).Zone": 1,
                "time.(*Duration).Hours": 1,
                "time.(*Duration).Minutes": 1,
                "time.(*Duration).Nanoseconds": 1,
                "time.(*Duration).Round": 1,
                "time.(*Duration).Seconds": 1,
                "time.(*Duration).String": 1,
                "time.(*Duration).Truncate": 1,
                "time.(*Month).String": 1,
                "time.(*Weekday).String": 1,
                "type..hash.[8]string": 1,
                "type..eq.[8]string": 1,
                "type..hash.time.ParseError": 1,
                "type..eq.time.ParseError": 1,
                "type..hash.time.abbr": 1,
                "type..eq.time.abbr": 1,
                "type..hash.[12]string": 1,
                "type..eq.[12]string": 1,
                "type..hash.[134]time.abbr": 1,
                "type..eq.[134]time.abbr": 1,
                "type..hash.[134]string": 1,
                "type..eq.[134]string": 1,
                "type..hash.[1]time.zone": 1,
                "type..eq.[1]time.zone": 1,
                "type..hash.[1]time.zoneTrans": 1,
                "type..eq.[1]time.zoneTrans": 1,
                "type..hash.[7]string": 1,
                "type..eq.[7]string": 1,
                "internal/syscall/windows.loadWSASendRecvMsg": 1,
                "internal/syscall/windows.WSASendMsg": 1,
                "internal/syscall/windows.errnoErr": 1,
                "internal/syscall/windows.WSARecvMsg": 1,
                "internal/syscall/windows.GetComputerNameEx": 1,
                "internal/syscall/windows.GetModuleFileName": 1,
                "internal/syscall/windows.NetUserGetLocalGroups": 1,
                "internal/syscall/windows.GetFileInformationByHandleEx": 1,
                "internal/syscall/windows.loadWSASendRecvMsg.func1": 1,
                "internal/syscall/windows.init.ializers": 1,
                "internal/syscall/windows.init": 1,
                "type..hash.internal/syscall/windows.WSAMsg": 1,
                "type..eq.internal/syscall/windows.WSAMsg": 1,
                "type..hash.struct { internal/syscall/windows.once sync.Once": 1,
                "internal/syscall/windows.sendAddr uintptr": 2,
                "internal/syscall/windows.recvAddr uintptr": 2,
                "internal/syscall/windows.err error }": 2,
                "type..eq.struct { internal/syscall/windows.once sync.Once": 1,
                "internal/poll.(*TimeoutError).Error": 1,
                "internal/poll.(*TimeoutError).Timeout": 1,
                "internal/poll.(*TimeoutError).Temporary": 1,
                "internal/poll.consume": 1,
                "internal/poll.(*FD).Fsync": 1,
                "internal/poll.(*FD).incref": 1,
                "syscall.Fsync": 1,
                "internal/poll.errClosing": 1,
                "internal/poll.(*fdMutex).incref": 1,
                "internal/poll.(*fdMutex).increfAndClose": 1,
                "internal/poll.(*fdMutex).decref": 1,
                "internal/poll.(*fdMutex).rwlock": 1,
                "internal/poll.(*fdMutex).rwunlock": 1,
                "internal/poll.(*FD).decref": 1,
                "internal/poll.(*FD).readUnlock": 1,
                "internal/poll.(*FD).writeUnlock": 1,
                "internal/poll.(*pollDesc).init": 1,
                "internal/poll.(*pollDesc).prepare": 1,
                "internal/poll.convertErr": 1,
                "internal/poll.(*pollDesc).wait": 1,
                "internal/poll.(*FD).SetDeadline": 1,
                "internal/poll.(*FD).SetReadDeadline": 1,
                "internal/poll.(*FD).SetWriteDeadline": 1,
                "internal/poll.setDeadlineImpl": 1,
                "internal/poll.(*FD).Fchmod": 1,
                "internal/poll.(*FD).Fchown": 1,
                "internal/poll.(*FD).Ftruncate": 1,
                "internal/poll.checkSetFileCompletionNotificationModes": 1,
                "syscall.LoadSetFileCompletionNotificationModes": 1,
                "internal/poll.init.0": 1,
                "syscall.LoadCancelIoEx": 1,
                "internal/poll.(*operation).InitBuf": 1,
                "internal/poll.(*operation).InitBufs": 1,
                "internal/poll.(*operation).ClearBufs": 1,
                "internal/poll.(*operation).InitMsg": 1,
                "internal/poll.(*ioSrv).ProcessRemoteIO": 1,
                "internal/poll.(*ioSrv).ExecIO": 1,
                "internal/poll.(*pollDesc).waitCanceled": 1,
                "internal/poll.startServer": 1,
                "internal/poll.(*FD).Init": 1,
                "internal/poll.(*FD).destroy": 1,
                "internal/poll.(*pollDesc).close": 1,
                "internal/poll.(*FD).Close": 1,
                "internal/poll.(*pollDesc).evict": 1,
                "internal/poll.(*FD).Shutdown": 1,
                "syscall.Shutdown": 1,
                "internal/poll.(*FD).Read": 1,
                "internal/poll.(*FD).readLock": 1,
                "internal/poll.(*FD).eofError": 1,
                "internal/poll.(*FD).readConsole": 1,
                "unicode/utf16.IsSurrogate": 1,
                "internal/poll.(*FD).Pread": 1,
                "internal/poll.(*FD).ReadFrom": 1,
                "internal/poll.(*FD).Write": 1,
                "internal/poll.(*FD).writeLock": 1,
                "internal/poll.(*FD).writeConsole": 1,
                "internal/poll.(*FD).Pwrite": 1,
                "internal/poll.(*FD).Writev": 1,
                "internal/poll.(*FD).WriteTo": 1,
                "internal/poll.(*FD).ConnectEx": 1,
                "internal/poll.(*FD).acceptOne": 1,
                "internal/poll.(*FD).Accept": 1,
                "internal/poll.(*FD).Seek": 1,
                "internal/poll.(*FD).FindNextFile": 1,
                "internal/poll.(*FD).Fchdir": 1,
                "internal/poll.(*FD).GetFileType": 1,
                "internal/poll.(*FD).GetFileInformationByHandle": 1,
                "internal/poll.(*FD).RawControl": 1,
                "internal/poll.(*FD).RawRead": 1,
                "internal/poll.(*FD).RawWrite": 1,
                "internal/poll.sockaddrToRaw": 1,
                "internal/poll.(*FD).ReadMsg": 1,
                "internal/poll.(*FD).WriteMsg": 1,
                "internal/poll.(*FD).SetsockoptInt": 1,
                "syscall.SetsockoptInt": 1,
                "internal/poll.(*FD).SetsockoptInet4Addr": 1,
                "syscall.SetsockoptInet4Addr": 1,
                "internal/poll.(*FD).SetsockoptLinger": 1,
                "internal/poll.(*FD).Setsockopt": 1,
                "internal/poll.(*FD).WSAIoctl": 1,
                "internal/poll.(*FD).SetsockoptIPMreq": 1,
                "syscall.SetsockoptIPMreq": 1,
                "internal/poll.(*FD).SetsockoptIPv6Mreq": 1,
                "internal/poll.glob..func1": 1,
                "internal/poll.(*FD).Read.func1": 1,
                "internal/poll.(*FD).ReadFrom.func1": 1,
                "internal/poll.(*FD).Write.func1": 1,
                "internal/poll.(*FD).Writev.func1": 1,
                "internal/poll.(*FD).WriteTo.func1": 1,
                "internal/poll.(*FD).WriteTo.func2": 1,
                "internal/poll.(*FD).ConnectEx.func1": 1,
                "internal/poll.(*FD).acceptOne.func1": 1,
                "internal/poll.(*FD).RawRead.func1": 1,
                "internal/poll.(*FD).ReadMsg.func1": 1,
                "internal/poll.(*FD).WriteMsg.func1": 1,
                "internal/poll.init.ializers": 1,
                "internal/poll.init": 1,
                "os.(*File).Readdir": 1,
                "os.(*File).Readdirnames": 1,
                "os.(*File).readdir": 1,
                "os.(*file).isdir": 1,
                "os.newFileStatFromWin32finddata": 1,
                "os.(*File).readdirnames": 1,
                "os.(*PathError).Error": 1,
                "os.(*PathError).Timeout": 1,
                "os.(*SyscallError).Error": 1,
                "os.(*SyscallError).Timeout": 1,
                "os.(*Process).Release": 1,
                "os.(*Process).Kill": 1,
                "os.(*Process).kill": 1,
                "os.(*Process).Signal": 1,
                "os.(*Process).Wait": 1,
                "os.(*ProcessState).UserTime": 1,
                "os.(*ProcessState).userTime": 1,
                "os.ftToDuration": 1,
                "os.(*ProcessState).SystemTime": 1,
                "os.(*ProcessState).systemTime": 1,
                "os.(*ProcessState).Exited": 1,
                "os.(*ProcessState).exited": 1,
                "os.(*ProcessState).Success": 1,
                "os.(*ProcessState).success": 1,
                "os.(*ProcessState).Sys": 1,
                "os.(*ProcessState).sys": 1,
                "os.(*ProcessState).SysUsage": 1,
                "os.(*ProcessState).sysUsage": 1,
                "os.(*ProcessState).Pid": 1,
                "os.(*ProcessState).String": 1,
                "os.(*ProcessState).ExitCode": 1,
                "os.(*Process).wait": 1,
                "os.NewSyscallError": 1,
                "os.(*Process).setDone": 1,
                "os.terminateProcess": 1,
                "os.(*Process).signal": 1,
                "os.(*Process).done": 1,
                "os.(*Process).release": 1,
                "os.findProcess": 1,
                "os.newProcess": 1,
                "os.init.0": 1,
                "os.Executable": 1,
                "os.executable": 1,
                "os.appendBSBytes": 1,
                "os.readNextArg": 1,
                "os.commandLineToArgv": 1,
                "os.getModuleFileName": 1,
                "os.(*File).Name": 1,
                "os.(*LinkError).Error": 1,
                "os.(*File).Read": 1,
                "os.(*File).checkValid": 1,
                "os.(*File).read": 1,
                "os.(*File).wrapErr": 1,
                "os.(*File).ReadAt": 1,
                "os.(*File).pread": 1,
                "os.(*File).Write": 1,
                "os.(*File).write": 1,
                "os.(*File).WriteAt": 1,
                "os.(*File).pwrite": 1,
                "os.(*File).Seek": 1,
                "os.(*File).seek": 1,
                "os.(*File).WriteString": 1,
                "os.OpenFile": 1,
                "os.(*File).Chmod": 1,
                "os.(*File).SetDeadline": 1,
                "os.(*File).SetReadDeadline": 1,
                "os.(*File).SetWriteDeadline": 1,
                "os.(*File).SyscallConn": 1,
                "os.newRawConn": 1,
                "os.(*File).chmod": 1,
                "os.syscallMode": 1,
                "os.FileMode.Perm": 1,
                "os.(*File).Chown": 1,
                "os.(*File).Truncate": 1,
                "os.(*File).Sync": 1,
                "os.(*File).Chdir": 1,
                "os.(*File).setDeadline": 1,
                "os.(*File).setReadDeadline": 1,
                "os.(*File).setWriteDeadline": 1,
                "os.(*File).Fd": 1,
                "os.newFile": 1,
                "os.NewFile": 1,
                "os.openFile": 1,
                "os.openDir": 1,
                "os.openFileNolog": 1,
                "os.(*File).Close": 1,
                "os.(*file).close": 1,
                "os.basename": 1,
                "os.isAbs": 1,
                "os.IsPathSeparator": 1,
                "os.volumeName": 1,
                "os.fixLongPath": 1,
                "os.init.1": 1,
                "os.Exit": 1,
                "os.(*rawConn).Control": 1,
                "os.(*rawConn).Read": 1,
                "os.(*rawConn).Write": 1,
                "os.Stat": 1,
                "os.statNolog": 1,
                "os.(*File).Stat": 1,
                "os.isNulName": 1,
                "os.stat": 1,
                "os.itoa": 1,
                "os.uitoa": 1,
                "os.hostname": 1,
                "os.FileMode.String": 1,
                "os.FileMode.IsDir": 1,
                "os.FileMode.IsRegular": 1,
                "os.(*fileStat).Name": 1,
                "os.(*fileStat).IsDir": 1,
                "os.(*fileStat).Mode": 1,
                "os.(*fileStat).isSymlink": 1,
                "os.newFileStatFromGetFileInformationByHandle": 1,
                "os.(*fileStat).Size": 1,
                "os.(*fileStat).ModTime": 1,
                "os.(*fileStat).Sys": 1,
                "os.init.ializers": 1,
                "os.init": 1,
                "os.(*fileStat).Lock": 1,
                "os.(*fileStat).Unlock": 1,
                "type..hash.os.dirInfo": 1,
                "type..eq.os.dirInfo": 1,
                "os.(*FileMode).IsDir": 1,
                "os.(*FileMode).IsRegular": 1,
                "os.(*FileMode).Perm": 1,
                "os.(*FileMode).String": 1,
                "type..hash.os.LinkError": 1,
                "type..eq.os.LinkError": 1,
                "type..hash.os.PathError": 1,
                "type..eq.os.PathError": 1,
                "type..hash.os.Process": 1,
                "type..eq.os.Process": 1,
                "type..hash.os.ProcessState": 1,
                "type..eq.os.ProcessState": 1,
                "type..hash.os.SyscallError": 1,
                "type..eq.os.SyscallError": 1,
                "type..hash.os.fileStat": 1,
                "type..eq.os.fileStat": 1,
                "fmt.(*fmt).writePadding": 1,
                "fmt.(*fmt).pad": 1,
                "fmt.(*buffer).Write": 1,
                "-v0(/Q&": 1,
                "fmt.(*fmt).padString": 1,
                "fmt.(*buffer).WriteString": 1,
                "IvL(KQB": 1,
                "fmt.(*fmt).fmtBoolean": 1,
                "fmt.(*fmt).fmtUnicode": 1,
                "unicode/utf8.RuneLen": 1,
                "fmt.(*fmt).fmtInteger": 1,
                "fmt.(*fmt).truncateString": 1,
                "fmt.(*fmt).truncate": 1,
                "fmt.(*fmt).fmtS": 1,
                "fmt.(*fmt).fmtBs": 1,
                "fmt.(*fmt).fmtSbx": 1,
                "fmt.(*fmt).fmtQ": 1,
                "strconv.AppendQuoteToASCII": 1,
                "strconv.AppendQuote": 1,
                "fmt.(*fmt).fmtC": 1,
                "fmt.(*fmt).fmtQc": 1,
                "strconv.AppendQuoteRuneToASCII": 1,
                "strconv.AppendQuoteRune": 1,
                "fmt.(*fmt).fmtFloat": 1,
                "strconv.AppendFloat": 1,
                "fmt.(*buffer).WriteByte": 1,
                "fmt.(*buffer).WriteRune": 1,
                "fmt.newPrinter": 1,
                "fmt.(*fmt).init": 1,
                "fmt.(*fmt).clearflags": 1,
                "fmt.(*pp).free": 1,
                "fmt.(*pp).Width": 1,
                "fmt.(*pp).Precision": 1,
                "fmt.(*pp).Flag": 1,
                "fmt.(*pp).Write": 1,
                "fmt.(*pp).WriteString": 1,
                "fmt.Fprintf": 1,
                "fmt.Sprintf": 1,
                "fmt.Sprint": 1,
                "fmt.Fprintln": 1,
                "fmt.Sprintln": 1,
                "fmt.getField": 1,
                "fmt.parsenum": 1,
                "fmt.tooLarge": 1,
                "fmt.(*pp).unknownType": 1,
                "fmt.(*pp).badVerb": 1,
                "fmt.(*pp).fmtBool": 1,
                "fmt.(*pp).fmt0x64": 1,
                "fmt.(*pp).fmtInteger": 1,
                "fmt.(*pp).fmtFloat": 1,
                "fmt.(*pp).fmtComplex": 1,
                "fmt.(*pp).fmtString": 1,
                "fmt.(*fmt).fmtSx": 1,
                "fmt.(*pp).fmtBytes": 1,
                "fmt.(*fmt).fmtBx": 1,
                "fmt.(*pp).fmtPointer": 1,
                "fmt.(*pp).catchPanic": 1,
                "fmt.(*pp).handleMethods": 1,
                "fmt.(*pp).printArg": 1,
                "fmt.(*pp).printValue": 1,
                "(<'=*,)": 1,
                "F)E[FKE": 1,
                "fmt.intFromArg": 1,
                "fmt.parseArgNumber": 1,
                "fmt.(*pp).argNumber": 1,
                "fmt.(*pp).badArgNum": 1,
                "fmt.(*pp).missingArg": 1,
                "fmt.(*pp).doPrintf": 1,
                "fmt.(*pp).doPrint": 1,
                "fmt.(*pp).doPrintln": 1,
                "fmt.glob..func1": 1,
                "fmt.init.ializers": 1,
                "fmt.init": 1,
                "type..hash.fmt.fmt": 1,
                "type..eq.fmt.fmt": 1,
                "compress/flate.(*dictDecoder).writeCopy": 1,
                "compress/flate.init.0": 1,
                "compress/flate.newHuffmanBitWriter": 1,
                "compress/flate.newHuffmanEncoder": 1,
                "compress/flate.generateFixedLiteralEncoding": 1,
                "compress/flate.reverseBits": 1,
                "math/bits.Reverse16": 1,
                "compress/flate.generateFixedOffsetEncoding": 1,
                "compress/flate.(*huffmanEncoder).bitCounts": 1,
                "compress/flate.(*huffmanEncoder).assignEncodingAndSize": 1,
                "compress/flate.(*byLiteral).sort": 1,
                "compress/flate.(*huffmanEncoder).generate": 1,
                "compress/flate.(*hcode).set": 1,
                "compress/flate.(*byFreq).sort": 1,
                "compress/flate.byLiteral.Len": 1,
                "compress/flate.byLiteral.Less": 1,
                "compress/flate.byLiteral.Swap": 1,
                "compress/flate.byFreq.Len": 1,
                "compress/flate.byFreq.Less": 1,
                "compress/flate.byFreq.Swap": 1,
                "compress/flate.CorruptInputError.Error": 1,
                "compress/flate.InternalError.Error": 1,
                "compress/flate.(*huffmanDecoder).init": 1,
                "compress/flate.(*decompressor).nextBlock": 1,
                "compress/flate.(*decompressor).Read": 1,
                "compress/flate.(*dictDecoder).readFlush": 1,
                "compress/flate.(*decompressor).Close": 1,
                "compress/flate.(*decompressor).readHuffman": 1,
                "compress/flate.(*decompressor).huffmanBlock": 1,
                "compress/flate.(*dictDecoder).tryWriteCopy": 1,
                "compress/flate.(*dictDecoder).availWrite": 1,
                "compress/flate.(*dictDecoder).writeByte": 1,
                "math/bits.Reverse8": 1,
                "compress/flate.(*dictDecoder).histSize": 1,
                "compress/flate.(*decompressor).finishBlock": 1,
                "compress/flate.(*dictDecoder).availRead": 1,
                "compress/flate.(*decompressor).dataBlock": 1,
                "io.ReadFull": 1,
                "compress/flate.noEOF": 1,
                "compress/flate.(*decompressor).copyData": 1,
                "compress/flate.(*dictDecoder).writeSlice": 1,
                "compress/flate.(*dictDecoder).writeMark": 1,
                "compress/flate.(*decompressor).moreBits": 1,
                "compress/flate.(*decompressor).huffSym": 1,
                "compress/flate.fixedHuffmanDecoderInit": 1,
                "compress/flate.(*decompressor).Reset": 1,
                "compress/flate.makeReader": 1,
                "compress/flate.(*dictDecoder).init": 1,
                "bufio.NewReader": 1,
                "bufio.NewReaderSize": 1,
                "compress/flate.NewReader": 1,
                "compress/flate.fixedHuffmanDecoderInit.func1": 1,
                "compress/flate.init.ializers": 1,
                "compress/flate.init": 1,
                "compress/flate.(*byLiteral).Len": 1,
                "compress/flate.(*byLiteral).Less": 1,
                "compress/flate.(*byLiteral).Swap": 1,
                "compress/flate.(*byFreq).Len": 1,
                "compress/flate.(*byFreq).Less": 1,
                "compress/flate.(*byFreq).Swap": 1,
                "type..hash.compress/flate.literalNode": 1,
                "type..eq.compress/flate.literalNode": 1,
                "compress/flate.(*CorruptInputError).Error": 1,
                "compress/flate.(*InternalError).Error": 1,
                "encoding/binary.init.ializers": 1,
                "encoding/binary.init": 1,
                "hash.init": 1,
                "hash/crc32.ieeeInit": 1,
                "hash/crc32.archAvailableIEEE": 1,
                "hash/crc32.archInitIEEE": 1,
                "hash/crc32.Update": 1,
                "hash/crc32.ChecksumIEEE": 1,
                "hash/crc32.archUpdateIEEE": 1,
                "hash/crc32.simpleMakeTable": 1,
                "hash/crc32.simplePopulateTable": 1,
                "hash/crc32.simpleUpdate": 1,
                "hash/crc32.slicingMakeTable": 1,
                "hash/crc32.slicingUpdate": 1,
                "hash/crc32.ieeeInit.func1": 1,
                "hash/crc32.init.ializers": 1,
                "hash/crc32.init": 1,
                "hash/crc32.ieeeCLMUL": 1,
                "compress/gzip.NewReader": 1,
                "compress/gzip.(*Reader).Reset": 1,
                "compress/gzip.(*Reader).Multistream": 1,
                "compress/gzip.(*Reader).readString": 1,
                "compress/gzip.(*Reader).readHeader": 1,
                "encoding/binary.littleEndian.Uint32": 1,
                "compress/gzip.noEOF": 1,
                "encoding/binary.littleEndian.Uint16": 1,
                "compress/gzip.(*Reader).Read": 1,
                "compress/gzip.(*Reader).Close": 1,
                "compress/gzip.init.ializers": 1,
                "compress/gzip.init": 1,
                "crypto/subtle.ConstantTimeCompare": 1,
                "crypto/subtle.ConstantTimeByteEq": 1,
                "crypto/cipher.StreamReader.Read": 1,
                "crypto/cipher.NewOFB": 1,
                "crypto/cipher.(*ofb).refill": 1,
                "crypto/cipher.(*ofb).XORKeyStream": 1,
                "crypto/internal/subtle.InexactOverlap": 1,
                "crypto/internal/subtle.AnyOverlap": 1,
                "crypto/cipher.xorBytes": 1,
                "crypto/cipher.init.ializers": 1,
                "crypto/cipher.init": 1,
                "crypto/cipher.xorBytesSSE2": 1,
                "type..hash.crypto/cipher.StreamReader": 1,
                "type..eq.crypto/cipher.StreamReader": 1,
                "crypto/cipher.(*StreamReader).Read": 1,
                "crypto/aes.(*aesCipherGCM).NewGCM": 1,
                "crypto/aes.(*gcmAsm).NonceSize": 1,
                "crypto/aes.(*gcmAsm).Overhead": 1,
                "crypto/aes.(*gcmAsm).Seal": 1,
                "crypto/aes.sliceForAppend": 1,
                "crypto/aes.(*gcmAsm).Open": 1,
                "crypto/aes.encryptBlockGo": 1,
                "encoding/binary.bigEndian.Uint32": 1,
                "encoding/binary.bigEndian.PutUint32": 1,
                "crypto/aes.decryptBlockGo": 1,
                "crypto/aes.expandKeyGo": 1,
                "crypto/aes.rotw": 1,
                "crypto/aes.subw": 1,
                "crypto/aes.KeySizeError.Error": 1,
                "crypto/aes.NewCipher": 1,
                "crypto/aes.newCipherGeneric": 1,
                "crypto/aes.(*aesCipher).BlockSize": 1,
                "crypto/aes.(*aesCipher).Encrypt": 1,
                "crypto/aes.(*aesCipher).Decrypt": 1,
                "crypto/aes.newCipher": 1,
                "crypto/aes.(*aesCipherAsm).BlockSize": 1,
                "crypto/aes.(*aesCipherAsm).Encrypt": 1,
                "crypto/aes.(*aesCipherAsm).Decrypt": 1,
                "crypto/aes.init.ializers": 1,
                "crypto/aes.init": 1,
                "crypto/aes.encryptBlockAsm": 1,
                "crypto/aes.decryptBlockAsm": 1,
                "crypto/aes.expandKeyAsm": 1,
                "_expand_key_128": 1,
                "_expand_key_192a": 1,
                "_expand_key_192b": 1,
                "_expand_key_256a": 1,
                "_expand_key_256b": 1,
                "crypto/aes.gcmAesFinish": 1,
                "crypto/aes.gcmAesInit": 1,
                "crypto/aes.gcmAesData": 1,
                "crypto/aes.gcmAesEnc": 1,
                "crypto/aes.gcmAesDec": 1,
                "crypto/aes.(*aesCipherGCM).BlockSize": 1,
                "crypto/aes.(*aesCipherGCM).Decrypt": 1,
                "crypto/aes.(*aesCipherGCM).Encrypt": 1,
                "crypto/aes.(*KeySizeError).Error": 1,
                "encoding/base64.NewEncoding": 1,
                "encoding/base64.Encoding.WithPadding": 1,
                "encoding/base64.Encoding.Strict": 1,
                "encoding/base64.(*Encoding).Encode": 1,
                "encoding/base64.(*Encoding).EncodeToString": 1,
                "encoding/base64.(*Encoding).EncodedLen": 1,
                "encoding/base64.(*encoder).Write": 1,
                "encoding/base64.(*encoder).Close": 1,
                "encoding/base64.CorruptInputError.Error": 1,
                "encoding/base64.(*Encoding).decodeQuantum": 1,
                "encoding/base64.(*Encoding).DecodeString": 1,
                "encoding/base64.(*Encoding).DecodedLen": 1,
                "encoding/base64.(*decoder).Read": 1,
                "encoding/base64.(*Encoding).Decode": 1,
                "encoding/binary.bigEndian.PutUint64": 1,
                "encoding/base64.(*Encoding).decode32": 1,
                "encoding/base64.(*Encoding).decode64": 1,
                "encoding/base64.(*newlineFilteringReader).Read": 1,
                "encoding/base64.init.ializers": 1,
                "encoding/base64.init": 1,
                "encoding/base64.(*CorruptInputError).Error": 1,
                "type..hash.encoding/base64.Encoding": 1,
                "type..eq.encoding/base64.Encoding": 1,
                "encoding/base64.(*Encoding).Strict": 1,
                "encoding/base64.(*Encoding).WithPadding": 1,
                "type..hash.encoding/base64.encoder": 1,
                "type..eq.encoding/base64.encoder": 1,
                "strings.(*Builder).String": 1,
                "strings.(*Builder).Len": 1,
                "strings.(*Builder).Cap": 1,
                "strings.(*Builder).Reset": 1,
                "strings.(*Builder).Grow": 1,
                "strings.(*Builder).copyCheck": 1,
                "strings.(*Builder).grow": 1,
                "strings.(*Builder).Write": 1,
                "strings.(*Builder).WriteByte": 1,
                "strings.(*Builder).WriteRune": 1,
                "strings.(*Builder).WriteString": 1,
                "strings.(*Reader).Len": 1,
                "strings.(*Reader).Size": 1,
                "strings.(*Reader).Read": 1,
                "strings.(*Reader).ReadAt": 1,
                "strings.(*Reader).ReadByte": 1,
                "strings.(*Reader).UnreadByte": 1,
                "strings.(*Reader).ReadRune": 1,
                "strings.(*Reader).UnreadRune": 1,
                "strings.(*Reader).Seek": 1,
                "strings.(*Reader).WriteTo": 1,
                "strings.(*Reader).Reset": 1,
                "strings.explode": 1,
                "strings.hashStr": 1,
                "strings.hashStrRev": 1,
                "strings.Count": 1,
                "strings.LastIndex": 1,
                "strings.IndexRune": 1,
                "strings.IndexByte": 1,
                "strings.IndexAny": 1,
                "strings.(*asciiSet).contains": 1,
                "strings.LastIndexByte": 1,
                "strings.genSplit": 1,
                "strings.Join": 1,
                "strings.Map": 1,
                "strings.Repeat": 1,
                "strings.ToUpper": 1,
                "strings.ToLower": 1,
                "strings.TrimRightFunc": 1,
                "strings.TrimFunc": 1,
                "strings.TrimLeftFunc": 1,
                "strings.indexFunc": 1,
                "strings.lastIndexFunc": 1,
                "strings.makeASCIISet": 1,
                "strings.makeCutsetFunc": 1,
                "strings.Trim": 1,
                "strings.TrimLeft": 1,
                "strings.TrimRight": 1,
                "strings.Replace": 1,
                "strings.EqualFold": 1,
                "strings.Index": 1,
                "strings.indexRabinKarp": 1,
                "strings.makeCutsetFunc.func1": 1,
                "strings.makeCutsetFunc.func2": 1,
                "strings.makeCutsetFunc.func3": 1,
                "strings.init": 1,
                "type..hash.strings.Reader": 1,
                "type..eq.strings.Reader": 1,
                "encoding/hex.InvalidByteError.Error": 1,
                "encoding/hex.Decode": 1,
                "encoding/hex.fromHexChar": 1,
                "encoding/hex.init.ializers": 1,
                "encoding/hex.init": 1,
                "encoding/hex.(*InvalidByteError).Error": 1,
                "net/url.(*Error).Error": 1,
                "net/url.(*Error).Timeout": 1,
                "net/url.(*Error).Temporary": 1,
                "net/url.EscapeError.Error": 1,
                "net/url.InvalidHostError.Error": 1,
                "net/url.shouldEscape": 1,
                "net/url.unescape": 1,
                "net/url.ishex": 1,
                "net/url.unhex": 1,
                "net/url.escape": 1,
                "net/url.(*Userinfo).Username": 1,
                "net/url.(*Userinfo).Password": 1,
                "net/url.(*Userinfo).String": 1,
                "net/url.getscheme": 1,
                "net/url.split": 1,
                "net/url.Parse": 1,
                "net/url.parse": 1,
                "strings.HasSuffix": 1,
                "strings.HasPrefix": 1,
                "net/url.parseAuthority": 1,
                "strings.Contains": 1,
                "net/url.UserPassword": 1,
                "net/url.User": 1,
                "net/url.parseHost": 1,
                "fmt.Errorf": 1,
                "net/url.(*URL).setPath": 1,
                "net/url.(*URL).EscapedPath": 1,
                "net/url.validEncodedPath": 1,
                "net/url.validOptionalPort": 1,
                "net/url.(*URL).String": 1,
                "net/url.Values.Get": 1,
                "net/url.Values.Set": 1,
                "net/url.Values.Add": 1,
                "net/url.Values.Del": 1,
                "net/url.parseQuery": 1,
                "net/url.QueryUnescape": 1,
                "net/url.Values.Encode": 1,
                "sort.Strings": 1,
                "net/url.QueryEscape": 1,
                "net/url.resolvePath": 1,
                "strings.Split": 1,
                "strings.TrimPrefix": 1,
                "net/url.(*URL).IsAbs": 1,
                "net/url.(*URL).Parse": 1,
                "net/url.(*URL).ResolveReference": 1,
                "net/url.(*URL).Query": 1,
                "net/url.ParseQuery": 1,
                "net/url.(*URL).RequestURI": 1,
                "net/url.(*URL).Hostname": 1,
                "net/url.(*URL).Port": 1,
                "net/url.stripPort": 1,
                "net/url.portOnly": 1,
                "net/url.(*URL).MarshalBinary": 1,
                "net/url.(*URL).UnmarshalBinary": 1,
                "net/url.validUserinfo": 1,
                "net/url.stringContainsCTLByte": 1,
                "net/url.init": 1,
                "type..hash.net/url.Error": 1,
                "type..eq.net/url.Error": 1,
                "net/url.(*EscapeError).Error": 1,
                "net/url.(*InvalidHostError).Error": 1,
                "type..hash.net/url.Userinfo": 1,
                "type..eq.net/url.Userinfo": 1,
                "type..hash.net/url.URL": 1,
                "type..eq.net/url.URL": 1,
                "net/url.(*Values).Add": 1,
                "net/url.(*Values).Del": 1,
                "net/url.(*Values).Encode": 1,
                "net/url.(*Values).Get": 1,
                "net/url.(*Values).Set": 1,
                "regexp/syntax.patchList.patch": 1,
                "regexp/syntax.patchList.append": 1,
                "regexp/syntax.patchList.next": 1,
                "regexp/syntax.Compile": 1,
                "regexp/syntax.(*compiler).init": 1,
                "regexp/syntax.(*compiler).inst": 1,
                "regexp/syntax.(*compiler).compile": 1,
                "regexp/syntax.(*compiler).nop": 1,
                "regexp/syntax.(*compiler).empty": 1,
                "regexp/syntax.(*compiler).plus": 1,
                "regexp/syntax.(*compiler).cap": 1,
                "regexp/syntax.(*compiler).cat": 1,
                "regexp/syntax.(*compiler).alt": 1,
                "regexp/syntax.(*compiler).quest": 1,
                "regexp/syntax.(*compiler).star": 1,
                "regexp/syntax.(*compiler).rune": 1,
                "regexp/syntax.Op.String": 1,
                "regexp/syntax.(*Error).Error": 1,
                "regexp/syntax.ErrorCode.String": 1,
                "regexp/syntax.(*parser).push": 1,
                "regexp/syntax.(*parser).maybeConcat": 1,
                "regexp/syntax.(*parser).reuse": 1,
                "regexp/syntax.(*parser).newLiteral": 1,
                "regexp/syntax.(*parser).newRegexp": 1,
                "regexp/syntax.minFoldRune": 1,
                "regexp/syntax.(*parser).literal": 1,
                "regexp/syntax.(*parser).op": 1,
                "regexp/syntax.(*parser).repeat": 1,
                "regexp/syntax.repeatIsValid": 1,
                "regexp/syntax.(*parser).concat": 1,
                "regexp/syntax.(*parser).alternate": 1,
                "regexp/syntax.cleanAlt": 1,
                "regexp/syntax.(*parser).collapse": 1,
                "regexp/syntax.(*parser).factor": 1,
                "regexp/syntax.(*parser).leadingString": 1,
                "regexp/syntax.(*parser).leadingRegexp": 1,
                "regexp/syntax.isCharClass": 1,
                "C'*/ MI": 1,
                "regexp/syntax.(*parser).removeLeadingString": 1,
                "regexp/syntax.(*parser).removeLeadingRegexp": 1,
                "regexp/syntax.literalRegexp": 1,
                "regexp/syntax.Parse": 1,
                "regexp/syntax.(*parser).parseRepeat": 1,
                "regexp/syntax.(*parser).parsePerlFlags": 1,
                "regexp/syntax.isValidCaptureName": 1,
                "regexp/syntax.isalnum": 1,
                "regexp/syntax.(*parser).parseInt": 1,
                "regexp/syntax.matchRune": 1,
                "regexp/syntax.(*parser).parseVerticalBar": 1,
                "regexp/syntax.mergeCharClass": 1,
                "regexp/syntax.(*parser).swapVerticalBar": 1,
                "regexp/syntax.(*parser).parseRightParen": 1,
                "regexp/syntax.(*parser).parseEscape": 1,
                "regexp/syntax.unhex": 1,
                "regexp/syntax.(*parser).parseClassChar": 1,
                "regexp/syntax.(*parser).parsePerlClassEscape": 1,
                "regexp/syntax.(*parser).parseNamedClass": 1,
                "regexp/syntax.(*parser).appendGroup": 1,
                "regexp/syntax.(*parser).parseUnicodeClass": 1,
                "regexp/syntax.unicodeTable": 1,
                "regexp/syntax.(*parser).parseClass": 1,
                "regexp/syntax.cleanClass": 1,
                "regexp/syntax.appendLiteral": 1,
                "regexp/syntax.appendRange": 1,
                "regexp/syntax.appendFoldedRange": 1,
                "regexp/syntax.appendClass": 1,
                "regexp/syntax.appendFoldedClass": 1,
                "regexp/syntax.appendNegatedClass": 1,
                "regexp/syntax.appendTable": 1,
                "regexp/syntax.appendNegatedTable": 1,
                "regexp/syntax.negateClass": 1,
                "regexp/syntax.ranges.Less": 1,
                "regexp/syntax.ranges.Len": 1,
                "regexp/syntax.ranges.Swap": 1,
                "regexp/syntax.checkUTF8": 1,
                "regexp/syntax.nextRune": 1,
                "regexp/syntax.InstOp.String": 1,
                "regexp/syntax.(*Prog).String": 1,
                "regexp/syntax.(*Prog).skipNop": 1,
                "regexp/syntax.(*Prog).Prefix": 1,
                "regexp/syntax.(*Inst).op": 1,
                "regexp/syntax.(*Prog).StartCond": 1,
                "regexp/syntax.(*Inst).MatchRune": 1,
                "regexp/syntax.(*Inst).MatchRunePos": 1,
                "regexp/syntax.(*Inst).MatchEmptyWidth": 1,
                "regexp/syntax.IsWordChar": 1,
                "regexp/syntax.(*Inst).String": 1,
                "regexp/syntax.bw": 1,
                "regexp/syntax.dumpProg": 1,
                "regexp/syntax.dumpInst": 1,
                "regexp/syntax.u32": 1,
                "strconv.QuoteToASCII": 1,
                "regexp/syntax.(*Regexp).Equal": 1,
                "regexp/syntax.writeRegexp": 1,
                "regexp/syntax.(*Regexp).String": 1,
                "regexp/syntax.escape": 1,
                "unicode.IsPrint": 1,
                "strings.ContainsRune": 1,
                "regexp/syntax.(*Regexp).MaxCap": 1,
                "regexp/syntax.(*Regexp).CapNames": 1,
                "regexp/syntax.(*Regexp).capNames": 1,
                "regexp/syntax.(*Regexp).Simplify": 1,
                "regexp/syntax.simplify1": 1,
                "P'((D'": 1,
                "J?(@D?": 1,
                "regexp/syntax.init.ializers": 1,
                "regexp/syntax.init": 1,
                "regexp/syntax.(*InstOp).String": 1,
                "regexp/syntax.(*Op).String": 1,
                "regexp/syntax.(*ErrorCode).String": 1,
                "type..hash.regexp/syntax.Error": 1,
                "type..eq.regexp/syntax.Error": 1,
                "regexp/syntax.(*ranges).Len": 1,
                "regexp/syntax.(*ranges).Less": 1,
                "regexp/syntax.(*ranges).Swap": 1,
                "type..hash.[11]string": 1,
                "type..eq.[11]string": 1,
                "regexp.freeBitState": 1,
                "regexp.(*inputs).clear": 1,
                "regexp.(*bitState).reset": 1,
                "regexp.(*Regexp).tryBacktrack": 1,
                "regexp.(*bitState).push": 1,
                "regexp.(*bitState).shouldVisit": 1,
                "regexp.(*Regexp).backtrack": 1,
                "regexp.newBitState": 1,
                "regexp.(*inputs).init": 1,
                "regexp.(*inputs).newBytes": 1,
                "regexp.(*inputs).newString": 1,
                "regexp.(*machine).init": 1,
                "regexp.lazyFlag.match": 1,
                "regexp.(*machine).match": 1,
                "regexp.newLazyFlag": 1,
                "regexp.(*machine).clear": 1,
                "regexp.(*machine).step": 1,
                "regexp.(*machine).add": 1,
                "regexp.(*machine).alloc": 1,
                "regexp.freeOnePassMachine": 1,
                "regexp.(*Regexp).doOnePass": 1,
                "regexp.newOnePassMachine": 1,
                "regexp.(*inputs).newReader": 1,
                "regexp.(*Regexp).doExecute": 1,
                "regexp.onePassPrefix": 1,
                "regexp.iop": 1,
                "regexp.onePassNext": 1,
                "regexp.mergeRuneSets": 1,
                "regexp.mergeRuneSets.func2": 1,
                "regexp.cleanupOnePass": 1,
                "regexp.onePassCopy": 1,
                "regexp.runeSlice.Len": 1,
                "regexp.runeSlice.Less": 1,
                "regexp.runeSlice.Swap": 1,
                "regexp.makeOnePass": 1,
                "regexp.newQueue": 1,
                "regexp.(*queueOnePass).clear": 1,
                "regexp.(*queueOnePass).insert": 1,
                "regexp.(*queueOnePass).contains": 1,
                "regexp.(*queueOnePass).insertNew": 1,
                "regexp.(*queueOnePass).empty": 1,
                "regexp.(*queueOnePass).next": 1,
                "regexp.compileOnePass": 1,
                "regexp.(*Regexp).String": 1,
                "regexp.(*Regexp).Copy": 1,
                "regexp.(*Regexp).Longest": 1,
                "regexp.compile": 1,
                "regexp.maxBitStateLen": 1,
                "regexp.shouldBacktrack": 1,
                "regexp.(*Regexp).get": 1,
                "regexp.(*Regexp).put": 1,
                "regexp.MustCompile": 1,
                "regexp.Compile": 1,
                "regexp.quote": 1,
                "regexp.(*Regexp).NumSubexp": 1,
                "regexp.(*Regexp).SubexpNames": 1,
                "regexp.(*inputString).step": 1,
                "regexp.(*inputString).canCheckPrefix": 1,
                "regexp.(*inputString).hasPrefix": 1,
                "regexp.(*inputString).index": 1,
                "regexp.(*inputString).context": 1,
                "regexp.(*inputBytes).step": 1,
                "regexp.(*inputBytes).canCheckPrefix": 1,
                "regexp.(*inputBytes).hasPrefix": 1,
                "bytes.HasPrefix": 1,
                "regexp.(*inputBytes).index": 1,
                "regexp.(*inputBytes).context": 1,
                "regexp.(*inputReader).step": 1,
                "regexp.(*inputReader).canCheckPrefix": 1,
                "regexp.(*inputReader).hasPrefix": 1,
                "regexp.(*inputReader).index": 1,
                "regexp.(*inputReader).context": 1,
                "regexp.(*Regexp).LiteralPrefix": 1,
                "regexp.(*Regexp).MatchReader": 1,
                "regexp.(*Regexp).doMatch": 1,
                "regexp.(*Regexp).MatchString": 1,
                "regexp.(*Regexp).Match": 1,
                "regexp.(*Regexp).ReplaceAllString": 1,
                "regexp.(*Regexp).ReplaceAllLiteralString": 1,
                "regexp.(*Regexp).ReplaceAllStringFunc": 1,
                "regexp.(*Regexp).replaceAll": 1,
                "regexp.(*Regexp).ReplaceAll": 1,
                "regexp.(*Regexp).ReplaceAllLiteral": 1,
                "regexp.(*Regexp).ReplaceAllFunc": 1,
                "regexp.init.0": 1,
                "regexp.QuoteMeta": 1,
                "regexp.special": 1,
                "regexp.(*Regexp).pad": 1,
                "regexp.(*Regexp).allMatches": 1,
                "regexp.(*Regexp).Find": 1,
                "regexp.(*Regexp).FindIndex": 1,
                "regexp.(*Regexp).FindString": 1,
                "regexp.(*Regexp).FindStringIndex": 1,
                "regexp.(*Regexp).FindReaderIndex": 1,
                "regexp.(*Regexp).FindSubmatch": 1,
                "regexp.(*Regexp).Expand": 1,
                "regexp.(*Regexp).ExpandString": 1,
                "regexp.(*Regexp).expand": 1,
                "regexp.extract": 1,
                "unicode.IsLetter": 1,
                "unicode.IsDigit": 1,
                "regexp.(*Regexp).FindSubmatchIndex": 1,
                "regexp.(*Regexp).FindStringSubmatch": 1,
                "regexp.(*Regexp).FindStringSubmatchIndex": 1,
                "regexp.(*Regexp).FindReaderSubmatchIndex": 1,
                "regexp.(*Regexp).FindAll": 1,
                "regexp.(*Regexp).FindAllIndex": 1,
                "regexp.(*Regexp).FindAllString": 1,
                "regexp.(*Regexp).FindAllStringIndex": 1,
                "regexp.(*Regexp).FindAllSubmatch": 1,
                "regexp.(*Regexp).FindAllSubmatchIndex": 1,
                "regexp.(*Regexp).FindAllStringSubmatch": 1,
                "regexp.(*Regexp).FindAllStringSubmatchIndex": 1,
                "regexp.(*Regexp).Split": 1,
                "regexp.mergeRuneSets.func1": 1,
                "regexp.makeOnePass.func1": 1,
                "regexp.(*Regexp).ReplaceAllString.func1": 1,
                "regexp.(*Regexp).ReplaceAllLiteralString.func1": 1,
                "regexp.(*Regexp).ReplaceAllStringFunc.func1": 1,
                "regexp.(*Regexp).ReplaceAll.func1": 1,
                "regexp.(*Regexp).ReplaceAllLiteral.func1": 1,
                "regexp.(*Regexp).ReplaceAllFunc.func1": 1,
                "regexp.(*Regexp).FindAll.func1": 1,
                "regexp.(*Regexp).FindAllIndex.func1": 1,
                "regexp.(*Regexp).FindAllString.func1": 1,
                "regexp.(*Regexp).FindAllStringIndex.func1": 1,
                "regexp.(*Regexp).FindAllSubmatch.func1": 1,
                "regexp.(*Regexp).FindAllSubmatchIndex.func1": 1,
                "regexp.(*Regexp).FindAllStringSubmatch.func1": 1,
                "regexp.(*Regexp).FindAllStringSubmatchIndex.func1": 1,
                "regexp.init": 1,
                "regexp.(*onePassInst).MatchEmptyWidth": 1,
                "regexp.(*onePassInst).MatchRune": 1,
                "regexp.(*onePassInst).MatchRunePos": 1,
                "regexp.(*onePassInst).String": 1,
                "type..hash.regexp.entry": 1,
                "type..eq.regexp.entry": 1,
                "type..hash.regexp.inputReader": 1,
                "type..eq.regexp.inputReader": 1,
                "type..hash.regexp.job": 1,
                "type..eq.regexp.job": 1,
                "regexp.(*runeSlice).Len": 1,
                "regexp.(*runeSlice).Less": 1,
                "regexp.(*runeSlice).Swap": 1,
                "log.New": 1,
                "log.(*Logger).SetOutput": 1,
                "log.itoa": 1,
                "log.(*Logger).formatHeader": 1,
                "log.(*Logger).Output": 1,
                "log.(*Logger).Printf": 1,
                "log.(*Logger).Print": 1,
                "log.(*Logger).Println": 1,
                "log.(*Logger).Fatal": 1,
                "log.(*Logger).Fatalf": 1,
                "log.(*Logger).Fatalln": 1,
                "log.(*Logger).Panic": 1,
                "log.(*Logger).Panicf": 1,
                "log.(*Logger).Panicln": 1,
                "log.(*Logger).Flags": 1,
                "log.(*Logger).SetFlags": 1,
                "log.(*Logger).Prefix": 1,
                "log.(*Logger).SetPrefix": 1,
                "log.(*Logger).Writer": 1,
                "log.Printf": 1,
                "log.Println": 1,
                "log.Fatalf": 1,
                "log.Panicf": 1,
                "log.init.ializers": 1,
                "log.init": 1,
                "github.com/robertkrimen/otto/dbg.operandCount": 1,
                "github.com/robertkrimen/otto/dbg.parseFormat": 1,
                "github.com/robertkrimen/otto/dbg.New": 1,
                "github.com/robertkrimen/otto/dbg.NewDbgr": 1,
                "github.com/robertkrimen/otto/dbg.Dbgr.Dbg": 1,
                "github.com/robertkrimen/otto/dbg.(*Dbgr).getEmit": 1,
                "github.com/robertkrimen/otto/dbg.standardEmit": 1,
                "github.com/robertkrimen/otto/dbg.Dbgr.Dbgf": 1,
                "github.com/robertkrimen/otto/dbg.Dbgr.DbgDbgf": 1,
                "github.com/robertkrimen/otto/dbg.Dbgr.dbgf": 1,
                "github.com/robertkrimen/otto/dbg.(*Dbgr).SetOutput": 1,
                "github.com/robertkrimen/otto/dbg._emitWriter.emit": 1,
                "github.com/robertkrimen/otto/dbg.ln": 1,
                "github.com/robertkrimen/otto/dbg._emitLogger.emit": 1,
                "github.com/robertkrimen/otto/dbg._emitLog.emit": 1,
                "github.com/robertkrimen/otto/dbg.Dbgr.DbgDbgf.func1": 1,
                "github.com/robertkrimen/otto/dbg.Dbgr.DbgDbgf.func2": 1,
                "github.com/robertkrimen/otto/dbg.init.ializers": 1,
                "github.com/robertkrimen/otto/dbg.init": 1,
                "type..hash.github.com/robertkrimen/otto/dbg._frmt": 1,
                "type..eq.github.com/robertkrimen/otto/dbg._frmt": 1,
                "github.com/robertkrimen/otto/dbg.(*Dbgr).Dbg": 1,
                "github.com/robertkrimen/otto/dbg.(*Dbgr).DbgDbgf": 1,
                "github.com/robertkrimen/otto/dbg.(*Dbgr).Dbgf": 1,
                "github.com/robertkrimen/otto/dbg.(*_emitWriter).emit": 1,
                "github.com/robertkrimen/otto/dbg.(*_emitLog).emit": 1,
                "github.com/robertkrimen/otto/dbg.(*_emitLogger).emit": 1,
                "encoding/json.Unmarshal": 1,
                "encoding/json.(*decodeState).init": 1,
                "encoding/json.(*UnmarshalTypeError).Error": 1,
                "encoding/json.(*InvalidUnmarshalError).Error": 1,
                "encoding/json.(*decodeState).unmarshal": 1,
                "encoding/json.(*scanner).reset": 1,
                "encoding/json.Number.String": 1,
                "encoding/json.Number.Float64": 1,
                "encoding/json.Number.Int64": 1,
                "encoding/json.isValidNumber": 1,
                "encoding/json.(*decodeState).addErrorContext": 1,
                "encoding/json.(*decodeState).skip": 1,
                "encoding/json.(*decodeState).scanNext": 1,
                "encoding/json.(*decodeState).scanWhile": 1,
                "encoding/json.(*decodeState).value": 1,
                "encoding/json.(*decodeState).readIndex": 1,
                "encoding/json.(*decodeState).valueQuoted": 1,
                "encoding/json.indirect": 1,
                "encoding/json.(*decodeState).array": 1,
                "encoding/json.(*decodeState).saveError": 1,
                "encoding/json.(*decodeState).object": 1,
                "reflect.PtrTo": 1,
                "reflect.MakeMap": 1,
                "/ 0`/ 0d": 1,
                "aT7S6V*s": 1,
                "b'aH`L_2d": 1,
                "#A#P#_<4#3ad#c": 1,
                "encoding/json.(*decodeState).convertNumber": 1,
                "encoding/json.(*decodeState).literalStore": 1,
                "%!6$*9": 1,
                "%7):7I": 1,
                "%K)N7]": 1,
                "%O6R*g": 1,
                "%]6`*u": 1,
                "f7e6h*}": 1,
                "VoU/X W": 1,
                "encoding/json.(*decodeState).valueInterface": 1,
                "encoding/json.(*decodeState).arrayInterface": 1,
                "encoding/json.(*decodeState).objectInterface": 1,
                "encoding/json.unquote": 1,
                "encoding/json.(*decodeState).literalInterface": 1,
                "encoding/json.getu4": 1,
                "encoding/json.unquoteBytes": 1,
                "encoding/json.Marshal": 1,
                "encoding/json.HTMLEscape": 1,
                "encoding/json.(*UnsupportedTypeError).Error": 1,
                "encoding/json.(*UnsupportedValueError).Error": 1,
                "encoding/json.(*MarshalerError).Error": 1,
                "encoding/json.newEncodeState": 1,
                "encoding/json.(*encodeState).marshal": 1,
                "encoding/json.isEmptyValue": 1,
                "encoding/json.(*encodeState).reflectValue": 1,
                "encoding/json.valueEncoder": 1,
                "encoding/json.typeEncoder": 1,
                "encoding/json.newTypeEncoder": 1,
                "encoding/json.invalidValueEncoder": 1,
                "encoding/json.marshalerEncoder": 1,
                "encoding/json.(*encodeState).error": 1,
                "encoding/json.addrMarshalerEncoder": 1,
                "encoding/json.textMarshalerEncoder": 1,
                "encoding/json.addrTextMarshalerEncoder": 1,
                "encoding/json.boolEncoder": 1,
                "encoding/json.intEncoder": 1,
                "encoding/json.uintEncoder": 1,
                "encoding/json.floatEncoder.encode": 1,
                "encoding/json.stringEncoder": 1,
                "encoding/json.interfaceEncoder": 1,
                "encoding/json.unsupportedTypeEncoder": 1,
                "encoding/json.structEncoder.encode": 1,
                "encoding/json.newStructEncoder": 1,
                "encoding/json.mapEncoder.encode": 1,
                "encoding/json.newMapEncoder": 1,
                "encoding/json.encodeByteSlice": 1,
                "encoding/base64.NewEncoder": 1,
                "encoding/json.sliceEncoder.encode": 1,
                "encoding/json.newSliceEncoder": 1,
                "encoding/json.arrayEncoder.encode": 1,
                "encoding/json.newArrayEncoder": 1,
                "encoding/json.ptrEncoder.encode": 1,
                "encoding/json.newPtrEncoder": 1,
                "encoding/json.condAddrEncoder.encode": 1,
                "encoding/json.newCondAddrEncoder": 1,
                "encoding/json.isValidTag": 1,
                "encoding/json.typeByIndex": 1,
                "encoding/json.(*reflectWithString).resolve": 1,
                "encoding/json.(*encodeState).string": 1,
                "encoding/json.(*encodeState).stringBytes": 1,
                "encoding/json.byIndex.Len": 1,
                "encoding/json.byIndex.Swap": 1,
                "encoding/json.byIndex.Less": 1,
                "encoding/json.typeFields": 1,
                "encoding/json.dominantField": 1,
                "#0 !@\"": 1,
                "I(\"V*gK$0": 1,
                "encoding/json.cachedTypeFields": 1,
                "encoding/json.foldFunc": 1,
                "encoding/json.equalFoldRight": 1,
                "encoding/json.asciiEqualFold": 1,
                "encoding/json.simpleLetterEqualFold": 1,
                "encoding/json.compact": 1,
                "encoding/json.newline": 1,
                "encoding/json.Indent": 1,
                "encoding/json.checkValid": 1,
                "encoding/json.(*SyntaxError).Error": 1,
                "encoding/json.(*scanner).eof": 1,
                "encoding/json.stateBeginValueOrEmpty": 1,
                "encoding/json.isSpace": 1,
                "encoding/json.stateBeginValue": 1,
                "encoding/json.(*scanner).error": 1,
                "encoding/json.(*scanner).pushParseState": 1,
                "encoding/json.stateBeginStringOrEmpty": 1,
                "encoding/json.stateBeginString": 1,
                "encoding/json.stateEndValue": 1,
                "encoding/json.(*scanner).popParseState": 1,
                "encoding/json.stateEndTop": 1,
                "encoding/json.stateInString": 1,
                "encoding/json.stateInStringEsc": 1,
                "encoding/json.stateInStringEscU": 1,
                "encoding/json.stateInStringEscU1": 1,
                "encoding/json.stateInStringEscU12": 1,
                "encoding/json.stateInStringEscU123": 1,
                "encoding/json.stateNeg": 1,
                "encoding/json.state1": 1,
                "encoding/json.state0": 1,
                "encoding/json.stateDot": 1,
                "encoding/json.stateDot0": 1,
                "encoding/json.stateE": 1,
                "encoding/json.stateESign": 1,
                "encoding/json.stateE0": 1,
                "encoding/json.stateT": 1,
                "encoding/json.stateTr": 1,
                "encoding/json.stateTru": 1,
                "encoding/json.stateF": 1,
                "encoding/json.stateFa": 1,
                "encoding/json.stateFal": 1,
                "encoding/json.stateFals": 1,
                "encoding/json.stateN": 1,
                "encoding/json.stateNu": 1,
                "encoding/json.stateNul": 1,
                "encoding/json.stateError": 1,
                "encoding/json.quoteChar": 1,
                "encoding/json.parseTag": 1,
                "encoding/json.tagOptions.Contains": 1,
                "encoding/json.(*encodeState).marshal.func1": 1,
                "encoding/json.typeEncoder.func1": 1,
                "encoding/json.mapEncoder.encode.func1": 1,
                "encoding/json.typeFields.func1": 1,
                "encoding/json.init.ializers": 1,
                "encoding/json.init": 1,
                "encoding/json.(*encodeState).Bytes": 1,
                "encoding/json.(*encodeState).Cap": 1,
                "encoding/json.(*encodeState).Grow": 1,
                "encoding/json.(*encodeState).Len": 1,
                "encoding/json.(*encodeState).Next": 1,
                "encoding/json.(*encodeState).Read": 1,
                "encoding/json.(*encodeState).ReadByte": 1,
                "encoding/json.(*encodeState).ReadBytes": 1,
                "encoding/json.(*encodeState).ReadFrom": 1,
                "encoding/json.(*encodeState).ReadRune": 1,
                "encoding/json.(*encodeState).ReadString": 1,
                "encoding/json.(*encodeState).Reset": 1,
                "encoding/json.(*encodeState).String": 1,
                "encoding/json.(*encodeState).Truncate": 1,
                "encoding/json.(*encodeState).UnreadByte": 1,
                "encoding/json.(*encodeState).UnreadRune": 1,
                "encoding/json.(*encodeState).Write": 1,
                "encoding/json.(*encodeState).WriteByte": 1,
                "encoding/json.(*encodeState).WriteRune": 1,
                "encoding/json.(*encodeState).WriteString": 1,
                "encoding/json.(*encodeState).WriteTo": 1,
                "type..hash.[2]interface {}": 1,
                "type..eq.[2]interface {}": 1,
                "encoding/json.(*jsonError).Error": 1,
                "encoding/json.jsonError.Error": 1,
                "type..hash.encoding/json.reflectWithString": 1,
                "type..eq.encoding/json.reflectWithString": 1,
                "encoding/json.floatEncoder.encode-fm": 1,
                "encoding/json.structEncoder.encode-fm": 1,
                "encoding/json.mapEncoder.encode-fm": 1,
                "encoding/json.sliceEncoder.encode-fm": 1,
                "encoding/json.arrayEncoder.encode-fm": 1,
                "encoding/json.ptrEncoder.encode-fm": 1,
                "encoding/json.condAddrEncoder.encode-fm": 1,
                "type..hash.struct { Struct reflect.Type": 1,
                "type..eq.struct { Struct reflect.Type": 1,
                "type..hash.encoding/json.MarshalerError": 1,
                "type..eq.encoding/json.MarshalerError": 1,
                "encoding/json.(*Number).Float64": 1,
                "encoding/json.(*Number).Int64": 1,
                "encoding/json.(*Number).String": 1,
                "type..hash.encoding/json.SyntaxError": 1,
                "type..eq.encoding/json.SyntaxError": 1,
                "type..hash.encoding/json.UnmarshalTypeError": 1,
                "type..eq.encoding/json.UnmarshalTypeError": 1,
                "type..hash.encoding/json.UnsupportedValueError": 1,
                "type..eq.encoding/json.UnsupportedValueError": 1,
                "encoding/json.(*byIndex).Len": 1,
                "encoding/json.(*byIndex).Less": 1,
                "encoding/json.(*byIndex).Swap": 1,
                "encoding/json.(*tagOptions).Contains": 1,
                "path.(*lazybuf).string": 1,
                "path.Clean": 1,
                "path.(*lazybuf).append": 1,
                "path.(*lazybuf).index": 1,
                "path.Join": 1,
                "path.Base": 1,
                "path.Dir": 1,
                "path.Split": 1,
                "path.init.ializers": 1,
                "path.init": 1,
                "gopkg.in/sourcemap.v1/base64vlq.init.0": 1,
                "gopkg.in/sourcemap.v1/base64vlq.Decoder.Decode": 1,
                "gopkg.in/sourcemap.v1/base64vlq.fromVLQSigned": 1,
                "gopkg.in/sourcemap.v1/base64vlq.init": 1,
                "gopkg.in/sourcemap.v1/base64vlq.(*Decoder).Decode": 1,
                "gopkg.in/sourcemap%2ev1.Parse": 1,
                "gopkg.in/sourcemap%2ev1.(*Consumer).File": 1,
                "gopkg.in/sourcemap%2ev1.(*Consumer).Source": 1,
                "gopkg.in/sourcemap%2ev1.(*Consumer).absSource": 1,
                "path.IsAbs": 1,
                "gopkg.in/sourcemap%2ev1.parseMappings": 1,
                "strings.NewReader": 1,
                "gopkg.in/sourcemap.v1/base64vlq.NewDecoder": 1,
                "gopkg.in/sourcemap%2ev1.(*mappings).parse": 1,
                "gopkg.in/sourcemap%2ev1.(*mappings).pushValue": 1,
                "gopkg.in/sourcemap%2ev1.parseGenCol": 1,
                "gopkg.in/sourcemap%2ev1.parseSourcesInd": 1,
                "gopkg.in/sourcemap%2ev1.parseSourceLine": 1,
                "gopkg.in/sourcemap%2ev1.parseSourceCol": 1,
                "gopkg.in/sourcemap%2ev1.parseNamesInd": 1,
                "gopkg.in/sourcemap%2ev1.(*Consumer).Source.func1": 1,
                "gopkg.in/sourcemap%2ev1.init": 1,
                "github.com/robertkrimen/otto/file.(*Position).String": 1,
                "github.com/robertkrimen/otto/file.(*Position).isValid": 1,
                "github.com/robertkrimen/otto/file.(*FileSet).AddFile": 1,
                "github.com/robertkrimen/otto/file.(*FileSet).nextBase": 1,
                "github.com/robertkrimen/otto/file.(*FileSet).File": 1,
                "github.com/robertkrimen/otto/file.(*FileSet).Position": 1,
                "github.com/robertkrimen/otto/file.(*File).WithSourceMap": 1,
                "github.com/robertkrimen/otto/file.(*File).Name": 1,
                "github.com/robertkrimen/otto/file.(*File).Source": 1,
                "github.com/robertkrimen/otto/file.(*File).Base": 1,
                "github.com/robertkrimen/otto/file.(*File).Position": 1,
                "github.com/robertkrimen/otto/file.init": 1,
                "type..hash.github.com/robertkrimen/otto/file.File": 1,
                "type..eq.github.com/robertkrimen/otto/file.File": 1,
                "type..hash.github.com/robertkrimen/otto/file.Position": 1,
                "type..eq.github.com/robertkrimen/otto/file.Position": 1,
                "github.com/robertkrimen/otto/token.Token.String": 1,
                "github.com/robertkrimen/otto/token.init.ializers": 1,
                "github.com/robertkrimen/otto/token.init": 1,
                "github.com/robertkrimen/otto/token.(*Token).String": 1,
                "type..hash.github.com/robertkrimen/otto/token._keyword": 1,
                "type..eq.github.com/robertkrimen/otto/token._keyword": 1,
                "type..hash.[41]github.com/robertkrimen/otto/token._keyword": 1,
                "type..eq.[41]github.com/robertkrimen/otto/token._keyword": 1,
                "type..hash.[41]string": 1,
                "type..eq.[41]string": 1,
                "type..hash.[87]string": 1,
                "type..eq.[87]string": 1,
                "github.com/robertkrimen/otto/ast.CommentPosition.String": 1,
                "github.com/robertkrimen/otto/ast.Comment.String": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).String": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).FetchAll": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).Fetch": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).ResetLineBreak": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).MarkPrimary": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).AfterBlock": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).AddComment": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).MarkComments": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).Unset": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).SetExpression": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).PostProcessNode": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).applyComments": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).AtLineBreak": 1,
                "github.com/robertkrimen/otto/ast.CommentMap.AddComment": 1,
                "github.com/robertkrimen/otto/ast.CommentMap.AddComments": 1,
                "github.com/robertkrimen/otto/ast.CommentMap.Size": 1,
                "github.com/robertkrimen/otto/ast.CommentMap.MoveComments": 1,
                "github.com/robertkrimen/otto/ast.(*ArrayLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*AssignExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*BadExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*BinaryExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*BooleanLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*BracketExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*CallExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*ConditionalExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*DotExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*EmptyExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*Identifier)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*NewExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*NullLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*NumberLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*ObjectLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*RegExpLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*SequenceExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*StringLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*ThisExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*UnaryExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*VariableExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto/ast.(*BadStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*BlockStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*BranchStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*CaseStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*CatchStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*DebuggerStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*DoWhileStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*EmptyStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*ExpressionStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*ForInStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*ForStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*IfStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*LabelledStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*ReturnStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*SwitchStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*ThrowStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*TryStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*VariableStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*WhileStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*WithStatement)._statementNode": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionDeclaration)._declarationNode": 1,
                "github.com/robertkrimen/otto/ast.(*VariableDeclaration)._declarationNode": 1,
                "github.com/robertkrimen/otto/ast.(*ArrayLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*AssignExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BadExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BinaryExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BooleanLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BracketExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*CallExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ConditionalExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*DotExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*EmptyExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*Identifier).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*NewExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*NullLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*NumberLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ObjectLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*RegExpLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*SequenceExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*StringLiteral).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ThisExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*UnaryExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*VariableExpression).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BadStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BlockStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*BranchStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*CaseStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*CatchStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*DebuggerStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*DoWhileStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*EmptyStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ExpressionStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ForInStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ForStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*IfStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*LabelledStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*Program).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ReturnStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*SwitchStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ThrowStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*TryStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*VariableStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*WhileStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*WithStatement).Idx0": 1,
                "github.com/robertkrimen/otto/ast.(*ArrayLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*AssignExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BadExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BinaryExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BooleanLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BracketExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*CallExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ConditionalExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*DotExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*Identifier).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*EmptyExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*NewExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*NullLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*NumberLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ObjectLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*RegExpLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*SequenceExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*StringLiteral).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ThisExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*UnaryExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*VariableExpression).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BadStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BlockStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*BranchStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*CaseStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*CatchStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*DebuggerStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*DoWhileStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*EmptyStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ExpressionStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ForInStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ForStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*FunctionStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*IfStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*LabelledStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*Program).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ReturnStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*SwitchStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*ThrowStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*TryStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*VariableStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*WhileStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*WithStatement).Idx1": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).FetchAll.func1": 1,
                "github.com/robertkrimen/otto/ast.(*Comments).Fetch.func1": 1,
                "github.com/robertkrimen/otto/ast.init": 1,
                "type..hash.[4]interface {}": 1,
                "type..eq.[4]interface {}": 1,
                "github.com/robertkrimen/otto/ast.(*CommentPosition).String": 1,
                "type..hash.github.com/robertkrimen/otto/ast.Comment": 1,
                "type..eq.github.com/robertkrimen/otto/ast.Comment": 1,
                "github.com/robertkrimen/otto/ast.(*Comment).String": 1,
                "type..hash.github.com/robertkrimen/otto/ast.AssignExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.AssignExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.BinaryExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.BinaryExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.BooleanLiteral": 1,
                "type..eq.github.com/robertkrimen/otto/ast.BooleanLiteral": 1,
                "type..hash.github.com/robertkrimen/otto/ast.BracketExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.BracketExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.Identifier": 1,
                "type..eq.github.com/robertkrimen/otto/ast.Identifier": 1,
                "type..hash.github.com/robertkrimen/otto/ast.CatchStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.CatchStatement": 1,
                "github.com/robertkrimen/otto/ast.(*CommentMap).AddComment": 1,
                "github.com/robertkrimen/otto/ast.(*CommentMap).AddComments": 1,
                "github.com/robertkrimen/otto/ast.(*CommentMap).MoveComments": 1,
                "github.com/robertkrimen/otto/ast.(*CommentMap).Size": 1,
                "type..hash.github.com/robertkrimen/otto/ast.ConditionalExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.ConditionalExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.DoWhileStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.DoWhileStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.DotExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.DotExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.ForInStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.ForInStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.ForStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.ForStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.IfStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.IfStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.LabelledStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.LabelledStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.NullLiteral": 1,
                "type..eq.github.com/robertkrimen/otto/ast.NullLiteral": 1,
                "type..hash.github.com/robertkrimen/otto/ast.NumberLiteral": 1,
                "type..eq.github.com/robertkrimen/otto/ast.NumberLiteral": 1,
                "type..hash.github.com/robertkrimen/otto/ast.Property": 1,
                "type..eq.github.com/robertkrimen/otto/ast.Property": 1,
                "type..hash.github.com/robertkrimen/otto/ast.RegExpLiteral": 1,
                "type..eq.github.com/robertkrimen/otto/ast.RegExpLiteral": 1,
                "type..hash.github.com/robertkrimen/otto/ast.ReturnStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.ReturnStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.StringLiteral": 1,
                "type..eq.github.com/robertkrimen/otto/ast.StringLiteral": 1,
                "type..hash.github.com/robertkrimen/otto/ast.ThrowStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.ThrowStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.TryStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.TryStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.UnaryExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.UnaryExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.VariableExpression": 1,
                "type..eq.github.com/robertkrimen/otto/ast.VariableExpression": 1,
                "type..hash.github.com/robertkrimen/otto/ast.WhileStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.WhileStatement": 1,
                "type..hash.github.com/robertkrimen/otto/ast.WithStatement": 1,
                "type..eq.github.com/robertkrimen/otto/ast.WithStatement": 1,
                "path/filepath.init.ializers": 1,
                "path/filepath.init": 1,
                "type..hash.[22]string": 1,
                "type..eq.[22]string": 1,
                "io/ioutil.readAll": 1,
                "io/ioutil.ReadFile": 1,
                "os.Open": 1,
                "io/ioutil.readAll.func1": 1,
                "io/ioutil.init": 1,
                "github.com/robertkrimen/otto/parser.Error.Error": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).error": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).idxOf": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Add": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).errorUnexpected": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).errorUnexpectedToken": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Reset": 1,
                "github.com/robertkrimen/otto/parser.ErrorList.Len": 1,
                "github.com/robertkrimen/otto/parser.ErrorList.Swap": 1,
                "github.com/robertkrimen/otto/parser.ErrorList.Less": 1,
                "github.com/robertkrimen/otto/parser.ErrorList.Sort": 1,
                "github.com/robertkrimen/otto/parser.ErrorList.Error": 1,
                "github.com/robertkrimen/otto/parser.ErrorList.Err": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseIdentifier": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).next": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parsePrimaryExpression": 1,
                "github.com/robertkrimen/otto/token.IsKeyword": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseRegExpLiteral": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseVariableDeclaration": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseVariableDeclarationList": 1,
                "github.com/robertkrimen/otto/parser.(*_scope).declare": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseObjectPropertyKey": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseObjectProperty": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseObjectLiteral": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseArrayLiteral": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseArgumentList": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseCallExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseDotMember": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBracketMember": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseNewExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseLeftHandSideExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseLeftHandSideExpressionAllowCall": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parsePostfixExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseUnaryExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseMultiplicativeExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseAdditiveExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseShiftExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseRelationalExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseEqualityExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBitwiseAndExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBitwiseExclusiveOrExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBitwiseOrExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseLogicalAndExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseLogicalOrExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseConditionlExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseAssignmentExpression": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseExpression": 1,
                "github.com/robertkrimen/otto/parser.isIdentifierStart": 1,
                "github.com/robertkrimen/otto/parser.isIdentifierPart": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scanIdentifier": 1,
                "github.com/robertkrimen/otto/parser.hex2decimal": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scan": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).switch2": 1,
                "github.com/robertkrimen/otto/parser.digitValue": 1,
                "github.com/robertkrimen/otto/ast.NewComment": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).switch3": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).switch4": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).switch6": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).read": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).read": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).readSingleLineComment": 1,
                "github.com/robertkrimen/otto/parser.isLineTerminator": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).readMultiLineComment": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).skipSingleLineComment": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).skipMultiLineComment": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).skipWhiteSpace": 1,
                "github.com/robertkrimen/otto/parser.(*_parser)._peek": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scanMantissa": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scanEscape": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scanString": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scanNewline": 1,
                "github.com/robertkrimen/otto/parser.parseNumberLiteral": 1,
                "github.com/robertkrimen/otto/parser.parseStringLiteral": 1,
                "bytes.NewBuffer": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).scanNumericLiteral": 1,
                "github.com/robertkrimen/otto/parser.isDigit": 1,
                "github.com/robertkrimen/otto/parser.isDecimalDigit": 1,
                "github.com/robertkrimen/otto/parser.ReadSource": 1,
                "io.Copy": 1,
                "github.com/robertkrimen/otto/parser.ReadSourceMap": 1,
                "github.com/robertkrimen/otto/parser.ParseFileWithSourceMap": 1,
                "github.com/robertkrimen/otto/parser._newParser": 1,
                "github.com/robertkrimen/otto/file.NewFile": 1,
                "github.com/robertkrimen/otto/ast.NewComments": 1,
                "bytes.Split": 1,
                "bytes.SplitN": 1,
                "github.com/robertkrimen/otto/parser.ParseFunction": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).Scan": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parse": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).optionalSemicolon": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).expect": 1,
                "github.com/robertkrimen/otto/parser.lineCount": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).position": 1,
                "github.com/robertkrimen/otto/parser.TransformRegExp": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).scan": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).scanGroup": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).scanBracket": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).scanEscape": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).pass": 1,
                "github.com/robertkrimen/otto/parser.(*_RegExp_parser).error": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).closeScope": 1,
                "github.com/robertkrimen/otto/parser.(*_scope).hasLabel": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBlockStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseStatementList": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseEmptyStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseTryStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseFunctionParameterList": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseFunctionStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseFunction": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).slice": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseFunctionBlock": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).openScope": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseDebuggerStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).semicolon": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseReturnStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseThrowStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseSwitchStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseWithStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseCaseStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseIterationStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseForIn": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseFor": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseForOrForInStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseVariableStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseDoWhileStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseWhileStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseIfStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseSourceElements": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseSourceElement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseProgram": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBreakStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseContinueStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).nextStatement": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseLeftHandSideExpressionAllowCall.func1": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseRelationalExpression.func1": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseFunctionBlock.func1": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseSwitchStatement.func1": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseIterationStatement.func1": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseDoWhileStatement.func1": 1,
                "github.com/robertkrimen/otto/parser.init.ializers": 1,
                "github.com/robertkrimen/otto/parser.init": 1,
                "github.com/robertkrimen/otto/parser.(*Error).Error": 1,
                "type..hash.[3]interface {}": 1,
                "type..eq.[3]interface {}": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseUnaryExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseMultiplicativeExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseAdditiveExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseShiftExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseRelationalExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseEqualityExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBitwiseAndExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBitwiseExclusiveOrExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseBitwiseOrExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseLogicalAndExpression-fm": 1,
                "github.com/robertkrimen/otto/parser.(*_parser).parseAssignmentExpression-fm": 1,
                "type..hash.github.com/robertkrimen/otto/parser.Error": 1,
                "type..eq.github.com/robertkrimen/otto/parser.Error": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Err": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Error": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Len": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Less": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Sort": 1,
                "github.com/robertkrimen/otto/parser.(*ErrorList).Swap": 1,
                "math/rand.(*Rand).ExpFloat64": 1,
                "math/rand.(*Rand).Float64": 1,
                "math/rand.(*Rand).Int63": 1,
                "math/rand.(*Rand).Uint32": 1,
                "math/rand.(*Rand).NormFloat64": 1,
                "math/rand.absInt32": 1,
                "math/rand.NewSource": 1,
                "math/rand.New": 1,
                "math/rand.(*Rand).Seed": 1,
                "math/rand.(*Rand).Uint64": 1,
                "math/rand.(*Rand).Int31": 1,
                "math/rand.(*Rand).Int": 1,
                "math/rand.(*Rand).Int63n": 1,
                "math/rand.(*Rand).Int31n": 1,
                "math/rand.(*Rand).int31n": 1,
                "math/rand.(*Rand).Intn": 1,
                "math/rand.(*Rand).Float32": 1,
                "math/rand.(*Rand).Perm": 1,
                "math/rand.(*Rand).Shuffle": 1,
                "math/rand.(*Rand).Read": 1,
                "math/rand.read": 1,
                "math/rand.Float64": 1,
                "math/rand.(*lockedSource).Int63": 1,
                "math/rand.(*lockedSource).Uint64": 1,
                "math/rand.(*lockedSource).Seed": 1,
                "math/rand.(*lockedSource).seedPos": 1,
                "math/rand.(*lockedSource).read": 1,
                "math/rand.(*rngSource).Seed": 1,
                "math/rand.seedrand": 1,
                "math/rand.(*rngSource).Int63": 1,
                "math/rand.(*rngSource).Uint64": 1,
                "math/rand.init.ializers": 1,
                "math/rand.init": 1,
                "type..hash.math/rand.Rand": 1,
                "type..eq.math/rand.Rand": 1,
                "math/rand.(*Rand).Int63-fm": 1,
                "math/rand.Source64.Int63-fm": 1,
                "type..hash.math/rand.lockedSource": 1,
                "type..eq.math/rand.lockedSource": 1,
                "type..hash.[128]float32": 1,
                "type..eq.[128]float32": 1,
                "type..hash.[256]float32": 1,
                "type..eq.[256]float32": 1,
                "github.com/robertkrimen/otto/registry.(*Entry).Enable": 1,
                "github.com/robertkrimen/otto/registry.(*Entry).Disable": 1,
                "github.com/robertkrimen/otto/registry.Entry.Source": 1,
                "github.com/robertkrimen/otto/registry.Apply": 1,
                "github.com/robertkrimen/otto/registry.init.ializers": 1,
                "github.com/robertkrimen/otto/registry.init": 1,
                "github.com/robertkrimen/otto/registry.(*Entry).Source": 1,
                "encoding/gob.decBoolArray": 1,
                "encoding/gob.decBoolSlice": 1,
                "encoding/gob.(*decBuffer).Len": 1,
                "encoding/gob.decComplex64Array": 1,
                "encoding/gob.decComplex64Slice": 1,
                "encoding/gob.float32FromBits": 1,
                "encoding/gob.float64FromBits": 1,
                "encoding/gob.error_": 1,
                "encoding/gob.decComplex128Array": 1,
                "encoding/gob.decComplex128Slice": 1,
                "encoding/gob.decFloat32Array": 1,
                "encoding/gob.decFloat32Slice": 1,
                "encoding/gob.decFloat64Array": 1,
                "encoding/gob.decFloat64Slice": 1,
                "encoding/gob.decIntArray": 1,
                "encoding/gob.decIntSlice": 1,
                "encoding/gob.decInt16Array": 1,
                "encoding/gob.decInt16Slice": 1,
                "encoding/gob.decInt32Array": 1,
                "encoding/gob.decInt32Slice": 1,
                "encoding/gob.decInt64Array": 1,
                "encoding/gob.decInt64Slice": 1,
                "encoding/gob.decInt8Array": 1,
                "encoding/gob.decInt8Slice": 1,
                "encoding/gob.decStringArray": 1,
                "encoding/gob.decStringSlice": 1,
                "encoding/gob.(*decBuffer).Drop": 1,
                "encoding/gob.(*decBuffer).Bytes": 1,
                "encoding/gob.decUintArray": 1,
                "encoding/gob.decUintSlice": 1,
                "encoding/gob.decUint16Array": 1,
                "encoding/gob.decUint16Slice": 1,
                "encoding/gob.decUint32Array": 1,
                "encoding/gob.decUint32Slice": 1,
                "encoding/gob.decUint64Array": 1,
                "encoding/gob.decUint64Slice": 1,
                "encoding/gob.decUintptrArray": 1,
                "encoding/gob.decUintptrSlice": 1,
                "encoding/gob.(*decBuffer).Read": 1,
                "encoding/gob.(*decBuffer).Size": 1,
                "encoding/gob.(*decBuffer).Reset": 1,
                "encoding/gob.(*decBuffer).ReadByte": 1,
                "encoding/gob.(*Decoder).freeDecoderState": 1,
                "encoding/gob.decodeUintReader": 1,
                "encoding/gob.(*decoderState).decodeUint": 1,
                "encoding/gob.(*decoderState).decodeInt": 1,
                "encoding/gob.(*decoderState).getLength": 1,
                "encoding/gob.ignoreUint": 1,
                "encoding/gob.ignoreTwoUints": 1,
                "encoding/gob.decAlloc": 1,
                "encoding/gob.decBool": 1,
                "encoding/gob.decInt8": 1,
                "encoding/gob.decUint8": 1,
                "encoding/gob.decInt16": 1,
                "encoding/gob.decUint16": 1,
                "encoding/gob.decInt32": 1,
                "encoding/gob.decUint32": 1,
                "encoding/gob.decInt64": 1,
                "encoding/gob.decUint64": 1,
                "encoding/gob.decFloat32": 1,
                "encoding/gob.decFloat64": 1,
                "encoding/gob.decComplex64": 1,
                "encoding/gob.decComplex128": 1,
                "encoding/gob.decUint8Slice": 1,
                "encoding/gob.decString": 1,
                "encoding/gob.ignoreUint8Array": 1,
                "encoding/gob.(*Decoder).decodeSingle": 1,
                "encoding/gob.(*Decoder).newDecoderState": 1,
                "encoding/gob.(*Decoder).decodeStruct": 1,
                "encoding/gob.(*Decoder).ignoreStruct": 1,
                "encoding/gob.(*Decoder).ignoreSingle": 1,
                "encoding/gob.(*Decoder).decodeArrayHelper": 1,
                "encoding/gob.(*Decoder).decodeArray": 1,
                "encoding/gob.decodeIntoValue": 1,
                "encoding/gob.(*Decoder).decodeMap": 1,
                "encoding/gob.(*Decoder).ignoreArrayHelper": 1,
                "encoding/gob.(*Decoder).ignoreArray": 1,
                "encoding/gob.(*Decoder).ignoreMap": 1,
                "encoding/gob.(*Decoder).decodeSlice": 1,
                "encoding/gob.(*Decoder).ignoreSlice": 1,
                "encoding/gob.(*Decoder).decodeInterface": 1,
                ",6+D,6+.": 1,
                "encoding/gob.(*Decoder).ignoreInterface": 1,
                "encoding/gob.(*Decoder).decodeGobDecoder": 1,
                "encoding/gob.(*Decoder).ignoreGobDecoder": 1,
                "encoding/gob.(*Decoder).decOpFor": 1,
                "encoding/gob.overflow": 1,
                "\"[?<@v": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor": 1,
                "encoding/gob.(*Decoder).gobDecodeOpFor": 1,
                "encoding/gob.(*Decoder).compatibleType": 1,
                "encoding/gob.(*Decoder).typeString": 1,
                "encoding/gob.(*wireType).string": 1,
                "encoding/gob.(*Decoder).compileSingle": 1,
                "encoding/gob.(*Decoder).compileIgnoreSingle": 1,
                "encoding/gob.(*Decoder).compileDec": 1,
                "encoding/gob.(*Decoder).getDecEnginePtr": 1,
                "encoding/gob.(*Decoder).getIgnoreEnginePtr": 1,
                "encoding/gob.(*Decoder).decodeValue": 1,
                "encoding/gob.(*Decoder).decodeIgnoredValue": 1,
                "encoding/gob.init.0": 1,
                "encoding/gob.allocValue": 1,
                "encoding/gob.(*Decoder).recvType": 1,
                "encoding/gob.(*Decoder).recvMessage": 1,
                "encoding/gob.(*Decoder).readMessage": 1,
                "encoding/gob.(*Decoder).nextInt": 1,
                "encoding/gob.toInt": 1,
                "encoding/gob.(*Decoder).nextUint": 1,
                "encoding/gob.(*Decoder).decodeTypeSequence": 1,
                "encoding/gob.(*Decoder).Decode": 1,
                "encoding/gob.(*Decoder).DecodeValue": 1,
                "encoding/gob.encBoolArray": 1,
                "encoding/gob.encBoolSlice": 1,
                "encoding/gob.encComplex64Array": 1,
                "encoding/gob.encComplex64Slice": 1,
                "encoding/gob.floatBits": 1,
                "encoding/gob.encComplex128Array": 1,
                "encoding/gob.encComplex128Slice": 1,
                "encoding/gob.encFloat32Array": 1,
                "encoding/gob.encFloat32Slice": 1,
                "encoding/gob.encFloat64Array": 1,
                "encoding/gob.encFloat64Slice": 1,
                "encoding/gob.encIntArray": 1,
                "encoding/gob.encIntSlice": 1,
                "encoding/gob.encInt16Array": 1,
                "encoding/gob.encInt16Slice": 1,
                "encoding/gob.encInt32Array": 1,
                "encoding/gob.encInt32Slice": 1,
                "encoding/gob.encInt64Array": 1,
                "encoding/gob.encInt64Slice": 1,
                "encoding/gob.encInt8Array": 1,
                "encoding/gob.encInt8Slice": 1,
                "encoding/gob.encStringArray": 1,
                "encoding/gob.encStringSlice": 1,
                "encoding/gob.(*encBuffer).WriteString": 1,
                "encoding/gob.encUintArray": 1,
                "encoding/gob.encUintSlice": 1,
                "encoding/gob.encUint16Array": 1,
                "encoding/gob.encUint16Slice": 1,
                "encoding/gob.encUint32Array": 1,
                "encoding/gob.encUint32Slice": 1,
                "encoding/gob.encUint64Array": 1,
                "encoding/gob.encUint64Slice": 1,
                "encoding/gob.encUintptrArray": 1,
                "encoding/gob.encUintptrSlice": 1,
                "encoding/gob.(*encBuffer).WriteByte": 1,
                "encoding/gob.(*encBuffer).Write": 1,
                "encoding/gob.(*encBuffer).Len": 1,
                "encoding/gob.(*encBuffer).Bytes": 1,
                "encoding/gob.(*encBuffer).Reset": 1,
                "encoding/gob.(*Encoder).freeEncoderState": 1,
                "encoding/gob.(*encoderState).encodeUint": 1,
                "encoding/gob.(*encoderState).encodeInt": 1,
                "encoding/gob.encIndirect": 1,
                "encoding/gob.encBool": 1,
                "encoding/gob.(*encoderState).update": 1,
                "encoding/gob.encInt": 1,
                "encoding/gob.encUint": 1,
                "encoding/gob.encFloat": 1,
                "encoding/gob.encComplex": 1,
                "encoding/gob.encUint8Array": 1,
                "encoding/gob.encString": 1,
                "encoding/gob.encStructTerminator": 1,
                "encoding/gob.valid": 1,
                "encoding/gob.(*Encoder).encodeSingle": 1,
                "encoding/gob.(*Encoder).newEncoderState": 1,
                "encoding/gob.(*Encoder).encodeStruct": 1,
                "encoding/gob.(*Encoder).encodeArray": 1,
                "encoding/gob.encodeReflectValue": 1,
                "reflect.Indirect": 1,
                "encoding/gob.(*Encoder).encodeMap": 1,
                "encoding/gob.(*Encoder).encodeInterface": 1,
                "encoding/gob.(*Encoder).writer": 1,
                "encoding/gob.(*Encoder).sendTypeId": 1,
                "encoding/gob.(*Encoder).pushWriter": 1,
                "encoding/gob.(*Encoder).popWriter": 1,
                "A&&%4&&%k": 1,
                "encoding/gob.isZero": 1,
                "encoding/gob.(*Encoder).encodeGobEncoder": 1,
                "encoding/gob.encOpFor": 1,
                "encoding/gob.gobEncodeOpFor": 1,
                "encoding/gob.compileEnc": 1,
                "encoding/gob.getEncEngine": 1,
                "encoding/gob.buildEncEngine": 1,
                "encoding/gob.(*Encoder).encode": 1,
                "encoding/gob.(*Encoder).writeMessage": 1,
                "encoding/gob.(*Encoder).setError": 1,
                "encoding/gob.(*Encoder).sendActualType": 1,
                "encoding/gob.(*Encoder).sendType": 1,
                "encoding/gob.(*Encoder).Encode": 1,
                "encoding/gob.(*Encoder).sendTypeDescriptor": 1,
                "encoding/gob.(*Encoder).EncodeValue": 1,
                "encoding/gob.errorf": 1,
                "encoding/gob.catchError": 1,
                "encoding/gob.validUserType": 1,
                "ew/x3w": 1,
                "encoding/gob.implementsInterface": 1,
                "encoding/gob.userType": 1,
                "encoding/gob.setTypeId": 1,
                "encoding/gob.typeId.string": 1,
                "encoding/gob.typeId.gobType": 1,
                "encoding/gob.typeId.name": 1,
                "encoding/gob.(*CommonType).id": 1,
                "encoding/gob.(*CommonType).setId": 1,
                "encoding/gob.(*CommonType).string": 1,
                "encoding/gob.(*CommonType).safeString": 1,
                "encoding/gob.(*CommonType).name": 1,
                "encoding/gob.init.1": 1,
                "encoding/gob.(*arrayType).init": 1,
                "encoding/gob.(*arrayType).safeString": 1,
                "encoding/gob.(*arrayType).string": 1,
                "encoding/gob.(*gobEncoderType).safeString": 1,
                "encoding/gob.(*gobEncoderType).string": 1,
                "encoding/gob.(*mapType).init": 1,
                "encoding/gob.(*mapType).safeString": 1,
                "encoding/gob.(*mapType).string": 1,
                "encoding/gob.(*sliceType).init": 1,
                "encoding/gob.(*sliceType).safeString": 1,
                "encoding/gob.(*sliceType).string": 1,
                "encoding/gob.(*structType).safeString": 1,
                "encoding/gob.(*structType).string": 1,
                "encoding/gob.newTypeObject": 1,
                "encoding/gob.newGobEncoderType": 1,
                "encoding/gob.newMapType": 1,
                "encoding/gob.newArrayType": 1,
                "encoding/gob.newStructType": 1,
                "encoding/gob.newSliceType": 1,
                "403\"<G": 1,
                ":#+1*G": 1,
                "encoding/gob.isExported": 1,
                "unicode.IsUpper": 1,
                "encoding/gob.isSent": 1,
                "encoding/gob.getBaseType": 1,
                "encoding/gob.getType": 1,
                "encoding/gob.checkId": 1,
                "encoding/gob.bootstrapType": 1,
                "encoding/gob.getTypeInfo": 1,
                "encoding/gob.lookupTypeInfo": 1,
                "encoding/gob.buildTypeInfo": 1,
                "encoding/gob.mustGetTypeInfo": 1,
                "encoding/gob.RegisterName": 1,
                "encoding/gob.Register": 1,
                "encoding/gob.registerBasics": 1,
                "encoding/gob.glob..func1": 1,
                "encoding/gob.(*Decoder).decOpFor.func1": 1,
                "encoding/gob.(*Decoder).decOpFor.func2": 1,
                "encoding/gob.(*Decoder).decOpFor.func3": 1,
                "encoding/gob.(*Decoder).decOpFor.func4": 1,
                "encoding/gob.(*Decoder).decOpFor.func5": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor.func1": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor.func2": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor.func3": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor.func4": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor.func5": 1,
                "encoding/gob.(*Decoder).decIgnoreOpFor.func6": 1,
                "encoding/gob.(*Decoder).gobDecodeOpFor.func1": 1,
                "encoding/gob.encOpFor.func1": 1,
                "encoding/gob.encOpFor.func2": 1,
                "encoding/gob.encOpFor.func3": 1,
                "encoding/gob.encOpFor.func4": 1,
                "encoding/gob.encOpFor.func5": 1,
                "encoding/gob.gobEncodeOpFor.func1": 1,
                "encoding/gob.newTypeObject.func1": 1,
                "encoding/gob.init.ializers": 1,
                "encoding/gob.init": 1,
                "encoding/gob.(*sliceType).id": 1,
                "encoding/gob.(*sliceType).name": 1,
                "encoding/gob.(*sliceType).setId": 1,
                "encoding/gob.(*structType).id": 1,
                "encoding/gob.(*structType).name": 1,
                "encoding/gob.(*structType).setId": 1,
                "encoding/gob.(*arrayType).id": 1,
                "encoding/gob.(*arrayType).name": 1,
                "encoding/gob.(*arrayType).setId": 1,
                "encoding/gob.(*gobEncoderType).id": 1,
                "encoding/gob.(*gobEncoderType).name": 1,
                "encoding/gob.(*gobEncoderType).setId": 1,
                "encoding/gob.(*mapType).id": 1,
                "encoding/gob.(*mapType).name": 1,
                "encoding/gob.(*mapType).setId": 1,
                "encoding/gob.(*typeId).name": 1,
                "encoding/gob.(*typeId).string": 1,
                "type..hash.encoding/gob.CommonType": 1,
                "type..eq.encoding/gob.CommonType": 1,
                "type..hash.encoding/gob.arrayType": 1,
                "type..eq.encoding/gob.arrayType": 1,
                "type..hash.encoding/gob.sliceType": 1,
                "type..eq.encoding/gob.sliceType": 1,
                "type..hash.encoding/gob.fieldType": 1,
                "type..eq.encoding/gob.fieldType": 1,
                "type..hash.encoding/gob.mapType": 1,
                "type..eq.encoding/gob.mapType": 1,
                "type..hash.encoding/gob.gobEncoderType": 1,
                "type..eq.encoding/gob.gobEncoderType": 1,
                "type..hash.encoding/gob.userTypeInfo": 1,
                "type..eq.encoding/gob.userTypeInfo": 1,
                "type..hash.encoding/gob.encoderState": 1,
                "type..eq.encoding/gob.encoderState": 1,
                "type..hash.encoding/gob.typeInfo": 1,
                "type..eq.encoding/gob.typeInfo": 1,
                "github.com/robertkrimen/otto.builtinGlobal_eval": 1,
                "github.com/robertkrimen/otto.FunctionCall.Argument": 1,
                "github.com/robertkrimen/otto.valueOfArrayIndex": 1,
                "github.com/robertkrimen/otto.getValueOfArrayIndex": 1,
                "github.com/robertkrimen/otto.Value.isEmpty": 1,
                "github.com/robertkrimen/otto.Value.IsString": 1,
                "github.com/robertkrimen/otto.(*_runtime).enterGlobalScope": 1,
                "github.com/robertkrimen/otto.newScope": 1,
                "github.com/robertkrimen/otto.builtinGlobal_isNaN": 1,
                "github.com/robertkrimen/otto.toValue_bool": 1,
                "github.com/robertkrimen/otto.builtinGlobal_isFinite": 1,
                "github.com/robertkrimen/otto.builtinGlobal_parseInt": 1,
                "github.com/robertkrimen/otto.digitValue": 1,
                "github.com/robertkrimen/otto.NaNValue": 1,
                "github.com/robertkrimen/otto.toValue_float64": 1,
                "github.com/robertkrimen/otto.toValue_int64": 1,
                "github.com/robertkrimen/otto.builtinGlobal_parseFloat": 1,
                "github.com/robertkrimen/otto._builtinGlobal_encodeURI": 1,
                "github.com/robertkrimen/otto.(*_runtime).panicURIError": 1,
                "github.com/robertkrimen/otto.toValue_string": 1,
                "github.com/robertkrimen/otto.builtinGlobal_encodeURI": 1,
                "github.com/robertkrimen/otto.builtinGlobal_encodeURIComponent": 1,
                "github.com/robertkrimen/otto._decodeURI": 1,
                "github.com/robertkrimen/otto.builtinGlobal_decodeURI": 1,
                "github.com/robertkrimen/otto.builtinGlobal_decodeURIComponent": 1,
                "github.com/robertkrimen/otto.builtin_shouldEscape": 1,
                "github.com/robertkrimen/otto.builtin_escape": 1,
                "github.com/robertkrimen/otto.builtin_unescape": 1,
                "encoding/hex.DecodeString": 1,
                "github.com/robertkrimen/otto.builtinGlobal_escape": 1,
                "github.com/robertkrimen/otto.builtinGlobal_unescape": 1,
                "github.com/robertkrimen/otto.builtinArray": 1,
                "github.com/robertkrimen/otto.builtinNewArray": 1,
                "github.com/robertkrimen/otto.builtinNewArrayNative": 1,
                "github.com/robertkrimen/otto.Value.IsNumber": 1,
                "github.com/robertkrimen/otto.(*_runtime).newArray": 1,
                "github.com/robertkrimen/otto.builtinArray_toString": 1,
                "github.com/robertkrimen/otto.(*_object).get": 1,
                "github.com/robertkrimen/otto.builtinArray_toLocaleString": 1,
                "github.com/robertkrimen/otto.arrayIndexToString": 1,
                "github.com/robertkrimen/otto.(*_runtime).panicTypeError": 1,
                "github.com/robertkrimen/otto.builtinArray_concat": 1,
                "github.com/robertkrimen/otto.isArray": 1,
                "github.com/robertkrimen/otto.(*_object).hasProperty": 1,
                "github.com/robertkrimen/otto.builtinArray_shift": 1,
                "github.com/robertkrimen/otto.(*_object).put": 1,
                "github.com/robertkrimen/otto.(*_object).delete": 1,
                "github.com/robertkrimen/otto.builtinArray_push": 1,
                "github.com/robertkrimen/otto.builtinArray_pop": 1,
                "github.com/robertkrimen/otto.toValue_uint32": 1,
                "github.com/robertkrimen/otto.builtinArray_join": 1,
                "github.com/robertkrimen/otto.Value.IsDefined": 1,
                "github.com/robertkrimen/otto.builtinArray_splice": 1,
                "github.com/robertkrimen/otto.FunctionCall.getArgument": 1,
                "github.com/robertkrimen/otto.builtinArray_slice": 1,
                "github.com/robertkrimen/otto.builtinArray_unshift": 1,
                "github.com/robertkrimen/otto.builtinArray_reverse": 1,
                "github.com/robertkrimen/otto.sortCompare": 1,
                "github.com/robertkrimen/otto.arraySortSwap": 1,
                "github.com/robertkrimen/otto.arraySortQuickPartition": 1,
                "github.com/robertkrimen/otto.arraySortQuickSort": 1,
                "github.com/robertkrimen/otto.builtinArray_sort": 1,
                "github.com/robertkrimen/otto.Value.IsUndefined": 1,
                "github.com/robertkrimen/otto.builtinArray_isArray": 1,
                "github.com/robertkrimen/otto.builtinArray_indexOf": 1,
                "github.com/robertkrimen/otto.toValue_int": 1,
                "github.com/robertkrimen/otto.builtinArray_lastIndexOf": 1,
                "github.com/robertkrimen/otto.builtinArray_every": 1,
                "github.com/robertkrimen/otto.builtinArray_some": 1,
                "github.com/robertkrimen/otto.builtinArray_forEach": 1,
                "github.com/robertkrimen/otto.builtinArray_map": 1,
                "github.com/robertkrimen/otto.builtinArray_filter": 1,
                "github.com/robertkrimen/otto.builtinArray_reduce": 1,
                "github.com/robertkrimen/otto.builtinArray_reduceRight": 1,
                "github.com/robertkrimen/otto.builtinBoolean": 1,
                "github.com/robertkrimen/otto.builtinNewBoolean": 1,
                "github.com/robertkrimen/otto.(*_runtime).newBoolean": 1,
                "github.com/robertkrimen/otto.builtinBoolean_toString": 1,
                "github.com/robertkrimen/otto.Value.IsBoolean": 1,
                "github.com/robertkrimen/otto.builtinBoolean_valueOf": 1,
                "github.com/robertkrimen/otto.builtinDate": 1,
                "github.com/robertkrimen/otto.(*_dateObject).Time": 1,
                "github.com/robertkrimen/otto.builtinNewDate": 1,
                "github.com/robertkrimen/otto.(*_runtime).newDate": 1,
                "github.com/robertkrimen/otto.builtinDate_toString": 1,
                "github.com/robertkrimen/otto.builtinDate_toDateString": 1,
                "github.com/robertkrimen/otto.builtinDate_toTimeString": 1,
                "github.com/robertkrimen/otto.builtinDate_toUTCString": 1,
                "github.com/robertkrimen/otto.builtinDate_toISOString": 1,
                "github.com/robertkrimen/otto.builtinDate_toJSON": 1,
                "github.com/robertkrimen/otto.builtinDate_toGMTString": 1,
                "github.com/robertkrimen/otto.builtinDate_getTime": 1,
                "github.com/robertkrimen/otto.(*_dateObject).Epoch": 1,
                "github.com/robertkrimen/otto.builtinDate_setTime": 1,
                "github.com/robertkrimen/otto.(*_dateObject).Value": 1,
                "github.com/robertkrimen/otto._builtinDate_beforeSet": 1,
                "github.com/robertkrimen/otto.builtinDate_parse": 1,
                "github.com/robertkrimen/otto.builtinDate_UTC": 1,
                "github.com/robertkrimen/otto.builtinDate_now": 1,
                "github.com/robertkrimen/otto.builtinDate_toLocaleString": 1,
                "github.com/robertkrimen/otto.builtinDate_toLocaleDateString": 1,
                "github.com/robertkrimen/otto.builtinDate_toLocaleTimeString": 1,
                "github.com/robertkrimen/otto.builtinDate_valueOf": 1,
                "github.com/robertkrimen/otto.builtinDate_getYear": 1,
                "github.com/robertkrimen/otto.builtinDate_getFullYear": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCFullYear": 1,
                "github.com/robertkrimen/otto.builtinDate_getMonth": 1,
                "github.com/robertkrimen/otto.dateFromGoMonth": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCMonth": 1,
                "github.com/robertkrimen/otto.builtinDate_getDate": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCDate": 1,
                "github.com/robertkrimen/otto.builtinDate_getDay": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCDay": 1,
                "github.com/robertkrimen/otto.builtinDate_getHours": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCHours": 1,
                "github.com/robertkrimen/otto.builtinDate_getMinutes": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCMinutes": 1,
                "github.com/robertkrimen/otto.builtinDate_getSeconds": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCSeconds": 1,
                "github.com/robertkrimen/otto.builtinDate_getMilliseconds": 1,
                "github.com/robertkrimen/otto.builtinDate_getUTCMilliseconds": 1,
                "github.com/robertkrimen/otto.builtinDate_getTimezoneOffset": 1,
                "github.com/robertkrimen/otto.builtinDate_setMilliseconds": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCMilliseconds": 1,
                "github.com/robertkrimen/otto.builtinDate_setSeconds": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCSeconds": 1,
                "github.com/robertkrimen/otto.builtinDate_setMinutes": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCMinutes": 1,
                "github.com/robertkrimen/otto.builtinDate_setHours": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCHours": 1,
                "github.com/robertkrimen/otto.builtinDate_setDate": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCDate": 1,
                "github.com/robertkrimen/otto.builtinDate_setMonth": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCMonth": 1,
                "github.com/robertkrimen/otto.builtinDate_setYear": 1,
                "github.com/robertkrimen/otto.builtinDate_setFullYear": 1,
                "github.com/robertkrimen/otto.builtinDate_setUTCFullYear": 1,
                "github.com/robertkrimen/otto.builtinError": 1,
                "github.com/robertkrimen/otto.builtinNewError": 1,
                "github.com/robertkrimen/otto.builtinError_toString": 1,
                "github.com/robertkrimen/otto.(*_runtime).newEvalError": 1,
                "github.com/robertkrimen/otto.builtinEvalError": 1,
                "github.com/robertkrimen/otto.builtinNewEvalError": 1,
                "github.com/robertkrimen/otto.(*_runtime).newTypeError": 1,
                "github.com/robertkrimen/otto.builtinTypeError": 1,
                "github.com/robertkrimen/otto.builtinNewTypeError": 1,
                "github.com/robertkrimen/otto.(*_runtime).newRangeError": 1,
                "github.com/robertkrimen/otto.builtinRangeError": 1,
                "github.com/robertkrimen/otto.builtinNewRangeError": 1,
                "github.com/robertkrimen/otto.(*_runtime).newURIError": 1,
                "github.com/robertkrimen/otto.(*_runtime).newReferenceError": 1,
                "github.com/robertkrimen/otto.builtinReferenceError": 1,
                "github.com/robertkrimen/otto.builtinNewReferenceError": 1,
                "github.com/robertkrimen/otto.(*_runtime).newSyntaxError": 1,
                "github.com/robertkrimen/otto.builtinSyntaxError": 1,
                "github.com/robertkrimen/otto.builtinNewSyntaxError": 1,
                "github.com/robertkrimen/otto.builtinURIError": 1,
                "github.com/robertkrimen/otto.builtinNewURIError": 1,
                "github.com/robertkrimen/otto.builtinFunction": 1,
                "github.com/robertkrimen/otto.builtinNewFunction": 1,
                "github.com/robertkrimen/otto.builtinNewFunctionNative": 1,
                "github.com/robertkrimen/otto.builtinFunction_toString": 1,
                "github.com/robertkrimen/otto.builtinFunction_apply": 1,
                "github.com/robertkrimen/otto.builtinFunction_call": 1,
                "github.com/robertkrimen/otto.builtinFunction_bind": 1,
                "github.com/robertkrimen/otto.FunctionCall.slice": 1,
                "github.com/robertkrimen/otto.builtinJSON_parse": 1,
                "github.com/robertkrimen/otto.(*_runtime).newObject": 1,
                "github.com/robertkrimen/otto.(*_runtime).newClassObject": 1,
                "github.com/robertkrimen/otto.newObject": 1,
                "github.com/robertkrimen/otto.(*_runtime).panicSyntaxError": 1,
                "github.com/robertkrimen/otto.builtinJSON_reviveWalk": 1,
                "github.com/robertkrimen/otto.(*_object).defineProperty": 1,
                "github.com/robertkrimen/otto.(*_object).defineOwnProperty": 1,
                "github.com/robertkrimen/otto.(*_object).enumerate": 1,
                "github.com/robertkrimen/otto.builtinJSON_parseWalk": 1,
                "github.com/robertkrimen/otto.builtinJSON_stringify": 1,
                "github.com/robertkrimen/otto.builtinJSON_stringifyWalk": 1,
                "github.com/robertkrimen/otto.Value.IsObject": 1,
                "github.com/robertkrimen/otto.Value.IsFunction": 1,
                "github.com/robertkrimen/otto.builtinMath_abs": 1,
                "github.com/robertkrimen/otto.builtinMath_acos": 1,
                "github.com/robertkrimen/otto.builtinMath_asin": 1,
                "github.com/robertkrimen/otto.builtinMath_atan": 1,
                "github.com/robertkrimen/otto.builtinMath_atan2": 1,
                "github.com/robertkrimen/otto.builtinMath_cos": 1,
                "github.com/robertkrimen/otto.builtinMath_ceil": 1,
                "github.com/robertkrimen/otto.builtinMath_exp": 1,
                "github.com/robertkrimen/otto.builtinMath_floor": 1,
                "github.com/robertkrimen/otto.builtinMath_log": 1,
                "github.com/robertkrimen/otto.builtinMath_max": 1,
                "github.com/robertkrimen/otto.negativeInfinityValue": 1,
                "github.com/robertkrimen/otto.builtinMath_min": 1,
                "github.com/robertkrimen/otto.positiveInfinityValue": 1,
                "github.com/robertkrimen/otto.builtinMath_pow": 1,
                "github.com/robertkrimen/otto.builtinMath_random": 1,
                "github.com/robertkrimen/otto.builtinMath_round": 1,
                "github.com/robertkrimen/otto.builtinMath_sin": 1,
                "github.com/robertkrimen/otto.builtinMath_sqrt": 1,
                "github.com/robertkrimen/otto.builtinMath_tan": 1,
                "github.com/robertkrimen/otto.builtinNumber": 1,
                "github.com/robertkrimen/otto.numberValueFromNumberArgumentList": 1,
                "github.com/robertkrimen/otto.builtinNewNumber": 1,
                "github.com/robertkrimen/otto.builtinNumber_toString": 1,
                "github.com/robertkrimen/otto.(*_runtime).panicRangeError": 1,
                "github.com/robertkrimen/otto.builtinNumber_valueOf": 1,
                "github.com/robertkrimen/otto.builtinNumber_toFixed": 1,
                "github.com/robertkrimen/otto.builtinNumber_toExponential": 1,
                "github.com/robertkrimen/otto.builtinNumber_toPrecision": 1,
                "github.com/robertkrimen/otto.builtinNumber_toLocaleString": 1,
                "github.com/robertkrimen/otto.builtinObject": 1,
                "github.com/robertkrimen/otto.builtinNewObject": 1,
                "github.com/robertkrimen/otto.builtinObject_valueOf": 1,
                "github.com/robertkrimen/otto.builtinObject_hasOwnProperty": 1,
                "github.com/robertkrimen/otto.(*_object).hasOwnProperty": 1,
                "github.com/robertkrimen/otto.builtinObject_isPrototypeOf": 1,
                "github.com/robertkrimen/otto.FunctionCall.toObject": 1,
                "github.com/robertkrimen/otto.builtinObject_propertyIsEnumerable": 1,
                "github.com/robertkrimen/otto.(*_object).getOwnProperty": 1,
                "github.com/robertkrimen/otto._property.enumerable": 1,
                "github.com/robertkrimen/otto.builtinObject_toString": 1,
                "github.com/robertkrimen/otto.Value.IsNull": 1,
                "github.com/robertkrimen/otto.builtinObject_toLocaleString": 1,
                "github.com/robertkrimen/otto.builtinObject_getPrototypeOf": 1,
                "github.com/robertkrimen/otto.builtinObject_getOwnPropertyDescriptor": 1,
                "github.com/robertkrimen/otto.builtinObject_defineProperty": 1,
                "github.com/robertkrimen/otto.builtinObject_defineProperties": 1,
                "github.com/robertkrimen/otto.builtinObject_create": 1,
                "github.com/robertkrimen/otto.builtinObject_isExtensible": 1,
                "github.com/robertkrimen/otto.builtinObject_preventExtensions": 1,
                "github.com/robertkrimen/otto.builtinObject_isSealed": 1,
                "github.com/robertkrimen/otto.builtinObject_seal": 1,
                "github.com/robertkrimen/otto.builtinObject_isFrozen": 1,
                "github.com/robertkrimen/otto.builtinObject_freeze": 1,
                "github.com/robertkrimen/otto.builtinObject_keys": 1,
                "github.com/robertkrimen/otto.builtinObject_getOwnPropertyNames": 1,
                "github.com/robertkrimen/otto.builtinRegExp": 1,
                "github.com/robertkrimen/otto.builtinNewRegExp": 1,
                "github.com/robertkrimen/otto.builtinRegExp_toString": 1,
                "github.com/robertkrimen/otto.builtinRegExp_exec": 1,
                "github.com/robertkrimen/otto.builtinRegExp_test": 1,
                "github.com/robertkrimen/otto.builtinRegExp_compile": 1,
                "github.com/robertkrimen/otto.stringValueFromStringArgumentList": 1,
                "github.com/robertkrimen/otto.builtinString": 1,
                "github.com/robertkrimen/otto.builtinNewString": 1,
                "github.com/robertkrimen/otto.builtinString_toString": 1,
                "github.com/robertkrimen/otto.builtinString_valueOf": 1,
                "github.com/robertkrimen/otto.builtinString_fromCharCode": 1,
                "github.com/robertkrimen/otto.toValue_string16": 1,
                "github.com/robertkrimen/otto.builtinString_charAt": 1,
                "github.com/robertkrimen/otto.(*_object).stringValue": 1,
                "github.com/robertkrimen/otto.builtinString_charCodeAt": 1,
                "github.com/robertkrimen/otto.toValue_uint16": 1,
                "github.com/robertkrimen/otto.builtinString_concat": 1,
                "github.com/robertkrimen/otto.builtinString_indexOf": 1,
                "github.com/robertkrimen/otto.builtinString_lastIndexOf": 1,
                "github.com/robertkrimen/otto.builtinString_match": 1,
                "github.com/robertkrimen/otto.(*_object).regExpValue": 1,
                "github.com/robertkrimen/otto.builtinString_findAndReplaceString": 1,
                "github.com/robertkrimen/otto.builtinString_replace": 1,
                "github.com/robertkrimen/otto.builtinString_search": 1,
                "github.com/robertkrimen/otto.builtinString_split": 1,
                "github.com/robertkrimen/otto.Value.isRegExp": 1,
                "strings.SplitN": 1,
                "github.com/robertkrimen/otto.builtinString_slice": 1,
                "github.com/robertkrimen/otto.builtinString_substring": 1,
                "github.com/robertkrimen/otto.builtinString_substr": 1,
                "github.com/robertkrimen/otto.builtinString_toLowerCase": 1,
                "github.com/robertkrimen/otto.builtinString_toUpperCase": 1,
                "github.com/robertkrimen/otto.builtinString_trim": 1,
                "github.com/robertkrimen/otto.builtinString_trimLeft": 1,
                "github.com/robertkrimen/otto.builtinString_trimRight": 1,
                "github.com/robertkrimen/otto.builtinString_localeCompare": 1,
                "github.com/robertkrimen/otto.builtinString_toLocaleLowerCase": 1,
                "github.com/robertkrimen/otto.builtinString_toLocaleUpperCase": 1,
                "github.com/robertkrimen/otto.(*_runtime).clone": 1,
                "github.com/robertkrimen/otto.(*_runtime).newObjectStash": 1,
                "github.com/robertkrimen/otto.(*_runtime).newBaseObject": 1,
                "github.com/robertkrimen/otto.(*_clone).object": 1,
                "github.com/robertkrimen/otto.(*_clone).value": 1,
                "github.com/robertkrimen/otto.(*_clone).valueArray": 1,
                "github.com/robertkrimen/otto.(*_clone).property": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_call_nodeFunction": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_functionDeclaration": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_variableDeclaration": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).newDeclarationStash": 1,
                "github.com/robertkrimen/otto.(*_runtime)._newRegExp": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeArrayLiteral": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeAssignExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeBinaryExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeBinaryExpression_comparison": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeBracketExpression": 1,
                "github.com/robertkrimen/otto.newPropertyReference": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeCallExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeConditionalExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeDotExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeNewExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeObjectLiteral": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeSequenceExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeUnaryExpression": 1,
                "github.com/robertkrimen/otto.toValue_int32": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeVariableExpression": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement": 1,
                "github.com/robertkrimen/otto.newReturnResult": 1,
                "github.com/robertkrimen/otto.newException": 1,
                "@FCE\"^c]nRcQ": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatementList": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeDoWhileStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForInStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeIfStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeSwitchStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeWhileStatement": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeWithStatement": 1,
                "github.com/robertkrimen/otto.(*_compiler).parseExpression": 1,
                "B0A3D'_+": 1,
                "github.com/robertkrimen/otto.(*_compiler).parseStatement": 1,
                "2H.G2t=": 1,
                "github.com/robertkrimen/otto.cmpl_parse": 1,
                "github.com/robertkrimen/otto.(*_compiler).parse": 1,
                "github.com/robertkrimen/otto.(*_compiler)._parse": 1,
                "github.com/robertkrimen/otto.(*_nodeArrayLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeAssignExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeBinaryExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeBracketExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeCallExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeConditionalExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeDotExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeFunctionLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeIdentifier)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeNewExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeObjectLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeRegExpLiteral)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeSequenceExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeThisExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeUnaryExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeVariableExpression)._expressionNode": 1,
                "github.com/robertkrimen/otto.(*_nodeBlockStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeBranchStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeCaseStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeCatchStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeDebuggerStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeDoWhileStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeEmptyStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeExpressionStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeForInStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeForStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeIfStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeLabelledStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeReturnStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeSwitchStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeThrowStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeTryStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeVariableStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeWhileStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.(*_nodeWithStatement)._statementNode": 1,
                "github.com/robertkrimen/otto.formatForConsole": 1,
                "github.com/robertkrimen/otto.builtinConsole_log": 1,
                "github.com/robertkrimen/otto.builtinConsole_error": 1,
                "github.com/robertkrimen/otto.builtinConsole_dir": 1,
                "github.com/robertkrimen/otto.builtinConsole_time": 1,
                "github.com/robertkrimen/otto.builtinConsole_timeEnd": 1,
                "github.com/robertkrimen/otto.builtinConsole_trace": 1,
                "github.com/robertkrimen/otto.builtinConsole_assert": 1,
                "github.com/robertkrimen/otto._error.format": 1,
                "github.com/robertkrimen/otto._error.formatWithStack": 1,
                "github.com/robertkrimen/otto._frame.location": 1,
                "github.com/robertkrimen/otto.Error.Error": 1,
                "github.com/robertkrimen/otto.Error.String": 1,
                "github.com/robertkrimen/otto.newError": 1,
                "github.com/robertkrimen/otto._error.describe": 1,
                "github.com/robertkrimen/otto.catchPanic": 1,
                "github.com/robertkrimen/otto.(*_runtime).evaluateDivide": 1,
                "github.com/robertkrimen/otto.positiveZeroValue": 1,
                "github.com/robertkrimen/otto.negativeZeroValue": 1,
                "github.com/robertkrimen/otto.(*_runtime).calculateBinaryExpression": 1,
                "github.com/robertkrimen/otto.valueKindDispatchKey": 1,
                "github.com/robertkrimen/otto.makeEqualDispatch": 1,
                "github.com/robertkrimen/otto.calculateLessThan": 1,
                "github.com/robertkrimen/otto.(*_runtime).calculateComparison": 1,
                "github.com/robertkrimen/otto.newContext": 1,
                "github.com/robertkrimen/otto.(*_object).primitiveValue": 1,
                "github.com/robertkrimen/otto.(*_runtime).newArrayOf": 1,
                "github.com/robertkrimen/otto.(*_runtime).newString": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNumber": 1,
                "github.com/robertkrimen/otto.(*_runtime).newRegExp": 1,
                "github.com/robertkrimen/otto.(*_runtime).newError": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNativeFunction": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNodeFunction": 1,
                "github.com/robertkrimen/otto.(*_runtime).newBoundFunction": 1,
                "github.com/robertkrimen/otto._newContext": 1,
                "Y--0'/": 1,
                "YI-L'K": 1,
                "YW-Z'Y": 1,
                "github.com/robertkrimen/otto.newConsoleObject": 1,
                "Y+*.'-": 1,
                "YG*J'I": 1,
                "YU*X'W": 1,
                "Yc*f'e": 1,
                "Yq*t's": 1,
                "github.com/robertkrimen/otto.(*_object).DefaultValue": 1,
                "github.com/robertkrimen/otto.Value.IsPrimitive": 1,
                "github.com/robertkrimen/otto.(*_object).String": 1,
                "github.com/robertkrimen/otto.(*_object)._delete": 1,
                "github.com/robertkrimen/otto.objectEnumerate": 1,
                "github.com/robertkrimen/otto.init.0": 1,
                "github.com/robertkrimen/otto.objectGetOwnProperty": 1,
                "github.com/robertkrimen/otto.(*_object)._read": 1,
                "github.com/robertkrimen/otto.objectGetProperty": 1,
                "github.com/robertkrimen/otto.(*_object).getProperty": 1,
                "github.com/robertkrimen/otto.objectGet": 1,
                "github.com/robertkrimen/otto.objectCanPut": 1,
                "github.com/robertkrimen/otto._objectCanPut": 1,
                "github.com/robertkrimen/otto._property.writable": 1,
                "github.com/robertkrimen/otto.objectPut": 1,
                "github.com/robertkrimen/otto.(*_runtime).typeErrorResult": 1,
                "github.com/robertkrimen/otto.objectHasProperty": 1,
                "github.com/robertkrimen/otto.objectHasOwnProperty": 1,
                "github.com/robertkrimen/otto.objectDefineOwnProperty": 1,
                "github.com/robertkrimen/otto._property.isEmpty": 1,
                "github.com/robertkrimen/otto._property.isGenericDescriptor": 1,
                "github.com/robertkrimen/otto._property.isDataDescriptor": 1,
                "github.com/robertkrimen/otto._property.writeSet": 1,
                "github.com/robertkrimen/otto._property.configurable": 1,
                "github.com/robertkrimen/otto.(*_object)._write": 1,
                "github.com/robertkrimen/otto._property.isAccessorDescriptor": 1,
                "github.com/robertkrimen/otto._property.enumerateSet": 1,
                ")J\"E,<": 1,
                "github.com/robertkrimen/otto.objectDelete": 1,
                "github.com/robertkrimen/otto.objectClone": 1,
                "github.com/robertkrimen/otto.(*_clone).stash": 1,
                "github.com/robertkrimen/otto.New": 1,
                "github.com/robertkrimen/otto.(*_runtime).newConsole": 1,
                "github.com/robertkrimen/otto.Otto.Run": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_run": 1,
                "github.com/robertkrimen/otto.Value.safe": 1,
                "github.com/robertkrimen/otto.Otto.Eval": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_eval": 1,
                "github.com/robertkrimen/otto.Otto.Get": 1,
                "github.com/robertkrimen/otto.Otto.Set": 1,
                "github.com/robertkrimen/otto.Otto.ToValue": 1,
                "github.com/robertkrimen/otto.Otto.SetDebuggerHandler": 1,
                "github.com/robertkrimen/otto.Otto.SetRandomSource": 1,
                "github.com/robertkrimen/otto.Otto.SetStackDepthLimit": 1,
                "github.com/robertkrimen/otto.Otto.SetStackTraceLimit": 1,
                "github.com/robertkrimen/otto.Otto.MakeCustomError": 1,
                "github.com/robertkrimen/otto.Otto.MakeRangeError": 1,
                "github.com/robertkrimen/otto.Otto.MakeSyntaxError": 1,
                "github.com/robertkrimen/otto.Otto.MakeTypeError": 1,
                "github.com/robertkrimen/otto.Otto.Context": 1,
                "github.com/robertkrimen/otto.Otto.ContextLimit": 1,
                "github.com/robertkrimen/otto.Otto.ContextSkip": 1,
                "github.com/robertkrimen/otto.Otto.Call": 1,
                "github.com/robertkrimen/otto.Otto.Object": 1,
                "GC*D#E": 1,
                "github.com/robertkrimen/otto.(*Otto).Copy": 1,
                "github.com/robertkrimen/otto.Object.Call": 1,
                "github.com/robertkrimen/otto.Object.Value": 1,
                "github.com/robertkrimen/otto.Object.Get": 1,
                "github.com/robertkrimen/otto.Object.Set": 1,
                "github.com/robertkrimen/otto.Object.Keys": 1,
                "github.com/robertkrimen/otto.Object.KeysByParent": 1,
                "github.com/robertkrimen/otto.Object.Class": 1,
                "github.com/robertkrimen/otto.(*_runtime).toValueArray": 1,
                "github.com/robertkrimen/otto.stringToArrayIndex": 1,
                "github.com/robertkrimen/otto.valueToRangeIndex": 1,
                "github.com/robertkrimen/otto.rangeStartEnd": 1,
                "github.com/robertkrimen/otto.rangeStartLength": 1,
                "github.com/robertkrimen/otto.hereBeDragons": 1,
                "github.com/robertkrimen/otto._property.get": 1,
                "github.com/robertkrimen/otto.toPropertyDescriptor": 1,
                "github.com/robertkrimen/otto.(*_property).writeOn": 1,
                "github.com/robertkrimen/otto.(*_property).writeOff": 1,
                "github.com/robertkrimen/otto.(*_property).configureOn": 1,
                "github.com/robertkrimen/otto.(*_property).configureOff": 1,
                "github.com/robertkrimen/otto.(*_property).enumerateOn": 1,
                "github.com/robertkrimen/otto.(*_property).enumerateOff": 1,
                "github.com/robertkrimen/otto.(*_runtime).fromPropertyDescriptor": 1,
                "github.com/robertkrimen/otto.(*_runtime).enterScope": 1,
                "github.com/robertkrimen/otto.(*_runtime).leaveScope": 1,
                "github.com/robertkrimen/otto.(*_runtime).enterFunctionScope": 1,
                "github.com/robertkrimen/otto.(*_runtime).newFunctionStash": 1,
                "github.com/robertkrimen/otto.(*_runtime).putValue": 1,
                "github.com/robertkrimen/otto.(*_runtime).tryCatchEvaluate": 1,
                "github.com/robertkrimen/otto.(*_runtime).toObject": 1,
                "github.com/robertkrimen/otto.(*_runtime).objectCoerce": 1,
                "github.com/robertkrimen/otto.checkObjectCoercible": 1,
                "github.com/robertkrimen/otto.testObjectCoercible": 1,
                "github.com/robertkrimen/otto.(*_runtime).safeToValue": 1,
                "github.com/robertkrimen/otto.(*_runtime).convertNumeric": 1,
                "(#'.2#": 1,
                "#%ET#=#": 1,
                "github.com/robertkrimen/otto.(*_runtime).convertCallParameter": 1,
                "github.com/robertkrimen/otto.Value.Class": 1,
                "*Q$&I.": 1,
                "*{$&IX": 1,
                "(-'\"*@)": 1,
                "gG0#/.": 1,
                "github.com/robertkrimen/otto.(*_runtime).toValue": 1,
                "github.com/robertkrimen/otto.(*_runtime).newGoArray": 1,
                "github.com/robertkrimen/otto.(*_runtime).newGoSlice": 1,
                "github.com/robertkrimen/otto.(*_runtime).newGoSliceObject": 1,
                "github.com/robertkrimen/otto._newGoSliceObject": 1,
                "<nE4FD9": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_parse": 1,
                "github.com/robertkrimen/otto.(*_runtime).parseSource": 1,
                "github.com/robertkrimen/otto.(*_runtime).parse": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_runOrEval": 1,
                "github.com/robertkrimen/otto.(*_runtime).parseThrow": 1,
                "github.com/robertkrimen/otto.(*_runtime).panicReferenceError": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_parseOrThrow": 1,
                "github.com/robertkrimen/otto.(*Otto).Compile": 1,
                "github.com/robertkrimen/otto.(*Otto).CompileWithSourceMap": 1,
                "github.com/robertkrimen/otto.(*Script).String": 1,
                "github.com/robertkrimen/otto.(*_objectStash).runtime": 1,
                "github.com/robertkrimen/otto.(*_objectStash).clone": 1,
                "github.com/robertkrimen/otto.(*_clone).objectStash": 1,
                "github.com/robertkrimen/otto.(*_objectStash).hasBinding": 1,
                "github.com/robertkrimen/otto.(*_objectStash).createBinding": 1,
                "github.com/robertkrimen/otto.(*_objectStash).setBinding": 1,
                "github.com/robertkrimen/otto.(*_objectStash).setValue": 1,
                "github.com/robertkrimen/otto.(*_objectStash).getBinding": 1,
                "github.com/robertkrimen/otto.(*_objectStash).deleteBinding": 1,
                "github.com/robertkrimen/otto.(*_objectStash).outer": 1,
                "github.com/robertkrimen/otto.(*_objectStash).newReference": 1,
                "github.com/robertkrimen/otto.(*_dclStash).clone": 1,
                "github.com/robertkrimen/otto.(*_clone).dclStash": 1,
                "github.com/robertkrimen/otto.(*_clone).dclProperty": 1,
                "github.com/robertkrimen/otto.(*_dclStash).hasBinding": 1,
                "github.com/robertkrimen/otto.(*_dclStash).runtime": 1,
                "github.com/robertkrimen/otto.(*_dclStash).createBinding": 1,
                "github.com/robertkrimen/otto.(*_dclStash).setBinding": 1,
                "github.com/robertkrimen/otto.(*_dclStash).setValue": 1,
                "github.com/robertkrimen/otto.(*_dclStash).getBinding": 1,
                "github.com/robertkrimen/otto.(*_dclStash).deleteBinding": 1,
                "github.com/robertkrimen/otto.(*_dclStash).outer": 1,
                "github.com/robertkrimen/otto.(*_dclStash).newReference": 1,
                "github.com/robertkrimen/otto.(*_fnStash).clone": 1,
                "github.com/robertkrimen/otto.(*_clone).fnStash": 1,
                "github.com/robertkrimen/otto.getStashProperties": 1,
                "github.com/robertkrimen/otto.(*_runtime).newArgumentsObject": 1,
                "github.com/robertkrimen/otto._argumentsObject.clone": 1,
                "github.com/robertkrimen/otto._argumentsObject.get": 1,
                "github.com/robertkrimen/otto._argumentsObject.put": 1,
                "github.com/robertkrimen/otto.argumentsGet": 1,
                "github.com/robertkrimen/otto.argumentsGetOwnProperty": 1,
                "github.com/robertkrimen/otto.argumentsDefineOwnProperty": 1,
                "github.com/robertkrimen/otto.argumentsDelete": 1,
                "github.com/robertkrimen/otto._argumentsObject.delete": 1,
                "github.com/robertkrimen/otto.(*_runtime).newArrayObject": 1,
                "github.com/robertkrimen/otto.objectLength": 1,
                "github.com/robertkrimen/otto.arrayUint32": 1,
                "github.com/robertkrimen/otto.isUint32": 1,
                "github.com/robertkrimen/otto.arrayDefineOwnProperty": 1,
                "github.com/robertkrimen/otto.(*_runtime).newBooleanObject": 1,
                "github.com/robertkrimen/otto.(*_runtime).newPrimitiveObject": 1,
                "github.com/robertkrimen/otto.ecmaTime": 1,
                "github.com/robertkrimen/otto.(*_ecmaTime).goTime": 1,
                "github.com/robertkrimen/otto.dateToGoMonth": 1,
                "github.com/robertkrimen/otto.(*_dateObject).SetNaN": 1,
                "github.com/robertkrimen/otto.(*_dateObject).SetTime": 1,
                "github.com/robertkrimen/otto.timeToEpoch": 1,
                "github.com/robertkrimen/otto.(*_dateObject).Set": 1,
                "github.com/robertkrimen/otto.epochToInteger": 1,
                "github.com/robertkrimen/otto.epochToTime": 1,
                "github.com/robertkrimen/otto.(*_runtime).newDateObject": 1,
                "github.com/robertkrimen/otto.dateObjectOf": 1,
                "github.com/robertkrimen/otto.(*_object).dateValue": 1,
                "github.com/robertkrimen/otto.newDateTime": 1,
                "github.com/robertkrimen/otto.dateParse": 1,
                "github.com/robertkrimen/otto.(*_runtime).newErrorObject": 1,
                "github.com/robertkrimen/otto.defaultConstruct": 1,
                "github.com/robertkrimen/otto.(*_runtime)._newNativeFunctionObject": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNativeFunctionObject": 1,
                "github.com/robertkrimen/otto.(*_runtime).newBoundFunctionObject": 1,
                "github.com/robertkrimen/otto._bindFunctionObject.construct": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNodeFunctionObject": 1,
                "github.com/robertkrimen/otto.(*_object).isCall": 1,
                "github.com/robertkrimen/otto.(*_object).call": 1,
                "github.com/robertkrimen/otto.(*_object).construct": 1,
                "github.com/robertkrimen/otto.(*_object).hasInstance": 1,
                "github.com/robertkrimen/otto.(*FunctionCall).thisObject": 1,
                "github.com/robertkrimen/otto.(*FunctionCall).thisClassObject": 1,
                "github.com/robertkrimen/otto.FunctionCall.CallerLocation": 1,
                "github.com/robertkrimen/otto.(*_runtime).newGoArrayObject": 1,
                "github.com/robertkrimen/otto._newGoArrayObject": 1,
                "github.com/robertkrimen/otto._goArrayObject.getValue": 1,
                "github.com/robertkrimen/otto._goArrayObject.setValue": 1,
                "github.com/robertkrimen/otto.goArrayGetOwnProperty": 1,
                "github.com/robertkrimen/otto.goArrayEnumerate": 1,
                "github.com/robertkrimen/otto.goArrayDefineOwnProperty": 1,
                "github.com/robertkrimen/otto.goArrayDelete": 1,
                "C8D$I.J&": 1,
                "github.com/robertkrimen/otto.(*_runtime).newGoMapObject": 1,
                "github.com/robertkrimen/otto._newGoMapObject": 1,
                "github.com/robertkrimen/otto.goMapGetOwnProperty": 1,
                "github.com/robertkrimen/otto._goMapObject.toKey": 1,
                "github.com/robertkrimen/otto.goMapEnumerate": 1,
                "github.com/robertkrimen/otto.goMapDefineOwnProperty": 1,
                "github.com/robertkrimen/otto._goMapObject.toValue": 1,
                "github.com/robertkrimen/otto.goMapDelete": 1,
                "github.com/robertkrimen/otto._goSliceObject.getValue": 1,
                "github.com/robertkrimen/otto._goSliceObject.setValue": 1,
                "github.com/robertkrimen/otto.goSliceGetOwnProperty": 1,
                "github.com/robertkrimen/otto.goSliceEnumerate": 1,
                "github.com/robertkrimen/otto.goSliceDefineOwnProperty": 1,
                "github.com/robertkrimen/otto.goSliceDelete": 1,
                "98:$?.@&": 1,
                "github.com/robertkrimen/otto.(*_runtime).newGoStructObject": 1,
                "github.com/robertkrimen/otto._newGoStructObject": 1,
                "github.com/robertkrimen/otto._goStructObject.getValue": 1,
                "github.com/robertkrimen/otto.validGoStructName": 1,
                "github.com/robertkrimen/otto._goStructObject.field": 1,
                "github.com/robertkrimen/otto._goStructObject.setValue": 1,
                "github.com/robertkrimen/otto.goStructGetOwnProperty": 1,
                "github.com/robertkrimen/otto.goStructEnumerate": 1,
                "github.com/robertkrimen/otto.goStructCanPut": 1,
                "github.com/robertkrimen/otto.goStructPut": 1,
                "github.com/robertkrimen/otto.goStructMarshalJSON": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNumberObject": 1,
                "github.com/robertkrimen/otto.(*_propertyReference).invalid": 1,
                "github.com/robertkrimen/otto.(*_propertyReference).getValue": 1,
                "github.com/robertkrimen/otto.(*_propertyReference).putValue": 1,
                "github.com/robertkrimen/otto.(*_propertyReference).delete": 1,
                "github.com/robertkrimen/otto.(*_stashReference).invalid": 1,
                "github.com/robertkrimen/otto.(*_stashReference).getValue": 1,
                "github.com/robertkrimen/otto.(*_stashReference).putValue": 1,
                "github.com/robertkrimen/otto.(*_stashReference).delete": 1,
                "github.com/robertkrimen/otto.getIdentifierReference": 1,
                "github.com/robertkrimen/otto.(*_runtime).newRegExpObject": 1,
                "github.com/robertkrimen/otto.execRegExp": 1,
                "github.com/robertkrimen/otto.execResultToArray": 1,
                "github.com/robertkrimen/otto._stringASCII.Length": 1,
                "github.com/robertkrimen/otto._stringASCII.At": 1,
                "github.com/robertkrimen/otto._stringASCII.String": 1,
                "github.com/robertkrimen/otto._stringWide.Length": 1,
                "github.com/robertkrimen/otto._stringWide.At": 1,
                "github.com/robertkrimen/otto._stringWide.String": 1,
                "github.com/robertkrimen/otto._newStringObject": 1,
                "github.com/robertkrimen/otto.stringAt": 1,
                "github.com/robertkrimen/otto.(*_runtime).newStringObject": 1,
                "github.com/robertkrimen/otto.stringEnumerate": 1,
                "github.com/robertkrimen/otto.stringGetOwnProperty": 1,
                "github.com/robertkrimen/otto.Value.isCallable": 1,
                "github.com/robertkrimen/otto.Value.Call": 1,
                "github.com/robertkrimen/otto.Value.call": 1,
                "github.com/robertkrimen/otto.Value.constructSafe": 1,
                "github.com/robertkrimen/otto.Value.construct": 1,
                "github.com/robertkrimen/otto.Value.IsNaN": 1,
                "github.com/robertkrimen/otto.toValue_reflectValuePanic": 1,
                "github.com/robertkrimen/otto.toValue": 1,
                "a|UbR5I:": 1,
                "(A'&F1E": 1,
                "github.com/robertkrimen/otto.Value.String": 1,
                "github.com/robertkrimen/otto.Value.ToBoolean": 1,
                "github.com/robertkrimen/otto.Value.numberValue": 1,
                "github.com/robertkrimen/otto.Value.ToFloat": 1,
                "github.com/robertkrimen/otto.Value.ToInteger": 1,
                "github.com/robertkrimen/otto.Value.ToString": 1,
                "github.com/robertkrimen/otto.Value._object": 1,
                "github.com/robertkrimen/otto.Value.Object": 1,
                "github.com/robertkrimen/otto._newObject": 1,
                "github.com/robertkrimen/otto.Value.reference": 1,
                "github.com/robertkrimen/otto.Value.resolve": 1,
                "github.com/robertkrimen/otto.sameValue": 1,
                "github.com/robertkrimen/otto.strictEqualityComparison": 1,
                "github.com/robertkrimen/otto.Value.Export": 1,
                "github.com/robertkrimen/otto.Value.export": 1,
                ".* )8* ):": 1,
                ".* )5* )": 1,
                "[*'+Q,6)": 1,
                "github.com/robertkrimen/otto.Value.evaluateBreakContinue": 1,
                "github.com/robertkrimen/otto.Value.evaluateBreak": 1,
                "github.com/robertkrimen/otto.Value.exportNative": 1,
                "github.com/robertkrimen/otto.Value.toReflectValue": 1,
                "5#6&*+": 1,
                "5+3.'3": 1,
                "5C)F7K": 1,
                "5K)N1S": 1,
                "5S)V7[": 1,
                "5[)^1c": 1,
                "5c6f*k": 1,
                "github.com/robertkrimen/otto.stringToReflectValue": 1,
                "strconv.ParseBool": 1,
                "github.com/robertkrimen/otto.Value.bool": 1,
                "github.com/robertkrimen/otto.parseNumber": 1,
                "github.com/robertkrimen/otto.Value.float64": 1,
                "github.com/robertkrimen/otto.toIntegerFloat": 1,
                "github.com/robertkrimen/otto.Value.number": 1,
                "github.com/robertkrimen/otto.toInt32": 1,
                "github.com/robertkrimen/otto.toUint32": 1,
                "github.com/robertkrimen/otto.toUint16": 1,
                "github.com/robertkrimen/otto.toNumberPrimitive": 1,
                "github.com/robertkrimen/otto.toPrimitive": 1,
                "github.com/robertkrimen/otto._toPrimitive": 1,
                "github.com/robertkrimen/otto.floatToString": 1,
                "github.com/robertkrimen/otto.numberToStringRadix": 1,
                "github.com/robertkrimen/otto.Value.string": 1,
                "strconv.FormatBool": 1,
                "github.com/robertkrimen/otto.glob..func1": 1,
                "github.com/robertkrimen/otto.glob..func2": 1,
                "github.com/robertkrimen/otto._builtinGlobal_encodeURI.func1": 1,
                "github.com/robertkrimen/otto.builtinJSON_reviveWalk.func1": 1,
                "github.com/robertkrimen/otto.builtinJSON_stringifyWalk.func1": 1,
                "github.com/robertkrimen/otto.builtinJSON_stringifyWalk.func2": 1,
                "github.com/robertkrimen/otto.builtinObject_defineProperties.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_create.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_isSealed.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_seal.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_isFrozen.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_freeze.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_keys.func1": 1,
                "github.com/robertkrimen/otto.builtinObject_getOwnPropertyNames.func1": 1,
                "github.com/robertkrimen/otto.builtinString_findAndReplaceString.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeProgram.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeStatement.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeForInStatement.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func2": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeTryStatement.func3": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_evaluate_nodeWithStatement.func1": 1,
                "github.com/robertkrimen/otto.catchPanic.func1": 1,
                "github.com/robertkrimen/otto.(*_exception).eject": 1,
                "github.com/robertkrimen/otto.makeEqualDispatch.func1": 1,
                "github.com/robertkrimen/otto.makeEqualDispatch.func2": 1,
                "github.com/robertkrimen/otto.makeEqualDispatch.func3": 1,
                "github.com/robertkrimen/otto.makeEqualDispatch.func4": 1,
                "github.com/robertkrimen/otto.New.func1": 1,
                "github.com/robertkrimen/otto.Otto.Get.func1": 1,
                "github.com/robertkrimen/otto.Otto.getValue": 1,
                "github.com/robertkrimen/otto.Otto.Set.func1": 1,
                "github.com/robertkrimen/otto.Otto.setValue": 1,
                "github.com/robertkrimen/otto.Otto.Call.func1": 1,
                "github.com/robertkrimen/otto.Otto.Call.func2": 1,
                "github.com/robertkrimen/otto.Object.Get.func1": 1,
                "github.com/robertkrimen/otto.Object.Set.func1": 1,
                "github.com/robertkrimen/otto.Object.Keys.func1": 1,
                "github.com/robertkrimen/otto.Object.KeysByParent.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).tryCatchEvaluate.func1": 1,
                "github.com/robertkrimen/otto._error.messageValue": 1,
                "github.com/robertkrimen/otto.(*_runtime).safeToValue.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).convertCallParameter.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).convertCallParameter.func2": 1,
                "github.com/robertkrimen/otto.(*_runtime).convertCallParameter.func3": 1,
                "github.com/robertkrimen/otto.(*_runtime).convertCallParameter.func4": 1,
                "github.com/robertkrimen/otto.(*_runtime).toValue.func1.1": 1,
                "github.com/robertkrimen/otto.(*_runtime).toValue.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).cmpl_runOrEval.func1": 1,
                "github.com/robertkrimen/otto.newDateTime.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).newErrorObject.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNativeFunctionObject.func1": 1,
                "github.com/robertkrimen/otto.(*_runtime).newNodeFunctionObject.func1": 1,
                "github.com/robertkrimen/otto.(*_object).call.func1": 1,
                "github.com/robertkrimen/otto.(*_object).call.func2": 1,
                "github.com/robertkrimen/otto.Value.Call.func1": 1,
                "github.com/robertkrimen/otto.Value.constructSafe.func1": 1,
                "github.com/robertkrimen/otto.Value.String.func1": 1,
                "github.com/robertkrimen/otto.Value.ToBoolean.func1": 1,
                "github.com/robertkrimen/otto.Value.ToFloat.func1": 1,
                "github.com/robertkrimen/otto.Value.ToInteger.func1": 1,
                "github.com/robertkrimen/otto.Value.ToString.func1": 1,
                "github.com/robertkrimen/otto.Value.export.func1": 1,
                "github.com/robertkrimen/otto.init.ializers": 1,
                "github.com/robertkrimen/otto.init": 1,
                "github.com/robertkrimen/otto.(*_fnStash).createBinding": 1,
                "github.com/robertkrimen/otto.(*_fnStash).deleteBinding": 1,
                "github.com/robertkrimen/otto.(*_fnStash).getBinding": 1,
                "github.com/robertkrimen/otto.(*_fnStash).hasBinding": 1,
                "github.com/robertkrimen/otto.(*_fnStash).newReference": 1,
                "github.com/robertkrimen/otto.(*_fnStash).outer": 1,
                "github.com/robertkrimen/otto.(*_fnStash).runtime": 1,
                "github.com/robertkrimen/otto.(*_fnStash).setBinding": 1,
                "github.com/robertkrimen/otto.(*_fnStash).setValue": 1,
                "github.com/robertkrimen/otto.(*Error).Error": 1,
                "github.com/robertkrimen/otto.(*Error).String": 1,
                "github.com/robertkrimen/otto.(*_stringWide).At": 1,
                "github.com/robertkrimen/otto.(*_stringWide).Length": 1,
                "github.com/robertkrimen/otto.(*_stringWide).String": 1,
                "type..hash.github.com/robertkrimen/otto._frame": 1,
                "type..eq.github.com/robertkrimen/otto._frame": 1,
                "type..hash.github.com/robertkrimen/otto.Value": 1,
                "type..eq.github.com/robertkrimen/otto.Value": 1,
                "github.com/robertkrimen/otto.(*Value).Call": 1,
                "github.com/robertkrimen/otto.(*Value).Class": 1,
                "github.com/robertkrimen/otto.(*Value).Export": 1,
                "github.com/robertkrimen/otto.(*Value).IsBoolean": 1,
                "github.com/robertkrimen/otto.(*Value).IsDefined": 1,
                "github.com/robertkrimen/otto.(*Value).IsFunction": 1,
                "github.com/robertkrimen/otto.(*Value).IsNaN": 1,
                "github.com/robertkrimen/otto.(*Value).IsNull": 1,
                "github.com/robertkrimen/otto.(*Value).IsNumber": 1,
                "github.com/robertkrimen/otto.(*Value).IsObject": 1,
                "github.com/robertkrimen/otto.(*Value).IsPrimitive": 1,
                "github.com/robertkrimen/otto.(*Value).IsString": 1,
                "github.com/robertkrimen/otto.(*Value).IsUndefined": 1,
                "github.com/robertkrimen/otto.(*Value).Object": 1,
                "github.com/robertkrimen/otto.(*Value).String": 1,
                "github.com/robertkrimen/otto.(*Value).ToBoolean": 1,
                "github.com/robertkrimen/otto.(*Value).ToFloat": 1,
                "github.com/robertkrimen/otto.(*Value).ToInteger": 1,
                "github.com/robertkrimen/otto.(*Value).ToString": 1,
                "github.com/robertkrimen/otto.(*Value).string": 1,
                "type..hash.github.com/robertkrimen/otto._dclProperty": 1,
                "type..eq.github.com/robertkrimen/otto._dclProperty": 1,
                "type..hash.github.com/robertkrimen/otto._property": 1,
                "type..eq.github.com/robertkrimen/otto._property": 1,
                "type..hash.github.com/robertkrimen/otto._objectStash": 1,
                "type..eq.github.com/robertkrimen/otto._objectStash": 1,
                "type..hash.github.com/robertkrimen/otto._scope": 1,
                "type..eq.github.com/robertkrimen/otto._scope": 1,
                "github.com/robertkrimen/otto.(*Otto).Call": 1,
                "github.com/robertkrimen/otto.(*Otto).Context": 1,
                "github.com/robertkrimen/otto.(*Otto).ContextLimit": 1,
                "github.com/robertkrimen/otto.(*Otto).ContextSkip": 1,
                "github.com/robertkrimen/otto.(*Otto).Eval": 1,
                "github.com/robertkrimen/otto.(*Otto).Get": 1,
                "github.com/robertkrimen/otto.(*Otto).MakeCustomError": 1,
                "github.com/robertkrimen/otto.(*Otto).MakeRangeError": 1,
                "github.com/robertkrimen/otto.(*Otto).MakeSyntaxError": 1,
                "github.com/robertkrimen/otto.(*Otto).MakeTypeError": 1,
                "github.com/robertkrimen/otto.(*Otto).Object": 1,
                "github.com/robertkrimen/otto.(*Otto).Run": 1,
                "github.com/robertkrimen/otto.(*Otto).Set": 1,
                "github.com/robertkrimen/otto.(*Otto).SetDebuggerHandler": 1,
                "github.com/robertkrimen/otto.(*Otto).SetRandomSource": 1,
                "github.com/robertkrimen/otto.(*Otto).SetStackDepthLimit": 1,
                "github.com/robertkrimen/otto.(*Otto).SetStackTraceLimit": 1,
                "github.com/robertkrimen/otto.(*Otto).ToValue": 1,
                "type..hash.github.com/robertkrimen/otto._nodeDeclaration": 1,
                "type..eq.github.com/robertkrimen/otto._nodeDeclaration": 1,
                "type..hash.github.com/robertkrimen/otto.Script": 1,
                "type..eq.github.com/robertkrimen/otto.Script": 1,
                "github.com/robertkrimen/otto.(*FunctionCall).Argument": 1,
                "github.com/robertkrimen/otto.(*FunctionCall).CallerLocation": 1,
                "type..hash.github.com/robertkrimen/otto._nodeAssignExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeAssignExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeBinaryExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeBinaryExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeBracketExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeBracketExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeConditionalExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeConditionalExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeDotExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeDotExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeIfStatement": 1,
                "type..eq.github.com/robertkrimen/otto._nodeIfStatement": 1,
                "type..hash.github.com/robertkrimen/otto._nodeProperty": 1,
                "type..eq.github.com/robertkrimen/otto._nodeProperty": 1,
                "type..hash.github.com/robertkrimen/otto._nodeCatchStatement": 1,
                "type..eq.github.com/robertkrimen/otto._nodeCatchStatement": 1,
                "type..hash.github.com/robertkrimen/otto._nodeTryStatement": 1,
                "type..eq.github.com/robertkrimen/otto._nodeTryStatement": 1,
                "type..hash.github.com/robertkrimen/otto._nodeUnaryExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeUnaryExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeVariableExpression": 1,
                "type..eq.github.com/robertkrimen/otto._nodeVariableExpression": 1,
                "type..hash.github.com/robertkrimen/otto._nodeWithStatement": 1,
                "type..eq.github.com/robertkrimen/otto._nodeWithStatement": 1,
                "type..hash.github.com/robertkrimen/otto._dateObject": 1,
                "type..eq.github.com/robertkrimen/otto._dateObject": 1,
                "type..hash.github.com/robertkrimen/otto._regExpObject": 1,
                "type..eq.github.com/robertkrimen/otto._regExpObject": 1,
                "type..hash.github.com/robertkrimen/otto.Object": 1,
                "type..eq.github.com/robertkrimen/otto.Object": 1,
                "github.com/robertkrimen/otto.(*Object).Call": 1,
                "github.com/robertkrimen/otto.(*Object).Class": 1,
                "github.com/robertkrimen/otto.(*Object).Get": 1,
                "github.com/robertkrimen/otto.(*Object).Keys": 1,
                "github.com/robertkrimen/otto.(*Object).KeysByParent": 1,
                "github.com/robertkrimen/otto.(*Object).Set": 1,
                "github.com/robertkrimen/otto.(*Object).Value": 1,
                "type..hash.github.com/robertkrimen/otto._number": 1,
                "type..eq.github.com/robertkrimen/otto._number": 1,
                "type..hash.[1]github.com/robertkrimen/otto.Value": 1,
                "type..eq.[1]github.com/robertkrimen/otto.Value": 1,
                "type..hash.github.com/robertkrimen/otto._result": 1,
                "type..eq.github.com/robertkrimen/otto._result": 1,
                "type..hash.[6]interface {}": 1,
                "type..eq.[6]interface {}": 1,
                "type..hash.github.com/robertkrimen/otto._nodeFunctionObject": 1,
                "type..eq.github.com/robertkrimen/otto._nodeFunctionObject": 1,
                "type..hash.github.com/robertkrimen/otto._goArrayObject": 1,
                "type..eq.github.com/robertkrimen/otto._goArrayObject": 1,
                "type..hash.github.com/robertkrimen/otto._nodeBranchStatement": 1,
                "type..eq.github.com/robertkrimen/otto._nodeBranchStatement": 1,
                "type..hash.github.com/robertkrimen/otto._nodeIdentifier": 1,
                "type..eq.github.com/robertkrimen/otto._nodeIdentifier": 1,
                "type..hash.github.com/robertkrimen/otto._nodeLabelledStatement": 1,
                "type..eq.github.com/robertkrimen/otto._nodeLabelledStatement": 1,
                "type..hash.github.com/robertkrimen/otto._nodeLiteral": 1,
                "type..eq.github.com/robertkrimen/otto._nodeLiteral": 1,
                "type..hash.github.com/robertkrimen/otto._nodeRegExpLiteral": 1,
                "type..eq.github.com/robertkrimen/otto._nodeRegExpLiteral": 1,
                "type..hash.github.com/robertkrimen/otto._propertyReference": 1,
                "type..eq.github.com/robertkrimen/otto._propertyReference": 1,
                "type..hash.github.com/robertkrimen/otto._stashReference": 1,
                "type..eq.github.com/robertkrimen/otto._stashReference": 1,
                "github.com/robertkrimen/otto.(*_stringASCII).At": 1,
                "github.com/robertkrimen/otto.(*_stringASCII).Length": 1,
                "github.com/robertkrimen/otto.(*_stringASCII).String": 1,
                "type..hash.[10]string": 1,
                "type..eq.[10]string": 1,
                "type..hash.[15]string": 1,
                "type..eq.[15]string": 1,
                "type..hash.[23]string": 1,
                "type..eq.[23]string": 1,
                "type..hash.[26]string": 1,
                "type..eq.[26]string": 1,
                "type..hash.[31]string": 1,
                "type..eq.[31]string": 1,
                "type..hash.[46]string": 1,
                "type..eq.[46]string": 1,
                "type..hash.[2]github.com/robertkrimen/otto.Value": 1,
                "type..eq.[2]github.com/robertkrimen/otto.Value": 1,
                "type..hash.struct { github.com/robertkrimen/otto.name string": 1,
                "github.com/robertkrimen/otto.exists bool": 2,
                "github.com/robertkrimen/otto.defined bool": 2,
                "github.com/robertkrimen/otto.value string }": 2,
                "type..eq.struct { github.com/robertkrimen/otto.name string": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Print": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Printf": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Println": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Debug": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Debugf": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Debugln": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Info": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Infof": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Infoln": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Warn": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Warnf": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Warnln": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Error": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Errorf": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Errorln": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Fatal": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Fatalf": 1,
                "github.com/gen0cide/gscript/logger/null.(*Logger).Fatalln": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).retrieveAssetAsString": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).retrieveAssetAsBytes": 1,
                "github.com/gen0cide/gscript/engine.New": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).InitVM": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).SetLogger": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).DeclareNamespace": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).ImportNativePackage": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).ImportStandardLibrary": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).SetConst": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).SetTimeout": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).AddImport": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).SetName": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).SetID": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).LoadScript": 1,
                "github.com/robertkrimen/otto/parser.ParseFile": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).Exec": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).setGlobalRef": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).EnableAssets": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).Raise": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).SetEntryPoint": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).LoadScriptWithTimeout": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).CallFunctionWithTimeout": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).recoveryHandler": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).timeoutMonitor": 1,
                "github.com/gen0cide/gscript/engine.normalizeConsoleArgs": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory": 1,
                "github.com/gen0cide/gscript/engine.HijackConsoleLogging": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).createType": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).timeoutMonitor.func1": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory.func1": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory.func2": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory.func3": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory.func4": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory.func5": 1,
                "github.com/gen0cide/gscript/engine.logFuncFactory.func6": 1,
                "github.com/gen0cide/gscript/engine.init.ializers": 1,
                "github.com/gen0cide/gscript/engine.init": 1,
                "type..hash.github.com/gen0cide/gscript/engine.NativeField": 1,
                "type..eq.github.com/gen0cide/gscript/engine.NativeField": 1,
                "type..hash.github.com/gen0cide/gscript/engine.NativeConst": 1,
                "type..eq.github.com/gen0cide/gscript/engine.NativeConst": 1,
                "type..hash.github.com/gen0cide/gscript/engine.NativeVar": 1,
                "type..eq.github.com/gen0cide/gscript/engine.NativeVar": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).createType-fm": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).retrieveAssetAsString-fm": 1,
                "github.com/gen0cide/gscript/engine.(*Engine).retrieveAssetAsBytes-fm": 1,
                "github.com/gen0cide/gscript/stdlib/os.TerminateSelf": 1,
                "os.Getpid": 1,
                "syscall.Getpid": 1,
                "os.FindProcess": 1,
                "github.com/gen0cide/gscript/stdlib/os.init": 1,
                "_cgo_panic": 1,
                "crosscall2": 1,
                "go-memorymodule.MemoryRunBinary": 1,
                "go-memorymodule._Cfunc_CString": 1,
                "go-memorymodule._Cfunc_MemoryCallEntryPoint": 1,
                "go-memorymodule._Cfunc_MemoryLoadLibraryEx": 1,
                "go-memorymodule._cgo_cmalloc": 1,
                "go-memorymodule.memoryRunBinary": 1,
                "go-memorymodule.memoryRunBinary.func1": 1,
                "go-memorymodule.memoryRunBinary.func2": 1,
                "go-memorymodule.init": 1,
                "os/user.Current": 1,
                "os/user.(*User).GroupIds": 1,
                "os/user.isDomainJoined": 1,
                "os/user.lookupFullNameServer": 1,
                "os/user.lookupFullName": 1,
                "os/user.lookupFullNameDomain": 1,
                "os/user.lookupUsernameAndDomain": 1,
                "os/user.lookupGroupName": 1,
                "os/user.listGroupsForUsernameAndDomain": 1,
                "os/user.newUser": 1,
                "os/user.current": 1,
                "os/user.listGroups": 1,
                "os/user.Current.func1": 1,
                "os/user.init": 1,
                "type..hash.os/user.Group": 1,
                "type..eq.os/user.Group": 1,
                "type..hash.os/user.User": 1,
                "type..eq.os/user.User": 1,
                "type..hash.struct { sync.Once": 1,
                "os/user.u *os/user.User": 3,
                "os/user.err error }": 2,
                "type..eq.struct { sync.Once": 1,
                "go.(*struct { sync.Once": 1,
                "os/user.err error }).Do": 1,
                "main.(*MDWSFYNZNNMXJN).ZAZLURQCPWDN": 1,
                "main.(*MDWSFYNZNNMXJN).JQTYPQHTTDDV": 1,
                "main.(*MDWSFYNZNNMXJN).OMEGAKINUAAC": 1,
                "main.(*MDWSFYNZNNMXJN).ZKOVEHOPHPQI": 1,
                "main.(*MDWSFYNZNNMXJN).KIBUOIZXAGSF": 1,
                "main.(*MDWSFYNZNNMXJN).CPMOPLTETPBZ": 1,
                "main.MDWSFYNZNNMXJND": 1,
                "bytes.NewReader": 1,
                "encoding/base64.NewDecoder": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNzkxhdlxuppzvjcbb": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNuoswgsghhncghlat": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNpuvpvgxibhbwpgud": 1,
                "runtime.NumCPU": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNQVAOJQYSXLSTF": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNOORZMQUBRDPNI": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNLNUKLRENITROG": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNEEPPLOZDYKCCO": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNPSYHDEFDZTDQA": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNQXMHUWNCQPNEO": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNVRHACEWIOVSXS": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNWWAWSHZULFGWS": 1,
                "main.(*PUHPXOLPIEVQQD).BGNCMWOQVRMB": 1,
                "main.(*PUHPXOLPIEVQQD).NFICSQEJTKAG": 1,
                "main.(*PUHPXOLPIEVQQD).DVUXRUMKXMEK": 1,
                "main.(*PUHPXOLPIEVQQD).AGXVINEYHTFX": 1,
                "main.(*PUHPXOLPIEVQQD).HGREUMTOFZEH": 1,
                "main.(*PUHPXOLPIEVQQD).EFEQGYKSQTKJ": 1,
                "main.PUHPXOLPIEVQQDD": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDxngjsmvxvwogrsrs": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDdsnwletsdroskjad": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDpnxtuiqflgtdohgv": 1,
                "os.Hostname": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDEKMFFIRIUXQPX": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDUUZOIGZHYINTL": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDWFYMDLROICZIY": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDEIARDEIRSTEDR": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDYNWFRVRBTYPGG": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDGXUTSHLXFJPVY": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDDTGPMTBWUVVPB": 1,
                "main.(*TCZDEDUUYIATUK).QZYRBDXWNFPI": 1,
                "main.(*TCZDEDUUYIATUK).HLWWNWTCDHAB": 1,
                "main.(*TCZDEDUUYIATUK).NJVOTXMCJRSH": 1,
                "main.(*TCZDEDUUYIATUK).TQQEOUBVDVRY": 1,
                "main.(*TCZDEDUUYIATUK).ZKTHRNUAFEHK": 1,
                "main.(*TCZDEDUUYIATUK).ZJWAFSLKFQVF": 1,
                "main.TCZDEDUUYIATUKD": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKuownfydiwwwygmoc": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKCJMFKYQCLGFAI": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKHDUGZAAUOGSUV": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKZQHILBKOHZOII": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKUFOQSKPHIFFPB": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKAFOAGIWSPBCCX": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKBFEPIXYNNRVDN": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKNCDUXUPVEXCOY": 1,
                "main.(*XXIKHRPRUWKJZF).RSJNGSYGMEYC": 1,
                "main.(*XXIKHRPRUWKJZF).JUNUYUVTWQVG": 1,
                "main.(*XXIKHRPRUWKJZF).UYIWYJQXWEDW": 1,
                "main.(*XXIKHRPRUWKJZF).RGQCQFLWDBLS": 1,
                "main.(*XXIKHRPRUWKJZF).HTRFTTODOGQZ": 1,
                "main.(*XXIKHRPRUWKJZF).XNAZLWRGZURQ": 1,
                "main.XXIKHRPRUWKJZFD": 1,
                "main.(*XXIKHRPRUWKJZF).XXIKHRPRUWKJZFszduzowdpvztpagw": 1,
                "main.(*XXIKHRPRUWKJZF).XXIKHRPRUWKJZFcjjlakgmzskllqzj": 1,
                "main.(*XXIKHRPRUWKJZF).XXIKHRPRUWKJZFokjuqhscbxexnken": 1,
                "main.(*XXIKHRPRUWKJZF).XXIKHRPRUWKJZFPPNEQHCHQYBIF": 1,
                "main.(*XXIKHRPRUWKJZF).XXIKHRPRUWKJZFIDMXSRIPGLCIC": 1,
                "main.main": 1,
                "main.(*MDWSFYNZNNMXJN).ZAZLURQCPWDN.func1": 1,
                "main.(*MDWSFYNZNNMXJN).ZAZLURQCPWDN.func2": 1,
                "main.(*PUHPXOLPIEVQQD).BGNCMWOQVRMB.func1": 1,
                "main.(*PUHPXOLPIEVQQD).BGNCMWOQVRMB.func2": 1,
                "main.(*TCZDEDUUYIATUK).QZYRBDXWNFPI.func1": 1,
                "main.(*TCZDEDUUYIATUK).QZYRBDXWNFPI.func2": 1,
                "main.(*TCZDEDUUYIATUK).QZYRBDXWNFPI.func3": 1,
                "main.(*XXIKHRPRUWKJZF).RSJNGSYGMEYC.func1": 1,
                "main.(*XXIKHRPRUWKJZF).RSJNGSYGMEYC.func2": 1,
                "main.main.func1": 1,
                "main.main.func2.1": 1,
                "main.main.func2": 1,
                "main.NewPUHPXOLPIEVQQD": 1,
                "main.main.func3.1": 1,
                "main.main.func3": 1,
                "main.NewXXIKHRPRUWKJZF": 1,
                "main.main.func4.1": 1,
                "main.main.func4": 1,
                "main.NewMDWSFYNZNNMXJN": 1,
                "main.main.func5.1": 1,
                "main.main.func5": 1,
                "main.NewTCZDEDUUYIATUK": 1,
                "main.init": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNpuvpvgxibhbwpgud-fm": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNQVAOJQYSXLSTF-fm": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNOORZMQUBRDPNI-fm": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNLNUKLRENITROG-fm": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNEEPPLOZDYKCCO-fm": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNPSYHDEFDZTDQA-fm": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNQXMHUWNCQPNEO-fm": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNVRHACEWIOVSXS-fm": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNWWAWSHZULFGWS-fm": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNzkxhdlxuppzvjcbb-fm": 1,
                "main.(*MDWSFYNZNNMXJN).MDWSFYNZNNMXJNuoswgsghhncghlat-fm": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDpnxtuiqflgtdohgv-fm": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDEKMFFIRIUXQPX-fm": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDUUZOIGZHYINTL-fm": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDWFYMDLROICZIY-fm": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDEIARDEIRSTEDR-fm": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDYNWFRVRBTYPGG-fm": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDGXUTSHLXFJPVY-fm": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDDTGPMTBWUVVPB-fm": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDxngjsmvxvwogrsrs-fm": 1,
                "main.(*PUHPXOLPIEVQQD).PUHPXOLPIEVQQDdsnwletsdroskjad-fm": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKuownfydiwwwygmoc-fm": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKCJMFKYQCLGFAI-fm": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKHDUGZAAUOGSUV-fm": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKZQHILBKOHZOII-fm": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKUFOQSKPHIFFPB-fm": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKAFOAGIWSPBCCX-fm": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKBFEPIXYNNRVDN-fm": 1,
                "main.(*TCZDEDUUYIATUK).TCZDEDUUYIATUKNCDUXUPVEXCOY-fm": 1,
                "main.(*XXIKHRPRUWKJZF).XXIKHRPRUWKJZFokjuqhscbxexnken-fm": 1,
                "main.(*XXIKHRPRUWKJZF).XXIKHRPRUWKJZFPPNEQHCHQYBIF-fm": 1,
                "main.(*XXIKHRPRUWKJZF).XXIKHRPRUWKJZFIDMXSRIPGLCIC-fm": 1,
                "main.(*XXIKHRPRUWKJZF).XXIKHRPRUWKJZFszduzowdpvztpagw-fm": 1,
                "main.(*XXIKHRPRUWKJZF).XXIKHRPRUWKJZFcjjlakgmzskllqzj-fm": 1,
                "/tmp/OsRMn2kVWyxoS9O6/main.go": 1,
                "/tmp/OsRMn2kVWyxoS9O6/XXIKHRPRUWKJZF.go": 1,
                "/tmp/OsRMn2kVWyxoS9O6/TCZDEDUUYIATUK.go": 1,
                "/opt/go/src/os/sys.go": 1,
                "/tmp/OsRMn2kVWyxoS9O6/PUHPXOLPIEVQQD.go": 1,
                "/tmp/OsRMn2kVWyxoS9O6/MDWSFYNZNNMXJN.go": 1,
                "/opt/go/src/os/user/lookup_windows.go": 1,
                "/opt/go/src/os/user/lookup.go": 1,
                "/root/go/src/go-memorymodule/memorymodule_windows.go": 1,
                "_cgo_gotypes.go": 1,
                "/root/go/src/go-memorymodule/memorymodule.go": 1,
                "/opt/go/src/runtime/cgo/asm_amd64.s": 1,
                "/opt/go/src/runtime/cgo/callbacks.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/stdlib/os/os.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/engine/native_package.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/engine/logger.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/engine/executor.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/engine/errors.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/engine/engine.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/engine/assets.go": 1,
                "/root/go/src/github.com/gen0cide/gscript/logger/null/null_logger.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/dbg.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/value_string.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/value_primitive.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/value_number.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/value_boolean.go": 1,
                "/opt/go/src/strconv/atob.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_number.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_go_struct.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_go_map.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_go_array.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_error.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_boolean.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_arguments.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/script.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_go_slice.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/otto.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/object_class.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/evaluate.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/console.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/cmpl.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/cmpl_parse.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/result.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/cmpl_evaluate_statement.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_reference.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/cmpl_evaluate_expression.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/cmpl_evaluate.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/stash.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/clone.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_regexp.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_string.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_string.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_regexp.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/property.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_object.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_number.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_math.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_json.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_function.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_error.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_date.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_date.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_boolean.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_array.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/object.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/global.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin_array.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/error.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/inline.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/scope.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/runtime.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/value.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/otto_.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/type_function.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/builtin.go": 1,
                "/opt/go/src/encoding/gob/encoder.go": 1,
                "/opt/go/src/encoding/gob/encode.go": 1,
                "/opt/go/src/encoding/gob/enc_helpers.go": 1,
                "/opt/go/src/encoding/gob/decoder.go": 1,
                "/opt/go/src/encoding/gob/type.go": 1,
                "/opt/go/src/encoding/gob/error.go": 1,
                "/opt/go/src/encoding/gob/decode.go": 1,
                "/opt/go/src/encoding/gob/dec_helpers.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/registry/registry.go": 1,
                "/opt/go/src/math/rand/rng.go": 1,
                "/opt/go/src/math/rand/normal.go": 1,
                "/opt/go/src/math/rand/rand.go": 1,
                "/opt/go/src/math/rand/exp.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/dbg.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/statement.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/regexp.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/lexer.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/scope.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/expression.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/parser.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/parser/error.go": 1,
                "/opt/go/src/io/ioutil/ioutil.go": 1,
                "/opt/go/src/path/filepath/symlink_windows.go": 1,
                "/opt/go/src/path/filepath/path.go": 1,
                "/opt/go/src/path/filepath/match.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/ast/node.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/ast/comments.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/token/token_const.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/token/token.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/file/file.go": 1,
                "/root/go/src/gopkg.in/sourcemap.v1/sourcemap.go": 1,
                "/root/go/src/gopkg.in/sourcemap.v1/consumer.go": 1,
                "/root/go/src/gopkg.in/sourcemap.v1/base64vlq/base64_vlq.go": 1,
                "/opt/go/src/path/match.go": 1,
                "/opt/go/src/path/path.go": 1,
                "/opt/go/src/encoding/json/tags.go": 1,
                "/opt/go/src/encoding/json/indent.go": 1,
                "/opt/go/src/encoding/json/fold.go": 1,
                "/opt/go/src/encoding/json/encode.go": 1,
                "/opt/go/src/encoding/json/scanner.go": 1,
                "/opt/go/src/encoding/json/decode.go": 1,
                "/root/go/src/github.com/robertkrimen/otto/dbg/dbg.go": 1,
                "/opt/go/src/log/log.go": 1,
                "/opt/go/src/unicode/digit.go": 1,
                "/opt/go/src/regexp/regexp.go": 1,
                "/opt/go/src/regexp/onepass.go": 1,
                "/opt/go/src/regexp/exec.go": 1,
                "/opt/go/src/regexp/backtrack.go": 1,
                "/opt/go/src/regexp/syntax/perl_groups.go": 1,
                "/opt/go/src/regexp/syntax/simplify.go": 1,
                "/opt/go/src/regexp/syntax/regexp.go": 1,
                "/opt/go/src/regexp/syntax/prog.go": 1,
                "/opt/go/src/regexp/syntax/parse.go": 1,
                "/opt/go/src/regexp/syntax/op_string.go": 1,
                "/opt/go/src/regexp/syntax/compile.go": 1,
                "/opt/go/src/net/url/url.go": 1,
                "/opt/go/src/encoding/hex/hex.go": 1,
                "/opt/go/src/strings/strings.go": 1,
                "/opt/go/src/strings/reader.go": 1,
                "/opt/go/src/strings/builder.go": 1,
                "/opt/go/src/encoding/base64/base64.go": 1,
                "/opt/go/src/crypto/aes/gcm_amd64.s": 1,
                "/opt/go/src/crypto/aes/asm_amd64.s": 1,
                "/opt/go/src/crypto/aes/cipher_asm.go": 1,
                "/opt/go/src/crypto/aes/cipher.go": 1,
                "/opt/go/src/crypto/aes/block.go": 1,
                "/opt/go/src/crypto/aes/aes_gcm.go": 1,
                "/opt/go/src/crypto/cipher/xor_amd64.s": 1,
                "/opt/go/src/crypto/cipher/gcm.go": 1,
                "/opt/go/src/crypto/cipher/xor_amd64.go": 1,
                "/opt/go/src/crypto/internal/subtle/aliasing.go": 1,
                "/opt/go/src/crypto/cipher/ofb.go": 1,
                "/opt/go/src/crypto/cipher/io.go": 1,
                "/opt/go/src/crypto/subtle/constant_time.go": 1,
                "/opt/go/src/encoding/binary/binary.go": 1,
                "/opt/go/src/compress/gzip/gunzip.go": 1,
                "/opt/go/src/hash/crc32/crc32_amd64.s": 1,
                "/opt/go/src/hash/crc32/crc32_generic.go": 1,
                "/opt/go/src/hash/crc32/crc32_amd64.go": 1,
                "/opt/go/src/hash/crc32/crc32.go": 1,
                "/opt/go/src/encoding/binary/varint.go": 1,
                "/opt/go/src/compress/flate/inflate.go": 1,
                "/opt/go/src/compress/flate/huffman_code.go": 1,
                "/opt/go/src/compress/flate/huffman_bit_writer.go": 1,
                "/opt/go/src/compress/flate/dict_decoder.go": 1,
                "/opt/go/src/fmt/scan.go": 1,
                "/opt/go/src/fmt/print.go": 1,
                "/opt/go/src/fmt/format.go": 1,
                "/opt/go/src/os/sys_windows.go": 1,
                "/opt/go/src/os/str.go": 1,
                "/opt/go/src/os/stat_windows.go": 1,
                "/opt/go/src/os/stat.go": 1,
                "/opt/go/src/os/proc.go": 1,
                "/opt/go/src/os/path_windows.go": 1,
                "/opt/go/src/os/types.go": 1,
                "/opt/go/src/os/rawconn.go": 1,
                "/opt/go/src/os/file_posix.go": 1,
                "/opt/go/src/os/file.go": 1,
                "/opt/go/src/os/executable_windows.go": 1,
                "/opt/go/src/os/executable.go": 1,
                "/opt/go/src/os/exec_windows.go": 1,
                "/opt/go/src/os/exec_posix.go": 1,
                "/opt/go/src/os/exec.go": 1,
                "/opt/go/src/os/error.go": 1,
                "/opt/go/src/os/types_windows.go": 1,
                "/opt/go/src/os/file_windows.go": 1,
                "/opt/go/src/os/dir_windows.go": 1,
                "/opt/go/src/os/dir.go": 1,
                "/opt/go/src/internal/poll/sockoptip.go": 1,
                "/opt/go/src/internal/poll/sockopt_windows.go": 1,
                "/opt/go/src/internal/poll/sockopt.go": 1,
                "/opt/go/src/internal/poll/fd_windows.go": 1,
                "/opt/go/src/internal/poll/fd_posix.go": 1,
                "/opt/go/src/internal/poll/fd_poll_runtime.go": 1,
                "/opt/go/src/internal/poll/fd_mutex.go": 1,
                "/opt/go/src/internal/poll/fd_fsync_windows.go": 1,
                "/opt/go/src/internal/poll/fd.go": 1,
                "/opt/go/src/internal/syscall/windows/zsyscall_windows.go": 1,
                "/opt/go/src/internal/syscall/windows/syscall_windows.go": 1,
                "/opt/go/src/time/zoneinfo_read.go": 1,
                "/opt/go/src/time/zoneinfo_abbrs_windows.go": 1,
                "/opt/go/src/internal/syscall/windows/registry/syscall.go": 1,
                "/opt/go/src/time/zoneinfo_windows.go": 1,
                "/opt/go/src/time/zoneinfo.go": 1,
                "/opt/go/src/time/time.go": 1,
                "/opt/go/src/time/format.go": 1,
                "/opt/go/src/internal/syscall/windows/registry/zsyscall_windows.go": 1,
                "/opt/go/src/internal/syscall/windows/registry/value.go": 1,
                "/opt/go/src/internal/syscall/windows/registry/key.go": 1,
                "/opt/go/src/internal/testlog/log.go": 1,
                "/opt/go/src/syscall/types_windows.go": 1,
                "/opt/go/src/syscall/zsyscall_windows.go": 1,
                "/opt/go/src/syscall/str.go": 1,
                "/opt/go/src/syscall/security_windows.go": 1,
                "/opt/go/src/syscall/exec_windows.go": 1,
                "/opt/go/src/syscall/syscall.go": 1,
                "/opt/go/src/syscall/syscall_windows.go": 1,
                "/opt/go/src/syscall/dll_windows.go": 1,
                "/opt/go/src/unicode/utf16/utf16.go": 1,
                "/opt/go/src/internal/syscall/windows/sysdll/sysdll.go": 1,
                "/opt/go/src/internal/fmtsort/sort.go": 1,
                "/opt/go/src/sort/zfuncversion.go": 1,
                "/opt/go/src/sort/sort.go": 1,
                "/opt/go/src/sort/slice.go": 1,
                "/opt/go/src/sort/search.go": 1,
                "/opt/go/src/reflect/asm_amd64.s": 1,
                "/opt/go/src/reflect/value.go": 1,
                "/opt/go/src/reflect/swapper.go": 1,
                "/opt/go/src/reflect/type.go": 1,
                "/opt/go/src/reflect/makefunc.go": 1,
                "/opt/go/src/strconv/ftoa.go": 1,
                "/opt/go/src/strconv/extfloat.go": 1,
                "/opt/go/src/strconv/decimal.go": 1,
                "/opt/go/src/strconv/itoa.go": 1,
                "/opt/go/src/strconv/quote.go": 1,
                "/opt/go/src/strconv/atoi.go": 1,
                "/opt/go/src/strconv/atof.go": 1,
                "/opt/go/src/math/tan_amd64.s": 1,
                "/opt/go/src/math/sin_amd64.s": 1,
                "/opt/go/src/math/pow_stub.s": 1,
                "/opt/go/src/math/modf_amd64.s": 1,
                "/opt/go/src/math/mod_amd64.s": 1,
                "/opt/go/src/math/log_amd64.s": 1,
                "/opt/go/src/math/log10_amd64.s": 1,
                "/opt/go/src/math/ldexp_amd64.s": 1,
                "/opt/go/src/math/frexp_amd64.s": 1,
                "/opt/go/src/math/floor_amd64.s": 1,
                "/opt/go/src/math/exp_amd64.s": 1,
                "/opt/go/src/math/dim_amd64.s": 1,
                "/opt/go/src/math/atan_amd64.s": 1,
                "/opt/go/src/math/atan2_amd64.s": 1,
                "/opt/go/src/math/asin_amd64.s": 1,
                "/opt/go/src/math/exp_asm.go": 1,
                "/opt/go/src/math/bits/bits.go": 1,
                "/opt/go/src/math/trig_reduce.go": 1,
                "/opt/go/src/math/tan.go": 1,
                "/opt/go/src/math/sin.go": 1,
                "/opt/go/src/math/pow.go": 1,
                "/opt/go/src/math/modf.go": 1,
                "/opt/go/src/math/mod.go": 1,
                "/opt/go/src/math/log10.go": 1,
                "/opt/go/src/math/ldexp.go": 1,
                "/opt/go/src/math/unsafe.go": 1,
                "/opt/go/src/math/abs.go": 1,
                "/opt/go/src/math/frexp.go": 1,
                "/opt/go/src/math/copysign.go": 1,
                "/opt/go/src/math/signbit.go": 1,
                "/opt/go/src/math/atan2.go": 1,
                "/opt/go/src/math/atan.go": 1,
                "/opt/go/src/math/bits.go": 1,
                "/opt/go/src/math/asin.go": 1,
                "/opt/go/src/bufio/scan.go": 1,
                "/opt/go/src/bufio/bufio.go": 1,
                "/opt/go/src/bytes/reader.go": 1,
                "/opt/go/src/bytes/bytes.go": 1,
                "/opt/go/src/bytes/buffer.go": 1,
                "/opt/go/src/unicode/tables.go": 1,
                "/opt/go/src/unicode/letter.go": 1,
                "/opt/go/src/unicode/graphic.go": 1,
                "/opt/go/src/unicode/utf8/utf8.go": 1,
                "/opt/go/src/io/pipe.go": 1,
                "/opt/go/src/io/io.go": 1,
                "/opt/go/src/sync/waitgroup.go": 1,
                "/opt/go/src/sync/rwmutex.go": 1,
                "/opt/go/src/sync/runtime.go": 1,
                "/opt/go/src/sync/pool.go": 1,
                "/opt/go/src/sync/once.go": 1,
                "/opt/go/src/sync/mutex.go": 1,
                "/opt/go/src/sync/map.go": 1,
                "/opt/go/src/sync/cond.go": 1,
                "/opt/go/src/errors/errors.go": 1,
                "/opt/go/src/runtime/sys_windows_amd64.s": 1,
                "/opt/go/src/runtime/memmove_amd64.s": 1,
                "/opt/go/src/runtime/memclr_amd64.s": 1,
                "/opt/go/src/runtime/duff_amd64.s": 1,
                "/opt/go/src/runtime/asm_amd64.s": 1,
                "/opt/go/src/runtime/asm.s": 1,
                "/opt/go/src/runtime/select.go": 1,
                "/opt/go/src/runtime/write_err.go": 1,
                "/opt/go/src/runtime/utf8.go": 1,
                "/opt/go/src/runtime/time.go": 1,
                "/opt/go/src/runtime/syscall_windows.go": 1,
                "/opt/go/src/runtime/internal/sys/intrinsics.go": 1,
                "/opt/go/src/runtime/slice.go": 1,
                "/opt/go/src/runtime/sigqueue.go": 1,
                "/opt/go/src/runtime/signal_windows.go": 1,
                "/opt/go/src/runtime/rwmutex.go": 1,
                "/opt/go/src/runtime/runtime.go": 1,
                "/opt/go/src/runtime/stack.go": 1,
                "/opt/go/src/runtime/sys_x86.go": 1,
                "/opt/go/src/runtime/traceback.go": 1,
                "/opt/go/src/runtime/print.go": 1,
                "/opt/go/src/runtime/panic.go": 1,
                "/opt/go/src/runtime/netpoll_windows.go": 1,
                "/opt/go/src/runtime/netpoll.go": 1,
                "/opt/go/src/runtime/mstats.go": 1,
                "/opt/go/src/runtime/mprof.go": 1,
                "/opt/go/src/runtime/mgcstack.go": 1,
                "/opt/go/src/runtime/mgcsweepbuf.go": 1,
                "/opt/go/src/runtime/mgcmark.go": 1,
                "/opt/go/src/runtime/mgclarge.go": 1,
                "/opt/go/src/runtime/sema.go": 1,
                "/opt/go/src/runtime/mgcsweep.go": 1,
                "/opt/go/src/runtime/mgcwork.go": 1,
                "/opt/go/src/runtime/mfinal.go": 1,
                "/opt/go/src/runtime/mem_windows.go": 1,
                "/opt/go/src/runtime/trace.go": 1,
                "/opt/go/src/runtime/mcentral.go": 1,
                "/opt/go/src/runtime/mcache.go": 1,
                "/opt/go/src/runtime/mbarrier.go": 1,
                "/opt/go/src/runtime/map_faststr.go": 1,
                "/opt/go/src/runtime/map_fast64.go": 1,
                "/opt/go/src/runtime/map_fast32.go": 1,
                "/opt/go/src/runtime/msize.go": 1,
                "/opt/go/src/runtime/map.go": 1,
                "/opt/go/src/runtime/fastlog2.go": 1,
                "/opt/go/src/runtime/mgc.go": 1,
                "/opt/go/src/runtime/mfixalloc.go": 1,
                "/opt/go/src/runtime/malloc.go": 1,
                "/opt/go/src/runtime/lock_sema.go": 1,
                "/opt/go/src/runtime/lfstack_64bit.go": 1,
                "/opt/go/src/runtime/lfstack.go": 1,
                "/opt/go/src/runtime/iface.go": 1,
                "/opt/go/src/runtime/unaligned1.go": 1,
                "/opt/go/src/runtime/hash64.go": 1,
                "/opt/go/src/runtime/float.go": 1,
                "/opt/go/src/runtime/extern.go": 1,
                "/opt/go/src/runtime/error.go": 1,
                "/opt/go/src/runtime/env_posix.go": 1,
                "/opt/go/src/runtime/defs_windows_amd64.go": 1,
                "/opt/go/src/runtime/debugcall.go": 1,
                "/opt/go/src/runtime/debug.go": 1,
                "/opt/go/src/runtime/cpuflags_amd64.go": 1,
                "/opt/go/src/runtime/chan.go": 1,
                "/opt/go/src/runtime/cgocheck.go": 1,
                "/opt/go/src/runtime/string.go": 1,
                "/opt/go/src/runtime/cgocallback.go": 1,
                "/opt/go/src/runtime/mbitmap.go": 1,
                "/opt/go/src/runtime/symtab.go": 1,
                "/opt/go/src/runtime/type.go": 1,
                "/opt/go/src/runtime/mheap.go": 1,
                "/opt/go/src/runtime/runtime1.go": 1,
                "/opt/go/src/runtime/os_windows.go": 1,
                "/opt/go/src/runtime/runtime2.go": 1,
                "/opt/go/src/runtime/proc.go": 1,
                "/opt/go/src/runtime/cgocall.go": 1,
                "/opt/go/src/runtime/cgo.go": 1,
                "/opt/go/src/runtime/mwbbuf.go": 1,
                "/opt/go/src/runtime/atomic_pointer.go": 1,
                "/opt/go/src/runtime/typekind.go": 1,
                "/opt/go/src/runtime/stubs.go": 1,
                "/opt/go/src/runtime/alg.go": 1,
                "/opt/go/src/internal/bytealg/indexbyte_amd64.s": 1,
                "/opt/go/src/internal/bytealg/index_amd64.s": 1,
                "/opt/go/src/internal/bytealg/equal_amd64.s": 1,
                "/opt/go/src/internal/bytealg/count_amd64.s": 1,
                "/opt/go/src/internal/bytealg/compare_amd64.s": 1,
                "/opt/go/src/internal/bytealg/index_amd64.go": 1,
                "/opt/go/src/internal/bytealg/count_native.go": 1,
                "/opt/go/src/runtime/internal/atomic/asm_amd64.s": 1,
                "<autogenerated>": 1,
                "/opt/go/src/internal/cpu/cpu_x86.s": 1,
                "/opt/go/src/internal/cpu/cpu_x86.go": 1,
                "/opt/go/src/internal/cpu/cpu.go": 1,
                "/opt/go/src/sync/atomic/asm.s": 1,
                "/opt/go/src/sync/atomic/value.go": 1,
                "runtime: failed to create runtime initialization wait event.": 1,
                "runtime: failed to create new OS thread (%d)": 2,
                "runtime: failed to signal runtime initialization complete.": 1,
                "runtime/cgo: out of memory in thread_start": 1,
                "Error protecting memory page": 1,
                "Unknown error": 1,
                "Argument domain error (DOMAIN)": 1,
                "Overflow range error (OVERFLOW)": 1,
                "Partial loss of significance (PLOSS)": 1,
                "Total loss of significance (TLOSS)": 1,
                "The result is too small to be represented (UNDERFLOW)": 1,
                "Argument singularity (SIGN)": 1,
                "_matherr(): %s in %s(%g, %g)  (retval=%g)": 1,
                "Mingw-w64 runtime failure:": 1,
                "Address %p has no image-section": 1,
                "VirtualQuery failed for %d bytes at address %p": 1,
                "VirtualProtect failed with code 0x%x": 1,
                "Unknown pseudo relocation protocol version %d.": 1,
                "Unknown pseudo relocation bit size %d.": 1,
                ".pdata": 1,
                "GCC: (GNU) 9.1.0": 36,
                "GCC: (GNU) 7.3-win32 20180506": 1,
                "AddVectoredExceptionHandler": 1,
                "CloseHandle": 1,
                "CreateEventA": 1,
                "CreateIoCompletionPort": 1,
                "CreateThread": 1,
                "DeleteCriticalSection": 1,
                "DuplicateHandle": 1,
                "EnterCriticalSection": 1,
                "ExitProcess": 1,
                "FreeEnvironmentStringsW": 1,
                "FreeLibrary": 1,
                "GetConsoleMode": 1,
                "GetCurrentProcess": 1,
                "GetCurrentProcessId": 1,
                "GetCurrentThreadId": 1,
                "GetEnvironmentStringsW": 1,
                "GetLastError": 1,
                "GetNativeSystemInfo": 1,
                "GetProcAddress": 1,
                "GetProcessAffinityMask": 1,
                "GetProcessHeap": 1,
                "GetQueuedCompletionStatus": 1,
                "GetStartupInfoA": 1,
                "GetStdHandle": 1,
                "GetSystemDirectoryA": 1,
                "GetSystemInfo": 1,
                "GetSystemTimeAsFileTime": 1,
                "GetThreadLocale": 1,
                "GetTickCount": 1,
                "HeapFree": 1,
                "InitializeCriticalSection": 1,
                "IsBadReadPtr": 1,
                "LeaveCriticalSection": 1,
                "LoadLibraryA": 1,
                "LoadLibraryW": 1,
                "QueryPerformanceCounter": 1,
                "RtlAddFunctionTable": 1,
                "RtlCaptureContext": 1,
                "RtlLookupFunctionEntry": 1,
                "RtlVirtualUnwind": 1,
                "SetConsoleCtrlHandler": 1,
                "SetErrorMode": 1,
                "SetEvent": 1,
                "SetLastError": 1,
                "SetProcessPriorityBoost": 1,
                "SetUnhandledExceptionFilter": 1,
                "SetWaitableTimer": 1,
                "SwitchToThread": 1,
                "TerminateProcess": 1,
                "TlsGetValue": 1,
                "UnhandledExceptionFilter": 1,
                "VirtualAlloc": 1,
                "VirtualFree": 1,
                "VirtualProtect": 1,
                "VirtualQuery": 1,
                "WaitForSingleObject": 1,
                "WriteConsoleW": 1,
                "WriteFile": 1,
                "__C_specific_handler": 1,
                "lstrlenA": 1,
                "__getmainargs": 1,
                "__initenv": 1,
                "__iob_func": 1,
                "__lconv_init": 1,
                "__set_app_type": 1,
                "__setusermatherr": 1,
                "_acmdln": 1,
                "_amsg_exit": 1,
                "_beginthread": 1,
                "_cexit": 1,
                "_errno": 1,
                "_fmode": 1,
                "_initterm": 1,
                "_onexit": 1,
                "_wcsnicmp": 1,
                "bsearch": 1,
                "calloc": 1,
                "fprintf": 1,
                "fwrite": 1,
                "malloc": 1,
                "mbstowcs": 1,
                "memcpy": 1,
                "memset": 1,
                "realloc": 1,
                "strcmp": 1,
                "strlen": 1,
                "strncmp": 1,
                "strtol": 1,
                "vfprintf": 1,
                "wcstombs": 1,
                "KERNEL32.dll": 1,
                "msvcrt.dll": 1,
                "word: program": 10,
                "word: cannot": 20,
                "word: auatuwvsh": 1,
                "word: jocunm": 1,
                "word: skratz": 1,
                "word: mnuyeebepujsxm": 1,
                "word: xjebytifwgf": 1,
                "word: kernel": 2,
                "word: loadlibrh": 2,
                "word: raryexa": 1,
                "word: raryexw": 1,
                "word: advapi": 1,
                "word: systemfuh": 1,
                "word: ntwaitfoh": 1,
                "word: timeendph": 1,
                "word: dperiod": 1,
                "word: wsagetovh": 1,
                "word: getsysteh": 1,
                "word: queryperh": 1,
                "word: memprofih": 3,
                "word: memprofi": 2,
                "word: runtime": 2205,
                "word: callslicl": 1,
                "word: unixgramh": 1,
                "word: unixpackh": 1,
                "word: method": 31,
                "word: badindeh": 1,
                "word: missingh": 1,
                "word: noverm": 1,
                "word: extram": 1,
                "word: badprm": 1,
                "word: badprec": 1,
                "word: badwim": 1,
                "word: fatauca": 1,
                "word: trueuhh": 1,
                "word: falsui": 1,
                "word: arrauf": 1,
                "word: functionh": 7,
                "word: function": 21,
                "word: argumentm": 1,
                "word: argument": 21,
                "word: functionl": 1,
                "word: functionm": 1,
                "word: urierrorh": 1,
                "word: evalerroh": 1,
                "word: typeerroh": 1,
                "word: rangeerrh": 1,
                "word: syntaxerh": 1,
                "word: referench": 1,
                "word: falsum": 1,
                "word: atuwvsh": 4,
                "word: suatauavaw": 1,
                "word: uawavauatwvsh": 1,
                "word: atwvsh": 1,
                "word: atechgfca": 1,
                "word: myzfaqd": 1,
                "word: stdjdipkn": 1,
                "word: bptvfhklwfqc": 1,
                "word: zipuuzmquascuxkb": 1,
                "word: dcppwhli": 1,
                "word: eykahzglvbgubj": 1,
                "word: gvxyuo": 1,
                "word: vedhkwf": 1,
                "word: vfhmwgxqepq": 1,
                "word: fspiodfdeiiudutlkhpjnxlvahlamhdidtt": 1,
                "word: gvszhrpidoyxxd": 1,
                "word: aidziivkhwcmbkcr": 1,
                "word: fwhvqhl": 1,
                "word: uqxuxropgnjhhctecm": 1,
                "word: callback": 2,
                "word: before": 11,
                "word: kuuuuu": 1,
                "word: huuuuu": 1,
                "word: jzkbku": 1,
                "word: aaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb": 1,
                "word: abcdefghijklmnopqrstuvwxyz": 3,
                "word: errors": 9,
                "word: regexp": 394,
                "word: accept": 2,
                "word: arrayt": 1,
                "word: assign": 3,
                "word: buffer": 46,
                "word: bysize": 1,
                "word: callee": 2,
                "word: canset": 3,
                "word: column": 1,
                "word: consts": 1,
                "word: cycles": 5,
                "word: debugf": 2,
                "word: decode": 15,
                "word: delete": 10,
                "word: enable": 3,
                "word: encode": 29,
                "word: errorf": 4,
                "word: execio": 2,
                "word: exited": 6,
                "word: expand": 9,
                "word: export": 6,
                "word: family": 3,
                "word: fatalf": 4,
                "word: fchdir": 2,
                "word: fchmod": 2,
                "word: fchown": 2,
                "word: fields": 4,
                "word: format": 8,
                "word: getenv": 1,
                "word: hevent": 2,
                "word: halted": 1,
                "word: handle": 15,
                "word: hasadx": 1,
                "word: hasaes": 1,
                "word: hasavx": 2,
                "word: hasfma": 1,
                "word: hassve": 1,
                "word: header": 3,
                "word: infoln": 2,
                "word: initvm": 2,
                "word: isnull": 3,
                "word: iszero": 5,
                "word: lastgc": 1,
                "word: layout": 3,
                "word: length": 43,
                "word: linger": 3,
                "word: logger": 67,
                "word: lookup": 8,
                "word: maxcap": 2,
                "word: member": 3,
                "word: minute": 4,
                "word: newgcm": 2,
                "word: nextgc": 1,
                "word: numcap": 2,
                "word: numout": 14,
                "word: number": 22,
                "word: object": 114,
                "word: offset": 12,
                "word: opaque": 2,
                "word: output": 5,
                "word: panicf": 3,
                "word: paused": 1,
                "word: prefix": 5,
                "word: printf": 4,
                "word: pwrite": 4,
                "word: readat": 6,
                "word: return": 10,
                "word: scheme": 1,
                "word: search": 6,
                "word: second": 5,
                "word: setcap": 3,
                "word: setint": 3,
                "word: setlen": 3,
                "word: setnan": 2,
                "word: signal": 24,
                "word: slicet": 1,
                "word: source": 11,
                "word: strict": 4,
                "word: stride": 1,
                "word: string": 403,
                "word: struct": 276,
                "word: switch": 10,
                "word: unlock": 14,
                "word: update": 4,
                "word: warnln": 2,
                "word: writer": 11,
                "word: writev": 3,
                "word: zoneid": 1,
                "word: active": 1,
                "word: addsec": 2,
                "word: allocs": 1,
                "word: append": 4,
                "word: arenas": 1,
                "word: arglen": 2,
                "word: argmap": 1,
                "word: attach": 1,
                "word: bitmap": 1,
                "word: branch": 2,
                "word: bucket": 65,
                "word: canput": 1,
                "word: chunks": 1,
                "word: cipher": 31,
                "word: closed": 6,
                "word: common": 13,
                "word: concat": 4,
                "word: cutoff": 1,
                "word: cutset": 2,
                "word: decref": 3,
                "word: digest": 1,
                "word: divmul": 1,
                "word: divmod": 1,
                "word: efence": 2,
                "word: eflags": 1,
                "word: elemop": 9,
                "word: endtop": 1,
                "word: etypes": 2,
                "word: exists": 5,
                "word: expect": 2,
                "word: factor": 2,
                "word: fmtsbx": 2,
                "word: frames": 4,
                "word: funcid": 2,
                "word: future": 2,
                "word: gcdata": 1,
                "word: gencol": 2,
                "word: getptr": 2,
                "word: global": 3,
                "word: gotime": 2,
                "word: helper": 4,
                "word: holder": 2,
                "word: inlist": 2,
                "word: incref": 3,
                "word: inputs": 7,
                "word: insert": 7,
                "word: intbuf": 1,
                "word: iscall": 2,
                "word: isdate": 1,
                "word: isfile": 1,
                "word: isfree": 2,
                "word: isdone": 1,
                "word: labels": 2,
                "word: lineno": 1,
                "word: locabs": 2,
                "word: mapped": 1,
                "word: mcache": 16,
                "word: mcount": 3,
                "word: misses": 1,
                "word: mustbe": 2,
                "word: native": 7,
                "word: nbytes": 1,
                "word: nchunk": 1,
                "word: needed": 6,
                "word: nelems": 4,
                "word: newval": 5,
                "word: nmidle": 2,
                "word: nocopy": 4,
                "word: noscan": 3,
                "word: npages": 4,
                "word: npidle": 1,
                "word: oldval": 7,
                "word: opcode": 1,
                "word: outbuf": 1,
                "word: palloc": 1,
                "word: parent": 2,
                "word: parked": 1,
                "word: pcfile": 1,
                "word: period": 1,
                "word: procid": 1,
                "word: ptrbit": 1,
                "word: putgen": 1,
                "word: putptr": 2,
                "word: qcount": 1,
                "word: quoted": 1,
                "word: random": 2,
                "word: reader": 80,
                "word: refill": 3,
                "word: remove": 3,
                "word: repeat": 6,
                "word: result": 25,
                "word: revise": 2,
                "word: rusage": 2,
                "word: rwlock": 2,
                "word: setloc": 2,
                "word: shared": 5,
                "word: sharpv": 1,
                "word: sparse": 1,
                "word: status": 16,
                "word: submit": 1,
                "word: taglen": 3,
                "word: target": 3,
                "word: thread": 16,
                "word: ticket": 1,
                "word: toread": 1,
                "word: tryget": 2,
                "word: tstart": 5,
                "word: unused": 2,
                "word: values": 14,
                "word: varint": 4,
                "word: vdsopc": 1,
                "word: vdsosp": 1,
                "word: wanted": 4,
                "word: xcount": 1,
                "word: reflect": 883,
                "word: strconv": 130,
                "word: strings": 78,
                "word: syscall": 401,
                "word: unicode": 140,
                "word: adddate": 3,
                "word: addfile": 2,
                "word: boolean": 5,
                "word: buffers": 1,
                "word: canaddr": 3,
                "word: chandir": 18,
                "word: closing": 7,
                "word: cmdline": 1,
                "word: comment": 17,
                "word: compile": 10,
                "word: complex": 13,
                "word: context": 16,
                "word: control": 3,
                "word: convert": 8,
                "word: current": 7,
                "word: dbgdbgf": 5,
                "word: debuggc": 2,
                "word: debugln": 2,
                "word: decrypt": 4,
                "word: default": 4,
                "word: disable": 4,
                "word: discard": 4,
                "word: encrypt": 4,
                "word: errorln": 2,
                "word: factory": 1,
                "word: fatalln": 3,
                "word: feature": 3,
                "word: finally": 3,
                "word: findall": 3,
                "word: hasbmi": 2,
                "word: haserms": 1,
                "word: hasfcma": 1,
                "word: hasfphp": 1,
                "word: hassha": 4,
                "word: hassse": 4,
                "word: heapsys": 1,
                "word: homedir": 1,
                "word: isoweek": 3,
                "word: imports": 1,
                "word: initbuf": 2,
                "word: initmsg": 2,
                "word: isvalid": 5,
                "word: literal": 14,
                "word: longest": 3,
                "word: lookups": 1,
                "word: mallocs": 8,
                "word: mapkeys": 3,
                "word: message": 7,
                "word: minutes": 4,
                "word: modtime": 2,
                "word: namelen": 4,
                "word: newproc": 6,
                "word: objname": 1,
                "word: opening": 1,
                "word: operand": 2,
                "word: panicln": 2,
                "word: pattern": 2,
                "word: pausens": 5,
                "word: pkgpath": 18,
                "word: pointer": 64,
                "word: postfix": 2,
                "word: println": 4,
                "word: rlocker": 5,
                "word: runlock": 5,
                "word: rawpath": 1,
                "word: rawread": 3,
                "word: readmsg": 3,
                "word: readdir": 4,
                "word: release": 6,
                "word: roundup": 2,
                "word: seconds": 3,
                "word: setbool": 3,
                "word: setname": 2,
                "word: settime": 3,
                "word: setuint": 3,
                "word: shuffle": 2,
                "word: stopped": 5,
                "word: structt": 1,
                "word: success": 4,
                "word: symbols": 1,
                "word: timeout": 10,
                "word: tofloat": 4,
                "word: tovalue": 19,
                "word: tryrecv": 3,
                "word: trysend": 3,
                "word: version": 9,
                "word: weekday": 8,
                "word: writeat": 2,
                "word: writeto": 12,
                "word: yearday": 3,
                "word: aborted": 1,
                "word: advance": 4,
                "word: alignme": 4,
                "word: alllink": 1,
                "word: allnext": 1,
                "word: allowin": 1,
                "word: amended": 1,
                "word: argsize": 1,
                "word: badverb": 2,
                "word: balance": 2,
                "word: blocked": 7,
                "word: buckets": 1,
                "word: buflock": 2,
                "word: bytebuf": 1,
                "word: callers": 3,
                "word: central": 8,
                "word: cgoctxt": 1,
                "word: codegen": 1,
                "word: copylen": 1,
                "word: created": 4,
                "word: declare": 2,
                "word: defined": 9,
                "word: dequeue": 3,
                "word: destroy": 2,
                "word: dirinfo": 4,
                "word: dispose": 2,
                "word: domatch": 2,
                "word: doprint": 2,
                "word: docrash": 2,
                "word: elemenc": 1,
                "word: elseenc": 1,
                "word: enabled": 5,
                "word: encinit": 1,
                "word: encoder": 29,
                "word: enqueue": 2,
                "word: entries": 3,
                "word: expbits": 1,
                "word: fileset": 6,
                "word: filetab": 1,
                "word: flushed": 4,
                "word: fmtbool": 2,
                "word: fnstash": 20,
                "word: forward": 2,
                "word: freebuf": 1,
                "word: funcoff": 1,
                "word: gctrace": 2,
                "word: genline": 2,
                "word: getemit": 2,
                "word: getinfo": 2,
                "word: getslow": 2,
                "word: gobtype": 11,
                "word: goidgen": 1,
                "word: growing": 2,
                "word: gsignal": 3,
                "word: hasname": 1,
                "word: hasmain": 1,
                "word: huffsym": 2,
                "word: ignored": 4,
                "word: incount": 1,
                "word: invalid": 62,
                "word: isarray": 3,
                "word: isempty": 6,
                "word: iserror": 1,
                "word: keykind": 1,
                "word: keysize": 1,
                "word: lexical": 1,
                "word: libcall": 2,
                "word: lockedg": 2,
                "word: lockedm": 2,
                "word: marshal": 4,
                "word: matched": 2,
                "word: methods": 2,
                "word: morebuf": 2,
                "word: mutable": 1,
                "word: nameoff": 7,
                "word: newdate": 2,
                "word: nextint": 2,
                "word: nlookup": 1,
                "word: nmalloc": 8,
                "word: nmfreed": 1,
                "word: nostack": 4,
                "word: npcdata": 1,
                "word: onepass": 2,
                "word: outused": 1,
                "word: padchar": 1,
                "word: pinslow": 2,
                "word: poplist": 2,
                "word: preempt": 3,
                "word: prepare": 2,
                "word: primary": 1,
                "word: private": 1,
                "word: protect": 1,
                "word: ptrdata": 1,
                "word: pushall": 3,
                "word: pushcnt": 1,
                "word: putfast": 3,
                "word: racectx": 1,
                "word: readerr": 2,
                "word: readpos": 1,
                "word: readval": 1,
                "word: readers": 1,
                "word: reading": 2,
                "word: reclaim": 2,
                "word: recover": 1,
                "word: resolve": 3,
                "word: restart": 2,
                "word: reviver": 1,
                "word: roffset": 1,
                "word: runnext": 1,
                "word: scratch": 1,
                "word: seedpos": 2,
                "word: setdone": 2,
                "word: setmono": 1,
                "word: setpath": 2,
                "word: setspan": 2,
                "word: settype": 2,
                "word: sigmask": 1,
                "word: skipnop": 2,
                "word: sortkey": 1,
                "word: spankey": 5,
                "word: special": 8,
                "word: started": 1,
                "word: startpc": 1,
                "word: sysstat": 2,
                "word: tagsize": 1,
                "word: takeall": 2,
                "word: textoff": 6,
                "word: timeend": 3,
                "word: topbits": 1,
                "word: tophash": 2,
                "word: typeoff": 11,
                "word: typemap": 1,
                "word: unixsec": 2,
                "word: varlist": 1,
                "word: visited": 1,
                "word: waiting": 7,
                "word: wraperr": 2,
                "word: wrapped": 1,
                "word: writeon": 2,
                "word: encoding": 562,
                "word: uintptr": 218,
                "word: buffered": 2,
                "word: capnames": 4,
                "word: chainlen": 1,
                "word: comments": 20,
                "word: contains": 10,
                "word: coredump": 3,
                "word: debugger": 2,
                "word: enablegc": 2,
                "word: exitcode": 2,
                "word: exittime": 1,
                "word: fetchall": 3,
                "word: fileline": 2,
                "word: filename": 3,
                "word: findproc": 2,
                "word: flowinfo": 1,
                "word: fragment": 1,
                "word: getvalue": 11,
                "word: gostring": 2,
                "word: groupids": 2,
                "word: hasasimd": 1,
                "word: hascpuid": 1,
                "word: hascrc": 1,
                "word: hasdcpop": 1,
                "word: hasjscvt": 1,
                "word: haslrcpc": 1,
                "word: haspmull": 1,
                "word: hasssse": 1,
                "word: heapidle": 1,
                "word: hostname": 6,
                "word: initbufs": 2,
                "word: internal": 272,
                "word: isnumber": 3,
                "word: isobject": 3,
                "word: isstream": 1,
                "word: isstring": 3,
                "word: location": 18,
                "word: mspansys": 1,
                "word: mapindex": 3,
                "word: maprange": 3,
                "word: maxudpdg": 1,
                "word: multiply": 2,
                "word: numfield": 16,
                "word: operator": 2,
                "word: othersys": 1,
                "word: overhead": 2,
                "word: packages": 2,
                "word: password": 3,
                "word: pauseend": 1,
                "word: position": 13,
                "word: protocol": 3,
                "word: rawquery": 1,
                "word: rawwrite": 2,
                "word: readbyte": 8,
                "word: readfrom": 5,
                "word: readline": 2,
                "word: readrune": 6,
                "word: required": 2,
                "word: sequence": 2,
                "word: setbytes": 4,
                "word: setconst": 2,
                "word: setflags": 2,
                "word: setfloat": 3,
                "word: shutdown": 6,
                "word: signaled": 3,
                "word: simplify": 4,
                "word: sockaddr": 14,
                "word: stacksys": 1,
                "word: sysusage": 4,
                "word: tostring": 15,
                "word: truncate": 10,
                "word: urierror": 1,
                "word: unixnano": 3,
                "word: usertime": 4,
                "word: username": 4,
                "word: wsaioctl": 3,
                "word: writemsg": 3,
                "word: allspans": 1,
                "word: arrayenc": 1,
                "word: asserted": 1,
                "word: assignto": 2,
                "word: basemask": 1,
                "word: baseaddr": 1,
                "word: bitcount": 1,
                "word: bytedata": 1,
                "word: cacheend": 1,
                "word: cgocheck": 3,
                "word: checkput": 1,
                "word: coalesce": 4,
                "word: codebits": 1,
                "word: collapse": 2,
                "word: concrete": 2,
                "word: continpc": 1,
                "word: coprimes": 1,
                "word: copydata": 2,
                "word: copydist": 1,
                "word: countbuf": 1,
                "word: dataqsiz": 1,
                "word: dclstash": 20,
                "word: debuggen": 1,
                "word: decindir": 1,
                "word: decopfor": 7,
                "word: describe": 2,
                "word: divshift": 2,
                "word: doprintf": 2,
                "word: elemsize": 2,
                "word: elemtype": 1,
                "word: embedded": 5,
                "word: encindir": 1,
                "word: endcycle": 2,
                "word: eoferror": 2,
                "word: erroring": 1,
                "word: fastrand": 2,
                "word: fieldnum": 1,
                "word: filetype": 1,
                "word: flushgen": 3,
                "word: fmtbytes": 2,
                "word: fmtflags": 2,
                "word: fmtfloat": 3,
                "word: freelist": 1,
                "word: freespan": 4,
                "word: freewait": 1,
                "word: freelink": 1,
                "word: fullhead": 2,
                "word: fulltail": 2,
                "word: funcinfo": 4,
                "word: funcname": 3,
                "word: functype": 40,
                "word: generate": 2,
                "word: goregexp": 1,
                "word: haslabel": 2,
                "word: heapgoal": 4,
                "word: histsize": 2,
                "word: inswitch": 1,
                "word: initspan": 4,
                "word: ismarked": 2,
                "word: isregexp": 2,
                "word: isselect": 1,
                "word: keyindir": 2,
                "word: lastbyte": 1,
                "word: lastfreq": 1,
                "word: lastread": 1,
                "word: lastbits": 1,
                "word: lastpoll": 1,
                "word: libcallg": 1,
                "word: linkmask": 1,
                "word: mantbits": 1,
                "word: mappings": 7,
                "word: matchcap": 1,
                "word: maxprocs": 4,
                "word: mcentral": 24,
                "word: morebits": 2,
                "word: mstartfn": 1,
                "word: mustfind": 2,
                "word: mustload": 2,
                "word: namesind": 1,
                "word: nbgsweep": 1,
                "word: ncgocall": 1,
                "word: needdata": 1,
                "word: needzero": 2,
                "word: newarray": 4,
                "word: newbytes": 2,
                "word: newerror": 3,
                "word: newstack": 6,
                "word: nextbase": 2,
                "word: nextfree": 2,
                "word: nextuint": 2,
                "word: nonempty": 1,
                "word: noptrbss": 1,
                "word: numinstr": 1,
                "word: objindex": 2,
                "word: outcount": 1,
                "word: overflow": 8,
                "word: parsefor": 2,
                "word: parseint": 4,
                "word: pausegen": 1,
                "word: pointers": 2,
                "word: pollable": 1,
                "word: prevrune": 1,
                "word: previous": 8,
                "word: printarg": 2,
                "word: priority": 1,
                "word: property": 35,
                "word: pushback": 2,
                "word: putbatch": 2,
                "word: putvalue": 4,
                "word: raceaddr": 2,
                "word: rcvrtype": 2,
                "word: readlock": 2,
                "word: readable": 1,
                "word: recvaddr": 4,
                "word: recvtype": 2,
                "word: released": 5,
                "word: runnable": 7,
                "word: runqhead": 1,
                "word: runqsize": 2,
                "word: runqtail": 1,
                "word: rwunlock": 2,
                "word: scannext": 2,
                "word: scanwork": 2,
                "word: scavenge": 4,
                "word: sendaddr": 4,
                "word: sendtype": 2,
                "word: sendzero": 1,
                "word: seqstart": 2,
                "word: seterror": 2,
                "word: setrunes": 3,
                "word: setspans": 2,
                "word: setvalue": 9,
                "word: sigcode": 2,
                "word: sleeping": 1,
                "word: specials": 1,
                "word: spinecap": 1,
                "word: spinelen": 1,
                "word: spinning": 4,
                "word: stacktab": 2,
                "word: stktopsp": 1,
                "word: stopnote": 1,
                "word: stopwait": 3,
                "word: stwprocs": 4,
                "word: sudogbuf": 1,
                "word: sweepers": 1,
                "word: sweepgen": 8,
                "word: sysalloc": 3,
                "word: targetpc": 3,
                "word: throwing": 2,
                "word: ticksend": 2,
                "word: tmpclass": 1,
                "word: toobject": 3,
                "word: tracebuf": 4,
                "word: traceseq": 1,
                "word: tryalloc": 2,
                "word: trystore": 2,
                "word: uncommon": 14,
                "word: variable": 1,
                "word: waitread": 1,
                "word: waitlink": 1,
                "word: waitlock": 1,
                "word: waitnote": 1,
                "word: waitsema": 1,
                "word: waittail": 1,
                "word: wiretype": 8,
                "word: writable": 2,
                "word: writebuf": 3,
                "word: writeoff": 2,
                "word: writeset": 2,
                "word: addimport": 2,
                "word: afterhook": 1,
                "word: alternate": 3,
                "word: anonymous": 3,
                "word: blocksize": 4,
                "word: callslice": 6,
                "word: clearbufs": 2,
                "word: connectex": 6,
                "word: continued": 3,
                "word: dayofweek": 1,
                "word: evalerror": 1,
                "word: findindex": 2,
                "word: freebytes": 1,
                "word: ftruncate": 3,
                "word: gobdecode": 2,
                "word: gobencode": 3,
                "word: haspopcnt": 1,
                "word: heapalloc": 2,
                "word: heapinuse": 1,
                "word: interface": 81,
                "word: interrupt": 1,
                "word: isboolean": 3,
                "word: isdefined": 3,
                "word: isregular": 3,
                "word: leftbrace": 1,
                "word: mcachesys": 1,
                "word: matchrune": 4,
                "word: multiaddr": 1,
                "word: noncesize": 3,
                "word: normalize": 3,
                "word: nummethod": 15,
                "word: numsubexp": 3,
                "word: parameter": 2,
                "word: precision": 4,
                "word: readbytes": 4,
                "word: readslice": 5,
                "word: reserved": 4,
                "word: rounddown": 2,
                "word: semicolon": 3,
                "word: setlogger": 2,
                "word: setoutput": 3,
                "word: setprefix": 2,
                "word: setstring": 3,
                "word: signature": 1,
                "word: specified": 2,
                "word: startcond": 2,
                "word: statement": 6,
                "word: temporary": 6,
                "word: toboolean": 4,
                "word: tointeger": 4,
                "word: trapcause": 3,
                "word: typeerror": 1,
                "word: valueelem": 1,
                "word: writebyte": 8,
                "word: writerune": 5,
                "word: abssource": 2,
                "word: acceptone": 3,
                "word: addobject": 2,
                "word: aescipher": 5,
                "word: allarenas": 1,
                "word: allocbits": 1,
                "word: ancestors": 1,
                "word: argnumber": 2,
                "word: arguments": 9,
                "word: availread": 2,
                "word: backtrack": 3,
                "word: badargnum": 2,
                "word: bitcounts": 2,
                "word: bitlength": 1,
                "word: cachespan": 2,
                "word: cachezone": 1,
                "word: caughtsig": 1,
                "word: chroffset": 1,
                "word: construct": 4,
                "word: copycheck": 2,
                "word: datablock": 2,
                "word: datevalue": 2,
                "word: decodeint": 2,
                "word: decodemap": 2,
                "word: deferlock": 1,
                "word: deferpool": 1,
                "word: deletable": 1,
                "word: doexecute": 2,
                "word: doonepass": 2,
                "word: doprintln": 2,
                "word: elemindir": 3,
                "word: encodeint": 2,
                "word: encodemap": 2,
                "word: engineptr": 3,
                "word: enoptrbss": 1,
                "word: enumerate": 2,
                "word: equalfold": 3,
                "word: fixedsize": 1,
                "word: floatbits": 4,
                "word: fmtstring": 2,
                "word: framepool": 1,
                "word: freeindex": 4,
                "word: freqcache": 1,
                "word: gcbssmask": 1,
                "word: gcwaiting": 2,
                "word: getlength": 2,
                "word: goidcache": 1,
                "word: hasprefix": 7,
                "word: ignoremap": 2,
                "word: insertnew": 2,
                "word: instqueue": 2,
                "word: isconsole": 1,
                "word: ispointer": 2,
                "word: issymlink": 2,
                "word: itablinks": 1,
                "word: largefree": 2,
                "word: lastticks": 1,
                "word: libcallpc": 1,
                "word: libcallsp": 1,
                "word: localsize": 1,
                "word: lockowner": 2,
                "word: lockedext": 1,
                "word: lockedint": 2,
                "word: mallocing": 2,
                "word: maxmcount": 1,
                "word: multiline": 1,
                "word: nbssroots": 5,
                "word: namebytes": 1,
                "word: nevacuate": 1,
                "word: newnumber": 2,
                "word: newobject": 5,
                "word: newreader": 7,
                "word: newregexp": 6,
                "word: newstring": 3,
                "word: nextarena": 2,
                "word: nextblock": 2,
                "word: nextindex": 1,
                "word: nextwaitm": 1,
                "word: nfuncdata": 1,
                "word: noptrdata": 1,
                "word: noverflow": 1,
                "word: npageskey": 2,
                "word: numblocks": 2,
                "word: omitempty": 1,
                "word: openscope": 2,
                "word: padstring": 2,
                "word: pageinuse": 1,
                "word: pagemarks": 1,
                "word: panicking": 1,
                "word: pclntable": 1,
                "word: pkghashes": 1,
                "word: popwriter": 2,
                "word: prefixend": 1,
                "word: printlock": 2,
                "word: profilehz": 1,
                "word: prototype": 1,
                "word: ptrtothis": 1,
                "word: pushvalue": 2,
                "word: readflush": 2,
                "word: readindex": 2,
                "word: readersem": 1,
                "word: recovered": 2,
                "word: reference": 5,
                "word: reordered": 1,
                "word: retoffset": 1,
                "word: saveerror": 2,
                "word: scangroup": 2,
                "word: scanwhile": 2,
                "word: scavenged": 1,
                "word: schedlink": 1,
                "word: schedtick": 2,
                "word: schedwhen": 1,
                "word: setmarked": 2,
                "word: sizeclass": 2,
                "word: sourcecol": 1,
                "word: spanalloc": 1,
                "word: spanclass": 7,
                "word: spinelock": 1,
                "word: stacklock": 1,
                "word: stacksize": 2,
                "word: startaddr": 1,
                "word: startsema": 4,
                "word: starttime": 2,
                "word: stepstate": 1,
                "word: stringseq": 2,
                "word: stripmono": 2,
                "word: sudoglock": 1,
                "word: sweepdone": 1,
                "word: syscallpc": 1,
                "word: syscallsp": 1,
                "word: tmarkterm": 4,
                "word: timestart": 2,
                "word: totaltime": 4,
                "word: traceback": 4,
                "word: traceskip": 2,
                "word: typelinks": 2,
                "word: unmarshal": 10,
                "word: usenumber": 1,
                "word: valuekind": 2,
                "word: valuesize": 1,
                "word: waitwrite": 1,
                "word: waitsince": 1,
                "word: walktreap": 1,
                "word: wbufspans": 4,
                "word: writebits": 1,
                "word: writecode": 1,
                "word: writecopy": 2,
                "word: writelock": 2,
                "word: writemark": 2,
                "word: writersem": 1,
                "word: crypto": 66,
                "word: syntax": 143,
                "word: addcomment": 4,
                "word: afterblock": 3,
                "word: allocbytes": 1,
                "word: attributes": 1,
                "word: beforehook": 1,
                "word: commentmap": 10,
                "word: commontype": 9,
                "word: comparable": 13,
                "word: comparison": 4,
                "word: consequent": 2,
                "word: decodedlen": 2,
                "word: encodedlen": 2,
                "word: entrypoint": 1,
                "word: exitstatus": 3,
                "word: expfloat": 2,
                "word: expression": 10,
                "word: fieldalign": 15,
                "word: findstring": 2,
                "word: forcequery": 1,
                "word: hasasimddp": 1,
                "word: hasasimdhp": 1,
                "word: hasatomics": 1,
                "word: hasevtstrm": 1,
                "word: hasosxsave": 1,
                "word: hidewindow": 1,
                "word: identifier": 12,
                "word: implements": 14,
                "word: importpath": 1,
                "word: inusebytes": 2,
                "word: isfunction": 3,
                "word: isvariadic": 14,
                "word: kerneltime": 1,
                "word: layoutelem": 1,
                "word: loadscript": 2,
                "word: mspaninuse": 1,
                "word: maxsockets": 1,
                "word: nanosecond": 3,
                "word: offsethigh": 1,
                "word: providerid": 1,
                "word: rangeerror": 9,
                "word: rawcontrol": 2,
                "word: readstring": 6,
                "word: reparsetag": 1,
                "word: replaceall": 5,
                "word: requesturi": 2,
                "word: rightbrace": 1,
                "word: setcomplex": 3,
                "word: setpointer": 3,
                "word: settimeout": 2,
                "word: setsockopt": 3,
                "word: sockettype": 1,
                "word: stackinuse": 1,
                "word: stacktrace": 1,
                "word: stopsignal": 3,
                "word: systemtime": 5,
                "word: totalalloc": 1,
                "word: unreadbyte": 9,
                "word: unreadrune": 11,
                "word: unsafeaddr": 4,
                "word: valuecount": 1,
                "word: vendorinfo": 1,
                "word: allmatches": 2,
                "word: alloccache": 1,
                "word: alloccount": 8,
                "word: arenahints": 1,
                "word: assisttime": 1,
                "word: availwrite": 2,
                "word: bgmarkdone": 4,
                "word: bucketsize": 1,
                "word: buildindex": 2,
                "word: cachestart": 1,
                "word: cachealloc": 1,
                "word: canaddrenc": 1,
                "word: catchpanic": 4,
                "word: cgocallers": 2,
                "word: checkvalid": 3,
                "word: checkempty": 2,
                "word: clearflags": 2,
                "word: closescope": 2,
                "word: compiledec": 2,
                "word: countalloc": 2,
                "word: countstate": 1,
                "word: createtype": 3,
                "word: decodeuint": 2,
                "word: definition": 1,
                "word: delivering": 4,
                "word: dwpagesize": 1,
                "word: encodeuint": 2,
                "word: enoptrdata": 1,
                "word: enterscope": 2,
                "word: enumerable": 2,
                "word: escapehtml": 1,
                "word: extensible": 1,
                "word: findobject": 3,
                "word: fmtboolean": 2,
                "word: fmtcomplex": 2,
                "word: fmtinteger": 3,
                "word: fmtpointer": 2,
                "word: fmtunicode": 2,
                "word: framestore": 1,
                "word: freemanual": 2,
                "word: trigger": 2,
                "word: gcdatamask": 1,
                "word: gcmarkbits": 1,
                "word: gcscandone": 2,
                "word: getbinding": 4,
                "word: gosigstack": 1,
                "word: goodargnum": 1,
                "word: hasbinding": 4,
                "word: ignorecase": 1,
                "word: infunction": 1,
                "word: insertback": 3,
                "word: invalidptr": 2,
                "word: iscallable": 2,
                "word: isexported": 4,
                "word: largealloc": 2,
                "word: leavescope": 2,
                "word: loadfileid": 1,
                "word: lookupname": 2,
                "word: lpfilename": 4,
                "word: matchcount": 2,
                "word: misslocked": 2,
                "word: missingarg": 2,
                "word: modulename": 1,
                "word: ndataroots": 5,
                "word: nspanroots": 5,
                "word: namenonesc": 1,
                "word: nativefile": 1,
                "word: nativeline": 1,
                "word: needextram": 1,
                "word: newarrayof": 2,
                "word: newboolean": 2,
                "word: newconsole": 2,
                "word: newgoarray": 2,
                "word: newgoslice": 2,
                "word: newliteral": 2,
                "word: nlargefree": 2,
                "word: nmspinning": 1,
                "word: nsmallfree": 2,
                "word: offsetanon": 1,
                "word: offsetfreq": 1,
                "word: oldbuckets": 1,
                "word: pagesinuse": 1,
                "word: pagesswept": 1,
                "word: parseclass": 2,
                "word: parseforin": 2,
                "word: parsestate": 1,
                "word: parsethrow": 2,
                "word: pausestack": 1,
                "word: pausestart": 4,
                "word: pluginpath": 1,
                "word: precedence": 1,
                "word: preemptoff": 2,
                "word: prefixrune": 1,
                "word: printvalue": 2,
                "word: properties": 2,
                "word: pushwriter": 2,
                "word: raceignore": 1,
                "word: readheader": 2,
                "word: readunlock": 2,
                "word: readerpass": 1,
                "word: readerwait": 1,
                "word: readuint": 1,
                "word: regionsize": 1,
                "word: releaseall": 2,
                "word: removenode": 2,
                "word: removespan": 2,
                "word: rotateleft": 3,
                "word: runtimectx": 1,
                "word: safestring": 7,
                "word: savederror": 1,
                "word: scanescape": 3,
                "word: scanstring": 2,
                "word: schedtrace": 3,
                "word: selectdone": 1,
                "word: sendtypeid": 2,
                "word: setbinding": 4,
                "word: sigcontext": 1,
                "word: sleepuntil": 1,
                "word: sourceline": 1,
                "word: sourcesind": 1,
                "word: stacklimit": 1,
                "word: stackcache": 2,
                "word: stacks": 2,
                "word: startcycle": 2,
                "word: storedsize": 1,
                "word: sudogcache": 1,
                "word: sweepspans": 1,
                "word: sysmonnote": 1,
                "word: sysmontick": 4,
                "word: sysmonwait": 2,
                "word: tsweepterm": 4,
                "word: thisobject": 3,
                "word: throwsplit": 1,
                "word: ticksstart": 2,
                "word: tinyallocs": 2,
                "word: tinyoffset": 1,
                "word: tracelimit": 1,
                "word: tracesweep": 1,
                "word: traceswept": 1,
                "word: tracelastp": 1,
                "word: treapalloc": 1,
                "word: trygetfast": 2,
                "word: typestring": 3,
                "word: userforced": 4,
                "word: valuearray": 2,
                "word: visitqueue": 2,
                "word: waitreason": 4,
                "word: widpresent": 1,
                "word: workbufhdr": 2,
                "word: writeblock": 1,
                "word: writebytes": 1,
                "word: writeclear": 1,
                "word: writeslice": 2,
                "word: atomic": 22,
                "word: gcmasm": 5,
                "word: option": 8,
                "word: typeid": 33,
                "word: process": 15,
                "word: rawconn": 7,
                "word: addcomments": 3,
                "word: atlinebreak": 2,
                "word: buckhashsys": 1,
                "word: buffercount": 1,
                "word: contextskip": 3,
                "word: decodevalue": 5,
                "word: deletevalue": 3,
                "word: description": 1,
                "word: encodevalue": 2,
                "word: escapedpath": 2,
                "word: fieldbyname": 17,
                "word: filesizelow": 1,
                "word: freeobjects": 1,
                "word: getfiletype": 3,
                "word: gobencodert": 1,
                "word: hasasimdfhm": 1,
                "word: hasasimdrdm": 1,
                "word: heapobjects": 1,
                "word: highversion": 1,
                "word: initializer": 2,
                "word: isprimitive": 3,
                "word: isundefined": 3,
                "word: latinoffset": 1,
                "word: leftbracket": 1,
                "word: loadorstore": 2,
                "word: lowdatetime": 1,
                "word: mcacheinuse": 1,
                "word: markprimary": 2,
                "word: marshaljson": 6,
                "word: marshaltext": 4,
                "word: matchreader": 2,
                "word: matchstring": 2,
                "word: maxsockaddr": 1,
                "word: maxvaluelen": 1,
                "word: messagesize": 1,
                "word: minsockaddr": 1,
                "word: multistream": 3,
                "word: nanoseconds": 4,
                "word: normfloat": 2,
                "word: numforcedgc": 2,
                "word: overflowint": 3,
                "word: setdeadline": 5,
                "word: setmapindex": 3,
                "word: stackrecord": 3,
                "word: subkeycount": 1,
                "word: subexpnames": 3,
                "word: symboltable": 1,
                "word: syntaxerror": 6,
                "word: syscallconn": 2,
                "word: withpadding": 3,
                "word: writestring": 10,
                "word: acquiretime": 1,
                "word: allocmanual": 2,
                "word: appendgroup": 2,
                "word: assistqueue": 4,
                "word: baseaddress": 1,
                "word: bgmarkready": 4,
                "word: bytesmarked": 4,
                "word: checkbucket": 1,
                "word: clearmarked": 1,
                "word: clobberfree": 3,
                "word: codegenfreq": 1,
                "word: configureon": 2,
                "word: createstack": 1,
                "word: dclproperty": 11,
                "word: decodearray": 2,
                "word: decodeslice": 2,
                "word: deferreturn": 2,
                "word: dirtylocked": 2,
                "word: dynamicsize": 1,
                "word: encodearray": 2,
                "word: ensureswept": 3,
                "word: enumerateon": 2,
                "word: externaldec": 1,
                "word: externalenc": 1,
                "word: findfunctab": 2,
                "word: finishblock": 2,
                "word: flushedwork": 2,
                "word: gccheckmark": 2,
                "word: gcscanvalid": 3,
                "word: getargument": 2,
                "word: getproperty": 2,
                "word: globalstash": 1,
                "word: hasinstance": 2,
                "word: hasproperty": 2,
                "word: marked": 2,
                "word: ignorearray": 2,
                "word: ignoreslice": 2,
                "word: initeration": 1,
                "word: indextokens": 1,
                "word: indirectkey": 2,
                "word: literalfreq": 1,
                "word: maybeconcat": 2,
                "word: millisecond": 1,
                "word: nstackroots": 5,
                "word: nameeschtml": 1,
                "word: newsigstack": 1,
                "word: newurierror": 2,
                "word: newoverflow": 2,
                "word: sample": 1,
                "word: nlargealloc": 1,
                "word: noldbuckets": 2,
                "word: npausesweep": 1,
                "word: numbervalue": 2,
                "word: objectclass": 3,
                "word: objectstash": 22,
                "word: offsetembed": 1,
                "word: oldoverflow": 2,
                "word: parseescape": 2,
                "word: parserepeat": 2,
                "word: parsesource": 2,
                "word: passwordset": 1,
                "word: precpresent": 1,
                "word: preemptible": 2,
                "word: preemptscan": 1,
                "word: prefixbytes": 1,
                "word: prepareread": 1,
                "word: pushbackall": 2,
                "word: readconsole": 3,
                "word: readhuffman": 2,
                "word: readmessage": 2,
                "word: readercount": 1,
                "word: recvmessage": 2,
                "word: regexpvalue": 2,
                "word: releasetime": 1,
                "word: rotateright": 3,
                "word: runtimehash": 1,
                "word: safepointfn": 1,
                "word: safetovalue": 3,
                "word: scanbracket": 2,
                "word: scannewline": 2,
                "word: scavengeall": 2,
                "word: scheddetail": 2,
                "word: setoverflow": 2,
                "word: shouldvisit": 2,
                "word: speciallock": 1,
                "word: stackguard": 2,
                "word: startbucket": 1,
                "word: storelocked": 2,
                "word: stringbytes": 2,
                "word: stringvalue": 2,
                "word: stringslock": 2,
                "word: sweeparenas": 1,
                "word: syscalltick": 2,
                "word: syscallwhen": 1,
                "word: textsectmap": 1,
                "word: uncachespan": 2,
                "word: unknowntype": 2,
                "word: unusedsince": 1,
                "word: valuequoted": 2,
                "word: waittraceev": 1,
                "word: waitunlockf": 1,
                "word: wholeregexp": 1,
                "word: writetokens": 1,
                "word: writeunlock": 2,
                "word: decoder": 63,
                "word: maptype": 15,
                "word: writerto": 1,
                "word: fileinfo": 4,
                "word: filemode": 11,
                "word: procattr": 1,
                "word: filestat": 12,
                "word: script": 8,
                "word: parser": 321,
                "word: locker": 2,
                "word: uintreg": 1,
                "word: agxvineyhtfx": 2,
                "word: allocobjects": 1,
                "word: appendformat": 3,
                "word: argumentlist": 6,
                "word: assignableto": 13,
                "word: bgncmwoqvrmb": 4,
                "word: cpmopltetpbz": 2,
                "word: caninterface": 3,
                "word: chainentries": 1,
                "word: contextlimit": 3,
                "word: creationtime": 1,
                "word: dvuxrumkxmek": 2,
                "word: daylightbias": 1,
                "word: daylightdate": 1,
                "word: daylightname": 1,
                "word: decodestring": 3,
                "word: defaultvalue": 2,
                "word: discriminant": 2,
                "word: efeqgyksqtkj": 2,
                "word: enableassets": 2,
                "word: expandstring": 3,
                "word: fieldbyindex": 16,
                "word: fileindexlow": 1,
                "word: filesizehigh": 1,
                "word: findallindex": 3,
                "word: findnextfile": 4,
                "word: findsubmatch": 2,
                "word: fixeddecimal": 3,
                "word: gettokenuser": 3,
                "word: hgreumtofzeh": 2,
                "word: hlwwnwtcdhab": 2,
                "word: htrfttodogqz": 2,
                "word: haspclmulqdq": 1,
                "word: heapreleased": 1,
                "word: highdatetime": 1,
                "word: inuseobjects": 2,
                "word: internalhigh": 2,
                "word: jqtypqhttddv": 2,
                "word: junuyuvtwqvg": 2,
                "word: kibuoizxagsf": 2,
                "word: keysbyparent": 4,
                "word: markcomments": 2,
                "word: matchrunepos": 3,
                "word: maxsubkeylen": 1,
                "word: methodbyname": 15,
                "word: milliseconds": 1,
                "word: movecomments": 3,
                "word: mustfindproc": 2,
                "word: nficsqejtkag": 2,
                "word: njvotxmcjrsh": 2,
                "word: omegakinuaac": 2,
                "word: overflowuint": 3,
                "word: pausetotalns": 1,
                "word: primarygroup": 1,
                "word: protocolname": 1,
                "word: qzyrbdxwnfpi": 5,
                "word: rgqcqflwdbls": 2,
                "word: rsjngsygmeyc": 4,
                "word: readdirnames": 4,
                "word: rightbracket": 1,
                "word: runtimeerror": 6,
                "word: standardbias": 1,
                "word: standarddate": 1,
                "word: standardname": 1,
                "word: systemstatus": 1,
                "word: tqqeoubvdvry": 2,
                "word: uyiwyjqxwedw": 2,
                "word: xnazlwrgzurq": 2,
                "word: xorkeystream": 2,
                "word: zazlurqcpwdn": 4,
                "word: zjwafslkfqvf": 2,
                "word: zkovehophpqi": 2,
                "word: zkthrnuafehk": 2,
                "word: aescipherasm": 5,
                "word: assignbucket": 2,
                "word: atomicstatus": 3,
                "word: bgscancredit": 1,
                "word: buckhash": 1,
                "word: configurable": 2,
                "word: configureoff": 2,
                "word: configureset": 1,
                "word: contextflags": 1,
                "word: debugcontrol": 1,
                "word: decodesingle": 2,
                "word: decodestruct": 2,
                "word: decodercache": 1,
                "word: decompressor": 14,
                "word: deferpoolbuf": 1,
                "word: dequeuesudog": 1,
                "word: encodesingle": 2,
                "word: encodestruct": 2,
                "word: enlistworker": 2,
                "word: enumerateoff": 2,
                "word: enumerateset": 2,
                "word: errorcontext": 1,
                "word: exportnative": 2,
                "word: formatheader": 2,
                "word: functionlist": 1,
                "word: gcassisttime": 1,
                "word: gcpacertrace": 2,
                "word: globalobject": 1,
                "word: goidcacheend": 1,
                "word: hasprimitive": 1,
                "word: objects": 1,
                "word: huffmanblock": 2,
                "word: idlemarktime": 1,
                "word: ignoresingle": 2,
                "word: ignorestruct": 2,
                "word: ignorercache": 1,
                "word: lastrunesize": 1,
                "word: linktimehash": 1,
                "word: literalstore": 2,
                "word: madvdontneed": 2,
                "word: markdonesema": 4,
                "word: markrootjobs": 4,
                "word: markrootnext": 4,
                "word: messagevalue": 2,
                "word: modulehashes": 1,
                "word: morepointers": 2,
                "word: newevalerror": 2,
                "word: newreference": 4,
                "word: newtypeerror": 2,
                "word: nextcharfreq": 1,
                "word: nextoverflow": 1,
                "word: nextpairfreq": 1,
                "word: nmidlelocked": 2,
                "word: objectcoerce": 2,
                "word: onepassrunes": 2,
                "word: operandcount": 2,
                "word: paniconfault": 1,
                "word: parseprogram": 4,
                "word: pickfreespan": 2,
                "word: preparewrite": 1,
                "word: prescavenged": 2,
                "word: producttable": 1,
                "word: propertylist": 1,
                "word: propertymode": 2,
                "word: reclaimchunk": 2,
                "word: reclaimindex": 1,
                "word: reflectvalue": 2,
                "word: reflexivekey": 2,
                "word: rescheduling": 1,
                "word: samesizegrow": 2,
                "word: scanmantissa": 2,
                "word: setglobalref": 2,
                "word: shutdownsema": 2,
                "word: sweepwaiters": 4,
                "word: sysexitticks": 1,
                "word: timersbucket": 7,
                "word: tovaluearray": 2,
                "word: triggerratio": 1,
                "word: trybacktrack": 2,
                "word: trywritecopy": 2,
                "word: variablelist": 1,
                "word: waitcanceled": 2,
                "word: waslinebreak": 1,
                "word: writeconsole": 4,
                "word: writemessage": 2,
                "word: writepadding": 2,
                "word: compress": 76,
                "word: readop": 1,
                "word: emitlog": 3,
                "word: byfreq": 8,
                "word: stringer": 2,
                "word: decinstr": 2,
                "word: encinstr": 2,
                "word: goberror": 1,
                "word: typeinfo": 14,
                "word: byindex": 7,
                "word: encopts": 2,
                "word: scanner": 11,
                "word: linkerror": 4,
                "word: patherror": 5,
                "word: lazybuf": 4,
                "word: fdmutex": 6,
                "word: registry": 71,
                "word: sourcemap": 38,
                "word: rwmutex": 15,
                "word: userinfo": 6,
                "word: addressfamily": 1,
                "word: assigndecimal": 2,
                "word: convertibleto": 13,
                "word: creationflags": 1,
                "word: dateprototype": 1,
                "word: fileindexhigh": 1,
                "word: findallstring": 3,
                "word: gccpufraction": 1,
                "word: inherithandle": 1,
                "word: interfacedata": 3,
                "word: lastwritetime": 2,
                "word: literalprefix": 2,
                "word: lookupaccount": 2,
                "word: maketypeerror": 3,
                "word: marshalbinary": 7,
                "word: numberoflinks": 1,
                "word: overflowfloat": 4,
                "word: parameterlist": 3,
                "word: protocolchain": 1,
                "word: providerflags": 1,
                "word: serviceflags": 4,
                "word: setdwordvalue": 3,
                "word: setentrypoint": 2,
                "word: setexpression": 2,
                "word: setqwordvalue": 3,
                "word: setsockoptint": 3,
                "word: unmarshaljson": 2,
                "word: unmarshaltext": 2,
                "word: withsourcemap": 2,
                "word: zeroreadiseof": 1,
                "word: applycomments": 2,
                "word: cgocallersuse": 1,
                "word: checknonempty": 2,
                "word: compilesingle": 2,
                "word: constructsafe": 3,
                "word: convertnumber": 2,
                "word: createbinding": 4,
                "word: decodequantum": 2,
                "word: deletebinding": 4,
                "word: evaluatebreak": 2,
                "word: exceptioncode": 1,
                "word: firstzoneused": 2,
                "word: footerwritten": 2,
                "word: futurekeyword": 1,
                "word: gcassistbytes": 1,
                "word: handlemethods": 2,
                "word: headerwritten": 2,
                "word: incrnoverflow": 2,
                "word: indirectvalue": 2,
                "word: ischeckmarked": 3,
                "word: isspanintreap": 1,
                "word: leadingregexp": 2,
                "word: leadingstring": 2,
                "word: markstarttime": 1,
                "word: missingmethod": 1,
                "word: needkeyupdate": 2,
                "word: needsscavenge": 2,
                "word: newbaseobject": 2,
                "word: newdateobject": 2,
                "word: newrangeerror": 2,
                "word: newtypebuffer": 1,
                "word: nextfreeindex": 2,
                "word: nextstatement": 2,
                "word: oldbucketmask": 2,
                "word: panicurierror": 2,
                "word: parsefunction": 3,
                "word: popparsestate": 2,
                "word: propertynames": 2,
                "word: propertyorder": 1,
                "word: reclaimcredit": 1,
                "word: safepointnote": 1,
                "word: safepointwait": 2,
                "word: skipsyncnotif": 1,
                "word: sourcerooturl": 1,
                "word: startingtrace": 1,
                "word: vectorcontrol": 1,
                "word: waittraceskip": 1,
                "word: stream": 1,
                "word: engine": 131,
                "word: formatter": 1,
                "word: arraytype": 9,
                "word: decbuffer": 8,
                "word: decengine": 12,
                "word: dechelper": 7,
                "word: encbuffer": 7,
                "word: encengine": 1,
                "word: enchelper": 6,
                "word: fieldtype": 5,
                "word: slicetype": 41,
                "word: bytereader": 1,
                "word: readcloser": 1,
                "word: readerfrom": 1,
                "word: runereader": 3,
                "word: iosrvreq": 2,
                "word: polldesc": 9,
                "word: lessswap": 1,
                "word: readonly": 1,
                "word: instop": 3,
                "word: ranges": 8,
                "word: duration": 20,
                "word: arrayprototype": 1,
                "word: callerlocation": 3,
                "word: catalogentryid": 1,
                "word: encodetostring": 2,
                "word: errorprototype": 1,
                "word: fileattributes": 1,
                "word: getbinaryvalue": 3,
                "word: getstringvalue": 3,
                "word: lastaccesstime": 1,
                "word: makerangeerror": 3,
                "word: readvaluenames": 3,
                "word: referenceerror": 1,
                "word: replaceallfunc": 3,
                "word: resetlinebreak": 2,
                "word: roundedinteger": 2,
                "word: securityscheme": 1,
                "word: setbinaryvalue": 3,
                "word: setstringvalue": 5,
                "word: textmarshalert": 1,
                "word: statementnode": 41,
                "word: addtimerlocked": 3,
                "word: allocationbase": 1,
                "word: allocfreetrace": 2,
                "word: arenahintalloc": 1,
                "word: arrayinterface": 2,
                "word: cancheckprefix": 4,
                "word: runoreval": 3,
                "word: compatibletype": 2,
                "word: convertnumeric": 2,
                "word: createoverflow": 2,
                "word: decignoreopfor": 8,
                "word: defineproperty": 3,
                "word: deltimerlocked": 3,
                "word: enumeratevalue": 2,
                "word: evaluatedivide": 2,
                "word: evaluatemodulo": 1,
                "word: exceptionflags": 1,
                "word: freespanlocked": 6,
                "word: gcbgmarkworker": 4,
                "word: gcstoptheworld": 2,
                "word: getownproperty": 2,
                "word: gobdecodeopfor": 3,
                "word: hasownproperty": 3,
                "word: hashmightpanic": 2,
                "word: heaparenaalloc": 1,
                "word: increfandclose": 2,
                "word: isnumberobject": 1,
                "word: isstringobject": 1,
                "word: manualfreelist": 1,
                "word: maxbitstatelen": 2,
                "word: mustbeexported": 2,
                "word: newarrayobject": 2,
                "word: newclassobject": 2,
                "word: newerrorobject": 3,
                "word: newgomapobject": 3,
                "word: newobjectstash": 2,
                "word: newsyntaxerror": 2,
                "word: offsetencoding": 1,
                "word: panictypeerror": 2,
                "word: parseclasschar": 2,
                "word: parsedotmember": 2,
                "word: parseperlflags": 2,
                "word: parsestatement": 4,
                "word: physpagebounds": 2,
                "word: prefixcomplete": 1,
                "word: primitivevalue": 2,
                "word: procresizetime": 1,
                "word: pushparsestate": 2,
                "word: readbyteoffset": 1,
                "word: runsafepointfn": 2,
                "word: scanidentifier": 2,
                "word: scavengecredit": 1,
                "word: sendactualtype": 2,
                "word: setcheckmarked": 2,
                "word: skipwhitespace": 2,
                "word: sysblocktraced": 1,
                "word: timeoutmonitor": 3,
                "word: toreflectvalue": 2,
                "word: tracebufheader": 2,
                "word: tracereclaimed": 1,
                "word: truncatestring": 2,
                "word: tryloadorstore": 2,
                "word: valueinterface": 3,
                "word: vectorregister": 1,
                "word: writeblockhuff": 1,
                "word: memorymodule": 21,
                "word: resetter": 1,
                "word: gostringer": 1,
                "word: gobdecoder": 2,
                "word: gobencoder": 1,
                "word: structtype": 46,
                "word: writecloser": 1,
                "word: marshaler": 2,
                "word: jsonerror": 3,
                "word: compiler": 18,
                "word: ecmatime": 3,
                "word: operation": 13,
                "word: rngsource": 4,
                "word: machine": 8,
                "word: dbgvar": 7,
                "word: gqueue": 14,
                "word: gcbits": 5,
                "word: gcmode": 4,
                "word: gcwork": 14,
                "word: lfnode": 3,
                "word: mtreap": 10,
                "word: mstats": 4,
                "word: schedt": 1,
                "word: sigset": 1,
                "word: tmpbuf": 1,
                "word: waitgroup": 10,
                "word: poollocal": 3,
                "word: emptyop": 2,
                "word: ipmreq": 2,
                "word: wsabuf": 4,
                "word: zonetrans": 7,
                "word: keyword": 10,
                "word: unsafe": 35,
                "word: windows": 116,
                "word: wsamsg": 3,
                "word: debuggerenabled": 1,
                "word: declarationlist": 3,
                "word: fieldbynamefunc": 16,
                "word: findallsubmatch": 3,
                "word: findreaderindex": 2,
                "word: findstringindex": 2,
                "word: getintegervalue": 3,
                "word: getstringsvalue": 3,
                "word: leftparenthesis": 1,
                "word: makecustomerror": 3,
                "word: makesyntaxerror": 3,
                "word: matchemptywidth": 3,
                "word: maxvaluenamelen": 1,
                "word: numberprototype": 1,
                "word: objectprototype": 1,
                "word: overflowcomplex": 3,
                "word: postprocessnode": 2,
                "word: processremoteio": 2,
                "word: readsubkeynames": 3,
                "word: regexpprototype": 1,
                "word: setrandomsource": 3,
                "word: setreaddeadline": 5,
                "word: setstringsvalue": 3,
                "word: shortestdecimal": 2,
                "word: stringprototype": 1,
                "word: unmarshalbinary": 7,
                "word: expressionnode": 40,
                "word: adderrorcontext": 2,
                "word: allocspanlocked": 2,
                "word: codegenencoding": 1,
                "word: decodeinterface": 2,
                "word: dwprocessortype": 1,
                "word: encodeinterface": 2,
                "word: errorunexpected": 2,
                "word: exceptionrecord": 2,
                "word: exportedmethods": 3,
                "word: formatwithstack": 2,
                "word: fraction": 1,
                "word: generatecodegen": 1,
                "word: getdecengineptr": 2,
                "word: ignoreinterface": 2,
                "word: initialheaplive": 5,
                "word: insertsemicolon": 1,
                "word: isbooleanobject": 1,
                "word: lastbranchtorip": 1,
                "word: literalencoding": 1,
                "word: lookupfirstzone": 2,
                "word: markbitsforbase": 2,
                "word: newdecoderstate": 2,
                "word: newencoderstate": 2,
                "word: newnodefunction": 2,
                "word: newnumberobject": 2,
                "word: newregexpobject": 2,
                "word: newstringobject": 3,
                "word: objectinterface": 2,
                "word: pagessweptbasis": 1,
                "word: panicrangeerror": 2,
                "word: parseexpression": 4,
                "word: parseidentifier": 2,
                "word: parsenamedclass": 2,
                "word: parserightparen": 2,
                "word: persistentalloc": 7,
                "word: prepareforsweep": 3,
                "word: recoveryhandler": 2,
                "word: scavengelargest": 2,
                "word: stackworkbufhdr": 2,
                "word: swapverticalbar": 2,
                "word: thisclassobject": 2,
                "word: typeerrorresult": 2,
                "word: unexpungelocked": 2,
                "word: wprocessorlevel": 1,
                "word: fmtsort": 12,
                "word: testlog": 6,
                "word: declaration": 3,
                "word: ifstatement": 6,
                "word: nullliteral": 6,
                "word: dbgfunction": 3,
                "word: emitlogger": 3,
                "word: emitwriter": 3,
                "word: byliteral": 8,
                "word: levelinfo": 3,
                "word: emptystruct": 1,
                "word: stringwriter": 1,
                "word: mapencoder": 5,
                "word: ptrencoder": 4,
                "word: tagoptions": 3,
                "word: processstate": 19,
                "word: syscallerror": 5,
                "word: exception": 2,
                "word: mapiter": 8,
                "word: imethod": 4,
                "word: ptrtype": 34,
                "word: typealg": 4,
                "word: bitstate": 4,
                "word: lazyflag": 3,
                "word: evacdst": 3,
                "word: funcinl": 3,
                "word: functab": 2,
                "word: funcval": 3,
                "word: lfstack": 13,
                "word: workbuf": 3,
                "word: decimal": 15,
                "word: builder": 15,
                "word: lazydll": 7,
                "word: wsadata": 3,
                "word: parseerror": 4,
                "word: escapeerror": 3,
                "word: binarymarshalert": 1,
                "word: booleanprototype": 1,
                "word: declarenamespace": 2,
                "word: networkbyteorder": 1,
                "word: providerreserved": 1,
                "word: replaceallstring": 3,
                "word: resolvereference": 2,
                "word: rightparenthesis": 1,
                "word: setwritedeadline": 5,
                "word: setsockoptipmreq": 3,
                "word: setsockoptlinger": 3,
                "word: declarationnode": 3,
                "word: appendnametopath": 1,
                "word: decodegobdecoder": 2,
                "word: encodegobencoder": 2,
                "word: enterglobalscope": 2,
                "word: evaluatemultiply": 1,
                "word: exceptionaddress": 1,
                "word: freedecoderstate": 2,
                "word: freeencoderstate": 2,
                "word: gcmarkworkermode": 3,
                "word: gcshrinkstackoff": 2,
                "word: ignoregobdecoder": 2,
                "word: isdatadescriptor": 2,
                "word: nanotime": 3,
                "word: literalinterface": 2,
                "word: markbitsforindex": 2,
                "word: markworkerlabels": 2,
                "word: mustbeassignable": 2,
                "word: nflushcacheroots": 4,
                "word: newbooleanobject": 2,
                "word: newboundfunction": 2,
                "word: newfunctionstash": 2,
                "word: newgoarrayobject": 3,
                "word: newgosliceobject": 3,
                "word: numberparameters": 1,
                "word: panicsyntaxerror": 2,
                "word: parseifstatement": 2,
                "word: parseverticalbar": 2,
                "word: refillalloccache": 2,
                "word: replacerfunction": 1,
                "word: trycatchevaluate": 3,
                "word: tryexpungelocked": 2,
                "word: trygrowbyreslice": 3,
                "word: writefixedheader": 1,
                "word: keysizeerror": 3,
                "word: aesciphergcm": 5,
                "word: arrayliteral": 4,
                "word: badstatement": 4,
                "word: forstatement": 6,
                "word: trystatement": 6,
                "word: cachelinepad": 6,
                "word: nativevar": 10,
                "word: decoderstate": 4,
                "word: encoderstate": 7,
                "word: usertypeinfo": 5,
                "word: limitedreader": 4,
                "word: unmarshaler": 1,
                "word: decodestate": 19,
                "word: encodestate": 29,
                "word: encoderfunc": 2,
                "word: dateobject": 9,
                "word: numberkind": 1,
                "word: resultkind": 1,
                "word: stringwide": 7,
                "word: errorlist": 15,
                "word: cachekey": 1,
                "word: runeslice": 7,
                "word: keyinfo": 2,
                "word: memstats": 3,
                "word: arenaidx": 4,
                "word: chantype": 1,
                "word: divmagic": 3,
                "word: finblock": 3,
                "word: fixalloc": 6,
                "word: guintptr": 7,
                "word: heapbits": 13,
                "word: mapextra": 1,
                "word: markbits": 7,
                "word: muintptr": 6,
                "word: parkinfo": 1,
                "word: puintptr": 3,
                "word: semaroot": 16,
                "word: stackmap": 3,
                "word: stkframe": 3,
                "word: textsect": 2,
                "word: stringslice": 11,
                "word: numerror": 4,
                "word: extfloat": 25,
                "word: asciiset": 3,
                "word: errorcode": 3,
                "word: chargroup": 5,
                "word: patchlist": 4,
                "word: dllerror": 4,
                "word: filetime": 2,
                "word: lazyproc": 8,
                "word: foldpair": 3,
                "word: acceptrange": 3,
                "word: alternatefilename": 1,
                "word: findsubmatchindex": 2,
                "word: functionprototype": 1,
                "word: getmuistringvalue": 3,
                "word: protocolmaxoffset": 1,
                "word: replaceallliteral": 3,
                "word: urierrorprototype": 1,
                "word: allocbitsforindex": 2,
                "word: allocationprotect": 1,
                "word: assistworkperbyte": 1,
                "word: parseorthrow": 2,
                "word: decodearrayhelper": 2,
                "word: dedicatedmarktime": 1,
                "word: defineownproperty": 2,
                "word: forwardorboundary": 2,
                "word: ignorearrayhelper": 2,
                "word: implicitsemicolon": 1,
                "word: initcheckmarkspan": 2,
                "word: lastbranchfromrip": 1,
                "word: newgostructobject": 3,
                "word: newnativefunction": 2,
                "word: newreferenceerror": 2,
                "word: optionalsemicolon": 2,
                "word: parseargumentlist": 2,
                "word: parsearrayliteral": 2,
                "word: parsetrystatement": 2,
                "word: parseunicodeclass": 2,
                "word: poollocalinternal": 4,
                "word: regularexpression": 1,
                "word: stackobjectbufhdr": 2,
                "word: sweeppagesperbyte": 1,
                "word: writeblockdynamic": 1,
                "word: writestoredheader": 1,
                "word: badexpression": 4,
                "word: casestatement": 6,
                "word: dotexpression": 6,
                "word: newexpression": 4,
                "word: numberliteral": 6,
                "word: objectliteral": 4,
                "word: regexpliteral": 6,
                "word: stringliteral": 6,
                "word: withstatement": 6,
                "word: nativefunc": 8,
                "word: nativetype": 9,
                "word: dictdecoder": 11,
                "word: literalnode": 4,
                "word: sortedmap": 4,
                "word: arrayencoder": 4,
                "word: floatencoder": 4,
                "word: sliceencoder": 4,
                "word: functioncall": 12,
                "word: gomapobject": 3,
                "word: nodeliteral": 4,
                "word: nodeprogram": 5,
                "word: stringascii": 7,
                "word: timeouterror": 4,
                "word: lockedsource": 8,
                "word: structtag": 5,
                "word: bitvector": 5,
                "word: fieldscan": 4,
                "word: layoutkey": 1,
                "word: inputbytes": 6,
                "word: typepair": 6,
                "word: arenahint": 3,
                "word: finalizer": 5,
                "word: gctrigger": 4,
                "word: gclinkptr": 2,
                "word: heaparena": 7,
                "word: mspanlist": 23,
                "word: memrecord": 1,
                "word: notinheap": 4,
                "word: pollcache": 3,
                "word: ptabentry": 2,
                "word: sweepdata": 3,
                "word: treapiter": 5,
                "word: treapnode": 6,
                "word: mapping": 2,
                "word: floatinfo": 3,
                "word: leftcheat": 7,
                "word: tokenuser": 4,
                "word: syslinger": 1,
                "word: caserange": 3,
                "word: evalerrorprototype": 1,
                "word: findallstringindex": 3,
                "word: findstringsubmatch": 2,
                "word: securitydescriptor": 1,
                "word: setdebuggerhandler": 3,
                "word: setstackdepthlimit": 3,
                "word: setstacktracelimit": 3,
                "word: setsockoptipv": 2,
                "word: typeerrorprototype": 1,
                "word: volumeserialnumber": 1,
                "word: assistbytesperwork": 1,
                "word: clearcheckmarkspan": 2,
                "word: decodeignoredvalue": 2,
                "word: decodetypesequence": 2,
                "word: enterfunctionscope": 2,
                "word: fractionalmarktime": 1,
                "word: getignoreengineptr": 2,
                "word: havetemplatethread": 4,
                "word: lastexceptiontorip": 1,
                "word: newargumentsobject": 2,
                "word: newprimitiveobject": 2,
                "word: parsebracketmember": 2,
                "word: parsecasestatement": 2,
                "word: parsefunctionblock": 3,
                "word: parsenewexpression": 2,
                "word: parseobjectliteral": 2,
                "word: parseparameterlist": 1,
                "word: parseregexpliteral": 2,
                "word: parsesourceelement": 2,
                "word: parsestatementlist": 2,
                "word: parsewithstatement": 2,
                "word: scannumericliteral": 2,
                "word: sendtypedescriptor": 2,
                "word: setmarkednonatomic": 2,
                "word: skiplinewhitespace": 1,
                "word: sweepheaplivebasis": 1,
                "word: tracebackancestors": 2,
                "word: wprocessorrevision": 1,
                "word: writedynamicheader": 1,
                "word: blockstatement": 4,
                "word: booleanliteral": 6,
                "word: callexpression": 4,
                "word: catchstatement": 6,
                "word: emptystatement": 4,
                "word: forinstatement": 6,
                "word: thisexpression": 4,
                "word: throwstatement": 6,
                "word: whilestatement": 6,
                "word: nativeconst": 10,
                "word: nativefield": 7,
                "word: errorstring": 7,
                "word: gobencodertype": 8,
                "word: structencoder": 4,
                "word: unquotedvalue": 1,
                "word: nodeproperty": 4,
                "word: regexpobject": 3,
                "word: stringobject": 1,
                "word: valueerror": 4,
                "word: layouttype": 1,
                "word: inputreader": 8,
                "word: inputstring": 6,
                "word: onepassinst": 6,
                "word: onepassprog": 3,
                "word: adjustinfo": 1,
                "word: buckettype": 1,
                "word: gcsweepbuf": 11,
                "word: mspanstate": 1,
                "word: moduledata": 3,
                "word: modulehash": 4,
                "word: overlapped": 5,
                "word: plainerror": 5,
                "word: randomenum": 4,
                "word: systeminfo": 1,
                "word: tracealloc": 4,
                "word: tracestack": 4,
                "word: consumer": 8,
                "word: waitstatus": 19,
                "word: rangetable": 6,
                "word: assigncomputebounds": 2,
                "word: importnativepackage": 2,
                "word: rangeerrorprototype": 1,
                "word: setsockoptinet": 3,
                "word: calculatecomparison": 2,
                "word: compileignoresingle": 2,
                "word: indexofargumentname": 1,
                "word: isgenericdescriptor": 2,
                "word: newdeclarationstash": 2,
                "word: panicreferenceerror": 2,
                "word: parseblockstatement": 2,
                "word: parsebreakstatement": 2,
                "word: parsecallexpression": 2,
                "word: parseemptystatement": 2,
                "word: parseobjectproperty": 2,
                "word: parsesourceelements": 2,
                "word: parsethrowstatement": 2,
                "word: parsewhilestatement": 2,
                "word: removeleadingregexp": 2,
                "word: removeleadingstring": 2,
                "word: specialprofilealloc": 1,
                "word: branchstatement": 4,
                "word: commentposition": 6,
                "word: emptyexpression": 4,
                "word: functionliteral": 4,
                "word: returnstatement": 6,
                "word: switchstatement": 4,
                "word: unaryexpression": 6,
                "word: streamreader": 5,
                "word: slicing": 1,
                "word: internalerror": 3,
                "word: marshalererror": 4,
                "word: mdwsfynznnmxjn": 33,
                "word: puhpxolpievqqd": 31,
                "word: tczdeduuyiatuk": 28,
                "word: xxikhrpruwkjzf": 21,
                "word: goarrayobject": 5,
                "word: gosliceobject": 3,
                "word: nodestatement": 7,
                "word: structfield": 11,
                "word: methodvalue": 1,
                "word: sliceheader": 2,
                "word: queueonepass": 9,
                "word: blockrecord": 1,
                "word: gcbitsarena": 6,
                "word: linearalloc": 2,
                "word: randomorder": 3,
                "word: stackobject": 4,
                "word: stdfunction": 1,
                "word: tracebufptr": 8,
                "word: rawsockaddr": 1,
                "word: sysprocattr": 3,
                "word: compilewithsourcemap": 2,
                "word: findallsubmatchindex": 3,
                "word: gettokenprimarygroup": 3,
                "word: replaceallstringfunc": 3,
                "word: setexpandstringvalue": 3,
                "word: syntaxerrorprototype": 1,
                "word: convertcallparameter": 6,
                "word: dwnumberofprocessors": 1,
                "word: errorunexpectedtoken": 2,
                "word: exceptioninformation": 1,
                "word: findrunnablegcworker": 3,
                "word: gcfractionalmarktime": 1,
                "word: indexofparametername": 1,
                "word: isaccessordescriptor": 2,
                "word: lastexceptionfromrip": 1,
                "word: parseperlclassescape": 2,
                "word: parsereturnstatement": 2,
                "word: parseshiftexpression": 3,
                "word: parseswitchstatement": 3,
                "word: parseunaryexpression": 3,
                "word: readmultilinecomment": 2,
                "word: retrieveassetasbytes": 3,
                "word: skipmultilinecomment": 2,
                "word: assignexpression": 6,
                "word: binaryexpression": 6,
                "word: dowhilestatement": 6,
                "word: nativepackage": 8,
                "word: huffmandecoder": 2,
                "word: huffmanencoder": 4,
                "word: invalidbyteerror": 3,
                "word: condaddrencoder": 4,
                "word: gostructobject": 4,
                "word: lessthanresult": 7,
                "word: nativefunction": 1,
                "word: nodeexpression": 6,
                "word: nodeidentifier": 4,
                "word: propertygetset": 1,
                "word: stashreference": 7,
                "word: makefuncimpl": 1,
                "word: stringheader": 1,
                "word: uncommontype": 9,
                "word: ancestorinfo": 2,
                "word: forcegcstate": 3,
                "word: gcdrainflags": 1,
                "word: gsignalstack": 1,
                "word: pcvaluecache": 1,
                "word: stackworkbuf": 1,
                "word: stringstruct": 1,
                "word: decimalslice": 3,
                "word: sockaddrunix": 4,
                "word: invalidhosterror": 3,
                "word: findallstringsubmatch": 3,
                "word: importstandardlibrary": 2,
                "word: loadscriptwithtimeout": 2,
                "word: assignencodingandsize": 2,
                "word: disallowunknownfields": 1,
                "word: dwactiveprocessormask": 1,
                "word: evaluatebreakcontinue": 2,
                "word: gcmarkworkerstarttime": 1,
                "word: newnodefunctionobject": 3,
                "word: parsedowhilestatement": 3,
                "word: readsinglelinecomment": 2,
                "word: retrieveassetasstring": 3,
                "word: skipsinglelinecomment": 2,
                "word: specialfinalizeralloc": 1,
                "word: bracketexpression": 6,
                "word: debuggerstatement": 4,
                "word: functionstatement": 4,
                "word: labelledstatement": 6,
                "word: variablestatement": 4,
                "word: argumentsobject": 5,
                "word: nodedeclaration": 4,
                "word: nodeifstatement": 6,
                "word: interfacetype": 33,
                "word: onepassmachine": 1,
                "word: gctriggerkind": 1,
                "word: itabtabletype": 5,
                "word: stackfreelist": 3,
                "word: tracestackptr": 3,
                "word: sockaddrinet": 6,
                "word: finddata": 4,
                "word: nodefunction": 2,
                "word: frompropertydescriptor": 2,
                "word: newboundfunctionobject": 2,
                "word: parsecontinuestatement": 2,
                "word: parsedebuggerstatement": 2,
                "word: parsefunctionstatement": 2,
                "word: parseobjectpropertykey": 2,
                "word: parsepostfixexpression": 2,
                "word: parseprimaryexpression": 2,
                "word: parsevariablestatement": 2,
                "word: vmretrieveassetasbytes": 1,
                "word: sequenceexpression": 4,
                "word: variableexpression": 8,
                "word: textmarshaler": 1,
                "word: huffmanbitwriter": 1,
                "word: reflectwithstring": 6,
                "word: defaultvaluehint": 2,
                "word: nodearrayliteral": 4,
                "word: nodeforstatement": 4,
                "word: nodetrystatement": 10,
                "word: emptyinterface": 1,
                "word: functypefixed": 204,
                "word: cgothreadstart": 1,
                "word: memrecordcycle": 4,
                "word: stackobjectbuf": 1,
                "word: stackscanstate": 7,
                "word: rawsockaddrany": 6,
                "word: callfunctionwithtimeout": 2,
                "word: findreadersubmatchindex": 2,
                "word: findstringsubmatchindex": 2,
                "word: getuserprofiledirectory": 4,
                "word: referenceerrorprototype": 1,
                "word: replaceallliteralstring": 3,
                "word: sources": 2,
                "word: dwallocationgranularity": 1,
                "word: newnativefunctionobject": 5,
                "word: parseadditiveexpression": 3,
                "word: parseequalityexpression": 3,
                "word: parseiterationstatement": 3,
                "word: vmretrieveassetasstring": 1,
                "word: expressionstatement": 4,
                "word: functiondeclaration": 4,
                "word: variabledeclaration": 4,
                "word: corruptinputerror": 6,
                "word: unmarshaltypeerror": 4,
                "word: constructfunction": 1,
                "word: nodecasestatement": 4,
                "word: nodedotexpression": 6,
                "word: nodenewexpression": 4,
                "word: nodeobjectliteral": 5,
                "word: noderegexpliteral": 4,
                "word: nodewithstatement": 7,
                "word: propertyreference": 7,
                "word: cgotracebackarg": 1,
                "word: overlappedentry": 7,
                "word: pcvaluecacheent": 5,
                "word: tracestacktable": 7,
                "word: rawsockaddrunix": 1,
                "word: wsaprotocolinfo": 3,
                "word: parsebitwiseorexpression": 3,
                "word: parsefororforinstatement": 2,
                "word: parselogicalorexpression": 2,
                "word: parsevariabledeclaration": 2,
                "word: binarymarshaler": 1,
                "word: textunmarshaler": 1,
                "word: bindfunctionobject": 2,
                "word: nodeblockstatement": 2,
                "word: nodecallexpression": 5,
                "word: nodecatchstatement": 4,
                "word: nodeemptystatement": 2,
                "word: nodeforinstatement": 5,
                "word: nodefunctionobject": 3,
                "word: nodethisexpression": 2,
                "word: nodethrowstatement": 2,
                "word: nodewhilestatement": 4,
                "word: memprofilerecord": 4,
                "word: cgosymbolizerarg": 1,
                "word: semaprofileflags": 1,
                "word: specialfinalizer": 3,
                "word: rawsockaddrinet": 2,
                "word: sidandattributes": 3,
                "word: wsaprotocolchain": 1,
                "word: calculatebinaryexpression": 2,
                "word: evaluate": 64,
                "word: fractionalutilizationgoal": 1,
                "word: parseassignmentexpression": 3,
                "word: parsebitwiseandexpression": 3,
                "word: parseconditionlexpression": 2,
                "word: parselogicalandexpression": 3,
                "word: parserelationalexpression": 4,
                "word: conditionalexpression": 6,
                "word: unsupportedtypeerror": 2,
                "word: nodebranchstatement": 4,
                "word: nodefunctionliteral": 3,
                "word: nodereturnstatement": 2,
                "word: nodeswitchstatement": 4,
                "word: nodeunaryexpression": 6,
                "word: gccontrollerstate": 9,
                "word: sliceinterfaceptr": 1,
                "word: stackobjectrecord": 2,
                "word: tokenprimarygroup": 2,
                "word: findallstringsubmatchindex": 3,
                "word: getfileinformationbyhandle": 3,
                "word: dedicatedmarkworkersneeded": 1,
                "word: parsefunctionparameterlist": 2,
                "word: binaryunmarshaler": 1,
                "word: invalidunmarshalerror": 2,
                "word: unsupportedvalueerror": 4,
                "word: nativefunctionobject": 1,
                "word: nodeassignexpression": 6,
                "word: nodebinaryexpression": 8,
                "word: nodedowhilestatement": 4,
                "word: blockprofilerecord": 2,
                "word: typeassertionerror": 5,
                "word: stringinterfaceptr": 1,
                "word: traceallocblockptr": 2,
                "word: interfaceptr": 3,
                "word: securityattributes": 3,
                "word: mdwsfynznnmxjneepplozdykcco": 3,
                "word: mdwsfynznnmxjnlnuklrenitrog": 3,
                "word: mdwsfynznnmxjnoorzmqubrdpni": 3,
                "word: mdwsfynznnmxjnpsyhdefdztdqa": 3,
                "word: mdwsfynznnmxjnqvaojqysxlstf": 3,
                "word: mdwsfynznnmxjnqxmhuwncqpneo": 3,
                "word: mdwsfynznnmxjnvrhacewiovsxs": 3,
                "word: mdwsfynznnmxjnwwawshzulfgws": 3,
                "word: puhpxolpievqqddtgpmtbwuvvpb": 3,
                "word: puhpxolpievqqdeiardeirstedr": 3,
                "word: puhpxolpievqqdekmffiriuxqpx": 3,
                "word: puhpxolpievqqdgxutshlxfjpvy": 3,
                "word: puhpxolpievqqduuzoigzhyintl": 3,
                "word: puhpxolpievqqdwfymdlroicziy": 3,
                "word: puhpxolpievqqdynwfrvrbtypgg": 3,
                "word: tczdeduuyiatukafoagiwspbccx": 3,
                "word: tczdeduuyiatukbfepixynnrvdn": 3,
                "word: tczdeduuyiatukcjmfkyqclgfai": 3,
                "word: tczdeduuyiatukhdugzaauogsuv": 3,
                "word: tczdeduuyiatukncduxupvexcoy": 3,
                "word: tczdeduuyiatukufoqskphiffpb": 3,
                "word: tczdeduuyiatukzqhilbkohzoii": 3,
                "word: xxikhrpruwkjzfidmxsripglcic": 3,
                "word: xxikhrpruwkjzfppneqhchqybif": 3,
                "word: lpmaximumapplicationaddress": 1,
                "word: lpminimumapplicationaddress": 1,
                "word: parselefthandsideexpression": 2,
                "word: github": 1455,
                "word: robertkrimen": 1379,
                "word: nodebracketexpression": 6,
                "word: nodedebuggerstatement": 2,
                "word: nodelabelledstatement": 4,
                "word: nodevariablestatement": 2,
                "word: timezoneinformation": 1,
                "word: parsevariabledeclarationlist": 2,
                "word: nodesequenceexpression": 4,
                "word: nodevariableexpression": 6,
                "word: sourceroot": 2,
                "word: parsemultiplicativeexpression": 3,
                "word: newlinefilteringreader": 2,
                "word: ulonglong": 1,
                "word: nodeexpressionstatement": 2,
                "word: mdwsfynznnmxjnpuvpvgxibhbwpgud": 3,
                "word: mdwsfynznnmxjnuoswgsghhncghlat": 3,
                "word: mdwsfynznnmxjnzkxhdlxuppzvjcbb": 3,
                "word: puhpxolpievqqddsnwletsdroskjad": 3,
                "word: puhpxolpievqqdpnxtuiqflgtdohgv": 3,
                "word: puhpxolpievqqdxngjsmvxvwogrsrs": 3,
                "word: tczdeduuyiatukuownfydiwwwygmoc": 3,
                "word: xxikhrpruwkjzfcjjlakgmzskllqzj": 3,
                "word: xxikhrpruwkjzfokjuqhscbxexnken": 3,
                "word: xxikhrpruwkjzfszduzowdpvztpagw": 3,
                "word: builtinjson": 12,
                "word: parsecontext": 2,
                "word: memorybasicinformation": 3,
                "word: fileattributedata": 1,
                "word: nodestatementlist": 2,
                "word: nodeconditionalexpression": 6,
                "word: byhandlefileinformation": 2,
                "word: attribute": 1,
                "word: parsebitwiseexclusiveorexpression": 3,
                "word: gscript": 77,
                "word: hmemorymodule": 1,
                "word: stringifycontext": 2,
                "word: parselefthandsideexpressionallowcall": 3,
                "word: cefglmnpsz": 1,
                "word: cccfcocsdoiflllmloltlumcmemnndnlnoospipcpdpepfpipopsscsksmsoyizlzpzs": 1,
                "word: ifinmsnsoss": 1,
                "word: adtastapraugbstcatcdtcetcstdecdlteatedteeteofestfebforfrigmthdthsthanidtistjstjanjuljunkstkeyln": 1,
                "word: laomdtmskmstmarmaymonmrondtnstnulnannkonovoctop": 1,
                "word: pdtpktpstsatsepstdsunthutueutcvaiwatwetwed": 1,
                "word: absadxaesavxcosdaydirendexpfmaforgc": 1,
                "word: infintip": 1,
                "word: letlogmapmaxminnannewnilnowobjos": 1,
                "word: poppowptrsetsintantcptryu": 1,
                "word: acdtacstaedtaestakdtakstarchawstahomargscestcallchamdashdateeestfilefuncg": 1,
                "word: sgogcgoosjsonjulyjunekillln": 1,
                "word: lisumathmiaomodinullnzdtnzstnewasaststatthaiuserwestwith": 1,
                "word: acosasinatanavx": 1,
                "word: basebindbmi": 1,
                "word: boolcallcap": 1,
                "word: caseceilchandeaddropelseenumermsevalexecfailfilefunchouridleinfoint": 1,
                "word: joinjsonkeyskindnamenew": 1,
                "word: nonenullopenpushquitreadsbrkscvgsealseeksomesortsqrtsse": 1,
                "word: synctcp": 1,
                "word: testthistimetrimtruetypeudp": 1,
                "word: uintuservoidwarnwith": 1,
                "word: adlamaprilarraybamumbatakbuhidcall": 1,
                "word: colonerrorfinalframegreekgroupkhmerlog": 1,
                "word: elatinlimbulocalmarchnushuoghamoriyaosagerunicsqrt": 1,
                "word: stermstdintakritamilwhile": 1,
                "word: applyargp": 1,
                "word: arrayatan": 1,
                "word: breakbytescatchchdirchmodchownclasscloseconstdebugerroreveryfalsefaultfloatfloorgcinggob": 1,
                "word: indexinputint": 1,
                "word: isnanmatchmonthntohspanicparseroundrune": 1,
                "word: shiftsleepslicesplitsse": 1,
                "word: stacksuperthrowtraceuint": 1,
                "word: usageuser": 1,
                "word: valuewhilewrite": 1,
                "word: chanarabicaugustbrahmicarianchakmacommoncopticcreatedeployformatframesfridaygoarchgorootgetacpgothichangulhatranhebrewhyphenkaithikhojkilog": 1,
                "word: elepchalycianlydianmondaynumbernumcpunumbero": 1,
                "word: syncobjectregexprejangsched": 1,
                "word: stringsignalstderrstdoutstringsundaysyriactai": 1,
                "word: letangutteluguthaanautc": 1,
                "word: assertbound": 1,
                "word: calleecallerchan": 1,
                "word: charatconcatcreatedeleteefenceempty": 1,
                "word: escapeexportfilterfreezegetdayglobalhangupimportkilledlengthlistenminutenumberobjectpopcntpublicrandomreadatreducereturnrune": 1,
                "word: searchsecondselectsocketsourcesplicestaticstringstructsubstrsweep": 1,
                "word: switchtojsontoken": 1,
                "word: typeofuint": 1,
                "word: avestanbooleanbengalibooleanbraillecommentchandirconvertcopysidcurrentcypriotdeseretdevnullelbasanexecutegodebuggoarraygranthahanunooillegalio": 1,
                "word: waitinstaltinstnopjanuarykeywordkannadaleadingmui": 1,
                "word: dltmui": 1,
                "word: stdmandaicmarchenmodedirmultanimyanmaro": 1,
                "word: truncoctoberosmanyaprocessradicalreaddirsqrt": 1,
                "word: sharadashaviansiddhamsinhalasoyomboswappertagalogtibetantirhutatuesdayunknownwsarecvwsasend": 1,
                "word: engineabortedalt": 1,
                "word: booleanclosurecompilecomplexconnectconsoledefaultextendsfinallyfloat": 1,
                "word: foreachfuntimegctracegetdategettimegetyearindexofinvalidisarraykey": 1,
                "word: messagenop": 1,
                "word: userpackagepanic": 1,
                "word: privatereplacereverserunningruntimesetdatesettimesetyearsignal": 1,
                "word: syscalltimeendtofixeduintptrunknownunshiftvalueofwaitingwindowswriteat": 1,
                "word: nalloc": 1,
                "word: nfreed": 1,
                "word: packed": 1,
                "word: acceptexarmenianbalinesebopomofobuginesecanceliocherokeecompilercyrillicdecemberduployanerrexistethiopicextenderfebruaryfullpathfunctiongeorgiangostringgujaratigurmukhihiraganahostnameinfinityinstfailinstrunejavanesekatakanakayah": 1,
                "word: lilinear": 1,
                "word: alinear": 1,
                "word: bmahajanimemstatsmodepermmodetypenovembero": 1,
                "word: appendo": 1,
                "word: createo": 1,
                "word: rdonlyo": 1,
                "word: wronlyol": 1,
                "word: chikiparseintphags": 1,
                "word: paprocattrreadfileseek": 1,
                "word: curseek": 1,
                "word: endseek": 1,
                "word: setsaturdaytagbanwatai": 1,
                "word: thamtai": 1,
                "word: vietthursdaytifinaghtrailingurierrorugariticwsaioctl": 1,
                "word: acceptexargumentbad": 1,
                "word: instcgocheckcontinuecs": 1,
                "word: debuggerfs": 1,
                "word: functiongethoursgetmonthgo": 1,
                "word: infinityinternalisfiniteisfrozenissealedno": 1,
                "word: anodeno": 1,
                "word: erroroppseudoparseintr": 1,
                "word: rflags": 1,
                "word: runnableruntime": 1,
                "word: scavengesethourssetmonthshutdownstrconv": 1,
                "word: tostringtrimlefttruncateunescapeunknown": 1,
                "word: writablewsaioctl": 1,
                "word: forced": 2,
                "word: defersc": 1,
                "word: threads": 1,
                "word: unknown": 18,
                "word: infinity": 4,
                "word: argumentsbassa": 1,
                "word: vahbhaiksukicallslicecuneiformdiacriticerrclosedevalerrorfindcloseg": 1,
                "word: digitinheritedinstmatchinstrune": 1,
                "word: interfaceinterruptkhudawadilinkerrorlocalfreemax": 1,
                "word: valuemin": 1,
                "word: valuemalayalammongolianmovefilewnabataeanpalmyreneparseboolparseuintpatherrorsamaritanseptembersundanesetypeerrorwsasendtowednesdaywritefile": 1,
                "word: preloadargumentsatomicor": 1,
                "word: indirbus": 1,
                "word: errorchan": 1,
                "word: sendcomplex": 1,
                "word: copystackctxt": 1,
                "word: decodeuriempty": 1,
                "word: urlencodeurifuncargs": 1,
                "word: getutcdayinterfaceinterruptlastindexloader": 1,
                "word: gsmspandeadmspanfreemap": 1,
                "word: smultilineno": 1,
                "word: errorsomitemptypanicwaitpclmulqdqprotectedprototypepsapi": 1,
                "word: dllrecover": 1,
                "word: rwxrwxrwxstringifysubstringtrimrightundefinedunhandled": 1,
                "word: actual": 1,
                "word: gfreecnt": 1,
                "word: runqueue": 1,
                "word: parsing": 2,
                "word: cancelioexcreatefilecreatepipedeprecateddevanagaridnsquery": 1,
                "word: werrinvalidexception": 1,
                "word: gomaxprocsgetifentrygetversionglagoliticidentifierkharoshthilockfileexmanichaeanmodeappendmodedevicemodesetgidmodesetuidmodesocketmodestickyold": 1,
                "word: italicold": 1,
                "word: permicold": 1,
                "word: turkicother": 1,
                "word: mathparsefloatphoenicianrangeerrorsaurashtrawsacleanupwsasocketwwsastartup": 1,
                "word: xdigit": 2,
                "word: atomicand": 1,
                "word: casgstatuscharcodeatcomplex": 1,
                "word: dnsapi": 1,
                "word: dllenumerableexitthreadgetminutesgetsecondsgetutcdategetsockoptgoroutine": 1,
                "word: ignorecaseimplementsinstanceofinvalidptrmspaninuseowner": 1,
                "word: diedparsefloatpreload": 1,
                "word: gsrune": 1,
                "word: gschedtracesemacquiresetminutessetsecondssetutcdatesetsockoptterminatedtracefree": 1,
                "word: tracegc": 3,
                "word: pcupload": 1,
                "word: idleprocs": 1,
                "word: stderr": 1,
                "word: stdout": 1,
                "word: opclosehandlecomment": 1,
                "word: vcreatefilewdeletefilewerrnotexistexitprocessfreelibrarygotracebackgetfiletypeideographicinstcaptureinstruneanymodesymlinkmovefileexwnetshareaddnetsharedelnew": 1,
                "word: luenot": 1,
                "word: definedold": 1,
                "word: persianopenprocesspau": 1,
                "word: hauregclosekeysetfiletimesignwritingsoft": 1,
                "word: dottedstackrecordsyntaxerrorterminatevmvirtuallockwsarecvfromwarang": 1,
                "word: citiwhite": 1,
                "word: clockbad": 1,
                "word: addressbad": 2,
                "word: messagebad": 1,
                "word: timedivbroken": 1,
                "word: pipecgocall": 1,
                "word: nilclobberfreeclosesocketconstructorcreated": 1,
                "word: dllelement": 1,
                "word: environmentfile": 1,
                "word: existsfinal": 1,
                "word: tokenfloat": 1,
                "word: gccheckmarkgetfullyeargetutchoursgetutcmonthgetpeernamegetsocknamei": 1,
                "word: timeoutlastindexoflost": 1,
                "word: mcachemspanmanualmethodargs": 1,
                "word: mswsock": 1,
                "word: dllreducerightreflect": 1,
                "word: setruntime": 2,
                "word: scheddetailsecur": 1,
                "word: dllsetfullyearsetutchourssetutcmonthshell": 1,
                "word: dllshort": 1,
                "word: writetofloat": 1,
                "word: togmtstringtoisostringtolowercasetoprecisiontoutcstringtouppercasetracealloc": 1,
                "word: unreachableuserenv": 1,
                "word: dllvalue": 1,
                "word: mintrigger": 1,
                "word: consumed": 1,
                "word: controlfindnextfilegetaddrinfowgetconsolecpgetlasterrorgetlengthsidgetstdhandlegettemppathwinstaltmatchinvalid": 1,
                "word: datejoin": 1,
                "word: controlloadlibrarywmeetei": 1,
                "word: mayekpahawh": 1,
                "word: hmongprocessstatereadconsolewreverttoselfsetendoffilesora": 1,
                "word: sompengsyloti": 1,
                "word: nagrisyscallerrortransmitfileunlockfileex": 1,
                "word: entrypointabi": 1,
                "word: mismatchadvapi": 1,
                "word: dllaltmatch": 1,
                "word: anynotnl": 1,
                "word: flushgenbad": 1,
                "word: statusbad": 1,
                "word: stackbad": 1,
                "word: recoverycan": 1,
                "word: happencas": 1,
                "word: failedchan": 1,
                "word: receiveconfigurabledumping": 1,
                "word: heapend": 1,
                "word: entersyscallexit": 1,
                "word: fromcharcodegcpacertracehost": 1,
                "word: downillegal": 1,
                "word: seekinvalid": 1,
                "word: slotiphlpapi": 1,
                "word: dllisextensiblekernel": 1,
                "word: dlllfstack": 1,
                "word: pushmadvdontneedmemorymodulenetapi": 1,
                "word: dllreflect": 1,
                "word: copyreleasep": 1,
                "word: buffertodatestringtotimestringunexpected": 1,
                "word: typewirep": 1,
                "word: workers": 1,
                "word: called": 17,
                "word: idlethreads": 1,
                "word: certopenstoreerrnodeadlineerrpermissionfindfirstfilefindnextfilewfreeaddrinfowgc": 1,
                "word: waitmapviewoffilemasaram": 1,
                "word: gondimende": 1,
                "word: kikakuimodeexclusivemodeirregularmodenamedpipemodetemporaryold": 1,
                "word: hungarianpathseparatorregdeletekeywregenumkeyexwregenumvaluewregopenkeyexwterminateselfuri": 1,
                "word: malformedunmatched": 1,
                "word: virtualunlockwriteconsolew": 1,
                "word: statedaltldpsugct": 1,
                "word: exchange": 1,
                "word: fullfatal": 1,
                "word: gettypeinfo": 2,
                "word: getutcminutesgetutcsecondsgethostbynamegetservbynameinvalid": 1,
                "word: isprototypeoflen": 1,
                "word: resetload": 1,
                "word: failedlocalecomparenil": 1,
                "word: stackbasenot": 1,
                "word: availableout": 1,
                "word: memoryparsing": 1,
                "word: setutcminutessetutcsecondssrmount": 1,
                "word: errorstill": 1,
                "word: listtimer": 1,
                "word: expiredtoboolean": 1,
                "word: toexponentialtriggerratio": 1,
                "word: failedxchg": 1,
                "word: failed": 27,
                "word: progsize": 1,
                "word: procedure": 1,
                "word: untyped": 2,
                "word: certclosestorecomputernameexcreateprocesswcryptgenrandomfindfirstfilewformatmessagewgc": 1,
                "word: assist": 3,
                "word: waitgc": 1,
                "word: worker": 2,
                "word: initgetconsolemodegetprocaddressgetusernameexwinstemptywidthmb": 1,
                "word: allocated": 4,
                "word: mdwsfynznnmxjnmemprofileratemodechardevicenetusergetinfoother": 1,
                "word: startpuhpxolpievqqdpattern": 1,
                "word: syntaxprocess": 1,
                "word: nextwquotation": 1,
                "word: markreferenceerrorregsetvalueexwscript": 1,
                "word: timeoutsetfilepointertczdeduuyiatuktranslatenamewxxikhrpruwkjzf": 1,
                "word: allocfreetracebad": 1,
                "word: alloccountbad": 1,
                "word: statebad": 1,
                "word: sizedefinepropertyerror": 1,
                "word: largefinalizer": 1,
                "word: waitgcstoptheworldgetprototypeofgetutcfullyeargetprotobynamehasownpropertyinvalid": 1,
                "word: sourceinvalid": 1,
                "word: syntaxis": 1,
                "word: directorykey": 1,
                "word: wronglevel": 1,
                "word: haltedlevel": 1,
                "word: haltednil": 1,
                "word: module": 2,
                "word: datano": 1,
                "word: deviceprotocol": 1,
                "word: errorruntime": 3,
                "word: queuesetutcfullyearstack": 1,
                "word: overflowstopm": 1,
                "word: spinningstore": 1,
                "word: failedsync": 1,
                "word: waittext": 1,
                "word: busytolocalestringtoo": 1,
                "word: linkstoo": 1,
                "word: usersunexpected": 1,
                "word: eofunknown": 1,
                "word: methodunreachable": 1,
                "word: pointerwinapi": 1,
                "word: digitcreatehardlinkwdeviceiocontrolduplicatehandlefixme": 1,
                "word: typeerrorfailed": 1,
                "word: flushviewoffilegetadaptersinfogetassetasbytesgetcommandlinewgetprocesstimesgetstartupinfowhere": 1,
                "word: dragonsimpersonateselfinvalid": 1,
                "word: vmemoryrunbinaryopenthreadtokenother": 1,
                "word: lowercaseother": 1,
                "word: uppercaseprocess": 1,
                "word: firstwpsalter": 1,
                "word: pahlaviregcreatekeyexwregdeletevaluewunmapviewoffile": 1,
                "word: advertise": 1,
                "word: errorbad": 1,
                "word: debugcallv": 3,
                "word: console": 2,
                "word: getmillisecondsgo": 1,
                "word: memorymoduleinvalid": 1,
                "word: paddingkey": 1,
                "word: expiredmalloc": 1,
                "word: deadlockmissing": 1,
                "word: gomaxprocs": 2,
                "word: negative": 21,
                "word: offsetnetwork": 1,
                "word: downno": 1,
                "word: medium": 2,
                "word: foundno": 1,
                "word: processrecovery": 1,
                "word: failedruntime": 5,
                "word: sandbox": 2,
                "word: gssandbox": 1,
                "word: gsscan": 1,
                "word: missed": 1,
                "word: gsetmillisecondsstartm": 1,
                "word: pstopm": 1,
                "word: holding": 5,
                "word: conversion": 5,
                "word: already": 17,
                "word: locals": 2,
                "word: abcdef": 2,
                "word: adddlldirectory": 1,
                "word: createdirectorywdnsnamecompare": 1,
                "word: wduplicatetokenexflushfilebuffersgc": 1,
                "word: godebug": 3,
                "word: getassetasstringgetcomputernamewgetcurrentthreadgetfullpathnamewgetlongpathnamewimperial": 1,
                "word: aramaicinstruneanynotnlmemprofilerecordmeroitic": 1,
                "word: cursivemon": 1,
                "word: netapibufferfreeopenprocesstokenother": 1,
                "word: alphabeticregqueryinfokeywregqueryvalueexwremovedirectorywsetfilepointerexterminateprocesszanabazar": 1,
                "word: square": 1,
                "word: keybad": 1,
                "word: layoutbad": 1,
                "word: kindbad": 1,
                "word: symbol": 5,
                "word: tablecastogscanstatusdefinepropertiesgc": 1,
                "word: unswept": 2,
                "word: spangcshrinkstackoffinteger": 1,
                "word: overflowinvalid": 1,
                "word: argumentinvalid": 1,
                "word: exchangeinvalid": 1,
                "word: spdelta": 1,
                "word: insertmspanlist": 1,
                "word: removemessage": 1,
                "word: longmissing": 1,
                "word: stackmapno": 1,
                "word: hostnon": 1,
                "word: remotepacer": 1,
                "word: mismatchregexp": 1,
                "word: remote": 4,
                "word: schedule": 3,
                "word: cgotime": 1,
                "word: timebeginperiod": 1,
                "word: wrongversion": 1,
                "word: mismatchworkbuf": 1,
                "word: spinningthreads": 1,
                "word: abcdefx": 2,
                "word: missing": 13,
                "word: dnsrecordlistfreefle": 1,
                "word: standard": 125,
                "word: timegc": 1,
                "word: markinggmt": 1,
                "word: timegtb": 1,
                "word: timegetcurrentprocessgetshortpathnamewlookupaccountsidwnegative": 1,
                "word: infinityold": 1,
                "word: arabianold": 1,
                "word: arabianother": 1,
                "word: continuepositive": 1,
                "word: infinitypathlistseparatorregloadmuistringwsentence": 1,
                "word: terminalunexpected": 1,
                "word: numberunexpected": 1,
                "word: stringunified": 1,
                "word: ideographwsaenumprotocolswbad": 1,
                "word: tinysizeclassentersyscallblockexec": 1,
                "word: errorfractional": 1,
                "word: secondgettimezoneoffsetin": 1,
                "word: literalinvalid": 2,
                "word: biglocked": 1,
                "word: upmark": 1,
                "word: statusmarkbits": 1,
                "word: overflowmissing": 1,
                "word: nextid": 1,
                "word: availablenotetsleepg": 1,
                "word: permission": 1,
                "word: deniedpreventextensionsreflect": 1,
                "word: capreflect": 3,
                "word: intreflect": 1,
                "word: lenreflect": 2,
                "word: newosprocruntime": 1,
                "word: scanobject": 2,
                "word: select": 2,
                "word: exhaustiontolocalelowercasetolocaleuppercaseunknown": 1,
                "word: caller": 3,
                "word: pcwait": 1,
                "word: cyclewine": 1,
                "word: memory": 13,
                "word: because": 1,
                "word: dotdotdot": 2,
                "word: locked": 3,
                "word: rangearab": 1,
                "word: timeblockprofilerecordcaucasian": 1,
                "word: albaniancommandlinetoargvwcreatefilemappingwcuba": 1,
                "word: timefiji": 1,
                "word: terminatevm": 1,
                "word: getcomputernameexwgetexitcodeprocessgetfileattributeswgetmodulefilenamewiran": 1,
                "word: timelookupaccountnamewomsk": 1,
                "word: timerfs": 1,
                "word: specific": 2,
                "word: errorregional": 1,
                "word: indicatorrussia": 1,
                "word: setfileattributeswsystemfunction": 1,
                "word: typeassertionerrorunterminated": 1,
                "word: groupvariation": 1,
                "word: selector": 1,
                "word: undefined": 2,
                "word: manualfreelistbufio": 1,
                "word: fullconnection": 1,
                "word: refuseddecodeuricomponentencodeuricomponentfile": 1,
                "word: longforeachp": 1,
                "word: donegarbage": 1,
                "word: collectiongetutcmillisecondsidentifier": 1,
                "word: removedin": 1,
                "word: numeric": 5,
                "word: literalindex": 1,
                "word: rangeinput": 1,
                "word: errorinvalid": 2,
                "word: character": 6,
                "word: multihop": 1,
                "word: attemptedno": 1,
                "word: processesno": 1,
                "word: availableoperation": 1,
                "word: canceledracy": 1,
                "word: timersreflect": 1,
                "word: callreflect": 2,
                "word: elemreflect": 1,
                "word: sendreflect": 1,
                "word: typereflect": 10,
                "word: uintreflect": 1,
                "word: semacreateruntime": 1,
                "word: semawakeupsegmentation": 1,
                "word: faultsetutcmillisecondsstreams": 1,
                "word: errorsystem": 1,
                "word: tolocaledatestringtolocaletimestringtracebackancestorsunknown": 1,
                "word: typeuse": 1,
                "word: filevalue": 1,
                "word: timebahia": 1,
                "word: timecanadian": 1,
                "word: aboriginalchina": 1,
                "word: timecreatesymboliclinkwcryptreleasecontextegypt": 1,
                "word: timefunction": 1,
                "word: getcurrentprocessidgetsystemdirectorywgettokeninformationhaiti": 1,
                "word: timeids": 1,
                "word: binary": 13,
                "word: operatorindia": 1,
                "word: timekorea": 1,
                "word: timelibya": 1,
                "word: timemultibytetowidecharnepal": 1,
                "word: timepattern": 1,
                "word: spacerussia": 1,
                "word: russia": 1,
                "word: timesettokeninformationsudan": 1,
                "word: timesyria": 1,
                "word: timetokyo": 1,
                "word: timetomsk": 1,
                "word: timetonga": 1,
                "word: timeunexpected": 3,
                "word: vwaitforsingleobjectafter": 1,
                "word: elementbad": 1,
                "word: descriptorbad": 1,
                "word: runfinqbad": 1,
                "word: notifylist": 2,
                "word: sizebad": 2,
                "word: mstartbad": 1,
                "word: fielddevice": 1,
                "word: streamdirectory": 1,
                "word: emptydisk": 1,
                "word: exceededfile": 1,
                "word: closedfile": 1,
                "word: existsfile": 1,
                "word: existgetownpropertynamesillegal": 1,
                "word: instructioninvalid": 1,
                "word: escape": 11,
                "word: allmmarking": 1,
                "word: objectmarkroot": 1,
                "word: indexmissing": 1,
                "word: hostmspan": 1,
                "word: notesleep": 2,
                "word: foundnwait": 1,
                "word: nprocspanic": 1,
                "word: during": 11,
                "word: mallocpanic": 1,
                "word: lockspanicwrap": 1,
                "word: panicwrap": 2,
                "word: fieldreflect": 1,
                "word: floatreflect": 1,
                "word: indexreflect": 2,
                "word: isnilreflect": 1,
                "word: sliceruntime": 1,
                "word: pcdata": 1,
                "word: gssemaroot": 1,
                "word: rotateleftskip": 1,
                "word: directorystopm": 1,
                "word: lockstoo": 1,
                "word: filesunexpected": 1,
                "word: instfailunknown": 1,
                "word: reasonvalue": 1,
                "word: bigwinmm": 1,
                "word: markroot": 4,
                "word: unallocated": 1,
                "word: leftover": 2,
                "word: arabic": 1,
                "word: timeazores": 1,
                "word: timecertopensystemstorewcreateprocessasuserwcryptacquirecontextwegyptian": 1,
                "word: hieroglyphsgetacceptexsockaddrsgetadaptersaddressesgetcurrentdirectorywgetfileattributesexwgetprocessmemoryinfoids": 1,
                "word: trinary": 1,
                "word: operatorisrael": 1,
                "word: timejordan": 1,
                "word: timemeroitic": 1,
                "word: hieroglyphsseek": 1,
                "word: offsetseek": 1,
                "word: whencesetcurrentdirectorywsethandleinformationtaipei": 1,
                "word: timeterminal": 1,
                "word: punctuationturkey": 1,
                "word: timeundefined": 1,
                "word: classbad": 1,
                "word: formatbad": 1,
                "word: system": 11,
                "word: mpchan": 1,
                "word: channelconnection": 1,
                "word: outextra": 1,
                "word: bufferfloating": 1,
                "word: errorforcegc": 1,
                "word: errorgc": 1,
                "word: underflowgo": 1,
                "word: valuegopark": 1,
                "word: statusgzip": 1,
                "word: headerinvalid": 1,
                "word: countinvalid": 1,
                "word: request": 2,
                "word: codeis": 1,
                "word: filejson": 1,
                "word: revokedmspanlist": 1,
                "word: insertbackmalloc": 1,
                "word: signalnon": 1,
                "word: listnotetsleep": 1,
                "word: flushedpacer": 1,
                "word: reason": 1,
                "word: propertyisenumerablereflect": 1,
                "word: methodreflect": 1,
                "word: setintreflect": 1,
                "word: makefuncstubreflect": 1,
                "word: casgstatus": 5,
                "word: double": 2,
                "word: waitruntime": 1,
                "word: rotaterighttime": 1,
                "word: numbertrace": 1,
                "word: memoryvalue": 1,
                "word: maxrunewirep": 1,
                "word: goworkbuf": 1,
                "word: emptywrite": 1,
                "word: unexported": 6,
                "word: adjusttokenprivilegesalaskan": 1,
                "word: timeanatolian": 1,
                "word: hieroglyphsarabian": 1,
                "word: timebelarus": 1,
                "word: timecentral": 5,
                "word: timeeastern": 2,
                "word: timegetprofilesdirectorywhere": 1,
                "word: dragons": 8,
                "word: sinscriptional": 1,
                "word: pahlavilookupprivilegevaluewmagadan": 1,
                "word: timemorocco": 1,
                "word: timemyanmar": 1,
                "word: timenamibia": 1,
                "word: timenetgetjoininformationnetusergetlocalgroupsnorfolk": 1,
                "word: timeother": 1,
                "word: grapheme": 1,
                "word: extendpacific": 1,
                "word: timereaddirectorychangeswromance": 1,
                "word: timerussian": 1,
                "word: timese": 1,
                "word: timesaratov": 1,
                "word: timestring": 1,
                "word: terminatedunexpected": 1,
                "word: identifierunknown": 1,
                "word: comparator": 1,
                "word: syakutsk": 1,
                "word: timeafter": 1,
                "word: valuebad": 1,
                "word: compare": 3,
                "word: device": 3,
                "word: requiredbufio": 1,
                "word: countcheckdead": 1,
                "word: gconcurrent": 1,
                "word: writesdefer": 1,
                "word: stackfindrunnable": 1,
                "word: codeinvalid": 1,
                "word: capturelink": 1,
                "word: severedpackage": 1,
                "word: installedpanic": 1,
                "word: stackread": 1,
                "word: systemreflect": 1,
                "word: complexreflect": 1,
                "word: pointerreflect": 1,
                "word: setuintreleasep": 1,
                "word: argruntime": 1,
                "word: confused": 1,
                "word: handlestartlockedm": 1,
                "word: pstartm": 1,
                "word: spinningstate": 1,
                "word: recoverablestopg": 1,
                "word: statustrace": 1,
                "word: breakpoint": 1,
                "word: trapuser": 1,
                "word: systemroot": 1,
                "word: zoneinfo": 5,
                "word: aleutian": 1,
                "word: timeatlantic": 1,
                "word: timecaucasus": 1,
                "word: timeconvertsidtostringsidwconvertstringsidtosidwcreateiocompletionportdateline": 1,
                "word: timegeorgian": 1,
                "word: timegetenvironmentstringswgettimezoneinformationhawaiian": 1,
                "word: timeinscriptional": 1,
                "word: parthianmountain": 1,
                "word: timentwaitforsingleobject": 1,
                "word: pakistan": 1,
                "word: timeparaguay": 1,
                "word: timesakhalin": 1,
                "word: timetasmania": 1,
                "word: infinityaddress": 1,
                "word: useadvapi": 1,
                "word: foundargument": 1,
                "word: longassembly": 1,
                "word: checks": 1,
                "word: failedbad": 1,
                "word: readybad": 1,
                "word: refillcall": 1,
                "word: pointcannot": 1,
                "word: allocate": 4,
                "word: memoryerror": 1,
                "word: validgetenv": 1,
                "word: initgzip": 1,
                "word: checksumint": 1,
                "word: funtime": 1,
                "word: numcpu": 2,
                "word: integer": 2,
                "word: divide": 1,
                "word: zerointerface": 1,
                "word: lengthinvalid": 2,
                "word: typeinvalid": 2,
                "word: qkernel": 1,
                "word: foundminpc": 1,
                "word: invalidnetwork": 1,
                "word: unreachablenewregexpobject": 1,
                "word: nilprotocol": 1,
                "word: availableprotocol": 1,
                "word: supportedreflect": 1,
                "word: mapindexreflect": 1,
                "word: setfloatremote": 1,
                "word: address": 13,
                "word: changedruntime": 1,
                "word: scanstack": 3,
                "word: nelemsscanstack": 1,
                "word: statussend": 1,
                "word: channelslice": 1,
                "word: largespan": 1,
                "word: spacestack": 1,
                "word: goroutine": 8,
                "word: largeunexpected": 1,
                "word: codevalue": 1,
                "word: objectwirep": 1,
                "word: constructor": 1,
                "word: received": 4,
                "word: argentina": 1,
                "word: timearray": 1,
                "word: astrakhan": 1,
                "word: timecertgetcertificatechaine": 1,
                "word: africa": 3,
                "word: europe": 3,
                "word: timefreeenvironmentstringswgetenvironmentvariablewgetsystemtimeasfiletimegreenland": 1,
                "word: timegreenwich": 1,
                "word: timeillegal": 1,
                "word: literalillegal": 1,
                "word: statementillegal": 2,
                "word: characterlogical": 1,
                "word: exceptionlord": 1,
                "word: timemb": 1,
                "word: marquesas": 1,
                "word: timemauritius": 1,
                "word: timenoncharacter": 1,
                "word: pointsetenvironmentvariablewsingapore": 1,
                "word: timesri": 1,
                "word: timetocantins": 1,
                "word: inputvenezuela": 1,
                "word: timewsagetoverlappedresult": 1,
                "word: timewest": 2,
                "word: support": 3,
                "word: dbytes": 1,
                "word: largecan": 1,
                "word: scannot": 1,
                "word: receive": 1,
                "word: channeldevice": 1,
                "word: resource": 1,
                "word: busyfatal": 1,
                "word: morestack": 4,
                "word: garbage": 1,
                "word: collection": 1,
                "word: scangcdrain": 1,
                "word: incorrectgetbinding": 1,
                "word: missinginterrupted": 1,
                "word: callinvalid": 1,
                "word: requestinvalid": 1,
                "word: sequenceinvalid": 1,
                "word: qinvalid": 1,
                "word: jobsmakechan": 1,
                "word: alignmentmissing": 1,
                "word: schememissing": 1,
                "word: runfinqnanotime": 1,
                "word: returning": 1,
                "word: zerono": 1,
                "word: deviceoperation": 1,
                "word: permittedoperation": 1,
                "word: supportedpanic": 1,
                "word: preemptoffprocresize": 1,
                "word: argreferenceerror": 1,
                "word: interfacereflect": 1,
                "word: nummethodreflect": 1,
                "word: methodvaluecallruntime": 1,
                "word: netpoll": 7,
                "word: nelemsschedule": 1,
                "word: lockssetbinding": 1,
                "word: missingspan": 1,
                "word: stacksstack": 1,
                "word: growth": 2,
                "word: forksyntax": 1,
                "word: patternunexpected": 1,
                "word: typeunknown": 1,
                "word: argunknown": 1,
                "word: azerbaijan": 1,
                "word: timebangladesh": 1,
                "word: timecape": 1,
                "word: timecertfreecertificatechaincreatetoolhelp": 1,
                "word: snapshotgetsystemtimeasfiletime": 1,
                "word: getuserprofiledirectorywillegal": 1,
                "word: statementmagallanes": 1,
                "word: timemontevideo": 1,
                "word: timenorth": 3,
                "word: timepacific": 1,
                "word: timequeryperformancecounter": 1,
                "word: eastern": 3,
                "word: timesa": 2,
                "word: pacific": 3,
                "word: western": 1,
                "word: timeus": 2,
                "word: panicbad": 1,
                "word: rangecan": 1,
                "word: stackconnection": 1,
                "word: peerdouble": 1,
                "word: tracegcsweepstartencodearray": 1,
                "word: elementflate": 1,
                "word: maxbits": 3,
                "word: largefloating": 1,
                "word: exceptionfunction": 1,
                "word: implementedgcdrainn": 1,
                "word: incorrectgetownpropertydescriptorhash": 1,
                "word: unhashable": 1,
                "word: unaligned": 4,
                "word: baseinvalid": 1,
                "word: intnjson": 1,
                "word: unsupported": 8,
                "word: synchronizedlink": 1,
                "word: rangenon": 1,
                "word: buffernot": 1,
                "word: supported": 3,
                "word: windowsout": 1,
                "word: streams": 1,
                "word: resourcesqueuefinalizer": 1,
                "word: gcreflect": 1,
                "word: setcomplexreflect": 1,
                "word: unsafeaddrrunqsteal": 1,
                "word: overflowruntime": 3,
                "word: malloc": 6,
                "word: virtualfree": 2,
                "word: predecessor": 1,
                "word: objectsstack": 1,
                "word: unavailable": 2,
                "word: structure": 4,
                "word: cleaningthis": 1,
                "word: should": 6,
                "word: happen": 2,
                "word: region": 1,
                "word: timeaus": 1,
                "word: timeafghanistan": 1,
                "word: timeerror": 2,
                "word: executing": 2,
                "word: vexpandenvironmentstringswgodebug": 1,
                "word: getfinalpathnamebyhandlewgetqueuedcompletionstatuskaliningrad": 1,
                "word: timelabel": 1,
                "word: existsmiddle": 1,
                "word: timenew": 1,
                "word: zealand": 1,
                "word: timetransbaikal": 1,
                "word: mountain": 1,
                "word: timeulaanbaatar": 1,
                "word: timevladivostok": 1,
                "word: mongolia": 1,
                "word: missingallgadd": 1,
                "word: gidlearena": 1,
                "word: initializedbad": 1,
                "word: shrinkstackbootstrap": 1,
                "word: chansend": 5,
                "word: spurious": 1,
                "word: wakeupcheckid": 1,
                "word: checkdead": 4,
                "word: timercheckdead": 1,
                "word: timercould": 1,
                "word: locate": 2,
                "word: serror": 1,
                "word: decoding": 16,
                "word: sinconsistent": 1,
                "word: fdmutexinvalid": 1,
                "word: linkjson": 1,
                "word: unexpected": 17,
                "word: typejson": 1,
                "word: newstackmissing": 1,
                "word: tracegcsweepstartnet": 1,
                "word: userinfono": 1,
                "word: availableno": 2,
                "word: addressoperation": 1,
                "word: progressreflect": 1,
                "word: overflowintreflect": 1,
                "word: setmapindexreflect": 1,
                "word: typereleasep": 1,
                "word: stateremaining": 1,
                "word: buffersresource": 1,
                "word: deadlock": 3,
                "word: avoidedruntime": 1,
                "word: virtualalloc": 2,
                "word: misaligned": 1,
                "word: exceeds": 28,
                "word: countslice": 1,
                "word: bounds": 1,
                "word: rangesocket": 1,
                "word: supportedstartm": 1,
                "word: gsstoplockedm": 1,
                "word: runnableunexpected": 1,
                "word: unaddressable": 5,
                "word: bougainville": 1,
                "word: timecertfreecertificatecontexte": 1,
                "word: australia": 3,
                "word: timeekaterinburg": 1,
                "word: timegodebug": 1,
                "word: getfileinformationbyhandleillegal": 1,
                "word: continue": 1,
                "word: hexadecimal": 2,
                "word: numberline": 1,
                "word: islands": 2,
                "word: timenewfoundland": 1,
                "word: timepostqueuedcompletionstatusqueryperformancefrequency": 1,
                "word: intsaint": 1,
                "word: pierre": 1,
                "word: timesouth": 1,
                "word: functioncorrupted": 1,
                "word: semaphore": 3,
                "word: ticketentersyscall": 1,
                "word: inconsistent": 9,
                "word: foreachp": 2,
                "word: fnfreespan": 1,
                "word: cached": 2,
                "word: spanfreedefer": 1,
                "word: nilgob": 2,
                "word: ninvalid": 2,
                "word: hostinvalid": 1,
                "word: descriptorname": 1,
                "word: unique": 1,
                "word: networkno": 2,
                "word: desired": 1,
                "word: typenotewakeup": 1,
                "word: wakeupout": 1,
                "word: stackalloc": 2,
                "word: caninterfacereflect": 1,
                "word: methodbynamereflect": 1,
                "word: overflowuintrequired": 1,
                "word: availableruntime": 1,
                "word: startlockedm": 2,
                "word: assignable": 2,
                "word: returned": 9,
                "word: addvectoredcontinuehandler": 1,
                "word: certenumcertificatesinstoreeaster": 1,
                "word: island": 1,
                "word: preloading": 1,
                "word: corruptedillegal": 1,
                "word: newline": 3,
                "word: throwrangeerror": 1,
                "word: addressafter": 1,
                "word: pairbad": 1,
                "word: qcgouse": 1,
                "word: calledchannel": 1,
                "word: rangecommunication": 1,
                "word: sendcould": 1,
                "word: syscallsdecode": 1,
                "word: sgcstopm": 1,
                "word: gcgrowslice": 1,
                "word: rangeinternal": 1,
                "word: lockosthread": 4,
                "word: shuffleinvalid": 1,
                "word: profile": 2,
                "word: rejected": 1,
                "word: servicelarge": 1,
                "word: rotateleftmakechan": 1,
                "word: rangemakeslice": 2,
                "word: rangemspan": 1,
                "word: statenot": 1,
                "word: fileprogtopointermask": 1,
                "word: overflowreflect": 1,
                "word: overflowfloatrestartg": 1,
                "word: statusrunlock": 1,
                "word: unlocked": 4,
                "word: rwmutexruntime": 1,
                "word: corrupted": 7,
                "word: polldescruntime": 5,
                "word: netpollinit": 2,
                "word: countsigsend": 1,
                "word: statestack": 1,
                "word: startm": 2,
                "word: nmspinningstoptheworld": 1,
                "word: locksstring": 1,
                "word: insidetime": 1,
                "word: namework": 1,
                "word: timecanada": 1,
                "word: timecen": 1,
                "word: timecertcreatecertificatecontextenglish": 1,
                "word: fixedstack": 1,
                "word: getfileinformationbyhandleexgetqueuedcompletionstatusex": 1,
                "word: prepended": 1,
                "word: concatenation": 2,
                "word: markrangeerror": 1,
                "word: unterminated": 1,
                "word: originating": 1,
                "word: preserve": 1,
                "word: unlinked": 1,
                "word: spancomparing": 1,
                "word: uncomparable": 1,
                "word: destination": 1,
                "word: requirederror": 1,
                "word: terminateself": 2,
                "word: descriptor": 2,
                "word: statefindrunnable": 1,
                "word: pgcstopm": 1,
                "word: nmspinninggob": 1,
                "word: valuegob": 2,
                "word: duplicate": 3,
                "word: receivedgob": 1,
                "word: uintptrinvalid": 1,
                "word: tableinvalid": 1,
                "word: passed": 8,
                "word: rotaterightmheap": 1,
                "word: shrinkstackmspan": 1,
                "word: lockedneed": 1,
                "word: padding": 2,
                "word: gdeadnewproc": 1,
                "word: stackos": 1,
                "word: finishedprotocol": 1,
                "word: driver": 1,
                "word: attachedreflect": 1,
                "word: makeslice": 8,
                "word: typeregion": 1,
                "word: rangeruntime": 7,
                "word: semasleep": 7,
                "word: unexpectedruntime": 1,
                "word: converted": 1,
                "word: america": 2,
                "word: timechatham": 1,
                "word: timelockosthread": 1,
                "word: nesting": 1,
                "word: overflowmon": 1,
                "word: gmtmon": 1,
                "word: timerangeerror": 1,
                "word: dataaddspecial": 1,
                "word: pointerbufio": 1,
                "word: longcrypto": 1,
                "word: stackfunction": 1,
                "word: gcphase": 3,
                "word: gcoffgfput": 1,
                "word: biggob": 1,
                "word: uintinvalid": 1,
                "word: rangeinvalid": 1,
                "word: eventio": 1,
                "word: pipemachine": 1,
                "word: semaphores": 1,
                "word: availablenotesleep": 1,
                "word: syncnumerical": 1,
                "word: rangeoperation": 1,
                "word: progresspadding": 1,
                "word: contained": 1,
                "word: alphabetprotocol": 1,
                "word: supportedre": 1,
                "word: lookahead": 1,
                "word: overflowcomplexreflect": 1,
                "word: typeruntime": 6,
                "word: impossible": 2,
                "word: kindruntime": 1,
                "word: marking": 1,
                "word: underflow": 2,
                "word: cruntime": 1,
                "word: semacquire": 5,
                "word: stackstring": 1,
                "word: longsyntax": 1,
                "word: scanning": 2,
                "word: booleantimebegin": 1,
                "word: endperiod": 1,
                "word: foundtoo": 1,
                "word: systemtraceback": 1,
                "word: defers": 1,
                "word: different": 2,
                "word: scopes": 1,
                "word: european": 1,
                "word: mexico": 4,
                "word: regular": 2,
                "word: smapiter": 1,
                "word: nextpacific": 1,
                "word: caicos": 1,
                "word: timeabi": 1,
                "word: mismatch": 6,
                "word: detected": 1,
                "word: between": 3,
                "word: assignment": 2,
                "word: mapattempt": 1,
                "word: register": 2,
                "word: namecheckdead": 1,
                "word: countsfailed": 1,
                "word: sizefreedefer": 1,
                "word: exponent": 1,
                "word: literalinappropriate": 1,
                "word: deviceinvalid": 1,
                "word: stacklength": 1,
                "word: decodearraylength": 1,
                "word: ignorearraylooking": 1,
                "word: beginning": 7,
                "word: valueneed": 1,
                "word: childnotetsleep": 1,
                "word: syncprotocol": 1,
                "word: socketreflect": 1,
                "word: typerunqputslow": 1,
                "word: fullruntime": 1,
                "word: cgocallback": 4,
                "word: socket": 4,
                "word: socketstrings": 1,
                "word: countsync": 2,
                "word: statesync": 1,
                "word: mutextype": 1,
                "word: exported": 1,
                "word: fieldsunaddressable": 1,
                "word: usable": 3,
                "word: additional": 1,
                "word: elided": 1,
                "word: section": 2,
                "word: switchcannot": 1,
                "word: access": 2,
                "word: scentral": 1,
                "word: brazilian": 1,
                "word: timedword": 1,
                "word: longmountain": 1,
                "word: longvm": 1,
                "word: secondsw": 1,
                "word: timebad": 1,
                "word: barrier": 1,
                "word: boundscall": 1,
                "word: within": 1,
                "word: runtimecannot": 1,
                "word: requested": 1,
                "word: addresscasgstatus": 1,
                "word: incoming": 1,
                "word: valuescheckmark": 1,
                "word: unmarked": 2,
                "word: objectencodereflectvalue": 1,
                "word: elementencoding": 1,
                "word: uentersyscallblock": 1,
                "word: expected": 2,
                "word: happenfunction": 1,
                "word: expecting": 11,
                "word: inserting": 1,
                "word: treapinternal": 1,
                "word: misuse": 3,
                "word: itabjson": 1,
                "word: qmalformed": 1,
                "word: informationmergerunesets": 1,
                "word: runenon": 1,
                "word: listpacer": 1,
                "word: typeresetspinning": 1,
                "word: mruntime": 1,
                "word: memoryruntime": 1,
                "word: commit": 1,
                "word: pagesruntime": 3,
                "word: certaddcertificatecontexttostorecertverifycertificatechainpolicyerror": 1,
                "word: importing": 3,
                "word: vinvalid": 2,
                "word: inmapiter": 1,
                "word: nextmaximum": 1,
                "word: exceededwsagetoverlappedresult": 1,
                "word: bootstrap": 2,
                "word: present": 1,
                "word: unreadbytebufio": 1,
                "word: unreadrunebufio": 1,
                "word: buffercrypto": 1,
                "word: blockend": 1,
                "word: outside": 4,
                "word: spacein": 1,
                "word: numerical": 1,
                "word: domainpanic": 1,
                "word: printing": 1,
                "word: valuere": 1,
                "word: backreference": 2,
                "word: namefrom": 2,
                "word: typeremovespecial": 1,
                "word: pointerresource": 1,
                "word: temporarily": 1,
                "word: unavailableruntime": 1,
                "word: abandonedruntime": 1,
                "word: returnedruntime": 1,
                "word: setevent": 2,
                "word: timeruntime": 1,
                "word: elemruntime": 1,
                "word: nextruntime": 1,
                "word: prevscanstack": 1,
                "word: stoppedsoftware": 1,
                "word: caused": 1,
                "word: connection": 3,
                "word: abortsweep": 1,
                "word: increased": 1,
                "word: allocation": 5,
                "word: rwmutexsync": 1,
                "word: counteruse": 1,
                "word: network": 2,
                "word: spacebytes": 1,
                "word: countbytes": 2,
                "word: whenceconcurrent": 1,
                "word: writecreatebinding": 1,
                "word: existscrypto": 1,
                "word: blockfindrunnable": 1,
                "word: nmspinningfreeing": 1,
                "word: spanheapbitssettype": 1,
                "word: shiftleafcounts": 1,
                "word: nmisrounded": 1,
                "word: sysallocre": 1,
                "word: illegal": 5,
                "word: scanescapereflect": 1,
                "word: rangereflect": 3,
                "word: rangeregexp": 1,
                "word: unhandled": 1,
                "word: compileruntime": 1,
                "word: castogscanstatus": 2,
                "word: decommit": 1,
                "word: rangestackalloc": 1,
                "word: scheduler": 1,
                "word: stackstoplockedm": 1,
                "word: lockingsync": 1,
                "word: rwmutextoo": 1,
                "word: levels": 1,
                "word: symbolic": 1,
                "word: linkstreap": 1,
                "word: broken": 1,
                "word: treaptreap": 1,
                "word: foundwaiting": 1,
                "word: tryotto": 1,
                "word: understand": 1,
                "word: typeother": 1,
                "word: ignorable": 1,
                "word: pointrangeerror": 1,
                "word: vsetfilecompletionnotificationmodesvirtualquery": 1,
                "word: failedattempting": 1,
                "word: converting": 3,
                "word: overflowcrypto": 1,
                "word: overlapforeachp": 1,
                "word: escapeinvalid": 1,
                "word: dinvalid": 2,
                "word: nested": 1,
                "word: repetition": 2,
                "word: operatorinvalid": 1,
                "word: syntaxmspan": 1,
                "word: lockedname": 1,
                "word: allocating": 3,
                "word: allarenasreflect": 1,
                "word: funcof": 5,
                "word: argumentsreflect": 2,
                "word: boundsreflect": 4,
                "word: channelreflect": 2,
                "word: setfinalizer": 10,
                "word: running": 3,
                "word: notruntime": 1,
                "word: workspan": 1,
                "word: references": 1,
                "word: spliceunexpected": 1,
                "word: encountered": 1,
                "word: underflowencoding": 1,
                "word: stringfile": 1,
                "word: deadlinefindfunc": 1,
                "word: idxfindrunnable": 1,
                "word: spinningflate": 1,
                "word: corrupt": 1,
                "word: greyobject": 3,
                "word: alignedmheap": 1,
                "word: freenetwork": 1,
                "word: dropped": 1,
                "word: resetpersistentalloc": 1,
                "word: largepidleput": 1,
                "word: queuereflect": 1,
                "word: unblockruntime": 1,
                "word: createevent": 1,
                "word: deadlinestring": 1,
                "word: dstrings": 2,
                "word: whencetraceback": 1,
                "word: unwind": 1,
                "word: completelytransport": 1,
                "word: endpoint": 3,
                "word: connected": 2,
                "word: assets": 2,
                "word: verror": 1,
                "word: stored": 1,
                "word: memoryinvalid": 1,
                "word: assignmentmstats": 1,
                "word: memstatstype": 1,
                "word: mismatchtime": 1,
                "word: lengthunable": 1,
                "word: determine": 2,
                "word: directoryaccessing": 1,
                "word: librarybytes": 1,
                "word: offsetbytes": 1,
                "word: positioncould": 1,
                "word: initialize": 2,
                "word: virtual": 2,
                "word: machinekey": 1,
                "word: multiple": 3,
                "word: alignreflect": 1,
                "word: funclayout": 4,
                "word: virtualquery": 3,
                "word: deadlineruntime": 1,
                "word: encoded": 2,
                "word: typebitsbulkbarrierruntime": 1,
                "word: stackruntime": 2,
                "word: waitlinkruntime": 1,
                "word: unblock": 1,
                "word: newstackstrings": 1,
                "word: countsyntax": 1,
                "word: numbertoo": 1,
                "word: uncaching": 1,
                "word: smaller": 2,
                "word: minimum": 1,
                "word: circular": 1,
                "word: jsoninvalid": 1,
                "word: notify": 1,
                "word: missingall": 1,
                "word: goroutines": 2,
                "word: asleep": 1,
                "word: ignore": 1,
                "word: sbytes": 1,
                "word: truncation": 1,
                "word: rangecannot": 1,
                "word: library": 2,
                "word: directlycipher": 1,
                "word: authentication": 1,
                "word: failedcrypto": 1,
                "word: incorrect": 3,
                "word: sizecrypto": 1,
                "word: overlapgithub": 1,
                "word: stdlib": 4,
                "word: newtypeobject": 3,
                "word: registered": 2,
                "word: qreflect": 1,
                "word: slicereflect": 5,
                "word: arithmetic": 1,
                "word: setprofilebucket": 2,
                "word: setstarttheworld": 1,
                "word: nextpstrings": 1,
                "word: causes": 1,
                "word: overflowtype": 1,
                "word: svalue": 2,
                "word: unable": 3,
                "word: directory": 1,
                "word: equality": 1,
                "word: vafter": 1,
                "word: literalarg": 1,
                "word: libraryconcurrent": 1,
                "word: iteration": 1,
                "word: writedecode": 1,
                "word: deltaempty": 1,
                "word: sencoding": 1,
                "word: alphabet": 2,
                "word: longexpected": 1,
                "word: dgcbgmarkworker": 1,
                "word: blackening": 2,
                "word: enabledgob": 1,
                "word: unassignable": 1,
                "word: datamakechan": 1,
                "word: channel": 1,
                "word: element": 1,
                "word: typenot": 1,
                "word: enough": 1,
                "word: valueruntime": 2,
                "word: isselectstrings": 1,
                "word: offsetstrings": 1,
                "word: positiontime": 1,
                "word: buffercan": 1,
                "word: represent": 1,
                "word: recursive": 1,
                "word: heapbitssettypegcprog": 3,
                "word: allocationmismatched": 1,
                "word: copymissing": 1,
                "word: operatormspan": 1,
                "word: sweepout": 1,
                "word: mapreflect": 1,
                "word: makemapwithsize": 2,
                "word: casfrom": 3,
                "word: gscanstatus": 5,
                "word: matchstack": 1,
                "word: allowed": 2,
                "word: calltoo": 1,
                "word: strailing": 1,
                "word: backslash": 1,
                "word: expressiontransport": 1,
                "word: exhausted": 3,
                "word: iteratoraddress": 1,
                "word: protocolbulkbarrierprewrite": 1,
                "word: argumentscannot": 1,
                "word: workbufs": 1,
                "word: gcmcrypto": 1,
                "word: inputdeferproc": 1,
                "word: newdeferin": 1,
                "word: trefill": 1,
                "word: remainingreflect": 1,
                "word: functionreflect": 2,
                "word: countreflect": 1,
                "word: typebitsbulkbarrier": 3,
                "word: alignwrong": 1,
                "word: elements": 18,
                "word: iteratortime": 2,
                "word: overflows": 1,
                "word: integerbytes": 1,
                "word: countcan": 1,
                "word: valuecgo": 1,
                "word: pointergcsweep": 1,
                "word: gcoffgob": 1,
                "word: attempt": 1,
                "word: pointerjson": 1,
                "word: calling": 2,
                "word: statemheap": 1,
                "word: freenet": 1,
                "word: urlobjects": 1,
                "word: overlappingpacket": 1,
                "word: without": 1,
                "word: typesetcheckmarked": 1,
                "word: disagreestoptheworld": 1,
                "word: appendint": 3,
                "word: formatint": 2,
                "word: basetime": 1,
                "word: intostring": 1,
                "word: account": 2,
                "word: sourcemappingurl": 1,
                "word: application": 1,
                "word: objectjson": 1,
                "word: stringify": 2,
                "word: offsetacquiresudog": 1,
                "word: cachecandidate": 1,
                "word: freegob": 1,
                "word: numbers": 1,
                "word: boundsgob": 1,
                "word: unsigned": 1,
                "word: rangegrew": 1,
                "word: adequate": 1,
                "word: foundlooking": 1,
                "word: stringnon": 1,
                "word: concurrent": 2,
                "word: markon": 1,
                "word: template": 1,
                "word: threadpersistentalloc": 1,
                "word: argumentsruntime": 4,
                "word: polldescsync": 1,
                "word: valueunexpected": 1,
                "word: executionunsupported": 1,
                "word: rewind": 1,
                "word: buffercandidate": 1,
                "word: smallgcbgmarkworker": 1,
                "word: gcmarkworkermodeheapbitssettypegcprog": 1,
                "word: countinterrupted": 1,
                "word: restartedmultiple": 1,
                "word: errorreflect": 1,
                "word: variadic": 2,
                "word: implementsruntime": 1,
                "word: nilruntime": 1,
                "word: releasesudog": 2,
                "word: paramunknown": 1,
                "word: obtained": 3,
                "word: fieldhere": 1,
                "word: tconverting": 1,
                "word: overflowencoding": 1,
                "word: charactergcmarknewobject": 1,
                "word: checkmarkinvalid": 1,
                "word: metadatareflect": 1,
                "word: makefunc": 4,
                "word: receiver": 1,
                "word: setlenruntime": 1,
                "word: packing": 1,
                "word: tofixed": 2,
                "word: transport": 1,
                "word: shutdownconversion": 1,
                "word: vexitsyscall": 1,
                "word: longer": 1,
                "word: validheapbitssettype": 1,
                "word: typeignore": 1,
                "word: deltainvalid": 1,
                "word: assignabletoruntime": 1,
                "word: fielderror": 1,
                "word: injecting": 1,
                "word: vbytes": 2,
                "word: slicebytes": 1,
                "word: slicecipher": 1,
                "word: newofb": 2,
                "word: sizeconversion": 1,
                "word: vfirst": 1,
                "word: segment": 1,
                "word: contain": 1,
                "word: coloninvalid": 1,
                "word: dlength": 1,
                "word: reservation": 1,
                "word: limitos": 1,
                "word: waitforsingleobjectpanicwrap": 1,
                "word: convertibletoreflect": 1,
                "word: capacity": 1,
                "word: setcapruntime": 1,
                "word: create": 7,
                "word: initialized": 1,
                "word: rangesignal": 1,
                "word: arrived": 1,
                "word: external": 1,
                "word: execution": 1,
                "word: stoptheworld": 2,
                "word: pgcstop": 1,
                "word: toprecision": 2,
                "word: greater": 1,
                "word: terminationattempting": 1,
                "word: librariesbufio": 1,
                "word: readinvalid": 1,
                "word: sizeinvalid": 1,
                "word: valuereflect": 1,
                "word: createiocompletionport": 2,
                "word: linebreak": 1,
                "word: writecould": 1,
                "word: getsystemtimeasfiletime": 2,
                "word: syscallinvalid": 1,
                "word: spaceruntime": 1,
                "word: waitforsingleobject": 4,
                "word: appendfloat": 2,
                "word: formatfloat": 2,
                "word: bitsizesyscall": 1,
                "word: stringtoutf": 3,
                "word: buffercasgstatus": 1,
                "word: gwaiting": 1,
                "word: grunnableconverting": 1,
                "word: precisiongob": 1,
                "word: registering": 2,
                "word: sinvalid": 1,
                "word: dereferenceinvalid": 1,
                "word: incomplete": 1,
                "word: multibyte": 1,
                "word: characterpanicwrap": 1,
                "word: package": 2,
                "word: arrayruntime": 2,
                "word: makemap": 5,
                "word: nelemsstrconv": 1,
                "word: adjustlastdigitfixedstrings": 1,
                "word: stringstrings": 2,
                "word: countattempt": 1,
                "word: execute": 2,
                "word: stackcrypto": 1,
                "word: gcminvalid": 1,
                "word: dmallocgc": 1,
                "word: gcmarkterminationrecursive": 1,
                "word: initialization": 3,
                "word: linker": 1,
                "word: skewreflect": 1,
                "word: getqueuedcompletionstatus": 4,
                "word: acquire": 1,
                "word: syncjson": 1,
                "word: changing": 1,
                "word: underfoot": 1,
                "word: vcould": 1,
                "word: vfatal": 1,
                "word: systemstack": 3,
                "word: goroutinecasfrom": 1,
                "word: statedecode": 1,
                "word: singletonruntime": 1,
                "word: blockruntime": 1,
                "word: getqueuedcompletionstatusex": 1,
                "word: instanceof": 1,
                "word: fractional": 1,
                "word: minutefunction": 1,
                "word: sorted": 1,
                "word: counter": 1,
                "word: lookupgroupname": 2,
                "word: dnamespace": 1,
                "word: sreflect": 1,
                "word: implementshere": 1,
                "word: readgccontrollerstate": 1,
                "word: findrunnable": 2,
                "word: enabledinternal": 1,
                "word: polling": 1,
                "word: typeno": 1,
                "word: goexit": 4,
                "word: software": 1,
                "word: microsoft": 1,
                "word: currentversion": 1,
                "word: zonesbufio": 1,
                "word: splitfunc": 2,
                "word: returns": 2,
                "word: countcasfrom": 1,
                "word: stategentraceback": 1,
                "word: skipnewproc": 1,
                "word: goroutinereflect": 1,
                "word: makemethodvalueruntime": 1,
                "word: objectbad": 1,
                "word: bufferfailed": 1,
                "word: aligned": 1,
                "word: retriesin": 1,
                "word: gcmark": 2,
                "word: gcmarkterminationinvalid": 1,
                "word: copied": 1,
                "word: valuegobdecoder": 1,
                "word: dgentraceback": 1,
                "word: stoplockedm": 2,
                "word: grunnable": 1,
                "word: gscanrunnable": 1,
                "word: concurrently": 1,
                "word: waittype": 1,
                "word: compiling": 1,
                "word: inside": 1,
                "word: interfacejson": 1,
                "word: vruntime": 1,
                "word: beyond": 1,
                "word: inputreflect": 1,
                "word: indirection": 1,
                "word: through": 1,
                "word: structsync": 1,
                "word: inconsistently": 1,
                "word: valuesync": 1,
                "word: reused": 1,
                "word: returnedbytes": 1,
                "word: readrunesourcemap": 1,
                "word: supportedcannot": 1,
                "word: supply": 1,
                "word: constructing": 1,
                "word: anotherreflect": 1,
                "word: makefunctype": 1,
                "word: structfound": 1,
                "word: unlockosthreadstrings": 1,
                "word: readruneabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 1,
                "word: abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 1,
                "word: trying": 3,
                "word: blockstrconv": 1,
                "word: checkmarks": 1,
                "word: successful": 2,
                "word: readdecoding": 1,
                "word: operations": 1,
                "word: single": 1,
                "word: decoded": 1,
                "word: memoryrunbinary": 5,
                "word: readrunedecoding": 1,
                "word: supplied": 1,
                "word: vdecoding": 1,
                "word: framepointer": 1,
                "word: experiment": 1,
                "word: queryperformancefrequency": 1,
                "word: hardwarejson": 1,
                "word: unquoted": 1,
                "word: vreflect": 1,
                "word: methodqueryperformancefrequency": 1,
                "word: divider": 1,
                "word: nosplit": 1,
                "word: discussion": 1,
                "word: proceedconverting": 1,
                "word: javascript": 1,
                "word: functions": 1,
                "word: currently": 1,
                "word: supportedlistgroupsforusernameanddomain": 1,
                "word: netusergetlocalgroups": 2,
                "word: domain": 3,
                "word: snomatchemptymatchliteralcharclassanycharnotnlanycharbeginlineendlinebegintextendtextwordboundarynowordboundarycapturestarplusquestrepeatconcatalternate": 1,
                "word: qcufljdp": 1,
                "word: lkuecnn": 1,
                "word: xfirbepnr": 1,
                "word: lxknae": 1,
                "word: lqmfal": 1,
                "word: jyisldxpqlesx": 1,
                "word: vzvgjhkswrh": 1,
                "word: hnpojpltx": 1,
                "word: hiuosgtu": 1,
                "word: tbpvnldarzbzmhsiazmpeln": 1,
                "word: rbkdla": 1,
                "word: nvpfgxju": 1,
                "word: cvueegjsveanpxexvkayttqasqxjmxg": 1,
                "word: sogtqvuql": 1,
                "word: nswahki": 1,
                "word: ocxkvhh": 1,
                "word: jluemkjadu": 1,
                "word: inksuu": 1,
                "word: niwthntljvlv": 1,
                "word: buuuqwqlv": 1,
                "word: jylargno": 1,
                "word: shxiymy": 1,
                "word: rykakxovjnxufd": 1,
                "word: ckcylxr": 1,
                "word: xvlfgqtlar": 1,
                "word: dvvkky": 1,
                "word: cmtaznazskxa": 1,
                "word: iqzknrj": 1,
                "word: gvznbvkixj": 1,
                "word: gnsvhcjgnat": 1,
                "word: mvlnnxn": 1,
                "word: vvoelgtg": 1,
                "word: zxtbshwdknq": 1,
                "word: bgirbiz": 1,
                "word: invkvt": 1,
                "word: ezqsnaavzey": 1,
                "word: jzdaokh": 1,
                "word: tisvxxaqsqq": 1,
                "word: braembfwx": 1,
                "word: hedcmibb": 1,
                "word: ffkaohrh": 1,
                "word: fvxpyeolfez": 1,
                "word: udtdbamllissmkb": 1,
                "word: rjmjcgb": 1,
                "word: yszbte": 1,
                "word: jdirpsou": 1,
                "word: ripnmkwev": 1,
                "word: keyhncgeweesfuoxnnjafg": 1,
                "word: vdidatqmxzunazwgrf": 1,
                "word: labpfhvqvuq": 1,
                "word: eznttod": 1,
                "word: repajcx": 1,
                "word: ubfquaemfqy": 1,
                "word: wmfqksiu": 1,
                "word: vokrgpqwimplke": 1,
                "word: oudtpwwokd": 1,
                "word: kpkhbkynxjpoma": 1,
                "word: tgjymjtww": 1,
                "word: xfblxioska": 1,
                "word: pawowo": 1,
                "word: asgmdnifcnpd": 1,
                "word: kwthblnezokbbljmxen": 1,
                "word: gpqecjacxrk": 1,
                "word: wjruhtk": 1,
                "word: jfnnkng": 1,
                "word: amfydmcccgczoxprypapyvfc": 1,
                "word: oxzqrqjee": 1,
                "word: tgegstfqajvw": 1,
                "word: pplbsdso": 1,
                "word: sgphoxrrbybtsaoo": 1,
                "word: uhjhbqlkuqhs": 1,
                "word: vfefghyo": 1,
                "word: khhowdbx": 1,
                "word: qooeia": 1,
                "word: mmtnhzqjzwzswibpklka": 1,
                "word: wqgruizszlefdqoiwuooeeqtfexjlla": 1,
                "word: dxyify": 1,
                "word: ucokmynsqchtuszscvigekppyfygn": 1,
                "word: bxzofrqr": 1,
                "word: jxquczd": 1,
                "word: asgjcrzrtzhtogwnocrcqst": 1,
                "word: mqtwwyeort": 1,
                "word: ymgosihrfjewk": 1,
                "word: gxazpup": 1,
                "word: zmfaizgszq": 1,
                "word: fdevkntenhanhtrdrvkoqmuuxqehwfkafx": 1,
                "word: cahnsi": 1,
                "word: leabuentb": 1,
                "word: gudiaix": 1,
                "word: cbtozpansvdquwqt": 1,
                "word: kkogip": 1,
                "word: nretysf": 1,
                "word: edhvtgnqtrsqvxtri": 1,
                "word: mcdvsrthirs": 1,
                "word: yicpyvr": 1,
                "word: ndoeuz": 1,
                "word: kfrwxr": 1,
                "word: hgopuvfn": 1,
                "word: vmesauvpkatqiofrwkhmd": 1,
                "word: wxybogkrvjpuyr": 1,
                "word: kkuhrcvr": 1,
                "word: xrgysa": 1,
                "word: kbxstpwgb": 1,
                "word: zqpzrzklkfwcuyzmjjrqvn": 1,
                "word: swjmkolcy": 1,
                "word: tjagpycdf": 1,
                "word: ohgwfchvonyuy": 1,
                "word: stgbklui": 1,
                "word: solbntxmlfcst": 1,
                "word: touuwv": 1,
                "word: tlmmuxjo": 1,
                "word: eplqnsiyrrvxrlakhuj": 1,
                "word: kcatrwey": 1,
                "word: zdbblsnuf": 1,
                "word: mdaptmnn": 1,
                "word: mhddzynghxhexvukthputlgdytnitxfvbbi": 1,
                "word: xhnojntasfe": 1,
                "word: lyplxixl": 1,
                "word: osxkqircpldxfhudnfwwuh": 1,
                "word: rmotpcg": 1,
                "word: tsidubga": 1,
                "word: cbwqhhkrk": 1,
                "word: kbmwdmjjvodkwjwzbtgrpvvajt": 1,
                "word: xcvrbtki": 1,
                "word: bngwcjd": 1,
                "word: uofrysbshnpsnvplaqslpqtzj": 1,
                "word: yushafar": 1,
                "word: wvngcsn": 1,
                "word: cislkgi": 1,
                "word: ecvejd": 1,
                "word: yuypdnca": 1,
                "word: efmwwks": 1,
                "word: wzwixlt": 1,
                "word: mizynpqszbjzzcklfelp": 1,
                "word: pqbgwkp": 1,
                "word: hqhipddkf": 1,
                "word: ihkdgw": 1,
                "word: jvggrudih": 1,
                "word: uipxqx": 1,
                "word: yufqepqdccr": 1,
                "word: imhdkq": 1,
                "word: exfbkyuhcrvnp": 1,
                "word: uvdmrkfxeeu": 1,
                "word: tazdzybwijl": 1,
                "word: vgkiza": 1,
                "word: xbfjdqmp": 1,
                "word: enzlwruqgftplfjrblomyqtlqeccxxnld": 1,
                "word: mjyobdftnpiznf": 1,
                "word: uaecgcwtxrcb": 1,
                "word: cwizutxqbjfmopu": 1,
                "word: pvcbbswmw": 1,
                "word: ounqbznmjdmcagapotw": 1,
                "word: vyjfdznj": 1,
                "word: mjikvo": 1,
                "word: otgyuinxvc": 1,
                "word: oeccmfazuwpxbefsd": 1,
                "word: oydeky": 1,
                "word: zkfbvpjhpqosjtrp": 1,
                "word: dqoncnu": 1,
                "word: gudmzvpb": 1,
                "word: oeqjkszopqnocbdv": 1,
                "word: pdiftfiun": 1,
                "word: wpztrmqgxetz": 1,
                "word: dunpxeg": 1,
                "word: nqlstrodtqisctzpz": 1,
                "word: sjnvhpfeln": 1,
                "word: rvpkax": 1,
                "word: micwvev": 1,
                "word: tyhfoqdl": 1,
                "word: ltbbauslmpslzxaevps": 1,
                "word: gxjslp": 1,
                "word: ojezfrajnsbmwqhwzjsgrbp": 1,
                "word: nopecwp": 1,
                "word: mrxhrjoldl": 1,
                "word: nkvnmpdfmyj": 1,
                "word: uhiytw": 1,
                "word: caboytflpuhjsgo": 1,
                "word: wvjwofcm": 1,
                "word: fcvzxtoztetxusgetnij": 1,
                "word: xbhbcgab": 1,
                "word: camyyokbpxpq": 1,
                "word: mhmvykgqqptx": 1,
                "word: nmcwzpxys": 1,
                "word: dmpawsoi": 1,
                "word: hykjen": 1,
                "word: uhgzsninnmpys": 1,
                "word: qlovcmuwgwoa": 1,
                "word: vnopmmbokiprgdt": 1,
                "word: ejlvjabzthg": 1,
                "word: xwaooaety": 1,
                "word: pwysspsnesoxldrodec": 1,
                "word: kcbmji": 1,
                "word: abbwtsmw": 1,
                "word: rcarycgt": 1,
                "word: ptbpyzkldxxifprn": 1,
                "word: qlnvfegq": 1,
                "word: lqsaizvd": 1,
                "word: lwbtpaxwqhafo": 1,
                "word: ihzqpmpgoqraa": 1,
                "word: kjisdznremhk": 1,
                "word: ukojpumjl": 1,
                "word: dxfbhp": 1,
                "word: qwplbrjj": 1,
                "word: vxcrodtkxnrfxhxseg": 1,
                "word: ykknyqerx": 1,
                "word: kitfvixd": 1,
                "word: yzowyzbvwfg": 1,
                "word: eaoieiwugp": 1,
                "word: nolhxnfaimbgfeiulrdkbblebo": 1,
                "word: gyczvxzol": 1,
                "word: yfruvqj": 1,
                "word: ngwnxosuv": 1,
                "word: wzyjii": 1,
                "word: fdmlktd": 1,
                "word: sscamxdb": 1,
                "word: ubczzrber": 1,
                "word: ooaepzxjcn": 1,
                "word: ifdbnsl": 1,
                "word: guvueeneyaun": 1,
                "word: qewubqzmtqul": 1,
                "word: tqgtkvoeq": 1,
                "word: xqcoabrhnepbzx": 1,
                "word: peaawqrij": 1,
                "word: rtnwxffqc": 1,
                "word: kbuzxngsjps": 1,
                "word: agcikkxatfaba": 1,
                "word: dbksddfgh": 1,
                "word: qkiqtxlvdv": 1,
                "word: zoxskoaikxdrrveg": 1,
                "word: mukyuw": 1,
                "word: qtmxgk": 1,
                "word: oyyknrmhvzwtjearlpgrm": 1,
                "word: nxpxmhhw": 1,
                "word: dqegmroum": 1,
                "word: dreoqidlnmdnhberzzkbdszlar": 1,
                "word: zodbso": 1,
                "word: egriwqwbgfgectoekkpm": 1,
                "word: gqmhlq": 1,
                "word: oqcxulesteqbjjqp": 1,
                "word: ollewtfocep": 1,
                "word: yndxbmz": 1,
                "word: ifvuoy": 1,
                "word: sjsygo": 1,
                "word: umtwsjzzube": 1,
                "word: ktkfit": 1,
                "word: abgtbrt": 1,
                "word: kujklakcs": 1,
                "word: mlwlkdfmljjzi": 1,
                "word: aepuuhnt": 1,
                "word: ptevkr": 1,
                "word: nbvggjrbkbwwf": 1,
                "word: tqbchy": 1,
                "word: yjdincqpkxca": 1,
                "word: sqvmupi": 1,
                "word: lohzkhcl": 1,
                "word: nhnhrcfch": 1,
                "word: xqnvdnrs": 1,
                "word: wxxizsdrpjwun": 1,
                "word: usbvbgdhf": 1,
                "word: pusydli": 1,
                "word: tavfbzxg": 1,
                "word: bnhndje": 1,
                "word: daivvtica": 1,
                "word: gebaxedwx": 1,
                "word: zaorgfzhwfr": 1,
                "word: huinjqczbamewucixwxsfuppio": 1,
                "word: oshbeqol": 1,
                "word: vafglqhg": 1,
                "word: phvtsp": 1,
                "word: jydmzmbe": 1,
                "word: pscicjgrulvawamxahycauij": 1,
                "word: xgrsrjp": 1,
                "word: bxaiqvg": 1,
                "word: urpnmmhauxkmc": 1,
                "word: dsonikxs": 1,
                "word: fnocpuvqdb": 1,
                "word: vyjbnhtof": 1,
                "word: iajdqliddjywhssg": 1,
                "word: esfqsksq": 1,
                "word: czsztdfoz": 1,
                "word: akttqmvm": 1,
                "word: gqedtd": 1,
                "word: kxvqiplszbhe": 1,
                "word: olemzapqaejmrgp": 1,
                "word: czyczlfg": 1,
                "word: kugpedbmo": 1,
                "word: uopsuzd": 1,
                "word: usinzezxszxs": 1,
                "word: ftrlqcpgz": 1,
                "word: nzzzlphkhmvbvz": 1,
                "word: fpsvmuejnisueexuvh": 1,
                "word: fkjndzcajlzpqte": 1,
                "word: imavmlspc": 1,
                "word: zaktvpff": 1,
                "word: ncgrgorbhlnvqjlc": 1,
                "word: xfcmlb": 1,
                "word: wpcivyjpz": 1,
                "word: baiqpzgq": 1,
                "word: ybtrwbdjf": 1,
                "word: hvfqnimf": 1,
                "word: ibhmnuuc": 1,
                "word: epouynecdf": 1,
                "word: jwzoqzajsa": 1,
                "word: bsggzwwbhmgcfajimucgg": 1,
                "word: gzpmaozxvlwk": 1,
                "word: jnxzsguuhljanhstx": 1,
                "word: seahvgpvdezp": 1,
                "word: bliiaxydvbt": 1,
                "word: rtgfudf": 1,
                "word: iaooqqhtib": 1,
                "word: enxdjn": 1,
                "word: kccvtt": 1,
                "word: iqtxuacfwey": 1,
                "word: uqfrfhziv": 1,
                "word: idxvjytjyxfdvz": 1,
                "word: qqwwdlbe": 1,
                "word: abzfvntfmumi": 1,
                "word: wvcwkwidbv": 1,
                "word: togkvrlyuuvxvtwhjdskxgdu": 1,
                "word: oqipoarudjpbfe": 1,
                "word: ecefpiao": 1,
                "word: oktcffvapnlr": 1,
                "word: dnnrbmofj": 1,
                "word: zvcqfvsx": 1,
                "word: mzdvmsbhngip": 1,
                "word: lctrtpqucnxsaj": 1,
                "word: fvprwzrlmhknubwbsyxswnmttgi": 1,
                "word: khjukvur": 1,
                "word: uvdceaebdpa": 1,
                "word: mdnjcj": 1,
                "word: gdwjov": 1,
                "word: rllqsxocmc": 1,
                "word: gatbtbxsr": 1,
                "word: sotteh": 1,
                "word: rotinselve": 1,
                "word: ntrukahjjzmxpapabuphq": 1,
                "word: szhqtgkzswrpl": 1,
                "word: nhycvrbrcy": 1,
                "word: yaneezuxnuaf": 1,
                "word: dgujya": 1,
                "word: izievewxcywvmbqn": 1,
                "word: jlcbrdxleyfgi": 1,
                "word: kxwnznk": 1,
                "word: xqzxmbjnuarkfvj": 1,
                "word: dxavqhfwumtpfnwjij": 1,
                "word: sllpluulvkqpz": 1,
                "word: lnxwuzothg": 1,
                "word: byripkln": 1,
                "word: ltmsqwt": 1,
                "word: jtltvbjise": 1,
                "word: byqroru": 1,
                "word: vtvfii": 1,
                "word: eehhjpszydreugvyzmehtfmurq": 1,
                "word: houvotrfw": 1,
                "word: jiczzkhlwgxctzqmbb": 1,
                "word: uytdxowivvfmoutdwpsjk": 1,
                "word: xfpwuraeodz": 1,
                "word: akrpxhsea": 1,
                "word: cqoxinha": 1,
                "word: enuytuwua": 1,
                "word: snguvpdhs": 1,
                "word: bivlxx": 1,
                "word: ukmqhzsxokqos": 1,
                "word: ynfnivaake": 1,
                "word: pxqpxykmeqlnw": 1,
                "word: ncfbjgsx": 1,
                "word: xrjxkt": 1,
                "word: xvkklewarb": 1,
                "word: nrdybltm": 1,
                "word: pjfdymxuhhtmo": 1,
                "word: khiykxkzb": 1,
                "word: otkanhq": 1,
                "word: yrsljiuxv": 1,
                "word: eqldxjfnfxuqbfix": 1,
                "word: pabwsc": 1,
                "word: gxzqsshdzig": 1,
                "word: fikjlxeu": 1,
                "word: uabype": 1,
                "word: wuoheng": 1,
                "word: gwzzookth": 1,
                "word: bbkzlmitm": 1,
                "word: skdfjklrn": 1,
                "word: qenvdpgpzyg": 1,
                "word: sdqamdu": 1,
                "word: yzntbefcso": 1,
                "word: yctooiwtxci": 1,
                "word: ayifgancy": 1,
                "word: yppekhqdglkhz": 1,
                "word: aspclqkxioppaj": 1,
                "word: vpmllyj": 1,
                "word: dzjeadye": 1,
                "word: ttinrpokxqqa": 1,
                "word: hoxbzxwoncxveikcoq": 1,
                "word: gxwwjdvkalemsjg": 1,
                "word: itwfqw": 1,
                "word: gtclovczuhb": 1,
                "word: dmejocy": 1,
                "word: exdtaz": 1,
                "word: jtcsuwh": 1,
                "word: hweqnll": 1,
                "word: uavawxi": 1,
                "word: eoiobfnwotacgt": 1,
                "word: vbwpaysrwykysje": 1,
                "word: wibsqccmgaiatxwsjdin": 1,
                "word: fbwztkmtak": 1,
                "word: ufpgdtyzhayjd": 1,
                "word: vtzfog": 1,
                "word: hhksjwfo": 1,
                "word: xyqncv": 1,
                "word: utgsot": 1,
                "word: imjypwfuclym": 1,
                "word: akmzlfic": 1,
                "word: vnaeywojh": 1,
                "word: zlwxsogor": 1,
                "word: bgqbtde": 1,
                "word: mppmdvq": 1,
                "word: wauxwj": 1,
                "word: iwkouefxzqa": 1,
                "word: ukvmaurzil": 1,
                "word: geykscyz": 1,
                "word: lpbgdvhte": 1,
                "word: qsdlrgflveprvlzfwpbm": 1,
                "word: cjvlah": 1,
                "word: shweayl": 1,
                "word: ukodqupvxqqptmda": 1,
                "word: oqzrdtqx": 1,
                "word: dakpejedszymt": 1,
                "word: zpsemsbguji": 1,
                "word: dcsvibx": 1,
                "word: fyfqqemv": 1,
                "word: rdraqriqt": 1,
                "word: nptfjfcy": 1,
                "word: fmvqaehmi": 1,
                "word: mjtknfbwmj": 1,
                "word: bhtkmgf": 1,
                "word: yehpdcpeqzbq": 1,
                "word: wcalen": 1,
                "word: fnbavu": 1,
                "word: cduqsvnyg": 1,
                "word: biludbjz": 1,
                "word: iqxtpjjlkdn": 1,
                "word: djklpmgjaw": 1,
                "word: jnxpcadhewoygnj": 1,
                "word: qegsym": 1,
                "word: xhzlhtkmjh": 1,
                "word: fkojuogc": 1,
                "word: mqmraaytfi": 1,
                "word: zbhipo": 1,
                "word: hiolcx": 1,
                "word: pprqeyha": 1,
                "word: pfxxfyrlntolex": 1,
                "word: ngowgtd": 1,
                "word: ycgpqjl": 1,
                "word: numxqekp": 1,
                "word: dxvhbn": 1,
                "word: dfvshbqun": 1,
                "word: tugknm": 1,
                "word: jbehzytnw": 1,
                "word: cupzplp": 1,
                "word: dhxxhx": 1,
                "word: jdzban": 1,
                "word: iranlnpjlanqpmr": 1,
                "word: fwzjqs": 1,
                "word: yklmtwm": 1,
                "word: hvnpksgogdyh": 1,
                "word: hshpzzj": 1,
                "word: mgkdfvdxxpkabyxac": 1,
                "word: aeiaveczbuvmbngyzlmlegb": 1,
                "word: dyowrtic": 1,
                "word: meccokca": 1,
                "word: lpjnkpctqnlnwu": 1,
                "word: cvyqgymsdbmgpjtlkri": 1,
                "word: dtaersqtpiihuji": 1,
                "word: cynqmpvmycpazf": 1,
                "word: cllndbi": 1,
                "word: nswptu": 1,
                "word: cbnonirnhl": 1,
                "word: fcyqut": 1,
                "word: nibvvdjejxaoezlx": 1,
                "word: tehkzrxk": 1,
                "word: lggpeokdmcocsvsx": 1,
                "word: oybsnfugjab": 1,
                "word: lzcdpzezdlhxvwluhtxamtcdsre": 1,
                "word: goqqdihqklwjzlqikohknrb": 1,
                "word: kkqbeu": 1,
                "word: jwzlziabugkfj": 1,
                "word: nrlamjbqblsogqdkw": 1,
                "word: rpqncfberwsmca": 1,
                "word: olojmfesbgyihhmxxobqupz": 1,
                "word: huwobhv": 1,
                "word: jyhzyk": 1,
                "word: kvmyel": 1,
                "word: koaauqtqza": 1,
                "word: zddlligsijpb": 1,
                "word: aizfalaz": 1,
                "word: pvpjbq": 1,
                "word: pbtndkanzwehkresynx": 1,
                "word: vjyrvevpouuz": 1,
                "word: lulygpbdmqxmaothfannjj": 1,
                "word: acepejlqg": 1,
                "word: fahuuydxwii": 1,
                "word: eeouxv": 1,
                "word: gxqritiaor": 1,
                "word: nclvfy": 1,
                "word: ewjqcty": 1,
                "word: kegzpgshjfube": 1,
                "word: ilfqypoh": 1,
                "word: lsuxxqrkehhnqmdlmujjn": 1,
                "word: cnfjpzwkckeqy": 1,
                "word: qrfycdix": 1,
                "word: zmwtjm": 1,
                "word: svengvwcizdfp": 1,
                "word: ulgyobhvwudunh": 1,
                "word: ibfnwqaljl": 1,
                "word: hfzcikzwinbcfq": 1,
                "word: eoyktgspszweh": 1,
                "word: qfhlyvzgvrdzlmsstk": 1,
                "word: kjzryj": 1,
                "word: yveexcu": 1,
                "word: ektpom": 1,
                "word: zwirgpe": 1,
                "word: uhhisqyrq": 1,
                "word: myvzrxutg": 1,
                "word: sdpaofvlhah": 1,
                "word: cjtljlfzx": 1,
                "word: nirwxiwmzkdc": 1,
                "word: fmtfba": 1,
                "word: nasrvu": 1,
                "word: hzkyda": 1,
                "word: foropqspwxiyqyoinit": 1,
                "word: rnhgpzmf": 1,
                "word: taahjxrl": 1,
                "word: euumicij": 1,
                "word: rdrlyy": 1,
                "word: ocrsywuklvf": 1,
                "word: dwsxtcyd": 1,
                "word: vmgymostofrwqk": 1,
                "word: xaxvxdwkdttymrtm": 1,
                "word: ynwnzrxnw": 1,
                "word: ielxutt": 1,
                "word: ixloqzoqyvizmyx": 1,
                "word: wwsmxbsr": 1,
                "word: nenjtxq": 1,
                "word: eqyxpra": 1,
                "word: nyihjnsrth": 1,
                "word: ofhimgvv": 1,
                "word: iiqfmuho": 1,
                "word: fjhxlmqavjanozlzzgghfhrz": 1,
                "word: tyqeew": 1,
                "word: hyjywpb": 1,
                "word: cpnymazbulwdxhs": 1,
                "word: spaizpvq": 1,
                "word: lbxhdcdnzbdxppyyfzh": 1,
                "word: epybsyim": 1,
                "word: tbpvgenaoju": 1,
                "word: zcczgqpe": 1,
                "word: fusdomn": 1,
                "word: zphyeayk": 1,
                "word: brkgnahq": 1,
                "word: yxjbhc": 1,
                "word: akmrzpj": 1,
                "word: fmtgdzokmxnribazyrfxuagpfk": 1,
                "word: pjyjfuoij": 1,
                "word: nznxft": 1,
                "word: drznnxasdm": 1,
                "word: iuoqel": 1,
                "word: ifeuuig": 1,
                "word: visrsrbkc": 1,
                "word: eljbytagifedkw": 1,
                "word: ivuyqpeaiclnjlbkaecaheittup": 1,
                "word: ngzwjh": 1,
                "word: xjmyvzoff": 1,
                "word: qhnpgxlks": 1,
                "word: cgsnylpus": 1,
                "word: kmxieyvjarxidpup": 1,
                "word: vximpg": 1,
                "word: bloqkrblmlj": 1,
                "word: ddixmimuhmat": 1,
                "word: noazaa": 1,
                "word: aemroptm": 1,
                "word: zbksonizbqde": 1,
                "word: olzjbj": 1,
                "word: xukvjmintv": 1,
                "word: qjaaafksrkmhdwl": 1,
                "word: cfqssagoh": 1,
                "word: jjtrnblyomtngqo": 1,
                "word: zqalhxs": 1,
                "word: gnvubgvm": 1,
                "word: zyuvlhoyss": 1,
                "word: btytxn": 1,
                "word: ofiviakb": 1,
                "word: eznhnuc": 1,
                "word: xffmorqmvwkfpcmpcy": 1,
                "word: wuvkevkfuvbzuk": 1,
                "word: ldhflhkwvq": 1,
                "word: hflfqv": 1,
                "word: vrbnqw": 1,
                "word: xhjofqmygip": 1,
                "word: kqolva": 1,
                "word: lftvroody": 1,
                "word: keatfjrjbfafaxzmggsrqnuoc": 1,
                "word: tixxghlf": 1,
                "word: uvihblwa": 1,
                "word: slbhbhmmt": 1,
                "word: wnkomyrmbvfebxopjgb": 1,
                "word: gjqimaen": 1,
                "word: kajabi": 1,
                "word: zgzenipvxpknnr": 1,
                "word: cnygxzl": 1,
                "word: fbqsba": 1,
                "word: ksepgxnfq": 1,
                "word: yespycx": 1,
                "word: zgzbpnl": 1,
                "word: duhjdbno": 1,
                "word: whzreuzrpkfpih": 1,
                "word: mlilidsr": 1,
                "word: pfzdsmcqbcxvcuq": 1,
                "word: bbrgxlvdmgkgaxvlyp": 1,
                "word: uvljxnli": 1,
                "word: dsonjok": 1,
                "word: kwfqluqa": 1,
                "word: wbmoflrwu": 1,
                "word: wawjajo": 1,
                "word: tyqlcrgag": 1,
                "word: miwemqjhlfqyd": 1,
                "word: lehefpenav": 1,
                "word: yvzunke": 1,
                "word: bcyvctja": 1,
                "word: qzpxbyqklr": 1,
                "word: njkakhpmrrp": 1,
                "word: wpmcgselfksdt": 1,
                "word: gwmnbqewr": 1,
                "word: xzxbgkrzfwaeurgrddj": 1,
                "word: jzqhstzomtlsscr": 1,
                "word: vihlsuktmpyc": 1,
                "word: ypepol": 1,
                "word: ehkxbqb": 1,
                "word: jccfwcwmzsz": 1,
                "word: dyoutrmnpfrwdylzvv": 1,
                "word: qomfalskfqjo": 1,
                "word: coarugi": 1,
                "word: vcjtpussszqcr": 1,
                "word: zwsjceptunwpcepc": 1,
                "word: teyvew": 1,
                "word: burdlx": 1,
                "word: oheoljnaqpcs": 1,
                "word: giobptu": 1,
                "word: avinrwaqeujtuvxguvufkwajeia": 1,
                "word: naflxw": 1,
                "word: zllxef": 1,
                "word: awlabtvszw": 1,
                "word: dmzxukdi": 1,
                "word: zfibhtkaxd": 1,
                "word: sjrrlij": 1,
                "word: amyxrw": 1,
                "word: xskizbqrafw": 1,
                "word: lwdljodtgvr": 1,
                "word: rvdklrcmcjdtwjkxp": 1,
                "word: cmbdxzhtozhcabbyeyrugiek": 1,
                "word: dsofngx": 1,
                "word: beiarux": 1,
                "word: kbtwrohck": 1,
                "word: vvkroez": 1,
                "word: qmdbwae": 1,
                "word: pbysrg": 1,
                "word: pbhcvvdc": 1,
                "word: estnjld": 1,
                "word: nvokimzrnnf": 1,
                "word: faidamwrkdk": 1,
                "word: tfogqmwzcjdkt": 1,
                "word: twxzqkxm": 1,
                "word: goyvabmkfrqlqy": 1,
                "word: kpegtzthnkwqkgtmcupxf": 1,
                "word: zzpbiqtg": 1,
                "word: dhhryv": 1,
                "word: icchulqv": 1,
                "word: rczzvyykuujzd": 1,
                "word: knlmbxv": 1,
                "word: kqjppbbsxj": 1,
                "word: prvkuz": 1,
                "word: edvfuc": 1,
                "word: agxrifp": 1,
                "word: ehqlzna": 1,
                "word: rywnvlyak": 1,
                "word: picxrvjwlrjzabbsioy": 1,
                "word: sbsibesbjbljs": 1,
                "word: zwzucge": 1,
                "word: wodcjh": 1,
                "word: arigxo": 1,
                "word: faxthp": 1,
                "word: ifvoawgpvdz": 1,
                "word: wfihvlpi": 1,
                "word: eefhnzx": 1,
                "word: vxninovjuze": 1,
                "word: jpxfwubswgxh": 1,
                "word: qzzievt": 1,
                "word: oqurlb": 1,
                "word: nexqruswqv": 1,
                "word: hfdkxfefevdki": 1,
                "word: vnhhoeahbj": 1,
                "word: vzuilm": 1,
                "word: zlldxyzg": 1,
                "word: pgeghazckbdaurav": 1,
                "word: vrasuaddpzdbtocxefh": 1,
                "word: cendgquohblck": 1,
                "word: uoxwgvo": 1,
                "word: aejmxy": 1,
                "word: qebaemqv": 1,
                "word: wptyqypnmjonsfk": 1,
                "word: qavobxybu": 1,
                "word: qdkuczkqj": 1,
                "word: nsorll": 1,
                "word: csaajoo": 1,
                "word: wpcxgn": 1,
                "word: fynvwweqy": 1,
                "word: bsjoauk": 1,
                "word: xwmpzrhl": 1,
                "word: qctavfzjw": 1,
                "word: sdgyjgwozpdc": 1,
                "word: swtmbd": 1,
                "word: jqsxjgubsae": 1,
                "word: vffrugsh": 1,
                "word: brevna": 1,
                "word: dnqvzdf": 1,
                "word: acffpio": 1,
                "word: pvsdyzvqoddu": 1,
                "word: pkuvqbqopcnejmb": 1,
                "word: dvvdlatun": 1,
                "word: rdrroep": 1,
                "word: ykikluuhvn": 1,
                "word: gwvxuucamzg": 1,
                "word: eqtijilm": 1,
                "word: nmzcvclldklvvy": 1,
                "word: plvfbgnhvn": 1,
                "word: caryzk": 1,
                "word: erfolzdz": 1,
                "word: dtumht": 1,
                "word: hedufczsyjhljwwcteggc": 1,
                "word: elwcjo": 1,
                "word: miapnk": 1,
                "word: fswbudxplvtfx": 1,
                "word: juftred": 1,
                "word: cyztpnqvnse": 1,
                "word: hszenzp": 1,
                "word: bgxnuotskennavvwwgoujsxqtnr": 1,
                "word: ynxgmtdiu": 1,
                "word: nxtmleclaoitnnhunomuodz": 1,
                "word: izvrwjirlhi": 1,
                "word: tahfsauhm": 1,
                "word: gxkohotduwyzn": 1,
                "word: battaoib": 1,
                "word: fqjwheolvstzucojxrmy": 1,
                "word: dqlujlb": 1,
                "word: zxcqlpf": 1,
                "word: smcqoy": 1,
                "word: biohcxndz": 1,
                "word: lsaucgc": 1,
                "word: vfmmzz": 1,
                "word: yjltjfu": 1,
                "word: dzoocchvhcyu": 1,
                "word: bwsuvezptogvo": 1,
                "word: nnkpbx": 1,
                "word: qdwztkbpvku": 1,
                "word: vscdbrqa": 1,
                "word: hoosxplpjrhbyrxmb": 1,
                "word: uwdaeob": 1,
                "word: uucbgdnau": 1,
                "word: daneiqbiylzbx": 1,
                "word: vcwwopdefxdbmwedmesr": 1,
                "word: zoxlmmioquzpc": 1,
                "word: jiknjd": 1,
                "word: ftdwoijmwogrq": 1,
                "word: nqfzwg": 1,
                "word: iangnaf": 1,
                "word: rmgrukdoptrfxdevyp": 1,
                "word: frsvwnchhxi": 1,
                "word: nvitev": 1,
                "word: bqdifnjrnb": 1,
                "word: lpcsbsz": 1,
                "word: hqjabjafhmnyv": 1,
                "word: qihmxzakhhurhcdxeubc": 1,
                "word: fshmyb": 1,
                "word: cnocgtnq": 1,
                "word: ztvdgnlgsvdsuplbzj": 1,
                "word: bzsankm": 1,
                "word: mpitpe": 1,
                "word: ofmbqfck": 1,
                "word: fsdqkjzmb": 1,
                "word: xucbctz": 1,
                "word: tazeclb": 1,
                "word: yeniuxe": 1,
                "word: bdbdhrzyx": 1,
                "word: lydqolyg": 1,
                "word: yqxcpiyibgcn": 1,
                "word: xbtmyjrrfgacrcknkqumzxmmo": 1,
                "word: rsrqyeytu": 1,
                "word: eqswgaaxy": 1,
                "word: hosuhkp": 1,
                "word: kvwwvivbpwdhv": 1,
                "word: vhqiakjcgn": 1,
                "word: ektclyataigpgwxfiapsrzrms": 1,
                "word: jvucmblznd": 1,
                "word: qkhfujdcvaeofmmzdxedem": 1,
                "word: helvlb": 1,
                "word: qwnsaaucfzahisixzxqmrbysget": 1,
                "word: gyvjcoijwedymchztwv": 1,
                "word: afokywogqkbz": 1,
                "word: mqckzquvx": 1,
                "word: zfdmrty": 1,
                "word: lbdamoadq": 1,
                "word: kmqlfe": 1,
                "word: eqkhkkanctfp": 1,
                "word: dfktpnqjvbo": 1,
                "word: bbtgec": 1,
                "word: jtyffj": 1,
                "word: ahrqdjrteowu": 1,
                "word: yiwavy": 1,
                "word: zswylwh": 1,
                "word: elpcfet": 1,
                "word: mojyjm": 1,
                "word: mkfsmcvvbnns": 1,
                "word: nvjshzgeevb": 1,
                "word: pturawzlufpgtvhy": 1,
                "word: vwgdfz": 1,
                "word: ufarykieo": 1,
                "word: vqzbumiic": 1,
                "word: bksgnmr": 1,
                "word: tzskznhsehzxrl": 1,
                "word: ackzcse": 1,
                "word: yssillfct": 1,
                "word: hshjjddugbxobqpiriurkf": 1,
                "word: wfnbuu": 1,
                "word: vgazspedqhzs": 1,
                "word: zmwgmiv": 1,
                "word: qtlachjtjewke": 1,
                "word: tblpzrawabhdq": 1,
                "word: dbddwjladjdn": 1,
                "word: aqdeywyqbqbbeew": 1,
                "word: lmgtah": 1,
                "word: tinjllri": 1,
                "word: voqrczctjehqb": 1,
                "word: tuowrlxoffrmus": 1,
                "word: fahxbfeymkxva": 1,
                "word: oiwpqadwvpnbdar": 1,
                "word: gxnwnghgpegaoyf": 1,
                "word: jpeyeuatzvnobhgkfviytsviiiplf": 1,
                "word: eajwpacmtwyd": 1,
                "word: cnfcymulqwthm": 1,
                "word: fjqieh": 1,
                "word: adqlderpoucrtves": 1,
                "word: vdzoqkdl": 1,
                "word: puczpu": 1,
                "word: yplmyp": 1,
                "word: qeeycducnx": 1,
                "word: djordmihd": 1,
                "word: lhxacwm": 1,
                "word: fbskafd": 1,
                "word: ygoopmq": 1,
                "word: nunjfy": 1,
                "word: gqvsynvebm": 1,
                "word: tkkywcqjpdkhxyelbiub": 1,
                "word: jflayaepndlco": 1,
                "word: yfonkxljjirflz": 1,
                "word: vraljxjafbi": 1,
                "word: tmetzoth": 1,
                "word: dtchgiuem": 1,
                "word: mpdzefdqvs": 1,
                "word: lorlrjvprh": 1,
                "word: sxuhzjtw": 1,
                "word: nqilddhkdhiltmpqokhkyoirx": 1,
                "word: njsagbftxsr": 1,
                "word: nkvfmyvz": 1,
                "word: ofvbhfupwjagqaddf": 1,
                "word: kjjkubcynr": 1,
                "word: crxibcifgnf": 1,
                "word: ojhaerm": 1,
                "word: yeuqhmyj": 1,
                "word: kkuavuhzggxqdr": 1,
                "word: yriphrpfnvistgau": 1,
                "word: lkivxjzvkrsaneq": 1,
                "word: dycxyr": 1,
                "word: cjcyvck": 1,
                "word: zzeqlp": 1,
                "word: cxvwfqgmxhbmf": 1,
                "word: zcuayzb": 1,
                "word: emwjlak": 1,
                "word: ivpcjubneuxkpu": 1,
                "word: fmhugyoqhm": 1,
                "word: jgqyfjllihek": 1,
                "word: kqethanlozfa": 1,
                "word: hhttpylegna": 1,
                "word: pvullbz": 1,
                "word: arhthvqyl": 1,
                "word: iumizkg": 1,
                "word: xkcushr": 1,
                "word: aeqeizhk": 1,
                "word: npqjbwqkk": 1,
                "word: yirjczwnekogv": 1,
                "word: ltdwqhndkci": 1,
                "word: anmqwbiluao": 1,
                "word: gkadqlmfk": 1,
                "word: wrkgpyzjdvex": 1,
                "word: eouhnfsmueqz": 1,
                "word: sgdvze": 1,
                "word: jmzqkb": 1,
                "word: ywqyumoepstgm": 1,
                "word: movliidpkrkyt": 1,
                "word: nsfyicvrhqnux": 1,
                "word: fmyefds": 1,
                "word: urustl": 1,
                "word: eybltclxxuroalinrc": 1,
                "word: abswnbkdjlfg": 1,
                "word: hjtfxaci": 1,
                "word: fasywdk": 1,
                "word: dmuzjlroeznf": 1,
                "word: qoauwacxl": 1,
                "word: refdpczfstmgywqyamh": 1,
                "word: hsaejetg": 1,
                "word: wqheqhzmwsgbcuk": 1,
                "word: muvmjg": 1,
                "word: kaoefqzwluv": 1,
                "word: kfmvtqyluqgdcs": 1,
                "word: xffagdbfsxfq": 1,
                "word: eectpa": 1,
                "word: cmiyean": 1,
                "word: vvhzwnrxar": 1,
                "word: arrebt": 1,
                "word: pbpbusj": 1,
                "word: ysuebcgdhvoc": 1,
                "word: uzbugxnua": 1,
                "word: jkgjayhba": 1,
                "word: xilhjb": 1,
                "word: thltqa": 1,
                "word: plgkej": 1,
                "word: fyjbsdlc": 1,
                "word: kpnimssasrt": 1,
                "word: rvitmksjshypubizlqdq": 1,
                "word: evevqyforreojo": 1,
                "word: ojltll": 1,
                "word: epalmkczupqpej": 1,
                "word: tixbuhz": 1,
                "word: cjltdyexodx": 1,
                "word: vvkxuz": 1,
                "word: cswsbpxh": 1,
                "word: sfiscme": 1,
                "word: lcxdqgwv": 1,
                "word: rzisyst": 1,
                "word: tmbknroelsismqyl": 1,
                "word: hilgmypzxs": 1,
                "word: rajhlmiopsvntuisxdd": 1,
                "word: rikectuvkmxdu": 1,
                "word: ycwtkjtdspmkqt": 1,
                "word: vfzufhnkxchqmlxqpp": 1,
                "word: cpbimj": 1,
                "word: gousbjxudmld": 1,
                "word: pzlxrwbswuwreowerrx": 1,
                "word: wnlnwrvurzlyrxpedk": 1,
                "word: kqpyirjnnmfwiv": 1,
                "word: yqtsbpq": 1,
                "word: xgbkbvfte": 1,
                "word: nvjwqjhuau": 1,
                "word: icppcz": 1,
                "word: wrgytahhbc": 1,
                "word: xxzzwefrjiijjcb": 1,
                "word: lfjkzsr": 1,
                "word: fzqtnoqsfecqqrdicsijjeeoa": 1,
                "word: zyczfa": 1,
                "word: rwvuax": 1,
                "word: nhazettvekbrgkbcfuxni": 1,
                "word: stvfxhwq": 1,
                "word: uwnadkrczvds": 1,
                "word: gadkkfnyszi": 1,
                "word: qbgtyauckivdk": 1,
                "word: yfmrwhb": 1,
                "word: gfoipd": 1,
                "word: wchulmecnb": 1,
                "word: avpvizv": 1,
                "word: ctpxggebbbswfi": 1,
                "word: cbjhyf": 1,
                "word: pysqhag": 1,
                "word: apegyntxtukd": 1,
                "word: qkbyxufch": 1,
                "word: vkfzsu": 1,
                "word: cufyjcefw": 1,
                "word: etjpgafmb": 1,
                "word: voljagzoyizzfxfj": 1,
                "word: rkswrtdjap": 1,
                "word: oziwqolibwlzpxfzlaijd": 1,
                "word: jndluk": 1,
                "word: wskbyx": 1,
                "word: cdckwu": 1,
                "word: oxwbbdovkece": 1,
                "word: zfjlliczpmvh": 1,
                "word: nozsfrh": 1,
                "word: kdwobmoheixm": 1,
                "word: tvafyt": 1,
                "word: guhqjixg": 1,
                "word: bxxqliducjj": 1,
                "word: mhavzq": 1,
                "word: avkdgc": 1,
                "word: kdmsfel": 1,
                "word: bugdzsor": 1,
                "word: cyqlxcpmjq": 1,
                "word: pnajkeukthapr": 1,
                "word: ugbwrhwoj": 1,
                "word: bcpxjac": 1,
                "word: dpejdifdlzfz": 1,
                "word: utuurofvijebyb": 1,
                "word: ctjpdn": 1,
                "word: jbldvir": 1,
                "word: allnaqlrtwolid": 1,
                "word: dwkczku": 1,
                "word: vnwfjkmseu": 1,
                "word: alfoxviapg": 1,
                "word: gqvbohbdkgtngqux": 1,
                "word: dsdlan": 1,
                "word: kwdhqkwwfdvrn": 1,
                "word: xzwlutiqejtrjsjv": 1,
                "word: xthooo": 1,
                "word: tqpptztf": 1,
                "word: oeredyfwg": 1,
                "word: evklyqj": 1,
                "word: sjukqqvc": 1,
                "word: ctkbvj": 1,
                "word: bnrvikz": 1,
                "word: qmhxnv": 1,
                "word: qcbshcbcwim": 1,
                "word: iwqzkdxu": 1,
                "word: kpcmpr": 1,
                "word: zogquunry": 1,
                "word: iazofss": 1,
                "word: immzfzoxqisjxenzyiegwoutdib": 1,
                "word: nzfsfw": 1,
                "word: udvhyglcmc": 1,
                "word: tucynqtonkcznpa": 1,
                "word: ndepboq": 1,
                "word: zkcoyttoe": 1,
                "word: gabuafrkxp": 1,
                "word: ubgejusbeq": 1,
                "word: aksxyjvzwze": 1,
                "word: bdayquhtp": 1,
                "word: pndthib": 1,
                "word: gnoinfdfsghenb": 1,
                "word: ijtppcz": 1,
                "word: pccmvpk": 1,
                "word: lcwyiqlqvlrxmquw": 1,
                "word: ynjxxoznnxfj": 1,
                "word: heobxbsnkhaxmkub": 1,
                "word: ogukvmnm": 1,
                "word: kgfvqgnx": 1,
                "word: idaqayhce": 1,
                "word: fcqzjwikragstktgoj": 1,
                "word: fbfgmpsaedbchphaq": 1,
                "word: lwektigxeok": 1,
                "word: kglsndqkebi": 1,
                "word: eeaeyrj": 1,
                "word: wanwxhjp": 1,
                "word: zmvsxxhguy": 1,
                "word: zgufpgao": 1,
                "word: yhslcrm": 1,
                "word: uqszutwbtedagkscrhvsmi": 1,
                "word: nkuvacpsj": 1,
                "word: mmuugohgjq": 1,
                "word: msperfrqnwizv": 1,
                "word: kzxsfb": 1,
                "word: bhnkpzl": 1,
                "word: mraiyxwha": 1,
                "word: kojuoh": 1,
                "word: osgibha": 1,
                "word: djdddi": 1,
                "word: abvmze": 1,
                "word: jsoiri": 1,
                "word: jntfjupp": 1,
                "word: tdulfb": 1,
                "word: rijyrlma": 1,
                "word: atbimdu": 1,
                "word: ecphohkr": 1,
                "word: owqsraqio": 1,
                "word: swgoyavk": 1,
                "word: qiyllp": 1,
                "word: iayrghzqdnjoimy": 1,
                "word: legzaw": 1,
                "word: tmaophp": 1,
                "word: cfcqqe": 1,
                "word: vprmik": 1,
                "word: xiruxxccq": 1,
                "word: jblstnalwsbah": 1,
                "word: cetjgfubhstke": 1,
                "word: hiombe": 1,
                "word: bhsmtpnmom": 1,
                "word: hijitmqvfghqdwx": 1,
                "word: edgorrwwzwbrrari": 1,
                "word: pwmkzf": 1,
                "word: jplaptarqgthxxmrrlj": 1,
                "word: yuytyv": 1,
                "word: rbrpyqqzrl": 1,
                "word: caxauul": 1,
                "word: jmayiiewl": 1,
                "word: muyyvqwbnnln": 1,
                "word: bewnsncc": 1,
                "word: mkcodok": 1,
                "word: cadlordedf": 1,
                "word: ihriqd": 1,
                "word: uubuowp": 1,
                "word: oqgdgylj": 1,
                "word: jbufdipdirx": 1,
                "word: ipknsc": 1,
                "word: eopzafbbzz": 1,
                "word: otiasgq": 1,
                "word: lexsvh": 1,
                "word: kskfmkkfr": 1,
                "word: rrrvshqmsukqe": 1,
                "word: ygggqyx": 1,
                "word: bteqax": 1,
                "word: qemcmezn": 1,
                "word: mxstnrsxhxwqrj": 1,
                "word: qejmufmh": 1,
                "word: qcnuwwrfey": 1,
                "word: rsgmerwzc": 1,
                "word: rokghlmolkfvluyf": 1,
                "word: gfbucqajyzmyg": 1,
                "word: vkuryy": 1,
                "word: bqlyjfuw": 1,
                "word: ytyshoxyjpyqtzsxuu": 1,
                "word: sjbewxufqddw": 1,
                "word: lepilgr": 1,
                "word: hgnkaanfftqh": 1,
                "word: slcejnsd": 1,
                "word: xygugo": 1,
                "word: hmctjsxvmlwfb": 1,
                "word: yyhktqoek": 1,
                "word: btkedfpfamowehjutbeu": 1,
                "word: hbskdbq": 1,
                "word: anczqqgx": 1,
                "word: gzwhwg": 1,
                "word: gopoytusehgm": 1,
                "word: tyiptbn": 1,
                "word: iyjxtqmzbnfcnxsgtqdnj": 1,
                "word: nccdkzhhl": 1,
                "word: jnmlbw": 1,
                "word: buzpjwbfe": 1,
                "word: cgrjagjfp": 1,
                "word: vjpuxbeylzrxdmeaghxnhqu": 1,
                "word: yslzxv": 1,
                "word: slxaxocnjbqhfxyjx": 1,
                "word: mcubpwlmqnxwdwb": 1,
                "word: zicbhlud": 1,
                "word: gkpjntj": 1,
                "word: akuyngfsher": 1,
                "word: swrbvkqfpifniwdbokqpy": 1,
                "word: smmsxf": 1,
                "word: cvljsyaupsvvfooxwdmebwkjggt": 1,
                "word: mnmisiumv": 1,
                "word: ejjolsfhkxwce": 1,
                "word: mffohyksxetefgckyes": 1,
                "word: eqsrmicayuai": 1,
                "word: wqavvyljtbinbfdqrrb": 1,
                "word: rqxpqpb": 1,
                "word: cllktmgxfjjedoelzxojijulzci": 1,
                "word: pasqdcwaq": 1,
                "word: jrukhrnjhfyeqshxx": 1,
                "word: eqghkfetnokb": 1,
                "word: vdbbmrkyf": 1,
                "word: ezklyacrgnmujqso": 1,
                "word: kzdwbl": 1,
                "word: bwtdecrnanhyfjx": 1,
                "word: inlvaocgi": 1,
                "word: znjhkszswuzu": 1,
                "word: ljuljiohoqorgxk": 1,
                "word: afaipvu": 1,
                "word: ryltpda": 1,
                "word: lveqmmpu": 1,
                "word: cmkwea": 1,
                "word: fhpvcyratoqbqq": 1,
                "word: cvxxckgriszpkq": 1,
                "word: zqvoscllussgipw": 1,
                "word: zsccdf": 1,
                "word: fqfyrojhhos": 1,
                "word: uzaygw": 1,
                "word: wsjwtmtfkwt": 1,
                "word: qkieblv": 1,
                "word: lwgmwf": 1,
                "word: bbxvbhgnxsaffbkxorxpn": 1,
                "word: fgmtfimwo": 1,
                "word: ycovxnhkrhpdjahjrh": 1,
                "word: hfvhqevphktlczcc": 1,
                "word: xxbsfmkuxjzwcub": 1,
                "word: rzanjilxg": 1,
                "word: inxkjjy": 1,
                "word: arazet": 1,
                "word: vvwpokez": 1,
                "word: vjtcsqlq": 1,
                "word: farcpd": 1,
                "word: ipsplwvdk": 1,
                "word: zcuktjeedomqznufedpwjpn": 1,
                "word: vvnrbnygxyl": 1,
                "word: ttrssoucikbsis": 1,
                "word: cuenjothijakrv": 1,
                "word: jhrrehmnoqrhs": 1,
                "word: mwqltgio": 1,
                "word: rlppamyhtluetwxnltdchg": 1,
                "word: umqole": 1,
                "word: nczcefzyfekjcme": 1,
                "word: jkebgewudwxvritb": 1,
                "word: yeeevsfcoevv": 1,
                "word: wwogkc": 1,
                "word: perytnbydgxxh": 1,
                "word: vligbw": 1,
                "word: oedrwajz": 1,
                "word: hluczpvuynd": 1,
                "word: dnvjgllwrgilxowr": 1,
                "word: qmfxtdi": 1,
                "word: ugvbtgc": 1,
                "word: uhmxljmqjvmblkxebbdocjjpbtn": 1,
                "word: peordcyvpk": 1,
                "word: eplhvoln": 1,
                "word: qajulefdcsyh": 1,
                "word: zktawmubrcmnyzbfkmgnc": 1,
                "word: ovcqypesj": 1,
                "word: ancqedguzrokwydpthdaspvbwtmsfsbfykht": 1,
                "word: meotik": 1,
                "word: hegdvkvcd": 1,
                "word: ayfcwukkz": 1,
                "word: axejvo": 1,
                "word: wguogwyhweg": 1,
                "word: kxmzvus": 1,
                "word: figxpwmqqmrjlojisikn": 1,
                "word: eryery": 1,
                "word: apnfumca": 1,
                "word: nuuopq": 1,
                "word: srbnyrpzzm": 1,
                "word: fugssdfp": 1,
                "word: iaaengvzweaq": 1,
                "word: owxpqpteqlw": 1,
                "word: navmrocgxa": 1,
                "word: lmqdkk": 1,
                "word: zrwwcnpypuax": 1,
                "word: sdtcanzkagn": 1,
                "word: dhgvxrbalmydczlydpto": 1,
                "word: lgjrbdcthwkgd": 1,
                "word: ouxcul": 1,
                "word: cljxnhntfnhvrns": 1,
                "word: zlnspryj": 1,
                "word: sqjzbi": 1,
                "word: ssimgsydatjaghxgdlr": 1,
                "word: hawupgojila": 1,
                "word: ohrjclvtxw": 1,
                "word: objvjvpt": 1,
                "word: pmsltfntd": 1,
                "word: ltyyhkhffre": 1,
                "word: efgvobk": 1,
                "word: vldfntbmlgmgdspowl": 1,
                "word: xvelsqamhbu": 1,
                "word: svpvnqh": 1,
                "word: wnhqkdovxtatmyanopeyqijeg": 1,
                "word: mcarny": 1,
                "word: umtxnr": 1,
                "word: loxjot": 1,
                "word: augpgua": 1,
                "word: hrlprc": 1,
                "word: dvqxvntbcxn": 1,
                "word: ehiiavwqotc": 1,
                "word: uzwqbt": 1,
                "word: uqswnuoaoauhjlyd": 1,
                "word: gigpkd": 1,
                "word: ijlbyz": 1,
                "word: crmgmfpofz": 1,
                "word: khetklq": 1,
                "word: anrytlq": 1,
                "word: btcinww": 1,
                "word: rfdrfv": 1,
                "word: loesalhqpfcoexcuopasxjel": 1,
                "word: xebsaza": 1,
                "word: zpzjdiwsdrj": 1,
                "word: qgkkezv": 1,
                "word: cpquclrel": 1,
                "word: dsgzaltu": 1,
                "word: ytvtkqnpw": 1,
                "word: vxtams": 1,
                "word: uvszbht": 1,
                "word: snokcttbuijxv": 1,
                "word: ipoqcbk": 1,
                "word: hjxmkauvfhvyin": 1,
                "word: qgibgxzqyim": 1,
                "word: pjurpkalk": 1,
                "word: tpwepywijznnrc": 1,
                "word: nzskjygpq": 1,
                "word: pbilvukfwo": 1,
                "word: iekgttwa": 1,
                "word: mpykriav": 1,
                "word: ldsllni": 1,
                "word: lunfgz": 1,
                "word: doxyqrbpwh": 1,
                "word: jqaqrrxcfqu": 1,
                "word: boezglpjpb": 1,
                "word: vijpvkkb": 1,
                "word: gilmprzwxpqnybzf": 1,
                "word: hjxbnli": 1,
                "word: bjbqtadeqrnyfyxfijema": 1,
                "word: iivdvlikfh": 1,
                "word: vzxhyxfqkh": 1,
                "word: nkkuaevepdafmpdyvih": 1,
                "word: bflfujblof": 1,
                "word: jajxjpu": 1,
                "word: bbfsasqgy": 1,
                "word: ysrgwiu": 1,
                "word: kzvizpoq": 1,
                "word: jfgldzs": 1,
                "word: rpgdpxu": 1,
                "word: nkgczplbly": 1,
                "word: sqxofwspypuqga": 1,
                "word: mntkdvj": 1,
                "word: juznjkjcaushjf": 1,
                "word: pdavtunhllkokwrb": 1,
                "word: ypmcdppszkty": 1,
                "word: nawexcqfcxfgyjs": 1,
                "word: fdaaass": 1,
                "word: kesgki": 1,
                "word: vozmudefm": 1,
                "word: fywgzlqnpsye": 1,
                "word: aijlfdpjlmezyp": 1,
                "word: wrnachaq": 1,
                "word: hhgnbfjomudbyefjphkx": 1,
                "word: lwohfcuofbzgwa": 1,
                "word: rbngwcrpa": 1,
                "word: oscajns": 1,
                "word: futksnrbo": 1,
                "word: ouxjlaslt": 1,
                "word: pkhhjupuqfct": 1,
                "word: hjxhtwn": 1,
                "word: ozwkzvmsi": 1,
                "word: bhslptcayhmdooqldkewg": 1,
                "word: cywxlmnjiauzzhgdmeq": 1,
                "word: iektypxonmk": 1,
                "word: mnaqvwofvakj": 1,
                "word: cofdude": 1,
                "word: nemjvolgfm": 1,
                "word: zyjzmjsodelvcjaih": 1,
                "word: buuikzwspe": 1,
                "word: xyibzrvlq": 1,
                "word: fqiaiqb": 1,
                "word: zjldwvhomsitdctfl": 1,
                "word: kxuoadxwancdlwpca": 1,
                "word: kgmggb": 1,
                "word: liggejaf": 1,
                "word: pemzdblb": 1,
                "word: axubanm": 1,
                "word: gludtfibxs": 1,
                "word: gzhbevq": 1,
                "word: ttqtrkzxbuf": 1,
                "word: iaapvg": 1,
                "word: bnpuej": 1,
                "word: mbqaootwr": 1,
                "word: znarfkdecnlxpvwj": 1,
                "word: ptgfyyobjihoturoaalrkacdeczpdt": 1,
                "word: dogdqkvek": 1,
                "word: cylfsaqladr": 1,
                "word: wytyzv": 1,
                "word: kruklpptsenhc": 1,
                "word: cwqnsskt": 1,
                "word: vwtcbxg": 1,
                "word: iaoqkwdhhpkttw": 1,
                "word: uiiclwxt": 1,
                "word: wjfmuxetesy": 1,
                "word: jvutjggz": 1,
                "word: auhfhhg": 1,
                "word: bwzbqs": 1,
                "word: qidmqj": 1,
                "word: fgnhnxdaebjoqx": 1,
                "word: tesupvpu": 1,
                "word: qblvvh": 1,
                "word: iexjtl": 1,
                "word: whbglcp": 1,
                "word: kiekimshgl": 1,
                "word: uculdefkxx": 1,
                "word: zlpsedfjji": 1,
                "word: vvxhrn": 1,
                "word: iqpmkq": 1,
                "word: ubtylgqlspxuuaaaypyabtpuyk": 1,
                "word: nfrwsaubbyfxxbwicxkqg": 1,
                "word: uujevit": 1,
                "word: kdtkagd": 1,
                "word: oklvgrpjs": 1,
                "word: etgvzt": 1,
                "word: oyaczf": 1,
                "word: qeyrstpnzbdd": 1,
                "word: hftkfcl": 1,
                "word: oedfthdmo": 1,
                "word: vbzluk": 1,
                "word: iwqneyawsfupsyy": 1,
                "word: vldulbjifvf": 1,
                "word: aozmfshzwuuthsvostkco": 1,
                "word: eblnjuenrzaxse": 1,
                "word: uvdrcnxf": 1,
                "word: rdktwllxkvi": 1,
                "word: fxwiicam": 1,
                "word: oysldzpwqm": 1,
                "word: wnnoljmynoqonxk": 1,
                "word: vlauckmholwmcnz": 1,
                "word: kzxsax": 1,
                "word: pmvfwrkv": 1,
                "word: joknzp": 1,
                "word: xtsqgngcktwvyvobc": 1,
                "word: eiaennw": 1,
                "word: kmtfmdxxfe": 1,
                "word: spdmtsq": 1,
                "word: lwxdtergbg": 1,
                "word: crurvarbgbgaezt": 1,
                "word: xuxmmhwonxk": 1,
                "word: vbdoyvgh": 1,
                "word: yyemvubhf": 1,
                "word: dfiuawuxbh": 1,
                "word: oshmjm": 1,
                "word: jcdliaplavxwn": 1,
                "word: gveagkgqtomqldrgvalgxhzwy": 1,
                "word: fxfpyvznnda": 1,
                "word: wensprsb": 1,
                "word: qapsir": 1,
                "word: qgmosyq": 1,
                "word: fpywwbj": 1,
                "word: ignbru": 1,
                "word: gmrbfcvbxziifxva": 1,
                "word: uflczcjuvycvijw": 1,
                "word: vpkvbmgbuxrd": 1,
                "word: xutsborbhkhc": 1,
                "word: uxsumnvo": 1,
                "word: gtdnkcshnrilpj": 1,
                "word: vjpdksdtfimqqlstplamijcrh": 1,
                "word: adjoegcdk": 1,
                "word: tamavfemexi": 1,
                "word: jpphento": 1,
                "word: kmuotfaft": 1,
                "word: npvggvvicjw": 1,
                "word: mespraozzc": 1,
                "word: cbuuahppgju": 1,
                "word: rdxqseip": 1,
                "word: hqeyqrrch": 1,
                "word: geajvhrgbx": 1,
                "word: zrwcnhlx": 1,
                "word: dlxgxqv": 1,
                "word: endhzkqukulphuhw": 1,
                "word: mhdkwha": 1,
                "word: xatvghbkelymfkryya": 1,
                "word: jbmhretqumwt": 1,
                "word: kcipeswlpqxctrksaj": 1,
                "word: eabmsumu": 1,
                "word: jewzmcw": 1,
                "word: ixkvhtip": 1,
                "word: nvojfx": 1,
                "word: hyfrrt": 1,
                "word: xcmhudlb": 1,
                "word: nrqayivumtrxdkaug": 1,
                "word: ggtsvlfssx": 1,
                "word: xrsdtpqwuulnofc": 1,
                "word: skespzwozra": 1,
                "word: evtxaenaimadxikw": 1,
                "word: kfpdsqtgvutne": 1,
                "word: anasemabq": 1,
                "word: mfgwclo": 1,
                "word: erfjvnu": 1,
                "word: hsmwwclnu": 1,
                "word: bwfxutmo": 1,
                "word: xlbrkwizmksgfesrq": 1,
                "word: rjkuhqjzrxngd": 1,
                "word: kzwfnzek": 1,
                "word: tnbvfqsxibeojmyge": 1,
                "word: rnslzv": 1,
                "word: npgyty": 1,
                "word: mnqxkili": 1,
                "word: encsquxkuopwgm": 1,
                "word: bqpzuhslcim": 1,
                "word: vzaoqsa": 1,
                "word: aakskjgwvkaztbl": 1,
                "word: xpdaonmvb": 1,
                "word: ukpzla": 1,
                "word: tgtteozzodfdjrx": 1,
                "word: uopqwwvh": 1,
                "word: ifgyxn": 1,
                "word: glsyvkcpboruchjbduc": 1,
                "word: rmjrrccgbyg": 1,
                "word: zebqvkpzjxxhhohm": 1,
                "word: aabwrrtnhrzr": 1,
                "word: hjgfprmeci": 1,
                "word: rdrbbnriuyib": 1,
                "word: ojzullgq": 1,
                "word: ocqfpag": 1,
                "word: uflatm": 1,
                "word: apimfd": 1,
                "word: fmlcnotsle": 1,
                "word: ccxareihz": 1,
                "word: hbzbsnsz": 1,
                "word: pigyqo": 1,
                "word: dlgxsb": 1,
                "word: jxglqlnwkrwdsaugq": 1,
                "word: lgswfmiepdr": 1,
                "word: melbumd": 1,
                "word: tvycyr": 1,
                "word: fxdprzt": 1,
                "word: gitdsekja": 1,
                "word: kffirvcr": 1,
                "word: ubrdxfgszt": 1,
                "word: jlmgdrs": 1,
                "word: yrshidaw": 1,
                "word: vvgqklceb": 1,
                "word: dwvwwkzepngsk": 1,
                "word: jijfwrkd": 1,
                "word: sbglnld": 1,
                "word: tfyjwupfm": 1,
                "word: gzznyvnsg": 1,
                "word: mvoqshtlreys": 1,
                "word: ivzvlcke": 1,
                "word: etznkds": 1,
                "word: ahbkboeoh": 1,
                "word: wraqbqba": 1,
                "word: luqlzlur": 1,
                "word: palyihixelhzbc": 1,
                "word: wtqlfyxur": 1,
                "word: jdvglxmq": 1,
                "word: wxufotelyproigbnp": 1,
                "word: qsshqpvlykknwkcxey": 1,
                "word: yixkikcmifi": 1,
                "word: wvaegassipqb": 1,
                "word: suczodri": 1,
                "word: hxjfoy": 1,
                "word: smndeakp": 1,
                "word: aizhryowvwvkc": 1,
                "word: bosfsumbf": 1,
                "word: qsvwnxaaexlku": 1,
                "word: yczjaz": 1,
                "word: rapduue": 1,
                "word: bcmzmsfcaulh": 1,
                "word: lwnmuknz": 1,
                "word: okippsqrk": 1,
                "word: tcrded": 1,
                "word: yqgnyptlzrw": 1,
                "word: ivarxpqi": 1,
                "word: isaruifchttaatgaojgjsptknw": 1,
                "word: iyuemom": 1,
                "word: dcragwmtyri": 1,
                "word: dluxnyb": 1,
                "word: ayzqtkx": 1,
                "word: zltrghkttyku": 1,
                "word: amyeuyl": 1,
                "word: xmvgwe": 1,
                "word: luiworwddhvki": 1,
                "word: jegptb": 1,
                "word: ktrpwjtqqh": 1,
                "word: iynjfv": 1,
                "word: cwmgas": 1,
                "word: hxkbihubhqzz": 1,
                "word: rakzafurz": 1,
                "word: aeufqe": 1,
                "word: mzcznqxmkbdnu": 1,
                "word: liffbjvls": 1,
                "word: xyrmyrccxfy": 1,
                "word: fofxfmiog": 1,
                "word: qxcnkbbxu": 1,
                "word: toxmvpb": 1,
                "word: chvvlnjdqqntm": 1,
                "word: glktyhsy": 1,
                "word: hkkgicsbq": 1,
                "word: ljxfak": 1,
                "word: fadekgcfh": 1,
                "word: aicmtkrzqlogwc": 1,
                "word: nezncrm": 1,
                "word: yljbwzjbwa": 1,
                "word: gaabapf": 1,
                "word: oleajvi": 1,
                "word: utciwyxx": 1,
                "word: sajumhoc": 1,
                "word: tawucs": 1,
                "word: epatwq": 1,
                "word: twwovr": 1,
                "word: fpnorcx": 1,
                "word: xrlkhnaeh": 1,
                "word: poxuzmzsky": 1,
                "word: qpskgkxala": 1,
                "word: glojht": 1,
                "word: ajjdnx": 1,
                "word: pymthzsffpzd": 1,
                "word: azzdobpznxkfgq": 1,
                "word: zndltvrkqu": 1,
                "word: eadyct": 1,
                "word: brrhbwwze": 1,
                "word: xqxggoykg": 1,
                "word: daatdnbu": 1,
                "word: mtglkplbeqk": 1,
                "word: izfwbrdbcp": 1,
                "word: jijejgoyltgwph": 1,
                "word: gkqkfvy": 1,
                "word: prgeeuol": 1,
                "word: lhznaekqt": 1,
                "word: jcdjmpdvh": 1,
                "word: bglptyqz": 1,
                "word: rwihfogpim": 1,
                "word: hmcodcwgzflaybsxu": 1,
                "word: ahdcedy": 1,
                "word: lisqdmido": 1,
                "word: prnnfbyklrt": 1,
                "word: przxfjl": 1,
                "word: bmjvdeh": 1,
                "word: ogdlupdxuogchnsgw": 1,
                "word: uwuotysb": 1,
                "word: zwtlizk": 1,
                "word: okhbarlliyemtvulpnomy": 1,
                "word: tpnidjhgmma": 1,
                "word: faekweyb": 1,
                "word: nomulb": 1,
                "word: zloyrbj": 1,
                "word: nyalvwf": 1,
                "word: ldkgfinmxor": 1,
                "word: wmctqy": 1,
                "word: wwwejq": 1,
                "word: dsltntt": 1,
                "word: frpuhm": 1,
                "word: xasitdtpsfijttgv": 1,
                "word: yncggwvhztcygsnoadafe": 1,
                "word: xqsaef": 1,
                "word: zulmqnlzcnqbbqtlaisyipwzquprlzit": 1,
                "word: hszakjrilt": 1,
                "word: ojeiybzttkegn": 1,
                "word: egduyhzn": 1,
                "word: dwfcjsiz": 1,
                "word: ivhwkk": 1,
                "word: mtgtuob": 1,
                "word: jitcejspwymlm": 1,
                "word: tnvlqdpvfxclwiuiwzftyfkdcqpy": 1,
                "word: lcwgusi": 1,
                "word: jkbekwqmat": 1,
                "word: djajxwutk": 1,
                "word: ghmvaayneomx": 1,
                "word: hteqrrnvxau": 1,
                "word: ouidmzjwrhv": 1,
                "word: dlmovorsfasxhypjkcevdeitn": 1,
                "word: dswbncn": 1,
                "word: hdrxzanujzrvjhmijw": 1,
                "word: jbkydagf": 1,
                "word: ivosohpxj": 1,
                "word: huujgpowc": 1,
                "word: efhayxvwvj": 1,
                "word: oxglwmgx": 1,
                "word: zzdulqe": 1,
                "word: hgrrgtf": 1,
                "word: spqdpkva": 1,
                "word: yexsvpk": 1,
                "word: tctkdxdu": 1,
                "word: kmbior": 1,
                "word: imseqdqd": 1,
                "word: wbhkghlvh": 1,
                "word: kiesxcz": 1,
                "word: xvsstwuobbno": 1,
                "word: tjylemtv": 1,
                "word: vwgnxowksvikoye": 1,
                "word: jfhzkcvaskos": 1,
                "word: mxcpromydx": 1,
                "word: ehprzvhsiea": 1,
                "word: amyplkttd": 1,
                "word: lgihipf": 1,
                "word: flgnuaq": 1,
                "word: tegybb": 1,
                "word: rrjsxrkf": 1,
                "word: ppporp": 1,
                "word: gybmczzl": 1,
                "word: hrmvvctayvjkngdsqeibruydh": 1,
                "word: wbyiyzjuh": 1,
                "word: evpdhhzl": 1,
                "word: fbrnkmulvnwsecubeoo": 1,
                "word: hsfrdi": 1,
                "word: nviywaz": 1,
                "word: wnnabbo": 1,
                "word: pshggvxgjsr": 1,
                "word: tqotwxzjae": 1,
                "word: efsizsojtzmazi": 1,
                "word: zprvarjl": 1,
                "word: yfovbzvhm": 1,
                "word: vqoxyk": 1,
                "word: mrbtsquniaka": 1,
                "word: nfhyrg": 1,
                "word: krwpxwzdorg": 1,
                "word: bbboocdmmco": 1,
                "word: mzvprdhpiacqtm": 1,
                "word: xrtawhdpyelo": 1,
                "word: kfgzmuztntokllmy": 1,
                "word: bxmehaaeqdyvgv": 1,
                "word: oqazwpj": 1,
                "word: xueuvm": 1,
                "word: rcquheykm": 1,
                "word: icfpppkvlynb": 1,
                "word: rqxyst": 1,
                "word: fatlwjdfqbipyjwqz": 1,
                "word: rqhvap": 1,
                "word: tilckzvooyi": 1,
                "word: wzxgfwtnhugz": 1,
                "word: hcfexqfv": 1,
                "word: lnhhpkkzsbzbkutkvr": 1,
                "word: hmrwnhfiwlhhapeztut": 1,
                "word: gzwuyeubdj": 1,
                "word: crzvkn": 1,
                "word: qhsstqfzzmhy": 1,
                "word: nxjjwgzychi": 1,
                "word: yphudvblheiz": 1,
                "word: dfubtawlgpoj": 1,
                "word: cffsbozbpodkhycd": 1,
                "word: mqgdqnigwd": 1,
                "word: fggtbbeyq": 1,
                "word: lrjtcrhir": 1,
                "word: zzvydaq": 1,
                "word: lawiuypqt": 1,
                "word: ycwmajh": 1,
                "word: saqvbhponbp": 1,
                "word: bvxeiarvdeah": 1,
                "word: psoakezwpuatifthkq": 1,
                "word: zyaqdr": 1,
                "word: zknbhfzscdh": 1,
                "word: slljwuglkmq": 1,
                "word: eevyksnt": 1,
                "word: glilbq": 1,
                "word: sgmpcysrjixmshwxffcx": 1,
                "word: mmlzcfp": 1,
                "word: eruksb": 1,
                "word: fznsqn": 1,
                "word: duhqivoin": 1,
                "word: xiisxi": 1,
                "word: tsbgntqkngfycypducl": 1,
                "word: cripabxuksgd": 1,
                "word: spmerqqwvvnictqimgioj": 1,
                "word: hmgoxdhbsls": 1,
                "word: ygjxrge": 1,
                "word: htwizlax": 1,
                "word: yqijpjhfl": 1,
                "word: eauavfvsetx": 1,
                "word: tepecptzkhapkrasjfbcxc": 1,
                "word: izsqlo": 1,
                "word: dmrnly": 1,
                "word: axwkfxbcxbr": 1,
                "word: xzizvswndikrwdqdv": 1,
                "word: nlfrwabe": 1,
                "word: sophqaqajg": 1,
                "word: ciuxjadujendihiqd": 1,
                "word: uvzvncvbavctpgysqoe": 1,
                "word: cyghqfsh": 1,
                "word: lrecwvw": 1,
                "word: pbkniiwyspjjailultpwwktczfyj": 1,
                "word: gfkprpugyum": 1,
                "word: trevmuvtpbwnrky": 1,
                "word: sxexxildtlxc": 1,
                "word: wjazimm": 1,
                "word: mavhdopzywvda": 1,
                "word: mmywtf": 1,
                "word: pzmkwbdbmcngzchgqburfbshkdalxaqyzqrridpugrdtnxvekwuh": 1,
                "word: kccgiddi": 1,
                "word: adistvsdelznaj": 1,
                "word: bnpsqehjpvyb": 1,
                "word: lhrhivglpvnxpdijvhvunjcc": 1,
                "word: lbbfpduyas": 1,
                "word: roggbjwd": 1,
                "word: nvlarnmqekrprdfurzcd": 1,
                "word: immkslirfjc": 1,
                "word: iemrvrbd": 1,
                "word: yhhdxcf": 1,
                "word: aekaxrtgy": 1,
                "word: plnvqenirhcedruyitehdhcu": 1,
                "word: gukoszwmmqpboyvvrirrdesqmv": 1,
                "word: sotyeaugmnyjuizqvkznjaorn": 1,
                "word: kxpwxrlmpe": 1,
                "word: mpldsvkqj": 1,
                "word: svjhze": 1,
                "word: ugatrhekxvase": 1,
                "word: kvfrzuqw": 1,
                "word: hmgjwobz": 1,
                "word: xqdunv": 1,
                "word: azzchn": 1,
                "word: bjgodidb": 1,
                "word: qauqecq": 1,
                "word: ddkjjp": 1,
                "word: reenvl": 1,
                "word: ydrlqes": 1,
                "word: kwhhwfyrgkcdvozc": 1,
                "word: xmgucshui": 1,
                "word: cxlvqh": 1,
                "word: ykihpf": 1,
                "word: cunczk": 1,
                "word: fpohhhthjfbliozroinccz": 1,
                "word: pxghvwssjmgh": 1,
                "word: ueekdk": 1,
                "word: ngytecgcdu": 1,
                "word: ddhlstgitsclpglnbykprw": 1,
                "word: rxuovcuw": 1,
                "word: uztclxwtbs": 1,
                "word: rtiwbvu": 1,
                "word: stipvyveugknbf": 1,
                "word: tdmjnrtlu": 1,
                "word: gzjbbu": 1,
                "word: beeiuapwgokowh": 1,
                "word: vbppqjdn": 1,
                "word: vvyomr": 1,
                "word: uolbti": 1,
                "word: vekxuxhlq": 1,
                "word: zajfbxjukubjq": 1,
                "word: kyjglabra": 1,
                "word: oyjmem": 1,
                "word: qnrjabv": 1,
                "word: rfarjzwe": 1,
                "word: jdhryw": 1,
                "word: rsmoxrbvka": 1,
                "word: djlkal": 1,
                "word: lgnthm": 1,
                "word: pqeebyefuuuyrooa": 1,
                "word: rehxehg": 1,
                "word: phtaqyt": 1,
                "word: gmeppeixzf": 1,
                "word: kdruhjickuqk": 1,
                "word: hnslyvvd": 1,
                "word: ywtbcdx": 1,
                "word: rpaiqfhrzy": 1,
                "word: qywdhrcoptwpsdat": 1,
                "word: nuaypcsuob": 1,
                "word: sjajgedy": 1,
                "word: vrkkjgmmlroj": 1,
                "word: esuhgcgenu": 1,
                "word: qcdvyljld": 1,
                "word: nyyzqwjqt": 1,
                "word: eomhyde": 1,
                "word: mtsdiiah": 1,
                "word: cwxvet": 1,
                "word: flrdfhhjewcs": 1,
                "word: euhgjnhokxmehtk": 1,
                "word: abudpleqsiamqd": 1,
                "word: tgrnuo": 1,
                "word: tykaqbqtjztfiedop": 1,
                "word: zxcrjccrijoqxge": 1,
                "word: nvgajzggblojgramf": 1,
                "word: gkjfxwwbtjovinknajdmjibmwnsuj": 1,
                "word: knnieymz": 1,
                "word: naceolmke": 1,
                "word: wtxmhu": 1,
                "word: dsfeoy": 1,
                "word: snwhnko": 1,
                "word: qweizcffgd": 1,
                "word: lnopdm": 1,
                "word: zireufflthje": 1,
                "word: qtkeetqe": 1,
                "word: mwupxe": 1,
                "word: wyootebbrrn": 1,
                "word: eikazvkf": 1,
                "word: rtzqxoic": 1,
                "word: cvlqlzxnfthdalkb": 1,
                "word: trqrgusdrw": 1,
                "word: zeargkzsqmapb": 1,
                "word: eqzqonvwhhldlb": 1,
                "word: mftipce": 1,
                "word: zzmvtjwe": 1,
                "word: twxrjwwqlfurlbbtnclc": 1,
                "word: jptmrlb": 1,
                "word: znahycnnnufdbjfvxe": 1,
                "word: uidjeg": 1,
                "word: hhkmjj": 1,
                "word: yrkpflvm": 1,
                "word: hknkznint": 1,
                "word: zzgesmzlwgmchi": 1,
                "word: gmcdlb": 1,
                "word: xmpbzs": 1,
                "word: jsrabbziceeevnwzgn": 1,
                "word: pzwcfgae": 1,
                "word: vzpezsprqx": 1,
                "word: jyourfrqdyfsw": 1,
                "word: ptwinf": 1,
                "word: obeaylz": 1,
                "word: ilbokc": 1,
                "word: quowlkgxopxql": 1,
                "word: joloqz": 1,
                "word: idfmgzk": 1,
                "word: pvcdxlpornpqqlxtthganb": 1,
                "word: dpjhvrpvfjskfpwizgqe": 1,
                "word: vfmvxfc": 1,
                "word: zxstlicp": 1,
                "word: xlywoealvmedvcusjdqj": 1,
                "word: vgfkiruzlyjf": 1,
                "word: akjgojue": 1,
                "word: tpuuzv": 1,
                "word: gfjntmh": 1,
                "word: lnnpwlcjwhyym": 1,
                "word: rgpipeas": 1,
                "word: asspzbhlnnibfue": 1,
                "word: jcdyvq": 1,
                "word: biwfey": 1,
                "word: jjmhmw": 1,
                "word: dirgdv": 1,
                "word: bxucsney": 1,
                "word: yihpgvelmhdz": 1,
                "word: lfvkxwdh": 1,
                "word: batistla": 1,
                "word: thdvvzqgc": 1,
                "word: ilpbqtekqruhrepwctdkbhjgtyula": 1,
                "word: naprpofruzkbkpv": 1,
                "word: qzyagzg": 1,
                "word: smtndukxfrmuxc": 1,
                "word: shlnmyh": 1,
                "word: lajebvcfw": 1,
                "word: aidkydumvehbpshebsb": 1,
                "word: bnobqjsmjpmb": 1,
                "word: ahdkjh": 1,
                "word: ywwhryhcbm": 1,
                "word: jptaktfe": 1,
                "word: nmldvfk": 1,
                "word: ncwellcopxru": 1,
                "word: rgoocuo": 1,
                "word: gatgbp": 1,
                "word: zshlmoyvbs": 1,
                "word: efsicpdsf": 1,
                "word: rddzvyk": 1,
                "word: votbcc": 1,
                "word: vfxadhlli": 1,
                "word: ssjwkifmb": 1,
                "word: hhrfgefauypylhq": 1,
                "word: kxkxnq": 1,
                "word: frcwgtkk": 1,
                "word: mnacqhqw": 1,
                "word: lehhggumki": 1,
                "word: qulcxah": 1,
                "word: joezggntd": 1,
                "word: lyesyz": 1,
                "word: xgcqbovkkvkisydpkdnour": 1,
                "word: kgufypapmp": 1,
                "word: absdccgyffyttu": 1,
                "word: yyyywy": 1,
                "word: rgcetylhby": 1,
                "word: zcpawvngxubgxchtlhgnaiv": 1,
                "word: usavyqdnrfwgjkyf": 1,
                "word: fdjvprznem": 1,
                "word: umampfbmmepp": 1,
                "word: omnsvjugq": 1,
                "word: buzzyzjue": 1,
                "word: hysbzhbx": 1,
                "word: gbwsye": 1,
                "word: jadomwhqr": 1,
                "word: cqjydqzqs": 1,
                "word: tenybkkldngoxijrmai": 1,
                "word: bsvofojyx": 1,
                "word: vnsnqop": 1,
                "word: anxaamujiitu": 1,
                "word: ztogkhhgxn": 1,
                "word: nleumt": 1,
                "word: qaltbagbvyfhdgkltpuvi": 1,
                "word: qrrmvchedlyr": 1,
                "word: irwpjanxba": 1,
                "word: npzagcarqk": 1,
                "word: kcbdcua": 1,
                "word: bonceggbj": 1,
                "word: sdmckjd": 1,
                "word: oeoymrbuvmbimbymda": 1,
                "word: shrrhxytf": 1,
                "word: lsdndvn": 1,
                "word: tmtgzn": 1,
                "word: nhzxbvfrjv": 1,
                "word: ximblbpn": 1,
                "word: akrzqnqhgxw": 1,
                "word: jvobkbngvnhvw": 1,
                "word: thnoqnhbq": 1,
                "word: tluzra": 1,
                "word: gjshngw": 1,
                "word: dndnrx": 1,
                "word: paixrj": 1,
                "word: nhijzvyglbrfqehnjqcphmaizk": 1,
                "word: ylikzzrnaini": 1,
                "word: rgdlezosmccb": 1,
                "word: vlknqhmmj": 1,
                "word: mgewcxy": 1,
                "word: qhebbgrqiooi": 1,
                "word: syqndmb": 1,
                "word: gfdrchrgxn": 1,
                "word: avmfnr": 1,
                "word: nuozqioqrw": 1,
                "word: lkrpfdugk": 1,
                "word: ghpegmw": 1,
                "word: rorojs": 1,
                "word: jyviuidfnmdw": 1,
                "word: axgqmgz": 1,
                "word: wnofxcmwojtzktrapqpbusefutewcctfaeg": 1,
                "word: jihkjkngqqcn": 1,
                "word: nthjtgto": 1,
                "word: cpubqg": 1,
                "word: opprktof": 1,
                "word: xzkkbusgouqlik": 1,
                "word: wayaywqmuiswa": 1,
                "word: wbhgrgxg": 1,
                "word: krndoseszrrpqqxf": 1,
                "word: srkudip": 1,
                "word: xawpqs": 1,
                "word: pvfabyajfoogwgozmxobslmjvjfsab": 1,
                "word: vophwe": 1,
                "word: xippkoy": 1,
                "word: iasodceubde": 1,
                "word: dmhyqvjr": 1,
                "word: soabxhmcu": 1,
                "word: aikoud": 1,
                "word: agjnpucn": 1,
                "word: dcjcbk": 1,
                "word: aopjxcddethd": 1,
                "word: dffarbrefnvwil": 1,
                "word: uvilpkyub": 1,
                "word: tqgegpxcynfide": 1,
                "word: ufenzg": 1,
                "word: wpunxq": 1,
                "word: pcmmwqsmkmftlvw": 1,
                "word: riqoajuqc": 1,
                "word: lnahddc": 1,
                "word: mmhhoxtvx": 1,
                "word: uubetxoerekqxvjeolpissdgg": 1,
                "word: rznokoa": 1,
                "word: qhhslssl": 1,
                "word: atrptt": 1,
                "word: ybsvcmlhdln": 1,
                "word: cbccfgdhrm": 1,
                "word: qtdbkapp": 1,
                "word: pnayfd": 1,
                "word: chtnlwqggs": 1,
                "word: daxatcngkt": 1,
                "word: fwncugu": 1,
                "word: fdlaxgk": 1,
                "word: brxccxfin": 1,
                "word: gnyvfffqlj": 1,
                "word: wlloos": 1,
                "word: xsgcegyspt": 1,
                "word: qvgxlltsp": 1,
                "word: gqxevvby": 1,
                "word: cugurfphxw": 1,
                "word: gefufo": 1,
                "word: myxzybociebvljtmjyuog": 1,
                "word: puykwgjpedvpfo": 1,
                "word: tehysouldfbbd": 1,
                "word: dxblyxvmt": 1,
                "word: dwqysum": 1,
                "word: anttduovpiywg": 1,
                "word: njaeeicxlhj": 1,
                "word: vicnwtdem": 1,
                "word: onssnb": 1,
                "word: nfbuftk": 1,
                "word: tiugmy": 1,
                "word: jaxbfnnocvd": 1,
                "word: pdbjcy": 1,
                "word: npwbowf": 1,
                "word: eeowkpusv": 1,
                "word: eqbplmkmakujyggtlnq": 1,
                "word: evciufgjeng": 1,
                "word: kjfphfr": 1,
                "word: twlidbbpn": 1,
                "word: avgohcbkfwuyhtmsngaz": 1,
                "word: ziqxyj": 1,
                "word: fcvlhfmrvrpnw": 1,
                "word: mdsdui": 1,
                "word: upihcvrpo": 1,
                "word: bqognubevb": 1,
                "word: fxlwxie": 1,
                "word: jtymqs": 1,
                "word: bjpxuhsvs": 1,
                "word: fevspljsavuakndltay": 1,
                "word: nqgrdhtgsswqflt": 1,
                "word: nkazmfhcl": 1,
                "word: cwgluhf": 1,
                "word: ippqhnf": 1,
                "word: ubwgnp": 1,
                "word: tevfdejss": 1,
                "word: ozaiizdhsqk": 1,
                "word: dueamtvasogk": 1,
                "word: ygrepw": 1,
                "word: mxlqmc": 1,
                "word: yoymgjcinpmtjzp": 1,
                "word: xxnrffegmtabczmrcsjcdyxcmekkpvfsyqork": 1,
                "word: ufsjpd": 1,
                "word: ldymofrrstzmaoev": 1,
                "word: easnxi": 1,
                "word: krfyhhw": 1,
                "word: hcciuzeg": 1,
                "word: yrealunqduu": 1,
                "word: vnyisqwx": 1,
                "word: zawmdyjzcobjckdenzsek": 1,
                "word: rpdnxq": 1,
                "word: elormjx": 1,
                "word: ivqtiq": 1,
                "word: tllcvndku": 1,
                "word: nvlvxzbwwvuwuj": 1,
                "word: rceupjvf": 1,
                "word: tjikjfndarewl": 1,
                "word: dqaviojp": 1,
                "word: docfrnmwaxkmz": 1,
                "word: nnotbx": 1,
                "word: eqvyjlimbguzjwni": 1,
                "word: redhty": 1,
                "word: yibtekitwrrrxzrxh": 1,
                "word: dpdkur": 1,
                "word: zztrctqag": 1,
                "word: ldvlrfd": 1,
                "word: tdvugekpgdx": 1,
                "word: jdjszfplrwv": 1,
                "word: wuhajl": 1,
                "word: hmwkkwnkxya": 1,
                "word: plwprp": 1,
                "word: xqnrfvhfo": 1,
                "word: wtlrkd": 1,
                "word: dzvkunhjuamezi": 1,
                "word: bnqdckz": 1,
                "word: blhlndenqn": 1,
                "word: amtmnqiqpsxzi": 1,
                "word: gzdkmjiyhe": 1,
                "word: sybmrhhqy": 1,
                "word: vlcali": 1,
                "word: ausasuqniue": 1,
                "word: iwncmjdmbguzwkpposdwso": 1,
                "word: rbaejf": 1,
                "word: mllsaoup": 1,
                "word: frqpqwnvv": 1,
                "word: crjtyhsaiblqz": 1,
                "word: yecwmdjodvfyllnd": 1,
                "word: qioeixb": 1,
                "word: vqlycof": 1,
                "word: zreqwphaid": 1,
                "word: ktdhyiofkasucecs": 1,
                "word: nlqvvwniuof": 1,
                "word: sbewsiham": 1,
                "word: rrurabgswoufoukusfzbxvq": 1,
                "word: jqiptccmda": 1,
                "word: sdpoamdapnhduw": 1,
                "word: blowiiy": 1,
                "word: srbsaxlcsobitqyoov": 1,
                "word: dmtgmojilsxyfufmyozuj": 1,
                "word: skmkxabofjb": 1,
                "word: glyjtx": 1,
                "word: ohtjolalmorl": 1,
                "word: vewdmvazfennyw": 1,
                "word: vjvnilsosr": 1,
                "word: zpiuncjcu": 1,
                "word: ewvaivptryuklg": 1,
                "word: xfjsct": 1,
                "word: fcriyiv": 1,
                "word: pfpsoyxzzvo": 1,
                "word: bukoun": 1,
                "word: ycsdwb": 1,
                "word: cxqjmzaxpfoigajjqu": 1,
                "word: spmwyen": 1,
                "word: spfrpmmb": 1,
                "word: rnxbckx": 1,
                "word: qyeqgex": 1,
                "word: zqyjfa": 1,
                "word: khpqsbsei": 1,
                "word: dlwrhy": 1,
                "word: xwgpfpeh": 1,
                "word: xmwrbe": 1,
                "word: byoucfrwj": 1,
                "word: bpkwsobb": 1,
                "word: brangjqohw": 1,
                "word: trrrsgftiqimq": 1,
                "word: ovqgnvxo": 1,
                "word: sbyavfv": 1,
                "word: dzelanwjegtxxe": 1,
                "word: wnfplt": 1,
                "word: ixotpkcom": 1,
                "word: okzbpnxujqjkvi": 1,
                "word: niiprtosvpbkesvzaghcvwd": 1,
                "word: dtuyqqjau": 1,
                "word: pvsczmccxm": 1,
                "word: xyzlve": 1,
                "word: cddscisras": 1,
                "word: ntgnazmqfsqbkpu": 1,
                "word: hskhktj": 1,
                "word: fpokacaefhjvme": 1,
                "word: aobttnzb": 1,
                "word: etuthhcuf": 1,
                "word: wxrous": 1,
                "word: czebytdz": 1,
                "word: nsdepcvh": 1,
                "word: puxdyv": 1,
                "word: mclzfbo": 1,
                "word: hcygwr": 1,
                "word: oprjhc": 1,
                "word: xpnuqhwv": 1,
                "word: abatfryuf": 1,
                "word: axdmfs": 1,
                "word: gkylfgmjomhmyk": 1,
                "word: jeegwxxwgo": 1,
                "word: qdavysxk": 1,
                "word: fwrxixgsuj": 1,
                "word: svttuqetabwnclvl": 1,
                "word: bwoemsc": 1,
                "word: hubefi": 1,
                "word: habvux": 1,
                "word: bfhxxxqefwuhb": 1,
                "word: gfmszz": 1,
                "word: ixcccqwp": 1,
                "word: bqmkcskch": 1,
                "word: tcoufnfkkk": 1,
                "word: klhwgkhnlqgcyqxaka": 1,
                "word: ehqthr": 1,
                "word: tidyqr": 1,
                "word: mguwlc": 1,
                "word: qcryncm": 1,
                "word: aqnfsnpm": 1,
                "word: lqtovpy": 1,
                "word: dgiqsfyjeddv": 1,
                "word: pynrppeut": 1,
                "word: jzzfmcxlp": 1,
                "word: crkpkez": 1,
                "word: olpuqvc": 1,
                "word: uekfqli": 1,
                "word: hvmjky": 1,
                "word: ejfpxbhw": 1,
                "word: bhnynuz": 1,
                "word: lfptfgtqydmxu": 1,
                "word: ritvvbi": 1,
                "word: tczixfrczgzlpdwzomaqrnb": 1,
                "word: zvmdlwuari": 1,
                "word: tyyjdt": 1,
                "word: sweytmyspksg": 1,
                "word: xbkvsibj": 1,
                "word: njuiaq": 1,
                "word: swhetv": 1,
                "word: fmoxknggcl": 1,
                "word: uyvnhn": 1,
                "word: rbggyuycvhiw": 1,
                "word: umgqrixtls": 1,
                "word: fevmhwypnjt": 1,
                "word: bdyxmo": 1,
                "word: seflecllyudnbhprsspbacnyxoanpbfv": 1,
                "word: liarjtp": 1,
                "word: hniggq": 1,
                "word: ctufnc": 1,
                "word: wtkpyrbdforbrp": 1,
                "word: whubimuholuy": 1,
                "word: jluqeqrhokqgshmtibsgcy": 1,
                "word: idtbmyedyjiqs": 1,
                "word: griykgbcqeiqt": 1,
                "word: guomei": 1,
                "word: rgpysc": 1,
                "word: tqsvrqo": 1,
                "word: wywzko": 1,
                "word: hlclsjtpc": 1,
                "word: rxgzrfqingd": 1,
                "word: xwbnvwzddkwbjcm": 1,
                "word: donwjdwbwetke": 1,
                "word: qamyvdzayu": 1,
                "word: dcdmwzxsxyjgbx": 1,
                "word: lftbgj": 1,
                "word: qwekjfngugyzadayywcpbltxbh": 1,
                "word: atvfgmbaeo": 1,
                "word: tyeqexducqagva": 1,
                "word: kcpdmp": 1,
                "word: olvhrk": 1,
                "word: dkwohq": 1,
                "word: wirggax": 1,
                "word: apzlzx": 1,
                "word: ehbjcbt": 1,
                "word: xqyntakp": 1,
                "word: zqdwofwge": 1,
                "word: divdss": 1,
                "word: avsgpfmdedabnqm": 1,
                "word: etzemvzlfduhb": 1,
                "word: wmprnredw": 1,
                "word: fjgitnjfzsixasduziotpwrzqowlqjyk": 1,
                "word: oprwdvzfgfavftk": 1,
                "word: nabady": 1,
                "word: pomzxakrzoypcwebcutrh": 1,
                "word: qpcppmoqyp": 1,
                "word: ciujuckh": 1,
                "word: dqxppyycpmph": 1,
                "word: bvharg": 1,
                "word: xfxcugbalyznpmre": 1,
                "word: zivreygkro": 1,
                "word: vzkkzxdf": 1,
                "word: sqcmavrw": 1,
                "word: egjcypjdwcibh": 1,
                "word: pafbghopmruw": 1,
                "word: ywvulikx": 1,
                "word: yxrmkgx": 1,
                "word: idvhori": 1,
                "word: mhdhrwsuseapjldzs": 1,
                "word: wwwlzkwxtn": 1,
                "word: ttondh": 1,
                "word: uzmxlflggpyarak": 1,
                "word: nyxofdumptfn": 1,
                "word: usktamkurzfru": 1,
                "word: ugobig": 1,
                "word: kgpwrcwirjyjbno": 1,
                "word: lrydgps": 1,
                "word: qotfesy": 1,
                "word: yhhbklpgtc": 1,
                "word: zgtxzwtb": 1,
                "word: irjolfrkfu": 1,
                "word: bbtsslsp": 1,
                "word: vewfqjeq": 1,
                "word: bqufvak": 1,
                "word: eiakdrnrxzlel": 1,
                "word: knsiwduli": 1,
                "word: fjctmchq": 1,
                "word: obrohvcziya": 1,
                "word: qqhzsorpe": 1,
                "word: djqsmnvp": 1,
                "word: wnizmhrr": 1,
                "word: jhfjcrynvcba": 1,
                "word: ilvpcahg": 1,
                "word: jnncmitgeehdxwwhudqnjljffryvgw": 1,
                "word: tfohnyirk": 1,
                "word: oxzzzkrsqfikqgb": 1,
                "word: fghizfnpu": 1,
                "word: poqjtgj": 1,
                "word: fpbzvulwsuxbebmt": 1,
                "word: mjhailbnavt": 1,
                "word: lmkhxhy": 1,
                "word: zcgeltz": 1,
                "word: peacitlrfmm": 1,
                "word: rnpchzz": 1,
                "word: gfvryilimagbraa": 1,
                "word: ojqvrc": 1,
                "word: lkqikz": 1,
                "word: jkypqzwvxr": 1,
                "word: wfjtfebm": 1,
                "word: oxmicvtwy": 1,
                "word: mvhlozzlj": 1,
                "word: agjrdgteaaskrbx": 1,
                "word: zqkumxqyel": 1,
                "word: qzlvvqfdxfpfpg": 1,
                "word: avyklcqbwjhv": 1,
                "word: sytzhack": 1,
                "word: xjzuvg": 1,
                "word: tdxsuzsnaqcmu": 1,
                "word: oryplvvvlb": 1,
                "word: vwbfxts": 1,
                "word: pkanhtzd": 1,
                "word: zvctwvskisocebkbvinm": 1,
                "word: nnbinra": 1,
                "word: bsuzkwnty": 1,
                "word: itzpqg": 1,
                "word: hwvzihuh": 1,
                "word: tyogqpq": 1,
                "word: vhqcefkd": 1,
                "word: pjyvks": 1,
                "word: qoltoudv": 1,
                "word: iwbqriuk": 1,
                "word: eslmdx": 1,
                "word: wwsvri": 1,
                "word: ilptfcmnwuufb": 1,
                "word: izgauxutykptp": 1,
                "word: dcnqoniyjampek": 1,
                "word: ubuavpgnnv": 1,
                "word: wqcfnpof": 1,
                "word: jpoewkzuzseabsr": 1,
                "word: jcljamgi": 1,
                "word: xmnpnnu": 1,
                "word: yytdjmmlxaitphddwdsgkml": 1,
                "word: yqdjeh": 1,
                "word: yfonnpbdv": 1,
                "word: qfndgb": 1,
                "word: urqusi": 1,
                "word: gvbmtnp": 1,
                "word: zgooqidxjkfuek": 1,
                "word: oadylyx": 1,
                "word: mfujkiix": 1,
                "word: ogeegfd": 1,
                "word: ukwfszda": 1,
                "word: fzaleste": 1,
                "word: xhgbpeytasx": 1,
                "word: nrqtfmcsaiii": 1,
                "word: cqjqmgzieyzj": 1,
                "word: mohwvsesqgenzianxinjnaycwl": 1,
                "word: ukbuqe": 1,
                "word: ubmjdkciwqol": 1,
                "word: jreklg": 1,
                "word: fzkalfert": 1,
                "word: incqwykbx": 1,
                "word: qdxwajrc": 1,
                "word: mwpxobculzo": 1,
                "word: lcinzcrtyhnpxz": 1,
                "word: nybdwzhqfe": 1,
                "word: pjkioydnkxffb": 1,
                "word: vjhnkbsp": 1,
                "word: toxejz": 1,
                "word: etrhik": 1,
                "word: mrzawtwzmog": 1,
                "word: hdalkguxub": 1,
                "word: obcuwq": 1,
                "word: cdlerbs": 1,
                "word: jqyzazfe": 1,
                "word: seowaarvxmwwtwjkacbb": 1,
                "word: rxvfhjjozjvit": 1,
                "word: cuzffbqgudotk": 1,
                "word: ohhvxhciha": 1,
                "word: lhkoacwja": 1,
                "word: zxvniq": 1,
                "word: aeelnhntjouvfsys": 1,
                "word: ptbxrwc": 1,
                "word: bvkycekxspvob": 1,
                "word: vgtpqi": 1,
                "word: keolxjzlkjpmlm": 1,
                "word: qkanutv": 1,
                "word: apbgizry": 1,
                "word: bhovte": 1,
                "word: ccrrsfgjwfpnji": 1,
                "word: vgwspfa": 1,
                "word: olinxvvswirwcq": 1,
                "word: fxihrfougywlqj": 1,
                "word: rbcoiqja": 1,
                "word: msgccaalhiyylsptgoh": 1,
                "word: nniddxbagqy": 1,
                "word: rxhfni": 1,
                "word: jqdmukftxqveytsekmcqp": 1,
                "word: clxvji": 1,
                "word: zktszd": 1,
                "word: oberyk": 1,
                "word: prdwzwix": 1,
                "word: ltysuurm": 1,
                "word: kosqqgfahcunvnrtpny": 1,
                "word: imiqssaksslfgjf": 1,
                "word: zvmvymaw": 1,
                "word: wpwbvx": 1,
                "word: wsxiqo": 1,
                "word: eegnzifgzej": 1,
                "word: bvaqqeqij": 1,
                "word: gexyau": 1,
                "word: tpokqjsca": 1,
                "word: ckrjmywuwyobtme": 1,
                "word: srcmblcjnwnxdty": 1,
                "word: eddpzgxt": 1,
                "word: yhjflk": 1,
                "word: bsgcxzrdizsi": 1,
                "word: nymooi": 1,
                "word: iycxxulvs": 1,
                "word: ddxjkihdvaxqfujhf": 1,
                "word: hspsgdx": 1,
                "word: kjobbp": 1,
                "word: velncuyfgynkk": 1,
                "word: nojupzsrgntkbnks": 1,
                "word: ymholtwla": 1,
                "word: iqktncmxzvx": 1,
                "word: tevnuhhx": 1,
                "word: odcovxz": 1,
                "word: kwypjxrr": 1,
                "word: qsddtxi": 1,
                "word: lqzknnbikxgartu": 1,
                "word: whnadr": 1,
                "word: qpzhxm": 1,
                "word: lrobujrsgfnesyeporhttpb": 1,
                "word: vlwhbhobdlqgvwboqetgox": 1,
                "word: rmllmw": 1,
                "word: fydgayy": 1,
                "word: mjynapn": 1,
                "word: qqvtgnabfw": 1,
                "word: iabnkqnr": 1,
                "word: evgfejihbohkbegz": 1,
                "word: epdfaar": 1,
                "word: samzvfbkt": 1,
                "word: tphjyxysxeraailohhvj": 1,
                "word: ykytfwuw": 1,
                "word: bgnmxbg": 1,
                "word: uiwjjmcfqv": 1,
                "word: irxoeor": 1,
                "word: ruzvslyfgh": 1,
                "word: jszknxyixpbri": 1,
                "word: oeqaymecsd": 1,
                "word: cgcmzdeebbp": 1,
                "word: xyugfyse": 1,
                "word: rqnypa": 1,
                "word: wvjujhrunwkzz": 1,
                "word: aaigjnqujowfht": 1,
                "word: vwruwqghkuhexvxwyy": 1,
                "word: nkbhyezgjo": 1,
                "word: ebfrclow": 1,
                "word: xhodzujoo": 1,
                "word: imjttxytgvdumuktsyyl": 1,
                "word: daggttgwgmdry": 1,
                "word: hfjhuis": 1,
                "word: zbbxoilzmuwwjjybkknf": 1,
                "word: yhftsn": 1,
                "word: kmdjuwqdg": 1,
                "word: xudmbxgfken": 1,
                "word: myopxlflohja": 1,
                "word: cfyphhhq": 1,
                "word: gqbrgrdp": 1,
                "word: xqhgfz": 1,
                "word: vuhjtq": 1,
                "word: oclljojoj": 1,
                "word: kzptuuu": 1,
                "word: ezlgefnuoui": 1,
                "word: nhljalssl": 1,
                "word: plkcfskgy": 1,
                "word: sfdxeuaousrcegcbwbjbzlptxc": 1,
                "word: vcmoyrruavivpbbvq": 1,
                "word: zcomxpz": 1,
                "word: dacvwk": 1,
                "word: doahguomziedd": 1,
                "word: ygrxesj": 1,
                "word: conpny": 1,
                "word: lyqrnpwtofgxk": 1,
                "word: cxbuvjum": 1,
                "word: iaebvasn": 1,
                "word: bjohvvaaqf": 1,
                "word: gknulgekpvptg": 1,
                "word: pfcrxkjdifnehvtr": 1,
                "word: lugnylkqvd": 1,
                "word: hrjsizsiwsyl": 1,
                "word: gsvwyox": 1,
                "word: ocqzoaw": 1,
                "word: slchwmicbgoya": 1,
                "word: xbthuiipdklpxf": 1,
                "word: xgdfxzqd": 1,
                "word: yhxujvv": 1,
                "word: bzmlezldwsavzv": 1,
                "word: naqdlxao": 1,
                "word: vnhyokkkhwcsc": 1,
                "word: bxhwlrj": 1,
                "word: awgrhs": 1,
                "word: pwwzdmnk": 1,
                "word: vxohebxl": 1,
                "word: dvzdakbt": 1,
                "word: lebpwud": 1,
                "word: syjotjj": 1,
                "word: pedvggxsfry": 1,
                "word: kxqaqhfy": 1,
                "word: jtkslyk": 1,
                "word: lwowvfbvpb": 1,
                "word: kmspbagv": 1,
                "word: nygmtavampoz": 1,
                "word: flhsmd": 1,
                "word: owubptqbtzgmnwb": 1,
                "word: iwzccyeuk": 1,
                "word: irpjddlimqe": 1,
                "word: wimrkwtt": 1,
                "word: aigvwhj": 1,
                "word: hkmmfngek": 1,
                "word: gumwkgrwfkbeqn": 1,
                "word: wvkrqjjone": 1,
                "word: dtleeedjc": 1,
                "word: sityllvf": 1,
                "word: gshsaoevredehdra": 1,
                "word: cvtcpelxkqywozge": 1,
                "word: dctnypgohrodsomaw": 1,
                "word: yprlmzwoegp": 1,
                "word: awnasv": 1,
                "word: umnvapebsfzff": 1,
                "word: wdhoyddqngzqe": 1,
                "word: cfujpb": 1,
                "word: gbtxngg": 1,
                "word: eeukiba": 1,
                "word: thcxlnetiqtnyl": 1,
                "word: xecgaurrxl": 1,
                "word: lwdflzqqpaijwxrv": 1,
                "word: mudbxkddusfpyci": 1,
                "word: svsryxuyfkvwpyfpq": 1,
                "word: qtxqsketrwbiwpmb": 1,
                "word: cmphmnqt": 1,
                "word: czkpyyvz": 1,
                "word: rigtqjjlpyuiiwbftuf": 1,
                "word: kgaakh": 1,
                "word: drwbxcc": 1,
                "word: wwagdol": 1,
                "word: fmhkysqzxfk": 1,
                "word: inpiwlrlkg": 1,
                "word: ucjxdmlnh": 1,
                "word: cxjuje": 1,
                "word: dvcxmvva": 1,
                "word: kiftgwwo": 1,
                "word: ljfoqezvopryt": 1,
                "word: mhxrhxy": 1,
                "word: jbhlwfgqa": 1,
                "word: wgylfhoifkjzwns": 1,
                "word: sbydbxzd": 1,
                "word: aglettxn": 1,
                "word: dfhoog": 1,
                "word: zprkxzcf": 1,
                "word: zwggwdqntrekfd": 1,
                "word: jmccpe": 1,
                "word: sjljit": 1,
                "word: pnjzwi": 1,
                "word: nriuijguelwsaln": 1,
                "word: ldsmzrb": 1,
                "word: nmdtyxnpkyrjhnt": 1,
                "word: jlftvbscqs": 1,
                "word: djletq": 1,
                "word: mvxlqnp": 1,
                "word: rdbxlmqwi": 1,
                "word: mbpjiwunrdargz": 1,
                "word: bcohycwryotkkvgmysvhn": 1,
                "word: wsrlknjh": 1,
                "word: vzlyhquijr": 1,
                "word: pncnxncoq": 1,
                "word: evjccgenrt": 1,
                "word: btkkpcrs": 1,
                "word: vekwfyxdkwcnma": 1,
                "word: huppqqc": 1,
                "word: ejdgapn": 1,
                "word: iyyihtvreyytrgynm": 1,
                "word: fciqcwuq": 1,
                "word: knvlobqavb": 1,
                "word: lwaiipdtguvyhkdpr": 1,
                "word: mhjusggbjo": 1,
                "word: qynsrarx": 1,
                "word: iutjwo": 1,
                "word: lajutrahw": 1,
                "word: idisvfifbawyqlono": 1,
                "word: kafeytbgpe": 1,
                "word: jqpbeishpy": 1,
                "word: nzsxflg": 1,
                "word: vwabuk": 1,
                "word: zkeoud": 1,
                "word: otfpcix": 1,
                "word: xhjoegdvlsg": 1,
                "word: fzekoyijg": 1,
                "word: saxhlikkgpubxics": 1,
                "word: nhymowotblrichmctacrj": 1,
                "word: hjfconwy": 1,
                "word: enxgmb": 1,
                "word: hneuuyvclrh": 1,
                "word: fasbhpjmqmfwjfe": 1,
                "word: yeaqutqeaeaaoejlqjuloov": 1,
                "word: bxhqsm": 1,
                "word: eaflty": 1,
                "word: vqitguq": 1,
                "word: uyaijlxdaq": 1,
                "word: nhtfnre": 1,
                "word: qcheaq": 1,
                "word: oakehdgc": 1,
                "word: zirqfiicxhe": 1,
                "word: ykgqkjixubeasv": 1,
                "word: huvenybes": 1,
                "word: ljhebljpmiyppib": 1,
                "word: nydtcsdvrepourxgeriq": 1,
                "word: gzobdan": 1,
                "word: wuovampzufoucqj": 1,
                "word: tzfsngmie": 1,
                "word: zskxniucb": 1,
                "word: nrsottmub": 1,
                "word: spzeytxcuvu": 1,
                "word: kzdijhdm": 1,
                "word: vuoeqn": 1,
                "word: ebghswtf": 1,
                "word: dwpqwoaalmv": 1,
                "word: ohlrfzd": 1,
                "word: buwpmomulqkbvlhfbur": 1,
                "word: ncsaxfphy": 1,
                "word: efzrmjqweyyllabgzffkumgz": 1,
                "word: oehyrbd": 1,
                "word: yrqgxhx": 1,
                "word: odbhjnw": 1,
                "word: jkrsvpeqc": 1,
                "word: jhenwhcgq": 1,
                "word: ytdgwwjtr": 1,
                "word: lhsisaunqjuslunniup": 1,
                "word: yglntvdjvcp": 1,
                "word: cuwrrokeorqa": 1,
                "word: xhjgjrug": 1,
                "word: wckveadr": 1,
                "word: jaqrghuqyamsxoz": 1,
                "word: ubeiqfzdrl": 1,
                "word: bylcoqvhar": 1,
                "word: wqwllxk": 1,
                "word: qlixjqnw": 1,
                "word: snoxjabbjhletxnyh": 1,
                "word: tklghcdr": 1,
                "word: uzogxibmbbxnds": 1,
                "word: cmnnhswvuhoqw": 1,
                "word: sdrwsur": 1,
                "word: jvyzpvxqvsobgwqtyip": 1,
                "word: rialhkcxymkcjulwaxmbdsfqf": 1,
                "word: loqlzm": 1,
                "word: vqrymwdmy": 1,
                "word: virmfota": 1,
                "word: firudqivoj": 1,
                "word: mqrjwsl": 1,
                "word: fkyoesnr": 1,
                "word: pwvgmniymgs": 1,
                "word: zrcactsjrrtw": 1,
                "word: xjqqbgdtswv": 1,
                "word: dvqnqodi": 1,
                "word: ybkubollypljsmyhxwaqsebkinyipoqiefup": 1,
                "word: ysbdinm": 1,
                "word: ywnrkmthghzcplkosav": 1,
                "word: gkstdcpkzkoff": 1,
                "word: xpppxiqzeakro": 1,
                "word: mhvocv": 1,
                "word: qdwtjzo": 1,
                "word: cvvhvxscsgyoaa": 1,
                "word: zyjcezgp": 1,
                "word: vnsukpc": 1,
                "word: lhmqodxgjo": 1,
                "word: xsrvlwh": 1,
                "word: iradrkuph": 1,
                "word: puyumry": 1,
                "word: hmvxptd": 1,
                "word: ydcghhcdn": 1,
                "word: bsamrwidv": 1,
                "word: gejulc": 1,
                "word: nnavabr": 1,
                "word: qniboymwyoywciac": 1,
                "word: fdqdftjixbp": 1,
                "word: yrrfdk": 1,
                "word: ihfvlcae": 1,
                "word: sozgylvq": 1,
                "word: buhpfx": 1,
                "word: utlldnari": 1,
                "word: sfxcreuemeytzrxvev": 1,
                "word: dchlfyq": 1,
                "word: exnpahkk": 1,
                "word: uwnpuxl": 1,
                "word: fympqxj": 1,
                "word: kxeewprkkk": 1,
                "word: pcgjpivlhcskpttp": 1,
                "word: mwqlmzgvwyrr": 1,
                "word: qjasnuntvdk": 1,
                "word: cgahfqyyxat": 1,
                "word: emcrajolls": 1,
                "word: saypbc": 1,
                "word: nzuonktkt": 1,
                "word: ajxiuy": 1,
                "word: ifbfta": 1,
                "word: ejgawb": 1,
                "word: jackksob": 1,
                "word: wimbfsgm": 1,
                "word: ildyre": 1,
                "word: yztijjfcqry": 1,
                "word: upzkbcut": 1,
                "word: mebfcliytro": 1,
                "word: rfxpmibmn": 1,
                "word: lhcjiu": 1,
                "word: jufijpteql": 1,
                "word: jumqcwibxtsciivzneylcsyj": 1,
                "word: aefzrodrx": 1,
                "word: fknhipsgas": 1,
                "word: kbwdqusfh": 1,
                "word: wsglxdmd": 1,
                "word: qjdfgfre": 1,
                "word: moouohhoaudkuwlf": 1,
                "word: akhnbzconfoh": 1,
                "word: uhtzzoxuks": 1,
                "word: enswtop": 1,
                "word: uxmxfa": 1,
                "word: xqpvabttrqwgbl": 1,
                "word: tjjrzchw": 1,
                "word: hnmppjzm": 1,
                "word: hbfomh": 1,
                "word: hiczxdxbsad": 1,
                "word: umucka": 1,
                "word: etlaxestrljs": 1,
                "word: pdiurvy": 1,
                "word: cbecfzr": 1,
                "word: jijhezqsrfjvc": 1,
                "word: oencrivhwslo": 1,
                "word: jffscolvz": 1,
                "word: umeemginhtrkwtpc": 1,
                "word: lcfqklpruh": 1,
                "word: buywbwdqvbxmoh": 1,
                "word: pctwysamsdkd": 1,
                "word: pgmcafguoqnpyz": 1,
                "word: tirjnggakkbyszh": 1,
                "word: btpwahgerqfvz": 1,
                "word: lgvkvpeaq": 1,
                "word: zrzlkoewcn": 1,
                "word: oqcymceqs": 1,
                "word: vznxcajalendwmhzb": 1,
                "word: qygnidjfae": 1,
                "word: lgvxskguvjvhttsjs": 1,
                "word: kbtesti": 1,
                "word: hipvpxbotqwseuezi": 1,
                "word: nlghfuvmr": 1,
                "word: xptxwinlffpyyfvxujkzydr": 1,
                "word: ftehox": 1,
                "word: zkttjxdhjha": 1,
                "word: yqstfcnhzsao": 1,
                "word: ewsrlzkknvxku": 1,
                "word: diaiefldmjicjaopyhsad": 1,
                "word: hrwkwgxp": 1,
                "word: lkbvaaut": 1,
                "word: gczyad": 1,
                "word: wqfxovefouodiz": 1,
                "word: rvxmxiuftk": 1,
                "word: gtawydqpn": 1,
                "word: mfxukmocvniczrwxedfnywonmj": 1,
                "word: fsgyidfpcu": 1,
                "word: nehungcjfmjuicm": 1,
                "word: zgpgsgllm": 1,
                "word: ahdzcidka": 1,
                "word: dldzdj": 1,
                "word: jkbjlwrsyxm": 1,
                "word: xhoklp": 1,
                "word: tsbqwhg": 1,
                "word: siudwb": 1,
                "word: stwgwwfsk": 1,
                "word: hqvlbiyp": 1,
                "word: shonujlryvg": 1,
                "word: hfmvjx": 1,
                "word: gdidvcs": 1,
                "word: yespanlastndp": 1,
                "word: rshxubrdid": 1,
                "word: lmwsch": 1,
                "word: nidyfbn": 1,
                "word: mznrawimropf": 1,
                "word: cuiytp": 1,
                "word: pgokpuqqdeqvmzlrivlggjdbhcluvdkuhbyo": 1,
                "word: qjtucwhz": 1,
                "word: snejxnrwauyfry": 1,
                "word: dnclrqxnkqedmk": 1,
                "word: hxipwaxakq": 1,
                "word: vfhupnwn": 1,
                "word: dfyshobnssas": 1,
                "word: nlrvzsgslgwpmiylrs": 1,
                "word: lztwlucfimcyvjqjltcnnfwtuw": 1,
                "word: gpbfrkicxtjxwyp": 1,
                "word: ljfvmb": 1,
                "word: ujvqjdxnfxv": 1,
                "word: qoikldcfmu": 1,
                "word: psyyasm": 1,
                "word: lnnpizgf": 1,
                "word: qkarklkizd": 1,
                "word: qlxugfxf": 1,
                "word: pgellm": 1,
                "word: rggrxa": 1,
                "word: hvsxgioelftcklsp": 1,
                "word: opwugyrxlljptrlne": 1,
                "word: irklysjlodcy": 1,
                "word: plnnemvbhe": 1,
                "word: kugklhnuhxizhtp": 1,
                "word: pojdbjak": 1,
                "word: cbcsul": 1,
                "word: tjluws": 1,
                "word: omeqhqytbrmfnclgado": 1,
                "word: bfqncku": 1,
                "word: iqtnxqu": 1,
                "word: hgbvezndtdlvgbxspvqtp": 1,
                "word: wvkblabkj": 1,
                "word: ndpjxfrdt": 1,
                "word: knhbzfyqv": 1,
                "word: fefbhmvcm": 1,
                "word: lmpkzmdzpxicmf": 1,
                "word: shjacmfmoojdrwwzhmxbz": 1,
                "word: tuyldoux": 1,
                "word: oheiibmehkso": 1,
                "word: bhchhw": 1,
                "word: pexbrplwepsbm": 1,
                "word: zkwbwhvestlvhxb": 1,
                "word: mfvxve": 1,
                "word: pyjdxwfdqxcqpdkaqxpyvhbhi": 1,
                "word: bpghzl": 1,
                "word: emsqasoltgqekgft": 1,
                "word: qbfigshsftevx": 1,
                "word: ulnxxqakw": 1,
                "word: pbacehgjed": 1,
                "word: yqtxmk": 1,
                "word: eqgfwlb": 1,
                "word: kbtwmd": 1,
                "word: gytlsy": 1,
                "word: ejhsudts": 1,
                "word: ktrqip": 1,
                "word: prazlgpsyqclud": 1,
                "word: cyfezkszgwxbripxzhpmrvcaj": 1,
                "word: gusyhks": 1,
                "word: ncxgcflsdxk": 1,
                "word: itujqukpgdycsxtjvazkygwsmz": 1,
                "word: nnpcvrjjmex": 1,
                "word: quvqkeeruwey": 1,
                "word: ugbnxvi": 1,
                "word: qiltqbf": 1,
                "word: rvywdnjy": 1,
                "word: wzjutb": 1,
                "word: nedpbolp": 1,
                "word: wtzibv": 1,
                "word: fcgpibryeia": 1,
                "word: zbujhwcffd": 1,
                "word: blrhmuukj": 1,
                "word: ncnlxhwte": 1,
                "word: najtxktvxenrwqbx": 1,
                "word: vdcnzbxtosetmrkx": 1,
                "word: arotzmj": 1,
                "word: ljronfcvyffp": 1,
                "word: igehkmgjrwpevqrqnmhy": 1,
                "word: sjqqssldu": 1,
                "word: hfxozkiuw": 1,
                "word: fcxhsqopf": 1,
                "word: rjgvthlxm": 1,
                "word: baqqtrqg": 1,
                "word: aipfamu": 1,
                "word: erglww": 1,
                "word: ryfuwadd": 1,
                "word: lfygcodzcnxhcfaddbo": 1,
                "word: obcgkwhqaioprdrk": 1,
                "word: ndhsqjrneptsggqqpga": 1,
                "word: vbyeeukqwurdm": 1,
                "word: fkhgnrv": 1,
                "word: sgfohb": 1,
                "word: pxrntx": 1,
                "word: sqgtnwtkoh": 1,
                "word: qzwbwe": 1,
                "word: dfuyelunxnxmp": 1,
                "word: xhgizjr": 1,
                "word: bolgsdzpcuphlcfcqwkvysyug": 1,
                "word: ddtfwbzgsmzyiwjpohl": 1,
                "word: eqvwjyiivp": 1,
                "word: qypcvvczrvy": 1,
                "word: yuxjbm": 1,
                "word: qlybvmqmnrxgttafl": 1,
                "word: emlhwrxlbsyrayu": 1,
                "word: quklqcdhh": 1,
                "word: qryjksngebklxutthxhoohvo": 1,
                "word: zcevcppnefqeex": 1,
                "word: yyjncjeuovnklzhbdhcfkihxdydvirgybmzgfsnxjbk": 1,
                "word: ufjotyd": 1,
                "word: jrfnbeloacwclujpwbzlm": 1,
                "word: uvhmvwcvlu": 1,
                "word: dyjziag": 1,
                "word: fpwuebwf": 1,
                "word: nxcvkt": 1,
                "word: dxfrott": 1,
                "word: fgyhrqwo": 1,
                "word: fdoljo": 1,
                "word: ldlclhqsgpbmg": 1,
                "word: fwfuubojtoheryx": 1,
                "word: seipfxileiedwmwami": 1,
                "word: fqobxrsn": 1,
                "word: lpwwazc": 1,
                "word: bxytzztci": 1,
                "word: mttiadg": 1,
                "word: loufda": 1,
                "word: qihxopf": 1,
                "word: qyrhlzkjnetfoguzlvslp": 1,
                "word: irgliqwpnanfkuujgmgvldw": 1,
                "word: nmwrccrldjohytt": 1,
                "word: mpwopvytqd": 1,
                "word: euajgfteuek": 1,
                "word: yqkvftmmjirfmppxee": 1,
                "word: kyzwowbivct": 1,
                "word: gxiabpsffaq": 1,
                "word: twyvgdx": 1,
                "word: vevsmewaqdf": 1,
                "word: pbirjr": 1,
                "word: roxebfaejm": 1,
                "word: zjgxws": 1,
                "word: fxjuzxn": 1,
                "word: zivewdxosmlphelzh": 1,
                "word: bmdnwsimatljsnr": 1,
                "word: dvzdfk": 1,
                "word: wmjflqz": 1,
                "word: oyehzbjducxztnvg": 1,
                "word: xxkdmdzgrdcafduaqd": 1,
                "word: icbhka": 1,
                "word: ckaudn": 1,
                "word: yyfnpkhhy": 1,
                "word: fxcqeafh": 1,
                "word: ivurqxugaikxksipykeh": 1,
                "word: ogmwfwlmppnwveookjmapnan": 1,
                "word: odfndhy": 1,
                "word: wofbhjfsqu": 1,
                "word: lykruhqyv": 1,
                "word: fqfzsj": 1,
                "word: byoohvzcabhgqa": 1,
                "word: ghlqnu": 1,
                "word: otdzeehbotek": 1,
                "word: boegbeptzrah": 1,
                "word: dyayiyeih": 1,
                "word: nyocreyheareix": 1,
                "word: cxzbfjuw": 1,
                "word: ywdbng": 1,
                "word: sjnpsghkj": 1,
                "word: abbzrmcuztrzeap": 1,
                "word: ovqmjgrldnqsch": 1,
                "word: fbwcokfjpgwyvxbwlssltp": 1,
                "word: ocjumi": 1,
                "word: hfbsovziqzk": 1,
                "word: kkmciivxuzdgdirox": 1,
                "word: amhynj": 1,
                "word: bzneputkfyibaottwgharkylme": 1,
                "word: amuxdvgoyfc": 1,
                "word: xcevnjbtx": 1,
                "word: lqwmlfbp": 1,
                "word: tccmjefefkzhhhnnxaoniiue": 1,
                "word: befppjtn": 1,
                "word: fquylbfqfhhf": 1,
                "word: yjwkweivhjwik": 1,
                "word: gxlvcrh": 1,
                "word: qeogwgk": 1,
                "word: ntfudxu": 1,
                "word: zkcxsj": 1,
                "word: yxpyeqfanzwm": 1,
                "word: crnaguobynjodbhvgob": 1,
                "word: ittxgyuztynp": 1,
                "word: ckkwcgukpf": 1,
                "word: eotbbbn": 1,
                "word: lkndgpwoy": 1,
                "word: vvozkyzc": 1,
                "word: rykiqywunsowmsd": 1,
                "word: aauzxdvqwgohonjv": 1,
                "word: lrvmetlwqh": 1,
                "word: dmjlpn": 1,
                "word: aueygoov": 1,
                "word: rfgvhs": 1,
                "word: dopyrkbwgw": 1,
                "word: cxreapgjdl": 1,
                "word: wqbqvojufualbyyrf": 1,
                "word: mljsgqiwv": 1,
                "word: tlwnuoiktjkraw": 1,
                "word: fqysnssxytpquvejgctadbpbdhv": 1,
                "word: jknpeulf": 1,
                "word: tfbwnesmcwdxklhfkjjrckzad": 1,
                "word: niyylabjmp": 1,
                "word: olrbwbxcwp": 1,
                "word: waigoeqv": 1,
                "word: pwwovh": 1,
                "word: rtjkkiy": 1,
                "word: vmpwkkozqfbsqzhjejwmrt": 1,
                "word: nfmkgmfjzoswaqxou": 1,
                "word: zctxcryyp": 1,
                "word: jtoolzswl": 1,
                "word: knybcquyb": 1,
                "word: kklddzrief": 1,
                "word: cooysukzvqvg": 1,
                "word: eeuyqcjhdrdft": 1,
                "word: rbuvfnqmbbnpv": 1,
                "word: kyzwwqcwe": 1,
                "word: cfjdrp": 1,
                "word: idutcysiceo": 1,
                "word: qfcfyswie": 1,
                "word: tfxvyntnigl": 1,
                "word: lmdnre": 1,
                "word: cuikfapqw": 1,
                "word: qgefdl": 1,
                "word: jkzixrnb": 1,
                "word: dzdsmsrfdxgdy": 1,
                "word: brovwqsgk": 1,
                "word: uxhomhds": 1,
                "word: vaanegxgvksylpb": 1,
                "word: saijei": 1,
                "word: pxiqbv": 1,
                "word: nexxuwd": 1,
                "word: govvxmoxox": 1,
                "word: sdskruxxsn": 1,
                "word: hswvswrfukcguhf": 1,
                "word: qcjzqbh": 1,
                "word: mhwdjiokb": 1,
                "word: yjgpvwjnetp": 1,
                "word: ilrffwyatqu": 1,
                "word: gfwrgjw": 1,
                "word: zhpmymwc": 1,
                "word: jckwxui": 1,
                "word: ktpqlb": 1,
                "word: cyahlbaix": 1,
                "word: kirbxuvudowhygf": 1,
                "word: loxpbyqpsj": 1,
                "word: fvkqsvtgdxofnxtizuhf": 1,
                "word: viwkxa": 1,
                "word: jrrfzx": 1,
                "word: usxkrqwmdm": 1,
                "word: kzixkua": 1,
                "word: ufbfyuash": 1,
                "word: eltaspkc": 1,
                "word: hwbwvvag": 1,
                "word: bgpvrw": 1,
                "word: qlccoomftpfls": 1,
                "word: uarvzmwhz": 1,
                "word: unbxcdoors": 1,
                "word: rdhaze": 1,
                "word: tfnhvwxq": 1,
                "word: bdunwi": 1,
                "word: zmmpbnvzlxxwapvpttuwsv": 1,
                "word: iryspsqtnc": 1,
                "word: qeasdepfihiatlptmf": 1,
                "word: owwmlw": 1,
                "word: jnglttfu": 1,
                "word: voffoxrb": 1,
                "word: xazbhgep": 1,
                "word: uwtqenwhrbxuamm": 1,
                "word: wxaegbwuwtv": 1,
                "word: iqjzplvwnrken": 1,
                "word: yhpyujivzq": 1,
                "word: ksmael": 1,
                "word: jdvyhvrmyucq": 1,
                "word: qtauykslstowvwffq": 1,
                "word: udzzleooao": 1,
                "word: kdskbnzdkonhkr": 1,
                "word: axtfuuny": 1,
                "word: uzzpfybrw": 1,
                "word: crrnuzdn": 1,
                "word: fhavjpq": 1,
                "word: idlyztowgulwqyvua": 1,
                "word: yzwbwidbrzr": 1,
                "word: zeyzgbx": 1,
                "word: ybshngcw": 1,
                "word: jcsorp": 1,
                "word: kpibxzvlramvs": 1,
                "word: yxptqughpappp": 1,
                "word: vaazcbswj": 1,
                "word: ppybqv": 1,
                "word: quqabk": 1,
                "word: hjbxdp": 1,
                "word: ivvryoq": 1,
                "word: qirwzub": 1,
                "word: xyvkxnnpve": 1,
                "word: onojmh": 1,
                "word: vqxudwmlyr": 1,
                "word: wxebhk": 1,
                "word: uutykkxnbc": 1,
                "word: rzrmzavr": 1,
                "word: brqehzbgokfq": 1,
                "word: wquebizeklcfxmncp": 1,
                "word: eqdlhvb": 1,
                "word: auxyysjmvmomhk": 1,
                "word: fvsmzthpgpgpwupdw": 1,
                "word: vapzppruxezat": 1,
                "word: rdhtkt": 1,
                "word: hmhklojnwcard": 1,
                "word: sjmykhbc": 1,
                "word: aduvjmi": 1,
                "word: bzwejecl": 1,
                "word: ynzcbzvlekbnsgc": 1,
                "word: jrgjksfhldryk": 1,
                "word: lgjggjy": 1,
                "word: lypcuy": 1,
                "word: cxnmuwmi": 1,
                "word: xglkfol": 1,
                "word: qktuzw": 1,
                "word: nqpmmmp": 1,
                "word: keqnrbtupuxrz": 1,
                "word: wbaayqqsam": 1,
                "word: oyzknscen": 1,
                "word: kclbfsb": 1,
                "word: bxzyviz": 1,
                "word: vwwdim": 1,
                "word: prvqhvrfsvunsrtr": 1,
                "word: lfsojt": 1,
                "word: mdxjoikqmqe": 1,
                "word: omrbcylpwtqrqgztigtbv": 1,
                "word: szfmgbz": 1,
                "word: ypjcpsydkw": 1,
                "word: bebmsc": 1,
                "word: jahywmn": 1,
                "word: tjwvzgmtjecvyg": 1,
                "word: ykhmmziktawogpknuvjrk": 1,
                "word: xribcjx": 1,
                "word: ianenq": 1,
                "word: rkrkllys": 1,
                "word: pqckqjhldzcyh": 1,
                "word: bzhden": 1,
                "word: fazeoekq": 1,
                "word: gfnjazdvzgurcdbtruyopc": 1,
                "word: eldmudcpchgw": 1,
                "word: lccgweswh": 1,
                "word: wqvbxjoks": 1,
                "word: zrggfm": 1,
                "word: qkqtpdnjaxmf": 1,
                "word: yptbayflhpnuni": 1,
                "word: tsidtnwze": 1,
                "word: fojmyhc": 1,
                "word: ziotpc": 1,
                "word: fyxsyp": 1,
                "word: vgspelwkuib": 1,
                "word: udgucmx": 1,
                "word: icgnbddwo": 1,
                "word: uqynsc": 1,
                "word: yisctbez": 1,
                "word: veyvfpjygiafbhodx": 1,
                "word: tswoyj": 1,
                "word: rikwskelofraiykjh": 1,
                "word: kkzavjm": 1,
                "word: oploashypvevntoveuu": 1,
                "word: svktzfgizvxisv": 1,
                "word: vwxnveg": 1,
                "word: dehngvy": 1,
                "word: coyfoob": 1,
                "word: yvfuyczsq": 1,
                "word: lxgnmyrvxi": 1,
                "word: ewrdaqjgwta": 1,
                "word: crpmpggfvzdbjucqeoytfsczujarc": 1,
                "word: bobuiithz": 1,
                "word: ahcwqks": 1,
                "word: xgatnqfmeuas": 1,
                "word: cplwzygq": 1,
                "word: wzfpzta": 1,
                "word: laymdymbkswsglcezss": 1,
                "word: wxbenncfjko": 1,
                "word: iwftqobmqwks": 1,
                "word: luvyqy": 1,
                "word: reuglelqbmhgoexfc": 1,
                "word: uyqcuazxvae": 1,
                "word: jzkfpr": 1,
                "word: kyllorzlpusg": 1,
                "word: orfxakd": 1,
                "word: pzdydufkbphpggp": 1,
                "word: zjmmoyio": 1,
                "word: qcotveyuisfhgluh": 1,
                "word: bbfxsrgzmzl": 1,
                "word: bpeiczd": 1,
                "word: arhtwxmffrnmkfzluck": 1,
                "word: naswks": 1,
                "word: vbpqfrd": 1,
                "word: qqwtnm": 1,
                "word: alcxdtqf": 1,
                "word: ehehgzqbtmfec": 1,
                "word: ibpvie": 1,
                "word: wwgtmyvpxqojubvjsb": 1,
                "word: guhpqtyzmwn": 1,
                "word: etjladc": 1,
                "word: lrzceq": 1,
                "word: mhtijjybbyfplt": 1,
                "word: ayzkkyccqd": 1,
                "word: uifrjgqm": 1,
                "word: qihaaoclsjtp": 1,
                "word: vycqvxqlt": 1,
                "word: swtnsorwetlkr": 1,
                "word: rnfnxxnvsvh": 1,
                "word: duhibzasmmsfyau": 1,
                "word: buirfseg": 1,
                "word: pmsshior": 1,
                "word: dnyebzhzgvujrb": 1,
                "word: aofzbik": 1,
                "word: ahthvgh": 1,
                "word: bocdbez": 1,
                "word: nfjmep": 1,
                "word: xswofmreqfzzlfcgflmfrr": 1,
                "word: swrydttumch": 1,
                "word: pmbdbozp": 1,
                "word: dnuypdki": 1,
                "word: jqfusapqju": 1,
                "word: lmluaeoz": 1,
                "word: orveela": 1,
                "word: rgvciucxiinp": 1,
                "word: cfnbnkvpwtgwiovt": 1,
                "word: yjoqjsazt": 1,
                "word: qbrkyqkoc": 1,
                "word: oxwviy": 1,
                "word: zdttkd": 1,
                "word: hywqeomgosmalvqzpxucpuxj": 1,
                "word: eosjszbhvvx": 1,
                "word: fopmregfgmnbmyjm": 1,
                "word: xuktxskpz": 1,
                "word: dektsa": 1,
                "word: vgxtfufflvudkpep": 1,
                "word: dflxjpgol": 1,
                "word: htrobqudm": 1,
                "word: zidpvgjx": 1,
                "word: rokwxb": 1,
                "word: duiyhf": 1,
                "word: bfekbbpcvzl": 1,
                "word: gkhrpbm": 1,
                "word: nfhvyq": 1,
                "word: drtxznh": 1,
                "word: lwehrq": 1,
                "word: zgugzm": 1,
                "word: icpgnfr": 1,
                "word: xgdsmlldmhcolzx": 1,
                "word: kyloapm": 1,
                "word: jolfettdb": 1,
                "word: nnwuiknbrgxdgb": 1,
                "word: sjxknmnnp": 1,
                "word: lufdewecewtpvkoutpqrztmfnuf": 1,
                "word: cesygnosvrwf": 1,
                "word: mvdkkt": 1,
                "word: iwcatoi": 1,
                "word: zdxyxnfiqpujd": 1,
                "word: kfxkvpjv": 1,
                "word: ovizfexo": 1,
                "word: qsjfbgqlu": 1,
                "word: ftmghthk": 1,
                "word: vqoxhyzn": 1,
                "word: mziinubzinm": 1,
                "word: bsvggjhups": 1,
                "word: vlluwegdk": 1,
                "word: kpctpvle": 1,
                "word: zpyrjvwcpvbhy": 1,
                "word: xcaehkyp": 1,
                "word: jzehwjmcdhskk": 1,
                "word: daatei": 1,
                "word: rxzjxxzavnk": 1,
                "word: gopvxlif": 1,
                "word: ebavotcn": 1,
                "word: whxeiuyuvu": 1,
                "word: vwekpi": 1,
                "word: owckrgwpjt": 1,
                "word: svlpwx": 1,
                "word: hwhxzdrv": 1,
                "word: kvzyar": 1,
                "word: dgipipsshs": 1,
                "word: kkkhhh": 1,
                "word: ggggggg": 1,
                "word: oommmmmmm": 1,
                "word: bddeumd": 1,
                "word: bjkkii": 1,
                "word: bfooge": 1,
                "word: bfgonmlhi": 1,
                "word: bfgonnmlhhi": 1,
                "word: bfgonmld": 1,
                "word: bcdeiqtuvx": 1,
                "word: ddddtu": 1,
                "word: uuuuuu": 5,
                "word: uuuuuuu": 2,
                "word: uuuuuuuuuu": 1,
                "word: uuuuuuuuuuu": 1,
                "word: uuuuuuuuuuuuuuuuuuuuu": 1,
                "word: uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu": 1,
                "word: uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu": 1,
                "word: uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu": 1,
                "word: uuuuuums": 1,
                "word: xxxxxxxxxxxxxxxx": 1,
                "word: ddddddddddddd": 1,
                "word: hhhhhhhhhhhhhhhh": 2,
                "word: bbbbbbbbbbbbbbbb": 1,
                "word: bbbbbbbbbbbbbb": 1,
                "word: uuquuuuuuuu": 1,
                "word: muuuuuuuuuu": 1,
                "word: uuuuuuuu": 1,
                "word: tuuuuuuuuuuuuuuu": 1,
                "word: ffffff": 2,
                "word: buildid": 1,
                "word: compareandswapuintptr": 1,
                "word: storeuint": 1,
                "word: storeuintptr": 2,
                "word: processoptions": 1,
                "word: indexbyte": 5,
                "word: doinit": 1,
                "word: xgetbv": 1,
                "word: casuintptr": 1,
                "word: bytealg": 19,
                "word: countgeneric": 1,
                "word: countgenericstring": 1,
                "word: cmpstring": 1,
                "word: cmpbody": 1,
                "word: countstring": 1,
                "word: countbody": 1,
                "word: memequal": 8,
                "word: varlen": 2,
                "word: memeqbody": 1,
                "word: indexstring": 1,
                "word: indexbody": 1,
                "word: indexbytestring": 1,
                "word: indexbytebody": 1,
                "word: memhash": 8,
                "word: strhash": 1,
                "word: interhash": 1,
                "word: isdirectiface": 1,
                "word: nilinterhash": 1,
                "word: strequal": 1,
                "word: interequal": 1,
                "word: nilinterequal": 1,
                "word: efaceeq": 1,
                "word: ifaceeq": 1,
                "word: alginit": 1,
                "word: initalgaes": 1,
                "word: atomicwb": 1,
                "word: atomicstorep": 1,
                "word: storepointer": 1,
                "word: compareandswappointer": 1,
                "word: cgouse": 1,
                "word: cgocall": 2,
                "word: cgocallbackg": 3,
                "word: dolockosthread": 1,
                "word: unwindm": 1,
                "word: acquirem": 1,
                "word: releasem": 1,
                "word: cgocheckpointer": 1,
                "word: cgocheckarg": 1,
                "word: inheap": 1,
                "word: cgocheckunknownpointer": 1,
                "word: activemodules": 1,
                "word: cgoinrange": 1,
                "word: heapbitsforaddr": 1,
                "word: arenaindex": 1,
                "word: cgoisgopointer": 1,
                "word: gostringnocopy": 1,
                "word: cgocheckwritebarrier": 2,
                "word: cgocheckmemmove": 1,
                "word: cgocheckslicecopy": 1,
                "word: cgochecktypedblock": 2,
                "word: spanofunchecked": 1,
                "word: cgocheckbits": 1,
                "word: cgocheckusingtype": 1,
                "word: makechan": 1,
                "word: goparkunlock": 1,
                "word: chanbuf": 1,
                "word: senddirect": 1,
                "word: recvdirect": 1,
                "word: closechan": 1,
                "word: chanrecv": 5,
                "word: selectnbrecv": 1,
                "word: chanlen": 1,
                "word: chancap": 1,
                "word: chanclose": 1,
                "word: debugcallcheck": 2,
                "word: debugcallwrap": 2,
                "word: dumpregs": 1,
                "word: gogetenv": 1,
                "word: envkeyequal": 1,
                "word: lowerascii": 1,
                "word: printany": 1,
                "word: callersframes": 1,
                "word: goroot": 1,
                "word: frombits": 4,
                "word: readunaligned": 2,
                "word: getitab": 1,
                "word: itabhashfunc": 1,
                "word: itabadd": 1,
                "word: itabsinit": 1,
                "word: panicdottypee": 1,
                "word: panicdottypei": 1,
                "word: convtstring": 1,
                "word: convtslice": 1,
                "word: asserti": 2,
                "word: asserte": 2,
                "word: ifacee": 1,
                "word: iterate": 1,
                "word: lfstackpack": 1,
                "word: lfstackunpack": 1,
                "word: lfnodevalidate": 1,
                "word: osyield": 1,
                "word: notewakeup": 1,
                "word: notetsleep": 2,
                "word: notetsleepg": 1,
                "word: mallocinit": 1,
                "word: sysreservealigned": 1,
                "word: mallocgc": 2,
                "word: gomcache": 1,
                "word: nextfreefast": 1,
                "word: makespanclass": 1,
                "word: profilealloc": 1,
                "word: nextsample": 1,
                "word: fastexprand": 1,
                "word: fastlog": 2,
                "word: inpersistentalloc": 1,
                "word: overloadfactor": 1,
                "word: bucketshift": 1,
                "word: makebucketarray": 1,
                "word: roundupsize": 1,
                "word: mapaccess": 9,
                "word: bucketmask": 1,
                "word: evacuated": 1,
                "word: mapaccessk": 1,
                "word: mapassign": 6,
                "word: toomanyoverflowbuckets": 1,
                "word: mapdelete": 4,
                "word: mapiterinit": 2,
                "word: mapiternext": 2,
                "word: hashgrow": 1,
                "word: growwork": 4,
                "word: evacuate": 4,
                "word: advanceevacuationmark": 1,
                "word: bucketevacuated": 1,
                "word: ismapkey": 1,
                "word: mapiterkey": 1,
                "word: mapitervalue": 1,
                "word: maplen": 1,
                "word: faststr": 7,
                "word: typedmemmove": 2,
                "word: typedmemmovepartial": 1,
                "word: reflectcallmove": 1,
                "word: typedslicecopy": 2,
                "word: typedmemclr": 2,
                "word: typedmemclrpartial": 1,
                "word: memclrhaspointers": 1,
                "word: markbitsforaddr": 1,
                "word: spanof": 1,
                "word: bulkbarrierprewrite": 1,
                "word: bulkbarrierprewritesrconly": 1,
                "word: bulkbarrierbitmap": 1,
                "word: newallocbits": 1,
                "word: heapbitssettype": 1,
                "word: progtopointermask": 1,
                "word: rungcprog": 1,
                "word: subtract": 1,
                "word: subtractb": 1,
                "word: materializegcprog": 1,
                "word: allocmcache": 1,
                "word: freemcache": 2,
                "word: traceheapalloc": 1,
                "word: sysunused": 1,
                "word: sysused": 1,
                "word: sysfree": 1,
                "word: sysfault": 1,
                "word: sysreserve": 1,
                "word: sysmap": 1,
                "word: queuefinalizer": 1,
                "word: wakefing": 1,
                "word: createfing": 1,
                "word: runfinq": 1,
                "word: gcinit": 1,
                "word: readgogc": 1,
                "word: gcenable": 1,
                "word: setgcpercent": 1,
                "word: fastrandn": 1,
                "word: preemptone": 1,
                "word: gcmarkworkavailable": 1,
                "word: pollfractionalworkerexit": 1,
                "word: gcsettriggerratio": 1,
                "word: issweepdone": 1,
                "word: gosched": 2,
                "word: gcwaitonmark": 1,
                "word: gcstart": 3,
                "word: setgcphase": 1,
                "word: gcbgmarkprepare": 1,
                "word: semrelease": 4,
                "word: tracegcstwstart": 1,
                "word: tracegcstart": 1,
                "word: gcmarkdone": 5,
                "word: gcmarktermination": 6,
                "word: tracegcdone": 1,
                "word: gcbgmarkstartworkers": 1,
                "word: noteclear": 1,
                "word: gcsweep": 1,
                "word: gcresetmarkstate": 1,
                "word: registerpoolcleanup": 1,
                "word: clearpools": 1,
                "word: itoadiv": 1,
                "word: fmtnsasms": 1,
                "word: gcmarkrootprepare": 2,
                "word: gcmarkrootcheck": 1,
                "word: readgstatus": 1,
                "word: markrootblock": 1,
                "word: markrootfreegstacks": 1,
                "word: markrootspans": 1,
                "word: gcassistalloc": 3,
                "word: tracegcmarkassistdone": 1,
                "word: tracegcmarkassiststart": 1,
                "word: gcwakeallassists": 1,
                "word: gcparkassist": 1,
                "word: gcflushbgcredit": 1,
                "word: dematerializegcprog": 1,
                "word: scanframeworker": 1,
                "word: gcdrain": 1,
                "word: gcdrainn": 1,
                "word: scanblock": 1,
                "word: pageindexof": 1,
                "word: gcdumpobject": 1,
                "word: gcmarknewobject": 1,
                "word: gcmarktinyallocs": 1,
                "word: initcheckmarks": 1,
                "word: clearcheckmarks": 1,
                "word: binarysearchtree": 1,
                "word: finishsweep": 1,
                "word: bgsweep": 1,
                "word: sweepone": 1,
                "word: deductsweepcredit": 1,
                "word: getempty": 2,
                "word: putempty": 1,
                "word: putfull": 1,
                "word: trygetfull": 1,
                "word: handoff": 2,
                "word: preparefreeworkbufs": 1,
                "word: freesomewbufs": 2,
                "word: recordspan": 1,
                "word: inheaporstack": 1,
                "word: spanofheap": 1,
                "word: addspecial": 1,
                "word: removespecial": 1,
                "word: addfinalizer": 1,
                "word: removefinalizer": 1,
                "word: freespecial": 1,
                "word: newmarkbits": 1,
                "word: nextmarkbitarenaepoch": 1,
                "word: newarenamayunlock": 1,
                "word: newbucket": 1,
                "word: stkbucket": 1,
                "word: eqslice": 1,
                "word: nextcycle": 1,
                "word: flushlocked": 1,
                "word: postsweep": 1,
                "word: blockevent": 1,
                "word: blocksampled": 1,
                "word: saveblockevent": 1,
                "word: tracefree": 2,
                "word: cachestats": 1,
                "word: flushmcache": 1,
                "word: purgecachedstats": 1,
                "word: msysstatinc": 1,
                "word: msysstatdec": 1,
                "word: wbbufflush": 3,
                "word: pollserverinit": 1,
                "word: pollopen": 1,
                "word: pollclose": 1,
                "word: pollreset": 1,
                "word: netpollcheckerr": 1,
                "word: pollwait": 1,
                "word: pollwaitcanceled": 1,
                "word: pollsetdeadline": 1,
                "word: netpollgoready": 1,
                "word: pollunblock": 1,
                "word: netpollready": 1,
                "word: netpollblockcommit": 1,
                "word: netpollblock": 1,
                "word: netpollunblock": 1,
                "word: netpolldeadlineimpl": 1,
                "word: netpolldeadline": 1,
                "word: netpollreaddeadline": 1,
                "word: netpollwritedeadline": 1,
                "word: netpollopen": 1,
                "word: handlecompletion": 1,
                "word: windowsfindfunc": 1,
                "word: windowsloadsystemlib": 1,
                "word: loadoptionalsyscalls": 1,
                "word: getproccount": 1,
                "word: osrelax": 1,
                "word: osinit": 1,
                "word: funcpc": 1,
                "word: getpagesize": 1,
                "word: nanotimeqpc": 1,
                "word: nowqpc": 1,
                "word: initwine": 1,
                "word: getrandomdata": 1,
                "word: goenvs": 1,
                "word: writeconsoleutf": 1,
                "word: semawakeup": 2,
                "word: semacreate": 2,
                "word: newosproc": 1,
                "word: exitthread": 1,
                "word: stdcall": 10,
                "word: ctrlhandler": 2,
                "word: setthreadcpuprofiler": 1,
                "word: paniccheckmalloc": 1,
                "word: panicindex": 1,
                "word: panicslice": 1,
                "word: panicdivide": 1,
                "word: throwinit": 1,
                "word: deferproc": 1,
                "word: deferargs": 1,
                "word: testdefersizes": 1,
                "word: deferclass": 1,
                "word: totaldefersize": 1,
                "word: newdefer": 3,
                "word: freedefer": 2,
                "word: freedeferpanic": 1,
                "word: freedeferfn": 1,
                "word: preprintpanics": 2,
                "word: printpanics": 1,
                "word: gopanic": 1,
                "word: getargp": 1,
                "word: gorecover": 1,
                "word: recovery": 1,
                "word: fatalthrow": 2,
                "word: fatalpanic": 3,
                "word: startpanic": 1,
                "word: dopanic": 1,
                "word: gotraceback": 1,
                "word: canpanic": 1,
                "word: recordforpanic": 1,
                "word: printunlock": 1,
                "word: gwrite": 1,
                "word: printsp": 1,
                "word: printnl": 1,
                "word: printbool": 1,
                "word: printfloat": 1,
                "word: printcomplex": 1,
                "word: printuint": 1,
                "word: printint": 1,
                "word: printhex": 1,
                "word: printpointer": 1,
                "word: printstring": 1,
                "word: printslice": 1,
                "word: printeface": 1,
                "word: hexdumpwords": 2,
                "word: starttemplatethread": 1,
                "word: beforeexit": 1,
                "word: forcegchelper": 1,
                "word: gopark": 1,
                "word: goready": 2,
                "word: acquiresudog": 1,
                "word: badmcall": 2,
                "word: badreflectcall": 1,
                "word: badmorestackg": 1,
                "word: badmorestackgsignal": 1,
                "word: badctxt": 1,
                "word: allgadd": 1,
                "word: cpuinit": 1,
                "word: schedinit": 1,
                "word: tracebackinit": 1,
                "word: checkmcount": 1,
                "word: mcommoninit": 1,
                "word: dumpgstatus": 1,
                "word: freezetheworld": 1,
                "word: usleep": 2,
                "word: restartg": 1,
                "word: starttheworld": 2,
                "word: stoptheworldwithsema": 1,
                "word: pidleget": 1,
                "word: starttheworldwithsema": 1,
                "word: netpollinited": 1,
                "word: tracegcstwdone": 1,
                "word: mstart": 2,
                "word: mstartm": 1,
                "word: unminit": 1,
                "word: allocm": 1,
                "word: unlockextra": 1,
                "word: newextram": 1,
                "word: onenewextram": 1,
                "word: lockextra": 1,
                "word: templatethread": 1,
                "word: mspinning": 1,
                "word: handoffp": 1,
                "word: gcstopm": 1,
                "word: pollwork": 1,
                "word: resetspinning": 1,
                "word: injectglist": 1,
                "word: globrunqput": 1,
                "word: parkunlock": 1,
                "word: setmnowb": 1,
                "word: setgnowb": 1,
                "word: goschedimpl": 1,
                "word: tracegosched": 1,
                "word: gopreempt": 1,
                "word: tracegopreempt": 1,
                "word: tracegoend": 1,
                "word: reentersyscall": 2,
                "word: entersyscall": 3,
                "word: sysmon": 2,
                "word: gcwait": 1,
                "word: entersyscallblock": 4,
                "word: tracegosyscall": 1,
                "word: exitsyscall": 2,
                "word: exitsyscallfast": 5,
                "word: reacquired": 2,
                "word: gostartcallfn": 1,
                "word: gostartcall": 1,
                "word: stackmapdata": 1,
                "word: saveancestors": 1,
                "word: gfpurge": 1,
                "word: unlockosthread": 2,
                "word: dounlockosthread": 1,
                "word: badunlockosthread": 1,
                "word: procresize": 1,
                "word: globrunqputhead": 1,
                "word: tracegomaxprocs": 1,
                "word: acquirep": 1,
                "word: releasep": 1,
                "word: incidlelocked": 1,
                "word: retake": 1,
                "word: preemptall": 1,
                "word: schedenableuser": 1,
                "word: globrunqputbatch": 1,
                "word: schedenabled": 1,
                "word: globrunqget": 1,
                "word: pidleput": 1,
                "word: runqempty": 1,
                "word: runqput": 1,
                "word: runqputslow": 1,
                "word: runqget": 1,
                "word: runqgrab": 1,
                "word: runqsteal": 1,
                "word: procpin": 3,
                "word: procunpin": 3,
                "word: canspin": 1,
                "word: dospin": 1,
                "word: testatomic": 1,
                "word: parsedebugvars": 1,
                "word: settraceback": 1,
                "word: timediv": 1,
                "word: resolvenameoff": 2,
                "word: resolvetypeoff": 2,
                "word: resolvetextoff": 1,
                "word: addreflectoff": 1,
                "word: reflectoffslock": 1,
                "word: reflectoffsunlock": 1,
                "word: extendrandom": 1,
                "word: semacquiremutex": 1,
                "word: readywithtime": 1,
                "word: semroot": 1,
                "word: cansemacquire": 1,
                "word: notifylistcheck": 1,
                "word: disablewer": 1,
                "word: initexceptionhandler": 1,
                "word: isabort": 1,
                "word: isabortpc": 1,
                "word: isgoexception": 1,
                "word: exceptionhandler": 1,
                "word: firstcontinuehandler": 1,
                "word: lastcontinuehandler": 1,
                "word: sigpanic": 1,
                "word: panicmem": 1,
                "word: panicfloat": 1,
                "word: panicoverflow": 1,
                "word: setbadsignalmsg": 1,
                "word: sigsend": 1,
                "word: panicmakeslicelen": 1,
                "word: panicmakeslicecap": 1,
                "word: growslice": 1,
                "word: ispoweroftwo": 2,
                "word: stackinit": 1,
                "word: stacklog": 1,
                "word: stackpoolalloc": 1,
                "word: stackpoolfree": 1,
                "word: stackcacherefill": 1,
                "word: stackcacherelease": 1,
                "word: stackfree": 1,
                "word: adjustpointers": 1,
                "word: adjustframe": 1,
                "word: adjustpointer": 1,
                "word: adjustctxt": 1,
                "word: adjustdefers": 1,
                "word: adjustsudogs": 1,
                "word: findsghi": 1,
                "word: syncadjustsudogs": 1,
                "word: copystack": 1,
                "word: adjustpanics": 1,
                "word: shrinkstack": 1,
                "word: freestackspans": 1,
                "word: getstackmap": 1,
                "word: morestackc": 1,
                "word: concatstrings": 1,
                "word: stringdataonstack": 1,
                "word: concatstring": 4,
                "word: slicebytetostring": 1,
                "word: rawstringtmp": 1,
                "word: stringtoslicebyte": 1,
                "word: stringtoslicerune": 1,
                "word: slicerunetostring": 1,
                "word: intstring": 1,
                "word: rawstring": 1,
                "word: rawbyteslice": 1,
                "word: rawruneslice": 1,
                "word: findnull": 1,
                "word: gostringw": 1,
                "word: badsystemstack": 1,
                "word: memmove": 3,
                "word: expandcgoframes": 1,
                "word: modulesinit": 1,
                "word: moduledataverify": 2,
                "word: funcforpc": 1,
                "word: findmoduledatap": 1,
                "word: findfunc": 1,
                "word: pcvalue": 1,
                "word: pcvaluecachekey": 1,
                "word: cfuncname": 1,
                "word: funcnamefromnameoff": 1,
                "word: funcline": 2,
                "word: funcspdelta": 1,
                "word: pcdatavalue": 2,
                "word: pcdatastart": 1,
                "word: funcdata": 1,
                "word: readvarint": 1,
                "word: loadsystemlibrary": 1,
                "word: getloadlibraryex": 1,
                "word: getloadlibrary": 1,
                "word: loadlibrary": 1,
                "word: getprocaddress": 2,
                "word: getgetprocaddress": 1,
                "word: badtimer": 1,
                "word: goroutineready": 1,
                "word: addtimer": 1,
                "word: deltimer": 1,
                "word: modtimer": 1,
                "word: timerproc": 1,
                "word: timejump": 1,
                "word: timejumplocked": 1,
                "word: timesleepuntil": 1,
                "word: siftuptimer": 1,
                "word: siftdowntimer": 1,
                "word: tracereader": 1,
                "word: traceprocfree": 1,
                "word: tracefullqueue": 1,
                "word: traceevent": 1,
                "word: traceeventlocked": 1,
                "word: tracestackid": 1,
                "word: traceacquirebuffer": 1,
                "word: tracereleasebuffer": 1,
                "word: traceflush": 1,
                "word: traceprocstart": 1,
                "word: traceprocstop": 1,
                "word: tracegcsweepstart": 1,
                "word: tracegcsweepspan": 1,
                "word: tracegcsweepdone": 1,
                "word: tracegocreate": 1,
                "word: tracegostart": 1,
                "word: tracegopark": 1,
                "word: tracegounpark": 1,
                "word: tracegosysexit": 1,
                "word: tracegosysblock": 1,
                "word: tracenextgc": 1,
                "word: tracebackdefers": 1,
                "word: getarginfofast": 1,
                "word: gentraceback": 1,
                "word: topofstack": 2,
                "word: elidewrappercalling": 1,
                "word: getarginfo": 1,
                "word: tracebackcgocontext": 1,
                "word: printcreatedby": 2,
                "word: tracebacktrap": 1,
                "word: printancestortraceback": 1,
                "word: printancestortracebackfuncinfo": 1,
                "word: gcallers": 1,
                "word: showframe": 1,
                "word: showfuncinfo": 1,
                "word: isexportedruntime": 1,
                "word: goroutineheader": 1,
                "word: tracebackothers": 1,
                "word: tracebackhexdump": 2,
                "word: issystemgoroutine": 1,
                "word: printcgotraceback": 1,
                "word: printonecgotraceback": 1,
                "word: callcgosymbolizer": 1,
                "word: cgocontextpcs": 1,
                "word: typelinksinit": 1,
                "word: typesequal": 1,
                "word: decoderune": 3,
                "word: encoderune": 3,
                "word: writeerr": 1,
                "word: ializers": 38,
                "word: skippleaseusecallersframes": 1,
                "word: asminit": 1,
                "word: noctxt": 1,
                "word: reflectcall": 1,
                "word: callret": 1,
                "word: procyield": 1,
                "word: publicationbarrier": 1,
                "word: jmpdefer": 1,
                "word: gosave": 1,
                "word: asmcgocall": 1,
                "word: gofunc": 1,
                "word: stackcheck": 1,
                "word: cputicks": 1,
                "word: aeshash": 3,
                "word: aeshashstr": 1,
                "word: aeshashbody": 1,
                "word: checkasm": 1,
                "word: gcwritebarrier": 1,
                "word: debugcall": 13,
                "word: debugcallpanicked": 1,
                "word: duffzero": 1,
                "word: duffcopy": 1,
                "word: memclrnoheappointers": 1,
                "word: asmstdcall": 1,
                "word: badsignal": 1,
                "word: getlasterror": 2,
                "word: sigtramp": 1,
                "word: exceptiontramp": 1,
                "word: firstcontinuetramp": 1,
                "word: lastcontinuetramp": 1,
                "word: externalthreadhandler": 1,
                "word: settls": 1,
                "word: onosstack": 1,
                "word: switchtothread": 2,
                "word: newentry": 1,
                "word: indexlocal": 1,
                "word: poolcleanup": 1,
                "word: readatleast": 1,
                "word: copybuffer": 1,
                "word: decoderuneinstring": 1,
                "word: decodelastrune": 1,
                "word: runestart": 1,
                "word: decodelastruneinstring": 1,
                "word: runecount": 1,
                "word: runecountinstring": 1,
                "word: validstring": 1,
                "word: isspace": 2,
                "word: isexcludinglatin": 1,
                "word: toupper": 2,
                "word: tolower": 2,
                "word: simplefold": 1,
                "word: explode": 2,
                "word: gensplit": 2,
                "word: cutover": 1,
                "word: indexrabinkarp": 2,
                "word: hashstr": 2,
                "word: fullrune": 1,
                "word: signbit": 2,
                "word: copysign": 2,
                "word: isoddint": 1,
                "word: trigreduce": 1,
                "word: leadingzeros": 1,
                "word: equalignorecase": 1,
                "word: readfloat": 1,
                "word: parsefloat": 2,
                "word: quotewith": 1,
                "word: baseerror": 1,
                "word: bitsizeerror": 1,
                "word: parseuint": 1,
                "word: digitzero": 1,
                "word: rightshift": 1,
                "word: prefixislessthan": 1,
                "word: leftshift": 1,
                "word: shouldroundup": 1,
                "word: adjustlastdigitfixed": 1,
                "word: adjustlastdigit": 1,
                "word: genericftoa": 1,
                "word: bigftoa": 1,
                "word: formatdigits": 1,
                "word: roundshortest": 1,
                "word: formatuint": 1,
                "word: appenduint": 1,
                "word: formatbits": 1,
                "word: trailingzeros": 1,
                "word: appendquotedwith": 1,
                "word: appendquotedrunewith": 1,
                "word: validrune": 1,
                "word: appendescapedrune": 1,
                "word: canbackquote": 1,
                "word: unquotechar": 1,
                "word: unquote": 2,
                "word: bsearch": 3,
                "word: isprint": 2,
                "word: isingraphiclist": 1,
                "word: makemethodvalue": 1,
                "word: swapper": 11,
                "word: valueof": 6,
                "word: escapes": 1,
                "word: unpackeface": 1,
                "word: ifaceindir": 1,
                "word: newname": 1,
                "word: totype": 1,
                "word: typeof": 1,
                "word: resolvereflectname": 1,
                "word: directlyassignable": 1,
                "word: haveidenticaltype": 1,
                "word: haveidenticalunderlyingtype": 1,
                "word: typesbystring": 1,
                "word: rtypeoff": 1,
                "word: funcstr": 1,
                "word: sliceof": 1,
                "word: addtypebits": 1,
                "word: packeface": 1,
                "word: methodname": 1,
                "word: storercvr": 1,
                "word: methodreceiver": 1,
                "word: callmethod": 1,
                "word: arrayat": 1,
                "word: copyval": 1,
                "word: typesmustmatch": 1,
                "word: convertop": 1,
                "word: makeint": 1,
                "word: makefloat": 1,
                "word: makecomplex": 1,
                "word: makestring": 1,
                "word: makebytes": 1,
                "word: makerunes": 1,
                "word: cvtint": 1,
                "word: cvtuint": 1,
                "word: cvtfloatint": 1,
                "word: cvtfloatuint": 1,
                "word: cvtintfloat": 1,
                "word: cvtuintfloat": 1,
                "word: cvtfloat": 1,
                "word: cvtcomplex": 1,
                "word: cvtintstring": 1,
                "word: cvtuintstring": 1,
                "word: cvtbytesstring": 1,
                "word: cvtstringbytes": 1,
                "word: cvtrunesstring": 1,
                "word: cvtstringrunes": 1,
                "word: cvtdirect": 1,
                "word: makefuncstub": 1,
                "word: methodvaluecall": 1,
                "word: searchstrings": 2,
                "word: insertionsort": 2,
                "word: siftdown": 2,
                "word: heapsort": 2,
                "word: medianofthree": 2,
                "word: swaprange": 1,
                "word: dopivot": 2,
                "word: quicksort": 2,
                "word: maxdepth": 1,
                "word: stable": 2,
                "word: symmerge": 1,
                "word: rotate": 1,
                "word: floatcompare": 1,
                "word: nilcompare": 1,
                "word: sysdll": 5,
                "word: loaddll": 1,
                "word: ptrfromstring": 1,
                "word: byteptrfromstring": 1,
                "word: newlazydll": 1,
                "word: fullpath": 1,
                "word: translateaccountname": 1,
                "word: stringtosid": 1,
                "word: lookupsid": 1,
                "word: opencurrentprocesstoken": 1,
                "word: byteslicefromstring": 1,
                "word: fromstring": 1,
                "word: makeinheritsa": 1,
                "word: setfilepointerex": 1,
                "word: errnoerr": 3,
                "word: getstdhandle": 3,
                "word: closeonexec": 1,
                "word: wsasendto": 2,
                "word: loadconnectex": 2,
                "word: findfirstfile": 2,
                "word: copyfinddata": 1,
                "word: freelibrary": 2,
                "word: formatmessage": 1,
                "word: createfile": 1,
                "word: readfile": 2,
                "word: writefile": 2,
                "word: closehandle": 2,
                "word: findclose": 1,
                "word: setendoffile": 1,
                "word: gettimezoneinformation": 1,
                "word: cancelio": 1,
                "word: cancelioex": 1,
                "word: openprocess": 1,
                "word: terminateprocess": 3,
                "word: getexitcodeprocess": 1,
                "word: getcurrentprocess": 2,
                "word: getprocesstimes": 1,
                "word: getfileattributesex": 1,
                "word: getcommandline": 1,
                "word: localfree": 1,
                "word: sethandleinformation": 1,
                "word: flushfilebuffers": 1,
                "word: getfullpathname": 1,
                "word: regopenkeyex": 1,
                "word: regclosekey": 1,
                "word: regqueryinfokey": 1,
                "word: regenumkeyex": 1,
                "word: regqueryvalueex": 1,
                "word: getcurrentprocessid": 2,
                "word: getconsolemode": 2,
                "word: wsastartup": 1,
                "word: closesocket": 1,
                "word: acceptex": 1,
                "word: wsarecv": 1,
                "word: wsasend": 1,
                "word: wsarecvfrom": 1,
                "word: setfilecompletionnotificationmodes": 1,
                "word: wsaenumprotocols": 1,
                "word: translatename": 1,
                "word: netusergetinfo": 1,
                "word: netgetjoininformation": 1,
                "word: netapibufferfree": 1,
                "word: lookupaccountsid": 1,
                "word: lookupaccountname": 1,
                "word: convertsidtostringsid": 1,
                "word: convertstringsidtosid": 1,
                "word: getlengthsid": 1,
                "word: copysid": 1,
                "word: openprocesstoken": 1,
                "word: gettokeninformation": 1,
                "word: getsystemdirectory": 1,
                "word: openkey": 1,
                "word: regsetvalueex": 1,
                "word: regenumvalue": 1,
                "word: regdeletevalue": 1,
                "word: regloadmuistring": 1,
                "word: expandenvironmentstrings": 1,
                "word: nextstdchunk": 1,
                "word: isdigit": 3,
                "word: startswithlowercase": 1,
                "word: formatnano": 1,
                "word: absclock": 1,
                "word: absweekday": 1,
                "word: getnum": 1,
                "word: cutspace": 1,
                "word: daysin": 1,
                "word: isleap": 1,
                "word: fixedzone": 1,
                "word: parsetimezone": 1,
                "word: parsegmt": 1,
                "word: parsesignedoffset": 1,
                "word: parsenanoseconds": 1,
                "word: leadingint": 1,
                "word: fmtfrac": 1,
                "word: fmtint": 1,
                "word: lessthanhalf": 1,
                "word: absdate": 1,
                "word: unixtime": 1,
                "word: matchzonekey": 1,
                "word: loadregloadmuistring": 1,
                "word: toenglishname": 1,
                "word: extractcaps": 1,
                "word: abbrev": 1,
                "word: pseudounix": 1,
                "word: initlocalfromtzi": 1,
                "word: initlocal": 1,
                "word: loadwsasendrecvmsg": 2,
                "word: wsasendmsg": 1,
                "word: wsarecvmsg": 1,
                "word: getcomputernameex": 1,
                "word: getmodulefilename": 2,
                "word: getfileinformationbyhandleex": 1,
                "word: consume": 1,
                "word: errclosing": 1,
                "word: converterr": 1,
                "word: setdeadlineimpl": 1,
                "word: checksetfilecompletionnotificationmodes": 1,
                "word: loadsetfilecompletionnotificationmodes": 1,
                "word: loadcancelioex": 1,
                "word: startserver": 1,
                "word: issurrogate": 1,
                "word: sockaddrtoraw": 1,
                "word: newfilestatfromwin": 1,
                "word: fttoduration": 1,
                "word: newsyscallerror": 1,
                "word: findprocess": 2,
                "word: newprocess": 1,
                "word: executable": 4,
                "word: appendbsbytes": 1,
                "word: readnextarg": 1,
                "word: commandlinetoargv": 1,
                "word: openfile": 2,
                "word: newrawconn": 1,
                "word: syscallmode": 1,
                "word: newfile": 3,
                "word: opendir": 1,
                "word: openfilenolog": 1,
                "word: basename": 1,
                "word: ispathseparator": 1,
                "word: volumename": 1,
                "word: fixlongpath": 1,
                "word: statnolog": 1,
                "word: isnulname": 1,
                "word: newfilestatfromgetfileinformationbyhandle": 1,
                "word: runelen": 1,
                "word: appendquotetoascii": 1,
                "word: appendquote": 1,
                "word: appendquoterunetoascii": 1,
                "word: appendquoterune": 1,
                "word: newprinter": 1,
                "word: fprintf": 2,
                "word: sprintf": 1,
                "word: sprint": 1,
                "word: fprintln": 1,
                "word: sprintln": 1,
                "word: getfield": 1,
                "word: parsenum": 1,
                "word: toolarge": 1,
                "word: intfromarg": 1,
                "word: parseargnumber": 1,
                "word: newhuffmanbitwriter": 1,
                "word: newhuffmanencoder": 1,
                "word: generatefixedliteralencoding": 1,
                "word: reversebits": 1,
                "word: reverse": 3,
                "word: generatefixedoffsetencoding": 1,
                "word: readfull": 1,
                "word: fixedhuffmandecoderinit": 2,
                "word: makereader": 1,
                "word: newreadersize": 1,
                "word: ieeeinit": 2,
                "word: archavailableieee": 1,
                "word: archinitieee": 1,
                "word: checksumieee": 1,
                "word: archupdateieee": 1,
                "word: simplemaketable": 1,
                "word: simplepopulatetable": 1,
                "word: simpleupdate": 1,
                "word: slicingmaketable": 1,
                "word: slicingupdate": 1,
                "word: ieeeclmul": 1,
                "word: littleendian": 2,
                "word: subtle": 6,
                "word: constanttimecompare": 1,
                "word: constanttimebyteeq": 1,
                "word: inexactoverlap": 1,
                "word: anyoverlap": 1,
                "word: xorbytes": 1,
                "word: xorbytessse": 1,
                "word: sliceforappend": 1,
                "word: encryptblockgo": 1,
                "word: bigendian": 3,
                "word: putuint": 2,
                "word: decryptblockgo": 1,
                "word: expandkeygo": 1,
                "word: newcipher": 2,
                "word: newciphergeneric": 1,
                "word: encryptblockasm": 1,
                "word: decryptblockasm": 1,
                "word: expandkeyasm": 1,
                "word: gcmaesfinish": 1,
                "word: gcmaesinit": 1,
                "word: gcmaesdata": 1,
                "word: gcmaesenc": 1,
                "word: gcmaesdec": 1,
                "word: newencoding": 1,
                "word: hashstrrev": 1,
                "word: lastindex": 1,
                "word: indexrune": 1,
                "word: indexany": 1,
                "word: lastindexbyte": 1,
                "word: trimrightfunc": 1,
                "word: trimfunc": 1,
                "word: trimleftfunc": 1,
                "word: indexfunc": 1,
                "word: lastindexfunc": 1,
                "word: makeasciiset": 1,
                "word: makecutsetfunc": 4,
                "word: trimleft": 2,
                "word: trimright": 2,
                "word: replace": 2,
                "word: fromhexchar": 1,
                "word: shouldescape": 2,
                "word: unescape": 3,
                "word: getscheme": 1,
                "word: hassuffix": 1,
                "word: parseauthority": 1,
                "word: userpassword": 1,
                "word: parsehost": 1,
                "word: validencodedpath": 1,
                "word: validoptionalport": 1,
                "word: parsequery": 2,
                "word: queryunescape": 1,
                "word: queryescape": 1,
                "word: resolvepath": 1,
                "word: trimprefix": 1,
                "word: stripport": 1,
                "word: portonly": 1,
                "word: validuserinfo": 1,
                "word: stringcontainsctlbyte": 1,
                "word: minfoldrune": 1,
                "word: repeatisvalid": 1,
                "word: cleanalt": 1,
                "word: ischarclass": 1,
                "word: literalregexp": 1,
                "word: isvalidcapturename": 1,
                "word: isalnum": 1,
                "word: mergecharclass": 1,
                "word: unicodetable": 1,
                "word: cleanclass": 1,
                "word: appendliteral": 1,
                "word: appendrange": 1,
                "word: appendfoldedrange": 1,
                "word: appendclass": 1,
                "word: appendfoldedclass": 1,
                "word: appendnegatedclass": 1,
                "word: appendtable": 1,
                "word: appendnegatedtable": 1,
                "word: negateclass": 1,
                "word: checkutf": 1,
                "word: nextrune": 1,
                "word: iswordchar": 1,
                "word: dumpprog": 1,
                "word: dumpinst": 1,
                "word: quotetoascii": 1,
                "word: writeregexp": 1,
                "word: containsrune": 1,
                "word: freebitstate": 1,
                "word: newbitstate": 1,
                "word: newlazyflag": 1,
                "word: freeonepassmachine": 1,
                "word: newonepassmachine": 1,
                "word: onepassprefix": 1,
                "word: onepassnext": 1,
                "word: mergerunesets": 3,
                "word: cleanuponepass": 1,
                "word: onepasscopy": 1,
                "word: makeonepass": 2,
                "word: newqueue": 1,
                "word: compileonepass": 1,
                "word: shouldbacktrack": 1,
                "word: mustcompile": 1,
                "word: quotemeta": 1,
                "word: extract": 1,
                "word: isletter": 1,
                "word: parseformat": 1,
                "word: newdbgr": 1,
                "word: standardemit": 1,
                "word: isvalidnumber": 1,
                "word: indirect": 2,
                "word: unquotebytes": 1,
                "word: htmlescape": 1,
                "word: newencodestate": 1,
                "word: isemptyvalue": 1,
                "word: valueencoder": 1,
                "word: typeencoder": 2,
                "word: newtypeencoder": 1,
                "word: invalidvalueencoder": 1,
                "word: marshalerencoder": 1,
                "word: addrmarshalerencoder": 1,
                "word: textmarshalerencoder": 1,
                "word: addrtextmarshalerencoder": 1,
                "word: boolencoder": 1,
                "word: intencoder": 1,
                "word: uintencoder": 1,
                "word: stringencoder": 1,
                "word: interfaceencoder": 1,
                "word: unsupportedtypeencoder": 1,
                "word: newstructencoder": 1,
                "word: newmapencoder": 1,
                "word: encodebyteslice": 1,
                "word: newencoder": 1,
                "word: newsliceencoder": 1,
                "word: newarrayencoder": 1,
                "word: newptrencoder": 1,
                "word: newcondaddrencoder": 1,
                "word: isvalidtag": 1,
                "word: typebyindex": 1,
                "word: typefields": 2,
                "word: dominantfield": 1,
                "word: cachedtypefields": 1,
                "word: foldfunc": 1,
                "word: equalfoldright": 1,
                "word: asciiequalfold": 1,
                "word: simpleletterequalfold": 1,
                "word: compact": 1,
                "word: indent": 2,
                "word: statebeginvalueorempty": 1,
                "word: statebeginvalue": 1,
                "word: statebeginstringorempty": 1,
                "word: statebeginstring": 1,
                "word: stateendvalue": 1,
                "word: stateendtop": 1,
                "word: stateinstring": 1,
                "word: stateinstringesc": 1,
                "word: stateinstringescu": 4,
                "word: stateneg": 1,
                "word: statedot": 2,
                "word: statee": 2,
                "word: stateesign": 1,
                "word: statet": 1,
                "word: statetr": 1,
                "word: statetru": 1,
                "word: statef": 1,
                "word: statefa": 1,
                "word: statefal": 1,
                "word: statefals": 1,
                "word: staten": 1,
                "word: statenu": 1,
                "word: statenul": 1,
                "word: stateerror": 1,
                "word: quotechar": 1,
                "word: parsetag": 1,
                "word: fromvlqsigned": 1,
                "word: parsemappings": 1,
                "word: newdecoder": 2,
                "word: parsegencol": 1,
                "word: parsesourcesind": 1,
                "word: parsesourceline": 1,
                "word: parsesourcecol": 1,
                "word: parsenamesind": 1,
                "word: filepath": 5,
                "word: ioutil": 6,
                "word: readall": 2,
                "word: iskeyword": 1,
                "word: isidentifierstart": 1,
                "word: isidentifierpart": 1,
                "word: digitvalue": 2,
                "word: newcomment": 1,
                "word: islineterminator": 1,
                "word: parsenumberliteral": 1,
                "word: parsestringliteral": 1,
                "word: newbuffer": 1,
                "word: isdecimaldigit": 1,
                "word: readsource": 1,
                "word: readsourcemap": 1,
                "word: parsefilewithsourcemap": 1,
                "word: newparser": 1,
                "word: newcomments": 1,
                "word: splitn": 2,
                "word: linecount": 1,
                "word: transformregexp": 1,
                "word: absint": 1,
                "word: newsource": 1,
                "word: seedrand": 1,
                "word: decboolarray": 1,
                "word: decboolslice": 1,
                "word: deccomplex": 6,
                "word: decfloat": 6,
                "word: decintarray": 1,
                "word: decintslice": 1,
                "word: decint": 12,
                "word: decstringarray": 1,
                "word: decstringslice": 1,
                "word: decuintarray": 1,
                "word: decuintslice": 1,
                "word: decuint": 11,
                "word: decuintptrarray": 1,
                "word: decuintptrslice": 1,
                "word: decodeuintreader": 1,
                "word: ignoreuint": 2,
                "word: ignoretwouints": 1,
                "word: decalloc": 1,
                "word: decbool": 1,
                "word: decstring": 1,
                "word: decodeintovalue": 1,
                "word: allocvalue": 1,
                "word: encboolarray": 1,
                "word: encboolslice": 1,
                "word: enccomplex": 5,
                "word: encfloat": 5,
                "word: encintarray": 1,
                "word: encintslice": 1,
                "word: encint": 9,
                "word: encstringarray": 1,
                "word: encstringslice": 1,
                "word: encuintarray": 1,
                "word: encuintslice": 1,
                "word: encuint": 8,
                "word: encuintptrarray": 1,
                "word: encuintptrslice": 1,
                "word: encindirect": 1,
                "word: encbool": 1,
                "word: encstring": 1,
                "word: encstructterminator": 1,
                "word: encodereflectvalue": 1,
                "word: encopfor": 6,
                "word: gobencodeopfor": 2,
                "word: compileenc": 1,
                "word: getencengine": 1,
                "word: buildencengine": 1,
                "word: catcherror": 1,
                "word: validusertype": 1,
                "word: implementsinterface": 1,
                "word: usertype": 1,
                "word: settypeid": 1,
                "word: newgobencodertype": 1,
                "word: newmaptype": 1,
                "word: newarraytype": 1,
                "word: newstructtype": 1,
                "word: newslicetype": 1,
                "word: isupper": 1,
                "word: issent": 1,
                "word: getbasetype": 1,
                "word: gettype": 1,
                "word: checkid": 1,
                "word: bootstraptype": 1,
                "word: lookuptypeinfo": 1,
                "word: buildtypeinfo": 1,
                "word: mustgettypeinfo": 1,
                "word: registername": 1,
                "word: registerbasics": 1,
                "word: builtinglobal": 13,
                "word: valueofarrayindex": 1,
                "word: getvalueofarrayindex": 1,
                "word: newscope": 1,
                "word: isfinite": 1,
                "word: nanvalue": 1,
                "word: encodeuri": 3,
                "word: encodeuricomponent": 1,
                "word: decodeuri": 2,
                "word: decodeuricomponent": 1,
                "word: builtin": 15,
                "word: builtinarray": 23,
                "word: builtinnewarray": 1,
                "word: builtinnewarraynative": 1,
                "word: tolocalestring": 4,
                "word: arrayindextostring": 1,
                "word: splice": 1,
                "word: unshift": 1,
                "word: sortcompare": 1,
                "word: arraysortswap": 1,
                "word: arraysortquickpartition": 1,
                "word: arraysortquicksort": 1,
                "word: indexof": 2,
                "word: lastindexof": 2,
                "word: foreach": 1,
                "word: filter": 1,
                "word: reduce": 2,
                "word: reduceright": 1,
                "word: builtinboolean": 3,
                "word: builtinnewboolean": 1,
                "word: builtindate": 51,
                "word: builtinnewdate": 1,
                "word: todatestring": 1,
                "word: totimestring": 1,
                "word: toutcstring": 1,
                "word: toisostring": 1,
                "word: tojson": 1,
                "word: togmtstring": 1,
                "word: gettime": 1,
                "word: beforeset": 1,
                "word: tolocaledatestring": 1,
                "word: tolocaletimestring": 1,
                "word: getyear": 1,
                "word: getfullyear": 1,
                "word: getutcfullyear": 1,
                "word: getmonth": 1,
                "word: datefromgomonth": 1,
                "word: getutcmonth": 1,
                "word: getdate": 1,
                "word: getutcdate": 1,
                "word: getday": 1,
                "word: getutcday": 1,
                "word: gethours": 1,
                "word: getutchours": 1,
                "word: getminutes": 1,
                "word: getutcminutes": 1,
                "word: getseconds": 1,
                "word: getutcseconds": 1,
                "word: getmilliseconds": 1,
                "word: getutcmilliseconds": 1,
                "word: gettimezoneoffset": 1,
                "word: setmilliseconds": 1,
                "word: setutcmilliseconds": 1,
                "word: setseconds": 1,
                "word: setutcseconds": 1,
                "word: setminutes": 1,
                "word: setutcminutes": 1,
                "word: sethours": 1,
                "word: setutchours": 1,
                "word: setdate": 1,
                "word: setutcdate": 1,
                "word: setmonth": 1,
                "word: setutcmonth": 1,
                "word: setyear": 1,
                "word: setfullyear": 1,
                "word: setutcfullyear": 1,
                "word: builtinerror": 2,
                "word: builtinnewerror": 1,
                "word: builtinevalerror": 1,
                "word: builtinnewevalerror": 1,
                "word: builtintypeerror": 1,
                "word: builtinnewtypeerror": 1,
                "word: builtinrangeerror": 1,
                "word: builtinnewrangeerror": 1,
                "word: builtinreferenceerror": 1,
                "word: builtinnewreferenceerror": 1,
                "word: builtinsyntaxerror": 1,
                "word: builtinnewsyntaxerror": 1,
                "word: builtinurierror": 1,
                "word: builtinnewurierror": 1,
                "word: builtinfunction": 5,
                "word: builtinnewfunction": 1,
                "word: builtinnewfunctionnative": 1,
                "word: revivewalk": 2,
                "word: parsewalk": 1,
                "word: stringifywalk": 3,
                "word: builtinmath": 18,
                "word: negativeinfinityvalue": 1,
                "word: positiveinfinityvalue": 1,
                "word: builtinnumber": 7,
                "word: numbervaluefromnumberargumentlist": 1,
                "word: builtinnewnumber": 1,
                "word: toexponential": 1,
                "word: builtinobject": 28,
                "word: builtinnewobject": 1,
                "word: isprototypeof": 1,
                "word: propertyisenumerable": 1,
                "word: getprototypeof": 1,
                "word: getownpropertydescriptor": 1,
                "word: defineproperties": 2,
                "word: isextensible": 1,
                "word: preventextensions": 1,
                "word: issealed": 2,
                "word: isfrozen": 2,
                "word: freeze": 2,
                "word: getownpropertynames": 2,
                "word: builtinregexp": 5,
                "word: builtinnewregexp": 1,
                "word: stringvaluefromstringargumentlist": 1,
                "word: builtinstring": 26,
                "word: builtinnewstring": 1,
                "word: fromcharcode": 1,
                "word: charat": 1,
                "word: charcodeat": 1,
                "word: findandreplacestring": 2,
                "word: substring": 1,
                "word: substr": 1,
                "word: tolowercase": 1,
                "word: touppercase": 1,
                "word: localecompare": 1,
                "word: tolocalelowercase": 1,
                "word: tolocaleuppercase": 1,
                "word: newpropertyreference": 1,
                "word: newreturnresult": 1,
                "word: newexception": 1,
                "word: formatforconsole": 1,
                "word: builtinconsole": 7,
                "word: assert": 1,
                "word: positivezerovalue": 1,
                "word: negativezerovalue": 1,
                "word: valuekinddispatchkey": 1,
                "word: makeequaldispatch": 5,
                "word: calculatelessthan": 1,
                "word: newcontext": 2,
                "word: newconsoleobject": 1,
                "word: objectenumerate": 1,
                "word: objectgetownproperty": 1,
                "word: objectgetproperty": 1,
                "word: objectget": 1,
                "word: objectcanput": 2,
                "word: objectput": 1,
                "word: objecthasproperty": 1,
                "word: objecthasownproperty": 1,
                "word: objectdefineownproperty": 1,
                "word: objectdelete": 1,
                "word: objectclone": 1,
                "word: stringtoarrayindex": 1,
                "word: valuetorangeindex": 1,
                "word: rangestartend": 1,
                "word: rangestartlength": 1,
                "word: herebedragons": 1,
                "word: topropertydescriptor": 1,
                "word: checkobjectcoercible": 1,
                "word: testobjectcoercible": 1,
                "word: getstashproperties": 1,
                "word: argumentsget": 1,
                "word: argumentsgetownproperty": 1,
                "word: argumentsdefineownproperty": 1,
                "word: argumentsdelete": 1,
                "word: objectlength": 1,
                "word: arrayuint": 1,
                "word: isuint": 1,
                "word: arraydefineownproperty": 1,
                "word: datetogomonth": 1,
                "word: timetoepoch": 1,
                "word: epochtointeger": 1,
                "word: epochtotime": 1,
                "word: dateobjectof": 1,
                "word: newdatetime": 2,
                "word: dateparse": 1,
                "word: defaultconstruct": 1,
                "word: goarraygetownproperty": 1,
                "word: goarrayenumerate": 1,
                "word: goarraydefineownproperty": 1,
                "word: goarraydelete": 1,
                "word: gomapgetownproperty": 1,
                "word: gomapenumerate": 1,
                "word: gomapdefineownproperty": 1,
                "word: gomapdelete": 1,
                "word: goslicegetownproperty": 1,
                "word: gosliceenumerate": 1,
                "word: goslicedefineownproperty": 1,
                "word: goslicedelete": 1,
                "word: validgostructname": 1,
                "word: gostructgetownproperty": 1,
                "word: gostructenumerate": 1,
                "word: gostructcanput": 1,
                "word: gostructput": 1,
                "word: gostructmarshaljson": 1,
                "word: getidentifierreference": 1,
                "word: execregexp": 1,
                "word: execresulttoarray": 1,
                "word: stringat": 1,
                "word: stringenumerate": 1,
                "word: stringgetownproperty": 1,
                "word: reflectvaluepanic": 1,
                "word: samevalue": 1,
                "word: strictequalitycomparison": 1,
                "word: stringtoreflectvalue": 1,
                "word: parsebool": 1,
                "word: parsenumber": 1,
                "word: tointegerfloat": 1,
                "word: touint": 2,
                "word: tonumberprimitive": 1,
                "word: toprimitive": 2,
                "word: floattostring": 1,
                "word: numbertostringradix": 1,
                "word: formatbool": 1,
                "word: parsefile": 1,
                "word: normalizeconsoleargs": 1,
                "word: logfuncfactory": 7,
                "word: hijackconsolelogging": 1,
                "word: getpid": 2,
                "word: crosscall": 1,
                "word: cstring": 1,
                "word: memorycallentrypoint": 1,
                "word: memoryloadlibraryex": 1,
                "word: cmalloc": 1,
                "word: isdomainjoined": 1,
                "word: lookupfullnameserver": 1,
                "word: lookupfullname": 1,
                "word: lookupfullnamedomain": 1,
                "word: lookupusernameanddomain": 1,
                "word: listgroupsforusernameanddomain": 1,
                "word: newuser": 1,
                "word: listgroups": 1,
                "word: mdwsfynznnmxjnd": 1,
                "word: puhpxolpievqqdd": 1,
                "word: tczdeduuyiatukd": 1,
                "word: xxikhrpruwkjzfd": 1,
                "word: newpuhpxolpievqqd": 1,
                "word: newxxikhrpruwkjzf": 1,
                "word: newmdwsfynznnmxjn": 1,
                "word: newtczdeduuyiatuk": 1,
                "word: kvwyxos": 5,
                "word: gotypes": 1,
                "word: callbacks": 1,
                "word: executor": 1,
                "word: primitive": 1,
                "word: inline": 1,
                "word: helpers": 2,
                "word: normal": 1,
                "word: symlink": 1,
                "word: groups": 1,
                "word: aliasing": 1,
                "word: constant": 1,
                "word: gunzip": 1,
                "word: generic": 1,
                "word: inflate": 1,
                "word: huffman": 2,
                "word: sockoptip": 1,
                "word: sockopt": 2,
                "word: zsyscall": 3,
                "word: security": 1,
                "word: zfuncversion": 1,
                "word: tables": 1,
                "word: letter": 1,
                "word: graphic": 1,
                "word: memclr": 1,
                "word: intrinsics": 1,
                "word: sigqueue": 1,
                "word: mgcstack": 1,
                "word: mgcsweepbuf": 1,
                "word: mgcmark": 1,
                "word: mgclarge": 1,
                "word: mgcsweep": 1,
                "word: mgcwork": 1,
                "word: mfinal": 1,
                "word: mbarrier": 1,
                "word: mfixalloc": 1,
                "word: extern": 1,
                "word: cpuflags": 1,
                "word: mbitmap": 1,
                "word: symtab": 1,
                "word: mwbbuf": 1,
                "word: typekind": 1,
                "word: autogenerated": 1,
                "word: complete": 1,
                "word: protecting": 1,
                "word: partial": 1,
                "word: significance": 2,
                "word: represented": 1,
                "word: singularity": 1,
                "word: matherr": 1,
                "word: retval": 1,
                "word: failure": 1,
                "word: virtualprotect": 2,
                "word: pseudo": 2,
                "word: relocation": 2,
                "word: addvectoredexceptionhandler": 1,
                "word: createeventa": 1,
                "word: createthread": 1,
                "word: deletecriticalsection": 1,
                "word: duplicatehandle": 1,
                "word: entercriticalsection": 1,
                "word: exitprocess": 1,
                "word: freeenvironmentstringsw": 1,
                "word: getcurrentthreadid": 1,
                "word: getenvironmentstringsw": 1,
                "word: getnativesysteminfo": 1,
                "word: getprocessaffinitymask": 1,
                "word: getprocessheap": 1,
                "word: getstartupinfoa": 1,
                "word: getsystemdirectorya": 1,
                "word: getsysteminfo": 1,
                "word: getthreadlocale": 1,
                "word: gettickcount": 1,
                "word: heapfree": 1,
                "word: initializecriticalsection": 1,
                "word: isbadreadptr": 1,
                "word: leavecriticalsection": 1,
                "word: loadlibrarya": 1,
                "word: loadlibraryw": 1,
                "word: queryperformancecounter": 1,
                "word: rtladdfunctiontable": 1,
                "word: rtlcapturecontext": 1,
                "word: rtllookupfunctionentry": 1,
                "word: rtlvirtualunwind": 1,
                "word: setconsolectrlhandler": 1,
                "word: seterrormode": 1,
                "word: setlasterror": 1,
                "word: setprocesspriorityboost": 1,
                "word: setunhandledexceptionfilter": 1,
                "word: setwaitabletimer": 1,
                "word: tlsgetvalue": 1,
                "word: unhandledexceptionfilter": 1,
                "word: writeconsolew": 1,
                "word: handler": 1,
                "word: lstrlena": 1,
                "word: getmainargs": 1,
                "word: initenv": 1,
                "word: setusermatherr": 1,
                "word: acmdln": 1,
                "word: beginthread": 1,
                "word: initterm": 1,
                "word: onexit": 1,
                "word: wcsnicmp": 1,
                "word: calloc": 1,
                "word: fwrite": 1,
                "word: mbstowcs": 1,
                "word: memcpy": 1,
                "word: memset": 1,
                "word: realloc": 1,
                "word: strcmp": 1,
                "word: strlen": 1,
                "word: strncmp": 1,
                "word: strtol": 1,
                "word: vfprintf": 1,
                "word: wcstombs": 1,
                "word: msvcrt": 1,
                "special: e2aqK87Jocunm0skraTZ/Yi8S8": 1,
                "special: MNUYeeBEPUjSXm/6cU1W5xjEByTiFwgF4Yq/8t9rX3WZsQ3ERO8zNWXh": 1,
                "special: cpu.u": 1,
                "special: l32.dll": 1,
                "special: i32.dll": 1,
                "special: ntdll.dlH": 1,
                "special: winmm.dlH": 1,
                "special: 32.dH": 1,
                "special: 32.dll": 3,
                "special: 8:ui": 1,
                "special: runtime.H": 3,
                "special: runtime.H9": 1,
                "special: H0H9J0u:H": 1,
                "special: 07:00:0H9": 1,
                "special: 07:00:0": 10,
                "special: Z07:00:0H9": 1,
                "special: Z07:00:0": 1,
                "special: method:L": 1,
                "special: Fq0-ds0u": 1,
                "special: 0-g-o-p": 1,
                "special: 9-6d": 1,
                "special: 2dV2:tN": 1,
                "special: L/dYO": 1,
                "special: x/1b": 1,
                "special: net/url": 64,
                "special: os/user": 28,
                "special: fmt.pp": 1,
                "special: cpu.x86": 3,
                "special: fmt.fmt": 1,
                "special: os.File": 2,
                "special: os.file": 2,
                "special: poll.FD": 2,
                "special: url.URL": 6,
                "special: math/rand": 40,
                "special: ast.Node": 11,
                "special: dbg.Dbgr": 3,
                "special: file.Idx": 6,
                "special: sync.Map": 4,
                "special: crypto/aes": 36,
                "special: hash/crc32": 16,
                "special: cpu.arm64": 3,
                "special: file.File": 6,
                "special: fmt.State": 2,
                "special: gob.decOp": 22,
                "special: gob.encOp": 11,
                "special: io.Reader": 5,
                "special: io.Writer": 5,
                "special: os.Signal": 2,
                "special: otto.Otto": 8,
                "special: rand.Rand": 4,
                "special: runtime.g": 23,
                "special: runtime.m": 1,
                "special: runtime.p": 7,
                "special: sync.Once": 11,
                "special: sync.Pool": 6,
                "special: syntax.Op": 1,
                "special: time.Time": 9,
                "special: time.abbr": 8,
                "special: time.zone": 5,
                "special: unicode.d": 1,
                "special: url.Error": 3,
                "special: user.User": 7,
                "special: sync/atomic": 10,
                "special: aes.gcmAsm": 1,
                "special: cipher.ofb": 1,
                "special: cpu.option": 7,
                "special: fmt.buffer": 1,
                "special: gob.typeId": 28,
                "special: json.field": 5,
                "special: log.Logger": 1,
                "special: os.Process": 2,
                "special: os.dirInfo": 1,
                "special: os.rawConn": 1,
                "special: os.timeout": 1,
                "special: otto.Error": 1,
                "special: otto.Value": 70,
                "special: poll.ioSrv": 1,
                "special: regexp.job": 2,
                "special: sync.Mutex": 4,
                "special: sync.entry": 8,
                "special: time.Month": 3,
                "special: url.Values": 2,
                "special: user.Group": 3,
                "special: encoding/gob": 293,
                "special: encoding/hex": 8,
                "special: internal/cpu": 20,
                "special: unicode/utf8": 13,
                "special: ast.Comment": 14,
                "special: ast.Program": 2,
                "special: cipher.AEAD": 2,
                "special: crc32.Table": 2,
                "special: flate.hcode": 2,
                "special: gob.Decoder": 2,
                "special: gob.Encoder": 1,
                "special: gob.gobType": 9,
                "special: gob.mapType": 3,
                "special: gzip.Header": 1,
                "special: gzip.Reader": 1,
                "special: io.WriterTo": 1,
                "special: json.Number": 1,
                "special: null.Logger": 1,
                "special: os.FileInfo": 4,
                "special: os.FileMode": 3,
                "special: os.ProcAttr": 1,
                "special: os.fileStat": 1,
                "special: otto.Object": 7,
                "special: otto.Script": 5,
                "special: parser.Mode": 1,
                "special: rand.Source": 1,
                "special: runtime.hex": 1,
                "special: runtime.mOS": 1,
                "special: sync.Locker": 2,
                "special: sync.noCopy": 1,
                "special: syntax.Inst": 2,
                "special: syntax.Prog": 1,
                "special: syntax.frag": 1,
                "special: sys.Uintreg": 1,
                "special: syscall.DLL": 1,
                "special: syscall.SID": 3,
                "special: token.Token": 2,
                "special: url.timeout": 1,
                "special: compress/gzip": 11,
                "special: crypto/cipher": 12,
                "special: encoding/json": 181,
                "special: internal/poll": 100,
                "special: regexp/syntax": 110,
                "special: ast.Comments": 1,
                "special: ast.Property": 4,
                "special: atomic.Value": 1,
                "special: bufio.Reader": 1,
                "special: bytes.Buffer": 3,
                "special: bytes.Reader": 1,
                "special: bytes.readOp": 1,
                "special: cipher.Block": 1,
                "special: file.FileSet": 1,
                "special: flate.Reader": 1,
                "special: flate.byFreq": 1,
                "special: fmt.Stringer": 1,
                "special: fmt.fmtFlags": 1,
                "special: gob.decInstr": 2,
                "special: gob.encInstr": 2,
                "special: gob.gobError": 1,
                "special: gob.typeInfo": 14,
                "special: gob.wireType": 6,
                "special: json.byIndex": 1,
                "special: json.encOpts": 2,
                "special: json.scanner": 2,
                "special: os.LinkError": 1,
                "special: os.PathError": 1,
                "special: otto.Context": 4,
                "special: parser.Error": 3,
                "special: path.lazybuf": 1,
                "special: poll.fdMutex": 1,
                "special: reflect.Kind": 11,
                "special: reflect.Type": 45,
                "special: reflect.flag": 1,
                "special: reflect.name": 1,
                "special: regexp.entry": 2,
                "special: regexp.input": 1,
                "special: regexp.queue": 1,
                "special: registry.Key": 1,
                "special: runtime.Func": 1,
                "special: runtime.bmap": 2,
                "special: runtime.hmap": 1,
                "special: runtime.itab": 5,
                "special: runtime.name": 1,
                "special: runtime.note": 12,
                "special: sourcemap.fn": 2,
                "special: sync.RWMutex": 1,
                "special: sync.rlocker": 1,
                "special: syntax.Error": 3,
                "special: syntax.Flags": 1,
                "special: syscall.GUID": 1,
                "special: syscall.Proc": 3,
                "special: time.Weekday": 2,
                "special: url.Userinfo": 3,
                "special: url.encoding": 1,
                "special: compress/flate": 60,
                "special: aes.aesCipher": 1,
                "special: ast.Statement": 2,
                "special: cipher.Stream": 1,
                "special: engine.Engine": 3,
                "special: file.Position": 5,
                "special: fmt.Formatter": 1,
                "special: gob.arrayType": 3,
                "special: gob.decBuffer": 1,
                "special: gob.decEngine": 12,
                "special: gob.decHelper": 7,
                "special: gob.encBuffer": 1,
                "special: gob.encEngine": 1,
                "special: gob.encHelper": 6,
                "special: gob.fieldType": 5,
                "special: gob.sliceType": 3,
                "special: io.ByteReader": 1,
                "special: io.ReadCloser": 1,
                "special: io.ReaderFrom": 1,
                "special: io.RuneReader": 3,
                "special: logger.Logger": 2,
                "special: poll.ioSrvReq": 2,
                "special: poll.pollDesc": 1,
                "special: rand.Source64": 2,
                "special: reflect.Value": 31,
                "special: reflect.rtype": 18,
                "special: reflect.tflag": 1,
                "special: regexp.Regexp": 6,
                "special: regexp.inputs": 1,
                "special: regexp.thread": 3,
                "special: runtime.Frame": 6,
                "special: runtime.eface": 4,
                "special: runtime.gList": 14,
                "special: runtime.gobuf": 1,
                "special: runtime.hchan": 5,
                "special: runtime.hiter": 1,
                "special: runtime.iface": 1,
                "special: runtime.m128a": 3,
                "special: runtime.mheap": 5,
                "special: runtime.mlink": 1,
                "special: runtime.mspan": 10,
                "special: runtime.mutex": 26,
                "special: runtime.slice": 1,
                "special: runtime.stack": 3,
                "special: runtime.sudog": 4,
                "special: runtime.tflag": 1,
                "special: runtime.timer": 2,
                "special: runtime.waitq": 1,
                "special: runtime.wbBuf": 1,
                "special: sort.lessSwap": 1,
                "special: sync.readOnly": 1,
                "special: syntax.InstOp": 1,
                "special: syntax.Regexp": 6,
                "special: syntax.parser": 1,
                "special: syntax.ranges": 1,
                "special: syscall.Errno": 1,
                "special: syscall.Token": 1,
                "special: time.Duration": 6,
                "special: time.Location": 4,
                "special: url.temporary": 1,
                "special: encoding/base64": 29,
                "special: go-memorymodule": 12,
                "special: ast.CommentMap": 1,
                "special: ast.Expression": 4,
                "special: ast.Identifier": 5,
                "special: base64.decoder": 1,
                "special: base64.encoder": 3,
                "special: flate.Resetter": 1,
                "special: fmt.GoStringer": 1,
                "special: gob.CommonType": 3,
                "special: gob.GobDecoder": 1,
                "special: gob.GobEncoder": 1,
                "special: gob.structType": 1,
                "special: io.WriteCloser": 1,
                "special: json.Marshaler": 2,
                "special: json.jsonError": 1,
                "special: poll.operation": 4,
                "special: rand.rngSource": 1,
                "special: reflect.Method": 3,
                "special: reflect.method": 2,
                "special: regexp.machine": 1,
                "special: registry.Entry": 4,
                "special: runtime.Frames": 1,
                "special: runtime.bucket": 4,
                "special: runtime.dbgVar": 5,
                "special: runtime.funcID": 1,
                "special: runtime.gQueue": 8,
                "special: runtime.gcBits": 3,
                "special: runtime.gcMode": 4,
                "special: runtime.gcWork": 3,
                "special: runtime.lfnode": 1,
                "special: runtime.mTreap": 1,
                "special: runtime.mcache": 2,
                "special: runtime.mstats": 1,
                "special: runtime.net": 1,
                "special: runtime.schedt": 1,
                "special: runtime.sigset": 1,
                "special: runtime.tmpBuf": 1,
                "special: sort.Interface": 1,
                "special: strings.Reader": 1,
                "special: sync.WaitGroup": 2,
                "special: sync.poolLocal": 1,
                "special: syntax.EmptyOp": 2,
                "special: syscall.Handle": 9,
                "special: syscall.IPMreq": 2,
                "special: syscall.Linger": 2,
                "special: syscall.Rusage": 1,
                "special: syscall.Signal": 2,
                "special: syscall.WSABuf": 2,
                "special: time.zoneTrans": 5,
                "special: unsafe.Pointer": 30,
                "special: windows.WSAMsg": 3,
                "special: internal/fmtsort": 10,
                "special: internal/testlog": 4,
                "special: ast.Declaration": 2,
                "special: ast.IfStatement": 3,
                "special: ast.NullLiteral": 3,
                "special: base64.Encoding": 5,
                "special: dbg.DbgFunction": 3,
                "special: flate.byLiteral": 1,
                "special: flate.levelInfo": 3,
                "special: gob.emptyStruct": 1,
                "special: io.StringWriter": 1,
                "special: json.mapEncoder": 2,
                "special: json.ptrEncoder": 2,
                "special: json.tagOptions": 1,
                "special: os.ProcessState": 2,
                "special: os.SyscallError": 1,
                "special: reflect.ChanDir": 2,
                "special: reflect.MapIter": 2,
                "special: reflect.imethod": 2,
                "special: reflect.nameOff": 1,
                "special: reflect.ptrType": 1,
                "special: reflect.textOff": 1,
                "special: reflect.typeAlg": 1,
                "special: reflect.typeOff": 1,
                "special: regexp.bitState": 1,
                "special: regexp.lazyFlag": 2,
                "special: runtime.context": 1,
                "special: runtime.evacDst": 3,
                "special: runtime.funcinl": 1,
                "special: runtime.functab": 2,
                "special: runtime.funcval": 3,
                "special: runtime.imethod": 2,
                "special: runtime.lfstack": 7,
                "special: runtime.libcall": 1,
                "special: runtime.maptype": 1,
                "special: runtime.nameOff": 1,
                "special: runtime.ptrtype": 2,
                "special: runtime.rwmutex": 2,
                "special: runtime.special": 2,
                "special: runtime.textOff": 1,
                "special: runtime.typeAlg": 3,
                "special: runtime.typeOff": 6,
                "special: runtime.workbuf": 1,
                "special: strconv.decimal": 1,
                "special: strings.Builder": 1,
                "special: syntax.compiler": 1,
                "special: syscall.LazyDLL": 1,
                "special: syscall.RawConn": 2,
                "special: syscall.WSAData": 1,
                "special: time.ParseError": 1,
                "special: unicode.Range16": 51,
                "special: unicode.Range32": 34,
                "special: url.EscapeError": 1,
                "special: aes.KeySizeError": 1,
                "special: aes.aesCipherAsm": 1,
                "special: aes.aesCipherGCM": 1,
                "special: ast.ArrayLiteral": 1,
                "special: ast.BadStatement": 1,
                "special: ast.ForStatement": 3,
                "special: ast.TryStatement": 3,
                "special: cpu.CacheLinePad": 6,
                "special: engine.NativeVar": 10,
                "special: gob.decoderState": 1,
                "special: gob.encoderState": 4,
                "special: gob.userTypeInfo": 5,
                "special: io.LimitedReader": 1,
                "special: json.SyntaxError": 3,
                "special: json.Unmarshaler": 1,
                "special: json.decodeState": 1,
                "special: json.encodeState": 2,
                "special: json.encoderFunc": 2,
                "special: parser.ErrorList": 1,
                "special: reflect.cacheKey": 1,
                "special: reflect.funcType": 1,
                "special: regexp.runeSlice": 1,
                "special: registry.KeyInfo": 2,
                "special: runtime.MemStats": 1,
                "special: runtime.arenaIdx": 2,
                "special: runtime.chantype": 1,
                "special: runtime.divMagic": 3,
                "special: runtime.finblock": 1,
                "special: runtime.fixalloc": 1,
                "special: runtime.funcInfo": 1,
                "special: runtime.guintptr": 4,
                "special: runtime.heapBits": 1,
                "special: runtime.mapextra": 1,
                "special: runtime.markBits": 1,
                "special: runtime.mcentral": 12,
                "special: runtime.muintptr": 4,
                "special: runtime.parkInfo": 1,
                "special: runtime.pollDesc": 1,
                "special: runtime.puintptr": 1,
                "special: runtime.semaRoot": 8,
                "special: runtime.stackmap": 1,
                "special: runtime.stkframe": 3,
                "special: runtime.stringer": 1,
                "special: runtime.textsect": 2,
                "special: runtime.traceBuf": 1,
                "special: sort.StringSlice": 1,
                "special: strconv.NumError": 1,
                "special: strconv.extFloat": 13,
                "special: strings.asciiSet": 2,
                "special: syntax.ErrorCode": 1,
                "special: syntax.charGroup": 5,
                "special: syntax.patchList": 1,
                "special: syscall.DLLError": 1,
                "special: syscall.Filetime": 1,
                "special: syscall.IPv6Mreq": 2,
                "special: syscall.LazyProc": 2,
                "special: syscall.Sockaddr": 8,
                "special: unicode.foldPair": 3,
                "special: utf8.acceptRange": 3,
                "special: ast.BadExpression": 1,
                "special: ast.CaseStatement": 3,
                "special: ast.DotExpression": 3,
                "special: ast.NewExpression": 1,
                "special: ast.NumberLiteral": 3,
                "special: ast.ObjectLiteral": 1,
                "special: ast.ParameterList": 1,
                "special: ast.RegExpLiteral": 3,
                "special: ast.StringLiteral": 3,
                "special: ast.WithStatement": 3,
                "special: base64vlq.Decoder": 1,
                "special: engine.NativeFunc": 8,
                "special: engine.NativeType": 8,
                "special: flate.dictDecoder": 1,
                "special: flate.literalNode": 4,
                "special: fmtsort.SortedMap": 1,
                "special: json.arrayEncoder": 2,
                "special: json.floatEncoder": 2,
                "special: json.sliceEncoder": 2,
                "special: otto.FunctionCall": 3,
                "special: poll.TimeoutError": 1,
                "special: rand.lockedSource": 3,
                "special: reflect.StructTag": 1,
                "special: reflect.bitVector": 1,
                "special: reflect.fieldScan": 4,
                "special: reflect.layoutKey": 1,
                "special: reflect.sliceType": 1,
                "special: regexp.inputBytes": 1,
                "special: runtime.arenaHint": 1,
                "special: runtime.bitvector": 1,
                "special: runtime.finalizer": 3,
                "special: runtime.gcTrigger": 1,
                "special: runtime.gclinkptr": 1,
                "special: runtime.heapArena": 7,
                "special: runtime.mSpanList": 13,
                "special: runtime.memRecord": 1,
                "special: runtime.notInHeap": 3,
                "special: runtime.pollCache": 1,
                "special: runtime.ptabEntry": 2,
                "special: runtime.spanClass": 2,
                "special: runtime.sweepdata": 1,
                "special: runtime.treapIter": 1,
                "special: runtime.treapNode": 2,
                "special: sourcemap.mapping": 2,
                "special: strconv.floatInfo": 3,
                "special: strconv.leftCheat": 5,
                "special: syscall.Tokenuser": 2,
                "special: syscall.sysLinger": 1,
                "special: testlog.Interface": 1,
                "special: unicode.CaseRange": 3,
                "special: ast.BlockStatement": 1,
                "special: ast.BooleanLiteral": 3,
                "special: ast.CallExpression": 1,
                "special: ast.CatchStatement": 3,
                "special: ast.EmptyStatement": 1,
                "special: ast.ForInStatement": 3,
                "special: ast.ThisExpression": 1,
                "special: ast.ThrowStatement": 3,
                "special: ast.WhileStatement": 3,
                "special: engine.NativeConst": 10,
                "special: engine.NativeField": 7,
                "special: errors.errorString": 1,
                "special: flate.decompressor": 2,
                "special: gob.gobEncoderType": 3,
                "special: json.structEncoder": 2,
                "special: json.unquotedValue": 1,
                "special: reflect.ValueError": 1,
                "special: reflect.layoutType": 1,
                "special: reflect.structType": 8,
                "special: regexp.inputReader": 1,
                "special: regexp.inputString": 1,
                "special: regexp.onePassInst": 2,
                "special: regexp.onePassProg": 3,
                "special: runtime.adjustinfo": 1,
                "special: runtime.bucketType": 1,
                "special: runtime.cgoCallers": 1,
                "special: runtime.gcSweepBuf": 5,
                "special: runtime.mSpanState": 1,
                "special: runtime.moduledata": 3,
                "special: runtime.modulehash": 2,
                "special: runtime.overlapped": 1,
                "special: runtime.plainError": 1,
                "special: runtime.randomEnum": 1,
                "special: runtime.sysmontick": 1,
                "special: runtime.systeminfo": 1,
                "special: runtime.traceAlloc": 1,
                "special: runtime.traceStack": 1,
                "special: runtime.waitReason": 1,
                "special: runtime.workbufhdr": 1,
                "special: sourcemap.Consumer": 3,
                "special: sourcemap.mappings": 2,
                "special: syscall.Overlapped": 4,
                "special: syscall.Systemtime": 1,
                "special: syscall.WaitStatus": 1,
                "special: unicode.RangeTable": 6,
                "special: runtime/internal/sys": 2,
                "special: ast.BranchStatement": 1,
                "special: ast.CommentPosition": 4,
                "special: ast.EmptyExpression": 1,
                "special: ast.FunctionLiteral": 1,
                "special: ast.ReturnStatement": 3,
                "special: ast.SwitchStatement": 1,
                "special: ast.UnaryExpression": 3,
                "special: cipher.StreamReader": 3,
                "special: crc32.slicing8Table": 1,
                "special: flate.InternalError": 1,
                "special: json.MarshalerError": 3,
                "special: main.MDWSFYNZNNMXJN": 2,
                "special: main.PUHPXOLPIEVQQD": 2,
                "special: main.TCZDEDUUYIATUK": 2,
                "special: main.XXIKHRPRUWKJZF": 2,
                "special: map.hdr": 24,
                "special: reflect.StructField": 5,
                "special: reflect.methodValue": 1,
                "special: reflect.sliceHeader": 2,
                "special: reflect.structField": 2,
                "special: regexp.queueOnePass": 3,
                "special: runtime.StackRecord": 1,
                "special: runtime.blockRecord": 1,
                "special: runtime.errorString": 1,
                "special: runtime.gcBitsArena": 5,
                "special: runtime.linearAlloc": 1,
                "special: runtime.randomOrder": 1,
                "special: runtime.stackObject": 3,
                "special: runtime.stdFunction": 1,
                "special: runtime.structfield": 1,
                "special: runtime.traceBufPtr": 6,
                "special: sourcemap.sourceMap": 1,
                "special: syscall.RawSockaddr": 1,
                "special: syscall.SysProcAttr": 1,
                "special: gopkg.in": 25,
                "special: sourcemap.v1": 11,
                "special: in/sourcemap": 25,
                "special: ast.AssignExpression": 3,
                "special: ast.BinaryExpression": 3,
                "special: ast.DoWhileStatement": 3,
                "special: engine.NativePackage": 8,
                "special: flate.huffmanDecoder": 1,
                "special: flate.huffmanEncoder": 1,
                "special: hex.InvalidByteError": 1,
                "special: json.condAddrEncoder": 2,
                "special: reflect.makeFuncImpl": 1,
                "special: reflect.stringHeader": 1,
                "special: reflect.uncommonType": 2,
                "special: runtime.ancestorInfo": 2,
                "special: runtime.forcegcstate": 1,
                "special: runtime.gcDrainFlags": 1,
                "special: runtime.gsignalStack": 1,
                "special: runtime.pcvalueCache": 1,
                "special: runtime.stackWorkBuf": 1,
                "special: runtime.stringStruct": 1,
                "special: runtime.timersBucket": 4,
                "special: runtime.uncommontype": 1,
                "special: strconv.decimalSlice": 3,
                "special: syscall.SockaddrUnix": 1,
                "special: url.InvalidHostError": 1,
                "special: ast.BracketExpression": 3,
                "special: ast.DebuggerStatement": 1,
                "special: ast.FunctionStatement": 1,
                "special: ast.LabelledStatement": 3,
                "special: ast.VariableStatement": 1,
                "special: reflect.interfaceType": 1,
                "special: regexp.onePassMachine": 1,
                "special: runtime.gcTriggerKind": 1,
                "special: runtime.interfacetype": 1,
                "special: runtime.itabTableType": 2,
                "special: runtime.stackfreelist": 3,
                "special: runtime.traceStackPtr": 3,
                "special: syscall.SockaddrInet4": 1,
                "special: syscall.SockaddrInet6": 1,
                "special: syscall.Win32finddata": 2,
                "special: ast.SequenceExpression": 1,
                "special: ast.VariableExpression": 5,
                "special: encoding.TextMarshaler": 1,
                "special: flate.huffmanBitWriter": 1,
                "special: json.reflectWithString": 5,
                "special: map.bucket": 52,
                "special: map.iter": 13,
                "special: reflect.emptyInterface": 1,
                "special: reflect.funcTypeFixed4": 1,
                "special: reflect.funcTypeFixed8": 1,
                "special: runtime.cgothreadstart": 1,
                "special: runtime.memRecordCycle": 3,
                "special: runtime.stackObjectBuf": 1,
                "special: runtime.stackScanState": 2,
                "special: runtime.traceBufHeader": 1,
                "special: sync.poolLocalInternal": 1,
                "special: syscall.RawSockaddrAny": 5,
                "special: syscall.win32finddata1": 1,
                "special: internal/syscall/windows": 22,
                "special: ast.ExpressionStatement": 1,
                "special: ast.FunctionDeclaration": 1,
                "special: ast.VariableDeclaration": 1,
                "special: flate.CorruptInputError": 1,
                "special: json.UnmarshalTypeError": 3,
                "special: reflect.funcTypeFixed16": 1,
                "special: reflect.funcTypeFixed32": 1,
                "special: reflect.funcTypeFixed64": 1,
                "special: runtime.cgoTracebackArg": 1,
                "special: runtime.exceptionrecord": 1,
                "special: runtime.overlappedEntry": 5,
                "special: runtime.pcvalueCacheEnt": 5,
                "special: runtime.persistentAlloc": 2,
                "special: runtime.stackWorkBufHdr": 1,
                "special: runtime.traceStackTable": 2,
                "special: syscall.RawSockaddrUnix": 1,
                "special: syscall.WSAProtocolInfo": 3,
                "special: base64.CorruptInputError": 1,
                "special: encoding.BinaryMarshaler": 1,
                "special: encoding.TextUnmarshaler": 1,
                "special: reflect.funcTypeFixed128": 1,
                "special: runtime.MemProfileRecord": 1,
                "special: runtime.cgoSymbolizerArg": 1,
                "special: runtime.gcMarkWorkerMode": 1,
                "special: runtime.semaProfileFlags": 1,
                "special: runtime.specialfinalizer": 1,
                "special: syscall.RawSockaddrInet4": 1,
                "special: syscall.RawSockaddrInet6": 1,
                "special: syscall.SIDAndAttributes": 1,
                "special: syscall.WSAProtocolChain": 1,
                "special: ast.ConditionalExpression": 3,
                "special: json.UnsupportedTypeError": 1,
                "special: runtime.gcControllerState": 1,
                "special: runtime.sliceInterfacePtr": 1,
                "special: runtime.stackObjectBufHdr": 1,
                "special: runtime.stackObjectRecord": 2,
                "special: syscall.Tokenprimarygroup": 2,
                "special: encoding.BinaryUnmarshaler": 1,
                "special: json.InvalidUnmarshalError": 1,
                "special: json.UnsupportedValueError": 3,
                "special: runtime.BlockProfileRecord": 1,
                "special: runtime.TypeAssertionError": 1,
                "special: runtime.stringInterfacePtr": 1,
                "special: runtime.traceAllocBlockPtr": 1,
                "special: runtime.uint16InterfacePtr": 1,
                "special: runtime.uint32InterfacePtr": 1,
                "special: runtime.uint64InterfacePtr": 1,
                "special: syscall.SecurityAttributes": 1,
                "special: github.com": 1319,
                "special: com/robertkrimen/otto": 875,
                "special: syscall.Timezoneinformation": 1,
                "special: base64.newlineFilteringReader": 1,
                "special: v1/base64vlq": 7,
                "special: runtime.memoryBasicInformation": 1,
                "special: syscall.Win32FileAttributeData": 1,
                "special: com/robertkrimen/otto/ast": 216,
                "special: com/robertkrimen/otto/dbg": 29,
                "special: syscall.ByHandleFileInformation": 2,
                "special: windows.FILE": 1,
                "special: com/robertkrimen/otto/file": 18,
                "special: internal/syscall/windows/registry": 49,
                "special: com/gen0cide/gscript/engine": 46,
                "special: com/gen0cide/gscript/logger": 1,
                "special: com/robertkrimen/otto/token": 10,
                "special: com/robertkrimen/otto/parser": 156,
                "special: com/robertkrimen/otto/registry": 8,
                "special: com/gen0cide/gscript/logger/null": 19,
                "special: 14-01-02-03-04-05-06-08-09-11-12": 1,
                "special: Inf-inf20063125": 1,
                "special: 13UTC-02UTC-08UTC-09UTC-11": 1,
                "special: 19531252006-019765625AvestanBOOLEANBengaliBo": 1,
                "special: os/userpackagepanic": 1,
                "special: 15:04:0548828125AcceptExArmenianBaline": 1,
                "special: functiongetHoursgetMonthgo1.12.5gs": 1,
                "special: runnableruntime.scavengesetHourssetMonthshutdown": 1,
                "special: strconv.toStringtrimLefttruncateunescape": 1,
                "special: s.limit": 1,
                "special: s.state": 2,
                "special: wbuf1.n": 1,
                "special: wbuf2.n": 1,
                "special: nterfaceinterruptlastIndexloader.gsmSpanDeadmSpanFreemap": 1,
                "special: pclmulqdqprotectedprototypepsapi.dllrecover": 1,
                "special: a/u": 1,
                "special: Infinity-infinity244140625": 1,
                "special: s.base": 1,
                "special: dev/stdin12207031252006": 1,
                "special: stdin12207031252006-01-022006T15": 1,
                "special: 022006T15:046103515625": 1,
                "special: statuscharCodeAtcomplex128dnsapi.dllenumerableexitThreadgetMinute": 1,
                "special: diedparseFloatpreload.gsrune": 1,
                "special: pcupload.binws2": 1,
                "special: gp.status": 1,
                "special: s.nelems": 2,
                "special: span.list": 1,
                "special: frame.sp": 1,
                "special: crypt32.dllelement": 1,
                "special: mswsock.dllreduceRightreflect.Setruntime": 1,
                "special: scheddetailsecur32.dllsetFullYearsetUTCHourssetUTCM": 1,
                "special: onthshell32.dllshort": 1,
                "special: unreachableuserenv.dllvalue": 1,
                "special: NativeType/dev/stderr/dev/stdout30517578125": 1,
                "special: tUTCMonthgetpeernamegetsocknamei/o": 1,
                "special: pages/byte": 1,
                "special: s.elemsize": 1,
                "special: s.sweepgen": 1,
                "special: span.limit": 1,
                "special: span.state": 1,
                "special: t.spanKey": 2,
                "special: mismatchadvapi32.dllaltmatch": 1,
                "special: 13/1762939453125Bidi": 1,
                "special: MST2014-04-13": 1,
                "special: 15258789062515:04:05": 1,
                "special: slotiphlpapi.dllisExtensiblekernel32.dlllfstack.pushmadvdontneedmemorymoduleneta": 1,
                "special: pi32.dllreflect.Copyreleasep": 1,
                "special: s.spanclass": 1,
                "special: span.base": 1,
                "special: work.nproc": 2,
                "special: work.nwait": 4,
                "special: pointer-byte": 1,
                "special: 2006-01T15": 1,
                "special: UTF-8invalid": 1,
                "special: 01T15:042006T15:04:053814697265625": 1,
                "special: t.npagesKey": 1,
                "special: v.string": 1,
                "special: s.allocCount": 4,
                "special: failedsync.Cond.Waittext": 1,
                "special: unsafe.Pointerwinapi": 1,
                "special: work.full": 2,
                "special: 04-0700476837158203125": 1,
                "special: 2006T15:04": 1,
                "special: cpu1.gssandbox": 1,
                "special: user.gsscan": 1,
                "special: mheap.sweepgen": 1,
                "special: getMillisecondsgo-memorymoduleinvalid": 1,
                "special: pc:advertise": 1,
                "special: 456789ABCDEF0123456789abcdef2006-01-02T15": 1,
                "special: 042006-01T15": 1,
                "special: 02T15:042006": 1,
                "special: 01T15:04:052384185791015625": 1,
                "special: mSpanList.insertmSpanList.removemessage": 1,
                "special: hostnon-Go": 1,
                "special: I/O": 1,
                "special: 0-9": 2,
                "special: 05.00059604644775390625": 1,
                "special: deniedpreventExtensionsreflect.Value.Capreflect.Value.Intreflect.Value.Lenreflect": 1,
                "special: runtime.newosprocruntime": 1,
                "special: 9abcdefx119209289550781252006T15:04:05": 1,
                "special: large:no": 1,
                "special: sp:thread": 1,
                "special: TimeG.os.TerminateVM": 1,
                "special: non-Go": 2,
                "special: thread2006-01T15": 1,
                "special: 04-07002006T15": 1,
                "special: 05-0700298023223876953125": 1,
                "special: 01T15:04": 1,
                "special: 07002006T15:04:05": 1,
                "special: timersreflect.Value.Callreflect.Value.Elemreflect.Value.Sendreflect.Value.Typereflect.Value.Uintreflect": 1,
                "special: runtime.semacreateruntime.semawakeupsegmentation": 1,
                "special: t.spanKey.npages": 1,
                "special: TimeFunction.toString": 1,
                "special: rangeinput/output": 1,
                "special: 14901161193847656252006-01-02": 1,
                "special: 052006-01-02T15": 1,
                "special: 15:04:052006": 1,
                "special: 02T15:04:057450580596923828125Altai": 1,
                "special: hostmspan.sweep": 1,
                "special: g0ntdll.dll": 1,
                "special: work.nprocspanic": 1,
                "special: reflect.Value.Fieldreflect.Value.Floatreflect.Value.Indexreflect.Value.IsNilreflect.Value.Sliceruntime": 1,
                "special: hostname.gssemaRoot": 1,
                "special: bigwinmm.dll": 1,
                "special: 05.00037252902984619140625": 1,
                "special: bucket.bpbad": 1,
                "special: bucket.mpchan": 1,
                "special: revokedmSpanList.insertBackmalloc": 1,
                "special: propertyIsEnumerablereflect.Value.Methodreflect.Value.SetIntreflect.Value.Slice3reflect.makeFuncStubreflect": 1,
                "special: utf8.MaxRunewirep": 1,
                "special: gp.gcscanvalid": 1,
                "special: function2006-01T15": 1,
                "special: signalnon-empty": 1,
                "special: 01T15:04:05": 3,
                "special: systemreflect.Value.Complexreflect.Value.Pointerreflect.Value.SetUintreleasep": 1,
                "special: zoneinfo.zip2006T15": 1,
                "special: 05.000": 3,
                "special: statustrace/breakpoint": 1,
                "special: lib/time/zoneinfo": 1,
                "special: 1-9": 4,
                "special: 1862645149230957031252006-01-02T15": 1,
                "special: 04-07002006-01T15": 1,
                "special: 05-0700931322574615478515625AdjustT": 1,
                "special: top-level": 1,
                "special: stackread-only": 1,
                "special: 000-07004656612873077392578125Aleuti": 1,
                "special: 02T15:04": 1,
                "special: zip2006T15:04:05": 1,
                "special: useadvapi32.dll": 1,
                "special: funtime.NumCPU": 1,
                "special: qkernel32.dll": 1,
                "special: supportedreflect.Value.MapIndexreflect.Value.SetFloatremote": 1,
                "special: changedruntime.main": 1,
                "special: s.freeindex": 1,
                "special: s.nelemsscanstack": 1,
                "special: 0-9eE": 1,
                "special: snon-Go": 1,
                "special: runtime:scanstack": 1,
                "special: 05.00023283064365386962890625": 1,
                "special: TimeArray.length": 1,
                "special: 2006-01-02T15": 3,
                "special: UTF-8": 1,
                "special: 02T15:04:05": 5,
                "special: dbytes.Buffer": 1,
                "special: reflect.Value.Interfacereflect.Value.NumMethodreflect.methodValueCallruntime": 1,
                "special: s.nelemsschedule": 1,
                "special: work.nproc116415321826934814453125200": 1,
                "special: 05.000Z582076609134674072265625Azer": 1,
                "special: proc1164153218269348144531252006-01-02T15": 1,
                "special: 05-07002006-01-02T15": 1,
                "special: GCreflect.Value.SetComplexreflect.Value.UnsafeAddrrunqsteal": 1,
                "special: rangenon-empty": 1,
                "special: 002006-01T15": 1,
                "special: 000-07002910383045673370361328125AUS": 1,
                "special: 02T15:04:05Z07:002006": 1,
                "special: poll.fdMutexinvalid": 1,
                "special: progressreflect.Value.OverflowIntreflect.Value.SetMapIndexreflect": 1,
                "special: traceGCSweepStartnet/url": 1,
                "special: cross-device": 1,
                "special: d.fn": 1,
                "special: 0reflect.Value.CanInterfacereflect.Value.MethodByNamereflect.Value.OverflowUintrequired": 1,
                "special: a-zA-Z": 1,
                "special: a-zA-Z0-9": 1,
                "special: rangemspan.sweep": 1,
                "special: overflowreflect.Value.OverflowFloatrestartg": 1,
                "special: 02T15:04:05Z07:00": 1,
                "special: key:value": 1,
                "special: namework.nwait": 1,
                "special: 18189894035458564758300781252006-01-02T15": 1,
                "special: 000-07009094947017729282379150390625": 1,
                "special: power-of-2GetFileInformationByHandleExGet": 1,
                "special: G.os.TerminateSelf": 1,
                "special: rotateRightmheap.freeSpanLocked": 1,
                "special: shrinkstackmspan.sweep": 1,
                "special: attachedreflect.MakeSlice": 1,
                "special: rangeruntime.semasleep": 1,
                "special: non-pointer": 3,
                "special: non-func": 6,
                "special: non-map": 2,
                "special: uint64Time.UnmarshalBinary": 1,
                "special: pointerbufio.Scanner": 1,
                "special: reflect.Value.OverflowComplexreflect": 1,
                "special: typeruntime.semasleep": 1,
                "special: p.gcMarkWorkerMode": 1,
                "special: reflect.Map": 1,
                "special: sMapIter.Key": 1,
                "special: longcrypto/aes": 1,
                "special: int/uintinvalid": 1,
                "special: read/write": 1,
                "special: booleantimeBegin/EndPeriod": 1,
                "special: non-nil": 6,
                "special: 15:04:05": 3,
                "special: non-array": 1,
                "special: non-socketstrings": 1,
                "special: a.out": 1,
                "special: reflect.MakeSlice": 2,
                "special: capreflect.MakeSlice": 1,
                "special: inMapIter.Value": 1,
                "special: user2.Current": 1,
                "special: reflect.nameFrom": 1,
                "special: unavailableruntime.semasleep": 1,
                "special: reflect.Struct14210854715202003717422485": 1,
                "special: spacebytes.Buffer.Grow": 1,
                "special: countbytes.Reader.Seek": 1,
                "special: scanEscapereflect.nameFrom": 1,
                "special: mSpanList.insert": 1,
                "special: path.converting": 1,
                "special: sched.safePointWait": 1,
                "special: syntaxmspan.ensureSwept": 1,
                "special: allArenasreflect.FuncOf": 1,
                "special: rangeruntime.SetFinalizer": 1,
                "special: runtime.netpoll": 2,
                "special: 05.999999999Z07": 1,
                "special: alignedmheap.freeSpanLocked": 1,
                "special: queuereflect.MakeSlice": 1,
                "special: dstrings.Reader.Seek": 1,
                "special: mismatchTime.UnmarshalBinary": 1,
                "special: librarybytes.Reader.ReadAt": 1,
                "special: offsetbytes.Reader.Seek": 1,
                "special: newstackstrings.Builder.Grow": 1,
                "special: sbytes.Buffer": 1,
                "special: overlapgithub.com": 1,
                "special: qreflect.Value.Bytes": 1,
                "special: slicereflect.Value.Bytes": 1,
                "special: slicereflect.Value.Convert": 1,
                "special: mSpanList.insertBack": 1,
                "special: reflect.call": 1,
                "special: isSelectstrings.Reader.ReadAt": 1,
                "special: offsetstrings.Reader.Seek": 1,
                "special: 05.999999999": 1,
                "special: operatormspan.sweep": 1,
                "special: mapreflect.MakeMapWithSize": 1,
                "special: cmpl.parseStatement": 1,
                "special: MapIter.Key": 1,
                "special: d.panic": 1,
                "special: newdeferin.value": 1,
                "special: in.value": 1,
                "special: remainingreflect.Value.Call": 1,
                "special: functionreflect.Value.Call": 1,
                "special: countreflect.Value.SetBytes": 1,
                "special: slicereflect.Value.setRunes": 1,
                "special: typeruntime.SetFinalizer": 1,
                "special: cmpl.parseExpression": 1,
                "special: MapIter.Next": 1,
                "special: iteratorTime.UnmarshalBinary": 1,
                "special: os2.Hostname": 1,
                "special: integerbytes.Buffer.WriteTo": 1,
                "special: countbytes.Reader.WriteTo": 1,
                "special: mheap.freeSpanLocked": 1,
                "special: statemheap.freeSpanLocked": 1,
                "special: reflect.Value.Addr": 2,
                "special: valueruntime.SetFinalizer": 1,
                "special: Time.IntoString": 1,
                "special: RegExp.exec": 1,
                "special: objectJSON.stringify": 1,
                "special: MapIter.Value": 1,
                "special: iteratorTime.MarshalBinary": 1,
                "special: s.elem": 1,
                "special: Type.Implementsruntime.SetFinalizer": 1,
                "special: setruntime.SetFinalizer": 1,
                "special: gp.paramunknown": 1,
                "special: lfstack.push": 1,
                "special: parseProgram.declaration": 1,
                "special: Type.AssignableToruntime": 1,
                "special: mSpanList.remove": 1,
                "special: span.npages": 1,
                "special: vbytes.Reader.UnreadByte": 1,
                "special: slicebytes.Reader.UnreadRune": 1,
                "special: slicecipher.NewOFB": 1,
                "special: reflect.Value.Slice": 3,
                "special: Type.ConvertibleToreflect": 1,
                "special: elementencoding/hex": 1,
                "special: buffercrypto/aes": 1,
                "special: existscrypto/aes": 1,
                "special: overflowcrypto/aes": 1,
                "special: underflowencoding/hex": 1,
                "special: w/o": 1,
                "special: failedcrypto/cipher": 1,
                "special: sizecrypto/cipher": 1,
                "special: com/gen0cide/gscript/stdlib/osgob": 1,
                "special: 0crypto/cipher": 1,
                "special: GCMcrypto/cipher": 1,
                "special: freenet/url": 1,
                "special: AppendInt/FormatInt": 1,
                "special: application/json1734723475976807094411924481": 1,
                "special: polldescsync/atomic": 1,
                "special: in-use": 1,
                "special: left-hand": 2,
                "special: for-inMapIter": 1,
                "special: non-chan": 1,
                "special: non-struct": 5,
                "special: send-only": 1,
                "special: recv-only": 1,
                "special: 83940025046467781066894531252006-01-02T15": 1,
                "special: pointer-alignedmheap": 1,
                "special: non-empty": 1,
                "special: non-slice": 1,
                "special: pc-encoded": 1,
                "special: non-byte": 2,
                "special: non-rune": 2,
                "special: non-arithmetic": 1,
                "special: 64-bytes": 1,
                "special: non-false": 1,
                "special: Date2006-01-02": 1,
                "special: 64-bit": 1,
                "special: non-pointerjson": 1,
                "special: non-RegExp": 1,
                "special: stringnon-empty": 1,
                "special: non-variadic": 1,
                "special: non-Func": 1,
                "special: 999999999Z07:00888178419700125232338905334472": 1,
                "special: data:application": 1,
                "special: reflect.Value.Slice3": 2,
                "special: boundsreflect.Value.UnsafeAddr": 1,
                "special: Time.MarshalJSON": 1,
                "special: Time.MarshalText": 1,
                "special: arrayruntime.reflect": 1,
                "special: syncs.allocCount": 1,
                "special: s.nelemsstrconv": 1,
                "special: adjustLastDigitFixedstrings.Reader.UnreadByte": 1,
                "special: stringstrings.Reader.UnreadRune": 1,
                "special: stringstrings.Reader.WriteTo": 1,
                "special: skewreflect.Value.Slice3": 1,
                "special: singletonruntime.SetFinalizer": 1,
                "special: AppendFloat/FormatFloat": 1,
                "special: stackcrypto/cipher": 1,
                "special: non-zero": 3,
                "special: vTime.MarshalBinary": 1,
                "special: sreflect.Value.Slice": 1,
                "special: Type.ImplementsHere": 1,
                "special: cmpl.parseProgram.DeclarationList": 1,
                "special: non-interface": 1,
                "special: ReadgcControllerState.findRunnable": 1,
                "special: runtime.Goexit": 1,
                "special: reflect.FuncOf": 2,
                "special: Zonesbufio.Scanner": 1,
                "special: goroutinereflect.FuncOf": 1,
                "special: Gscanstatus:top": 1,
                "special: stackruntime:stoplockedm": 1,
                "special: bufio.Scanner": 1,
                "special: returnedbytes.Reader.UnreadRune": 1,
                "special: unlockOSThreadstrings.Reader.UnreadRune": 1,
                "special: structsync/atomic": 1,
                "special: lockOSThread/unlockOSThreadstrings": 1,
                "special: non-structfound": 1,
                "special: runtime.SetFinalizer": 2,
                "special: extFloat.FixedDecimal": 1,
                "special: property.Kind": 1,
                "special: vbytes.Buffer": 1,
                "special: memorymodule.MemoryRunBinary": 2,
                "special: runtime:greyobject": 1,
                "special: vreflect.Value.Interface": 1,
                "special: S2/td83u4TUQ2YtR21hIUOsgtu5rGQ027bZ": 1,
                "special: 2dGE64/tbPvNldaRzbzmHSIAZmPEln9RBkDLa9N": 1,
                "special: vpFgXJU09bH8Bmbpd053oZ1p5Y/6U/B8Pj1HVylr1CVUeEgJsvEANpXEXVKAyt": 1,
                "special: tQASQxJMXG1sogTQvUqL2NsWAhKi/rEJa8dl7oCXkvhH": 1,
                "special: Eb2jluemKJaDu3INKsUU/k6xw9Z": 1,
                "special: BUUuQWQlV0wv6JfgQ5qmRNn1JYlARGNo/pxdl5adl3oiEQA0W3b5aGIww0iw6ShXI": 1,
                "special: YMy73RyKAKxoVjNxuFD8CtC6G/CKcYlxR4xVlFGqtLAR07OL/dVvKky/cmtaZNaZSkXa1n8y65w21AO1Mrsvv1JC": 1,
                "special: fY/qrF/3TyFa9iQzknrJ": 1,
                "special: Vmj68/Gz5Y1q3GVzNBvkiXJ1gnSvHCJGnat1b4": 1,
                "special: mVLNnXN/b3vVOeLgTG1zXTBShwdknQ0aMer7BGIr": 1,
                "special: brAembFWX3hEdcMibB0FV92fFkAoHrH5/Qm2h2WRpHJ4FvXPYeOLFEZ3r/uDtdbamlLissmkb2Vrv2J8rjmjCGB1eZ": 1,
                "special: t/WZeRz2A/YsZbte": 1,
                "special: 4jDiRPSOU0IirI5ZOuKc/z/2l1C0RipNMKwEv": 1,
                "special: Tj99HSxb21keYHnCgeweesFUoXNNjafg/8WrD2lvEM1cKH3y7VdidAtqmXZunAZwG": 1,
                "special: ct9paWowo5/CLUU1ASGMdNIfcnpd3xQql8kwthbLnEz": 1,
                "special: OkBBljMxEN/t": 1,
                "special: GpqecjAcxRk6wJruHtK3VUW/lJcC4uBsJO5jfNNknG2/AmFYDmccCgCzoxPRypApYvfC3LAW9G4L": 1,
                "special: OxzqrQjee8JT/tgeGstfqAJvw8pPLBsDSO2SgPHOXRRBy": 1,
                "special: Hs0y9y6vfefgHyo87KhHoWDbx7QoOEIA/E": 1,
                "special: nLt5ixgH7r/pBz0KqCB2i4mMtnHzQjZwZSwibpKLKA": 1,
                "special: f48/X16Evpr5NN8MqtWwYEORT2/6ymgoSihRfJEwK": 1,
                "special: ZMfAiZgsZQ/FDEvkntENHANHTRDrVKOQmuuxQEhwfKa": 1,
                "special: 2g05/XqhfZ6iJAsQ2z1GudiAIX9GeDRr4bo": 1,
                "special: MCDVsRtHirs2yicPyvR/F03Laa7eY2MmCB7JQ55eLO7vkBH76jPN": 1,
                "special: 0j/ndoeuz7HU": 1,
                "special: KfrwXr/HgOPUvfN2Yj": 1,
                "special: JPuYR21kKUHRCvr44884DyCZf8XrgYSa/kbxsTpWGB/UtoQs5cJg/msHp0v4ZQpZrZKLkfwcUyzMJJrqvn5sw": 1,
                "special: 9MmpB8SOlbNTxmlfcST9ToUuwv/TLMmUXjo2V": 1,
                "special: Q0495Cp9l46Wgy1Qq4kaeV14XHg/xhNojntasFe/yetR3BhD67A": 1,
                "special: Et6NY9wVNgCsn8ciSLkgI1eCvejd/YUypdNca4Ib0EFmwwKs0KqT5wZWIxLT": 1,
                "special: X4aqBc4EL8pGU5JvggRUdiH69VFrm4qx/UIpXqX20cWEms1": 1,
                "special: imHdkq/eXfBKYuHCrvNp/G/YjCm2UVdMRkFxeeU": 1,
                "special: Oi8tNq3Rgtn9j8VGKiza/KMJ0u6": 1,
                "special: uaFgR2ZfWK6BMfL2XbfjDQMP/WtqC1hkBWh9KD17jnO68FCD7eNzlwRuQ": 1,
                "special: znF0LMjR7h5uAECGCwtxrcb76Q88NyPv/hj3m/FTF2CWIzUTXqBJfmoPU97pvcbbsWMw0c": 1,
                "special: 8N8oUNqBznMJdmcaGaPoTw6/vYJFDZNJ4f31loA3Y9mJiKVo1otgYUin": 1,
                "special: 2H8ZKfbVpjHpQOsJtRp/DqONcnU73GuDmZvPB/Jx6pL7vqW2oEQJKszOPqnoCbdv9ypCs9": 1,
                "special: sCtZpZ2SJNvHpFELN4o6RvpKAX3Tf6lb/mIcwvEV/tYhfoQDL2LtbbAUSLMPSLzxaEvpS33": 1,
                "special: HtPq1AKo6XW96/GxJslp6oJezFrAjnsBMwQhwZJsgrbP": 1,
                "special: S/crf3NoPEcWP1E/MrXHRJolDL7NI8NKVNmPdFMYJ7UhiYtW": 1,
                "special: AmyyoKbPxPq0WqOZo8r1MHmvykgQqPTx/nmCWZpxYs2dmPaWSOi9nWa9HYKjEn": 1,
                "special: KTz87pWYSspsNeSOXldRodeC63/tt4Hmp1kUScq8/KCBMJi8n/rl8fWK6IcYw41hBiDZ1TFXk6abbwtSMW": 1,
                "special: ou0EK3Pr2lQsaizVD30lkAwt7wjV/42": 1,
                "special: OhyT/lWbtpAXWQhaFO3yDr": 1,
                "special: pMPgOQRaA2KjiSDzNrEmHK1UKOjpuMJl/TwA/dxfBhp": 1,
                "special: rBzj5sKku/0A8Gz": 1,
                "special: QWPlBrjJ1G9x0VXCRodtKxnrFxHxsEG4/w": 1,
                "special: yKKnyQeRx/KiTfviXd8HBpV": 1,
                "special: KhqV/YzoWYZbvwFG1EAoiEIwuGp578OyCf8NO": 1,
                "special: nC7ACsva9FDMlkTD2shP38u0uCp5e3eA/zED5oilkt6Y2Z6SscAmXDB8ty4L9pQt7": 1,
                "special: OAepZXjCn9Y94IFdbNSL01Q6K62QCEL0/GUVueEnEYaUn9PNo3CX8pb9gdYW8x2G": 1,
                "special: qewuBQZMtQUl3KbDs7p1tqGTKVoEQ/8iV": 1,
                "special: 9XQCOABRhnePbZx08pEAawqrIj/rtnwxFfqC21FKiT2FHnAr7bDC0jy2kBU": 1,
                "special: y3ib/9BtnG/3wAe7SPvfY1DbQ2olLewtfOceP4yNdXb": 1,
                "special: mz4WQInO/aIOsH550": 1,
                "special: NR4nBVggJrBKbWwF6tQBCHy3FZ/1joJ8yJdincQPKXCa0IDkR8EH4SqVmUp": 1,
                "special: i7Qz9LOhZkHCl3NhNHrCfch9QBctW/XqnVdnrS2wXxiZSDrpjWUN01NWs3usbv": 1,
                "special: eqfBN9pusYDLI1G5tAVFBzxG9bF6T6A7/e6bNhndjE3Kyn3VK9DAivVTICA0ced/AlQuH0eK9gEBAxEdWX": 1,
                "special: sFuppIo7OshbeQOL2BC4mWB7vAfgLQHg/PhvTSp": 1,
                "special: jYDMzMbE/9HfP5AmP3fFA/t1Rkg6TW7Id9pScIcJGrulvaWAMXAHYc": 1,
                "special: aUIJ1xGRsRjp61bxaiqvG1yp/uRpNMMhauXKMc40hUOps3DSOnikXs9e8": 1,
                "special: VyJbnHTOF4IaJdqLIdDJYWHsSg/Xr4s5ESFQSkSq1G/Xb463cZszTdfoZ8xUzGI09j0J0u": 1,
                "special: zbhE2F45OLEMZaPQaeJmRGP9CzYcZLfG/kuGPEDbmo5Nd09UoPSuzd8JCJUp2USIN": 1,
                "special: zeZxSzXS/U7q": 1,
                "special: yrQP5Y1p9Yf5ybTRWbdJF3HvFqnimF/3hPc4tu6ibHMNUuC7dS6epoUyNeCDf7Z": 1,
                "special: Xaqj6jWzoqZajsA0SY5/NT0iZK0s4BSGgZwwBHmgCFAJiMUCGg9h": 1,
                "special: XXp3ZqV/50gzPMAOZxvlwk9": 1,
                "special: 6QOCiw0iaooQqhTIb18vne1ARMos/l6enxdjn59KcCvTT4rh2KLfoM2S1WiB/iqtxUacfWeY7O6UqFRFhZIv1QhT8IdxV": 1,
                "special: JYtJYXFdvZ7QqwwdlBe/BS0cub68aBZFvNTFmuMi/LYjW8KTfTJ6H/r39Bhw8ajJmT6": 1,
                "special: C5JEpUg6BIH509w2UI/TtH1ecEfpIAO6RWE0OwE3ir1toBZh/Say/ZP9OKTCFFvapnlr29DnnRBMoFJ1": 1,
                "special: TU5qY9c9XBQ/SOF2G8GO4KHJukvuR1EIADs/O/zHktM9GJ61UVdCEAEbDPa9MDnJcJ37z0": 1,
                "special: hU37clkhH/ZMK/Fph4oiJ565W3pDDk9BrB6w6VcKR7GdWJ": 1,
                "special: XAvqHfWUmtPfnWjIJ49SLlPlUULVKqpz/3lnxWuZOTHg": 1,
                "special: p2H/HouVoTRFW3JiCzZKhlWGxctZQmBB/uytDxowiVVFMOuTDwPSJK8xFPwURAeoD": 1,
                "special: 6BivlXx3uKmQhzsXokQOS3ynfnivaakE/pXQpXykMeQLnW0qPrHZ": 1,
                "special: aQKIR8gHX55PjFDymxuhHtmO13c0UNRy/pxjFl2VbB5khIYKxKzb99M3KlO5OTkAn": 1,
                "special: g5EP3Z66v4AkM8b9eQLdxJfnFXuQBfiX/pAbWsC6DcP2e/GXZQsSHDZIg29fiKjlXEu8lB1mHg2uaB": 1,
                "special: kWG/Byf1": 1,
                "special: 55RDfWI8XrOKP/GWxW6x3WuOHeNG938gWzZoOKTH4BBkzl": 1,
                "special: sKDfJKlrN2/Q893kgDx4SpK1V7zqd0xc6PwZb2ogG9q": 1,
                "special: EnVdpgPZYG01SGyo3lrzer5sdqAmdU/tXD/e4YZNTBEFcSo0yCToOiwtxci7h5AYIfG": 1,
                "special: KhQDglkhz5gia9Di2DI5Z8lXm22M7yEI/o3d": 1,
                "special: yp3stS6YMvry4M4vKKd7jrcF7C5jLx/AsPclQKXIOPPaJ9pGUJt1OR0pt9lja6H": 1,
                "special: qJWv1ZrQ5DglN9GAUm4Tr5e4dzjEADYe/J": 1,
                "special: hoxBzxwOnCXVEIKcOQ1DCzN8/T3GXWWjDVKaLeMsjG7itWFQw4CRXv5FT": 1,
                "special: hWeQNll3yM/Vx6i9xhxGv0uaVawXI6EoIoBFnwotAcG": 1,
                "special: MtaK4XN0uFPGDTYZhAYJD0VTzFog4z9g/euY4pdBJy9rnyG9HhksjWFO0nC6vp7q0": 1,
                "special: ImJYPWFuClym2Na4sGZ35lT3AKMZlfIC/MN3xoW8kf9vNaEYWoJh3K13oEXd3zlWX": 1,
                "special: TN2MPpmDVq1WaUXWj8iWKouefXZQa6tk/A7ukVmAurZiL4VD3JP4gD0geYkSCYz1c": 1,
                "special: VUf6ShWEaYL0UkodQUPVxqqptMdA96Ql/bm": 1,
                "special: Pp3y8oQzRdtqx/DaKPejeDSZYmT723RLKI/ZPsemsbguji38DcsvIbX7fYFqqEMV12r": 1,
                "special: DRAQrIqT/6Un7HWCe6w": 1,
                "special: Z6BhTkMgF7gs7/YehpDCpEqzbQ7as2GbO3k3k": 1,
                "special: djkLpMgjAw1j9Yx4NOY6xvXXh/J0CD09kPCl7jnxpcaDHeWoyGnj6cnTRR": 1,
                "special: aYtOe/C9p9Dwy1qTUR": 1,
                "special: DHXxhX2LwR247ax/XU2JdZBAN2IrAnLNPjLANqpmr6r403u4": 1,
                "special: FWZJQS2/YKlMtwM/mlM38HVnPkSgogDyh0E": 1,
                "special: x/DTAerSqtpiIhUjI4cynqmPvmyCPAzf87": 1,
                "special: CBnOnIRNHL/vh/Fcyqut9dfOlG4NIbvvDjEJxaOeZLX3LK": 1,
                "special: 36oYBSnfUgJab9Hn/29PRZCj8IOJIL9LZcDPZEZdlHxvWLuHT": 1,
                "special: XamtcdSRe8/HqLqQ/7GoQqdiHqkLWjZLQIkoHKnrb1fo6KkQb": 1,
                "special: eSBGYihhmxXoBquPz9HuwObhV3jYHZyk/6KVmYel9g/6rb1kOAAUQTQZA": 1,
                "special: g/lO5VdFa4zddlLiGsiJPB2Jj3A3": 1,
                "special: mqI2KEgZpgShjFUbe/IlFQyPOh/EEo7fpQ6GH6rvu": 1,
                "special: 8sVengVWcIzdfP08cGs3zWOn5lyy/qzq4m6UlgYoBHVwuDUnh5JV18QU6iUIF": 1,
                "special: x0KYIF/5ijw7IE8NeSsQ7b9XTVh2k8fYo8iBFNw": 1,
                "special: zJPns5xXp18as2x/O2lP62MYVzRXutG8gg4cVK24SdpaOfVl": 1,
                "special: haH0ok982xiwb8cjtlJlFZx/az7uSncM45NIrWXIWMzkdC6FsP88Fmtf": 1,
                "special: x93dnSG/M0RDRLyy/ocrSYWUKLvf2DWsxtCyD8VMGYmOsTOFR": 1,
                "special: wQk1xAxVxDWKDtTyMRTM7XvEg/YNwNZrXnW64IElxUTt1eNq864HD1axuP": 1,
                "special: J5iXlOqZoQyvizmyx6/bXD4uDV0ZE4svt0Mkd5wWSmxBsR4rR3n": 1,
                "special: srth7Dtk4t7lXe9V6W8kz0oFHImgVV6x/nGS44IiqfmUHO1/fjhXLmqavjanoZLZzgGHFHrZ87PbbIA5": 1,
                "special: td2xKz76HyjyWpB8cpnYmazBUlwDXHS0/H9b3nJm4Aq35WVKB5itP3qHr9hYGN4jB": 1,
                "special: pHc4TBPVgENaoJU3F1aeb/RsC": 1,
                "special: ZcCzgqPe4fUSDomN2E2ZPhYeaYK/CMD81bRkGNaHQ/yXjbhC3d0/d9E": 1,
                "special: 3b/jySDJ9uizUL6/NZnxFt4gBZwv1H7xD6fI1DRznnXaSDM1": 1,
                "special: 3kMXiEYVjArxidpUp/vXIMPg": 1,
                "special: iUFS3QlhH/7QL0vo7ZbKsoNIzbQDE6WBH2Xpw1ntAX": 1,
                "special: p1JXeR/tk0zQALhXS3gNvUBGvm7zyUVlHoySS": 1,
                "special: afAXZMggSRqnuoC5tixXGhLf6W2hwL4p/08uVihbLwA94Gn/sLbhBhmMt8WNKoMYrMBVFEBXOpJGb1EJ": 1,
                "special: gZEnipVXPknNR1ejpU58vy1z6cnYgXzl/cyv7vJAhW5KB9Qff20fBqSba7kSEPGxn": 1,
                "special: PFzDsMCqBcxVcUQ/3u9": 1,
                "special: VMshO9WRWqW2yg/Hpl7q0LZ/BjSV1s5JpC51UVLJXnLI0r6dsONJOk0V": 1,
                "special: hZM8gwmnbQewR1cHB7NDR5EiL/Eskpe3CYj9U2AGA0XzXBgkRzFWaEuRgR": 1,
                "special: DDj1hZt5jzqhstzOMTlsSCR/8uHZB8sjTp9vihLsukTMPyc36j98Ypep": 1,
                "special: RwaQeujtuvXGUvufKWaJeiA5T3NAFlxW/15DuAt9ZLLxEf73": 1,
                "special: awlabtVsZw0gBB/Z8RC": 1,
                "special: IcCHUlqV/rczzvYYKuUjZd0KnlmbXv1eV18wxPi7s": 1,
                "special: O7KqJppbBsXJ9pRVKuz4EDvfuc9lof4q/AGxRifp4EhQlzna6Z1RYWNVLyAk7KoH2": 1,
                "special: qkN0iQ2PiCxRVJwLRjzAbbsIOY/sBSibEsBJBLJs": 1,
                "special: zwzUcGE7i4gFt/yP5y4WODCJh": 1,
                "special: AdDpzdBTOCXEFh0MBK9CeNDgqUohbLCK/hhMKo": 1,
                "special: OpOm2cblf4/I3nX0g7uoXwGVo2aejmXY/j": 1,
                "special: 0JC3wptyqypnmjonSFk8R2mcUh89od7r/qaVoBXYBU/4mu": 1,
                "special: 0wPcXGN5R6FYnvwWEQy6W8bsjOAUK0W/XWMpzRHl": 1,
                "special: 8Mhdh/a6JQSxjgUbSaE9B/VfFRuGsH6BrevNa4YRxOz0dNQvZDf2aC": 1,
                "special: pVSdYZvQOdDU/pKUVqbqopcNEJmB9dvvDLatUn0rDRRoe": 1,
                "special: 4Vy1uJP6ZSL097UHw869tfF21Gi2tGJ3/o2ykikLuuhvN2ToYMZ6ePA": 1,
                "special: qQS4gWVXuUcaMzG3ybl9eQtIjilM/9NmzcVcLLDklVVY8q": 1,
                "special: 6OwYCa5828elWCJo7oV2hhKL09MiaPNk/fsWBudxPlVTfX7xD19pfKE8JUfTrEd22": 1,
                "special: CyZTPnQvnSE/IZa8HSzenzp1N1twD6BGXNUotsKeNNAv": 1,
                "special: TahFsAuHm/07GxkOHoTduwyzN7BAtTAOiB7fQjwHeO": 1,
                "special: s9mi6Fsgc3DzoocChvHcyU/JOThS/5PHqMG3H0Pvnd9bWSuVeZPTOgVO6nNkP": 1,
                "special: 9VscDBRqA7hOosXpLPJRHbyRxmb5T1Rq/ew6Lst7UWdaEoB": 1,
                "special: uUCBgDnAU8dANeiqbIYlzBx/FvDGp0jU": 1,
                "special: EJ9VCWWoPDEfxdBmweDmeSr/ZoxlmMiOQuzpC1y92JiknJD7FtdWOIJm": 1,
                "special: mQqZH4nQFZwg605IANGNAf4vpMl2plJB/rmGruKdoptrFXdEvyp7FRsvwNcHhXI06": 1,
                "special: Xd2/nvITeV3vV4IdUn06E1bqDIfnjRnb8lPc": 1,
                "special: 4R8bZSAnkm0eNZZN4MpiTPe5YLm6RhtE/OFMBQfCk0LZFrX70U4fSDqKjzmB1Va1x": 1,
                "special: TAzEclb/YEnIUxe2BdBdHrZYx78d8lYdqOLyg5/rTQ7YQXCPiYibGcn6xbTmyJrRfgacRcK": 1,
                "special: 0xVxs4dFKtPnQJvBO851BbTgec5Qc6s5/Y9W7AUdNW9xce9nB0jtyFFj7MvOR5u2G": 1,
                "special: 9X/ptURAWZlUFpgtVHY4VwgdFZ9ufaryKiE": 1,
                "special: 8VqZbUMiic89nAYLB5bksgnmR8E11/TzsKZnHSeHZxRL7uVQ17G6AckzcSE7yS": 1,
                "special: 7hSHJJdDuGBxOBQpIriuRkf6i2WFnbuu/XzOqs/Ygv7U9cfLlN8U1VgAzspeDqHzs": 1,
                "special: zMwGmiv7/qtlaCHJTjeWKE8dtH02tbLPzrawaBHDq": 1,
                "special: 7pDQ6/dBDDWjLADjdn2124SIblW7AQDEYWYqBQ": 1,
                "special: RcZCTJeHQB8XWC4N27TUOWrLXOfFRmUS/Lh0FahxBfeymkXvA4ZKbms": 1,
                "special: TA6JpEYEuatZVNObHgKfVIyTSVIIIpLf/W3Bbj2xydlv6T0eAjWpAcMTwyD": 1,
                "special: AdQLdeRpOUCRtVes0YWhgO8D958G/6ENm75lh0AuS4pNul8VdZoQkdl3PUCZp": 1,
                "special: U9yPLMyp2XVt2Hh3ut1q2PCcH/qeEyCDUcNx0Oln0DjORdMIHd": 1,
                "special: lHxACwm29nlQG/fbSKAfD8": 1,
                "special: lE42ygoOPMQ7NuNJFy/5Xhxqc/gqVsYNvEbM015VzZpV1iyK07PE8K8n3f": 1,
                "special: kJjkuBCyNR8T0crXiBciFGnF/xfNn2ojhAeRM/YEUQHMYJ2GGkT4KKUaVUhZgGXQDR31YR": 1,
                "special: iphrpfnvIsTgAU3Ntewg/CTMh": 1,
                "special: LlbZ7aRHThVqyL7VtcD0h4e42iUMIzKG/FU5xKcusHr9AeQeiZhk7nPqjbwqKk6Xi": 1,
                "special: ADQLMFk85w77Cd06iRr34nNuk2Gvb3R5/mT5wRKgPYzJdVex15g8eoUHnfSMUEqZ5": 1,
                "special: HZmWSGBcuk5muVMJG1kaoEFQZWLUV0GQ/6ZDaFe3KfMVtqyLuqgDcs5XFfAGDBFsX": 1,
                "special: 0pthc0vvhZWnrxar3ARReBt1ePA27fHy/PbpbUsJ": 1,
                "special: VzW7Vw31pLgKEj5k3fYJbsDLC32t/JR": 1,
                "special: CLHKD59VaVMA2CjLTdYeXODx3KVB5n3/vVKxUZ0CsWSbpxH1Q6SfIScME4LCXDQG": 1,
                "special: cPBImj25/gOuSBjxudMLD6Ad/17PzlxRWBSWUwREowERrx/kZw9WNLnwRvURZLYrXpEdk9MQt585MJG": 1,
                "special: AbbM5iqS0j9vE/efW64X0/5W8ADKP13xGBKBVfte/NVJWqJHUaU79IcPpcZ71Dq8F/EIiKX5OA7s8wtq6WRgytahhBC1sLOjV6": 1,
                "special: MRxf6xXzzwEFrjIijJCb/YRmEB6I8tN4LFjkzSR3IOe4PwK3fZQTn": 1,
                "special: OQSfEcqQRdiCsIjJEEOA/vl8pcH4zYcZFa3Yuc7jMKY9JPTC1TY6": 1,
                "special: tTvEKbrGkBCFuxNI7D7STVfXHWQ4YBLd/6Jr89/bT5B51UWnaDKrCZvdS3Xkb8/iPp6rQKD3L5gADKkfNYSzi3nNxw52qbg": 1,
                "special: 0AvPvizV/4EaK9Z": 1,
                "special: y4W/CTPXGGEBBbSwfi0u2rs0CBjHyF4sU": 1,
                "special: i7PySqHaG/apeGyntxtUKD8xMQa3WPFqE30WSXDe/AGBEE7Yrmv76LJw7w5QKbyXUFCh6vkfZ": 1,
                "special: D9cUfyJcefW8lJOkT1KGq5qJ/eTjpGafMB1VoljaGzoYiZZFXFJ9rKswR": 1,
                "special: IdUcJj5xTU475Mhavzq8bEL1AVKDgC5H/tj4CQz": 1,
                "special: wwRQ4KdmSfEl/xgdN": 1,
                "special: 8qO3zv/BDkrx64BUGDzsoR": 1,
                "special: ugBWrhWOj0bCpXJaC5sAVXF5MT/WYoM2Sf86TVd3OtqKK": 1,
                "special: mpBH4dPEJDIfdlZFZ2RSba1a/D9gutkX0utuUrOfvIJeByB2CtJPdN320": 1,
                "special: 2XtHooO9Bf7uK7TqpPTzTF7OEreDYfwg/gUh": 1,
                "special: YQj9OV3yXLyA4SjUkqqVc9b9CTKbVj9i/LIuk8h56U7883bnRVIkz6S4qMHxNV0Qc": 1,
                "special: BshcbcWIm3IWQzKdxU1bv/isj5kPCmpR6zoGQUuNrY9iazofSS15sl": 1,
                "special: yIEGWouTDIB7vj6nzfsfw563KLMyN6DX/cIe3gn34uDVhYGLCmC4kLb8BSK0i": 1,
                "special: zxYp9Lw/wZ5YJU7gpY4ndEPbOq1NFRS3/9ZkCOYTTOe5xUkvI": 1,
                "special: RGHO/W7gAbuaFrkxP1ubGEJUsBEQ6Dws1AKSX": 1,
                "special: yjvzWzE2B4Z5BdaYQUhTp4Y2Hq/r3L/PndThib0fCGn9gnOINfDFsGhEnb4/0IjTPPcZ/l7ULVj": 1,
                "special: NM4I6KgFvQgNX5iDAQAyhcE1T3256p6C/ZH/FcQzJWIkRaGstKtgoJ/ACwKM9Rl2fBfgMpsAeDBcHPHaq7lWeKT": 1,
                "special: IGXEOk6vcU75e0wj2Bii6DGR7HNn/Bl3x3kglsndqKebi3EEAEyrJ1WAnWXHJ": 1,
                "special: DJdDDi1ABVMZE2dRS5R/JSoIrI5coDl2": 1,
                "special: P8ti0Q7C4lEgzaW6w7TMAopHp1cfCqQe/Zf1vprmIK/4Zor3m7Y03xiRuxXCcq3hu9DMZ1": 1,
                "special: pjomM68/o/E75yaILD/0itx3JbLsTnalwsbah5O3DSIl0JEUVC9": 1,
                "special: vW4NwC9nO7jz4xQDK8qVlzh/cetJGFUBhStke": 1,
                "special: hIjiTmqVFgHqdwX5zk6K8Jz8R13nfuN3/tShN7eDGOrrwwzwbRraRI1pWmkzF2jIH": 1,
                "special: 1jPlapTaRQgthxXMRRlJ04yUYtyV2GWF/0RBRpYQQzrL4DCF93Pc5": 1,
                "special: v7k2cAxAuuL6Kh2Ot/JmayiIEwl9u4e3v/ECpM7MuYyVQwBnnlN0BEwnSNCc5Npjsu/mkcoDoK6CADLORDedF/G3qxeQ2iHriQd9def0UuBUOwP2DZt38t": 1,
                "special: gDgylj7JbufDIPDiRx4Ipknsc3r392Ii/yC": 1,
                "special: RSKH5OTiaSgQ3zeSQ1X6LEXsVh6TVPNp/8vm6jIOG3myF/KsKfmKKFr8eR3wE9UP4NF9Fe": 1,
                "special: qEmCmezn9MxStNRsxHXWqrJ0xdnaQ/cqvEM4Vj8QeJMUfMH1b74QCnUWWrFey/rSgmERwZC0L1kuoMk4iTMv34E4ROKghl": 1,
                "special: MOLKfVLUYf6/gFBUCqajyzMyg8vqjZi3w6ZjH8TBMEm9": 1,
                "special: Y3JE63LFIt/OQqK4VkUrYY8BqLYJFUw3ytYshOXyjpy": 1,
                "special: fqddW5LEPilgr0HOsCv3hGnKAAnfFtQH/xpdS17slcejnsd7zbd733wOuYV6Fof/7XyGugO0l0bjjBh1HMctjsXvMLWFB4Rn": 1,
                "special: Vc9TbRsd/mWx06KGxo/ONdIW7d5sLXAXOcnjBqHFXyjX0I48yC5": 1,
                "special: UyngFSHer2swRbvkQFpIfnIwdBOKqPY7/AiQNT5K6k/SmMSxF0cvljSyaUpsvVFooXWdMebWkjG": 1,
                "special: Gt35YOFMT/mnmisIUmV5e3G3gD9jg1Pwby2XEH98ej": 1,
                "special: kxwCE1gN9GA27x1ILQ46l4g7mHB6jMFX/GW2mffOHYkSxEtEFgCKYEs0IsSWZ6eqs": 1,
                "special: Pb6jQ07ayw1wkfF8pvbAZ1x3OO3ILlmK/yB": 1,
                "special: 3d6UOeJ28qHP9inlvAOcgi/RLAf04eLsn0Pq9gjU6BwP7VHu1zNjHks": 1,
                "special: ZsWUzU7LjUljioHoqorgxK/R2ZoWYv25/u66AfAiPVU7/x": 1,
                "special: i/jQ2uW9uExo9oedZ0OniZM1lVeQmMpu8C": 1,
                "special: OAMLS8N63CCDuT2FhpvcyrAtoQBqq/7cVxxckGRiSzpkQ2YGCT6/zqvOscLlUsSgipw4S3zScCDf1LN5fQFy": 1,
                "special: d0/FaY6pdASP6G1gEj14966feWX51": 1,
                "special: 9bBxvbhGnXsAffbKxorxpn0fgmTFImWO/Vy1eQh1s30OR2e3zmodJ8T234pDc4": 1,
                "special: uUH6qZzW9xMW/0kPqK9bI3RZanjilXg4inxKjjY0pTk7K": 1,
                "special: PlwvDK3ZcuKtjEEDoMqzNUfEdpWjPN5V/rl2YkYdh8vVNRBnygXYL722EohW": 1,
                "special: rSsoUcIkbsIS7CUENJothiJakrV2fBrO/4tyUb1jhRrehmNoQRHS01nK4mWQltGIO": 1,
                "special: nCzCefZyFekJCmE7/I": 1,
                "special: Z9x4s9KP0HlUczpVuynd4a56nF0LRGtF/y7": 1,
                "special: XTIqA4DNVjgLlwRGiLxoWR/qmFXTdI1dm7UgVbtgc05UHmXLjmqJvMB": 1,
                "special: Tn4igM9pEordcYVpK28uY1LGRdc8vY0x/eplHvoln8QAjuLEfdcSyh86cW": 1,
                "special: KWYDpThdasPvBWTmsFsbFykht9MeOtiK/t8rOI/3hEGDvkVcD/d8aYfCWuKKz4O4paMyc3hs91yEh80axe": 1,
                "special: 5f6eRyERy4Sm/MjktK1PJRB7ivnIj6JR3P3mkrVX/4vx4apNfUMca/FRuHl2nUUoPQ1BTfW2sRBNYrPzzM4ZPz": 1,
                "special: s9Oa0fUgssDfP/jEB7VhZgk4W/Gc7IAaeNgvzWeAQ": 1,
                "special: OwXPqPtEqLW1NaVmRoCgxa7nhw40/QV2LmqDKK1c1E9tl": 1,
                "special: td6i95LtYYHkhfFrE6u2zxLnV7qapm3A/efgvOBK0y4VlDfntbMLGmgDsPowl71XV": 1,
                "special: eat8Djx455ylYU42umtxnr0v4CCwHl1e/gOE3046OLF1Loxjot8mFh4C1nSJFn": 1,
                "special: N1et4DVQxvnTbcXN0rLxK0z/EhiiavWQoTc7cf": 1,
                "special: tLq5apAE4C58bTcINwW49RuLX43nZUhP/e0n8rfdrFv0Rfe7LOESalHqpfCOEXcUo": 1,
                "special: dSGZalTU96yTvTKQNPW/vxTAmS/Nf4uVszBhT2oPc4DS4NK8UURCk/nq23snOkCTtBuIjxv/Xhb0JoR61GD4h9thegO/IPoqCbk1/z098n1uy4b6qwjk67tp6HJXMkauVfHVy": 1,
                "special: In4QgiBgXzQyim/G1pjURpKAlK0vqY02TpWEpYwijzNNRC4": 1,
                "special: JitrF5kf/aeew/w5Yz7NzskjYGpq5MueDA0av06pBiLvuK": 1,
                "special: A0MpyKRiav47GOLUE1z1H4Y1f39SfpJj/LdSLlnI0X": 1,
                "special: 74muli7B5QZpFF3gt2a6gOrUa4J5B3eh/UJa5bOEzGLpjPb": 1,
                "special: r2mtGj2/ZQ6NkkUAevEpdAFMpDYVih": 1,
                "special: RjuK/A2y0EUp1anyrb73j": 1,
                "special: jD0HsE4G/vpwUA6UGG6jFglDZS0rpGDpXU3NkgczP": 1,
                "special: Tiv0Xn9juZNjKJCAUSHJf80qZ00hFtPD/PDavtUnhlLkOkWrB0YpMCdPpSZKty1tB": 1,
                "special: S7usS8CYuU2nwaFs0pI654MUJsm7or6o/kesgkI5BuPe79166VOzMUDefM43D3n5A": 1,
                "special: Ni4FYWGzLqnPSye2W55kT/PIOR5r": 1,
                "special: sNrBO3oUXjLAsLT0pkhHJupuQfCT5YK6/z0b9zs3hEITg6HJXhtwn1E2Gf": 1,
                "special: qlDKEwg91nWd7CywXLMnjIauzzhGDMeQ/TKWl3Ow107": 1,
                "special: CKFc4i0l/69IEkTypXonmk68V": 1,
                "special: JsodeLvCJaIh9mgL7H6k8xti7DkfG5Bq/piP7jYdRh4/7buUikzwsPe5XyibzRvlq9oj/p8fQiAIQB2": 1,
                "special: iBwf9KxuoADXwaNcdlwpcA4H5cBQ24c2/8kGmggb83lIggEjAF3Ry0pIM6MpLo7/AW9PEmZdBLb": 1,
                "special: kzXbuF6iaApvG88GH4neL8mAk8bnpUEj/QU0GO4MBQaoOTwR11AdKRn34Uc0NL5Z0": 1,
                "special: 4o7JjL7FARZF25Zw1dogdqKVeK2F9Bvv/0cylfsaqLadr3wYTyZv476eiRl7WDRJ1": 1,
                "special: UiiClWxT6WjFMuxetEsy8ofs8D3HHbzQ/NMF9P": 1,
                "special: 6huFa2Og3j2bvpXx4alFH1JVuTjGGZ/bU5k3AuHFHHG17HIN5zuiQX0z77bWZbQ": 1,
                "special: SmC4GTqe4/1BtuQ83QbLVVh2IexJtl": 1,
                "special: P691kIekIMshgL3Y3u33UCUlDeFKXx4A/QW6ZlpsedFJJI1zUi": 1,
                "special: f5uL6lvu4SA5QeYRStPnzbDd8HftKfCL/oeDFTHDMO3ZKKd9vbzlUK8IWqNeyawsf": 1,
                "special: UQp6Ae02/7TE/mt045UVDrcnXf5wQdL": 1,
                "special: oZ5oYslDzpWQm8wnnoLjMyNOqonxk/vPPy/4": 1,
                "special: W1xJ3a2KmtFmdXXfe81x6xQh8spdmTsq/5VMq8pF/GMcpA": 1,
                "special: E5WaLQY8NeNu9DfiUAWUXbH5LF6BdSeW/gC9oShMjM0JCdLIapLAvxwn80kJ5PS9n": 1,
                "special: O85ps3QHTB7WEnSPRsb7hchO4qapSiR6/Rf": 1,
                "special: 1Hqb3r1Bzid8o/ZSBp09FPYWWBj": 1,
                "special: uKY6fLC2Rudf294Ignbru56LZ/cjZiC": 1,
                "special: BORBhkHC6uxSUmnvO1GtdNKCShNRIlpJ/VjpdKSdtfImQQLSTpLamijcRH3Q0/K3AdJOEgcdK": 1,
                "special: wz1YS8uVx5Qq5EOZo/Dcl7WeWlF8kmuOTfaFT4NPvGGvVICJw3": 1,
                "special: q4PYj9VL0mESpRaOzzC9CBUuAhppGJU4/CQ14B8feivs6RdxqSeIP7A5g": 1,
                "special: zRWCnhlX6S9Jsuk/sIH1Dlxgxqv7EndHzKQukuLphUhW31PJ": 1,
                "special: mhdkwHa/oZt48X66yJPxQ11UvO50xatVgHBKeLyM": 1,
                "special: FkRYya6S/LGJx2VA6ZsfS3JbmHrEtqumwT9KcIPES": 1,
                "special: 1CS6XZ7eabmsUmU8JeWZMCw7ixKvHTIp/NVOjFx/l7HyFRRT": 1,
                "special: Ch86kfPDsqtgvutNE2k9WFp2QwX26pYQ/nWh4aNASEmAbq33Nu3c": 1,
                "special: wIZmKSGfESRQ6wz9LH8rJkUHQjZRXnGD/TO9C8vMuwB5V5q1bLe26KzWFNZeK8C8N": 1,
                "special: cSBw51xebNh7/yNvWN6A": 1,
                "special: KIlI1ENcSQUxKuOpwgm9bsBU0Qse2AFx/bQpzuhsLCim3GnYE": 1,
                "special: SWgd32t/XPDaOnmVB8T5XRgcQ/nu5ukPzLA9u9S/ugWQE6Be": 1,
                "special: fQ98zrt8TGTTEOzzOdFdJRX7uOpqWWvh/gdHe/gZq9GF8NYQm9J9UPA6H": 1,
                "special: 6ucI/yW/p9rMJrRccgbYg": 1,
                "special: g9Y23ZeBqvkpZjXxhhohM8/e830aABWrrtnhrzR81z6W6hJGFPRmEcI": 1,
                "special: 8rdRbBNrIuYib21OjzULLgq/OcqfPaG2UfLAtm8JgZ1HBn5aPImFd8TT": 1,
                "special: GfQU/DaqA7vke4x/6c/R/cCXAREihz8g": 1,
                "special: Or9BIF/hBzBSNsZ5Kr0ONA7piGyqO701dLGXSb1": 1,
                "special: 5d/SlUsz8jxGlQlnwkrwdSAUGq9LGSwFMiE": 1,
                "special: 5cy0ic9QqmBH9gzZNyvNSG/a8mVoqshTlReyS6iVzvlCKe0MT1ToKqI": 1,
                "special: FYXUR6jdvgLXMq8wxuFOTElYProigbnP/qssHQPVlykkNWkcXey57S": 1,
                "special: elZjj4J8YiXkiKCmIFi9WvAEgassIpqB/41iYCvv": 1,
                "special: sucZOdri4Dy7HJZ0jmBS7/nm4Za6QzmHF4/ll0b1hXJfoY5FVYOy8fR8a8e4ksk7B0m": 1,
                "special: 4SMnDeAKP6Ip2Na6xeGM3tWC28YAgR6B/2vr4cgFPJ7qd2ranr": 1,
                "special: AizHrYowVWVkC6UH7dLM5UBYt08M/R0BoSfsumbf4qsVWnXAAeXlKU6nPNX8i": 1,
                "special: YCzJAz/4A": 1,
                "special: 4RapDUUE39U4pZMS2AE9mA54/WXv1mDxi9E6Jv9CEE1oKm4BCMZmSfCaU": 1,
                "special: iujF3rg55xO8/LWnmukNZ675okippSqRk": 1,
                "special: wI8Nz8TcRDED2/eqIh5yQgnYPtLzrW35IVarXpqI16rDiC": 1,
                "special: JSPTKNW2IyUEmoM4w4dcragwMTyRi8Xp/dluxnYb1/ayzQtKx": 1,
                "special: 8lifFBjvLs09N7AU2z1XyrMYRccxFy3B/FOFXFMIog/qxcNKbbXu8WfsdZ96Cdl/l9TOxmVpB5GVEzB/chVvLnJdQQNTm5pwn3TRrB4GlKTyhSy": 1,
                "special: FaDEkgCFH/AIcmTkRZqloGWc2Rc7nEZncrM": 1,
                "special: utCIWyxX7sAjUMHOC8BxlNF1fmx/oAceN2TAWUCs8epatWq/TwWOVr6fPnorCX82Ro92XRLKHNaeh/B5pOXUzMzSKy5C9z1QnQP/QpSkGKxALA8glOjHT9": 1,
                "special: PYMtHzSFfpZD9KZ0EMQ8GXR6oeFoL/9f/jHg1AzzdOBPznXKFGq": 1,
                "special: 2BRRhBWwZe3N37xQxggoYKg1daaTDnbu/g9MTGLKPLbeQK2Mt6mNvW3iZfWBRdbCp": 1,
                "special: qkfvy67prgEeuOl3BROg7e6lHzNAekqT/W/5JCDjMPdVh2BGlpTYQz60Z6zCZV3RWih": 1,
                "special: nCY4lIsQdmiDO/PrnnFBykLrT9y": 1,
                "special: zwTlIZk3/OkHbaRlliyEmtvULpnoMY": 1,
                "special: 9TPNiDJhgmma3FaEKWeyB/NoMULB8ZLOYrbJ7jT3nyaLvWF0LdkgFI": 1,
                "special: WwweJQ0SythP/8Q8DsltNtT9mHni": 1,
                "special: YUFny5FM5yytf7FrPuHm27ixPo/Tq": 1,
                "special: BmEsj3XASITdTpsFijttGV1ZC9chU/0/hWz6q9d9S2YNcGGwVhZtCygsnoADAFe1": 1,
                "special: 5DwfcjSIZ70IvHWkk/2MTGTUob8dA5": 1,
                "special: u1dlmoVOrsfASXhYPJKCEVDeItn9/DsWbNCn4RokiI7hdrxZaNujZrVjhMiJw": 1,
                "special: I8fwtfi8mRLGc7V4YexSvpk/6tCtKDxDU5zI6MIh4kMBIor": 1,
                "special: iMseqDQD/wBHKgHLvH7itXZ16kIesxcz1VA3AyZ7I": 1,
                "special: L2XVsStWUOBBNo/8": 1,
                "special: mTv0nKTxp2l8oM5vwgnxowkSVIKoYe2U/JfHzkcvASKos3TG5mxcproMYDX9as6R9": 1,
                "special: hprZvhSIEa08A4Nodsi7C0rxxZ1WT8nh/jhQo0AmYpLkTtd9JwSc3uio3LGihipF": 1,
                "special: 4fLGnUAq1TEGYbB9VNa6rrjsXrKf1joA/B6pPPoRP8gYBmcZzl56HrmvvcTaYvJKN": 1,
                "special: vQoXyK7Vgx4141J4tQHm/M7X/mrBtsQUNiAkA7kMau39UV2F/h7drU8oN6Ayks7j2OyNv0NFHYRG4YeP": 1,
                "special: C5wfC/73KRwPxwzdorG8BBBOocdmmCO9mZVPRd": 1,
                "special: eQdyVGV6L7OqazWpj0tzyP3OB92VeaOp/S9Vn8y/XUeUvM0t": 1,
                "special: UyPCl113WzXGfwTnhUgZ0r/hcfexQfV2Da0tixy5O4LNhHpKKZSBzBK": 1,
                "special: GGtBbeYq0B0lrJTcRHir0A3d2zzvYDaq/Y0lawIUyPQt69H9vZTP3YcwmAjH5SEeH": 1,
                "special: 2ZkNBhFZsCdh3Xosrc3SLlJwuGLkMq2G/pgXF/l0EEVyKsnT9x/gkoOs8sXlKW3zX1/glIlbQ0SGMpcysrJixMsHWXffcx2wnLd": 1,
                "special: i3mMLzCfP9Ffxq0Z5ERUKSB3M4iYL8X8/9Y/fzNSqn9DUHQiVOIn2YY6t46lYSF2XiIS": 1,
                "special: w/tSBGntQKNGFycyPDUcl": 1,
                "special: QwvvnIctQimgiOj1WQ5hMGoxDHbsLS2P/BauT8HUjT9yGJXrGe19QK94HTwiZlax3": 1,
                "special: xZizVSWnDIKRwdqdv3NLFRWabe5QAQg0/1za0sopHQaQaJG7CQCD5JQxM0p281CIu": 1,
                "special: BX0At04bV4O/CyGhqFsH2qQ7/2LReCWVw3pbKNiiWYsPJJAILultpwWkt": 1,
                "special: hkDaLxAQyzQrRiDPUGRdTNXVEkWUh8Jp/HM/9": 1,
                "special: KcCgiDDi/SGIzJ7L0CkS70O9ADiSTVSDeLzNAJ2P1": 1,
                "special: V2C1sotyEaugmNYjUizQvKZNJAORn0u5/kXPWxRLMpE3mPlDSvKqj241sVJhze0EW": 1,
                "special: qa2if9emA4UgatRhEKXvAsE0kBtv/kvFRzUQW7ook16J/hmgjwOBZ3p": 1,
                "special: qaUqECq0ddkJjp/9REEnvL3pCJ0BHT": 1,
                "special: L0u6XmGuCSHuI/rYH20E6CXlvQH438/GN": 1,
                "special: yS3b5ykihPF97cuNczk0/fPohHHthJfBLIozRoiNcCz47PxghvwSS": 1,
                "special: 1p/UeeKdK3NgyTECGCDu": 1,
                "special: gWC5stiPVYVeuGKnBF2U9inEv/MF7uI": 1,
                "special: 4VZr8gZJbbU24ZQh82beeiUApwgoKowh/VbPPqjdn37EVMCd0Jl3m7VvyoMr85uOl": 1,
                "special: k9Vh88oyjmem/cEY2NLcxe7IfAt0jN5qnrjAbv": 1,
                "special: 8RfArJZWe/jdHRyW": 1,
                "special: oZ0lnX0wBbm7iniw9rQAg1RsmoXRbVKa/djlkAL2lgNTHM6usmkp/pQeEBYEFUUuYroOa/XewBy7REhXeHG3RNpm4pHTaqYT": 1,
                "special: IXzf4kdRUhjICkUqK6HnSlyVVD1HB5ik/w8PysM4ywTBcDx2O7GRh48rO/OC547ROtOF1YcoX/aypi66wfT": 1,
                "special: Z7rPAIQFHrZY9/Ch2HxO": 1,
                "special: flrDfhHJewcs0F/4EUhGJNHokxmEHTK8ABUDPLEQSIAMqd3": 1,
                "special: 4We1ZxCRJCCRiJoqXge6CX6KvvMN5p3K/nVgAjzggBlOJGrAMF3Mbq/OZ6kl/md890Mve2gKjFXWwbtjovinKnajdmjIb": 1,
                "special: fx/KNNIEYmZ3HifYO0VXu1naceolMkE6Z2w": 1,
                "special: TxMhU/PFV/YId7CUsFA8kB8nE0h3dsFEOY8xhfH50s": 1,
                "special: nwHNKO2QWEIZcFFGd/TJ0QzaDI": 1,
                "special: lnOpDm4zIrEUFfLTHje3qTKeetQe/mWUPxe7jiTkm5FqOL5pV2tQ9Ur81fM": 1,
                "special: mEd4zcMkt4eIKaZVkf/5ou": 1,
                "special: WVo3mFtipCE/tv": 1,
                "special: JKZ117it4zZmvtjWe1FNLKK/MvPcB01TwXRJwWQLFurLBbTNCLc5Y/OwFhT1JPtMRLb/YmrXT8W5aH5zNAhyCNnNUFdBjFVXE8hf": 1,
                "special: dmW7smFgp2J/3JoloQz0yx6sI": 1,
                "special: TpUuzv/56I1GfjnTmH4Xq0ZURoY5AI04xh95LNn": 1,
                "special: 6rGpIPEAS6ASSPZbHlnnIbfue3o4ehdE/JcDyVq9eL9RefjW66A3bIWfey": 1,
                "special: jJmhmw1VI3NZ82S9dirGDv/g8bXUCSney3ec": 1,
                "special: j/NApRpoFrUzKbKPv9QZYAgZg4sMtNdUkx": 1,
                "special: fRMUxc8r9y9ShlnmYH4dG/mLF5lAjEbVCFw8yw4O": 1,
                "special: F3TmibS9Y57AIDkydumVEHBpShebSB/0tfH9BNobqJSmJPmB3Kxx9a75": 1,
                "special: Ahdkjh8YwwHrYhCbm1/Sm2tta7JptaKtFE0tD3guit0j25kQP07": 1,
                "special: R4gAtgBP7Ju5zSHLMOyvBS75evZOK1YP/OsM/XJna706EfsICpDSf5RddZvyK1VotBCC7": 1,
                "special: vOFyA9vFxaDHlli9SsjwKIFMb9QV/hHRFgEFauypYlhQ0QF0SuFO6KXkXnQ1t": 1,
                "special: BfOt4T5KTz/ZlnpQ7frCwgtkk9mNaCqhQw5E6ZwG0b0": 1,
                "special: aTXeX0lfNP/pZm760LYeSyz/qqA/iLqJ4DO2R043w7xgCqboVKKVkISYDPkD": 1,
                "special: I6KGUfYpaPMP/l/q2AbsdcCGYffYttu": 1,
                "special: MPFBMmePp90ROOtP4AkD1B8oMnsvJugQ/QOYhB1x95CD1hor1hrFhG5drTl58": 1,
                "special: BUZzyZjUe6xvFD/H8hZ/Ftla/2wzoqx4dnH9K0hYSbZHBx8D": 1,
                "special: 3SHv1gBwsyE4idWg/JAdOMWhqR31cqjydQZqS9tEnYBKKldNg": 1,
                "special: Hs5vq04QrRmvcHedlYr4F8iRWpJanxBa/huY4VPwE51hVY5npZagcaRQK2": 1,
                "special: 8KcbdCua1HM2BOnCEgGBj38sDmckjd84/BH/xYBG4oEOYmrBuVMBiMbymdA": 1,
                "special: oJuc3EHR2U6tMTGZn4u4UZwe8x9UYIns/u": 1,
                "special: E/0ntqlR8JVoBkbNgvNhVW4tHNOqnhbQ07": 1,
                "special: LBrFqehNJQCpHmaIZk8YlIKzZRNaInI3/xmoY/s": 1,
                "special: hpV2XHU80NLzA/L9MgEWCxY/Wo65QHeBBgRQiOoI0": 1,
                "special: QnDmb3GfDrchRgXn6AVMfnR8FyPwn0va/6NUoZqIOQrW8LKRPfdugK/8wboP2iRfT4GhPEgmw": 1,
                "special: L/STg1D": 1,
                "special: JTzKTrapqpbuSEfuTEwCcTfaeg4eJ9nj/w4W3UkIEa8jihkjKngqQCn7xrYh4L4Eb": 1,
                "special: srA/NtHJTgTO8cpUBqG/kadaj1oPpRKtOF8wP/8XzkkBUSGOuqlIk": 1,
                "special: enAo2WaYAYWqMuisWa/zuhQw7W4/wBHgrgxg5NlbhJ/3xM24UO1h4O9KrNDOsEsZrrpqQxf91ut": 1,
                "special: 0GAowF3vKkw5s9jApf1bt/yiq8SrkUDiP0RHM1t8udWnh6XaWPqS6": 1,
                "special: j0PvfabYajfoOgwGozmXoBsLMjvjfSaB/mhrj3YQW": 1,
                "special: 4XIPPKoY1ErprM1iASOdceUBdE4mTVVx/S1DMHyQVjR/9sOaBXhmcu3aikoUd7V1atE7aGjnpucN": 1,
                "special: eNoi19vmQl8F54ChtnlWQgGs418be4YU/daXaTcnGkt1u": 1,
                "special: 9o74e1Cq5bS66FdlAXGK8BRxCcxFin76/vJuD08FnJk3LaFjK6vABq1zFOCf/GNYVffFQlj67ZhxPz/wLlOOS7wnT5xsgceGySpT42LALLc1QvG": 1,
                "special: xLLtSP2951rXC4p48Zkj8maat2iW4Mjn/saaDO": 1,
                "special: H/EL": 1,
                "special: 0hGLO2hRP3MyXzyBocIebvlJTMJYuoG/iWr04xnet3As7h3Pz8v5R2wsKnE2hTGX": 1,
                "special: 6b5puyKWgjpEDvPfo/tEHysOulDfBbD6pBql8gRVnJ2i1keTys": 1,
                "special: 0dXBLYxVmt/nMR6RE5l/1DWQysUm0erl5klM4wbR5aNtTDuOvpiy": 1,
                "special: oNssnB0NFBuftK45U/xOCDH76bXkLz/hV79TiUgmY0cgtGM": 1,
                "special: K3JavtI4hQr2U/8aJze559f3z8JAXbfNnocvD7pFdUt3sl": 1,
                "special: NKf1d0PdbjcY/NpwbOwF0EEowkPusv9CB1rBYa77ajsv3": 1,
                "special: mAYsk/LfsS/kjfPHFr9b1nvwGw07zm0Lod5zRFw9SM/al8twLIdbbPn81OuH6aVGOHcBkFwUyHt": 1,
                "special: SU70P0zo/HcZxr": 1,
                "special: lwxIe36s9SNan0m0B1FI1yXgn5JTYMqS/0x37BJPXUHSVS0FevsPljSAvuaknDLTa": 1,
                "special: Y8BmKcG3h9fpr8wcX6I/zdhDS": 1,
                "special: qflt9nkAzMFhcL7cwGlUHF8rfd49ZCs6/iPpqHnF3lJ5Wy0ODva2UBWGnp32teVfD": 1,
                "special: EJSs/8OzAiiZDhSqK": 1,
                "special: 14rPL2/hnedR4OxNK9C7O5O84dUeamtVaSoGK/6S51cN1xVk": 1,
                "special: 88YGRePw5mXlQmc/WP3yoYmGjCinPMtJZp6yq/9hen": 1,
                "special: 9uFSJPD0lDymOFRrsTZmaoEv7EaSnxI8/krFYHHW1Sl62HccIuzeg4z/UJ6yREAlUnQdUu8vNYiSqWX": 1,
                "special: areWl0dqAvIojp5GSg2doCFRnMwAxkmz/nNotbx03Q1eqvYjLimBGuZJwNI2yM6mA": 1,
                "special: XH71dpdkUR4ZztrcTqag1LDVlrfD6tJV/2LrN6U8LCb6ywf79rGv58Jt4tdVuGeKp": 1,
                "special: 4p2jDJSZFPlRwv9Z76lemd3WUhAjl28/Z94hMWkKwnKXya5E/V8plwpRp9mr4qoc9xQNRfVhfo84QicqI": 1,
                "special: OyGvY0I1AmTmNQIQPsxzi0gzDKmjiYHe/sYBMRhhqy1J66no8tLmoK2uR/VLCAli9/4IGEC08AUsASuqnIue5M0Rrt8OXIr3LV": 1,
                "special: rk4WguH39vUnna/iEY3J": 1,
                "special: guZwkPposdWso9BBNsW6fSB2RbAeJF7s/MLlSAOuP2JeZi5frqPqWNVV9opk8Crjt": 1,
                "special: yHSaiblQZ/e6Nz/yECWmDjOdVfYLLND2QiOeixb": 1,
                "special: 0etXUj51VqlYCoF6qWWmO5Znrn5/zreqWphaID6J4ktDHyiofkASUCECs4DV": 1,
                "special: qIPtCcmDA5Fvshj10WFTK3Cq3C7PWX3y/Dn7sDpOAmdAPNhdUw/F/blOWiiY9SrbSAxLcSObItqYooV5bPdf4": 1,
                "special: GyM1X/waFDh0bufF5OJg1oCm8/gLYjTx7O5KTH8BNVpM1G6ERy42fMD1oh": 1,
                "special: fQ14vjvniLSosr6yAJ2zPiUnCjCU19yQ/Prai0eWVaivptRYUkLG5Smi402xFjScT": 1,
                "special: 9FcriYiv/ggP1jRema8PfPsoYxzzVO2bukoun8bZl": 1,
                "special: qu6XBADu1cR5SpMwyEn0YKq9SpFRPmmb/EfUWg4RNXBckX9430qYEqgex6nY2zQYj": 1,
                "special: Fa9vvM/iy/DY2G9Jev7RVp8OmiMz6/gekiE4HT04KHpQsbSEI3DlWrHY3s7XWG": 1,
                "special: pfPeH1cCyx/XMwRBe": 1,
                "special: 1bPKWSOBB59K4so5Gj8bRAngjQOhw5xc/5GzA7TrrRSgftiQIMq": 1,
                "special: IxOTPkCoM/aGY": 1,
                "special: J3UwwZ7YPIVN/ucO9oKZBPNXujQJKvi7NiIpRtOSvPBke": 1,
                "special: SvzagHcvWD/i3YaX/1Q9TLf": 1,
                "special: UG94xa8QlwT7pENOE6DtuYqqJau/pvSCZmCCXm": 1,
                "special: srAs45ZQh2nTGNAZmqFSQBKPu3yXIr1I/en5Fx9oe9": 1,
                "special: aA/HSKHktJ0w3dB7x46Ar45FpOKacaefHJV": 1,
                "special: uthHCuf2xI4ju2WxrOuS7W3pqU3Lm1uc/WSD0o2CzeByTdz/1nSDepCVh9pnAJ8mzqM6HH4VR/0pUXDYV9h2ixWH": 1,
                "special: UQHwV6AbO8ABaTfRyUf2vY4AxdmFS1Ns/GkYlfGmjOmhmYk9": 1,
                "special: w2SUA5npHgl1X/5gTi/5WkXF5Tl4JEeGwxxwGo4m2Z7cjoN336q": 1,
                "special: 7Nao1Wnc0bA95c0VA0bwoEMSc7zQ4te1/hubefI65hY6HABvuX6BfhXxXqEfwuHb4": 1,
                "special: DK19/xB": 1,
                "special: GfMSZz/HHc8O9": 1,
                "special: B0lQToVpY8M2dGIQSfyjeddV/1yF4pYnrppEuT2iGuCf2xu06JzzFMCXl": 1,
                "special: vs7uEkFQlI/EzZ9HvmJKY": 1,
                "special: omaQrnb1KvxKd79Pt3KOdrk98lld3VRV/5zvmdLwuAri3t54TYyjDt2sWeYtmYsPk": 1,
                "special: 8wh2rbGGYUyCvHiw62UmGqrIXTls95CD/Z0U/v16M7fEvmhwYPnJt7fjY0i4r1bdYxmO1": 1,
                "special: 44mYAb3Y6KPk4zCuTh/hniGGq7ctuFnc/gSg4WtkPYrBdforbrp1": 1,
                "special: Rrt5iDtbMyEdyJiQS9I/jkO21xp1KGaXd/xPlV5e9EXx4iORgn5gRiYkGbCQeIQt73": 1,
                "special: GUOmei51N3rGpYsc5tqsvrQo7wywZkO/YCM9HlclsJtpC98RXGzrfqINgD9XWbnv": 1,
                "special: St7Ee1qwEkJFNgUGYZAdaYyWcPBLTXbh/X15aTVfGMBaEO1TYeQEXDUCqAGVa88aZ": 1,
                "special: 950kCPdMp6PnhKI4u6fWU/OlVhRK5s/rWER5DKwoHQ3i8V8VIhR3WirGGAx3APz": 1,
                "special: DiVdSs/02MxOH768j9avSgPfmdedAbNqM1MRRT6": 1,
                "special: sLMJ/2ETzeMvZLfDUhB4WmprNREdw9FjGiTNJ": 1,
                "special: 1POMZXakrZoypCwebcUTRh89ZYdiv8sl/QpcppmOQyp6zj5WEZ5NSW": 1,
                "special: CiujUckH2jONw2dKC7gv2Cl/dQxppyYcpMPH1rt258BvhArg53OA2xFx": 1,
                "special: e5VhBY4eGjcyPjdWCibh1GJ0mtohJ6xQ/paFBgHOPMRUw70/YS51mM6A2NxTRC10YwvuLIkX8a9yXRMk": 1,
                "special: r175TToNDh/lyZ": 1,
                "special: PyaRak3Cl6UVRw51TWG4nyXOFDuMPTFN/ydNwk2TGfY3h5": 1,
                "special: 2Wv9uGoBiG3XkY6KgpwRCWIRJyJbno3N/9r80W6UfZ2jliUN7lRYDGps7qOtfEsy5": 1,
                "special: lIwql0jzg/3yhhBklpgTc9NbkNm8rVq5zGTXZwTb/Iqlm": 1,
                "special: WfY/8bbTSslSP/658M5l1vEWFqJEq8W0p3AX": 1,
                "special: 66JNncMITgEeHDxwwHudQNJljffrYvgw/4TfOhNyIrk5w": 1,
                "special: FGhizFNpU/gEAR8h5PoQjTgJ": 1,
                "special: c8MJHAilbnAVt0615lMKHXHY9zcgeLtZ/d": 1,
                "special: PEaCitlRFMm01CzK2SA/3SH6rnpchzZ2xiY9sKX4KHOJE4J1JRH/L0GfVRYiLimaGbRAa9CieC1ojqVRC5NG": 1,
                "special: BfV0LkqIKz5xs5Qy9YS3jkyPqzWvxR4/vWp2xxHMc0O7S56WFJTfeBm91QAZ2oXm": 1,
                "special: iCvtWY4mVhlOZZlj/6E6AGjrDGtEAAskRbx4dKp4ZQkUMxQye": 1,
                "special: FpFPG1OIlC4avYKLCQBwJHV6syTzHaCK/UjHc87XjZuVg8tDXsuzsNAQcMu5Ve1H7": 1,
                "special: xeK0Kaoiu/oRYplVVVlB8ijcv7VwBFxTs2heSkQ0F9": 1,
                "special: 3o8YR9AeUH2ZVCTwVsKiSoCebKbViNm4/cO8NNbiNrA0kn7Jm3BsUzKwNty2Itzpq": 1,
                "special: wWSVRI2a5Oo4yj5ilpTfCMnwuUFB3l3b/kf339P1tz8rYyfi9qVb9JoS2v24HyvU6": 1,
                "special: Z/ZYh3RgI3CRd12izGauXuTykptp5DCNqO": 1,
                "special: 2XmNPNnu0yytDjMmLxAiTPhDdWDSGkML/pFFH3YqDJeh3iZEnC": 1,
                "special: urQuSi54rgD4w/WjzLj": 1,
                "special: qu9BY29P6WQ0OHIlO4ZgOoqIDxjKfuek/fQCq36W5oAdYLYx7mfuJKIiX8Ogeegfd": 1,
                "special: 2Tp5Pm8/xMd812UKwfSzdA1KDd9XQS/esis5fZaLesTe2CCX7tP1IL4Ti4fOwLq": 1,
                "special: nzianxiNjnaYcWl0e9UkBUQE1tBq3xtc/UBmJDkciwQol/DLh5fk0oqz5UMJy84CXdC55E": 1,
                "special: fzKAlfErt43EIU/gN1": 1,
                "special: IncQwYkBX/J1QdXWAJrC4VgkSU/MwPXOBculZo98zBPa": 1,
                "special: 9o0lK6pJkIOyDnkXffB1sgc/l2vJHNkBSP4i8toxeJZ": 1,
                "special: ghqo/h1JH0M88GyA6N4mRzaWTwzmoG7O7JHhK": 1,
                "special: 0/zGD3bi07HDaLkgUxuB2ObcuWQ1CdleRB": 1,
                "special: CUZFFBqgudOtk2RYk5ohHvxhcIha7W6O/d3lHkOaCwJa3kp5LfqI1ZXVniQ1AeELn": 1,
                "special: eex7vqyVS8BVkyCEKxSpVob0s1vGTpqi/KEoLxJZLkjpMLM3bOVq4k8ch9QKaNuTV": 1,
                "special: 28ccrrSfgjWfPnji95uAGu0uJS/VgWsPFA/FfmM2b9oliNxVVsWirWcq5YBGbu9jiuR": 1,
                "special: 4fXihRFoUgYwLqJ9o5t5AF/RBcoIQja3Z72U1mSgCCAalhIyyLsPtGo": 1,
                "special: rne/0jqdmUKFTXqVEytSEKmCQp5clxVjI64s": 1,
                "special: e6BVbfC5k3ZkTszD4ObeRyK/3GF2pRdwzWIx8lTYsuurm1koSQQGFAhc": 1,
                "special: WPWBVX7dz6lkA1YH/HaRc7wu": 1,
                "special: ZiFGzeJ8bVAqqEqIJ0oZ7gEXyAu0Ss7f/TpokqjscA437CKRjMywUWYOBtmE/SRcMBlcjNWnXdTY9cxy9502wT1eDDpZG": 1,
                "special: xT0q4ddol6UHt3Fq0yHJFLk7Ak5HrD/PiGK": 1,
                "special: 4BSgCXZrdIZSi/To7YCZY0U2ejw3NYmOoi3IYcxXulVs2D": 1,
                "special: DXjKihDvAXqFUJhF42/Dt/6460x2AMFo2JL0CzsoK9hSPsGDx0VM0N": 1,
                "special: 83bRB36keb35Kc2/kJobBP50VELncuYFgyNkk8ERFQj03qez": 1,
                "special: UpZsRgNTKbnKS1q2Afr18YmhOLTWla61/PpL2IQktncMXZvX8TeVNuhhX7OdCoVxZ": 1,
                "special: 9kWYpJxRR6qsDDtXI9RfT4mR/14GR9Uyuvm2nG96YbX0SOBXx5GNL9vbd": 1,
                "special: VlWHbHOBdLqgvWbOqEtgox/4rMLlmW4fyDGaYy1Pt3MJyNAPn/qqvTGNAbfw5k6yKQmX0zdTm861fl3C8y": 1,
                "special: GtJv6vKVt5iAbnKqnR8ghK6eR6AF2/eVZuL9iW9eVGfEJIHBOHkbegz7ePdfaA": 1,
                "special: SqmrK7ykYTFwuW/0bGnmXBG22yqCQ91KAkNc": 1,
                "special: GcMzDEEbBp6Eg1Tq9XyugfySE9rQNYPa/tiD3vNom4wvJujhrunWKzZ8ds37i9aAi": 1,
                "special: 4hFJhuIS1oQ8ZbBxOiLzMUWWJJYBKknF/LG7yhFtSn": 1,
                "special: p5CFypHhHq/5GQbRGRdp9XQHgfZ74IH0p5vZ7k7tKd0": 1,
                "special: z6IZfd/n": 1,
                "special: sSP09Sc7daCvwk/Gxja9Exw6DoahguomzieDd1br1yGRxES": 1,
                "special: j8KKS/QSiap6ConPNY28cqR9tS7A": 1,
                "special: 7WUQ9hIW/LYQrNpwtoFgXk/V6CxbuvJuM4IAebvAsn8yN5TElC0KsK9": 1,
                "special: 6pKuk0Yt6LU/hRJSIZSiWSyl6GLk/GsVwyOx8OCQZOaW6lb0SlcHWmiCbgoYA": 1,
                "special: Vfu/HPdF1nI": 1,
                "special: owUBptQbTzgmNwB7UUW0xekRL3d4/Si2/Kp5H": 1,
                "special: OI7CYt4t7V/io0QxnD622mFfpz0WiMRKWTt80F0WAM6": 1,
                "special: 4/O/Z8BMTP81HKmmfNGek34b4tEc7Y8guMWK": 1,
                "special: grwfKBEqN6W5vtB0/QJof/wVkRQJjONe48Yvoy0dtlEEeDjc9sItyl": 1,
                "special: KqYwOzGe5duFTx4dcTNYpgohRodSOmaW/YpRlmZwoeGP/AwnasV/uMNvAPebSfzff2eejS4wDHoYddQNGZQE/2CfUjpb5iem3MPAZ8FBjg/quUSM0XL1GBtXNgg7AnORL0eWUQ7ufE5": 1,
                "special: eEUkIba0thcxlNeTIqtnYl/4xeCgAurrxL7oSo2lwDfLZQqPAIjWxRV": 1,
                "special: USFPYCi1pw3a8sVsRYxUYfKVWpyfpQ03/QtXQsketrwBIWPMb0CMphmNQt4AR5j3H": 1,
                "special: wMV3cZKPyYVz5rIGtQJJlpyUIiwBfTuF/kgAAkH3DrWbXcC0dwh8C9DtXO5JrYQh9": 1,
                "special: F/c0Z2u5fJapq57WwAgdOl7fMHkySQzxfK": 1,
                "special: ucJxdmLnH1CXjUjE97/wwt5DVCXMVVa49BvYd/KifTgwwO/lpPBu8DWJ3M2o5BKG4LjFOQEZVoPrYT2": 1,
                "special: uDI6qXPr8MhxRhxY0JbhlwfGqA/O4RiYs/V2QkW9": 1,
                "special: DOT1w5rn8wGyLfHoIFkjzWNS/oV": 1,
                "special: nbVV3/CgtBp9w8xB3VPFe8sbYdBXZd3lGv6AGL": 1,
                "special: f5MCBEy7zwggWDqnTrEkfD5Yt45inSqI/wcpb8McF/ZPf2jMccpE6sjljiT/kDL8XLpNp3o/pNjZwi": 1,
                "special: IuijGuelWsalN7KwL6lDSMzrB709m4E0/NmdTyXNpKYRJhNT0jLFTVbsCQS6dJLEt": 1,
                "special: unRDaRGZ265bCoHyCWRyOtKkVGmySVHn/AyWm2P9wsRLKnJh2enN8UfS/vzLYhquiJr47PNCnXncOQ6x8qJi4sg3l": 1,
                "special: rs0fN5vekwfYxDKwCnMA6hUppQqC1NHo/sSDF1Ec3RO03pc6i9EjdGapN7IyyiHTV": 1,
                "special: reYYtRgynM4121QgN0/fciQCwUQ8h2knVLObQaVb59z16P7N9lW": 1,
                "special: aiipDTguvYhKdPR9MhJuSgGbJO/QyNsRarX4SVjn40ifO8IUTJwO9vD5oIb": 1,
                "special: Qzb8yxB0fvc/Q6xhjoeGdVlSg2zQxfy4s26s5FZEKoYI": 1,
                "special: lM7y8n8x7EnxGmb5HNeuUYvclrh0EhjB/fASbhpjmqmFwJFE5Pc6VYZ/76iq0S5nCH4yEaQUtQEAEAAOeJLQJULO": 1,
                "special: ltY5vqiTguQ6uYaijlXDAq9t1aDPl1d3/nHtFnRE2QchEAq58oakeHdGc3AxAT9ZI": 1,
                "special: RqFIiCxhe5z2Sd4yKgQKJiXuBeAsv/huvenybeS44ljHEBlJPMiYPPiB8nYDtC": 1,
                "special: gZobDaN5eqIaM9nDE6cE5iPsWs9jQCQv/Vrmg/tee": 1,
                "special: HBQ/oQXp9gTt/wUoVAMPZuFOuCqJ9XlJ2m5x82tzfsNGm": 1,
                "special: M/w3kZDiJhdM": 1,
                "special: qn0hg4a81H2mVegS2fkjAp7YHfCy682d/ebghswtF7DWpQWoAAlMV7KVEv3OHlrfZ": 1,
                "special: SAxFPHY3EFZrMJQwEYYlLAbGzFFkUmgz/0OEhyRbd9xLgP1a5yRqGxhx5nvnWQ8oD": 1,
                "special: ofdJs3cuWRROkeORQA/mao65xHjGJRUG6WckvEaDr8q0JAqRghU": 1,
                "special: YZpV3nD8UBeiQFZdrl2g3MW6A7hr1dlE/SDT2mLGCj08BYLcOQvhaR7WQWLLxk7/cKw/qlIxJqnw5sNoxjabBJhlETxNYh9": 1,
                "special: jVyZpVXqVSObGwqTYIP1/m3Hllk6RiALhKcXYMKcJULWAxmBdsFQF": 1,
                "special: 806xPpPxiQZeaKRo7mhVocV74QdWTjZO/2d2p3cvvhvxScSgyoAa": 1,
                "special: Iahda1/DUlg1zyJCezgp1I7N5w0VNSuKPC2X/FI74M6xu4FWD7lHmqODxGjO3jGyQ3cKK": 1,
                "special: 8SozgyLvQ0w1BuhPfx8X5Q6uTLLDNaRI/ZIkhN8sHFb887SFxCrEUeMEYtzRxVev9": 1,
                "special: R6dCHLFYQ7ExnPaHKk/8wrB3UWNPUxl7GS2FYMPqxJ0PM2bw5w/f6KXeEWPrKkk35f6MzMr3rp/ekXr1z0PCgjpivlhCSkpttp": 1,
                "special: f5ZnE1/YZM2lT2Hxsl1iLdyRE3SB82yZtiJjFCq": 1,
                "special: ry3O7upzKBcUT29MebfClIYTrO/Qasn5dvDk9myp": 1,
                "special: tEqL7jUmQCwIBXtSCIivzNeylCsYJ8Y7/3JkfMc8": 1,
                "special: 8wo0ji4AefzrOdRx/8XZln4E/R/6KxVn0FKNHiPsgaS/hD4gMih1DA62kbWDqUsfh6wSgLXDmd/5qJDfgFre5MooUoHhoaudKUWLf5z9akh": 1,
                "special: r2H3r02rEM4jiJHEzQsrfjvC4p5kKiE1/FUs/oENcrIvhwSLO60QI2JFfSColvZ42YKj0": 1,
                "special: GUOqNPyz1xC85TiRjNgGAKkbYSZh63jr/BtPWahGERqfvz56A79SbRLD8o1": 1,
                "special: YC/I6O4Ows4aEBI1J/q4ehcr/LGvkVpeaQ0Zl8kEqGT8i0h2zrZLKoEWC": 1,
                "special: F9Wy45Xauc87OqCyMCEQs6mgwm9DSS4J/VzNxcAjaleNdwmhzB1qYGNidjfaE29Qr": 1,
                "special: 8qE9FnO6zkttjXDhJha7R2WR9MZDl1jm/NB5Qt1yqstfcnHzsaO7RaL4DLa1ewSRL": 1,
                "special: AAut0lU3c6jRiuM0qQx4csEsD4gCzYaD/T5jDnFf1Mb3a3wqfxOvEfOuodIz96rvX": 1,
                "special: UKmoCvNIczrwXEdFNYWonMJ9brxF3wAw/FSGYIdfpCu5Y19q1": 1,
                "special: Yh1Dx0NeHungCJfMJuicM72zGPgSglLM/EEt": 1,
                "special: lrVAG/z0ahdzcIdkA0Ug3DLdzDj8l": 1,
                "special: hqVlbIyP/6JKi9sHoNUJlryVG": 1,
                "special: s6i4sM5QSrXu6VrNJa9hFMvjX7/5gDIDvcs7PJWEh8Ur2": 1,
                "special: VlGgjDBhCluVDkuhBYO35QJtUCwHZ6ih/7BA8qOxhF91SneJxnRWaUyFRY3pIHs09": 1,
                "special: IpwaxaKq3vfHuPNwn6E6DFYsHOBNsSAs/FijA1v1AczJ83NLrVzSgsLgWpmiYLRs4": 1,
                "special: KF0QoiKLDCFmu2QXM5kqW7RU895EQ1Nw/PsYyasM6P4wW83lNnpIZGF1Cmb46K8qK": 1,
                "special: ArklKIZd/61QlXuGFXF1vVQCX7Hzw04PgeLlm0/RggRxa9NA8nYwEy2Gj2hvsxgioElfTck": 1,
                "special: LsP7iNQ2oPWuGyRxllJptRLNE3aoGd/wj/irKlySJlOdcY5fmAE5HIqdO5lKdLe20g": 1,
                "special: bHE8KugkLhnUHXizhTp2pojdbJaK4TQ5/CbCsUL9tJLuwS8T2PpnK8tX1Qf29zjI5": 1,
                "special: spe29uL7qHfit1zg3Bfqncku2IQTnXQu/AQrer79tk3yu96OQjX": 1,
                "special: C4mc0n4wVKBLabkj1gVK9r8nDPJXFrdt/TPur": 1,
                "special: mV6iLkJi76BHChhW9tlI5Jmx2hB94pOs/PExBrPlwEpsBM6ZkWbwHVeSTlVhxb/4Vn8/Mg": 1,
                "special: s4KtrQip7Ew1FdVaR3PrAZlGPsyQclUD/azG8cYFEzKSzgWXbrIPxzhPmRVCaJ1GU": 1,
                "special: kPGDYcsxtJvazkygwsmz3nNPCVRJjMex/QuvQkEEruWeY": 1,
                "special: M1/0MD58ugbnxvI2qilTQbf2db/RvyWDnJy503Ma5J65H2wzjUtb9W8NeDp": 1,
                "special: bOlP7NwH2MHV5WtZibV4Zzb0zU/sN29FcGPIBRyEIa05qTAQ4UQXOw5zBUJ": 1,
                "special: I8NcnLXHWTe5najTxKtVxenrWQBX3pA8/vdcnZbxtoSetmRkx": 1,
                "special: 6eVe8f5ZL6J4MDsMO9vCXf7Hd1T5ZoYm/Ewyr3IgehkmGJrwpEVQrQnMHy3Lo1QCS": 1,
                "special: n/kk4SJqQSSLDu31lETA3hFxozKIuW01m": 1,
                "special: FCXhSQOPf9hPsnu/d1W8Og1RJGVthlXM7BAqqtrQG9gUO/AIpFAmu6eRGLww3Pjsm3J9ocUR9Xv8Ry": 1,
                "special: fUwaDD/s18SSL9": 1,
                "special: fkhgnrv4X1wa8sGFOHb3pxrNtx0UJfCS/AHVoy2ckl/0Fi1uiW2SqGtnWtkOH2MC08QzwBWe1cU/86gE51CBh": 1,
                "special: Y/3qLYbVMQMnrxGttAFl2pbmFo7qtu2ro3": 1,
                "special: EMLhwRXLBsyrAyu6Z/QuKLqCdHH9DMPY4MaI/K5QRYjKsNgeBklXUTThXhOohVo2ZceVc": 1,
                "special: ppNEfQEEX/br0wA5yYJnCJEUoVNKLZhbdhcFkIHxdY": 1,
                "special: 8vv4dYJZIaG3fpWUeBWF3NHkYH/sw/IUIiE/NXCvKT0DXfrOtT3QuHy5fGyHRqwo": 1,
                "special: lDLclHQsgPbMG09wjl7LRHy/M4DU1Y4U/4Gu7ftV1fwfuubOjtOhERYx8seipfXiL": 1,
                "special: lpWWaZc9Ru05e0LFn7DIWT8BxyTzzTci/yasvr24mtTIAdg45LhPA0q9loUfdA2Qi": 1,
                "special: MWrcCRldjOhYtt2WA57wK4V70McFa3Fc/MPwoPvyTqD0usIDO4MQ": 1,
                "special: 4xIP8kP54/SynT5kE74eUAJGfteuek2KPk1YqKvfTM": 1,
                "special: V3K5gxiaBPSFfaQ2iEzbo52fD9JCB5Qq/6X9twYvgdX8z/VEVSMeWaQDf7rbD5Xr5zoEd2ToFF25hR": 1,
                "special: s4zWE2Np117lU/PbirJr4TjTXg9roXEbfaejm26WJhlQ3P": 1,
                "special: KcLV1/8XfT6": 1,
                "special: q/WMjfLqz8j7OyEHzbJduCXZtNVg5LBqm9": 1,
                "special: h47xxKDMdzGrdCAfduAqD7FT3icbHKA/CkAUDn4id8YYfnpKhhy0E5IgBn6ur4/fXcQEaFH7IVUrqxugaIkXksIpYKEH23O": 1,
                "special: DN3OdFNDhy1/VVzCd7t4z75WOfBHJFsQu7Vbis47NoC7": 1,
                "special: LyKRUHqYv/fu0k0FQfzsJ0RKd6ExiL01bYOohVzcAb": 1,
                "special: hgQA/iWuBa6Ghlqnu9N9OtDZEEHBOTEK5EvfC": 1,
                "special: REiX2N9cXzBFJUW9YWdBNG0dsiZy6S8X/6SjnpSgHKj": 1,
                "special: MI5HFBsOvziQZK2kKMcIivXUZDgdIroX/yF4KT/P0E2S11CYqOZ/8ZiyW0md": 1,
                "special: w8ZTG93y899XCevNjBtx0lqwMLFBP5/4pIB19W2h7tccMjEFeFKzHhHnnXAoNiI": 1,
                "special: ue9BefppJTn6yB9FQuyLbFQFhhf/AX": 1,
                "special: NTFUDXu6Hh/ZkCXsJ92464JfDYz8TsaDo4fk4fv93nw": 1,
                "special: fZ95EC/7NKs4409Y3yXPyEqfAnZwM1e5hG5r0X6": 1,
                "special: veH1HCvs4IttXgYUZtyNp1Q01HEc7z4m/CkkwcgukPF2dW768k1o5n": 1,
                "special: 1WVdMv/VvoZkYzc1bV7IR/zf5": 1,
                "special: yKiQYWuNsoWMSD56AAuzxDVqWgOHONJV/2I1Cw9mUh2Z7/FoJ1Am4oYgA28LrvMETLWQH33SL23cgC": 1,
                "special: ub2D/xq8hvV": 1,
                "special: 6c/TLWnUoiKTjkrAw": 1,
                "special: f8tFbWneSmcwDxklHfkjjrcKZAD0St9M/NiyYlABJmP83X1oCLmU5OLRbwbxCWP/ZtV1SUC6RYpzs2Pi1T8Yj4U6fcze3wAI": 1,
                "special: goEQV/uVnhz2DECw0pwWoVH": 1,
                "special: rXUC88/QP5JtoOlZswl1kKZ5801OV4vU3KNYbCq": 1,
                "special: UYb6kklDDZRIeF3b1HKGmP/CooYsUkzvQvG7eeuYQCJHdrDFt9ISN/rbuvfNqmBbnPv5KYZwWqCWe3CfJDRp1y": 1,
                "special: CEO3QfcfYSWIe3tFXVyNTNiGl7Eu53AG/CCP72AAYj": 1,
                "special: LMdNre0vogU/qNGI/MBZPP7Gi4cUIKfAPQW64qGEFDl6rM0KZ": 1,
                "special: Mr/hJmv9TL5U": 1,
                "special: bmWQ/vMF7qEPs7brOVWqSgK/0kLG8aYJu4uxHoMHDS6oV7niuW3mAKf3": 1,
                "special: S51VAANeGxgvkSYLpB3sAIJEI8pXIQbv/j5sg24xnhMl6NeXxUwd/govVxMOXOx2sdSkruXXsN1HSWVsWRFUK": 1,
                "special: cgUhf9/qcjZqBH0mhWdJIOKb5YJGpVWjnEtP9e2": 1,
                "special: UDOwHYgf1ztIl76lOxpbYQpsj5hYtO8N/6FVKqSVtGdxOFNxtizuHf5vIWKXA9kTT": 1,
                "special: He94VhgbK9xkYH/CAQ/Jrrfzx1D5usxKRQwMDM19A0KZixKUa4u": 1,
                "special: fBFYUaSh7r9ELTaSPKC/Nt/HWbWVVAG0spgo1BgpvrW0YAZw9Z08nig": 1,
                "special: 03pL938NmMK27dRmK3fAkp1uArvZMwhZ/uNbXCDOors1RDhAze6Jg9zNZPR/9Y3uQ6tfNhvwxQ": 1,
                "special: nX6JuHmP5OWWMlW4gNqC9H/bB9WmdQ": 1,
                "special: K4/xaZbhgEP2IhEc1bg5fb6/uWtqenwHrbxuamM0WxAegbWuWtV9nhX": 1,
                "special: 06XR62IqJZplvWNRKeN/0rsW1yhpYUJIvzQ1KSmAEL0JDVYhvrmY": 1,
                "special: m0KdskBNZDkonhKr08spT7AXtFuuNy3J/I22Gn4MhVqy5uzzPFyBRW": 1,
                "special: NUzDn03qmisa7vJo5FhavJPq3Wi5Mxcs/q2IDlYZTOWGuLwQyVua0YzwBwiDbRZr2": 1,
                "special: OQ4QiRWzuB6xYVKxNNPVe4onoJMH7pgl/HR3AhR1oP5Jl8VQXudWmlYr45WxebHk1": 1,
                "special: lKR1c03UUtykKXnbc4f/RZrMzaVr5e45Q3/GJp": 1,
                "special: brqEHZbgokfQ2YqRG/WQUEBiZEkLCFxMNcp7eQdlhVB": 1,
                "special: g4e4bzwEJeCl39/A6ynzCBZVLEkbNsGC7nA2l2p87jrGJks": 1,
                "special: FHldRYk0Cke6fc/lgJGGjy5Rmj2f2t9c4767LYpcUy": 1,
                "special: cxNmuWmi9u7XgLkfOL9qkTUZw5/Vcu8sl7nqPMmmP7EK151kEqnRBtuPuXR": 1,
                "special: QhVRFsVunsRtr9LFSojt9mDXjOikQMQe/a4sbG7omrBCyLpWTQRqGztiGtBV2FOw4": 1,
                "special: sZFMGBZ3ypjcpsyDkW/w659qKTt/yf/E": 1,
                "special: FqBo/6T65oh1Ke/njBJ486f9wRAv/jaHYWmN2tjWVzgMtjECvYG5ll8D045OO": 1,
                "special: 7l2Ianenq1RkrKLLys09d/pQcKQjhlDzCYh/lubr4p6BzHdEN9": 1,
                "special: eLdMUdCPCHGw0LCCgWEsWh1wQVbXjOKS/zRGgFM7yll/3QKQtPdNjAxmF/idYxt": 1,
                "special: yHc2245ZiOTpC4FyxSYp7VGSPelWkUIB/oyPc3Q1uDGuCmX4": 1,
                "special: vxmHD9tp3B/s759MJ/Dz9G6jQ5hy2Tf8Wl15UqYnSC3tQD3v5R": 1,
                "special: kkzavJm8/xtaFm6B3FVf4opLoAShypVeVNToVeUu9": 1,
                "special: x3oFn/Vobj4xn7vWXNvEg7DEhNgvy6cOyfOOb": 1,
                "special: So78A4fO8Z7yvFuyczsQ5fZkZ0v8vHz5/5O6lXgnMyRVXI4ewrDAqJGWtA49vD32N": 1,
                "special: NQFMeuas2Bvp4sUywH7Ju4N6cPlWzYgq/0o6mLQm4FWa6u7/Jkpr7wZfpzTA0yH4/JkA78W4/lAYmdymbkSWsgLceZss8wxBeNNCfjko1": 1,
                "special: RfxaKD3pzDyDUfKBpHPggP5zjMmoyIO2/AJI93sLB7C4qcotvEYUiSFHgluh8bBfx": 1,
                "special: sQY484ArhtWxmFFrNMkfzlUCk9naswKS/Lf6wBwyV6J9a5VbPQFRD/QQwTNm5tddz2aLCXDTQf14i68yrgry3W": 1,
                "special: YF8eHeHGZqBTmfEc8X47xFB02ReODf02/nk5XK1TG": 1,
                "special: uhPQTyZMwN0E316Mt5ecw9ad6ETJlADC/I5J27o9Ztv4i/lRZCeq4eg1z3A2mhtIJjybbyFpLt4Wc7": 1,
                "special: PMBdbOZp3ZT7gvD2Uxp6dnUYPdKi4Dti/um3jQfusaPQJu": 1,
                "special: J3eOSJsZBhVvx38fOPMREGfgMNBmyJm8/S/2HknHh2vQYS6XUkTXSkpZ6cq3QQoN8": 1,
                "special: M3DeKtsA1GOWI/jznV": 1,
                "special: chey5gda9DflxjpgOl/PvF91iTRl1vD6eShwX31HTrObQudm6dn": 1,
                "special: DGy4SZs7ZidpVgJX9Y2TOPt/ylWt2ROkwXB3j7YxV": 1,
                "special: DuiyhF1mpEEu5R/JKMB6WX62ZyK3j0bFEkbBPcVzl1vSSiq": 1,
                "special: NNWUIknBRGXdgb1Ey5ZLU/8TXqz9UDa/pRd9gfY": 1,
                "special: 8zdxyxnfIqpuJd4p/C1T8kFxKVPJV2/OviZFexO": 1,
                "special: r4xh8PMg/URIVj99VHT12qsjFBGqLU4FtMGHtHk3f": 1,
                "special: EcO/tGZ4edyRK34H4vlLUWegdk1Oz1wV6KPc": 1,
                "special: daaTEi3RXzJxxZAvnk0S3gopVxliF/PFn5nBLN": 1,
                "special: vU9MsE8vWEKPI9owCKRgWpjT9SVLpwx3/5c1hWHxZDRV9Nr/6KvZYaR8dGIPIpssHs7oePl690Z3VW7o": 1,
                "special: opt/go": 1,
                "special: go.buildid": 1,
                "special: atomic.CompareAndSwapUintptr": 1,
                "special: atomic.StoreUint32": 1,
                "special: atomic.StoreUintptr": 1,
                "special: cpu.Initialize": 1,
                "special: cpu.processOptions": 1,
                "special: cpu.indexByte": 1,
                "special: cpu.doinit": 1,
                "special: cpu.isSet": 1,
                "special: cpu.cpuid": 1,
                "special: cpu.xgetbv": 1,
                "special: hash.internal": 5,
                "special: eq.internal": 5,
                "special: atomic.Cas64": 1,
                "special: runtime/internal/atomic": 5,
                "special: atomic.Casuintptr": 1,
                "special: atomic.Storeuintptr": 1,
                "special: atomic.Store": 1,
                "special: atomic.Store64": 1,
                "special: bytealg.countGeneric": 1,
                "special: internal/bytealg": 12,
                "special: bytealg.countGenericString": 1,
                "special: bytealg.init.0": 1,
                "special: bytealg.init": 1,
                "special: runtime.cmpstring": 1,
                "special: bytealg.Count": 1,
                "special: bytealg.CountString": 1,
                "special: bytealg.Equal": 1,
                "special: runtime.memequal": 2,
                "special: bytealg.Index": 1,
                "special: bytealg.IndexString": 1,
                "special: bytealg.IndexByte": 1,
                "special: bytealg.IndexByteString": 1,
                "special: runtime.memhash0": 1,
                "special: runtime.memhash8": 1,
                "special: runtime.memhash16": 1,
                "special: runtime.memhash128": 1,
                "special: runtime.memhash": 2,
                "special: runtime.strhash": 1,
                "special: runtime.f32hash": 1,
                "special: runtime.fastrand": 1,
                "special: runtime.f64hash": 1,
                "special: runtime.c64hash": 1,
                "special: runtime.c128hash": 1,
                "special: runtime.interhash": 1,
                "special: runtime.isDirectIface": 1,
                "special: runtime.nilinterhash": 1,
                "special: runtime.memequal0": 1,
                "special: runtime.memequal8": 1,
                "special: runtime.memequal16": 1,
                "special: runtime.memequal32": 1,
                "special: runtime.memequal64": 1,
                "special: runtime.memequal128": 1,
                "special: runtime.f32equal": 1,
                "special: runtime.f64equal": 1,
                "special: runtime.c64equal": 1,
                "special: runtime.c128equal": 1,
                "special: runtime.strequal": 1,
                "special: runtime.interequal": 1,
                "special: runtime.nilinterequal": 1,
                "special: runtime.efaceeq": 1,
                "special: runtime.ifaceeq": 1,
                "special: runtime.alginit": 1,
                "special: runtime.initAlgAES": 1,
                "special: runtime.atomicwb": 1,
                "special: runtime.atomicstorep": 1,
                "special: atomic.StorePointer": 1,
                "special: atomic.CompareAndSwapPointer": 1,
                "special: runtime.cgoUse": 1,
                "special: runtime.cgocall": 1,
                "special: runtime.cgocallbackg": 1,
                "special: runtime.lockOSThread": 1,
                "special: runtime.dolockOSThread": 1,
                "special: runtime.exit": 1,
                "special: runtime.cgocallbackg1": 1,
                "special: runtime.unwindm": 1,
                "special: runtime.acquirem": 1,
                "special: runtime.releasem": 1,
                "special: runtime.cgoCheckPointer": 1,
                "special: runtime.cgoCheckArg": 1,
                "special: runtime.add": 1,
                "special: runtime.inheap": 1,
                "special: runtime.cgoCheckUnknownPointer": 1,
                "special: runtime.activeModules": 1,
                "special: runtime.cgoInRange": 1,
                "special: runtime.heapBitsForAddr": 1,
                "special: runtime.arenaIndex": 1,
                "special: runtime.arenaIdx.l1": 1,
                "special: runtime.arenaIdx.l2": 1,
                "special: runtime.heapBits.morePointers": 1,
                "special: runtime.heapBits.bits": 1,
                "special: runtime.heapBits.isPointer": 1,
                "special: runtime.heapBits.next": 1,
                "special: runtime.add1": 1,
                "special: runtime.cgoIsGoPointer": 1,
                "special: runtime.gostringnocopy": 1,
                "special: runtime.cgoCheckWriteBarrier": 1,
                "special: runtime.cgoCheckMemmove": 1,
                "special: runtime.cgoCheckSliceCopy": 1,
                "special: runtime.cgoCheckTypedBlock": 1,
                "special: runtime.spanOfUnchecked": 1,
                "special: runtime.cgoCheckBits": 1,
                "special: runtime.addb": 1,
                "special: runtime.cgoCheckUsingType": 1,
                "special: runtime.makechan": 1,
                "special: runtime.chansend1": 1,
                "special: runtime.chansend": 1,
                "special: runtime.goparkunlock": 1,
                "special: runtime.chanbuf": 1,
                "special: runtime.send": 1,
                "special: runtime.sendDirect": 1,
                "special: runtime.recvDirect": 1,
                "special: runtime.closechan": 1,
                "special: runtime.chanrecv1": 1,
                "special: runtime.chanrecv2": 1,
                "special: runtime.chanrecv": 1,
                "special: runtime.recv": 3,
                "special: runtime.selectnbrecv": 1,
                "special: reflect.chansend": 1,
                "special: reflect.chanrecv": 1,
                "special: reflect.chanlen": 1,
                "special: reflect.chancap": 1,
                "special: reflect.chanclose": 1,
                "special: runtime.init.0": 1,
                "special: runtime.GOMAXPROCS": 1,
                "special: runtime.debugCallCheck": 1,
                "special: runtime.debugCallWrap": 1,
                "special: runtime.dumpregs": 1,
                "special: runtime.gogetenv": 1,
                "special: runtime.envKeyEqual": 1,
                "special: runtime.lowerASCII": 1,
                "special: runtime.errorString.RuntimeError": 1,
                "special: runtime.errorString.Error": 1,
                "special: runtime.plainError.RuntimeError": 1,
                "special: runtime.plainError.Error": 1,
                "special: runtime.printany": 1,
                "special: runtime.typestring": 1,
                "special: runtime.panicwrap": 1,
                "special: runtime.Caller": 1,
                "special: runtime.CallersFrames": 1,
                "special: runtime.GOROOT": 1,
                "special: runtime.float64frombits": 1,
                "special: runtime.readUnaligned64": 1,
                "special: runtime.rotl": 1,
                "special: runtime.readUnaligned32": 1,
                "special: runtime.memhash32": 1,
                "special: runtime.memhash64": 1,
                "special: runtime.getitab": 1,
                "special: runtime.itabHashFunc": 1,
                "special: runtime.itabAdd": 1,
                "special: runtime.name.isExported": 1,
                "special: runtime.itabsinit": 1,
                "special: runtime.panicdottypeE": 1,
                "special: runtime.panicdottypeI": 1,
                "special: runtime.convT2E": 1,
                "special: runtime.convT16": 1,
                "special: runtime.convT32": 1,
                "special: runtime.convT64": 1,
                "special: runtime.convTstring": 1,
                "special: runtime.convTslice": 1,
                "special: runtime.convT2I": 1,
                "special: runtime.convI2I": 1,
                "special: runtime.assertI2I": 1,
                "special: runtime.assertI2I2": 1,
                "special: runtime.assertE2I": 1,
                "special: runtime.assertE2I2": 1,
                "special: reflect.ifaceE2I": 1,
                "special: runtime.iterate": 1,
                "special: runtime.lfstackPack": 1,
                "special: runtime.lfstackUnpack": 1,
                "special: runtime.lfnodeValidate": 1,
                "special: runtime.lock": 11,
                "special: runtime.osyield": 1,
                "special: runtime.unlock": 1,
                "special: runtime.notewakeup": 1,
                "special: runtime.notesleep": 1,
                "special: runtime.notetsleep": 2,
                "special: runtime.notetsleepg": 1,
                "special: runtime.mallocinit": 1,
                "special: runtime.round": 1,
                "special: runtime.sysReserveAligned": 1,
                "special: runtime.mallocgc": 1,
                "special: runtime.gomcache": 1,
                "special: runtime.nextFreeFast": 1,
                "special: runtime.gcTrigger.test": 1,
                "special: runtime.makeSpanClass": 1,
                "special: runtime.bool2int": 1,
                "special: runtime.largeAlloc": 1,
                "special: runtime.newobject": 1,
                "special: reflect.unsafe": 2,
                "special: runtime.newarray": 1,
                "special: runtime.profilealloc": 1,
                "special: runtime.nextSample": 1,
                "special: runtime.fastexprand": 1,
                "special: runtime.fastlog2": 1,
                "special: runtime.float64bits": 1,
                "special: runtime.persistentalloc": 1,
                "special: runtime.persistentalloc1": 1,
                "special: runtime.inPersistentAlloc": 1,
                "special: runtime.makemap": 2,
                "special: runtime.overLoadFactor": 1,
                "special: runtime.bucketShift": 1,
                "special: runtime.makeBucketArray": 1,
                "special: runtime.roundupsize": 1,
                "special: runtime.mapaccess1": 4,
                "special: runtime.bucketMask": 1,
                "special: runtime.evacuated": 1,
                "special: runtime.tophash": 1,
                "special: runtime.mapaccess2": 4,
                "special: runtime.mapaccessK": 1,
                "special: runtime.mapassign": 5,
                "special: runtime.isEmpty": 1,
                "special: runtime.tooManyOverflowBuckets": 1,
                "special: runtime.mapdelete": 3,
                "special: runtime.mapiterinit": 1,
                "special: runtime.mapiternext": 1,
                "special: runtime.hashGrow": 1,
                "special: runtime.growWork": 4,
                "special: runtime.evacuate": 4,
                "special: runtime.advanceEvacuationMark": 1,
                "special: runtime.bucketEvacuated": 1,
                "special: reflect.makemap": 1,
                "special: runtime.ismapkey": 1,
                "special: reflect.mapaccess": 1,
                "special: reflect.mapassign": 1,
                "special: reflect.mapdelete": 1,
                "special: reflect.mapiterinit": 1,
                "special: reflect.mapiternext": 1,
                "special: reflect.mapiterkey": 1,
                "special: reflect.mapitervalue": 1,
                "special: reflect.maplen": 1,
                "special: runtime.typedmemmove": 1,
                "special: reflect.typedmemmove": 1,
                "special: reflect.typedmemmovepartial": 1,
                "special: runtime.reflectcallmove": 1,
                "special: runtime.typedslicecopy": 1,
                "special: reflect.typedslicecopy": 1,
                "special: runtime.typedmemclr": 1,
                "special: reflect.typedmemclr": 1,
                "special: reflect.typedmemclrpartial": 1,
                "special: runtime.memclrHasPointers": 1,
                "special: runtime.markBitsForAddr": 1,
                "special: runtime.spanOf": 1,
                "special: runtime.findObject": 1,
                "special: runtime.heapBits.nextArena": 1,
                "special: runtime.heapBits.forward": 1,
                "special: runtime.heapBits.forwardOrBoundary": 1,
                "special: runtime.bulkBarrierPreWrite": 1,
                "special: runtime.puintptr.ptr": 1,
                "special: runtime.bulkBarrierPreWriteSrcOnly": 1,
                "special: runtime.bulkBarrierBitmap": 1,
                "special: runtime.typeBitsBulkBarrier": 1,
                "special: runtime.heapBits.initSpan": 1,
                "special: runtime.newAllocBits": 1,
                "special: runtime.heapBits.initCheckmarkSpan": 1,
                "special: runtime.heapBits.clearCheckmarkSpan": 1,
                "special: runtime.heapBitsSetType": 1,
                "special: runtime.heapBitsSetTypeGCProg": 1,
                "special: runtime.progToPointerMask": 1,
                "special: runtime.runGCProg": 1,
                "special: runtime.subtract1": 1,
                "special: runtime.subtractb": 1,
                "special: runtime.materializeGCProg": 1,
                "special: runtime.allocmcache": 1,
                "special: runtime.freemcache": 1,
                "special: runtime.spanClass.sizeclass": 1,
                "special: runtime.traceHeapAlloc": 1,
                "special: runtime.sysAlloc": 1,
                "special: runtime.sysUnused": 1,
                "special: runtime.sysUsed": 1,
                "special: runtime.sysFree": 1,
                "special: runtime.sysFault": 1,
                "special: runtime.sysReserve": 1,
                "special: runtime.sysMap": 1,
                "special: runtime.queuefinalizer": 1,
                "special: runtime.wakefing": 1,
                "special: runtime.createfing": 1,
                "special: runtime.runfinq": 1,
                "special: runtime.gcinit": 1,
                "special: runtime.readgogc": 1,
                "special: runtime.atoi32": 1,
                "special: runtime.gcenable": 1,
                "special: debug.setGCPercent": 1,
                "special: runtime/debug": 2,
                "special: runtime.fastrandn": 1,
                "special: runtime.preemptone": 1,
                "special: runtime.gcMarkWorkAvailable": 1,
                "special: findRunnableGCWorker.func1": 1,
                "special: runtime.guintptr.ptr": 1,
                "special: runtime.pollFractionalWorkerExit": 1,
                "special: runtime.gcSetTriggerRatio": 1,
                "special: runtime.isSweepDone": 1,
                "special: runtime.GC": 1,
                "special: runtime.Gosched": 1,
                "special: runtime.gcWaitOnMark": 1,
                "special: runtime.gcStart": 1,
                "special: runtime.semacquire": 1,
                "special: runtime.setGCPhase": 1,
                "special: runtime.gcBgMarkPrepare": 1,
                "special: runtime.semrelease": 1,
                "special: runtime.traceGCSTWStart": 1,
                "special: runtime.traceGCStart": 1,
                "special: runtime.gcMarkDone": 1,
                "special: runtime.gcMarkTermination": 1,
                "special: runtime.traceGCDone": 1,
                "special: runtime.gcBgMarkStartWorkers": 1,
                "special: runtime.noteclear": 1,
                "special: runtime.gcBgMarkWorker": 1,
                "special: runtime.gcMark": 1,
                "special: runtime.gcSweep": 1,
                "special: runtime.gcResetMarkState": 1,
                "special: sync.runtime": 10,
                "special: runtime.clearpools": 1,
                "special: runtime.itoaDiv": 1,
                "special: runtime.fmtNSAsMS": 1,
                "special: runtime.treapIter.prev": 1,
                "special: runtime.gcMarkRootPrepare": 1,
                "special: runtime.gcMarkRootPrepare.func1": 1,
                "special: runtime.gcMarkRootCheck": 1,
                "special: runtime.readgstatus": 1,
                "special: runtime.markroot": 1,
                "special: runtime.markrootBlock": 1,
                "special: runtime.markrootFreeGStacks": 1,
                "special: runtime.markrootSpans": 1,
                "special: runtime.gcAssistAlloc": 1,
                "special: runtime.traceGCMarkAssistDone": 1,
                "special: runtime.traceGCMarkAssistStart": 1,
                "special: runtime.gcAssistAlloc1": 1,
                "special: runtime.gcWakeAllAssists": 1,
                "special: runtime.gcParkAssist": 1,
                "special: runtime.gcFlushBgCredit": 1,
                "special: runtime.scanstack": 1,
                "special: runtime.dematerializeGCProg": 1,
                "special: runtime.scanframeworker": 1,
                "special: runtime.gcDrain": 1,
                "special: runtime.gcDrainN": 1,
                "special: runtime.scanblock": 1,
                "special: runtime.scanobject": 1,
                "special: runtime.spanClass.noscan": 1,
                "special: runtime.shade": 1,
                "special: runtime.greyobject": 1,
                "special: runtime.markBits.isMarked": 1,
                "special: runtime.heapBits.isCheckmarked": 1,
                "special: runtime.heapBits.setCheckmarked": 1,
                "special: runtime.markBits.setMarked": 1,
                "special: runtime.pageIndexOf": 1,
                "special: runtime.gcDumpObject": 1,
                "special: runtime.gcmarknewobject": 1,
                "special: runtime.gcMarkTinyAllocs": 1,
                "special: runtime.initCheckmarks": 1,
                "special: runtime.clearCheckmarks": 1,
                "special: runtime.init.1": 1,
                "special: runtime.binarySearchTree": 1,
                "special: runtime.finishsweep": 1,
                "special: runtime.bgsweep": 1,
                "special: runtime.sweepone": 1,
                "special: runtime.markBits.setMarkedNonAtomic": 1,
                "special: runtime.deductSweepCredit": 1,
                "special: runtime.clobberfree": 1,
                "special: runtime.init.2": 1,
                "special: runtime.getempty": 1,
                "special: runtime.putempty": 1,
                "special: runtime.putfull": 1,
                "special: runtime.trygetfull": 1,
                "special: runtime.handoff": 1,
                "special: runtime.prepareFreeWorkbufs": 1,
                "special: runtime.freeSomeWbufs": 1,
                "special: runtime.recordspan": 1,
                "special: runtime.inHeapOrStack": 1,
                "special: runtime.spanOfHeap": 1,
                "special: runtime.treapIter.next": 1,
                "special: runtime.addspecial": 1,
                "special: runtime.removespecial": 1,
                "special: runtime.addfinalizer": 1,
                "special: runtime.removefinalizer": 1,
                "special: runtime.setprofilebucket": 1,
                "special: runtime.freespecial": 1,
                "special: runtime.newMarkBits": 1,
                "special: runtime.nextMarkBitArenaEpoch": 1,
                "special: runtime.newArenaMayUnlock": 1,
                "special: runtime.newBucket": 1,
                "special: runtime.stkbucket": 1,
                "special: runtime.eqslice": 1,
                "special: runtime.mProf": 7,
                "special: runtime.blockevent": 1,
                "special: runtime.blocksampled": 1,
                "special: runtime.saveblockevent": 1,
                "special: sync.event": 1,
                "special: runtime.tracealloc": 1,
                "special: runtime.tracefree": 1,
                "special: runtime.tracegc": 1,
                "special: runtime.init.3": 1,
                "special: runtime.cachestats": 1,
                "special: runtime.flushmcache": 1,
                "special: runtime.purgecachedstats": 1,
                "special: runtime.mSysStatInc": 1,
                "special: runtime.mSysStatDec": 1,
                "special: runtime.wbBufFlush": 1,
                "special: runtime.wbBufFlush1": 1,
                "special: poll.runtime": 10,
                "special: runtime.netpollcheckerr": 1,
                "special: runtime.netpollgoready": 1,
                "special: runtime.netpollready": 1,
                "special: runtime.netpollblockcommit": 1,
                "special: runtime.netpollblock": 1,
                "special: runtime.netpollunblock": 1,
                "special: runtime.netpolldeadlineimpl": 1,
                "special: runtime.netpollDeadline": 1,
                "special: runtime.netpollReadDeadline": 1,
                "special: runtime.netpollWriteDeadline": 1,
                "special: runtime.netpollinit": 1,
                "special: runtime.netpollopen": 1,
                "special: runtime.handlecompletion": 1,
                "special: runtime.windowsFindfunc": 1,
                "special: runtime.windowsLoadSystemLib": 1,
                "special: runtime.loadOptionalSyscalls": 1,
                "special: runtime.getproccount": 1,
                "special: runtime.osRelax": 1,
                "special: runtime.osinit": 1,
                "special: runtime.funcPC": 1,
                "special: runtime.getPageSize": 1,
                "special: runtime.nanotimeQPC": 1,
                "special: runtime.nowQPC": 1,
                "special: runtime.initWine": 1,
                "special: runtime.getRandomData": 1,
                "special: runtime.goenvs": 1,
                "special: runtime.write": 1,
                "special: runtime.writeConsole": 1,
                "special: runtime.writeConsoleUTF16": 1,
                "special: runtime.semasleep": 1,
                "special: runtime.semawakeup": 1,
                "special: runtime.semacreate": 1,
                "special: runtime.newosproc": 1,
                "special: runtime.mcount": 1,
                "special: runtime.exitThread": 1,
                "special: runtime.minit": 1,
                "special: runtime.stdcall": 1,
                "special: runtime.stdcall0": 1,
                "special: runtime.stdcall1": 1,
                "special: runtime.stdcall2": 1,
                "special: runtime.stdcall3": 1,
                "special: runtime.stdcall4": 1,
                "special: runtime.stdcall5": 1,
                "special: runtime.stdcall6": 1,
                "special: runtime.stdcall7": 1,
                "special: runtime.ctrlhandler1": 1,
                "special: runtime.setThreadCPUProfiler": 1,
                "special: runtime.panicCheckMalloc": 1,
                "special: runtime.panicindex": 1,
                "special: runtime.hasPrefix": 1,
                "special: runtime.panicslice": 1,
                "special: runtime.panicdivide": 1,
                "special: runtime.throwinit": 1,
                "special: runtime.deferproc": 1,
                "special: runtime.deferArgs": 1,
                "special: runtime.testdefersizes": 1,
                "special: runtime.deferclass": 1,
                "special: runtime.totaldefersize": 1,
                "special: runtime.init.4": 1,
                "special: runtime.newdefer": 1,
                "special: runtime.freedefer": 1,
                "special: runtime.freedeferpanic": 1,
                "special: runtime.freedeferfn": 1,
                "special: runtime.deferreturn": 1,
                "special: runtime.preprintpanics": 1,
                "special: runtime.printpanics": 1,
                "special: runtime.gopanic": 1,
                "special: runtime.getargp": 1,
                "special: runtime.gorecover": 1,
                "special: sync.throw": 1,
                "special: runtime.throw": 1,
                "special: runtime.recovery": 1,
                "special: runtime.fatalthrow": 1,
                "special: runtime.fatalpanic": 1,
                "special: runtime.startpanic": 1,
                "special: runtime.dopanic": 1,
                "special: runtime.gotraceback": 1,
                "special: runtime.canpanic": 1,
                "special: runtime.recordForPanic": 1,
                "special: runtime.printlock": 1,
                "special: runtime.printunlock": 1,
                "special: runtime.gwrite": 1,
                "special: runtime.printsp": 1,
                "special: runtime.printnl": 1,
                "special: runtime.printbool": 1,
                "special: runtime.printfloat": 1,
                "special: runtime.printcomplex": 1,
                "special: runtime.printuint": 1,
                "special: runtime.printint": 1,
                "special: runtime.printhex": 1,
                "special: runtime.printpointer": 1,
                "special: runtime.printstring": 1,
                "special: runtime.bytes": 1,
                "special: runtime.printslice": 1,
                "special: runtime.printeface": 1,
                "special: runtime.hexdumpWords": 1,
                "special: runtime.funcInfo.valid": 1,
                "special: runtime.main": 1,
                "special: runtime.startTemplateThread": 1,
                "special: os.runtime": 1,
                "special: runtime.init.5": 1,
                "special: runtime.forcegchelper": 1,
                "special: runtime.gopark": 1,
                "special: runtime.goready": 1,
                "special: runtime.acquireSudog": 1,
                "special: runtime.releaseSudog": 1,
                "special: runtime.badmcall": 1,
                "special: runtime.badmcall2": 1,
                "special: runtime.badreflectcall": 1,
                "special: runtime.badmorestackg0": 1,
                "special: runtime.badmorestackgsignal": 1,
                "special: runtime.badctxt": 1,
                "special: runtime.allgadd": 1,
                "special: runtime.cpuinit": 1,
                "special: runtime.schedinit": 1,
                "special: runtime.tracebackinit": 1,
                "special: runtime.checkmcount": 1,
                "special: runtime.mcommoninit": 1,
                "special: runtime.ready": 1,
                "special: runtime.wakep": 1,
                "special: runtime.dumpgstatus": 1,
                "special: runtime.freezetheworld": 1,
                "special: runtime.usleep": 1,
                "special: runtime.casfrom": 1,
                "special: runtime.castogscanstatus": 1,
                "special: runtime.casgstatus": 1,
                "special: runtime.scang": 1,
                "special: runtime.restartg": 1,
                "special: runtime.stopTheWorld": 1,
                "special: runtime.startTheWorld": 1,
                "special: runtime.stopTheWorldWithSema": 1,
                "special: runtime.pidleget": 1,
                "special: runtime.startTheWorldWithSema": 1,
                "special: runtime.netpollinited": 1,
                "special: runtime.traceGCSTWDone": 1,
                "special: runtime.mstart": 1,
                "special: runtime.mstart1": 1,
                "special: runtime.mstartm0": 1,
                "special: runtime.mexit": 1,
                "special: runtime.unminit": 1,
                "special: runtime.forEachP": 1,
                "special: runtime.runSafePointFn": 1,
                "special: runtime.allocm": 1,
                "special: runtime.needm": 1,
                "special: runtime.unlockextra": 1,
                "special: runtime.newextram": 1,
                "special: runtime.oneNewExtraM": 1,
                "special: runtime.dropm": 1,
                "special: runtime.lockextra": 1,
                "special: runtime.newm": 3,
                "special: runtime.newm1": 1,
                "special: runtime.templateThread": 1,
                "special: runtime.muintptr.ptr": 1,
                "special: runtime.stopm": 1,
                "special: runtime.mput": 1,
                "special: runtime.mspinning": 1,
                "special: runtime.startm": 1,
                "special: runtime.mget": 1,
                "special: runtime.handoffp": 1,
                "special: runtime.stoplockedm": 1,
                "special: runtime.startlockedm": 1,
                "special: runtime.gcstopm": 1,
                "special: runtime.execute": 1,
                "special: runtime.findrunnable": 1,
                "special: runtime.pollWork": 1,
                "special: runtime.resetspinning": 1,
                "special: runtime.injectglist": 1,
                "special: runtime.globrunqput": 1,
                "special: runtime.schedule": 1,
                "special: runtime.parkunlock": 1,
                "special: runtime.park": 1,
                "special: runtime.dropg": 1,
                "special: runtime.setMNoWB": 1,
                "special: runtime.setGNoWB": 1,
                "special: runtime.goschedImpl": 1,
                "special: runtime.gosched": 1,
                "special: runtime.traceGoSched": 1,
                "special: runtime.gopreempt": 1,
                "special: runtime.traceGoPreempt": 1,
                "special: runtime.goexit1": 1,
                "special: runtime.traceGoEnd": 1,
                "special: runtime.goexit0": 1,
                "special: runtime.save": 1,
                "special: runtime.reentersyscall": 1,
                "special: runtime.entersyscall": 3,
                "special: runtime.entersyscallblock": 2,
                "special: runtime.traceGoSysCall": 1,
                "special: runtime.exitsyscall": 1,
                "special: runtime.exitsyscallfast": 4,
                "special: runtime.exitsyscall0": 1,
                "special: runtime.malg": 1,
                "special: runtime.newproc": 1,
                "special: runtime.newproc1": 1,
                "special: runtime.gostartcallfn": 1,
                "special: runtime.gostartcall": 1,
                "special: runtime.stackmapdata": 1,
                "special: runtime.saveAncestors": 1,
                "special: runtime.gfput": 1,
                "special: runtime.gfget": 1,
                "special: runtime.gfpurge": 1,
                "special: runtime.LockOSThread": 1,
                "special: runtime.UnlockOSThread": 1,
                "special: runtime.dounlockOSThread": 1,
                "special: runtime.unlockOSThread": 1,
                "special: runtime.badunlockosthread": 1,
                "special: runtime.procresize": 1,
                "special: runtime.globrunqputhead": 1,
                "special: runtime.traceGomaxprocs": 1,
                "special: runtime.acquirep": 1,
                "special: runtime.wirep": 1,
                "special: runtime.releasep": 1,
                "special: runtime.incidlelocked": 1,
                "special: runtime.checkdead": 1,
                "special: runtime.sysmon": 1,
                "special: runtime.retake": 1,
                "special: runtime.preemptall": 1,
                "special: runtime.schedtrace": 1,
                "special: runtime.waitReason.String": 1,
                "special: runtime.schedEnableUser": 1,
                "special: runtime.globrunqputbatch": 1,
                "special: runtime.schedEnabled": 1,
                "special: runtime.globrunqget": 1,
                "special: runtime.pidleput": 1,
                "special: runtime.runqempty": 1,
                "special: runtime.runqput": 1,
                "special: runtime.runqputslow": 1,
                "special: runtime.runqget": 1,
                "special: runtime.runqgrab": 1,
                "special: runtime.runqsteal": 1,
                "special: runtime.procPin": 1,
                "special: runtime.procUnpin": 1,
                "special: atomic.runtime": 2,
                "special: runtime.gcd": 1,
                "special: syscall.Exit": 1,
                "special: runtime.args": 1,
                "special: runtime.testAtomic64": 1,
                "special: runtime.check": 1,
                "special: runtime.parsedebugvars": 1,
                "special: debug.SetTraceback": 1,
                "special: runtime.timediv": 1,
                "special: reflect.typelinks": 1,
                "special: reflect.resolveNameOff": 1,
                "special: reflect.resolveTypeOff": 1,
                "special: reflect.resolveTextOff": 1,
                "special: reflect.addReflectOff": 1,
                "special: runtime.reflectOffsLock": 1,
                "special: runtime.reflectOffsUnlock": 1,
                "special: runtime.extendRandom": 1,
                "special: runtime.readyWithTime": 1,
                "special: runtime.semacquire1": 1,
                "special: runtime.semroot": 1,
                "special: runtime.semrelease1": 1,
                "special: runtime.cansemacquire": 1,
                "special: runtime.disableWER": 1,
                "special: runtime.initExceptionHandler": 1,
                "special: runtime.isAbort": 1,
                "special: runtime.isAbortPC": 1,
                "special: runtime.isgoexception": 1,
                "special: runtime.exceptionhandler": 1,
                "special: runtime.firstcontinuehandler": 1,
                "special: runtime.lastcontinuehandler": 1,
                "special: runtime.sigpanic": 1,
                "special: runtime.panicmem": 1,
                "special: runtime.panicfloat": 1,
                "special: runtime.panicoverflow": 1,
                "special: runtime.setBadSignalMsg": 1,
                "special: runtime.sigsend": 1,
                "special: runtime.makeslice": 1,
                "special: runtime.panicmakeslicelen": 1,
                "special: runtime.panicmakeslicecap": 1,
                "special: runtime.growslice": 1,
                "special: runtime.isPowerOfTwo": 1,
                "special: runtime.stackinit": 1,
                "special: runtime.stacklog2": 1,
                "special: runtime.stackpoolalloc": 1,
                "special: runtime.gclinkptr.ptr": 1,
                "special: runtime.stackpoolfree": 1,
                "special: runtime.stackcacherefill": 1,
                "special: runtime.stackcacherelease": 1,
                "special: runtime.stackcache": 1,
                "special: runtime.stackalloc": 1,
                "special: runtime.stackfree": 1,
                "special: runtime.adjustpointers": 1,
                "special: sys.Ctz8": 1,
                "special: runtime.adjustframe": 1,
                "special: runtime.adjustpointer": 1,
                "special: runtime.adjustctxt": 1,
                "special: runtime.adjustdefers": 1,
                "special: runtime.adjustsudogs": 1,
                "special: runtime.findsghi": 1,
                "special: runtime.syncadjustsudogs": 1,
                "special: runtime.copystack": 1,
                "special: runtime.adjustpanics": 1,
                "special: runtime.round2": 1,
                "special: runtime.newstack": 1,
                "special: runtime.shrinkstack": 1,
                "special: runtime.freeStackSpans": 1,
                "special: runtime.getStackMap": 1,
                "special: runtime.morestackc": 1,
                "special: runtime.concatstrings": 1,
                "special: runtime.stringDataOnStack": 1,
                "special: runtime.concatstring2": 1,
                "special: runtime.concatstring3": 1,
                "special: runtime.concatstring4": 1,
                "special: runtime.concatstring5": 1,
                "special: runtime.slicebytetostring": 1,
                "special: runtime.rawstringtmp": 1,
                "special: runtime.stringtoslicebyte": 1,
                "special: runtime.stringtoslicerune": 1,
                "special: runtime.slicerunetostring": 1,
                "special: runtime.intstring": 1,
                "special: runtime.rawstring": 1,
                "special: runtime.rawbyteslice": 1,
                "special: runtime.rawruneslice": 1,
                "special: runtime.gostring": 1,
                "special: runtime.index": 1,
                "special: runtime.atoi": 1,
                "special: runtime.findnull": 1,
                "special: runtime.gostringw": 1,
                "special: runtime.badsystemstack": 1,
                "special: reflect.memmove": 1,
                "special: runtime.expandCgoFrames": 1,
                "special: runtime.modulesinit": 1,
                "special: runtime.moduledataverify": 1,
                "special: runtime.moduledataverify1": 1,
                "special: runtime.FuncForPC": 1,
                "special: runtime.findmoduledatap": 1,
                "special: runtime.findfunc": 1,
                "special: runtime.pcvalue": 1,
                "special: runtime.pcvalueCacheKey": 1,
                "special: runtime.funcname": 1,
                "special: runtime.cfuncname": 1,
                "special: runtime.funcnameFromNameoff": 1,
                "special: runtime.funcline1": 1,
                "special: runtime.funcline": 1,
                "special: runtime.funcspdelta": 1,
                "special: runtime.pcdatavalue": 1,
                "special: runtime.pcdatastart": 1,
                "special: runtime.pcdatavalue1": 1,
                "special: runtime.funcdata": 1,
                "special: runtime.step": 1,
                "special: runtime.readvarint": 1,
                "special: syscall.loadsystemlibrary": 1,
                "special: runtime.getLoadLibraryEx": 1,
                "special: runtime.getLoadLibrary": 1,
                "special: syscall.loadlibrary": 1,
                "special: syscall.getprocaddress": 1,
                "special: runtime.getGetProcAddress": 1,
                "special: syscall.Syscall": 1,
                "special: syscall.Syscall6": 1,
                "special: syscall.Syscall9": 1,
                "special: syscall.Syscall12": 1,
                "special: syscall.Syscall15": 1,
                "special: syscall.Syscall18": 1,
                "special: time.Sleep": 1,
                "special: runtime.badTimer": 1,
                "special: runtime.goroutineReady": 1,
                "special: runtime.addtimer": 1,
                "special: runtime.deltimer": 1,
                "special: runtime.modtimer": 1,
                "special: runtime.timerproc": 1,
                "special: runtime.timejump": 1,
                "special: runtime.timejumpLocked": 1,
                "special: runtime.timeSleepUntil": 1,
                "special: runtime.siftupTimer": 1,
                "special: runtime.siftdownTimer": 1,
                "special: runtime.traceReader": 1,
                "special: runtime.traceProcFree": 1,
                "special: runtime.traceFullQueue": 1,
                "special: runtime.traceBufPtr.ptr": 1,
                "special: runtime.traceEvent": 1,
                "special: runtime.traceEventLocked": 1,
                "special: runtime.traceStackID": 1,
                "special: runtime.traceAcquireBuffer": 1,
                "special: runtime.traceReleaseBuffer": 1,
                "special: runtime.traceFlush": 1,
                "special: runtime.traceProcStart": 1,
                "special: runtime.traceProcStop": 1,
                "special: runtime.traceGCSweepStart": 1,
                "special: runtime.traceGCSweepSpan": 1,
                "special: runtime.traceGCSweepDone": 1,
                "special: runtime.traceGoCreate": 1,
                "special: runtime.traceGoStart": 1,
                "special: runtime.traceGoPark": 1,
                "special: runtime.traceGoUnpark": 1,
                "special: runtime.traceGoSysExit": 1,
                "special: runtime.traceGoSysBlock": 1,
                "special: runtime.traceNextGC": 1,
                "special: runtime.tracebackdefers": 1,
                "special: runtime.getArgInfoFast": 1,
                "special: runtime.gentraceback": 1,
                "special: runtime.topofstack": 1,
                "special: runtime.elideWrapperCalling": 1,
                "special: runtime.getArgInfo": 1,
                "special: runtime.tracebackCgoContext": 1,
                "special: runtime.printcreatedby": 1,
                "special: runtime.printcreatedby1": 1,
                "special: runtime.traceback": 1,
                "special: runtime.tracebacktrap": 1,
                "special: runtime.traceback1": 1,
                "special: runtime.printAncestorTraceback": 1,
                "special: runtime.printAncestorTracebackFuncInfo": 1,
                "special: runtime.callers": 1,
                "special: runtime.gcallers": 1,
                "special: runtime.showframe": 1,
                "special: runtime.showfuncinfo": 1,
                "special: runtime.contains": 1,
                "special: runtime.isExportedRuntime": 1,
                "special: runtime.goroutineheader": 1,
                "special: runtime.tracebackothers": 1,
                "special: runtime.tracebackHexdump": 1,
                "special: runtime.isSystemGoroutine": 1,
                "special: runtime.printCgoTraceback": 1,
                "special: runtime.printOneCgoTraceback": 1,
                "special: runtime.callCgoSymbolizer": 1,
                "special: runtime.cgoContextPCs": 1,
                "special: runtime.resolveNameOff": 1,
                "special: runtime.resolveTypeOff": 1,
                "special: runtime.name.tagLen": 1,
                "special: runtime.name.data": 1,
                "special: runtime.name.nameLen": 1,
                "special: runtime.name.name": 1,
                "special: runtime.name.tag": 1,
                "special: runtime.name.pkgPath": 1,
                "special: runtime.typelinksinit": 1,
                "special: runtime.typesEqual": 1,
                "special: runtime.decoderune": 1,
                "special: runtime.encoderune": 1,
                "special: runtime.writeErr": 1,
                "special: runtime.cgocallbackg1.func1": 1,
                "special: runtime.cgoCheckWriteBarrier.func1": 1,
                "special: runtime.cgoCheckTypedBlock.func1": 1,
                "special: runtime.chansend.func1": 1,
                "special: runtime.chanrecv.func1": 1,
                "special: runtime.debugCallCheck.func1": 1,
                "special: runtime.debugCallWrap.func1": 1,
                "special: runtime.mallocgc.func1": 1,
                "special: runtime.persistentalloc.func1": 1,
                "special: runtime.freemcache.func1": 1,
                "special: runtime.SetFinalizer.func1": 1,
                "special: runtime.SetFinalizer.func2": 1,
                "special: runtime.gcStart.func1": 1,
                "special: runtime.gcStart.func2": 1,
                "special: runtime.gcMarkDone.func1.1": 1,
                "special: runtime.gcMarkDone.func1": 1,
                "special: runtime.gcMarkDone.func2": 1,
                "special: runtime.gcMarkDone.func3": 1,
                "special: runtime.gcMarkTermination.func1": 1,
                "special: runtime.gcMarkTermination.func2": 1,
                "special: runtime.gcMarkTermination.func3": 1,
                "special: runtime.gcMarkTermination.func4.1": 1,
                "special: runtime.gcMarkTermination.func4": 1,
                "special: runtime.gcBgMarkWorker.func1": 1,
                "special: runtime.gcBgMarkWorker.func2": 1,
                "special: runtime.markroot.func1": 1,
                "special: runtime.gcAssistAlloc.func1": 1,
                "special: runtime.scanstack.func1": 1,
                "special: runtime.getempty.func1": 1,
                "special: runtime.freeSomeWbufs.func1": 1,
                "special: coalesce.func1": 1,
                "special: coalesce.func2": 1,
                "special: alloc.func1": 1,
                "special: freeSpan.func1": 1,
                "special: Malloc.func1": 1,
                "special: runtime.tracealloc.func1": 1,
                "special: runtime.tracefree.func1": 1,
                "special: runtime.wbBufFlush.func1": 1,
                "special: runtime.semasleep.func1": 1,
                "special: runtime.semasleep.func2": 1,
                "special: runtime.semasleep.func3": 1,
                "special: runtime.semawakeup.func1": 1,
                "special: runtime.semacreate.func1": 1,
                "special: runtime.newdefer.func1": 1,
                "special: runtime.newdefer.func2": 1,
                "special: runtime.freedefer.func1": 1,
                "special: runtime.preprintpanics.func1": 1,
                "special: runtime.throw.func1": 1,
                "special: runtime.fatalthrow.func1": 1,
                "special: runtime.fatalpanic.func1": 1,
                "special: runtime.fatalpanic.func2": 1,
                "special: runtime.hexdumpWords.func1": 1,
                "special: runtime.main.func1": 1,
                "special: runtime.main.func2": 1,
                "special: runtime.goready.func1": 1,
                "special: runtime.casgstatus.func1": 1,
                "special: runtime.casgstatus.func2": 1,
                "special: runtime.startTheWorld.func1": 1,
                "special: runtime.reentersyscall.func1": 1,
                "special: runtime.entersyscallblock.func1": 1,
                "special: runtime.entersyscallblock.func2": 1,
                "special: runtime.exitsyscallfast.func1": 1,
                "special: reacquired.func1": 1,
                "special: runtime.malg.func1": 1,
                "special: runtime.newproc.func1": 1,
                "special: runtime.gfget.func1": 1,
                "special: rlock.func1": 1,
                "special: runtime.callers.func1": 1,
                "special: runtime.tracebackHexdump.func1": 1,
                "special: runtime.init.ializers": 1,
                "special: runtime.init": 1,
                "special: runtime.skipPleaseUseCallersFrames": 1,
                "special: runtime.rt0": 1,
                "special: runtime.asminit": 1,
                "special: runtime.gogo": 1,
                "special: runtime.mcall": 1,
                "special: runtime.systemstack": 2,
                "special: runtime.morestack": 2,
                "special: runtime.reflectcall": 1,
                "special: runtime.call32": 1,
                "special: runtime.call64": 1,
                "special: runtime.call128": 1,
                "special: runtime.call256": 1,
                "special: runtime.call512": 1,
                "special: runtime.call1024": 1,
                "special: runtime.call2048": 1,
                "special: runtime.call4096": 1,
                "special: runtime.call8192": 1,
                "special: runtime.call16384": 1,
                "special: runtime.call32768": 1,
                "special: runtime.call65536": 1,
                "special: runtime.call131072": 1,
                "special: runtime.call262144": 1,
                "special: runtime.call524288": 1,
                "special: runtime.call1048576": 1,
                "special: runtime.call2097152": 1,
                "special: runtime.call4194304": 1,
                "special: runtime.call8388608": 1,
                "special: runtime.call16777216": 1,
                "special: runtime.call33554432": 1,
                "special: runtime.call67108864": 1,
                "special: runtime.call134217728": 1,
                "special: runtime.call268435456": 1,
                "special: runtime.call536870912": 1,
                "special: runtime.call1073741824": 1,
                "special: runtime.procyield": 1,
                "special: runtime.publicationBarrier": 1,
                "special: runtime.jmpdefer": 1,
                "special: runtime.asmcgocall": 1,
                "special: runtime.cgocallback": 2,
                "special: runtime.setg": 1,
                "special: runtime.abort": 1,
                "special: runtime.stackcheck": 1,
                "special: runtime.cputicks": 1,
                "special: runtime.aeshash": 1,
                "special: runtime.aeshashstr": 1,
                "special: runtime.aeshashbody": 1,
                "special: runtime.aeshash32": 1,
                "special: runtime.aeshash64": 1,
                "special: runtime.checkASM": 1,
                "special: runtime.return0": 1,
                "special: runtime.goexit": 1,
                "special: runtime.gcWriteBarrier": 1,
                "special: runtime.debugCallV1": 1,
                "special: runtime.debugCallPanicked": 1,
                "special: runtime.duffzero": 1,
                "special: runtime.duffcopy": 1,
                "special: runtime.memclrNoHeapPointers": 1,
                "special: runtime.memmove": 1,
                "special: runtime.asmstdcall": 1,
                "special: runtime.badsignal2": 1,
                "special: runtime.getlasterror": 1,
                "special: runtime.sigtramp": 1,
                "special: runtime.exceptiontramp": 1,
                "special: runtime.firstcontinuetramp": 1,
                "special: runtime.lastcontinuetramp": 1,
                "special: runtime.ctrlhandler": 1,
                "special: runtime.externalthreadhandler": 1,
                "special: runtime.tstart": 3,
                "special: runtime.settls": 1,
                "special: runtime.onosstack": 1,
                "special: runtime.usleep2": 1,
                "special: runtime.switchtothread": 1,
                "special: runtime.nanotime": 1,
                "special: time.now": 1,
                "special: hash.runtime.uncommontype": 1,
                "special: eq.runtime.uncommontype": 1,
                "special: hash.runtime": 3,
                "special: eq.runtime": 3,
                "special: hash.runtime.sysmontick": 1,
                "special: eq.runtime.sysmontick": 1,
                "special: hash.runtime.special": 1,
                "special: eq.runtime.special": 1,
                "special: hash.runtime.markBits": 1,
                "special: eq.runtime.markBits": 1,
                "special: hash.runtime.mcache": 1,
                "special: eq.runtime.mcache": 1,
                "special: hash.struct": 20,
                "special: runtime.n": 6,
                "special: eq.struct": 20,
                "special: hash.runtime.gcWork": 1,
                "special: eq.runtime.gcWork": 1,
                "special: hash.runtime.wbBuf": 1,
                "special: eq.runtime.wbBuf": 1,
                "special: hash.runtime.sudog": 1,
                "special: eq.runtime.sudog": 1,
                "special: hash.runtime.hchan": 1,
                "special: eq.runtime.hchan": 1,
                "special: hash.runtime.bitvector": 1,
                "special: eq.runtime.bitvector": 1,
                "special: hash.runtime.itab": 1,
                "special: eq.runtime.itab": 1,
                "special: hash.runtime.modulehash": 1,
                "special: eq.runtime.modulehash": 1,
                "special: hash.runtime.treapNode": 1,
                "special: eq.runtime.treapNode": 1,
                "special: hash.runtime.gcSweepBuf": 1,
                "special: eq.runtime.gcSweepBuf": 1,
                "special: hash.runtime.arenaHint": 1,
                "special: eq.runtime.arenaHint": 1,
                "special: hash.runtime.mcentral": 1,
                "special: eq.runtime.mcentral": 1,
                "special: runtime.pad": 10,
                "special: hash.runtime.specialfinalizer": 1,
                "special: eq.runtime.specialfinalizer": 1,
                "special: hash.runtime.MemStats": 1,
                "special: eq.runtime.MemStats": 1,
                "special: hash.runtime.net": 1,
                "special: eq.runtime.net": 1,
                "special: hash.runtime.overlappedEntry": 1,
                "special: eq.runtime.overlappedEntry": 1,
                "special: hash.runtime.rwmutex": 1,
                "special: eq.runtime.rwmutex": 1,
                "special: runtime.lpFileName": 2,
                "special: runtime.hFile": 2,
                "special: runtime.flags": 2,
                "special: add-fm": 1,
                "special: hash.runtime.Frame": 1,
                "special: eq.runtime.Frame": 1,
                "special: hash.runtime.TypeAssertionError": 1,
                "special: eq.runtime.TypeAssertionError": 1,
                "special: hash.runtime.dbgVar": 1,
                "special: eq.runtime.dbgVar": 1,
                "special: hash.runtime.finblock": 1,
                "special: eq.runtime.finblock": 1,
                "special: hash.runtime.forcegcstate": 1,
                "special: eq.runtime.forcegcstate": 1,
                "special: hash.runtime.funcinl": 1,
                "special: eq.runtime.funcinl": 1,
                "special: hash.runtime.gcControllerState": 1,
                "special: eq.runtime.gcControllerState": 1,
                "special: hash.runtime.gcTrigger": 1,
                "special: eq.runtime.gcTrigger": 1,
                "special: hash.runtime.hiter": 1,
                "special: eq.runtime.hiter": 1,
                "special: hash.runtime.memoryBasicInformation": 1,
                "special: eq.runtime.memoryBasicInformation": 1,
                "special: runtime.size": 4,
                "special: runtime.nmalloc": 4,
                "special: runtime.nfree": 4,
                "special: hash.runtime.mstats": 1,
                "special: eq.runtime.mstats": 1,
                "special: runtime.user": 2,
                "special: runtime.runnable": 2,
                "special: runtime.noStack": 2,
                "special: hash.runtime.semaRoot": 1,
                "special: eq.runtime.semaRoot": 1,
                "special: hash.runtime.stackmap": 1,
                "special: eq.runtime.stackmap": 1,
                "special: hash.runtime.sweepdata": 1,
                "special: eq.runtime.sweepdata": 1,
                "special: hash.runtime.traceStack": 1,
                "special: eq.runtime.traceStack": 1,
                "special: hash.runtime.traceStackTable": 1,
                "special: eq.runtime.traceStackTable": 1,
                "special: runtime.root": 4,
                "special: runtime.cycle": 2,
                "special: runtime.flushed": 2,
                "special: runtime.enabled": 2,
                "special: runtime.needed": 2,
                "special: runtime.cgo": 2,
                "special: runtime.alignme": 2,
                "special: runtime.full": 2,
                "special: runtime.empty": 2,
                "special: runtime.pad0": 2,
                "special: runtime.wbufSpans": 2,
                "special: runtime.free": 2,
                "special: runtime.busy": 2,
                "special: runtime.bytesMarked": 2,
                "special: runtime.markrootNext": 2,
                "special: runtime.markrootJobs": 2,
                "special: runtime.nproc": 2,
                "special: runtime.nwait": 2,
                "special: runtime.ndone": 2,
                "special: runtime.nFlushCacheRoots": 2,
                "special: runtime.nDataRoots": 2,
                "special: runtime.nBSSRoots": 2,
                "special: runtime.nSpanRoots": 2,
                "special: runtime.nStackRoots": 2,
                "special: runtime.startSema": 2,
                "special: runtime.markDoneSema": 2,
                "special: runtime.bgMarkReady": 2,
                "special: runtime.bgMarkDone": 2,
                "special: runtime.mode": 2,
                "special: runtime.userForced": 2,
                "special: runtime.totaltime": 2,
                "special: runtime.initialHeapLive": 2,
                "special: runtime.assistQueue": 2,
                "special: runtime.q": 2,
                "special: runtime.sweepWaiters": 2,
                "special: runtime.list": 2,
                "special: runtime.cycles": 2,
                "special: runtime.stwprocs": 2,
                "special: runtime.maxprocs": 2,
                "special: runtime.tSweepTerm": 2,
                "special: runtime.tMark": 2,
                "special: runtime.tMarkTerm": 2,
                "special: runtime.tEnd": 2,
                "special: runtime.pauseNS": 2,
                "special: runtime.pauseStart": 2,
                "special: runtime.heap0": 2,
                "special: runtime.heap1": 2,
                "special: runtime.heap2": 2,
                "special: runtime.heapGoal": 2,
                "special: runtime.waiting": 2,
                "special: runtime.wake": 2,
                "special: runtime.haveTemplateThread": 2,
                "special: runtime.mask": 2,
                "special: runtime.wanted": 2,
                "special: runtime.ignored": 2,
                "special: runtime.state": 2,
                "special: runtime.delivering": 2,
                "special: runtime.inuse": 2,
                "special: errors.New": 1,
                "special: sync.newEntry": 1,
                "special: sync.indexLocal": 1,
                "special: sync.poolCleanup": 1,
                "special: sync.init.0": 1,
                "special: sync.init.1": 1,
                "special: sync.init.ializers": 1,
                "special: sync.init": 1,
                "special: io.WriteString": 1,
                "special: io.ReadAtLeast": 1,
                "special: io.copyBuffer": 1,
                "special: io.init.ializers": 1,
                "special: io.init": 1,
                "special: hash.io.LimitedReader": 1,
                "special: eq.io.LimitedReader": 1,
                "special: utf8.DecodeRune": 1,
                "special: utf8.DecodeRuneInString": 1,
                "special: utf8.DecodeLastRune": 1,
                "special: utf8.RuneStart": 1,
                "special: utf8.DecodeLastRuneInString": 1,
                "special: utf8.EncodeRune": 1,
                "special: utf8.RuneCount": 1,
                "special: utf8.RuneCountInString": 1,
                "special: utf8.ValidString": 1,
                "special: unicode.In": 1,
                "special: unicode.IsSpace": 1,
                "special: unicode.is16": 1,
                "special: unicode.is32": 1,
                "special: unicode.Is": 1,
                "special: unicode.isExcludingLatin": 1,
                "special: unicode.to": 1,
                "special: unicode.ToUpper": 1,
                "special: unicode.To": 1,
                "special: unicode.ToLower": 1,
                "special: unicode.SimpleFold": 1,
                "special: unicode.init.ializers": 1,
                "special: unicode.init": 1,
                "special: bytes.makeSlice": 1,
                "special: bytes.IndexByte": 1,
                "special: bytes.explode": 1,
                "special: bytes.Count": 1,
                "special: bytes.genSplit": 1,
                "special: bytes.EqualFold": 1,
                "special: bytes.Index": 1,
                "special: bytealg.Cutover": 1,
                "special: bytes.Equal": 1,
                "special: bytes.indexRabinKarp": 1,
                "special: bytes.hashStr": 1,
                "special: bytes.makeSlice.func1": 1,
                "special: bytes.init.ializers": 1,
                "special: bytes.init": 1,
                "special: utf8.FullRune": 1,
                "special: bufio.init.ializers": 1,
                "special: bufio.init": 1,
                "special: math.asin": 1,
                "special: math.NaN": 1,
                "special: math.acos": 1,
                "special: math.satan": 1,
                "special: math.xatan": 1,
                "special: math.atan": 1,
                "special: math.atan2": 1,
                "special: math.IsNaN": 1,
                "special: math.Signbit": 1,
                "special: math.Copysign": 1,
                "special: math.IsInf": 1,
                "special: math.Inf": 1,
                "special: math.frexp": 1,
                "special: math.normalize": 1,
                "special: math.Abs": 1,
                "special: math.Float64frombits": 1,
                "special: math.Float64bits": 1,
                "special: math.ldexp": 1,
                "special: math.log10": 1,
                "special: math.mod": 1,
                "special: math.modf": 1,
                "special: math.pow": 1,
                "special: math.isOddInt": 1,
                "special: math.cos": 1,
                "special: math.sin": 1,
                "special: math.tan": 1,
                "special: math.trigReduce": 1,
                "special: bits.LeadingZeros64": 1,
                "special: math/bits": 4,
                "special: math.init.ializers": 1,
                "special: math.init": 1,
                "special: math.Asin": 1,
                "special: math.Acos": 1,
                "special: math.Atan2": 1,
                "special: math.Atan": 1,
                "special: math.Max": 1,
                "special: math.Min": 1,
                "special: math.Exp": 1,
                "special: math.Floor": 1,
                "special: math.Ceil": 1,
                "special: math.Frexp": 1,
                "special: math.Ldexp": 1,
                "special: math.Log10": 1,
                "special: math.Log": 1,
                "special: math.Mod": 1,
                "special: math.Modf": 1,
                "special: math.Pow": 1,
                "special: math.Sin": 1,
                "special: math.Cos": 1,
                "special: math.Tan": 1,
                "special: strconv.equalIgnoreCase": 1,
                "special: strconv.special": 1,
                "special: strconv.readFloat": 1,
                "special: strconv.atof64exact": 1,
                "special: strconv.atof32exact": 1,
                "special: strconv.atof32": 1,
                "special: strconv.rangeError": 1,
                "special: strconv.syntaxError": 1,
                "special: strconv.atof64": 1,
                "special: strconv.ParseFloat": 1,
                "special: strconv.Quote": 1,
                "special: strconv.quoteWith": 1,
                "special: strconv.baseError": 1,
                "special: strconv.Itoa": 1,
                "special: strconv.bitSizeError": 1,
                "special: strconv.ParseUint": 1,
                "special: strconv.ParseInt": 1,
                "special: strconv.digitZero": 1,
                "special: strconv.trim": 1,
                "special: strconv.rightShift": 1,
                "special: strconv.prefixIsLessThan": 1,
                "special: strconv.leftShift": 1,
                "special: strconv.shouldRoundUp": 1,
                "special: strconv.frexp10Many": 1,
                "special: strconv.adjustLastDigitFixed": 1,
                "special: strconv.adjustLastDigit": 1,
                "special: strconv.FormatFloat": 1,
                "special: strconv.max": 1,
                "special: strconv.genericFtoa": 1,
                "special: math.Float32bits": 1,
                "special: strconv.bigFtoa": 1,
                "special: strconv.formatDigits": 1,
                "special: strconv.roundShortest": 1,
                "special: strconv.fmtE": 1,
                "special: strconv.min": 1,
                "special: strconv.fmtF": 1,
                "special: strconv.fmtB": 1,
                "special: strconv.FormatUint": 1,
                "special: strconv.small": 1,
                "special: strconv.FormatInt": 1,
                "special: strconv.AppendInt": 1,
                "special: strconv.AppendUint": 1,
                "special: strconv.formatBits": 1,
                "special: strconv.isPowerOfTwo": 1,
                "special: bits.TrailingZeros": 1,
                "special: strconv.appendQuotedWith": 1,
                "special: strconv.appendQuotedRuneWith": 1,
                "special: utf8.ValidRune": 1,
                "special: strconv.appendEscapedRune": 1,
                "special: strconv.CanBackquote": 1,
                "special: strconv.UnquoteChar": 1,
                "special: strconv.unhex": 1,
                "special: strconv.Unquote": 1,
                "special: strconv.contains": 1,
                "special: strconv.bsearch16": 1,
                "special: strconv.bsearch32": 1,
                "special: strconv.IsPrint": 1,
                "special: strconv.isInGraphicList": 1,
                "special: strconv.init.ializers": 1,
                "special: strconv.init": 1,
                "special: hash.strconv.NumError": 1,
                "special: eq.strconv.NumError": 1,
                "special: hash.strconv.decimal": 1,
                "special: eq.strconv.decimal": 1,
                "special: hash.strconv.extFloat": 1,
                "special: eq.strconv.extFloat": 1,
                "special: hash.strconv.leftCheat": 1,
                "special: eq.strconv.leftCheat": 1,
                "special: reflect.MakeFunc": 1,
                "special: reflect.makeMethodValue": 1,
                "special: reflect.Swapper": 1,
                "special: reflect.ValueOf": 1,
                "special: reflect.escapes": 1,
                "special: reflect.unpackEface": 1,
                "special: reflect.ifaceIndir": 1,
                "special: reflect.Value.Kind": 1,
                "special: reflect.flag.kind": 1,
                "special: reflect.name.tagLen": 1,
                "special: reflect.name.data": 1,
                "special: reflect.name.nameLen": 1,
                "special: reflect.add": 1,
                "special: reflect.name.name": 1,
                "special: reflect.name.tag": 1,
                "special: reflect.name.pkgPath": 1,
                "special: reflect.newName": 1,
                "special: reflect.Kind.String": 1,
                "special: reflect.toType": 1,
                "special: reflect.ChanDir.String": 1,
                "special: reflect.name.isExported": 1,
                "special: reflect.StructTag.Get": 1,
                "special: reflect.StructTag.Lookup": 1,
                "special: reflect.TypeOf": 1,
                "special: reflect.resolveReflectName": 1,
                "special: reflect.fnv1": 1,
                "special: reflect.implements": 1,
                "special: reflect.directlyAssignable": 1,
                "special: reflect.haveIdenticalType": 1,
                "special: reflect.haveIdenticalUnderlyingType": 1,
                "special: reflect.typesByString": 1,
                "special: reflect.rtypeOff": 1,
                "special: reflect.funcStr": 1,
                "special: reflect.SliceOf": 1,
                "special: reflect.funcLayout": 1,
                "special: reflect.addTypeBits": 1,
                "special: reflect.packEface": 1,
                "special: reflect.methodName": 1,
                "special: reflect.flag.mustBe": 1,
                "special: reflect.flag.mustBeExported": 1,
                "special: reflect.flag.mustBeAssignable": 1,
                "special: reflect.flag.ro": 1,
                "special: reflect.Value.Bool": 1,
                "special: reflect.Value.Bytes": 1,
                "special: reflect.Value.runes": 1,
                "special: reflect.Value.CanAddr": 1,
                "special: reflect.Value.CanSet": 1,
                "special: reflect.Value.Call": 1,
                "special: reflect.Value.CallSlice": 1,
                "special: reflect.Value.call": 1,
                "special: reflect.storeRcvr": 1,
                "special: 2.R": 1,
                "special: reflect.callReflect": 1,
                "special: reflect.methodReceiver": 1,
                "special: reflect.callMethod": 1,
                "special: reflect.funcName": 1,
                "special: reflect.Value.Cap": 1,
                "special: reflect.Value.pointer": 1,
                "special: reflect.Value.Close": 1,
                "special: reflect.Value.Complex": 1,
                "special: reflect.Value.Elem": 1,
                "special: reflect.Value.Field": 1,
                "special: reflect.Value.FieldByIndex": 1,
                "special: reflect.Value.IsNil": 1,
                "special: reflect.Value.FieldByName": 1,
                "special: reflect.Value.FieldByNameFunc": 1,
                "special: reflect.Value.Float": 1,
                "special: reflect.Value.Index": 1,
                "special: reflect.arrayAt": 1,
                "special: reflect.Value.Int": 1,
                "special: reflect.Value.CanInterface": 1,
                "special: reflect.Value.Interface": 1,
                "special: reflect.valueInterface": 1,
                "special: reflect.Value.InterfaceData": 1,
                "special: reflect.Value.IsValid": 1,
                "special: reflect.Value.Len": 1,
                "special: reflect.Value.MapIndex": 1,
                "special: reflect.Value.MapKeys": 1,
                "special: reflect.Value.MapRange": 1,
                "special: reflect.copyVal": 1,
                "special: reflect.Value.Method": 1,
                "special: reflect.Value.NumMethod": 1,
                "special: reflect.Value.MethodByName": 1,
                "special: reflect.Value.NumField": 1,
                "special: reflect.Value.OverflowComplex": 1,
                "special: reflect.overflowFloat32": 1,
                "special: reflect.Value.OverflowFloat": 1,
                "special: reflect.Value.OverflowInt": 1,
                "special: reflect.Value.OverflowUint": 1,
                "special: reflect.Value.Pointer": 1,
                "special: reflect.Value.Recv": 1,
                "special: reflect.Value.recv": 1,
                "special: reflect.Value.Send": 1,
                "special: reflect.Value.send": 1,
                "special: reflect.Value.Set": 1,
                "special: reflect.Value.SetBool": 1,
                "special: reflect.Value.SetBytes": 1,
                "special: reflect.Value.setRunes": 1,
                "special: reflect.Value.SetComplex": 1,
                "special: reflect.Value.SetFloat": 1,
                "special: reflect.Value.SetInt": 1,
                "special: reflect.Value.SetLen": 1,
                "special: reflect.Value.SetCap": 1,
                "special: reflect.Value.SetMapIndex": 1,
                "special: reflect.Value.SetUint": 1,
                "special: reflect.Value.SetPointer": 1,
                "special: reflect.Value.SetString": 1,
                "special: reflect.Value.String": 1,
                "special: reflect.Value.TryRecv": 1,
                "special: reflect.Value.TrySend": 1,
                "special: reflect.Value.Type": 1,
                "special: reflect.Value.Uint": 1,
                "special: reflect.Value.UnsafeAddr": 1,
                "special: reflect.typesMustMatch": 1,
                "special: reflect.Copy": 1,
                "special: reflect.MakeMapWithSize": 1,
                "special: reflect.Zero": 1,
                "special: reflect.New": 1,
                "special: reflect.Value.assignTo": 1,
                "special: reflect.Value.Convert": 1,
                "special: reflect.convertOp": 1,
                "special: reflect.makeInt": 1,
                "special: reflect.makeFloat": 1,
                "special: reflect.makeComplex": 1,
                "special: reflect.makeString": 1,
                "special: reflect.makeBytes": 1,
                "special: reflect.makeRunes": 1,
                "special: reflect.cvtInt": 1,
                "special: reflect.cvtUint": 1,
                "special: reflect.cvtFloatInt": 1,
                "special: reflect.cvtFloatUint": 1,
                "special: reflect.cvtIntFloat": 1,
                "special: reflect.cvtUintFloat": 1,
                "special: reflect.cvtFloat": 1,
                "special: reflect.cvtComplex": 1,
                "special: reflect.cvtIntString": 1,
                "special: reflect.cvtUintString": 1,
                "special: reflect.cvtBytesString": 1,
                "special: reflect.cvtStringBytes": 1,
                "special: reflect.cvtRunesString": 1,
                "special: reflect.cvtStringRunes": 1,
                "special: reflect.cvtDirect": 1,
                "special: reflect.cvtT2I": 1,
                "special: reflect.cvtI2I": 1,
                "special: reflect.Swapper.func1": 1,
                "special: reflect.Swapper.func2": 1,
                "special: reflect.Swapper.func3": 1,
                "special: reflect.Swapper.func4": 1,
                "special: reflect.Swapper.func5": 1,
                "special: reflect.Swapper.func6": 1,
                "special: reflect.Swapper.func7": 1,
                "special: reflect.Swapper.func8": 1,
                "special: reflect.Swapper.func9": 1,
                "special: FieldByName.func1": 1,
                "special: reflect.FuncOf.func1": 1,
                "special: reflect.funcLayout.func1": 1,
                "special: reflect.init.ializers": 1,
                "special: reflect.init": 1,
                "special: reflect.makeFuncStub": 1,
                "special: reflect.methodValueCall": 1,
                "special: hash.reflect.uncommonType": 1,
                "special: eq.reflect.uncommonType": 1,
                "special: hash.reflect.Method": 1,
                "special: eq.reflect.Method": 1,
                "special: hash.reflect.funcType": 1,
                "special: eq.reflect.funcType": 1,
                "special: hash.reflect.ValueError": 1,
                "special: eq.reflect.ValueError": 1,
                "special: hash.reflect.funcTypeFixed128": 1,
                "special: eq.reflect.funcTypeFixed128": 1,
                "special: hash.reflect.funcTypeFixed16": 1,
                "special: eq.reflect.funcTypeFixed16": 1,
                "special: hash.reflect.funcTypeFixed32": 1,
                "special: eq.reflect.funcTypeFixed32": 1,
                "special: hash.reflect.funcTypeFixed4": 1,
                "special: eq.reflect.funcTypeFixed4": 1,
                "special: hash.reflect.funcTypeFixed64": 1,
                "special: eq.reflect.funcTypeFixed64": 1,
                "special: hash.reflect.funcTypeFixed8": 1,
                "special: eq.reflect.funcTypeFixed8": 1,
                "special: reflect.ityp": 2,
                "special: reflect.typ": 2,
                "special: reflect.hash": 2,
                "special: reflect.fun": 2,
                "special: reflect.b": 2,
                "special: reflect.x": 2,
                "special: reflect.m": 2,
                "special: sort.Search": 1,
                "special: sort.SearchStrings": 1,
                "special: sort.StringSlice.Search": 1,
                "special: sort.Slice": 1,
                "special: sort.insertionSort": 2,
                "special: sort.siftDown": 2,
                "special: sort.heapSort": 2,
                "special: sort.medianOfThree": 2,
                "special: sort.swapRange": 1,
                "special: sort.doPivot": 2,
                "special: sort.quickSort": 2,
                "special: sort.Sort": 1,
                "special: sort.maxDepth": 1,
                "special: sort.StringSlice.Len": 1,
                "special: sort.StringSlice.Less": 1,
                "special: sort.StringSlice.Swap": 1,
                "special: sort.StringSlice.Sort": 1,
                "special: sort.Stable": 1,
                "special: sort.stable": 1,
                "special: sort.symMerge": 1,
                "special: sort.rotate": 1,
                "special: sort.SearchStrings.func1": 1,
                "special: sort.init": 1,
                "special: fmtsort.Sort": 1,
                "special: fmtsort.compare": 1,
                "special: fmtsort.floatCompare": 1,
                "special: fmtsort.isNaN": 1,
                "special: fmtsort.nilCompare": 1,
                "special: fmtsort.init": 1,
                "special: sysdll.Add": 1,
                "special: internal/syscall/windows/sysdll": 3,
                "special: sysdll.init.ializers": 1,
                "special: sysdll.init": 1,
                "special: utf16.Encode": 1,
                "special: unicode/utf16": 5,
                "special: utf16.EncodeRune": 1,
                "special: utf16.Decode": 1,
                "special: utf16.DecodeRune": 1,
                "special: syscall.init.0": 1,
                "special: syscall.LoadDLL": 1,
                "special: syscall.UTF16PtrFromString": 1,
                "special: syscall.BytePtrFromString": 1,
                "special: syscall.NewLazyDLL": 1,
                "special: syscall.FullPath": 1,
                "special: syscall.TranslateAccountName": 1,
                "special: syscall.StringToSid": 1,
                "special: syscall.LookupSID": 1,
                "special: syscall.OpenCurrentProcessToken": 1,
                "special: syscall.Token.Close": 1,
                "special: syscall.Token.getInfo": 1,
                "special: syscall.Token.GetTokenUser": 1,
                "special: syscall.Token.GetTokenPrimaryGroup": 1,
                "special: syscall.Token.GetUserProfileDirectory": 1,
                "special: syscall.itoa": 1,
                "special: syscall.uitoa": 1,
                "special: syscall.ByteSliceFromString": 1,
                "special: syscall.UTF16FromString": 1,
                "special: syscall.UTF16ToString": 1,
                "special: syscall.StringToUTF16Ptr": 1,
                "special: syscall.StringToUTF16": 1,
                "special: syscall.Errno.Error": 1,
                "special: syscall.Errno.Temporary": 1,
                "special: syscall.Errno.Timeout": 1,
                "special: syscall.Open": 1,
                "special: syscall.makeInheritSa": 1,
                "special: syscall.Read": 1,
                "special: syscall.Write": 1,
                "special: syscall.setFilePointerEx": 1,
                "special: syscall.errnoErr": 1,
                "special: syscall.Seek": 1,
                "special: syscall.getStdHandle": 1,
                "special: syscall.CloseOnExec": 1,
                "special: syscall.Ftruncate": 1,
                "special: syscall.WSASendto": 1,
                "special: syscall.LoadConnectEx": 1,
                "special: syscall.connectEx": 1,
                "special: syscall.ConnectEx": 1,
                "special: syscall.WaitStatus.Exited": 1,
                "special: syscall.WaitStatus.ExitStatus": 1,
                "special: syscall.WaitStatus.Signal": 1,
                "special: syscall.WaitStatus.CoreDump": 1,
                "special: syscall.WaitStatus.Stopped": 1,
                "special: syscall.WaitStatus.Continued": 1,
                "special: syscall.WaitStatus.StopSignal": 1,
                "special: syscall.WaitStatus.Signaled": 1,
                "special: syscall.WaitStatus.TrapCause": 1,
                "special: syscall.SetsockoptLinger": 1,
                "special: syscall.FindFirstFile": 1,
                "special: syscall.copyFindData": 1,
                "special: syscall.FindNextFile": 1,
                "special: syscall.Signal.Signal": 1,
                "special: syscall.Signal.String": 1,
                "special: syscall.FreeLibrary": 1,
                "special: syscall.formatMessage": 1,
                "special: syscall.CreateFile": 1,
                "special: syscall.ReadFile": 1,
                "special: syscall.WriteFile": 1,
                "special: syscall.CloseHandle": 1,
                "special: syscall.GetStdHandle": 1,
                "special: syscall.findFirstFile1": 1,
                "special: syscall.findNextFile1": 1,
                "special: syscall.FindClose": 1,
                "special: syscall.GetFileInformationByHandle": 1,
                "special: syscall.SetEndOfFile": 1,
                "special: syscall.GetTimeZoneInformation": 1,
                "special: syscall.CancelIo": 1,
                "special: syscall.CancelIoEx": 1,
                "special: syscall.OpenProcess": 1,
                "special: syscall.TerminateProcess": 1,
                "special: syscall.GetExitCodeProcess": 1,
                "special: syscall.GetCurrentProcess": 1,
                "special: syscall.GetProcessTimes": 1,
                "special: syscall.WaitForSingleObject": 1,
                "special: syscall.GetFileType": 1,
                "special: syscall.GetFileAttributesEx": 1,
                "special: syscall.GetCommandLine": 1,
                "special: syscall.LocalFree": 1,
                "special: syscall.SetHandleInformation": 1,
                "special: syscall.FlushFileBuffers": 1,
                "special: syscall.GetFullPathName": 1,
                "special: syscall.RegOpenKeyEx": 1,
                "special: syscall.RegCloseKey": 1,
                "special: syscall.RegQueryInfoKey": 1,
                "special: syscall.RegEnumKeyEx": 1,
                "special: syscall.RegQueryValueEx": 1,
                "special: syscall.getCurrentProcessId": 1,
                "special: syscall.GetConsoleMode": 1,
                "special: syscall.WriteConsole": 1,
                "special: syscall.ReadConsole": 1,
                "special: syscall.WSAStartup": 1,
                "special: syscall.WSAIoctl": 1,
                "special: syscall.socket": 1,
                "special: syscall.Setsockopt": 1,
                "special: syscall.shutdown": 1,
                "special: syscall.Closesocket": 1,
                "special: syscall.AcceptEx": 1,
                "special: syscall.WSARecv": 1,
                "special: syscall.WSASend": 1,
                "special: syscall.WSARecvFrom": 1,
                "special: syscall.WSASendTo": 1,
                "special: syscall.SetFileCompletionNotificationMod": 1,
                "special: syscall.WSAEnumProtocols": 1,
                "special: syscall.TranslateName": 1,
                "special: syscall.NetUserGetInfo": 1,
                "special: syscall.NetGetJoinInformation": 1,
                "special: syscall.NetApiBufferFree": 1,
                "special: syscall.LookupAccountSid": 1,
                "special: syscall.LookupAccountName": 1,
                "special: syscall.ConvertSidToStringSid": 1,
                "special: syscall.ConvertStringSidToSid": 1,
                "special: syscall.GetLengthSid": 1,
                "special: syscall.CopySid": 1,
                "special: syscall.OpenProcessToken": 1,
                "special: syscall.GetTokenInformation": 1,
                "special: syscall.GetUserProfileDirectory": 1,
                "special: syscall.getSystemDirectory": 1,
                "special: syscall.LoadConnectEx.func1": 1,
                "special: syscall.Socket": 1,
                "special: syscall.init.ializers": 1,
                "special: syscall.init": 1,
                "special: hash.syscall.DLL": 1,
                "special: eq.syscall.DLL": 1,
                "special: hash.syscall.Proc": 1,
                "special: eq.syscall.Proc": 1,
                "special: hash.syscall.DLLError": 1,
                "special: eq.syscall.DLLError": 1,
                "special: hash.syscall.LazyDLL": 1,
                "special: eq.syscall.LazyDLL": 1,
                "special: hash.syscall.LazyProc": 1,
                "special: eq.syscall.LazyProc": 1,
                "special: hash.syscall.SIDAndAttributes": 1,
                "special: eq.syscall.SIDAndAttributes": 1,
                "special: hash.syscall.Tokenuser": 1,
                "special: eq.syscall.Tokenuser": 1,
                "special: hash.syscall.SysProcAttr": 1,
                "special: eq.syscall.SysProcAttr": 1,
                "special: hash.syscall.SecurityAttributes": 1,
                "special: eq.syscall.SecurityAttributes": 1,
                "special: hash.syscall.SockaddrInet4": 1,
                "special: eq.syscall.SockaddrInet4": 1,
                "special: hash.syscall.SockaddrUnix": 1,
                "special: eq.syscall.SockaddrUnix": 1,
                "special: hash.syscall.WSABuf": 1,
                "special: eq.syscall.WSABuf": 1,
                "special: hash.syscall.WSAData": 1,
                "special: eq.syscall.WSAData": 1,
                "special: syscall.once": 2,
                "special: syscall.addr": 2,
                "special: syscall.err": 2,
                "special: testlog.Open": 1,
                "special: testlog.Logger": 1,
                "special: testlog.Stat": 1,
                "special: registry.Key.Close": 1,
                "special: registry.OpenKey": 1,
                "special: registry.Key.ReadSubKeyNames": 1,
                "special: registry.Key.Stat": 1,
                "special: registry.Key.GetValue": 1,
                "special: registry.Key.getValue": 1,
                "special: registry.Key.GetStringValue": 1,
                "special: registry.Key.GetMUIStringValue": 1,
                "special: registry.ExpandString": 1,
                "special: registry.Key.GetStringsValue": 1,
                "special: registry.Key.GetIntegerValue": 1,
                "special: registry.Key.GetBinaryValue": 1,
                "special: registry.Key.setValue": 1,
                "special: registry.Key.SetDWordValue": 1,
                "special: registry.Key.SetQWordValue": 1,
                "special: registry.Key.setStringValue": 1,
                "special: registry.Key.SetStringValue": 1,
                "special: registry.Key.SetExpandStringValue": 1,
                "special: registry.Key.SetStringsValue": 1,
                "special: registry.Key.SetBinaryValue": 1,
                "special: registry.Key.DeleteValue": 1,
                "special: registry.Key.ReadValueNames": 1,
                "special: registry.regSetValueEx": 1,
                "special: registry.regEnumValue": 1,
                "special: registry.regDeleteValue": 1,
                "special: registry.regLoadMUIString": 1,
                "special: registry.expandEnvironmentStrings": 1,
                "special: registry.errnoErr": 1,
                "special: registry.init.ializers": 2,
                "special: registry.init": 2,
                "special: time.nextStdChunk": 1,
                "special: time.isDigit": 1,
                "special: time.startsWithLowerCase": 1,
                "special: time.match": 1,
                "special: time.lookup": 1,
                "special: time.appendInt": 1,
                "special: time.atoi": 1,
                "special: time.formatNano": 1,
                "special: time.Time.String": 1,
                "special: time.Time.Format": 1,
                "special: time.Time.AppendFormat": 1,
                "special: time.absClock": 1,
                "special: time.Time.Nanosecond": 1,
                "special: time.absWeekday": 1,
                "special: time.quote": 1,
                "special: time.getnum": 1,
                "special: time.cutspace": 1,
                "special: time.skip": 1,
                "special: time.parse": 1,
                "special: time.daysIn": 1,
                "special: time.isLeap": 1,
                "special: time.FixedZone": 1,
                "special: time.parseTimeZone": 1,
                "special: time.parseGMT": 1,
                "special: time.parseSignedOffset": 1,
                "special: time.parseNanoseconds": 1,
                "special: time.leadingInt": 1,
                "special: time.Time.After": 1,
                "special: time.Time.Before": 1,
                "special: time.Time.Equal": 1,
                "special: time.Month.String": 1,
                "special: time.Weekday.String": 1,
                "special: time.Time.IsZero": 1,
                "special: time.Time.abs": 1,
                "special: time.Time.locabs": 1,
                "special: time.Time.Date": 1,
                "special: time.Time.Year": 1,
                "special: time.Time.Month": 1,
                "special: time.Time.Day": 1,
                "special: time.Time.Weekday": 1,
                "special: time.Time.ISOWeek": 1,
                "special: time.Time.Clock": 1,
                "special: time.Time.Hour": 1,
                "special: time.Time.Minute": 1,
                "special: time.Time.Second": 1,
                "special: time.Time.YearDay": 1,
                "special: time.Duration.String": 1,
                "special: time.fmtFrac": 1,
                "special: time.fmtInt": 1,
                "special: time.Duration.Nanoseconds": 1,
                "special: time.Duration.Seconds": 1,
                "special: time.Duration.Minutes": 1,
                "special: time.Duration.Hours": 1,
                "special: time.Duration.Truncate": 1,
                "special: time.Duration.Round": 1,
                "special: time.lessThanHalf": 1,
                "special: time.Time.Add": 1,
                "special: time.Time.Sub": 1,
                "special: time.Since": 1,
                "special: time.Until": 1,
                "special: time.Time.AddDate": 1,
                "special: time.Time.Location": 1,
                "special: time.Time.date": 1,
                "special: time.absDate": 1,
                "special: time.Now": 1,
                "special: time.Time.UTC": 1,
                "special: time.Time.Local": 1,
                "special: time.Time.In": 1,
                "special: time.Time.Zone": 1,
                "special: time.Time.Unix": 1,
                "special: time.Time.UnixNano": 1,
                "special: time.Time.MarshalBinary": 1,
                "special: time.Time.GobEncode": 1,
                "special: time.Time.MarshalJSON": 1,
                "special: time.Parse": 1,
                "special: time.Time.MarshalText": 1,
                "special: time.Unix": 1,
                "special: time.unixTime": 1,
                "special: time.Date": 1,
                "special: time.norm": 1,
                "special: time.Time.Truncate": 1,
                "special: time.Time.Round": 1,
                "special: time.div": 1,
                "special: time.matchZoneKey": 1,
                "special: registry.LoadRegLoadMUIString": 1,
                "special: time.toEnglishName": 1,
                "special: time.extractCAPS": 1,
                "special: time.abbrev": 1,
                "special: time.pseudoUnix": 1,
                "special: time.initLocalFromTZI": 1,
                "special: time.initLocal": 1,
                "special: time.init.ializers": 1,
                "special: time.init": 1,
                "special: hash.time.zone": 1,
                "special: eq.time.zone": 1,
                "special: hash.time.zoneTrans": 1,
                "special: eq.time.zoneTrans": 1,
                "special: hash.time.ParseError": 1,
                "special: eq.time.ParseError": 1,
                "special: hash.time.abbr": 1,
                "special: eq.time.abbr": 1,
                "special: windows.loadWSASendRecvMsg": 1,
                "special: windows.WSASendMsg": 1,
                "special: windows.errnoErr": 1,
                "special: windows.WSARecvMsg": 1,
                "special: windows.GetComputerNameEx": 1,
                "special: windows.GetModuleFileName": 1,
                "special: windows.NetUserGetLocalGroups": 1,
                "special: windows.GetFileInformationByHandleEx": 1,
                "special: windows.loadWSASendRecvMsg.func1": 1,
                "special: windows.init.ializers": 1,
                "special: windows.init": 1,
                "special: windows.once": 2,
                "special: windows.sendAddr": 2,
                "special: windows.recvAddr": 2,
                "special: windows.err": 2,
                "special: poll.consume": 1,
                "special: syscall.Fsync": 1,
                "special: poll.errClosing": 1,
                "special: poll.convertErr": 1,
                "special: poll.setDeadlineImpl": 1,
                "special: poll.checkSetFileCompletionNotificati": 1,
                "special: syscall.LoadSetFileCompletionNotificatio": 1,
                "special: poll.init.0": 1,
                "special: syscall.LoadCancelIoEx": 1,
                "special: poll.startServer": 1,
                "special: syscall.Shutdown": 1,
                "special: utf16.IsSurrogate": 1,
                "special: poll.sockaddrToRaw": 1,
                "special: syscall.SetsockoptInt": 1,
                "special: syscall.SetsockoptInet4Addr": 1,
                "special: syscall.SetsockoptIPMreq": 1,
                "special: poll.glob": 1,
                "special: Read.func1": 1,
                "special: ReadFrom.func1": 1,
                "special: Write.func1": 1,
                "special: Writev.func1": 1,
                "special: WriteTo.func1": 1,
                "special: WriteTo.func2": 1,
                "special: ConnectEx.func1": 1,
                "special: acceptOne.func1": 1,
                "special: RawRead.func1": 1,
                "special: ReadMsg.func1": 1,
                "special: WriteMsg.func1": 1,
                "special: poll.init.ializers": 1,
                "special: poll.init": 1,
                "special: os.newFileStatFromWin32finddata": 1,
                "special: os.ftToDuration": 1,
                "special: os.NewSyscallError": 1,
                "special: os.terminateProcess": 1,
                "special: os.findProcess": 1,
                "special: os.newProcess": 1,
                "special: os.init.0": 1,
                "special: os.Executable": 1,
                "special: os.executable": 1,
                "special: os.appendBSBytes": 1,
                "special: os.readNextArg": 1,
                "special: os.commandLineToArgv": 1,
                "special: os.getModuleFileName": 1,
                "special: os.OpenFile": 1,
                "special: os.newRawConn": 1,
                "special: os.syscallMode": 1,
                "special: os.FileMode.Perm": 1,
                "special: os.newFile": 1,
                "special: os.NewFile": 1,
                "special: os.openFile": 1,
                "special: os.openDir": 1,
                "special: os.openFileNolog": 1,
                "special: os.basename": 1,
                "special: os.isAbs": 1,
                "special: os.IsPathSeparator": 1,
                "special: os.volumeName": 1,
                "special: os.fixLongPath": 1,
                "special: os.init.1": 1,
                "special: os.Exit": 1,
                "special: os.Stat": 1,
                "special: os.statNolog": 1,
                "special: os.isNulName": 1,
                "special: os.stat": 1,
                "special: os.itoa": 1,
                "special: os.uitoa": 1,
                "special: os.hostname": 1,
                "special: os.FileMode.String": 1,
                "special: os.FileMode.IsDir": 1,
                "special: os.FileMode.IsRegular": 1,
                "special: os.newFileStatFromGetFileInformatio": 1,
                "special: os.init.ializers": 1,
                "special: os.init": 2,
                "special: hash.os.dirInfo": 1,
                "special: eq.os.dirInfo": 1,
                "special: hash.os.LinkError": 1,
                "special: eq.os.LinkError": 1,
                "special: hash.os.PathError": 1,
                "special: eq.os.PathError": 1,
                "special: hash.os.Process": 1,
                "special: eq.os.Process": 1,
                "special: hash.os.ProcessState": 1,
                "special: eq.os.ProcessState": 1,
                "special: hash.os.SyscallError": 1,
                "special: eq.os.SyscallError": 1,
                "special: hash.os.fileStat": 1,
                "special: eq.os.fileStat": 1,
                "special: utf8.RuneLen": 1,
                "special: strconv.AppendQuoteToASCII": 1,
                "special: strconv.AppendQuote": 1,
                "special: strconv.AppendQuoteRuneToASCII": 1,
                "special: strconv.AppendQuoteRune": 1,
                "special: strconv.AppendFloat": 1,
                "special: fmt.newPrinter": 1,
                "special: fmt.Fprintf": 1,
                "special: fmt.Sprintf": 1,
                "special: fmt.Sprint": 1,
                "special: fmt.Fprintln": 1,
                "special: fmt.Sprintln": 1,
                "special: fmt.getField": 1,
                "special: fmt.parsenum": 1,
                "special: fmt.tooLarge": 1,
                "special: fmt.intFromArg": 1,
                "special: fmt.parseArgNumber": 1,
                "special: fmt.glob": 1,
                "special: fmt.init.ializers": 1,
                "special: fmt.init": 1,
                "special: hash.fmt.fmt": 1,
                "special: eq.fmt.fmt": 1,
                "special: flate.init.0": 1,
                "special: flate.newHuffmanBitWriter": 1,
                "special: flate.newHuffmanEncoder": 1,
                "special: flate.generateFixedLiteralEncoding": 1,
                "special: flate.reverseBits": 1,
                "special: bits.Reverse16": 1,
                "special: flate.generateFixedOffsetEncoding": 1,
                "special: flate.byLiteral.Len": 1,
                "special: flate.byLiteral.Less": 1,
                "special: flate.byLiteral.Swap": 1,
                "special: flate.byFreq.Len": 1,
                "special: flate.byFreq.Less": 1,
                "special: flate.byFreq.Swap": 1,
                "special: flate.CorruptInputError.Error": 1,
                "special: flate.InternalError.Error": 1,
                "special: bits.Reverse8": 1,
                "special: io.ReadFull": 1,
                "special: flate.noEOF": 1,
                "special: flate.fixedHuffmanDecoderInit": 1,
                "special: flate.makeReader": 1,
                "special: bufio.NewReader": 1,
                "special: bufio.NewReaderSize": 1,
                "special: flate.NewReader": 1,
                "special: flate.fixedHuffmanDecoderInit.func1": 1,
                "special: flate.init.ializers": 1,
                "special: flate.init": 1,
                "special: hash.compress": 1,
                "special: eq.compress": 1,
                "special: binary.init.ializers": 1,
                "special: encoding/binary": 7,
                "special: binary.init": 1,
                "special: hash.init": 1,
                "special: crc32.ieeeInit": 1,
                "special: crc32.archAvailableIEEE": 1,
                "special: crc32.archInitIEEE": 1,
                "special: crc32.Update": 1,
                "special: crc32.ChecksumIEEE": 1,
                "special: crc32.archUpdateIEEE": 1,
                "special: crc32.simpleMakeTable": 1,
                "special: crc32.simplePopulateTable": 1,
                "special: crc32.simpleUpdate": 1,
                "special: crc32.slicingMakeTable": 1,
                "special: crc32.slicingUpdate": 1,
                "special: crc32.ieeeInit.func1": 1,
                "special: crc32.init.ializers": 1,
                "special: crc32.init": 1,
                "special: crc32.ieeeCLMUL": 1,
                "special: gzip.NewReader": 1,
                "special: binary.littleEndian.Uint32": 1,
                "special: gzip.noEOF": 1,
                "special: binary.littleEndian.Uint16": 1,
                "special: gzip.init.ializers": 1,
                "special: gzip.init": 1,
                "special: subtle.ConstantTimeCompare": 1,
                "special: crypto/subtle": 2,
                "special: subtle.ConstantTimeByteEq": 1,
                "special: cipher.StreamReader.Read": 1,
                "special: cipher.NewOFB": 1,
                "special: subtle.InexactOverlap": 1,
                "special: crypto/internal/subtle": 2,
                "special: subtle.AnyOverlap": 1,
                "special: cipher.xorBytes": 1,
                "special: cipher.init.ializers": 1,
                "special: cipher.init": 1,
                "special: cipher.xorBytesSSE2": 1,
                "special: hash.crypto": 1,
                "special: eq.crypto": 1,
                "special: aes.sliceForAppend": 1,
                "special: aes.encryptBlockGo": 1,
                "special: binary.bigEndian.Uint32": 1,
                "special: binary.bigEndian.PutUint32": 1,
                "special: aes.decryptBlockGo": 1,
                "special: aes.expandKeyGo": 1,
                "special: aes.rotw": 1,
                "special: aes.subw": 1,
                "special: aes.KeySizeError.Error": 1,
                "special: aes.NewCipher": 1,
                "special: aes.newCipherGeneric": 1,
                "special: aes.newCipher": 1,
                "special: aes.init.ializers": 1,
                "special: aes.init": 1,
                "special: aes.encryptBlockAsm": 1,
                "special: aes.decryptBlockAsm": 1,
                "special: aes.expandKeyAsm": 1,
                "special: aes.gcmAesFinish": 1,
                "special: aes.gcmAesInit": 1,
                "special: aes.gcmAesData": 1,
                "special: aes.gcmAesEnc": 1,
                "special: aes.gcmAesDec": 1,
                "special: base64.NewEncoding": 1,
                "special: base64.Encoding.WithPadding": 1,
                "special: base64.Encoding.Strict": 1,
                "special: base64.CorruptInputError.Error": 1,
                "special: binary.bigEndian.PutUint64": 1,
                "special: base64.init.ializers": 1,
                "special: base64.init": 1,
                "special: hash.encoding": 16,
                "special: eq.encoding": 16,
                "special: strings.explode": 1,
                "special: strings.hashStr": 1,
                "special: strings.hashStrRev": 1,
                "special: strings.Count": 1,
                "special: strings.LastIndex": 1,
                "special: strings.IndexRune": 1,
                "special: strings.IndexByte": 1,
                "special: strings.IndexAny": 1,
                "special: strings.LastIndexByte": 1,
                "special: strings.genSplit": 1,
                "special: strings.Join": 1,
                "special: strings.Map": 1,
                "special: strings.Repeat": 1,
                "special: strings.ToUpper": 1,
                "special: strings.ToLower": 1,
                "special: strings.TrimRightFunc": 1,
                "special: strings.TrimFunc": 1,
                "special: strings.TrimLeftFunc": 1,
                "special: strings.indexFunc": 1,
                "special: strings.lastIndexFunc": 1,
                "special: strings.makeASCIISet": 1,
                "special: strings.makeCutsetFunc": 1,
                "special: strings.Trim": 1,
                "special: strings.TrimLeft": 1,
                "special: strings.TrimRight": 1,
                "special: strings.Replace": 1,
                "special: strings.EqualFold": 1,
                "special: strings.Index": 1,
                "special: strings.indexRabinKarp": 1,
                "special: strings.makeCutsetFunc.func1": 1,
                "special: strings.makeCutsetFunc.func2": 1,
                "special: strings.makeCutsetFunc.func3": 1,
                "special: strings.init": 1,
                "special: hash.strings.Reader": 1,
                "special: eq.strings.Reader": 1,
                "special: hex.InvalidByteError.Error": 1,
                "special: hex.Decode": 1,
                "special: hex.fromHexChar": 1,
                "special: hex.init.ializers": 1,
                "special: hex.init": 1,
                "special: url.EscapeError.Error": 1,
                "special: url.InvalidHostError.Error": 1,
                "special: url.shouldEscape": 1,
                "special: url.unescape": 1,
                "special: url.ishex": 1,
                "special: url.unhex": 1,
                "special: url.escape": 1,
                "special: url.getscheme": 1,
                "special: url.split": 1,
                "special: url.Parse": 1,
                "special: url.parse": 1,
                "special: strings.HasSuffix": 1,
                "special: strings.HasPrefix": 1,
                "special: url.parseAuthority": 1,
                "special: strings.Contains": 1,
                "special: url.UserPassword": 1,
                "special: url.User": 1,
                "special: url.parseHost": 1,
                "special: fmt.Errorf": 1,
                "special: url.validEncodedPath": 1,
                "special: url.validOptionalPort": 1,
                "special: url.Values.Get": 1,
                "special: url.Values.Set": 1,
                "special: url.Values.Add": 1,
                "special: url.Values.Del": 1,
                "special: url.parseQuery": 1,
                "special: url.QueryUnescape": 1,
                "special: url.Values.Encode": 1,
                "special: sort.Strings": 1,
                "special: url.QueryEscape": 1,
                "special: url.resolvePath": 1,
                "special: strings.Split": 1,
                "special: strings.TrimPrefix": 1,
                "special: url.ParseQuery": 1,
                "special: url.stripPort": 1,
                "special: url.portOnly": 1,
                "special: url.validUserinfo": 1,
                "special: url.stringContainsCTLByte": 1,
                "special: url.init": 1,
                "special: hash.net": 3,
                "special: eq.net": 3,
                "special: syntax.patchList.patch": 1,
                "special: syntax.patchList.append": 1,
                "special: syntax.patchList.next": 1,
                "special: syntax.Compile": 1,
                "special: syntax.Op.String": 1,
                "special: syntax.ErrorCode.String": 1,
                "special: syntax.minFoldRune": 1,
                "special: syntax.repeatIsValid": 1,
                "special: syntax.cleanAlt": 1,
                "special: syntax.isCharClass": 1,
                "special: syntax.literalRegexp": 1,
                "special: syntax.Parse": 1,
                "special: syntax.isValidCaptureName": 1,
                "special: syntax.isalnum": 1,
                "special: syntax.matchRune": 1,
                "special: syntax.mergeCharClass": 1,
                "special: syntax.unhex": 1,
                "special: syntax.unicodeTable": 1,
                "special: syntax.cleanClass": 1,
                "special: syntax.appendLiteral": 1,
                "special: syntax.appendRange": 1,
                "special: syntax.appendFoldedRange": 1,
                "special: syntax.appendClass": 1,
                "special: syntax.appendFoldedClass": 1,
                "special: syntax.appendNegatedClass": 1,
                "special: syntax.appendTable": 1,
                "special: syntax.appendNegatedTable": 1,
                "special: syntax.negateClass": 1,
                "special: syntax.ranges.Less": 1,
                "special: syntax.ranges.Len": 1,
                "special: syntax.ranges.Swap": 1,
                "special: syntax.checkUTF8": 1,
                "special: syntax.nextRune": 1,
                "special: syntax.InstOp.String": 1,
                "special: syntax.IsWordChar": 1,
                "special: syntax.bw": 1,
                "special: syntax.dumpProg": 1,
                "special: syntax.dumpInst": 1,
                "special: syntax.u32": 1,
                "special: strconv.QuoteToASCII": 1,
                "special: syntax.writeRegexp": 1,
                "special: syntax.escape": 1,
                "special: unicode.IsPrint": 1,
                "special: strings.ContainsRune": 1,
                "special: syntax.simplify1": 1,
                "special: syntax.init.ializers": 1,
                "special: syntax.init": 1,
                "special: hash.regexp": 1,
                "special: eq.regexp": 1,
                "special: regexp.freeBitState": 1,
                "special: regexp.newBitState": 1,
                "special: regexp.lazyFlag.match": 1,
                "special: regexp.newLazyFlag": 1,
                "special: regexp.freeOnePassMachine": 1,
                "special: regexp.newOnePassMachine": 1,
                "special: regexp.onePassPrefix": 1,
                "special: regexp.iop": 1,
                "special: regexp.onePassNext": 1,
                "special: regexp.mergeRuneSets": 1,
                "special: regexp.mergeRuneSets.func2": 1,
                "special: regexp.cleanupOnePass": 1,
                "special: regexp.onePassCopy": 1,
                "special: regexp.runeSlice.Len": 1,
                "special: regexp.runeSlice.Less": 1,
                "special: regexp.runeSlice.Swap": 1,
                "special: regexp.makeOnePass": 1,
                "special: regexp.newQueue": 1,
                "special: regexp.compileOnePass": 1,
                "special: regexp.compile": 1,
                "special: regexp.maxBitStateLen": 1,
                "special: regexp.shouldBacktrack": 1,
                "special: regexp.MustCompile": 1,
                "special: regexp.Compile": 1,
                "special: regexp.quote": 1,
                "special: bytes.HasPrefix": 1,
                "special: regexp.init.0": 1,
                "special: regexp.QuoteMeta": 1,
                "special: regexp.special": 1,
                "special: regexp.extract": 1,
                "special: unicode.IsLetter": 1,
                "special: unicode.IsDigit": 1,
                "special: regexp.mergeRuneSets.func1": 1,
                "special: regexp.makeOnePass.func1": 1,
                "special: ReplaceAllString.func1": 1,
                "special: ReplaceAllLiteralString.func1": 1,
                "special: ReplaceAllStringFunc.func1": 1,
                "special: ReplaceAll.func1": 1,
                "special: ReplaceAllLiteral.func1": 1,
                "special: ReplaceAllFunc.func1": 1,
                "special: FindAll.func1": 1,
                "special: FindAllIndex.func1": 1,
                "special: FindAllString.func1": 1,
                "special: FindAllStringIndex.func1": 1,
                "special: FindAllSubmatch.func1": 1,
                "special: FindAllSubmatchIndex.func1": 1,
                "special: FindAllStringSubmatch.func1": 1,
                "special: FindAllStringSubmatchIndex.func1": 1,
                "special: regexp.init": 1,
                "special: hash.regexp.entry": 1,
                "special: eq.regexp.entry": 1,
                "special: hash.regexp.inputReader": 1,
                "special: eq.regexp.inputReader": 1,
                "special: hash.regexp.job": 1,
                "special: eq.regexp.job": 1,
                "special: log.New": 1,
                "special: log.itoa": 1,
                "special: log.Printf": 1,
                "special: log.Println": 1,
                "special: log.Fatalf": 1,
                "special: log.Panicf": 1,
                "special: log.init.ializers": 1,
                "special: log.init": 1,
                "special: dbg.operandCount": 1,
                "special: dbg.parseFormat": 1,
                "special: dbg.New": 1,
                "special: dbg.NewDbgr": 1,
                "special: dbg.Dbgr.Dbg": 1,
                "special: dbg.standardEmit": 1,
                "special: dbg.Dbgr.Dbgf": 1,
                "special: dbg.Dbgr.DbgDbgf": 1,
                "special: dbg.Dbgr.dbgf": 1,
                "special: emitWriter.emit": 1,
                "special: dbg.ln": 1,
                "special: emitLogger.emit": 1,
                "special: emitLog.emit": 1,
                "special: dbg.Dbgr.DbgDbgf.func1": 1,
                "special: dbg.Dbgr.DbgDbgf.func2": 1,
                "special: dbg.init.ializers": 1,
                "special: dbg.init": 1,
                "special: hash.github.com": 68,
                "special: eq.github.com": 68,
                "special: json.Unmarshal": 1,
                "special: json.Number.String": 1,
                "special: json.Number.Float64": 1,
                "special: json.Number.Int64": 1,
                "special: json.isValidNumber": 1,
                "special: json.indirect": 1,
                "special: reflect.PtrTo": 1,
                "special: reflect.MakeMap": 1,
                "special: VoU/X": 1,
                "special: json.unquote": 1,
                "special: json.getu4": 1,
                "special: json.unquoteBytes": 1,
                "special: json.Marshal": 1,
                "special: json.HTMLEscape": 1,
                "special: json.newEncodeState": 1,
                "special: json.isEmptyValue": 1,
                "special: json.valueEncoder": 1,
                "special: json.typeEncoder": 1,
                "special: json.newTypeEncoder": 1,
                "special: json.invalidValueEncoder": 1,
                "special: json.marshalerEncoder": 1,
                "special: json.addrMarshalerEncoder": 1,
                "special: json.textMarshalerEncoder": 1,
                "special: json.addrTextMarshalerEncoder": 1,
                "special: json.boolEncoder": 1,
                "special: json.intEncoder": 1,
                "special: json.uintEncoder": 1,
                "special: json.floatEncoder.encode": 2,
                "special: json.stringEncoder": 1,
                "special: json.interfaceEncoder": 1,
                "special: json.unsupportedTypeEncoder": 1,
                "special: json.structEncoder.encode": 2,
                "special: json.newStructEncoder": 1,
                "special: json.mapEncoder.encode": 2,
                "special: json.newMapEncoder": 1,
                "special: json.encodeByteSlice": 1,
                "special: base64.NewEncoder": 1,
                "special: json.sliceEncoder.encode": 2,
                "special: json.newSliceEncoder": 1,
                "special: json.arrayEncoder.encode": 2,
                "special: json.newArrayEncoder": 1,
                "special: json.ptrEncoder.encode": 2,
                "special: json.newPtrEncoder": 1,
                "special: json.condAddrEncoder.encode": 2,
                "special: json.newCondAddrEncoder": 1,
                "special: json.isValidTag": 1,
                "special: json.typeByIndex": 1,
                "special: json.byIndex.Len": 1,
                "special: json.byIndex.Swap": 1,
                "special: json.byIndex.Less": 1,
                "special: json.typeFields": 1,
                "special: json.dominantField": 1,
                "special: json.cachedTypeFields": 1,
                "special: json.foldFunc": 1,
                "special: json.equalFoldRight": 1,
                "special: json.asciiEqualFold": 1,
                "special: json.simpleLetterEqualFold": 1,
                "special: json.compact": 1,
                "special: json.newline": 1,
                "special: json.Indent": 1,
                "special: json.checkValid": 1,
                "special: json.stateBeginValueOrEmpty": 1,
                "special: json.isSpace": 1,
                "special: json.stateBeginValue": 1,
                "special: json.stateBeginStringOrEmpty": 1,
                "special: json.stateBeginString": 1,
                "special: json.stateEndValue": 1,
                "special: json.stateEndTop": 1,
                "special: json.stateInString": 1,
                "special: json.stateInStringEsc": 1,
                "special: json.stateInStringEscU": 1,
                "special: json.stateInStringEscU1": 1,
                "special: json.stateInStringEscU12": 1,
                "special: json.stateInStringEscU123": 1,
                "special: json.stateNeg": 1,
                "special: json.state1": 1,
                "special: json.state0": 1,
                "special: json.stateDot": 1,
                "special: json.stateDot0": 1,
                "special: json.stateE": 1,
                "special: json.stateESign": 1,
                "special: json.stateE0": 1,
                "special: json.stateT": 1,
                "special: json.stateTr": 1,
                "special: json.stateTru": 1,
                "special: json.stateF": 1,
                "special: json.stateFa": 1,
                "special: json.stateFal": 1,
                "special: json.stateFals": 1,
                "special: json.stateN": 1,
                "special: json.stateNu": 1,
                "special: json.stateNul": 1,
                "special: json.stateError": 1,
                "special: json.quoteChar": 1,
                "special: json.parseTag": 1,
                "special: json.tagOptions.Contains": 1,
                "special: marshal.func1": 1,
                "special: json.typeEncoder.func1": 1,
                "special: json.mapEncoder.encode.func1": 1,
                "special: json.typeFields.func1": 1,
                "special: json.init.ializers": 1,
                "special: json.init": 1,
                "special: json.jsonError.Error": 1,
                "special: encode-fm": 7,
                "special: path.Clean": 1,
                "special: path.Join": 1,
                "special: path.Base": 1,
                "special: path.Dir": 1,
                "special: path.Split": 1,
                "special: path.init.ializers": 1,
                "special: path.init": 1,
                "special: base64vlq.init.0": 1,
                "special: base64vlq.Decoder.Decode": 1,
                "special: base64vlq.fromVLQSigned": 1,
                "special: base64vlq.init": 1,
                "special: 2ev1.Parse": 1,
                "special: path.IsAbs": 1,
                "special: 2ev1.parseMappings": 1,
                "special: strings.NewReader": 1,
                "special: base64vlq.NewDecoder": 1,
                "special: 2ev1.parseGenCol": 1,
                "special: 2ev1.parseSourcesInd": 1,
                "special: 2ev1.parseSourceLine": 1,
                "special: 2ev1.parseSourceCol": 1,
                "special: 2ev1.parseNamesInd": 1,
                "special: Source.func1": 1,
                "special: 2ev1.init": 1,
                "special: file.init": 1,
                "special: token.Token.String": 1,
                "special: token.init.ializers": 1,
                "special: token.init": 1,
                "special: ast.CommentPosition.String": 1,
                "special: ast.Comment.String": 1,
                "special: ast.CommentMap.AddComment": 1,
                "special: ast.CommentMap.AddComments": 1,
                "special: ast.CommentMap.Size": 1,
                "special: ast.CommentMap.MoveComments": 1,
                "special: FetchAll.func1": 1,
                "special: Fetch.func1": 1,
                "special: ast.init": 1,
                "special: filepath.init.ializers": 1,
                "special: path/filepath": 2,
                "special: filepath.init": 1,
                "special: ioutil.readAll": 1,
                "special: io/ioutil": 4,
                "special: ioutil.ReadFile": 1,
                "special: os.Open": 1,
                "special: ioutil.readAll.func1": 1,
                "special: ioutil.init": 1,
                "special: parser.Error.Error": 1,
                "special: parser.ErrorList.Len": 1,
                "special: parser.ErrorList.Swap": 1,
                "special: parser.ErrorList.Less": 1,
                "special: parser.ErrorList.Sort": 1,
                "special: parser.ErrorList.Error": 1,
                "special: parser.ErrorList.Err": 1,
                "special: token.IsKeyword": 1,
                "special: parser.isIdentifierStart": 1,
                "special: parser.isIdentifierPart": 1,
                "special: parser.hex2decimal": 1,
                "special: parser.digitValue": 1,
                "special: ast.NewComment": 1,
                "special: parser.isLineTerminator": 1,
                "special: parser.parseNumberLiteral": 1,
                "special: parser.parseStringLiteral": 1,
                "special: bytes.NewBuffer": 1,
                "special: parser.isDigit": 1,
                "special: parser.isDecimalDigit": 1,
                "special: parser.ReadSource": 1,
                "special: io.Copy": 1,
                "special: parser.ReadSourceMap": 1,
                "special: parser.ParseFileWithSourceMap": 1,
                "special: file.NewFile": 1,
                "special: ast.NewComments": 1,
                "special: bytes.Split": 1,
                "special: bytes.SplitN": 1,
                "special: parser.ParseFunction": 1,
                "special: parser.lineCount": 1,
                "special: parser.TransformRegExp": 1,
                "special: eLeftHandSideExpressionAllowCall.func1": 1,
                "special: parseRelationalExpression.func1": 1,
                "special: parseFunctionBlock.func1": 1,
                "special: parseSwitchStatement.func1": 1,
                "special: parseIterationStatement.func1": 1,
                "special: parseDoWhileStatement.func1": 1,
                "special: parser.init.ializers": 1,
                "special: parser.init": 1,
                "special: parseUnaryExpression-fm": 1,
                "special: parseMultiplicativeExpression-fm": 1,
                "special: parseAdditiveExpression-fm": 1,
                "special: parseShiftExpression-fm": 1,
                "special: parseRelationalExpression-fm": 1,
                "special: parseEqualityExpression-fm": 1,
                "special: parseBitwiseAndExpression-fm": 1,
                "special: arseBitwiseExclusiveOrExpression-fm": 1,
                "special: parseBitwiseOrExpression-fm": 1,
                "special: parseLogicalAndExpression-fm": 1,
                "special: parseAssignmentExpression-fm": 1,
                "special: rand.absInt32": 1,
                "special: rand.NewSource": 1,
                "special: rand.New": 1,
                "special: rand.read": 1,
                "special: rand.Float64": 1,
                "special: rand.seedrand": 1,
                "special: rand.init.ializers": 1,
                "special: rand.init": 1,
                "special: hash.math": 2,
                "special: eq.math": 2,
                "special: Int63-fm": 2,
                "special: rand.Source64.Int63": 1,
                "special: registry.Entry.Source": 1,
                "special: registry.Apply": 1,
                "special: gob.decBoolArray": 1,
                "special: gob.decBoolSlice": 1,
                "special: gob.decComplex64Array": 1,
                "special: gob.decComplex64Slice": 1,
                "special: gob.float32FromBits": 1,
                "special: gob.float64FromBits": 1,
                "special: gob.error": 1,
                "special: gob.decComplex128Array": 1,
                "special: gob.decComplex128Slice": 1,
                "special: gob.decFloat32Array": 1,
                "special: gob.decFloat32Slice": 1,
                "special: gob.decFloat64Array": 1,
                "special: gob.decFloat64Slice": 1,
                "special: gob.decIntArray": 1,
                "special: gob.decIntSlice": 1,
                "special: gob.decInt16Array": 1,
                "special: gob.decInt16Slice": 1,
                "special: gob.decInt32Array": 1,
                "special: gob.decInt32Slice": 1,
                "special: gob.decInt64Array": 1,
                "special: gob.decInt64Slice": 1,
                "special: gob.decInt8Array": 1,
                "special: gob.decInt8Slice": 1,
                "special: gob.decStringArray": 1,
                "special: gob.decStringSlice": 1,
                "special: gob.decUintArray": 1,
                "special: gob.decUintSlice": 1,
                "special: gob.decUint16Array": 1,
                "special: gob.decUint16Slice": 1,
                "special: gob.decUint32Array": 1,
                "special: gob.decUint32Slice": 1,
                "special: gob.decUint64Array": 1,
                "special: gob.decUint64Slice": 1,
                "special: gob.decUintptrArray": 1,
                "special: gob.decUintptrSlice": 1,
                "special: gob.decodeUintReader": 1,
                "special: gob.ignoreUint": 1,
                "special: gob.ignoreTwoUints": 1,
                "special: gob.decAlloc": 1,
                "special: gob.decBool": 1,
                "special: gob.decInt8": 1,
                "special: gob.decUint8": 1,
                "special: gob.decInt16": 1,
                "special: gob.decUint16": 1,
                "special: gob.decInt32": 1,
                "special: gob.decUint32": 1,
                "special: gob.decInt64": 1,
                "special: gob.decUint64": 1,
                "special: gob.decFloat32": 1,
                "special: gob.decFloat64": 1,
                "special: gob.decComplex64": 1,
                "special: gob.decComplex128": 1,
                "special: gob.decUint8Slice": 1,
                "special: gob.decString": 1,
                "special: gob.ignoreUint8Array": 1,
                "special: gob.decodeIntoValue": 1,
                "special: gob.overflow": 1,
                "special: gob.init.0": 1,
                "special: gob.allocValue": 1,
                "special: gob.toInt": 1,
                "special: gob.encBoolArray": 1,
                "special: gob.encBoolSlice": 1,
                "special: gob.encComplex64Array": 1,
                "special: gob.encComplex64Slice": 1,
                "special: gob.floatBits": 1,
                "special: gob.encComplex128Array": 1,
                "special: gob.encComplex128Slice": 1,
                "special: gob.encFloat32Array": 1,
                "special: gob.encFloat32Slice": 1,
                "special: gob.encFloat64Array": 1,
                "special: gob.encFloat64Slice": 1,
                "special: gob.encIntArray": 1,
                "special: gob.encIntSlice": 1,
                "special: gob.encInt16Array": 1,
                "special: gob.encInt16Slice": 1,
                "special: gob.encInt32Array": 1,
                "special: gob.encInt32Slice": 1,
                "special: gob.encInt64Array": 1,
                "special: gob.encInt64Slice": 1,
                "special: gob.encInt8Array": 1,
                "special: gob.encInt8Slice": 1,
                "special: gob.encStringArray": 1,
                "special: gob.encStringSlice": 1,
                "special: gob.encUintArray": 1,
                "special: gob.encUintSlice": 1,
                "special: gob.encUint16Array": 1,
                "special: gob.encUint16Slice": 1,
                "special: gob.encUint32Array": 1,
                "special: gob.encUint32Slice": 1,
                "special: gob.encUint64Array": 1,
                "special: gob.encUint64Slice": 1,
                "special: gob.encUintptrArray": 1,
                "special: gob.encUintptrSlice": 1,
                "special: gob.encIndirect": 1,
                "special: gob.encBool": 1,
                "special: gob.encInt": 1,
                "special: gob.encUint": 1,
                "special: gob.encFloat": 1,
                "special: gob.encComplex": 1,
                "special: gob.encUint8Array": 1,
                "special: gob.encString": 1,
                "special: gob.encStructTerminator": 1,
                "special: gob.valid": 1,
                "special: gob.encodeReflectValue": 1,
                "special: reflect.Indirect": 1,
                "special: gob.isZero": 1,
                "special: gob.encOpFor": 1,
                "special: gob.gobEncodeOpFor": 1,
                "special: gob.compileEnc": 1,
                "special: gob.getEncEngine": 1,
                "special: gob.buildEncEngine": 1,
                "special: gob.errorf": 1,
                "special: gob.catchError": 1,
                "special: gob.validUserType": 1,
                "special: ew/x3w": 1,
                "special: gob.implementsInterface": 1,
                "special: gob.userType": 1,
                "special: gob.setTypeId": 1,
                "special: gob.typeId.string": 1,
                "special: gob.typeId.gobType": 1,
                "special: gob.typeId.name": 1,
                "special: gob.init.1": 1,
                "special: gob.newTypeObject": 1,
                "special: gob.newGobEncoderType": 1,
                "special: gob.newMapType": 1,
                "special: gob.newArrayType": 1,
                "special: gob.newStructType": 1,
                "special: gob.newSliceType": 1,
                "special: gob.isExported": 1,
                "special: unicode.IsUpper": 1,
                "special: gob.isSent": 1,
                "special: gob.getBaseType": 1,
                "special: gob.getType": 1,
                "special: gob.checkId": 1,
                "special: gob.bootstrapType": 1,
                "special: gob.getTypeInfo": 1,
                "special: gob.lookupTypeInfo": 1,
                "special: gob.buildTypeInfo": 1,
                "special: gob.mustGetTypeInfo": 1,
                "special: gob.RegisterName": 1,
                "special: gob.Register": 1,
                "special: gob.registerBasics": 1,
                "special: gob.glob": 1,
                "special: decOpFor.func1": 1,
                "special: decOpFor.func2": 1,
                "special: decOpFor.func3": 1,
                "special: decOpFor.func4": 1,
                "special: decOpFor.func5": 1,
                "special: decIgnoreOpFor.func1": 1,
                "special: decIgnoreOpFor.func2": 1,
                "special: decIgnoreOpFor.func3": 1,
                "special: decIgnoreOpFor.func4": 1,
                "special: decIgnoreOpFor.func5": 1,
                "special: decIgnoreOpFor.func6": 1,
                "special: gobDecodeOpFor.func1": 1,
                "special: gob.encOpFor.func1": 1,
                "special: gob.encOpFor.func2": 1,
                "special: gob.encOpFor.func3": 1,
                "special: gob.encOpFor.func4": 1,
                "special: gob.encOpFor.func5": 1,
                "special: gob.gobEncodeOpFor.func1": 1,
                "special: gob.newTypeObject.func1": 1,
                "special: gob.init.ializers": 1,
                "special: gob.init": 1,
                "special: otto.builtinGlobal": 11,
                "special: otto.FunctionCall.Argument": 1,
                "special: otto.valueOfArrayIndex": 1,
                "special: otto.getValueOfArrayIndex": 1,
                "special: otto.Value.isEmpty": 1,
                "special: otto.Value.IsString": 1,
                "special: otto.newScope": 1,
                "special: otto.toValue": 11,
                "special: otto.digitValue": 1,
                "special: otto.NaNValue": 1,
                "special: otto.builtin": 3,
                "special: hex.DecodeString": 1,
                "special: otto.builtinArray": 23,
                "special: otto.builtinNewArray": 1,
                "special: otto.builtinNewArrayNative": 1,
                "special: otto.Value.IsNumber": 1,
                "special: otto.arrayIndexToString": 1,
                "special: otto.isArray": 1,
                "special: otto.Value.IsDefined": 1,
                "special: otto.FunctionCall.getArgument": 1,
                "special: otto.sortCompare": 1,
                "special: otto.arraySortSwap": 1,
                "special: otto.arraySortQuickPartition": 1,
                "special: otto.arraySortQuickSort": 1,
                "special: otto.Value.IsUndefined": 1,
                "special: otto.builtinBoolean": 3,
                "special: otto.builtinNewBoolean": 1,
                "special: otto.Value.IsBoolean": 1,
                "special: otto.builtinDate": 50,
                "special: otto.builtinNewDate": 1,
                "special: otto.dateFromGoMonth": 1,
                "special: otto.builtinError": 2,
                "special: otto.builtinNewError": 1,
                "special: otto.builtinEvalError": 1,
                "special: otto.builtinNewEvalError": 1,
                "special: otto.builtinTypeError": 1,
                "special: otto.builtinNewTypeError": 1,
                "special: otto.builtinRangeError": 1,
                "special: otto.builtinNewRangeError": 1,
                "special: otto.builtinReferenceError": 1,
                "special: otto.builtinNewReferenceError": 1,
                "special: otto.builtinSyntaxError": 1,
                "special: otto.builtinNewSyntaxError": 1,
                "special: otto.builtinURIError": 1,
                "special: otto.builtinNewURIError": 1,
                "special: otto.builtinFunction": 5,
                "special: otto.builtinNewFunction": 1,
                "special: otto.builtinNewFunctionNative": 1,
                "special: otto.FunctionCall.slice": 1,
                "special: otto.builtinJSON": 8,
                "special: otto.newObject": 1,
                "special: otto.Value.IsObject": 1,
                "special: otto.Value.IsFunction": 1,
                "special: otto.builtinMath": 18,
                "special: otto.negativeInfinityValue": 1,
                "special: otto.positiveInfinityValue": 1,
                "special: otto.builtinNumber": 7,
                "special: otto.numberValueFromNumberArgumentLis": 1,
                "special: otto.builtinNewNumber": 1,
                "special: otto.builtinObject": 28,
                "special: otto.builtinNewObject": 1,
                "special: otto.FunctionCall.toObject": 1,
                "special: property.enumerable": 1,
                "special: otto.Value.IsNull": 1,
                "special: otto.builtinRegExp": 5,
                "special: otto.builtinNewRegExp": 1,
                "special: otto.stringValueFromStringArgumentLis": 1,
                "special: otto.builtinString": 26,
                "special: otto.builtinNewString": 1,
                "special: otto.Value.isRegExp": 1,
                "special: strings.SplitN": 1,
                "special: otto.newPropertyReference": 1,
                "special: otto.newReturnResult": 1,
                "special: otto.newException": 1,
                "special: 2H.G2t": 1,
                "special: otto.cmpl": 1,
                "special: otto.formatForConsole": 1,
                "special: otto.builtinConsole": 7,
                "special: error.format": 1,
                "special: error.formatWithStack": 1,
                "special: frame.location": 1,
                "special: otto.Error.Error": 1,
                "special: otto.Error.String": 1,
                "special: otto.newError": 1,
                "special: error.describe": 1,
                "special: otto.catchPanic": 1,
                "special: otto.positiveZeroValue": 1,
                "special: otto.negativeZeroValue": 1,
                "special: otto.valueKindDispatchKey": 1,
                "special: otto.makeEqualDispatch": 1,
                "special: otto.calculateLessThan": 1,
                "special: otto.newContext": 1,
                "special: YI-L": 1,
                "special: YW-Z": 1,
                "special: otto.newConsoleObject": 1,
                "special: otto.Value.IsPrimitive": 1,
                "special: otto.objectEnumerate": 1,
                "special: otto.init.0": 1,
                "special: otto.objectGetOwnProperty": 1,
                "special: otto.objectGetProperty": 1,
                "special: otto.objectGet": 1,
                "special: otto.objectCanPut": 1,
                "special: property.writable": 1,
                "special: otto.objectPut": 1,
                "special: otto.objectHasProperty": 1,
                "special: otto.objectHasOwnProperty": 1,
                "special: otto.objectDefineOwnProperty": 1,
                "special: property.isEmpty": 1,
                "special: property.isGenericDescriptor": 1,
                "special: property.isDataDescriptor": 1,
                "special: property.writeSet": 1,
                "special: property.configurable": 1,
                "special: property.isAccessorDescriptor": 1,
                "special: property.enumerateSet": 1,
                "special: otto.objectDelete": 1,
                "special: otto.objectClone": 1,
                "special: otto.New": 1,
                "special: otto.Otto.Run": 1,
                "special: otto.Value.safe": 1,
                "special: otto.Otto.Eval": 1,
                "special: otto.Otto.Get": 1,
                "special: otto.Otto.Set": 1,
                "special: otto.Otto.ToValue": 1,
                "special: otto.Otto.SetDebuggerHandler": 1,
                "special: otto.Otto.SetRandomSource": 1,
                "special: otto.Otto.SetStackDepthLimit": 1,
                "special: otto.Otto.SetStackTraceLimit": 1,
                "special: otto.Otto.MakeCustomError": 1,
                "special: otto.Otto.MakeRangeError": 1,
                "special: otto.Otto.MakeSyntaxError": 1,
                "special: otto.Otto.MakeTypeError": 1,
                "special: otto.Otto.Context": 1,
                "special: otto.Otto.ContextLimit": 1,
                "special: otto.Otto.ContextSkip": 1,
                "special: otto.Otto.Call": 1,
                "special: otto.Otto.Object": 1,
                "special: otto.Object.Call": 1,
                "special: otto.Object.Value": 1,
                "special: otto.Object.Get": 1,
                "special: otto.Object.Set": 1,
                "special: otto.Object.Keys": 1,
                "special: otto.Object.KeysByParent": 1,
                "special: otto.Object.Class": 1,
                "special: otto.stringToArrayIndex": 1,
                "special: otto.valueToRangeIndex": 1,
                "special: otto.rangeStartEnd": 1,
                "special: otto.rangeStartLength": 1,
                "special: otto.hereBeDragons": 1,
                "special: property.get": 1,
                "special: otto.toPropertyDescriptor": 1,
                "special: otto.checkObjectCoercible": 1,
                "special: otto.testObjectCoercible": 1,
                "special: otto.Value.Class": 1,
                "special: otto.getStashProperties": 1,
                "special: argumentsObject.clone": 1,
                "special: argumentsObject.get": 1,
                "special: argumentsObject.put": 1,
                "special: otto.argumentsGet": 1,
                "special: otto.argumentsGetOwnProperty": 1,
                "special: otto.argumentsDefineOwnProperty": 1,
                "special: otto.argumentsDelete": 1,
                "special: argumentsObject.delete": 1,
                "special: otto.objectLength": 1,
                "special: otto.arrayUint32": 1,
                "special: otto.isUint32": 1,
                "special: otto.arrayDefineOwnProperty": 1,
                "special: otto.ecmaTime": 1,
                "special: otto.dateToGoMonth": 1,
                "special: otto.timeToEpoch": 1,
                "special: otto.epochToInteger": 1,
                "special: otto.epochToTime": 1,
                "special: otto.dateObjectOf": 1,
                "special: otto.newDateTime": 1,
                "special: otto.dateParse": 1,
                "special: otto.defaultConstruct": 1,
                "special: bindFunctionObject.construct": 1,
                "special: otto.FunctionCall.CallerLocation": 1,
                "special: goArrayObject.getValue": 1,
                "special: goArrayObject.setValue": 1,
                "special: otto.goArrayGetOwnProperty": 1,
                "special: otto.goArrayEnumerate": 1,
                "special: otto.goArrayDefineOwnProperty": 1,
                "special: otto.goArrayDelete": 1,
                "special: I.J": 1,
                "special: otto.goMapGetOwnProperty": 1,
                "special: goMapObject.toKey": 1,
                "special: otto.goMapEnumerate": 1,
                "special: otto.goMapDefineOwnProperty": 1,
                "special: goMapObject.toValue": 1,
                "special: otto.goMapDelete": 1,
                "special: goSliceObject.getValue": 1,
                "special: goSliceObject.setValue": 1,
                "special: otto.goSliceGetOwnProperty": 1,
                "special: otto.goSliceEnumerate": 1,
                "special: otto.goSliceDefineOwnProperty": 1,
                "special: otto.goSliceDelete": 1,
                "special: goStructObject.getValue": 1,
                "special: otto.validGoStructName": 1,
                "special: goStructObject.field": 1,
                "special: goStructObject.setValue": 1,
                "special: otto.goStructGetOwnProperty": 1,
                "special: otto.goStructEnumerate": 1,
                "special: otto.goStructCanPut": 1,
                "special: otto.goStructPut": 1,
                "special: otto.goStructMarshalJSON": 1,
                "special: otto.getIdentifierReference": 1,
                "special: otto.execRegExp": 1,
                "special: otto.execResultToArray": 1,
                "special: stringASCII.Length": 1,
                "special: stringASCII.At": 1,
                "special: stringASCII.String": 1,
                "special: stringWide.Length": 1,
                "special: stringWide.At": 1,
                "special: stringWide.String": 1,
                "special: otto.stringAt": 1,
                "special: otto.stringEnumerate": 1,
                "special: otto.stringGetOwnProperty": 1,
                "special: otto.Value.isCallable": 1,
                "special: otto.Value.Call": 1,
                "special: otto.Value.call": 1,
                "special: otto.Value.constructSafe": 1,
                "special: otto.Value.construct": 1,
                "special: otto.Value.IsNaN": 1,
                "special: otto.Value.String": 1,
                "special: otto.Value.ToBoolean": 1,
                "special: otto.Value.numberValue": 1,
                "special: otto.Value.ToFloat": 1,
                "special: otto.Value.ToInteger": 1,
                "special: otto.Value.ToString": 1,
                "special: otto.Value.Object": 1,
                "special: otto.Value.reference": 1,
                "special: otto.Value.resolve": 1,
                "special: otto.sameValue": 1,
                "special: otto.strictEqualityComparison": 1,
                "special: otto.Value.Export": 1,
                "special: otto.Value.export": 1,
                "special: otto.Value.evaluateBreakContinue": 1,
                "special: otto.Value.evaluateBreak": 1,
                "special: otto.Value.exportNative": 1,
                "special: otto.Value.toReflectValue": 1,
                "special: otto.stringToReflectValue": 1,
                "special: strconv.ParseBool": 1,
                "special: otto.Value.bool": 1,
                "special: otto.parseNumber": 1,
                "special: otto.Value.float64": 1,
                "special: otto.toIntegerFloat": 1,
                "special: otto.Value.number": 1,
                "special: otto.toInt32": 1,
                "special: otto.toUint32": 1,
                "special: otto.toUint16": 1,
                "special: otto.toNumberPrimitive": 1,
                "special: otto.toPrimitive": 1,
                "special: otto.floatToString": 1,
                "special: otto.numberToStringRadix": 1,
                "special: otto.Value.string": 1,
                "special: strconv.FormatBool": 1,
                "special: otto.glob": 2,
                "special: encodeURI.func1": 1,
                "special: reviveWalk.func1": 1,
                "special: stringifyWalk.func1": 1,
                "special: stringifyWalk.func2": 1,
                "special: defineProperties.func1": 1,
                "special: create.func1": 1,
                "special: isSealed.func1": 1,
                "special: seal.func1": 1,
                "special: isFrozen.func1": 1,
                "special: freeze.func1": 1,
                "special: keys.func1": 1,
                "special: getOwnPropertyNames.func1": 1,
                "special: findAndReplaceString.func1": 1,
                "special: nodeProgram.func1": 1,
                "special: nodeStatement.func1": 1,
                "special: nodeForInStatement.func1": 1,
                "special: nodeTryStatement.func1": 1,
                "special: nodeTryStatement.func2": 1,
                "special: nodeTryStatement.func3": 1,
                "special: nodeWithStatement.func1": 1,
                "special: otto.catchPanic.func1": 1,
                "special: otto.makeEqualDispatch.func1": 1,
                "special: otto.makeEqualDispatch.func2": 1,
                "special: otto.makeEqualDispatch.func3": 1,
                "special: otto.makeEqualDispatch.func4": 1,
                "special: otto.New.func1": 1,
                "special: otto.Otto.Get.func1": 1,
                "special: otto.Otto.getValue": 1,
                "special: otto.Otto.Set.func1": 1,
                "special: otto.Otto.setValue": 1,
                "special: otto.Otto.Call.func1": 1,
                "special: otto.Otto.Call.func2": 1,
                "special: otto.Object.Get.func1": 1,
                "special: otto.Object.Set.func1": 1,
                "special: otto.Object.Keys.func1": 1,
                "special: otto.Object.KeysByParent.func1": 1,
                "special: tryCatchEvaluate.func1": 1,
                "special: error.messageValue": 1,
                "special: safeToValue.func1": 1,
                "special: convertCallParameter.func1": 1,
                "special: convertCallParameter.func2": 1,
                "special: convertCallParameter.func3": 1,
                "special: convertCallParameter.func4": 1,
                "special: toValue.func1.1": 1,
                "special: toValue.func1": 1,
                "special: runOrEval.func1": 1,
                "special: otto.newDateTime.func1": 1,
                "special: newErrorObject.func1": 1,
                "special: newNativeFunctionObject.func1": 1,
                "special: newNodeFunctionObject.func1": 1,
                "special: call.func1": 1,
                "special: call.func2": 1,
                "special: otto.Value.Call.func1": 1,
                "special: otto.Value.constructSafe.func1": 1,
                "special: otto.Value.String.func1": 1,
                "special: otto.Value.ToBoolean.func1": 1,
                "special: otto.Value.ToFloat.func1": 1,
                "special: otto.Value.ToInteger.func1": 1,
                "special: otto.Value.ToString.func1": 1,
                "special: otto.Value.export.func1": 1,
                "special: otto.init.ializers": 1,
                "special: otto.init": 1,
                "special: otto.name": 2,
                "special: otto.exists": 2,
                "special: otto.defined": 2,
                "special: otto.value": 2,
                "special: engine.New": 1,
                "special: parser.ParseFile": 1,
                "special: engine.normalizeConsoleArgs": 1,
                "special: engine.logFuncFactory": 1,
                "special: engine.HijackConsoleLogging": 1,
                "special: timeoutMonitor.func1": 1,
                "special: engine.logFuncFactory.func1": 1,
                "special: engine.logFuncFactory.func2": 1,
                "special: engine.logFuncFactory.func3": 1,
                "special: engine.logFuncFactory.func4": 1,
                "special: engine.logFuncFactory.func5": 1,
                "special: engine.logFuncFactory.func6": 1,
                "special: engine.init.ializers": 1,
                "special: engine.init": 1,
                "special: createType-fm": 1,
                "special: retrieveAssetAsString-fm": 1,
                "special: retrieveAssetAsBytes-fm": 1,
                "special: os.TerminateSelf": 1,
                "special: com/gen0cide/gscript/stdlib/os": 2,
                "special: os.Getpid": 1,
                "special: syscall.Getpid": 1,
                "special: os.FindProcess": 1,
                "special: memorymodule.memoryRunBinary": 1,
                "special: memorymodule.memoryRunBinary.func1": 1,
                "special: memorymodule.memoryRunBinary.func2": 1,
                "special: memorymodule.init": 1,
                "special: user.Current": 1,
                "special: user.isDomainJoined": 1,
                "special: user.lookupFullNameServer": 1,
                "special: user.lookupFullName": 1,
                "special: user.lookupFullNameDomain": 1,
                "special: user.lookupUsernameAndDomain": 1,
                "special: user.lookupGroupName": 1,
                "special: user.listGroupsForUsernameAndDomain": 1,
                "special: user.newUser": 1,
                "special: user.current": 1,
                "special: user.listGroups": 1,
                "special: user.Current.func1": 1,
                "special: user.init": 1,
                "special: hash.os": 2,
                "special: eq.os": 2,
                "special: user.u": 3,
                "special: user.err": 3,
                "special: main.MDWSFYNZNNMXJND": 1,
                "special: bytes.NewReader": 1,
                "special: base64.NewDecoder": 1,
                "special: runtime.NumCPU": 1,
                "special: main.PUHPXOLPIEVQQDD": 1,
                "special: os.Hostname": 1,
                "special: main.TCZDEDUUYIATUKD": 1,
                "special: main.XXIKHRPRUWKJZFD": 1,
                "special: main.main": 1,
                "special: ZAZLURQCPWDN.func1": 1,
                "special: ZAZLURQCPWDN.func2": 1,
                "special: BGNCMWOQVRMB.func1": 1,
                "special: BGNCMWOQVRMB.func2": 1,
                "special: QZYRBDXWNFPI.func1": 1,
                "special: QZYRBDXWNFPI.func2": 1,
                "special: QZYRBDXWNFPI.func3": 1,
                "special: RSJNGSYGMEYC.func1": 1,
                "special: RSJNGSYGMEYC.func2": 1,
                "special: main.main.func1": 1,
                "special: main.main.func2.1": 1,
                "special: main.main.func2": 1,
                "special: main.NewPUHPXOLPIEVQQD": 1,
                "special: main.main.func3.1": 1,
                "special: main.main.func3": 1,
                "special: main.NewXXIKHRPRUWKJZF": 1,
                "special: main.main.func4.1": 1,
                "special: main.main.func4": 1,
                "special: main.NewMDWSFYNZNNMXJN": 1,
                "special: main.main.func5.1": 1,
                "special: main.main.func5": 1,
                "special: main.NewTCZDEDUUYIATUK": 1,
                "special: main.init": 1,
                "special: MDWSFYNZNNMXJNpuvpvgxibhbwpgud-fm": 1,
                "special: MDWSFYNZNNMXJNQVAOJQYSXLSTF-fm": 1,
                "special: MDWSFYNZNNMXJNOORZMQUBRDPNI-fm": 1,
                "special: MDWSFYNZNNMXJNLNUKLRENITROG-fm": 1,
                "special: MDWSFYNZNNMXJNEEPPLOZDYKCCO-fm": 1,
                "special: MDWSFYNZNNMXJNPSYHDEFDZTDQA-fm": 1,
                "special: MDWSFYNZNNMXJNQXMHUWNCQPNEO-fm": 1,
                "special: MDWSFYNZNNMXJNVRHACEWIOVSXS-fm": 1,
                "special: MDWSFYNZNNMXJNWWAWSHZULFGWS-fm": 1,
                "special: MDWSFYNZNNMXJNzkxhdlxuppzvjcbb-fm": 1,
                "special: MDWSFYNZNNMXJNuoswgsghhncghlat-fm": 1,
                "special: PUHPXOLPIEVQQDpnxtuiqflgtdohgv-fm": 1,
                "special: PUHPXOLPIEVQQDEKMFFIRIUXQPX-fm": 1,
                "special: PUHPXOLPIEVQQDUUZOIGZHYINTL-fm": 1,
                "special: PUHPXOLPIEVQQDWFYMDLROICZIY-fm": 1,
                "special: PUHPXOLPIEVQQDEIARDEIRSTEDR-fm": 1,
                "special: PUHPXOLPIEVQQDYNWFRVRBTYPGG-fm": 1,
                "special: PUHPXOLPIEVQQDGXUTSHLXFJPVY-fm": 1,
                "special: PUHPXOLPIEVQQDDTGPMTBWUVVPB-fm": 1,
                "special: PUHPXOLPIEVQQDxngjsmvxvwogrsrs-fm": 1,
                "special: PUHPXOLPIEVQQDdsnwletsdroskjad-fm": 1,
                "special: TCZDEDUUYIATUKuownfydiwwwygmoc-fm": 1,
                "special: TCZDEDUUYIATUKCJMFKYQCLGFAI-fm": 1,
                "special: TCZDEDUUYIATUKHDUGZAAUOGSUV-fm": 1,
                "special: TCZDEDUUYIATUKZQHILBKOHZOII-fm": 1,
                "special: TCZDEDUUYIATUKUFOQSKPHIFFPB-fm": 1,
                "special: TCZDEDUUYIATUKAFOAGIWSPBCCX-fm": 1,
                "special: TCZDEDUUYIATUKBFEPIXYNNRVDN-fm": 1,
                "special: TCZDEDUUYIATUKNCDUXUPVEXCOY-fm": 1,
                "special: XXIKHRPRUWKJZFokjuqhscbxexnken-fm": 1,
                "special: XXIKHRPRUWKJZFPPNEQHCHQYBIF-fm": 1,
                "special: XXIKHRPRUWKJZFIDMXSRIPGLCIC-fm": 1,
                "special: XXIKHRPRUWKJZFszduzowdpvztpagw-fm": 1,
                "special: XXIKHRPRUWKJZFcjjlakgmzskllqzj-fm": 1,
                "special: main.go": 1,
                "special: tmp/OsRMn2kVWyxoS9O6/main": 1,
                "special: XXIKHRPRUWKJZF.go": 1,
                "special: tmp/OsRMn2kVWyxoS9O6/XXIKHRPRUWKJZF": 1,
                "special: TCZDEDUUYIATUK.go": 1,
                "special: tmp/OsRMn2kVWyxoS9O6/TCZDEDUUYIATUK": 1,
                "special: sys.go": 1,
                "special: opt/go/src/os/sys": 2,
                "special: PUHPXOLPIEVQQD.go": 1,
                "special: tmp/OsRMn2kVWyxoS9O6/PUHPXOLPIEVQQD": 1,
                "special: MDWSFYNZNNMXJN.go": 1,
                "special: tmp/OsRMn2kVWyxoS9O6/MDWSFYNZNNMXJN": 1,
                "special: windows.go": 30,
                "special: opt/go/src/os/user/lookup": 2,
                "special: lookup.go": 1,
                "special: root/go/src/go": 2,
                "special: memorymodule/memorymodule": 2,
                "special: gotypes.go": 1,
                "special: memorymodule.go": 1,
                "special: amd64.s": 31,
                "special: opt/go/src/runtime/cgo/asm": 1,
                "special: callbacks.go": 1,
                "special: opt/go/src/runtime/cgo/callbacks": 1,
                "special: os.go": 1,
                "special: root/go/src/github": 76,
                "special: com/gen0cide/gscript/stdlib/os/os": 1,
                "special: package.go": 1,
                "special: com/gen0cide/gscript/engine/native": 1,
                "special: logger.go": 2,
                "special: com/gen0cide/gscript/engine/logger": 1,
                "special: executor.go": 1,
                "special: com/gen0cide/gscript/engine/executor": 1,
                "special: errors.go": 2,
                "special: com/gen0cide/gscript/engine/errors": 1,
                "special: engine.go": 1,
                "special: com/gen0cide/gscript/engine/engine": 1,
                "special: assets.go": 1,
                "special: com/gen0cide/gscript/engine/assets": 1,
                "special: com/gen0cide/gscript/logger/null/null": 1,
                "special: dbg.go": 3,
                "special: string.go": 5,
                "special: com/robertkrimen/otto/value": 5,
                "special: primitive.go": 1,
                "special: number.go": 3,
                "special: boolean.go": 3,
                "special: atob.go": 1,
                "special: opt/go/src/strconv/atob": 1,
                "special: com/robertkrimen/otto/type": 14,
                "special: struct.go": 1,
                "special: map.go": 3,
                "special: array.go": 3,
                "special: error.go": 7,
                "special: arguments.go": 1,
                "special: script.go": 1,
                "special: com/robertkrimen/otto/script": 1,
                "special: slice.go": 3,
                "special: otto.go": 1,
                "special: com/robertkrimen/otto/otto": 2,
                "special: class.go": 1,
                "special: com/robertkrimen/otto/object": 2,
                "special: evaluate.go": 2,
                "special: com/robertkrimen/otto/evaluate": 1,
                "special: console.go": 1,
                "special: com/robertkrimen/otto/console": 1,
                "special: cmpl.go": 1,
                "special: com/robertkrimen/otto/cmpl": 5,
                "special: parse.go": 2,
                "special: result.go": 1,
                "special: com/robertkrimen/otto/result": 1,
                "special: statement.go": 2,
                "special: reference.go": 1,
                "special: expression.go": 2,
                "special: stash.go": 1,
                "special: com/robertkrimen/otto/stash": 1,
                "special: clone.go": 1,
                "special: com/robertkrimen/otto/clone": 1,
                "special: regexp.go": 5,
                "special: com/robertkrimen/otto/builtin": 12,
                "special: property.go": 1,
                "special: com/robertkrimen/otto/property": 1,
                "special: object.go": 2,
                "special: math.go": 1,
                "special: json.go": 1,
                "special: function.go": 2,
                "special: date.go": 2,
                "special: global.go": 1,
                "special: com/robertkrimen/otto/global": 1,
                "special: com/robertkrimen/otto/error": 1,
                "special: inline.go": 1,
                "special: com/robertkrimen/otto/inline": 1,
                "special: scope.go": 2,
                "special: com/robertkrimen/otto/scope": 1,
                "special: runtime.go": 4,
                "special: com/robertkrimen/otto/runtime": 1,
                "special: value.go": 4,
                "special: builtin.go": 1,
                "special: encoder.go": 1,
                "special: opt/go/src/encoding/gob/encoder": 1,
                "special: encode.go": 2,
                "special: opt/go/src/encoding/gob/encode": 1,
                "special: helpers.go": 2,
                "special: opt/go/src/encoding/gob/enc": 1,
                "special: decoder.go": 2,
                "special: opt/go/src/encoding/gob/decoder": 1,
                "special: type.go": 3,
                "special: opt/go/src/encoding/gob/type": 1,
                "special: opt/go/src/encoding/gob/error": 1,
                "special: decode.go": 2,
                "special: opt/go/src/encoding/gob/decode": 1,
                "special: opt/go/src/encoding/gob/dec": 1,
                "special: registry.go": 1,
                "special: com/robertkrimen/otto/registry/registry": 1,
                "special: rng.go": 1,
                "special: opt/go/src/math/rand/rng": 1,
                "special: normal.go": 1,
                "special: opt/go/src/math/rand/normal": 1,
                "special: rand.go": 1,
                "special: opt/go/src/math/rand/rand": 1,
                "special: exp.go": 1,
                "special: opt/go/src/math/rand/exp": 1,
                "special: com/robertkrimen/otto/parser/dbg": 1,
                "special: com/robertkrimen/otto/parser/statement": 1,
                "special: com/robertkrimen/otto/parser/regexp": 1,
                "special: lexer.go": 1,
                "special: com/robertkrimen/otto/parser/lexer": 1,
                "special: com/robertkrimen/otto/parser/scope": 1,
                "special: com/robertkrimen/otto/parser/expression": 1,
                "special: parser.go": 1,
                "special: com/robertkrimen/otto/parser/parser": 1,
                "special: com/robertkrimen/otto/parser/error": 1,
                "special: ioutil.go": 1,
                "special: opt/go/src/io/ioutil/ioutil": 1,
                "special: opt/go/src/path/filepath/symlink": 1,
                "special: path.go": 2,
                "special: opt/go/src/path/filepath/path": 1,
                "special: match.go": 2,
                "special: opt/go/src/path/filepath/match": 1,
                "special: node.go": 1,
                "special: com/robertkrimen/otto/ast/node": 1,
                "special: comments.go": 1,
                "special: com/robertkrimen/otto/ast/comments": 1,
                "special: const.go": 1,
                "special: com/robertkrimen/otto/token/token": 2,
                "special: token.go": 1,
                "special: file.go": 2,
                "special: com/robertkrimen/otto/file/file": 1,
                "special: sourcemap.go": 1,
                "special: root/go/src/gopkg": 3,
                "special: v1/sourcemap": 1,
                "special: consumer.go": 1,
                "special: v1/consumer": 1,
                "special: vlq.go": 1,
                "special: v1/base64vlq/base64": 1,
                "special: opt/go/src/path/match": 1,
                "special: opt/go/src/path/path": 1,
                "special: tags.go": 1,
                "special: opt/go/src/encoding/json/tags": 1,
                "special: indent.go": 1,
                "special: opt/go/src/encoding/json/indent": 1,
                "special: fold.go": 1,
                "special: opt/go/src/encoding/json/fold": 1,
                "special: opt/go/src/encoding/json/encode": 1,
                "special: scanner.go": 1,
                "special: opt/go/src/encoding/json/scanner": 1,
                "special: opt/go/src/encoding/json/decode": 1,
                "special: com/robertkrimen/otto/dbg/dbg": 1,
                "special: log.go": 2,
                "special: opt/go/src/log/log": 1,
                "special: digit.go": 1,
                "special: opt/go/src/unicode/digit": 1,
                "special: opt/go/src/regexp/regexp": 1,
                "special: onepass.go": 1,
                "special: opt/go/src/regexp/onepass": 1,
                "special: exec.go": 2,
                "special: opt/go/src/regexp/exec": 1,
                "special: backtrack.go": 1,
                "special: opt/go/src/regexp/backtrack": 1,
                "special: groups.go": 1,
                "special: opt/go/src/regexp/syntax/perl": 1,
                "special: simplify.go": 1,
                "special: opt/go/src/regexp/syntax/simplify": 1,
                "special: opt/go/src/regexp/syntax/regexp": 1,
                "special: prog.go": 1,
                "special: opt/go/src/regexp/syntax/prog": 1,
                "special: opt/go/src/regexp/syntax/parse": 1,
                "special: opt/go/src/regexp/syntax/op": 1,
                "special: compile.go": 1,
                "special: opt/go/src/regexp/syntax/compile": 1,
                "special: url.go": 1,
                "special: opt/go/src/net/url/url": 1,
                "special: hex.go": 1,
                "special: opt/go/src/encoding/hex/hex": 1,
                "special: strings.go": 1,
                "special: opt/go/src/strings/strings": 1,
                "special: reader.go": 2,
                "special: opt/go/src/strings/reader": 1,
                "special: builder.go": 1,
                "special: opt/go/src/strings/builder": 1,
                "special: base64.go": 1,
                "special: opt/go/src/encoding/base64/base64": 1,
                "special: opt/go/src/crypto/aes/gcm": 1,
                "special: opt/go/src/crypto/aes/asm": 1,
                "special: asm.go": 2,
                "special: opt/go/src/crypto/aes/cipher": 2,
                "special: cipher.go": 1,
                "special: block.go": 1,
                "special: opt/go/src/crypto/aes/block": 1,
                "special: gcm.go": 2,
                "special: opt/go/src/crypto/aes/aes": 1,
                "special: opt/go/src/crypto/cipher/xor": 2,
                "special: opt/go/src/crypto/cipher/gcm": 1,
                "special: amd64.go": 5,
                "special: aliasing.go": 1,
                "special: opt/go/src/crypto/internal/subtle/aliasing": 1,
                "special: ofb.go": 1,
                "special: opt/go/src/crypto/cipher/ofb": 1,
                "special: io.go": 2,
                "special: opt/go/src/crypto/cipher/io": 1,
                "special: time.go": 3,
                "special: opt/go/src/crypto/subtle/constant": 1,
                "special: binary.go": 1,
                "special: opt/go/src/encoding/binary/binary": 1,
                "special: gunzip.go": 1,
                "special: opt/go/src/compress/gzip/gunzip": 1,
                "special: opt/go/src/hash/crc32/crc32": 4,
                "special: generic.go": 1,
                "special: crc32.go": 1,
                "special: varint.go": 1,
                "special: opt/go/src/encoding/binary/varint": 1,
                "special: inflate.go": 1,
                "special: opt/go/src/compress/flate/inflate": 1,
                "special: code.go": 1,
                "special: opt/go/src/compress/flate/huffman": 2,
                "special: writer.go": 1,
                "special: opt/go/src/compress/flate/dict": 1,
                "special: scan.go": 2,
                "special: opt/go/src/fmt/scan": 1,
                "special: print.go": 2,
                "special: opt/go/src/fmt/print": 1,
                "special: format.go": 2,
                "special: opt/go/src/fmt/format": 1,
                "special: str.go": 2,
                "special: opt/go/src/os/str": 1,
                "special: opt/go/src/os/stat": 2,
                "special: stat.go": 1,
                "special: proc.go": 2,
                "special: opt/go/src/os/proc": 1,
                "special: opt/go/src/os/path": 1,
                "special: types.go": 1,
                "special: opt/go/src/os/types": 2,
                "special: rawconn.go": 1,
                "special: opt/go/src/os/rawconn": 1,
                "special: posix.go": 4,
                "special: opt/go/src/os/file": 3,
                "special: opt/go/src/os/executable": 2,
                "special: executable.go": 1,
                "special: opt/go/src/os/exec": 3,
                "special: opt/go/src/os/error": 1,
                "special: opt/go/src/os/dir": 2,
                "special: dir.go": 1,
                "special: sockoptip.go": 1,
                "special: opt/go/src/internal/poll/sockoptip": 1,
                "special: opt/go/src/internal/poll/sockopt": 2,
                "special: sockopt.go": 1,
                "special: opt/go/src/internal/poll/fd": 6,
                "special: mutex.go": 2,
                "special: fd.go": 1,
                "special: opt/go/src/internal/syscall/windows/zsyscall": 1,
                "special: opt/go/src/internal/syscall/windows/syscall": 1,
                "special: read.go": 1,
                "special: opt/go/src/time/zoneinfo": 4,
                "special: syscall.go": 2,
                "special: opt/go/src/internal/syscall/windows/registry/syscall": 1,
                "special: zoneinfo.go": 1,
                "special: opt/go/src/time/time": 1,
                "special: opt/go/src/time/format": 1,
                "special: opt/go/src/internal/syscall/windows/registry/zsyscall": 1,
                "special: opt/go/src/internal/syscall/windows/registry/value": 1,
                "special: key.go": 1,
                "special: opt/go/src/internal/syscall/windows/registry/key": 1,
                "special: opt/go/src/internal/testlog/log": 1,
                "special: opt/go/src/syscall/types": 1,
                "special: opt/go/src/syscall/zsyscall": 1,
                "special: opt/go/src/syscall/str": 1,
                "special: opt/go/src/syscall/security": 1,
                "special: opt/go/src/syscall/exec": 1,
                "special: opt/go/src/syscall/syscall": 2,
                "special: opt/go/src/syscall/dll": 1,
                "special: utf16.go": 1,
                "special: opt/go/src/unicode/utf16/utf16": 1,
                "special: sysdll.go": 1,
                "special: opt/go/src/internal/syscall/windows/sysdll/sysdll": 1,
                "special: sort.go": 2,
                "special: opt/go/src/internal/fmtsort/sort": 1,
                "special: zfuncversion.go": 1,
                "special: opt/go/src/sort/zfuncversion": 1,
                "special: opt/go/src/sort/sort": 1,
                "special: opt/go/src/sort/slice": 1,
                "special: search.go": 1,
                "special: opt/go/src/sort/search": 1,
                "special: opt/go/src/reflect/asm": 1,
                "special: opt/go/src/reflect/value": 1,
                "special: swapper.go": 1,
                "special: opt/go/src/reflect/swapper": 1,
                "special: opt/go/src/reflect/type": 1,
                "special: makefunc.go": 1,
                "special: opt/go/src/reflect/makefunc": 1,
                "special: ftoa.go": 1,
                "special: opt/go/src/strconv/ftoa": 1,
                "special: extfloat.go": 1,
                "special: opt/go/src/strconv/extfloat": 1,
                "special: decimal.go": 1,
                "special: opt/go/src/strconv/decimal": 1,
                "special: itoa.go": 1,
                "special: opt/go/src/strconv/itoa": 1,
                "special: quote.go": 1,
                "special: opt/go/src/strconv/quote": 1,
                "special: atoi.go": 1,
                "special: opt/go/src/strconv/atoi": 1,
                "special: atof.go": 1,
                "special: opt/go/src/strconv/atof": 1,
                "special: opt/go/src/math/tan": 2,
                "special: opt/go/src/math/sin": 2,
                "special: stub.s": 1,
                "special: opt/go/src/math/pow": 2,
                "special: opt/go/src/math/modf": 2,
                "special: opt/go/src/math/mod": 2,
                "special: opt/go/src/math/log": 1,
                "special: opt/go/src/math/log10": 2,
                "special: opt/go/src/math/ldexp": 2,
                "special: opt/go/src/math/frexp": 2,
                "special: opt/go/src/math/floor": 1,
                "special: opt/go/src/math/exp": 2,
                "special: opt/go/src/math/dim": 1,
                "special: opt/go/src/math/atan": 2,
                "special: opt/go/src/math/atan2": 2,
                "special: opt/go/src/math/asin": 2,
                "special: bits.go": 2,
                "special: opt/go/src/math/bits/bits": 1,
                "special: reduce.go": 1,
                "special: opt/go/src/math/trig": 1,
                "special: tan.go": 1,
                "special: sin.go": 1,
                "special: pow.go": 1,
                "special: modf.go": 1,
                "special: mod.go": 1,
                "special: log10.go": 1,
                "special: ldexp.go": 1,
                "special: unsafe.go": 1,
                "special: opt/go/src/math/unsafe": 1,
                "special: abs.go": 1,
                "special: opt/go/src/math/abs": 1,
                "special: frexp.go": 1,
                "special: copysign.go": 1,
                "special: opt/go/src/math/copysign": 1,
                "special: signbit.go": 1,
                "special: opt/go/src/math/signbit": 1,
                "special: atan2.go": 1,
                "special: atan.go": 1,
                "special: opt/go/src/math/bits": 1,
                "special: asin.go": 1,
                "special: opt/go/src/bufio/scan": 1,
                "special: bufio.go": 1,
                "special: opt/go/src/bufio/bufio": 1,
                "special: opt/go/src/bytes/reader": 1,
                "special: bytes.go": 1,
                "special: opt/go/src/bytes/bytes": 1,
                "special: buffer.go": 1,
                "special: opt/go/src/bytes/buffer": 1,
                "special: tables.go": 1,
                "special: opt/go/src/unicode/tables": 1,
                "special: letter.go": 1,
                "special: opt/go/src/unicode/letter": 1,
                "special: graphic.go": 1,
                "special: opt/go/src/unicode/graphic": 1,
                "special: utf8.go": 2,
                "special: opt/go/src/unicode/utf8/utf8": 1,
                "special: pipe.go": 1,
                "special: opt/go/src/io/pipe": 1,
                "special: opt/go/src/io/io": 1,
                "special: waitgroup.go": 1,
                "special: opt/go/src/sync/waitgroup": 1,
                "special: rwmutex.go": 2,
                "special: opt/go/src/sync/rwmutex": 1,
                "special: opt/go/src/sync/runtime": 1,
                "special: pool.go": 1,
                "special: opt/go/src/sync/pool": 1,
                "special: once.go": 1,
                "special: opt/go/src/sync/once": 1,
                "special: opt/go/src/sync/mutex": 1,
                "special: opt/go/src/sync/map": 1,
                "special: cond.go": 1,
                "special: opt/go/src/sync/cond": 1,
                "special: opt/go/src/errors/errors": 1,
                "special: opt/go/src/runtime/sys": 2,
                "special: opt/go/src/runtime/memmove": 1,
                "special: opt/go/src/runtime/memclr": 1,
                "special: opt/go/src/runtime/duff": 1,
                "special: opt/go/src/runtime/asm": 2,
                "special: asm.s": 2,
                "special: select.go": 1,
                "special: opt/go/src/runtime/select": 1,
                "special: err.go": 1,
                "special: opt/go/src/runtime/write": 1,
                "special: opt/go/src/runtime/utf8": 1,
                "special: opt/go/src/runtime/time": 1,
                "special: opt/go/src/runtime/syscall": 1,
                "special: intrinsics.go": 1,
                "special: opt/go/src/runtime/internal/sys/intrinsics": 1,
                "special: opt/go/src/runtime/slice": 1,
                "special: sigqueue.go": 1,
                "special: opt/go/src/runtime/sigqueue": 1,
                "special: opt/go/src/runtime/signal": 1,
                "special: opt/go/src/runtime/rwmutex": 1,
                "special: opt/go/src/runtime/runtime": 1,
                "special: stack.go": 1,
                "special: opt/go/src/runtime/stack": 1,
                "special: x86.go": 2,
                "special: traceback.go": 1,
                "special: opt/go/src/runtime/traceback": 1,
                "special: opt/go/src/runtime/print": 1,
                "special: panic.go": 1,
                "special: opt/go/src/runtime/panic": 1,
                "special: opt/go/src/runtime/netpoll": 2,
                "special: netpoll.go": 1,
                "special: mstats.go": 1,
                "special: opt/go/src/runtime/mstats": 1,
                "special: mprof.go": 1,
                "special: opt/go/src/runtime/mprof": 1,
                "special: mgcstack.go": 1,
                "special: opt/go/src/runtime/mgcstack": 1,
                "special: mgcsweepbuf.go": 1,
                "special: opt/go/src/runtime/mgcsweepbuf": 1,
                "special: mgcmark.go": 1,
                "special: opt/go/src/runtime/mgcmark": 1,
                "special: mgclarge.go": 1,
                "special: opt/go/src/runtime/mgclarge": 1,
                "special: sema.go": 2,
                "special: opt/go/src/runtime/sema": 1,
                "special: mgcsweep.go": 1,
                "special: opt/go/src/runtime/mgcsweep": 1,
                "special: mgcwork.go": 1,
                "special: opt/go/src/runtime/mgcwork": 1,
                "special: mfinal.go": 1,
                "special: opt/go/src/runtime/mfinal": 1,
                "special: opt/go/src/runtime/mem": 1,
                "special: trace.go": 1,
                "special: opt/go/src/runtime/trace": 1,
                "special: mcentral.go": 1,
                "special: opt/go/src/runtime/mcentral": 1,
                "special: mcache.go": 1,
                "special: opt/go/src/runtime/mcache": 1,
                "special: mbarrier.go": 1,
                "special: opt/go/src/runtime/mbarrier": 1,
                "special: faststr.go": 1,
                "special: opt/go/src/runtime/map": 4,
                "special: fast64.go": 1,
                "special: fast32.go": 1,
                "special: msize.go": 1,
                "special: opt/go/src/runtime/msize": 1,
                "special: fastlog2.go": 1,
                "special: opt/go/src/runtime/fastlog2": 1,
                "special: mgc.go": 1,
                "special: opt/go/src/runtime/mgc": 1,
                "special: mfixalloc.go": 1,
                "special: opt/go/src/runtime/mfixalloc": 1,
                "special: malloc.go": 1,
                "special: opt/go/src/runtime/malloc": 1,
                "special: opt/go/src/runtime/lock": 1,
                "special: 64bit.go": 1,
                "special: opt/go/src/runtime/lfstack": 2,
                "special: lfstack.go": 1,
                "special: iface.go": 1,
                "special: opt/go/src/runtime/iface": 1,
                "special: unaligned1.go": 1,
                "special: opt/go/src/runtime/unaligned1": 1,
                "special: hash64.go": 1,
                "special: opt/go/src/runtime/hash64": 1,
                "special: float.go": 1,
                "special: opt/go/src/runtime/float": 1,
                "special: extern.go": 1,
                "special: opt/go/src/runtime/extern": 1,
                "special: opt/go/src/runtime/error": 1,
                "special: opt/go/src/runtime/env": 1,
                "special: opt/go/src/runtime/defs": 1,
                "special: debugcall.go": 1,
                "special: opt/go/src/runtime/debugcall": 1,
                "special: debug.go": 1,
                "special: opt/go/src/runtime/debug": 1,
                "special: opt/go/src/runtime/cpuflags": 1,
                "special: chan.go": 1,
                "special: opt/go/src/runtime/chan": 1,
                "special: cgocheck.go": 1,
                "special: opt/go/src/runtime/cgocheck": 1,
                "special: opt/go/src/runtime/string": 1,
                "special: cgocallback.go": 1,
                "special: opt/go/src/runtime/cgocallback": 1,
                "special: mbitmap.go": 1,
                "special: opt/go/src/runtime/mbitmap": 1,
                "special: symtab.go": 1,
                "special: opt/go/src/runtime/symtab": 1,
                "special: opt/go/src/runtime/type": 1,
                "special: mheap.go": 1,
                "special: opt/go/src/runtime/mheap": 1,
                "special: runtime1.go": 1,
                "special: opt/go/src/runtime/runtime1": 1,
                "special: opt/go/src/runtime/os": 1,
                "special: runtime2.go": 1,
                "special: opt/go/src/runtime/runtime2": 1,
                "special: opt/go/src/runtime/proc": 1,
                "special: cgocall.go": 1,
                "special: opt/go/src/runtime/cgocall": 1,
                "special: cgo.go": 1,
                "special: opt/go/src/runtime/cgo": 1,
                "special: mwbbuf.go": 1,
                "special: opt/go/src/runtime/mwbbuf": 1,
                "special: pointer.go": 1,
                "special: opt/go/src/runtime/atomic": 1,
                "special: typekind.go": 1,
                "special: opt/go/src/runtime/typekind": 1,
                "special: stubs.go": 1,
                "special: opt/go/src/runtime/stubs": 1,
                "special: alg.go": 1,
                "special: opt/go/src/runtime/alg": 1,
                "special: opt/go/src/internal/bytealg/indexbyte": 1,
                "special: opt/go/src/internal/bytealg/index": 2,
                "special: opt/go/src/internal/bytealg/equal": 1,
                "special: opt/go/src/internal/bytealg/count": 2,
                "special: opt/go/src/internal/bytealg/compare": 1,
                "special: native.go": 1,
                "special: opt/go/src/runtime/internal/atomic/asm": 1,
                "special: x86.s": 1,
                "special: opt/go/src/internal/cpu/cpu": 3,
                "special: cpu.go": 1,
                "special: opt/go/src/sync/atomic/asm": 1,
                "special: opt/go/src/sync/atomic/value": 1,
                "special: runtime/cgo": 1,
                "special: Mingw-w64": 1,
                "special: image-section": 1,
                "special: 9.1.0": 36,
                "special: 7.3": 1,
                "special: 3-win32": 1,
                "special: KERNEL32.dll": 1,
                "special: msvcrt.dll": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "radare2: -r-x .text": 1,
                "radare2: -rw- .data": 1,
                "radare2: -r-- .rdata": 1,
                "radare2: -r-- .pdata": 1,
                "radare2: -r-- .xdata": 1,
                "radare2: -rw- .bss": 1,
                "radare2: -rw- .idata": 1,
                "radare2: -rw- .CRT": 1,
                "radare2: -rw- .tls": 1,
                "radare2: type=program": 1,
                "radare2: KERNEL32.dll_AddVectoredExceptionHandler": 2,
                "radare2: KERNEL32.dll_CloseHandle": 2,
                "radare2: KERNEL32.dll_CreateEventA": 2,
                "radare2: KERNEL32.dll_CreateIoCompletionPort": 2,
                "radare2: KERNEL32.dll_CreateThread": 2,
                "radare2: KERNEL32.dll_DeleteCriticalSection": 2,
                "radare2: KERNEL32.dll_DuplicateHandle": 2,
                "radare2: KERNEL32.dll_EnterCriticalSection": 2,
                "radare2: KERNEL32.dll_ExitProcess": 2,
                "radare2: KERNEL32.dll_FreeEnvironmentStringsW": 2,
                "radare2: KERNEL32.dll_FreeLibrary": 2,
                "radare2: KERNEL32.dll_GetConsoleMode": 2,
                "radare2: KERNEL32.dll_GetCurrentProcess": 2,
                "radare2: KERNEL32.dll_GetCurrentProcessId": 2,
                "radare2: KERNEL32.dll_GetCurrentThreadId": 2,
                "radare2: KERNEL32.dll_GetEnvironmentStringsW": 2,
                "radare2: KERNEL32.dll_GetLastError": 2,
                "radare2: KERNEL32.dll_GetNativeSystemInfo": 2,
                "radare2: KERNEL32.dll_GetProcAddress": 2,
                "radare2: KERNEL32.dll_GetProcessAffinityMask": 2,
                "radare2: KERNEL32.dll_GetProcessHeap": 2,
                "radare2: KERNEL32.dll_GetQueuedCompletionStatus": 2,
                "radare2: KERNEL32.dll_GetStartupInfoA": 2,
                "radare2: KERNEL32.dll_GetStdHandle": 2,
                "radare2: KERNEL32.dll_GetSystemDirectoryA": 2,
                "radare2: KERNEL32.dll_GetSystemInfo": 2,
                "radare2: KERNEL32.dll_GetSystemTimeAsFileTime": 2,
                "radare2: KERNEL32.dll_GetThreadLocale": 2,
                "radare2: KERNEL32.dll_GetTickCount": 2,
                "radare2: KERNEL32.dll_HeapAlloc": 2,
                "radare2: KERNEL32.dll_HeapFree": 2,
                "radare2: KERNEL32.dll_InitializeCriticalSection": 2,
                "radare2: KERNEL32.dll_IsBadReadPtr": 2,
                "radare2: KERNEL32.dll_LeaveCriticalSection": 2,
                "radare2: KERNEL32.dll_LoadLibraryA": 2,
                "radare2: KERNEL32.dll_LoadLibraryW": 2,
                "radare2: KERNEL32.dll_QueryPerformanceCounter": 2,
                "radare2: KERNEL32.dll_RtlAddFunctionTable": 2,
                "radare2: KERNEL32.dll_RtlCaptureContext": 2,
                "radare2: KERNEL32.dll_RtlLookupFunctionEntry": 2,
                "radare2: KERNEL32.dll_RtlVirtualUnwind": 2,
                "radare2: KERNEL32.dll_SetConsoleCtrlHandler": 2,
                "radare2: KERNEL32.dll_SetErrorMode": 2,
                "radare2: KERNEL32.dll_SetEvent": 2,
                "radare2: KERNEL32.dll_SetLastError": 2,
                "radare2: KERNEL32.dll_SetProcessPriorityBoost": 2,
                "radare2: KERNEL32.dll_SetUnhandledExceptionFilter": 2,
                "radare2: KERNEL32.dll_SetWaitableTimer": 2,
                "radare2: KERNEL32.dll_Sleep": 2,
                "radare2: KERNEL32.dll_SwitchToThread": 2,
                "radare2: KERNEL32.dll_TerminateProcess": 2,
                "radare2: KERNEL32.dll_TlsGetValue": 2,
                "radare2: KERNEL32.dll_UnhandledExceptionFilter": 2,
                "radare2: KERNEL32.dll_VirtualAlloc": 2,
                "radare2: KERNEL32.dll_VirtualFree": 2,
                "radare2: KERNEL32.dll_VirtualProtect": 2,
                "radare2: KERNEL32.dll_VirtualQuery": 2,
                "radare2: KERNEL32.dll_WaitForSingleObject": 2,
                "radare2: KERNEL32.dll_WriteConsoleW": 2,
                "radare2: KERNEL32.dll_WriteFile": 2,
                "radare2: KERNEL32.dll___C_specific_handler": 2,
                "radare2: KERNEL32.dll_lstrlenA": 2,
                "radare2: msvcrt.dll___getmainargs": 2,
                "radare2: msvcrt.dll___initenv": 2,
                "radare2: msvcrt.dll___iob_func": 2,
                "radare2: msvcrt.dll___lconv_init": 2,
                "radare2: msvcrt.dll___set_app_type": 2,
                "radare2: msvcrt.dll___setusermatherr": 2,
                "radare2: msvcrt.dll__acmdln": 2,
                "radare2: msvcrt.dll__amsg_exit": 2,
                "radare2: msvcrt.dll__beginthread": 2,
                "radare2: msvcrt.dll__cexit": 2,
                "radare2: msvcrt.dll__errno": 2,
                "radare2: msvcrt.dll__fmode": 2,
                "radare2: msvcrt.dll__initterm": 2,
                "radare2: msvcrt.dll__onexit": 2,
                "radare2: msvcrt.dll__wcsnicmp": 2,
                "radare2: msvcrt.dll_abort": 2,
                "radare2: msvcrt.dll_bsearch": 2,
                "radare2: msvcrt.dll_calloc": 2,
                "radare2: msvcrt.dll_exit": 2,
                "radare2: msvcrt.dll_fprintf": 2,
                "radare2: msvcrt.dll_free": 2,
                "radare2: msvcrt.dll_fwrite": 2,
                "radare2: msvcrt.dll_malloc": 2,
                "radare2: msvcrt.dll_mbstowcs": 2,
                "radare2: msvcrt.dll_memcpy": 2,
                "radare2: msvcrt.dll_memset": 2,
                "radare2: msvcrt.dll_qsort": 2,
                "radare2: msvcrt.dll_realloc": 2,
                "radare2: msvcrt.dll_signal": 2,
                "radare2: msvcrt.dll_strcmp": 2,
                "radare2: msvcrt.dll_strlen": 2,
                "radare2: msvcrt.dll_strncmp": 2,
                "radare2: msvcrt.dll_strtol": 2,
                "radare2: msvcrt.dll_vfprintf": 2,
                "radare2: msvcrt.dll_wcstombs": 2,
                "radare2: .data) utf32le 09!~az ~AZ": 1,
                "radare2: .data)  utf8 \\e6l\u062bM blocks=Basic Latin,Arabic": 1,
                "radare2: .data) utf32le AZaz\\t\\t": 1,
                "radare2: .data) utf32le \\t\\r": 1,
                "radare2: .data) utf32le \\t\\n\\f\\r": 1,
                "radare2: .data) utf32le 09AZaz": 1,
                "radare2: .data) utf32le 09AFaf": 1,
                "radare2: .data) utf32le 9AZ__az!/:@[`{~09AZ__az": 1,
                "radare2: .data)  utf8 ?HUUUUU\u017f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .data) utf16le $\u00a2~\u00a3\u00a5 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data) utf16le )]4}\u0f3b blocks=Basic Latin,Tibetan": 1,
                "radare2: .data) utf16le  0@P`p": 1,
                "radare2: .data) utf16le \\a\\b\u8009\\n\u800c\u800c\\r blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .data) utf16le \\e %&\u8028*058@\u8048JPU\u8060jp blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .data) utf16le ([3{\u0f3a blocks=Basic Latin,Tibetan": 1,
                "radare2: .data)  utf8 x2+\u0176\u00caw blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 o$_jZkbkU\u051d blocks=Basic Latin,Cyrillic Supplement": 1,
                "radare2: .data)  utf8 NgmkC": 1,
                "radare2: .data)  utf8 R;\u05b3) blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 [j\u02fe9JLX blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .data)  utf8 \u0127~=d] blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data) utf16le \\a\\b\\t\\n\\v\\f\\r": 1,
                "radare2: .data) utf16le  !\"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`ABCDEFGHIJ\u212aLMNOPQR\u017fTUVWXYZ{|}~ blocks=Basic Latin,Letterlike Symbols,Latin Extended-A": 1,
                "radare2: .data)  utf8 ld?\u06cc_? blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 _+?\u0518(? blocks=Basic Latin,Cyrillic Supplement": 1,
                "radare2: .data)  utf8 >A\u039a> blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 u_>\u07f0Y> blocks=Basic Latin,NKo": 1,
                "radare2: .data)  utf8 S>\"MN>": 1,
                "radare2: .data)  utf8 8>\u02aa2>>H-> blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 =\ubdb1=L blocks=Basic Latin,Hangul Syllables": 1,
                "radare2: .data)  utf8 hy={uh=\u01b9W= blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 M\\r<X\u0535; blocks=Basic Latin,Armenian": 1,
                "radare2: .data)  utf8 ~\uf820~\\r blocks=Basic Latin,Private Use Area": 1,
                "radare2: .data)  utf8 ~u2~": 1,
                "radare2: .data)  utf8 ~'\u07e5~ blocks=Basic Latin,NKo": 1,
                "radare2: .data)  utf8 /k\u0317/ blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 \u055f/`J blocks=Armenian,Basic Latin": 1,
                "radare2: .data)  utf8 Y0\u02d1[0jr]0 blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .data) utf16le /:\\v;?": 1,
                "radare2: .data) utf16le }\u00a1$\u00a7\u00ab blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data) utf16le $+\\a<>": 1,
                "radare2: .data) utf16le  ~\u00a1\u0377\u037a blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "radare2: .data)  utf8 QSeA~\u00e4 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 v\u0308%L blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 *\u0140D5& blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .data)  utf8 \u011dS.4 blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 \u056e='9-6d blocks=Armenian,Basic Latin": 1,
                "radare2: .data)  utf8 \u0184}$J blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u028c6\\v\u0518\u03c1 blocks=IPA Extensions,Basic Latin,Cyrillic Supplement,Greek and Coptic": 1,
                "radare2: .data)  utf8 a\u05daz\\f blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 \\f%\u2f0bI<(A blocks=Basic Latin,Kangxi Radicals": 1,
                "radare2: .data)  utf8 \u010aS.4 blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 gwB\u8c3d blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .data)  utf8 \u0184 $J blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 ,}V\u06103\" blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 ~\u03fc!\\b blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 5<Nt7\u0282 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 ,xQeF": 1,
                "radare2: .data)  utf8 I)i\u024eD blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 {7\u04e5\\b(0 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 @\"\u0184  blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 \u04e5\\b70 blocks=Cyrillic,Basic Latin": 1,
                "radare2: .data)  utf8 \u0221G\\n|| blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u056e6'9-\\nd blocks=Armenian,Basic Latin": 1,
                "radare2: .data)  utf8 \u0185}$J blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u02986\\v\u0526\u03c1 blocks=IPA Extensions,Basic Latin,Cyrillic Supplement,Greek and Coptic": 1,
                "radare2: .data)  utf8 cc\u0184|| blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 kk\u05b1oo blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 \u0151P00` blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 \u0303\\44h blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .data)  utf8 \u062bS11b? blocks=Arabic,Basic Latin": 1,
                "radare2: .data)  utf8 \u01d5e##F^ blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 i''N\u0372 blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 \u06afc!!B0 blocks=Arabic,Basic Latin": 1,
                "radare2: .data)  utf8 \u0723f\"\"D~**T blocks=Syriac,Basic Latin": 1,
                "radare2: .data)  utf8 \u020bY77n blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u03efee\u028ezz blocks=Greek and Coptic,Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 B>>|\u0135 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .data)  utf8 ,cc\u01a5|| blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 \\rkk\u05bdoo\u07b1 blocks=Basic Latin,Hebrew,Thaana": 1,
                "radare2: .data)  utf8 \u0151T00`P blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 gg\u03a9++V} blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 \u0249@}} blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u0303O44h\\ blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .data)  utf8 \u062bs11bS blocks=Arabic,Basic Latin": 1,
                "radare2: .data)  utf8 \u01d5R##Fe blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 4.\\e\\e6-nn\u0732ZZ blocks=Basic Latin,Syriac": 1,
                "radare2: .data)  utf8 \u06afu!!Bc blocks=Arabic,Basic Latin": 1,
                "radare2: .data)  utf8 \u0341L\\f\\f blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .data)  utf8 ==zGdd\u022c]] blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 \u07a7y^^ blocks=Thaana,Basic Latin": 1,
                "radare2: .data)  utf8 \u020bC77nYmm\u06b7 blocks=Latin Extended-B,Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 \u0571dNN blocks=Armenian,Basic Latin": 1,
                "radare2: .data)  utf8 ll\u0634VV blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 %ee\u02afzz\udbfa\udfaeG blocks=Basic Latin,IPA Extensions,Supplementary Private Use Area-B": 1,
                "radare2: .data)  utf8 \u0761|tt blocks=Arabic Supplement,Basic Latin": 1,
                "radare2: .data)  utf8 ff\u032aHH blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 aa\u00a355j_WW blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 \"3ii\u04bb blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 \u0387IUU blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .data)  utf8 hh\u0438AA blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 ,:c\u01a5c| blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 k\u05bdko\u07b1o\u0151T blocks=Basic Latin,Hebrew,Thaana,Latin Extended-A": 1,
                "radare2: .data)  utf8 g\u03a9g+V}+ blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 v\u028fE\u0282 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 \u0533g\u0522_ blocks=Armenian,Basic Latin,Cyrillic Supplement": 1,
                "radare2: .data)  utf8 r\\e[7u\u00b7 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 #Fe#\u00dd^ blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 \\e6-\\en\u0732nZ blocks=Basic Latin,Syriac": 1,
                "radare2: .data)  utf8 R;vM;\u05b7a\u05b3}\u03b3)R{) blocks=Basic Latin,Hebrew,Greek and Coptic": 1,
                "radare2: .data)  utf8 [j\u053ej\u02cdF\u02feg\u067e9rK9J blocks=Basic Latin,Armenian,Spacing Modifier Letters,Arabic": 1,
                "radare2: .data)  utf8 wv\u06afu blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 \u0113W\u0127U blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 ~=zG=d\u022cd] blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 s` `": 1,
                "radare2: .data)  utf8 \u04fdn\u04ecC blocks=Cyrillic,Basic Latin": 1,
                "radare2: .data)  utf8 7nY7m\u06b7m blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 l\u0634lV blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 e\u02afez blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 s\u01f4\u0197Q blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 q\u0135f\u032afH blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 a\u00a3a5j_5W blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 i\u04bbi\u0669p\u064e\\a blocks=Basic Latin,Cyrillic,Arabic": 1,
                "radare2: .data)  utf8 U(Px(\u07e5z\u07cc blocks=Basic Latin,NKo": 1,
                "radare2: .data)  utf8 Bh\u0438hA blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 \u05bdkk\u07b1oo blocks=Hebrew,Basic Latin,Thaana": 1,
                "radare2: .data)  utf8 \u03a9ggV}++ blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .data)  utf8 6-\\e\\e\u0732nn blocks=Basic Latin,Syriac": 1,
                "radare2: .data)  utf8 [[\u053ejj blocks=Basic Latin,Armenian": 1,
                "radare2: .data)  utf8 ~~zG==\u022cdd blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 ss ``": 1,
                "radare2: .data)  utf8 C\ufb2c\u0126bb9 blocks=Basic Latin,Alphabetic Presentation Forms,Latin Extended-A": 1,
                "radare2: .data)  utf8 nY77\u06b7mm blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 NNI\u0a69\u0634ll blocks=Basic Latin,Gurmukhi,Arabic": 1,
                "radare2: .data)  utf8 zzG\u9bae blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .data)  utf8 \\b\\bo\u057a blocks=Basic Latin,Armenian": 1,
                "radare2: .data)  utf8 KKa\u073d blocks=Basic Latin,Syriac": 1,
                "radare2: .data)  utf8 pp|B>>q\u0135 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .data)  utf8 \u00a3aaj_55 blocks=Latin-1 Supplement,Basic Latin": 1,
                "radare2: .data)  utf8 WWi\u0439 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 \\r\\re\u06bf blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 BB\u0438hh blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 TTm\u05bb blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 (_?x\\bY?\u0575S? blocks=Basic Latin,Armenian": 1,
                "radare2: .data)  utf8 A\\b?\u012e blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .data)  utf8 >\\e\u023f> blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 z>\u0425w>@ blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 \\r>\u03e3\\v> blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 <O\u0791<+ blocks=Basic Latin,Thaana": 1,
                "radare2: .data)  utf8 t<\u0275e< blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 t+<\u0185 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 T/\u00aeW/ blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 /M\\f/7": 1,
                "radare2: .data)  utf8 /a\u0317/T0 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 /\ud51a/5 blocks=Basic Latin,Hangul Syllables": 1,
                "radare2: .data)  utf8 \u019e/p. blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u072f/'P blocks=Syriac,Basic Latin": 1,
                "radare2: .data)  utf8 \u0132/): blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 F0\u05e2H0 blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 V0\u03b4X0 blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 W\u03b6]y blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 H8o\ua590 blocks=Basic Latin,Vai": 1,
                "radare2: .data)  utf8 \u0308Po\\t\u033c blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .data)  utf8 \u020c8e\u07b0 blocks=Latin Extended-B,Basic Latin,Thaana": 1,
                "radare2: .data)  utf8 \u03e7z^KD blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .data)  utf8 \u024a;n! blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 Ls\u0534x blocks=Basic Latin,Armenian": 1,
                "radare2: .data)  utf8 a]4\ufc3d+ blocks=Basic Latin,Arabic Presentation Forms-A": 1,
                "radare2: .data)  utf8 d[\u05de\u05d2 blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8  Erj": 1,
                "radare2: .data)  utf8 b\\^9\u9e29NtH\u1b84\\ blocks=Basic Latin,CJK Unified Ideographs,Sundanese": 1,
                "radare2: .data)  utf8 \u06b79BA blocks=Arabic,Basic Latin": 1,
                "radare2: .data)  utf8 \u01f6@_' blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u0204\u012f7& blocks=Latin Extended-B,Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 p@:\u0795 blocks=Basic Latin,Thaana": 1,
                "radare2: .data)  utf8 \u0480L+\" blocks=Cyrillic,Basic Latin": 1,
                "radare2: .data)  utf8 #wn\u0277B3 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 Z\u063d}\" blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 \\a'\\bz\u0328 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 |<\u066b^b blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 v-:D": 1,
                "radare2: .data)  utf8 \\aOr$t": 1,
                "radare2: .data)  utf8 \uf73c~=s\ua90f blocks=Private Use Area,Basic Latin,Kayah Li": 1,
                "radare2: .data)  utf8 \"yu\u0445 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 )\u013c?'k blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .data)  utf8 =O2O)\u04c4 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 \u023e`*{ blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 >N\u0727V blocks=Basic Latin,Syriac": 1,
                "radare2: .data)  utf8 eGD\\vq": 1,
                "radare2: .data)  utf8 @LmS\u0417 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 rU\\a\u0591T blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 \\n\u0451|\u0615 blocks=Basic Latin,Cyrillic,Arabic": 1,
                "radare2: .data)  utf8 \\f\u01b0YJ blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 )Xe\u07a8.8 blocks=Basic Latin,Thaana": 1,
                "radare2: .data)  utf8 z\u0316ZSt; blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .rdata)  utf8 \u01f5*R\\a blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u063b\\a\\b\\b blocks=Arabic,Basic Latin": 1,
                "radare2: .rdata) utf16le p\\t\uc320\\a blocks=Basic Latin,Hangul Syllables": 1,
                "radare2: .rdata) utf16le p\\tp\\t": 1,
                "radare2: .rdata)  utf8 \u0291w1\\a blocks=IPA Extensions,Basic Latin": 1,
                "radare2: .rdata) utf32le pp\u1f90\ud855\uddc0\u00b0\u00b0 blocks=Basic Latin,Greek Extended,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rdata)  utf8 \u0407\\a\\b\\b blocks=Cyrillic,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u04f3y\\a\\b\\b blocks=Cyrillic,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0140\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rdata)  utf8 9\u0477$\\a\\b\\b blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata)  utf8 \u0374\\a\\b\\b blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .rdata) utf16le \\nP\\n\u4ccc blocks=Basic Latin,CJK Unified Ideographs Extension A": 1,
                "radare2: .rdata)  utf8 \u059a\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rdata)  utf8 3\u055d\\a\\b\\b blocks=Basic Latin,Armenian": 1,
                "radare2: .rdata)  utf8 \u0321\\a\\b\\b blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .rdata) utf16le @\\a\u5fe0f blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rdata)  utf8 \u0264=\\a\\b\\b blocks=IPA Extensions,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u211f\\a\\b\\b blocks=Letterlike Symbols,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0286\\a\\b\\b blocks=IPA Extensions,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0611\\a\\b\\b blocks=Arabic,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u055cD\\a\\b\\b blocks=Armenian,Basic Latin": 1,
                "radare2: .rdata)  utf8 H\u02f0\\a\\b\\b blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .rdata)  utf8 u\u017c1\\a\\b\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata)  utf8 \u03c5-\\a\\b\\b blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .rdata)  utf8 T*\u0349\\a\\b\\b blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .rdata)  utf8 Z\u059d\\a\\b\\b blocks=Basic Latin,Hebrew": 1,
                "radare2: .rdata)  utf8 \u05acX\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rdata)  utf8 =\u0792\\a\\b\\b blocks=Basic Latin,Thaana": 1,
                "radare2: .rdata)  utf8 6R\u0258\\a\\b\\b blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rdata)  utf8 @\u0106\\a\\b\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata)  utf8 \u03aa\u032f\\a\\b\\b blocks=Greek and Coptic,Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .rdata)  utf8 a\u012e\\a\\b\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata)  utf8 \u05d8\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0702\\a\\b\\b blocks=Syriac,Basic Latin": 1,
                "radare2: .rdata)  utf8 F\u02487\\a\\b\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata)  utf8 t\u06aa!\\a\\b\\b blocks=Basic Latin,Arabic": 1,
                "radare2: .rdata)  utf8 \u00fe\\a\\b\\b blocks=Latin-1 Supplement,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0516Xp\\a\\b\\b blocks=Cyrillic Supplement,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0212\\a\\b\\b blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u05da\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0141\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u011b`J\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u01537\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rdata)  utf8 ]^`himst{|}~ + @ P [!=%=%s%v&&&;&=&^()) )()\\n*=+++=, ---=->///=/i00010s25: :]<<<===> >=>>CcCfCoCsDoIfLlLmLoLtLuMcMeMnNdNlNoOSPIPcPdPePfPiPoPsScSkSmSoYiZlZpZs[]\":\"\\n\\*\\D\\E\\S\\W\\d\\s\\w\\n ]:]\\n^=dogci)ifinmsnsoss us{}|=||}\\n\u00b5     G  M  P %v )\\n *( -  <  >  m=!==%25%2B%: &^='\"'): +00+03+04+05+06+07+08+09+10+11+12+13+14-01-02-03-04-05-06-08-09-11-12// ///125625: `<<====>>=>>>???ADTASTAprAugBSTCATCDTCETCSTDecDltEATEDTEETEOFESTFebForFriGMTHDTHSTHanIDTISTJSTJanJulJunKSTKeyLN2LaoMDTMSKMSTMarMayMonMroNDTNSTNULNaNNkoNovOctOp(PC=PDTPKTPSTSatSepStdSunThuTueUTCVaiWATWETWed\\\\?\\n})]:\\nabsadxaesavxcosdaydirendexpfmaforgc getgp infintip4letlogmapmaxminnannewnilnowobjos2pc=poppowptrsetsintantcptryu00var\u00b5s\u03bcs\ufffd !=  ->  <== as  at  fp= in  is  lr: of  on  pc= sp: sp=$1$2'\\'') = ) m=) {\\n+Inf+inf, n -Inf-inf20063125: p=>>>=ACDTACSTAEDTAESTAKDTAKSTARCHAWSTAhomArgsCESTCallChamDashDateEESTFileFuncG.%sGOGCGOOSJSONJulyJuneKillLN10LisuMathMiaoModiNULLNZDTNZSTNewaSASTStatThaiUserWESTWith[]%s\\u00\\n\\tm=] n=acosasinatanavx2basebindbmi1bmi2boolcallcap cas1cas2cas3cas4cas5cas6caseceilchandeaddropelseenumermsevalexecfailfilefunchouridleinfoint8joinjsonkeyskindnamenew nonenullopenpushquitreadsbrkscvgsealseeksomesortsqrtsse2sse3synctcp6testthistimetrimtruetypeudp6uintuservoidwarnwith ...\\n H_T= H_a= H_g= MB,  W_a= and  cnt= for  h_a= h_g= h_t= max= not  ptr  siz= tab= top= u_a= u_g=%25$1%d:%d%s:%d+0000+0330+0430+0530+0545+0630+0845+1030+1245+1345, ..., fp:-09301562578125<nil>AdlamAprilArrayBamumBatakBuhidCall ColonErrorFinalFrameGreekGroupKhmerLOG2ELatinLimbuLocalMarchNushuOghamOriyaOsageRunicSQRT2STermStdinTakriTamilWhile\\u202amd64applyargp=arrayatan2breakbytescatchchdirchmodchownclasscloseconstdebugerroreveryfalsefaultfloatfloorgcinggob: indexinputint16int32int64isNaNmatchmonthntohspanicparseroundrune shiftsleepslicesplitsse41sse42ssse3stacksuperthrowtraceuint8usageuser2valuewhilewrite (MB)\\n Value addr= base  code= ctxt: curg= goid  jobs= list= m->p= next= p->m= prev= span= varp=%s: %s(...)\\n*_+-./, not /%s/%s390625<-chanArabicAu blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic,Specials": 1,
                "radare2: .rdata)  utf8 gustBrahmiCarianChakmaCommonCopticCreateDeployFormatFramesFridayGOARCHGOROOTGetACPGothicHangulHatranHebrewHyphenKaithiKhojkiLOG10ELepchaLycianLydianMondayNUMBERNumCPUNumberO_EXCLO_RDWRO_SYNCObjectRegExpRejangSCHED STRINGSignalStderrStdoutStringSundaySyriacTai_LeTangutTeluguThaanaUTC+12UTC+13UTC-02UTC-08UTC-09UTC-11[%d]%s[]byte\\ufffd^\\s*%/assertbound calleecallerchan<-charAtconcatcreatedeleteefenceempty escapeexportfilterfreezegetDayglobalhangupimportkilledlengthlistenminutenumberobjectpopcntpublicrandomreadatreducereturnrune1 searchsecondselectsocketsourcesplicestaticstringstructsubstrsweep switchtoJSONtoken(typeofuint16uint32uint64    at  (scan  (scan) MB in  Value> dying= locks= m->g0= nmsys= s=nil\\n using %s %s; %s (%s)%s = {}, goid=, sys: 19531252006-019765625AvestanBOOLEANBengaliBooleanBrailleCOMMENTChanDirConvertCopySidCurrentCypriotDeseretDevNullElbasanExecuteGODEBUGGoArrayGranthaHanunooILLEGALIO waitInstAltInstNopJanuaryKEYWORDKannadaLeadingMUI_DltMUI_StdMandaicMarchenModeDirMultaniMyanmarO_TRUNCOctoberOsmanyaProcessRadicalReaddirSQRT1_2SharadaShavianSiddhamSinhalaSoyomboSwapperTagalogTibetanTirhutaTuesdayUNKNOWNWSARecvWSASend\\tdefer \\ttypes \\tvalue=_ENGINEabortedalt -> any -> booleanclosurecompilecomplexconnectconsoledefaultextendsfinallyfloat32float64forEachfuntimegctracegetDategetTimegetYearindexOfinvalidisArraykey of messagenop -> number os/userpackagepanic: privatereplacereverserunningruntimesetDatesetTimesetYearsignal syscalltimeEndtoFixeduintptrunknownunshiftvalueOfwaitingwindowswriteat etypes  goal\u0394= is not  mcount= minutes nalloc= newval= nfreed= packed= pointer stack=[ status %!Month(%s:%d:%d(?%s:%s), idle: 15:04:0548828125AcceptExArmenianBalineseBopomofoBugineseCancelIoCherokeeCompilerCyrillicDecemberDuployanErrExistEthiopicExtenderFebruaryFullPathFunctionGeorgianGoStringGujaratiGurmukhiHiraganaHostnameInfinityInstFailInstRuneJavaneseKatakanaKayah_LiLinear_ALinear_BMahajaniMemStatsModePermModeTypeNovemberO_APPENDO_CREATEO_RDONLYO_WRONLYOl_ChikiParseIntPhags_PaProcAttrReadFileSEEK_CURSEEK_ blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rdata)  utf8 ENDSEEK_SETSaturdayTagbanwaTai_ThamTai_VietThursdayTifinaghTrailingURIErrorUgariticWSAIoctl[:word:][]string[signal \\tstack=[acceptexargumentbad instcgocheckcontinuecs      debuggerfs      functiongetHoursgetMonthgo1.12.5gs      infinityinternalisFiniteisFrozenisSealedno anodeno erroropPseudoparseIntr10     r11     r12     r13     r14     r15     r8      r9      rax     rbp     rbx     rcx     rdi     rflags  rip     rsi     rsp     runnableruntime.scavengesetHourssetMonthshutdownstrconv.toStringtrimLefttruncateunescapeunknown(writablewsaioctl (forced) -> node= as type  blocked= defersc= in use)\\n lockedg= lockedm= m->curg= ms cpu,  not in [ of type  runtime= s.limit= s.state= threads= u_a/u_g= wbuf1.n= wbuf2.n=(unknown)+infinity, newval=, oldval=-Infinity-infinity244140625: inuse: : status=<unknown>ArgumentsBassa_VahBhaiksukiCallSliceCuneiformDiacriticErrClosedEvalErrorFindCloseG.%s = {}Hex_DigitInheritedInstMatchInstRune1InterfaceInterruptKhudawadiLinkErrorLocalFreeMAX_VALUEMIN_VALUEMalayalamMongolianMoveFileWNabataeanPalmyreneParseBoolParseUintPathErrorSamaritanSeptemberSundaneseTypeErrorWSASendToWednesdayWriteFile[:^word:][:alnum:][:alpha:][:ascii:][:blank:][:cntrl:][:digit:][:graph:][:lower:][:print:][:punct:][:space:][:upper:]__PRELOADargumentsatomicor8bad indirbus errorchan sendcomplex64copystackctxt != 0decodeURIempty urlencodeURIfuncargs(getUTCDayinterfaceinterruptlastIndexloader.gsmSpanDeadmSpanFreemap[%s]%smultilineno errorsomitemptypanicwaitpclmulqdqprotectedprototypepsapi.dllrecover: reflect: rwxrwxrwxstringifysubstringtrimRightundefinedunhandled} stack=[ MB goal,  actual\u0394= flushGen  gfreecnt= pages at  runqsize= runqueue= s.base()= spinning= stopwait= sweepgen  sweepgen= targetpc= throwing= until pc=%!Weekday((function(/dev/stdin12207031252006-01-022006T15:046103515625: parsing CancelIoExCreateFileCreatePipeDeprecatedDevanagariDnsQuery_WErrInvalidException GC forced\\nGOMAXPROCSGetIfEntryGetVersionGlagoliticIDENTIFIERKharoshthiLockFileExManichaeanModeAppendModeDeviceModeSetgidModeSetuidModeSocketM blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rdata)  utf8 TypeAssertionErrorUnterminated groupVariation_Selector[^\\x00-\\x{10FFFF}][object Undefined]bad lfnode addressbad manualFreeListbufio: buffer fullconnection refuseddecodeURIComponentencodeURIComponentfile name too longforEachP: not donegarbage collectiongetUTCMillisecondsidentifier removedin numeric literalindex out of rangeinput/output errorinvalid character multihop attemptedno child processesno locks availableoperation canceledracy use of timersreflect.Value.Callreflect.Value.Elemreflect.Value.Sendreflect.Value.Typereflect.Value.Uintreflect: Zero(nil)runtime.semacreateruntime.semawakeupsegmentation faultsetUTCMillisecondsstreams pipe errorsystem page size (toLocaleDateStringtoLocaleTimeStringtracebackancestorsunknown stash typeuse of closed filevalue out of range called using nil * t.spanKey.npages= '%s' is not defined,  g->atomicstatus=, gp->-01-02 15:04:052006-01-02T15:04:057450580596923828125Altai Standard TimeBahia Standard TimeCanadian_AboriginalChina Standard TimeCreateSymbolicLinkWCryptReleaseContextEgypt Standard TimeFunction.toString()GetCurrentProcessIdGetSystemDirectoryWGetTokenInformationHaiti Standard TimeIDS_Binary_OperatorIndia Standard TimeKorea Standard TimeLibya Standard TimeMultiByteToWideCharNepal Standard TimePattern_White_SpaceRussia Time Zone 10Russia Time Zone 11Samoa Standard TimeSetTokenInformationSudan Standard TimeSyria Standard TimeTokyo Standard TimeTomsk Standard TimeTonga Standard TimeUnexpected token %vWaitForSingleObjectafter array elementbad file descriptorbad kind in runfinqbad notifyList sizebad runtime\u00b7mstartbad value for fielddevice not a streamdirectory not emptydisk quota exceededfile already closedfile already existsfile does not existgetOwnPropertyNamesillegal instructioninvalid URL escape m not found in allmmarking free objectmarkroot: bad indexmissing ']' in hostmspan.sweep: state=notesleep not on g0ntdll.dll not foundnwait > work.nprocspanic during mallocpanic during panic\\npanic holding lockspanicwrap: no ( in panicwrap: no  blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata)  utf8 uch device or addressoperation now in progressreflect.Value.OverflowIntreflect.Value.SetMapIndexreflect: Bits of nil Typereleasep: invalid p stateremaining pointer buffersresource deadlock avoidedruntime:      t.spanKey= runtime: VirtualAlloc of runtime: misaligned func runtime: program exceeds runtime\u00b7lock: lock countslice bounds out of rangesocket type not supportedstartm: p has runnable gsstoplockedm: not runnableunexpected fault address unexpected key value type using unaddressable value using zero Value argument1455191522836685180664062572759576141834259033203125Bougainville Standard TimeCentral Asia Standard TimeCertFreeCertificateContextE. Australia Standard TimeEkaterinburg Standard TimeGODEBUG: can not disable \"GetFileInformationByHandleIllegal continue statementIllegal hexadecimal numberLine Islands Standard TimeNewfoundland Standard TimePostQueuedCompletionStatusQueryPerformanceFrequency blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata)  utf8 CertEnumCertificatesInStoreEaster Island Standard TimeError for preloading %s: %vG waiting list is corruptedIllegal newline after throwRangeError: %d (%v) to int8RangeError: %f (%v) to uint[\\+\\-]?(?:[Ii]nf$|infinity)\"2006-01-02T15:04:05Z07:00\"address not a stack addressafter object key:value pairbad data: undefined type %scan't convert from %q to %qcgoUse should not be calledchannel number out of rangecommunication error on sendcould not find QPC syscallsdecode can't handle type %sgcstopm: not waiting for gcgrowslice: cap out of rangeinternal lockOSThread errorinvalid argument to Shuffleinvalid profile bucket typeinvalid type name length %dkey was rejected by servicelarge span treap rotateLeftmakechan: size out of rangemakeslice: cap out of rangemakeslice: len out of rangemspan.sweep: bad span statenot a XENIX named type fileprogToPointerMask: overflowreflect.Value.OverflowFloatrestartg: unexpected statusrunlock of unlocked rwmutexruntime: checkdead: find g runtime: checkdead: nmidle=runtime: corrupted polldescruntime: netpollinit failedruntime: thread ID overflowruntime\u00b7unlock: lock countsigsend: inconsistent statestack size not a power of 2startm: negative nmspinningstopTheWorld: holding locksstring cannot have 0 insidetime: invalid location namework.nwait was > work.nproc args stack map entries for 18189894035458564758300781252006-01-02T15:04:05.000-07009094947017729282379150390625Aus Central W. Standard TimeCanada Central Standard TimeCen. Australia Standard TimeCentral Europe Standard TimeCertCreateCertificateContextEnglish name for time zone \"FixedStack is not power-of-2GetFileInformationByHandleExGetQueuedCompletionStatusEx blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata)  utf8 Prepended_Concatenation_MarkRangeError: %d (%v) to int16RangeError: %d (%v) to int32RangeError: %d (%v) to uint8Unterminated character class[originating from goroutine can't happen: encode type %scan't preserve unlinked spancomparing uncomparable type destination address requirederror = G.os.TerminateSelf()fatal: morestack on gsignal\\nfile descriptor in bad statefindrunnable: netpoll with pgcstopm: negative nmspinninggob: cannot encode nil valuegob: duplicate type receivedgob: unknown size of uintptrinvalid runtime symbol tableinvalid type passed to new()json: Unmarshal(non-pointer large span treap rotateRightmheap.freeSpanLocked - span missing stack in shrinkstackmspan.sweep: m is not lockedneed padding in bucket (key)newproc1: new g is not Gdeadnewproc1: newg missing stackos: process already finishedprotocol driver not attachedreflect.MakeSlice: len > capreflect: In of non-func typereflect: Key of non-map typeregion exceeds uintptr rangeruntime.semasleep unexpectedruntime: bad lfnode address runtime: casgstatus: oldval=runtime: no module data for runtime: stat overflow: val strconv: \u03b5 > (den<<shift)/2unexpected end of JSON input cannot be converted to type 45474735088646411895751953125Central America Standard TimeCentral Pacific Standard TimeChatham Islands Standard TimeLockOSThread nesting overflowMon, 02 Jan 2006 15:04:05 GMTMon, 02 Jan 2006 15:04:05 MSTN. Central Asia Standard TimeNorth Asia East Standard TimeRangeError: %d (%v) to uint16RangeError: %d (%v) to uint32RangeError: %f (%v) to uint64Time.UnmarshalBinary: no dataaddspecial on invalid pointerbufio.Scanner: token too longcrypto/aes: invalid key size executing on Go runtime stackfunction () { [native code] }gc done but gcphase != _GCoffgfput: bad status (not Gdead)gob: encoder: message too biggob: unknown size of int/uintinvalid character class rangeinvalid length of trace eventio: read/write on closed pipemachine is not on the networkno XENIX semaphores availablenotesleep - waitm out of syncnumerical result out of rangeoperation already in progr blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rdata) utf32le \\a\\a\u0109\u0140\\a\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf32le \\a\\b\ud800\udf03\u8808\\a blocks=Basic Latin,Old Italic,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf32le \\a\\a\ud800\udf03\ud850\udc00\\a blocks=Basic Latin,Old Italic,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le \\b\\t\\a\u0405 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata) utf16le YI\u0800\u2800@ blocks=Basic Latin,Samaritan,Braille Patterns": 1,
                "radare2: .rdata) utf32le AL\ud85d\udc3a$ blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le ;\u00da\ud855\udc8eY blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le C\u00d0\ud864\ude99T blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le 2\u00c5\ud859\udda2^ blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf16le \\tIM\u014d\u0109 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le EG\u0147\u0105 blocks=Basic Latin,Latin Extended-A": 2,
                "radare2: .rdata) utf32le \\a\\t\ud840\udc00\ud800\udd02 blocks=Basic Latin,CJK Unified Ideographs Extension B,Aegean Numbers": 1,
                "radare2: .rdata) utf32le !\\a\\n\ud800\udc00 blocks=Basic Latin,Linear B Syllabary": 1,
                "radare2: .rdata)  utf8 \\f$dD\u0124 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\bH\u0848\\t@( \\b blocks=Basic Latin,Mandaic": 1,
                "radare2: .rdata) utf16le \\f,l\u012c\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf32le \\b\\f\ud800\udc00\ud802\udd8d blocks=Basic Latin,Linear B Syllabary,Meroitic Hieroglyphs": 1,
                "radare2: .rdata) utf32le \\b\\n\ud840\udc00\ud800\udc42 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary": 1,
                "radare2: .rdata) utf32le \\t\\t\ud800\udc00\ud840\udc04 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le \\t\\n\ud840\udc00\ud800\udc00 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary": 1,
                "radare2: .rdata) utf16le  $\u0100\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf32le @\\t\\t\ud800\udc00 blocks=Basic Latin,Linear B Syllabary": 1,
                "radare2: .rdata) utf16le %18:": 1,
                "radare2: .rdata) utf32le \\t\\t\ud840\udc00\ud800\udd00 blocks=Basic Latin,CJK Unified Ideographs Extension B,Aegean Numbers": 1,
                "radare2: .rdata) utf32le \\t\\n\ud840\udc00b\udbc0\udc00\ud800\udc11 blocks=Basic Latin,CJK Unified Ideographs Extension B,Supplementary Private Use Area-B,Linear B Syllabary": 1,
                "radare2: .rdata) utf16le ,,,,": 1,
                "radare2: .rdata)  utf8 \\v+ @": 1,
                "radare2: .rdata) utf16le dddD": 1,
                "radare2: .rdata) utf16le  @\u0100\\n blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le @\\b\u0200\u0220 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le #CA@": 1,
                "radare2: .rdata) utf16le \" D\u0302\u0502 blocks=Basic Latin,Combining Diacritical Marks,Cyrillic Supplement": 1,
                "radare2: .rdata) utf16le A\u00c1\u2000\u2080 blocks=Basic Latin,Latin-1 Supplement,General Punctuation,Superscripts and Subscripts": 1,
                "radare2: .rdata) utf16le \\n*( \u020a\u0206\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le &$\u0124\u0324\u0320\u0300\u0200\\f\\f blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\b\\b\u0168\u0168\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf32le \\f\\t\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf16le \\fED\u0144\\a\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le JJJB": 1,
                "radare2: .rdata) utf16le ' `\\f": 1,
                "radare2: .rdata) utf32le \\f\\n\ud800\udc03\ud800\udc01 blocks=Basic Latin,Linear B Syllabary": 1,
                "radare2: .rdata) utf16le $d`!": 1,
                "radare2: .rdata) utf16le HL@\u0840A blocks=Basic Latin,Mandaic": 1,
                "radare2: .rdata) utf32le \\r\\f\ud800\udc00\ud840\udc22 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf16le  @\u0140\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le p`hjzx`": 1,
                "radare2: .rdata) utf16le \\n!\u0201\\t blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf32le \\r\\f\ud840\udc00\ud800\udc02 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary": 1,
                "radare2: .rdata) utf16le !A\u0420\u0400\u0401a blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata) utf16le \\nI\u0149\u0109 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \"!\\b$": 1,
                "radare2: .rdata) utf16le a` !\u0125@A blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le TPP@@": 1,
                "radare2: .rdata) utf16le 222\"\"": 1,
                "radare2: .rdata) utf16le h``@@": 1,
                "radare2: .rdata) utf16le OK\u00cb\u01cb blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le `b\u0840\u1840\u5840\u5860B blocks=Basic Latin,Mandaic,Mongolian,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf16le DL@\\b": 2,
                "radare2: .rdata) utf16le $\u00a4\u02a4\u0284\u02c4 blocks=Basic Latin,Latin-1 Supplement,IPA Extensions,Spacing Modifier Letters": 1,
                "radare2: .rdata) utf16le \\f\\b\u0148\u0140 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le $dD\u0144FB@\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\bHL@\u1040\u1001 blocks=Basic Latin,Myanmar": 1,
                "radare2: .rdata) utf16le  02\"": 1,
                "radare2: .rdata) utf16le \\b\\b\u0288\u0280 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rdata) utf16le \\fD\\b\\t\"": 1,
                "radare2: .rdata) utf16le \\n*\u00aa\u04aa\u04ea\u0480\u0400\u0401 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rdata) utf16le \\t)\u00a9\u04a8 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rdata) utf16le \\b(\u0128,l blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le @$!\\fA": 1,
                "radare2: .rdata) utf16le \"#cC\u0243\u0242B blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\v\\t\u0103\u0102\u0100@` blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le 9y\u00f8\u00b8\u00bc\u01bc\u01be blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le BJ\"bc": 1,
                "radare2: .rdata) utf16le  ,LH": 1,
                "radare2: .rdata) utf16le    \"\u0422\u0402\u0406 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata) utf16le \\t)\u0100! blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le &.*\\n\u010a\u0103\u0101\u0141\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\f\\f\\f\\f": 1,
                "radare2: .rdata) utf16le @\u00c0\u01c0\\f\\f blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le F.\u0126\u0106A blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\b\\t": 1,
                "radare2: .rdata) utf16le !\u00a1\u02a1\u02a0\u0220\u0200\\b blocks=Basic Latin,Latin-1 Supplement,IPA Extensions,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\f,\u0121\u0120\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le xpp``@@": 1,
                "radare2: .rdata) utf16le L@\\b\\t\\f": 1,
                "radare2: .rdata) utf16le jhh``@@": 1,
                "radare2: .rdata) utf16le  !#\u0123\u0120\u0100\u0100\u0110\u0118\u0108\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\b @EA": 1,
                "radare2: .rdata) utf32le ;*\ud854\udd277 blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le P7\ud85f\udd16\u00a7 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rdata) utf32le J\u00d9\ud84d\uddb5V blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf16le \" \u0540\u0541 blocks=Basic Latin,Armenian": 1,
                "radare2: .rdata) utf16le @HL\\\u015c^_OOokcC blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\v\\tCc\u0103\u0143B@ blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\b\\b\\n\\v\\e": 1,
                "radare2: .rdata) utf16le TDPRB\u0100I\u01c0 blocks=Basic Latin,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\f\\f\\f\\f\\f\\f\\f\\f\\f\\f\\f\u0100\\f\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le &@ \\f\\b": 1,
                "radare2: .rdata) utf16le \\v\\v\\v\\v\\v\\v": 1,
                "radare2: .rdata) utf16le \\b( $\\a": 1,
                "radare2: .rdata) utf16le \\fH\\n\u00a0\u0220`\\t blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le Nnfvtp`": 1,
                "radare2: .rdata) utf16le DL \\f\u014c blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le AE@D\u0204 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\b(h !$%\u00a5\u02a5 blocks=Basic Latin,Latin-1 Supplement,IPA Extensions": 1,
                "radare2: .rdata) utf16le \\t\\b `": 1,
                "radare2: .rdata) utf16le @D@PBBBbAAAI\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le %\u00c5e\u0164\u0120\u0100$\u0124\u0144 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rdata) utf16le Ff&\u0126\u0106 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\b( \"": 1,
                "radare2: .rdata) utf16le @\\a!\u0421\u0461\u0400\u0401A\u0420\\t blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata) utf16le @``@": 1,
                "radare2: .rdata) utf16le \\b(h\\a\u0107\u0103\u0143 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\nJBF": 1,
                "radare2: .rdata) utf16le \\a \u0102\\f\u0106 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\n\\b \\a\\t\\f$": 1,
                "radare2: .rdata) utf16le Aa\\t)!\\b\\a\\n\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le hh ```` \u0180   blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\b\\b( \u00a0 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le @A\\n `\\a": 1,
                "radare2: .rdata) utf16le DF\\b\\f(": 1,
                "radare2: .rdata) utf16le @A*\\vKk+/\u102a\u1028\u1068(\\b !# blocks=Basic Latin,Myanmar": 1,
                "radare2: .rdata) utf16le \\b\\f\\f\\r": 1,
                "radare2: .rdata) utf16le @`\\b\\t": 1,
                "radare2: .rdata) utf16le \\a\\f\u0104\u0304\u0300\u0204\u010c\u0108\\rE blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Latin Extended-B": 1,
                "radare2: .rdata) utf16le @LH\\b\u0140\u0100\u0101(A\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le ID$\\t": 1,
                "radare2: .rdata) utf16le ~||xxpp``@@": 1,
                "radare2: .rdata) utf16le \\nJ@\u0440\u0c40 blocks=Basic Latin,Cyrillic,Telugu": 1,
                "radare2: .rdata) utf16le \\aD\"I\u00c9\u00c8 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le B\u00c2\u01c2A@\u00c0 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\v\\n L": 1,
                "radare2: .rdata) utf16le @`\\n\\b( \\a": 1,
                "radare2: .rdata) utf16le \"*\u00aa\u01aa\u012a\u0122\u0120 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\n*\"\u0122\u00a2\u00e2 blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\b \"B\u0142@\u00c0*\u012a\u022a\u0228\u0220( blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\b \u2020\u1008( blocks=Basic Latin,General Punctuation,Myanmar": 1,
                "radare2: .rdata) utf16le !A@\u1040B blocks=Basic Latin,Myanmar": 1,
                "radare2: .rdata) utf16le \" $!\u1000\u0800\u2020\u2000\\t blocks=Basic Latin,Myanmar,Samaritan,General Punctuation": 1,
                "radare2: .rdata) utf16le #+\" `": 1,
                "radare2: .rdata) utf16le \\nA@\\b": 1,
                "radare2: .rdata) utf16le ED\u0140\u0101\u0100@AI blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le B `\\f": 1,
                "radare2: .rdata) utf16le  !A\u00c1@\u0440 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rdata) utf16le HI\u0149\u0349\\b\u1008 blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Myanmar": 1,
                "radare2: .rdata) utf16le @@\u0200\u0200\\b\\b   blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le  \u00a0!\u0201\\b@ blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le  \"C\u00c3B@ blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\a#\\b\\f\u0206\u0246\u0204\\t\u0209\u020cA blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\b\\b\u2000\u2008 blocks=Basic Latin,General Punctuation": 1,
                "radare2: .rdata) utf16le \\t\\t\u0208\u0400\u0500 blocks=Basic Latin,Latin Extended-B,Cyrillic,Cyrillic Supplement": 1,
                "radare2: .rdata) utf16le  `@$(": 1,
                "radare2: .rdata) utf16le @BCA": 1,
                "radare2: .rdata) utf16le \\a\\nHh\\t)!a \\f": 1,
                "radare2: .rdata) utf16le \\fL\u00cc\u00c4 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le HDL\\t": 1,
                "radare2: .rdata) utf16le CGB\\n\u0208\\t\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\r%$ @\u0200\u0201A blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le *(\u0228\u0208\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf32le C\u00c3\ud864\ude99\u028f blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B,IPA Extensions": 1,
                "radare2: .rdata) utf16le \\n*\"\u00a2\u04a2\u01a2 blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Latin Extended-B": 1,
                "radare2: .rdata) utf16le &\u00a6\u01a4\u03a0@ blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Greek and Coptic": 1,
                "radare2: .rdata) utf16le \\b\\n*\"b": 1,
                "radare2: .rdata) utf16le  !\u00a1\u04a1\u14a1 blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Unified Canadian Aboriginal Syllabics": 1,
                "radare2: .rdata) utf16le \"\\nH@": 1,
                "radare2: .rdata) utf16le \\n\\b( \"&#\u0123!\u0121\u0921\u0821\u0829@A\u0800\u0801\\t)\u0920\u0101\u0100 blocks=Basic Latin,Latin Extended-A,Devanagari,Samaritan": 1,
                "radare2: .rdata) utf16le NJ\\n\\b'&": 1,
                "radare2: .rdata) utf16le \\r\\t)A": 1,
                "radare2: .rdata) utf16le B\\r \"": 1,
                "radare2: .rdata) utf16le \\n\\b(H\\f": 1,
                "radare2: .rdata) utf16le & \".*(\\f": 1,
                "radare2: .rdata) utf16le  \u00a0\u00e0\u00e1\u00c0\u01c0\u01c1 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\bA\u0100\u0101\\t\\f( blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\bACE\u00c1\u01c1\u02c1 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Spacing Modifier Letters": 1,
                "radare2: .rdata) utf16le \\n@DLldB": 1,
                "radare2: .rdata) utf16le \\v\\t \"bBa'%\\f\\r": 1,
                "radare2: .rdata) utf16le AQUEP": 1,
                "radare2: .rdata) utf16le %@$\u0106\u0146\u0346\u0100\u0101\u0103\\n(!a  blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks": 1,
                "radare2: .rdata) utf16le \\t\" \u0100\u0104\u0108 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le @A$(": 1,
                "radare2: .rdata) utf16le \\n\\bH@\u0240\u0640\u0440\u0400\u0401 blocks=Basic Latin,Latin Extended-B,Arabic,Cyrillic": 1,
                "radare2: .rdata) utf16le \\n\\v*\\b": 1,
                "radare2: .rdata) utf16le \\t\\a%,": 1,
                "radare2: .rdata) utf16le ! )\u00a1 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le D$d\u0464 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata) utf16le \\f\\f\\b\\b": 1,
                "radare2: .rdata) utf16le \\f@#!a \\t()\\vI\\b\\n\\r": 1,
                "radare2: .rdata) utf16le  \\f\\t\\a,(\"": 1,
                "radare2: .rdata) utf16le a`bh\\v#$\\n*\u0100\u0120 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\b( \\f": 1,
                "radare2: .rdata) utf16le DBH\\b": 1,
                "radare2: .rdata) utf16le  \u00c0\u0440\u0400\u0401 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rdata) utf16le Ad`\u0140J\u044a\u0142(\u0100\u0101\u0102 blocks=Basic Latin,Latin Extended-A,Cyrillic": 1,
                "radare2: .rdata) utf16le \\aBG\\b\\n": 1,
                "radare2: .rdata) utf16le @\\fH\u010c\u014c\u0100\u0101\\rAC!$\" blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le (\"!\\nBF": 1,
                "radare2: .rdata) utf16le KCIi\\r%e": 1,
                "radare2: .rdata) utf16le \\r\\tEe\u0105\u0125% blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le @\\f,L\\b": 1,
                "radare2: .rdata) utf16le !@AC\u0104\u0845\u0843\u0841\\f\u00a1 blocks=Basic Latin,Latin Extended-A,Mandaic,Latin-1 Supplement": 1,
                "radare2: .rdata) utf32le '\\n\ud800\udc00\ud840\udc05 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf16le \\vK\\b\\t@\\nHIACG\u0247\u02c7\u0200\u0201E\u0244\u0245 blocks=Basic Latin,Latin Extended-B,Spacing Modifier Letters": 1,
                "radare2: .rdata) utf16le \"&! M\\f": 1,
                "radare2: .rdata) utf16le `\\b(": 1,
                "radare2: .rdata) utf16le \\tI!\u00a1a\u0102\u010a\u0142\u0101\u0100 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rdata) utf32le )\\f\ud800\udc00\ud840\udc04 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf16le CJFD\u00c4\u04c4\u0cc4\u0ccc blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Kannada": 1,
                "radare2: .rdata) utf16le \\b $\\aGA": 1,
                "radare2: .rdata) utf16le  `\u0220!\u0469\u0460\u0462\u04e2 blocks=Basic Latin,Latin Extended-B,Cyrillic": 1,
                "radare2: .rdata) utf32le   \u2820\u2800 blocks=Basic Latin,Braille Patterns": 1,
                "radare2: .rdata) utf16le \"b\u0822\u0a20\u0222 blocks=Basic Latin,Samaritan,Gurmukhi,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\bHJ\u044aB `!\u2400\u0400\u00c0 blocks=Basic Latin,Cyrillic,Control Pictures,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le A\u00c1\u04c1\u0401\u0481\u0480\u0400\\t)iI blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rdata) utf16le \\b(\\nD": 1,
                "radare2: .rdata) utf16le !\" `@": 1,
                "radare2: .rdata) utf32le @K\ud85c\uddcc\u00b2 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rdata) utf32le @N\ud85c\uddcc\u00d2 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rdata) utf32le @Q\ud85c\udc13\u0104 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin Extended-A": 1,
                "radare2: .rdata) utf32le CC\ud864\udd7b= blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le CZ\ud864\udd9c\u00cc blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le ! $A`\\t(\\r)\\f%": 1,
                "radare2: .rdata) utf16le @H\\nEID\\a#\u00a3 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le cC\\v\u0241\u0201\u0281\u00c1 blocks=Basic Latin,Latin Extended-B,IPA Extensions,Latin-1 Supplement": 1,
                "radare2: .rdata) utf32le ,\\f\u010c\u0104\u0184\u0180 blocks=Basic Latin,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\a'g\u0267\u0266\u1266\u3266 blocks=Basic Latin,IPA Extensions,Ethiopic,Enclosed CJK Letters and Months": 1,
                "radare2: .rdata) utf16le Aab\u0200\u0201 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le $\u00a4\u00a5\u00a6\u0102 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\bA@B\"\u0122 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le J*\u012a\\n blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le /on\u016e\u056e\u0168hHD blocks=Basic Latin,Latin Extended-A,Armenian": 1,
                "radare2: .rdata) utf16le C\\tIB\"": 1,
                "radare2: .rdata) utf16le `b\u0262@#! ,l\\b\\n blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rdata) utf32le @ \u0400\\bk blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata) utf16le (((((((": 1,
                "radare2: .rdata) utf16le           ((((((   \\b\\b\\b\\b\\b\\b": 1,
                "radare2: .rdata) utf32le ;\u00fc\ud854\udd279 blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf16le  \\a!G@CA\\b(\\n\\vK\"\\fDBFN\u0142\u0146\u0942 blocks=Basic Latin,Latin Extended-A,Devanagari": 1,
                "radare2: .rdata) utf16le ,\u00ac\u00ec#`H$: blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le @h(": 1,
                "radare2: .rdata) utf16le DH\\t\\f$d\u00c4 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\aea\u1000\u1001\u1021\u1061\u0160 blocks=Basic Latin,Myanmar,Latin Extended-A": 1,
                "radare2: .rdata) utf16le B\u00c2\u00c0\u0202u blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf32le \\b\\f\u010c\u018c blocks=Basic Latin,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rdata) utf16le 555555555555555555": 2,
                "radare2: .rdata) utf16le .L\u00ccD\u0109\\v\u020b blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rdata) utf32le 6m\ud834\udf60\u02e5 blocks=Basic Latin,Counting Rod Numerals,Spacing Modifier Letters": 1,
                "radare2: .rdata) utf32le 7m\ud834\udf60\u02e7 blocks=Basic Latin,Counting Rod Numerals,Spacing Modifier Letters": 1,
                "radare2: .rdata) utf32le 7\u00c7\ud834\udf60\u0300 blocks=Basic Latin,Latin-1 Supplement,Counting Rod Numerals,Combining Diacritical Marks": 1,
                "radare2: .rdata) utf32le 8\u00dc\ud834\udf60\u03b2 blocks=Basic Latin,Latin-1 Supplement,Counting Rod Numerals,Greek and Coptic": 1,
                "radare2: .rdata) utf16le \\b\"\\b#\\b\u8003\\b\u8001 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf32le \"\"\"#": 1,
                "radare2: .rdata) utf32le @": 1,
                "radare2: .rdata) utf32le \\r4\u0455\ud83c\udc05\u0499 blocks=Basic Latin,Cyrillic,Mahjong Tiles": 1,
                "radare2: .rdata) utf32le \\a2\u07c0\ud85b\udda1\u028b blocks=Basic Latin,NKo,CJK Unified Ideographs Extension B,IPA Extensions": 1,
                "radare2: .rdata) utf32le \\n2\u07c0\ud85b\udda1\u03c3 blocks=Basic Latin,NKo,CJK Unified Ideographs Extension B,Greek and Coptic": 1,
                "radare2: .rdata)  utf8 m\u06f6m\u06f6 blocks=Basic Latin,Arabic": 1,
                "radare2: .rdata) utf16le \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c blocks=Basic Latin,CJK Unified Ideographs Extension A": 1,
                "radare2: .rdata)  utf8 CJJhm\u06b6 blocks=Basic Latin,Arabic": 1,
                "radare2: .rdata) utf16le \"\"\"\"\"\"\"\u7f22\u4400\u4400\u4400\u4400\u4400\u4400\u4400\u4400 blocks=Basic Latin,CJK Unified Ideographs,CJK Unified Ideographs Extension A": 1,
                "radare2: (.rdata) ascii": 2,
                "radare2: .rdata)  utf8 \u06f6m\u06f6mUUUUUUUUUU blocks=Arabic,Basic Latin": 1,
                "radare2: .rdata)  utf8 <pQ\u0318 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .rdata)  utf8 C\u0760d@ blocks=Basic Latin,Arabic Supplement": 1,
                "radare2: .rdata)  utf8 333333\u04ff blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata)  utf8 B.\u6fd4% blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rdata)  utf8 k[T(0": 1,
                "radare2: .rdata) utf16le :\\b=\\b@\\b": 1,
                "radare2: .rdata) utf16le \\b\u00d1\\b\u00d4\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\t\u00cc\\t\u00d1\\t blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\n\u00d0\\n\u00df\\n blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\n\u00f7\\n\u0102\\n blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\v\u00b8\\v\u00bd\\v blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf32le (\u00fd\udbf0\udd8f\udbf0\udd9f\udbf0\udda4 blocks=Basic Latin,Latin-1 Supplement,Supplementary Private Use Area-B": 1,
                "radare2: .rdata) utf32le  \u00f8\udbfa\udc4d\udbfa\udc5e\udbfa\udc7f blocks=Basic Latin,Latin-1 Supplement,Supplementary Private Use Area-B": 1,
                "radare2: arch     x86": 1,
                "radare2: baddr    0x400000": 1,
                "radare2: binsz    5192704": 1,
                "radare2: bintype  pe": 1,
                "radare2: bits     64": 1,
                "radare2: canary   false": 1,
                "radare2: retguard false": 1,
                "radare2: class    PE32+": 1,
                "radare2: cmp.csum 0x004f85cf": 1,
                "radare2: compiled Wed May 22 13:31:00 2019": 1,
                "radare2: crypto   false": 1,
                "radare2: endian   little": 1,
                "radare2: havecode true": 1,
                "radare2: hdr.csum 0x004f618b": 1,
                "radare2: laddr    0x0": 1,
                "radare2: linenum  true": 1,
                "radare2: lsyms    true": 1,
                "radare2: machine  AMD 64": 1,
                "radare2: maxopsz  16": 1,
                "radare2: minopsz  1": 1,
                "radare2: nx       false": 1,
                "radare2: os       windows": 1,
                "radare2: overlay  false": 1,
                "radare2: pcalign  0": 1,
                "radare2: pic      false": 1,
                "radare2: relocs   true": 1,
                "radare2: signed   false": 1,
                "radare2: sanitiz  false": 1,
                "radare2: static   false": 1,
                "radare2: stripped true": 1,
                "radare2: subsys   Windows GUI": 1,
                "radare2: va       true": 1,
                "radare2: PE file header:": 1,
                "radare2: IMAGE_NT_HEADERS": 1,
                "radare2: Signature : 0x4550": 1,
                "radare2: IMAGE_FILE_HEADERS": 1,
                "radare2: Machine : 0x8664": 1,
                "radare2: NumberOfSections : 0x9": 1,
                "radare2: TimeDateStamp : 0x5ce58754": 1,
                "radare2: PointerToSymbolTable : 0x0": 1,
                "radare2: NumberOfSymbols : 0x0": 1,
                "radare2: SizeOfOptionalHeader : 0xf0": 1,
                "radare2: Characteristics : 0x22f": 1,
                "radare2: IMAGE_OPTIONAL_HEADERS": 1,
                "radare2: Magic : 0x20b": 1,
                "radare2: MajorLinkerVersion : 0x2": 1,
                "radare2: MinorLinkerVersion : 0x20": 1,
                "radare2: SizeOfCode : 0x23d600": 1,
                "radare2: SizeOfInitializedData : 0x4f3800": 1,
                "radare2: SizeOfUninitializedData : 0x1ec00": 1,
                "radare2: AddressOfEntryPoint : 0x1470": 1,
                "radare2: BaseOfCode : 0x1000": 1,
                "radare2: ImageBase : 0x400000": 1,
                "radare2: SectionAlignment : 0x1000": 1,
                "radare2: FileAlignment : 0x200": 1,
                "radare2: MajorOperatingSystemVersion : 0x4": 1,
                "radare2: MinorOperatingSystemVersion : 0x0": 1,
                "radare2: MajorImageVersion : 0x0": 1,
                "radare2: MinorImageVersion : 0x0": 1,
                "radare2: MajorSubsystemVersion : 0x5": 1,
                "radare2: MinorSubsystemVersion : 0x2": 1,
                "radare2: Win32VersionValue : 0x0": 1,
                "radare2: SizeOfImage : 0x518000": 1,
                "radare2: SizeOfHeaders : 0x400": 1,
                "radare2: CheckSum : 0x4f618b": 1,
                "radare2: Subsystem : 0x2": 1,
                "radare2: DllCharacteristics : 0x0": 1,
                "radare2: SizeOfStackReserve : 0x200000": 1,
                "radare2: SizeOfStackCommit : 0x1000": 1,
                "radare2: SizeOfHeapReserve : 0x100000": 1,
                "radare2: SizeOfHeapCommit : 0x1000": 1,
                "radare2: LoaderFlags : 0x0": 1,
                "radare2: NumberOfRvaAndSizes : 0x10": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "radare2: VirtualAddress : 0x515000": 1,
                "radare2: Size : 0xe54": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_EXCEPTION": 1,
                "radare2: VirtualAddress : 0x4f4000": 1,
                "radare2: Size : 0x4b0": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_TLS": 1,
                "radare2: VirtualAddress : 0x4f31c0": 1,
                "radare2: Size : 0x28": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "radare2: VirtualAddress : 0x515354": 1,
                "radare2: Size : 0x318": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "radare2: VirtualAddress : 0x0": 1,
                "radare2: Size : 0xffff": 1,
                "radare2: kernel32.dll": 1,
                "radare2: msvcrt.dll": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_AddVectoredExceptionHandler": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_CloseHandle": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_CreateEventA": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_CreateIoCompletionPort": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_CreateThread": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_DeleteCriticalSection": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_DuplicateHandle": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_EnterCriticalSection": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_ExitProcess": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_FreeEnvironmentStringsW": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_FreeLibrary": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetConsoleMode": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetCurrentProcess": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetCurrentProcessId": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetCurrentThreadId": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetEnvironmentStringsW": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetLastError": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetNativeSystemInfo": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetProcAddress": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetProcessAffinityMask": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetProcessHeap": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetQueuedCompletionStatus": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetStartupInfoA": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetStdHandle": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetSystemDirectoryA": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetSystemInfo": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetSystemTimeAsFileTime": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetThreadLocale": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetTickCount": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_HeapAlloc": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_HeapFree": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_InitializeCriticalSection": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_IsBadReadPtr": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_LeaveCriticalSection": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_LoadLibraryA": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_LoadLibraryW": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_QueryPerformanceCounter": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_RtlAddFunctionTable": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_RtlCaptureContext": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_RtlLookupFunctionEntry": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_RtlVirtualUnwind": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetConsoleCtrlHandler": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetErrorMode": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetEvent": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetLastError": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetProcessPriorityBoost": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetUnhandledExceptionFilter": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetWaitableTimer": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_Sleep": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SwitchToThread": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_TerminateProcess": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_TlsGetValue": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_UnhandledExceptionFilter": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_VirtualAlloc": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_VirtualFree": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_VirtualProtect": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_VirtualQuery": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_WaitForSingleObject": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_WriteConsoleW": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_WriteFile": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll___C_specific_handler": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_lstrlenA": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___getmainargs": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___initenv": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___iob_func": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___lconv_init": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___set_app_type": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___setusermatherr": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__acmdln": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__amsg_exit": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__beginthread": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__cexit": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__errno": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__fmode": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__initterm": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__onexit": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__wcsnicmp": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_abort": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_bsearch": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_calloc": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_exit": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_fprintf": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_free": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_fwrite": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_malloc": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_mbstowcs": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_memcpy": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_memset": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_qsort": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_realloc": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_signal": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_strcmp": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_strlen": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_strncmp": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_strtol": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_vfprintf": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_wcstombs": 1,
                "radare2: 5192704": 1,
                "clamav: Cannot dlopen libclamunrar_iface: file not found - unrar support unavailable": 1,
                "clamav: cli_loadftm: File type signature for Microsoft Windows Shortcut File not loaded (required f-level: 1??)": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 7?? bytes": 1,
                "clamav: bytecode self test running": 1,
                "clamav: Bytecode 4?????????: executing in JIT mode": 1,
                "clamav: bytecode finished in 1 us": 1,
                "clamav: bytecode self test succeeded": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 1????? bytes": 1,
                "clamav: Bytecode: 94 bytecode prepared with JIT": 1,
                "clamav: Recognized MS-EXE/DLL file": 1,
                "clamav: in cli_peheader": 4,
                "clamav: Matched signature for file type PE": 2,
                "clamav: Running bytecode for logical signature match": 1,
                "clamav: Bytecode 37: executing in JIT mode": 1,
                "clamav: bytecode finished in 87 us": 1,
                "clamav: Bytecode 37 returned code: 0": 1,
                "clamav: cli_peheader: Can't read file header": 2,
                "clamav: Invalid PE signature (probably NE file)": 1,
                "clamav: e_lfanew == 1??": 1,
                "clamav: File type: Executable": 1,
                "clamav: Machine type: AMD64": 1,
                "clamav: NumberOfSections: 9": 1,
                "clamav: TimeDateStamp: Wed May 22 13:31:00 2???": 1,
                "clamav: SizeOfOptionalHeader: f0": 1,
                "clamav: File format: PE32+": 1,
                "clamav: MajorLinkerVersion: 2": 1,
                "clamav: MinorLinkerVersion: 32": 1,
                "clamav: SizeOfCode: 0x2?????": 1,
                "clamav: AddressOfEntryPoint: 0x1???": 1,
                "clamav: BaseOfCode: 0x1???": 1,
                "clamav: SectionAlignment: 0x1???": 1,
                "clamav: FileAlignment: 0x2??": 1,
                "clamav: MajorSubsystemVersion: 5": 1,
                "clamav: MinorSubsystemVersion: 2": 1,
                "clamav: SizeOfImage: 0x5?????": 1,
                "clamav: SizeOfHeaders: 0x4??": 1,
                "clamav: NumberOfRvaAndSizes: 16": 1,
                "clamav: Subsystem: Win32 GUI": 1,
                "clamav: Section 0": 1,
                "clamav: Section name: .text": 1,
                "clamav: Section data (from headers - in memory)": 9,
                "clamav: VirtualSize: 0x2????? 0x2?????": 2,
                "clamav: VirtualAddress: 0x1??? 0x1???": 1,
                "clamav: SizeOfRawData: 0x2????? 0x2?????": 2,
                "clamav: PointerToRawData: 0x4?? 0x4??": 1,
                "clamav: Section contains executable code": 1,
                "clamav: Section's memory is executable": 1,
                "clamav: MDB hashset: 2??????:d2acad5012e1da9b6c534f96642ebadc": 1,
                "clamav: Section 1": 1,
                "clamav: Section name: .data": 1,
                "clamav: VirtualSize: 0x1???? 0x1????": 2,
                "clamav: VirtualAddress: 0x2????? 0x2?????": 2,
                "clamav: SizeOfRawData: 0x1???? 0x1????": 1,
                "clamav: PointerToRawData: 0x2????? 0x2?????": 2,
                "clamav: Section's memory is writeable": 5,
                "clamav: MDB hashset: 1?????:c3fc25f788cf803035684364560f4215": 1,
                "clamav: Section 2": 1,
                "clamav: Section name: .rdata": 1,
                "clamav: MDB hashset: 2??????:5a6508fc7519a6466d2fe43e076bc3ed": 1,
                "clamav: Section 3": 1,
                "clamav: Section name: .pdata": 1,
                "clamav: VirtualSize: 0x4?? 0x1???": 1,
                "clamav: VirtualAddress: 0x4????? 0x4?????": 3,
                "clamav: SizeOfRawData: 0x6?? 0x6??": 1,
                "clamav: PointerToRawData: 0x4????? 0x4?????": 5,
                "clamav: MDB hashset: 1???:c44ffb7f0c5439c98dd6eb1b0353b809": 1,
                "clamav: Section 4": 1,
                "clamav: Section name: .xdata": 1,
                "clamav: VirtualSize: 0x3?? 0x1???": 1,
                "clamav: SizeOfRawData: 0x4?? 0x4??": 1,
                "clamav: MDB hashset: 1???:7cfa7259d5b997b5d737ac6090637136": 1,
                "clamav: Section 5": 1,
                "clamav: Section name: .bss": 1,
                "clamav: SizeOfRawData: 0x0 0x0": 1,
                "clamav: PointerToRawData: 0x0 0x0": 1,
                "clamav: Section 6": 1,
                "clamav: Section name: .idata": 1,
                "clamav: VirtualSize: 0xe?? 0x1???": 1,
                "clamav: VirtualAddress: 0x5????? 0x5?????": 3,
                "clamav: SizeOfRawData: 0x1??? 0x1???": 1,
                "clamav: MDB hashset: 4???:0bc6a216099409952366f9e47078729d": 1,
                "clamav: Section 7": 1,
                "clamav: Section name: .CRT": 1,
                "clamav: VirtualSize: 0x68 0x1???": 1,
                "clamav: SizeOfRawData: 0x2?? 0x2??": 2,
                "clamav: MDB hashset: 5??:a5dfedcc269582ad5bbb9553b4214222": 1,
                "clamav: Section 8": 1,
                "clamav: Section name: .tls": 1,
                "clamav: VirtualSize: 0x10 0x1???": 1,
                "clamav: MDB hashset: 5??:bf619eac0cdf3f68d496ea9344137e8b": 1,
                "clamav: EntryPoint offset: 0x8?? (2???)": 1,
                "clamav: cli_magic_scandesc: returning 0  at line 2???": 1,
                "clamav: bytecode watchdog is running": 1,
                "clamav: malware family: OK": 1,
                "clamav: OK": 1,
                "clamav: Scanned files: 1": 1,
                "clamav: Infected files: 0": 1,
                "radare2: -r-x .text;radare2: -rw- .data": 1,
                "radare2: -rw- .data;radare2: -r-- .rdata": 1,
                "radare2: -r-- .rdata;radare2: -r-- .pdata": 1,
                "radare2: -r-- .pdata;radare2: -r-- .xdata": 1,
                "radare2: -r-- .xdata;radare2: -rw- .bss": 1,
                "radare2: -rw- .bss;radare2: -rw- .idata": 1,
                "radare2: -rw- .idata;radare2: -rw- .CRT": 1,
                "radare2: -rw- .CRT;radare2: -rw- .tls": 1,
                "radare2: -rw- .tls;radare2: type=program": 1,
                "radare2: type=program;radare2: KERNEL32.dll_AddVectoredExceptionHandler": 1,
                "radare2: KERNEL32.dll_AddVectoredExceptionHandler;radare2: KERNEL32.dll_CloseHandle": 1,
                "radare2: KERNEL32.dll_CloseHandle;radare2: KERNEL32.dll_CreateEventA": 1,
                "radare2: KERNEL32.dll_CreateEventA;radare2: KERNEL32.dll_CreateIoCompletionPort": 1,
                "radare2: KERNEL32.dll_CreateIoCompletionPort;radare2: KERNEL32.dll_CreateThread": 1,
                "radare2: KERNEL32.dll_CreateThread;radare2: KERNEL32.dll_DeleteCriticalSection": 1,
                "radare2: KERNEL32.dll_DeleteCriticalSection;radare2: KERNEL32.dll_DuplicateHandle": 1,
                "radare2: KERNEL32.dll_DuplicateHandle;radare2: KERNEL32.dll_EnterCriticalSection": 1,
                "radare2: KERNEL32.dll_EnterCriticalSection;radare2: KERNEL32.dll_ExitProcess": 1,
                "radare2: KERNEL32.dll_ExitProcess;radare2: KERNEL32.dll_FreeEnvironmentStringsW": 1,
                "radare2: KERNEL32.dll_FreeEnvironmentStringsW;radare2: KERNEL32.dll_FreeLibrary": 1,
                "radare2: KERNEL32.dll_FreeLibrary;radare2: KERNEL32.dll_GetConsoleMode": 1,
                "radare2: KERNEL32.dll_GetConsoleMode;radare2: KERNEL32.dll_GetCurrentProcess": 1,
                "radare2: KERNEL32.dll_GetCurrentProcess;radare2: KERNEL32.dll_GetCurrentProcessId": 1,
                "radare2: KERNEL32.dll_GetCurrentProcessId;radare2: KERNEL32.dll_GetCurrentThreadId": 1,
                "radare2: KERNEL32.dll_GetCurrentThreadId;radare2: KERNEL32.dll_GetEnvironmentStringsW": 1,
                "radare2: KERNEL32.dll_GetEnvironmentStringsW;radare2: KERNEL32.dll_GetLastError": 1,
                "radare2: KERNEL32.dll_GetLastError;radare2: KERNEL32.dll_GetNativeSystemInfo": 1,
                "radare2: KERNEL32.dll_GetNativeSystemInfo;radare2: KERNEL32.dll_GetProcAddress": 1,
                "radare2: KERNEL32.dll_GetProcAddress;radare2: KERNEL32.dll_GetProcessAffinityMask": 1,
                "radare2: KERNEL32.dll_GetProcessAffinityMask;radare2: KERNEL32.dll_GetProcessHeap": 1,
                "radare2: KERNEL32.dll_GetProcessHeap;radare2: KERNEL32.dll_GetQueuedCompletionStatus": 1,
                "radare2: KERNEL32.dll_GetQueuedCompletionStatus;radare2: KERNEL32.dll_GetStartupInfoA": 1,
                "radare2: KERNEL32.dll_GetStartupInfoA;radare2: KERNEL32.dll_GetStdHandle": 1,
                "radare2: KERNEL32.dll_GetStdHandle;radare2: KERNEL32.dll_GetSystemDirectoryA": 1,
                "radare2: KERNEL32.dll_GetSystemDirectoryA;radare2: KERNEL32.dll_GetSystemInfo": 1,
                "radare2: KERNEL32.dll_GetSystemInfo;radare2: KERNEL32.dll_GetSystemTimeAsFileTime": 1,
                "radare2: KERNEL32.dll_GetSystemTimeAsFileTime;radare2: KERNEL32.dll_GetThreadLocale": 1,
                "radare2: KERNEL32.dll_GetThreadLocale;radare2: KERNEL32.dll_GetTickCount": 1,
                "radare2: KERNEL32.dll_GetTickCount;radare2: KERNEL32.dll_HeapAlloc": 1,
                "radare2: KERNEL32.dll_HeapAlloc;radare2: KERNEL32.dll_HeapFree": 1,
                "radare2: KERNEL32.dll_HeapFree;radare2: KERNEL32.dll_InitializeCriticalSection": 1,
                "radare2: KERNEL32.dll_InitializeCriticalSection;radare2: KERNEL32.dll_IsBadReadPtr": 1,
                "radare2: KERNEL32.dll_IsBadReadPtr;radare2: KERNEL32.dll_LeaveCriticalSection": 1,
                "radare2: KERNEL32.dll_LeaveCriticalSection;radare2: KERNEL32.dll_LoadLibraryA": 1,
                "radare2: KERNEL32.dll_LoadLibraryA;radare2: KERNEL32.dll_LoadLibraryW": 1,
                "radare2: KERNEL32.dll_LoadLibraryW;radare2: KERNEL32.dll_QueryPerformanceCounter": 1,
                "radare2: KERNEL32.dll_QueryPerformanceCounter;radare2: KERNEL32.dll_RtlAddFunctionTable": 1,
                "radare2: KERNEL32.dll_RtlAddFunctionTable;radare2: KERNEL32.dll_RtlCaptureContext": 1,
                "radare2: KERNEL32.dll_RtlCaptureContext;radare2: KERNEL32.dll_RtlLookupFunctionEntry": 1,
                "radare2: KERNEL32.dll_RtlLookupFunctionEntry;radare2: KERNEL32.dll_RtlVirtualUnwind": 1,
                "radare2: KERNEL32.dll_RtlVirtualUnwind;radare2: KERNEL32.dll_SetConsoleCtrlHandler": 1,
                "radare2: KERNEL32.dll_SetConsoleCtrlHandler;radare2: KERNEL32.dll_SetErrorMode": 1,
                "radare2: KERNEL32.dll_SetErrorMode;radare2: KERNEL32.dll_SetEvent": 1,
                "radare2: KERNEL32.dll_SetEvent;radare2: KERNEL32.dll_SetLastError": 1,
                "radare2: KERNEL32.dll_SetLastError;radare2: KERNEL32.dll_SetProcessPriorityBoost": 1,
                "radare2: KERNEL32.dll_SetProcessPriorityBoost;radare2: KERNEL32.dll_SetUnhandledExceptionFilter": 1,
                "radare2: KERNEL32.dll_SetUnhandledExceptionFilter;radare2: KERNEL32.dll_SetWaitableTimer": 1,
                "radare2: KERNEL32.dll_SetWaitableTimer;radare2: KERNEL32.dll_Sleep": 1,
                "radare2: KERNEL32.dll_Sleep;radare2: KERNEL32.dll_SwitchToThread": 1,
                "radare2: KERNEL32.dll_SwitchToThread;radare2: KERNEL32.dll_TerminateProcess": 1,
                "radare2: KERNEL32.dll_TerminateProcess;radare2: KERNEL32.dll_TlsGetValue": 1,
                "radare2: KERNEL32.dll_TlsGetValue;radare2: KERNEL32.dll_UnhandledExceptionFilter": 1,
                "radare2: KERNEL32.dll_UnhandledExceptionFilter;radare2: KERNEL32.dll_VirtualAlloc": 1,
                "radare2: KERNEL32.dll_VirtualAlloc;radare2: KERNEL32.dll_VirtualFree": 1,
                "radare2: KERNEL32.dll_VirtualFree;radare2: KERNEL32.dll_VirtualProtect": 1,
                "radare2: KERNEL32.dll_VirtualProtect;radare2: KERNEL32.dll_VirtualQuery": 1,
                "radare2: KERNEL32.dll_VirtualQuery;radare2: KERNEL32.dll_WaitForSingleObject": 1,
                "radare2: KERNEL32.dll_WaitForSingleObject;radare2: KERNEL32.dll_WriteConsoleW": 1,
                "radare2: KERNEL32.dll_WriteConsoleW;radare2: KERNEL32.dll_WriteFile": 1,
                "radare2: KERNEL32.dll_WriteFile;radare2: KERNEL32.dll___C_specific_handler": 1,
                "radare2: KERNEL32.dll___C_specific_handler;radare2: KERNEL32.dll_lstrlenA": 1,
                "radare2: KERNEL32.dll_lstrlenA;radare2: msvcrt.dll___getmainargs": 1,
                "radare2: msvcrt.dll___getmainargs;radare2: msvcrt.dll___initenv": 1,
                "radare2: msvcrt.dll___initenv;radare2: msvcrt.dll___iob_func": 1,
                "radare2: msvcrt.dll___iob_func;radare2: msvcrt.dll___lconv_init": 1,
                "radare2: msvcrt.dll___lconv_init;radare2: msvcrt.dll___set_app_type": 1,
                "radare2: msvcrt.dll___set_app_type;radare2: msvcrt.dll___setusermatherr": 1,
                "radare2: msvcrt.dll___setusermatherr;radare2: msvcrt.dll__acmdln": 1,
                "radare2: msvcrt.dll__acmdln;radare2: msvcrt.dll__amsg_exit": 1,
                "radare2: msvcrt.dll__amsg_exit;radare2: msvcrt.dll__beginthread": 1,
                "radare2: msvcrt.dll__beginthread;radare2: msvcrt.dll__cexit": 1,
                "radare2: msvcrt.dll__cexit;radare2: msvcrt.dll__errno": 1,
                "radare2: msvcrt.dll__errno;radare2: msvcrt.dll__fmode": 1,
                "radare2: msvcrt.dll__fmode;radare2: msvcrt.dll__initterm": 1,
                "radare2: msvcrt.dll__initterm;radare2: msvcrt.dll__onexit": 1,
                "radare2: msvcrt.dll__onexit;radare2: msvcrt.dll__wcsnicmp": 1,
                "radare2: msvcrt.dll__wcsnicmp;radare2: msvcrt.dll_abort": 1,
                "radare2: msvcrt.dll_abort;radare2: msvcrt.dll_bsearch": 1,
                "radare2: msvcrt.dll_bsearch;radare2: msvcrt.dll_calloc": 1,
                "radare2: msvcrt.dll_calloc;radare2: msvcrt.dll_exit": 1,
                "radare2: msvcrt.dll_exit;radare2: msvcrt.dll_fprintf": 1,
                "radare2: msvcrt.dll_fprintf;radare2: msvcrt.dll_free": 1,
                "radare2: msvcrt.dll_free;radare2: msvcrt.dll_fwrite": 1,
                "radare2: msvcrt.dll_fwrite;radare2: msvcrt.dll_malloc": 1,
                "radare2: msvcrt.dll_malloc;radare2: msvcrt.dll_mbstowcs": 1,
                "radare2: msvcrt.dll_mbstowcs;radare2: msvcrt.dll_memcpy": 1,
                "radare2: msvcrt.dll_memcpy;radare2: msvcrt.dll_memset": 1,
                "radare2: msvcrt.dll_memset;radare2: msvcrt.dll_qsort": 1,
                "radare2: msvcrt.dll_qsort;radare2: msvcrt.dll_realloc": 1,
                "radare2: msvcrt.dll_realloc;radare2: msvcrt.dll_signal": 1,
                "radare2: msvcrt.dll_signal;radare2: msvcrt.dll_strcmp": 1,
                "radare2: msvcrt.dll_strcmp;radare2: msvcrt.dll_strlen": 1,
                "radare2: msvcrt.dll_strlen;radare2: msvcrt.dll_strncmp": 1,
                "radare2: msvcrt.dll_strncmp;radare2: msvcrt.dll_strtol": 1,
                "radare2: msvcrt.dll_strtol;radare2: msvcrt.dll_vfprintf": 1,
                "radare2: msvcrt.dll_vfprintf;radare2: msvcrt.dll_wcstombs": 1,
                "radare2: msvcrt.dll_wcstombs;radare2: .data) utf32le 09!~az ~AZ": 1,
                "radare2: .data) utf32le 09!~az ~AZ;radare2: .data)  utf8 \\e6l\u062bM blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 \\e6l\u062bM blocks=Basic Latin,Arabic;radare2: .data) utf32le AZaz\\t\\t": 1,
                "radare2: .data) utf32le AZaz\\t\\t;radare2: .data) utf32le \\t\\r": 1,
                "radare2: .data) utf32le \\t\\r;radare2: .data) utf32le \\t\\n\\f\\r": 1,
                "radare2: .data) utf32le \\t\\n\\f\\r;radare2: .data) utf32le 09AZaz": 1,
                "radare2: .data) utf32le 09AZaz;radare2: .data) utf32le 09AFaf": 1,
                "radare2: .data) utf32le 09AFaf;radare2: .data) utf32le 9AZ__az!/:@[`{~09AZ__az": 1,
                "radare2: .data) utf32le 9AZ__az!/:@[`{~09AZ__az;radare2: .data)  utf8 ?HUUUUU\u017f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .data)  utf8 ?HUUUUU\u017f blocks=Basic Latin,Latin Extended-A;radare2: .data) utf16le $\u00a2~\u00a3\u00a5 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data) utf16le $\u00a2~\u00a3\u00a5 blocks=Basic Latin,Latin-1 Supplement;radare2: .data) utf16le )]4}\u0f3b blocks=Basic Latin,Tibetan": 1,
                "radare2: .data) utf16le )]4}\u0f3b blocks=Basic Latin,Tibetan;radare2: .data) utf16le  0@P`p": 1,
                "radare2: .data) utf16le  0@P`p;radare2: .data) utf16le \\a\\b\u8009\\n\u800c\u800c\\r blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .data) utf16le \\a\\b\u8009\\n\u800c\u800c\\r blocks=Basic Latin,CJK Unified Ideographs;radare2: .data) utf16le \\e %&\u8028*058@\u8048JPU\u8060jp blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .data) utf16le \\e %&\u8028*058@\u8048JPU\u8060jp blocks=Basic Latin,CJK Unified Ideographs;radare2: .data) utf16le ([3{\u0f3a blocks=Basic Latin,Tibetan": 1,
                "radare2: .data) utf16le ([3{\u0f3a blocks=Basic Latin,Tibetan;radare2: .data)  utf8 x2+\u0176\u00caw blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 x2+\u0176\u00caw blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement;radare2: .data)  utf8 o$_jZkbkU\u051d blocks=Basic Latin,Cyrillic Supplement": 1,
                "radare2: .data)  utf8 o$_jZkbkU\u051d blocks=Basic Latin,Cyrillic Supplement;radare2: .data)  utf8 NgmkC": 1,
                "radare2: .data)  utf8 NgmkC;radare2: .data)  utf8 R;\u05b3) blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 R;\u05b3) blocks=Basic Latin,Hebrew;radare2: .data)  utf8 [j\u02fe9JLX blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .data)  utf8 [j\u02fe9JLX blocks=Basic Latin,Spacing Modifier Letters;radare2: .data)  utf8 \u0127~=d] blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 \u0127~=d] blocks=Latin Extended-A,Basic Latin;radare2: .data) utf16le \\a\\b\\t\\n\\v\\f\\r": 1,
                "radare2: .data) utf16le \\a\\b\\t\\n\\v\\f\\r;radare2: .data) utf16le  !\"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`ABCDEFGHIJ\u212aLMNOPQR\u017fTUVWXYZ{|}~ blocks=Basic Latin,Letterlike Symbols,Latin Extended-A": 1,
                "radare2: .data) utf16le  !\"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`ABCDEFGHIJ\u212aLMNOPQR\u017fTUVWXYZ{|}~ blocks=Basic Latin,Letterlike Symbols,Latin Extended-A;radare2: .data)  utf8 ld?\u06cc_? blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 ld?\u06cc_? blocks=Basic Latin,Arabic;radare2: .data)  utf8 _+?\u0518(? blocks=Basic Latin,Cyrillic Supplement": 1,
                "radare2: .data)  utf8 _+?\u0518(? blocks=Basic Latin,Cyrillic Supplement;radare2: .data)  utf8 >A\u039a> blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 >A\u039a> blocks=Basic Latin,Greek and Coptic;radare2: .data)  utf8 u_>\u07f0Y> blocks=Basic Latin,NKo": 1,
                "radare2: .data)  utf8 u_>\u07f0Y> blocks=Basic Latin,NKo;radare2: .data)  utf8 S>\"MN>": 1,
                "radare2: .data)  utf8 S>\"MN>;radare2: .data)  utf8 8>\u02aa2>>H-> blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 8>\u02aa2>>H-> blocks=Basic Latin,IPA Extensions;radare2: .data)  utf8 =\ubdb1=L blocks=Basic Latin,Hangul Syllables": 1,
                "radare2: .data)  utf8 =\ubdb1=L blocks=Basic Latin,Hangul Syllables;radare2: .data)  utf8 hy={uh=\u01b9W= blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 hy={uh=\u01b9W= blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 M\\r<X\u0535; blocks=Basic Latin,Armenian": 1,
                "radare2: .data)  utf8 M\\r<X\u0535; blocks=Basic Latin,Armenian;radare2: .data)  utf8 ~\uf820~\\r blocks=Basic Latin,Private Use Area": 1,
                "radare2: .data)  utf8 ~\uf820~\\r blocks=Basic Latin,Private Use Area;radare2: .data)  utf8 ~u2~": 1,
                "radare2: .data)  utf8 ~u2~;radare2: .data)  utf8 ~'\u07e5~ blocks=Basic Latin,NKo": 1,
                "radare2: .data)  utf8 ~'\u07e5~ blocks=Basic Latin,NKo;radare2: .data)  utf8 /k\u0317/ blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 /k\u0317/ blocks=Basic Latin,Combining Diacritical Marks;radare2: .data)  utf8 \u055f/`J blocks=Armenian,Basic Latin": 1,
                "radare2: .data)  utf8 \u055f/`J blocks=Armenian,Basic Latin;radare2: .data)  utf8 Y0\u02d1[0jr]0 blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .data)  utf8 Y0\u02d1[0jr]0 blocks=Basic Latin,Spacing Modifier Letters;radare2: .data) utf16le /:\\v;?": 1,
                "radare2: .data) utf16le /:\\v;?;radare2: .data) utf16le }\u00a1$\u00a7\u00ab blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data) utf16le }\u00a1$\u00a7\u00ab blocks=Basic Latin,Latin-1 Supplement;radare2: .data) utf16le $+\\a<>": 1,
                "radare2: .data) utf16le $+\\a<>;radare2: .data) utf16le  ~\u00a1\u0377\u037a blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic": 1,
                "radare2: .data) utf16le  ~\u00a1\u0377\u037a blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic;radare2: .data)  utf8 QSeA~\u00e4 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 QSeA~\u00e4 blocks=Basic Latin,Latin-1 Supplement;radare2: .data)  utf8 v\u0308%L blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 v\u0308%L blocks=Basic Latin,Combining Diacritical Marks;radare2: .data)  utf8 *\u0140D5& blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .data)  utf8 *\u0140D5& blocks=Basic Latin,Latin Extended-A;radare2: .data)  utf8 \u011dS.4 blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 \u011dS.4 blocks=Latin Extended-A,Basic Latin;radare2: .data)  utf8 \u056e='9-6d blocks=Armenian,Basic Latin": 1,
                "radare2: .data)  utf8 \u056e='9-6d blocks=Armenian,Basic Latin;radare2: .data)  utf8 \u0184}$J blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u0184}$J blocks=Latin Extended-B,Basic Latin;radare2: .data)  utf8 \u028c6\\v\u0518\u03c1 blocks=IPA Extensions,Basic Latin,Cyrillic Supplement,Greek and Coptic": 1,
                "radare2: .data)  utf8 \u028c6\\v\u0518\u03c1 blocks=IPA Extensions,Basic Latin,Cyrillic Supplement,Greek and Coptic;radare2: .data)  utf8 a\u05daz\\f blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 a\u05daz\\f blocks=Basic Latin,Hebrew;radare2: .data)  utf8 \\f%\u2f0bI<(A blocks=Basic Latin,Kangxi Radicals": 1,
                "radare2: .data)  utf8 \\f%\u2f0bI<(A blocks=Basic Latin,Kangxi Radicals;radare2: .data)  utf8 \u010aS.4 blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 \u010aS.4 blocks=Latin Extended-A,Basic Latin;radare2: .data)  utf8 gwB\u8c3d blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .data)  utf8 gwB\u8c3d blocks=Basic Latin,CJK Unified Ideographs;radare2: .data)  utf8 \u0184 $J blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u0184 $J blocks=Latin Extended-B,Basic Latin;radare2: .data)  utf8 ,}V\u06103\" blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 ,}V\u06103\" blocks=Basic Latin,Arabic;radare2: .data)  utf8 ~\u03fc!\\b blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 ~\u03fc!\\b blocks=Basic Latin,Greek and Coptic;radare2: .data)  utf8 5<Nt7\u0282 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 5<Nt7\u0282 blocks=Basic Latin,IPA Extensions;radare2: .data)  utf8 ,xQeF": 1,
                "radare2: .data)  utf8 ,xQeF;radare2: .data)  utf8 I)i\u024eD blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 I)i\u024eD blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 {7\u04e5\\b(0 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 {7\u04e5\\b(0 blocks=Basic Latin,Cyrillic;radare2: .data)  utf8 @\"\u0184  blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 @\"\u0184  blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 \u04e5\\b70 blocks=Cyrillic,Basic Latin": 1,
                "radare2: .data)  utf8 \u04e5\\b70 blocks=Cyrillic,Basic Latin;radare2: .data)  utf8 \u0221G\\n|| blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u0221G\\n|| blocks=Latin Extended-B,Basic Latin;radare2: .data)  utf8 \u056e6'9-\\nd blocks=Armenian,Basic Latin": 1,
                "radare2: .data)  utf8 \u056e6'9-\\nd blocks=Armenian,Basic Latin;radare2: .data)  utf8 \u0185}$J blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u0185}$J blocks=Latin Extended-B,Basic Latin;radare2: .data)  utf8 \u02986\\v\u0526\u03c1 blocks=IPA Extensions,Basic Latin,Cyrillic Supplement,Greek and Coptic": 1,
                "radare2: .data)  utf8 \u02986\\v\u0526\u03c1 blocks=IPA Extensions,Basic Latin,Cyrillic Supplement,Greek and Coptic;radare2: .data)  utf8 cc\u0184|| blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 cc\u0184|| blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 kk\u05b1oo blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 kk\u05b1oo blocks=Basic Latin,Hebrew;radare2: .data)  utf8 \u0151P00` blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 \u0151P00` blocks=Latin Extended-A,Basic Latin;radare2: .data)  utf8 \u0303\\44h blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .data)  utf8 \u0303\\44h blocks=Combining Diacritical Marks,Basic Latin;radare2: .data)  utf8 \u062bS11b? blocks=Arabic,Basic Latin": 1,
                "radare2: .data)  utf8 \u062bS11b? blocks=Arabic,Basic Latin;radare2: .data)  utf8 \u01d5e##F^ blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u01d5e##F^ blocks=Latin Extended-B,Basic Latin;radare2: .data)  utf8 i''N\u0372 blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 i''N\u0372 blocks=Basic Latin,Greek and Coptic;radare2: .data)  utf8 \u06afc!!B0 blocks=Arabic,Basic Latin": 1,
                "radare2: .data)  utf8 \u06afc!!B0 blocks=Arabic,Basic Latin;radare2: .data)  utf8 \u0723f\"\"D~**T blocks=Syriac,Basic Latin": 1,
                "radare2: .data)  utf8 \u0723f\"\"D~**T blocks=Syriac,Basic Latin;radare2: .data)  utf8 \u020bY77n blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u020bY77n blocks=Latin Extended-B,Basic Latin;radare2: .data)  utf8 \u03efee\u028ezz blocks=Greek and Coptic,Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 \u03efee\u028ezz blocks=Greek and Coptic,Basic Latin,IPA Extensions;radare2: .data)  utf8 B>>|\u0135 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .data)  utf8 B>>|\u0135 blocks=Basic Latin,Latin Extended-A;radare2: .data)  utf8 ,cc\u01a5|| blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 ,cc\u01a5|| blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 \\rkk\u05bdoo\u07b1 blocks=Basic Latin,Hebrew,Thaana": 1,
                "radare2: .data)  utf8 \\rkk\u05bdoo\u07b1 blocks=Basic Latin,Hebrew,Thaana;radare2: .data)  utf8 \u0151T00`P blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 \u0151T00`P blocks=Latin Extended-A,Basic Latin;radare2: .data)  utf8 gg\u03a9++V} blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 gg\u03a9++V} blocks=Basic Latin,Greek and Coptic;radare2: .data)  utf8 \u0249@}} blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u0249@}} blocks=Latin Extended-B,Basic Latin;radare2: .data)  utf8 \u0303O44h\\ blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .data)  utf8 \u0303O44h\\ blocks=Combining Diacritical Marks,Basic Latin;radare2: .data)  utf8 \u062bs11bS blocks=Arabic,Basic Latin": 1,
                "radare2: .data)  utf8 \u062bs11bS blocks=Arabic,Basic Latin;radare2: .data)  utf8 \u01d5R##Fe blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u01d5R##Fe blocks=Latin Extended-B,Basic Latin;radare2: .data)  utf8 4.\\e\\e6-nn\u0732ZZ blocks=Basic Latin,Syriac": 1,
                "radare2: .data)  utf8 4.\\e\\e6-nn\u0732ZZ blocks=Basic Latin,Syriac;radare2: .data)  utf8 \u06afu!!Bc blocks=Arabic,Basic Latin": 1,
                "radare2: .data)  utf8 \u06afu!!Bc blocks=Arabic,Basic Latin;radare2: .data)  utf8 \u0341L\\f\\f blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .data)  utf8 \u0341L\\f\\f blocks=Combining Diacritical Marks,Basic Latin;radare2: .data)  utf8 ==zGdd\u022c]] blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 ==zGdd\u022c]] blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 \u07a7y^^ blocks=Thaana,Basic Latin": 1,
                "radare2: .data)  utf8 \u07a7y^^ blocks=Thaana,Basic Latin;radare2: .data)  utf8 \u020bC77nYmm\u06b7 blocks=Latin Extended-B,Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 \u020bC77nYmm\u06b7 blocks=Latin Extended-B,Basic Latin,Arabic;radare2: .data)  utf8 \u0571dNN blocks=Armenian,Basic Latin": 1,
                "radare2: .data)  utf8 \u0571dNN blocks=Armenian,Basic Latin;radare2: .data)  utf8 ll\u0634VV blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 ll\u0634VV blocks=Basic Latin,Arabic;radare2: .data)  utf8 %ee\u02afzz\udbfa\udfaeG blocks=Basic Latin,IPA Extensions,Supplementary Private Use Area-B": 1,
                "radare2: .data)  utf8 %ee\u02afzz\udbfa\udfaeG blocks=Basic Latin,IPA Extensions,Supplementary Private Use Area-B;radare2: .data)  utf8 \u0761|tt blocks=Arabic Supplement,Basic Latin": 1,
                "radare2: .data)  utf8 \u0761|tt blocks=Arabic Supplement,Basic Latin;radare2: .data)  utf8 ff\u032aHH blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 ff\u032aHH blocks=Basic Latin,Combining Diacritical Marks;radare2: .data)  utf8 aa\u00a355j_WW blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 aa\u00a355j_WW blocks=Basic Latin,Latin-1 Supplement;radare2: .data)  utf8 \"3ii\u04bb blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 \"3ii\u04bb blocks=Basic Latin,Cyrillic;radare2: .data)  utf8 \u0387IUU blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .data)  utf8 \u0387IUU blocks=Greek and Coptic,Basic Latin;radare2: .data)  utf8 hh\u0438AA blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 hh\u0438AA blocks=Basic Latin,Cyrillic;radare2: .data)  utf8 ,:c\u01a5c| blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 ,:c\u01a5c| blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 k\u05bdko\u07b1o\u0151T blocks=Basic Latin,Hebrew,Thaana,Latin Extended-A": 1,
                "radare2: .data)  utf8 k\u05bdko\u07b1o\u0151T blocks=Basic Latin,Hebrew,Thaana,Latin Extended-A;radare2: .data)  utf8 g\u03a9g+V}+ blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 g\u03a9g+V}+ blocks=Basic Latin,Greek and Coptic;radare2: .data)  utf8 v\u028fE\u0282 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 v\u028fE\u0282 blocks=Basic Latin,IPA Extensions;radare2: .data)  utf8 \u0533g\u0522_ blocks=Armenian,Basic Latin,Cyrillic Supplement": 1,
                "radare2: .data)  utf8 \u0533g\u0522_ blocks=Armenian,Basic Latin,Cyrillic Supplement;radare2: .data)  utf8 r\\e[7u\u00b7 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 r\\e[7u\u00b7 blocks=Basic Latin,Latin-1 Supplement;radare2: .data)  utf8 #Fe#\u00dd^ blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 #Fe#\u00dd^ blocks=Basic Latin,Latin-1 Supplement;radare2: .data)  utf8 \\e6-\\en\u0732nZ blocks=Basic Latin,Syriac": 1,
                "radare2: .data)  utf8 \\e6-\\en\u0732nZ blocks=Basic Latin,Syriac;radare2: .data)  utf8 R;vM;\u05b7a\u05b3}\u03b3)R{) blocks=Basic Latin,Hebrew,Greek and Coptic": 1,
                "radare2: .data)  utf8 R;vM;\u05b7a\u05b3}\u03b3)R{) blocks=Basic Latin,Hebrew,Greek and Coptic;radare2: .data)  utf8 [j\u053ej\u02cdF\u02feg\u067e9rK9J blocks=Basic Latin,Armenian,Spacing Modifier Letters,Arabic": 1,
                "radare2: .data)  utf8 [j\u053ej\u02cdF\u02feg\u067e9rK9J blocks=Basic Latin,Armenian,Spacing Modifier Letters,Arabic;radare2: .data)  utf8 wv\u06afu blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 wv\u06afu blocks=Basic Latin,Arabic;radare2: .data)  utf8 \u0113W\u0127U blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 \u0113W\u0127U blocks=Latin Extended-A,Basic Latin;radare2: .data)  utf8 ~=zG=d\u022cd] blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 ~=zG=d\u022cd] blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 s` `": 1,
                "radare2: .data)  utf8 s` `;radare2: .data)  utf8 \u04fdn\u04ecC blocks=Cyrillic,Basic Latin": 1,
                "radare2: .data)  utf8 \u04fdn\u04ecC blocks=Cyrillic,Basic Latin;radare2: .data)  utf8 7nY7m\u06b7m blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 7nY7m\u06b7m blocks=Basic Latin,Arabic;radare2: .data)  utf8 l\u0634lV blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 l\u0634lV blocks=Basic Latin,Arabic;radare2: .data)  utf8 e\u02afez blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 e\u02afez blocks=Basic Latin,IPA Extensions;radare2: .data)  utf8 s\u01f4\u0197Q blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 s\u01f4\u0197Q blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 q\u0135f\u032afH blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 q\u0135f\u032afH blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks;radare2: .data)  utf8 a\u00a3a5j_5W blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 a\u00a3a5j_5W blocks=Basic Latin,Latin-1 Supplement;radare2: .data)  utf8 i\u04bbi\u0669p\u064e\\a blocks=Basic Latin,Cyrillic,Arabic": 1,
                "radare2: .data)  utf8 i\u04bbi\u0669p\u064e\\a blocks=Basic Latin,Cyrillic,Arabic;radare2: .data)  utf8 U(Px(\u07e5z\u07cc blocks=Basic Latin,NKo": 1,
                "radare2: .data)  utf8 U(Px(\u07e5z\u07cc blocks=Basic Latin,NKo;radare2: .data)  utf8 Bh\u0438hA blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 Bh\u0438hA blocks=Basic Latin,Cyrillic;radare2: .data)  utf8 \u05bdkk\u07b1oo blocks=Hebrew,Basic Latin,Thaana": 1,
                "radare2: .data)  utf8 \u05bdkk\u07b1oo blocks=Hebrew,Basic Latin,Thaana;radare2: .data)  utf8 \u03a9ggV}++ blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .data)  utf8 \u03a9ggV}++ blocks=Greek and Coptic,Basic Latin;radare2: .data)  utf8 6-\\e\\e\u0732nn blocks=Basic Latin,Syriac": 1,
                "radare2: .data)  utf8 6-\\e\\e\u0732nn blocks=Basic Latin,Syriac;radare2: .data)  utf8 [[\u053ejj blocks=Basic Latin,Armenian": 1,
                "radare2: .data)  utf8 [[\u053ejj blocks=Basic Latin,Armenian;radare2: .data)  utf8 ~~zG==\u022cdd blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 ~~zG==\u022cdd blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 ss ``": 1,
                "radare2: .data)  utf8 ss ``;radare2: .data)  utf8 C\ufb2c\u0126bb9 blocks=Basic Latin,Alphabetic Presentation Forms,Latin Extended-A": 1,
                "radare2: .data)  utf8 C\ufb2c\u0126bb9 blocks=Basic Latin,Alphabetic Presentation Forms,Latin Extended-A;radare2: .data)  utf8 nY77\u06b7mm blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 nY77\u06b7mm blocks=Basic Latin,Arabic;radare2: .data)  utf8 NNI\u0a69\u0634ll blocks=Basic Latin,Gurmukhi,Arabic": 1,
                "radare2: .data)  utf8 NNI\u0a69\u0634ll blocks=Basic Latin,Gurmukhi,Arabic;radare2: .data)  utf8 zzG\u9bae blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .data)  utf8 zzG\u9bae blocks=Basic Latin,CJK Unified Ideographs;radare2: .data)  utf8 \\b\\bo\u057a blocks=Basic Latin,Armenian": 1,
                "radare2: .data)  utf8 \\b\\bo\u057a blocks=Basic Latin,Armenian;radare2: .data)  utf8 KKa\u073d blocks=Basic Latin,Syriac": 1,
                "radare2: .data)  utf8 KKa\u073d blocks=Basic Latin,Syriac;radare2: .data)  utf8 pp|B>>q\u0135 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .data)  utf8 pp|B>>q\u0135 blocks=Basic Latin,Latin Extended-A;radare2: .data)  utf8 \u00a3aaj_55 blocks=Latin-1 Supplement,Basic Latin": 1,
                "radare2: .data)  utf8 \u00a3aaj_55 blocks=Latin-1 Supplement,Basic Latin;radare2: .data)  utf8 WWi\u0439 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 WWi\u0439 blocks=Basic Latin,Cyrillic;radare2: .data)  utf8 \\r\\re\u06bf blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 \\r\\re\u06bf blocks=Basic Latin,Arabic;radare2: .data)  utf8 BB\u0438hh blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 BB\u0438hh blocks=Basic Latin,Cyrillic;radare2: .data)  utf8 TTm\u05bb blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 TTm\u05bb blocks=Basic Latin,Hebrew;radare2: .data)  utf8 (_?x\\bY?\u0575S? blocks=Basic Latin,Armenian": 1,
                "radare2: .data)  utf8 (_?x\\bY?\u0575S? blocks=Basic Latin,Armenian;radare2: .data)  utf8 A\\b?\u012e blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .data)  utf8 A\\b?\u012e blocks=Basic Latin,Latin Extended-A;radare2: .data)  utf8 >\\e\u023f> blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 >\\e\u023f> blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 z>\u0425w>@ blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 z>\u0425w>@ blocks=Basic Latin,Cyrillic;radare2: .data)  utf8 \\r>\u03e3\\v> blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 \\r>\u03e3\\v> blocks=Basic Latin,Greek and Coptic;radare2: .data)  utf8 <O\u0791<+ blocks=Basic Latin,Thaana": 1,
                "radare2: .data)  utf8 <O\u0791<+ blocks=Basic Latin,Thaana;radare2: .data)  utf8 t<\u0275e< blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 t<\u0275e< blocks=Basic Latin,IPA Extensions;radare2: .data)  utf8 t+<\u0185 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 t+<\u0185 blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 T/\u00aeW/ blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data)  utf8 T/\u00aeW/ blocks=Basic Latin,Latin-1 Supplement;radare2: .data)  utf8 /M\\f/7": 1,
                "radare2: .data)  utf8 /M\\f/7;radare2: .data)  utf8 /a\u0317/T0 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 /a\u0317/T0 blocks=Basic Latin,Combining Diacritical Marks;radare2: .data)  utf8 /\ud51a/5 blocks=Basic Latin,Hangul Syllables": 1,
                "radare2: .data)  utf8 /\ud51a/5 blocks=Basic Latin,Hangul Syllables;radare2: .data)  utf8 \u019e/p. blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u019e/p. blocks=Latin Extended-B,Basic Latin;radare2: .data)  utf8 \u072f/'P blocks=Syriac,Basic Latin": 1,
                "radare2: .data)  utf8 \u072f/'P blocks=Syriac,Basic Latin;radare2: .data)  utf8 \u0132/): blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 \u0132/): blocks=Latin Extended-A,Basic Latin;radare2: .data)  utf8 F0\u05e2H0 blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 F0\u05e2H0 blocks=Basic Latin,Hebrew;radare2: .data)  utf8 V0\u03b4X0 blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 V0\u03b4X0 blocks=Basic Latin,Greek and Coptic;radare2: .data)  utf8 W\u03b6]y blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 W\u03b6]y blocks=Basic Latin,Greek and Coptic;radare2: .data)  utf8 H8o\ua590 blocks=Basic Latin,Vai": 1,
                "radare2: .data)  utf8 H8o\ua590 blocks=Basic Latin,Vai;radare2: .data)  utf8 \u0308Po\\t\u033c blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .data)  utf8 \u0308Po\\t\u033c blocks=Combining Diacritical Marks,Basic Latin;radare2: .data)  utf8 \u020c8e\u07b0 blocks=Latin Extended-B,Basic Latin,Thaana": 1,
                "radare2: .data)  utf8 \u020c8e\u07b0 blocks=Latin Extended-B,Basic Latin,Thaana;radare2: .data)  utf8 \u03e7z^KD blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .data)  utf8 \u03e7z^KD blocks=Greek and Coptic,Basic Latin;radare2: .data)  utf8 \u024a;n! blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u024a;n! blocks=Latin Extended-B,Basic Latin;radare2: .data)  utf8 Ls\u0534x blocks=Basic Latin,Armenian": 1,
                "radare2: .data)  utf8 Ls\u0534x blocks=Basic Latin,Armenian;radare2: .data)  utf8 a]4\ufc3d+ blocks=Basic Latin,Arabic Presentation Forms-A": 1,
                "radare2: .data)  utf8 a]4\ufc3d+ blocks=Basic Latin,Arabic Presentation Forms-A;radare2: .data)  utf8 d[\u05de\u05d2 blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 d[\u05de\u05d2 blocks=Basic Latin,Hebrew;radare2: .data)  utf8  Erj": 1,
                "radare2: .data)  utf8  Erj;radare2: .data)  utf8 b\\^9\u9e29NtH\u1b84\\ blocks=Basic Latin,CJK Unified Ideographs,Sundanese": 1,
                "radare2: .data)  utf8 b\\^9\u9e29NtH\u1b84\\ blocks=Basic Latin,CJK Unified Ideographs,Sundanese;radare2: .data)  utf8 \u06b79BA blocks=Arabic,Basic Latin": 1,
                "radare2: .data)  utf8 \u06b79BA blocks=Arabic,Basic Latin;radare2: .data)  utf8 \u01f6@_' blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u01f6@_' blocks=Latin Extended-B,Basic Latin;radare2: .data)  utf8 \u0204\u012f7& blocks=Latin Extended-B,Latin Extended-A,Basic Latin": 1,
                "radare2: .data)  utf8 \u0204\u012f7& blocks=Latin Extended-B,Latin Extended-A,Basic Latin;radare2: .data)  utf8 p@:\u0795 blocks=Basic Latin,Thaana": 1,
                "radare2: .data)  utf8 p@:\u0795 blocks=Basic Latin,Thaana;radare2: .data)  utf8 \u0480L+\" blocks=Cyrillic,Basic Latin": 1,
                "radare2: .data)  utf8 \u0480L+\" blocks=Cyrillic,Basic Latin;radare2: .data)  utf8 #wn\u0277B3 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .data)  utf8 #wn\u0277B3 blocks=Basic Latin,IPA Extensions;radare2: .data)  utf8 Z\u063d}\" blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 Z\u063d}\" blocks=Basic Latin,Arabic;radare2: .data)  utf8 \\a'\\bz\u0328 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 \\a'\\bz\u0328 blocks=Basic Latin,Combining Diacritical Marks;radare2: .data)  utf8 |<\u066b^b blocks=Basic Latin,Arabic": 1,
                "radare2: .data)  utf8 |<\u066b^b blocks=Basic Latin,Arabic;radare2: .data)  utf8 v-:D": 1,
                "radare2: .data)  utf8 v-:D;radare2: .data)  utf8 \\aOr$t": 1,
                "radare2: .data)  utf8 \\aOr$t;radare2: .data)  utf8 \uf73c~=s\ua90f blocks=Private Use Area,Basic Latin,Kayah Li": 1,
                "radare2: .data)  utf8 \uf73c~=s\ua90f blocks=Private Use Area,Basic Latin,Kayah Li;radare2: .data)  utf8 \"yu\u0445 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 \"yu\u0445 blocks=Basic Latin,Cyrillic;radare2: .data)  utf8 )\u013c?'k blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .data)  utf8 )\u013c?'k blocks=Basic Latin,Latin Extended-A;radare2: .data)  utf8 =O2O)\u04c4 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 =O2O)\u04c4 blocks=Basic Latin,Cyrillic;radare2: .data)  utf8 \u023e`*{ blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .data)  utf8 \u023e`*{ blocks=Latin Extended-B,Basic Latin;radare2: .data)  utf8 >N\u0727V blocks=Basic Latin,Syriac": 1,
                "radare2: .data)  utf8 >N\u0727V blocks=Basic Latin,Syriac;radare2: .data)  utf8 eGD\\vq": 1,
                "radare2: .data)  utf8 eGD\\vq;radare2: .data)  utf8 @LmS\u0417 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .data)  utf8 @LmS\u0417 blocks=Basic Latin,Cyrillic;radare2: .data)  utf8 rU\\a\u0591T blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 rU\\a\u0591T blocks=Basic Latin,Hebrew;radare2: .data)  utf8 \\n\u0451|\u0615 blocks=Basic Latin,Cyrillic,Arabic": 1,
                "radare2: .data)  utf8 \\n\u0451|\u0615 blocks=Basic Latin,Cyrillic,Arabic;radare2: .data)  utf8 \\f\u01b0YJ blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 \\f\u01b0YJ blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 )Xe\u07a8.8 blocks=Basic Latin,Thaana": 1,
                "radare2: .data)  utf8 )Xe\u07a8.8 blocks=Basic Latin,Thaana;radare2: .data)  utf8 z\u0316ZSt; blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .data)  utf8 z\u0316ZSt; blocks=Basic Latin,Combining Diacritical Marks;radare2: .rdata)  utf8 \u01f5*R\\a blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u01f5*R\\a blocks=Latin Extended-B,Basic Latin;radare2: .rdata)  utf8 \u063b\\a\\b\\b blocks=Arabic,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u063b\\a\\b\\b blocks=Arabic,Basic Latin;radare2: .rdata) utf16le p\\t\uc320\\a blocks=Basic Latin,Hangul Syllables": 1,
                "radare2: .rdata) utf16le p\\t\uc320\\a blocks=Basic Latin,Hangul Syllables;radare2: .rdata) utf16le p\\tp\\t": 1,
                "radare2: .rdata) utf16le p\\tp\\t;radare2: .rdata)  utf8 \u0291w1\\a blocks=IPA Extensions,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0291w1\\a blocks=IPA Extensions,Basic Latin;radare2: .rdata) utf32le pp\u1f90\ud855\uddc0\u00b0\u00b0 blocks=Basic Latin,Greek Extended,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rdata) utf32le pp\u1f90\ud855\uddc0\u00b0\u00b0 blocks=Basic Latin,Greek Extended,CJK Unified Ideographs Extension B,Latin-1 Supplement;radare2: .rdata)  utf8 \u0407\\a\\b\\b blocks=Cyrillic,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0407\\a\\b\\b blocks=Cyrillic,Basic Latin;radare2: .rdata)  utf8 \u04f3y\\a\\b\\b blocks=Cyrillic,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u04f3y\\a\\b\\b blocks=Cyrillic,Basic Latin;radare2: .rdata)  utf8 \u0140\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0140\\a\\b\\b blocks=Latin Extended-A,Basic Latin;radare2: .rdata)  utf8 9\u0477$\\a\\b\\b blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata)  utf8 9\u0477$\\a\\b\\b blocks=Basic Latin,Cyrillic;radare2: .rdata)  utf8 \u0374\\a\\b\\b blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0374\\a\\b\\b blocks=Greek and Coptic,Basic Latin;radare2: .rdata) utf16le \\nP\\n\u4ccc blocks=Basic Latin,CJK Unified Ideographs Extension A": 1,
                "radare2: .rdata) utf16le \\nP\\n\u4ccc blocks=Basic Latin,CJK Unified Ideographs Extension A;radare2: .rdata)  utf8 \u059a\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u059a\\a\\b\\b blocks=Hebrew,Basic Latin;radare2: .rdata)  utf8 3\u055d\\a\\b\\b blocks=Basic Latin,Armenian": 1,
                "radare2: .rdata)  utf8 3\u055d\\a\\b\\b blocks=Basic Latin,Armenian;radare2: .rdata)  utf8 \u0321\\a\\b\\b blocks=Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0321\\a\\b\\b blocks=Combining Diacritical Marks,Basic Latin;radare2: .rdata) utf16le @\\a\u5fe0f blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf16le @\\a\u5fe0f blocks=Basic Latin,CJK Unified Ideographs;radare2: .rdata)  utf8 \u0264=\\a\\b\\b blocks=IPA Extensions,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0264=\\a\\b\\b blocks=IPA Extensions,Basic Latin;radare2: .rdata)  utf8 \u211f\\a\\b\\b blocks=Letterlike Symbols,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u211f\\a\\b\\b blocks=Letterlike Symbols,Basic Latin;radare2: .rdata)  utf8 \u0286\\a\\b\\b blocks=IPA Extensions,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0286\\a\\b\\b blocks=IPA Extensions,Basic Latin;radare2: .rdata)  utf8 \u0611\\a\\b\\b blocks=Arabic,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0611\\a\\b\\b blocks=Arabic,Basic Latin;radare2: .rdata)  utf8 \u055cD\\a\\b\\b blocks=Armenian,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u055cD\\a\\b\\b blocks=Armenian,Basic Latin;radare2: .rdata)  utf8 H\u02f0\\a\\b\\b blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .rdata)  utf8 H\u02f0\\a\\b\\b blocks=Basic Latin,Spacing Modifier Letters;radare2: .rdata)  utf8 u\u017c1\\a\\b\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata)  utf8 u\u017c1\\a\\b\\b blocks=Basic Latin,Latin Extended-A;radare2: .rdata)  utf8 \u03c5-\\a\\b\\b blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u03c5-\\a\\b\\b blocks=Greek and Coptic,Basic Latin;radare2: .rdata)  utf8 T*\u0349\\a\\b\\b blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .rdata)  utf8 T*\u0349\\a\\b\\b blocks=Basic Latin,Combining Diacritical Marks;radare2: .rdata)  utf8 Z\u059d\\a\\b\\b blocks=Basic Latin,Hebrew": 1,
                "radare2: .rdata)  utf8 Z\u059d\\a\\b\\b blocks=Basic Latin,Hebrew;radare2: .rdata)  utf8 \u05acX\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u05acX\\a\\b\\b blocks=Hebrew,Basic Latin;radare2: .rdata)  utf8 =\u0792\\a\\b\\b blocks=Basic Latin,Thaana": 1,
                "radare2: .rdata)  utf8 =\u0792\\a\\b\\b blocks=Basic Latin,Thaana;radare2: .rdata)  utf8 6R\u0258\\a\\b\\b blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rdata)  utf8 6R\u0258\\a\\b\\b blocks=Basic Latin,IPA Extensions;radare2: .rdata)  utf8 @\u0106\\a\\b\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata)  utf8 @\u0106\\a\\b\\b blocks=Basic Latin,Latin Extended-A;radare2: .rdata)  utf8 \u03aa\u032f\\a\\b\\b blocks=Greek and Coptic,Combining Diacritical Marks,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u03aa\u032f\\a\\b\\b blocks=Greek and Coptic,Combining Diacritical Marks,Basic Latin;radare2: .rdata)  utf8 a\u012e\\a\\b\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata)  utf8 a\u012e\\a\\b\\b blocks=Basic Latin,Latin Extended-A;radare2: .rdata)  utf8 \u05d8\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u05d8\\a\\b\\b blocks=Hebrew,Basic Latin;radare2: .rdata)  utf8 \u0702\\a\\b\\b blocks=Syriac,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0702\\a\\b\\b blocks=Syriac,Basic Latin;radare2: .rdata)  utf8 F\u02487\\a\\b\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata)  utf8 F\u02487\\a\\b\\b blocks=Basic Latin,Latin Extended-B;radare2: .rdata)  utf8 t\u06aa!\\a\\b\\b blocks=Basic Latin,Arabic": 1,
                "radare2: .rdata)  utf8 t\u06aa!\\a\\b\\b blocks=Basic Latin,Arabic;radare2: .rdata)  utf8 \u00fe\\a\\b\\b blocks=Latin-1 Supplement,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u00fe\\a\\b\\b blocks=Latin-1 Supplement,Basic Latin;radare2: .rdata)  utf8 \u0516Xp\\a\\b\\b blocks=Cyrillic Supplement,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0516Xp\\a\\b\\b blocks=Cyrillic Supplement,Basic Latin;radare2: .rdata)  utf8 \u0212\\a\\b\\b blocks=Latin Extended-B,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0212\\a\\b\\b blocks=Latin Extended-B,Basic Latin;radare2: .rdata)  utf8 \u05da\\a\\b\\b blocks=Hebrew,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u05da\\a\\b\\b blocks=Hebrew,Basic Latin;radare2: .rdata)  utf8 \u0141\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u0141\\a\\b\\b blocks=Latin Extended-A,Basic Latin;radare2: .rdata)  utf8 \u011b`J\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u011b`J\\a\\b\\b blocks=Latin Extended-A,Basic Latin;radare2: .rdata)  utf8 \u01537\\a\\b\\b blocks=Latin Extended-A,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u01537\\a\\b\\b blocks=Latin Extended-A,Basic Latin;radare2: .rdata)  utf8 ]^`himst{|}~ + @ P [!=%=%s%v&&&;&=&^()) )()\\n*=+++=, ---=->///=/i00010s25: :]<<<===> >=>>CcCfCoCsDoIfLlLmLoLtLuMcMeMnNdNlNoOSPIPcPdPePfPiPoPsScSkSmSoYiZlZpZs[]\":\"\\n\\*\\D\\E\\S\\W\\d\\s\\w\\n ]:]\\n^=dogci)ifinmsnsoss us{}|=||}\\n\u00b5     G  M  P %v )\\n *( -  <  >  m=!==%25%2B%: &^='\"'): +00+03+04+05+06+07+08+09+10+11+12+13+14-01-02-03-04-05-06-08-09-11-12// ///125625: `<<====>>=>>>???ADTASTAprAugBSTCATCDTCETCSTDecDltEATEDTEETEOFESTFebForFriGMTHDTHSTHanIDTISTJSTJanJulJunKSTKeyLN2LaoMDTMSKMSTMarMayMonMroNDTNSTNULNaNNkoNovOctOp(PC=PDTPKTPSTSatSepStdSunThuTueUTCVaiWATWETWed\\\\?\\n})]:\\nabsadxaesavxcosdaydirendexpfmaforgc getgp infintip4letlogmapmaxminnannewnilnowobjos2pc=poppowptrsetsintantcptryu00var\u00b5s\u03bcs\ufffd !=  ->  <== as  at  fp= in  is  lr: of  on  pc= sp: sp=$1$2'\\'') = ) m=) {\\n+Inf+inf, n -Inf-inf20063125: p=>>>=ACDTACSTAEDTAESTAKDTAKSTARCHAWSTAhomArgsCESTCallChamDashDateEESTFileFuncG.%sGOGCGOOSJSONJulyJuneKillLN10LisuMathMiaoModiNULLNZDTNZSTNewaSASTStatThaiUserWESTWith[]%s\\u00\\n\\tm=] n=acosasinatanavx2basebindbmi1bmi2boolcallcap cas1cas2cas3cas4cas5cas6caseceilchandeaddropelseenumermsevalexecfailfilefunchouridleinfoint8joinjsonkeyskindnamenew nonenullopenpushquitreadsbrkscvgsealseeksomesortsqrtsse2sse3synctcp6testthistimetrimtruetypeudp6uintuservoidwarnwith ...\\n H_T= H_a= H_g= MB,  W_a= and  cnt= for  h_a= h_g= h_t= max= not  ptr  siz= tab= top= u_a= u_g=%25$1%d:%d%s:%d+0000+0330+0430+0530+0545+0630+0845+1030+1245+1345, ..., fp:-09301562578125<nil>AdlamAprilArrayBamumBatakBuhidCall ColonErrorFinalFrameGreekGroupKhmerLOG2ELatinLimbuLocalMarchNushuOghamOriyaOsageRunicSQRT2STermStdinTakriTamilWhile\\u202amd64applyargp=arrayatan2breakbytescatchchdirchmodchownclasscloseconstdebugerroreveryfalsefaultfloatfloorgcinggob: indexinputint16int32int64isNaNmatchmonthntohspanicparseroundrune shiftsleepslicesplitsse41sse42ssse3stacksuperthrowtraceuint8usageuser2valuewhilewrite (MB)\\n Value addr= base  code= ctxt: curg= goid  jobs= list= m->p= next= p->m= prev= span= varp=%s: %s(...)\\n*_+-./, not /%s/%s390625<-chanArabicAu blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic,Specials": 1,
                "radare2: .rdata)  utf8 ]^`himst{|}~ + @ P [!=%=%s%v&&&;&=&^()) )()\\n*=+++=, ---=->///=/i00010s25: :]<<<===> >=>>CcCfCoCsDoIfLlLmLoLtLuMcMeMnNdNlNoOSPIPcPdPePfPiPoPsScSkSmSoYiZlZpZs[]\":\"\\n\\*\\D\\E\\S\\W\\d\\s\\w\\n ]:]\\n^=dogci)ifinmsnsoss us{}|=||}\\n\u00b5     G  M  P %v )\\n *( -  <  >  m=!==%25%2B%: &^='\"'): +00+03+04+05+06+07+08+09+10+11+12+13+14-01-02-03-04-05-06-08-09-11-12// ///125625: `<<====>>=>>>???ADTASTAprAugBSTCATCDTCETCSTDecDltEATEDTEETEOFESTFebForFriGMTHDTHSTHanIDTISTJSTJanJulJunKSTKeyLN2LaoMDTMSKMSTMarMayMonMroNDTNSTNULNaNNkoNovOctOp(PC=PDTPKTPSTSatSepStdSunThuTueUTCVaiWATWETWed\\\\?\\n})]:\\nabsadxaesavxcosdaydirendexpfmaforgc getgp infintip4letlogmapmaxminnannewnilnowobjos2pc=poppowptrsetsintantcptryu00var\u00b5s\u03bcs\ufffd !=  ->  <== as  at  fp= in  is  lr: of  on  pc= sp: sp=$1$2'\\'') = ) m=) {\\n+Inf+inf, n -Inf-inf20063125: p=>>>=ACDTACSTAEDTAESTAKDTAKSTARCHAWSTAhomArgsCESTCallChamDashDateEESTFileFuncG.%sGOGCGOOSJSONJulyJuneKillLN10LisuMathMiaoModiNULLNZDTNZSTNewaSASTStatThaiUserWESTWith[]%s\\u00\\n\\tm=] n=acosasinatanavx2basebindbmi1bmi2boolcallcap cas1cas2cas3cas4cas5cas6caseceilchandeaddropelseenumermsevalexecfailfilefunchouridleinfoint8joinjsonkeyskindnamenew nonenullopenpushquitreadsbrkscvgsealseeksomesortsqrtsse2sse3synctcp6testthistimetrimtruetypeudp6uintuservoidwarnwith ...\\n H_T= H_a= H_g= MB,  W_a= and  cnt= for  h_a= h_g= h_t= max= not  ptr  siz= tab= top= u_a= u_g=%25$1%d:%d%s:%d+0000+0330+0430+0530+0545+0630+0845+1030+1245+1345, ..., fp:-09301562578125<nil>AdlamAprilArrayBamumBatakBuhidCall ColonErrorFinalFrameGreekGroupKhmerLOG2ELatinLimbuLocalMarchNushuOghamOriyaOsageRunicSQRT2STermStdinTakriTamilWhile\\u202amd64applyargp=arrayatan2breakbytescatchchdirchmodchownclasscloseconstdebugerroreveryfalsefaultfloatfloorgcinggob: indexinputint16int32int64isNaNmatchmonthntohspanicparseroundrune shiftsleepslicesplitsse41sse42ssse3stacksuperthrowtraceuint8usageuser2valuewhilewrite (MB)\\n Value addr= base  code= ctxt: curg= goid  jobs= list= m->p= next= p->m= prev= span= varp=%s: %s(...)\\n*_+-./, not /%s/%s390625<-chanArabicAu blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic,Specials;radare2: .rdata)  utf8 gustBrahmiCarianChakmaCommonCopticCreateDeployFormatFramesFridayGOARCHGOROOTGetACPGothicHangulHatranHebrewHyphenKaithiKhojkiLOG10ELepchaLycianLydianMondayNUMBERNumCPUNumberO_EXCLO_RDWRO_SYNCObjectRegExpRejangSCHED STRINGSignalStderrStdoutStringSundaySyriacTai_LeTangutTeluguThaanaUTC+12UTC+13UTC-02UTC-08UTC-09UTC-11[%d]%s[]byte\\ufffd^\\s*%/assertbound calleecallerchan<-charAtconcatcreatedeleteefenceempty escapeexportfilterfreezegetDayglobalhangupimportkilledlengthlistenminutenumberobjectpopcntpublicrandomreadatreducereturnrune1 searchsecondselectsocketsourcesplicestaticstringstructsubstrsweep switchtoJSONtoken(typeofuint16uint32uint64    at  (scan  (scan) MB in  Value> dying= locks= m->g0= nmsys= s=nil\\n using %s %s; %s (%s)%s = {}, goid=, sys: 19531252006-019765625AvestanBOOLEANBengaliBooleanBrailleCOMMENTChanDirConvertCopySidCurrentCypriotDeseretDevNullElbasanExecuteGODEBUGGoArrayGranthaHanunooILLEGALIO waitInstAltInstNopJanuaryKEYWORDKannadaLeadingMUI_DltMUI_StdMandaicMarchenModeDirMultaniMyanmarO_TRUNCOctoberOsmanyaProcessRadicalReaddirSQRT1_2SharadaShavianSiddhamSinhalaSoyomboSwapperTagalogTibetanTirhutaTuesdayUNKNOWNWSARecvWSASend\\tdefer \\ttypes \\tvalue=_ENGINEabortedalt -> any -> booleanclosurecompilecomplexconnectconsoledefaultextendsfinallyfloat32float64forEachfuntimegctracegetDategetTimegetYearindexOfinvalidisArraykey of messagenop -> number os/userpackagepanic: privatereplacereverserunningruntimesetDatesetTimesetYearsignal syscalltimeEndtoFixeduintptrunknownunshiftvalueOfwaitingwindowswriteat etypes  goal\u0394= is not  mcount= minutes nalloc= newval= nfreed= packed= pointer stack=[ status %!Month(%s:%d:%d(?%s:%s), idle: 15:04:0548828125AcceptExArmenianBalineseBopomofoBugineseCancelIoCherokeeCompilerCyrillicDecemberDuployanErrExistEthiopicExtenderFebruaryFullPathFunctionGeorgianGoStringGujaratiGurmukhiHiraganaHostnameInfinityInstFailInstRuneJavaneseKatakanaKayah_LiLinear_ALinear_BMahajaniMemStatsModePermModeTypeNovemberO_APPENDO_CREATEO_RDONLYO_WRONLYOl_ChikiParseIntPhags_PaProcAttrReadFileSEEK_CURSEEK_ blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rdata)  utf8 gustBrahmiCarianChakmaCommonCopticCreateDeployFormatFramesFridayGOARCHGOROOTGetACPGothicHangulHatranHebrewHyphenKaithiKhojkiLOG10ELepchaLycianLydianMondayNUMBERNumCPUNumberO_EXCLO_RDWRO_SYNCObjectRegExpRejangSCHED STRINGSignalStderrStdoutStringSundaySyriacTai_LeTangutTeluguThaanaUTC+12UTC+13UTC-02UTC-08UTC-09UTC-11[%d]%s[]byte\\ufffd^\\s*%/assertbound calleecallerchan<-charAtconcatcreatedeleteefenceempty escapeexportfilterfreezegetDayglobalhangupimportkilledlengthlistenminutenumberobjectpopcntpublicrandomreadatreducereturnrune1 searchsecondselectsocketsourcesplicestaticstringstructsubstrsweep switchtoJSONtoken(typeofuint16uint32uint64    at  (scan  (scan) MB in  Value> dying= locks= m->g0= nmsys= s=nil\\n using %s %s; %s (%s)%s = {}, goid=, sys: 19531252006-019765625AvestanBOOLEANBengaliBooleanBrailleCOMMENTChanDirConvertCopySidCurrentCypriotDeseretDevNullElbasanExecuteGODEBUGGoArrayGranthaHanunooILLEGALIO waitInstAltInstNopJanuaryKEYWORDKannadaLeadingMUI_DltMUI_StdMandaicMarchenModeDirMultaniMyanmarO_TRUNCOctoberOsmanyaProcessRadicalReaddirSQRT1_2SharadaShavianSiddhamSinhalaSoyomboSwapperTagalogTibetanTirhutaTuesdayUNKNOWNWSARecvWSASend\\tdefer \\ttypes \\tvalue=_ENGINEabortedalt -> any -> booleanclosurecompilecomplexconnectconsoledefaultextendsfinallyfloat32float64forEachfuntimegctracegetDategetTimegetYearindexOfinvalidisArraykey of messagenop -> number os/userpackagepanic: privatereplacereverserunningruntimesetDatesetTimesetYearsignal syscalltimeEndtoFixeduintptrunknownunshiftvalueOfwaitingwindowswriteat etypes  goal\u0394= is not  mcount= minutes nalloc= newval= nfreed= packed= pointer stack=[ status %!Month(%s:%d:%d(?%s:%s), idle: 15:04:0548828125AcceptExArmenianBalineseBopomofoBugineseCancelIoCherokeeCompilerCyrillicDecemberDuployanErrExistEthiopicExtenderFebruaryFullPathFunctionGeorgianGoStringGujaratiGurmukhiHiraganaHostnameInfinityInstFailInstRuneJavaneseKatakanaKayah_LiLinear_ALinear_BMahajaniMemStatsModePermModeTypeNovemberO_APPENDO_CREATEO_RDONLYO_WRONLYOl_ChikiParseIntPhags_PaProcAttrReadFileSEEK_CURSEEK_ blocks=Basic Latin,Greek and Coptic;radare2: .rdata)  utf8 ENDSEEK_SETSaturdayTagbanwaTai_ThamTai_VietThursdayTifinaghTrailingURIErrorUgariticWSAIoctl[:word:][]string[signal \\tstack=[acceptexargumentbad instcgocheckcontinuecs      debuggerfs      functiongetHoursgetMonthgo1.12.5gs      infinityinternalisFiniteisFrozenisSealedno anodeno erroropPseudoparseIntr10     r11     r12     r13     r14     r15     r8      r9      rax     rbp     rbx     rcx     rdi     rflags  rip     rsi     rsp     runnableruntime.scavengesetHourssetMonthshutdownstrconv.toStringtrimLefttruncateunescapeunknown(writablewsaioctl (forced) -> node= as type  blocked= defersc= in use)\\n lockedg= lockedm= m->curg= ms cpu,  not in [ of type  runtime= s.limit= s.state= threads= u_a/u_g= wbuf1.n= wbuf2.n=(unknown)+infinity, newval=, oldval=-Infinity-infinity244140625: inuse: : status=<unknown>ArgumentsBassa_VahBhaiksukiCallSliceCuneiformDiacriticErrClosedEvalErrorFindCloseG.%s = {}Hex_DigitInheritedInstMatchInstRune1InterfaceInterruptKhudawadiLinkErrorLocalFreeMAX_VALUEMIN_VALUEMalayalamMongolianMoveFileWNabataeanPalmyreneParseBoolParseUintPathErrorSamaritanSeptemberSundaneseTypeErrorWSASendToWednesdayWriteFile[:^word:][:alnum:][:alpha:][:ascii:][:blank:][:cntrl:][:digit:][:graph:][:lower:][:print:][:punct:][:space:][:upper:]__PRELOADargumentsatomicor8bad indirbus errorchan sendcomplex64copystackctxt != 0decodeURIempty urlencodeURIfuncargs(getUTCDayinterfaceinterruptlastIndexloader.gsmSpanDeadmSpanFreemap[%s]%smultilineno errorsomitemptypanicwaitpclmulqdqprotectedprototypepsapi.dllrecover: reflect: rwxrwxrwxstringifysubstringtrimRightundefinedunhandled} stack=[ MB goal,  actual\u0394= flushGen  gfreecnt= pages at  runqsize= runqueue= s.base()= spinning= stopwait= sweepgen  sweepgen= targetpc= throwing= until pc=%!Weekday((function(/dev/stdin12207031252006-01-022006T15:046103515625: parsing CancelIoExCreateFileCreatePipeDeprecatedDevanagariDnsQuery_WErrInvalidException GC forced\\nGOMAXPROCSGetIfEntryGetVersionGlagoliticIDENTIFIERKharoshthiLockFileExManichaeanModeAppendModeDeviceModeSetgidModeSetuidModeSocketM blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rdata)  utf8 ENDSEEK_SETSaturdayTagbanwaTai_ThamTai_VietThursdayTifinaghTrailingURIErrorUgariticWSAIoctl[:word:][]string[signal \\tstack=[acceptexargumentbad instcgocheckcontinuecs      debuggerfs      functiongetHoursgetMonthgo1.12.5gs      infinityinternalisFiniteisFrozenisSealedno anodeno erroropPseudoparseIntr10     r11     r12     r13     r14     r15     r8      r9      rax     rbp     rbx     rcx     rdi     rflags  rip     rsi     rsp     runnableruntime.scavengesetHourssetMonthshutdownstrconv.toStringtrimLefttruncateunescapeunknown(writablewsaioctl (forced) -> node= as type  blocked= defersc= in use)\\n lockedg= lockedm= m->curg= ms cpu,  not in [ of type  runtime= s.limit= s.state= threads= u_a/u_g= wbuf1.n= wbuf2.n=(unknown)+infinity, newval=, oldval=-Infinity-infinity244140625: inuse: : status=<unknown>ArgumentsBassa_VahBhaiksukiCallSliceCuneiformDiacriticErrClosedEvalErrorFindCloseG.%s = {}Hex_DigitInheritedInstMatchInstRune1InterfaceInterruptKhudawadiLinkErrorLocalFreeMAX_VALUEMIN_VALUEMalayalamMongolianMoveFileWNabataeanPalmyreneParseBoolParseUintPathErrorSamaritanSeptemberSundaneseTypeErrorWSASendToWednesdayWriteFile[:^word:][:alnum:][:alpha:][:ascii:][:blank:][:cntrl:][:digit:][:graph:][:lower:][:print:][:punct:][:space:][:upper:]__PRELOADargumentsatomicor8bad indirbus errorchan sendcomplex64copystackctxt != 0decodeURIempty urlencodeURIfuncargs(getUTCDayinterfaceinterruptlastIndexloader.gsmSpanDeadmSpanFreemap[%s]%smultilineno errorsomitemptypanicwaitpclmulqdqprotectedprototypepsapi.dllrecover: reflect: rwxrwxrwxstringifysubstringtrimRightundefinedunhandled} stack=[ MB goal,  actual\u0394= flushGen  gfreecnt= pages at  runqsize= runqueue= s.base()= spinning= stopwait= sweepgen  sweepgen= targetpc= throwing= until pc=%!Weekday((function(/dev/stdin12207031252006-01-022006T15:046103515625: parsing CancelIoExCreateFileCreatePipeDeprecatedDevanagariDnsQuery_WErrInvalidException GC forced\\nGOMAXPROCSGetIfEntryGetVersionGlagoliticIDENTIFIERKharoshthiLockFileExManichaeanModeAppendModeDeviceModeSetgidModeSetuidModeSocketM blocks=Basic Latin,Greek and Coptic;radare2: .rdata)  utf8 TypeAssertionErrorUnterminated groupVariation_Selector[^\\x00-\\x{10FFFF}][object Undefined]bad lfnode addressbad manualFreeListbufio: buffer fullconnection refuseddecodeURIComponentencodeURIComponentfile name too longforEachP: not donegarbage collectiongetUTCMillisecondsidentifier removedin numeric literalindex out of rangeinput/output errorinvalid character multihop attemptedno child processesno locks availableoperation canceledracy use of timersreflect.Value.Callreflect.Value.Elemreflect.Value.Sendreflect.Value.Typereflect.Value.Uintreflect: Zero(nil)runtime.semacreateruntime.semawakeupsegmentation faultsetUTCMillisecondsstreams pipe errorsystem page size (toLocaleDateStringtoLocaleTimeStringtracebackancestorsunknown stash typeuse of closed filevalue out of range called using nil * t.spanKey.npages= '%s' is not defined,  g->atomicstatus=, gp->-01-02 15:04:052006-01-02T15:04:057450580596923828125Altai Standard TimeBahia Standard TimeCanadian_AboriginalChina Standard TimeCreateSymbolicLinkWCryptReleaseContextEgypt Standard TimeFunction.toString()GetCurrentProcessIdGetSystemDirectoryWGetTokenInformationHaiti Standard TimeIDS_Binary_OperatorIndia Standard TimeKorea Standard TimeLibya Standard TimeMultiByteToWideCharNepal Standard TimePattern_White_SpaceRussia Time Zone 10Russia Time Zone 11Samoa Standard TimeSetTokenInformationSudan Standard TimeSyria Standard TimeTokyo Standard TimeTomsk Standard TimeTonga Standard TimeUnexpected token %vWaitForSingleObjectafter array elementbad file descriptorbad kind in runfinqbad notifyList sizebad runtime\u00b7mstartbad value for fielddevice not a streamdirectory not emptydisk quota exceededfile already closedfile already existsfile does not existgetOwnPropertyNamesillegal instructioninvalid URL escape m not found in allmmarking free objectmarkroot: bad indexmissing ']' in hostmspan.sweep: state=notesleep not on g0ntdll.dll not foundnwait > work.nprocspanic during mallocpanic during panic\\npanic holding lockspanicwrap: no ( in panicwrap: no  blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata)  utf8 TypeAssertionErrorUnterminated groupVariation_Selector[^\\x00-\\x{10FFFF}][object Undefined]bad lfnode addressbad manualFreeListbufio: buffer fullconnection refuseddecodeURIComponentencodeURIComponentfile name too longforEachP: not donegarbage collectiongetUTCMillisecondsidentifier removedin numeric literalindex out of rangeinput/output errorinvalid character multihop attemptedno child processesno locks availableoperation canceledracy use of timersreflect.Value.Callreflect.Value.Elemreflect.Value.Sendreflect.Value.Typereflect.Value.Uintreflect: Zero(nil)runtime.semacreateruntime.semawakeupsegmentation faultsetUTCMillisecondsstreams pipe errorsystem page size (toLocaleDateStringtoLocaleTimeStringtracebackancestorsunknown stash typeuse of closed filevalue out of range called using nil * t.spanKey.npages= '%s' is not defined,  g->atomicstatus=, gp->-01-02 15:04:052006-01-02T15:04:057450580596923828125Altai Standard TimeBahia Standard TimeCanadian_AboriginalChina Standard TimeCreateSymbolicLinkWCryptReleaseContextEgypt Standard TimeFunction.toString()GetCurrentProcessIdGetSystemDirectoryWGetTokenInformationHaiti Standard TimeIDS_Binary_OperatorIndia Standard TimeKorea Standard TimeLibya Standard TimeMultiByteToWideCharNepal Standard TimePattern_White_SpaceRussia Time Zone 10Russia Time Zone 11Samoa Standard TimeSetTokenInformationSudan Standard TimeSyria Standard TimeTokyo Standard TimeTomsk Standard TimeTonga Standard TimeUnexpected token %vWaitForSingleObjectafter array elementbad file descriptorbad kind in runfinqbad notifyList sizebad runtime\u00b7mstartbad value for fielddevice not a streamdirectory not emptydisk quota exceededfile already closedfile already existsfile does not existgetOwnPropertyNamesillegal instructioninvalid URL escape m not found in allmmarking free objectmarkroot: bad indexmissing ']' in hostmspan.sweep: state=notesleep not on g0ntdll.dll not foundnwait > work.nprocspanic during mallocpanic during panic\\npanic holding lockspanicwrap: no ( in panicwrap: no  blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata)  utf8 uch device or addressoperation now in progressreflect.Value.OverflowIntreflect.Value.SetMapIndexreflect: Bits of nil Typereleasep: invalid p stateremaining pointer buffersresource deadlock avoidedruntime:      t.spanKey= runtime: VirtualAlloc of runtime: misaligned func runtime: program exceeds runtime\u00b7lock: lock countslice bounds out of rangesocket type not supportedstartm: p has runnable gsstoplockedm: not runnableunexpected fault address unexpected key value type using unaddressable value using zero Value argument1455191522836685180664062572759576141834259033203125Bougainville Standard TimeCentral Asia Standard TimeCertFreeCertificateContextE. Australia Standard TimeEkaterinburg Standard TimeGODEBUG: can not disable \"GetFileInformationByHandleIllegal continue statementIllegal hexadecimal numberLine Islands Standard TimeNewfoundland Standard TimePostQueuedCompletionStatusQueryPerformanceFrequency blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata)  utf8 uch device or addressoperation now in progressreflect.Value.OverflowIntreflect.Value.SetMapIndexreflect: Bits of nil Typereleasep: invalid p stateremaining pointer buffersresource deadlock avoidedruntime:      t.spanKey= runtime: VirtualAlloc of runtime: misaligned func runtime: program exceeds runtime\u00b7lock: lock countslice bounds out of rangesocket type not supportedstartm: p has runnable gsstoplockedm: not runnableunexpected fault address unexpected key value type using unaddressable value using zero Value argument1455191522836685180664062572759576141834259033203125Bougainville Standard TimeCentral Asia Standard TimeCertFreeCertificateContextE. Australia Standard TimeEkaterinburg Standard TimeGODEBUG: can not disable \"GetFileInformationByHandleIllegal continue statementIllegal hexadecimal numberLine Islands Standard TimeNewfoundland Standard TimePostQueuedCompletionStatusQueryPerformanceFrequency blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata)  utf8 CertEnumCertificatesInStoreEaster Island Standard TimeError for preloading %s: %vG waiting list is corruptedIllegal newline after throwRangeError: %d (%v) to int8RangeError: %f (%v) to uint[\\+\\-]?(?:[Ii]nf$|infinity)\"2006-01-02T15:04:05Z07:00\"address not a stack addressafter object key:value pairbad data: undefined type %scan't convert from %q to %qcgoUse should not be calledchannel number out of rangecommunication error on sendcould not find QPC syscallsdecode can't handle type %sgcstopm: not waiting for gcgrowslice: cap out of rangeinternal lockOSThread errorinvalid argument to Shuffleinvalid profile bucket typeinvalid type name length %dkey was rejected by servicelarge span treap rotateLeftmakechan: size out of rangemakeslice: cap out of rangemakeslice: len out of rangemspan.sweep: bad span statenot a XENIX named type fileprogToPointerMask: overflowreflect.Value.OverflowFloatrestartg: unexpected statusrunlock of unlocked rwmutexruntime: checkdead: find g runtime: checkdead: nmidle=runtime: corrupted polldescruntime: netpollinit failedruntime: thread ID overflowruntime\u00b7unlock: lock countsigsend: inconsistent statestack size not a power of 2startm: negative nmspinningstopTheWorld: holding locksstring cannot have 0 insidetime: invalid location namework.nwait was > work.nproc args stack map entries for 18189894035458564758300781252006-01-02T15:04:05.000-07009094947017729282379150390625Aus Central W. Standard TimeCanada Central Standard TimeCen. Australia Standard TimeCentral Europe Standard TimeCertCreateCertificateContextEnglish name for time zone \"FixedStack is not power-of-2GetFileInformationByHandleExGetQueuedCompletionStatusEx blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata)  utf8 CertEnumCertificatesInStoreEaster Island Standard TimeError for preloading %s: %vG waiting list is corruptedIllegal newline after throwRangeError: %d (%v) to int8RangeError: %f (%v) to uint[\\+\\-]?(?:[Ii]nf$|infinity)\"2006-01-02T15:04:05Z07:00\"address not a stack addressafter object key:value pairbad data: undefined type %scan't convert from %q to %qcgoUse should not be calledchannel number out of rangecommunication error on sendcould not find QPC syscallsdecode can't handle type %sgcstopm: not waiting for gcgrowslice: cap out of rangeinternal lockOSThread errorinvalid argument to Shuffleinvalid profile bucket typeinvalid type name length %dkey was rejected by servicelarge span treap rotateLeftmakechan: size out of rangemakeslice: cap out of rangemakeslice: len out of rangemspan.sweep: bad span statenot a XENIX named type fileprogToPointerMask: overflowreflect.Value.OverflowFloatrestartg: unexpected statusrunlock of unlocked rwmutexruntime: checkdead: find g runtime: checkdead: nmidle=runtime: corrupted polldescruntime: netpollinit failedruntime: thread ID overflowruntime\u00b7unlock: lock countsigsend: inconsistent statestack size not a power of 2startm: negative nmspinningstopTheWorld: holding locksstring cannot have 0 insidetime: invalid location namework.nwait was > work.nproc args stack map entries for 18189894035458564758300781252006-01-02T15:04:05.000-07009094947017729282379150390625Aus Central W. Standard TimeCanada Central Standard TimeCen. Australia Standard TimeCentral Europe Standard TimeCertCreateCertificateContextEnglish name for time zone \"FixedStack is not power-of-2GetFileInformationByHandleExGetQueuedCompletionStatusEx blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata)  utf8 Prepended_Concatenation_MarkRangeError: %d (%v) to int16RangeError: %d (%v) to int32RangeError: %d (%v) to uint8Unterminated character class[originating from goroutine can't happen: encode type %scan't preserve unlinked spancomparing uncomparable type destination address requirederror = G.os.TerminateSelf()fatal: morestack on gsignal\\nfile descriptor in bad statefindrunnable: netpoll with pgcstopm: negative nmspinninggob: cannot encode nil valuegob: duplicate type receivedgob: unknown size of uintptrinvalid runtime symbol tableinvalid type passed to new()json: Unmarshal(non-pointer large span treap rotateRightmheap.freeSpanLocked - span missing stack in shrinkstackmspan.sweep: m is not lockedneed padding in bucket (key)newproc1: new g is not Gdeadnewproc1: newg missing stackos: process already finishedprotocol driver not attachedreflect.MakeSlice: len > capreflect: In of non-func typereflect: Key of non-map typeregion exceeds uintptr rangeruntime.semasleep unexpectedruntime: bad lfnode address runtime: casgstatus: oldval=runtime: no module data for runtime: stat overflow: val strconv: \u03b5 > (den<<shift)/2unexpected end of JSON input cannot be converted to type 45474735088646411895751953125Central America Standard TimeCentral Pacific Standard TimeChatham Islands Standard TimeLockOSThread nesting overflowMon, 02 Jan 2006 15:04:05 GMTMon, 02 Jan 2006 15:04:05 MSTN. Central Asia Standard TimeNorth Asia East Standard TimeRangeError: %d (%v) to uint16RangeError: %d (%v) to uint32RangeError: %f (%v) to uint64Time.UnmarshalBinary: no dataaddspecial on invalid pointerbufio.Scanner: token too longcrypto/aes: invalid key size executing on Go runtime stackfunction () { [native code] }gc done but gcphase != _GCoffgfput: bad status (not Gdead)gob: encoder: message too biggob: unknown size of int/uintinvalid character class rangeinvalid length of trace eventio: read/write on closed pipemachine is not on the networkno XENIX semaphores availablenotesleep - waitm out of syncnumerical result out of rangeoperation already in progr blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rdata)  utf8 Prepended_Concatenation_MarkRangeError: %d (%v) to int16RangeError: %d (%v) to int32RangeError: %d (%v) to uint8Unterminated character class[originating from goroutine can't happen: encode type %scan't preserve unlinked spancomparing uncomparable type destination address requirederror = G.os.TerminateSelf()fatal: morestack on gsignal\\nfile descriptor in bad statefindrunnable: netpoll with pgcstopm: negative nmspinninggob: cannot encode nil valuegob: duplicate type receivedgob: unknown size of uintptrinvalid runtime symbol tableinvalid type passed to new()json: Unmarshal(non-pointer large span treap rotateRightmheap.freeSpanLocked - span missing stack in shrinkstackmspan.sweep: m is not lockedneed padding in bucket (key)newproc1: new g is not Gdeadnewproc1: newg missing stackos: process already finishedprotocol driver not attachedreflect.MakeSlice: len > capreflect: In of non-func typereflect: Key of non-map typeregion exceeds uintptr rangeruntime.semasleep unexpectedruntime: bad lfnode address runtime: casgstatus: oldval=runtime: no module data for runtime: stat overflow: val strconv: \u03b5 > (den<<shift)/2unexpected end of JSON input cannot be converted to type 45474735088646411895751953125Central America Standard TimeCentral Pacific Standard TimeChatham Islands Standard TimeLockOSThread nesting overflowMon, 02 Jan 2006 15:04:05 GMTMon, 02 Jan 2006 15:04:05 MSTN. Central Asia Standard TimeNorth Asia East Standard TimeRangeError: %d (%v) to uint16RangeError: %d (%v) to uint32RangeError: %f (%v) to uint64Time.UnmarshalBinary: no dataaddspecial on invalid pointerbufio.Scanner: token too longcrypto/aes: invalid key size executing on Go runtime stackfunction () { [native code] }gc done but gcphase != _GCoffgfput: bad status (not Gdead)gob: encoder: message too biggob: unknown size of int/uintinvalid character class rangeinvalid length of trace eventio: read/write on closed pipemachine is not on the networkno XENIX semaphores availablenotesleep - waitm out of syncnumerical result out of rangeoperation already in progr blocks=Basic Latin,Greek and Coptic;radare2: .rdata) utf32le \\a\\a\u0109\u0140\\a\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf32le \\a\\a\u0109\u0140\\a\\b blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf32le \\a\\b\ud800\udf03\u8808\\a blocks=Basic Latin,Old Italic,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf32le \\a\\b\ud800\udf03\u8808\\a blocks=Basic Latin,Old Italic,CJK Unified Ideographs;radare2: .rdata) utf32le \\a\\a\ud800\udf03\ud850\udc00\\a blocks=Basic Latin,Old Italic,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le \\a\\a\ud800\udf03\ud850\udc00\\a blocks=Basic Latin,Old Italic,CJK Unified Ideographs Extension B;radare2: .rdata) utf32le \\b\\t\\a\u0405 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata) utf32le \\b\\t\\a\u0405 blocks=Basic Latin,Cyrillic;radare2: .rdata) utf16le YI\u0800\u2800@ blocks=Basic Latin,Samaritan,Braille Patterns": 1,
                "radare2: .rdata) utf16le YI\u0800\u2800@ blocks=Basic Latin,Samaritan,Braille Patterns;radare2: .rdata) utf32le AL\ud85d\udc3a$ blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le AL\ud85d\udc3a$ blocks=Basic Latin,CJK Unified Ideographs Extension B;radare2: .rdata) utf32le ;\u00da\ud855\udc8eY blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le ;\u00da\ud855\udc8eY blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B;radare2: .rdata) utf32le C\u00d0\ud864\ude99T blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le C\u00d0\ud864\ude99T blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B;radare2: .rdata) utf32le 2\u00c5\ud859\udda2^ blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le 2\u00c5\ud859\udda2^ blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B;radare2: .rdata) utf16le \\tIM\u014d\u0109 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\tIM\u014d\u0109 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le EG\u0147\u0105 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le EG\u0147\u0105 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf32le \\a\\t\ud840\udc00\ud800\udd02 blocks=Basic Latin,CJK Unified Ideographs Extension B,Aegean Numbers": 1,
                "radare2: .rdata) utf32le \\a\\t\ud840\udc00\ud800\udd02 blocks=Basic Latin,CJK Unified Ideographs Extension B,Aegean Numbers;radare2: .rdata) utf32le !\\a\\n\ud800\udc00 blocks=Basic Latin,Linear B Syllabary": 1,
                "radare2: .rdata) utf32le !\\a\\n\ud800\udc00 blocks=Basic Latin,Linear B Syllabary;radare2: .rdata)  utf8 \\f$dD\u0124 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata)  utf8 \\f$dD\u0124 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \\bH\u0848\\t@( \\b blocks=Basic Latin,Mandaic": 1,
                "radare2: .rdata) utf16le \\bH\u0848\\t@( \\b blocks=Basic Latin,Mandaic;radare2: .rdata) utf16le \\f,l\u012c\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\f,l\u012c\\b blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf32le \\b\\f\ud800\udc00\ud802\udd8d blocks=Basic Latin,Linear B Syllabary,Meroitic Hieroglyphs": 1,
                "radare2: .rdata) utf32le \\b\\f\ud800\udc00\ud802\udd8d blocks=Basic Latin,Linear B Syllabary,Meroitic Hieroglyphs;radare2: .rdata) utf32le \\b\\n\ud840\udc00\ud800\udc42 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary": 1,
                "radare2: .rdata) utf32le \\b\\n\ud840\udc00\ud800\udc42 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary;radare2: .rdata) utf32le \\t\\t\ud800\udc00\ud840\udc04 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le \\t\\t\ud800\udc00\ud840\udc04 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B;radare2: .rdata) utf32le \\t\\n\ud840\udc00\ud800\udc00 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary": 1,
                "radare2: .rdata) utf32le \\t\\n\ud840\udc00\ud800\udc00 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary;radare2: .rdata) utf16le  $\u0100\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le  $\u0100\\f blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf32le @\\t\\t\ud800\udc00 blocks=Basic Latin,Linear B Syllabary": 1,
                "radare2: .rdata) utf32le @\\t\\t\ud800\udc00 blocks=Basic Latin,Linear B Syllabary;radare2: .rdata) utf16le %18:": 1,
                "radare2: .rdata) utf16le %18:;radare2: .rdata) utf32le \\t\\t\ud840\udc00\ud800\udd00 blocks=Basic Latin,CJK Unified Ideographs Extension B,Aegean Numbers": 1,
                "radare2: .rdata) utf32le \\t\\t\ud840\udc00\ud800\udd00 blocks=Basic Latin,CJK Unified Ideographs Extension B,Aegean Numbers;radare2: .rdata) utf32le \\t\\n\ud840\udc00b\udbc0\udc00\ud800\udc11 blocks=Basic Latin,CJK Unified Ideographs Extension B,Supplementary Private Use Area-B,Linear B Syllabary": 1,
                "radare2: .rdata) utf32le \\t\\n\ud840\udc00b\udbc0\udc00\ud800\udc11 blocks=Basic Latin,CJK Unified Ideographs Extension B,Supplementary Private Use Area-B,Linear B Syllabary;radare2: .rdata) utf16le ,,,,": 1,
                "radare2: .rdata) utf16le ,,,,;radare2: .rdata)  utf8 \\v+ @": 1,
                "radare2: .rdata)  utf8 \\v+ @;radare2: .rdata) utf16le dddD": 1,
                "radare2: .rdata) utf16le dddD;radare2: .rdata) utf16le  @\u0100\\n blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le  @\u0100\\n blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le @\\b\u0200\u0220 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le @\\b\u0200\u0220 blocks=Basic Latin,Latin Extended-B;radare2: .rdata) utf16le #CA@": 1,
                "radare2: .rdata) utf16le #CA@;radare2: .rdata) utf16le \" D\u0302\u0502 blocks=Basic Latin,Combining Diacritical Marks,Cyrillic Supplement": 1,
                "radare2: .rdata) utf16le \" D\u0302\u0502 blocks=Basic Latin,Combining Diacritical Marks,Cyrillic Supplement;radare2: .rdata) utf16le A\u00c1\u2000\u2080 blocks=Basic Latin,Latin-1 Supplement,General Punctuation,Superscripts and Subscripts": 1,
                "radare2: .rdata) utf16le A\u00c1\u2000\u2080 blocks=Basic Latin,Latin-1 Supplement,General Punctuation,Superscripts and Subscripts;radare2: .rdata) utf16le \\n*( \u020a\u0206\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\n*( \u020a\u0206\\b blocks=Basic Latin,Latin Extended-B;radare2: .rdata) utf16le &$\u0124\u0324\u0320\u0300\u0200\\f\\f blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Latin Extended-B": 1,
                "radare2: .rdata) utf16le &$\u0124\u0324\u0320\u0300\u0200\\f\\f blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Latin Extended-B;radare2: .rdata) utf16le \\b\\b\u0168\u0168\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\b\\b\u0168\u0168\\b blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf32le \\f\\t\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le \\f\\t\ud800\udc00\ud840\udc03 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B;radare2: .rdata) utf16le \\fED\u0144\\a\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\fED\u0144\\a\\f blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le JJJB": 1,
                "radare2: .rdata) utf16le JJJB;radare2: .rdata) utf16le ' `\\f": 1,
                "radare2: .rdata) utf16le ' `\\f;radare2: .rdata) utf32le \\f\\n\ud800\udc03\ud800\udc01 blocks=Basic Latin,Linear B Syllabary": 1,
                "radare2: .rdata) utf32le \\f\\n\ud800\udc03\ud800\udc01 blocks=Basic Latin,Linear B Syllabary;radare2: .rdata) utf16le $d`!": 1,
                "radare2: .rdata) utf16le $d`!;radare2: .rdata) utf16le HL@\u0840A blocks=Basic Latin,Mandaic": 1,
                "radare2: .rdata) utf16le HL@\u0840A blocks=Basic Latin,Mandaic;radare2: .rdata) utf32le \\r\\f\ud800\udc00\ud840\udc22 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le \\r\\f\ud800\udc00\ud840\udc22 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B;radare2: .rdata) utf16le  @\u0140\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le  @\u0140\u0100 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le p`hjzx`": 1,
                "radare2: .rdata) utf16le p`hjzx`;radare2: .rdata) utf16le \\n!\u0201\\t blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\n!\u0201\\t blocks=Basic Latin,Latin Extended-B;radare2: .rdata) utf32le \\r\\f\ud840\udc00\ud800\udc02 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary": 1,
                "radare2: .rdata) utf32le \\r\\f\ud840\udc00\ud800\udc02 blocks=Basic Latin,CJK Unified Ideographs Extension B,Linear B Syllabary;radare2: .rdata) utf16le !A\u0420\u0400\u0401a blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata) utf16le !A\u0420\u0400\u0401a blocks=Basic Latin,Cyrillic;radare2: .rdata) utf16le \\nI\u0149\u0109 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\nI\u0149\u0109 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \"!\\b$": 1,
                "radare2: .rdata) utf16le \"!\\b$;radare2: .rdata) utf16le a` !\u0125@A blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le a` !\u0125@A blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le TPP@@": 1,
                "radare2: .rdata) utf16le TPP@@;radare2: .rdata) utf16le 222\"\"": 1,
                "radare2: .rdata) utf16le 222\"\";radare2: .rdata) utf16le h``@@": 1,
                "radare2: .rdata) utf16le h``@@;radare2: .rdata) utf16le OK\u00cb\u01cb blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le OK\u00cb\u01cb blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rdata) utf16le `b\u0840\u1840\u5840\u5860B blocks=Basic Latin,Mandaic,Mongolian,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf16le `b\u0840\u1840\u5840\u5860B blocks=Basic Latin,Mandaic,Mongolian,CJK Unified Ideographs;radare2: .rdata) utf16le DL@\\b": 1,
                "radare2: .rdata) utf16le DL@\\b;radare2: .rdata) utf16le $\u00a4\u02a4\u0284\u02c4 blocks=Basic Latin,Latin-1 Supplement,IPA Extensions,Spacing Modifier Letters": 1,
                "radare2: .rdata) utf16le $\u00a4\u02a4\u0284\u02c4 blocks=Basic Latin,Latin-1 Supplement,IPA Extensions,Spacing Modifier Letters;radare2: .rdata) utf16le \\f\\b\u0148\u0140 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\f\\b\u0148\u0140 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le $dD\u0144FB@\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le $dD\u0144FB@\u0100 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \\bHL@\u1040\u1001 blocks=Basic Latin,Myanmar": 1,
                "radare2: .rdata) utf16le \\bHL@\u1040\u1001 blocks=Basic Latin,Myanmar;radare2: .rdata) utf16le  02\"": 1,
                "radare2: .rdata) utf16le  02\";radare2: .rdata) utf16le \\b\\b\u0288\u0280 blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rdata) utf16le \\b\\b\u0288\u0280 blocks=Basic Latin,IPA Extensions;radare2: .rdata) utf16le \\fD\\b\\t\"": 1,
                "radare2: .rdata) utf16le \\fD\\b\\t\";radare2: .rdata) utf16le \\n*\u00aa\u04aa\u04ea\u0480\u0400\u0401 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rdata) utf16le \\n*\u00aa\u04aa\u04ea\u0480\u0400\u0401 blocks=Basic Latin,Latin-1 Supplement,Cyrillic;radare2: .rdata) utf16le \\t)\u00a9\u04a8 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rdata) utf16le \\t)\u00a9\u04a8 blocks=Basic Latin,Latin-1 Supplement,Cyrillic;radare2: .rdata) utf16le \\b(\u0128,l blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\b(\u0128,l blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le @$!\\fA": 1,
                "radare2: .rdata) utf16le @$!\\fA;radare2: .rdata) utf16le \"#cC\u0243\u0242B blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \"#cC\u0243\u0242B blocks=Basic Latin,Latin Extended-B;radare2: .rdata) utf16le \\v\\t\u0103\u0102\u0100@` blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\v\\t\u0103\u0102\u0100@` blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le 9y\u00f8\u00b8\u00bc\u01bc\u01be blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le 9y\u00f8\u00b8\u00bc\u01bc\u01be blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rdata) utf16le BJ\"bc": 1,
                "radare2: .rdata) utf16le BJ\"bc;radare2: .rdata) utf16le  ,LH": 1,
                "radare2: .rdata) utf16le  ,LH;radare2: .rdata) utf16le    \"\u0422\u0402\u0406 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata) utf16le    \"\u0422\u0402\u0406 blocks=Basic Latin,Cyrillic;radare2: .rdata) utf16le \\t)\u0100! blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\t)\u0100! blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le &.*\\n\u010a\u0103\u0101\u0141\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le &.*\\n\u010a\u0103\u0101\u0141\u0100 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \\f\\f\\f\\f": 1,
                "radare2: .rdata) utf16le \\f\\f\\f\\f;radare2: .rdata) utf16le @\u00c0\u01c0\\f\\f blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le @\u00c0\u01c0\\f\\f blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rdata) utf16le F.\u0126\u0106A blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le F.\u0126\u0106A blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \\b\\t": 1,
                "radare2: .rdata) utf16le \\b\\t;radare2: .rdata) utf16le !\u00a1\u02a1\u02a0\u0220\u0200\\b blocks=Basic Latin,Latin-1 Supplement,IPA Extensions,Latin Extended-B": 1,
                "radare2: .rdata) utf16le !\u00a1\u02a1\u02a0\u0220\u0200\\b blocks=Basic Latin,Latin-1 Supplement,IPA Extensions,Latin Extended-B;radare2: .rdata) utf16le \\f,\u0121\u0120\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\f,\u0121\u0120\u0100 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le xpp``@@": 1,
                "radare2: .rdata) utf16le xpp``@@;radare2: .rdata) utf16le L@\\b\\t\\f": 1,
                "radare2: .rdata) utf16le L@\\b\\t\\f;radare2: .rdata) utf16le jhh``@@": 1,
                "radare2: .rdata) utf16le jhh``@@;radare2: .rdata) utf16le  !#\u0123\u0120\u0100\u0100\u0110\u0118\u0108\\b blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le  !#\u0123\u0120\u0100\u0100\u0110\u0118\u0108\\b blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \\b @EA": 1,
                "radare2: .rdata) utf16le \\b @EA;radare2: .rdata) utf32le ;*\ud854\udd277 blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le ;*\ud854\udd277 blocks=Basic Latin,CJK Unified Ideographs Extension B;radare2: .rdata) utf32le P7\ud85f\udd16\u00a7 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rdata) utf32le P7\ud85f\udd16\u00a7 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement;radare2: .rdata) utf32le J\u00d9\ud84d\uddb5V blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le J\u00d9\ud84d\uddb5V blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B;radare2: .rdata) utf16le \" \u0540\u0541 blocks=Basic Latin,Armenian": 1,
                "radare2: .rdata) utf16le \" \u0540\u0541 blocks=Basic Latin,Armenian;radare2: .rdata) utf16le @HL\\\u015c^_OOokcC blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le @HL\\\u015c^_OOokcC blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \\v\\tCc\u0103\u0143B@ blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\v\\tCc\u0103\u0143B@ blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \\b\\b\\n\\v\\e": 1,
                "radare2: .rdata) utf16le \\b\\b\\n\\v\\e;radare2: .rdata) utf16le TDPRB\u0100I\u01c0 blocks=Basic Latin,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rdata) utf16le TDPRB\u0100I\u01c0 blocks=Basic Latin,Latin Extended-A,Latin Extended-B;radare2: .rdata) utf16le \\f\\f\\f\\f\\f\\f\\f\\f\\f\\f\\f\u0100\\f\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\f\\f\\f\\f\\f\\f\\f\\f\\f\\f\\f\u0100\\f\\f blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le &@ \\f\\b": 1,
                "radare2: .rdata) utf16le &@ \\f\\b;radare2: .rdata) utf16le \\v\\v\\v\\v\\v\\v": 1,
                "radare2: .rdata) utf16le \\v\\v\\v\\v\\v\\v;radare2: .rdata) utf16le \\b( $\\a": 1,
                "radare2: .rdata) utf16le \\b( $\\a;radare2: .rdata) utf16le \\fH\\n\u00a0\u0220`\\t blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\fH\\n\u00a0\u0220`\\t blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rdata) utf16le Nnfvtp`": 1,
                "radare2: .rdata) utf16le Nnfvtp`;radare2: .rdata) utf16le DL \\f\u014c blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le DL \\f\u014c blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le AE@D\u0204 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le AE@D\u0204 blocks=Basic Latin,Latin Extended-B;radare2: .rdata) utf16le \\b(h !$%\u00a5\u02a5 blocks=Basic Latin,Latin-1 Supplement,IPA Extensions": 1,
                "radare2: .rdata) utf16le \\b(h !$%\u00a5\u02a5 blocks=Basic Latin,Latin-1 Supplement,IPA Extensions;radare2: .rdata) utf16le \\t\\b `": 1,
                "radare2: .rdata) utf16le \\t\\b `;radare2: .rdata) utf16le @D@PBBBbAAAI\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le @D@PBBBbAAAI\u0100 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le %\u00c5e\u0164\u0120\u0100$\u0124\u0144 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rdata) utf16le %\u00c5e\u0164\u0120\u0100$\u0124\u0144 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A;radare2: .rdata) utf16le Ff&\u0126\u0106 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le Ff&\u0126\u0106 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \\b( \"": 1,
                "radare2: .rdata) utf16le \\b( \";radare2: .rdata) utf16le @\\a!\u0421\u0461\u0400\u0401A\u0420\\t blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata) utf16le @\\a!\u0421\u0461\u0400\u0401A\u0420\\t blocks=Basic Latin,Cyrillic;radare2: .rdata) utf16le @``@": 1,
                "radare2: .rdata) utf16le @``@;radare2: .rdata) utf16le \\b(h\\a\u0107\u0103\u0143 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\b(h\\a\u0107\u0103\u0143 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \\nJBF": 1,
                "radare2: .rdata) utf16le \\nJBF;radare2: .rdata) utf16le \\a \u0102\\f\u0106 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\a \u0102\\f\u0106 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \\n\\b \\a\\t\\f$": 1,
                "radare2: .rdata) utf16le \\n\\b \\a\\t\\f$;radare2: .rdata) utf16le Aa\\t)!\\b\\a\\n\u0100 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le Aa\\t)!\\b\\a\\n\u0100 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le hh ```` \u0180   blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le hh ```` \u0180   blocks=Basic Latin,Latin Extended-B;radare2: .rdata) utf16le \\b\\b( \u00a0 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\b\\b( \u00a0 blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata) utf16le @A\\n `\\a": 1,
                "radare2: .rdata) utf16le @A\\n `\\a;radare2: .rdata) utf16le DF\\b\\f(": 1,
                "radare2: .rdata) utf16le DF\\b\\f(;radare2: .rdata) utf16le @A*\\vKk+/\u102a\u1028\u1068(\\b !# blocks=Basic Latin,Myanmar": 1,
                "radare2: .rdata) utf16le @A*\\vKk+/\u102a\u1028\u1068(\\b !# blocks=Basic Latin,Myanmar;radare2: .rdata) utf16le \\b\\f\\f\\r": 1,
                "radare2: .rdata) utf16le \\b\\f\\f\\r;radare2: .rdata) utf16le @`\\b\\t": 1,
                "radare2: .rdata) utf16le @`\\b\\t;radare2: .rdata) utf16le \\a\\f\u0104\u0304\u0300\u0204\u010c\u0108\\rE blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\a\\f\u0104\u0304\u0300\u0204\u010c\u0108\\rE blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Latin Extended-B;radare2: .rdata) utf16le @LH\\b\u0140\u0100\u0101(A\\f blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le @LH\\b\u0140\u0100\u0101(A\\f blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le ID$\\t": 1,
                "radare2: .rdata) utf16le ID$\\t;radare2: .rdata) utf16le ~||xxpp``@@": 1,
                "radare2: .rdata) utf16le ~||xxpp``@@;radare2: .rdata) utf16le \\nJ@\u0440\u0c40 blocks=Basic Latin,Cyrillic,Telugu": 1,
                "radare2: .rdata) utf16le \\nJ@\u0440\u0c40 blocks=Basic Latin,Cyrillic,Telugu;radare2: .rdata) utf16le \\aD\"I\u00c9\u00c8 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\aD\"I\u00c9\u00c8 blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata) utf16le B\u00c2\u01c2A@\u00c0 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le B\u00c2\u01c2A@\u00c0 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rdata) utf16le \\v\\n L": 1,
                "radare2: .rdata) utf16le \\v\\n L;radare2: .rdata) utf16le @`\\n\\b( \\a": 1,
                "radare2: .rdata) utf16le @`\\n\\b( \\a;radare2: .rdata) utf16le \"*\u00aa\u01aa\u012a\u0122\u0120 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \"*\u00aa\u01aa\u012a\u0122\u0120 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Latin Extended-A;radare2: .rdata) utf16le \\n*\"\u0122\u00a2\u00e2 blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\n*\"\u0122\u00a2\u00e2 blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement;radare2: .rdata) utf16le \\b \"B\u0142@\u00c0*\u012a\u022a\u0228\u0220( blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\b \"B\u0142@\u00c0*\u012a\u022a\u0228\u0220( blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B;radare2: .rdata) utf16le \\b \u2020\u1008( blocks=Basic Latin,General Punctuation,Myanmar": 1,
                "radare2: .rdata) utf16le \\b \u2020\u1008( blocks=Basic Latin,General Punctuation,Myanmar;radare2: .rdata) utf16le !A@\u1040B blocks=Basic Latin,Myanmar": 1,
                "radare2: .rdata) utf16le !A@\u1040B blocks=Basic Latin,Myanmar;radare2: .rdata) utf16le \" $!\u1000\u0800\u2020\u2000\\t blocks=Basic Latin,Myanmar,Samaritan,General Punctuation": 1,
                "radare2: .rdata) utf16le \" $!\u1000\u0800\u2020\u2000\\t blocks=Basic Latin,Myanmar,Samaritan,General Punctuation;radare2: .rdata) utf16le #+\" `": 1,
                "radare2: .rdata) utf16le #+\" `;radare2: .rdata) utf16le \\nA@\\b": 1,
                "radare2: .rdata) utf16le \\nA@\\b;radare2: .rdata) utf16le ED\u0140\u0101\u0100@AI blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le ED\u0140\u0101\u0100@AI blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le B `\\f": 1,
                "radare2: .rdata) utf16le B `\\f;radare2: .rdata) utf16le  !A\u00c1@\u0440 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rdata) utf16le  !A\u00c1@\u0440 blocks=Basic Latin,Latin-1 Supplement,Cyrillic;radare2: .rdata) utf16le HI\u0149\u0349\\b\u1008 blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Myanmar": 1,
                "radare2: .rdata) utf16le HI\u0149\u0349\\b\u1008 blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks,Myanmar;radare2: .rdata) utf16le @@\u0200\u0200\\b\\b   blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le @@\u0200\u0200\\b\\b   blocks=Basic Latin,Latin Extended-B;radare2: .rdata) utf16le  \u00a0!\u0201\\b@ blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le  \u00a0!\u0201\\b@ blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rdata) utf16le  \"C\u00c3B@ blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le  \"C\u00c3B@ blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata) utf16le \\a#\\b\\f\u0206\u0246\u0204\\t\u0209\u020cA blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\a#\\b\\f\u0206\u0246\u0204\\t\u0209\u020cA blocks=Basic Latin,Latin Extended-B;radare2: .rdata) utf16le \\b\\b\u2000\u2008 blocks=Basic Latin,General Punctuation": 1,
                "radare2: .rdata) utf16le \\b\\b\u2000\u2008 blocks=Basic Latin,General Punctuation;radare2: .rdata) utf16le \\t\\t\u0208\u0400\u0500 blocks=Basic Latin,Latin Extended-B,Cyrillic,Cyrillic Supplement": 1,
                "radare2: .rdata) utf16le \\t\\t\u0208\u0400\u0500 blocks=Basic Latin,Latin Extended-B,Cyrillic,Cyrillic Supplement;radare2: .rdata) utf16le  `@$(": 1,
                "radare2: .rdata) utf16le  `@$(;radare2: .rdata) utf16le @BCA": 1,
                "radare2: .rdata) utf16le @BCA;radare2: .rdata) utf16le \\a\\nHh\\t)!a \\f": 1,
                "radare2: .rdata) utf16le \\a\\nHh\\t)!a \\f;radare2: .rdata) utf16le \\fL\u00cc\u00c4 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\fL\u00cc\u00c4 blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata) utf16le HDL\\t": 1,
                "radare2: .rdata) utf16le HDL\\t;radare2: .rdata) utf16le CGB\\n\u0208\\t\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le CGB\\n\u0208\\t\\b blocks=Basic Latin,Latin Extended-B;radare2: .rdata) utf16le \\r%$ @\u0200\u0201A blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\r%$ @\u0200\u0201A blocks=Basic Latin,Latin Extended-B;radare2: .rdata) utf16le *(\u0228\u0208\\b blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le *(\u0228\u0208\\b blocks=Basic Latin,Latin Extended-B;radare2: .rdata) utf32le C\u00c3\ud864\ude99\u028f blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B,IPA Extensions": 1,
                "radare2: .rdata) utf32le C\u00c3\ud864\ude99\u028f blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B,IPA Extensions;radare2: .rdata) utf16le \\n*\"\u00a2\u04a2\u01a2 blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \\n*\"\u00a2\u04a2\u01a2 blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Latin Extended-B;radare2: .rdata) utf16le &\u00a6\u01a4\u03a0@ blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Greek and Coptic": 1,
                "radare2: .rdata) utf16le &\u00a6\u01a4\u03a0@ blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Greek and Coptic;radare2: .rdata) utf16le \\b\\n*\"b": 1,
                "radare2: .rdata) utf16le \\b\\n*\"b;radare2: .rdata) utf16le  !\u00a1\u04a1\u14a1 blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Unified Canadian Aboriginal Syllabics": 1,
                "radare2: .rdata) utf16le  !\u00a1\u04a1\u14a1 blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Unified Canadian Aboriginal Syllabics;radare2: .rdata) utf16le \"\\nH@": 1,
                "radare2: .rdata) utf16le \"\\nH@;radare2: .rdata) utf16le \\n\\b( \"&#\u0123!\u0121\u0921\u0821\u0829@A\u0800\u0801\\t)\u0920\u0101\u0100 blocks=Basic Latin,Latin Extended-A,Devanagari,Samaritan": 1,
                "radare2: .rdata) utf16le \\n\\b( \"&#\u0123!\u0121\u0921\u0821\u0829@A\u0800\u0801\\t)\u0920\u0101\u0100 blocks=Basic Latin,Latin Extended-A,Devanagari,Samaritan;radare2: .rdata) utf16le NJ\\n\\b'&": 1,
                "radare2: .rdata) utf16le NJ\\n\\b'&;radare2: .rdata) utf16le \\r\\t)A": 1,
                "radare2: .rdata) utf16le \\r\\t)A;radare2: .rdata) utf16le B\\r \"": 1,
                "radare2: .rdata) utf16le B\\r \";radare2: .rdata) utf16le \\n\\b(H\\f": 1,
                "radare2: .rdata) utf16le \\n\\b(H\\f;radare2: .rdata) utf16le & \".*(\\f": 1,
                "radare2: .rdata) utf16le & \".*(\\f;radare2: .rdata) utf16le  \u00a0\u00e0\u00e1\u00c0\u01c0\u01c1 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le  \u00a0\u00e0\u00e1\u00c0\u01c0\u01c1 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rdata) utf16le \\bA\u0100\u0101\\t\\f( blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\bA\u0100\u0101\\t\\f( blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \\bACE\u00c1\u01c1\u02c1 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Spacing Modifier Letters": 1,
                "radare2: .rdata) utf16le \\bACE\u00c1\u01c1\u02c1 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Spacing Modifier Letters;radare2: .rdata) utf16le \\n@DLldB": 1,
                "radare2: .rdata) utf16le \\n@DLldB;radare2: .rdata) utf16le \\v\\t \"bBa'%\\f\\r": 1,
                "radare2: .rdata) utf16le \\v\\t \"bBa'%\\f\\r;radare2: .rdata) utf16le AQUEP": 1,
                "radare2: .rdata) utf16le AQUEP;radare2: .rdata) utf16le %@$\u0106\u0146\u0346\u0100\u0101\u0103\\n(!a  blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks": 1,
                "radare2: .rdata) utf16le %@$\u0106\u0146\u0346\u0100\u0101\u0103\\n(!a  blocks=Basic Latin,Latin Extended-A,Combining Diacritical Marks;radare2: .rdata) utf16le \\t\" \u0100\u0104\u0108 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\t\" \u0100\u0104\u0108 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le @A$(": 1,
                "radare2: .rdata) utf16le @A$(;radare2: .rdata) utf16le \\n\\bH@\u0240\u0640\u0440\u0400\u0401 blocks=Basic Latin,Latin Extended-B,Arabic,Cyrillic": 1,
                "radare2: .rdata) utf16le \\n\\bH@\u0240\u0640\u0440\u0400\u0401 blocks=Basic Latin,Latin Extended-B,Arabic,Cyrillic;radare2: .rdata) utf16le \\n\\v*\\b": 1,
                "radare2: .rdata) utf16le \\n\\v*\\b;radare2: .rdata) utf16le \\t\\a%,": 1,
                "radare2: .rdata) utf16le \\t\\a%,;radare2: .rdata) utf16le ! )\u00a1 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le ! )\u00a1 blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata) utf16le D$d\u0464 blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata) utf16le D$d\u0464 blocks=Basic Latin,Cyrillic;radare2: .rdata) utf16le \\f\\f\\b\\b": 1,
                "radare2: .rdata) utf16le \\f\\f\\b\\b;radare2: .rdata) utf16le \\f@#!a \\t()\\vI\\b\\n\\r": 1,
                "radare2: .rdata) utf16le \\f@#!a \\t()\\vI\\b\\n\\r;radare2: .rdata) utf16le  \\f\\t\\a,(\"": 1,
                "radare2: .rdata) utf16le  \\f\\t\\a,(\";radare2: .rdata) utf16le a`bh\\v#$\\n*\u0100\u0120 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le a`bh\\v#$\\n*\u0100\u0120 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le \\b( \\f": 1,
                "radare2: .rdata) utf16le \\b( \\f;radare2: .rdata) utf16le DBH\\b": 1,
                "radare2: .rdata) utf16le DBH\\b;radare2: .rdata) utf16le  \u00c0\u0440\u0400\u0401 blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rdata) utf16le  \u00c0\u0440\u0400\u0401 blocks=Basic Latin,Latin-1 Supplement,Cyrillic;radare2: .rdata) utf16le Ad`\u0140J\u044a\u0142(\u0100\u0101\u0102 blocks=Basic Latin,Latin Extended-A,Cyrillic": 1,
                "radare2: .rdata) utf16le Ad`\u0140J\u044a\u0142(\u0100\u0101\u0102 blocks=Basic Latin,Latin Extended-A,Cyrillic;radare2: .rdata) utf16le \\aBG\\b\\n": 1,
                "radare2: .rdata) utf16le \\aBG\\b\\n;radare2: .rdata) utf16le @\\fH\u010c\u014c\u0100\u0101\\rAC!$\" blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le @\\fH\u010c\u014c\u0100\u0101\\rAC!$\" blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le (\"!\\nBF": 1,
                "radare2: .rdata) utf16le (\"!\\nBF;radare2: .rdata) utf16le KCIi\\r%e": 1,
                "radare2: .rdata) utf16le KCIi\\r%e;radare2: .rdata) utf16le \\r\\tEe\u0105\u0125% blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\r\\tEe\u0105\u0125% blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le @\\f,L\\b": 1,
                "radare2: .rdata) utf16le @\\f,L\\b;radare2: .rdata) utf16le !@AC\u0104\u0845\u0843\u0841\\f\u00a1 blocks=Basic Latin,Latin Extended-A,Mandaic,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le !@AC\u0104\u0845\u0843\u0841\\f\u00a1 blocks=Basic Latin,Latin Extended-A,Mandaic,Latin-1 Supplement;radare2: .rdata) utf32le '\\n\ud800\udc00\ud840\udc05 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le '\\n\ud800\udc00\ud840\udc05 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B;radare2: .rdata) utf16le \\vK\\b\\t@\\nHIACG\u0247\u02c7\u0200\u0201E\u0244\u0245 blocks=Basic Latin,Latin Extended-B,Spacing Modifier Letters": 1,
                "radare2: .rdata) utf16le \\vK\\b\\t@\\nHIACG\u0247\u02c7\u0200\u0201E\u0244\u0245 blocks=Basic Latin,Latin Extended-B,Spacing Modifier Letters;radare2: .rdata) utf16le \"&! M\\f": 1,
                "radare2: .rdata) utf16le \"&! M\\f;radare2: .rdata) utf16le `\\b(": 1,
                "radare2: .rdata) utf16le `\\b(;radare2: .rdata) utf16le \\tI!\u00a1a\u0102\u010a\u0142\u0101\u0100 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\tI!\u00a1a\u0102\u010a\u0142\u0101\u0100 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A;radare2: .rdata) utf32le )\\f\ud800\udc00\ud840\udc04 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le )\\f\ud800\udc00\ud840\udc04 blocks=Basic Latin,Linear B Syllabary,CJK Unified Ideographs Extension B;radare2: .rdata) utf16le CJFD\u00c4\u04c4\u0cc4\u0ccc blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Kannada": 1,
                "radare2: .rdata) utf16le CJFD\u00c4\u04c4\u0cc4\u0ccc blocks=Basic Latin,Latin-1 Supplement,Cyrillic,Kannada;radare2: .rdata) utf16le \\b $\\aGA": 1,
                "radare2: .rdata) utf16le \\b $\\aGA;radare2: .rdata) utf16le  `\u0220!\u0469\u0460\u0462\u04e2 blocks=Basic Latin,Latin Extended-B,Cyrillic": 1,
                "radare2: .rdata) utf16le  `\u0220!\u0469\u0460\u0462\u04e2 blocks=Basic Latin,Latin Extended-B,Cyrillic;radare2: .rdata) utf32le   \u2820\u2800 blocks=Basic Latin,Braille Patterns": 1,
                "radare2: .rdata) utf32le   \u2820\u2800 blocks=Basic Latin,Braille Patterns;radare2: .rdata) utf16le \"b\u0822\u0a20\u0222 blocks=Basic Latin,Samaritan,Gurmukhi,Latin Extended-B": 1,
                "radare2: .rdata) utf16le \"b\u0822\u0a20\u0222 blocks=Basic Latin,Samaritan,Gurmukhi,Latin Extended-B;radare2: .rdata) utf16le \\bHJ\u044aB `!\u2400\u0400\u00c0 blocks=Basic Latin,Cyrillic,Control Pictures,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\bHJ\u044aB `!\u2400\u0400\u00c0 blocks=Basic Latin,Cyrillic,Control Pictures,Latin-1 Supplement;radare2: .rdata) utf16le A\u00c1\u04c1\u0401\u0481\u0480\u0400\\t)iI blocks=Basic Latin,Latin-1 Supplement,Cyrillic": 1,
                "radare2: .rdata) utf16le A\u00c1\u04c1\u0401\u0481\u0480\u0400\\t)iI blocks=Basic Latin,Latin-1 Supplement,Cyrillic;radare2: .rdata) utf16le \\b(\\nD": 1,
                "radare2: .rdata) utf16le \\b(\\nD;radare2: .rdata) utf16le !\" `@": 1,
                "radare2: .rdata) utf16le !\" `@;radare2: .rdata) utf32le @K\ud85c\uddcc\u00b2 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rdata) utf32le @K\ud85c\uddcc\u00b2 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement;radare2: .rdata) utf32le @N\ud85c\uddcc\u00d2 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rdata) utf32le @N\ud85c\uddcc\u00d2 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement;radare2: .rdata) utf32le @Q\ud85c\udc13\u0104 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin Extended-A": 1,
                "radare2: .rdata) utf32le @Q\ud85c\udc13\u0104 blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin Extended-A;radare2: .rdata) utf32le CC\ud864\udd7b= blocks=Basic Latin,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le CC\ud864\udd7b= blocks=Basic Latin,CJK Unified Ideographs Extension B;radare2: .rdata) utf32le CZ\ud864\udd9c\u00cc blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement": 1,
                "radare2: .rdata) utf32le CZ\ud864\udd9c\u00cc blocks=Basic Latin,CJK Unified Ideographs Extension B,Latin-1 Supplement;radare2: .rdata) utf16le ! $A`\\t(\\r)\\f%": 1,
                "radare2: .rdata) utf16le ! $A`\\t(\\r)\\f%;radare2: .rdata) utf16le @H\\nEID\\a#\u00a3 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le @H\\nEID\\a#\u00a3 blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata) utf16le cC\\v\u0241\u0201\u0281\u00c1 blocks=Basic Latin,Latin Extended-B,IPA Extensions,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le cC\\v\u0241\u0201\u0281\u00c1 blocks=Basic Latin,Latin Extended-B,IPA Extensions,Latin-1 Supplement;radare2: .rdata) utf32le ,\\f\u010c\u0104\u0184\u0180 blocks=Basic Latin,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rdata) utf32le ,\\f\u010c\u0104\u0184\u0180 blocks=Basic Latin,Latin Extended-A,Latin Extended-B;radare2: .rdata) utf16le \\a'g\u0267\u0266\u1266\u3266 blocks=Basic Latin,IPA Extensions,Ethiopic,Enclosed CJK Letters and Months": 1,
                "radare2: .rdata) utf16le \\a'g\u0267\u0266\u1266\u3266 blocks=Basic Latin,IPA Extensions,Ethiopic,Enclosed CJK Letters and Months;radare2: .rdata) utf16le Aab\u0200\u0201 blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .rdata) utf16le Aab\u0200\u0201 blocks=Basic Latin,Latin Extended-B;radare2: .rdata) utf16le $\u00a4\u00a5\u00a6\u0102 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rdata) utf16le $\u00a4\u00a5\u00a6\u0102 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A;radare2: .rdata) utf16le \\bA@B\"\u0122 blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\bA@B\"\u0122 blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le J*\u012a\\n blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata) utf16le J*\u012a\\n blocks=Basic Latin,Latin Extended-A;radare2: .rdata) utf16le /on\u016e\u056e\u0168hHD blocks=Basic Latin,Latin Extended-A,Armenian": 1,
                "radare2: .rdata) utf16le /on\u016e\u056e\u0168hHD blocks=Basic Latin,Latin Extended-A,Armenian;radare2: .rdata) utf16le C\\tIB\"": 1,
                "radare2: .rdata) utf16le C\\tIB\";radare2: .rdata) utf16le `b\u0262@#! ,l\\b\\n blocks=Basic Latin,IPA Extensions": 1,
                "radare2: .rdata) utf16le `b\u0262@#! ,l\\b\\n blocks=Basic Latin,IPA Extensions;radare2: .rdata) utf32le @ \u0400\\bk blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata) utf32le @ \u0400\\bk blocks=Basic Latin,Cyrillic;radare2: .rdata) utf16le (((((((": 1,
                "radare2: .rdata) utf16le (((((((;radare2: .rdata) utf16le           ((((((   \\b\\b\\b\\b\\b\\b": 1,
                "radare2: .rdata) utf16le           ((((((   \\b\\b\\b\\b\\b\\b;radare2: .rdata) utf32le ;\u00fc\ud854\udd279 blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B": 1,
                "radare2: .rdata) utf32le ;\u00fc\ud854\udd279 blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension B;radare2: .rdata) utf16le  \\a!G@CA\\b(\\n\\vK\"\\fDBFN\u0142\u0146\u0942 blocks=Basic Latin,Latin Extended-A,Devanagari": 1,
                "radare2: .rdata) utf16le  \\a!G@CA\\b(\\n\\vK\"\\fDBFN\u0142\u0146\u0942 blocks=Basic Latin,Latin Extended-A,Devanagari;radare2: .rdata) utf16le ,\u00ac\u00ec#`H$: blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le ,\u00ac\u00ec#`H$: blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata) utf16le @h(": 1,
                "radare2: .rdata) utf16le @h(;radare2: .rdata) utf16le DH\\t\\f$d\u00c4 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le DH\\t\\f$d\u00c4 blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata) utf16le \\aea\u1000\u1001\u1021\u1061\u0160 blocks=Basic Latin,Myanmar,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\aea\u1000\u1001\u1021\u1061\u0160 blocks=Basic Latin,Myanmar,Latin Extended-A;radare2: .rdata) utf16le B\u00c2\u00c0\u0202u blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "radare2: .rdata) utf16le B\u00c2\u00c0\u0202u blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B;radare2: .rdata) utf32le \\b\\f\u010c\u018c blocks=Basic Latin,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rdata) utf32le \\b\\f\u010c\u018c blocks=Basic Latin,Latin Extended-A,Latin Extended-B;radare2: .rdata) utf16le 555555555555555555": 1,
                "radare2: .rdata) utf16le 555555555555555555;radare2: .rdata) utf16le .L\u00ccD\u0109\\v\u020b blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A,Latin Extended-B": 1,
                "radare2: .rdata) utf16le .L\u00ccD\u0109\\v\u020b blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A,Latin Extended-B;radare2: .rdata) utf32le 6m\ud834\udf60\u02e5 blocks=Basic Latin,Counting Rod Numerals,Spacing Modifier Letters": 1,
                "radare2: .rdata) utf32le 6m\ud834\udf60\u02e5 blocks=Basic Latin,Counting Rod Numerals,Spacing Modifier Letters;radare2: .rdata) utf32le 7m\ud834\udf60\u02e7 blocks=Basic Latin,Counting Rod Numerals,Spacing Modifier Letters": 1,
                "radare2: .rdata) utf32le 7m\ud834\udf60\u02e7 blocks=Basic Latin,Counting Rod Numerals,Spacing Modifier Letters;radare2: .rdata) utf32le 7\u00c7\ud834\udf60\u0300 blocks=Basic Latin,Latin-1 Supplement,Counting Rod Numerals,Combining Diacritical Marks": 1,
                "radare2: .rdata) utf32le 7\u00c7\ud834\udf60\u0300 blocks=Basic Latin,Latin-1 Supplement,Counting Rod Numerals,Combining Diacritical Marks;radare2: .rdata) utf32le 8\u00dc\ud834\udf60\u03b2 blocks=Basic Latin,Latin-1 Supplement,Counting Rod Numerals,Greek and Coptic": 1,
                "radare2: .rdata) utf32le 8\u00dc\ud834\udf60\u03b2 blocks=Basic Latin,Latin-1 Supplement,Counting Rod Numerals,Greek and Coptic;radare2: .rdata) utf16le \\b\"\\b#\\b\u8003\\b\u8001 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf16le \\b\"\\b#\\b\u8003\\b\u8001 blocks=Basic Latin,CJK Unified Ideographs;radare2: .rdata) utf32le \"\"\"#": 1,
                "radare2: .rdata) utf32le \"\"\"#;radare2: .rdata) utf32le @": 1,
                "radare2: .rdata) utf32le @;radare2: .rdata) utf32le \\r4\u0455\ud83c\udc05\u0499 blocks=Basic Latin,Cyrillic,Mahjong Tiles": 1,
                "radare2: .rdata) utf32le \\r4\u0455\ud83c\udc05\u0499 blocks=Basic Latin,Cyrillic,Mahjong Tiles;radare2: .rdata) utf32le \\a2\u07c0\ud85b\udda1\u028b blocks=Basic Latin,NKo,CJK Unified Ideographs Extension B,IPA Extensions": 1,
                "radare2: .rdata) utf32le \\a2\u07c0\ud85b\udda1\u028b blocks=Basic Latin,NKo,CJK Unified Ideographs Extension B,IPA Extensions;radare2: .rdata) utf32le \\n2\u07c0\ud85b\udda1\u03c3 blocks=Basic Latin,NKo,CJK Unified Ideographs Extension B,Greek and Coptic": 1,
                "radare2: .rdata) utf32le \\n2\u07c0\ud85b\udda1\u03c3 blocks=Basic Latin,NKo,CJK Unified Ideographs Extension B,Greek and Coptic;radare2: .rdata)  utf8 m\u06f6m\u06f6 blocks=Basic Latin,Arabic": 1,
                "radare2: .rdata)  utf8 m\u06f6m\u06f6 blocks=Basic Latin,Arabic;radare2: .rdata) utf16le \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c blocks=Basic Latin,CJK Unified Ideographs Extension A": 1,
                "radare2: .rdata) utf16le \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c\u3c3c blocks=Basic Latin,CJK Unified Ideographs Extension A;radare2: .rdata)  utf8 CJJhm\u06b6 blocks=Basic Latin,Arabic": 1,
                "radare2: .rdata)  utf8 CJJhm\u06b6 blocks=Basic Latin,Arabic;radare2: .rdata) utf16le \"\"\"\"\"\"\"\u7f22\u4400\u4400\u4400\u4400\u4400\u4400\u4400\u4400 blocks=Basic Latin,CJK Unified Ideographs,CJK Unified Ideographs Extension A": 1,
                "radare2: .rdata) utf16le \"\"\"\"\"\"\"\u7f22\u4400\u4400\u4400\u4400\u4400\u4400\u4400\u4400 blocks=Basic Latin,CJK Unified Ideographs,CJK Unified Ideographs Extension A;radare2: (.rdata) ascii": 1,
                "radare2: (.rdata) ascii;radare2: .rdata)  utf8 \u06f6m\u06f6mUUUUUUUUUU blocks=Arabic,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u06f6m\u06f6mUUUUUUUUUU blocks=Arabic,Basic Latin;radare2: .rdata)  utf8 <pQ\u0318 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .rdata)  utf8 <pQ\u0318 blocks=Basic Latin,Combining Diacritical Marks;radare2: .rdata)  utf8 C\u0760d@ blocks=Basic Latin,Arabic Supplement": 1,
                "radare2: .rdata)  utf8 C\u0760d@ blocks=Basic Latin,Arabic Supplement;radare2: .rdata)  utf8 333333\u04ff blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata)  utf8 333333\u04ff blocks=Basic Latin,Cyrillic;radare2: .rdata)  utf8 B.\u6fd4% blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rdata)  utf8 B.\u6fd4% blocks=Basic Latin,CJK Unified Ideographs;radare2: .rdata)  utf8 k[T(0": 1,
                "radare2: .rdata)  utf8 k[T(0;radare2: .rdata) utf16le :\\b=\\b@\\b": 1,
                "radare2: .rdata) utf16le :\\b=\\b@\\b;radare2: .rdata) utf16le \\b\u00d1\\b\u00d4\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\b\u00d1\\b\u00d4\\b blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata) utf16le \\t\u00cc\\t\u00d1\\t blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\t\u00cc\\t\u00d1\\t blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata) utf16le \\n\u00d0\\n\u00df\\n blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\n\u00d0\\n\u00df\\n blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata) utf16le \\n\u00f7\\n\u0102\\n blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A": 1,
                "radare2: .rdata) utf16le \\n\u00f7\\n\u0102\\n blocks=Basic Latin,Latin-1 Supplement,Latin Extended-A;radare2: .rdata) utf16le \\v\u00b8\\v\u00bd\\v blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .rdata) utf16le \\v\u00b8\\v\u00bd\\v blocks=Basic Latin,Latin-1 Supplement;radare2: .rdata) utf32le (\u00fd\udbf0\udd8f\udbf0\udd9f\udbf0\udda4 blocks=Basic Latin,Latin-1 Supplement,Supplementary Private Use Area-B": 1,
                "radare2: .rdata) utf32le (\u00fd\udbf0\udd8f\udbf0\udd9f\udbf0\udda4 blocks=Basic Latin,Latin-1 Supplement,Supplementary Private Use Area-B;radare2: .rdata) utf32le  \u00f8\udbfa\udc4d\udbfa\udc5e\udbfa\udc7f blocks=Basic Latin,Latin-1 Supplement,Supplementary Private Use Area-B": 1,
                "radare2: .rdata) utf32le  \u00f8\udbfa\udc4d\udbfa\udc5e\udbfa\udc7f blocks=Basic Latin,Latin-1 Supplement,Supplementary Private Use Area-B;radare2: arch     x86": 1,
                "radare2: arch     x86;radare2: baddr    0x400000": 1,
                "radare2: baddr    0x400000;radare2: binsz    5192704": 1,
                "radare2: binsz    5192704;radare2: bintype  pe": 1,
                "radare2: bintype  pe;radare2: bits     64": 1,
                "radare2: bits     64;radare2: canary   false": 1,
                "radare2: canary   false;radare2: retguard false": 1,
                "radare2: retguard false;radare2: class    PE32+": 1,
                "radare2: class    PE32+;radare2: cmp.csum 0x004f85cf": 1,
                "radare2: cmp.csum 0x004f85cf;radare2: compiled Wed May 22 13:31:00 2019": 1,
                "radare2: compiled Wed May 22 13:31:00 2019;radare2: crypto   false": 1,
                "radare2: crypto   false;radare2: endian   little": 1,
                "radare2: endian   little;radare2: havecode true": 1,
                "radare2: havecode true;radare2: hdr.csum 0x004f618b": 1,
                "radare2: hdr.csum 0x004f618b;radare2: laddr    0x0": 1,
                "radare2: laddr    0x0;radare2: linenum  true": 1,
                "radare2: linenum  true;radare2: lsyms    true": 1,
                "radare2: lsyms    true;radare2: machine  AMD 64": 1,
                "radare2: machine  AMD 64;radare2: maxopsz  16": 1,
                "radare2: maxopsz  16;radare2: minopsz  1": 1,
                "radare2: minopsz  1;radare2: nx       false": 1,
                "radare2: nx       false;radare2: os       windows": 1,
                "radare2: os       windows;radare2: overlay  false": 1,
                "radare2: overlay  false;radare2: pcalign  0": 1,
                "radare2: pcalign  0;radare2: pic      false": 1,
                "radare2: pic      false;radare2: relocs   true": 1,
                "radare2: relocs   true;radare2: signed   false": 1,
                "radare2: signed   false;radare2: sanitiz  false": 1,
                "radare2: sanitiz  false;radare2: static   false": 1,
                "radare2: static   false;radare2: stripped true": 1,
                "radare2: stripped true;radare2: subsys   Windows GUI": 1,
                "radare2: subsys   Windows GUI;radare2: va       true": 1,
                "radare2: va       true;radare2: PE file header:": 1,
                "radare2: PE file header:;radare2: IMAGE_NT_HEADERS": 1,
                "radare2: IMAGE_NT_HEADERS;radare2: Signature : 0x4550": 1,
                "radare2: Signature : 0x4550;radare2: IMAGE_FILE_HEADERS": 1,
                "radare2: IMAGE_FILE_HEADERS;radare2: Machine : 0x8664": 1,
                "radare2: Machine : 0x8664;radare2: NumberOfSections : 0x9": 1,
                "radare2: NumberOfSections : 0x9;radare2: TimeDateStamp : 0x5ce58754": 1,
                "radare2: TimeDateStamp : 0x5ce58754;radare2: PointerToSymbolTable : 0x0": 1,
                "radare2: PointerToSymbolTable : 0x0;radare2: NumberOfSymbols : 0x0": 1,
                "radare2: NumberOfSymbols : 0x0;radare2: SizeOfOptionalHeader : 0xf0": 1,
                "radare2: SizeOfOptionalHeader : 0xf0;radare2: Characteristics : 0x22f": 1,
                "radare2: Characteristics : 0x22f;radare2: IMAGE_OPTIONAL_HEADERS": 1,
                "radare2: IMAGE_OPTIONAL_HEADERS;radare2: Magic : 0x20b": 1,
                "radare2: Magic : 0x20b;radare2: MajorLinkerVersion : 0x2": 1,
                "radare2: MajorLinkerVersion : 0x2;radare2: MinorLinkerVersion : 0x20": 1,
                "radare2: MinorLinkerVersion : 0x20;radare2: SizeOfCode : 0x23d600": 1,
                "radare2: SizeOfCode : 0x23d600;radare2: SizeOfInitializedData : 0x4f3800": 1,
                "radare2: SizeOfInitializedData : 0x4f3800;radare2: SizeOfUninitializedData : 0x1ec00": 1,
                "radare2: SizeOfUninitializedData : 0x1ec00;radare2: AddressOfEntryPoint : 0x1470": 1,
                "radare2: AddressOfEntryPoint : 0x1470;radare2: BaseOfCode : 0x1000": 1,
                "radare2: BaseOfCode : 0x1000;radare2: ImageBase : 0x400000": 1,
                "radare2: ImageBase : 0x400000;radare2: SectionAlignment : 0x1000": 1,
                "radare2: SectionAlignment : 0x1000;radare2: FileAlignment : 0x200": 1,
                "radare2: FileAlignment : 0x200;radare2: MajorOperatingSystemVersion : 0x4": 1,
                "radare2: MajorOperatingSystemVersion : 0x4;radare2: MinorOperatingSystemVersion : 0x0": 1,
                "radare2: MinorOperatingSystemVersion : 0x0;radare2: MajorImageVersion : 0x0": 1,
                "radare2: MajorImageVersion : 0x0;radare2: MinorImageVersion : 0x0": 1,
                "radare2: MinorImageVersion : 0x0;radare2: MajorSubsystemVersion : 0x5": 1,
                "radare2: MajorSubsystemVersion : 0x5;radare2: MinorSubsystemVersion : 0x2": 1,
                "radare2: MinorSubsystemVersion : 0x2;radare2: Win32VersionValue : 0x0": 1,
                "radare2: Win32VersionValue : 0x0;radare2: SizeOfImage : 0x518000": 1,
                "radare2: SizeOfImage : 0x518000;radare2: SizeOfHeaders : 0x400": 1,
                "radare2: SizeOfHeaders : 0x400;radare2: CheckSum : 0x4f618b": 1,
                "radare2: CheckSum : 0x4f618b;radare2: Subsystem : 0x2": 1,
                "radare2: Subsystem : 0x2;radare2: DllCharacteristics : 0x0": 1,
                "radare2: DllCharacteristics : 0x0;radare2: SizeOfStackReserve : 0x200000": 1,
                "radare2: SizeOfStackReserve : 0x200000;radare2: SizeOfStackCommit : 0x1000": 1,
                "radare2: SizeOfStackCommit : 0x1000;radare2: SizeOfHeapReserve : 0x100000": 1,
                "radare2: SizeOfHeapReserve : 0x100000;radare2: SizeOfHeapCommit : 0x1000": 1,
                "radare2: SizeOfHeapCommit : 0x1000;radare2: LoaderFlags : 0x0": 1,
                "radare2: LoaderFlags : 0x0;radare2: NumberOfRvaAndSizes : 0x10": 1,
                "radare2: NumberOfRvaAndSizes : 0x10;radare2: IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_IMPORT;radare2: VirtualAddress : 0x515000": 1,
                "radare2: VirtualAddress : 0x515000;radare2: Size : 0xe54": 1,
                "radare2: Size : 0xe54;radare2: IMAGE_DIRECTORY_ENTRY_EXCEPTION": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_EXCEPTION;radare2: VirtualAddress : 0x4f4000": 1,
                "radare2: VirtualAddress : 0x4f4000;radare2: Size : 0x4b0": 1,
                "radare2: Size : 0x4b0;radare2: IMAGE_DIRECTORY_ENTRY_TLS": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_TLS;radare2: VirtualAddress : 0x4f31c0": 1,
                "radare2: VirtualAddress : 0x4f31c0;radare2: Size : 0x28": 1,
                "radare2: Size : 0x28;radare2: IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_IAT;radare2: VirtualAddress : 0x515354": 1,
                "radare2: VirtualAddress : 0x515354;radare2: Size : 0x318": 1,
                "radare2: Size : 0x318;radare2: IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT;radare2: VirtualAddress : 0x0": 1,
                "radare2: VirtualAddress : 0x0;radare2: Size : 0xffff": 1,
                "radare2: Size : 0xffff;radare2: kernel32.dll": 1,
                "radare2: kernel32.dll;radare2: msvcrt.dll": 1,
                "radare2: msvcrt.dll;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_AddVectoredExceptionHandler": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_AddVectoredExceptionHandler;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_CloseHandle": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_CloseHandle;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_CreateEventA": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_CreateEventA;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_CreateIoCompletionPort": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_CreateIoCompletionPort;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_CreateThread": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_CreateThread;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_DeleteCriticalSection": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_DeleteCriticalSection;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_DuplicateHandle": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_DuplicateHandle;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_EnterCriticalSection": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_EnterCriticalSection;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_ExitProcess": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_ExitProcess;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_FreeEnvironmentStringsW": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_FreeEnvironmentStringsW;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_FreeLibrary": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_FreeLibrary;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetConsoleMode": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetConsoleMode;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetCurrentProcess": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetCurrentProcess;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetCurrentProcessId": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetCurrentProcessId;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetCurrentThreadId": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetCurrentThreadId;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetEnvironmentStringsW": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetEnvironmentStringsW;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetLastError": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetLastError;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetNativeSystemInfo": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetNativeSystemInfo;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetProcAddress": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetProcAddress;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetProcessAffinityMask": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetProcessAffinityMask;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetProcessHeap": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetProcessHeap;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetQueuedCompletionStatus": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetQueuedCompletionStatus;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetStartupInfoA": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetStartupInfoA;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetStdHandle": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetStdHandle;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetSystemDirectoryA": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetSystemDirectoryA;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetSystemInfo": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetSystemInfo;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetSystemTimeAsFileTime": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetSystemTimeAsFileTime;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetThreadLocale": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetThreadLocale;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetTickCount": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_GetTickCount;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_HeapAlloc": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_HeapAlloc;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_HeapFree": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_HeapFree;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_InitializeCriticalSection": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_InitializeCriticalSection;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_IsBadReadPtr": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_IsBadReadPtr;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_LeaveCriticalSection": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_LeaveCriticalSection;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_LoadLibraryA": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_LoadLibraryA;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_LoadLibraryW": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_LoadLibraryW;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_QueryPerformanceCounter": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_QueryPerformanceCounter;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_RtlAddFunctionTable": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_RtlAddFunctionTable;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_RtlCaptureContext": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_RtlCaptureContext;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_RtlLookupFunctionEntry": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_RtlLookupFunctionEntry;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_RtlVirtualUnwind": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_RtlVirtualUnwind;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetConsoleCtrlHandler": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetConsoleCtrlHandler;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetErrorMode": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetErrorMode;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetEvent": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetEvent;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetLastError": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetLastError;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetProcessPriorityBoost": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetProcessPriorityBoost;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetUnhandledExceptionFilter": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetUnhandledExceptionFilter;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetWaitableTimer": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SetWaitableTimer;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_Sleep": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_Sleep;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SwitchToThread": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_SwitchToThread;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_TerminateProcess": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_TerminateProcess;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_TlsGetValue": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_TlsGetValue;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_UnhandledExceptionFilter": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_UnhandledExceptionFilter;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_VirtualAlloc": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_VirtualAlloc;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_VirtualFree": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_VirtualFree;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_VirtualProtect": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_VirtualProtect;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_VirtualQuery": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_VirtualQuery;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_WaitForSingleObject": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_WaitForSingleObject;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_WriteConsoleW": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_WriteConsoleW;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_WriteFile": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_WriteFile;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll___C_specific_handler": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll___C_specific_handler;radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_lstrlenA": 1,
                "radare2: vaddr=address paddr=address type=SET_64 KERNEL32.dll_lstrlenA;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___getmainargs": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___getmainargs;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___initenv": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___initenv;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___iob_func": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___iob_func;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___lconv_init": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___lconv_init;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___set_app_type": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___set_app_type;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___setusermatherr": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll___setusermatherr;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__acmdln": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__acmdln;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__amsg_exit": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__amsg_exit;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__beginthread": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__beginthread;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__cexit": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__cexit;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__errno": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__errno;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__fmode": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__fmode;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__initterm": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__initterm;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__onexit": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__onexit;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__wcsnicmp": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll__wcsnicmp;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_abort": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_abort;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_bsearch": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_bsearch;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_calloc": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_calloc;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_exit": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_exit;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_fprintf": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_fprintf;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_free": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_free;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_fwrite": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_fwrite;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_malloc": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_malloc;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_mbstowcs": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_mbstowcs;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_memcpy": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_memcpy;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_memset": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_memset;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_qsort": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_qsort;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_realloc": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_realloc;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_signal": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_signal;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_strcmp": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_strcmp;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_strlen": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_strlen;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_strncmp": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_strncmp;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_strtol": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_strtol;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_vfprintf": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_vfprintf;radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_wcstombs": 1,
                "radare2: vaddr=address paddr=address type=SET_64 msvcrt.dll_wcstombs;radare2: 5192704": 1,
                "radare2: 5192704;clamav: Cannot dlopen libclamunrar_iface: file not found - unrar support unavailable": 1,
                "clamav: Cannot dlopen libclamunrar_iface: file not found - unrar support unavailable;clamav: cli_loadftm: File type signature for Microsoft Windows Shortcut File not loaded (required f-level: 1??)": 1,
                "clamav: cli_loadftm: File type signature for Microsoft Windows Shortcut File not loaded (required f-level: 1??);clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 7?? bytes": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 7?? bytes;clamav: bytecode self test running": 1,
                "clamav: bytecode self test running;clamav: Bytecode 4?????????: executing in JIT mode": 1,
                "clamav: Bytecode 4?????????: executing in JIT mode;clamav: bytecode finished in 1 us": 1,
                "clamav: bytecode finished in 1 us;clamav: bytecode self test succeeded": 1,
                "clamav: bytecode self test succeeded;clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 1????? bytes": 1,
                "clamav: [Bytecode JIT]; emitted ELF64-x86-64 <in-memory object> of 1????? bytes;clamav: Bytecode: 94 bytecode prepared with JIT": 1,
                "clamav: Bytecode: 94 bytecode prepared with JIT;clamav: Recognized MS-EXE/DLL file": 1,
                "clamav: Recognized MS-EXE/DLL file;clamav: in cli_peheader": 1,
                "clamav: in cli_peheader;clamav: Matched signature for file type PE": 1,
                "clamav: Matched signature for file type PE;clamav: Running bytecode for logical signature match": 1,
                "clamav: Running bytecode for logical signature match;clamav: Bytecode 37: executing in JIT mode": 1,
                "clamav: Bytecode 37: executing in JIT mode;clamav: bytecode finished in 87 us": 1,
                "clamav: bytecode finished in 87 us;clamav: Bytecode 37 returned code: 0": 1,
                "clamav: Bytecode 37 returned code: 0;clamav: cli_peheader: Can't read file header": 1,
                "clamav: cli_peheader: Can't read file header;clamav: Invalid PE signature (probably NE file)": 1,
                "clamav: Invalid PE signature (probably NE file);clamav: e_lfanew == 1??": 1,
                "clamav: e_lfanew == 1??;clamav: File type: Executable": 1,
                "clamav: File type: Executable;clamav: Machine type: AMD64": 1,
                "clamav: Machine type: AMD64;clamav: NumberOfSections: 9": 1,
                "clamav: NumberOfSections: 9;clamav: TimeDateStamp: Wed May 22 13:31:00 2???": 1,
                "clamav: TimeDateStamp: Wed May 22 13:31:00 2???;clamav: SizeOfOptionalHeader: f0": 1,
                "clamav: SizeOfOptionalHeader: f0;clamav: File format: PE32+": 1,
                "clamav: File format: PE32+;clamav: MajorLinkerVersion: 2": 1,
                "clamav: MajorLinkerVersion: 2;clamav: MinorLinkerVersion: 32": 1,
                "clamav: MinorLinkerVersion: 32;clamav: SizeOfCode: 0x2?????": 1,
                "clamav: SizeOfCode: 0x2?????;clamav: AddressOfEntryPoint: 0x1???": 1,
                "clamav: AddressOfEntryPoint: 0x1???;clamav: BaseOfCode: 0x1???": 1,
                "clamav: BaseOfCode: 0x1???;clamav: SectionAlignment: 0x1???": 1,
                "clamav: SectionAlignment: 0x1???;clamav: FileAlignment: 0x2??": 1,
                "clamav: FileAlignment: 0x2??;clamav: MajorSubsystemVersion: 5": 1,
                "clamav: MajorSubsystemVersion: 5;clamav: MinorSubsystemVersion: 2": 1,
                "clamav: MinorSubsystemVersion: 2;clamav: SizeOfImage: 0x5?????": 1,
                "clamav: SizeOfImage: 0x5?????;clamav: SizeOfHeaders: 0x4??": 1,
                "clamav: SizeOfHeaders: 0x4??;clamav: NumberOfRvaAndSizes: 16": 1,
                "clamav: NumberOfRvaAndSizes: 16;clamav: Subsystem: Win32 GUI": 1,
                "clamav: Subsystem: Win32 GUI;clamav: Section 0": 1,
                "clamav: Section 0;clamav: Section name: .text": 1,
                "clamav: Section name: .text;clamav: Section data (from headers - in memory)": 1,
                "clamav: Section data (from headers - in memory);clamav: VirtualSize: 0x2????? 0x2?????": 1,
                "clamav: VirtualSize: 0x2????? 0x2?????;clamav: VirtualAddress: 0x1??? 0x1???": 1,
                "clamav: VirtualAddress: 0x1??? 0x1???;clamav: SizeOfRawData: 0x2????? 0x2?????": 1,
                "clamav: SizeOfRawData: 0x2????? 0x2?????;clamav: PointerToRawData: 0x4?? 0x4??": 1,
                "clamav: PointerToRawData: 0x4?? 0x4??;clamav: Section contains executable code": 1,
                "clamav: Section contains executable code;clamav: Section's memory is executable": 1,
                "clamav: Section's memory is executable;clamav: MDB hashset: 2??????:d2acad5012e1da9b6c534f96642ebadc": 1,
                "clamav: MDB hashset: 2??????:d2acad5012e1da9b6c534f96642ebadc;clamav: Section 1": 1,
                "clamav: Section 1;clamav: Section name: .data": 1,
                "clamav: Section name: .data;clamav: VirtualSize: 0x1???? 0x1????": 1,
                "clamav: VirtualSize: 0x1???? 0x1????;clamav: VirtualAddress: 0x2????? 0x2?????": 1,
                "clamav: VirtualAddress: 0x2????? 0x2?????;clamav: SizeOfRawData: 0x1???? 0x1????": 1,
                "clamav: SizeOfRawData: 0x1???? 0x1????;clamav: PointerToRawData: 0x2????? 0x2?????": 1,
                "clamav: PointerToRawData: 0x2????? 0x2?????;clamav: Section's memory is writeable": 1,
                "clamav: Section's memory is writeable;clamav: MDB hashset: 1?????:c3fc25f788cf803035684364560f4215": 1,
                "clamav: MDB hashset: 1?????:c3fc25f788cf803035684364560f4215;clamav: Section 2": 1,
                "clamav: Section 2;clamav: Section name: .rdata": 1,
                "clamav: Section name: .rdata;clamav: MDB hashset: 2??????:5a6508fc7519a6466d2fe43e076bc3ed": 1,
                "clamav: MDB hashset: 2??????:5a6508fc7519a6466d2fe43e076bc3ed;clamav: Section 3": 1,
                "clamav: Section 3;clamav: Section name: .pdata": 1,
                "clamav: Section name: .pdata;clamav: VirtualSize: 0x4?? 0x1???": 1,
                "clamav: VirtualSize: 0x4?? 0x1???;clamav: VirtualAddress: 0x4????? 0x4?????": 1,
                "clamav: VirtualAddress: 0x4????? 0x4?????;clamav: SizeOfRawData: 0x6?? 0x6??": 1,
                "clamav: SizeOfRawData: 0x6?? 0x6??;clamav: PointerToRawData: 0x4????? 0x4?????": 1,
                "clamav: PointerToRawData: 0x4????? 0x4?????;clamav: MDB hashset: 1???:c44ffb7f0c5439c98dd6eb1b0353b809": 1,
                "clamav: MDB hashset: 1???:c44ffb7f0c5439c98dd6eb1b0353b809;clamav: Section 4": 1,
                "clamav: Section 4;clamav: Section name: .xdata": 1,
                "clamav: Section name: .xdata;clamav: VirtualSize: 0x3?? 0x1???": 1,
                "clamav: VirtualSize: 0x3?? 0x1???;clamav: SizeOfRawData: 0x4?? 0x4??": 1,
                "clamav: SizeOfRawData: 0x4?? 0x4??;clamav: MDB hashset: 1???:7cfa7259d5b997b5d737ac6090637136": 1,
                "clamav: MDB hashset: 1???:7cfa7259d5b997b5d737ac6090637136;clamav: Section 5": 1,
                "clamav: Section 5;clamav: Section name: .bss": 1,
                "clamav: Section name: .bss;clamav: SizeOfRawData: 0x0 0x0": 1,
                "clamav: SizeOfRawData: 0x0 0x0;clamav: PointerToRawData: 0x0 0x0": 1,
                "clamav: PointerToRawData: 0x0 0x0;clamav: Section 6": 1,
                "clamav: Section 6;clamav: Section name: .idata": 1,
                "clamav: Section name: .idata;clamav: VirtualSize: 0xe?? 0x1???": 1,
                "clamav: VirtualSize: 0xe?? 0x1???;clamav: VirtualAddress: 0x5????? 0x5?????": 1,
                "clamav: VirtualAddress: 0x5????? 0x5?????;clamav: SizeOfRawData: 0x1??? 0x1???": 1,
                "clamav: SizeOfRawData: 0x1??? 0x1???;clamav: MDB hashset: 4???:0bc6a216099409952366f9e47078729d": 1,
                "clamav: MDB hashset: 4???:0bc6a216099409952366f9e47078729d;clamav: Section 7": 1,
                "clamav: Section 7;clamav: Section name: .CRT": 1,
                "clamav: Section name: .CRT;clamav: VirtualSize: 0x68 0x1???": 1,
                "clamav: VirtualSize: 0x68 0x1???;clamav: SizeOfRawData: 0x2?? 0x2??": 1,
                "clamav: SizeOfRawData: 0x2?? 0x2??;clamav: MDB hashset: 5??:a5dfedcc269582ad5bbb9553b4214222": 1,
                "clamav: MDB hashset: 5??:a5dfedcc269582ad5bbb9553b4214222;clamav: Section 8": 1,
                "clamav: Section 8;clamav: Section name: .tls": 1,
                "clamav: Section name: .tls;clamav: VirtualSize: 0x10 0x1???": 1,
                "clamav: VirtualSize: 0x10 0x1???;clamav: MDB hashset: 5??:bf619eac0cdf3f68d496ea9344137e8b": 1,
                "clamav: MDB hashset: 5??:bf619eac0cdf3f68d496ea9344137e8b;clamav: EntryPoint offset: 0x8?? (2???)": 1,
                "clamav: EntryPoint offset: 0x8?? (2???);clamav: cli_magic_scandesc: returning 0  at line 2???": 1,
                "clamav: cli_magic_scandesc: returning 0  at line 2???;clamav: bytecode watchdog is running": 1,
                "clamav: bytecode watchdog is running;clamav: malware family: OK": 1,
                "clamav: malware family: OK;clamav: OK": 1,
                "clamav: OK;clamav: Scanned files: 1": 1,
                "clamav: Scanned files: 1;clamav: Infected files: 0": 1,
                "File type: PE32+ executable (GUI) x86-64 (stripped to external PDB), for MS Windows": 1,
                "File type segment: PE32+ executable (GUI) x86-64 (stripped to external PDB)": 1,
                "File type word: PE32+": 1,
                "File type word: executable": 1,
                "File type word: (GUI)": 1,
                "File type word: x86-64": 1,
                "File type word: (stripped": 1,
                "File type word: to": 1,
                "File type word: external": 1,
                "File type word: PDB)": 1,
                "File type segment:  for MS Windows": 1,
                "File type word: for": 1,
                "File type word: MS": 1,
                "File type word: Windows": 1,
                "blob file types: ": 1
            }
        }
    ]
}