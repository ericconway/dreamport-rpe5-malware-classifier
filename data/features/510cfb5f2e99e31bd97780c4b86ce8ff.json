{
    "filepath": "/corpus/benign/ntvdm.exe",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "510cfb5f2e99e31bd97780c4b86ce8ff"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "ja -;wait;fbstp (%edi);addb %al, (%eax);addb %bl, (%eax)": 1,
                "cmpl $, -(%eax,%esi);cmpb $-, (%edi,%edx);jl - <.text+>;das;cmpl $, -(%edi,%ebx,)": 1,
                "jl  <.text+>;das;cmpl $, -(%eax,%eax);cmpb $-, -(%eax,%edi);jl  <.text+>": 1,
                "das;cmpl $, -(%eax,%eax);cmpb $-, -(%eax,%edi);jl  <.text+>;sbbb %al, -(%eax)": 1,
                "jl - <.text+>;subl $, %eax;cmpl $, -(%edi,%edx,);cmpl $, (%ebp,%edi,);xchgb %bh, -(%ebp,%eax,)": 1,
                "xchgb %bh, -(%ebp,%eax,);cmpb $-, -(%eax,%eax,);jl  <.text+>;pushl %ds;cmpb $-, (%ecx,%ecx,)": 1,
                "cmpb $-, -(%ebp,%edx,);jl - <.text+>;xchgl %edi, %eax;cmpb $-, -(%esi,%edx,);jl  <.text+>": 1,
                "xchgl %edi, %eax;cmpb $-, -(%esi,%edx,);jl  <.text+>;subl %eax, -(%ebx);jl  <.text+>": 1,
                "adcb %dl, -(%eax);jl - <.text+>;adcl $, %eax;xchgl %ecx, %eax;jl  <.text+>": 1,
                "jl - <.text+>;xorb $-, %al;jl - <.text+>;sbbb -(%edi), %al;jl  <.text+>": 1,
                "jl  <.text+>;cmpb %al, -(%edi);jl - <.text+>;incl %ebp;xchgl %edi, -(%edi,%ebp,)": 1,
                "jmp ;cmpl $-, (%esi);jl  <.text+>;pushl %esp;cmpl $-, -(%eax,%edi)": 1,
                "adcb -(%edx), %al;jl  <.text+>;adcl -(%edx), %eax;jl  <.text+>;lodsb (%esi), %al": 1,
                "jl  <.text+>;lodsb (%esi), %al;cmpb $-, (%ebx);jl - <.text+>;cltd": 1,
                "movb $-, %bl;jl  <.text+>;sbbb $-, %al;jl - <.text+>;sbbb $-, %al": 1,
                "sbbb $-, %al;jl - <.text+>;sbbb $-, %al;jl - <.text+>;orl -(%ecx), %eax": 1,
                "popl %ds;cmpl $-, (%ebp,%edi,);jl - <.text+>;decl %ebx;cmpl $, -(%ecx,%edi,)": 1,
                "jl - <.text+>;popl %ss;cmpb $-, (%eax,%ecx,);jl - <.text+>;pushl %ds": 1,
                "jle - <.text+>;movb (%ecx), %al;retl $;jle  <.text+>;scasl %es:(%edi), %eax": 1,
                "incl %edx;jle - <.text+>;retl $;popl %ebp;xchgl %esp, %eax": 1,
                "retl $;popl %ebp;xchgl %esp, %eax;incl %ecx;jle  <.text+>": 1,
                "jle  <.text+>;roll $, (%edx);movsl (%esi), %es:(%edi);incl %edx;jle  <.text+>": 1,
                "jle - <.text+>;popal;incl %ebp;jle  <.text+>;xchgl %edi, %eax": 1,
                "jle  <.text+>;xchgl %edi, %eax;incl %edx;jle - <.text+>;std": 1,
                "jle - <.text+>;std;incl %ebx;jle - <.text+>;into": 1,
                "xchgl %ecx, %eax;jl  <.text+>;stosl %eax, %es:(%edi);xchgl %ecx, %eax;jl  <.text+>": 1,
                "jl - <.text+>;fsts -(%eax);jl  <.text+>;notb -(%eax);jl - <.text+>": 1,
                "jl  <.text+>;sti;xchgl %edx, %eax;jl  <.text+>;adcl $, -(%ebp)": 1,
                "jl  <.text+>;fcoms -(%eax);jl  <.text+>;calll *-(%eax);jl - <.text+>": 1,
                "jl - <.text+>;incl %edx;xchgl %ecx, %eax;jl  <.text+>;salc": 1,
                "incl %edx;xchgl %ecx, %eax;jl  <.text+>;salc;xchgl %ebp, %eax": 1,
                "decl %edi;xchgl %ecx, %eax;jl  <.text+>;subl %edx, -(%esi);jl  <.text+>": 1,
                "addb (%eax), %cl;addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %ah, (%edx)": 1,
                "addb %al, (%eax);addb %al, (%edx);addb %al, (%eax);addb %ah, (%edx);addb %al, (%eax)": 1,
                "addb %ch, (%ecx,%eax,);addb %al, (%eax);subb $, %al;addb %al, (%eax);popl %esp": 1,
                "addb %al, (%eax);addb %bl, (%eax,%eax);addb %al, (%ebp);incl %edi;addb %cl, (%ecx)": 2,
                "incl %edi;addb %cl, (%ecx);pushl %ebx;addb %dl, (%eax,%eax);addb %bl, (%ecx)": 2,
                "popl %esp;addb %dl, (%ebx);popl %ecx;addb %dl, (%ebx);pushl %esp": 1,
                "addb %al, (%eax);rep  int $;paddb %mm, %mm;addb %cl, (%edi);pushl %ebx": 1,
                "jb  <.text+>;addb %al, (%eax);orl $, %eax;decl %esp;decl %edi": 1,
                "orl $, %eax;decl %esp;decl %edi;pushl %ebx;pushl %ebx": 1,
                "decl %edi;pushl %ebx;pushl %ebx;andb %ah, (%ebp);jb  <.text+>": 1,
                "decl %ecx;decl %esi;andb %ah, (%ebp);jb  <.text+>;jb  <.text+>": 1,
                "andb %ah, (%ebp);jb  <.text+>;jb  <.text+>;orb (%eax), %al;addb %dl, (%edx)": 1,
                "xorb %dh, (%edx);cmpb %cl, ;outsb (%esi), %dx;popal;bound (%ebp), %ebp": 1,
                "outsb (%esi), %dx;popal;bound (%ebp), %ebp;je  <.text+>;andb %ch, (%ecx)": 1,
                "andb %ch, (%eax);popal;jo  <.text+>;orb (%eax), %al;addb %al, (%eax)": 1,
                "popal;jo  <.text+>;orb (%eax), %al;addb %al, (%eax);addb %dl, (%edx)": 1,
                "orb (%eax), %al;addb %al, (%eax);addb %dl, (%edx);xorb %dh, (%ecx);cmpl %ecx, ": 1,
                "addb %al, (%eax);addb %dl, (%edx);xorb %dh, (%ecx);cmpl %ecx, ;outsb (%esi), %dx": 1,
                "insb %dx, %es:(%edi);andb %ah, %gs:(%ebp);imull $, (%ebx), %esp;addb %al, (%eax);pushl %edx": 1,
                "imull $, (%eax), %esp;jb  <.text+>;outsl (%esi), %dx;jb  <.text+>;orb (%eax), %al": 1,
                "insb %dx, %es:(%edi);imull $, (%ebx), %esp;andb %ch, (%eax);jae  <.text+>;jb  <.text+>": 1,
                "popal;jae  <.text+>;andb %ah, (%ebx);outsb (%esi), %dx;je  <.text+>": 1,
                "pushl $;jo  <.text+>;imull $, (%ebx), %esp;daa;jae  <.text+>": 1,
                "andb %ah, (%esi);jb  <.text+>;insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <.text+>": 1,
                "outsw (%esi), %dx;jb  <.text+>;outsb %gs:(%esi), %dx;jbe  <.text+>;jb  <.text+>": 1,
                "je  <.text+>;orb (%eax), %al;pushl %edx;xorb %dh, %ss:(%eax);cmpb %cl, ": 1,
                "pushl %edx;xorb %dh, %ss:(%eax);cmpb %cl, ;outsl (%esi), %dx;je  <.text+>": 1,
                "outsw (%esi), %dx;jb  <.text+>;popal;jb  <.text+>;jne  <.text+>": 1,
                "xorb , %cl;insb %dx, %es:(%edi);outsl (%esi), %dx;popal;je  <.text+>": 1,
                "popal;je  <.text+>;outsb (%esi), %dx;andb %dh, (%bx,%si);imull $, (%esi), %ebp": 1,
                "orb (%edx), %cl;addb %al, (%eax);pushl %edx;jne  <.text+>;je  <.text+>": 1,
                "orb (%edx), %cl;pushl %eax;jb  <.text+>;jb  <.text+>;insl %dx, %es:(%edi)": 1,
                "jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;imull $, (%esi), %ebp;popal": 1,
                "arpl %sp, (%ebp);jae  <.text+>;imull $, (%esi), %ebp;popal;je  <.text+>": 1,
                "jae  <.text+>;jb  <.text+>;bound (%edx), %ebp;arpl %si, (%ecx,%ecx,);outsw (%esi), %dx": 1,
                "popal;je  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx;incl %ecx": 1,
                "imull $, (%esi), %ebp;jae  <.text+>;popal;incl %edx;outsl (%esi), %dx": 1,
                "incl %edx;outsl (%esi), %dx;js  <.text+>;addb %dh, (%ebp);jb  <.text+>": 1,
                "jb  <.text+>;xorb (%esi), %ch;insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %al, (%eax)": 1,
                "addb %al, (%eax);andb %al, (%eax);andb %al, (%eax);andb %al, (%eax);andb %al, (%eax)": 1,
                "adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax)": 26,
                "addb %dl, (%eax);addb %dl, (%eax);addb %dl, (%eax);addb %dl, (%eax);addb %ah, (%eax)": 1,
                "adcb %al, (%eax);addl $, (%ecx);addl $, (%ecx);addl %eax, (%ecx);addl %eax, (%ecx)": 1,
                "adcb %al, (%eax);addb $-, (%ecx);addl %eax, -(%edx);addl %eax, (%edx);addl %eax, (%edx)": 1,
                "adcb %al, (%eax);adcb %al, (%eax);adcb $, %al;adcb %al, (%eax);adcb %al, (%eax)": 1,
                "addb (%ecx), %al;addb (%ecx), %al;addb (%ecx), %al;addb (%ecx), %al;addl %eax, (%ecx)": 1,
                "addb (%ecx), %al;addb (%ecx), %al;addb (%ecx), %al;addl %eax, (%ecx);addb %al, (%eax)": 1,
                "insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <.text+>;andb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ah, (%ebp);jne  <.text+>;jo  <.text+>;addb %al, (%eax);imull $, %fs:(%ecx), %esp": 1,
                "jb  <.text+>;andb %ah, (%edx);jb  <.text+>;outsl (%esi), %dx;jbe  <.text+>": 2,
                "outsl (%esi), %dx;jbe  <.text+>;jb  <.text+>;insb %dx, %es:(%edi);outsl (%esi), %dx": 2,
                "pushl $;popal;jb  <.text+>;andb %ch, (%ebx);jns  <.text+>": 1,
                "andb %ah, (%ecx);jb  <.text+>;popal;jns  <.text+>;imull $, (%esi), %ebp": 1,
                "insb %dx, %es:(%edi);orl $, %eax;outsl (%esi), %dx;jne  <.text+>;popl %edi": 1,
                "popal;je  <.text+>;subb %ch, (%ecx);andb %ah, (%esi);imull $, (%ebp), %ebp": 1,
                "popl %edi;outsl %gs:(%esi), %dx;imull $, (%esi), %ebp;cmpb (%ecx,%ecx,), %bl;decl %ebp": 1,
                "addb %al, (%eax);addb %al, (%esi);imull $, (%ebp), %ebp;jb  <.text+>;insb %dx, %es:(%edi)": 1,
                "jb  <.text+>;orb (%eax), %al;addb %al, (%eax);decl %esi;pushl %esp": 1,
                "outsb (%esi), %dx;je  <.text+>;outsl (%esi), %dx;xorb $, %al;xorl %ebp, (%esi)": 1,
                "jae  <.text+>;addb %al, (%eax);addb %bl, (%esi,%ebp,);imull $, (%edi), %ebp;addb %al, (%eax)": 1,
                "incl %esp;decl %ebp;cmpb (%ecx), %cl;imull $, (%ecx,%ebp,), %esi;incl %esp": 1,
                "je  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx;andb %ah, (%esi);imull $, (%ebx,%esi,), %ebp": 1,
                "incl %esp;popaw;jne  <.text+>;je  <.text+>;andl $, %eax": 1,
                "pushl %ebx;jns  <.text+>;arpl %dx, (%edi);imull $, (%ebp), %esi;pushl %esp": 1,
                "jne  <.text+>;outsl (%esi), %dx;incl %ebx;insb %dx, %es:(%edi);outsl (%esi), %dx": 2,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;jae  <.text+>;addb %al, (%eax);pushl %eax": 1,
                "je  <.text+>;jb  <.text+>;jne  <.text+>;outsl (%esi), %dx;incl %ebx": 1,
                "outsb (%esi), %dx;imulw $, (%edi), %sp;addb %al, (%esi);jb  <.text+>;pushl %edx": 1,
                "jb  <.text+>;outsb (%esi), %dx;je  <.text+>;jb  <.text+>;imull $, (%edi), %ebp": 4,
                "outsb (%esi), %dx;jae  <.text+>;insb %dx, %es:(%edi);addb %al, %gs:(%eax);addb %al, (%eax)": 1,
                "popl %esp;andb $, %al;incl %esp;decl %ebp;decl %esp": 3,
                "decl %ebp;decl %esp;pushl %eax;pushl %esp;xorb (%eax), %al": 1,
                "xorl %eax, (%eax);addb %al, (%eax);addb %cl, (%eax,%edx,);xorb (%eax), %al;addb %al, (%eax)": 1,
                "incl %ecx;pushl %edx;incl %ebx;js  <.text+>;addb %al, %ss:(%eax)": 1,
                "pushl %edi;incl %ecx;pushl %edx;incl %ebp;popl %esp": 2,
                "je  <.text+>;outsl (%esi), %dx;imull $, (%esi), %ebp;incl (%esi);decl %esi": 1,
                "addb %al, (%eax);addb %bh, %bh;incl %esi;decl %edi;decl %esi": 1,
                "popl %esp;popal;arpl %si, %cs:(%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bl, (%eax,%eax);addb %ah, (%ebp);jbe  <.text+>;imull $, (%eax), %eax;popl %esp": 1,
                "popl %esp;incl %ecx;cmpb (%eax), %al;addb %al, (%edx,%esi,);jbe  <.text+>": 1,
                "addb %al, (%edx,%esi,);jbe  <.text+>;andb %ah, ;addb %dl, (%ebp);imull $, (%esi), %ebp": 1,
                "jbe  <.text+>;andb %ah, ;addb %dl, (%ebp);imull $, (%esi), %ebp;outsb (%esi), %dx": 1,
                "pushl %ebx;andb %ah, (%ecx,%ebp,);imull $, (%ebp), %esp;subb $, %al;incl %ebx": 1,
                "imull $, (%ebp), %esp;subb $, %al;incl %ebx;andb %cl, (%eax);pushl %edx": 1,
                "andb %bh, %gs:;orb (%eax), %al;addb %al, (%eax);popl %esp;popl %esp": 1,
                "addb %bl, (%esp,%eax,);jae  <.text+>;jbe  <.text+>;arpl %sp, (%ebp);popl %esp": 1,
                "decl %ebp;andb %dh, (%esi,%ebp);xorb %al, (%eax);pushl %edi;decl %ecx": 1,
                "pushl %edi;pushl %ebx;andb %cl, (%esi);andb %ah, (%eax);xorl (%esi), %ebp": 1,
                "pushl %edi;pushl %ebx;andb %dh, (%edx);cmpb %dh, (%esi);andb %dh, (%ebx)": 1,
                "int;addl (%edi), %ecx;incl %ebx;addb %ch, (%edi);outsb (%esi), %dx": 1,
                "incl %edi;je  <.text+>;outsl (%esi), %dx;insl %dx, %es:(%edi);insl %dx, %es:(%edi)": 2,
                "jbe  <.text+>;pushl %esi;js  <.text+>;decl %ebp;jne  <.text+>": 1,
                "pushl %edx;insl %dx, %es:(%edi);outsl (%esi), %dx;jbe  <.text+>;decl %edi": 1,
                "outsl (%esi), %dx;jbe  <.text+>;decl %edi;jo  <.text+>;outsb (%esi), %dx": 1,
                "pushl %edi;jb  <.text+>;je  <.text+>;decl %esi;popal": 1,
                "jb  <.text+>;popal;decl %esi;popal;insl %dx, %es:(%edi)": 1,
                "imull $, (%eax), %esi;outsb (%esi), %dx;imull $, (%ecx,%ebp,), %esi;addb %al, %fs:(%eax);addb %dl, (%esi)": 1,
                "jb  <.text+>;addb %al, (%eax);addb %ch, (%ebp);imull $, %fs:(%edi), %ecx;jb  <.text+>": 1,
                "addb %ch, (%ebp);imull $, %fs:(%edi), %ecx;decl %ebp;jae  <.text+>;addb %al, (%eax)": 1,
                "imull $, (%ecx,%ebp,), %esp;outsl (%esi), %dx;jae  <.text+>;addb %al, (%eax);addb %al, (%eax)": 1,
                "jae  <.text+>;addb %al, (%eax);addb %al, (%eax);insl %dx, %es:(%edi);imull $, (%ecx,%ebp,), %esp": 1,
                "imull $, %fs:(%edi), %ecx;outsb (%esi), %dx;addb %ch, (%ebp);imull $, %fs:(%edi), %ecx;incl %esp": 1,
                "insb %dx, %es:(%edi);jne  <.text+>;addb %al, %gs:(%eax);addb %al, (%eax);ja  <.text+>": 2,
                "pushl %eax;jb  <.text+>;jo  <.text+>;jb  <.text+>;decl %eax": 1,
                "addb %dh, (%edi);jbe  <.text+>;decl %edi;jne  <.text+>;pushl %edx": 1,
                "pushl %edx;jae  <.text+>;popal;jb  <.text+>;addb %al, (%eax)": 1,
                "decl %edi;jo  <.text+>;outsb (%esi), %dx;addb %dh, (%edi);jbe  <.text+>": 1,
                "addb %al, %gs:(%eax);addb %al, (%eax);pushl %edi;decl %ecx;decl %esi": 1,
                "cmpb (%eax), %ah;addb %al, (%eax);addb %ah, ;cmpb (%eax,%edi,), %bl;jae  <.text+>": 1,
                "pushl $;arpl %ax, %cs:(%eax);addb %al, (%eax);addb %al, (%ebx);decl %esi": 1,
                "decl %edi;pushl %ebp;pushl %esp;andb $, %al;incl %ebx": 1,
                "movl $, %ecx;orl (%edi,%ecx), %eax;addb %al, (%eax);addb %al, (%eax);movl $, %eax": 1,
                "pushl %ebx;incl %edx;cmpb (%eax), %ah;decl %eax;decl %ecx": 1,
                "andb %dl, (%ebx);decl %esi;incl %edi;decl %esp;incl %ebp": 1,
                "andb %dl, (%ebx);incl %ebp;incl %ebp;incl %esp;andb %al, (%ecx)": 1,
                "cmpb (%eax), %ah;incl %ecx;incl %esp;decl %esp;decl %ecx": 1,
                "pushl %ebx;outsl (%esi), %dx;je  <.text+>;arpl %di, (%edx);andb %cl, (%esi)": 1,
                "addb %al, %fs:(%bx,%si);addb %al, (%eax);js  <.text+>;js  <.text+>;bound (%edi), %esp": 1,
                "addb %bh, (%eax);js  <.text+>;bound (%edi), %esp;outsl (%esi), %dx;je  <.text+>": 1,
                "outsb (%esi), %dx;je  <.text+>;addb %bh, (%eax);js  <.text+>;bound (%edi), %esp": 1,
                "decl %ecx;outsb (%esi), %dx;je  <.text+>;js  <.text+>;js  <.text+>": 1,
                "bound (%edi), %esp;jb  <.text+>;arpl %sp, (%ebp);jbe  <.text+>;outsb (%esi), %dx": 1,
                "js  <.text+>;bound (%edi), %esp;outsl (%esi), %dx;jae  <.text+>;jo  <.text+>": 1,
                "imull $, (%eax,%eax), %esi;incl %ecx;pushl %eax;decl %ecx;addb %dh, (%edi)": 1,
                "xorb %bh, (%edi);aas;addb %al, (%eax);addb %al, (%eax);aas": 1,
                "addb %dh, (%esi);popal;pushl $;addb %al, (%edi);je  <.text+>": 1,
                "je  <.text+>;js  <.text+>;outsb %gs:(%esi), %dx;incl %ebp;jb  <.text+>": 1,
                "js  <.text+>;outsb %gs:(%esi), %dx;incl %ebp;jb  <.text+>;outsl (%esi), %dx": 1,
                "arpl %bp, (%ebx);outsb (%esi), %dx;insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %bp, (%ebx)": 1,
                "imull $, (%ebp), %ebp;je  <.text+>;andb %cl, (%esi);ja  <.text+>;incl %esi": 1,
                "je  <.text+>;pushl %esi;jb  <.text+>;jns  <.text+>;decl %edi": 1,
                "addb %al, (%esi);outsb (%esi), %dx;andb %al, %fs:(%esi);jb  <.text+>;je  <.text+>": 1,
                "jae  <.text+>;addb %al, (%eax);addb %al, (%eax);incl %ebp;js  <.text+>": 1,
                "arpl %sp, (%eax);pushl %eax;jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>": 1,
                "pushl %eax;jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;addb %al, (%eax)": 2,
                "jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;addb %al, (%eax);addb %dl, (%edx)": 1,
                "jae  <.text+>;addb %al, (%eax);addb %dl, (%edx);popal;insb %dx, %es:(%edi)": 1,
                "incl %ecx;insb %dx, %es:(%edi);insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%eax)": 2,
                "insb %dx, %es:(%edi);addb %al, %gs:(%eax);addb %al, (%eax);incl %esp;jne  <.text+>": 1,
                "decl %ebp;outsl (%esi), %dx;jbe  <.text+>;andb %al, (%esi);insb %dx, %es:(%edi)": 1,
                "je  <.text+>;je  <.text+>;incl %ebx;outsl (%esi), %dx;jne  <.text+>": 1,
                "jae  <.text+>;jb  <.text+>;incl %ecx;jb  <.text+>;addb %dl, (%ebx)": 1,
                "incl %ecx;jb  <.text+>;addb %dl, (%ebx);je  <.text+>;jae  <.text+>": 1,
                "insb %dx, %es:(%edi);andb %cl, %gs:(%esi);insl %dx, %es:(%edi);addb %al, %gs:(%esi);incl %edx": 1,
                "addb %al, %gs:(%esi);incl %edx;andb %dl, (%edx);outsb (%esi), %dx;outsl %fs:(%esi), %dx": 1,
                "andb %dl, (%edi);imull $, (%ebp), %esi;imull $, (%eax), %eax;incl %esi;incl %ebx": 1,
                "insl %dx, %es:(%edi);andb %dl, (%edx);popal;andb %al, %fs:(%edx);outsl (%esi), %dx": 1,
                "popal;andb %al, %fs:(%edx);outsl (%esi), %dx;arpl %bp, (%ebx);addb %al, (%eax)": 1,
                "arpl %bp, (%ebx);addb %al, (%eax);incl %ebx;jb  <.text+>;popal": 1,
                "incl %ebx;jb  <.text+>;popal;je  <.text+>;andb %dl, (%eax)": 1,
                "addb %al, %fs:(%eax);addb %al, (%esi);incl %edx;andb %al, (%edi);je  <.text+>": 1,
                "incl %edx;addb %dh, (%ecx);incl %ebp;pushl $;addb %dh, (%ecx)": 1,
                "incl %ebp;pushl $;addb %dh, (%ecx);incl %esp;pushl $": 1,
                "jb  <.text+>;jbe  <.text+>;addb %al, (%eax);addb %dh, (%ecx);cmpb %ch, (%eax)": 1,
                "addb %al, (%eax);pushl %ebx;je  <.text+>;incl %esp;popaw": 1,
                "je  <.text+>;incl %esp;jb  <.text+>;jbe  <.text+>;addb %al, (%esi)": 1,
                "addb %al, %fs:(%eax);addb %al, (%ebx);arpl %bp, %gs:(%ebx);decl %ebx;jns  <.text+>": 1,
                "insb %dx, %es:(%edi);insb %dx, %es:(%edi);popal;jb  <.text+>;andb %cl, (%edi)": 1,
                "insb %dx, %es:(%edi);popal;jb  <.text+>;andb %cl, (%edi);je  <.text+>": 1,
                "pushl %edx;popal;andb %cl, %fs:(%ebx);andb %dh, %fs:(%edi);je  <.text+>": 1,
                "jb  <.text+>;insl %dx, %es:(%edi);addb %al, (%eax);addb %bl, (%esi,%ebp,);outsl %fs:(%esi), %dx": 1,
                "popl %eax;cmpl $, %eax;andb %al, (%edx);cmpl $, %eax;andb %al, (%ebx)": 1,
                "cmpl $, %eax;andb %al, (%ebx);cmpl $, %eax;orb (%eax), %al;addb %al, (%eax)": 1,
                "decl %ebp;addb %al, (%ebx);incl %esi;pushl %ebx;addb %al, (%eax)": 1,
                "andl $, %eax;decl %esi;pushl %ebp;decl %esp;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ch, (%esi);addb %al, (%eax);addb %cl, (%esi);je  <.text+>": 1,
                "popl %esp;addb %bl, (%eax,%eax);addb %bl, (%eax,%eax);addb %ch, (%esi);addb %bl, (%eax,%eax)": 1,
                "jne  <.text+>;addb %dl, (%ebp);imull $, (%ebp), %ebp;outsb (%esi), %dx;je  <.text+>": 1,
                "pushl %ebx;orb (%eax), %al;andl $, %eax;addb %al, (%eax);addb %cl, (%esi)": 1,
                "popl %edi;decl %esp;decl %edi;incl %edi;addb %al, (%eax)": 1,
                "decl %edi;decl %esi;pushl %eax;pushl %edx;decl %edi": 2,
                "pushl %edx;pushl %ebx;pushl %eax;pushl %edx;decl %edi": 1,
                "jae  <.text+>;insl %dx, %es:(%edi);incl %esp;jb  <.text+>;jbe  <.text+>": 1,
                "addb %al, (%eax);pushl %esp;insl %dx, %es:(%edi);jo  <.text+>;pushl %esp": 1,
                "jae  <.text+>;jae  <.text+>;addb %al, %cs:(%eax);addb %ch, (%esi);jo  <.text+>": 1,
                "xorb %dh, (%ecx);pushl %ebx;popl %ecx;pushl %ebx;addb %al, (%eax)": 1,
                "incl %ebx;decl %edi;decl %ebp;addb %al, (%eax);addb %al, (%edi,%ebp,)": 1,
                "addb %al, (%eax);addb %dh, (%eax);js  <.text+>;insb %dx, %es:(%edi);js  <.text+>": 1,
                "addb %bh, %bh;incl (%eax);addb %al, (%eax);addb %al, -(%ecx);addb %cl, (%edi)": 1,
                "incl (%eax);addb %al, (%eax);addb %dl, -(%esi);addb $, %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);movb , %al;insl %dx, %es:(%edi)": 1,
                "pushl %edx;popal;insb %dx, %es:(%edi);insb %dx, %es:(%edi);outsl (%esi), %dx": 1,
                "decl %ecx;incl %ecx;decl %esp;incl %ebx;decl %edi": 1,
                "imull $, (%ebx), %esi;addb %cl, (%ecx);insb %dx, %es:(%edi);popal;insb %dx, %es:(%edi)": 1,
                "outsb (%esi), %dx;outsl (%esi), %dx;je  <.text+>;insl %dx, %es:(%edi);jo  <.text+>": 1,
                "outsb (%esi), %dx;andb %ch, (%esi);je  <.text+>;imull $, (%ebp), %ebp;outsb (%esi), %dx": 1,
                "jae  <.text+>;jne  <.text+>;arpl %sp, (%ebp);popal;insb %dx, %es:(%edi)": 1,
                "subl $, %eax;andb %ah, (%esi);insb %dx, %es:(%edi);andb %dh, %gs:(%ebx);jae  <.text+>": 1,
                "jb  <.text+>;jae  <.text+>;addb %dl, (%eax);jb  <.text+>;imull $, (%ebx), %esi": 1,
                "imull $, (%ebp), %esp;outsl (%esi), %dx;je  <.text+>;outsb %gs:(%esi), %dx;outsl (%esi), %dx": 1,
                "jae  <.text+>;jne  <.text+>;arpl %sp, (%ebp);je  <.text+>;insl %dx, %es:(%edi)": 1,
                "imull $, (%ecx), %ebp;addb %al, (%eax);decl %esi;outsl (%esi), %dx;andb %ah, (%ebx)": 1,
                "insb %dx, %es:(%edi);andb %ah, %gs:(%ebp);arpl %si, (%edx);jo  <.text+>;outsl (%esi), %dx": 1,
                "je  <.text+>;je  <.text+>;outsl (%esi), %dx;andb %ch, (%edi,%ebp,);addb %al, (%bx,%si)": 1,
                "je  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx;andb %ch, (%esi);je  <.text+>": 1,
                "jo  <.text+>;jb  <.text+>;imull $, (%esp,%esi,), %esi;andb %ah, (%ebp);jb  <.text+>": 1,
                "pushl %es;addb %al, (%ecx);addb %al, (%eax);adcb %al, (%eax);addl (%esi), %eax": 1,
                "addb %al, (%eax);addb %cl, (%eax);pushal;pushl $;addb %al, (%eax)": 1,
                "addb %cl, (%eax);pushal;pushl $;addb %al, (%eax);jo  <.text+>": 1,
                "pushal;pushl $;addb %al, (%eax);jo  <.text+>;js  <.text+>": 1,
                "orb %cl, (%eax);addb %al, (%eax);orb %al, (%eax);orb %al, (%eax);popl %es": 1,
                "popl %es;orb %al, (%eax);addb %al, (%eax);subb %al, (%eax);outsb (%esi), %dx": 1,
                "addb %ch, (%eax);outsb (%esi), %dx;jne  <.text+>;insb %dx, %es:(%edi);subl %eax, (%eax)": 1,
                "addb %ah, (%edx);outsl (%esi), %dx;jae  <.text+>;jb  <.text+>;insl %dx, %es:(%edi)": 2,
                "jae  <.text+>;popl %esp;addb %cl, (%eax,%eax);addb %cl, (%ebp);pushl %ebx": 1,
                "pushl $;jae  <.text+>;arpl %bx, (%eax,%edi,);popl %edi;insl %dx, %es:(%edi)": 1,
                "cmpb , %ah;decl %edi;pushl %eax;cmpb , %ah;andl $, %eax": 1,
                "rolb %bl;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %ch, -(%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %ch, -(%eax);movb $, %dh;adcl $, %eax": 1,
                "int;int;int;int;int": 2253,
                "pushl %ebp;movl %esp, %ebp;calll - <.text+>;cmpl $, (%ebp);je  <BlockWOWIdle+>": 1,
                "andb $-, ;calll - <.text+>;popl %ebp;retl $;int": 1,
                "int;int;int;movl %fs:, %eax;movl (%eax), %eax": 64,
                "incl ;cmpl $, ;jne  <getMSW+>;movl , %eax;calll *(%eax)": 1,
                "jne  <getMSW+>;movl , %eax;calll *(%eax);movl $, ;retl": 1,
                "jl  <getMSW+>;cmpl , %ecx;ja  <getMSW+>;pushl %esi;calll  <setDX+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx": 143,
                "cltd;pushl $-;pushl %edx;pushl %eax;calll  <getDI+>": 1,
                "movl %edx, -(%ebp);movl $, %edi;jmp  <getMSW+>;cmpl $, %ebx;jne  <getMSW+>": 1,
                "pushl $;sete %al;pushl $;pushl %edi;incl %eax": 1,
                "calll *%esi;movl %eax, %ebx;cmpl $, %ebx;jne - <getMSW+>;jmp  <getMSW+>": 1,
                "pushl %ebx;jmp  <getMSW+>;cmpl $, %ebx;jne  <getMSW+>;calll  <host_com_close+>": 1,
                "cmpl %eax, ;pushl $;sete %al;pushl $;pushl $": 1,
                "pushl %eax;calll *%esi;movl %eax, %ebx;testl %ebx, %ebx;jne - <getMSW+>": 1,
                "movl , %eax;testl %eax, %eax;je  <DispatchInterrupts+>;pushl %eax;calll  <SuspendTimerThread+>": 1,
                "calll  <SuspendTimerThread+>;testb $, ;je  <DispatchInterrupts+>;andl $-, ;calll - <.text+>": 1,
                "testl %eax, %eax;je  <DispatchInterrupts+>;calll - <getMSW>;testb $, %al;je  <DispatchInterrupts+>": 1,
                "lock;andl $-, (%eax);calll  <VDDAllocateDosHandle+>;jmp - <.text+>;int": 1,
                "cmpb $, (%eax);je  <DispatchInterrupts+>;calll  <DispatchInterrupts+>;testl %eax, %eax;movl , %ecx": 1,
                "je  <DispatchInterrupts+>;calll  <DispatchInterrupts+>;testl %eax, %eax;movl , %ecx;je  <DispatchInterrupts+>": 1,
                "movl %esp, %ebp;pushl %ecx;movl , %eax;pushl %ebx;xorl %ebx, %ebx": 2,
                "movl %esi, ;pushl %esi;calll  <DispatchInterrupts+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "cmpl %esi, ;jne  <DispatchInterrupts+>;cmpl %esi, ;jne  <DispatchInterrupts+>;cmpl %esi, ": 1,
                "decl ;jne  <DispatchInterrupts+>;movl , %eax;cmpl %esi, %eax;je  <DispatchInterrupts+>": 1,
                "pushl %edi;xorl %edi, %edi;movl $, %esi;cmpb $, (%esi);je  <DispatchInterrupts+>": 1,
                "calll  <host_com_close+>;incl %edi;addl $, %esi;cmpl $, %edi;jl - <DispatchInterrupts+>": 1,
                "movl %edx, -(%ebp);calll  <getDI+>;pushl %esi;pushl %edi;pushl %edx": 1,
                "movl -(%ebp), %ecx;movl %edi, (%eax);movl %ecx, (%eax);movl (%ebp), %esi;testl %esi, %esi": 1,
                "calll  <getDI+>;addl %edi, %eax;adcl -(%ebp), %edx;movl %eax, (%esi);movl %edx, (%esi)": 1,
                "cmpl (%ecx), %eax;jne  <DispatchInterrupts+>;movl %esi, (%ebp);jmp  <DispatchInterrupts+>;movl (%edi), %eax": 1,
                "testl %ebx, %ebx;jne  <DispatchInterrupts+>;xorl %edx, %edx;movl , %ebx;movw (%ebx), %bx": 1,
                "subl %esi, %edx;movl %edx, (%ecx);popl %edi;popl %esi;popl %ebx": 1,
                "movl (%ebp), %esi;leal (%esi), %eax;pushl %eax;pushl $;pushl ": 1,
                "jne - <DispatchInterrupts+>;testl %eax, %eax;je  <DispatchInterrupts+>;movl (%eax), %eax;jmp  <DispatchInterrupts+>": 1,
                "pushl %edi;movw (%eax), %di;movzwl %si, %ecx;shll $, %ecx;movzwl %di, %edx": 1,
                "movzwl %di, %edx;addl %eax, %ecx;movzbw (%edx,%ecx), %bx;calll  <getIF>;testl %eax, %eax": 1,
                "calll  <getIF>;testl %eax, %eax;je  <DispatchInterrupts+>;cmpw , %si;jne  <DispatchInterrupts+>": 1,
                "leal (%eax), %ecx;xorl %ebx, %ebx;cmpl $, (%ecx);jne  <DispatchInterrupts+>;movw %bx, (%ecx)": 1,
                "jne  <DispatchInterrupts+>;andb $-, (%eax);pushl $;pushl $;calll  <host_ExitThread+>": 1,
                "pushl $;calll  <demGetPhysicalDriveType+>;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %eax;calll - <DispatchInterrupts+>;leal -(%ebp), %eax;pushl %eax;movl , %eax": 1,
                "int;int;int;calll  <DispatchInterrupts+>;movl $, ": 1,
                "movl $, ;jmp - <DispatchInterrupts+>;int;int;int": 1,
                "jne  <DispatchInterrupts+>;leal (%esi), %eax;movl (%eax), %ecx;cmpl %ebx, %ecx;je  <DispatchInterrupts+>": 1,
                "jne  <DispatchInterrupts+>;cmpl %ebx, (%esi);jne  <DispatchInterrupts+>;pushl -(%ebp);calll  <WaitIfIdle+>": 1,
                "cmpl %ebx, (%esi);jne  <DispatchInterrupts+>;pushl -(%ebp);calll  <WaitIfIdle+>;jmp  <DispatchInterrupts+>": 1,
                "jne  <DispatchInterrupts+>;pushl -(%ebp);calll  <WaitIfIdle+>;jmp  <DispatchInterrupts+>;cmpl %ebx, (%esi)": 1,
                "movl %ebx, (%esi);decl (%esi);jns  <DispatchInterrupts+>;movl $, (%esi);cmpl %ebx, (%esi)": 1,
                "movl (%ebp), %ecx;jne  <DispatchInterrupts+>;cmpl , %ecx;je  <DispatchInterrupts+>;pushl %esi": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);jae  <DispatchInterrupts+>;movl %esi, ;movl %esi, ": 1,
                "int;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax;shrl $, %eax": 12,
                "pushl $;pushl %eax;calll  <SimpGetVDMPointer>;movswl (%ebp), %esi;movzwl (%eax), %ecx": 1,
                "jne  <VDDRetrieveNtHandle+>;xorl %eax, %eax;jmp  <VDDRetrieveNtHandle+>;movl , %eax;xorl %ecx, %ecx": 1,
                "pushl %eax;calll  <SimpGetVDMPointer>;movw (%eax), %cx;cmpw %cx, %si;jae - <VDDRetrieveNtHandle+>": 1,
                "leal (%ecx,%eax), %eax;cmpw $, (%eax);je - <VDDRetrieveNtHandle+>;movl (%ebp), %ecx;testl %ecx, %ecx": 1,
                "movl (%eax), %eax;movl (%eax), %eax;andl $, %eax;pushl %eax;movzwl (%esi), %eax": 3,
                "pushl %eax;calll  <VdmMapFlat>;movzbl (%eax), %eax;incw (%esi);cmpl $, %eax": 1,
                "int;int;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %ecx": 2,
                "movl %eax, -(%ebp);pushl $;shll $, %eax;pushl %eax;calll - <SimpGetVDMPointer>": 11,
                "cmpw , %bx;movl %eax, %edi;jae  <SimpGetVDMPointer+>;movl -(%ebp), %eax;movl , %ecx": 1,
                "movw (%edi), %ax;movw %ax, (%esi);movzwl (%edi), %eax;popl %edi;movl %eax, (%esi)": 1,
                "movw (%esi), %cx;movw %cx, -(%ebp);calll *%eax;movl -(%ebp), %eax;movl %eax, (%edi)": 1,
                "popl %edi;popl %esi;leave;retl;int": 29,
                "int;int;int;int;andl $, ": 11,
                "movw %cx, (%eax);popl %ebp;retl $;int;int": 13,
                "movl , %eax;movl %eax, (%esi);movl , %eax;andl $, %eax;movl %eax, (%esi)": 1,
                "movl , %eax;andl $, %eax;movl %eax, (%esi);popl %esi;jmp  <SetShadowDescriptorEntries+>": 1,
                "movl $, %edi;testb $, ;je  <setSP+>;calll - <DispatchInterrupts>;calll - <getMSW>": 1,
                "orl %edi, (%esi);pushl %ebx;pushl %ebx;calll *;cmpl %ebx, %eax": 1,
                "movl (%eax), %esi;jne  <setSP+>;calll - <getIF>;negl %eax;sbbl %eax, %eax": 1,
                "sbbl %eax, %eax;andl $, %eax;movl %eax, -(%ebp);movl , %eax;cmpl %ebx, %eax": 1,
                "movl %eax, -(%ebp);movl , %eax;cmpl %ebx, %eax;je  <setSP+>;calll *%eax": 1,
                "addl $, %ecx;movzwl %si, %eax;pushl $;cltd;popl %edi": 1,
                "jae  <getDX+>;movl %edx, %ecx;shrl %cl, %ebx;leal (%edx,%eax), %ecx;notl %ebx": 1,
                "movl %ecx, %edx;sarl $, %edx;decl %edx;cmpl %esi, %edx;movl %ecx, -(%ebp)": 1,
                "movl (%ecx), %ecx;movl %ecx, (%esi);movl (%ebp), %esi;jmp  <getDX+>;movl (%ebp), %ebx": 1,
                "movl (%ebp), %esi;jmp  <getDX+>;movl (%ebp), %ebx;cmpl $, -(%ebp);jne  <getDX+>": 1,
                "cmpb $, (%ebp);jne  <getDX+>;movl %edx, %ecx;movl $, %ebx;shrl %cl, %ebx": 1,
                "jne  <getDX+>;movl %edx, %ecx;movl $, %ebx;shrl %cl, %ebx;movl (%ebp), %ecx": 1,
                "leal (%eax,%edi,), %eax;orl %ebx, (%eax);jmp  <getDX+>;cmpb $, (%ebp);jne  <getDX+>": 1,
                "orl %edx, (%eax);movl -(%ebp), %eax;movl %eax, (%esi);movl %eax, -(%eax,%esi);movl -(%ebp), %eax": 1,
                "movl %eax, (%esi);movl %eax, -(%eax,%esi);movl -(%ebp), %eax;decl (%eax);jne  <getDX+>": 1,
                "je  <getDX+>;movl , %ecx;movl , %esi;pushl $;shll $, %ecx": 1,
                "movl , %ecx;movl , %esi;pushl $;shll $, %ecx;addl (%eax), %ecx": 1,
                "pushl $;shll $, %ecx;addl (%eax), %ecx;movl $, %ebx;pushl %ebx": 1,
                "movl , %eax;pushl (%eax);pushl $;pushl ;calll *": 1,
                "movl %eax, %ecx;movl , %eax;subl %eax, %ecx;leal -(%ecx,%edx), %ecx;pushl %ecx": 1,
                "calll *;popl %esi;popl %ebp;retl;int": 2,
                "shll $, %esi;pushl (%esi);calll  <getCF+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "leal (%eax), %edi;leal -(%ebp), %eax;pushl %eax;pushl (%esi);calll  <getCX+>": 1,
                "calll  <call_ica_hw_interrupt+>;pushl $;pushl %edi;calll  <call_ica_hw_interrupt+>;jmp - <getIP+>": 1,
                "jbe  <getIP+>;leal -(%ebp), %eax;pushl %eax;pushl %ebx;calll  <getES+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi": 2,
                "jmp - <setIP+>;addw %di, (%esi);movzwl %di, %eax;imull $, %eax, %eax;addl %edx, %eax": 1,
                "movl , %eax;movzwl (%eax), %eax;shll $, %eax;pushl %edi;pushl %eax": 1,
                "jne  <VDDAllocateDosHandle+>;movw $, %ax;jmp  <VDDAllocateDosHandle+>;pushl %ebx;pushl %edi": 1,
                "jmp  <VDDAllocateDosHandle+>;pushl %ebx;pushl %edi;pushl (%esi);calll - <SimpGetVDMPointer>": 1,
                "cmpl %edi, %eax;movl %edi, -(%ebp);jle  <VDDAllocateDosHandle+>;xorl %ecx, %ecx;cmpb $-, (%ecx,%ebx)": 1,
                "pushl $;xorl %eax, %eax;popl %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "movl (%ebp), %eax;testl %eax, %eax;movw $, (%edx);je  <VDDAllocateDosHandle+>;movl %edx, (%eax)": 1,
                "movw , %cx;addw %cx, (%eax);movw %di, ;movw %di, (%esi);popl %edi": 1,
                "incb -(%ebp);movb -(%ebp), %al;cmpb , %al;jb - <VDDAllocateDosHandle+>;popl %esi": 1,
                "cmpb , %al;jb - <VDDAllocateDosHandle+>;popl %esi;leave;retl $": 1,
                "testl %esi, %esi;jne - <VDDAllocateDosHandle+>;testl %esi, %esi;je  <VDDAllocateDosHandle+>;pushl (%esi)": 1,
                "testl %eax, %eax;je  <VDDAllocateDosHandle+>;movl (%esi), %ecx;movl %ecx, (%eax);jmp  <VDDAllocateDosHandle+>": 1,
                "movl , %eax;movl $, %ecx;cmpl %ecx, %eax;je  <VDDAllocateDosHandle+>;movzwl (%ebp), %edx": 1,
                "movl $, %ecx;cmpl %ecx, %eax;je  <VDDAllocateDosHandle+>;movzwl (%ebp), %edx;cmpl (%eax), %edx": 1,
                "cmpl $-, %eax;je  <VDDAllocateDosHandle+>;pushl %ebx;pushl %eax;calll  <SetShadowDescriptorEntries+>": 1,
                "popl %ecx;addl %eax, %esi;subl %ecx, %eax;pushl %eax;calll  <setESP>": 1,
                "movl (%ebp), %eax;je  <VDDAllocateDosHandle+>;cmpl $-, %eax;jne  <VDDAllocateDosHandle+>;movl $, %ecx": 1,
                "cmpl %ecx, %eax;jae  <VDDAllocateDosHandle+>;movl %ecx, %eax;pushl ;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;jge  <VDDAllocateDosHandle+>;xorl %esi, %esi;jmp  <VDDAllocateDosHandle+>;cmpl $, (%ebp)": 1,
                "sarl $, %eax;movb %al, %cl;shlb $, %cl;subb %cl, %bl;movzbl %bl, %ecx": 1,
                "calll  <call_ica_hw_interrupt>;calll - <.text+>;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %edi;calll - <.text+>": 1,
                "cmpl $-, %edi;jne  <VDDAllocateDosHandle+>;notb %bl;andb %bl, ;orl %eax, %esi": 1,
                "movzwl , %esi;addl %edi, %esi;pushl %edi;calll  <SoftPcEoi+>;testl %eax, %eax": 1,
                "xorl %eax, %eax;incl %eax;movl %edi, %ecx;shll %cl, %eax;orl %eax, ": 1,
                "orl %eax, ;popl %ebx;calll - <.text+>;popl %edi;movl %esi, %eax": 1,
                "pushl %ebx;orb (%eax), %dl;notb %dl;andb (%eax), %dl;testb $, (%eax)": 1,
                "pushl %edi;movzwl (%eax), %edi;pushl %esi;movl %edi, %esi;andl $, %esi": 1,
                "imull $, %esi, %esi;addl $, %esi;andl $, (%esi);calll - <VDDAllocateDosHandle+>;movzbl %al, %ebx": 1,
                "movb $, %al;movl %ebx, %ecx;shlb %cl, %al;orb %al, (%esi);decl (%esi,%ebx,)": 1,
                "pushl %ebp;movl %esp, %ebp;calll - <.text+>;movl (%ebp), %eax;imull $, %eax, %eax": 1,
                "calll - <VDDAllocateDosHandle+>;testb %bl, (%ebp);je  <VDDAllocateDosHandle+>;movl (%ebp), %eax;pushl $-": 1,
                "movl (%ebp), %eax;pushl $-;leal (%edi,%eax,), %eax;pushl %eax;calll  <demGetPhysicalDriveType+>": 1,
                "int;int;movl %edi, %edi;pushl %esi;movl $, %esi": 5,
                "pushl ;calll *;pushl %esi;calll *;popl %esi": 3,
                "pushl %esi;calll *;popl %esi;retl;int": 4,
                "pushl %esi;calll  <host_ExitThread+>;pushl %esi;calll  <host_ExitThread+>;pushl %esi": 1,
                "movl %eax, (%esi);movl %eax, (%esi);movl %eax, (%esi);popl %esi;jmp  <SetShadowDescriptorEntries+>": 1,
                "andl $, %eax;pushl %eax;pushl (%ebp);calll  <demGetPhysicalDriveType+>;xorl %eax, %eax": 1,
                "cmpw $, ;je  <host_ExitThread+>;pushl %esi;xorl %esi, %esi;cmpb $, ": 1,
                "jne  <host_ExitThread+>;pushl (%ebp);xorl %eax, %eax;movb , %al;andl $, %eax": 1,
                "jne  <host_ExitThread+>;testb $, ;je  <host_ExitThread+>;movb , %cl;testb %cl, %cl": 1,
                "movb %cl, ;jmp  <host_ExitThread+>;movb , %al;testb $, %cl;jne  <host_ExitThread+>": 1,
                "movl $, %eax;cmpb $, (%eax);jne  <host_ExitThread+>;addl $, %eax;incl %esi": 1,
                "calll  <getDI+>;movb $, %al;movl %esi, %ecx;shlb %cl, %al;notb %al": 1,
                "andb %al, ;jmp  <host_ExitThread+>;movb $, ;movb $-, ;orb $, ": 1,
                "movb $-, ;orb $, ;jmp  <host_ExitThread+>;movzbl , %eax;incb ": 1,
                "calll  <getDI+>;andb $, ;jmp  <host_ExitThread+>;cmpw $, %ax;jne  <host_ExitThread+>": 1,
                "andb $, ;movb $, ;jmp  <host_ExitThread+>;testb $, ;jne  <host_ExitThread+>": 1,
                "testb $, %bl;je  <host_ExitThread+>;movb %bl, %al;andb $, %al;movb %al, ": 1,
                "jmp  <host_ExitThread+>;pushl -(%ebp);calll  <getDI+>;retl;movl -(%ebp), %esp": 1,
                "movl -(%ebp), %esp;orl $-, -(%ebp);movl -(%ebp), %eax;calll  <getDI+>;retl $": 2,
                "calll  <getDI+>;retl $;int;int;int": 2,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl $": 3,
                "pushl %esi;calll - <getDX+>;popl %ecx;movl %edi, %eax;popl %edi": 1,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $-, (%ebp)": 4,
                "ja  <setCF+>;pushl (%ebp);calll  <ResumeTimerThread+>;testl %eax, %eax;popl %ecx": 1,
                "int;int;int;cmpl $, ;jne  <ResumeTimerThread+>": 1,
                "subl (%ecx), %esi;addl %edi, %esi;imull $, %esi, %esi;subl (%ecx), %esi;popl %edi": 1,
                "popl %esi;jge  <ResumeTimerThread+>;addl $, %eax;movl , %ecx;leal (%ecx,%eax), %eax": 1,
                "jge  <ResumeTimerThread+>;addl $, %eax;movl , %ecx;leal (%ecx,%eax), %eax;movl %eax, ": 1,
                "calll - <DispatchInterrupts+>;movl , %eax;movl %eax, ;calll - <ResumeTimerThread+>;leave": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl $, %edx;movl (%edx), %eax": 1,
                "pushl $;leal -(%ebp), %eax;xorl %ebx, %ebx;pushl %eax;movl %ebx, ": 1,
                "pushl %eax;calll *;movzwl -(%ebp), %edi;movzwl -(%ebp), %eax;movzwl -(%ebp), %ecx": 1,
                "cmpw %bx, -(%ebp);je  <ResumeTimerThread+>;movzwl -(%ebp), %eax;pushl $;xorl %edx, %edx": 1,
                "incl %esi;addl $, %eax;movl %eax, ;movl %ecx, ;leal -(%ebp), %eax": 1,
                "pushl %edi;pushl $;popl %ecx;movl %ebx, %esi;shrl $, %esi": 1,
                "pushl %esi;pushl $;pushl ;calll *;popl %esi": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %ecx;movl , %eax;movl , %edx": 1,
                "addl $-, %ecx;orl $-, %eax;xorl %esi, %esi;shrl %cl, %eax;movl %eax, -(%ebp)": 1,
                "cmpl -(%ebp), %ebx;movl %ebx, (%ebp);jb - <ResumeTimerThread+>;cmpl -(%ebp), %ebx;jne  <ResumeTimerThread+>": 1,
                "movl %ebx, ;movl (%ebx), %eax;movl (%eax), %edx;cmpl $-, %edx;movl %edx, -(%ebp)": 1,
                "jne  <ResumeTimerThread+>;movl (%eax,%edx,), %ecx;andl -(%ebp), %ecx;pushl $;popl %edi": 1,
                "calll  <getDI+>;movl %eax, %ebx;testl %ebx, %ebx;movl %ebx, (%ebp);je  <ResumeTimerThread+>": 1,
                "movl %edi, (%ecx);movl (%edx), %ecx;movl (%edx), %edi;movl %edi, (%ecx);je  <ResumeTimerThread+>": 1,
                "cmpl (%edx), %ecx;jne  <ResumeTimerThread+>;movb (%esi,%eax), %cl;movb %cl, (%ebp);incb %cl": 1,
                "jne  <ResumeTimerThread+>;movb (%esi,%eax), %cl;movb %cl, (%ebp);incb %cl;cmpl $, %esi": 1,
                "jge  <ResumeTimerThread+>;cmpb $, (%ebp);jne  <ResumeTimerThread+>;movl $, %edi;movl %esi, %ecx": 1,
                "leal -(%esi), %ecx;movl $, %esi;shrl %cl, %esi;orl %esi, (%edi);movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %esi;addl %ecx, %edx;leal (%esi), %ecx;movl %ecx, (%edx)": 1,
                "leal (%esi), %ecx;movl %ecx, (%edx);movl %ecx, -(%edx,%esi);movl -(%ebp), %esi;movl (%esi), %ecx": 1,
                "movl %edi, (%esi);movl %edi, (%esi);movl %edi, (%esi);cmpl %edi, ;jne  <setDX+>": 1,
                "movl %edi, ;popl %edi;popl %esi;popl %ebp;retl $": 1,
                "pushl %edi;xorl %edi, %edi;movl %edi, -(%ebp);calll  <getAL>;movzbl %al, %esi": 1,
                "decl %eax;je  <getBL+>;movl $, %edx;pushl %edx;calll *": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;calll  <demLFNGetCurrentDirectory+>;jmp  <getBL+>": 1,
                "calll  <VDDReleaseDosHandle+>;cmpl $, %esi;movw -(%ebp), %cx;movw %cx, (%eax);movw -(%ebp), %cx": 1,
                "pushl %edi;jmp - <getBL+>;int;int;int": 1,
                "calll *;pushl %eax;calll *;xorl %eax, %eax;jmp  <getBL+>": 1,
                "xorl %eax, %eax;jmp  <getBL+>;movzwl (%esi), %eax;movl (%esi), %ecx;andw $, (%eax,%ecx)": 1,
                "rep  stosl %eax, %es:(%edi);andl $, -(%ebp);testl %ebx, %ebx;je  <getBL+>;movl %ebx, -(%ebp)": 1,
                "testl %ebx, %ebx;je  <getBL+>;movl %ebx, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl $, %ecx;movl %eax, %esi;movl -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %esi": 1,
                "cmpl %edi, (%esi);je  <getBL+>;pushl %esi;pushl %eax;calll  <setAX+>": 1,
                "pushl %eax;calll  <setAX+>;movl %eax, -(%ebp);cmpl %edi, %eax;jge  <getBL+>": 1,
                "cmpl %edi, %eax;jge  <getBL+>;cmpl %edi, (%esi);je  <getBL+>;movl %eax, -(%ebp)": 1,
                "calll  <VDDReleaseDosHandle+>;cmpl %edi, %eax;movl %eax, -(%ebp);jl  <getBL+>;pushl %ebx": 1,
                "popl %ecx;xorl %eax, %eax;jmp  <getBL+>;movl %ebx, %esi;jmp - <getBL+>": 1,
                "jmp - <getBL+>;leal -(%ebp), %ebx;movl %ebx, -(%ebp);movl $, %ecx;xorl %eax, %eax": 1,
                "calll  <getBL+>;movl %ebx, %eax;movl -(%ebp), %ecx;calll  <getDI+>;calll  <getDI+>": 1,
                "movl %edi, (%ebx);cmpb $, (%ebx);je  <getBL+>;cmpl $-, (%ebx);jne  <getBL+>": 1,
                "cmpl %eax, %ebx;jne  <getBL+>;calll - <setDX+>;leal (%ebx), %eax;pushl %eax": 1,
                "calll *;xorl %ebx, %ebx;movl %ebx, -(%ebp);xorl %esi, %esi;cmpl %esi, %ebx": 1,
                "jge  <getBL+>;decl ;pushl (%ebx);calll *;movl %esi, (%ebx)": 1,
                "cmpl $, ;ja  <getBL+>;cmpl $, ;jbe  <getBL+>;calll  <VDDReleaseDosHandle+>": 1,
                "calll  <VDDReleaseDosHandle+>;movl , %eax;addl $, %eax;movl , %ecx;adcl %esi, %ecx": 1,
                "addl $, %eax;movl , %ecx;adcl %esi, %ecx;movl %eax, (%ebx);movl %ecx, (%ebx)": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %ebx": 54,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <getBL+>;cmpb $, -(%ebp)": 1,
                "movl %ebx, (%edi);movl %edi, (%esi);movl (%edi), %eax;movl %eax, (%esi);xorl %eax, %eax": 1,
                "leal (%esi), %eax;movl %eax, -(%ebp);leal (%esi), %ecx;movl %ecx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %eax, -(%ebp);leal (%esi), %ecx;movl %ecx, -(%ebp);movl %ebx, -(%ebp);leal (%esi), %edi": 1,
                "leal (%esi), %edi;cmpl $-, (%edi);jne  <demFileFindFirst+>;movl $, -(%ebp);jmp  <demFileFindFirst+>": 1,
                "cmpl %ebx, (%ebp);je  <demFileFindFirst+>;pushl %ebx;leal -(%ebp), %ecx;pushl %ecx": 1,
                "movb %al, -(%ebp);cmpb %bl, %al;je  <demFileFindFirst+>;cmpl %ebx, -(%ebp);je  <demFileFindFirst+>": 1,
                "movl %eax, -(%ebp);pushl (%esi);pushl %ebx;movl (%eax), %eax;pushl (%eax)": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "pushl $;pushl %edi;calll *;movl %eax, -(%ebp);cmpl %ebx, %eax": 1,
                "movl %eax, -(%ebp);movl %ebx, -(%ebp);movl %edx, %ecx;decl %edx;movl %edx, -(%ebp)": 1,
                "decl %edx;movl %edx, -(%ebp);testl %ecx, %ecx;je  <demFileFindFirst+>;xorl %ecx, %ecx": 1,
                "jne  <demFileFindFirst+>;cmpw $, -(%ebp);jne  <demFileFindFirst+>;movw $, -(%eax);movl -(%ebp), %eax": 1,
                "xorl %ebx, %ebx;movl (%ebp), %esi;cmpl %ebx, -(%ebp);jge  <demFileFindFirst+>;pushl %esi": 1,
                "cmpl %ebx, -(%ebp);jge  <demFileFindFirst+>;pushl %esi;calll - <setDX+>;movl -(%ebp), %edi": 1,
                "movl (%eax), %eax;leal (%eax), %esi;movl (%esi), %eax;testl %eax, %eax;je  <demFileFindFirst+>": 1,
                "movl %eax, %edi;calll - <.text+>;movl (%esi), %eax;andl $, %eax;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %edi;calll  <demGetPhysicalDriveType+>": 1,
                "movl %eax, %edx;jae  <demFileFindFirst+>;incl %edx;subl %ecx, %edi;pushl $": 1,
                "jae  <demFileFindFirst+>;incl %edx;subl %ecx, %edi;pushl $;sbbl %eax, %edx": 1,
                "andl $, ;movl %eax, ;movl , %eax;movl %eax, ;popl %esi": 1,
                "addl (%ebp), %eax;cmpl $, %eax;jae  <setAL+>;movl (%ebp), %eax;jmp  <setAL+>": 1,
                "calll - <getDX>;movzwl %ax, %eax;retl;int;int": 1,
                "pushl %ecx;pushl %esi;pushl $;pushl (%ebp);xorl %esi, %esi": 2,
                "pushl (%ebp);calll  <VdmMapFlat>;movl %eax, %edx;xorl %eax, %eax;xorl %ecx, %ecx": 1,
                "addl $, %esi;movl (%ebp), %ecx;leal (%esi), %eax;pushl %eax;pushl %edx": 1,
                "addw %cx, (%eax);calll - <setSP+>;pushl -(%ebp);pushl -(%ebp);calll  <getDS+>": 1,
                "movzwl %bx, %eax;movw %di, (%esi);popl %edi;movl %eax, (%esi);popl %esi": 2,
                "movw %di, (%esi);popl %edi;movl %eax, (%esi);popl %esi;popl %ebx": 2,
                "movl , %eax;cmpl %eax, %ecx;jb  <getDS+>;addl $, %eax;cmpl %eax, %ecx": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;movl (%ebp), %esi;cmpl $-, (%esi)": 2,
                "movl %ebx, (%esi);xorl %eax, %eax;movw (%esi), %ax;pushl %eax;pushl %edi": 1,
                "popl %ebx;popl %esi;leave;retl $;movl $, %eax": 1,
                "pushl %esi;calll  <demClientErrorEx+>;movl %eax, %edi;cmpl $-, %edi;je  <setAX+>": 1,
                "calll  <demClientErrorEx+>;movl %eax, %edi;cmpl $-, %edi;je  <setAX+>;cmpl $, %edi": 1,
                "pushl %eax;pushl $-;calll  <demClientErrorEx+>;jmp - <setAX+>;int": 1,
                "pushl $;pushl (%ebp);pushl (%ebp);calll - <demClientErrorEx>;popl %ebp": 1,
                "pushl (%ebp);pushl (%ebp);calll - <demClientErrorEx>;popl %ebp;retl $": 1,
                "movl (%ebp), %edi;cmpl %edi, (%ebp);je  <demClientErrorEx+>;movzwl (%ebp), %ecx;movl %ecx, %eax": 1,
                "calll - <getDS+>;popl %esi;popl %edi;popl %ebp;retl $": 1,
                "movl (%eax), %edi;xorl %ecx, %ecx;movw (%eax), %cx;leal -(%ebp), %edx;pushl %edx": 1,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp)": 11,
                "decl (%ebp);popl %ecx;movl %eax, %ecx;je  <demFileFindNext+>;testl %ebx, %ebx": 1,
                "pushl (%edi);calll *%esi;popl %esi;popl %ebx;popl %edi": 1,
                "movl (%ebp), %eax;xorl %edi, %edi;incl %esi;cmpl %edi, %eax;je  <getCX+>": 1,
                "movl %eax, %ebx;cmpw %di, %bx;je  <getCX+>;pushl %esi;calll - <setCF>": 1,
                "pushl %ecx;leal -(%ebp), %ecx;movl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "leal -(%ebp), %ecx;movl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl $, -(%ebp);movl %edi, -(%ebp);incl %edx;pushl %edx;pushl %ecx": 1,
                "popl %ecx;jne  <getCX+>;pushl %ebx;calll  <VDDTerminateVDM+>;testl %eax, %eax": 1,
                "pushl %edi;pushl $;pushl $;calll *;movl %edi, -(%ebp)": 1,
                "jmp  <getCX+>;pushl $;pushl %esi;calll  <SetShadowDescriptorEntries+>;testl %eax, %eax": 1,
                "cmpl %edi, -(%ebp);jne  <getCX+>;pushl %edi;calll - <setCX>;pushl %edi": 1,
                "pushl %edi;calll - <setBX>;pushl %esi;calll - <setBP>;shrl $, %esi": 1,
                "pushl %edi;calll - <setCF>;jmp  <getCX+>;pushl %esi;calll *": 1,
                "xorl %eax, %eax;movb (%ebx), %al;pushl %eax;pushl $-;calll - <demClientErrorEx+>": 3,
                "calll - <demGetPhysicalDriveType>;movzbl %al, %eax;xorl %ebx, %ebx;cmpl %ebx, %eax;jne  <demGetPhysicalDriveType+>": 1,
                "calll  <getDI+>;xorl %esi, %esi;movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %fs:, %eax;movl %eax, -(%ebp);movzwl -(%ebp), %ecx;pushl %ecx;pushl %esi": 3,
                "calll *;pushl %eax;calll *;jmp  <demGetPhysicalDriveType+>;movzwl -(%ebp), %ecx": 1,
                "pushl %eax;calll *;jmp  <demGetPhysicalDriveType+>;movzwl -(%ebp), %ecx;pushl %ecx": 1,
                "cmpl %esi, %eax;je  <demGetPhysicalDriveType+>;cmpl %edi, %eax;jae  <demGetPhysicalDriveType+>;movw %ax, -(%ebp)": 1,
                "cmpl %esi, %eax;jge  <demGetPhysicalDriveType+>;pushl %eax;calll *;pushl %eax": 2,
                "je  <demGetPhysicalDriveType+>;leal -(%ebp), %eax;pushl %eax;calll *;cmpl %esi, -(%ebp)": 2,
                "cmpl %esi, -(%ebp);je  <demGetPhysicalDriveType+>;movl %fs:, %eax;movl %eax, -(%ebp);pushl -(%ebp)": 1,
                "pushl (%eax);calll *;retl;int;int": 3,
                "movzbl (%eax), %eax;pushl %eax;xorl %eax, %eax;movw (%ecx), %ax;pushl %eax": 1,
                "calll  <call_ica_hw_interrupt+>;retl;cmpw $, %ax;jne  <demGetPhysicalDriveType+>;cmpb $, (%ecx)": 1,
                "calll - <VDDAllocateDosHandle+>;popl %esi;popl %ebp;retl $;int": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;cmpl $, %ecx;jae  <demGetPhysicalDriveType+>;movl (,%ecx,), %eax": 1,
                "calll  <demGetPhysicalDriveType+>;leave;retl $;int;int": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %ecx;imull $, %eax, %eax;pushl %ebx": 1,
                "addl $, %eax;xorl %ebx, %ebx;cmpl %ebx, (%eax);movl %ecx, (%eax);jne  <demGetPhysicalDriveType+>": 1,
                "pushl %esi;movl (%ebp), %esi;imull $, %esi, %esi;pushl %edi;movl (%ebp), %edi": 1,
                "movl (%ebp), %ecx;pushl (%ebp);leal (%esi,%edi,), %eax;addl %ecx, (%eax);calll - <VDDAllocateDosHandle+>": 1,
                "pushl %ecx;movl (%ebp), %eax;cmpw $, %ax;pushl %esi;pushl %edi": 1,
                "jb  <call_ica_hw_interrupt+>;cmpw $, %ax;ja  <call_ica_hw_interrupt+>;xorl %edi, %edi;movl %edi, (%ebp)": 1,
                "movl %edi, (%ebp);jmp  <call_ica_hw_interrupt+>;movl $, (%ebp);xorl %edi, %edi;movl (%ebp), %esi": 1,
                "calll - <.text+>;movl (%ebp), %edx;leal (,%edx,), %eax;movl (%eax), %ecx;subl %edi, %ecx": 1,
                "andb $-, %bl;movzbw %bl, %cx;movw %cx, (%esi);movw (%esi), %cx;testb $, %cl": 1,
                "calll  <SetShadowDescriptorEntries+>;jmp  <call_ica_hw_interrupt+>;movzbl (%esi), %eax;pushl %eax;pushl %edi": 1,
                "pushl $;jmp  <call_ica_hw_interrupt+>;incb %bl;andl $, %ebx;movw %bx, (%esi)": 1,
                "movw %ax, (%esi);testb $, %bl;je  <call_ica_hw_interrupt+>;orb $, (%esi);jmp  <call_ica_hw_interrupt+>": 1,
                "calll  <host_simulate>;movl , %eax;movw , %cx;addw %cx, (%eax);movw (%esi), %di": 1,
                "addw %cx, (%eax);movw (%esi), %di;calll - <setSP+>;movzwl (%esi), %eax;pushl %eax": 1,
                "movzwl (%esi), %eax;pushl %eax;calll *;pushl $;pushl %edi": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;leal (,%eax,), %eax;cmpl $, (%eax);jne  <call_ica_hw_interrupt+>": 1,
                "jmpl *(%eax);int;int;int;int": 9,
                "pushl %edi;movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 4,
                "movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <call_ica_hw_interrupt+>;leal -(%ebp), %edi": 2,
                "andl $, %ecx;leal -(%ebp), %eax;rep  movsb (%esi), %es:(%edi);movl %eax, -(%ebp);pushl $": 1,
                "movl %eax, -(%ebp);pushl $;pushl -(%ebp);calll *;movl %eax, %edi": 1,
                "pushl %edi;calll *;cmpl $-, %eax;je  <call_ica_hw_interrupt+>;movl , %esi": 1,
                "movw -(%ebp), %ax;movw %ax, (%ebx);movw -(%ebp), %ax;movw %ax, (%ebx);movb -(%ebp), %al": 1,
                "cmpw $, %cx;jae  <call_ica_hw_interrupt+>;shlb %cl;movb %cl, ;movl %eax, %ecx": 1,
                "andb $, %cl;movb %cl, (%ebx);movl %eax, %ecx;shrl $, %ecx;andb $, %cl": 1,
                "shrl $, %ecx;shrl $, %eax;andl %esi, %ecx;andl %esi, %eax;movw %cx, (%ebx)": 1,
                "calll *;cmpl $-, %eax;je  <call_ica_hw_interrupt+>;movl -(%ebp), %eax;movl %eax, ": 1,
                "pushl %ecx;pushl %eax;calll  <getDI+>;movl (%ebx), %eax;addl $, %esp": 1,
                "movl (%ebx), %eax;addl $, %esp;movb $, (%eax,%esi);cmpb $, -(%ebp);je  <call_ica_hw_interrupt+>": 1,
                "movb (%ecx), %al;incl %ecx;movb %al, (%edx);incl %edx;testb %al, %al": 5,
                "testb %al, %al;jne - <call_ica_hw_interrupt+>;cmpb $, (%ebx);jne  <call_ica_hw_interrupt+>;movl -(%ebp), %esi": 1,
                "xorl %eax, %eax;movb -(%ebp), %al;shrl $, %eax;andb $, %al;movb %al, (%ebx)": 1,
                "cmpb $, (%ebx);je  <call_ica_hw_interrupt+>;pushl %edi;calll  <IsCdRomFile+>;testl %eax, %eax": 1,
                "pushl -(%ebp);calll *;movl %esi, %eax;movl -(%ebp), %ecx;popl %edi": 2,
                "pushl $;pushl -(%ebp);calll *;movl , %esi;pushl %edi": 1,
                "pushl -(%ebp);calll *;movl , %esi;pushl %edi;leal -(%ebp), %eax": 1,
                "calll *;movl %eax, %edi;jmp  <getAX+>;movzwl -(%ebp), %edi;incl %edi": 1,
                "cmpl (%ebp), %edi;jae  <getAX+>;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%esi;pushl $;leal -(%ebp), %eax": 8,
                "je  <getAX+>;cmpl %ebx, (%ebp);jne  <getAX+>;movl %ebx, (%eax);jmp  <getAX+>": 1,
                "shrl %eax;movl %edi, %ecx;subl %eax, %ecx;addl (%ebp), %ecx;movl (%ebp), %eax": 1,
                "pushl %ebx;pushl (%eax);calll *;movl %edi, %eax;popl %edi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl (%ebp)": 8,
                "cmpl $, %esi;jne  <getAX+>;cmpl $, (%ebp);jae  <getAX+>;xorl %eax, %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %edx;imull $, %eax, %eax;addl $, %eax": 1,
                "movl %ecx, (%edx);movl (%eax), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);popl %ebp": 1,
                "movw , %ax;pushl %eax;pushl $;pushl %esi;pushl %esi": 1,
                "pushl %esi;pushl %esi;calll  <setAH+>;movw , %ax;subw %ax, ": 1,
                "pushl $;pushl %eax;calll  <setAH+>;cmpl %esi, ;jne  <getCL+>": 1,
                "cmpl %esi, ;jne  <getCL+>;calll  <setAH+>;cmpl %esi, ;jne  <getCL+>": 1,
                "movl (%ebp), %eax;movl %eax, ;popl %ebp;retl $;int": 1,
                "movl (%ebp), %eax;pushl %esi;movl (,%eax,), %esi;cmpl $, (%esi);jne  <getCL+>": 1,
                "pushl $;calll  <getES+>;pushl $;pushl $;calll  <setDH+>": 10,
                "pushl $;calll - <call_ica_hw_interrupt+>;pushl $;movl $, %esi;pushl %esi": 2,
                "leal (%eax,%eax,), %eax;movl (,%eax,), %eax;movl %eax, (%ecx);popl %ebp;retl $": 1,
                "pushl $;popl %esi;pushl $;pushl $;pushl %esi": 3,
                "testl %eax, %eax;je  <getCL+>;calll  <getDI+>;leal (%ebp), %eax;pushl %eax": 1,
                "xorl %ebx, %ebx;pushl %ebx;calll - <setBX>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <setBX>;leal -(%ebp), %eax;pushl %eax;pushl $;calll  <getCF+>": 1,
                "calll  <getCF+>;movw -(%ebp), %ax;testb $, %al;jne  <getCL+>;pushl %ebx": 1,
                "shrb $, %al;incb %al;pushl %eax;calll  <setDL>;testb $, -(%ebp)": 1,
                "testb $, (%ebp);jne  <getCL+>;movb $, -(%ebp);pushl $;jmp  <getCL+>": 1,
                "leal -(%ebp), %ecx;calll  <getDI+>;jmp  <getCL+>;pushl $;calll  <setDH>": 1,
                "subl $, %ecx;je  <getCL+>;movb $, -(%ebp);jmp  <getCL+>;movb $, -(%ebp)": 1,
                "pushl -(%ebp);leal -(%ebp), %ecx;calll  <getDI+>;pushl -(%ebp);calll  <setBL>": 1,
                "pushl %eax;pushl $;xorl %ebx, %ebx;pushl %ebx;movl $, %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 7,
                "jmp  <getCL+>;leal -(%ebp), %eax;pushl %eax;pushl %esi;leal -(%ebp), %eax": 1,
                "pushl %esi;calll - <getDX+>;popl %ecx;popl %esi;movl -(%ebp), %ecx": 1,
                "calll  <SetShadowDescriptorEntries+>;movb $, ;cmpb $, (%ebp);je  <getCL+>;cmpb $, (%ebp)": 1,
                "cmpb $, (%ebp);je  <getCL+>;cmpb $, (%ebp);je  <getCL+>;movzbl (%ebp), %eax": 1,
                "pushl %esi;leal -(%ebp), %eax;movl $, %esi;pushl %eax;movl %esi, -(%ebp)": 1,
                "testl %eax, %eax;jne  <getCL+>;andw %ax, ;jmp  <getCL+>;movl -(%ebp), %eax": 1,
                "calll  <getBP+>;negl %eax;sbbl %eax, %eax;negl %eax;decl %eax": 1,
                "movzbl %al, %eax;imull $, %eax, %eax;addl $, %eax;pushl %eax;calll  <setAH+>": 1,
                "movw (%ebp), %ax;movw %ax, ;jmp  <getCL+>;movw (%ebp), %ax;movw %ax, ": 2,
                "movw %ax, ;jmp  <getCL+>;movw (%ebp), %ax;movw %ax, ;popl %ebp": 1,
                "movw (%ebp), %ax;movw %ax, ;popl %ebp;retl $;int": 1,
                "movl %esp, %ebp;movw (%ebp), %cx;pushl %ebx;pushl %esi;xorl %esi, %esi": 1,
                "cmpw $, %cx;movl %esi, ;jne  <getCL+>;movl (%ebp), %eax;movb , %cl": 1,
                "movl (%ebp), %eax;movb , %cl;movb %cl, (%eax);testb $, ;je  <getCL+>": 1,
                "movb (%ecx), %cl;movb %cl, (%edx);movzbl , %ecx;incb %al;shll $, %ecx": 1,
                "movb %bl, ;andb $, ;jmp  <getCL+>;movl $, %eax;cmpw %ax, %cx": 1,
                "movl $, ;movl $, ;movl $, ;movl $, ;movl $, ": 32,
                "movl $, ;retl;movl $, ;movl $, ;movl $, ": 1,
                "movl %eax, ;movl $, %eax;movl $, ;movl %eax, ;movl %eax, ": 1,
                "movb (%ebp), %cl;movb %cl, ;movl , %edx;andl $, %eax;andl $, %edx": 4,
                "andl $, %eax;andl $, %edx;cmpl %eax, %edx;je  <getDL+>;andb $, %cl": 1,
                "cmpl $, ;movb %cl, ;jne  <getDL+>;calll  <SetShadowDescriptorEntries+>;popl %ebp": 1,
                "movl %edi, %edi;pushl %esi;pushl %edi;movl , %edi;xorl %esi, %esi": 1,
                "calll *%edi;pushl %esi;pushl %esi;pushl %esi;pushl %esi": 7,
                "cmpl %esi, ;je  <getDL+>;cmpl %esi, %eax;jne  <getDL+>;pushl $": 1,
                "shll $, %esi;calll - <getSP>;movzwl %ax, %eax;leal (%esi,%eax), %edi;calll - <getSI>": 1,
                "calll - <getSI>;movzwl %ax, %eax;pushl %eax;calll  <getDI>;movzwl %ax, %eax": 1,
                "calll  <getBP>;movzwl %ax, %eax;pushl %eax;calll - <getSP>;movzwl %ax, %eax": 1,
                "movzwl %ax, %eax;pushl %eax;calll - <getDS>;movzwl %ax, %eax;pushl %eax": 2,
                "pushl %esi;pushl %edi;calll - <getDS>;movl %eax, %edi;calll - <getSI>": 3,
                "popl %ebx;addl %ebx, %esi;movzwl (%esi), %eax;addl %ecx, %eax;movl %eax, ": 1,
                "movw %di, ;movw (%esi), %ax;addl %ebx, %esi;movw %ax, ;movw %di, ": 6,
                "movzwl (%esi), %eax;pushl %eax;pushl %edi;calll  <IsCdRomFile+>;pushl %eax": 1,
                "movw %ax, ;addl %ebx, %esi;movw %di, ;movw %di, ;movw (%esi), %ax": 2,
                "addl -(%ebp), %eax;addl %ebx, %esi;movl %eax, ;movw %di, ;movw (%esi), %ax": 1,
                "movzwl (%esi), %eax;pushl %eax;pushl %edi;calll  <IsCdRomFile+>;movl %eax, ": 2,
                "cmpl %esi, %eax;je  <getDL+>;cmpl $-, %eax;je  <getDL+>;pushl %eax": 1,
                "calll - <.text+>;popl %esi;popl %ebp;retl $;int": 4,
                "calll  <getBP+>;jmp  <getDL+>;pushl %ebx;pushl %edi;movw %si, ": 1,
                "movzwl %ax, %eax;addl %eax, %ebx;movzwl (%ebx), %eax;movl %eax, ;leal -(%ebp), %eax": 1,
                "shll $, %eax;movl %eax, ;movzwl (%ebx), %eax;pushl %edi;movl %eax, ": 1,
                "cmpw %si, ;jne  <getDL+>;movl %esi, ;cmpl %esi, ;jne  <getDL+>": 1,
                "movl %eax, -(%ebp);jne  <getDL+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "incl %eax;testb %cl, %cl;jne - <getDL+>;leal -(%ebp), %edi;subl %edx, %eax": 1,
                "incl %eax;testb %cl, %cl;jne - <getDL+>;subl %esi, %eax;movb $, -(%ebp,%eax)": 1,
                "pushl $-;calll *;jmp  <getDL+>;pushl $;pushl %eax": 1,
                "movw %si, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "pushl %esi;pushl $;calll  <host_direct_access_error+>;calll  <WaitIfIdle+>;movl $, ": 1,
                "je  <getDL+>;calll  <host_com_close+>;movl %esi, ;pushl %edi;pushl ": 1,
                "calll  <cmdCheckTemp+>;movl , %eax;pushl ;shrl $, %eax;andl $, %eax": 1,
                "incl %edx;incl %eax;movb (%eax), %cl;testb %cl, %cl;movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %eax;incl -(%ebp);movb $, (%eax);movl -(%ebp), %eax;incl %eax": 1,
                "incl -(%ebp);movb $, (%eax);movl -(%ebp), %eax;incl %eax;pushl %eax": 1,
                "xorl %edi, %edi;pushl %edi;pushl %edi;pushl $;pushl $": 1,
                "movb %cl, -(%ebp);movb , %cl;pushl %eax;incb %cl;pushl $": 2,
                "pushl %esi;pushl %edi;pushl $;xorl %esi, %esi;movl $, %ecx": 1,
                "addb $, %bl;movb %dl, (%ecx,%eax);movb %bl, (%ecx,%eax);incl %eax;incl %esi": 1,
                "jne - <getDL+>;popl %edi;popl %esi;popl %ebx;retl": 1,
                "movl %edi, %edi;pushl %esi;calll - <getDX>;cmpl $, ;movl %eax, %esi": 1,
                "calll  <DBGNotifyDebugged+>;testl %eax, %eax;je  <getDL+>;calll - <getSI>;pushl %eax": 1,
                "testb $-, ;je  <getDL+>;movzwl %si, %eax;pushl %eax;calll  <getDI>": 1,
                "movl %eax, ;andb $-, ;retl;andl $, ;retl": 1,
                "int;int;int;int;calll  <setCS+>": 2,
                "int;int;calll  <setCS+>;calll  <setCS+>;testl %eax, %eax": 1,
                "andl $, %ecx;andl $, %edx;cmpl %ecx, %edx;je  <getDL+>;testb $, ": 1,
                "movzwl %di, %eax;movzwl %si, %ecx;shll $, %eax;addl %ecx, %eax;pushl %eax": 1,
                "shll $, %eax;addl %ecx, %eax;pushl %eax;calll  <IsCdRomFile+>;cmpl $, %eax": 1,
                "jbe  <getDL+>;movl %eax, ;xorl %ecx, %ecx;cmpl $, %ecx;jae  <getDL+>": 1,
                "cmpl $, %ecx;jae  <getDL+>;leal -(%ecx), %eax;pushl $;xorl %edx, %edx": 1,
                "orb $, %dl;movb %dl, ;movzbl , %ecx;movl , %eax;cmpl %eax, %ecx": 1,
                "je  <setDI+>;orb $, %dl;movb %dl, ;movb %al, ;andl $, ": 1,
                "movb (%ebp), %bl;xorl %eax, %eax;movb %bl, %al;andl $, %eax;je  <setDI+>": 1,
                "pushl %esi;pushl %esi;calll - <call_ica_hw_interrupt>;jmp  <setDI+>;testb $, %bl": 1,
                "jmp  <setDI+>;testb $, %bl;je  <setDI+>;cmpl $, ;jle  <setDI+>": 1,
                "andb $, %al;pushl %esi;movb $, ;movl $, ;movb %al, ": 1,
                "movl %ecx, %edx;pushl %edi;movl (%ebp), %edi;shrl $, %ecx;movl %ebx, %eax": 1,
                "shll $, %eax;movw %bx, %ax;rep  stosl %eax, %es:(%edi);movl %edx, %ecx;andl $, %ecx": 2,
                "andl $, %ecx;rep  stosb %al, %es:(%edi);popl %edi;popl %ebx;popl %ebp": 2,
                "pushl %esi;calll - <getDS>;movzwl %ax, %esi;shll $, %esi;calll - <getDX>": 7,
                "movzwl %ax, %eax;addl %eax, %esi;movl %esi, ;calll - <getDS>;movzwl %ax, %esi": 5,
                "shll $, %esi;calll - <getCX>;movzwl %ax, %eax;addl %eax, %esi;movl %esi, ": 2,
                "pushl $;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll  <SetShadowDescriptorEntries+>": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, ;pushl %ebx;movl (%ebp), %ebx": 1,
                "subl %ecx, %eax;addl %eax, ;pushl $;pushl ;calll  <IsCdRomFile+>": 1,
                "popl %ebx;movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <setDI+>": 1,
                "movl %ecx, -(%ebp);calll  <IsCdRomFile+>;pushl %eax;pushl -(%ebp);movl %edi, %eax": 1,
                "calll  <IsCdRomFile+>;pushl %eax;pushl -(%ebp);movl %edi, %eax;calll  <getDI+>": 1,
                "leal (%esi,%edi), %eax;pushl %eax;calll  <IsCdRomFile+>;pushl %eax;pushl %edi": 1,
                "calll  <IsCdRomFile+>;pushl %eax;pushl %edi;movl %ebx, %eax;calll  <getDI+>": 1,
                "pushl $;calll  <IsCdRomFile+>;leal (%esi), %eax;pushl %eax;calll  <IsCdRomFile+>": 5,
                "movl -(%ebp), %eax;addl $, %eax;pushl %eax;calll  <IsCdRomFile+>;pushl $": 1,
                "calll  <IsCdRomFile+>;movzbl %al, %eax;shll $, %eax;cmpb $, ;movl (%eax), %ecx": 1,
                "pushl %edi;calll - <call_ica_hw_interrupt+>;popl %edi;popl %esi;popl %ebx": 1,
                "movb %al, -(%ebp);pushl -(%ebp);pushl %esi;calll  <IsCdRomFile+>;cmpl $, ": 1,
                "je  <setDI+>;pushl $;pushl $;calll  <IsCdRomFile+>;movl $, %esi": 1,
                "jne  <setDI+>;pushl $;jmp  <setDI+>;pushl $;pushl $": 1,
                "movswl , %edx;movzwl (%eax), %ecx;addl %edx, %ecx;shll $, %ecx;movw (%ecx), %dx": 1,
                "decl %ecx;movw %cx, (%eax);popl %ebp;retl $;int": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi": 3,
                "jne  <setDI+>;addl %edi, %esi;jmp  <setDI+>;movb (%esi), %al;testb %al, %al": 1,
                "cmpl %ecx, %eax;jb - <setDI+>;pushl %ebx;pushl %esi;pushl %edi": 1,
                "jb - <setDI+>;pushl %ebx;pushl %esi;pushl %edi;leal -(%ebp), %eax": 1,
                "cmpl %eax, %edi;jl  <setDI+>;movl %eax, %edi;cmpl %edi, ;jge  <setDI+>": 1,
                "je  <setDI+>;testb $, %al;jne  <setDI+>;pushl %ecx;calll *": 1,
                "movl (,%eax,), %eax;movl %esi, %ecx;andl $, %ecx;leal (%eax,%ecx,), %eax;movl -(%ebp), %ecx": 1,
                "jl - <setDI+>;xorl %ebx, %ebx;movl , %eax;leal (%eax,%ebx,), %esi;cmpl $-, (%esi)": 1,
                "popl %esi;xorl %eax, %eax;popl %ebx;leave;retl": 2,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ": 4,
                "subl $, %esp;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ;movl $, -(%ebp)": 1,
                "movl %ebx, -(%ebp);jne  <setDI+>;pushl %ebx;calll - <setBX>;jmp  <setDI+>": 1,
                "pushl $;pushl %ebx;pushl %ebx;pushl $;calll  <host_direct_access_error+>": 2,
                "pushl %eax;calll - <getDX+>;popl %ecx;incl ;pushl ": 1,
                "calll - <getDX+>;popl %ecx;incl ;pushl ;pushl -(%ebp)": 1,
                "calll  <host_direct_access_error+>;calll  <WaitIfIdle+>;movl , %eax;movb (%eax), %cl;testb %cl, %cl": 1,
                "movb (%eax), %cl;testb %cl, %cl;movl %eax, -(%ebp);je  <setDI+>;movl -(%ebp), %eax": 1,
                "je  <setDI+>;movl -(%ebp), %eax;leal (%eax), %esi;movb (%eax), %dl;incl %eax": 1,
                "leal (%eax), %esi;movb (%eax), %dl;incl %eax;testb %dl, %dl;jne - <setDI+>": 1,
                "cmpl %esi, %eax;popl %ecx;popl %ecx;je  <setDI+>;movzwl , %ecx": 1,
                "movl -(%ebp), %eax;movb (%eax), %cl;testb %cl, %cl;jne - <setDI+>;jmp  <setDI+>": 1,
                "calll *;movzwl , %eax;incl %eax;pushl %eax;pushl ": 1,
                "movzwl , %ecx;movl %eax, ;movb $, (%ecx,%eax);incw ;jmp  <setDI+>": 1,
                "movl %eax, ;movb $, (%ecx,%eax);incw ;jmp  <setDI+>;movw %bx, ": 1,
                "movb $, (%ecx,%eax);incw ;jmp  <setDI+>;movw %bx, ;calll  <getES>": 1,
                "jmp  <setDI+>;pushl $;pushl $;calll  <IsCdRomFile+>;pushl $": 1,
                "retl;movb $, -(%ebp);movl $, %eax;movl $, ;movl $, ": 1,
                "testl %eax, %eax;jl  <setDI+>;pushl %esi;calll - <getDS>;movzwl %ax, %esi": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;movl %esi, -(%ebp);movw $, -(%ebp)": 1,
                "calll *;testl %eax, %eax;popl %esi;jge  <setDI+>;pushl $": 1,
                "pushl ;pushl $;calll  <host_direct_access_error+>;calll  <WaitIfIdle+>;leave": 2,
                "movl , %esi;pushl %edi;calll - <getDX>;xorl %ebx, %ebx;movl %eax, %edi": 1,
                "pushl %esi;calll - <setAX>;pushl %ebx;calll - <setDX>;testw %bx, %bx": 1,
                "movzwl (%esi), %eax;movzwl %di, %ecx;subl %ecx, %eax;cmpl $, %eax;jl  <setDI+>": 1,
                "subl %ecx, %eax;cmpl $, %eax;jl  <setDI+>;pushl $;calll - <ResumeTimerThread+>": 1,
                "popl %ecx;je  <setDI+>;movw (%esi), %cx;addw %di, %cx;movw %cx, (%eax)": 1,
                "movl %eax, ;je  <setDI+>;movl , %esi;pushl $;pushl %eax": 1,
                "calll *%esi;movl %eax, ;movl , %eax;testl %eax, %eax;je  <setDI+>": 1,
                "pushl %esi;pushl $;popl %ecx;je  <setDI+>;decl %eax": 1,
                "movl %eax, ;movl , %eax;cmpl %esi, %eax;jne  <setDI+>;pushl $": 1,
                "popl %ecx;leal (%eax), %edi;leal -(%ebp), %esi;rep  movsl (%esi), %es:(%edi);movsb (%esi), %es:(%edi)": 1,
                "movb $, (%eax);cmpw $, -(%ebp);movzwl -(%ebp), %ecx;jne  <setDI+>;movl -(%ebp), %ecx": 1,
                "cmpw $, -(%ebp);movzwl -(%ebp), %ecx;jne  <setDI+>;movl -(%ebp), %ecx;movl %ecx, (%eax)": 1,
                "orl $, %ebx;pushl %ebx;pushl $;calll - <call_ica_hw_interrupt+>;movb (%ebp), %al": 1,
                "movb (%ebp), %al;popl %ebx;popl %ebp;retl $;int": 1,
                "movl , %ecx;pushl $;movl %ecx, (%eax);calll  <setDI+>;movl , %ecx": 1,
                "movl $, ;movl $, ;movl $, ;movl $, ;calll  <setDH+>": 2,
                "movl $, ;movl $, ;calll  <setDH+>;pushl $;pushl $": 2,
                "pushl %ebx;pushl %ebx;pushl $;pushl $;pushl $": 2,
                "pushl $;calll  <getES+>;xorl %esi, %esi;incl %esi;pushl %esi": 1,
                "pushl $;calll  <setDH+>;pushl %edi;pushl $;pushl $": 2,
                "andl $-, ;movl $, ;movb %bl, ;movl %esi, ;movl %esi, ": 1,
                "pushl (%ebp);calll  <setCL+>;movl %eax, -(%ebp);jmp  <setDI+>;pushl -(%ebp)": 1,
                "int;int;int;calll - <getAL>;testb %al, %al": 1,
                "calll - <getDS>;movzwl %ax, %esi;shll $, %esi;calll  <getDI>;movzwl %ax, %eax": 1,
                "popl %esi;jne  <setDI+>;pushl %eax;calll - <host_ExitThread+>;calll - <.text+>": 1,
                "calll - <.text+>;pushl $;calll - <setCF>;retl;int": 1,
                "andl $, %edx;orl %edx, %ecx;movl %ecx, (%eax);popl %ebp;retl $": 4,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;pushl %esi;movl %eax, %esi": 1,
                "pushl (%esi);calll  <IsCdRomFile+>;pushl $;pushl (%esi);calll  <IsCdRomFile+>": 1,
                "pushl %edi;movl (%ebp), %edi;movb %al, -(%ebp);movb $, (%edi);movb $, (%edi)": 1,
                "pushl %esi;calll  <host_com_close+>;movl , %eax;pushl (%ebp);movzwl (%eax), %eax": 1,
                "pushl %esi;calll  <host_com_close+>;pushl %esi;calll  <host_com_close+>;testl %eax, %eax": 1,
                "cmpl %eax, (%ebp);movl %ebx, ;setne %cl;movb %cl, ;movl , %ecx": 1,
                "jmp  <setCH+>;movb (%ebx), %al;movb (%ebx), %bl;andb $, %al;andb $, %al": 1,
                "cmpw %cx, %ax;movw %ax, (%esi);jbe  <setCH+>;movzwl %cx, %eax;jmp  <setCH+>": 1,
                "andw $, (%esi);movb $, (%esi);jmp  <setCH+>;movb (%edi), %al;movb (%ebx), %bl": 1,
                "movb $, (%esi);jmp  <setCH+>;movb (%edi), %al;movb (%ebx), %bl;andb $, %al": 1,
                "cmpb $, %al;movl %ebx, -(%ebp);jne  <setCH+>;pushl %edi;movl $, %edi": 1,
                "pushl %edi;movl $, %edi;movb (%esi), %al;pushl (%ebp);xorb %bl, %al": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;calll *;cmpl $, %eax": 1,
                "movl -(%ebp), %esi;pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "calll - <ResumeTimerThread+>;popl %ecx;movl %eax, ;movl %eax, -(%ebp);movl %edi, -(%ebp)": 1,
                "popl %ecx;movl %eax, ;movl %eax, -(%ebp);movl %edi, -(%ebp);jmp  <setCH+>": 1,
                "je  <setCH+>;movl -(%ebp), %eax;cmpl %eax, -(%ebp);je  <setCH+>;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl %edi;movb $, -(%ebp);calll  <host_direct_access_error+>;calll  <WaitIfIdle+>": 2,
                "je  <setCH+>;cmpl $, %eax;jbe  <setCH+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;calll - <setDI+>;movl %eax, %esi;testl %esi, %esi;je  <setCH+>": 1,
                "jne  <setCH+>;pushl $;popl %eax;movl %eax, -(%ebp);jmp  <setCH+>": 1,
                "pushl %edi;calll - <demFileFindNext+>;addl $, %esp;testl %eax, %eax;jne  <setCH+>": 1,
                "addl $, %esp;testl %eax, %eax;jne  <setCH+>;movl %edi, %eax;leal (%eax), %edx": 1,
                "je  <setCH+>;movl %esi, -(%ebp);cmpl $, -(%ebp);je  <setCH+>;movb (%ebx), %al": 1,
                "je - <setCH+>;cmpb $, %al;je  <setCH+>;cmpb $, %al;je  <setCH+>": 1,
                "pushl $;pushl $;pushl %esi;calll - <demFileFindNext+>;addl $, %esp": 5,
                "addl $, %esp;testl %eax, %eax;jne - <setCH+>;movl %esi, -(%ebp);jmp - <setCH+>": 1,
                "incl %eax;testb %cl, %cl;jne - <setCH+>;addl $, %edi;addl $, -(%ebp)": 2,
                "je  <setCH+>;cmpb $, %al;je  <setCH+>;incl %esi;movsbl (%esi), %eax": 5,
                "je  <setCH+>;cmpb $, %cl;je  <setCH+>;incl %eax;movb (%eax), %cl": 1,
                "pushl %eax;pushl $;pushl $;calll *;testl %eax, %eax": 1,
                "pushl $;leal -(%ebp), %eax;pushl $;pushl %eax;calll - <setDI+>": 2,
                "movsbl (%edi), %eax;pushl %eax;calll - <getCL+>;testl %eax, %eax;popl %ecx": 3,
                "movl , %esi;calll *%esi;pushl -(%ebp);calll *%esi;pushl -(%ebp)": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;pushl %edi;movl , %eax": 1,
                "movb %al, -(%ebp);movb %al, -(%ebp);movb %al, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "testl %eax, %eax;jl  <setCH+>;pushl $;pushl $;leal -(%ebp), %eax": 2,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp)": 2,
                "testl %eax, %eax;jge  <setCH+>;xorl %eax, %eax;jmp  <setCH+>;pushl $": 1,
                "movl %eax, ;pushl $;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "movl (%ebx), %ecx;movl %ecx, (%eax);movl (%ebx), %ecx;movl %ecx, (%eax);movl -(%ebp), %ecx": 1,
                "movl %ecx, (%eax);leal -(%ebp), %ecx;addl $, %eax;movl %ecx, %edx;subl %edx, %eax": 1,
                "movb , %al;cmpb $, %al;movl %ecx, ;je  <setCH+>;cmpb $, %al": 1,
                "movzwl , %eax;je  <setCH+>;incl %eax;imull , %eax;imull %ecx, %eax": 1,
                "jmp  <setCH+>;movl , %ecx;incl %eax;shll %cl, %eax;jmp  <setCH+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;movzbl (%ebp), %esi": 2,
                "movw $, (%esi);pushl %esi;calll - <setDI+>;movw (%esi), %ax;popl %esi": 1,
                "pushl %esi;calll - <setDI+>;movw (%esi), %ax;popl %esi;popl %ebp": 1,
                "pushl %eax;movl $, ;calll - <DispatchInterrupts+>;addl %edi, ;movl , %ecx": 1,
                "adcl $, ;movl %ecx, %edx;subl , %edx;movl %eax, %esi;sbbl , %esi": 1,
                "jg  <setDL+>;cmpl $, %ecx;jbe  <setDL+>;movl $, %esi;jmp  <setDL+>": 1,
                "cmpl $-, %eax;jl  <setDL+>;jg  <setDL+>;cmpl $, %ecx;jb  <setDL+>": 1,
                "movl , %edx;cmpl %ecx, %edx;ja - <setDL+>;addl %edi, %ecx;pushl $": 1,
                "movl %edi, %edi;pushl %esi;pushl $;calll *;xorl %esi, %esi": 1,
                "je  <setDL+>;pushl %esi;pushl %esi;pushl %esi;pushl %esi": 1,
                "cmpl %esi, %eax;movl %eax, ;jne  <setDL+>;pushl $;pushl $": 1,
                "xorl %esi, %esi;pushl %esi;pushl %esi;pushl %esi;calll *": 1,
                "calll *;cmpl %esi, %eax;movl , %esi;movl %eax, ;movl $, %ebx": 1,
                "calll  <host_direct_access_error+>;xorl %eax, %eax;pushl %eax;pushl %eax;pushl %eax": 3,
                "jmp  <setDL+>;pushl $;pushl $;pushl $;calll  <WOWSysErrorBox+>": 1,
                "popl %ecx;movl %eax, ;je - <setDL+>;popl %edi;popl %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;calll - <.text+>;pushl (%ebp)": 1,
                "pushl (%ebp);calll  <getCH+>;calll - <.text+>;popl %ebp;retl $": 1,
                "movl -(%ebp), %eax;negl %eax;sbbl %eax, %eax;movl $, %esi;andl %esi, %eax": 1,
                "sbbl %eax, %eax;movl $, %esi;andl %esi, %eax;addl $, %eax;pushl %eax": 1,
                "movl -(%ebp), %eax;pushl -(%ebp);negl %eax;sbbl %eax, %eax;andl %esi, %eax": 1,
                "pushl %eax;calll - <call_ica_hw_interrupt+>;movl (%ebp), %eax;imull $, %eax, %eax;andl $, (%eax)": 1,
                "andl $, (%eax);movl $, (%eax);popl %esi;leave;retl $": 1,
                "xorl %ebx, %ebx;cmpl %ebx, (%ebp);jne  <setDL+>;pushl $;calll *": 1,
                "pushl $;jmp  <setDL+>;pushl %eax;calll *;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;movl %ebx, -(%ebp);pushl (%ebp)": 1,
                "pushl %eax;calll *;movl %ebx, -(%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "cmpl %ebx, %eax;je  <setDL+>;cmpl (%ebp), %eax;ja  <setDL+>;pushl (%ebp)": 1,
                "jne  <IsCdRomFile+>;movb %al, -(%ebp);movb %cl, -(%ebp);movb $, -(%ebp);movb %bl, -(%ebp)": 1,
                "cmpb $, %al;jne  <IsCdRomFile+>;cmpb $, %cl;je  <IsCdRomFile+>;cmpb $, %cl": 1,
                "shrl $, %ecx;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx;andl $, %ecx": 1,
                "leal (%ebx,%ebx,), %esi;pushl $;shll $, %esi;andl $, (%esi);movl %ebx, (%esi)": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "decl -(%ebp);decl (%ebp);movl %eax, (%esi);movl -(%ebp), %eax;movl %ecx, (%esi)": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;pushl $;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "pushl $;pushl %eax;pushl $;calll  <host_direct_access_error+>;leave": 1,
                "calll  <host_direct_access_error+>;cmpl $, %eax;je  <IsCdRomFile+>;pushl (%ebp);calll - <ResumeTimerThread+>": 1,
                "calll - <ResumeTimerThread+>;movl %eax, %esi;testl %esi, %esi;popl %ecx;je - <IsCdRomFile+>": 1,
                "leal (%ebx), %eax;pushl %ecx;pushl %eax;movl %eax, -(%ebp);calll - <getCX+>": 2,
                "jge  <IsCdRomFile+>;movb -(%ebp), %al;testb %al, %al;je  <IsCdRomFile+>;pushl $": 1,
                "movb -(%ebp), %dl;testb %cl, %dl;jne  <IsCdRomFile+>;movl %edi, %ecx;movb $, %bl": 1,
                "movl %edi, %ecx;movb $, %bl;shlb %cl, %bl;andb $, %al;shlb %cl, %al": 1,
                "subl $, %ecx;je  <IsCdRomFile+>;subl $, %ecx;je  <IsCdRomFile+>;subl $, %ecx": 2,
                "jmp  <IsCdRomFile+>;testb $, %al;movb $, %cl;je  <IsCdRomFile+>;testb $, %al": 1,
                "je  <IsCdRomFile+>;testb $, %al;je  <IsCdRomFile+>;addb $, %cl;jmp  <IsCdRomFile+>": 1,
                "addb $, %cl;jmp  <IsCdRomFile+>;movb -(%ebp), %al;movb $, %cl;andb $-, %al": 1,
                "orb %cl, %al;movb %al, -(%ebp);pushl -(%ebp);pushl -(%ebp);calll  <IsCdRomFile+>": 1,
                "movb %al, -(%ebp);pushl -(%ebp);pushl -(%ebp);calll  <IsCdRomFile+>;popl %edi": 1,
                "int;movl %fs:, %eax;movl (%eax), %eax;addl $, %eax;pushl %eax": 1,
                "addl $, %eax;pushl $;movl %eax, -(%ebp);leal (%ebp), %eax;pushl %eax": 1,
                "pushl $;movl %eax, -(%ebp);leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "jmp  <IsCdRomFile+>;pushl %ebx;pushl %ebx;pushl -(%ebp);calll  <getES+>": 1,
                "calll - <IsCdRomFile+>;pushl $;pushl $;calll - <call_ica_hw_interrupt+>;calll - <setDL+>": 1,
                "int;int;pushl $;pushl $;calll *": 1,
                "pushl $;pushl $;calll *;retl;int": 1,
                "pushl $-;movl $, -(%ebp);movl $, -(%ebp);calll *%ebx;testl %eax, %eax": 1,
                "movl $, -(%ebp);movl $, -(%ebp);calll *%ebx;testl %eax, %eax;jge  <IsCdRomFile+>": 1,
                "pushl %esi;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $-": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl $-;pushl ": 1,
                "movzwl %ax, %eax;leal -(%ebp), %ecx;pushl %ecx;addl $, %eax;shll $, %eax": 1,
                "pushl ;movl %esi, -(%ebp);calll *%edi;testl %eax, %eax;jge  <IsCdRomFile+>": 1,
                "subl %eax, %ecx;pushl %ecx;pushl %eax;calll  <cpu_createthread+>;testl %eax, %eax": 1,
                "pushl %eax;pushl $-;movl %edi, -(%ebp);movl $, -(%ebp);calll *": 1,
                "calll  <WaitIfIdle+>;movl , %eax;movl %eax, ;pushl %esi;addl $, %eax": 1,
                "pushl %eax;pushl %esi;movl %esi, ;movl %esi, ;calll  <IsCdRomFile+>": 1,
                "movl %esp, %ebp;pushl %edi;movl , %edi;testl %edi, %edi;jne  <IsCdRomFile+>": 1,
                "movl %ecx, (%eax);movl , %eax;movl (%ebp), %ecx;movl %ecx, (%eax);movb (%ebp), %al": 1,
                "movl %ebx, (%esi);movl (%edi), %eax;movl %eax, (%esi);movl %edi, (%esi);movl %esi, (%edi)": 1,
                "movl %edi, (%esi);movl %esi, (%edi);movl (%esi), %eax;testl %eax, %eax;jne  <IsCdRomFile+>": 1,
                "jmp  <IsCdRomFile+>;movl %esi, (%eax);movl (%esi), %eax;testl %eax, %eax;je  <IsCdRomFile+>": 1,
                "movl (%esi), %ecx;incl %ecx;movl %ecx, (%eax);movl (%esi), %ecx;movb (%ecx), %cl": 1,
                "popl %esi;popl %ebx;popl %edi;popl %ebp;retl $": 4,
                "pushl %ecx;movl , %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax": 1,
                "movl , %eax;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %eax, %eax;jge  <IsCdRomFile+>;movl , %ecx;movl %ecx, %edx;andl $, %edx": 1,
                "movl , %ecx;movl %ecx, %edx;andl $, %edx;cmpb $, %dl;jb  <IsCdRomFile+>": 1,
                "cmpb $, %dl;jb  <IsCdRomFile+>;pushl %eax;pushl $;calll  <SetShadowDescriptorEntries+>": 1,
                "pushl %ebx;pushl %edi;calll  <getCH+>;calll  <getBP+>;xorl %edi, %edi": 1,
                "pushl %edi;xorl %ebx, %ebx;pushl %edi;incl %ebx;pushl %edi": 1,
                "movl %ebx, ;calll *;movl %eax, ;calll  <setAH+>;leal -(%ebp), %eax": 1,
                "pushl %eax;calll  <getCH+>;cmpl %edi, ;movzwl -(%ebp), %eax;movl %eax, ": 1,
                "subl $, %esp;pushl %esi;xorl %esi, %esi;cmpl %esi, ;je  <IsCdRomFile+>": 1,
                "leal -(%ebp), %eax;pushl %esi;pushl %eax;pushl $-;pushl ": 1,
                "pushl %eax;pushl $-;pushl ;movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "pushl %eax;pushl -(%ebp);leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "cmpw $, %si;je  <IsCdRomFile+>;andl $, %esi;calll - <.text+>;calll  <getES+>": 1,
                "movl %eax, ;jmp  <IsCdRomFile+>;cmpw $, %si;jne  <IsCdRomFile+>;movl , %eax": 1,
                "movl $, ;movl $, ;movl %eax, ;testb $, %dl;je  <IsCdRomFile+>": 1,
                "cmpl %esi, ;je  <IsCdRomFile+>;pushl %esi;pushl $;calll  <getDI+>": 1,
                "je  <IsCdRomFile+>;pushl %esi;pushl $;calll  <getDI+>;testb $-, %bl": 1,
                "pushl %eax;movl %edx, (%ecx);calll *;movl %eax, %ecx;movl , %eax": 1,
                "movb %al, (%ecx);cmpl $, ;popl %ebx;jg  <IsCdRomFile+>;calll - <ResumeTimerThread+>": 1,
                "popl %esi;popl %ebp;retl $;leave;addb %cl, (%edi)": 1,
                "sti;addb %cl, (%edi);movb $-, %ch;addb %cl, (%edi);sbbl %edx, %esi": 1,
                "calll - <IsCdRomFile+>;movzwl %ax, %eax;addl %edx, %eax;popl %ebp;retl $": 1,
                "movw %ax, (%edx);popl %ebp;retl $;int;int": 1,
                "pushl %esi;pushl %edi;calll - <IsCdRomFile+>;shrl $, %esi;pushl %esi": 1,
                "int;pushl $;pushl $;calll  <getDI+>;movl $, %edi": 1,
                "pushl $;calll  <getDI+>;popl %ecx;calll *;movl %eax, ": 1,
                "pushl %ecx;calll  <getDI+>;popl %ecx;popl %ecx;retl": 1,
                "jne  <IsCdRomFile+>;pushl %esi;calll  <getDI+>;calll  <getDI+>;orl $-, -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movb (%eax), %al;popl %ebp": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movw (%ebp), %ax;movl (%ebp), %ecx": 1,
                "shrl %eax;movl %eax, ;calll - <setCH+>;jmp  <IsCdRomFile+>;cmpb $, ": 1,
                "xorl %eax, ;calll - <setCH+>;calll - <getCL+>;movl , %eax;xorl %ebx, %eax": 1,
                "xorl %ebx, %ebx;movl %esi, %ecx;incl %ebx;shrl $, %ecx;shrl $, %eax": 1,
                "movl %ebx, ;calll - <getCL+>;movl , %eax;xorl %esi, %eax;testb $, %al": 1,
                "jmp  <IsCdRomFile+>;movb (%ebp), %dl;movl (%ebp), %eax;movb , %bl;movzbl %dl, %esi": 1,
                "movl , %ebx;shrl $, %esi;andl $, %esi;xorl %eax, %ebx;testb %bl, %cl": 1,
                "movl %esi, ;je  <IsCdRomFile+>;movb %dl, ;jmp  <IsCdRomFile+>;movb (%ebp), %al": 1,
                "calll *(%eax);cmpl $, ;movl , %ecx;movl , %eax;je  <IsCdRomFile+>": 2,
                "cmpl $, %eax;jmp  <IsCdRomFile+>;testb $, ;je  <IsCdRomFile+>;leal (%ecx,%eax,), %eax": 2,
                "jmp  <IsCdRomFile+>;movb (%ebp), %bl;cmpb %bl, ;je  <IsCdRomFile+>;movzbl , %eax": 1,
                "testb $-, ;je  <IsCdRomFile+>;pushl ;pushl ;calll  <getIntelRegistersPointer+>": 1,
                "je  <IsCdRomFile+>;pushl ;pushl ;calll  <getIntelRegistersPointer+>;jmp  <IsCdRomFile+>": 1,
                "andl $, ;jmp  <IsCdRomFile+>;orb $-, ;movl %ebx, ;testb $, %al": 1,
                "movl %ebx, ;testb $, %al;jne  <IsCdRomFile+>;pushl %ebx;pushl %ebx": 1,
                "jne  <IsCdRomFile+>;pushl %ebx;pushl %ebx;calll - <VDDAllocateDosHandle+>;andb $, ": 1,
                "movl %eax, ;calll - <getCL+>;jmp  <IsCdRomFile+>;movb (%ebp), %al;movb %al, ": 1,
                "movb (%ebp), %al;movb %al, ;movl , %edx;andl %ecx, %edx;testb $, %al": 1,
                "testb $, %al;movl %edx, ;je  <IsCdRomFile+>;xorl %ebx, %ebx;incl %ebx": 1,
                "andl %ebx, %esi;movl %esi, ;calll - <setCH+>;movb (%ebp), %al;movb %al, ": 1,
                "xorb %bh, %cl;addb %cl, (%edi);imull $, %ecx, %edi;jg ;cli": 1,
                "addb %cl, (%edi);cmpl $, %esp;bswapl %esp;int;int": 1,
                "andb $, %cl;cmpl $, ;movb %cl, ;jne  <setBL+>;calll  <SetShadowDescriptorEntries+>": 1,
                "calll  <cpu_createthread>;calll  <getBP+>;cmpl $, ;je  <setBL+>;jmp  <getDI+>": 1,
                "pushl $;pushl %ebx;pushl -(%ebp);calll *%edi;movl -(%ebp), %edi": 1,
                "pushl $;xorl %esi, %esi;pushl $;incl %esi;pushl %edi": 1,
                "incl %esi;pushl %edi;movl $, -(%ebp);movl %esi, -(%ebp);calll *": 1,
                "movl $, -(%ebp);movl %esi, -(%ebp);calll *;cmpl $-, %eax;popl %ebx": 1,
                "calll *;cmpl $-, %eax;popl %ebx;jne  <setBL+>;pushl %edi": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movl (%ebp), %eax;movl %edi, (%eax);jmp - <setBL+>": 1,
                "movl %eax, %ebx;jne  <setBL+>;movl %esi, %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;calll - <ResumeTimerThread+>;movl %eax, %edi;addl $, %esp;testl %edi, %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%esi,%edi), %ecx;pushl %edi;leal -(%ebp), %esi": 1,
                "andl %eax, %ecx;notl %ecx;movl %ecx, (%edx);movl , %ecx;andl %eax, %ecx": 4,
                "movl $, %eax;movl %eax, ;movl $, ;movl %eax, ;popl %ebp": 4,
                "movl , %eax;negl %eax;sbbl %eax, %eax;notl %eax;andl (%ebp), %eax": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, %esi": 1,
                "movl (%ebp), %ebx;cmpl %edi, %ebx;jne  <setBL+>;pushl %esi;calll - <getDX+>": 1,
                "je  <setBL+>;cmpl , %ebx;ja  <setBL+>;pushl %ebx;pushl %esi": 1,
                "je  <setBL+>;movl %esi, (%ebp);jmp  <setBL+>;pushl %ebx;calll - <ResumeTimerThread+>": 1,
                "jb  <setBL+>;movl %ebx, %eax;movl (%ebp), %edi;pushl (%ebp);movl %eax, %ecx": 1,
                "je  <setBL+>;pushl %ebx;calll  <getDI+>;testl %eax, %eax;popl %ecx": 2,
                "jmp  <setBL+>;movl , %eax;andl $, %eax;cmpl $, %eax;jbe  <setBL+>": 1,
                "pushl $;movl %eax, %ebx;shrl $, %edx;popl %edi;shrl $, %ebx": 1,
                "movb $, %bl;imulb %bl;orb %al, %dl;movb %dl, ;movl %esi, %eax": 2,
                "imulb %bl;orb %al, %dl;movb %dl, ;movl %esi, %eax;shrl %eax": 2,
                "jmp  <setBL+>;movl , %eax;xorl %ecx, %ecx;movl %esi, %edx;incl %ecx": 1,
                "cmpl %esi, %eax;je  <setBL+>;movl %esi, ;movl %ecx, ;movb %bl, %al": 1,
                "orb $, %al;movb %al, ;calll - <call_ica_hw_interrupt+>;jmp  <setBL+>;movb %bl, (,%eax,)": 1,
                "popl %esi;je  <setBL+>;movl %eax, %ecx;shrl $, %ecx;andb $, %dl": 1,
                "int;movl %edi, %edi;pushl %esi;calll - <getAX>;movzwl %ax, %esi": 4,
                "pushl %esi;calll - <getAX>;movzwl %ax, %esi;shll $, %esi;calll  <getBP>": 1,
                "movzwl %ax, %eax;addl %eax, %esi;jne  <setBL+>;pushl $;calll - <setCF>": 1,
                "pushl $;movzwl %ax, %eax;shll $, %ecx;pushl $;addl %eax, %ecx": 1,
                "movzwl %ax, %eax;shll $, %ecx;pushl $;addl %eax, %ecx;pushl %ecx": 2,
                "testl %eax, %eax;je  <setBL+>;movl -(%ebp), %esi;pushl $;calll - <ResumeTimerThread+>": 1,
                "int;movl %edi, %edi;pushl %esi;pushl %edi;calll - <getSS>": 1,
                "leal -(%esi,%eax), %eax;movl (%eax), %ecx;movl -(%eax), %edi;shll %ecx;subl $, %eax": 1,
                "calll - <SimpGetVDMPointer>;movl %eax, ;popl %esi;retl;int": 1,
                "movb (%ebp), %al;testb $, %al;movb %al, ;jne  <getCF+>;orl $, ": 1,
                "testb $, %al;movb %al, ;jne  <getCF+>;orl $, ;jmp  <getCF+>": 1,
                "jmp  <getCF+>;andl $-, ;testb $, %al;jne  <getCF+>;orl $, ": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;calll  <getCF+>;pushl -(%ebp)": 1,
                "jbe  <getCF+>;movl (%ebp), %eax;movw $, (%eax);jmp  <getCF+>;movw (%eax), %ax": 1,
                "movw $, (%eax);jmp  <getCF+>;movw (%eax), %ax;movl (%ebp), %ecx;movw %ax, (%ecx)": 1,
                "int;int;xorl %eax, %eax;pushl %esi;movl , %esi": 1,
                "movw %ax, (%esi);movl $, (%esi);cmpl $, %esi;popl %esi;jne  <getCF+>": 1,
                "calll  <setDH+>;xorl %edi, %edi;movw (,%esi,), %di;leal (,%esi,), %ebx;jmp  <getCF+>": 1,
                "calll - <getCL+>;popl %edi;popl %esi;popl %ebx;popl %ebp": 3,
                "movl (%ebp), %eax;xorl %esi, %esi;cmpl %esi, %eax;jne  <getCF+>;movl $, %eax": 1,
                "calll *;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "jge  <getCF+>;cmpl $, %eax;jne  <getCF+>;pushl $;jmp  <getCF+>": 1,
                "calll *;movl %eax, -(%ebp);cmpl %esi, %eax;je  <getCF+>;cmpl %esi, (%ebp)": 1,
                "je - <getCF+>;popl %esi;retl;int;int": 1,
                "shll $, %eax;pushl %eax;calll - <SimpGetVDMPointer>;movl %eax, %esi;calll *": 1,
                "movl $, %ecx;shrl $, %eax;shll $, %eax;cmpl %ecx, %eax;jb  <getCF+>": 1,
                "movl %ecx, %eax;movl %eax, (%esi);shrl $, %eax;movl %eax, (%esi);movl $, (%esi)": 1,
                "movl %eax, (%esi);movl $, (%esi);movl -(%ebp), %eax;shrl $, %eax;movl %eax, (%esi)": 2,
                "movl $, (%esi);movl -(%ebp), %eax;shrl $, %eax;movl %eax, (%esi);movl $, (%esi)": 1,
                "movl %esp, %ebp;movl %fs:, %eax;movl (%eax), %eax;movl (%ebp), %ecx;shll $, %ecx": 5,
                "jg  <setIF+>;je  <setIF+>;cmpl $, %eax;jg  <setIF+>;je  <setIF+>": 1,
                "decl %eax;je  <setIF+>;decl %eax;jne  <setIF+>;movl $, %esi": 1,
                "jmp  <setIF+>;movl $, %esi;jmp  <setIF+>;movl $, %esi;pushl %edx": 1,
                "pushl $;popl %eax;jmp - <setIF+>;movl $, %esi;jmp  <setIF+>": 1,
                "decl %eax;jne  <setIF+>;pushl $;jmp  <setIF+>;xorl %eax, %eax": 1,
                "pushl $;movl %ebx, %edi;movsl (%esi), %es:(%edi);movsb (%esi), %es:(%edi);calll  <host_com_close+>": 1,
                "movsl (%esi), %es:(%edi);movsb (%esi), %es:(%edi);calll  <host_com_close+>;movw %ax, (%ebx);jmp  <setIF+>": 1,
                "jmp  <setIF+>;movl $, %esi;jmp  <setIF+>;subl $, %eax;je  <setIF+>": 1,
                "decb %al;jmp  <setIF+>;movb , %cl;jmp  <setIF+>;movb , %cl": 1,
                "jmp  <setIF+>;movl (%ebp), %eax;movb $-, (%eax);popl %ebp;retl $": 1,
                "unpckhps (%eax), %xmm;addl %ecx, (%edi);sbbl $, %eax;int;int": 1,
                "sbbl $, %eax;int;int;int;int": 1,
                "jne  <setIF+>;popl %esi;jmp - <setDL+>;cmpl $, %esi;jne  <setIF+>": 1,
                "movl %esp, %ebp;pushl %ecx;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 2,
                "movl %eax, (%ebp);leal (%ebp), %eax;pushl %eax;pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $-": 3,
                "pushl %eax;pushl $-;calll *%esi;cmpl %ebx, %eax;jl - <setIF+>": 1,
                "jl - <setIF+>;cmpl %ebx, ;movl -(%ebp), %ecx;je  <setIF+>;movl (%ebp), %edx": 1,
                "calll  <getES>;movzwl %ax, %edx;movl %edx, %esi;movzwl %di, %eax;shll $, %esi": 1,
                "movb %cl, -(%ebp);pushl %ebx;pushl -(%ebp);calll - <demGetPhysicalDriveType>;cmpb $, %al": 1,
                "pushl -(%ebp);calll - <demGetPhysicalDriveType>;cmpb $, %al;je  <setIF+>;cmpb $, %al": 1,
                "calll - <demGetPhysicalDriveType>;cmpb $, %al;je  <setIF+>;cmpb $, %al;jne  <setIF+>": 1,
                "pushl %edi;calll - <setBP>;popl %edi;popl %esi;leave": 1,
                "pushl %ebx;calll - <IsCdRomFile+>;calll  <setCS+>;calll *;movl %eax, ": 1,
                "je  <setIF+>;leal -(%ebp), %eax;pushl %eax;calll  <SetShadowDescriptorEntries+>;pushl %esi": 1,
                "calll - <IsCdRomFile+>;movl -(%ebp), %eax;orl %eax, -(%ebp);movl $, %esi;pushl %esi": 1,
                "pushl %eax;calll *;testl %eax, %eax;je  <setIF+>;cmpl %esi, %eax": 1,
                "calll  <WaitIfIdle+>;movzwl %di, %eax;subl $, %eax;je  <setIF+>;subl $, %eax": 1,
                "incl %edi;testb %al, %al;jne - <setIF+>;movl $, %esi;jmp  <setIF+>": 3,
                "je  <setIF+>;cmpl %edi, -(%ebp);jne  <setIF+>;movl , %eax;pushl %edi": 1,
                "pushl $;pushl $-;calll *;xorl %eax, %eax;jmp  <setIF+>": 1,
                "pushl $;pushl $;calll  <WOWSysErrorBox+>;jmp  <setIF+>;leal -(%ebp), %eax": 1,
                "pushl $;calll - <call_ica_hw_interrupt+>;cmpb $, ;movw , %ax;movw %ax, ": 1,
                "cmpw %si, %ax;movw , %cx;movw %ax, ;movw %cx, ;jne  <setIF+>": 1,
                "xorl %eax, %eax;incl %eax;movl %eax, ;testb %dl, %dl;jne  <setIF+>": 1,
                "pushl %ebx;pushl %edi;leal (%ebp), %eax;pushl %eax;calll *": 1,
                "calll *;testl %eax, %eax;movl , %esi;movl $, %ebx;movl $, %edi": 5,
                "jmp  <setIF+>;orl $, ;jmp  <setIF+>;andl $-, ;movzbl , %eax": 1,
                "movb %bl, ;calll  <getDI+>;popl %esi;popl %ebx;popl %ebp": 1,
                "int;int;calll - <getDL+>;cmpl $, ;je  <setIF+>": 1,
                "pushl %esi;pushl %edi;shll $, %edx;xorl %edi, %edi;xorl %esi, %esi": 1,
                "incl %edi;movl %edi, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "testb $, %dl;je  <setIF+>;incl %ebx;cmpl (%esi), %ebx;jb - <setIF+>": 1,
                "movl (%ebp), %eax;leal (%ebx,%eax), %ebx;cmpl %edi, (%ebp);jne  <setIF+>;movl $, -(%ebp)": 1,
                "cmpl %edi, (%ebp);jne  <setIF+>;movl $, -(%ebp);xorl %eax, %eax;cmpl %eax, -(%ebp)": 1,
                "pushl %edi;movl (%ebp), %edi;movl (%edi), %esi;xorl %eax, %eax;xorl %edx, %edx": 1,
                "movl (%edi), %esi;xorl %eax, %eax;xorl %edx, %edx;cmpl %eax, %esi;movl %eax, -(%ebp)": 1,
                "xorl %eax, %eax;xorl %edx, %edx;cmpl %eax, %esi;movl %eax, -(%ebp);jbe  <setIF+>": 1,
                "testb $, %bl;je  <setIF+>;incl %eax;cmpl %esi, %eax;jb - <setIF+>": 1,
                "pushl %edi;pushl %esi;calll  <setIF+>;testl %eax, %eax;jne  <setIF+>": 1,
                "movb $, %bl;shlb %cl, %bl;shrl $, %eax;leal (%eax,%esi), %eax;orb %bl, (%eax)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %ecx;pushl %ebx": 2,
                "movl (%ebp), %eax;movl (%ebp), %ecx;pushl %ebx;pushl %esi;leal (%eax,%ecx), %esi": 1,
                "addl (%ebp), %eax;pushl %ebx;pushl %eax;calll *(%edi);jmp  <setIF+>": 1,
                "jmp  <setAH+>;pushl %eax;calll *;pushl %eax;calll *": 1,
                "movl , %eax;movl %eax, %ecx;shrl $, %edx;shrl $, %ecx;andl %esi, %edx": 1,
                "je  <setAH+>;cmpl %esi, %ecx;jne  <setAH+>;orl $, ;movl $, ": 1,
                "calll *;pushl %eax;pushl $;calll  <host_direct_access_error+>;leal (%ebp), %eax": 1,
                "movl %esi, -(%ebp);calll - <call_ica_hw_interrupt+>;pushl %ebx;leal (%esi), %edi;pushl %edi": 1,
                "movb (%edi), %ah;pushl %eax;leal (%ebx,%ebx), %eax;pushl %eax;calll - <IsCdRomFile+>": 1,
                "popl %esi;popl %ebx;jne  <setAH+>;calll  <getBP+>;calll  <RegisterWOWIdle+>": 1,
                "popl %ebx;jne  <setAH+>;calll  <getBP+>;calll  <RegisterWOWIdle+>;leave": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;pushl %edi;leal -(%ebp), %eax": 2,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;xorl %edi, %edi;incl %edi": 1,
                "testl %eax, %eax;jne  <setAH+>;cmpl $, -(%ebp);jne  <setAH+>;xorl %edi, %edi": 1,
                "movw %si, (%eax);addl $, %eax;cmpl $, %eax;jb - <setAH+>;popl %edi": 1,
                "int;int;int;calll - <setIF+>;andl $, ": 1,
                "pushl -(%ebp);calll - <IsCdRomFile+>;movl %eax, ;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, ;movl , %eax;movl (%eax), %eax;andl $, (%eax);calll - <getAL>": 1,
                "pushl %eax;movl $, %edi;pushl %edi;calll - <getCF+>;movl , %eax": 1,
                "pushl %eax;pushl %esi;calll - <IsCdRomFile+>;movl , %eax;movl (%eax), %eax": 2,
                "pushl ;pushl %eax;calll  <getBP+>;addl $, %esp;leal -(%ebp), %eax": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;testl %eax, %eax;je  <setAH+>": 1,
                "je  <setAH+>;pushl %eax;calll *;orl $-, (%esi);popl %esi": 1,
                "movzwl (%ebp), %ecx;movl (%eax), %eax;movl %ecx, (%eax);popl %ebp;retl $": 7,
                "calll  <cpu_createthread+>;pushl $;calll - <setAH>;pushl $;calll - <setCF>": 1,
                "calll - <setIF>;calll - <IsCdRomFile+>;pushl $;pushl $;calll - <call_ica_hw_interrupt+>": 1,
                "movb %dl, (%eax);jne - <getBP+>;pushl %esi;pushl %edi;xorl %esi, %esi": 1,
                "pushl %edi;calll  <getES+>;incl %edi;incl %edi;cmpw $, %di": 1,
                "calll  <getES+>;incl %edi;incl %edi;cmpw $, %di;jbe - <getBP+>": 1,
                "movl $, ;calll - <call_ica_hw_interrupt+>;popl %edi;popl %esi;retl": 1,
                "movl , %eax;leal (%eax), %ecx;pushl %ecx;calll *(%eax);retl": 1,
                "pushl %ecx;calll *(%eax);retl;int;int": 1,
                "leal (%esi), %ecx;movl %eax, %edx;subl %edx, %ecx;xorl %ebx, %ebx;movb (%eax), %dl": 1,
                "movl %eax, (%esi);jbe  <getBP+>;movl %eax, ;pushl $;leal -(%ebp), %eax": 1,
                "movl %eax, ;pushl $;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "pushl %ebx;pushl %ebx;pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "cmpl %ebx, %eax;je  <getBP+>;leal (%eax,%eax,), %edx;leal -(%ebp,%edx,), %edx;movl (%edx), %ecx": 1,
                "decl %ecx;decl %ecx;je  <getBP+>;decl %ecx;jne  <getBP+>": 1,
                "movw $, (%esi);subl $, %edx;decl %eax;jne - <getBP+>;cmpw %bx, (%esi)": 1,
                "movl $, (%eax);movl $, (%eax);xorl %eax, %eax;movb %bl, (%esi);movb %bl, (%esi)": 1,
                "movl %edi, ;movl %eax, ;xorl %eax, %eax;movb (%esi), %al;pushl %eax": 1,
                "movl %eax, ;addl %ecx, %eax;movl %eax, ;incl %eax;movl %eax, ": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;testl %eax, %eax;jl  <getBP+>": 1,
                "movl %esp, %ebp;pushl %esi;xorl %esi, %esi;cmpl %esi, ;jne  <getBP+>": 1,
                "cmpl $, (%ebp);jne  <getBP+>;movl $, (%ebp);pushl %esi;jmp  <getBP+>": 1,
                "jne  <getBP+>;movl $, (%ebp);pushl %esi;jmp  <getBP+>;movl $, (%ebp)": 1,
                "je  <getBP+>;calll *;cmpl $, %eax;je  <getBP+>;pushl (%ebp)": 1,
                "cmpl $, (%ebp);movl $, %esi;jne  <getBP+>;movl $, %ecx;pushl $": 1,
                "movl $, %ecx;pushl $;popl %eax;movb (%ebx), %dl;movb %dl, (%esi)": 1,
                "jle  <getBP+>;movb (%ebx), %dl;movb %dl, (%esi);incl %esi;incl %ebx": 1,
                "shll $, %esi;calll - <getBP>;movzwl %ax, %eax;addl %eax, %esi;calll - <getCX>": 2,
                "calll - <getCX>;movzwl %ax, %edi;shll $, %edi;calll - <getDX>;movzwl %ax, %eax": 4,
                "pushl %esi;calll - <demClientErrorEx+>;jmp  <getBP+>;pushl $;calll - <setCF>": 1,
                "jne  <getBP+>;xorl %eax, %eax;jmp  <getBP+>;movzwl , %eax;movl , %ecx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);movzwl , %eax": 1,
                "movzwl , %eax;addl %eax, (%ebx);movzwl , %eax;subl %eax, (%ebx);movzwl , %eax": 1,
                "movb (%edi), %cl;testb %cl, %cl;movl %edx, -(%ebp);movl %edx, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl %edi, -(%ebp);je  <getBP+>;movl %edi, %eax;leal (%eax), %esi": 1,
                "calll - <demFileFindNext+>;addl $, %esp;negl %eax;sbbl %eax, %eax;incl %eax": 2,
                "movl %esi, -(%ebp);jmp  <getBP+>;leal (%eax), %edx;movb (%eax), %cl;incl %eax": 1,
                "movl %eax, -(%ebp);movl %eax, %esi;xorl %eax, %eax;cmpl %eax, -(%ebp);je  <getBP+>": 1,
                "pushl (%ebx);calll - <setBL+>;movl %eax, %edi;testl %edi, %edi;popl %ecx": 1,
                "movb $, (%esi);movl -(%ebp), %esi;popl %ecx;jmp  <getBP+>;andl $, -(%ebp)": 1,
                "decl (%ebx);movl , %edi;cmpl %edx, %edi;jne  <getBP+>;pushl (%ebx)": 1,
                "calll  <getDI+>;leave;retl $;movl %edi, %eax;leal (%eax), %esi": 1,
                "testl %eax, %eax;popl %ecx;movl %eax, -(%ebp);je  <getBP+>;pushl -(%ebp)": 1,
                "leal (%eax,%esi), %edi;cmpb $, (%edi);jne - <getBP+>;jmp - <getBP+>;cmpl $, -(%ebp)": 1,
                "xorl %eax, %eax;jmp - <getBP+>;int;int;int": 1,
                "pushl $;calll  <getDI+>;xorl %ebx, %ebx;movl %ebx, -(%ebp);movl , %eax": 1,
                "movl %eax, %esi;movl $, -(%ebp);cmpl %ebx, %esi;je  <getBP+>;pushl $": 1,
                "movl $, -(%ebp);cmpl %ebx, %esi;je  <getBP+>;pushl $;pushl ": 1,
                "je  <getBP+>;pushl $;pushl ;pushl -(%ebp);pushl %esi": 1,
                "pushl (%ebp);pushl $;pushl ;calll  <getDI+>;addl $, %esp": 1,
                "calll - <getDX+>;popl %ecx;movl (%ebp), %eax;leal -(%ebp), %esp;calll  <getDI+>": 1,
                "cmpl $, ;pushl %ebx;movl (%ebp), %ebx;pushl %esi;pushl %edi": 1,
                "pushl %eax;pushl %edi;pushl ;calll  <getDI+>;addl $, %esp": 1,
                "leal (%ebx), %eax;jle  <getBP+>;movl %ebx, %eax;popl %edi;popl %esi": 1,
                "pushl (%ebp);leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%eax), %eax;movw $, (%eax);movl , %eax;movl (%eax), %eax;movw %bx, (%eax)": 2,
                "movl (%eax), %eax;orw $, (%eax);movl , %eax;movl (%eax), %eax;movw $, (%eax)": 1,
                "movw $, (%eax);movl , %eax;movl (%eax), %eax;orw $-, (%eax);movl , %eax": 1,
                "movl (%esi), %esi;movw (%ecx), %di;movw %di, -(%eax,%esi);movl , %esi;movw (%ecx), %di": 1,
                "movw (%ecx), %di;movl (%esi), %esi;movw %di, (%eax,%esi);incl %eax;incl %eax": 1,
                "movl %ebx, (%eax);movl $, %eax;movl , %ecx;movl (%ecx), %ecx;movw %bx, -(%eax,%ecx)": 1,
                "movl (%ecx), %ecx;movw %bx, -(%eax,%ecx);movl , %ecx;movl (%ecx), %ecx;movw %bx, (%eax,%ecx)": 1,
                "movw %bx, (%eax,%ecx);movl , %ecx;movl (%ecx), %ecx;movw %bx, (%eax,%ecx);incl %eax": 1,
                "jmp  <getBP+>;xorl %eax, %eax;popl %esi;popl %ebp;retl $": 1,
                "ja  <getBP+>;cmpb $, ;jne  <getBP+>;calll - <getAL>;andl $, %eax": 1,
                "testb $, (%eax);je  <getBP+>;cmpb $, ;jne  <getBP+>;calll - <getAL>": 5,
                "leal (%esi), %ebx;pushl %ebx;calll - <IsCdRomFile+>;cmpb -(%ebp), %al;je  <getBP+>": 1,
                "je  <getBP+>;incl %ebx;cmpb $-, %al;jne - <getBP+>;jmp  <getBP+>": 1,
                "pushl $;pushl %edi;addl $, %esi;pushl %esi;calll  <cpu_createthread+>": 1,
                "calll  <getCH+>;addl $, %ebx;pushl %ebx;calll - <getCF+>;movl %eax, %esi": 1,
                "calll - <getCF+>;movl %eax, %esi;testl %esi, %esi;je  <getBP+>;leal (%esi), %edi": 1,
                "jne - <getBP+>;jmp  <getBP+>;pushl %esi;calll - <IsCdRomFile+>;movzbl %al, %eax": 1,
                "pushl %esi;calll - <IsCdRomFile+>;movzbl %al, %eax;pushl %eax;calll  <RegisterWOWIdle+>": 1,
                "decb %al;pushl %eax;pushl $;calll - <IsCdRomFile+>;pushl $": 1,
                "pushl %eax;pushl $;calll - <IsCdRomFile+>;pushl $;pushl $": 4,
                "movzbl (%eax), %eax;pushl %eax;jmp  <getBP+>;cmpb $, %bl;jae  <getBP+>": 1,
                "calll - <IsCdRomFile+>;incl %esi;incl %esi;cmpl $, %esi;jl - <getBP+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movw $, ;movw $, ;calll *": 1,
                "movl %eax, ;movzwl , %eax;shll $, %eax;addl %ecx, %eax;pushl %eax": 1,
                "xorl %ecx, %ecx;cmpl %eax, ;pushl %eax;pushl ;setne %cl": 1,
                "setne %cl;pushl ;pushl ;incl %ecx;pushl %ecx": 1,
                "popl %edi;popl %esi;movl $, ;popl %ebx;leave": 2,
                "jmp  <getBP+>;movsbl %al, %eax;pushl %eax;calll - <getCL+>;testl %eax, %eax": 1,
                "movb (%edi), %al;cmpb $, %al;jne  <getBP+>;incl %edi;movb (%edi), %al": 1,
                "incl %edi;movsbl (%edi), %eax;pushl %eax;calll - <getCL+>;testl %eax, %eax": 1,
                "popl %ecx;jne - <getBP+>;pushl $;pushl %edi;calll  <SetShadowDescriptorEntries+>": 1,
                "calll  <SetShadowDescriptorEntries+>;addl $, %eax;movl %eax, %edi;movb (%edi), %al;testb %al, %al": 1,
                "movl %eax, %edi;movb (%edi), %al;testb %al, %al;popl %ecx;popl %ecx": 1,
                "popl %ecx;je  <getBP+>;movb (%edi), %al;cmpb $, %al;jne  <getBP+>": 1,
                "xorl %eax, %eax;movl %eax, ;movl %eax, ;pushl %eax;movb $-, (%ecx)": 1,
                "calll - <IsCdRomFile+>;cmpb $, %al;je  <getBP+>;xorl %eax, %eax;incl %eax": 1,
                "pushl %edi;xorl %edi, %edi;cmpl %edi, ;pushl $;movl %eax, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %esi;jmp  <getES+>": 1,
                "cmpl $, -(%ebp);movl -(%ebp), %eax;leal -(%ebp,%eax), %eax;jb  <getES+>;cmpl $, (%eax)": 1,
                "cmpl %edx, -(%ebp);jb - <getES+>;movl (%ecx), %eax;shrl $, %eax;leal (%ecx), %esi": 1,
                "pushl $;popl %eax;pushl %edi;pushl $;pushl %eax": 1,
                "pushl %eax;pushl $;pushl $;movl %ebx, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp)": 1,
                "jl  <getES+>;cmpw %di, -(%ebp);movl %edi, ;movl $, -(%ebp);jbe  <getES+>": 1,
                "movl %eax, -(%ebp);movl (%eax), %eax;leal (%edi,%ebx), %edx;cmpl %eax, %edx;jbe  <getES+>": 1,
                "movl -(%ebp), %eax;cmpl %eax, %ebx;jne  <getES+>;pushl $;pushl %edi": 1,
                "cmpl %eax, %ebx;jne  <getES+>;pushl $;pushl %edi;pushl %eax": 1,
                "movl %ebx, %ecx;subl %eax, %ecx;pushl %ecx;pushl %eax;calll - <IsCdRomFile+>": 1,
                "cmpl %edi, ;jne  <getES+>;movl %eax, ;jmp  <getES+>;movl -(%ebp), %ecx": 1,
                "movl (%ebp), %ecx;shll $, %eax;movl %ecx, (%eax);movl $, (%eax);movl $, (%eax)": 2,
                "cmpl $, %ebx;jl - <getES+>;popl %edi;popl %esi;popl %ebx": 1,
                "movb %al, (%ecx);cmpl $, ;jle  <getES+>;decl ;jne  <getES+>": 1,
                "jmp  <getES+>;orb $, ;jmp  <getES+>;movl , %eax;movl (%eax), %eax": 1,
                "cltd;popl %ecx;idivl %ecx;pushl %edx;jmp  <getES+>": 1,
                "movl %edi, %edi;pushl %esi;calll - <getDS>;movw %ax, ;calll - <getDX>": 1,
                "idivl %edi;movl %edx, (%ecx);movl , %ecx;movl (%ecx), %eax;cmpl %esi, %eax": 1,
                "movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);jmp  <getES+>": 1,
                "movl $, %esi;movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movl %ecx, -(%ebp)": 2,
                "movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);xorl %eax, %eax;cmpl %eax, -(%ebp);je  <getES+>": 1,
                "testl %eax, %eax;popl %ecx;movl %eax, ;je  <getES+>;movl , %edx": 1,
                "subl $, %eax;je  <getES+>;subl $, %eax;je  <getES+>;movl , %edi": 2,
                "incl %edi;pushl %edi;pushl $;pushl ;calll - <setBP+>": 1,
                "jne  <getES+>;calll  <WaitIfIdle+>;addl -(%ebp), %ebx;cmpl $, -(%ebp);jne - <getES+>": 1,
                "popl %esi;popl %ebx;jne  <getES+>;pushl ;calll - <getDX+>": 1,
                "movl $, -(%ebp);movl %esi, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);calll *": 1,
                "pushl %eax;calll  <getDI+>;testb %al, %al;je  <setCS+>;leal -(%ebp), %eax": 1,
                "pushl $;pushl %ebx;pushl -(%ebp);calll *%esi;testl %eax, %eax": 1,
                "calll *;popl %edi;popl %ebx;movl -(%ebp), %ecx;popl %esi": 1,
                "jne  <setCS+>;pushl $;pushl %ebx;calll *%esi;pushl %eax": 5,
                "pushl $;pushl ;calll *;testl %eax, %eax;jne  <setCS+>": 3,
                "int;movl %edi, %edi;pushl %ebx;pushl %esi;pushl $": 1,
                "movb (%ecx), %dl;movb %dl, (%eax);movb (%ecx), %dl;movb %dl, (%eax);movb (%ecx), %dl": 1,
                "int;pushl $;movl $, ;calll - <setDI+>;retl": 1,
                "pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 5,
                "leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);popl %edi;pushl -(%ebp);calll  <demWOWLFNEntry+>": 1,
                "calll  <host_direct_access_error+>;movl , %eax;andl $, ;pushl $-;movl %eax, ": 1,
                "pushl %eax;pushl $;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 2,
                "pushl $-;calll *%edi;movl , %eax;movl %eax, ;movl , %eax": 1,
                "xorl %edi, %edi;cmpl %edi, ;popl %ebx;jne  <setCS+>;cmpl %edi, ": 1,
                "leal (%edi), %ecx;movl %ecx, (,%edi,);movb (%ecx), %cl;movl %eax, (,%edi,);movb $-, (%eax)": 1,
                "incl %eax;incl %edi;cmpl $, %edi;jl - <setCS+>;movl $, %eax": 2,
                "addl (%edx), %eax;movl %eax, ;addl (%edx), %eax;movl %eax, ;addl (%edx), %eax": 1,
                "movl %eax, ;addl (%edx), %eax;movl %eax, ;movl (%edx), %edx;movl %ecx, ": 1,
                "movl (%esi), %eax;addl %ecx, %eax;movl %eax, ;popl %esi;leave": 1,
                "pushl %eax;pushl $;pushl $;pushl -(%ebp);calll *": 2,
                "pushl $;pushl -(%ebp);calll *;pushl -(%ebp);movl %eax, %esi": 1,
                "andl $, %eax;cmpl $, %eax;jne  <setCS+>;movl $, -(%ebp);movb $, -(%ebp)": 1,
                "popl %ecx;jne  <setCS+>;leal -(%ebp), %eax;pushl $;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl $;pushl %eax;calll - <getBP+>": 5,
                "leal -(%ebp), %eax;addl $, %esp;leal (%eax), %edx;movb (%eax), %cl;incl %eax": 1,
                "jne - <setCS+>;subl %edx, %eax;cmpl $, %eax;ja  <setCS+>;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl $;pushl %eax;movl %esi, -(%ebp);calll - <getBP+>": 1,
                "movsl (%esi), %es:(%edi);leal -(%ebp), %eax;movsw (%esi), %es:(%edi);movl %eax, %edx;movb (%eax), %cl": 1,
                "testb %cl, %cl;jne - <setCS+>;movl -(%ebp), %esi;subl %edx, %eax;movl %eax, %ebx": 1,
                "incl %eax;testb %cl, %cl;jne - <setCS+>;movl -(%ebp), %eax;pushl $": 1,
                "pushl $;calll - <getES+>;pushl $;pushl $;calll  <setDH+>": 1,
                "calll  <setDH+>;movl $, %edx;xorl %eax, %eax;movl %edx, %ecx;movl $, %edi": 1,
                "movl $, %edi;rep  stosl %eax, %es:(%edi);popl %edi;retl;int": 2,
                "pushl -(%ebp);pushl $;calll - <IsCdRomFile+>;movzbl -(%ebp), %esi;cmpl %edi, %esi": 1,
                "addb $-, %al;pushl %eax;calll - <setDL>;pushl $;calll - <setAH>": 1,
                "orl $, %eax;pushl %eax;pushl $;calll  <getDI+>;incl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;pushl ;pushl ": 1,
                "pushl %edi;calll - <getDS>;movzwl %ax, %ebx;shll $, %ebx;calll - <getDX>": 1,
                "subl %edx, %eax;incl %eax;cmpl $, ;movw %ax, ;je  <RegisterWOWIdle+>": 1,
                "pushl $;pushl %ebx;calll  <SetShadowDescriptorEntries+>;testl %eax, %eax;popl %ecx": 1,
                "cmpb $, (%ebx);movl %ebx, %eax;je  <RegisterWOWIdle+>;cmpb $, (%eax);jne  <RegisterWOWIdle+>": 1,
                "movl $, -(%ebp);movl , %ecx;testl %ecx, %ecx;je  <RegisterWOWIdle+>;testb $, (%ecx)": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;jne  <RegisterWOWIdle+>;xorl %eax, %eax;movb (%ebx), %al": 1,
                "pushl $;andl $, %esi;pushl %esi;pushl $;leal -(%ebp), %eax": 1,
                "movl $, -(%ebp);movl %edi, -(%ebp);pushl %edi;jmp  <RegisterWOWIdle+>;cmpl $, -(%ebp)": 1,
                "cmpl $-, %esi;je  <RegisterWOWIdle+>;cmpl $, -(%ebp);jne  <RegisterWOWIdle+>;pushl %esi": 1,
                "movb (%esi), %al;cmpb $, %al;je  <RegisterWOWIdle+>;cmpb $, %al;jne  <RegisterWOWIdle+>": 3,
                "incl %esi;pushl $;pushl %esi;calll - <demFileFindNext+>;addl $, %esp": 1,
                "int;int;movl , %eax;testl %eax, %eax;je  <RegisterWOWIdle+>": 1,
                "jae  <RegisterWOWIdle+>;testl %eax, %eax;jne  <RegisterWOWIdle+>;movl (%edi), %ecx;testl %ecx, %ecx": 1,
                "calll - <getCX+>;movb -(%ebp), %al;movb %al, %bl;shrb $, %bl;shlb $, %al": 1,
                "pushl %esi;calll - <call_ica_hw_interrupt+>;xorl %edi, %edi;pushl %edi;pushl $": 1,
                "calll - <call_ica_hw_interrupt+>;xorl %edi, %edi;pushl %edi;pushl $;calll - <IsCdRomFile+>": 1,
                "pushl -(%ebp);pushl %esi;calll - <IsCdRomFile+>;jmp  <RegisterWOWIdle+>;pushl $": 1,
                "pushl %esi;calll - <IsCdRomFile+>;cmpl $, %edi;jne  <RegisterWOWIdle+>;calll  <getDI+>": 1,
                "movl %ecx, %eax;leave;retl $;int;int": 1,
                "xorl %eax, %eax;movb (%esi), %al;pushl %edi;pushl $;pushl %eax": 1,
                "pushl $;pushl %eax;calll - <getES+>;xorl %eax, %eax;movb (%esi), %al": 1,
                "calll - <getES+>;xorl %eax, %eax;movb (%esi), %al;pushl $;pushl %eax": 1,
                "pushl $;pushl %eax;calll  <setDH+>;xorl %edi, %edi;movw (,%esi,), %di": 1,
                "cmpl %eax, ;je  <RegisterWOWIdle+>;calll  <getDI+>;jmp - <getAX+>;int": 1,
                "int;movl , %eax;testl %eax, %eax;pushl %esi;pushl $": 1,
                "popl %ecx;popl %ecx;movl %eax, ;jne  <RegisterWOWIdle+>;pushl $": 2,
                "movl %eax, ;jne  <RegisterWOWIdle+>;pushl $;pushl %esi;movl %esi, ": 1,
                "jl - <RegisterWOWIdle+>;xorl %eax, %eax;popl %esi;retl;int": 1,
                "cmpl $, %eax;jne  <RegisterWOWIdle+>;pushl $;popl %eax;movl %eax, ": 1,
                "pushl $;popl %eax;movl %eax, ;jmp  <RegisterWOWIdle+>;movl , %eax": 1,
                "jmp  <RegisterWOWIdle+>;movl , %eax;cmpl $, %eax;jne  <RegisterWOWIdle+>;cmpl %ebx, %edi": 1,
                "subl %edi, %eax;pushl %ebx;sarl %eax;incl %eax;pushl %eax": 1,
                "incl %eax;pushl %eax;pushl %edi;pushl %ebx;pushl %ebx": 1,
                "pushl -(%ebp);pushl %eax;pushl -(%ebp);pushl %edi;pushl %ebx": 1,
                "movl -(%ebp), %ebx;pushl %edi;calll *;jmp  <RegisterWOWIdle+>;cmpl $, %eax": 1,
                "pushl %edi;calll *;jmp  <RegisterWOWIdle+>;cmpl $, %eax;je  <RegisterWOWIdle+>": 1,
                "jne  <RegisterWOWIdle+>;movl , %eax;movl $, ;movl %eax, (%ebp);movl %eax, %esi": 1,
                "je  <RegisterWOWIdle+>;xorl %edx, %edx;xorl %eax, %eax;cmpl %esi, (%eax);je  <RegisterWOWIdle+>": 1,
                "movl %ebx, ;jbe  <RegisterWOWIdle+>;cmpb $, -(%ebp);je  <RegisterWOWIdle+>;leal -(%ebp), %ecx": 1,
                "stosb %al, %es:(%edi);leal (%ecx), %ebx;movb (%ebx), %al;movl %ebx, %esi;jmp  <RegisterWOWIdle+>": 1,
                "addl $, %ebx;cmpl $, -(%ebp);jb - <RegisterWOWIdle+>;movl (%ebp), %eax;movl %eax, ": 1,
                "incl %ecx;incl %ecx;cmpb $, -(%ecx);jne - <RegisterWOWIdle+>;movl %edi, %eax": 1,
                "je  <RegisterWOWIdle+>;calll  <getDI+>;calll  <getDI+>;xorl %eax, %eax;jmp  <RegisterWOWIdle+>": 1,
                "pushl $-;calll - <RegisterWOWIdle+>;popl %ecx;movl $, ;xorl %eax, %eax": 1,
                "divl %ecx;cmpl (%ebp), %eax;jae  <RegisterWOWIdle+>;xorl %eax, %eax;popl %ebp": 1,
                "testl %esi, %esi;pushl %edi;movl %esi, %edi;jne  <RegisterWOWIdle+>;incl %esi": 1,
                "jne  <RegisterWOWIdle+>;incl %esi;xorl %edx, %edx;cmpl $-, %esi;ja  <RegisterWOWIdle+>": 1,
                "incl %esi;xorl %edx, %edx;cmpl $-, %esi;ja  <RegisterWOWIdle+>;cmpl $, ": 1,
                "calll - <ResumeTimerThread+>;movl %eax, %edx;testl %edx, %edx;popl %ecx;jne  <RegisterWOWIdle+>": 1,
                "movl %eax, %edx;testl %edx, %edx;popl %ecx;jne  <RegisterWOWIdle+>;pushl %esi": 1,
                "je  <RegisterWOWIdle+>;pushl %esi;calll  <getDI+>;testl %eax, %eax;popl %ecx": 1,
                "calll  <getDI+>;testl %eax, %eax;popl %ecx;jne - <RegisterWOWIdle+>;jmp  <RegisterWOWIdle+>": 1,
                "testl %eax, %eax;popl %ecx;jne - <RegisterWOWIdle+>;jmp  <RegisterWOWIdle+>;movl %edi, %ecx": 1,
                "popl %edi;popl %esi;popl %ebp;retl;int": 4,
                "pushl %esi;jmp  <RegisterWOWIdle+>;cmpb $, %cl;je  <RegisterWOWIdle+>;incl %edi": 1,
                "calll - <ResumeTimerThread+>;movl %eax, %ebx;testl %ebx, %ebx;popl %ecx;movl %ebx, ": 1,
                "jne  <RegisterWOWIdle+>;orl $-, %eax;jmp  <RegisterWOWIdle+>;movl , %esi;jmp  <RegisterWOWIdle+>": 1,
                "movl , %esi;jmp  <RegisterWOWIdle+>;movl %esi, %eax;leal (%eax), %edi;movb (%eax), %dl": 1,
                "leal -(%ebp), %ecx;frstor (%ecx);movl -(%ebp), %ecx;calll  <getDI+>;leave": 1,
                "je  <RegisterWOWIdle+>;decl %eax;decl %eax;je  <RegisterWOWIdle+>;subl $, %eax": 2,
                "movl %eax, -(%ebp);jmp  <RegisterWOWIdle+>;andl $, -(%ebp);jmp  <RegisterWOWIdle+>;cmpb $, %bl": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);jge  <RegisterWOWIdle+>;orl $-, -(%ebp);jmp  <RegisterWOWIdle+>": 1,
                "jmp  <RegisterWOWIdle+>;cmpb $, %bl;je  <RegisterWOWIdle+>;cmpb $, %bl;je  <RegisterWOWIdle+>": 1,
                "je  <RegisterWOWIdle+>;cmpb $, %bl;je  <RegisterWOWIdle+>;cmpb $, %bl;jne  <RegisterWOWIdle+>": 1,
                "cmpb $, (%edi);jne  <RegisterWOWIdle+>;incl %edi;incl %edi;andb $, -(%ebp)": 1,
                "movsbl %bl, %eax;cmpl $, %eax;jg  <RegisterWOWIdle+>;cmpl $, %eax;jge  <RegisterWOWIdle+>": 1,
                "movl %eax, -(%ebp);je  <RegisterWOWIdle+>;testl %eax, %eax;jne  <RegisterWOWIdle+>;movl , %eax": 1,
                "leal -(%ebp), %edi;movl %edi, -(%ebp);jge  <RegisterWOWIdle+>;movl $, -(%ebp);jmp  <RegisterWOWIdle+>": 1,
                "popl %ecx;movl %eax, -(%ebp);jge  <RegisterWOWIdle+>;movl $, -(%ebp);jmp  <RegisterWOWIdle+>": 1,
                "subl $, %eax;je  <RegisterWOWIdle+>;subl $, %eax;je - <RegisterWOWIdle+>;decl %eax": 1,
                "movl -(%ebp), %ebx;movl $, %esi;testl %ebx, %esi;je  <RegisterWOWIdle+>;movl -(%ebp), %ecx": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);jmp  <RegisterWOWIdle+>;addl $, -(%ebp);movl -(%ebp), %eax": 1,
                "jmp  <RegisterWOWIdle+>;addl $, -(%ebp);movl -(%ebp), %eax;movl -(%eax), %eax;testl %eax, %eax": 1,
                "movl -(%ebp), %eax;movl -(%eax), %eax;testl %eax, %eax;je  <RegisterWOWIdle+>;movl (%eax), %ecx": 1,
                "je  <RegisterWOWIdle+>;cltd;subl %edx, %eax;sarl %eax;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <RegisterWOWIdle+>;andl $, -(%ebp);jmp  <RegisterWOWIdle+>;movl , %eax": 1,
                "movl %eax, -(%ebp);leal (%eax), %edx;movb (%eax), %cl;incl %eax;testb %cl, %cl": 1,
                "je  <RegisterWOWIdle+>;movl %eax, -(%ebp);movl %eax, %edi;jmp  <RegisterWOWIdle+>;movl %esi, -(%ebp)": 1,
                "testl %esi, %esi;jne  <RegisterWOWIdle+>;pushl %edi;calll *;popl %ecx": 1,
                "movl -(%ebp), %eax;jmp  <RegisterWOWIdle+>;decl %ecx;cmpb $, (%eax);je  <RegisterWOWIdle+>": 1,
                "jmp  <RegisterWOWIdle+>;movl -(%ebp), %ecx;movl %ecx, (%eax);movl $, -(%ebp);jmp  <RegisterWOWIdle+>": 1,
                "je  <RegisterWOWIdle+>;testb $, %bl;je  <RegisterWOWIdle+>;movswl -(%eax), %eax;cltd": 1,
                "cltd;jmp  <RegisterWOWIdle+>;movzwl -(%eax), %eax;jmp - <RegisterWOWIdle+>;testb $, %bl": 1,
                "movl %edx, %edi;jle  <RegisterWOWIdle+>;addl -(%ebp), %ecx;movb %cl, (%esi);decl %esi": 1,
                "leal -(%ebp), %ecx;calll  <SetShadowDescriptorEntries+>;testb $, %bl;popl %ecx;je  <RegisterWOWIdle+>": 1,
                "jle  <RegisterWOWIdle+>;movl -(%ebp), %eax;movl -(%ebp), %ebx;movl %eax, -(%ebp);decl -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %eax;popl %ebx;calll  <getDI+>;leave": 1,
                "addl %ecx, (%edi);movl $, %eax;pushl $;cmovnel (%ebx), %ebp;setne (%ebx)": 1,
                "cmovnel (%ebx), %ebp;setne (%ebx);popl %fs;imull $, (%ecx), %eax;jmp  <RegisterWOWIdle+>": 1,
                "setne (%ebx);popl %fs;imull $, (%ecx), %eax;jmp  <RegisterWOWIdle+>;addl %ecx, (%edi)": 1,
                "pushl %esi;pushl %esi;movl %eax, ;calll *;movl %eax, ": 1,
                "pushl %edi;pushl (%ebp);pushl $;calll - <IsCdRomFile+>;movl -(%ebp), %eax": 1,
                "cmpl $, %ebx;jne  <RegisterWOWIdle+>;cmpb $, -(%ebp);sbbl %eax, %eax;andl $, %eax": 1,
                "cmpb $, ;movl $, %ebx;movl $, %esi;jne  <RegisterWOWIdle+>;pushl $": 1,
                "movl $, %ebx;movl $, %esi;jne  <RegisterWOWIdle+>;pushl $;pushl %esi": 1,
                "jne  <RegisterWOWIdle+>;pushl $;pushl %esi;calll - <call_ica_hw_interrupt+>;leal -(%ebp), %eax": 1,
                "cmpb $, %al;jne  <RegisterWOWIdle+>;pushl %edi;calll - <IsCdRomFile+>;movzbw %al, %di": 2,
                "movzbw %al, %di;movw $, ;incl %edi;imull (%ebp), %edi;decl %edi": 1,
                "incl %edi;imull (%ebp), %edi;decl %edi;calll - <call_ica_hw_interrupt+>;leal -(%ebp), %eax": 1,
                "je  <RegisterWOWIdle+>;pushl $;calll *;xorl %eax, %eax;jmp  <RegisterWOWIdle+>": 1,
                "jne  <RegisterWOWIdle+>;movl (%esi), %ecx;cmpl (%edi), %ecx;je  <RegisterWOWIdle+>;movl (%esi), %esi": 1,
                "movl (%esi), %ecx;pushl $;pushl $;subl $, %ecx;pushl $": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl $;pushl $;pushl %eax": 1,
                "cmpw $, (%esi);jne  <RegisterWOWIdle+>;movl (%ecx), %edx;movl (%esi), %edi;addl %eax, %edx": 1,
                "addl %ecx, %edx;addl %eax, %edi;cmpl %edx, %edi;jbe  <RegisterWOWIdle+>;movl (%esi), %esi": 1,
                "xorl %edi, %edi;cmpl %edi, %esi;je - <RegisterWOWIdle+>;cmpl %edi, %eax;jne  <RegisterWOWIdle+>": 1,
                "je - <RegisterWOWIdle+>;cmpl %edi, %eax;jne  <RegisterWOWIdle+>;movl (%esi), %eax;pushl $": 1,
                "jne  <RegisterWOWIdle+>;movl (%esi), %eax;pushl $;pushl (%ebx);pushl %eax": 1,
                "pushl $-;pushl ;calll *;testl %eax, %eax;jge  <RegisterWOWIdle+>": 1,
                "cmpl $, (%ebx);pushl %edi;movl %eax, -(%ebp);jne  <RegisterWOWIdle+>;xorl %eax, %eax": 1,
                "jl  <RegisterWOWIdle+>;addb $, %al;leal -(%ebp), %ecx;pushl %ecx;movb %al, -(%ebp)": 1,
                "pushl %eax;calll *;cmpl $-, %eax;movl %eax, (%ebx);jne  <RegisterWOWIdle+>": 1,
                "pushl $;calll  <WOWSysErrorBox+>;movl %esi, (%ebx);movl $, (%ebx);movl %esi, (%ebx)": 1,
                "pushl %eax;pushl -(%ebp);calll - <getCL+>;pushl $;pushl (%edi)": 1,
                "pushl %esi;pushl %esi;pushl %esi;movl %eax, (%ebx);calll *%edi": 1,
                "calll *%edi;movl %eax, (%ebx);leal (%ebx), %eax;movl %eax, -(%ebp);leal (%ebx), %eax": 1,
                "pushl %eax;movl %esi, (%ebx);movl %esi, (%ebx);calll *%edi;leal (%ebx), %eax": 1,
                "movl %esi, (%ebx);movl %esi, (%ebx);movl %esi, (%ebx);leal (%ebx), %esi;pushl %esi": 1,
                "popl %ecx;leal -(%ebp), %edi;rep  movsl (%esi), %es:(%edi);movl -(%ebp), %esi;andl $, %esi": 1,
                "movb %al, (%ebx);movb $, (%ebx);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "testl %eax, %eax;je  <RegisterWOWIdle+>;pushl $;pushl $;pushl (%ebx)": 1,
                "calll *;testl %eax, %eax;je  <RegisterWOWIdle+>;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <RegisterWOWIdle+>;leal -(%ebp), %eax;pushl %eax;pushl (%ebx);calll *": 1,
                "jmp  <RegisterWOWIdle+>;calll *;cmpb $, (%ebx);movl , %esi;je  <RegisterWOWIdle+>": 1,
                "pushl (%ebx);calll  <host_com_close+>;movl %edi, (%ebx);jmp  <RegisterWOWIdle+>;pushl -(%ebp)": 1,
                "cmpl %edi, %eax;movl %eax, (%ebx);jne  <RegisterWOWIdle+>;pushl -(%ebp);calll  <host_com_close>": 1,
                "movl %eax, (%ebx);xorl %eax, %eax;movl %edi, (%ebx);incl %eax;jmp - <RegisterWOWIdle+>": 1,
                "pushl %eax;orl $, %ecx;jmp  <RegisterWOWIdle+>;movl , %edx;andl $, %edx": 1,
                "andl $, %edx;jne  <RegisterWOWIdle+>;xorl %esi, %esi;subl %ecx, %eax;pushl %esi": 1,
                "movl , %eax;pushl %ecx;calll *(%eax);movl , %edx;cmpl %esi, %edx": 1,
                "calll - <getCX+>;xorl %eax, %eax;movb -(%ebp), %al;orl $, %eax;pushl %eax": 1,
                "calll - <getAX>;movl %eax, %esi;calll - <getCS>;movl %eax, %edi;calll - <getIP>": 3,
                "pushl %edi;calll - <setCS>;pushl %ebx;calll - <setIP>;popl %edi": 1,
                "testb $-, ;jne  <setDH+>;orl $, %esi;movb , %al;testb %al, %al": 1,
                "cmpb , %bl;movb %bl, -(%ebp);je  <setDH+>;orl $, %esi;pushl $": 1,
                "jne  <setDH+>;cmpb $, ;je  <setDH+>;orl $, %esi;calll  <getCH+>": 1,
                "je  <setDH+>;orl $, %esi;calll  <getCH+>;shrl $, %eax;cmpb %al, ": 1,
                "calll  <getCH+>;shrl $, %eax;cmpb %al, ;movl $, %ebx;jne  <setDH+>": 1,
                "calll  <getCH+>;subl %ebx, %eax;shrl $, %eax;cmpb %al, ;je  <setDH+>": 1,
                "testl %esi, %esi;jne  <setDH+>;movl -(%ebp), %ecx;cmpb , %cl;movl $, %eax": 1,
                "addl %eax, %ecx;jne  <setDH+>;xorl %ecx, %ecx;incl %ecx;xorl %edx, %edx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;calll - <getES+>;andb $-, -(%ebp)": 3,
                "pushl $;calll - <getES+>;andb $-, -(%ebp);pushl -(%ebp);pushl $": 3,
                "orb $, -(%ebp);pushl -(%ebp);pushl %esi;calll - <IsCdRomFile+>;popl %esi": 2,
                "pushl %ebp;movl %esp, %ebp;movzbl (%ebp), %eax;imull $, %eax, %eax;movb $, (%eax)": 1,
                "calll - <getCF+>;movl , %ecx;cmpb $, (%ecx);je  <setDH+>;cmpl $, %ecx": 1,
                "pushl %edi;pushl %eax;pushl %edi;pushl (%ecx);calll  <setDH+>": 1,
                "jmp  <setDH+>;leal -(%eax), %edx;shrl %edx;incl %eax;shrl %eax": 1,
                "je  <setDH+>;jle  <setDH+>;cmpl $, %eax;jle  <setDH+>;cmpl $, %eax": 1,
                "movb (%ebp), %bl;shrb %bl;andb $, %bl;testb $, (%ebp);jne  <setDH+>": 1,
                "movl , %eax;movl %esi, (%eax);testb $, (%ebp);jne  <setDH+>;testb $, %bl": 1,
                "imull $, %eax, %eax;movl %esi, %ebx;addl %edi, %eax;shrl $, %ebx;andl $, %ebx": 1,
                "movl %ecx, (%eax);movl $, (%eax);popl %edi;popl %esi;popl %ebx": 1,
                "movl (%ebp), %eax;decl %eax;je  <setDH+>;decl %eax;jne  <setDH+>": 1,
                "decl %eax;jne  <setDH+>;movb (%ebp), %al;movl , %ecx;movb %al, (%ecx)": 1,
                "movl (%ebp), %edi;movl %edi, (%eax);movl %esi, (%eax);movl %ecx, (%eax);movl %edx, (%eax)": 1,
                "leal (%ecx,%edx), %ebx;movl %ebx, (%eax);popl %ebx;cmpl $, %eax;jne  <setDH+>": 1,
                "calll - <getES+>;pushl $;pushl $;calll - <setDH+>;pushl $": 1,
                "cmpb %cl, (%eax);jne  <getCH+>;cmpl %ecx, (%eax);jne  <getCH+>;pushl %ecx": 1,
                "pushl %edi;movl $, -(%ebp);calll - <getAL>;movzbl %al, %edi;calll - <getBL>": 1,
                "calll - <demGetPhysicalDriveType>;movzbl %al, %esi;testl %esi, %esi;jne  <getCH+>;leal -(%ebp), %eax": 1,
                "pushl %eax;movb %bl, -(%ebp);calll - <setAH+>;movl %eax, %esi;testl %esi, %esi": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <getCH+>;cmpl $, %esi;je  <getCH+>": 1,
                "movl %esi, ;calll - <getDS>;movzwl %ax, %esi;shll $, %esi;calll - <getSI>": 1,
                "calll *;testl %eax, %eax;movl , %esi;movl $, %edi;movl $, %ebx": 1,
                "movl $, %edi;movl $, %ebx;jne  <getCH+>;pushl $;pushl %edi": 1,
                "pushl $;pushl ;calll  <SetShadowDescriptorEntries+>;testl %eax, %eax;jne  <getCH+>": 1,
                "jmp  <getCH+>;cmpw $, %ax;ja  <getCH+>;pushl $;movl $, -(%ebp)": 1,
                "ja  <getCH+>;pushl $;movl $, %esi;jmp  <getCH+>;pushl $": 1,
                "jne  <getCH+>;pushl $;popl %ebx;movw , %ax;movw %ax, %si": 1,
                "jmp  <getCH+>;pushl %edi;calll - <IsCdRomFile+>;leal (%ebx), %ecx;imull %ecx, %eax": 1,
                "movl (%ebp), %eax;popl %edi;popl %esi;movw %bx, (%eax);popl %ebx": 1,
                "movl %edi, %eax;shll $, %eax;andl $, %edi;addl %eax, %esi;cmpl $, %edi": 1,
                "movl $, %ebx;jne  <getCH+>;cmpl $, %edi;je  <getCH+>;cmpl $, %edi": 1,
                "addl $, %esi;jmp  <getCH+>;pushl $;jmp  <getCH+>;pushl $": 1,
                "shll $, %eax;addl %eax, %esi;jmp  <getCH+>;addl $, %esi;jmp  <getCH+>": 1,
                "movzwl , %esi;jge  <getCH+>;addl $, %esi;jmp  <getCH+>;addl $, %esi": 1,
                "cmpl $, %edi;jge  <getCH+>;movl %edi, %eax;cltd;subl %edx, %eax": 1,
                "shll $, %esi;addl %eax, %esi;jmp  <getCH+>;cmpl $, %edi;jne  <getCH+>": 1,
                "cmpl $, %edi;jne  <getCH+>;movzwl , %esi;addl $, %esi;jmp  <getCH+>": 1,
                "addl $, %esi;movl %esi, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "pushl %esi;pushl $;calll - <IsCdRomFile+>;pushl $;movzbl %al, %esi": 1,
                "pushl $;calll - <IsCdRomFile+>;pushl $;movzbl %al, %esi;calll - <IsCdRomFile+>": 1,
                "imull %eax, %esi;xorl %eax, %eax;cmpl $, %esi;jle  <getCH+>;cmpl $, %esi": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %ecx;leal -(%ebp), %eax;pushl %eax": 4,
                "pushl %ecx;pushl %ecx;leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "pushl %eax;pushl $;calll  <host_direct_access_error+>;movl -(%ebp), %eax;shrl %eax": 1,
                "pushl $;calll  <host_direct_access_error+>;movl -(%ebp), %eax;shrl %eax;andl $, %eax": 1,
                "movl %eax, ;movl %eax, ;jne  <getCH+>;leal -(%ebp), %eax;pushl %eax": 1,
                "testb %al, %al;je  <getCH+>;cmpb $, %al;je  <getCH+>;cmpb $, %al": 1,
                "jne  <getCH+>;movl %esi, %eax;subl %edi, %eax;je  <getCH+>;pushl %eax": 1,
                "pushl (%ebp);calll - <getCL+>;pushl ;pushl $;pushl (%ebp)": 1,
                "movl %esi, %edi;subl $, %ebx;jmp  <getCH+>;incl %esi;decl %ebx": 1,
                "popl %esi;subl (%ebp), %esi;movl %eax, (%ebp);shll $, %esi;movl (%ebp), %eax": 1,
                "calll - <call_ica_hw_interrupt+>;popl %edi;popl %ebx;leave;retl $": 1,
                "cmpl %edi, %eax;movl , %ebx;movl %eax, ;jne  <getCH+>;pushl $": 1,
                "jbe  <getCH+>;movl (%eax), %eax;testl %eax, %eax;jne - <getCH+>;testl %eax, %eax": 1,
                "subl $, %esp;pushl %esi;calll - <getAX>;movl %eax, -(%ebp);calll - <getBX>": 1,
                "calll - <getDL+>;calll - <getCF>;testl %eax, %eax;jne  <getCH+>;calll - <getDL>": 1,
                "movzbw %al, %ax;movw %ax, (%ebx);movzbl -(%ebp), %eax;movl %eax, %ecx;imull $, %ecx, %ecx": 1,
                "calll - <setAH>;pushl -(%ebp);calll - <setDL>;calll - <getDL+>;calll - <getAH>": 1,
                "cmpl $-, %esi;movl %esi, -(%ebp);je  <getCH+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "je  <getCH+>;movzwl -(%ebp), %eax;movzbl -(%ebp), %ecx;imull %ecx, %eax;pushl $": 1,
                "movzbl -(%ebp), %ecx;imull %ecx, %eax;pushl $;pushl %ebx;pushl %eax": 1,
                "calll - <getDX>;movzwl %ax, %eax;addl %eax, %esi;pushl %esi;leal -(%ebp), %eax": 1,
                "pushl %eax;calll *;movl %eax, %edi;cmpl %ebx, %edi;jge  <getCH+>": 1,
                "calll *;movl %eax, %edi;cmpl %ebx, %edi;jge  <getCH+>;pushl %edi": 1,
                "jmp  <getCH+>;cmpl $, -(%ebp);je  <getCH+>;cmpl $, -(%ebp);jne  <getCH+>": 1,
                "addl %eax, %esi;movl %esi, -(%ebp);je  <getCH+>;movzwl (%esi), %eax;movzwl (%esi), %ecx": 1,
                "movzwl (%esi), %eax;movzwl (%esi), %ecx;shll $, %eax;addl %ecx, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);je  <getCH+>;movsbl (%eax), %ecx;incl %eax;cmpl %ebx, %ecx": 1,
                "testb %al, %al;jne - <getCH+>;movl , %ebx;movl %ebx, %eax;shrl $, %eax": 1,
                "jne - <getCH+>;movl , %ebx;movl %ebx, %eax;shrl $, %eax;pushl %eax": 1,
                "movl -(%ebp), %ebx;movl , %ecx;movl -(%ebp), %edx;addb %bl, %al;addb $, %al": 1,
                "xorl %edx, %edx;cmpl %edx, %ecx;je  <getCH+>;movl -(%ebp), %esi;movb $, (%eax,%ebx)": 1,
                "movl -(%ebp), %esi;movb $, (%eax,%ebx);movl , %eax;leal (%eax,%ebx), %edi;movl %ecx, %eax": 1,
                "movb $, (%eax,%ebx);movl -(%ebp), %eax;cmpl %edx, %eax;je  <getCH+>;movw (%eax), %cx": 1,
                "movl %edx, (%eax);movl , %ecx;leal (%ecx), %eax;xorl %edx, %edx;movb %al, %dl": 1,
                "pushl %eax;xorl %ebx, %ebx;pushl %ebx;pushl $;pushl $": 1,
                "jne  <getCH+>;movl %esi, %edi;jmp  <getCH+>;incl %edi;pushl $": 1,
                "calll  <SetShadowDescriptorEntries+>;cmpl %ebx, %eax;popl %ecx;popl %ecx;jne  <getCH+>": 1,
                "pushl $;leal -(%ebp), %eax;pushl %edi;pushl %eax;calll  <getDI+>": 1,
                "pushl %eax;calll  <getDI+>;movb %bl, -(%ebp,%esi);addl $, %esp;leal -(%ebp), %eax": 1,
                "popl %esi;popl %ebx;je  <getCH+>;pushl -(%ebp);calll *": 1,
                "pushl -(%ebp);calll *;movl -(%ebp), %ecx;movl -(%ebp), %eax;calll  <getDI+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;leal (%eax), %ecx;pushl %ecx;pushl %eax": 1,
                "pushl %eax;pushl (%ebp);pushl (%ebp);calll  <getDI+>;popl %ebp": 1,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;xorb $, ": 1,
                "cmpl %ebx, ;pushl %esi;pushl %edi;je  <setCL+>;leal -(%ebp), %eax": 1,
                "calll - <call_ica_hw_interrupt+>;pushl %ebx;pushl $;calll - <call_ica_hw_interrupt+>;calll - <getDL+>": 1,
                "calll - <getDL+>;pushl %ebx;calll - <getCL+>;shlb $, %al;pushl $": 1,
                "orb %al, %cl;pushl %ecx;pushl $;calll - <setBL+>;cmpl %ebx, ": 1,
                "pushl %ecx;pushl $;calll - <setBL+>;cmpl %ebx, ;je  <setCL+>": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll  <getDI+>;movb -(%ebp), %al": 1,
                "calll  <getDI+>;movb -(%ebp), %al;movzbw -(%ebp), %cx;andb $, %al;movzbw %al, %ax": 1,
                "movb -(%ebp), %al;andb $, -(%ebp);andb $-, %al;orb $-, %al;movb %al, -(%ebp)": 1,
                "pushl %eax;pushl $;calll - <RegisterWOWIdle+>;testl %eax, %eax;jne  <setCL+>": 1,
                "calll - <IsCdRomFile+>;calll - <call_ica_hw_interrupt+>;calll - <RegisterWOWIdle+>;calll - <getBP+>;calll - <setDI+>": 1,
                "jl - <setCL+>;calll  <SetShadowDescriptorEntries+>;calll - <setDH+>;calll - <getDL+>;calll - <getDL+>": 1,
                "calll - <RegisterWOWIdle+>;pushl %ebx;calll - <setCH+>;incl %ebx;cmpl $, %ebx": 1,
                "calll - <setSP>;leal -(%ebp), %eax;pushl %eax;pushl $;pushl $": 2,
                "calll - <getSS>;pushl %eax;calll - <IsCdRomFile+>;movl %eax, %esi;leal -(%ebp), %eax": 2,
                "calll - <setES>;leal -(%ebp), %eax;pushl %eax;addl %edi, %esi;pushl %esi": 1,
                "addl %edi, %esi;pushl %esi;calll - <getCF+>;pushl -(%ebp);calll - <setBP>": 1,
                "calll - <getCF+>;pushl -(%ebp);calll - <setBX>;addl %edi, %esi;leal -(%ebp), %eax": 1,
                "pushl %esi;calll - <getCF+>;pushl -(%ebp);calll - <setCX>;leal -(%ebp), %eax": 1,
                "pushl $;calll - <setIF>;jmp - <setCL+>;calll  <SetShadowDescriptorEntries+>;pushl $": 1,
                "movb (%ebp), %cl;andb $, %cl;cmpb $, %cl;jne  <setCL+>;movl (%ebp), %eax": 1,
                "movzwl %di, %ebx;movw %ax, -(%ebp);movl %ebx, %eax;pushl $;shll $, %eax": 13,
                "movw , %cx;addw %cx, (%eax);calll - <setSP+>;pushl $;pushl -(%ebp)": 7,
                "movw , %cx;movw %cx, (%eax);testb $, ;je  <setCL+>;orb $, ": 1,
                "calll - <SimpGetVDMPointer>;andl $, ;movl %eax, ;movw (%edi), %ax;movw %ax, ": 1,
                "movw %ax, ;popl %esi;retl;int;int": 1,
                "movw , %ax;pushl %eax;calll - <setAX>;retl;int": 1,
                "andl $, %eax;xorl %eax, ;calll - <RegisterWOWIdle+>;popl %ebp;retl $": 4,
                "jne  <setCL+>;incl %esi;movb (%esi), %al;cmpb $, %al;jne  <setCL+>": 1,
                "pushl $;pushl %esi;calll - <setDI+>;addl $, %esp;movl %eax, -(%ebp)": 1,
                "movl %esi, ;jmp  <setCL+>;cmpl %esi, ;je  <setCL+>;calll  <getDI+>": 1,
                "pushl $;calll *%esi;pushl %eax;calll *;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, %esi;pushl %esi;calll *%edi": 2,
                "calll *%edi;cmpl $-, %eax;movl , %ebx;jne  <setCL+>;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl $;pushl $;pushl %eax;pushl $": 2,
                "movl , %ecx;movl %eax, (%ecx);xorl %eax, %eax;cmpb $, (%ebp);pushl $": 1,
                "movb %bl, ;movb %bl, ;movb %bl, ;movb %bl, ;movb $, ": 1,
                "movb $, ;calll - <RegisterWOWIdle+>;jmp  <setCL+>;movb %bl, ;cmpl %ebx, ": 1,
                "jmp  <setCL+>;movb %bl, ;cmpl %ebx, ;popl %ebx;je  <setCL+>": 1,
                "calll - <setBL+>;calll - <getCF+>;calll - <getCF+>;movl , %eax;calll *(%eax)": 1,
                "cmpl %ebx, ;movl %eax, -(%ebp);pushl %esi;movl $, -(%ebp);jne  <setCL+>": 1,
                "pushl %eax;xorl %esi, %esi;incl %esi;pushl %esi;pushl %ebx": 1,
                "leal -(%ebp), %eax;pushl $;pushl %eax;calll  <SetShadowDescriptorEntries+>;testl %eax, %eax": 1,
                "pushl %edi;movb %bl, -(%ebp);movl $, %edi;jne  <setCL+>;cmpl %ebx, ": 1,
                "calll *;pushl %eax;calll *;pushl %eax;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl ;pushl $;pushl %eax;calll - <getBP+>": 1,
                "calll - <getBP+>;addl $, %esp;movl , %esi;cmpl %ebx, %esi;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp);movw $, -(%ebp);movl %eax, -(%ebp)": 1,
                "je  <setCL+>;addl $, %esi;cmpb $, (%esi);movl %esi, %eax;jl  <setCL+>": 1,
                "jg  <setCL+>;incl %esi;cmpb $, (%esi);jge - <setCL+>;cmpl %esi, %eax": 1,
                "testb $, %al;je  <setCL+>;movb $, ;testb $, %al;je  <setCL+>": 1,
                "movb $, ;testb $, %al;je  <setCL+>;movb $, ;cmpw %bx, -(%ebp)": 1,
                "movb $, ;movb $, ;movb $, ;movb $, ;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <setIF+>;calll - <IsCdRomFile+>;movl , %edx": 1,
                "je  <setCL+>;movzwl %ax, %ecx;movw , %ax;cmpw $, %ax;movl %ecx, ": 1,
                "movl $, %ecx;cmpl %ecx, %eax;jae  <setCL+>;movl %ecx, ;cmpl %ebx, %edx": 1,
                "cmpl %ebx, %esi;je  <setCL+>;pushl $;calll *;cmpl %ebx, ": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;calll - <getES+>;calll - <getCL+>": 1,
                "movw %ax, ;movw (%ebp), %ax;movw %ax, ;jmp  <setCL+>;andw $, ": 1,
                "cmpl %eax, %ecx;je  <setCL+>;testl %eax, %eax;jne  <setCL+>;andl %eax, ": 1,
                "pushl %eax;calll - <setCL+>;xorl %eax, %eax;movw , %ax;pushl %eax": 1,
                "pushl %eax;calll - <RegisterWOWIdle+>;testl %eax, %eax;je  <getDI+>;leal -(%edi), %eax": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl $;pushl %eax;calll - <getBP+>": 1,
                "testb $, -(%ebp);je  <getDI+>;orl $, (%esi);testb $, -(%ebp);je  <getDI+>": 2,
                "orl $, (%esi);movl (%esi), %eax;movl %eax, (%ebx);jmp  <getDI+>;leal -(%ebp), %eax": 1,
                "je  <getDI+>;decl %ebx;jne  <getDI+>;cmpb $, -(%ebp);setne %al": 1,
                "calll  <host_com_close+>;movb -(%ebp), %al;movb %al, (%esi);jmp  <getDI+>;leal -(%ebp), %eax": 2,
                "movl %eax, ;scasl %es:(%edi), %eax;addl %ecx, (%edi);addb $-, %al;addl %ecx, (%edi)": 1,
                "addl %ecx, (%edi);je - <getDI+>;addl %ecx, (%edi);movl $, %edi;int": 1,
                "imull $, %ecx, %ecx;leal (%ecx,%eax), %ecx;movl %ecx, -(%ebp);movl -(%edi), %ecx;andl $-, %esi": 1,
                "leal (%ecx,%eax), %ecx;notl %ebx;andl %ebx, (%eax,%edx,);decb (%ecx);jne  <getDI+>": 2,
                "movl (%ebp), %ecx;subl %esi, %ecx;addl %ecx, -(%ebp);cmpl $, -(%ebp);jle  <getDI+>": 1,
                "leal (%ebx,%edi,), %ebx;movl %ebx, (%ebp);movl (%ebx), %ebx;movl %ebx, (%ecx);movl (%ebp), %ebx": 1,
                "orl %ebx, (%ecx);leal (%eax,%edx,), %eax;movl %edi, %ecx;jmp  <getDI+>;cmpb $, (%ebp)": 1,
                "leal (%eax,%edx,), %eax;movl %edi, %ecx;jmp  <getDI+>;cmpb $, (%ebp);jne  <getDI+>": 1,
                "leal -(%edi), %ecx;movl $, %ebx;shrl %cl, %ebx;movl (%ebp), %ecx;orl %ebx, (%ecx)": 1,
                "leal (%eax,%edx,), %eax;leal -(%edi), %ecx;movl $, %edx;shrl %cl, %edx;orl %edx, (%eax)": 1,
                "jmp  <getDI+>;jge  <getDI+>;movl (%ebp), %ebx;subl %esi, (%ebp);leal (%esi), %ecx": 1,
                "decl %esi;cmpl $, %esi;jbe  <getDI+>;pushl $;popl %esi": 2,
                "andl %ebx, (%ecx);jmp  <getDI+>;leal -(%esi), %ecx;shrl %cl, %ebx;leal (%esi,%eax), %ecx": 1,
                "jbe  <getDI+>;pushl $;popl %esi;movl -(%ebp), %ecx;leal (%ecx,%esi,), %ecx": 1,
                "movl $, %edi;shrl %cl, %edi;movl (%ebp), %ecx;orl %edi, (%ecx);leal (%eax,%edx,), %eax": 2,
                "leal -(%esi), %ecx;movl $, %edx;shrl %cl, %edx;orl %edx, (%eax);movl (%ebp), %eax": 1,
                "pushl $;movl %edx, (%eax);movl %edx, (%eax);movl %edx, (%eax);movb $, (%eax)": 1,
                "movw %dx, (%eax);movw %dx, (%eax);movw %dx, (%eax);movl %ecx, (%eax);calll *": 1,
                "testl %eax, %eax;setge %al;popl %esi;jmp  <getDI+>;xorb %al, %al": 1,
                "popl %ecx;incl %edi;testl %ebx, %ebx;popl %ecx;movl %eax, %ecx": 1,
                "testl %eax, %eax;jl  <getDI+>;cmpl $, -(%ebp);je  <getDI+>;calll *": 1,
                "cmpl %ebx, %eax;popl %ecx;jne  <getDI+>;xorb %al, %al;jmp  <getDI+>": 1,
                "calll *;movl -(%ebp), %esi;xorl -(%ebp), %esi;calll *;xorl %eax, %esi": 1,
                "jne  <getDI+>;movl $, %eax;movl %eax, ;notl %eax;movl %eax, ": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movw %ss, -(%ebp);movw %cs, -(%ebp)": 1,
                "leal (%ebp), %eax;movl %eax, -(%ebp);leal (%ebp), %eax;movl -(%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);pushl $": 1,
                "calll  <getDI+>;pushl $;calll *;popl %ecx;popl %ecx": 1,
                "movl %ecx, %fs:;popl %ecx;popl %edi;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebx;leave;pushl %ecx;retl": 1,
                "pushl %esi;incl %ebx;xorb (%eax), %dh;popl %eax;incl %ebx": 1,
                "incl %ebx;xorb %dh, (%eax);pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "movl (%ebx), %esi;movl (%ebx), %edi;pushl %ebx;calll  <getDI+>;addl $, %esp": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl $;calll *": 3,
                "movl %esp, %ebp;pushl %esi;movl %eax, %esi;jmp  <getDI+>;movl (%esi), %eax": 1,
                "xorl %esi, %esi;incl %esi;cmpl %esi, ;je  <getDI+>;cmpl $, (%ebp)": 1,
                "je  <getDI+>;calll *%eax;movl , %eax;subl $, %eax;cmpl , %eax": 1,
                "cmpl , %eax;movl %eax, ;jae - <getDI+>;pushl $;movl $, %eax": 1,
                "movl $, %eax;calll - <getDI+>;popl %ecx;testl %ebx, %ebx;jne  <getDI+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ebx;pushl $": 2,
                "popl %ecx;popl %ecx;popl %ebx;popl %ebp;retl": 2,
                "pushl %ebx;pushl $;xorl %ebx, %ebx;pushl $;incl %ebx": 1,
                "cmpl $, %eax;jb - <getDI+>;movl %eax, %esi;shll $, %esi;cmpl (%esi), %ecx": 1,
                "je  <getDI+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "subl %edx, %eax;movl %eax, %ecx;movl -(%ebp), %eax;movl (%eax), %eax;leal (%eax), %esi": 1,
                "testb %cl, %cl;jne - <getDI+>;movl %edx, %edi;subl %esi, %eax;decl %edi": 2,
                "movl $, %esi;movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movl (%eax), %eax;movl %eax, %esi": 1,
                "movb (%ecx), %bl;incl %ecx;testb %bl, %bl;jne - <getDI+>;pushl $": 1,
                "movl %eax, (%ebp);movl (%ebp), %eax;movl %eax, ;movl (%ecx), %eax;cmpl $, %eax": 1,
                "cmpl %edx, %eax;jge  <getDI+>;leal (%eax,%eax,), %esi;leal (,%esi,), %esi;subl %eax, %edx": 1,
                "subl %eax, %edx;andl $, (%esi);addl $, %esi;decl %edx;jne - <getDI+>": 1,
                "movl $, ;jmp  <getDI+>;cmpl $, %ecx;jne  <getDI+>;movl $, ": 6,
                "movl (%ebp), %eax;popl %ecx;movl %eax, ;orl $-, %eax;jmp  <getDI+>": 1,
                "pushl %edi;movl %edx, (%esi);movl %ecx, %edi;movl $, (%ebx);je  <getDI+>": 1,
                "addl $, (%ebp);movl %edi, (%ecx);cmpb $, (%eax);jne  <getDI+>;xorl %ecx, %ecx": 1,
                "incl %edi;incl %eax;testb %cl, %cl;movl (%ebp), %ebx;je  <getDI+>": 1,
                "jmp - <getDI+>;cmpb $, (%eax);je  <getDI+>;cmpl $, (%ebp);je  <getDI+>": 1,
                "incl (%esi);decl %edx;jne - <getDI+>;movb (%eax), %cl;testb %cl, %cl": 1,
                "testl %eax, %eax;je  <getDI+>;andl $, (%eax);incl (%ebx);popl %edi": 1,
                "cmpl $, %eax;jae  <getDI+>;negl %eax;addl %esp, %eax;addl $, %eax": 1,
                "testl %eax, (%eax);xchgl %esp, %eax;movl (%eax), %eax;pushl %eax;retl": 1,
                "pushl %ecx;leal (%esp), %ecx;subl $, %ecx;subl $, %eax;testl %eax, (%ecx)": 1,
                "subl $, %eax;testl %eax, (%ecx);cmpl $, %eax;jae - <getDI+>;subl %eax, %ecx": 1,
                "andl $, ;movl %eax, ;xorl %eax, %eax;movl %ecx, ;movl $, ": 1,
                "movl (%ebp), %ecx;movl (%ecx), %eax;pushl %ebx;pushl %esi;movl (%ecx), %esi": 1,
                "popl %edx;movl %eax, (%eax);movl %eax, (%eax);addl $, %eax;decl %edx": 1,
                "movl -(%ebp), %eax;addl $, %eax;leal (%edi), %ecx;movl %ecx, (%eax);movl %eax, (%ecx)": 1,
                "incl %edi;movl %edi, (%esi,%ebx,);movb (%esi), %al;movb %al, %cl;incb %cl": 1,
                "incb %cl;testb %al, %al;movl (%ebp), %eax;movb %cl, (%esi);jne  <getDI+>": 1,
                "movl %esp, %ebp;movl , %eax;testl %eax, %eax;je  <getDI+>;pushl (%ebp)": 1,
                "je  <getDI+>;movl (%esp), %eax;pushl %ebp;movl (%eax), %ebp;movl (%eax), %edx": 1,
                "movl $, %eax;retl;pushl %ebx;pushl %esi;pushl %edi": 1,
                "pushl %edi;movl (%esp), %eax;pushl %ebp;pushl %eax;pushl $-": 1,
                "movl (%eax), %esi;cmpl $-, %esi;je  <getDI+>;cmpl $-, (%esp);je  <getDI+>": 1,
                "jne  <getDI+>;movl (%ecx), %edx;movl (%edx), %edx;cmpl %edx, (%ecx);jne  <getDI+>": 1,
                "movl (%ebp), %ecx;movl %ecx, (%ebx);movl %eax, (%ebx);movl %ebp, (%ebx);pushl %ebp": 1,
                "pushl %ebp;pushl %ecx;pushl %eax;popl %eax;popl %ecx": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ebx": 1,
                "movl %fs:, %eax;movl %eax, -(%ebp);cmpl -(%ebp), %ebx;jb  <getDI+>;cmpl (%ebp), %ebx": 1,
                "jmp  <getDI+>;pushl %edi;movl (%esi), %edi;cmpl $-, %edi;jne  <getDI+>": 1,
                "incl %eax;jmp  <getDI+>;xorl %edx, %edx;movl %edx, (%ebp);movl %ebx, %eax": 1,
                "movl %edx, (%ebp);movl %ebx, %eax;movl (%eax), %ecx;cmpl $-, %ecx;je  <getDI+>": 1,
                "je  <getDI+>;movl -(%esi), %eax;cmpl -(%ebp), %eax;jb  <getDI+>;cmpl %esi, %eax": 1,
                "movl (%ecx), %eax;cmpl %eax, %ebx;jb  <getDI+>;movl (%ecx), %edx;addl %eax, %edx": 1,
                "testl %edx, %edx;jg - <getDI+>;testl %edx, %edx;jne  <getDI+>;pushl $": 1,
                "jl  <getDI+>;leal (,%edx,), %eax;movl (%eax), %esi;incl %edx;cmpl %ebx, %edx": 1,
                "movl %edx, (%esi);cmpl $, (%esi);jne  <getDI+>;movl (%esi), %ecx;testb $, %cl": 1,
                "testb $, %ch;jne  <getDI+>;movl $, (%esi);movl (%esi), %ecx;decl %eax": 1,
                "movl , %eax;pushl (%eax,%esi,);calll - <getDX+>;movl , %eax;andl $, (%eax,%esi,)": 1,
                "movl , %eax;andl $, (%eax,%esi,);popl %ecx;incl %esi;cmpl , %esi": 1,
                "movl %edi, %eax;popl %edi;popl %esi;retl;int": 1,
                "movl (%esi), %edi;subl %eax, %edi;testl %edi, %edi;jle  <getDI+>;pushl %edi": 1,
                "jne  <getDI+>;movl (%esi), %eax;testb %al, %al;jns  <getDI+>;andl $-, %eax": 1,
                "movl (%ebp), %esi;testl %esi, %esi;jne  <getDI+>;pushl %esi;calll  <getDI+>": 1,
                "pushl %ebx;pushl %esi;pushl %edi;xorl %esi, %esi;xorl %ebx, %ebx": 1,
                "jne  <getDI+>;pushl %eax;calll - <getDI+>;cmpl $-, %eax;popl %ecx": 1,
                "incl %ebx;jmp  <getDI+>;cmpl $, (%ebp);jne  <getDI+>;testb $, %cl": 1,
                "movl %ebx, %eax;je  <getDI+>;movl %edi, %eax;popl %edi;popl %esi": 1,
                "int;pushl $;calll - <getDI+>;popl %ecx;retl": 2,
                "pushl %esi;pushl %edi;jne  <getDI+>;pushl $;calll *": 1,
                "pushl $;calll *;movl %eax, %edi;cmpl %ebx, %edi;je  <getDI+>": 1,
                "testl %eax, %eax;movl %eax, ;je  <getDI+>;pushl $;pushl %edi": 2,
                "je  <getDI+>;pushl $;pushl %edi;calll *%esi;movl %eax, ": 1,
                "pushl %edi;calll *%esi;movl %eax, ;movl , %eax;testl %eax, %eax": 1,
                "pushl (%ebp);pushl (%ebp);pushl %ebx;calll *;popl %edi": 1,
                "shrl $, %ecx;jne  <getDI+>;andl $, %ebx;je  <getDI+>;movb (%esi), %al": 1,
                "andl $, %ebx;je  <getDI+>;movb (%esi), %al;incl %esi;movb %al, (%edi)": 1,
                "jne - <getDI+>;movl (%esp), %eax;popl %ebx;popl %esi;popl %edi": 2,
                "jne - <getDI+>;movl %ecx, %ebx;shrl $, %ecx;jne  <getDI+>;movb %al, (%edi)": 1,
                "incl %edi;decl %ebx;jne - <getDI+>;popl %ebx;popl %esi": 1,
                "movl $, %edx;movl (%esi), %eax;addl %eax, %edx;xorl $-, %eax;xorl %edx, %eax": 1,
                "testl $, %eax;je - <getDI+>;testb %dl, %dl;je  <getDI+>;testb %dh, %dh": 1,
                "je  <getDI+>;testl $, %edx;je  <getDI+>;testl $, %edx;jne - <getDI+>": 1,
                "int;int;int;subl $, %eax;je  <getDI+>": 1,
                "je  <getDI+>;subl $, %eax;je  <getDI+>;subl $, %eax;je  <getDI+>": 2,
                "movl %eax, -(%ebp);pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl ": 1,
                "cmpl $, %eax;movl $, %esi;jne  <getDI+>;xorl %eax, %eax;movb %al, -(%ebp,%eax)": 1,
                "testb %al, %al;movb $, -(%ebp);je  <getDI+>;pushl %ebx;leal -(%ebp), %edx": 1,
                "movzbl (%edx), %ecx;movzbl %al, %eax;cmpl %ecx, %eax;ja  <getDI+>;subl %eax, %ecx": 1,
                "subl %eax, %ecx;incl %ecx;movl %ecx, %ebx;shrl $, %ecx;leal -(%ebp,%eax), %edi": 1,
                "cmpl %esi, %eax;jb - <getDI+>;jmp  <getDI+>;xorl %eax, %eax;cmpl $, %eax": 1,
                "incl %eax;cmpl %esi, %eax;jb - <getDI+>;movl -(%ebp), %ecx;popl %esi": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edi;movl %ecx, %eax;movl %ecx, %edx;addl %esi, %eax": 1,
                "jmpl *(,%edx,);nop;andl %ecx, %edx;movb (%esi), %al;movb %al, (%edi)": 1,
                "movl %cs, %esi;addl %ecx, (%edi);movl -(%esi,%ecx,), %eax;movl %eax, -(%edi,%ecx,);movl -(%esi,%ecx,), %eax": 1,
                "nop;leal -(%ecx,%esi), %esi;leal -(%ecx,%edi), %edi;testl $, %edi;jne  <getDI+>": 1,
                "andl $, %edx;cmpl $, %ecx;jb  <getDI+>;std;rep  movsl (%esi), %es:(%edi)": 1,
                "jb  <getDI+>;std;rep  movsl (%esi), %es:(%edi);cld;jmpl *(,%edx,)": 1,
                "nop;movb (%esi), %al;andl %ecx, %edx;movb %al, (%edi);movb (%esi), %al": 1,
                "adcb $, %al;js -;rolb (%ecx);shrdl $, %edx, %eax;jnp ": 1,
                "pushl $;pushl $;calll - <getDI+>;xorl %edi, %edi;cmpl %edi, ": 1,
                "testl %eax, %eax;je  <getDI+>;movl %esi, ;jmp  <getDI+>;calll *": 1,
                "cmpl %edi, %eax;je  <getDI+>;cmpl $, %eax;jne  <getDI+>;movl %edi, -(%ebp)": 1,
                "calll *;movl %eax, %esi;movl %esi, -(%ebp);xorl %ebx, %ebx;cmpl %ebx, %esi": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);jmp  <getDI+>;xorl %eax, %eax;incl %eax": 2,
                "calll - <ResumeTimerThread+>;popl %ecx;movl %eax, -(%ebp);cmpl %ebx, %eax;je  <getDI+>": 2,
                "pushl -(%ebp);pushl (%ebp);pushl (%ebp);calll *;testl %eax, %eax": 2,
                "cmpl %ebx, (%ebp);jne  <getDI+>;pushl %ebx;pushl %ebx;jmp  <getDI+>": 1,
                "popl %ecx;movl %edi, %eax;jmp  <getDI+>;movl %edi, -(%ebp);xorl %ebx, %ebx": 1,
                "pushl %edi;pushl %edi;leal (%ebp), %ecx;pushl %ecx;pushl (%ebp)": 1,
                "addl $, %esp;movl %eax, -(%ebp);cmpl %edi, %eax;je - <getDI+>;pushl %edi": 1,
                "addl $, %eax;andl $-, %eax;calll - <getDI+>;movl %esp, -(%ebp);movl %esp, %ebx": 2,
                "movl %ebx, %edi;movl %ecx, %edx;shrl $, %ecx;rep  stosl %eax, %es:(%edi);movl %edx, %ecx": 3,
                "jne  <getDI+>;xorl %esi, %esi;jmp  <getDI+>;pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);calll *": 3,
                "pushl (%ebp);pushl (%ebp);calll *;movl %eax, %esi;cmpl $, -(%ebp)": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl $;calll  <getDI+>": 1,
                "pushl %eax;pushl $;calll  <getDI+>;addl $, %esp;testl %eax, %eax": 1,
                "movl %esi, %eax;sarl $, %eax;leal (,%eax,), %edi;movl (%edi), %eax;andl $, %esi": 1,
                "movb $, (%eax,%esi);pushl $;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "je  <getDI+>;testl %eax, %eax;je  <getDI+>;cmpb $, (%ebx);jne  <getDI+>": 1,
                "jmp  <getDI+>;movl (%edi), %eax;leal (%eax,%esi), %eax;andb $-, (%eax);movl (%ebp), %eax": 1,
                "jmp  <getDI+>;incl -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%edi), %eax;pushl (%eax,%esi);calll *;testl %eax, %eax;jne  <getDI+>": 1,
                "cmpl $, -(%ebp);je  <getDI+>;movl (%edi), %eax;testb $, (%eax,%esi);je  <getDI+>": 1,
                "calll - <ResumeTimerThread+>;testl %eax, %eax;popl %ecx;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;pushl %edi;orl $-, %edi": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %ecx;cmpl , %ecx": 1,
                "calll  <getDI+>;addl $, %esp;movl (%ebx), %eax;addl %esi, %eax;testb $-, (%eax)": 1,
                "addl $, %esp;movl (%ebx), %eax;addl %esi, %eax;testb $-, (%eax);je  <getDI+>": 1,
                "movl (%ebx), %eax;addl %esi, %eax;testb $-, (%eax);je  <getDI+>;andl $, -(%ebp)": 1,
                "addl %esi, %eax;testb $-, (%eax);je  <getDI+>;andl $, -(%ebp);cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);movl %edi, -(%ebp);jbe  <getDI+>;movl -(%ebp), %ecx;xorl %edi, %edi": 1,
                "cmpb $, %dl;jne  <getDI+>;incl -(%ebp);movb $, (%eax);incl %eax": 1,
                "pushl $;leal -(%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl %edi": 1,
                "je  <getDI+>;pushl $;popl %eax;cmpl %eax, -(%ebp);jne  <getDI+>": 1,
                "movl (%ebp), %eax;cmpl , %eax;jae  <getDI+>;movl %eax, %ecx;sarl $, %ecx": 2,
                "testb $, (%ecx,%edx,);je  <getDI+>;pushl %eax;calll  <getDI+>;popl %ecx": 1,
                "pushl %edi;calll *;testl %eax, %eax;je  <getDI+>;movl %edi, ": 1,
                "pushl (%ebp);xorl %eax, %eax;cmpl %esi, (%ebp);setne %al;leal (,%eax,), %eax": 1,
                "movl %esp, -(%ebp);movl %esp, %esi;movl %esi, -(%ebp);movl %edi, %ecx;xorl %eax, %eax": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <getDI+>;movl $, -(%ebp);pushl %ebx": 1,
                "pushl $;pushl $;leal (%ebp), %ecx;pushl %ecx;pushl (%ebp)": 1,
                "pushl $;leal (%ebp), %ecx;pushl %ecx;pushl (%ebp);pushl %eax": 1,
                "testl %eax, %eax;jne  <getDI+>;orl $-, %eax;jmp  <getDI+>;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;calll - <getDI+>;leave;retl;int": 2,
                "pushl $;pushl $;calll - <getDI+>;movl , %eax;movl %eax, -(%ebp)": 5,
                "movl %ebx, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "pushl %ecx;pushl %eax;movl , %esi;calll *%esi;testl %eax, %eax": 1,
                "movl %eax, -(%ebp);cmpl $, -(%ebp);je  <getDI+>;cmpl $-, %edi;je  <getDI+>": 1,
                "pushl %eax;pushl %edi;pushl %ebx;pushl $;pushl (%ebp)": 1,
                "movl %esp, %ebx;movl %ebx, -(%ebp);movl %edi, %ecx;xorl %eax, %eax;movl %ebx, %edi": 1,
                "orl $-, -(%ebp);movl -(%ebp), %esi;testl %ebx, %ebx;jne  <getDI+>;pushl %esi": 1,
                "pushl %edi;pushl %edi;pushl (%ebp);pushl -(%ebp);pushl %esi": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);jmp  <getDI+>;cmpl %edi, -(%ebp);jne  <getDI+>": 1,
                "jmp  <getDI+>;cmpl %edi, -(%ebp);jne  <getDI+>;pushl %edi;pushl %edi": 1,
                "movl %edi, -(%ebp);jmp  <getDI+>;cmpl $-, -(%ebp);je  <getDI+>;movl -(%ebp), %ecx": 1,
                "sbbl %ecx, %ecx;leal -(%esi), %edx;andl $, %ecx;notl %edx;andl %ebx, %edx": 1,
                "andl %ebx, %edx;incl %ecx;subl %esi, %edx;decl %eax;negl %eax": 1,
                "jae  <getDI+>;movl %eax, %ecx;sarl $, %ecx;movl %eax, %esi;andl $, %esi": 2,
                "calll *;cmpl $-, %eax;movl %eax, -(%ebp);jne  <getDI+>;calll *": 1,
                "cmpl $, %ecx;jb - <getDI+>;cmpl $, %eax;jb  <getDI+>;cmpl $, %eax": 1,
                "retl;movl (,%ecx,), %eax;movl %eax, ;popl %ebp;retl": 1,
                "movl (%ebp), %ebx;cmpl , %ebx;pushl %esi;pushl %edi;jae  <getDI+>": 1,
                "calll *;testl %eax, %eax;jne  <getDI+>;calll *;movl %eax, (%ebp)": 1,
                "orl $-, %eax;popl %edi;popl %esi;popl %ebx;popl %ebp": 4,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;orl $-, -(%ebp);pushl %ebx": 1,
                "orl $-, -(%ebp);pushl %ebx;pushl %esi;pushl %edi;xorl %edi, %edi": 1,
                "addl $, %eax;addl %esi, %ebx;cmpl %ebx, %eax;jb - <getDI+>;jmp  <getDI+>": 1,
                "jl - <getDI+>;jmp  <getDI+>;pushl %esi;calll - <ResumeTimerThread+>;testl %eax, %eax": 1,
                "calll - <ResumeTimerThread+>;testl %eax, %eax;popl %ecx;je  <getDI+>;addl $, ": 1,
                "testl %eax, %eax;popl %ecx;je  <getDI+>;addl $, ;leal (,%edi,), %ecx": 1,
                "addl %esi, %edx;cmpl %edx, %eax;jb - <getDI+>;shll $, %edi;movl %edi, -(%ebp)": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;cmpl , %eax;pushl %esi;pushl %edi": 1,
                "andl $, %esi;shll $, %esi;addl %esi, %eax;testb $, (%eax);je  <getDI+>": 1,
                "je  <getDI+>;cmpl $-, (%eax);je  <getDI+>;cmpl $, ;jne  <getDI+>": 1,
                "cmpl $, ;jne  <getDI+>;xorl %eax, %eax;subl %eax, %ecx;je  <getDI+>": 1,
                "decl %ecx;je  <getDI+>;decl %ecx;jne  <getDI+>;pushl %eax": 1,
                "pushl %eax;pushl $-;calll *;movl (%edi), %eax;orl $-, (%esi,%eax)": 1,
                "testb $, (%eax);je  <getDI+>;movl (%eax), %eax;popl %ebp;retl": 1,
                "xorl %eax, %eax;jmp  <getDI+>;cmpl $, ;movzbl (%esi), %eax;jle  <getDI+>": 1,
                "je  <getDI+>;incl %esi;jmp - <getDI+>;movzbl (%esi), %ecx;incl %esi": 1,
                "je  <getDI+>;cmpl $, %ecx;jne  <getDI+>;movzbl (%esi), %ecx;incl %esi": 1,
                "jl  <getDI+>;cmpl $, %ecx;jg  <getDI+>;subl $, %ecx;jmp  <getDI+>": 1,
                "je  <getDI+>;leal (%eax,%eax,), %eax;leal (%ecx,%eax,), %eax;movzbl (%esi), %ecx;incl %esi": 1,
                "andl %esi, ;calll - <.text+>;popl %esi;popl %ebp;retl $": 1,
                "andw $, -(%ebp);movw (%eax), %cx;movw %cx, -(%ebp);movw (%eax), %cx;movw %cx, -(%ebp)": 1,
                "jmp  <getDI+>;movl (%ebp), %eax;pushl $;cltd;pushl $": 1,
                "pushl %eax;calll - <getDI+>;addl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movb %al, ;jne  <getDI+>;testb %al, %al;je  <getDI+>;pushl %esi": 1,
                "je  <getDI+>;pushl %esi;xorl %esi, %esi;incl %esi;testb $, %al": 1,
                "pushl %esi;xorl %esi, %esi;incl %esi;testb $, %al;movl %esi, ": 1,
                "cmpl $, ;je  <getDI+>;andl $, ;calll - <getES+>;calll - <ResumeTimerThread+>": 1,
                "xorl %eax, %eax;pushl $;pushl %eax;calll - <getDI+>;retl $": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;cltd;pushl $": 1,
                "movl (%ebp), %ecx;movl %ecx, %eax;sarl $, %eax;leal (%eax,%eax,), %eax;andl $, %ecx": 1,
                "movl %esp, %ebp;movzbl (%ebp), %eax;popl %ebp;retl $;int": 1,
                "leal (%ecx), %edx;cmpl %edx, %eax;jne  <getDI+>;xorl %eax, %eax;jmp  <getDI+>": 1,
                "movl $, %esi;pushl $;pushl %edi;calll - <IsCdRomFile+>;pushl %esi": 1,
                "calll - <IsCdRomFile+>;addl $, %edi;cmpl $, %edi;jbe - <getDI+>;movl $, %edi": 1,
                "calll - <IsCdRomFile+>;movl $, %edi;pushl %edi;pushl $;calll - <IsCdRomFile+>": 2,
                "pushl %esi;calll - <call_ica_hw_interrupt+>;calll - <getCL>;pushl %eax;pushl %edi": 1,
                "addw %bx, %si;shrw %si;movl %esi, -(%ebp);calll - <call_ica_hw_interrupt+>;pushl -(%ebp)": 1,
                "pushl $;pushl %edi;calll - <call_ica_hw_interrupt+>;pushl %esi;pushl %ebx": 1,
                "calll - <IsCdRomFile+>;movb %al, -(%ebp);pushl -(%ebp);calll - <setDH>;pushl -(%ebp)": 1,
                "calll - <setAX>;leave;retl;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %edi;movl %eax, -(%ebp);calll - <IsCdRomFile+>;cmpb $, %al;jbe  <getDI+>": 1,
                "cmpb $, %al;jbe  <getDI+>;pushl %edi;calll - <IsCdRomFile+>;cmpb $, %al": 5,
                "calll - <IsCdRomFile+>;pushl %esi;calll - <IsCdRomFile+>;pushl $;movzbw %al, %bx": 1,
                "movl %ebx, -(%ebp);calll - <IsCdRomFile+>;pushl %edi;calll - <IsCdRomFile+>;cmpb $, %al": 1,
                "movl $, %ebx;pushl %ebx;calll - <call_ica_hw_interrupt+>;pushl -(%ebp);movl $, %edi": 1,
                "calll - <call_ica_hw_interrupt+>;pushl -(%ebp);movl $, %edi;pushl %edi;calll - <call_ica_hw_interrupt+>": 1,
                "movl $, %edi;pushl %edi;calll - <call_ica_hw_interrupt+>;pushl $;pushl %ebx": 1,
                "pushl %ebx;calll - <call_ica_hw_interrupt+>;pushl -(%ebp);pushl %edi;calll - <call_ica_hw_interrupt+>": 1,
                "movb %al, -(%ebp);calll - <IsCdRomFile+>;movzwl -(%ebp), %edx;movzbl -(%ebp), %ecx;imull %edx, %ecx": 1,
                "pushl $;sarl %esi;pushl %ebx;movl %esi, -(%ebp);calll - <call_ica_hw_interrupt+>": 1,
                "pushl %edi;movl $, %edi;pushl %edi;calll - <IsCdRomFile+>;pushl $": 3,
                "calll - <IsCdRomFile+>;movl , %ecx;movzwl %ax, %esi;movl , %eax;leal (%ecx,%eax,), %eax": 1,
                "xorl %eax, %eax;movb (%ebp), %ah;orl $, %eax;pushl %eax;pushl %edi": 1,
                "movl %ecx, %edi;shll $, %ebx;pushl $;movl %eax, %esi;movl %ebx, (%ebp)": 1,
                "jmp  <getDI+>;leal (%esi,%esi,), %esi;shll $, %esi;addl , %esi;andl $, %eax": 1,
                "testl %eax, %eax;jle  <getDI+>;movl %eax, (%ebp);pushl (%ebp);pushl %ebx": 1,
                "pushl %esi;pushl %edi;movl $, %edi;pushl %edi;movl %eax, %ebx": 2,
                "movl (%ebp), %esi;jmp  <getDI+>;movl (%ebp), %eax;shll $, %eax;pushl %edi": 1,
                "shll $, %esi;addl , %esi;addl (%ebp), %esi;jmp  <getDI+>;pushl $": 1,
                "addl , %ecx;imull %eax, %esi;addl (%ebp), %esi;addl %eax, %eax;leal (%ecx,%esi,), %esi": 1,
                "addl (%ebp), %esi;addl %eax, %eax;leal (%ecx,%esi,), %esi;movl %eax, (%ebp);movl (%ebp), %eax": 1,
                "decl (%ebp);jne - <getDI+>;cmpb $, -(%ebp);je  <getDI+>;testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;jne - <getDI+>;jmp  <getDI+>;testl %ebx, %ebx;je  <getDI+>": 1,
                "pushl (%ebp);pushl %eax;calll  <cpu_createthread+>;addl $, %edi;decl %ebx": 1,
                "pushl %eax;calll  <cpu_createthread+>;addl $, %edi;decl %ebx;jne - <getDI+>": 1,
                "subl %edi, %esi;decl (%ebp);jne - <getDI+>;movl (%ebp), %ebx;testl %ebx, %ebx": 1,
                "andl $, %eax;addl (%ebp), %ecx;leal (%edx,%ecx,), %edi;jmp  <getDI+>;leal (%esi,%esi,), %edi": 1,
                "testl %eax, %eax;je  <getDI+>;cmpb $, ;jne  <getDI+>;movl (%ebp), %eax": 1,
                "calll  <cpu_createthread+>;subl $, %edi;subl $, %esi;decl %ebx;jne - <getDI+>": 1,
                "pushl %esi;calll  <cpu_createthread+>;pushl (%ebp);leal (%esi), %eax;pushl (%ebp)": 2,
                "leal (%esi), %eax;pushl (%ebp);pushl %eax;calll  <cpu_createthread+>;subl $, %esi": 1,
                "movl (%ebp), %eax;shll $, %eax;pushl %edi;movb $, -(%ebp);shll $, %ebx": 1,
                "pushl %edi;movb $, -(%ebp);shll $, %ebx;movl %eax, (%ebp);movl $, (%ebp)": 1,
                "addl (%ebp), %esi;movzwl %ax, %eax;addl , %eax;leal (%eax,%esi,), %eax;leal -(%ebx), %esi": 1,
                "imull (%ebp), %esi;addl %eax, %esi;movl (%ebp), %eax;imull (%ebp), %eax;movl %esi, %edi": 1,
                "je  <getDI+>;movl (%ebp), %ebx;testl %ebx, %ebx;je  <getDI+>;xorl %eax, %eax": 1,
                "pushl %ecx;pushl %edi;movl $, %edi;pushl %edi;calll - <IsCdRomFile+>": 1,
                "je  <getDI+>;leal (,%esi,), %esi;jmp  <getDI+>;shll $, %esi;pushl %ebx": 1,
                "orl %esi, %eax;addl %ecx, %eax;movb -(%ebp), %cl;xorb %cl, (%eax);jmp  <getDI+>": 1,
                "shll $, %esi;pushl %edi;calll - <IsCdRomFile+>;cmpb $, %al;jae  <getDI+>": 1,
                "calll - <IsCdRomFile+>;movb %al, -(%ebp);pushl -(%ebp);calll - <setAL>;pushl %esi": 1,
                "cmpw $, %ax;jne  <getDI+>;testw %di, %di;jne  <getDI+>;xorl %eax, %eax": 1,
                "movl %ecx, -(%ebp);xorl %eax, %eax;jmp  <getDI+>;movl -(%ebp), %ecx;andl (%ebp), %ecx": 1,
                "jmp  <getDI+>;movl -(%ebp), %ecx;andl (%ebp), %ecx;testw %cx, %cx;jne  <getDI+>": 1,
                "testw %cx, %cx;jne  <getDI+>;shll %eax;jmp  <getDI+>;addl %eax, %eax": 1,
                "decl (%ebp);jne - <getDI+>;jmp  <getDI+>;movzbl (%ebp), %ecx;leal (%eax,%eax,), %eax": 1,
                "addl %ecx, %eax;movl , %ecx;andb $, (%ebp);leal (%ecx,%eax,), %eax;movl %eax, (%ebp)": 1,
                "andb $, (%ebp);leal (%ecx,%eax,), %eax;movl %eax, (%ebp);movzbw (%ebp), %ax;pushl $": 1,
                "xorl %eax, %eax;movb -(%ebp), %al;xorb (%ebp), %al;pushl %eax;pushl %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpb $, (%ebp);jbe  <getDI+>": 1,
                "movb $, %al;jmp  <getDI+>;xorb %al, %al;jmp  <getDI+>;movb $, %al": 1,
                "jmp  <getDI+>;movb $, %al;pushl %esi;movzbl %al, %esi;pushl %edi": 1,
                "cmpb $, %al;jne  <getDI+>;xorl %eax, %eax;movb %bl, %al;andl %ecx, %eax": 1,
                "testb $, (%eax);je  <getDI+>;pushl $;calll - <IsCdRomFile+>;cmpb $, %bl": 1,
                "ja  <getDI+>;movzbl %bl, %ecx;shll $, %ecx;cmpb $, (%ecx);je  <getDI+>": 1,
                "incl %eax;pushl %eax;pushl %esi;calll - <IsCdRomFile+>;movzbl %al, %eax": 2,
                "shll $, %eax;movzwl (%eax), %eax;pushl %eax;pushl ;calll  <cpu_createthread+>": 2,
                "movzbl (%eax), %eax;andl $-, %eax;pushl %eax;pushl %edi;calll - <call_ica_hw_interrupt+>": 1,
                "pushl $;pushl %edi;calll - <call_ica_hw_interrupt+>;pushl $;leal (%edi), %ebx": 1,
                "shll $, %eax;movzbl (%eax), %eax;pushl %eax;leal (%edi), %eax;pushl %eax": 1,
                "pushl %eax;calll - <call_ica_hw_interrupt+>;pushl %esi;calll - <IsCdRomFile+>;cmpb $, %al": 1,
                "pushl %esi;calll - <IsCdRomFile+>;movzbl %al, %eax;shll $, %eax;movzbw (%eax), %ax": 1,
                "pushl %edi;calll - <IsCdRomFile+>;incl %edi;incl %edi;decl %ebx": 1,
                "addl $, %eax;pushl %eax;calll - <IsCdRomFile+>;pushl %eax;pushl $": 1,
                "calll - <getAL>;movzbl %al, %eax;movl %eax, -(%ebp);calll  <getBH>;movzbl %al, %eax": 2,
                "jge  <getDI+>;movl %ebx, %eax;movl -(%ebp), %ebx;movl %eax, -(%ebp);movzwl -(%ebp), %eax": 2,
                "subl -(%ebp), %edi;subl %ebx, %esi;incl %esi;incl %edi;cmpl $, -(%ebp)": 1,
                "jne  <getDI+>;pushl -(%ebp);pushl -(%ebp);pushl %esi;pushl -(%ebp)": 2,
                "jmp  <getDI+>;calll - <IsCdRomFile+>;cmpb $, %al;jb  <getDI+>;pushl %edi": 1,
                "pushl %edi;calll - <IsCdRomFile+>;cmpb $, %al;je  <getDI+>;pushl %edi": 5,
                "pushl -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %eax;pushl %esi;pushl -(%ebp)": 1,
                "cmpb $, ;jne  <getDI+>;pushl %edi;calll - <IsCdRomFile+>;movzbl %al, %eax": 1,
                "pushl %esi;calll - <IsCdRomFile+>;cmpb $, %al;pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl %edi;jne  <getDI+>;pushl -(%ebp)": 1,
                "je  <getDI+>;movzwl %si, %ecx;imull %ecx, %eax;movzbl %bl, %ecx;leal (%ecx,%eax,), %eax": 1,
                "calll - <getCF+>;movzbw -(%ebp), %ax;movb -(%ebp), %ah;pushl %eax;movl %eax, -(%ebp)": 2,
                "movb $, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "calll - <IsCdRomFile+>;pushl $;popl %ecx;leal -(%ebp), %edi;leal -(%ebp), %esi": 2,
                "addl $, -(%ebp);incb %bl;cmpb $-, %bl;jb - <getDI+>;jmp  <getDI+>": 1,
                "movzbl %al, %edi;movzwl %si, %eax;imull %eax, %edi;calll  <getBH>;movzbl %al, %eax": 1,
                "pushl %esi;calll - <IsCdRomFile+>;cmpb $, %al;jae  <getDI+>;calll - <getCX>": 2,
                "pushl %eax;movzbl -(%ebp), %eax;pushl %eax;movzbl -(%ebp), %eax;pushl %eax": 6,
                "testw %ax, %ax;jbe  <getDI+>;pushl %ebx;calll - <getBL>;xorl %ebx, %ebx": 1,
                "pushl $;calll - <IsCdRomFile+>;movb $, -(%ebp);movl %eax, -(%ebp);calll - <getAL>": 1,
                "movl %eax, -(%ebp);calll - <IsCdRomFile+>;xorl %ecx, %ecx;cmpw , %ax;movl $, %esi": 1,
                "movl $, %esi;setne %cl;pushl %esi;movl %ecx, -(%ebp);calll - <IsCdRomFile+>": 1,
                "movzbl %al, %eax;leal (%eax,%eax), %eax;pushl %eax;calll - <IsCdRomFile+>;movsbl %bl, %edi": 1,
                "decl %eax;je  <getDI+>;decl %eax;decl %eax;je  <getDI+>": 6,
                "je  <getDI+>;decl %eax;decl %eax;je  <getDI+>;subl $, %eax": 2,
                "pushl -(%ebp);pushl -(%ebp);calll - <getDI+>;jmp  <getDI+>;cmpw $, -(%ebp)": 1,
                "pushl %esi;calll - <IsCdRomFile+>;pushl %eax;calll  <setBH>;pushl $": 1,
                "calll - <setAX>;jmp  <getDI+>;pushl $;calll - <IsCdRomFile+>;movzwl -(%ebp), %edx": 2,
                "pushl -(%ebp);calll - <setDL>;calll - <getCS>;movl %eax, %esi;calll - <getIP>": 1,
                "sarl %edi;calll  <getDI+>;pushl $;pushl %ebx;calll *(%eax)": 1,
                "pushl %ebx;calll *(%eax);incl %ebx;pushl %ebx;calll  <getDI+>": 1,
                "calll *(%eax);incl %ebx;pushl %ebx;calll  <getDI+>;movl %edi, %ecx": 1,
                "sarl $, %ecx;pushl %ecx;pushl %ebx;calll *(%eax);pushl -(%ebp)": 1,
                "calll *(%eax);pushl %ebx;calll  <getDI+>;pushl %edi;pushl %ebx": 1,
                "calll *(%eax);pushl -(%ebp);pushl %esi;calll - <IsCdRomFile+>;movzbl %al, %eax": 1,
                "cmpb $, -(%ebp);je  <getDI+>;movl $, %esi;pushl %esi;calll - <IsCdRomFile+>": 1,
                "movl $, %esi;pushl %esi;calll - <IsCdRomFile+>;cmpb $, %al;jb  <getDI+>": 1,
                "xorl %esi, %esi;pushl %esi;pushl $;pushl %eax;pushl $": 2,
                "calll - <IsCdRomFile+>;movzbl %al, %eax;incl %eax;pushl %eax;pushl %esi": 2,
                "calll - <IsCdRomFile+>;movzbl -(%ebp), %ecx;movzbl -(%ebp), %edx;imull %esi, %ecx;movzwl %ax, %eax": 1,
                "movzbl -(%ebp), %eax;pushl %eax;pushl $;pushl %esi;pushl $": 1,
                "movl %eax, %edi;calll - <getDL>;movb %al, -(%ebp);calll  <getDH>;movb %al, -(%ebp)": 1,
                "calll - <getDL>;movb %al, -(%ebp);calll  <getDH>;xorl %ebx, %ebx;incl %ebx": 1,
                "calll - <setDL>;pushl -(%ebp);calll - <setDH>;calll - <getDI+>;movzwl %si, %eax": 1,
                "jbe  <getDI+>;pushl $;calll - <setAL>;calll - <getDI+>;decb -(%ebp)": 1,
                "calll - <getDI+>;decl -(%ebp);jne - <getDI+>;cmpl $, -(%ebp);je  <getDI+>": 1,
                "cmpl $, -(%ebp);je  <getDI+>;cmpl $, -(%ebp);jne  <getDI+>;pushl -(%ebp)": 1,
                "subl (%ebp), %eax;movl , %edx;pushl %ebx;pushl %edi;movl , %edi": 1,
                "movl , %edx;pushl %ebx;pushl %edi;movl , %edi;sarl $, %edi": 1,
                "cltd;subl %edx, %eax;movl %eax, %esi;sarl %esi;addl %edi, %esi": 1,
                "cmpl %esi, %edi;movl , %edi;movl %esi, -(%ebp);movb %al, (%ebp);movb $, (%esi)": 1,
                "movb $, (%esi);jae  <getDI+>;leal (%edi,%edi,), %edx;shll $, %edx;leal (%edx), %eax": 1,
                "leal (%edx), %eax;movl %eax, -(%ebp);leal (%edx), %eax;movl %eax, -(%ebp);leal (%edx), %eax": 3,
                "movl %eax, -(%ebp);leal (%edx), %eax;movl %eax, -(%ebp);leal (%edx), %eax;movl %eax, (%ebp)": 1,
                "movl %ecx, %eax;subl -(%ebp), %eax;movl %eax, -(%ebp);cltd;idivl %ebx": 1,
                "cmpl -(%ebp), %edx;pushl $;jg  <getDI+>;movl -(%ebp), %eax;subl %edx, %eax": 1,
                "jg  <getDI+>;movl -(%ebp), %eax;subl %edx, %eax;cmpl %eax, %esi;movl -(%ebp), %eax": 1,
                "subl %edx, %eax;cmpl %eax, %esi;movl -(%ebp), %eax;jle  <getDI+>;addl %eax, %eax": 1,
                "cltd;idivl %ebx;movl (%ebp), %edx;subl -(%ebp), %esi;subl -(%ebp), %ecx": 1,
                "movl (%ebp), %edx;subl -(%ebp), %esi;subl -(%ebp), %ecx;addl -(%ebp), %esi;addl -(%ebp), %ecx": 1,
                "subl -(%ebp), %esi;subl -(%ebp), %ecx;addl -(%ebp), %esi;addl -(%ebp), %ecx;addl (%ebp), %eax": 1,
                "movl %eax, (%edx);movl -(%ebp), %eax;subl -(%ebp), %eax;movl -(%ebp), %edx;leal -(,%eax,), %eax": 1,
                "addl %eax, -(%ebp);addl %eax, -(%ebp);addl %eax, -(%ebp);addl %eax, -(%ebp);incl %edi": 1,
                "movl -(%ebp), %ecx;addl $-, %edi;addl $, %edi;cmpl $, (%edi);je - <getDI+>": 1,
                "cmpl $, (%edi);je - <getDI+>;jmp  <getDI+>;incl %edi;cmpb $, (%edi)": 1,
                "addl %ebx, %ecx;movl %edx, -(%ebp);movl %ecx, -(%ebp);decl %ecx;cmpb $, (%ecx)": 1,
                "addl %eax, %ecx;movl %eax, %edx;shll $, %edx;subl %eax, %edi;movl -(%ebp), %eax": 1,
                "leal (,%ecx,), %ecx;movl %ecx, (%esi);movl %edi, (%esi);andl $, (%esi);movl -(%ebp), %edi": 1,
                "subl %edx, %ecx;movl %edi, -(%ebp);shll %ecx;movl %ebx, -(%ebp);jmp  <getDI+>": 1,
                "cmpl $, %ebx;jge  <getDI+>;movl (%esi), %ebx;cmpl %eax, %ebx;jle  <getDI+>": 2,
                "incl %eax;cmpl %edx, %eax;jb - <getDI+>;addl $, %ecx;cmpl %ebx, %ecx": 2,
                "jb - <getDI+>;popl %edi;popl %esi;popl %ebx;leave": 3,
                "movl %esp, %ebp;subl $, %esp;pushl %esi;movl , %esi;imull , %esi": 1,
                "incl (%ebp);movl (%ebp), %ecx;cmpl -(%ebp), %ecx;jl - <getDI+>;jmp  <getDI+>": 1,
                "movl (%edi,%ecx,), %edi;cmpw %di, (%ebx,%ecx,);je - <getDI+>;movl -(%ebp), %edi;movl %edi, -(%edx)": 1,
                "cmpw %di, (%ebx,%ecx,);je - <getDI+>;movl -(%ebp), %edi;movl %edi, -(%edx);movl (%ebp), %edi": 1,
                "je - <getDI+>;movl -(%ebp), %edi;movl %edi, -(%edx);movl (%ebp), %edi;movl %edi, %ebx": 1,
                "addl %ecx, (%ebp);addl %esi, -(%ebp);decl -(%ebp);jne - <getDI+>;movl %eax, ": 1,
                "addl %esi, -(%ebp);decl -(%ebp);jne - <getDI+>;movl %eax, ;popl %ebx": 1,
                "pushl %ecx;pushl %ebx;movl , %ebx;sarl %ebx;cmpl %eax, %ecx": 1,
                "movl %eax, %ecx;sarl %ecx;imull %ebx, %ecx;pushl $;subl %eax, %edi": 1,
                "pushl %edi;pushl -(%esi);pushl %ecx;movl (%esi), %ecx;addl %eax, %ecx": 1,
                "imull , %ecx;imull , %ecx;imull , %ecx;pushl $;pushl %ecx": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;cmpl $, (%eax)": 3,
                "movl , %eax;pushl %ebx;pushl %esi;pushl %edi;calll *(%eax)": 4,
                "movl , %esi;movl , %ecx;movl %esi, %eax;cltd;idivl %ecx": 1,
                "movl %edi, -(%ebp);movl , %edx;movl %ebx, %eax;sarl %eax;addl %eax, %edx": 1,
                "jbe  <getDI+>;subl -(%ebp), %edi;andl $, -(%ebp);movl %edi, -(%ebp);movl $, %edi": 1,
                "cmpl %edi, %eax;jle  <getDI+>;movl %edi, %eax;subl %ebx, %eax;sarl $, %eax": 1,
                "movw %cx, (%eax);incl %eax;incl %eax;addl $, %edx;decl %esi": 1,
                "movl -(%ebp), %edx;jle  <getDI+>;movw (%edx), %cx;movw %cx, (%esi);incl %esi": 1,
                "jne - <getDI+>;cmpl $, -(%ebp);jle  <getDI+>;movl -(%ebp), %edi;movl , %eax": 1,
                "movl %esi, %ecx;calll - <getDI+>;movl -(%ebp), %ecx;pushl %edi;pushl %esi": 1,
                "jmp  <getDI+>;movl -(%ebp), %ecx;xorl %edi, %edi;pushl %edi;pushl -(%ebp)": 1,
                "pushl -(%ebp);movl %edi, ;pushl %edx;calll - <getDI+>;movl -(%ebp), %ecx": 1,
                "decl %ebx;movl , %ecx;leal (%esi,%ecx,), %esi;jne - <getDI+>;movl -(%ebp), %ebx": 1,
                "leal (%esi,%ecx,), %esi;jne - <getDI+>;movl -(%ebp), %ebx;testl %ebx, %ebx;jle  <getDI+>": 1,
                "addl $, %edx;incl %esi;sarl %ecx;cmpl %ecx, %esi;jl - <getDI+>": 1,
                "addl %eax, -(%ebp);decl %ebx;movl , %eax;leal (%esi,%eax,), %esi;jne - <getDI+>": 1,
                "movl , %edx;leal (%edx,%esi), %edi;movl %esi, %eax;sarl %eax;addl , %eax": 1,
                "jle  <getDI+>;movw (%edi), %cx;movw %cx, (%eax);incl %eax;incl %eax": 1,
                "leal -(%esi,%ecx,), %edi;xorl %esi, %esi;testl %edi, %edi;jle  <getDI+>;pushl $": 1,
                "pushl ;pushl -(%ebp);pushl $;pushl %edi;calll *": 1,
                "subl %eax, %edi;movl , %eax;addl %esi, %eax;sarl %esi;addl , %esi": 1,
                "addl %esi, %eax;sarl %esi;addl , %esi;pushl %eax;pushl %esi": 2,
                "movl %ebx, %ecx;pushl ;movl %eax, %esi;calll - <getDI+>;movl %eax, %edi": 1,
                "pushl %eax;pushl %esi;movl %ebx, %ecx;calll - <getDI+>;xorl %ecx, %ecx": 1,
                "pushl %edi;calll *(%eax);movl , %edi;movl , %esi;movl , %ecx": 1,
                "idivl ;shll $, %esi;cmpl $, (%ecx);movl , %ecx;jbe  <getDI+>": 1,
                "movl %ebx, (%eax);cmpl %ebx, ;je  <getDI+>;movl , %ecx;movl , %edx": 1,
                "cmpl %ebx, ;je  <getDI+>;movl , %ecx;movl , %edx;movl , %eax": 1,
                "leal (%edx,%eax,), %esi;movl , %edx;movl %eax, ;movl %ecx, ;movl %esi, ": 2,
                "cmpl $, ;jne  <getDI+>;movl , %eax;cltd;idivl %ecx": 1,
                "idivl %ecx;pushl %ebx;pushl %esi;pushl %edi;movl %eax, -(%ebp)": 1,
                "calll *(%eax);movl , %ebx;movl , %eax;andl $-, %ebx;shll %ebx": 1,
                "testl %eax, %eax;jle  <getDI+>;movl (%edi), %ecx;movl %ecx, (%esi);addl $, %esi": 1,
                "addl %eax, %edi;addl %eax, %esi;cmpl %edx, %ecx;jne  <getDI+>;incl %ebx": 1,
                "addl %eax, %esi;cmpl %edx, %ecx;jne  <getDI+>;incl %ebx;cmpl -(%ebp), %ebx": 1,
                "jne  <getDI+>;incl %ebx;cmpl -(%ebp), %ebx;movl %ebx, -(%ebp);jl - <getDI+>": 1,
                "movl %ebx, -(%ebp);jl - <getDI+>;jmp  <getDI+>;subl %eax, %esi;subl %eax, %edi": 1,
                "pushl -(%ebp);pushl %eax;movl -(%ebp), %eax;pushl %ecx;movl -(%ebp), %ecx": 1,
                "je  <getDI+>;movl , %ecx;movl , %edx;movl , %eax;imull %ecx, %edx": 1,
                "movl , %ecx;movl , %edx;movl , %eax;imull %ecx, %edx;addl %ebx, %edx": 1,
                "imull %ecx, %edx;addl %ebx, %edx;leal (%edx,%eax,), %esi;movl , %edx;movl %eax, ": 1,
                "pushl %esi;xorl %esi, %esi;cmpl %esi, (%eax);je  <getDI+>;cmpl %esi, ": 2,
                "pushl %edi;calll *(%eax);movl , %ecx;cmpl $, (%ecx);movl , %eax": 1,
                "cmpl $, (%ecx);movl , %eax;movl , %ebx;movl %eax, -(%ebp);jbe  <getDI+>": 1,
                "addl $, %ebx;decl %esi;testl %esi, %esi;movl %eax, -(%ebp);jg - <getDI+>": 1,
                "addl $, %eax;addl $, %ebx;andl $, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "cmpl (%eax), %ecx;jne  <getDI+>;addl $, %eax;addl $, %ebx;decl %edi": 1,
                "shll $, %eax;pushl %eax;movl -(%ebp), %eax;subl %edi, %eax;leal (,%eax,), %eax": 1,
                "cltd;pushl $;popl %esi;idivl %esi;pushl $": 2,
                "pushl $;popl %esi;idivl %esi;pushl $;movl %eax, %esi": 2,
                "movl %eax, %esi;movl (%edi), %eax;cltd;popl %edi;idivl %edi": 2,
                "movl %edx, -(%ebp);jg - <getDI+>;jmp  <getDI+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 2,
                "addl $, -(%ebp);addl $, -(%ebp);decl -(%ebp);movw %ax, (%edx);jne - <getDI+>": 1,
                "movb (%eax), %al;cmpb (%edx), %al;jne  <getDI+>;incl -(%ebp);addl $, %edx": 1,
                "cmpb (%edx), %al;jne  <getDI+>;incl -(%ebp);addl $, %edx;decl -(%ebp)": 1,
                "movb (%eax,%ecx), %cl;cmpb (%edx,%eax,), %cl;movl %eax, -(%ebp);jne  <getDI+>;movl -(%ebp), %ecx": 1,
                "movl %edx, -(%ebp);jge  <getDI+>;leal (%esi,%esi,), %ecx;shll $, %ecx;leal (,%esi,), %edi": 1,
                "movl %edi, -(%ebp);movl %eax, -(%ebp);pushl $;popl %edi;movb (%edx), %al": 1,
                "testl %edi, %edi;movl %edx, -(%ebp);jg - <getDI+>;jmp  <getDI+>;leal -(%edi), %esi": 1,
                "int;cmpb $, ;je  <getDI+>;jmp - <getDI+>;jmp - <getDI+>": 2,
                "incl %esi;cmpb $, ;pushl %edi;movl , %edi;jne  <getDI+>": 1,
                "movl %eax, -(%ebp);movl , %eax;sarl $, %ebx;calll *(%eax);movl , %eax": 1,
                "sarl $, %ebx;calll *(%eax);movl , %eax;cmpl $, (%eax);jbe  <getDI+>": 1,
                "subl %esi, %eax;movl %eax, -(%ebp);movl , %eax;imull %esi, %eax;movl %ebx, %ecx": 1,
                "pushl %esi;pushl -(%ebp);xorl %eax, %eax;rep  stosl %eax, %es:(%edi);pushl $": 1,
                "movl %edi, %eax;xorl %ecx, %ecx;calll - <getDI+>;movl %esi, %eax;movl %edi, %ecx": 3,
                "movl %edi, %ecx;calll - <getDI+>;movl , %eax;andl $, (%eax);movl , %eax": 3,
                "xorl %eax, %eax;rep  stosl %eax, %es:(%edi);pushl %ebx;movl %edx, %ecx;pushl $": 2,
                "movl (%esi), %edx;movl %eax, %ecx;movl %ebx, -(%ebp);movl (%esi), %ebx;subl %edi, %ecx": 1,
                "movl (%esi), %ebx;subl %edx, %ebx;cmpl $, %ebx;jge  <getDI+>;movl (%esi), %ebx": 1,
                "subl %edi, %ebx;cmpl %ecx, %ebx;jg  <getDI+>;movl (%esi), %eax;movl (%esi), %ebx": 1,
                "jle  <getDI+>;subl -(%ebp), %edx;movl -(%ebp), %ecx;subl %edi, %eax;incl %edx": 1,
                "pushl %edx;pushl %eax;pushl -(%ebp);movl -(%ebp), %eax;leal (%eax,%ecx,), %eax": 1,
                "cmpb $, ;movl , %edx;movzwl , %eax;pushl %ebx;movl , %ebx": 1,
                "movl %ecx, %edx;sarl $, %edi;addl , %edi;shrl $, %ecx;xorl %eax, %eax": 1,
                "movl (%edi), %eax;shll $, %eax;subl %esi, %eax;cltd;idivl -(%ebp)": 1,
                "jle  <getDI+>;movl -(%ebp), %eax;cmpl %eax, %ebx;jge  <getDI+>;movl -(%ebp), %edx": 1,
                "andl $, ;movl %ebx, %ecx;imull %edx, %ecx;addl %esi, %ecx;sarl $, %ecx": 1,
                "calll - <getDI+>;xorl %ecx, %ecx;calll - <getDI+>;movl , %edi;andl $, (%edi)": 1,
                "imull , %esi;incl %eax;cltd;idivl %esi;pushl %edi": 1,
                "imull %ecx, %eax;cltd;idivl %esi;movl %eax, %esi;cmpl %esi, %ebx": 1,
                "shll $, %eax;subl %ebx, %eax;cltd;idivl -(%ebp);movl %eax, -(%ebp)": 1,
                "idivl -(%ebp);incl %eax;cmpl $, -(%ebp);movl %eax, -(%ebp);jge  <getDI+>": 1,
                "jne  <getDI+>;shll %cl, %edi;jmp  <getDI+>;imull , %edi;movl %edi, %eax": 1,
                "shll %cl, %edi;jmp  <getDI+>;imull , %edi;movl %edi, %eax;cltd": 1,
                "jne  <getDI+>;movl %edi, %ecx;imull %eax, %ecx;addl %ebx, %ecx;sarl $, %ecx": 1,
                "imull %eax, %ecx;addl %ebx, %ecx;sarl $, %ecx;pushl %edi;movl %edx, %eax": 1,
                "movl , %ecx;leal (%ecx,%eax), %edx;cmpl %ebx, %edx;jle  <getDI+>;movl %ebx, %edi": 1,
                "movl %ecx, %edx;shrl $, %ecx;subl %ebx, %eax;decl %eax;movl %eax, -(%ebp)": 1,
                "subl -(%ebp), %ecx;movl , %edi;sarl $, %ecx;movl %ecx, %edx;shrl $, %ecx": 1,
                "pushl ;calll *;movl -(%ebp), %edi;movl %ebx, %eax;imull %esi, %eax": 1,
                "movl %ebx, %eax;imull %esi, %eax;cmpl -(%ebp), %edi;pushl $;jle  <getDI+>": 1,
                "movl -(%ebp), %edi;sarl $, %ecx;movl %ecx, %edx;shrl $, %ecx;xorl %eax, %eax": 1,
                "jle  <getDI+>;movl %ebx, %eax;subl %edi, %eax;cltd;idivl %esi": 1,
                "subl %edx, %esi;calll - <getDI+>;movl %eax, -(%ebp);movzwl , %eax;incl %eax": 1,
                "jmp  <getDI+>;imull , %eax;pushl -(%ebp);movl %esi, %ecx;sarl $, %ecx": 1,
                "pushl %ebx;calll *;movl -(%ebp), %eax;movl -(%ebp), %ecx;jmp  <getDI+>": 1,
                "calll - <getDI+>;xorl %ecx, %ecx;calll - <getDI+>;movl , %eax;andl $, (%eax)": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;pushl %edi;movl %ecx, %edi": 1,
                "jge  <getDI+>;movl (%ebp), %edx;subl $, %edx;je  <getDI+>;decl %edx": 1,
                "movl , %eax;incl (%eax);popl %edi;popl %esi;popl %ebp": 1,
                "pushl %edi;movl (%ebp), %edi;movb %al, -(%ebp);movl (%ebp), %eax;shrl $, %ecx": 1,
                "leal (%eax,%edi,), %edi;movb $, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);jle  <getDI+>": 1,
                "movl -(%ebp), %edi;cmpl %eax, %ebx;jne  <getDI+>;decl %eax;decl %eax": 1,
                "movl %eax, %ecx;movl (%ebp), %eax;subl %ecx, %eax;subl %esi, %eax;cltd": 1,
                "movl , %eax;imull %eax, %ecx;imull %edx, %eax;imull %edx, %ecx;imull , %ecx": 1,
                "subl %edx, %eax;movl %eax, -(%ebp);sarl -(%ebp);movl %ecx, %eax;imull (%ebp), %ecx": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;movl (%ebp), %eax;imull (%ebp), %eax;cltd": 2,
                "movl %ecx, (%ebp);movl (%ebp), %ecx;movl (%ebp), %esi;movl %ecx, %edx;shrl $, %ecx": 1,
                "movl %ecx, %edx;shrl $, %ecx;movl %ebx, %edi;rep  movsl (%esi), %es:(%edi);movl %edx, %ecx": 1,
                "jne - <getDI+>;movl -(%ebp), %eax;movl , %ebx;subl , %ebx;movl -(%ebp), %ecx": 1,
                "movl , %edi;movl %eax, %ecx;movl %edx, %eax;imull %ebx, %eax;cltd": 1,
                "leal -(%ecx,%eax), %ecx;pushl %ecx;movl -(%ebp), %ecx;imull %ebx, %ecx;leal -(%ecx,%esi), %ecx": 1,
                "pushl %ebx;andl $, %ecx;rep  movsb (%esi), %es:(%edi);orl $, %eax;pushl %eax": 1,
                "shrl $, %ecx;movl %eax, %esi;subl -(%ebp), %eax;movl %ebx, %edi;subl -(%ebp), %ebx": 2,
                "calll  <host_com_close+>;subl -(%ebp), %ebx;decl (%ebp);jne - <getDI+>;movl -(%ebp), %ecx": 1,
                "movl %esp, %ebp;cmpl $, ;je  <getDI+>;movl , %ecx;movl , %eax": 1,
                "pushl ;calll - <IsCdRomFile+>;testw %ax, %ax;jne  <getDI+>;movl , %eax": 1,
                "calll *(%eax);movl , %eax;andw $, (%eax);retl;int": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "cltd;xorl %edx, %eax;subl %edx, %eax;cmpl $, %eax;jg  <getDI+>": 2,
                "jg  <getDI+>;movl , %eax;subl %edi, %eax;cltd;xorl %edx, %eax": 1,
                "movl , %eax;incl %eax;cmpl %ebx, %eax;jl  <getDI+>;incl ": 1,
                "calll - <getDI+>;movl $, ;movl %esi, ;movl %edi, ;movl %ebx, ": 1,
                "movl $, ;movl %esi, ;movl %edi, ;movl %ebx, ;movl %esi, ": 1,
                "pushl $;popl %ecx;idivl %ecx;movl %eax, -(%ebp);movl , %eax": 1,
                "movl , %eax;addl %esi, %eax;movl %eax, ;pushl %esi;pushl %edi": 1,
                "popl %eax;jmp  <getDI+>;movl , %eax;cltd;idivl %ecx": 1,
                "movl , %eax;calll *(%eax);jmp  <getDI+>;movl , %ecx;movl %ecx, %eax": 1,
                "movl , %eax;addl %esi, %ecx;cmpl %ecx, %eax;movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %eax, -(%ebp);jmp  <getDI+>;andl $, -(%ebp);movl %ebx, ;movl %edi, ": 1,
                "idivl %ecx;movl %eax, -(%ebp);cmpl %esi, -(%ebp);movl %esi, -(%ebp);jle  <getDI+>": 1,
                "movl %esi, -(%ebp);jle  <getDI+>;jmp  <getDI+>;xorl %esi, %esi;movl -(%ebp), %eax": 1,
                "movl %esi, %edx;subl %ebx, %edx;subl $, %ecx;movl (%ecx), %edi;decl %eax": 1,
                "jne  <getDI+>;decl %ecx;decl %ecx;movl %ecx, %eax;cltd": 1,
                "je  <getDI+>;movl , %eax;cmpl , %eax;movl , %ecx;movl %eax, ": 1,
                "movl %ecx, %edx;imull , %edx;addl -(%ebp), %edx;movl %eax, ;leal (%edx,%eax,), %esi": 1,
                "imull $, %eax, %eax;imull $, %edx, %edx;addl %edx, %eax;movzbl (%ecx), %edx;imull $, %edx, %edx": 1,
                "movl %esp, %ebp;pushl $;calll - <IsCdRomFile+>;testb $, %al;je  <getDI+>": 1,
                "movl (%ebp), %eax;shll $, %eax;testl %ebx, %ebx;movl %eax, -(%ebp);jle  <getDI+>": 1,
                "movb $-, %dl;movl $, (%ebp);movb (%ebp), %al;testb %dl, %al;movl , %eax": 1,
                "je  <getDI+>;movb (%ebp), %bl;movb %bl, (%edi,%eax);jmp  <getDI+>;movb $, (%edi,%eax)": 1,
                "movb (%ebp), %bl;movb %bl, (%edi,%eax);jmp  <getDI+>;movb $, (%edi,%eax);incl %edi": 1,
                "movl -(%ebp), %eax;subl %esi, %eax;addl %edi, %eax;sarl $, %eax;movb %al, (%ebp)": 1,
                "imull (%ebp), %eax;leal (%ecx,%eax,), %esi;movl %esi, %eax;sarl $, %eax;movb %al, (%ebp)": 1,
                "movb (%ebp), %al;movl , %ecx;pushl %esi;movb %al, (%ecx,%esi);calll *": 1,
                "pushl %edi;pushl $;calll - <IsCdRomFile+>;movl (%ebp), %ebx;movzwl %ax, %edi": 1,
                "movl , %eax;movl (%ebp), %edx;movl (%ebp), %ecx;leal (%eax,%ebx), %esi;leal (%eax,%edx), %edi": 1,
                "pushl %eax;calll *;movl -(%ebp), %eax;addl %eax, (%ebp);addl %eax, %ebx": 1,
                "pushl %esi;pushl %edi;pushl $;calll - <IsCdRomFile+>;movzwl %ax, %ebx": 1,
                "movl (%ebp), %eax;addl %eax, %ecx;addl %ecx, %esi;movl (%ebp), %ecx;xorl %edx, %edx": 1,
                "addl %ecx, %esi;movl (%ebp), %ecx;xorl %edx, %edx;addl %ecx, %eax;cmpl %ebx, %eax": 1,
                "setle %dl;testl %edx, %edx;movl %edx, (%ebp);je  <getDI+>;pushl $": 1,
                "subl (%ebp), %edi;imull %ebx, %eax;addl %eax, %esi;movl %ebx, %eax;imull (%ebp), %eax": 1,
                "pushl %ecx;pushl %eax;calll *;movl (%ebp), %edx;subl %ebx, (%ebp)": 1,
                "incl %edx;testb %bl, %bl;je  <getDI+>;movb -(%ebp), %bl;orb %bl, (%eax)": 1,
                "shrb -(%ebp);decl %esi;jne - <getDI+>;addl -(%ebp), %edx;incl %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <getDI+>;movl -(%ebp), %ecx;popl %edi": 1,
                "movl %esp, %ebp;pushl $;calll - <IsCdRomFile+>;movl , %ecx;movzwl %ax, %eax": 1,
                "jmp  <getDI+>;leal -(%ebp), %eax;pushl %eax;pushl %edi;calll - <getES+>": 1,
                "calll - <IsCdRomFile+>;movb %al, -(%ebp);leal (%esi), %eax;pushl %eax;calll - <IsCdRomFile+>": 2,
                "pushl -(%ebp);calll - <setCL>;jmp  <getDI+>;subl $, %eax;je  <getDI+>": 1,
                "calll - <getCX>;testw %ax, %ax;jbe  <getDI+>;pushl %esi;leal -(%ebp), %eax": 1,
                "pushl %esi;movl %ecx, %edi;calll - <getDI+>;incl %esi;incl %ebx": 1,
                "pushl $;calll - <setBL>;leal -(%ebp), %eax;pushl %eax;movl $, %edi": 1,
                "calll - <call_ica_hw_interrupt+>;jmp  <getDI+>;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl -(%ebp);leal (%esi), %eax;pushl %eax;calll - <IsCdRomFile+>;incl %edi": 1,
                "andl $-, %eax;jmp  <getDI+>;calll - <call_ica_hw_interrupt+>;leal -(%ebp), %eax;pushl %eax": 1,
                "jmp  <getDI+>;pushl %ebx;movl $, %esi;pushl %esi;calll - <IsCdRomFile+>": 1,
                "je  <getDI+>;calll - <IsCdRomFile+>;andl $-, %eax;jmp  <getDI+>;calll - <IsCdRomFile+>": 1,
                "jmp  <getDI+>;calll - <getAL>;testb %al, %al;jne  <getDI+>;movl $, %esi": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %esi;calll - <getDI>;movzwl %ax, %eax": 1,
                "pushl %eax;calll - <IsCdRomFile+>;cmpb $, ;movl %eax, %esi;je  <getDI+>": 2,
                "cmpb $, ;movl %eax, %esi;je  <getDI+>;calll  <getDI+>;jmp  <getDI+>": 2,
                "calll - <IsCdRomFile+>;xorl %eax, %eax;movw , %ax;pushl %eax;leal (%esi), %eax": 1,
                "andb $, %al;orb %al, %cl;shrb $, %cl;leal (%esi), %eax;pushl %ecx": 1,
                "pushl $;addl $, %esi;pushl %esi;calll - <IsCdRomFile+>;pushl $": 1,
                "movw %ax, %di;andl $, %edi;movl %edi, -(%ebp);calll - <getAL>;movzbl %al, %eax": 1,
                "movl %edi, -(%ebp);calll - <getAL>;movzbl %al, %eax;subl $, %eax;je  <getDI+>": 1,
                "incl %esi;incb -(%ebp);cmpb $, -(%ebp);jb - <getDI+>;pushl %esi": 1,
                "jb - <getDI+>;pushl %esi;calll - <IsCdRomFile+>;pushl %eax;pushl $": 1,
                "cmpb $, -(%ebp);jb - <getDI+>;leal -(%ebp), %eax;pushl %eax;pushl $": 3,
                "pushl %eax;pushl $;calll - <getES+>;movb $, -(%ebp);pushl -(%ebp)": 2,
                "pushl $;calll - <getES+>;movb $, -(%ebp);pushl -(%ebp);pushl $": 1,
                "pushl %esi;calll - <IsCdRomFile+>;pushl %eax;pushl $;calll - <IsCdRomFile+>": 14,
                "calll - <IsCdRomFile+>;pushl %eax;pushl $;calll - <IsCdRomFile+>;incl %esi": 12,
                "incl %esi;incl %esi;pushl %esi;calll - <IsCdRomFile+>;pushl %eax": 4,
                "pushl -(%ebp);incl %esi;pushl %edi;calll - <call_ica_hw_interrupt+>;pushl %esi": 1,
                "pushl %esi;calll - <IsCdRomFile+>;incl %esi;pushl %esi;movb %al, -(%ebp)": 1,
                "jmp  <getDI+>;movl %edi, -(%ebp);andl $, -(%ebp);je  <getDI+>;pushl $": 1,
                "pushl $;pushl %esi;calll - <IsCdRomFile+>;movl %edi, -(%ebp);andl $, -(%ebp)": 1,
                "cmpw $, -(%ebp);movl $, %ebx;movl $, %edi;je  <getDI+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl -(%ebp), %eax;movzbl (%eax), %eax;pushl %eax;pushl %esi": 2,
                "pushl %ebx;calll - <call_ica_hw_interrupt+>;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "jb - <getDI+>;movb $, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "je  <getDI+>;xorl %eax, %eax;movb , %al;pushl %eax;pushl %esi": 1,
                "incl %esi;pushl %esi;pushl $;calll  <cpu_createthread+>;pushl $": 2,
                "pushl %esi;pushl $;calll  <cpu_createthread+>;pushl $;pushl %ebx": 1,
                "pushl $;pushl %ebx;addl $, %esi;calll - <call_ica_hw_interrupt+>;leal -(%ebp), %eax": 1,
                "jl - <getDI+>;calll  <SetShadowDescriptorEntries+>;popl %edi;popl %esi;jmp  <SetShadowDescriptorEntries+>": 1,
                "movl %edx, ;movl $, ;calll - <getCL+>;popl %ebp;retl $": 1,
                "movzbl %bl, %eax;andl $, %esi;orl %eax, %esi;subl $, %ecx;je  <getDI+>": 1,
                "je  <getDI+>;decl %ecx;jne  <getDI+>;movb , %cl;cmpb %bl, %cl": 1,
                "movzbl , %edx;movl %edx, %esi;shll $, %esi;addl %eax, %esi;movzbl %cl, %eax": 1,
                "cmpb %bl, %cl;je  <getDI+>;movzbl , %edx;shll $, %eax;addl %edx, %eax": 1,
                "shll $, %eax;addl %edx, %eax;movl %eax, ;movzbl %cl, %eax;pushl %edx": 1,
                "pushl %edx;pushl %eax;movl , %eax;calll *(%eax);testb $, ": 1,
                "incb %bl;movzbl %bl, %eax;movb %bl, ;movl %eax, ;calll - <setCH+>": 1,
                "pushl ;calll - <getIntelRegistersPointer+>;jmp  <getDI+>;subl $, %ecx;je  <getDI+>": 1,
                "je  <getDI+>;decl %ecx;jne  <getDI+>;cmpb %bl, ;je  <getDI+>": 1,
                "movl , %eax;shrl $, %esi;shrl $, %eax;xorl %esi, %eax;testb $, %al": 1,
                "testb $, %al;je  <getDI+>;notl %esi;andl $, %esi;movl %esi, ": 1,
                "movl %eax, ;calll - <IsCdRomFile+>;jmp  <getDI+>;cmpb %bl, ;je  <getDI+>": 1,
                "cmpb %bl, ;je  <getDI+>;movb %bl, ;movb %bl, ;jmp - <getDI+>": 1,
                "movb %bl, ;movl %ecx, ;jne  <getDI+>;pushl $;pushl $": 1,
                "movb , %ah;movb %bl, ;movb %bl, %al;jmp - <getDI+>;movb %bl, ": 1,
                "pushl %ebp;movl %esp, %ebp;movl , %eax;andl $, %eax;addl $-, %eax": 1,
                "jmp  <getDI+>;movb , %cl;jmp  <getDI+>;movb , %cl;movl (%ebp), %eax": 4,
                "movb $-, (%eax);popl %ebp;retl $;pushl %esi;popl %edx": 1,
                "popl %edx;addb (%edi), %cl;popl %esi;popl %edx;addb (%edi), %cl": 1,
                "cmpl %eax, %edx;je  <getDI+>;andb $, %cl;cmpl $, ;movb %cl, ": 2,
                "jne  <getDI+>;calll  <SetShadowDescriptorEntries+>;popl %ebp;retl $;int": 2,
                "xorl %ebx, %eax;testb $, %al;je  <getDI+>;movb %bl, %al;andb $, %al": 1,
                "xorl , %ecx;andl $, %ecx;xorl %ecx, ;xorl %ecx, %ecx;incl %ecx": 2,
                "movl %ebx, %esi;incl %edi;movl %eax, %ecx;shrl %esi;shrl %ecx": 1,
                "sete %al;incl %eax;movl %eax, ;calll - <getCL+>;movb %bl, ": 1,
                "xorl %edi, %edi;decl %eax;subl %edi, %ecx;movl %edi, ;movl %eax, ": 1,
                "orl $, %eax;movl %eax, ;andl $, %eax;addl , %eax;movl %edi, ": 1,
                "movl %eax, ;andl %ecx, %eax;addl , %eax;movl %ecx, ;movl %eax, ": 1,
                "subl %edi, %eax;je  <getDI+>;decl %eax;je  <getDI+>;decl %eax": 1,
                "testb $, ;je  <getDI+>;pushl $;pushl ;pushl ": 2,
                "movl $, ;jmp  <getDI+>;movl $, ;movl $, ;jmp  <getDI+>": 2,
                "andl $, %ecx;cmpl $, %ecx;pushl %esi;jbe  <getDI+>;cmpl $, %ecx": 1,
                "pushl %eax;movl , %eax;calll *(%eax);movb %bl, ;jmp  <getDI+>": 1,
                "movb %bl, ;jmp  <getDI+>;movb %bl, ;movl , %esi;xorl %ecx, %ecx": 1,
                "jmp  <getDI+>;movb %bl, ;movl , %esi;xorl %ecx, %ecx;incl %ecx": 1,
                "notb %al;andb $-, %al;orb $, %al;movb %al, ;calll - <getDI+>": 1,
                "movl , %eax;andl $, %eax;leal (,%eax,), %edi;movl (%edi), %edx;leal (%eax,%eax,), %esi": 1,
                "shrl $, %eax;andb %cl, %al;movb $, %dl;imulb %dl;movl (%edi), %edx": 1,
                "andb %cl, %al;movb $-, %cl;imulb %cl;orb %al, %dl;movb %bl, (%esi)": 1,
                "orb (%ebp), %al;movb %al, (%esi);movb (%edi), %al;andb %cl, %al;movb %dl, %cl": 1,
                "pushl $;pushl %edi;calll - <getES+>;pushl %esi;pushl %edi": 1,
                "movl %esp, %ebp;pushl %esi;pushl (%ebp);movl %eax, %esi;pushl %esi": 1,
                "calll - <getBL>;movzbl %al, %eax;subl $, %eax;je  <getDI+>;decl %eax": 1,
                "pushl $;jmp  <getDI+>;pushl $;jmp  <getDI+>;pushl $": 5,
                "orl $-, -(%ebp);jmp  <getDI+>;andl $, %esi;movl (,%esi,), %eax;movl %eax, -(%ebp)": 1,
                "movl %ecx, (%esi);addl %ebx, %esi;decl (%ebp);jne - <getDI+>;jmp  <getDI+>": 1,
                "andl -(%ebp), %eax;incl %edi;testl %ebx, %ebx;movl %edi, (%ebp);jbe  <getDI+>": 1,
                "jne  <getDI+>;orl $-, (%ebp);jmp  <getDI+>;movl (%ebp), %eax;andl $, %eax": 1,
                "movl (%ebp), %ebx;cmpl $, %ebx;movl (%ebp), %ecx;movl , %edx;movzbl %al, %eax": 1,
                "decl %ecx;jne - <getDI+>;addl (%ebp), %esi;decl (%ebp);jne - <getDI+>": 1,
                "jle  <getDI+>;movl %eax, %ebx;cmpl %eax, %esi;jle  <getDI+>;movl %eax, %esi": 1,
                "cmpl %eax, %edx;movb %bl, %cl;movl %esi, %eax;jl  <getDI+>;shll $, %eax": 1,
                "pushl $;movl $, %eax;calll - <getDI+>;calll - <getCX>;pushl %eax": 1,
                "calll - <getES+>;calll - <getBL>;movb %al, %bl;calll  <getBH>;testb %al, %al": 1,
                "pushl -(%ebp);calll - <IsCdRomFile+>;pushl $;pushl %esi;calll - <call_ica_hw_interrupt+>": 1,
                "pushl -(%ebp);addl $, %eax;pushl %eax;calll - <IsCdRomFile+>;pushl %edi": 1,
                "addb $, %bl;pushl %esi;movb %bl, -(%ebp);calll - <call_ica_hw_interrupt+>;pushl -(%ebp)": 2,
                "pushl -(%ebp);pushl %esi;calll - <call_ica_hw_interrupt+>;testl %edi, %edi;je  <getDI+>": 2,
                "jne  <getDI+>;calll - <getDI+>;jmp  <getDI+>;pushl $;calll - <setAL>": 1,
                "jmp  <getDI+>;movb $-, ;pushl $;pushl $;calll - <IsCdRomFile+>": 1,
                "testl %ebx, %ebx;je  <getDI+>;pushl $;movl %ebx, %esi;subl %ebx, %edi": 1,
                "addl $, %ebx;pushl %eax;pushl %ebx;jmp  <getDI+>;calll - <getBL>": 1,
                "int;calll - <getBL>;cmpb $, %al;je  <getDI+>;cmpb $, %al": 1,
                "incl %esi;pushl %esi;calll - <IsCdRomFile+>;shrb $, %al;pushl %eax": 1,
                "calll - <IsCdRomFile+>;pushl $;movzwl %ax, %ebx;calll - <IsCdRomFile+>;movzbl %al, %esi": 1,
                "movzwl %ax, %ebx;calll - <IsCdRomFile+>;movzbl %al, %esi;pushl $;movl %esi, -(%ebp)": 1,
                "pushl $;addl %eax, %edi;calll - <IsCdRomFile+>;imull %ebx, %esi;imull (%ebp), %esi": 1,
                "calll - <getDI+>;jmp  <getDI+>;movl (%ebp), %eax;pushl %esi;pushl %edi": 1,
                "movl (%ebp), %ecx;andl $, %ecx;movl (,%ecx,), %ecx;andl %eax, %ecx;testb $-, (%ebp)": 1,
                "cmpl -(%ebp), %eax;setle %cl;testl %ecx, %ecx;movl %ecx, (%ebp);je  <getDI+>": 2,
                "movl %eax, (%ebp);subl (%ebp), %edi;testl %edi, %edi;jle  <getDI+>;shll $, %esi": 1,
                "addl %eax, %ecx;addl %ecx, %ebx;movl %esi, (%ebp);movl (%ebp), %esi;xorl %ecx, %ecx": 1,
                "imull (%ebp), %ecx;leal -(%edi), %eax;imull -(%ebp), %eax;subl (%ebp), %edi;addl %eax, %ebx": 1,
                "imull -(%ebp), %eax;subl (%ebp), %edi;addl %eax, %ebx;movl %ebx, %eax;subl %ecx, %eax": 1,
                "shll $, %eax;movl %eax, (%ebp);movl %edi, (%ebp);movl , %eax;movl (%ebp), %edx": 1,
                "subl -(%ebp), %ebx;movl (%ebp), %esi;shll $, %eax;subl %eax, (%ebp);decl (%ebp)": 1,
                "jne - <getDI+>;movl (%ebp), %eax;andl $, %eax;movl (,%eax,), %edi;movl (%ebp), %eax": 1,
                "movl (,%eax,), %edi;movl (%ebp), %eax;testl %eax, %eax;je  <getDI+>;movl %eax, (%ebp)": 1,
                "movl %eax, -(%ebp);movl $, %ebx;pushl (%ebp);movl -(%ebp), %esi;pushl %esi": 1,
                "rep  cmpsb %es:(%edi), (%esi);je  <getDI+>;movl (%ebp), %eax;addl %eax, -(%ebp);incl -(%ebp)": 1,
                "popl %esi;popl %ebx;jge  <getDI+>;pushl -(%ebp);jmp  <getDI+>": 1,
                "movl $, %edi;pushl %edi;movzbl %al, %ebx;calll - <IsCdRomFile+>;movzwl %ax, %eax": 1,
                "jl - <getDI+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <getDI+>": 1,
                "imull (%ebp), %eax;addl %eax, %esi;movl %ecx, %eax;pushl $;cltd": 1,
                "subl %ecx, %edi;addl %eax, %esi;movl $, %eax;sarl %cl, %eax;movl , %ecx": 1,
                "pushl %eax;calll - <getBP+>;pushl %eax;calll - <getCH+>;calll - <getAL>": 1,
                "pushl $;calll - <RegisterWOWIdle+>;pushl $;jmp  <getDI+>;subl $, %eax": 1,
                "pushl $;calll - <IsCdRomFile+>;xorl %eax, %eax;movw , %ax;pushl %eax": 3,
                "movl $, ;movl $, ;movl $, ;calll - <RegisterWOWIdle+>;pushl $": 2,
                "movl $, ;movl $, ;calll - <RegisterWOWIdle+>;pushl $;pushl $": 2,
                "pushl %esi;calll - <RegisterWOWIdle+>;pushl %ebx;pushl $;calll - <RegisterWOWIdle+>": 1,
                "calll - <RegisterWOWIdle+>;pushl $;pushl %esi;calll - <RegisterWOWIdle+>;pushl $": 1,
                "je  <getDI+>;decl %eax;movl (%ebp), %eax;jne  <getDI+>;movb , %cl": 1,
                "movl (%ebp), %eax;movb %cl, (%eax);jmp  <getDI+>;movb , %cl;jmp - <getDI+>": 1,
                "popl %ecx;jl  <getDI+>;punpcklwd (%edx,%eax), %mm;imull $, (%edx,%eax), %edi;cmpb $-, (%edx,%eax)": 1,
                "pushl %ebp;movl %esp, %ebp;movl , %eax;subl $, %eax;je  <getDI+>": 1,
                "jne  <getDI+>;movl , %ecx;shll %cl, %eax;jmp  <getDI+>;imull %edi, %eax": 1,
                "jmp  <getDI+>;movzbl %bl, %eax;movl (,%eax,), %edx;testb $, %bl;popl %ebx": 1,
                "popl %ebx;je  <getDI+>;movb , %al;testb $, %al;jne  <getDI+>": 1,
                "jmp  <getDI+>;cmpl $, %eax;ja  <getDI+>;movzbl (%eax), %eax;jmpl *(,%eax,)": 1,
                "jmp  <getDI+>;xorl %eax, %eax;cmpl %eax, ;pushl %eax;pushl $": 1,
                "punpckhbw -(%eax), %mm;addb (%edi), %cl;decl %edi;addb $, (%edx);jle - <getDI+>": 1,
                "addb (%ebx), %al;addb (%ebx), %al;addb $, %al;addb $, %al;pushl %es": 1,
                "setl %dl;shll %edx;xorl %ebx, %edx;andl $, %edx;xorl %edx, %ebx": 1,
                "pushl $;popl %esi;jmp  <getDI+>;movzbl %bl, %eax;movl (,%eax,), %esi": 1,
                "incl %eax;popl %ebx;retl;int;int": 1,
                "movl , %eax;pushl %esi;movl (%ebp), %esi;addl %esi, %eax;pushl %eax": 2,
                "jne  <getDI+>;movl , %eax;addl %esi, %eax;pushl %eax;calll - <IsCdRomFile+>": 5,
                "movl , %ecx;pushl $;addl %eax, %ecx;pushl %ecx;calll - <IsCdRomFile+>": 1,
                "pushl %esi;pushl $;cltd;popl %esi;idivl %esi": 1,
                "decl %eax;je  <getDI+>;decl %eax;jne  <getDI+>;pushl %esi": 2,
                "calll - <IsCdRomFile+>;jmp  <getDI+>;calll - <getDI+>;movl , %eax;addl %esi, %eax": 1,
                "calll - <getDI+>;jmp  <getDI+>;calll - <getDI+>;movl , %eax;addl %esi, %eax": 1,
                "orb $, %al;cmpb $, ;movb %al, (%ecx);jbe  <getDI+>;decb ": 1,
                "xorl %eax, %eax;andl $, %ecx;popl %ebx;cmpl (,%eax,), %ecx;je  <getDI+>": 1,
                "pushl %esi;calll  <host_com_close+>;movb (%ebp), %al;xorb %bl, %al;testb $, %al": 1,
                "movb (%ebp), %al;xorb %bl, %al;testb $, %al;je  <getDI+>;xorl %eax, %eax": 1,
                "pushl %esi;calll - <getDI+>;movb (%ebp), %al;andb $, %al;jne  <getDI+>": 1,
                "andb $, %al;jne  <getDI+>;testb $, %bl;je  <getDI+>;movl , %eax": 1,
                "movb (%ebp), %al;movb %al, (%esi);popl %edi;popl %esi;popl %ebx": 2,
                "jne  <getDI+>;movb (%eax), %cl;andb $-, %cl;orb $, %cl;movb %cl, (%eax)": 1,
                "orb $, %cl;jmp - <getDI+>;cmpl %ecx, (%eax);jne  <getDI+>;movb (%eax), %cl": 1,
                "orb $, (%eax);testb %cl, %cl;jns  <getDI+>;testb %dl, (%eax);jne  <getDI+>": 1,
                "cmpl $-, -(%ebp);je  <getDI+>;pushl -(%ebp);leal (%esi,%esi,), %eax;leal (,%eax,), %eax": 1,
                "jne  <getDI+>;pushl $;popl %edx;pushl %edi;movl %edx, %edi": 1,
                "leal (,%eax,), %eax;movw %cx, (%eax);movb (%eax), %cl;pushl %esi;movl (%ebp), %esi": 1,
                "int;int;testb $, (%esi);je  <getDI+>;testb $, (%esi)": 3,
                "jne  <getDI+>;cmpl $, (%esi);je  <getDI+>;testb $, (%esi);je  <getDI+>": 1,
                "shrl %eax;andl %ebx, %eax;movl %edx, -(%ebp);xorl %edx, %edx;movl %eax, -(%ebp)": 1,
                "shrl $, %ecx;andl %ebx, %edi;andl %ebx, %ecx;movl %ecx, -(%ebp);shrl $, %edx": 1,
                "decl %edx;jne  <getDI+>;orb $, %al;jmp  <getDI+>;andb $-, %al": 1,
                "calll - <getDI+>;movl -(%ebp), %ecx;movl %ebx, (%esi);movb (%esi), %al;xorl %edx, %edx": 1,
                "shrl $, %edx;andl %ebx, %edx;cmpl %edx, %ecx;jne  <getDI+>;pushl $": 2,
                "movb %al, (%esi);calll - <getDI+>;movl %ebx, (%esi);movb (%esi), %al;movl -(%ebp), %ecx": 2,
                "subl %edi, %ecx;je  <getDI+>;decl %ecx;jne  <getDI+>;orb $-, %al": 1,
                "movl %edi, %edi;pushl %esi;movl %eax, %esi;movb (%esi), %al;testb $, %al": 1,
                "pushl %esi;movl %eax, %esi;orb $, (%esi);calll - <getDI+>;popl %esi": 1,
                "movl (%ebp), %eax;pushl %esi;leal (%eax,%eax,), %esi;leal (,%esi,), %esi;orb $, (%esi)": 1,
                "xorl %edi, %edi;incl %edi;andl %edi, %eax;cmpl (%esi), %eax;jne  <getDI+>": 1,
                "subl %eax, %edx;je  <getDI+>;decl %edx;jne  <getDI+>;cmpl %eax, (%esi)": 2,
                "pushl %eax;pushl $;jmp - <getDI+>;movb (%esi), %al;andb $-, %al": 2,
                "movl %edi, %edi;pushl %ebx;pushl %esi;leal (%ecx,%ecx,), %esi;xorl %eax, %eax": 1,
                "int;int;movl %edi, %edi;pushl %esi;leal (%eax,%eax,), %esi": 1,
                "orb $, %al;movb %al, (%esi);calll - <getDI+>;movl %ebx, (%esi);popl %esi": 1,
                "movl %eax, %esi;leal (%esi,%esi,), %edi;leal (,%edi,), %edi;calll - <getDI+>;movw (%edi), %di": 1,
                "leal (%esi,%esi,), %edi;leal (,%edi,), %edi;calll - <getDI+>;movw (%edi), %di;testw %di, %di": 1,
                "leal (%edi,%edi,), %esi;leal (,%esi,), %esi;movb (%esi), %al;xorb %bl, %al;testb $, %al": 1,
                "movb (%esi), %al;xorb %bl, %al;testb $, %al;je  <getDI+>;xorl %eax, %eax": 2,
                "movb %bl, %al;shrl $, %eax;andl $, %eax;incl %eax;pushl %eax": 1,
                "calll - <getDI+>;testb $, %bl;movb $, %cl;jne  <getDI+>;xorl %edx, %edx": 1,
                "sbbl %eax, %eax;negl %eax;addl $, %eax;jmp  <getDI+>;andb %cl, %al": 1,
                "negb %al;sbbl %eax, %eax;incl %eax;incl %eax;cmpl %eax, %edx": 1,
                "pushl $;pushl %edi;calll - <getDI+>;testb %bl, %bl;js  <getDI+>": 1,
                "pushl $;pushl $;pushl %edi;movb $, (%esi);calll - <getCH+>": 1,
                "movb $, (%esi);calll - <getCH+>;pushl $;xorl %ebx, %ebx;pushl $": 1,
                "incl %ebx;pushl %edi;movb %bl, (%esi);movb $-, (%esi);movb $, (%esi)": 1,
                "andl $, %ebx;cmpl $, %ebx;ja  <getDI+>;jmpl *(,%ebx,);calll - <setIP+>": 1,
                "orb %al, %cl;movb %cl, (%esi);movb (%esi), %al;movl (%ebp), %ecx;movb %al, (%ecx)": 1,
                "addb (%edi), %cl;outl %eax, %dx;xchgl %ecx, %eax;addb (%edi), %cl;orl -(%edx), %edx": 1,
                "negb %al;sbbl %eax, %eax;andl $, %eax;incl %eax;movl %eax, %edi": 2,
                "andl $, %eax;incl %eax;movl %eax, %edi;leal (%edi,%edi,), %esi;pushl %edi": 1,
                "jne  <getDI+>;movb (%ebp), %al;movb %al, (%esi);jmp  <getDI+>;movb (%esi), %al": 1,
                "calll - <getDI+>;movl $, (%esi);jmp  <getDI+>;xorl %eax, %eax;movb (%esi), %al": 1,
                "xorl %eax, %eax;movb (%esi), %al;shrl $, %eax;andl $, %eax;shlb $, %al": 1,
                "xorl %eax, %eax;movb (%esi), %al;xorl %ebx, %ebx;incl %ebx;andl %ebx, %eax": 1,
                "movl %esi, %eax;calll - <getDI+>;xorl %eax, %eax;movb (%esi), %al;andl %ebx, %eax": 1,
                "calll - <getDI+>;movl (%ebp), %eax;andb $-, (%esi);cmpl $, (%esi);movb %al, (%esi)": 1,
                "andb $-, (%esi);cmpl $, (%esi);movb %al, (%esi);jne  <getDI+>;pushl %eax": 1,
                "xorl %ecx, %ecx;movb (%esi), %cl;andl $, %ecx;movb (%ecx), %cl;andb %al, %cl": 1,
                "movl %esi, %edx;shll $, %eax;shrl $, %edx;orl %edx, %eax;andl $, %esi": 1,
                "pushl %esi;movl (,%eax,), %esi;je  <getDI+>;pushl %edi;movzwl (%ebp), %edi": 2,
                "movb (%esi), %al;pushl %eax;pushl (%ebp);calll *%edi;incl %esi": 1,
                "movzwl (%ebp), %edi;pushl (%ebp);pushl (%ebp);calll *%esi;addl $, (%ebp)": 1,
                "xorl %eax, %eax;movw (%esi), %ax;pushl %eax;pushl (%ebp);calll *%edi": 1,
                "movsbl (%eax), %eax;leal (,%eax,), %eax;popl %ebp;retl $;int": 1,
                "movl $, %esi;pushl %esi;calll - <getCX+>;pushl -(%ebp);calll - <setAL>": 1,
                "pushl %edi;pushl %esi;calll - <IsCdRomFile+>;jmp  <getDI+>;calll - <getDX>": 1,
                "je  <getDI+>;pushl $;pushl $;calll  <SetShadowDescriptorEntries+>;pushl $": 3,
                "calll - <setDI+>;pushl $;calll - <setDI+>;calll  <getDH>;movzbl %al, %eax": 2,
                "pushl %eax;pushl $;calll  <SetShadowDescriptorEntries+>;calll - <getCH>;movzbl %al, %eax": 3,
                "pushl $;calll - <setDI+>;pushl $;calll - <setDI+>;pushl %edi": 1,
                "calll - <setDI+>;andb $, %al;movzbl %al, %eax;pushl %eax;pushl $": 2,
                "pushl %ebx;calll  <SetShadowDescriptorEntries+>;pushl $;calll - <setDI+>;pushl $": 1,
                "pushl %eax;pushl %ebx;jmp  <getDI+>;pushl $;calll - <setDI+>": 1,
                "jmp  <getDI+>;pushl $;calll - <setDI+>;andb $, %al;movzbl %al, %eax": 1,
                "popl %esi;popl %ebx;leave;retl;xorl -(%eax), %ebx": 1,
                "popl %ebx;leave;retl;xorl -(%eax), %ebx;addb (%edi), %cl": 1,
                "xorl -(%eax), %ebx;addb (%edi), %cl;stosb %al, %es:(%edi);cwtl;addb (%edi), %cl": 1,
                "addb (%edi), %cl;incl %eax;lcalll $, $;int;int": 1,
                "calll - <IsCdRomFile+>;leal (%ebp), %eax;pushl %eax;pushl $;calll - <getES+>": 1,
                "pushl (%ebp);pushl $;calll - <IsCdRomFile+>;pushl (%ebp);pushl $": 1,
                "pushl %edi;addl $, %esi;pushl %esi;calll - <IsCdRomFile+>;addl $, %esi": 1,
                "calll  <cpu_createthread+>;popl %edi;movb %al, (%esi);popl %esi;retl": 1,
                "movl , %eax;cmpl , %eax;jle  <getDI+>;pushl $;calll - <getDI+>": 1,
                "testl %esi, %esi;je  <getDI+>;pushl %esi;pushl ;pushl %ebx": 1,
                "je  <getDI+>;movl , %eax;shll $, %eax;pushl %eax;pushl %esi": 2,
                "jne  <getDI+>;pushl $;movb $, ;calll - <getDI+>;jmp  <getDI+>": 1,
                "calll  <host_com_close+>;movl %eax, %esi;testl %esi, %esi;je  <getDI+>;movl , %eax": 1,
                "testl %eax, %eax;je  <getDI+>;pushl $;calll - <getDI+>;xorl %eax, %eax": 1,
                "int;int;movl $, ;calll - <getDI+>;cmpl $, %eax": 1,
                "int;pushl $;calll  <cpu_createthread+>;testb $, %al;je  <getDI+>": 1,
                "int;int;movl , %eax;cmpl $, (,%eax,);jne  <getDI+>": 1,
                "imull %ecx, %eax;cltd;movl $, %ecx;idivl %ecx;movzbw %al, %ax": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %esi;pushl %edi;calll - <setIP+>": 1,
                "andl $, %eax;movl %eax, ;calll - <getBX>;movzwl %ax, %ebx;shrl $, %ebx": 1,
                "popl %ebx;andl $, %eax;cmpl $, %esi;movl %eax, ;je  <getDI+>": 1,
                "andl $, ;movl $, ;jmp  <getDI+>;movl %edi, ;movl $, ": 1,
                "movl %esp, %ebp;pushl %ecx;pushl %esi;leal -(%ebp), %eax;pushl %eax": 2,
                "testl %eax, %eax;je  <getDI+>;pushl %ebx;movl , %ebx;calll - <getDI+>": 1,
                "calll - <setDL>;movl , %eax;movzbl (,%eax,), %eax;decb %al;pushl %esi": 1,
                "calll - <getDI+>;pushl $;calll - <setAX>;popl %esi;retl": 1,
                "pushl $;calll - <getDI+>;pushl $;calll - <setAX>;pushl $": 1,
                "movzbl , %edx;movzbl , %edi;shll $, %edx;addl %edi, %edx;cmpl (%eax), %edx": 1,
                "jg  <getDI+>;movl (%eax), %edi;movl (%eax), %eax;imull %edx, %edi;imull %esi, %eax": 1,
                "int;decb ;incb ;movzbl , %eax;movl , %edx": 1,
                "orb $, ;retl;int;int;int": 1,
                "pushl $;calll  <SetShadowDescriptorEntries+>;popl %ebp;retl $;int": 1,
                "decl %eax;jne - <getDI+>;movl $, ;jmp - <getDI+>;calll - <getDI+>": 1,
                "testb $, %bl;jne  <getDI+>;orb $, ;jmp  <getDI+>;calll - <getDI+>": 1,
                "cmpl $-, %eax;movl %eax, -(%ebp);jne  <getDI+>;movb $, ;movl %esi, ": 1,
                "pushl $;xorl %eax, %eax;calll - <getDI+>;jmp  <getDI+>;cmpl %esi, (%ebp)": 1,
                "cmpl %esi, (%ebp);jne  <getDI+>;andb $-, %bl;orb $-, %bl;pushl %ecx": 1,
                "retl $;pushl $;xorl %eax, %eax;calll - <getDI+>;calll - <getDI+>": 1,
                "je - <getDI+>;pushl $-;calll - <getDI+>;movl $, ;jmp - <getDI+>": 1,
                "pushl %ebx;pushl %edi;pushl $;popl %ebx;pushl $": 1,
                "cmpl $, (%ebp);jne  <getDI+>;andb $-, ;movl $, ;jmp - <getDI+>": 1,
                "andb $-, ;movl $, ;jmp - <getDI+>;pushl %ebx;xorl %eax, %eax": 1,
                "andl $, ;pushl $;popl %ecx;pushl %edi;movl , %eax": 1,
                "movl $, ;popl %edi;popl %ebp;retl $;int": 1,
                "calll - <getDI+>;testb $, ;je  <getDI+>;pushl $;calll *": 1,
                "pushl $;calll *;movb (%edi), %al;movb %al, (%esi);jmp  <getDI+>": 1,
                "movb %al, ;movb %bl, ;movb (%esi), %cl;movzbl %cl, %eax;shrl $, %eax": 1,
                "movl %ebx, ;jmp  <getDI+>;movl $, ;jmp  <getDI+>;orb $, %al": 1,
                "jmp  <getDI+>;movzwl (%ebp), %ecx;cmpl $, %ecx;je  <getDI+>;pushl %esi": 1,
                "movl %esp, %ebp;movzwl (%ebp), %ecx;movl %ecx, %eax;subl $, %eax;pushl %esi": 1,
                "movzwl (%ebp), %ecx;movl %ecx, %eax;subl $, %eax;pushl %esi;pushl %edi": 1,
                "movb %cl, ;testb $, %al;movb %al, ;je  <getDI+>;movb $-, ": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;movb , %al;andb $, %al": 1,
                "movzbl , %eax;orb $, ;shll $, %eax;movzbl (%eax), %eax;xorl %ecx, %ecx": 1,
                "jne  <getDI+>;movzbl , %eax;cmpl %ecx, %eax;je  <getDI+>;movl (,%eax,), %eax": 1,
                "movl %esp, %ebp;movb , %al;pushl %ebx;xorl %ebx, %ebx;movb %al, %bl": 1,
                "jne  <getDI+>;testb $-, ;setne %al;incl %eax;movl %eax, (%ecx)": 1,
                "pushl $;calll - <setCH+>;movswl %ax, %eax;cmpl %ebx, %eax;movl %ebx, ": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;xorl %eax, %eax;pushl %ebx;movb %al, (%ecx)": 1,
                "movw $, %ax;retl $;int;int;int": 1,
                "movb $, (%eax);xorw %ax, %ax;popl %ebp;retl $;int": 1,
                "pushl $;pushl $;calll - <IsCdRomFile+>;pushl $;calll - <setCF>": 1,
                "calll - <setCF>;retl $;int;int;int": 1,
                "pushl %eax;movl (%ebp), %eax;addl $, %eax;pushl %eax;calll - <getCX+>": 2,
                "leal -(%ebp), %eax;pushl %eax;addl $, %edi;pushl %edi;calll - <getCX+>": 2,
                "testb $, -(%ebp);jne  <getDI+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl %eax;pushl $;calll - <getCX+>;movb -(%ebp), %al;xorl %edx, %edx": 1,
                "pushl %esi;calll - <IsCdRomFile+>;orl $-, %eax;jmp  <getDI+>;xorl %eax, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;pushl $;calll - <setDI+>;testb $-, %al": 1,
                "pushl %eax;movl $, %esi;pushl %esi;calll - <getCX+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;movb -(%ebp), %al;movb %cl, %dl;movb $, %bl;shlb %cl, %bl": 1,
                "movb $, %bl;shlb %cl, %bl;movb %al, %cl;shlb $, %dl;andb $, %cl": 1,
                "cmpb %dl, %cl;jne  <getDI+>;testb %bl, %al;jne  <getDI+>;movb %al, %cl": 1,
                "andb $, -(%ebp);pushl -(%ebp);pushl %esi;calll - <IsCdRomFile+>;xorl %eax, %eax": 1,
                "calll - <getCX+>;movb -(%ebp), %dl;testb %dl, %dl;jne  <getDI+>;pushl %ebx": 1,
                "andb $, %cl;orb %al, %cl;movb %cl, -(%ebp);pushl -(%ebp);pushl %edi": 1,
                "pushl %esi;calll - <getDI+>;xorb %cl, %cl;cmpl $-, %eax;je  <getDI+>": 1,
                "andb $, -(%ebp);decl %eax;je  <getDI+>;decl %eax;je  <getDI+>": 1,
                "pushl $;calll - <call_ica_hw_interrupt+>;calll - <getBX>;movzwl %ax, %eax;pushl %eax": 1,
                "jmp  <getDI+>;orb $, -(%ebp);pushl -(%ebp);pushl %edi;calll - <IsCdRomFile+>": 2,
                "pushl %eax;pushl $;xorl %esi, %esi;calll - <getCX+>;cmpb $, -(%ebp)": 1,
                "cmpb $, -(%ebp);jne  <getDI+>;pushl %ebx;pushl %edi;pushl $": 1,
                "pushl $;movzbl %al, %eax;pushl %ebx;pushl %edi;movl %eax, -(%ebp)": 1,
                "calll - <IsCdRomFile+>;calll  <getDH>;cmpb %al, ;popl %edi;popl %ebx": 1,
                "popl %ebx;je  <getDI+>;addl -(%ebp), %esi;jmp  <getDI+>;calll - <getCH>": 1,
                "je  <getDI+>;movl -(%ebp), %eax;leal (%esi,%eax,), %esi;movl %esi, %eax;popl %esi": 1,
                "calll - <setCS>;pushl -(%ebp);calll - <setIP>;calll - <getDI+>;calll - <getCF>": 1,
                "calll - <getDX>;movl %eax, %ebx;calll - <getCS>;movl %eax, -(%ebp);calll - <getIP>": 1,
                "pushl %eax;pushl $;calll - <getCX+>;testb $-, -(%ebp);je  <getDI+>": 1,
                "testb $-, -(%ebp);je  <getDI+>;testw %si, %si;jne  <getDI+>;leal -(%ebp), %eax": 1,
                "cmpl $, %eax;jge  <getDI+>;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "jl - <getDI+>;pushl $;pushl $;pushl $;calll - <IsCdRomFile+>": 1,
                "xorl %eax, %eax;popl %edi;popl %esi;leave;retl": 1,
                "movl %esp, %ebp;pushl %ecx;calll - <getDI+>;leal -(%ebp), %eax;pushl %eax": 2,
                "je  <getDI+>;testb $, (%ebp);je  <getDI+>;movl %ebx, %eax;calll - <getDI+>": 1,
                "movl %ebx, %eax;calll - <getDI+>;testl %eax, %eax;je  <getDI+>;leal -(%ebp), %eax": 1,
                "pushl %eax;calll - <getDI+>;calll  <getDH>;pushl %eax;calll - <getDI+>": 1,
                "calll - <getCX+>;movb -(%ebp), %al;negb %al;popl %edi;popl %esi": 1,
                "movl , %eax;pushl %ebx;movl %eax, -(%ebp);pushl $;movl %ecx, %ebx": 2,
                "calll - <getDI+>;movb (%ebp), %al;andb $, %bl;shlb $, %bl;andb $, %al": 1,
                "pushl %ebx;calll - <getDI+>;calll - <getDI+>;movl -(%ebp), %ecx;popl %ebx": 2,
                "movl %ecx, %ebx;calll - <getDI+>;andl $, %ebx;pushl %ebx;calll - <getDI+>": 1,
                "calll - <IsCdRomFile+>;cmpl %esi, %edi;je  <getDI+>;leal -(%ebp), %eax;pushl %eax": 1,
                "jne  <getDI+>;xorl %eax, %eax;jmp  <getDI+>;pushl %edi;pushl %esi": 1,
                "pushl %edi;calll - <getDI+>;calll - <getDI+>;movl %eax, %esi;pushl %ebx": 1,
                "leal (%ebx), %esi;pushl %esi;je  <getDI+>;calll - <getCX+>;orb $-, (%ebp)": 1,
                "movb $, %al;movl %ebx, %ecx;shlb %cl, %al;notb %al;andb %al, -(%ebp)": 1,
                "calll  <getDH>;andb $, %al;shlb $, %al;andb $, %bl;orb %bl, %al": 1,
                "testl %eax, %eax;je  <getDI+>;leal -(%ebp), %ecx;leal (%ebx), %eax;pushl %ecx": 1,
                "testb $, -(%ebp);jne  <getDI+>;pushl $;pushl $;calll - <IsCdRomFile+>": 1,
                "andb $, %al;negb %al;pushl $;popl %esi;sbbl %eax, %eax": 1,
                "calll - <IsCdRomFile+>;movl %esi, %eax;cltd;subl %edx, %eax;movl %eax, %ecx": 1,
                "testl %eax, %eax;je  <getDI+>;incl %esi;cmpl %edi, %esi;jl - <getDI+>": 1,
                "incl %esi;cmpl %edi, %esi;jl - <getDI+>;orl $-, %eax;jmp  <getDI+>": 1,
                "je  <getDI+>;orb $, -(%ebp);pushl -(%ebp);pushl -(%ebp);calll - <IsCdRomFile+>": 1,
                "calll - <getDI+>;movl %ebx, %esi;calll - <getDI+>;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %eax, %eax;jne  <getDI+>;calll - <getDI+>;pushl %ebx;calll - <getDI+>": 1,
                "calll - <getDI+>;pushl %eax;calll - <getDI+>;calll - <getDI+>;pushl %ebx": 1,
                "pushl $-;calll - <getDI+>;movl -(%ebp), %ecx;popl %esi;popl %ebx": 1,
                "jmp  <getDI+>;testb $, -(%ebp);je  <getDI+>;testb $, -(%ebp);je  <getDI+>": 1,
                "addl $, %ebx;pushl %ebx;calll - <getCX+>;testb $, -(%ebp);je  <getDI+>": 1,
                "calll - <getDI+>;leal -(%ebp), %eax;pushl %eax;pushl $;calll - <getCX+>": 2,
                "pushl -(%ebp);leal -(%ebp), %ecx;calll - <getDI+>;cmpl $-, %eax;je - <getDI+>": 1,
                "andl $, %eax;cmpl -(%ebp), %eax;jne  <getDI+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;leal (%esi), %eax;pushl %eax;calll - <getCX+>;movb -(%ebp), %al": 1,
                "movl (%ebp), %edi;movl %edi, %ebx;calll - <getDI+>;movl %edi, %eax;calll - <getDI+>": 1,
                "pushl -(%ebp);calll - <IsCdRomFile+>;addl $, %eax;pushl %eax;calll - <getCX+>": 1,
                "movw , %ax;movw %ax, -(%ebp);movw , %ax;movw %ax, -(%ebp);jne  <getDI+>": 1,
                "movw , %ax;movw %ax, -(%ebp);jne  <getDI+>;addl $, -(%ebp);jmp  <getDI+>": 1,
                "incl %esi;pushl %esi;pushl -(%ebp);calll - <IsCdRomFile+>;pushl %eax": 1,
                "movl %edi, %eax;calll - <getDI+>;cmpl %esi, %eax;je  <getDI+>;pushl (%ebp)": 1,
                "pushl (%ebp);calll - <getDI+>;cmpl %esi, %eax;je  <getDI+>;movl (%ebp), %esi": 1,
                "testl %eax, %eax;jne - <getDI+>;movl %edi, %esi;calll - <getDI+>;calll - <getDI+>": 1,
                "movl %eax, -(%ebp);pushl %esi;leal -(%ebp), %eax;pushl %eax;movl $, %esi": 3,
                "pushl $;calll - <IsCdRomFile+>;movl %eax, %esi;movw %si, %ax;popl %esi": 1,
                "pushl %ecx;pushl %ecx;pushl %ebx;pushl %esi;pushl $": 1,
                "movb %al, %bl;xorb -(%ebp), %al;testb $, %al;je  <getDI+>;testb $, %bl": 1,
                "subl %ecx, %eax;popl %esi;retl;int;int": 1,
                "int;int;pushl $;calll - <setIF>;cmpl $, ": 1,
                "testl %eax, %eax;pushl %ebx;pushl %esi;pushl %edi;movl %eax, %ebx": 1,
                "pushl $;calll - <setAX>;calll - <getDI+>;jmp  <getDI+>;cmpb $, %al": 1,
                "andl $, ;calll - <getAX+>;popl %ebp;retl $;int": 1,
                "pushl %ebp;movl %esp, %ebp;cmpb $-, (%ebp);je  <getDI+>;cmpb $-, (%ebp)": 1,
                "movl %esp, %ebp;cmpb $-, (%ebp);je  <getDI+>;cmpb $-, (%ebp);je  <getDI+>": 1,
                "pushl -(%ebp);calll - <getDI+>;leave;retl;pushl %esi": 1,
                "retl;pushl %esi;pushl $;calll - <setIF>;pushl $": 1,
                "calll - <getCF>;testl %eax, %eax;jne  <getDI+>;calll - <getDI+>;calll - <getDI+>": 1,
                "pushl $;calll - <getDI+>;jmp - <getDI+>;pushl %ebx;pushl %edi": 1,
                "movl $, %edi;pushl %edi;calll - <IsCdRomFile+>;movb %al, %bl;testb $-, %bl": 1,
                "andl $-, %eax;pushl %eax;pushl %edi;calll - <IsCdRomFile+>;cmpb $, -(%ebp)": 1,
                "pushl %eax;pushl %edi;jmp  <getDI+>;cmpb $-, -(%ebp);jne  <getDI+>": 1,
                "orl $, %eax;pushl %eax;pushl %edi;calll - <IsCdRomFile+>;calll - <getDI+>": 1,
                "cmpb $, %bl;jb  <getDI+>;movl $, %ebx;pushl %ebx;calll - <IsCdRomFile+>": 1,
                "movb -(%ebp), %al;notb %al;andb %al, %cl;pushl %ecx;pushl %ebx": 1,
                "andb %al, %cl;pushl %ecx;pushl %ebx;jmp  <getDI+>;testb $, %bl": 1,
                "pushl %ebx;jmp  <getDI+>;testb $, %bl;je  <getDI+>;movl , %eax": 1,
                "cmpb %al, -(%ebp);je - <getDI+>;cmpb $, -(%ebp);jne - <getDI+>;testb $-, -(%ebp)": 1,
                "calll - <getDI+>;pushl $;calll - <setAX>;calll - <getDI+>;jmp  <getDI+>": 1,
                "jmp - <getDI+>;movl $, %esi;movb %bl, -(%ebp);notb -(%ebp);pushl %esi": 1,
                "calll - <IsCdRomFile+>;pushl -(%ebp);pushl $;jmp  <getDI+>;cmpb $, %bl": 1,
                "calll - <IsCdRomFile+>;orb %bl, %al;pushl %eax;pushl %esi;calll - <IsCdRomFile+>": 1,
                "testb $, %al;je  <getDI+>;pushl %edi;calll - <IsCdRomFile+>;orb %bl, %al": 1,
                "ja  <getDI+>;pushl %esi;calll - <IsCdRomFile+>;testb $, %al;je  <getDI+>": 1,
                "pushl %ebx;calll - <IsCdRomFile+>;testb $, %al;jne  <getDI+>;pushl %esi": 1,
                "cmpl $, %ebx;jl - <getDI+>;cmpl $, %ebx;jge  <getDI+>;pushl %edi": 1,
                "movb -(%ebp), %al;addb $, %al;pushl $;pushl %eax;jmp  <getDI+>": 1,
                "imulb %cl;addb %bl, %al;pushl %eax;pushl %esi;calll - <IsCdRomFile+>": 1,
                "calll - <getDI+>;jmp  <getDI+>;pushl $;popl %esi;movl , %eax": 1,
                "cmpl $, %esi;jge  <getDI+>;pushl $;pushl -(%ebp);jmp  <getDI+>": 1,
                "jge  <getDI+>;pushl $;pushl -(%ebp);jmp  <getDI+>;cmpb $, %cl": 1,
                "pushl %esi;jmp  <getDI+>;pushl %edi;calll - <IsCdRomFile+>;testb $, %al": 1,
                "jmp  <getDI+>;cmpb $, -(%ebp);jae  <getDI+>;pushl %edi;calll - <IsCdRomFile+>": 1,
                "pushl %edi;calll - <IsCdRomFile+>;movl , %ecx;jmp  <getDI+>;pushl %edi": 1,
                "movb -(%ebp), %al;cmpb $, %al;ja  <getDI+>;cmpb $, %al;pushl %edi": 1,
                "jge  <getDI+>;pushl %esi;calll - <IsCdRomFile+>;testb $, %al;je  <getDI+>": 1,
                "testb $, %al;jne  <getDI+>;pushl $;jmp - <getDI+>;cmpb $, %al": 1,
                "pushl %eax;je  <getDI+>;calll - <IsCdRomFile+>;pushl %eax;pushl $": 1,
                "pushl %eax;pushl -(%ebp);jmp  <getDI+>;pushl %esi;calll - <IsCdRomFile+>": 1,
                "jmp - <getDI+>;movw $, (%eax);movl , %eax;movl (%eax), %eax;movw $, (%eax)": 2,
                "sti;xlatb;addb (%edi), %cl;sti;xlatb": 2,
                "movl %eax, %esi;calll - <getCS>;movl %eax, %edi;calll - <getAX>;movl %eax, %ebx": 3,
                "movl %eax, -(%ebp);calll - <setDX>;pushl (%ebp);calll - <setAL>;xorl %eax, %eax": 1,
                "pushl %ebx;calll - <setAX>;pushl -(%ebp);calll - <setDX>;popl %edi": 2,
                "pushl (%ebp);calll - <setAX>;xorl %eax, %eax;movw , %ax;pushl %eax": 1,
                "calll - <IsCdRomFile+>;movl , %eax;movl (%eax), %eax;pushl (%eax);calll - <IsCdRomFile+>": 1,
                "movl (%ecx), %ecx;movb %al, (%ecx);je  <getDI+>;pushl %ebx;pushl %esi": 1,
                "movb %al, (%ecx);je  <getDI+>;pushl %ebx;pushl %esi;pushl %edi": 1,
                "movl $, %edi;pushl %edi;calll - <getDI+>;pushl $;movl $, %esi": 1,
                "movl (%eax), %eax;movl (%eax), %eax;addl (%ebp), %eax;pushl %eax;calll - <IsCdRomFile+>": 3,
                "addl (%ebp), %eax;pushl %eax;calll - <IsCdRomFile+>;pushl %eax;pushl %esi": 1,
                "calll - <IsCdRomFile+>;pushl %eax;pushl $;calll - <getDI+>;movb $, -(%ebp)": 1,
                "addl %edi, %eax;pushl %eax;calll - <IsCdRomFile+>;pushl %eax;pushl $": 1,
                "pushl -(%ebp);pushl %edi;calll - <getDI+>;movl , %eax;movl (%eax), %eax": 1,
                "pushl %edi;calll - <getDI+>;pushl $;popl %ecx;xorl %eax, %eax": 1,
                "rep  stosl %eax, %es:(%edi);popl %edi;popl %esi;popl %ebx;leave": 1,
                "int;int;movl , %eax;movl (%eax), %eax;pushl %esi": 1,
                "sarl %eax;movw %ax, (%ecx);movl , %eax;movl (%eax), %eax;leal (%eax), %ecx": 1,
                "movswl (%ecx), %edx;imull %edx, %eax;cltd;idivl %esi;popl %esi": 1,
                "imull %edx, %eax;cltd;idivl %esi;popl %esi;movw %ax, (%ecx)": 1,
                "movl , %edx;movl (%edx), %edx;movw (%edx), %dx;pushl %esi;movl (%ebp), %esi": 2,
                "movl (%ebp), %ecx;movw (%ecx), %cx;movw %cx, (%eax);movl (%ebp), %eax;movzbl (%eax), %eax": 1,
                "pushl (%ebp);calll - <getDI+>;movl (%ebp), %eax;movw %di, (%eax);movl (%ebp), %eax": 1,
                "jle  <getDI+>;movl , %ecx;movl (%ecx), %ecx;movw %ax, (%ecx);popl %ebp": 1,
                "xorl %ebx, %ebx;calll - <getCX+>;movsbl -(%ebp), %eax;movl , %ecx;movl (%ecx), %ecx": 1,
                "pushl %eax;calll - <IsCdRomFile+>;pushl $;movl %eax, %edi;pushl $": 1,
                "movl , %eax;movl (%eax), %eax;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;movl (%ebp), %eax;xorl %ecx, %ecx": 1,
                "movl %ebx, %edx;testl %edx, %edx;je - <getDI+>;testl %edx, %edx;popl %edi": 1,
                "movl (%ecx), %ecx;movw %ax, (%ecx,%esi,);jmp  <getDI+>;andl $, (%eax);movl , %eax": 1,
                "movw %si, (%ecx);movw %si, (%eax);popl %esi;popl %ebx;popl %ebp": 1,
                "cmpw $, %ax;ja  <getDI+>;pushl %ebx;pushl $;popl %edi": 1,
                "popl %edi;cmpw %di, %ax;movzwl %ax, %eax;jae  <getDI+>;imull $, %eax, %eax": 1,
                "popl %ebx;idivl %ebx;addl $, %eax;jmp  <getDI+>;subl %edi, %eax": 1,
                "movw %di, (%eax);movl (%ebp), %esi;movw (%esi), %ax;cmpw $, %ax;jb  <getDI+>": 1,
                "movl %edi, %ecx;idivl %ecx;addl $, %eax;movl , %ecx;movl (%ecx), %ecx": 1,
                "movl (%ecx), %ecx;movw %ax, (%ecx);movl , %eax;movl (%eax), %eax;movw (%esi), %cx": 1,
                "movw $, (%eax);movl , %eax;movl (%eax), %eax;movw (%eax), %ax;movw %ax, (%ecx)": 1,
                "pushl -(%ebp);pushl $;calll - <call_ica_hw_interrupt+>;popl %edi;popl %esi": 1,
                "movl (%ebp), %eax;movw %cx, (%eax);movw , %cx;movl (%ebp), %eax;movw %cx, (%eax)": 1,
                "movl , %eax;movl (%eax), %eax;movw (%eax), %ax;jmp  <getDI+>;leal (%ebp), %eax": 1,
                "pushl %eax;calll  <cpu_createthread+>;incl (%ebp);movb %al, (%esi,%edi);incl %esi": 1,
                "xorl %eax, %eax;movb (%esi,%edi), %al;pushl %eax;movzwl (%ebp), %eax;pushl %eax": 2,
                "pushl %eax;calll - <IsCdRomFile+>;incl (%ebp);incl %ebx;cmpl $, %ebx": 2,
                "movl $, (%eax);movl , %eax;movl (%eax), %edi;movl (%ebp), %eax;pushl $": 1,
                "movl (%ebp), %eax;andw $, (%eax);movl , %eax;movl (%eax), %eax;movw (%eax), %ax": 1,
                "movl $, %esi;pushl %esi;movl %eax, %edi;movl , %eax;movl (%eax), %eax": 1,
                "movw %ax, (%ecx);movl (%ebp), %eax;andw $, (%eax);jmp  <getDI+>;cmpw $, %ax": 1,
                "decw %si;pushl %edi;shll $, %esi;addl $, %esi;calll - <setES>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;cmpw $, (%eax)": 1,
                "jne  <getDI+>;incb (%ebp);pushl (%ebp);leal (%esi), %eax;pushl %eax": 1,
                "addl $, %esi;pushl %esi;pushl %edi;calll - <IsCdRomFile+>;pushl %eax": 1,
                "andw $, (%eax);movl (%ebp), %eax;movw $, (%eax);calll - <getCS>;pushl %eax": 1,
                "calll - <IsCdRomFile+>;pushl %eax;calll - <IsCdRomFile+>;calll - <getSP>;decl %eax": 1,
                "calll - <getSI>;movl , %ecx;movl (%ecx), %ecx;movw %ax, (%ecx);movl , %eax": 1,
                "pushl %eax;calll  <setSI>;calll - <getDI>;movl , %ecx;movl (%ecx), %ecx": 1,
                "movzwl (%eax), %eax;pushl %eax;calll - <setDI>;calll - <getES>;movl , %ecx": 1,
                "subl $, %esp;cmpl $, ;je  <getDI+>;calll - <getDI+>;pushl %esi": 1,
                "pushl %ebx;calll - <getCF+>;leal -(%ebp), %eax;pushl %eax;movzwl -(%ebp), %eax": 1,
                "pushl %eax;calll - <getCF+>;leal -(%ebp), %ecx;leal (%esi), %eax;pushl %ecx": 1,
                "calll - <getCF+>;leal -(%ebp), %ecx;leal (%esi), %eax;pushl %ecx;pushl %eax": 1,
                "addl $, %eax;pushl %eax;calll - <getDS>;pushl %eax;calll - <IsCdRomFile+>": 2,
                "calll - <IsCdRomFile+>;pushl %eax;calll - <getCF+>;pushl -(%ebp);calll  <setSI>": 1,
                "pushl %eax;pushl %esi;calll - <getCF+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movzwl -(%ebp), %eax;pushl -(%ebp);pushl %eax;calll - <getDS>;pushl %eax": 4,
                "andb %dl, %al;movzbw %al, %ax;movw %ax, (%ecx);movl , %eax;movl (%eax), %eax": 1,
                "calll - <getDI+>;calll - <getDI+>;movl , %eax;movl (%eax), %eax;orl $-, (%eax)": 1,
                "pushl %eax;calll - <setCX>;movl , %eax;movl (%eax), %eax;movzbl (%eax), %eax": 1,
                "cmpl $, %eax;je  <getDI+>;cmpl $, %eax;jne  <getDI+>;calll - <getBL>": 1,
                "movl , %ecx;movl (%ecx), %ecx;movb %al, (%ecx);jmp  <getDI+>;leal -(%ebp), %eax": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl $;calll - <getDI+>;calll - <getBL>": 1,
                "pushl %eax;calll - <IsCdRomFile+>;pushl %eax;calll - <IsCdRomFile+>;jmp  <getDI+>": 1,
                "pushl %esi;calll - <getDI+>;jmp  <getDI+>;calll - <getCL>;movzbl %al, %eax": 1,
                "pushl %edi;calll - <IsCdRomFile+>;movb -(%ebp), %al;cmpb -(%ebp), %al;jae  <getDI+>": 3,
                "movb -(%ebp), %al;cmpb -(%ebp), %al;jae  <getDI+>;movzbl %al, %esi;leal (,%esi,), %esi": 3,
                "pushl %eax;pushl $;calll - <getDI+>;incl %edi;incb -(%ebp)": 3,
                "movzbw %al, %ax;shll $, %eax;leal (%eax,%ecx), %eax;pushl %eax;pushl $": 1,
                "shll $, %eax;leal (%eax,%ecx), %eax;pushl %eax;pushl $;calll - <getDI+>": 1,
                "jmp  <getDI+>;leal -(%esi), %eax;pushl %eax;calll  <cpu_createthread+>;movl , %ecx": 4,
                "pushl %esi;calll - <getDI+>;pushl %ebx;calll  <cpu_createthread+>;pushl %edi": 1,
                "pushl $;calll - <getDI+>;movl -(%ebp), %edi;pushl %edi;calll  <cpu_createthread+>": 1,
                "testb %al, %al;je  <getDI+>;leal (%edi), %eax;pushl %eax;calll  <cpu_createthread+>": 1,
                "calll  <cpu_createthread+>;movl , %ecx;movl (%ecx), %ecx;movzbl %al, %eax;movb %bl, (%eax,%ecx)": 1,
                "jmp  <getDI+>;pushl %ebx;calll - <setBX>;popl %esi;popl %ebx": 1,
                "cmpb %al, %bh;addb (%edi), %cl;addb (%edi), %cl;xchgl %esp, %eax;cli": 1,
                "incb (%edx);psadbw (%eax), %mm;addl (%edi), %ecx;addl %eax, (%ecx);addl (%edi), %ecx": 1,
                "addl %eax, (%ecx);addl (%edi), %ecx;outl %eax, %dx;addl %eax, (%ebx);pxor (%ecx), %mm": 1,
                "cmpl $, %edi;jge  <getDI+>;movl (%eax), %ecx;movb (%edi,%ecx), %cl;andw $, %cx": 1,
                "testl %ecx, %ecx;movl %ecx, -(%ebp);je - <getDI+>;cmpl $, -(%ebp);popl %edi": 1,
                "movl (%eax), %eax;xorl %ecx, %ecx;movw (%eax,%ebx,), %cx;movzwl (%eax,%ebx,), %eax;jmp  <getDI+>": 1,
                "pushl $;calll - <call_ica_hw_interrupt+>;popl %esi;popl %ebx;leave": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %ecx;xorl %eax, %eax;cmpw $, (%ecx)": 1,
                "xorl %eax, %eax;cmpw $, (%ecx);pushl %ebx;sete %al;xorl %ebx, %ebx": 1,
                "movw %cx, (%eax);movl , %eax;movl (%eax), %eax;movw , %cx;movw %cx, (%eax)": 2,
                "movw , %cx;movw %cx, (%eax);movl , %eax;movl (%eax), %eax;movw %bx, (%eax)": 1,
                "movl (%eax), %eax;popl %edi;movl %ebx, (%eax);xorl %eax, %eax;popl %esi": 1,
                "cmpl $, %eax;jl - <getDI+>;movl , %eax;movl (%eax), %eax;movl (%eax), %ecx": 1,
                "movl (%edx), %edx;movw %ax, (%edx);je  <getDI+>;pushl $;popl %eax": 1,
                "incl %eax;incl %eax;cmpl $, %eax;jl - <getDI+>;movl , %eax": 1,
                "movl , %ecx;movl (%ecx), %ecx;incl %eax;movw %ax, (%ecx);movl , %eax": 1,
                "movw (%eax), %si;pushl $;calll  <cpu_createthread+>;movzbl %al, %eax;shll $, %eax": 1,
                "pushl %edi;jne  <getDI+>;movl %ecx, %edi;andl %edx, %edi;testb $, (%edi)": 1,
                "movl , %ecx;movl (%ecx), %ecx;incw (%ecx);testb $, %bl;movl , %ecx": 1,
                "movw %si, (%ecx);je  <getDI+>;movl , %ecx;movl (%ecx), %ecx;movw (%ecx), %dx": 1,
                "movl , %ecx;xorl %eax, %eax;movw %ax, -(%ebp);movw %ax, -(%ebp);movl (%ecx), %ecx": 1,
                "movw -(%ebp), %cx;addw %cx, (%eax);movl , %eax;movl (%eax), %eax;movw -(%ebp), %cx": 1,
                "addw %cx, (%eax);movl -(%ebp), %eax;andl $, %eax;decl %eax;decl %eax": 1,
                "jmp  <getDI+>;movl , %eax;movl (%eax), %eax;movw (%eax), %cx;movw %cx, (%eax)": 3,
                "incb ;cmpb $, ;movl %ecx, ;jbe  <getDI+>;movb $, ": 1,
                "xorl %eax, %eax;pushl $;movl $, %edi;rep  stosl %eax, %es:(%edi);popl %ecx": 1,
                "movl %edx, ;movl %eax, ;movl %eax, ;movl %edx, ;movl %edx, ": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (,%eax,), %eax;popl %ebp;retl $": 1,
                "movl %edi, %edi;pushl %esi;xorl %esi, %esi;cmpl %esi, ;jne  <getDI+>": 1,
                "je  <getDI+>;decl %eax;jne  <getDI+>;testb $, ;jne  <getDI+>": 1,
                "calll - <setDI+>;movl $, ;jmp  <getDI+>;cmpl %edi, ;je  <getDI+>": 1,
                "movl %eax, ;movb %bl, %al;andb $, %al;movb %al, ;jmp  <getDI+>": 1,
                "movl %edi, ;je  <getDI+>;movl $, ;movb , %al;xorb %bl, %al": 1,
                "jmp  <getDI+>;subl $, %ecx;je  <getDI+>;subl $, %ecx;je  <getDI+>": 1,
                "je  <getDI+>;movb (%ebp), %al;movl %edx, ;movb %al, (%edx);jmp  <getDI+>": 1,
                "movl , %ebx;pushl %esi;movl (%ebp), %esi;andl $, (%esi);pushl %edi": 1,
                "pushl %edi;movl , %edi;xorb %cl, %cl;cmpl %edi, %eax;je  <getDI+>": 1,
                "je  <getDI+>;testb %cl, %cl;jne  <getDI+>;testb %dl, %dl;jns  <getDI+>": 1,
                "cmpl %edi, %eax;jne - <getDI+>;testb %cl, %cl;je  <getDI+>;movl $, (%esi)": 1,
                "pushl $;pushl %eax;calll - <getDI+>;movl $, ;jmp  <getDI+>": 1,
                "movl (%ebp), %eax;movzbl (%esi,%eax), %eax;pushl $;pushl %eax;calll - <getDI+>": 1,
                "calll - <getDI+>;andl $, ;movb $-, ;popl %ebp;retl $": 1,
                "calll - <getDI+>;cmpl $, ;je  <getDI+>;cmpb $-, %al;jne  <getDI+>": 1,
                "pushl -(%ebp);jmp - <getDI+>;calll - <getDI+>;popl %esi;leave": 1,
                "jne  <getDI+>;pushl %ebx;pushl %esi;xorl %ebx, %ebx;pushl %edi": 1,
                "movl %ebx, ;movl (%eax), %eax;movl %eax, ;movl , %eax;movl %edi, ": 1,
                "movl , %esi;je  <getDI+>;cmpl $, ;je  <getDI+>;movl (%esi), %eax": 1,
                "movl , %edx;movl %eax, ;movl %ecx, ;movl %ebx, ;movl %edi, ": 4,
                "xorl %ebx, %ebx;incl %ebx;movl (%esi), %eax;jmp  <getDI+>;cmpl %ecx, ": 1,
                "calll - <getDI+>;xorl %ebx, %ebx;incl %ebx;movl (%esi), %eax;xorl %ecx, %ecx": 1,
                "jge  <getDI+>;calll - <getDI+>;popl %ebp;retl $;int": 1,
                "cmpl %ebx, ;jne  <getDI+>;movl (%ebp), %ecx;pushl %edi;movl %ecx, %edi": 1,
                "movl %ebx, (%eax);movl %ebx, -(%ebp);jne  <getDI+>;movb (%ecx), %al;cmpb $, %al": 1,
                "je  <getDI+>;cmpl $, %esi;je  <getDI+>;pushl ;pushl ": 1,
                "jne  <getDI+>;cmpl %ebx, ;movl %ebx, ;jne  <getDI+>;movl %ebx, ": 1,
                "movl %ebx, ;jmp  <getDI+>;movl %ebx, ;jmp - <getDI+>;cmpl %ebx, ": 1,
                "jne  <getDI+>;movl , %eax;movl %ebx, ;movl (%eax), %eax;movl %eax, ": 1,
                "cmpl %edx, ;jne  <getDI+>;cmpl %ecx, ;movl %ecx, ;je  <getDI+>": 2,
                "je  <getDI+>;cmpl %ecx, ;je  <getDI+>;movl (%eax), %esi;movl , %ebx": 2,
                "cmpl %ecx, ;je  <getDI+>;cmpl %ecx, ;je  <getDI+>;movl (%eax), %esi": 1,
                "leal (%eax,%esi), %edx;cmpl , %edx;movl %eax, ;movl %ecx, ;jle - <getDI+>": 1,
                "movb (%ebp), %bl;cmpb $, %bl;ja  <getDI+>;testb %bl, %bl;jne  <getDI+>": 1,
                "pushl $;calll - <getDI+>;movb %bl, ;calll - <setCS+>;jmp  <getDI+>": 1,
                "pushl $;calll - <getDI+>;movl $, ;jmp  <getDI+>;pushl $": 3,
                "calll - <getDI+>;movl $, ;jmp  <getDI+>;pushl $;calll - <getDI+>": 2,
                "movw %dx, %ax;rep  stosl %eax, %es:(%edi);stosw %ax, %es:(%edi);jmp  <getDI+>;calll - <setCS+>": 1,
                "jmp  <getDI+>;calll - <setCS+>;pushl $;calll - <getDI+>;andl $, ": 1,
                "movl $, %edi;popl %ecx;rep  movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);xorl %edi, %edi": 1,
                "calll - <setCS+>;pushl $;calll - <getDI+>;xorl %eax, %eax;incl %eax": 1,
                "movl %eax, ;jmp  <getDI+>;pushl $;calll - <getDI+>;cmpl %edi, ": 1,
                "xorl %esi, %esi;cmpl %edi, %eax;jle  <getDI+>;movl (,%esi,), %eax;decl %eax": 1,
                "jne  <getDI+>;pushl (,%esi,);calll - <getDI+>;jmp  <getDI+>;pushl (,%esi,)": 1,
                "popl %ebx;popl %ebp;retl $;incl %edi;andb %al, (%ebx)": 1,
                "andb %al, (%ebx);punpcklwd (%edi), %mm;addl (%edi), %ecx;jnp  <getDI+>;addl (%edi), %ecx": 1,
                "pushl %esi;xorl %esi, %esi;cmpl %esi, ;je  <getDI+>;cmpl %esi, ": 1,
                "negl %ecx;sbbl %ecx, %ecx;andl $, %ecx;incl %ecx;incl %ecx": 1,
                "popl %esi;retl $;int;int;int": 2,
                "cmpb $, %al;jne  <getDI+>;orb $, ;pushl (%ebp);calll - <getDI+>": 1,
                "movl %esp, %ebp;xorl %ecx, %ecx;cmpl %ecx, ;je  <getDI+>;movl , %eax": 1,
                "testl %eax, %eax;je  <getDI+>;pushl $;pushl $;calll *": 1,
                "pushl $;calll *;andl $, ;jmp  <getDI+>;testb %cl, %cl": 1,
                "pushl %esi;calll *;movl %eax, %edi;cmpl $, %edi;jne  <getDI+>": 1,
                "pushl %edi;movl %edi, (,%esi,);movl %edi, (,%esi,);calll - <VDDAllocateDosHandle+>;pushl %esi": 1,
                "pushl %edi;calll - <ResumeTimerThread+>;cmpl %ebx, %eax;popl %ecx;movl %eax, -(%ebp)": 1,
                "popl %ecx;movl %eax, -(%ebp);jne  <SoftPcEoi+>;pushl %esi;calll *": 1,
                "pushl $;pushl $;calll  <WOWSysErrorBox+>;jmp  <SoftPcEoi+>;pushl %ebx": 1,
                "pushl $;calll  <WOWSysErrorBox+>;jmp  <SoftPcEoi+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "jne  <SoftPcEoi+>;movb (%esi), %al;cmpb $, %al;je  <SoftPcEoi+>;cmpb $, %al": 2,
                "je  <SoftPcEoi+>;subl $, %eax;je  <SoftPcEoi+>;decl %eax;je  <SoftPcEoi+>": 1,
                "je  <SoftPcEoi+>;decl %eax;je  <SoftPcEoi+>;subl $, %eax;jne  <SoftPcEoi+>": 1,
                "cmpb $, %al;je  <SoftPcEoi+>;cmpb $, %al;jne  <SoftPcEoi+>;movb (%esi), %al": 1,
                "jmp  <SoftPcEoi+>;decl %edi;je  <SoftPcEoi+>;incl %esi;cmpb $, (%esi)": 2,
                "cmpl %ebx, %edi;movl %ebx, -(%ebp);je  <SoftPcEoi+>;movsbl (%esi), %eax;pushl %eax": 2,
                "je  <SoftPcEoi+>;movb (%esi), %al;cmpb $, %al;jl  <SoftPcEoi+>;cmpb $, %al": 1,
                "popl %ecx;je  <SoftPcEoi+>;movsbw (%esi), %cx;movl -(%ebp), %eax;leal (%eax,%eax,), %eax": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;movl -(%ebp), %eax;movw %dx, (%eax);movswl %cx, %edx": 1,
                "subl %edx, %esi;movw %cx, (%eax);xorl %ecx, %ecx;shll $, %esi;cmpl %ebx, -(%ebp)": 1,
                "movl %ecx, (%eax);xorl %eax, %eax;incl %eax;jmp  <SoftPcEoi+>;pushl %esi": 1,
                "movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;movl $, %edi;movl $, %esi": 1,
                "jmp  <SoftPcEoi+>;movl (%ebp), %eax;movl (%ebp), %esi;movl %eax, %ecx;shrl $, %ecx": 1,
                "je  <SoftPcEoi+>;movl $, %ebx;jmp  <SoftPcEoi+>;movl (%ebp), %eax;movzwl (%ebp), %ecx": 1,
                "jmp  <SoftPcEoi+>;movl (%ebp), %eax;movzwl (%ebp), %ecx;shrl $, %eax;incl (%ebp)": 1,
                "pushl %eax;pushl %edi;movl %ebx, -(%ebp);calll - <RegisterWOWIdle+>;testl %eax, %eax": 1,
                "movl (%ebp), %edi;xorl %ebx, %ebx;testl %edi, %edi;je  <VDDInstallMemoryHook+>;movl (%ebp), %ecx": 1,
                "je  <VDDInstallMemoryHook+>;cmpl $, %edi;ja  <VDDInstallMemoryHook+>;movl %ecx, %eax;movl $, %esi": 1,
                "jmp  <VDDInstallMemoryHook+>;movl (%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax;andl $, (%esi)": 1,
                "je  <VDDInstallMemoryHook+>;movl %esi, (%ebx);xorl %eax, %eax;incl %eax;jmp  <VDDInstallMemoryHook+>": 1,
                "je  <VDDDeInstallMemoryHook+>;movl (%ebp), %eax;testl %eax, %eax;je  <VDDDeInstallMemoryHook+>;cmpl $, %edi": 1,
                "movl %eax, (%edx);jmp  <VDDDeInstallMemoryHook+>;movl %eax, ;pushl %edi;pushl %ebx": 1,
                "popl %ecx;movl %esi, %edx;movl (%esi), %esi;testl %esi, %esi;jne - <VDDDeInstallMemoryHook+>": 1,
                "movl (%ebp), %edi;testl %edi, %edi;je  <VDDAllocMem+>;movl (%ebp), %eax;testl %eax, %eax": 1,
                "andl %edx, %eax;jmp  <VDDAllocMem+>;movl (%esi), %edx;cmpl (%ebp), %edx;jne  <VDDAllocMem+>": 1,
                "jmp  <VDDAllocMem+>;movl (%esi), %edx;cmpl (%ebp), %edx;jne  <VDDAllocMem+>;movl (%esi), %edx": 1,
                "subl %ecx, %eax;leal (%eax,%edi), %eax;andl %edx, %eax;jmp  <VDDFreeMem+>;movl (%esi), %edx": 1,
                "jmp  <VDDFreeMem+>;movl (%esi), %edx;cmpl (%ebp), %edx;jne  <VDDFreeMem+>;movl (%esi), %edx": 1,
                "retl $;pushl %eax;pushl %ecx;calll  <host_com_close+>;jmp - <VDDFreeMem+>": 1,
                "je  <VDDIncludeMem+>;movl (%ebp), %eax;testl %eax, %eax;je  <VDDIncludeMem+>;movl %eax, %ecx": 1,
                "movl %eax, %ecx;movl $, %edx;andl %edx, %ecx;subl %ecx, %eax;leal (%eax,%esi), %eax": 2,
                "pushl %eax;pushl $;movl %ecx, (%ebp);calll - <RegisterWOWIdle+>;jmp  <VDDIncludeMem+>": 1,
                "pushl $;movl %ecx, (%ebp);calll - <RegisterWOWIdle+>;jmp  <VDDIncludeMem+>;pushl $": 1,
                "movl %esp, %ebp;pushl %esi;movl , %esi;pushl $;pushl $": 1,
                "popl %esi;popl %ebp;retl $;pushl (%ebp);pushl %ecx": 1,
                "calll *(%esi);jmp - <VDDExcludeMem+>;int;int;int": 1,
                "movl %eax, ;jne  <VDDExcludeMem+>;cmpl $, ;jne  <VDDExcludeMem+>;cmpl %eax, ": 1,
                "jne  <VDDExcludeMem+>;leal (%ebp), %eax;pushl %eax;pushl $;calll - <getCX+>": 1,
                "movl %ecx, (%eax);movl %eax, ;xorl %eax, %eax;incl %eax;popl %esi": 1,
                "xorl %ecx, %ecx;testl %edx, %edx;jne  <VDDDeInstallUserHook+>;pushl $;calll *": 1,
                "retl $;cmpl %edx, (%eax);je  <VDDDeInstallUserHook+>;movl %eax, %ecx;movl (%eax), %eax": 1,
                "jmp  <VDDDeInstallUserHook+>;movl (%eax), %ecx;movl %ecx, ;pushl %eax;calll - <getDX+>": 1,
                "movl (%eax), %ecx;movl %ecx, ;pushl %eax;calll - <getDX+>;xorl %eax, %eax": 1,
                "jmp - <VDDDeInstallUserHook+>;int;int;int;int": 1,
                "movl , %esi;jmp  <VDDDeInstallUserHook+>;movl (%esi), %eax;testl %eax, %eax;je  <VDDDeInstallUserHook+>": 2,
                "cmpl (%ebp), %ecx;je  <host_simulate+>;testw %ax, %ax;jne - <host_simulate+>;popl %ebp": 1,
                "je  <host_simulate+>;testw %ax, %ax;jne - <host_simulate+>;popl %ebp;retl $": 1,
                "andl $, -(%ebp);pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi": 3,
                "movl (%ebp), %esi;pushl %edi;pushl (%esi);movl , %edi;calll *%edi": 1,
                "pushl %edi;pushl (%esi);movl , %edi;calll *%edi;testl %eax, %eax": 1,
                "testl %eax, %eax;jne  <VDDInstallIOHook+>;pushl (%ebp);calll - <host_simulate+>;movl %eax, %edi": 1,
                "calll - <host_simulate+>;movl %eax, %edi;testw %di, %di;movl %edi, -(%ebp);je  <VDDInstallIOHook+>": 1,
                "testw %di, %di;movl %edi, -(%ebp);je  <VDDInstallIOHook+>;pushl (%esi);pushl (%esi)": 1,
                "movl %eax, (%ebp);movl %esi, %ebx;je  <VDDInstallIOHook+>;movw (%ebx), %di;jmp  <VDDInstallIOHook+>": 1,
                "testb $, -(%ebp);je  <VDDInstallIOHook+>;pushl $;pushl (%ebp);pushl $": 3,
                "pushl $;jmp  <VDDInstallIOHook+>;pushl $;calll *;xorl %eax, %eax": 1,
                "je  <VDDDeInstallIOHook+>;pushl %ebx;movzwl (%ebp), %ebx;pushl %edi;movl (%ebp), %edi": 1,
                "cmpw $, %si;jae  <VDDDeInstallIOHook+>;orl $, -(%ebp);pushl -(%ebp);pushl %esi": 1,
                "orl $, -(%ebp);pushl -(%ebp);pushl %esi;calll - <RegisterWOWIdle+>;incl %esi": 1,
                "cmpw (%edi), %si;jbe - <VDDDeInstallIOHook+>;addl $, %edi;decl %ebx;jne - <VDDDeInstallIOHook+>": 1,
                "je  <VDDDeInstallIOHook+>;pushl %esi;pushl (%ebp);pushl %esi;calll  <setEFLAGS+>": 1,
                "pushl (%ebp);pushl %esi;calll  <setEFLAGS+>;testb $, -(%ebp);je  <VDDDeInstallIOHook+>": 1,
                "je  <VDDDeInstallIOHook+>;pushl %esi;pushl (%ebp);pushl $;calll  <setEFLAGS+>": 2,
                "cmpw $, %di;jbe  <VDDReserveIrqLine+>;cmpw %si, %di;jne  <VDDReserveIrqLine+>;calll - <.text+>": 1,
                "leal (,%eax,), %eax;cmpl $, (%eax);jne  <VDDReserveIrqLine+>;movl %ebx, (%eax);movl %edi, -(%ebp)": 1,
                "calll *;movw %si, %ax;popl %edi;popl %esi;popl %ebx": 1,
                "testl %esi, %esi;je  <VDDReleaseIrqLine+>;cmpw $, (%ebp);ja  <VDDReleaseIrqLine+>;calll - <.text+>": 1,
                "jne  <VDDReleaseIrqLine+>;pushl %eax;pushl %esi;pushl $;calll  <host_direct_access_error+>": 1,
                "pushl $;calll *;jmp  <VDDRequestDMA+>;calll  <SetShadowDescriptorEntries+>;movzwl (%ebp), %ecx": 1,
                "shll %cl, %eax;testb %al, (%esi);je  <VDDRequestDMA+>;leal (%esi,%ecx,), %ebx;leal (%esi,%ecx,), %esi": 1,
                "testb %al, (%esi);je  <VDDRequestDMA+>;leal (%esi,%ecx,), %ebx;leal (%esi,%ecx,), %esi;xorl %eax, %eax": 1,
                "incl %eax;imull %edi, %eax;jmp  <VDDRequestDMA+>;xorl %eax, %eax;incl %eax": 1,
                "movzbw (%ecx,%esi,), %dx;movb (%ecx,%esi,), %dh;movw %dx, (%eax);movzbw (%ecx,%esi,), %dx;movb (%ecx,%esi,), %dh": 1,
                "pushl %edi;calll  <SetShadowDescriptorEntries+>;movzwl (%ebp), %esi;movl %eax, %ebx;movl %esi, %eax": 1,
                "movb %dl, (%ecx,%edi,);movb (%eax), %dl;movb %dl, (%ecx,%edi,);testb $, (%ebp);je  <VDDSetDMA+>": 2,
                "movb %dl, (%esi,%ebx);testb $, (%ebp);je  <VDDSetDMA+>;movb (%eax), %al;movb %al, (%ecx)": 1,
                "cmpb $-, (%ecx,%esi,);jne  <VDDSetDMA+>;leal (%ecx,%esi,), %eax;cmpb $-, (%eax);jne  <VDDSetDMA+>": 1,
                "movl (%ebp), %ecx;xorl %eax, %eax;subl %eax, %ecx;je  <VdmParametersInfo+>;decl %ecx": 1,
                "movzwl (%eax), %eax;pushl %eax;calll  <SetShadowDescriptorEntries+>;jmp  <VdmParametersInfo+>;cmpl $, (%ebp)": 1,
                "pushl (%ebp);calll - <DispatchInterrupts+>;xorl %eax, %eax;incl %eax;popl %ebp": 1,
                "cmpb %bl, (%eax);je  <VdmGetParametersInfoError+>;pushl %eax;leal -(%ebp), %eax;pushl %eax": 2,
                "jne  <VdmGetParametersInfoError+>;movl %esi, (%ecx);xorl %eax, %eax;jmp  <VdmGetParametersInfoError+>;xorl %eax, %eax": 1,
                "pushl %eax;pushl (%ebp);calll *%ebx;movl -(%ebp), %ecx;subl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);movl %ecx, %eax;cltd;subl %edx, %eax;movl %eax, %ebx": 1,
                "cltd;subl %edx, %eax;sarl %eax;cmpw $, -(%ebp);movl %eax, (%ebp)": 1,
                "pushl %edi;pushl -(%ebp);pushl (%ebp);pushl %edi;pushl $": 4,
                "addl %ebx, (%ebp);jmp  <VdmGetParametersInfoError+>;pushl %edi;pushl $;pushl (%ebp)": 3,
                "calll *;pushl %edi;pushl $;pushl $;pushl (%ebp)": 1,
                "pushl $;pushl (%ebp);calll *;jmp  <VdmGetParametersInfoError+>;pushl %edi": 1,
                "movl , %esi;pushl %eax;calll *%esi;leal -(%ebp), %eax;pushl %eax": 1,
                "idivl %ecx;addl %eax, %esi;leal (%esi,%edi), %eax;cmpl -(%ebp), %eax;movl %esi, -(%ebp)": 1,
                "pushl $;calll *;cltd;subl %edx, %eax;movl %eax, %esi": 1,
                "popl %ecx;idivl %ecx;movl -(%ebp), %ecx;addl %eax, %ecx;leal (%ecx,%ebx), %eax": 1,
                "pushl %esi;pushl (%ebp);pushl (%ebp);calll *;popl %edi": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *%edi;pushl %ebx": 1,
                "pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll *%esi;pushl $": 1,
                "movzwl (,%eax,), %eax;incl %eax;orl %edi, %eax;jmp  <VdmGetParametersInfoError+>;testw %ax, %ax": 2,
                "movzwl (,%eax,), %eax;incl %eax;jmp  <VdmGetParametersInfoError+>;movzwl %ax, %eax;shll $, %esi": 1,
                "calll *;testl %eax, %eax;je  <VdmGetParametersInfoError+>;pushl $;popl %ecx": 1,
                "rep  cmpsl %es:(%edi), (%esi);jne  <VdmGetParametersInfoError+>;movl $, -(%ebp);jmp  <VdmGetParametersInfoError+>;andl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <VdmGetParametersInfoError+>;andl $, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "testl %edi, %edi;popl %edi;popl %esi;popl %ebx;jl  <VdmGetParametersInfoError+>": 1,
                "popl %esi;popl %ebx;jl  <VdmGetParametersInfoError+>;movl -(%ebp), %eax;jmp  <VdmGetParametersInfoError+>": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl %edi, -(%ebp);je  <WOWSysErrorBox+>": 1,
                "jmp  <WOWSysErrorBox+>;movl (%ebx), %eax;movl , %esi;andl $, %eax;cmpl $, %eax": 1,
                "andl $, %eax;cmpl $, %eax;je  <WOWSysErrorBox+>;cmpl $, %eax;je  <WOWSysErrorBox+>": 1,
                "leal (%ecx,%ecx), %ecx;movl %ecx, %eax;jmp  <WOWSysErrorBox+>;movl $, %eax;jmp  <WOWSysErrorBox+>": 1,
                "calll *;pushl %eax;pushl $;pushl $;pushl %edi": 1,
                "pushl (%ebx);pushl $;pushl %edi;calll *;pushl %eax": 2,
                "calll *;pushl %eax;calll *;pushl $;pushl $-": 1,
                "pushl (%ebx);pushl %edi;calll - <VdmGetParametersInfoError+>;pushl %ebx;pushl $": 1,
                "pushl %edi;calll - <VdmGetParametersInfoError+>;pushl %ebx;pushl $;pushl %edi": 1,
                "jne - <WOWSysErrorBox+>;movl %eax, %ecx;shrl $, %ecx;movl %edx, %esi;rep  movsl (%esi), %es:(%edi)": 3,
                "sbbl %eax, %eax;addl $, %eax;pushl %eax;pushl $;calll *": 1,
                "pushl $;calll *;pushl %eax;calll *;jmp  <WOWSysErrorBox+>": 1,
                "pushl %esi;movl (%ebp), %esi;movl %eax, -(%ebp);je  <WOWSysErrorBox+>;pushl $": 1,
                "pushl %eax;pushl $;calll *;calll *%esi;cmpl %eax, -(%ebp)": 1,
                "decl %edi;testl %eax, %eax;jne - <WOWSysErrorBox+>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <WOWSysErrorBox+>;calll - <ResumeTimerThread>;cmpl $, -(%ebp);popl %edi;jne  <WOWSysErrorBox+>": 1,
                "pushl %esi;calll *;jmp - <WOWSysErrorBox+>;calll  <WaitIfIdle+>;decl ": 1,
                "jmp  <WOWSysErrorBox+>;xorl %eax, %eax;movb (%eax), %cl;movb %cl, -(%ebp,%eax);incl %eax": 1,
                "xorl %eax, %eax;movb (%eax), %cl;movb %cl, -(%ebp,%eax);incl %eax;testb %cl, %cl": 5,
                "shll %cl, %edx;testl %edx, %eax;jne  <host_direct_access_error+>;pushl %ebx;pushl %esi": 1,
                "movl $, %ebx;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "movb %cl, -(%ebp,%eax);incl %eax;testb %cl, %cl;jne - <host_direct_access_error+>;pushl $": 2,
                "leal -(%ebp), %eax;pushl %eax;calll - <WOWSysErrorBox+>;popl %edi;popl %esi": 1,
                "leal -(%ebp,%ecx), %edx;movb (%eax), %cl;movb %cl, (%edx,%eax);incl %eax;testb %cl, %cl": 2,
                "incl %edi;incl %edi;pushl $;leal -(%ebp,%edi), %eax;pushl %eax": 1,
                "incl %eax;testb %cl, %cl;jne - <host_direct_access_error+>;pushl (%ebp);leal -(%ebp), %eax": 1,
                "xorl %eax, %eax;testl $, %ebx;movl $, %ecx;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 1,
                "pushl %ebx;calll *;jmp  <host_direct_access_error+>;movl %ebx, %eax;xorl %edi, %edi": 1,
                "jne  <WaitIfIdle+>;calll *;cmpl , %eax;je  <WaitIfIdle+>;movl %esi, ": 1,
                "cmpl %esi, ;jne  <WaitIfIdle+>;movl , %ecx;cmpl %esi, %ecx;je  <WaitIfIdle+>": 1,
                "je  <WaitIfIdle+>;cmpb $, ;movl $, ;sbbl %eax, %eax;andl $-, %eax": 1,
                "popl %eax;subl %edx, %eax;sarl %eax;cmpw %si, ;jne  <WaitIfIdle+>": 1,
                "pushl %eax;pushl %ecx;movl $, ;calll *;cmpl $-, %eax": 1,
                "movl %eax, -(%ebp);je  <WaitIfIdle+>;andl $, ;pushl $;pushl $": 1,
                "movb %cl, -(%ebp,%eax);incl %eax;testb %cl, %cl;jne - <WaitIfIdle+>;pushl %edi": 1,
                "calll *;cmpl $-, %eax;je  <WaitIfIdle+>;pushl %eax;calll *": 1,
                "movb (%eax), %cl;movb %cl, (%edx,%eax);incl %eax;testb %cl, %cl;jne - <WaitIfIdle+>": 1,
                "calll  <host_com_close+>;jmp - <setCH+>;int;int;int": 1,
                "je  <WaitIfIdle+>;pushl $-;pushl %eax;jmp  <WaitIfIdle+>;pushl $": 1,
                "incl %ebx;pushl %edi;movl %ebx, (%esi);calll *;movl %ebx, %eax": 1,
                "subl (%esi), %ebx;cmpl %edi, %ebx;jae  <WaitIfIdle+>;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "leal (%ebp), %eax;pushl %eax;movl (%esi), %eax;addl (%esi), %eax;pushl %ebx": 1,
                "addl (%esi), %eax;pushl %ebx;pushl %eax;pushl (%esi);calll *": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%esi);calll *;jmp  <WaitIfIdle+>": 2,
                "subl (%ebp), %edi;jmp  <WaitIfIdle+>;addl %eax, (%esi);xorl %edi, %edi;testl %edi, %edi": 1,
                "testl %eax, %eax;je  <WaitIfIdle+>;addl %eax, (%esi);movl (%ebp), %eax;addl %eax, (%esi)": 1,
                "pushl %edi;calll *;leal (%esi), %eax;pushl %eax;leal (%esi), %eax": 1,
                "movl %esi, %eax;movl %eax, (%edx);movl %edi, (%ecx);jmp  <WaitIfIdle+>;cmpl $, %edx": 1,
                "movl %edi, (%ecx);movl %edi, (%ecx);movl %edi, (%ecx);movl %eax, (%ecx);jmp  <WaitIfIdle+>": 1,
                "je  <WaitIfIdle+>;decl %eax;je  <WaitIfIdle+>;pushl $;popl %eax": 1,
                "movl (%ebp), %esi;pushl %edi;leal (%esi), %ebx;pushl %ebx;calll *": 1,
                "jne  <WaitIfIdle+>;movl %edi, (%esi);movl (%esi), %edx;movl (%esi), %ecx;movb (%ecx,%edx), %cl": 5,
                "jne  <WaitIfIdle+>;movl %edi, (%esi);decl (%esi);pushl %ebx;calll *": 1,
                "movl (,%edi,), %esi;cmpl $, (%esi);jne  <WaitIfIdle+>;cmpl $, (%esi);jne  <WaitIfIdle+>": 2,
                "calll - <getDI+>;jmp  <WaitIfIdle+>;cmpl $, %eax;jne  <WaitIfIdle+>;calll - <getDI+>": 2,
                "jmp  <WaitIfIdle+>;calll - <getDI+>;pushl %esi;calll - <WaitIfIdle+>;cmpl $, %eax": 1,
                "testl %eax, %eax;je  <WaitIfIdle+>;pushl $;pushl (%esi);calll *": 1,
                "pushl (%esi);calll *;jmp - <WaitIfIdle+>;popl %edi;popl %esi": 1,
                "jne  <WaitIfIdle+>;calll *%edi;movl %eax, -(%ebp);jmp  <WaitIfIdle+>;andl $, -(%ebp)": 1,
                "cmpl %edi, (%ecx);je  <WaitIfIdle+>;pushl $;leal (%ebp), %ecx;leal (%eax,%eax,), %eax": 1,
                "jmp  <WaitIfIdle+>;movl (%esi,%eax,), %eax;movl %eax, (%ecx);movl (%esi), %eax;addl $, %eax": 1,
                "leal (%eax,%eax,), %eax;leal (%esi,%eax,), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax": 1,
                "xorl %eax, %eax;movl %eax, -(%ebp);cmpl %edi, %eax;je  <WaitIfIdle+>;pushl %edi": 1,
                "pushl (%esi);movl %ebx, (%esi);movl %ebx, (%esi);calll - <getDI+>;pushl (%esi)": 1,
                "calll - <getDX+>;popl %ecx;movl %ebx, (%esi);movl %ebx, (%esi);jmp  <host_com_close+>": 1,
                "movl (%ebp), %eax;movl %edi, (%esi);movl %ebx, (%eax);popl %edi;popl %esi": 1,
                "jne  <host_com_close+>;pushl $;pushl $;calll *;pushl %eax": 5,
                "jne  <host_com_close+>;cmpl %ebx, -(%ebp);je  <host_com_close+>;cmpl %ebx, (%esi);jne  <host_com_close+>": 1,
                "pushl %edi;jne  <host_com_close+>;calll - <getDI+>;jmp  <host_com_close+>;cmpl $, -(%ebp)": 1,
                "xorl %edi, %edi;movl $, %esi;pushl %edi;movl $, (%esi);calll - <host_com_close>": 1,
                "movl (,%ecx,), %esi;incl %eax;cmpl %eax, (%esi);movl %eax, -(%ebp);je  <host_com_close+>": 1,
                "incl %eax;cmpl %eax, (%esi);movl %eax, -(%ebp);je  <host_com_close+>;pushl %ecx": 1,
                "pushl %esi;calll - <WaitIfIdle+>;cmpl %ebx, %eax;jl  <host_com_close+>;cmpl $, %eax": 1,
                "movl %eax, (%edi);jmp  <host_com_close+>;pushl (%ebp);calll - <getDI+>;jmp  <host_com_close+>": 1,
                "calll - <setIP+>;movl (%esi), %eax;popl %edi;movl %eax, (%esi);popl %ebx": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);movl (%ebp), %eax": 1,
                "calll - <setDI+>;popl %ebp;retl $;int;int": 1,
                "subl $, %esp;pushl %esi;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "movl %eax, ;leave;retl;xorl %eax, %eax;leave": 1,
                "jmp  <host_com_close+>;pushl %esi;movl (%ebp), %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %esi;movl (%ebp), %esi;shll $, %esi;pushl %edi;leal (%esi), %edi": 1,
                "movl (%ebp), %esi;shll $, %esi;pushl %edi;leal (%esi), %edi;cmpw $, (%edi)": 1,
                "pushl $;calll *%esi;pushl %eax;pushl $;calll - <host_direct_access_error+>": 4,
                "pushl $-;pushl ;calll *;testl %eax, %eax;je  <host_com_close+>": 1,
                "testb %al, %al;je  <host_com_close+>;cmpb $, %al;je  <host_com_close+>;cmpb $, %al": 1,
                "movl $, %eax;movl $, %ecx;jmp - <host_com_close+>;movl $, %eax;movl $, %ecx": 5,
                "addb (%edx), %al;addb (%edx), %al;addb (%eax), %al;addb %cl, %ah;int": 1,
                "pushl %edi;calll - <host_com_close+>;testl %eax, %eax;jne  <host_com_close+>;leal -(%ebp), %eax": 1,
                "movswl -(%ebp), %eax;movswl -(%ebp), %ecx;subl %eax, %ecx;incl %ecx;movl %esi, -(%ebp)": 2,
                "movswl -(%ebp), %ecx;subl %eax, %ecx;incl %ecx;movl %esi, -(%ebp);xorl %eax, %eax": 2,
                "cmpl $, %eax;jb - <host_com_close+>;cmpl $, -(%ebp);jne  <host_com_close+>;movl $, -(%ebp)": 2,
                "pushl $;pushl ;calll  <SetShadowDescriptorEntries+>;pushl $;calll - <IsCdRomFile+>": 1,
                "addl $, %esi;decl %eax;jne - <host_com_close+>;leal (%edi,%edi), %eax;addl %eax, %ebx": 1,
                "movw %ax, -(%ebp);movw %ax, -(%ebp);movw %ax, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 2,
                "movw $, -(%ebp);movw $, -(%ebp);calll  <host_com_close+>;movl -(%ebp), %esi;movw , %ax": 1,
                "calll  <host_com_close+>;movl -(%ebp), %esi;movw , %ax;leal (%esi,%esi,), %esi;shll %esi": 1,
                "leal (%esi,%esi,), %esi;shll %esi;cmpw (%esi), %ax;jne  <host_com_close+>;movw , %ax": 1,
                "calll - <IsCdRomFile+>;movzbl %al, %eax;cmpw %ax, ;je  <host_com_close+>;pushl (%esi)": 1,
                "pushl -(%ebp);pushl $;pushl ;calll *;testl %eax, %eax": 1,
                "jne  <host_com_close+>;pushl $;pushl %ebx;calll *;pushl %eax": 3,
                "calll - <host_direct_access_error+>;jmp  <host_com_close+>;movl $, %edi;movswl -(%ebp), %eax;movswl -(%ebp), %ecx": 1,
                "pushl %edi;calll - <host_direct_access_error+>;andw $, -(%ebp);andw $, -(%ebp);pushl -(%ebp)": 1,
                "calll - <host_direct_access_error+>;testb $, -(%ebp);jne  <host_com_close+>;testb $, -(%ebp);je  <host_com_close+>": 1,
                "pushl ;calll *;jmp  <host_com_close+>;xorl %eax, %eax;cmpl %eax, (%ebp)": 1,
                "jmp  <host_com_close+>;xorl %eax, %eax;cmpl %eax, (%ebp);pushl $;sete %al": 1,
                "pushl $;jmp - <host_com_close+>;pushl $;pushl %ebx;calll *%esi": 1,
                "calll - <IsCdRomFile+>;incb %al;movb %al, -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <host_com_close+>;pushl %esi;pushl %esi": 1,
                "xorl %ebx, %ebx;cmpl , %eax;movl %eax, ;je  <host_com_close+>;cmpl %ebx, %eax": 1,
                "movl , %eax;movl %eax, ;cmpl %edi, %eax;jne  <host_com_close+>;calll  <host_com_close+>": 1,
                "addl %ecx, %eax;pushl %eax;calll - <IsCdRomFile+>;pushl $;pushl ": 1,
                "pushl $;calll - <host_direct_access_error+>;pushl $;popl %eax;pushl %edi": 1,
                "jl  <host_com_close+>;movl -(%ebp), %eax;decl %eax;movw %ax, ;pushl %edi": 1,
                "movb $, %bl;jmp  <host_com_close+>;movb $, %bl;jmp  <host_com_close+>;movb $, %bl": 1,
                "movb $, %bl;jmp  <host_com_close+>;calll  <getBH>;movb %al, %bl;pushl $": 1,
                "pushl %esi;pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl ": 2,
                "calll *%esi;pushl %eax;pushl %edi;calll - <host_direct_access_error+>;orl $, -(%ebp)": 1,
                "calll *%esi;pushl %eax;pushl %edi;calll - <host_direct_access_error+>;cmpl $, ": 1,
                "xorl %eax, %eax;movb , %al;pushl $;pushl %eax;calll - <setAH+>": 1,
                "movb , %al;pushl $;pushl %eax;calll - <setAH+>;cmpl %esi, ": 1,
                "testw %ax, %ax;je  <host_com_close+>;pushl $;calll *;retl $": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;pushl %esi;pushl %esi": 1,
                "pushl %esi;leal -(%ebp), %eax;movl %eax, -(%ebp);pushl %esi;leal -(%ebp), %eax": 1,
                "pushl %eax;movl $, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp)": 1,
                "jmp  <host_com_close+>;subl %eax, %esi;decl %esi;movl %esi, %ecx;xorl %edi, %edi": 1,
                "movl %eax, ;jmp  <host_com_close+>;movl , %ecx;addl $, %ecx;cmpl %eax, %ecx": 1,
                "cmpl %eax, %ecx;jb  <host_com_close+>;incl ;jmp  <host_com_close+>;calll - <setCS+>": 1,
                "xorl %edx, %edx;popl %ecx;divl %ecx;movl %eax, %ecx;andl $, %ecx": 1,
                "cmpl %edi, ;je  <host_com_close+>;pushl %esi;pushl $;calll  <host_com_close+>": 1,
                "movl %edi, ;movl %eax, ;calll - <getAX+>;pushl ;calll *%esi": 1,
                "jne  <host_com_close+>;movl , %ecx;shll %cl, %eax;jmp  <host_com_close+>;imull , %eax": 2,
                "pushl ;movl %edi, ;movl %esi, -(%ebp);calll *;jmp  <host_com_close+>": 1,
                "calll *;movl %esi, ;popl %edi;popl %esi;leave": 1,
                "subl $, %esp;pushl %edi;xorl %edi, %edi;cmpb $, ;jne  <host_com_close+>": 1,
                "jmp  <host_com_close+>;movb $, %cl;shlb $, %al;movzbl %al, %eax;movzbl %cl, %edx": 1,
                "movzbl (%eax), %eax;movzbl , %ecx;movl , %ebx;andl %edx, %eax;orl -(%ebp), %eax": 1,
                "je  <host_com_close+>;pushl %eax;calll *;testl %eax, %eax;je  <host_com_close+>": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %eax;movl (%ebp), %edx;movl (%ebp), %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl ;movw %cx, -(%ebp)": 1,
                "jge  <host_com_close+>;movswl -(%ebp), %eax;cmpl (%ebp), %eax;jl  <host_com_close+>;movswl %di, %eax": 1,
                "pushl %ecx;pushl %eax;calll - <host_com_close+>;cmpw $, -(%ebp);jne  <host_com_close+>": 1,
                "jle  <host_com_close+>;movl %edx, (%ebp);jmp  <host_com_close+>;xorl %eax, %eax;movswl %si, %edx": 1,
                "jg  <host_com_close+>;movswl %di, %edx;cmpl %edx, (%ebp);jle  <host_com_close+>;cmpl -(%ebp), %ecx": 1,
                "decl %ecx;je  <host_com_close+>;decl %ecx;je  <host_com_close+>;orl $-, %eax": 1,
                "decl %ecx;je  <host_com_close+>;orl $-, %eax;jmp  <host_com_close+>;xorl %eax, %eax": 1,
                "movl %ecx, (%ebp);jmp  <host_com_close+>;movl %eax, (%ebp);movl %eax, %ecx;movl %ecx, %eax": 1,
                "imull (%ebp), %eax;negl %edx;movl %edx, (%ecx);movw (%ebp), %dx;movw %dx, (%ecx)": 1,
                "movl %ebx, (%ebp);jle  <host_com_close+>;leal (%ecx), %esi;movl (%ebp), %eax;cltd": 1,
                "movl (%edi), %eax;movb (%edx,%eax), %al;movb %al, -(%esi);movl (%ebp), %eax;cltd": 1,
                "movl (%edi), %eax;movb (%edx,%eax), %al;movb %al, (%esi);movl (%ebp), %eax;cltd": 1,
                "cltd;idivl (%edi);movl (%edi), %eax;incl (%ebp);addl $, %esi": 1,
                "movl (%ebp), %eax;cmpl (%ebp), %eax;movb %bl, -(%esi);jl - <host_com_close+>;movl (%ebp), %eax": 1,
                "cmpl $, ;movl , %eax;jle  <host_com_close+>;cmpl $, %eax;jne  <host_com_close+>": 1,
                "pushl $;pushl $;movl %eax, ;movl %esi, ;calll *": 1,
                "pushl $;movl %eax, ;movl %esi, ;calll *;cmpl $-, %eax": 1,
                "cmpl %esi, ;je  <host_com_close+>;movl , %eax;imull %edi, %eax;movl %esi, ": 1,
                "je  <host_com_close+>;movl , %eax;imull %edi, %eax;movl %esi, ;movl %eax, ": 2,
                "cmpl %ebx, ;jne  <host_com_close+>;cmpl %edi, ;jne  <host_com_close+>;cmpl %esi, ": 1,
                "movl %edi, ;movl %esi, ;movl %ebx, ;movl , %eax;movl %eax, ": 1,
                "movl %eax, ;popl %esi;popl %ebx;retl;int": 1,
                "pushl %edi;xorl %edi, %edi;incl %esi;cmpl $, %eax;movl %edi, ": 1,
                "movl %eax, ;movl , %eax;calll *(%eax);jmp  <host_com_close+>;movl %esi, ": 5,
                "movl $, ;jmp  <host_com_close+>;movl (%eax), %eax;jmp  <host_com_close+>;cmpl $, ": 1,
                "movl , %eax;calll *(%eax);jmp  <host_com_close+>;movl (%eax), %eax;movl %eax, ": 1,
                "retl $;fnsave (%edi);cmovpl (%eax), %edi;js  <host_com_close+>;movzwl (%edi), %esi": 1,
                "andl $-, %edi;cmpl %esi, %edi;movl %ecx, (%ebp);jbe  <host_com_close+>;movl %esi, %ecx": 1,
                "movw %bx, (%eax);jmp  <host_com_close+>;movzbw %bh, %ax;movb %bl, %ah;movl %eax, %ebx": 1,
                "jmp  <host_com_close+>;movb %bh, (%eax);popl %edi;popl %esi;popl %ebx": 1,
                "movl %esp, %ebp;pushl (%ebp);movl (%ebp), %eax;shll $, %eax;pushl %eax": 1,
                "pushl %eax;pushl (%ebp);calll *;popl %ebp;retl $": 1,
                "pushl (%ebp);calll *;popl %ebp;retl $;int": 2,
                "movl (%ebp), %eax;xorl %ecx, %ecx;cmpw %cx, ;je  <host_com_close+>;cmpl %ecx, ": 1,
                "movw %dx, (%edi);jmp  <host_com_close+>;cmpw $, %ax;jle  <host_com_close+>;movw $, (%edi)": 1,
                "movw $, (%edi);cmpl %edx, ;movl (%ebp), %esi;je  <host_com_close+>;movw , %ax": 1,
                "jmp  <host_com_close+>;movw , %ax;movzwl %ax, %edx;cmpl %edx, %ecx;jle  <host_com_close+>": 1,
                "jle  <host_com_close+>;jmp - <host_com_close+>;cmpw %dx, (%esi);jge  <host_com_close+>;movw %dx, (%esi)": 1,
                "cmpb $, (%ebp);jne  <host_com_close+>;cmpw $, (%esi);jle  <host_com_close+>;movw $, (%esi)": 1,
                "movw , %ax;movswl (%ecx), %edx;movzwl %ax, %edi;cmpl %edi, %edx;jge  <host_com_close+>": 3,
                "jle  <host_com_close+>;movw $, (%eax);cmpl %esi, ;je  <host_com_close+>;movl (%ebp), %ecx": 1,
                "movw $, (%eax);cmpl %esi, ;jne - <host_com_close+>;movl (%ebp), %eax;movw (%eax), %cx": 2,
                "jle  <host_com_close+>;movw $, (%eax);jmp  <host_com_close+>;xorl %esi, %esi;cmpl %esi, ": 1,
                "jle  <host_com_close+>;movups %xmm, (%edi);movups %xmm, (%edi);movups %xmm, (%edi);rcpps (%edi), %xmm": 1,
                "pushl %esi;xorl %esi, %esi;cmpl %esi, ;jne  <host_com_close+>;cmpl %esi, (%ebp)": 1,
                "jl - <host_com_close+>;andl $, ;retl;int;int": 1,
                "movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax": 1,
                "leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "subl $, %esp;leal -(%ebp), %eax;pushl %eax;pushl $;calll - <setCL+>": 1,
                "jne  <host_com_close+>;movl -(%ebp), %eax;cmpl , %eax;jne  <host_com_close+>;xorl %eax, %eax": 1,
                "retl;calll *;pushl $;pushl ;calll  <SetShadowDescriptorEntries+>": 1,
                "int;int;cmpl $, ;je  <host_com_close+>;pushl $": 2,
                "int;calll - <.text+>;andw $, ;andw $, ;jmp - <.text+>": 1,
                "andw $, ;jmp - <.text+>;int;int;int": 1,
                "movb -(%ebp), %al;cmpb , %al;jbe  <host_com_close+>;movb $, -(%ebp);movzbl -(%ebp), %eax": 3,
                "pushl %eax;pushl ;calll - <IsCdRomFile+>;andl $, ;leave": 1,
                "movw , %ax;pushl %eax;pushl ;calll - <IsCdRomFile+>;pushl $": 1,
                "pushl ;calll - <IsCdRomFile+>;pushl $;pushl %esi;calll - <getCF+>": 1,
                "xorl %eax, %eax;cmpb %al, ;jne  <host_com_close+>;cmpb %al, ;jne  <host_com_close+>": 2,
                "calll - <call_ica_hw_interrupt>;calll - <setIP+>;jmp  <host_com_close+>;cmpl %eax, ;jne  <host_com_close+>": 1,
                "pushl %eax;calll - <host_com_close+>;movl (%ebp), %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl , %eax;addl %ebx, %eax;movl %eax, (%ebp);movl , %eax;addl %esi, %eax": 1,
                "jne  <host_com_close+>;movl (%ebp), %edi;movl (%ebp), %esi;pushl %edi;pushl %esi": 1,
                "calll - <host_com_close+>;jmp  <host_com_close+>;pushl %eax;leal (%ebp), %eax;pushl %eax": 1,
                "movw %ax, (%esi);movw -(%ebp), %ax;movw %ax, (%edi);testl %ebx, %ebx;movw (%ebp), %ax": 1,
                "calll - <host_simulate>;pushl %esi;calll - <setCS>;pushl %edi;calll - <setIP>": 3,
                "popl %edi;popl %esi;popl %ebx;jmp  <host_com_close+>;pushl ": 1,
                "movl %ecx, ;subl %edx, %ecx;sarl %ecx;addl %edx, %ecx;pushl %ecx": 1,
                "movl (%ebp), %ecx;movw (%ecx), %dx;movw %dx, ;movzwl (%eax), %eax;movzwl (%ecx), %ecx": 2,
                "addl %ecx, %eax;cltd;subl %edx, %eax;sarl %eax;movl %eax, ": 2,
                "calll - <setCX>;pushl %edi;calll - <setDX>;pushl $;calll - <setIF>": 1,
                "movzwl %si, %eax;movl %eax, ;movzwl %di, %eax;movl %eax, ;movw %si, ": 1,
                "int;int;cmpl $, ;jne  <host_com_close+>;pushl ": 1,
                "pushl %eax;calll - <IsCdRomFile+>;pushl %eax;calll - <IsCdRomFile+>;movl %eax, %esi": 1,
                "movl %eax, %esi;movzwl , %eax;pushl %eax;xorl %eax, %eax;movw , %ax": 1,
                "movl (%ecx), %ecx;movzwl %si, %edx;movswl (%ecx), %esi;cmpl %esi, %edx;jl  <host_com_close+>": 1,
                "jl  <host_com_close+>;movswl (%ecx), %esi;cmpl %esi, %edx;jg  <host_com_close+>;movswl (%ecx), %edx": 1,
                "cmpl %edx, %eax;jl  <host_com_close+>;movswl (%ecx), %ecx;cmpl %ecx, %eax;jg  <host_com_close+>": 1,
                "popl %esi;jmp - <host_com_close+>;popl %esi;retl;int": 1,
                "movw , %ax;movw %ax, (%edx);jmp  <host_com_close+>;movswl %ax, %eax;movw (,%eax,), %ax": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <host_com_close+>": 3,
                "movl (%ebp), %eax;movw , %cx;movw %cx, (%eax);movl (%ebp), %eax;movw , %cx": 1,
                "calll  <SetShadowDescriptorEntries+>;testl %eax, %eax;jge - <host_com_close+>;calll - <host_com_close+>;movl $, ": 1,
                "cmpb $, %al;movb %al, ;jne  <host_com_close+>;calll - <getCS>;movl %eax, %ebx": 1,
                "movswl (%edi), %eax;pushl %eax;movswl (%esi), %eax;pushl %eax;calll - <host_com_close+>": 1,
                "xorl %eax, %eax;movw (%esi), %ax;pushl %eax;pushl %ebx;calll - <IsCdRomFile+>": 1,
                "jmp  <host_com_close+>;cmpb %bl, (%esi);jne  <host_com_close+>;cmpb %bl, (%ebp);pushl %ebx": 1,
                "negb %al;pushl %ebx;pushl $;pushl $;pushl %ebx": 1,
                "cmpl $, %eax;je  <host_com_close+>;pushl (%esi);calll *;xorw %ax, %ax": 1,
                "pushl (%esi);movl $, (%esi);pushl (%ebp);calll  <setEFLAGS+>;pushl (%ebp)": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;pushl %ebx;movb (%ebp), %bl;pushl %esi": 1,
                "testw %ax, %ax;je  <host_com_close+>;cmpb $, (%edi);pushl (%ebp);pushl %esi": 1,
                "popl %ebp;retl $;calll - <host_com_close+>;testl %eax, %eax;jne - <host_com_close+>": 1,
                "movzbw %bl, %ax;cmpw (%ebp), %ax;jb - <host_com_close+>;andl $, (%edi);calll - <setIP+>": 1,
                "calll - <IsCdRomFile+>;movzbl %al, %eax;cmpl %edi, %eax;jne  <host_com_close+>;pushl %edi": 1,
                "calll - <IsCdRomFile+>;cmpb %bl, (%esi);je  <host_com_close+>;pushl %edi;calll - <host_com_close+>": 1,
                "cmpb %bl, (%esi);jne  <host_com_close+>;pushl $;pushl %edi;calll - <host_com_close+>": 1,
                "pushl %eax;pushl $;leal (%ebp), %eax;pushl %eax;pushl %ebx": 1,
                "jne  <host_com_close+>;movb %bl, (%ebp);movb (%ebp), %al;popl %edi;popl %esi": 1,
                "calll - <IsCdRomFile+>;movb (%edi), %al;popl %edi;popl %esi;popl %ebp": 1,
                "cmpb $, (,%ecx,);je  <host_com_close+>;pushl %eax;calll - <host_com_close+>;popl %ebp": 1,
                "calll - <host_com_close+>;incl %edi;addl $, %esi;cmpl $, %edi;jl - <host_com_close+>": 1,
                "movb (%eax), %cl;je  <host_com_close+>;decl %edx;je  <host_com_close+>;decl %edx": 1,
                "decl %edx;je  <host_com_close+>;decl %edx;je  <host_com_close+>;decl %edx": 2,
                "decb %dl;xorb %cl, %dl;andb $, %dl;xorb %cl, %dl;movb %dl, (%eax)": 1,
                "testl %eax, %eax;je  <host_com_close+>;movb (%ebp), %cl;movb %cl, %al;andb $, %al": 1,
                "pushl %eax;pushl (%ebp);calll *;negl %eax;sbbl %eax, %eax": 2,
                "pushl (%ebp);calll *;negl %eax;sbbl %eax, %eax;negl %eax": 2,
                "calll *;negl %eax;sbbl %eax, %eax;negl %eax;leave": 2,
                "jmp  <host_com_close+>;movl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "pushl $;pushl %eax;calll - <host_com_close+>;testl %eax, %eax;je  <host_com_close+>": 3,
                "pushl %edi;calll *;jmp  <host_com_close+>;movb (%esi), %al;movl (%ebp), %ecx": 1,
                "jmp  <host_com_close+>;movb (%esi), %al;movl (%ebp), %ecx;movb %al, (%ecx);popl %edi": 1,
                "popl %esi;popl %ebx;popl %ebp;retl $;outl %eax, $": 1,
                "popl %ebx;popl %ebp;retl $;outl %eax, $;addl (%edi), %ecx": 1,
                "pushl %ebx;calll - <getDI+>;jmp  <host_com_close+>;pushl %edi;pushl %ecx": 1,
                "testb $-, (%esi);je  <host_com_close+>;movb (%ebp), %al;movb %al, (%esi);jmp  <host_com_close+>": 1,
                "pushl %eax;pushl $;calll - <host_direct_access_error+>;movl -(%ebp), %ecx;calll - <getDI+>": 1,
                "movb (%ebp), %al;cmpb , %al;jb  <host_com_close+>;orw $, %ax;jmp  <host_com_close+>": 2,
                "andw $, (%eax);xorw %ax, %ax;popl %ebp;retl $;int": 1,
                "je  <host_com_close+>;calll *;cmpl $, %eax;jne  <host_com_close+>;xorl %eax, %eax": 1,
                "xorl %eax, %eax;jmp  <host_com_close+>;pushl (%ebp);movl (%ebp), %ecx;pushl (%ebp)": 2,
                "movl (%ebp), %ecx;pushl (%ebp);andl $, -(%ebp);movl %ecx, -(%ebp);leal -(%ebp), %ecx": 3,
                "pushl %ecx;pushl %eax;calll  <host_com_close+>;leave;retl $": 2,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl $;leal (%ebp), %ecx;pushl %ecx;pushl $;leal -(%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll  <host_com_close+>;jmp  <host_com_close+>": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;movzbl (%ebp), %esi;pushl %edi": 1,
                "cmpb $-, %cl;jne  <host_com_close+>;movzbl (%eax), %edi;movzbl (%eax), %eax;shll $, %edi": 1,
                "andw $, (%esi);jmp - <host_com_close+>;int;int;int": 1,
                "movb (%edi), %bl;movb (%edi), %al;andb $, %al;andb $, %bl;movb %al, (%ebp)": 1,
                "movb (%edi), %al;movb %al, -(%ebp);movb (%edi), %al;movb %al, -(%ebp);movb (%edi), %al": 1,
                "movb (%edi), %al;movb %al, -(%ebp);movb (%edi), %al;movb %bl, -(%ebp);movb %al, -(%ebp)": 1,
                "calll - <setDI+>;andl $, ;movb %bl, ;movw , %ax;cmpw (%esi), %ax": 1,
                "movl (%ebp), %eax;movb $, (%eax);movb $, (%eax);jmp  <host_com_close+>;cmpb $, (%ebp)": 1,
                "movl %edx, -(%ebp);pushl -(%ebp);pushl %esi;calll - <host_com_close+>;testl %eax, %eax": 1,
                "cmpw (%esi), %ax;jne  <host_com_close+>;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "jmp  <host_com_close+>;movl -(%ebp), %edx;movzbl (%ebp), %eax;subl $, %eax;je  <host_com_close+>": 1,
                "calll - <getBP+>;addl $, %esp;pushl %esi;calll *;movb -(%ebp), %cl": 1,
                "movl (%ebp), %eax;andb $, %cl;orb $, %cl;shlb $, %cl;andb $, %bl": 1,
                "orb $, %cl;shlb $, %cl;andb $, %bl;orb %bl, %cl;movb %cl, (%eax)": 1,
                "orb %dl, %cl;andb $, %bl;orb %bl, %cl;movb %cl, (%edi);movb %al, (%edi)": 1,
                "xorl %eax, %eax;movb (%edi), %al;pushl %eax;xorl %eax, %eax;movb (%edi), %al": 2,
                "movb %al, (%ebx);movb (%esi), %al;movb %al, (%ebx);jmp  <host_com_close+>;pushl %edx": 1,
                "movb %al, (%ebx);jmp  <host_com_close+>;pushl %edx;pushl ;pushl $": 1,
                "calll  <SetShadowDescriptorEntries+>;pushl ;pushl -(%ebp);pushl -(%ebp);pushl -(%ebp)": 1,
                "orb %bl, %cl;movb %cl, (%eax);movb -(%ebp), %al;pushl -(%ebp);movb %al, (%esi)": 1,
                "jmp  <host_com_close+>;movzbl -(%ebp), %eax;pushl %eax;movzbl -(%ebp), %eax;pushl %eax": 1,
                "movzbl (%esi), %ebx;movw %ax, -(%ebp);pushl %edi;movl (%esi), %edi;movb (%edi), %al": 1,
                "pushl -(%ebp);pushl (%ebp);calll - <getCL+>;popl %edi;popl %esi": 1,
                "calll - <getCL+>;popl %edi;popl %esi;popl %ebx;leave": 1,
                "movb $, (%esi);movl , %eax;decw (%eax);decw ;xorl %eax, %eax": 1,
                "cmpw %si, %ax;jb - <host_com_close+>;xorl %eax, %eax;popl %esi;popl %ebp": 1,
                "leal (%esi), %eax;pushl $;pushl %eax;calll *;cmpl $-, %eax": 1,
                "cmpw $, ;je  <host_com_close+>;pushl %esi;xorl %esi, %esi;cmpb $, ": 1,
                "movzwl %si, %eax;imull $, %eax, %eax;addl , %eax;cmpl $-, (%eax);je  <host_com_close+>": 1,
                "je  <host_com_close+>;decb (%eax);jne  <host_com_close+>;pushl %eax;calll - <host_com_close+>": 1,
                "movl , %ecx;addl %ecx, %eax;notl %ecx;andl %ecx, %eax;retl": 1,
                "addl %ecx, %eax;notl %ecx;andl %ecx, %eax;retl;int": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %edi;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %ecx, -(%ebp);pushl (%esi);calll *;jmp  <host_com_close+>;xorl %eax, %eax": 1,
                "pushl (%esi);calll *;jmp  <host_com_close+>;xorl %eax, %eax;popl %edi": 1,
                "pushl %ebp;movl %esp, %ebp;pushl (%ebp);calll - <host_com_close+>;testl %eax, %eax": 1,
                "pushl %ecx;pushl (%eax);pushl (%ebp);calll *;cmpl $-, %eax": 3,
                "popl %ebx;leave;retl $;movl (%ebp), %eax;movl %eax, (%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, (%ebp);cmpl %esi, (%ebp);movl %esi, -(%ebp);je  <host_com_close+>": 1,
                "andl $, %ecx;rep  movsb (%esi), %es:(%edi);xorl %esi, %esi;jmp  <host_com_close+>;addl %ebx, (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%esi);calll - <host_com_close+>;jmp  <host_com_close+>": 1,
                "addl $, %ebx;decl (%ebp);jne - <host_com_close+>;popl %edi;popl %esi": 1,
                "jne - <host_com_close+>;popl %edi;popl %esi;movl %eax, ;popl %ebx": 1,
                "movl %esi, %ecx;subl %edi, %ecx;xorl %eax, %eax;sarl $, %ecx;cmpl %edx, ": 1,
                "calll *;pushl $;pushl $;pushl ;calll *": 1,
                "subl $, %esp;pushl %esi;calll - <.text+>;xorl %esi, %esi;cmpl %esi, ": 1,
                "xorl %esi, %esi;cmpl %esi, ;je  <host_com_close+>;movl $, %edx;movl (%edx), %eax": 1,
                "movl %esi, ;movl %ecx, ;movl %esi, ;jmp  <host_com_close+>;movl , %ecx": 1,
                "movl %esi, ;jmp  <host_com_close+>;movl , %ecx;movl (%ebp), %eax;movb (%eax), %dl": 1,
                "movl (%ebp), %eax;movb (%eax), %dl;pushl %ebx;movl (%eax), %ebx;pushl %edi": 1,
                "andb $, %bl;cmpl %esi, ;movb %dl, (%ebp);movl %edi, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %edi, %eax;divl ;xorl %edx, %edx;movl %eax, %edi;movl -(%ebp), %eax": 1,
                "divl %esi;movb (%ebp), %dl;movl %eax, -(%ebp);cmpl $, -(%ebp);jge  <host_com_close+>": 1,
                "cmpl %edi, -(%ebp);jb  <host_com_close+>;decl %edi;movl %edi, -(%ebp);xorl %esi, %esi": 1,
                "xorl %esi, %esi;cmpl %esi, -(%ebp);jge  <host_com_close+>;movl %esi, -(%ebp);jmp  <host_com_close+>": 1,
                "decl %eax;movl %eax, -(%ebp);cmpl %esi, %ecx;je  <host_com_close+>;leal -(%ecx), %eax": 1,
                "leal (%eax,%eax,), %esi;shll $, %esi;cmpb %dl, (%esi);jne  <host_com_close+>;cmpb %bl, (%esi)": 1,
                "cmpb %dl, (%esi);jne  <host_com_close+>;cmpb %bl, (%esi);je  <host_com_close+>;movl %ecx, %eax": 1,
                "cmpl , %ecx;setne %al;retl;int;int": 1,
                "pushl $;calll *%esi;testb $, %al;popl %esi;je  <host_com_close+>": 1,
                "pushl %ecx;addl $, %eax;pushl %eax;calll - <getCF+>;leal (%ebx,%ebx,), %edi": 1,
                "xorl %esi, %esi;decl %ebx;movl $, -(%ebp,%eax);incl %esi;movw -(%ebp), %cx": 1,
                "leal -(%edi), %eax;movl %edi, -(%ebp);movl %ecx, -(%ebp);movl %eax, -(%ebp);jmp  <host_com_close+>": 1,
                "popl %ecx;idivl %ecx;movl -(%ebp), %ecx;pushl $;movw %si, (%edi)": 1,
                "movzbw %dl, %ax;addl $, %eax;movw %ax, (%ecx);movl -(%ebp), %eax;movl $, (%eax)": 1,
                "movw %si, -(%ebp,%eax);movw $, -(%ebp,%eax);movw $, -(%ebp,%eax);movl $, -(%ebp,%eax);leal -(%edx), %edi": 1,
                "movw $, -(%ebp,%eax);movw $, -(%ebp,%eax);movl $, -(%ebp,%eax);leal -(%edx), %edi;movl %edx, %esi": 1,
                "pushl %eax;leal (%ebx,%ebx,), %eax;leal -(%ebp,%eax,), %eax;pushl %eax;pushl ": 1,
                "cmpl %eax, %edi;movl %eax, (%ebp);jl  <host_com_close+>;pushl %ebx;leal -(%edi,%edi,), %ebx": 1,
                "pushl (%ebp);pushl %ebx;calll - <host_com_close+>;testl %eax, %eax;je  <host_com_close+>": 1,
                "movswl , %ecx;addl %ecx, %eax;leave;retl;int": 1,
                "pushl $;calll - <getDI+>;testl %eax, %eax;movl $, %edi;je  <host_com_close+>": 1,
                "testl %eax, %eax;jne  <host_com_close+>;pushl $;calll - <getDI+>;testl %eax, %eax": 1,
                "pushl %edi;calll - <host_com_close+>;calll - <getAX+>;pushl $;calll *%esi": 3,
                "testb $, %al;je  <host_com_close+>;orl $, %edi;movl , %eax;xorl %edi, %eax": 1,
                "jmp  <host_com_close+>;cmpw $, (%ebx);jne  <host_com_close+>;pushl %ebx;calll - <host_com_close+>": 1,
                "calll - <host_com_close+>;pushl %ebx;calll - <host_com_close+>;popl %ebx;popl %ebp": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %esi;calll - <getCL+>": 1,
                "pushl %esi;calll - <getCL+>;movl (%ebp), %eax;movl %eax, ;calll - <VDDDeInstallUserHook+>": 1,
                "pushl %esi;calll - <getDL+>;calll  <host_com_close+>;cmpl %esi, ;jne  <host_com_close+>": 1,
                "calll - <host_com_close+>;pushl ;calll *;pushl $;pushl ": 1,
                "calll - <WaitIfIdle+>;movl , %eax;cmpl $, %eax;jne  <host_com_close+>;calll - <getDI+>": 1,
                "cmpl $, %eax;jne  <host_com_close+>;calll - <getDI+>;jmp  <host_com_close+>;cmpl $, %eax": 1,
                "pushl $;pushl ;calll  <SetShadowDescriptorEntries+>;calll - <host_com_close+>;calll - <host_com_close+>": 1,
                "pushl %eax;calll - <IsCdRomFile+>;calll - <getCL+>;andb $-, ;calll - <setCS+>": 1,
                "calll *;calll - <SoftPcEoi+>;calll - <VDDDeInstallUserHook+>;cmpl $, ;je  <host_com_close+>": 1,
                "cmpl $, ;je  <host_com_close+>;cmpl $, ;jne  <host_com_close+>;calll - <host_com_close+>": 1,
                "cmpl $, ;jne  <host_com_close+>;calll - <host_com_close+>;andl $, ;movl $, ": 1,
                "pushl %eax;calll *;jmp  <host_com_close+>;calll - <host_com_close+>;popl %ebp": 1,
                "cmpl $, %eax;jne  <host_com_close+>;calll - <host_com_close+>;jmp - <host_com_close+>;testl %eax, %eax": 1,
                "pushl $;pushl ;calll  <host_com_close+>;popl %ecx;popl %ecx": 1,
                "pushl ;calll  <host_com_close+>;popl %ecx;popl %ecx;jmp  <host_com_close+>": 1,
                "pushl $;pushl ;calll *;pushl $;calll - <host_com_close+>": 1,
                "calll - <host_com_close+>;movl %eax, -(%ebp);pushl ;movl , %esi;calll *%esi": 1,
                "pushl %esi;pushl %edi;movl $, %edi;jne  <host_com_close+>;movl $, %edi": 1,
                "cmpl %esi, %eax;jbe  <host_com_close+>;movb $, (%ebx);pushl (%edi);calll - <getDX+>": 1,
                "pushl -(%ebp);pushl %esi;pushl %esi;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %esi;pushl %esi;calll - <setDH+>;testl %eax, %eax;jne  <host_com_close+>": 1,
                "pushl %esi;calll - <setDH+>;testl %eax, %eax;jne  <host_com_close+>;pushl $": 1,
                "pushl %esi;movw %ax, (%ecx);calll - <IsCdRomFile+>;movzbl %al, %eax;leal (%eax,%eax), %eax": 1,
                "calll - <IsCdRomFile+>;pushl (%ebp);pushl %esi;calll - <IsCdRomFile+>;movzbl %al, %eax": 2,
                "calll - <getDI+>;xorl %ecx, %ecx;movl %ecx, -(%ebp);movl , %eax;movl %ecx, (%eax)": 1,
                "movl , %eax;movl %ecx, (%eax);movl , %eax;movl $, (%eax);movl , %eax": 1,
                "movl %ecx, (%eax);movl , %eax;movl $, (%eax);movl , %eax;movl $, (%eax)": 1,
                "pushl $;calll - <getES+>;movl , %eax;movb -(%ebp), %cl;movb %cl, (%eax)": 1,
                "addl $, %eax;pushl %eax;movl $, %ebx;pushl %ebx;calll - <getES+>": 1,
                "calll - <getES+>;calll - <getDI+>;movl , %ecx;movb %al, (%ecx);movl , %eax": 1,
                "addl %eax, %esi;xorl %edi, %edi;pushl %edi;pushl $;calll - <call_ica_hw_interrupt+>": 1,
                "incl %edi;movb (%edi), %al;movb %al, (%ecx);incl %ecx;incl %edi": 1,
                "calll  <host_com_close+>;pushl ;movl , %ebx;calll *%ebx;testl %eax, %eax": 1,
                "pushl %edi;calll *;pushl %eax;pushl %esi;calll - <host_direct_access_error+>": 2,
                "pushl %eax;pushl %esi;calll - <host_direct_access_error+>;pushl ;calll *%ebx": 1,
                "orl $-, (%eax);calll *;jmp  <host_com_close+>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <setBL+>;pushl (%ebp);calll - <host_com_close+>;movzwl , %eax;movzwl , %ecx": 1,
                "calll - <host_com_close+>;movzwl , %eax;movzwl , %ecx;shll $, %eax;pushl $": 1,
                "pushl $;addl %ecx, %eax;pushl %eax;calll - <IsCdRomFile+>;leal (%ebp), %eax": 1,
                "pushl %esi;movl , %esi;pushl %edi;pushl ;calll *%esi": 1,
                "calll *%esi;xorl %edi, %edi;testl %eax, %eax;jne  <host_com_close+>;cmpl %edi, ": 1,
                "pushl $;calll - <call_ica_hw_interrupt+>;xorl %eax, %eax;movb (%esi), %al;pushl %eax": 2,
                "movb $, -(%ebp);pushl -(%ebp);pushl %ebx;calll - <call_ica_hw_interrupt+>;xorl %eax, %eax": 1,
                "calll - <getES+>;movb $, -(%ebp);pushl -(%ebp);movl $, %edi;pushl %edi": 1,
                "pushl %eax;pushl $;calll - <call_ica_hw_interrupt+>;movl , %eax;movzbl (%eax), %eax": 7,
                "pushl %eax;pushl %edi;calll - <call_ica_hw_interrupt+>;movl , %eax;movzbl (%eax), %eax": 1,
                "calll - <call_ica_hw_interrupt+>;movl , %eax;movl (%eax), %edi;movl (%eax), %ebx;movl (%eax), %esi": 1,
                "incl %eax;incl %edi;incl %edi;movb %dl, (%eax);incl %eax": 1,
                "incl %ebx;decl -(%ebp);jne - <host_com_close+>;movl $, %eax;movb (%esi), %dl": 1,
                "incl %eax;incl %esi;decl %ecx;jne - <host_com_close+>;leal -(%ebp), %eax": 1,
                "jne  <host_com_close+>;calll - <host_com_close+>;testl %eax, %eax;movl %eax, ;jne  <host_com_close+>": 1,
                "pushl ;calll *%esi;testl %eax, %eax;jne  <host_com_close+>;cmpl %edi, ": 3,
                "calll *;pushl %eax;pushl $;calll - <host_direct_access_error+>;pushl $-": 1,
                "movl %edi, ;movl %ebx, ;calll  <host_com_close+>;pushl ;calll *%esi": 1,
                "calll - <host_direct_access_error+>;pushl %ebx;pushl $;pushl $;movl %edi, ": 1,
                "int;int;movl $, ;calll - <host_com_close+>;movzwl , %ecx": 1,
                "movzwl , %ecx;andl $, ;xorl %eax, %eax;movb , %al;pushl %eax": 1,
                "rep  stosl %eax, %es:(%edi);stosw %ax, %es:(%edi);pushl $;stosb %al, %es:(%edi);calll - <setBL+>": 1,
                "movl %edi, ;cmpl %edi, ;jne  <host_com_close+>;calll - <host_com_close+>;jmp  <host_com_close+>": 1,
                "jne  <host_com_close+>;cmpl %esi, ;je  <host_com_close+>;pushl ;calll *": 1,
                "movl (%esi), %esi;testl %esi, %esi;jne - <host_com_close+>;testl %esi, %esi;jne  <host_com_close+>": 2,
                "pushl %edi;movl , %edi;testl %edi, %edi;movl %edx, (%ebp);je  <host_com_close+>": 1,
                "testl %edi, %edi;movl %edx, (%ebp);je  <host_com_close+>;movl (%ebp), %eax;cmpw $, (%edi)": 1,
                "jmp  <host_com_close+>;movl %edx, %ecx;subl (%edi), %ecx;andl $, -(%ebp);xorl %ebx, %ebx": 1,
                "shll %cl, %ebx;testw %ax, %ax;movl $, %esi;movl %esi, -(%ebp);movl %eax, (%ebp)": 1,
                "pushl $;leal (%ebp), %eax;pushl %eax;pushl $-;pushl ": 4,
                "shrl $, %ecx;incl %edi;shll %cl, %edi;subl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %ebx;pushl %esi;movl (%ebp), %esi;subl (%esi), %ebx;movl (%esi), %eax": 1,
                "je  <host_com_close+>;pushl $;calll - <ResumeTimerThread+>;movl %eax, %edi;testl %edi, %edi": 1,
                "cmpl %ecx, %ebx;movl , %ebx;movl %ecx, -(%ebp);jbe  <host_com_close+>;movl (%esi), %eax": 1,
                "pushl %ecx;leal (%ebp), %eax;pushl %eax;pushl $-;pushl ": 2,
                "movl %esi, (%ebp);addl $, %esi;movl %esi, -(%ebp);calll *%ebx;testl %eax, %eax": 1,
                "movl (%edi), %eax;pushl $;movl %eax, (%ebp);addl $, %eax;pushl $": 1,
                "je  <host_com_close+>;movl (%ebp), %esi;movl (%ebp), %edx;cmpw $, (%eax);jne  <host_com_close+>": 1,
                "leal (%edx,%esi), %ecx;cmpl %ecx, %edi;jae  <host_com_close+>;movl (%eax), %eax;testl %eax, %eax": 1,
                "pushl ;calll *;testl %eax, %eax;jl - <host_com_close+>;addl %esi, (%ebp)": 1,
                "int;xorl %eax, %eax;retl;int;int": 1,
                "int;jmp - <VDDSetDMA+>;int;int;int": 1,
                "cmpw $, %ax;jne  <host_com_close+>;jmp - <WaitIfIdle+>;retl;int": 1,
                "popl %edi;popl %esi;retl;jmp - <WaitIfIdle+>;int": 1,
                "cmpl $, %eax;ja  <host_com_close+>;jmpl *(,%eax,);jmp - <WaitIfIdle+>;int": 1,
                "movl %eax, -(%ebp);cmpl $, (,%eax,);je  <host_com_close+>;incl %eax;cmpl $, %eax": 1,
                "jmp  <host_com_close+>;cmpl $, (%ebp);pushl %esi;setne %al;movb %al, (%ebp)": 1,
                "cmpl $, (%ebp);pushl %esi;setne %al;movb %al, (%ebp);pushl (%ebp)": 1,
                "movl %eax, %esi;testl %esi, %esi;jne  <host_com_close+>;pushl $;calll - <setCF>": 1,
                "pushl $;calll - <setAX>;jmp  <host_com_close+>;pushl %ebx;pushl %edi": 1,
                "jmp  <host_com_close+>;pushl %ebx;pushl %edi;pushl (%ebp);calll - <getES>": 1,
                "movzwl %ax, %edi;shll $, %edi;calll - <getDI>;movzwl %ax, %eax;addl %eax, %edi": 4,
                "calll - <getBX>;movzwl %ax, %eax;addl %eax, %edi;pushl %edi;calll - <SimpGetVDMPointer>": 1,
                "subl %ebx, %edx;movb (%eax), %cl;movb %cl, (%edx,%eax);incl %eax;testb %cl, %cl": 1,
                "pushl (%ebp);calll *%edi;testl %eax, %eax;movl %eax, -(%ebp);jne  <host_com_close+>": 1,
                "testb %cl, %cl;jne - <host_com_close+>;movl %esi, -(%ebp);pushl -(%ebp);pushl (%ebp)": 1,
                "je  <host_com_close+>;calll *-(%ebp);movl -(%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (,%eax,)": 1,
                "pushl %eax;calll - <setAX>;popl %edi;popl %ebx;popl %esi": 1,
                "je  <host_com_close+>;decl %eax;je  <host_com_close+>;jmp  <host_com_close+>;calll - <host_com_close+>": 1,
                "pushl %esi;calll - <getMSW>;andl $, %eax;pushl %eax;calll - <getCS>": 1,
                "calll - <getIP>;incl %eax;pushl %eax;calll - <setIP>;popl %esi": 1,
                "pushl $;pushl ;movl %eax, ;calll *%esi;pushl $": 22,
                "pushl %eax;incl %esi;pushl $;movl %esi, -(%ebp);calll *": 1,
                "calll  <host_com_close+>;movl %esi, %eax;popl %esi;leave;retl": 1,
                "incl %esi;movzwl %si, %eax;leal -(%eax), %ecx;cmpl %ecx, %eax;jle - <host_com_close+>": 1,
                "movw %ax, %si;addw $, %si;jmp  <host_com_close+>;pushl %edi;pushl %esi": 2,
                "jle - <host_com_close+>;xorl %esi, %esi;movw %ax, %si;addw $, %si;movzwl %ax, %eax": 4,
                "movzwl %ax, %eax;jmp  <host_com_close+>;pushl %edi;pushl %esi;calll - <RegisterWOWIdle+>": 1,
                "pushl %esi;calll - <RegisterWOWIdle+>;movzwl , %eax;incl %esi;movzwl %si, %ecx": 5,
                "cmpl %eax, %ecx;jle - <host_com_close+>;movl $, %esi;pushl %edi;pushl %esi": 1,
                "movl $, %esi;pushl %edi;pushl %esi;calll - <RegisterWOWIdle+>;incl %esi": 1,
                "pushl %esi;calll - <RegisterWOWIdle+>;incl %esi;cmpw $, %si;jbe - <host_com_close+>": 1,
                "movzwl -(%ebp), %ecx;incl %eax;cmpl %eax, %ecx;jle - <host_com_close+>;popl %edi": 1,
                "testl %eax, %eax;je  <host_com_close+>;movzwl , %ecx;movzwl (%ebp), %eax;subl %ecx, %eax": 1,
                "subl $, %eax;je  <host_com_close+>;subl $, %eax;je  <host_com_close+>;decl %eax": 2,
                "subl $, %eax;je  <host_com_close+>;decl %eax;decl %eax;je  <host_com_close+>": 1,
                "decl %eax;je  <host_com_close+>;subl $, %eax;jne  <host_com_close+>;pushl %esi": 1,
                "andl $, %eax;movb %al, (%esi);jmp  <host_com_close+>;movb , %al;movb %al, (%esi)": 1,
                "movl %esp, %ebp;pushl %edi;xorl %edi, %edi;cmpl %edi, ;jne  <host_com_close+>": 1,
                "calll  <host_com_close+>;jmp  <host_com_close+>;pushl %ebx;calll  <host_com_close+>;jmp  <host_com_close+>": 1,
                "calll  <host_com_close+>;cmpb $-, %bl;je  <host_com_close+>;cmpb $, %bl;jne  <host_com_close+>": 1,
                "pushl %eax;pushl (%ebp);leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "testb %cl, %cl;jne - <host_com_close+>;leal -(%ebp), %edi;subl %edx, %eax;decl %edi": 1,
                "je  <host_com_close+>;calll - <host_com_close+>;calll - <host_com_close+>;pushl ;calll *": 1,
                "testl %eax, %eax;jne  <host_com_close+>;popl %edi;retl;xorl %eax, %eax": 1,
                "incl %esi;movzwl %si, %ecx;addl %edi, %eax;cmpl %eax, %ecx;jle - <host_com_close+>": 1,
                "cmpl %esi, (%ebp);je  <host_com_close+>;movw , %ax;movw %ax, -(%ebp);movw , %ax": 1,
                "movw %ax, -(%ebp);jbe  <host_com_close+>;pushl %ebx;movl $, %ebx;movb (%esi,%edi), %al": 1,
                "testb %al, %al;je  <host_com_close+>;cmpb $, %al;je  <host_com_close+>;andl $, (%ebp)": 1,
                "jg  <host_com_close+>;je  <host_com_close+>;cmpl $, %eax;je  <host_com_close+>;cmpl $, %eax": 2,
                "incl %esi;jmp  <host_com_close+>;leal (%ebp), %eax;pushl %eax;incl %esi": 1,
                "incl %esi;leal (%esi,%edi), %eax;pushl %ebx;pushl %eax;calll  <SetShadowDescriptorEntries+>": 4,
                "jne  <host_com_close+>;movw (%ebp), %ax;movw %ax, ;jmp  <host_com_close+>;leal (%ebp), %eax": 1,
                "cmpl $, ;je  <host_com_close+>;calll - <host_com_close+>;calll - <host_com_close+>;movw -(%ebp), %ax": 1,
                "calll - <host_com_close+>;testl %eax, %eax;jne  <host_com_close+>;pushl ;calll *": 1,
                "movl , %eax;pushl %ebx;movb (%ebp), %bl;movb %bl, %dl;movl %eax, %ecx": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl $;movl %eax, -(%ebp);movb (%ebp), %al": 1,
                "jmp  <host_com_close+>;xorl %eax, %eax;incl %eax;leave;retl $": 1,
                "pushl $;calll - <RegisterWOWIdle+>;testl %eax, %eax;popl %ecx;popl %ecx": 1,
                "je  <host_com_close+>;movl %eax, (%ecx);movl (%ebp), %ecx;cmpl $, (%ecx);jne  <host_com_close+>": 1,
                "pushl %eax;calll - <getDX+>;testl %esi, %esi;popl %ecx;jne - <host_com_close+>": 1,
                "xorl %eax, %eax;testl %esi, %esi;popl %edi;setne %al;popl %esi": 1,
                "pushl (%ebp);xorl %esi, %esi;pushl %esi;pushl %esi;pushl $": 1,
                "xorl %esi, %esi;pushl %esi;pushl %esi;pushl $;leal -(%ebp), %eax": 1,
                "cmpl %esi, -(%ebp);jl  <host_com_close+>;xorl %eax, %eax;incl %eax;jmp  <host_com_close+>": 2,
                "movb %al, (%ecx);movl (%ebp), %ecx;movb %ah, (%ecx);xorl %eax, %eax;incl %eax": 1,
                "movb %ah, (%ecx);xorl %eax, %eax;incl %eax;jmp  <host_com_close+>;xorl %eax, %eax": 1,
                "movl $, -(%ebp);movl $, -(%ebp);calll *;testl %eax, %eax;jge  <host_com_close+>": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %ecx;shll $, %ecx;orl -(%ebp), %ecx;movl %eax, %edx": 1,
                "shll $, %ecx;shrl %edx;andl %ebx, %edx;orl %edx, %ecx;shll $, %ecx": 1,
                "shrl $, %esi;andl %ebx, %esi;movl %eax, %edi;shrl $, %edi;andl %ebx, %edi": 1,
                "xorl %esi, %esi;cmpl %esi, ;jne  <host_com_close+>;pushl %ebx;pushl %edi": 1,
                "andl $, %edx;orl %edx, %ecx;shll $, %ecx;movl %esi, %edx;andl $, %edx": 1,
                "andl $, %edx;orl %edx, %ecx;movl %esi, %edx;shrl $, %edx;andl %edi, %edx": 1,
                "popl %edi;popl %ebx;popl %esi;retl;int": 1,
                "je  <host_com_close+>;pushl %ebx;movl (%ebp), %ebx;cmpl $, %ebx;jg  <host_com_close+>": 1,
                "imull (%eax), %esi;movl (%ebp), %eax;movl (%ebp), %ecx;pushl %edi;movl , %edi": 1,
                "leal (%edi,%eax,), %eax;shrl $, %esi;shll $, %esi;shrl $, %esi;negl %edi": 1,
                "shrl $, %esi;negl %edi;sbbl %edi, %edi;andl %eax, %edi;movl %esi, %eax": 1,
                "movzbl %dl, %esi;movzbl %ch, %edx;movzbl %cl, %ecx;shll $, %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %eax;leal -(%eax,%ecx,), %eax;popl %edi;movw %ax, -(%ebp);movl , %eax": 1,
                "pushl %edi;movl , %edi;movl %eax, (%ebp);movl , %eax;movzwl (%eax), %ebx": 1,
                "movl , %eax;movzwl (%eax), %ebx;leal (%edi,%ecx,), %ecx;negl %edi;sbbl %edi, %edi": 1,
                "pushl $;calll - <getDI+>;movl , %eax;movl %eax, -(%ebp);movl (%ebp), %esi": 1,
                "xorl %edi, %edi;movl %edi, -(%ebp);cmpl %edi, ;je  <host_com_close+>;cmpl %eax, %esi": 1,
                "movl %edi, -(%ebp);movl , %eax;movl (%eax), %esi;addl %eax, %esi;movl %esi, -(%ebp)": 1,
                "movl (%ebp), %ecx;sarl %ecx;leal (%ecx,%eax,), %eax;movl , %ecx;leal (%ecx,%eax,), %eax": 1,
                "movl (%ebp), %ecx;movl %ecx, -(%ebp);jmp  <host_com_close+>;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "shll $, %ecx;movl %ecx, -(%ebp);movl (%ecx), %ecx;orl (%edi), %ecx;orl (%esi), %ecx": 1,
                "addl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;incl %ecx;movl %ecx, -(%ebp)": 1,
                "movw %ax, -(%ebp);movl , %eax;testl %eax, %eax;je  <host_com_close+>;leal -(%ebp), %ecx": 8,
                "pushl %eax;calll  <SetShadowDescriptorEntries+>;jmp  <host_com_close+>;xorl %eax, %eax;incl %eax": 9,
                "movl %eax, -(%ebp);movl (%ebp), %edx;sarl $, %edx;movl , %eax;sarl $, %eax": 1,
                "movl (%ebp), %esi;cmpl %ecx, %esi;jae  <host_com_close+>;movl (%ebp), %ebx;addl %edx, %ebx": 1,
                "jae  <host_com_close+>;movl (%ebp), %ebx;addl %edx, %ebx;cmpl %eax, %ebx;jbe  <host_com_close+>": 2,
                "movl -(%ebp), %ebx;movl -(%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);jmp  <host_com_close+>;movl -(%ebp), %ebx": 1,
                "movl %edx, -(%ebp);orl (%edx), %eax;movl %eax, -(%ebp);addl $, %edx;movl %edx, -(%ebp)": 6,
                "movl -(%ebp), %edx;movl %edx, -(%ebp);movl (%ebp), %edx;movl %edx, -(%ebp);movl (%ebp), %edx": 1,
                "movl %edx, -(%ebp);movl (%ebp), %edx;movl %edx, -(%ebp);testb $, -(%ebp);je  <host_com_close+>": 1,
                "movl (%ebp), %edx;movl %edx, -(%ebp);testb $, -(%ebp);je  <host_com_close+>;movzbl (%edx,%esi), %ecx": 1,
                "movl (%ebp), %ecx;movw %cx, -(%ebp);movl (%ebp), %eax;movw %ax, -(%ebp);movl (%ebp), %edx": 1,
                "movw %cx, -(%ebp);movl (%ebp), %eax;movw %ax, -(%ebp);movl (%ebp), %edx;leal -(%ecx,%edx,), %ecx": 1,
                "pushl %ebx;pushl %edi;movl %esi, %ecx;shrl $, %ecx;pushl $": 1,
                "shll $, %ebx;shll $, %ecx;orl %edx, %ebx;orl %eax, %ecx;movl %ebx, (,%esi,)": 1,
                "shll $, %ecx;orl %edx, %ebx;orl %eax, %ecx;movl %ebx, (,%esi,);movl %ecx, (,%esi,)": 1,
                "int;movl $, ;retl;int;int": 3,
                "jge  <host_com_close+>;subl %ecx, %eax;movl %eax, %ebx;movl (%ebp), %eax;pushl %edi": 1,
                "leal (%edx,%eax,), %edi;movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx": 1,
                "movw %ax, -(%ebp);leal -(%ebx,%ecx), %eax;movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movw %ax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl ;movw %cx, -(%ebp)": 1,
                "pushl %ecx;pushl %ecx;cmpl $, (%ebp);jg  <host_com_close+>;xorl %eax, %eax": 1,
                "addl $, %esi;shrl $, %esi;pushl $-;pushl ;shll $, %esi": 1,
                "movl (,%edi,), %edi;addl $, %esi;movl %edi, (%esi);addl %eax, %ecx;movl %edi, (%edx,%esi)": 1,
                "cmpl %eax, ;jne  <host_com_close+>;movl $, ;jmp  <host_com_close+>;pushl $": 1,
                "movl $, ;jmp  <host_com_close+>;pushl $;movl %eax, ;popl %eax": 1,
                "imull %edi, %edx;addl , %edx;addl %eax, %ecx;movl %ebx, %eax;sarl $, %eax": 1,
                "jne - <host_com_close+>;pushl ;calll *;movl (%ebp), %eax;movw %di, -(%ebp)": 1,
                "andl $, -(%ebp);movl , %eax;movzwl (%eax), %esi;imull (%eax), %esi;addl $, %esi": 1,
                "pushl $-;pushl ;calll *;movl %eax, -(%ebp);movl %esi, %eax": 1,
                "sarl %eax;sarl %ecx;cmpl $, ;je  <host_com_close+>;pushl %edi": 1,
                "je  <host_com_close+>;pushl %edi;movl (%ebp), %edi;cmpl %eax, %edi;jge  <host_com_close+>": 1,
                "movl (%ebp), %edi;cmpl %eax, %edi;jge  <host_com_close+>;movl (%ebp), %edx;cmpl %ecx, %edx": 1,
                "movl %ecx, (%ebp);movl , %eax;movl , %ecx;movl %eax, -(%ebp);movl , %eax": 1,
                "shrl %esi;movl %esi, %eax;imull %edx, %eax;pushl $-;pushl ": 1,
                "xorl %eax, %eax;movb %dl, %ah;orl %edx, %eax;movw %ax, (%ecx);movw %ax, (%ecx,%esi,)": 1,
                "leal -(%eax,%ecx,), %eax;movw %ax, -(%ebp);movl , %eax;testl %eax, %eax;popl %esi": 1,
                "subl $, %esp;cmpl $, ;je  <host_com_close+>;movl (%ebp), %edx;movl , %eax": 1,
                "movl (%ebp), %esi;addl %ebx, %esi;shll $, %esi;cmpl %eax, %esi;pushl %edi": 1,
                "movl (%ebp), %eax;movl , %esi;sarl %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 3,
                "movl (%ebp), %eax;leal (%esi,%eax,), %eax;negl %esi;sbbl %esi, %esi;andl %eax, %esi": 3,
                "leal (%esi,%eax,), %eax;negl %esi;sbbl %esi, %esi;andl %eax, %esi;movl , %eax": 3,
                "shll $, %eax;orl %edx, %eax;addl $, %ecx;shll $, %eax;orl %edx, %eax": 1,
                "shll $, %eax;orl %edx, %eax;movl %eax, (%ecx);movl %eax, (%ecx,%edi,);addl $, %ecx": 1,
                "movl %ebx, %eax;shll $, %eax;movw %ax, -(%ebp);movl (%ebp), %eax;movw %ax, -(%ebp)": 1,
                "cmpl %eax, %esi;pushl %edi;jle  <host_com_close+>;subl %ecx, %eax;movl %eax, (%ebp)": 1,
                "movl %eax, (%ebp);movl (%ebp), %eax;addl %ebx, %eax;cmpl %edx, %eax;jle  <host_com_close+>": 1,
                "shrl $, %ebx;movb %bl, (%ebp);movzbl -(%ebp), %ebx;orl %ebx, %ecx;shll $, %ecx": 1,
                "leal (%esi,%eax,), %esi;jne - <host_com_close+>;pushl ;calll *;movl (%ebp), %eax": 1,
                "movl %eax, (%ebp);movl (%ebp), %eax;addl %edi, %eax;cmpl %edx, %eax;jle  <host_com_close+>": 1,
                "movl %eax, -(%ebp);calll *;movl %ebx, %ecx;shll $, %ecx;movl %ecx, -(%ebp)": 1,
                "shll $, %esi;shll $, %edi;shll $, %edx;movl %ecx, -(%ebp);movl -(%ebp), %ecx": 1,
                "shrl $, %ebx;movb %bl, -(%ebp);movzbl %cl, %ebx;movl %ebx, %ecx;shll $, %ecx": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %ecx;movl , %eax;addl %ecx, -(%ebp);decl -(%ebp)": 1,
                "subl $, %esp;movl , %ecx;sarl $, %ecx;cmpl $, ;je  <host_com_close+>": 1,
                "jle  <host_com_close+>;subl %edx, %ecx;movl %ecx, (%ebp);movl (%ebp), %ecx;addl %ebx, %ecx": 1,
                "jle  <host_com_close+>;subl %ebx, %eax;movl %eax, (%ebp);movl (%ebp), %eax;movl , %edi": 1,
                "movb %bl, (%ebp);movb (%ecx), %bl;incl %ecx;movb %bl, -(%ebp);movb (%ecx), %bl": 1,
                "je  <host_com_close+>;movl (%ebp), %ecx;cmpl %eax, %ecx;jge  <host_com_close+>;movl (%ebp), %edx": 1,
                "jge  <host_com_close+>;pushl %ebx;pushl %edi;movl (%ebp), %edi;addl %ecx, %edi": 1,
                "subl %esi, -(%ebp);leal (%ebx), %eax;movl $, -(%ebp);subl %esi, -(%ebp);movl $, -(%ebp)": 1,
                "jne - <host_com_close+>;movl -(%ebp), %edi;movl -(%ebp), %ebx;cmpl $, -(%ebp);je  <host_com_close+>": 1,
                "pushl %ecx;pushl %eax;calll  <SetShadowDescriptorEntries+>;popl %esi;leave": 1,
                "jle  <host_com_close+>;subl %edi, %ecx;movl %ecx, (%ebp);movl (%ebp), %eax;movl , %ecx": 1,
                "testl %ebx, %ebx;movl %ecx, %edi;jle  <host_com_close+>;orl $-, -(%ebp);subl %esi, -(%ebp)": 1,
                "jle  <host_com_close+>;orl $-, -(%ebp);subl %esi, -(%ebp);leal (%eax), %ecx;movl $, -(%ebp)": 1,
                "jmp  <host_com_close+>;movl -(%ebp), %edi;movb (%edi), %cl;incl %edi;movb (%edi), %dl": 1,
                "movb (%edi), %bl;incl %edi;movb %bl, (%ebp);movb (%edi), %bl;movb %cl, -(%eax)": 1,
                "movl -(%ebp), %edi;movb %cl, -(%eax);movb %cl, (%eax,%edi);movl -(%ebp), %edi;movb %cl, (%eax)": 1,
                "movl -(%ebp), %edx;movb %cl, (%eax);movb %cl, (%eax,%edx);movl -(%ebp), %edx;addl $, -(%ebp)": 1,
                "movb %cl, (%eax,%edx);movl -(%ebp), %edx;movb %cl, (%eax);movb %cl, (%eax,%edx);movl -(%ebp), %edx": 1,
                "movb %bl, (%eax,%ecx);addl $, %eax;decl -(%ebp);jne - <host_com_close+>;movl -(%ebp), %eax": 1,
                "jne - <host_com_close+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl (%ebp), %ebx;leal (%esi,%esi), %edx": 1,
                "leal -(%ecx,%eax,), %eax;movw %ax, -(%ebp);andl $, -(%ebp);pushl $-;pushl ": 1,
                "shrl %edi;movl %edi, -(%ebp);sarl $, (%ebp);movl %edi, %eax;imull %ebx, %eax": 1,
                "movl %ecx, -(%ebp);jmp  <host_com_close+>;movl -(%ebp), %esi;movl -(%ebp), %edx;movl -(%ebp), %ebx": 1,
                "leal (%esi,%edi,), %ecx;movl %ecx, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "andl $, %ecx;movl -(%ebp), %esi;shrl $, %esi;andl $, %esi;leal (%esi,%ecx,), %ecx": 1,
                "shll $, %esi;orl %edx, %esi;leal (%edi,%edi), %edx;movw %si, (%edx,%eax);movw %si, (%eax)": 1,
                "incl %eax;movl %eax, -(%ebp);decl -(%ebp);jne - <host_com_close+>;decl (%ebp)": 1,
                "incl %eax;retl;movl -(%ebp), %esp;pushl ;calll *": 1,
                "movl %ecx, -(%ebp);pushl $-;pushl ;calll *;movl %eax, -(%ebp)": 2,
                "movl %eax, -(%ebp);jmp  <host_com_close+>;movl -(%ebp), %ebx;movl %esi, %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ebx;movzbl (%esi,%ebx), %ecx;movl %ecx, -(%ebp);movl %ecx, %edx;shll $, %edx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edx;movzbl (%esi,%edx), %ebx;movl %ebx, -(%ebp);movl %ebx, %edx": 3,
                "shll $, %esi;shrl $, %esi;movl %esi, -(%ebp);movl %esi, %eax;imull %edx, %eax": 1,
                "calll *;movl %eax, -(%ebp);jmp  <host_com_close+>;movl -(%ebp), %ebx;movl -(%ebp), %ecx": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);movzbl -(%ebp), %ebx;movzbl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);incl %edx;movl %edx, -(%ebp);decl -(%ebp)": 1,
                "movl %eax, (%ebp);movl (%ebp), %eax;addl %edi, %eax;cmpl %edx, %eax;jbe  <host_com_close+>": 1,
                "imull %edi, %eax;addl , %eax;leal (%eax,%ecx,), %eax;movl %eax, -(%ebp);movl , %eax": 1,
                "addl , %eax;leal (%eax,%ecx,), %eax;movl %eax, -(%ebp);movl , %eax;movl (%eax), %edi": 1,
                "ja  <host_com_close+>;movzwl %cx, %eax;movzbl (%eax), %eax;jmp  <host_com_close+>;cmpw $, %cx": 1,
                "movb %al, (%ebp);movw $, (%esi);movw %bx, (%esi);movl %ebx, (%esi);jne  <host_com_close+>": 1,
                "movw $, (%esi);movw %bx, (%esi);movl %ebx, (%esi);jne  <host_com_close+>;cmpw %bx, (%esi)": 1,
                "addl $-, %eax;movw %ax, (%esi);movzwl %ax, %eax;shll $, %eax;movl (%eax), %ecx": 1,
                "je  <host_com_close+>;subl $, %ecx;je  <host_com_close+>;decl %ecx;je  <host_com_close+>": 2,
                "decl %ecx;jne  <host_com_close+>;movw $, (%esi);jmp  <host_com_close+>;movw $, (%esi)": 1,
                "jne  <host_com_close+>;movw $, (%esi);jmp  <host_com_close+>;movw $, (%esi);jmp  <host_com_close+>": 1,
                "jmp  <host_com_close+>;movw $, (%esi);jmp  <host_com_close+>;subl $, %ecx;je  <host_com_close+>": 1,
                "movl %ebx, -(%ebp);jmp  <host_com_close+>;movw (%esi), %ax;cmpw $, %ax;jne  <host_com_close+>": 1,
                "movl $, (%esi);jmp  <host_com_close+>;cmpb %bl, %cl;je  <host_com_close+>;cmpw $, %ax": 1,
                "testb $, %ah;movzbw %al, %cx;movw %cx, (%esi);je  <host_com_close+>;orl $, (%esi)": 1,
                "orl $, (%esi);testb $, %ah;je  <host_com_close+>;orl $, (%esi);movzwl %cx, %eax": 1,
                "calll *%edi;cmpw %bx, %ax;movw %ax, (%esi);jne  <host_com_close+>;xorl %eax, %eax": 1,
                "cmpw %bx, %ax;movw %ax, (%esi);jne  <host_com_close+>;xorl %eax, %eax;jmp  <host_com_close+>": 1,
                "cmpl $, ;je  <host_com_close+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;movl , %eax;shll $, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;movl , %eax;shll $, %eax;pushl %eax": 1,
                "calll *;movl %eax, %ebx;xorl %esi, %esi;testl %ebx, %ebx;jbe  <host_com_close+>": 1,
                "xorl %esi, %esi;testl %ebx, %ebx;jbe  <host_com_close+>;pushl $;leal -(%ebp), %eax": 1,
                "cmpw $, -(%ebp);je  <host_com_close+>;incl %esi;cmpl %ebx, %esi;jb - <host_com_close+>": 1,
                "incl %eax;jmp - <host_com_close+>;int;int;int": 2,
                "movw , %ax;movw %ax, %cx;addw $, %ax;pushl %esi;pushl %edi": 1,
                "je  <host_com_close+>;pushl %edi;pushl %edi;pushl %edi;pushl -(%ebp)": 1,
                "pushl %edi;pushl %edi;pushl %edi;pushl -(%ebp);pushl $": 1,
                "pushl %eax;pushl $;movw $, -(%ebp);calll *%esi;xorl %eax, %eax": 1,
                "movl %esp, %ebp;movb , %dl;movzbl %dl, %eax;cmpl $, %eax;jne  <host_com_close+>": 1,
                "movl %ecx, %eax;shll $, %eax;movzbw %dl, %si;movw $, (%eax);movw %si, (%eax)": 1,
                "xorl %eax, %eax;incl %eax;testb %al, (%ebp);je  <host_com_close+>;testb $, ": 1,
                "movl %ecx, ;testb $, (%ebp);je  <host_com_close+>;testb $, ;jne  <host_com_close+>": 1,
                "movl %edi, (%ecx);movl (%eax), %eax;addl $, %edx;addl $, %esi;cmpl $, %edx": 1,
                "pushl $-;pushl $;calll *;cmpl %edi, %eax;jne  <host_com_close+>": 1,
                "calll - <host_com_close+>;cmpl %esi, ;je  <host_com_close+>;xorl %eax, %eax;incl %eax": 1,
                "movl %esi, ;movl %esi, ;movl %esi, ;movl %eax, ;movl %esi, ": 1,
                "movl %esi, ;movl %esi, ;movl %eax, ;movl %esi, ;movl %esi, ": 1,
                "incl %eax;cltd;movl %ecx, %ebx;idivl %ebx;decl %esi": 1,
                "movl %edx, ;jae  <host_com_close+>;cmpl , %edx;jne - <host_com_close+>;popl %esi": 1,
                "andl %ecx, %eax;cltd;movl $, %ecx;idivl %ecx;movl %edx, ": 1,
                "leal (%ecx), %eax;cltd;movl %esi, %ecx;idivl %ecx;movl , %eax": 1,
                "cmpl %ecx, ;jne  <host_com_close+>;cmpb $-, %bl;jne  <host_com_close+>;movl , %eax": 1,
                "movl , %eax;movl , %ecx;movb %bl, (%eax,%ecx);movl , %eax;incl %eax": 1,
                "je  <host_com_close+>;cmpb $-, %bl;je  <host_com_close+>;cmpb $-, %bl;je  <host_com_close+>": 2,
                "movl %ecx, (%edx,%eax);movl , %eax;addl $, %eax;cltd;movl %esi, %ecx": 1,
                "addl $, %eax;cltd;movl %esi, %ecx;idivl %ecx;movl %edx, ": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl , %ecx;movl (%ebp), %eax": 1,
                "pushl %edi;movl $, %edi;movl %eax, %esi;movl , %eax;imull %ecx, %esi": 1,
                "jne  <host_com_close+>;pushl $;pushl %ebx;pushl ;calll *": 1,
                "calll *;jmp  <host_com_close+>;movl , %eax;pushl $;pushl %edi": 1,
                "movl %ebx, ;xorl %eax, %eax;jmp  <host_com_close+>;movl , %ecx;movl , %edx": 1,
                "calll *;movl -(%ebp), %eax;pushl $;movl %eax, ;calll *": 1,
                "calll *;calll  <SetShadowDescriptorEntries+>;movzwl , %ecx;movl %ecx, %edx;shrl $, %edx": 1,
                "pushl $;movl $, ;calll - <host_com_close+>;testl %eax, %eax;je  <host_com_close+>": 1,
                "incl %eax;popl %edi;jmp  <host_com_close+>;xorl %eax, %eax;popl %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl , %eax;decl %eax": 3,
                "movl $, ;jmp  <host_com_close+>;movl (%ebp), %eax;movb $-, (%eax);popl %ebp": 1,
                "movl %ecx, %eax;movl %eax, ;cmpl $, %eax;ja  <host_com_close+>;cmpl $, %eax": 1,
                "cmpl $, %eax;jbe  <host_com_close+>;cmpl $, %eax;jbe  <host_com_close+>;cmpl $, %eax": 1,
                "xorl %edx, %edx;divl %ecx;retl;int;int": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax;jne  <host_com_close+>;movzwl , %eax": 1,
                "pushl %esi;xorl %esi, %esi;cmpl %esi, (%ebp);je  <host_com_close+>;pushl $": 1,
                "calll *;negl %eax;sbbl %eax, %eax;popl %edi;incl %eax": 1,
                "pushl %ebp;movl %esp, %ebp;movzwl , %ecx;movl (%ebp), %eax;movb (%eax), %dl": 1,
                "movzwl , %ecx;movb (%eax), %al;movl , %edx;movb %al, (%edx,%ecx,);movzwl , %ecx": 1,
                "xorl %edx, %edx;movb (%eax,%ecx,), %dh;pushl %esi;movb (%eax,%ecx,), %dl;movl (%ebp), %eax": 1,
                "movzwl , %esi;movl , %ecx;xorl %edx, %edx;movb (%ecx,%esi,), %dh;movb (%ecx,%esi,), %dl": 1,
                "movzwl , %ecx;movl , %edx;movb (%ecx,%edx), %cl;movb %cl, (%eax);movl , %ecx": 1,
                "jmp  <host_com_close+>;notb %dl;andb %dl, (%eax);movb (%eax), %al;movl , %ecx": 1,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl ;movl $, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl ;movl $, -(%ebp);calll *": 1,
                "je  <host_com_close+>;pushl %esi;movl , %esi;jmp  <host_com_close+>;pushl %edi": 1,
                "cmpl %edi, ;je  <host_com_close+>;movl , %eax;cmpl $, %eax;jae  <host_com_close+>": 1,
                "shrl $, %eax;cmpl %eax, %edx;jae  <host_com_close+>;addw %cx, ;subw %cx, ": 1,
                "jmp  <host_com_close+>;pushl %edi;calll *%esi;jmp  <host_com_close+>;cmpl $, ": 1,
                "jmp  <host_com_close+>;cmpl $, ;jne  <host_com_close+>;incl ;movzwl , %ecx": 1,
                "cmpl $, ;jbe  <host_com_close+>;pushl $;calll *%esi;cmpl $, ": 1,
                "pushl $;calll *;leal -(%ebp), %eax;pushl %eax;calll - <host_com_close+>": 1,
                "movl , %eax;pushl %esi;movl %edx, ;movl (%eax,%edx,), %esi;incl %esi": 1,
                "testl %eax, %eax;jne  <host_com_close+>;calll - <host_com_close+>;pushl $;calll - <host_com_close+>": 1,
                "movl %eax, ;movl , %eax;addl %esi, %eax;movl %eax, ;cmpl $, ": 1,
                "pushl $;popl %eax;jmp  <host_com_close+>;movl $, %ecx;jmp  <host_com_close+>": 1,
                "pushl %esi;xorl %esi, %esi;jmp  <host_com_close+>;pushl $;calll *": 1,
                "addl %esi, %eax;pushl %eax;pushl ;calll *;cmpl $, %eax": 1,
                "movl , %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, ;je  <host_com_close+>": 1,
                "addb , %bl;movb %bl, ;calll - <host_com_close+>;cmpl $-, %eax;je  <host_com_close+>": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %edi;xorl %edi, %edi;cmpl %edi, ": 2,
                "calll *;pushl $;calll - <host_com_close+>;cmpl $, ;movw , %ax": 1,
                "je  <host_com_close+>;movb , %cl;movb $, %al;shlb %cl, %al;testb %al, ": 1,
                "movb $, %al;shlb %cl, %al;testb %al, ;jne  <host_com_close+>;movzwl , %eax": 1,
                "movl , %eax;movl , %ecx;shll $, %eax;testb $, (%eax,%ecx);je  <host_com_close+>": 1,
                "movl %eax, ;jne  <host_com_close+>;cmpl $, ;je  <host_com_close+>;leal -(%ebp), %eax": 1,
                "movl , %ecx;leal (%eax,%ecx), %eax;movl , %ecx;shrl %ecx;cmpl %ecx, %eax": 1,
                "pushl %ebx;xorl %eax, %eax;pushl %esi;incl %eax;pushl %edi": 1,
                "int;int;calll - <host_com_close+>;testl %eax, %eax;je  <host_com_close+>": 1,
                "calll - <host_com_close+>;testl %eax, %eax;je  <host_com_close+>;calll - <host_com_close+>;cmpl $, ": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl $;calll *": 1,
                "pushl $;calll *;cmpl $, %eax;jne  <host_com_close+>;pushl %ebx": 1,
                "movw %cx, ;calll - <host_com_close+>;cmpw $, ;jne  <host_com_close+>;pushl $": 1,
                "calll - <host_com_close+>;cmpl %edi, ;jne  <host_com_close+>;pushl %edi;calll - <host_com_close+>": 1,
                "calll - <host_com_close+>;cmpl %edi, ;je  <host_com_close+>;calll - <host_com_close+>;movl , %eax": 1,
                "jmp  <host_com_close+>;cmpl $, %eax;jbe  <host_com_close+>;subl , %ecx;leal (%ecx), %eax": 1,
                "xorl %eax, %eax;popl %esi;leave;retl $;int": 2,
                "pushl %ebx;pushl %edi;xorl %edi, %edi;cmpl %edi, ;movl %edi, ": 1,
                "pushl $;pushl %edi;pushl $;pushl %edi;pushl %edi": 1,
                "pushl %edi;calll *;movl %eax, %ebx;cmpl %edi, %ebx;jne  <host_com_close+>": 1,
                "leal (%eax,%ecx), %eax;pushl %eax;calll - <host_com_close+>;cmpl %edi, ;je  <host_com_close+>": 1,
                "calll - <host_com_close+>;calll - <host_com_close+>;pushl %edi;calll - <host_com_close+>;calll - <host_com_close+>": 1,
                "ja  <host_com_close+>;testl %esi, %esi;jbe  <host_com_close+>;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl %eax;calll - <host_com_close+>;pushl $;jmp  <host_com_close+>;pushl $": 1,
                "jmp  <host_com_close+>;pushl $;jmp  <host_com_close+>;movl $, ;jmp  <host_com_close+>": 1,
                "movl $, ;jmp  <host_com_close+>;subl $, %eax;je  <host_com_close+>;decl %eax": 1,
                "je  <host_com_close+>;decl %eax;jne  <host_com_close+>;pushl $;calll - <host_com_close+>": 1,
                "calll - <host_com_close+>;pushl $;calll - <host_com_close+>;jmp  <host_com_close+>;movl $, ": 1,
                "jmp  <host_com_close+>;movl $, ;pushl $;calll - <host_com_close+>;pushl $": 1,
                "movl $, ;jmp  <host_com_close+>;calll - <host_com_close+>;jmp  <host_com_close+>;movl $, ": 1,
                "je  <host_com_close+>;subl $, %eax;jne  <host_com_close+>;pushl $;calll - <host_com_close+>": 1,
                "ja  <host_com_close+>;jmpl *(,%eax,);pushl (%ebp);calll - <host_com_close+>;jmp  <host_com_close+>": 1,
                "repne  xorl $, %eax;addb $, %al;int;int;int": 1,
                "popl %edx;subl %edx, %eax;je  <host_com_close+>;subl %ecx, %eax;je  <host_com_close+>": 1,
                "movl $, ;jmp  <host_com_close+>;movl %ecx, ;jmp  <host_com_close+>;movl $, ": 1,
                "pushl %eax;calll *;popl %esi;popl %ebp;retl $": 1,
                "jmp  <host_com_close+>;popl %ebp;jmp - <host_com_close+>;popl %ebp;jmp - <host_com_close+>": 1,
                "movl %eax, (%ebp);movzbl (%edx), %eax;incl %edx;movzbl (%edx), %ebx;leal (%edi,%eax,), %ecx": 1,
                "movl %eax, (%ebx,%esi);movl %eax, (%esi);addl $, %esi;movl %ecx, (%ebx,%esi);jmp  <host_com_close+>": 1,
                "movl %ecx, (%esi);addl $, %esi;decl (%ebp);jne - <host_com_close+>;jmp  <host_com_close+>": 1,
                "testb $, ;je  <host_com_close+>;movzbl (%edx), %ebx;leal (%edi,%ebx,), %ebx;orl (%ebx), %eax": 2,
                "orl (%ebx), %esi;jmp  <host_com_close+>;incl %edx;cmpl $, (%ebp);jne  <host_com_close+>": 1,
                "decl (%ebp);jne - <host_com_close+>;popl %edi;popl %esi;popl %ebx": 1,
                "int;int;movl %fs:, %eax;movl (%eax), %eax;andl $-, (%eax)": 2,
                "pushl %ebp;movl %esp, %ebp;movl %fs:, %eax;cmpw $, (%ebp);movl (%eax), %eax": 1,
                "leal (%edx,%eax,), %ecx;movzwl (%ecx), %esi;shll $, %eax;addl %edx, %eax;movb (%ebp), %dl": 1,
                "addl %edx, %eax;movb (%ebp), %dl;movb %dl, (%esi,%eax);incw (%ecx);movb $, %al": 1,
                "movw (%esi), %ax;pushl %eax;calll - <getDI+>;leal (%esi), %ecx;jmp  <setEFLAGS+>": 1,
                "leal (%esi), %ecx;jmp  <setEFLAGS+>;calll - <getMSW>;andb %cl, %al;pushl %eax": 1,
                "testl %eax, %eax;je  <setEFLAGS+>;movw (%esi), %dx;imulw (%esi), %dx;movw (%ecx), %ax": 1,
                "movw (%ecx), %ax;subw %dx, %ax;jmp  <setEFLAGS+>;movw (%esi), %ax;imulw (%esi), %ax": 1,
                "pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);jl  <setEFLAGS+>;movb $, ": 1,
                "addl $, %esi;calll - <getSS>;movzwl %ax, %eax;shll $, %eax;pushl %eax": 1,
                "movzwl %ax, %eax;shll $, %eax;pushl %eax;calll - <SimpGetVDMPointer>;movl %eax, %ebx": 1,
                "addl %esi, %eax;pushl %eax;calll - <setSP>;cmpl $, -(%ebp);je  <setEFLAGS+>": 1,
                "cmpl $, -(%ebp);je  <setEFLAGS+>;movl (%ebx), %eax;movl %eax, (%edi);xorl %eax, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;xorl %ecx, %ecx;orl $-, (%eax)": 1,
                "movl $, (%eax);movl %edx, (%eax);movl %edx, (%eax);movl %ecx, (%eax);movl $, (%eax)": 1,
                "movl %ecx, (%eax);movl %ecx, (%eax);movl %ecx, (%eax);movl %ecx, (%eax);movb $, (%eax)": 1,
                "movl %ebx, (%eax);movl %eax, (%ebx);movl %esi, (%ebx);jmp  <cpu_createthread+>;movl (%eax), %ecx": 1,
                "popl %ecx;addl %ecx, %eax;movl (%eax), %edx;addl %ecx, %eax;movl %edx, ": 1,
                "pushl (%esi);calll *;testl %eax, %eax;movl %eax, (%ebp);jl  <cpu_createthread+>": 1,
                "movb %al, ;xorl %eax, %eax;incl %eax;popl %esi;popl %ebp": 1,
                "xorl %eax, %eax;jmp  <cpu_createthread+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %eax, (%esi)": 1,
                "movl %eax, (%esi);pushl $;popl %eax;addl %eax, %esi;movl %ecx, (%esi)": 1,
                "movzbl %al, %eax;decl %eax;decl %eax;je  <cpu_createthread+>;movzbl (%ebp), %eax": 1,
                "je  <cpu_createthread+>;movzbl (%ebp), %eax;movl (%ebp), %ecx;pushl %ebx;movb %al, %bl": 1,
                "rep  stosb %al, %es:(%edi);popl %edi;popl %ebp;retl $;int": 1,
                "decl %edi;jne - <cpu_createthread+>;popl %esi;xorl %eax, %eax;cmpl %eax, (%ebp)": 1,
                "je  <cpu_createthread+>;movw $, (%ebx);movw $, (%ebx);movw $, (%ebx);popl %ebx": 1,
                "movl %eax, (%ebx);movl %fs, %eax;movl %eax, (%ebx);movl %gs, %eax;movl %eax, (%ebx)": 1,
                "movl %fs, %eax;movl %eax, (%ebx);movl %gs, %eax;movl %eax, (%ebx);pushfl": 1,
                "movl %eax, (%ebx);testl $, (%ebx);je  <cpu_createthread+>;movl (%ebx), %eax;movl %eax, %es": 1,
                "jne  <cpu_createthread+>;movzwl %di, %edi;movl (%ebx), %eax;subl $, %edi;movl %eax, %es:(%edi)": 1,
                "subl $, %edi;movl %eax, %es:(%edi);subl $, %edi;movl (%ebx), %eax;movl %eax, %es:(%edi)": 1,
                "movl (%ebx), %eax;movl %eax, %es:(%edi);pushl %es;pushl %edi;movl %esp, %eax": 1,
                "pushl (%ebx);pushl (%ebx);pushl (%ebx);pushl (%ebx);pushl (%ebx)": 9,
                "popl %es;popl %ds;popl %gs;popl %fs;popal": 3,
                "popal;lssl -(%ebp), %esp;popl %ebp;iretl;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %eax, ;movl (%ebx), %eax;movw %ax, ;movl (%ebx), %eax": 1,
                "addl $, %eax;pushl %ebx;movw %ds, %bx;pushw %bx;movw $, %bx": 1,
                "movw %ss, (%ebx);lssl (%ebx), %esp;movw $, (%ebx);movl $, (%ebx);movw (%ebx), %ax": 1,
                "pushfl;andl $, (%esp);popfl;iretl;int": 1,
                "popfl;iretl;int;int;int": 1,
                "movl , %ecx;pushl $;pushl ;addl $, %ecx;pushl %ecx": 1,
                "pushl ;addl $, %ecx;pushl %ecx;calll *%eax;movl %eax, ": 1,
                "testb $, ;je  <VdmTraceEvent+>;pushl %ebx;pushl %esi;calll - <getAX>": 1,
                "incl %eax;incl %eax;pushl %eax;calll - <getSS>;movzwl %ax, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;calll - <DBGNotifyDebugged+>;testl %eax, %eax": 2,
                "pushl $;calll *;popl %esi;leave;retl": 1,
                "je  <VdmTraceEvent+>;cmpl $, %eax;jae  <VdmTraceEvent+>;movl -(%ebp), %edx;jmp  <VdmTraceEvent+>": 1,
                "decl %edi;testl %ebx, %ebx;je  <VdmTraceEvent+>;movb %al, (%ecx);movl -(%ebp), %ecx": 1,
                "movl %esp, %ebp;movl , %eax;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, %eax": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %eax;pushl %esi;je  <GetDOSAppName+>;movzwl (%eax), %eax": 1,
                "jne  <GetDOSAppName+>;calll - <getMSW>;testb $, %al;jne  <GetDOSAppName+>;pushl %ebx": 1,
                "movzbl %al, %eax;decl %eax;je  <GetDOSAppName+>;decl %eax;jne  <GetDOSAppName+>": 1,
                "movzwl %ax, %eax;orl %eax, %edi;pushl %edi;pushl %esi;calll - <getES>": 1,
                "movzwl %ax, %eax;orl %eax, %edi;pushl %edi;pushl %esi;pushl $": 1,
                "pushl %esi;movb $, -(%ebp);calll *;pushl %esi;movl %eax, -(%ebp)": 1,
                "movl , %esi;calll *%esi;cmpl %ebx, %eax;je  <demFileDelete+>;cmpl $, %eax": 1,
                "cmpl %ebx, %eax;je  <demFileDelete+>;movb %bl, (%eax);leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <VDDTerminateVDM+>;testl %eax, %eax;je  <demFileDelete+>": 1,
                "cmpl $, %eax;je  <demFileDelete+>;pushl $;calll *%edi;calll *%esi": 1,
                "calll  <SetShadowDescriptorEntries+>;cmpl %ebx, %eax;popl %ecx;popl %ecx;je  <demFileDelete+>": 1,
                "jmp  <demFileDelete+>;pushl %edi;pushl %esi;calll - <getDI+>;testl %eax, %eax": 1,
                "je  <demFileDelete+>;movsbl %bl, %eax;pushl %esi;pushl %eax;leal -(%ebp), %eax": 1,
                "movl %esp, %ebp;pushl %ecx;movl (%ebp), %eax;testl %eax, %eax;jne  <VDDReleaseDosHandle+>": 1,
                "jne  <VDDReleaseDosHandle+>;movl , %eax;movzwl (%eax), %eax;shll $, %eax;leal (%ebp), %ecx": 1,
                "shll $, %eax;leal (%ebp), %ecx;pushl %ecx;leal -(%ebp), %ecx;pushl %ecx": 1,
                "movl , %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %ecx;movl %eax, -(%ebp);movzwl (%esi), %eax": 1,
                "movw %ax, (%ecx);xorl %eax, %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "pushl $;leal -(%ebp), %eax;leal -(%ebp), %ecx;pushl %eax;movl $, -(%ebp)": 1,
                "movl %ecx, -(%ebp);calll *;testl %eax, %eax;jl  <VDDReleaseDosHandle+>;andw $, -(%ebp)": 1,
                "testl %eax, %eax;jl  <VDDReleaseDosHandle+>;andw $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "shrl %eax;movw -(%ecx,%eax,), %ax;cmpw , %ax;je  <VDDReleaseDosHandle+>;pushl $": 1,
                "xorl %eax, %eax;movw , %ax;pushl %eax;calll - <setDS>;xorl %eax, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl %esi;calll *": 1,
                "pushl %eax;calll *;pushl $;pushl -(%ebp);calll  <SetShadowDescriptorEntries+>": 1,
                "cmpl -(%ebp), %eax;popl %ecx;popl %ecx;jne  <VDDReleaseDosHandle+>;pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;movb %bl, %al;popl %ebx": 1,
                "pushl %eax;calll *;movb %bl, %al;popl %ebx;movl -(%ebp), %ecx": 1,
                "movl (%ebp), %esi;cmpl $-, (%esi);jne  <VDDReleaseDosHandle+>;movl $, %eax;jmp  <VDDReleaseDosHandle+>": 2,
                "movw (%esi), %ax;pushl %ebx;movl , %ebx;pushl %edi;movw %ax, -(%ebp)": 1,
                "testl %eax, %eax;jge  <VDDReleaseDosHandle+>;cmpl $, %eax;je  <VDDReleaseDosHandle+>;cmpl $, %eax": 1,
                "pushl %ebx;pushl %ebx;pushl $;pushl (%esi);leal -(%ebp), %eax": 1,
                "cmpl %ebx, %eax;je  <VDDReleaseDosHandle+>;addl %edi, %eax;movl %eax, (%esi);jmp  <VDDReleaseDosHandle+>": 1,
                "movl %ebx, (%esi);movl (%edi), %eax;cmpl (%esi), %eax;jne - <VDDReleaseDosHandle+>;movw (%edi), %ax": 1,
                "subl %edx, %eax;je  <VDDReleaseDosHandle+>;movl (%esi), %edi;subl %eax, %edi;pushl %edi": 1,
                "jmp  <VDDReleaseDosHandle+>;addl %edx, %ecx;movl (%ecx), %edx;testl %edx, %edx;jne - <VDDReleaseDosHandle+>": 1,
                "xorl %ebx, %ebx;jmp  <VDDReleaseDosHandle+>;xorl %ecx, %ecx;pushl %ecx;pushl %ecx": 1,
                "pushl %ecx;pushl (%esi);calll *;cmpl $, %eax;je  <VDDReleaseDosHandle+>": 1,
                "cmpl $, %eax;je  <VDDReleaseDosHandle+>;cmpl $, %eax;je  <VDDReleaseDosHandle+>;testl %eax, %eax": 1,
                "subl $, %esp;movl , %eax;pushl %esi;pushl $;pushl $": 1,
                "pushl $;pushl %eax;calll  <SetShadowDescriptorEntries+>;movl %eax, %esi;negl %esi": 1,
                "movb $, -(%ebp);jne  <VDDReleaseDosHandle+>;andl $, (%ebx);jmp  <VDDReleaseDosHandle+>;andl $, %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;leal (%edi), %esi;pushl %eax;movl %esi, -(%ebp)": 1,
                "pushl %eax;movl %esi, -(%ebp);movw $, -(%ebp);calll *;testb %al, %al": 1,
                "leal -(%ebp), %eax;movl %esi, %edx;movl %eax, %ecx;subl %ecx, %edx;popl %esi": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;leal (%esi), %eax;addl $, %ebx": 1,
                "jne  <VDDReleaseDosHandle+>;calll - <getDI+>;pushl $;leal (%esi), %eax;pushl $": 1,
                "calll *;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %edi;movl (%ebp), %edi;je  <VDDReleaseDosHandle+>;cmpb $, (%edi);jne  <VDDReleaseDosHandle+>": 1,
                "pushl %esi;leal (%edi), %ebx;movl (%ebx), %esi;jmp  <VDDReleaseDosHandle+>;cmpl $, ": 1,
                "andl $, (%esi);cmpl $, ;jae  <VDDReleaseDosHandle+>;cmpl $, ;jb  <VDDReleaseDosHandle+>": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;movl (%esi), %ecx;pushl %edi": 1,
                "pushl %eax;calll *%edi;pushl %esi;calll - <getDX+>;popl %ecx": 1,
                "jne  <VDDReleaseDosHandle+>;testb %cl, %cl;jne  <VDDReleaseDosHandle+>;xorl %eax, %eax;incl %eax": 1,
                "testb %cl, %cl;jne  <VDDReleaseDosHandle+>;xorl %eax, %eax;incl %eax;movl -(%ebp), %ecx": 1,
                "je  <VDDReleaseDosHandle+>;cmpb $, %cl;je  <VDDReleaseDosHandle+>;incl %edx;testw %bx, %bx": 1,
                "movb (%edi), %cl;movb (%edx), %al;addl %esi, %ebx;cmpb %al, %cl;jne  <VDDReleaseDosHandle+>": 1,
                "pushl $;calll - <ResumeTimerThread+>;testl %eax, %eax;popl %ecx;jne  <VDDReleaseDosHandle+>": 1,
                "pushl %eax;pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll - <getCF+>": 3,
                "leal -(%ebp), %edx;pushl %edi;movl (%ebp), %edi;subl %eax, %edx;xorl %ebx, %ebx": 1,
                "cmpl %ebx, %esi;popl %ecx;popl %ecx;je  <VDDReleaseDosHandle+>;incl %esi": 1,
                "movb %bl, (%esi);movl %esi, %eax;subl %esi, %edx;movb (%eax), %cl;movb %cl, (%edx,%eax)": 1,
                "pushl %eax;calll *;cmpl $-, %eax;je  <VDDReleaseDosHandle+>;incl %esi": 1,
                "xorl %eax, %eax;movb (%eax), %cl;movb %cl, -(%ebp,%eax);incl %eax;cmpb %bl, %cl": 1,
                "movb (%eax), %cl;movb %cl, -(%ebp,%eax);incl %eax;cmpb %bl, %cl;jne - <VDDReleaseDosHandle+>": 1,
                "leal -(%ebp), %eax;pushl %eax;movw $, -(%ebp);calll - <getBL+>;testl %eax, %eax": 1,
                "movw $, -(%ebp);calll - <getBL+>;testl %eax, %eax;jne  <VDDReleaseDosHandle+>;pushl $": 1,
                "testb %al, %al;je  <VDDReleaseDosHandle+>;calll - <getDL>;movzbw %al, %ax;jmp  <VDDReleaseDosHandle+>": 2,
                "je  <VDDReleaseDosHandle+>;calll - <getDL>;movzbw %al, %ax;jmp  <VDDReleaseDosHandle+>;xorl %eax, %eax": 2,
                "calll *;pushl %eax;jmp  <VDDReleaseDosHandle+>;pushl %ebx;pushl %esi": 1,
                "cmpl %edi, -(%ebp);jne  <VDDReleaseDosHandle+>;movl %edi, (%esi);movl %edi, (%esi);pushl %edi": 1,
                "movl %edi, (%esi);movl %edi, (%esi);pushl %edi;jmp  <VDDReleaseDosHandle+>;cmpl %edi, (%esi)": 1,
                "cmpl %ebx, (%esi);jne  <VDDReleaseDosHandle+>;cmpl %ebx, %edi;je  <VDDReleaseDosHandle+>;movb %bl, (%edi)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl (%ebp);pushl (%ebp)": 5,
                "pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp);je  <VDDReleaseDosHandle+>;movl , %eax": 1,
                "movl $, ;jmp  <VDDReleaseDosHandle+>;movl , %eax;movl $, ;movl %eax, ": 1,
                "stosl %eax, %es:(%edi);stosl %eax, %es:(%edi);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movzwl (%edx), %esi;cmpl %ecx, %esi;jae  <VDDReleaseDosHandle+>;xorl %eax, %eax;jmp  <VDDReleaseDosHandle+>": 1,
                "movw (%edi), %bx;xorl %eax, %eax;movw (%esi), %ax;decl %ecx;incl %esi": 1,
                "incl %edi;cmpw %bx, %ax;movl %ecx, (%ebp);je  <VDDReleaseDosHandle+>;pushl %eax": 1,
                "pushl %eax;calll *;pushl %ebx;movl %eax, (%ebp);calll *": 1,
                "movw (%ebp), %di;cmpw %ax, %di;jbe  <VDDReleaseDosHandle+>;xorl %eax, %eax;jmp  <VDDReleaseDosHandle+>": 1,
                "leal (%eax,%edx), %ecx;pushl %ecx;pushl %eax;calll - <getDI+>;movw (%ebp), %ax": 1,
                "movzwl (%eax), %ecx;pushl %ebx;pushl %esi;movl (%eax), %esi;movl %ecx, %ebx": 1,
                "movl (%eax), %esi;movl %ecx, %ebx;shrl %ebx;addl %ecx, %esi;cmpl $, (%ebp)": 1,
                "pushl %edi;je  <VDDReleaseDosHandle+>;pushl (%ebp);movl , %edi;calll *%edi": 1,
                "movw (%ebp), %ax;decl %esi;decl %esi;cmpw (%esi), %ax;je  <VDDReleaseDosHandle+>": 1,
                "cmpw $, (%esi);jbe  <VDDReleaseDosHandle+>;movl (%esi), %eax;incl %eax;incl %eax": 1,
                "incl %eax;incl %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "calll *;testl %eax, %eax;jne  <VDDReleaseDosHandle+>;calll *;orl $, %eax": 4,
                "movl $, %eax;jmp  <VDDReleaseDosHandle+>;pushl %eax;leal -(%esi,%edi), %eax;pushl %edi": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;movl -(%ebp), %eax;andl $, %ecx;addl $-, %eax": 1,
                "addl $-, %eax;rep  movsb (%esi), %es:(%edi);addw %ax, (%ebx);addl $, %esp;xorl %eax, %eax": 1,
                "pushl $;pushl (%esi);pushl %eax;movl (%ebp), %eax;pushl (%eax)": 1,
                "cmpl $, (%ebp);je  <VDDReleaseDosHandle+>;pushl $;pushl %esi;calll - <VDDReleaseDosHandle+>": 1,
                "pushl %esi;movl (%ebp), %esi;cmpl $, %esi;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movw $, -(%ebp);calll *;testl %eax, %eax;jl - <VDDReleaseDosHandle+>;cmpw %di, -(%ebp)": 1,
                "cmpw %di, -(%ebp);pushl %ebx;movl %edi, -(%ebp);jbe  <VDDReleaseDosHandle+>;decl %esi": 1,
                "calll *;testl %eax, %eax;je  <VDDReleaseDosHandle+>;cmpl $, -(%ebp);jne  <VDDReleaseDosHandle+>": 1,
                "jg  <VDDReleaseDosHandle+>;movl $, -(%ebp);cmpl $, %edi;jl  <VDDReleaseDosHandle+>;cmpl $, -(%ebp)": 1,
                "incl %eax;popl %ebx;popl %edi;movl -(%ebp), %ecx;popl %esi": 1,
                "je  <VDDReleaseDosHandle+>;cmpw $, %cx;je  <VDDReleaseDosHandle+>;cmpw $, %cx;jne  <VDDReleaseDosHandle+>": 1,
                "testl %eax, %eax;jl  <demIsShortPathName+>;pushl (%esi);calll - <VDDReleaseDosHandle+>;cmpl %edi, %eax": 1,
                "pushl %eax;movl %esi, %eax;subl %ecx, %eax;sarl %eax;pushl %eax": 1,
                "movl %eax, %edi;orl $, %edi;jmp  <demIsShortPathName+>;cmpw %ax, -(%ebp);movw %ax, -(%ebp)": 1,
                "je  <demIsShortPathName+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <VDDReleaseDosHandle+>": 1,
                "cmpw $, %ax;jne  <demIsShortPathName+>;decl %ecx;incl %esi;incl %esi": 1,
                "jne  <demIsShortPathName+>;decl %ecx;incl %esi;incl %esi;movw (%esi), %ax": 1,
                "incl %esi;movw (%esi), %ax;cmpw %bx, %ax;jne - <demIsShortPathName+>;movl -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;movl $, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp)": 1,
                "jae  <demIsShortPathName+>;movl -(%ebp), %edi;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <getDI+>;movl -(%ebp), %eax;shrl %eax;addl $, %esp;cmpw %bx, (%esi)": 1,
                "incl %esi;incl %esi;jmp - <demIsShortPathName+>;movl $, %edi;jmp  <demIsShortPathName+>": 1,
                "je  <demIsShortPathName+>;decl %eax;je  <demIsShortPathName+>;movl $, %esi;jmp  <demIsShortPathName+>": 1,
                "calll - <VDDReleaseDosHandle+>;jmp  <demIsShortPathName+>;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <VDDReleaseDosHandle+>;movl %eax, %esi;testl %esi, %esi;jl  <demIsShortPathName+>;andw $, -(%ebp)": 1,
                "negb %al;sbbl %eax, %eax;andl $, %eax;addl $, %eax;popl %ebp": 1,
                "andw $, -(%ebp);movl %eax, -(%ebp);movl (%ebp), %eax;addl $, %eax;pushl %esi": 1,
                "movl %eax, -(%ebp);pushl %esi;leal -(%ebp), %eax;pushl %eax;movw %di, -(%ebp)": 1,
                "pushl %eax;calll *;movl %fs:, %eax;leal (%eax), %esi;pushl %edi": 1,
                "movl (%ebp), %eax;pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi": 1,
                "orl $, %esi;cmpl $-, %ebx;je  <demIsShortPathName+>;pushl %ebx;calll *": 1,
                "cmpl $-, %ebx;je  <demIsShortPathName+>;pushl %ebx;calll *;movl %esi, %eax": 1,
                "calll *;testl %eax, %eax;je  <demIsShortPathName+>;pushl (%ebp);pushl (%ebp)": 1,
                "jmp  <demIsShortPathName+>;movl , %edi;cmpl %ecx, %edi;jb  <demIsShortPathName+>;leal (%ecx), %esi": 1,
                "jmp - <demIsShortPathName+>;int;int;int;int": 2,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;pushl %edi;movl %ebx, %eax": 1,
                "cltd;popl %edi;idivl %edi;movl , %esi;decl %esi": 1,
                "idivl %edi;movl , %esi;decl %esi;cmpl %esi, %eax;jne  <demIsShortPathName+>": 1,
                "movl , %esi;decl %esi;cmpl %esi, %eax;jne  <demIsShortPathName+>;movl , %eax": 1,
                "cmpl $-, %eax;jne - <demIsShortPathName+>;movl %eax, ;movl %esi, ;jmp  <demIsShortPathName+>": 1,
                "movl %eax, ;movl %esi, ;jmp  <demIsShortPathName+>;movl , %edi;movl %edi, %edx": 1,
                "orl $-, %esi;cmpl $-, %edx;je  <demIsShortPathName+>;cmpl %eax, %edx;jbe  <demIsShortPathName+>": 1,
                "leal (%esi,%esi,), %edx;leal (%ecx,%edx,), %ecx;movl (%ecx), %edx;movl %edx, (%ebx);movl %eax, (%ecx)": 1,
                "pushl %ebp;movl %esp, %ebp;xorl %eax, %eax;testb $, (%ebp);je  <demIsShortPathName+>": 1,
                "testb $, (%ebp);je  <demIsShortPathName+>;movl , %edx;andl $, (%ebp);testl %edx, %edx": 1,
                "subl %edi, %eax;je  <demIsShortPathName+>;decl %eax;je  <demIsShortPathName+>;movl $, %edi": 1,
                "ja  <demIsShortPathName+>;movl (%ebp), %esi;movl %edx, (%esi);movl , %eax;movl %eax, (%esi)": 1,
                "movl %edx, (%ecx);movl (%eax), %eax;movl %eax, (%ecx);movl %edi, %eax;popl %edi": 1,
                "subl $, %esp;andl $, -(%ebp);pushl %ebx;pushl %esi;movl (%ebp), %esi": 2,
                "calll - <demIsShortPathName+>;testl %eax, %eax;jl  <demIsShortPathName+>;leal (%esi), %eax;cmpl $, (%eax)": 2,
                "cmpl $, (%eax);jne  <demIsShortPathName+>;cmpl $, (%esi);jne  <demIsShortPathName+>;movl (%ebx), %ecx": 2,
                "movl (%ebp), %eax;testl %eax, %eax;jne  <demIsShortPathName+>;leal (%edi), %eax;movl , %ebx": 1,
                "cmpl $, %eax;jne  <demIsShortPathName+>;orl $, -(%ebp);movl (%esi), %eax;movw -(%ebp), %cx": 1,
                "movw -(%ebp), %cx;movl %eax, (%edi);movl (%esi), %eax;movl %eax, (%edi);movl (%esi), %eax": 1,
                "testl %eax, %eax;jl  <demIsShortPathName+>;cmpw $, (%ebp);jne  <demIsShortPathName+>;cmpw $, (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edi;calll - <demIsShortPathName+>;movl %eax, %esi": 1,
                "movl %eax, %esi;testl %esi, %esi;jge  <demIsShortPathName+>;cmpl $-, -(%ebp);jmp  <demIsShortPathName+>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;pushl %esi;pushl (%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);calll - <demIsShortPathName+>;testl %eax, %eax;je  <demLFNCleanup+>;movl (%eax), %ecx": 1,
                "movw (%eax), %cx;pushl %edi;leal (%eax), %edi;pushl %ecx;xorl %ecx, %ecx": 1,
                "jl  <demLFNCleanup+>;pushl -(%ebp);movzwl (%ebp), %eax;pushl -(%ebp);pushl -(%ebp)": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <demLFNCleanup+>;movl (%esi), %eax;cmpl $-, %eax": 1,
                "cmpl $-, %eax;je  <demLFNCleanup+>;pushl %eax;calll *;movl %eax, %edi": 1,
                "jmp  <demLFNCleanup+>;xorl %eax, %eax;popl %esi;popl %ebx;popl %ebp": 1,
                "cmpw $, %bx;ja  <demLFNCleanup+>;movb %bl, %al;addb $, %al;movb %al, ": 1,
                "je  <demLFNCleanup+>;pushl $;calll *;cmpl $, %eax;jbe  <demLFNCleanup+>": 1,
                "je  <demLFNCleanup+>;pushl $;pushl %esi;addb $, %al;movl $, %edi": 1,
                "addb $, %al;movl $, %edi;pushl %edi;movb %al, ;calll - <demGetPhysicalDriveType+>": 2,
                "andb $-, (%esi);movw $, (%esi);popl %edi;xorl %eax, %eax;popl %esi": 1,
                "movb %bl, (%esi);movb $, (%esi);movb $, (%esi);xorl %eax, %eax;jmp  <demLFNCleanup+>": 1,
                "movl %esp, %ebp;movl , %eax;testl %eax, %eax;je  <demLFNCleanup+>;popl %ebp": 1,
                "movl , %eax;testl %eax, %eax;je  <demLFNCleanup+>;popl %ebp;jmpl *%eax": 1,
                "je  <demLFNCleanup+>;pushl %edi;pushl %esi;calll - <demLFNCleanup+>;testl %eax, %eax": 1,
                "pushl %edi;pushl %esi;calll - <demLFNCleanup+>;testl %eax, %eax;je  <demLFNCleanup+>": 1,
                "je  <demLFNCleanup+>;testb $, (%edi);jne  <demLFNCleanup+>;pushl (%ebp);pushl %edi": 1,
                "pushl %eax;calll - <demLFNCleanup+>;movl %eax, %esi;testl %esi, %esi;je  <demLFNCleanup+>": 1,
                "jne - <demSetCurrentDirectoryLCDS+>;xorl %eax, %eax;popl %esi;popl %ebp;retl $": 1,
                "testl %esi, %esi;je  <demGetCurrentDirectoryLCDS+>;subl %ecx, %esi;movb (%ecx), %dl;movb %dl, (%esi,%ecx)": 1,
                "calll *;orl $, %eax;jmp  <demGetCurrentDirectoryLCDS+>;calll - <demClientErrorEx+>;cmpl $-, %eax": 1,
                "movl %eax, %esi;orl $, %esi;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "jne  <demGetCurrentDirectoryLCDS+>;leal -(%ebp), %eax;pushl %eax;pushl %edi;calll - <demLFNCleanup+>": 4,
                "pushl %eax;pushl %edi;calll - <demGetCurrentDirectoryLCDS>;testl %eax, %eax;jge  <demGetCurrentDirectoryLCDS+>": 1,
                "testl %eax, %eax;jge  <demGetCurrentDirectoryLCDS+>;testl $, %ebx;jne  <demGetCurrentDirectoryLCDS+>;leal -(%ebp), %eax": 1,
                "testb %dl, %dl;jne - <demGetCurrentDirectoryLCDS+>;subl %edi, %ecx;cmpl $, %ecx;jbe  <demGetCurrentDirectoryLCDS+>": 1,
                "movl $, %esi;je  <demGetCurrentDirectoryLCDS+>;cmpw %di, (%eax);je  <demGetCurrentDirectoryLCDS+>;movl %eax, %esi": 1,
                "movw $, -(%ebp);calll *;cmpl %edi, %eax;jne  <demGetCurrentDirectoryLCDS+>;calll *": 1,
                "jne  <demGetCurrentDirectoryLCDS+>;calll *;orl $, %eax;jmp  <demGetCurrentDirectoryLCDS+>;cmpw %ax, -(%ebp)": 1,
                "jmp  <demGetCurrentDirectoryLCDS+>;cmpw %ax, -(%ebp);movw %ax, -(%ebp);ja  <demGetCurrentDirectoryLCDS+>;movl $, %eax": 1,
                "pushl (%ebp);pushl %esi;calll - <demGetCurrentDirectoryLCDS+>;popl %esi;leave": 1,
                "movl %eax, %esi;testl %esi, %esi;jge  <demSetCurrentDirectoryGetDrive+>;cmpl $, %esi;jne  <demSetCurrentDirectoryGetDrive+>": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;pushl %esi;movl (%ebp), %esi": 1,
                "pushl %ecx;pushl %eax;calll - <demGetCurrentDirectoryLCDS+>;testl %eax, %eax;jl  <demLFNGetCurrentDirectory+>": 1,
                "calll *;movl %eax, %esi;testl %esi, %esi;jge  <demLFNGetCurrentDirectory+>;leal -(%ebp), %eax": 1,
                "pushl %eax;calll *;jmp  <demLFNGetCurrentDirectory+>;leal -(%ebp), %eax;pushl %eax": 1,
                "leal (%esi), %edi;pushl %edi;pushl %eax;pushl %eax;pushl %eax": 1,
                "pushl %eax;pushl (%ebp);xorl %ebx, %ebx;calll - <getCF+>;testl %eax, %eax": 1,
                "calll - <getCF+>;testl %eax, %eax;jne  <demLFNGetCurrentDirectory+>;calll *;movl %eax, %ebx": 1,
                "jmp  <demLFNGetCurrentDirectory+>;movl (%ebp), %eax;andl $, %eax;orl $, %eax;movl %eax, (%esi)": 1,
                "pushl %eax;calll *;testl %eax, %eax;jne  <demLFNGetCurrentDirectory+>;calll *": 1,
                "calll *;cmpw $, -(%ebp);jl  <demLFNGetCurrentDirectory+>;cmpw $, -(%ebp);jg  <demLFNGetCurrentDirectory+>": 1,
                "orl -(%ebp), %eax;xorl %edx, %edx;movw -(%ebp), %dx;shll $, %eax;orl -(%ebp), %eax": 1,
                "shll $, %eax;orl -(%ebp), %eax;shrw %dx;movw %ax, (%ecx);movl -(%ebp), %eax": 1,
                "decl %eax;je  <demLFNGetCurrentDirectory+>;decl %eax;decl %eax;jne  <demLFNGetCurrentDirectory+>": 1,
                "movl %esi, %eax;popl %edi;popl %esi;leave;retl $": 2,
                "movl %esp, %ebp;subl $, %esp;pushl %esi;pushl $;pushl $": 1,
                "xorl %esi, %esi;calll *;testl %eax, %eax;jl  <demLFNGetCurrentDirectory+>;testb $, -(%ebp)": 1,
                "movl (%ebp), %edx;pushl %esi;movl %eax, -(%ebp);pushl $;leal -(%ebp), %eax": 1,
                "jne  <demLFNGetCurrentDirectory+>;calll *;orl $, %eax;jmp  <demLFNGetCurrentDirectory+>;cmpw %ax, -(%ebp)": 1,
                "movl $, %eax;cmpl %esi, %eax;jl  <demLFNGetCurrentDirectory+>;pushl -(%ebp);calll *": 1,
                "pushl %eax;movw %si, -(%ebp);calll *;movl %eax, %esi;subl $, %esi": 1,
                "pushl %ecx;pushl %ecx;movl (%ebp), %eax;pushl %esi;xorl %ecx, %ecx": 1,
                "jne  <demLFNGetCurrentDirectory+>;leal -(%ebp), %esi;jmp  <demLFNGetCurrentDirectory+>;leal -(%ebp), %edx;jmp  <demLFNGetCurrentDirectory+>": 1,
                "jge  <demLFNGetCurrentDirectory+>;cmpl $, %eax;jne  <demLFNGetCurrentDirectory+>;cmpl $, (%ebp);jne  <demLFNGetCurrentDirectory+>": 1,
                "testl %eax, %eax;jge  <demGetFileTimeByHandle_WOW+>;cmpl $, %eax;jne  <demGetFileTimeByHandle_WOW+>;xorl %eax, %eax": 1,
                "movzwl -(%ebp), %eax;movzwl -(%ebp), %ecx;shll $, %eax;orl %ecx, %eax;jmp  <demGetFileTimeByHandle_WOW+>": 1,
                "je  <demGetFileTimeByHandle_WOW+>;subl $, %eax;je  <demGetFileTimeByHandle_WOW+>;decl %eax;decl %eax": 1,
                "leal -(%ebp), %edi;movw %dx, (%ecx);pushl %ecx;leal -(%ebp), %eax;pushl %eax": 1,
                "popl %edi;movl %esi, %eax;popl %esi;popl %ebx;leave": 1,
                "je  <demGetFileTimeByHandle_WOW+>;cmpl $, %ecx;je  <demGetFileTimeByHandle_WOW+>;cmpl $, %ecx;jne  <demGetFileTimeByHandle_WOW+>": 1,
                "movl %ebx, (%ebp);jmp  <demGetFileTimeByHandle_WOW+>;andl $, (%ebp);jmp  <demGetFileTimeByHandle_WOW+>;movl $, (%ebp)": 1,
                "testw %si, %si;jge  <demGetFileTimeByHandle_WOW+>;pushl %edi;calll *;movswl %si, %eax": 1,
                "jge  <demGetFileTimeByHandle_WOW+>;pushl %edi;calll *;movswl %si, %eax;negl %eax": 1,
                "shll $, %eax;andl $, %ecx;movw %cx, (%edx);movl -(%ebp), %ecx;movb $, (%ecx)": 1,
                "pushl %edi;pushl $;pushl %esi;calll - <VDDReleaseDosHandle+>;testl %eax, %eax": 2,
                "pushl $;pushl $;pushl (%ebp);pushl $;calll - <VDDRetrieveNtHandle>": 1,
                "xorl %ebx, %ebx;subl %ebx, %eax;je  <demGetFileTimeByHandle_WOW+>;decl %eax;je  <demGetFileTimeByHandle_WOW+>": 1,
                "pushl %eax;calll - <VDDReleaseDosHandle+>;cmpl %ebx, %eax;jl  <demGetFileTimeByHandle_WOW+>;pushl $": 2,
                "movw $, -(%ebp);je  <demGetFileTimeByHandle_WOW+>;cmpl $, %eax;je  <demGetFileTimeByHandle_WOW+>;movl $, %eax": 1,
                "movl (%eax), %eax;movl %eax, %ecx;shrl $, %ecx;movzwl %ax, %eax;shll $, %ecx": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "movb (%eax), %cl;movb %cl, (%edx,%eax);incl %eax;testb %cl, %cl;jne - <demGetFileTimeByHandle_WOW+>": 1,
                "jne - <demGetFileTimeByHandle_WOW+>;leal -(%ebp), %eax;leal (%eax), %edx;movb (%eax), %cl;incl %eax": 1,
                "leal (%eax,%esi), %ecx;movb $, (%ecx);incl %ecx;pushl %ecx;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;xorl %ebx, %ebx;pushl %ebx;leal -(%ebp), %eax": 1,
                "pushl (%eax);calll *;testb %al, %al;jne  <demWOWLFNCloseSearchHandle+>;movl $, %eax": 1,
                "movl %fs:, %eax;movl (%eax), %eax;pushl %edi;pushl %ebx;pushl (%eax)": 3,
                "cmpl %ebx, %eax;jge  <demWOWLFNCloseSearchHandle+>;cmpl $, %eax;jne  <demWOWLFNCloseSearchHandle+>;cmpl $, (%ebp)": 1,
                "calll *;cmpl $-, %eax;je  <demWOWLFNCloseSearchHandle+>;movl (%ebp), %ecx;andl $, %eax": 1,
                "cmpl $-, %eax;je  <demWOWLFNCloseSearchHandle+>;movl (%ebp), %ecx;andl $, %eax;movw %ax, (%ecx)": 1,
                "jmp  <demWOWLFNCloseSearchHandle+>;andl $, %eax;pushl %eax;pushl (%esi);calll *": 1,
                "calll *;cmpl $-, %eax;jne  <demWOWLFNCloseSearchHandle+>;calll *;movl %eax, %edi": 1,
                "movl %edi, %eax;popl %edi;popl %esi;leave;retl $": 1,
                "retl $;jno - <demWOWLFNCloseSearchHandle+>;addb $, %al;movb -(%esi), %dl;addb $, %al": 1,
                "movw %ax, (%ebx);jne  <demWOWLFNCloseSearchHandle+>;movzbl %al, %eax;cmpl $, %eax;jg  <demWOWLFNCloseSearchHandle+>": 1,
                "cmpl $, %eax;jne  <demWOWLFNCloseSearchHandle+>;movzbw (%esi), %cx;xorl %eax, %eax;leal -(%ebp), %edi": 1,
                "stosl %eax, %es:(%edi);movzwl %cx, %ebx;stosl %eax, %es:(%edi);movl %ebx, %eax;decl %eax": 1,
                "calll - <SimpGetVDMPointer>;pushl %eax;pushl %ebx;calll - <demWOWLFNCloseSearchHandle+>;movl %eax, %edi": 1,
                "movl -(%ebp), %eax;shrl $, %eax;movw %ax, (%esi);movw -(%ebp), %ax;movl -(%ebp), %ecx": 1,
                "movzbw (%esi), %ax;pushl %eax;movzwl (%esi), %eax;pushl (%ebp);shll $, %eax": 2,
                "movzwl (%esi), %ecx;pushl %eax;movzwl (%esi), %eax;pushl (%ebp);shll $, %eax": 3,
                "andw $, (%ebx);jmp  <demWOWLFNCloseSearchHandle+>;subl $, %eax;je  <demWOWLFNCloseSearchHandle+>;subl $, %eax": 1,
                "movw %ax, (%esi);movw -(%ebp), %ax;movw %ax, (%esi);movb -(%ebp), %al;movb %al, (%esi)": 1,
                "orl %ecx, %eax;pushl %eax;calll - <SimpGetVDMPointer>;pushl %eax;calll - <getDI+>": 1,
                "calll - <SimpGetVDMPointer>;pushl %eax;calll - <getDI+>;addl $, %esp;jmp  <demWOWLFNCloseSearchHandle+>": 1,
                "calll - <demIsShortPathName+>;movl -(%ebp), %ecx;movl %edi, %eax;popl %edi;popl %esi": 1,
                "pushl $;calll - <demWOWLFNCloseSearchHandle+>;pushl -(%ebp);movl %eax, %edi;calll - <setAX>": 1,
                "xorl %esi, %esi;movw (%edi), %si;andl $, %esi;testl %eax, %eax;jl  <demWOWLFNEntry+>": 1,
                "orl $, %esi;movw %si, (%edi);popl %edi;popl %esi;popl %ebp": 1,
                "decl %eax;je  <demWOWLFNEntry+>;xorb %al, %al;jmp  <demWOWLFNEntry+>;movb $, %al": 1,
                "popl %ecx;idivl %ecx;pushl %eax;calll - <setDL>;leave": 1,
                "movzbw %al, %ax;movw %ax, -(%ebp);calll - <getDL>;movzbw %al, %ax;movw %ax, -(%ebp)": 1,
                "movl (%ebp), %esi;addb $, %al;pushl $;movl $, -(%ebp);movb %al, -(%ebp)": 1,
                "calll - <getDX>;movzwl %ax, %eax;addl %eax, %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "movl -(%ebp), %eax;pushl $;popl %ecx;cmpl %ecx, %eax;ja  <demWOWLFNEntry+>": 1,
                "ja  <demWOWLFNEntry+>;jae  <demWOWLFNEntry+>;subl %eax, %ecx;movl %ecx, %edx;pushl %edi": 1,
                "movb (%eax), %cl;movb %cl, (%esi,%eax);incl %eax;testb %cl, %cl;jne - <demWOWLFNEntry+>": 1,
                "movl %esi, %eax;xorl %edx, %edx;divl %edi;addl %ebx, %eax;cmpl %ecx, %eax": 1,
                "cmpl %ecx, %eax;ja - <demWOWLFNEntry+>;jmp  <demWOWLFNEntry+>;cmpl %ecx, (%ebp);movl %ecx, %ebx": 1,
                "addl %eax, (%ebp);movl %esi, %eax;divl %edi;addl %eax, %ebx;xorl %edx, %edx": 1,
                "movzwl (%ebp), %eax;imull %esi, %eax;cmpl %ecx, %eax;jbe  <demWOWLFNEntry+>;cmpl %ecx, %esi": 1,
                "testl %eax, %eax;jne  <demWOWLFNEntry+>;calll - <getAL>;addb $, %al;pushl %eax": 1,
                "calll - <setAL>;pushl -(%ebp);calll - <setBX>;pushl -(%ebp);calll - <setCX>": 1,
                "pushl %ecx;calll - <getAL>;testb %al, %al;je  <demWOWLFNEntry+>;pushl $": 1,
                "calll - <getDX>;movzwl %ax, %eax;addl %eax, %esi;calll - <getBL>;movb %al, %bl": 1,
                "movb %al, %bl;pushl %esi;movb %bl, -(%ebp);pushl -(%ebp);calll - <demWOWLFNEntry+>": 1,
                "pushl %ebx;calll  <demWOWLFNEntry+>;movl %eax, %edi;testl %edi, %edi;je  <demWOWLFNEntry+>": 1,
                "pushl %edi;calll  <demWOWLFNEntry+>;testl %eax, %eax;jne  <demWOWLFNEntry+>;movb $, %al": 1,
                "addw (%esi), %cx;movl $, (%esi);movw %cx, (%esi);addl %ecx, %eax;movw %ax, (%esi)": 1,
                "je  <demWOWLFNEntry+>;pushl %esi;pushl ;movl $, %esi;pushl $": 1,
                "popl %esi;pushl $;calll - <setCF>;retl;int": 1,
                "testl %eax, %eax;jne - <demWOWLFNEntry+>;popl %ebp;retl $;int": 1,
                "pushl %eax;calll - <host_com_close+>;testl %eax, %eax;jne  <demWOWLFNEntry+>;andb $-, (%ebx)": 1,
                "jne  <demWOWLFNEntry+>;cmpw $, -(%ebp);movzwl -(%ebp), %eax;pushl %edi;pushl $": 1,
                "leal -(%ebp), %esi;rep  movsl (%esi), %es:(%edi);movsb (%esi), %es:(%edi);popl %edi;jne  <demWOWLFNEntry+>": 1,
                "pushl $;movl $, %esi;pushl %esi;calll - <getBP+>;popl %ecx": 1,
                "popl %ecx;popl %ecx;pushl %esi;calll  <VDDTerminateVDM+>;pushl $": 1,
                "pushl $;jmp  <demWOWLFNEntry+>;movl $, %eax;jmp  <demWOWLFNEntry+>;pushl $": 1,
                "je  <demWOWLFNEntry+>;cmpl $, %eax;je - <demWOWLFNEntry+>;cmpl $, %eax;je  <demWOWLFNEntry+>": 1,
                "jmp  <demWOWLFNEntry+>;pushl $;jmp  <demWOWLFNEntry+>;xorl %eax, %eax;incl %eax": 1,
                "je  <demWOWLFNEntry+>;decl %eax;decl %eax;je  <demWOWLFNEntry+>;subl $, %eax": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;movl (%ebp), %esi;testb $, (%esi)": 1,
                "addl (%ebp), %eax;movzwl (%esi), %edx;movzwl (%esi), %edi;imull %edx, %eax;movl %edi, %ecx": 1,
                "xorl %ebx, %ebx;movw (%esi), %bx;movzwl %bx, %ecx;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movb %dl, (%ebp);movl %edi, -(%ebp);je  <demWOWLFNEntry+>;cmpl $, (%ebp);setne %al": 1,
                "je  <demWOWLFNEntry+>;cmpl $, (%ebp);setne %al;addb $, %al;movb %al, -(%ebp)": 1,
                "pushl (%ebp);calll - <setDH>;xorl %eax, %eax;movb (%esi), %al;pushl %eax": 1,
                "calll - <setCX>;xorl %eax, %eax;movw , %ax;pushl %eax;calll - <setCS>": 1,
                "calll - <host_simulate>;calll - <getCF>;testl %eax, %eax;jne - <demWOWLFNEntry+>;addb %bl, (%ebp)": 1,
                "movw , %ax;cmpw (%ebp), %ax;jne  <demWOWLFNEntry+>;movw , %ax;cmpw -(%ebp), %ax": 2,
                "movl %edx, -(%ebp);jne  <demWOWLFNEntry+>;movzwl (%ebp), %edi;movl %eax, %ebx;movzwl (%ebp), %eax": 1,
                "testb $, (%eax);pushl %esi;je  <demWOWLFNEntry+>;pushl (%ebp);pushl (%ebp)": 1,
                "incl %eax;jmp  <demWOWLFNEntry+>;movzbl (%eax), %eax;pushl %ecx;pushl (%ebp)": 1,
                "movzwl %ax, %edi;calll - <getBX>;movl %eax, -(%ebp);calll - <getDS>;movl -(%ebp), %edx": 1,
                "cmpb , %al;jb  <demWOWLFNEntry+>;cmpb $, %al;jae  <demWOWLFNEntry+>;movl , %eax": 1,
                "calll - <host_direct_access_error>;pushl $;jmp  <demWOWLFNEntry+>;cmpl $, (%ebp);pushl %esi": 1,
                "pushl %eax;je  <demWOWLFNEntry+>;calll - <demWOWLFNEntry+>;jmp  <demWOWLFNEntry+>;calll - <demWOWLFNEntry+>": 1,
                "calll - <demWOWLFNEntry+>;cmpl %ebx, %eax;je  <demWOWLFNEntry+>;calll *;pushl %eax": 1,
                "movl -(%ebp), %ecx;negl %eax;sbbl %eax, %eax;incl %eax;calll - <getDI+>": 1,
                "calll - <getDX>;movzwl %ax, %esi;movzwl %bx, %eax;shll $, %eax;addl %eax, %esi": 1,
                "calll *;testl %eax, %eax;je  <demWOWLFNEntry+>;leal -(%ebp), %eax;pushl %eax": 4,
                "movb $, %bl;movb $, %cl;movb $, %dl;jmp  <demWOWLFNEntry+>;xorb %cl, %cl": 1,
                "movb %dl, (%esi);movl , %edx;movb %cl, (%edx);jmp  <demWOWLFNEntry+>;calll - <getZF>": 1,
                "pushl %eax;pushl %esi;pushl %edi;calll *;testl %eax, %eax": 1,
                "pushl %edi;calll - <demClientErrorEx+>;jmp  <demWOWLFNEntry+>;pushl $;calll - <setCF>": 1,
                "movzwl %ax, %eax;addl %eax, %esi;calll - <getDS>;movzwl %ax, %ebx;shll $, %ebx": 1,
                "testl %eax, %eax;je  <demWOWLFNEntry+>;leal -(%ebp), %eax;pushl %eax;calll - <getCX>": 1,
                "retl;calll - <getZF>;testl %eax, %eax;jne  <demWOWLFNEntry+>;andl %eax, -(%ebp)": 1,
                "cmpl $, %eax;jne  <demWOWLFNEntry+>;pushl %edi;calll - <setCF>;pushl %edi": 1,
                "sete %al;pushl %eax;calll - <setZF>;popl %edi;popl %esi": 1,
                "calll  <cmdCheckTemp+>;testl %eax, %eax;je  <demWOWLFNEntry+>;leal -(%ebp), %eax;pushl %eax": 1,
                "cmpl $, %eax;jne  <demWOWLFNEntry+>;pushl $;calll - <setCF>;jmp  <demWOWLFNEntry+>": 1,
                "calll - <demClientErrorEx+>;popl %edi;popl %esi;popl %ebx;retl": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll  <SetShadowDescriptorEntries+>": 1,
                "cmpb $, %al;jne  <demWOWLFNEntry+>;xorl %eax, %eax;movb (%esi), %al;pushl %eax": 1,
                "xorl %eax, %eax;movb (%esi), %al;pushl %eax;calll - <demWOWLFNEntry+>;movl %eax, %esi": 1,
                "pushl %eax;pushl %esi;calll  <VDDTerminateVDM+>;cmpl $-, %eax;movl %eax, -(%ebp)": 1,
                "decl %edi;movb (%edi), %cl;incl %edi;testb %cl, %cl;jne - <demWOWLFNEntry+>": 4,
                "incl %edi;testb %cl, %cl;jne - <demWOWLFNEntry+>;movl %eax, %ecx;shrl $, %ecx": 4,
                "pushl $;leal -(%ebp), %eax;andl $, %ecx;pushl %eax;rep  movsb (%esi), %es:(%edi)": 1,
                "movl %eax, %esi;pushl %esi;calll *;cmpl $, %esi;jb  <demWOWLFNEntry+>": 1,
                "cmpl $, %esi;jne  <demWOWLFNEntry+>;pushl -(%ebp);pushl $-;calll - <demClientErrorEx+>": 1,
                "pushl %edi;calll  <VDDTerminateVDM+>;cmpl $-, %eax;movl %eax, -(%ebp);jne  <demWOWLFNEntry+>": 1,
                "jne  <demWOWLFNEntry+>;calll *;cmpl $, %eax;je  <demWOWLFNEntry+>;cmpl $, %eax": 1,
                "calll  <SetShadowDescriptorEntries+>;movl %eax, %ebx;pushl $;incl %ebx;pushl %esi": 1,
                "pushl $;incl %ebx;pushl %esi;movl %ebx, -(%ebp);calll  <SetShadowDescriptorEntries+>": 1,
                "calll  <SetShadowDescriptorEntries+>;movl %eax, %esi;popl %ecx;incl %esi;popl %ecx": 1,
                "incl %eax;movb $, (%edx);jmp - <demWOWLFNEntry+>;pushl $;calll - <setCF>": 1,
                "pushl %esi;calll - <getAX>;movzwl %ax, %esi;shll $, %esi;calll - <getSI>": 1,
                "pushl %esi;calll - <demClientErrorEx+>;popl %esi;retl;pushl $": 1,
                "subl $, %esp;leal -(%ebp), %eax;pushl %eax;calll *;movl -(%ebp), %eax": 1,
                "andl $, %eax;orl %ecx, %eax;xorl %ecx, %ecx;movb -(%ebp), %cl;shrb %cl": 1,
                "movb -(%ebp), %cl;shrb %cl;shll $, %eax;andl $, %ecx;orl %ecx, %eax": 1,
                "calll - <getBX>;testw %ax, %ax;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <demWOWLFNEntry+>;pushl $-;pushl %esi;calll - <demClientErrorEx+>;jmp  <demWOWLFNEntry+>": 1,
                "calll - <setCX>;pushl $;calll - <setAX>;pushl $;jmp  <demWOWLFNEntry+>": 1,
                "pushl $;pushl %esi;calll *;orl $-, %edi;cmpl %edi, %eax": 1,
                "pushl %esi;calll - <demClientErrorEx+>;pushl %esi;calll *;jmp  <demWOWLFNEntry+>": 1,
                "calll - <getSI>;movzwl %ax, %eax;addl %eax, %esi;xorl %eax, %eax;pushl %eax": 1,
                "addl %eax, %esi;xorl %eax, %eax;pushl %eax;pushl %eax;pushl $": 1,
                "jne  <demWOWLFNEntry+>;xorl %eax, %eax;pushl %eax;calll - <setAX>;pushl -(%ebp)": 1,
                "cmpb $, %al;je  <demWOWLFNEntry+>;cmpb $, %al;je  <demWOWLFNEntry+>;cmpb $, %al": 1,
                "jne  <demWOWLFNEntry+>;pushl $;popl %edi;jmp  <demWOWLFNEntry+>;movl %edx, %edi": 1,
                "pushl %eax;pushl %edi;pushl -(%ebp);movl $, -(%ebp);pushl %esi": 1,
                "movl $, -(%ebp);pushl %esi;movl %edx, -(%ebp);calll - <setBP+>;movl %eax, %edi": 1,
                "testl %eax, %eax;je  <demWOWLFNEntry+>;pushl -(%ebp);calll - <setBX>;pushl -(%ebp)": 1,
                "movb %al, -(%ebp);jne  <demWOWLFNEntry+>;calll - <getSI>;movzwl %ax, %esi;shll $, %esi": 1,
                "addl %eax, %esi;pushl %esi;pushl -(%ebp);calll - <demWOWLFNEntry+>;testl %eax, %eax": 1,
                "pushl -(%ebp);calll - <demWOWLFNEntry+>;testl %eax, %eax;jne  <demWOWLFNEntry+>;calll *": 1,
                "je  <demWOWLFNEntry+>;leal -(%ebp), %eax;pushl %eax;xorl %eax, %eax;movb (%edi), %al": 2,
                "calll - <demWOWLFNEntry+>;testl %eax, %eax;je  <demWOWLFNEntry+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);movl (%eax), %ecx": 1,
                "movl %eax, %edi;xorl %eax, %eax;movb (%esi), %al;pushl %eax;calll - <host_com_close+>": 2,
                "calll - <getDX>;movzwl %ax, %eax;addl %eax, %esi;testb $, (%edi);movw (%esi), %ax": 1,
                "jae  <demWOWLFNEntry+>;cmpb $, (%esi);pushl $;jne  <demWOWLFNEntry+>;movb $, (%esi)": 1,
                "jne  <demWOWLFNEntry+>;pushl %ebx;pushl -(%ebp);pushl %edx;pushl %edi": 1,
                "movzwl (%esi), %eax;imull %edx, %eax;movzwl (%esi), %edx;addl %edx, %eax;movzwl (%edi), %edx": 2,
                "imull %edx, %eax;movzwl (%esi), %edx;addl %edx, %eax;movzwl (%edi), %edx;imull %edx, %eax": 2,
                "calll - <getDX>;movzwl %ax, %eax;addl %eax, %esi;testb $, (%esi);jne  <demWOWLFNEntry+>": 1,
                "calll - <demWOWLFNEntry+>;movzwl (%esi), %ecx;cmpl %ecx, %eax;jmp - <demWOWLFNEntry+>;calll - <getSI>": 1,
                "calll - <getDX>;movzwl %ax, %eax;addl %eax, %ebx;testl %edi, %edi;jne  <demWOWLFNEntry+>": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;movsw (%esi), %es:(%edi);pushl %eax": 1,
                "pushl $;pushl %edi;addb $, %al;pushl $;movb %al, -(%ebp)": 1,
                "calll - <getCL>;movb %al, %bl;calll - <getBL>;movb %al, -(%ebp);pushl -(%ebp)": 1,
                "pushl $;jmp  <demWOWLFNEntry+>;cmpb $, %bl;jb  <demWOWLFNEntry+>;cmpb $, %bl": 1,
                "calll - <setAX>;pushl $;calll - <setCF>;popl %ebx;leave": 1,
                "int;int;int;int;calll - <getBX>": 2,
                "addb $, %bl;pushl %eax;movb %bl, -(%ebp);movb %bl, -(%ebp);calll - <demClientErrorEx+>": 1,
                "shll $, %edi;calll - <getDX>;movzwl %ax, %eax;addl %eax, %edi;movsbl (%edi), %eax": 1,
                "calll - <demClientErrorEx+>;jmp  <demWOWLFNEntry+>;calll - <demClientErrorEx+>;cmpl $-, %eax;je - <demWOWLFNEntry+>": 1,
                "calll - <demClientErrorEx+>;cmpl $-, %eax;je - <demWOWLFNEntry+>;testb $, %al;je - <demWOWLFNEntry+>": 1,
                "je  <demWOWLFNEntry+>;pushl -(%ebp);calll *;xorl %eax, %eax;incl %eax": 1,
                "pushl %eax;calll *%edi;pushl $;pushl %esi;calll  <SetShadowDescriptorEntries+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;cmpl $, %eax;jne  <demWOWLFNEntry+>": 1,
                "incl %ecx;movl %edi, %ebx;subl %ecx, %ebx;movl %ecx, ;addl %ecx, %esi": 1,
                "movzbl %al, %eax;testl %eax, %eax;jne  <GetWOWShortCutInfo+>;movb -(%ebp), %al;addb $, %al": 1,
                "calll - <setBL+>;movl %eax, %esi;testl %esi, %esi;popl %ecx;popl %ecx": 1,
                "movl , %ecx;incl %eax;addl %eax, %esi;subl %eax, %ebx;addl %eax, %ecx": 1,
                "jmp  <GetWOWShortCutInfo+>;movl , %ecx;incb -(%ebp);cmpb $, -(%ebp);jb - <GetWOWShortCutInfo+>": 1,
                "movl %ebx, ;movl %ebx, ;popl %ecx;popl %edi;popl %esi": 1,
                "xorl %edi, %edi;cmpl %edi, (%ebp);movl $, %esi;movl %esi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %ebx;leal (%ebp), %eax": 1,
                "movl %eax, %esi;calll *;cmpl %edi, %esi;jne  <GetWOWShortCutInfo+>;cmpl $, (%ebp)": 1,
                "cmpl %edi, %esi;jne  <GetWOWShortCutInfo+>;cmpl $, (%ebp);jne  <GetWOWShortCutInfo+>;decl -(%ebp)": 1,
                "cmpl $, (%ebp);jne  <GetWOWShortCutInfo+>;decl -(%ebp);jmp  <GetWOWShortCutInfo+>;movl $, %eax": 1,
                "jne - <GetWOWShortCutInfo+>;movl -(%ebp), %ecx;subl %edx, %eax;addl %ecx, %eax;cmpl (%ebp), %eax": 1,
                "cmpl (%ebp), %eax;jae  <GetWOWShortCutInfo+>;movl -(%ebp), %eax;cmpb $, -(%eax,%ebx);jne  <GetWOWShortCutInfo+>": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;pushl %ebx;andl $, %ecx;pushl %ebx": 1,
                "jae  <GetWOWShortCutInfo+>;pushl %ebx;calll *%esi;cmpl $-, %eax;jne  <GetWOWShortCutInfo+>": 1,
                "movl %eax, -(%ebp);je  <GetWOWShortCutInfo+>;pushl %ebx;calll *%esi;cmpl $-, %eax": 1,
                "popl %ecx;popl %ecx;je  <GetWOWShortCutInfo+>;movl %eax, %ecx;subl %edi, %ecx": 1,
                "movl %eax, (%ebp);movl (%ebp), %esi;pushl %ebx;pushl (%ebp);pushl %edi": 1,
                "pushl %ebx;pushl (%ebp);pushl %edi;pushl %esi;calll - <getDI+>": 1,
                "jne - <GetWOWShortCutInfo+>;subl %edx, %eax;cmpl $, %eax;jbe  <GetWOWShortCutInfo+>;pushl $": 1,
                "pushl %eax;calll *;testl %eax, %eax;je  <GetWOWShortCutInfo+>;leal (%ebp), %ecx": 1,
                "incl %eax;testb %cl, %cl;jne - <cmdCheckTempInit+>;subl %edx, %eax;movl %eax, %ecx": 1,
                "subl %edx, %eax;movl %eax, %ecx;pushl %ebx;movl (%ebp), %ebx;leal (%ecx), %eax": 1,
                "testb %dl, %dl;jne - <cmdCheckTempInit+>;orl $-, %edx;subl %ecx, %edx;leal (%ecx,%edi), %eax": 1,
                "ja  <cmdCheckTempInit+>;xorl %eax, %eax;incl %eax;jmp  <cmdCheckTempInit+>;xorl %eax, %eax": 1,
                "pushl %ebx;pushl %edi;pushl $;pushl (%ebp);xorl %ebx, %ebx": 1,
                "pushl $;pushl (%ebp);xorl %ebx, %ebx;movl %ebx, -(%ebp);calll  <SetShadowDescriptorEntries+>": 1,
                "addl $, %esp;testl %eax, %eax;jne  <cmdCheckTemp+>;movl %edi, %eax;subl (%ebp), %eax": 2,
                "cmpl $, %ebx;jb - <cmdCheckTemp+>;movb , %al;testb $, %al;je  <cmdCheckTemp+>": 1,
                "movl %edi, %eax;subl (%ebp), %eax;cmpl $, %eax;jne  <cmdCheckTemp+>;orl $, ": 1,
                "addl $, %esp;testl %eax, %eax;jne  <cmdCheckTemp+>;subl (%ebp), %edi;cmpl $, %edi": 1,
                "movl %eax, %esi;movl %esi, -(%ebp);je  <cmdCheckTemp+>;pushl $;pushl %edi": 1,
                "addl $, %esp;testl %eax, %eax;je  <cmdCheckTemp+>;movl %edi, %eax;leal (%eax), %edx": 1,
                "movl (%ebp), %esi;leal (%esi), %ecx;movb (%esi), %al;incl %esi;testb %al, %al": 1,
                "movl %esi, -(%ebp);ja  <cmdCheckTemp+>;testl %ecx, %ecx;jne  <cmdCheckTemp+>;movl -(%ebp), %eax": 1,
                "popl %ecx;subl %esi, %ecx;subl %eax, %ecx;addl %ecx, (%ebx);jmp  <cmdCheckTemp+>": 1,
                "subl %edi, %esi;addl $, %esp;addl %esi, (%ebx);jmp  <cmdCheckTemp+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <cmdCheckTemp+>;leal (%esi,%eax), %edi;movl (%ebx), %eax": 1,
                "addl %edi, %ecx;pushl %ecx;pushl (%ebx);calll - <setBL+>;testl %eax, %eax": 1,
                "movl %edx, %ecx;andl $, %ecx;pushl %eax;movl %eax, (%ebp);rep  movsb (%esi), %es:(%edi)": 1,
                "movl %esp, %ebp;pushl %ebx;pushl %esi;movl (%ebp), %esi;testl %esi, %esi": 1,
                "calll  <SetShadowDescriptorEntries+>;movl %eax, %edi;testl %edi, %edi;popl %ecx;popl %ecx": 1,
                "movl %eax, %edi;testl %edi, %edi;popl %ecx;popl %ecx;je  <cmdCheckTemp+>": 1,
                "calll *;movl %eax, %ebx;cmpw %si, (%eax);jne  <cmdCheckTemp+>;cmpw %si, (%eax)": 1,
                "leal (%eax,%eax), %esi;pushl %edi;pushl %esi;calll - <ResumeTimerThread+>;movl %eax, %edi": 1,
                "pushl %edi;pushl %esi;calll - <ResumeTimerThread+>;movl %eax, %edi;testl %edi, %edi": 1,
                "pushl %esi;calll - <ResumeTimerThread+>;movl %eax, %edi;testl %edi, %edi;popl %ecx": 2,
                "xorl %ebx, %ebx;pushl %ebx;calll *;testl %eax, %eax;jl  <cmdCheckTemp+>": 1,
                "calll *;testl %eax, %eax;jl  <cmdCheckTemp+>;cmpw %bx, (%edi);movl %ebx, -(%ebp)": 1,
                "pushl %esi;calll  <SetShadowDescriptorEntries+>;addl $, %esp;negl %eax;sbbl %eax, %eax": 1,
                "movl %eax, %esi;calll *;xorl %eax, %eax;testl %esi, %esi;setge %al": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;movl %edi, %eax;leal (%eax), %ecx": 1,
                "negl %ebx;sbbl %ebx, %ebx;incl %ebx;jne  <cmdCheckTemp+>;pushl $": 1,
                "movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;calll *;testl %esi, %esi": 2,
                "addl %ecx, %eax;movl -(%ebp), %ecx;leal (%ecx,%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;leal (%edi,%eax), %eax;cmpb $, (%eax);movl %eax, (%ebp)": 1,
                "subl $, %esp;movl (%ebp), %eax;andl $, -(%ebp);pushl %eax;movl %eax, -(%ebp)": 1,
                "movl $, -(%ebp);calll - <ResumeTimerThread+>;testl %eax, %eax;popl %ecx;movl %eax, -(%ebp)": 1,
                "andl $, ;pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi": 1,
                "pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi;jmp  <cmdCheckTemp+>": 1,
                "pushl %edi;jmp  <cmdCheckTemp+>;movl %esi, %eax;leal (%eax), %ecx;movb (%eax), %dl": 1,
                "subl %ecx, %eax;incl %eax;pushl %esi;movl %eax, -(%ebp);movl %eax, %edi": 1,
                "jne - <cmdCheckTemp+>;subl %edx, %eax;leal (%eax), %edi;jmp  <cmdCheckTemp+>;movl %esi, %ebx": 1,
                "movl %esi, %ebx;leal (%edi), %eax;cmpl %eax, -(%ebp);jae  <cmdCheckTemp+>;cmpl %edi, -(%ebp)": 1,
                "addl -(%ebp), %esi;movl %esi, (%ebp);cmpb $, (%esi);jne - <cmdCheckTemp+>;movl -(%ebp), %eax": 1,
                "movl %esi, (%ebp);cmpb $, (%esi);jne - <cmdCheckTemp+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movb $, (%eax,%ecx);popl %edi;popl %esi;popl %ebx": 1,
                "jne  <cmdCheckTemp+>;leal (%ebx), %eax;pushl $;pushl %eax;movl %eax, (%ebp)": 1,
                "pushl %eax;movl %eax, (%ebp);calll  <SetShadowDescriptorEntries+>;movl %eax, %esi;testl %esi, %esi": 1,
                "popl %ecx;je  <cmdCheckTemp+>;cmpl (%ebp), %esi;jne  <cmdCheckTemp+>;incl %ebx": 1,
                "incl %ebx;incl %ebx;jmp  <cmdCheckTemp+>;pushl %edi;pushl (%ebp)": 1,
                "xorl %eax, %eax;popl %edi;popl %ebx;leave;retl $": 2,
                "je  <cmdCheckTemp+>;pushl $;pushl (%esi);calll *;pushl $-": 1,
                "pushl (%esi);calll *;leal (%esi), %eax;pushl %eax;calll *": 1,
                "calll *%ebx;leal (%esi), %eax;pushl %eax;calll *;pushl (%esi)": 1,
                "andl $, %eax;addl $, %eax;pushl %eax;pushl (%edi);calll *": 1,
                "movl (%ebp), %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, (%esi);movl %edi, -(%ebp)": 1,
                "calll - <host_direct_access_error+>;calll - <WaitIfIdle+>;pushl $;xorl %eax, %eax;popl %ecx": 1,
                "movw -(%ebp), %cx;popl %edi;movw %cx, (%eax);popl %esi;movl %ebx, %eax": 1,
                "movw %cx, (%eax);popl %esi;movl %ebx, %eax;popl %ebx;leave": 1,
                "pushl %edi;movl , %edi;xorl %ebx, %ebx;pushl %ebx;leal (%ebp), %eax": 1,
                "pushl (%esi);movl %ebx, -(%ebp);pushl (%esi);pushl (%esi);calll *%edi": 1,
                "je  <cmdCheckTemp+>;cmpl %ebx, (%ebp);jne  <cmdCheckTemp+>;cmpl %ebx, -(%ebp);jne  <cmdCheckTemp+>": 1,
                "jne  <cmdCheckTemp+>;movl $, -(%ebp);jmp  <cmdCheckTemp+>;pushl %ebx;leal -(%ebp), %eax": 1,
                "leal (%ebp), %eax;pushl %eax;pushl (%esi);pushl (%esi);pushl (%esi)": 1,
                "pushl %eax;pushl (%esi);pushl (%esi);pushl (%esi);calll *": 1,
                "pushl -(%ebp);pushl (%esi);pushl (%esi);calll *;cmpl %edi, (%esi)": 1,
                "je  <cmdCheckTemp+>;cmpl %edi, %eax;je  <cmdCheckTemp+>;cmpl %edi, -(%ebp);je  <cmdCheckTemp+>": 1,
                "movl (%ebp), %ecx;cmpl %ecx, (%esi);je  <cmdCheckTemp+>;movl (%esi), %esi;cmpl %ebx, %esi": 1,
                "pushl %ebx;pushl %ecx;calll *;movl %ebx, (%ebp);leal (%esi), %ebx": 1,
                "pushl %ecx;calll *;movl %ebx, (%ebp);leal (%esi), %ebx;pushl %ebx": 1,
                "movl , %edi;leal (%esi), %ebx;pushl %ebx;movl %ebx, -(%ebp);calll *%edi": 1,
                "pushl %ebx;movl $, (%esi);movl %edi, (%esi);movl %eax, (%esi);calll *": 1,
                "movl (%ebp), %edi;jne  <cmdCheckTemp+>;movl (%edi), %eax;movl %eax, (%esi);movl -(%ebp), %eax": 1,
                "movl (%edi), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %esi, (%edi);movl %eax, (%edi)": 2,
                "movl %esi, (%edi);movl %eax, (%edi);jmp  <cmdCheckTemp+>;movl (%edi), %eax;movl %eax, (%esi)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %esi;pushl $": 1,
                "pushl %eax;pushl %ebx;pushl %esi;pushl $;pushl %ebx": 1,
                "cmpl %ebx, %eax;jne  <cmdCheckTemp+>;pushl (%esi);movl , %edi;calll *%edi": 1,
                "jmp - <cmdCheckTemp+>;cmpw $, (%ebp);jne  <cmdCheckTemp+>;movl %eax, (%edi);jmp  <cmdCheckTemp+>": 1,
                "pushl $;pushl %edi;pushl $;pushl $;pushl -(%ebp)": 1,
                "pushl -(%ebp);calll *;xorl %eax, %eax;jmp  <cmdCheckTemp+>;pushl %edi": 1,
                "calll *;cmpl %edi, %eax;jne  <cmdCheckTemp+>;pushl -(%ebp);movl , %edi": 1,
                "decl %eax;je  <cmdCheckTemp+>;decl %eax;jne  <cmdCheckTemp+>;movl (%esi), %eax": 1,
                "movl %eax, (%esi);jmp  <cmdCheckTemp+>;pushl %eax;calll *;cmpl $, %eax": 1,
                "pushl %eax;calll - <setCX>;xorl %eax, %eax;movw (%esi), %ax;jmp  <cmdCheckTemp+>": 5,
                "pushl $;pushl (%edi);calll  <SetShadowDescriptorEntries+>;cmpl %ebx, %eax;popl %ecx": 1,
                "movb $, ;movb $, ;movb $, ;movb $, ;pushl (%edi)": 1,
                "calll - <demClientErrorEx+>;jmp  <cmdCheckTemp+>;cmpl %ebx, ;movl %ebx, -(%ebp);je  <cmdCheckTemp+>": 1,
                "jmp  <cmdCheckTemp+>;cmpl %ebx, ;movl %ebx, -(%ebp);je  <cmdCheckTemp+>;jmp - <cmdCheckTemp+>": 1,
                "cmpl %ebx, ;movl %ebx, -(%ebp);je  <cmdCheckTemp+>;jmp - <cmdCheckTemp+>;xorl %eax, %eax": 1,
                "pushl %esi;pushl %eax;pushl %eax;calll  <VDDTerminateVDM+>;cmpl %ebx, %eax": 1,
                "movb %cl, -(%ebp);calll  <VDDTerminateVDM+>;pushl ;calll  <VDDTerminateVDM+>;movl , %eax": 1,
                "calll - <cmdCheckTemp+>;movl , %eax;movb %bl, (%eax);movl -(%ebp), %eax;cmpb %bl, (%eax)": 1,
                "jne  <cmdCheckTemp+>;cmpl %ebx, ;je  <cmdCheckTemp+>;movl , %eax;jmp  <cmdCheckTemp+>": 1,
                "pushl ;pushl %ebx;calll - <cmdCheckTemp+>;cmpl %ebx, %eax;je  <cmdCheckTemp+>": 1,
                "incl %eax;cmpb %bl, %dl;jne - <cmdCheckTemp+>;movl -(%ebp), %edx;subl %esi, %eax": 1,
                "je  <cmdCheckTemp+>;pushl $;pushl %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "decl %edi;movb (%edi), %al;incl %edi;cmpb %bl, %al;jne - <cmdCheckTemp+>": 5,
                "leal (%eax), %edx;movb (%eax), %cl;incl %eax;cmpb %bl, %cl;jne - <cmdCheckTemp+>": 4,
                "movl (%esi), %edx;leal -(%ebp), %ecx;movb (%ecx), %al;incl %ecx;movb %al, (%edx)": 1,
                "je  <cmdCheckTemp+>;pushl %eax;calll *;xorl %eax, %eax;cmpb $, ": 1,
                "cmpl %ebx, %eax;je  <cmdCheckTemp+>;pushl %eax;calll - <getDX+>;popl %ecx": 4,
                "pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, %eax;movl %ecx, -(%ebp);je  <cmdCheckTemp+>": 1,
                "pushl %esi;calll *%edi;testl %eax, %eax;je  <cmdCheckTemp+>;cmpl $, -(%ebp)": 1,
                "jne  <cmdCheckTemp+>;cmpw %bx, -(%ebp);je  <cmdCheckTemp+>;cmpw %bx, -(%ebp);je  <cmdCheckTemp+>": 1,
                "pushl %esi;calll *;cmpl $-, %eax;je  <cmdCheckTemp+>;movzwl -(%ebp), %eax": 1,
                "popl %ecx;jne  <cmdCheckTemp+>;movsbl (%esi), %eax;pushl %eax;calll  <SetShadowDescriptorEntries+>": 2,
                "calll - <getDX+>;cmpl %ebx, -(%ebp);popl %ecx;je  <cmdCheckTemp+>;pushl %ebx": 1,
                "cmpl %ebx, -(%ebp);popl %ecx;je  <cmdCheckTemp+>;pushl %ebx;pushl %ebx": 1,
                "calll  <SetShadowDescriptorEntries+>;cmpl %esi, %eax;popl %ecx;popl %ecx;jne  <cmdCheckTemp+>": 1,
                "movzwl %bx, %eax;leal (%eax,%eax,), %eax;cmpw (%edi,%eax,), %dx;je  <cmdCheckTemp+>;incl %ebx": 1,
                "incl %ebx;cmpw %cx, %bx;jb - <cmdCheckTemp+>;jmp  <cmdCheckTemp+>;movl $, -(%ebp)": 1,
                "jmp  <cmdCheckTemp+>;pushl $;calll *;xorl %eax, %eax;movl -(%ebp), %ecx": 2,
                "xorl %ebx, %ebx;cmpw %bx, (%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %esi, -(%ebp)": 1,
                "cmpw %bx, (%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %esi, -(%ebp);je  <cmdCheckTemp+>": 1,
                "movl , %esi;leal -(%ebp), %eax;pushl %eax;pushl %ebx;leal -(%ebp), %eax": 1,
                "pushl %edi;pushl -(%ebp);movl %ebx, -(%ebp);calll *%esi;movl -(%ebp), %eax": 1,
                "calll - <ResumeTimerThread+>;cmpl %ebx, %eax;popl %ecx;movl %eax, -(%ebp);je  <cmdCheckTemp+>": 1,
                "testl %eax, %eax;jne  <cmdCheckTemp+>;cmpl %ebx, -(%ebp);je  <cmdCheckTemp+>;movl -(%ebp), %esi": 1,
                "cmpl $, %eax;leal -(%ebp), %edi;jne  <cmdCheckTemp+>;decl %edi;movb (%edi), %al": 1,
                "jne  <cmdCheckTemp+>;decl %edi;movb (%edi), %al;incl %edi;cmpb %bl, %al": 3,
                "jmp  <cmdCheckTemp+>;andl $, %eax;decl %edi;cmpl $, %eax;jne  <cmdCheckTemp+>": 1,
                "jne - <cmdCheckTemp+>;movl $, %esi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);pushl -(%ebp);calll *;movl -(%ebp), %eax": 1,
                "incl %eax;cmpb %bl, %cl;jne - <cmdCheckTemp+>;movl -(%ebp), %edi;subl %edx, %eax": 1,
                "subl %ecx, %esi;movb (%ecx), %dl;movb %dl, (%esi,%ecx);incl %ecx;cmpb %bl, %dl": 1,
                "movl %edi, -(%ebp);calll *;testl %eax, %eax;je  <cmdCheckTemp+>;cmpl %edi, %eax": 1,
                "pushl $-;pushl -(%ebp);calll *;pushl $;pushl -(%ebp)": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl %eax, ;movl (%ebp), %eax;movl %eax, ": 1,
                "movl $, %ebx;incl %ecx;andl %ebx, %eax;orl %eax, %ecx;xorl %edi, %edi": 1,
                "movl , %eax;movl %eax, ;movl $, ;calll - <getSS>;movzwl %ax, %esi": 1,
                "calll - <getBP>;movzwl %ax, %eax;addl %eax, %esi;leal (%ebp), %eax;pushl %eax": 1,
                "calll - <setCF>;calll *;pushl %eax;calll - <setAL>;calll - <host_com_close+>": 1,
                "pushl %eax;calll - <setAL>;calll - <host_com_close+>;pushl ;calll - <VDDExcludeMem+>": 3,
                "movl %edi, ;jmp  <cmdCheckTemp+>;pushl %eax;calll *;pushl $": 1,
                "cmpw %si, ;jbe  <cmdCheckTemp+>;incl %esi;pushl %esi;calll - <setCF>": 1,
                "decl %ecx;orl %eax, %ecx;popl %esi;movl %ecx, ;popl %ebx": 2,
                "pushl %esi;movl %eax, -(%ebp);calll - <getDS>;movzwl %ax, %ebx;shll $, %ebx": 1,
                "jne  <cmdCheckTemp+>;pushl %esi;pushl %ebx;calll - <cmdCheckTemp+>;jmp  <cmdCheckTemp+>": 1,
                "calll - <cmdCheckTemp+>;jmp  <cmdCheckTemp+>;pushl %edi;movl $, %esi;pushl %esi": 1,
                "jmp  <cmdCheckTemp+>;pushl %edi;movl $, %esi;pushl %esi;leal -(%ebp), %eax": 1,
                "movb (%eax), %cl;incl %eax;testb %cl, %cl;jne - <cmdCheckTemp+>;leal -(%ebp), %edi": 1,
                "jne - <cmdCheckTemp+>;pushl -(%ebp);movl %eax, %ecx;shrl $, %ecx;movl %edx, %esi": 1,
                "pushl %esi;calll - <cmdCheckTemp+>;testl %eax, %eax;jne  <cmdCheckTemp+>;movl $, -(%ebp)": 1,
                "pushl %ebx;calll - <setCF>;movl %ebx, ;jmp  <cmdCheckTemp+>;pushl %esi": 1,
                "cmpl $, (%ebp);je  <VDDTerminateVDM+>;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 5,
                "testl %edi, %edi;jge  <VDDTerminateVDM+>;cmpl $, (%ebp);je  <VDDTerminateVDM+>;leal -(%ebp), %eax": 1,
                "pushl %esi;pushl %eax;movl -(%ebp), %eax;pushl %edi;pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;movl , %eax;cmpb $, (%eax)": 1,
                "shrl %eax;decl %eax;cmpl %ebx, %eax;movl %eax, -(%ebp);je  <VDDTerminateVDM+>": 1,
                "cmpl %edi, %eax;ja  <VDDTerminateVDM+>;movl (%ebp), %esi;pushl %ebx;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;incl %edi;pushl %eax;movw %di, -(%ebp);movl %esi, -(%ebp)": 1,
                "addl %esi, %eax;movl %eax, (%ecx);movl %fs:, %eax;pushl (%ebp);movl (%eax), %eax": 1,
                "calll *;jmp  <VDDTerminateVDM+>;pushl (%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);jne  <VDDTerminateVDM+>;pushl $;calll *;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;movl , %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;movl , %ebx;calll *%ebx;movl %eax, -(%ebp)": 1,
                "calll *;andl $, -(%ebp);cmpl $, (%ebp);je  <VDDTerminateVDM+>;pushl (%ebp)": 1,
                "xorl %esi, %esi;cmpl %esi, -(%ebp);je  <VDDTerminateVDM+>;leal -(%ebp), %eax;pushl %eax": 2,
                "jne  <VDDTerminateVDM+>;pushl $;calll *;xorl %eax, %eax;jmp  <VDDTerminateVDM+>": 1,
                "movl %ebx, -(%ebp);pushl (%ebp);leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "cmpl %ebx, %edi;je  <VDDTerminateVDM+>;movl (%ebp), %esi;cmpl %ebx, %esi;jbe  <VDDTerminateVDM+>": 1,
                "calll *;pushl %eax;calll *;movl %ebx, -(%ebp);orl $-, -(%ebp)": 1,
                "calll *;cmpl %ebx, -(%ebp);je  <VDDTerminateVDM+>;movl %fs:, %eax;pushl -(%ebp)": 1,
                "movl (%eax), %esi;movl (%ebp), %edi;addl $, %esi;movw (%esi), %ax;cmpw $, %ax": 1,
                "calll *;movl (%esi), %eax;movl %eax, -(%ebp);cmpw $, -(%ebp);movl (%esi), %eax": 1,
                "incl %esi;calll *;movl %esi, %eax;popl %edi;popl %esi": 1,
                "pushl (%ebp);pushl -(%ebp);pushl (%ebx);calll *;cmpl $, -(%ebp)": 1,
                "leal (%eax), %edi;pushl %ecx;leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "pushl %eax;pushl (%edi);calll *;cmpl $-, %eax;movl %eax, -(%ebp)": 1,
                "pushl -(%ebp);calll *;pushl -(%ebp);calll *;pushl %eax": 1,
                "pushl -(%ebp);calll *;pushl %eax;calll *;orl $-, %eax": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je  <VDDTerminateVDM+>;pushl %ebx;pushl %edi": 1,
                "calll *%ebx;testl %eax, %eax;jl  <VDDTerminateVDM+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movl (%ebp), %eax;testl %eax, %eax;jne  <VDDTerminateVDM+>;movl $, %eax;pushl %eax": 1,
                "xorl %esi, %esi;movl %esi, -(%ebp);movl %esi, -(%ebp);movl %esi, -(%ebp);pushl (%ebp)": 1,
                "orl $-, -(%ebp);calll  <VDDTerminateVDM+>;calll - <getDI+>;retl $;xorl %esi, %esi": 1,
                "calll *;testl %eax, %eax;jne  <VDDTerminateVDM+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "cmpw (%eax), %dx;jne  <VDDTerminateVDM+>;movw (%eax), %dx;addw %cx, %dx;movw %dx, (%esi)": 1,
                "jne  <VDDTerminateVDM+>;movw (%eax), %dx;addw %cx, %dx;movw %dx, (%esi);movl (%eax), %ecx": 1,
                "pushl $;jmp  <VDDTerminateVDM+>;pushl $;calll - <setBL>;pushl %edi": 1,
                "pushl $;calll - <setBL>;pushl %edi;calll - <setAX>;popl %edi": 1,
                "je  <VDDTerminateVDM+>;leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax": 1,
                "testl %eax, %eax;je  <VDDTerminateVDM+>;pushl (%ebp);pushl (%ebp);calll - <VDDTerminateVDM+>": 1,
                "calll - <getDX>;movzwl %ax, %esi;shll $, %esi;calll - <getBX>;movzwl %ax, %edi": 1,
                "shll $, %esi;calll - <getBX>;movzwl %ax, %edi;shll $, %edi;calll - <getAX>": 1,
                "movl %eax, -(%ebp);jmp  <VDDTerminateVDM+>;movl -(%ebp), %eax;shrl $, %eax;pushl %eax": 1,
                "pushl %eax;calll *;testl %eax, %eax;jl  <DpmiSetIncrementalAlloc+>;movl $, ": 1,
                "movl %ecx, -(%ebp);calll *;testl %eax, %eax;jl  <DpmiSetIncrementalAlloc+>;testb $, -(%ebp)": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;movl (%ebp), %esi;movl %esi, %ecx": 1,
                "andl $, %ecx;pushl %edi;movl $, %ebx;je  <DpmiSetIncrementalAlloc+>;movl %ebx, %eax": 1,
                "cmpl (%ebp), %eax;jbe  <DpmiSetIncrementalAlloc+>;movl (%ebp), %eax;movl (%ebp), %edi;addl %eax, (%ebp)": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <DpmiSetIncrementalAlloc+>;movl (%ebp), %esi;movl (%ebp), %edi": 1,
                "leal (%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;pushl $-": 1,
                "jmp  <DpmiSetIncrementalAlloc+>;movl (%ebp), %eax;movl (%ebp), %ecx;movl %ecx, (%eax);xorl %eax, %eax": 1,
                "je  <DpmiSetIncrementalAlloc+>;cmpw $, (%ebp);jne  <DpmiSetIncrementalAlloc+>;leal (%esi), %ecx;jmp  <DpmiSetIncrementalAlloc+>": 1,
                "movl (,%eax,), %eax;addl (%ebp), %eax;jmp  <VdmMapFlat+>;movl (%ebp), %eax;andl $, %eax": 1,
                "addl $, %eax;jmp  <VdmMapFlat+>;movzwl (%ebp), %eax;movl (%ebp), %ecx;shll $, %eax": 1,
                "movl %esi, -(%ebp);calll - <cpu_createthread+>;movl %esi, %eax;popl %esi;leave": 1,
                "orl %edx, %eax;movl (%ecx), %edx;movzwl (%ecx), %ecx;movl %eax, -(%ebp);movl %edx, %eax": 1,
                "movzwl -(%ebp), %eax;movl , %ecx;shrl $, %eax;orw $, (%ecx,%eax,);leave": 1,
                "movl , %ecx;shrl $, %eax;orw $, (%ecx,%eax,);leave;retl": 1,
                "leal (%ecx,%eax), %edx;cmpb $, (%edx);jne  <SetShadowDescriptorEntries+>;cmpb $-, (%edx);jne  <SetShadowDescriptorEntries+>": 1,
                "movl %esi, %ebx;movzwl %si, %esi;shrl $, %esi;movzwl (%eax,%esi,), %esi;cmpw %di, %si": 1,
                "shrl $, %esi;movw %dx, (%eax,%esi,);movl , %eax;movb $, (%ecx,%eax);movl , %eax": 1,
                "incl %eax;jmp  <SetShadowDescriptorEntries+>;xorl %eax, %eax;popl %edi;popl %esi": 3,
                "movl , %eax;cmpw $, %ax;je  <SetShadowDescriptorEntries+>;movl , %edx;movzwl %ax, %eax": 1,
                "cmpl %edx, %eax;jl - <SetShadowDescriptorEntries+>;movl -(%ebp), %ebx;testl %ebx, %ebx;movl %edi, %esi": 1,
                "cmpl %ecx, %eax;jl - <SetShadowDescriptorEntries+>;movl (%ebp), %edx;cmpl $, (%ebp);je  <SetShadowDescriptorEntries+>": 1,
                "movw %ax, -(%ebp);leal (%edx), %eax;movl %eax, -(%ebp);jmp - <SetShadowDescriptorEntries+>;xorw %ax, %ax": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;cmpw , %dx;jb  <SetShadowDescriptorEntries+>;cmpw , %dx": 1,
                "cmpw , %dx;jb  <SetShadowDescriptorEntries+>;cmpw , %dx;ja  <SetShadowDescriptorEntries+>;movl , %ecx": 1,
                "movl , %ecx;movb $-, (%eax,%ecx);xorl %eax, %eax;incl %eax;popl %esi": 1,
                "cmpb $, (%eax);jne  <SetShadowDescriptorEntries+>;cmpb $-, (%eax);je  <SetShadowDescriptorEntries+>;xorl %eax, %eax": 1,
                "xorl %ecx, %ecx;movw -(%ebp), %ax;orl $, %eax;lsll %eax, %ecx;movl %ecx, -(%ebp)": 1,
                "movw (%ebp), %cx;movl , %edx;shrl $, %eax;shll $, %eax;movb %cl, (%eax,%edx)": 1,
                "movb %cl, (%eax);movw (%ebp), %ax;movl , %ecx;shrw $, %ax;movzwl %ax, %eax": 1,
                "andl $, %ecx;xorl %ecx, (%eax);calll - <SetShadowDescriptorEntries+>;popl %ebp;retl $": 1,
                "calll - <SetShadowDescriptorEntries+>;shrl $, %esi;testw %si, %si;je  <SetShadowDescriptorEntries+>;pushl %ebx": 1,
                "movw (%esi), %ax;movw %ax, ;movl (%esi), %eax;movl %eax, (%edi);movl (%esi), %eax": 1,
                "pushl %eax;movzbl (%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl $": 1,
                "popl %edi;movl %eax, (%esi);popl %esi;calll - <getDI+>;leave": 1,
                "pushl %ebx;pushl %esi;movl %fs:, %eax;movl (%eax), %esi;movl (%ebp), %ebx": 1,
                "movl %fs:, %eax;movl (%eax), %esi;movl (%ebp), %ebx;addl $, %esi;cmpl $, %ebx": 1,
                "testl %eax, %eax;je  <SetShadowDescriptorEntries+>;xorl %eax, %eax;incl %eax;jmp  <SetShadowDescriptorEntries+>": 1,
                "testl %eax, %eax;je  <SetShadowDescriptorEntries+>;cmpw $, ;movl (%ebp), %eax;je  <SetShadowDescriptorEntries+>": 1,
                "movw %ax, -(%ecx);movl (%ebp), %edx;leal (%esi), %eax;movw (%eax), %cx;movw %cx, -(%edx)": 1,
                "jmp  <SetShadowDescriptorEntries+>;cmpw $, ;movl -(%ebp), %eax;je  <SetShadowDescriptorEntries+>;movl %edi, -(%eax)": 1,
                "movl %eax, -(%ecx);movl (%esi), %eax;movl -(%ebp), %ecx;movl %eax, -(%ecx);movl (%esi), %eax": 1,
                "movw (%esi), %ax;movl -(%ebp), %ecx;movw %ax, -(%ecx);movw (%esi), %ax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movw %ax, -(%ecx);movw (%esi), %ax;movl -(%ebp), %ecx;movw %ax, -(%ecx)": 1,
                "movl -(%ebp), %ecx;movw %ax, -(%ecx);movl -(%ebp), %ecx;movw (%esi), %ax;movw %ax, -(%ecx)": 1,
                "movw (%esi), %ax;movw %ax, -(%ecx);movl -(%ebp), %edx;leal (%esi), %eax;movw (%eax), %cx": 1,
                "calll - <SimpGetVDMPointer+>;testl %eax, %eax;jne  <SetShadowDescriptorEntries+>;testl %edi, %edi;movzwl (%ebx), %eax": 1,
                "jmp  <SetShadowDescriptorEntries+>;addw $, (%esi);popl %edi;popl %esi;popl %ebx": 2,
                "calll  <SetShadowDescriptorEntries+>;movl %eax, %esi;testl %esi, %esi;je  <SetShadowDescriptorEntries+>;pushl $": 1,
                "jb  <SetShadowDescriptorEntries+>;xorl %eax, %eax;jmp  <SetShadowDescriptorEntries+>;cmpw $, %cx;jb  <SetShadowDescriptorEntries+>": 1,
                "cmpw $, %cx;jb  <SetShadowDescriptorEntries+>;cmpw $, %cx;jbe  <SetShadowDescriptorEntries+>;cmpw $, %cx": 2,
                "jb  <SetShadowDescriptorEntries+>;cmpw $, %cx;jbe  <SetShadowDescriptorEntries+>;cmpw $, %cx;jb  <SetShadowDescriptorEntries+>": 2,
                "orl $, (%ebp);movw (%ebp), %dx;cmpw , %dx;je  <SetShadowDescriptorEntries+>;cmpw $, %cx": 1,
                "movw %si, (%eax);movl %edx, (%eax);popl %esi;jne  <SetShadowDescriptorEntries+>;movzwl , %eax": 1,
                "addl %edi, %eax;movzwl (%eax), %ecx;movzwl (%eax), %edx;movzwl (%eax), %eax;pushl %esi": 1,
                "jae  <SetShadowDescriptorEntries+>;movzwl (%ebp), %ecx;movw (%ebp), %dx;shll $, %ecx;leal (%ecx), %ecx": 1,
                "shll $, %ecx;leal (%ecx), %ecx;andw $, (%ecx);incl %eax;andl $, (%ecx)": 1,
                "movl (%eax), %edi;movw (%edi), %bx;addl $, %edi;movzwl %bx, %eax;movl %eax, -(%ebp)": 1,
                "pushl $;movl %eax, -(%ebp);movl %ebx, %eax;shll $, %eax;pushl %eax": 1,
                "movzwl (%esi), %eax;andl $, %ecx;movl %ecx, (%esi);movl %eax, (%edi);movl (%esi), %eax": 1,
                "movw (%esi), %bx;jae  <SetShadowDescriptorEntries+>;movzwl %ax, %eax;shrl $, %eax;andl $, %eax": 1,
                "movw %cx, -(%esi);andl $, %ebx;movw %bx, (%esi);leal (,%eax,), %eax;movzwl (%eax), %ecx": 1,
                "andl $, %ecx;orl %edx, %ecx;andl $, %ecx;movl %ecx, (%eax);jmp  <SetShadowDescriptorEntries+>": 1,
                "movzwl (%esi), %ecx;subw $, %ax;movw %ax, (%esi);movzwl %ax, %eax;shll $, %ecx": 1,
                "movw (%ecx), %dx;movw %dx, (%esi);movw -(%ebp), %dx;movw %dx, (%eax);movw (%ecx), %cx": 1,
                "movl %eax, (%edi);jmp  <SetShadowDescriptorEntries+>;pushl %esi;pushl -(%ebp);calll - <SetShadowDescriptorEntries+>": 1,
                "calll - <getSI>;movzwl %ax, %eax;retl;int;int": 1,
                "sbbl %eax, %eax;andl $, %eax;pushl %eax;calll *;pushl %eax": 2,
                "leal (,%eax,), %eax;movw (%eax), %cx;movw %cx, (%esi);pushl (%eax);calll *": 1,
                "movw %cx, (%esi);pushl (%eax);calll *;jmp  <SetShadowDescriptorEntries+>;calll *": 1,
                "calll - <SetShadowDescriptorEntries+>;jmp - <SetShadowDescriptorEntries+>;cmpb $, %bl;jae - <SetShadowDescriptorEntries+>;movzbl %bl, %eax": 1,
                "je  <SetShadowDescriptorEntries+>;decl %eax;jne  <SetShadowDescriptorEntries+>;movw (%esi), %ax;movw %ax, ": 1,
                "jne  <SetShadowDescriptorEntries+>;movw (%esi), %ax;movw %ax, ;movw (%esi), %ax;movw %ax, ": 1,
                "movw (%edi), %ax;movw %ax, (%esi);movw (%edi), %ax;movw %ax, (%esi);popl %edi": 1,
                "movw (%edi), %ax;movw %ax, (%esi);popl %edi;popl %esi;retl": 1,
                "movzwl (%eax), %edx;addl , %ecx;shll $, %edx;orl %esi, %edx;je  <SetShadowDescriptorEntries+>": 1,
                "orl %edx, (%eax);jmp  <SetShadowDescriptorEntries+>;andb $-, (%eax);testl %ecx, %ecx;setne %cl": 1,
                "movw %ax, (%esi);jmp  <SetShadowDescriptorEntries+>;notl %eax;andl %eax, -(%ebp);xorl %eax, %eax": 1,
                "xorl %eax, %eax;pushl %edi;testl %ecx, -(%ebp);je  <SetShadowDescriptorEntries+>;incl %eax": 1,
                "testl %ecx, -(%ebp);je  <SetShadowDescriptorEntries+>;incl %eax;shll $, %ecx;cmpw $, %ax": 1,
                "testl %eax, %eax;jne  <SetShadowDescriptorEntries+>;xorl %edi, %edi;incl %edi;cmpl $, %edi": 1,
                "movl %edi, %ecx;movl -(%ebp), %edi;shll %cl, %edi;leal (,%edx,), %ecx;shll %cl, %eax": 1,
                "orl -(%ebp), %ebx;xorl %eax, %eax;incl %eax;shll %cl, %eax;orl $, %ebx": 1,
                "movl (%eax), %esi;movl (%esi), %eax;addl $, %esi;shrl $, %eax;pushl $": 2,
                "cmpl $, %edi;movl (%eax), %ecx;ja  <SetShadowDescriptorEntries+>;calll *(,%edi,);jmp  <SetShadowDescriptorEntries+>": 2,
                "pushl %esi;pushl %edi;movl %fs:, %eax;movl (%eax), %esi;movb (%esi), %bl": 1,
                "pushl %edi;movl %fs:, %eax;movl (%eax), %esi;movb (%esi), %bl;movl , %eax": 1,
                "cmpw $, %di;ja  <SetShadowDescriptorEntries+>;movzwl %di, %edx;shrl $, %edx;cmpb $, (%edx)": 1,
                "je  <SetShadowDescriptorEntries+>;cmpw , %di;ja  <SetShadowDescriptorEntries+>;cmpw $, %di;jbe  <SetShadowDescriptorEntries+>": 1,
                "pushl %edi;calll - <SetShadowDescriptorEntries+>;addl $, %edi;decl %esi;jne - <SetShadowDescriptorEntries+>": 1,
                "shll $, %ecx;orl %ecx, %eax;movw %ax, (%esi);shrl $, %eax;movw %ax, (%esi)": 1,
                "movl , %ecx;leal (%eax,%ecx), %eax;movl (%eax), %ecx;xorl %edx, %ecx;andl $, %ecx": 1,
                "movl (%eax), %ecx;xorl %edx, %ecx;andl $, %ecx;xorl %ecx, (%eax);jmp  <SetShadowDescriptorEntries+>": 1,
                "calll - <SetShadowDescriptorEntries+>;movl %eax, %ebx;testw %bx, %bx;je - <SetShadowDescriptorEntries+>;movl , %ecx": 1,
                "movl %eax, (%edx,%ecx,);pushl $;pushl %edi;calll - <SetShadowDescriptorEntries>;jmp - <SetShadowDescriptorEntries+>": 1,
                "movw (%esi), %ax;andl %ecx, %eax;cmpw $, %ax;ja - <SetShadowDescriptorEntries+>;movzwl %ax, %eax": 1,
                "movl %fs:, %eax;movl (%eax), %esi;movw (%esi), %di;addl $, %esi;calll - <setSP+>": 14,
                "movl (%eax), %esi;movw (%esi), %di;addl $, %esi;calll - <setSP+>;movw (%esi), %ax": 11,
                "movw (%esi), %di;addl $, %esi;calll - <setSP+>;movw (%esi), %ax;movzwl %di, %ebx": 7,
                "movl %eax, -(%ebp);calll - <setAL+>;movl %eax, -(%ebp);movl -(%ebp), %edx;xorl %ecx, %ecx": 3,
                "subw %cx, (%eax);calll - <setSP+>;calll - <host_simulate>;movl , %eax;movw , %cx": 4,
                "movw , %ax;addl $, %esi;negw %ax;sbbl %eax, %eax;andl $, %eax": 1,
                "addl %eax, %ebx;pushl %ebx;calll  <SetShadowDescriptorEntries+>;pushl %eax;pushl %ebx": 1,
                "pushl %ecx;movl %ecx, -(%ebp);calll - <setAL+>;movl -(%ebp), %edx;movl %eax, -(%ebp)": 1,
                "xorl %ecx, %ecx;movb -(%ebp), %cl;subb %al, %cl;subl %eax, %edx;shrl $, %edx": 5,
                "movb -(%ebp), %cl;subb %al, %cl;subl %eax, %edx;shrl $, %edx;movzwl %dx, %eax": 5,
                "movl , %eax;movw (%eax), %ax;movw %ax, (%esi);movl , %eax;movl %ecx, -(%ebp)": 1,
                "calll - <demClientErrorEx+>;pushl $;pushl -(%ebp);pushl -(%ebp);calll - <demClientErrorEx+>": 1,
                "pushl -(%ebp);calll - <demClientErrorEx+>;subl -(%ebp), %edi;movw -(%ebp), %ax;addw %di, (%esi)": 1,
                "movl , %esi;andl $, %edx;movl (%esi,%edx,), %edx;andl $, %edx;cmpl $, %edx": 1,
                "movzwl , %eax;pushl $;shll $, %eax;pushl %eax;calll - <SimpGetVDMPointer>": 1,
                "calll - <host_simulate>;movl , %eax;movw , %cx;addw %cx, (%eax);movzwl -(%ebp), %eax": 1,
                "movl %eax, (%ebx);movw -(%ebp), %ax;movw %si, (%ebx);movw %ax, (%ebx);andl $, %ecx": 1,
                "popl %esi;jne  <SetShadowDescriptorEntries+>;pushl -(%ebp);calll *;calll - <setSP+>": 1,
                "pushl %eax;movw %ax, (%edi);calll - <SetShadowDescriptorEntries+>;testw %ax, %ax;movw %ax, (%edi)": 1,
                "andl $-, (%esi);movw (%edi), %ax;movw %ax, (%esi);popl %edi;popl %esi": 1,
                "subl $, %esp;pushl %ebx;pushl %esi;movl %fs:, %eax;movl (%eax), %ebx": 1,
                "subl %ecx, %esi;addl $, %esi;shrl $, %esi;pushl $;andl $, %edx": 1,
                "movl %eax, %edi;calll *;addl %eax, %edi;testb $, ;pushl $": 1,
                "shll $, %eax;pushl %eax;calll - <SimpGetVDMPointer>;addl (%edi), %eax;jmp  <SetShadowDescriptorEntries+>": 1,
                "jmp  <SetShadowDescriptorEntries+>;pushl (%edi);calll - <SimpGetVDMPointer>;movl , %edi;pushl $": 1,
                "pushl $;movl %eax, %esi;popl %ecx;addl $, %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "movl %eax, %esi;popl %ecx;addl $, %edi;rep  movsl (%esi), %es:(%edi);movl , %eax": 1,
                "subl %ecx, %esi;addl $, %esi;shrl $, %esi;pushl $;popl %ecx": 1,
                "movb $, (%eax,%edx);incl %eax;decl %ecx;jne - <SetShadowDescriptorEntries+>;movl , %eax": 1,
                "movw %si, (%eax);xorl %eax, %eax;popl %ecx;movl , %edx;movb $, (%eax,%edx)": 1,
                "movb $, (%eax,%edx);incl %eax;decl %ecx;jne - <SetShadowDescriptorEntries+>;movzwl , %eax": 1,
                "movzwl %si, %ecx;shrl $, %ecx;andl $, %ecx;movl (,%ecx,), %ecx;subl , %ecx": 1,
                "movw %ax, (%ebx);movl , %eax;movw , %cx;subw %cx, (%eax);calll - <setSP+>": 2,
                "movw %ax, (%ebx);movw -(%ebp), %ax;movw %ax, (%ebx);calll - <setSP+>;movzwl -(%ebp), %eax": 1,
                "calll - <SetShadowDescriptorEntries+>;movl , %edi;movl , %esi;cmpl %esi, %edi;movw (%ebx), %ax": 1,
                "cmpl %esi, %edi;movw (%ebx), %ax;movw %ax, -(%ebp);je  <SetShadowDescriptorEntries+>;pushl $": 1,
                "cmpl %edi, ;je  <SetShadowDescriptorEntries+>;calll - <SetShadowDescriptorEntries+>;leal -(%ebp), %eax;pushl %eax": 1,
                "subl %eax, %ecx;shrl $, %ecx;movzwl %cx, %eax;movl %eax, (%ebx);movw %si, (%ebx)": 1,
                "movsw (%esi), %es:(%edi);movsb (%esi), %es:(%edi);popl %edi;popl %esi;popl %ebx": 1,
                "xorl %edi, %edi;movw (%esi), %di;movl %ebx, -(%ebp);movl %edi, -(%ebp);calll - <setSP+>": 1,
                "movzwl -(%ebp), %eax;movl %eax, (%esi);movzwl -(%ebp), %eax;popl %edi;movl %eax, (%esi)": 1,
                "movl %eax, %edi;calll *;addl %eax, %edi;xorl %eax, %eax;cmpb %al, (%edi)": 1,
                "movzwl %ax, %ecx;cmpb $, (%ecx,%edi);jne - <SetShadowDescriptorEntries+>;addl $, %eax;pushl %eax": 1,
                "popl %edi;movw %ax, (%esi);popl %esi;popl %ebx;leave": 2,
                "movl (%eax), %esi;movw (%esi), %ax;addl $, %esi;xorl %edi, %edi;movw (%esi), %di": 1,
                "pushl $;calll  <SetShadowDescriptorEntries+>;movl %eax, %ebx;movl , %eax;xorl %ecx, %ecx": 1,
                "xorl %ecx, %ecx;movb %bl, %cl;subb %al, %cl;movl %ebx, %edx;subl %eax, %edx": 2,
                "shrl $, %edx;movzwl %dx, %eax;movl %eax, (%esi);movw $, (%esi);movw $, (%esi)": 1,
                "movzwl %dx, %eax;movl %eax, (%esi);movw $, (%esi);movw $, (%esi);andl $, %ecx": 1,
                "calll - <setSP+>;movzwl -(%ebp), %eax;jmp  <SetShadowDescriptorEntries+>;movw (%ebx), %ax;movw %ax, -(%ebp)": 1,
                "addl %eax, %ebx;pushl $;pushl %ebx;calll - <setAL+>;movl %eax, %ebx": 1,
                "subl %eax, %edx;shrl $, %edx;movzwl %dx, %eax;andl $, %ecx;movl %eax, (%esi)": 1,
                "shll $, %eax;pushl %eax;calll - <SimpGetVDMPointer>;movl %eax, -(%ebp);movzwl (%ebx), %eax": 1,
                "cmpl %eax, %edx;jle  <SetShadowDescriptorEntries+>;cltd;idivl %ecx;jmp  <SetShadowDescriptorEntries+>": 1,
                "jmp  <SetShadowDescriptorEntries+>;movl -(%ebp), %eax;subl -(%ebp), %eax;movl %eax, -(%ebp);imull -(%ebp), %eax": 1,
                "movw %di, (%esi);calll - <setSP+>;movl -(%ebp), %eax;popl %edi;movl %eax, (%esi)": 1,
                "movb -(%ebp), %cl;movb %cl, (%eax);movw -(%ebp), %ax;movw %ax, (%esi);movb -(%ebp), %al": 1,
                "addl %eax, %edi;movw (%esi), %ax;movw %ax, -(%ebp);movb $, (%esi);jmp  <SetShadowDescriptorEntries+>": 1,
                "movl , %eax;movw , %cx;addw %cx, (%eax);incl %edi;movb (%edi), %al": 1,
                "int;int;movl %fs:, %eax;movl (%eax), %eax;cmpb $, (%eax)": 1,
                "movl , %eax;movl -(%ebp), %edx;xorl %ecx, %ecx;movb -(%ebp), %cl;subb %al, %cl": 1,
                "movl , %eax;movw , %cx;addw %cx, (%eax);cmpb $, (%esi);jne  <SetShadowDescriptorEntries+>": 1,
                "addl $, %esp;pushl -(%ebp);pushl -(%ebp);pushl %edi;calll - <demClientErrorEx+>": 1,
                "movl %eax, -(%ebp);movzwl %bx, %eax;movl %eax, -(%ebp);pushl $;shll $, %eax": 1,
                "movw -(%ebp), %ax;movw %ax, (%esi);movw -(%ebp), %ax;popl %edi;movw %ax, (%esi)": 1,
                "int;jmp - <demFileFindFirst+>;int;int;int": 1,
                "movl %eax, -(%ebp);jb  <SetShadowDescriptorEntries+>;cmpw $, %ax;jbe  <SetShadowDescriptorEntries+>;cmpw $, %ax": 1,
                "pushl %ebx;calll - <setSP+>;movw (%esi), %ax;movzwl %di, %ebx;movw %ax, -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %edi": 1,
                "movl %esi, -(%ebp);calll *%edi;movl $, %ebx;jmp  <SetShadowDescriptorEntries+>;testl %eax, %eax": 1,
                "jne  <SetShadowDescriptorEntries+>;cmpl $, -(%ebp);jbe  <SetShadowDescriptorEntries+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;calll *;testl %eax, %eax;jl  <SetShadowDescriptorEntries+>;movl -(%ebp), %ecx": 1,
                "decl %eax;je  <SetShadowDescriptorEntries+>;orl $, (%esi);popl %esi;retl": 1,
                "addl $, %esi;xorl %ebx, %ebx;movl $, %eax;cmpl $, (%eax);je  <SetShadowDescriptorEntries+>": 1,
                "cmpl $, (%eax);je  <SetShadowDescriptorEntries+>;addl $, %eax;incl %ebx;cmpl $, %eax": 1,
                "pushl $;pushl $;calll - <SetShadowDescriptorEntries+>;leal (%ebx,%ebx,), %edi;shll $, %edi": 1,
                "pushl $;calll - <SetShadowDescriptorEntries+>;leal (%ebx,%ebx,), %edi;shll $, %edi;testw %ax, %ax": 1,
                "movw %ax, (%edi);jne  <SetShadowDescriptorEntries+>;orl $, (%esi);jmp  <SetShadowDescriptorEntries+>;pushl $": 1,
                "movl %esp, %ebp;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %edx;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;addl $, %eax;movl %edx, (%ecx);movl (%eax), %edx;movl %edx, (%ecx)": 1,
                "movw (%eax), %dx;movw %dx, (%ecx);movw (%eax), %dx;movw %dx, (%ecx);movw (%eax), %dx": 2,
                "movw (%eax), %ax;movw %ax, (%ecx);popl %ebp;retl $;int": 1,
                "movl %ecx, ;movl (%eax), %ecx;movl %ecx, ;movw (%eax), %cx;movw %cx, ": 1,
                "movw %cx, ;movw (%eax), %ax;movw %ax, ;retl;int": 1,
                "andl $, (%eax);andl $, (%ecx);retl;int;int": 1,
                "pushl %edi;movzwl %ax, %edi;leal (%edi,%edi,), %edi;shll $, %edi;cmpl $, (%edi)": 1,
                "movl -(%ebp), %ecx;movl %eax, -(%ecx);movl , %eax;movl -(%ebp), %ecx;andl $, %eax": 2,
                "movl %eax, (%esi);jmp  <SetShadowDescriptorEntries+>;movw $, -(%eax);movl -(%ebp), %eax;movw , %cx": 1,
                "movw $, -(%eax);movl -(%ebp), %eax;movw , %cx;movw %cx, -(%eax);movl -(%ebp), %eax": 1,
                "calll - <SetShadowDescriptorEntries+>;movw (%edi), %ax;movw %ax, (%esi);movzwl (%edi), %eax;movl %eax, (%esi)": 1,
                "movl (%eax), %esi;movzwl (%esi), %eax;movzwl (%esi), %edi;subl %eax, %edi;movl (%esi), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);jmp  <SetShadowDescriptorEntries+>;movw (%esi), %ax;movw %ax, -(%ecx)": 1,
                "calll - <SetShadowDescriptorEntries+>;movw %ax, (%esi);calll - <host_simulate>;cmpl $, %edi;jne  <SetShadowDescriptorEntries+>": 1,
                "movw -(%ebp), %ax;movw %ax, (%esi);cmpw %bx, ;movl -(%ebp), %eax;je  <SetShadowDescriptorEntries+>": 1,
                "movw %ax, (%esi);cmpw %bx, ;movl -(%ebp), %eax;je  <SetShadowDescriptorEntries+>;movl (%eax), %eax": 1,
                "cmpw %bx, ;movl -(%ebp), %eax;je  <SetShadowDescriptorEntries+>;movl (%eax), %eax;movl %eax, (%esi)": 1,
                "movl %eax, -(%ebp);calll - <SetShadowDescriptorEntries+>;testl %eax, %eax;jne  <SetShadowDescriptorEntries+>;movw (%esi), %ax": 1,
                "calll - <SetShadowDescriptorEntries+>;testl %eax, %eax;jne  <SetShadowDescriptorEntries+>;movw (%esi), %ax;movw %ax, -(%ebp)": 1,
                "addw $, (%esi);movl , %eax;movl -(%ebp), %ecx;movl (%eax,%ecx,), %eax;movw %ax, (%esi)": 1,
                "movw %ax, (%esi);movzwl -(%ebp), %eax;movl %eax, (%esi);movzwl -(%ebp), %eax;movw %bx, (%esi)": 1,
                "movl -(%ebp), %ecx;movw (%ecx), %ax;testw %ax, %ax;jne  <SetShadowDescriptorEntries+>;cmpw %ax, (%ecx)": 1,
                "movl , %eax;movw , %cx;addw %cx, (%eax);pushl -(%ebp);calll - <SetShadowDescriptorEntries+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <setIF+>;testl %eax, %eax;jl  <SetShadowDescriptorEntries+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <DpmiSetIncrementalAlloc+>;xorl %eax, %eax;jmp  <SetShadowDescriptorEntries+>": 1,
                "jmp  <SetShadowDescriptorEntries+>;movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "andw $, (%eax);movw %cx, (%eax);movl , %ecx;movl %ecx, (%eax);movl , %ecx": 1,
                "pushl %eax;calll - <DpmiSetIncrementalAlloc+>;testl %eax, %eax;jge  <SetShadowDescriptorEntries+>;xorl %eax, %eax": 1,
                "pushl %esi;movl (%ebp), %esi;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %esi;movl , %esi;movl $, %ebx;cmpl %ebx, %esi;je  <SetShadowDescriptorEntries+>": 2,
                "movl $, %ebx;cmpl %ebx, %esi;je  <SetShadowDescriptorEntries+>;pushl %edi;movw (%esi), %ax": 1,
                "jl  <SetShadowDescriptorEntries+>;movl (%esi), %eax;movl (%esi), %edi;movl %edi, (%eax);movl (%esi), %eax": 2,
                "movw %bx, (%edx,%eax);movzbl (%ebp), %eax;movw %cx, (%esi);testb $, (,%eax,);je  <SetShadowDescriptorEntries+>": 1,
                "addl $, %esi;movl %fs:, %eax;movl (%eax), %eax;testb $, (%eax);jne  <SetShadowDescriptorEntries+>": 2,
                "pushl %ebx;xorl %eax, %eax;movw (%esi), %ax;pushl %edi;pushl $": 2,
                "movzwl %cx, %edi;movw %bx, (%edi,%eax);addl %edx, %ecx;leal (%esi), %edx;movw (%edx), %bx": 1,
                "andw $, %ax;orw (%esi), %ax;leal (%esi), %ecx;movl (%ecx), %edx;movzwl %ax, %eax": 1,
                "popl %edi;andl $, %edx;orl %eax, %edx;popl %esi;movl %edx, (%ecx)": 1,
                "leal (%edx,%ecx,), %ecx;movl (%ecx), %esi;movzwl (%ecx), %edi;movl %esi, %edx;andl $, %edx": 1,
                "movl (%eax), %eax;jmp  <SetShadowDescriptorEntries+>;movzwl (%eax), %eax;cmpw $, ;movl (%ebp), %edi": 1,
                "pushl %ebx;movl %esi, (%ecx);calll - <VdmMapFlat>;movl (%ebp), %ecx;popl %edi": 1,
                "calll - <setSP+>;pushl $;calll *;popl %edi;popl %ebx": 1,
                "cmpb (%edi), %dl;jne  <SetShadowDescriptorEntries+>;testb %cl, %cl;je  <SetShadowDescriptorEntries+>;movb (%eax), %dl": 1,
                "movzwl , %eax;movl %eax, (%esi);movzwl , %eax;pushl %eax;calll *": 1,
                "je  <SetShadowDescriptorEntries+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 2,
                "movw -(%ebp), %cx;movl %eax, (%esi);movw , %ax;movw %ax, (%esi);movl -(%ebp), %eax": 1,
                "cmpl %edx, %ecx;movl $, -(%ebp);movl %ecx, -(%ebp);je  <SetShadowDescriptorEntries+>;jmp  <SetShadowDescriptorEntries+>": 1,
                "cmpw %ax, (%ecx);je  <SetShadowDescriptorEntries+>;movl (%ecx), %ecx;cmpl %edx, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %eax, (%esi);movw $, (%esi);movzwl , %eax;movl %eax, (%esi);movl , %eax": 2,
                "movl , %eax;movw , %cx;addw %cx, (%eax);testb $, (%esi);je  <SetShadowDescriptorEntries+>": 3,
                "cmpl %edx, %ebx;jne - <SetShadowDescriptorEntries+>;jmp  <SetShadowDescriptorEntries+>;andl $, -(%ebp);andl $, -(%ebp)": 1,
                "movw (%ebx), %cx;shrl $, %edx;cmpw %cx, %dx;movl %edx, -(%ebp);jbe  <SetShadowDescriptorEntries+>": 1,
                "leal (%edx,%ecx,), %edx;movl %edx, -(%ebp);movl -(%ebp), %edx;subl %ecx, %edx;testw %dx, %dx": 1,
                "movl %edx, -(%ebp);movl -(%ebp), %edx;subl %ecx, %edx;testw %dx, %dx;movl -(%ebp), %ecx": 1,
                "cmpb $, (%ecx);jne  <SetShadowDescriptorEntries+>;cmpb $-, (%ecx);jne  <SetShadowDescriptorEntries+>;incl -(%ebp)": 1,
                "jb - <SetShadowDescriptorEntries+>;andl $, -(%ebp);testw %dx, %dx;jbe  <SetShadowDescriptorEntries+>;pushl -(%ebp)": 1,
                "testw %dx, %dx;jbe  <SetShadowDescriptorEntries+>;pushl -(%ebp);calll - <SetShadowDescriptorEntries+>;testl %eax, %eax": 1,
                "addl $, -(%ebp);cmpw -(%ebp), %ax;jb - <SetShadowDescriptorEntries+>;calll - <setSP+>;movw -(%ebp), %ax": 1,
                "calll - <setSP+>;movw -(%ebp), %ax;movw %ax, (%esi);movzwl (%ebx), %eax;movl %eax, (%esi)": 1,
                "movw -(%ebp), %ax;movw %ax, (%esi);movzwl (%ebx), %eax;movl %eax, (%esi);movw $, (%esi)": 1,
                "movl (%ebx), %eax;pushl %edi;shll $, %eax;pushl %eax;pushl -(%ebp)": 1,
                "testw %cx, %cx;movl %eax, (%esi);je  <SetShadowDescriptorEntries+>;movw %cx, (%esi);orl $, %eax": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movl %ebx, -(%ebp);movw %cx, -(%ebp);je  <SetShadowDescriptorEntries+>": 1,
                "movw %ax, (%esi);movl -(%ebp), %eax;movl %edi, -(%eax);movw , %cx;movl -(%ebp), %eax": 1,
                "calll - <host_simulate>;movw (%esi), %cx;xorl %eax, %eax;movw (%esi), %ax;testw %ax, %ax": 1,
                "popl %ecx;jmp  <SetShadowDescriptorEntries+>;calll - <setSP+>;movw -(%ebp), %ax;movw %ax, (%esi)": 1,
                "movw (%esi), %ax;movw %ax, -(%ebp);movw (%esi), %ax;movw %ax, -(%ebp);jbe  <SetShadowDescriptorEntries+>": 1,
                "movl %ebx, (%edx);pushl %ecx;movl %ebx, ;calll - <SetShadowDescriptorEntries+>;calll - <setSP+>": 1,
                "cmpw $, (%ebp);ja  <SetShadowDescriptorEntries+>;cmpl $, ;jne  <SetShadowDescriptorEntries+>;movl , %eax": 1,
                "jne  <SetShadowDescriptorEntries+>;movl , %eax;movl $, ;jmp  <SetShadowDescriptorEntries+>;movw , %ax": 1,
                "movl %eax, %ebx;movl (%esp), %ecx;movl (%esp), %edx;movl (%esp), %eax;shrl %ebx": 2,
                "shrl %edx;rcrl %eax;orl %ebx, %ebx;jne - <SetShadowDescriptorEntries+>;divl %ecx": 2,
                "mull (%esp);movl %eax, %ecx;movl (%esp), %eax;mull %esi;addl %ecx, %edx": 3,
                "movl %esi, %eax;decl %edi;jne  <SetShadowDescriptorEntries+>;negl %edx;negl %eax": 2,
                "popl %edi;retl $;int;int;int": 2,
                "incl %ebp;movl (%esp), %edx;negl %eax;negl %edx;sbbl $, %eax": 1,
                "divl %ecx;movl %eax, %esi;movl %ebx, %eax;mull (%esp);movl %eax, %ecx": 2,
                "subl (%esp), %eax;sbbl (%esp), %edx;xorl %ebx, %ebx;subl (%esp), %eax;sbbl (%esp), %edx": 2,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, ;jle  <SetShadowDescriptorEntries+>": 3,
                "movl %esp, %ebp;cmpl $, ;jle  <SetShadowDescriptorEntries+>;pushl $;pushl (%ebp)": 3,
                "movl (%ebp), %eax;movl , %ecx;movzbl (%ecx,%eax,), %eax;andl $, %eax;popl %ebp": 3,
                "jae  <SetShadowDescriptorEntries+>;cmpl $, ;jle  <SetShadowDescriptorEntries+>;pushl $;pushl %ebx": 1,
                "popl %ecx;popl %ecx;jmp  <SetShadowDescriptorEntries+>;movl , %eax;movzbl (%eax,%ebx,), %eax": 8,
                "andl $, %eax;testl %eax, %eax;je  <SetShadowDescriptorEntries+>;movl , %edx;movl %ebx, %eax": 1,
                "xorl %eax, %eax;movb -(%ebp), %ah;orl %ecx, %eax;jmp  <SetShadowDescriptorEntries+>;cmpl $, %ebx": 1,
                "cmpb %bl, %ah;je  <SetShadowDescriptorEntries+>;testb %ah, %ah;je - <SetShadowDescriptorEntries+>;jmp - <SetShadowDescriptorEntries+>": 1,
                "testw $, %ax;je  <SetShadowDescriptorEntries+>;cmpb $, %bl;jl  <SetShadowDescriptorEntries+>;cmpb $, %bl": 1,
                "jg  <SetShadowDescriptorEntries+>;movsbl %bl, %esi;subl $, %esi;jmp  <SetShadowDescriptorEntries+>;movsbl %bl, %esi": 1,
                "jmp  <SetShadowDescriptorEntries+>;movsbl %bl, %esi;addl $-, %esi;cmpl (%ebp), %esi;jae  <SetShadowDescriptorEntries+>": 1,
                "movb (%edi), %bl;incl %edi;jmp - <SetShadowDescriptorEntries+>;movl (%ebp), %ecx;decl %edi": 1,
                "testb $, %cl;jne  <SetShadowDescriptorEntries+>;movl %ecx, %edx;andl $, %edx;je  <SetShadowDescriptorEntries+>": 1,
                "je  <SetShadowDescriptorEntries+>;cmpl $, -(%ebp);ja  <SetShadowDescriptorEntries+>;testl %edx, %edx;jne  <SetShadowDescriptorEntries+>": 1,
                "cmpl %eax, -(%ebp);jbe  <SetShadowDescriptorEntries+>;testb $, %cl;movl $, ;je  <SetShadowDescriptorEntries+>": 1,
                "je  <SetShadowDescriptorEntries+>;negl -(%ebp);movl -(%ebp), %eax;jmp  <SetShadowDescriptorEntries+>;movl (%ebp), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %edi;movl (%ebp), %edi;xorl %eax, %eax": 1,
                "movb (%ecx), %dl;movl (%esp), %edi;testb %dl, %dl;je  <SetShadowDescriptorEntries+>;movb (%ecx), %dh": 1,
                "testb %dh, %dh;je  <SetShadowDescriptorEntries+>;movl %edi, %esi;movl (%esp), %ecx;movb (%edi), %al": 1,
                "addl $, %ecx;cmpb %ah, %al;je - <SetShadowDescriptorEntries+>;jmp - <SetShadowDescriptorEntries+>;xorl %eax, %eax": 1,
                "popl %esi;popl %ebx;popl %edi;movb %dl, %al;jmp - <SetShadowDescriptorEntries+>": 1,
                "movb %dl, %al;jmp - <SetShadowDescriptorEntries+>;leal -(%edi), %eax;popl %esi;popl %ebx": 1,
                "retl;movl %edi, %eax;popl %esi;popl %ebx;popl %edi": 1,
                "incl %eax;pushl %eax;calll - <ResumeTimerThread+>;testl %eax, %eax;popl %ecx": 1,
                "addl $, %ebx;xorl %eax, %eax;movw (%edx), %ax;cmpw $, %ax;jb  <SetShadowDescriptorEntries+>": 1,
                "popl %edi;popl %esi;movzwl %ax, %ecx;movzwl %bx, %eax;subl %ecx, %eax": 2,
                "incl %ebx;incl %ebx;jmp  <SetShadowDescriptorEntries+>;movl (%ebp), %eax;testl %eax, %eax": 1,
                "movl %eax, -(%ebp);je  <SetShadowDescriptorEntries+>;cmpl $, (%ebp);je  <SetShadowDescriptorEntries+>;subl %ebx, %edi": 1,
                "testl %ecx, %ecx;je  <SetShadowDescriptorEntries+>;movb $, (%ecx);movl -(%ebp), %edi;testl %edi, %edi": 1,
                "cmpl %ebx, %edi;jb  <SetShadowDescriptorEntries+>;cmpl $, (%ebp);je  <SetShadowDescriptorEntries+>;subl %ebx, %edi": 1,
                "cmpl %esi, %eax;jae  <SetShadowDescriptorEntries+>;movl %eax, %esi;pushl %esi;pushl -(%ebp)": 1,
                "testl %edi, %edi;je  <SetShadowDescriptorEntries+>;subl %ebx, %eax;cmpl %esi, %eax;jae  <SetShadowDescriptorEntries+>": 1,
                "pushl %edi;calll  <SetShadowDescriptorEntries+>;addl $, %esp;movb $, (%esi,%edi);movl (%ebp), %eax": 1,
                "decl %ecx;decl %ecx;notl %ecx;movl %ecx, %eax;popl %ebx": 1,
                "notl %ecx;movl %ecx, %eax;popl %ebx;popl %esi;popl %edi": 1,
                "je  <SetShadowDescriptorEntries+>;cmpl %eax, ;pushl %ebx;jne  <SetShadowDescriptorEntries+>;movl (%ebp), %edx": 1,
                "jne  <SetShadowDescriptorEntries+>;movl (%ebp), %edx;movl (%ebp), %ecx;xorl %eax, %eax;movw (%ecx), %ax": 1,
                "calll  <SetShadowDescriptorEntries+>;incl %edi;popl %ecx;incl %edi;decl (%ebp)": 1,
                "incl %edi;decl (%ebp);popl %ecx;je  <SetShadowDescriptorEntries+>;testw %bx, %bx": 1,
                "cmpw %dx, %cx;je  <SetShadowDescriptorEntries+>;xorl %eax, %eax;popl %ebp;retl": 1,
                "calll - <getDI+>;addl $, %esp;movl %eax, -(%ebp);cmpl %ebx, %eax;je  <SetShadowDescriptorEntries+>": 1,
                "calll - <getDX+>;popl %ecx;movl (%ebp), %eax;leal -(%ebp), %esp;calll - <getDI+>": 1,
                "movl %eax, (%esi);jne  <SetShadowDescriptorEntries+>;cmpl $, %esi;je  <SetShadowDescriptorEntries+>;cmpl $, %esi": 1,
                "movl %ecx, (%esi);movl (%esi), %ecx;subl %eax, %edi;decl %ecx;testl %edi, %edi": 1,
                "movl (%ebp), %ecx;movb (%ebp), %al;decl (%ebp);calll - <SetShadowDescriptorEntries+>;cmpl $-, (%esi)": 1,
                "cmpl $, (%ebp);jg - <SetShadowDescriptorEntries+>;popl %esi;popl %ebx;popl %ebp": 1,
                "calll - <SetShadowDescriptorEntries+>;movl %eax, %edi;pushl %edi;calll - <SetShadowDescriptorEntries+>;testl %eax, %eax": 1,
                "calll - <getDI+>;movl , %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movl %eax, -(%ebp);movb %al, -(%ebp);movl %eax, -(%ebp)": 1,
                "cmpb $, (%eax);jne  <SetShadowDescriptorEntries+>;movl %eax, %edi;jmp  <SetShadowDescriptorEntries+>;cmpb $, %cl": 1,
                "cmpb $, %al;je  <SetShadowDescriptorEntries+>;cmpb $, %al;movb $-, -(%ebp);jne  <SetShadowDescriptorEntries+>": 1,
                "movl -(%ebp), %esi;jmp  <SetShadowDescriptorEntries+>;incl -(%ebp);movl -(%ebp), %edx;calll - <SetShadowDescriptorEntries+>": 1,
                "testl %ecx, %ecx;je  <SetShadowDescriptorEntries+>;cmpl $, -(%ebp);je  <SetShadowDescriptorEntries+>;cmpl $, %esi": 1,
                "je  <SetShadowDescriptorEntries+>;cmpl $, %esi;jg  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;cmpl $, %esi": 1,
                "je  <SetShadowDescriptorEntries+>;cmpl $, %esi;je  <SetShadowDescriptorEntries+>;pushl $;popl %eax": 1,
                "movl %eax, -(%ebp);movl %eax, %esi;movl -(%ebp), %ebx;cmpl $, %ebx;jne  <SetShadowDescriptorEntries+>": 1,
                "jne  <SetShadowDescriptorEntries+>;movb $, -(%ebp);jmp  <SetShadowDescriptorEntries+>;leal -(%ebp), %esi;movl -(%ebp), %ebx": 1,
                "decl -(%ebp);incl -(%ebp);movl -(%ebp), %edi;movl %edi, %edx;calll - <SetShadowDescriptorEntries+>": 1,
                "cmpl $, -(%ebp);jle  <SetShadowDescriptorEntries+>;movl $, -(%ebp);cmpl $, ;jle  <SetShadowDescriptorEntries+>": 1,
                "movl %eax, %ebx;jmp - <SetShadowDescriptorEntries+>;cmpl $, -(%ebp);je  <SetShadowDescriptorEntries+>;cmpl $, %ebx": 1,
                "cmpl $, -(%ebp);je  <SetShadowDescriptorEntries+>;cmpl $, %ebx;je  <SetShadowDescriptorEntries+>;cmpl $, %ebx": 1,
                "je  <SetShadowDescriptorEntries+>;movb $, (%esi);incl %esi;incl -(%ebp);movl %edi, %edx": 1,
                "movl %esi, -(%ebp);decl -(%ebp);pushl -(%ebp);pushl -(%ebp);calll - <SetShadowDescriptorEntries+>": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <SetShadowDescriptorEntries+>;popl %ecx;popl %ecx": 1,
                "xorl %ebx, %ecx;testl %edx, %ecx;je  <SetShadowDescriptorEntries+>;cmpb $, -(%ebp);jne  <SetShadowDescriptorEntries+>": 1,
                "pushl ;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);orl $-, -(%ebp);jmp  <SetShadowDescriptorEntries+>;xorl %eax, %eax;incl %eax": 3,
                "jne  <SetShadowDescriptorEntries+>;movb $, %dl;incl %ebx;movb $, (%esi);jmp  <SetShadowDescriptorEntries+>": 1,
                "movb $, (%esi);jmp  <SetShadowDescriptorEntries+>;movb -(%ebp), %dl;movb (%ebx), %al;cmpb $, %al": 1,
                "incl %esi;decl %edi;jne - <SetShadowDescriptorEntries+>;xorb %dl, %dl;jmp  <SetShadowDescriptorEntries+>": 1,
                "cmpl $, -(%ebp);jne - <SetShadowDescriptorEntries+>;movl %ebx, -(%ebp);jmp - <SetShadowDescriptorEntries+>;cmpl $, %ebx": 1,
                "jne  <SetShadowDescriptorEntries+>;testl %ecx, %ecx;je  <SetShadowDescriptorEntries+>;movb $, -(%ebp);jmp  <SetShadowDescriptorEntries+>": 2,
                "je  <SetShadowDescriptorEntries+>;decl -(%ebp);jne  <SetShadowDescriptorEntries+>;movb $, -(%ebp);jmp  <SetShadowDescriptorEntries+>": 2,
                "negl %eax;movl -(%ebp), %ecx;adcl $, %ecx;negl %ecx;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;je  <SetShadowDescriptorEntries+>;shll $, -(%ebp);movl %ebx, %eax;calll - <SetShadowDescriptorEntries+>": 1,
                "movl %eax, (%ebx);jmp - <SetShadowDescriptorEntries+>;cmpb $, -(%ebp);je  <SetShadowDescriptorEntries+>;movl %eax, (%ebx)": 1,
                "movl %esi, %edx;calll - <SetShadowDescriptorEntries+>;movzbl (%edi), %ecx;incl %edi;movl %edi, -(%ebp)": 1,
                "cmpl $-, -(%ebp);jne - <SetShadowDescriptorEntries+>;cmpb $, (%edi);jne  <SetShadowDescriptorEntries+>;movl -(%ebp), %eax": 1,
                "movl (%ebp), %ecx;orl %ecx, %ecx;je  <SetShadowDescriptorEntries+>;movl (%ebp), %esi;movl (%ebp), %edi": 1,
                "movb $, %bl;movb $, %dh;leal (%ecx), %ecx;movb (%esi), %ah;orb %ah, %ah": 1,
                "movl $, %ecx;jb  <SetShadowDescriptorEntries+>;negl %ecx;movl %ecx, %eax;popl %ebx": 1,
                "orw %ax, %ax;leave;retl;cmpl $, ;jne  <SetShadowDescriptorEntries+>": 1,
                "popl %ecx;jne  <SetShadowDescriptorEntries+>;movw (%ebp), %ax;leave;retl": 1,
                "pushl ;calll  <SetShadowDescriptorEntries+>;addl $, %esp;testl %eax, %eax;movw (%ebp), %ax": 1,
                "testl %eax, %eax;movw (%ebp), %ax;je  <SetShadowDescriptorEntries+>;movw -(%ebp), %ax;leave": 1,
                "movb (%edx), %al;movzbl %al, %esi;decl %ecx;testb $, (%esi);movb %al, (%edi)": 1,
                "testb %al, %al;je - <SetShadowDescriptorEntries+>;testl %ecx, %ecx;jne - <SetShadowDescriptorEntries+>;jmp - <SetShadowDescriptorEntries+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;cmpl , %eax;jb  <SetShadowDescriptorEntries+>": 1,
                "cmpl , %eax;jb  <SetShadowDescriptorEntries+>;xorl %eax, %eax;popl %ebp;retl": 1,
                "jne  <SetShadowDescriptorEntries+>;xorl %eax, %eax;jmp  <SetShadowDescriptorEntries+>;cmpl %esi, ;jne  <SetShadowDescriptorEntries+>": 1,
                "jne - <SetShadowDescriptorEntries+>;divl %ebx;movl %eax, %esi;mull (%esp);movl %eax, %ecx": 1,
                "movl (%ebp), %ebx;cmpl $-, %ebx;pushl %esi;je  <SetShadowDescriptorEntries+>;movl (%ebp), %esi": 1,
                "cmpl $, (%esi);jne  <SetShadowDescriptorEntries+>;incl %eax;movl %eax, (%esi);decl (%esi)": 1,
                "incl %eax;movl %eax, (%esi);orl $-, %eax;popl %esi;popl %ebx": 1,
                "popl %ebx;popl %ebp;retl;movb %bl, (%eax);movl (%esi), %eax": 1,
                "je  <SetShadowDescriptorEntries+>;movb (%esi), %al;cmpb %bl, %al;jne  <SetShadowDescriptorEntries+>;movl (%ebp), %eax": 1,
                "movw %bx, (%eax);xorl %eax, %eax;popl %esi;popl %ebx;popl %ebp": 1,
                "popl %esi;popl %ebx;popl %ebp;retl;cmpl %ebx, ": 1,
                "pushl $;pushl ;calll *;testl %eax, %eax;jne - <SetShadowDescriptorEntries+>": 1,
                "cmpl %ebx, ;jne  <SetShadowDescriptorEntries+>;pushl %ebx;pushl %ebx;pushl %edi": 1,
                "cmpl %eax, (%ebp);je  <SetShadowDescriptorEntries+>;cmpl $-, %eax;je  <SetShadowDescriptorEntries+>;movl %eax, (%ebp)": 2,
                "calll - <getDI+>;xorl %ebx, %ebx;xorl %edi, %edi;orl $-, -(%ebp);movl -(%ebp), %esi": 1,
                "testl %eax, %eax;je  <SetShadowDescriptorEntries+>;testb $, (%ebp);je  <SetShadowDescriptorEntries+>;movl %esi, -(%ebp)": 1,
                "pushl (%ebp);pushl %esi;pushl %edi;pushl $;pushl (%ebp)": 1,
                "movl %eax, -(%ebp);jmp  <SetShadowDescriptorEntries+>;movl -(%ebp), %edi;cmpl %ebx, -(%ebp);je  <SetShadowDescriptorEntries+>": 1,
                "pushl %eax;pushl $;calll  <SetShadowDescriptorEntries+>;addl $, %esp;testl %eax, %eax": 1,
                "movl , %eax;cmpl %esi, %eax;jne  <SetShadowDescriptorEntries+>;pushl (%ebp);pushl (%ebp)": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);cmpl %edi, (%ebp);jne  <SetShadowDescriptorEntries+>;movl , %eax": 1,
                "rep  stosb %al, %es:(%edi);orl $-, -(%ebp);jmp  <SetShadowDescriptorEntries+>;xorl %eax, %eax;incl %eax": 1,
                "calll - <getDI+>;andl $, -(%ebp);orl $-, -(%ebp);xorl %esi, %esi;incl %esi": 2,
                "movl %eax, -(%ebp);cmpl %edi, %eax;je - <SetShadowDescriptorEntries+>;movl %esi, -(%ebp);pushl %edi": 1,
                "pushl (%ebp);calll *;testl %eax, %eax;je  <SetShadowDescriptorEntries+>;movl %esi, -(%ebp)": 1,
                "addl $, %esp;jmp  <SetShadowDescriptorEntries+>;andl $, -(%ebp);cmpl $, -(%ebp);je  <SetShadowDescriptorEntries+>": 1,
                "calll - <getDX+>;popl %ecx;cmpl $, -(%ebp);je  <SetShadowDescriptorEntries+>;pushl -(%ebp)": 1,
                "leal -(%edi), %eax;pushl $;cltd;popl %ecx;idivl %ecx": 1,
                "movl (%ebp), %ecx;movb %al, (%ecx);andb $-, (%esi);jmp  <SetShadowDescriptorEntries+>;movb (%esi), %al": 1,
                "addl %eax, (%eax);addl %eax, (%edx);decl %edi;movw , %es;jb -": 1,
                "popl %esi;popl %ebp;retl $;xorl -(%edi), %ecx;addl $, %eax": 1,
                "addl %eax, (%edx);orl %eax, (%ebx);addb $, %al;pushl %es;popl %es": 1,
                "orl %eax, (%eax);orl %eax, (%ecx);orl %eax, (%eax);orl %eax, (%edx);orl %ecx, (%ecx)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;andl $, %eax;addl $, %eax": 2,
                "jmp  <SetShadowDescriptorEntries+>;movb , %cl;jmp  <SetShadowDescriptorEntries+>;movb , %cl;movl (%ebp), %eax": 1,
                "pushl %edi;movl %ebx, %eax;cltd;pushl $;popl %esi": 1,
                "pushl $;popl %esi;idivl %esi;shrl $, %edi;xorl %ecx, %ecx": 1,
                "movl %esi, %ecx;shll %cl, %eax;movb (%edi), %cl;testb %al, %cl;jne  <SetShadowDescriptorEntries+>": 1,
                "xorl %eax, %eax;movb (%edi,%esi,), %ah;movb (%edi,%esi,), %al;movl %eax, -(%ebp);movzwl %ax, %eax": 1,
                "cmpl %ecx, %eax;movl %eax, -(%ebp);jbe  <SetShadowDescriptorEntries+>;movl %ecx, -(%ebp);movl %ecx, %eax": 1,
                "movl -(%ebp), %ecx;pushl %ebx;movzwl -(%ebp), %ebx;jae  <SetShadowDescriptorEntries+>;movzbl (%ecx), %edx": 1,
                "shll $, %edx;orl %ebx, %edx;jmp  <SetShadowDescriptorEntries+>;xorl %edx, %edx;movb (%ecx), %dl": 1,
                "leal (%ebx,%eax), %ecx;cmpl $, %ecx;movzbl (%ebp), %ecx;jbe  <SetShadowDescriptorEntries+>;movl %ecx, %eax": 1,
                "cmpl $, %ecx;movzbl (%ebp), %ecx;jbe  <SetShadowDescriptorEntries+>;movl %ecx, %eax;shrl $, %eax": 1,
                "jmp  <SetShadowDescriptorEntries+>;xorl %edx, %edx;movb (%eax), %dl;andl $, %edx;imull -(%ebp), %esi": 1,
                "movb %dl, (%ebx);leal (%edi,%esi,), %edx;movl %ebx, (%ebp);movb %ch, (%eax);movl %edx, (%ebp)": 1,
                "jne  <SetShadowDescriptorEntries+>;andl $, -(%ebp);movl %esi, %ecx;movb $, %dl;shlb %cl, %dl": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;movl %eax, %esi;addl $, %esi": 1,
                "pushl %eax;pushl %ebx;calll - <IsCdRomFile+>;jmp  <SetShadowDescriptorEntries+>;pushl $": 1,
                "leal (%esi,%ebx), %edi;pushl %edi;pushl %ebx;calll - <IsCdRomFile+>;pushl %esi": 1,
                "movl %esi, %eax;jmp - <SetShadowDescriptorEntries+>;int;int;int": 1,
                "movl $, %ecx;cmpl %ecx, %eax;jae  <SetShadowDescriptorEntries+>;movl %ecx, %eax;pushl %edi": 1,
                "cmpl %ecx, %eax;jae  <SetShadowDescriptorEntries+>;movl %ecx, %eax;pushl %edi;pushl $": 1,
                "calll - <SetShadowDescriptorEntries+>;popl %edi;popl %ebx;retl;int": 1,
                "pushl $;pushl $;pushl %edi;calll - <IsCdRomFile+>;popl %edi": 1,
                "shlb $, %cl;orb (%eax), %cl;movl $, (%eax);shlb $, %cl;orb (%eax), %cl": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;xorl %ecx, %ecx;pushl $": 1,
                "andl $, %edx;imull %ecx, %edx;leal (%ecx,%ecx,), %ecx;addl %edx, %eax;shll %ecx": 1,
                "subl %edi, %eax;je  <SetShadowDescriptorEntries+>;decl %eax;je  <SetShadowDescriptorEntries+>;decl %eax": 4,
                "jne  <SetShadowDescriptorEntries+>;calll - <getCF+>;movl , %eax;pushl %edi;pushl $": 1,
                "pushl $;pushl (%eax);jmp  <SetShadowDescriptorEntries+>;pushl %edi;pushl $": 1,
                "pushl (%eax);jmp  <SetShadowDescriptorEntries+>;calll - <getCF+>;pushl $-;pushl $": 1,
                "movl , %eax;movl $, (%eax);movl $, (%eax);movzbl (%eax), %eax;pushl %eax": 1,
                "movb (%ebp), %cl;testb %cl, %cl;movl , %eax;movb %cl, (%eax);je  <SetShadowDescriptorEntries+>": 1,
                "cmpl $, %eax;jne  <SetShadowDescriptorEntries+>;movl $, ;calll *(%eax);jmp  <SetShadowDescriptorEntries+>": 1,
                "movl %ecx, (%eax);calll - <setDH+>;popl %ebp;retl $;int": 2,
                "cmpl $, (%eax);je  <SetShadowDescriptorEntries+>;andl $, (%eax);calll - <getBP+>;movl , %eax": 1,
                "andl $, (%eax);calll - <getBP+>;movl , %eax;cmpl $, (%eax);jne  <SetShadowDescriptorEntries+>": 1,
                "jne  <SetShadowDescriptorEntries+>;movl $, (%eax);popl %edi;jmp - <SetShadowDescriptorEntries+>;testl %edi, %edi": 1,
                "popl %edi;jmp - <SetShadowDescriptorEntries+>;testl %edi, %edi;movl $, (%eax);je  <SetShadowDescriptorEntries+>": 1,
                "jmp - <SetShadowDescriptorEntries+>;testl %edi, %edi;movl $, (%eax);je  <SetShadowDescriptorEntries+>;movw (%eax), %cx": 1,
                "subw %cx, (%eax);popl %edi;retl;int;int": 1,
                "movl %esi, (%eax);jmp  <SetShadowDescriptorEntries+>;movl (%eax), %ecx;decl %ecx;je  <SetShadowDescriptorEntries+>": 1,
                "movb %cl, (%edx);movl %esi, (%eax);calll - <.text+>;popl %esi;popl %ebp": 1,
                "movl $, (%eax);jmp  <SetShadowDescriptorEntries+>;movl $, (%eax);calll - <DispatchInterrupts+>;movl , %eax": 1,
                "movl %ecx, (%eax);calll - <setDH+>;popl %ebx;popl %ebp;retl $": 3,
                "jmp  <SetShadowDescriptorEntries+>;movl $, (%eax);jmp - <SetShadowDescriptorEntries+>;int;int": 1,
                "decl %ecx;pushl %ebx;je  <SetShadowDescriptorEntries+>;decl %ecx;jne  <SetShadowDescriptorEntries+>": 1,
                "movw $, ;movl , %eax;movw %si, (%eax);popl %esi;retl": 1,
                "calll - <call_ica_hw_interrupt+>;popl %ebx;popl %ebp;retl $;int": 1,
                "cmpb $, -(%ebp);jne  <SetShadowDescriptorEntries+>;movb $-, -(%ebp);jmp  <SetShadowDescriptorEntries+>;pushl %esi": 2,
                "pushl %esi;calll - <getES+>;movb -(%ebp), %al;orb %al, -(%ebp);pushl -(%ebp)": 1,
                "movl -(%ebp), %eax;cmpl %eax, -(%ebp);jbe  <SetShadowDescriptorEntries+>;pushl %esi;pushl $": 1,
                "pushl $;calll - <call_ica_hw_interrupt+>;xorl %eax, %eax;movb -(%ebp), %al;andl $-, %eax": 1,
                "xorl %eax, %eax;movb -(%ebp), %al;andl $-, %eax;pushl %eax;pushl $": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;calll - <getCF+>;movzwl -(%ebp), %eax": 1,
                "pushl $;pushl %eax;pushl -(%ebp);calll - <IsCdRomFile+>;pushl %eax": 1,
                "calll - <cpu_createthread+>;testb $, %al;je  <SetShadowDescriptorEntries+>;pushl $;jmp  <SetShadowDescriptorEntries+>": 1,
                "pushl %ebx;calll  <SetShadowDescriptorEntries+>;xorl %edi, %edi;testw %si, %si;jle  <SetShadowDescriptorEntries+>": 2,
                "pushl %edi;movl %eax, %esi;calll  <SetShadowDescriptorEntries+>;testl %eax, %eax;jne  <SetShadowDescriptorEntries+>": 1,
                "movl %eax, %esi;calll  <SetShadowDescriptorEntries+>;testl %eax, %eax;jne  <SetShadowDescriptorEntries+>;pushl $": 1,
                "jmp  <SetShadowDescriptorEntries+>;calll  <SetShadowDescriptorEntries+>;movzbl -(%ebp), %ecx;cmpw %ax, %cx;jl  <SetShadowDescriptorEntries+>": 1,
                "cmpw %ax, %si;jge  <SetShadowDescriptorEntries+>;cmpw $-, %si;jne  <SetShadowDescriptorEntries+>;pushl -(%ebp)": 1,
                "movl %edi, %edi;pushl %edi;calll - <getDX>;movl %eax, %edi;pushl %edi": 2,
                "pushl %edi;calll - <getDX>;movl %eax, %edi;pushl %edi;calll  <SetShadowDescriptorEntries+>": 2,
                "testl %eax, %eax;je  <SetShadowDescriptorEntries+>;pushl $;calll - <setAH>;popl %edi": 2,
                "xorl %esi, %esi;movl %eax, %ebx;testw %bx, %bx;jle  <SetShadowDescriptorEntries+>;pushl %esi": 1,
                "pushl %esi;pushl %esi;pushl %edi;calll  <SetShadowDescriptorEntries+>;pushl %esi": 1,
                "cmpb $, -(%ebp);jb - <SetShadowDescriptorEntries+>;pushl $;calll - <setAH>;movl -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);jle  <SetShadowDescriptorEntries+>;movzwl %ax, %eax;movl %eax, -(%ebp);pushl %ebx": 1,
                "calll - <IsCdRomFile+>;pushl %eax;calll - <IsCdRomFile+>;incl %esi;incl %esi": 4,
                "pushl %eax;calll - <IsCdRomFile+>;incl %esi;incl %esi;movzwl %si, %eax": 2,
                "pushl $;calll - <setAH>;movl -(%ebp), %ecx;popl %esi;popl %ebx": 1,
                "testl %eax, %eax;je  <SetShadowDescriptorEntries+>;pushl $;jmp - <SetShadowDescriptorEntries+>;calll  <SetShadowDescriptorEntries+>": 2,
                "testl %eax, %eax;jne  <SetShadowDescriptorEntries+>;incl %ebx;cmpw -(%ebp), %bx;jb - <SetShadowDescriptorEntries+>": 1,
                "pushl %edi;calll  <SetShadowDescriptorEntries+>;testl %eax, %eax;jne  <SetShadowDescriptorEntries+>;movswl -(%ebp,%esi), %esi": 1,
                "calll - <getDI>;movl %eax, %edi;calll - <getDS>;movl %eax, %ebx;calll - <getSI>": 1,
                "calll  <SetShadowDescriptorEntries+>;testl %eax, %eax;jne  <SetShadowDescriptorEntries+>;pushl $;calll - <setAH>": 3,
                "movl -(%ebp), %eax;cmpw $, %ax;jl  <SetShadowDescriptorEntries+>;cmpw -(%ebp), %ax;jge  <SetShadowDescriptorEntries+>": 1,
                "popl %ebx;leave;retl;pushl $;jmp - <SetShadowDescriptorEntries+>": 2,
                "pushl $;jmp - <SetShadowDescriptorEntries+>;pushl $;jmp - <SetShadowDescriptorEntries+>;int": 2,
                "pushl $;calll - <setAH>;jmp  <SetShadowDescriptorEntries+>;pushl %esi;calll - <getBX>": 1,
                "cmpw %di, %si;jle  <SetShadowDescriptorEntries+>;pushl %esi;pushl %edi;pushl %ebx": 1,
                "pushl %esi;pushl %ebx;calll  <SetShadowDescriptorEntries+>;jmp  <SetShadowDescriptorEntries+>;calll  <SetShadowDescriptorEntries+>": 1,
                "calll  <SetShadowDescriptorEntries+>;testw %ax, %ax;jl  <SetShadowDescriptorEntries+>;pushl %eax;pushl %edi": 2,
                "popl %ebx;leave;retl;jge - <SetShadowDescriptorEntries+>;pushl %esi": 1,
                "movb %al, %bl;cmpb $, %bl;jbe  <SetShadowDescriptorEntries+>;pushl $;jmp  <SetShadowDescriptorEntries+>": 1,
                "jmp  <SetShadowDescriptorEntries+>;testb %bl, %bl;pushl %esi;pushl %edi;jne  <SetShadowDescriptorEntries+>": 1,
                "calll - <getDS>;movl %eax, %esi;calll - <getSI>;pushl $;leal -(%ebp), %ecx": 2,
                "jg  <SetShadowDescriptorEntries+>;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll  <SetShadowDescriptorEntries+>": 1,
                "pushl %eax;calll - <IsCdRomFile+>;calll  <SetShadowDescriptorEntries+>;xorl %esi, %esi;movl %eax, %edi": 1,
                "jmp  <SetShadowDescriptorEntries+>;pushl %esi;calll - <setDX>;jmp  <SetShadowDescriptorEntries+>;calll - <getES>": 1,
                "pushl %edi;calll - <getDS>;movl %eax, %edi;calll - <getSI>;movl %eax, %esi": 2,
                "calll - <IsCdRomFile+>;pushl %eax;calll - <getCX+>;leal -(%ebp), %eax;pushl %eax": 3,
                "calll - <IsCdRomFile+>;pushl %eax;calll - <getCF+>;movzwl -(%ebp), %eax;addl %ebx, -(%ebp)": 2,
                "pushl %eax;calll - <getCF+>;movzwl -(%ebp), %eax;addl %ebx, -(%ebp);cmpl %edi, %eax": 2,
                "pushl %eax;calll - <getCF+>;addl %ebx, -(%ebp);calll  <SetShadowDescriptorEntries+>;cmpb $, -(%ebp)": 2,
                "calll - <getSP>;subl %ebx, %eax;pushl %eax;calll - <setSP>;calll - <cpu_createthread+>": 2,
                "shll %esi;calll - <getOF>;orl %eax, %esi;shll %esi;calll - <getDF>": 2,
                "pushl $;popl %ebx;cmpb %bl, %al;movb %al, -(%ebp);jbe  <SetShadowDescriptorEntries+>": 1,
                "movb %al, -(%ebp);jbe  <SetShadowDescriptorEntries+>;pushl $;calll - <setAH>;jmp  <SetShadowDescriptorEntries+>": 1,
                "pushl %eax;calll - <getCF+>;addl %ebx, -(%ebp);cmpb $, -(%ebp);jne  <SetShadowDescriptorEntries+>": 1,
                "movw %ax, (,%esi,);movzbl -(%ebp), %eax;cmpw %ax, -(%ebp);jl - <SetShadowDescriptorEntries+>;calll - <getSP>": 1,
                "pushl %edi;movzwl %ax, %edi;je  <SetShadowDescriptorEntries+>;addl %esi, %edi;cmpl $, %edi": 1,
                "calll - <getAL>;movb %al, %bl;calll  <SetShadowDescriptorEntries+>;movl %eax, -(%ebp);movzbl %bl, %eax": 1,
                "je  <SetShadowDescriptorEntries+>;pushl $;jmp  <SetShadowDescriptorEntries+>;pushl %esi;pushl %edi": 1,
                "addl %ebx, %esi;incb -(%ebp);movb -(%ebp), %al;cmpb -(%ebp), %al;jb - <SetShadowDescriptorEntries+>": 1,
                "subl %ebx, %eax;je  <SetShadowDescriptorEntries+>;decl %eax;je  <SetShadowDescriptorEntries+>;pushl $": 1,
                "movl %eax, %esi;calll - <getIntelRegistersPointer+>;pushl %esi;movl %eax, %edi;calll - <setBX>": 1,
                "pushl %eax;calll - <IsCdRomFile+>;incl %esi;incl %esi;calll  <SetShadowDescriptorEntries+>": 1,
                "pushl %eax;calll - <IsCdRomFile+>;pushl -(%ebp);incl %esi;incl %esi": 1,
                "int;movl %edi, %edi;pushl %esi;calll - <getBX>;movl %eax, %esi": 1,
                "testw %si, %si;jle  <SetShadowDescriptorEntries+>;calll  <SetShadowDescriptorEntries+>;testw %ax, %ax;jl  <SetShadowDescriptorEntries+>": 1,
                "jmp  <SetShadowDescriptorEntries+>;pushl $;jmp  <SetShadowDescriptorEntries+>;calll - <getBL>;movzbw %al, %ax": 1,
                "calll  <SetShadowDescriptorEntries+>;cmpw $, %ax;jne  <SetShadowDescriptorEntries+>;pushl $;jmp  <SetShadowDescriptorEntries+>": 1,
                "xorl %ebx, %ebx;xorl %esi, %esi;incl %esi;popl %edi;negl %esi": 1,
                "jne  <SetShadowDescriptorEntries+>;pushl $;jmp  <SetShadowDescriptorEntries+>;calll  <SetShadowDescriptorEntries+>;cmpw %bx, %ax": 1,
                "cmpw %bx, %ax;movl %eax, -(%ebp);jne  <SetShadowDescriptorEntries+>;xorl %eax, %eax;movw , %ax": 1,
                "cmpw %bx, %ax;je  <SetShadowDescriptorEntries+>;pushl %ebx;pushl %ebx;pushl %eax": 1,
                "calll - <setCX>;movl %esi, ;movl $, ;jmp  <SetShadowDescriptorEntries+>;cmpl %esi, ": 1,
                "pushl %eax;calll - <getCF+>;movzwl -(%ebp), %ebx;incl %esi;leal -(%ebp), %eax": 1,
                "cmpb $, -(%ebp);jbe  <SetShadowDescriptorEntries+>;pushl $;jmp  <SetShadowDescriptorEntries+>;orb -(%ebp), %bl": 1,
                "movzwl %si, %eax;pushl %eax;pushl %edi;movb %bl, -(%ebp);calll - <IsCdRomFile+>": 1,
                "subl %ecx, %eax;incl %eax;shll $, %eax;subl %edx, %eax;cmpl %eax, -(%ebp)": 1,
                "movzwl -(%ebp), %ecx;movzwl -(%ebp), %edx;movl %ecx, %eax;shll $, %eax;addl %edx, %eax": 1,
                "addl %edx, %eax;addl -(%ebp), %eax;cmpl $, %eax;jb  <SetShadowDescriptorEntries+>;pushl $": 1,
                "movzwl -(%ebp), %eax;movzwl -(%ebp), %esi;shll $, %eax;addl %esi, %eax;movl -(%ebp), %esi": 1,
                "jae  <SetShadowDescriptorEntries+>;cmpl %edx, %eax;ja  <SetShadowDescriptorEntries+>;cmpl %ecx, %eax;jb  <SetShadowDescriptorEntries+>": 1,
                "jne - <SetShadowDescriptorEntries+>;cmpl $, -(%ebp);je  <SetShadowDescriptorEntries+>;pushl $;jmp  <SetShadowDescriptorEntries+>": 1,
                "calll - <IsCdRomFile+>;pushl $;calll - <setBX>;pushl $;calll - <setAX>": 1,
                "calll - <setBX>;pushl $;calll - <setAX>;retl;int": 1,
                "movl (%ebp), %esi;pushl %esi;pushl $;calll - <SoftPcEoi+>;testw %ax, %ax": 1,
                "pushl %esi;pushl $;calll - <SoftPcEoi+>;testw %ax, %ax;movw %ax, ": 1,
                "testw %ax, %ax;movw %ax, ;je  <SetShadowDescriptorEntries+>;movw (%esi), %cx;movl (%esi), %edx": 1,
                "pushl $;pushl $;calll - <WOWSysErrorBox+>;xorl %eax, %eax;jmp  <SetShadowDescriptorEntries+>": 2,
                "movzwl , %eax;pushl %edi;addl $, %eax;pushl $;cltd": 1,
                "idivl %ecx;movzwl %ax, %esi;pushl %esi;calll - <ResumeTimerThread+>;movl %eax, %edi": 1,
                "leal (,%esi,), %esi;movl (%esi), %edx;pushl %eax;pushl %edx;calll  <SetShadowDescriptorEntries+>": 1,
                "movl %esp, %ebp;movw (%ebp), %ax;cmpw , %ax;jb  <SetShadowDescriptorEntries+>;xorl %eax, %eax": 1,
                "setne %cl;movl %ecx, %eax;popl %ebp;retl $;int": 2,
                "movswl (%ebp), %eax;movswl (%ebp), %ecx;movl (,%eax,), %eax;movw (%ebp), %dx;leal (%eax,%ecx,), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;movswl (%ebp), %eax;movl (,%eax,), %eax;movw (%eax), %ax": 1,
                "movswl (%ebp), %eax;movzbl (%ebp), %ecx;movl (,%eax,), %eax;movw (%eax,%ecx,), %ax;popl %ebp": 1,
                "incl %eax;pushl $;incl %eax;pushl %eax;movl $, %esi": 1,
                "jl - <SetShadowDescriptorEntries+>;jmp  <SetShadowDescriptorEntries+>;movswl %si, %ecx;orw $, (%eax,%ecx,);pushl (%ebp)": 1,
                "je  <SetShadowDescriptorEntries+>;orl $-, %eax;jmp  <SetShadowDescriptorEntries+>;incw ;xorl %eax, %eax": 1,
                "movzbl (%ebp), %esi;shll %esi;movzwl (%esi,%eax), %eax;cmpl $-, %eax;movw (%esi), %cx": 1,
                "popl %ebx;leave;retl $;cmpw $-, (%ebp);jne  <SetShadowDescriptorEntries+>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ecx;andl $, -(%ebp);cmpw $, ": 1,
                "pushl %ebx;pushl %edi;jbe  <SetShadowDescriptorEntries+>;movl (%ebp), %edi;movl (%ebp), %ebx": 1,
                "jbe  <SetShadowDescriptorEntries+>;movl (%ebp), %edi;movl (%ebp), %ebx;cmpw $, (%ebp);jl  <SetShadowDescriptorEntries+>": 1,
                "movzwl , %eax;movswl -(%ebp), %ecx;cmpl %eax, %ecx;jl - <SetShadowDescriptorEntries+>;cmpw $, (%ebp)": 1,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movswl (%ebp), %edx": 1,
                "movl %esp, %ebp;movswl (%ebp), %edx;movw , %cx;pushl %esi;xorl %esi, %esi": 1,
                "movl , %edi;movzwl (%edi,%eax,), %eax;cmpl %edx, %eax;je  <SetShadowDescriptorEntries+>;incl %esi": 1,
                "movw (%ebp), %ax;cmpw , %ax;jae  <SetShadowDescriptorEntries+>;movzwl %ax, %eax;movl %eax, %ecx": 1,
                "xorl %eax, %eax;incl %eax;jmp  <SetShadowDescriptorEntries+>;xorl %eax, %eax;popl %ebp": 1,
                "pushl %ebp;movl %esp, %ebp;cmpw $, ;jne  <SetShadowDescriptorEntries+>;xorl %eax, %eax": 1,
                "addl %edx, %esi;andl $, %ecx;movb $, %dl;shlb %cl, %dl;movl (%ebp), %ecx": 1,
                "imull %eax, %ecx;testl %eax, %eax;leal (%edx,%ecx,), %edx;jle  <SetShadowDescriptorEntries+>;movl , %ecx": 1,
                "testl %eax, %eax;leal (%edx,%ecx,), %edx;jle  <SetShadowDescriptorEntries+>;movl , %ecx;subl %edx, %ecx": 1,
                "testb $, %bl;je - <SetShadowDescriptorEntries+>;pushl %edi;xorl %edi, %edi;incl %edx": 1,
                "movl %eax, %esi;shrl $, %eax;xorl %edx, %edx;andl $, %esi;addl %ecx, %eax": 1,
                "movl %esi, %ecx;shll %cl, %edx;movb (%eax), %cl;testb %dl, %cl;je  <SetShadowDescriptorEntries+>": 1,
                "andl $, -(%ebp);movzwl %dx, %edx;imull %ecx, %edx;testl %ecx, %ecx;leal (%eax,%edx,), %esi": 1,
                "movzwl %dx, %edx;imull %ecx, %edx;testl %ecx, %ecx;leal (%eax,%edx,), %esi;jle  <SetShadowDescriptorEntries+>": 1,
                "testl %eax, %eax;jne  <SetShadowDescriptorEntries+>;movl -(%ebp), %eax;incl -(%ebp);movw %di, (%eax,%esi)": 1,
                "jne  <SetShadowDescriptorEntries+>;movl -(%ebp), %eax;incl -(%ebp);movw %di, (%eax,%esi);movzwl , %eax": 1,
                "movzwl , %eax;incl %esi;incl %esi;cmpl %eax, -(%ebp);jl - <SetShadowDescriptorEntries+>": 1,
                "int;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movw , %ax": 1,
                "movw , %ax;pushl %ebx;pushl %esi;pushl %edi;xorl %edi, %edi": 1,
                "cmpw %si, %di;jb - <SetShadowDescriptorEntries+>;incw ;movw %bx, %ax;popl %edi": 1,
                "andb $, (%ebp);testb $, (%ebp);movl (%ebp), %esi;je  <SetShadowDescriptorEntries+>;pushl %esi": 1,
                "jmp  <SetShadowDescriptorEntries+>;pushl (%ebp);pushl %ebx;pushl (%ebp);pushl %esi": 1,
                "testl %eax, %eax;je  <SetShadowDescriptorEntries+>;orl $-, %eax;popl %edi;popl %esi": 1,
                "pushl (%ebp);pushl %edi;pushl (%ebp);calll  <SetShadowDescriptorEntries+>;jmp - <SetShadowDescriptorEntries+>": 1,
                "movl , %eax;cltd;idivl %ebx;movl , %edi;movl %esi, %ebx": 1,
                "calll - <getAH>;subb $, %al;jmp  <SetShadowDescriptorEntries+>;calll - <getAL>;movzbl %al, %eax": 1,
                "subb $, %al;jmp  <SetShadowDescriptorEntries+>;calll - <getAL>;movzbl %al, %eax;subl %edi, %eax": 1,
                "orb %cl, %al;movb -(%ebp), %cl;shlb %al;andb $, %cl;orb %cl, %al": 1,
                "calll - <setAL>;jmp  <SetShadowDescriptorEntries+>;movl , %eax;pushl $;addl $, %eax": 1,
                "pushl %eax;calll - <setAH>;jmp  <SetShadowDescriptorEntries+>;orl $, %eax;jmp - <SetShadowDescriptorEntries+>": 1,
                "movzbl %bl, %eax;shrl $, %eax;movw (,%eax,), %ax;movw %ax, -(%ebp);movl , %eax": 1,
                "calll - <call_ica_hw_interrupt+>;movl , %eax;incl %eax;pushl %edi;movb $, ": 1,
                "movl (%ebp), %eax;pushl $;movl $, %edi;movl %eax, %esi;popl %ecx": 1,
                "calll - <WaitIfIdle+>;pushl %eax;calll  <SetShadowDescriptorEntries+>;movl %eax, %esi;cmpl $-, %esi": 1,
                "addl $, %esp;testl %eax, %eax;jl  <SetShadowDescriptorEntries+>;pushl %edi;pushl %ebx": 1,
                "popl %ecx;xorl %eax, %eax;jmp - <SetShadowDescriptorEntries+>;int;int": 1,
                "pushl %eax;calll *;testl %eax, %eax;jl  <SetShadowDescriptorEntries+>;pushl ": 1,
                "movl %esp, %ebp;pushl (%ebp);pushl (%ebp);calll - <setBL+>;popl %ecx": 1,
                "pushl (%ebp);pushl (%ebp);calll - <setBL+>;popl %ecx;popl %ecx": 1,
                "je  <SetShadowDescriptorEntries+>;pushl $;pushl (%ebp);calll - <IsCdRomFile+>;andl $, -(%ebp)": 1,
                "subl $, %esp;pushl %edi;xorl %edi, %edi;cmpl %edi, ;je  <SetShadowDescriptorEntries+>": 1,
                "calll - <SetShadowDescriptorEntries+>;pushl (%ebp);pushl ;calll *;cmpl %edi, %eax": 1,
                "pushl (%ebp);pushl ;calll *;cmpl %edi, %eax;jge  <SetShadowDescriptorEntries+>": 1,
                "calll - <host_direct_access_error+>;xorl %eax, %eax;jmp  <SetShadowDescriptorEntries+>;movl , %eax;cmpl %edi, %eax": 1,
                "pushl $;pushl $;pushl $;leal -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %ecx;pushl %eax;pushl ;calll *;cmpl %edi, %eax": 1,
                "pushl %eax;pushl ;calll *;cmpl %edi, %eax;jge - <SetShadowDescriptorEntries+>": 1,
                "shll $, %eax;pushl %eax;calll - <cpu_createthread+>;jmp  <SetShadowDescriptorEntries+>;pushl %esi": 1,
                "orl $-, %eax;jmp  <SetShadowDescriptorEntries+>;xorl %eax, %eax;popl %esi;popl %ebp": 1,
                "movl %ecx, %edx;je  <SetShadowDescriptorEntries+>;pushl %edi;incl %ebx;incl %eax": 1,
                "pushl %esi;pushl %edi;pushl %eax;pushl (%ebp);calll - <IsCdRomFile+>": 1,
                "addl %eax, %ecx;addl %ecx, %edx;pushl %edx;calll - <getDI+>;addl $, %esp": 1,
                "movl %eax, %edx;movl , %eax;movl %esi, %ecx;leal (%eax,%ebx), %esi;movl %ecx, %eax": 1,
                "movl %ecx, %eax;shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;addl $, %esp": 1,
                "popl %ecx;movl %eax, -(%ebp);jne - <SetShadowDescriptorEntries+>;orl $-, %eax;jmp - <SetShadowDescriptorEntries+>": 1,
                "movl (%ebp), %ecx;addl %eax, %edi;movl %ecx, %eax;shrl $, %ecx;movl %edx, %esi": 1,
                "calll - <getDI+>;addl $, %esp;cmpl $, (%ebp);popl %ebx;jle  <SetShadowDescriptorEntries+>": 1,
                "jg  <SetShadowDescriptorEntries+>;calll - <setDI+>;movl %eax, (%ebp);movzwl (%ebp), %ecx;movl , %eax": 1,
                "movzwl (%ebp), %ecx;pushl %edi;movzwl (%ebp), %edi;pushl %ebx;shll $, %ecx": 1,
                "shll $, %ecx;pushl %esi;pushl (%ebp);addl %eax, %ecx;addl %ecx, %edi": 1,
                "addl %eax, %ecx;addl %ecx, %edi;calll - <getDI+>;pushl %ebx;pushl %edi": 1,
                "calll - <getDI+>;pushl %ebx;pushl %edi;pushl %esi;calll - <getDI+>": 1,
                "pushl (%ebp);calll - <getDX+>;popl %ecx;xorl %eax, %eax;popl %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;calll  <SetShadowDescriptorEntries+>;movl (%ebp), %esi": 1,
                "calll  <SetShadowDescriptorEntries+>;movw %ax, (%esi);popl %esi;popl %ebp;retl $": 1,
                "subl $, %esp;pushl %esi;pushl %edi;pushl $;popl %edx": 1,
                "pushl %eax;pushl $;orl $-, %edi;pushl $;movl %edi, ": 1,
                "pushl %eax;calll - <SetShadowDescriptorEntries+>;cmpw $, %ax;jbe  <SetShadowDescriptorEntries+>;pushl %eax": 1,
                "cmpl %eax, %edi;jb - <SetShadowDescriptorEntries+>;pushl $;pushl (%ebp);pushl %esi": 1,
                "pushl $;popl %ecx;leal -(%ebp), %esi;movl %ebx, %edi;rep  movsl (%esi), %es:(%edi)": 1,
                "pushl %esi;calll - <SetShadowDescriptorEntries+>;jmp  <SetShadowDescriptorEntries+>;xorl %eax, %eax;popl %edi": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;pushl %ebx;movl (%ebp), %ebx;pushl %esi": 1,
                "shrl $, %esi;cmpl %eax, %ecx;jne  <SetShadowDescriptorEntries+>;movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "movl %ebx, (%eax);jmp  <SetShadowDescriptorEntries+>;jbe  <SetShadowDescriptorEntries+>;addl %eax, %esi;pushl %esi": 1,
                "pushl $;leal (%esi,%ecx), %eax;pushl %eax;pushl %ebx;pushl %edi": 1,
                "leal (%esi,%ecx), %eax;pushl %eax;pushl %ebx;pushl %edi;calll - <setIF+>": 1,
                "movl (%edi), %eax;pushl (%ebp);shll $, %esi;addl %esi, %eax;pushl %eax": 1,
                "pushl (%ebp);shll $, %esi;addl %esi, %eax;pushl %eax;calll *(%edi)": 1,
                "pushl (%ebp);pushl %edi;calll - <setIF+>;testl %eax, %eax;je - <SetShadowDescriptorEntries+>": 1,
                "pushl %esi;calll *(%edi);pushl (%ebp);pushl (%ebp);pushl %edi": 1,
                "movl %ebx, -(%ebp);movb $, -(%ebp);jmp  <SetShadowDescriptorEntries+>;movl $, -(%ebp);movb $, -(%ebp)": 1,
                "orb $-, -(%ebp);pushl $;movl %ecx, %eax;popl %esi;andl %esi, %eax": 1,
                "cmpl $, %eax;je  <SetShadowDescriptorEntries+>;movl $, ;movl %ebx, ;orl $-, %eax": 1,
                "movl %ebx, -(%ebp);movl %ecx, %eax;movl $, %edx;andl %edx, %eax;movl $, %ecx": 1,
                "andl (%ebp), %ecx;testb %cl, %cl;js  <SetShadowDescriptorEntries+>;xorl %esi, %esi;incl %esi": 1,
                "movl %eax, %esi;cmpl %edi, %esi;je  <SetShadowDescriptorEntries+>;pushl %esi;calll *": 1,
                "pushl %esi;calll *;calll *;pushl %eax;calll - <getDI+>": 1,
                "cmpl $, %eax;jne  <SetShadowDescriptorEntries+>;orb $, -(%ebp);jmp  <SetShadowDescriptorEntries+>;cmpl $, %eax": 1,
                "pushl %ebx;calll - <getDI+>;movb -(%ebp), %al;popl %ecx;popl %ecx": 1,
                "pushl %eax;pushl %ebx;movb $, -(%ebp);calll - <getDI+>;addl $, %esp": 1,
                "popl %ecx;jmp - <SetShadowDescriptorEntries+>;int;int;int": 1,
                "cmpl $-, %eax;je  <SetShadowDescriptorEntries+>;pushl %edi;movl (%ebp), %edi;subl %eax, %edi": 1,
                "calll - <getDI+>;addl $, %esp;cmpl $-, %eax;je  <SetShadowDescriptorEntries+>;subl %eax, %edi": 1,
                "cmpl $-, %eax;je  <SetShadowDescriptorEntries+>;subl %eax, %edi;testl %edi, %edi;jg - <SetShadowDescriptorEntries+>": 1,
                "calll *;movl %eax, %esi;negl %esi;sbbl %esi, %esi;negl %esi": 1,
                "movl $, ;calll *;movl %eax, ;pushl $;pushl -(%ebp)": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;cmpl , %eax;pushl %esi;jae  <SetShadowDescriptorEntries+>": 1,
                "sarl $, %ecx;leal (,%ecx,), %ecx;movl %eax, %edx;movl (%ecx), %eax;movsbl (%eax,%edx), %eax": 1,
                "jmp  <SetShadowDescriptorEntries+>;movl $, ;orl $-, %eax;popl %esi;popl %ebp": 1,
                "movl %eax, %esi;leal (%esi), %eax;pushl %eax;calll - <cpu_createthread+>;movzbl %al, %eax": 1,
                "leal (%esi), %eax;pushl %eax;calll - <cpu_createthread+>;movzbl %al, %eax;pushl %eax": 4,
                "pushl %eax;calll - <IsCdRomFile+>;movl %eax, %ebx;leal (%ebx), %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);calll - <cpu_createthread+>;movzbw %al, %si;pushl %ebx;shll $, %esi": 1,
                "calll - <cpu_createthread+>;movzbw %al, %si;pushl %ebx;shll $, %esi;calll - <cpu_createthread+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <SetShadowDescriptorEntries+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl $;calll - <WOWSysErrorBox+>;cmpw $, %si;jne  <SetShadowDescriptorEntries+>;incl %edi": 1,
                "pushl %edi;leal (%ebx), %eax;pushl %eax;movl %edi, -(%ebp);calll - <IsCdRomFile+>": 1,
                "calll - <getES+>;movb -(%ebp), %al;orb %al, -(%ebp);pushl -(%ebp);pushl %edi": 1,
                "int;int;int;retl;hlt": 1,
                "int;retl;hlt;loopne ;addb %bh, %bh": 1,
                "loopne ;addb %bh, %bh;decl (%edx);jmp  <SetShadowDescriptorEntries+>;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %ch, %dl;ljmpl $, $": 1,
                "addl $, %eax;addb %bl, %dl;calll -;addl $, %eax;addb %cl, (%ecx,%ebp,)": 1,
                "addb %dh, -(%edx);jmp  <SetShadowDescriptorEntries+>;addb %dl, %dh;jmp  <SetShadowDescriptorEntries+>;addb %ah, %dl": 1,
                "addb %dl, %dh;jmp  <SetShadowDescriptorEntries+>;addb %ah, %dl;jmp  <SetShadowDescriptorEntries+>;addb %dh, %al": 1,
                "addb %ah, (%edi,%ebp,);addb %bh, -(%edx);addl $, %eax;addb %dh, -(%eax);outl %eax, %dx": 1,
                "addl $, %eax;addb %al, -(%edx);addl $, %eax;addb %dh, -(%eax);addl $, %eax": 1,
                "addb %dh, -(%eax);addl $, %eax;addb %bl, %dh;addl $, %eax;addb %dl, (%eax)": 1,
                "addl $, %eax;addb %dh, -(%esi);addl $, %eax;addb %bl, -(%edx);cmc": 1,
                "cli;addl $, %eax;addb %al, -(%edi,%esi,);addl $, %eax;addb %bh, -(%edi,%esi,)": 1,
                "addb %al, -(%edi,%esi,);addl $, %eax;addb %bh, -(%edi,%esi,);addl $, %eax;addb %ch, %dl": 1,
                "addl $, %eax;addb %bl, -(%esi);sti;addl $, %eax;addb %ch, %ah": 1,
                "imull $, (%ebx), %esp;je  <SetShadowDescriptorEntries+>;addb %dl, (%edx,%eax);jns  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>": 1,
                "je  <SetShadowDescriptorEntries+>;addb %dl, (%edx,%eax);jns  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>;outsl (%esi), %dx": 1,
                "pushl $;decl %ecx;addb %al, %fs:(%eax);cmpb $, %al;incl %edi": 1,
                "arpl %sp, (%ebp);jae  <SetShadowDescriptorEntries+>;addb %bh, (%ebx);addl %eax, (%edi);je  <SetShadowDescriptorEntries+>": 1,
                "jae  <SetShadowDescriptorEntries+>;popl %ebx;addl (%ebp), %edx;pushl $;incl %ebp": 1,
                "jb  <SetShadowDescriptorEntries+>;orl %eax, (%ecx);incl %edi;je  <SetShadowDescriptorEntries+>;outsl (%esi), %dx": 1,
                "popl (%ebx);pushl %edi;jb  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;incl %esi": 1,
                "je  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;imull $, (%esi), %ebp;addl %eax, (%edi);je  <SetShadowDescriptorEntries+>": 1,
                "je  <SetShadowDescriptorEntries+>;imull $, (%esi), %ebp;addl %eax, (%edi);je  <SetShadowDescriptorEntries+>;outsb (%esi), %dx": 1,
                "jae  <SetShadowDescriptorEntries+>;incl %ebp;jb  <SetShadowDescriptorEntries+>;outsl (%esi), %dx;jb  <SetShadowDescriptorEntries+>": 2,
                "imull $, (%esi), %ebp;adcb (%ebx), %al;pushl %ebx;je  <SetShadowDescriptorEntries+>;popal": 1,
                "insb %dx, %es:(%edi);incl %ebx;outsl (%esi), %dx;jne  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>": 1,
                "scasb %es:(%edi), %al;addl %eax, (%edi);je  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>": 1,
                "addb (%eax), %cl;popal;jo  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>;addb %al, %gs:(%eax)": 1,
                "jb  <SetShadowDescriptorEntries+>;addb %al, %gs:(%eax);outsb (%esi), %dx;addl (%esi), %edx;jb  <SetShadowDescriptorEntries+>": 1,
                "outsl (%esi), %dx;arpl %bp, (%ebx);incl %ebp;js  <SetShadowDescriptorEntries+>;pushl $": 1,
                "addb (%edi,%ebp,), %cl;decl %esp;imull $, (%edx), %esp;addb %al, (%eax);testb $, (%eax)": 1,
                "incl %ebp;decl %ebp;incl %ebx;pushl %eax;addb %al, (%eax)": 1,
                "addb (%ebx,%eax,), %cl;popal;jo  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;imull $, (%esi), %ebp": 2,
                "jo  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;imull $, (%esi), %ebp;addb (%ebp), %cl;insb %dx, %es:(%edi)": 1,
                "je  <SetShadowDescriptorEntries+>;imull $, (%esi), %ebp;incl %ecx;addb %al, (%eax);movb $, %ah": 1,
                "pushl %esp;outsl (%esi), %dx;incl %ecx;outsb (%esi), %dx;jae  <SetShadowDescriptorEntries+>": 1,
                "jne  <SetShadowDescriptorEntries+>;incl %ebp;js  <SetShadowDescriptorEntries+>;addb %al, (%eax);lretl $": 1,
                "jns  <SetShadowDescriptorEntries+>;js  <SetShadowDescriptorEntries+>;addb %bl, %bl;addl %edx, (%edx);incl %ebp": 1,
                "pushl $;addb %al, (%eax);addb $, %al;pushl %ebx;je  <SetShadowDescriptorEntries+>": 1,
                "imull $, (%ecx,%ebp,), %esi;incl %ebx;jb  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;arpl %sp, (%ecx)": 2,
                "pushl %ebx;je  <SetShadowDescriptorEntries+>;pushl $;pushl %eax;jb  <SetShadowDescriptorEntries+>": 1,
                "addl (%ebx), %edx;je  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>;outsl (%esi), %dx;jb  <SetShadowDescriptorEntries+>": 1,
                "arpl %si, (%eax,%eax);addl (%esp,%ebp,), %edx;pushl %ebx;je  <SetShadowDescriptorEntries+>;popal": 1,
                "pushl %ebx;je  <SetShadowDescriptorEntries+>;popal;insb %dx, %es:(%edi);jne  <SetShadowDescriptorEntries+>": 1,
                "jae  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;popal;insb %dx, %es:(%edi);jne  <SetShadowDescriptorEntries+>": 1,
                "addb %bh, %gs:;incl %ebx;jne  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>;outsb (%esi), %dx": 1,
                "xchgl %esi, %eax;addb %al, (%ebp);je  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>": 1,
                "je  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;addb %al, (%eax);jl  <SetShadowDescriptorEntries+>;pushl %edi": 1,
                "jle  <SetShadowDescriptorEntries+>;decl %edi;jne  <SetShadowDescriptorEntries+>;jo  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>": 1,
                "je  <SetShadowDescriptorEntries+>;imull $, (%esi), %ebp;addl %eax, (%edi);je  <SetShadowDescriptorEntries+>;outsl (%esi), %dx": 1,
                "pushl $;incl %ebx;outsl (%esi), %dx;outsb (%esi), %dx;je  <SetShadowDescriptorEntries+>": 1,
                "addb %al, (%eax);stc;addl %eax, (%edi);outsl (%esi), %dx;bound (%ecx), %esp": 1,
                "je  <SetShadowDescriptorEntries+>;outsl (%esi), %dx;outsb (%esi), %dx;addb %al, (%eax);andl %eax, (%ecx)": 1,
                "jo  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;addb %bh, %al;addb (%ebx), %dl;je  <SetShadowDescriptorEntries+>": 1,
                "incl %esi;outsl (%esi), %dx;outsb (%esi), %dx;je  <SetShadowDescriptorEntries+>;imull $, (%edx), %edi": 1,
                "jne  <SetShadowDescriptorEntries+>;js  <SetShadowDescriptorEntries+>;addb %bl, %dh;addb (%ebx), %dl;je  <SetShadowDescriptorEntries+>": 1,
                "addb %al, (%eax);retl $;je  <SetShadowDescriptorEntries+>;jns  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>": 1,
                "pushl $;addb %dh, %al;addb %al, (%esi);decl %esp;imull $, (%edx), %esp": 1,
                "jae  <SetShadowDescriptorEntries+>;popal;je  <SetShadowDescriptorEntries+>;pushl %esp;imull $, (%ebp), %ebp": 1,
                "jae  <SetShadowDescriptorEntries+>;jbe  <SetShadowDescriptorEntries+>;arpl %sp, (%ebp);addb %ch, (%ebp);pushl %ebx": 1,
                "jbe  <SetShadowDescriptorEntries+>;arpl %sp, (%ebp);addb %ch, (%ebp);pushl %ebx;pushl $": 1,
                "incl %esi;imull $, (%esi), %ebp;incl %esi;imull $, (%ebp), %ebp;imull $, (%esi), %ebp": 1,
                "incl %esp;imull $, (%edx), %esi;jns  <SetShadowDescriptorEntries+>;addb %al, (%eax);arpl %ax, (%edx)": 1,
                "incl %esi;imull $, (%ebp), %ebp;je  <SetShadowDescriptorEntries+>;imull $, (%ebp), %ebp;insl %dx, %es:(%edi)": 1,
                "orb %al, (%ebx);pushl %ebx;je  <SetShadowDescriptorEntries+>;imull $, (%ebp), %ebp;bound (%ebp), %esi": 1,
                "arpl %sp, (%ecx);pushl %esp;imull $, (%ebp), %ebp;pushl %ebx;je  <SetShadowDescriptorEntries+>": 1,
                "jne  <SetShadowDescriptorEntries+>;decl %esp;popal;bound (%ebp), %esp;incl %ecx": 1,
                "insl %dx, %es:(%edi);incl %ecx;addb %al, (%ecx);je  <SetShadowDescriptorEntries+>;incl %esi": 1,
                "incl %ecx;addb %al, (%ecx);je  <SetShadowDescriptorEntries+>;incl %esi;imull $, (%ebp), %ebp": 1,
                "pushl %eax;jb  <SetShadowDescriptorEntries+>;arpl %sp, (%ebp);jae  <SetShadowDescriptorEntries+>;addb %ah, (%edx)": 1,
                "pushl %edi;addb %cl, %dl;addl %eax, (%edi);je  <SetShadowDescriptorEntries+>;insl %dx, %es:(%edi)": 1,
                "imull $, (%esi), %ebp;addb (%ebp), %cl;jbe  <SetShadowDescriptorEntries+>;incl %esi;imull $, (%ebp), %ebp": 1,
                "popal;je  <SetShadowDescriptorEntries+>;outsl (%esi), %dx;outsb (%esi), %dx;pushl %edi": 1,
                "je  <SetShadowDescriptorEntries+>;outsl (%esi), %dx;outsb (%esi), %dx;pushl %edi;addb %dl, (%eax)": 1,
                "outsl (%esi), %dx;insl %dx, %es:(%edi);jo  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>": 1,
                "incl %edi;je  <SetShadowDescriptorEntries+>;js  <SetShadowDescriptorEntries+>;pushl %esi;incl %esp": 1,
                "je  <SetShadowDescriptorEntries+>;addb %ah, %ch;addb (%ebx), %dl;je  <SetShadowDescriptorEntries+>;outsl (%esi), %dx": 1,
                "pushl %ebx;je  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;addb %ch, (%edx,%eax);jae  <SetShadowDescriptorEntries+>": 1,
                "outsb %gs:(%esi), %dx;jne  <SetShadowDescriptorEntries+>;outsl (%esi), %dx;outsb (%esi), %dx;je  <SetShadowDescriptorEntries+>": 1,
                "jne  <SetShadowDescriptorEntries+>;outsl (%esi), %dx;outsb (%esi), %dx;je  <SetShadowDescriptorEntries+>;outsl (%esi), %dx": 1,
                "outsb (%esi), %dx;je  <SetShadowDescriptorEntries+>;outsl (%esi), %dx;insb %dx, %es:(%edi);addb %al, (%eax)": 2,
                "outsb (%esi), %dx;jae  <SetShadowDescriptorEntries+>;insb %dx, %es:(%edi);decl %ecx;outsb (%esi), %dx": 3,
                "outsb (%esi), %dx;je  <SetShadowDescriptorEntries+>;imull $, (%edx), %esi;imull $, (%ebp), %esp;incl %edi": 1,
                "addb %dl, %gs:(%eax);addb (%ebx), %dl;insb %dx, %es:(%edi);arpl %si, %gs:(%eax,%edx,);insb %dx, %es:(%edi)": 1,
                "pushl %ebx;je  <SetShadowDescriptorEntries+>;imull $, (%esi), %ebp;decl %esp;outsl (%esi), %dx": 1,
                "decl %ebp;jae  <SetShadowDescriptorEntries+>;popal;incl %ecx;addb %al, (%eax)": 2,
                "je  <SetShadowDescriptorEntries+>;imull $, (%esi), %ebp;arpl %si, (%eax,%eax);addl %eax, (%edi);je  <SetShadowDescriptorEntries+>": 1,
                "addl %eax, (%edi);je  <SetShadowDescriptorEntries+>;insb %dx, %es:(%edi);decl %ecx;je  <SetShadowDescriptorEntries+>": 1,
                "je  <SetShadowDescriptorEntries+>;insl %dx, %es:(%edi);decl %ebp;je  <SetShadowDescriptorEntries+>;imull $, (%ebx), %esp": 1,
                "pushl $;incl %esp;jae  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;jo  <SetShadowDescriptorEntries+>": 1,
                "incl %ecx;addb %al, %dh;addb %al, (%ebp);incl %esp;imull $, (%ecx), %esp": 1,
                "jae  <SetShadowDescriptorEntries+>;popal;incl %ecx;addb %ch, (%esi);incl %edi": 1,
                "imull $, (%esi), %ebp;outsb (%esi), %dx;incl %ecx;addb %al, (%eax);sahf": 1,
                "addb %al, (%ecx,%ebp,);insb %dx, %es:(%edi);outsl (%esi), %dx;incl %edx;outsl (%esi), %dx": 1,
                "ja  <SetShadowDescriptorEntries+>;addb %dl, (%edi);addl %eax, (%edi);je  <SetShadowDescriptorEntries+>;outsl (%esi), %dx": 1,
                "addl %ecx, (%ebp);jae  <SetShadowDescriptorEntries+>;popal;incl %edx;jo  <SetShadowDescriptorEntries+>": 1,
                "fiaddl (%edx);ja  <SetShadowDescriptorEntries+>;jae  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>;outsb (%esi), %dx": 1,
                "roll %cl, (%ecx);decl %ebp;popal;jo  <SetShadowDescriptorEntries+>;imull $, (%edx), %esi": 1,
                "incw %cx;addb %al, (%eax);daa;addl %eax, (%edi);je  <SetShadowDescriptorEntries+>": 1,
                "arpl %si, %gs:(%ecx,%ebp,);outsb (%esi), %dx;addb %dl, (%edx);addb (%edx), %dl;insb %dx, %es:(%edi)": 1,
                "addb %dl, (%ecx,%eax);je  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>;imull $, (%esi), %ebp;outsl (%esi), %dx": 1,
                "outsb (%esi), %dx;imull $, (%ecx,%ebp,), %esi;incl %ebx;jb  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>": 1,
                "outsb (%esi), %dx;addb %al, (%eax);popl %edi;addl %ecx, (%esi);pushl %esi": 1,
                "jb  <SetShadowDescriptorEntries+>;outsb (%esi), %dx;addb %al, (%bx,%si);jne  <SetShadowDescriptorEntries+>;pushl %edx": 1,
                "imull $, (%ebx,%edx,), %esi;addb %dl, %ah;addb (%edx), %dl;insb %dx, %es:(%edi);decl %edi": 1,
                "je  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;jae  <SetShadowDescriptorEntries+>;outsl (%esi), %dx;incl %esp": 1,
                "jb  <SetShadowDescriptorEntries+>;popl %edi;addb %cl, (%esi);incl %ecx;insb %dx, %es:(%edi)": 1,
                "outsb (%esi), %dx;addb %al, (%bx,%si);lesl (%eax), %eax;decl %esi;je  <SetShadowDescriptorEntries+>": 1,
                "outsb (%esi), %dx;incl %esi;imull $, (%ebp), %ebp;je  <SetShadowDescriptorEntries+>;jne  <SetShadowDescriptorEntries+>": 1,
                "je  <SetShadowDescriptorEntries+>;outsl (%esi), %dx;outsb (%esi), %dx;je  <SetShadowDescriptorEntries+>;js  <SetShadowDescriptorEntries+>": 2,
                "addb %cl, (%esi);pushl %ecx;jne  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>;decl %ecx": 1,
                "je  <SetShadowDescriptorEntries+>;outsb (%esi), %dx;outsw (%esi), %dx;jb  <SetShadowDescriptorEntries+>;popal": 1,
                "pushl %ebx;jns  <SetShadowDescriptorEntries+>;bound (%edi), %ebp;imull $, (%ebx), %esp;bound (%edx), %ebp": 2,
                "arpl %si, (%eax,%eax);xchgl %esi, %eax;addl %edx, (%edx);insb %dx, %es:(%edi);incl %ecx": 1,
                "imull $, (%ebp), %ebp;je  <SetShadowDescriptorEntries+>;incl %esi;jb  <SetShadowDescriptorEntries+>;decl %eax": 1,
                "je  <SetShadowDescriptorEntries+>;jne  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>;incl %esp;imull $, (%edx), %esi": 1,
                "incl %ebx;outsl (%esi), %dx;insl %dx, %es:(%edi);jo  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>": 1,
                "outsl (%esi), %dx;insl %dx, %es:(%edi);jo  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>;pushl %ebp": 1,
                "incl %ebx;outsl (%esi), %dx;jne  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;decl %edi": 2,
                "outsl (%esi), %dx;jae  <SetShadowDescriptorEntries+>;jbe  <SetShadowDescriptorEntries+>;arpl %sp, (%ebp);popal": 1,
                "je  <SetShadowDescriptorEntries+>;incl %ecx;insb %dx, %es:(%edi);insb %dx, %es:(%edi);outsl (%esi), %dx": 1,
                "je  <SetShadowDescriptorEntries+>;incl %ebx;jb  <SetShadowDescriptorEntries+>;popal;je  <SetShadowDescriptorEntries+>": 1,
                "jb  <SetShadowDescriptorEntries+>;popal;je  <SetShadowDescriptorEntries+>;pushl %ebp;outsb (%esi), %dx": 1,
                "imull $, (%ebx), %esp;jb  <SetShadowDescriptorEntries+>;outsb (%esi), %dx;addb %al, (%bx,%si);addb $, %al": 1,
                "jb  <SetShadowDescriptorEntries+>;outsb (%esi), %dx;addb %al, (%bx,%si);addb $, %al;pushl %edx": 1,
                "decl %esi;popal;insl %dx, %es:(%edi);pushl %esp;outsl (%esi), %dx": 1,
                "decl %esi;je  <SetShadowDescriptorEntries+>;popal;je  <SetShadowDescriptorEntries+>;decl %esi": 1,
                "jb  <SetShadowDescriptorEntries+>;addb %dl, (%ebp);pushl %edx;je  <SetShadowDescriptorEntries+>;incl %edi": 1,
                "pushl %ebp;addb %al, (%eax);incl (%ecx);pushl %edx;je  <SetShadowDescriptorEntries+>": 1,
                "popal;insl %dx, %es:(%edi);pushl %esp;jns  <SetShadowDescriptorEntries+>;popl %edi": 1,
                "popal;jo  <SetShadowDescriptorEntries+>;xchgl %ebp, %eax;addl %edx, (%edx);insb %dx, %es:(%edi)": 1,
                "outsb (%esi), %dx;je  <SetShadowDescriptorEntries+>;imull $, (%edx), %esi;jns  <SetShadowDescriptorEntries+>;pushl %ebp": 1,
                "addb %al, (%eax);incl (%eax);decl %esi;je  <SetShadowDescriptorEntries+>;jne  <SetShadowDescriptorEntries+>": 1,
                "jne  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>;pushl %ebx;jns  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>": 1,
                "addb $, %al;subb $, %al;addb %al, (%eax);inb $, %al;orl %eax, (%eax)": 1,
                "addb %al, (%eax);inb $, %al;orl %eax, (%eax);xchgl %esp, %eax;incb (%eax,%eax)": 1,
                "incb (%eax,%eax);pushfl;rorl $, (%ecx);movb , %al;pushl %eax": 1,
                "movb , %al;pushl %eax;addb $, %al;andb %al, %dh;addb $, %al": 1,
                "movl $, %esp;addl %eax, ;addb %ah, %cl;pushl $;popl %es": 1,
                "andb $, %al;addb %cl, -;subb $, %al;addb %bl, %dl;popl %ebx": 1,
                "addl (%eax), %eax;cmpb %ch, ;addl (%eax), %eax;movl , %eax;subl (%ebx), %eax": 1,
                "addb %al, (%eax);scasl %es:(%edi), %eax;addl %eax, %es:(%eax);arpl %ax, %ds:(%eax);addb %bh, (%ebp)": 1,
                "addb $, %al;movl (%edx), %edi;addb $, %al;adcl -(%esi), %ebp;addb %al, (%eax)": 1,
                "clc;jg  <SetShadowDescriptorEntries+>;addb %al, (%edi);movb $, %dh;addb %al, (%ebp,%ebx,)": 1,
                "cmpb $, %al;addb %bl, (%ecx);cmpl $, %eax;addb $, %al;movb $, %al": 1,
                "addb $, %al;addb $, %al;enter $, $;movl $, %ecx;aas": 1,
                "addb %ch, (%esi);orb (%esi), %al;addb %bh, (%edx,%ecx);pushl %es;addb %al, (%edi)": 1,
                "pushl %es;addb %dl, (%ebp);pushl %es;addb %ah, (%esi);pushl %es": 1,
                "pushl %es;addb %bl, (%ebx,%ecx);pushl %es;addb %ch, (%ecx);orl (%esi), %eax": 1,
                "addb %cl, (%ecx);orl $, %eax;pushl %es;addb %dh, (%ecx);orl $, %eax": 1,
                "addb %dh, (%eax);pushl %es;addb %dh, (%esi);pushl %es;addb %bh, (%ebp,%ecx)": 1,
                "addb %ah, -(%eax);orl $, %eax;pushl %es;addb %dh, -(%edx);orl $, %eax": 1,
                "addb %dh, -(%edx);orl $, %eax;pushl %es;addb %al, %ch;orl $, %eax": 1,
                "addb %ah, %cl;orl $, %eax;pushl %es;addb %dh, %dl;orl $, %eax": 1,
                "addb %dl, (%ecx);pushl %es;addb %dl, (%edi);pushl %es;addb %bl, (%ebp)": 1,
                "pushl %es;addb %ah, %dh;pushl %cs;pushl %es;addb %ch, %ah": 1,
                "addb %dh, %dl;pushl %cs;pushl %es;addb %bh, %al;pushl %cs": 1,
                "addb %dl, (%eax);clts;addb %dl, (%esi);clts;addb %bl, (%edi,%ecx)": 1,
                "clts;addb %dl, %dl;clts;addb %bl, %al;clts": 1,
                "addb %bl, (%edx);addb %bl, (%ebx);addb %bl, (%eax,%eax);sbbl $, %eax;addb %ah, (%eax)": 1,
                "addb %ch, (%ebx);addb %ch, (%eax,%eax);subl $, %eax;addb %dh, (%eax);addb %dh, (%ecx)": 1,
                "addb %dh, (%ecx);addb %dh, (%edx);addb %dh, (%ebx);addb %dh, (%eax,%eax);xorl $, %eax": 1,
                "addb %ah, (%ecx);insl %dx, %es:(%edi);js  <SetShadowDescriptorEntries+>;addb %al, (%edx);outsl (%esi), %dx": 1,
                "je  <SetShadowDescriptorEntries+>;outsl (%esi), %dx;outsb (%esi), %dx;imull $, (%edi,%ebp,), %esi;incl %esp": 1,
                "outsl (%esi), %dx;je  <SetShadowDescriptorEntries+>;pushl %esp;pushl $;incl %ecx": 1,
                "imull $, (%esi), %ebp;imull $, %gs:(%bp,%di), %esi;pushl %edi;decl %ecx;insb %dx, %es:(%edi)": 1,
                "jae  <SetShadowDescriptorEntries+>;insl %dx, %es:(%edi);pushl %esp;imull $, (%ebp), %ebp;popal": 1,
                "jb  <SetShadowDescriptorEntries+>;outsb (%esi), %dx;je  <SetShadowDescriptorEntries+>;imull $, (%ebp), %esp;xorl (%edx), %esi": 1,
                "pushl %esp;imull $, (%ebp), %ebp;popal;addb %dl, %fs:(%esi);incl %esp": 1,
                "addb %dl, (%esi);incl %esp;incl %ecx;insb %dx, %es:(%edi);insb %dx, %es:(%edi)": 1,
                "outsl (%esi), %dx;arpl %bp, (%ecx);je  <SetShadowDescriptorEntries+>;decl %esi;je  <SetShadowDescriptorEntries+>": 1,
                "jne  <SetShadowDescriptorEntries+>;decl %ebp;insl %dx, %es:(%edi);addb %dl, (%esi);incl %esp": 1,
                "jae  <SetShadowDescriptorEntries+>;incl %esp;outsl (%esi), %dx;jae  <SetShadowDescriptorEntries+>;popal": 1,
                "outsb (%esi), %dx;insb %dx, %es:(%edi);addb %dl, %gs:(%esi);incl %esp;pushl %edx": 1,
                "insb %dx, %es:(%edi);popal;jae  <SetShadowDescriptorEntries+>;decl %ecx;jb  <SetShadowDescriptorEntries+>": 1,
                "popal;jae  <SetShadowDescriptorEntries+>;decl %ecx;jb  <SetShadowDescriptorEntries+>;decl %esp": 1,
                "incl %esp;pushl %esp;jb  <SetShadowDescriptorEntries+>;imull $, (%esi), %ebp;decl %ebp": 1,
                "outsb (%esi), %dx;je  <SetShadowDescriptorEntries+>;pushl %edi;decl %edi;pushl %edi": 1,
                "decl %edi;pushl %edi;pushl %ebx;jns  <SetShadowDescriptorEntries+>;incl %ebp": 1,
                "jns  <SetShadowDescriptorEntries+>;incl %ebp;jb  <SetShadowDescriptorEntries+>;outsl (%esi), %dx;jb  <SetShadowDescriptorEntries+>": 1,
                "outsl (%esi), %dx;js  <SetShadowDescriptorEntries+>;pushl %edi;popal;imull $, (%ecx,%ecx,), %esi": 1,
                "pushl $;insl %dx, %es:(%edi);jo  <SetShadowDescriptorEntries+>;arpl %bp, (%ebp);incl %ebx": 1,
                "jo  <SetShadowDescriptorEntries+>;outsb (%esi), %dx;imull $, (%eax,%eax), %esi;jb  <SetShadowDescriptorEntries+>;popal": 1,
                "outsl (%esi), %dx;jb  <SetShadowDescriptorEntries+>;js  <SetShadowDescriptorEntries+>;insl %dx, %es:(%edi);incl %esi": 1,
                "decl %esp;incl %esi;decl %esi;incl %edi;je  <SetShadowDescriptorEntries+>": 2,
                "je  <SetShadowDescriptorEntries+>;imull $, (%edx), %esi;jns  <SetShadowDescriptorEntries+>;je  <SetShadowDescriptorEntries+>;jb  <SetShadowDescriptorEntries+>": 1,
                "popal;jb  <SetShadowDescriptorEntries+>;pushl $;insb %dx, %es:(%edi);addb %ah, %gs:(%ebp)": 3,
                "addb %ah, %gs:(%ebp);pushl %edi;decl %edi;pushl %edi;decl %esp": 3,
                "decl %esi;incl %edi;je  <SetShadowDescriptorEntries+>;popal;jb  <SetShadowDescriptorEntries+>": 1,
                "incl %esi;addb %ah, (%edi);je  <SetShadowDescriptorEntries+>;decl %eax;addb %ah, (%edi)": 3,
                "je  <SetShadowDescriptorEntries+>;decl %esp;addb %ah, (%edi);je  <SetShadowDescriptorEntries+>;popl %eax": 1,
                "je  <SetShadowDescriptorEntries+>;decl %eax;addb %ah, (%edi);je  <SetShadowDescriptorEntries+>;decl %ecx": 1,
                "addb %ah, (%edi);je  <SetShadowDescriptorEntries+>;decl %ecx;addb %ah, (%edi);je  <SetShadowDescriptorEntries+>": 2,
                "popl %eax;addb %ah, (%edi);je  <SetShadowDescriptorEntries+>;incl %esp;decl %ecx": 1,
                "incl %esi;decl %esp;incl %ecx;incl %edi;pushl %ebx": 2,
                "addb %ch, (%eax);jae  <SetShadowDescriptorEntries+>;popl %edi;incl %ebx;jb  <SetShadowDescriptorEntries+>": 1,
                "je  <SetShadowDescriptorEntries+>;pushl %esp;pushl $;addb %ch, (%eax);jae  <SetShadowDescriptorEntries+>": 1,
                "pushl %esp;pushl $;addb %ch, (%eax);jae  <SetShadowDescriptorEntries+>;popl %edi": 1,
                "jb  <SetShadowDescriptorEntries+>;pushl $;jae  <SetShadowDescriptorEntries+>;insl %dx, %es:(%edi);jne  <SetShadowDescriptorEntries+>": 1,
                "decl %esp;addb %dh, (%ebx);je  <SetShadowDescriptorEntries+>;pushl %eax;addb %dh, (%ebx)": 1,
                "addb %dh, (%ebx);je  <SetShadowDescriptorEntries+>;pushl %eax;addb %dh, (%ebx);je  <SetShadowDescriptorEntries+>": 2,
                "je  <SetShadowDescriptorEntries+>;decl %esp;addb %dh, (%ebx);je  <SetShadowDescriptorEntries+>;pushl %ebx": 2,
                "addb %dh, (%ebx);je  <SetShadowDescriptorEntries+>;incl %esp;decl %ecx;addb %dh, (%ebx)": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                "8Rich": 1,
                ".text": 1,
                "`.data": 1,
                ".rsrc": 1,
                "KERNEL32.dll": 2,
                "NTDLL.DLL": 1,
                "ADVAPI32.dll": 2,
                "GDI32.dll": 2,
                "USER32.dll": 2,
                "B~nCB~": 1,
                "B~NJB~": 1,
                "SoftPC": 1,
                "CorExitProcess": 1,
                "mscoree.dll": 1,
                "runtime error ": 1,
                "TLOSS error": 1,
                "SING error": 1,
                "DOMAIN error": 1,
                "R6028": 1,
                "- unable to initialize heap": 1,
                "R6027": 1,
                "- not enough space for lowio initialization": 1,
                "R6026": 1,
                "- not enough space for stdio initialization": 1,
                "R6025": 1,
                "- pure virtual function call": 1,
                "R6024": 1,
                "- not enough space for _onexit/atexit table": 1,
                "R6019": 1,
                "- unable to open console device": 1,
                "R6018": 1,
                "- unexpected heap error": 1,
                "R6017": 1,
                "- unexpected multithread lock error": 1,
                "R6016": 1,
                "- not enough space for thread data": 1,
                "This application has requested the Runtime to terminate it in an unusual way.": 1,
                "Please contact the application's support team for more information.": 1,
                "R6009": 1,
                "- not enough space for environment": 1,
                "R6008": 1,
                "- not enough space for arguments": 1,
                "R6002": 1,
                "- floating point not loaded": 1,
                "Microsoft Visual C++ Runtime Library": 1,
                "Runtime Error!": 1,
                "Program: ": 1,
                "<program name unknown>": 1,
                "GetProcessWindowStation": 1,
                "GetUserObjectInformationA": 2,
                "GetLastActivePopup": 1,
                "GetActiveWindow": 1,
                "MessageBoxA": 1,
                "user32.dll": 1,
                "cksum ": 1,
                "extended memory ": 1,
                "disk ": 1,
                "flop ": 1,
                "equip ": 1,
                "diag ": 1,
                "power ": 1,
                "shut ": 1,
                "BIOS keyboard buffer overflow": 1,
                "hardware keyboard buffer overflow": 1,
                "%s Mouse %d.01 already installed": 1,
                "%s Mouse %d.01 installed": 1,
                "mouse_io: NIDDB_Allocate_Instance_Data() failed.": 1,
                "d:\\xpsp\\base\\mvdm\\softpc.new\\host\\src\\nt_timer.c": 1,
                "d:\\xpsp\\base\\mvdm\\softpc.new\\host\\src\\nt_eoi.c": 1,
                "C:\\IBMBIO.SYS": 1,
                "C:\\IO.SYS": 1,
                "C:\\IBMDOS.SYS": 1,
                "C:\\MSDOS.SYS": 1,
                "SYSTEM\\CurrentControlSet\\Control\\VirtualDeviceDrivers": 1,
                "Failed to release VDD memory": 1,
                "NTVDM:XMSInit fails": 1,
                "NTVDM:DemInit fails": 1,
                "\\ntio404.sys": 1,
                "\\ntio411.sys": 1,
                "\\ntio412.sys": 1,
                "\\ntio804.sys": 1,
                "\\ntio.sys": 1,
                "NTVDM:InitialiseDosEmulation fails": 1,
                "VJOY.DLL": 1,
                "Default": 1,
                "ERRORPANEL": 1,
                "%s %lxh": 1,
                "d:\\xpsp\\base\\mvdm\\softpc.new\\host\\src\\nt_com.c": 1,
                "COM_TxBuffer_Size": 1,
                "COM_SyncWrite": 1,
                "LPT_timeout": 1,
                "CommsAutoClose": 1,
                "PrinterAutoClose": 1,
                "d:\\xpsp\\base\\mvdm\\softpc.new\\host\\src\\config.c": 1,
                "ForceRefresh": 1,
                "Software\\Microsoft\\Windows NT\\CurrentVersion\\WOW\\Console": 1,
                "SYSTEM\\CurrentControlSet\\Control\\WOW": 1,
                "\\\\.\\$VDMLPT2": 1,
                "\\\\.\\$VDMLPT3": 1,
                "\\\\.\\$VDMLPT1": 1,
                "ConsoleWindowClass": 1,
                "ntvdm.": 1,
                "Hidden Console of WOW VDM - %lx.%lx": 1,
                "ntvdm-%lx.%lx.%lx": 1,
                "ARCx86": 1,
                "Identifier": 1,
                "HARDWARE\\DESCRIPTION\\System": 1,
                "RomFontPointers": 1,
                "FONT   ": 1,
                "FONT.NT": 1,
                "\\ega.cpi": 1,
                "d:\\xpsp\\base\\mvdm\\softpc.new\\host\\src\\nt_fulsc.c": 1,
                "\\DosDevices\\A:": 1,
                "Drive %c: ": 1,
                "Unknown Media": 1,
                "Incompatible DOS diskette, C H R N = %d %d %d %d": 1,
                "Write Error, code = %lx": 1,
                "Read Error, code = %lx": 1,
                "Format Error, code = %lx": 1,
                "\\\\.\\A:": 1,
                "\\DosDevices\\?:": 1,
                "\\\\.\\?:": 1,
                "d:\\xpsp\\base\\mvdm\\softpc.new\\host\\src\\nt_event.c": 1,
                "Undocumented event from console": 1,
                "WINDOWS VMM 4.0": 1,
                "WINDOWS NT  3.1": 1,
                "WINDOWS 386 3.0": 1,
                "WINDOWS 286 3.0": 1,
                "MICROSOFT PIFEX": 1,
                "\\_default.pif": 1,
                "d:\\xpsp\\base\\mvdm\\softpc.new\\host\\src\\nt_det.c": 1,
                "NTVDM:BOP_DBGBREAKPOINT": 1,
                "W32HungAppNotifyThread": 1,
                "GetCommShadowMSR": 1,
                "GetCommHandle": 1,
                "LeaveVxDMutex": 1,
                "EnterVxDMutex": 1,
                "W32Dispatch": 1,
                "W32Init": 1,
                "WOW32": 1,
                "VrRemoveOpenNamedPipeInfo": 1,
                "VrConvertLocalNtPipeName": 1,
                "VrAddOpenNamedPipeInfo": 1,
                "VrIsNamedPipeHandle": 1,
                "VrIsNamedPipeName": 1,
                "VrWriteNamedPipe": 1,
                "VrReadNamedPipe": 1,
                "VrInitialized": 1,
                "VrDispatch": 1,
                "VDMREDIR": 1,
                "midiOutUnprepareHeader": 1,
                "midiOutPrepareHeader": 1,
                "midiOutShortMsg": 1,
                "midiOutLongMsg": 1,
                "midiOutClose": 1,
                "midiOutReset": 1,
                "midiOutOpen": 1,
                "midiOutGetDevCapsA": 1,
                "midiOutGetNumDevs": 1,
                "midiOutGetVolume": 1,
                "midiOutSetVolume": 1,
                "waveOutUnprepareHeader": 1,
                "waveOutPrepareHeader": 1,
                "waveOutWrite": 1,
                "waveOutGetPosition": 1,
                "waveOutClose": 1,
                "waveOutReset": 1,
                "waveOutRestart": 1,
                "waveOutPause": 1,
                "waveOutOpen": 1,
                "waveOutGetDevCapsA": 1,
                "waveOutGetNumDevs": 1,
                "waveOutGetVolume": 1,
                "waveOutSetVolume": 1,
                "WINMM.DLL": 1,
                "VSB: ": 1,
                "d:\\xpsp\\base\\mvdm\\softpc.new\\host\\src\\nt_hosts.c": 1,
                "CONOUT$": 1,
                "CONIN$": 1,
                "NtDeviceIoControlFile failed %x": 1,
                "d:\\xpsp\\base\\mvdm\\softpc.new\\host\\src\\nt_sec.c": 1,
                "VSB: SINGLE CYCLE mode": 1,
                "VSB: HIGH SPEED SINGLE CYCLE mode": 1,
                "VSB: AUTO-INIT mode": 1,
                "VSB: HIGH SPEED AUTO-INIT mode": 1,
                "VSB: MIDI mode": 1,
                "VSB: MIXER mode": 1,
                "VSB: ADLIB/FM mode": 1,
                "SoftPc: NtDeCommitVirtualMemory failed !!!! Status = %lx": 1,
                "xxxDbgDispatch": 1,
                "NTVDMD.DLL": 1,
                "xxxDbgNotifyDebugged": 1,
                "xxxDbgNotifyRemoteThreadAddress": 1,
                "xxxDbgNotifyNewTask": 1,
                "xxxDbgTraceInt": 1,
                "xxxDbgBPInt": 1,
                "xxxDbgFault": 1,
                "xxxDbgTraceEvent": 1,
                "xxxDbgSegmentNotice": 1,
                "xxxDbgDosAppStart": 1,
                "xxxDbgIsDebuggee": 1,
                "xxxDbgInit": 1,
                "LFN API": 1,
                "Extended OpenCreate": 1,
                "IFS IOCTL": 1,
                "6ah??": 1,
                "GetSetMediaID": 1,
                "Commit File": 1,
                "Set Max Handle": 1,
                "GetSet CodePage": 1,
                "Extended Country Info": 1,
                "Set Printer Flag": 1,
                "ECS CALL": 1,
                "GetCurrentPSP": 1,
                "PathParse": 1,
                "xNameTrans": 1,
                "Network-AssignOper": 1,
                "Network-UserOper": 1,
                "SetExtendedErrorNetwork-ServerCall": 1,
                "LockUnlock File": 1,
                "Create New File": 1,
                "Create Temp File": 1,
                "Get Extended Error": 1,
                "Allocation Strategy": 1,
                "GetSet File Date and Time": 1,
                "Rename File": 1,
                "Dup PDB": 1,
                "Get Verify On Write": 1,
                "Set DPB": 1,
                "Get In Vars": 1,
                "Get Current PSP": 1,
                "Set Current PSP": 1,
                "Find Next": 1,
                "Find First": 1,
                "Get Child Process Exit Code": 1,
                "Exit Process": 1,
                "Exec Process": 1,
                "Realloc Mem": 1,
                "Free Mem": 1,
                "Alloc Mem": 1,
                "Get Current Dir": 1,
                "Force Dup Handle": 1,
                "Dup File Handle": 1,
                "IOCTL": 1,
                "GetSet File Attr": 1,
                "Move File Ptr": 1,
                "Delete File": 1,
                "Write File": 1,
                "Read File": 1,
                "Close File": 1,
                "Open File": 1,
                "Create File": 1,
                "Change DirDir": 1,
                "Remove Dir": 1,
                "Make Dir": 1,
                "GetSet Country Info": 1,
                "Char Oper": 1,
                "Get Disk Free Space": 1,
                "Get Interrupt Vector": 1,
                "Get InDOS Flag": 1,
                "GetSet CTRL C": 1,
                "Get Drive Parameters": 1,
                "Keep Process": 1,
                "Get Version Number": 1,
                "Get Disk Transefr Addr": 1,
                "SetReset Write Verify": 1,
                "Set Time": 1,
                "Get Time": 1,
                "Set Date": 1,
                "Get Date": 1,
                "FCB Parse File Name": 1,
                "FCB Random Write Block": 1,
                "FCB Random Read Block": 1,
                "Create Process Data Block": 1,
                "Set Interrupt Vector": 1,
                "FCB Set Random Record": 1,
                "FCB Get File Size": 1,
                "FCB Random Write": 1,
                "FCB Random Read": 1,
                "20h??": 1,
                "Get Default DPB": 1,
                "1Eh??": 1,
                "1Dh??": 1,
                "Get Drive Data": 1,
                "Get Default Drive Data": 1,
                "Set Disk Transfer Addr": 1,
                "Get Default Drive": 1,
                "18h??": 1,
                "FCB Rename": 1,
                "FCB Create": 1,
                "FCB Seq Write": 1,
                "FCB Seq Read": 1,
                "FCB Delete": 1,
                "FCB Find Next": 1,
                "FCB Find First": 1,
                "FCB Close": 1,
                "FCB Open": 1,
                "Set Default Drive": 1,
                "Reset Drive": 1,
                "Flush Buffer,Read Kbd": 1,
                "Check Keyboard Status": 1,
                "Read String": 1,
                "Display String": 1,
                "Read Kbd without Echo": 1,
                "Direct Con Input": 1,
                "Direct Con Output": 1,
                "Print Character": 1,
                "Auxillary Output": 1,
                "Auxillary Input": 1,
                "Display Character": 1,
                "Read Kbd with Echo": 1,
                "Terminate Program": 1,
                "\\ntdos404.sys": 1,
                "\\ntdos411.sys": 1,
                "\\ntdos412.sys": 1,
                "\\ntdos804.sys": 1,
                "\\ntdos.sys": 1,
                "CS=%.4x IP=%.4x DS=%.4x ES=%.4x SS=%.4x SP=%.4x BP=%.4x": 1,
                "demDosDispCall %s": 1,
                "AX=%.4x BX=%.4x CX=%.4x DX=%.4x DI=%.4x SI=%.4x": 2,
                "CS=%.4x IP=%.4x DS=%.4x ES=%.4x SS=%.4x SP=%.4x BP=%.4x CF=%.1x": 1,
                "demDosDispRet": 1,
                "demEntryDosApp: Entry=%.4x:%.4x, Stk=%.4x:%.4x PDB=%.4x": 1,
                "config.nt": 2,
                "%c:%sNUL": 1,
                "\\DEV\\": 1,
                "\\Device": 1,
                "BootDir": 1,
                "Software\\Microsoft\\Windows\\CurrentVersion\\Setup": 1,
                "Unimplemented SVC %d": 1,
                "Invalid Boot Sector Found": 1,
                "dem: not enough memory for BDS": 1,
                "NoSpace": 1,
                "Software\\Microsoft\\Windows NT\\CurrentVersion\\WOW\\CmdLine": 1,
                "COMSPEC=": 2,
                "Inactive ": 1,
                "BLASTER": 1,
                "SDXROOT": 1,
                "RAZZLETOOLPATH": 1,
                "PREFAST_ROOT": 1,
                "MSWNET": 1,
                "NTMAKEENV": 1,
                "CLUSTERLOG": 1,
                "BINPLACE_LOG": 1,
                "BINPLACE_EXCLUDE_FILE": 1,
                "_NTPOSTBLD": 1,
                "_NTX86TREE": 1,
                "_NTTREE": 1,
                "USERPROFILE": 1,
                "SYSTEMROOT": 1,
                "PROGRAMFILES(X86)": 1,
                "PROGRAMFILES": 1,
                "COMMONPROGRAMFILES(x86)": 1,
                "COMMONPROGRAMFILES": 1,
                "APPDATA": 1,
                "ALLUSERSPROFILE": 1,
                "SystemDrive": 1,
                "SystemRoot": 1,
                "\\temp": 1,
                "PROMPT": 2,
                "%s=%s%s /p %s\\system32": 1,
                "%s=%3.3u,%3.3u,%s\\system32\\%s.sys%s": 1,
                "KEYB   ": 1,
                "\\KEYBOARD.SYS": 1,
                "\\KEYJ31.SYS": 1,
                "\\KEY02.SYS": 1,
                "\\KEY01.SYS": 1,
                "\\KEYAX.SYS": 1,
                "AlternativeKDFs": 1,
                "SYSTEM\\CurrentControlSet\\Control\\Wow": 1,
                " /id:": 1,
                " %s,%d,%s": 1,
                "\\KB16.COM": 1,
                "DosKeybIDs": 1,
                "System\\CurrentControlSet\\Control\\Keyboard Layout\\": 1,
                "DosKeybCodes": 1,
                "00000409": 1,
                "0x%lx": 1,
                "Software\\Microsoft\\Windows NT\\CurrentVersion\\WOW\\Compatibility": 1,
                "COMSPEC": 1,
                "xmsAllocBlock:SAAlloc failed !!!!": 1,
                "xmsFreeBlock:SAFree failed !!!!": 1,
                "xmsReallocBlock:SARealloc failed !!!!": 1,
                "DPMI: Failed to set selectors %lx": 1,
                "X#=%.02X, CS=%.04X IP=%.08X": 1,
                "HARDWARE\\DEVICEMAP\\SERIALCOMM": 1,
                "VCDEX": 1,
                "VDDDispatch": 1,
                "Illegal byte sequence": 1,
                "Directory not empty": 1,
                "Function not implemented": 1,
                "No locks available": 1,
                "Filename too long": 1,
                "Resource deadlock avoided": 1,
                "Result too large": 1,
                "Domain error": 1,
                "Broken pipe": 1,
                "Too many links": 1,
                "Read-only file system": 1,
                "Invalid seek": 1,
                "No space left on device": 1,
                "File too large": 1,
                "Inappropriate I/O control operation": 1,
                "Too many open files": 1,
                "Too many open files in system": 1,
                "Invalid argument": 1,
                "Is a directory": 1,
                "Not a directory": 1,
                "No such device": 1,
                "Improper link": 1,
                "File exists": 1,
                "Resource device": 1,
                "Unknown error": 1,
                "Bad address": 1,
                "Permission denied": 1,
                "Not enough space": 1,
                "Resource temporarily unavailable": 1,
                "No child processes": 1,
                "Bad file descriptor": 1,
                "Exec format error": 1,
                "Arg list too long": 1,
                "No such device or address": 1,
                "Input/output error": 1,
                "Interrupted function call": 1,
                "No such process": 1,
                "No such file or directory": 1,
                "Operation not permitted": 1,
                "No error": 1,
                " (8PX": 1,
                "700WP": 1,
                "`h````": 1,
                "ppxxxx": 1,
                "(null)": 1,
                "ega.rom": 1,
                "vga.rom": 1,
                "v7vga.rom": 1,
                "bios4.rom": 1,
                "bios1.rom": 1,
                "profile.spc": 1,
                ".spcprofile": 1,
                "d:\\xpsp\\base\\mvdm\\softpc.new\\host\\src\\x86_emm.c": 1,
                "CS:%04x IP:%04x OP:%02x %02x %02x %02x %02x": 1,
                "RSDS^": 1,
                "ntvdm.pdb": 1,
                "t%VVj": 1,
                "QVVVP": 1,
                "QSVWd": 11,
                "QQSVW": 9,
                "t:Ht%H": 1,
                "f9x u": 1,
                "$SVW3": 1,
                "teHt.": 1,
                "t]Ht&HtWHt ": 1,
                "tPSVW": 1,
                "jXhh6": 1,
                ";F$tR9^": 1,
                "QQSVWd": 7,
                "WQSSSP": 1,
                "YYt&h86": 1,
                "t=jCV": 1,
                "H u+3": 1,
                "@2QPS": 1,
                "IItFIt0I": 1,
                "t\\9~$": 1,
                "tQIt=IIt1It(It": 1,
                "PjPVV": 2,
                "f95tt": 2,
                "tAHt(Ht": 2,
                "u)VVV": 1,
                "t~VWj": 1,
                "teh`5": 1,
                "sFf9]": 1,
                "t#HHt": 1,
                "Yt[Ht/Huw": 1,
                "SVWhB": 1,
                "Y_^[u?": 1,
                "|9j`j": 1,
                "PWWhX": 1,
                "t4VVVV": 1,
                "PSSSSS": 1,
                "j'WWj": 1,
                "QQVWj": 1,
                "txSPj": 1,
                "QQSVW3": 1,
                "waSVP": 1,
                "Gf;;v": 1,
                "jLh8;": 1,
                "9u t,": 1,
                "|(9u tB": 1,
                "tgHt]HtI": 1,
                "6t,Ht%": 1,
                "Ut.Ht$Ht": 1,
                "t+Ht!Ht": 1,
                "tWHt>-": 2,
                "t2Vh!": 1,
                "t2Vh1": 1,
                "@_^[]": 3,
                "VWjd3": 1,
                "u hL,": 1,
                "Pj!^V": 1,
                "t7HtB": 1,
                "ItKIt9It.IIt": 1,
                "ubWj _+}": 1,
                "j@XWh": 1,
                "tEHHt4HHt": 1,
                "HtPHH": 1,
                "tXHt?-": 1,
                "SVWh@": 1,
                "QQSVWj": 2,
                "tsSVW": 1,
                "<\\uTF": 1,
                "<\\uIF": 1,
                "t@</t": 1,
                "Gf;;r": 1,
                "@PWSS": 1,
                "Yu+Vj": 1,
                "t%HHt": 1,
                "HHtxHHtt": 1,
                "u j@h": 1,
                "PWWVj": 1,
                "u=9s<t": 1,
                "H@f)H8": 5,
                "It!It": 1,
                "QQSVWh": 1,
                "tbSWh`": 1,
                "tHj h": 1,
                "t,j@h": 1,
                "tK<%uAj": 1,
                "~>Vj ^+u": 1,
                "Pjgj@": 2,
                "Pjij@": 2,
                "</uxF": 1,
                "VC20XC00U": 1,
                "SVWUj": 1,
                ";t$(v(": 1,
                "UQPXY]Y[": 1,
                "YF;5`": 1,
                "VWumh8": 1,
                "u8WW3": 1,
                "t!SS9]": 1,
                "PPWSj": 1,
                "WWWWVSW": 1,
                "WWVPVSW": 1,
                "DSVWj": 1,
                "QQSVWhc": 1,
                "QQVh`": 1,
                "V$0<0W": 1,
                "SVWhJ": 4,
                "PGGKu": 2,
                "QQVWhJ": 2,
                "f9<Kt": 1,
                "P,_^[": 8,
                "Pj(X+E": 1,
                "P,_[^": 1,
                "PjPX+E": 1,
                "P,[_^": 1,
                "@<_^]": 1,
                "HHOO;": 1,
                "P8_^[": 1,
                "QSVWhJ": 5,
                "HHtuH": 1,
                "HtaHHt": 1,
                "H u j": 2,
                "QSVWhI": 1,
                "$`< u": 1,
                "SVWhL": 1,
                "#~&f9": 1,
                "PLFOu": 1,
                "t;Ht+Ht": 1,
                "tIHt&Hue": 1,
                "HtcHt,H": 1,
                "A9H$u": 1,
                "^D_[^": 1,
                "Ju89F": 2,
                "Hu(9N": 1,
                "t(Hu?9N": 1,
                "KtiKtHKt": 1,
                "t#j&j": 2,
                "t\"j&j": 1,
                "t,HtBHteH": 1,
                "Ht1Ht": 1,
                "HtZHu": 1,
                "Ht!Ht$Ht": 1,
                "ucSWj": 1,
                "$`<`t": 1,
                "usj0Y": 1,
                "HHt7Ht.Ht": 1,
                "QQSVh": 1,
                "t)Ht\"Ht": 1,
                "<9u7j j9": 1,
                "t1<5u": 1,
                "<Sv-<Vu": 1,
                "<Jt.<Nt*W": 1,
                "$#< t": 1,
                "At3It%ItvI": 1,
                "_[u+3": 1,
                "rRf=d": 1,
                "wLSj2_f;": 1,
                "rMf=d": 1,
                "x$_^]": 1,
                "f9H&u": 2,
                "tL< t": 1,
                "B&taj4X": 1,
                "Ht'Ht": 1,
                "up95P": 1,
                "JtVItSIIu\\": 1,
                "}095L": 1,
                "u(95L": 1,
                "uS95L": 1,
                "uK95L": 1,
                "u>95X": 1,
                "tROtGOOt;OOt)OOt": 1,
                "HtUHtJH": 1,
                "Cf;H$u": 1,
                "$d<du": 1,
                "MYt5OF;": 1,
                ">=u!OF;": 1,
                "xOtoF": 1,
                ">=uiOF;": 1,
                "t,@f=": 1,
                "tSGf;{": 1,
                "tjItUIt?It/It": 1,
                "btBHt1HtJ": 1,
                "_^j%j": 1,
                "QWPWh": 1,
                "t:f9=h": 1,
                "t>f95`": 1,
                "+~L+^D;": 1,
                "t7Ht&Ht": 1,
                "HtHHH": 1,
                "FH9FHu": 5,
                "FH9FH": 3,
                "99t&j": 1,
                "Fl_^]": 1,
                "SSSSS": 1,
                "Fl^[]": 1,
                "PVhh\"": 1,
                "tA<+t/<2u'": 1,
                "Dt8Ht&": 1,
                "Ht(Ht": 2,
                "tR95H": 1,
                "jPX+E": 1,
                "j2X+E": 1,
                "PjPSS": 1,
                "$j2X9E": 1,
                "Hu]9]": 1,
                "C@@;]": 1,
                "uM95D": 1,
                "u*9=$": 1,
                "u\"954": 1,
                "tH9=H": 1,
                "It`ItVItHIt": 1,
                "It+It": 1,
                "8_^[]": 1,
                "PjNj@": 1,
                "uWSVW": 1,
                "tSQVj": 1,
                "t9QVj": 1,
                "HteHtGHt_Ht": 1,
                "RQQQQh": 1,
                "u_SSj": 1,
                "N!f;N": 1,
                "f9~ t": 1,
                "ulSSj": 1,
                "tXW9]": 1,
                "t[W9]": 1,
                "SVWta": 1,
                "uy95T": 1,
                "u995T": 1,
                " t'jZ": 1,
                "@t\"j}": 1,
                "u`95h:": 1,
                "tX95H": 1,
                "ItSItDIIt9": 1,
                "Y_^[]": 1,
                "QQVW3": 1,
                "PVVVVV": 1,
                "t7IIt": 1,
                "|Jj@h": 1,
                "|Kj@h": 1,
                "t6hl'": 1,
                "t hP'": 1,
                "t0HHt$HHt": 1,
                "HHu3V": 1,
                "/t%Ht": 1,
                "t@Ht5Ht*HHt": 1,
                "u;9=Xr": 1,
                "u7VVj": 1,
                "@_[^]": 2,
                "PVVhT": 1,
                "[| 9u": 1,
                "j}hP*": 1,
                "QQj@h": 1,
                "st,It!It": 1,
                "t2WWW": 1,
                "HtEHt;HHt0": 1,
                "tTWVjdVV": 1,
                "HtVHtAHt,Ht!Ht": 1,
                "VVVh0J": 1,
                "SVWtf": 1,
                "WjdWW": 2,
                "F9=Lr": 1,
                "v49=8r": 1,
                "uC9=8r": 1,
                "tBHt\"": 1,
                "Ht1Ht&Ht": 1,
                "t#S<.t": 1,
                "Ht1HHuU": 1,
                "t~hP6": 1,
                "WPSSS": 1,
                "YYt%F": 1,
                "PPPPPh": 1,
                "YYt#F": 1,
                "SSSSSh": 1,
                "9~ uu": 1,
                "7IFFf;": 1,
                "IFFGGf;": 1,
                "@[_^]": 1,
                "Ht,Ht$Ht": 1,
                "f99tL": 1,
                "t=Ht\"Ht": 1,
                "tOHtBHt": 1,
                "tVjCV": 1,
                "It7It!IuE": 1,
                "QQVWd": 4,
                "9t/Ht": 1,
                "Vt*Ht": 1,
                "HtvHH": 1,
                "SWj\\V": 1,
                "<Wj*V": 1,
                "Ht/HHt": 1,
                "HHu.f": 1,
                "HtsHt/HHuw": 1,
                "VRSWPt": 1,
                "t0f;G": 1,
                "s*f;O%s$": 1,
                "HtcHt6": 1,
                "PVhX7": 1,
                ";<=u*": 1,
                "vOh(O": 1,
                "t=j}P": 1,
                "QSWj=": 1,
                "u$Ph O": 1,
                "tyj=V": 1,
                "V<%ue": 1,
                "YYt8;u": 1,
                "9~$t\";": 1,
                "s @^_[": 1,
                "urf9]": 1,
                "YYut8]": 1,
                "SVWj(Y3": 1,
                "j0h(;": 1,
                "j$hH;": 1,
                "t^f90s": 1,
                "t(f9_": 1,
                "t f9X": 1,
                "tWf9~": 1,
                "t3f9x": 1,
                "@Y[_^": 1,
                "u]f;=": 1,
                "HtgHtEH": 1,
                "trHt=H": 1,
                "HtWHuH": 1,
                "Nt)Nt": 1,
                "tqIt<It": 1,
                "t$f;=": 1,
                " SVWd": 2,
                "u$f!G": 1,
                ",SVWd": 1,
                "j@St%": 1,
                "SVj@^": 1,
                "@SVWd": 1,
                "u:f9A.u4": 1,
                "_[h(<": 1,
                "HHt{H": 1,
                "DSVWd": 1,
                "LSVWd": 1,
                " AABBf": 1,
                " AABB": 1,
                "C<-uF": 1,
                "]t;C:": 1,
                "YYj0[": 1,
                "SVWsc": 1,
                "u5SSWhD": 1,
                "Y9E t": 1,
                "E SSSS": 1,
                "j$h0@": 1,
                "Wt*IuO": 1,
                "t HHuE": 1,
                "tFSVh": 1,
                "A8VWP": 1,
                "HteHtSHt'Ht": 1,
                "Ht(HuA": 1,
                "H\\t2=": 1,
                "H@f)H8_": 1,
                "t8Ium": 1,
                "t Iu-": 1,
                "t+Iu8": 1,
                "ISt+Iu8": 1,
                "t0Ht&Ht": 1,
                "v}Vjp": 1,
                "VVVVW": 1,
                "t.HtHHt(Ht": 1,
                "Ht)Ht": 1,
                "PSWVj": 1,
                "|Wf;E": 1,
                "~?VWS": 1,
                "|JPWS": 1,
                "t/v#<": 1,
                "GGFFKu": 1,
                "SSPQj": 1,
                "VW|4f": 1,
                "CGGf;": 1,
                "Ff;5x": 1,
                "GGFf;5x": 1,
                "2BBHu": 1,
                "VWtaf;": 1,
                "VWt#S": 1,
                "t9Ht&Ht": 1,
                "HtZHt": 1,
                "YYt<j": 1,
                "|,WSV": 1,
                " VWj@Z3": 1,
                "PVVVh": 1,
                "DebugBreak": 1,
                "GetTickCount": 1,
                "QueryPerformanceCounter": 1,
                "GetCurrentThreadId": 1,
                "GetCurrentProcessId": 1,
                "GetSystemTimeAsFileTime": 1,
                "TerminateProcess": 1,
                "GetCurrentProcess": 1,
                "UnhandledExceptionFilter": 1,
                "SetUnhandledExceptionFilter": 1,
                "GetCommandLineA": 1,
                "GetVersionExA": 1,
                "HeapAlloc": 1,
                "ExitProcess": 1,
                "GetProcAddress": 1,
                "GetModuleHandleA": 1,
                "WriteFile": 1,
                "GetStdHandle": 1,
                "GetModuleFileNameA": 1,
                "FreeEnvironmentStringsA": 1,
                "GetEnvironmentStrings": 1,
                "FreeEnvironmentStringsW": 1,
                "WideCharToMultiByte": 1,
                "GetLastError": 1,
                "GetEnvironmentStringsW": 1,
                "SetHandleCount": 1,
                "GetFileType": 1,
                "GetStartupInfoA": 1,
                "HeapDestroy": 1,
                "HeapCreate": 1,
                "VirtualFree": 1,
                "HeapFree": 1,
                "VirtualAlloc": 1,
                "HeapReAlloc": 1,
                "RtlUnwind": 1,
                "InterlockedExchange": 1,
                "VirtualQuery": 1,
                "LoadLibraryA": 1,
                "GetACP": 1,
                "GetOEMCP": 1,
                "GetCPInfo": 1,
                "LCMapStringA": 1,
                "MultiByteToWideChar": 1,
                "LCMapStringW": 1,
                "ReadFile": 1,
                "FlushFileBuffers": 1,
                "GetStringTypeA": 1,
                "GetStringTypeW": 1,
                "GetLocaleInfoA": 1,
                "VirtualProtect": 1,
                "GetSystemInfo": 1,
                "SetFilePointer": 1,
                "CloseHandle": 1,
                "SetStdHandle": 1,
                "NtQueryInformationProcess": 1,
                "RtlUnicodeStringToAnsiString": 1,
                "NtClose": 1,
                "NtEnumerateValueKey": 1,
                "NtOpenKey": 1,
                "RtlInitUnicodeString": 1,
                "ntdll.dll": 1,
                "RegQueryValueExA": 1,
                "RegCloseKey": 1,
                "RegQueryInfoKeyA": 1,
                "RegOpenKeyExA": 1,
                "RegEnumValueA": 1,
                "GetLocalTime": 1,
                "Sleep": 1,
                "WaitForSingleObjectEx": 1,
                "ExitThread": 1,
                "SetEvent": 1,
                "InitializeCriticalSection": 1,
                "CreateEventA": 1,
                "SetThreadPriority": 1,
                "CreateThread": 1,
                "RaiseException": 1,
                "FormatMessageA": 1,
                "FindClose": 1,
                "CreateFileA": 1,
                "FindFirstFileA": 1,
                "GetFileSize": 1,
                "SetLastError": 1,
                "SetPriorityClass": 1,
                "GetPriorityClass": 1,
                "GetSystemDirectoryA": 1,
                "TlsAlloc": 1,
                "GetSystemDefaultLangID": 1,
                "IsBadCodePtr": 1,
                "WaitForSingleObject": 1,
                "TlsSetValue": 1,
                "TlsGetValue": 1,
                "PulseEvent": 1,
                "ResumeThread": 1,
                "DuplicateHandle": 1,
                "GetCurrentThread": 1,
                "LeaveCriticalSection": 1,
                "EnterCriticalSection": 1,
                "ClearCommError": 1,
                "GetOverlappedResult": 1,
                "DeleteCriticalSection": 1,
                "SetCommState": 1,
                "WaitForMultipleObjects": 1,
                "EscapeCommFunction": 1,
                "ClearCommBreak": 1,
                "SetCommBreak": 1,
                "SetCommTimeouts": 1,
                "GetCommTimeouts": 1,
                "SetupComm": 1,
                "GetCommState": 1,
                "OutputDebugStringA": 1,
                "GetConsoleDisplayMode": 1,
                "GetThreadContext": 1,
                "GlobalMemoryStatus": 1,
                "SetCurrentDirectoryA": 1,
                "SetEnvironmentVariableA": 1,
                "SetConsoleTitleA": 1,
                "GetConsoleTitleA": 1,
                "ReadConsoleOutputA": 1,
                "SetConsoleCursorPosition": 1,
                "GetConsoleCursorInfo": 1,
                "GetConsoleOutputCP": 1,
                "GetConsoleScreenBufferInfo": 1,
                "SetConsoleCursorInfo": 1,
                "WriteConsoleOutputA": 1,
                "SetConsoleWindowInfo": 1,
                "SetConsoleScreenBufferSize": 1,
                "SetConsoleMode": 1,
                "GetConsoleMode": 1,
                "SetConsoleActiveScreenBuffer": 1,
                "FillConsoleOutputAttribute": 1,
                "FillConsoleOutputCharacterA": 1,
                "GetConsoleFontSize": 1,
                "GetCurrentConsoleFont": 1,
                "WriteConsoleA": 1,
                "CreateConsoleScreenBuffer": 1,
                "DeviceIoControl": 1,
                "ReleaseMutex": 1,
                "SetConsoleCtrlHandler": 1,
                "CreateMutexA": 1,
                "_lclose": 1,
                "_lread": 1,
                "_llseek": 1,
                "_lopen": 1,
                "GetSystemWindowsDirectoryA": 1,
                "GetFileAttributesA": 1,
                "GetWindowsDirectoryA": 1,
                "SuspendThread": 1,
                "FreeLibrary": 1,
                "IsDebuggerPresent": 1,
                "LocalFree": 1,
                "LocalAlloc": 1,
                "CreateSemaphoreA": 1,
                "ReleaseSemaphore": 1,
                "ResetEvent": 1,
                "lstrcmpiA": 1,
                "FileTimeToDosDateTime": 1,
                "FileTimeToLocalFileTime": 1,
                "QueryDosDeviceW": 1,
                "GetShortPathNameW": 1,
                "IsDBCSLeadByte": 1,
                "GetFileAttributesW": 1,
                "DefineDosDeviceW": 1,
                "FindNextFileW": 1,
                "FindFirstFileW": 1,
                "GetDriveTypeA": 1,
                "CreateDirectoryW": 1,
                "RemoveDirectoryW": 1,
                "MoveFileW": 1,
                "LocalFileTimeToFileTime": 1,
                "GetDriveTypeW": 1,
                "GetFileTime": 1,
                "SetFileTime": 1,
                "SystemTimeToFileTime": 1,
                "GetSystemTime": 1,
                "SetEndOfFile": 1,
                "CreateFileW": 1,
                "DeleteFileW": 1,
                "GetFileInformationByHandle": 1,
                "GetEnvironmentVariableA": 1,
                "GetCompressedFileSizeW": 1,
                "SetFileAttributesW": 1,
                "SetLocalTime": 1,
                "SetErrorMode": 1,
                "SetVolumeLabelA": 1,
                "UnlockFile": 1,
                "LockFile": 1,
                "CreateDirectoryA": 1,
                "GetShortPathNameA": 1,
                "DeleteFileA": 1,
                "GetTempPathA": 1,
                "TerminateThread": 1,
                "GetTempFileNameA": 1,
                "SearchPathA": 1,
                "GetConsoleCP": 1,
                "GetBinaryTypeA": 1,
                "GetExitCodeProcess": 1,
                "CreateProcessA": 1,
                "SearchPathW": 1,
                "GetTempFileNameW": 1,
                "ExpandEnvironmentStringsA": 1,
                "MoveFileExW": 1,
                "GetDiskFreeSpaceW": 1,
                "GetVolumeInformationW": 1,
                "GetComputerNameW": 1,
                "VirtualUnlock": 1,
                "GetNextVDMCommand": 1,
                "ExitVDM": 1,
                "SetConsoleDisplayMode": 1,
                "SetConsoleKeyShortcuts": 1,
                "GetConsoleHardwareState": 1,
                "SetConsoleHardwareState": 1,
                "RegisterConsoleVDM": 1,
                "SetConsolePalette": 1,
                "ConsoleMenuControl": 1,
                "ShowConsoleCursor": 1,
                "VDMConsoleOperation": 1,
                "WriteConsoleInputVDMW": 1,
                "ReadConsoleInputExW": 1,
                "GetConsoleInputWaitHandle": 1,
                "SetLastConsoleEventActive": 1,
                "InvalidateConsoleDIBits": 1,
                "SetVDMCurrentDirectories": 1,
                "GetConsoleKeyboardLayoutNameA": 1,
                "SetPaletteEntries": 1,
                "CreatePalette": 1,
                "SelectPalette": 1,
                "RemoveFontResourceW": 1,
                "LoadStringA": 1,
                "LoadStringW": 1,
                "GetWindowThreadProcessId": 1,
                "SendMessageA": 1,
                "ShowWindow": 1,
                "SetWindowPos": 1,
                "ScreenToClient": 1,
                "GetWindowRect": 1,
                "GetDlgItem": 1,
                "GetSystemMetrics": 1,
                "GetDesktopWindow": 1,
                "GetThreadDesktop": 1,
                "SetWindowLongA": 1,
                "SetWindowTextA": 1,
                "LoadIconA": 1,
                "EndDialog": 1,
                "SendDlgItemMessageA": 1,
                "GetWindowLongA": 1,
                "DialogBoxParamA": 1,
                "SetForegroundWindow": 1,
                "DefWindowProcA": 1,
                "EnumWindows": 1,
                "ShowStartGlass": 1,
                "FindWindowA": 1,
                "GetForegroundWindow": 1,
                "MessageBeep": 1,
                "SetCursorPos": 1,
                "GetCursorPos": 1,
                "ClipCursor": 1,
                "DeleteMenu": 1,
                "AppendMenuW": 1,
                "ModifyMenuW": 1,
                "GetClipCursor": 1,
                "GetKeyState": 1,
                "PostMessageA": 1,
                "wvsprintfA": 1,
                "VkKeyScanW": 1,
                "MapVirtualKeyA": 1,
                "CharUpperBuffW": 1,
                "OemToCharA": 1,
                "CharToOemBuffA": 1,
                "GetKeyboardType": 1,
                "wsprintfA": 1,
                "RtlTimeToTimeFields": 1,
                "RtlTimeFieldsToTime": 1,
                "NtAlertThread": 1,
                "NtQueryPerformanceCounter": 1,
                "RtlExtendedLargeIntegerDivide": 1,
                "NtWaitForMultipleObjects": 1,
                "RtlExtendedIntegerMultiply": 1,
                "RtlLeaveCriticalSection": 1,
                "RtlEnterCriticalSection": 1,
                "NtTerminateProcess": 1,
                "RtlInitializeCriticalSection": 1,
                "NtVdmControl": 1,
                "RtlUnicodeStringToOemString": 1,
                "RtlAnsiStringToUnicodeString": 1,
                "RtlInitString": 1,
                "RtlOemStringToUnicodeString": 1,
                "RtlFreeUnicodeString": 1,
                "NtRaiseHardError": 1,
                "RtlInitAnsiString": 1,
                "RtlNtStatusToDosError": 1,
                "NtAllocateVirtualMemory": 1,
                "NtCreateFile": 1,
                "NtDeviceIoControlFile": 1,
                "RtlFillMemoryUlong": 1,
                "NtOpenFile": 1,
                "NtQueryInformationFile": 1,
                "NtFsControlFile": 1,
                "NtWaitForSingleObject": 1,
                "NtMapViewOfSection": 1,
                "NtUnmapViewOfSection": 1,
                "NtCreateSection": 1,
                "NtQueryValueKey": 1,
                "NtFreeVirtualMemory": 1,
                "RtlOemToUnicodeN": 1,
                "NtGetContextThread": 1,
                "NtQueryInformationThread": 1,
                "NtDuplicateObject": 1,
                "NtSetContextThread": 1,
                "DbgPrint": 1,
                "DbgPrompt": 1,
                "NtSetInformationFile": 1,
                "_strcmpi": 1,
                "RtlEqualUnicodeString": 1,
                "NtQuerySymbolicLinkObject": 1,
                "NtOpenSymbolicLinkObject": 1,
                "RtlAppendUnicodeToString": 1,
                "RtlFreeAnsiString": 1,
                "NtQueryObject": 1,
                "NtQueryVolumeInformationFile": 1,
                "RtlFreeHeap": 1,
                "NtQueryDirectoryFile": 1,
                "RtlCompareUnicodeString": 1,
                "RtlUpcaseUnicodeStringToCountedOemString": 1,
                "RtlIsNameLegalDOS8Dot3": 1,
                "RtlIsDosDeviceName_U": 1,
                "RtlAllocateHeap": 1,
                "RtlCreateUnicodeString": 1,
                "RtlDosPathNameToNtPathName_U": 1,
                "RtlUnicodeStringToCountedOemString": 1,
                "RtlUpcaseUnicodeChar": 1,
                "RtlGetFullPathName_U": 1,
                "RtlDetermineDosPathNameType_U": 1,
                "RtlReAllocateHeap": 1,
                "RtlAppendUnicodeStringToString": 1,
                "RtlGenerate8dot3Name": 1,
                "NtQueryFullAttributesFile": 1,
                "RtlDestroyEnvironment": 1,
                "RtlSetEnvironmentVariable": 1,
                "RtlCreateEnvironment": 1,
                "RtlxUnicodeStringToOemSize": 1,
                "NlsMbOemCodePageTag": 1,
                "RtlReleasePebLock": 1,
                "RtlAcquirePebLock": 1,
                "RtlFreeOemString": 1,
                "RtlSetCurrentDirectory_U": 1,
                "NtQuerySystemInformation": 1,
                "NtQueryVirtualMemory": 1,
                "RtlCharToInteger": 1,
                "GetProcessHeap": 1,
                "ntvdm.exe": 1,
                "BlockWOWIdle": 1,
                "CurrentMonitorTeb": 1,
                "DBGNotifyDebugged": 1,
                "DBGNotifyNewTask": 1,
                "DBGNotifyRemoteThreadAddress": 1,
                "DispatchInterrupts": 1,
                "Dos_Flag_Addr": 1,
                "DpmiSetIncrementalAlloc": 1,
                "ExpLdt": 1,
                "FlatAddress": 1,
                "GetDOSAppName": 1,
                "GetWOWShortCutInfo": 1,
                "IsCdRomFile": 1,
                "MGetVdmPointer": 1,
                "RegisterWOWIdle": 1,
                "ResumeTimerThread": 1,
                "SelectorLimit": 1,
                "SetShadowDescriptorEntries": 1,
                "Sim32pGetVDMPointer": 1,
                "SoftPcEoi": 1,
                "SuspendTimerThread": 1,
                "VDDAllocMem": 1,
                "VDDAllocateDosHandle": 1,
                "VDDAssociateNtHandle": 1,
                "VDDDeInstallIOHook": 1,
                "VDDDeInstallMemoryHook": 1,
                "VDDDeInstallUserHook": 1,
                "VDDExcludeMem": 1,
                "VDDFreeMem": 1,
                "VDDIncludeMem": 1,
                "VDDInstallIOHook": 1,
                "VDDInstallMemoryHook": 1,
                "VDDInstallUserHook": 1,
                "VDDQueryDMA": 1,
                "VDDReleaseDosHandle": 1,
                "VDDReleaseIrqLine": 1,
                "VDDRequestDMA": 1,
                "VDDReserveIrqLine": 1,
                "VDDRetrieveNtHandle": 1,
                "VDDSetDMA": 1,
                "VDDSimulate16": 1,
                "VDDTerminateVDM": 1,
                "VdmDbgAttach": 1,
                "VdmGetParametersInfoError": 1,
                "VdmMapFlat": 1,
                "VdmParametersInfo": 1,
                "VdmTraceEvent": 1,
                "WOWSysErrorBox": 1,
                "WaitIfIdle": 1,
                "call_ica_hw_interrupt": 1,
                "cmdCheckTemp": 1,
                "cmdCheckTempInit": 1,
                "cpu_createthread": 1,
                "demClientErrorEx": 1,
                "demFileDelete": 1,
                "demFileFindFirst": 1,
                "demFileFindNext": 1,
                "demGetCurrentDirectoryLCDS": 1,
                "demGetFileTimeByHandle_WOW": 1,
                "demGetPhysicalDriveType": 1,
                "demIsShortPathName": 1,
                "demLFNCleanup": 1,
                "demLFNGetCurrentDirectory": 1,
                "demSetCurrentDirectoryGetDrive": 1,
                "demSetCurrentDirectoryLCDS": 1,
                "demWOWLFNAllocateSearchHandle": 1,
                "demWOWLFNCloseSearchHandle": 1,
                "demWOWLFNEntry": 1,
                "demWOWLFNGetSearchHandle": 1,
                "demWOWLFNInit": 1,
                "fSeparateWow": 1,
                "getAF": 1,
                "getAH": 1,
                "getAL": 1,
                "getAX": 1,
                "getBH": 1,
                "getBL": 1,
                "getBP": 1,
                "getBX": 1,
                "getCF": 1,
                "getCH": 1,
                "getCL": 1,
                "getCS": 1,
                "getCX": 1,
                "getDF": 1,
                "getDH": 1,
                "getDI": 1,
                "getDL": 1,
                "getDS": 1,
                "getDX": 1,
                "getEAX": 1,
                "getEBP": 1,
                "getEBX": 1,
                "getECX": 1,
                "getEDI": 1,
                "getEDX": 1,
                "getEFLAGS": 1,
                "getEIP": 1,
                "getES": 1,
                "getESI": 1,
                "getESP": 1,
                "getFS": 1,
                "getGS": 1,
                "getIF": 1,
                "getIP": 1,
                "getIntelRegistersPointer": 1,
                "getMSW": 1,
                "getOF": 1,
                "getPF": 1,
                "getSF": 1,
                "getSI": 1,
                "getSP": 1,
                "getSS": 1,
                "getZF": 1,
                "host_CreateThread": 1,
                "host_ExitThread": 1,
                "host_com_close": 1,
                "host_direct_access_error": 1,
                "host_simulate": 1,
                "pDeviceChain": 1,
                "setAF": 1,
                "setAH": 1,
                "setAL": 1,
                "setAX": 1,
                "setBH": 1,
                "setBL": 1,
                "setBP": 1,
                "setBX": 1,
                "setCF": 1,
                "setCH": 1,
                "setCL": 1,
                "setCS": 1,
                "setCX": 1,
                "setDF": 1,
                "setDH": 1,
                "setDI": 1,
                "setDL": 1,
                "setDS": 1,
                "setDX": 1,
                "setEAX": 1,
                "setEBP": 1,
                "setEBX": 1,
                "setECX": 1,
                "setEDI": 1,
                "setEDX": 1,
                "setEFLAGS": 1,
                "setEIP": 1,
                "setES": 1,
                "setESI": 1,
                "setESP": 1,
                "setFS": 1,
                "setGS": 1,
                "setIF": 1,
                "setIP": 1,
                "setMSW": 1,
                "setOF": 1,
                "setPF": 1,
                "setSF": 1,
                "setSI": 1,
                "setSP": 1,
                "setSS": 1,
                "setZF": 1,
                "????????": 1,
                "((((((   ": 1,
                "'?--?1-?6-?:-??-??-:?-6?-1?--?1-?6-?:-??-:?-6?-1?--?--?1-?6-?:-??-:?-6?-1?": 3,
                "   $$$(((---222888???": 1,
                " $(,048<": 1,
                " $(,048<@DHL": 1,
                "Vanilla": 1,
                "Normal": 1,
                "ISMMC": 1,
                "?=;<XdDB@>": 1,
                ")Ye8*p": 1,
                "[ .- ": 1,
                "\\h9/!": 1,
                "]i10#\"": 1,
                "^jr2$": 1,
                "`l45&'": 1,
                "ams(t": 1,
                "u+nvUVwxyz": 1,
                "{|O}KG~": 1,
                "oRSPLMH": 1,
                "EWNQJ7IFT": 1,
                "z|@9+": 1,
                "{}TO~SLQ": 1,
                "K^]Y\\[VPUchbaf`Z_": 1,
                "lgkjed": 1,
                " !\"#$%&'(+": 1,
                "*V,-./012345s6": 1,
                "MEGKO|5HLPR7IMQSJN~": 1,
                ";<=>?@ABCDWX": 1,
                "&%.6=>FENUjf": 1,
                "$-,5<CDMT[]X": 1,
                "#+43;BKLR]Z": 1,
                "\"!*21:AIJQY": 2,
                "twlkihJusrp|}tzq{ymZ": 1,
                "&%.6=>FENU]f": 1,
                "$-,5<CDMT[\\": 1,
                "#+43;BKLRSZ": 1,
                "jvlkihwusrp~}tzq": 1,
                "'/7?GOV^W_b": 1,
                "~WbWWb": 1,
                "SoftPC-AT Version 3": 1,
                "(C)Copyright Insignia Solutions Inc. 1987-1992": 1,
                "@(#)sun4_a3cpu.c": 1,
                "1.2 5/24/91 Copyright Insignia Solutions Ltd.": 1,
                "89:;<=>?": 2,
                "autoexec.nt": 1,
                "00030<0?0": 1,
                "30333<3?3": 1,
                "<0<3<<<?<": 1,
                "?0?3?<???": 1,
                " !\"#$%&'()": 1,
                ",*./012345679d<=": 1,
                "pqrstuvwxyZ}[`ei\\afj]bgch": 1,
                "Z~PSU": 1,
                "QTVKL": 1,
                "NtVdm : Using Yoda on an x86 may be hazardous to your systems' health": 1,
                "????????.???": 1,
                "windir": 1,
                "Userenv.dll": 1,
                "GetSystemTempDirectoryA": 1,
                "Software\\Microsoft\\Windows NT\\CurrentVersion\\Terminal Server": 1,
                "RootDrive": 1,
                "%SystemRoot%": 1,
                "\\System32\\command.com": 1,
                "shell": 1,
                "country": 1,
                "MS-DOS": 1,
                "Base$": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-r-- name=.rsrc": 1,
                "type=program": 1,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetVersionExA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ExitProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetProcAddress": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetModuleHandleA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WriteFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetStdHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetModuleFileNameA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FreeEnvironmentStringsA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetEnvironmentStrings": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FreeEnvironmentStringsW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WideCharToMultiByte": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLastError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetEnvironmentStringsW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetHandleCount": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileType": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetStartupInfoA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapDestroy": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapCreate": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VirtualFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VirtualAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCommandLineA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemTimeAsFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_RtlUnwind": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_InterlockedExchange": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VirtualQuery": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LoadLibraryA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetACP": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetOEMCP": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCPInfo": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LCMapStringA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_MultiByteToWideChar": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LCMapStringW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReadFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FlushFileBuffers": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetStringTypeA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetStringTypeW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLocaleInfoA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VirtualProtect": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemInfo": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetFilePointer": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CloseHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetStdHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetUnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_UnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapReAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_TerminateProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleKeyboardLayoutNameA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetVDMCurrentDirectories": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentProcessId": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentThreadId": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_QueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTickCount": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DebugBreak": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLocalTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_Sleep": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WaitForSingleObjectEx": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ExitThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetEvent": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_InitializeCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateEventA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetThreadPriority": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_RaiseException": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FormatMessageA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindClose": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateFileA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindFirstFileA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileSize": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetLastError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetPriorityClass": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetPriorityClass": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemDirectoryA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_TlsAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemDefaultLangID": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_IsBadCodePtr": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WaitForSingleObject": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_TlsSetValue": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_TlsGetValue": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_PulseEvent": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ResumeThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DuplicateHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LeaveCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_EnterCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ClearCommError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetOverlappedResult": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DeleteCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetCommState": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WaitForMultipleObjects": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_EscapeCommFunction": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ClearCommBreak": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetCommBreak": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetCommTimeouts": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCommTimeouts": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetupComm": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCommState": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_OutputDebugStringA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleDisplayMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetThreadContext": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GlobalMemoryStatus": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetCurrentDirectoryA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetEnvironmentVariableA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleTitleA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleTitleA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReadConsoleOutputA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleCursorPosition": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleCursorInfo": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleOutputCP": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleScreenBufferInfo": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleCursorInfo": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WriteConsoleOutputA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleWindowInfo": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleScreenBufferSize": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_Beep": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleActiveScreenBuffer": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FillConsoleOutputAttribute": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FillConsoleOutputCharacterA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleFontSize": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentConsoleFont": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WriteConsoleA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateConsoleScreenBuffer": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DeviceIoControl": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReleaseMutex": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleCtrlHandler": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateMutexA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll__lclose": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll__lread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll__llseek": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll__lopen": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemWindowsDirectoryA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileAttributesA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetWindowsDirectoryA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SuspendThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FreeLibrary": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_IsDebuggerPresent": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LocalFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LocalAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateSemaphoreA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReleaseSemaphore": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ResetEvent": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcmpiA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FileTimeToDosDateTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FileTimeToLocalFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_QueryDosDeviceW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetShortPathNameW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_IsDBCSLeadByte": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileAttributesW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DefineDosDeviceW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindNextFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindFirstFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetDriveTypeA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_RemoveDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_MoveFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LocalFileTimeToFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetDriveTypeW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SystemTimeToFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetEndOfFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DeleteFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileInformationByHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetEnvironmentVariableA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCompressedFileSizeW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetFileAttributesW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetLocalTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetErrorMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetVolumeLabelA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_UnlockFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LockFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateDirectoryA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetShortPathNameA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DeleteFileA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTempPathA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_TerminateThread": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTempFileNameA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SearchPathA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleCP": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetBinaryTypeA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetExitCodeProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateProcessA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SearchPathW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTempFileNameW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ExpandEnvironmentStringsA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_MoveFileExW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetDiskFreeSpaceW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetVolumeInformationW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetComputerNameW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VirtualUnlock": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetNextVDMCommand": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ExitVDM": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleDisplayMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleKeyShortcuts": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleHardwareState": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleHardwareState": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_RegisterConsoleVDM": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsolePalette": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ConsoleMenuControl": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ShowConsoleCursor": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VDMConsoleOperation": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WriteConsoleInputVDMW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReadConsoleInputExW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleInputWaitHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetLastConsoleEventActive": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_InvalidateConsoleDIBits": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetProcessHeap": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtClose": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtEnumerateValueKey": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtOpenKey": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlInitUnicodeString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlUnicodeStringToAnsiString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryInformationProcess": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlTimeToTimeFields": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlTimeFieldsToTime": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtAlertThread": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlExtendedLargeIntegerDivide": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtWaitForMultipleObjects": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlExtendedIntegerMultiply": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlLeaveCriticalSection": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlEnterCriticalSection": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtTerminateProcess": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlInitializeCriticalSection": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtVdmControl": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlUnicodeStringToOemString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlAnsiStringToUnicodeString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlInitString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlOemStringToUnicodeString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlFreeUnicodeString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtRaiseHardError": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlInitAnsiString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlNtStatusToDosError": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtAllocateVirtualMemory": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtCreateFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtDeviceIoControlFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlFillMemoryUlong": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtOpenFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryInformationFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtFsControlFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtWaitForSingleObject": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtMapViewOfSection": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtUnmapViewOfSection": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtCreateSection": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryValueKey": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtFreeVirtualMemory": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlOemToUnicodeN": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtGetContextThread": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryInformationThread": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtDuplicateObject": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtSetContextThread": 3,
                "bind=NONE type=FUNC name=ntdll.dll_DbgPrint": 3,
                "bind=NONE type=FUNC name=ntdll.dll_DbgPrompt": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtSetInformationFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll__strcmpi": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlEqualUnicodeString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQuerySymbolicLinkObject": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtOpenSymbolicLinkObject": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlAppendUnicodeToString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlFreeAnsiString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryObject": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryVolumeInformationFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlFreeHeap": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryDirectoryFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlCompareUnicodeString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlUpcaseUnicodeStringToCountedOemString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlIsNameLegalDOS8Dot3": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlIsDosDeviceName_U": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlAllocateHeap": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlCreateUnicodeString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlDosPathNameToNtPathName_U": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlUnicodeStringToCountedOemString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlUpcaseUnicodeChar": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlGetFullPathName_U": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlDetermineDosPathNameType_U": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlReAllocateHeap": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlAppendUnicodeStringToString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlGenerate8dot3Name": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryFullAttributesFile": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlDestroyEnvironment": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlSetEnvironmentVariable": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlCreateEnvironment": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlxUnicodeStringToOemSize": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NlsMbOemCodePageTag": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlReleasePebLock": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlAcquirePebLock": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlFreeOemString": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlSetCurrentDirectory_U": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQuerySystemInformation": 3,
                "bind=NONE type=FUNC name=ntdll.dll_NtQueryVirtualMemory": 3,
                "bind=NONE type=FUNC name=ntdll.dll_RtlCharToInteger": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegOpenKeyExA": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegQueryInfoKeyA": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegCloseKey": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegQueryValueExA": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegEnumValueA": 3,
                "bind=NONE type=FUNC name=GDI32.dll_SetPaletteEntries": 3,
                "bind=NONE type=FUNC name=GDI32.dll_SelectPalette": 3,
                "bind=NONE type=FUNC name=GDI32.dll_RemoveFontResourceW": 3,
                "bind=NONE type=FUNC name=GDI32.dll_CreatePalette": 3,
                "bind=NONE type=FUNC name=USER32.dll_wsprintfA": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetKeyboardType": 3,
                "bind=NONE type=FUNC name=USER32.dll_CharToOemBuffA": 3,
                "bind=NONE type=FUNC name=USER32.dll_OemToCharA": 3,
                "bind=NONE type=FUNC name=USER32.dll_CharUpperBuffW": 3,
                "bind=NONE type=FUNC name=USER32.dll_MapVirtualKeyA": 3,
                "bind=NONE type=FUNC name=USER32.dll_LoadStringA": 3,
                "bind=NONE type=FUNC name=USER32.dll_LoadStringW": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetWindowThreadProcessId": 3,
                "bind=NONE type=FUNC name=USER32.dll_SendMessageA": 3,
                "bind=NONE type=FUNC name=USER32.dll_ShowWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetWindowPos": 3,
                "bind=NONE type=FUNC name=USER32.dll_ScreenToClient": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetWindowRect": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetDlgItem": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetSystemMetrics": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetDesktopWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetUserObjectInformationA": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetThreadDesktop": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetWindowLongA": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetWindowTextA": 3,
                "bind=NONE type=FUNC name=USER32.dll_LoadIconA": 3,
                "bind=NONE type=FUNC name=USER32.dll_EndDialog": 3,
                "bind=NONE type=FUNC name=USER32.dll_SendDlgItemMessageA": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetWindowLongA": 3,
                "bind=NONE type=FUNC name=USER32.dll_DialogBoxParamA": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetForegroundWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_DefWindowProcA": 3,
                "bind=NONE type=FUNC name=USER32.dll_EnumWindows": 3,
                "bind=NONE type=FUNC name=USER32.dll_ShowStartGlass": 3,
                "bind=NONE type=FUNC name=USER32.dll_FindWindowA": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetForegroundWindow": 3,
                "bind=NONE type=FUNC name=USER32.dll_MessageBeep": 3,
                "bind=NONE type=FUNC name=USER32.dll_SetCursorPos": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetCursorPos": 3,
                "bind=NONE type=FUNC name=USER32.dll_ClipCursor": 3,
                "bind=NONE type=FUNC name=USER32.dll_DeleteMenu": 3,
                "bind=NONE type=FUNC name=USER32.dll_AppendMenuW": 3,
                "bind=NONE type=FUNC name=USER32.dll_ModifyMenuW": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetClipCursor": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetKeyState": 3,
                "bind=NONE type=FUNC name=USER32.dll_PostMessageA": 3,
                "bind=NONE type=FUNC name=USER32.dll_wvsprintfA": 3,
                "bind=NONE type=FUNC name=USER32.dll_VkKeyScanW": 3,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_BlockWOWIdle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_CurrentMonitorTeb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_DBGNotifyDebugged": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_DBGNotifyNewTask": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_DBGNotifyRemoteThreadAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_DispatchInterrupts": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_Dos_Flag_Addr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_DpmiSetIncrementalAlloc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_ExpLdt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_FlatAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_GetDOSAppName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_GetWOWShortCutInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_IsCdRomFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_MGetVdmPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_RegisterWOWIdle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_ResumeTimerThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_SelectorLimit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_SetShadowDescriptorEntries": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_Sim32pGetVDMPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_SoftPcEoi": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_SuspendTimerThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDAllocMem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDAllocateDosHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDAssociateNtHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDDeInstallIOHook": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDDeInstallMemoryHook": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDDeInstallUserHook": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDExcludeMem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDFreeMem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDIncludeMem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDInstallIOHook": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDInstallMemoryHook": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDInstallUserHook": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDQueryDMA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDReleaseDosHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDReleaseIrqLine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDRequestDMA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDReserveIrqLine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDRetrieveNtHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDSetDMA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDSimulate16": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VDDTerminateVDM": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VdmDbgAttach": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VdmGetParametersInfoError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VdmMapFlat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VdmParametersInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_VdmTraceEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_WOWSysErrorBox": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_WaitIfIdle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_call_ica_hw_interrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_cmdCheckTemp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_cmdCheckTempInit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_cpu_createthread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demClientErrorEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demFileDelete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demFileFindFirst": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demFileFindNext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demGetCurrentDirectoryLCDS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demGetFileTimeByHandle_WOW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demGetPhysicalDriveType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demIsShortPathName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demLFNCleanup": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demLFNGetCurrentDirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demSetCurrentDirectoryGetDrive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demSetCurrentDirectoryLCDS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demWOWLFNAllocateSearchHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demWOWLFNCloseSearchHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demWOWLFNEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demWOWLFNGetSearchHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_demWOWLFNInit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_fSeparateWow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getAF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getAH": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getAL": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getAX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getBH": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getBL": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getBP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getBX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getCF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getCH": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getCL": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getCS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getCX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getDF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getDH": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getDI": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getDL": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getDS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getDX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getEAX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getEBP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getEBX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getECX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getEDI": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getEDX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getEFLAGS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getEIP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getES": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getESI": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getESP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getFS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getGS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getIF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getIP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getIntelRegistersPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getMSW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getOF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getPF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getSF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getSI": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getSP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getSS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_getZF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_host_CreateThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_host_ExitThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_host_com_close": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_host_direct_access_error": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_host_simulate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_pDeviceChain": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setAF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setAH": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setAL": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setAX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setBH": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setBL": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setBP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setBX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setCF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setCH": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setCL": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setCS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setCX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setDF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setDH": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setDI": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setDL": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setDS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setDX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setEAX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setEBP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setEBX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setECX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setEDI": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setEDX": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setEFLAGS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setEIP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setES": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setESI": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setESP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setFS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setGS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setIF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setIP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setMSW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setOF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setPF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setSF": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setSI": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setSP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setSS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntvdm.exe_setZF": 1,
                "section=.data type=utf32le string=\\t\\a\\f\\b\\f\\t\\f\\n\\a\\v\\b\\f": 1,
                "section=.data type=utf32le string=R\\rS\\rW": 1,
                "section=.data type=utf32le string=Y\\vl\\rm p": 1,
                "section=.data type=utf32le string=\\v\u00a7\\r\u00b7 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.data type=utf32le string=z\u00f4\u01e8\u03d0\u07a1\u0f42\u1e84\u3d09\u7a12\uf424 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Greek and Coptic,Thaana,Tibetan,Latin Extended Additional,CJK Unified Ideographs Extension A,CJK Unified Ideographs,Private Use Area": 1,
                "section=.data type=utf16le string=**\u2a00\u2a2a blocks=Basic Latin,Supplemental Mathematical Operators": 6,
                "section=.data type=utf16le string=*?\u3f00\u2a2a blocks=Basic Latin,CJK Unified Ideographs Extension A,Supplemental Mathematical Operators": 1,
                "section=.data type=utf16le string=\\f\u00c0\\b\u01c0 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "section=.data type=utf16le string= `\u00a0\u3fe0 blocks=Basic Latin,Latin-1 Supplement,CJK Unified Ideographs Extension A": 1,
                "section=.data type=utf32le string=\\f\\f\\f\\f\\n\\v": 1,
                "section=.data type=utf32le string=\\f\\f\\f\\f\\r\\r\\r\\r\\f\\f\\f\\f": 2,
                "section=.data type=utf32le string=\"\"\"\"!\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"": 2,
                "section=.data type=utf32le string=": 2,
                "section=.data type=utf32le string=$$$$$$$$$$$$$$$$$$$$$$$$$$$$#$$$": 1,
                "section=.data type=utf32le string=$$$$$$$$$$$$$$$$$$$$$$$$$$$$#$$$\u00c8 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.data type=utf32le string=\"Cg\u0384\u0384\u0384\u0384\u0384\u0384\u0384\u0384\u0384\u0384\u0384\u0384\u0384\u0384\u0384\u0384 blocks=Basic Latin,Greek and Coptic": 1,
                "section=.data type=utf32le string=S\u00a5\u00fd\u01ef\u044c\u055f\u080f\u0abe\u101d\u13b2\u157c\u203a\u4074\u80e8\ud800\uddd0\ud808\udcc0 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Cyrillic,Armenian,Samaritan,Gujarati,Myanmar,Cherokee,Unified Canadian Aboriginal Syllabics,General Punctuation,CJK Unified Ideographs Extension A,CJK Unified Ideographs,Phaistos Disc,Cuneiform": 1,
                "section=.data type=utf16le string= 0:@`\u00c0\u0180\u0300\u0359\u0417 blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B,Combining Diacritical Marks,Cyrillic": 1,
                "section=.data type=utf16le string=\\r\\f\\v\\n\\t\\b\\a": 1,
                "section=.data type=utf16le string=@`px|~\u807f\uc07f blocks=Basic Latin,CJK Unified Ideographs,Hangul Syllables": 1,
                "section=.data type=utf16le string=\\b\\b\\b\\b\\b": 5,
                "section=.data type=utf32le string=@`px|~": 1,
                "section=.data type=utf16le string=\\b\\b2\u02d0\u0190\\b\\b blocks=Basic Latin,Spacing Modifier Letters,Latin Extended-B": 1,
                "section=.data type=utf32le string=ccccccccccccccc\u00ae\u00ae\u00ef\u00efc\u00ef blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.data type=utf32le string= (08@HPX`hpx": 1,
                "section=.data type=utf16le <?\u00c0\u00c3\u00cc\u00cf\u00f0\u00f3\u00fc\u30ff\u0300\u0303\u030c\u030f\u0330\u0333\u033c\u033f\u03c0\u03c3\u03cc\u03cf\u03f0\u03f3\u03fc blocks=Basic Latin,Latin-1 Supplement,Katakana,Combining Diacritical Marks,Greek and Coptic": 1,
                "section=.data type=utf16le string=OY\u5451\u4b56L blocks=Basic Latin,CJK Unified Ideographs,CJK Unified Ideographs Extension A": 1,
                "section=.data type=utf32le string=;\\b<\\b=\\b>\\b?\\b@\\bA\\bB\\bC\\bD\\b;": 1,
                "section=.data type=utf32le string=K\\bM\\bO\\bQ\\bG\\b": 1,
                "section=.data type=utf32le string=H\\bJ\\bL\\bN\\bP\\bR\\bS\\b": 1,
                "section=.data type=utf16le string=ROPQKLMGHI": 1,
                "section=.data type=utf16le string=\\DosDevices\\?:": 1,
                "section=.data type=utf16le string=::\u4094\u0f00 blocks=Basic Latin,CJK Unified Ideographs Extension A,Tibetan": 1,
                "section=.rsrc type=utf16le string=\\nERRORPANEL": 1,
                "section=.rsrc type=utf16le  bit MS-DOS Subsystem": 2,
                "section=.rsrc type=utf16le string=\\bMS Shell Dlg": 1,
                "section=.rsrc type=utf16le string=*\u00c8\\fk blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=&Terminate": 1,
                "section=.rsrc type=utf16le string=&Retry": 1,
                "section=.rsrc type=utf16le string=&Ignore": 1,
                "section=.rsrc type=utf16le string=_VERSION_INFO": 1,
                "section=.rsrc type=utf16le string=StringFileInfo": 1,
                "section=.rsrc type=utf16le B0": 1,
                "section=.rsrc type=utf16le string=CompanyName": 1,
                "section=.rsrc type=utf16le string=Microsoft Corporation": 1,
                "section=.rsrc type=utf16le string=FileDescription": 1,
                "section=.rsrc type=utf16le string=NTVDM.EXE": 3,
                "section=.rsrc type=utf16le string=FileVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512 (xpsp.080413-2111)": 1,
                "section=.rsrc type=utf16le string=InternalName": 1,
                "section=.rsrc type=utf16le string=LegalCopyright": 1,
                "section=.rsrc type=utf16le string= Microsoft Corporation. All rights reserved.": 1,
                "section=.rsrc type=utf16le string=OriginalFilename": 1,
                "section=.rsrc type=utf16le string=ProductName": 1,
                "section=.rsrc type=utf16le string=Microsoft\u00ae Windows\u00ae Operating System blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=ProductVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512": 1,
                "section=.rsrc type=utf16le string=arFileInfo": 1,
                "section=.rsrc type=utf16le string=Translation": 1,
                "section=.rsrc type=utf16le The NTVDM CPU has encountered an illegal instruction.\"Internal error in NTVDM procedure.#NTVDM does not support a ROM BASIC.BFailure to allocate the requested number of Expanded Memory pages.*A continuous RESET state has been entered.,The CMOS file cmos.ram could not be created.,The CMOS file cmos.ram could not be updated.<The memory resources needed by NTVDM could not be allocated.": 1,
                "section=.rsrc type=utf16le string=LAn installation file required by NTVDM is missing, execution must terminate.": 1,
                "section=.rsrc type=utf16le string=&PIF file not found or bad file format.6Invalid startup directory, please check your pif file.6Invalid program file name, please check your pif file.": 1,
                "section=.rsrc type=utf16le string=Command line too long.,Please input parameters for the application:7Error while setting up environment for the application.": 1,
                "section=.rsrc type=utf16le string=Insufficient memory resources.=The NTVDM CPU has encountered an unsupported 386 instruction.TThe EMM command line in your config.nt contains invalid parameters or syntax errors.5The NTVDM CPU has encountered an unhandled exception.t\\nThe file is not a valid MS-DOS program file.\\n MS-DOS program files must end with the extension .EXE, .COM, or .BAT.": 1,
                "section=.rsrc type=utf16le string=vAn application has attempted to %s, which cannot be supported. This may cause the application to function incorrectly./directly access an incompatible diskette format": 1,
                "section=.rsrc type=utf16le string=directly access the hard disk": 1,
                "section=.rsrc type=utf16le string=load a 16-bit Dos device driver": 1,
                "section=.rsrc type=utf16le string=(perform an unknown internal 'BOP' opcode": 1,
                "section=.rsrc type=utf16le string=allocate Expanded Memory": 1,
                "section=.rsrc type=utf16le string=use a third party mouse driver": 1,
                "section=.rsrc type=utf16le string=,Choose 'Close' to terminate the application.": 1,
                "section=.rsrc type=utf16le  bit Windows Subsystem": 1,
                "section=.rsrc type=utf16le string=VThe system file is not suitable for running MS-DOS and Microsoft Windows applications.\"Memory error during intialization.\u00a2A temporary file needed for initialization could not be created or could not be written to. Make sure that the directory path exists, and disk space is available.:The video device failed to initialize for fullscreen mode.?Insufficient memory to load installable Virtual Device Drivers.8Virtual Device Driver format in the registry is invalid.?An installable Virtual Device Driver failed Dll initialization.\u00a5Unable to lock for exclusive access. Another application may be using the drive. When the other application has finished using the drive you may retry the operation.\\nDrive %c: ZThe Application attempted to enable DOS graphics mode. DOS graphics mode is not supported. blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=&Hide Mouse Pointer": 1,
                "section=.rsrc type=utf16le string=&Display Mouse Pointer\\t - FROZEN\\tInactive": 1,
                "section=.rsrc type=utf16le string=\\a%s %lxh": 1,
                "section=.rsrc type=utf16le string=Function failed$NTVDM has encountered a System Error*Driver does not support selected Baud Rate<The system cannot open %s port requested by the application.": 1,
                "arch     x86": 1,
                "binsz    420864": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x00068af4": 1,
                "compiled Sun Apr 13 19:36:58 2008": 1,
                "crypto   false": 1,
                "dbg_file ntvdm.pdb": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x0006b34e": 1,
                "guid     90A9F25ED61149E7B8A47B34E6E7C2BA1": 1,
                "linenum  true": 1,
                "lsyms    true": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       windows": 1,
                "overlay  false": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   true": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Windows CUI": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0x3": 1,
                "TimeDateStamp : 0x480252ca": 1,
                "PointerToSymbolTable : 0x0": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x11f": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x7": 1,
                "MinorLinkerVersion : 0xa": 1,
                "SizeOfCode : 0x60000": 1,
                "SizeOfInitializedData : 0x44e00": 1,
                "SizeOfUninitializedData : 0x0": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0x61000": 1,
                "ImageBase : 0xf000000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x200": 1,
                "MajorOperatingSystemVersion : 0x5": 1,
                "MinorOperatingSystemVersion : 0x1": 1,
                "MajorImageVersion : 0x5": 1,
                "MinorImageVersion : 0x1": 1,
                "MajorSubsystemVersion : 0x4": 1,
                "MinorSubsystemVersion : 0x0": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0xa7000": 1,
                "SizeOfHeaders : 0x400": 1,
                "CheckSum : 0x6b34e": 1,
                "Subsystem : 0x3": 1,
                "DllCharacteristics : 0x0": 1,
                "SizeOfStackReserve : 0x40000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_EXPORT": 1,
                "VirtualAddress : 0x601d0": 1,
                "Size : 0xe0e": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x5e050": 1,
                "Size : 0x78": 1,
                "IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "VirtualAddress : 0xa5000": 1,
                "Size : 0x1bc0": 1,
                "IMAGE_DIRECTORY_ENTRY_DEBUG": 1,
                "VirtualAddress : 0x1590": 1,
                "Size : 0x1c": 1,
                "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG": 1,
                "VirtualAddress : 0x2bb8": 1,
                "Size : 0x40": 1,
                "IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT": 1,
                "VirtualAddress : 0x250": 1,
                "Size : 0x74": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x1000": 1,
                "Size : 0x58c": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "kernel32.dll": 1,
                "ntdll.dll": 1,
                "advapi32.dll": 1,
                "gdi32.dll": 1,
                "user32.dll": 1,
                "420864": 1,
                "=== VS_VERSIONINFO ===": 1,
                "# VS_FIXEDFILEINFO": 1,
                "Signature: 0xfeef04bd": 1,
                "StrucVersion: 0x10000": 1,
                "FileVersion: 5.1.2600.5512": 1,
                "ProductVersion: 5.1.2600.5512": 2,
                "FileFlagsMask: 0x3f": 1,
                "FileFlags: 0x0": 1,
                "FileOS: 0x40004": 1,
                "FileType: 0x2": 1,
                "FileSubType: 0x0": 1,
                "# StringTable": 1,
                "CompanyName: Microsoft Corporation": 1,
                "FileDescription: NTVDM.EXE": 1,
                "FileVersion: 5.1.2600.5512 (xpsp.080413-2111)": 1,
                "InternalName: NTVDM.EXE": 1,
                "LegalCopyright: \u00a9 Microsoft Corporation. All rights reserved.": 1,
                "OriginalFilename: NTVDM.EXE": 1,
                "ProductName: Microsoft\u00ae Windows\u00ae Operating System": 1
            }
        }
    ]
}