{
    "filepath": "/corpus/family_2/574b5bd54ae9d446b40f26d41ba85c6feda27e842aa818536705e3a087fcf369",
    "fileinfo": {
        "labels": {
            "family": "family_2"
        },
        "md5": "b92cc50170716387cf78df84bb576ead",
        "type": "ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, stripped"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "push ebp;mov eax, 0;mov ebp, esp;sub esp, 8;call ": 3,
                "push esi;push main;call fcn.0805155f;hlt;push ebp": 3,
                "push main;call fcn.0805155f;hlt;push ebp;mov ebp, esp": 3,
                "push ebp;mov ebp, esp;push edi;push esi;push ebx": 108,
                "push edx;call fcn.08049fc3;mov dword [ebp - ], eax;push ;push ": 3,
                "push ;push ebx;push esi;call fcn.0804a059;mov edi, eax": 3,
                "push esi;call fcn.0804a059;mov word [ebp - ], ax;lea eax, [ebp - ];add esp, ": 3,
                "push dword [ebp - ];call fcn.0804f0f1;add esp, ;cmp eax, ;jg ": 6,
                "call fcn.0804eca7;mov dword [esp], ;call fcn.0804eca7;mov dword [esp], ;call fcn.0804eca7": 27,
                "mov dword [esp], ;call fcn.0804eca7;mov dword [esp], ;call fcn.0804eca7;mov dword [esp], ": 24,
                "mov esi, eax;mov dword [ebp - ], eax;add esp, ;cmp dword [ebp - ], 0;jle ": 3,
                "add esp, ;cmp dword [ebp - ], 0;jle ;mov dword [ebp - ], 0;mov dword [ebp - ], esi": 3,
                "add esp, ;sub esp, 8;push dword [ebp - ];mov eax, dword [ebp - ];push ebp": 1,
                "movzx esi, byte [ebp + ];call fcn.0804f659;cmp eax, ;je ;test eax, eax": 4,
                "call fcn.0804f659;cmp eax, ;jne ;sub esp, ;push 0": 4,
                "cmp eax, ;jne ;sub esp, ;push 0;call fcn.08051173": 4,
                "sub esp, ;push 0;call fcn.08051173;test eax, eax;je ": 4,
                "call fcn.0804f70a;mov dword [esp], 0;call fcn.08051173;mov edx, dword [ecx + eax*4];cmp byte [edx + 4], bl": 4,
                "push dword [ebp + ];mov eax, esi;and eax, ;push eax;push dword [ebp + ]": 4,
                "call fcn.08051173;lea esp, [ebp - ];pop ebx;pop esi;pop edi": 4,
                "pop esi;pop edi;pop ebp;ret;push ebp": 69,
                "push ebp;mov ebp, esp;push esi;push ebx;mov ebx, 0": 5,
                "jne ;lea esp, [ebp - 8];pop ebx;pop esi;pop ebp": 5,
                "push edi;push esi;push ebx;sub esp, ;mov esi, dword [ebp + 8]": 11,
                "mov al, byte [esi + 5];test al, al;je ;lea edx, [ebx - 6];mov dword [ebp - ], edx": 6,
                "lea edi, [esi + 6];sub esp, 8;push ;push dword [ebp - ];call fcn.08050732": 6,
                "call fcn.08050732;mov dword [ebp - ], eax;mov dword [ebp - ], eax;mov edx, dword [ebp - ];mov dword [ebp - ], edx": 6,
                "add edi, 5;mov word [ecx], 2;mov dword [ecx + 4], edx;add ecx, ;cmp edi, esi": 6,
                "mov dword [ebp - ], ebx;add esp, ;test ebx, ebx;jle ;cmp dword [ebp - ], 1": 5,
                "test ebx, ebx;jle ;cmp dword [ebp - ], 1;je ;mov al, byte [edi + 1]": 5,
                "mov dl, al;and edx, ;mov esi, edx;cmp edx, ebx;jg ": 5,
                "mov esi, dword [ebp - ];mov ebx, dword [ebp - ];mov byte [ebx + esi*8 + 4], al;cmp ecx, 1;je ": 4,
                "add esp, ;ret;sub esp, ;mov eax, dword [esp + ];mov dword [esp + ], eax": 146,
                "sub esp, ;mov eax, dword [esp + ];mov dword [esp + ], eax;mov eax, dword [esp + ];mov dword [esp + ], eax": 157,
                "mov eax, dword [esp + ];mov dword [esp + ], eax;lea eax, [esp + ];push eax;push 5": 9,
                "mov dword [esp + ], eax;lea eax, [esp + ];push eax;push 5;call fcn.0805181b": 9,
                "push eax;push 2;call fcn.0805181b;add esp, ;ret": 10,
                "mov eax, dword [esp + ];mov dword [esp + ], eax;lea eax, [esp + ];push eax;push ": 71,
                "sub esp, ;call fcn.0804f67f;push edx;push edx;push dword [esp + ]": 18,
                "ret;sub esp, ;mov eax, dword [esp + ];test eax, eax;jle ": 18,
                "jg ;add esp, ;jmp loc.0804ff78;call fcn.0804fb63;mov dword [eax], ": 19,
                "jmp ;mov dword [esp + ], eax;mov eax, ;jmp ;mov dword [esp + eax*4 + ], 0": 18,
                "dec eax;jns ;push edx;push edx;push ebx": 18,
                "sub esp, ;mov edi, edx;mov ebx, ecx;mov byte [ebp - ], al;push ecx": 5,
                "mov ecx, ;mov edx, str.ALA_fAJCLEGOG_fAMO_;mov eax, 3;call fcn.0804ecbc;mov ecx, 2": 5,
                "mov ecx, ;mov edx, str.JVVRQ;mov eax, 5;call fcn.0804ecbc;mov ecx, 7": 5,
                "mov ecx, ;mov edx, str.pgrmpv;mov eax, ;call fcn.0804ecbc;mov ecx, ": 5,
                "mov eax, ;call fcn.0804ecbc;mov ecx, ;mov edx, ;mov eax, ": 39,
                "mov eax, ;call fcn.0804ecbc;mov ecx, ;mov edx, str.okpck;mov eax, ": 5,
                "mov edx, str.aMLLGAVKML;mov eax, ;call fcn.0804ecbc;mov ecx, ;mov edx, ": 5,
                "call fcn.0804ecbc;mov ecx, ;mov edx, str.cAAGRV;mov eax, ;call fcn.0804ecbc": 5,
                "mov edx, ;mov eax, ;call fcn.0804ecbc;mov ecx, ;mov edx, str.AMLVGLV": 4,
                "call fcn.0804ecbc;mov ecx, 8;mov edx, str.AJWLIGF_;mov eax, ;call fcn.0804ecbc": 3,
                "push ebx;mov ebx, dword [ebp + ];push ebx;call fcn.0804f0f1;mov esi, eax": 5,
                "mov eax, dword [ebp + 8];mov edx, dword [ebp + ];mov edi, dword [ebp + ];test edi, edi;je ": 7,
                "cmp edx, 9;jle ;lea eax, [edx + ];mov byte [ebp + esi - ], al;mov eax, ecx": 7,
                "je ;mov byte [ebp + esi - ], ;jmp ;inc esi;lea eax, [ebp + esi - ]": 7,
                "add esp, 8;jmp ;mov byte [edi], ;mov byte [edi + 1], 0;jmp ": 7,
                "mov ebx, dword [ebp + ];mov esi, dword [ebp + 8];mov edi, 0;add esp, 4;jmp ": 9,
                "or edx, ;cmp cl, dl;jne ;inc edi;cmp dword [ebp - ], edi": 8,
                "mov eax, dword [ebp - ];cmp dword [ebp - ], eax;ja ;cmp dword [ebp - ], eax;jne ": 6,
                "ja ;cmp dword [ebp - ], eax;jne ;cmp edx, dword [ebp - ];jg ": 6,
                "add eax, edx;mov dword [ebp - ], eax;mov edi, 1;jmp ;mov edi, ": 6,
                "push ebx;mov ebx, dword [];mov eax, ebx;shl eax, ;xor ebx, eax": 1,
                "mov eax, ebx;shr eax, 8;mov ecx, edx;shr ecx, ;xor edx, ecx": 1,
                "xor edx, ecx;xor ebx, edx;xor eax, ebx;mov dword [], eax;pop ebx": 1,
                "mov dword [ebp - ], eax;mov dword [ebp - ], edx;mov ecx, dword [ebp - ];shr ecx, 3;mov edx, ecx": 3,
                "call fcn.0804f67f;mov ebx, eax;call fcn.0804f6a5;xor eax, ebx;mov dword [], eax": 4,
                "mov ebx, dword [ebp + 8];test ebx, ebx;je ;mov eax, dword [ebx + 4];test eax, eax": 6,
                "test eax, eax;je ;sub esp, ;push eax;call fcn.08050d83": 8,
                "mov dl, byte [esi];cmp dl, ;je ;test dl, dl;jne ": 7,
                "jne ;mov edx, edi;mov byte [ebx], dl;lea edx, [ecx + 1];mov ebx, ecx": 7,
                "mov edx, edi;mov byte [ebx], dl;lea edx, [ecx + 1];mov ebx, ecx;mov edi, 0": 7,
                "push ebx;sub esp, ;push 8;push 1;call fcn.08050732": 8,
                "mov eax, dword [edx + 4];and eax, ;mov dword [ecx], eax;mov eax, dword [edx];pop ebp": 1,
                "xor byte [eax], bl;mov eax, edx;add eax, dword [ecx];mov ebx, edi;xor byte [eax], bl": 2,
                "add eax, dword [ecx];mov ebx, edi;xor byte [eax], bl;mov eax, edx;add eax, dword [ecx]": 2,
                "xor byte [eax], bl;mov eax, edx;add eax, dword [ecx];mov ebx, esi;xor byte [eax], bl": 2,
                "pop edi;ret;push edi;sub esp, 8;mov edi, dword [esp + ]": 64,
                "mov dword [esp], ebx;call fcn.0804f62b;add esp, ;add esp, ;pop ebx": 10,
                "sub esp, ;push ;push dword [esp + ];call fcn.0804f73c;add esp, ": 11,
                "sub esp, ;push ebx;call fcn.08050d83;add esp, ;sub esp, ": 8,
                "call fcn.08050d83;add esp, ;sub esp, ;push edi;call fcn.0804f62b": 8,
                "push eax;lea eax, [ebx + ];push 0;push eax;call fcn.080514e7": 8,
                "lea eax, [esp + ];push eax;call fcn.080514ea;mov dword [esp], ebx;call fcn.080514e7": 8,
                "mov dword [esp], ebx;call fcn.080514e7;add esp, ;mov eax, dword [esi + 8];cmp eax, dword [esi + 4]": 8,
                "movzx edx, word [ebx + 8];add eax, edx;mov dword [esi + 4], eax;mov eax, dword [ebx + 4];mov dword [esi + ], eax": 7,
                "push eax;push 1;lea eax, [esp + ];push eax;call fcn.080514ea": 10,
                "add esp, ;imul eax, eax, ;and eax, ;ret;push edi": 8,
                "push ebx;mov ebx, edi;mov eax, 6;int ;pop ebx": 6,
                "mov eax, ebx;add esp, ;pop ebx;pop edi;ret": 14,
                "mov ecx, dword [esp + ];mov edx, dword [esp + ];mov esi, dword [esp + ];mov edi, dword [esp + ];mov eax, dword [esp + ]": 31,
                "mov eax, dword [esp + ];push ebx;mov ebx, eax;mov eax, ;int ": 31,
                "movzx eax, al;ret;push ebx;mov eax, 1;mov ecx, dword [esp + ]": 15,
                "pop ebx;ret;mov edx, eax;push ebx;shr edx, 8": 14,
                "and ebx, 3;lea eax, [ebx + eax*4 + ];pop ebx;ret;push ebp": 14,
                "call fcn.08050bdb;add esp, ;jmp ;mov edi, dword [ebp + 4];mov edx, dword [ebp + ]": 10,
                "cmp edi, dword [esp + ];je ;cmp edi, ;ja ;mov esi, edi": 9,
                "mov dword [esp + ], ecx;mov ebx, dword [esp + ];push ebx;sub esp, 8;mov edx, dword [esp + ]": 1,
                "ret;push edi;push esi;sub esp, 4;mov edi, dword [esp + ]": 5,
                "sub esp, 4;mov edi, dword [esp + ];mov ecx, dword [esp + ];mov edx, dword [esp + ];mov esi, dword [esp + ]": 6,
                "push eax;push eax;push dword [esp + ];push ecx;call fcn.08051d2d": 7,
                "mov esi, eax;test eax, eax;jle ;lea edi, [ebx + eax];jmp ": 8,
                "mov dword [ebx + 4], eax;mov eax, dword [ebx + ];mov word [ebx + 8], ax;mov al, byte [ebx + ];mov byte [ebx + ], al": 8,
                "mov word [ebx + 8], ax;mov al, byte [ebx + ];mov byte [ebx + ], al;push eax;movzx eax, word [ebx + 8]": 8,
                "push eax;lea eax, [ebx + ];push eax;lea eax, [ebx + ];push eax": 8,
                "push eax;push ebx;push ebx;call fcn.0804fb8d;movzx eax, word [ebx + 8]": 8,
                "jbe ;call fcn.0804fb63;neg dword [ebp - ];mov edx, dword [ebp - ];mov dword [eax], edx": 9,
                "neg dword [ebp - ];mov edx, dword [ebp - ];mov dword [eax], edx;jmp ;cmp dword [ebp - ], ": 9,
                "mov esi, dword [ebp + ];mov ebx, dword [ebp - ];mov dword [ebp - ], ;mov dword [ebp - ], ;jmp ": 8,
                "mov al, byte [ebx + ];mov byte [esi + ], al;push eax;movzx eax, word [ebx + ];sub eax, ": 8,
                "lea eax, [esi + ];push eax;call fcn.08051daa;movzx eax, word [ebx + ];mov esi, dword [ebp - ]": 8,
                "lea eax, [esp + ];push eax;push 7;call fcn.08051b57;sub esp, ": 1,
                "call fcn.0804ff98;mov esi, eax;lea eax, [eax*8 + ];sub esp, ;mov eax, dword [esp + ]": 1,
                "or eax, ;jmp ;mov esi, 8;push ebx;mov ebx, edi": 12,
                "mov esi, 8;push ebx;mov ebx, edi;mov eax, ;int ": 12,
                "add esp, ;sub esp, ;mov eax, dword [esp + ];mov dword [esp + ], eax;mov eax, dword [esp + ]": 2,
                "cmp eax, 1;push ebx;sub esp, 8;mov eax, 2;int ": 1,
                "push ebx;sub esp, ;mov esi, eax;mov edi, edx;push 8": 3,
                "push dword [];call fcn.08050826;mov dword [], eax;mov dl, byte [];mov ecx, 0": 3,
                "movzx esi, byte [ebp + ];push 4;mov eax, 0;mov al, byte [ebp - ];push eax": 2,
                "push ;push 4;push edi;push esi;call fcn.0804a059": 2,
                "push ;push 7;push edi;push esi;call fcn.0804a059": 2,
                "add esp, ;push 1;push 1;push edi;push esi": 2,
                "call fcn.08049fc3;add esp, ;test eax, eax;je ;sub esp, ": 2,
                "push dword [esp + ];call fcn.08051044;add esp, ;ret;sub esp, ": 3,
                "push dword [esp + ];push dword [esp + ];push dword [esp + ];call fcn.0805105e;add esp, ": 4,
                "jne ;mov ebp, 1;jmp ;xor ebp, ebp;inc ebx": 5,
                "xor edx, edx;cmp eax, ;ja ;or eax, ;xor edx, edx": 4,
                "ja ;or eax, ;xor edx, edx;div esi;mov byte [esp + ], dl": 4,
                "or eax, ;xor edx, edx;div esi;mov byte [esp + ], dl;xor edx, edx": 4,
                "or eax, ;mov cl, ;cmp al, ;jbe ;lea ecx, [eax - ]": 4,
                "cmp al, ;jbe ;lea ecx, [eax - ];movzx eax, cl;cmp eax, esi": 4,
                "jmp ;cmp dword [esp + ], 0;je ;mov eax, dword [esp + ];mov dword [eax], edi": 4,
                "cmp edx, ebx;jbe ;call fcn.0804fb63;mov edx, ebx;mov dword [eax], ": 4,
                "jbe ;call fcn.0804fb63;mov edx, ebx;mov dword [eax], ;mov eax, ebp": 4,
                "mov eax, ebp;test al, al;je ;neg edx;add esp, ": 4,
                "sub esp, ;push esi;call eax;add esp, ;push eax": 5,
                "push ;call fcn.08051727;add esp, ;test eax, eax;jns ": 5,
                "mov ebx, eax;mov esi, dword [eax];push ebp;push 0;lea eax, [esp + ]": 5,
                "lea ebp, [esp + ];lea ebx, [esp + ];jne ;push edi;push edi": 5,
                "push 0;push ebp;push 2;call fcn.0804f897;pop edx": 4,
                "ret;sub esp, ;sub esp, ;push ;push 0": 1,
                "cmp dword [esp + ], ;jbe ;mov eax, dword [esp + ];lea edx, [eax*8 + ];mov eax, dword [edx + ]": 5,
                "cmp dword [esp + ], ;jbe ;mov eax, dword [esp + ];lea edx, [eax*8 + ];push edi": 1,
                "or dword [edx*4 + ], eax;mov dword [ebp + ], ebx;mov esi, dword [esp + ];mov dword [ebp + 8], esi;push ebp": 1,
                "call fcn.0804f62b;add esp, ;sub esp, 4;push 0;push 2": 6,
                "mov esi, eax;add esp, ;cmp eax, ;jne ;sub esp, ": 6,
                "push esi;push 4;call fcn.0804f567;mov eax, 0;mov ecx, ": 5,
                "push 0;push 0;lea ecx, [ebp - ];push ecx;lea eax, [esi + 1]": 5,
                "mov eax, dword [esi + ];mov dword [ebx + ], eax;mov eax, dword [esi + ];mov dword [ebx + ], eax;mov eax, dword [esi + ]": 40,
                "mov dword [eax], esi;mov eax, 1;jmp ;xor eax, eax;pop edx": 8,
                "mov eax, 1;jmp ;xor eax, eax;pop edx;pop ebx": 8,
                "pop edi;pop ebp;ret;mov edx, dword [eax + ];mov dword [], edx": 8,
                "xor dword [], ecx;jb ;inc ecx;outsb dx, byte gs:[si];je ": 7,
                "jb ;inc ecx;outsb dx, byte gs:[si];je ;and byte [eax], al": 7,
                "cmp esp, dword [eax];add byte [], cl;or eax, ;cmp eax, dword [eax];push edi": 1,
                "je ;mov eax, dword [ebx + ];mov dword [esi + ], eax;jmp ;sub eax, ": 1,
                "ror ax, 8;mov word [edi + 2], ax;mov cx, word [ebp - ];mov word [edi + 4], cx;mov ebx, dword [ebp - ]": 1,
                "call fcn.0804f70a;add esp, ;leave;ret;push ebp": 4,
                "call fcn.0804fbb4;lea eax, [ebp - ];add esp, ;push ;push 0": 10,
                "push eax;call fcn.0804fbb4;add esp, ;lea esi, [ebp - ];push esi": 5,
                "and ebx, ;push ebx;call fcn.0804f20e;mov dword [esp], esi;call fcn.0804f0f1": 5,
                "call fcn.0804f20e;mov dword [esp], esi;call fcn.0804f0f1;add esp, ;cmp eax, 2": 5,
                "mov byte [ebp - ], al;mov byte [ebp - ], 0;mov byte [ebp - ], ;mov byte [ebp - ], ;sub esp, ": 5,
                "call fcn.0804ec92;mov dword [esp], 9;call fcn.0804ec92;mov eax, 0;add esp, ": 5,
                "je ;cmp dl, ;jne ;test dl, dl;je ": 5,
                "jne ;test dl, dl;je ;lea ecx, [eax + 2];mov dl, byte [ebp + ecx - ]": 5,
                "test dl, dl;je ;lea eax, [ebp + eax - ];cmp dl, ;jne ": 5,
                "jne ;mov esi, ecx;jmp ;mov dl, byte [eax + 3];inc eax": 5,
                "inc eax;cmp edi, 6;jg ;inc ecx;mov ebx, eax": 4,
                "cmp eax, ;jg ;sub esp, 8;push ebx;lea eax, [ebp - ]": 3,
                "call fcn.0804f49b;add esp, ;test eax, eax;je ;mov dl, byte [ebp - ]": 3,
                "test eax, eax;je ;mov dl, byte [ebp - ];test dl, dl;je ": 3,
                "sub esp, ;push dword [ebp - ];call fcn.0804f62b;lea eax, [ebp - ];mov dword [esp], eax": 3,
                "add esp, ;test eax, eax;je ;sub esp, 8;push 0": 3,
                "mov dword [esp], esi;push ebp;mov ebp, esp;sub esp, 8;mov eax, dword []": 1,
                "mov byte [], 0;mov word [ebp - ], 2;mov dword [ebp - ], 0;mov word [ebp - ], ;sub esp, 4": 2,
                "call fcn.0804fc44;mov dword [esp], 5;call fcn.080511da;add esp, 4;push dword []": 2,
                "jmp ;sub esp, 8;push 1;push dword [];call fcn.0804fcd5": 2,
                "pop esi;pop ebp;ret;lea ecx, [esp + 4];and esp, ": 2,
                "push 0;call fcn.0804f897;add esp, 8;push 1;push ": 2,
                "push ;push 5;call fcn.0804fea5;add esp, 8;push 2": 2,
                "push str._dev_watchdog;call fcn.0804f73c;mov ebx, eax;add esp, ;cmp eax, ": 2,
                "push eax;push ;push ebx;call fcn.0804f6cb;mov dword [esp], ebx": 2,
                "add esp, ;sub esp, ;push ;call fcn.0804f5fd;call fcn.0804f4eb": 2,
                "rep movsd dword es:[edi], dword ptr [esi];mov edx, 0;mov eax, 1;add esp, ;lea ecx, [ebp - ]": 2,
                "add esi, 2;add esp, ;cmp esi, ;jne ;mov edx, edi": 2,
                "push dword [ebp - ];call fcn.0804f160;mov bl, al;add esp, 8;push ": 2,
                "lea eax, [ebp - ];push ebp;mov ebp, esp;push ebx;sub esp, 4": 1,
                "mov ax, word [ebp - ];test ax, ax;je ;ror ax, 8;mov word [ebp - ], ax": 3,
                "test ax, ax;je ;ror ax, 8;mov word [ebp - ], ax;jmp ": 3,
                "mov ebx, edx;push 1;push eax;call fcn.0804f567;add esp, ": 6,
                "push eax;call fcn.0804f567;add esp, ;inc eax;jne ": 6,
                "jne ;push eax;push eax;push ebx;push ": 6,
                "call fcn.0804f73c;add esp, ;cmp eax, esi;je ;call fcn.08050f1f": 5,
                "push edx;push 8;push ebx;lea eax, [esp + eax*8 + ];push eax": 7,
                "jne ;lea eax, [esp + ];call fcn.08051e65;call fcn.0805151f;mov eax, dword [esp + ]": 7,
                "cmp ebx, esi;jb ;test ebp, ebp;je ;call ebp": 7,
                "call 0;mov dword [eax], 0;push eax;push dword [];push edi": 6,
                "test ebx, ebx;je ;mov eax, dword [ebx];mov dword [esp + ], eax;lea eax, [ebx + 4]": 7,
                "push ;push eax;lea eax, [esp + ];push eax;call fcn.08051daa": 7,
                "add esp, ;mov ebx, eax;test esi, esi;je ;test eax, eax": 7,
                "add esp, ;mov dword [esi + ], eax;mov eax, ebx;add esp, ;pop ebx": 6,
                "cmp esi, ;lea ecx, [eax + 8];jbe ;mov ebx, dword [esp + ];lea edx, [eax + ebx]": 3,
                "mov eax, ecx;cmp eax, edx;jne ;mov ecx, dword [esp + ];mov esi, 1": 3,
                "test edx, edx;je ;mov eax, edi;mov esi, 1;shl eax, 8": 3,
                "mov eax, edi;mov esi, 1;shl eax, 8;lea ebx, [eax + ];jmp ": 3,
                "test edx, esi;je ;mov ecx, dword [ebx + ];cmp ecx, ebx;jne ": 3,
                "mov eax, esi;lea ebx, [ecx + 8];not eax;and edx, eax;add esi, esi": 3,
                "add esi, esi;mov dword [edi*4 + ], edx;jmp ;mov edx, eax;push ebx": 1,
                "pop edx;pop ecx;pop ebx;ret;push esi": 9,
                "push ebx;sub esp, 4;cmp dword [], 0;mov esi, dword [esp + ];jne ": 10,
                "jne ;mov ebx, eax;jmp ;sub esp, ;mov ebx, eax": 10,
                "push eax;call fcn.08051e77;add esp, ;test eax, eax;jns ": 10,
                "or ebx, ;mov eax, ebx;pop edx;pop ebx;pop esi": 10,
                "mov dword [eax], ;mov eax, ecx;pop edx;sub esp, ;mov eax, dword [esp + ]": 1,
                "jmp loc.08051477;mov eax, ;jmp loc.080514a4;mov eax, ;jmp loc.080514a4": 6,
                "jmp ;mov eax, ;jmp loc.080514a4;mov eax, ;jmp loc.080514a4": 3,
                "push eax;push 0;push 1;call fcn.080518b0;add esp, ": 3,
                "cmp ebx, ;jne ;mov eax, dword [];test eax, eax;je ": 3,
                "je ;call eax;mov ecx, dword [];test ecx, ecx;je ": 3,
                "jmp ecx;pop eax;pop edx;pop ebx;ret": 3,
                "pop edx;pop ebx;ret;xor eax, eax;ret": 3,
                "ret;push ebp;mov ebp, esp;push ebx;push ebx": 1,
                "pop edx;pop ecx;pop ebx;ret;mov eax, dword []": 7,
                "push eax;dec edi;push ebx;push esp;add byte [edi], ah": 6,
                "arpl word [eax + ], bp;outsd dx, dword [esi];add byte [bx + si], al;add byte [eax], al;add dword [eax], eax": 5,
                "jo ;jb ;je ;jbe ;xor byte [ecx], dh": 3,
                "inc ebx;dec esp;inc ebp;inc edi;dec edi": 6,
                "dec ebx;push ecx;push esi;inc edi;dec esp": 3,
                "mov edi, dword [esp + ];mov ebx, ecx;lea esi, [esp + 8];sar ebx, ;mov eax, dword [esp + ]": 7,
                "mov dword [ebx + ], eax;push ebx;sub esp, 8;mov eax, ;int ": 1,
                "or ebx, ;mov eax, ebx;push esi;push ebx;sub esp, 8": 1,
                "push eax;call fcn.0804f1cb;add esp, ;cmp byte [edi + ], ;ja ": 1,
                "mov dword [ebp - ], eax;mov dword [ebp - ], edx;mov edx, dword [ebp - ];push ebp;mov ebp, esp": 1,
                "mov dword [ebp - ], edx;mov edx, dword [ebp - ];push ebp;mov ebp, esp;push ebx": 1,
                "dec ebx;dec edi;inc edi;and al, byte [eax];or eax, ": 1,
                "push ecx;sbb byte [edi], al;push ecx;push ebp;mov ebp, esp": 1,
                "mov ebx, dword [ebp + ];mov al, byte [ebp + ];mov byte [ebp - 9], al;mov al, byte [ebp + 8];and eax, ": 1,
                "cmp ecx, esi;jne ;mov eax, dword [ebp + ];add esp, 4;pop ebx": 1,
                "push 8;mov ebx, 0;mov bl, byte [ebp - ];push ebp;mov ebp, esp": 1,
                "jl ;jmp ;mov edx, dword [ebp + 8];mov al, byte [edx];cmp al, byte [edi]": 2,
                "jne ;mov eax, 1;jmp ;mov eax, 0;lea esp, [ebp - ]": 5,
                "mov esi, dword [ebp + ];push edi;call fcn.0804f0f1;mov ebx, eax;push esi": 3,
                "call fcn.0804f0f1;mov ebx, eax;push esi;call fcn.0804f0f1;add esp, 8": 3,
                "je ;mov ebx, dword [ebp + 8];mov ecx, dword [ebp + ];mov edx, 0;mov al, byte [edx + ecx]": 4,
                "mov al, byte [edx + ecx];mov byte [edx + ebx], al;inc edx;cmp edx, esi;jne ": 4,
                "mov ecx, 8;mov edx, str.AJWLIGF_;mov eax, ;push edi;push esi": 1,
                "mov eax, dword [eax - 4];test al, 2;jne ;and eax, ;lea edx, [eax - 4]": 1,
                "mov dword [esp + 4], eax;mov edi, dword [esp + ];sub edi, 8;mov edx, dword [edi + 4];mov eax, edx": 2,
                "mov edx, dword [edi + 4];mov eax, edx;and eax, ;mov dword [esp + 8], eax;test dl, 2": 2,
                "mov ecx, dword [esp + 4];mov ebx, eax;cmp eax, ecx;jae ;lea esi, [edi + eax]": 2,
                "lea esi, [edi + eax];cmp esi, dword [];jne ;mov eax, dword [esi + 4];mov ecx, ebx": 2,
                "mov eax, dword [esi + 4];mov ecx, ebx;and eax, ;add ecx, eax;mov eax, dword [esp + 4]": 2,
                "cmp ecx, eax;jb ;and edx, 1;or edx, dword [esp + 4];mov dword [edi + 4], edx": 2,
                "and edx, 1;or edx, dword [esp + 4];mov dword [edi + 4], edx;mov esi, dword [esp + 4];sub ecx, esi": 2,
                "jmp ;sub esp, ;mov eax, dword [esp + ];sub eax, 7;push eax": 2,
                "mov dword [edx + 4], eax;mov eax, dword [esi + 8];mov dword [edx + 8], eax;jbe ;mov eax, dword [esi + ]": 2,
                "mov dword [edx + ], eax;mov eax, dword [esi + ];mov dword [edx + ], eax;sub esp, ;add ebx, 8": 2,
                "jle ;cmp ebx, ;push edi;push ebx;sub esp, ": 1,
                "mov eax, dword [ebp - ];add esp, ;push ebp;mov ebp, esp;push edi": 1,
                "add esp, ;push ebp;mov ebp, esp;push edi;push esi": 1,
                "sub eax, dword [ebp + 8];jmp ;mov edi, 0;push ebp;push edi": 1,
                "ret;sub esp, ;mov eax, dword [esp + ];cmp eax, ;ja ": 2,
                "push ebx;push ;push ebp;push edi;push esi": 1,
                "insd dword es:[edi], dx;outsb dx, byte [esi];push esi;push ebx;sub esp, ": 1,
                "call dword [ebx*4 + ];dec ebx;cmp ebx, ;jne ;push ebp": 1,
                "push dword [ebp - ];push dword [ebp - ];mov eax, 0;mov al, byte [ebp - ];push eax": 3,
                "lea ecx, [edi - 8];mov eax, dword [];add esp, ;mov edx, dword [ecx + 4];mov ebx, edx": 3,
                "or eax, 3;mov dword [], eax;lea edx, [ebx*4 + ];mov eax, dword [edx - 4];mov dword [ecx + 8], eax": 3,
                "sub eax, ebp;mov edi, dword [eax + 8];mov edx, dword [eax + ];mov ecx, dword [edi + ];cmp ecx, eax": 3,
                "mov dword [eax + 8], edx;add ebx, ebp;mov eax, dword [];mov dword [ecx + ], ;mov dword [ecx + 8], eax": 2,
                "mov eax, dword [eax + 4];and eax, ;cmp eax, dword [];jb ;mov edx, ": 2,
                "cmp byte [], 3;jne ;sub esp, ;mov byte [], 4;push ": 2,
                "call fcn.08050d83;add esp, ;lea ebx, [edi + 8];jmp ;mov ecx, dword [esp + ]": 1,
                "jbe ;mov dword [], eax;lea ebx, [edx + 8];jmp ;mov eax, dword [esp]": 1,
                "je ;push ecx;mov eax, dword [esp + ];sub eax, 8;push eax": 1,
                "mov edx, dword [ebp + 8];mov ecx, dword [ebp + ];mov ebx, 0;cmp ecx, 1;jbe ": 1,
                "and eax, ;add ebx, eax;add edx, 2;sub ecx, 2;cmp ecx, 1": 3,
                "mov eax, ebx;shr eax, ;movzx edx, bx;add eax, edx;mov edx, eax": 1,
                "shr eax, ;movzx edx, bx;add eax, edx;mov edx, eax;shr edx, ": 1,
                "push esi;push ebx;sub esp, 8;mov esi, dword [ebp + 8];mov ecx, dword [ebp + ]": 2,
                "jle ;mov ebx, 0;mov ax, word [edx];and eax, ;add ebx, eax": 2,
                "not eax;and eax, ;add esp, 8;pop ebx;pop esi": 2,
                "inc ebx;dec edx;cmp edx, ;jne ;mov eax, 0": 3,
                "pop ebp;ret;push ebp;mov ebp, esp;sub esp, ": 3,
                "call fcn.0804ec00;mov ebx, eax;mov dword [esp], esi;call fcn.0804f0f1;add esp, 8": 1,
                "mov dword [esp], esi;call fcn.0804f0f1;add esp, 8;push ebx;lea eax, [esi + eax]": 1,
                "push eax;call fcn.0804f1f1;add esp, 8;push ;lea eax, [ebp - ]": 1,
                "sub esp, 8;push edi;push esi;sub esp, 4;mov ecx, dword [esp + ]": 1,
                "push edi;push esi;push ebx;sub esp, ;push 0": 1,
                "push ;call fcn.0804cd82;mov word [ebp - ], ;add esp, ;push 0": 1,
                "call fcn.0804ffbe;mov dword [], eax;mov byte [eax], 0;mov dword [], 0;mov dword [esp], 6": 1,
                "call fcn.0804f1cb;lea ebx, [esi + eax];call fcn.0804f67f;add esp, ;lea edx, [ebp - ]": 1,
                "lea eax, [ebx + ecx];sub eax, edx;push eax;push edx;call fcn.0804f1f1": 1,
                "mov esi, ;mov dword [ebp - ], 0;add esp, ;sub esp, ;push 6": 1,
                "lea edi, [edx + ];sub esp, ;push edi;call fcn.08051030;add esp, ": 1,
                "add esp, ;cmp eax, ;jle ;mov esi, ;jmp ": 1,
                "lea eax, [eax + eax*4];add eax, eax;cmp dword [ebp - ], eax;jne ;sub esp, ": 1,
                "add esp, 8;push edi;push esi;call fcn.0804f1cb;mov ebx, eax": 1,
                "push edi;push ebx;call fcn.0804f1cb;mov esi, eax;add esp, 8": 1,
                "push ebx;call fcn.0804f1cb;mov esi, eax;add esp, 8;push 0": 1,
                "add esp, ;push ;lea esi, [ebp - ];push esi;push dword [ebp - ]": 1,
                "sub esp, ;push ;call fcn.0804eca7;add esp, 8;push 0": 1,
                "add esp, 8;push 0;push ;push ebp;mov ebp, esp": 1,
                "je ;mov esi, 1;mov eax, 0;mov al, byte [ebp - ];lea ebx, [eax + 1]": 2,
                "mov eax, 0;mov al, byte [ebp - ];lea ebx, [eax + 1];mov edx, dword [ebp - ];mov eax, dword [edx + esi*8 - 8]": 2,
                "jne ;mov al, byte [edi + ];mov byte [ebp - ], al;mov al, byte [edx + 1];mov byte [ebp - ], al": 2,
                "mov al, byte [edx + 1];mov byte [ebp - ], al;mov al, byte [edx + 2];mov byte [ebp - ], al;mov al, byte [edx + 3]": 2,
                "mov dword [ecx], eax;add ecx, ;mov eax, dword [esp + ];mov edx, dword [esp + ];add eax, 4": 2,
                "je ;mov eax, dword [ebx + ebp + 4];mov dword [ebx + 4], ebp;and eax, 1;test eax, eax": 2,
                "mov edx, dword [ebx + 8];mov eax, dword [ebx + ];mov esi, dword [edx + ];cmp esi, ebx;jne ": 2,
                "or eax, 1;mov dword [edx + ], ecx;mov dword [ecx + 4], eax;mov eax, dword [esp + ];mov dword [ecx + 8], edx": 2,
                "jmp ;lea eax, [edi + ebp];or eax, 1;mov dword [ecx + 4], eax;mov edx, dword [esp + ]": 2,
                "lea eax, [edi + ebp];or eax, 1;mov dword [ecx + 4], eax;mov edx, dword [esp + ];mov dword [edx + ], ecx": 2,
                "mov dword [edx + ], ecx;mov ecx, dword [esp + ];test ecx, ecx;jne ;mov ecx, dword [esp + ]": 2,
                "mov eax, dword [esp + ];or dword [eax + ], 1;mov dword [eax + ], 0;mov dword [eax + ], ;mov dword [eax + ], ": 2,
                "add al, 8;add ebp, ebp;add al, 8;push ebp;push edi": 1,
                "je ;mov ecx, edi;sub ecx, eax;je ;mov eax, dword [ebp + ]": 1,
                "add esp, ;sub esp, ;cmp byte [], 0;jne ;mov eax, 0": 1,
                "mov dword [eax], esi;or esi, ;mov eax, esi;pop edx;push ebp": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "xAPPSh": 1,
                "\\$Th<0": 1,
                "\\$0PPj": 1,
                "t$$hl0": 1,
                "u%WWSS": 1,
                "POST /cdn-cgi/": 1,
                "HTTP/1.1": 1,
                "User-Agent:": 1,
                "Cookie:": 1,
                "/proc/net/tcp": 1,
                "/dev/watchdog": 1,
                "/dev/misc/watchdog": 1,
                "abcdefghijklmnopqrstuvw012345678": 1,
                "AJCLEGOG": 2,
                "PGRMPV": 1,
                "NKQVGLKLE": 1,
                "uEzAs\"": 1,
                "FGNGVGF": 1,
                "CLKOG\"": 1,
                "QVCVWQ\"": 1,
                "pgrmpv": 1,
                "jvvrdnmmf\"": 1,
                "nmnlmevdm\"": 1,
                "XMNNCPF\"": 1,
                "egvnmacnkr\"": 1,
                "QJGNN\"": 1,
                "GLC@NG\"": 1,
                "Q[QVGO\"": 1,
                "@WQ[@MZ": 3,
                "okpck\"": 1,
                "CRRNGV": 1,
                "DMWLF\"": 1,
                "LAMPPGAV\"": 1,
                "vqMWPAG": 1,
                "gLEKLG": 1,
                "sWGP[\"": 1,
                "PGQMNT": 1,
                "LCOGQGPTGP": 1,
                "aMLLGAVKML": 1,
                "CNKTG\"": 1,
                "QGVaMMIKG": 1,
                "PGDPGQJ": 1,
                "NMACVKML": 1,
                "AMMIKG": 1,
                "AMLVGLV": 1,
                "NGLEVJ": 1,
                "VPCLQDGP": 1,
                "GLAMFKLE": 1,
                "AJWLIGF\"": 1,
                "AMLLGAVKML": 1,
                "QGPTGP": 2,
                "FMQCPPGQV\"": 1,
                "ANMWFDNCPG": 1,
                "LEKLZ\"": 1,
                "cAAGRV": 2,
                "CRRNKACVKML": 3,
                "nCLEWCEG": 1,
                "aMLVGLV": 1,
                "WPNGLAMFGF\"": 1,
                "oMXKNNC": 5,
                "uKLFMUQ": 4,
                "cRRNGuG@iKV": 5,
                "aJPMOG": 4,
                "qCDCPK": 5,
                "oCAKLVMQJ": 1,
                "tGPQKML": 1,
                "/dev/null": 1,
                ".shstrtab": 1,
                ".rodata": 1,
                ".ctors": 1,
                ".dtors": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=----- name=": 1,
                "perm=--r-x name=.init": 1,
                "perm=--r-x name=.text": 1,
                "perm=--r-x name=.fini": 1,
                "perm=--r-- name=.rodata": 1,
                "perm=--rw- name=.ctors": 1,
                "perm=--rw- name=.dtors": 1,
                "perm=--rw- name=.data": 1,
                "perm=--rw- name=.bss": 1,
                "perm=----- name=.shstrtab": 1,
                "perm=m-r-x name=LOAD0": 1,
                "perm=m-rw- name=LOAD1": 1,
                "perm=m-rw- name=GNU_STACK": 1,
                "perm=m-rw- name=ehdr": 1,
                "type=program": 1,
                "arch     x86": 1,
                "binsz    45196": 1,
                "bintype  elf": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    ELF32": 1,
                "crypto   false": 1,
                "endian   little": 1,
                "havecode true": 1,
                "lang     c": 1,
                "linenum  false": 1,
                "lsyms    false": 1,
                "machine  Intel 80386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       true": 1,
                "os       linux": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   false": 1,
                "rpath    NONE": 1,
                "static   true": 1,
                "stripped true": 1,
                "subsys   linux": 1,
                "va       true": 1,
                "0x00000000  ELF MAGIC   0x464c457f": 1,
                "0x00000004  Type        0x0101": 1,
                "0x00000006  Machine     0x0001": 1,
                "0x00000008  Version     0x00000000": 1,
                "0x0000000c  Entrypoint  0x00000000": 1,
                "0x00000010  PhOff       0x00030002": 1,
                "0x00000014  ShOff       0x00000001": 1,
                "45196": 1
            }
        }
    ]
}