{
    "filepath": "/corpus/benign/f0ce6c098266323fd373d7d22fcfaafe42cc48f9",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "5529ac83cf83e52d53d2b001eda3523d"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "pushfl;pushl $;calll  <WRITE_REGISTER_BUFFER_ULONG+>;retl $;lock": 1,
                "movl %ecx, %ebp;movl (%ebp), %edx;movl (%ebp), %eax;orl %eax, %eax;je  <InterlockedPopEntrySList+>": 1,
                "movl (%eax), %ebx;lock;cmpxchgb (%ebp);jne - <InterlockedPopEntrySList+>;popl %ebp": 1,
                "movl (%ebp), %edx;movl (%ebp), %eax;orl %eax, %eax;je  <ExInterlockedFlushSList+>;movl %edx, %ecx": 1,
                "movl (%esp), %edx;movb (%esp), %al;movb %al, (%edx);lock;orl %edx, (%esp)": 1,
                "orl %edx, (%esp);retl $;movl (%esp), %edx;movl (%esp), %eax;movw %ax, (%edx)": 1,
                "movl %esp, %ecx;jmp  <KeSynchronizeExecution+>;subl $, %esp;movl %ebx, (%esp);movl %esi, (%esp)": 1,
                "movl %esp, %eax;movl %edx, %esp;pushl %eax;calll  <KeInsertQueueDpc+>;popl %esp": 1,
                "retl;movl (%esp), %eax;movl (%esp), %ecx;pushfl;cli": 1,
                "pushfl;cli;subl $, %eax;addl $, %eax;movl %cr, %edx": 1,
                "movl %ecx, %cr;orl $, %eax;movl %eax, %cr;movl $, %eax;jmpl *%eax": 1,
                "pushl $;jmp  <WRITE_REGISTER_BUFFER_ULONG+>;subl $, %esp;movl %ebp, (%esp);movl %ebx, (%esp)": 1,
                "movl %eax, (%esp);movl %ecx, (%esp);movl %edx, (%esp);movl $, %eax;movl %fs, %ecx": 2,
                "movl %fs, %ecx;movl %eax, (%esp);movl %eax, (%esp);movl %ecx, (%esp);movl $, (%esp)": 2,
                "movl %eax, (%esp);movl %ecx, (%esp);movl $, (%esp);movw $, %ax;movl %eax, %ds": 2,
                "movl (%ecx), %esp;subl $, %esp;movl %ebp, (%esp);movl %ebx, (%esp);movl %esi, (%esp)": 1,
                "movl (%ecx), %eax;movl -(%esp), %edx;popfl;jmpl *%edx;leal (%ecx), %esp": 1,
                "subl %ecx, %eax;addl %edi, %eax;movl %eax, (%edx);subl %esp, %ecx;subl %ecx, %edi": 1,
                "movl %fs:, %edx;testl $, (%esi);leal -(%ecx), %ecx;jne  <WRITE_REGISTER_BUFFER_ULONG+>;subl $, %ecx": 1,
                "jne  <WRITE_REGISTER_BUFFER_ULONG+>;subl $, %ecx;movl %ecx, (%edx);movl %edi, %esp;sti": 1,
                "popl %edi;popl %esi;retl $;movl %fs:, %eax;movl (%eax), %ecx": 1,
                "movl %dr, %eax;pushl %eax;movl %dr, %eax;pushl %eax;movl %dr, %eax": 3,
                "nop;nop;pushl %ebp;movl %esp, %ebp;subl $, %esp": 70,
                "subl $, %esp;movl $, (%esp);movl $, (%esp);calll  <MmSizeOfMdl>;subl $, %esp": 1,
                "movl %eax, (%esp);calll  <memmove>;addl %ebx, (%ebp);subl %ebx, (%ebp);movl -(%ebp), %edx": 1,
                "movl %eax, (%esp);calll  <CcUnpinRepinnedBcb+>;subl $, %esp;testl %ebx, %ebx;jne - <CcSetReadAheadGranularity+>": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);calll  <KeInitializeEvent>;subl $, %esp;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx": 12,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx": 2,
                "subl $, %esp;movl %eax, %ebx;cmpl $, %eax;jne  <CcSetReadAheadGranularity+>;movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <KeWaitForSingleObject>": 36,
                "jne - <CcSetReadAheadGranularity+>;jmp  <CcSetReadAheadGranularity+>;movl -(%ebp), %edx;movl (%edx), %esi;movl (%ebp), %ebx": 1,
                "testl %esi, %esi;je  <CcSetReadAheadGranularity+>;movl %esi, -(%ebp);jmp - <CcSetReadAheadGranularity+>;movl $, %ebx": 1,
                "jmp - <CcSetReadAheadGranularity+>;movl -(%ebp), %eax;movl $, (%eax);movw $, (%eax);movl $, (%eax)": 1,
                "popl %ebx;popl %esi;popl %edi;popl %ebp;retl $": 1093,
                "subl $, %esp;movl (%ebp), %edi;movl (%edi), %edx;movl %edx, -(%ebp);movl $, -(%ebp)": 1,
                "movl %eax, (%esp);calll  <MmBuildMdlForNonPagedPool>;subl $, %esp;orw $, (%ebx);movl $, (%esp)": 2,
                "movl %esi, (%esp);calll  <KeInitializeEvent>;subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp)": 4,
                "cmpl $, %esi;je  <CcSetReadAheadGranularity+>;movl %esi, %eax;shrl $, %eax;testb %al, %al": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll  <IoAllocateMdl>": 1,
                "movl %edi, (%esp);calll  <KeInitializeEvent>;subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp)": 5,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 2,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl %eax, %esi;cmpb $, (%ebp);jne  <CcCopyRead+>": 1,
                "movl %eax, -(%ebp);movl %eax, %esi;cmpb $, (%ebp);jne  <CcCopyRead+>;movl -(%ebp), %eax": 1,
                "addl $, %eax;movl %eax, -(%ebp);movl %eax, %ecx;calll *-;movb %al, -(%ebp)": 4,
                "movl %edx, -(%ebp);cmpl %edx, %eax;je  <CcCopyRead+>;leal (%edi,%esi), %edx;movl %edi, -(%ebp)": 1,
                "movl %edx, %edi;leal -(%eax), %edx;cmpb $, (%edx);jne  <CcCopyRead+>;movl (%edx), %ecx": 1,
                "jae  <CcCopyRead+>;movl -(%ebp), %edi;movl -(%ebp), %eax;addl %edi, %eax;cmpl %eax, %ecx": 1,
                "movzbl -(%ebp), %edx;movl -(%ebp), %ecx;calll *-;movl (%ebp), %eax;movl $, (%eax)": 1,
                "jmp  <CcCopyRead+>;movl -(%ebp), %edi;movzbl -(%ebp), %edx;movl -(%ebp), %ecx;calll *-": 1,
                "andl $, %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll  <CcUnpinRepinnedBcb+>": 1,
                "calll - <CcSetReadAheadGranularity+>;subl $, %esp;testl %eax, %eax;jns  <CcCopyRead+>;movl (%ebp), %edx": 2,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll  <CcUnpinRepinnedBcb+>;subl $, %esp;subl -(%ebp), %edi": 1,
                "je  <CcCopyRead+>;movl %edi, %ebx;cmpl $, %edi;jbe  <CcCopyRead+>;movl $, %ebx": 1,
                "movl $, (%edx);movl %eax, (%edx);movl $, %eax;jmp  <CcCopyRead+>;addl %ebx, -(%ebp)": 1,
                "movl %edx, (%eax);movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 3,
                "movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl %eax, %edi;cmpb $, (%ebp)": 1,
                "movb %al, -(%ebp);movl -(%ebp), %eax;movl (%eax), %edx;movl %eax, -(%ebp);cmpl %eax, %edx": 1,
                "movl %eax, -(%ebp);cmpb $, (%eax);jne  <CcCopyWrite+>;movl (%eax), %ecx;leal (%ecx), %ebx": 1,
                "addl %esi, %eax;cmpl %eax, %ecx;jae  <CcCopyWrite+>;movzbl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "cmpl %esi, (%eax);jae  <CcCopyWrite+>;movl (%edx), %edx;cmpl -(%ebp), %edx;jne - <CcCopyWrite+>": 1,
                "movl %eax, (%esp);calll  <CcUnpinRepinnedBcb+>;subl $, %esp;testl %eax, %eax;js  <CcCopyWrite+>": 2,
                "testl %eax, %eax;js  <CcCopyWrite+>;cmpb $, -(%ebp);jne  <CcCopyWrite+>;movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);addl -(%ebp), %ebx;movl %ebx, (%esp);calll  <memmove>;movl $, (%esp)": 1,
                "calll  <CcUnpinRepinnedBcb+>;subl $, %esp;subl -(%ebp), %esi;movl -(%ebp), %edi;addl -(%ebp), %edi": 1,
                "testl %eax, %eax;js  <CcCopyWrite+>;cmpb $, -(%ebp);jne  <CcCopyWrite+>;cmpl $, %ebx": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;movl (%eax), %eax;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "movswl (%edi), %edx;subl $, %edx;shrl $, %edx;cmpl %eax, %edx;ja - <CcZeroData+>": 1,
                "cmpl %eax, %edx;ja - <CcZeroData+>;movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "subl $, %esp;movl %eax, %esi;cmpl $, %eax;jne  <CcZeroData+>;movl $, (%esp)": 1,
                "jne  <CcZeroData+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl %edi, %edx;jne - <CcZeroData+>;movzbl -(%ebp), %edx;movl -(%ebp), %ecx;calll *-": 1,
                "movl -(%ebp), %ecx;calll *-;jmp  <CcZeroData+>;movl -(%ebp), %edx;movl %edx, %eax": 1,
                "movl -(%ebp), %ecx;addl %eax, %ecx;movl %ecx, (%esp);subl %eax, %edx;movl %edx, (%esp)": 1,
                "je  <CcZeroData+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 1,
                "subl %edi, %eax;movl -(%ebp), %ebx;cmpl %eax, %ebx;jbe  <CcZeroData+>;movl %eax, %ebx": 1,
                "adcl %edx, -(%ebp);subl %ebx, -(%ebp);subl %ebx, -(%ebp);movl (%esi), %esi;testl %esi, %esi": 1,
                "movl (%eax), %ebx;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %eax, (%esp)": 1,
                "testl %ebx, %ebx;jne - <CcZeroData+>;cmpl $, -(%ebp);jne - <CcZeroData+>;nop": 1,
                "jmp  <CcZeroData+>;movl $, %eax;jmp  <CcZeroData+>;movl $, %eax;jmp  <CcZeroData+>": 1,
                "leave;retl $;pushl %ebp;movl %esp, %ebp;pushl %ebx": 82,
                "calll *-;cmpb $, %al;jbe  <CcSetFileSizes+>;movl $, (%esp);movl $, (%esp)": 4,
                "testw %ax, %ax;jle  <CcSetFileSizes+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "leal (%edi), %ecx;movl %ecx, -(%ebp);calll *-;movb %al, -(%ebp);movl (%edi), %esi": 1,
                "cmpl (%ebx), %eax;jb  <CcSetFileSizes+>;movl (%ecx), %eax;testl %eax, %eax;je  <CcSetFileSizes+>": 1,
                "cmpl $, %eax;jne  <CcSetFileSizes+>;cmpb $, (%ecx);je  <CcSetFileSizes+>;movl (%ecx), %edx": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;testl %eax, %eax;je  <CcSetFileSizes+>": 2,
                "cmpl %edx, -;je  <CcSetFileSizes+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testb $, %bl;jne  <CcSetFileSizes+>;leal (%ebx), %edx;subl $, %ebx;movl %edx, %eax": 1,
                "subl $, %esp;cmpw $, (%ebx);js  <CcSetFileSizes+>;movl $, (%esp);movl $, (%esp)": 1,
                "popl %ebp;retl $;nop;nop;nop": 117,
                "retl $;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %ebx": 227,
                "movl (%ebp), %edi;movl %ebx, (%esp);calll  <IoGetRelatedDeviceObject>;subl $, %esp;movl (%eax), %edx": 1,
                "movw $, (%ecx);addl $, %ecx;subl $, %ebx;movl %ebx, %esi;andl $-, %esi": 1,
                "cmpw %ax, -;jb  <CcUnpinData+>;addl $, -;movl %ebx, (%esp);calll *-": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %edi": 9,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl %edi, (%esp);movl %esi, (%esp)": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <CcMapData>;subl $, %esp": 1,
                "testb %al, %al;je  <CcPinRead+>;movl %ebx, (%esp);movl %edi, (%esp);movl %esi, (%esp)": 1,
                "testb %al, %al;jne  <CcPinRead+>;movl %ebx, (%esp);calll - <CcUnpinData>;subl $, %esp": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 41,
                "movl %esp, %ebp;subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx": 45,
                "cmpb $, (%eax);je  <CcUnpinRepinnedBcb+>;movl %eax, (%esp);calll  <CcUnpinRepinnedBcb+>;subl $, %esp": 1,
                "movzwl -, %eax;cmpw %ax, -;jb  <CcUnpinRepinnedBcb+>;addl $, -;movl %ebx, (%esp)": 1,
                "subl $, %esp;jmp  <CcUnpinRepinnedBcb+>;movl %ebx, %edx;movl $, %ecx;calll - <InterlockedPushEntrySList>": 1,
                "movl %esp, %ebp;subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%eax), %ebx": 2,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%eax), %ebx;subl $, %ebx;movl %ebx, (%eax)": 1,
                "movl %ebx, (%esp);movl %eax, (%esp);movl %ecx, (%esp);movl %edx, (%esp);movl $, (%esp)": 2,
                "movl %edx, (%esp);movl $, (%esp);calll  <DbgPrint>;movl -(%ebp), %ebx;movl -(%ebp), %esi": 2,
                "movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp;popl %ebp;retl": 23,
                "subl $, %esp;movl (%ebp), %ebx;cmpl $, (%ebp);je  <CcUnpinRepinnedBcb+>;movl $, (%esp)": 1,
                "calll - <InterlockedPopEntrySList>;movl %eax, %ebx;testl %eax, %eax;jne  <CcUnpinRepinnedBcb+>;addl $, -": 1,
                "testl %eax, %eax;jne  <CcUnpinRepinnedBcb+>;addl $, -;movl , %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl %eax, %ebx;movb $, (%ebx);movb $, (%ebx);movb $, (%ebx)": 1,
                "movb $, (%ebx);movb $, (%ebx);movl %edi, %eax;andl $, %eax;movl %eax, (%ebx)": 1,
                "cmpl -, %edx;jne  <CcUnpinRepinnedBcb+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %esi;calll *-;cmpb $, %al;jbe  <CcUnpinRepinnedBcb+>;movl $, (%esp)": 16,
                "movl %fs:, %eax;cmpl (%eax), %esi;je  <CcUnpinRepinnedBcb+>;movl $, (%esp);movl $, (%esp)": 13,
                "movw %ax, ;movl -(%ebp), %ecx;movl %ebx, (%ecx);movl -(%ebp), %eax;addl $, %eax": 1,
                "movl (%eax), %ebx;movl %eax, -(%ebp);cmpl %eax, %ebx;je  <CcUnpinRepinnedBcb+>;movl $, %eax": 1,
                "jae  <CcUnpinRepinnedBcb+>;movl $, %ecx;movl $, %edx;movl %esi, %eax;calll - <CcUnpinRepinnedBcb+>": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 31,
                "movl %fs:, %eax;cmpl (%eax), %ebx;je  <CcUnpinRepinnedBcb+>;movl $, (%esp);movl $, (%esp)": 19,
                "addl $, %eax;movw %ax, (%ebx);testw %ax, %ax;jne  <CcUnpinRepinnedBcb+>;leal (%ebx), %eax": 12,
                "testw %ax, %ax;jne  <CcUnpinRepinnedBcb+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <CcUnpinRepinnedBcb+>": 12,
                "cmpl (%esi), %edi;jb  <CcUnpinRepinnedBcb+>;movl (%ebx), %ebx;cmpl -(%ebp), %ebx;jne - <CcUnpinRepinnedBcb+>": 1,
                "movl %edx, (%ecx);movl %edx, (%eax);jmp  <CcUnpinRepinnedBcb+>;leal (%edi), %eax;movl -(%ebp), %ecx": 1,
                "cmpl %eax, (%ebx);je  <CcUnpinRepinnedBcb+>;calll  <KiCheckForKernelApcDelivery>;movl -, %ebx;subl $, %ebx": 1,
                "calll  <KiCheckForKernelApcDelivery>;movl -, %ebx;subl $, %ebx;movl %fs:, %eax;movl (%eax), %eax": 1,
                "subl $, %esp;movl %fs:, %eax;movl (%eax), %ecx;cmpl %ecx, (%ebx);je  <CcUnpinRepinnedBcb+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl %esi, %esi": 147,
                "je  <CcUnpinRepinnedBcb+>;calll  <KiCheckForKernelApcDelivery>;cmpl $, -(%ebp);jns  <CcUnpinRepinnedBcb+>;movl $, (%esp)": 1,
                "jmp - <CcUnpinRepinnedBcb+>;leal -(%ebp), %esp;popl %ebx;popl %esi;popl %edi": 2,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;movzbl (%ebp), %eax": 9,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl -, %edi": 42,
                "subl $, %esp;cmpl -, %edi;jne  <CcUnpinRepinnedBcb+>;movl $, (%esp);movl $, (%esp)": 5,
                "calll  <RtlAssert>;subl $, %esp;movl %fs:, %eax;movl (%eax), %ebx;calll *-": 75,
                "calll *-;movb %al, -(%ebp);movl (%esi), %ebx;jmp  <CcUnpinRepinnedBcb+>;leal -(%ebx), %eax": 1,
                "movl %edx, (%esp);movzbl (%eax), %edx;movl %edx, (%esp);movl (%eax), %edx;movl %edx, (%esp)": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movzwl -, %edx;cmpw %dx, (%eax);je  <CcUnpinRepinnedBcb+>": 11,
                "movl %eax, %esi;movb $, (%ebx);movl (%ebx), %edx;movl (%ebx), %eax;movl %eax, (%edx)": 1,
                "movl (%ebx), %eax;movl %eax, (%edx);movl %edx, (%eax);subl $, -;movl $, %ecx": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl -, %esi;jne  <CcUnpinRepinnedBcb+>;movl $, (%esp)": 5,
                "movw %ax, ;movl -, %edi;cmpl $, %edi;je  <CcUnpinRepinnedBcb+>;cmpl $, (%ebp)": 1,
                "leal (%ebx), %esi;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %edx;movl %ebx, %eax;calll - <CcUnpinRepinnedBcb+>;jmp  <CcUnpinRepinnedBcb+>;calll *-": 1,
                "subl $, %esp;movl $, -;movl $, %edi;lock;xaddl %edi, -": 8,
                "je  <CcUnpinRepinnedBcb+>;testl $, %edi;jne  <CcUnpinRepinnedBcb+>;leal (%edi), %edx;subl $, %edi": 2,
                "jne  <CcUnpinRepinnedBcb+>;movl $, %ecx;calll  <KeSetEventBoostPriority+>;movl %fs:, %eax;movl (%eax), %edi": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpw $, (%edi);js  <CcUnpinRepinnedBcb+>": 2,
                "movw %ax, (%edi);testw %ax, %ax;jne  <CcUnpinRepinnedBcb+>;leal (%edi), %eax;cmpl %eax, (%edi)": 2,
                "leal (%edi), %eax;cmpl %eax, (%edi);je  <CcUnpinRepinnedBcb+>;calll  <KiCheckForKernelApcDelivery>;movl %ebx, (%esp)": 1,
                "calll  <KiCheckForKernelApcDelivery>;movl %ebx, (%esp);calll - <CcUnpinRepinnedBcb+>;subl $, %esp;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;shrl $, %eax;testb %al, %al;je  <CcUnpinRepinnedBcb+>;movl $, (%esp)": 1,
                "cmpl $, (%ebp);jne - <CcUnpinRepinnedBcb+>;calll *-;cmpb $, %al;jbe  <CcUnpinRepinnedBcb+>": 1,
                "movzbl (%ebp), %eax;movb %al, -(%ebp);movzbl (%ebp), %edx;movb %dl, -(%ebp);movzbl (%ebp), %eax": 3,
                "movl %esi, -;movzwl (%esi), %eax;movw %ax, ;movl (%ebp), %esi;addl $, %esi": 1,
                "movl $, %edx;movl %edi, %eax;calll - <CcUnpinRepinnedBcb+>;cmpl $, (%edi);jne  <CcUnpinRepinnedBcb+>": 1,
                "movl %edi, %eax;calll - <CcUnpinRepinnedBcb+>;testb %bl, %bl;jne  <CcUnpinRepinnedBcb+>;cmpb $, (%edi)": 1,
                "testb %al, %al;jne  <CcUnpinRepinnedBcb+>;movl $, %ecx;calll  <KeSetTimer+>;movl %ebx, -": 1,
                "jae  <CcUnpinRepinnedBcb+>;movl %ebx, %esi;movl $, %ecx;movl $, %edx;movl %ebx, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movzwl (%esi), %eax;addl $, %eax;movw %ax, (%esi)": 90,
                "calll  <KiCheckForKernelApcDelivery>;jmp  <CcUnpinRepinnedBcb+>;movl $, %ebx;movl %ebx, %eax;leal -(%ebp), %esp": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jne  <CcUnpinRepinnedBcb+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <KeBugCheck>;movl %fs:, %eax;movl (%eax), %edi;calll *-": 1,
                "movl %eax, ;addl $, -;movl $, %ecx;movl $, %edx;movl %ebx, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebp), %eax;addl $, %eax;shrl $, %eax": 2,
                "movl (%ebp), %edx;movl %edx, (%esp);calll - <CcUnpinRepinnedBcb+>;subl $, %esp;movl %eax, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);jne - <CcUnpinRepinnedBcb+>;movl $, %ebx;movl $, %eax;movl -(%ebp), %edx": 1,
                "movl %ebx, %eax;calll - <CcUnpinRepinnedBcb+>;testl %eax, %eax;js  <CcUnpinRepinnedBcb+>;movl %fs:, %eax": 1,
                "movl (%ebp), %edx;movl %ecx, (%edx);movl (%ebp), %edx;movl %eax, (%edx);movl (%eax), %edx": 1,
                "cmpl (%ebx), %edi;jne  <CcUnpinRepinnedBcb+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %edi, (%ebx);movzwl (%edi), %eax;movw %ax, (%ebx);movl $, (%esp);movl $, (%esp)": 5,
                "je  <CcUnpinRepinnedBcb+>;calll  <KiCheckForKernelApcDelivery>;addl $, -;movzwl -, %eax;cmpw %ax, -": 1,
                "calll *-;subl $, %esp;jmp  <CcUnpinRepinnedBcb+>;movl (%ebp), %edx;movl $, %ecx": 1,
                "calll - <InterlockedPushEntrySList>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl $, (%eax);movb $, -(%ebp);movl -, %edx;movl %edx, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl $, %edx;movl %ebx, %eax;calll - <CcUnpinRepinnedBcb+>;cmpl $, (%ebx);je  <CcUnpinRepinnedBcb+>": 1,
                "movl %esi, %eax;movzbl %al, %edx;movl (%ebx), %ecx;addl $, %ecx;movl , %eax": 1,
                "movzbl %al, %edx;movl (%ebx), %ecx;addl $, %ecx;movl , %eax;calll *%eax": 1,
                "calll *%eax;calll *-;cmpb $, %al;jbe  <CcUnpinRepinnedBcb+>;movl $, (%esp)": 1,
                "je  <CcUnpinRepinnedBcb+>;calll  <KiCheckForKernelApcDelivery>;jmp  <CcUnpinRepinnedBcb+>;movl (%ebx), %eax;addl %esi, %eax": 1,
                "subl $, %esp;shrdl $, %edx, %eax;movl %eax, (%esp);calll  <MmGetPhysicalAddress+>;subl $, %esp": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, (%ebx);je  <CcUnpinRepinnedBcb+>;movl $, (%esp)": 1,
                "movl %edx, (%eax);movl (%ebx), %edx;movl (%ebx), %eax;movl %eax, (%edx);movl %edx, (%eax)": 3,
                "addl $, %ecx;calll *-;cmpl $, %edi;jne - <CcUnpinRepinnedBcb+>;calll *-": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <CcUnpinRepinnedBcb+>;calll  <KiCheckForKernelApcDelivery>;cmpl $, (%ebp)": 1,
                "movl -(%ebp), %esi;addl $, %esi;movl %esi, %ecx;calll *-;movl %eax, %edi": 1,
                "testb $, %bl;je  <CcFlushCache+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 10,
                "calll  <RtlAssert>;subl $, %esp;testl %ebx, %ebx;je  <CcFlushCache+>;testb $, %bl": 10,
                "movl %fs:, %eax;cmpl (%eax), %ebx;je  <CcFlushCache+>;movl $, (%esp);movl $, (%esp)": 17,
                "pushl %ebx;subl $, %esp;movl (%ebp), %edi;testl %edi, %edi;jne  <CcFlushCache+>": 1,
                "cmpl %edx, -;je  <CcFlushCache+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 9,
                "subl $, %esp;cmpl -, %esi;jne  <CcFlushCache+>;movl $, (%esp);movl $, (%esp)": 6,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;leal (%ebx), %eax": 2,
                "movl %eax, -(%ebp);cmpl %esi, (%edi);jne - <CcFlushCache+>;movb $, (%edi);movzbl -(%ebp), %edx": 1,
                "calll  <ObfDereferenceObject>;leal -(%ebp), %eax;cmpl %eax, -(%ebp);je  <CcFlushCache+>;movl %eax, %ebx": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, (%ebx);jne  <CcFlushCache+>;cmpl $, (%ebx)": 1,
                "cmpl $, (%ebx);jne  <CcFlushCache+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebx), %eax;testl %eax, %eax;je  <CcFlushCache+>;subl $, %eax;movl %eax, (%ebx)": 2,
                "testl %eax, %eax;jne  <CcFlushCache+>;movl (%ebx), %eax;movl %eax, (%esp);calll  <MmGetPhysicalAddress+>": 2,
                "je  <CcFlushCache+>;movl $, (%edi);movl (%ebx), %eax;testl %eax, %eax;je  <CcFlushCache+>": 1,
                "je  <CcFlushCache+>;cmpl $, (%esi);jne  <CcFlushCache+>;movl %eax, (%esi);addl $, (%eax)": 1,
                "movl (%edx), %eax;movl (%eax), %ebx;movl %fs:, %eax;movl (%eax), %edi;calll *-": 1,
                "movl $, %eax;cmpl %edx, (%ebx);je  <CcFlushCache+>;calll  <KiCheckForKernelApcDelivery>;movl $, %eax": 1,
                "testb $, %bl;je  <CcFlushCache+>;movb $, (%ebx);leal (%ebx), %edi;movb $, %dl": 1,
                "movl %eax, (%ebx);movl (%edx), %eax;testl %eax, %eax;je  <CcFlushCache+>;movl (%eax), %edx": 1,
                "je  <CcFlushCache+>;movl (%eax), %edx;movl (%eax), %eax;movl %eax, (%ebx);movl %edx, (%ebx)": 1,
                "movl (%eax), %edx;movl (%eax), %eax;movl %eax, (%ebx);movl %edx, (%ebx);movl (%ebp), %edx": 1,
                "calll  <KeSetEventBoostPriority+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "jg  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 9,
                "subl $, %esp;movl (%ebx), %eax;orb $-, -(%eax);movl (%ebp), %edx;movl %edx, -(%eax)": 1,
                "movl $, -(%eax);cmpb $, -(%ebp);jne  <CcGetFileObjectFromSectionPtrs+>;movl %edx, %ecx;calll  <ObfReferenceObject>": 1,
                "jne  <CcGetFileObjectFromSectionPtrs+>;movl %edx, %ecx;calll  <ObfReferenceObject>;movl %ebx, %edx;movl %edi, %ecx": 1,
                "movl $, (%eax);leal -(%ebp), %eax;movl %eax, (%ebx);movl %esi, (%ebx);calll  <PsGetCurrentThread>": 1,
                "leal -(%ebp), %eax;movl %eax, (%ebx);movl %esi, (%ebx);calll  <PsGetCurrentThread>;movl %eax, (%ebx)": 1,
                "movl %esi, -(%eax);movl $, -(%eax);movl %ebx, %edx;movl %edi, %ecx;calll  <IofCallDriver>": 1,
                "movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl (%eax), %eax;movl (%eax), %eax": 3,
                "calll  <memmove>;movl %fs:, %eax;movzbl -(%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp)": 1,
                "movl %ebx, (%esp);calll  <ExFreePool>;subl $, %esp;testl %esi, %esi;jns  <CcGetFileObjectFromSectionPtrs+>": 1,
                "testl %esi, %esi;jns  <CcGetFileObjectFromSectionPtrs+>;movl %esi, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, %edx;shrl $, %edx;movl %edx, -(%ebp);movl (%ebp), %edx;cmpl %edx, -(%ebp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll  <MmGetPhysicalAddress+>;subl $, %esp;movl $, (%esp)": 1,
                "calll  <MmGetPhysicalAddress+>;subl $, %esp;cmpl $, (%ebp);je  <CcGetFileObjectFromSectionPtrs+>;movl (%ebp), %edx": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebx), %esi;movl $, (%esp);movl $, (%esp)": 1,
                "testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;testb $, %al;jne  <CcGetFileObjectFromSectionPtrs+>;movl %eax, %edi": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl $, %ecx;calll *-": 78,
                "subl $, %esp;movb $, (%ebx);calll *-;cmpb $, %al;je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl %ebx, (%esp);calll  <KeSetEventBoostPriority>;subl $, %esp;movl %esi, %ecx;andl $, %ecx": 8,
                "movzwl (%ebx), %eax;cmpw $, %ax;je  <CcGetFileObjectFromSectionPtrs+>;testw %ax, %ax;jle  <CcGetFileObjectFromSectionPtrs+>": 12,
                "jle  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 25,
                "subl $, %esp;subw $, (%ebx);lock;btrl $, (%edi);setb %al": 3,
                "calll  <RtlAssert>;subl $, %esp;testl %ebx, %ebx;je  <CcGetFileObjectFromSectionPtrs+>;testb $, %bl": 16,
                "je  <CcGetFileObjectFromSectionPtrs+>;calll  <KiCheckForKernelApcDelivery>;cmpl $, -(%ebp);je  <CcGetFileObjectFromSectionPtrs+>;movl -(%ebp), %eax": 1,
                "calll  <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;testl %eax, %eax;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 1,
                "movl $, %ecx;calll *-;movl $, (%esp);leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "calll  <MmGetPhysicalAddress+>;subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, %ebx;testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;cmpl $, (%eax);jne  <CcGetFileObjectFromSectionPtrs+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, (%edi);movl -(%ebp), %eax;movl $, %ebx": 11,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp);movl %edi, -(%ebp);movl $, %ebx": 1,
                "movl %edi, -(%ebp);movl $, %ebx;movl %esi, %eax;movl $, %edx;addl -(%ebp), %eax": 1,
                "cmpl %eax, (%ebx);je  <CcGetFileObjectFromSectionPtrs+>;calll  <KiCheckForKernelApcDelivery>;movl -(%ebp), %eax;cmpl %eax, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl %ebx, %eax;subl -(%ebp), %eax;shrl $, %eax;movl -(%ebp), %edx": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;js  <CcGetFileObjectFromSectionPtrs+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "movl $, (%esp);andl $-, %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%eax), %ecx;movl -(%ebp), %edx;cmpl %ecx, (%edx);je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 3,
                "subl $, %esp;movl -(%ebp), %ecx;movl $, (%ecx);movl $, %esi;lock": 2,
                "movl %eax, (%edx);movl %edx, (%eax);testb $, (%ebx);je  <CcGetFileObjectFromSectionPtrs+>;movl (%ebx), %ecx": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;movzbl %al, %edx;movl (%ebx), %ecx;addl $, %ecx;calll *-": 1,
                "calll  <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl $, (%esp);movl $, (%esp);movl %ebx, (%esp)": 2,
                "calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl $, (%esp);movl %ebx, (%esp);calll  <ExFreePoolWithTag>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl (%ebp), %ecx": 5,
                "calll  <ObfDereferenceObject>;jmp  <CcGetFileObjectFromSectionPtrs+>;cmpl $, %eax;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);movl %eax, -(%ebp);movl %edx, -(%ebp);testl %edi, %edi": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;movl (%edi), %edx;movl (%edi), %eax;movl %eax, %ecx;orl %edx, %ecx": 1,
                "movl $, (%esp);movl $, (%esp);calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %ebx": 24,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jne  <CcGetFileObjectFromSectionPtrs+>": 1,
                "testl %eax, %eax;jne  <CcGetFileObjectFromSectionPtrs+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, %ebx": 1,
                "movl $, (%ebx);movl $, (%ebx);movl $, (%ebx);movl $, (%ebx);jmp  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl %eax, (%ebx);movl $, (%ebx);movl %ebx, (%esp);calll  <CcGetFileObjectFromSectionPtrs+>;subl $, %esp": 1,
                "jg  <CcGetFileObjectFromSectionPtrs+>;cmpl (%ebx), %edx;jbe  <CcGetFileObjectFromSectionPtrs+>;testl $, (%ebp);jne  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl $, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll  <IoSetInformation>;subl $, %esp": 1,
                "movl (%ebp), %ebx;movl (%ebp), %esi;movl (%ebp), %edi;movl $, (%esp);movl (%ebp), %eax": 1,
                "subl $, %esp;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 11,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp)": 5,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <MmGetPhysicalAddress+>;subl $, %esp": 2,
                "movl %fs:, %eax;movl (%eax), %edi;calll *-;cmpb $, %al;jbe  <CcGetFileObjectFromSectionPtrs+>": 14,
                "subw $, (%edi);lock;btrl $, (%esi);setb %al;testb %al, %al": 3,
                "testb %al, %al;jne  <CcGetFileObjectFromSectionPtrs+>;leal (%esi), %ecx;calll  <KeSetTimer+>;movl -(%ebp), %edx": 1,
                "subl $, %esp;movl %fs:, %eax;movl (%eax), %eax;movzwl (%esi), %edx;cmpw %dx, (%eax)": 6,
                "movl %fs:, %eax;movl (%eax), %eax;movzwl (%esi), %edx;cmpw %dx, (%eax);je  <CcGetFileObjectFromSectionPtrs+>": 3,
                "xaddl %ebx, (%esi);testb $, %bl;je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpxchgl %ebx, (%esi);cmpl %eax, %edx;jne  <CcGetFileObjectFromSectionPtrs+>;leal (%esi), %ecx;calll  <KeSetEventBoostPriority+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl $, %eax": 2,
                "movl (%ebp), %esi;movzbl (%ebp), %eax;movb %al, -(%ebp);movl (%ebp), %eax;movl (%eax), %ebx": 1,
                "movl (%esi), %eax;movl (%esi), %edx;movl %eax, (%ebx);movl %edx, (%ebx);addl $, %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 23,
                "movl (%eax), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "cmpl %edx, (%ebx);je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 4,
                "movl %eax, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;leave;retl $": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);movl (%ebx), %edx;movl %edx, (%esp);movl (%ebx), %edx": 1,
                "movl %eax, (%ebx);movl $, (%esp);movl $, (%esp);addl $, %ebx;movl %ebx, (%esp)": 4,
                "movl $, (%esp);movl $, (%esp);addl $, %ebx;movl %ebx, (%esp);calll  <KeSetEvent>": 17,
                "movl $, (%esp);movl $, (%esp);movl (%ebx), %eax;movl %eax, -(%ebp);shll $, %eax": 1,
                "jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl (%ebp), %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %eax;addl $, %eax;movl %eax, (%esp);movl $, (%esp);movl (%ebp), %ebx": 1,
                "movl (%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esp);movl $, (%esp);calll  <MmGetPhysicalAddress+>": 1,
                "movl $, (%esp);movl %edi, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl $, %ebx": 2,
                "movl (%ebp), %ebx;movl $, (%ebx);movl (%edi), %eax;movl %eax, (%ebx);movl $, (%ebx)": 1,
                "movl %eax, (%ebx);movl $, (%ebx);movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, (%ebx)": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, (%ebx);movl %edx, (%ebx);movl $, (%ebx)": 3,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;leal -(%ebp), %eax": 1,
                "movl %eax, %esi;testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl $, %eax;jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, %eax;leal -(%ebp), %esp": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll  <KeQueryIoAccessMap+>;subl $, %esp;movl $, (%esp)": 3,
                "movl $, (%edx);movl $, (%edx);movl $, (%edx);movl $, (%edx);movl $, (%edx)": 24,
                "movl %edi, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 2,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <MmGetPhysicalAddress+>;subl $, %esp;movl -(%ebp), %eax": 1,
                "jne  <CcGetFileObjectFromSectionPtrs+>;movl -, %ecx;movl %ecx, -(%ebp);jmp  <CcGetFileObjectFromSectionPtrs+>;movl %fs:, %eax": 1,
                "movl (%eax), %eax;addl $, %eax;movl %eax, -(%ebp);cmpb $, -(%ebp);jne  <CcGetFileObjectFromSectionPtrs+>": 1,
                "subl $, %ebx;calll *-;cmpb $, %al;jbe  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 1,
                "leal (%esi), %eax;movl $, %ebx;cmpl %eax, (%esi);je  <CcGetFileObjectFromSectionPtrs+>;calll  <KiCheckForKernelApcDelivery>": 2,
                "cmpl %eax, (%esi);je  <CcGetFileObjectFromSectionPtrs+>;calll  <KiCheckForKernelApcDelivery>;jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, -(%ebp)": 1,
                "calll  <KiCheckForKernelApcDelivery>;jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movzwl (%ecx), %ecx;cmpw %cx, (%eax);je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <CcGetFileObjectFromSectionPtrs+>;cmpl $, %ebx;jne  <CcGetFileObjectFromSectionPtrs+>;leal -(%ebp), %edx;movl $, %ecx": 2,
                "movl (%ebp), %eax;cmpb $, (%eax);je  <CcGetFileObjectFromSectionPtrs+>;movl -(%ebp), %edx;movl %edx, -(%ebp)": 1,
                "setb %al;testb %al, %al;jne  <CcGetFileObjectFromSectionPtrs+>;movl %edx, %ecx;addl $, %ecx": 2,
                "lock;xaddl %edi, (%esi);testl $, %edi;je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 3,
                "lock;cmpxchgl %edi, (%esi);cmpl %eax, %edx;jne  <CcGetFileObjectFromSectionPtrs+>;leal (%esi), %ecx": 3,
                "calll *-;cmpb $, %al;jbe  <CcGetFileObjectFromSectionPtrs+>;calll *-;movl (%ebp), %edx": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax;addl $, %eax;addb $, (%ebx)": 2,
                "movsbl %al, %esi;movl %esi, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;subb $, (%ebx)": 1,
                "calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;subb $, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "calll  <DbgPrint>;movl (%ebp), %edx;subl $, %edx;movl (%ebp), %ecx;cmpl -, %ecx": 1,
                "cmpl -, %ecx;sete %al;movzbl %al, %eax;subl $, %eax;andl %edx, %eax": 1,
                "andl %edx, %eax;movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);movl %esi, (%esp);movl (%ebp), %eax": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "testl %ebx, %ebx;je  <CcGetFileObjectFromSectionPtrs+>;cmpl $, %ebx;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;cmpl $, %ebx;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp)": 1,
                "jne  <CcGetFileObjectFromSectionPtrs+>;movl (%ebp), %eax;cmpb $, (%eax);jbe  <CcGetFileObjectFromSectionPtrs+>;movl (%ebp), %edx": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;jns  <CcGetFileObjectFromSectionPtrs+>;jmp  <CcGetFileObjectFromSectionPtrs+>;testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;js  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl (%eax), %edi;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <KiCheckForKernelApcDelivery>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <KeSetEvent>": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movzbl (%ebp), %eax;movb %al, -(%ebp);movzbl (%ebp), %edi": 2,
                "movl %ebp, %esp;popl %ebp;retl $;nop;nop": 18,
                "subl $, %esp;movl (%ebp), %esi;cmpl $, (%esi);je  <CcGetFileObjectFromSectionPtrs+>;movl $, %ebx": 1,
                "testl %eax, %eax;jns  <CcGetFileObjectFromSectionPtrs+>;testl %ebx, %ebx;je  <CcGetFileObjectFromSectionPtrs+>;movl (%esi,%ebx,), %eax": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %edi": 1,
                "movl %eax, -(%ebp);movl (%ebx), %edi;leal (%ebx,%edi,), %edx;movl %edx, -(%ebp);movl %edx, (%esp)": 1,
                "orw $, -(%ebp);movl $, (%esp);movl $, (%esp);leal -(%ebp), %esi;movl %esi, (%esp)": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll  <IoPageRead>;subl $, %esp;movl %eax, %esi": 1,
                "movl %edx, (%esp);movl $, (%esp);movl %eax, (%esp);calll  <memset>;movl %fs:, %eax": 1,
                "movl %eax, (%esp);calll  <memset>;movl %fs:, %eax;movzbl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "jb  <CcGetFileObjectFromSectionPtrs+>;xorl %edx, %eax;xorl %esi, %ebx;orl %eax, %ebx;cmpl $, %ebx": 1,
                "orl %eax, %ebx;cmpl $, %ebx;sbbl %eax, %eax;notl %eax;addl $, %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <RtlLookupElementGenericTable>;subl $, %esp;movl -(%ebp), %ebx": 1,
                "shll $, %eax;movl %eax, -(%ebp);movl %edx, -(%ebp);movl $, -(%ebp);movl $, (%esp)": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);movl $, -(%ebp);movl $, (%esp);movl $, (%esp)": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;movl (%esi), %edi;movl (%esi), %esi;subl (%eax), %esi;sbbl (%eax), %edi": 1,
                "movl %ebx, %ecx;xorl %ebx, %ebx;shrl $, %ecx;addl %ecx, %esi;adcl %ebx, %edi": 1,
                "movl -(%ebp), %ebx;addl $, %ebx;movl -(%ebp), %ecx;addl $, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %edi, %edx;movl -(%ebp), %ecx;addl (%ecx), %eax;adcl (%ecx), %edx;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;jne - <CcGetFileObjectFromSectionPtrs+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "pushl %ebx;subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "addl $, %eax;movl %eax, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl %eax, %ebx": 1,
                "subl $, %esp;movl (%ebp), %edi;movl (%ebp), %eax;cmpb $, (%eax);jne  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl (%ebp), %eax;cmpb $, (%eax);jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %ecx, (%esi);movl (%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %edx;subl (%esi), %eax": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;testl $, %edi;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %ecx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl %esi, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp": 13,
                "subl $, %esp;movl $, %eax;jmp  <CcGetFileObjectFromSectionPtrs+>;orl %edx, %eax;movl (%ebp), %edx": 1,
                "orl %edx, %eax;movl (%ebp), %edx;movb %al, (%edx);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);lock;addl $, (%edx)": 1,
                "movl (%ecx), %eax;movl %eax, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl %eax, %esi": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;testl %esi, %esi": 1,
                "calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl $, (%esp);movl %ebx, (%esp);calll  <MmGetPhysicalAddress+>": 1,
                "movl %ecx, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl (%ebp), %edx;movl (%edx), %eax": 1,
                "addl $, %eax;jmp  <CcGetFileObjectFromSectionPtrs+>;movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <KeSetEvent>;subl $, %esp;movl $, %eax": 2,
                "pushl %esi;pushl %ebx;subl $, %esp;movb $, -(%ebp);leal -(%ebp), %edi": 1,
                "testl %edx, %edx;je  <CcGetFileObjectFromSectionPtrs+>;movl $, %ecx;calll  <KeWaitForSingleObject+>;movl %fs:, %eax": 5,
                "jne  <CcGetFileObjectFromSectionPtrs+>;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <DbgPrint>;calll *-;cmpb $, %al;je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 2,
                "movl $, (%esp);calll  <KeSetEventBoostPriority>;subl $, %esp;movzbl %bl, %ecx;calll *-": 14,
                "movb %al, -(%ebp);calll *-;cmpb $, %al;jbe  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);calll  <PsSetJobUIRestrictionsClass+>;subl $, %esp;testb %al, %al": 1,
                "subl $, %esp;movzbl %bl, %ecx;movl , %eax;calll *%eax;leal -(%ebp), %edx": 1,
                "movl %edx, -(%ebp);movl %ebx, -(%ebp);movl %fs:, %eax;movl (%eax), %edi;calll *-": 1,
                "addl $, %ecx;calll  <KeSetEventBoostPriority+>;movl %fs:, %eax;movl (%eax), %ebx;calll *-": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movb $, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %edx, (%esp);movl %edi, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>": 1,
                "movzbl -(%ebp), %eax;orb %al, -(%ebp);calll *-;cmpb $, %al;jbe  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;calll *-": 54,
                "movl %edi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll *-(%ebp);subl $, %esp": 1,
                "subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);calll  <MmGetPhysicalAddress+>;subl $, %esp": 2,
                "calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl $, -(%ebp);movl $, -(%ebp);leal (%edi), %eax": 1,
                "movl %edi, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax": 1,
                "subl $, %esp;shrl $, %esi;movl %esi, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp": 1,
                "subl $, %esp;movl -(%ebp), %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 13,
                "rep  retl;pushl %ebp;movl %esp, %ebp;movl $, -;movl $, -": 1,
                "cmpl %edx, -;je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 14,
                "cmpl %eax, %edx;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, %ecx;calll  <KeSetEventBoostPriority+>;movl %fs:, %eax": 15,
                "pushl %ebx;subl $, %esp;calll *-;cmpb $, %al;jbe  <CcGetFileObjectFromSectionPtrs+>": 7,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;subl $, (%edi);testb $, (%esi)": 1,
                "cmpxchgl %esi, -;cmpl %eax, %edx;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, %ecx;calll  <KeSetEventBoostPriority+>": 5,
                "movl %eax, %ebx;testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;andb $-, (%eax);movl $, (%eax)": 1,
                "testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;andb $-, (%eax);movl $, (%eax);movl %ebx, %eax": 1,
                "calll *-;cmpb $, %al;nop;jbe  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 1,
                "testb $, (%eax);je  <CcGetFileObjectFromSectionPtrs+>;cmpl $, (%esi);jne  <CcGetFileObjectFromSectionPtrs+>;calll  <ObfDereferenceObject>": 1,
                "calll  <RtlCompareUnicodeString>;subl $, %esp;testl %eax, %eax;jne  <CcGetFileObjectFromSectionPtrs+>;movl (%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp - <CcGetFileObjectFromSectionPtrs+>": 2,
                "movl $, %ecx;calll  <ExfAcquirePushLockShared>;testb $, -;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl -, %ebx": 7,
                "cmpl $, %ebx;je  <CcGetFileObjectFromSectionPtrs+>;movl $, %edi;leal -(%ebx), %esi;testb $, (%esi)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl %ebx, %eax;shrl $, %eax": 51,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;cmpl $, (%eax)": 3,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;cmpl $, (%eax);je  <CcGetFileObjectFromSectionPtrs+>": 2,
                "movl %eax, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl %eax, -(%ebp);cmpl $-, %eax": 1,
                "testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl -(%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll *%eax": 3,
                "movl (%ebp), %eax;subl $, %eax;cmpl $, %eax;jbe  <CcGetFileObjectFromSectionPtrs+>;movl %esi, (%esp)": 1,
                "calll  <CmUnRegisterCallback+>;subl $, %esp;testb %al, %al;je  <CcGetFileObjectFromSectionPtrs+>;cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);ja  <CcGetFileObjectFromSectionPtrs+>;cmpb $, -(%ebp);jne  <CcGetFileObjectFromSectionPtrs+>;testl %edi, %edi": 1,
                "movl %ebx, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;movl (%ebp), %eax;addl $, %eax": 1,
                "cmpl $-, %edx;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %eax, %edi;testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl (%ebx), %eax": 3,
                "movl %ebx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl -(%ebp), %edi;cmpl %eax, (%ebp)": 1,
                "movzwl (%ebx), %eax;movl %eax, (%esp);addl $, %ebx;movl %ebx, (%esp);movl %edx, (%esp)": 1,
                "movl %ecx, %edx;movl $, %edi;jmp  <CcGetFileObjectFromSectionPtrs+>;movl %eax, %edx;movl $, %edi": 1,
                "movl $, %edi;jmp  <CcGetFileObjectFromSectionPtrs+>;movl %eax, %edx;movl $, %edi;testb $, (%ebx)": 1,
                "movl %eax, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;movl %edx, (%esp)": 1,
                "calll  <CmUnRegisterCallback+>;subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;movl %edx, (%esp);leal (%ebx), %eax": 1,
                "jae  <CcGetFileObjectFromSectionPtrs+>;movl $, %edi;movl (%ebp), %edx;movl (%edx), %eax;testl %eax, %eax": 1,
                "jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esi);jmp  <CcGetFileObjectFromSectionPtrs+>;movzwl (%ebx), %eax;addl $, %eax": 1,
                "movl (%ebx), %eax;shrl $, %eax;testl %eax, %eax;jg  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 4,
                "movb $, -(%ebp);movl $, %esi;movl $, %edi;movl %esi, %edx;movb %dl, -(%ebp)": 1,
                "cmpl $, (%ebp);je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl -, %ebx;imull $, (%esi), %ecx;movl %ecx, %eax;mull %edi;movl %ecx, %eax": 2,
                "movzbl %al, %eax;subl $, %eax;andl %eax, %edx;testb $, -(%ebp);jne  <CcGetFileObjectFromSectionPtrs+>": 3,
                "subl $, %esp;movl %fs:, %eax;movl (%eax), %ebx;imull $, (%esi), %ecx;movl %ecx, %eax": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;cmpl $, (%eax)": 11,
                "je  <CcGetFileObjectFromSectionPtrs+>;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <IoCsqRemoveNextIrp+>": 1,
                "testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl -(%ebp), %edx;movl %edx, -(%ebp);movb $, -(%ebp)": 1,
                "jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl (%ebp), %eax;subl $, %eax;cmpl $, %eax;jbe  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl %edx, (%esp);movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx": 1,
                "subl $, %esp;movl (%ebp), %ecx;movzwl (%ecx), %eax;movl -(%ebp), %edx;cmpl %eax, (%edx)": 1,
                "movl %edx, (%eax);movl (%ebp), %ecx;movl %edx, (%ecx);movl -(%ebp), %eax;addl $, %eax": 1,
                "movl (%ecx), %eax;movl (%ecx), %edx;movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx)": 2,
                "subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;movl (%ebp), %eax;movl %eax, (%esp);calll  <CmUnRegisterCallback+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebp), %ecx;testb $, (%ecx)": 9,
                "movl %eax, (%ecx);movl (%edx), %eax;movl %eax, (%ecx);movl $, (%esp);movl (%ebp), %edx": 1,
                "movl %eax, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl %edx, (%esp);calll  <CmUnRegisterCallback+>": 1,
                "subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, -(%ebp);movl $, -(%ebp);jmp  <CcGetFileObjectFromSectionPtrs+>": 1,
                "imull $, %edx, %edx;movl %ebx, %eax;subl %edx, %eax;movl $, %edx;divl %ecx": 10,
                "movl %esi, %ecx;calll  <ExfReleasePushLock>;jmp  <CcGetFileObjectFromSectionPtrs+>;movl %fs:, %eax;movl (%eax), %ebx": 1,
                "subl %edx, %eax;movl $, %edx;divl -(%ebp);leal (%edx,%edx,), %eax;leal (%esi,%eax,), %esi": 1,
                "calll  <CmUnRegisterCallback+>;movl $, -(%ebp);jmp  <CcGetFileObjectFromSectionPtrs+>;movl (%edi), %ebx;movl (%edi), %eax": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 2,
                "movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <IoCsqRemoveNextIrp+>": 4,
                "je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl (%esi), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl $, (%esi)": 33,
                "leal (%edx,%edx,), %eax;movl $, (%ebx,%eax,);imull $, (%edi), %ecx;movl %ecx, %eax;mull %esi": 1,
                "calll  <ExfReleasePushLock>;calll  <CmUnRegisterCallback+>;movl $, %eax;jmp  <CcGetFileObjectFromSectionPtrs+>;movl (%ebp), %eax": 2,
                "jmp  <CcGetFileObjectFromSectionPtrs+>;movl (%ebp), %eax;testb $, (%eax);je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);leal (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx": 1,
                "jne  <CcGetFileObjectFromSectionPtrs+>;cmpl $-, -(%ebp);je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp)": 3,
                "movl (%ebp), %edx;imull $, (%edx), %ecx;movl $, %edx;movl %ecx, %eax;mull %edx": 6,
                "testl %eax, %eax;jne  <CcGetFileObjectFromSectionPtrs+>;cmpl $, -(%ebp);jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "testl %edx, %edx;je  <CcGetFileObjectFromSectionPtrs+>;movl %eax, (%esp);movl %ecx, (%esp);calll *%edx": 7,
                "movl %ecx, (%esp);calll *%edx;subl $, %esp;movl -, %esi;movl -, %ecx": 2,
                "movl $, -(%ebp);movb $, -(%ebp);movl $, -(%ebp);calll *-;cmpb $, %al": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl %eax, %ebx": 1,
                "movl $, (%esp);calll  <DbgPrint>;movl (%ebx), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "jmp - <CcGetFileObjectFromSectionPtrs+>;testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;cmpl $, -(%ebp);je  <CcGetFileObjectFromSectionPtrs+>": 2,
                "movl %edx, (%esp);calll *%eax;subl $, %esp;movl -(%ebp), %eax;cmpl $-, %eax": 2,
                "calll *%eax;subl $, %esp;movl -(%ebp), %eax;cmpl $-, %eax;je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "calll  <ExfAcquirePushLockShared>;testb $, (%edi);jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebx), %eax;movl %eax, (%esp)": 14,
                "jmp  <CcGetFileObjectFromSectionPtrs+>;calll *-;cmpb $, %al;jbe  <CcGetFileObjectFromSectionPtrs+>;calll *-": 1,
                "movzbl (%ebx), %eax;testb $, %al;jne  <CcGetFileObjectFromSectionPtrs+>;movl (%edi), %edx;addl (%edi), %edx": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;testb $, %al": 2,
                "subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;testb $, %al;je  <CcGetFileObjectFromSectionPtrs+>;movl (%ebx), %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;cmpl (%ebx), %edx;je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%esi), %eax;testl %eax, %eax": 10,
                "calll  <CmUnRegisterCallback+>;subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;movzwl (%eax), %eax;movl (%ebp), %edx": 1,
                "movzwl (%ebx), %eax;movl %eax, (%edi);movzwl (%ebx), %eax;movl %eax, (%edi);movl (%ebx), %eax": 1,
                "movl %eax, (%edi);movzwl (%ebx), %eax;movl %eax, (%edi);movl (%ebx), %eax;movl %eax, (%edi)": 1,
                "testb $, %al;je  <CcGetFileObjectFromSectionPtrs+>;movl %ebx, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl (%eax), %edx;addl (%eax), %edx;movl %edx, %eax": 1,
                "movl %edi, (%esp);movl %esi, (%esp);calll *%eax;subl $, %esp;movl $, -(%ebp)": 1,
                "movl %esi, (%esp);calll *%eax;subl $, %esp;movl $, -(%ebp);jmp  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl $, (%ecx);movl $, -(%ebp);jmp  <CcGetFileObjectFromSectionPtrs+>;testb $, %al;je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl $, -(%ebp);jmp  <CcGetFileObjectFromSectionPtrs+>;movl (%ebx), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "pushl %ebx;subl $, %esp;leal -(%ebp), %edi;movl $, %esi;movl $, %ecx": 2,
                "subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll *%eax;subl $, %esp;cmpl $-, %ebx": 1,
                "movl %ecx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <IoCsqRemoveNextIrp+>": 1,
                "movl $, %ebx;leal -(%ebp), %eax;movl %eax, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp": 1,
                "calll  <CmUnRegisterCallback+>;movl (%ebp), %eax;movl (%eax), %ebx;movl (%ebx), %eax;testl %eax, %eax": 1,
                "jne  <CcGetFileObjectFromSectionPtrs+>;movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %edx;movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl %eax, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;movl -(%ebp), %eax": 1,
                "calll  <CmUnRegisterCallback+>;subl $, %esp;movl (%edi), %edi;movl %edi, -(%ebp);movl $, (%esp)": 1,
                "movl %edx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp": 1,
                "calll  <CmUnRegisterCallback+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax;js  <CcGetFileObjectFromSectionPtrs+>": 1,
                "testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %edx": 2,
                "movl %edx, (%esp);calll *%eax;subl $, %esp;orb $, (%ebx);movl %ebx, (%esp)": 1,
                "movl %eax, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;calll  <CmUnRegisterCallback+>;movl %esi, %eax": 1,
                "setb %al;testb %al, %al;jne  <CcGetFileObjectFromSectionPtrs+>;movl %esi, %ecx;calll  <KeSetTimer+>": 1,
                "testb %al, %al;je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;calll  <KiCheckForKernelApcDelivery>;movl %ebx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp": 1,
                "movl %ebx, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;movl %esi, %eax;leal -(%ebp), %esp": 1,
                "subl $, %esp;movl %esi, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 15,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);calll  <PsGetCurrentThread>": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jns  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 1,
                "jns  <CcGetFileObjectFromSectionPtrs+>;movl $, -(%ebp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll  <SeTokenType>;subl $, %esp;cmpl $, %eax;jne  <CcGetFileObjectFromSectionPtrs+>;movl -(%ebp), %eax": 1,
                "subl $, %esp;cmpb $, -;jne  <CcGetFileObjectFromSectionPtrs+>;cmpb $, -;jne  <CcGetFileObjectFromSectionPtrs+>": 1,
                "cmpb $, -;jne  <CcGetFileObjectFromSectionPtrs+>;cmpb $, -;jne  <CcGetFileObjectFromSectionPtrs+>;movb $, -": 1,
                "movzwl (%ebx), %ecx;shrw $, %cx;movzwl %cx, %ecx;movzwl (%esi), %eax;shrw $, %ax": 1,
                "jle  <CcGetFileObjectFromSectionPtrs+>;subl %eax, %ecx;je  <CcGetFileObjectFromSectionPtrs+>;movl %ebx, %edx;movl $, %eax": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;addl $, -(%ebp);jmp  <CcGetFileObjectFromSectionPtrs+>;cmpb $, -(%ebp);jne  <CcGetFileObjectFromSectionPtrs+>": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlInitUnicodeString>": 5,
                "calll  <CmUnRegisterCallback+>;subl $, %esp;movzbl (%eax), %eax;movl (%ebp), %ecx;movb %al, (%ecx)": 1,
                "subl $, %esp;testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "subl $, %esp;testl %eax, %eax;js  <CcGetFileObjectFromSectionPtrs+>;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "calll  <CmUnRegisterCallback+>;subl $, %esp;movl %edi, %esi;cmpl $-, %eax;je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll  <IoCsqRemoveNextIrp+>": 2,
                "cmpl $-, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl %eax, (%esp);movl %esi, (%esp);calll  <IoCsqRemoveNextIrp+>": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;cmpl $, -(%ebp)": 1,
                "subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;addl $, %ebx;cmpl %edx, %ebx;jbe - <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl %eax, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;movl %eax, %edi;movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;movl %eax, (%ebx);testl %eax, %eax": 1,
                "subl $, %esp;cmpl $-, %eax;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%ebx);jmp  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl %eax, (%ebx);movl $, (%esp);leal -(%ebp), %edi;movl %edi, (%esp);calll  <RtlInitUnicodeString>": 1,
                "calll  <RtlInitUnicodeString>;subl $, %esp;movl %edi, (%esp);movl %esi, (%esp);movl (%ebp), %edx": 1,
                "subl $, %esp;movl %eax, (%ebx);testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movzwl -(%ebp), %eax": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl %eax, (%ebx)": 1,
                "jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, %edx;movl %edx, %eax;leal -(%ebp), %esp;popl %ebx": 2,
                "subl $, %esp;movl $, %edx;cmpl $-, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl %eax, (%esp)": 6,
                "shrw %dx;movzwl %dx, %edx;leal (%eax,%edx,), %esi;cmpl %esi, %eax;jae  <CcGetFileObjectFromSectionPtrs+>": 1,
                "jae  <CcGetFileObjectFromSectionPtrs+>;movl $, -(%ebp);cmpw $, (%esi);jne  <CcGetFileObjectFromSectionPtrs+>;movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %ebx;cmpl %esi, %eax;je  <CcGetFileObjectFromSectionPtrs+>;jmp - <CcGetFileObjectFromSectionPtrs+>;movl -(%ebp), %ebx": 1,
                "calll  <RtlEqualUnicodeString>;subl $, %esp;testb %al, %al;je  <CcGetFileObjectFromSectionPtrs+>;movl %ebx, %esi": 1,
                "movl %eax, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl %ebx, -(%ebp);jmp - <CcGetFileObjectFromSectionPtrs+>": 1,
                "movw %ax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);movl %ebx, (%esp)": 1,
                "movzwl (%esi), %edx;movl %edx, (%esp);leal (%esi), %edx;movl %edx, (%esp);movzwl -(%ebp), %edx": 1,
                "subl $, %esp;movl $, %eax;cmpl $-, -(%ebp);jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 1,
                "calll  <CmUnRegisterCallback+>;subl $, %esp;movl %eax, %esi;movl $, %eax;testl %esi, %esi": 1,
                "movl %ebx, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;movl %eax, %esi;movl $, %edx": 1,
                "movl %eax, -(%ebp);cmpl $-, %eax;je  <CcGetFileObjectFromSectionPtrs+>;cmpl $, -;je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl %eax, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 1,
                "calll  <RtlInitUnicodeString>;subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);cmpl $-, %eax;jne  <CcGetFileObjectFromSectionPtrs+>;jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, -(%ebp)": 1,
                "subl $, %esp;movl %eax, %esi;cmpl $-, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl $, %edi": 1,
                "movl $, %edx;cmpl $, (%ebp);je  <CcGetFileObjectFromSectionPtrs+>;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %esi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <CmUnRegisterCallback+>": 1,
                "leal -(%ebp), %ebx;movl %ebx, (%esp);calll  <RtlInitAnsiString>;subl $, %esp;movw $, -(%ebp)": 4,
                "movl %eax, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;movl (%esi), %eax;testl %eax, %eax": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;movl (%esi), %edx;leal (%edx), %ebx;cmpl -, %ebx;jbe  <CcGetFileObjectFromSectionPtrs+>": 1,
                "ja  <CcGetFileObjectFromSectionPtrs+>;cmpl $, %eax;jne  <CcGetFileObjectFromSectionPtrs+>;jmp  <CcGetFileObjectFromSectionPtrs+>;cmpl $, %eax": 1,
                "movl %eax, ;movl $, -(%ebp);jmp  <CcGetFileObjectFromSectionPtrs+>;movzwl -, %eax;movzwl %ax, %edi": 1,
                "jmp  <CcGetFileObjectFromSectionPtrs+>;movzwl -, %eax;movzwl %ax, %edi;addl $, %eax;movw %ax, ": 1,
                "subl $, %esp;testl %eax, %eax;jns  <CcGetFileObjectFromSectionPtrs+>;movl %eax, %esi;movl -(%ebp), %eax": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, ;testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "subl $, %esp;movl %eax, ;testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl (%ebp), %eax": 1,
                "movl $, %edx;movl $, %ecx;movl $, %eax;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 5,
                "movl %eax, -(%ebp);cmpl $-, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl $, %esi;cmpl $-, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "cmpl $-, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl (%ebx), %eax;movl %eax, (%esp);leal -(%ebp), %edx": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;movl %edi, (%esp)": 1,
                "cmpl $-, %eax;je  <CcGetFileObjectFromSectionPtrs+>;movl (%ebx), %edx;testl %edx, %edx;je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl $, -(%ebp);movl %eax, (%esp);movl $, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp": 1,
                "jbe  <CcGetFileObjectFromSectionPtrs+>;jmp  <CcGetFileObjectFromSectionPtrs+>;movl (%edi), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl %eax, -(%ebp);jmp  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movw %ax, ;jmp  <CcGetFileObjectFromSectionPtrs+>;movl -(%ebp), %esi;cmpl %eax, %esi;jbe  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl %eax, %esi;testl %esi, %esi;jne - <CcGetFileObjectFromSectionPtrs+>;jmp - <CcGetFileObjectFromSectionPtrs+>;leal -(%ebp), %esp": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpb $, -;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 2,
                "movl %edi, -(%ebp);movl (%ebx), %eax;movl %eax, ;movl $, (%eax);calll *%edi": 1,
                "movl (%eax), %esi;movl -(%ebp), %edx;calll *%edx;cmpb $, %al;jbe  <CcGetFileObjectFromSectionPtrs+>": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;calll  <KiCheckForKernelApcDelivery>;calll  <CmUnRegisterCallback+>;leal -(%ebp), %esp;popl %ebx": 2,
                "movl %esp, %ebp;subl $, %esp;cmpb $, -;jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp)": 2,
                "movl %edx, %eax;lock;cmpxchgl %ecx, (%esi);cmpl %eax, %edx;je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;calll - <CcGetFileObjectFromSectionPtrs+>;movl %eax, %ebx;testl %eax, %eax;je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "testl %edx, %edx;je  <CcGetFileObjectFromSectionPtrs+>;cmpl -, %eax;jae  <CcGetFileObjectFromSectionPtrs+>;movl $, -(%ebp)": 1,
                "imull $, %edi, %edi;subl %edi, %ecx;movl %ecx, %edi;movl %ecx, %eax;movl $, %edx": 1,
                "calll  <ExfReleasePushLock>;jmp  <CcGetFileObjectFromSectionPtrs+>;movl (%ebx), %eax;movl -(%ebp), %edx;cmpl %edx, (%eax)": 1,
                "jmp  <CcGetFileObjectFromSectionPtrs+>;movl (%ebx), %eax;movl -(%ebp), %edx;cmpl %edx, (%eax);je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "cmpl %eax, (%esi);je  <CcGetFileObjectFromSectionPtrs+>;calll  <KiCheckForKernelApcDelivery>;movl (%ebx), %eax;movl $, (%eax)": 1,
                "subl $, -;movl %edi, %eax;movl $, %edx;divl -;leal (%edx,%edx,), %edx": 1,
                "andl $, %edi;movl %edi, (%esp);movl %ebx, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp": 1,
                "movl %ebx, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;jmp  <CcGetFileObjectFromSectionPtrs+>;cmpl $, (%ebx)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl $, %edx;movl %edi, %eax": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;calll  <KiCheckForKernelApcDelivery>;jmp  <CcGetFileObjectFromSectionPtrs+>;movl $, %esi;jmp - <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebx), %ecx;movl %ecx, -(%ebp)": 2,
                "cmpl %eax, (%esi);je  <CcGetFileObjectFromSectionPtrs+>;calll  <KiCheckForKernelApcDelivery>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, -;cmpl $, (%ebx);jne  <CcGetFileObjectFromSectionPtrs+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebx), %esi;cmpl $, %esi;je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl $, (%ebx);movzwl -, %eax": 1,
                "subl $, %esp;movl $, -;movl $, %ebx;leal -(,%ebx,), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;addl $, %ebx;cmpl $, %ebx;jne - <CcGetFileObjectFromSectionPtrs+>;movl $, -": 1,
                "jne  <CcGetFileObjectFromSectionPtrs+>;leal (%ebx), %esi;movl (%ebx), %edx;andl $-, %edx;leal (%edx), %ecx": 1,
                "testb %al, %al;je  <CcGetFileObjectFromSectionPtrs+>;movl -, %edx;calll *%edx;cmpb $, %al": 1,
                "je  <CcGetFileObjectFromSectionPtrs+>;movl -, %edx;calll *%edx;cmpb $, %al;je  <CcGetFileObjectFromSectionPtrs+>": 1,
                "subl $, %esp;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <ExAllocatePoolWithTag>": 15,
                "movl $, (%esi);movl , %eax;movl $, (%esi);movl %eax, (%esi);movl %esi, (%eax)": 1,
                "movl %esi, -;calll *-;cmpb $, %al;je  <CmRegisterCallback+>;movl $, (%esp)": 1,
                "movl (%esi), %edx;movl %eax, (%ebx);movl %edx, (%ebx);movl $, %eax;jmp  <CmRegisterCallback+>": 1,
                "jmp  <CmRegisterCallback+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movzbl %bl, %ecx;calll *-;movl $, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "retl $;nop;nop;nop;pushl %ebp": 16,
                "subl $, %esp;movl %eax, %ebx;movl $, %eax;testl %ebx, %ebx;je  <CmUnRegisterCallback+>": 2,
                "movl $, %eax;testl %ebx, %ebx;je  <CmUnRegisterCallback+>;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "testl %ebx, %ebx;je  <CmUnRegisterCallback+>;movl (%ebx), %eax;movl %eax, (%esp);movl , %eax": 1,
                "calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax;je  <CmUnRegisterCallback+>": 7,
                "testb $, (%eax);je  <CmUnRegisterCallback+>;movzwl (%eax), %eax;movl %eax, (%esp);leal (%esi), %eax": 1,
                "leal (%ebx), %eax;movl %eax, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;movzwl %ax, %eax": 1,
                "movl %eax, (%edx);testl %eax, %eax;jne  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <CmUnRegisterCallback+>;movl $, %eax;jmp  <CmUnRegisterCallback+>;movl $, %eax;leal -(%ebp), %esp": 6,
                "movl $, %eax;jmp  <CmUnRegisterCallback+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx": 8,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, (%esp);movl $, (%esp)": 21,
                "testl %eax, %eax;jns  <CmUnRegisterCallback+>;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "jmp  <CmUnRegisterCallback+>;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <CmUnRegisterCallback+>;movl $, -(%ebp);movl $, %eax;movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl $, -(%ebp);movl $, %eax;movl -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <CmUnRegisterCallback+>;leal -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "subl $, %esp;movl %ebx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwDeleteValueKey>": 2,
                "movl %ebx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwDeleteValueKey>;subl $, %esp": 3,
                "calll - <ZwDeleteValueKey>;subl $, %esp;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edi, (%esp);movl %esi, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl $, %ebx": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <RtlCompareUnicodeString>": 1,
                "testl %eax, %eax;je  <CmUnRegisterCallback+>;movl %edi, (%esp);movl %esi, (%esp);calll *%eax": 2,
                "movzwl (%ebx), %eax;cmpw $, %ax;sete %dl;cmpw $, %ax;je  <CmUnRegisterCallback+>": 1,
                "movzwl (%eax,%ebx,), %eax;movl %eax, (%esp);calll  <RtlUpcaseUnicodeChar>;subl $, %esp;movl %eax, %esi": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <CmUnRegisterCallback+>": 3,
                "cmpw $, %ax;je  <CmUnRegisterCallback+>;cmpw $, %ax;je  <CmUnRegisterCallback+>;cmpw $, %ax": 6,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp": 2,
                "jmp  <CmUnRegisterCallback+>;cmpl $, -(%ebp);jbe  <CmUnRegisterCallback+>;movl (%edi), %eax;testl %eax, %eax": 1,
                "je  <CmUnRegisterCallback+>;movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movzwl (%ebx), %eax": 1,
                "movzwl (%ebx), %eax;subl $, %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "js  <CmUnRegisterCallback+>;cmpl $, %eax;jbe  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);movzwl (%eax), %eax;subl $, %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;movl (%ebp), %edx": 3,
                "movl (%ebp), %edx;cmpw $, (%edx);je  <CmUnRegisterCallback+>;testb %al, %al;jne  <CmUnRegisterCallback+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebp), %eax;cmpw $, (%eax);jne  <CmUnRegisterCallback+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movzwl (%edi,%ebx), %edx;movzwl %dx, %eax": 1,
                "movl %edx, (%esp);calll  <RtlUpcaseUnicodeChar>;subl $, %esp;movzwl %ax, %eax;leal (%esi,%esi,), %edx": 1,
                "calll  <RtlUpcaseUnicodeChar>;subl $, %esp;movzwl %ax, %eax;leal (%esi,%esi,), %edx;leal (%esi,%edx,), %esi": 1,
                "cmpl (%ebp), %edx;jbe  <CmUnRegisterCallback+>;movzwl (%eax), %edx;cmpw $, %dx;je  <CmUnRegisterCallback+>": 1,
                "movzwl (%ecx), %eax;cmpw $, %ax;je  <CmUnRegisterCallback+>;cmpw $, %ax;jne  <CmUnRegisterCallback+>": 1,
                "movl (%edx,%eax,), %ebx;jmp  <CmUnRegisterCallback+>;movl (%ebp), %ecx;movl (%ebp), %eax;movl (%eax,%ecx,), %ebx": 1,
                "jmp  <CmUnRegisterCallback+>;movl $, %ebx;movl %ebx, %eax;leal -(%ebp), %esp;popl %ebx": 5,
                "testl %eax, %eax;je  <CmUnRegisterCallback+>;movl %edi, (%esp);movl %eax, (%esp);movl (%ebp), %edx": 1,
                "movl -(%ebp), %ebx;cmpl $, (%ebx);je  <CmUnRegisterCallback+>;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl %edi, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax": 5,
                "jne  <CmUnRegisterCallback+>;cmpw $, (%eax);je  <CmUnRegisterCallback+>;movl $, %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%ebx), %eax;jmp  <CmUnRegisterCallback+>;addl $, %ebx;movzwl (%esi), %eax;cmpl %eax, %ebx": 1,
                "jmp  <CmUnRegisterCallback+>;movl $, %eax;movl %eax, -(%ebp);cmpl $-, -(%ebp);jne  <CmUnRegisterCallback+>": 1,
                "jne  <CmUnRegisterCallback+>;addl $, -(%ebp);addl $, -(%ebp);movl -(%ebp), %ecx;cmpl %ecx, (%edi)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %edi;movl $, -(%ebp);movl (%ebp), %eax": 1,
                "testl %eax, %eax;je  <CmUnRegisterCallback+>;testb $, (%eax);je  <CmUnRegisterCallback+>;leal (%eax), %esi": 1,
                "movl %edx, (%esp);movl %eax, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;movb $, -(%ebp)": 2,
                "calll  <IoCsqRemoveNextIrp+>;subl $, %esp;testl %eax, %eax;je  <CmUnRegisterCallback+>;cmpl $, (%edi)": 1,
                "movl $, -(%ebp);cmpl $, (%ebx);je  <CmUnRegisterCallback+>;movl (%ebx), %edx;movl %edx, -(%ebp)": 1,
                "movl %eax, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);movl %edi, (%esp)": 2,
                "movl %esi, (%esp);movl %edi, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp;testl %eax, %eax": 2,
                "movl %edi, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl -(%ebp), %edx;movl %edx, -(%ebp)": 1,
                "movl %edi, (%esp);calll *%eax;subl $, %esp;movl $, (%esp);movl -(%ebp), %eax": 1,
                "subl $, %esp;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp)": 2,
                "movl %eax, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;movl $, %eax;jmp  <CmUnRegisterCallback+>": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;testl %eax, %eax;jne - <CmUnRegisterCallback+>;jmp - <CmUnRegisterCallback+>": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl $, (%esp)": 14,
                "subl $, %esp;movzwl (%ebx), %eax;cmpw $, %ax;je  <CmUnRegisterCallback+>;cmpw $, %ax": 1,
                "jmp  <CmUnRegisterCallback+>;movl %ebx, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx": 1,
                "js  <CmUnRegisterCallback+>;cmpl $-, -(%ebp);je  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp)": 1,
                "je  <CmUnRegisterCallback+>;movl -(%ebp), %ecx;movzwl (%ecx), %eax;subl -(%ebp), %eax;shll $, %eax": 1,
                "calll  <memmove>;jmp  <CmUnRegisterCallback+>;subl -(%ebp), %eax;shll $, %eax;movl %eax, (%esp)": 1,
                "movzwl (%ecx,%edx), %ecx;cmpw $, %cx;ja  <CmUnRegisterCallback+>;movb %cl, (%esi,%eax);subl $, %edx": 1,
                "subl %edx, %eax;movw %ax, -(%ebp);cmpl $, (%ebx);jbe  <CmUnRegisterCallback+>;movl $, %eax": 1,
                "calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl $, %esi;jmp  <CmUnRegisterCallback+>;movl (%ebx), %eax": 1,
                "movl $, %esi;jmp  <CmUnRegisterCallback+>;movl (%ebx), %eax;testl %eax, %eax;je  <CmUnRegisterCallback+>": 1,
                "addl $, %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl %eax, (%ebp);cmpl $-, %eax;jne  <CmUnRegisterCallback+>;movl %esi, (%esp);movl %ebx, (%esp)": 1,
                "jne  <CmUnRegisterCallback+>;movl %esi, (%esp);movl %ebx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp": 1,
                "addl $, %ebx;movl (%ebp), %edx;movl (%edx,%ebx,), %eax;movl %eax, (%esp);movl %esi, (%esp)": 1,
                "jmp  <CmUnRegisterCallback+>;cmpw $, (%eax);je  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;cmpl $-, %eax;je  <CmUnRegisterCallback+>;movl %eax, (%esp);movl %esi, (%esp)": 1,
                "cmpl -, %eax;jae  <CmUnRegisterCallback+>;leal (%ebx,%edi,), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);movl -(%ebp), %eax;jmp  <CmUnRegisterCallback+>;leal (%edi), %ecx": 1,
                "movzwl %ax, %eax;movl %eax, (%esp);calll *(%ebx);subl $, %esp;movl %eax, -(%ebp)": 1,
                "movl %esi, -(%ebp);movb $, -(%ebp);movl (%ebx), %eax;testl %eax, %eax;je  <CmUnRegisterCallback+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebp), %edx;shrl $, %edx;movl %edx, -(%ebp)": 1,
                "movl %edx, (%esp);movl $, (%esp);movl %ebx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp": 2,
                "subl $, %esp;movl -(%ebp), %eax;addl $, %eax;movl (%edi,%eax,), %eax;movl %eax, -(%ebp)": 1,
                "movl (%edi,%eax,), %eax;movl %eax, -(%ebp);movzwl (%esi), %eax;cmpw $, %ax;jne  <CmUnRegisterCallback+>": 1,
                "jne  <CmUnRegisterCallback+>;movzwl (%esi), %eax;cmpl -, %eax;jb  <CmUnRegisterCallback+>;movl $, (%esp)": 2,
                "testw %cx, %cx;je  <CmUnRegisterCallback+>;movzwl %cx, %ecx;movl $, %eax;movl (%esi,%eax,), %edx": 1,
                "je  <CmUnRegisterCallback+>;movzwl %cx, %ecx;movl $, %eax;movl (%esi,%eax,), %edx;movl %edx, (%esi,%eax,)": 1,
                "jmp  <CmUnRegisterCallback+>;andb $-, %ah;movl $, -(%ebp);cmpw $, %ax;jne  <CmUnRegisterCallback+>": 1,
                "movzwl (%esi), %eax;cmpl -, %eax;jb  <CmUnRegisterCallback+>;movl $, (%esp);movl -(%ebp), %edx": 1,
                "calll *%edx;subl $, %esp;movl (%ebx), %eax;testl %eax, %eax;je  <CmUnRegisterCallback+>": 1,
                "jmp  <CmUnRegisterCallback+>;movl -(%ebp), %eax;addl $, %eax;movl (%edi,%eax,), %eax;movl %eax, -(%ebp)": 1,
                "movl %esi, (%esp);movl %edi, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl %eax, %ebx": 1,
                "je  <CmUnRegisterCallback+>;leal (%ebx), %eax;movl %eax, -(%ebp);movzwl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl %esi, %eax;addl $, %eax;cmpl $, (%ebx,%eax,);jne  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movzwl (%esi), %eax;cmpw $, %ax;je  <CmUnRegisterCallback+>": 1,
                "calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl -(%ebp), %eax;addl $, %eax;movl $, (%ebx,%eax,)": 1,
                "movl -(%ebp), %ecx;leal (%ecx,%edx,), %eax;movl %eax, (%esp);leal (%ecx,%edx,), %eax;movl %eax, (%esp)": 1,
                "movl $, (%eax);movw $, (%eax);movw $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "subl $, %esp;movl $, %edi;jmp  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <KeSetEventBoostPriority+>;movl $, (%ebx);movl (%ebx), %eax;movl %eax, (%esp);calll  <ExInitializeResourceLite>": 1,
                "calll  <CmUnRegisterCallback+>;subl $, %esp;movl $, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);testl %esi, %esi;je  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "movl -(%ebp), %edi;movl (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);movl $, (%esp)": 1,
                "movl %esi, %eax;lock;cmpxchgl %edx, -;cmpl %eax, %esi;je  <CmUnRegisterCallback+>": 2,
                "je  <CmUnRegisterCallback+>;movl $, %ecx;calll  <ExfReleasePushLock>;movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "calll  <wcslen>;leal (%ebx,%eax,), %ebx;movl $, (%esp);movzwl %bx, %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);movzwl %bx, %eax;movl %eax, (%esp);movl $, (%esp);calll  <ExAllocatePoolWithTag>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>;subl $, %esp;movl $, %ebx": 14,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, %edx;movl %esi, %eax;testb %al, %al": 1,
                "movl $, -(%ebp);movl $, %edx;movl %esi, %eax;testb %al, %al;je  <CmUnRegisterCallback+>": 1,
                "sbbl %esi, %esi;andl $, %esi;addl $, %esi;cmpb $, -;sbbl %ecx, %ecx": 1,
                "subl $, %esp;movl -(%ebp), %ebx;cmpl $, %ebx;je  <CmUnRegisterCallback+>;testl %ebx, %ebx": 1,
                "subl $, %esp;movl (%ebp), %eax;movl $, (%eax);jmp  <CmUnRegisterCallback+>;movw $, -(%ebp)": 1,
                "jbe  <CmUnRegisterCallback+>;movl %eax, %edx;shrl $, %edx;movl (%ebp), %ecx;movl %edx, (%ecx)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);leal -(%ebp), %ecx;movl %ecx, (%esp);calll  <RtlInitUnicodeString>": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <_wcsnicmp>;cmpl $, %eax": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);calll - <ZwCreateFile>;subl $, %esp;testl %eax, %eax": 1,
                "jns  <CmUnRegisterCallback+>;movl (%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esp);calll - <ZwClose>": 1,
                "movl , %eax;leal (%eax,%eax,), %ebx;shll $, %ebx;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <KeBugCheckEx>;movl %ebx, (%esp);movl $, (%esp)": 2,
                "addl $, %eax;movl -, %ecx;addl $, %edx;cmpl %eax, %ecx;ja - <CmUnRegisterCallback+>": 1,
                "movl %ebx, (%esp);movl $, (%esp);movl %eax, (%esp);calll  <memset>;cmpl $, -": 1,
                "cmpl %eax, -;ja - <CmUnRegisterCallback+>;calll - <CcGetFileObjectFromSectionPtrs+>;movl -(%ebp), %ebx;leave": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;imull $, (%edi), %ecx;movl $, %edx": 1,
                "divl -;leal (%edx,%edx,), %edx;movl , %eax;leal (%eax,%edx,), %esi;movl (%esi), %ebx": 1,
                "leal (%edx,%edx,), %edx;movl , %eax;leal (%eax,%edx,), %esi;movl (%esi), %ebx;testl %ebx, %ebx": 1,
                "subl $, %esp;cmpl $, -(%ebx);je  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp)": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %esi": 8,
                "jmp  <CmUnRegisterCallback+>;movw %bx, -(%ebp);movb $, -(%ebp);jmp  <CmUnRegisterCallback+>;movb $, -(%ebp)": 1,
                "movb $, -(%ebp);jmp  <CmUnRegisterCallback+>;movb $, -(%ebp);imull $, -(%ebp), %ecx;movl $, %edx": 1,
                "movzwl -(%ebp), %edx;cmpw %dx, (%edi);jne  <CmUnRegisterCallback+>;cmpb $, (%edi);je  <CmUnRegisterCallback+>": 1,
                "cmpw $-, (%ebx);jne  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testb %al, %al;jne  <CmUnRegisterCallback+>;movzwl -(%ebp), %ebx;addl $, %ebx;movl $, (%esp)": 1,
                "addl $, %ebx;movl $, (%esp);movl $, (%esp);movl %ebx, (%esp);calll  <CmUnRegisterCallback+>": 1,
                "testl %eax, %eax;jne  <CmUnRegisterCallback+>;movl -(%ebp), %eax;movl $, %edx;divl -": 1,
                "movzbl %al, %eax;subl $, %eax;andl %eax, %edx;testb $, -(%ebp);jne  <CmUnRegisterCallback+>": 9,
                "movzwl %ax, %eax;cmpl %ebx, %eax;ja - <CmUnRegisterCallback+>;movzbl -(%ebp), %eax;movb %al, (%edi)": 1,
                "movl (%eax), %edx;movl %edx, (%edi);leal (%edi), %edx;movl %edx, (%eax);movl -(%ebp), %eax": 1,
                "movl (%ebp), %ebx;movl %fs:, %esi;imull $, (%ebx), %ecx;movl $, %edx;movl %ecx, %eax": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;addl $, %ebx;movl %ebx, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpw $, (%edi);jne  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "cmpl (%edx), %eax;je  <CmUnRegisterCallback+>;movl %fs:, %edx;cmpl (%edx), %eax;jne  <CmUnRegisterCallback+>": 4,
                "subl $, %esp;jmp  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl $, %edx;divl -;leal (%edx,%edx,), %eax;movl -, %ecx;leal (%ecx,%eax,), %eax": 2,
                "lock;btsl $, (%esi);setb %al;testb %al, %al;je  <CmUnRegisterCallback+>": 5,
                "movl %esi, %ecx;calll  <ExfAcquirePushLockExclusive>;testb $, (%esi);jne  <CmUnRegisterCallback+>;movl $, (%esp)": 5,
                "shll $, %eax;addl -, %eax;movl %esi, (%eax);lock;subl $, (%edi)": 1,
                "andl $, (%ebx);jmp  <CmUnRegisterCallback+>;movl (%ebx), %edx;shrl $, %edx;andl $, %edx": 1,
                "movl (%ebx), %edx;shrl $, %edx;andl $, %edx;cmpl -, %edx;je  <CmUnRegisterCallback+>": 1,
                "andl $, %edx;cmpl -, %edx;je  <CmUnRegisterCallback+>;testl %eax, %eax;je  <CmUnRegisterCallback+>": 1,
                "lock;cmpxchgl %edx, (%ecx);cmpl %eax, %esi;je  <CmUnRegisterCallback+>;movl %edi, %ecx": 2,
                "je  <CmUnRegisterCallback+>;movl $, %ebx;movl (%edi,%ebx,), %eax;testb $, %al;je  <CmUnRegisterCallback+>": 1,
                "cmpl %ebx, (%esi);ja - <CmUnRegisterCallback+>;movl $, (%esp);movl (%esi), %eax;andl $-, %eax": 1,
                "movl (%eax), %edx;addl (%eax), %edx;movl %edx, (%ebx);movl (%ebx), %edx;movl (%edx), %eax": 1,
                "addl (%eax), %edx;movl %edx, (%ebx);movl (%ebx), %edx;movl (%edx), %eax;testl %eax, %eax": 1,
                "leal -(%edx), %ecx;testw %cx, %cx;je  <CmUnRegisterCallback+>;movl %edx, %eax;lock": 1,
                "leal (%eax,%edx,), %edi;lock;btsl $, (%edi);setb %al;testb %al, %al": 3,
                "movl (%ebp), %ebx;movzbl (%ebp), %esi;calll *-;cmpb $, %al;jbe  <CmUnRegisterCallback+>": 2,
                "subl $, %esp;movl %fs:, %edi;imull $, (%ebx), %ecx;movl $, %edx;movl %ecx, %eax": 1,
                "jne  <CmUnRegisterCallback+>;movl %ebx, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp;movl $, (%ebx)": 1,
                "movl $, (%eax);popl %ebp;retl $;pushl %ebp;movl %esp, %ebp": 7,
                "calll - <CcGetFileObjectFromSectionPtrs+>;movl %eax, %edi;testl %eax, %eax;je  <CmUnRegisterCallback+>;movl %eax, (%esp)": 1,
                "andl $, %ebx;movb %bl, -(%ebp);jne  <CmUnRegisterCallback+>;cmpl $, (%ebp);je  <CmUnRegisterCallback+>": 1,
                "movzbl (%ebx), %eax;testb $, %al;je  <CmUnRegisterCallback+>;cmpb $, -(%ebp);jne  <CmUnRegisterCallback+>": 1,
                "movw %ax, (%ebx);movl (%ecx), %eax;movw %ax, (%ebx);movl (%ecx), %eax;movl %eax, (%ebx)": 1,
                "movzwl (%edi), %eax;andl $, %eax;orl $, %eax;movw %ax, (%edi);jmp  <CmUnRegisterCallback+>": 1,
                "orl %edx, %eax;movl %eax, (%edi);cmpb $, -(%ebp);je  <CmUnRegisterCallback+>;movb $, (%edi)": 1,
                "cmpb $, -(%ebp);je  <CmUnRegisterCallback+>;movb $, (%edi);movl (%ebp), %ebx;movl (%ebx), %eax": 1,
                "movl (%ebx), %edx;movl %eax, (%edi);movl %edx, (%edi);movl (%ebx), %eax;movw %ax, (%edi)": 1,
                "movl (%ebx), %eax;movw %ax, (%edi);movl (%ebx), %eax;movw %ax, (%edi);movzwl (%ebx), %eax": 1,
                "jmp - <CmUnRegisterCallback+>;leal -(%ebp), %eax;movl %eax, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp": 1,
                "movl %eax, (%edi);testl %eax, %eax;jne - <CmUnRegisterCallback+>;jmp - <CmUnRegisterCallback+>;movl (%ebp), %ebx": 1,
                "jne - <CmUnRegisterCallback+>;jmp  <CmUnRegisterCallback+>;movl $, %edi;jmp - <CmUnRegisterCallback+>;testb $, (%edi)": 1,
                "testb $, (%edi);je - <CmUnRegisterCallback+>;jmp - <CmUnRegisterCallback+>;movl %edi, %eax;leal -(%ebp), %esp": 1,
                "jne  <CmUnRegisterCallback+>;addw (%eax), %si;jmp  <CmUnRegisterCallback+>;movzwl (%eax), %edx;movl %edx, (%esp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <CmUnRegisterCallback+>;addl $, %eax;movl -(%ebp), %edx": 1,
                "movl (%ebx), %eax;testl %eax, %eax;jne  <CmUnRegisterCallback+>;testb $, (%ebx);je  <CmUnRegisterCallback+>": 1,
                "je  <CmUnRegisterCallback+>;movl (%ebx), %edx;testl %edx, %edx;je  <CmUnRegisterCallback+>;testb $, (%ebx)": 1,
                "jne  <CmUnRegisterCallback+>;movl %eax, (%esp);movl %edx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp": 1,
                "movzwl -(%ebp), %edx;subl %edx, %ecx;andl $-, %ecx;movl -(%ebp), %edx;addl (%edx), %ecx": 1,
                "jne  <CmUnRegisterCallback+>;testb $, (%ebx);jne  <CmUnRegisterCallback+>;leal (%eax), %edi;testl %eax, %eax": 1,
                "testb $, (%ebx);jne  <CmUnRegisterCallback+>;leal (%eax), %edi;testl %eax, %eax;jne  <CmUnRegisterCallback+>": 2,
                "cmpw $, (%edx);je  <CmUnRegisterCallback+>;movl $, %edx;addl $, %edx;movzwl -(%edi,%edx,), %esi": 1,
                "imull $, (%eax), %ecx;movl $, %esi;movl %ecx, %eax;mull %esi;movl %ecx, %eax": 1,
                "movl $, (%ecx,%eax,);movl (%ebx), %eax;imull $, (%eax), %ecx;movl %ecx, %eax;mull %esi": 1,
                "je  <CmUnRegisterCallback+>;movl -(%ebp), %ecx;calll  <ExfReleasePushLock>;testb $, (%ebp);je  <CmUnRegisterCallback+>": 1,
                "calll  <ExfReleasePushLock>;testb $, (%ebp);je  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl (%ebx), %eax;movl (%eax), %edx;leal (%eax), %ecx;movl %ecx, (%ebx)": 1,
                "movl $, (%esi,%eax,);movl (%ebx), %eax;imull $, (%eax), %ecx;movl %ecx, %eax;mull %edi": 2,
                "imull $, (%eax), %ecx;movl %ecx, %eax;mull %edi;movl %ecx, %edi;subl %edx, %edi": 2,
                "jne  <CmUnRegisterCallback+>;movl -(%ebp), %edi;movl %ebx, %eax;lock;cmpxchgl %edx, (%edi)": 2,
                "subl $, %esp;jmp  <CmUnRegisterCallback+>;leal (,%edx,), %ecx;movl (%ebx), %edi;movl %ebx, %eax": 1,
                "testb %al, %al;je  <CmUnRegisterCallback+>;cmpb $, -;je  <CmUnRegisterCallback+>;calll  <CmUnRegisterCallback+>": 1,
                "jne - <CmUnRegisterCallback+>;leal -(%ebp), %esp;popl %ebx;popl %esi;popl %edi": 3,
                "movl $, (%esp);movl %eax, (%esp);movl %ebx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp": 2,
                "movl $, (%esp);movl (%edi), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <IoCsqRemoveNextIrp+>": 2,
                "subl $, %esp;cmpl $, (%esi);je  <CmUnRegisterCallback+>;movl $, (%esp);movl (%esi), %eax": 1,
                "movl -(%ebp), %esi;movl $, (%esp);movl (%esi,%edi,), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %edi;movl %edi, (%esp)": 1,
                "movl %ebx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;cmpw $, (%esi);je  <CmUnRegisterCallback+>": 1,
                "movl $, (%ebx);cmpl $, (%edi);je  <CmUnRegisterCallback+>;movl (%edi), %eax;movl %eax, (%esp)": 1,
                "jne  <CmUnRegisterCallback+>;movl $, %edx;movl $, %eax;lock;cmpxchgl %edx, -": 1,
                "leal (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 9,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl (%ebx), %eax;movl %eax, (%esp)": 3,
                "movl %eax, %esi;testb %al, %al;jne  <CmUnRegisterCallback+>;lock;addl $, -": 1,
                "calll  <KeSetTimer>;subl $, %esp;movzbl -, %eax;movb %al, ;movb %bl, -": 1,
                "calll  <CmUnRegisterCallback+>;subl $, %esp;movl -(%ebp), %ebx;leave;retl $": 1,
                "movl %edi, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;movl %eax, %ebx;calll  <PsRevertToSelf>": 1,
                "cmpw $, %ax;jbe  <CmUnRegisterCallback+>;movzwl %cx, %ecx;movl %ecx, (%esp);movl %edi, (%esp)": 1,
                "movl %esi, (%esp);calll  <memmove>;movzwl (%ebx), %eax;jmp  <CmUnRegisterCallback+>;movb %al, (%esi,%edx)": 1,
                "movl %esp, %ebp;pushl %esi;pushl %ebx;movl (%ebp), %edx;movl (%ebp), %eax": 4,
                "movl (%ebp), %eax;cmpl $, (%eax);je  <CmUnRegisterCallback+>;movzwl (%edx), %esi;movl %esi, %eax": 1,
                "popl %ebp;retl $;pushl %ebp;movl %esp, %ebp;movzwl (%ebp), %eax": 3,
                "addl $, %edi;cmpw %dx, %ax;je  <CmUnRegisterCallback+>;movzwl %ax, %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll  <RtlUpcaseUnicodeChar>;subl $, %esp;movzwl -(%ebp), %ecx;movzwl %ax, %edx": 1,
                "testw %bx, %bx;jne - <CmUnRegisterCallback+>;movzwl %bx, %ecx;movl %ecx, %eax;subl (%ebp), %eax": 1,
                "movl %ecx, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp;jmp  <CmUnRegisterCallback+>;movzwl (%eax), %edx": 2,
                "calll - <CmUnRegisterCallback+>;subl $, %esp;jmp  <CmUnRegisterCallback+>;movzwl (%eax), %edx;movw %dx, -(%ebp)": 2,
                "subl $, %esp;testl %eax, %eax;jne  <CmUnRegisterCallback+>;cmpl $, (%ebp);je  <CmUnRegisterCallback+>": 1,
                "movl %ebx, (%eax);movl (%ebp), %edx;movl $, (%edx);movl $, %ebx;jmp  <CmUnRegisterCallback+>": 1,
                "je  <CmUnRegisterCallback+>;movl (%ebp), %ecx;movl $, (%ecx);movl (%ebp), %eax;movl $, (%eax)": 1,
                "movl (%edx), %eax;testl %eax, %eax;jne - <CmUnRegisterCallback+>;jmp - <CmUnRegisterCallback+>;movl %ebx, %eax": 1,
                "je  <CmUnRegisterCallback+>;movzwl (%eax), %esi;testw %si, %si;jne  <CmUnRegisterCallback+>;movl (%ebp), %eax": 1,
                "jne  <CmUnRegisterCallback+>;movl (%ebp), %eax;movb $, (%eax);movl $, (%ebx);movw $, (%ebx)": 1,
                "movl $, %eax;jmp  <CmUnRegisterCallback+>;cmpw $, %si;jne  <CmUnRegisterCallback+>;addl $, %eax": 1,
                "movl %eax, (%ebx);movzwl (%edx), %ecx;testw %cx, %cx;je  <CmUnRegisterCallback+>;movl (%edx), %eax": 1,
                "testw %cx, %cx;je  <CmUnRegisterCallback+>;movl (%edx), %eax;cmpw $, (%eax);jne  <CmUnRegisterCallback+>": 1,
                "subl $, %esp;cmpl $-, %edi;je  <CmUnRegisterCallback+>;movl %edi, (%esp);movl (%ebp), %edx": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll  <CmUnRegisterCallback+>": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;testb %al, %al": 1,
                "movl %ecx, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;testb %al, %al;je  <CmUnRegisterCallback+>": 1,
                "movzwl -(%ebp), %edx;movw %dx, -(%ebp);movl -(%ebp), %eax;movw %ax, -(%ebp);movl %eax, (%esp)": 1,
                "calll  <ExFreePool>;subl $, %esp;movl -(%ebp), %eax;movl -(%ebp), %edx;movl (%ebp), %ecx": 1,
                "testl %edx, %edx;je  <CmUnRegisterCallback+>;movl %eax, (%esp);movl %ecx, (%esp);calll *%edx": 4,
                "subl $, %esp;movl (%ebp), %edi;movzbl (%ebp), %eax;movb %al, -(%ebp);movl (%ebp), %esi": 1,
                "je  <CmUnRegisterCallback+>;movl %eax, (%esp);movl %edi, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp": 1,
                "cmpl $-, %eax;jne  <CmUnRegisterCallback+>;jmp  <CmUnRegisterCallback+>;movl $, -(%ebp);movsbl -(%ebp), %eax": 1,
                "movl (%ebp), %edx;movzwl (%edx), %eax;movw %ax, (%ebx);movl $, (%ebx);movl $, (%ebx)": 1,
                "movl $, (%ebx);movl $, (%ebx);movl $, (%ebx);movl (%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %eax, (%esp);calll  <ObDereferenceObjectDeferDelete>;subl $, %esp;movl $, %esi;jmp  <CmUnRegisterCallback+>": 1,
                "addl $, %eax;movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "movl (%eax), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "subl $, %esp;movl $, %esi;jmp  <CmUnRegisterCallback+>;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %ebx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;testl %eax, %eax;jne  <CmUnRegisterCallback+>": 1,
                "movl %ebx, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp;cmpl $-, %eax;je  <CmUnRegisterCallback+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, %esi;jmp  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "movl (%edx), %eax;movl %eax, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);movl %edx, (%esp)": 2,
                "movl (%ebp), %ecx;cmpl %ecx, (%eax);je  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %eax;movzwl (%eax), %eax;movl -(%ebp), %edx;cmpl (%edx), %eax;je  <CmUnRegisterCallback+>": 1,
                "movzwl (%eax), %eax;movl -(%ebp), %edx;cmpl (%edx), %eax;je  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp);calll  <KeQuerySystemTime>;subl $, %esp": 2,
                "movl %edx, (%esp);movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);movl (%ebp), %ecx": 1,
                "movsbl %dl, %edi;movl (%ebp), %ecx;movl %ecx, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %esi, (%ebx);movl $, (%ebx);calll  <PsGetCurrentProcessId>;movl %eax, (%ebx);movl $, (%ebx)": 1,
                "movl %eax, (%esp);calll  <ObCheckObjectAccess>;subl $, %esp;testb %al, %al;jne  <CmUnRegisterCallback+>": 1,
                "calll - <CmUnRegisterCallback+>;subl $, %esp;movl -(%ebp), %eax;jmp  <CmUnRegisterCallback+>;movl $, %eax": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);movl -, %edi;cmpl (%ebp), %edi;je  <CmUnRegisterCallback+>": 1,
                "leal (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp": 1,
                "movl $, (%esp);movl $, (%esp);movzwl %ax, %eax;addl $, %eax;movl %eax, (%esp)": 2,
                "movl %ecx, -(%ebp);cmpl $-, %ecx;je  <CmUnRegisterCallback+>;movl %ecx, -(%ebp);movl %ecx, (%esp)": 1,
                "movl %ecx, -(%ebp);movl %ecx, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp": 2,
                "testl %eax, %eax;je  <CmUnRegisterCallback+>;movl -(%ebp), %ecx;movl %ecx, (%esp);movl %edx, (%esp)": 3,
                "movl %edx, (%esp);calll *%eax;subl $, %esp;movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "calll *%eax;subl $, %esp;movl -(%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx": 1,
                "subl $, %esp;movl $, %ebx;jmp  <CmUnRegisterCallback+>;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl %esi, %ecx": 1,
                "movl %edx, (%esp);movl %eax, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %edx": 1,
                "subl $, %esp;jmp  <CmUnRegisterCallback+>;movl (%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll - <CmUnRegisterCallback+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, %ebx;jmp  <CmUnRegisterCallback+>;movw $, (%eax)": 1,
                "movw $, (%eax);movl (%ebp), %edx;movl %edx, (%eax);leal (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edx, (%eax);leal (%ebp), %eax;movl %eax, (%esp);leal (%esi), %eax;movl %eax, (%esp)": 1,
                "orw $, (%esi);leal -(%ebp), %eax;movl %eax, (%esp);calll  <KeQuerySystemTime>;subl $, %esp": 1,
                "calll  <KeQuerySystemTime>;subl $, %esp;movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, (%esi)": 1,
                "subl $, %esp;movl (%esi), %eax;movl (%eax), %eax;cmpl (%eax), %edi;je  <CmUnRegisterCallback+>": 1,
                "movl %eax, (%ecx);movl %edx, (%ecx);movzwl (%ebp), %eax;movzwl %ax, %edx;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;cmpl %edx, (%ecx);jae  <CmUnRegisterCallback+>;movl %edx, (%ecx);movl (%esi), %edx": 1,
                "subl $, %esp;jmp  <CmUnRegisterCallback+>;movl (%edi), %eax;testl %eax, %eax;je  <CmUnRegisterCallback+>": 1,
                "calll *%eax;subl $, %esp;movl (%ebx), %eax;movl (%eax), %eax;movl %eax, (%esi)": 1,
                "movl (%eax), %eax;movl (%ebp), %edx;movl %eax, (%edx);movl %eax, (%esp);movl (%esi), %eax": 1,
                "jmp  <CmUnRegisterCallback+>;movl $, (%edi);movl (%ebp), %eax;movl $, (%eax);movl -(%ebp), %ebx": 1,
                "movl (%ebp), %eax;movl $, (%eax);calll  <CmUnRegisterCallback+>;movl (%ebx), %eax;movl (%eax), %edx": 1,
                "movl %eax, %ecx;shrw %cx;movzwl %cx, %ecx;movl (%ebx), %edx;cmpw $, -(%edx,%ecx,)": 1,
                "subl $, %eax;movw %ax, (%ebx);testw %ax, %ax;je  <CmUnRegisterCallback+>;movl %eax, %ecx": 1,
                "movl %esi, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp;movl -(%ebp), %ebx;testl %ebx, %ebx": 1,
                "movl -(%ebp), %eax;movl $, %esi;testb $, (%eax);jne  <CmUnRegisterCallback+>;testb $, (%eax)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp;cmpb $, %al": 2,
                "testb $, (%edx);jne  <CmUnRegisterCallback+>;movl %esi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <CmUnRegisterCallback+>;subl $, %esp;cmpl $, -(%ebp);jne  <CmUnRegisterCallback+>;movl $, (%esp)": 3,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %ebx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 3,
                "cmpl $, %edi;jg  <CmUnRegisterCallback+>;addl %ecx, %eax;movw %ax, -(%ebp);movzwl -(%ebp), %eax": 1,
                "addl %ecx, %eax;movw %ax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl %edx, (%esp)": 1,
                "calll - <CmUnRegisterCallback+>;subl $, %esp;calll  <CmUnRegisterCallback+>;jmp  <CmUnRegisterCallback+>;movl $, %esi": 1,
                "subl $, %esp;movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp)": 1,
                "cmpl $, -(%ebp);je  <CmUnRegisterCallback+>;cmpl $, -(%ebp);je  <CmUnRegisterCallback+>;testl %eax, %eax": 1,
                "orl %eax, %edi;jns  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlSubAuthoritySid>;subl $, %esp;movl $, (%eax);movl $, (%esp);movl -(%ebp), %eax": 4,
                "movl %eax, (%esp);calll  <RtlSubAuthoritySid>;subl $, %esp;movl $, (%eax);movl $, (%esp)": 37,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl %edi, %eax;movl $, %ebx;movl (%eax), %edx": 1,
                "movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <KeBugCheckEx>": 14,
                "addl $, %edi;cmpl -(%ebp), %edi;jne - <CmUnRegisterCallback+>;movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl $, (%esp);calll  <DbgPrint>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>": 17,
                "movl %eax, (%esp);calll - <ZwClose>;subl $, %esp;movl $, %eax;jmp  <CmUnRegisterCallback+>": 1,
                "movl $, %eax;jmp  <CmUnRegisterCallback+>;movl (%ebp), %eax;movl %eax, (%esp);calll  <wcslen>": 1,
                "calll  <ObCloseHandle>;subl $, %esp;movl $, %eax;testl %ebx, %ebx;jns  <CmUnRegisterCallback+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl %esi, (%esp);calll - <CmUnRegisterCallback+>": 1,
                "movl $, %edi;jmp  <CmUnRegisterCallback+>;movb $, (%edi);movl $, %edi;movzbl %dl, %ecx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 12,
                "movl $, (%esp);movl %ecx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "testl %edi, %edi;jne  <CmUnRegisterCallback+>;movl $, (%esp);movl %eax, (%esp);calll  <IoCsqRemoveNextIrp+>": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, (%ebx);movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "calll  <RtlInitUnicodeString>;subl $, %esp;movzwl -, %eax;movl %eax, (%esp);movl , %eax": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <CmUnRegisterCallback+>;movl %eax, (%esp);calll  <NtClose>": 7,
                "movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 40,
                "movw $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 41,
                "testl %eax, %eax;jns  <CmUnRegisterCallback+>;movl (%ebp), %eax;cmpl $, (%eax);jne  <CmUnRegisterCallback+>": 1,
                "jns  <CmUnRegisterCallback+>;movl (%ebp), %eax;cmpl $, (%eax);jne  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "testl %eax, %eax;js  <CmUnRegisterCallback+>;cmpl $, -(%ebp);je  <CmUnRegisterCallback+>;movl $, (%esp)": 2,
                "subl $, %esp;testl %ebx, %ebx;jns  <CmUnRegisterCallback+>;movl $, -(%ebp);jmp  <CmUnRegisterCallback+>": 1,
                "calll  <NtClose>;subl $, %esp;movl %ebx, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movl (%ebp), %esi;movzbl (%ebp), %ebx;leal -(%ebp), %edi;movl $, %ecx;movl $, %eax": 1,
                "movzbl (%ebp), %ebx;leal -(%ebp), %edi;movl $, %ecx;movl $, %eax;rep  stosl %eax, %es:(%edi)": 1,
                "subl $, %esp;testl %eax, %eax;js  <CmUnRegisterCallback+>;movb $, (%esi);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>": 3,
                "movl %eax, (%esp);calll - <ZwClose>;subl $, %esp;movl $, %eax;leal -(%ebp), %esp": 1,
                "calll  <RtlInitAnsiString>;subl $, %esp;movzwl -(%ebp), %eax;leal (%eax,%eax), %esi;movl $, (%esp)": 1,
                "movl %esi, (%esp);movl $, (%esp);calll  <ExAllocatePoolWithTag>;subl $, %esp;testl %eax, %eax": 1,
                "movl $, %edi;movl -(%ebp), %edx;movl (%edx), %eax;movl (%eax), %eax;movl %eax, ": 1,
                "movl %eax, %ebx;movl $, (%esp);leal -(%ebp), %esi;movl %esi, (%esp);calll  <RtlInitUnicodeString>": 2,
                "movl $, %eax;testl %ebx, %ebx;je  <CmUnRegisterCallback+>;movw $, (%ebx);movw $, (%ebx)": 1,
                "movl $, (%ebx);movw $, (%ebx);movl $, (%ebx);movl $, (%ebx);movl $, (%ebx)": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp;movw %ax, (%ebx)": 1,
                "movl $, (%esp);movl , %eax;movl %eax, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp": 1,
                "calll - <CmUnRegisterCallback+>;movl %eax, %esi;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl %eax, (%esp);movl $, (%esp);calll  <ObCreateObject>;subl $, %esp;movl %eax, %ebx": 3,
                "movl $, (%esp);movl %ebx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl , %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl , %eax;movl %eax, (%esp);calll  <ObReferenceObjectByHandle>": 1,
                "movl %eax, (%esp);calll  <ObReferenceObjectByHandle>;subl $, %esp;movl %eax, %edx;notl %edx": 1,
                "movw $, -(%ebp);movl $, -(%ebp);cmpb $, -;je  <CmUnRegisterCallback+>;movl $, -(%ebp)": 1,
                "js  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <ExAllocatePoolWithTag>": 1,
                "calll - <ZwClose>;subl $, %esp;testl %ebx, %ebx;jns  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "movl %eax, (%esp);leal (%edi), %eax;movl %eax, (%esp);movl %esi, (%esp);calll  <memmove>": 1,
                "pushl %ebx;subl $, %esp;movl $, -(%ebp);movl $, -(%ebp);calll *-": 1,
                "movl %ebx, (%esp);movl %esi, (%esp);calll  <RtlAppendStringToString>;subl $, %esp;movzwl -(%ebp), %edx": 1,
                "movl %esi, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;movzwl -(%ebp), %edx;movw %dx, -(%ebp)": 1,
                "imull $, (%ebp), %eax;movb $, -(%eax);movl $, (%esp);leal -(%eax), %edx;movl %edx, (%esp)": 1,
                "testl %eax, %eax;js  <CmUnRegisterCallback+>;movl -(%ebp), %eax;cmpl $, (%eax);jne  <CmUnRegisterCallback+>": 1,
                "movl -(%ebp), %edx;movl %edx, (%eax);andl $-, (%eax);movl -(%ebp), %edx;cmpl %edx, (%eax)": 1,
                "movl %edx, -(%eax);cmpl -(%eax), %edx;je  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <KeSetEvent>;subl $, %esp;movl %ebx, (%esp);calll  <PsTerminateSystemThread>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlAppendStringToString>;subl $, %esp;movl $, (%esp)": 1,
                "movl %eax, (%esp);calll  <RtlAppendStringToString>;subl $, %esp;movl $, (%esp);movl %ebx, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl %edi, (%esp);calll  <PsCreateSystemThread>;subl $, %esp": 1,
                "cmpl $, -(%ebx);jne  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll  <RtlAppendStringToString>;subl $, %esp;movzwl -(%ebp), %edx;shrw %dx": 1,
                "movl %eax, (%esp);movl $, (%esp);movl $, (%esp);calll  <KeBugCheckEx>;movl -(%ebx), %eax": 1,
                "cmpl $, %edi;jne - <CmUnRegisterCallback+>;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll  <ExFreePoolWithTag>;subl $, %esp;movl $, (%esp);movl $, (%esp)": 1,
                "calll - <CmUnRegisterCallback+>;calll - <CcGetFileObjectFromSectionPtrs+>;calll - <CcGetFileObjectFromSectionPtrs+>;calll - <CcGetFileObjectFromSectionPtrs+>;calll - <CcGetFileObjectFromSectionPtrs+>": 1,
                "calll - <CmUnRegisterCallback+>;testl %eax, %eax;jns  <CmUnRegisterCallback+>;movl $, (%esp);movl %eax, (%esp)": 1,
                "calll  <KeBugCheckEx>;calll - <CmUnRegisterCallback+>;testb %al, %al;jne  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "leal -(%ebp), %esi;movl %esi, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;movl $, -(%ebp)": 7,
                "calll  <CmUnRegisterCallback+>;subl $, %esp;testl %eax, %eax;jns  <CmUnRegisterCallback+>;movl $, (%esp)": 2,
                "jne  <CmUnRegisterCallback+>;movl (%ebx), %eax;movl %eax, (%esp);calll  <ExIsResourceAcquiredExclusiveLite>;subl $, %esp": 2,
                "cmpb $, -;je  <CmUnRegisterCallback+>;cmpb $, (%ebx);je  <CmUnRegisterCallback+>;movl %ebx, (%esp)": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;subl $, %esp;cmpb $, -": 1,
                "js  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "subl $, %esp;testl %eax, %eax;jns  <CmUnRegisterCallback+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "testl %eax, %eax;jns  <CmUnRegisterCallback+>;movl -(%ebp), %eax;movl %eax, (%esp);calll  <NtClose>": 1,
                "calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl %eax, %edi;cmpl $-, %eax;je  <CmUnRegisterCallback+>": 1,
                "movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl %edi, (%esp);movl %ebx, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <ExAllocatePool>;subl $, %esp;movl -(%ebp), %edx": 1,
                "movl $, %esi;leal -(%ebp), %eax;cmpl %eax, -(%ebp);je  <CmUnRegisterCallback+>;movl %eax, (%esp)": 1,
                "calll  <NtClose>;subl $, %esp;jmp  <CmUnRegisterCallback+>;movl $, %esi;movl %esi, %eax": 1,
                "divl -;leal (%edx,%edx,), %edx;movl , %eax;leal (%eax,%edx,), %esi;movl $, %edx": 1,
                "movl $, -(%ebp);jmp  <CmUnRegisterCallback+>;movl $, -(%ebp);subl $, %edx;movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %edx;movzwl (%edx), %eax": 1,
                "movl -(%ebp), %edx;movzwl (%edx), %eax;movw %ax, (%ecx);movzwl (%edx), %eax;movw %ax, (%ecx)": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <CmUnRegisterCallback+>;jmp - <CmUnRegisterCallback+>": 3,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;jmp  <CmUnRegisterCallback+>": 1,
                "movl (%ebx), %esi;testl %esi, %esi;je  <CmUnRegisterCallback+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "calll - <CmUnRegisterCallback+>;subl $, %esp;movl %esi, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp": 1,
                "mull %ebx;movl %edi, %ebx;subl %edx, %ebx;shrl %ebx;addl %edx, %ebx": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl -, %ecx;movl -, %edi": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;imull $, (%ebp), %ecx;movl $, %esi": 1,
                "movl $, %esi;movl %ecx, %eax;mull %esi;movl %ecx, %ebx;subl %edx, %ebx": 1,
                "movl %edx, -(%ebp);imull $, (%ebp), %ecx;movl %ecx, %eax;mull %esi;movl %ecx, %esi": 1,
                "subl %edx, %esi;shrl %esi;addl %esi, %edx;movl %edx, %edi;shrl $, %edi": 1,
                "addl -, %edx;movl (%eax), %ecx;cmpl %ecx, (%edx);je  <CmUnRegisterCallback+>;calll - <CmUnRegisterCallback+>": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;cmpb $, -;jne  <CmUnRegisterCallback+>": 1,
                "movl %ebx, (%esp);calll  <wcscat>;movl $, (%esp);movl %ebx, (%esp);calll  <wcscat>": 1,
                "calll  <wcscat>;movl %ebx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlInitUnicodeString>": 1,
                "cmpl $-, %eax;je  <CmUnRegisterCallback+>;testb $, %al;je  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "subl $, %esp;movb $, (%esi);movl (%ebp), %eax;movl $, (%eax);movl $, %eax": 1,
                "movl %eax, %edx;movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax;testl %edx, %edx": 2,
                "addl -, %eax;movl %esi, (%eax);jmp - <CmUnRegisterCallback+>;leal -(%ebp), %esp;popl %ebx": 1,
                "movl (%eax), %eax;cmpb $, (%ebp);je  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp)": 1,
                "je  <CmUnRegisterCallback+>;movl %edi, (%esi);movl %eax, (%ebx);movb $, %dl;movl %edx, %eax": 1,
                "jmp  <CmUnRegisterCallback+>;movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);movl %edi, (%esp)": 1,
                "movl %ecx, (%esp);calll *%edx;subl $, %esp;movl $, (%esi);movl %esi, (%esp)": 1,
                "jne  <CmUnRegisterCallback+>;movl -(%ebp), %esi;movl %edi, -(%ebp);movl -(%ebp), %edi;movl (%ebp), %eax": 1,
                "cmpl (%ebx), %edi;jne - <CmUnRegisterCallback+>;movl -(%ebp), %edi;movl (%ebp), %eax;movl $, (%eax)": 1,
                "leal (%ebx), %eax;movl %eax, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp;jmp  <CmUnRegisterCallback+>": 1,
                "cmpl $, %esi;je  <CmUnRegisterCallback+>;cmpl $, %esi;jne  <CmUnRegisterCallback+>;jmp  <CmUnRegisterCallback+>": 1,
                "movl (%ebx), %edx;movl %edx, (%ecx);movl %eax, (%ecx);movl (%ebp), %edi;subl $, %edi": 1,
                "movl %edx, (%ecx);testb $, (%ebx);je  <CmUnRegisterCallback+>;movzwl (%ebx), %edx;movl %edx, (%esp)": 2,
                "addl $, %ebx;movl %ebx, (%esp);movl %eax, (%esp);movl (%ebp), %edi;addl $, %edi": 1,
                "movl $, %esi;jmp  <CmUnRegisterCallback+>;movl %eax, (%esp);addl $, %ebx;movl %ebx, (%esp)": 1,
                "movl %eax, (%esp);addl $, %ebx;movl %ebx, (%esp);movl (%ebp), %edi;addl $, %edi": 1,
                "movl (%ebp), %edi;addl $, %edi;movl %edi, (%esp);calll  <memmove>;movl $, %esi": 1,
                "movl %eax, (%ecx);movl (%ebp), %edx;subl $, %edx;cmpl %edx, %eax;ja  <CmUnRegisterCallback+>": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;addl $, %eax;movl %eax, (%esp);calll - <CmUnRegisterCallback+>": 1,
                "subl $, %esp;jmp  <CmUnRegisterCallback+>;movl %eax, (%esp);leal (%ebx), %eax;movl %eax, (%esp)": 1,
                "cmpb $, -(%ebp);je  <CmUnRegisterCallback+>;addl $, %ebx;movl %ebx, -(%ebp);movl $, %esi": 1,
                "addl $, %ebx;movl %ebx, -(%ebp);movl $, %esi;jmp  <CmUnRegisterCallback+>;leal -(%ebp), %eax": 1,
                "movl (%ebp), %ecx;movl $, (%ecx);movl -(%ebp), %edx;movl (%ebp), %eax;movl %edx, (%eax)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;testl %eax, %eax;je  <CmUnRegisterCallback+>": 2,
                "cmpl %edi, %eax;jb  <CmUnRegisterCallback+>;movl (%ebp), %ecx;movl (%ecx), %eax;jmp  <CmUnRegisterCallback+>": 1,
                "je  <CmUnRegisterCallback+>;movl %edi, (%esp);movl %eax, (%esp);movl (%ebp), %edi;addl $, %edi": 1,
                "je  <CmUnRegisterCallback+>;cmpl $-, %eax;je  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp)": 1,
                "jne  <CmUnRegisterCallback+>;movl (%eax), %edi;andl $, %edi;cmpl (%ebp), %edi;jne  <CmUnRegisterCallback+>": 1,
                "cmpl $, (%eax);jbe  <CmUnRegisterCallback+>;subl $, %ebx;cmpl $, %ebx;jbe  <CmUnRegisterCallback+>": 1,
                "cmpl $-, %esi;jne - <CmUnRegisterCallback+>;leal (%esi), %esi;jmp  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %edi;calll *-;cmpb $, %al": 6,
                "movl %ebx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl $, %eax;leal -(%ebp), %esp": 1,
                "subl $, %esp;testb %al, %al;jne  <CmUnRegisterCallback+>;cmpl $-, -(%ebp);je  <CmUnRegisterCallback+>": 1,
                "testl %eax, %eax;je  <CmUnRegisterCallback+>;movl (%ebx), %eax;movl %eax, (%edi);movl $, %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;movl %esi, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl %esi, %esi;js  <CmUnRegisterCallback+>": 1,
                "cmpl $, %eax;jbe  <CmUnRegisterCallback+>;movl (%edi), %eax;movl %eax, (%esp);movl (%ebp), %edx": 1,
                "cmpl %esi, %eax;jne - <CmUnRegisterCallback+>;movl (%ebp), %eax;movl %eax, (%ebx,%esi,);movl -(%ebp), %edx": 1,
                "calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl $, %edx;testb %al, %al;jne  <CmUnRegisterCallback+>": 1,
                "jbe  <CmUnRegisterCallback+>;leal -(%ebx), %eax;cmpl $, %eax;jbe  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %edx;movl (%ebp), %eax;movl (%eax,%edx,), %eax;movl (%ebp), %edx": 2,
                "movl (%edx), %ecx;movl %ecx, -(%ebp);movl $, -(%ebp);movl $, (%esp);leal -(%ebp), %edx": 2,
                "movl $, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 3,
                "movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);leal -(%ebp), %edx;movl %edx, (%esp)": 3,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax": 3,
                "movl %ebx, (%esp);calll - <ZwSetInformationFile>;subl $, %esp;movl $, %edx;testl %eax, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpb $, -(%ebp);jne  <CmUnRegisterCallback+>;jmp  <CmUnRegisterCallback+>": 3,
                "movl %eax, (%esp);calll  <ProbeForRead>;subl $, %esp;movl -(%ebp), %eax;cmpl %eax, (%ebp)": 1,
                "movl -(%ebp), %eax;cmpl %eax, (%ebp);ja  <CmUnRegisterCallback+>;cmpl -, %eax;jb  <CmUnRegisterCallback+>": 8,
                "movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl $, %eax;leal -(%ebp), %ecx": 32,
                "movl %eax, (%esp);movl $, (%esp);movsbl -(%ebp), %eax;movl %eax, (%esp);movl , %eax": 11,
                "movl $, %eax;rep  stosl %eax, %es:(%edi);movl %fs:, %eax;movl (%eax), %eax;movzbl (%eax), %ebx": 2,
                "leal -(%ebp), %edx;movl %edx, (%esp);movl (%eax), %eax;movsbl (%eax), %eax;movl %eax, (%esp)": 21,
                "movl %eax, %ebx;testl %eax, %eax;js  <CmUnRegisterCallback+>;movl (%ebp), %eax;addl $, %eax": 3,
                "movl %edx, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "calll - <CcGetFileObjectFromSectionPtrs+>;movl %eax, %ebx;testl %eax, %eax;js  <CmUnRegisterCallback+>;movl (%ebp), %eax": 1,
                "testb %bl, %bl;jne  <CmUnRegisterCallback+>;nop;jmp  <CmUnRegisterCallback+>;movl -(%ebp), %eax": 1,
                "movl $, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl %esi, %eax": 1,
                "movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "testl %eax, %eax;js  <CmUnRegisterCallback+>;calll - <CmUnRegisterCallback+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "jne  <CmUnRegisterCallback+>;movl (%ebx), %eax;shrl $, %eax;testl %eax, %eax;jg  <CmUnRegisterCallback+>": 1,
                "subl %edx, %ebx;shrl %ebx;addl %ebx, %edx;shrl $, %edx;imull $, %edx, %edx": 1,
                "addl %ebx, %edx;shrl $, %edx;imull $, %edx, %edx;movl %ecx, %eax;subl %edx, %eax": 1,
                "calll  <DbgPrint>;movl $, %esi;testl %eax, %eax;je  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "je  <CmUnRegisterCallback+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "movl %eax, (%esp);movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 3,
                "cmpw $, %bx;ja  <CmUnRegisterCallback+>;leal -(%ebx), %eax;cmpw $, %ax;ja  <CmUnRegisterCallback+>": 1,
                "js  <CmUnRegisterCallback+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp)": 2,
                "jmp  <CmUnRegisterCallback+>;movl $, (%esp);movl %eax, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp": 1,
                "calll  <RtlAssert>;subl $, %esp;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <CmUnRegisterCallback+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl %ebx, %eax;shrl %eax": 1,
                "calll  <ObfReferenceObject>;calll  <PsGetCurrentThread>;movl -(%ebp), %ecx;movl %eax, (%ecx);movl (%ebp), %ebx": 1,
                "calll  <KeInitializeEvent>;subl $, %esp;movl (%ebp), %ecx;movl -(%ebp), %eax;movl %ecx, (%eax)": 1,
                "jne  <CmUnRegisterCallback+>;movl $, (%esp);movl $, (%esp);movl %ebx, (%esp);calll  <KeSetEvent>": 1,
                "jne  <CmUnRegisterCallback+>;jmp  <CmUnRegisterCallback+>;movl $, %esi;calll *-;cmpb $, %al": 1,
                "movl -(%ebp), %eax;movl (%eax), %esi;jmp  <CmUnRegisterCallback+>;testl %esi, %esi;jns  <CmUnRegisterCallback+>": 1,
                "movl $, %esi;leal -(%ebp), %eax;movl %eax, -(%ebp);jmp - <CmUnRegisterCallback+>;cmpb $, -(%ebp)": 1,
                "movb $, -(%ebp);testb %bl, %bl;je  <CmUnRegisterCallback+>;calll  <CmUnRegisterCallback+>;movb %al, -(%ebp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 2,
                "movzwl (%eax), %ecx;movw %cx, (%edi);addl $, %edi;addl $, %eax;subl $, %edx": 1,
                "cmpb $, -(%ebp);je  <CmUnRegisterCallback+>;calll  <CmUnRegisterCallback+>;movl %ebx, %eax;leal -(%ebp), %esp": 1,
                "testb %al, %al;je  <CmUnRegisterCallback+>;calll  <CmUnRegisterCallback+>;movl %ebx, %eax;leal -(%ebp), %esp": 1,
                "jne  <CmUnRegisterCallback+>;movl %ebx, %ecx;calll  <ObfReferenceObject>;movl %ebx, (%esi);calll *-": 1,
                "calll  <ObfReferenceObject>;movl %ebx, (%esi);calll *-;cmpb $, %al;je  <CmUnRegisterCallback+>": 1,
                "movl (%ebp), %esi;rep  movsl (%esi), %es:(%edi);cmpb $, -(%ebp);sete %cl;movzbl %cl, %ecx": 1,
                "movzbl %cl, %ecx;movl %ecx, -(%ebp);testb %dl, %dl;je  <CmUnRegisterCallback+>;movzbl %bl, %edx": 1,
                "movzbl %al, %eax;subl $, %eax;andl %ecx, %eax;testl %eax, %eax;je  <CmUnRegisterCallback+>": 1,
                "calll  <RtlAssert>;subl $, %esp;testl %ebx, %ebx;je  <CmUnRegisterCallback+>;movl (%ebx), %eax": 1,
                "movl %eax, (%esp);calll  <RtlImageNtHeader>;subl $, %esp;testl %eax, %eax;je  <CmUnRegisterCallback+>": 7,
                "movl %edx, -(%ebp);movl (%eax), %edx;movl %edx, -(%ebp);leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %eax, (%esp);calll  <MmGrowKernelStack+>;subl $, %esp;testl %eax, %eax;js  <CmUnRegisterCallback+>": 3,
                "movl %eax, (%esp);calll - <ZwOpenFile>;subl $, %esp;testl %eax, %eax;jns  <CmUnRegisterCallback+>": 1,
                "jns  <CmUnRegisterCallback+>;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <ExFreePool>": 1,
                "movl %eax, %ebx;movb $, -(%ebp);movl $, -(%ebp);jmp  <CmUnRegisterCallback+>;testl %ebx, %ebx": 1,
                "movl %eax, (%esp);calll  <CmUnRegisterCallback+>;subl $, %esp;movl %eax, -(%ebp);movl (%ebp), %edx": 1,
                "testl $, %esi;je  <CmUnRegisterCallback+>;movl (%ebx), %edx;andl $-, %edx;leal -(%edx), %ecx": 1,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;jne - <CmUnRegisterCallback+>;jmp  <CmUnRegisterCallback+>": 1,
                "movl %ebx, (%eax);jmp  <CmUnRegisterCallback+>;movl $, %edi;jmp  <CmUnRegisterCallback+>;movl $, -(%ebp)": 1,
                "movl %esi, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl %ebx, (%esp);movl (%ebp), %eax": 1,
                "movl %edx, (%esp);movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <CmUnRegisterCallback+>": 1,
                "jmp - <CmUnRegisterCallback+>;cmpl $, -(%ebp);jne - <CmUnRegisterCallback+>;jmp - <CmUnRegisterCallback+>;movl %edi, %eax": 1,
                "movl %eax, %ebx;movl $, %edi;testl %eax, %eax;js  <CmUnRegisterCallback+>;movl (%ebp), %eax": 1,
                "movl $, %edi;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %ecx, (%edx);movl (%eax), %ecx;movl %ecx, (%edx);movl (%eax), %ecx;movl %ecx, (%edx)": 8,
                "sete %cl;movzbl %cl, %ecx;leal (%ecx,%ecx), %ecx;movl %ecx, (%edx);leal (%edx), %edi": 1,
                "je  <CmUnRegisterCallback+>;leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <KeStackAttachProcess>": 1,
                "leal (%edi), %ecx;calll  <KeWaitForSingleObject+>;movl %fs:, %eax;movl (%eax), %eax;movl %eax, (%edi)": 1,
                "subl $, %esp;movl $, (%edi);movl (%edi), %ebx;movl $, %eax;lock": 2,
                "cmpl (%ebx), %edi;jne  <CmUnRegisterCallback+>;movl $, (%ebx);movb $, -(%ebp);calll *-": 1,
                "testb $, (%edi);je  <CmUnRegisterCallback+>;movl $, (%esp);movl %ebx, (%esp);calll  <PsSetJobUIRestrictionsClass+>": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll  <PsSetJobUIRestrictionsClass+>;subl $, %esp;movl %edi, %ecx": 1,
                "jne  <CmUnRegisterCallback+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl , %eax": 1,
                "js  <CmUnRegisterCallback+>;movl -(%ebp), %eax;movl %eax, (%ebx);addl $, %ebx;jmp  <CmUnRegisterCallback+>": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll  <PsTerminateSystemThread+>;subl $, %esp": 1,
                "movl %eax, (%esp);movl %edi, (%esp);calll  <PsTerminateSystemThread+>;subl $, %esp;movl %eax, %ebx": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl (%ebp), %ebx;movl %ebx, (%esp)": 1,
                "jmp - <CmUnRegisterCallback+>;movb $, -(%ebp);movl $, -(%ebp);jmp  <CmUnRegisterCallback+>;movl %esi, -(%ebp)": 1,
                "movl $, %ecx;calll *-;movl %eax, %ebx;movl (%ebp), %edx;movl (%edx), %eax": 1,
                "movl %eax, %ebx;movl (%ebp), %edx;movl (%edx), %eax;leal -(%eax), %edx;movl (%ebp), %ecx": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;leal -(%eax), %edx;movl (%ebp), %ecx;lock": 2,
                "movl %ebx, (%edx);cmpl $, -(%ebp);js  <CmUnRegisterCallback+>;testb $, (%edx);je  <CmUnRegisterCallback+>": 1,
                "cmpl $, (%edx);je  <CmUnRegisterCallback+>;testb $, (%edx);jne  <CmUnRegisterCallback+>;movl (%ebx), %eax": 1,
                "subl $, %esp;movb $, -(%ebp);movl $, (%ebx);movl -(%ebp), %edx;lock": 1,
                "movl %eax, %edx;movl $, %eax;lock;xaddl %eax, (%edx);addl $, %eax": 1,
                "addl $, %eax;testl %eax, %eax;jg  <CmUnRegisterCallback+>;movl $, (%esp);movl %edx, %eax": 1,
                "addl $, %eax;movl %eax, (%esp);calll  <KeSetEventBoostPriority>;subl $, %esp;movzbl %bl, %ecx": 1,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <CmUnRegisterCallback+>;calll  <ObfDereferenceObject>;movl -(%ebp), %eax": 1,
                "je  <CmUnRegisterCallback+>;calll  <ObfDereferenceObject>;movl -(%ebp), %eax;leal -(%ebp), %edx;cmpl %edx, %eax": 1,
                "addl $, %eax;testl %eax, %eax;jg  <CmUnRegisterCallback+>;movl $, (%esp);leal (%ebx), %eax": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);movl $, -(%ebp)": 3,
                "movl $, (%esp);movl %ebx, (%esp);calll  <ObOpenObjectByPointer>;subl $, %esp;movl %eax, %esi": 1,
                "calll  <ObOpenObjectByPointer>;subl $, %esp;movl %eax, %esi;testl %eax, %eax;jns  <CmUnRegisterCallback+>": 1,
                "movl $, (%eax);movl $, (%eax);movl $, (%esp);movl $, (%esp);addl $, %eax": 4,
                "movl -(%ebp), %eax;leal (%eax), %edx;movl %edx, (%eax);movl %edx, (%eax);movl $, (%esp)": 1,
                "movl %edx, (%eax);movl $, (%esp);movl $, (%esp);movl %eax, (%esp);calll  <KeInitializeEvent>": 1,
                "cmpl $, (%ebp);je  <CmUnRegisterCallback+>;movl (%ebp), %eax;subl $, %eax;movl $, %ebx": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;js  <CmUnRegisterCallback+>;movl -(%ebp), %esi": 2,
                "movl (%esi), %eax;leal -(%eax), %edx;lock;cmpxchgl %edx, (%esi);jne - <CmUnRegisterCallback+>": 2,
                "lock;cmpxchgl %edx, (%esi);jne - <CmUnRegisterCallback+>;testl %edx, %edx;je  <CmUnRegisterCallback+>": 2,
                "leal (%esi), %ecx;calll  <KeWaitForSingleObject+>;movl %fs:, %eax;movl (%eax), %eax;movl %eax, (%esi)": 2,
                "cmpl %eax, %edx;je  <CmUnRegisterCallback+>;movl $, %edi;movl $, -(%ebp);movl %ebx, -(%ebp)": 1,
                "jne  <CmUnRegisterCallback+>;movl %edi, %ebx;testb %bl, %bl;je  <CmUnRegisterCallback+>;movl -(%ebp), %ebx": 1,
                "movl (%ecx), %esi;cmpl %esi, (%eax);jne  <CmUnRegisterCallback+>;testb $, (%eax);je  <CmUnRegisterCallback+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, (%esi);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl %edi, %edx;testb %dl, %dl;je  <CmUnRegisterCallback+>": 1,
                "leal (%edx), %ebx;movl %edx, %eax;lock;cmpxchgl %ebx, (%ecx);cmpl %eax, %edx": 2,
                "subl $, %esp;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>": 6,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl $, %ecx;movl $, %edx": 1,
                "movl $, (%edx);jmp  <CmUnRegisterCallback+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, (%esi);movl (%esi), %edi;movl $, %eax": 3,
                "subl $, %esp;movl $, (%esi);movl (%esi), %edi;movl $, %eax;lock": 3,
                "rep  stosl %eax, %es:(%edi);movl $, -(%ebp);movl $, -(%ebp);cmpb $, -(%ebp);jne  <CmUnRegisterCallback+>": 1,
                "movl %eax, (%ebp);movl $, (%esp);movl $, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 3,
                "movl (%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %ecx": 3,
                "movl %ecx, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <KeWaitForSingleObject>": 2,
                "movl %eax, %ebx;cmpl $, %eax;je  <CmUnRegisterCallback+>;shrl $, %eax;testb %al, %al": 1,
                "cmpl $, %ebx;je  <CmUnRegisterCallback+>;cmpl $, %ebx;je  <CmUnRegisterCallback+>;movl -(%ebp), %ebx": 1,
                "je  <CmUnRegisterCallback+>;cmpl $, %ebx;je  <CmUnRegisterCallback+>;movl -(%ebp), %ebx;movl -, %edx": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, (%esi);movl (%esi), %ecx;movl %ecx, -(%ebp)": 1,
                "subl $, %esp;movl -(%ebp), %ecx;movl -(%ebp), %ebx;movl %ecx, %eax;movl %ebx, %edx": 1,
                "movl %ecx, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %ecx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp": 1,
                "calll  <ObfDereferenceObject>;leal -(%ebp), %eax;movl %eax, -(%ebp);jmp  <CmUnRegisterCallback+>;movl $, %ecx": 1,
                "movl -(%ebp), %ecx;calll  <ObfReferenceObject>;movl %ebx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, (%esp)": 1,
                "jne  <CmUnRegisterCallback+>;calll  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movl $, %eax;leave;retl": 1,
                "retl;pushl %ebp;movl %esp, %ebp;subl $, %esp;calll *-": 5,
                "subl $, %esp;calll  <PsGetCurrentThread>;cmpl %eax, (%ebp);je  <CmUnRegisterCallback+>;movl $, (%esp)": 1,
                "subl $, %esp;testl %eax, %eax;je  <CmUnRegisterCallback+>;movl (%eax), %eax;movl %eax, -(%ebp)": 2,
                "movl $, %ebx;movl %edi, -(%ebp);leal -(,%ebx,), %edi;movl %edi, (%esp);calll  <NtQueryInformationAtom+>": 2,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll *%eax;subl $, %esp;movl %esi, (%esp)": 1,
                "movl %edi, (%esp);calll  <NtQueryInformationAtom+>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax": 1,
                "addl $, %esi;cmpl $, %esi;jne - <CmUnRegisterCallback+>;movl -(%ebp), %edi;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);addl $, %esi;movl %esi, (%esp)": 1,
                "movl %esi, (%esp);calll  <KeQuerySystemTime>;subl $, %esp;movl $, (%esp);leal -(%ebp), %eax": 1,
                "testb %bl, %bl;je  <CmUnRegisterCallback+>;calll - <CmUnRegisterCallback+>;leal -(%ebp), %esp;popl %ebx": 1,
                "calll - <CmUnRegisterCallback+>;subl $, %esp;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "pushl %ebx;subl $, %esp;calll - <CmUnRegisterCallback+>;movl %eax, -(%ebp);movl %fs:, %eax": 2,
                "movl (%eax), %eax;movzbl (%eax), %ebx;calll *-;cmpb $, %al;jbe  <NtAddAtom+>": 1,
                "calll  <DbgPrint>;movl $, -(%ebp);testl %eax, %eax;je  <NtAddAtom+>;movl $, (%esp)": 1,
                "movl $, (%esp);movl (%ebp), %eax;addl $, %eax;andl $-, %eax;movl %eax, (%esp)": 1,
                "jmp  <NtAddAtom+>;movl (%ebp), %eax;andl $-, %eax;addl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;js  <NtAddAtom+>;cmpl $, (%ebp);jne  <NtAddAtom+>": 1,
                "leal (%esi), %esi;leal (%edi), %edi;movl -(%ebp), %eax;movl %eax, %fs:;movl (%ebp), %edx": 2,
                "calll  <ExFreePoolWithTag>;subl $, %esp;jmp  <NtAddAtom+>;movl $, -(%ebp);jmp  <NtAddAtom+>": 1,
                "jbe  <NtFindAtom+>;calll *-;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll  <memmove>;movl -(%ebp), %eax;movl -(%ebp), %edx;movw $, (%eax,%edx)": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;movw $, (%eax,%edx);cmpl $, (%ebp);je  <NtFindAtom+>": 1,
                "movzwl (%edx), %eax;movw %ax, (%edx);jmp  <NtFindAtom+>;movl (%ebp), %eax;andl $-, %eax": 1,
                "movl %eax, -(%ebp);movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <NtFindAtom+>": 1,
                "movl -(%ebp), %eax;movl %eax, %fs:;jmp  <NtFindAtom+>;leal (%esi), %esi;leal (%edi), %edi": 1,
                "movl -(%ebp), %eax;movl %eax, %fs:;leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll  <ExFreePoolWithTag>;subl $, %esp;jmp  <NtFindAtom+>;movl $, -(%ebp)": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <ProbeForWrite>": 1,
                "addl $, %eax;cmpl %eax, (%ebp);ja  <NtQueryInformationAtom+>;cmpl -, %eax;jb  <NtQueryInformationAtom+>": 1,
                "movl -(%ebp), %eax;movw %ax, (%ecx);movl -(%ebp), %eax;movw %ax, (%ecx);addl $, %eax": 1,
                "movl -(%ebp), %ecx;movl (%ebp), %eax;movl %ecx, (%eax);jmp  <NtQueryInformationAtom+>;movl $, %eax": 1,
                "je  <NtQueryInformationAtom+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 5,
                "movl %edx, (%eax);movl $, (%eax);leave;retl $;pushl %ebp": 1,
                "retl $;pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl $, %edx": 1,
                "leal (%esi), %esi;jmp  <NtQueryInformationAtom+>;cmpl $, %edx;ja  <NtQueryInformationAtom+>;cmpb $, -": 1,
                "leal -(%edx), %ecx;movl %edx, %eax;lock;cmpxchgl %ecx, (%edi);cmpl %eax, %edx": 1,
                "jne  <NtQueryInformationAtom+>;movl %esi, -(%ebp);movl $, %edx;movl %esi, %ecx;calll  <ExAcquireRundownProtectionEx>": 1,
                "movl (%ebx), %edx;movl %edx, %eax;andl $, %eax;addl $, %eax;cmpl $, %eax": 3,
                "testl %edi, %edi;je  <NtQueryInformationAtom+>;movl $, %edx;movl %edi, %ecx;calll  <ExAcquireRundownProtectionEx>": 1,
                "movl %esi, %eax;xorl %edx, %eax;cmpl $, %eax;ja  <NtQueryInformationAtom+>;movl %edx, %eax": 1,
                "cmpl %eax, %edx;jne - <NtQueryInformationAtom+>;movl %edx, %ebx;andl $, %ebx;andl $-, %edx": 1,
                "calll  <RtlAssert>;subl $, %esp;subw $, (%edi);testb $, -;je  <NtQueryInformationAtom+>": 1,
                "jmp  <NtQueryInformationAtom+>;movl $, %eax;testl %edi, %edi;je  <NtQueryInformationAtom+>;movl $, %edx": 1,
                "jmp  <NtQueryInformationAtom+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "subl $, %esp;movl (%ebp), %edi;movzbl (%ebp), %esi;movzbl (%ebp), %eax;movb %al, -(%ebp)": 1,
                "subl $, %esp;movl $, %ebx;cmpl $, (%edi);je  <ExCreateCallback+>;leal -(%ebp), %eax": 1,
                "movl $, (%eax);movl -(%ebp), %eax;movl $, (%eax);leal (%eax), %edx;movl %edx, (%eax)": 1,
                "leal (%eax), %edx;movl %edx, (%eax);movl %edx, (%eax);movzbl -(%ebp), %edx;movb %dl, (%eax)": 1,
                "calll  <ObInsertObject>;subl $, %esp;movl %eax, %ebx;testl %ebx, %ebx;js  <ExCreateCallback+>": 1,
                "movl , %eax;movl %eax, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 4,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, (%esp);movl $, (%esp)": 7,
                "movl $, (%esp);movl $, (%esp);movl %edi, (%esp);movl -(%ebx), %eax;movl %eax, (%esp)": 1,
                "cmpl (%ebx), %esi;je  <ExNotifyCallback+>;leal (%ebx), %edi;movl %edi, %ecx;calll *-": 1,
                "cmpb $, (%ebx);jne  <ExNotifyCallback+>;addl $, (%ebx);movzbl -(%ebp), %edx;movl %edi, %ecx": 1,
                "calll  <KeSetEvent>;subl $, %esp;movl (%ebx), %ebx;cmpl %ebx, %esi;jne - <ExNotifyCallback+>": 1,
                "movzbl -(%ebp), %edx;movl %edi, %ecx;calll *-;leal -(%ebp), %esp;popl %ebx": 1,
                "subl $, %esp;calll *-;cmpb $, %al;jbe  <ExRegisterCallback+>;movl $, (%esp)": 1,
                "leal (%esi), %edi;movl %edi, %ecx;calll *-;cmpb $, (%esi);jne  <ExRegisterCallback+>": 1,
                "cmpb $, (%esi);jne  <ExRegisterCallback+>;leal (%esi), %edx;cmpl %edx, (%esi);jne  <ExRegisterCallback+>": 1,
                "movl %eax, %esi;addl $, %esi;movl %esi, %ecx;calll *-;cmpl $, (%ebx)": 1,
                "calll  <KeClearEvent>;subl $, %esp;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <KeWaitForSingleObject>;subl $, %esp;movl %esi, %ecx": 1,
                "movl %esi, %ecx;movl -(%ebp), %edx;calll *%edx;cmpl $, (%ebx);jne - <ExUnregisterCallback+>": 1,
                "rep  retl;testl %ecx, %ecx;je  <ExUnregisterCallback+>;pushl %ebp;movl %esp, %ebp": 5,
                "testb $, %al;je  <ExUnregisterCallback+>;movl (%edx), %edx;testl %edx, %edx;je  <ExUnregisterCallback+>": 1,
                "cmpl $, (%ebp);je  <ExUnregisterCallback+>;movl $, (%esp);movl $, (%esp);movl (%ebp), %eax": 1,
                "leal (%esi), %esi;jmp  <ExUnregisterCallback+>;movl $, -(%ebp);jmp  <ExUnregisterCallback+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl (%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);testb %bl, %bl": 7,
                "calll *-;cmpb $, %al;jbe  <ExUnregisterCallback+>;calll *-;movzbl %al, %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebp), %edx;addl $, %edx": 5,
                "addl $, %edx;movl %edx, -(%ebp);cmpb $, -(%ebp);jne  <NtCreateEvent+>;jmp  <NtCreateEvent+>": 1,
                "nop;leal (%esi), %esi;jmp - <NtCreateEvent+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "leal (%esi), %esi;jmp - <NtCreateEvent+>;movl -(%ebp), %eax;movl %eax, %fs:;movsbl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;js  <NtCreateEvent+>;movzbl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 26,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <ObInsertObject>;subl $, %esp;movl %eax, -(%ebp)": 9,
                "jbe  <NtOpenEvent+>;calll *-;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp)": 4,
                "leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;leal (%esi), %esi;jmp - <NtOpenEvent+>;movl -(%ebp), %eax": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;jns  <NtOpenEvent+>;jmp  <NtOpenEvent+>": 2,
                "movl %eax, %fs:;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movsbl -(%ebp), %eax": 10,
                "movl %eax, -(%ebp);testl %eax, %eax;js  <NtOpenEvent+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %ebx, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 6,
                "movl (%ebp), %edx;movl %edx, (%esp);movl $, %ecx;movl $, %edx;movl (%ebp), %eax": 5,
                "calll - <ExUnregisterCallback+>;movl %eax, -(%ebp);testl %eax, %eax;js  <NtOpenEvent+>;movl $, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl , %eax;movl %eax, (%esp)": 25,
                "jmp  <NtOpenEvent+>;movl -(%ebp), %eax;movzbl (%eax), %edx;movl (%ebp), %ecx;movl %edx, (%ecx)": 1,
                "je  <NtOpenEvent+>;movl (%ebp), %ecx;movl $, (%ecx);jmp  <NtOpenEvent+>;movl $, %eax": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);jmp  <NtOpenEvent+>;nop;jmp - <NtOpenEvent+>": 1,
                "cmpb $, -(%ebp);jne  <NtSetEvent+>;jmp  <NtSetEvent+>;movl -(%ebp), %eax;movl (%ebp), %edx": 1,
                "jne  <NtSetEvent+>;jmp  <NtSetEvent+>;movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "calll  <ExSystemExceptionFilter>;popl %ebp;rep  retl;testl %ecx, %ecx;je  <NtSetEvent+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <KeInitializeEvent+>;subl $, %esp;leal -(%ebp), %eax": 1,
                "movl , %eax;movl %eax, (%esp);movl $, (%esp);movl %ebx, (%esp);calll  <ObReferenceObjectByHandle>": 4,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;lock;cmpxchgl %edx, (%ecx)": 1,
                "popl %ebp;retl $;pushl %ebp;movl %esp, %ebp;lock": 2,
                "movl (%ebp), %ebx;movl (%ebp), %esi;calll *-;cmpb $, %al;jbe  <ProbeForRead+>": 1,
                "cmpl $, (%ebp);je  <ProbeForRead+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl %edi, %ebx": 1,
                "testl %edi, %ebx;je  <ProbeForWrite+>;calll  <ExRaiseDatatypeMisalignment>;leal -(%ebx,%esi), %ecx;cmpl %ecx, %ebx": 1,
                "addl $, %eax;cmpl %ecx, %eax;jne - <ProbeForWrite+>;leal -(%ebp), %esp;popl %ebx": 1,
                "testl %eax, %eax;je  <ExEnterCriticalRegionAndAcquireFastMutexUnsafe+>;cmpl -, %eax;jae  <ExEnterCriticalRegionAndAcquireFastMutexUnsafe+>;movl $, (%esp)": 1,
                "lock;cmpxchgl %edx, (%ebx);jne - <ExEnterCriticalRegionAndAcquireFastMutexUnsafe+>;testl %edx, %edx;je  <ExEnterCriticalRegionAndAcquireFastMutexUnsafe+>": 1,
                "cmpb $, %al;je  <ExReleaseFastMutexUnsafeAndLeaveCriticalRegion+>;movl %fs:, %eax;movl (%eax), %eax;cmpl $, (%eax)": 1,
                "movl (%eax), %edx;cmpl %edx, (%ebx);je  <ExReleaseFastMutexUnsafeAndLeaveCriticalRegion+>;movl $, (%esp);movl $, (%esp)": 1,
                "jne - <ExiAcquireFastMutex+>;testl %ecx, %ecx;je  <ExiAcquireFastMutex+>;movl %ebx, %ecx;calll  <KeWaitForSingleObject+>": 1,
                "cmpb $, %al;je  <ExiReleaseFastMutex+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %ecx, %ebx;movl %fs:, %eax;movl (%eax), %esi;calll *-;cmpb $, %al": 2,
                "cmpb $, %al;je  <ExAcquireFastMutexUnsafe+>;cmpl $, (%esi);jne  <ExAcquireFastMutexUnsafe+>;movl (%esi), %eax": 1,
                "cmpl %edx, (%eax);jae  <ExReleaseFastMutexUnsafe+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "xaddl %eax, (%ebx);addl $, %eax;testl %eax, %eax;jg  <ExReleaseFastMutexUnsafe+>;movl $, (%esp)": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl %eax, (%ebx);movzbl %cl, %ecx;movl %ecx, (%ebx)": 1,
                "pause;movl $, %eax;movl -(%ebp), %ebx;leave;retl": 1,
                "movl $, %eax;cmpl $, %edx;jne  <ExiTryToAcquireFastMutex+>;jmp  <ExiTryToAcquireFastMutex+>;movl %ecx, %eax": 1,
                "jne  <ExiTryToAcquireFastMutex+>;jmp  <ExiTryToAcquireFastMutex+>;movl %ecx, %eax;andl $, %eax;subl %eax, %ecx": 1,
                "subl %edx, %ecx;shrl $, %ecx;movl (%ebx,%ecx), %ecx;movl (%ecx,%edx), %edx;leal (%edx,%eax,), %eax": 1,
                "shrl $, %ecx;movl (%ebx,%ecx), %ecx;movl (%ecx,%edx), %edx;leal (%edx,%eax,), %eax;jmp  <ExiTryToAcquireFastMutex+>": 1,
                "movl (%ebp), %esi;movl $, (%esp);movl %esi, (%esp);movl $, (%esp);calll  <ExAllocatePoolWithTag>": 1,
                "subl $, %esp;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp;popl %ebp": 16,
                "movl -(%ebp), %eax;subl $-, %eax;movl %eax, -(%ebp);movl -(%ebp), %esi;jmp  <ExiTryToAcquireFastMutex+>": 1,
                "subl $, %esp;cmpl $, (%ebx);je  <ExiTryToAcquireFastMutex+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;lock;subl $, (%esi);andl $-, %edi;leal (%esi), %ecx": 1,
                "subl $, %esp;movzbl (%ebp), %esi;calll *-;cmpb $, %al;jbe  <ExiTryToAcquireFastMutex+>": 1,
                "movzbl (%ebp), %esi;movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll - <ExiTryToAcquireFastMutex+>": 1,
                "addl $, %edx;addl $, %ecx;cmpl %ebx, %ecx;jb - <ExiTryToAcquireFastMutex+>;movl $, (%edx)": 1,
                "cmpl %ebx, %ecx;jb - <ExiTryToAcquireFastMutex+>;movl $, (%edx);movl $, (%edx);leal -(%ebp), %esp": 1,
                "movl (%ebp), %esi;movzbl (%ebp), %edi;movl $, (%esp);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "movzbl (%ebp), %edi;movl $, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll - <ExiTryToAcquireFastMutex+>": 1,
                "movl $, (%esp);movl %ebx, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll - <ExiTryToAcquireFastMutex+>": 1,
                "movl (%edx), %eax;movl %eax, (%edx);movl %edi, (%edx);lock;orl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <ExiTryToAcquireFastMutex+>;subl $, %esp;movl %eax, %esi;movl $, %eax": 1,
                "calll - <ExiTryToAcquireFastMutex+>;subl $, %esp;movl %eax, %esi;movl $, %eax;testl %esi, %esi": 1,
                "jne  <ExiTryToAcquireFastMutex+>;movl (%ebx), %ecx;movl %ecx, %edx;shrl $, %edx;movl $, %eax": 1,
                "shrl $, %edx;movl $, %eax;cmpl $, %edx;ja  <ExiTryToAcquireFastMutex+>;leal (%edi,%edx,), %esi": 1,
                "movl %eax, %edx;movl $, %eax;testl %edx, %edx;je  <ExiTryToAcquireFastMutex+>;lock": 1,
                "movl %eax, -(%ebp);testb $, (%esi);je  <ExiTryToAcquireFastMutex+>;movl %eax, %ecx;calll  <ExfAcquirePushLockExclusive>": 1,
                "addl $, %ebx;cmpl $, %ebx;jne - <ExiTryToAcquireFastMutex+>;movl (%ebp), %edx;testb $, (%edx)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;leal (%esi), %edi;movl %edi, -(%ebp)": 1,
                "testl %eax, %eax;je  <ExiTryToAcquireFastMutex+>;movl %eax, %ebx;testb $, (%esi);jne  <ExiTryToAcquireFastMutex+>": 2,
                "subl $, %esp;movl -(%ebp), %eax;movl $, %edx;lock;xaddl %edx, (%eax)": 2,
                "subl $, %esp;movl -(%ebp), %eax;cmpw $, (%eax);js  <ExiTryToAcquireFastMutex+>;movl $, (%esp)": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %edx;movzwl (%edx), %edx": 3,
                "addl $, %eax;cmpl %eax, (%ecx);je  <ExiTryToAcquireFastMutex+>;cmpw $, (%ecx);jne  <ExiTryToAcquireFastMutex+>": 2,
                "movl $, %ebx;lock;xaddl %ebx, (%edi);movb %bl, -(%ebp);testb $, %bl": 2,
                "cmpl %eax, (%ebx);je  <ExiTryToAcquireFastMutex+>;cmpw $, (%ebx);jne  <ExiTryToAcquireFastMutex+>;calll  <KiCheckForKernelApcDelivery>": 7,
                "cmpw $, (%ebx);jne  <ExiTryToAcquireFastMutex+>;calll  <KiCheckForKernelApcDelivery>;movl (%esi), %eax;cmpb $, -(%ebp)": 1,
                "movl %eax, %ebx;testl %eax, %eax;jne  <ExiTryToAcquireFastMutex+>;movl (%ebp), %eax;movl $, (%eax)": 1,
                "jne  <ExiTryToAcquireFastMutex+>;movl (%ebp), %eax;movl $, (%eax);movl $, -(%ebp);jmp  <ExiTryToAcquireFastMutex+>": 1,
                "shrl $, %eax;andl $, %eax;movl %eax, -(%ebp);movl %fs:, %eax;movl (%eax), %eax": 1,
                "movzwl (%ecx), %eax;cmpw $, %ax;je  <ExiTryToAcquireFastMutex+>;testw %ax, %ax;jle  <ExiTryToAcquireFastMutex+>": 1,
                "cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <ExiTryToAcquireFastMutex+>;movl -(%ebp), %ecx;calll  <ExfAcquirePushLockShared>": 1,
                "movl (%edx), %ecx;movl %ecx, %eax;shrl $, %eax;testl %eax, %eax;jg  <ExiTryToAcquireFastMutex+>": 1,
                "jne  <ExiTryToAcquireFastMutex+>;movl (%ecx), %eax;shrl $, %eax;testl %eax, %eax;jg  <ExiTryToAcquireFastMutex+>": 1,
                "cmpxchgl %edx, (%ecx);cmpl $, %eax;je  <ExiTryToAcquireFastMutex+>;movl -(%ebp), %ecx;calll  <ExfReleasePushLockShared>": 2,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %edx;lock;cmpxchgl %edx, (%esi)": 1,
                "cmpl %edx, (%esi);ja  <ExiTryToAcquireFastMutex+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl %eax, -(%ebp);jne - <ExiTryToAcquireFastMutex+>;jmp - <ExiTryToAcquireFastMutex+>;movl -(%ebp), %eax;leal -(%ebp), %esp": 1,
                "calll  <RtlAssert>;subl $, %esp;testb $, -;jne  <ExiTryToAcquireFastMutex+>;testl $, -": 3,
                "movl %ebx, %edi;testb $, %bl;jne  <ExiTryToAcquireFastMutex+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %ebx, %ecx;calll  <ExfUnblockPushLock>;jmp  <ExiTryToAcquireFastMutex+>;movl %esp, %edx;movl %ebx, %ecx": 1,
                "calll  <ExfUnblockPushLock+>;movl -(%ebp), %ebx;leave;retl $;pushl %ebp": 1,
                "movl %fs:, %eax;movl (%eax), %esi;movl %fs:, %eax;cmpl (%eax), %esi;je  <ExiTryToAcquireFastMutex+>": 3,
                "movl (%ebx), %eax;movl %eax, (%edx);movl %edx, (%eax);leal (%ebx), %eax;movl %eax, (%ebx)": 2,
                "movl %eax, (%edx);movl %edx, (%eax);leal (%ebx), %eax;movl %eax, (%ebx);movl %eax, (%ebx)": 2,
                "calll  <RtlAssert>;subl $, %esp;testl $, %esi;jne  <ExiTryToAcquireFastMutex+>;testl $, %ebx": 2,
                "testb $, (%ebx);je  <ExiTryToAcquireFastMutex+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testl %esi, %esi;jne  <ExiTryToAcquireFastMutex+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %eax;jmp  <ExiTryToAcquireFastMutex+>;movl $, %eax;jmp  <ExiTryToAcquireFastMutex+>;movl $, %eax": 2,
                "movl %eax, %edi;testl %eax, %eax;jne  <ExiTryToAcquireFastMutex+>;jmp  <ExiTryToAcquireFastMutex+>;movl $, (%esp)": 1,
                "jne - <ExiTryToAcquireFastMutex+>;movl -(%ebp), %edi;lock;btsl $, -;setb %al": 1,
                "movl $, (%ebx);movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%ebx);movl %esi, (%edx)": 1,
                "jmp - <ExiTryToAcquireFastMutex+>;movl %edi, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "subl $, %esp;subw $, (%esi);movl %ebx, (%esp);movl %edi, (%esp);calll - <ExiTryToAcquireFastMutex+>": 1,
                "testb %al, %al;je  <ExiTryToAcquireFastMutex+>;movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "subl $, %esp;movl %eax, %esi;movl %ebx, (%esp);movl %edi, (%esp);calll - <ExiTryToAcquireFastMutex+>": 1,
                "testb %al, %al;je  <ExiTryToAcquireFastMutex+>;movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp)": 1,
                "addl $, %ebx;testl $, %eax;jne - <ExiTryToAcquireFastMutex+>;addl $, %esi;movl %esi, (%esp)": 1,
                "subw $, (%ebx);movl $, %esi;movb $, -(%ebp);jmp  <ExEnumHandleTable+>;cmpl $, (%ebx)": 1,
                "calll *(%ebp);subl $, %esp;movb %al, -(%ebp);movl %ebx, (%esp);movl %edi, (%esp)": 1,
                "movzwl (%ebx), %eax;addl $, %eax;movw %ax, (%ebx);testw %ax, %ax;jne  <ExEnumHandleTable+>": 1,
                "jne  <ExEnumHandleTable+>;testl %esi, %esi;je  <ExEnumHandleTable+>;cmpl %ebx, -;jne  <ExEnumHandleTable+>": 1,
                "je  <ExEnumHandleTable+>;leal -(%ebp), %eax;movl (%ebp), %edx;shll $, %edx;movl %edx, (%esp)": 1,
                "calll  <ExRaiseStatus>;pushl %ebp;movl %esp, %ebp;subl $, %esp;movl $, (%esp)": 1,
                "movl (%esi,%ecx,), %edx;movl (%edx), %ebx;movl -(%ebp), %edx;movl %ebx, (%edx);movzwl -(%ebp,%ecx,), %edx": 1,
                "movl %eax, (%esp);movl $, (%esp);calll - <ZwAllocateVirtualMemory>;subl $, %esp;movl %eax, %ebx": 3,
                "movl %ebx, -(%ebp);cmpl $, (%ebp);je  <ExRaiseHardError+>;movl $, %ebx;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <memmove>;movl -(%ebp), %edx;movl %edx, -(%ebp,%ebx,)": 1,
                "movl %esi, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl %edi, (%esp);movl (%ebp), %ebx;movl %ebx, (%esp);movl (%ebp), %eax": 1,
                "cmpl $, (%ebp);setne -(%ebp);je  <ExRaiseHardError+>;cmpl $, (%ebp);je  <ExRaiseHardError+>": 1,
                "cmpl %edx, (%ebp);ja  <ExRaiseHardError+>;cmpl -, %edx;jb  <ExRaiseHardError+>;calll - <ExRaiseAccessViolation>": 1,
                "movl %eax, (%ecx);cmpb $, -(%ebp);je  <ExRaiseHardError+>;movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl %edx, (%esp);calll - <ProbeForRead>;subl $, %esp;movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "je  <ExRaiseHardError+>;movl $, (%esp);movl $, (%esp);movl (%edi,%ebx,), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <ProbeForRead>;subl $, %esp;movl (%edi,%ebx,), %eax;movl (%eax), %edx": 1,
                "calll - <ProbeForRead>;subl $, %esp;movl (%edi,%ebx,), %eax;movl (%eax), %edx;movl (%eax), %eax": 1,
                "movl %eax, (%esp);calll - <ExEnumHandleTable+>;subl $, %esp;cmpl $, -(%ebp);jne  <ExRaiseHardError+>": 1,
                "subl $, %esp;jmp  <ExRaiseHardError+>;movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "jmp - <ExRaiseHardError+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <ExRaiseHardError+>;movl $, -(%ebp);jmp  <ExRaiseHardError+>;movl $, -(%ebp)": 2,
                "movl %eax, (%esp);calll  <ObReferenceObjectByHandle>;subl $, %esp;testl %eax, %eax;js  <ExRaiseHardError+>": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movzbl (%ebx), %eax": 7,
                "subl $, %esp;movl (%ebp), %esi;movl (%ebp), %eax;testl %eax, %eax;je  <_purecall+>": 1,
                "movl %eax, (%esp);calll  <InbvSolidColorFill+>;subl $, %esp;addl $, %ebx;cmpl %esi, %ebx": 1,
                "cmpl %edi, %ebx;jb  <_purecall+>;movb $, (%ecx);movl (%edx), %eax;movl %eax, (%esp)": 1,
                "movzbl %al, %eax;jmpl *-(,%eax,);movl $, %eax;jmp  <_purecall+>;movl $, %eax": 1,
                "testb $, %dl;jne  <_purecall+>;movzbl (%ebx), %ecx;testb %cl, %cl;je  <_purecall+>": 1,
                "movl $, (%eax);andb $-, (%eax);movl $, %eax;movl -(%ebp), %ebx;leave": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, ;testl %eax, %eax;je  <_purecall+>": 1,
                "movzbl (%ebx), %edx;andl $, %edx;leal (%edx,%edx), %esi;movzbl (%eax), %ecx;andl $-, %ecx": 1,
                "calll  <DbgPrint>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 5,
                "cmpl $, %ebx;setne %al;andb %al, %dl;movl %edx, %edi;je  <_purecall+>": 1,
                "calll  <RtlAssert>;subl $, %esp;jmp  <_purecall+>;orb $, (%ecx);cmpb $-, %al": 1,
                "orb $, (%ecx);cmpb $-, %al;je  <_purecall+>;movzbl %al, %edx;calll *-": 1,
                "movl %ecx, (%esp);calll - <_purecall+>;subl $, %esp;jmp  <_purecall+>;movl $, %esi": 2,
                "testb $, (%eax);je  <_purecall+>;movl (%eax), %eax;movl %eax, (%esp);calll  <InbvSolidColorFill+>": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl , %eax;movl (%eax), %eax;movl %eax, (%esp)": 1,
                "movl , %eax;movzbl (%eax), %edx;shrb $, %dl;andl $, %edx;movb %dl, (%ecx)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll - <_purecall+>": 1,
                "cmpl $, %ebx;je  <_purecall+>;cmpl $, %ebx;je  <_purecall+>;movl , %eax": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %ebx;movl (%ebp), %ecx": 1,
                "movl %ecx, (%esp);movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "leal -(%ebx), %esi;leal (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, %edx;cmpl %eax, %esi;jb  <HeadlessDispatch+>;shrl $, %eax;testb %al, %al": 1,
                "jne  <HeadlessDispatch+>;testl $, (%ebp);je  <HeadlessDispatch+>;movl $, %ebx;cmpl $, (%ebp)": 1,
                "movl %edi, %esi;movl (%ebp), %eax;movl %eax, -(%ebp);movl $, %ebx;jmp  <HeadlessDispatch+>": 1,
                "movl %esi, -(%ebp);movb $, (%esi);movl $, %esi;movl $, %ebx;jmp  <HeadlessDispatch+>": 1,
                "je  <HeadlessDispatch+>;movl %esi, %eax;testl %edi, %edi;je  <HeadlessDispatch+>;movl (%ebp), %eax": 1,
                "je  <HeadlessDispatch+>;testl %edi, %edi;je  <HeadlessDispatch+>;movl (%ebp), %ecx;movb $, (%ecx)": 1,
                "js  <HeadlessDispatch+>;cmpl $, (%ebp);je  <HeadlessDispatch+>;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl $, (%esp);movl $, (%esp);movl %eax, (%esp);movl $, (%esp);calll  <KeBugCheckEx>": 21,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <ObCloseHandle>;subl $, %esp;movl $, (%esp)": 1,
                "movl %eax, (%esp);calll  <ObCloseHandle>;subl $, %esp;movl $, (%esp);leal -(%ebp), %ebx": 1,
                "movl %eax, (%esp);movl $, (%esp);calll  <KeBugCheckEx>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, (%esp);movl $, (%esp);movl %esi, (%esp);movl $, (%esp);calll  <KeBugCheckEx>": 1,
                "movl (%ebp), %eax;movl (%eax), %ebx;cmpl %ebx, %edi;je  <HeadlessDispatch+>;movl $, %esi": 1,
                "je  <HeadlessDispatch+>;movl $, %esi;cmpl $, (%ebx);jne  <HeadlessDispatch+>;movl (%ebx), %eax": 1,
                "addl -, %ebx;movl %ebx, (%esp);calll  <memmove>;movl , %eax;movl $, (%esp)": 1,
                "calll  <ObReferenceObjectByHandle>;subl $, %esp;movl %eax, %ebx;movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl $, (%esp);movl %ebx, (%esp);movl $, (%esp);calll  <KeBugCheckEx>;movl $, (%esp)": 13,
                "movl %eax, (%esp);calll  <memmove>;movl $, (%esp);movl , %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll  <ExFreePoolWithTag>;subl $, %esp;movl -(%ebp), %eax;movl %eax, ": 1,
                "movl %eax, ;movl $, (%esp);movl %eax, %edx;addl -, %edx;movl %edx, (%esp)": 1,
                "leal (%edi), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %edx, (%eax);leal (%eax), %edx;movl %edx, (%eax);movw $, (%eax);movl $, (%esp)": 1,
                "movl -, %ecx;cmpl $, %ecx;jne  <HeadlessDispatch+>;movl -, %ebx;leal -(%ebx), %esi": 1,
                "movl %eax, (%esp);movl %ecx, (%esp);movl $, (%esp);movl $, (%esp);calll  <KeBugCheckEx>": 1,
                "movl %eax, (%esp);calll  <RtlAppendUnicodeToString>;subl $, %esp;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movw %dx, -(%ebp);movl %eax, -(%ebp);movl $, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <VerSetConditionMask+>;subl $, %esp;movl %eax, %ebx": 1,
                "movl $, (%esp);movl %ebx, (%esp);movl $, (%esp);calll  <KeBugCheckEx>;movl -(%ebp), %edx": 1,
                "subl $, %ebx;jne - <HeadlessDispatch+>;shll $, %edx;orl %edx, %eax;popl %ebx": 1,
                "calll  <ExfInterlockedCompareExchange+>;movl $, -;movl $, -;movl $, (%esp);calll  <ExInitializeResourceLite>": 1,
                "calll - <ExUnregisterCallback+>;testb %al, %al;jne  <HeadlessDispatch+>;movl $, (%esp);movl $, (%esp)": 1,
                "jne  <HeadlessDispatch+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 10,
                "calll  <ExInitializePagedLookasideList+>;testb %al, %al;jne  <HeadlessDispatch+>;movl $, (%esp);movl $, (%esp)": 2,
                "calll  <ExSizeOfRundownProtectionCacheAware+>;testb %al, %al;jne  <HeadlessDispatch+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %edx;jmp  <HeadlessDispatch+>;calll  <NtCreateTimer+>;calll  <ExfInterlockedCompareExchange+>;testb %al, %al": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %edx;movl $, %eax;cmpl $, (%edx)": 1,
                "cmpl $, %edi;jbe  <HeadlessDispatch+>;movl (%esi), %edx;cmpw $, (%edx);jne  <HeadlessDispatch+>": 1,
                "movl (%esi), %edx;cmpw $, (%edx);jne  <HeadlessDispatch+>;movzwl (%esi), %ecx;shrw %cx": 1,
                "movzwl (%esi), %ecx;shrw %cx;movzwl %cx, %ecx;leal (%ecx), %eax;cmpl $, %eax": 1,
                "leal (%esi), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 8,
                "subl $, %esp;addl $, %edi;movl (%esi), %esi;cmpl -(%ebp), %esi;jne - <HeadlessDispatch+>": 1,
                "movl (%eax), %edx;cmpl %ebx, %edx;jbe  <HeadlessDispatch+>;subl %ebx, %edx;movl %edx, (%eax)": 1,
                "cmpl %edi, %eax;jne - <HeadlessDispatch+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl $, (%esp);calll  <KeBugCheckEx>;calll  <ExfInterlockedCompareExchange+>;cmpl $, (%ebp);je  <HeadlessDispatch+>": 1,
                "movl (%eax), %eax;testb $, %al;je  <HeadlessDispatch+>;movb $, -;testb $, %al": 1,
                "calll  <DbgPrint>;movl $, (%esp);movl %esi, (%esp);calll  <strstr>;testl %eax, %eax": 1,
                "calll  <atol>;shll $, %eax;testl %eax, %eax;je  <HeadlessDispatch+>;movl $, (%esp)": 1,
                "movl (%ebx), %eax;movl (%eax), %edx;movl %edx, -;movl $, -;movl (%eax), %ecx": 1,
                "movl %eax, (%esp);addl %edx, %ecx;movl %ecx, (%esp);movl %edx, (%esp);calll  <RtlInitCodePageTable+>": 1,
                "movl %esi, (%esp);movl $, (%esp);calll  <RtlAnsiStringToUnicodeString>;subl $, %esp;testl %eax, %eax": 3,
                "subl $, %esp;testl %eax, %eax;js  <HeadlessDispatch+>;movl -(%ebp), %eax;addl $, %eax": 3,
                "calll  <RtlInitAnsiString>;subl $, %esp;movzwl -(%ebp), %eax;testw %ax, %ax;je  <HeadlessDispatch+>": 2,
                "cmpb $, %dl;jne  <HeadlessDispatch+>;subl $, %eax;movw %ax, -(%ebp);testw %ax, %ax": 2,
                "andl $, %ecx;leal (%ecx), %esi;cmpl $, %ecx;sbbl %edx, %edx;notl %edx": 1,
                "movl -, %esi;testl $, %esi;je  <HeadlessDispatch+>;leal -(%ebp), %ecx;movl $, %eax": 1,
                "movl $, %edx;jmp  <HeadlessDispatch+>;addl $, %ecx;subl $, %eax;je  <HeadlessDispatch+>": 1,
                "cmpb $, (%ecx);jne - <HeadlessDispatch+>;jmp  <HeadlessDispatch+>;cmpl $, %ecx;sbbl %edi, %edi": 1,
                "movl $, %edi;jmp  <HeadlessDispatch+>;cmpl $, %edi;je  <HeadlessDispatch+>;testl %edi, %edi": 1,
                "movl %eax, (%esp);movl %ecx, (%esp);calll - <HeadlessDispatch+>;testl %eax, %eax;jns  <HeadlessDispatch+>": 1,
                "leal -(%ebp), %esi;movl %esi, (%esp);calll  <RtlInitAnsiString>;subl $, %esp;movl $, (%esp)": 8,
                "movl %esi, (%esp);calll  <RtlInitAnsiString>;subl $, %esp;movl $, (%esp);movl %esi, (%esp)": 8,
                "testb $-, -;je  <HeadlessDispatch+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <KeBugCheck>;movl %ebx, (%esp);calll  <NtOpenProcess+>;subl $, %esp": 1,
                "calll  <KeBugCheck>;calll  <IoGetDmaAdapter+>;testb %al, %al;jne  <HeadlessDispatch+>;movl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <HeadlessDispatch+>;subl $, %esp;movl %eax, ;movl %eax, ": 1,
                "subl $, %esp;movl %eax, ;movl %eax, ;movl , %eax;movl %eax, ": 1,
                "movl %esi, %edx;movl -(%ebp), %esi;subl $, %ecx;movl $, %eax;movl $, %edi": 1,
                "movl $, %eax;movl $, %edi;movb $, (%ecx);jmp - <HeadlessDispatch+>;leal -(%ebp), %esp": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;jne  <HeadlessDispatch+>": 1,
                "movl $, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll  <InbvSolidColorFill+>;subl $, %esp": 1,
                "addl $, -(%ebp);subl $, -(%ebp);movl -(%ebp), %ebx;addl $, %ebx;movl $, (%esp)": 1,
                "movl %ebx, (%esp);movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <HeadlessDispatch+>;testl %eax, %eax;jns  <HeadlessDispatch+>": 1,
                "movl -(%ebp), %ebx;testl %edx, %edx;js  <HeadlessDispatch+>;testl %edx, %edx;je  <HeadlessDispatch+>": 1,
                "js  <HeadlessDispatch+>;testl %edx, %edx;je  <HeadlessDispatch+>;leal (%ebx), %eax;addl %edx, %ebx": 1,
                "jne - <HeadlessDispatch+>;jmp  <HeadlessDispatch+>;movl $, %eax;jmp  <HeadlessDispatch+>;movl $, %eax": 1,
                "calll  <KeBugCheck>;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <strstr>": 1,
                "je  <HeadlessDispatch+>;leal -(%ebp), %eax;movl %eax, (%esp);calll *-;subl $, %esp": 1,
                "imull $, -, %edx;movl $, %eax;mull %edx;movl %eax, ;movl %edx, -": 1,
                "je - <HeadlessDispatch+>;cmpb $, %dl;je - <HeadlessDispatch+>;cmpb $, -;sbbl %eax, %eax": 1,
                "calll  <InbvDisplayString>;subl $, %esp;movl $, (%esp);calll  <InbvSolidColorFill+>;subl $, %esp": 1,
                "calll  <InbvSolidColorFill+>;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);calll - <HeadlessDispatch+>": 1,
                "jne  <HeadlessDispatch+>;movl $, (%esp);calll  <KeBugCheck>;calll - <CmUnRegisterCallback+>;testb %al, %al": 1,
                "calll  <ExLocalTimeToSystemTime>;subl $, %esp;movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, ": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll  <KeQuerySystemTime+>;subl $, %esp;jmp  <HeadlessDispatch+>": 1,
                "testb %al, %al;jne  <HeadlessDispatch+>;movl $, (%esp);calll  <KeBugCheck>;cmpl $, -(%ebp)": 1,
                "jmp  <HeadlessDispatch+>;movl $, -;movl $, %eax;movl $, %ebx;cmpb $, (%edx)": 1,
                "movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp);calll  <InbvDisplayString>;subl $, %esp": 2,
                "calll  <ExQueueWorkItem+>;subl $, %esp;movl $, (%esp);movl $, (%esp);calll  <InbvSolidColorFill+>": 1,
                "testb %bl, %bl;je  <HeadlessDispatch+>;movl $, (%esp);movl %esi, (%esp);calll  <RtlInitUnicodeString>": 1,
                "movl %eax, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp;cmpl $, %eax;je  <HeadlessDispatch+>": 1,
                "subl $, %esp;cmpl $, %eax;je  <HeadlessDispatch+>;shrl $, %eax;cmpb $, %al": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <CmUnRegisterCallback+>;subl $, %esp;testb %bl, %bl": 1,
                "movl %esi, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;movl $, (%esp);leal -(%ebp), %eax": 3,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl %esi, (%esp)": 12,
                "movl (%edx), %eax;movl %eax, (%esp);calll - <ZwWaitForSingleObject>;subl $, %esp;testl %eax, %eax": 1,
                "subl $, %esp;testl %eax, %eax;jne  <HeadlessDispatch+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %eax;orl $, %eax;movl %eax, (%ebx);movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "je  <ExInterlockedAddLargeInteger+>;sti;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl (%ebp), %ebx;pushfl;popl %edi;andl $, %edi;cli": 4,
                "jne  <ExInterlockedAddUlong+>;jmp  <ExInterlockedAddUlong+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "addl %eax, %edx;movl %edx, (%esi);movl %fs:, %edx;movl (%edx), %edx;orl $, %edx": 1,
                "movl $, (%esp);calll  <KeBugCheckEx>;movl $, %edx;xchgl %edx, (%ebx);cmpl $, -(%ebp)": 6,
                "jmp  <ExInterlockedInsertTailList+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "cmpl (%ebx), %eax;je  <ExInterlockedRemoveHeadList+>;lock;btsl $, (%ebx);setb %al": 1,
                "btsl $, (%ebx);setb %al;testb %al, %al;jne - <ExInterlockedRemoveHeadList+>;movl %fs:, %eax": 1,
                "jmp  <ExInterlockedRemoveHeadList+>;movl $, %eax;movl %fs:, %edx;movl (%edx), %edx;orl $, %edx": 1,
                "orl $, %edx;cmpl (%ebx), %edx;je  <ExInterlockedPopEntryList+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %eax;orl $, %eax;cmpl (%ebx), %eax;je  <ExInterlockedPushEntryList+>;lock": 1,
                "testb %al, %al;jne - <ExInterlockedPushEntryList+>;movl %fs:, %eax;movl (%eax), %eax;orl $, %eax": 1,
                "testl %edi, %edi;je  <ExInterlockedPushEntryList+>;sti;leal -(%ebp), %esp;popl %ebx": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl $, %edx;lock;xaddl %edx, (%eax)": 2,
                "js  <ExInterlockedIncrementLong+>;testl %edx, %edx;setg %al;movzbl %al, %eax;subl $, %eax": 1,
                "movl $, %eax;testl %ecx, %ecx;js  <ExInterlockedDecrementLong+>;testl %ecx, %ecx;setg %al": 1,
                "testl %ecx, %ecx;setg %al;movzbl %al, %eax;subl $, %eax;andl $, %eax": 2,
                "movl (%ebp), %eax;xchgl %eax, (%edx);popl %ebp;retl $;pushl %ebp": 2,
                "movl %fs:, %edx;movl (%edx), %edx;orl $, %edx;cmpl (%ebx), %edx;je  <ExfInterlockedAddUlong+>": 1,
                "movl $, %edx;xchgl %edx, (%ebx);cmpl $, -(%ebp);je  <ExfInterlockedAddUlong+>;sti": 1,
                "jmp  <ExfInterlockedInsertTailList+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "btsl $, (%ebx);setb %al;testb %al, %al;jne - <ExfInterlockedInsertTailList+>;movl %fs:, %eax": 1,
                "je  <ExfInterlockedInsertTailList+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "movl %ecx, %esi;lock;btsl $, (%edx);setb %al;testb %al, %al": 2,
                "movl $, (%esp);movl $, (%esp);movl %edx, (%esp);movl $, (%esp);calll  <KeBugCheckEx>": 2,
                "jne - <ExfInterlockedRemoveHeadList+>;movl %fs:, %eax;movl (%eax), %eax;orl $, %eax;movl %eax, (%ebx)": 1,
                "movl %fs:, %edx;movl (%edx), %edx;orl $, %edx;cmpl (%ebx), %edx;je  <ExfInterlockedRemoveHeadList+>": 1,
                "xchgl %edx, (%ebx);testl %edi, %edi;je  <ExfInterlockedRemoveHeadList+>;sti;leal -(%ebp), %esp": 1,
                "jne  <ExfInterlockedPopEntryList+>;jmp  <ExfInterlockedPopEntryList+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "orl $, %edx;cmpl (%ebx), %edx;je  <ExfInterlockedPopEntryList+>;movl $, (%esp);movl $, (%esp)": 1,
                "testl %edi, %edi;je  <ExfInterlockedPopEntryList+>;sti;leal -(%ebp), %esp;popl %ebx": 1,
                "jne - <ExfInterlockedPushEntryList+>;movl %fs:, %eax;movl (%eax), %eax;orl $, %eax;movl %eax, (%ebx)": 1,
                "movzbl %al, %eax;subl $, %eax;andl $, %eax;popl %ebp;retl": 2,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %eax": 3,
                "pushl %ebp;movl %esp, %ebp;calll - <ExSystemExceptionFilter>;popl %ebp;rep  retl": 43,
                "movl %eax, (%esp);calll - <ZwYieldExecution+>;subl $, %esp;movl $, %edx;testl %eax, %eax": 1,
                "calll  <ObReferenceObjectByHandle>;subl $, %esp;movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;movl (%ebp), %ebx;movl $, %eax": 1,
                "leal (%edx,%eax), %ecx;movl $, (%ebx,%ecx,);leal (%ebx,%ecx,), %edx;leal (%edx), %ecx;movl %ecx, (%ecx)": 1,
                "je  <ExfInterlockedCompareExchange+>;movl %edi, %ecx;calll  <ExfAcquirePushLockExclusive>;testb $, (%edi);jne  <ExfInterlockedCompareExchange+>": 2,
                "cmpl %edx, %eax;jne  <ExfInterlockedCompareExchange+>;jmp  <ExfInterlockedCompareExchange+>;jmp - <ExfInterlockedCompareExchange+>;movl (%ebp), %edx": 1,
                "calll  <RtlAssert>;subl $, %esp;testb $, (%edi);jne  <ExfInterlockedCompareExchange+>;testl $, (%edi)": 3,
                "testb $, (%edi);jne  <ExfInterlockedCompareExchange+>;testl $, (%edi);je  <ExfInterlockedCompareExchange+>;movl $, (%esp)": 3,
                "movzwl (%esi), %eax;addl $, %eax;movw %ax, (%esi);movl $, %ebx;testw %ax, %ax": 4,
                "leal (%esi), %edx;movl %edx, -(%ebp);movl $, (%esp);movl $, (%esp);movl %edx, (%esp)": 1,
                "subl $, %esp;leal (%esi), %eax;movl %eax, -(%ebp);movl (%ebx), %eax;movl %ebx, (%esi)": 1,
                "movl -(%ebp), %edx;movl %edx, (%eax);movl %edx, (%ebx);testb $, (%edi);jne  <ExfInterlockedCompareExchange+>": 1,
                "movl %fs:, %eax;cmpl (%eax), %ebx;je  <ExfInterlockedCompareExchange+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpl (%eax), %ebx;je  <ExfInterlockedCompareExchange+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movzbl (%ebp), %eax": 2,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 5,
                "movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx);movl -(%ebp), %eax;movl -(%ebp), %ebx": 1,
                "movl %edx, -(%ebp);jmp  <ExfInterlockedCompareExchange+>;leal (%esi), %esi;jmp  <ExfInterlockedCompareExchange+>;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, %fs:;leal -(%ebp), %ecx;movl %ecx, (%ebp);cmpl $, (%ebp)": 2,
                "movl %eax, %ebx;testl %eax, %eax;jns  <ExfInterlockedCompareExchange+>;jmp  <ExfInterlockedCompareExchange+>;movl , %eax": 2,
                "movl (%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ExfInterlockedCompareExchange+>": 2,
                "subl $, %esp;movl %eax, %ebx;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl %ebx, %eax": 5,
                "movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 6,
                "leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp);calll  <RtlInitUnicodeString>": 2,
                "movl (%ebp), %eax;movw %dx, (%eax);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>": 1,
                "js  <ExfInterlockedCompareExchange+>;movzwl %si, %esi;movl %esi, (%esp);movl $, (%esp);leal -(%ebp), %ebx": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax": 4,
                "movl %ebx, (%esp);movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 7,
                "movl -(%ebp), %eax;movl %eax, (%ebp);jmp  <ExfInterlockedCompareExchange+>;cmpl $, %eax;jne  <ExfInterlockedCompareExchange+>": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;leal (%eax,%eax), %eax;movl %eax, -(%ebp);movl %eax, (%esp)": 1,
                "subl $, %esp;movl %eax, %ebx;jmp  <ExfInterlockedCompareExchange+>;movl $, %ebx;jmp  <ExfInterlockedCompareExchange+>": 1,
                "jmp  <ExfInterlockedCompareExchange+>;movl $, %ebx;movl -(%ebp), %eax;testl %eax, %eax;je  <ExfInterlockedCompareExchange+>": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movw %ax, -(%ebp);calll *-": 1,
                "js  <ExfInterlockedCompareExchange+>;movzwl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);calll - <ExfInterlockedCompareExchange+>": 1,
                "pushl %esi;pushl %ebx;movl (%ebp), %eax;movl (%ebp), %esi;movl (%ebp), %edx": 1,
                "pushl %ebx;movl (%ebp), %eax;movl (%ebp), %esi;movl (%ebp), %edx;movl (%ebp), %ecx": 1,
                "leal (%eax), %ecx;movl (%edx), %ebx;movl %ebx, (%eax);movl %edx, (%eax);movl %ecx, (%ebx)": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %ebx;movl %fs:, %edx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl $, -;movl $, -": 4,
                "leal (,%esi,), %edi;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %edi, (%esp)": 1,
                "leal (,%ebx,), %eax;movl %eax, -(%ebp);addl %ebx, %eax;leal -(,%eax,), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %edi, (%esp)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl %ebx, %ecx;calll - <InterlockedPopEntrySList>": 2,
                "subl $, %esp;movl (%ebp), %ebx;movl %ebx, %ecx;calll - <InterlockedPopEntrySList>;testl %eax, %eax": 2,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %eax": 2,
                "movl (%ebp), %eax;movl (%ebp), %ecx;movl $, (%edx);movl $, (%edx);movl $, (%edx)": 2,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <KeReleaseMutant>;subl $, %esp;leave": 1,
                "testb $, %al;je  <ExInitializePagedLookasideList+>;movl (%edx), %edx;testl %edx, %edx;je  <ExInitializePagedLookasideList+>": 1,
                "je  <ExInitializePagedLookasideList+>;movl $, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "leal (%edi), %edi;jmp - <ExInitializePagedLookasideList+>;movl -(%ebp), %eax;movl %eax, %fs:;nop": 1,
                "jmp  <ExInitializePagedLookasideList+>;movl $, -(%ebp);movl (%ebp), %edx;addl $, %edx;movl %edx, -(%ebp)": 1,
                "movl %eax, (%edx);jmp  <ExInitializePagedLookasideList+>;movl $, %eax;nop;leal -(%ebp), %ecx": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;js  <ExInitializePagedLookasideList+>;movzbl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "js  <ExInitializePagedLookasideList+>;movzbl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movzbl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <KeInitializeMutant>": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);jmp  <ExInitializePagedLookasideList+>;nop;jmp - <ExInitializePagedLookasideList+>": 5,
                "movl %eax, -(%ebp);jmp  <ExInitializePagedLookasideList+>;nop;jmp - <ExInitializePagedLookasideList+>;movl -(%ebp), %eax": 5,
                "movl (%edx), %ecx;cmpl %ecx, (%eax);movl (%ebp), %edx;sete (%edx);movzbl (%eax), %eax": 1,
                "movl (%ebp), %edx;sete (%edx);movzbl (%eax), %eax;movb %al, (%edx);cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);je  <ExInitializePagedLookasideList+>;movl (%ebp), %ecx;movl $, (%ecx);jmp  <ExInitializePagedLookasideList+>": 1,
                "je  <ExInitializePagedLookasideList+>;movl (%ebp), %ecx;movl $, (%ecx);jmp  <ExInitializePagedLookasideList+>;movl $, %eax": 1,
                "je  <ExInitializePagedLookasideList+>;movl (%ebx), %eax;movl %eax, (%esp);calll  <KeRemoveSystemServiceTable+>;subl $, %esp": 1,
                "movl %eax, (%esp);calll  <MmUnmapLockedPages>;subl $, %esp;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll  <IoFreeMdl>;subl $, %esp;movl (%ebx), %ecx;testl %ecx, %ecx": 1,
                "jne  <ExInitializePagedLookasideList+>;cmpl $, (%ebp);ja  <ExInitializePagedLookasideList+>;cmpl $, (%ebp);jbe  <ExInitializePagedLookasideList+>": 1,
                "calll  <DbgPrint>;movl $, -(%ebp);testl %eax, %eax;je  <ExInitializePagedLookasideList+>;movl $, (%esp)": 4,
                "jmp  <ExInitializePagedLookasideList+>;movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "testl %eax, %eax;jns  <ExInitializePagedLookasideList+>;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <ExInitializePagedLookasideList+>": 1,
                "movl %edx, (%eax);movl (%ebp), %edx;movl %edx, (%eax);movl -(%ebp), %edx;movl %edx, (%eax)": 2,
                "movl %fs:, %eax;movl (%eax), %eax;cmpb $, (%eax);jne  <ExInitializePagedLookasideList+>;jmp  <ExInitializePagedLookasideList+>": 1,
                "calll  <ObReferenceObjectByHandle>;subl $, %esp;testl %eax, %eax;js  <ExInitializePagedLookasideList+>;movl $, (%esp)": 1,
                "subl $, %esp;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, (%esp);movl -(%ebp), %eax": 2,
                "movl (%eax), %eax;movl (%eax), %eax;movl -(%ebp), %edx;movl %edx, %fs:;jmp  <ExInitializePagedLookasideList+>": 1,
                "movl -(%ebp), %edx;movl %edx, %fs:;jmp  <ExInitializePagedLookasideList+>;leal (%esi), %esi;leal (%edi), %edi": 1,
                "movl -(%ebp), %eax;movl %eax, (%edx);movl (%edx), %eax;movl %eax, (%esp);movl (%edx), %eax": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <KeRemoveSystemServiceTable+>;subl $, %esp": 1,
                "subl $, %esp;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, %eax;leal -(%ebp), %esp": 1,
                "retl;pushl %edi;leal (%esp), %edi;andl $-, %esp;pushl -(%edi)": 5,
                "movl %ecx, -(%ebp);movl (%edi), %ebx;testb $, %bl;je  <ExInitializePagedLookasideList+>;movl $, (%esp)": 1,
                "movl (%edi), %ebx;testb $, %bl;je  <ExInitializePagedLookasideList+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;testl $, %edi;jne  <ExInitializePagedLookasideList+>;movl $, (%esp)": 1,
                "testl %esi, %esi;je  <ExInitializePagedLookasideList+>;movl (%esi), %eax;testb $, (%esi);je  <ExInitializePagedLookasideList+>": 1,
                "cmpl %eax, %ebx;jne - <ExInitializePagedLookasideList+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);orl $, %eax;movl %eax, -(%ebp);movl %edi, %eax": 1,
                "jne  <ExfAcquirePushLockExclusive+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 4,
                "je  <ExfAcquirePushLockExclusive+>;movl %ebx, (%esp);movl -(%ebp), %ecx;calll - <ExInitializePagedLookasideList+>;subl $, %esp": 1,
                "pause;subl $, %eax;jne - <ExfAcquirePushLockExclusive+>;lock;btrl $, -(%ebp)": 1,
                "lock;btrl $, -(%ebp);setb %al;testb %al, %al;je  <ExfAcquirePushLockExclusive+>": 1,
                "je  <ExfAcquirePushLockExclusive+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testb $, %al;jne  <ExfAcquirePushLockShared+>;movl %ebx, %eax;shrl $, %eax;testl %eax, %eax": 1,
                "subl $, %esp;movb $, -(%ebp);movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl %ebx, %eax;lock;cmpxchgl %esi, (%edi)": 1,
                "lock;btrl $, -(%ebp);setb %al;testb %al, %al;je  <ExfAcquirePushLockShared+>": 1,
                "movl $, -(%ebp);movl %ebx, %esi;andl $, %esi;orl -(%ebp), %esi;shrb $, %al": 1,
                "shrb $, %al;xorl $, %eax;andl $, %eax;movb %al, -(%ebp);jmp - <ExfAcquirePushLockShared+>": 1,
                "movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %esi": 1,
                "subl $, %esp;movl %ebx, %esi;testb $, %bl;jne  <ExfReleasePushLock+>;movl %ebx, %eax": 1,
                "jne  <ExfReleasePushLock+>;movl %ebx, %eax;shrl $, %eax;leal -(%ebx), %edx;cmpl $, %eax": 1,
                "movl %eax, %esi;testl $, %esi;je  <ExfReleasePushLock+>;movl %ebx, %eax;andl $-, %eax": 1,
                "testl %edx, %edx;je  <ExfReleasePushLock+>;movl -(%ebp), %ecx;cmpl $, (%ecx);jg  <ExfReleasePushLock+>": 1,
                "orl $, %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);testl $, %esi;je  <ExfReleasePushLock+>": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %edx;movl %edx, -(%ebp);testb $, %dl;jne  <ExfReleasePushLock+>": 1,
                "testl %edx, %edx;jg  <ExfReleasePushLockShared+>;movl %ebx, %eax;andl $-, %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;lock;cmpxchgl %ecx, (%edi);cmpl %eax, %ebx;jne - <ExfReleasePushLockShared+>": 1,
                "movl %eax, %ebx;movl %ebx, %esi;testb $, %bl;jne  <ExfReleasePushLockExclusive+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl $, %esi;jne  <ExfReleasePushLockExclusive+>": 1,
                "cmpl %eax, %ebx;jne - <ExfReleasePushLockExclusive+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "jne - <ExfReleasePushLockExclusive+>;leal -(%ebp), %esp;popl %ebx;popl %esi;popl %edi": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edx, %ebx;orl $, %ebx": 1,
                "orl $, %ebx;movl %edx, %eax;lock;cmpxchgl %ebx, (%ecx);cmpl %eax, %edx": 2,
                "jne  <ExfTryToWakePushLock+>;movl %ebx, (%esp);calll - <ExInitializePagedLookasideList+>;subl $, %esp;movl -(%ebp), %ebx": 1,
                "movl %esi, %ebx;testl %esi, %esi;jne - <ExfUnblockPushLock+>;cmpb $, -(%ebp);je  <ExfUnblockPushLock+>": 1,
                "subl $, %esp;movl (%ebp), %ebx;testb $, %bl;je  <ExfUnblockPushLock+>;movl $, (%esp)": 1,
                "testl %eax, %eax;je  <ExfUnblockPushLock+>;movl (%ebx), %eax;cmpb $, (%eax);je  <ExfUnblockPushLock+>": 4,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;calll  <DbgBreakPoint>": 8,
                "movl %eax, (%esp);calll  <KeInitializeEvent>;subl $, %esp;movl $, %eax;lock": 1,
                "subl $, %esp;movl $, %eax;lock;cmpxchgl %ebx, (%esi);testl %eax, %eax": 2,
                "movl $, (%esp);movl %eax, (%esp);calll  <KeInitializeSemaphore>;subl $, %esp;movl $, %eax": 1,
                "movl %eax, (%esp);movl $, (%esp);calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %ebx": 7,
                "je  <ExfUnblockPushLock+>;movb $, (%eax);leal (%eax), %edx;movb $, %cl;testb $, %dl": 2,
                "movl (%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);movl (%ebp), %edx;movl -(%ebp), %ecx": 2,
                "cmpl (%edi), %esi;je  <ExfUnblockPushLock+>;movl (%ebp), %ecx;calll *-;movl $, (%esp)": 1,
                "addl $, %ecx;calll  <KeReleaseSemaphore+>;movzbl -(%ebp), %ecx;calll  <KeSetTimer+>;movl (%ebp), %eax": 1,
                "calll  <KeSetTimer+>;movl (%ebp), %eax;movl %eax, (%esp);calll - <ExfUnblockPushLock+>;subl $, %esp": 1,
                "jne  <ExfUnblockPushLock+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "sarl $, %edx;movb %dl, (%eax);movl %esi, %eax;jmp  <ExfUnblockPushLock+>;movl (%ebp), %eax": 1,
                "lock;orl $, (%esp);movl %edx, %eax;xchgl %eax, (%esi);testl %eax, %eax": 9,
                "movb %al, (%edi);movzbl (%edi), %eax;movb %al, (%edi);movl $, %edx;movl %edi, %ecx": 1,
                "movl $, %eax;xchgl %eax, (%esi);movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "movl $, %esi;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "addl $, %esi;movl , %eax;movl -, %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "calll  <DbgPrint>;movl $, %ecx;cmpl $, (%edi);je  <ExfUnblockPushLock+>;movl $, %ecx": 1,
                "cmpl $, (%edi);je  <ExfUnblockPushLock+>;movl $, %ecx;movl $, %edx;cmpl $, (%edi)": 1,
                "movl %eax, (%esp);movl (%edi), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 7,
                "calll *-;movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movzbl -(%ebp), %eax": 2,
                "movl %eax, (%esp);calll - <ExfUnblockPushLock+>;subl $, %esp;cmpl $, (%ebx);je  <ExAcquireResourceExclusiveLite+>": 1,
                "leal -(%ebp), %edi;testb $-, (%ebx);je  <ExAcquireResourceExclusiveLite+>;cmpl %esi, (%ebx);jne  <ExAcquireResourceExclusiveLite+>": 1,
                "addl $, (%ebx);leal -(%ebp), %ecx;calll *-;movl (%ebx), %edx;movl %ebx, %ecx": 5,
                "calll  <RtlAssert>;subl $, %esp;orw $, (%ebx);movl $, (%ebx);movw $, (%ebx)": 1,
                "calll - <ExfUnblockPushLock+>;subl $, %esp;leal -(%ebp), %esi;jmp  <ExAcquireResourceSharedLite+>;testb $-, (%ebx)": 1,
                "movl %eax, (%esp);movl %esi, (%esp);movl %edi, %edx;movl %ebx, %ecx;calll - <ExfUnblockPushLock+>": 1,
                "testl %eax, %eax;je  <ExAcquireResourceSharedLite+>;cmpl %edi, (%eax);jne  <ExAcquireResourceSharedLite+>;movl (%eax), %ecx": 1,
                "orl %ecx, %edx;movl %edx, (%eax);testl $, %edx;jne  <ExAcquireResourceSharedLite+>;movl $, (%esp)": 1,
                "movl %edx, (%eax);movl (%eax), %edx;andl $, %edx;orl $, %edx;movl %edx, (%eax)": 2,
                "cmpw $, (%ebx);je  <ExAcquireResourceSharedLite+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "subl $, %esp;movl $, (%ebx);movw $, (%ebx);jmp  <ExAcquireResourceSharedLite+>;cmpw $, (%ebx)": 1,
                "movl (%ebp), %ebx;movzbl (%ebp), %eax;movb %al, -(%ebp);calll  <PsGetCurrentThread>;movl %eax, %edi": 2,
                "movzbl (%ebp), %eax;movb %al, -(%ebp);calll  <PsGetCurrentThread>;movl %eax, %edi;calll  <KeIsExecutingDpc>": 2,
                "subl $, %esp;leal (%ebx), %ecx;leal -(%ebp), %edx;calll *-;leal -(%ebp), %esi": 1,
                "je  <ExAcquireSharedStarveExclusive+>;cmpl %edi, (%ebx);jne  <ExAcquireSharedStarveExclusive+>;addl $, (%ebx);leal -(%ebp), %ecx": 1,
                "jne  <ExAcquireSharedStarveExclusive+>;jmp - <ExAcquireSharedStarveExclusive+>;movl $, (%esp);movl %esi, (%esp);movl %edi, %edx": 1,
                "movl %edx, (%eax);testl $, %edx;jne  <ExAcquireSharedStarveExclusive+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;leal -(%ebp), %ecx;calll *-;movl $, %eax;jmp  <ExAcquireSharedStarveExclusive+>": 1,
                "movl %edi, (%eax);movl (%eax), %edx;andl $, %edx;orl $, %edx;movl %edx, (%eax)": 4,
                "jne  <ExAcquireSharedStarveExclusive+>;leal -(%ebp), %ecx;calll *-;movl $, %eax;jmp  <ExAcquireSharedStarveExclusive+>": 1,
                "movl $, %eax;jmp  <ExAcquireSharedStarveExclusive+>;movl (%ebx), %edx;testl %edx, %edx;jne  <ExAcquireSharedStarveExclusive+>": 1,
                "jmp  <ExAcquireSharedStarveExclusive+>;movl (%ebx), %edx;testl %edx, %edx;jne  <ExAcquireSharedStarveExclusive+>;movl %esi, (%esp)": 1,
                "calll *-;leal -(%ebp), %esi;cmpl $, (%ebx);jne  <ExAcquireSharedWaitForExclusive+>;cmpw $, (%ebx)": 1,
                "movl %eax, (%ebx);leal -(%ebp), %ecx;calll *-;movl $, %eax;jmp  <ExAcquireSharedWaitForExclusive+>": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, (%ebx);jne  <ExAcquireSharedWaitForExclusive+>;movl $, (%esp)": 1,
                "andl $, %eax;orl $, %eax;movl %eax, (%esi);leal -(%ebp), %ecx;calll *-": 1,
                "leal -(%ebp), %ecx;calll *-;movl $, %eax;jmp  <ExAcquireSharedWaitForExclusive+>;cmpb $, -(%ebp)": 1,
                "subl $, %esp;movl (%ebp), %ebx;calll  <KeIsExecutingDpc>;testb %al, %al;je  <ExConvertExclusiveToSharedLite+>": 1,
                "subl $, %esp;leal (%ebx), %ecx;leal -(%ebp), %edx;calll *-;andw $, (%ebx)": 1,
                "leal -(%ebp), %edx;calll *-;andw $, (%ebx);movl (%ebx), %esi;testl %esi, %esi": 1,
                "andw $, (%ebx);movl (%ebx), %esi;testl %esi, %esi;je  <ExConvertExclusiveToSharedLite+>;addl %esi, (%ebx)": 1,
                "subl $, %esp;cmpl $, (%ebx);je  <ExDeleteResourceLite+>;movl $, (%esp);movl $, (%esp)": 1,
                "rep  stosl %eax, %es:(%edi);testb $, %dl;je  <ExInitializeResourceLite+>;movw $, (%edi);addl $, %edi": 1,
                "jb  <ExIsResourceAcquiredSharedLite+>;cmpl $, %ecx;jbe  <ExIsResourceAcquiredSharedLite+>;leal (%eax), %edx;cmpl %edi, (%eax)": 1,
                "shrl $, %esi;jmp  <ExIsResourceAcquiredSharedLite+>;movl $, %esi;jmp  <ExIsResourceAcquiredSharedLite+>;movl $, %esi": 1,
                "movl (%edx), %ecx;testl %ecx, %ecx;je  <ExReinitializeResourceLite+>;movl %edx, %eax;leal (%edx,%ecx,), %edx": 1,
                "testl %ecx, %ecx;je  <ExReinitializeResourceLite+>;movl %edx, %eax;leal (%edx,%ecx,), %edx;movl $, (%eax)": 1,
                "addl $, %eax;cmpl %edx, %eax;jne - <ExReinitializeResourceLite+>;movw $, (%ebx);movw $, (%ebx)": 1,
                "movzbl -(%ebp), %eax;movl %eax, (%esp);calll - <ExfUnblockPushLock+>;subl $, %esp;testb $-, (%ebx)": 1,
                "movl %eax, (%esp);calll  <KeSetEventBoostPriority>;subl $, %esp;jmp  <ExReleaseResourceForThreadLite+>;andw $, (%ebx)": 1,
                "movl (%ebx), %eax;cmpl %edi, %eax;jne  <ExReleaseResourceForThreadLite+>;leal (%ebx), %esi;cmpl %eax, %eax": 1,
                "jne  <ExReleaseResourceForThreadLite+>;leal (%ebx), %esi;cmpl %eax, %eax;jne  <ExReleaseResourceForThreadLite+>;jmp  <ExReleaseResourceForThreadLite+>": 1,
                "cmpl %eax, %eax;jne  <ExReleaseResourceForThreadLite+>;jmp  <ExReleaseResourceForThreadLite+>;movl $, -(%ebp);testl $, %edi": 1,
                "jne  <ExReleaseResourceForThreadLite+>;movzbl (%edi), %eax;movl %eax, -(%ebp);movl (%ebx), %esi;testl %esi, %esi": 1,
                "movl (%esi), %edx;movl %edx, %eax;shrl $, %eax;subl $, %eax;andl $, %eax": 1,
                "leal (,%eax,), %ecx;andl $, %edx;orl %ecx, %edx;movl %edx, (%esi);testl %eax, %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl %esi, (%ebx)": 9,
                "movl $, (%esp);movl %edi, %edx;movl %ebx, %ecx;calll - <ExfUnblockPushLock+>;subl $, %esp": 1,
                "je  <ExSetResourceOwnerPointer+>;movl -(%ebp), %ecx;movl (%ecx), %edx;movl %edx, %esi;shrl $, %esi": 1,
                "movl (%eax), %ecx;shrl $, %ecx;addl %esi, %ecx;shll $, %ecx;andl $, %edx": 1,
                "calll  <KeIsExecutingDpc>;testb %al, %al;je  <ExSetResourceOwnerPointer+>;movl $, (%esp);movl $, (%esp)": 1,
                "je  <ExEnterCriticalRegionAndAcquireResourceShared+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpw $, (%ebx);js  <ExReleaseResourceAndLeaveCriticalRegion+>": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpw $, (%ebx);js  <ExReleaseResourceAndLeaveCriticalRegion+>;movl $, (%esp)": 1,
                "leave;retl;nop;nop;nop": 12,
                "pushl %ebx;movl (%ecx), %edx;jmp  <ExAcquireRundownProtection+>;movl %eax, %edx;testb $, %dl": 1,
                "jmp  <ExAcquireRundownProtection+>;movl %eax, %edx;testb $, %dl;jne  <ExAcquireRundownProtection+>;leal (%edx), %ebx": 1,
                "jne  <ExAcquireRundownProtection+>;leal (%edx), %ebx;movl %edx, %eax;lock;cmpxchgl %ebx, (%ecx)": 1,
                "movl %esp, %ebp;pushl %esi;pushl %ebx;movl (%ecx), %ebx;addl %edx, %edx": 1,
                "movl $, (%ecx);popl %ebp;retl;pushl %ebp;movl %esp, %ebp": 1,
                "ja  <ExReleaseRundownProtection+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl %eax, %ebx;jmp - <ExReleaseRundownProtection+>;andl $-, %ebx;cmpl $, (%ebx);jne  <ExReleaseRundownProtection+>": 1,
                "pushl %edi;pushl %esi;pushl %ebx;subl $, %esp;movl %ecx, %esi": 7,
                "pushl %ebx;subl $, %esp;movl %ecx, %esi;movl %edx, -(%ebp);movl (%ecx), %ebx": 1,
                "cmpl %edi, %ebx;jae  <ExReleaseRundownProtectionEx+>;cmpb $, -;ja  <ExReleaseRundownProtectionEx+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl %ebx, %edx;subl %edi, %edx": 1,
                "calll  <RtlAssert>;subl $, %esp;movl %ebx, %edx;subl %edi, %edx;movl %ebx, %eax": 1,
                "cmpl %eax, -(%ebp);jne  <ExReleaseRundownProtectionEx+>;movl $, (%esp);movl $, (%esp);addl $, %ebx": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %ecx;movl %ebx, %eax;movl -(%ebp), %edx;lock": 1,
                "movl %ebx, %eax;movl -(%ebp), %edx;lock;cmpxchgl %edx, (%ecx);movl %eax, %esi": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp);movl -(%ebp), %ecx": 2,
                "calll  <DbgPrint>;movl $, %eax;leave;retl;nop": 1,
                "ja  <ExSizeOfRundownProtectionCacheAware+>;cmpl -, %ecx;jb  <ExSizeOfRundownProtectionCacheAware+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %ebx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <ProbeForWrite>;subl $, %esp;jmp  <ExSizeOfRundownProtectionCacheAware+>": 1,
                "calll - <ProbeForWrite>;subl $, %esp;jmp  <ExSizeOfRundownProtectionCacheAware+>;movl $, %eax;nop": 1,
                "nop;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <ExSizeOfRundownProtectionCacheAware+>;movl -(%ebp), %eax": 1,
                "movl %eax, (%edx);jmp  <ExSizeOfRundownProtectionCacheAware+>;movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 2,
                "movl %eax, -(%ebp);movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <ExSizeOfRundownProtectionCacheAware+>": 2,
                "leal (%esi), %esi;jmp - <ExSizeOfRundownProtectionCacheAware+>;movl -(%ebp), %eax;movl %eax, %fs:;cmpl $, (%ebp)": 2,
                "movl (%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <KeInitializeSemaphore>": 1,
                "jmp  <ExSizeOfRundownProtectionCacheAware+>;movl -(%ebp), %edx;cmpl %edx, (%ebp);ja  <ExSizeOfRundownProtectionCacheAware+>;cmpl -, %edx": 1,
                "movl %eax, -(%ebp);jmp  <ExSizeOfRundownProtectionCacheAware+>;nop;jmp - <ExSizeOfRundownProtectionCacheAware+>;movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll  <KeReadStateSemaphore>;subl $, %esp;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "cmpl $, (%ebp);je  <ExSizeOfRundownProtectionCacheAware+>;movl (%ebp), %eax;movl $, (%eax);jmp  <ExSizeOfRundownProtectionCacheAware+>": 1,
                "je  <ExSizeOfRundownProtectionCacheAware+>;movl (%ebp), %edx;movl %eax, (%edx);jmp  <ExSizeOfRundownProtectionCacheAware+>;movl $, %eax": 1,
                "movl %ebx, (%esp);calll  <PoUnregisterSystemState+>;subl $, %esp;jmp  <NtShutdownSystem+>;movl $, %eax": 1,
                "movzwl -, %edx;movw %dx, (%eax);movw $, (%eax);movl -, %edx;movl %edx, (%eax)": 1,
                "jmp  <NtShutdownSystem+>;movl $, %eax;popl %ebp;retl;pushl %ebp": 5,
                "je  <NtShutdownSystem+>;movl (%ebp), %esi;movl $, %ebx;movl -(,%ebx,), %ecx;movl (%ecx), %eax": 1,
                "movl %edx, %eax;mull -;movl %eax, (%esi);movl %edx, (%esi);movl , %eax": 1,
                "movl %eax, (%esi);movl %edx, (%esi);movl , %eax;movl $, %edx;movl %eax, -(%ebp)": 1,
                "addl $, %ebx;movzbl -, %eax;cmpl %ebx, %eax;jg - <NtShutdownSystem+>;movl $, %eax": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl $, (%eax)": 2,
                "movl %edx, (%eax);movl -, %edx;movl %edx, (%eax);cmpb $, -;sete (%eax)": 1,
                "cmpl $, (%ebp);jne  <NtShutdownSystem+>;movzbl -, %edi;testl %edi, %edi;jle  <NtShutdownSystem+>": 1,
                "je  <NtShutdownSystem+>;addl (%eax), %esi;addl (%eax), %ebx;addl (%eax), %ecx;addl $, %edx": 1,
                "movl %ebx, (%eax);movl %ecx, (%eax);movl $, (%eax);movl $, %eax;jmp  <NtShutdownSystem+>": 1,
                "cmpl $, (%ebp);jbe  <NtShutdownSystem+>;movzbl -, %edx;movb %dl, (%eax);movzbl -, %edx": 1,
                "movl $, %edx;movl $, %eax;movl $, %ecx;movl -(,%edx,), %edx;testl %edx, %edx": 1,
                "movl (%eax), %eax;movzbl (%eax), %eax;cmpl $, (%ebp);jne  <NtShutdownSystem+>;testb %al, %al": 4,
                "movl %eax, ;movl $, %eax;jmp  <NtShutdownSystem+>;cmpl $, (%ebx);je  <NtShutdownSystem+>": 1,
                "movl %esp, %ebp;subl $, %esp;movl %fs:, %eax;movl (%eax), %eax;movzbl (%eax), %eax": 2,
                "subl $, %esp;jmp  <NtShutdownSystem+>;movl $, %eax;jmp  <NtShutdownSystem+>;movl $, %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <NtMapViewOfSection+>;subl $, %esp;testl %eax, %eax": 3,
                "movl %esp, %ebp;subl $, %esp;cmpl $, (%ebp);jbe  <NtShutdownSystem+>;movl (%ebp), %eax": 1,
                "jmp  <NtShutdownSystem+>;movl $, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <NtShutdownSystem+>;jmp - <NtShutdownSystem+>;leal (%esi), %esi;leal (%edi), %edi;movl -(%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll  <NtMapViewOfSection+>": 1,
                "calll  <NtMapViewOfSection+>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;js  <NtShutdownSystem+>": 1,
                "je  <NtShutdownSystem+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 4,
                "movl (%ebp), %eax;movl $, (%eax);movl $, %eax;jmp  <NtShutdownSystem+>;movl %edx, %edi": 1,
                "subl $, %ebx;movl %ebx, %ecx;shrl $, %ecx;movl $, %eax;rep  stosl %eax, %es:(%edi)": 8,
                "testb $, %bl;je  <NtShutdownSystem+>;movb $, (%edi);movl , %eax;shll $, %eax": 1,
                "movl (%ebp), %edx;movl (%ebp), %eax;movl $, (%eax);cmpl $, (%ebp);jne  <NtShutdownSystem+>": 1,
                "movl $, (%edx);movl $, (%edx);movl , %eax;movl %eax, (%edx);movl , %eax": 1,
                "movl (%eax), %ecx;movl -(%ebp), %edx;movl %edx, (%ebx);movl -(%ebp), %esi;movl %esi, (%ebx)": 1,
                "movl (%eax), %eax;movl %eax, (%ebx);movl $, %eax;jmp  <NtShutdownSystem+>;movl $, %eax": 2,
                "movl (%ebp), %eax;cmpl $, %eax;jbe  <NtShutdownSystem+>;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "jbe  <NtShutdownSystem+>;movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);movl (%ebp), %eax": 1,
                "subl $, %esp;jmp  <NtShutdownSystem+>;movl $, %eax;leave;retl": 1,
                "addl -, %edx;movl %edx, (%ebx);movl %eax, (%ebx);movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "movl $, (%eax);movl $, %eax;jmp  <NtShutdownSystem+>;movl $, (%esp);calll  <PsTerminateSystemThread+>": 1,
                "subl $, %esp;addl %eax, %esi;movl %ebx, (%esp);calll  <PsTerminateSystemThread+>;subl $, %esp": 1,
                "je  <NtShutdownSystem+>;cmpl %edi, %eax;je  <NtShutdownSystem+>;testl %eax, %eax;je  <NtShutdownSystem+>": 2,
                "jae  <NtShutdownSystem+>;movl (%ebp), %ecx;movl %eax, (%ecx);movl $, %eax;jmp  <NtShutdownSystem+>": 1,
                "movl -(%ebp), %eax;addl %eax, %esi;movl %ebx, (%esp);calll  <PsTerminateSystemThread+>;subl $, %esp": 1,
                "testl %ebx, %ebx;je  <NtShutdownSystem+>;movl %ebx, %ecx;calll  <ObfDereferenceObject>;movl $, %eax": 1,
                "movl (%eax), %edx;movl %edx, (%ebx);movl (%eax), %eax;movl %eax, (%ebx);movl $, %eax": 1,
                "jmp  <NtShutdownSystem+>;movb $, -(%ebp);movl -, %ebx;movl %ebx, -(%ebp);movl (%ebp), %esi": 1,
                "movb $, -(%ebp);movl -, %ebx;movl %ebx, -(%ebp);movl (%ebp), %esi;movl %esi, -(%ebp)": 1,
                "movl -, %ebx;movl %ebx, -(%ebp);movl (%ebp), %esi;movl %esi, -(%ebp);movl %ebx, -(%ebp)": 1,
                "cmpl $, (%eax);jne  <NtShutdownSystem+>;addl $, %eax;movl -(%ebp), %edx;cmpl %eax, (%edx)": 1,
                "movl %edx, %eax;addl $, %eax;movl %eax, (%esp);movl %edx, (%esp);movl $, (%esp)": 1,
                "movl $, -(%ebp);testl %eax, %eax;je  <NtShutdownSystem+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <DbgPrint>;movw $, -(%ebp);movl $, -(%ebp);jmp  <NtShutdownSystem+>": 1,
                "movl (%edx), %esi;movzwl %ax, %eax;addl %esi, %eax;cmpl %eax, %esi;jae  <NtShutdownSystem+>": 1,
                "movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al;notl %ecx;leal -(%ecx,%ecx), %eax": 1,
                "movl -(%ebp), %esi;movl %ecx, (%esi);movl %ebx, (%esi);movl -(%ebp), %edi;movl (%edi), %ecx": 1,
                "movl (%edi), %ecx;movl (%edi), %ebx;movl %ecx, (%esi);movl %ebx, (%esi);movw %ax, (%esi)": 1,
                "subl $, %esp;jmp  <NtShutdownSystem+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "calll  <RtlInitUnicodeString>;subl $, %esp;movl -(%ebp), %esi;movsbl (%esi), %eax;movl -(%ebp), %ebx": 1,
                "movsbl (%esi), %eax;movl -(%ebp), %ebx;movl %eax, (%ebx);movl (%esi), %eax;movl %eax, (%ebx)": 1,
                "movl -(%ecx), %eax;mull %esi;movl %eax, (%ebx);movl %edx, (%ebx);movl -, %esi": 1,
                "movl %edi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <KeUnstackDetachProcess+>;subl $, %esp": 1,
                "movl %eax, (%ebx);movl %edx, (%ebx);jmp  <NtShutdownSystem+>;movb $, -(%ebp);movl -(%ebp), %eax": 1,
                "leal (%esi), %esi;jmp - <NtShutdownSystem+>;movl -(%ebp), %edx;movl %edx, %fs:;cmpb $, -(%ebp)": 1,
                "movl %edi, -(%ebp);movl -, %esi;movl -, %edi;movl %esi, -(%ebp);movl %edi, -(%ebp)": 1,
                "jbe  <NtShutdownSystem+>;leal -(%ebp), %eax;movl %eax, (%esp);movl , %eax;movl %eax, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl , %eax;movl %eax, (%esp);calll  <KeUnstackDetachProcess+>": 1,
                "movl %edx, (%ebx);movl , %eax;movl -, %edx;movl %eax, (%ebx);movl %edx, (%ebx)": 3,
                "movl , %eax;movl %eax, (%ebx);movl , %eax;movl -, %edx;addl -, %edx": 1,
                "movl -, %edx;addl -, %edx;addl -, %edx;addl %eax, %edx;movl %edx, (%ebx)": 1,
                "addl -, %eax;movl %eax, (%ebx);movl $, (%ebx);movl $, (%ebx);movl $, (%ebx)": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %edx, %ebx": 4,
                "movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %edx, %ebx;testl %eax, %eax;jne  <NtShutdownSystem+>": 1,
                "movl %eax, (%ecx);movl %edx, (%ecx);movl (%ecx), %eax;testl %eax, %eax;je  <NtShutdownSystem+>": 1,
                "movl %eax, (%esp);calll  <memmove>;movl -(%ebp), %eax;movzwl (%eax), %eax;movw %ax, -(%ebp)": 4,
                "movl %edx, (%eax);movzwl (%eax), %edx;movl %edx, %eax;addl $, %eax;movl -(%ebp), %ecx": 4,
                "jmp  <NtShutdownSystem+>;movl -(%ebp), %eax;movw $, (%eax);movw $, (%eax);jmp  <NtShutdownSystem+>": 1,
                "movl %edx, -(%ebp);movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <NtShutdownSystem+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <NtShutdownSystem+>": 1,
                "movl (%eax), %esi;cmpl %esi, %eax;je  <NtShutdownSystem+>;movl $, -(%ebp);movl $, %edi": 1,
                "addl $, %edi;movl $, %eax;cmpl (%ebp), %edi;ja  <NtShutdownSystem+>;movl $, (%ebx)": 1,
                "movzwl (%esi), %eax;movw %ax, (%ebx);movzwl -(%ebp), %edx;movw %dx, (%ebx);movw $, (%ebx)": 2,
                "movzwl -(%ebp), %edx;movw %dx, (%ebx);movw $, (%ebx);movw $, -(%ebp);movw $, -(%ebp)": 2,
                "jmp  <NtShutdownSystem+>;cmpb $, %al;je  <NtShutdownSystem+>;movl %ecx, %edx;jmp  <NtShutdownSystem+>": 1,
                "addl $, %ebx;addl $, -(%ebp);movl (%esi), %esi;cmpl %esi, (%ebp);jne - <NtShutdownSystem+>": 2,
                "pushl %esi;pushl %ebx;subl $, %esp;movl %fs:, %eax;movl (%eax), %ebx": 3,
                "cmpw $, (%ebx);jne  <NtShutdownSystem+>;calll  <KiCheckForKernelApcDelivery>;movl %esi, %eax;leal -(%ebp), %esp": 1,
                "cmpl $, (%ebp);sete %al;popl %ebp;retl $;pushl %ebp": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll - <ProbeForRead>;subl $, %esp;movl $, (%esp)": 4,
                "movl %eax, %fs:;movsbl -(%ebp), %ebx;movl %ebx, (%esp);movl , %eax;movl -, %edx": 1,
                "calll  <DbgPrint>;movl $, %ebx;testl %eax, %eax;je  <ExVerifySuite+>;movl $, (%esp)": 1,
                "calll - <NtShutdownSystem+>;movl %eax, %ebx;testl %eax, %eax;js  <ExVerifySuite+>;movl $, (%esp)": 1,
                "leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <ExVerifySuite+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl (%eax), %eax;movzbl (%eax), %ebx;movsbl %bl, %edi;movl (%ebp), %ecx;movl %edi, %edx": 1,
                "movl %edx, (%esp);calll  <SeSinglePrivilegeCheck>;subl $, %esp;testb %al, %al;je  <ExVerifySuite+>": 1,
                "movl %eax, (%esp);calll  <RtlUnicodeStringToAnsiString>;subl $, %esp;movl %eax, %esi;testl %eax, %eax": 2,
                "movl $, (%eax);cmpl $, (%ebp);jbe  <NtQuerySystemInformation+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "cmpl $, %ebx;ja  <NtQuerySystemInformation+>;movl -(,%ebx,), %eax;testl %eax, %eax;je  <NtQuerySystemInformation+>": 1,
                "cmpw $, %ax;je  <ExGetPreviousMode+>;testw %ax, %ax;jle  <ExGetPreviousMode+>;movl $, (%esp)": 1,
                "addl $, %eax;movw %ax, (%ebx);movl $, %edx;testw %ax, %ax;jne  <ExGetPreviousMode+>": 1,
                "movw %ax, (%ebx);movl $, %edx;testw %ax, %ax;jne  <ExGetPreviousMode+>;leal (%ebx), %eax": 1,
                "je  <ExSetTimerResolution+>;movl , %eax;leal (%eax), %edx;movl %edx, -;testl %eax, %eax": 1,
                "subl $, %esp;testl %eax, %eax;jns  <ExSetTimerResolution+>;movl $, %edx;movl $, %ecx": 1,
                "movl $, %eax;movl %edx, %edi;rep  stosl %eax, %es:(%edi);movl $, -;movl $, -": 3,
                "movl -, %edi;movl , %eax;cmpl %eax, %esi;jne - <ExSetTimerResolution+>;movl %esi, %edx": 1,
                "jbe  <ExSetTimerResolution+>;calll *-;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "cmpl -, %ecx;jb  <ExSetTimerResolution+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "jmp  <ExSetTimerResolution+>;movl (%ebp), %ecx;movl %ecx, (%esp);calll  <KeQuerySystemTime>;subl $, %esp": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;leal -(%ebp), %edi;movl %edi, (%esp)": 1,
                "movl %edx, -;movl $, -;movl $, (%esp);movl %ebx, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);movl $, (%esp);calll  <memmove>;movl , %eax": 1,
                "calll - <ExLocalTimeToSystemTime>;subl $, %esp;movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "movzbl (%eax), %eax;movb %al, -(%ebp);calll *-;cmpb $, %al;jbe  <ExSystemTimeToLocalTime+>": 2,
                "cmpb $, %al;jbe  <ExSystemTimeToLocalTime+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 2,
                "calll - <ExRaiseAccessViolation>;movl (%ebp), %ebx;movl (%ebx), %eax;movl (%ebx), %edx;movl %eax, -(%ebp)": 2,
                "movl (%ebx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);cmpl $, (%ebp);je  <ExSystemTimeToLocalTime+>": 1,
                "ja  <ExSystemTimeToLocalTime+>;cmpl %eax, %ecx;ja  <ExSystemTimeToLocalTime+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %ecx": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, %fs:;jmp  <ExSystemTimeToLocalTime+>": 2,
                "movl $, (%esp);calll  <DbgPrint>;movl $, -(%ebp);testl %eax, %eax;je  <ExSystemTimeToLocalTime+>": 1,
                "je  <ExSystemTimeToLocalTime+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 1,
                "leal -(%ebp), %edi;movl %edi, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp);calll - <ExSystemTimeToLocalTime>": 1,
                "cmpl $, (%ebp);jne  <ExSystemTimeToLocalTime+>;jmp  <ExSystemTimeToLocalTime+>;movl -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "movl %edx, (%ebx);jmp  <ExSystemTimeToLocalTime+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 1,
                "movl %eax, (%edx);movl -(%ebp), %eax;cmpl %eax, (%ebp);ja  <ExSystemTimeToLocalTime+>;cmpl -, %eax": 2,
                "movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%edx);movl , %eax;movl (%ebp), %edx": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);jmp  <ExSystemTimeToLocalTime+>;movl (%ebp), %eax;addl $, %eax": 1,
                "jmp  <ExSystemTimeToLocalTime+>;movl , %eax;movl (%ebp), %edx;movl %eax, (%edx);movl , %eax": 1,
                "movl (%edx), %edx;movl %edx, -(%ebp);movl (%eax), %eax;movl (%ebp), %edx;addl $, %edx": 1,
                "movl %eax, (%edx);jmp  <ExSystemTimeToLocalTime+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 1,
                "movl -(%ebp), %edx;movzbl (%edx), %edx;movb %dl, -(%ebp);movl %edx, %eax;andl $, %eax": 1,
                "movl %edx, %eax;andl $, %eax;cmpb $, %al;sbbl %eax, %eax;andl $, %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <ExSetTimerResolution>;subl $, %esp;movl (%ebp), %edx": 1,
                "popl %ebp;rep  retl;testl %ecx, %ecx;jne  <ExSystemTimeToLocalTime+>;addl $, %eax": 1,
                "movl %esi, %ecx;calll  <KefAcquireSpinLockAtDpcLevel>;cmpb $, (%ebx);je  <ExSystemTimeToLocalTime+>;cmpl (%ebx), %edi": 1,
                "movb $, (%ebx);movw $, %di;jmp  <ExSystemTimeToLocalTime+>;movl (%ebp), %eax;movl $, (%eax)": 1,
                "je  <ExSystemTimeToLocalTime+>;movl (%edx), %edx;testl %edx, %edx;je  <ExSystemTimeToLocalTime+>;cmpl (%ebp), %edx": 1,
                "nop;leal (%esi), %esi;je  <ExSystemTimeToLocalTime+>;movl -(%ebp), %ebx;movl (%ebx), %eax": 1,
                "je  <ExSystemTimeToLocalTime+>;movl -(%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "jb  <ExSystemTimeToLocalTime+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%ebx)": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%ebx);cmpl $, (%ebp);je  <ExSystemTimeToLocalTime+>": 1,
                "addl $, %edx;movl %edx, -(%ebp);testb %bl, %bl;jne - <ExSystemTimeToLocalTime+>;jmp  <ExSystemTimeToLocalTime+>": 1,
                "movl %esi, -(%ebp);movl (%ebp), %ebx;cmpl $, (%ebx);je  <ExSystemTimeToLocalTime+>;movl $, %ecx": 1,
                "movl (%ebx), %ecx;testl %ecx, %ecx;je  <ExSystemTimeToLocalTime+>;movl (%ebx), %esi;movl %esi, (%ecx)": 1,
                "movl %esi, (%ecx);movl %ecx, (%esi);movl $, (%ebx);movzbl %al, %edx;movl $, %ecx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;calll  <PsGetCurrentThread>;movl %eax, -(%ebp)": 1,
                "subl $, %esp;calll  <PsGetCurrentThread>;movl %eax, -(%ebp);addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl , %eax;movl %eax, -(%ebp);leal -(%esi), %ebx;movl %ebx, %ecx": 1,
                "cmpb $, %al;sbbl %edi, %edi;addl $, %edi;movl -(%ebp), %ecx;calll  <KefReleaseSpinLockFromDpcLevel>": 1,
                "movl $, -;movl $, -;movl $, -;movl $, %eax;jmp  <ExSystemTimeToLocalTime+>": 1,
                "movl (%ebp), %eax;cmpl -, %eax;jb  <ExSystemTimeToLocalTime+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %edx": 1,
                "addl $, %eax;movl %eax, (%esp);calll  <KeRemoveQueueDpc>;subl $, %esp;movl -(%ebp), %eax": 2,
                "movl $, %esi;movl -(%ebp), %eax;cmpl $, (%eax);je  <ExSystemTimeToLocalTime+>;movl $, %ecx": 1,
                "movl -(%ebp), %eax;movl $, (%eax);movl $, %ecx;calll  <KefReleaseSpinLockFromDpcLevel>;movzbl %bl, %edx": 1,
                "calll  <KefReleaseSpinLockFromDpcLevel>;movzbl %bl, %edx;movl -(%ebp), %ecx;subl $-, %ecx;calll *-": 1,
                "calll  <ObQueryNameString+>;cmpb $, -(%ebp);jne  <ExSystemTimeToLocalTime+>;jmp  <ExSystemTimeToLocalTime+>;movzbl -(%ebp), %eax": 1,
                "movzbl -(%ebp), %eax;movl (%ebp), %edx;movb %al, (%edx);jmp  <ExSystemTimeToLocalTime+>;movl $, %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl $, (%ebp);ja  <NtCreateTimer+>": 1,
                "ja  <NtCreateTimer+>;movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);cmpb $, -(%ebp)": 1,
                "movl -(%ebp), %edx;cmpl %edx, (%ebp);ja  <NtCreateTimer+>;cmpl -, %edx;jb  <NtCreateTimer+>": 2,
                "cmpl -, %edx;jb  <NtCreateTimer+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %edx;movl (%edx), %eax": 2,
                "leal (%esi), %esi;jmp - <NtCreateTimer+>;movl -(%ebp), %eax;movl %eax, %fs:;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx);jmp  <NtCreateTimer+>;movl $, %eax": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);jmp  <NtCreateTimer+>;movl $, %eax;leal -(%ebp), %ecx": 1,
                "movl (%eax), %eax;movzbl (%eax), %ebx;calll *-;cmpb $, %al;jbe  <NtCreateTimer+>": 1,
                "movl (%ebp), %eax;calll - <ExSystemTimeToLocalTime+>;movl %eax, -(%ebp);testl %eax, %eax;js  <NtCreateTimer+>": 1,
                "movl %eax, (%esp);calll  <ObReferenceObjectByHandle>;subl $, %esp;movl %eax, -(%ebp);cmpb $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;subl $-, %ecx;calll *-;movb %al, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll  <KeCancelTimer>;subl $, %esp;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "jne  <NtCreateTimer+>;leal (%eax), %edx;movl -, %ecx;movl $, (%eax);movl %ecx, (%eax)": 1,
                "movl %eax, (%edx);movl -(%ebp), %eax;movl $, (%eax);movl $, %ecx;calll  <KefReleaseSpinLockFromDpcLevel>": 1,
                "calll  <KeInitializeApc>;subl $, %esp;movl -(%ebp), %edx;addl $, %edx;movl %edx, -(%ebp)": 1,
                "movl %edx, (%ecx);movl -(%ebp), %eax;movl %edx, (%eax);movl -(%ebp), %eax;movb $, (%eax)": 1,
                "movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <NtCreateTimer+>;jmp  <NtCreateTimer+>": 1,
                "calll - <ZwClose>;subl $, %esp;testl %ebx, %ebx;js  <NtCreateTimer+>;movl -(%ebp), %eax": 1,
                "movl %ebx, (%esp);leal -(%ebp), %edx;movl $, %ecx;calll - <ExfInterlockedCompareExchange>;subl $, %esp": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <NtAllocateLocallyUniqueId+>": 1,
                "pushl %ebx;subl $, %esp;calll *-;cmpb $, %al;jbe  <NtAllocateUuids+>": 2,
                "subl $, %esp;calll *-;cmpb $, %al;jbe  <NtAllocateUuids+>;calll *-": 3,
                "calll *-;cmpb $, %al;jbe  <NtAllocateUuids+>;movl $, (%esp);movl $, (%esp)": 2,
                "movl %eax, %ebx;movl , %eax;leal -(%eax), %ecx;lock;cmpxchgl %ecx, -": 6,
                "jbe  <NtAllocateUuids+>;movl $, -;jmp  <NtAllocateUuids+>;cmpl %ecx, %edx;ja  <NtAllocateUuids+>": 1,
                "movl %eax, ;movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, ;movl %edx, -": 1,
                "cmpb $, %al;je  <NtAllocateUuids+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edi;movl %fs:, %eax": 1,
                "movl $, (%esp);calll  <DbgPrint>;testl %eax, %eax;je  <NtAllocateUuids+>;movl $, (%esp)": 6,
                "int $;jmp  <NtAllocateUuids+>;movl (%ebp), %eax;movl %eax, (%esp);calll *(%ebp)": 1,
                "subl $, %esp;jmp  <NtAllocateUuids+>;movl (%ebp), %eax;movl %eax, (%esp);calll *(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp)": 10,
                "movl %eax, (%esp);calll - <NtAllocateUuids+>;subl $, %esp;notl %eax;shrl $, %eax": 2,
                "movl $, %edx;testl %eax, %eax;js  <NtAllocateUuids+>;movl $, (%esp);movl %esi, (%esp)": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %ebx": 3,
                "movl (%ebp), %eax;movl (%eax), %ebx;calll  <PsGetCurrentThread>;testb $, (%eax);je  <NtAllocateUuids+>": 1,
                "calll  <PsGetCurrentThread>;movl %eax, %edi;movl $, -(%ebp);testl %ebx, %ebx;jns  <NtAllocateUuids+>": 1,
                "movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);andl $, %ebx": 1,
                "andl $, %ebx;testb $, (%edi);je  <NtAllocateUuids+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpb $, %bl;jne  <NtAllocateUuids+>;orb $, (%edi);cmpb $, -;jne  <NtAllocateUuids+>": 1,
                "movl $, (%esp);calll  <KeSetKernelStackSwapEnable>;subl $, %esp;movl $, (%esp);calll  <PsTerminateSystemThread>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebx), %eax;movl %eax, (%esp);calll *(%ebx)": 1,
                "movl -, %edx;calll *%edx;testb %al, %al;je  <NtAllocateUuids+>;movl (%ebx), %esi": 1,
                "calll  <KeBugCheckEx>;testb $, (%edi);je - <NtAllocateUuids+>;movl (%ebx), %eax;movl $, (%esp)": 1,
                "orl $, %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <NtAllocateUuids+>;movl $, %ebx;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <ObReferenceObjectByHandle>;subl $, %esp;movl %ebx, (%esp)": 1,
                "subl $, %esp;jmp - <NtAllocateUuids+>;movl -(%ebp), %ebx;leave;retl $": 1,
                "movl %esp, %ebp;pushl %esi;pushl %ebx;subl $, %esp;movl $, %esi": 1,
                "pushl %ebx;subl $, %esp;movl $, %esi;imull $, %esi, %ebx;addl $, %ebx": 1,
                "cmpl %eax, (%ebx);jne  <NtAllocateUuids+>;cmpl $, (%ebx);jg  <NtAllocateUuids+>;movl %esi, (%esp)": 1,
                "calll  <PsTerminateSystemThread>;subl $, %esp;jmp - <NtAllocateUuids+>;pushl %ebp;movl %esp, %ebp": 1,
                "movl $, %eax;rep  stosl %eax, %es:(%edi);movl $, (%esp);movl %edx, (%esp);calll  <KeInitializeQueue>": 1,
                "movl -(%ebp), %esi;movl $, (%esp);movl $, (%esp);calll - <NtAllocateUuids+>;subl $, %esp": 1,
                "addl $, -;addl $, %ebx;cmpl %ebx, %esi;jne - <NtAllocateUuids+>;movl $, (%esp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);movl %edi, (%esp);calll  <KeInitializeApc>;subl $, %esp": 1,
                "jne - <NtAllocateUuids+>;calll *-;cmpb $, %al;je  <NtAllocateUuids+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%esi), %eax;cmpl -, %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %eax;addl $, %edx;cmpl %edx, %eax": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %eax": 19,
                "movl (%ebp), %edx;movl (%ebp), %esi;movl %esi, %ecx;orl %edx, %ecx;testb $, %cl": 1,
                "movl %edx, (%eax);movl (%eax), %ecx;addl %ecx, %edx;addl %ecx, %ebx;movl %esi, %edi": 1,
                "movl %ebx, %ecx;calll *-;movl %esi, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edx;movl (%ebp), %ebx": 1,
                "movl %esi, %ecx;orl %eax, %ecx;testb $, %cl;jne  <ExInitializeZone+>;cmpl %ebx, %esi": 1,
                "cmpl %ebx, %esi;jae  <ExInitializeZone+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %edx;testl %eax, %eax;je  <ExInitializeZone+>;movl $, (%esp);movl $, (%esp)": 1,
                "testl %eax, %eax;je  <ExInitializeZone+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%edx), %edi;movl %edi, (%eax);movl %eax, (%edx);addl (%edx), %eax;leal (%ecx,%ebx), %edi": 1,
                "movl (%ebp), %edi;movl $, (%edi);movl $, (%edi);movl (%ebp), %edi;movl $, (%edi)": 2,
                "movl -, %edx;movl %edx, -(%ebp);movl $, %ecx;movl $, %eax;movw %cx, -(%ebp)": 1,
                "movzwl %ax, %edx;movzbl (%esi,%edx), %edx;testb %dl, %dl;jns  <FsRtlDissectDbcs+>;cmpb $, -(%ebp)": 1,
                "je  <FsRtlDissectDbcs+>;movzbl %dl, %ecx;movl -(%ebp), %edi;cmpw $, (%edi,%ecx,);jne  <FsRtlDissectDbcs+>": 1,
                "jne  <FsRtlDissectDbcs+>;cmpb $, %dl;jne  <FsRtlDissectDbcs+>;testw %ax, %ax;jne  <FsRtlDissectDbcs+>": 1,
                "movw $, -(%ebp);addl $, %eax;cmpw %bx, %ax;jb - <FsRtlDissectDbcs+>;jmp  <FsRtlDissectDbcs+>": 1,
                "movl -(%ebp), %edi;leal (%edx,%edi), %edx;movl (%ebp), %esi;movl %edx, (%esi);notl %eax": 1,
                "movw %bx, (%esi);jmp  <FsRtlDissectDbcs+>;addl $, %eax;jmp - <FsRtlDissectDbcs+>;movzwl -(%ebp), %ecx": 1,
                "jmp  <FsRtlDissectDbcs+>;addl $, %eax;jmp - <FsRtlDissectDbcs+>;movzwl -(%ebp), %ecx;movzwl %cx, %eax": 1,
                "movl (%ebp), %ebx;calll *-;cmpb $, %al;jbe  <FsRtlDoesDbcsContainWildCards+>;calll *-": 1,
                "subl $, %esp;movzwl (%ebx), %ecx;testw %cx, %cx;je  <FsRtlDoesDbcsContainWildCards+>;movl (%ebx), %ebx": 1,
                "movl $, %eax;jmp  <FsRtlDoesDbcsContainWildCards+>;movl $, %eax;jmp  <FsRtlDoesDbcsContainWildCards+>;addl $, %eax": 1,
                "jbe  <FsRtlIsDbcsInExpression+>;calll *-;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "testw %dx, %dx;je  <FsRtlIsDbcsInExpression+>;jmp  <FsRtlIsDbcsInExpression+>;cmpw $, (%ebx);sete %al": 1,
                "jmp  <FsRtlIsDbcsInExpression+>;movl (%ebx), %eax;cmpb $, (%eax);jne  <FsRtlIsDbcsInExpression+>;movl (%ebx), %eax": 1,
                "addl $, -(%ebp);subw $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <FsRtlDoesDbcsContainWildCards>": 1,
                "movl %ecx, -(%ebp);movl $, %edx;movzwl %dx, %eax;movzbl (%esi,%eax), %ecx;movl $, %eax": 1,
                "ja - <FsRtlIsDbcsInExpression+>;movl $, %eax;jb  <FsRtlIsDbcsInExpression+>;movzwl %di, %edi;movl %edi, (%esp)": 1,
                "cmpb $, %al;je  <FsRtlIsDbcsInExpression+>;movl (%ebp), %ebx;movl (%ebx), %edx;movl -(%ebp), %ebx": 1,
                "movl (%ebp), %ebx;movl (%ebx), %edx;movl -(%ebp), %ebx;cmpb (%edx,%ebx), %al;setne %al": 1,
                "movl -(%ebp), %ebx;cmpb (%edx,%ebx), %al;setne %al;movzbl %al, %eax;addw %ax, -(%ebp)": 1,
                "jmp  <FsRtlIsDbcsInExpression+>;cmpb $, %bl;jne  <FsRtlIsDbcsInExpression+>;movzwl -(%ebp), %ebx;movzwl %si, %ecx": 1,
                "jne  <FsRtlIsDbcsInExpression+>;addl $, %esi;movzwl %si, %ecx;addl $, %ecx;cmpl %ebx, %ecx": 1,
                "je - <FsRtlIsDbcsInExpression+>;jmp - <FsRtlIsDbcsInExpression+>;movw %si, -(%ebp);movzwl -(%ebp), %esi;movl %eax, %ecx": 1,
                "movl %eax, %ebx;cmpw -(%ebp), %cx;jne  <FsRtlIsDbcsInExpression+>;cmpw $-, %bx;jne  <FsRtlIsDbcsInExpression+>": 1,
                "jmp  <FsRtlIsDbcsInExpression+>;movzwl %si, %ebx;addl $, %ebx;movzwl -(%ebp), %edx;cmpl %edx, %ebx": 1,
                "cmpb (%eax,%ecx), %dl;sete %al;movzbl %al, %eax;addw %ax, -(%ebp);addl $, %esi": 1,
                "jmp  <FsRtlIsDbcsInExpression+>;cmpw $, -(%ebp);js  <FsRtlIsDbcsInExpression+>;movswl -(%ebp), %eax;movl -(%ebp), %ebx": 1,
                "movw %ax, -(%ebp);cmpw %ax, %si;jb - <FsRtlIsDbcsInExpression+>;movl %edi, %ebx;movzwl -(%ebp), %edi": 1,
                "movl %eax, (%esp);calll  <ExFreePoolWithTag>;subl $, %esp;cmpl $, -(%ebp);je  <FsRtlIsDbcsInExpression+>": 1,
                "calll  <ExFreePoolWithTag>;subl $, %esp;cmpl $, -(%ebp);je  <FsRtlIsDbcsInExpression+>;movl $, (%esp)": 1,
                "movb %dl, -(%ebp);movl %eax, %ebx;movl %eax, %edi;shrl $, %edi;movl (%ebp), %esi": 2,
                "shrl $, %edi;movl (%ebp), %esi;calll *-;cmpb $, %al;jbe  <FsRtlIsFatDbcsLegal+>": 1,
                "subl $, %esp;movl $, %eax;testw %bx, %bx;je  <FsRtlIsFatDbcsLegal+>;cmpb $, -(%ebp)": 1,
                "subl $, %eax;cmpw $, %ax;ja  <FsRtlIsFatDbcsLegal+>;movl -(%ebp), %eax;cmpb $, (%eax)": 1,
                "jne  <FsRtlIsFatDbcsLegal+>;cmpw $, -(%ebp);jne  <FsRtlIsFatDbcsLegal+>;cmpb $, (%eax);je  <FsRtlIsFatDbcsLegal+>": 1,
                "ja  <FsRtlIsFatDbcsLegal+>;movl -(%ebp), %edi;movzbl -, %ecx;movb %cl, -(%ebp);movl -, %esi": 1,
                "jns  <FsRtlIsFatDbcsLegal+>;cmpb $, -(%ebp);je  <FsRtlIsFatDbcsLegal+>;movzbl %cl, %eax;movl -(%ebp), %edi": 1,
                "cmpb $, -(%ebp);je  <FsRtlIsFatDbcsLegal+>;movzbl %cl, %eax;movl -(%ebp), %edi;cmpw $, (%edi,%eax,)": 1,
                "jne  <FsRtlIsHpfsDbcsLegal+>;addl $, %esi;subl $, %ebx;leal -(%edi), %eax;jmp  <FsRtlIsHpfsDbcsLegal+>": 1,
                "cmpb $, -(%ebp);je  <FsRtlIsHpfsDbcsLegal+>;leal -(%ecx), %eax;cmpw $, %ax;ja  <FsRtlIsHpfsDbcsLegal+>": 1,
                "subl $, %eax;movl %eax, -(%ebp);movw %cx, -(%ebp);movzwl %dx, %eax;movzbl (%ebx,%eax), %eax": 1,
                "cmpw $, (%edi,%ecx,);jne  <FsRtlIsHpfsDbcsLegal+>;jmp  <FsRtlIsHpfsDbcsLegal+>;addl $, %edx;jmp  <FsRtlIsHpfsDbcsLegal+>": 1,
                "cmpw %dx, -(%ebp);ja - <FsRtlIsHpfsDbcsLegal+>;movzwl -(%ebp), %ecx;movzwl %cx, %ecx;movzbl -(%ebx,%ecx), %eax": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %eax": 8,
                "jne  <FsRtlIsHpfsDbcsLegal+>;addl $, %eax;retl;pushl %ebp;movl %esp, %ebp": 1,
                "movl %esp, %ebp;addl $, -;popl %ebp;retl;pushl %ebp": 4,
                "jne  <FsRtlCopyRead+>;movl (%ebp), %ecx;movl $, (%ecx);movl $, (%ecx);movb $, -(%ebp)": 1,
                "movl (%ebp), %edx;movl $, (%edx);movl $, (%edx);movb $, -(%ebp);jmp  <FsRtlCopyRead+>": 1,
                "movl (%ecx), %ecx;movl %ecx, -(%ebp);cmpb $, -(%ebp);je  <FsRtlCopyRead+>;movl %fs:, %eax": 1,
                "movb $, -(%ebp);jmp  <FsRtlCopyRead+>;movl (%ebp), %ecx;cmpl $, (%ecx);je  <FsRtlCopyRead+>": 1,
                "je  <FsRtlCopyRead+>;movl -(%ebp), %esi;movzbl (%esi), %eax;movb $, -(%ebp);testb %al, %al": 1,
                "movl -(%ebp), %esi;movzbl (%esi), %eax;movb $, -(%ebp);testb %al, %al;je  <FsRtlCopyRead+>": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %edx;movl (%ecx), %eax;cmpl %eax, -(%ebp);jl  <FsRtlCopyRead+>": 1,
                "jl  <FsRtlCopyRead+>;jg  <FsRtlCopyRead+>;cmpl %edx, %ebx;jbe  <FsRtlCopyRead+>;movl (%ebp), %esi": 1,
                "jg  <FsRtlCopyRead+>;jl  <FsRtlCopyRead+>;cmpl %ebx, %edx;ja  <FsRtlCopyRead+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %esi;leal (%esi,%eax), %eax;shrl $, %eax;movl %eax, -(%ebp);movb $, -(%ebp)": 1,
                "je  <FsRtlCopyRead+>;movl -(%ebp), %ecx;movl -(%ebp), %edx;orl (%edx), %ecx;jne  <FsRtlCopyRead+>": 1,
                "orl (%edx), %ecx;jne  <FsRtlCopyRead+>;movl (%ebp), %esi;movl %esi, (%esp);movl (%ebp), %eax": 1,
                "calll - <CcFastCopyRead>;subl $, %esp;movl (%ebp), %edx;orl $, (%edx);movl (%ebp), %ecx": 1,
                "jb  <FsRtlCopyRead+>;ja  <FsRtlCopyRead+>;cmpl (%ecx), %eax;jbe  <FsRtlCopyRead+>;movl $, (%esp)": 1,
                "cmpl (%ecx), %eax;jbe  <FsRtlCopyRead+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpb $, -(%ebp);jne  <FsRtlCopyRead+>;movl (%ebp), %esi;movl (%esi), %eax;movl $, %edx": 1,
                "movb $, -(%ebp);jmp  <FsRtlCopyRead+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 1,
                "calll  <IoCsqRemoveNextIrp+>;jmp - <FsRtlCopyRead+>;movb $, -(%ebp);jmp  <FsRtlCopyRead+>;nop": 1,
                "subl $, %esp;movzbl (%ebp), %ebx;movl $, -(%ebp);movl (%ebp), %esi;cmpl $-, (%esi)": 1,
                "cmpl $, (%ebp);jne  <FsRtlCopyWrite+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %edx;testb $, (%edx);jne  <FsRtlCopyWrite+>;cmpl $, (%ebp);jne  <FsRtlCopyWrite+>": 1,
                "movl -(%ebp), %ecx;movzwl (%ecx), %eax;cmpw $, %ax;je  <FsRtlCopyWrite+>;testw %ax, %ax": 1,
                "movzwl (%ecx), %eax;cmpw $, %ax;je  <FsRtlCopyWrite+>;testw %ax, %ax;jle  <FsRtlCopyWrite+>": 1,
                "subl $, %esp;movzbl -(%ebp), %eax;movl -(%ebp), %edx;subw $, (%edx);testb %bl, %bl": 1,
                "ja  <FsRtlCopyWrite+>;movl $, (%esp);movl (%ecx), %eax;movl %eax, (%esp);calll - <ExAcquireResourceSharedLite>": 1,
                "movl (%ecx), %eax;movl %eax, (%esp);calll - <ExAcquireResourceSharedLite>;subl $, %esp;movl $, %ecx": 1,
                "calll - <ExAcquireResourceSharedLite>;subl $, %esp;movl $, %ecx;jmp  <FsRtlCopyWrite+>;movl $, (%esp)": 1,
                "cmpl %edx, %eax;ja  <FsRtlCopyWrite+>;cmpl $, (%esi);setne %bl;movzbl %bl, %ebx": 1,
                "testb %bl, %bl;jne  <FsRtlCopyWrite+>;testb %cl, %cl;je  <FsRtlCopyWrite+>;cmpl %eax, %edx": 1,
                "jne  <FsRtlCopyWrite+>;movl (%esi), %eax;movl %eax, -(%ebp);movl (%ebp), %edx;addl %eax, %edx": 1,
                "cmpl $, (%edx);je  <FsRtlCopyWrite+>;movl -(%ebp), %ecx;cmpb $, (%ecx);je  <FsRtlCopyWrite+>": 1,
                "calll  <IoGetRelatedDeviceObject>;subl $, %esp;movl %eax, %esi;movl (%eax), %eax;movl (%eax), %ebx": 2,
                "movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;leal (%esi), %esi;jmp - <FsRtlCopyWrite+>": 1,
                "movl (%edx), %edx;movl %eax, (%edx);orl $, (%esi);movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "movl $, (%edx);movb %bl, -(%ebp);jmp  <FsRtlCopyWrite+>;cmpb $, -(%ebp);je  <FsRtlCopyWrite+>": 1,
                "movl %eax, (%esi);movl -(%ebp), %edx;movl %edx, (%esi);movl (%esi), %ecx;calll - <ExReleaseResourceLite>": 1,
                "ja  <FsRtlCopyWrite+>;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp)": 5,
                "je  <FsRtlCopyWrite+>;movb $, -(%ebp);jmp  <FsRtlCopyWrite+>;movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "adcl %edi, %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);jmp  <FsRtlCopyWrite+>;movl (%ebp), %ecx": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);movl (%ebp), %eax;cmpl $, (%eax);je  <FsRtlCopyWrite+>": 1,
                "je  <FsRtlCopyWrite+>;movl (%edx), %ecx;movl (%edx), %ebx;movl -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "jbe  <FsRtlCopyWrite+>;movl $, %eax;movl $, %edx;subl -(%ebp), %eax;sbbl -(%ebp), %edx": 1,
                "testb %al, %al;je  <FsRtlCopyWrite+>;movl -(%ebp), %edi;movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "jg  <FsRtlCopyWrite+>;cmpl %esi, %edi;jbe  <FsRtlCopyWrite+>;movl -(%ebp), %edx;movl (%edx), %edx": 1,
                "movl -(%ebp), %eax;cmpl %edx, (%eax);je  <FsRtlCopyWrite+>;movl (%eax), %eax;testl %eax, %eax": 1,
                "subl $, %esp;movl -(%ebp), %eax;movl %edi, (%eax);movl -(%ebp), %edx;movl %edx, (%eax)": 1,
                "movl %esi, -(%ebp);movl %ebx, -(%ebp);movb $, -(%ebp);jmp  <FsRtlCopyWrite+>;movl -(%ebp), %ecx": 1,
                "leal (%esi), %esi;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <FsRtlCopyWrite+>;movl $, %eax": 1,
                "movl (%eax), %eax;movl %esi, (%eax);movl %edi, (%eax);orl $, (%ecx);movl (%ebp), %eax": 1,
                "subl $, %esp;movl -(%ebp), %esi;movl -(%ebp), %ecx;movl %esi, (%ecx);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;movl %esi, (%ecx);movl (%ecx), %ecx;calll - <ExReleaseResourceLite>;jmp  <FsRtlCopyWrite+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpw $, (%ebx);js  <FsRtlCopyWrite+>": 3,
                "subl $, %esp;movzwl (%ebx), %eax;addl $, %eax;movw %ax, (%ebx);movb $, -(%ebp)": 3,
                "jne  <FsRtlCopyWrite+>;calll  <KiCheckForKernelApcDelivery>;jmp  <FsRtlCopyWrite+>;movb $, -(%ebp);jmp  <FsRtlCopyWrite+>": 1,
                "jmp  <FsRtlCopyWrite+>;movb $, -(%ebp);jmp  <FsRtlCopyWrite+>;movb $, -(%ebp);jmp  <FsRtlCopyWrite+>": 1,
                "cmpb $, %al;jbe  <FsRtlGetFileSize+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl %edi, (%esp);calll  <IoGetRelatedDeviceObject>;subl $, %esp": 1,
                "movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax;je  <FsRtlGetFileSize+>;movl (%eax), %eax": 1,
                "testl %eax, %eax;je  <FsRtlGetFileSize+>;movl %esi, (%esp);leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "calll  <IofCallDriver>;cmpl $, %eax;jne  <FsRtlGetFileSize+>;movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <FsRtlGetFileSize+>;testl %eax, %eax;jns  <FsRtlGetFileSize+>;movl %eax, -(%ebp);movzbl -(%ebp), %eax": 1,
                "jns  <FsRtlGetFileSize+>;movl %eax, -(%ebp);movzbl -(%ebp), %eax;movl %eax, (%esp);calll  <IoSetThreadHardErrorMode>": 1,
                "je  <FsRtlGetFileSize+>;movl $, -(%ebp);jmp  <FsRtlGetFileSize+>;movl -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "jmp  <FsRtlGetFileSize+>;movl -(%ebp), %eax;movl -(%ebp), %edx;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl %eax, (%ecx);movl %edx, (%ecx);movl -(%ebp), %eax;jmp  <FsRtlGetFileSize+>;movl $, %eax": 1,
                "movl %ebx, (%esp);calll *%eax;subl $, %esp;jmp  <FsRtlMdlReadComplete+>;movl %ebx, (%esp)": 1,
                "je  <FsRtlMdlReadComplete+>;testl %edx, %edx;je  <FsRtlMdlReadComplete+>;movl $, %eax;cmpl $, (%edx)": 1,
                "movl $, %edi;movl $, %eax;movl $, %edx;movl (%ebp), %ecx;subl (%ecx), %eax": 1,
                "jae  <FsRtlMdlReadDev+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %edx, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);movl %fs:, %eax": 1,
                "movl (%ecx), %ecx;movl %ecx, -(%ebp);movl %fs:, %eax;movl (%eax), %ebx;movl %fs:, %eax": 1,
                "movl %ecx, -(%ebp);movl %fs:, %eax;movl (%eax), %ebx;movl %fs:, %eax;cmpl (%eax), %ebx": 1,
                "cmpw $, %ax;je  <FsRtlMdlReadDev+>;testw %ax, %ax;jle  <FsRtlMdlReadDev+>;movl $, (%esp)": 1,
                "calll - <ExAcquireResourceSharedLite>;subl $, %esp;movl (%ebp), %ecx;cmpl $, (%ecx);je  <FsRtlMdlReadDev+>": 1,
                "je  <FsRtlMdlReadDev+>;movl -(%ebp), %edx;movzbl (%edx), %eax;testb %al, %al;jne  <FsRtlMdlReadDev+>": 1,
                "movl (%eax), %edx;movl (%eax), %eax;addl -(%ebp), %esi;adcl -(%ebp), %edi;cmpl %eax, %edi": 1,
                "jg  <FsRtlMdlReadDev+>;cmpl %edx, %esi;jbe  <FsRtlMdlReadDev+>;movl (%ebp), %esi;movl (%esi), %ebx": 1,
                "subl %ebx, %edx;movl %edx, (%ebp);calll  <PsGetCurrentThread>;movl $, (%eax);movb $, -(%ebp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %esi": 1,
                "movl %ebx, (%esp);calll  <IoGetBaseFileSystemDeviceObject>;subl $, %esp;movl %eax, %ecx;movl (%eax), %eax": 3,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <FsRtlMdlReadDev>;subl $, %esp;leal -(%ebp), %esp": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %edx, (%esp);calll - <CcMdlReadComplete+>;subl $, %esp": 1,
                "subl $, %esp;jmp  <FsRtlMdlWriteComplete+>;movl %ebx, (%esp);calll  <IoGetBaseFileSystemDeviceObject>;subl $, %esp": 1,
                "movl $, -(%ebp);cmpl $-, (%ebx);jne  <FsRtlPrepareMdlWriteDev+>;cmpl $-, (%ebx);sete %al": 1,
                "movl %esi, %eax;movl %edi, %edx;addl (%ebx), %eax;adcl (%ebx), %edx;movl %eax, -(%ebp)": 1,
                "jne  <FsRtlPrepareMdlWriteDev+>;movl %esi, %eax;movl %edi, %edx;addl (%ebx), %eax;adcl (%ebx), %edx": 1,
                "movl %edi, %edx;addl (%ebx), %eax;adcl (%ebx), %edx;movl -(%ebp), %ecx;cmpl (%ecx), %edx": 1,
                "subl $, %esp;cmpb $, -(%ebp);jne  <FsRtlPrepareMdlWriteDev+>;movl -(%ebp), %ecx;movl (%ecx), %eax": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);movl $, %ecx;jmp  <FsRtlPrepareMdlWriteDev+>;movl $, %ecx": 1,
                "movl (%ebx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);addl %esi, %eax;adcl %edi, %edx": 1,
                "movl -(%ebp), %edx;cmpb $, (%edx);je  <FsRtlPrepareMdlWriteDev+>;movl $, %eax;movl $, %edx": 1,
                "movl -(%ebp), %eax;cmpl (%eax), %edx;jg  <FsRtlPrepareMdlWriteDev+>;jl  <FsRtlPrepareMdlWriteDev+>;movl -(%ebp), %edx": 1,
                "calll - <ExAcquireResourceExclusiveLite>;subl $, %esp;cmpb $, -(%ebp);je  <FsRtlPrepareMdlWriteDev+>;movl -(%ebp), %ecx": 1,
                "jg  <FsRtlPrepareMdlWriteDev+>;movl -(%ebp), %eax;cmpl %eax, (%edx);jbe  <FsRtlPrepareMdlWriteDev+>;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %edx;movl (%edx), %eax;movl (%edx), %edx;movl %eax, -(%ebp)": 1,
                "movl %esi, (%ecx);movb $, -(%ebp);jmp  <FsRtlPrepareMdlWriteDev+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "jg  <FsRtlPrepareMdlWriteDev+>;cmpl (%ecx), %edx;jbe  <FsRtlPrepareMdlWriteDev+>;movl $, (%esp);leal -(%ebp), %eax": 1,
                "jmp  <FsRtlPrepareMdlWriteDev+>;movl (%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, (%eax);cmpb $, -(%ebp);je  <FsRtlPrepareMdlWriteDev+>;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl %esi, (%ecx);movl (%ebp), %eax;orl $, (%eax);cmpb $, -(%ebp);je  <FsRtlPrepareMdlWriteDev+>": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);movl -(%ebp), %eax": 2,
                "movl %eax, (%ecx);movl %edx, (%ecx);movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, (%ecx)": 1,
                "movl %edx, (%ecx);movl (%ecx), %ecx;calll - <ExReleaseResourceLite>;jmp  <FsRtlPrepareMdlWriteDev+>;movl -(%ebp), %edx": 1,
                "movl (%ecx), %ecx;calll - <ExReleaseResourceLite>;jmp  <FsRtlPrepareMdlWriteDev+>;movl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "calll - <ExReleaseResourceLite>;jmp  <FsRtlPrepareMdlWriteDev+>;movl -(%ebp), %edx;movl -(%ebp), %ecx;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl %edx, (%eax);movl %ecx, (%eax);jmp  <FsRtlPrepareMdlWriteDev+>;movl -(%ebp), %edx": 1,
                "movl (%eax), %eax;movl (%eax), %eax;testl %eax, %eax;je  <FsRtlPrepareMdlWrite+>;movl (%eax), %eax": 1,
                "movl (%eax), %eax;testl %eax, %eax;je  <FsRtlPrepareMdlWrite+>;movl %esi, (%esp);movl (%ebp), %edx": 1,
                "jmp  <FsRtlPrepareMdlWrite+>;movl %ebx, (%esp);calll  <IoGetBaseFileSystemDeviceObject>;subl $, %esp;movl %eax, %ecx": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll *%eax;subl $, %esp;jmp  <FsRtlPrepareMdlWrite+>": 1,
                "testl %ecx, %ecx;je  <FsRtlReleaseFile+>;calll - <ExReleaseResourceLite>;movl %fs:, %eax;movl (%eax), %ebx": 2,
                "movzwl (%ebx), %eax;cmpw $, %ax;je  <FsRtlReleaseFile+>;testw %ax, %ax;jle  <FsRtlReleaseFile+>": 1,
                "testl %eax, %eax;je  <FsRtlReleaseFile+>;movl (%esi), %eax;testl %eax, %eax;je  <FsRtlReleaseFile+>": 1,
                "je  <FsRtlReleaseFile+>;movl %eax, (%esp);calll - <ExIsResourceAcquiredSharedLite>;subl $, %esp;testl %eax, %eax": 1,
                "movl (%esi), %edx;movl $, %eax;testl %edx, %edx;je  <FsRtlReleaseFile+>;movl $, (%esp)": 1,
                "calll - <ExAcquireResourceSharedLite>;subl $, %esp;movl $, %eax;leal -(%ebp), %esp;popl %ebx": 2,
                "calll  <IoGetRelatedDeviceObject>;subl $, %esp;movl %eax, %edi;movl %ebx, (%esp);calll  <IoGetBaseFileSystemDeviceObject>": 1,
                "je  <FsRtlReleaseFile+>;movl %eax, (%esp);movl %ebx, (%esp);calll *%edx;subl $, %esp": 1,
                "calll  <IoGetRelatedDeviceObject>;subl $, %esp;movl %eax, %edi;movl %esi, (%esp);calll  <IoGetBaseFileSystemDeviceObject>": 1,
                "movl (%ebx), %edx;movl (%ebx), %eax;movl (%ebp), %esi;cmpl %eax, (%esi);jl  <FsRtlReleaseFile+>": 1,
                "jne  <FsRtlReleaseFile+>;testl %ecx, %ecx;je  <FsRtlReleaseFile+>;movl $, %esi;testb $, %al": 1,
                "testb $, %al;je  <FsRtlReleaseFile+>;movl %esi, %eax;testb %al, %al;jne  <FsRtlReleaseFile+>": 1,
                "calll - <ExReleaseResourceLite>;jmp  <FsRtlReleaseFile+>;movl %esi, %eax;testb %al, %al;je - <FsRtlReleaseFile+>": 1,
                "movl %esi, %ecx;calll  <IofCallDriver>;cmpl $, %eax;jne  <FsRtlBalanceReads+>;movl $, (%esp)": 1,
                "jmp  <FsRtlBalanceReads+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "cmpl %eax, %edx;jg  <FsRtlSyncVolumes+>;jl  <FsRtlSyncVolumes+>;cmpl %esi, %ebx;jae  <FsRtlSyncVolumes+>": 1,
                "cmpl (%ecx), %esi;jae  <FsRtlSyncVolumes+>;cmpl %eax, %edx;jg  <FsRtlSyncVolumes+>;jl  <FsRtlSyncVolumes+>": 1,
                "movl %edx, -(%ebp);testl %eax, %eax;jne  <FsRtlSyncVolumes+>;movl (%edx), %esi;movl -(%ebp), %eax": 1,
                "movl (%ecx), %ecx;addl (%ecx), %eax;adcl (%ecx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movb %al, (%edx);popl %ebp;retl $;pushl %ebp;movl %esp, %ebp": 4,
                "movl (%ebp), %edx;movl $, (%ecx);testl %eax, %eax;je  <FsRtlSyncVolumes+>;testl %edx, %edx": 1,
                "je  <FsRtlSyncVolumes+>;movl $, (%edx);movl %ebx, (%ecx);movl %ecx, (%esp);movl (%ebp), %edx": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll *%eax;subl $, %esp;movl (%ebp), %edx": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, (%esp);calll - <FsRtlSyncVolumes+>;subl $, %esp": 1,
                "movzbl (%ebp), %edx;movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <FsRtlGetNextFileLock+>": 1,
                "movl (%ebp), %ebx;movl (%ecx), %edx;movl (%ecx), %eax;cmpl (%ebx), %eax;jl  <FsRtlGetNextFileLock+>": 1,
                "cmpl (%ebx), %edx;jbe  <FsRtlGetNextFileLock+>;movl (%ebx), %eax;movl (%ebx), %edx;movl %eax, (%ecx)": 1,
                "movl (%ebx), %eax;movl (%ebx), %edx;movl %eax, (%ecx);movl %edx, (%ecx);popl %ebx": 1,
                "calll  <RtlDeleteElementGenericTable>;subl $, %esp;testb %al, %al;jne  <FsRtlGetNextFileLock+>;movl $, (%esp)": 1,
                "movl (%edi), %eax;movl %eax, (%esp);calll  <RtlLookupElementGenericTable>;subl $, %esp;movl %eax, %ebx": 2,
                "jb  <FsRtlPrivateLock+>;ja  <FsRtlPrivateLock+>;cmpl %ecx, %eax;jbe  <FsRtlPrivateLock+>;movl (%ebp), %edi": 1,
                "movl %eax, (%esp);calll - <FsRtlSyncVolumes+>;subl $, %esp;movl $, %eax;jmp  <FsRtlPrivateLock+>": 7,
                "movl (%ebp), %edi;movl $, (%edi);movl $, %eax;jmp  <FsRtlPrivateLock+>;movl (%ebp), %edi": 1,
                "jmp  <FsRtlPrivateLock+>;movl (%ebp), %edi;movl %eax, (%edi);movl %edi, (%eax);leal (%eax), %eax": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll  <RtlInitializeGenericTable>;subl $, %esp;movl $, (%ebx)": 1,
                "movl %ebx, (%esp);calll  <IoCsqInitializeEx>;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edi": 1,
                "movl %eax, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp);movl %esi, %eax;movb %al, -(%ebp)": 1,
                "je  <FsRtlPrivateLock+>;cmpb $, -(%ebp);jne  <FsRtlPrivateLock+>;movl %esi, %edx;orb (%eax), %dl": 1,
                "jmp  <FsRtlPrivateLock+>;movl (%ebp), %eax;movl $, (%eax);cmpl $, (%ebp);je  <FsRtlPrivateLock+>": 2,
                "movl (%ebp), %edx;movl %eax, (%edx);movl %edx, %ecx;movsbl (%edx), %edx;movsbl (%ecx), %eax": 2,
                "movl %eax, %esi;testl %eax, %eax;je  <FsRtlPrivateLock+>;leal -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "calll - <FsRtlGetNextFileLock+>;subl $, %esp;testl %eax, %eax;jne  <FsRtlPrivateLock+>;movl (%ebp), %eax": 1,
                "movl (%edx), %ecx;movl (%edx), %ebx;movl %ecx, (%eax);movl %ebx, (%eax);movl (%edx), %ecx": 2,
                "movl (%edx), %ebx;movl %ecx, (%eax);movl %ebx, (%eax);movl (%edx), %ecx;movl (%edx), %ebx": 2,
                "movl %ecx, (%eax);movl %edx, (%eax);movl %eax, (%edx);movl %eax, (%edi);movl (%ebp), %edi": 2,
                "subl $, %esp;movl $, %eax;jmp  <FsRtlPrivateLock+>;movl (%ebp), %edi;movl $, (%edi)": 1,
                "movl (%edi), %eax;movl %eax, (%esp);calll - <FsRtlSyncVolumes+>;subl $, %esp;movl -(%ebp), %eax": 1,
                "subl $, %esp;testl %eax, %eax;je  <FsRtlCheckLockForReadAccess+>;movl $, %edx;cmpb $, (%eax)": 1,
                "cmpl %eax, %edx;jle  <FsRtlCheckLockForWriteAccess+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx": 10,
                "movl (%ebp), %edx;movl (%edx), %ecx;cmpl %ecx, (%eax);sete %dl;movzbl %dl, %edx": 2,
                "adcl (%ecx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl (%ebp), %eax;movl (%eax), %edx": 1,
                "sete %dl;movzbl %dl, %edx;movl %edx, %eax;jmp  <FsRtlFastCheckLockForWrite+>;movl $, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, -(%ebp);movzbl (%esi), %eax;cmpb $, %al": 1,
                "movl $, -(%ebp);movzbl (%esi), %eax;cmpb $, %al;je  <FsRtlProcessFileLock+>;cmpb $, %al": 1,
                "movl %edi, %edx;andl $, %edx;movzbl %dl, %edx;movl %edx, (%esp);andl $, %edi": 1,
                "movl %edx, (%esp);movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);leal (%esi), %eax": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <FsRtlFastUnlockAllByKey>;subl $, %esp": 1,
                "jmp  <FsRtlProcessFileLock+>;movl $, (%ebx);movl $, %edx;movl %ebx, %ecx;calll  <IofCompleteRequest>": 1,
                "movl (%ebx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl (%ebp), %ecx;addl (%ecx), %eax": 1,
                "movl %edx, %ecx;xorl (%ebx), %ecx;movl (%ebx), %ebx;xorl %eax, %ebx;orl %ebx, %ecx": 1,
                "xorl (%esi), %ebx;movl %eax, %ecx;xorl (%esi), %ecx;orl %ecx, %ebx;jne  <FsRtlFastUnlockSingle+>": 1,
                "leal -(%ebp), %esi;jmp  <FsRtlFastUnlockSingle+>;movl (%edi), %edx;cmpl %edx, (%eax);jne  <FsRtlFastUnlockSingle+>": 1,
                "movl $, (%esp);movl $, (%esp);movl %eax, (%esp);movl -(%ebp), %edi;movl %edi, (%esp)": 1,
                "jmp  <FsRtlFastUnlockSingle+>;movl $, %eax;jmp  <FsRtlFastUnlockSingle+>;movl -(%ebp), %edi;movl (%esi), %edx": 1,
                "addl $, %ebx;movl %edi, -(%ebp);movl %ebx, %edi;jmp  <FsRtlFastUnlockAllByKey+>;movl (%ecx), %eax": 1,
                "jne  <FsRtlFastUnlockAllByKey+>;movl -(%ebp), %edx;cmpl %edx, (%ecx);jne  <FsRtlFastUnlockAllByKey+>;movl $, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll - <FsRtlFastUnlockSingle>": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);calll - <FsRtlFastUnlockSingle>;subl $, %esp;movl $, (%esp)": 1,
                "calll - <FsRtlFastUnlockSingle>;subl $, %esp;movl $, (%esp);movl %ebx, (%esp);calll  <RtlEnumerateGenericTable>": 2,
                "movl %ebx, (%esp);calll  <RtlEnumerateGenericTable>;subl $, %esp;testl %eax, %eax;jne - <FsRtlFastUnlockAllByKey+>": 1,
                "movl (%ebp), %esi;movl (%ebp), %ebx;movl (%esi), %eax;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "movl (%ecx), %edx;movl %edx, (%esp);movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <FsRtlFastUnlockSingle>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <FsRtlFastUnlockSingle>;subl $, %esp;movl %ebx, %ecx": 1,
                "calll  <RtlEnumerateGenericTable>;subl $, %esp;testl %eax, %eax;je  <FsRtlFastUnlockAll+>;leal -(%ebp), %edi": 1,
                "testb $, %bl;je  <FsRtlInitializeFileLock+>;movb $, (%edi);movb $, (%edx);movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%edx);movl $, (%edx);popl %ebx;popl %edi": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %edi;movl (%edi), %esi;testl %esi, %esi": 1,
                "movl %edx, -(%ebp);cmpl %edx, %eax;je  <FsRtlUninitializeFileLock+>;movl (%eax), %ebx;movl (%eax), %edx": 1,
                "calll - <FsRtlProcessFileLock>;subl $, %esp;jmp  <FsRtlUninitializeFileLock+>;leal (%esi), %ebx;movl $, (%esp)": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;subl $, %esp;addl $, -": 1,
                "movl $, %ecx;calll - <InterlockedPopEntrySList>;movl %eax, %ebx;testl %eax, %eax;jne  <FsRtlAllocateFileLock+>": 1,
                "movl %eax, %edx;shrl $, %edx;testb %dl, %dl;je  <FsRtlIsTotalDeviceFailure+>;cmpl $, %eax": 1,
                "je  <FsRtlIsNtstatusExpected+>;cmpl $, %edx;je  <FsRtlIsNtstatusExpected+>;cmpl $, %edx;setne %al": 1,
                "andl %edx, %eax;jmp  <FsRtlIsNtstatusExpected+>;movl $, %eax;popl %ebp;retl $": 1,
                "testl %eax, %eax;jne  <FsRtlAllocatePoolWithQuotaTag+>;movl $, (%esp);calll  <ExRaiseStatus>;leave": 1,
                "movl $, %edx;movl %edx, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;testl %esi, %esi;jne  <FsRtlAllocatePoolWithTag+>": 1,
                "jmp  <FsRtlLookupPerFileObjectContext+>;movl %eax, %esi;jmp  <FsRtlLookupPerFileObjectContext+>;movl %eax, %esi;calll *-": 1,
                "nop;je  <FsRtlLookupPerFileObjectContext+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll *-;cmpb $, %al;jbe  <FsRtlLookupPerStreamContextInternal+>;movl $, (%esp);movl $, (%esp)": 1,
                "je  <FsRtlLookupPerStreamContextInternal+>;movl %edi, %ecx;calll  <KeWaitForSingleObject+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "je  <FsRtlLookupPerStreamContextInternal+>;cmpl %esi, (%eax);je  <FsRtlLookupPerStreamContextInternal+>;movl (%eax), %eax;cmpl %eax, %edx": 1,
                "cmpb $, %al;je  <FsRtlLookupPerStreamContextInternal+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll *-;movl %esi, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 3,
                "movl $, (%eax);movl $, (%esp);movl $, (%esp);leal (%eax), %eax;movl %eax, (%esp)": 2,
                "jmp  <FsRtlInsertPerFileObjectContext+>;calll *-;cmpb $, %al;jbe  <FsRtlInsertPerFileObjectContext+>;movl $, (%esp)": 1,
                "addl $, %eax;testl %eax, %eax;jg  <FsRtlInsertPerFileObjectContext+>;movl $, (%esp);addl $, %ebx": 1,
                "testl %edx, %edx;je  <FsRtlInsertPerStreamContext+>;movl %esi, %ecx;calll  <KeWaitForSingleObject+>;movl %fs:, %eax": 1,
                "je  <FsRtlInsertPerStreamContext+>;movl %esi, %ecx;calll  <KeWaitForSingleObject+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "calll *-;cmpb $, %al;je  <FsRtlInsertPerStreamContext+>;movl $, (%esp);movl $, (%esp)": 1,
                "lock;xaddl %eax, (%ebx);addl $, %eax;testl %eax, %eax;jg  <FsRtlInsertPerStreamContext+>": 1,
                "movl $, %eax;jmp  <FsRtlInsertPerStreamContext+>;movl $, %eax;jmp  <FsRtlInsertPerStreamContext+>;movl $, %eax": 1,
                "testl %ebx, %ebx;jne  <FsRtlRemovePerFileObjectContext+>;testl %esi, %esi;je  <FsRtlRemovePerFileObjectContext+>;testl %ebx, %ebx": 1,
                "addl $, %eax;testl %eax, %eax;jg  <FsRtlRemovePerFileObjectContext+>;movl $, (%esp);addl $, %edi": 1,
                "leal -(%eax), %edx;lock;cmpxchgl %edx, (%edi);jne - <FsRtlRemovePerStreamContext+>;testl %edx, %edx": 1,
                "cmpxchgl %edx, (%edi);jne - <FsRtlRemovePerStreamContext+>;testl %edx, %edx;je  <FsRtlRemovePerStreamContext+>;movl %edi, %ecx": 1,
                "testl %edx, %edx;je  <FsRtlRemovePerStreamContext+>;movl %edi, %ecx;calll  <KeWaitForSingleObject+>;movl %fs:, %eax": 1,
                "movl (%ebp), %edx;movl (%edx), %edi;cmpl %edi, %eax;je  <FsRtlRemovePerStreamContext+>;testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;je  <FsRtlRemovePerStreamContext+>;cmpl %ebx, (%edi);je  <FsRtlRemovePerStreamContext+>;testl %esi, %esi": 1,
                "movl %edx, (%eax);jmp  <FsRtlRemovePerStreamContext+>;movl $, %edi;movl (%ebp), %eax;movl (%eax), %ebx": 1,
                "calll *-;cmpb $, %al;je  <FsRtlRemovePerStreamContext+>;movl $, (%esp);movl $, (%esp)": 1,
                "je  <FsRtlRemovePerStreamContext+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <FsRtlTeardownPerStreamContexts+>;movl -(%ebp), %eax;movl (%eax), %ebx;movl -, %edx;calll *%edx": 1,
                "movl -(%ebp), %eax;movl (%eax), %ebx;movl -, %edx;calll *%edx;cmpb $, %al": 1,
                "leal -(%eax), %ecx;lock;cmpxchgl %ecx, (%ebx);jne - <FsRtlTeardownPerStreamContexts+>;testl %ecx, %ecx": 1,
                "testl %ecx, %ecx;je  <FsRtlTeardownPerStreamContexts+>;movl %ebx, %ecx;calll  <KeWaitForSingleObject+>;movl %fs:, %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %ebx;calll *-;cmpb $, %al;jbe  <FsRtlTeardownPerStreamContexts+>": 1,
                "movl (%eax), %ebx;cmpl %ebx, %edx;jne - <FsRtlTeardownPerStreamContexts+>;movl $, -(%ebp);jmp  <FsRtlTeardownPerStreamContexts+>": 1,
                "nop;leal (%esi), %esi;jmp - <FsRtlTeardownPerStreamContexts+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "calll - <ExInitializePagedLookasideList>;subl $, %esp;calll  <FsRtlInitializeLargeMcb+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll - <FsRtlAllocatePoolWithTag>;subl $, %esp;movl %eax, ;movl $, %ebx;movl , %eax": 1,
                "subl $, %esp;movl %eax, ;movl $, %ebx;movl , %eax;addl %ebx, %eax": 1,
                "shrl $, %eax;movl -(%ebp), %ebx;leave;retl;pushl %ebp": 1,
                "movl (%edx), %ecx;movl %ecx, -(%ebp);movl (%edx), %ebx;movl (%eax), %esi;movl %esi, -(%ebp)": 1,
                "movl $, %edi;movl $, %esi;cmpl %ecx, %ebx;jl  <FsRtlAllocateResource+>;jg  <FsRtlAllocateResource+>": 2,
                "cmpl %ecx, -(%ebp);jb  <FsRtlAllocateResource+>;movl $, %esi;subl %esi, %edi;testl %edi, %edi": 1,
                "movl $, %esi;subl %esi, %edi;testl %edi, %edi;js  <FsRtlAllocateResource+>;testl %edi, %edi": 1,
                "jl  <FsRtlAllocateResource+>;jg  <FsRtlAllocateResource+>;cmpl %edi, %esi;jbe  <FsRtlAllocateResource+>;movl $, %ebx": 1,
                "cmpl %eax, %ecx;jl  <FsRtlAllocateResource+>;jg  <FsRtlAllocateResource+>;cmpl %esi, %ebx;jbe  <FsRtlAllocateResource+>": 1,
                "movl (%eax), %eax;movzwl (%eax), %eax;movl %eax, (%esp);calll  <ExAllocatePoolWithTag>;subl $, %esp": 1,
                "subl $, %ebx;movb $, -(%ebp);jmp  <FsRtlGetNextBaseMcbEntry+>;movb $, -(%ebp);testl %ebx, %ebx": 1,
                "movl %eax, (%ebx);movl %edx, (%ebx);cmpl $, (%ebp);je  <FsRtlGetNextBaseMcbEntry+>;movl (%ecx), %eax": 2,
                "movl (%ebp), %eax;movl %ecx, (%eax);movl %ebx, (%eax);cmpl $, (%ebp);je  <FsRtlGetNextBaseMcbEntry+>": 1,
                "movl (%ebp), %ebx;movl $, (%ebx);movl $, (%ebx);cmpl $, (%ebp);je  <FsRtlGetNextBaseMcbEntry+>": 1,
                "jne - <FsRtlGetNextBaseMcbEntry+>;jmp  <FsRtlGetNextBaseMcbEntry+>;movl $, %edx;movl $, %edi;jmp  <FsRtlGetNextBaseMcbEntry+>": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %ebx;movl %fs:, %eax;movl (%eax), %edi": 5,
                "subl $, %esp;movzwl (%esi), %eax;cmpw $, %ax;je  <FsRtlGetNextLargeMcbEntry+>;testw %ax, %ax": 1,
                "movzwl (%edi), %eax;movw %ax, (%ebx);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 4,
                "movw %ax, (%ebx);testw %ax, %ax;jne  <FsRtlGetNextLargeMcbEntry+>;leal (%ebx), %eax;cmpl %eax, (%ebx)": 1,
                "calll *-;subl $, %esp;movl %eax, (%ebx);jmp  <FsRtlInitializeBaseMcb+>;movl $, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <FsRtlInitializeBaseMcb>": 1,
                "movl (%ebp), %eax;movl (%eax), %edx;addl $, -;movzwl -, %eax;cmpw %ax, -": 1,
                "jmp - <FsRtlInitializeLargeMcb+>;movl -(%ebp), %eax;movl %eax, %fs:;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "jl  <FsRtlLookupBaseMcbEntry+>;cmpl %esi, (%ebx);ja  <FsRtlLookupBaseMcbEntry+>;cmpl (%ebx), %edi;leal (%esi), %esi": 1,
                "subl %esi, %eax;sbbl %edi, %edx;movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx)": 2,
                "cmpl $, (%ebp);je  <FsRtlLookupBaseMcbEntry+>;movl -(%ebp), %edx;movl (%ebp), %eax;movl %edx, (%eax)": 1,
                "movl $, %eax;jmp  <FsRtlLookupBaseMcbEntry+>;testl %ebx, %ebx;nop;jne - <FsRtlLookupBaseMcbEntry+>": 1,
                "testl %ebx, %ebx;nop;jne - <FsRtlLookupBaseMcbEntry+>;movl $, %eax;leal -(%ebp), %esp": 1,
                "nop;jne - <FsRtlLookupBaseMcbEntry+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl (%ebp), %edx": 5,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpw $, (%ebx);js  <FsRtlLookupLargeMcbEntry+>": 1,
                "testw %ax, %ax;jne  <FsRtlLookupLargeMcbEntry+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <FsRtlLookupLargeMcbEntry+>": 1,
                "jne  <FsRtlLookupLargeMcbEntry+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <FsRtlLookupLargeMcbEntry+>;calll  <KiCheckForKernelApcDelivery>": 1,
                "movl %eax, (%esp);calll  <RtlNumberGenericTableElements>;subl $, %esp;movl %eax, %ebx;movl $, %eax": 1,
                "movl %eax, (%esp);calll  <RtlLookupElementGenericTable>;subl $, %esp;testl %eax, %eax;je  <FsRtlNumberOfRunsInBaseMcb+>": 1,
                "movl (%ecx), %edx;addl $-, %eax;adcl $-, %edx;movl (%ebp), %edi;movl %eax, (%edi)": 1,
                "movl (%eax), %edi;calll *-;cmpb $, %al;jbe  <FsRtlLookupLastLargeMcbEntry+>;movl $, (%esp)": 1,
                "movl %fs:, %eax;cmpl (%eax), %esi;je  <FsRtlLookupLastLargeMcbEntry+>;movl $, (%esp);movl $, (%esp)": 1,
                "lock;btrl $, (%ebx);setb %al;testb %al, %al;jne  <FsRtlLookupLastLargeMcbEntry+>": 1,
                "testb %al, %al;jne  <FsRtlLookupLastLargeMcbEntry+>;movl %ebx, %ecx;calll  <KeSetTimer+>;movl %edi, (%ebx)": 1,
                "cmpw %dx, (%eax);je  <FsRtlLookupLastLargeMcbEntry+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "je  <FsRtlLookupLastLargeMcbEntry+>;testl $, %edi;jne  <FsRtlLookupLastLargeMcbEntry+>;leal (%edi), %edx;subl $, %edi": 1,
                "testl $, %edi;jne  <FsRtlLookupLastLargeMcbEntry+>;leal (%edi), %edx;subl $, %edi;movl %edx, %eax": 1,
                "jne  <FsRtlLookupLastLargeMcbEntry+>;leal (%edi), %edx;subl $, %edi;movl %edx, %eax;lock": 1,
                "movl (%edx), %ebx;calll *-;cmpb $, %al;jbe  <FsRtlLookupLastLargeMcbEntryAndIndex+>;movl $, (%esp)": 1,
                "movl (%eax), %eax;movzwl (%ebx), %edx;cmpw %dx, (%eax);je  <FsRtlLookupLastLargeMcbEntryAndIndex+>;movl $, (%esp)": 1,
                "xaddl %edi, (%ebx);testl $, %edi;je  <FsRtlLookupLastLargeMcbEntryAndIndex+>;movl $, (%esp);movl $, (%esp)": 1,
                "movzwl (%ebx), %eax;addl $, %eax;movw %ax, (%ebx);testw %ax, %ax;jne  <FsRtlLookupLastLargeMcbEntryAndIndex+>": 1,
                "jbe  <FsRtlNumberOfRunsInLargeMcb+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 4,
                "movl %fs:, %eax;movl (%eax), %esi;calll *-;cmpb $, %al;jbe  <FsRtlNumberOfRunsInLargeMcb+>": 1,
                "cmpl %edx, (%ebx);je  <FsRtlNumberOfRunsInLargeMcb+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;cmpw $, (%ebx);js  <FsRtlNumberOfRunsInLargeMcb+>;movl $, (%esp);movl $, (%esp)": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <FsRtlNumberOfRunsInLargeMcb+>;calll  <KiCheckForKernelApcDelivery>;movl %esi, %eax": 1,
                "movl %edx, -(%ebp);movl (%ebp), %eax;movl (%ebp), %edx;movl %eax, %ecx;movl %edx, %ebx": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;movl %eax, %ecx;movl %edx, %ebx;addl $-, %ecx": 1,
                "shrl $, %ecx;testb %cl, %cl;jne  <FsRtlRemoveBaseMcbEntry+>;addl -(%ebp), %eax;adcl -(%ebp), %edx": 1,
                "movl $, (%eax);jmp  <FsRtlRemoveBaseMcbEntry+>;movl (%ebx), %esi;movl %esi, -(%ebp);movl (%ebx), %edx": 1,
                "jg  <FsRtlRemoveBaseMcbEntry+>;jl  <FsRtlRemoveBaseMcbEntry+>;movl -(%ebp), %ecx;cmpl %ecx, %esi;jae  <FsRtlRemoveBaseMcbEntry+>": 1,
                "movl -(%ebp), %edx;movl %eax, (%ebx);movl %edx, (%ebx);jmp  <FsRtlRemoveBaseMcbEntry+>;movl -(%ebp), %ecx": 1,
                "cmpl %eax, -(%ebp);jb  <FsRtlRemoveBaseMcbEntry+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <FsRtlRemoveBaseMcbEntry+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);addl $, %eax;adcl $, %edx;movl %eax, -(%ebp)": 1,
                "movzwl (%ebx), %edx;cmpw %dx, (%eax);je  <FsRtlAddLargeMcbEntry+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %edi;lock;xaddl %edi, (%ebx);testl $, %edi;je  <FsRtlAddLargeMcbEntry+>": 1,
                "je  <FsRtlAddLargeMcbEntry+>;testl $, %edi;jne  <FsRtlAddLargeMcbEntry+>;leal (%edi), %edx;subl $, %edi": 1,
                "movl %fs:, %eax;cmpl (%eax), %ebx;je  <FsRtlAddLargeMcbEntry+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;cmpl (%ebx), %edi;jne  <FsRtlRemoveLargeMcbEntry+>;movl $, (%esp);movl $, (%esp)": 1,
                "addl $, %eax;movl %eax, (%esp);calll - <FsRtlRemoveBaseMcbEntry>;subl $, %esp;movl (%ebp), %edx": 1,
                "movl %eax, (%esp);calll - <FsRtlRemoveBaseMcbEntry>;subl $, %esp;movl (%ebp), %edx;movl (%edx), %ebx": 1,
                "movl (%eax), %eax;movzwl (%ebx), %edx;cmpw %dx, (%eax);je  <FsRtlRemoveLargeMcbEntry+>;movl $, (%esp)": 1,
                "addl $, %eax;movw %ax, (%ebx);testw %ax, %ax;jne  <FsRtlRemoveLargeMcbEntry+>;leal (%ebx), %eax": 1,
                "movl %eax, (%esp);calll  <RtlGetElementGenericTable>;subl $, %esp;testl %eax, %eax;jne - <FsRtlResetBaseMcb+>": 1,
                "calll  <RtlGetElementGenericTable>;subl $, %esp;testl %eax, %eax;jne - <FsRtlResetBaseMcb+>;movl $, (%ebx)": 1,
                "movl %fs:, %eax;movl (%eax), %edi;calll *-;cmpb $, %al;jbe  <FsRtlResetLargeMcb+>": 1,
                "jne  <FsRtlResetLargeMcb+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %fs:, %eax;cmpl (%eax), %esi;je  <FsRtlResetLargeMcb+>;movl $, (%esp)": 1,
                "movl %fs:, %eax;movl (%eax), %edx;cmpl %edx, (%ebx);je  <FsRtlResetLargeMcb+>;movl $, (%esp)": 1,
                "movl (%esi), %ebx;addl %ecx, %eax;adcl %ebx, %edx;cmpl %edx, %ebx;jl  <FsRtlSplitBaseMcb+>": 1,
                "subl $, %esp;testl %eax, %eax;je  <FsRtlSplitBaseMcb+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpl (%eax), %esi;je  <FsRtlSplitLargeMcb+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpw $, %ax;je  <FsRtlSplitLargeMcb+>;testw %ax, %ax;jle  <FsRtlSplitLargeMcb+>;movl $, (%esp)": 1,
                "setb %al;testb %al, %al;jne  <FsRtlSplitLargeMcb+>;movl %ebx, %ecx;calll  <KeSetTimer+>": 1,
                "js  <FsRtlSplitLargeMcb+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %ebx, (%esp);movl %eax, (%esp);movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpw $, %ax;je  <FsRtlTruncateLargeMcb+>;testw %ax, %ax;jle  <FsRtlTruncateLargeMcb+>;movl $, (%esp)": 1,
                "movl %edx, (%esp);movl (%ebp), %eax;addl $, %eax;movl %eax, (%esp);calll - <FsRtlTruncateBaseMcb>": 1,
                "addl $, %eax;movl %eax, (%esp);calll - <FsRtlTruncateBaseMcb>;subl $, %esp;movl (%ebp), %edx": 1,
                "movl %edx, %eax;lock;cmpxchgl %esi, (%ebx);cmpl %eax, %edx;jne  <FsRtlTruncateLargeMcb+>": 1,
                "testw %ax, %ax;jne  <FsRtlTruncateLargeMcb+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <FsRtlTruncateLargeMcb+>": 1,
                "movl %esp, %ebp;subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax": 3,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <FsRtlGetNextLargeMcbEntry>;subl $, %esp": 1,
                "subl $, %esp;movl -(%ebp), %ecx;movl (%ebp), %edx;movl %ecx, (%edx);movl -(%ebp), %ecx": 2,
                "movl %ecx, (%edx);testl %ebx, %ebx;je  <FsRtlLookupMcbEntry+>;movl -(%ebp), %edx;movl %edx, (%ebx)": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <FsRtlRemoveLargeMcbEntry>;subl $, %esp": 1,
                "cmpb $, %al;jbe  <FsRtlAreNamesEqual+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;testl %eax, %eax;jns  <FsRtlAreNamesEqual+>;movl %eax, (%esp);calll  <ExRaiseStatus>": 1,
                "movl %eax, (%esp);calll  <ExRaiseStatus>;movl $, (%esp);movl (%ebp), %edi;movl %edi, (%esp)": 1,
                "calll  <RtlFreeUnicodeString>;subl $, %esp;jmp  <FsRtlAreNamesEqual+>;movl %edi, %edx;testb %dl, %dl": 1,
                "movl $, (%ebx);movl (%ebp), %eax;movl $, (%eax);movl $, (%eax);testw %di, %di": 1,
                "jmp  <FsRtlDissectName+>;movzwl -(%ebp), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %esi;leal (%esi,%ecx,), %esi": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %esi;leal (%esi,%ecx,), %esi;movl %esi, (%ebx);movzwl %ax, %esi": 1,
                "movl %esi, (%ebx);movzwl %ax, %esi;movl %esi, %ecx;subl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %esi, %ecx;subl -(%ebp), %ecx;movl %ecx, -(%ebp);movzwl -(%ebp), %ecx;addl %ecx, %ecx": 1,
                "leal (%edi,%esi,), %edi;movw %di, (%ecx);movw %di, (%ecx);jmp  <FsRtlDissectName+>;movw $, -(%ebp)": 1,
                "movw $, -(%ebp);movzwl -(%ebp), %ecx;movl -(%ebp), %esi;leal (%esi,%ecx,), %eax;movl %eax, (%ebx)": 1,
                "subl %ecx, %edx;addl %edx, %edx;movw %dx, (%ebx);movw %dx, (%ebx);leal -(%ebp), %esp": 1,
                "je  <FsRtlDoesNameContainWildCards+>;movl -, %ebx;cmpw $, %dx;ja  <FsRtlDoesNameContainWildCards+>;movzwl %dx, %edx": 1,
                "movzwl %dx, %edx;testb $, (%ebx,%edx);jne  <FsRtlDoesNameContainWildCards+>;subl $, %eax;cmpl %eax, %ecx": 1,
                "jmp  <FsRtlDoesNameContainWildCards+>;movl $, %eax;jmp  <FsRtlDoesNameContainWildCards+>;movl $, %eax;jmp  <FsRtlDoesNameContainWildCards+>": 3,
                "je  <FsRtlDoesNameContainWildCards+>;movzwl (%edi), %edx;movl $, %eax;testw %dx, %dx;je  <FsRtlDoesNameContainWildCards+>": 1,
                "movzwl (%edi), %esi;subl $, %esi;cmpl %esi, %ecx;jb  <FsRtlDoesNameContainWildCards+>;movzwl -(%ebp), %eax": 1,
                "leal (%eax,%edi,), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <wcstombs+>": 1,
                "movzwl (%eax,%esi,), %ecx;cmpw %cx, (%edi,%edx,);jne  <FsRtlDoesNameContainWildCards+>;addl $, %ebx;movzwl -(%ebp), %eax": 1,
                "jge  <FsRtlDoesNameContainWildCards+>;movzwl %bx, %ecx;cmpw $, (%eax,%ecx,);je - <FsRtlDoesNameContainWildCards+>;cmpl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);jne  <FsRtlDoesNameContainWildCards+>;movl $, (%esp);movzwl -(%ebp), %eax;addl %eax, %eax": 2,
                "movl (%esi), %eax;cmpw (%eax,%ecx,), %dx;setne %al;movzbl %al, %eax;addw %ax, -(%ebp)": 1,
                "movzwl (%edx,%ecx,), %edx;movw %dx, -(%ebp);cmpw $, %dx;jne  <FsRtlDoesNameContainWildCards+>;addw $, -(%ebp)": 1,
                "leal (%edx), %ecx;movzwl -(%ebp), %edx;cmpl %edx, %ecx;jge  <FsRtlDoesNameContainWildCards+>;movl -(%ebp), %ecx": 1,
                "movzwl (%esi), %edx;shrw %dx;movl %eax, %ebx;cmpw -(%ebp), %dx;je  <FsRtlDoesNameContainWildCards+>": 1,
                "movl %eax, %ebx;cmpw -(%ebp), %dx;je  <FsRtlDoesNameContainWildCards+>;cmpw $, -(%ebp);js  <FsRtlDoesNameContainWildCards+>": 1,
                "movzwl (%edi), %esi;shrw %si;cmpw %si, %ax;je  <FsRtlDoesNameContainWildCards+>;movzwl -(%ebp), %eax": 1,
                "shrw %si;cmpw %si, %ax;je  <FsRtlDoesNameContainWildCards+>;movzwl -(%ebp), %eax;movl %ebx, %ecx": 1,
                "shrw %dx;cmpw %dx, %ax;jne  <FsRtlDoesNameContainWildCards+>;cmpw %si, %cx;jae  <FsRtlDoesNameContainWildCards+>": 1,
                "movzwl (%ecx,%eax,), %eax;movl %eax, %edx;andl $-, %edx;cmpw $, %dx;je  <FsRtlDoesNameContainWildCards+>": 1,
                "movzwl (%edx), %eax;shrw %ax;cmpw -(%ebp), %ax;sete %al;movzbl %al, %eax": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%ebp), %ebx": 4,
                "movl %eax, (%esp);calll  <RtlUpcaseUnicodeString>;subl $, %esp;testl %eax, %eax;jns  <FsRtlIsNameInExpression+>": 1,
                "cmpl $, -(%ebp);je  <FsRtlIsNameInExpression+>;leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlFreeUnicodeString>": 1,
                "cmpl %edx, (%eax);jae  <FsRtlIsNameInExpression+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl $, %eax;jmp  <FsRtlIsNameInExpression+>;movl $, %eax;jmp  <FsRtlIsNameInExpression+>;movl $, %eax": 1,
                "je  <FsRtlIsNameInExpression+>;lock;subl $, (%esi);movl $, %eax;jmp  <FsRtlIsNameInExpression+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebp), %ecx;movl (%ecx), %eax;cmpl $, (%ebp)": 1,
                "je  <FsRtlIsNameInExpression+>;movl (%ebp), %edx;cmpl (%eax), %edx;ja  <FsRtlIsNameInExpression+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;cmpl $, (%ecx);jne  <FsRtlIsNameInExpression+>;movl (%ebp), %ecx;movl %edx, (%ecx)": 1,
                "movl %edx, -(%ebp);jmp  <FsRtlIsNameInExpression+>;movl $, (%esp);movl %edx, (%esp);calll  <MmMapLockedPages>": 1,
                "movl (%ecx), %ecx;movl %ecx, -(%ebp);jmp  <FsRtlIsNameInExpression+>;movl (%ebp), %ecx;orl $, (%ecx)": 1,
                "movl %eax, (%ecx);jmp  <FsRtlIsNameInExpression+>;movl (%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %edx": 1,
                "calll  <IoCsqRemoveNextIrp+>;leal (%esi), %esi;jmp - <FsRtlIsNameInExpression+>;jmp  <FsRtlIsNameInExpression+>;jmp - <FsRtlIsNameInExpression+>": 1,
                "leal (%ebx), %esi;jmp  <FsRtlIsNameInExpression+>;movl (%eax), %edx;movl %edx, (%ebx);movl %esi, (%edx)": 1,
                "movl %edx, (%esp);movl %ebx, (%esp);subl $, %eax;movl %eax, (%esp);calll - <FsRtlIsNameInExpression+>": 1,
                "calll *-;cmpb $, %al;je  <FsRtlNotifyCleanup+>;cmpl $, (%edi);jne  <FsRtlNotifyCleanup+>": 1,
                "calll *-;cmpb $, %al;jbe  <FsRtlNotifyFilterChangeDirectory+>;calll *-;movzbl %al, %eax": 1,
                "cmpb $, %al;jbe  <FsRtlNotifyFilterChangeDirectory+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "jne  <FsRtlNotifyFilterChangeDirectory+>;movl (%esi), %eax;testl %eax, %eax;je  <FsRtlNotifyFilterChangeDirectory+>;cmpl -, %eax": 1,
                "jae  <FsRtlNotifyFilterChangeDirectory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "addl $, (%edx);movl (%ebp), %ecx;addl $, %ecx;movl %ecx, -(%ebp);jmp  <FsRtlNotifyFilterChangeDirectory+>": 1,
                "movl $, (%edx);movl %edx, %ecx;movsbl (%edx), %edx;movsbl (%ecx), %eax;addl $, %eax": 1,
                "je  <FsRtlNotifyFilterChangeDirectory+>;movl (%ebp), %ecx;movsbl (%ecx), %edx;movsbl (%ecx), %eax;addl $, %eax": 2,
                "movl (%ebp), %edx;movl %edx, (%esp);calll - <FsRtlIsNameInExpression+>;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "movzwl (%eax), %eax;testb $, %al;je  <FsRtlNotifyFilterChangeDirectory+>;movl (%ebp), %ecx;movsbl (%ecx), %edx": 1,
                "testb $, %al;je  <FsRtlNotifyFilterChangeDirectory+>;movl (%ebp), %ecx;movsbl (%ecx), %edx;movsbl (%ecx), %eax": 1,
                "movl $, (%eax);movl $, (%esp);movl $, (%esp);movl %ecx, (%esp);movl %eax, (%esp)": 1,
                "movl %edx, (%eax);leal (%eax), %edx;movl (%ebp), %ebx;movl (%ebx), %ecx;movl %ebx, (%eax)": 1,
                "movl $, %ecx;calll - <FsRtlIsNameInExpression+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movzbl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <FsRtlNotifyFilterChangeDirectory>": 2,
                "movl %eax, (%esp);movzwl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <FsRtlNotifyFilterReportChange>;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %esi;movl $, (%esi)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl $, (%esp);movl $, (%esp);movzwl (%eax), %edx": 1,
                "movl %eax, (%esp);calll - <FsRtlNotifyFilterReportChange>;pushl %ebp;movl %esp, %ebp;pushl %ebx": 1,
                "calll - <FsRtlNotifyFilterReportChange>;pushl %ebp;movl %esp, %ebp;pushl %ebx;subl $, %esp": 1,
                "movl $, %ebx;jmp  <FsRtlNotifyVolumeEvent+>;leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl (%eax), %eax;movl %eax, (%esp);calll *(%ebx);subl $, %esp;calll *%esi": 1,
                "movl %eax, (%esp);calll *(%ebx);subl $, %esp;calll *%esi;testb %al, %al": 1,
                "calll *(%ebx);subl $, %esp;calll *%esi;testb %al, %al;je - <FsRtlNotifyVolumeEvent+>": 1,
                "movl %edx, (%eax);movl $, (%eax);movl %eax, (%eax);movl $, (%eax);movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll  <KeInsertQueue>;subl $, %esp;movl -(%ebp), %ebx;leave": 1,
                "calll  <KeInitializeEvent>;subl $, %esp;movl %esi, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movl %eax, (%esp);calll - <FsRtlNotifyVolumeEvent+>;subl $, %esp;leave;retl $": 2,
                "calll - <FsRtlNotifyVolumeEvent+>;subl $, %esp;leave;retl $;nop": 1,
                "movl %fs:, %eax;movl (%eax), %esi;calll *-;cmpb $, %al;jbe  <FsRtlRegisterUncProvider+>": 4,
                "jle  <FsRtlRegisterUncProvider+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "calll  <KeSetTimer+>;movl %edi, -;movzwl (%edi), %eax;movw %ax, ;movl $, %eax": 1,
                "movzwl (%edi), %eax;movw %ax, ;movl $, %eax;movl %ebx, %ecx;shll %cl, %eax": 1,
                "shll %cl, %eax;movl -, %edx;testl %eax, (%edx);je  <FsRtlRegisterUncProvider+>;movl $, (%esp)": 1,
                "je  <FsRtlRegisterUncProvider+>;testb $, %bl;jne  <FsRtlRegisterUncProvider+>;leal (%ebx), %edx;subl $, %ebx": 1,
                "cmpl %eax, (%ebx);je  <FsRtlRegisterUncProvider+>;calll  <KiCheckForKernelApcDelivery>;movl $, %edx;jmp  <FsRtlRegisterUncProvider+>": 1,
                "xaddl %esi, -;testl $, %esi;je  <FsRtlRegisterUncProvider+>;movl $, (%esp);movl $, (%esp)": 2,
                "je  <FsRtlRegisterUncProvider+>;testl $, %esi;jne  <FsRtlRegisterUncProvider+>;leal (%esi), %edx;subl $, %esi": 2,
                "subl $, %esp;cmpl -, %esi;jne  <FsRtlRegisterUncProvider+>;movl $, (%esp);movl $, (%esp)": 1,
                "jne  <FsRtlRegisterUncProvider+>;movl $, %ecx;calll  <KeSetTimer+>;movl %esi, -;movzwl (%esi), %eax": 1,
                "testb $, %al;je  <FsRtlRegisterUncProvider+>;movl $, %ecx;movl $, %edx;movl %edx, %ebx": 1,
                "jmp  <FsRtlRegisterUncProvider+>;movl $, %ebx;jmp  <FsRtlRegisterUncProvider+>;movl %ecx, %ebx;calll *-": 1,
                "movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <ZwOpenDirectoryObject>;subl $, %esp": 1,
                "testl %eax, %eax;jns  <FsRtlRegisterUncProvider+>;movl %eax, (%esp);movl %ebx, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl $, -(%ebp);jmp  <FsRtlRegisterUncProvider+>;movl $, -(%ebp);movl $, %eax": 1,
                "movl %eax, %edi;addl $, %edi;movzwl (%eax), %ecx;shrw %cx;movzwl %cx, %ecx": 1,
                "jmp  <FsRtlRegisterUncProvider+>;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <ExFreePoolWithTag>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <ZwOpenSymbolicLinkObject>;subl $, %esp;movl %eax, %esi": 1,
                "movl %eax, (%esp);calll - <ZwQuerySymbolicLinkObject>;subl $, %esp;movl %eax, %esi;movl -(%ebp), %eax": 1,
                "testl %esi, %esi;jns  <FsRtlRegisterUncProvider+>;movl %esi, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <_wcsnicmp>;testl %eax, %eax": 1,
                "movzwl (%eax), %eax;movl %eax, (%esp);calll  <wcstombs+>;testl %eax, %eax;je  <FsRtlRegisterUncProvider+>": 1,
                "jmp  <FsRtlRegisterUncProvider+>;movl $, %esi;jmp  <FsRtlRegisterUncProvider+>;movl $, %esi;jmp  <FsRtlRegisterUncProvider+>": 1,
                "cmpb $, %al;jbe  <FsRtlRegisterUncProvider+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 4,
                "movl %eax, %esi;testl %eax, %eax;je  <FsRtlRegisterUncProvider+>;movl $, (%esp);movl $, (%esp)": 3,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);movl $, (%esp);movl $, (%esp)": 6,
                "movl %eax, (%esp);movl %esi, (%esp);movl $, (%esp);movl $, (%esp);movl (%ebp), %eax": 1,
                "js  <FsRtlRegisterUncProvider+>;movl (%ebp), %eax;movl (%eax), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, (%esp);movl %edx, (%esp);calll  <wcstombs+>": 2,
                "calll  <wcstombs+>;movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);movl $, (%esp)": 1,
                "je  <FsRtlRegisterUncProvider+>;movzbl (%ebx), %edx;shll $, %edx;movzbl (%ebx), %eax;shll $, %eax": 1,
                "jbe  <FsRtlRegisterUncProvider+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 2,
                "movzbl (%ebx), %edx;shll $, %edx;addl %edx, %eax;movl %eax, (%esp);movl $, (%esp)": 4,
                "cmpl $, (%ebp);jne  <FsRtlRegisterUncProvider+>;movl $, (%ebp);cmpl %ebx, (%ebp);ja  <FsRtlRegisterUncProvider+>": 1,
                "movl $, %edx;divl -(%ebp);movl %edx, %ebx;movl %edi, %eax;movl (%ebp), %edx": 1,
                "movl (%ebp), %edx;movb %al, (%edx);movb %cl, (%edx);movl %esi, %eax;movl $, %edx": 1,
                "addl $, %edx;andl $, %edx;orl %edx, %ecx;movb %cl, (%ebx);leal -(%ebp), %esp": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;je  <FsRtlRegisterUncProvider+>": 1,
                "movl %eax, -(%ebp);addl %ecx, %edx;movl %edx, -(%ebp);movl (%ebx), %edx;movl %edx, -(%ebp)": 2,
                "addl %ecx, %edx;movl %edx, -(%ebp);movl -(%ebp), %edx;movl -(%ebp), %ecx;movl (%ebp), %eax": 1,
                "movl %edx, (%eax);movl %ecx, (%eax);jmp  <FsRtlRegisterUncProvider+>;movl $, (%esp);movl %esi, (%esp)": 1,
                "movl %ecx, %edi;movl $, -(%ebp);movl $, -(%ebp);movl (%ebp), %eax;movl $, (%eax)": 1,
                "movl %edi, %ecx;calll  <IofCallDriver>;cmpl $, %eax;jne  <FsRtlRegisterUncProvider+>;movl $, (%esp)": 1,
                "addl %ecx, %edx;movzbl (%ebx), %ecx;addl %ecx, %edx;movzbl (%ebx), %ecx;shll $, %ecx": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;cmpl $, %eax;jne  <HalExamineMBR+>;movl %edx, %ecx": 1,
                "jne  <HalExamineMBR+>;cmpl $, (%ecx);jne  <HalExamineMBR+>;cmpw $, (%ecx);jne  <HalExamineMBR+>": 1,
                "jmp  <HalExamineMBR+>;movb $, -(%ebp);movb $, -(%ebp);jmp  <HalExamineMBR+>;movb $, -(%ebp)": 2,
                "movl %eax, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl $, (%esp);calll  <IoBuildSynchronousFsdRequest>": 3,
                "testl %eax, %eax;je  <HalExamineMBR+>;cmpb $, (%eax);jg  <HalExamineMBR+>;movl $, (%esp)": 5,
                "cmpb $, -(%ebp);jne  <HalExamineMBR+>;movl -(%ebp), %eax;movw $, (%eax);movb $, -(%ebp)": 1,
                "movl %eax, (%ecx);movb $, -(%ebp);movl -(%ebp), %eax;shll $, %eax;movl (%ebp), %edx": 1,
                "movl %esi, %ebx;shll $, %ebx;addl -(%ebp), %ebx;movzbl (%ebx), %eax;movb %al, -(%ebp)": 1,
                "je  <HalExamineMBR+>;movl %edx, %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl (%ebx), %edx;movzbl -(%ebp), %ecx;shrdl %cl, %edx, %eax;sarl %cl, %edx": 1,
                "movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp)": 4,
                "movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %edx, -(%ebp);movl %ecx, -(%ebp);cmpb $, -(%ebp)": 1,
                "calll  <KeInitializeEvent>;subl $, %esp;movl $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movzbl (%eax), %edx;testb %dl, %dl;je  <HalExamineMBR+>;cmpb $, %dl": 1,
                "jmp  <HalExamineMBR+>;movl $, -(%ebp);cmpl $, %ebx;jbe  <HalExamineMBR+>;movl (%ebp), %edx": 1,
                "jmp  <HalExamineMBR+>;movzbl (%esi), %eax;cmpb $, %al;nop;je  <HalExamineMBR+>": 1,
                "jmp  <HalExamineMBR+>;addl $, %ecx;addl $, %esi;cmpl $, %ecx;jne - <HalExamineMBR+>": 1,
                "cmpl %eax, (%ebp);ja - <HalExamineMBR+>;movl %edi, %esi;jmp  <HalExamineMBR+>;movl $, -(%ebp)": 1,
                "leal (%edi), %esi;movl $, %ecx;jmp - <HalExamineMBR+>;movl -(%ebp), %eax;leal -(%ebp), %esp": 1,
                "jns  <HalExamineMBR+>;movl $, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);calll  <DbgPrint>;movl -(%ebp), %edx;movl %edx, -(%ebp);testl %eax, %eax": 1,
                "movl (%ecx), %edx;movl %edx, (%eax);movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "cmpb $, %bl;sete %dl;cmpb $, %bl;sete %al;orb %al, %dl": 1,
                "cmpb $, %bl;sete %al;orb %al, %dl;movb %dl, -(%ebp);je  <HalExamineMBR+>": 1,
                "addl %edx, %eax;jne  <HalExamineMBR+>;movzbl (%edi), %edx;shll $, %edx;movzbl (%edi), %eax": 1,
                "jne  <HalExamineMBR+>;movl -(%ebp), %ecx;addl $, %ecx;movl %ecx, -(%ebp);movl %ecx, %eax": 1,
                "movl %ecx, -(%ebp);movl %ecx, %eax;shll $, %eax;addl $, %eax;cmpl -(%ebp), %eax": 1,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;je  <HalExamineMBR+>;movl -(%ebp), %edx": 1,
                "addl (%edx), %ecx;leal (%ecx), %esi;movb %bl, (%esi);movb $, (%esi);testb %bl, %bl": 1,
                "addl %edx, %eax;mull -(%ebp);addl -(%ebp), %eax;adcl -(%ebp), %edx;movl %eax, (%ecx)": 1,
                "movl %eax, (%ecx);movl %edx, (%ecx);subl -(%ebp), %eax;sbbl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "movl $, (%ecx);movl $, (%esi);movl $, (%esi);movl $, (%esi);movl $, (%esi)": 1,
                "movl $, (%esi);movl $, (%esi);movl -(%ebp), %edx;movl %edx, -(%ebp);addl $, %edi": 1,
                "cmpl -(%ebp), %edi;jne - <HalExamineMBR+>;jmp  <HalExamineMBR+>;movzbl (%eax), %ecx;cmpb $, %cl": 1,
                "movzbl (%ecx), %eax;addl %eax, %edx;movzbl (%ecx), %eax;shll $, %eax;addl %edx, %eax": 2,
                "cmpb $, -(%ebp);je  <HalExamineMBR+>;movzbl , %eax;andl $-, %eax;cmpb $-, %al": 1,
                "movl -(%ebp), %eax;movl %ebx, %ecx;imull %eax, %ecx;mull %esi;addl %ecx, %edx": 1,
                "movb $, (%ecx);movb $, (%ecx);movb $, (%ecx);movl $, (%ecx);movl $, (%ecx)": 1,
                "movl $, (%ecx);movl -(%ebp), %eax;imull %eax, %ebx;mull %esi;addl %ebx, %edx": 1,
                "movl $, (%eax);movl (%ecx), %eax;movl $, (%eax);jmp  <HalExamineMBR+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;movl $, (%eax);jmp - <HalExamineMBR+>;movl $, (%esp)": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);movzbl (%ebp), %eax": 2,
                "movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);calll  <IoBuildDeviceIoControlRequest>": 7,
                "calll  <IoBuildDeviceIoControlRequest>;subl $, %esp;testl %eax, %eax;jne  <IoReadPartitionTable+>;movl -(%ebp), %ecx": 1,
                "movl %eax, %esi;cmpl $, %eax;jne  <IoReadPartitionTable+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <KeWaitForSingleObject>;subl $, %esp;movl -(%ebp), %esi;testl %esi, %esi;jns  <IoReadPartitionTable+>": 1,
                "movl %edx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlAnsiStringToUnicodeString>;subl $, %esp": 4,
                "leal -(%ebp), %edx;movl %edx, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;movl %esi, %ebx": 1,
                "calll - <IoReadPartitionTable+>;testl %eax, %eax;js  <IoReadPartitionTable+>;movl (%esi), %edx;movl $, %eax": 1,
                "movl $, (%esi);jmp  <IoReadPartitionTable+>;movl %eax, %ecx;shll $, %ecx;movb $, (%edx,%ecx)": 1,
                "cmpl $, -(%ebp);je  <IoReadPartitionTable+>;movl $, %esi;movl %esi, %ebx;movl %edi, %esi": 1,
                "je  <IoReadPartitionTable+>;movb $, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl (%edx,%esi,), %eax;testl %eax, %eax;je  <IoReadPartitionTable+>;movl (%eax), %edx;testl %edx, %edx": 1,
                "movl %ebx, %edx;xorl (%eax), %edx;orl %edx, %ecx;je  <IoReadPartitionTable+>;movl $, %edx": 1,
                "movl %edx, %ecx;shll $, %ecx;movzbl (%eax,%ecx), %ecx;testb %cl, %cl;jns  <IoReadPartitionTable+>": 1,
                "jns  <IoReadPartitionTable+>;movl %ecx, %ebx;andl $, %ebx;cmpl $, %ebx;je  <IoReadPartitionTable+>": 1,
                "calll  <RtlInitUnicodeString>;subl $, %esp;movl (%ebp), %ecx;movl %ecx, (%esp);leal -(%ebp), %eax": 2,
                "testl %edx, %edx;je  <IoReadPartitionTable+>;movl %esi, %ebx;movl $, %eax;movl %edi, -(%ebp)": 1,
                "movl %edi, -(%ebp);cmpb $, (%ebx);jne  <IoReadPartitionTable+>;movzbl (%ebx), %edx;testb %dl, %dl": 1,
                "movl -(%ebp), %edx;addl (%edx,%eax,), %ebx;movb $, (%ebx);jmp  <IoReadPartitionTable+>;addl $, %eax": 1,
                "movl -(%ebp), %edi;jmp  <IoReadPartitionTable+>;leal -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %eax": 1,
                "leal -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <FsRtlRegisterUncProvider+>": 2,
                "shll $, %ecx;movzbl (%eax,%ecx), %ecx;testb %cl, %cl;jns  <IoReadPartitionTable+>;movl $, %edi": 2,
                "cmpl $, %edi;je  <IoReadPartitionTable+>;cmpl $, %edi;je  <IoReadPartitionTable+>;cmpb $, %cl": 2,
                "cmpl %ebx, (%eax);ja - <IoReadPartitionTable+>;jmp  <IoReadPartitionTable+>;leal -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %eax, (%esp);calll - <FsRtlRegisterUncProvider+>;testl %eax, %eax;js  <IoReadPartitionTable+>;movl -(%ebp), %ecx": 1,
                "movl (%esi,%ecx,), %eax;testl %eax, %eax;je  <IoReadPartitionTable+>;cmpl $, (%eax);jbe  <IoReadPartitionTable+>": 1,
                "cmpl $, (%eax);je  <IoReadPartitionTable+>;movl $, %eax;movl %edi, -(%ebp);movl -(%ebp), %esi": 2,
                "cmpl %eax, (%ecx);ja - <IoReadPartitionTable+>;movl -(%ebp), %edi;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl $, %ebx;movl %ecx, %esi;movl %edi, -(%ebp);movl -(%ebp), %edi;movl (%edi,%ebx,), %eax": 1,
                "jne  <IoReadPartitionTable+>;cmpb $, (%eax);jne  <IoReadPartitionTable+>;movl %ebx, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, %ecx;movl $, %edx": 2,
                "movl %eax, (%esp);calll  <ObCloseHandle>;subl $, %esp;jmp  <IoReadPartitionTable+>;movl -(%ebp), %edi": 1,
                "testl $, %edi;je  <IoAssignDriveLetters+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);movl $, (%esp);calll  <ExAllocatePoolWithTag>;subl $, %esp;testl %eax, %eax": 3,
                "movl $, (%esp);calll  <ExAllocatePoolWithTag>;subl $, %esp;testl %eax, %eax;je  <IoAssignDriveLetters+>": 1,
                "movzbl (%ecx), %eax;movb %al, (%edx);movzbl (%ecx), %eax;movb %al, (%edx);addl $, -(%ebp)": 1,
                "movl %eax, (%esi);movl (%ebx), %eax;movl %eax, (%esi);movl %edi, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);addl $, %ebx;movl %ebx, (%esp);addl $, %esi;movl %esi, (%esp)": 1,
                "movl %esi, (%esp);calll  <memmove>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "calll  <RtlAssert>;subl $, %esp;leal (%ebx,%ebx,), %ebx;shll $, %ebx;addl (%ebp), %ebx": 1,
                "subl $, %esp;cmpl $, (%esi);je  <IoAssignDriveLetters+>;movl $, %ebx;leal (%esi), %edi": 1,
                "calll - <IoAssignDriveLetters+>;subl $, %esp;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp": 1,
                "movl %edi, (%esp);calll  <KeWaitForSingleObject>;subl $, %esp;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "je  <IoAssignDriveLetters+>;movl $, (%esp);movl %edi, (%esp);calll  <ExFreePoolWithTag>;subl $, %esp": 1,
                "movl %esi, (%ebx);movl %esi, (%esp);movl $, (%esp);movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl %esi, (%esp);movl $, (%esp);movl %edx, (%esp);movl %eax, (%esp);calll  <wcstombs+>": 1,
                "movl %edx, (%esp);movl %eax, (%esp);calll  <wcstombs+>;movl %eax, (%ebx);movl %edx, (%ebx)": 1,
                "calll  <wcstombs+>;movl %eax, (%ebx);movl %edx, (%ebx);movl $, (%esp);movl %esi, (%esp)": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, (%ebx);testl %eax, %eax;jne  <IoAssignDriveLetters+>": 1,
                "movl (%ebp), %eax;movl %ebx, (%eax);movl $, %esi;jmp  <IoAssignDriveLetters+>;movl $, %esi": 1,
                "movl $, (%esp);movl -(%ebp), %eax;movl (%eax), %eax;leal (%eax,%eax,), %eax;shll $, %eax": 1,
                "movl (%ecx), %ebx;movl (%ecx), %esi;movl %ebx, (%edx);movl %esi, (%edx);movl (%ecx), %ebx": 1,
                "je  <IoAssignDriveLetters+>;cmpb $, (%eax);jg  <IoAssignDriveLetters+>;movl $, (%esp);movl $, (%esp)": 2,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebx), %eax;movl %eax, (%esp);movl -(%ebp), %esi": 1,
                "movl $, (%edi);movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);calll  <VerSetConditionMask+>;subl $, %esp": 1,
                "divl (%ebx);movl %eax, -(%ebp);testl %eax, %eax;je  <IoAssignDriveLetters+>;movl $, -(%ebp)": 1,
                "movl %eax, (%esp);calll - <IoAssignDriveLetters+>;subl $, %esp;testl %eax, %eax;jns  <IoAssignDriveLetters+>": 1,
                "movl -(%ebp), %edi;jmp  <IoAssignDriveLetters+>;movl $, -(%ebp);movl $, -(%ebp);movl (%ebx), %ecx": 1,
                "cmpl %eax, (%edi);jne  <IoAssignDriveLetters+>;movl (%ebp), %esi;movl %edi, (%esi);movl $, %esi": 1,
                "jmp  <IoAssignDriveLetters+>;movl $, %esi;jmp  <IoAssignDriveLetters+>;movl $, %esi;jmp  <IoAssignDriveLetters+>": 6,
                "movl (%esi), %ebx;movl $, (%ebx);movl $, (%ebx);movl $, (%ebx);movl $, (%ebx)": 1,
                "movl -(%ebp), %edx;movl %eax, (%ebx);movl %edx, (%ebx);movl -(%ebp), %eax;movl -(%ebp), %edx": 2,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax": 9,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl $, (%ebx)": 2,
                "movl %ecx, (%ebx);movl (%ebp), %ecx;movl %ecx, (%ebx);movl (%ebp), %ecx;movl %ecx, (%ebx)": 2,
                "movl (%ebp), %ecx;movl %ecx, (%ebx);movl (%ebp), %eax;movl $, %edx;movl %eax, -(%ebp)": 1,
                "subl -(%ebp), %eax;sbbl -(%ebp), %edx;movl %eax, (%ebx);movl %edx, (%ebx);movl (%ebp), %eax": 1,
                "movl %ebx, (%esp);movl -(%ebp), %eax;movl $, %edx;divl (%esi);addl (%esi), %edx": 1,
                "addl -(%ebp), %ecx;adcl -(%ebp), %ebx;movl %ecx, (%esp);movl %ebx, (%esp);movl %edi, (%esp)": 1,
                "movl %eax, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll  <VerSetConditionMask+>": 1,
                "movl (%edx), %eax;movl %eax, (%esp);calll  <VerSetConditionMask+>;subl $, %esp;movl (%ebp), %ecx": 1,
                "movl %eax, (%esp);calll  <VerSetConditionMask+>;subl $, %esp;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebp), %eax;cmpl %eax, (%ebp)": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);calll - <IoAssignDriveLetters+>;subl $, %esp;leal -(%ebp), %eax": 1,
                "movl $, (%esp);movzbl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %esi;movl $, -(%ebp);calll *-": 1,
                "subl $, %esp;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 6,
                "movl -(%ebp), %eax;shll $, %eax;movl -(%ebp), %ecx;movl $, %edx;divl (%ecx)": 1,
                "calll - <IoAssignDriveLetters+>;subl $, %esp;testl %eax, %eax;js  <IoAssignDriveLetters+>;cmpl $, -(%ebp)": 1,
                "subl $, %esp;movl $, %ebx;jmp  <IoAssignDriveLetters+>;movl (%ebx), %esi;movl -(%ebp), %eax": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);movl $, %eax;movl $, %edx;movb $, -(%ebp)": 1,
                "movl %eax, %esi;movl %edx, %edi;movl (%ebx), %eax;movl %eax, (%esp);movl %esi, (%esp)": 1,
                "js  <IoAssignDriveLetters+>;movl (%ebx), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "movl %eax, (%esp);movl -(%ebp), %edi;movl (%edi), %eax;movl %eax, (%esp);movl (%edi), %eax": 1,
                "movl (%edi), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "js  <IoAssignDriveLetters+>;leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <IoAssignDriveLetters+>;subl $, %esp;jmp  <IoAssignDriveLetters+>;movl -(%ebp), %eax;movl (%eax), %edx": 4,
                "movl (%ecx), %eax;movl (%ecx), %edx;addl $-, %eax;adcl $-, %edx;movl %eax, (%esp)": 1,
                "movb $, %bl;testl $, %edi;je  <IoAssignDriveLetters+>;movw $, (%edi);addl $, %edi": 1,
                "testl %esi, %esi;jne  <IoCreateDisk+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %esi, (%esp);calll - <IoAssignDriveLetters+>;subl $, %esp;jmp  <IoCreateDisk+>;addl $, %ebx": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl $, %esi;ja  <IoReadDiskSignature+>": 1,
                "subl $, %esp;cmpl $, %esi;ja  <IoReadDiskSignature+>;movl $, %esi;movl $, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <IoAssignDriveLetters+>;subl $, %esp;movl %eax, %edi": 1,
                "movl $, %edx;movl $, %eax;cmpb $-, (%ebx);jne  <IoReadDiskSignature+>;cmpb $, (%ebx)": 1,
                "movl (%ebx), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);jmp  <IoReadDiskSignature+>": 1,
                "cmpb $, %al;jbe  <IoVerifyPartitionTable+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "testl %eax, %eax;js  <IoVerifyPartitionTable+>;cmpl $, -(%ebp);jne  <IoVerifyPartitionTable+>;movl $, (%esp)": 1,
                "je  <IoVerifyPartitionTable+>;movl $, %ebx;cmpl $, %eax;jne  <IoVerifyPartitionTable+>;andl $, %esi": 1,
                "testl %esi, %esi;jne  <IoWritePartitionTableEx+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "je  <IoWritePartitionTableEx+>;movl $, %esi;cmpl $, %eax;jne  <IoWritePartitionTableEx+>;jmp  <IoWritePartitionTableEx+>": 1,
                "movl %eax, (%esp);calll - <IoAssignDriveLetters+>;subl $, %esp;movl %eax, %esi;jmp  <IoWritePartitionTableEx+>": 2,
                "jns  <IoWritePartitionTableEx+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl (%ebx), %ecx;movl -(%ebp), %eax;movl (%eax), %edi;cmpl %edi, %ecx;ja  <IoWritePartitionTableEx+>": 1,
                "movl %eax, -(%ebp);movl (%edx), %edx;movl %edx, -(%ebp);movl %edx, -(%ebp);movl -(%ebp), %esi": 1,
                "addl $, %eax;adcl $, %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl (%esi), %eax": 1,
                "js  <IoWritePartitionTableEx+>;movl -(%ebp), %edx;movl %edx, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %eax;movl $, (%eax);leal -(%ebp), %eax;movl %eax, (%esp);movzbl %bl, %eax": 1,
                "movl $, (%eax);leal -(%ebp), %eax;movl %eax, (%esp);movzbl %bl, %eax;movl %eax, (%esp)": 1,
                "addl $-, %eax;adcl $-, %edx;xorl (%ecx), %edx;xorl (%ecx), %eax;orl %eax, %edx": 1,
                "movl %edi, %edx;addl $, %eax;adcl $, %edx;movl %eax, (%ecx);movl %edx, (%ecx)": 1,
                "movl %edx, (%ecx);movb $, -(%ebp);movl -(%ebp), %eax;movl $, (%eax);movl -(%ebp), %esi": 1,
                "movl (%esi), %eax;movl %eax, (%edx);movl (%esi), %eax;movl %eax, (%edx);movl (%esi), %eax": 2,
                "calll  <ExFreePoolWithTag>;subl $, %esp;jmp  <IoWritePartitionTableEx+>;movl $, -(%ebp);movl -(%ebp), %esi": 1,
                "addl -(%ebp), %edi;movl (%ebp), %ebx;movl (%ebx), %eax;movl -(%ebp), %ecx;imull %eax, %ecx": 1,
                "movb $, (%ecx);movl $, (%edi);movl -(%ebp), %ecx;movl %ecx, (%edi);movl -(%ebp), %ecx": 1,
                "movl %ecx, %edi;leal -(%ebp), %esi;movl $, %eax;testb $, %cl;je  <IoWritePartitionTableEx+>": 1,
                "je  <IoWritePartitionTableEx+>;movzwl (%esi), %ecx;movw %cx, (%edi);movl $, %ecx;testb $, %al": 1,
                "movl %ebx, (%eax);cmpb $, -(%ebp);je  <IoWritePartitionTableEx+>;movl %eax, (%esp);movl (%ebp), %ebx": 1,
                "movl (%ebp), %esi;calll *-;cmpb $, %al;jbe  <IoReadPartitionTableEx+>;calll *-": 1,
                "cmpl $, %eax;je  <IoReadPartitionTableEx+>;cmpl $, %eax;jb  <IoReadPartitionTableEx+>;movl $, %ebx": 1,
                "movl %esi, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <IoAssignDriveLetters+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <IoWritePartitionTableEx+>;subl $, %esp;movl %eax, %ebx": 2,
                "movl %eax, (%esp);calll - <IoWritePartitionTableEx+>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax": 1,
                "movl %eax, %ebx;testl %eax, %eax;jns  <IoReadPartitionTableEx+>;movl %esi, (%esp);movl $, (%esp)": 1,
                "jmp  <IoReadPartitionTableEx+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <IoAssignDriveLetters+>;subl $, %esp": 2,
                "testl %eax, %eax;je  <IoGetBootDiskInformation+>;cmpl $, %ebx;jbe  <IoGetBootDiskInformation+>;movl (%eax), %edx": 1,
                "movl $, -(%ebp);movl -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp);leal -(%ebp), %ecx": 1,
                "movl %edx, (%esp);movl $, (%esp);leal -(%ebp), %ecx;movl %ecx, (%esp);calll  <sprintf>": 2,
                "movl $, (%esp);leal -(%ebp), %ecx;movl %ecx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "movl $, (%esp);calll  <IoBuildDeviceIoControlRequest>;subl $, %esp;testl %eax, %eax;jne  <IoGetBootDiskInformation+>": 3,
                "calll - <IoReadPartitionTableEx>;subl $, %esp;movl %eax, %esi;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>": 1,
                "js  <IoGetBootDiskInformation+>;cmpl $, -(%ebp);jne  <IoGetBootDiskInformation+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "leal -(%ebp), %edi;movl %edi, (%esp);calll  <RtlInitAnsiString>;subl $, %esp;movl $, (%esp)": 3,
                "calll  <RtlFreeUnicodeString>;subl $, %esp;jmp  <IoGetBootDiskInformation+>;movl %eax, %edx;movl -(%ebp), %ecx": 2,
                "calll  <RtlFreeUnicodeString>;subl $, %esp;jmp  <IoGetBootDiskInformation+>;movl -(%ebp), %eax;movl -(%ebp), %edx": 2,
                "cmpl %edx, -(%ebp);jne - <IoGetBootDiskInformation+>;movl -(%ebp), %eax;movl %eax, (%esp);calll  <ExFreePool>": 1,
                "subl $, %esp;addl $, -(%ebp);movl -(%ebp), %ecx;cmpl %ecx, -(%ebp);jne - <IoGetBootDiskInformation+>": 1,
                "subl $, %esp;movl (%ebp), %edi;movl (%ebp), %ebx;movl $, -(%ebp);calll *-": 1,
                "shll $, %eax;addl -(%ebp), %eax;movl (%ebx), %edx;movl %edx, (%eax);movl (%ebx), %edx": 1,
                "movl (%ebx), %edx;movl (%ebx), %ecx;movl %edx, (%eax);movl %ecx, (%eax);movl $, (%esp)": 1,
                "movl %eax, (%esp);movl (%ebp), %esi;movl (%esi), %eax;movl %eax, (%esp);calll - <IoWritePartitionTableEx>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <ExFreePool>;subl $, %esp;jmp  <IoGetBootDiskInformation+>": 1,
                "jbe  <IoSetPartitionInformationEx+>;calll *-;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp)": 12,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl %esi, %esi;jne  <IoSetPartitionInformationEx+>": 1,
                "js  <IoSetPartitionInformationEx+>;leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%esi), %eax;cmpl -(%ebp), %eax;je  <IoSetPartitionInformationEx+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %edi, %ecx;calll - <IoSetPartitionInformation>": 1,
                "movl %esp, %ebp;movl $, %eax;popl %ebp;retl;pushl %ebp": 15,
                "testl %eax, %eax;je  <IoSetPartitionInformationEx+>;movl %eax, %edx;movl $, %ecx;movl $, %esi": 1,
                "movl %eax, %edx;movl $, %ecx;movl $, %esi;testb $, %al;je  <IoSetPartitionInformationEx+>": 1,
                "movb $, (%edx);movl (%ebp), %eax;movl $, (%eax);movl (%ebp), %eax;movl (%eax), %edi": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;leal -(%ebp), %esi;movl %esi, (%esp);leal -(%ebp), %ebx": 1,
                "movl %eax, (%esp);movl -, %edx;movl %edx, -(%ebp);calll *%edx;subl $, %esp": 1,
                "movl -, %edx;movl %edx, -(%ebp);calll *%edx;subl $, %esp;movl %eax, (%edi)": 1,
                "calll *-(%ebp);subl $, %esp;movl %eax, (%edi);movl $, %eax;jmp  <IoSetPartitionInformationEx+>": 1,
                "movl (%ebp), %ebx;calll *-;cmpb $, %al;jbe  <IoSetPartitionInformationEx+>;calll *-": 1,
                "movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %ebx;movzwl (%ebp), %eax;movw %ax, -(%ebp)": 1,
                "movw %ax, -(%ebp);movzwl (%ebp), %edi;calll *-;cmpb $, %al;jbe  <IoSetPartitionInformationEx+>": 1,
                "calll  <RtlAssert>;subl $, %esp;testw %di, %di;je  <IoSetPartitionInformationEx+>;movl $, (%esp)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl (%eax), %edi;cmpl %eax, %edi;je  <IoSetPartitionInformationEx+>": 1,
                "jne  <IoSetPartitionInformationEx+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <RtlEqualUnicodeString>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl (%edi), %eax;movl %eax, (%esp);calll  <LdrAccessResource>": 1,
                "jns - <IoSetPartitionInformationEx+>;jmp - <IoSetPartitionInformationEx+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "pushl %ebx;subl $, %esp;calll *-;movl %eax, %ebx;cmpb $, %al": 1,
                "ja  <IoSetPartitionInformationEx+>;movl $, %ecx;calll  <KeTestSpinLock>;testb %al, %al;je - <IoSetPartitionInformationEx+>": 1,
                "ja  <InbvEnableBootDriver+>;calll - <IoSetPartitionInformationEx+>;cmpl $, -;jne  <InbvEnableBootDriver+>;calll  <wcstombs+>": 1,
                "sete %al;movzbl %al, %eax;movl %eax, ;addl $, %esp;popl %ebx": 1,
                "subl $, %esp;movl $, (%esp);movl $, (%esp);calll *%eax;subl $, %esp": 1,
                "movl $, -;retl;pushl %ebp;movl %esp, %ebp;cmpb $, (%ebp)": 1,
                "subl $, %esp;calll - <IoSetPartitionInformationEx+>;movl $, %eax;movl -(%ebp), %edi;leave": 1,
                "pushl %ebp;movl %esp, %ebp;movzbl -, %eax;movl (%ebp), %edx;movb %dl, -": 1,
                "movl (%ebp), %eax;movl %eax, ;movl $, -;popl %ebp;retl $": 1,
                "subl $, %esp;leave;retl $;cmpl $, -;jne  <InbvSolidColorFill+>": 1,
                "calll - <IoSetPartitionInformationEx+>;leave;retl $;cmpb $, -;je  <InbvSolidColorFill+>": 2,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;imull $, -, %ecx;movl $, %edx": 1,
                "shrl $, %ebx;calll - <IoSetPartitionInformationEx+>;movl , %eax;movl -, %ecx;movl $, (%esp)": 1,
                "subl $, %esp;calll - <IoSetPartitionInformationEx+>;movl -(%ebp), %ebx;leave;retl $": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl %eax, ;movl (%ebp), %eax;movl %eax, ": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %edi;movl (%ebp), %esi;movl $, %eax": 1,
                "movl (%ebp), %edi;movl (%ebp), %esi;movl $, %eax;cmpb $, -;jne  <InbvSolidColorFill+>": 1,
                "movb %al, ;testb %al, %al;je  <InbvSolidColorFill+>;movzbl %bl, %ebx;movl %ebx, (%esp)": 1,
                "movl %edi, (%esp);calll - <IoSetPartitionInformationEx+>;subl $, %esp;movl %eax, -(,%ebx,);addl $, %ebx": 1,
                "movl %ecx, -;movl %ecx, (%esp);calll - <InbvSolidColorFill+>;subl $, %esp;leave": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp)": 3,
                "movl $, (%esp);calll - <InbvSolidColorFill+>;subl $, %esp;movl %eax, %ebx;jmp  <InbvSolidColorFill+>": 1,
                "movl $, (%esp);calll - <InbvSolidColorFill+>;subl $, %esp;movl %eax, %ebx;cmpl $, -": 1,
                "calll - <InbvSolidColorFill+>;subl $, %esp;movl %eax, %ebx;cmpl $, -;je  <InbvSolidColorFill+>": 1,
                "subl $, %esp;testb %al, %al;jne  <InbvSolidColorFill+>;movl $, (%esp);calll - <ExVerifySuite>": 1,
                "je  <InbvSolidColorFill+>;movb $, (%esi);leal (%esi), %edi;movb $, %dl;testl $, %edi": 1,
                "calll - <InbvSolidColorFill+>;subl $, %esp;movl $, -(%ebp);movl $, -(%ebp);cmpb $, -": 1,
                "movl $, -(%ebp);movl $, -(%ebp);cmpb $, -;je  <InbvSolidColorFill+>;cmpl $, -": 1,
                "movl %edi, (%esp);movl $, (%esp);movl $, (%esp);calll  <KeDelayExecutionThread>;subl $, %esp": 2,
                "movl $, (%esp);calll  <wcstombs+>;subl $, %esp;movl $, -;calll - <IoSetPartitionInformationEx+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;leal (%eax,%eax,), %eax;movl $, -(,%eax,);popl %ebp": 1,
                "subl $, %ebx;leal (%ebx,%ebx,), %edx;movl $, %eax;cmpl $, -(,%edx,);jne  <InbvSolidColorFill+>": 1,
                "movl (%ebp), %eax;movl %ebx, (%eax);movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);addl $, %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "je  <IoAllocateAdapterChannel+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <ExAllocatePoolWithTag>": 1,
                "movl %eax, -(%ebp);cmpl -(%ebp), %eax;jae  <IoAllocateAdapterChannel+>;movl -(%ebp), %edx;movl %edx, -(%ebp)": 1,
                "je  <IoAllocateAdapterChannel+>;cmpw $, (%eax);je  <IoAllocateAdapterChannel+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "leal -(%ebp), %ebx;movl %ebx, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;movl -(%ebp), %edx": 2,
                "movl $, (%esp);calll  <IoBuildDeviceIoControlRequest>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax": 3,
                "jne  <IoAllocateAdapterChannel+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, -(%ebp);jmp  <IoAllocateAdapterChannel+>": 5,
                "leal -(%ebp), %edx;movl %edx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlAnsiStringToUnicodeString>": 3,
                "subl $, %esp;jmp  <IoAllocateAdapterChannel+>;movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax": 1,
                "movl $, %eax;addl (%esi,%eax,), %ebx;addl $, %eax;cmpl $, %eax;jne - <IoAllocateAdapterChannel+>": 1,
                "calll  <ObfDereferenceObject>;movl -(%ebp), %eax;addl (%eax), %ebx;testl %ebx, %ebx;jne  <IoAllocateAdapterChannel+>": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;js  <IoAllocateAdapterChannel+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp);calll  <IoCreateSymbolicLink>": 1,
                "leal -(%ebp), %ebx;movl %ebx, (%esp);calll  <IoCreateSymbolicLink>;subl $, %esp;movl %ebx, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;testl %eax, %eax;je  <IoAllocateAdapterChannel+>": 11,
                "jne - <IoAllocateAdapterChannel+>;movl %edi, -(%ebp);jmp  <IoAllocateAdapterChannel+>;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <IoAllocateAdapterChannel+>;movl %eax, (%esp);calll  <ExFreePool>;subl $, %esp": 3,
                "jmp  <IoAllocateAdapterChannel+>;movl %eax, -(%ebp);movl $, (%esp);movl %esi, (%esp);calll  <ExFreePoolWithTag>": 1,
                "movl $, -(%ebp);jmp - <IoAllocateAdapterChannel+>;movl -(%ebp), %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <NtMakePermanentObject+>;subl $, %esp;testl %eax, %eax": 1,
                "movl %eax, (%esp);calll  <RtlFreeUnicodeString>;subl $, %esp;movl $, %edx;jmp  <IoAllocateAdapterChannel+>": 2,
                "movzwl -(%ebp), %eax;movb $, -(%ebp,%eax);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll  <NtMakePermanentObject+>;subl $, %esp;movl $, %edx;testl %eax, %eax": 1,
                "subl $, %esp;movl $, %edx;testl %eax, %eax;js  <IoAllocateAdapterChannel+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <ObMakeTemporaryObject+>;subl $, %esp;movl $, (%esp)": 1,
                "cmpl %ebx, %eax;jae  <IoAllocateAdapterChannel+>;movl %ebx, -(%ebp);cmpb $, -(%ebp);je  <IoAllocateAdapterChannel+>": 1,
                "calll  <ObfDereferenceObject>;jmp  <IoAllocateAdapterChannel+>;cmpb $, -(%ebp);je  <IoAllocateAdapterChannel+>;movl -(%ebp), %eax": 1,
                "jmp  <IoAllocateAdapterChannel+>;cmpb $, -(%ebp);je  <IoAllocateAdapterChannel+>;movl -(%ebp), %eax;cmpw $, (%eax)": 1,
                "leal -(%ebp), %esi;movl %esi, (%esp);calll  <IoGetDeviceObjectPointer>;subl $, %esp;movl %eax, %ebx": 1,
                "calll - <HalExamineMBR>;subl $, %esp;movl -(%ebp), %eax;testl %eax, %eax;je  <IoAllocateAdapterChannel+>": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %edi;testl %eax, %eax;jne  <IoAllocateAdapterChannel+>": 1,
                "cmpl $, -(%ebp);jne  <IoAllocateAdapterChannel+>;cmpb $, -(%ebp);jne  <IoAllocateAdapterChannel+>;leal -(%ebp), %edx": 1,
                "calll  <RtlFreeUnicodeString>;subl $, %esp;jmp  <IoAllocateAdapterChannel+>;leal -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "movl -(%ebp), %eax;cmpl $-, %eax;jne  <IoAllocateAdapterChannel+>;movl -(%ebp), %eax;movl %ebx, (%esp)": 1,
                "movl (%edi), %eax;movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %esi;movl %esi, (%esp)": 2,
                "movl %eax, (%esp);movl %esi, (%esp);calll  <RtlEqualString>;subl $, %esp;testb %al, %al": 1,
                "je  <IoAllocateAdapterChannel+>;movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);leal -(%ebp), %esi": 1,
                "movl %eax, (%esp);calll  <IoCreateSymbolicLink>;subl $, %esp;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "testl %edi, %edi;je  <IoAllocateAdapterChannel+>;movl $, (%esp);movl %edi, (%esp);calll  <ExFreePoolWithTag>": 1,
                "sete -(%ebp);movl (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %edi": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %edi;movl %edi, (%esp)": 1,
                "movl %edi, (%esp);calll  <sprintf>;movl %edi, (%esp);leal -(%ebp), %esi;movl %esi, (%esp)": 1,
                "movl %edi, (%esp);leal -(%ebp), %esi;movl %esi, (%esp);calll  <RtlInitAnsiString>;subl $, %esp": 1,
                "movl $, (%esp);calll  <RtlAnsiStringToUnicodeString>;subl $, %esp;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al;movl %ecx, %esi;notl %esi": 2,
                "subl $, %esp;movl %eax, ;testl %eax, %eax;je  <IoAllocateAdapterChannel+>;movl %esi, (%esp)": 1,
                "je  <IoAllocateAdapterChannel+>;movl %esi, (%esp);movl (%ebx), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlInitAnsiString>;subl $, %esp;cmpb $, -": 1,
                "subl $, %esp;cmpb $, -;je  <IoAllocateAdapterChannel+>;movb $, -(%ebp);movl $, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %esi;movl %esi, (%esp);calll  <IoCreateSymbolicLink>": 1,
                "je  <IoAllocateAdapterChannel+>;movl %esi, (%esp);leal (%esi), %esi;calll  <wcslen>;movl $, (%esp)": 1,
                "addl %eax, %eax;movl %eax, (%esp);movl %esi, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl %esi, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 3,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwWriteFile>;subl $, %esp;movl %eax, %ebx": 4,
                "calll  <DbgPrint>;movl %ebx, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 4,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <swprintf>;movl , %eax;movl %eax, (%esp)": 1,
                "calll - <ExReleaseResourceLite>;jmp  <IoAllocateAdapterChannel+>;movl $, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp)": 2,
                "testl %eax, %eax;jns  <IoAllocateAdapterChannel+>;movl %edi, (%esp);calll  <ExFreePool>;subl $, %esp": 1,
                "movl %eax, (%esp);calll - <ZwClose>;subl $, %esp;movl %edi, (%esp);calll  <ExFreePool>": 3,
                "subl $, %esp;movl %edi, (%esp);calll  <ExFreePool>;subl $, %esp;movl $, %ecx": 2,
                "movl $, %ecx;calll - <ExReleaseResourceLite>;jmp  <IoAllocateAdapterChannel+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <ZwClose>;subl $, %esp;movl $, %eax;calll - <IoAllocateAdapterChannel+>": 1,
                "subl $, %esp;movl (%ebp), %ebx;calll *-;cmpb $, %al;jbe  <IoCreateController+>": 1,
                "jmp  <IoCreateController+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "subl $, %esp;testl %eax, %eax;je  <IoFreeController+>;movl (%eax), %edx;movl %edx, (%esp)": 1,
                "je  <IoAllocateController+>;andl $, (%eax);movl (%eax), %eax;testl %eax, %eax;jne - <IoAllocateController+>": 1,
                "calll  <IoGetDmaAdapter+>;movl %eax, %esi;calll *-;cmpb $, %al;jbe  <IoAllocateController+>": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne  <IoAllocateController+>;jmp  <IoAllocateController+>;movl %edx, %eax": 1,
                "jne  <IoAllocateController+>;jmp  <IoAllocateController+>;movl %edx, %eax;movl (%eax), %edx;movl (%edx), %edx": 1,
                "movl %edx, %eax;popl %ebp;retl $;pushl %ebp;movl %esp, %ebp": 3,
                "movl (%ebp), %ecx;cmpl $, (%ebp);jne  <IoAllocateController+>;movl (%ecx), %eax;movl (%eax), %edx": 1,
                "jne  <IoAllocateController+>;cmpl $, (%esi);jne  <IoAllocateController+>;addl $, %esi;movl %esi, (%esp)": 1,
                "cmpl $, (%esi);jne  <IoAllocateController+>;addl $, %esi;movl %esi, (%esp);movl $, (%esp)": 1,
                "testb $, (%eax);je  <IoAllocateController+>;movl %ebx, (%esp);calll - <IoAllocateController+>;subl $, %esp": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx;cmpb $, (%ebp);je  <IoAllocateController+>": 2,
                "subl $, %esp;jmp  <IoAllocateController+>;movl $, (%ebx);leal (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %edx;movl %edi, %eax;shrl $, %eax;andl $, %eax;movl %eax, -(%ebp)": 1,
                "shrl $, %eax;andl $, %eax;movl %eax, -(%ebp);leal (%ebx), %esi;movl $, %eax": 1,
                "testl $, %edi;je  <IoAllocateController+>;movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "cmpxchgl %edx, (%esi);jne - <IoAllocateController+>;testl %edx, %edx;jne  <IoAllocateController+>;movl (%ebx), %edx": 1,
                "andl $, %ecx;testb $, %al;jne - <IoAllocateController+>;leal -(%ebp), %esp;popl %ebx": 1,
                "movl (%ebp), %eax;movl $, (%eax);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "calll  <memset>;movl -(%ebp), %eax;movw $, (%eax);movzwl (%ebp), %edx;addw $, %dx": 1,
                "addw $, %dx;movl -(%ebp), %eax;movw %dx, (%eax);movl -(%ebp), %eax;leal (%eax,%esi), %ebx": 1,
                "movl %ebx, (%esp);calll  <PoRequestShutdownEvent+>;subl $, %esp;movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);movl %ebx, (%eax);movl (%ebp), %edx;movl %edx, (%eax);movl (%ebp), %edx": 1,
                "movl (%ebp), %edx;movl %edx, (%eax);movl (%ebp), %edx;movl %edx, (%eax);leal (%eax), %ecx": 1,
                "movl %edx, (%eax);movl (%ebp), %edx;movl %edx, (%eax);leal (%eax), %ecx;cmpl $, (%ebp)": 1,
                "movl (%ebp), %edx;movl %edx, (%eax);leal (%eax), %ecx;cmpl $, (%ebp);sbbl %edx, %edx": 1,
                "cmpl $, (%ebp);jae  <IoCreateDevice+>;cmpl $, (%ebp);jne  <IoCreateDevice+>;jmp  <IoCreateDevice+>": 1,
                "jmp  <IoCreateDevice+>;movl -(%ebp), %eax;movw $, (%eax);movl -(%ebp), %eax;movl (%eax), %edx": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx;movl (%ebx), %eax;movl (%eax), %esi": 1,
                "ja  <IoEnumerateDeviceObjectList+>;testl %edi, %edi;je  <IoEnumerateDeviceObjectList+>;testl %ebx, %ebx;je  <IoEnumerateDeviceObjectList+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <KeInitializeEvent>;subl $, %esp;testl %ebx, %ebx": 1,
                "je  <IoGetAttachedDevice+>;leal -(%ebp), %edi;movl (%ebx), %eax;movl %eax, (%esp);calll - <IoGetAttachedDevice>": 2,
                "calll - <IoGetAttachedDevice>;subl $, %esp;movl %eax, %esi;leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "calll  <IoBuildSynchronousFsdRequest>;subl $, %esp;testl %eax, %eax;je  <IoGetAttachedDevice+>;movl %eax, %edx": 2,
                "jne  <IoGetAttachedDevice+>;movl $, (%esp);movl $, (%esp);calll - <ExAcquireResourceExclusiveLite>;subl $, %esp": 1,
                "movl $, (%esp);calll  <IoCheckQuerySetVolumeInformation+>;subl $, %esp;movl $, %edx;movl $, %ecx": 1,
                "testl %eax, %eax;jne - <IoGetAttachedDevice+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl %esi, (%ebx);addw $, (%ebx);movzbl (%ebx), %eax;addl $, %eax;movb %al, (%esi)": 1,
                "orl $, (%eax);movl %ebx, (%edi);jmp  <IoGetAttachedDevice+>;movl $, %ebx;jmp  <IoGetAttachedDevice+>": 1,
                "movl $, %ebx;jmp  <IoGetAttachedDevice+>;movl $, %ebx;cmpl $, (%ebp);je  <IoGetAttachedDevice+>": 1,
                "movl $, %ebx;cmpl $, (%ebp);je  <IoGetAttachedDevice+>;movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "movl %eax, (%esp);calll - <IoGetAttachedDevice+>;subl $, %esp;leave;retl $": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <IoAttachDeviceToDeviceStack>;subl $, %esp": 1,
                "movl (%edx), %ecx;movl (%ebp), %eax;movl %ecx, (%eax);movl (%edx), %ecx;calll  <ObfReferenceObject>": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);movl (%edx), %ecx;calll  <ObfReferenceObject>;movl $, %ebx": 1,
                "testl %ebx, %ebx;je  <IoGetLowerDeviceObject+>;movl %ebx, %ecx;calll  <ObfReferenceObject>;jmp  <IoGetLowerDeviceObject+>": 1,
                "je  <IoGetRelatedDeviceObject+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "jne  <IoGetRelatedDeviceObject+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "subl $, %esp;movl -(%ebp), %eax;cmpl $, (%eax);je  <IoGetRelatedDeviceObject+>;movl $, (%esp)": 1,
                "movl $, -(%ebp);movl (%ebp), %eax;orl $, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <ZwOpenFile>": 1,
                "testl %eax, %eax;js  <IoGetRelatedDeviceObject+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <IoGetRelatedDeviceObject>": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;js  <IoAttachDevice+>;movl (%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <IoAttachDeviceToDeviceStackSafe>;subl $, %esp;movl %eax, %ebx;movl -(%ebp), %ecx": 1,
                "testl %edx, %edx;je  <IoAttachDevice+>;movl (%edx), %ecx;movl (%ebp), %edx;movl %ecx, (%edx)": 1,
                "subl $, %esp;orl $, (%ebx);movl $, %eax;jmp  <IoRegisterLastChanceShutdownNotification+>;movl $, %eax": 1,
                "movl %edi, %eax;movl (%eax), %eax;cmpl $, %eax;jne - <IoUnregisterShutdownNotification+>;movl %esi, %eax": 1,
                "calll  <IoReportHalResourceUsage+>;subl $, %esp;movl $, (%esp);movl %esi, (%esp);calll  <ExFreePoolWithTag>": 1,
                "movl %eax, (%edx);popl %ebp;retl $;pushl %ebp;movl %esp, %ebp": 2,
                "movl (%ebp), %edx;movl (%ebp), %ecx;movzbl (%ebp), %eax;movl (%edx), %ebx;testb $, (%ebx)": 1,
                "je  <IoStartNextPacketByKey+>;cmpb $, %al;sbbl %eax, %eax;andl $-, %eax;addl $, %eax": 1,
                "addl $, %eax;movl %eax, (%esp);movl $, (%esp);movl %edx, (%esp);calll - <IoAllocateController+>": 1,
                "movl %ebx, (%esi);testl %edi, %edi;je  <IoStartPacket+>;movl (%esi), %eax;testb $, (%eax)": 1,
                "movl (%esi), %eax;movl %ebx, (%esp);movl %esi, (%esp);calll *(%eax);subl $, %esp": 1,
                "movl $, (%ebx);movl %ebx, (%esp);movl %esi, (%esp);calll *%edi;subl $, %esp": 1,
                "jne  <IoStartPacket+>;leal -(%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %edx;movl %edx, -(%ebp)": 2,
                "movl %eax, -(%ebp);movl -(%ebp), %edx;movl $, (%edx);movl -(%ebp), %eax;movl $, (%eax)": 1,
                "movl -(%ebp), %edx;movl $, (%edx);leal -(%ebp), %eax;movl %eax, -(%ebp);movw $, -(%ebp)": 1,
                "calll - <ZwOpenKey>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jns  <IoStartPacket+>": 3,
                "movl %eax, %ebx;movl $, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll  <wcschr>": 1,
                "movl $, %ebx;testl %eax, %eax;je  <IoStartPacket+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <IoStartPacket+>;movl %ebx, -(%ebp)": 1,
                "addl $, %eax;subl %ebx, %eax;movw %ax, -(%ebp);movw %ax, -(%ebp);movl $, -(%ebp)": 1,
                "movl %eax, (%esp);calll - <ZwClose>;subl $, %esp;testl %ebx, %ebx;jns  <IoStartPacket+>": 1,
                "movl %eax, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;movl $, -(%ebp);movl -(%ebp), %edx": 1,
                "subl $, %esp;testl %ebx, %ebx;js  <IoOpenDeviceInterfaceRegistryKey+>;movl -(%ebp), %edx;movl (%ebp), %eax": 1,
                "movl -(%ebp), %edx;movl (%ebp), %eax;movl %edx, (%eax);movl %ebx, %eax;movl -(%ebp), %ebx": 1,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;js  <IoGetDeviceInterfaces+>;movw $, -(%ebp)": 1,
                "movzwl -(%ebp), %ebx;movl $, (%esp);calll  <wcslen>;addw -(%ebp), %bx;leal (%ebx,%eax,), %eax": 1,
                "calll  <ExAllocatePool>;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;je  <IoGetDeviceInterfaces+>": 2,
                "calll - <ZwOpenKey>;subl $, %esp;movl %eax, %esi;testl %eax, %eax;js  <IoGetDeviceInterfaces+>": 1,
                "movl %eax, %esi;testl %eax, %eax;js  <IoGetDeviceInterfaces+>;movl -(%ebp), %esi;movl %esi, -(%ebp)": 1,
                "js  <IoGetDeviceInterfaces+>;movl -(%ebp), %esi;movl %esi, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, -(%ebp);jmp  <IoGetDeviceInterfaces+>;movl %eax, (%esp);calll - <ZwClose>;subl $, %esp": 1,
                "movl -(%ebp), %edi;jmp  <IoGetDeviceInterfaces+>;movl $, %edi;leal -(%ebp), %esi;movl %esi, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl %edi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 19,
                "testb %al, %al;jne  <IoGetDeviceInterfaces+>;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "jne  <IoGetDeviceInterfaces+>;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 2,
                "testl %eax, %eax;js  <IoGetDeviceInterfaces+>;testb $, (%ebp);jne  <IoGetDeviceInterfaces+>;movl $, -(%ebp)": 1,
                "movl $, (%esp);leal -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "leal -(%ebp), %esi;movl %esi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwQueryValueKey>": 1,
                "calll  <DbgPrint>;movl %edi, (%esp);calll  <ExFreePool>;subl $, %esp;jmp  <IoGetDeviceInterfaces+>": 1,
                "calll  <DbgPrint>;jmp  <IoGetDeviceInterfaces+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "cmpl $, %eax;jbe  <IoGetDeviceInterfaces+>;subl $, %eax;movw %ax, -(%ebp);movw %ax, -(%ebp)": 1,
                "leal (%edx,%edx), %eax;movw %ax, -(%ebp);movzwl %ax, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "js  <IoGetDeviceInterfaces+>;addw $, -(%ebp);movl %ebx, (%esp);calll  <ExFreePool>;subl $, %esp": 1,
                "movzwl -(%ebp), %eax;cmpw %ax, -(%ebp);jb  <IoGetDeviceInterfaces+>;addl $, %eax;movw %ax, -(%ebp)": 1,
                "je  <IoGetDeviceInterfaces+>;movzwl -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "calll  <ExFreePool>;subl $, %esp;movl %ebx, -(%ebp);movzwl -(%ebp), %edx;shrw %dx": 1,
                "movzwl %dx, %edx;movl -(%ebp), %eax;movw $, (%eax,%edx,);movl -(%ebp), %edx;movl (%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <ZwClose>;subl $, %esp;movl -(%ebp), %eax;cmpl $-, %eax": 7,
                "testl %ebx, %ebx;je  <IoGetDeviceInterfaces+>;movl %ebx, (%esp);calll  <ExFreePool>;subl $, %esp": 1,
                "je  <IoGetDeviceInterfaces+>;movl %edi, (%esp);calll  <ExFreePool>;subl $, %esp;jmp  <IoGetDeviceInterfaces+>": 1,
                "movl $, -(%ebp);jmp - <IoGetDeviceInterfaces+>;movl $, %edi;jmp - <IoGetDeviceInterfaces+>;movl %esi, %eax": 1,
                "jmp - <IoGetDeviceInterfaces+>;movl %esi, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "testl %ebx, %ebx;je  <IoRegisterDeviceInterface+>;movl $, -(%ebp);movzwl (%ebx), %ecx;cmpw $, %cx": 1,
                "cmpw $, %cx;jbe  <IoRegisterDeviceInterface+>;movl (%ebx), %eax;movzwl (%eax), %eax;cmpw $, %ax": 1,
                "je  <IoRegisterDeviceInterface+>;shrw %cx;movzwl %cx, %ecx;movl $, %eax;jmp  <IoRegisterDeviceInterface+>": 1,
                "shrw %cx;movzwl %cx, %ecx;movl $, %eax;jmp  <IoRegisterDeviceInterface+>;movl (%ebx), %edx": 1,
                "movl %eax, -(%ebp);cmpl %eax, %ecx;ja - <IoRegisterDeviceInterface+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll  <ObQueryNameString>": 1,
                "js  <IoRegisterDeviceInterface+>;cmpw $, -(%ebp);jne  <IoRegisterDeviceInterface+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll  <wcscpy>;leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %esi": 2,
                "je  <IoRegisterDeviceInterface+>;addl $, %eax;movw %ax, -(%ebp);movzwl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jne  <IoRegisterDeviceInterface+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>;subl $, %esp": 2,
                "jmp  <IoRegisterDeviceInterface+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlAppendUnicodeToString>": 1,
                "cmpw $, (%ebx);je  <IoRegisterDeviceInterface+>;movl %ebx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movw %ax, (%edx);testl %ebx, %ebx;je  <IoRegisterDeviceInterface+>;movzwl (%ebx), %edx;testw %dx, %dx": 1,
                "movw %ax, (%ecx);movl (%ebp), %edx;movzwl (%edx), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "leal (%ecx,%eax,), %eax;cmpw $, (%eax);jne  <IoRegisterDeviceInterface+>;movw $, (%eax);movl -(%ebp), %eax": 1,
                "movl (%ebp), %ecx;movl (%ecx), %eax;movw $, (%eax,%edx,);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %ecx, (%esp);calll  <IoCreateSymbolicLink>;subl $, %esp": 1,
                "calll  <IoCreateSymbolicLink>;subl $, %esp;movl %eax, %edi;cmpl $, %eax;jne  <IoRegisterDeviceInterface+>": 1,
                "movzwl (%ecx), %ecx;movl %ecx, %edx;shrw %dx;movzwl %dx, %edx;movl (%ebp), %ecx": 1,
                "movzwl %dx, %edx;movl (%ebp), %ecx;movl (%ecx), %eax;movw $, (%eax,%edx,);movl (%ecx), %eax": 1,
                "movw $, (%eax);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>;subl $, %esp": 1,
                "movl %eax, %esi;movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll  <wcschr>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <IoSetDeviceInterfaceState+>;movl %esi, -(%ebp)": 1,
                "calll  <DbgPrint>;jmp  <IoSetDeviceInterfaceState+>;movl %esi, -(%ebp);addl $, %eax;movl %eax, %edx": 1,
                "movl %ebx, %eax;calll - <IoStartPacket+>;movl %eax, %esi;testl %eax, %eax;js  <IoSetDeviceInterfaceState+>": 1,
                "calll - <ZwClose>;subl $, %esp;testl %esi, %esi;jns  <IoSetDeviceInterfaceState+>;movl $, (%esp)": 2,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <IoSetDeviceInterfaceState+>;movl %edi, %eax;testb %al, %al": 1,
                "movl %ebx, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);movl $, (%esp)": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "jmp - <IoSetDeviceInterfaceState+>;cmpl $, -(%ebp);je  <IoSetDeviceInterfaceState+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;movl $, (%ecx);movl $, (%ecx);movl $, %edx": 1,
                "subl $, %esp;movl %ebx, %eax;testl %ebx, %ebx;jne - <IoSetDeviceInterfaceState+>;movl (%esi), %eax": 1,
                "je  <IoSetDeviceInterfaceState+>;leal -(%ebp), %edx;movl %edx, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 1,
                "movl (%esi), %edi;shrw %cx;movzwl %cx, %ecx;subl %ebx, %ecx;movl (%edx), %eax": 1,
                "addl $, %eax;cmpw %dx, %cx;jne  <IoSetDeviceInterfaceState+>;cmpl %eax, %ebx;jne - <IoSetDeviceInterfaceState+>": 1,
                "subl $, %esp;movl %ebx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <IoSetDeviceInterfaceState+>": 1,
                "leal -(%ebp), %ebx;movl %ebx, (%esp);calll  <_snprintf>;movl %ebx, (%esp);calll *-": 1,
                "calll *-;subl $, %esp;movl -(%ebp), %ebx;leave;retl": 1,
                "movw %ax, (%ebx);movzwl %ax, %eax;movl %eax, (%esp);movl $, (%esp);calll  <ExAllocatePool>": 1,
                "movl -(%ebp), %edx;cmpw $, (%edx);je  <IoSetDeviceInterfaceState+>;movw $, (%ebx);addl $, %ecx": 1,
                "movl $, %edi;testl %eax, %eax;je  <IoSetDeviceInterfaceState+>;movl $, (%esp);movl $, (%esp)": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);jmp  <IoSetDeviceInterfaceState+>;movl $, (%esp)": 1,
                "movw $, -(%ebp);movl $, -(%ebp);jmp  <IoSetDeviceInterfaceState+>;movl $, (%esp);leal -(%ebp), %edi": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <IoGetDmaAdapter+>": 12,
                "jmp  <IoSetDeviceInterfaceState+>;leal -(%ebp), %eax;movl %eax, -(%ebp);movl $, %ecx;movl $, %eax": 1,
                "movl %eax, -(%ebp);movl $, %ecx;movl $, %eax;movl -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 2,
                "subl $, %esp;movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp)": 2,
                "movl $, (%esp);calll  <RtlQueryRegistryValues>;subl $, %esp;movl %eax, %edi;movl -(%ebp), %eax": 1,
                "calll  <RtlQueryRegistryValues>;subl $, %esp;movl %eax, %edi;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);calll  <RtlQueryRegistryValues>": 2,
                "movw $, -(%ebp);movw $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 2,
                "movw $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl %ebx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 2,
                "cmpw $, -(%edx);je  <IoSetDeviceInterfaceState+>;movl %edx, %eax;subl $, %eax;cmpw $, -(%eax)": 1,
                "subl %eax, %edx;andl $-, %edx;jmp  <IoSetDeviceInterfaceState+>;movzwl (%ebx), %edx;movl (%ebx), %eax": 1,
                "movzwl (%ebx), %edx;movl (%ebx), %eax;movl (%ebx), %ebx;movl %eax, %ecx;movl %ebx, -(%ebp)": 1,
                "movl (%ebx), %ebx;movl %eax, %ecx;movl %ebx, -(%ebp);subl %edx, %ecx;movw %cx, -(%ebp)": 1,
                "movl %eax, (%esp);movl %edi, (%esp);calll  <NtMapViewOfSection+>;subl $, %esp;movl %eax, %ebx": 1,
                "subl $, %esp;movl (%ebp), %ebx;movzbl (%ebp), %eax;movb %al, -(%ebp);calll *-": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll  <wcsrchr>;leal (%eax), %esi;testl %eax, %eax": 1,
                "movl (%ebx), %esi;movl %esi, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlInitUnicodeString>": 1,
                "subl $, %esp;movl -(%ebp), %eax;testb $, (%eax);je  <IoSetDeviceInterfaceState+>;movl $, (%esp)": 1,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, %esi;jmp  <IoSetDeviceInterfaceState+>;leal -(%ebp), %esi": 1,
                "testl %ebx, %ebx;je  <IoSetDeviceInterfaceState+>;movl $, %edx;movl (%ebx), %eax;orl $, (%eax)": 1,
                "cmpl $, (%ebx);je  <IoSetDeviceInterfaceState+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %fs:, %edx;movl (%edx), %edx;movl (%edx), %ecx;cmpl %ecx, -;jne  <IoSetDeviceInterfaceState+>": 1,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, %esi": 1,
                "pushl %ebx;subl $, %esp;movl $, %edx;movl $, %ecx;calll - <ExfInterlockedRemoveHeadList>": 2,
                "movl (%ebx), %edx;movl %edx, (%esp);movl %eax, (%esp);calll *(%ebx);subl $, %esp": 2,
                "movl $, -(%ebp);testl %ebx, %ebx;jne  <IoSetDeviceInterfaceState+>;movl , %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;movw $, (%eax);movl -(%ebp), %edx;movl $, (%edx);leal (%edx), %eax": 1,
                "movl %eax, (%edx);movl $, %eax;movl $, (%edx,%eax,);addl $, %eax;cmpl $, %eax": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %esi;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "subl $, %esp;movl %eax, %esi;movl %eax, -(%ebp);testl %eax, %eax;jne  <IoSetDeviceInterfaceState+>": 1,
                "movl %ecx, (%esp);calll  <ObInsertObject>;subl $, %esp;cmpl $, %eax;jne  <IoSetDeviceInterfaceState+>": 1,
                "movl %eax, %esi;jmp  <IoSetDeviceInterfaceState+>;movl %eax, %esi;testl %eax, %eax;js  <IoSetDeviceInterfaceState+>": 1,
                "calll  <ObMakeTemporaryObject>;subl $, %esp;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;jmp  <IoSetDeviceInterfaceState+>": 2,
                "jmp  <IoSetDeviceInterfaceState+>;movl -(%ebp), %eax;movl $, (%eax);cmpl $, (%ebp);je  <IoSetDeviceInterfaceState+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl -(%ebp), %eax;movl $, (%eax)": 1,
                "calll  <DbgPrint>;movl -(%ebp), %eax;movl $, (%eax);movl %eax, (%esp);calll  <ObMakeTemporaryObject>": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;je  <IoSetDeviceInterfaceState+>;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %esi;movl %esi, (%esp);calll  <RtlAppendUnicodeToString>": 1,
                "movl %eax, (%esp);leal -(%ebp), %esi;movl %esi, (%esp);calll  <RtlAppendUnicodeToString>;subl $, %esp": 1,
                "jmp - <IoSetDeviceInterfaceState+>;movl %ebx, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl %ebx, (%esp);calll  <KeSetEvent>;subl $, %esp;jmp  <IoSetDeviceInterfaceState+>;movl $, (%esp)": 1,
                "jns  <IoSetDeviceInterfaceState+>;movl -(%ebp), %eax;testl %eax, %eax;je  <IoSetDeviceInterfaceState+>;movl %eax, (%esp)": 1,
                "subl $, %esp;jmp  <IoSetDeviceInterfaceState+>;leal -(%ebp), %edx;leal -(%ebp), %ecx;calll - <IoSetDeviceInterfaceState+>": 1,
                "movl %ebx, %ecx;calll - <IoSetDeviceInterfaceState+>;calll - <InbvSolidColorFill+>;movl $, (%esp);movl (%esi), %eax": 1,
                "movl %eax, (%esp);calll  <wcsrchr>;movl %eax, %esi;testl %eax, %eax;je  <IoSetDeviceInterfaceState+>": 1,
                "je  <IoSetDeviceInterfaceState+>;movzwl -(%ebp), %eax;movw %ax, -(%ebp);movl %esi, (%esp);calll  <wcslen>": 1,
                "calll  <RtlEqualUnicodeString>;subl $, %esp;testb %al, %al;jne  <IoSetDeviceInterfaceState+>;movl (%esi), %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;int $;jmp  <IoSetDeviceInterfaceState+>": 1,
                "movl %eax, (%esp);calll  <IoSynchronousInvalidateDeviceRelations+>;movl %eax, %esi;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>": 1,
                "movl %eax, (%esp);calll  <IoGetDmaAdapter+>;testl %eax, %eax;js  <IoSetDeviceInterfaceState+>;movl $, -(%ebp)": 1,
                "movl %ebx, (%esp);leal -(%ebp), %edx;movl -(%ebp), %ecx;calll - <IoSetDeviceInterfaceState+>;subl $, %esp": 1,
                "calll  <IoGetDmaAdapter+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;jmp  <IoSetDeviceInterfaceState+>;movl -(%ebp), %eax": 1,
                "calll  <IoGetDmaAdapter+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;jmp  <IoSetDeviceInterfaceState+>;movl $, (%esp)": 1,
                "cmpw $-, %ax;jne  <IoSetDeviceInterfaceState+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, ;testl %eax, %eax;jne  <IoSetDeviceInterfaceState+>": 1,
                "movl , %eax;leal (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %esi;cmpl %esi, %edx": 1,
                "leal (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %esi;cmpl %esi, %edx;je  <IoSetDeviceInterfaceState+>": 1,
                "je  <IoSetDeviceInterfaceState+>;movl %eax, %edi;movl $, %edx;testb $, %al;je  <IoSetDeviceInterfaceState+>": 1,
                "movl %eax, (%esp);calll  <IoGetDmaAdapter+>;subl $, %esp;movw %ax, (%ebx);movzwl -, %eax": 1,
                "cmpl %eax, %edi;jb  <IoSetDeviceInterfaceState+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %edx, (%ebx);movl %eax, (%ebx);movl %ebx, (%edx);movl %ebx, (%eax);movl (%esi), %esi": 1,
                "movl (%eax), %ebx;cmpl %ebx, %eax;je  <IoSetDeviceInterfaceState+>;movl (%ebx), %eax;movl (%eax), %eax": 1,
                "je  <IoSetDeviceInterfaceState+>;movl (%ebx), %eax;movl (%eax), %eax;movl %eax, (%esp);calll - <IoSetDeviceInterfaceState+>": 1,
                "jns  <IoSetDeviceInterfaceState+>;leal -(%ebp), %edx;movl %esi, %ecx;calll - <IoSetDeviceInterfaceState+>;testl %eax, %eax": 1,
                "shrw %ax;movzwl %ax, %eax;leal (%ebx,%eax,), %ebx;movl %ebx, %eax;subl -(%ebp), %eax": 1,
                "movl $, (%esp);calll  <ExAllocatePoolWithTag>;subl $, %esp;testl %eax, %eax;je  <IoRegisterDriverReinitialization+>": 1,
                "je  <IoAllocateDriverObjectExtension+>;movl %edi, %edx;jmp  <IoAllocateDriverObjectExtension+>;cmpl %ebx, (%edx);je  <IoAllocateDriverObjectExtension+>": 1,
                "testl %edx, %edx;jne - <IoAllocateDriverObjectExtension+>;jmp  <IoAllocateDriverObjectExtension+>;movl $, %eax;nop": 1,
                "movzbl %al, %ecx;calll *-;movl $, (%esp);movl %esi, (%esp);calll  <ExFreePoolWithTag>": 1,
                "calll *-;leal (%ebx), %eax;nop;jmp  <IoGetDriverObjectExtension+>;movzbl %al, %ecx": 1,
                "testb %bl, %bl;je  <IoGetDriverObjectExtension+>;movl -(%ebp), %eax;testl %eax, %eax;je  <IoGetDriverObjectExtension+>": 1,
                "je  <IoGetDriverObjectExtension+>;movl %eax, (%esp);calll  <ExFreePool>;subl $, %esp;movl $, -": 1,
                "subl $, %esp;calll *-;cmpb $, %al;jbe  <IoGetDriverObjectExtension+>;calll *-": 1,
                "shrl $, %ecx;movl $, %eax;rep  stosl %eax, %es:(%edi);testb $, %dl;je  <IoGetDriverObjectExtension+>": 1,
                "movl %eax, (%esi);movl %esi, %edx;subl %edi, %edx;movl %edx, -(%ebp);addl $, %edx": 1,
                "cmpw $, -(%edx);je  <IoGetDriverObjectExtension+>;cmpl %ecx, %eax;je  <IoGetDriverObjectExtension+>;movl $, %edx": 1,
                "leal (%ebx), %ecx;movl %ecx, -(%ebp);addl %ecx, %edi;movl -(%ebp), %eax;subl %ecx, %eax": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll  <ObQueryNameString>;subl $, %esp": 1,
                "movl $, %eax;subw -(%ebp), %ax;movl -(%ebp), %ecx;movw %ax, (%ecx);jmp  <IoGetDriverObjectExtension+>": 1,
                "movw %ax, (%ecx);jmp  <IoGetDriverObjectExtension+>;movl -(%ebp), %eax;movw $, (%eax);movl $, (%eax)": 1,
                "movl -(%ebp), %ecx;subl -(%ebp), %ecx;movl %ecx, -(%ebp);movl -(%ebp), %ecx;addl -(%ebp), %ecx": 1,
                "addl %ebx, %edi;movl -(%ebp), %edx;movl %edx, (%esp);addl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "addl -(%ebp), %ebx;addl -(%ebp), %ebx;movw %bx, (%esi);addl $, %ebx;leal (%ebx), %eax": 1,
                "addl -(%ebp), %ebx;movw %bx, (%esi);addl $, %ebx;leal (%ebx), %eax;movw %ax, (%esi)": 1,
                "movl , %eax;movl %eax, (%esp);calll  <NtRequestPort>;subl $, %esp;testl %eax, %eax": 1,
                "jns  <IoGetDriverObjectExtension+>;movl %esi, %ebx;movl -(%ebp), %edi;leal (%edi), %edx;movl $, (%esp)": 1,
                "movl (%eax), %ecx;calll  <ObfDereferenceObject>;movl -(%ebp), %edx;movswl (%edx), %eax;subl $, %eax": 1,
                "cmpw $, %ax;jne  <IoAllocateErrorLogEntry+>;movl (%esi), %eax;movl %eax, -(%ebp);movzbl -(%ebp), %edi": 1,
                "jmp  <IoAllocateErrorLogEntry+>;movzbl -(%ebp), %edi;movl $, (%esp);leal (%edi), %eax;movl %eax, (%esp)": 1,
                "testl %eax, %eax;je - <IoAllocateErrorLogEntry+>;movl %esi, -(%ebp);movl $, -(%ebp);jmp - <IoAllocateErrorLogEntry+>": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx;leal -(%ebx), %esi": 1,
                "movl %esi, -(%ebp);movl (%ebp), %ebx;leal -(%ebx), %esi;leal -(%ebx), %eax;movl %eax, (%esp)": 1,
                "movl $, %ecx;calll *-;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp": 2,
                "movl (%ebp), %edx;movl (%edx), %edx;testb $, %dh;je  <IoSetThreadHardErrorMode+>;orb $, %ah": 1,
                "testb $, (%ebp);je  <IoSetThreadHardErrorMode+>;movb $, -(%ebp);movl %esi, %eax;andl $, %eax": 1,
                "movl $, -(%ebp);movl , %eax;movl -, %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 22,
                "movl , %eax;movl -, %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl $, -(%ebp)": 24,
                "jmp - <IoSetThreadHardErrorMode+>;andl $, %esi;je - <IoSetThreadHardErrorMode+>;jmp - <IoSetThreadHardErrorMode+>;movl -(%ebp), %ebx": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx;testb $, (%edx);jne  <IoSetThreadHardErrorMode+>": 1,
                "movl (%eax), %eax;addl $, %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 47,
                "calll - <IoGetAttachedDevice>;subl $, %esp;jmp  <IoSetThreadHardErrorMode+>;movl (%ebx), %eax;testl %ebx, %ebx": 1,
                "jmp  <IoSetThreadHardErrorMode+>;movl $, -(%ebp);cmpl $, %edi;je  <IoSetThreadHardErrorMode+>;movl %ebx, %ecx": 1,
                "je  <IoSetThreadHardErrorMode+>;movl %ebx, %ecx;calll  <ObfReferenceObject>;testb $, (%ebx);je  <IoSetThreadHardErrorMode+>": 1,
                "movb %al, (%esi);leal -(%ebp), %eax;movl %eax, (%esi);cmpb $, -(%ebp);jne  <IoSetThreadHardErrorMode+>": 1,
                "movl %ecx, (%esi);leal (%eax), %edx;movl %edx, (%esi);movl -(%ebp), %edx;movl %edx, (%ecx)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);jmp  <IoSetThreadHardErrorMode+>;cmpl $, -(%ebp);jne  <IoSetThreadHardErrorMode+>": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %edx": 1,
                "jne  <IoSetThreadHardErrorMode+>;jmp  <IoSetThreadHardErrorMode+>;movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "jmp - <IoSetThreadHardErrorMode+>;movl -(%ebp), %eax;movl %eax, %fs:;nop;leal (%esi), %esi": 2,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;je  <IoSetThreadHardErrorMode+>": 2,
                "cmpl $, %eax;jne  <IoSetThreadHardErrorMode+>;movl $, (%esp);movl %ebx, (%esp);calll  <ExFreePoolWithTag>": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %edi;subl (%ebp), %edi;addl (%ebx), %edi;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <memmove>;movl -(%ebp), %eax;andl $-, %eax": 1,
                "calll  <ExFreePoolWithTag>;subl $, %esp;jmp  <IoSetThreadHardErrorMode+>;movl $, %esi;jmp  <IoSetThreadHardErrorMode+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);subl %esi, %edi;leal (%edi), %eax": 1,
                "movl $, (%esp);calll  <DbgPrint>;testl %eax, %eax;je  <IoSetThreadHardErrorMode+>;movl $, (%esp)": 2,
                "movl %edx, (%ebx);testb $, %al;je  <IoSetThreadHardErrorMode+>;lock;addl $, (%ebx)": 1,
                "subl $, (%ebx);leal (%ebx), %eax;movl %eax, (%esp);calll  <KeClearEvent>;subl $, %esp": 3,
                "movl -(%ebp), %edx;movsbl (%edx), %eax;movl %eax, (%esp);calll  <IoAllocateIrp>;subl $, %esp": 10,
                "testl %eax, %eax;je  <IoSetThreadHardErrorMode+>;leal -(%ebp), %eax;movl %eax, (%esi);leal (%esi), %eax": 2,
                "movl $, (%esi);movl $, (%esi);cmpb $, (%esi);jg  <IoSetThreadHardErrorMode+>;movl $, (%esp)": 1,
                "calll  <IofCallDriver>;cmpl $, %eax;jne  <IoSetThreadHardErrorMode+>;movl $, (%esp);movl $, (%esp)": 2,
                "subl $, %esp;movl $, %ecx;calll *-;movl (%esi), %ecx;movl (%esi), %edx": 2,
                "movl (%ebx), %eax;testl %eax, %eax;je  <IoSetThreadHardErrorMode+>;testb $, (%ebx);je  <IoSetThreadHardErrorMode+>": 1,
                "jne  <IoSetThreadHardErrorMode+>;movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll - <IoAllocateController+>": 1,
                "movl $, (%ecx);testl %esi, %esi;je  <IoSetThreadHardErrorMode+>;cmpl $, (%esi);jne  <IoSetThreadHardErrorMode+>": 1,
                "testb %dl, %dl;je  <IoSetThreadHardErrorMode+>;movl (%ebp), %eax;cmpw $, (%eax);je  <IoSetThreadHardErrorMode+>": 1,
                "testl %eax, %eax;je  <IoSetThreadHardErrorMode+>;movb $, -(%ebp);testb $, (%eax);je  <IoSetThreadHardErrorMode+>": 1,
                "testl %eax, %eax;je  <IoSetThreadHardErrorMode+>;cmpb $, -(%ebp);je  <IoSetThreadHardErrorMode+>;testb %dl, %dl": 1,
                "je  <IoSetThreadHardErrorMode+>;cmpb $, -(%ebp);je  <IoSetThreadHardErrorMode+>;testb %dl, %dl;jne  <IoSetThreadHardErrorMode+>": 1,
                "cmpb $, -(%ebp);je  <IoSetThreadHardErrorMode+>;testb %dl, %dl;jne  <IoSetThreadHardErrorMode+>;movl (%ebp), %eax": 1,
                "testb %dl, %dl;jne  <IoSetThreadHardErrorMode+>;movl (%ebp), %eax;cmpw $, (%eax);jne  <IoSetThreadHardErrorMode+>": 1,
                "jne  <IoSetThreadHardErrorMode+>;movl (%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);movl %edx, (%esp)": 1,
                "movl (%edx), %eax;movl %eax, (%esp);calll  <SeAccessCheck>;subl $, %esp;movb %al, -(%ebp)": 2,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <SeFreePrivileges>;subl $, %esp;cmpb $, -(%ebp)": 1,
                "calll  <SeOpenObjectAuditAlarm>;subl $, %esp;jmp  <IoSetThreadHardErrorMode+>;movl (%ebp), %edx;movl (%edx), %eax": 1,
                "je  <IoSetThreadHardErrorMode+>;movb $, -(%ebp);cmpl $, %edx;jne  <IoSetThreadHardErrorMode+>;testb $, %al": 1,
                "calll  <DbgPrint>;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <IoAllocateController+>": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll  <wcsstr>;testl %eax, %eax": 2,
                "testl %eax, %eax;je  <IoSetThreadHardErrorMode+>;movb $, -(%ebp);cmpb $, -(%ebp);jne  <IoSetThreadHardErrorMode+>": 1,
                "movb $, -(%ebp);testl %eax, %eax;je  <IoSetThreadHardErrorMode+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <DbgPrint>;movb $, -(%ebp);jmp  <IoSetThreadHardErrorMode+>;movb $, -(%ebp)": 1,
                "movb $, -(%ebp);movl (%esi), %eax;testl %eax, %eax;je  <IoSetThreadHardErrorMode+>;testb $, (%eax)": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp);movl (%ecx), %eax": 1,
                "movb %al, -(%edx);jmp  <IoSetThreadHardErrorMode+>;movl -(%ebp), %ecx;movb $, -(%ecx);movl (%esi), %eax": 1,
                "movl -(%ebp), %ecx;movb $, -(%ecx);movl (%esi), %eax;movl %eax, -(%ecx);jmp  <IoSetThreadHardErrorMode+>": 1,
                "movl -(%ebp), %ecx;movl %eax, -(%ecx);movzwl (%esi), %eax;movw %ax, -(%ecx);movzwl (%esi), %eax": 1,
                "movl %eax, -(%ecx);movzwl (%esi), %eax;movw %ax, -(%ecx);movzwl (%esi), %eax;movw %ax, -(%ecx)": 1,
                "movw %ax, -(%ecx);movzwl (%esi), %eax;movw %ax, -(%ecx);leal -(%ebp), %eax;movl %eax, -(%ecx)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <IoReleaseVpbSpinLock+>;subl $, %esp;movl -(%ebp), %eax": 3,
                "addl $, %eax;movl %eax, (%esp);calll  <KeInitializeEvent>;subl $, %esp;testb $, (%esi)": 1,
                "movl -(%ebp), %eax;orl $, (%eax);jmp  <IoSetThreadHardErrorMode+>;movl (%esi), %edx;movl %edx, %edi": 1,
                "movl %edx, %edi;movl $, -(%ebp);testb $, %dl;je  <IoSetThreadHardErrorMode+>;movb $, (%edx)": 1,
                "testb $, -(%ebp);je  <IoSetThreadHardErrorMode+>;movw $, (%edi);addl $, %edi;testb $, -(%ebp)": 1,
                "leal (%edx), %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, (%edx);movl $, (%edx)": 1,
                "movl %eax, (%edx);movl $, (%edx);movl -(%ebp), %eax;movw $, (%eax);movl -(%ebp), %eax": 1,
                "movw $, (%eax);movl -(%ebp), %eax;movl (%esi), %edx;movl %edx, (%eax);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl %edx, (%eax);cmpb $, -(%ebp);je  <IoSetThreadHardErrorMode+>;orl $, (%eax)": 1,
                "jne  <IoSetThreadHardErrorMode+>;orl $, (%eax);movl %eax, (%ebx);movl -(%ebp), %ecx;movl %eax, -(%ecx)": 1,
                "movl %eax, (%esi);movl $, %ecx;calll *-;movb %al, -(%ebp);leal (%ebx), %edi": 1,
                "subl $, %esp;movl -(%ebp), %eax;movl %eax, -(%ebp);jmp  <IoSetThreadHardErrorMode+>;cmpb $, (%ebx)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl $, (%ebx);je  <IoSetThreadHardErrorMode+>": 1,
                "cmpl $, (%ebx);je  <IoSetThreadHardErrorMode+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebx), %eax;movl (%ebx), %ecx;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %edi, (%ebx);movl (%ebx), %eax;andl $, %eax;cmpl $, %eax;jne  <IoSetThreadHardErrorMode+>": 1,
                "movl (%ebx), %eax;andl $, %eax;cmpl $, %eax;jne  <IoSetThreadHardErrorMode+>;movl (%ebx), %eax": 1,
                "movl %eax, (%esi);movl -(%ebp), %eax;testl %eax, %eax;jns  <IoSetThreadHardErrorMode+>;movl -(%ebp), %eax": 1,
                "testl %eax, %eax;jns  <IoSetThreadHardErrorMode+>;movl -(%ebp), %eax;cmpw $, (%eax);je  <IoSetThreadHardErrorMode+>": 1,
                "jns  <IoSetThreadHardErrorMode+>;movl -(%ebp), %eax;cmpw $, (%eax);je  <IoSetThreadHardErrorMode+>;movl $, (%esp)": 1,
                "testl %eax, %eax;je  <IoSetThreadHardErrorMode+>;lock;addl $, (%eax);cmpb $, -(%ebp)": 1,
                "je  <IoSetThreadHardErrorMode+>;cmpl $, %eax;je  <IoSetThreadHardErrorMode+>;cmpl $, %eax;je  <IoSetThreadHardErrorMode+>": 1,
                "je  <IoSetThreadHardErrorMode+>;cmpl $, %eax;je  <IoSetThreadHardErrorMode+>;cmpl $, %eax;jne  <IoSetThreadHardErrorMode+>": 1,
                "orl $, (%ecx);calll  <ObfReferenceObject>;movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);movl -(%ebp), %eax;movl %eax, (%esi);movl $, (%esi)": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;js  <IoSetThreadHardErrorMode+>;movl -(%ebp), %eax": 1,
                "movl %ebx, (%esp);calll  <ExFreePoolWithTag>;subl $, %esp;jmp  <IoSetThreadHardErrorMode+>;movl $, -(%ebp)": 1,
                "movl %eax, (%esp);calll  <IoQueryFileInformation>;subl $, %esp;movl %eax, -(%ebp);cmpl $, %eax": 1,
                "jmp  <IoSetThreadHardErrorMode+>;movl $, %eax;jmp  <IoSetThreadHardErrorMode+>;movl (%ebp), %eax;addl $, %eax": 1,
                "movl (%ebp), %ebx;movzbl (%ebp), %edi;testl %ebx, %ebx;je  <IoSetThreadHardErrorMode+>;cmpl $, (%ebx)": 1,
                "movl %edx, (%esp);movl %eax, (%esp);calll - <IoSetThreadHardErrorMode+>;subl $, %esp;jmp  <IoSetThreadHardErrorMode+>": 1,
                "calll - <ProbeForWrite>;subl $, %esp;jmp  <IoSetThreadHardErrorMode+>;nop;movl $, %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, %fs:;jmp  <IoSetThreadHardErrorMode+>;leal (%esi), %esi": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;testb $-, (%eax);je  <IoSetThreadHardErrorMode+>": 1,
                "andl $, %eax;je  <IoCreateFile+>;testl $, (%ebp);jne  <IoCreateFile+>;movl $, (%esp)": 1,
                "je  <IoCreateFile+>;movl (%ebp), %ecx;cmpl $, (%ecx);ja  <IoCreateFile+>;cmpl $, (%ecx)": 1,
                "movl (%ebp), %eax;subl $, %eax;cmpl $, %eax;ja  <IoCreateFile+>;testl $, (%ebp)": 1,
                "jne  <IoCreateFile+>;cmpl $, (%ebp);nop;je  <IoCreateFile+>;testb $, (%ebp)": 1,
                "movb $, (%eax);addl $, %edi;movb $, %dl;testl $, %edi;je  <IoCreateFile+>": 1,
                "je  <IoCreateFile+>;movw $, (%edi);addl $, %edi;subl $, %edx;movl %edx, %ecx": 1,
                "shrl $, %ecx;movl $, %eax;rep  stosl %eax, %es:(%edi);testb $, %dl;je  <IoCreateFile+>": 1,
                "cmpb $, -(%ebp);jne  <IoCreateFile+>;jmp  <IoCreateFile+>;movl -(%ebp), %eax;cmpl %eax, (%ebp)": 1,
                "movl (%ecx), %edx;movl %eax, (%ecx);movl %edx, (%ecx);cmpl $, (%ebp);je  <IoCreateFile+>": 1,
                "jns  <IoCreateFile+>;movl $, (%esp);calll  <ExRaiseStatus>;movl $, %esi;movl $, %edi": 1,
                "movl %ecx, (%esp);calll - <ProbeForRead>;subl $, %esp;movl $, (%esp);movl (%ebp), %eax": 1,
                "movl -(%ebp), %edx;movl %eax, (%edx);movl (%ebp), %ecx;movl %ecx, (%edx);movl %ecx, (%esp)": 1,
                "jns  <IoCreateFile+>;movl %eax, %ebx;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ecx), %eax;testl %eax, %eax;je  <IoCreateFile+>;movl %eax, (%esp);calll  <ExFreePool>": 1,
                "testl %eax, %eax;je  <IoCreateFile+>;movl %eax, (%esp);calll  <ExFreePool>;subl $, %esp": 2,
                "movl (%edx), %esi;movl (%edx), %edi;jmp  <IoCreateFile+>;movl $, %esi;movl $, %edi": 1,
                "cmpl $, (%ebp);je  <IoCreateFile+>;movl $, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp)": 1,
                "calll  <ExFreePool>;subl $, %esp;movl $, %ebx;jmp  <IoCreateFile+>;movl (%ebp), %edx": 1,
                "jns  <IoCreateFile+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 1,
                "movl $, (%esp);calll  <DbgPrint>;movl -(%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl $, (%esp);movsbl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll  <ExFreePool>;subl $, %esp;testl %ebx, %ebx;js  <IoCreateFile+>": 1,
                "calll - <ZwClose>;subl $, %esp;movl $, %ebx;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);jmp  <IoCreateFile+>;nop;jmp - <IoCreateFile+>": 1,
                "nop;leal (%esi), %esi;jmp - <IoCreateFile+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "testl %edi, %edi;je  <IoCreateStreamFileObjectEx+>;movl (%edi), %ebx;lock;addl $, (%ebx)": 1,
                "movl -(%ebp), %eax;movl %ebx, (%eax);movw $, (%eax);movl -(%ebp), %eax;movw $, (%eax)": 2,
                "movl %eax, (%esp);calll  <ObInsertObject>;subl $, %esp;testl %eax, %eax;jns  <IoCreateStreamFileObjectEx+>": 1,
                "jns  <IoCreateStreamFileObjectEx+>;movl %eax, (%esp);calll  <ExRaiseStatus>;movl -(%ebp), %eax;orl $, (%eax)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <IoCreateStreamFileObjectEx>;subl $, %esp;leave": 1,
                "je  <IoCreateStreamFileObjectLite+>;movl (%edi), %ebx;lock;addl $, (%ebx);movl $, -(%ebp)": 1,
                "movl %eax, (%esp);calll  <KeInitializeEvent>;subl $, %esp;movl -(%ebp), %eax;movl -(%eax), %eax": 1,
                "movl -(%eax), %eax;movl %eax, (%esp);calll  <ObIsKernelHandle+>;subl $, %esp;movl -(%ebp), %eax": 1,
                "subl $, %esp;movl (%ebx), %eax;testl %eax, %eax;je  <IoCreateStreamFileObjectLite+>;movl (%ebx), %eax": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movzbl (%eax), %eax": 2,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl %edx, (%esp);movl (%ebp), %eax": 1,
                "cmpb $, %al;jbe  <IoUpdateShareAccess+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "testb $-, (%esi);jne  <IoUpdateShareAccess+>;cmpw $, (%esi);jne  <IoUpdateShareAccess+>;cmpb $, (%esi)": 1,
                "testl $, %edi;setne %dl;testl $, %edi;setne -(%ebp);shrl $, %edi": 1,
                "setne %dl;testl $, %edi;setne -(%ebp);shrl $, %edi;andl $, %edi": 1,
                "movb %dl, (%ebx);movzbl -(%ebp), %ecx;movb %cl, (%ebx);movl %edi, %eax;movb %al, (%ebx)": 1,
                "testb %cl, %cl;je  <IoCheckShareAccess+>;movzbl (%ebp), %eax;andl $, %eax;movb %al, -(%ebp)": 1,
                "andl $, %eax;movb %al, -(%ebp);movl (%ebp), %eax;shrl %eax;andl $, %eax": 1,
                "movb %al, (%ebx);movzbl -(%ebp), %ecx;movb %cl, (%ebx);movl %eax, %ecx;orb %dl, %cl": 1,
                "movzbl -(%ebp), %eax;movl %eax, (%esi);movzbl -(%ebp), %eax;movl %eax, (%esi);andl $, %edi": 1,
                "movl %eax, (%ebx);movl %edi, (%ebx);leal (%ebx), %eax;movl %eax, (%ebx);movl $, (%ebx)": 1,
                "movl %esi, (%ebx);movb $, (%ebx);movl $, (%ebx);cmpb $, (%ebx);jg  <IoCancelFileOpen+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebx), %eax;movb $, -(%eax)": 6,
                "movzbl (%ebp), %ecx;movl (%eax), %edx;movl %edx, %ebx;shrl $, %ebx;andl $, %ebx": 1,
                "testb %cl, %cl;jne  <IoSetFileOrigin+>;testb %bl, %bl;je  <IoSetFileOrigin+>;andl $, %edx": 1,
                "testb %bl, %bl;je  <IoSetFileOrigin+>;andl $, %edx;movl %edx, (%eax);movl $, %eax": 1,
                "subl $, %esp;calll *-;cmpb $, %al;jbe  <NtCreateFile+>;calll *-": 3,
                "movl %edx, %fs:;jmp  <NtCreateFile+>;nop;leal (%esi), %esi;jmp - <NtCreateFile+>": 2,
                "movl -(%ebp), %eax;movl %eax, %fs:;nop;leal (%esi), %esi;jmp  <NtCreateFile+>": 2,
                "movl %eax, -(%ebp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 3,
                "jbe  <NtOpenFile+>;calll *-;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "ja  <NtOpenFile+>;cmpl -, %ecx;jb  <NtOpenFile+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %ecx": 1,
                "movl (%ecx), %eax;movl (%ecx), %edx;movl %eax, (%ecx);movl %edx, (%ecx);jmp  <NtOpenFile+>": 1,
                "js  <NtOpenFile+>;movl $, %ecx;calll *-;movb %al, -(%ebp);calll  <PsGetCurrentThread>": 1,
                "movb $, -(%ebp);leal -(%esi), %eax;movl -(%ebp), %ecx;cmpl %ecx, (%esi);jne  <NtOpenFile+>": 1,
                "je  <NtOpenFile+>;movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %esi;movl , %eax": 1,
                "jne  <NtOpenFile+>;jmp  <NtOpenFile+>;cmpl %ecx, (%edx);je  <NtOpenFile+>;movl (%edx), %edx": 1,
                "cmpl %edx, %ebx;jne - <NtOpenFile+>;jmp  <NtOpenFile+>;movl (%ebp), %ecx;movl $, (%ecx)": 1,
                "leal (%esi), %esi;jmp - <NtOpenFile+>;movl -(%ebp), %eax;movl %eax, %fs:;movl -(%ebp), %ecx": 1,
                "movb $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);cmpb $, -;je  <NtDeleteFile+>": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%ebx);cmpl $, (%ebp);je  <NtDeleteFile+>": 1,
                "leal (%esi), %esi;jmp  <NtDeleteFile+>;movl $, -(%ebp);jmp  <NtDeleteFile+>;movl $, -(%ebp)": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll *(%ebx);subl $, %esp": 2,
                "addl $, (%ecx);movzwl (%ecx), %ebx;cmpw %bx, (%ecx);jb  <NtDeleteFile+>;addl $, (%ecx)": 1,
                "movzwl (%ecx), %eax;cmpw %ax, (%ecx);jb  <NtDeleteFile+>;addl $, (%ecx);movl %edx, (%esp)": 1,
                "calll  <IoFreeIrp>;subl $, %esp;jmp  <NtDeleteFile+>;movl %edx, (%esp);calll - <NtDeleteFile+>": 1,
                "leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <IoSetCompletionRoutineEx+>;movl -(%ebp), %eax;movl (%eax), %eax": 3,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;jns  <IoSetCompletionRoutineEx+>;jmp  <IoSetCompletionRoutineEx+>": 3,
                "movl (%eax), %eax;movzbl (%eax), %ebx;calll *-;cmpb $, %al;jbe  <IoSetCompletionRoutineEx+>": 1,
                "movl -(%ebp), %eax;movl %eax, %fs:;movsbl -(%ebp), %ebx;movl $, (%esp);leal -(%ebp), %eax": 3,
                "movl %eax, %fs:;movsbl -(%ebp), %ebx;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 3,
                "subl $, %esp;cmpl $, %eax;je  <IoSetCompletionRoutineEx+>;cmpl $, %eax;jne  <IoSetCompletionRoutineEx+>": 1,
                "movl %eax, (%esp);calll - <ZwCreateEvent>;subl $, %esp;testl %eax, %eax;js  <IoSetCompletionRoutineEx+>": 1,
                "calll  <ObfDereferenceObject>;movl -(%ebp), %edx;movl (%ebp), %eax;movl %edx, (%eax);movl -(%ebp), %eax": 1,
                "calll - <IoSetCompletionRoutineEx+>;subl $, %esp;leave;retl $;nop": 1,
                "calll  <DbgPrint>;movl %esi, (%esp);movl %ebx, (%esp);movl $, (%esp);calll  <DbgPrint>": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);movl $, (%esp);calll  <DbgPrint>;movl (%ebx), %eax": 1,
                "calll  <IoFreeIrp>;subl $, %esp;testb $, (%esi);je  <IoCreateSynchronizationEvent+>;lock": 1,
                "calll  <KeSetEvent>;subl $, %esp;cmpl $, (%ebp);je  <IoCreateSynchronizationEvent+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;calll  <ObfDereferenceObject>;testl %edi, %edi;je  <IoCreateSynchronizationEvent+>;movl %edi, (%esp)": 1,
                "subl $, %esp;movl %esi, %ecx;calll  <ObfDereferenceObject>;leal -(%ebp), %esp;popl %ebx": 2,
                "calll  <DbgPrint>;movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movsbl %cl, %esi;movl %esi, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %esi, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <KeWaitForSingleObject>": 1,
                "movl %eax, -(%ebp);jmp  <IoCreateSynchronizationEvent+>;jmp - <IoCreateSynchronizationEvent+>;leal (%esi), %esi;leal (%edi), %edi": 1,
                "movb %al, -(%ebp);movl $, -(%ebp);calll *-;cmpb $, %al;jbe  <IoCreateSynchronizationEvent+>": 1,
                "movl %ecx, (%ebx);movl %esi, (%edi);movl %esi, (%edx);movzbl %al, %ecx;calll *-": 2,
                "calll *-;cmpb $, -;je  <IoCreateSynchronizationEvent+>;cmpl $, (%ebp);jne  <IoCreateSynchronizationEvent+>": 1,
                "cmpl $, (%ebp);jne  <IoCreateSynchronizationEvent+>;addl $, -;movl %fs:, %eax;movl (%eax), %eax": 2,
                "movl (%eax), %eax;movl (%eax), %eax;addl $, %eax;jmp  <IoCreateSynchronizationEvent+>;addl $, -": 1,
                "addl $, %eax;jmp  <IoCreateSynchronizationEvent+>;addl $, -;movl %fs:, %eax;movl (%eax), %eax": 1,
                "jmp  <IoCreateSynchronizationEvent+>;addl $, -;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);leal (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "calll *-;cmpb $, -(%ebp);jne  <IoCreateSynchronizationEvent+>;jmp  <IoCreateSynchronizationEvent+>;cmpb $, -(%ebp)": 1,
                "xchgl %edx, (%eax);movl (%eax), %edx;testl %edx, %edx;je  <IoCreateSynchronizationEvent+>;movl $, (%esp)": 1,
                "je  <IoCreateSynchronizationEvent+>;movl $, (%esp);movl $, (%esp);addl $, %eax;movl %eax, (%esp)": 1,
                "movl $, -(%ebp);movl %fs:, %eax;movl (%eax), %eax;movzbl (%eax), %eax;movb %al, -(%ebp)": 5,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);movl $, (%esp);calll  <DbgPrint>;movl (%ebp), %eax": 2,
                "movl -(%ebp), %ecx;movl (%ecx), %eax;testl %eax, %eax;je  <IoCreateSynchronizationEvent+>;cmpl $, (%ebp)": 1,
                "jmp  <IoCreateSynchronizationEvent+>;movl -(%ebp), %eax;movl %eax, (%esp);calll  <KeClearEvent>;subl $, %esp": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;jne  <IoCreateSynchronizationEvent+>;movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl %edx, (%eax);movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl $, (%ecx);movl $, (%ecx);movl $, (%ecx);movl -(%ebp), %eax;movl %eax, (%ecx)": 1,
                "cmpb $, -(%ebp);sbbl %edx, %edx;addl $, %edx;movb %dl, -(%eax);movb $, -(%eax)": 1,
                "movl (%ebp), %ecx;movl %ecx, -(%eax);movl (%ebp), %edx;movl %edx, -(%eax);movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;movl %ecx, -(%eax);cmpl $, -(%ebp);ja  <IoCreateSynchronizationEvent+>;cmpl $, -(%ebp)": 1,
                "leal (%esi), %esi;jne  <IoCreateSynchronizationEvent+>;jmp  <IoCreateSynchronizationEvent+>;movl (%ebp), %eax;movl (%ebp), %edx": 1,
                "je  <IoCreateSynchronizationEvent+>;movl $, (%esp);movl %eax, (%esp);movl $, (%esp);calll  <ExAllocatePoolWithTag>": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);movl %eax, (%esp);calll  <memmove>;cmpl $, (%ebp)": 1,
                "calll  <memmove>;cmpl $, (%ebp);sbbl %eax, %eax;andl $-, %eax;addl $, %eax": 2,
                "movl -(%ebp), %edx;movl %eax, (%edx);movl (%ebp), %ecx;movl %ecx, (%edx);jmp  <IoCreateSynchronizationEvent+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <IoCreateSynchronizationEvent+>": 18,
                "nop;leal (%esi), %esi;jmp  <IoCreateSynchronizationEvent+>;cmpl $, (%ebp);je  <IoCreateSynchronizationEvent+>": 1,
                "je  <IoCreateSynchronizationEvent+>;cmpl $, (%ebp);je  <IoCreateSynchronizationEvent+>;movl $, (%esp);movl (%ebp), %edx": 1,
                "movl %eax, (%esp);calll  <memmove>;movl -(%ebp), %eax;movl $, (%eax);cmpl $, (%ebp)": 1,
                "calll  <ExRaiseStatus>;cmpl $, -(%ebp);setne %dl;movzbl %dl, %edx;movl %edx, (%esp)": 1,
                "leal (%esi), %esi;jmp  <IoCreateSynchronizationEvent+>;movl (%ebp), %ecx;movl -(%ebp), %edx;movl %ecx, (%edx)": 1,
                "movl %eax, (%esp);calll - <IoCreateSynchronizationEvent+>;subl $, %esp;movl %eax, %ebx;jmp  <IoCreateSynchronizationEvent+>": 1,
                "movl %eax, (%esp);calll  <KeInitializeEvent>;subl $, %esp;movb $, -(%ebp);movl %ebx, (%esp)": 2,
                "subl $, %esp;movl %eax, %edi;jmp  <IoCreateSynchronizationEvent+>;movl %ebx, (%eax);movb $, (%eax)": 1,
                "jne  <IoCreateSynchronizationEvent+>;jmp  <IoCreateSynchronizationEvent+>;orl $, %eax;movl %eax, (%esi);movl (%ebp), %eax": 1,
                "movl (%eax), %ecx;movl %ecx, (%esi);leal (%eax), %edi;movl %edi, (%esi);movl %edx, (%ecx)": 2,
                "cmpl $, %eax;jne  <IoCreateSynchronizationEvent+>;leal (%ebx), %edi;movl $, (%esp);movl (%ebx), %eax": 1,
                "jmp  <IoCreateSynchronizationEvent+>;cmpl $, %eax;jne  <IoCreateSynchronizationEvent+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, -(%eax);movl (%ebp), %edx;movl %edx, -(%eax);jmp - <IoCreateSynchronizationEvent+>": 2,
                "movl %ecx, (%esp);calll - <IoGetRelatedDeviceObject>;subl $, %esp;movl %eax, -(%ebp);movl $, (%esp)": 2,
                "movl %esi, (%ebx);movl (%esi), %eax;addl (%esi), %eax;movl %eax, (%ebx);movl (%ebp), %eax": 2,
                "je  <IoPageRead+>;cmpb $, (%eax);jg  <IoPageRead+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <IoCreateSynchronizationEvent+>;subl $, %esp;leave;retl $": 4,
                "movl (%ebp), %ebx;movl (%ebp), %edi;calll *-;cmpb $, %al;jbe  <IoSetInformation+>": 1,
                "movl %eax, (%esi);cmpb $, -(%ebp);jne  <IoSetInformation+>;jmp  <IoSetInformation+>;orl $, %eax": 1,
                "movl $, %eax;jmp - <IoSetInformation+>;leal -(%ebp), %eax;movl %eax, (%esi);movl $, %eax": 1,
                "calll *-;cmpb $, %al;jbe  <NtFsControlFile+>;calll *-;movzbl %al, %eax": 1,
                "movl (%eax), %eax;movl -(%ebp), %edx;movl %edx, %fs:;jmp  <NtFsControlFile+>;nop": 1,
                "testl %eax, %eax;jne  <NtFsControlFile+>;jmp  <NtFsControlFile+>;movl $, %edi;movl %edi, (%esp)": 1,
                "movl %eax, (%ebx);movb $, -(%ebp);movl %edi, (%ebx);movzbl -(%ebp), %ecx;movb %cl, (%ebx)": 1,
                "cmpb $, (%ebx);jg  <NtFsControlFile+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebx), %eax;movb $, -(%eax);movl -(%ebp), %edx;movl %edx, -(%eax);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;testb $, -;je  <NtNotifyChangeDirectoryFile+>;movl %fs:, %eax": 1,
                "movl %edx, (%esp);movl $, (%esp);calll  <DbgPrint>;movl (%ebp), %ecx;addl $, %ecx": 1,
                "movl (%ecx), %edx;movl %eax, (%ecx);movl %edx, (%ecx);cmpl $, (%ebp);je  <NtNotifyChangeDirectoryFile+>": 1,
                "movl -(%ebp), %eax;movl %eax, %fs:;jmp  <NtNotifyChangeDirectoryFile+>;movl %esi, %esi;leal (%edi), %edi": 1,
                "leal (%edi), %edi;jmp - <NtNotifyChangeDirectoryFile+>;movl -(%ebp), %eax;movl %eax, %fs:;cmpl $, (%ebp)": 1,
                "jmp - <NtNotifyChangeDirectoryFile+>;movl -(%ebp), %eax;movl %eax, %fs:;cmpl $, (%ebp);nop": 1,
                "addl $, %eax;movl %eax, (%esp);calll  <KeClearEvent>;subl $, %esp;movl -(%ebp), %eax": 2,
                "movl %ecx, (%ebx);calll  <PsGetCurrentThread>;movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);cmpb $, (%ebx);jg  <NtNotifyChangeDirectoryFile+>;movl $, (%esp)": 1,
                "movl $, %ebx;jmp  <NtNotifyChangeDirectoryFile+>;movl $, %ebx;movl %ebx, %eax;leal -(%ebp), %esp": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl -(%ebp), %edx;movl %edx, %fs:;jmp  <NtLockFile+>": 1,
                "calll - <IoGetRelatedDeviceObject>;subl $, %esp;movl %eax, -(%ebp);movl -(%ebp), %edx;movb $, -(%ebp)": 1,
                "calll  <KeClearEvent>;subl $, %esp;movl -(%ebp), %eax;movb $, (%eax);movl $, (%esp)": 1,
                "calll  <IoAllocateWorkItem+>;subl $, %esp;jmp  <NtLockFile+>;movzbl -(%ebp), %ecx;movb %cl, (%eax)": 1,
                "movb $, -(%edx);movb $, -(%edx);movl -(%ebp), %eax;movl %eax, -(%edx);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%edx);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jne  <NtLockFile+>;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "subl $, %esp;movl $, %eax;jmp  <NtLockFile+>;movl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "movb $, -(%ecx);cmpb $, -(%ebp);je  <NtLockFile+>;movl -(%ebp), %eax;orb $, -(%eax)": 1,
                "movl $, (%esp);movzbl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 4,
                "movl %edx, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "calll *-;cmpb $, %al;jbe  <NtQueryDirectoryFile+>;calll *-;movzbl %al, %eax": 1,
                "movl $, (%esp);calll  <DbgPrint>;movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl (%ecx), %eax;movl (%ecx), %edx;movl %eax, (%ecx);movl %edx, (%ecx);movl $, (%esp)": 5,
                "calll - <ExRaiseAccessViolation>;movl (%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %edx;movl %eax, %ebx": 1,
                "movl (%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %edx;movl %eax, %ebx;movl %edx, %edi": 1,
                "leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <NtQueryDirectoryFile+>;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <NtQueryDirectoryFile+>;movl -(%ebp), %eax;movl $, (%esp);movl %eax, (%esp)": 3,
                "movl (%eax), %eax;movl (%eax), %ebx;movl -(%ebp), %eax;movl %eax, %fs:;jmp  <NtQueryDirectoryFile+>": 2,
                "jne - <NtQueryDirectoryFile+>;lock;subl $, (%edx);movb $, -(%ebp);movl -(%ebp), %eax": 1,
                "jne  <NtQueryDirectoryFile+>;movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%edx);movl (%ebp), %eax;movl %eax, (%edx);movl $, (%edx);movl -(%ebp), %eax": 1,
                "testl %eax, %eax;jne  <NtQueryDirectoryFile+>;movl $, (%esp);calll  <ExRaiseStatus>;movl $, (%esp)": 1,
                "jmp  <NtQueryDirectoryFile+>;movl (%ebp), %edx;movl -(%ebp), %eax;movl %edx, (%eax);movl -(%ebp), %eax": 1,
                "cmpb $, -(%ebp);je  <NtQueryDirectoryFile+>;orb $, -(%eax);movl -(%ebp), %eax;orl $, (%eax)": 1,
                "je  <NtQueryInformationFile+>;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax;addl $, %eax": 1,
                "movl (%eax), %edx;movl (%eax), %eax;movl (%ebp), %edi;movl %eax, (%edi);movl %edx, (%edi)": 1,
                "movl $, %edx;xchgl %edx, (%eax);movl (%eax), %edx;testl %edx, %edx;je  <NtQueryInformationFile+>": 2,
                "movl %eax, (%esp);calll  <KeInitializeEvent>;subl $, %esp;movb $, -(%ebp);movl -(%ebp), %eax": 5,
                "jmp  <NtQueryInformationFile+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;nop": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, %fs:;jmp  <NtQueryInformationFile+>;leal (%esi), %esi": 1,
                "movl %ecx, (%edx);movzbl %al, %ecx;calll *-;cmpb $, -;je  <NtQueryInformationFile+>": 1,
                "movl (%eax), %eax;movl (%eax), %eax;lock;addl $, (%eax);jae  <NtQueryInformationFile+>": 1,
                "calll  <KeWaitForSingleObject>;subl $, %esp;cmpl $, %eax;je  <NtQueryInformationFile+>;cmpl $, %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp)": 2,
                "movl %eax, (%esp);movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp);calll  <IoCancelIrp+>": 2,
                "jmp  <NtQueryInformationFile+>;movl $, (%esp);movl $, (%esp);addl $, %eax;movl %eax, (%esp)": 1,
                "calll  <KeSetEvent>;subl $, %esp;jmp  <NtQueryInformationFile+>;movl $, -(%ebp);jmp  <NtQueryInformationFile+>": 1,
                "movl $, -(%ebp);jmp  <NtQueryInformationFile+>;movl $, -(%ebp);jmp  <NtQueryInformationFile+>;movl -(%ebp), %eax": 1,
                "calll *-;cmpb $, %al;jbe  <NtReadFile+>;calll *-;movzbl %al, %eax": 1,
                "movl (%eax), %ebx;movl -(%ebp), %eax;movl %eax, %fs:;jmp  <NtReadFile+>;jmp - <NtReadFile+>": 2,
                "jmp  <NtReadFile+>;cmpl $, (%ebp);je  <NtReadFile+>;movl (%ebp), %edx;movl (%edx), %eax": 1,
                "je  <NtReadFile+>;movl (%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);jmp  <NtReadFile+>": 1,
                "jmp  <NtReadFile+>;movl $, -(%ebp);movsbl -(%ebp), %eax;movl %eax, -(%ebp);movl $, (%esp)": 1,
                "movb $, -(%ebp);cmpl $-, -(%ebp);jne  <NtReadFile+>;cmpl $-, -(%ebp);jne  <NtReadFile+>": 1,
                "jmp  <NtReadFile+>;movb $, -(%ebp);cmpl $, (%ebp);jne  <NtReadFile+>;testl $, %eax": 1,
                "jmp  <NtReadFile+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <IoGetRelatedDeviceObject>;subl $, %esp": 1,
                "cmpl $, (%ebp);jne  <NtReadFile+>;jmp  <NtReadFile+>;movl $, (%esp);movl (%ebp), %eax": 1,
                "jmp  <NtReadFile+>;movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %edx;movl -(%ebp), %eax;movl %edx, (%eax);movl $, (%eax);jmp  <NtReadFile+>": 1,
                "movl $, (%eax);jmp  <NtReadFile+>;testb $, %al;je  <NtReadFile+>;cmpl $, (%ebp)": 1,
                "calll *-;cmpb $, %al;jbe  <NtSetInformationFile+>;calll *-;movzbl %al, %eax": 1,
                "leal (%esi), %esi;jmp  <NtSetInformationFile+>;cmpl $, (%ebp);ja  <NtSetInformationFile+>;movl (%ebp), %edx": 1,
                "movl %eax, (%esp);calll - <IoGetAttachedDevice>;subl $, %esp;movl %eax, -(%ebp);jmp  <NtSetInformationFile+>": 1,
                "movl -(%ebp), %eax;movl %eax, %fs:;cmpb $, -;je  <NtSetInformationFile+>;movl %fs:, %eax": 1,
                "jae  <NtSetInformationFile+>;lock;adcl $, -;movl -(%ebp), %eax;lock": 1,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;jmp  <NtSetInformationFile+>;movl $, (%esp);movl $, (%esp)": 1,
                "jne  <NtSetInformationFile+>;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "calll  <IoAllocateWorkItem+>;subl $, %esp;movl %eax, -(%ebp);jmp  <NtSetInformationFile+>;movl -(%ebp), %eax": 1,
                "movl $, (%ecx);cmpb $, -(%ebp);jne  <NtSetInformationFile+>;jmp  <NtSetInformationFile+>;movl -(%ebp), %esi": 1,
                "movl %eax, %fs:;jmp  <NtSetInformationFile+>;leal (%esi), %esi;jmp - <NtSetInformationFile+>;movl -(%ebp), %eax": 1,
                "movl $, (%esp);calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %edx;testl %eax, %eax": 3,
                "movl $, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <ExFreePoolWithTag>;subl $, %esp;jmp  <NtSetInformationFile+>": 1,
                "subl $, %esp;jmp  <NtSetInformationFile+>;movl -(%ebp), %eax;movl $, (%esp);movl (%eax), %edx": 1,
                "subl $, %esp;testb $, -;je  <NtUnlockFile+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "movl $, (%esp);calll  <DbgPrint>;movsbl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 2,
                "movsbl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax": 4,
                "calll  <ObReferenceObjectByHandle>;subl $, %esp;testl %eax, %eax;js  <NtUnlockFile+>;cmpb $, -(%ebp)": 1,
                "jb  <NtUnlockFile+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %esi;movl (%esi), %eax;movl (%esi), %edx": 1,
                "movl -(%ebp), %eax;cmpl %eax, (%ebp);ja  <NtUnlockFile+>;movl , %eax;cmpl %eax, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);jb  <NtUnlockFile+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %edx;movl (%edx), %ecx": 1,
                "jb  <NtUnlockFile+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %edx;movl (%edx), %ecx;movl (%edx), %ebx": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);movl (%ebp), %edx;movl (%edx), %eax;movl (%edx), %edx": 1,
                "movl (%edx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl -(%ebp), %eax;testb $, (%eax)": 1,
                "calll  <IoAllocateWorkItem+>;subl $, %esp;jmp  <NtUnlockFile+>;movzbl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "calll  <PsGetCurrentThread>;movl -(%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;movl %eax, (%ecx)": 3,
                "calll  <IoCsqRemoveNextIrp+>;jmp - <NtUnlockFile+>;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <IoCreateSynchronizationEvent+>;subl $, %esp;cmpl $, -(%ebp);je  <NtUnlockFile+>": 1,
                "movl %eax, (%edx);movl -(%ebp), %eax;jmp - <NtUnlockFile+>;leal -(%ebp), %esp;popl %ebx": 1,
                "je  <NtWriteFile+>;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax;addl $, %eax": 1,
                "jne  <NtWriteFile+>;calll  <ObfDereferenceObject>;movl $, %ebx;jmp  <NtWriteFile+>;movl -(%ebp), %ecx": 1,
                "cmpl %ecx, (%ebp);ja  <NtWriteFile+>;cmpl -, %ecx;jb  <NtWriteFile+>;calll - <ExRaiseAccessViolation>": 2,
                "movl (%ebp), %edx;movl %edx, (%esp);calll - <ProbeForRead>;subl $, %esp;cmpl $, (%ebp)": 1,
                "movl (%ebp), %eax;addl $, %eax;cmpl %eax, (%ebp);ja  <NtWriteFile+>;cmpl -, %eax": 1,
                "jmp  <NtWriteFile+>;movl $, -(%ebp);movl -(%ebp), %eax;andl $, %eax;cmpl $, %eax": 1,
                "cmpl $, (%ebp);je  <NtWriteFile+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %ecx, -(%ebp);movb $, -(%ebp);jmp  <NtWriteFile+>;movb $, -(%ebp);cmpl $, (%ebp)": 1,
                "movb $, -(%eax);movl -(%ebp), %edx;movl %edx, -(%eax);movl -(%ebp), %edx;movl (%edx), %edx": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %eax;testb $, %al;je  <NtWriteFile+>;cmpl $, (%ebp)": 1,
                "jne  <NtWriteFile+>;jmp  <NtWriteFile+>;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, %fs:;jmp  <NtWriteFile+>;jmp - <NtWriteFile+>;movl -(%ebp), %eax": 1,
                "movl %eax, (%ecx);movl $, (%ecx);movl $, (%ecx);cmpb $, (%ecx);jg  <NtQueryVolumeInformationFile+>": 1,
                "cmpb $, (%ecx);jg  <NtQueryVolumeInformationFile+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %edx;movl %eax, -(%edx);jmp  <NtQueryVolumeInformationFile+>;movl $, (%esp);movl (%ebp), %ecx": 1,
                "movl -(%ebp), %edx;movl %eax, (%edx);jmp  <NtQueryVolumeInformationFile+>;movl $, %eax;leal -(%ebp), %ecx": 1,
                "movl %eax, -(%edx);movl $, (%esp);movzbl -(%ebp), %eax;xorl $, %eax;movzbl %al, %eax": 2,
                "movl %edx, (%eax);movl $, %eax;jmp - <NtQueryVolumeInformationFile+>;movl -(%ebp), %eax;movl $, (%eax)": 1,
                "ja  <NtSetVolumeInformationFile+>;movl (%ebp), %edx;movzbl -(%edx), %eax;testb %al, %al;je  <NtSetVolumeInformationFile+>": 1,
                "cmpl %ecx, (%ebp);ja  <NtSetVolumeInformationFile+>;cmpl -, %ecx;jb  <NtSetVolumeInformationFile+>;calll - <ExRaiseAccessViolation>": 1,
                "movl $, -(%ebp);movl -(%ebp), %edx;testb $, (%edx);je  <NtSetVolumeInformationFile+>;lock": 1,
                "jmp  <NtSetVolumeInformationFile+>;movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpb $, -(%ebp);jne  <NtSetVolumeInformationFile+>;jmp  <NtSetVolumeInformationFile+>;movl -(%ebp), %edx;movl %eax, (%edx)": 1,
                "leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;nop;jmp - <NtSetVolumeInformationFile+>;movl -(%ebp), %eax": 1,
                "movl %edx, %fs:;jmp  <NtSetVolumeInformationFile+>;nop;leal (%esi), %esi;jmp - <NtSetVolumeInformationFile+>": 1,
                "nop;leal (%esi), %esi;jmp - <NtSetVolumeInformationFile+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "ja  <IoAllocateMdl+>;movl $, %esi;jmp  <IoAllocateMdl+>;movl %fs:, %eax;movl %eax, -(%ebp)": 1,
                "leal (,%ebx,), %ebx;movw %bx, (%eax);movl (%ebp), %edx;andl $, %edx;movl %edx, (%eax)": 1,
                "movw %si, (%eax);cmpl $, (%ebp);je  <IoAllocateMdl+>;cmpb $, -(%ebp);je  <IoAllocateMdl+>": 1,
                "je  <IoAllocateMdl+>;cmpb $, -(%ebp);je  <IoAllocateMdl+>;movl (%ebp), %edx;movl (%edx), %ecx": 1,
                "cmpb $, -(%ebp);je  <IoAllocateMdl+>;movl (%ebp), %edx;movl (%edx), %ecx;jmp  <IoAllocateMdl+>": 1,
                "movl (%ebp), %edx;movl (%edx), %ecx;jmp  <IoAllocateMdl+>;movl %edx, %ecx;movl (%ecx), %edx": 1,
                "jmp  <IoAllocateMdl+>;movl $, %eax;jmp  <IoAllocateMdl+>;movl $, %eax;jmp  <IoAllocateMdl+>": 1,
                "movl $, %eax;jmp  <IoAllocateMdl+>;movl $, %eax;jmp  <IoAllocateMdl+>;movl $, %esi": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movzwl (%ebx), %eax": 1,
                "movzwl (%ebx), %eax;testb $, %al;je  <IoFreeMdl+>;testb $, %al;jne  <IoFreeMdl+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl %ebx, (%esp);movl (%ebx), %eax": 1,
                "subl $, %esp;jmp  <IoFreeMdl+>;movl %fs:, %eax;movl (%eax), %ecx;addl $, (%ecx)": 1,
                "movzwl (%ecx), %eax;cmpw %ax, (%ecx);jb  <IoFreeMdl+>;addl $, (%ecx);movl %ebx, (%esp)": 1,
                "leal (%eax,%eax,), %eax;shll $, %eax;movl %eax, (%esp);movl $, (%esp);calll  <ExAllocatePoolWithTag>": 1,
                "movl $, %edi;movl -(,%edi,), %ebx;movl $, %eax;movl %eax, %edx;sarl $, %edx": 1,
                "movl %esi, %eax;addl $, %eax;movl %eax, -(%ebp);jne  <IoFreeMdl+>;jmp  <IoFreeMdl+>": 3,
                "calll - <ExfInterlockedCompareExchange+>;subl $, %esp;movl -(%ebp), %eax;movl %eax, (%ebx);movl $, (%ebx)": 2,
                "movl %eax, (%ebx);addl $, %esi;jmp  <IoFreeMdl+>;movl $, (%ebx);movl $, %esi": 1,
                "movl $, %eax;movl %ebx, %edi;rep  stosl %eax, %es:(%edi);movw $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);movl $, (%esp)": 2,
                "orl $, -(%ebp);movl , %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, (%esp);calll  <ObReferenceObjectByHandle>;subl $, %esp;testl %eax, %eax;jns  <IoFreeMdl+>": 1,
                "movl (%eax), %eax;movl %eax, ;leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlFreeUnicodeString>": 1,
                "calll  <NtClose>;subl $, %esp;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, %eax": 1,
                "calll - <ExInitializeResourceLite>;subl $, %esp;movl $, (%esp);calll - <ExInitializeResourceLite>;subl $, %esp": 1,
                "movl $, (%esp);calll  <KeSetTimerEx>;subl $, %esp;calll - <IoFreeMdl+>;testb %al, %al": 1,
                "jmp  <IoFreeMdl+>;calll  <IoGetDmaAdapter+>;calll *-;movl %ebx, -;calll - <IoSetDeviceInterfaceState+>": 1,
                "movl %ebx, (%esp);calll - <IoAllocateAdapterChannel+>;subl $, %esp;testl %eax, %eax;jns  <IoFreeMdl+>": 2,
                "jmp  <IoFreeMdl+>;movl %ebx, (%esp);calll - <IoFreeMdl+>;subl $, %esp;testb %al, %al": 1,
                "movl $, (%esp);calll  <DbgPrint>;movl $, %edx;jmp  <IoFreeMdl+>;movl , %eax": 1,
                "movl , %eax;movl (%eax), %eax;movl %eax, (%esp);calll  <IoOpenDeviceRegistryKey+>;calll  <NtVdmControl+>": 1,
                "movzwl -, %eax;shrw %ax;movw %ax, -(%ebp);movw $, -(%ebp);movl $, (%esp)": 1,
                "movl %esi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %edx;movl %ebx, %ecx": 1,
                "movl (%edx), %eax;movl (%eax), %eax;movl -(,%eax,), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwQueryKey>;subl $, %esp;movl %eax, %edi": 2,
                "movl %edx, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "je  <IoFreeMdl+>;cmpl $, %eax;jne  <IoFreeMdl+>;movl $, (%esp);movl -(%ebp), %eax": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, -(%ebp,%ebx,);movl %edi, (%esp);movl -(%ebp), %edx": 3,
                "movl %eax, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl (%eax), %eax;movl %eax, (%esp)": 3,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlAppendUnicodeToString>;subl $, %esp;movl %eax, %edi": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl (%eax), %eax": 1,
                "js  <IoFreeMdl+>;addl $, -(%ebp);movl -(%ebp), %edx;cmpl %edx, -(%ebp);ja - <IoFreeMdl+>": 1,
                "movb %bl, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax": 1,
                "jmp  <IoFreeMdl+>;addl $, -(%ebp);movl -(%ebp), %edx;subl $, %edx;movl (%ebp), %ebx": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp);movl -(%ebp), %eax": 1,
                "movl %edx, (%esp);movl (%ebp), %ebx;movl %ebx, (%esp);calll - <ZwEnumerateKey>;subl $, %esp": 1,
                "subl $, %esp;movl %eax, %edi;testl %eax, %eax;js  <IoFreeMdl+>;cmpb $, -(%ebp)": 1,
                "shrl %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "calll - <ZwQueryValueKey>;subl $, %esp;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "addl $, %eax;movl (%ebp), %ebx;movl %eax, (%ebx);movl (%ebp), %ebx;movl (%ebx), %edx": 1,
                "jne  <IoFreeMdl+>;movl (%ebp), %ebx;cmpl $, (%ebx);jne  <IoFreeMdl+>;movl $, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll *(%ebx)": 1,
                "movl $, (%ebx);addl $, %ebx;cmpl %esi, %ebx;jne - <IoFreeMdl+>;movl (%ebp), %ebx": 1,
                "jmp  <IoFreeMdl+>;movl $, %edi;jmp  <IoFreeMdl+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll  <ExFreePoolWithTag>;subl $, %esp;movl %edi, %eax": 2,
                "je  <IoFreeMdl+>;movl $, (%ebx);movl $, %eax;jmp  <IoFreeMdl+>;movl (%ebx), %ebx": 1,
                "addl $, %esi;movl %ebx, (%esp);calll  <wcslen>;leal (%ebx,%eax,), %ebx;cmpw $, (%ebx)": 1,
                "jmp  <IoFreeMdl+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "calll - <ZwOpenSymbolicLinkObject>;subl $, %esp;testl %eax, %eax;jns  <IoFreeMdl+>;movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <ObCloseHandle>;subl $, %esp;testl %esi, %esi": 3,
                "calll  <DbgPrint>;jmp  <IoFreeMdl+>;movl $, (%esp);leal -(%ebp), %esi;movl %esi, (%esp)": 2,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <IoGetDmaAdapter+>;subl $, %esp;movl %eax, %esi": 2,
                "movzwl (%ebx), %eax;addl $, %eax;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);calll  <DbgPrint>;testl %eax, %eax;je  <IoReportResourceUsage+>;movl $, (%esp)": 5,
                "movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "je  <IoAssignResources+>;cmpl $, (%ebx);je  <IoAssignResources+>;cmpl $, (%ebx);sbbl %eax, %eax": 1,
                "je  <IoAssignResources+>;movl $, (%esi);movl %esi, (%esp);movl %ebx, (%esp);movl %edi, (%esp)": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);movl %edx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <IoFreeMdl+>": 1,
                "testl %eax, %eax;js  <IoReportHalResourceUsage+>;movl $, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "calll  <RtlInitUnicodeString>;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 2,
                "pushl %esi;pushl %ebx;subl $, %esp;movl $, %ecx;calll *-": 7,
                "testl %esi, %esi;jne - <IoReportHalResourceUsage+>;movl %edi, %eax;movzbl %al, %edx;movl $, %ecx": 1,
                "movl (%ebp), %eax;movl (%eax), %ebx;calll *-;cmpb $, %al;jbe  <IoInitializeTimer+>": 1,
                "calll  <RtlAssert>;subl $, %esp;testl %ebx, %ebx;jne  <IoInitializeTimer+>;movl $, (%esp)": 1,
                "je  <IoInitializeTimer+>;movl %eax, %edx;movl $, %ecx;movl $, %edi;testb $, %al": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %ebx;movl (%eax), %eax": 1,
                "subl $, %esp;movl (%ebx), %eax;movl %eax, (%esp);movl %esi, (%esp);calll *(%ebx)": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <ExQueueWorkItem>;subl $, %esp;movl -(%ebp), %ebx": 1,
                "movl $, %ecx;calll *-;movb %al, -(%ebp);movl (%esi), %eax;subl $, %eax": 1,
                "calll *-;movzbl -(%ebp), %ecx;calll *-;jmp  <IoAllocateWorkItem+>;movl $, (%ebx)": 1,
                "movl (%eax), %eax;movl %eax, (%esi);movl %edi, (%eax);leal (%ebx), %eax;movl %eax, (%ebx)": 1,
                "jg  <IoAllocateWorkItem+>;movl (%edx), %ebx;movzbl -(%ebp), %edx;movl $, %ecx;calll *-": 1,
                "calll  <DbgPrint>;movl %ebx, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 7,
                "leal -(%ebp), %esi;jmp  <IoCancelIrp+>;movl %esi, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl $, %ecx;calll *-": 2,
                "jne  <IoCancelIrp+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 1,
                "jmp - <IoCancelIrp+>;leal -(%ebp), %esp;popl %ebx;popl %esi;popl %edi": 1,
                "calll  <KeBugCheckEx>;movl (%ebx), %eax;leal -(%eax), %edx;movl %edx, (%ebx);movl %esi, -(%eax)": 1,
                "movl %esi, -(%eax);movzbl -(%eax), %eax;movl %ebx, (%esp);movl %esi, (%esp);calll *(%ecx,%eax,)": 1,
                "movl %ebx, (%esp);movl %esi, (%esp);calll *(%ecx,%eax,);subl $, %esp;jmp  <IofCallDriver+>": 1,
                "movl (%ebp), %ebx;movl $, %eax;movzbl (%ebx), %edx;cmpb %dl, (%ebx);jl  <IoForwardIrpSynchronously+>": 1,
                "movsbl (%ebx), %eax;addl $, %eax;cmpl %eax, %edx;jle  <IoForwardIrpSynchronously+>;movl $, (%esp)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;testb $, -;je  <IoFreeIrp+>": 1,
                "subl $, %esp;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <IoFreeIrp+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movzbl (%ebx), %eax;cmpb %al, (%ebx);jge  <IoFreeIrp+>": 1,
                "jmp  <IoFreeIrp+>;testl %ebx, %ebx;je  <IoFreeIrp+>;movl %ebx, %edx;calll - <InterlockedPushEntrySList>": 1,
                "movl (%ebp), %eax;subl $, %eax;movl %eax, -(%ebp);testb $, -;je  <IoFreeIrp+>": 1,
                "jne  <IoFreeIrp+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebp), %eax;cmpl $, (%eax)": 5,
                "movl (%edx), %eax;testb $, %al;je  <IoFreeIrp+>;testb $, %al;je  <IoFreeIrp+>": 1,
                "je  <IoFreeIrp+>;jmp  <IoFreeIrp+>;cmpl $, -(%ebp);je  <IoFreeIrp+>;movl -(%ebp), %ecx": 1,
                "jmp  <IoFreeIrp+>;cmpl $, -(%ebp);je  <IoFreeIrp+>;movl -(%ebp), %ecx;movl (%ecx), %eax": 1,
                "movl $, -(%ebp);jmp  <IoFreeIrp+>;movl -(%ebp), %ebx;movl (%ebx), %ecx;movl (%ebx), %eax": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;testl %eax, %eax;je  <IoFreeIrp+>;movl $, (%esp)": 1,
                "movl (%ecx), %ecx;calll  <ObfDereferenceObject>;movl -(%ebp), %edi;testb $, (%edi);je  <IoFreeIrp+>": 1,
                "testb $, (%eax);jne  <IoFreeIrp+>;movl $, (%esp);movl $, (%esp);movl %edi, %eax": 1,
                "movl (%edx), %eax;movl %eax, (%edi);movl -(%ebp), %ecx;testb $-, (%ecx);je  <IoFreeIrp+>": 1,
                "movl (%eax), %eax;movl (%eax), %eax;lock;addl %edx, (%eax);jae  <IoFreeIrp+>": 3,
                "jae  <IoFreeIrp+>;lock;adcl $, -;jmp  <IoFreeIrp+>;testb $, %ah": 1,
                "movsbl (%edi), %ecx;movl %ecx, (%esp);movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%edi), %eax;movl %eax, (%esp);movl %esi, (%esp);calll  <KeInsertQueueApc>;subl $, %esp": 1,
                "movl %edx, (%eax);movl $, (%eax);addl $, %eax;movl %eax, (%esp);movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);calll  <ObDereferenceObjectDeferDelete>;subl $, %esp;jmp  <IoFreeIrp+>": 1,
                "testb $, (%ebx);jne  <IoFreeIrp+>;calll  <ObfDereferenceObject>;movl -(%ebp), %edi;movl (%edi), %edx": 1,
                "movl %edi, %eax;addl $, %eax;movl %eax, (%edi);movl %eax, (%edi);movl %edi, (%esp)": 1,
                "movl %eax, (%edi);movl %edi, (%esp);calll - <IoFreeIrp>;subl $, %esp;jmp  <IoFreeIrp+>": 1,
                "jne - <IoFreeIrp+>;jmp - <IoFreeIrp+>;movl -(%ebp), %edi;movl (%edi), %ecx;movl (%edi), %eax": 1,
                "jne - <IoFreeIrp+>;jmp - <IoFreeIrp+>;movl -(%ebp), %edi;movl %eax, (%edi);movl $, (%esp)": 1,
                "movl %ebx, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl (%ebx), %eax": 2,
                "movl $, (%esp);calll  <DbgPrint>;movl (%ebx), %eax;testl %eax, %eax;je  <IoFreeIrp+>": 1,
                "testb $, (%ebx);je  <IofCompleteRequest+>;movl (%ebx), %edi;movsbl (%ebx), %edx;movsbl (%ebx), %eax": 1,
                "movzbl (%esi), %eax;andl $, %eax;movb %al, (%ebx);movl (%ebx), %eax;testl %eax, %eax": 1,
                "testb $, (%esi);je  <IofCompleteRequest+>;jmp  <IofCompleteRequest+>;movl %eax, %edi;movb $, (%esi)": 1,
                "movl %eax, %edi;movb $, (%esi);movb $, (%esi);andb $, (%esi);movl $, (%esi)": 1,
                "movb $, (%esi);movb $, (%esi);andb $, (%esi);movl $, (%esi);movl $, (%esi)": 2,
                "movl $, (%esi);movsbl (%ebx), %ecx;movsbl (%ebx), %edx;addl $, %edx;movl $, %eax": 1,
                "jne  <IofCompleteRequest+>;jmp  <IofCompleteRequest+>;movzbl (%ebx), %edx;movzbl (%ebx), %eax;cmpb %al, %dl": 1,
                "movl (%ebx), %eax;orb $, (%eax);movb $, (%esi);movb $, (%esi);andb $, (%esi)": 1,
                "movl $, (%esi);movl $, (%esi);movl $, (%esi);movl $, (%esi);addl $, %esi": 1,
                "jle - <IofCompleteRequest+>;testb $, (%ebx);je  <IofCompleteRequest+>;movl (%ebx), %edi;movl (%edi), %eax": 1,
                "lock;cmpxchgl %edx, (%edi);jne - <IofCompleteRequest+>;movl %edx, -(%ebp);movl (%ebx), %eax": 1,
                "cmpl $, -(%ebp);jne  <IofCompleteRequest+>;movsbl -(%ebp), %edx;movl %edi, %ecx;calll - <IofCompleteRequest>": 1,
                "calll  <ExFreePool>;subl $, %esp;movl $, (%ebx);movl (%ebx), %esi;testl $, %esi": 1,
                "movl (%ebx), %esi;testl $, %esi;je  <IofCompleteRequest+>;testl $, %esi;je  <IofCompleteRequest+>": 1,
                "cmpb $, (%ebx);je  <IofCompleteRequest+>;movl (%ebx), %eax;movl (%ebx), %esi;cmpb $, (%ebx)": 1,
                "subl $, %esp;movl (%ebp), %eax;subl $, %eax;movl %eax, (%esp);calll - <IoFreeIrp>": 2,
                "leave;retl $;pushl %ebp;movl %esp, %ebp;movl (%ecx), %edx": 1,
                "movl (%ecx), %edx;movl $, %eax;testb $-, %dh;jne  <IoGetPagingIoPriority+>;shrl %edx": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <IoGetRequestorSessionId+>": 1,
                "testl %eax, %eax;je  <IoGetRequestorSessionId+>;movl (%eax), %eax;movl %eax, (%esp);calll  <NtMapViewOfSection+>": 1,
                "movl %esi, %eax;movb %al, (%ebx);leal (%esi), %eax;movb %al, (%ebx);movl %fs:, %eax": 1,
                "leal (,%edx,), %edi;testb %al, %al;setne -(%ebp);jne  <IoAllocateIrp+>;cmpb $, -(%ebp)": 1,
                "jle  <IoAllocateIrp+>;movzbl -(%ebp), %esi;movl %esi, %eax;andl $, %eax;testb %al, %al": 1,
                "movl -(%ebp), %eax;addl $, %eax;movl (%edx,%eax,), %esi;addl $, (%esi);movl %esi, %ecx": 1,
                "movl %eax, -(%ebp);addl $, (%eax);movl %eax, %ecx;calll - <InterlockedPopEntrySList>;movl %eax, %ebx": 1,
                "movl %eax, (%esp);movzwl %di, %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <IoInitializeIrp>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl %ebx, %eax;movl -(%ebp), %ebx": 3,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;je  <IoBuildAsynchronousFsdRequest+>;cmpb $, (%eax)": 1,
                "subl $, %esp;movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movzbl (%ebp), %edx": 1,
                "movl $, (%esp);movl $, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %eax": 1,
                "movl %ecx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <IoAllocateMdl>;subl $, %esp": 1,
                "calll  <MmProbeAndLockPages>;subl $, %esp;jmp  <IoBuildAsynchronousFsdRequest+>;movl $, %eax;leal -(%ebp), %ecx": 1,
                "nop;leal (%esi), %esi;jmp  <IoBuildAsynchronousFsdRequest+>;movl (%ebp), %edx;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl %eax, (%ecx);testb $, -;je  <IoBuildAsynchronousFsdRequest+>;movl %fs:, %eax": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movsbl (%ebp), %esi;movl $, (%esp)": 1,
                "subl $, %esp;movsbl (%ebp), %esi;movl $, (%esp);movl %esi, (%esp);calll - <IoAllocateIrp>": 1,
                "calll  <KeDelayExecutionThread>;subl $, %esp;movl $, (%esp);movl %esi, (%esp);calll - <IoAllocateIrp>": 1,
                "jne  <IoBuildAsynchronousFsdRequest+>;subl $, %ebx;jne - <IoBuildAsynchronousFsdRequest+>;leal -(%ebp), %esp;popl %ebx": 1,
                "jne  <IoIsOperationSynchronous+>;testb $, (%ebx);setne %al;movzbl %al, %eax;movl (%ebx), %edx": 1,
                "setne %al;movzbl %al, %eax;movl (%ebx), %edx;andl $, %edx;cmpl $, %edx": 1,
                "movzbl %al, %eax;movl (%ebx), %edx;andl $, %edx;cmpl $, %edx;setne %dl": 1,
                "andl %edx, %eax;movl -(%ebp), %ebx;leave;retl $;pushl %ebp": 1,
                "movl %ebx, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl $, (%esp)": 1,
                "movl (%ebp), %ebx;testb $, -;je  <IoQueueThreadIrp+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "movzbl (%ebp), %ebx;movl $, (%esp);movl (%ebp), %edx;movsbl (%edx), %eax;movl %eax, (%esp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <IoBuildDeviceIoControlRequest+>;cmpb $, (%eax);jg  <IoBuildDeviceIoControlRequest+>": 1,
                "cmpl $, %edx;jae  <IoBuildDeviceIoControlRequest+>;jmp  <IoBuildDeviceIoControlRequest+>;cmpl $, -(%ebp);nop": 1,
                "jmp  <IoBuildDeviceIoControlRequest+>;movl %esi, %eax;cmpl %edi, %esi;nop;jae  <IoBuildDeviceIoControlRequest+>": 1,
                "movl %eax, (%ecx);testl %eax, %eax;jne  <IoBuildDeviceIoControlRequest+>;movl %ecx, (%esp);calll - <IoFreeIrp>": 2,
                "addl $, %eax;movl -(%ebp), %ecx;movl %eax, (%ecx);movl (%ebp), %eax;movl %eax, (%ecx)": 1,
                "subl $, %esp;movl $, -(%ebp);jmp  <IoBuildDeviceIoControlRequest+>;movl %edi, (%esp);movl (%ebp), %ecx": 1,
                "jmp  <IoBuildDeviceIoControlRequest+>;movl %edi, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);movl %eax, (%esp)": 1,
                "je  <IoBuildDeviceIoControlRequest+>;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jmp - <IoBuildDeviceIoControlRequest+>;movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll - <IoFreeMdl>": 1,
                "movl %edx, (%esp);calll - <IoQueueThreadIrp>;subl $, %esp;testb $, -;je  <IoBuildDeviceIoControlRequest+>": 1,
                "movl $, (%esp);calll  <DbgPrint>;movl (%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %eax": 1,
                "subl $, %esp;movzbl (%ebx), %esi;movsbl (%ebx), %eax;movl %eax, (%esp);movzwl (%ebx), %eax": 1,
                "movsbl (%ebx), %eax;movl %eax, (%esp);movzwl (%ebx), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %eax;movl %eax, (%ebx);movl %esi, %eax;movb %al, (%ebx)": 1,
                "retl $;pushl %ebp;movl %esp, %ebp;calll  <PsGetCurrentThread>;movl (%ebp), %edx": 1,
                "subl $, %esp;movl (%ebp), %esi;movl (%ebp), %edi;movl (%ebp), %ebx;movzbl (%ebp), %eax": 1,
                "movl $, %edx;movl %eax, %ecx;andl $, %ecx;cmpl $, %ecx;sbbb $-, %dl": 1,
                "andl $, %ecx;cmpl $, %ecx;sbbb $-, %dl;shrl %eax;jne - <IoConnectInterrupt+>": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;je  <IoConnectInterrupt+>;movl %edi, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %edi, %edx;movb %dl, -(%ebp);movl -(%ebp), %edi;testb $, %bl": 1,
                "movl %edi, (%edx,%eax,);addl $, %edi;jmp  <IoConnectInterrupt+>;movb $, -(%ebp);addl $, %esi": 1,
                "subl $, %esp;testb %al, %al;jne - <IoConnectInterrupt+>;jmp  <IoConnectInterrupt+>;movl -(%ebp), %eax": 1,
                "testb %al, %al;jne - <IoConnectInterrupt+>;jmp  <IoConnectInterrupt+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <IoDisconnectInterrupt>;subl $, %esp;movl $, %eax;leal -(%ebp), %esp": 1,
                "jmp  <IoConnectInterrupt+>;cmpl $, (%ebx);je  <IoConnectInterrupt+>;movl (%ebx), %ebx;cmpl %ebx, %eax": 1,
                "movl %eax, (%esp);calll  <strchr>;testl %eax, %eax;je  <IoConnectInterrupt+>;addl $, %eax": 2,
                "addl $, %eax;movl %eax, (%esp);calll  <atol>;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, %edx;sarl $, %edx;subl %eax, -(%ebp)": 1,
                "addl $, %eax;movl %eax, (%esp);calll  <wcstombs+>;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl %ebx, (%esp);calll  <RtlFreeUnicodeString>;subl $, %esp;testl %esi, %esi;jns  <IoConnectInterrupt+>": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "movb $, -(%ebp);movb $-, -(%ebp);movw $, -(%ebp);orb $, -(%ebp);movl (%esi), %ebx": 1,
                "cmpb $, %dl;ja  <IoConnectInterrupt+>;movl (%eax), %ecx;testl %ecx, %ecx;je  <IoConnectInterrupt+>": 1,
                "orb $, (%eax);movl $, %eax;movl -(%ebp), %ebx;leave;retl $": 1,
                "subl $, %esp;movl (%ebp), %ebx;calll *-;cmpb $, %al;jbe  <IoConnectInterrupt+>": 5,
                "subl $, %esp;movl %ebx, %edi;movl $, %edx;testb $, %bl;je  <IoConnectInterrupt+>": 1,
                "movl $, (%esp);addl $, %ebx;movl %ebx, (%esp);calll  <KeInitializeMutex>;subl $, %esp": 1,
                "movl %eax, (%esp);calll  <IoAcquireVpbSpinLock>;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx": 1,
                "movl (%ebp), %ebx;movl (%ebp), %edi;calll *-;cmpb $, %al;jbe  <IoConnectInterrupt+>": 1,
                "leal (%ebx), %esi;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <KeWaitForSingleObject>;subl $, %esp;testl %eax, %eax;jns  <IoConnectInterrupt+>;movl $, (%esp)": 3,
                "jmp  <IoConnectInterrupt+>;movl $, (%esp);movl %esi, (%esp);calll  <KeReleaseMutex>;subl $, %esp": 1,
                "movl (%ebp), %edx;testb $, (%edx);je  <IoConnectInterrupt+>;movl $, (%ebx);jmp  <IoConnectInterrupt+>": 1,
                "movl (%ebp), %eax;cmpl $, (%eax);jne  <IoConnectInterrupt+>;movl (%ebp), %eax;addl $, %eax": 1,
                "calll  <KeReleaseMutex>;subl $, %esp;movl %edi, %eax;testb %al, %al;je  <IoConnectInterrupt+>": 1,
                "movl (%ebp), %eax;subl $, %eax;movl %eax, (%esp);calll - <IoDeleteDevice>;subl $, %esp": 1,
                "cmpl $, (%edx);je - <IoConnectInterrupt+>;movl $, (%esp);movl %esi, (%esp);calll  <KeReleaseMutex>": 1,
                "jmp  <IoConnectInterrupt+>;movsbl (%ebx), %edx;movsbl (%ebx), %eax;addl $, %eax;cmpl %eax, %edx": 1,
                "movl (%ebx), %eax;movl $, -(%eax);movl $, -(%eax);movb $-, -(%eax);movl (%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <IoCreateDevice>;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax": 2,
                "movw %dx, (%eax);movl (%eax), %edx;andb $, %dl;orl $, %edx;movl %edx, (%eax)": 1,
                "movl %edx, (%eax);movl $, -(%ebp);jmp  <IoConnectInterrupt+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <IoDeleteDevice>;subl $, %esp;jmp  <IoConnectInterrupt+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <FsRtlNotifyVolumeEvent>;subl $, %esp;movl -(%ebp), %ecx": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;leal (%esi), %edi;movl $, (%esp)": 1,
                "movl (%esi), %eax;testb $, %al;jne  <IoConnectInterrupt+>;cmpl $, (%esi);jne  <IoConnectInterrupt+>": 1,
                "jne  <IoConnectInterrupt+>;cmpl $, (%esi);jne  <IoConnectInterrupt+>;orl $, %eax;movl %eax, (%esi)": 1,
                "cmpl $, %edx;je  <IoConnectInterrupt+>;cmpl $, %edx;je  <IoConnectInterrupt+>;cmpl $, %edx": 1,
                "je  <IoConnectInterrupt+>;cmpb $, %al;jb  <IoConnectInterrupt+>;movl $, %ebx;cmpb $, %al": 1,
                "cmpb $, %al;jb  <IoConnectInterrupt+>;movl $, %ebx;cmpb $, %al;jne  <IoConnectInterrupt+>": 1,
                "je  <IoConnectInterrupt+>;subl $, %edi;movl %edi, (%esp);calll - <IoDeleteDevice>;subl $, %esp": 1,
                "jmp  <IoConnectInterrupt+>;movl %ebx, (%esi);movl $, %edx;movl %esi, %ecx;calll - <IofCompleteRequest>": 1,
                "movl %esi, %ecx;calll - <IofCompleteRequest>;movl %ebx, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl $, %ebx;movl %ebx, (%esi);movl $, %edx;movl %esi, %ecx;calll - <IofCompleteRequest>": 1,
                "movl (%ebx), %edi;cmpl $, (%esi);jne  <IoConnectInterrupt+>;movl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl $, %eax;movl %esi, (%edx,%eax);addl $, %eax;cmpl %edi, %eax;jb - <IoConnectInterrupt+>": 1,
                "movl $, (%esp);calll - <IoBuildDeviceIoControlRequest>;subl $, %esp;movl %eax, %edx;testl %eax, %eax": 1,
                "movl %edi, (%esp);calll  <KeResetEvent>;subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%ebx);movl %edx, (%ebx);movl (%ebp), %eax;subl $, (%eax);movl $, %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl $, (%esi);jbe  <IoConnectInterrupt+>": 1,
                "ja  <IoConnectInterrupt+>;cmpl $, %eax;jne  <IoConnectInterrupt+>;leal (%esi), %esi;jmp  <IoConnectInterrupt+>": 1,
                "calll  <RtlAssert>;subl $, %esp;leal (%edi), %esi;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movzwl (%esi), %eax;cmpw $, %ax;je  <IoConnectInterrupt+>": 1,
                "subw $, (%esi);movl (%ebp), %eax;addl $, %eax;cmpb $, (%edi);ja  <IoConnectInterrupt+>": 1,
                "movl %fs:, %eax;movl (%eax), %ebx;movl %fs:, %eax;cmpl (%eax), %ebx;je  <IoConnectInterrupt+>": 1,
                "movl %ebx, (%esp);calll - <IoCreateDevice>;subl $, %esp;testl %eax, %eax;js  <IoConnectInterrupt+>": 3,
                "jbe  <IoInitializeRemoveLockEx+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);addl $, %ebx;movl %ebx, (%esp);calll  <KeInitializeEvent>;subl $, %esp": 1,
                "testl %eax, %eax;jg  <IoAcquireRemoveLockEx+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;jne  <IoAcquireRemoveLockEx+>;lock": 1,
                "je  <IoAcquireRemoveLockEx+>;movw $, (%edx);addl $, %edx;subl $, %ecx;movl %ecx, %eax": 1,
                "movw $, (%edx);addl $, %edx;testb $, %cl;je  <IoAcquireRemoveLockEx+>;movb $, (%edx)": 1,
                "movl %edx, (%esi);movl %esi, (%ebx);movzbl %al, %edx;movl %edi, %ecx;calll *-": 1,
                "jmp  <IoAcquireRemoveLockEx+>;movl (%ebx), %eax;leal -(%eax), %edx;lock;cmpxchgl %edx, (%ebx)": 1,
                "movl (%ebx), %eax;leal -(%eax), %edx;lock;cmpxchgl %edx, (%ebx);jne - <IoAcquireRemoveLockEx+>": 1,
                "testl %edx, %edx;jne  <IoAcquireRemoveLockEx+>;movl $, (%esp);movl $, (%esp);addl $, %ebx": 1,
                "jne  <IoReleaseRemoveLockEx+>;leal (%ebx), %eax;movl %eax, -(%ebp);movl %eax, %ecx;calll *-": 1,
                "movl , %eax;movl $, -(%ebp);movl %eax, -(%ebp);movl -, %edx;movl %edx, -(%ebp)": 1,
                "testl %esi, %esi;je  <IoReleaseRemoveLockEx+>;movb $, -(%ebp);movl (%ebx), %edi;movl (%ebx), %ecx": 1,
                "movzbl -(%ebp), %edx;movl -(%ebp), %ecx;calll *-;cmpb $, -(%ebp);jne  <IoReleaseRemoveLockEx+>": 1,
                "movl (%ebx), %eax;leal -(%eax), %edx;lock;cmpxchgl %edx, (%ebx);jne - <IoReleaseRemoveLockEx+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebx), %eax;leal -(%eax), %esi": 1,
                "subl $, %esp;testl %esi, %esi;jne  <IoReleaseRemoveLockEx+>;cmpb $, (%ebx);jne  <IoReleaseRemoveLockEx+>": 1,
                "jne  <IoReleaseRemoveLockAndWaitEx+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "subl $, %esp;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlCreateSecurityDescriptor>": 2,
                "nop;nop;pushl %ebp;movl %esp, %ebp;movl $, %ecx": 1,
                "movl -(%ebp), %eax;cmpl %eax, %edi;jb  <IoGetStackLimits+>;leal -(%edi), %eax;movl -(%ebp), %edx": 1,
                "cmpl %edx, %eax;ja  <IoGetStackLimits+>;movl (%ebp), %edx;movl %edi, (%edx);movl %eax, (%ebx)": 1,
                "movl %edi, (%edx);movl %eax, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "jg  <IoCheckEaBufferValidity+>;movl %esi, %ecx;jmp  <IoCheckEaBufferValidity+>;movzbl (%eax), %edi;movzwl (%eax), %esi": 1,
                "addl %edi, %esi;leal (%esi), %edx;cmpl %ebx, %edx;ja  <IoCheckEaBufferValidity+>;cmpb $, (%edi,%eax)": 1,
                "movl (%eax), %eax;movl (%ebp), %edx;movl %edx, (%eax);popl %ebp;retl $": 1,
                "jle  <IoCheckQuerySetVolumeInformation+>;movl %esi, %eax;movzbl %al, %edx;movl $, %ecx;calll *-": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %edx;testl %eax, %eax;je  <IoCheckQuerySetVolumeInformation+>": 1,
                "movl $, %eax;jmp  <IoCheckQuerySetVolumeInformation+>;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl %edi, (%esp);calll  <KeWaitForSingleObject>;subl $, %esp;movl %edi, (%esp);calll  <KeClearEvent>": 1,
                "subl $, %esp;movl %edi, (%esp);calll  <KeClearEvent>;subl $, %esp;movl $, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %ebx;jmp  <IoCheckQuerySetVolumeInformation+>;movl %eax, %ebx;movl (%ebx), %eax": 1,
                "je  <IoCheckQuerySetVolumeInformation+>;cmpb $, (%eax);jg  <IoCheckQuerySetVolumeInformation+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpb $, (%eax);jg  <IoCheckQuerySetVolumeInformation+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jne  <IoCheckQuerySetVolumeInformation+>;movl $, (%esp);leal -(%ebx), %eax;movl %eax, (%esp);calll *%edi": 1,
                "leal -(%ebx), %eax;movl %eax, (%esp);calll *%edi;subl $, %esp;movl (%ebx), %ebx": 1,
                "je  <IoEnumerateRegisteredFiltersList+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl $, (%esp);movl $, (%esp);calll - <ExAcquireResourceExclusiveLite>;subl $, %esp;movl (%esi), %eax": 2,
                "movl (%eax), %ecx;movl %ecx, (%esi);movl %eax, (%esi);movl %edx, (%ecx);movl %edx, (%eax)": 5,
                "movl %eax, (%esi);movl %edx, (%ecx);movl %edx, (%eax);addl $, -;andl $, (%esi)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpw $, (%ebx);js  <IoRegisterFileSystem+>": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <IoRegisterFileSystem+>;cmpw $, (%ebx);jne  <IoRegisterFileSystem+>": 1,
                "cmpw $, (%ebx);jne  <IoRegisterFileSystem+>;calll  <KiCheckForKernelApcDelivery>;leal (%esi), %edx;movl $, %ecx": 1,
                "je  <IoUnregisterFileSystem+>;movl (%esi), %edx;movl %edx, (%eax);movl %eax, (%edx);movl -, %ebx": 1,
                "calll - <ExReleaseResourceLite>;movl $, %eax;jmp  <IoRegisterFsRegistrationChange+>;movl %esi, (%eax);movl %ebx, (%eax)": 1,
                "movl %eax, (%edx);movl %eax, ;movl $, (%esp);movl %ebx, (%esp);movl $, (%esp)": 1,
                "calll - <IoCheckQuerySetVolumeInformation+>;subl $, %esp;movl $, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "cmpw $, (%ebx);js  <IoRegisterFsRegistrationChange+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movzwl (%ebx), %eax;addl $, %eax;movw %ax, (%ebx);testw %ax, %ax;jne  <IoRegisterFsRegistrationChange+>": 1,
                "movl (%ebp), %esi;calll *-;cmpb $, %al;jbe  <IoUnregisterFsRegistrationChange+>;calll *-": 1,
                "calll *-;cmpb $, %al;jbe  <IoUnregisterFsRegistrationChange+>;calll *-;movzbl %al, %eax": 1,
                "je  <IoUnregisterFsRegistrationChange+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "subl $, %esp;movl , %eax;cmpl $, %eax;je  <IoUnregisterFsRegistrationChange+>;cmpl %ebx, (%eax)": 1,
                "cmpl $, %eax;jne - <IoUnregisterFsRegistrationChange+>;movl $, %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "movl (%eax), %esi;movl %fs:, %eax;cmpl (%eax), %esi;je  <IoUnregisterFsRegistrationChange+>;movl $, (%esp)": 1,
                "cmpw $, (%esi);jne  <IoUnregisterFsRegistrationChange+>;calll  <KiCheckForKernelApcDelivery>;movl %ebx, %ecx;calll  <ObfDereferenceObject>": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %ebx;movl %esi, %eax;cmpb $, %al": 1,
                "movl (%ebx), %eax;movl (%eax), %eax;movl %ebx, (%eax);addl $, (%ebx);movzbl -(%ebp), %eax": 1,
                "cmpb $, -(%ebp);jne  <IoReleaseVpbSpinLock+>;movl %fs:, %eax;movl $, (%esp);movzbl -(%ebp), %edx": 2,
                "je  <IoReleaseVpbSpinLock+>;cmpl $, %eax;je  <IoReleaseVpbSpinLock+>;movl %fs:, %eax;movl (%eax), %ebx": 1,
                "cmpl $, %eax;je  <IoReleaseVpbSpinLock+>;movl %fs:, %eax;movl (%eax), %ebx;movl %fs:, %eax": 1,
                "cmpl (%eax), %ebx;je  <IoReleaseVpbSpinLock+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "jle  <IoReleaseVpbSpinLock+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "andl $-, (%ecx);movl %ecx, %edx;jmp  <IoReleaseVpbSpinLock+>;movl %eax, %edx;movl (%edx), %eax": 1,
                "movl %ecx, (%esp);calll  <KeWaitForSingleObject>;subl $, %esp;movl -(%ebp), %ebx;movl $, (%esp)": 1,
                "testl %ebx, %ebx;js  <IoReleaseVpbSpinLock+>;movl (%ebp), %edx;movl (%edx), %eax;movzwl (%eax), %eax": 1,
                "jne  <IoReleaseVpbSpinLock+>;movl -(%ebp), %edx;movl $, %ecx;calll - <IoCheckQuerySetVolumeInformation+>;movl $, %ecx": 1,
                "testw %ax, %ax;jne  <IoReleaseVpbSpinLock+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <IoReleaseVpbSpinLock+>": 1,
                "jne  <IoReleaseVpbSpinLock+>;calll  <KiCheckForKernelApcDelivery>;movl -(%ebp), %ecx;movl %ecx, (%esp);calll - <IoCheckQuerySetVolumeInformation+>": 1,
                "movl %ecx, (%esp);calll - <IoCheckQuerySetVolumeInformation+>;subl $, %esp;cmpb $, -(%ebp);jne  <IoReleaseVpbSpinLock+>": 1,
                "jmp  <IoReleaseVpbSpinLock+>;cmpl $, %ebx;je  <IoReleaseVpbSpinLock+>;cmpb $, -(%ebp);jne  <IoReleaseVpbSpinLock+>": 1,
                "testb %al, %al;jne  <IoReleaseVpbSpinLock+>;movl (%edi), %edi;movl %ebx, %eax;shrl $, %eax": 1,
                "movl %eax, (%esp);calll - <IoReleaseVpbSpinLock>;subl $, %esp;movl %edi, %eax;movl -(%ebp), %ebx": 1,
                "movl %eax, (%ebx);testl %eax, %eax;jne  <IoReleaseVpbSpinLock+>;movl (%ebx), %eax;movl (%eax), %esi": 1,
                "movl %eax, (%esp);calll - <IoReleaseVpbSpinLock>;subl $, %esp;movl $, (%esp);movl %esi, (%esp)": 1,
                "movl %edi, (%esp);calll  <KeWaitForSingleObject>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax": 1,
                "movl (%edx), %eax;testl %eax, %eax;jne - <IoVerifyVolume+>;movl %edx, -(%ebp);jmp  <IoVerifyVolume+>": 1,
                "testl %eax, %eax;je  <IoVerifyVolume+>;leal -(%ebp), %eax;movl %eax, (%ebx);leal -(%ebp), %eax": 1,
                "movl (%esi), %edx;movl (%edx), %edx;movl %edx, -(%eax);movl %ebx, %edx;movl -(%ebp), %ecx": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);testb $, (%eax);je  <IoVerifyVolume+>;movl (%ebp), %eax": 1,
                "addl $, (%eax);movzbl -(%ebp), %eax;movl %eax, (%esp);calll - <IoReleaseVpbSpinLock>;subl $, %esp": 1,
                "subl $, %esp;testl %ebx, %ebx;js  <IoSetSystemPartition+>;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "calll  <KeWaitForSingleObject>;subl $, %esp;movl -(%ebp), %ebx;cmpl $, %ebx;je  <RtlVolumeDeviceToDosName+>": 1,
                "testl %ebx, %ebx;js  <RtlVolumeDeviceToDosName+>;movl -(%ebp), %edx;movl (%edx), %eax;movl (%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %edx;movl %edx, (%esp);movl %eax, (%esp);calll  <memmove>": 1,
                "movl %eax, %ebx;movl %edx, %esi;movl $, (%esp);movl %edx, (%esp);leal (%eax), %eax": 1,
                "movl %eax, (%esp);calll  <RtlEqualUnicodeString>;subl $, %esp;testb %al, %al;je  <RtlVolumeDeviceToDosName+>": 2,
                "je  <RtlVolumeDeviceToDosName+>;movl (%ebx), %ecx;calll  <ObfReferenceObject>;movl (%ebx), %eax;jmp  <RtlVolumeDeviceToDosName+>": 1,
                "jne  <RtlVolumeDeviceToDosName+>;movl (%ebx), %ebx;testl %ebx, %ebx;jne - <RtlVolumeDeviceToDosName+>;jmp  <RtlVolumeDeviceToDosName+>": 1,
                "leal (%eax), %edi;addl $, %eax;movl %eax, (%esp);movl $, (%esp);calll  <ExAllocatePool>": 1,
                "addl $, %eax;movl %eax, (%esp);movl $, (%esp);calll  <ExAllocatePool>;subl $, %esp": 3,
                "calll  <memmove>;movl $, (%ebx);movl %edi, (%ebx);leal (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl %edi, (%ebx);leal (%ebx), %eax;movl %eax, -(%ebp);movl %esi, (%esp);leal -(%ebp), %eax": 1,
                "je  <RtlVolumeDeviceToDosName+>;cmpw $, (%edx);jne  <RtlVolumeDeviceToDosName+>;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "nop;leal (%esi), %esi;jmp - <RtlVolumeDeviceToDosName+>;movl -(%ebp), %eax;movl %eax, %fs:": 2,
                "leal (%esi), %esi;jmp - <RtlVolumeDeviceToDosName+>;movl -(%ebp), %eax;movl %eax, %fs:;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl %esi, (%esp);calll  <IoGetDeviceProperty>": 1,
                "movl %eax, (%esp);calll  <ExFreePool>;subl $, %esp;jmp  <RtlVolumeDeviceToDosName+>;movl $, -(%ebp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);movl (%eax), %eax;movl %eax, (%esp);calll - <ProbeForWrite>": 1,
                "subl $, %esp;cmpl $, -(%ebp);je  <RtlVolumeDeviceToDosName+>;movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "jne  <RtlVolumeDeviceToDosName+>;movl (%edi), %edi;movl %edi, -(%ebp);jmp  <RtlVolumeDeviceToDosName+>;movl (%edi), %edi": 1,
                "cmpl $, -(%ebp);jne  <RtlVolumeDeviceToDosName+>;movl $, -(%ebp);cmpl $, -(%ebp);je  <RtlVolumeDeviceToDosName+>": 1,
                "movl -(%ebp), %edx;movzwl (%edx), %eax;movl %eax, (%esp);movl (%edx), %eax;movl %eax, (%esp)": 2,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;jmp  <RtlVolumeDeviceToDosName+>;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %edx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp);jmp  <RtlVolumeDeviceToDosName+>;movl $, %eax": 1,
                "cmpl $, %ebx;jb  <RtlVolumeDeviceToDosName+>;cmpl $, %ebx;jne  <RtlVolumeDeviceToDosName+>;leal (%esi), %esi": 1,
                "movl -, %edx;cmpl %edx, (%eax);sete %bl;movzbl %bl, %ebx;movl %ebx, %edx": 1,
                "je  <RtlVolumeDeviceToDosName+>;orb $, %dh;movl (%eax), %eax;testb $, %al;je  <RtlVolumeDeviceToDosName+>": 1,
                "movl -(%ebp), %ebx;movl %ebx, (%eax);jmp  <RtlVolumeDeviceToDosName+>;movl $, %eax;leal -(%ebp), %ecx": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl %eax, -(%ebp);movl %eax, %edx;leal -(%ebp), %eax": 1,
                "movl %edx, (%esp);calll  <SeSinglePrivilegeCheck>;subl $, %esp;testb %al, %al;jne  <RtlVolumeDeviceToDosName+>": 2,
                "calll  <SeSinglePrivilegeCheck>;subl $, %esp;testb %al, %al;jne  <RtlVolumeDeviceToDosName+>;movl $, (%esp)": 2,
                "movl (%ebp), %eax;subl $, %eax;cmpl $, %eax;ja  <RtlVolumeDeviceToDosName+>;jmpl *-(,%eax,)": 1,
                "calll  <IoInvalidateDeviceState+>;movl %eax, %ebx;movl %edi, %ecx;calll  <ObfDereferenceObject>;jmp  <RtlVolumeDeviceToDosName+>": 1,
                "jmp  <RtlVolumeDeviceToDosName+>;movl $, %ebx;jmp  <RtlVolumeDeviceToDosName+>;movl $, %ebx;movl %ebx, %eax": 1,
                "movl %eax, (%esp);calll *-(%ebp);subl $, %esp;testl %edi, %edi;jne  <IoGetDmaAdapter+>": 1,
                "movl %edx, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll  <IoReportTargetDeviceChangeAsynchronous+>;subl $, %esp": 1,
                "subl $, %esp;movzwl -, %ebx;testl %eax, %eax;js  <IoGetDmaAdapter+>;movl -(%ebp), %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;cmpl $, (%eax);jne  <IoGetDmaAdapter+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;movl %eax, %ebx": 1,
                "jne  <IoGetDmaAdapter+>;addl $, %ebx;cmpw %bx, -;ja - <IoGetDmaAdapter+>;jmp  <IoGetDmaAdapter+>": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);jne  <IoGetDmaAdapter+>;movl (%eax), %edx;testl %edx, %edx": 2,
                "subl $, %esp;movl $, %ebx;testl %esi, %esi;js  <IoGetDmaAdapter+>;movl -(%ebp), %eax": 1,
                "addl (%eax), %ebx;movl (%ebx), %esi;leal (,%esi,), %eax;cmpl %eax, %edx;jae  <IoGetDmaAdapter+>": 1,
                "cmpl %eax, %edx;jae  <IoGetDmaAdapter+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl %edi, (%ebx);je  <IoGetDmaAdapter+>;movl $, %ebx;jmp  <IoGetDmaAdapter+>;cmpl %edi, (%eax)": 1,
                "movl %eax, (%esp);calll  <IoGetDmaAdapter+>;subl $, %esp;testl %eax, %eax;js  <IoGetDmaAdapter+>": 2,
                "subl $, %esp;testl %eax, %eax;js  <IoGetDmaAdapter+>;movl -(%ebp), %eax;movl %eax, %ebx": 1,
                "subl $, %esp;testl %eax, %eax;jns  <IoGetDmaAdapter+>;movl %eax, (%esp);movl $, (%esp)": 4,
                "movl $, (%esp);calll  <DbgPrint>;movl $, -(%ebp);jmp  <IoGetDmaAdapter+>;movl $, (%esp)": 1,
                "subl $, %esp;movl $, %edx;movl %esi, %ecx;calll - <IoSetDeviceInterfaceState+>;movl (%ebp), %edx": 1,
                "movl %eax, %ebx;testl %eax, %eax;js  <IoGetDmaAdapter+>;movl $, (%esp);leal -(%ebp), %eax": 1,
                "testl %eax, %eax;js  <IoGetDmaAdapter+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "jne  <IoGetDmaAdapter+>;movl $, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp);calll  <RtlInitUnicodeString>": 1,
                "movl %eax, (%esp);calll - <IoCreateDevice>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax": 1,
                "orl $, (%eax);movl %eax, (%esp);calll  <IoGetDmaAdapter+>;subl $, %esp;movl %eax, ": 1,
                "calll - <RtlVolumeDeviceToDosName+>;movl %eax, %ebx;testl %eax, %eax;js  <IoGetDmaAdapter+>;movl , %eax": 1,
                "movl , %eax;addl $, %eax;movl %eax, (%esp);movl $, (%esp);calll - <RtlVolumeDeviceToDosName+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <ExAllocatePool>;subl $, %esp;movl %eax, ": 1,
                "rep  stosl %eax, %es:(%edi);testb $, %dl;je  <IoGetDmaAdapter+>;movw $, (%edi);addl $, %edi": 3,
                "je  <IoGetDmaAdapter+>;movb $, (%edi);movl , %eax;movl $, (%eax);movl $, (%eax)": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl %ecx, %ebx;movl %edx, %esi;testl %edx, %edx": 1,
                "movl %edi, -(%ebp);movl %ecx, %ebx;movl %edx, %esi;testl %edx, %edx;jne  <IoGetDmaAdapter+>": 1,
                "movl (%ebx), %eax;testb $, %ah;je  <IoGetDmaAdapter+>;orl $, %eax;movl %eax, (%ebx)": 1,
                "calll *(%eax);subl $, %esp;movl %eax, %edi;testl %eax, %eax;jns  <IoGetDmaAdapter+>": 1,
                "testl %eax, %eax;jns  <IoGetDmaAdapter+>;movl %eax, (%esp);leal (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;orl $, (%ebx)": 1,
                "cmpl $, -;je  <IoGetDmaAdapter+>;pushl %ebp;movl %esp, %ebp;movl $, %ecx": 1,
                "movl , %eax;cmpl $, (%eax);je  <IoGetDmaAdapter+>;movl $, %ebx;movl $, (%esp)": 1,
                "movl %ebx, -;movl , %eax;movl $, (%esp);movl %esi, (%esp);movl (%eax), %edx": 1,
                "cmpb $, %al;je  <IoGetDmaAdapter+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl %edx, (%esi);movzbl %al, %edx;movl $, %ecx;calll *-;leal (%ebx), %eax": 1,
                "calll  <ExFreePool>;subl $, %esp;movl (%ebx), %eax;testl %eax, %eax;je  <IoGetDmaAdapter+>": 3,
                "movl %eax, (%esp);calll - <IoGetAttachedDeviceReference>;subl $, %esp;movl %eax, %edi;movl $, (%esp)": 2,
                "movl %eax, (%ebx);movl %ebx, (%esp);calll - <IoQueueThreadIrp>;subl $, %esp;cmpb $, (%ebx)": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %ebx, (%esp);calll  <IoTranslateBusAddress+>": 2,
                "movl %ebx, (%esp);calll  <IoTranslateBusAddress+>;movl -(%ebp), %ebx;movl -(%ebp), %edi;movl %ebp, %esp": 2,
                "movl %eax, %ebx;movl $, %ecx;calll *-;movl (%ebx), %ebx;testl %ebx, %ebx": 1,
                "subl $, %esp;movl $, %ecx;movl -(%ebp), %edx;calll *%edx;movl %esi, %ebx": 1,
                "movb $, -(%ebp);movl (%ebp), %eax;movb %al, -(%ebp);testl %edx, %edx;je  <IoGetDmaAdapter+>": 1,
                "movl %eax, -(%ebp);leal (%ebx), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <IoGetDmaAdapter+>": 4,
                "subl $, %esp;movl %eax, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 2,
                "movl (%esi), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll *(%esi);testl %eax, %eax": 1,
                "jne - <IoGetDmaAdapter+>;addl $, %esp;popl %ebx;popl %esi;popl %ebp": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx;movl %edx, (%eax)": 1,
                "movl $, -(%ebp);movl %edx, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "movl (%ebp), %eax;movl (%eax), %eax;movl %eax, (%esp);calll - <IoGetDmaAdapter+>;subl $, %esp": 2,
                "movl -(%ebp), %ebx;cmpw $, (%ebx);je  <IoGetDmaAdapter+>;movl $, %esi;movl %ebx, (%esp)": 1,
                "movl $, %esi;movl %ebx, (%esp);calll  <wcslen>;addl $, %eax;leal (%ebx,%eax,), %ebx": 2,
                "jne - <IoGetDmaAdapter+>;jmp  <IoGetDmaAdapter+>;movl $, %esi;movl $, (%esp);leal -(%ebp), %ebx": 2,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <IoGetDmaAdapter+>;movl %eax, %ebx;cmpw $, (%eax)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <IoGetDmaAdapter+>;leave;retl": 1,
                "movl $, (%ebx);movl $, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "movl %edx, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl %esi, (%esp);movl $, (%esp)": 1,
                "je  <IoGetDmaAdapter+>;cmpl $, %eax;jne  <IoGetDmaAdapter+>;movl %esi, (%esp);calll  <ExFreePool>": 3,
                "calll  <ExFreePool>;subl $, %esp;movl -(%ebp), %edx;movl %edx, -(%ebp);movl %edx, (%esp)": 1,
                "movl %esi, (%esp);movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %eax": 2,
                "subl $, %esp;cmpl $, %eax;je  <IoGetDmaAdapter+>;cmpl $, %eax;jne  <IoGetDmaAdapter+>": 5,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl %ecx, (%esp);movl $, (%esp);calll  <ExAllocatePool>": 1,
                "movl %ecx, (%esp);movl $, (%esp);calll  <ExAllocatePool>;subl $, %esp;movl %eax, %edi": 1,
                "subl $, %esp;movl %eax, %edi;testl %eax, %eax;jne  <IoGetDmaAdapter+>;movl -(%ebp), %eax": 2,
                "movl (%ebp), %ecx;cmpb $, (%eax,%ecx);jne  <IoGetDmaAdapter+>;movl (%edi), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;addl $, %eax;movl %eax, (%esp);movl -(%ebp), %eax": 2,
                "addl %eax, (%ecx);jmp  <IoGetDmaAdapter+>;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %edx": 1,
                "movl %eax, (%esp);movl %edi, (%esp);movl %esi, (%esp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "movw %ax, -(%ebp);movw %ax, -(%ebp);leal (%esi), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %ecx;leal -(%ebp), %edx": 1,
                "movl %ecx, (%esp);movl %edi, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll  <RtlCompareUnicodeString>": 5,
                "leal (%ebx), %eax;movl %eax, ;leal -(%ebp), %ecx;movl %ecx, -(%ebp);jmp  <IoGetDmaAdapter+>": 2,
                "movl %eax, (%esp);calll - <ZwSetValueKey>;subl $, %esp;testl %eax, %eax;jns  <IoGetDmaAdapter+>": 4,
                "movl %eax, (%esp);calll - <ZwCreateKey>;subl $, %esp;testl %eax, %eax;jns  <IoGetDmaAdapter+>": 1,
                "movl %ecx, (%esp);movl $, (%esp);calll  <ExAllocatePool>;subl $, %esp;movl %eax, %ebx": 1,
                "leal (%ebx), %eax;movl %eax, (%esp);calll  <memmove>;movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %eax, (%esp);calll  <memmove>;movl -(%ebp), %edx;movl %edx, (%esp);movl %ebx, (%esp)": 1,
                "movl %edx, (%esp);movl %ebx, (%esp);movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll  <ExFreePool>;subl $, %esp;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "jmp  <IoGetDmaAdapter+>;movl $, %ebx;movl $, %edi;jmp  <IoGetDmaAdapter+>;movl $, %ebx": 1,
                "movl $, %ebx;jmp  <IoGetDmaAdapter+>;movl -(%ebp), %edi;movl $, %ebx;jmp  <IoGetDmaAdapter+>": 1,
                "jmp  <IoGetDmaAdapter+>;movl %eax, %ebx;nop;jmp  <IoGetDmaAdapter+>;movl -(%ebp), %edi": 1,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <IoGetDmaAdapter+>;movw $, -(%ebp);movw $, -(%ebp)": 1,
                "movl %eax, (%esp);calll - <ZwQueryValueKey>;subl $, %esp;testl %eax, %eax;js  <IoGetDmaAdapter+>": 1,
                "calll  <DbgPrint>;jmp  <IoGetDmaAdapter+>;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <IoGetDmaAdapter+>;subl $, %esp": 7,
                "movl $, %ebx;jmp - <IoGetDmaAdapter+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>": 1,
                "cmpl $, (%edi);jne  <IoGetDmaAdapter+>;movl (%edi), %eax;movw %ax, -(%ebp);movw %ax, -(%ebp)": 1,
                "movl $, (%esp);calll  <VerSetConditionMask+>;subl $, %esp;leal (%edi), %ebx;movl %eax, (%esp)": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;js  <IoGetDmaAdapter+>;movl (%ebp), %eax": 1,
                "leal (%eax,%edx,), %esi;cmpl %esi, %eax;ja  <IoGetDmaAdapter+>;movl %eax, %ebx;leal (%eax), %edi": 1,
                "movl %eax, %ebx;leal (%eax), %edi;movl %ebx, -(%ebp);cmpl %esi, %ebx;je  <IoGetDmaAdapter+>": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);leal -(%ebp), %edx;movl %edx, -(%ebp)": 2,
                "jne  <IoGetDmaAdapter+>;movl %ebx, (%esp);calll  <ExFreePool>;subl $, %esp;movl $, %edi": 1,
                "movl %eax, %edi;testl %eax, %eax;jns  <IoGetDmaAdapter+>;movl %eax, (%esp);movl $, (%esp)": 3,
                "calll  <DbgPrint>;movl %ebx, (%esp);calll  <ExFreePool>;subl $, %esp;jmp  <IoGetDmaAdapter+>": 1,
                "calll  <ExFreePool>;subl $, %esp;jmp  <IoGetDmaAdapter+>;movl -(%ebp), %edx;movzwl (%edx), %eax": 2,
                "addl $, %eax;movl %eax, (%esp);movl (%edx), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "addl $, %eax;movl %eax, (%esp);calll - <IoGetDmaAdapter+>;subl $, %esp;testl %eax, %eax": 1,
                "cmpl %edx, %eax;jae  <IoGetDmaAdapter+>;movl %edx, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <ZwClose>;subl $, %esp;jmp  <IoGetDmaAdapter+>;movl (%ebx), %eax": 1,
                "jmp  <IoGetDmaAdapter+>;movl (%ebx), %eax;movl %eax, -(%ebp);movl %eax, (%esp);movl %esi, (%esp)": 1,
                "movl %eax, (%esp);calll  <memmove>;movl %ebx, (%esp);calll  <ExFreePool>;subl $, %esp": 1,
                "movl %eax, (%esp);calll - <ZwClose>;subl $, %esp;jmp  <IoGetDmaAdapter+>;movl -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlEqualUnicodeString>": 1,
                "movl %eax, (%esp);calll  <RtlEqualUnicodeString>;subl $, %esp;testb %al, %al;je  <IoGetDmaAdapter+>": 1,
                "calll - <ZwOpenKey>;subl $, %esp;testl %eax, %eax;je  <IoGetDmaAdapter+>;movl %edi, (%esp)": 1,
                "jmp  <IoGetDmaAdapter+>;leal -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %edx, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "jmp  <IoGetDmaAdapter+>;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);calll  <ExAllocatePool>": 1,
                "subl $, %esp;movl %esi, (%esp);calll  <ExFreePool>;subl $, %esp;movl -(%ebp), %eax": 3,
                "subl $, %esp;jmp  <IoGetDmaAdapter+>;leal (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "movl %edi, (%esp);calll  <ExFreePool>;subl $, %esp;jmp  <IoGetDmaAdapter+>;movzwl -(%ebp), %eax": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %eax;cmpl %ebx, %eax;je  <IoGetDmaAdapter+>": 1,
                "calll  <DbgPrint>;jmp  <IoGetDmaAdapter+>;testl $, %eax;jne  <IoGetDmaAdapter+>;movl %ebx, (%esp)": 1,
                "jmp  <IoGetDmaAdapter+>;cmpl $, (%ebx);jne  <IoGetDmaAdapter+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl (%esi), %edi;movzwl (%esi), %ebx;movl $, -(%ebp);movl (%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <ZwCreateKey>;subl $, %esp;movl %eax, %esi;cmpl $, %eax": 1,
                "movl -(%ebp), %edx;movl -(%ebp,%edx,), %eax;movl %eax, (%esp);calll - <ZwClose>;subl $, %esp": 2,
                "cmpl %ebx, %esi;jbe  <IoGetDmaAdapter+>;cmpw $, (%ebx);jne - <IoGetDmaAdapter+>;jmp  <IoGetDmaAdapter+>": 1,
                "jmp - <IoGetDmaAdapter+>;movl %esi, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "calll  <RtlInitializeGenericTableAvl>;subl $, %esp;leave;retl;pushl %ebp": 1,
                "movl $, (%esp);calll - <ExInitializeResourceLite>;subl $, %esp;calll - <IoGetDmaAdapter+>;movl $, %eax": 1,
                "movl , %eax;testl %eax, %eax;je  <IoGetDmaAdapter+>;cmpl $, %eax;jne  <IoGetDmaAdapter+>": 1,
                "pushl %ebx;subl $, %esp;movzwl (%ebp), %esi;movl -, %ebx;calll *-": 1,
                "movzwl (%ebp), %esi;movl -, %ebx;calll *-;cmpb $, %al;jbe  <IoGetDmaAdapter+>": 1,
                "andl $, %edi;movl %edi, (%ebx);movl , %eax;movzwl %si, %edx;cmpl (%eax), %edx": 1,
                "movl %edi, (%ebx);movl , %eax;movzwl %si, %edx;cmpl (%eax), %edx;jae  <IoGetDmaAdapter+>": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <memmove>;movl $, %edi;jmp  <IoGetDmaAdapter+>": 1,
                "lock;xaddl %eax, (%ebx);addl $, %eax;testl %eax, %eax;jg  <IoGetDmaAdapter+>": 1,
                "movl %edx, (%esp);addl $, %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);leal (%edi), %eax;movl (%edi), %esi;testl %esi, %esi": 1,
                "addl %ebx, -(%ebp);addl %ebx, %edi;addl $, -(%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp)": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <IoGetDmaAdapter+>;cmpl $, (%eax);je  <IoGetDmaAdapter+>": 2,
                "movl %ebx, (%esp);calll - <ZwSetValueKey>;subl $, %esp;movl $, (%esp);leal -(%ebp), %esi": 1,
                "calll - <IoGetDmaAdapter+>;subl $, %esp;testl %eax, %eax;js  <IoGetDmaAdapter+>;movl -(%ebp), %eax": 3,
                "js  <IoGetDmaAdapter+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <wcscat>": 1,
                "je  <IoGetDmaAdapter+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <wcscat>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <wcscat>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl %eax, -(%ebp);movl $, (%esp);leal -(%ebp), %edi;movl %edi, (%esp)": 1,
                "movl $, (%ebx);movw $, (%ebx);movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "je  <IoGetDmaAdapter+>;movl %ebx, (%esp);movl %eax, (%esp);calll - <IoGetDmaAdapter+>;movl -(%ebp), %eax": 1,
                "testl %eax, %eax;js  <IoGetDmaAdapter+>;testl %esi, %esi;je  <IoGetDmaAdapter+>;movl %esi, (%esp)": 1,
                "jne  <IoGetDmaAdapter+>;movl %edi, (%esp);movl %esi, %eax;addl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl %esi, %eax;addl (%esi), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <IoGetDmaAdapter+>;movl $, %ebx;jmp  <IoGetDmaAdapter+>;movl $, %ebx;movl (%ebp), %eax": 1,
                "testl %eax, %eax;je  <IoGetDeviceProperty+>;movl $, %ebx;cmpl $, %edi;ja  <IoGetDeviceProperty+>": 1,
                "calll - <IoGetDmaAdapter+>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;js  <IoGetDeviceProperty+>": 1,
                "movl $, -(%ebp);jmp  <IoGetDeviceProperty+>;cmpl $-, (%eax);je  <IoGetDeviceProperty+>;addl $, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, (%esp);movl %ebx, (%esp);calll  <wcschr>": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll - <IoGetDmaAdapter+>;subl $, %esp": 1,
                "subl $, %esp;movl %eax, -(%ebp);jmp  <IoGetDeviceProperty+>;testb $, (%ebp);je  <IoGetDeviceProperty+>": 1,
                "jmp  <IoGetDeviceProperty+>;testb $, (%ebp);je  <IoGetDeviceProperty+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <DbgPrint>;movl $, (%esp);calll  <DbgPrint>;calll  <DbgBreakPoint>;movl $, %edi": 5,
                "movl $, %edi;movl $, %ebx;jmp  <IoGetDeviceProperty+>;movl $, %ecx;movl $, %edx": 1,
                "movl %ebx, (%esp);movl %eax, (%esp);movl %ecx, (%esp);movl %edx, (%esp);movl (%ebp), %ebx": 1,
                "movl %eax, (%esp);movl %ecx, (%esp);movl %edx, (%esp);movl (%ebp), %ebx;movl %ebx, (%esp)": 1,
                "movl %eax, %ebx;jmp  <IoGetDeviceProperty+>;addl -(%ebp), %eax;movl %eax, (%esi);movl $, %ebx": 1,
                "sbbl %ebx, %ebx;andl $-, %ebx;addl $, %ebx;andl $, %esi;movl %esi, -(%ebp)": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll  <RtlAppendUnicodeStringToString>;subl $, %esp;movl %eax, %esi": 1,
                "movl %edx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl (%ebp), %eax": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl %ebx, -(%ebp);movl $, -(%ebp)": 1,
                "jmp  <IoOpenDeviceRegistryKey+>;movl $, %esi;movl %esi, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "testl %eax, %eax;je  <IoOpenDeviceRegistryKey+>;calll  <IoOpenDeviceRegistryKey+>;movl -(%ebp), %ebx;leave": 1,
                "leal (%esi), %eax;movl %eax, -(%ebp);movl %eax, (%esp);movl $, (%esp);calll - <RtlVolumeDeviceToDosName+>": 1,
                "je  <IoOpenDeviceRegistryKey+>;movl $, %edi;movzbl %dl, %ebx;movl %ebx, (%esp);movl (%esi,%edi,), %eax": 1,
                "movl %eax, -(%ebp);movl %edx, %esi;movl $, %ecx;calll *-;movl -(%ebp), %edx": 1,
                "movl (%edx), %edi;testl %edi, %edi;je  <IoOpenDeviceRegistryKey+>;movl -, %edx;movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %eax;calll *%eax;movl %esi, (%esp);movl (%edi), %eax;movl %eax, (%esp)": 1,
                "movl $, %ecx;calll *-;movl -(%ebp), %edx;movl (%edx), %ebx;testl %ebx, %ebx": 1,
                "calll *%edx;movl %esi, %ebx;testl %esi, %esi;jne - <IoOpenDeviceRegistryKey+>;movzbl %al, %edx": 1,
                "movl (%esi,%edi,), %ebx;testb $-, (%ebx);je  <IoOpenDeviceRegistryKey+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl %ebx, %ecx": 4,
                "movl %ebx, %ecx;calll  <ObfDereferenceObject>;addl $, %edi;cmpl %edi, (%esi);ja - <IoOpenDeviceRegistryKey+>": 1,
                "calll  <ObfDereferenceObject>;addl $, %edi;cmpl %edi, (%esi);ja - <IoOpenDeviceRegistryKey+>;movl %esi, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <IoGetDmaAdapter+>;testl %eax, %eax;js  <IoOpenDeviceRegistryKey+>": 2,
                "calll - <IoGetDmaAdapter+>;testl %eax, %eax;js  <IoOpenDeviceRegistryKey+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;setg %dl;movzbl %dl, %edx;subl $, %edx;andl %edx, %eax": 2,
                "subl $, %esp;addl $, %ebx;movl %ebx, (%esp);movl $, (%esp);calll - <RtlVolumeDeviceToDosName+>": 1,
                "testl %edi, %edi;je  <IoRequestDeviceEject+>;movl $, %edx;movl %edi, %eax;calll - <IoOpenDeviceRegistryKey+>": 1,
                "movl %edi, %eax;calll - <IoOpenDeviceRegistryKey+>;movl $, %ecx;calll *-;movl (%ebx), %ebx": 1,
                "movl $, %ecx;movl -(%ebp), %edx;calll *%edx;movl %edi, %ebx;testl %edi, %edi": 1,
                "movl $, %ecx;calll *-;jmp  <IoRequestDeviceEject+>;testl %edi, %edi;je  <IoRequestDeviceEject+>": 1,
                "calll - <IoGetDmaAdapter+>;movl $, (%ebx);testb $, -(%ebp);je  <IoRequestDeviceEject+>;leal -(%ebp), %edx": 1,
                "movl %eax, (%esp);calll - <IoGetDmaAdapter+>;subl $, %esp;testl %eax, %eax;jne  <IoRequestDeviceEject+>": 1,
                "movl %edx, (%esp);calll - <IoOpenDeviceRegistryKey+>;testl %eax, %eax;jne - <IoRequestDeviceEject+>;jmp - <IoRequestDeviceEject+>": 1,
                "movl %edi, (%esp);calll - <IoQueueWorkItem>;subl $, %esp;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "jne  <IoSynchronousInvalidateDeviceRelations+>;movl (%ebp), %eax;movl %eax, (%esp);calll - <IoOpenDeviceRegistryKey+>;jmp  <IoSynchronousInvalidateDeviceRelations+>": 1,
                "jne  <IoSynchronousInvalidateDeviceRelations+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "jne  <IoSynchronousInvalidateDeviceRelations+>;movl %esi, (%esp);calll  <IoReportTargetDeviceChangeAsynchronous+>;subl $, %esp;movl %eax, %ebx": 1,
                "movl %eax, %ebx;testl %eax, %eax;js  <IoSynchronousInvalidateDeviceRelations+>;movl %esi, (%esp);calll - <IoSynchronousInvalidateDeviceRelations+>": 1,
                "movl %esi, (%esp);calll - <IoSynchronousInvalidateDeviceRelations+>;subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <ZwSetValueKey>;subl $, %esp;movl %eax, %ebx;movl -(%ebp), %eax;cmpl $-, %eax": 1,
                "calll - <ZwClose>;subl $, %esp;movl -(%ebp), %eax;cmpl $-, %eax;je  <IoSynchronousInvalidateDeviceRelations+>": 1,
                "je  <IoInvalidateDeviceState+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 9,
                "orl $, (%ebx);jmp  <IoInvalidateDeviceState+>;andl $-, (%ebx);testb $, %al;jne  <IoInvalidateDeviceState+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <IoGetDmaAdapter+>;subl $, %esp": 2,
                "calll  <DbgPrint>;movl (%ebx), %eax;andl $-, %eax;orl $, %eax;movl %eax, (%ebx)": 1,
                "andl $-, %eax;orl $, %eax;movl %eax, (%ebx);movl %ebx, (%esp);calll - <IoOpenDeviceRegistryKey+>": 1,
                "calll  <DbgPrint>;movl %esi, (%esp);calll - <IoInvalidateDeviceState>;subl $, %esp;movl (%ebx), %eax": 1,
                "jmp  <IoInvalidateDeviceState+>;cmpl $, %eax;jne  <IoInvalidateDeviceState+>;movl %edi, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll - <IoGetDmaAdapter+>;subl $, %esp;movl -(%ebp), %ecx": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;movl %eax, (%esp);movl %edx, (%esp);movl (%ebp), %eax": 6,
                "cmpl (%eax), %ebx;je  <IoTranslateBusAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 9,
                "calll  <RtlAssert>;subl $, %esp;movzwl (%ebx), %eax;cmpw $, %ax;je  <IoTranslateBusAddress+>": 2,
                "movzwl (%ebx), %eax;cmpw $, %ax;je  <IoTranslateBusAddress+>;testw %ax, %ax;jle  <IoTranslateBusAddress+>": 2,
                "cmpw $, %ax;je  <IoTranslateBusAddress+>;testw %ax, %ax;jle  <IoTranslateBusAddress+>;movl $, (%esp)": 2,
                "subl $, %esp;testl %ebx, %ebx;je  <IoTranslateBusAddress+>;testb $, %bl;jne  <IoTranslateBusAddress+>": 7,
                "testl %ebx, %ebx;je  <IoTranslateBusAddress+>;testb $, %bl;jne  <IoTranslateBusAddress+>;leal (%ebx), %edx": 7,
                "jne  <IoTranslateBusAddress+>;leal (%ebx), %edx;subl $, %ebx;movl %edx, %eax;lock": 7,
                "cmpl %eax, (%ebx);je  <IoTranslateBusAddress+>;calll  <KiCheckForKernelApcDelivery>;nop;jmp  <IoTranslateBusAddress+>": 3,
                "jne  <IoTranslateBusAddress+>;nop;jmp  <IoTranslateBusAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jne  <IoTranslateBusAddress+>": 4,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jne  <IoTranslateBusAddress+>;calll *-": 4,
                "movw $, (%eax);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);leal (%ebx), %eax": 3,
                "cmpxchgl %esi, -;cmpl %eax, %edx;jne  <IoTranslateBusAddress+>;movl $, %ecx;calll  <KeSetEventBoostPriority+>": 2,
                "calll  <DbgPrint>;calll *-;cmpb $, %al;jbe  <IoTranslateBusAddress+>;movl $, (%esp)": 1,
                "jmp  <IoTranslateBusAddress+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);leal (%ebx), %eax": 1,
                "movl %esi, -;movzwl (%esi), %eax;movw %ax, ;movl -(%ebp), %ebx;jmp  <IoTranslateBusAddress+>": 1,
                "jne  <IoTranslateBusAddress+>;leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlFreeUnicodeString>;subl $, %esp": 1,
                "subl $, %esp;jmp  <IoTranslateBusAddress+>;movl (%ebx), %ebx;jmp - <IoTranslateBusAddress+>;movl (%ebx), %edx": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jne  <IoRegisterPlugPlayNotification+>;movl %esi, %ecx": 1,
                "calll - <IoGetDeviceInterfaces>;subl $, %esp;testl %eax, %eax;js  <IoRegisterPlugPlayNotification+>;movw $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);movl (%ebp), %edx;movl (%edx), %eax": 1,
                "movl -(%ebp), %edi;cmpw $, (%edi);je  <IoRegisterPlugPlayNotification+>;movl %ebx, -(%ebp);movl %esi, -(%ebp)": 1,
                "cmpl %edx, -;je  <IoRegisterPlugPlayNotification+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpw $, %ax;je  <IoUnregisterPlugPlayNotification+>;testw %ax, %ax;jle  <IoUnregisterPlugPlayNotification+>;movl $, (%esp)": 1,
                "movl (%esi), %edx;movl (%esi), %eax;movl %eax, (%edx);movl %edx, (%eax);calll *-": 2,
                "movl %fs:, %eax;movl (%eax), %eax;movzwl -, %edx;cmpw %dx, (%eax);je  <IoUnregisterPlugPlayNotification+>": 1,
                "leal (%esi), %eax;movl %eax, (%esp);calll  <RtlFreeUnicodeString>;subl $, %esp;movl (%esi), %ecx": 1,
                "subl $, %esp;movl (%esi), %ecx;calll  <ObfDereferenceObject>;movl $, (%esp);movl %esi, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;testl %esi, %esi;jne  <IoUnregisterPlugPlayNotification+>;movl $, (%esp)": 1,
                "subl $, %esp;testl %esi, %esi;jne  <IoUnregisterPlugPlayNotification+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpl $, (%ebp);je  <IoUnregisterPlugPlayNotification+>;testl %ebx, %ebx;jne  <IoUnregisterPlugPlayNotification+>;movl $, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <IoReportTargetDeviceChangeAsynchronous+>;movl %eax, %edi;testl %eax, %eax": 1,
                "movl %eax, %edi;testl %eax, %eax;js  <IoReportDetectedDevice+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "addl $, %eax;movl %eax, -(%ebp);movl %edi, (%esp);movl $, (%esp);leal -(%ebp,%eax,), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <IoGetDmaAdapter+>;cmpb $, -(%ebp);jne  <IoReportDetectedDevice+>": 1,
                "calll - <ZwClose>;subl $, %esp;jmp  <IoReportDetectedDevice+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;jmp  <IoReportDetectedDevice+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>": 1,
                "movl (%ebp), %edx;movl (%ebp), %ebx;movb $, (%ebx);testl %eax, %eax;sete %cl": 1,
                "testb %cl, %cl;jne  <IoReportResourceForDetection+>;testb %cl, %cl;je  <IoReportResourceForDetection+>;movl %edx, %eax": 1,
                "movl (%ebp), %esi;movl (%ebp), %ebx;testl %ebx, %ebx;jne  <IoReportTargetDeviceChange+>;movl $, (%esp)": 1,
                "calll  <KeBugCheckEx>;cmpl $, (%ebx);je  <IoReportTargetDeviceChange+>;movl $, (%esp);movl $, (%esp)": 1,
                "jne  <IoReportTargetDeviceChange+>;cmpw $, (%ebx);jne  <IoReportTargetDeviceChange+>;movl $, (%esp);movl $, (%esp)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %edi;movl (%ebp), %ebx;testl %ebx, %ebx": 1,
                "testb $, (%eax);jne  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%esp);movl $, (%esp);movl %edi, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esi);movl $, (%esi);movl %esi, (%esi);movl $, (%esi)": 1,
                "js  <IoReportTargetDeviceChangeAsynchronous+>;cmpl $, (%esi);je  <IoReportTargetDeviceChangeAsynchronous+>;movl $, -(%ebp);cmpl $, (%esi)": 1,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>;subl $, %esp": 1,
                "movl %ecx, (%esp);movl %eax, (%esp);movzwl %dx, %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jns  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax": 2,
                "testl %eax, %eax;jns  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>": 3,
                "subl $, %esp;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;movw %ax, -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <ZwSetValueKey>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jns  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "calll  <ExFreePool>;subl $, %esp;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;movw %ax, -(%ebp)": 1,
                "subl $, %esp;testl %eax, %eax;js  <IoReportTargetDeviceChangeAsynchronous+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "je - <IoReportTargetDeviceChangeAsynchronous+>;cmpl $, %eax;jne  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %ebx;movl %ebx, (%esp)": 2,
                "movl %eax, %esi;testl %eax, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;leal -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);movl %ebx, (%esp);movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %edx, (%esp);movl %ebx, (%esp);movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %ecx": 1,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %esi;leal (%esi), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl $, %eax;movl $, -(%ebp);movl -(%ebp), %edx;shll $, %edx;movl (%ebp), %ecx": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;movl $, -(%ebp);movl -(%ebp), %eax;shll $, %eax;movl -(%ebp), %edx": 2,
                "leal (%edx,%eax), %edi;movl -(%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);testl %ecx, %ecx": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);testl %ecx, %ecx;je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "jmpl *-(,%edx,);movl (%edi), %eax;movl (%edi), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl (%edi), %eax;movl (%edi), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl (%esi), %eax": 2,
                "jl  <IoReportTargetDeviceChangeAsynchronous+>;jg  <IoReportTargetDeviceChangeAsynchronous+>;cmpl %eax, -(%ebp);jb  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax": 2,
                "adcl -(%ebp), %edx;cmpl %edx, -(%ebp);jg  <IoReportTargetDeviceChangeAsynchronous+>;jl  <IoReportTargetDeviceChangeAsynchronous+>;cmpl %eax, -(%ebp)": 2,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;movl (%esi), %eax;movl $, %edx;addl -(%ebp), %eax;adcl -(%ebp), %edx": 2,
                "movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %edx, (%esp);movl %ecx, (%esp);movl (%edi), %eax": 2,
                "calll  <DbgPrint>;testl %eax, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%esp);movl $, (%esp)": 33,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl (%edi), %eax;movl (%edi), %edx": 1,
                "movl -(%ebp), %edx;addl (%esi), %edx;cmpl %edx, %eax;jae  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %edx": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <IoReportTargetDeviceChangeAsynchronous+>;addl $, %ecx": 1,
                "cmpl -(%ebp), %ecx;jne - <IoReportTargetDeviceChangeAsynchronous+>;addl $, -(%ebp);movl -(%ebp), %ecx;cmpl %ecx, -(%ebp)": 1,
                "testb %al, %al;je  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;movl %eax, (%esp);calll  <ExFreePool>": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;movl %eax, (%esp);calll - <ZwClose>;subl $, %esp;movl -(%ebp), %eax": 4,
                "movl %eax, (%esp);calll - <ZwClose>;subl $, %esp;cmpl $, %ebx;sete %al": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;testl %eax, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;movl %eax, (%esp)": 1,
                "cmpl $, (%ebx);jne  <IoReportTargetDeviceChangeAsynchronous+>;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl (%ebp), %ebx;movl (%ebx), %eax": 1,
                "movl %eax, (%esp);calll - <IoGetDmaAdapter+>;subl $, %esp;movl %eax, (%esp);movl (%ebp), %edx": 2,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;cmpl $, -(%ebp);je  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %ebx;movl (%ebx), %eax": 1,
                "jmp  <IoReportTargetDeviceChangeAsynchronous+>;movzbl (%edi), %ecx;movl $, %esi;movzbl %cl, %edx;movl %edx, -(%ebp)": 1,
                "cmpb $, %cl;ja  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;jmpl *-(,%eax,);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;cmpl (%eax), %edx;jb  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %ebx;leal -(%ebx,%edx), %eax": 1,
                "setbe %bl;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %ebx;movl (%ebx), %eax;movl $, %ebx": 1,
                "movl %edx, -(%ebp);addl $, %eax;adcl $, %edx;cmpl %edx, %esi;jg  <IoReportTargetDeviceChangeAsynchronous+>": 2,
                "jg  <IoReportTargetDeviceChangeAsynchronous+>;jl  <IoReportTargetDeviceChangeAsynchronous+>;cmpl %eax, %ebx;ja  <IoReportTargetDeviceChangeAsynchronous+>;movl %ecx, -(%ebp)": 2,
                "subl $, %esp;movl (%edi), %ebx;movl (%edi), %eax;movl (%edi), %edx;addl $, %edx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi);movl (%ebp), %eax": 1,
                "cmpb $, -(%ebp);je  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %ebx;movl %ebx, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %ebx;cmpl %eax, (%ebx);ja - <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%esp);movl $, (%esp)": 1,
                "jne - <IoReportTargetDeviceChangeAsynchronous+>;jmp - <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %ebx;cmpb $, (%ebx);jne - <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl (%esi), %eax": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;movl %edi, %eax;testb %al, %al;je  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%esp)": 1,
                "movl $, (%esi);movl $, %ebx;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl %eax, (%esp);calll - <IoGetDmaAdapter+>": 1,
                "calll - <IoGetDmaAdapter+>;subl $, %esp;movl %eax, %ebx;movl %eax, (%esp);movl $, (%esp)": 2,
                "subl $, %esp;movl %eax, (%esi);testl %eax, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;movl %ebx, (%esp)": 2,
                "calll  <ExFreePool>;subl $, %esp;movl $, (%esi);jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%esi)": 1,
                "leal (%esi), %eax;movl %eax, (%esp);calll *-;subl $, %esp;leal (%esi), %eax": 1,
                "movl (%esi), %eax;cmpl $, (%eax);je  <IoReportTargetDeviceChangeAsynchronous+>;movl $, -(%ebp);movl -(%ebp), %edx": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;movl $, %ebx;movl -(%ebp), %eax;addl %eax, %eax;movl %eax, -(%ebp)": 1,
                "movl (%edi), %eax;movl (%edi), %edx;movl %eax, (%esp);movl %edx, (%esp);movl -(%ebp), %eax": 2,
                "movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp);movl -(%ebp), %eax;addl $, %eax": 2,
                "calll  <DbgPrint>;jmp  <IoReportTargetDeviceChangeAsynchronous+>;addl $, %ebx;movl -(%ebp), %edx;cmpl (%edx), %ebx": 1,
                "movl $, %ebx;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl (%esi), %eax;testl %eax, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %esi;movl %ecx, %ebx;movl %edx, (%esp)": 1,
                "movl %eax, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;movl (%esi), %ebx;addl $, %esi": 1,
                "leal (%ebx), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <RtlEqualUnicodeString>": 1,
                "testb %al, %al;je  <IoReportTargetDeviceChangeAsynchronous+>;movl (%ebp), %eax;movl %ebx, (%eax);movl $, %eax": 1,
                "movw %dx, -(%ebp);movl (%ebp), %edx;movl %edx, -(%ebp);movl %eax, (%esp);leal -(%ebp), %eax": 1,
                "movl (%ebp), %edx;movl %edx, -(%ebp);movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edx, -(%ebp);movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;movl %ebx, (%eax);movl $, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;cmpl (%eax), %esi;jne  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "cmpl (%eax), %ebx;je  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 4,
                "subl $, %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwEnumerateKey>": 1,
                "js  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);shrl %eax": 1,
                "movl %eax, (%esp);calll - <IoGetDmaAdapter+>;subl $, %esp;testl %eax, %eax;js  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;movl %eax, %edi": 2,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;movl %eax, %edi;movl $, %edx;testb $, %al;je  <IoReportTargetDeviceChangeAsynchronous+>": 2,
                "movb $, %dl;testl $, %edi;je  <IoReportTargetDeviceChangeAsynchronous+>;movw $, (%edi);addl $, %edi": 3,
                "movl %edx, -(%ebp);addl $, %eax;movl %eax, -(%ebp);movl $, %ecx;movl -(%ebp), %edi": 1,
                "movl %edx, (%eax);movl %eax, (%edx);movl -(%ebp), %edx;movl %eax, (%edx);addl $, (%edx)": 1,
                "cmpl $, -(%ebp);je  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%eax), %eax;movl -(%ebp), %edx;movzwl (%edx), %edx;cmpw %dx, (%eax);je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "subl $, %esp;testl %esi, %esi;je  <IoReportTargetDeviceChangeAsynchronous+>;testl $, %esi;jne  <IoReportTargetDeviceChangeAsynchronous+>": 2,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;testl $, %esi;jne  <IoReportTargetDeviceChangeAsynchronous+>;leal (%esi), %edx;subl $, %esi": 2,
                "addl $, %eax;movw %ax, (%esi);testw %ax, %ax;jne  <IoReportTargetDeviceChangeAsynchronous+>;leal (%esi), %eax": 1,
                "movl $, (%esp);calll  <KeBugCheckEx>;movl , %eax;movl (%eax), %ebx;movl %ebx, %edi": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;movb $, (%ebx);leal (%ebx), %edi;movb $, %dl;testl $, %edi": 1,
                "addl $, %eax;cmpl %eax, %edx;jle  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%esp);movl $, (%esp)": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%esi), %eax;movzbl (%eax), %eax": 1,
                "movl $, (%esp);movl %eax, (%esp);calll  <memset>;cmpl $, -(%ebp);je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %edx;movl -(%ebp), %eax;cmpl (%eax), %edx": 2,
                "movl -(%ebp), %ecx;addl $, %ecx;calll  <KeSetTimer+>;movl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;leal (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testl %eax, %eax;js  <IoReportTargetDeviceChangeAsynchronous+>;movl (%ebx), %eax;movl (%eax), %eax;movl $, (%eax)": 1,
                "jne - <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %edi;movl -(%ebp), %esi;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl $, %ebx": 1,
                "movl (%eax), %eax;movl -(%ebp), %ecx;movzwl (%ecx), %ecx;cmpw %cx, (%eax);je  <IoReportTargetDeviceChangeAsynchronous+>": 2,
                "movzwl (%ecx), %ecx;cmpw %cx, (%eax);je  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%esp);movl $, (%esp)": 2,
                "movl %edx, -(%ebp);testb $, %dl;je  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %fs:, %eax;movl -(%ebp), %edx;cmpl (%eax), %edx;je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "cmpl %eax, (%edx);je  <IoReportTargetDeviceChangeAsynchronous+>;calll  <KiCheckForKernelApcDelivery>;movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "calll - <IoDeleteDevice>;subl $, %esp;movl $, (%ebx);jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl %esi, (%esp)": 1,
                "js  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%ebx);movl %edi, (%esi);movl $, %edx;movl %esi, %ecx": 1,
                "movl $, (%esi);movl $, %edx;movl %esi, %ecx;calll - <IofCompleteRequest>;movl $, %edi": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;movl (%edi), %eax;movl (%eax), %edx;movl %edx, (%esp);movl (%eax), %eax": 1,
                "jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl (%esi), %edi;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl $, %edi;jmp  <IoReportTargetDeviceChangeAsynchronous+>": 2,
                "movl (%ebp), %eax;movl (%eax), %edi;movl (%edi), %eax;movl (%eax), %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;movl (%edi), %eax;movl (%eax), %eax;movl (%eax), %edx": 1,
                "movzwl (%eax), %eax;movw %ax, (%ecx);movl (%ebx), %eax;movl (%eax), %edx;movl (%eax), %eax": 1,
                "subl $, %esp;testl %edi, %edi;je  <IoReportTargetDeviceChangeAsynchronous+>;testl $, %edi;jne  <IoReportTargetDeviceChangeAsynchronous+>": 2,
                "leal (%edi), %eax;cmpl %eax, (%edi);je  <IoReportTargetDeviceChangeAsynchronous+>;calll  <KiCheckForKernelApcDelivery>;movl (%ebx), %eax": 1,
                "calll - <IoDeleteDevice>;subl $, %esp;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl (%esi), %edi;movl (%ebp), %eax": 1,
                "movl (%edx), %eax;cmpl $, %eax;ja  <IoReportTargetDeviceChangeAsynchronous+>;cmpl $, %eax;jae  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "movl %edx, (%eax);movl -, %edx;movl %edx, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "jmp - <IoReportTargetDeviceChangeAsynchronous+>;movl %edi, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl %eax, -(%ebp);leal (%edi), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "calll  <RtlCreateUnicodeString>;subl $, %esp;testb %al, %al;jne  <IoReportTargetDeviceChangeAsynchronous+>;leal -(%ebp), %eax": 2,
                "movw $, (%edi);movl -(%ebp), %eax;movl %eax, (%esp);leal (%esi), %eax;movl %eax, (%esp)": 1,
                "cmpl %eax, (%ebx);je  <IoReportTargetDeviceChangeAsynchronous+>;calll  <KiCheckForKernelApcDelivery>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movw $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl , %eax;movl (%eax), %ebx": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl (%ebx), %edi;jne  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "testb %al, %al;jne  <IoReportTargetDeviceChangeAsynchronous+>;leal (%ebx), %ecx;calll  <KeSetTimer+>;movl %edi, (%ebx)": 1,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;leal (%ebx), %ecx;calll  <KeSetTimer+>;movl %edi, (%ebx);movzwl (%edi), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <IoGetDmaAdapter+>;subl $, %esp;movl %eax, %esi": 1,
                "movl $, %eax;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movl $, -(%ebp);leal -(%ebp), %edx": 1,
                "jbe  <IoReportTargetDeviceChangeAsynchronous+>;movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %edx, (%esp);calll  <RtlAppendUnicodeStringToString>;subl $, %esp;movl -(%ebp), %eax;addl $, %eax": 1,
                "subl $, %esp;testl %eax, %eax;js  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl $, -(%ebp);movl $, %esi;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl $, %esi;jmp  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "cmpxchgl %edi, (%ebx);cmpl %eax, %edx;jne  <IoReportTargetDeviceChangeAsynchronous+>;leal (%ebx), %ecx;calll  <KeSetEventBoostPriority+>": 1,
                "calll  <KiCheckForKernelApcDelivery>;movl -(%ebp), %eax;testl %eax, %eax;je  <IoReportTargetDeviceChangeAsynchronous+>;movl (%eax), %eax": 1,
                "subl $, %esp;movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp);calll  <RtlFreeUnicodeString>": 2,
                "jne - <IoReportTargetDeviceChangeAsynchronous+>;movl %esi, (%esp);calll  <ExFreePool>;subl $, %esp;leal -(%ebp), %esp": 1,
                "cmpw $, -(%eax);jne  <IoReportTargetDeviceChangeAsynchronous+>;addl $, %esi;cmpl %eax, %ecx;je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;addl $, %esi;cmpl %eax, %ecx;je  <IoReportTargetDeviceChangeAsynchronous+>;cmpw $, (%eax)": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;leal (%ebx), %esi;movl %ebx, -(%ebp);movl $, -(%ebp);movl %ecx, %edi": 1,
                "movl (%edx,%ecx), %eax;testl %eax, %eax;jne  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jne  <IoReportTargetDeviceChangeAsynchronous+>;movl -(%ebp), %eax;movl %eax, (%esp);movl %edx, (%esp);calll - <IoReportTargetDeviceChangeAsynchronous+>": 2,
                "movl -(%ebp), %ecx;movw %dx, (%eax,%ecx,);addl $, %ecx;movl %ecx, -(%ebp);cmpl %esi, -(%ebp)": 1,
                "jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl %ebx, %edi;movl %ebx, %eax;cmpl %eax, -(%ebp);jne  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "movl %eax, (%esp);movl $, (%esp);calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, (%esi)": 1,
                "movl (%ecx), %eax;movw %di, (%eax,%ebx);movl (%ecx), %eax;leal (%edi), %esi;movw %si, (%eax,%ebx)": 1,
                "movl %edx, (%eax);movl $, %eax;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl $, %eax;jmp  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "jae  <IoReportTargetDeviceChangeAsynchronous+>;cmpw $, (%ecx);je  <IoReportTargetDeviceChangeAsynchronous+>;movl %ecx, %eax;jmp  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "ja - <IoReportTargetDeviceChangeAsynchronous+>;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl %ecx, %eax;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl %ecx, %eax": 1,
                "jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl %ecx, %eax;jmp  <IoReportTargetDeviceChangeAsynchronous+>;movl %ecx, %eax;testl %ebx, %ebx": 1,
                "subl %ecx, %eax;sarl %eax;addl %eax, %eax;movw %ax, (%ebx);movl $, %eax": 1,
                "movl (%ecx), %esi;cmpb $, (%ecx);jne  <IoReportTargetDeviceChangeAsynchronous+>;movzbl (%esi), %eax;movb %al, (%ecx)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl $, (%ebx);je  <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, (%ebx);je  <IoReportTargetDeviceChangeAsynchronous+>;cmpb $, -(%ebp)": 1,
                "movsbl (%ebx), %eax;cmpl %eax, %edx;jne  <IoReportTargetDeviceChangeAsynchronous+>;movl %fs:, %eax;cmpl (%eax), %esi": 1,
                "subl $, %esp;cmpb $, -(%ebp);jne  <IoReportTargetDeviceChangeAsynchronous+>;movb $, (%esi);cmpw $, (%esi)": 1,
                "cmpb $, (%esi);jne  <IoReportTargetDeviceChangeAsynchronous+>;cmpw $, (%esi);jne  <IoReportTargetDeviceChangeAsynchronous+>;cmpl $, (%ebx)": 2,
                "calll *-;cmpb $, %al;ja  <IoReportTargetDeviceChangeAsynchronous+>;movl $, (%esp);movl $, (%esp)": 4,
                "movl (%ebx), %edx;testb $-, %dl;je  <IoReportTargetDeviceChangeAsynchronous+>;pause;jmp - <IoReportTargetDeviceChangeAsynchronous+>": 1,
                "jne - <IoReportTargetDeviceChangeAsynchronous+>;movl (%esi), %edx;movl (%esi), %eax;movl %eax, (%edx);movl %edx, (%eax)": 1,
                "movl %edx, (%eax);movl $, (%esi);movl %fs:, %eax;movb $, (%esi);movzbl (%eax), %edx": 1,
                "movb $, (%esi);movzbl (%eax), %edx;movb %dl, (%esi);movl (%eax), %edx;movl %edx, (%esi)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, %eax;xchgl %eax, (%edi);movl $, %edi": 2,
                "movzbl (%esi), %eax;movl %edi, %edx;testb %dl, %dl;je  <IoReportTargetDeviceChangeAsynchronous+>;movl %fs:, %edx": 1,
                "je  <IoReportTargetDeviceChangeAsynchronous+>;movzbl %al, %eax;movl -(,%eax,), %ecx;movl $, %edx;calll  <KeLeaveGuardedRegion+>": 1,
                "jmp  <KiDeliverApc+>;movl (%eax), %edx;movl (%eax), %eax;movl %eax, (%edx);movl %edx, (%eax)": 1,
                "movl -(%ebp), %ebx;calll *-;movl %ebx, (%esp);movl %esi, (%esp);movl -(%ebp), %ecx": 1,
                "leal -(%ebp), %edx;calll *-;movb $, (%ebx);movl (%ebx), %eax;cmpl %eax, %esi": 1,
                "movl (%ebx), %eax;movl %esi, (%eax);movl (%ebx), %eax;movl %esi, (%eax);movl (%ebx), %eax": 1,
                "movl %esi, (%eax);movl (%ebx), %eax;leal (%ebx), %edx;cmpl %edx, %eax;jne  <KiCheckForKernelApcDelivery+>": 1,
                "movb $, (%ebx);movl $, (%ebx);movb $, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "cmpb $, %al;jbe  <KeInsertQueueApc+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "movzbl (%ebx), %esi;movl %esi, %eax;testb %al, %al;je  <KeInsertQueueApc+>;movb $, (%ebx)": 1,
                "calll  <KiiSpinOnSpinLock+>;movl (%ebx), %edx;movl (%ebx), %eax;movl %eax, (%edx);movl %edx, (%eax)": 1,
                "addl $, %ecx;calll  <KeReleaseSemaphore+>;leal -(%ebp), %ecx;calll *-;movl %esi, %eax": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl -(,%eax,), %edi": 1,
                "movl %edx, -(%ebp);je  <KeAreAllApcsDisabled+>;movl $, -(%ebp);movl $, -(%ebp);subl $, %ebx": 1,
                "movl $, -(%ebp);subl $, %ebx;movl %ebx, -(%ebp);movl %edi, -(%ebp);movl %esi, %edi": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%esi), %eax;movl (%eax), %edx;movl (%eax), %eax": 1,
                "movl %edx, (%eax);cmpl %eax, %edx;jne  <KeAreAllApcsDisabled+>;movl -(,%edi,), %eax;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;xorl %eax, (%edx);movzbl (%ebx), %eax;testb %al, %al;js  <KeAreAllApcsDisabled+>": 1,
                "cmpb (%ebx), %al;jle  <KeAreAllApcsDisabled+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movb $, (%ebx);movb $, (%ebx);movl %fs:, %eax": 1,
                "movb $, (%ebx);movzbl (%eax), %edx;movb %dl, (%ebx);movl (%eax), %edx;movl %edx, (%ebx)": 2,
                "subl $, -(%ebp);je  <KeAreAllApcsDisabled+>;cmpl %esi, -(%ebp);jne  <KeAreAllApcsDisabled+>;movl -(%ebp), %eax": 1,
                "addl $, %edi;cmpl $, -(%ebp);je  <KeAreAllApcsDisabled+>;cmpl $, -(%ebp);je  <KeAreAllApcsDisabled+>": 1,
                "cmpl $, -(%ebp);je  <KeAreAllApcsDisabled+>;cmpl $, -(%ebp);je  <KeAreAllApcsDisabled+>;cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %edi;calll *-;cmpb $, %al;ja  <KeAreAllApcsDisabled+>;movl $, (%esp)": 1,
                "movl %eax, (%esp);calll  <KeSetPriorityThread>;subl $, %esp;movl $, (%esp);leal -(%ebp), %ebx": 1,
                "leal -(%ebp), %ebx;movl %ebx, (%esp);calll  <KeInitializeTimerEx>;subl $, %esp;movl $, (%esp)": 1,
                "calll  <KeInitializeDpc>;subl $, %esp;movl %esi, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %esi, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "leal -(%ebp), %esi;leal -(%ebp), %ebx;movl %esi, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl %ebx, (%esp);movl $, (%esp);calll  <KeWaitForMultipleObjects>": 1,
                "calll  <DbgPrint>;testl %eax, %eax;je - <KeAreAllApcsDisabled+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <DbgPrint>;jmp - <KeAreAllApcsDisabled+>;nop;nop": 1,
                "jne - <KeAreAllApcsDisabled+>;addl %eax, %ebx;jmp  <KeAreAllApcsDisabled+>;movl %eax, %ebx;movb $, (%ebx)": 1,
                "movzbl (%ebp), %eax;movb %al, -(%ebp);movl , %eax;testl %eax, %eax;je  <KeAreAllApcsDisabled+>": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %eax;leal (%eax), %esi": 1,
                "movl (%edx), %eax;cmpl %eax, %ebx;jb  <KeAreAllApcsDisabled+>;movl %eax, %edi;addl (%edx), %edi": 1,
                "addl (%edx), %edi;cmpl %edi, %ebx;jae  <KeAreAllApcsDisabled+>;movl (%ebp), %ecx;movl %edx, (%ecx)": 1,
                "subl $, %esp;cmpl %eax, %esi;jae  <KeAreAllApcsDisabled+>;movl %esi, %edx;movl $, %ebx": 1,
                "movl $, %esi;jmp  <KeAreAllApcsDisabled+>;movl (%edi,%esi,), %ebx;testl %ebx, %ebx;je  <KeAreAllApcsDisabled+>": 1,
                "jae  <KeAreAllApcsDisabled+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;subl (%eax), %ebx;movl %ebx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <KeAreAllApcsDisabled+>;jmp  <KeAreAllApcsDisabled+>;movl $, (%esp);leal -(%ebp), %edi;movl %edi, (%esp)": 1,
                "subl $, %esp;testl %eax, %eax;js  <KeAreAllApcsDisabled+>;movl $, (%esp);leal -(%ebp), %eax": 1,
                "js  <KeAreAllApcsDisabled+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl (%eax), %ebx;testl %ebx, %ebx;je  <KeAreAllApcsDisabled+>;movl $, %edx;movl (%eax), %ecx": 1,
                "je  <KeAreAllApcsDisabled+>;movl $, %edx;movl (%eax), %ecx;cmpl %edi, %ecx;ja  <KeAreAllApcsDisabled+>": 1,
                "addl %edx, %ebx;addl $, %eax;cmpl %edi, %eax;jne - <KeAreAllApcsDisabled+>;movl %ebx, %edx": 1,
                "subl $, %esp;movl $, (%esp);calll - <InbvDisplayString>;subl $, %esp;movl $, %eax": 1,
                "pushl %edi;pushl %esi;pushl %ebx;subl $, %esp;movl -, %ebx": 2,
                "movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;nop;jmp - <KeAreAllApcsDisabled+>": 1,
                "movb $, -(%ebp);movl $, %edi;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %eax;movl %eax, (%esp);calll  <RtlImageNtHeader>;subl $, %esp;movl (%eax), %eax": 1,
                "movl $, %eax;movl -(%ebp), %ecx;movl %ecx, (%esp);movl %ebx, (%esp);movl %edx, (%esp)": 1,
                "addl $, %edi;cmpl (%ebp), %edi;jne - <KeAreAllApcsDisabled+>;leal -(%ebp), %esp;popl %ebx": 1,
                "cmpl (%ebp), %edi;jne - <KeAreAllApcsDisabled+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl (%ebp), %edi;movzbl (%ebp), %ebx;calll - <InbvIsBootDriverInstalled>;testb %al, %al;je  <KeAreAllApcsDisabled+>": 1,
                "subl $, %esp;testb %bl, %bl;je  <KeAreAllApcsDisabled+>;cmpl $, (%ebp);je  <KeAreAllApcsDisabled+>": 1,
                "calll - <InbvDisplayString>;subl $, %esp;movl $, (%esp);movl $, (%esp);calll - <KeAreAllApcsDisabled+>": 3,
                "subl $, %esp;movl $, (%esp);movl $, (%esp);calll - <KeAreAllApcsDisabled+>;subl $, %esp": 3,
                "movl %esi, (%esp);movl , %eax;movl %eax, (%esp);calll - <KeAreAllApcsDisabled+>;subl $, %esp": 1,
                "calll - <InbvDisplayString>;subl $, %esp;movl %esi, (%esp);calll - <InbvDisplayString>;subl $, %esp": 1,
                "movl %esi, (%esp);calll  <RtlCaptureContext>;subl $, %esp;movl %esi, (%esp);calll  <KeIAllocateGdtSelectors+>": 2,
                "jmp  <KeAreAllApcsDisabled+>;movl %ebx, -(%ebp);movl %ebx, -;movl (%ebp), %eax;movl %eax, ": 1,
                "cmpl $, %ebx;jne  <KeAreAllApcsDisabled+>;cmpl $, (%ebp);jne  <KeAreAllApcsDisabled+>;cmpl $, (%ebp)": 1,
                "movl $, %edi;movl $, %esi;movb $, -(%ebp);jmp  <KeAreAllApcsDisabled+>;movl (%ebp), %eax": 3,
                "addl $, %eax;movl %eax, ;movl $, -;jmp  <KeAreAllApcsDisabled+>;movl $, -": 1,
                "movl $, -;jmp  <KeAreAllApcsDisabled+>;movl $, -;movl $, -(%ebp);movl $, %edi": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);movl %eax, ;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll - <KeAreAllApcsDisabled+>;subl $, %esp": 4,
                "calll - <KeAreAllApcsDisabled+>;subl $, %esp;jmp  <KeAreAllApcsDisabled+>;cmpl $, -(%ebp);je  <KeAreAllApcsDisabled+>": 1,
                "calll  <DbgPrint>;cmpb $, -(%ebp);je  <KeAreAllApcsDisabled+>;testl %esi, %esi;je  <KeAreAllApcsDisabled+>": 1,
                "movl %eax, ;cmpb $, -;je  <KeAreAllApcsDisabled+>;movl $, %ebx;movb %fs:, %al": 1,
                "calll - <KeAreAllApcsDisabled+>;subl $, %esp;cmpb $, -;jne  <KeAreAllApcsDisabled+>;cmpb $, -": 1,
                "jne  <KeAreAllApcsDisabled+>;cmpb $, -;je  <KeAreAllApcsDisabled+>;movl $, (%esp);calll - <InbvDisplayString>": 1,
                "movl $, (%esp);calll - <KeAreAllApcsDisabled+>;subl $, %esp;movl $, (%esp);movl $, (%esp)": 1,
                "calll - <KeAreAllApcsDisabled+>;subl $, %esp;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;jmp - <KeAreAllApcsDisabled+>;movl $, -(%ebp);jmp  <KeAreAllApcsDisabled+>;movl $, -(%ebp)": 1,
                "testl %ebx, %ebx;je  <KeAreAllApcsDisabled+>;movl $, %esi;movl %esi, %edx;movzbl %dl, %eax": 1,
                "calll *(%ebx);subl $, %esp;orl %eax, %esi;movl (%ebx), %ebx;testl %ebx, %ebx": 1,
                "subl $, %esp;orl %eax, %esi;movl (%ebx), %ebx;testl %ebx, %ebx;jne - <KeAreAllApcsDisabled+>": 1,
                "movl %edx, (%ebx);movb $, (%ebx);movl -, %edx;movl $, (%ebx);movl %edx, (%ebx)": 1,
                "movl $, %esi;cmpb $, (%ebx);jne  <KeRegisterBugCheckReasonCallback+>;movl (%ebp), %edx;movl %edx, (%ebx)": 1,
                "calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;je  <KeRegisterNmiCallback+>": 1,
                "movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl %ebx, (%ebx);movl $, %ecx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <KeAreAllApcsDisabled+>": 1,
                "movl $, -;cli;movl , %eax;leal -(%eax), %edx;lock": 1,
                "cmpl %ecx, %eax;je  <KeQueryTickCount+>;pause;movl , %eax;movl %eax, (%edx)": 1,
                "calll *-;cmpb $, %al;jbe  <KeQuerySystemTime+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;testl %esi, %esi;je  <KeQuerySystemTime+>;leal -(%ebp), %edi;movl %edi, (%esp)": 1,
                "movl %edx, (%esp);calll - <KeQuerySystemTime>;subl $, %esp;movl (%ebx), %eax;movl %eax, ": 1,
                "movzbl %al, %ecx;calll *-;cmpb $, -(%ebp);je  <KeQuerySystemTime+>;movl $, (%esp)": 1,
                "jne  <KeQuerySystemTime+>;andl $, %edi;shll $, %edi;addl $, %edi;cmpl (%edi), %edi": 1,
                "movl %edi, (%eax);movl %esi, (%eax);movl %ecx, (%esi);movl %ecx, -(%ebp);cmpl %edx, %ebx": 1,
                "movl %fs:, %eax;andl $, %edx;leal (%eax,%edx,), %edi;movl %edi, %ecx;calll  <KiiSpinOnSpinLock+>": 1,
                "movl %edi, %ecx;calll  <KiiSpinOnSpinLock+>;movl %esi, %edx;movl %ebx, %ecx;calll  <KeUpdateSystemTime+>": 1,
                "movl (%ebx), %eax;movl %eax, ;movl (%ebx), %eax;movl %eax, ;jmp - <KeQuerySystemTime+>": 1,
                "pause;movl -, %edx;movl , %eax;movl -, %ecx;cmpl %ecx, %edx": 1,
                "movl (%ebp), %edx;movl %eax, ;movl %edx, %ecx;cmpl $, %edx;jae  <KeSetTimeIncrement+>": 1,
                "movl $, %ecx;movl %ecx, -;movl %eax, ;movl %eax, ;movl %eax, ": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);jmp  <KeFindConfigurationNextEntry+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "testl %ebx, %ebx;je  <KeFindConfigurationNextEntry+>;movl (%esi), %eax;testl %eax, %eax;je  <KeFindConfigurationNextEntry+>": 1,
                "jne  <KeFindConfigurationNextEntry+>;movl (%ebp), %edx;cmpl %edx, (%ebx);jne  <KeFindConfigurationNextEntry+>;movl -(%ebp), %eax": 1,
                "testl %eax, %eax;jne  <KeFindConfigurationNextEntry+>;movl (%ebx), %ebx;testl %ebx, %ebx;jne - <KeFindConfigurationNextEntry+>": 1,
                "movl %eax, (%esp);calll - <KeFindConfigurationNextEntry>;subl $, %esp;leave;retl $": 1,
                "movl %esi, (%eax);movl %esi, (%ebx);movl $, %ebx;movb %bl, (%esi);movl %fs:, %eax": 1,
                "cmpw $, (%ebx);je  <KeInsertByKeyDeviceQueue+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "int $;movl %fs:, %eax;movzbl (%eax), %eax;testb %al, %al;je  <KeInsertByKeyDeviceQueue+>": 1,
                "movl (%eax), %eax;cmpl (%eax), %edi;jae - <KeInsertByKeyDeviceQueue+>;movl (%eax), %edx;movl %eax, (%esi)": 1,
                "movl $, %ebx;movl %fs:, %eax;movzbl (%eax), %eax;testb %al, %al;je  <KeInsertByKeyDeviceQueue+>": 1,
                "je  <KeInsertByKeyDeviceQueue+>;leal -(%ebp), %ecx;calll *-;jmp  <KeInsertByKeyDeviceQueue+>;nop": 1,
                "cmpw $, (%ebx);je  <KeRemoveDeviceQueue+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebp), %edi;addl $, %edi;movl (%ebp), %ecx": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl (%ebx), %esi;jbe  <KeRemoveByKeyDeviceQueue+>": 1,
                "movl (%eax), %eax;movl %eax, (%edx);movl %edx, (%eax);movb $, (%ecx);movl %fs:, %eax": 1,
                "je  <KeRemoveByKeyDeviceQueueIfBusy+>;leal (%edi), %ecx;leal -(%ebp), %edx;calll *-;jmp  <KeRemoveByKeyDeviceQueueIfBusy+>": 1,
                "movl (%edi), %edx;movl (%edi), %eax;movl %eax, (%edx);movl %edx, (%eax);movb $, (%edi)": 1,
                "je  <KeRemoveEntryDeviceQueue+>;leal (%ebx), %ecx;leal -(%ebp), %edx;calll *-;jmp  <KeRemoveEntryDeviceQueue+>": 1,
                "cmpl %esi, (%eax);ja  <KeRemoveEntryDeviceQueue+>;jb  <KeRemoveEntryDeviceQueue+>;movl -(%ebp), %edx;cmpl %edx, (%eax)": 1,
                "jne - <KeRemoveEntryDeviceQueue+>;movzbl -(%ebp), %ecx;calll *-;addl $, %esp;popl %ebx": 1,
                "movl %eax, -(%ebp);movl %eax, %esi;movl (%eax), %ebx;lock;orl $, (%esp)": 1,
                "movl $, %edx;leal (%esi), %eax;lock;orl $, (%esp);movl %edx, %ecx": 3,
                "leal (%esi), %eax;lock;orl $, (%esp);movl %edx, %ecx;xchgl %ecx, (%eax)": 3,
                "pause;cmpl $, (%esi);jne - <KeRemoveEntryDeviceQueue+>;jmp - <KeRemoveEntryDeviceQueue+>;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);cmpb $, (%ebx);jg  <KeRemoveEntryDeviceQueue+>;movzbl (%ebx), %eax;cmpb $, %al": 1,
                "cmpb $, %cl;jg  <KeRemoveEntryDeviceQueue+>;movl $, %eax;subb (%ebx), %al;addb -(%ebp), %al": 1,
                "movb %al, -(%ebp);cmpb %dl, %al;jge  <KeRemoveEntryDeviceQueue+>;movb %dl, -(%ebp);movb $, (%ebx)": 1,
                "movl %edx, -(%ebp);movl %edx, -(%ebp);testl %eax, -(,%edx,);jne  <KeRemoveEntryDeviceQueue+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;jmp  <KeRemoveEntryDeviceQueue+>;movb $, (%ebx);calll *-": 1,
                "xchgl %eax, (%edi);movl -(%ebp), %eax;movl (%eax), %edi;testl %edi, %edi;jne  <KeRemoveEntryDeviceQueue+>": 1,
                "jne  <KeRemoveEntryDeviceQueue+>;calll *-;cmpb $, %al;ja  <KeRemoveEntryDeviceQueue+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movzbl (%ebx), %eax;cmpb $, %al;je  <KeRemoveEntryDeviceQueue+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movzbl (%ebx), %eax;movl -(%ebp), %edx": 2,
                "movl -(%ebp), %ecx;movl (%ecx), %eax;testl %eax, (%ebx);je  <KeRemoveEntryDeviceQueue+>;movb $, (%ebx)": 1,
                "movl (%ecx), %eax;testl %eax, (%ebx);je  <KeRemoveEntryDeviceQueue+>;movb $, (%ebx);movsbl (%ebx), %edi": 1,
                "jbe  <KeRemoveEntryDeviceQueue+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movzbl (%ebx), %eax;cmpb $, %al": 2,
                "je  <KeInsertQueueDpc+>;testb %al, %al;je  <KeInsertQueueDpc+>;cmpb $, %al;je  <KeInsertQueueDpc+>": 1,
                "movb %al, -(%ebp);movl %fs:, %eax;movl %eax, -(%ebp);movzwl (%ebx), %eax;cmpw $, %ax": 1,
                "movl %fs:, %eax;movl %eax, -(%ebp);movzwl (%ebx), %eax;cmpw $, %ax;jbe  <KeInsertQueueDpc+>": 1,
                "jne  <KeInsertQueueDpc+>;movzbl (%edi), %eax;testb %al, %al;jne  <KeInsertQueueDpc+>;movl $, (%esp)": 1,
                "movl (%esi), %eax;cmpl (%edi), %eax;jae  <KeInsertQueueDpc+>;movl (%edi), %edx;cmpl %edx, (%edi)": 1,
                "movl -(%ebp), %ecx;calll  <KiReleaseSpinLock>;movl $, %ecx;calll *-;movl $, %ebx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl %ecx, -(%ebp);movb %dl, -(%ebp)": 2,
                "movl (%ebx), %edx;movl %edx, (%ecx);movl %ecx, (%edx);movb $, (%ebx);movl $, (%ebx)": 1,
                "movl %ecx, (%edx);movb $, (%ebx);movl $, (%ebx);movl (%ebx), %edx;movl %edx, -(%ebp)": 1,
                "movl (%ebx), %edx;movl %edx, -(%ebp);movl (%ebx), %edi;movl (%ebx), %edx;leal -(%eax), %ecx": 1,
                "movzwl (%eax), %edx;movl $, (%esp);calll  <KeSetTimer+>;subl $, %esp;movl (%ebx), %eax": 3,
                "jmp  <KeInsertQueueDpc+>;leal (%ebx), %esi;cmpl %esi, %edx;jne  <KeInsertQueueDpc+>;movl $, (%esp)": 1,
                "subl $, %esp;movl (%ebx), %eax;movl (%eax), %ecx;cmpb $, (%eax);jne  <KeInsertQueueDpc+>": 2,
                "movzwl (%eax), %edx;movl $, (%esp);calll  <KeSetTimer+>;subl $, %esp;jmp  <KeInsertQueueDpc+>": 2,
                "cmpl $, -(%ebp);je  <KeInsertQueueDpc+>;movl -(%ebp), %edx;movzwl (%edx), %eax;cmpw $, %ax": 1,
                "cmpl %eax, %edx;jne  <KeInsertQueueDpc+>;movl -(%ebp), %eax;cmpb $, (%eax);jne  <KeInsertQueueDpc+>": 2,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %ecx;movl (%ecx), %eax;cmpl %ecx, %eax": 1,
                "movl , %eax;sti;movl %eax, %edx;subl %ebx, %edx;cmpl $, %edx": 1,
                "cmpl $, %edx;jle  <KeInsertQueueDpc+>;leal (%ebx), %eax;subl $, %ebx;movl %ebx, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;addl $, %eax;andl $, %eax": 1,
                "movl -(%ebp), %eax;addl $, %eax;andl $, %eax;movl %eax, -(%ebp);shll $, %eax": 1,
                "movl (%ebx), %edi;movl (%ebx), %eax;leal (%ebx), %edx;cmpl %edx, %eax;je  <KeInsertQueueDpc+>": 1,
                "calll  <KefAcquireSpinLockAtDpcLevel>;movl (%esi), %ebx;cmpl -(%ebp), %ebx;je  <KeInsertQueueDpc+>;movl (%ebx), %edx": 1,
                "movl %ebx, (%esp);calll *-(%ebp);subl $, %esp;movl -, %edx;calll *%edx": 1,
                "je  <KeRemoveQueueDpc+>;leal (%ebx), %eax;movl %eax, -(%ebp);movl %eax, %ecx;calll  <KiAcquireSpinLock>": 1,
                "cmpl $, -;jne  <KeFlushQueuedDpcs+>;movl (%ebx), %eax;testl %eax, %eax;jne  <KeFlushQueuedDpcs+>": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movw $, (%ebx);movw $, (%ebx)": 1,
                "subl $, %esp;movl (%ebp), %ebx;movw $, (%ebx);movw $, (%ebx);movl $, (%esp)": 1,
                "jbe  <KePulseEvent+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "subl $, %esp;movl $, %ecx;calll  <wcstombs+>;movl %eax, %edi;movl (%ebx), %esi": 4,
                "movl (%ebx), %esi;testl %esi, %esi;jne  <KePulseEvent+>;leal (%ebx), %eax;cmpl %eax, (%ebx)": 1,
                "movb %al, -(%ebp);movl (%ebx), %esi;movl $, (%ebx);testl %esi, %esi;jne  <KeSetEvent+>": 1,
                "jne  <KeSetEvent+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpb $, (%eax);jne  <KeSetEvent+>;movl -(%ebp), %esi;movl $, (%ebx);movzwl (%eax), %edx": 1,
                "movzbl -(%ebp), %edx;movb %dl, (%eax);movl %esi, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "calll  <RtlAssert>;subl $, %esp;calll *-;cmpb $, %al;jbe  <KeSetEventBoostPriority+>": 1,
                "movl $, (%ebx);movl (%ebx), %eax;movl (%eax), %ecx;cmpb $, (%eax);jne  <KeSetEventBoostPriority+>": 1,
                "movl %ebx, (%eax);movzbl (%esi), %eax;testb %al, %al;js  <KeSetEventBoostPriority+>;cmpb (%esi), %al": 1,
                "movl %edi, %eax;testb %al, %al;jne  <KeSetEventBoostPriority+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %fs:, %ecx;addl $, %ecx;calll  <KeReleaseSemaphore+>;movzbl -(%ebp), %ecx": 1,
                "movl %esp, %ebp;subl $, %esp;movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi": 1,
                "movl (%eax), %eax;movl (%eax), %eax;jmp  <KeSetEventBoostPriority+>;jmp - <KeSetEventBoostPriority+>;movl -(%ebp), %eax": 1,
                "jmp  <KeSetEventBoostPriority+>;jmp - <KeSetEventBoostPriority+>;movl -(%ebp), %eax;movl %eax, %fs:;leal -(%ebp), %eax": 1,
                "calll  <KeSaveStateForHibernate+>;subl $, %esp;movl (%ebp), %edx;andl $, (%edx);movzbl -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <KeSetEventBoostPriority+>;subl $, %esp": 1,
                "pushl %ebx;subl $, %esp;movzbl (%ebp), %edi;movl %fs:, %eax;movl (%eax), %esi": 1,
                "testl %eax, %eax;js  <KeSetEventBoostPriority+>;movl %edi, %eax;testb %al, %al;je  <KeSetEventBoostPriority+>": 1,
                "movl %edx, -(%ebp);movzbl (%ebp), %eax;movb %al, -(%ebp);movl %fs:, %eax;movl (%eax), %ebx": 1,
                "movb %al, -(%ebp);movl %fs:, %eax;movl (%eax), %ebx;movzbl (%ecx), %eax;andl $, %eax": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <KeSetEventBoostPriority+>;movl %fs:, %ecx;addl $, %ecx": 1,
                "pause;cmpl $, (%ebx);jne - <KeSetEventBoostPriority+>;jmp - <KeSetEventBoostPriority+>;movl %esi, -(%ebp)": 1,
                "subl $, %esp;movl (%edi), %edx;testb $-, %dl;je  <KeSetEventBoostPriority+>;pause": 1,
                "movl %edx, %eax;lock;cmpxchgl %ecx, (%edi);cmpl %eax, %edx;jne - <KeSetEventBoostPriority+>": 1,
                "leal -(%ebp), %ecx;calll *-;jmp  <KeSetEventBoostPriority+>;movl %edi, (%ebx);movl %ebx, (%ebx)": 1,
                "testb %al, %al;je  <KeSetEventBoostPriority+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %edx;xchgl %eax, (%edx);cmpl $, -(%ebp);je  <KeSetEventBoostPriority+>;movl -(%ebp), %ecx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl %ecx, %ebx;movzbl (%ecx), %eax": 2,
                "subl $, %esp;movl %ecx, %ebx;movzbl (%ecx), %eax;andl $, %eax;cmpl $, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movl , %eax;movl %eax, -(%ebp);movl -, %edx": 1,
                "cmpl $, (%ebx);jne  <KeSetEventBoostPriority+>;movl (%ebx), %eax;leal (%ebx), %edx;cmpl %edx, %eax": 1,
                "jne  <KeSetEventBoostPriority+>;movl (%ebx), %eax;leal (%ebx), %edx;cmpl %edx, %eax;jne  <KeSetEventBoostPriority+>": 1,
                "jmp  <KeSetEventBoostPriority+>;movl (%eax), %esi;cmpl $, (%esi);je  <KeSetEventBoostPriority+>;lock": 1,
                "jne  <KeSetEventBoostPriority+>;calll *-;cmpb $, %al;ja  <KeSetEventBoostPriority+>;movl $, (%esp)": 1,
                "movl $, (%ecx);movl $, (%ecx);movl $, (%ecx);addl $, %ecx;calll - <KeSetEventBoostPriority+>": 1,
                "movl $, (%ecx);addl $, %ecx;calll - <KeSetEventBoostPriority+>;popl %ebp;retl": 1,
                "jne  <KeAcquireGuardedMutex+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %eax;movzwl (%ebx), %edx;cmpw %dx, (%eax);je  <KeReleaseGuardedMutex+>;movl $, (%esp)": 1,
                "testl $, %esi;je  <KeReleaseGuardedMutex+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %ebx;calll *-;cmpb $, %al;jbe  <KeReleaseGuardedMutex+>;movl $, (%esp)": 1,
                "js  <KeAcquireGuardedMutexUnsafe+>;movl (%esi), %eax;testl %eax, %eax;je  <KeAcquireGuardedMutexUnsafe+>;cmpl -, %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;lock;btrl $, (%ebx)": 1,
                "je  <KeReleaseGuardedMutexUnsafe+>;movl %fs:, %eax;movl (%eax), %eax;cmpw $, (%eax);js  <KeReleaseGuardedMutexUnsafe+>": 1,
                "jae  <KeReleaseGuardedMutexUnsafe+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;testl %esi, %esi;je  <KeReleaseGuardedMutexUnsafe+>;testl $, %esi": 1,
                "subl $, %esp;movl %ecx, %ebx;movl %fs:, %eax;movl (%eax), %edi;movl %fs:, %eax": 1,
                "btrl $, (%ebx);setb %al;testb %al, %al;jne  <KeTryToAcquireGuardedMutex+>;movl %fs:, %eax": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <KeTryToAcquireGuardedMutex+>;calll - <KiCheckForKernelApcDelivery>;pause": 1,
                "pushl %ebx;subl $, %esp;movl %fs:, %eax;movl (%eax), %ebx;calll *-": 3,
                "cmpl (%eax), %ebx;je  <KeEnterGuardedRegion+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %ebx;calll *-;cmpb $, %al;jbe  <KeLeaveGuardedRegion+>;movl $, (%esp)": 1,
                "subl $, %esp;movl %fs:, %eax;cmpl (%eax), %ebx;je  <KeLeaveGuardedRegion+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpw $, (%ebx);js  <KeLeaveGuardedRegion+>": 1,
                "movzwl (%ebx), %eax;addl $, %eax;movw %ax, (%ebx);testw %ax, %ax;jne  <KeLeaveGuardedRegion+>": 1,
                "movl %esp, %ebp;subl $, %esp;movl %edx, -(%ebp);movl $, (%esp);movl $, (%esp)": 1,
                "lock;cmpxchgl %ecx, (%edx);testl %eax, %eax;jne - <KiIpiServiceRoutine+>;movl (%ebx), %eax": 1,
                "calll *%edx;subl $, %esp;movb %fs:, %dl;movzbl %dl, %edx;movl (%ebx), %eax": 1,
                "subl $, %esp;movb %fs:, %dl;movzbl %dl, %edx;movl (%ebx), %eax;addl $, %eax": 1,
                "movb %fs:, %dl;movzbl %dl, %edx;movl (%ebx), %eax;addl $, %eax;lock": 1,
                "addl $, %eax;lock;btrl %edx, (%eax);setb %dl;movl (%ebx), %edx": 1,
                "jmp  <KeIpiGenericCall+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll *(%ebp);subl $, %esp;movl %eax, %edi;movl %fs:, %eax": 1,
                "movl $, -;movl $, -;movl $, %edx;movl $, %eax;movl %eax, %ebx": 1,
                "movl $, -;movl , %eax;movl %eax, ;movl $, -;movl $, -": 1,
                "movl , %eax;movl %eax, ;movl $, -;movl $, -;movl $, -": 1,
                "leal (%ebx,%edx,), %eax;movl %eax, (%eax);movl %eax, (%eax);addl $, %edx;cmpl $, %edx": 1,
                "movsbl %dl, %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <KeSetTargetProcessorDpc>;subl $, %esp": 1,
                "addl $, %eax;cmpl $, %eax;jne - <KeIpiGenericCall+>;movl $, (%ebx);movl %esi, %eax": 1,
                "cmpl $, %eax;jne - <KeIpiGenericCall+>;movl $, (%ebx);movl %esi, %eax;testb %al, %al": 1,
                "je  <KeInitializeMutant+>;movl %fs:, %eax;movl (%eax), %edi;movl %edi, (%ebx);movl $, %ecx": 1,
                "cmpb $, %al;jbe  <KeReleaseMutant+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testb %al, %al;je  <KeReleaseMutant+>;movl %fs:, %eax;movl (%eax), %ebx;movl %fs:, %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl $-, (%esi);jne  <KeReleaseMutex+>": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <KiCheckForKernelApcDelivery+>;subl $, %esp": 1,
                "movl %edi, (%ebx);leal (%ebx), %eax;movl %eax, (%ebx);movl %eax, (%ebx);movl %esi, (%ebx)": 1,
                "jne  <KeReleaseMutex+>;movl %fs:, %ecx;addl $, %ecx;calll  <KeReleaseSemaphore+>;movl (%ebp), %ecx": 1,
                "movl (%eax), %edx;movl %edx, (%ebx);movl (%eax), %eax;movl %eax, (%ebx);movzbl (%ebp), %eax": 1,
                "movw $, (%ebx);leal (%ebx), %eax;movl %eax, (%ebx);movl %eax, (%ebx);leal (%ebx), %eax": 1,
                "movl %eax, (%ebx);movb $, (%ebx);movzbl -, %eax;movb %al, -(%ebp);movl $, %ecx": 1,
                "movl $, %edx;cmpb $, (%eax);jne  <KeReleaseMutex+>;movzwl (%eax), %edx;movl %edi, (%esp)": 1,
                "movzbl (%ebp), %ebx;movzbl (%esi), %eax;andl $, %eax;cmpb $, %al;je  <KeReleaseMutex+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl %esi, -": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl %esi, -;jne  <KeReleaseMutex+>": 1,
                "calll  <wcstombs+>;movl %fs:, %ecx;addl $, %ecx;calll  <KiiSpinOnSpinLock+>;movl (%ebx), %eax": 1,
                "movl (%ebx), %ebx;cmpl %ebx, %edi;je  <KeReleaseMutex+>;leal -(%ebx), %ecx;movl %esi, %edx": 1,
                "leal (%esi), %ecx;leal -(%ebp), %edx;calll  <wcstombs+>;cmpb $, -(%ebp);je  <KeReleaseMutex+>": 1,
                "je  <KeReleaseMutex+>;cmpl $, -(%ebp);jg  <KeReleaseMutex+>;testb %al, %al;jg  <KeReleaseMutex+>": 1,
                "jmp  <KeReleaseMutex+>;movl $, %edx;jmp  <KeReleaseMutex+>;movl $, %edx;movb %dl, (%ebx)": 2,
                "je  <KeReleaseMutex+>;movzbl -(%ebp), %eax;movb %al, (%ebx);movl -, %edx;calll *%edx": 1,
                "jg  <KeReleaseMutex+>;testb %al, %al;jns  <KeReleaseMutex+>;nop;leal (%esi), %esi": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;movl %fs:, %eax": 3,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl %esi, (%ebx);je  <KeAttachProcess+>": 1,
                "nop;calll - <KeIsExecutingDpc>;movzbl %al, %eax;movl %eax, (%esp);movzbl (%ebx), %eax": 1,
                "leal -(%ebp), %edi;leal (%ebx), %ecx;movl %edi, %edx;calll  <wcstombs+>;movl %fs:, %ecx": 1,
                "cmpb $, %al;jbe  <KeDetachProcess+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpb $, (%ebx);je  <KeDetachProcess+>;leal (%ebx), %ecx": 1,
                "cmpb $, (%ebx);jne  <KeDetachProcess+>;leal (%ebx), %eax;movl %eax, -(%ebp);cmpl (%ebx), %eax": 1,
                "cmpl %eax, (%ebx);je  <KeDetachProcess+>;movl $, (%esp);calll - <KeBugCheck>;movl (%ebx), %esi": 1,
                "movl %fs:, %ecx;addl $, %ecx;calll  <KiiSpinOnSpinLock+>;cmpl $, (%esi);jne  <KeDetachProcess+>": 1,
                "movl %eax, -(%ebp);movl %edi, (%esp);movl %eax, (%esp);calll - <KiCheckForKernelApcDelivery+>;subl $, %esp": 1,
                "movl %esi, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;cmpl %esi, (%ebx);jne  <KeStackAttachProcess+>": 1,
                "leal -(%ebp), %ecx;calll *-;jmp - <KeUnstackDetachProcess+>;cmpb $, (%ebx);je  <KeUnstackDetachProcess+>": 1,
                "jmp - <KeUnstackDetachProcess+>;cmpb $, (%ebx);je  <KeUnstackDetachProcess+>;cmpb $, (%ebx);jne  <KeUnstackDetachProcess+>": 1,
                "jne  <KeUnstackDetachProcess+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <KeUnstackDetachProcess+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpb $, (%esi);je  <KeUnstackDetachProcess+>;movl $, (%esp)": 1,
                "je  <KeUnstackDetachProcess+>;leal (%ebx), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <KiCheckForKernelApcDelivery+>;subl $, %esp;movl $, (%ebx)": 1,
                "calll  <KeSetTimer+>;cmpl (%ebx), %edi;je  <KeUnstackDetachProcess+>;movb $, (%ebx);movl $, %ecx": 1,
                "leal -(%ebp), %ecx;calll *-;movl (%ebp), %eax;movl %esi, (%eax);movl %ebx, %eax": 1,
                "jne  <KeAddSystemServiceTable+>;movl %ebx, %edx;shll $, %edx;cmpl $, -(%edx);jne  <KeAddSystemServiceTable+>": 1,
                "cmpl $, -(%edx);jne  <KeAddSystemServiceTable+>;movl %edx, %ebx;movl (%ebp), %edx;movl %edx, -(%ebx)": 1,
                "jbe  <KeRemoveSystemServiceTable+>;calll *-;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "cmpl $, %ebx;ja  <KeRemoveSystemServiceTable+>;movl %ebx, %eax;shll $, %eax;cmpl $, -(%eax)": 1,
                "movl $, -(%edx);movl $, %eax;cmpl $, %ebx;jne  <KeRemoveSystemServiceTable+>;movl $, -": 1,
                "movl $, (%esp);calll  <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %ebx;movl $, %edi": 1,
                "movl %eax, (%edx);movl %eax, ;movl , %eax;cmpl $, %eax;je  <KeRemoveSystemServiceTable+>": 1,
                "movl $, (%ebx);movl %eax, (%edx);movl %eax, ;movl $, %ecx;calll  <KefReleaseSpinLockFromDpcLevel>": 1,
                "movl $, %ecx;calll  <KefReleaseSpinLockFromDpcLevel>;movl (%esi), %eax;movl %eax, (%esp);calll  <wcstombs+>": 2,
                "movl $, %edi;jmp  <KeRemoveSystemServiceTable+>;movl $, %edi;movl $, %ecx;calll  <KefReleaseSpinLockFromDpcLevel>": 1,
                "calll *-;movl %eax, %edi;movl $, %ecx;calll  <KefAcquireSpinLockAtDpcLevel>;cmpb $, (%esi)": 1,
                "cmpl %edx, -(%eax);jne  <KeRemoveSystemServiceTable+>;movl (%ebx), %edx;movl (%ebx), %eax;movl %eax, (%edx)": 1,
                "movl %ebx, (%esp);calll  <ExFreePool>;subl $, %esp;movl $, %ebx;jmp  <KeRemoveSystemServiceTable+>": 1,
                "jne  <KeRemoveSystemServiceTable+>;movl , %eax;jmp  <KeRemoveSystemServiceTable+>;cmpl $, %eax;jne  <KeRemoveSystemServiceTable+>": 1,
                "cmpb $, -(%ebp);sbbl %eax, %eax;notl %eax;andl -(%ebp), %eax;jmp  <KeRemoveSystemServiceTable+>": 1,
                "movl (%ebp), %edx;movl %edx, -;jmp  <KeRemoveSystemServiceTable+>;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);calll - <KeRemoveSystemServiceTable+>;subl $, %esp;movl $, (%esp)": 1,
                "movb %al, ;popl %ebp;retl $;nop;nop": 1,
                "movzbl (%ecx), %eax;andl $, %eax;cmpb $, %al;je  <KeSetProfileIrql+>;movl $, (%esp)": 1,
                "movl $, (%edx);subl $, (%ebx);movl (%eax), %ecx;movl $, (%esp);calll  <KeSetTimer+>": 1,
                "movl (%esi), %edx;movl %edx, (%eax);movl %eax, (%edx);movl (%ebx), %eax;addl $, %eax": 1,
                "movl (%ebx), %eax;addl $, %eax;movl %eax, (%ebx);movb $, (%esi);cmpb $, (%esi)": 1,
                "movb $, (%esi);cmpb $, (%esi);je  <KeSetProfileIrql+>;movzbl (%esi), %ecx;movl %ecx, -(%ebp)": 1,
                "addl $, %eax;cmpl (%eax), %eax;jne  <KeSetProfileIrql+>;movl $, (%eax);calll *-": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl %ebx, %ecx;calll  <KeReleaseSemaphore+>": 1,
                "je  <KeSetProfileIrql+>;movl (%ebx), %eax;movl (%ebp), %edx;movl %eax, (%edx);leal (%ebx), %edx": 1,
                "movl %ecx, (%eax);movl %ecx, (%eax);leal (%eax), %ecx;movl %ecx, (%eax);movl %ecx, (%eax)": 2,
                "calll - <KeSetProfileIrql+>;subl $, %esp;movl %eax, %ebx;movl %fs:, %ecx;addl $, %ecx": 2,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;subl -(%ebp), %eax;sbbl -(%ebp), %edx;movl %eax, %ecx": 5,
                "movl %edx, (%eax);calll - <KeSetProfileIrql+>;movl (%edi), %eax;leal (%edi), %edx;movl %edx, (%ebx)": 1,
                "movl %edx, (%ebx);movl %eax, (%ebx);movl %esi, (%eax);movl %esi, (%edi);movl (%ebp), %esi": 1,
                "movl %esi, -(%ebp);movzbl -(%ebp), %esi;jmp  <KeRemoveQueue+>;movl (%edi), %eax;subl $, %eax": 1,
                "jb  <KeRemoveQueue+>;movl (%edi), %eax;addl $, %eax;movl %eax, (%edi);movl $, %esi": 1,
                "calll  <RtlAssert>;subl $, %esp;movzbl (%ebx), %eax;testb %al, %al;je  <KeRemoveQueue+>": 1,
                "subl $, %esp;movb $, (%ebx);cmpl $, -(%ebp);je  <KeRemoveQueue+>;calll *-": 1,
                "movb $, (%ebx);cmpl $, -(%ebp);je  <KeRemoveQueue+>;calll *-;cmpb $, %al": 1,
                "cmpb $, %al;ja  <KeRemoveQueue+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl %edx, -(%ebp);jmp  <KeRemoveQueue+>;calll *-;movb %al, (%ebx);movl -(%ebp), %ecx": 1,
                "movzbl (%ebx), %eax;andl $, %eax;cmpb $, %al;je  <KeRundownQueue+>;movl $, (%esp)": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <KeRundownQueue+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %eax;movb $, (%eax);movb $, (%eax);movl (%ebp), %edx;movl %edx, (%eax)": 1,
                "je  <KeReadStateSemaphore+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jbe  <KeReleaseSemaphore+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %ecx;calll  <wcstombs+>;movl %eax, %edi;movl (%ebx), %esi;movl %esi, %eax": 1,
                "calll  <KeReleaseSemaphore+>;movl %edi, %edx;movzbl %dl, %ecx;calll  <KeSetTimer+>;movl $, (%esp)": 1,
                "cmpl %eax, (%ebx);je  <KeReleaseSemaphore+>;movl (%ebp), %edx;movl %ebx, %ecx;calll  <KeSetTimer+>": 1,
                "movl %ebx, %ecx;calll  <KeSetTimer+>;cmpb $, -(%ebp);jne  <KeReleaseSemaphore+>;movl %fs:, %ecx": 1,
                "calll *-;movl (%ebx), %edx;movl $, (%esp);movl $, (%esp);movzbl %al, %eax": 4,
                "movl %edx, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;movl (%ebx), %eax;movl %fs:, %edx": 2,
                "popl %ebp;retl $;movl %fs:, %eax;movl (%eax), %eax;orl $, %eax": 1,
                "xchgl %eax, (%ecx);retl;pushl %ebp;movl %esp, %ebp;movl $, %eax": 1,
                "cmpl $, (%ecx);jne  <KeTryToAcquireSpinLockAtDpcLevel+>;lock;btsl $, (%ecx);setb %dl": 1,
                "movl %fs:, %eax;movl (%eax), %eax;orl $, %eax;movl %eax, (%ecx);movl $, %eax": 1,
                "movl (%ebx), %ebx;movl %fs:, %eax;movl (%eax), %eax;orl $, %eax;cmpl (%ebx), %eax": 2,
                "calll - <KeBugCheckEx>;movl $, (%esp);movl %ebx, (%esp);calll - <KiiSpinOnSpinLock>;subl $, %esp": 7,
                "movl (%ebp), %ebx;calll *-;cmpb $, %al;ja  <KeAcquireSpinLockAtDpcLevel+>;calll *-": 1,
                "subl $, %esp;movl %ecx, %ebx;calll *-;cmpb $, %al;ja  <KefAcquireSpinLockAtDpcLevel+>": 1,
                "lock;btsl $, (%ebx);setb %al;testb %al, %al;jne  <KefAcquireSpinLockAtDpcLevel+>": 1,
                "setb %al;testb %al, %al;jne  <KefAcquireSpinLockAtDpcLevel+>;jmp  <KefAcquireSpinLockAtDpcLevel+>;movl $, (%esp)": 1,
                "movzbl (%ebx), %ecx;calll *-;movl %eax, %esi;movl (%ebx), %ecx;calll - <KefAcquireSpinLockAtDpcLevel>": 1,
                "subl $, %esp;movl %ecx, %ebx;movl %fs:, %eax;movl (%eax), %eax;orl $, %eax": 1,
                "calll  <KeWaitForSingleObject>;subl $, %esp;leave;retl $;pushl %ebp": 1,
                "cmpb $, %al;je  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 10,
                "movl (%ebx), %eax;movl (%eax), %eax;movzbl (%eax), %eax;movzbl (%ebx), %edx;testb %dl, %dl": 1,
                "addl $, %ecx;calll - <KiiSpinOnSpinLock+>;movl %edi, %edx;movsbl %dl, %eax;movzbl (%ebx,%eax), %esi": 1,
                "jne  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movzbl (%ebx), %edx;cmpb $, %dl;jne  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;cmpb $, (%ebx)": 1,
                "jg  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movl $, (%esp);movl $, %edx;movl %ebx, %ecx;calll  <KeSetTimer+>": 1,
                "subl $, %esp;movl $, %ecx;calll  <wcstombs+>;movl %eax, %edi;cmpb $, (%ebx)": 1,
                "movb %al, (%ebx);movl %ecx, %edx;cmpl $, %ecx;jle  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movl $, %edx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl %fs:, %eax;movl (%eax), %edi": 1,
                "jle  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "je  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movsbl (%esi), %eax;cmpl $, %eax;jne  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;addb $, (%esi)": 1,
                "subl $, %esp;addb $, (%esi);jmp  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;addb $, (%esi);testl %eax, %eax": 1,
                "jne  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;cmpb $, (%esi);jne  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;cmpb $, (%esi);jne  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>": 1,
                "jne  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;cmpb $, (%esi);jne  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movb $, (%esi);leal (%esi), %ecx": 1,
                "jmp  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movl %fs:, %ecx;addl $, %ecx;calll - <KiiSpinOnSpinLock+>;subl $, (%esi)": 1,
                "movl %fs:, %ecx;addl $, %ecx;calll - <KiiSpinOnSpinLock+>;subl $, (%esi);movl %fs:, %ecx": 1,
                "calll - <KeReleaseSemaphore+>;leal -(%ebp), %ecx;calll - <KeReleaseInStackQueuedSpinLockFromDpcLevel>;movl (%ebx), %ebx;cmpl -(%ebp), %ebx": 1,
                "subl $, %esp;leal (%ebx), %ecx;leal -(%ebp), %edx;calll  <wcstombs+>;movzbl (%ebx), %eax": 2,
                "cmpl (%esi), %edi;je  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movl $, %ecx;calll  <wcstombs+>;movb %al, -(%ebp)": 1,
                "calll  <wcstombs+>;movb %al, -(%ebp);movl (%esi), %eax;cmpl %eax, %edi;je  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>": 1,
                "calll - <KeReleaseSemaphore+>;movzbl -(%ebp), %ecx;calll  <KeSetTimer+>;leal -(%ebp), %esp;popl %ebx": 3,
                "movl -(,%eax,), %edi;movl (%ebx), %eax;andl (%edi), %eax;andl %eax, %ecx;je  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>": 1,
                "movl -(,%eax,), %eax;testl %eax, (%esi);jne  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movl $, (%esp);movl $, (%esp)": 1,
                "leal -(%ebp), %edx;calll - <KeAcquireInStackQueuedSpinLockAtDpcLevel>;movzbl (%esi), %eax;testb %al, %al;je  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>": 1,
                "testb %al, %al;jne  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movl %fs:, %ecx;addl $, %ecx;calll - <KiiSpinOnSpinLock+>": 1,
                "movzbl (%ebx,%eax), %esi;movl %esi, %edx;testb %dl, %dl;je  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movb $, (%ebx,%eax)": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %eax;movb $, (%eax);movb $, (%eax)": 1,
                "calll  <KeInitializeTimer>;subl $, %esp;movl (%ebp), %eax;movl %esi, (%eax);movw $, (%eax)": 1,
                "movb $, -(%ebp);movl (%ebp), %ecx;movl %ebx, (%ecx);movl %ebx, (%ecx);subl $, %ebx": 1,
                "je  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;movl $, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %ecx;movl $, (%ecx);movl $, -(%ebp);jmp  <KeAcquireInStackQueuedSpinLockAtDpcLevel+>": 1,
                "movl (%ebx), %edx;movl (%ebp), %eax;movl %edx, (%eax);movl (%ebx), %eax;movl -(%ebp), %ebx": 1,
                "calll - <PsGetCurrentThread>;movl %eax, %edx;movzbl (%eax), %eax;movb %bl, (%edx);popl %ebx": 1,
                "calll *-;cmpb $, %al;ja  <KeRevertToUserAffinityThread+>;movl $, (%esp);movl $, (%esp)": 2,
                "movl %eax, (%edi);calll *-;cmpb $, %al;ja  <KeRevertToUserAffinityThread+>;movl $, (%esp)": 1,
                "movl %eax, %edi;movzbl (%esi), %eax;movb %al, -(%ebp);cmpb -, %bl;jae  <KeSetIdealProcessorThread+>": 1,
                "movb %bl, (%esi);movl %fs:, %ecx;addl $, %ecx;calll - <KeReleaseSemaphore+>;movl %edi, %eax": 1,
                "jbe  <KeSetSystemAffinityThread+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testl %ebx, -;jne  <KeSetSystemAffinityThread+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %ecx, %edx;bsrl %edx, %edx;movb %dl, (%esi);movl %fs:, %edi;movl %edi, %esi": 1,
                "subl $, %esp;calll *-;cmpb $, %al;jbe  <KeSetBasePriorityThread+>;movl $, (%esp)": 1,
                "jne - <KeSetBasePriorityThread+>;jmp - <KeSetBasePriorityThread+>;movsbl (%ebx), %eax;movl %eax, -(%ebp);movzbl (%edi), %edx": 1,
                "subl %edx, %eax;movl %eax, -(%ebp);jmp  <KeSetBasePriorityThread+>;movsbl %al, %eax;shll $, %eax": 1,
                "movl (%ebp), %edx;xorl %eax, %edx;subl %eax, %edx;cmpl $, %edx;jg  <KeSetBasePriorityThread+>": 1,
                "cmpl $, %edi;jg  <KeSetBasePriorityThread+>;movl %edi, %edx;jmp  <KeSetBasePriorityThread+>;cmpl $, %edi": 1,
                "movb %al, (%ebx);movb $, (%ebx);movsbl (%ebx), %eax;cmpl %edx, %eax;je  <KeSetBasePriorityThread+>": 1,
                "movl (%ebp), %edx;movl %ebx, %ecx;calll  <KeTerminateThread+>;movl %eax, %ebx;movl %fs:, %ecx": 1,
                "xchgl %eax, (%esi);testl %eax, %eax;je  <KeSetPriorityThread+>;pause;cmpl $, (%ebx)": 1,
                "testb %al, %al;je  <KeTerminateThread+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "jne - <KeTerminateThread+>;movl %fs:, %ecx;addl $, %ecx;calll - <KiiSpinOnSpinLock+>;testl %esi, %esi": 1,
                "movl (%ebx), %ecx;calll - <KeSetProfileIrql+>;movl $, (%ebx);movl (%ebx), %eax;leal (%ebx), %edx": 1,
                "movl (%ebx), %eax;cmpl %eax, %esi;jne - <KeTerminateThread+>;movl -(%ebp), %edi;movl (%ebx), %edx": 1,
                "movl %ecx, %edi;movzbl (%ecx), %eax;cmpb $, %al;je  <KeTerminateThread+>;movl $, (%esp)": 1,
                "jge  <KeTerminateThread+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 4,
                "testb %al, %al;js  <KeTerminateThread+>;movsbl %al, %eax;cmpl %eax, %esi;jge  <KeTerminateThread+>": 1,
                "movb $, (%edi);jmp  <KeTerminateThread+>;cmpb $, %al;jne  <KeTerminateThread+>;calll *-": 1,
                "cmpb $, %al;jg  <KeTerminateThread+>;cmpb $, (%edi);jle  <KeTerminateThread+>;movzbl (%edi), %eax": 1,
                "testb %dl, %dl;jne  <KeTerminateThread+>;cmpb $, (%edi);je  <KeTerminateThread+>;movzbl (%edi), %ecx": 1,
                "je  <KeTerminateThread+>;movzbl (%edi), %ecx;movb %cl, (%edi);cmpl $, (%edi);je  <KeTerminateThread+>": 1,
                "jle  <KeTerminateThread+>;cmpb $, (%edi);je  <KeTerminateThread+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %edx;subb (%edi), %dl;addl %esi, %edx;movzbl (%edi), %eax;movl %edx, %esi": 1,
                "jns  <KeTerminateThread+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movzbl (%edi), %edx;movsbl %cl, %esi;movsbl %dl, %eax;addl %esi, %eax;movsbl (%edi), %esi": 1,
                "movl %eax, %esi;cmpl $, %eax;jle  <KeTerminateThread+>;movl $, %esi;cmpl %esi, %eax": 1,
                "js  <KeTerminateThread+>;movsbl %al, %eax;cmpl %esi, %eax;jle  <KeTerminateThread+>;movl $, (%esp)": 1,
                "cmpl $, -;je  <KeTerminateThread+>;movl $, -;movb $, (%edi);movl %edi, (%ebx)": 1,
                "subl $, %esp;cmpl $, (%ebx);jne  <KeTerminateThread+>;movl $, (%esp);movl $, (%esp)": 7,
                "movl (%ebx), %ecx;movl %ecx, -(%ebp);testl %ecx, %ecx;je  <KeTerminateThread+>;movzbl (%ecx), %eax": 1,
                "movl %ecx, -(%ebp);testl %ecx, %ecx;je  <KeTerminateThread+>;movzbl (%ecx), %eax;cmpb $, %al": 1,
                "movzbl (%eax), %edx;cmpb $, %dl;jne  <KeTerminateThread+>;movb $, (%eax);movb $, (%edi)": 1,
                "je  <KeTerminateThread+>;movzbl (%edi), %eax;movzbl %al, %eax;movl -(,%eax,), %ecx;movl $, %edx": 1,
                "movsbl -(%ebp), %eax;cmpl $, %eax;jbe  <KeTerminateThread+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl , %eax;movl %eax, (%edi);cmpb $, -(%ebp);je  <KeTerminateThread+>;leal (%edi), %edx": 1,
                "movl -(,%edx,), %eax;orl %eax, (%ebx);movsbl (%edi), %eax;cmpl %edx, %eax;je  <KeTerminateThread+>": 1,
                "movl %eax, (%ebx);movl %edx, (%ecx);movl %edx, (%eax);jmp  <KeTerminateThread+>;leal (%ebx), %edx": 2,
                "movsbl (%ebx), %eax;cmpl %eax, %edi;je  <KeTerminateThread+>;movl $, (%esp);movl $, (%esp)": 3,
                "movl $, %eax;xchgl %eax, (%esi);movl %ebx, %ecx;calll - <KeTerminateThread+>;leal -(%ebp), %esp": 1,
                "subl $, %esp;movl %ecx, %esi;cmpl $, (%ecx);jne  <KeTerminateThread+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpb $, (%ebx);je  <KeTerminateThread+>;cmpb $, (%ebx)": 1,
                "jmp - <KeTerminateThread+>;movl %ebx, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "jmp - <KeTerminateThread+>;movl (%ebx), %eax;testl %eax, %eax;je  <KeTerminateThread+>;movl $, (%ebx)": 1,
                "movl (%ebx), %eax;testl %eax, %eax;je  <KeTerminateThread+>;movl $, (%ebx);movl %eax, (%ebx)": 1,
                "movl %edx, -(%ebp);movl %edx, -(%ebp);testl %eax, -(,%edx,);jne  <KeTerminateThread+>;movl $, (%esp)": 4,
                "subl $, %esp;movl -(%ebp), %ecx;leal (%ebx,%ecx,), %eax;cmpl (%eax), %eax;jne  <KeTerminateThread+>": 1,
                "je  <KeTerminateThread+>;movl -(%ebp), %ecx;cmpb $, (%ecx);je  <KeTerminateThread+>;cmpb $, (%ecx)": 4,
                "jne  <KeTerminateThread+>;cmpl $-, (%esi);jne  <KeTerminateThread+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpb $, %al;jg  <KeTerminateThread+>;cmpb $, (%ebx);jg  <KeTerminateThread+>;movzbl (%ebx), %edx": 1,
                "movzbl (%ebx), %ecx;movb %cl, -(%ebp);cmpb $, %cl;jg  <KeTerminateThread+>;movl $, %edx": 1,
                "movzbl -(%ebp), %ecx;movb %cl, (%ebx);movl -(%ebp), %eax;cmpl $, (%eax);jne  <KeTerminateThread+>": 1,
                "cmpl $, (%eax);jne  <KeTerminateThread+>;movsbl %cl, %edx;movl %edx, -(%ebp);movl (%eax), %ecx": 1,
                "movl -(%ebp), %edx;leal (%edx,%ecx,), %eax;cmpl (%eax), %eax;jne  <KeTerminateThread+>;movl $, (%esp)": 1,
                "movl %ecx, -(%ebp);movsbl (%ecx), %eax;cmpl %eax, -(%ebp);je  <KeTerminateThread+>;movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movsbl (%edi), %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movsbl (%edi), %eax;cmpl -(%ebp), %eax;je  <KeTerminateThread+>": 1,
                "movzbl (%edi), %eax;movzbl %al, %eax;movl -(,%eax,), %esi;calll *-;cmpb $, %al": 1,
                "jne  <KeTerminateThread+>;movsbl (%edi), %eax;movl -(,%eax,), %eax;xorl %eax, (%esi);movzbl -(%ebp), %eax": 1,
                "movl (%eax), %edx;movl %edx, (%edi);leal (%edi), %edx;movl %edx, (%eax);calll *-": 1,
                "subl $, %esp;movl $, %eax;xchgl %eax, (%ebx);jmp - <KeTerminateThread+>;movzbl -(%ebp), %edx": 1,
                "movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl (%ebx), %eax;movzbl -(%ebp), %ecx": 1,
                "movl %ecx, -(%ebp);leal (%ebx,%ecx,), %eax;cmpl (%eax), %eax;jne  <KeTerminateThread+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, %eax;xchgl %eax, (%esi);jmp - <KeTerminateThread+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, %eax;xchgl %eax, (%ebx);movl %edi, %ecx": 1,
                "movzbl (%edi), %eax;cmpb $, %al;jne  <KeTerminateThread+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %edi, (%esi);movl $, %edi;jmp - <KeTerminateThread+>;movl $, %edi;jmp - <KeTerminateThread+>": 1,
                "movl %esp, %ebp;subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ecx), %esi": 1,
                "movl (%ecx), %esi;movl (%ecx), %eax;movl %edx, %ebx;andl (%eax), %ebx;cmpl %edx, %ebx": 1,
                "movl $, %edi;testl %eax, %eax;je  <KeTerminateThread+>;movl %fs:, %eax;movl (%eax), %ebx": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;movl -(%ebp), %edx;movl (%edx,%eax,), %eax": 1,
                "movb %al, (%ebx);movzbl (%ebx), %eax;testb %al, %al;js  <KeTerminateThread+>;cmpb (%ebx), %al": 1,
                "jg  <KeTerminateThread+>;movl $, %eax;subb (%ebx), %al;addb -(%ebp), %al;movzbl (%ebx), %edx": 1,
                "cmpb %dl, %al;jge  <KeTerminateThread+>;movb %dl, -(%ebp);movb $, (%ebx);cmpb $, (%ebx)": 1,
                "movl %edx, (%ecx);movl %edx, (%eax);jmp  <KeTerminateThread+>;leal (%ebx), %edx;movl -(%ebp), %ecx": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %ecx;cmpl $, (%ecx);jne  <KeTerminateThread+>": 1,
                "cmpb $, (%ebx);je  <KeUpdateRunTime+>;movb $, (%ebx);jmp  <KeUpdateRunTime+>;movl %ebx, %eax": 1,
                "movl %ebx, %eax;addl $, (%ebx);movl (%ebp), %ecx;testb $, (%ecx);jne  <KeUpdateRunTime+>": 1,
                "testb $, (%ecx);je  <KeUpdateRunTime+>;addl $, (%eax);addl $, (%esi);jmp  <KeUpdateRunTime+>": 1,
                "jmp  <KeUpdateRunTime+>;addl $, (%ebx);movl (%ebx), %eax;movl %eax, %edx;addl (%ebx), %edx": 1,
                "jae  <KeUpdateRunTime+>;movl (%ebx), %eax;cmpl $, %eax;jbe  <KeUpdateRunTime+>;subl $, %eax": 1,
                "subl $, %eax;movl %eax, (%ebx);testl %eax, %eax;jne  <KeUpdateRunTime+>;movl , %eax": 1,
                "cli;movl %ecx, (%esp);movzbl -(%ebp), %eax;movl %eax, (%esp);calll *-": 1,
                "addl -, %eax;adcl -, %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl %edx, %eax": 1,
                "subl $, %esp;cmpl -(%ebp), %esi;jl  <KeUpdateSystemTime+>;movl , %eax;movl $, %edx": 1,
                "jne - <KeUpdateSystemTime+>;leal (%esi), %edx;movl (%eax), %ecx;movl %ecx, (%esi);movl %eax, (%esi)": 1,
                "movl -(%ebp), %eax;shll $, %eax;movl %edi, -(%eax);movl %ebx, -(%eax);calll - <KeQueryInterruptTime>": 1,
                "calll - <KeQueryInterruptTime>;movl %eax, %ecx;movl $, %eax;cmpl %edx, %ebx;jl  <KeUpdateSystemTime+>": 1,
                "movl %eax, (%esi);movl %edx, (%ecx);movl %edx, (%eax);movl $, %eax;leal -(%ebp), %esp": 1,
                "movl %edi, %ecx;calll - <KiiSpinOnSpinLock+>;movl %esi, %edx;movl %ebx, %ecx;calll - <KeUpdateSystemTime+>": 1,
                "jne  <KeUpdateSystemTime+>;movzbl %cl, %eax;shll $, %eax;addl $, %eax;cmpl (%eax), %eax": 1,
                "je  <KeUpdateSystemTime+>;cmpb $, (%ecx);jne  <KeUpdateSystemTime+>;movl %edx, %esi;cmpl %edx, %eax": 1,
                "calll  <KeSetTimer+>;subl $, %esp;movl (%ebx), %eax;cmpl %eax, %esi;jne - <KeUpdateSystemTime+>": 2,
                "testb %al, %al;je - <KeUpdateSystemTime+>;movl $, %eax;cmpl $, -(%ebp);je  <KeUpdateSystemTime+>": 1,
                "subl $, %esp;movl %esi, %ecx;calll - <KeReleaseSemaphore+>;movl %fs:, %ecx;addl $, %ecx": 1,
                "subl $, %eax;cmpb $, %al;jbe  <KeCancelTimer+>;movl $, (%esp);movl $, (%esp)": 1,
                "testb %al, %al;je  <KeCancelTimer+>;movzbl (%ebx), %eax;movl %eax, -(%ebp);calll *-": 1,
                "movzbl (%ebx), %eax;movl %eax, -(%ebp);calll *-;cmpb $, %al;ja  <KeCancelTimer+>": 1,
                "testl %edx, %edx;js  <KeSetTimerEx+>;movl $, (%ebx);movb $, (%ebx);movl $, (%ebx)": 1,
                "movl $, (%ebx);movb $, (%ebx);movl $, (%ebx);movl $, (%ebx);movl %ebx, %ecx": 1,
                "movl %fs:, %ecx;addl $, %ecx;calll - <KeReleaseSemaphore+>;testb %bl, %bl;je  <KeSetTimerEx+>": 1,
                "ja  <KeSetTimerEx+>;jmp  <KeSetTimerEx+>;movl $, %ecx;calll *-;jmp  <KeSetTimerEx+>": 1,
                "calll - <KeUpdateSystemTime+>;testb %al, %al;je  <KeSetTimerEx+>;movl %edi, %edx;movl %ebx, %ecx": 1,
                "calll  <RtlAssert>;subl $, %esp;movl %edi, %ecx;calll - <KeReleaseSemaphore+>;movzbl -(%ebp), %ecx": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl (%ebp), %edx;movl %eax, (%esp);movl %edx, (%esp)": 1,
                "subl $, %esp;movl %ecx, %ebx;orl %edx, (%ecx);movl (%ecx), %eax;movl (%eax), %ecx": 1,
                "movl (%ebx), %eax;movl %eax, (%edx);movl %edx, (%eax);cmpl %eax, %edx;jne  <KeSetTimer+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl %esi, %eax;movb %al, (%ebx);movb $, (%ebx)": 1,
                "cmpl %esi, -(%ebp);je  <KeSetTimer+>;movl %edx, %edi;leal (%ecx), %edx;movl %edx, -(%ebp)": 1,
                "movl (%ebx), %esi;movl (%ebx), %edx;movl %edx, -(%ebp);testl %edx, %edx;jle  <KeSetTimer+>": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl %ecx, %esi;addl $, (%ecx)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%esi), %ebx;jmp  <KeSetTimer+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%esi), %ebx;jmp  <KeSetTimer+>;movl %eax, %ebx": 1,
                "je  <KeSetTimer+>;movl %eax, %ebx;jmp - <KeSetTimer+>;movl -(%ebp), %edx;addl %ebx, %edx": 1,
                "jmp - <KeSetTimer+>;leal -(%ebp), %esp;popl %ebx;popl %esi;popl %edi": 1,
                "movb %cl, -(%ebp);movl %fs:, %esi;movl %esi, %ebx;calll *-;cmpb $, %al": 1,
                "movl %esi, %ecx;calll - <KeTerminateThread+>;cmpb $, -(%ebp);jbe  <KeSetTimer+>;cmpl $, (%esi)": 1,
                "cmpb $, -(%ebp);jbe  <KeSetTimer+>;cmpl $, (%esi);je  <KeSetTimer+>;movzbl (%esi), %eax": 1,
                "cmpl $, (%esi);je  <KeSetTimer+>;leal (%esi), %esi;calll *-;cmpb $, %al": 1,
                "movl %edx, -(%ebp);movzbl (%edx), %eax;testb %al, %al;je  <KeSetTimer+>;movl $, (%esp)": 1,
                "movsbl (%edx), %ecx;movl %ecx, -(%ebp);movzbl (%edx), %eax;movb %al, -(%ebp);movb $, (%edx)": 1,
                "movzbl (%esi), %eax;movb %al, (%edx);calll *-;cmpb $, %al;ja  <KeSetTimer+>": 1,
                "subl $, %esp;movl $, %eax;xchgl %eax, (%edi);movl -(%ebp), %ecx;calll - <KeTerminateThread+>": 1,
                "movb %cl, (%edx);movzbl %cl, %ecx;calll - <WRITE_REGISTER_BUFFER_ULONG+>;testb %al, %al;je  <KeSetTimer+>": 1,
                "calll - <WRITE_REGISTER_BUFFER_ULONG+>;testb %al, %al;je  <KeSetTimer+>;movl $, %ecx;calll *-": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;orl (%esi), %eax;jne  <KeDelayExecutionThread+>;cmpb $, -(%ebp)": 1,
                "andb $-, (%ebx);testl %edi, %edi;js  <KeDelayExecutionThread+>;leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "movl %ecx, -(%ebp);movl %edx, -(%ebp);calll - <KeQueryInterruptTime>;movl %edx, %ecx;movl %eax, %edx": 1,
                "movl %eax, %edi;movb %al, (%ebx);movl (%ebx), %edx;movl (%ebx), %ecx;movl %edx, -(%ebp)": 1,
                "movb %al, (%ebx);movl (%ebx), %edx;movl (%ebx), %ecx;movl %edx, -(%ebp);movl %ecx, -(%ebp)": 1,
                "cmpb $, (%ebx);je  <KeDelayExecutionThread+>;cmpb $, (%ebx);setg %cl;movl %ecx, %esi": 2,
                "movl , %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, -(%ebp);movb $, (%ebx)": 1,
                "jne  <KeDelayExecutionThread+>;cmpb $, (%ebx);jne  <KeDelayExecutionThread+>;movl %fs:, %ecx;addl $, %ecx": 1,
                "movl %fs:, %ecx;addl $, %ecx;calll - <KeReleaseSemaphore+>;movl $, %ecx;calll - <KeSetTimer+>": 3,
                "jmp  <KeDelayExecutionThread+>;cmpb $, -(%ebp);je  <KeDelayExecutionThread+>;movsbl -(%ebp), %eax;cmpb $, (%ebx,%eax)": 1,
                "jmp  <KeDelayExecutionThread+>;movb $, (%ebx);movl (%ebx), %ecx;testl %ecx, %ecx;je  <KeDelayExecutionThread+>": 1,
                "testb %dl, %dl;je  <KeDelayExecutionThread+>;leal (%ebx), %edx;movl %fs:, %eax;movl (%eax), %ecx": 1,
                "je  <KeDelayExecutionThread+>;leal (%ebx), %edx;movl %fs:, %eax;movl (%eax), %ecx;leal (%eax), %esi": 1,
                "addl $, %ecx;calll - <KeReleaseSemaphore+>;movl %edi, %edx;movl -(%ebp), %ecx;calll - <KeUpdateSystemTime+>": 1,
                "movl %edi, %edx;movl -(%ebp), %ecx;calll - <KeUpdateSystemTime+>;testb %al, %al;je  <KeDelayExecutionThread+>": 1,
                "movl %esi, %edx;movl -(%ebp), %ecx;calll - <KeUpdateSystemTime+>;jmp  <KeDelayExecutionThread+>;calll *-": 1,
                "jmp  <KeDelayExecutionThread+>;calll *-;cmpb $, %al;nop;ja  <KeDelayExecutionThread+>": 1,
                "movl (%esi), %eax;orl (%esi), %eax;jne  <KeDelayExecutionThread+>;movzbl (%ebx), %ebx;movl %fs:, %ecx": 1,
                "movl %fs:, %eax;movl (%eax), %ebx;leal (%ebx), %esi;movl %esi, -(%ebp);leal (%ebx), %esi": 1,
                "je  <KeWaitForSingleObject+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "jne  <KeWaitForSingleObject+>;cmpl $, (%ebp);je  <KeWaitForSingleObject+>;movl (%ebp), %esi;movl (%esi), %eax": 1,
                "cmpb $, (%ebx);je  <KeWaitForSingleObject+>;movb $, (%ebx);movl -(%ebp), %esi;movl %esi, (%ebx)": 1,
                "movl %esi, (%ebx);movw $, (%ebx);movl (%ebp), %esi;movl %esi, (%ebx);movb $, (%ebx)": 4,
                "movb $, (%ebx);movl $, (%ebx);cmpl $, (%ebp);je  <KeWaitForSingleObject+>;movl (%ebp), %eax": 1,
                "movl %eax, (%ebx);jmp  <KeWaitForSingleObject+>;movl -(%ebp), %esi;movl %esi, (%ebx);movl $, -(%ebp)": 1,
                "subl $, %esp;movl (%ebp), %ecx;movzbl (%ecx), %eax;cmpb $, %al;jne  <KeWaitForSingleObject+>": 1,
                "jne  <KeWaitForSingleObject+>;movl (%ecx), %eax;testl %eax, %eax;jg  <KeWaitForSingleObject+>;cmpl %ebx, (%ecx)": 1,
                "cmpb $, (%esi);je  <KeWaitForSingleObject+>;movb $, (%esi);movl $, (%ebx);movl (%ebp), %edx": 1,
                "movl %ecx, (%esi);movl %eax, (%esi);movl %edx, (%ecx);movl %edx, (%eax);movl (%ebx), %esi": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;testl %edx, %edx;jle  <KeWaitForSingleObject+>;movl %eax, %ecx": 1,
                "je  <KeWaitForSingleObject+>;calll - <KeSetProfileIrql+>;movb $, (%ebx);movl %esi, %ecx;testb %cl, %cl": 1,
                "testl %edi, %edi;je  <KeWaitForSingleObject+>;calll *-;cmpb $, %al;ja  <KeWaitForSingleObject+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl %esi, %ecx;calll - <KeReleaseSemaphore+>;jmp  <KeWaitForSingleObject+>": 1,
                "cmpl $, %eax;jne  <KeWaitForSingleObject+>;testl %edi, %edi;je  <KeWaitForSingleObject+>;movl (%ebp), %edi": 1,
                "movl $, -(%ebp);jmp  <KeWaitForSingleObject+>;movl %ecx, -(%ebp);movl %edx, -(%ebp);calll - <KeQueryInterruptTime>": 1,
                "movl %fs:, %eax;movl (%eax), %ebx;cmpb $, (%ebx);je  <KeWaitForMultipleObjects+>;calll *-": 1,
                "cmpb $, %al;je  <KeWaitForMultipleObjects+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll *-;cmpb $, %al;nop;jne  <KeWaitForMultipleObjects+>;cmpl $, (%ebp)": 1,
                "cmpl $, (%ebp);jbe  <KeWaitForMultipleObjects+>;movl $, (%esp);calll - <KeBugCheck>;leal (%ebx), %edi": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);jmp  <KeWaitForMultipleObjects+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%ebp), %edi;movl %edi, -(%ebp);movb $, (%ebx);cmpb $, (%ebx);je  <KeWaitForMultipleObjects+>": 1,
                "subl $, %esp;movzbl (%esi), %eax;cmpb $, %al;jne  <KeWaitForMultipleObjects+>;movl (%esi), %eax": 1,
                "cmpb $, %al;jne  <KeWaitForMultipleObjects+>;movl (%esi), %eax;testl %eax, %eax;jg  <KeWaitForMultipleObjects+>": 1,
                "jne  <KeWaitForMultipleObjects+>;cmpl $, (%edi);jne  <KeWaitForMultipleObjects+>;movzbl (%ecx), %ebx;movl %fs:, %ecx": 1,
                "movl $, (%esp);calll  <ExRaiseStatus>;cmpl $, (%edi);jle  <KeWaitForMultipleObjects+>;addl $, %esi": 1,
                "leal (%edx), %ecx;movl -(%ebp), %edi;movl (%edi), %esi;movl (%esi), %edi;movl %edi, (%edx)": 1,
                "je  <KeWaitForMultipleObjects+>;movsbl -(%ebp), %eax;cmpb $, (%ebx,%eax);je  <KeWaitForMultipleObjects+>;movb $, (%ebx,%eax)": 1,
                "cmpb $, -(%ebp);je  <KeWaitForMultipleObjects+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <KeWaitForMultipleObjects+>": 1,
                "movb $, (%ebx);movl $, %edi;jmp  <KeWaitForMultipleObjects+>;cmpb $, (%ebx);je  <KeWaitForMultipleObjects+>": 1,
                "calll - <KeQueryInterruptTime>;cmpl (%ebx), %edx;ja  <KeWaitForMultipleObjects+>;jb  <KeWaitForMultipleObjects+>;cmpl (%ebx), %eax": 1,
                "je  <KeWaitForMultipleObjects+>;calll *-;cmpb $, %al;ja  <KeWaitForMultipleObjects+>;movl $, (%esp)": 1,
                "movl (%ebp), %edi;movl %edi, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%ebp), %edi;movl %edi, (%ecx);movl $, (%ebx);cmpl $, -(%ebp);je  <KeWaitForMultipleObjects+>": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);movzbl -(%ebp), %edx;movb %dl, (%ebx);movzbl -(%ebp), %ecx": 1,
                "movl (%ecx), %eax;movl (%ecx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);jmp  <KeWaitForMultipleObjects+>": 1,
                "movl (%ecx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);jmp  <KeWaitForMultipleObjects+>;leal (%esi), %esi": 1,
                "jmp  <KeWaitForMultipleObjects+>;leal (%esi), %esi;jmp - <KeWaitForMultipleObjects+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "movl %eax, %edx;andl $, %edx;movb %dl, -(%ebp);andl $, %eax;movb %al, -(%ebp)": 1,
                "movw %ax, ;movl (%ebx), %eax;cmpl %eax, %ebx;je  <KeWaitForMultipleObjects+>;movl (%ebx), %edx": 1,
                "movl $, (%ebx);movl $, -(%ebp);cmpw $, (%ebx);jne  <KeWaitForMultipleObjects+>;movl (%ebx), %eax": 1,
                "cmpxchgl %esi, -;cmpl %eax, %edx;jne  <KeWaitForMultipleObjects+>;movl $, %ecx;calll - <KeSetEventBoostPriority+>": 6,
                "leal (%esi), %eax;cmpl %eax, (%esi);je  <KeWaitForMultipleObjects+>;calll - <KiCheckForKernelApcDelivery>;testl %edi, %edi": 2,
                "cmpw %ax, -;jb  <KeWaitForMultipleObjects+>;addl $, -;movl %ebx, (%esp);calll *-": 1,
                "calll *-;subl $, %esp;jmp  <KeWaitForMultipleObjects+>;movl %ebx, %edx;movl $, %ecx": 1,
                "movl %ebx, %edx;movl $, %ecx;calll - <InterlockedPushEntrySList>;cmpb $, -(%ebp);jne  <KeWaitForMultipleObjects+>": 1,
                "je  <KeWaitForMultipleObjects+>;movl %fs:, %eax;movl (%eax), %esi;calll *-;cmpb $, %al": 1,
                "testb %al, %al;jne  <KeWaitForMultipleObjects+>;movl $, %ecx;calll - <KeSetTimer+>;movl %esi, -": 5,
                "movl $, %ecx;calll - <KeSetTimer+>;movl %esi, -;movzwl (%esi), %eax;movw %ax, ": 27,
                "movl %esi, -;movzwl (%esi), %eax;movw %ax, ;leal -(%ebp), %esp;popl %ebx": 1,
                "testl %edx, %edx;je  <KeWaitForMultipleObjects+>;movl $, (%eax);jmp  <KeWaitForMultipleObjects+>;movl $, -(%ebp)": 1,
                "movl (%edx), %eax;movl %eax, %edx;andl $, %edx;cmpl $, %edx;jne  <KeWaitForMultipleObjects+>": 1,
                "movl (%ebp), %edx;movl (%edx), %edi;jmp  <KeWaitForMultipleObjects+>;leal -(%edi), %ebx;testb $, (%ebx)": 1,
                "jne  <KeWaitForMultipleObjects+>;movl (%ebx), %eax;testb $, %al;jne  <KeWaitForMultipleObjects+>;andl $-, %eax": 1,
                "movl $, (%ebx);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <KeWaitForMultipleObjects+>": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %esi, (%esp);calll - <KeReleaseSemaphore>": 2,
                "jne - <KeWaitForMultipleObjects+>;movl -(%ebp), %edx;movl (%ebp), %eax;movl %edx, (%eax);movl %edx, (%eax)": 1,
                "movl %eax, (%esp);calll - <KeWaitForMultipleObjects+>;subl $, %esp;movl (%esi), %eax;testl %eax, %eax": 1,
                "je  <KeWaitForMultipleObjects+>;movl %eax, (%esp);calll  <ExFreePool>;subl $, %esp;leal -(%ebp), %esp": 1,
                "jne  <KeWaitForMultipleObjects+>;jmp  <KeWaitForMultipleObjects+>;movl $, (%esp);movl %eax, (%esp);calll - <KeWaitForMultipleObjects+>": 1,
                "movl %eax, (%esp);calll - <KeWaitForMultipleObjects+>;subl $, %esp;leave;retl $": 2,
                "testl %eax, %eax;js  <KeWaitForMultipleObjects+>;movl (%ebx), %eax;testl %eax, %eax;je  <KeWaitForMultipleObjects+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebx), %eax;andl $, %eax": 6,
                "movl %edi, -;movzwl (%edi), %eax;movw %ax, ;movl (%ebx), %edi;testl %edi, %edi": 1,
                "calll  <PsGetCurrentProcessId>;movl %eax, %edi;leal (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax": 1,
                "movl (%eax), %edx;cmpl %esi, %ebx;jne  <KeWaitForMultipleObjects+>;movl (%eax), %ecx;movl %ecx, (%edx)": 1,
                "movl (%ebx), %eax;jmp  <KeWaitForMultipleObjects+>;cmpl %edi, (%eax);jne  <KeWaitForMultipleObjects+>;movl (%eax), %ecx": 1,
                "je  <KeWaitForMultipleObjects+>;cmpl (%ebx), %ecx;je  <KeWaitForMultipleObjects+>;cmpl %ecx, %esi;jne  <KeWaitForMultipleObjects+>": 1,
                "movl %fs:, %eax;cmpl (%eax), %edi;je  <KeWaitForMultipleObjects+>;movl $, (%esp);movl $, (%esp)": 3,
                "leal (%edi), %eax;cmpl %eax, (%edi);je  <KeWaitForMultipleObjects+>;calll - <KiCheckForKernelApcDelivery>;movl (%ebx), %eax": 1,
                "movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);leal (%edi), %eax;movl %eax, (%esp)": 1,
                "movl %ecx, -(%ebp);movl (%ecx), %esi;movl %esi, -(%ebp);movl %fs:, %edx;movl (%edx), %edx": 1,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, -(%ebp);jmp  <KeWaitForMultipleObjects+>;movl $, (%eax)": 1,
                "calll  <ObfDereferenceObject>;movl $, -(%ebp);jmp  <KeWaitForMultipleObjects+>;movl $, (%eax);movl $, (%eax)": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movzwl -, %esi;cmpw %si, (%eax);je  <KeWaitForMultipleObjects+>": 1,
                "movl -(%ebp), %esi;movl (%esi), %edx;movl %eax, %ecx;cmpl %edx, %eax;jbe  <KeWaitForMultipleObjects+>": 1,
                "movb $, (%edi);addl $, %edi;movb $-, %dl;testl $, %edi;je  <KeWaitForMultipleObjects+>": 2,
                "je  <KeWaitForMultipleObjects+>;movw $, (%edi);addl $, %edi;subl $, %edx;movl %edx, %ecx": 3,
                "rep  stosl %eax, %es:(%edi);testb $, %dl;je  <KeWaitForMultipleObjects+>;movw $, (%edi);addl $, %edi": 3,
                "movl -(%ebp), %esi;movl (%esi), %edx;movl %edx, (%eax);leal (%eax), %edx;movl %edx, (%eax)": 1,
                "movl %ecx, (%esi);movl %esi, (%ecx);calll - <PsGetCurrentThread>;movl (%eax), %edx;movl (%eax), %eax": 1,
                "je  <KeWaitForMultipleObjects+>;calll - <KiCheckForKernelApcDelivery>;testl %edi, %edi;je  <KeWaitForMultipleObjects+>;movl (%ebx), %ecx": 1,
                "addl $, %edx;movl %edx, (%esp);movl (%eax), %eax;movl (%eax), %eax;movl %eax, (%esp)": 2,
                "movl (%eax), %edx;movl %edx, (%ebx);movl %fs:, %edx;movl (%edx), %edx;movl (%edx), %ecx": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, (%esp);movl %edx, (%esp);movl (%ebx), %eax": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, (%esp);movl $, (%esp)": 2,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <KeWaitForMultipleObjects+>;cmpl $, (%ebp);je  <KeWaitForMultipleObjects+>": 1,
                "movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx);cmpl $, (%ebp);jne  <KeWaitForMultipleObjects+>": 1,
                "subl $, %esp;cmpl $, -(%ebp);je  <KeWaitForMultipleObjects+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>": 1,
                "movzbl (%eax), %ebx;calll *-;cmpb $, %al;jbe  <KeWaitForMultipleObjects+>;calll *-": 1,
                "movl %eax, %edi;testl %eax, %eax;js  <KeWaitForMultipleObjects+>;movl -(%ebp), %ecx;movl (%ecx), %eax": 1,
                "andl $, %eax;cmpl $, %eax;je  <KeWaitForMultipleObjects+>;calll  <ObfDereferenceObject>;movl $, %edi": 1,
                "testl $, %edx;jne  <KeWaitForMultipleObjects+>;calll *-;cmpb $, %al;jbe  <KeWaitForMultipleObjects+>": 1,
                "calll  <ObfDereferenceObject>;movl $, %edi;jmp  <KeWaitForMultipleObjects+>;movl $, (%eax);movl %ebx, (%esp)": 1,
                "calll - <KeReleaseSemaphore>;subl $, %esp;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl %ebx, %ecx": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl %fs:, %eax;movl (%eax), %edi;calll *-": 1,
                "movl %ecx, (%eax);movl %eax, (%ecx);movl %edx, (%edx);movl %edx, (%edx);movl $, (%ebx)": 1,
                "movl , %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll  <ObCreateObject>": 1,
                "movl %ebx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <SeCreateClientSecurity>;subl $, %esp": 1,
                "calll  <SeCreateClientSecurity>;subl $, %esp;movl %eax, %esi;testl %eax, %eax;jns  <KeWaitForMultipleObjects+>": 1,
                "movl %eax, (%esp);calll  <NtConnectPort+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <MmMapViewOfSection>;subl $, %esp;movl %eax, %esi": 1,
                "subl $, %esp;movl %fs:, %eax;movl (%eax), %edi;cmpl %edi, -;je  <KeWaitForMultipleObjects+>": 2,
                "nop;jmp  <KeWaitForMultipleObjects+>;movl %ebx, (%ebx);movl %ebx, (%ebx);movl $, (%ebx)": 1,
                "movw %bx, (%eax);addl $, %ecx;movw %cx, (%eax);movw $, (%eax);cmpl $, (%ebp)": 1,
                "calll  <memmove>;movl %fs:, %eax;movl (%eax), %edi;calll *-;cmpb $, %al": 1,
                "jne  <KeWaitForMultipleObjects+>;movl -(%ebp), %edx;movl $, (%edx);movl -, %ecx;movl %ecx, (%edx)": 1,
                "addl $, %edx;movl -(%ebp), %eax;movl (%eax), %ecx;leal (%eax), %ebx;movl -(%ebp), %edi": 1,
                "leal (%eax), %ebx;movl -(%ebp), %edi;movl %ebx, (%edi);movl %ecx, (%edi);movl %edx, (%ecx)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;subw $, (%ebx);jmp  <KeWaitForMultipleObjects+>": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <KeWaitForMultipleObjects+>;calll - <KiCheckForKernelApcDelivery>;testl %esi, %esi": 1,
                "je  <KeWaitForMultipleObjects+>;cmpw $, (%ebx);jne  <KeWaitForMultipleObjects+>;calll - <KiCheckForKernelApcDelivery>;movl -(%ebp), %ebx": 1,
                "jne  <KeWaitForMultipleObjects+>;movl %ebx, (%esp);calll - <KeReadStateSemaphore>;subl $, %esp;testl %eax, %eax": 1,
                "js  <KeWaitForMultipleObjects+>;movl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpl $, (%eax);je  <KeWaitForMultipleObjects+>;movl -(%ebp), %edx;movl (%edx), %ebx;leal -(%ebp), %edx": 1,
                "calll - <KiCheckForKernelApcDelivery>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, (%esp);movl -(%ebp), %eax": 2,
                "calll  <ObfDereferenceObject>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, %esi;movl -(%ebp), %ecx": 1,
                "addl $, %ebx;movl %ebx, (%esp);calll - <KeReadStateSemaphore>;subl $, %esp;testl %eax, %eax": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <KeWaitForMultipleObjects+>;movl $, (%esp);movl %eax, (%esp)": 1,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;je  <NtConnectPort+>;movl $, (%esp)": 1,
                "movl %eax, %esi;testl %eax, %eax;je  <NtConnectPort+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %eax;movzbl (%eax), %edi;calll *-;cmpb $, %al;jbe  <NtConnectPort+>": 1,
                "subl $, %esp;movl %edi, %edx;movsbl %dl, %eax;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl %eax, (%esp);movl %esi, (%esp);movl -, %edx": 1,
                "movl %eax, (%esp);movl %esi, (%esp);movl -, %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "testb $, %dl;je  <NtConnectPort+>;movw $, (%edi);addl $, %edi;testb $, %dl": 1,
                "je  <NtConnectPort+>;movl -(%ebp), %eax;orl $, (%eax);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "addl $, %eax;movl %eax, (%esp);calll - <KeInitializeEvent>;subl $, %esp;movl -(%ebp), %ecx": 1,
                "calll - <KeInitializeEvent>;subl $, %esp;movl -(%ebp), %ecx;movl , %eax;leal -(%eax), %edx": 1,
                "jne  <NtConnectPort+>;movzwl (%ebx), %edx;andw $, %dx;cmpw $, %dx;jne - <NtConnectPort+>": 1,
                "retl $;nop;testl %ecx, %ecx;jne  <NtConnectPort+>;addl $, %eax": 1,
                "cmpl %ecx, (%eax);jne  <NtConnectPort+>;cmpl %ebx, (%eax);jne  <NtConnectPort+>;cmpl %esi, (%eax)": 1,
                "subl $, %esp;movl -(%ebp), %eax;cmpl -, %eax;jne  <NtConnectPort+>;movl $, (%esp)": 1,
                "movl -(%ebp), %edx;movzwl (%edx), %eax;cmpw $, %ax;je  <NtConnectPort+>;testw %ax, %ax": 1,
                "andl $, %eax;cmpl $, %eax;jbe  <NtConnectPort+>;movl (%ebx), %ebx;testl %ebx, %ebx": 1,
                "cmpxchgl %ebx, -;cmpl %eax, %edx;jne  <NtConnectPort+>;movl $, %ecx;calll - <KeSetEventBoostPriority+>": 9,
                "testw %ax, %ax;jne  <NtConnectPort+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <NtConnectPort+>": 9,
                "testb %al, %al;jne  <NtConnectPort+>;calll *-;cmpb $, %al;jbe  <NtConnectPort+>": 1,
                "movw %si, (%eax);testl %ecx, %ecx;je  <NtConnectPort+>;movl (%ecx), %ebx;movl %ebx, (%eax)": 1,
                "jmp - <NtConnectPort+>;movl -(%ebp), %eax;movl %eax, %fs:;movl (%ebp), %ecx;movswl (%ecx), %edx": 1,
                "movswl (%ecx), %eax;cmpl %eax, %edx;ja  <NtConnectPort+>;cmpl $, (%ecx);je  <NtConnectPort+>": 1,
                "movl %eax, (%esp);calll *-;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax": 3,
                "cmpl %edx, (%eax);jne  <NtConnectPort+>;movl (%eax), %eax;testb $, %al;jne  <NtConnectPort+>": 1,
                "jmp  <NtConnectPort+>;jmp - <NtConnectPort+>;movl -(%ebp), %eax;movl %eax, %fs:;movl -(%ebp), %ecx": 1,
                "calll - <KiCheckForKernelApcDelivery>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax": 2,
                "movl %eax, (%esp);calll - <ProbeForRead>;subl $, %esp;cmpl $, (%ebp);je  <NtConnectPort+>": 1,
                "movl (%ecx), %edx;movl $, (%esp);movl %ecx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jb  <NtConnectPort+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%edx)": 1,
                "subl $, %esp;cmpw $, (%esi);js  <NtConnectPort+>;movl $, (%esp);movl $, (%esp)": 3,
                "jns  <NtConnectPort+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;cmpl $, -(%ebp);je  <NtConnectPort+>": 1,
                "calll - <InterlockedPopEntrySList>;movl %eax, %edi;testl %eax, %eax;jne  <NtConnectPort+>;addl $, -": 1,
                "subl $, %esp;movl -(%ebp), %ecx;cmpl -, %ecx;jne  <NtConnectPort+>;movl $, (%esp)": 1,
                "jne  <NtConnectPort+>;movl $, %ecx;calll - <KeSetTimer+>;movl -(%ebp), %eax;movl %eax, ": 1,
                "movl %eax, (%ecx);orb $, (%ecx);movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);leal -(%edx), %eax": 1,
                "leal -(%edx), %eax;movw %dx, (%ecx);movw %ax, (%ecx);movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl %ecx, (%esp);calll - <NtConnectPort+>;subl $, %esp;cmpl $, (%ebp);je  <NtConnectPort+>": 1,
                "calll - <NtConnectPort+>;subl $, %esp;cmpl $, (%ebp);je  <NtConnectPort+>;movl -(%ebp), %edx": 1,
                "subl $, %esp;cmpl $, (%ebp);je  <NtConnectPort+>;movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "movl -(%ebp), %eax;cmpw $, (%eax);je  <NtConnectPort+>;movl $, (%esp);movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl , %eax;movl %eax, (%esp);movl $, (%esp);movl (%ebp), %ecx": 3,
                "cmpl $, -(%ebp);jne - <NtConnectPort+>;jmp - <NtConnectPort+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl -, %edi;jne  <LpcRequestPort+>;movl $, (%esp)": 2,
                "cmpw $, %ax;je  <LpcRequestPort+>;testw %ax, %ax;jle  <LpcRequestPort+>;movl $, (%esp)": 3,
                "addl $, %eax;movw %ax, (%ebx);testw %ax, %ax;jne  <LpcRequestPort+>;leal (%ebx), %eax": 3,
                "cmpw $, (%edi);js  <LpcRequestPort+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movw %ax, (%edi);testw %ax, %ax;jne  <LpcRequestPort+>;leal (%edi), %eax;cmpl %eax, (%edi)": 1,
                "testw %ax, %ax;jne  <LpcRequestPort+>;leal (%edi), %eax;cmpl %eax, (%edi);je  <LpcRequestPort+>": 1,
                "jne  <LpcRequestPort+>;leal (%edi), %eax;cmpl %eax, (%edi);je  <LpcRequestPort+>;calll - <KiCheckForKernelApcDelivery>": 1,
                "calll  <RtlAssert>;subl $, %esp;movzwl (%esi), %eax;cmpw $, %ax;je  <LpcRequestPort+>": 1,
                "jne  <LpcRequestPort+>;movl $, (%esp);movl %ebx, (%esp);calll - <KeWaitForMultipleObjects+>;subl $, %esp": 2,
                "jne  <LpcRequestPort+>;jmp  <LpcRequestPort+>;movl $, %edi;movl , %eax;movl %eax, (%ebx)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;subw $, (%ebx);calll *-": 2,
                "jmp  <LpcRequestPort+>;movl $, (%esp);movl %ebx, (%esp);calll - <KeWaitForMultipleObjects+>;subl $, %esp": 1,
                "movl %ebx, (%esp);calll - <KeWaitForMultipleObjects+>;subl $, %esp;movl $, %eax;leal -(%ebp), %esp": 1,
                "movl -(%ebp), %eax;testb $, (%eax);jne  <LpcRequestWaitReplyPort+>;movzwl (%edi), %eax;andw $, %ax": 1,
                "movl (%eax), %esi;calll *-;cmpb $, %al;jbe  <LpcRequestWaitReplyPort+>;movl $, (%esp)": 6,
                "jle  <LpcRequestWaitReplyPort+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 5,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jne  <LpcRequestWaitReplyPort+>;calll *-": 1,
                "movl (%eax), %eax;movzwl -, %ecx;cmpw %cx, (%eax);je  <LpcRequestWaitReplyPort+>;movl $, (%esp)": 4,
                "jne  <LpcRequestWaitReplyPort+>;leal (%ebx), %edx;subl $, %ebx;movl %edx, %eax;lock": 2,
                "js  <LpcRequestWaitReplyPort+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 5,
                "addl $, %eax;movw %ax, (%ebx);testw %ax, %ax;jne  <LpcRequestWaitReplyPort+>;leal (%ebx), %eax": 3,
                "jne  <LpcRequestWaitReplyPort+>;leal (%esi), %edx;subl $, %esi;movl %edx, %eax;lock": 2,
                "movl %fs:, %eax;cmpl (%eax), %esi;je  <LpcRequestWaitReplyPort+>;movl $, (%esp);movl $, (%esp)": 4,
                "jne  <LpcRequestWaitReplyPort+>;movl $, %ecx;calll - <KeSetTimer+>;movl %edi, -;movzwl (%edi), %eax": 2,
                "je  <LpcRequestWaitReplyPort+>;movl (%ebp), %edx;movl (%edx), %edi;testl %edi, %edi;jne  <LpcRequestWaitReplyPort+>": 1,
                "movl %eax, (%ebx);movl (%ebp), %ecx;movl (%ecx), %esi;testl %esi, %esi;jne  <LpcRequestWaitReplyPort+>": 1,
                "orl $, %eax;movl %eax, (%ebx);movl %fs:, %eax;movl (%eax), %ebx;movl %fs:, %eax": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll - <KeWaitForSingleObject>;subl $, %esp;movl %eax, -(%ebp)": 2,
                "je  <LpcRequestWaitReplyPort+>;movl %edx, %ecx;movl (%edx), %edx;movl %edx, (%eax);movl %eax, (%edx)": 1,
                "movl %edx, (%eax);movl %eax, (%edx);movl %edi, (%ecx);movl %edi, (%ecx);calll *-": 1,
                "movl %edi, -;movzwl (%edi), %eax;movw %ax, ;movl (%ebx), %ecx;testl %ecx, %ecx": 1,
                "je  <LpcRequestWaitReplyPort+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;jmp  <LpcRequestWaitReplyPort+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <LpcRequestWaitReplyPort+>;movl $, -(%ebp);jmp  <LpcRequestWaitReplyPort+>;movl $, -(%ebp)": 2,
                "jmp  <LpcRequestWaitReplyPort+>;movl $, -(%ebp);jmp  <LpcRequestWaitReplyPort+>;cmpb $, -(%ebp);je - <LpcRequestWaitReplyPort+>": 1,
                "movzwl (%esi), %eax;cmpw $, %ax;je  <NtRequestPort+>;testw %ax, %ax;jle  <NtRequestPort+>": 1,
                "cmpl %ecx, -;je  <NtRequestPort+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl %ebx, %ebx;je  <NtRequestPort+>": 1,
                "movl %edx, %eax;lock;cmpxchgl %ebx, -;cmpl %eax, %edx;jne  <NtRequestPort+>": 1,
                "movl %fs:, %eax;cmpl (%eax), %ebx;je  <NtRequestPort+>;movl $, (%esp);movl $, (%esp)": 2,
                "calll - <KiCheckForKernelApcDelivery>;jmp  <NtRequestPort+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, (%eax)": 1,
                "movl %eax, -(%ebp);movl %eax, (%eax);movl %eax, (%eax);movl $, (%eax);movl $, (%eax)": 2,
                "movl $, (%eax);calll *-;cmpb $, %al;jbe  <NtRequestPort+>;movl $, (%esp)": 1,
                "subl $, %esp;movl %fs:, %eax;movl (%eax), %edx;cmpl %edx, -;je  <NtRequestPort+>": 1,
                "testl $, %esi;jne  <NtRequestPort+>;leal (%esi), %edx;subl $, %esi;movl %edx, %eax": 1,
                "movw %ax, (%esi);testw %ax, %ax;jne  <NtRequestPort+>;leal (%esi), %eax;cmpl %eax, (%esi)": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;addl $, %eax": 2,
                "cwtl;movl %eax, -(%ebp);movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 1,
                "movl %edx, (%esp);calll - <KeWaitForMultipleObjects+>;subl $, %esp;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>": 2,
                "je  <NtRequestPort+>;movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, (%edx);movl , %eax": 1,
                "movl %edx, (%ecx);movl %eax, (%ecx);movl -(%ebp), %edx;movl %edx, (%eax);movl %edx, (%ebx)": 1,
                "movl $, %edi;lock;xaddl %edi, -;testl $, %edi;je  <NtRequestPort+>": 1,
                "jne  <NtRequestPort+>;leal (%edi), %eax;cmpl %eax, (%edi);je  <NtRequestPort+>;calll - <KiCheckForKernelApcDelivery>": 1,
                "movl %eax, (%esp);calll - <KeSetEvent>;subl $, %esp;movl %fs:, %eax;movl (%eax), %edi": 1,
                "movl $, %eax;jmp  <NtRequestPort+>;movl %esi, %ecx;calll  <ObfDereferenceObject>;movl $, %eax": 1,
                "jmp  <NtRequestPort+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, %eax;jmp  <NtRequestPort+>": 1,
                "jmp  <NtRequestPort+>;movl %ebx, %ecx;calll  <ObfReferenceObject>;movl %ebx, %esi;jmp - <NtRequestPort+>": 1,
                "calll - <PsGetCurrentThread>;movl %eax, -(%ebp);calll *-;cmpb $, %al;jbe  <NtRequestWaitReplyPort+>": 1,
                "calll *-;cmpb $, %al;jbe  <NtRequestWaitReplyPort+>;calll *-;movzbl %al, %eax": 4,
                "movl (%ebp), %ecx;movzwl (%ecx), %edx;movl %edx, %eax;andw $, %ax;cmpw $, %ax": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl -, %edi;jne  <NtRequestWaitReplyPort+>;movl $, (%esp)": 1,
                "subl $, %esp;movl %fs:, %eax;cmpl (%eax), %ebx;je  <NtRequestWaitReplyPort+>;movl $, (%esp)": 5,
                "subl $, %esp;movl $, %esi;movl $, -(%ebp);jmp  <NtRequestWaitReplyPort+>;movl -(%ebp), %ebx": 1,
                "testb %al, %al;jne  <NtRequestWaitReplyPort+>;movl $, %ecx;calll - <KeSetTimer+>;movl %esi, -": 2,
                "calll  <ObfDereferenceObject>;movl $, -(%ebp);jmp  <NtRequestWaitReplyPort+>;cmpl $, %eax;je  <NtRequestWaitReplyPort+>": 1,
                "movl %ebx, %edx;movl $, -(%ebp);jmp  <NtRequestWaitReplyPort+>;movl %esi, %edx;movl %esi, %ebx": 1,
                "movl -(%ebp), %edi;movl %eax, (%edi);movl $, (%edi);movl (%ebx), %eax;leal (%ebx), %ecx": 1,
                "movl %ecx, (%eax);movl %ecx, (%ebx);movl %edi, %eax;addl $, %eax;movl (%edx), %ecx": 1,
                "movl %ecx, (%ebx);movl %edi, %eax;addl $, %eax;movl (%edx), %ecx;leal (%edx), %esi": 1,
                "movl %ecx, (%edi);movl %eax, (%ecx);movl %eax, (%edx);movl -(%ebp), %eax;orl $, %eax": 1,
                "movl (%eax), %esi;cmpl %esi, -;je  <NtRequestWaitReplyPort+>;movl $, (%esp);movl $, (%esp)": 2,
                "testb $, (%ebx);je  <NtRequestWaitReplyPort+>;movl $, (%esp);movl $, (%esp);addl $, %ebx": 1,
                "addl $, %ebx;movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, %edx;andl $, %edx;andl $-, %eax": 1,
                "movl $, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "nop;jmp - <NtRequestWaitReplyPort+>;movl -(%ebp), %eax;movl %eax, %fs:;movl -(%ebp), %edi": 1,
                "movl -(%ebp), %eax;cmpw $, (%eax);je  <NtRequestWaitReplyPort+>;movl $, (%esp);movl %eax, (%esp)": 1,
                "calll  <ObfDereferenceObject>;cmpl $, -(%ebp);je  <NtRequestWaitReplyPort+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>": 1,
                "movl %esi, %edx;jmp - <NtRequestWaitReplyPort+>;movl -(%ebp), %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "subl $, %esp;movl (%ebp), %eax;negl %eax;movl %eax, -(%ebp);movl %fs:, %eax": 1,
                "movl %eax, -(%ebp);movl %fs:, %eax;movl (%eax), %ebx;calll *-;cmpb $, %al": 3,
                "movl %esi, -(%ebp);movl $, -(%ebp);movl $, %eax;subl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "jne  <NtRequestWaitReplyPort+>;addl -(%ebp), %ebx;movl -(%ebp), %ecx;movl %ecx, -(%ebp);addl %ecx, %edi": 1,
                "addl $, %ebx;addl $, %edi;jmp - <NtRequestWaitReplyPort+>;movzbl -(%ebp), %edx;movl $, %ecx": 1,
                "movl (%ebp), %ecx;movl (%ebp), %eax;cmpl %eax, (%ebp);ja  <NtRequestWaitReplyPort+>;movl (%ebp), %edx": 1,
                "testl %esi, %esi;jne  <NtRequestWaitReplyPort+>;cmpl -(%ebp), %eax;ja  <NtRequestWaitReplyPort+>;cmpl (%ebp), %eax": 1,
                "jmp  <NtRequestWaitReplyPort+>;leal (%edi), %edx;cmpl %eax, %edx;jne  <NtRequestWaitReplyPort+>;addl $, %esi": 1,
                "movl %eax, %esi;testl %eax, %eax;jne  <NtRequestWaitReplyPort+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, %esi;jbe  <NtRequestWaitReplyPort+>;movl $, (%esp)": 1,
                "movl %edi, (%esp);movl %ebx, (%esp);calll - <NtRequestWaitReplyPort+>;subl $, %esp;testl %eax, %eax": 1,
                "cmpl -, %eax;jae  <NtRequestWaitReplyPort+>;movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <ExFreePoolWithTag>;subl $, %esp;jmp  <NtRequestWaitReplyPort+>": 1,
                "subl $, %esp;cmpl $, (%edi);je  <NtRequestWaitReplyPort+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %ecx;calll *-;movb %al, -(%ebp);addl %esi, %edi;movl $, %edx": 1,
                "testb %al, %al;je  <NtRequestWaitReplyPort+>;movl -(%ebp), %edx;addl -, %edx;movl %esi, %eax": 1,
                "je  <NtRequestWaitReplyPort+>;movl -(%ebp), %edx;addl -, %edx;movl %esi, %eax;movl %edi, %esi": 1,
                "movl %edx, -(%ebp);testl %ebx, %ebx;jne  <MmAllocateContiguousMemorySpecifyCache+>;movl $, (%esp);movl $, (%esp)": 1,
                "testl %ebx, %ebx;jne  <MmAllocateContiguousMemorySpecifyCache+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %edi;shrdl $, %edi, %esi;movl -, %edx;cmpl %edx, %esi": 1,
                "movl %esi, (%esp);movl %ecx, (%esp);movl %ebx, (%esp);calll - <NtRequestWaitReplyPort+>;subl $, %esp": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %esi;movl (%ebp), %edi;testl %ebx, %ebx": 3,
                "subl $, %esp;movzwl (%edi), %eax;cmpw $, %ax;je  <MmAddVerifierThunks+>;testw %ax, %ax": 1,
                "cmpl %ecx, %edx;jb  <MmAddVerifierThunks+>;movl (%esi), %ecx;cmpl %ecx, %edx;ja  <MmAddVerifierThunks+>": 1,
                "movl $, %esi;jmp  <MmAddVerifierThunks+>;movl $, %edi;jmp  <MmAddVerifierThunks+>;movl $, %edi": 1,
                "movl $, %edi;jmp  <MmAddVerifierThunks+>;movl $, %edi;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <ExFreePoolWithTag>;subl $, %esp;jmp  <MmAddVerifierThunks+>;movl $, %edi;jmp  <MmAddVerifierThunks+>": 1,
                "testl %eax, %eax;je  <MmIsDriverVerifying+>;movl (%eax), %eax;shrl $, %eax;andl $, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movl , %eax;movl (%eax), %edi;addl $, %edi": 1,
                "movl (%edx,%ecx,), %edx;shll $, %edx;movl %edx, (%eax);movl $, (%eax);movl -, %edx": 1,
                "movl %edx, (%eax);movl $, (%eax);movl -, %edx;movl (%edx,%ecx,), %edx;shll $, %edx": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%esp);calll - <MmGetPhysicalMemoryRanges+>;subl $, %esp": 4,
                "calll - <MmGetPhysicalMemoryRanges+>;subl $, %esp;movl %eax, %ebx;movl %eax, (%esp);calll - <MmGetPhysicalMemoryRanges+>": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%esp);calll - <MmGetPhysicalMemoryRanges+>": 2,
                "movl %eax, (%esp);calll - <MmGetPhysicalMemoryRanges+>;subl $, %esp;movl %eax, %esi;movl (%eax), %eax": 2,
                "movl %eax, (%esp);calll - <MmGetPhysicalMemoryRanges+>;subl $, %esp;movl %eax, %edi;movl %ebx, (%esp)": 1,
                "subl $, %esp;movl %eax, %edi;movl %ebx, (%esp);calll - <MmGetPhysicalMemoryRanges+>;subl $, %esp": 1,
                "calll - <MmGetPhysicalMemoryRanges+>;subl $, %esp;movl %eax, (%esi);movl %ebx, (%esp);calll - <MmGetPhysicalMemoryRanges+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <MmGetPhysicalMemoryRanges+>;addl $, %eax": 1,
                "leal (%ebx,%edx,), %esi;movl %esi, %ecx;andl $, %ecx;cmpl %ecx, %esi;je  <MmGetPhysicalMemoryRanges+>": 1,
                "leal (%ebx), %eax;movl %eax, (%esp);movl %edx, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;leal -(%ebx), %eax;movl %ebx, %esi;andl $, %esi": 1,
                "movl -, %edi;testl %edi, %edi;je  <MmGetPhysicalMemoryRanges+>;movl -, %ecx;leal (%ecx), %eax": 1,
                "cmpl $-, (%ebp);je  <MmGetPhysicalMemoryRanges+>;cmpl (%ebp), %eax;je  <MmGetPhysicalMemoryRanges+>;movl $, %edx": 1,
                "je  <MmGetPhysicalMemoryRanges+>;cmpl (%ebp), %eax;je  <MmGetPhysicalMemoryRanges+>;movl $, %edx;testb $, -(%ebx)": 1,
                "jne  <MmGetPhysicalMemoryRanges+>;movb $, -(%ebp);movl %ebx, (%esp);calll - <MmGetPhysicalMemoryRanges+>;subl $, %esp": 1,
                "subl $, %esp;movzwl (%ebx), %eax;andl $, %eax;addl %eax, %esi;leal (%ebx,%eax,), %eax": 1,
                "leal -(%ebp), %edi;movl $, %esi;movl $, %ecx;rep  movsl (%esi), %es:(%edi);leal -(%ebp), %edx": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx;movl (%edx), %edi;movl $, %eax": 1,
                "mull %edi;movl %eax, -(%ebp);movl %edx, -(%ebp);movl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "cmpl %edi, (%esi);jne  <MmGetPhysicalMemoryRanges+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testb $, (%ebp);jne  <MmGetPhysicalMemoryRanges+>;lock;addl $, (%edx);movl (%ebp), %eax": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl %ebx, %eax;andl $, %eax;movl %eax, -(%ebp)": 1,
                "calll  <DbgBreakPoint>;cmpb $, -;je  <MmGetPhysicalMemoryRanges+>;testl $, %ebx;jne  <MmGetPhysicalMemoryRanges+>": 1,
                "subl $, %esp;movl , %eax;movl -(%ebp), %edx;movl %edx, (%eax,%esi);movl %edx, (%ebx)": 1,
                "movl , %eax;movl -(%ebp), %edx;movl %edx, (%eax,%esi);movl %edx, (%ebx);movzbl -(%ebp), %edx": 1,
                "movl , %eax;calll *%eax;jmp - <MmGetPhysicalMemoryRanges+>;addl $, %edi;andl -(%ebp), %edi": 1,
                "movl $, (%eax);leal (%eax), %ebx;leal (%eax), %edi;cmpl %edi, %ebx;jae  <MmGetPhysicalMemoryRanges+>": 1,
                "movb %al, -(%ebp);movl , %eax;movl %eax, -(%ebp);movl , %eax;andl -, %esi": 1,
                "addl %eax, %esi;movl -(%ebp), %edi;shll $, %edi;addl %eax, %edi;movl %esi, %edx": 1,
                "movl (%ebp), %eax;movl %eax, (%edx);lock;addl $, -;cmpl $, %ebx": 1,
                "movl -(%ebp), %edx;shrl $, %edx;cmpl %eax, %edx;jae  <MmGetPhysicalMemoryRanges+>;movl %eax, (%esp)": 1,
                "addl $, %eax;cmpl %edx, %esi;ja  <MmGetPhysicalMemoryRanges+>;movl $, %edx;movl %edi, %eax": 1,
                "ja  <MmGetPhysicalMemoryRanges+>;movl $, %edx;movl %edi, %eax;testb %al, %al;jne  <MmGetPhysicalMemoryRanges+>": 1,
                "jmp  <MmGetPhysicalMemoryRanges+>;movl $, %edi;movl %edx, %eax;shll $, %eax;addl -(%ebp), %eax": 1,
                "movl $, (%esi);cmpl $-, -;je  <MmGetPhysicalMemoryRanges+>;movl $, %edx;movl -(,%edx,), %eax": 1,
                "addl -, %edx;movl (%ebp), %eax;movl %edx, (%eax);movl (%ebp), %eax;movl -, %edx": 1,
                "subl $, %esp;jmp  <ExAllocatePoolWithTag+>;cmpl $, (%ebp);jne  <ExAllocatePoolWithTag+>;movl $, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %esi;andl $, %esi;je  <ExAllocatePoolWithTag+>;calll *-": 1,
                "je  <ExAllocatePoolWithTag+>;calll *-;movl (%ebp), %esi;movl %esi, (%esp);movl (%ebp), %esi": 1,
                "calll - <KeBugCheckEx>;testb $, (%ebp);je  <ExAllocatePoolWithTag+>;movl $, (%esp);movl $, (%esp)": 1,
                "je  <ExAllocatePoolWithTag+>;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, (%ebp);jbe  <ExAllocatePoolWithTag+>;movl (%ebp), %esi": 1,
                "movl (%ebp), %esi;movl %esi, (%esp);movl (%ebp), %esi;movl %esi, (%esp);calll  <MmFreeNonCachedMemory+>": 1,
                "movl %esi, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;addl $, -;testb $, -": 1,
                "testb $-, -;je  <ExAllocatePoolWithTag+>;calll  <DbgBreakPoint>;testb $, (%ebp);je  <ExAllocatePoolWithTag+>": 2,
                "movl (%ebp), %esi;lock;addl %esi, (%edi);lock;addl $, (%edi)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpw $, -(%ebp);ja  <ExAllocatePoolWithTag+>": 1,
                "movl $, (%ebx);jmp  <ExAllocatePoolWithTag+>;movzwl -(%ebp), %esi;movl %esi, -(%ebp);leal (%edi,%esi,), %esi": 1,
                "movl %esi, -(%ebp);leal (%edi,%esi,), %esi;movl %esi, (%esp);calll - <MmGetPhysicalMemoryRanges+>;subl $, %esp": 1,
                "subl $, %esp;movl -(%ebp), %ecx;movzwl (%ecx), %eax;cmpw $, %ax;je  <ExAllocatePoolWithTag+>": 2,
                "testb %al, %al;je  <ExAllocatePoolWithTag+>;testb $, (%edi);jne  <ExAllocatePoolWithTag+>;movzbl %bl, %edx": 1,
                "xaddl %eax, (%ebx);movl %eax, -(%ebp);testb $, %al;je  <ExAllocatePoolWithTag+>;movl $, (%esp)": 1,
                "movl %eax, -(%ebp);testb $, %al;je  <ExAllocatePoolWithTag+>;movl $, (%esp);movl $, (%esp)": 2,
                "andw $, %dx;orl %ecx, %edx;movw %dx, (%eax);movzwl -(%ebp), %edx;andw $, %dx": 1,
                "cmpl %edx, %eax;je  <ExAllocatePoolWithTag+>;movzwl (%eax), %edx;andw $, %dx;orl %ecx, %edx": 1,
                "movl %eax, %edx;andl $, %edx;cmpl %edx, %eax;je  <ExAllocatePoolWithTag+>;movzwl -(%ebp), %edx": 1,
                "movl -(%ebp), %esi;movzwl (%esi), %esi;movl %esi, %edx;andw $, %dx;orl %edx, %eax": 1,
                "movl -(%ebp), %esi;movw %ax, (%esi);andb $, (%ebx);movzwl (%ebx), %esi;andw $, %si": 1,
                "movl %esi, %eax;andl $, %eax;shll $, %eax;lock;addl %eax, (%edi)": 1,
                "movzwl -(%ebp), %esi;andw $, %si;movw %si, -(%ebp);movl %esi, %edx;movw %si, (%ebx)": 1,
                "subw -(%ebp), %dx;movw %dx, -(%ebp);movl %ebx, -(%ebp);movl -(%ebp), %edx;leal (%ebx,%edx,), %esi": 1,
                "movzwl -(%ebp), %edx;andw $, %dx;movw %dx, (%esi);movzwl -(%ebp), %ecx;movw %cx, (%esi)": 1,
                "addl %eax, (%edi);movzwl (%esi), %eax;andw $, %ax;cmpw $, %ax;je  <ExAllocatePoolWithTag+>": 1,
                "testb $, (%edi);jne  <ExAllocatePoolWithTag+>;movl $, %ecx;calll *-;movb %al, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;cmpl (%edx), %ecx;jne  <ExAllocatePoolWithTag+>;movl $, (%esp)": 1,
                "calll *-;jmp  <ExAllocatePoolWithTag+>;movl (%edi), %esi;calll *-;cmpb $, %al": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movzwl (%esi), %ecx;cmpw %cx, (%eax);je  <ExAllocatePoolWithTag+>": 1,
                "testw %ax, %ax;jne  <ExAllocatePoolWithTag+>;leal (%esi), %eax;cmpl %eax, (%esi);je  <ExAllocatePoolWithTag+>": 1,
                "movl , %eax;shrl $, %eax;movl -, %edx;movl %eax, %ebx;cmpl %edx, %eax": 2,
                "movl $, -;jmp  <ExAllocatePoolWithTag+>;movl $, %eax;movl %esi, %ecx;shll %cl, %eax": 2,
                "movl %edx, -;jmp - <ExAllocatePoolWithTag+>;imull $, %eax, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %eax, %ebx;testl %eax, %eax;jne  <ExAllocatePoolWithTag+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <NtMapViewOfSection+>;subl $, %esp;testb %al, %al;je  <ExFreePoolWithTag+>;testb $, -": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);leal (%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 4,
                "testb $, %al;je  <ExFreePoolWithTag+>;testb $, %al;je  <ExFreePoolWithTag+>;movl $, (%esp)": 1,
                "cmpl -(%ebp), %eax;je  <ExFreePoolWithTag+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movzbl -(%ebx), %eax;shrb %al;leal (%eax), %eax;movl %eax, %edi;andl $, %edi": 1,
                "movzbl %dl, %edx;movl %edx, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl $, (%esp);calll - <KeBugCheckEx>;movl -(%ebp), %edx;movl %edx, (%esp);movl %edi, (%esp)": 1,
                "addl %esi, (%ecx);testb $, (%ecx);jne  <ExFreePoolWithTag+>;movl $, %ecx;calll *-": 1,
                "movl -(%ebp), %edx;cmpl (%esi), %edx;jne  <ExFreePoolWithTag+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %ecx;cmpl (%eax), %ecx;je  <ExFreePoolWithTag+>;movl $, (%esp);movl $, (%esp)": 1,
                "je  <ExFreePoolWithTag+>;movl $, %esi;testb $-, (%edi);jne  <ExFreePoolWithTag+>;movzwl (%edi), %eax": 1,
                "calll - <MmGetPhysicalMemoryRanges+>;subl $, %esp;movl %eax, (%esp);calll - <MmGetPhysicalMemoryRanges+>;subl $, %esp": 4,
                "movl %eax, (%esp);calll - <MmGetPhysicalMemoryRanges+>;subl $, %esp;movzwl -(%ebx), %eax;movl %eax, %edx": 1,
                "andl $, %eax;negl %eax;movl -(%ebp), %edx;leal (%edx,%eax,), %edi;testb $-, (%edi)": 1,
                "xaddl %edi, (%esi);testl $, %edi;je  <ExFreePoolWithTag+>;movl $, (%esp);movl $, (%esp)": 1,
                "jne  <ExFreePoolWithTag+>;leal (%edi), %edx;subl $, %edi;movl %edx, %eax;lock": 1,
                "movl %fs:, %eax;cmpl (%eax), %esi;je  <ExFreePoolWithTag+>;movl $, (%esp);movl $, (%esp)": 1,
                "leal (%esi), %eax;cmpl %eax, (%esi);je  <ExFreePoolWithTag+>;calll - <KiCheckForKernelApcDelivery>;movl -(%ebp), %ecx": 1,
                "jmp  <ExFreePoolWithTag+>;movl -(%ebp), %eax;andb $, (%eax);movzwl (%eax), %edx;movl %edx, %ebx": 1,
                "movzwl %bx, %ebx;movl -(%ebp), %ecx;leal (%ecx,%ebx,), %eax;movl %eax, (%esp);calll - <MmGetPhysicalMemoryRanges+>": 1,
                "calll  <RtlAssert>;subl $, %esp;testl %esi, %esi;je  <ExFreePoolWithTag+>;testl $, %esi": 1,
                "movl (%ebp), %eax;addl $, (%eax);addl $, %edi;cmpl (%ebp), %edi;ja  <ExFreePoolWithTag+>": 1,
                "addl $, (%eax);addl $, %edi;cmpl (%ebp), %edi;ja  <ExFreePoolWithTag+>;movl (%ebx), %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebx), %eax;cmpl %eax, (%ebx)": 2,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movb $, -(%ebp);testb $, %bl": 1,
                "movl -(%ebp), %eax;cmpl %eax, -;je  <ExAllocatePoolWithQuotaTag+>;addl $, %ebx;addl $, %esi": 1,
                "addl $, %esi;movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);movl %ebx, (%esp)": 1,
                "jne  <ExAllocatePoolWithQuotaTag+>;testb $, %bl;je  <ExAllocatePoolWithQuotaTag+>;movl -(%ebp), %eax;cmpl %eax, -": 1,
                "movzwl (%edi), %eax;andl $, %eax;shll $, %eax;movl %eax, (%esp);andl $, %ebx": 1,
                "movzwl (%edi), %eax;andl $, %eax;movl -(%ebp), %edx;movl %edx, -(%edi,%eax,);movl %edx, %ecx": 1,
                "jne  <ExAllocatePoolWithQuotaTag+>;cmpb $, -(%ebp);je  <ExAllocatePoolWithQuotaTag+>;movl $, (%esp);calll  <ExRaiseStatus>": 1,
                "movl $, -(%ebp);cmpl $, %ebx;jbe  <ExAllocatePoolWithQuota+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jne  <ExAllocatePoolWithQuota+>;movl (%esi), %eax;movl %eax, (%esp);movl $, (%esp);calll  <NtVdmControl+>": 2,
                "jmp  <ExAllocatePoolWithQuota+>;cmpl $, %ebx;jbe  <ExAllocatePoolWithQuota+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <ExAllocatePoolWithQuota+>;movl -(%ebp), %eax;testl %eax, %eax;je  <ExAllocatePoolWithQuota+>;movl %eax, %ebx": 1,
                "jne  <ExAllocatePoolWithQuota+>;jmp  <ExAllocatePoolWithQuota+>;movl $, (%esp);calll  <NtVdmControl+>;jmp  <ExAllocatePoolWithQuota+>": 1,
                "cmpl %edx, -;jb  <ExAllocatePoolWithQuota+>;movl $, (%esp);calll  <NtVdmControl+>;jmp  <ExAllocatePoolWithQuota+>": 2,
                "movl $, %edx;jmp  <ExAllocatePoolWithQuota+>;movl $, %edi;movl %edi, %edx;movzwl (%esi), %ecx": 1,
                "andl $, %ecx;movl %ecx, -(%ebp);movzwl (%esi), %ecx;andl $, %ecx;cmpb $, %al": 1,
                "movl %esi, (%esp);movl %eax, (%esp);movl $, (%esp);calll  <NtVdmControl+>;testb $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl $, %eax;jmp - <ExAllocatePoolWithQuota+>;movl -(%ebp), %edx;testb $, %dl": 1,
                "subl $, %esp;movl (%ebp), %esi;testl %esi, %esi;jne  <ExAllocatePoolWithQuota+>;movl $, (%esp)": 1,
                "jmp  <ExAllocatePoolWithQuota+>;cmpl -, %esi;ja  <ExAllocatePoolWithQuota+>;cmpl $, -;je  <ExAllocatePoolWithQuota+>": 1,
                "shrl $, %eax;testl %eax, %eax;jne  <ExAllocatePoolWithQuota+>;movl %cr, %eax;movl %eax, %cr": 1,
                "movl %edx, (%ebx);leal (%ebx,%eax,), %ebx;movl %esi, %eax;shll $, %eax;andl $, %edi": 1,
                "orl %esi, %edi;movl %edi, (%ebx);movl %ebx, %eax;shll $, %eax;leal -(%ebp), %esp": 1,
                "movl (%ebp), %esi;movl (%ebp), %ebx;calll *-;testb %al, %al;je  <ExAllocatePoolWithQuota+>": 1,
                "jbe  <ExAllocatePoolWithQuota+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "orl $, %edx;movl %edx, (%eax);movl %cr, %edx;movl %edx, %cr;movl $, %edx": 1,
                "movl $, %edx;movl %edx, %ecx;subl %ebx, %ecx;shll $, %ecx;movl (%eax), %ebx": 1,
                "movl %edx, %ecx;subl %ebx, %ecx;shll $, %ecx;movl (%eax), %ebx;andl $, %ebx": 1,
                "movl -(%ebp), %edi;andl $, %edi;orl %eax, %edi;movl %edi, -(%ebp);testb $, (%ebx)": 2,
                "subl $, %esp;movl (%ebp), %esi;movl (%ebp), %edi;cmpl $, (%ebp);jne  <MmMapIoSpace+>": 1,
                "sete %al;movzbl %al, %eax;leal (%eax,%eax), %edx;addl %edx, %eax;leal (%ebx,%eax,), %eax": 1,
                "movl $, %edx;cmpl -, %edi;ja  <MmMapIoSpace+>;cmpl $, -;je  <MmMapIoSpace+>": 1,
                "calll  <RtlTestBit>;subl $, %esp;movl $, %edx;testb %al, %al;je  <MmMapIoSpace+>": 1,
                "movl %edi, -(%ebp);testb $, (%eax);je  <MmMapIoSpace+>;movl $, (%esp);movl $, (%esp)": 1,
                "orl -(%ebp), %edi;testl $, %edi;jne  <MmMapIoSpace+>;movl $, (%esp);movl $, (%esp)": 1,
                "addl $, %esi;andl $, %esi;movl %ebx, %eax;subl $, -(%ebp);jne - <MmMapIoSpace+>": 1,
                "jmp  <MmMapIoSpace+>;movl $, -(%ebp);jmp  <MmMapIoSpace+>;movl $, -(%ebp);jmp  <MmMapIoSpace+>": 1,
                "movl $, -(%ebp);jmp  <MmMapIoSpace+>;addl -(%ebp), %ebx;movl %ebx, -(%ebp);movl -, %ecx": 1,
                "movl %ebx, (%esp);movl $, (%esp);calll  <RtlTestBit>;subl $, %esp;testb %al, %al": 15,
                "leal (%ebx,%ebx,), %edx;movl , %eax;leal (%eax,%edx,), %eax;testl %eax, %eax;jne  <MmUnmapIoSpace+>": 1,
                "testl %eax, %eax;jne  <MmUnmapIoSpace+>;leal (,%esi,), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "andl $-, %esi;addl $, %esi;cmpl $, %esi;jbe  <MmUnmapVideoDisplay+>;movl $, %ebx": 1,
                "movl $, (%esp);calll  <DbgPrint>;testl %eax, %eax;je  <MmUnmapVideoDisplay+>;movl $, (%esp)": 1,
                "movw %cx, (%eax);movw $, (%eax);andl $, %esi;movl %esi, (%eax);movl %edx, (%eax)": 1,
                "andl $, %eax;leal (%edx,%eax), %edi;shrl $, %edi;testl %edi, %edi;jne  <MmBuildMdlForNonPagedPool+>": 1,
                "calll  <RtlAssert>;subl $, %esp;leal (%ebx,%edi,), %edx;movl -(%ebp), %eax;shrl $, %eax": 1,
                "cmpl %edi, -;jb  <MmBuildMdlForNonPagedPool+>;cmpl $, -;je  <MmBuildMdlForNonPagedPool+>;movl %edi, (%esp)": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);movl (%ebp), %ecx;movl (%ebp), %ebx;movl (%ebp), %esi": 1,
                "movl -(%ebp), %edx;movl %eax, (%esp);movl %edx, (%esp);calll  <MmGetPhysicalAddress+>;subl $, %esp": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl $, (%ebx);je  <MmFreePagesFromMdl+>": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, (%ebx);je  <MmFreePagesFromMdl+>;movl $, (%esp)": 1,
                "andb $-, (%ebx);movl $, (%ebx);cmpw $, (%ebx);jne  <MmFreePagesFromMdl+>;movl $, (%esp)": 1,
                "cmpl $, (%eax);jne  <MmMapLockedPagesSpecifyCache+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "addl (%edx), %eax;testb %bl, %bl;jne  <MmMapLockedPagesSpecifyCache+>;movl %edx, %esi;addl $, %esi": 1,
                "andl $, %eax;leal (%edx,%eax), %ebx;shrl $, %ebx;leal (%esi,%ebx,), %eax;movl %eax, -(%ebp)": 1,
                "leal (%edx,%eax), %ebx;shrl $, %ebx;leal (%esi,%ebx,), %eax;movl %eax, -(%ebp);testb $, (%ecx)": 1,
                "movl %eax, -(%ebp);testb $, (%ecx);je  <MmMapLockedPagesSpecifyCache+>;movl $, (%esp);movl $, (%esp)": 1,
                "testb $, (%eax);jne  <MmMapLockedPagesSpecifyCache+>;cmpl $, (%ebp);je  <MmMapLockedPagesSpecifyCache+>;movl $, (%esp)": 1,
                "je  <MmMapLockedPagesSpecifyCache+>;cmpl $, %edi;je  <MmMapLockedPagesSpecifyCache+>;movb %cl, -(%ebp);jmp  <MmMapLockedPagesSpecifyCache+>": 1,
                "movb %cl, -(%ebp);jmp  <MmMapLockedPagesSpecifyCache+>;movb $, -(%ebp);movl $, %edx;jmp  <MmMapLockedPagesSpecifyCache+>": 1,
                "je  <MmMapLockedPagesSpecifyCache+>;andl $, %edx;movl %edx, -(%ebp);leal (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %ebx, -(%eax);addl $, %esi;cmpl %esi, -(%ebp);ja - <MmMapLockedPagesSpecifyCache+>": 1,
                "subl $, %esp;movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movzwl (%ecx), %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <MmMapLockedPagesSpecifyCache>;subl $, %esp;leave": 1,
                "calll  <RtlAssert>;subl $, %esp;testl %edi, %edi;jne  <MmUnmapLockedPages+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;testb $, (%ebx);jne  <MmUnmapLockedPages+>;movl $, (%esp)": 1,
                "shll $, %eax;subl %eax, %esi;cmpl -, %esi;jae  <MmUnmapLockedPages+>;movl $, (%esp)": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;testb $, (%eax)": 2,
                "movl (%ebp), %eax;cmpl $, (%eax);jne  <MmUnlockPages+>;movl $, (%esp);movl $, (%esp)": 1,
                "je  <MmUnlockPages+>;movzwl (%esi), %ebx;testw %bx, %bx;jne  <MmUnlockPages+>;movl $, (%esp)": 1,
                "subl $, %esp;testw %bx, %bx;jne - <MmUnlockPages+>;jmp  <MmUnlockPages+>;cmpw %ax, %bx": 2,
                "subl $, %esp;cmpw $, %bx;jne  <MmUnlockPages+>;cmpl $, (%esi);je  <MmUnlockPages+>": 1,
                "subl $, %esp;testb %al, %al;je  <MmUnlockPages+>;leal (%esi,%esi,), %edx;movl , %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;addl $, %ebx;cmpl %ebx, %edi": 1,
                "addl $, %ebx;cmpl %ebx, %edi;ja - <MmUnlockPages+>;movl -(%ebp), %edi;movl $, %ecx": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %ecx;movl (%ecx), %edi;movl %edi, %esi;movzwl (%esi), %ebx": 1,
                "movl -(%ebp), %eax;cmpl %eax, -(%ebp);ja - <MmUnlockPages+>;movzbl -(%ebp), %edx;movl $, %ecx": 1,
                "jmp - <MmUnlockPages+>;leal -(%ebp), %esp;popl %ebx;popl %esi;popl %edi": 1,
                "movl (%ebp), %eax;cmpl $, (%eax);jne  <MmProbeAndLockPages+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%edx), %edx;movl %edx, -(%ebp);movl (%ebp), %eax;addl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %edx;andl $, %edx;leal (%eax,%edx), %eax;shrl $, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <MmProbeAndLockPages+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %edx;movl $, (%edx);movl $, (%esp);calll  <ExRaiseStatus>;movl $, -(%ebp)": 1,
                "movl $, (%esp);calll  <ExRaiseStatus>;movl $, -(%ebp);movl -(%ebp), %eax;cmpl -, %eax": 1,
                "cmpb $-, %al;jne  <MmProbeAndLockPages+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jb  <MmProbeAndLockPages+>;calll - <ExRaiseAccessViolation>;movzbl (%edx), %ecx;movb %cl, (%edx);addl $, %edx": 1,
                "movl %eax, -(%ebp);jmp  <MmProbeAndLockPages+>;nop;jmp - <MmProbeAndLockPages+>;movl -(%ebp), %eax": 1,
                "jmp - <MmProbeAndLockPages+>;movl -(%ebp), %eax;movl %eax, %fs:;cmpl $, -(%ebp);nop": 1,
                "movl %eax, %fs:;cmpl $, -(%ebp);nop;je  <MmProbeAndLockPages+>;movl $, (%esp)": 1,
                "movl (%ebp), %edx;movl $, (%edx);movl -(%ebp), %eax;movl %eax, (%esp);calll  <ExRaiseStatus>": 1,
                "shrl $, %eax;leal -(,%eax,), %eax;movl %eax, -(%ebp);cmpl $, (%ebp);je  <MmProbeAndLockPages+>": 1,
                "movl %fs:, %eax;cmpl (%eax), %esi;je  <MmProbeAndLockPages+>;movl $, (%esp);movl $, (%esp)": 2,
                "cmpw $, %ax;je  <MmProbeAndLockPages+>;testw %ax, %ax;jle  <MmProbeAndLockPages+>;movl $, (%esp)": 3,
                "subl $, %esp;movl -(%ebp), %ecx;addl $, %ecx;movl -(%ebp), %edx;lock": 1,
                "calll - <ExfAcquirePushLockExclusive>;movl -(%ebp), %eax;testb $, (%eax);jne  <MmProbeAndLockPages+>;movl $, (%esp)": 1,
                "subl $, %esp;movl -(%ebp), %edx;testb $, (%edx);je  <MmProbeAndLockPages+>;movl $, (%esp)": 3,
                "testb $, (%edx);je  <MmProbeAndLockPages+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "subl $, %eax;shrl $, %eax;leal -(,%eax,), %eax;movl %eax, -(%ebp);movl -(%ebp), %edi": 1,
                "movl -(%ebp), %edi;addl $, %edi;movl -(%ebp), %esi;movl %edi, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;movl %edi, -(%ebp);movl -(%ebp), %eax;movl $, (%eax);movl -(%ebp), %edx": 1,
                "je  <MmProbeAndLockPages+>;movzbl -(%ebp), %edx;movl $, %ecx;calll *-;movl $, (%esp)": 1,
                "testl %eax, %eax;jns  <MmProbeAndLockPages+>;movl %eax, %ebx;jmp  <MmProbeAndLockPages+>;calll - <PsGetCurrentThread>": 2,
                "calll  <RtlAssert>;subl $, %esp;testb $, (%esi);jne  <MmProbeAndLockPages+>;testl $, (%esi)": 2,
                "subl $, %esp;movl %fs:, %eax;cmpl (%eax), %ebx;je  <MmProbeAndLockPages+>;movl $, (%esp)": 3,
                "je - <MmProbeAndLockPages+>;movzbl -(%ebp), %edx;cmpl $, (%ebp);je  <MmProbeAndLockPages+>;testb $, %al": 1,
                "movl $, (%esp);movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp)": 3,
                "movl $, %ebx;lock;xaddl %ebx, (%eax);movl %ebx, %edi;testb $, %bl": 3,
                "movl -(%ebp), %ecx;calll - <ExfTryToWakePushLock>;movl %fs:, %eax;movl (%eax), %ebx;calll *-": 4,
                "calll - <ExfTryToWakePushLock>;movl %fs:, %eax;movl (%eax), %ebx;calll *-;cmpb $, %al": 6,
                "cmpl $, -;je  <MmProbeAndLockPages+>;movl %edx, (%esp);movl $, (%esp);calll  <RtlTestBit>": 1,
                "leal (%eax,%edx,), %edi;testl %edi, %edi;je  <MmProbeAndLockPages+>;testl %esi, %esi;setne %bl": 1,
                "calll  <RtlAssert>;subl $, %esp;testb $, (%edi);je  <MmProbeAndLockPages+>;testb $, (%edi)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;jmp  <MmProbeAndLockPages+>;cmpw $, %bx": 1,
                "subl $, %esp;leal (%ebx), %edx;movl %ebx, %eax;cmpxchgw %dx, (%edi);movl %eax, %esi": 1,
                "movl %edx, (%eax);addl $, %eax;movl %eax, -(%ebp);addl $, -(%ebp);testl $, -(%ebp)": 1,
                "addl $, -(%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp);jae - <MmProbeAndLockPages+>;cmpb $, -(%ebp)": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpw $, (%esi);js  <MmProbeAndLockPages+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebp), %edx;movl %edx, (%esp);calll - <MmUnlockPages>": 1,
                "movl %eax, %ebx;jmp - <MmProbeAndLockPages+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl (%ebp), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movl -, %esi;testl %esi, %esi": 1,
                "calll  <RtlTestBit>;subl $, %esp;testb %al, %al;je  <MmMapMemoryDumpMdl+>;leal (%ebx,%ebx,), %edx": 3,
                "testb %al, %al;je  <MmMapMemoryDumpMdl+>;leal (%ebx,%ebx,), %edx;movl , %eax;leal (%eax,%edx,), %eax": 1,
                "orl %edi, %ebx;movl , %eax;movl %ebx, (%eax);invlpg (%esi);movl -(%ebp), %eax": 1,
                "movl $, %eax;jmp  <MmMapMemoryDumpMdl+>;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "nop;je  <MmMapMemoryDumpMdl+>;calll - <MmMapMemoryDumpMdl+>;jmp  <MmMapMemoryDumpMdl+>;movl $, %ebx": 1,
                "movl (%ebp), %ebx;movl (%ebx), %eax;addl $, %ebx;cmpl %ebx, %eax;je  <MmMapMemoryDumpMdl+>": 1,
                "addl $, %ebx;cmpl %ebx, %eax;je  <MmMapMemoryDumpMdl+>;movl $, %esi;addl $, -": 1,
                "movl (%eax), %ecx;addl %ecx, %edi;cmpl -, %edi;jbe  <MmMapMemoryDumpMdl+>;subl $, %edi": 1,
                "je  <MmMapMemoryDumpMdl+>;cmpl $, %edx;je  <MmMapMemoryDumpMdl+>;cmpl $, %edx;jne  <MmMapMemoryDumpMdl+>": 1,
                "movl %edx, -;movl (%eax), %edx;movl %edx, -;movl (%eax), %edx;movl %edx, -": 12,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ecx;movl -, %edx;movl (%edx), %ebx": 1,
                "jmp  <MmMapMemoryDumpMdl+>;movl , %eax;leal -(%eax), %edx;testl %eax, %edx;je  <MmMapMemoryDumpMdl+>": 1,
                "leal -(%eax), %edx;testl %eax, %edx;je  <MmMapMemoryDumpMdl+>;movl $, -;movl , %eax": 1,
                "movl %eax, -(%ebp);cmpl %eax, %ebx;ja  <MmMapMemoryDumpMdl+>;testb $, (%ebx);jne  <MmMapMemoryDumpMdl+>": 2,
                "shll $, %edx;movl %edx, %edi;movl $, %ecx;movl $, %eax;rep  stosl %eax, %es:(%edi)": 2,
                "addl %eax, %ecx;movl $, (%ecx);movl $, (%ecx);movl -, %ecx;movl $, (%ecx,%eax)": 1,
                "addl %esi, %eax;leal (%eax,%eax,), %eax;leal -(%edx,%eax,), %eax;shrl $, %eax;leal -(,%eax,), %eax": 1,
                "movl , %eax;movl %eax, (%esp);movl $, (%esp);movl , %eax;movl %eax, (%esp)": 9,
                "movl $, -(%ebp);movl $, -(%ebp);movl , %eax;shrl $, %eax;movl %eax, -(%ebp)": 1,
                "andl $, %eax;orl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %edx;movl %edx, (%esi)": 1,
                "movl %edi, %eax;shrl $, %eax;leal -(,%eax,), %ebx;movl -(%ebp), %eax;andl $, %eax": 1,
                "movl %edx, -(%ebp);movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <MmMapMemoryDumpMdl+>": 1,
                "movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp);calll  <MmIsAddressValid>;subl $, %esp": 1,
                "je  <MmMapMemoryDumpMdl+>;movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);andl $, %eax": 1,
                "movb %al, -(%ebp);andl $-, %eax;orl $, %eax;movb %al, (%edx);addl $, %ebx": 1,
                "jbe  <MmMapMemoryDumpMdl+>;jmp  <MmMapMemoryDumpMdl+>;movl -(%ebp), %esi;movl (%esi), %esi;movl %esi, -(%ebp)": 1,
                "movl $, %edx;shll %cl, %edx;testl $, %edx;jne  <MmMapMemoryDumpMdl+>;testl $, %edx": 1,
                "leal (%eax,%edx,), %ebx;movl $, %ecx;movl -, %edx;calll *%edx;movb %al, -(%ebp)": 1,
                "ja  <MmMapMemoryDumpMdl+>;cmpl $, -;je  <MmMapMemoryDumpMdl+>;movl %edi, (%esp);movl $, (%esp)": 1,
                "cmpl $, (%esi);jne  <MmMapMemoryDumpMdl+>;movl $, (%edx);movl $, (%edx);movw $, (%edx)": 1,
                "addl $, %ebx;subl $, %eax;cmpl $-, %eax;jne - <MmMapMemoryDumpMdl+>;movl -(%ebp), %esi": 1,
                "je  <MmMapMemoryDumpMdl+>;leal (%esi,%esi,), %edx;movl , %eax;leal (%eax,%edx,), %edx;shrl $, %edx": 1,
                "shrl $, %edx;leal -(,%edx,), %edi;cmpl %edi, %ebx;ja  <MmMapMemoryDumpMdl+>;testb $, (%ebx)": 1,
                "cmpl %edi, %ebx;ja  <MmMapMemoryDumpMdl+>;testb $, (%ebx);je  <MmMapMemoryDumpMdl+>;movl (%ebx), %esi": 1,
                "calll - <MmMapMemoryDumpMdl+>;subl $, %esp;calll - <MmMapMemoryDumpMdl+>;movl -(%ebp), %ebx;leave": 1,
                "movl $, (%esp);shll $, %edx;movl %edx, (%esp);movl $, (%esp);calll - <ExAllocatePoolWithTag>": 1,
                "shll $, %edx;movl %edx, (%esp);movl $, (%esp);calll - <ExAllocatePoolWithTag>;subl $, %esp": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%esi), %eax;cmpl %ebx, %eax;je  <MmMapMemoryDumpMdl+>": 1,
                "shll %cl, %esi;testl $, %esi;je  <MmMapMemoryDumpMdl+>;movl (%eax), %ecx;movl %ecx, (%edi)": 1,
                "movl (%eax), %eax;cmpl %ebx, %eax;jne - <MmMapMemoryDumpMdl+>;jmp  <MmMapMemoryDumpMdl+>;movl -(%ebp), %edi": 1,
                "movl (%edi), %ebx;movl $, %esi;cmpl -, %ebx;ja  <MmMapMemoryDumpMdl+>;cmpl $, -": 1,
                "movl , %eax;movl %eax, (%esp);calll - <KeSetEvent>;subl $, %esp;leave": 1,
                "testl %eax, %eax;js  <MmMapMemoryDumpMdl+>;movl , %eax;movl %eax, (%esp);calll  <RtlLengthSid>": 1,
                "movl %eax, (%esp);calll  <RtlLengthSid>;subl $, %esp;movl %eax, %edi;movl , %eax": 5,
                "calll  <RtlLengthSid>;subl $, %esp;movl %eax, %esi;movl , %eax;movl %eax, (%esp)": 4,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;js  <MmMapMemoryDumpMdl+>;movl $, (%esp)": 1,
                "js  <MmMapMemoryDumpMdl+>;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl (%ebp), %eax": 1,
                "calll - <ExFreePoolWithTag>;subl $, %esp;movl %ebx, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);movl , %eax;testl %eax, %eax": 1,
                "movl %eax, (%esp);calll - <MmMapMemoryDumpMdl+>;subl $, %esp;movl $, %edx;testl %eax, %eax": 6,
                "testl %eax, %eax;js  <MmMapMemoryDumpMdl+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 5,
                "calll  <MmFreeNonCachedMemory+>;calll - <MmMapMemoryDumpMdl+>;movl $, %edx;movl %edx, %eax;leave": 1,
                "pushl %ebx;subl $, %esp;movl $, %ebx;movl %ebx, %edi;shll $, %edi": 1,
                "shrl $, %esi;cmpl -, %esi;ja  <MmMapMemoryDumpMdl+>;cmpl $, -;je  <MmMapMemoryDumpMdl+>": 1,
                "popl %edi;popl %ebp;rep  retl;pushl %ebp;movl %esp, %ebp": 4,
                "cmpl $, %eax;je  <MmMapMemoryDumpMdl+>;testl %eax, %eax;je  <MmMapMemoryDumpMdl+>;jmp  <MmMapMemoryDumpMdl+>": 1,
                "movl $, (%esp);calll  <DbgPrint>;addl $, %ebx;movl , %eax;cmpl %ebx, %eax": 1,
                "movl %edx, (%eax,%edi,);addl %esi, %edx;addl $, %edi;movl (%ebx), %ebx;cmpl -(%ebp), %ebx": 1,
                "andl $, %esi;orl %edi, %esi;movl %esi, (%ebx);movl , %eax;addl %eax, %eax": 1,
                "movl -, %esi;shrl $, %esi;leal -(,%esi,), %ebx;movl , %eax;shrl $, %eax": 1,
                "calll  <memset>;movl , %eax;shrl $, %eax;leal -(,%eax,), %eax;movl %eax, ": 1,
                "movl %esi, (%esp);leal (%eax), %edx;movl %edx, (%esp);movl %eax, (%esp);calll  <RtlInitializeBitMap>": 4,
                "movl %ebx, %eax;mull %edx;shrl $, %edx;cmpl $, %edx;jbe  <MmMapMemoryDumpMdl+>": 1,
                "movl $, %ecx;rep  movsl (%esi), %es:(%edi);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jne - <MmMapMemoryDumpMdl+>;jmp  <MmMapMemoryDumpMdl+>;movl $, %esi;movl %esi, %eax;shll $, %eax": 1,
                "movb $, (%eax);addl $, %eax;cmpl %edx, %eax;jne - <MmMapMemoryDumpMdl+>;movb $, -(%ebp)": 1,
                "movl $, -;movl $, -;movl $, -;movl , %eax;movl (%eax), %eax": 2,
                "movl $, -;movl $, -;movl , %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "calll  <KeQueryIoAccessMap+>;movl , %eax;subl $, %eax;movl %eax, ;movl , %eax": 1,
                "subl $, %eax;movl %eax, ;movl , %eax;movl $, %edx;subl %eax, %edx": 1,
                "addl $, %ebx;cmpl $, %ebx;jne - <MmMapMemoryDumpMdl+>;movl , %eax;leal (%eax), %edx": 1,
                "orl %ecx, %eax;movl -, %edx;subl %eax, %edx;movl %edx, %eax;cmpl $, %eax": 1,
                "subl $, %esp;jmp  <MmMapMemoryDumpMdl+>;movl $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "movl $, -;movl $, %ecx;calll - <KeSetEventBoostPriority+>;movl $, -;movl $, -": 2,
                "movl $, -;cmpl $, -;jne  <MmMapMemoryDumpMdl+>;movl $, -;cmpl $, -": 2,
                "andl $, %edx;movl %edx, %eax;cmpl $, %edx;jbe  <MmMapMemoryDumpMdl+>;movl $, %eax": 1,
                "subl $, %esp;testw $, -;je  <MmMapMemoryDumpMdl+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, -;ja  <MmMapMemoryDumpMdl+>;movl $, -": 1,
                "calll - <MmMapMemoryDumpMdl+>;movl , %eax;addl -, %eax;leal (%eax,%eax,), %eax;shll $, %eax": 1,
                "movl , %eax;movl %eax, ;movl $, -;movl , %eax;cmpl $, %eax": 1,
                "subl -, %eax;subl -, %eax;movl %eax, ;movl %eax, ;testl %eax, %eax": 1,
                "movl %eax, ;movl %eax, ;testl %eax, %eax;jne  <MmMapMemoryDumpMdl+>;movl $, (%esp)": 1,
                "movl , %eax;cmpl $, %eax;ja  <MmMapMemoryDumpMdl+>;movl %eax, ;jmp  <MmMapMemoryDumpMdl+>": 1,
                "movl $, %eax;testb $, -(,%ecx,);je  <MmIsAddressValid+>;shrl $, %edx;movzbl -(,%edx,), %eax": 1,
                "shrl $, %edx;movzbl -(,%edx,), %eax;andl $, %eax;popl %ebp;retl $": 1,
                "movl (%ebp), %esi;testl %esi, %esi;jne  <MmAllocateNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpl %eax, -(%ebp);ja  <MmAllocateNonCachedMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll - <ExFreePoolWithTag>;subl $, %esp;movl $, -(%ebp);jmp  <MmAllocateNonCachedMemory+>;movl $, (%esp)": 1,
                "subl $, %esp;testl %eax, %eax;jne  <MmAllocateNonCachedMemory+>;movl %esi, (%esp);calll - <MmFreePagesFromMdl>": 1,
                "addl $, %eax;movl %eax, %edx;shll $, %edx;movl %edx, -(%ebp);addl $, %esi": 1,
                "movl -(%ebp), %edx;movl (%edx), %esi;addl $, %edx;movl %edx, -(%ebp);andl $, %esi": 1,
                "je  <MmAllocateNonCachedMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "orl -(%ebp), %edi;testl $, %edi;jne  <MmAllocateNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "testl $, %edi;jne  <MmAllocateNonCachedMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <DbgPrint>;calll - <KeAreAllApcsDisabled>;movl $, %edx;cmpb $, %al": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);testl %eax, %eax;je  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "jb  <MmFreeNonCachedMemory+>;movl %esi, (%esp);movl %edi, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpl %eax, %esi;jb  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %eax;testb $, (%eax);je  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "testl %eax, %eax;jns  <MmFreeNonCachedMemory+>;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, %edx;jmp  <MmFreeNonCachedMemory+>;movl $, %edx": 1,
                "subl $, %esp;movl (%ebp), %eax;andl $, %eax;shll $, %eax;andl $, %ebx": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %edi;movl $, (%edi)": 1,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;jne  <MmFreeNonCachedMemory+>;movl (%ebp), %edx": 1,
                "cmpl (%esi), %ebx;jbe  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "leal (%ebx), %eax;cmpl $, %eax;ja  <MmFreeNonCachedMemory+>;movl , %eax;shrl $, %eax": 1,
                "movl (%ebp), %eax;movl $, (%eax);movl $, %ebx;jmp  <MmFreeNonCachedMemory+>;movl (%ebp), %edx": 1,
                "movl $, %ebx;jmp  <MmFreeNonCachedMemory+>;movl (%ebp), %edx;movl $, (%edx);movl $, %ebx": 1,
                "testb $, -(,%eax,);jne  <MmFreeNonCachedMemory+>;movl %ecx, (%esp);movl $, (%esp);calll  <DbgPrint>": 2,
                "shrl $, %edx;leal -(,%edx,), %esi;movl $, %eax;testb $, -(,%edx,);jne  <MmFreeNonCachedMemory+>": 1,
                "movl $, %eax;jmp  <MmFreeNonCachedMemory+>;cmpl %eax, %ecx;jb  <MmFreeNonCachedMemory+>;shrl $, %ecx": 1,
                "movl %edx, %eax;shrb $, %al;andl $, %eax;shrb $, %dl;andl $, %edx": 1,
                "andl $, %esi;movl %esi, -(%ebp);movzbl (%edi), %esi;andl $, %esi;movl %esi, %ecx": 1,
                "andl $, %eax;shll $, %eax;orl %edx, %edi;orl %eax, %edi;movl -(%ebp), %eax": 1,
                "shll $, %esi;andl $-, %edi;movzbl -(%ebp), %eax;andl $, %eax;shll $, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebp), %eax;cmpl $, (%eax);je  <MmFreeNonCachedMemory+>": 1,
                "subl $, %esp;movl (%ebp), %eax;movzwl (%eax), %eax;movl %eax, %edi;addl $, %edi": 1,
                "movl $, %edi;movb $, -(%ebp);jmp  <MmFreeNonCachedMemory+>;movl $, %edi;movb $, -(%ebp)": 1,
                "movb $, -(%ebp);movb $, -(%ebp);movl %esi, %eax;testb %al, %al;je  <MmFreeNonCachedMemory+>": 1,
                "calll  <MmFreeNonCachedMemory+>;subl $, %esp;movl %eax, %esi;movb $, -(%ebp);jmp  <MmFreeNonCachedMemory+>": 1,
                "calll  <MmFreeNonCachedMemory+>;subl $, %esp;cmpb $, -(%ebp);je  <MmFreeNonCachedMemory+>;movzbl -(%ebp), %edx": 1,
                "subl $, %esp;cmpb $, -(%ebp);je  <MmFreeNonCachedMemory+>;movzbl -(%ebp), %edx;movl $, %ecx": 1,
                "calll  <RtlAssert>;subl $, %esp;testl $, %edi;jne  <MmFreeNonCachedMemory+>;movl $, (%esp)": 4,
                "subl $, %esp;movl %edi, (%ebx);cmpb $, -(%ebp);je  <MmFreeNonCachedMemory+>;leal (%esi,%esi,), %edx": 1,
                "testb %al, %al;je  <MmFreeNonCachedMemory+>;movl -(%ebp), %eax;leal (%eax,%eax,), %edx;movl , %eax": 1,
                "andl $, %eax;cmpl $, %eax;jne  <MmFreeNonCachedMemory+>;movzwl (%edi), %eax;shrw $, %ax": 1,
                "movzwl (%edi), %eax;shrw $, %ax;movl %eax, %edx;andl $, %edx;movl %edx, -(%ebp)": 1,
                "movb $, -(%ebp);jmp  <MmFreeNonCachedMemory+>;movzwl (%ebx), %eax;shrw $, %ax;andl $, %eax": 1,
                "je  <MmFreeNonCachedMemory+>;movb $, -(%ebp);testb $, (%ebx);jne  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "subl $, %esp;jmp  <MmFreeNonCachedMemory+>;cmpw $, %bx;jne  <MmFreeNonCachedMemory+>;movzbl (%esi), %eax": 2,
                "subl $, %esp;cmpl $, (%esi);je  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 3,
                "testw %ax, %ax;jne  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "cmpl %eax, -;jbe  <MmFreeNonCachedMemory+>;cmpl -, %edi;jbe  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "jbe  <MmFreeNonCachedMemory+>;cmpl -, %edi;jbe  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "orl -(,%ebx,), %eax;jmp  <MmFreeNonCachedMemory+>;movl $, %eax;cmpl $, %edi;jbe  <MmFreeNonCachedMemory+>": 1,
                "shrl $, %edi;movl %edi, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "shrl $, %edx;leal -(,%edx,), %edx;cmpl %edx, %eax;jbe  <MmFreeNonCachedMemory+>;movl $, (%esp)": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;jmp  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "movl %ebx, (%esp);calll  <MmFreeNonCachedMemory+>;subl $, %esp;cmpl $, (%ebx);je  <MmFreeNonCachedMemory+>": 2,
                "jne  <MmFreeNonCachedMemory+>;movzbl (%ebx), %eax;andl $, %eax;cmpb $, %al;jne  <MmFreeNonCachedMemory+>": 1,
                "ja  <MmFreeNonCachedMemory+>;movl $, %eax;orl %edx, %eax;orl %ecx, %eax;testb $, (%ebx)": 1,
                "andl $-, %edi;testb $, (%esi);je  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %ebx;movl (%ebp), %edi;movzbl (%ebp), %eax;movb %al, -(%ebp);movzbl (%ebp), %eax": 1,
                "movl $, -(%ebp);calll *-;cmpb $, %al;je  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "testb $, %ah;jne  <MmFreeNonCachedMemory+>;movl %esi, %eax;shrl $, %eax;andl $, %eax": 1,
                "jmp  <MmFreeNonCachedMemory+>;andl $, %edx;cmpb $, %dl;jne  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "movzbl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp)": 2,
                "cmpb $, %al;jbe  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 35,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;calll - <KeAreAllApcsDisabled>;cmpb $, %al": 36,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;jmp  <MmFreeNonCachedMemory+>;testb $, (%edi)": 1,
                "subl $, %esp;jmp  <MmFreeNonCachedMemory+>;testb $, (%edi);je  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;calll *-;cmpb -(%ebp), %al;je  <MmFreeNonCachedMemory+>": 1,
                "movl (%edi), %eax;andl $, %eax;cmpl $, %eax;je  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "subl $, %esp;cmpl $, (%ebp);je  <MmFreeNonCachedMemory+>;movl (%ebp), %edx;movzbl (%edx), %edx": 1,
                "shrl $, %ebx;leal (%ebx,%ebx,), %edx;movl , %eax;leal (%eax,%edx,), %ebx;movzbl (%ebx), %eax": 1,
                "orl $, %eax;movb %al, (%ebx);testb $, (%esi);je  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movzbl -(%ebp), %eax;movl %eax, (%esp);calll - <MmFreeNonCachedMemory+>": 1,
                "movzbl -(%ebp), %eax;movl %eax, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp;movl %fs:, %eax": 1,
                "subl $, %esp;lock;subl $, -;movl -(%ebp), %eax;cmpw $, (%eax)": 2,
                "movl -(%ebp), %eax;cmpw $, (%eax);ja  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpw $, (%eax);ja  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testb $, (%edi);je  <MmFreeNonCachedMemory+>": 1,
                "cmpw %ax, %bx;jne - <MmFreeNonCachedMemory+>;cmpw $, %bx;nop;ja  <MmFreeNonCachedMemory+>": 1,
                "jne - <MmFreeNonCachedMemory+>;cmpw $, %bx;nop;ja  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "nop;ja  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;jmp  <MmFreeNonCachedMemory+>;testb $, %bl": 1,
                "calll - <MmFreeNonCachedMemory+>;subl $, %esp;movl %eax, %edi;calll - <KeAreAllApcsDisabled>;cmpb $, %al": 1,
                "js  <MmFreeNonCachedMemory+>;calll *-;cmpb -(%ebp), %al;je  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "jmp  <MmFreeNonCachedMemory+>;movl -(%ebp), %edx;movl -(,%edx,), %eax;shrl $, %eax;leal (%eax,%eax,), %edx": 1,
                "movl %edx, -(%ebp);cmpb $, -(%ebp);jbe  <MmFreeNonCachedMemory+>;movl , %eax;shrl $, %eax": 1,
                "cmpl %eax, %edi;jb  <MmFreeNonCachedMemory+>;cmpl $, %edi;ja  <MmFreeNonCachedMemory+>;movl -(%ebp), %eax": 2,
                "movl -(%ebp), %ecx;movl %eax, -(,%ecx,);movl %edi, %ecx;calll - <MmFreeNonCachedMemory+>;movzbl -(,%ebx,), %eax": 1,
                "movl $, (%esp);calll - <KeBugCheckEx>;movl %edi, (%esp);movzbl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edi, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;movzbl %al, %edx;movl $, %ecx": 1,
                "movl $, %ebx;jmp  <MmFreeNonCachedMemory+>;movb $, -(%ebp);cmpl -, %edi;jb  <MmFreeNonCachedMemory+>": 1,
                "addl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;testw $, (%eax);jne  <MmFreeNonCachedMemory+>": 1,
                "movb %al, -(%ebp);movl %fs:, %eax;movl (%eax), %ebx;calll *-;cmpb $, %al": 1,
                "movzwl (%ebx), %eax;cmpw $, %ax;je  <MmFreeNonCachedMemory+>;testw %ax, %ax;jle  <MmFreeNonCachedMemory+>": 3,
                "movl -(%ebp), %eax;testb $, (%eax);je  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 10,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;orb $-, (%eax)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;orb $, (%eax);movl -(%ebp), %edx": 1,
                "cmpb $, -(%ebp);je  <MmFreeNonCachedMemory+>;movzbl %bh, %eax;movb %al, -(%ebp);testb $, %al": 1,
                "movl -(%ebp), %edx;testb $, (%edx);jne  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 10,
                "movl -(%ebp), %ecx;testb $, (%ecx);jne  <MmFreeNonCachedMemory+>;testl $, (%ecx);je  <MmFreeNonCachedMemory+>": 10,
                "movl %ebx, %esi;testb $, %bl;jne  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 4,
                "orl %edx, %eax;addl -, %eax;movl %eax, -(%ebp);cmpb $, -(%ebp);je  <MmFreeNonCachedMemory+>": 1,
                "movl %eax, (%esp);movl %edi, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp;movl %eax, -(%ebp)": 3,
                "movl %eax, (%esp);movl %edi, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;cmpb $, -(%ebp)": 1,
                "movl $, (%esp);calll - <KeBugCheckEx>;movl $, -(%ebp);jmp  <MmFreeNonCachedMemory+>;movl $, -(%ebp)": 1,
                "cmpl (%eax), %esi;je  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 6,
                "leal (%esi), %eax;cmpl %eax, (%esi);je  <MmFreeNonCachedMemory+>;calll - <KiCheckForKernelApcDelivery>;movzbl -(%ebp), %ecx": 1,
                "subl $, %esp;movl %fs:, %eax;movl -(%ebp), %edx;cmpl (%eax), %edx;je  <MmFreeNonCachedMemory+>": 3,
                "movzwl (%ecx), %eax;cmpw $, %ax;je  <MmFreeNonCachedMemory+>;testw %ax, %ax;jle  <MmFreeNonCachedMemory+>": 1,
                "movl %edi, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp;cmpl $, -(%ebp);jne  <MmFreeNonCachedMemory+>": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 3,
                "lock;xaddl %ebx, (%ecx);movb %bl, -(%ebp);testb $, %bl;jne  <MmFreeNonCachedMemory+>": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <MmFreeNonCachedMemory+>;calll - <KiCheckForKernelApcDelivery>;calll *-": 1,
                "jmp  <MmFreeNonCachedMemory+>;andl $, %eax;shll $, %eax;movl %ebx, %edi;andl $, %edi": 1,
                "testl %eax, %eax;jne  <MmFreeNonCachedMemory+>;movl %ebx, (%esp);calll  <MmFreeNonCachedMemory+>;subl $, %esp": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll  <MmFreeNonCachedMemory+>;subl $, %esp;movl %edi, %ecx": 1,
                "movl -, %ebx;movl %ebx, %edi;orl $, %edi;movl %esi, %edx;shll $, %edx": 1,
                "movl -(%ebp), %eax;movzwl -(,%eax,), %eax;movl %eax, %edx;shrw $, %dx;andl $, %edx": 1,
                "movl %esi, %edx;shll $, %edx;movl %eax, %edi;andl $, %edi;movl %edi, %ebx": 1,
                "movl -(%ebp), %edx;movl %edi, -(,%edx,);leal (%esi,%esi,), %eax;shll $, %eax;addl -, %eax": 1,
                "movl %ebx, %edx;andl $, %edx;cmpl $, %edx;jne  <MmFreeNonCachedMemory+>;leal -(%ebp), %eax": 1,
                "testb $, %al;je  <MmFreeNonCachedMemory+>;movl $, -(%ebp);movl $, %eax;jmp  <MmFreeNonCachedMemory+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %ecx;movl $, %eax;lock": 3,
                "jmp - <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "movl (%ebp), %ebx;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %esi;calll *-": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, (%ebx);movzbl (%esi), %eax;andl $, %eax": 1,
                "je  <MmFreeNonCachedMemory+>;orl $, (%ebx);testb $, (%esi);je  <MmFreeNonCachedMemory+>;orl $, (%ebx)": 3,
                "subl $, %esp;movl (%ebp), %ebx;calll *-;cmpb $, %al;je  <MmFreeNonCachedMemory+>": 2,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, (%esi);jne  <MmFreeNonCachedMemory+>;cmpl $-, (%esi)": 1,
                "subl -, %eax;sarl $, %eax;imull $, %eax, %eax;movl %eax, %edx;andl -, %edx": 1,
                "jmp  <MmFreeNonCachedMemory+>;movl $, (%edi);jmp  <MmFreeNonCachedMemory+>;movl (%ebx), %eax;andl $, %eax": 1,
                "movl , %eax;cmpl -, %eax;jne  <MmFreeNonCachedMemory+>;movl , %eax;movl %eax, (%esp)": 3,
                "movl %eax, (%esp);calll - <KeClearEvent>;subl $, %esp;jmp  <MmFreeNonCachedMemory+>;cmpl -, %eax": 6,
                "subl $, %eax;movl %eax, ;cmpl -, %eax;jae  <MmFreeNonCachedMemory+>;movl %eax, (%esp)": 3,
                "jae  <MmFreeNonCachedMemory+>;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "calll  <RtlAssert>;subl $, %esp;movzbl (%esi), %eax;andl $, %eax;movl -(,%eax,), %ebx": 1,
                "subl $, %esp;subl $, -;movl $, %ebx;jmp  <MmFreeNonCachedMemory+>;cmpl $, %ebx": 1,
                "jmp  <MmFreeNonCachedMemory+>;cmpl $, %ebx;jne  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%esi), %eax;movl (%esi), %edx;cmpl $-, %eax": 1,
                "subl $, %esp;movl (%esi), %eax;movl (%esi), %edx;cmpl $-, %eax;je  <MmFreeNonCachedMemory+>": 1,
                "addl -, %edx;movl %eax, (%edx);jmp  <MmFreeNonCachedMemory+>;movl %eax, (%ebx);movl $, (%esi)": 1,
                "subl $, (%ebx);leal -(%ebp), %esp;popl %ebx;popl %esi;popl %ebp": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebp), %eax;cmpl %eax, -": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%esi), %eax;movl %eax, -(%ebp);cmpl $, %eax": 1,
                "cmpl $-, %eax;jne  <MmFreeNonCachedMemory+>;movl $, (%esi);jmp  <MmFreeNonCachedMemory+>;leal (%eax,%eax,), %eax": 1,
                "jne  <MmFreeNonCachedMemory+>;movl $, (%esi);jmp  <MmFreeNonCachedMemory+>;leal (%eax,%eax,), %eax;shll $, %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl %ebx, -;ja  <MmFreeNonCachedMemory+>": 1,
                "jne  <MmFreeNonCachedMemory+>;movl -, %edx;movl (%edx,%eax), %esi;cmpl $-, %esi;jne  <MmFreeNonCachedMemory+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl , %eax;movl %eax, %ebx;andl -, %ebx": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl $, -;je  <MmFreeNonCachedMemory+>": 1,
                "leal (%eax,%edx,), %esi;movzbl (%esi), %eax;andl $, %eax;cmpb $, %al;jbe  <MmFreeNonCachedMemory+>": 1,
                "movb $, -(%ebp);cmpl $-, %ebx;jne  <MmFreeNonCachedMemory+>;cmpl $, -;jne  <MmFreeNonCachedMemory+>": 2,
                "andl -, %esi;cmpl $-, %eax;jne  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "leal (%ebx,%ebx,), %edx;movl , %eax;leal (%eax,%edx,), %edi;movzbl (%edi), %eax;andl $, %eax": 1,
                "movl , %eax;leal (%eax,%edx,), %edi;movzbl (%edi), %eax;andl $, %eax;cmpb $, %al": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpb $, -(%ebp);je  <MmFreeNonCachedMemory+>;movl %ebx, (%esp)": 1,
                "cmpl -, %esi;ja  <MmFreeNonCachedMemory+>;cmpl -, %esi;jae  <MmFreeNonCachedMemory+>;movl $, (%esp)": 2,
                "ja  <MmFreeNonCachedMemory+>;cmpl -, %esi;jae  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 2,
                "subl $, %esp;leal (%esi,%esi,), %edx;movl , %eax;leal (%eax,%edx,), %ebx;cmpb $, (%ebx)": 2,
                "addl -, %eax;movl %esi, (%eax);jmp  <MmFreeNonCachedMemory+>;movl %esi, -;movl %esi, -": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl $, (%ebx);movl %edi, (%ebx)": 1,
                "movl %ebx, (%eax);movl $, (%ebx);addl $, (%eax);cmpl $, -;jbe  <MmFreeNonCachedMemory+>": 1,
                "subl $, %esp;movl %ecx, %esi;movl %ecx, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jne  <MmFreeNonCachedMemory+>;cmpl $-, (%edi);jne  <MmFreeNonCachedMemory+>;cmpl $-, (%edi);jne  <MmFreeNonCachedMemory+>": 1,
                "addl -, %eax;movl %edi, (%eax);jmp  <MmFreeNonCachedMemory+>;movl %edi, (%esi);jmp  <MmFreeNonCachedMemory+>": 1,
                "jmp  <MmFreeNonCachedMemory+>;movl %edi, (%esi);jmp  <MmFreeNonCachedMemory+>;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "jmp  <MmFreeNonCachedMemory+>;movl (%esi), %eax;movl %eax, -(%ebp);cmpl $-, %eax;je  <MmFreeNonCachedMemory+>": 1,
                "addl -, %eax;movl %edi, (%eax);jmp  <MmFreeNonCachedMemory+>;movl %edi, (%esi);movl %edi, (%esi)": 1,
                "movl %edi, (%eax);cmpl $-, %edx;je  <MmFreeNonCachedMemory+>;leal (%edx,%edx,), %edx;shll $, %edx": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;leal (%ebx,%ebx,), %edx": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;leal (%ebx,%ebx,), %edx;movl , %eax": 2,
                "movl (%ebx), %eax;andl $, %eax;orl %esi, %eax;movl %eax, (%ebx);leal (%esi,%esi,), %edx": 1,
                "calll - <KeBugCheckEx>;movl -(,%edi,), %edi;shrl $, %edi;testl %edi, %edi;jne  <MmFreeNonCachedMemory+>": 1,
                "movl , %eax;addl $, (%eax,%edx,);testb $, (%esi);je  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "addl $, (%eax,%edx,);testb $, (%esi);je  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esi);leal -(%ebp), %esp;popl %ebx;popl %esi;popl %edi": 1,
                "movl $, %ecx;calll *-;movl %eax, %edi;movl , %eax;cmpl $, %eax": 1,
                "movl $, (%esp);movl %ebx, (%esp);movl %esi, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp": 1,
                "calll  <RtlAssert>;subl $, %esp;movl , %eax;cmpl %esi, %eax;jb  <MmFreeNonCachedMemory+>": 1,
                "leal (%edx,%ecx,), %edx;cmpl %edx, %ebx;jne  <MmFreeNonCachedMemory+>;movzwl (%ebx), %edx;testw %dx, %dx": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpw $, (%ebx);jbe  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "subl $, %esp;cmpw $, (%ebx);jbe  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;subw $, (%ebx);cmpw $, (%ebx);jne  <MmFreeNonCachedMemory+>": 1,
                "subl $, %esp;cmpw $, (%ebx);jne  <MmFreeNonCachedMemory+>;testb $, (%ebx);je  <MmFreeNonCachedMemory+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movzbl (%ebx), %eax;andl $-, %eax;orl $, %eax": 3,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%ebp), %esi;leal (%eax,%eax,), %edx": 1,
                "testl %esi, %esi;je  <MmFreeNonCachedMemory+>;movl %esi, %eax;andl $, %eax;movl (%ebx), %edx": 1,
                "je  <MmFreeNonCachedMemory+>;movl %esi, %eax;andl $, %eax;movl (%ebx), %edx;andl $, %edx": 1,
                "andl $, %edx;orl %edx, %eax;movl %eax, (%ebx);leal (%esi,%esi,), %edx;movl , %eax": 1,
                "movl -, %edi;cmpb $, (%ebp);je  <MmFreeNonCachedMemory+>;movl -, %edi;movl $, %ecx": 1,
                "movl %eax, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp;movl %eax, (%esi);andl $, %eax": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl %eax, %edx;shrl $, %edx": 3,
                "movl %esi, (%ebx);addl $, %ebx;cmpl %ebx, %edi;ja - <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "ja - <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp);calll  <KeFlushEntireTb>;subl $, %esp": 1,
                "andl $, %eax;andl $, %edx;shll $, %edx;orl %ecx, %eax;orl %edx, %eax": 1,
                "andl $, %ecx;shll $, %ecx;orl %edx, %edi;movl %edi, %eax;orl %ecx, %eax": 1,
                "subl $, %esp;cmpb $, %al;sbbl %eax, %eax;notl %eax;andl %eax, %edi": 2,
                "movl %esi, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp;leal -(%ebp), %esp;popl %ebx": 1,
                "notl %eax;andl %eax, %esi;jmp  <MmFreeNonCachedMemory+>;movl $, %esi;movl (%ebx), %edx": 1,
                "calll - <MmFreeNonCachedMemory+>;subl $, %esp;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "mull %edx;shrl %edx;cmpl $, %edx;jbe  <MmFreeNonCachedMemory+>;movl $, %edx": 1,
                "shrl %eax;cmpl $, %eax;jbe  <MmFreeNonCachedMemory+>;movl $, %eax;movl %eax, ": 1,
                "jbe  <MmFreeNonCachedMemory+>;calll *-;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp)": 2,
                "movl -(,%ebx,), %eax;shrl $, %eax;movl %eax, ;movl -, %ebx;addl -, %ebx": 1,
                "leal -(%edx,%eax), %eax;movl %eax, ;movl $, (%esp);movl %eax, (%esp);addl $, %ebx": 1,
                "movl %eax, (%esp);movl $, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;movl $, %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;movl $, %eax;jmp  <MmFreeNonCachedMemory+>": 1,
                "cmpl $, %edx;jne  <MmFreeNonCachedMemory+>;cmpw $, -;je  <MmFreeNonCachedMemory+>;movl $, %ecx": 1,
                "addl %ecx, %edx;sarl $, %edx;movl -(,%edx,), %edx;movl %edx, (%esp);movl %ebx, (%esp)": 1,
                "movl %eax, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp;addl $, %ebx;subl $, %edi": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);movl , %eax;movl %eax, (%esp);calll  <RtlFindClearBitsAndSet>": 1,
                "calll  <KeFlushEntireTb>;subl $, %esp;shrl $, %esi;leal -(,%esi,), %eax;movl -(%ebp), %ecx": 1,
                "cmpl %ebx, %edi;jne  <MmFreeNonCachedMemory+>;jmp  <MmFreeNonCachedMemory+>;movl %esi, %ebx;cmpb $, -": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebx), %eax;cmpl %eax, -(%ebp);ja  <MmFreeNonCachedMemory+>": 1,
                "jmp  <MmFreeNonCachedMemory+>;movl (%ebx), %edx;movl (%ebx), %eax;movl %eax, (%edx);movl %edx, (%eax)": 3,
                "movl -(,%ebx,), %esi;shrl $, %esi;movl $, %ebx;cmpl -, %esi;ja  <MmFreeNonCachedMemory+>": 1,
                "cmpb $, -;je  <MmFreeNonCachedMemory+>;movl %eax, (%esp);movl %ebx, (%esp);calll - <MmFreeNonCachedMemory+>": 1,
                "movl -(%ebp), %eax;movl %esi, -(%eax);subl $, -(%ebp);jne - <MmFreeNonCachedMemory+>;orb $, (%edi)": 1,
                "je  <MmFreeNonCachedMemory+>;orb $, (%ebx);movl -(%ebp), %ecx;calll - <KeReleaseSemaphore+>;movzbl -(%ebp), %edx": 1,
                "movl %eax, (%esp);calll  <RtlTestBit>;subl $, %esp;testb %al, %al;je - <MmFreeNonCachedMemory+>": 1,
                "cmpl -, %eax;jae  <MmFreeNonCachedMemory+>;movl (%ebp), %edx;movl $, %ecx;calll - <InterlockedPushEntrySList>": 2,
                "movl , %eax;leal (%eax,%esi,), %eax;movl %eax, (%esp);calll  <MmGetSystemRoutineAddress+>;subl $, %esp": 1,
                "movl %ebx, (%esp);movl , %eax;movl %eax, (%esp);calll  <RtlClearBit>;subl $, %esp": 1,
                "movl %esi, -;calll *-;cmpb $, %al;jbe  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp;testb $, (%ebx);je  <MmFreeNonCachedMemory+>": 2,
                "je  <MmFreeNonCachedMemory+>;leal (%ebx,%ebx,), %edx;movl , %eax;leal (%eax,%edx,), %eax;testl %eax, %eax": 2,
                "movl , %eax;leal (%eax,%edx,), %eax;testl %eax, %eax;je  <MmFreeNonCachedMemory+>;testb $, (%eax)": 1,
                "testb $, (%eax);jne  <MmFreeNonCachedMemory+>;movl (%ebp), %ebx;subl $, %ebx;cmpl $, (%ebx)": 1,
                "movl (%ebp), %ebx;subl $, %ebx;cmpl $, (%ebx);je  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebx), %ebx;cmpb $, -": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebx), %ebx;cmpb $, -;je  <MmFreeNonCachedMemory+>": 1,
                "subl $, %esp;movl (%ebx), %ebx;cmpb $, -;je  <MmFreeNonCachedMemory+>;movl $, (%esp)": 1,
                "addl %esi, %eax;movl %eax, (%ebx);cmpl %ebx, (%ebp);jne  <MmFreeNonCachedMemory+>;movl %esi, (%ebx)": 1,
                "movl %eax, (%ebx);movl %edx, (%ebx);movl %ebx, (%edx);movl %ebx, (%eax);testl %esi, %esi": 1,
                "addl (%ebp), %esi;movl (%ebp), %eax;movl %ebx, (%eax);movl $, (%eax);leal (%eax), %edx": 1,
                "movl %edx, %eax;cmpl %esi, %edx;jne - <MmFreeNonCachedMemory+>;cmpb $, -;je  <MmFreeNonCachedMemory+>": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp;movzbl -(%ebp), %edx": 1,
                "jmp  <MmFreeNonCachedMemory+>;movl %edi, %esi;jmp - <MmFreeNonCachedMemory+>;movl (%ebp), %ebx;jmp - <MmFreeNonCachedMemory+>": 1,
                "movl $, (%esp);movl , %eax;movl (%eax), %eax;movl %eax, (%esp);movl %esi, (%esp)": 1,
                "movl , %eax;lock;addl $, (%eax);movl , %eax;lock": 1,
                "movl %eax, (%ebx);testl %eax, %eax;jne  <MmFreeNonCachedMemory+>;movl $, (%esp);movl $, (%esp)": 2,
                "jns  <MmFreeMappingAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %fs:, %eax;movl -(%ebp), %edx;cmpl (%eax), %edx;je  <MmFreeMappingAddress+>;movl $, (%esp)": 1,
                "subl $, %esp;movl -(%ebp), %eax;subw $, (%eax);lock;btrl $, (%esi)": 2,
                "movl -, %edx;movl -, %ecx;movl , %eax;cmpl %eax, %edx;jne - <MmFreeMappingAddress+>": 1,
                "movl -(%ebp), %eax;subl $, %eax;shll $, %ecx;subl %ecx, %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl %eax, -(%ebp);cmpl $, %eax;jne  <MmFreeMappingAddress+>;leal -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);leal (%esi), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl $, (%esp);movl , %eax;subl $, %eax;movl %eax, (%esp)": 2,
                "subl $, %esp;movl $, %eax;jmp  <MmFreeMappingAddress+>;movl (%ebp), %ecx;cmpl $, (%ecx)": 1,
                "movl (%ebp), %ecx;cmpl $, (%ecx);ja  <MmFreeMappingAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "testb $, (%esi);je  <MmFreeMappingAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %edi, (%esi);movl $, (%edi);movl $, (%edi);movl -(%ebp), %eax": 1,
                "testl $, (%esi);je  <MmFreeMappingAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testb $, %bl;jne  <MmFreeMappingAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testl $, %edi;jne  <MmFreeMappingAddress+>;testl $, %ebx;je  <MmFreeMappingAddress+>;movl $, (%esp)": 1,
                "cmpb $, %al;jne  <MmFreeMappingAddress+>;movl -(%ebp), %ecx;calll - <ExfTryToWakePushLock>;calll *-": 2,
                "jne  <MmFreeMappingAddress+>;leal (%esi), %ecx;calll - <KeSetEventBoostPriority+>;movl %fs:, %eax;movl (%eax), %ebx": 1,
                "testw %dx, %dx;jne  <MmFreeMappingAddress+>;leal (%ebx), %edx;cmpl %edx, (%ebx);je  <MmFreeMappingAddress+>": 1,
                "subl $, %esp;cmpl (%ebx), %edi;jne  <MmFreeMappingAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "shrl $, %eax;testl %eax, %eax;jg  <MmFreeMappingAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %fs:, %eax;movl (%eax), %eax;cmpl (%eax), %ebx;jne  <MmFreeMappingAddress+>;calll - <PsGetCurrentThread>": 1,
                "subl $, %esp;movl -(%ebp), %eax;andb $-, (%eax);testb $, (%ebx);jne  <MmFreeMappingAddress+>": 1,
                "movl -(%ebp), %edx;movl $, %esi;lock;xaddl %esi, (%edx);movl %esi, %edx": 4,
                "jne  <MmFreeMappingAddress+>;testl $, %esi;je  <MmFreeMappingAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <MmFreeMappingAddress+>;calll - <KiCheckForKernelApcDelivery>;calll - <KeDetachProcess>": 1,
                "cmpb $, (%ebp);jne  <MmFreeMappingAddress+>;movzwl -, %eax;cmpl -, %eax;jae  <MmFreeMappingAddress+>": 1,
                "je  <MmFreeMappingAddress+>;movl %ebx, (%esp);movl $, (%esp);calll  <RtlTestBit>;subl $, %esp": 1,
                "je  <MmFreeMappingAddress+>;leal (%ebx,%ebx,), %edx;movl , %eax;leal (%eax,%edx,), %edx;movl $, %ecx": 1,
                "calll - <MmFreeNonCachedMemory+>;subl $, %esp;orl $, (%ebx);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <MmFreeMappingAddress+>;movl $, -(%ebp);movl $, %ecx;calll *-;movb %al, -(%ebp)": 1,
                "subl $, %esp;cmpl -, %esi;jb  <MmFreeMappingAddress+>;cmpl -, %esi;jae  <MmFreeMappingAddress+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebp), %eax;subl (%ebp), %eax": 1,
                "shrl $, %eax;leal -(,%eax,), %eax;cmpl %eax, -(%ebp);jae  <MmFreeMappingAddress+>;movl $, (%esp)": 1,
                "movb %al, -(%ebp);cmpl %ebx, -(%ebp);jbe  <MmFreeMappingAddress+>;jmp  <MmFreeMappingAddress+>;movl %esi, %ebx": 1,
                "cmpl %ebx, -(%ebp);jbe  <MmFreeMappingAddress+>;jmp  <MmFreeMappingAddress+>;movl %esi, %ebx;movl , %eax": 1,
                "movl , %eax;andl $, %eax;orl %eax, %edi;orl -, %edi;leal -(%ebx), %esi": 1,
                "orl %eax, %edi;orl -, %edi;leal -(%ebx), %esi;testb $, (%ebx);je  <MmFreeMappingAddress+>": 1,
                "jbe - <MmFreeMappingAddress+>;movzbl -(%ebp), %edx;movl $, %ecx;calll *-;movl -(%ebp), %eax": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <MmFreeMappingAddress+>;subl $, %esp": 2,
                "movl -(%ebp), %eax;movl (%ecx), %edx;movl %edx, (%eax);movzbl (%ecx), %edx;movb %dl, -(%ebp)": 1,
                "movl %edx, %ecx;addl -, %ecx;movl %ecx, (%eax);addl -, %edx;movl %edx, (%eax)": 1,
                "movl $, (%esp);movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, (%esp);calll  <RtlImageDirectoryEntryToData>": 1,
                "movl $, (%esp);movl %eax, (%esp);calll - <ProbeForRead>;subl $, %esp;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %ecx;movzwl (%ecx), %eax;movl %eax, (%edx);movzwl (%ecx), %eax;movl %eax, (%edx)": 2,
                "testl %eax, %eax;je  <MmGrowKernelStack+>;andl $, %eax;movl %eax, (%edx);movl -(%ebp), %ecx": 1,
                "je  <MmGrowKernelStack+>;movzwl (%ebx), %eax;testw %ax, %ax;je  <MmGrowKernelStack+>;movw %ax, (%edx)": 1,
                "movl %eax, -(%ebp);cmpw $, -(%ebp);sbbl %eax, %eax;andl -(%ebp), %eax;movl %eax, (%edx)": 1,
                "leal (%esi), %esi;jmp - <MmGrowKernelStack+>;calll - <KeDetachProcess>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "movl (%ecx), %eax;testl %eax, %eax;jne - <MmGrowKernelStack+>;jmp - <MmGrowKernelStack+>;movl %ebx, %eax": 1,
                "movl (%ebx), %eax;movl (%ebx), %edx;movl %eax, (%ecx);movl %edx, (%ecx);movl (%ebp), %edx": 1,
                "movl , %eax;movl %eax, (%ecx);movl (%ebp), %ebx;movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%ecx);movl -(%ebp), %eax;movw $, (%eax)": 1,
                "movl $, (%eax);movl $, (%eax);movl , %eax;movl $, (%eax);movl $, (%eax)": 1,
                "shrl $, %edi;movl $, %ebx;cmpl -, %edi;ja  <MmGrowKernelStack+>;cmpl $, -": 1,
                "leal (%eax,%edx,), %ebx;movl (%ebx), %edx;andl $, %edx;movl %ebx, %eax;subl -, %eax": 1,
                "subl -, %eax;sarl $, %eax;imull $, %eax, %eax;cmpl %eax, %edx;je  <MmGrowKernelStack+>": 1,
                "sarl $, %eax;imull $, %eax, %eax;cmpl %eax, %edx;je  <MmGrowKernelStack+>;movl $, (%esp)": 1,
                "jae  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 9,
                "testl $, %edi;jne  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 6,
                "cmpl $, %eax;jle  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %edi;orl -, %edi;andl $, %edi;movl %edi, -(%ebp);cmpl $, -": 1,
                "movl %edi, -;movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl -(%ebp), %edi;shll $, %edi;orl -(%ebp), %edi;testb $, -": 1,
                "movl -(%ebp), %edi;shll $, %edi;orl -(%ebp), %edi;testb $, -;je  <MmGrowKernelStack+>": 1,
                "movl %ebx, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp;cmpl $, (%ebx);je  <MmGrowKernelStack+>": 1,
                "je  <MmGrowKernelStack+>;movl %ecx, %edx;addl $, %eax;cmpl %edx, %edi;jb - <MmGrowKernelStack+>": 1,
                "addl $, %eax;cmpl %edx, %edi;jb - <MmGrowKernelStack+>;leal (%ebx), %ecx;movl %eax, %edi": 1,
                "cmpl %edx, %edi;jb - <MmGrowKernelStack+>;leal (%ebx), %ecx;movl %eax, %edi;cmpw $, %ax": 1,
                "movl $, %edi;leal -(%edi), %eax;testw %di, %di;je  <MmGrowKernelStack+>;movzwl %ax, %edi": 1,
                "je  <MmGrowKernelStack+>;movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl (%esi), %eax": 1,
                "calll  <SeImpersonateClient+>;subl $, %esp;movl %eax, %edi;testl %eax, %eax;jns  <MmGrowKernelStack+>": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);movl %esi, (%esp);calll  <MmMapViewOfSection>;subl $, %esp": 1,
                "leal (%ebx), %ecx;jmp - <MmGrowKernelStack+>;movl %edi, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, (%ebx);orb $, (%ebx)": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, (%ebx);orb $, (%ebx);movl $, %eax": 1,
                "movl %eax, %edi;testl %eax, %eax;jne  <MmGrowKernelStack+>;movl %esi, (%esp);calll - <MmFreeNonCachedMemory+>": 1,
                "calll  <RtlAssert>;subl $, %esp;leal (%esi), %eax;cmpl $, %eax;ja  <MmGrowKernelStack+>": 2,
                "movl %eax, %edi;andl $, %edi;orl %edx, %edi;orl -, %edi;orl $, %edi": 2,
                "movl $, (%esp);movl %esi, (%esp);calll  <MmGetSystemRoutineAddress+>;subl $, %esp;movl $, %edx": 1,
                "shrl $, %eax;movl %eax, %edx;negl %edx;leal (,%edx,), %edx;movl %edx, (%esp)": 1,
                "movl %edx, (%esp);addl -(%ebp), %eax;movl %eax, (%esp);calll  <memmove>;movl , %eax": 1,
                "cmpl $, -;ja  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "subl $, %esp;movl %ebx, (%esp);calll  <NtMapViewOfSection+>;subl $, %esp;movl $, %eax": 1,
                "subl $, %esp;movl (%ebp), %edi;calll - <PsGetCurrentThread>;movl %eax, %esi;movzbl (%edi), %eax": 1,
                "setb %dl;testb %dl, %dl;jne  <MmGrowKernelStack+>;movl %eax, %ecx;calll - <KeSetTimer+>": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testw $, (%esi);je  <MmGrowKernelStack+>": 3,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;orb $, (%edi)": 6,
                "lock;xaddl %ebx, (%ecx);movb %bl, -(%ebp);testb $, %bl;jne  <MmGrowKernelStack+>": 1,
                "js  <MmGrowKernelStack+>;cmpl $, (%ebx);je  <MmGrowKernelStack+>;movl %ebx, (%esp);movl %edi, (%esp)": 1,
                "cmpl $, (%ebx);je  <MmGrowKernelStack+>;movl %ebx, (%esp);movl %edi, (%esp);calll  <MmGrowKernelStack+>": 1,
                "movl %edi, (%esp);calll  <MmGrowKernelStack+>;subl $, %esp;jmp  <MmGrowKernelStack+>;movl %ebx, (%esp)": 1,
                "subl $, %esp;jmp  <MmGrowKernelStack+>;movl %ebx, (%esp);movl (%ebx), %eax;shll $, %eax": 1,
                "shll $, %eax;movl %eax, (%esp);calll  <MmGetSystemRoutineAddress+>;subl $, %esp;movl -, %edx": 1,
                "movl -, %edx;calll *%edx;cmpb $, %al;jbe  <MmGrowKernelStack+>;movl $, (%esp)": 2,
                "calll  <RtlAssert>;subl $, %esp;testl $, %esi;jne  <MmGrowKernelStack+>;testl $, %ebx": 2,
                "movzwl (%edi), %ecx;cmpw %cx, (%eax);je  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp)": 1,
                "addl $, %eax;movw %ax, (%ebx);testw %ax, %ax;jne  <MmGrowKernelStack+>;leal (%ebx), %eax": 12,
                "je  <MmGrowKernelStack+>;calll - <KiCheckForKernelApcDelivery>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movzbl (%ebx), %eax;andl $, %eax;cmpb $, %al;jne  <MmGrowKernelStack+>;movl (%ebx), %edi": 1,
                "je  <MmGrowKernelStack+>;testb $, (%esi);jne  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp)": 3,
                "subl $, %esp;movl %edi, (%esp);movl %esi, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp": 3,
                "jmp  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "movl %esi, %eax;shrl $, %eax;andl $, %eax;movl %esi, %edx;andl $, %edx": 1,
                "setne %bl;movzbl %bl, %ebx;subl $, %ebx;orl %eax, %ebx;jmp  <MmGrowKernelStack+>": 1,
                "movl %eax, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp;cmpl $-, %eax;jne  <MmGrowKernelStack+>": 2,
                "cmpl $-, %eax;jne  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 4,
                "testl %ebx, %ebx;je  <MmGrowKernelStack+>;movl -, %esi;movl -, %edi;jmp  <MmGrowKernelStack+>": 1,
                "movl %eax, (%esp);movl $, (%esp);calll - <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, (%ebx)": 5,
                "movb $, (%edi);movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl (%ebp), %esi;calll *-;cmpb $, %al;jbe  <MmGrowKernelStack+>;calll *-": 2,
                "jne  <MmGrowKernelStack+>;movl %ebx, %ecx;calll - <KeSetTimer+>;movl %edi, (%ebx);movzwl (%edi), %eax": 2,
                "jbe  <MmGrowKernelStack+>;leal (%edx,%edx), %ebx;movl (%esi), %ecx;movl %ecx, -(%ebp);movl %edx, %edi": 1,
                "movzbl %al, %eax;movl %eax, (%esp);calll - <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, (%esi)": 1,
                "movl -(%ebp), %eax;movl (%eax), %ecx;movl (%eax), %ebx;movl %ecx, (%edx);movl %ebx, (%edx)": 1,
                "movl (%eax), %ecx;cmpl %ecx, (%ebx);je  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp)": 3,
                "xaddl %esi, (%ebx);testl $, %esi;je  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp)": 7,
                "shrl $, %eax;movl $, %edx;divl (%esi);movl (%esi), %eax;jmp  <MmGrowKernelStack+>": 1,
                "addl $, (%esi);movl (%esi), %ebx;calll *-;cmpb $, %al;jbe  <MmGrowKernelStack+>": 1,
                "movl (%ebp), %ebx;testb $, (%ebx);je  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;testb $, (%ebx);je  <MmGrowKernelStack+>;movl $, (%esp)": 12,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;leal (%edi,%esi,), %esi": 1,
                "cmpl %esi, -(%ebp);ja  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %ebx;calll *-;cmpb $, %al;jbe  <MmGrowKernelStack+>;calll *-": 3,
                "movl %eax, %ecx;andl $, %ecx;addl -, %ecx;movl -, %ebx;movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);cmpl -(%ebp), %eax;ja  <MmGrowKernelStack+>;movl %ecx, %eax;subl %edx, %eax": 1,
                "movl -(%ebp), %ebx;addl %edi, %ebx;movl $, %ecx;calll *-;movb %al, -(%ebp)": 1,
                "movl %eax, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax": 2,
                "calll  <RtlAssert>;subl $, %esp;testl $, %esi;jne  <MmGrowKernelStack+>;movl $, (%esp)": 4,
                "testb $, (%edi);jne  <MmGrowKernelStack+>;movl -(%ebp), %eax;shll $, %eax;movl -(%ebp), %edx": 1,
                "cmpl $, %esi;jbe  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl $, %ecx;calll *-;movb %al, -(%ebp);movl %ebx, %eax;shrl $, %eax": 1,
                "cmpl %ebx, (%edi);je  <MmGrowKernelStack+>;shrl $, %eax;testb $, -(,%eax,);jne  <MmGrowKernelStack+>": 1,
                "movl (%ebx), %esi;testb $, -(%ebp);je  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %ecx;calll *-;movl %edi, (%esp);calll - <ExFreePool>;subl $, %esp": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll - <ExFreePool>;subl $, %esp;leal -(%ebp), %esp": 1,
                "calll *-;subl $, (%ebx);subl $, (%ebx);movzbl %al, %eax;movl %eax, (%esp)": 1,
                "cmpl $, (%esi);je  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "shll $, %eax;orl $, %eax;movl %eax, (%esp);movl (%edi), %eax;shll $, %eax": 1,
                "andb $-, (%ebx);movl -(%ebp), %eax;testb $, (%eax);jne  <MmGrowKernelStack+>;movl $, (%esp)": 1,
                "calll *-;subl $, (%esi);subl $, (%esi);movzbl %al, %eax;movl %eax, (%esp)": 1,
                "movzbl %al, %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp;leal -(%ebp), %esp": 1,
                "testl %eax, %eax;je  <MmGrowKernelStack+>;cmpl $, (%eax);je  <MmGrowKernelStack+>;movl (%ebp), %ecx": 1,
                "movl $, (%esp);calll  <DbgPrint>;movl $, %esi;cmpl $, (%ebp);jne  <MmGrowKernelStack+>": 2,
                "movl (%edi), %ecx;subl %edx, %ecx;shll $, %ecx;addl $, %ecx;movl %ecx, -(%ebp)": 1,
                "jmp  <MmGrowKernelStack+>;movzbl (%edi), %eax;andl $, %eax;cmpb $, %al;jne  <MmGrowKernelStack+>": 1,
                "calll - <KeUnstackDetachProcess>;subl $, %esp;movl %esi, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movl %esi, -(%ebp);movl (%ebp), %edx;subl -, %edx;shrl $, %edx;cmpl %esi, %ebx": 1,
                "movl $, %ecx;movl %ebx, -(%ebp);movl -(%ebp), %ebx;cmpl $, (%edx,%eax);adcl $, %ecx": 1,
                "movl -(%ebp), %ebx;cmpl $, (%edx,%eax);adcl $, %ecx;addl $, %eax;cmpl %eax, %ebx": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, -;ja  <MmGrowKernelStack+>;movl $, (%esp)": 1,
                "movb %al, -(%ebp);movl -, %edx;movl (%edx), %eax;addl $, %eax;movl %eax, (%edx)": 1,
                "subl $, %esp;movl %eax, -(%ebp);andl $, %eax;movl %eax, -(%ebp);shll $, %eax": 1,
                "orl %eax, %edi;movl %edi, (%ebx);movl , %eax;movl (%eax), %eax;cmpl $, (%eax,%esi)": 1,
                "movl -(%ebp), %edx;leal (%edx,%edx,), %eax;shll $, %eax;addl -, %eax;cmpl $, (%eax)": 1,
                "movl (%esi), %eax;movl (%eax), %ebx;testb $, (%ebx);je  <MmGrowKernelStack+>;movl $, (%esp)": 1,
                "jne  <MmGrowKernelStack+>;shll $, %esi;movl %esi, (%esp);movl %eax, (%esp);calll - <MmGrowKernelStack+>": 1,
                "calll - <MmGrowKernelStack+>;subl $, %esp;jmp  <MmGrowKernelStack+>;shll $, %esi;addl %eax, %esi": 1,
                "jmp  <MmGrowKernelStack+>;shll $, %esi;addl %eax, %esi;movl %esi, (%esp);movl %eax, (%esp)": 1,
                "addl %eax, %esi;movl %esi, (%esp);movl %eax, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movzbl %bl, %edx": 1,
                "calll  <RtlAssert>;subl $, %esp;movzbl %bl, %edx;movl $, %ecx;calll *-": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);cmpw $, (%eax);je  <MmGrowKernelStack+>;movl %fs:, %eax": 1,
                "cmpl %edx, (%eax);je  <MmGrowKernelStack+>;leal (%esi), %esi;jmp  <MmGrowKernelStack+>;movl (%ebp), %edx": 1,
                "movl -(%ebp), %ecx;movzwl (%ecx), %eax;addl $, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "addl $, %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll  <memset>;jmp  <MmGrowKernelStack+>;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %eax, %fs:;jmp  <MmGrowKernelStack+>;movl %esi, %esi;leal (%edi), %edi;jmp - <MmGrowKernelStack+>": 1,
                "movl (%ebp), %edx;movl -(%ebp), %eax;movl %edx, (%eax);addl $, %eax;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;movzwl (%ecx), %edx;movl -(%ebp), %ecx;movw %dx, (%ecx);movl -(%ebp), %edx": 1,
                "movw %dx, (%ecx);movl -(%ebp), %ecx;movzwl (%ecx), %edx;movl %edx, (%esp);movl (%ecx), %edx": 1,
                "movzwl %dx, %edx;movl -(%ebp), %ecx;movl (%ecx), %eax;movw $, (%eax,%edx,);movw $, (%ecx)": 1,
                "movl (%ecx), %eax;movw $, (%eax,%edx,);movw $, (%ecx);movl , %eax;movl %eax, (%ecx)": 1,
                "subl $, %esp;jmp  <MmGrowKernelStack+>;addw $, (%eax);jmp - <MmGrowKernelStack+>;leal -(%ebp), %esp": 1,
                "testl %eax, %eax;jne  <MmGrowKernelStack+>;movl (%ebp), %eax;andl $, (%eax);movl (%ebp), %edx": 1,
                "jne  <MmGrowKernelStack+>;movl (%ebp), %eax;andl $, (%eax);movl (%ebp), %edx;movl (%edx), %eax": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;movl (%ebp), %ecx;subl (%ecx), %eax;movl %eax, (%edi)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %ecx;testw $, (%ecx);je  <MmGrowKernelStack+>": 1,
                "movl (%edx), %eax;movl (%edx), %edx;shrdl $, %edx, %eax;sarl $, %edx;movl %eax, -(%ebp)": 1,
                "movl (%edx), %edx;shrdl $, %edx, %eax;sarl $, %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "cmpl %ecx, %eax;jae  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl (%ebp), %edi;cmpl (%edi), %eax;jb  <MmGrowKernelStack+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl $, -(%ebp);cmpl $, (%ebp)": 2,
                "movl (%edi), %eax;cmpl %eax, (%edi);jae  <MmGrowKernelStack+>;testl $, (%ebp);setne %dl": 1,
                "movzbl %dl, %edx;movl (%ebp), %eax;shrl $, %eax;addl %edx, %eax;movl %eax, -(%ebp)": 1,
                "subl $, %eax;movl %eax, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;jmp  <MmGrowKernelStack+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;jmp  <MmGrowKernelStack+>;leal -(%ebp), %eax;movl %eax, (%esp);leal (%esi), %eax": 1,
                "movl -(%ebp), %edx;shrl $, %edx;movl %edx, (%esp);shrl $, %eax;movl %eax, (%esp)": 1,
                "movl %edi, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp;movl $, %eax;jmp  <MmGrowKernelStack+>": 1,
                "testl %ebx, %ebx;je  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "orl %edx, %eax;movb %al, (%ebx);movl (%ebp), %edi;movl (%edi), %eax;movl (%edi), %edx": 1,
                "movb %al, (%ebx);movl (%ebp), %edi;movl (%edi), %eax;movl (%edi), %edx;shrdl $, %edx, %eax": 1,
                "andl $-, %eax;orl %edx, %eax;movb %al, (%ebx);testl $, (%ebp);jne  <MmGrowKernelStack+>": 1,
                "movb %al, (%ebx);testl $, (%ebp);jne  <MmGrowKernelStack+>;movl (%ebp), %eax;cmpb $, (%eax)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;orb $, (%esi);movl -(%ebp), %eax": 1,
                "testb $, (%esi);jne  <MmGrowKernelStack+>;testl $, (%esi);je  <MmGrowKernelStack+>;movl $, (%esp)": 1,
                "cmpb $, %al;jne  <MmGrowKernelStack+>;movl -(%ebp), %ecx;calll - <ExfTryToWakePushLock>;calll *-": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %edi": 2,
                "js  <MmGrowKernelStack+>;movl (%edi), %eax;testl %eax, %eax;je  <MmGrowKernelStack+>;cmpl -, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;lock;btrl $, -;setb %al": 3,
                "calll  <RtlAssert>;subl $, %esp;movl %esi, (%ebx);jmp  <MmGrowKernelStack+>;addl $, %edi": 1,
                "calll  <RtlAssert>;subl $, %esp;calll *-;cmpb $, %al;je  <MmGrowKernelStack+>": 1,
                "movl %fs:, %eax;movl (%eax), %eax;cmpl $, (%eax);je  <MmGrowKernelStack+>;movl %fs:, %eax": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl -, %edi;cmpl %edi, (%eax);jae  <MmGrowKernelStack+>": 1,
                "jne  <MmGrowKernelStack+>;leal (%ebx), %edx;subl $, %ebx;movl %edx, %eax;lock": 1,
                "testw $, (%ebx);je  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl %edx, %eax;je  <MmGrowKernelStack+>;movl %edx, (%esp);movl %eax, (%esp);movl $, (%esp)": 1,
                "andl $, %eax;movl %eax, -(%ebp);je  <MmGrowKernelStack+>;cmpl $, (%ebp);jne  <MmGrowKernelStack+>": 1,
                "movl %esi, (%ebx);movl $, (%ebx);movl $, (%ebx);testl $, (%ebp);je  <MmGrowKernelStack+>": 1,
                "shll $, %eax;movzwl (%ebx), %edx;andw $, %dx;orl %edx, %eax;movw %ax, (%ebx)": 2,
                "cmpl $, -(%ebp);je  <MmGrowKernelStack+>;movzbl -(%ebp), %eax;andl $, %eax;shll $, %eax": 1,
                "movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <ObQueryNameString>;subl $, %esp": 1,
                "movl $, %esi;jmp  <MmGrowKernelStack+>;movl $, %esi;movl %esi, %eax;leal -(%ebp), %esp": 2,
                "movl (%eax), %ebx;leal (%ebx), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);movl %fs:, %eax": 2,
                "subw $, (%esi);leal (%ebx), %eax;lock;btrl $, (%eax);setb %dl": 5,
                "calll  <RtlAssert>;subl $, %esp;movl $, (%ebx);movl -(%ebp), %eax;movl $, %esi": 13,
                "movl (%eax), %eax;testl %eax, %eax;je - <MmGrowKernelStack+>;testb $, (%eax);nop": 1,
                "movl %eax, (%esp);movsbl %bl, %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);jmp  <MmGrowKernelStack+>;movl $, %eax;leal -(%ebp), %ecx": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);shrl $, %eax;movl %eax, -(%ebp);cmpl -, %ebx": 1,
                "orl -(,%eax,), %esi;movl $, %ecx;calll *-;movb %al, -(%ebp);testl %edi, %edi": 1,
                "jne  <MmGrowKernelStack+>;testb $, (%ebp);je  <MmGrowKernelStack+>;movl (%ebp), %edi;andl $-, %edi": 1,
                "calll  <RtlAssert>;subl $, %esp;movl %esi, (%ebx);testb $, -(%ebp);jne  <MmGrowKernelStack+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebp), %edx;movzbl (%edx), %edx;movl %edx, %eax": 1,
                "movl %eax, -(%ebp);cmpl $-, %eax;jne  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp)": 2,
                "calll  <MmGetSystemRoutineAddress+>;subl $, %esp;movl (%ebp), %edx;movl %eax, (%edx);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebp), %eax;movzbl (%eax), %eax": 1,
                "movzwl (%edx,%esi,), %eax;addl $, %eax;movw %ax, (%edx,%esi,);cmpw $, %ax;jbe  <MmGrowKernelStack+>": 1,
                "andl $, %esi;shll $, %esi;movl , %eax;andl $, %eax;orl %eax, %esi": 1,
                "je  <MmGrowKernelStack+>;movl %eax, %edi;shrl $, %edi;movl $, %esi;cmpl -, %edi": 1,
                "addl $, %ebx;cmpl %ebx, -(%ebp);jae - <MmGrowKernelStack+>;calll *-;cmpb $, %al": 1,
                "movl %ebx, (%esp);movl $, (%esp);calll  <RtlTestBit>;subl $, %esp;movl $, -(%ebp)": 1,
                "subl $, %esp;movl (%edi), %edi;testb $, -(,%ebx,);je  <MmGrowKernelStack+>;movl $, (%esp)": 1,
                "setne %al;jne  <MmGrowKernelStack+>;cmpb $, -(%ebp);je  <MmGrowKernelStack+>;testl %esi, %esi": 1,
                "movl %eax, %edi;testl %eax, %eax;js  <MmGrowKernelStack+>;movl -(%ebp), %ecx;cmpl $, (%ecx)": 1,
                "movl $, -(%ebp);orb $, (%ebx);movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "subl $, %esp;cmpl $, -(%ebp);je  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx": 1,
                "orl %edx, %ecx;jne  <MmGrowKernelStack+>;movl -(%ebp), %eax;movl (%eax), %edx;movl (%eax), %eax": 1,
                "movl %edx, -(%ebp);movl %eax, -(%ebp);jmp  <MmGrowKernelStack+>;cmpl $, -(%ebp);jne  <MmGrowKernelStack+>": 1,
                "movl %eax, %edi;cmpl $, (%ebx);je  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll - <IoSetTopLevelIrp>;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "jne  <MmGrowKernelStack+>;leal (%esi), %eax;cmpl %eax, (%esi);je  <MmGrowKernelStack+>;calll - <KiCheckForKernelApcDelivery>": 2,
                "jmp  <MmGrowKernelStack+>;movl $, %edi;jmp  <MmGrowKernelStack+>;movl $, %edi;movl %edi, %eax": 1,
                "testb %al, %al;jne  <MmGrowKernelStack+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);movl %ecx, %esi;movl (%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <MmGrowKernelStack+>;testl %ecx, %ecx": 1,
                "subl $, %eax;movl (%ebp), %ecx;subl (%ecx), %eax;cmpl %eax, %edx;jbe  <MmGrowKernelStack+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <MmGrowKernelStack+>;movl $, %edx": 1,
                "calll  <DbgPrint>;jmp  <MmGrowKernelStack+>;movl $, %edx;cmpl (%ebx), %edx;jb  <MmGrowKernelStack+>": 1,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <MmGrowKernelStack+>;movl (%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movb $, -(%ebp);movl (%ebp), %edx;cmpl (%eax), %edx": 2,
                "movb $, -(%ebp);movl (%ebp), %edx;cmpl (%eax), %edx;je  <MmGrowKernelStack+>;leal -(%ebp), %eax": 1,
                "movl %edx, (%esp);calll - <KeStackAttachProcess>;subl $, %esp;movb $, -(%ebp);movl (%ebp), %ecx": 1,
                "movb $, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp);movl %fs:, %eax;movl (%eax), %edi": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp;movl %eax, %ebx": 1,
                "movl %ecx, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp;movl %eax, %ebx;jmp  <MmGrowKernelStack+>": 1,
                "calll - <MmGrowKernelStack+>;subl $, %esp;movl %eax, %ebx;jmp  <MmGrowKernelStack+>;movl $, (%esp)": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl (%ebp), %edx;movzwl (%edx), %edx;cmpw %dx, (%eax)": 2,
                "jne  <MmGrowKernelStack+>;movl (%ebp), %ecx;addl $, %ecx;calll - <KeSetEventBoostPriority+>;movl %fs:, %eax": 1,
                "je  <MmMapViewInSessionSpace+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 1,
                "movl (%ebp), %ebx;calll *-;cmpb $, %al;jbe  <MmUnmapViewInSystemSpace+>;calll *-": 1,
                "subl $, %esp;testl %eax, %eax;je  <MmUnmapViewInSystemSpace+>;cmpl $, (%eax);je  <MmUnmapViewInSystemSpace+>": 1,
                "movl $, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp;movl -(%ebp), %ebx;leave": 1,
                "movl $, %eax;jmp  <MmUnmapViewInSessionSpace+>;movl , %eax;movl %eax, (%esp);calll - <MmIsAddressValid>": 1,
                "je  <MmUnmapViewInSessionSpace+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "addl $, %eax;movl %eax, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp;movl -(%ebp), %ebx": 1,
                "subl $, %esp;movl , %eax;cmpl %ebx, %eax;ja  <MmCommitSessionMappedView+>;addl -, %eax": 1,
                "jb  <MmCommitSessionMappedView+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 2,
                "cmpl $, (%ebp);jne  <MmCommitSessionMappedView+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %eax;movl (%eax), %eax;testb $, (%eax);jne  <MmCommitSessionMappedView+>;movl $, (%esp)": 1,
                "movl (%edi), %esi;movl %fs:, %eax;movl (%eax), %eax;movl %eax, -(%ebp);calll *-": 1,
                "testb %al, %al;jne  <MmCommitSessionMappedView+>;movl %esi, %ecx;calll - <KeSetTimer+>;movl -(%ebp), %edx": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;testl %eax, %eax;je  <MmCommitSessionMappedView+>": 2,
                "movl (%eax), %edx;cmpl %edx, (%ebx);je  <MmCommitSessionMappedView+>;movl $, (%esp);movl $, (%esp)": 11,
                "movzwl (%ebx), %edx;cmpw %dx, (%eax);je  <MmCommitSessionMappedView+>;movl $, (%esp);movl $, (%esp)": 5,
                "subl $, %esp;movl %fs:, %eax;cmpl (%eax), %ebx;je  <MmCommitSessionMappedView+>;movl $, (%esp)": 12,
                "subl $, %esp;cmpw $, (%ebx);js  <MmCommitSessionMappedView+>;movl $, (%esp);movl $, (%esp)": 12,
                "movw %ax, (%ebx);testw %ax, %ax;jne  <MmCommitSessionMappedView+>;leal (%ebx), %edx;movl $, %eax": 9,
                "testb $, (%ebx);je  <MmCommitSessionMappedView+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "shrl $, %ecx;movl -(%ebp), %edx;shrl $, %edx;shll $, %ecx;subl %edx, %ecx": 1,
                "subl %edx, %ecx;movl %ecx, %edx;sarl $, %edx;addl $, %edx;movl %edx, -(%ebp)": 1,
                "leal (%esi,%edx,), %edx;movl %edx, -(%ebp);movl (%ebx), %edx;leal (%eax,%edx,), %eax;cmpl %eax, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);jb  <MmCommitSessionMappedView+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %eax;jmp  <MmCommitSessionMappedView+>;movl %fs:, %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;cmpl -, %eax;jne  <MmCommitSessionMappedView+>;movl $, (%esp);movl $, (%esp)": 1,
                "btrl $, -;setb %al;testb %al, %al;jne  <MmCommitSessionMappedView+>;movl $, %ecx": 1,
                "cmpw $, (%eax);js  <MmCommitSessionMappedView+>;movl %fs:, %eax;movl (%eax), %eax;cmpl $, (%eax)": 2,
                "lock;xaddl %ebx, -;testb $, %bl;je  <MmCommitSessionMappedView+>;movl $, (%esp)": 2,
                "calll  <RtlAssert>;subl $, %esp;testl %ebx, %ebx;je  <MmCommitSessionMappedView+>;testb $, %bl": 2,
                "jne  <MmCommitSessionMappedView+>;movl $, %ecx;calll - <KeSetEventBoostPriority+>;movl (%edi), %ebx;calll *-": 2,
                "jne  <MmCommitSessionMappedView+>;cmpb $, -(%ebp);je  <MmCommitSessionMappedView+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl %ebx, (%esi);addl $, %esi": 1,
                "jne - <MmCommitSessionMappedView+>;jmp - <MmCommitSessionMappedView+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl $, %eax;jmp  <MmCommitSessionMappedView+>;movl (%eax), %esi;cmpl $, (%esi);jne  <MmCommitSessionMappedView+>": 1,
                "je  <MmCommitSessionMappedView+>;calll - <KiCheckForKernelApcDelivery>;movl $, %eax;jmp  <MmCommitSessionMappedView+>;movl (%eax), %eax": 1,
                "movl $, %eax;jmp  <MmCommitSessionMappedView+>;calll *-;cmpb $, %al;jbe  <MmCommitSessionMappedView+>": 1,
                "jmp  <MmCommitSessionMappedView+>;calll *-;cmpb $, %al;jbe  <MmCommitSessionMappedView+>;movl $, (%esp)": 1,
                "cmpb $, %al;jbe  <NtCreateSection+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 2,
                "testl $, (%ebp);je  <NtCreateSection+>;testb $, (%ebp);jne  <NtCreateSection+>;movl (%ebp), %eax": 1,
                "je  <NtCreateSection+>;testl $, (%ebp);je  <NtCreateSection+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %ecx, -(%ebp);jmp  <NtCreateSection+>;leal -(%ebp), %eax;movl %eax, (%ebp);jmp  <NtCreateSection+>": 1,
                "leal -(%ebp), %ecx;movl %ecx, (%ebp);cmpl $, (%ebp);jne  <NtCreateSection+>;movl (%ebp), %edx": 1,
                "jmp  <NtCreateSection+>;movl $, -(%ebp);movl -(%ebp), %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);cmpb $, -(%ebp);jne  <NtCreateSection+>": 1,
                "movl %eax, -(%ebp);cmpb $, -(%ebp);jne  <NtCreateSection+>;jmp  <NtCreateSection+>;movl -(%ebp), %edx": 1,
                "movl (%eax), %eax;movzbl (%eax), %eax;movb %al, -(%ebp);cmpl $, (%ebp);jbe  <NtMapViewOfSection+>": 1,
                "movl $, -(%ebp);jmp  <NtMapViewOfSection+>;cmpl $, (%ebp);je  <NtMapViewOfSection+>;movl (%ebp), %ecx": 1,
                "movl $, -(%ebp);movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl (%ebp), %edx": 2,
                "movl (%ebp), %ecx;addl $, %ecx;movl %ecx, -(%ebp);jmp  <NtMapViewOfSection+>;cmpb $, -(%ebp)": 1,
                "jb  <NtMapViewOfSection+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%edx)": 2,
                "cmpl $, (%ebp);je  <NtMapViewOfSection+>;movl -(%ebp), %ecx;cmpl %ecx, (%ebp);ja  <NtMapViewOfSection+>": 1,
                "jmp - <NtMapViewOfSection+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "subl $, %edx;movl -(%ebp), %eax;cmpl %edx, %eax;jbe  <NtMapViewOfSection+>;movl $, (%esp)": 1,
                "shrl %cl, %edx;cmpl %edx, %eax;jbe  <NtMapViewOfSection+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;jmp  <NtMapViewOfSection+>;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl (%edx), %ecx;cmpl %ecx, -(%ebp);jne  <NtMapViewOfSection+>;cmpl $, -(%ebp);je  <NtMapViewOfSection+>": 1,
                "movzbl (%eax), %eax;cmpb $, %al;jne  <NtMapViewOfSection+>;cmpl %esi, -;jae  <NtMapViewOfSection+>": 1,
                "calll  <DbgPrint>;testl %eax, %eax;je  <NtMapViewOfSection+>;movl $, (%esp);movl $, (%esp)": 32,
                "movl $, %eax;jmp  <NtMapViewOfSection+>;calll  <ObfDereferenceObject>;jmp  <NtMapViewOfSection+>;movl -(%ebp), %eax": 1,
                "movl (%eax), %eax;jmp  <NtMapViewOfSection+>;movl , %eax;leave;retl": 1,
                "calll *-;orb $, (%ebx);movzbl %al, %edx;movl $, %ecx;calll *-": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;movl $, %eax;testb $, (%edx)": 2,
                "movl (%edx), %edx;movl $, %eax;testl %edx, %edx;je  <NtMapViewOfSection+>;movl (%edx), %eax": 1,
                "addl $, %eax;cmpl %ebx, %eax;jb - <NtMapViewOfSection+>;movl $, %ecx;calll *-": 1,
                "subl $, %esp;addl $, %ebx;cmpl %ebx, -;ja - <NtMapViewOfSection+>;movzbl -(%ebp), %edx": 2,
                "cmpl %ebx, -;ja - <NtMapViewOfSection+>;movzbl -(%ebp), %edx;movl $, %ecx;calll *-": 2,
                "movl , %eax;movl (%eax), %ebx;calll *-;cmpb $, %al;jbe  <NtMapViewOfSection+>": 1,
                "calll  <RtlAssert>;subl $, %esp;calll - <PsGetCurrentThread>;movl %eax, ;movl , %eax": 1,
                "cmpxchgl %ecx, (%edx);jne - <NtMapViewOfSection+>;testl %ecx, %ecx;jne  <NtMapViewOfSection+>;calll - <NtMapViewOfSection+>": 1,
                "calll - <NtMapViewOfSection+>;subl $, %esp;lock;andl $, (%ebx);jmp  <NtMapViewOfSection+>": 1,
                "subl $, %esp;calll - <PsGetCurrentThread>;movl %eax, ;movl (%ebx), %eax;movl (%ebx), %ecx": 1,
                "movl (%ebx), %ecx;movl %ecx, (%eax);movl %eax, (%ecx);calll - <PsGetCurrentThread>;cmpl -, %eax": 1,
                "movl %eax, (%ebx);calll - <PsGetCurrentThread>;cmpl -, %eax;je  <NtMapViewOfSection+>;movl $, (%esp)": 1,
                "movl (%eax), %ebx;movl -, %edi;movl %edi, (%eax);leal (%edi), %edx;movl %edx, (%eax)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;jmp  <NtMapViewOfSection+>;movl %esi, (%esp)": 1,
                "testl %eax, %eax;jne  <NtMapViewOfSection+>;movl %esi, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp": 3,
                "movl %eax, -(%ebp);movl %eax, %esi;movl -(%ebp), %ecx;testb $, -(,%ecx,);je  <NtMapViewOfSection+>": 1,
                "calll  <RtlAssert>;subl $, %esp;testl $, %esi;jne  <NtMapViewOfSection+>;movl $, (%esp)": 3,
                "movl -(%ebp), %ecx;movl %ecx, (%eax,%edx,);movl , %eax;movl (%eax), %eax;movl %eax, (%esp)": 1,
                "calll *-;movl , %eax;orb $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "movl $, (%eax);movl $, (%eax);movl $, (%edi);movl $, (%edi);movl $, (%edi)": 1,
                "movl %edx, (%ebx);movl %eax, (%edx);movl %eax, ;cmpl $, (%ebx);je  <NtMapViewOfSection+>": 1,
                "movl %eax, (%edx);movl %eax, ;cmpl $, (%ebx);je  <NtMapViewOfSection+>;movl $, (%esp)": 1,
                "leal -(,%eax,), %eax;movl %eax, -(%ebp);movl $, (%ebx);movl $, %ecx;calll *-": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;movl (%eax), %edx;movl %eax, %esi": 1,
                "leal (%esi), %ecx;movl %edx, %eax;lock;cmpxchgl %ebx, (%ecx);cmpl %eax, %edx": 1,
                "je  <NtMapViewOfSection+>;movw $, (%edi);addl $, %edi;subl $, %edx;movl %edx, %ecx": 1,
                "movl %eax, (%esp);calll  <RtlFindClearBitsAndSet>;subl $, %esp;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl %eax, -(%ebp);movl , %eax;addl $, %eax;movl %eax, ;movl %eax, %edi": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %ecx;movl %ebx, -(,%ecx,);movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp;movl -(%ebp), %ecx;leal (%ecx,%ecx,), %eax": 1,
                "movl %eax, -(%ebp);movl , %eax;shrl $, %eax;leal -(,%eax,), %ebx;movl %ebx, -(%ebp)": 1,
                "je  <NtMapViewOfSection+>;movl $, %esi;movl %edi, -(%ebp);movl %ebx, %edi;movl -(%ebp,%esi,), %ebx": 1,
                "movl %ebx, %edi;movl -(%ebp,%esi,), %ebx;movl %ebx, %eax;shll $, %eax;movl -(%ebp), %edx": 1,
                "movl %eax, (%esp);movl %edi, (%esp);movl %ebx, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp": 1,
                "movl %eax, %edx;shll $, %edx;movl %esi, %ecx;andl $, %ecx;orl %ecx, %edx": 1,
                "movl %edx, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl %eax, (%esp);movl (%ebp), %edx": 1,
                "movl -(%ebp), %edx;cmpl $, (%edx);je  <NtMapViewOfSection+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %eax;lock;cmpxchgl %edx, -;testl %eax, %eax;je  <NtMapViewOfSection+>": 1,
                "cmpl (%eax), %esi;je  <NtMapViewOfSection+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;jns  <NtMapViewOfSection+>;movl %fs:, %eax": 1,
                "movl %fs:, %eax;movl (%eax), %edi;movl %fs:, %eax;cmpl (%eax), %edi;je  <NtMapViewOfSection+>": 1,
                "movl (%eax), %edi;movl %fs:, %eax;cmpl (%eax), %edi;je  <NtMapViewOfSection+>;movl $, (%esp)": 1,
                "movl %fs:, %eax;cmpl (%eax), %edi;je  <NtMapViewOfSection+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpw $, (%edi);js  <NtMapViewOfSection+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "addl $, %eax;movw %ax, (%edi);testw %ax, %ax;jne  <NtMapViewOfSection+>;leal (%edi), %eax": 1,
                "movl , %eax;cmpl $, %eax;je  <NtMapViewOfSection+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %eax;testb $, (%eax);jne  <NtMapViewOfSection+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <DbgPrint>;movl $, %eax;jmp  <NtMapViewOfSection+>;testb $, (%eax);jne  <NtMapViewOfSection+>": 1,
                "subl $, %esp;movl (%ebp), %ebx;testl %ebx, %ebx;jne  <NtMapViewOfSection+>;movl $, (%esp)": 3,
                "movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %edi;movl (%edi), %eax;movl %eax, -(%ebp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, -;movzbl -(%ebp), %edx;movl $, %ecx": 2,
                "movl $, -;movzbl -(%ebp), %edx;movl $, %ecx;calll *-;calll *-": 2,
                "movl %eax, (%ebx);movl $, %ecx;testb $, (%ebx);je  <NtMapViewOfSection+>;testl %eax, %eax": 1,
                "calll - <PsGetCurrentThread>;movl %eax, ;movl -, %edx;movl $, %esi;cmpl $, %edx": 1,
                "retl $;movl , %eax;subl $, %eax;cmpl $-, %eax;ja  <NtMapViewOfSection+>": 1,
                "movl , %eax;cmpl $, %eax;jbe  <NtMapViewOfSection+>;movl $, %edx;mull %edx": 1,
                "jbe  <NtMapViewOfSection+>;movl $, %edx;mull %edx;shrl %edx;jmp  <NtMapViewOfSection+>": 1,
                "cmpl %edi, %eax;jne - <NtMapViewOfSection+>;movl %edi, -;subl $, %esi;movl %esi, -": 1,
                "shll $, %eax;movl %eax, ;movl -, %edx;movl %edx, %ecx;shrl $, %ecx": 1,
                "movl -, %edx;movl %edx, %ecx;shrl $, %ecx;movl %ecx, -;cmpl $, -": 1,
                "movl %edx, %ecx;shrl $, %ecx;movl %ecx, -;cmpl $, -;jbe  <NtMapViewOfSection+>": 1,
                "cmpb $, %al;jbe  <NtMapViewOfSection+>;testb %bl, %bl;jne  <NtMapViewOfSection+>;cmpb $, %al": 1,
                "jmp  <NtMapViewOfSection+>;movl , %eax;movl (%eax), %eax;andl $, %eax;cmpl $, %eax": 1,
                "cmpl %eax, %edx;jne  <NtMapViewOfSection+>;jmp  <NtMapViewOfSection+>;movl %esi, %eax;movzbl %al, %edx": 1,
                "movl $, %ecx;movl %edx, %edi;rep  stosl %eax, %es:(%edi);cmpl $, (%ebp);je  <NtMapViewOfSection+>": 1,
                "movl %edx, %esi;movl $, (%esi);movl (%ebp), %edx;movl %edx, (%esi);cmpl $, %edx": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <NtMapViewOfSection+>;movl $, %edi": 1,
                "subl $, %esi;testl %esi, %esi;je  <NtMapViewOfSection+>;movzbl (%edx), %ebx;movzwl (%eax), %edi": 1,
                "movl $, (%esp);calll - <KeBugCheckEx>;leal (%edx), %eax;addl %edx, %esi;cmpl %esi, %eax": 1,
                "jne  <NtMapViewOfSection+>;movl $, (%esp);movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %ebx, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;movl %ebx, %ecx;andl $, %ecx": 1,
                "movl $, -(%ebp);jmp  <NtMapViewOfSection+>;movl $, -(%ebp);movl (%esi), %ecx;andl $, %ecx": 1,
                "andw $, %cx;movzbl (%esi), %edx;cmpw %dx, %cx;je  <NtMapViewOfSection+>;jmp  <NtMapViewOfSection+>": 1,
                "movzbl -(%ebp), %ecx;movb %cl, (%esi);movl %ebx, (%esi);calll - <PsGetCurrentThread>;movl %eax, (%esi)": 1,
                "jne  <NtMapViewOfSection+>;movl -(,%edi,), %eax;shrl $, %eax;leal (%eax,%eax,), %edx;movl , %eax": 1,
                "calll - <MmFreeNonCachedMemory+>;subl $, %esp;movl $, (%esp);movl $, (%esp);calll  <KeFlushEntireTb>": 1,
                "movl , %eax;movl -(%ebp), %edx;subl -, %edx;sarl $, %edx;shll $, %edx": 1,
                "movl %edx, (%eax);orl $, -(,%edi,);movl -(%ebp), %ecx;movl %ecx, -;movzbl %bl, %edx": 1,
                "cmpl $, %ebx;jne - <NtMapViewOfSection+>;movl $, %esi;movl $, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl %eax, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp;movl %eax, -(%ebp,%edi,);movl %ebx, (%esp)": 1,
                "movl %esi, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp;addl $, %ebx;cmpl %edi, %ebx": 1,
                "leal (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 2,
                "movl $, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <RtlImageDirectoryEntryToData>": 5,
                "jmp - <NtMapViewOfSection+>;movl -(%ebp), %eax;movl %eax, %fs:;movl -(%ebp), %eax;movl -(%ebp), %ebx": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll  <MmMapViewOfSection>": 1,
                "calll  <DbgPrint>;leal -(%ebp), %eax;movl %eax, (%esp);calll - <KeUnstackDetachProcess>;subl $, %esp": 3,
                "movl %edx, -(%ebp);movl (%ebp), %eax;movl %edx, (%eax);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "js  <NtMapViewOfSection+>;movl $, %esi;leal (%esi,%edi), %ebx;sarl %ebx;movl (%ebp), %eax": 1,
                "movl (%ebp), %edx;leal (%edx,%eax,), %eax;movl -(%ebp), %edx;addl (%edx), %eax;movl (%ebp), %edx": 1,
                "cmpl %ecx, %edx;sbbl %edx, %edx;notl %edx;andl %edx, %eax;jmp  <NtMapViewOfSection+>": 1,
                "jmp  <NtMapViewOfSection+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 2,
                "calll - <NtMapViewOfSection+>;subl $, %esp;movl %eax, %ebx;movl $, %edi;testl %eax, %eax": 1,
                "movzwl (%esi), %eax;movw %ax, -(%ebp);movzwl (%esi), %edx;movw %dx, -(%ebp);movl (%esi), %edx": 1,
                "movw %dx, -(%ebp);movl (%esi), %edx;movl %edx, -(%ebp);addl $, %eax;movw %ax, -(%ebp)": 1,
                "testl $, %edi;je  <NtMapViewOfSection+>;movzwl (%esi), %eax;movw %ax, (%edi);addl $, %edi": 1,
                "je  <NtMapViewOfSection+>;movzwl (%esi), %eax;movw %ax, (%edi);addl $, %edi;addl $, %esi": 1,
                "movw %ax, (%edi);movl $, %eax;testb $, %dl;je  <NtMapViewOfSection+>;movzbl (%esi,%eax), %edx": 1,
                "movl %esi, (%esp);calll *%ebx;subl $, %esp;movl %eax, %edi;movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <ExFreePoolWithTag>;subl $, %esp;jmp  <NtMapViewOfSection+>": 5,
                "movl %eax, (%esp);calll - <ExFreePoolWithTag>;subl $, %esp;jmp  <NtMapViewOfSection+>;movl $, %edi": 1,
                "movl -(%ebp), %edx;addl (%edx,%ebx,), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movzwl (%edx,%ebx,), %eax;movl -(%ebp), %edx;cmpl (%edx), %eax;jae  <NtMapViewOfSection+>;movl (%ebp), %edx": 1,
                "movl (%esi), %ecx;movl (%esi), %edx;movl %edx, (%ecx);movl %ecx, (%edx);movzbl %al, %edx": 1,
                "shrl $, %ecx;testb %cl, %cl;je  <NtMapViewOfSection+>;movl (%ebp), %edx;subw (%edx), %ax": 1,
                "movl %edx, (%edi);jmp  <NtMapViewOfSection+>;testb %dl, %dl;je  <NtMapViewOfSection+>;addl (%ebp), %eax": 1,
                "movl %eax, (%esi);movl (%esi), %ebx;movl (%edi), %esi;movzbl (%ebx), %eax;testb %al, %al": 1,
                "testb %cl, %cl;jne - <NtMapViewOfSection+>;movb $, (%eax);movl (%ebp), %eax;movl (%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;addl (%ecx,%esi,), %edx;movl %edx, (%esp);movl %eax, (%esp);calll  <strcmp>": 1,
                "addl (%edx,%ebx,), %eax;movl %eax, (%esp);movl %ecx, (%esp);calll  <strcmp>;testl %eax, %eax": 1,
                "movl (%ebp), %ecx;cmpl (%ecx), %eax;jae  <NtMapViewOfSection+>;leal -(%ebp), %edx;movl %edx, -(%ebp)": 1,
                "subl %esi, %eax;addl $, %eax;movw %ax, -(%ebp);movw %ax, -(%ebp);movl $, (%esp)": 1,
                "movl %eax, (%esp);leal (%edi), %eax;movl %eax, (%esp);calll  <memmove>;movw $, (%edi)": 1,
                "movl %edi, (%esp);leal -(%ebp), %esi;movl %esi, (%esp);calll  <DbgLoadImageSymbols+>;subl $, %esp": 1,
                "movl %ebx, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp;movl (%ebx), %eax;testl %eax, %eax": 1,
                "subl $, %esp;movl (%ebx), %ecx;testl %ecx, %ecx;je  <NtMapViewOfSection+>;calll  <ObfDereferenceObject>": 1,
                "testl %eax, %eax;js  <NtMapViewOfSection+>;cmpw $, (%ebx);je  <NtMapViewOfSection+>;movl $, (%esp)": 1,
                "movw $, (%ebx);movl %ebx, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp;movl $, %eax": 1,
                "cmpl $, %eax;jbe  <NtMapViewOfSection+>;cmpl $, (%edi);je  <NtMapViewOfSection+>;testl $, %edi": 1,
                "leal (%ebx), %eax;movl %eax, (%esp);leal (%ebx), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "calll  <DbgPrint>;cmpl $-, (%ebx);je  <NtMapViewOfSection+>;cmpw $, (%ebx);jne  <NtMapViewOfSection+>": 1,
                "testl %ebx, %ebx;jne - <NtMapViewOfSection+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "leal -(,%edx,), %ebx;shrl $, %eax;movzbl -(,%eax,), %eax;andl $-, %eax;cmpb $-, %al": 1,
                "sarl $, %eax;addl $, %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <MmGetSystemRoutineAddress+>": 1,
                "addl $, %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <MmGetSystemRoutineAddress+>;subl $, %esp": 1,
                "calll  <RtlImageNtHeader>;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;jne  <NtMapViewOfSection+>": 1,
                "subl $, %ecx;movl %ebx, %eax;cmpl -(%ebp), %ebx;jae  <NtMapViewOfSection+>;movl -(%ebp), %eax": 1,
                "leal (%ecx,%edx), %ebx;andl $, %ebx;subl $, %ebx;jmp  <NtMapViewOfSection+>;movl (%eax), %ebx": 1,
                "leal -(%eax), %ebx;orl $, %ebx;cmpl -(%ebp), %ebx;jb  <NtMapViewOfSection+>;movl $, %eax": 1,
                "movl (%esi), %edx;movl %edx, -(%ebp);movl (%esi), %ebx;movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "cmpl $, %edi;je - <NtMapViewOfSection+>;movl $, %eax;jmp - <NtMapViewOfSection+>;leal -(%ebp), %esp": 1,
                "shrl $, %eax;shll $, %eax;leal -(%eax,%edx,), %esi;movl %ebx, (%esp);calll  <RtlImageNtHeader>": 1,
                "leal -(%eax), %ecx;movl $, %edx;testb $, -(%eax);jne  <NtMapViewOfSection+>;jmp  <NtMapViewOfSection+>": 1,
                "calll  <MmGetSystemRoutineAddress+>;subl $, %esp;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "cmpl $, (%ecx);jbe  <NtMapViewOfSection+>;movl (%ecx), %edx;testl %edx, %edx;je  <NtMapViewOfSection+>": 1,
                "jb  <NtMapViewOfSection+>;movb $, -(%ebp);jmp  <NtMapViewOfSection+>;movb $, -(%ebp);movl -(%ebp), %edx": 1,
                "movl %edx, -(%ebp);cmpl %edx, -(%ebp);jae  <NtMapViewOfSection+>;movl -(%ebp), %ebx;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %esi;movl %edi, -(%ebp);movl (%esi), %eax;movl %eax, %edx;shrl $, %edx": 1,
                "movl (%esi), %eax;movl %eax, %edx;shrl $, %edx;movl %edx, -(%ebp);testb $, %al": 1,
                "addl $, %esi;cmpl %ebx, -(%ebp);ja - <NtMapViewOfSection+>;movl -(%ebp), %edi;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %eax;movl %edx, (%eax);cmpb $, -(%ebp);je  <NtMapViewOfSection+>": 1,
                "movl (%ebx), %ebx;addl $, -(%ebp);cmpl $, %ebx;jne - <NtMapViewOfSection+>;cmpl $, -(%ebp)": 1,
                "movl $, %edi;movl $, -(%ebp);leal -(%ebp), %ecx;movl %ecx, (%esp);movl $, (%esp)": 1,
                "movl $, (%ecx);movl (%ecx), %eax;movl %eax, -(%ebp);jmp  <NtMapViewOfSection+>;movl -(%ebp), %edx": 1,
                "je  <NtMapViewOfSection+>;cmpl $, (%eax);je  <NtMapViewOfSection+>;movl $, %esi;movl $, %ebx": 1,
                "jbe  <NtMapViewOfSection+>;movl -(%ebp), %eax;cmpl $, (%eax,%edi,);jne  <NtMapViewOfSection+>;movl $, (%esp)": 1,
                "jmp  <NtMapViewOfSection+>;movl (%eax), %eax;addl $, %edi;cmpl $, %eax;jne - <NtMapViewOfSection+>": 1,
                "subl $, %ecx;movl -(%ebp), %eax;movl -(%eax), %edx;testl %edx, %edx;jne - <NtMapViewOfSection+>": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;jne  <NtMapViewOfSection+>;movl -(%ebp), %edx;movl $, (%edx)": 1,
                "movl -(%ebp), %edx;movl $, (%edx);movl -(%ebp), %ecx;movl $, (%ecx);movl $, %eax": 1,
                "movzwl (%eax), %ecx;testl %ecx, %ecx;je  <NtMapViewOfSection+>;movl (%edx), %eax;movl (%edx), %esi": 1,
                "movl %eax, %esi;movl (%edx), %eax;cmpl $, %eax;jne  <NtMapViewOfSection+>;movl (%edx), %edi": 1,
                "movl (%edx), %eax;cmpl $, %eax;jne  <NtMapViewOfSection+>;movl (%edx), %edi;movl -(%ebp), %eax": 1,
                "addl (%edx), %eax;movl %eax, ;addl -, %esi;movl %esi, -;jmp  <NtMapViewOfSection+>": 1,
                "movl $, -;movl $, -;movl $, -;movl %esi, -(%ebp);movl (%esi), %ebx": 1,
                "movl %eax, ;movl %ebx, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp;cmpl %ebx, %esi": 1,
                "subl $, %esp;movl $, %eax;jmp  <NtMapViewOfSection+>;movl -(%ebp), %edx;addl $, %edx": 1,
                "andl $, %ebx;cmpl $, %ebx;sbbl %ebx, %ebx;andl $-, %ebx;addl $, %ebx": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;je  <NtMapViewOfSection+>;movl (%ebp), %ecx": 1,
                "cmpl -, %ecx;jb  <NtMapViewOfSection+>;cmpl -, %ecx;jb  <NtMapViewOfSection+>;cmpw $, (%ebx)": 1,
                "addl (%edx), %esi;cmpl %ebx, %esi;jae  <NtMapViewOfSection+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %esi, -(%ebp);movl $, -(%ebp);jmp  <NtMapViewOfSection+>;movl %eax, -(%ebp);movl -(%edi), %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);movl $, -(%ebp);jmp  <NtMapViewOfSection+>": 1,
                "jmp  <NtMapViewOfSection+>;movl %esi, -(%ebp);movl -(%ebp), %esi;cmpl %esi, -(%ebp);ja  <NtMapViewOfSection+>": 1,
                "subl $, %esp;cmpl -(%ebp), %esi;jb  <NtMapViewOfSection+>;movl -(%ebp), %ecx;cmpl %ecx, -(%ebp)": 1,
                "cmpl -(%ebp), %esi;jb  <NtMapViewOfSection+>;movl -(%ebp), %ecx;cmpl %ecx, -(%ebp);jbe  <NtMapViewOfSection+>": 1,
                "subl $, %eax;cmpl %eax, -(%ebp);jbe  <NtMapViewOfSection+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp;jmp  <NtMapViewOfSection+>;movl %ebx, -(%ebp)": 1,
                "leal (%ebx,%edx), %edx;movl (%edx), %esi;movl (%edx), %ecx;cmpl %esi, %ecx;jae  <NtMapViewOfSection+>": 1,
                "movl %ebx, %esi;jmp - <NtMapViewOfSection+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl %eax, (%esp);calll  <RtlImageNtHeader>;subl $, %esp;testl %eax, %eax;je  <NtMapViewOfSection+>": 3,
                "movzwl (%eax), %esi;movl (%eax), %edx;subl $, %edx;movzwl (%eax), %ecx;leal (%eax,%ecx), %ebx": 1,
                "leal -(%ecx,%edx), %edx;movl %edx, -(%ebp);movl (%ebx), %edx;cmpl $, %edx;je  <NtMapViewOfSection+>": 1,
                "cmpl $, %edx;jne  <NtMapViewOfSection+>;testl %eax, %eax;jne  <NtMapViewOfSection+>;movl (%ebx), %eax": 1,
                "jne  <NtMapViewOfSection+>;testl %eax, %eax;jne  <NtMapViewOfSection+>;movl (%ebx), %eax;movl -(%ebp), %edx": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);calll  <RtlImageNtHeader>": 1,
                "jmp  <NtMapViewOfSection+>;movl $, %edx;movl %edx, %eax;leave;retl $": 1,
                "movl %eax, (%esp);calll - <ZwMapViewOfSection>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax": 1,
                "je  <NtMapViewOfSection+>;movl -(%ebp), %eax;movl %eax, (%esp);calll  <RtlImageNtHeader>;subl $, %esp": 1,
                "subl $, %esp;testb %al, %al;je  <NtMapViewOfSection+>;jmp  <NtMapViewOfSection+>;movl $, %ebx": 1,
                "jmp  <NtMapViewOfSection+>;movl $, %ebx;jmp  <NtMapViewOfSection+>;movl $, %ebx;movl -(%ebp), %eax": 1,
                "movl (%ebp), %edi;movl (%ebp), %esi;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl (%eax), %eax;testb $, (%eax);je  <NtMapViewOfSection+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <NtMapViewOfSection+>;movl (%edi), %eax;cmpw $, (%eax)": 1,
                "movl (%edi), %eax;cmpw $, (%eax);jne  <NtMapViewOfSection+>;movzwl (%edi), %edx;shrw %dx": 1,
                "leal (%eax,%edx,), %edx;cmpw $, -(%edx);je  <NtMapViewOfSection+>;movl %edx, %eax;subl $, %eax": 1,
                "movl %eax, %ebx;movl %edx, -(%ebp);subl %ecx, %ebx;movw %bx, -(%ebp);movw %bx, -(%ebp)": 1,
                "calll  <DbgPrint>;leal -(%ebp), %esi;movl %edi, -(%ebp);movl (%ebp), %edi;movl %fs:, %eax": 1,
                "jne  <NtMapViewOfSection+>;movl (%ebp), %eax;movl %ebx, (%eax);movl (%ebx), %eax;movl (%ebp), %edx": 1,
                "testl %eax, %eax;jns  <NtMapViewOfSection+>;movl -(%ebp), %edi;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "movl (%eax), %eax;movl (%eax), %esi;cmpl $, (%ebp);je  <NtMapViewOfSection+>;jmp  <NtMapViewOfSection+>": 1,
                "movzwl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp);movl $, (%esp);calll - <ExAllocatePoolWithTag>": 2,
                "movl -(%ebp), %edx;movl %eax, (%edx);movl $, (%edx);cmpw $, (%ebx);jbe  <NtMapViewOfSection+>": 1,
                "cmpw $, (%ebx);jbe  <NtMapViewOfSection+>;movl $, (%edx);movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl %eax, (%ecx);movl %esi, (%ecx);movl (%ebx), %eax;movl %eax, (%ecx);movl -(%ebp), %eax": 1,
                "movw $, (%edx);jmp  <NtMapViewOfSection+>;movzwl -(%ebp), %edx;movl -(%ebp), %ecx;movw %dx, (%ecx)": 1,
                "movl -(%ebp), %ecx;movw %dx, (%ecx);movw %dx, (%ecx);movzwl %dx, %edx;movl %edx, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <ExFreePoolWithTag>;subl $, %esp;movl $, (%esp)": 1,
                "movl (%ecx), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, %esi": 1,
                "movl %eax, (%esp);calll - <NtQueryInformationAtom+>;subl $, %esp;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "jne - <NtMapViewOfSection+>;movl -(%ebp), %ebx;cmpw $, -(%ebp);jbe  <NtMapViewOfSection+>;movl $, (%esp)": 1,
                "testl %eax, %eax;jne  <NtMapViewOfSection+>;movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, -(%ebp)": 1,
                "subw $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll - <NtMapViewOfSection+>;movl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %esi;movl %esi, (%esp)": 1,
                "movl %fs:, %eax;movl (%eax), %esi;movl %fs:, %eax;cmpl (%eax), %esi;jne - <NtMapViewOfSection+>": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl (%esi), %esi;movl %esi, -(%ebp)": 1,
                "movl $, (%esi);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl $, (%esp);movl %ebx, (%esp);calll  <_strnicmp>;movl $, %edx;testl %eax, %eax": 3,
                "calll  <DbgPrint>;leal -(%ebp), %esi;movl -, %ebx;cmpl $, %ebx;je  <NtMapViewOfSection+>": 1,
                "je  <NtMapViewOfSection+>;testb $, (%ebx);jne  <NtMapViewOfSection+>;addw $, (%ebx);jmp  <NtMapViewOfSection+>": 1,
                "je  <NtMapViewOfSection+>;movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll  <RtlCopyUnicodeString>": 2,
                "subl $, %esp;movl %edi, (%esp);movl %esi, (%esp);calll  <RtlAppendUnicodeStringToString>;subl $, %esp": 2,
                "movl %esi, (%esp);calll  <RtlAppendUnicodeStringToString>;subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "addw -(%ebp), %ax;movw %ax, -(%ebp);movl $, (%esp);movzwl %ax, %eax;movl %eax, (%esp)": 1,
                "movl %edx, (%esp);movl %esi, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp;testl %eax, %eax": 1,
                "calll - <NtMapViewOfSection+>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jns - <NtMapViewOfSection+>": 1,
                "jns - <NtMapViewOfSection+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp": 1,
                "calll - <NtMapViewOfSection+>;subl $, %esp;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %ebx, (%esp);movl $, (%esp);calll  <DbgPrint>;calll  <DbgBreakPoint>;jmp - <NtMapViewOfSection+>": 1,
                "movl %eax, -(%ebp);cmpb $, -(%ebp);je  <NtMapViewOfSection+>;cmpl $, -(%ebp);je  <NtMapViewOfSection+>": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %esi;leal (%eax), %ebx;movl %esi, (%esp);movl $, (%esp);movl -(%ebp), %edx": 1,
                "movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp": 1,
                "calll - <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;je  <NtMapViewOfSection+>": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);je  <NtMapViewOfSection+>;movl $, %eax;movl -(%ebp), %esi": 1,
                "calll  <RtlAssert>;subl $, %esp;movl , %eax;movl (%eax), %edx;cmpl %ebx, %edx": 1,
                "movl (%eax), %edx;cmpl %ebx, %edx;ja  <NtMapViewOfSection+>;addl (%eax), %edx;cmpl %edx, %ebx": 1,
                "addl (%ebx), %eax;shrl $, %eax;leal -(,%eax,), %edi;movl (%ebp), %eax;cmpl -, %eax": 1,
                "movl %edi, (%esp);movl %esi, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp;movl (%ebx), %eax": 1,
                "movl %eax, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp;testl %eax, %eax;jne  <MmGetSystemRoutineAddress+>": 1,
                "movl $, %esi;jmp  <MmGetSystemRoutineAddress+>;movl $, %esi;jmp  <MmGetSystemRoutineAddress+>;movl %eax, %esi": 1,
                "subl $, %esp;cmpw $, (%ebx);js  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp)": 8,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <MmGetSystemRoutineAddress+>;cmpw $, (%ebx);jne  <MmGetSystemRoutineAddress+>": 1,
                "movl $, %ecx;calll *-;movb %al, -(%ebp);movl (%ebp), %ebx;leal -(,%ebx,), %ecx": 1,
                "jne - <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax;subl -(%ebp), %eax;movl (%ecx), %edx;andl $, %edx": 1,
                "movl (%eax), %ebx;andl $, %ebx;orl %ebx, %edx;movl %edx, (%eax);subl -, %eax": 1,
                "movzbl -(%ebp), %edx;movl $, %ecx;calll *-;movl $, -(%ebp);jmp  <MmGetSystemRoutineAddress+>": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <MmGetSystemRoutineAddress+>": 2,
                "movl $, (%esp);calll  <DbgPrint>;testl %eax, %eax;je  <MmGetSystemRoutineAddress+>;movl $, (%esp)": 26,
                "movl (%ebp), %edi;testl %esi, %esi;jne  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp)": 2,
                "calll  <RtlAssert>;subl $, %esp;leal -(%ebx,%esi,), %eax;cmpl %eax, -(,%edi,);jae  <MmGetSystemRoutineAddress+>": 1,
                "testb $, (%eax);jne  <MmGetSystemRoutineAddress+>;movl (%eax), %ecx;shrl $, %ecx;leal (%eax,%ecx,), %edi": 1,
                "movl $, (%eax);movl $, -(%ebp);jmp  <MmGetSystemRoutineAddress+>;cmpl %ecx, %esi;ja  <MmGetSystemRoutineAddress+>": 1,
                "shll $, %esi;movl (%ebx), %eax;andl $, %eax;orl %eax, %esi;movl %esi, (%ebx)": 1,
                "orb $, (%ebx);movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);andl $, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;movl %edi, (%eax);jmp  <MmGetSystemRoutineAddress+>": 1,
                "movl %edi, (%eax);jmp  <MmGetSystemRoutineAddress+>;movl (%ebx), %ebx;testl %ebx, %ebx;jne - <MmGetSystemRoutineAddress+>": 1,
                "jmp  <MmGetSystemRoutineAddress+>;movl (%ebx), %ebx;testl %ebx, %ebx;jne - <MmGetSystemRoutineAddress+>;leal (%esi), %esi": 1,
                "testl $, (%ecx);je  <MmGetSystemRoutineAddress+>;movl (%ecx), %ebx;testl %ebx, %ebx;jne  <MmGetSystemRoutineAddress+>": 1,
                "orb $, (%esi);movl %ebx, %eax;movl (%eax), %edx;andl $-, %edx;cmpl (%edx), %eax": 1,
                "andb $-, (%edi);movzbl (%esi), %eax;shll $, %eax;testb %al, %al;jne  <MmGetSystemRoutineAddress+>": 1,
                "movzbl (%esi), %eax;shll $, %eax;testb %al, %al;jne  <MmGetSystemRoutineAddress+>;movzbl (%esi), %eax": 1,
                "testb %al, %al;jne  <MmGetSystemRoutineAddress+>;movzbl (%esi), %eax;leal (%eax), %edx;andl $, %edx": 1,
                "andl $-, %eax;orl %edx, %eax;movb %al, (%esi);jmp  <MmGetSystemRoutineAddress+>;movl (%edi), %eax": 1,
                "andl $, %eax;orl -(%ebp), %eax;movl %eax, (%ecx);andl $-, %eax;movb %al, (%ecx)": 1,
                "jne  <MmGetSystemRoutineAddress+>;cmpb $, -(%ebp);jne  <MmGetSystemRoutineAddress+>;movl (%ecx), %eax;movl %eax, -(%ebp)": 1,
                "cmpb $, -(%ebp);jne  <MmGetSystemRoutineAddress+>;movl (%ecx), %eax;movl %eax, -(%ebp);jmp  <MmGetSystemRoutineAddress+>": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "je  <MmGetSystemRoutineAddress+>;movzbl (%edx), %eax;andl $, %eax;orl -(%ebp), %eax;movl %eax, (%edx)": 1,
                "movl -(%ebp), %edx;movl %edx, -(%ebp);movzbl (%eax), %eax;movb %al, -(%ebp);andl $, %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;movl -(%ebp), %edx;movl %eax, (%edx);testl %eax, %eax": 2,
                "movl (%ecx), %eax;andl $-, %eax;movl (%eax), %edi;andl $-, %edi;movl %edi, -(%ebp)": 1,
                "movzbl (%edx), %edx;andl $, %edx;movl %edx, %edi;orl %eax, %edi;movl -(%ebp), %edx": 1,
                "movl %edx, %edi;orl %eax, %edi;movl -(%ebp), %edx;movl %edi, (%edx);movl -(%ebp), %edi": 1,
                "subl $, %esi;movl %esi, (%esp);calll  <MmGetPhysicalAddress+>;subl $, %esp;testl %eax, %eax": 1,
                "movl %esi, (%esp);calll  <MmGetPhysicalAddress+>;subl $, %esp;testl %eax, %eax;jns  <MmGetSystemRoutineAddress+>": 1,
                "calll  <MmGetPhysicalAddress+>;subl $, %esp;testl %eax, %eax;jns  <MmGetSystemRoutineAddress+>;movl $, (%esp)": 1,
                "jmp  <MmGetSystemRoutineAddress+>;movl $, %edi;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl %ebx, (%esp);movl %esi, (%esp);movl (%ebp), %eax;addl $, %eax;movl %eax, (%esp)": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl $, %edi;testl %ebx, %ebx": 2,
                "subl $, %esp;movl (%esi), %edx;movl -, %ebx;testl $, -;jne  <MmGetSystemRoutineAddress+>": 1,
                "movl (%esi), %edx;movl -, %ebx;testl $, -;jne  <MmGetSystemRoutineAddress+>;jmp  <MmGetSystemRoutineAddress+>": 1,
                "movl %ebx, (%esp);movl %esi, (%esp);movl $, (%esp);calll - <MmGetSystemRoutineAddress+>;subl $, %esp": 1,
                "movl %edi, %edx;jmp  <MmGetSystemRoutineAddress+>;movl %eax, %edx;movl (%edx), %eax;testl %eax, %eax": 1,
                "jmp  <MmGetSystemRoutineAddress+>;movl -(%ebp), %edx;movl (%edx), %eax;testl %eax, %eax;jne - <MmGetSystemRoutineAddress+>": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;testl %eax, %eax;jne - <MmGetSystemRoutineAddress+>;movl %edx, -(%ebp)": 1,
                "movl (%ebp), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %edi;movl (%edi), %edi;movl %edi, %ecx": 1,
                "cmpl (%esi), %edi;jne  <MmGetSystemRoutineAddress+>;leal (%esi), %ebx;movl $, %eax;movl (%edx), %edi": 1,
                "movb %al, -(%ebp);shll $, %eax;testb %al, %al;je  <MmGetSystemRoutineAddress+>;movl (%ebp), %ebx": 1,
                "movl $, (%esp);movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movzbl (%esi), %ecx": 1,
                "andl $-, %eax;movb %al, (%edi);andb $-, (%esi);jmp  <MmGetSystemRoutineAddress+>;movsbl %al, %eax": 1,
                "movsbl %al, %eax;movl %eax, -(%ebp);movsbl %cl, %eax;addl -(%ebp), %eax;jne  <MmGetSystemRoutineAddress+>": 1,
                "jne  <MmGetSystemRoutineAddress+>;movl (%edi), %ebx;jmp  <MmGetSystemRoutineAddress+>;movl (%edi), %ebx;movl (%ebx), %eax": 1,
                "testl %edx, %edx;je  <MmGetSystemRoutineAddress+>;movzbl (%edx), %edx;movb %dl, -(%ebp);andl $, %edx": 2,
                "je  <MmGetSystemRoutineAddress+>;movzbl (%edx), %edx;movb %dl, -(%ebp);andl $, %edx;orl -(%ebp), %edx": 2,
                "movzbl (%eax), %edx;movb %dl, -(%ebp);andl $, %edx;orl %ebx, %edx;movl %edx, (%eax)": 1,
                "andb $-, (%edi);movl %ecx, %eax;negl %eax;andl $, %eax;movzbl (%esi), %edx": 1,
                "andl $-, %edx;orl %edx, %eax;movb %al, (%esi);jmp  <MmGetSystemRoutineAddress+>;movsbl %al, %eax": 1,
                "leal (%eax), %esi;leal (%edi), %edx;movl %edx, -(%ebp);movl -(%ebp), %ebx;movl (%ebx), %edx": 1,
                "movl %esi, (%edx);movl -(%ebp), %edx;movl %eax, (%edx);movzbl (%eax), %edx;andl $, %edx": 1,
                "orl %eax, %ecx;movl %ecx, (%edi);movzbl -(%ebp), %edx;negl %edx;andl $, %edx": 1,
                "cmpl (%edx), %esi;sete %al;leal -(%eax,%eax), %eax;movl %edx, %esi;andl $-, %esi": 1,
                "je  <MmGetSystemRoutineAddress+>;movl (%ebp), %edi;movl (%edi), %eax;movl %eax, (%ebx);movl (%edi), %edx": 1,
                "andl $-, %eax;leal (%eax), %edx;movl -(%ebp), %ebx;movl %ebx, (%edx);movl (%ebx), %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebp), %esi;subl $, %esi": 2,
                "movl (%ebp), %edi;movl $, (%edi);jmp  <MmGetSystemRoutineAddress+>;movl (%esi), %esi;andl $-, %esi": 1,
                "movl (%ebp), %esi;testl %edi, %edi;jne  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "testl $, (%esi);je  <MmGetSystemRoutineAddress+>;movl (%esi), %esi;jmp  <MmGetSystemRoutineAddress+>;movl %edx, %esi": 1,
                "cmpl %edx, %eax;jae  <MmGetSystemRoutineAddress+>;subl %eax, %edx;cmpl %edx, %edi;jae  <MmGetSystemRoutineAddress+>": 1,
                "movl $, (%edx);shll $, %eax;movl (%ebp), %edx;movl %eax, (%edx);movl $, %eax": 1,
                "testl %eax, %eax;je  <MmGetSystemRoutineAddress+>;movl (%eax), %edx;movl %edx, %ecx;subl %edi, %ecx": 1,
                "movl (%ebp), %eax;movl (%eax), %edx;movl %edx, %ebx;jmp  <MmGetSystemRoutineAddress+>;movl %eax, %ebx": 1,
                "movl %eax, %ebx;movl %esi, %eax;addl (%ebx), %eax;movl $, %edx;divl %esi": 1,
                "imull %esi, %eax;cmpl %edi, %eax;jae  <MmGetSystemRoutineAddress+>;movl %edi, %edx;subl %eax, %edx": 1,
                "cmpl %edx, -(%ebp);ja  <MmGetSystemRoutineAddress+>;subl -(%ebp), %edi;shll $, %edi;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %edi, (%eax);movl (%ebx), %eax;movl %eax, %edx;testl %eax, %eax": 1,
                "movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax;jmp  <MmGetSystemRoutineAddress+>;movl (%ebx), %eax": 1,
                "calll - <MmGetSystemRoutineAddress+>;subl $, %esp;testl %eax, %eax;jne - <MmGetSystemRoutineAddress+>;movl (%ebp), %eax": 1,
                "jne  <MmGetSystemRoutineAddress+>;movl (%ebp), %eax;movl %edi, (%eax);movl $, %eax;jmp  <MmGetSystemRoutineAddress+>": 1,
                "movl (%ebp), %eax;movl %edi, (%eax);movl $, %eax;jmp  <MmGetSystemRoutineAddress+>;movl (%ebx), %ebx": 1,
                "jne - <MmGetSystemRoutineAddress+>;movl (%ebx), %eax;leal -(%esi,%eax), %eax;movl $, %edx;divl %esi": 1,
                "jmp  <MmGetSystemRoutineAddress+>;movl %edi, -(%ebp);jmp  <MmGetSystemRoutineAddress+>;movl %edi, -(%ebp);movl %ebx, (%esp)": 1,
                "movl $, %edx;divl %esi;imull %esi, %eax;movl (%ebx), %edx;movl %ecx, %ebx": 1,
                "subl %eax, %edi;cmpl %edi, -(%ebp);ja - <MmGetSystemRoutineAddress+>;cmpl %edx, (%ebp);jae  <MmGetSystemRoutineAddress+>": 1,
                "movl %edi, (%eax);movl $, %eax;jmp  <MmGetSystemRoutineAddress+>;movl %ecx, %ebx;cmpl %edx, %eax": 1,
                "cmpl %eax, (%ebp);jae  <MmGetSystemRoutineAddress+>;movl (%ebp), %eax;movl %edi, (%eax);movl $, %eax": 1,
                "jmp  <MmGetSystemRoutineAddress+>;movl $, %esi;testb $, (%ebx);je  <MmGetSystemRoutineAddress+>;movl $, (%esp)": 1,
                "movzbl (%ebx), %edx;movl $, %eax;testb $, %dl;je  <MmGetSystemRoutineAddress+>;movl (%ebp), %ecx": 1,
                "cmpl (%ebx), %ecx;jb  <MmGetSystemRoutineAddress+>;testl $, %esi;je  <MmGetSystemRoutineAddress+>;movl $, (%esp)": 1,
                "subl $, %esp;movl $, %eax;cmpb $, -(%esi);jg  <MmGetSystemRoutineAddress+>;movl $, (%esp)": 1,
                "movl (%ebp), %edx;cmpl -, %edx;jb  <MmGetSystemRoutineAddress+>;cmpl -, %edx;ja  <MmGetSystemRoutineAddress+>": 1,
                "testb $, (%eax);jne  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 19,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testb $, -(%ebp);jne  <MmGetSystemRoutineAddress+>": 3,
                "subl $, %esp;movl %esi, %eax;andl $, %eax;cmpb $, %al;jne  <MmGetSystemRoutineAddress+>": 2,
                "calll - <ExfTryToWakePushLock>;calll *-;cmpb $, %al;jbe  <MmGetSystemRoutineAddress+>;movl $, (%esp)": 3,
                "calll  <RtlAssert>;subl $, %esp;testb $, (%edi);jne  <MmGetSystemRoutineAddress+>;movl $, (%esp)": 3,
                "leal (%esi), %eax;cmpl %eax, (%esi);je  <MmGetSystemRoutineAddress+>;calll - <KiCheckForKernelApcDelivery>;jmp  <MmGetSystemRoutineAddress+>": 3,
                "cmpl %eax, (%esi);je  <MmGetSystemRoutineAddress+>;calll - <KiCheckForKernelApcDelivery>;jmp  <MmGetSystemRoutineAddress+>;calll - <PsGetCurrentThread>": 1,
                "calll - <ExfAcquirePushLockShared>;testb $, (%ebx);jne  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;testw $, (%edi);je  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;orb $, (%ebx);testb $, (%edi);je  <MmGetSystemRoutineAddress+>": 1,
                "shll $, %ebx;jmp  <MmGetSystemRoutineAddress+>;cmpl $, (%ebx);je  <MmGetSystemRoutineAddress+>;movzwl (%ebx), %eax": 2,
                "andw $, %ax;cmpw $, %ax;jne  <MmGetSystemRoutineAddress+>;testb $, (%ebx);je  <MmGetSystemRoutineAddress+>": 3,
                "cmpl $, -;ja  <MmGetSystemRoutineAddress+>;cmpl $, -;ja  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax": 2,
                "je  <MmGetSystemRoutineAddress+>;movl $, %ecx;calll - <ExfAcquirePushLockExclusive>;testb $, -;jne  <MmGetSystemRoutineAddress+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;orb $, (%eax);testl %edi, %edi": 1,
                "subl $, %esp;movl -(%ebp), %eax;orb $, (%eax);testl %edi, %edi;je  <MmGetSystemRoutineAddress+>": 1,
                "orb $, (%eax);testl %edi, %edi;je  <MmGetSystemRoutineAddress+>;movl $, -(%ebp);cmpl $, (%esi)": 1,
                "movl $, (%esp);calll  <RtlTestBit>;subl $, %esp;testb %al, %al;je  <MmGetSystemRoutineAddress+>": 6,
                "leal (%eax,%edx,), %ebx;cmpl $, (%ebx);je  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebx), %eax;andl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp);cmpl -, %eax": 1,
                "movl %eax, (%esp);movl $, (%esp);calll  <RtlTestBit>;subl $, %esp;movl $, -(%ebp)": 1,
                "xaddl %ebx, -;movl %ebx, %esi;testb $, %bl;jne  <MmGetSystemRoutineAddress+>;movl $, (%esp)": 1,
                "testb $, (%ebx);je  <MmGetSystemRoutineAddress+>;movl %esi, %eax;shrl $, %eax;testb $, -(,%eax,)": 1,
                "jne  <MmGetSystemRoutineAddress+>;movl (%ebp), %ecx;calll - <MmFreeNonCachedMemory+>;testl %eax, %eax;jns  <MmGetSystemRoutineAddress+>": 1,
                "testl %eax, %eax;jns  <MmGetSystemRoutineAddress+>;movl (%ebp), %eax;movl %eax, (%esp);movl (%esi), %eax": 1,
                "jns  <MmGetSystemRoutineAddress+>;movl (%ebp), %eax;movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "calll - <MmFreeNonCachedMemory+>;subl $, %esp;cmpl -, %esi;ja  <MmGetSystemRoutineAddress+>;movl (%ebx), %eax": 1,
                "movl $, %edx;testb %al, %al;je  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax;leal (%eax,%eax,), %edx": 2,
                "calll  <RtlAssert>;subl $, %esp;movl $, (%esi);calll  <KeIAllocateGdtSelectors+>;leal -(%ebp), %esp": 1,
                "movl %eax, -(%ebp);movl %edi, %eax;shrl $, %eax;leal -(,%eax,), %esi;cmpl $, (%ebp)": 1,
                "movl -(%ebp), %esi;shll $, %esi;movl -(%ebp), %edi;shll $, %edi;cmpl (%ebp), %edi": 1,
                "testb %bl, %bl;je  <MmGetSystemRoutineAddress+>;movl %edi, %ebx;shrl $, %ebx;movl %ebx, %edx": 1,
                "movl %eax, -(%ebp);cmpl (%ecx), %eax;jbe  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp)": 2,
                "cmpl (%ecx), %eax;jbe  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "jmp  <MmGetSystemRoutineAddress+>;movl %ebx, %edi;movl (%esi), %ebx;testl %ebx, %ebx;je  <MmGetSystemRoutineAddress+>": 1,
                "leal (%edi), %ebx;addl $, %esi;addl $, -(%ebp);movl -(%ebp), %edx;testb $, (%edx)": 1,
                "movl -(%ebp), %edx;testb $, (%edx);jne  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "jae - <MmGetSystemRoutineAddress+>;movl %ebx, -(%ebp);jmp  <MmGetSystemRoutineAddress+>;movl %ebx, -(%ebp);movl -(%ebp), %ecx": 1,
                "subl $, %esp;movl (%ebp), %ebx;calll *-;cmpb $, %al;jbe  <MmGetSystemRoutineAddress+>": 1,
                "cmpl $, %edx;jne  <MmGetSystemRoutineAddress+>;cmpl $, (%eax);jbe  <MmGetSystemRoutineAddress+>;movb $, (%ebx)": 1,
                "movb $, (%ebx);movl (%eax), %edx;movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax": 1,
                "movl -(%ebp), %ebx;leave;retl;testl %ecx, %ecx;jne  <MmGetSystemRoutineAddress+>": 1,
                "movl $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movzbl -(%ebp), %eax;testb %al, %al": 1,
                "movl %edx, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll - <KeStackAttachProcess>;subl $, %esp": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%esp);movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll - <MmUnmapLockedPages>": 2,
                "testb %al, %al;je  <MmGetSystemRoutineAddress+>;leal -(%ebp), %ecx;movl %ecx, (%esp);calll - <MmUnlockPages>": 1,
                "je  <MmGetSystemRoutineAddress+>;movzbl -(%ebp), %eax;testb %al, %al;jne  <MmGetSystemRoutineAddress+>;movzbl -(%ebp), %eax": 1,
                "je  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 2,
                "jmp  <MmGetSystemRoutineAddress+>;leal -(%ebp), %eax;movl %eax, (%esp);calll - <KeUnstackDetachProcess>;subl $, %esp": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebp), %ebx;cmpl $, %ebx": 1,
                "movl (%ebp), %ebx;cmpl $, %ebx;jbe  <MmGetSystemRoutineAddress+>;movl $, %ebx;leal -(%ebp), %eax": 1,
                "cmpl $, (%ebp);je  <MmGetSystemRoutineAddress+>;movl (%ebp), %edx;movl %edx, -(%ebp);movl (%ebp), %eax": 1,
                "jbe  <MmGetSystemRoutineAddress+>;movl %eax, -(%ebp);leal -(%ebp), %edx;movl %edx, (%esp);movl (%ebp), %eax": 1,
                "jne  <MmGetSystemRoutineAddress+>;cmpb $, -(%ebp);je  <MmGetSystemRoutineAddress+>;movb $, -(%ebp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <ExFreePoolWithTag>;subl $, %esp;movzbl -(%ebp), %eax": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);movzbl -(%ebp), %eax;movl $, -(%ebp);testb %al, %al": 1,
                "subl (%ebp), %eax;movl %eax, (%edx);jmp  <MmGetSystemRoutineAddress+>;jmp - <MmGetSystemRoutineAddress+>;leal (%esi), %esi": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll - <KeStackAttachProcess>;subl $, %esp;jmp - <MmGetSystemRoutineAddress+>": 1,
                "movl %edx, (%esp);calll - <KeStackAttachProcess>;subl $, %esp;jmp - <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax": 1,
                "movzbl (%ebp), %edi;movl $, %esi;cmpl $, (%ebp);je  <MmGetSystemRoutineAddress+>;movl %fs:, %eax": 1,
                "movl %edx, (%esp);movl %edi, %eax;movsbl %al, %edi;movl %edi, (%esp);movl (%ebp), %edx": 1,
                "calll - <MmGetSystemRoutineAddress+>;subl $, %esp;movl %eax, %esi;movl (%ebx), %edx;andl $-, %edx": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;jmp  <MmGetSystemRoutineAddress+>;movl $, %esi": 1,
                "calll  <RtlAssert>;subl $, %esp;movzwl -(%ebp), %eax;andw $, %ax;cmpw $, %ax": 1,
                "andw $, %ax;cmpw $, %ax;jne  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %ebx, (%esp);movl -(%ebp), %eax;shrl $, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "shrw $, %ax;andl $, %eax;movl -(,%eax,), %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "shrl $, %eax;movl %eax, -(%ebp);cmpl %eax, (%ebx);ja  <MmGetSystemRoutineAddress+>;cmpl (%ebx), %eax": 1,
                "cmpl %eax, (%ebx);ja  <MmGetSystemRoutineAddress+>;cmpl (%ebx), %eax;jbe  <MmGetSystemRoutineAddress+>;movl $, (%esp)": 1,
                "movl (%edx), %eax;testl %eax, %eax;je  <MmGetSystemRoutineAddress+>;movl %eax, %esi;movl %eax, %edx": 1,
                "testb $, %ah;je  <MmGetSystemRoutineAddress+>;andl $, %eax;cmpl $, %eax;je  <MmGetSystemRoutineAddress+>": 1,
                "subl $, %esp;movl %eax, %edi;andw $, %si;movl $, %eax;cmpw $, %si": 1,
                "movl $, %edi;movl $, %eax;movl (%ebp), %edx;movl %edi, (%edx);jmp  <MmGetSystemRoutineAddress+>": 1,
                "jmp  <MmGetSystemRoutineAddress+>;leal -(%eax), %ecx;movl %ecx, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, (%eax);jmp  <MmGetSystemRoutineAddress+>;movl $, -(%ebp);movl $, %eax;leal -(%ebp), %ecx": 1,
                "cmpl (%ebx), %edi;jne  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testb %dl, %dl;jne  <MmGetSystemRoutineAddress+>;movl %eax, %ecx;calll - <KeSetTimer+>;movl %edi, (%ebx)": 1,
                "movl %edi, (%ebx);movzwl (%edi), %eax;movw %ax, (%ebx);movl -(%ebp), %eax;testb $, (%eax)": 1,
                "movl %eax, %ebx;calll *-;cmpb $, %al;jbe  <MmGetSystemRoutineAddress+>;movl $, (%esp)": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movzwl (%ebx), %edx;cmpw %dx, (%eax);je  <MmGetSystemRoutineAddress+>": 3,
                "jne  <MmGetSystemRoutineAddress+>;leal (%ebx), %ecx;calll - <KeSetEventBoostPriority+>;movl %fs:, %eax;movl (%eax), %ebx": 5,
                "je  <MmGetSystemRoutineAddress+>;leal -(%ebp), %eax;movl %eax, (%esp);calll - <KeUnstackDetachProcess>;subl $, %esp": 3,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl $, -(%ebp);jmp  <MmGetSystemRoutineAddress+>": 2,
                "movl (%ebx), %eax;testl %eax, %eax;nop;jne  <MmGetSystemRoutineAddress+>;jmp  <MmGetSystemRoutineAddress+>": 1,
                "movl $, (%ebx);movl $, %esi;lock;xaddl %esi, (%edi);testl $, %esi": 1,
                "calll  <ObfDereferenceObject>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "andl $, %eax;cmpb $, %al;jne  <MmGetSystemRoutineAddress+>;movl $, -(%ebp);jmp  <MmGetSystemRoutineAddress+>": 1,
                "calll  <MmGetPhysicalAddress+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax;jne  <MmGetSystemRoutineAddress+>": 1,
                "subl $, %esp;cmpl $, (%esi);jne  <MmGetSystemRoutineAddress+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll  <MmGetPhysicalAddress+>": 1,
                "movl -(,%eax,), %eax;movl %eax, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "shrl $, %eax;leal -(,%eax,), %esi;cmpl %esi, %ebx;ja  <MmGetSystemRoutineAddress+>;movl $, %eax": 1,
                "js  <MmGetSystemRoutineAddress+>;jmp  <MmGetSystemRoutineAddress+>;movzwl (%ebx), %eax;andw $, %ax;cmpw $, %ax": 1,
                "movl %eax, %ecx;calll - <KeSetTimer+>;movl -(%ebp), %ecx;movl %ecx, (%ebx);movzwl (%ecx), %eax": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %ecx": 1,
                "movl %eax, (%esp);movl (%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esp);movl (%edi), %eax": 1,
                "movl (%edi), %eax;movl %eax, (%esp);movl %esi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 2,
                "calll  <DbgPrint>;jmp  <MmGetSystemRoutineAddress+>;movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp)": 1,
                "movl %eax, -(%ebp);shrl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %ebx;shrl $, %ebx": 1,
                "shrl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %ebx;shrl $, %ebx;movl (%ebp), %eax": 1,
                "cmpb $, %dl;je  <MmGetSystemRoutineAddress+>;movl %eax, %edx;andl $, %edx;cmpb $, %dl": 1,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <MmGetSystemRoutineAddress+>;movl -(%ebp), %eax;testb $, (%eax)": 1,
                "movl (%ebp), %eax;testb $, (%eax);jne  <MmGetSystemRoutineAddress+>;movl $, (%esp);movl $, (%esp)": 4,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;orb $, (%eax);movl (%ebp), %edx": 1,
                "subl $, %esp;movl -(%ebp), %edx;andl $, %edx;movl %edx, -(%ebp);movl -(%ebp), %ecx": 1,
                "cmpl %ecx, -(%ebp);jbe  <MmGetSystemRoutineAddress+>;jmp  <MmGetSystemRoutineAddress+>;movzbl (%esi), %eax;andl $, %eax": 1,
                "movl -(%ebp), %ebx;movl %edi, -(%ebp);movl %ebx, %edi;testl $, %ebx;jne  <MmGetSystemRoutineAddress+>": 1,
                "shrl $, %eax;leal -(,%eax,), %eax;movl %eax, (%esp);calll - <MmGetSystemRoutineAddress+>;subl $, %esp": 2,
                "jne  <MmGetSystemRoutineAddress+>;movl -, %edx;shll $, %edi;shrl $, %edi;leal (%edi), %ecx": 1,
                "je  <MmGetSystemRoutineAddress+>;shrl $, %esi;movl $, %edi;cmpl -, %esi;ja  <MmGetSystemRoutineAddress+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp;jmp  <MmGetSystemRoutineAddress+>": 1,
                "movl %edx, %eax;lock;cmpxchgl %ebx, (%ecx);cmpl %eax, %edx;jne  <MmGetSystemRoutineAddress+>": 1,
                "movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;movl (%ebp), %edx": 3,
                "movl (%ebp), %edx;movl %eax, (%edx);movl $, %ebx;jmp  <MmGetSystemRoutineAddress+>;movl $, %ebx": 1,
                "movl $, %ebx;jmp  <MmGetSystemRoutineAddress+>;movl $, %ebx;jmp  <MmGetSystemRoutineAddress+>;movl $, %ebx": 2,
                "subl $, %esp;movl $, %ebx;cmpl -, %esi;ja  <MmGetSystemRoutineAddress+>;cmpl $, -": 1,
                "movl -(%ebp), %ecx;calll - <ExfAcquirePushLockExclusive>;movl (%ebp), %eax;testb $, (%eax);jne  <MmGetSystemRoutineAddress+>": 1,
                "jne  <MmGetSystemRoutineAddress+>;movl %edi, %eax;shrl $, %eax;leal -(,%eax,), %esi;cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);calll - <MmGetSystemRoutineAddress+>": 1,
                "testb $, (%esi);je  <MmGetSystemRoutineAddress+>;cmpl $, (%esi);jne  <MmGetSystemRoutineAddress+>;testb $, (%esi)": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, -(%ebp);jne  <MmGetSystemRoutineAddress+>;movl $, (%esp)": 1,
                "movl %ebx, -(%ebp,%eax,);addl $, %eax;movl %eax, -(%ebp);jmp  <MmGetSystemRoutineAddress+>;movl %esi, %edx": 1,
                "subl $, %esp;cmpl %ebx, -(%ebp);adcl $, -(%ebp);movl -, %esi;testl $, %esi": 1,
                "calll  <RtlAssert>;subl $, %esp;movl %esi, (%ebx);addl $, %ebx;addl $, %edi": 1,
                "movl (%ebp), %eax;testb $, (%eax);jne  <MmGetSystemRoutineAddress+>;testl $, (%eax);je  <MmGetSystemRoutineAddress+>": 1,
                "movzbl -, %eax;leal (%eax), %edx;movb %dl, -;testb %al, %al;jne  <MmUnsecureVirtualMemory+>": 1,
                "leal (%eax), %edx;movb %dl, -;testb %al, %al;jne  <MmUnsecureVirtualMemory+>;pushl %ebp": 1,
                "movl (%ebp), %eax;addl (%ebp), %eax;cmpl %eax, (%ebp);ja  <MmUnsecureVirtualMemory+>;movl (%ebp), %ecx": 2,
                "movl $, -(%ebp);cmpl $, (%ebp);je  <MmUnsecureVirtualMemory+>;movsbl -(%ebp), %ebx;movl $, (%esp)": 2,
                "movl %eax, %fs:;nop;leal (%esi), %esi;jmp  <MmUnsecureVirtualMemory+>;movl $, -(%ebp)": 4,
                "movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "cmpl $, %eax;je  <MmUnsecureVirtualMemory+>;cmpl $, %eax;jne  <MmUnsecureVirtualMemory+>;cmpb $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, -(%ebp);jmp  <MmUnsecureVirtualMemory+>": 1,
                "subl $, %esp;movl %eax, -(%ebp);movl %ebx, (%esp);calll - <KeUnstackDetachProcess>;subl $, %esp": 1,
                "movl %eax, -(%ebp);movl %fs:, %eax;movl (%eax), %eax;movzbl (%eax), %eax;movb %al, -(%ebp)": 4,
                "calll  <ObfDereferenceObject>;jmp  <MmUnsecureVirtualMemory+>;movl -(%ebp), %edx;movl (%ebp), %eax;movl %edx, (%eax)": 1,
                "movl $, (%ecx);jmp  <MmUnsecureVirtualMemory+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 2,
                "jmp  <MmUnsecureVirtualMemory+>;leal (%esi), %esi;leal (%edi), %edi;jmp - <MmUnsecureVirtualMemory+>;movl -(%ebp), %ecx": 1,
                "je  <MmUnsecureVirtualMemory+>;movl %esi, (%esp);movl , %eax;movl -, %edx;movl %eax, (%esp)": 1,
                "movl %esi, (%esp);calll - <KeUnstackDetachProcess>;subl $, %esp;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>": 1,
                "leal (%esi), %esi;leal (%edi), %edi;jmp - <MmUnsecureVirtualMemory+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "jb  <MmUnsecureVirtualMemory+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movsbl -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);jmp  <MmUnsecureVirtualMemory+>": 1,
                "jmp  <MmUnsecureVirtualMemory+>;movl (%ebp), %eax;cmpl %eax, -;jb  <MmUnsecureVirtualMemory+>;movl , %eax": 1,
                "jb  <MmUnsecureVirtualMemory+>;movl -(%ebp), %edx;cmpl %edx, (%ebp);ja  <MmUnsecureVirtualMemory+>;cmpl %edx, %eax": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;movl (%ebp), %ecx;leal -(%eax,%ecx), %edx;movl $, %eax": 1,
                "calll  <ObfDereferenceObject>;movl $, %eax;jmp  <MmUnsecureVirtualMemory+>;movl (%ebp), %ecx;movl $, (%ecx)": 1,
                "movl (%ebp), %eax;movl $, (%eax);jmp  <MmUnsecureVirtualMemory+>;movl $, %eax;leal -(%ebp), %ecx": 1,
                "cmpl %edx, %ebx;ja  <MmUnsecureVirtualMemory+>;jmp  <MmUnsecureVirtualMemory+>;movl $, (%esp);leal -(%ebp), %eax": 1,
                "movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, %edx;movsbl %dl, %edi": 1,
                "jne  <MmUnsecureVirtualMemory+>;movl $, -(%ebp);jmp  <MmUnsecureVirtualMemory+>;movl $, (%esp);movl (%ebp), %edx": 1,
                "cmpl -, %edx;jb  <MmUnsecureVirtualMemory+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %edx;movl (%edx), %eax": 1,
                "movl %eax, -(%ebp);jmp  <MmUnsecureVirtualMemory+>;jmp - <MmUnsecureVirtualMemory+>;leal (%esi), %esi;leal (%edi), %edi": 1,
                "je  <MmUnsecureVirtualMemory+>;cmpl $, (%ebp);jne  <MmUnsecureVirtualMemory+>;jmp  <MmUnsecureVirtualMemory+>;cmpl $, (%ebp)": 1,
                "subl $, %esp;movl %eax, -(%ebp);jmp  <MmUnsecureVirtualMemory+>;cmpl $, (%ebp);jbe  <MmUnsecureVirtualMemory+>": 1,
                "movl %eax, -(%ebp);jmp  <MmUnsecureVirtualMemory+>;cmpl $, (%ebp);jbe  <MmUnsecureVirtualMemory+>;movl (%ebp), %eax": 1,
                "testl $, (%ebp);je  <NtAllocateVirtualMemory+>;cmpl $, (%ebp);je  <NtAllocateVirtualMemory+>;movl $, (%esp)": 1,
                "movl %eax, -(%ebp);movl %eax, %esi;movl -(%ebp), %eax;movl %eax, %fs:;movl , %eax": 1,
                "movl $, -(%ebp);jmp  <NtAllocateVirtualMemory+>;subl $, %eax;subl %ebx, %eax;cmpl -(%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;andl $, (%ebp);movl -(%ebp), %eax": 1,
                "testl %eax, %eax;jne  <NtAllocateVirtualMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "movb %al, (%esi);andl $, %edi;movl (%esi), %eax;andl $, %eax;orl %eax, %edi": 1,
                "movl -(%ebp), %ecx;cmpl (%edi), %ecx;jne  <NtAllocateVirtualMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "je  <NtAllocateVirtualMemory+>;testw %ax, %ax;jle  <NtAllocateVirtualMemory+>;movl $, (%esp);movl $, (%esp)": 2,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;subw $, (%eax);leal (%edi), %eax": 1,
                "setb %dl;testb %dl, %dl;jne  <NtAllocateVirtualMemory+>;movl %eax, %ecx;calll - <KeSetTimer+>": 2,
                "subl $, %eax;cmpl %eax, -(%ebp);ja  <NtAllocateVirtualMemory+>;jmp  <NtAllocateVirtualMemory+>;addl $, %eax": 1,
                "addl $, %eax;movl %eax, (%esp);movl -(%ebp), %eax;shrl $, %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;calll - <KeAreAllApcsDisabled>;cmpb $, %al;je  <NtAllocateVirtualMemory+>;movl $, (%esp)": 4,
                "subl $, %esp;movl -(%ebp), %ebx;calll *-;cmpb $, %al;jbe  <NtAllocateVirtualMemory+>": 1,
                "je  <NtAllocateVirtualMemory+>;calll - <PsGetCurrentThread>;movl %ebx, (%esp);movl %eax, (%esp);movl $, (%esp)": 1,
                "leal (%ebx), %esi;testb $, (%ebx);jne  <NtAllocateVirtualMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "jne  <NtAllocateVirtualMemory+>;testl $, (%ebx);je  <NtAllocateVirtualMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "testb $, -(%ebp);jne  <NtAllocateVirtualMemory+>;testl $, %ebx;je  <NtAllocateVirtualMemory+>;movl $, (%esp)": 1,
                "cmpb $, %bl;jne  <NtAllocateVirtualMemory+>;movl %esi, %ecx;calll - <ExfTryToWakePushLock>;calll *-": 1,
                "movl %fs:, %eax;cmpl (%eax), %ebx;je  <NtAllocateVirtualMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <NtAllocateVirtualMemory+>;calll - <KiCheckForKernelApcDelivery>;cmpb $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %esi;leal (%esi), %ecx": 1,
                "calll  <RtlAssert>;subl $, %esp;subw $, (%edi);leal (%esi), %eax;lock": 1,
                "calll - <MmGetSystemRoutineAddress+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax;jne  <NtAllocateVirtualMemory+>": 1,
                "calll  <DbgPrint>;movl $, %ebx;movl $, -(%ebp);jmp  <NtAllocateVirtualMemory+>;testl $, (%ebp)": 2,
                "movl %eax, %edx;andl $, %edx;andl $, %eax;cmpb $, %al;je  <NtAllocateVirtualMemory+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %edx;subl (%esi), %edx": 1,
                "movl %eax, -(%ebp);cmpl (%esi), %eax;jbe  <NtAllocateVirtualMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %edi, (%ebx);jmp  <NtAllocateVirtualMemory+>;addl $, -(%ebp);addl $, %ebx": 1,
                "js  <NtAllocateVirtualMemory+>;movl %fs:, %eax;movl (%eax), %eax;cmpl $, (%eax);je  <NtAllocateVirtualMemory+>": 1,
                "xaddl %ebx, -;testb $, %bl;je  <NtAllocateVirtualMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "leal (%edx,%eax), %ecx;andl $, %ecx;andl $, %edx;orl %ecx, %edx;movl %edx, (%esi)": 1,
                "movl -(%ebp), %eax;orb $, (%eax);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <MmGetSystemRoutineAddress+>;subl $, %esp;movl $, %ebx;movl -(%ebp), %esi;movzbl -(%ebp), %ecx": 1,
                "movl $, %ebx;movl -(%ebp), %esi;movzbl -(%ebp), %ecx;andl $, %ecx;movb %cl, -(%ebp)": 1,
                "andl $, %ecx;movb %cl, -(%ebp);jmp  <NtAllocateVirtualMemory+>;movl %edi, -(%ebp);testl $, %edi": 1,
                "shll $, %ecx;shrl $, %ecx;addl $, %ecx;movzwl (%edx,%ecx,), %eax;addl $, %eax": 1,
                "calll - <MmGetSystemRoutineAddress+>;subl $, %esp;cmpl (%ebp), %eax;je  <NtAllocateVirtualMemory+>;movl $, %ebx": 1,
                "movl $, %ebx;testl $, (%edi);je  <NtAllocateVirtualMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;addl $, %edi;cmpl -(%ebp), %edi": 1,
                "subl $, %esp;testl %edi, %edi;je  <NtAllocateVirtualMemory+>;testl $, %edi;jne  <NtAllocateVirtualMemory+>": 1,
                "movl %edx, %eax;lock;cmpxchgl %edi, (%esi);cmpl %eax, %edx;jne  <NtAllocateVirtualMemory+>": 1,
                "movl %fs:, %eax;movl (%eax), %esi;calll *-;cmpb $, %al;jbe  <NtAllocateVirtualMemory+>": 1,
                "movl (%eax), %esi;calll *-;cmpb $, %al;jbe  <NtAllocateVirtualMemory+>;movl $, (%esp)": 1,
                "movl %fs:, %eax;cmpl (%eax), %esi;je  <NtAllocateVirtualMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpw $, (%esi);js  <NtAllocateVirtualMemory+>": 1,
                "cmpw $, (%esi);js  <NtAllocateVirtualMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movw %ax, (%esi);testw %ax, %ax;jne  <NtAllocateVirtualMemory+>;leal (%esi), %eax;cmpl %eax, (%esi)": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);leal -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;jmp  <NtAllocateVirtualMemory+>;movl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <NtAllocateVirtualMemory+>;jmp - <NtAllocateVirtualMemory+>": 1,
                "nop;jmp - <NtAllocateVirtualMemory+>;movzbl -(%ebp), %eax;andl $, %eax;movzbl (%esi), %edx": 1,
                "movl %esi, %esi;leal (%edi), %edi;jmp - <NtFreeVirtualMemory+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "cmpl %ebx, %eax;ja  <NtFreeVirtualMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subw $, (%edi);movl -(%ebp), %eax;addl $, %eax;lock;btrl $, (%eax)": 1,
                "jne  <NtFreeVirtualMemory+>;movl -(%ebp), %ecx;addl $, %ecx;calll - <KeSetTimer+>;movl -(%ebp), %edx": 1,
                "testb $, (%eax);je  <NtFreeVirtualMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 7,
                "calll  <DbgPrint>;jmp  <NtFreeVirtualMemory+>;movl %ebx, %eax;andl $, %eax;movl %eax, -(%ebp)": 1,
                "movl %ebx, %eax;andl $, %eax;movl %eax, -(%ebp);leal -(%ebx,%esi), %eax;orl $, %eax": 1,
                "orl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %edx;movl %edx, -(%ebp);movl %edx, (%esp)": 1,
                "jae  <NtFreeVirtualMemory+>;movl -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <NtFreeVirtualMemory+>;cmpb $, (%edi)": 1,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <NtFreeVirtualMemory+>;testb $, %al;je  <NtFreeVirtualMemory+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl $, (%ebp);je  <NtFreeVirtualMemory+>": 1,
                "testb $, (%edi);je  <NtFreeVirtualMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testl %esi, %esi;jne  <NtFreeVirtualMemory+>;movl %ebx, %eax;shrl $, %eax;cmpl (%edi), %eax": 1,
                "jne  <NtFreeVirtualMemory+>;movl %ebx, %eax;shrl $, %eax;cmpl (%edi), %eax;je  <NtFreeVirtualMemory+>": 1,
                "subl $, %esp;movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp);movl %edi, (%esp)": 2,
                "addl $, %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <MmGetSystemRoutineAddress+>;subl $, %esp": 2,
                "movl %edi, (%esp);calll - <MmGetSystemRoutineAddress+>;subl $, %esp;movl $, -(%ebp);jmp  <NtFreeVirtualMemory+>": 2,
                "jmp  <NtFreeVirtualMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 2,
                "movl %eax, %edx;subl -(%ebp), %edx;andl $, %edx;andl $, %eax;orl %edx, %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <NtFreeVirtualMemory+>;movl $, (%esp)": 1,
                "jne  <NtFreeVirtualMemory+>;calll - <PsGetCurrentThread>;testb $, (%eax);jne  <NtFreeVirtualMemory+>;movl $, (%esp)": 1,
                "subl $, %esp;testb $, (%ebx);jne  <NtFreeVirtualMemory+>;movl $, (%esp);movl $, (%esp)": 1,
                "testl $, %ebx;je  <NtFreeVirtualMemory+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;andl $, %ebx;cmpb $, %bl;jne  <NtFreeVirtualMemory+>;movl %esi, %ecx": 1,
                "jne  <NtFreeVirtualMemory+>;movl %esi, %ecx;calll - <ExfTryToWakePushLock>;calll *-;cmpb $, %al": 1,
                "movl (%eax), %ecx;movl -(%ebp), %edx;cmpl %ecx, (%edx);je  <NtFreeVirtualMemory+>;movl $, (%esp)": 1,
                "testl %ebx, %ebx;je  <NtFreeVirtualMemory+>;testb $, %bl;jne  <NtFreeVirtualMemory+>;leal (%ebx), %edx": 2,
                "cmpb $, -(%ebp);je  <NtFreeVirtualMemory+>;leal -(%ebp), %eax;movl %eax, (%esp);calll - <KeUnstackDetachProcess>": 2,
                "calll  <ObfDereferenceObject>;jmp  <NtFreeVirtualMemory+>;movl -(%ebp), %edx;movl (%ebp), %eax;movl %edx, (%eax)": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);jmp  <NtFreeVirtualMemory+>;movl $, %eax;leal -(%ebp), %ecx": 1,
                "nop;leal (%esi), %esi;jmp - <NtFreeVirtualMemory+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "subl -(%ebp), %eax;leal (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;subl %edx, (%eax)": 1,
                "jmp - <NtFreeVirtualMemory+>;calll *-;cmpb $, %al;jbe  <NtFreeVirtualMemory+>;movl $, (%esp)": 1,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;jmp  <NtFreeVirtualMemory+>;movl -(%ebp), %eax;addl $, %eax": 1,
                "movl -(,%eax,), %ebx;movl %ebx, %ecx;shrl $, %ecx;testb $, %bl;je  <MmGetPhysicalAddress+>": 1,
                "testl %eax, %eax;je  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 88,
                "jne  <MmGetPhysicalAddress+>;movb $, -;movzbl -(%ebp), %edx;movl $, %ecx;calll *-": 1,
                "calll *-;jmp - <MmGetPhysicalAddress+>;movl -, %edi;cmpl $-, %edi;jne  <MmGetPhysicalAddress+>": 1,
                "cmpl -, %edi;ja  <MmGetPhysicalAddress+>;cmpl $, -;je  <MmGetPhysicalAddress+>;movl %edi, (%esp)": 1,
                "movl %ebx, %edi;movl $, %edx;testb $, %bl;je  <MmGetPhysicalAddress+>;movb $, (%ebx)": 2,
                "shrl $, %ecx;movl $, %eax;rep  stosl %eax, %es:(%edi);testb $, %dl;je  <MmGetPhysicalAddress+>": 7,
                "calll *%edx;movb %al, -(%ebp);movl %esi, (%esp);movl $, (%esp);calll - <MmFreeNonCachedMemory+>": 1,
                "nop;nop;nop;movl $, %eax;cmpl $, -": 1,
                "nop;movl $, %eax;cmpl $, -;je  <MmGetPhysicalAddress+>;pushl %ebp": 1,
                "movl $, -;movl $, -;movl $, -;movl %ebx, -;movl $, -": 1,
                "jmp  <MmGetPhysicalAddress+>;cmpl $, %eax;jbe  <MmGetPhysicalAddress+>;movl $, %edx;movl %ebx, %eax": 1,
                "movl %eax, %esi;movl %ebx, (%esp);calll  <MmGetPhysicalAddress+>;subl $, %esp;movl %esi, %eax": 2,
                "jmp  <MmGetPhysicalAddress+>;movl $, %ecx;calll *-;movl %eax, %esi;movl %ebx, (%esp)": 1,
                "movl %eax, %ebx;cmpl %edx, %esi;jbe  <MmGetPhysicalAddress+>;subl %edx, %esi;cmpl %esi, %eax": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll *%ecx;testl %eax, %eax;jns  <MmGetPhysicalAddress+>": 1,
                "calll - <KeWaitForMultipleObjects>;subl $, %esp;cmpl $, %eax;ja  <MmGetPhysicalAddress+>;calll - <MmGetPhysicalAddress+>": 1,
                "je  <MmGetPhysicalAddress+>;movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl %eax, %edx": 1,
                "calll  <RtlAssert>;subl $, %esp;addl $, %ebx;movl , %eax;subl $, %eax": 1,
                "movl $, (%edi);calll  <MmGetPhysicalAddress+>;movl %eax, %ebx;jmp  <MmGetPhysicalAddress+>;movl %ebx, (%esp)": 1,
                "cmpl %eax, %ebx;jae  <MmGetPhysicalAddress+>;movl %eax, %ebx;testl %esi, %esi;je  <MmGetPhysicalAddress+>": 1,
                "popl %edi;popl %ebp;retl;cmpl $, -;je  <MmGetPhysicalAddress+>": 1,
                "popl %ebp;retl;cmpl $, -;je  <MmGetPhysicalAddress+>;pushl %ebp": 1,
                "cmpl $, -;je  <MmGetPhysicalAddress+>;pushl %ebp;movl %esp, %ebp;subl $, %esp": 1,
                "subl $, %esp;movl (%ebp), %ebx;movzbl (%ebp), %edi;leal (%ebx,%ebx,), %eax;leal -(,%eax,), %esi": 1,
                "movl %eax, %esi;movl %edi, %eax;movzbl %al, %edx;movl $, %ecx;calll *-": 2,
                "movl %edi, %eax;movzbl %al, %edx;movl $, %ecx;calll *-;testl %esi, %esi": 2,
                "movzbl %al, %edx;movl $, %ecx;calll *-;testl %esi, %esi;jne  <MmGetPhysicalAddress+>": 2,
                "movl %eax, %ebx;movl $, (%esp);calll  <MmGetPhysicalAddress+>;subl $, %esp;movl %eax, %esi": 1,
                "testl %eax, %eax;jns  <MmGetPhysicalAddress+>;movl $, (%esp);calll - <KeBugCheck>;movl $, -(%ebp)": 1,
                "movl %eax, (%esp);calll  <NtSetInformationThread>;subl $, %esp;leave;retl": 1,
                "addl $, %eax;movl %eax, (%esp);movl %ebx, (%esp);movl $, (%esp);calll  <RtlInitializeBitMap>": 1,
                "movl %eax, %esi;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <RtlFindSetBits>": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <RtlFindSetBits>;subl $, %esp": 1,
                "movzbl %al, %edx;movl $, %ecx;calll *-;cmpl $-, %ebx;je  <MmGetPhysicalAddress+>": 2,
                "subl $, %esp;jmp  <MmGetPhysicalAddress+>;movl $, %edx;cmpl -, %ebx;ja  <MmGetPhysicalAddress+>": 4,
                "addl $, %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);calll  <RtlFindSetBits>": 1,
                "movl %ebx, (%esp);movl $, (%esp);calll  <RtlClearBit>;subl $, %esp;movl %esi, %eax": 1,
                "subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);calll - <MmGetPhysicalAddress+>;subl $, %esp": 1,
                "calll  <RtlTestBit>;subl $, %esp;testb %al, %al;je  <MmGetPhysicalAddress+>;leal (%esi,%esi,), %edx": 3,
                "movl %eax, (%ebx);orb $, (%ebx);shrl $, %eax;andl $-, %eax;movb %al, (%ebx)": 1,
                "addl $, %edi;addl $, -(%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp);jne - <MmGetPhysicalAddress+>": 1,
                "movl -(%ebp), %eax;cmpl %eax, -(%ebp);jne - <MmGetPhysicalAddress+>;movl %edi, -(%ebp);movzbl -(%ebp), %edx": 1,
                "movl $, %ecx;calll *-;jmp  <MmGetPhysicalAddress+>;cmpl %ebx, -;jb  <MmGetPhysicalAddress+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl %esi, (%esp);calll - <MmGetPhysicalAddress+>": 1,
                "movl %esi, (%esp);calll - <MmFreeNonCachedMemory+>;subl $, %esp;cmpw $, (%esi);je  <MmGetPhysicalAddress+>": 1,
                "subl $, %esp;cmpw $, (%esi);je  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <ExFreePoolWithTag>;subl $, %esp;movl $, -(%ebp);jmp  <MmGetPhysicalAddress+>": 2,
                "movl -(%ebp), %edi;shrdl $, %edi, %esi;movl %esi, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %edx;shrdl $, %edx, %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;shrdl $, %edx, %eax;movl %eax, -(%ebp);cmpl %ebx, %eax": 1,
                "jmp - <MmGetPhysicalAddress+>;movl $, %esi;jmp - <MmGetPhysicalAddress+>;movl -(%ebp), %eax;leal -(%ebp), %esp": 1,
                "movl $, %esi;jmp - <MmGetPhysicalAddress+>;movl -(%ebp), %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "testb $, (%ebx);je  <MmGetPhysicalAddress+>;cmpl $, (%ebx);je  <MmGetPhysicalAddress+>;testl %esi, %esi": 1,
                "subl $, %esp;movzwl (%ebx), %ebx;movl %esi, %eax;movzbl %al, %edx;movl $, %ecx": 1,
                "movzwl (%ebx), %ebx;movl %esi, %eax;movzbl %al, %edx;movl $, %ecx;calll *-": 1,
                "leal (%eax,%edx,), %edx;movl %edx, (%esp);calll - <MmGetPhysicalAddress+>;subl $, %esp;movl -(%ebp), %ebx": 1,
                "je  <MmGetPhysicalAddress+>;movl %esi, (%esp);movl $, (%esp);calll  <RtlTestBit>;subl $, %esp": 1,
                "movw %ax, (%ebx);testw %ax, %ax;jne  <MmGetPhysicalAddress+>;movzbl (%ebx), %eax;andl $-, %eax": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl , %eax;addl $, %eax": 1,
                "je  <MmGetPhysicalAddress+>;movl (%ebx), %eax;movl $, (%eax);movl (%ebx), %eax;movl $, (%eax)": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%eax), %edx;testl %edx, %edx": 2,
                "movl (%eax), %edx;testl %edx, %edx;jne  <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>;movl %eax, %edx": 2,
                "cmpl (%edx), %eax;je - <MmGetPhysicalAddress+>;movl %edx, %eax;popl %ebp;retl": 2,
                "movl (%eax), %ebx;movl (%ebx), %ecx;movl $, %esi;jmp  <MmGetPhysicalAddress+>;testl %esi, %esi": 1,
                "movl (%ecx), %ebx;movl (%ebx), %edi;movl %ecx, %esi;movl %edi, %ecx;subl $, %edx": 1,
                "movl (%ebx), %edi;movl %ecx, %esi;movl %edi, %ecx;subl $, %edx;cmpl $-, %edx": 1,
                "movl %ecx, %esi;movl %edi, %ecx;subl $, %edx;cmpl $-, %edx;jne - <MmGetPhysicalAddress+>": 1,
                "movl %eax, %ebx;movl $, (%esp);movl $, (%esp);movl %eax, (%esp);calll - <MmGetPhysicalMemoryRanges+>": 1,
                "testl $, %eax;je  <MmGetPhysicalAddress+>;cmpl $, %eax;je  <MmGetPhysicalAddress+>;cmpl $, %eax": 1,
                "cmpl %ecx, %esi;jbe  <MmGetPhysicalAddress+>;leal (%esi), %esi;jmp  <MmGetPhysicalAddress+>;cmpl %edx, %ebx": 1,
                "jae  <MmGetPhysicalAddress+>;jmp - <MmGetPhysicalAddress+>;movl (%eax), %ecx;cmpl %ecx, %ebx;jb - <MmGetPhysicalAddress+>": 1,
                "cmpl %ecx, %ebx;jb - <MmGetPhysicalAddress+>;leal (%esi), %esi;jmp - <MmGetPhysicalAddress+>;popl %ebx": 1,
                "cmpl %ebx, (%eax);jbe  <MmGetPhysicalAddress+>;movl %edx, %ebx;subl %edi, %ebx;andl -(%ebp), %ebx": 1,
                "cmpl %ebx, %edx;jb  <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>;calll - <MmGetPhysicalAddress+>;testl %eax, %eax": 1,
                "jb  <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>;calll - <MmGetPhysicalAddress+>;testl %eax, %eax;je  <MmGetPhysicalAddress+>": 1,
                "calll - <MmGetPhysicalAddress+>;testl %eax, %eax;je  <MmGetPhysicalAddress+>;movl (%eax), %edx;cmpl -(%ebp), %edx": 2,
                "jmp  <MmGetPhysicalAddress+>;movl $, %eax;jmp  <MmGetPhysicalAddress+>;cmpl -, %eax;je  <MmGetPhysicalAddress+>": 1,
                "jmp  <MmGetPhysicalAddress+>;cmpl -, %eax;je  <MmGetPhysicalAddress+>;cmpl $, %eax;je  <MmGetPhysicalAddress+>": 1,
                "cmpl %esi, (%eax);jae  <MmGetPhysicalAddress+>;calll - <MmGetPhysicalAddress+>;testl %eax, %eax;nop": 1,
                "jae  <MmGetPhysicalAddress+>;movl (%ebp), %ecx;negl %ecx;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "leal -(%edx,%ecx), %ebx;andl -(%ebp), %ebx;leal (%ebx,%edi), %ecx;cmpl %ecx, %edx;jbe  <MmGetPhysicalAddress+>": 1,
                "andl -(%ebp), %ebx;leal (%ebx,%edi), %ecx;cmpl %ecx, %edx;ja  <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>": 1,
                "movl (%ebp), %esi;calll - <MmGetPhysicalAddress+>;testl %eax, %eax;je  <MmGetPhysicalAddress+>;movl (%eax), %edx": 1,
                "movl -(%ebp), %esi;movl %ebx, %eax;jmp  <MmGetPhysicalAddress+>;movl -(%ebp), %esi;movl %ebx, %eax": 1,
                "cmpl %edx, -(%ebp);jb  <MmGetPhysicalAddress+>;cmpl %esi, %eax;jae  <MmGetPhysicalAddress+>;movl $, (%esp)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx;movl -, %ecx": 1,
                "movl $, -(%ebp);jmp  <MmGetPhysicalAddress+>;movl $, -(%ebp);movl (%ebp), %ebx;andl $, %ebx": 1,
                "movl $, %eax;cmpl %ebx, %edi;jbe - <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>;cmpl (%edx), %ecx": 1,
                "movl (%edx), %edx;jmp  <MmGetPhysicalAddress+>;cmpl (%edx), %ecx;jb  <MmGetPhysicalAddress+>;movl (%edx), %edx": 1,
                "jmp  <MmGetPhysicalAddress+>;cmpl (%edx), %ecx;jb  <MmGetPhysicalAddress+>;movl (%edx), %edx;testl %edx, %edx": 1,
                "jb  <MmGetPhysicalAddress+>;movl (%edx), %edx;testl %edx, %edx;jne - <MmGetPhysicalAddress+>;testl %eax, %eax": 1,
                "jmp  <MmGetPhysicalAddress+>;movl $, %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "jle  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 26,
                "movl (%eax), %edx;cmpl %edx, (%ebx);je  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp)": 19,
                "cmpl %edx, (%ebx);je  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 19,
                "cmpl %eax, (%ebx);je  <MmGetPhysicalAddress+>;calll - <KiCheckForKernelApcDelivery>;nop;jmp  <MmGetPhysicalAddress+>": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl %ebx, %ebx;je  <MmGetPhysicalAddress+>": 7,
                "cmpl $, (%edi);je  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "andl $, %eax;movl %eax, -(%ebp);movl (%edi), %esi;cmpl %esi, %eax;jbe  <MmGetPhysicalAddress+>": 1,
                "movb $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl %esi, %ebx;movl %esi, (%esp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl %esi, %ebx;movl %esi, (%esp);movl %edi, (%esp)": 1,
                "shrl $, %edx;movl , %eax;cmpw $, (%eax,%edx,);jne  <MmGetPhysicalAddress+>;movl $, %ecx": 1,
                "leal -(,%ebx,), %eax;movl %eax, -(%ebp);testb $, -(,%ebx,);jne  <MmGetPhysicalAddress+>;movl $, (%esp)": 1,
                "calll - <MmGetSystemRoutineAddress+>;subl $, %esp;testb $, -(,%ebx,);je  <MmGetPhysicalAddress+>;movl $, (%esp)": 1,
                "leal (%eax), %ecx;jmp  <MmGetPhysicalAddress+>;movl (%ebp), %ecx;movl (%edi), %edx;testl %edx, %edx": 1,
                "movl %edx, (%eax);jmp  <MmGetPhysicalAddress+>;movl (%edx), %eax;testl %eax, %eax;jne  <MmGetPhysicalAddress+>": 1,
                "movl (%edi), %edx;movl %edx, (%eax);movl (%edi), %edx;movl %eax, (%edx);movl %eax, (%ecx)": 1,
                "movl %eax, (%ebx);movl -, %edx;cmpl %edx, (%ebp);je  <MmGetPhysicalAddress+>;cmpl $, (%ebp)": 1,
                "calll - <MmGetPhysicalAddress+>;subl $, %esp;testl %eax, %eax;jne  <MmGetPhysicalAddress+>;cmpl $, (%ebp)": 1,
                "movl $, (%esp);calll - <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "sete %al;movzbl %al, %eax;subl $, %eax;andl %eax, %esi;movl %esi, -(%ebp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl %esi, %edi;movl $, %edx;testl $, %esi": 1,
                "movl (%esi), %eax;movl %eax, -(%ebp);cmpl $, -(%ebp);je  <MmGetPhysicalAddress+>;addl $, -(%ebp)": 1,
                "subl %esi, %edi;cmpl $, %edi;jbe  <MmGetPhysicalAddress+>;movl %ebx, -(%ebp);movl (%ebp), %esi": 1,
                "movl %ecx, -(%ebp);movl (%ebp), %ebx;movl %ebx, %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %eax, (%esi);je  <MmGetPhysicalAddress+>;calll - <KiCheckForKernelApcDelivery>;movl %edi, (%esp);movl (%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl %fs:, %eax;movl (%eax), %edi": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl %edi, %esi;shrl $, %esi": 2,
                "movl (%eax), %ecx;movl (%ebp), %edx;cmpl %ecx, (%edx);je  <MmGetPhysicalAddress+>;movl $, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %ecx;movl $, (%ecx);movl $, %esi;lock": 1,
                "jne  <MmGetPhysicalAddress+>;movl (%ebp), %ecx;addl $, %ecx;calll - <KeSetEventBoostPriority+>;movl %fs:, %eax": 1,
                "calll  <DbgPrint>;movl $, %ebx;testl %eax, %eax;je  <MmGetPhysicalAddress+>;movl $, (%esp)": 5,
                "movl -, %esi;cmpb $, -(%ebp);je  <MmGetPhysicalAddress+>;movl %eax, (%esp);movsbl -(%ebp), %eax": 1,
                "movl (%eax), %eax;leal (%eax), %esi;cmpb $, -(%ebp);jne  <MmGetPhysicalAddress+>;leal -(%esi), %ebx": 2,
                "jne  <MmGetPhysicalAddress+>;leal -(%esi), %ebx;calll *-;cmpb $, %al;jbe  <MmGetPhysicalAddress+>": 2,
                "nop;jmp  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "lock;btrl $, (%edi);setb %al;testb %al, %al;jne  <MmGetPhysicalAddress+>": 2,
                "subl $, %esi;calll *-;cmpb $, %al;jbe  <MmGetPhysicalAddress+>;movl $, (%esp)": 2,
                "movzwl (%esi), %edx;cmpw %dx, (%eax);je  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp)": 2,
                "testl $, %edi;jne  <MmGetPhysicalAddress+>;leal (%edi), %edx;subl $, %edi;movl %edx, %eax": 2,
                "movl $, %ebx;jmp  <MmGetPhysicalAddress+>;movl $, %ebx;jmp  <MmGetPhysicalAddress+>;movzbl -(%ebp), %eax": 2,
                "movl %eax, (%esp);movsbl -(%ebp), %eax;movl %eax, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp": 1,
                "movl -(%ebp), %ecx;cmpl (%ebx), %ecx;jne  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %fs:, %eax;movl -(%ebp), %ecx;cmpl (%eax), %ecx;je  <MmGetPhysicalAddress+>;movl $, (%esp)": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movzbl (%ebp), %edi;movzbl (%ebp), %esi;cmpl %ebx, -": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);movl %esi, %eax;movsbl %al, %esi;movl %esi, (%esp)": 2,
                "subl $, %esp;testl %eax, %eax;je  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp)": 13,
                "movl %eax, (%esp);movl $, (%esp);movl , %eax;shll $, %eax;movl %eax, (%esp)": 1,
                "shll $, %edx;addl %eax, %edx;movl %edx, (%esp);movl %eax, (%esp);movl $, (%esp)": 1,
                "addl -, %edx;movl %edx, (%esp);movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "calll - <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp);calll - <MmGetPhysicalAddress+>;subl $, %esp": 1,
                "orl %eax, %ebx;orl -, %ebx;movl , %eax;movl %ebx, (%eax);calll - <NtMapViewOfSection+>": 1,
                "jmp  <MmGetPhysicalAddress+>;movl -(%ebp), %eax;movw $, (%eax);movw $, (%eax);jmp  <MmGetPhysicalAddress+>": 1,
                "movl %eax, %fs:;jmp  <MmGetPhysicalAddress+>;movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %edx": 1,
                "movl (%eax), %eax;subl $, %eax;movl %eax, -(%ebp);movl %eax, %ebx;movl $, %eax": 1,
                "movl %ecx, -(%ebp);movl %ebx, %edx;movl %edx, %ebx;subl %eax, %ebx;shrl %ebx": 1,
                "movl %ecx, %esi;shll $, %esi;movl -(%ebp), %ecx;movl (%ecx,%esi), %edi;movl (%ecx,%esi), %esi": 1,
                "movl -(%ebp), %ecx;addl $, %ebx;shll $, %ebx;movl %edx, %eax;movl %ecx, %edx": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl (%ebx), %eax;addl (%ebx), %eax;addl $, %eax": 1,
                "orw $, (%ebx);addl $, %esp;popl %ebx;popl %ebp;retl $": 1,
                "pushl %ebx;movl (%ebp), %ebx;movl -, %ecx;testl %ecx, %ecx;je  <MmGetPhysicalAddress+>": 1,
                "je  <MmGetPhysicalAddress+>;cmpl $, (%edx);jne  <MmGetPhysicalAddress+>;movl %eax, (%esp);movl $, (%esp)": 2,
                "movl %edx, -(%ebp);movl $, (%esp);movl $, (%esp);leal -(%ebp), %esi;movl %esi, (%esp)": 2,
                "calll - <IoSynchronousPageWrite>;subl $, %esp;movl %eax, %ebx;cmpl $, %eax;jne  <MmGetPhysicalAddress+>": 1,
                "movl %esp, %ebp;movl $, %ecx;calll *-;movl -, %edx;addl $, %edx": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;movl %esi, %ebx": 1,
                "movl -(,%ebx,), %ecx;testl %ecx, %ecx;jne  <MmGetPhysicalAddress+>;movl $, (%esp);calll - <KeBugCheck>": 1,
                "movl (%eax), %eax;movl $, %esi;movzbl -(%ebp), %ecx;shll %cl, %esi;movl %esi, -(%ebp)": 1,
                "je  <MmGetPhysicalAddress+>;cmpl $, (%esi);je  <MmGetPhysicalAddress+>;leal (%esi), %eax;movl %eax, -(%ebp)": 1,
                "je  <MmGetPhysicalAddress+>;movl (%esi), %eax;movl %eax, -(%ebp);movl $, -(%ebp);jmp  <MmGetPhysicalAddress+>": 1,
                "movl %eax, (%edx);addl $, (%esi);subl $, (%esi);movzbl -(%ebp), %edx;movl -(%ebp), %ecx": 1,
                "orb $, %bh;shll $, %edi;movl %ebx, %eax;orl %edi, %eax;jmp  <MmGetPhysicalAddress+>": 1,
                "orl %edi, %eax;jmp  <MmGetPhysicalAddress+>;addl $, %ebx;cmpl $, %ebx;jne - <MmGetPhysicalAddress+>": 1,
                "ja  <MmGetPhysicalAddress+>;cmpl %eax, %ecx;ja  <MmGetPhysicalAddress+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %ecx": 1,
                "jmp - <MmGetPhysicalAddress+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %esi;movl -(%ebp), %eax": 1,
                "ja  <MmGetPhysicalAddress+>;movsbl -(%ebp), %ebx;movl (%ebp), %ecx;movl %ebx, %edx;leal -(%ebp), %eax": 1,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;jns  <MmGetPhysicalAddress+>;movl -(%ebp), %eax": 3,
                "movl $, %ecx;calll - <MmGetPhysicalAddress+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <MmGetPhysicalAddress+>": 1,
                "calll - <ZwClose>;subl $, %esp;movl $, %esi;jmp  <MmGetPhysicalAddress+>;movl $, -(%ebp)": 1,
                "movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwFsControlFile>": 1,
                "calll - <ZwClose>;subl $, %esp;movl $, %esi;jmp  <MmGetPhysicalAddress+>;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;shll $, %eax;movl (%ebx,%eax), %edx;movl (%ebx,%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl %edx, (%ecx);movl -(%ebp), %ecx;movl -(%ebp), %ebx;movl -(%ebp), %eax;movl %ecx, (%eax)": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %eax;movl %ecx, (%eax);movl %ebx, (%eax);movl %ebx, %eax": 1,
                "sarl $, %edx;movl %edx, %eax;xorl %edx, %edx;shrl $, %eax;addl %ecx, %eax": 1,
                "jmp  <MmGetPhysicalAddress+>;movl -(%ebp), %ebx;addl $, %ebx;shll $, %ebx;movl %ebx, (%esp)": 1,
                "movl %ebx, (%eax);movl -(%ebp), %eax;movl (%eax), %ecx;movl -(%ebp), %ebx;movl (%ebx), %eax": 1,
                "movl (%eax), %eax;xorl -(%ebp), %eax;orl %eax, %edx;je  <MmGetPhysicalAddress+>;movl %ecx, (%esp)": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll - <ExFreePool>;subl $, %esp": 2,
                "movl $, %esi;jmp  <MmGetPhysicalAddress+>;movl -(%ebp), %ebx;imull (%ecx), %ebx;movl -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);je  <MmGetPhysicalAddress+>;movl $, %eax;leal (%eax), %ebx;movl %ebx, %esi": 1,
                "mull (%ecx);movl %eax, -(%ebp);addl %edi, %edx;movl %edx, -(%ebp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;addl (%eax), %esi;movl -(%ebp), %ecx;imull (%esi), %ecx;movl -(%ebp), %eax": 1,
                "jne  <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>;movl $, %edx;movl -(%ebp), %ecx;movl %ecx, -(,%edx,)": 1,
                "jmp  <MmGetPhysicalAddress+>;addl $, %edx;cmpl $, %edx;jne - <MmGetPhysicalAddress+>;movl -(%ebp), %ebx": 1,
                "subl $, %esp;movb $, -;movl $, %esi;jmp  <MmGetPhysicalAddress+>;movl $, %esi": 1,
                "movl %edx, (%ecx);movl (%eax), %ecx;movl %ecx, (%edx);movl %eax, (%edx);movl %edx, (%eax)": 1,
                "movl (%ebp), %esi;movl (%ebp), %ebx;movl (%esi), %edx;cmpl %edx, %esi;je  <MmGetPhysicalAddress+>": 1,
                "jmp  <MmGetPhysicalAddress+>;movl (%ebp), %edx;movl -(%ebp), %eax;movl %edx, (%eax);movl (%ebp), %ecx": 1,
                "subl (%ebp), %eax;addl (%ebx), %eax;movl %eax, (%edi);leal (%edi), %edx;movl -(%ebp), %eax": 1,
                "subl $, %esp;jmp  <MmGetPhysicalAddress+>;movl (%ebp), %eax;subl %esi, %eax;movl %eax, (%ebx)": 1,
                "leal -(%edi), %ebx;movl (%ebp), %edx;addl (%eax), %edx;movl %edx, -(%ebp);testl %esi, %esi": 1,
                "testl %esi, %esi;je  <MmGetPhysicalAddress+>;movl (%ebx), %eax;cmpl %eax, %esi;jb  <MmGetPhysicalAddress+>": 1,
                "movl %ebx, (%esp);calll - <ExFreePoolWithTag>;subl $, %esp;leal -(%edi), %ebx;testl %esi, %esi": 1,
                "ja  <MmGetPhysicalAddress+>;cmpl %edi, (%ebp);jne - <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>;cmpl (%ebp), %edi": 1,
                "cmpl %edi, (%ebp);jne - <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>;cmpl (%ebp), %edi;je  <MmGetPhysicalAddress+>": 1,
                "je  <MmGetPhysicalAddress+>;movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %esi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl -(%ebp), %eax;addl %esi, (%eax);subl %esi, (%ebx);movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "movl (%edx), %eax;cmpl (%ebp), %eax;je  <MmGetPhysicalAddress+>;leal -(%eax), %edx;movl -(%ebp), %ecx": 1,
                "cmpl %eax, (%edx);jne  <MmGetPhysicalAddress+>;movl (%edx), %eax;movl -(%ebp), %ecx;addl %eax, (%ecx)": 1,
                "movl , %eax;leal -(%eax), %edx;lock;cmpxchgl %edx, -;jne - <MmGetPhysicalAddress+>": 4,
                "cmpl $, %edx;jne  <MmGetPhysicalAddress+>;movl (%eax), %eax;testl %eax, %eax;je  <MmGetPhysicalAddress+>": 1,
                "je - <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;jmp  <MmGetPhysicalAddress+>;calll *-": 1,
                "jmp  <MmGetPhysicalAddress+>;calll *-;cmpb $, %al;je  <MmGetPhysicalAddress+>;movl $, (%esp)": 1,
                "subl $, %esp;movl %fs:, %eax;movl (%eax), %eax;movzwl (%ebx), %esi;cmpw %si, (%eax)": 5,
                "movzwl (%ebx), %esi;cmpw %si, (%eax);je  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp)": 5,
                "calll - <KeBugCheck>;movl -(%ebp), %esi;cmpl -, %esi;jae  <MmGetPhysicalAddress+>;movl -(%ebp), %eax": 1,
                "movl $, (%esp);calll - <KeBugCheck>;movl (%ebx), %eax;movl %eax, %edx;movb $, %dl": 2,
                "testb %al, %al;je  <MmGetPhysicalAddress+>;calll *-;cmpb $, %al;je  <MmGetPhysicalAddress+>": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %edi;movl (%ebp), %ebx;movl %ebx, %eax": 1,
                "movl $, %eax;movl %esi, (%esp);movl %edx, (%esp);movl %ebx, (%esp);movl %eax, (%esp)": 1,
                "calll  <DbgPrint>;movl $, (%esp);calll - <KeBugCheck>;calll *-;cmpb $, %al": 1,
                "calll *-;cmpl $, -(%ebp);je  <MmGetPhysicalAddress+>;testl %edi, %edi;jne  <MmGetPhysicalAddress+>": 1,
                "movl $, %eax;lock;xaddl %eax, (%edi);cmpl %eax, (%edi);ja  <MmGetPhysicalAddress+>": 1,
                "calll *-;subl $, %esp;jmp  <MmGetPhysicalAddress+>;movl %ebx, %edx;movl $, %ecx": 4,
                "jne - <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>;movl %esi, %ecx;andl $, %ecx;calll *-": 1,
                "andl $, %ecx;calll *-;jmp  <MmGetPhysicalAddress+>;movl (%eax), %eax;testl %eax, %eax": 1,
                "movl %esi, %eax;cmpl %ebx, (%edi);ja - <MmGetPhysicalAddress+>;leal -(%ebp), %esp;popl %ebx": 1,
                "subl $, %esp;movl %eax, %ebx;movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "pushl %ebx;subl $, %esp;movl %edx, -(%ebp);movl %ecx, %edi;movl (%ebp), %ebx": 1,
                "movl %ecx, %edi;movl (%ebp), %ebx;cmpb $, (%ecx);je  <MmGetPhysicalAddress+>;cmpl $, (%ebp)": 1,
                "je  <MmGetPhysicalAddress+>;cmpl $, (%ebp);jne  <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>;movl $, (%ebp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <MmGetPhysicalAddress+>;movl -(%ebp), %ecx": 1,
                "movzbl (%ebp), %ebx;cmpl %ecx, %eax;jae  <MmGetPhysicalAddress+>;leal (%eax,%eax,), %eax;leal (%edx,%eax,), %eax": 1,
                "je  <MmGetPhysicalAddress+>;movl -(%ebp), %ecx;cmpl %ecx, (%ebp);ja  <MmGetPhysicalAddress+>;cmpl -, %ecx": 1,
                "movl %eax, (%ebx);cmpl $, (%ebp);je  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "jmp - <MmGetPhysicalAddress+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "shll $, %esi;movl $, (%esp);movl %esi, (%esp);movl $, (%esp);calll - <ExAllocatePoolWithTag>": 2,
                "leal (%ebx,%esi), %ecx;movl (%ebp), %eax;movl %ecx, (%eax);movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "andl %edx, %esi;movl %ebx, (%esp);movl %eax, (%esp);calll - <MmGetPhysicalAddress+>;subl $, %esp": 1,
                "testl %eax, %eax;je  <MmGetPhysicalAddress+>;movl %ebx, -(%ebp);movl $, -(%ebp);leal -(%ebp), %edi": 1,
                "cmpb $, -(%ebp);je  <MmGetPhysicalAddress+>;movl %ebx, (%esp);movl %esi, (%esp);calll  <KeQueryIoAccessMap+>": 1,
                "movl %esi, (%esp);calll  <KeQueryIoAccessMap+>;subl $, %esp;movl (%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "shrl $, %edx;cmpl %eax, %edx;jne  <MmGetPhysicalAddress+>;movl $, -(%ebp);movl %ebx, (%esp)": 1,
                "je  <MmGetPhysicalAddress+>;movl -(%ebp), %ecx;movl %ecx, (%esp);movl %ebx, (%esp);movl %esi, (%esp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);movl %ebx, (%esp);movl %esi, (%esp);calll  <KeQueryIoAccessMap+>": 1,
                "sarl $, %edx;movl %edx, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);calll *(%ebp);subl $, %esp;movl %eax, %edi": 2,
                "movl %ecx, (%esp);calll *(%ebp);subl $, %esp;movl %eax, %edi;testl %eax, %eax": 2,
                "ja  <MmGetPhysicalAddress+>;addl $, %edx;movzwl (%eax), %eax;movl %eax, %ecx;notl %ecx": 1,
                "movl %eax, -(%ebp);cmpl $, %eax;ja  <MmGetPhysicalAddress+>;cmpl (%esi), %eax;je  <MmGetPhysicalAddress+>": 1,
                "testl %eax, -(%ebp);jne  <MmGetPhysicalAddress+>;testl %ecx, %ecx;je  <MmGetPhysicalAddress+>;movl %ecx, %eax": 1,
                "jb  <MmGetPhysicalAddress+>;movl (%esi), %eax;movl %eax, -(%ebp);leal (%esi), %eax;cmpl %eax, -(%ebp)": 1,
                "movl %eax, (%ecx);leal (%esi), %eax;cmpl %eax, -(%ebp);jb  <MmGetPhysicalAddress+>;movl (%esi), %eax": 1,
                "jb  <MmGetPhysicalAddress+>;leal (%esi), %eax;cmpl %eax, -(%ebp);jb  <MmGetPhysicalAddress+>;movzwl (%esi), %eax": 1,
                "movzwl (%esi), %eax;movl (%ebp), %edx;movw %ax, (%edx);movzwl (%esi), %eax;movw %ax, (%edx)": 1,
                "movl %edx, %ecx;notl %ecx;cmpl %ecx, %eax;ja  <MmGetPhysicalAddress+>;addl %edx, %eax": 1,
                "cmpl %eax, -(%ebp);ja  <MmGetPhysicalAddress+>;movl -(%ebp), %eax;addl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "cmpl %edx, -(%ebp);ja  <MmGetPhysicalAddress+>;addl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "jb  <MmGetPhysicalAddress+>;movl -(%ebp), %eax;notl %eax;cmpl %eax, %ebx;jbe  <MmGetPhysicalAddress+>": 1,
                "movl %edx, %eax;notl %edx;movl $, %edi;cmpl -(%ebp), %edx;jb  <MmGetPhysicalAddress+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl %esi, -(%ebp);jne  <MmGetPhysicalAddress+>": 1,
                "subl $, %esp;testl %esi, -(%ebp);jne  <MmGetPhysicalAddress+>;cmpl %edi, (%ebx);jne  <MmGetPhysicalAddress+>": 1,
                "testl %esi, -(%ebp);jne  <MmGetPhysicalAddress+>;cmpl %edi, (%ebx);jne  <MmGetPhysicalAddress+>;cmpl $, (%ebx)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %esi;movl $, %eax;movl $, %edx": 1,
                "testb $, %al;je  <MmGetPhysicalAddress+>;orl $, %eax;testb $-, %al;je  <MmGetPhysicalAddress+>": 1,
                "je  <MmGetPhysicalAddress+>;orl $, %eax;shrl $, %eax;movl -(,%eax,), %edx;movl %edx, (%esi)": 1,
                "shrl $, %eax;movl -(,%eax,), %edx;movl %edx, (%esi);xorl $, %eax;andl $, %eax": 1,
                "movl -(%ebp), %edx;leal -(%edx,%eax), %edi;andl -(%ebp), %edi;movl %edi, (%esi);movl (%esi), %ecx": 1,
                "cmpl $, -(%ebp);jbe  <MmGetPhysicalAddress+>;movl (%ebp), %edx;orl $, (%edx);jmp  <MmGetPhysicalAddress+>": 1,
                "movl $, %edi;jmp  <MmGetPhysicalAddress+>;movl $, %edi;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, -(%ebp);jmp - <MmGetPhysicalAddress+>;movl -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;movl (%eax), %eax;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "je  <MmGetPhysicalAddress+>;movl (%eax), %edx;testl %edx, %edx;je  <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>": 1,
                "leal (%eax), %ebx;movl $, %esi;movl $, (%esp);movl %eax, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl (%edx), %eax;movl (%eax), %ebx;testl %ebx, %ebx;je  <MmGetPhysicalAddress+>;cmpl $, (%ebx)": 1,
                "movl (%eax), %ebx;testl %ebx, %ebx;je  <MmGetPhysicalAddress+>;cmpl $, (%ebx);je  <MmGetPhysicalAddress+>": 1,
                "testl %ebx, %ebx;je  <MmGetPhysicalAddress+>;cmpl $, (%ebx);je  <MmGetPhysicalAddress+>;movl $, (%esp)": 1,
                "subl $, %esp;movl %ebx, (%esp);calll - <ExFreePool>;subl $, %esp;movl (%ebp), %edx": 1,
                "andl $, %edx;shrl $, %edx;cmpl $, %edx;jne  <MmGetPhysicalAddress+>;movl $, (%esp)": 1,
                "orl %edx, %eax;movl %eax, (%esp);movl %esi, (%esp);movl %ebx, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl (%ecx), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %eax, %ebx;shrl $, %ebx;testl %ebx, %ebx;jne  <MmGetPhysicalAddress+>;movl (%ebp), %edx": 1,
                "shrl $, %ebx;testl %ebx, %ebx;jne  <MmGetPhysicalAddress+>;movl (%ebp), %edx;movl (%edx), %esi": 1,
                "calll - <CcUnpinRepinnedBcb+>;subl $, %esp;testl %eax, %eax;jns  <MmGetPhysicalAddress+>;movl %eax, (%esp)": 1,
                "testl %eax, %eax;jne  <MmGetPhysicalAddress+>;cmpb $, -(%ebp);jne  <MmGetPhysicalAddress+>;movl (%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;cmpl $, (%ebp);je  <MmGetPhysicalAddress+>": 1,
                "movl $, (%esp);movl $, (%esp);calll - <KeSetEvent>;subl $, %esp;movl -(%ebp), %ecx": 1,
                "movl $, (%esp);calll - <MmGetPhysicalAddress+>;subl $, %esp;jmp  <MmGetPhysicalAddress+>;movl $, (%esp)": 1,
                "movzwl (%edi), %eax;movw %ax, (%ebx);movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax": 3,
                "je  <MmGetPhysicalAddress+>;movl %esi, %eax;shrl $, %eax;cmpl (%ebp), %eax;jne  <MmGetPhysicalAddress+>": 1,
                "shrl $, %eax;cmpl (%ebp), %eax;jne  <MmGetPhysicalAddress+>;cmpb $, -(%ebp);je  <MmGetPhysicalAddress+>": 1,
                "jne  <MmGetPhysicalAddress+>;cmpb $, -(%ebp);je  <MmGetPhysicalAddress+>;movl (%ecx), %eax;addl -(%ebp), %eax": 1,
                "movl (%edx), %eax;movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, (%esp)": 1,
                "movl (%eax), %eax;movl %eax, (%esp);calll - <CcUnpinRepinnedBcb+>;subl $, %esp;cmpl $, (%ebp)": 1,
                "je  <MmGetPhysicalAddress+>;movl -(%ebp), %ecx;testb $, (%ecx);je  <MmGetPhysicalAddress+>;movl $, (%esp)": 1,
                "calll  <DbgPrint>;movl $, (%esp);calll - <KeBugCheck>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;testl %eax, %eax;je  <MmGetPhysicalAddress+>;movl %eax, (%esp);calll - <MmGetPhysicalAddress+>": 1,
                "movl %edx, (%ebx);movzwl (%edx), %eax;movw %ax, (%ebx);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpb $, -(%ebp);je  <MmGetPhysicalAddress+>;movb $, (%esi);cmpb $, (%esi);jne  <MmGetPhysicalAddress+>": 1,
                "calll - <MmGetPhysicalAddress+>;subl $, %esp;movl $, (%esp);movl $, (%esp);movl (%esi), %eax": 1,
                "lock;xaddl %edi, (%ecx);testl $, %edi;je  <MmGetPhysicalAddress+>;movl $, (%esp)": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ecx;movl (%ecx), %edx": 3,
                "jne  <MmGetPhysicalAddress+>;movl (%ecx), %eax;movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %ebx": 1,
                "je  <MmGetPhysicalAddress+>;testl %edi, %edi;je  <MmGetPhysicalAddress+>;testl $, %edi;je  <MmGetPhysicalAddress+>": 1,
                "movl %edx, (%esp);movl %esi, (%esp);calll - <CcUnpinRepinnedBcb+>;subl $, %esp;movl %eax, %ebx": 2,
                "jne  <MmGetPhysicalAddress+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <CcSetReadAheadGranularity+>;subl $, %esp": 3,
                "movl %eax, (%esp);calll - <MmGetPhysicalAddress>;subl $, %esp;shrl $, %eax;movl (%ebp), %edx": 1,
                "movl $, %ebx;jmp  <MmGetPhysicalAddress+>;movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "jmp  <MmGetPhysicalAddress+>;movl %edi, (%esp);movl -(%ebp), %edx;subl %eax, %edx;movl %edx, %eax": 1,
                "subl $, %esp;jmp  <MmGetPhysicalAddress+>;leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx": 1,
                "movl $, %esi;testb %al, %al;jne  <MmGetPhysicalAddress+>;movl (%ebp), %esi;movl %esi, (%esp)": 1,
                "movl (%esi), %ecx;movl -(%ebp), %eax;subl %ecx, %eax;movl $, %edx;addl (%esi), %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>": 2,
                "subl $, %esp;movl -(%ebp), %edx;cmpb $, (%edx);je  <MmGetPhysicalAddress+>;movl -(%ebp), %ecx": 1,
                "je  <MmGetPhysicalAddress+>;movl -(%ebp), %ecx;movl (%ecx), %edx;cmpl $, %edx;sete %cl": 1,
                "movl %edx, -(%ebp);jmp  <MmGetPhysicalAddress+>;movl -(%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp)": 1,
                "movl %esi, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;subl $, %ebx;calll *-": 2,
                "movl %edi, (%ebx);movzwl (%edi), %eax;movw %ax, (%ebx);movl $, %esi;jmp  <MmGetPhysicalAddress+>": 2,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll  <KeQueryIoAccessMap+>;subl $, %esp": 1,
                "movl $, (%esp);calll - <KeBugCheck>;movl $, (%esp);movl $, (%esp);movl -(%ebp), %esi": 1,
                "movl %edi, (%esp);calll  <KeQueryIoAccessMap+>;subl $, %esp;subl $, %ebx;calll *-": 1,
                "subl $, %esp;movl -(%ebp), %esi;cmpl (%ebx), %esi;jne  <MmGetPhysicalAddress+>;movl $, (%esp)": 3,
                "calll - <KeSetTimer+>;movl -(%ebp), %esi;movl %esi, (%ebx);movzwl (%esi), %eax;movw %ax, (%ebx)": 3,
                "calll - <KeSetEvent>;subl $, %esp;movl $, %esi;jmp  <MmGetPhysicalAddress+>;cmpl $, (%esi)": 1,
                "calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl %ecx, (%esp);movl (%ebp), %esi;movl %esi, (%esp);calll - <MmGetPhysicalAddress+>": 1,
                "movl -(%ebp), %esi;movl %esi, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl $, (%esp)": 3,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebp), %esi;movl %esi, (%esp)": 1,
                "jmp  <MmGetPhysicalAddress+>;testb $, -(%ebp);je  <MmGetPhysicalAddress+>;movl -(%ebp), %eax;shrl %eax": 1,
                "calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl -(%ebp), %esi;movl %esi, (%esp);movl -(%ebp), %eax": 1,
                "andl %eax, %esi;movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);calll  <KeQueryIoAccessMap+>": 1,
                "movl (%ebx), %ecx;movl -(%ebp), %eax;subl %ecx, %eax;movl $, %edx;addl (%ebx), %eax": 1,
                "movl $, (%esp);movl %edi, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;cmpb $, (%edi)": 1,
                "movl -(%ebp), %ecx;cmpl %ecx, %ebx;je  <MmGetPhysicalAddress+>;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "jmp  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp);movl %edi, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl %edi, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl (%ebp), %edx;subl $, %edx": 1,
                "movl %eax, (%esp);calll - <MmGetPhysicalAddress+>;subl $, %esp;movl %fs:, %eax;movl (%eax), %eax": 1,
                "calll - <MmGetPhysicalAddress+>;subl $, %esp;movl %fs:, %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %edi;movl (%ebp), %edx;subl $, %edx;movl (%ebp), %ebx;cmpl -, %ebx": 1,
                "movl (%eax), %ebx;movl $, (%esp);movl $, (%esp);movl %ecx, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>": 1,
                "movl $, (%esp);movl %ecx, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;testl %ebx, %ebx": 1,
                "subl $, %esp;movl -(%ebp), %eax;movl %eax, (%esp);calll - <MmGetPhysicalAddress+>;subl $, %esp": 2,
                "movzbl %al, %edx;movl $, %ecx;calll *-;movl $, (%esp);leal -(%ebp), %eax": 1,
                "movl $, %eax;cmpb $, -(%ebp);je  <MmGetPhysicalAddress+>;movl $, %eax;movl -(%ebp), %ebx": 1,
                "movl %ebx, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp);movl %esi, (%esp);movl $, (%esp)": 2,
                "movl %esi, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;cmpb $, -(%ebp);jne  <MmGetPhysicalAddress+>": 1,
                "subl $, %esp;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);calll - <MmGetPhysicalAddress+>": 2,
                "testl %esi, %esi;je  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl $, %eax;jmp  <MmGetPhysicalAddress+>;cmpb $, -(%ebp);jne  <MmGetPhysicalAddress+>;testb %bl, %bl": 1,
                "testl %esi, %esi;je  <MmGetPhysicalAddress+>;movl -(%ebp), %ebx;movl %ebx, (%esp);movl $, (%esp)": 2,
                "movl $, (%esp);calll  <DbgPrint>;movl -(%ebp), %ebx;movl %ebx, (%esp);movl -(%ebp), %ebx": 2,
                "movl -(%ebp), %esi;movl $, (%esp);movl %esi, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "calll - <KiCheckForKernelApcDelivery>;cmpl $, -(%ebp);jns  <MmGetPhysicalAddress+>;movl -(%ebp), %ebx;movl %ebx, (%esp)": 2,
                "calll - <MmGetPhysicalAddress+>;movl (%ebp), %ebx;subl $, %ebx;movl %fs:, %eax;movl (%eax), %eax": 1,
                "cmpl %eax, (%ebx);je  <MmGetPhysicalAddress+>;calll - <KiCheckForKernelApcDelivery>;movl $, (%esp);movl $, (%esp)": 3,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <MmGetPhysicalAddress+>;subl $, %esp;movl -(%ebp), %eax": 1,
                "calll - <MmGetPhysicalAddress+>;subl $, %esp;movl -(%ebp), %eax;testb $, (%eax);jne  <MmGetPhysicalAddress+>": 1,
                "calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;movl %esi, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "leal (%esi), %esi;jmp - <MmGetPhysicalAddress+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "andl %eax, %esi;movl (%ebp), %ebx;andl $, %ebx;movl %ebx, %eax;subl (%ecx), %eax": 1,
                "movl -(%ebp), %edx;addl (%ecx), %eax;adcl (%ecx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "testb $, (%edi);jne  <MmGetPhysicalAddress+>;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "addl $, %eax;adcl $, %edx;cmpl (%edi), %edx;jl  <MmGetPhysicalAddress+>;jg  <MmGetPhysicalAddress+>": 1,
                "calll - <KeBugCheck>;movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <MmGetPhysicalAddress+>;subl $, %esp;movl %eax, %esi;testb $-, (%edi);jne  <MmGetPhysicalAddress+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx": 1,
                "subl $, %esp;movl %ebx, (%esp);movl %esi, (%esp);calll - <MmGetPhysicalAddress+>;subl $, %esp": 1,
                "movl (%ebp), %ebx;movl (%ebp), %edx;movl (%ebx), %eax;subl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %eax;cmpl %eax, (%esi);jne  <MmGetPhysicalAddress+>;movl (%esi), %edx;movl (%ebp), %eax": 1,
                "movl $, (%ebx);jmp  <MmGetPhysicalAddress+>;movl (%esi), %edx;movl %edx, (%ebx);movl $, (%ebx)": 1,
                "movl %edx, (%ebx);movl $, (%ebx);movl -(%ebp), %edx;movl %edx, (%ebx);movl (%esi), %edx": 1,
                "movl (%eax), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl $, (%eax);movl $, %eax": 1,
                "je  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %edi, (%esp)": 1,
                "movl %eax, (%esp);calll - <MmGetPhysicalAddress+>;subl $, %esp;movl $, (%esp);movl (%ebp), %edx": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll - <ExFreePool>;subl $, %esp": 3,
                "movl $, (%edx);leal -(%ebp), %esp;popl %ebx;popl %esi;popl %edi": 1,
                "movl (%ebp), %edx;movl %edx, (%eax);movl (%ebp), %edx;movl %edx, (%eax);movl %esi, (%eax)": 1,
                "movl $, (%ebx);movl -(%ebp), %edx;movl (%ebp), %eax;movl %edx, (%eax);movl %ebx, (%esp)": 1,
                "calll - <IoQueryFileInformation>;subl $, %esp;movl %eax, %ebx;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, %ebx;movl -(%ebp), %eax;movl %eax, -(%ebp);testl %ebx, %ebx;jns  <MmGetPhysicalAddress+>": 1,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;jmp  <MmGetPhysicalAddress+>": 3,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, %ebx;jmp  <MmGetPhysicalAddress+>;movl -(%ebp), %edx": 1,
                "calll - <ZwReadFile>;subl $, %esp;movl %eax, %ebx;cmpl $, %eax;je  <MmGetPhysicalAddress+>": 1,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, %ebx;jmp  <MmGetPhysicalAddress+>;movl -(%ebp), %esi": 1,
                "testl %eax, %eax;je  <MmGetPhysicalAddress+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl -(%ebp), %ecx": 1,
                "jne - <MmGetPhysicalAddress+>;testl %edx, %edx;je  <MmGetPhysicalAddress+>;movl %esi, %ecx;calll - <KeWaitForSingleObject+>": 1,
                "andl $, %eax;movb %al, (%esi);testl $, (%ebp);je  <MmGetPhysicalAddress+>;movl $, (%esi)": 1,
                "jne  <MmGetPhysicalAddress+>;movl %edx, (%esi);movl %eax, (%esi);addl $, %edx;andl $, %edx": 1,
                "movl %eax, (%edx);movl -(%ebp), %esi;movl -(%ebp), %edi;movl %esi, (%edx);movl %edi, (%edx)": 1,
                "movl (%ebp), %edi;movl $, %edx;testl $, %edi;je  <MmGetPhysicalAddress+>;movb $, (%edi)": 1,
                "movzwl (%ebx), %eax;movw %ax, -(%ebp);andw $, %ax;cmpw $, %ax;sbbl %eax, %eax": 1,
                "movl $, %edx;addl -(%ecx,%esi), %eax;adcl -(%ecx,%esi), %edx;cmpl %edx, -(%ebp);jg  <MmGetPhysicalAddress+>": 1,
                "jl  <MmGetPhysicalAddress+>;cmpl %eax, -(%ebp);jae  <MmGetPhysicalAddress+>;movl $, (%esp);movl $, (%esp)": 1,
                "orl (%ebx), %eax;je  <MmGetPhysicalAddress+>;movl (%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl (%edx,%edi), %eax;movl $, %edx;movl -(%ebp), %ebx;addl (%ebx,%edi), %eax": 1,
                "movl -(%ebp), %edi;addl $, %esi;cmpl -(%ebp), %esi;jb - <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>": 1,
                "cmpl (%edi), %esi;jb - <MmGetPhysicalAddress+>;jmp  <MmGetPhysicalAddress+>;movl (%ebp), %eax;movl (%eax), %ebx": 1,
                "movl (%ebp), %eax;movl (%eax), %ebx;cmpl $, -(%ebp);je  <MmGetPhysicalAddress+>;movl $, -(%ebp)": 1,
                "movl (%ebx), %edx;movl %ecx, %esi;movl $, %edi;cmpl $, %edx;ja  <MmGetPhysicalAddress+>": 1,
                "subl %esi, %eax;sbbl %edi, %edx;movl %eax, (%ebx);movl %edx, (%ebx);movl $, %edx": 1,
                "leal (%edx,%edx,), %eax;shll $, %eax;movl (%ebp), %edx;movl (%edx), %esi;addl %eax, %esi": 1,
                "leal (%edx,%edx,), %ebx;shll $, %ebx;movl (%ebp), %eax;addl (%eax), %ebx;cmpl %edx, -(%ebp)": 1,
                "addl $, %eax;andl $, %eax;movl %eax, (%ebx);movl $, (%ebx);jmp  <MmGetPhysicalAddress+>": 1,
                "movl (%ebx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);addl (%ebx), %eax;adcl (%ebx), %edx": 1,
                "xorl (%esi), %edx;xorl (%esi), %eax;orl %eax, %edx;jne  <MmGetPhysicalAddress+>;movl -(%ebp), %eax": 1,
                "adcl (%esi), %edx;movl %eax, (%ebx);movl %edx, (%ebx);movl (%esi), %edx;movl (%esi), %eax": 1,
                "movl (%esi), %edx;movl (%esi), %eax;leal (%edx,%eax), %eax;andl $, %eax;subl (%ebx), %eax": 1,
                "andl $, %eax;subl (%ebx), %eax;movl %eax, (%ebx);movl $, (%ebx);movl (%esi), %eax": 1,
                "movl %eax, %ebx;testl %eax, %eax;je  <MmGetPhysicalAddress+>;movl %esi, (%esp);movl (%ebp), %edx": 1,
                "cmpl %eax, -(%ebp);jbe - <MmGetPhysicalAddress+>;nop;jmp - <MmGetPhysicalAddress+>;movl $, -(%ebp)": 1,
                "subl $, %esp;movl %eax, %edi;testl %eax, %eax;jns  <MmGetPhysicalAddress+>;movl %ebx, %ecx": 1,
                "je  <MmGetPhysicalAddress+>;movw $, (%edx);addl $, %edx;subl $, %ecx;movl %ecx, %esi": 1,
                "testb $, %dl;je  <MmGetPhysicalAddress+>;movb $, (%edi);movl %esi, (%esp);movl %ebx, (%esp)": 1,
                "calll - <ExFreePool>;subl $, %esp;movl $, (%esp);movl %esi, (%esp);calll - <ExFreePoolWithTag>": 1,
                "movl -(%ebp), %edi;testl %eax, %eax;je  <MmGetPhysicalAddress+>;movl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl (%eax), %ecx;movl -(%ebp), %eax;movl %ecx, (%eax);movl (%ecx), %eax;cmpl $, (%ecx)": 1,
                "addl $, %eax;cmpl %edx, (%ecx);ja - <MmGetPhysicalAddress+>;movl -(%ebp), %edi;jmp  <MmGetPhysicalAddress+>": 1,
                "cmpl $, (%esi);je  <MmGetPhysicalAddress+>;movl $, %edx;lock;addl $, (%eax)": 1,
                "leal (%ebx), %edx;movl $, %eax;cmpl %edx, (%ebx);je  <MmGetPhysicalAddress+>;calll - <KiCheckForKernelApcDelivery>": 1,
                "movb $, (%eax);movl (%eax), %edx;testb $, (%edx);je  <MmGetPhysicalAddress+>;movl (%eax), %ecx": 1,
                "movl (%eax), %ecx;movl (%edx), %edx;movl (%edx), %eax;movl (%edx), %edx;movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);testl %edx, %edx;je  <MmGetPhysicalAddress+>;movl %eax, %edi;movl $, %edx": 1,
                "testl %edx, %edx;je  <MmGetPhysicalAddress+>;movl %eax, %edi;movl $, %edx;movl -(%ebp), %esi": 1,
                "jne - <MmGetPhysicalAddress+>;movl $, (%esp);calll - <KeBugCheck>;testb $, (%edi);jne  <MmGetPhysicalAddress+>": 1,
                "testb $, (%edi);jne  <MmGetPhysicalAddress+>;movl -(%ebp), %edx;addl (%edi), %edx;movl -(%ebp), %eax": 1,
                "jmp  <MmGetPhysicalAddress+>;movl (%eax), %edx;movl (%edx), %edx;movl (%ebp), %ecx;movl %edx, (%ecx)": 1,
                "movl -(%ebp), %eax;movl %eax, %fs:;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl %ebx, %eax": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);movl %edi, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpl $, (%ebp);je  <MmMapViewOfSection+>;testl $, (%ebp);jne  <MmMapViewOfSection+>;leal (%edi), %eax": 1,
                "movl %fs:, %eax;cmpl (%eax), %ebx;je  <MmMapViewOfSection+>;movl $, (%esp);movl $, (%esp)": 10,
                "cmpw $, %ax;je  <MmMapViewOfSection+>;testw %ax, %ax;jle  <MmMapViewOfSection+>;movl $, (%esp)": 1,
                "jle  <MmMapViewOfSection+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testb $, (%ecx);je  <MmMapViewOfSection+>;movl (%ecx), %ebx;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl (%ebp), %ecx;movl (%ecx), %esi;testl %esi, %esi;jne  <MmMapViewOfSection+>": 1,
                "addl (%eax), %edx;cmpl %edx, %ebx;jae  <MmMapViewOfSection+>;movl %edx, %ebx;addl $, %eax": 1,
                "cmpl %ecx, %eax;jae  <MmMapViewOfSection+>;jmp  <MmMapViewOfSection+>;movl $, -(%ebp);movl (%ebp), %eax": 1,
                "movb $, -(%ebp);jmp  <MmMapViewOfSection+>;movl %esi, %eax;movw $, %ax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %ebx;addl $, %ebx;andl $, %ebx;movl %ebx, (%esp);movl -(%ebp), %eax": 1,
                "subl $, %esp;movl $, (%edi);movl -(%ebp), %ecx;movl $, %ebx;lock": 3,
                "movl $, (%edi);movl -(%ebp), %ecx;movl $, %ebx;lock;xaddl %ebx, (%ecx)": 3,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpw $, (%ebx);js  <MmMapViewOfSection+>": 9,
                "movw %ax, (%ebx);testw %ax, %ax;jne  <MmMapViewOfSection+>;leal (%ebx), %eax;movl $, %esi": 6,
                "jmp  <MmMapViewOfSection+>;movl $, (%esp);movl $, (%esp);movl %ebx, (%esp);movl -(%ebp), %eax": 1,
                "jne  <MmMapViewOfSection+>;movl -(%ebp), %eax;addl (%ebx), %eax;movl %eax, -(%ebp);movl $, (%esp)": 1,
                "subl $, %esp;cmpl $, -(%ebp);jns  <MmMapViewOfSection+>;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "movl -(%ebp), %edi;calll *-;cmpb $, %al;jbe  <MmMapViewOfSection+>;movl $, (%esp)": 1,
                "testw %ax, %ax;jne  <MmMapViewOfSection+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <MmMapViewOfSection+>": 3,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <MmMapViewOfSection+>;calll - <KiCheckForKernelApcDelivery>;jmp  <MmMapViewOfSection+>": 2,
                "jmp  <MmMapViewOfSection+>;addl $, %edi;addl $, %ebx;cmpl %esi, %edi;jne - <MmMapViewOfSection+>": 1,
                "cmpl $, (%ebp);leal (%esi), %esi;jne  <MmMapViewOfSection+>;movl $, (%esp);calll - <KeBugCheck>": 1,
                "calll - <KeBugCheck>;cmpl $, (%ebp);je  <MmMapViewOfSection+>;movl (%ebp), %eax;movl (%eax), %ebx": 1,
                "jne  <MmMapViewOfSection+>;movl (%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, %eax;subl %ebx, %eax": 1,
                "movl %edx, %eax;addl $, %eax;andl $, %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "cmpl %eax, (%ebx);je  <MmMapViewOfSection+>;calll - <KiCheckForKernelApcDelivery>;jmp  <MmMapViewOfSection+>;calll *-": 1,
                "cmpl %eax, (%ebx);je  <MmMapViewOfSection+>;calll - <KiCheckForKernelApcDelivery>;movl (%ebp), %edx;movl (%edx), %eax": 1,
                "calll  <DbgPrint>;int $;movzbl -(%ebp), %ecx;shll $, %ecx;movl %ecx, %esi": 1,
                "movzbl -(%ebp), %ecx;shll $, %ecx;movl %ecx, %esi;sarl $, %esi;andl $, %esi": 1,
                "movl $, %esi;jmp  <MmMapViewOfSection+>;movl $, %esi;jmp  <MmMapViewOfSection+>;movl $, %esi": 6,
                "movl (%ebp), %edx;cmpl $, (%edx);je  <MmCanFileBeTruncated+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %ecx;testl %eax, %eax;je  <MmCanFileBeTruncated+>;movl $, (%esp);movl $, (%esp)": 1,
                "testl %eax, %eax;je  <MmCanFileBeTruncated+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl $, (%eax);je  <MmCanFileBeTruncated+>;movl (%edx), %eax;testl %eax, %eax;je  <MmCanFileBeTruncated+>": 1,
                "movl $, %ecx;jmp  <MmCanFileBeTruncated+>;movl $, %ecx;movl %ecx, %eax;movl -(%ebp), %ebx": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl $, (%esp);movl %esi, (%esp);calll - <MmGrowKernelStack+>": 1,
                "movl %fs:, %eax;cmpl (%eax), %edi;je  <MmMapViewInSystemSpace+>;movl $, (%esp);movl $, (%esp)": 1,
                "testw %ax, %ax;jle  <MmMapViewInSystemSpace+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "calll - <KeSetTimer+>;movl -(%ebp), %eax;movl %eax, (%ebx);movzwl (%eax), %eax;movw %ax, (%ebx)": 1,
                "subl $, %esp;movl (%esi), %ecx;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%edx), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %esi, %edx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %esi, %edx;movl -(%ebp), %eax;calll - <MmGetPhysicalAddress+>": 1,
                "cmpl %edx, (%ebx);je  <MmMapViewInSystemSpace+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "testw %ax, %ax;jne  <MmMapViewInSystemSpace+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <MmMapViewInSystemSpace+>": 2,
                "movl %eax, %esi;calll *-;cmpb $, %al;jbe  <MmMapViewInSystemSpace+>;movl $, (%esp)": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <MmMapViewInSystemSpace+>;calll - <KiCheckForKernelApcDelivery>;movl %esi, %eax": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %edi;testl $, %ebx": 1,
                "movl (%ebp), %ebx;movl (%ebp), %edi;testl $, %ebx;jne  <MmCreateSection+>;movl (%ebp), %eax": 1,
                "calll  <DbgPrint>;jmp  <MmCreateSection+>;testl %edi, %edi;setne -(%ebp);movl (%ebp), %ecx": 1,
                "testl %edi, %edi;setne -(%ebp);movl (%ebp), %ecx;testl %ecx, %ecx;setne %dl": 1,
                "movl %edi, (%esp);calll  <ObReferenceObjectByHandle>;subl $, %esp;movl %eax, %esi;testl %eax, %eax": 1,
                "cmpb $, -(%ebp);je  <MmCreateSection+>;movl $, -(%ebp);movl $, -(%ebp);movl $, (%esp)": 1,
                "subl $, %esp;movl %eax, %esi;cmpl $, %eax;je  <MmCreateSection+>;shrl $, %eax": 1,
                "subl $, %esp;movl %eax, %esi;movl (%ebp), %ecx;testl %ecx, %ecx;je  <MmCreateSection+>": 1,
                "testl %eax, %eax;jns  <MmCreateSection+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, (%esp)": 1,
                "movzwl (%ebx), %edx;movl (%edi,%edx,), %ebx;movl %ebx, (%eax);movl %eax, (%edi,%edx,);addl $, %esi": 1,
                "jbe  <MmCreateSection+>;calll *-;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp)": 14,
                "je  <MmCreateSection+>;testl %ebx, %ebx;je  <MmCreateSection+>;testl %edi, %edi;je  <MmCreateSection+>": 1,
                "je  <MmCreateSection+>;testl %edi, %edi;je  <MmCreateSection+>;movl $, %esi;movl %esi, %eax": 1,
                "subl $, %edi;jne - <MmCreateSection+>;movl %eax, %esi;jmp  <MmCreateSection+>;movl $, %esi": 1,
                "addl $, %ecx;movl $, %edx;movl $, %eax;lock;cmpxchgl %edx, (%ecx)": 1,
                "je  <MmCreateSection+>;calll - <ExfAcquirePushLockShared>;movl (%ebp), %edx;testb $, (%edx);jne  <MmCreateSection+>": 1,
                "subl $, %esp;movl (%ebp), %ecx;testb $, (%ecx);jne  <MmCreateSection+>;movl (%ecx), %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebp), %edx;movl $, (%edx);movl -(%ebp), %ecx": 1,
                "movl (%ebp), %edx;movl $, (%edx);movl %fs:, %eax;movl (%eax), %ebx;movl %fs:, %eax": 1,
                "movw %ax, (%ebx);testw %ax, %ax;jne  <MmCreateSection+>;leal (%ebx), %eax;cmpl %eax, (%ebx)": 10,
                "je  <MmCreateSection+>;movl (%ebp), %ecx;cmpl $, (%ecx);je  <MmCreateSection+>;movl $, (%esp)": 1,
                "movl (%ebp), %ecx;cmpl $, (%ecx);je  <MmCreateSection+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpxchgl %esi, (%ecx);cmpl %eax, %edx;jne - <MmCreateSection+>;cmpl $, (%ecx);jns  <MmCreateSection+>": 1,
                "lock;cmpxchgl %edx, (%ecx);cmpl %eax, %esi;je  <MmCreateSection+>;movl -(%ebp), %ecx": 2,
                "cmpxchgl %edx, (%ecx);cmpl %eax, %esi;je  <MmCreateSection+>;movl -(%ebp), %ecx;calll - <ExfReleasePushLock>": 2,
                "movl $, (%eax);movl %fs:, %eax;movl (%eax), %esi;movl %fs:, %eax;cmpl (%eax), %esi": 1,
                "je  <MmCreateSection+>;movzbl %al, %eax;subl %eax, %esi;je  <MmCreateSection+>;movl (%esi), %eax": 2,
                "movl (%esi), %eax;leal -(%eax), %edx;lock;cmpxchgl %edx, (%esi);jne - <MmCreateSection+>": 2,
                "jne  <MmCreateSection+>;movl (%esi), %eax;testl %eax, %eax;je  <MmCreateSection+>;movl $, (%esp)": 2,
                "movw $, (%esi);movw $, (%esi);movl $, (%esi);movl (%esi), %eax;testl %eax, %eax": 10,
                "je  <MmCreateSection+>;movl $, (%esi);movl %eax, (%esp);calll  <ObDereferenceObjectDeferDelete>;subl $, %esp": 2,
                "movl %eax, (%esp);calll - <ExFreePoolWithTag>;subl $, %esp;movl $, %eax;movl -(%ebp), %ebx": 1,
                "movl (%edx), %eax;movl %eax, (%edx);jmp  <MmCreateSection+>;leal (%esi), %esi;movl $, %eax": 1,
                "calll  <IoCsqRemoveNextIrp+>;leal (%esi), %esi;jmp - <MmCreateSection+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "jmp  <MmCreateSection+>;movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx);jmp  <MmCreateSection+>": 2,
                "leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <MmCreateSection+>;movl -(%ebp), %eax;movl (%eax), %eax": 5,
                "cmpl $, (%ebp);je  <MmCreateSection+>;movl -(%ebp), %ebx;cmpl %ebx, (%ebp);ja  <MmCreateSection+>": 1,
                "movl %eax, -(%ebp);movl $, (%esp);movl (%ebp), %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;subw $, (%ebx);leal (%esi), %ecx;movl $, %edx": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ebx;movl (%eax,%ebx,), %eax;testl %eax, %eax;je  <MmCreateSection+>": 1,
                "cmpl %edx, -(%ebp);jne  <MmCreateSection+>;movl (%eax), %edx;subl $, %edx;movzbl (%edx), %ecx": 1,
                "movl %edx, %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll  <memmove>": 1,
                "testl $, %edi;jne  <MmCreateSection+>;movl %ebx, %eax;lock;cmpxchgl %edx, (%esi)": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, %fs:;jmp  <MmCreateSection+>;jmp - <MmCreateSection+>": 1,
                "jmp  <MmCreateSection+>;jmp - <MmCreateSection+>;movl -(%ebp), %eax;movl %eax, %fs:;movsbl -(%ebp), %eax": 1,
                "movl -(%ebp), %edi;movl $, %edx;testl $, %edi;je  <MmCreateSection+>;movb $, (%edi)": 1,
                "movb $, (%edi);addl $, %edi;movb $-, %dl;testl $, %edi;je  <MmCreateSection+>": 1,
                "movl $, %eax;testb $, (%esi);jne  <MmCreateSection+>;orl $, %ebx;movl %ebx, (%edx)": 1,
                "testb $, (%esi);jne  <MmCreateSection+>;orl $, %ebx;movl %ebx, (%edx);jmp  <MmCreateSection+>": 1,
                "cmpl $-, %esi;jne  <MmCreateSection+>;movl (%ebp), %ebx;movl $, (%ebx);movl (%ebp), %esi": 1,
                "movl (%ebp), %eax;movl $, (%eax);lock;addl $, -(%esi);movl %esi, (%edx)": 1,
                "testl %esi, %esi;jne  <MmCreateSection+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl $-, %esi;jne  <MmCreateSection+>;movl (%ebp), %ebx;movl $, (%ebx);movl (%eax), %edx": 1,
                "testb $, (%ecx);je  <MmCreateSection+>;movl $, -(%ebp);movl (%edx), %eax;movl (%edx), %edx": 1,
                "leal -(%ebp), %esi;jmp  <MmCreateSection+>;movl -(%ebp), %eax;movl (%eax), %esi;movl (%esi), %edx": 1,
                "je  <MmCreateSection+>;movl %edi, (%esp);movl %esi, (%esp);movl %eax, (%esp);calll  <memmove>": 1,
                "movl (%ebp), %edx;movl $, (%edx);movl $, %eax;jmp  <MmCreateSection+>;movl (%eax), %ecx": 1,
                "jmp  <MmCreateSection+>;cmpl %ebx, (%eax);jne  <MmCreateSection+>;movl (%eax), %edx;addl $, %edx": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, (%edi);je  <MmCreateSection+>;movl $, (%esp)": 1,
                "subl $, %esp;cmpl $, (%edi);je  <MmCreateSection+>;movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <MmCreateSection+>;movl $, %eax;jmp  <MmCreateSection+>;movl $, %eax;jmp  <MmCreateSection+>": 1,
                "calll *-;cmpb $, %al;jbe  <MmCreateSection+>;movl $, (%esp);movl $, (%esp)": 11,
                "calll  <RtlAssert>;subl $, %esp;movzwl (%esi), %eax;cmpw $, %ax;je  <MmCreateSection+>": 3,
                "subl $, %esp;movzwl (%esi), %eax;cmpw $, %ax;je  <MmCreateSection+>;testw %ax, %ax": 3,
                "movzbl %al, %eax;movl %ebx, %edi;subl %eax, %edi;testb $, (%ebx);je  <MmCreateSection+>": 1,
                "movl %eax, (%edi);jmp  <MmCreateSection+>;movl (%edi), %edi;testl %edi, %edi;je  <MmCreateSection+>": 1,
                "movl (%edi), %eax;addl $, %edi;testl %eax, %eax;je  <MmCreateSection+>;movl (%ebp), %ecx": 1,
                "cmpw $, (%ebx);jne  <MmCreateSection+>;calll - <KiCheckForKernelApcDelivery>;calll *-;cmpb $, %al": 4,
                "movl (%ebp), %ecx;movl %ecx, (%esp);movl $, (%esp);movl (%ebp), %eax;addl $, %eax": 1,
                "movl (%ebp), %edx;lock;subl $, (%edx);leal -(%ebp), %esp;popl %ebx": 1,
                "cmpb %al, -(%ebp);je  <MmCreateSection+>;movl %edi, (%esp);movl $, (%esp);addl $, %esi": 1,
                "je  <MmCreateSection+>;cmpb $, -(%ebp);jne  <MmCreateSection+>;cmpb $, -(%ebp);je  <MmCreateSection+>": 1,
                "movl (%ebp), %ebx;subl $, %ebx;movl %ebx, -(%ebp);movl (%ebx), %esi;movl %edi, %eax": 1,
                "movl %fs:, %edx;movl (%edx), %edx;cmpl (%edx), %eax;je  <MmCreateSection+>;movl $, -(%ebp)": 1,
                "movl $, %edi;cmpl $, (%ebx);jne  <MmCreateSection+>;cmpb $, -(%ebp);jne  <MmCreateSection+>": 1,
                "cmpb $, (%esi);je  <MmCreateSection+>;cmpl $, (%esi);jne  <MmCreateSection+>;cmpl $, (%esi)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll  <ObCheckObjectAccess>": 1,
                "calll  <DbgPrint>;movl %edi, %eax;testb %al, %al;je  <MmCreateSection+>;movzbl (%ebx), %edx": 1,
                "movl %edi, %eax;testb %al, %al;je  <MmCreateSection+>;movzbl (%ebx), %edx;movl $, %eax": 1,
                "cmpl %eax, (%edi);je  <MmCreateSection+>;cmpw $, (%edi);jne  <MmCreateSection+>;calll - <KiCheckForKernelApcDelivery>": 2,
                "cmpb $, %al;nop;jbe  <MmCreateSection+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, -(%ebp);cmpl $, (%esi);je  <MmCreateSection+>;calll *-;movl %eax, %edi": 1,
                "je  <MmCreateSection+>;movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp);leal (%esi), %eax": 1,
                "testb $, (%ebx);je  <MmCreateSection+>;cmpl $, %ebx;je  <MmCreateSection+>;calll *-": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, %eax;lock;xaddl %eax, (%esi)": 1,
                "jae  <MmCreateSection+>;movl %eax, (%esi);movl -(%ebp), %eax;jmp  <MmCreateSection+>;imull $, -(%ebp), %eax": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;calll *-;cmpb $, %al;jbe  <MmCreateSection+>": 1,
                "movl %edx, %esi;je  <MmCreateSection+>;andl $-, %edi;lock;addl $, (%edi)": 1,
                "jmp  <MmCreateSection+>;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll - <ExiTryToAcquireFastMutex+>;subl $, %esp;movl %esi, %eax": 1,
                "subl $, %esp;movl (%ebp), %edi;subl $, %edi;movl %edi, -(%ebp);movl (%edi), %eax": 1,
                "movl %edi, %edx;subl %eax, %edx;movl (%edx), %eax;testl %eax, %eax;jne  <MmCreateSection+>": 1,
                "movl %fs:, %edx;movl (%edx), %edx;movl $, %ebx;cmpl (%edx), %eax;jne  <MmCreateSection+>": 1,
                "jmp  <MmCreateSection+>;movb $, -(%ebp);cmpl $, (%edi);jne  <MmCreateSection+>;cmpb $, -(%ebp)": 1,
                "calll  <RtlMapGenericMask>;subl $, %esp;cmpb $, -(%ebp);je  <MmCreateSection+>;movzbl (%edi), %edx": 1,
                "movl %eax, (%edx);movl -(%ebp), %edx;movl %eax, (%edx);movl %edx, %ecx;calll - <ExReleaseResourceLite>": 1,
                "movl , %eax;movl (%edx), %edx;cmpl (%edx), %eax;je  <MmCreateSection+>;leal -(%ebp), %edx": 2,
                "movb $, -(%ebp);jmp  <MmCreateSection+>;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax": 2,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <KeUnstackDetachProcess>;subl $, %esp;jmp  <MmCreateSection+>": 7,
                "movl %eax, (%esp);calll - <KeUnstackDetachProcess>;subl $, %esp;jmp  <MmCreateSection+>;movl (%edi), %esi": 1,
                "calll - <KeUnstackDetachProcess>;subl $, %esp;jmp  <MmCreateSection+>;movl (%edi), %esi;orl $, %esi": 1,
                "movl %eax, (%edx);cmpl $, (%ebp);je  <MmCreateSection+>;cmpl $, (%ebp);je  <MmCreateSection+>": 2,
                "calll - <ExiTryToAcquireFastMutex+>;subl $, %esp;testl %eax, %eax;jne - <MmCreateSection+>;jmp - <MmCreateSection+>": 1,
                "subl $, %esp;testl %eax, %eax;jne - <MmCreateSection+>;jmp - <MmCreateSection+>;movl %esi, %eax": 1,
                "movl (%ebp), %eax;subl $, %eax;movl %eax, -(%ebp);movl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "subl $, %eax;movl %eax, -(%ebp);movl (%eax), %edx;movl %edx, -(%ebp);cmpl %esi, %edx": 1,
                "je  <MmCreateSection+>;movl -(%ebp), %ecx;calll - <ExfReleasePushLock>;movl $, (%edi);movl %fs:, %eax": 3,
                "movsbl %bl, %esi;movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %ecx": 1,
                "movl (%edi), %eax;leal (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %esi;movl %esi, %edx": 1,
                "jmp  <MmCreateSection+>;movl (%ebp), %eax;cmpb $, (%eax);je  <MmCreateSection+>;orl $, (%ebp)": 1,
                "cmpb $, (%eax);je  <MmCreateSection+>;orl $, (%ebp);movl (%ebp), %eax;andl $, %eax": 1,
                "movl %edx, -(%ebp);orl $, %edx;movl (%ebp), %ecx;movl (%ecx), %eax;orl (%ecx), %eax": 1,
                "je  <MmCreateSection+>;movl -(%ebp), %eax;movl (%ebp), %edx;lock;addl %edx, (%eax)": 1,
                "leal (%eax), %ecx;movl %ecx, -(%ebp);movl (%eax), %ebx;movb %bl, -(%ebp);testb $, %bl": 2,
                "je  <MmCreateSection+>;movl (%ebp), %ecx;movl (%ebp), %edx;movl %ecx, (%edx);movl $, %ebx": 1,
                "movl %eax, (%esp);calll - <MmCreateSection+>;subl $, %esp;cmpl $, (%ebp);je  <MmCreateSection+>": 1,
                "cmpl $, (%ebp);je  <MmCreateSection+>;cmpl $, (%ebp);jbe  <MmCreateSection+>;movl (%ebp), %eax": 1,
                "testb %bl, %bl;sete %dl;jne  <MmCreateSection+>;cmpl $-, (%ebp);je  <MmCreateSection+>": 1,
                "movl (%ebp), %eax;shrl $, %eax;testb %al, %al;je  <MmCreateSection+>;testb %dl, %dl": 1,
                "movl (%ebp), %eax;addl $, %eax;cmpl $, %eax;jbe  <MmCreateSection+>;movl , %eax": 1,
                "movl %edx, -(%ebp);movb $, -(%ebp);movl %fs:, %eax;movl (%eax), %esi;movl %fs:, %eax": 1,
                "calll - <KeIsAttachedProcess>;testb %al, %al;jne  <MmCreateSection+>;movl $, (%esp);calll  <KeRaiseUserException>": 1,
                "testb %al, %al;jne  <MmCreateSection+>;movl $, (%esp);calll  <KeRaiseUserException>;subl $, %esp": 1,
                "cmpl $, (%edi);je  <MmCreateSection+>;cmpb $, -;je  <MmCreateSection+>;movl $, (%esp)": 1,
                "movl $, %eax;jmp  <MmCreateSection+>;movl $, (%edi);movl $, %eax;testl %ebx, %ebx": 1,
                "cmpxchgl %edx, (%ebx);cmpl $, %eax;jbe  <MmCreateSection+>;leal (%ebx), %ecx;calll - <ExWaitForRundownProtectionRelease>": 1,
                "cmpl $, %eax;jbe  <MmCreateSection+>;leal (%ebx), %ecx;calll - <ExWaitForRundownProtectionRelease>;movl (%ebx), %eax": 1,
                "movb $, -(%ebp);movl %esi, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %esi, (%esp);calll  <ObIsKernelHandle+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax": 1,
                "movl %eax, (%ecx);movl (%ebp), %eax;movl %eax, (%esp);calll - <MmCreateSection+>;subl $, %esp": 1,
                "jne  <ObOpenObjectByName+>;movl -(%ebp), %ecx;movl %edi, %eax;lock;cmpxchgl %edx, (%ecx)": 2,
                "cmpl %eax, (%edi);je  <ObOpenObjectByName+>;cmpw $, (%edi);jne  <ObOpenObjectByName+>;calll - <KiCheckForKernelApcDelivery>": 2,
                "jne - <ObOpenObjectByName+>;testl %edx, %edx;jne  <ObOpenObjectByName+>;movl (%edi), %eax;testl %eax, %eax": 2,
                "testl %eax, %eax;je  <ObOpenObjectByName+>;movl $, (%esp);movl %eax, (%esp);calll - <ExFreePoolWithTag>": 3,
                "je  <ObOpenObjectByName+>;movl $, (%esp);movl %eax, (%esp);calll - <ExFreePoolWithTag>;subl $, %esp": 3,
                "movl -(%ebp), %eax;subl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp);testb $, (%eax)": 1,
                "calll  <SeReleaseSecurityDescriptor>;subl $, %esp;movl -(%ebp), %edx;movl $, (%edx);movl %fs:, %eax": 2,
                "movl -(%ebp), %ecx;movl (%ecx), %edx;testl %eax, (%edx);je  <ObOpenObjectByName+>;cmpb $, (%ebx)": 1,
                "cmpl %eax, (%esi);je  <ObOpenObjectByName+>;cmpw $, (%esi);jne  <ObOpenObjectByName+>;calll - <KiCheckForKernelApcDelivery>": 1,
                "je  <ObOpenObjectByName+>;movl $, (%esp);movsbl (%ebx), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll  <ObIsKernelHandle+>;subl $, %esp;movl $, (%esp);movl %ebx, (%esp)": 1,
                "jmp  <ObOpenObjectByName+>;movl $, %esi;movl %esi, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "subl $, %esp;movl (%ebp), %eax;movl $, (%eax);movsbl %bl, %edi;movl %edi, (%esp)": 1,
                "movl %eax, %ebx;testl %eax, %eax;js  <ObOpenObjectByPointer+>;leal -(%esi), %eax;movl %eax, -(%ebp)": 1,
                "jne  <ObOpenObjectByPointer+>;movl -(%esi), %edx;movl %edx, %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <SeCreateAccessState>;subl $, %esp;movl %eax, %ebx": 2,
                "movl %esi, (%esp);movl $, (%esp);calll - <MmCreateSection+>;subl $, %esp;movl %eax, %ebx": 1,
                "calll  <DbgPrint>;testl %eax, %eax;je  <ObInsertObject+>;movl $, (%esp);movl $, (%esp)": 2,
                "jmp  <ObInsertObject+>;movl (%edi), %esi;movzbl (%edi), %eax;testb %al, %al;je  <ObInsertObject+>": 1,
                "jne  <ObInsertObject+>;cmpl $, (%ebp);jne  <ObInsertObject+>;movl -(%ebp), %eax;cmpb $, (%eax)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movsbl -(%ebp), %eax;movl %eax, (%esp);movl (%esi), %eax": 1,
                "movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);movl (%ebp), %eax;addl $, %eax": 2,
                "movl %ecx, (%esp);calll - <MmCreateSection+>;subl $, %esp;movl %eax, -(%ebp);movl (%esi), %eax": 1,
                "jmp  <ObInsertObject+>;movl (%esi), %eax;movl (%ebp), %edx;movl %eax, (%edx);movl %edx, (%esp)": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;jns  <ObInsertObject+>;testl %ebx, %ebx": 1,
                "movl (%esi), %eax;movl %eax, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl (%esi), %eax": 1,
                "testl %ecx, %ecx;je  <ObInsertObject+>;cmpl %ecx, (%ebp);je  <ObInsertObject+>;testb $-, (%esi)": 1,
                "cmpxchgl %edx, (%ecx);cmpl %eax, %esi;je  <ObInsertObject+>;movl -(%ebp), %ecx;calll - <ExfReleasePushLock>": 2,
                "movzbl %al, %eax;subl %eax, %esi;je  <ObInsertObject+>;movl (%esi), %eax;leal -(%eax), %edx": 2,
                "cmpxchgl %edx, (%esi);jne - <ObInsertObject+>;testl %edx, %edx;jne  <ObInsertObject+>;movl (%esi), %eax": 2,
                "movl $, (%edi);cmpl $, (%ebp);je  <ObInsertObject+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edx, (%esp);movsbl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %ecx, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "addl $, %ebx;movl -(%ebp), %eax;addl %ebx, %eax;movl %eax, (%esp);calll - <ExAcquireResourceExclusiveLite>": 1,
                "calll - <MmCreateSection+>;subl $, %esp;movl %eax, -(%ebp);movl (%edi), %ecx;addl %ebx, %ecx": 1,
                "testw %ax, %ax;jne  <ObInsertObject+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <ObInsertObject+>": 1,
                "movl %edx, -(%ebp);leal (%ebx), %edx;cmpl $, (%ebx);sbbl %eax, %eax;notl %eax": 1,
                "cmpb $, (%edx);jne - <ObInsertObject+>;movl $, -(%ebp);jmp - <ObInsertObject+>;movl -(%ebp), %ecx": 1,
                "calll *-;cmpb $, %al;jbe  <ObSetHandleAttributes+>;calll *-;movzbl %al, %eax": 1,
                "cmpb $, %al;jbe  <ObSetHandleAttributes+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "leal (%ebx), %eax;cmpl $, %eax;jbe  <ObSetHandleAttributes+>;movl -, %edi;andl $, %ebx": 1,
                "je  <ObSetHandleAttributes+>;leal -(%ebp), %ebx;movl %ebx, (%esp);movl %eax, (%esp);calll - <KeStackAttachProcess>": 1,
                "subl $, %esp;jmp  <ObSetHandleAttributes+>;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %edi;jmp  <ObSetHandleAttributes+>": 1,
                "sbbl %eax, %eax;andl $, %eax;jmp  <ObSetHandleAttributes+>;movl %esi, %eax;movb %al, -(%ebp)": 1,
                "jmp  <ObSetHandleAttributes+>;movl %esi, %eax;movb %al, -(%ebp);movl (%ebp), %edx;movzwl (%edx), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl %ebx, (%esp);movl %edi, (%esp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);movl %edi, (%esp);calll - <ExiTryToAcquireFastMutex+>;subl $, %esp": 1,
                "movl %ebx, (%esp);movl %edi, (%esp);calll - <ExiTryToAcquireFastMutex+>;subl $, %esp;movl %eax, %esi": 1,
                "calll - <ExiTryToAcquireFastMutex+>;subl $, %esp;movl %eax, %esi;jmp - <ObSetHandleAttributes+>;leal -(%ebp), %esp": 1,
                "calll *-;cmpb $, %al;jbe  <NtClose+>;calll *-;movzbl %al, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, (%ebp);je  <NtClose+>;movl (%ebp), %eax": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jns  <NtClose+>;movl (%ebp), %eax": 1,
                "testb $, (%ebp);je  <NtClose+>;leal -(%ebp), %esi;movl %esi, (%esp);movl (%ebp), %edx": 1,
                "movl %esi, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <KeStackAttachProcess>;subl $, %esp": 1,
                "movl %eax, (%esp);calll - <NtClose>;subl $, %esp;movl %esi, (%esp);calll - <KeUnstackDetachProcess>": 1,
                "calll - <KeStackAttachProcess>;subl $, %esp;movb $, -(%ebp);testb $, (%ebp);je  <NtClose+>": 1,
                "orl (%ebp), %edi;movl %edi, -(%ebp);testb $, (%ebp);je  <NtClose+>;movl %ebx, (%ebp)": 1,
                "testb $, (%ebp);je  <NtClose+>;movl %ebx, (%ebp);movl -(%ebp), %eax;movl -(%eax), %edi": 1,
                "andl $, %edx;orl %edx, %eax;movl %eax, -(%ebp);testl $, (%ebp);je  <NtClose+>": 1,
                "andl (%ebp), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);notl %ebx;testl %ebx, %eax": 1,
                "movl %eax, (%esp);calll  <SeCreateAccessState>;subl $, %esp;movl %eax, %ebx;leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <ExiTryToAcquireFastMutex+>;subl $, %esp;movl %eax, %esi": 1,
                "cmpl $, (%ebp);je  <NtClose+>;movl (%ebp), %edx;movl %esi, (%edx);movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);cmpb $, -(%ebp);jne  <NtDuplicateObject+>": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%edx);movl $, (%edx);jmp  <NtDuplicateObject+>": 1,
                "movl %eax, (%edx);jmp  <NtDuplicateObject+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 1,
                "movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <NtDuplicateObject+>;movl -(%ebp), %eax": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <NtDuplicateObject+>;jmp - <NtDuplicateObject+>": 1,
                "je  <ObIsKernelHandle+>;pushl %ebp;movl %esp, %ebp;pushl %edi;pushl %esi": 1,
                "pushl %edi;pushl %esi;pushl %ebx;subl $, %esp;movl $, %eax": 2,
                "pushl %ebx;subl $, %esp;movl $, %eax;movl $, %edi;movl -(,%eax,), %ebx": 1,
                "cmpl %edx, %eax;jl - <ObIsKernelHandle+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "pushl %edi;pushl %esi;pushl %ebx;subl $, %esp;movl %fs:, %ebx": 2,
                "movl $, (%esp);calll - <ExiTryToAcquireFastMutex+>;subl $, %esp;movl %eax, (%ebx);movl %fs:, %eax": 1,
                "movl %ebx, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;movl $, -(%ebp);movl , %eax": 2,
                "movl %eax, (%esp);calll  <ObReferenceObjectByHandle>;subl $, %esp;movl $, %edx;testl %eax, %eax": 2,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <NtClose>;subl $, %esp;testl %eax, %eax": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);movl -, %ebx;movl $, -(%ebp)": 1,
                "movzwl (%esi), %eax;cmpw $, %ax;je  <ObIsKernelHandle+>;testw %ax, %ax;jle  <ObIsKernelHandle+>": 2,
                "movl (%eax), %ebx;cmpl %ebx, %edi;je  <ObIsKernelHandle+>;movzbl (%ebx), %eax;testb %al, %al": 1,
                "cmpl %ebx, %edi;je  <ObIsKernelHandle+>;movzbl (%ebx), %eax;testb %al, %al;je  <ObIsKernelHandle+>": 1,
                "movl %esi, %edx;subl %eax, %edx;movl %edx, %eax;je  <ObIsKernelHandle+>;cmpl $, (%edx)": 1,
                "movl $, (%esp);addl $, %eax;movl %eax, (%esp);movl , %eax;movl %eax, (%esp)": 1,
                "jne  <ObIsKernelHandle+>;movl %ebx, %eax;lock;cmpxchgl %edx, (%edi);cmpl %eax, %ebx": 1,
                "movw %ax, (%ebx);testw %ax, %ax;jne  <ObIsKernelHandle+>;leal (%ebx), %eax;cmpl %eax, (%ebx)": 3,
                "leal -(%eax), %edx;lock;cmpxchgl %edx, (%ebx);jne - <ObIsKernelHandle+>;testl %edx, %edx": 1,
                "calll  <ObfDereferenceObject>;movl $, -(%ebp);calll  <NtMakePermanentObject+>;movl %eax, %edx;notl %edx": 1,
                "je  <ObIsKernelHandle+>;pushl %ebp;movl %esp, %ebp;calll - <ExSystemExceptionFilter>;popl %ebp": 4,
                "cmpb $, %al;jbe  <ObIsKernelHandle+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 5,
                "je  <ObIsKernelHandle+>;movl %ecx, %edi;movl -(%ebp), %eax;lock;subl $, (%eax)": 1,
                "testl %edx, %edx;je  <ObIsKernelHandle+>;movl (%edx), %eax;testl %eax, %eax;je  <ObIsKernelHandle+>": 1,
                "movl -(%ebp), %eax;movl $, (%eax);testl %esi, %esi;je  <ObIsKernelHandle+>;movl (%esi), %eax": 1,
                "testl %esi, %esi;je  <ObIsKernelHandle+>;movl (%esi), %eax;testl %eax, %eax;je  <ObIsKernelHandle+>": 2,
                "movl (%esi), %eax;testl %eax, %eax;je  <ObIsKernelHandle+>;movl %eax, (%esp);calll - <ExFreePool>": 2,
                "testb $, (%ebx);je  <ObIsKernelHandle+>;cmpl $, %ebx;je  <ObIsKernelHandle+>;leal -(%ebx), %eax": 1,
                "subl $, %esp;subw $, (%edi);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subw $, (%edi);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ExAcquireResourceExclusiveLite>": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpw $, (%edi);js  <ObIsKernelHandle+>;movl $, (%esp)": 1,
                "cmpl $, (%edx);je  <ObIsKernelHandle+>;cmpb $, -(%ebp);jne  <ObIsKernelHandle+>;orb $-, (%ebx)": 1,
                "calll *%ebx;movl %eax, %esi;movl (%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx": 1,
                "movl %eax, (%esp);movl -(%ebp), %edx;calll *(%edx);subl $, %esp;calll *%ebx": 1,
                "movl %esi, %edx;cmpb %al, %dl;je  <ObIsKernelHandle+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl $, %esi;movl $, %edi": 1,
                "orl $, (%esp);movl %esi, %eax;xchgl %eax, -;movl (%eax), %ebx;movl $, (%esp)": 1,
                "lock;cmpxchgl %edi, -;cmpl $, %eax;jne - <ObIsKernelHandle+>;leal -(%ebp), %esp": 1,
                "subl $, %esp;subw $, (%esi);movl $, (%esp);imull $, -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "movl %eax, (%esp);calll - <ExAcquireResourceExclusiveLite>;subl $, %esp;cmpb $, -(%ebp);je  <ObIsKernelHandle+>": 1,
                "movzbl (%ebp), %eax;movl (%ebp), %ebx;addl $, %ebx;cmpl $, %ebx;ja  <ObIsKernelHandle+>": 1,
                "jne  <ObIsKernelHandle+>;addl $, (%esi);movl -(%ebp), %edx;movl (%edx), %esi;addl $, (%esi)": 1,
                "jne  <ObIsKernelHandle+>;addl $, (%esi);movl (%esi), %eax;movl %eax, (%esp);movl (%esi), %eax": 1,
                "movl %eax, (%esp);calll *(%esi);subl $, %esp;movw %bx, (%edi);movzwl (%ebp), %edx": 1,
                "jmp  <ObIsKernelHandle+>;leal (%esi), %esi;calll - <InterlockedPushEntrySList>;movl -(%ebp), %ebx;leave": 1,
                "movw $, (%eax);movl $, (%eax);movl $, -(%ebp);movl $, -(%ebp);movzbl %bl, %ebx": 1,
                "movl $, (%eax);movl $, -(%ebp);movl $, -(%ebp);movzbl %bl, %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);cmpl $, -(%ebp);je  <ObIsKernelHandle+>;movl (%ebp), %eax": 1,
                "movl $, -(%ebp);jmp  <ObIsKernelHandle+>;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, %fs:": 2,
                "testb $, %dl;je  <ObIsKernelHandle+>;movb $, (%edi);movl $, -(%ebp);movl (%ebp), %eax": 1,
                "movl (%eax), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl (%edx), %eax;cmpb $, -(%ebp)": 1,
                "movl %ebx, (%esp);calll - <ProbeForRead>;subl $, %esp;movl (%ebx), %eax;movl (%ebp), %ecx": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;testl %eax, %eax;je  <ObIsKernelHandle+>;movl $, (%esp)": 2,
                "calll  <SeReleaseSecurityDescriptor>;subl $, %esp;movl (%ebp), %eax;movl $, (%eax);movl -(%ebp), %eax": 2,
                "testl %esi, %esi;jne  <ObIsKernelHandle+>;jmp  <ObIsKernelHandle+>;movl $, -(%ebp);jmp  <ObIsKernelHandle+>": 1,
                "subl $, %esp;movl (%ebp), %edi;movl (%ebp), %esi;movzbl (%ebp), %ebx;movb %bl, -(%ebp)": 1,
                "movzbl (%ebp), %ebx;movb %bl, -(%ebp);calll *-;cmpb $, %al;jbe  <ObIsKernelHandle+>": 1,
                "movl $, -(%ebp);movl (%ebp), %ebx;cmpl $, (%ebx);je  <ObIsKernelHandle+>;addl $, -": 1,
                "addl $, -;movl $, -(%ebp);jmp  <ObIsKernelHandle+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, (%ebx);addl $, %ebx;cmpl $, -(%ebp);je  <ObIsKernelHandle+>;movl $, (%ebx)": 1,
                "sbbl %eax, %eax;andl $-, %eax;addl $, %eax;movb %al, (%ebx);cmpl $, -(%ebp)": 1,
                "orb $, (%ebx);testl %esi, %esi;je  <ObIsKernelHandle+>;lock;addl $, (%esi)": 1,
                "movl %ebx, (%eax);movl $, %eax;jmp  <ObIsKernelHandle+>;movl $, %eax;jmp  <ObIsKernelHandle+>": 1,
                "movl (%ebp), %ecx;movzwl (%ecx), %edx;addl $, %edx;andl $-, %edx;movl (%ebp), %ecx": 1,
                "movb %al, (%ecx);movl -(%ebp), %eax;movl %eax, (%ecx);movzwl (%edx), %eax;movw %ax, (%ecx)": 1,
                "movw %ax, (%ecx);movzwl (%edx), %eax;movw %ax, (%ecx);movzwl (%edx), %eax;movl %eax, (%esp)": 1,
                "jmp - <ObIsKernelHandle+>;movl -(%ebp), %eax;movl %eax, %fs:;movl -(%ebp), %eax;addl $, %esp": 1,
                "movl %esi, %ecx;calll - <InterlockedPopEntrySList>;movl %eax, %ebx;testl %eax, %eax;jne  <ObCreateObject+>": 2,
                "movsbl -(%ebp), %edi;movsbl -(%ebp), %ecx;movl %ecx, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl %eax, (%ebp);movl (%ebp), %edx;movl %edx, (%ebx)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <ObIsKernelHandle+>;subl $, %esp": 1,
                "movl %eax, %esi;testl %eax, %eax;js  <ObCreateObject+>;movl -(%ebp), %eax;leal (%eax), %edx": 1,
                "movl $, %esi;movl (%ebx), %eax;testl %eax, %eax;je  <ObCreateObject+>;movl $, (%esp)": 1,
                "calll - <InterlockedPushEntrySList>;jmp  <ObCreateObject+>;movl $, %esi;movl %esi, %eax;leal -(%ebp), %esp": 1,
                "movzwl %cx, %ecx;movl $, %eax;jmp  <ObCreateObjectType+>;movzwl (%esi,%eax,), %edx;addl $, %eax": 1,
                "movl $, %eax;jmp  <ObCreateObjectType+>;movzwl (%esi,%eax,), %edx;addl $, %eax;cmpw $, %dx": 1,
                "movl %fs:, %eax;movl (%eax), %edi;movl %fs:, %eax;cmpl (%eax), %edi;je  <ObCreateObjectType+>": 1,
                "movl %fs:, %eax;cmpl (%eax), %edi;je  <ObCreateObjectType+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movzwl (%edi), %eax;cmpw $, %ax;je  <ObCreateObjectType+>": 1,
                "calll - <ExfAcquirePushLockExclusive>;testb $, (%esi);jne  <ObCreateObjectType+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %esi, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);leal -(%ebp), %eax": 2,
                "lock;cmpxchgl %edx, (%edi);cmpl %eax, %ebx;je  <ObCreateObjectType+>;movl %edi, %ecx": 2,
                "jne  <ObCreateObjectType+>;movl (%ebx), %eax;testl %eax, %eax;je  <ObCreateObjectType+>;movl $, (%esp)": 5,
                "je  <ObCreateObjectType+>;movl -(%ebp), %eax;leal (%eax), %esi;movl (%eax), %ebx;movl %ebx, %edi": 3,
                "andl %eax, %edx;testb $, -(%ebp);jne  <ObCreateObjectType+>;movl %ebx, %eax;lock": 1,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, -(%ebp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%ecx);movl %edx, (%ecx);orb $, (%ecx);movl $, (%ecx);movl $, (%ecx)": 1,
                "subl $, %esp;testl %eax, %eax;js  <ObCreateObjectType+>;cmpw $, -(%ebp);ja  <ObCreateObjectType+>": 1,
                "movl (%eax), %edx;movl -(%ebp), %ecx;movl %edx, (%ecx);movl %eax, (%esp);calll - <ExFreePool>": 1,
                "je  <ObCreateObjectType+>;movb $, (%edx);cmpb $, (%ebx);sbbl %eax, %eax;andl $-, %eax": 1,
                "movl $, (%esp);movl (%eax), %eax;movl %eax, (%esp);calll  <wcscmp>;testl %eax, %eax": 1,
                "addl $, %esi;imull $, %ebx, %eax;leal (%esi,%eax), %eax;movl %eax, (%esp);calll - <ExInitializeResourceLite>": 1,
                "calll - <ExInitializeResourceLite>;subl $, %esp;addl $, %ebx;cmpl $, %ebx;jne - <ObCreateObjectType+>": 1,
                "calll  <RtlAssert>;subl $, %esp;movzwl (%ebx), %eax;cmpw $, %ax;je  <ObCreateObjectType+>": 1,
                "leal -(%eax), %esi;movl -, %edx;movl (%edx), %ecx;leal (%edx), %ebx;movl %ebx, -(%eax)": 1,
                "subl $, %esp;movl , %eax;testl %eax, %eax;je  <ObCreateObjectType+>;movl -(%ebp), %edx": 1,
                "testl %esi, %esi;je  <ObDeleteCapturedInsertInfo+>;movl (%esi), %eax;testl %eax, %eax;je  <ObDeleteCapturedInsertInfo+>": 1,
                "addl $, (%ecx);movl %esi, (%esp);calll *(%ecx);subl $, %esp;jmp  <ObDeleteCapturedInsertInfo+>": 1,
                "addl $, %ebx;cmpl $, %ebx;jne - <ObDeleteCapturedInsertInfo+>;movl %esi, (%esp);calll - <ExDeleteResourceLite>": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl %fs:, %eax;movl (%eax), %eax;movzbl (%eax), %ebx": 1,
                "jb  <NtMakePermanentObject+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%edx)": 4,
                "movl -(%ebp), %ecx;testb $, (%ecx);je  <NtMakePermanentObject+>;movl (%ebp), %eax;orl $, (%eax)": 1,
                "jmp  <NtMakePermanentObject+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 1,
                "movl %eax, %ebx;movl -(%ebp), %eax;movl %eax, %fs:;movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl $, %ebx;je  <NtMakePermanentObject+>;cmpl $, %ebx": 1,
                "jne  <NtMakePermanentObject+>;movl %fs:, %eax;movl (%eax), %eax;movzbl (%eax), %eax;movb %al, -(%ebp)": 1,
                "subl $, %esp;movl (%ebp), %edx;movzwl (%edx), %eax;movw %ax, -(%ebp);jmp  <NtMakePermanentObject+>": 1,
                "movl -(%ebp), %eax;movl %eax, %fs:;nop;leal (%esi), %esi;jmp  <NtMakePermanentObject+>": 2,
                "jmp  <NtMakePermanentObject+>;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %ebx": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %ebx;movl $, %esi": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %ebx;movl $, %esi;leal -(%ebp), %eax": 1,
                "movl (%eax), %eax;movl (%eax), %ebx;movl $, %esi;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <ExiTryToAcquireFastMutex+>": 1,
                "sbbl %ebx, %ebx;andl $, %ebx;movl %esi, %edx;testb %dl, %dl;je  <NtMakePermanentObject+>": 1,
                "subl $, %esp;testb %al, %al;jne  <NtMakePermanentObject+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <DbgPrint>;movl $, %ebx;testl %eax, %eax;je  <NtMakePermanentObject+>": 1,
                "testl %eax, %eax;js  <NtMakePermanentObject+>;movl -(%ebp), %esi;calll  <PsGetCurrentProcessSessionId>;movl %eax, (%esi)": 1,
                "movl $, %ebx;jmp  <NtMakePermanentObject+>;movl $, %ebx;movl %ebx, %eax;leal -(%ebp), %esp": 1,
                "nop;nop;nop;testl %ecx, %ecx;je  <NtMakePermanentObject+>": 1,
                "testb %al, %al;je  <NtMakePermanentObject+>;movzbl %al, %eax;subl %eax, %esi;je  <NtMakePermanentObject+>": 2,
                "movl (%esi), %eax;cmpw $, (%eax);jne  <NtMakePermanentObject+>;movzwl (%eax), %eax;andl $-, %eax": 1,
                "movl -(%ebp), %edx;movzwl (%edx), %eax;cmpw $, %ax;je  <NtMakePermanentObject+>;testw %ax, %ax": 1,
                "jle  <NtMakePermanentObject+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 8,
                "movb $, (%eax,%edx);movl (%edi), %ecx;subl $, %ecx;movl $, %edx;roll %cl, %edx": 1,
                "subl $, %ecx;movl $, %edx;roll %cl, %edx;andl %edx, (%eax);calll *-": 1,
                "andl %edx, (%eax);calll *-;cmpb $, %al;jbe  <NtMakePermanentObject+>;movl $, (%esp)": 1,
                "lock;cmpxchgl %ecx, -;cmpl %eax, %edx;jne  <NtMakePermanentObject+>;movl $, %ecx": 1,
                "je  <NtMakePermanentObject+>;cmpl $, (%ebp);je  <NtMakePermanentObject+>;movzwl (%ebx), %eax;testw %ax, %ax": 1,
                "addl $, %edx;movl %edx, (%ebx);subl $, %eax;movw %ax, (%ebx);movl (%ebx), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll - <MmCreateSection+>": 1,
                "movl %eax, (%esi);movzwl (%ebx), %eax;testw %ax, %ax;jne - <NtMakePermanentObject+>;jmp  <NtMakePermanentObject+>": 1,
                "movzwl (%ebx), %eax;testw %ax, %ax;jne - <NtMakePermanentObject+>;jmp  <NtMakePermanentObject+>;cmpl -, %edx": 1,
                "jne  <NtMakePermanentObject+>;cmpl $, (%eax);jne  <NtMakePermanentObject+>;movl , %eax;movl %eax, (%esi)": 1,
                "movl %eax, (%esp);calll - <MmCreateSection+>;subl $, %esp;movl %eax, (%edi);jmp - <NtMakePermanentObject+>": 1,
                "subl $, %esp;movzwl %ax, %eax;subl $, %eax;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll - <NtMakePermanentObject+>;subl $, %esp": 1,
                "calll - <NtMakePermanentObject+>;subl $, %esp;cmpl $, %eax;jne  <NtMakePermanentObject+>;addl $, -(%ebp)": 1,
                "subl $, %esp;cmpl $, %eax;jne  <NtMakePermanentObject+>;addl $, -(%ebp);cmpl $, -(%ebp)": 1,
                "subl %edx, %edi;je  <NtMakePermanentObject+>;movl (%edi), %eax;leal -(%eax), %edx;lock": 1,
                "movl (%edi), %eax;leal -(%eax), %edx;lock;cmpxchgl %edx, (%edi);jne - <NtMakePermanentObject+>": 3,
                "jne - <NtMakePermanentObject+>;testl %edx, %edx;jne  <NtMakePermanentObject+>;movl (%edi), %eax;testl %eax, %eax": 2,
                "movl -(%ebp), %edx;testl %edx, %edx;je  <NtMakePermanentObject+>;movl (%edx), %eax;cmpl $, %eax": 1,
                "movl -(%ebp), %ecx;movzwl (%ecx), %eax;cmpw $, %ax;je  <NtMakePermanentObject+>;testw %ax, %ax": 2,
                "movzwl (%ecx), %eax;cmpw $, %ax;je  <NtMakePermanentObject+>;testw %ax, %ax;jle  <NtMakePermanentObject+>": 2,
                "subl $, %esp;jmp  <NtMakePermanentObject+>;cmpl $, (%esi);jne - <NtMakePermanentObject+>;jmp - <NtMakePermanentObject+>": 1,
                "movzbl (%ebp), %edi;calll *-;cmpb $, %al;jbe  <NtMakePermanentObject+>;calll *-": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, (%esi);cmpw $, (%ebx);jne  <NtMakePermanentObject+>": 1,
                "testl %eax, %eax;jne  <NtMakePermanentObject+>;jmp  <NtMakePermanentObject+>;movl (%ebp), %ecx;movl (%ecx), %esi": 1,
                "movw $, (%esi,%eax,);movl (%ebp), %ecx;movl (%ecx), %eax;cmpl %esi, %eax;je  <NtMakePermanentObject+>": 1,
                "ja  <NtMakePermanentObject+>;cmpl -, %eax;jb  <NtMakePermanentObject+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %edx": 2,
                "nop;leal (%esi), %esi;jmp  <NtMakePermanentObject+>;movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "jne  <NtMakePermanentObject+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);calll  <DbgPrint>": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;js  <NtMakePermanentObject+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;movl $, (%eax);movl $, (%eax);movl $, (%esp);addl $, %eax": 1,
                "jmp  <NtMakePermanentObject+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;leal (%esi), %esi": 1,
                "leal (%esi), %esi;leal (%edi), %edi;jmp - <NtMakePermanentObject+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);jmp  <NtMakePermanentObject+>;leal (%esi), %esi;jmp - <NtMakePermanentObject+>": 1,
                "movl %eax, %fs:;movl -(%ebp), %eax;subl $, %eax;movl %eax, %edx;shrl $, %edx": 1,
                "movzwl (%ebx), %eax;addl $, %eax;movw %ax, (%ebx);testw %ax, %ax;jne  <NtMakePermanentObject+>": 6,
                "jne  <NtMakePermanentObject+>;calll - <KiCheckForKernelApcDelivery>;calll *-;cmpb $, %al;jbe  <NtMakePermanentObject+>": 2,
                "movl %eax, %ebx;testl %eax, %eax;js  <NtMakePermanentObject+>;movl $, (%esp);leal -(%ebp), %ebx": 1,
                "je  <NtMakePermanentObject+>;movb $, (%eax);leal (%eax), %edi;movb $, %dl;testl $, %edi": 1,
                "shrl $, %ecx;movl $, %eax;rep  stosl %eax, %es:(%edi);testb $, %dl;je  <NtMakePermanentObject+>": 1,
                "addl $, %edi;testb $, %dl;je  <NtMakePermanentObject+>;movb $, (%edi);jmp  <NtMakePermanentObject+>": 1,
                "movl $, %ebx;jmp  <NtMakePermanentObject+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <NtClose>": 1,
                "movzwl (%ebx), %eax;cmpw $, %ax;je  <NtMakePermanentObject+>;testw %ax, %ax;jle  <NtMakePermanentObject+>": 3,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl -, %edi;jne  <NtMakePermanentObject+>": 1,
                "movl (%esi), %eax;subl $, %eax;movl %eax, (%esi);testl %eax, %eax;je  <NtMakePermanentObject+>": 1,
                "jmp  <NtMakePermanentObject+>;calll *-;cmpb $, %al;jbe  <NtMakePermanentObject+>;movl $, (%esp)": 1,
                "je  <NtMakePermanentObject+>;calll - <KiCheckForKernelApcDelivery>;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "subl $, %edi;movzbl (%edi), %eax;testb %al, %al;je  <NtMakePermanentObject+>;movzbl %al, %eax": 1,
                "testb %al, %al;je  <NtMakePermanentObject+>;movzbl %al, %eax;movl %edi, %ebx;subl %eax, %ebx": 2,
                "testl %eax, %eax;je  <NtMakePermanentObject+>;movl (%edi), %edx;movl %edx, -(%ebp);calll *-": 1,
                "je  <NtMakePermanentObject+>;movl (%edi), %edx;movl %edx, -(%ebp);calll *-;cmpb $, %al": 1,
                "calll - <MmCreateSection+>;subl $, %esp;movl -(%ebp), %eax;cmpl -, %eax;jne  <NtMakePermanentObject+>": 1,
                "cmpl -, %eax;jne  <NtMakePermanentObject+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <NtMakePermanentObject+>": 1,
                "jne  <NtMakePermanentObject+>;calll - <KiCheckForKernelApcDelivery>;movl $, -(%ebp);movb $, -(%ebp);movl -(%ebp), %edi": 1,
                "je  <NtMakePermanentObject+>;movzbl -(%edi), %eax;subl $, %edi;testb %al, %al;je  <NtMakePermanentObject+>": 1,
                "movl (%ebp), %edi;movl (%edi), %eax;testl %eax, %eax;je  <NtMakePermanentObject+>;cmpw $, (%eax)": 1,
                "cmpw $, (%eax);jne  <NtMakePermanentObject+>;movl -, %edx;movl -(%ebp), %edi;cmpl %edx, (%edi)": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);calll *%edi": 1,
                "movl %ebx, (%esp);movl $, (%esp);movl -(%ebp), %ebx;addl $, %ebx;movl %ebx, (%esp)": 1,
                "calll  <DbgBreakPoint>;movl -(%ebp), %eax;cmpl $, %eax;je  <NtMakePermanentObject+>;cmpl $, %eax": 1,
                "calll  <ObfDereferenceObject>;movl -(%ebp), %eax;movl (%ebp), %edi;movl %eax, (%edi);testl %eax, %eax": 1,
                "subl $, %esp;testl %eax, %eax;js  <NtMakePermanentObject+>;movl (%ebp), %edi;movl %ebx, (%edi)": 1,
                "movsbl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %ebx;movl %ebx, (%esp);movl $, (%esp)": 2,
                "movl -(%ebp), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);movzwl -(%ebp), %eax;testw %ax, %ax": 1,
                "jne  <NtMakePermanentObject+>;jmp  <NtMakePermanentObject+>;movl -(%ebp), %edx;cmpw $, (%edx);je  <NtMakePermanentObject+>": 1,
                "movw %ax, -(%ebp);testw %ax, %ax;jne - <NtMakePermanentObject+>;movzwl -(%ebp), %edx;subl %eax, %edx": 1,
                "calll  <ObCheckObjectAccess+>;subl $, %esp;testb %al, %al;je  <NtMakePermanentObject+>;movl %esi, -(%ebp)": 1,
                "je  <NtMakePermanentObject+>;movl %esi, -(%ebp);jmp  <NtMakePermanentObject+>;movl %esi, -(%ebp);cmpw $, -(%ebp)": 1,
                "jmp  <NtMakePermanentObject+>;movl (%ebp), %ebx;cmpl -, %ebx;sete %al;movzbl %al, %eax": 1,
                "testl %eax, %eax;je  <NtMakePermanentObject+>;movl (%ebp), %ebx;subl $, %ebx;movl %ebx, -(%ebp)": 1,
                "movl %ebx, (%esp);movl %esi, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);calll - <MmCreateSection+>": 1,
                "calll  <memmove>;movl (%ebx), %eax;testl %eax, %eax;je  <NtMakePermanentObject+>;movl $, (%esp)": 1,
                "jne  <NtMakePermanentObject+>;movl -(%ebp), %ebx;lock;addl $, (%ebx);cmpb $, (%edi)": 1,
                "movl $, -(%ebp);cmpl $, -(%ebp);je  <NtMakePermanentObject+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>": 1,
                "movl %ebx, (%esp);movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp);calll  <DbgPrint>": 1,
                "movl -(%ebp), %ecx;addl $, %ecx;calll  <ObfDereferenceObject>;movl -(%ebp), %eax;cmpl $, %eax": 1,
                "je  <NtMakePermanentObject+>;movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl $, (%ebp);movl , %eax": 1,
                "jne  <NtMakePermanentObject+>;movl $, -(%ebp);movl $, %edx;jmp  <NtMakePermanentObject+>;movsbl -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;cmpl -, %eax;jne  <NtMakePermanentObject+>;testl %ecx, %ecx;je  <NtMakePermanentObject+>": 1,
                "cmpl -, %eax;jne  <NtMakePermanentObject+>;testl %ecx, %ecx;je  <NtMakePermanentObject+>;calll  <ObfDereferenceObject>": 1,
                "jne  <NtMakePermanentObject+>;testl %ecx, %ecx;je  <NtMakePermanentObject+>;calll  <ObfDereferenceObject>;movl %esi, -(%ebp)": 1,
                "calll  <ObfDereferenceObject>;movl %esi, -(%ebp);movl -(%ebp), %ecx;movl %ecx, -(%ebp);movl $, -(%ebp)": 1,
                "jns  <NtMakePermanentObject+>;cmpb $, (%esi);je  <NtMakePermanentObject+>;movl (%esi), %eax;leal (%eax), %edi": 1,
                "movl %ebx, %eax;lock;cmpxchgl %edx, (%edi);cmpl %eax, %ebx;je  <NtMakePermanentObject+>": 1,
                "subl $, %esp;movl (%esi), %ecx;calll  <ObfDereferenceObject>;movl $, (%esi);cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;calll  <ObfDereferenceObject>;movl -(%ebp), %eax;jmp  <NtMakePermanentObject+>;movl $, %eax": 1,
                "jmp  <NtMakePermanentObject+>;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ExFreePoolWithTag>": 1,
                "calll - <ExFreePoolWithTag>;subl $, %esp;jmp - <NtMakePermanentObject+>;movl %edx, %esi;cmpw $, -(%ebp)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;subl $, %eax;movl %eax, -(%ebp)": 1,
                "cmpl $, (%eax);je  <ObQueryNameString+>;testl %edx, %edx;je  <ObQueryNameString+>;cmpw $, (%edx)": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);jmp  <ObQueryNameString+>;jmp - <ObQueryNameString+>;movl $, -(%ebp)": 1,
                "subl $, %eax;movzbl %dl, %esi;movl %eax, %edx;subl %esi, %edx;je  <ObQueryNameString+>": 1,
                "movl %eax, %edx;subl %esi, %edx;je  <ObQueryNameString+>;movl (%edx), %eax;testl %eax, %eax": 1,
                "cmpl %eax, %ecx;jne - <ObQueryNameString+>;jmp  <ObQueryNameString+>;addl $, %ebx;jmp  <ObQueryNameString+>": 1,
                "movl $, -(%ebp);jmp  <ObQueryNameString+>;movl -(%ebp), %ecx;movzwl (%ecx), %edx;subl $, %eax": 1,
                "movl %edx, (%esp);movl %eax, (%esp);calll  <memmove>;movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "movl (%edi), %eax;testl %eax, %eax;je  <ObQueryNameString+>;movzwl (%edi), %ecx;subl %ecx, %edx": 1,
                "calll *-;cmpb $, %al;jbe  <ObQueryNameString+>;movl $, (%esp);movl $, (%esp)": 8,
                "movl %fs:, %eax;movl (%eax), %ebx;calll *-;cmpb $, %al;jbe  <ObQueryNameString+>": 4,
                "cmpw $, %ax;je  <ObQueryNameString+>;testw %ax, %ax;jle  <ObQueryNameString+>;movl $, (%esp)": 2,
                "movzwl (%esi), %eax;movw %ax, ;movl , %eax;movl (%eax), %eax;movl %eax, (%edi)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl %ebx, %ebx;je  <ObQueryNameString+>": 2,
                "calll  <RtlAssert>;subl $, %esp;testl %ebx, %ebx;je  <ObQueryNameString+>;testb $, %bl": 2,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %edi;leal -(%edi), %eax": 1,
                "movl -, %edx;testl %eax, (%edx);movl (%ebp), %eax;setne (%eax);calll *-": 1,
                "movl $, %eax;testw %dx, %dx;jne  <ObQueryNameString+>;leal (%ebx), %edx;cmpl %edx, (%ebx)": 1,
                "leal (%ebx), %edx;cmpl %edx, (%ebx);je  <ObQueryNameString+>;calll - <KiCheckForKernelApcDelivery>;movl $, %eax": 1,
                "movl $, %eax;testl %edx, %edx;je  <ObQueryNameString+>;leal (%edx), %ecx;movl %edx, %eax": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ecx;movl -, %edx": 1,
                "movl (%ebp), %ecx;movl -, %edx;movl %edx, (%ecx);movl %edx, %eax;lock": 1,
                "movl %edx, %eax;lock;xaddl %eax, -(%ecx);addl %edx, %eax;popl %ebp": 1,
                "subl $, %ecx;movl %edx, %eax;negl %eax;lock;xaddl %eax, (%ecx)": 1,
                "movl %ebx, %ecx;calll - <ObQueryNameString+>;testb $, %bl;je  <ObQueryNameString+>;movl $, (%esp)": 2,
                "jg  <ObQueryNameString+>;movl %edx, %eax;movl %edx, %ecx;andl $-, %ecx;cmpl %ecx, %esi": 1,
                "movl %esi, %ecx;calll - <ObQueryNameString+>;movl %edi, %eax;addl $, %esp;popl %ebx": 1,
                "subl $, %esp;jmp  <ObQueryNameString+>;lock;orl $, (%esp);xchgl %eax, (%esi)": 1,
                "testb %dl, %dl;je  <ObQueryNameString+>;movzbl %dl, %edx;movl %ebx, %ecx;calll - <ObQueryNameString+>": 1,
                "pushl %ebx;subl $, %esp;movl %ecx, %ebx;testl %ecx, %ecx;jne  <ObfReferenceObject+>": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl %ecx, %ebx;leal -(%ecx), %esi": 1,
                "cmpl %eax, -(%ecx);jge  <ObfDereferenceObject+>;movl (%esi), %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;calll - <KeAreAllApcsDisabled>;testb %al, %al;jne  <ObfDereferenceObject+>": 1,
                "xorl %edx, %eax;cmpl $, %eax;ja  <ObfDereferenceObject+>;leal (%edx), %ecx;movl %edx, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;leal -(%eax), %edx": 1,
                "movl -(%eax), %eax;leal -(%eax), %ecx;lock;cmpxchgl %ecx, (%edx);jne - <ObDereferenceObjectDeferDelete+>": 1,
                "movl (%ebp), %edx;movl $, (%edx);leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl $, (%esp);calll - <NtMakePermanentObject+>;subl $, %esp;movl %eax, -(%ebp)": 1,
                "andl %eax, %edx;testb $, -(%ebp);jne  <ObReferenceObjectByName+>;movl -(%ebp), %ecx;movl %edi, %eax": 1,
                "movzbl -(%edi), %eax;subl $, %edi;testb %al, %al;je  <ObReferenceObjectByName+>;movzbl %al, %eax": 1,
                "movzbl %al, %eax;subl %eax, %edi;je  <ObReferenceObjectByName+>;movl (%edi), %eax;leal -(%eax), %edx": 1,
                "testl %edx, %edx;jne  <ObReferenceObjectByName+>;movl (%edi), %eax;testl %eax, %eax;je  <ObReferenceObjectByName+>": 1,
                "calll - <ObfDereferenceObject>;movl $, -(%ebp);cmpl $, -(%ebp);js  <ObReferenceObjectByName+>;leal -(%ebp), %eax": 1,
                "calll *-;cmpb $, %al;jbe  <ObReferenceObjectByHandle+>;calll *-;movzbl %al, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;jmp  <ObReferenceObjectByHandle+>;cmpl $-, %esi;jne  <ObReferenceObjectByHandle+>": 1,
                "jmp  <ObReferenceObjectByHandle+>;cmpb $, -(%ebp);jne  <ObReferenceObjectByHandle+>;andl $, %esi;movl -, %edi": 1,
                "calll  <RtlAssert>;subl $, %esp;movzwl (%ebx), %eax;cmpw $, %ax;je  <ObReferenceObjectByHandle+>": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpw $, (%ebx);js  <ObReferenceObjectByHandle+>;movl $, (%esp)": 2,
                "cmpl $, (%esi);jne  <ObReferenceObjectByHandle+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;cmpw $, (%esi);js  <ObReferenceObjectByHandle+>;movl $, (%esp);movl $, (%esp)": 1,
                "addl $, %eax;cmpl $, %eax;jne - <ObReferenceObjectByHandle+>;movw $, %ax;popl %ebx": 1,
                "andl $-, %edi;cmpl %edi, %edx;jae  <ObReferenceObjectByHandle+>;movl %edi, %ebx;movl %edx, %ecx": 1,
                "jbe  <ObReferenceObjectByHandle+>;movl %esi, %ebx;movzbl (%edx), %ecx;xorl %ecx, %eax;addl $, %edx": 1,
                "addl $, %edx;roll $, %eax;cmpl %ebx, %edx;jne - <ObReferenceObjectByHandle+>;popl %ebx": 1,
                "leal (%esi), %eax;movl %eax, (%esp);movl $, (%esp);calll - <ExAllocatePoolWithTag>;subl $, %esp": 1,
                "movl (%ebp), %ebx;movl (%ebx), %edx;testb $, %dl;je  <ObReferenceObjectByHandle+>;leal -(%edx), %ecx": 1,
                "je  <ObReferenceObjectByHandle+>;cmpl $, %edx;jne  <ObReferenceObjectByHandle+>;leal -(%ecx), %eax;movl %eax, -(%ebp)": 1,
                "jmp  <ObReferenceObjectByHandle+>;movl (%ebx), %edi;calll *-;cmpb $, %al;nop": 1,
                "lock;addl $, -(%edi);movl (%ebx), %ecx;addl %esi, %ecx;calll - <ExReleaseResourceLite>": 1,
                "jne  <ObReferenceObjectByHandle+>;calll - <KiCheckForKernelApcDelivery>;calll *-;cmpb $, %al;nop": 1,
                "movzwl (%edx), %eax;cmpw $, %ax;je  <ObDereferenceSecurityDescriptor+>;testw %ax, %ax;jle  <ObDereferenceSecurityDescriptor+>": 1,
                "subl $, %esp;movl %esi, %eax;negl %eax;lock;xaddl %eax, (%ebx)": 1,
                "subl $, %esp;andl $, %ebx;cmpb $, %bl;jne  <ObDereferenceSecurityDescriptor+>;movl -(%ebp), %ecx": 2,
                "movl %eax, -(%ebp);addl $, %eax;movl %eax, -(%ebp);movl %fs:, %eax;movl (%eax), %esi": 1,
                "movzwl (%esi), %eax;cmpw $, %ax;je  <ObLogSecurityDescriptor+>;testw %ax, %ax;jle  <ObLogSecurityDescriptor+>": 2,
                "je  <ObLogSecurityDescriptor+>;movl (%esi), %ecx;cmpl %ecx, %ebx;jb  <ObLogSecurityDescriptor+>;movl $, %eax": 1,
                "movl -(%ebp), %ecx;calll - <ExfReleasePushLock>;movl %fs:, %eax;movl (%eax), %esi;movl %fs:, %eax": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;je  <ObLogSecurityDescriptor+>;movl %fs:, %eax": 1,
                "testl $, %esi;jne  <ObLogSecurityDescriptor+>;testl $, %ebx;je  <ObLogSecurityDescriptor+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;andl $, %ebx;cmpb $, %bl;jne  <ObLogSecurityDescriptor+>": 1,
                "subl $, %edi;testl %ebx, %ebx;jne  <ObLogSecurityDescriptor+>;movl $, (%edi);movl $, %esi": 1,
                "testl %ebx, %ebx;jne  <ObLogSecurityDescriptor+>;movl $, (%edi);movl $, %esi;jmp  <ObLogSecurityDescriptor+>": 1,
                "movl -(%ebp), %ebx;testb $, %bl;je  <ObLogSecurityDescriptor+>;movl $, (%esp);movl $, (%esp)": 1,
                "testl %ebx, %ebx;jne  <ObLogSecurityDescriptor+>;movl $, (%edi);jmp  <ObLogSecurityDescriptor+>;orl $, %ebx": 1,
                "movl %ebx, (%edi);movl %esi, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "calll - <ObReferenceObjectByHandle+>;subl $, %esp;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %eax;subl $, %eax;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ObReferenceObjectByHandle+>;subl $, %esp": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <ObReferenceObjectByHandle+>;subl $, %esp;movl %eax, %esi": 1,
                "calll  <SeSetSecurityDescriptorInfo>;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;js  <ObSetSecurityDescriptorInfo+>": 1,
                "movl %eax, (%esp);calll - <ExFreePool>;subl $, %esp;cmpl $, -(%ebp);js  <ObSetSecurityDescriptorInfo+>": 1,
                "js  <ObSetSecurityDescriptorInfo+>;movl -(%ebp), %edi;testl $, %edi;je  <ObSetSecurityDescriptorInfo+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;shrl $, %eax;andl $, %eax": 1,
                "calll - <ExAcquireResourceExclusiveLite>;subl $, %esp;movl -(%ebp), %eax;movl (%eax), %ecx;addl %ebx, %ecx": 1,
                "movl $, (%esp);movl %esi, (%esp);leal (%ebx), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "calll *%edi;cmpb %al, -(%ebp);je  <ObAssignSecurity+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "calll *-;cmpb $, %al;jbe  <ObGetObjectSecurity+>;calll *-;movzbl %al, %eax": 1,
                "jne  <ObGetObjectSecurity+>;movl %esi, (%esp);calll - <ObReferenceObjectByHandle+>;subl $, %esp;movl (%ebp), %edx": 1,
                "movl $, (%esp);leal (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);calll  <DbgPrint>": 1,
                "movl %eax, (%esp);movl $, (%esp);calll  <DbgPrint>;calll  <DbgBreakPoint>;cmpl $, %esi": 1,
                "jne  <ObGetObjectSecurity+>;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx": 1,
                "jmp  <ObReleaseObjectSecurity+>;movl $, (%esp);movl %esi, (%esp);calll - <ObDereferenceSecurityDescriptor>;subl $, %esp": 1,
                "jbe  <ObCheckObjectAccess+>;calll *-;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp)": 3,
                "movl %edx, (%esp);calll - <ObGetObjectSecurity>;subl $, %esp;testl %eax, %eax;jns  <ObCheckObjectAccess+>": 1,
                "addl $, %eax;movl %eax, (%esp);calll  <SeOpenObjectAuditAlarm>;subl $, %esp;movl %edi, (%esp)": 1,
                "subl $, %esp;movzbl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 4,
                "movl (%ebp), %esi;movl (%ebp), %ebx;movzbl (%ebp), %edi;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <ObGetObjectSecurity>": 2,
                "testb %al, %al;je  <ObCheckObjectAccess+>;movzbl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl %edi, (%esp);calll  <SeLockSubjectContext>;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl -(%ebx), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edi, (%esp);movl -(%ebp), %edx;addl $, %edx;movl %edx, (%esp);leal -(%ebp), %edx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <SeFreePrivileges>;subl $, %esp;movl %esi, (%esp)": 1,
                "leal (%eax), %ecx;movl %ecx, (%esp);movl (%eax), %ecx;movl %ecx, (%esp);leal -(%edx), %ecx": 1,
                "movl %ecx, (%esp);movl (%eax), %ecx;movl %ecx, (%esp);leal -(%edx), %ecx;movl %ecx, (%esp)": 1,
                "movl %eax, (%edx);jmp  <NtQuerySecurityObject+>;nop;movl $, %eax;leal -(%ebp), %ecx": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <NtQuerySecurityObject+>;nop": 1,
                "cmpw $, (%eax);js  <NtSetSecurityObject+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "je  <NtSetSecurityObject+>;testl $, %esi;je  <NtSetSecurityObject+>;movl $, %ebx;movl -(%ebp), %eax": 1,
                "movl (%ebp), %edi;calll *-;cmpb $, %al;jbe  <ObQueryObjectAuditingByHandle+>;calll *-": 1,
                "calll - <ExiTryToAcquireFastMutex+>;subl $, %esp;movl $, %esi;jmp  <ObQueryObjectAuditingByHandle+>;movl $, %esi": 1,
                "subl $, %esp;cmpw $, (%ebx);js  <ObQueryObjectAuditingByHandle+>;movl $, (%esp);movl $, (%esp)": 3,
                "cmpw $, (%ebx);jne  <ObQueryObjectAuditingByHandle+>;calll - <KiCheckForKernelApcDelivery>;movl %esi, %eax;leal -(%ebp), %esp": 1,
                "movb %al, -(%ebp);calll *-;cmpb $, %al;jbe  <ObQueryObjectAuditingByHandle+>;calll *-": 1,
                "je  <ObQueryObjectAuditingByHandle+>;movl (%ebp), %eax;addl $, %eax;cmpl %eax, (%ebp);ja  <ObQueryObjectAuditingByHandle+>": 1,
                "ja  <ObQueryObjectAuditingByHandle+>;cmpl -, %eax;jb  <ObQueryObjectAuditingByHandle+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %ecx": 1,
                "leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <ObQueryObjectAuditingByHandle+>;movl -(%ebp), %eax;movl (%eax), %eax": 2,
                "je  <ObQueryObjectAuditingByHandle+>;movl (%ebp), %edi;addl $, %edi;movl $, -(%ebp);movl %edi, -(%ebp)": 1,
                "movl (%edx), %edx;movl (%edx), %esi;movl %eax, (%esp);movl %esi, (%esp);calll - <ExiTryToAcquireFastMutex+>": 1,
                "movl %edx, %eax;jmp  <ObQueryObjectAuditingByHandle+>;cmpl %ebx, -(%ebp,%eax,);jne  <ObQueryObjectAuditingByHandle+>;movl $, (%esp)": 1,
                "jmp  <ObQueryObjectAuditingByHandle+>;movb $, -(%ebp);movzbl -(%ebp), %eax;movl %eax, -(%ebp);movsbl -(%ebp), %edx": 1,
                "movl (%eax), %eax;jmp  <ObQueryObjectAuditingByHandle+>;jmp - <ObQueryObjectAuditingByHandle+>;leal (%esi), %esi;leal (%edi), %edi": 1,
                "jmp  <ObQueryObjectAuditingByHandle+>;jmp - <ObQueryObjectAuditingByHandle+>;leal (%esi), %esi;leal (%edi), %edi;movl %eax, %esi": 1,
                "movl -(%ebp), %ebx;jmp  <ObQueryObjectAuditingByHandle+>;movl -(%ebp), %ebx;movl $, %esi;movb $, -(%ebp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%ebp);jmp  <NtWaitForSingleObject+>;movl $, %eax;leal -(%ebp), %ecx": 2,
                "movl (%eax), %eax;movl (%eax), %ebx;movl -(%ebp), %eax;movl %eax, %fs:;jmp  <NtWaitForSingleObject+>": 1,
                "jmp - <NtWaitForSingleObject+>;movl -(%ebp), %eax;movl %eax, %fs:;leal -(%ebp), %ecx;movl %ecx, (%ebp)": 2,
                "movl %eax, %fs:;leal -(%ebp), %ecx;movl %ecx, (%ebp);movsbl -(%ebp), %eax;movl %eax, -(%ebp)": 2,
                "movl %ecx, (%esp);movl $, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 3,
                "jmp  <NtWaitForSingleObject+>;movl (%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "je  <NtWaitForSingleObject+>;cmpb $, -(%ebp);jne  <NtWaitForSingleObject+>;jmp  <NtWaitForSingleObject+>;movl (%ebp), %eax": 1,
                "jmp - <NtWaitForSingleObject+>;movl -(%ebp), %eax;movl %eax, %fs:;cmpl $, -(%ebp);jns  <NtWaitForSingleObject+>": 1,
                "movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <KeWaitForSingleObject>;subl $, %esp": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <KeWaitForSingleObject>;subl $, %esp;jmp  <NtWaitForSingleObject+>": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl -(%ebp), %eax": 1,
                "cmpb $, (%eax);jg  <NtWaitForSingleObject+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl $, -(%ebp);je  <NtWaitForSingleObject+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll - <ZwSetVolumeInformationFile+>;subl $, %esp;movl %edi, (%esp);calll - <IoAllocateWorkItem>;subl $, %esp": 1,
                "movl $, (%esp);movl %eax, (%esp);calll - <IoQueueWorkItem>;subl $, %esp;movl $, %eax": 1,
                "subl $, %esp;testl %ebx, %ebx;jns  <NtWaitForSingleObject+>;movl %ebx, (%esp);movl $, (%esp)": 1,
                "movl %eax, %ebx;testl %eax, %eax;jns  <NtWaitForSingleObject+>;movl %eax, (%esp);movl $, (%esp)": 1,
                "calll - <IoGetRelatedDeviceObject>;subl $, %esp;movl %eax, %ebx;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl $, (%esp);movl $, (%esp);leal -(%ebp), %esi": 1,
                "subl $, %esp;testl %eax, %eax;jne  <NtWaitForSingleObject+>;movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <NtWaitForSingleObject+>;movl $, %ebx;jmp  <NtWaitForSingleObject+>;movl $, %ebx;jmp  <NtWaitForSingleObject+>": 2,
                "movzwl -(%ebp), %eax;addw (%edx), %ax;movw %ax, -(%ebp);movzwl %ax, %eax;movl %eax, (%esp)": 1,
                "testl %eax, %eax;jne - <NtWaitForSingleObject+>;movl $, %ebx;movl %ebx, %eax;leal -(%ebp), %esp": 1,
                "subl $, %esp;movl %fs:, %eax;movl (%eax), %edx;cmpl %edx, -;je  <NtWaitForSingleObject+>": 2,
                "movl $, (%edx);movl (%eax), %edx;movl %edx, (%esp);calll *(%eax);subl $, %esp": 1,
                "movl %eax, (%esp);calll - <KeWaitForSingleObject>;subl $, %esp;movl (%ebx), %ecx;calll - <ObfDereferenceObject>": 1,
                "calll - <InbvCheckDisplayOwnership>;testb %al, %al;jne  <NtWaitForSingleObject+>;leal (%esi), %esi;calll - <InbvAcquireDisplayOwnership>": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;je  <NtWaitForSingleObject+>;testl %esi, %esi": 1,
                "je  <NtWaitForSingleObject+>;movl $, (%esp);movl $, (%esp);movl %esi, (%esp);calll - <InbvSolidColorFill+>": 1,
                "subl $, %esp;jmp  <NtWaitForSingleObject+>;movl $, (%esp);calll - <InbvDisplayString>;subl $, %esp": 1,
                "cmpl $, %ebx;jne  <NtWaitForSingleObject+>;jmp  <NtWaitForSingleObject+>;movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <NtWaitForSingleObject+>;movl $, (%esp);movl $, (%esp);calll  <PoCallDriver+>;subl $, %esp": 1,
                "calll  <PoCallDriver+>;subl $, %esp;calll - <NtWaitForSingleObject+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;pushl %ebp;movl %esp, %ebp": 1,
                "cmpl -, %ebx;je  <NtWaitForSingleObject+>;cmpl -, %ebx;je  <NtWaitForSingleObject+>;movl (%ebx), %eax": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jne - <NtWaitForSingleObject+>;movl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <NtWaitForSingleObject+>;pushl %ebp;movl %esp, %ebp;pushl %ebx": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpw $, (%ebx);js  <PoQueueShutdownWorkItem+>": 1,
                "js  <PoQueueShutdownWorkItem+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "andl %edx, %eax;jmp  <PoRequestShutdownEvent+>;movl $, (%ebx);movl $, %eax;movl -(%ebp), %ebx": 1,
                "jne  <PoRequestShutdownEvent+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 6,
                "calll  <RtlAssert>;subl $, %esp;movl %fs:, %eax;cmpl (%eax), %ebx;je  <PoRequestShutdownEvent+>": 10,
                "cmpw $, %ax;je  <PoRequestShutdownEvent+>;testw %ax, %ax;jle  <PoRequestShutdownEvent+>;movl $, (%esp)": 5,
                "je  <PoRequestShutdownEvent+>;movl , %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl (%ebx), %edx": 1,
                "subl $, %esp;testl %esi, %esi;je  <PoRequestShutdownEvent+>;testl $, %esi;jne  <PoRequestShutdownEvent+>": 1,
                "subl $, %esp;movl %fs:, %eax;cmpl (%eax), %esi;je  <PoRequestShutdownEvent+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpw $, (%esi);js  <PoRequestShutdownEvent+>": 1,
                "testw %ax, %ax;jne  <PoRequestShutdownEvent+>;leal (%esi), %eax;cmpl %eax, (%esi);je  <PoRequestShutdownEvent+>": 1,
                "calll - <KiCheckForKernelApcDelivery>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "calll  <DbgPrint>;leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpl -(%ebp), %ebx;jne - <PoRequestShutdownEvent+>;movl (%edi), %eax;subl $, %eax;movl %eax, (%edi)": 1,
                "movl (%edi), %eax;subl $, %eax;movl %eax, (%edi);testl %eax, %eax;jne  <PoRequestShutdownEvent+>": 1,
                "movl %eax, %edi;movl $, %edx;testb $, %al;je  <PoRequestShutdownEvent+>;movb $, (%eax)": 1,
                "je  <PoRequestShutdownEvent+>;movb $, (%edi);movl (%ebp), %eax;movl %eax, (%esi);movl $, (%esi)": 1,
                "movl $, %ecx;calll *-;cmpl $, (%ebx);jne  <PoRequestShutdownEvent+>;movl %esi, (%ebx)": 1,
                "movl %eax, (%esp);calll - <PoRequestShutdownEvent+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax": 1,
                "subl $, %esp;cmpl -, %edi;jne  <PoRequestShutdownEvent+>;movl $, (%esp);movl $, (%esp)": 2,
                "movl %edi, -;movzwl (%edi), %eax;movw %ax, ;cmpl $, (%esi);jne  <PoRequestShutdownEvent+>": 1,
                "movl $, %eax;movl %ecx, -(%ebp,%eax);addl $, %eax;cmpl %edx, %eax;jb - <PoRequestShutdownEvent+>": 1,
                "jmp  <PoRequestShutdownEvent+>;movl $, -(%ebp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <DbgPrint>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwFlushKey>;subl $, %esp": 1,
                "cmpl $, (%esi);je  <PoRequestShutdownEvent+>;movl (%edx), %edx;movl (%edx), %edx;testb $, (%edx)": 1,
                "movl (%ecx), %edx;movl %edx, (%esi);movl %esi, (%edx);leal (%ecx), %edx;movl -(%ebp), %esi": 1,
                "calll  <DbgPrint>;movl $, (%esp);calll  <DbgPrint>;calll  <DbgBreakPoint>;testl %ebx, %ebx": 1,
                "movl %ebx, %eax;cmpl $, %ebx;jbe  <PoRequestShutdownEvent+>;movl $, %eax;movl $, -(%ebp)": 1,
                "calll  <DbgPrint>;leal -(%ebp), %eax;movl %eax, (%esp);calll - <PoRequestShutdownEvent+>;subl $, %esp": 1,
                "cmpb $, (%esi);jg  <PoRequestShutdownEvent+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl (%ebx), %ecx;calll - <ObfDereferenceObject>;movl %ebx, (%esp);calll - <ExFreePool>": 1,
                "calll - <ObfDereferenceObject>;movl %ebx, (%esp);calll - <ExFreePool>;subl $, %esp;movl $, %eax": 1,
                "pushl %ebx;subl $, %esp;cmpl $, (%ebp);jne  <PoRequestShutdownEvent+>;leal -(%ebp), %ebx": 1,
                "calll - <KeInitializeEvent>;subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 2,
                "jg  <PoCallDriver+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "subl $, %esp;movl (%ebp), %esi;leal -(%ebp), %eax;movl %eax, (%esp);calll - <IoGetDmaAdapter+>": 1,
                "movl %esi, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp);movl , %eax": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <IoGetDmaAdapter+>": 2,
                "movl %ebx, %ecx;calll - <ObfDereferenceObject>;jmp  <PoCallDriver+>;movl $, %edi;jmp  <PoCallDriver+>": 1,
                "jmp  <PoCallDriver+>;movl $, %edi;jmp  <PoCallDriver+>;movl $, %edi;movl %edi, %eax": 1,
                "movl $, %edi;jmp  <PoCallDriver+>;movl $, %edi;movl %edi, %eax;leal -(%ebp), %esp": 1,
                "jns  <PoCallDriver+>;addl $, %ebx;movl %ebx, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "cmpl -, %ebx;je  <PoCallDriver+>;testb $, (%ebx);jne  <PoCallDriver+>;movl (%eax), %edx": 1,
                "cmpb $, -(%ebp);jne  <PoRequestPowerIrp+>;movl $, (%esp);movl $, (%esp);calll - <ExAllocatePool>": 1,
                "movl %ebx, (%edx);cmpb $, (%ebx);jg  <PoRequestPowerIrp+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %esi, -(%eax);movb $-, -(%eax);movl %ebx, (%esp);movl %edi, (%esp);calll - <PoCallDriver>": 1,
                "movl %edi, (%esp);calll - <PoCallDriver>;subl $, %esp;movl $, %eax;jmp  <PoRequestPowerIrp+>": 1,
                "movl %edi, (%edx,%eax);addl $, %eax;cmpl %ebx, %eax;jb - <PoUnregisterSystemState+>;addl %eax, %edx": 1,
                "movzbl (%eax), %ebx;calll *-;cmpb $, %al;jbe  <PoUnregisterSystemState+>;calll *-": 1,
                "movl %eax, (%edx);jmp  <PoUnregisterSystemState+>;movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl (%eax), %eax;movl -(%ebp), %edx;movl %edx, %fs:;jmp  <PoUnregisterSystemState+>;leal (%esi), %esi": 2,
                "movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx);jmp  <PoUnregisterSystemState+>;movl $, %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl %esi, (%esp);movl $, (%esp)": 1,
                "movl %ebx, (%esp);calll - <ZwSetSystemInformation+>;subl $, %esp;movl %eax, %edx;jmp  <PoUnregisterSystemState+>": 1,
                "calll  <DbgPrint>;movl $, (%esp);calll - <NtAllocateUuids+>;subl $, %esp;movb $, -": 1,
                "cmpl %edx, -;je  <PoUnregisterSystemState+>;movl $, -;movl $, -;movl $, -": 1,
                "movl $, (%esp);calll  <DbgPrint>;testl %ebx, %ebx;je  <PoUnregisterSystemState+>;cmpl (%edi), %ebx": 1,
                "addl $, %esi;testl %ebx, %ebx;je  <PoUnregisterSystemState+>;cmpl (%edi), %ebx;jae - <PoUnregisterSystemState+>": 1,
                "cmpl (%edi), %ebx;jae - <PoUnregisterSystemState+>;testl $, %esi;je  <PoUnregisterSystemState+>;movl $, (%esp)": 1,
                "movl %eax, -(%ebp);jmp  <PsGetContextThread+>;movl -(%ebp), %eax;cmpl %eax, (%ebp);ja  <PsGetContextThread+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <KeInitializeEvent>;subl $, %esp;movl %esi, -(%ebp)": 2,
                "movzbl -(%ebp), %eax;movb %al, -(%ebp);calll - <PsGetCurrentThread>;cmpl %eax, (%ebp);jne  <PsGetContextThread+>": 1,
                "calll  <RtlAssert>;subl $, %esp;subw $, (%ebx);leal -(%ebp), %eax;leal -(%ebp), %edx": 2,
                "movw %ax, (%ebx);movl $, -(%ebp);testw %ax, %ax;jne  <PsGetContextThread+>;leal (%ebx), %eax": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <PsGetContextThread+>;calll - <KiCheckForKernelApcDelivery>;movl $, -(%ebp)": 1,
                "je  <PsSetContextThread+>;movl $, (%esp);movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <ProbeForRead>;subl $, %esp": 1,
                "movl %eax, (%esp);calll - <ProbeForRead>;subl $, %esp;movl %ebx, (%esp);movl (%ebp), %eax": 1,
                "je  <PsSetContextThread+>;testw %ax, %ax;jle  <PsSetContextThread+>;movl $, (%esp);movl $, (%esp)": 1,
                "je  <PsSetContextThread+>;movl $, %ecx;calll - <KeWaitForSingleObject+>;movl %fs:, %eax;movl (%eax), %eax": 2,
                "xaddl %eax, -;addl $, %eax;testl %eax, %eax;jg  <PsSetContextThread+>;movl $, (%esp)": 2,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;js  <PsSetContextThread+>;movl -(%ebp), %edx": 1,
                "je  <PsSetContextThread+>;leal (%edx), %ecx;calll - <ExAcquireRundownProtection>;jmp  <PsSetContextThread+>;movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);je - <PsSetContextThread+>;movl $, %ebx;jmp - <PsSetContextThread+>": 1,
                "jmp  <PsSetContextThread+>;movl -(%ebp), %edx;cmpl %edx, (%ebp);ja  <PsSetContextThread+>;cmpl -, %edx": 2,
                "movl (%edx), %eax;movl %eax, (%edx);jmp  <PsSetContextThread+>;movl $, %eax;leal -(%ebp), %ecx": 2,
                "jmp  <PsSetContextThread+>;leal (%esi), %esi;jmp - <PsSetContextThread+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll  <PsGetProcessSessionId>;subl $, %esp;movl %eax, (%ebx)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;testl %eax, %eax;je  <PsSetContextThread+>": 1,
                "calll - <ObfDereferenceObject>;jmp  <PsSetContextThread+>;movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "js  <PsSetContextThread+>;movl -(%ebp), %eax;movl (%eax), %edi;testl %edi, %edi;je  <PsSetContextThread+>": 1,
                "testl %eax, %eax;js  <PsSetContextThread+>;movl -(%ebp), %ecx;cmpl %ecx, %edi;sete %bl": 1,
                "movl %eax, (%esp);movl %esi, (%esp);movl %edi, (%esp);calll - <PsSetContextThread+>;subl $, %esp": 1,
                "cmpb $, %al;jbe  <PsSetJobUIRestrictionsClass+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 10,
                "subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);calll - <ExFreePool>;subl $, %esp": 5,
                "movl (%ebp), %ebx;movl (%ebp), %edi;calll - <PsGetCurrentThread>;movl %eax, %esi;calll *-": 1,
                "pushl %ebx;subl $, %esp;calll *-;cmpb $, %al;jbe  <PsSetJobUIRestrictionsClass+>": 2,
                "cmpb $, %al;jg  <PsSetJobUIRestrictionsClass+>;cmpb $, %al;jne - <PsSetJobUIRestrictionsClass+>;jmp  <PsSetJobUIRestrictionsClass+>": 1,
                "movl $, %edx;lock;cmpxchgl %edx, -;cmpl $, %eax;jne - <PsSetJobUIRestrictionsClass+>": 1,
                "cmpb $, %al;jbe  <PsSetJobUIRestrictionsClass+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 8,
                "je  <PsSetJobUIRestrictionsClass+>;testw %ax, %ax;jle  <PsSetJobUIRestrictionsClass+>;movl $, (%esp);movl $, (%esp)": 6,
                "lock;btrl $, -;setb %al;testb %al, %al;jne  <PsSetJobUIRestrictionsClass+>": 2,
                "je  <PsSetJobUIRestrictionsClass+>;movl %eax, %edx;movl $, (%esp);movl $, (%esp);movl %edx, (%esp)": 1,
                "movl , %eax;movl %eax, (%esp);calll - <ExiTryToAcquireFastMutex+>;subl $, %esp;testb %al, %al": 2,
                "btsl $, (%ebx);setb %al;testb %al, %al;je  <PsSetJobUIRestrictionsClass+>;movl -(%ebp), %ecx": 1,
                "subl $, %esp;movl (%esi), %edx;movl (%esi), %eax;movl %eax, (%edx);movl %edx, (%eax)": 1,
                "movl -(%ebp), %eax;movl $, %esi;lock;xaddl %esi, (%eax);movl %esi, %edi": 1,
                "testl $, %edi;jne  <PsSetJobUIRestrictionsClass+>;testl $, %esi;je  <PsSetJobUIRestrictionsClass+>;movl $, (%esp)": 1,
                "cmpb $, %al;jne  <PsSetJobUIRestrictionsClass+>;movl -(%ebp), %ecx;calll - <ExfTryToWakePushLock>;movl %fs:, %eax": 1,
                "subl $, %esp;movl %edi, (%esp);movl %ebx, (%esp);calll - <NtQueryInformationAtom+>;subl $, %esp": 2,
                "jne - <PsSetJobUIRestrictionsClass+>;movl -(%ebp), %edi;leal (%edi), %eax;movl %eax, (%esp);calll - <PoRequestShutdownEvent+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;calll - <PsGetCurrentThread>;movl %eax, %edi": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);calll - <PsGetCurrentThread>;cmpl %eax, %edi;je  <PsSetJobUIRestrictionsClass+>": 1,
                "jbe  <PsSetJobUIRestrictionsClass+>;leal (%edi), %ecx;calll - <ExWaitForRundownProtectionRelease>;leal (%edi), %eax;movl %eax, (%esp)": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl (%eax), %ebx;movl %fs:, %eax;cmpl (%eax), %ebx;je  <PsSetJobUIRestrictionsClass+>;movl $, (%esp)": 6,
                "lock;orl $, (%edx);cmpl $, (%ebp);jne  <PsSetJobUIRestrictionsClass+>;cmpl $, (%edx)": 1,
                "orl $, (%edx);cmpl $, (%ebp);jne  <PsSetJobUIRestrictionsClass+>;cmpl $, (%edx);jne  <PsSetJobUIRestrictionsClass+>": 1,
                "movl %eax, (%edx);jmp  <PsSetJobUIRestrictionsClass+>;movl (%ebp), %eax;movl -(%ebp), %ecx;movl %eax, (%ecx)": 1,
                "testb $, (%eax);jne  <PsSetJobUIRestrictionsClass+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "je  <PsSetJobUIRestrictionsClass+>;cmpw $, (%ebx);jne  <PsSetJobUIRestrictionsClass+>;calll - <KiCheckForKernelApcDelivery>;movl $, (%esp)": 2,
                "lock;btsl $, (%ecx);setb %al;testb %al, %al;je  <PsSetJobUIRestrictionsClass+>": 1,
                "jmp  <PsSetJobUIRestrictionsClass+>;cmpl $, (%ebp);je  <PsSetJobUIRestrictionsClass+>;movl (%ebp), %ecx;movl -(%ebp), %edx": 1,
                "movl %ebx, %esi;testb $, %bl;jne  <PsSetJobUIRestrictionsClass+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpb $, -(%ebp);je  <PsSetJobUIRestrictionsClass+>;movl -(%ebp), %eax;testb $, (%eax);je  <PsSetJobUIRestrictionsClass+>": 1,
                "movl $, (%esp);calll - <PsSetJobUIRestrictionsClass+>;subl $, %esp;jmp  <PsSetJobUIRestrictionsClass+>;movl $, (%esp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;cmpl $, (%edi)": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebx), %eax": 1,
                "movl %eax, (%esp);calll - <LpcRequestPort>;subl $, %esp;cmpl $, %eax;je  <PsSetJobUIRestrictionsClass+>": 2,
                "testb $, (%edi);jne  <PsSetJobUIRestrictionsClass+>;movw $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 1,
                "movl -(%ebp), %edx;cmpl $, (%edx);je  <PsSetJobUIRestrictionsClass+>;movl (%edi), %eax;movl (%edi), %edx": 1,
                "leal -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebx, (%esp);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;cmpb $, -(%ebp);je  <PsSetJobUIRestrictionsClass+>;movl -(%ebp), %ecx;cmpl $, (%ecx)": 1,
                "subl $, %esp;cmpl $, (%edi);je  <PsSetJobUIRestrictionsClass+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpb $, -(%ebp);je  <PsSetJobUIRestrictionsClass+>": 1,
                "movl -(%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);movl %ecx, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp;cmpl $, (%edi)": 1,
                "movl %edi, (%esp);calll - <KeInsertQueueApc+>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax": 1,
                "calll *-;movl $, (%esp);movzbl %al, %eax;movl %eax, (%esp);movl (%edi), %eax": 1,
                "movl %eax, (%esp);movl (%edi), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl $, (%esp)": 1,
                "lock;orl $, (%esp);xchgl %eax, (%ebx);testb $, %al;jne  <PsSetJobUIRestrictionsClass+>": 1,
                "movl $, (%esp);movl %esi, (%esp);calll - <ExFreePoolWithTag>;subl $, %esp;jmp  <PsSetJobUIRestrictionsClass+>": 1,
                "movl $, %edi;jmp  <PsSetJobUIRestrictionsClass+>;movl $, %edi;movl %edi, %eax;leal -(%ebp), %esp": 1,
                "jmp  <PsSetJobUIRestrictionsClass+>;movl $, %edi;movl %edi, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testb $, (%esi);je  <PsSetJobUIRestrictionsClass+>": 1,
                "orl $, (%esi);movl $, (%esp);movl %esi, (%esp);calll  <PsTerminateSystemThread+>;subl $, %esp": 1,
                "jne - <PsSetJobUIRestrictionsClass+>;movl %ebx, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl %eax, %ebx;testl %eax, %eax;je  <PsSetJobUIRestrictionsClass+>;cmpl -, %ebx;je  <PsSetJobUIRestrictionsClass+>": 1,
                "je  <PsSetJobUIRestrictionsClass+>;movl $, (%esp);movl %ebx, (%esp);calll - <PsSetJobUIRestrictionsClass+>;subl $, %esp": 1,
                "subl $, %esp;cmpl $, (%ebx);je  <PsSetJobUIRestrictionsClass+>;movl (%ebx), %esi;movl %ebx, (%esp)": 1,
                "subl $, %esp;movzwl (%esi), %eax;cmpw $, %ax;je  <PsSetJobUIRestrictionsClass+>;testw %ax, %ax": 1,
                "movl %edx, (%eax);movl $, (%ebx);movl $, (%ebx);calll *-;cmpb $, %al": 1,
                "jne  <PsSetJobUIRestrictionsClass+>;movl $, %ecx;calll - <KeSetEventBoostPriority+>;movl %fs:, %eax;movl (%eax), %esi": 1,
                "calll - <KiCheckForKernelApcDelivery>;movl (%ebx), %eax;testl %eax, %eax;je  <PsSetJobUIRestrictionsClass+>;movl $, (%esp)": 1,
                "je  <PsSetJobUIRestrictionsClass+>;movl %eax, (%esp);movl %ebx, (%esp);calll - <PsSetContextThread+>;subl $, %esp": 1,
                "movl %ebx, (%esp);calll - <PsSetContextThread+>;subl $, %esp;movl (%ebx), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl (%ebx), %ecx;testl %ecx, %ecx;je  <PsSetJobUIRestrictionsClass+>;calll - <ObfDereferenceObject>;movl $, (%ebx)": 3,
                "testl %ecx, %ecx;je  <PsSetJobUIRestrictionsClass+>;calll - <ObfDereferenceObject>;movl $, (%ebx);movl %ebx, (%esp)": 1,
                "movl %ebx, (%esp);calll  <KeQueryIoAccessMap+>;subl $, %esp;movl %ebx, (%esp);calll  <KeQueryIoAccessMap+>": 1,
                "calll  <KeQueryIoAccessMap+>;subl $, %esp;movl %ebx, (%esp);calll  <KeQueryIoAccessMap+>;subl $, %esp": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll - <PsSetJobUIRestrictionsClass+>;subl $, %esp": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testl %esi, %esi;je  <PsTerminateSystemThread+>": 2,
                "jmp  <PsTerminateSystemThread+>;movb $, -(%ebp);movl $, %esi;movl %fs:, %eax;movl $, (%esp)": 1,
                "movl %eax, (%esp);movl $, (%esp);calll - <PsSetJobUIRestrictionsClass+>;subl $, %esp;movl -(%ebp), %ecx": 1,
                "calll - <ExAcquireRundownProtection>;testb %al, %al;jne  <PsTerminateSystemThread+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;je  <PsTerminateSystemThread+>;movl (%ebp), %edi": 1,
                "je  <PsTerminateSystemThread+>;movl $, (%esp);movl %edi, (%esp);movl %esi, (%esp);calll - <PsSetJobUIRestrictionsClass+>": 1,
                "leal -(%edx), %edi;movl %edx, %eax;lock;cmpxchgl %edi, (%ecx);cmpl %eax, %edx": 2,
                "cmpl %eax, %edx;je  <PsTerminateSystemThread+>;addl $, %ecx;calll - <ExReleaseRundownProtection>;jmp  <PsTerminateSystemThread+>": 2,
                "cmpl $, %edx;ja  <PsTerminateSystemThread+>;cmpb $, -;ja  <PsTerminateSystemThread+>;movl $, (%esp)": 2,
                "cmpl $, %esi;je  <PsTerminateSystemThread+>;movl -(%ebp), %eax;cmpl $, (%eax);je  <PsTerminateSystemThread+>": 1,
                "movl -(%ebp), %eax;cmpl $, (%eax);je  <PsTerminateSystemThread+>;cmpb $, -(%ebp);je  <PsTerminateSystemThread+>": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax;leal -(%ebp), %esp;popl %ebx": 3,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %ecx, (%esp);calll - <PsSetJobUIRestrictionsClass+>": 1,
                "movl %ecx, (%esp);calll - <PsSetJobUIRestrictionsClass+>;subl $, %esp;movl %eax, %ebx;movl -(%ebp), %ecx": 1,
                "movl %ebx, (%eax);movl $, %eax;jmp  <PsTerminateSystemThread+>;movl $, %ecx;calll - <ObfDereferenceObject>": 1,
                "movl $, %eax;jmp  <PsTerminateSystemThread+>;movl $, %ecx;calll - <ObfDereferenceObject>;movl $, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movzwl (%ebx), %eax;cmpw $, %ax;je  <PsTerminateSystemThread+>": 2,
                "movzwl (%ebx), %eax;cmpw $, %ax;je  <PsTerminateSystemThread+>;testw %ax, %ax;jle  <PsTerminateSystemThread+>": 2,
                "lock;cmpxchgl %edx, (%ecx);testl %eax, %eax;je  <PsTerminateSystemThread+>;movl -(%ebp), %ecx": 1,
                "movl (%ebx), %ebx;cmpl %ebx, %edi;jne - <PsTerminateSystemThread+>;movl $, %esi;jmp  <PsTerminateSystemThread+>": 1,
                "jmp  <PsTerminateSystemThread+>;movl $, %esi;calll *-;cmpb $, %al;jbe  <PsTerminateSystemThread+>": 1,
                "movl $, %esi;calll *-;cmpb $, %al;jbe  <PsTerminateSystemThread+>;movl $, (%esp)": 1,
                "movzbl (%ebp), %esi;calll *-;cmpb $, %al;jbe  <PsTerminateSystemThread+>;calll *-": 1,
                "andl $, %ebx;cmpl $, %ebx;jne  <PsTerminateSystemThread+>;addl $, %eax;cmpl $, %eax": 1,
                "cmpb $, (%ebx);sete %al;movzbl %al, %eax;subl $, %eax;andl -, %eax": 1,
                "jne  <PsTerminateSystemThread+>;calll - <ObfDereferenceObject>;movl $, -(%ebp);jmp  <PsTerminateSystemThread+>;movl -(%ebp), %eax": 1,
                "movl -, %edx;movl %edx, -(%ebp);movl -, %esi;movl -, %ecx;movl %ecx, -(%ebp)": 1,
                "movl $, %edx;testl $, %edi;je  <PsTerminateSystemThread+>;movb $, (%edi);addl $, %edi": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <NtMakePermanentObject+>;subl $, %esp;movl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jns  <PsTerminateSystemThread+>;jmp  <PsTerminateSystemThread+>;movl $, -(%ebp)": 1,
                "testl %ecx, %ecx;je  <PsTerminateSystemThread+>;movl (%ecx), %edx;andl $-, %edx;leal (%edx), %edi": 1,
                "je  <PsTerminateSystemThread+>;addl $, %ecx;calll - <ExAcquireRundownProtection>;testb %al, %al;je  <PsTerminateSystemThread+>": 1,
                "testb %al, %al;je  <PsTerminateSystemThread+>;movl -(%ebp), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp)": 1,
                "cmpl $, -(%ebp);je  <PsTerminateSystemThread+>;movl -(%ebp), %eax;movl -(%ebp), %edx;movl %edx, (%eax)": 1,
                "movl %eax, (%esp);movl $, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <ObReferenceObjectByHandle>": 23,
                "movl %edx, (%eax);movl -(%ebp), %eax;movl -(%ebp), %edx;movl %edx, (%eax);movl $, (%eax)": 1,
                "cmpl $, -(%ebp);je  <PsTerminateSystemThread+>;leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "calll - <MmGrowKernelStack+>;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;js  <PsTerminateSystemThread+>": 3,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <PsTerminateSystemThread+>;movzbl (%eax), %edi;movl $, %esi": 1,
                "movl %esi, %edx;cmpb $, %dl;jne  <PsTerminateSystemThread+>;movl %edi, %edx;movb %dl, (%ecx)": 1,
                "movb %dl, (%ecx);movl (%ebp), %edx;andl $, %edx;cmpl $, %edx;sbbl %edx, %edx": 1,
                "movl %eax, (%esp);calll - <MmGrowKernelStack+>;subl $, %esp;movl %eax, -(%ebp);movl $, %edi": 1,
                "je  <PsTerminateSystemThread+>;cmpl -, %eax;je  <PsTerminateSystemThread+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <SeImpersonateClient+>;subl $, %esp;testb %al, %al;je  <PsTerminateSystemThread+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <PsTerminateSystemThread+>;cmpl $, (%eax);je  <PsTerminateSystemThread+>": 1,
                "movl -(%ebp), %eax;leal (%eax), %edx;movl %edx, (%esp);leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "jns  <PsTerminateSystemThread+>;jmp  <PsTerminateSystemThread+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <SeReleaseSubjectContext+>;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;js  <PsTerminateSystemThread+>": 1,
                "js  <PsTerminateSystemThread+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;leal (%eax), %edx;cmpl %edx, (%eax);je  <PsTerminateSystemThread+>;movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %esi;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, (%esp);calll  <PsReferencePrimaryToken>;subl $, %esp": 1,
                "movl (%eax), %eax;testl %eax, %eax;je  <PsTerminateSystemThread+>;movl -(%ebp), %ecx;movl (%ecx), %edx": 1,
                "jmp  <PsTerminateSystemThread+>;jmp - <PsTerminateSystemThread+>;movl -(%ebp), %eax;movl %eax, %fs:;movl -(%ebp), %edx": 1,
                "movl (%eax), %eax;movl %eax, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <PsTerminateSystemThread+>": 1,
                "movl %eax, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <PsTerminateSystemThread+>;movl $, -(%ebp)": 1,
                "calll *-;cmpb $, %al;jbe  <PsLookupProcessByProcessId+>;calll *-;movzbl %al, %eax": 1,
                "cmpb $, %al;jbe  <PsLookupProcessByProcessId+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "movl %fs:, %eax;cmpl (%eax), %ebx;je  <PsLookupProcessByProcessId+>;movl $, (%esp);movl $, (%esp)": 2,
                "je  <PsLookupProcessByProcessId+>;movl (%eax), %edi;movl $, %esi;cmpb $, (%edi);jne  <PsLookupProcessByProcessId+>": 1,
                "subl $, %esp;cmpw $, (%ebx);js  <PsLookupProcessByProcessId+>;movl $, (%esp);movl $, (%esp)": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <PsLookupProcessByProcessId+>;cmpw $, (%ebx);jne  <PsLookupProcessByProcessId+>": 1,
                "testw %ax, %ax;jne  <PsLookupProcessThreadByCid+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <PsLookupProcessThreadByCid+>": 1,
                "je  <PsLookupProcessThreadByCid+>;cmpw $, (%ebx);jne  <PsLookupProcessThreadByCid+>;calll - <KiCheckForKernelApcDelivery>;movl %esi, %eax": 1,
                "subl $, %esp;movl (%ebp), %esi;movl (%ebp), %edi;movl %fs:, %eax;movl (%eax), %ebx": 1,
                "movl (%eax), %ebx;movl %fs:, %eax;cmpl (%eax), %ebx;je  <PsSetProcessWinProcess+>;movl $, (%esp)": 2,
                "subl $, %esp;movzwl (%ebx), %eax;cmpw $, %ax;je  <PsSetProcessWinProcess+>;testw %ax, %ax": 1,
                "leal (%esi), %ebx;lock;btsl $, (%esi);setb %al;testb %al, %al": 1,
                "testb %al, %al;je  <PsSetProcessWinProcess+>;movl %ebx, %ecx;calll - <ExfAcquirePushLockExclusive>;testb $, (%esi)": 1,
                "jne  <PsSetProcessWinProcess+>;movl %edi, (%esi);movl $, -(%ebp);jmp  <PsSetProcessWinProcess+>;movl (%ebp), %eax": 1,
                "testw %ax, %ax;jne  <PsSetProcessWinProcess+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <PsSetProcessWinProcess+>": 1,
                "je  <PsSetProcessPriorityByClass+>;movzbl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl (%ebp), %ecx": 2,
                "movl -(%ebp), %edx;movl %edx, %fs:;jmp  <NtOpenProcess+>;movl (%ebp), %edx;cmpl $, (%edx)": 1,
                "movl (%ebp), %edx;cmpl $, (%edx);setne %al;movl (%edx), %ebx;movl %eax, %edi": 2,
                "cmpl $, (%ebp);setne -(%ebp);je  <NtOpenProcess+>;testb %al, %al;jne  <NtOpenProcess+>": 1,
                "testb %al, %al;jne  <NtOpenProcess+>;movl , %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;js  <NtOpenProcess+>;movsbl -(%ebp), %esi": 1,
                "movl %eax, -(%ebp);movl %ebx, (%esp);calll  <SeDeleteAccessState>;subl $, %esp;jmp  <NtOpenProcess+>": 1,
                "je  <NtOpenProcess+>;movl (%ebp), %edx;cmpl $, (%edx);je  <NtOpenProcess+>;leal -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl %edx, (%esp);calll - <PsLookupProcessThreadByCid>;subl $, %esp;movl %eax, -(%ebp)": 1,
                "movl (%ecx), %eax;movl %eax, (%esp);calll - <PsLookupProcessByProcessId>;subl $, %esp;movl %eax, -(%ebp)": 1,
                "movl %eax, (%esp);calll - <PsLookupProcessByProcessId>;subl $, %esp;movl %eax, -(%ebp);cmpl $, -(%ebp)": 1,
                "calll  <SeDeleteAccessState>;subl $, %esp;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <NtOpenProcess+>": 1,
                "subl $, %esp;movl -(%ebp), %ecx;testl %ecx, %ecx;je  <NtOpenProcess+>;calll - <ObfDereferenceObject>": 1,
                "testl %ecx, %ecx;je  <NtOpenProcess+>;calll - <ObfDereferenceObject>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl (%ebp), %ebx;movl $, %eax;testl %ebx, %ebx;je  <NtOpenProcess+>;movl %ebx, %esi": 1,
                "calll  <strcmp>;movl %eax, %edx;testl %eax, %eax;jne  <NtOpenProcess+>;movl (%ebp), %edx": 1,
                "movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl %esi, (%esp);calll  <RtlImageDirectoryEntryToData>": 1,
                "movl %eax, %ebx;movl (%ebp), %edi;movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al": 1,
                "movl %eax, (%esp);movl %esi, (%esp);movl %edi, (%esp);calll - <NtOpenProcess+>;subl $, %esp": 1,
                "movl %esi, (%eax);movl $, %eax;jmp  <NtOpenProcess+>;movl $, %eax;jmp  <NtOpenProcess+>": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl , %eax;movl %eax, (%esp)": 2,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;testl %eax, %eax;je  <NtOpenProcess+>": 3,
                "calll  <DbgPrint>;jmp  <NtOpenProcess+>;movl $, (%esp);movl $, (%esp);calll - <NtOpenProcess+>": 2,
                "movl $, -;movl $, -;movl %ebx, %eax;movl -(%ebp), %ebx;leave": 2,
                "movl %eax, (%esp);calll - <MmMapViewOfSection>;subl $, %esp;testl %eax, %eax;je  <NtOpenProcess+>": 1,
                "subl $, %esp;testl %eax, %eax;je  <NtOpenProcess+>;movl $, %eax;testl %ebx, %ebx": 1,
                "movl $, (%esp);calll - <KeBugCheckEx>;calll - <NtOpenProcess+>;testl %eax, %eax;jns  <NtOpenProcess+>": 1,
                "pushl %ebx;subl $, %esp;calll - <MmQuerySystemSize>;movl $, -;cmpl $, %eax": 1,
                "subl $, %esp;addl $, %ebx;cmpl $, %ebx;jne - <NtOpenProcess+>;movb $, %bl": 2,
                "movl , %eax;testl %eax, %eax;jne  <NtOpenProcess+>;cmpl $, -;jne  <NtOpenProcess+>": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);calll - <ObCreateObjectType>;subl $, %esp;calll - <PsSetContextThread+>": 1,
                "testl %eax, %eax;je  <NtOpenProcess+>;movl $, -;movl $, -;movl $, -": 1,
                "movl $, -;movl $, -;movl , %eax;movl (%eax), %eax;andl $-, %eax": 1,
                "cmpl $, %eax;sete %al;popl %ebx;popl %esi;popl %ebp": 1,
                "movl %eax, %esi;testl %eax, %eax;je  <PsSetCreateProcessNotifyRoutine+>;movl %eax, (%esp);calll - <NtQueryInformationAtom+>": 1,
                "cmpl (%ebp), %eax;jne  <PsSetCreateProcessNotifyRoutine+>;movl %esi, (%esp);movl $, (%esp);movl %edi, (%esp)": 1,
                "testb %al, %al;je  <PsSetCreateProcessNotifyRoutine+>;lock;subl $, -;movl %esi, (%esp)": 1,
                "subl $, %esp;addl $, %ebx;cmpl $, %ebx;jne - <PsSetCreateProcessNotifyRoutine+>;movl $, %eax": 1,
                "jne - <PsSetCreateProcessNotifyRoutine+>;movl %esi, (%esp);calll - <NtQueryInformationAtom+>;subl $, %esp;movl $, %eax": 1,
                "jmp  <PsSetCreateProcessNotifyRoutine+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;je  <PsRemoveLoadImageNotifyRoutine+>;movl %eax, (%esp)": 1,
                "jmp  <PsRemoveLoadImageNotifyRoutine+>;movl $, %ebx;jmp - <PsRemoveLoadImageNotifyRoutine+>;leal -(%ebp), %esp;popl %ebx": 1,
                "movl %eax, %esi;testl %eax, %eax;je  <PsSetLoadImageNotifyRoutine+>;movl $, %ebx;movl $, (%esp)": 1,
                "jmp  <NtQueryInformationProcess+>;movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl $, %eax": 1,
                "jmp  <NtQueryInformationProcess+>;movl -(%ebp), %eax;movl (%eax), %edx;movl (%ebp), %ebx;movl %edx, (%ebx)": 1,
                "jmp  <NtQueryInformationProcess+>;jmp - <NtQueryInformationProcess+>;movl -(%ebp), %eax;movl %eax, %fs:;movl -(%ebp), %ecx": 1,
                "movl $, -(%ebp);testl %eax, %eax;jns  <NtQueryInformationProcess+>;jmp  <NtQueryInformationProcess+>;movl -(%ebp), %ecx": 2,
                "shll $, %eax;movl %eax, (%ecx);movl (%ebp), %ebx;movl %ebx, -(%ebp);jmp  <NtQueryInformationProcess+>": 1,
                "movl %ebx, -(%ebp);jmp  <NtQueryInformationProcess+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 1,
                "movl -(%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movl -(%ebp), %eax;movl %eax, (%ecx)": 1,
                "movl %eax, (%esp);calll - <ExFreePoolWithTag>;subl $, %esp;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 3,
                "testl %eax, %eax;jne  <NtQueryInformationProcess+>;movl %edx, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl (%edx), %ecx;andl $-, %ecx;leal (%ecx), %ebx;movl %ecx, %eax": 3,
                "andl $-, %ecx;leal (%ecx), %ebx;movl %ecx, %eax;lock;cmpxchgl %ebx, (%edx)": 4,
                "jns  <NtQueryInformationProcess+>;movl $, -(%ebp);jmp  <NtQueryInformationProcess+>;movl -(%ebp), %eax;movl (%ebp), %edx": 1,
                "je  <NtQueryInformationProcess+>;cmpl $, (%ebp);je  <NtQueryInformationProcess+>;movl -(%ebp), %ebx;movl (%ebp), %ecx": 1,
                "movl %ebx, (%ecx);jmp  <NtQueryInformationProcess+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 1,
                "jbe  <NtSetInformationProcess+>;calll *-;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <NtSetInformationProcess+>;jmp - <NtSetInformationProcess+>": 1,
                "calll  <SeSinglePrivilegeCheck>;subl $, %esp;testb %al, %al;jne  <NtSetInformationProcess+>;movl $, (%esp)": 2,
                "testl %eax, %eax;je  <NtSetInformationProcess+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 11,
                "andl $, (%eax);jmp  <NtSetInformationProcess+>;movl $, -(%ebp);cmpl $, (%ebp);jne  <NtSetInformationProcess+>": 2,
                "movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll - <ObReferenceObjectByHandle>": 1,
                "movl %eax, (%esp);calll  <PsReferencePrimaryToken+>;subl $, %esp;movl %eax, -(%ebp);jmp  <NtSetInformationProcess+>": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;movl %edx, (%eax);testb $, %dl;je  <NtSetInformationProcess+>": 1,
                "movl , %eax;movl -, %edx;movl %eax, (%esp);movl %edx, (%esp);calll  <SeSinglePrivilegeCheck+>": 2,
                "calll  <SeSinglePrivilegeCheck+>;subl $, %esp;testb %al, %al;jne  <NtSetInformationProcess+>;movl -(%ebp), %ecx": 2,
                "movl $, -(%ebp);jmp  <NtSetInformationProcess+>;movl -(%ebp), %eax;cmpl $, (%eax);je  <NtSetInformationProcess+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;testl %eax, %eax;je  <NtSetInformationProcess+>": 1,
                "movl $, -(%ebp);cmpl $, (%ebp);jne  <NtSetInformationProcess+>;movb $, -(%ebp);jmp  <NtSetInformationProcess+>": 2,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <PsSetProcessPriorityByClass>;subl $, %esp;movl $, -(%ebp)": 1,
                "calll  <DbgPrint>;movl $, -(%ebp);jmp  <NtSetInformationProcess+>;movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <KeReleaseMutex+>;subl $, %esp;movzbl %bl, %ebx;movl %ebx, (%esp)": 1,
                "testw %ax, %ax;jle  <NtSetInformationProcess+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "jle  <NtSetInformationProcess+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "jg  <NtSetInformationProcess+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 6,
                "movl %edi, (%esp);leal -(%ebx), %eax;movl %eax, (%esp);calll - <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;subl $, %esp": 2,
                "movl (%ebx), %ebx;movl -(%ebp), %esi;leal (%esi), %eax;cmpl %eax, %ebx;jne - <NtSetInformationProcess+>": 2,
                "subl $, %esp;testb $, (%esi);jne  <NtSetInformationProcess+>;movl (%esi), %eax;shrl $, %eax": 2,
                "calll - <KiCheckForKernelApcDelivery>;movl -(%ebp), %ecx;movl (%ecx), %edx;andl $-, %edx;leal -(%edx), %ebx": 3,
                "leal (%ebx), %esi;testb $, (%ebx);jne  <NtSetInformationProcess+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %edx;movl $, %eax;lock;cmpxchgl %edx, (%esi);cmpl $, %eax": 2,
                "cmpl $, %eax;je  <NtSetInformationProcess+>;movl %esi, %ecx;calll - <ExfReleasePushLockShared>;movl %fs:, %eax": 1,
                "cmpl $-, (%ebp);jne  <NtSetInformationProcess+>;movl $, -(%ebp);jmp  <NtSetInformationProcess+>;movl (%ebp), %eax": 1,
                "movl $, -(%ebp);jmp  <NtSetInformationProcess+>;movl %ebx, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpb $, %al;jbe  <NtSetInformationThread+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "jmpl *-(,%edi,);cmpl $, (%ebp);jne  <NtSetInformationThread+>;movl $, -(%ebp);jmp  <NtSetInformationThread+>": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <NtSetInformationThread+>;nop": 2,
                "je  <NtSetInformationThread+>;movl %fs:, %eax;movl (%eax), %esi;movl %fs:, %eax;cmpl (%eax), %esi": 1,
                "testw %ax, %ax;jle  <NtSetInformationThread+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "lock;cmpxchgl %edx, (%esi);cmpl $, %eax;je  <NtSetInformationThread+>;movl %esi, %ecx": 1,
                "subl $, %esp;cmpw $, (%esi);js  <NtSetInformationThread+>;movl $, (%esp);movl $, (%esp)": 1,
                "jne  <NtSetInformationThread+>;leal (%esi), %eax;cmpl %eax, (%esi);je  <NtSetInformationThread+>;cmpw $, (%esi)": 1,
                "cmpl %eax, %edx;je  <NtSetInformationThread+>;movl %edi, %ecx;calll - <ExReleaseRundownProtection>;jmp  <NtSetInformationThread+>": 2,
                "cmpl %eax, %edx;jne  <NtSetInformationThread+>;movl (%edx), %esi;movl $, (%esp);movl %esi, (%esp)": 1,
                "jmp  <NtSetInformationThread+>;jmp - <NtSetInformationThread+>;movl -(%ebp), %eax;movl %eax, %fs:;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;jmp  <NtSetInformationThread+>;movl $, (%esp);leal -(%ebp), %eax": 1,
                "movl %eax, (%edx);jmp  <NtQueryInformationThread+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 6,
                "movl -(%ebp), %eax;movl %eax, %fs:;jmp  <NtQueryInformationThread+>;leal (%esi), %esi;jmp - <NtQueryInformationThread+>": 1,
                "jmp  <NtQueryInformationThread+>;movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%ebp), %ebx;movl %eax, (%ebx)": 1,
                "movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%ebp), %ebx;movl %eax, (%ebx);movl (%ecx), %eax": 1,
                "movl %eax, (%ebx);movl %edx, (%ebx);movl (%ecx), %eax;movl %eax, (%ebx);movsbl (%ecx), %eax": 1,
                "cmpl $, (%ebp);jne  <NtQueryInformationThread+>;jmp  <NtQueryInformationThread+>;movl -(%ebp), %ecx;movl , %eax": 1,
                "testb %al, %al;je  <NtQueryInformationThread+>;movl -(%ebp), %eax;movl (%eax), %edx;movl (%eax), %eax": 1,
                "movl (%eax), %eax;movl %eax, (%ebx);movl %edx, (%ebx);jmp  <NtQueryInformationThread+>;movl (%ebp), %eax": 1,
                "movzbl %al, %eax;movl (%ebp), %edx;movl %eax, (%edx);jmp  <NtQueryInformationThread+>;movl $, %eax": 3,
                "jmp  <NtQueryInformationThread+>;jmp - <NtQueryInformationThread+>;leal (%esi), %esi;leal (%edi), %edi;movl -(%ebp), %eax": 3,
                "calll *-;movl $, -(%ebp);jmp  <NtQueryInformationThread+>;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);jmp  <NtQueryInformationThread+>;cmpl $, (%ebp);je  <NtQueryInformationThread+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl %edi, %edx;movzbl %dl, %eax": 1,
                "calll  <DbgPrint>;testl %eax, %eax;je  <NtQueryInformationThread+>;movl $, (%esp);movl $, (%esp)": 2,
                "testl %eax, %eax;je  <NtQueryInformationThread+>;movl (%eax), %ebx;testl %ebx, %ebx;jne  <NtQueryInformationThread+>": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx;cmpl $, %edx;je  <NtQueryInformationThread+>": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;cmpl -, %eax;je  <PsReturnProcessNonPagedPoolQuota+>": 1,
                "calll - <PsReturnPoolQuota>;subl $, %esp;leave;retl $;pushl %ebp": 2,
                "cmpb $, %bl;jne  <PsReturnProcessPagedPoolQuota+>;movl -(%ebp), %ecx;calll - <ExfTryToWakePushLock>;movl %fs:, %eax": 1,
                "jne  <PsReturnProcessPagedPoolQuota+>;leal (%ebx), %eax;cmpl %eax, (%ebx);je  <PsReturnProcessPagedPoolQuota+>;cmpw $, (%ebx)": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;calll *-;cmpb $, %al;jbe  <PsReferencePrimaryToken+>": 2,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;testb $, (%ebx);jne  <PsReferencePrimaryToken+>": 2,
                "cmpxchgl %edx, (%ecx);cmpl $, %eax;je  <PsReferencePrimaryToken+>;movl -(%ebp), %ecx;calll - <ExfReleasePushLockShared>": 1,
                "subl $, %esp;cmpw $, (%ebx);js  <PsReferencePrimaryToken+>;movl $, (%esp);movl $, (%esp)": 1,
                "movw %ax, (%ebx);testw %ax, %ax;jne  <PsReferencePrimaryToken+>;leal (%ebx), %eax;cmpl %eax, (%ebx)": 1,
                "movl %esi, (%esp);calll - <ObReferenceObjectByHandle>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax": 1,
                "calll - <ObfDereferenceObject>;jmp  <PsReferencePrimaryToken+>;cmpb $, -(%ebp);jne  <PsReferencePrimaryToken+>;movl %edi, %edx": 1,
                "movl $, %ebx;testl %esi, %esi;je  <PsReferencePrimaryToken+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;js  <PsReferencePrimaryToken+>;movl (%ebp), %eax": 1,
                "movl %edi, %edx;movsbl %dl, %edi;movl %edi, (%esp);movl , %eax;addl $, %eax": 1,
                "movsbl %dl, %edi;movl %edi, (%esp);movl , %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <NtMapViewOfSection+>;subl $, %esp;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %edi, %edx;calll - <ObfDereferenceObject+>;testl %esi, %esi;js  <PsReferencePrimaryToken+>;movl (%ebp), %ecx": 1,
                "addl $, %ecx;movl $, %edx;calll - <ObQueryNameString+>;movl , %eax;movl %eax, (%esp)": 1,
                "calll  <IoCsqRemoveNextIrp+>;jmp - <NtOpenProcessTokenEx+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 2,
                "movl -(%ebp), %eax;movl %eax, %fs:;jmp  <NtOpenProcessTokenEx+>;jmp - <NtOpenProcessTokenEx+>;movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <PsReferencePrimaryToken+>;subl $, %esp": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ObOpenObjectByPointer>;subl $, %esp": 1,
                "movl %eax, (%esp);calll - <ObOpenObjectByPointer>;subl $, %esp;movl %eax, -(%ebp);movl -(%ebp), %ecx": 1,
                "calll - <ObOpenObjectByPointer>;subl $, %esp;movl %eax, -(%ebp);movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "jmp  <NtOpenProcessTokenEx+>;movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx);jmp  <NtOpenProcessTokenEx+>": 1,
                "jbe  <PsRevertThreadToSelf+>;calll *-;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "cmpl (%eax), %esi;je  <PsRevertThreadToSelf+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "calll - <ObfDereferenceObject>;calll - <PsGetCurrentThread>;movl %eax, (%esp);movl %ebx, (%esp);calll - <PsReturnProcessPagedPoolQuota+>": 1,
                "calll *-;cmpb $, %al;jbe  <PsImpersonateClient+>;calll *-;movzbl %al, %eax": 1,
                "movl (%ebx), %eax;movl (%eax), %edi;testb $, (%ebx);jne  <PsImpersonateClient+>;movl $, (%esp)": 1,
                "js  <PsImpersonateClient+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "je  <PsImpersonateClient+>;cmpw $, (%esi);jne  <PsImpersonateClient+>;calll - <KiCheckForKernelApcDelivery>;calll - <PsGetCurrentThread>": 2,
                "movzbl -(%ebp), %edx;movb %dl, (%esi);movzbl -(%ebp), %eax;movb %al, (%esi);movl (%ebp), %edx": 1,
                "calll - <ObReferenceObjectByHandle>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;js  <PsAssignImpersonationToken+>": 1,
                "calll - <ObfDereferenceObject>;movl $, %ebx;jmp  <PsAssignImpersonationToken+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <PsAssignImpersonationToken+>;movl -(%ebp), %eax;movl %eax, (%esp);calll  <SeTokenImpersonationLevel>;subl $, %esp": 1,
                "calll - <PsImpersonateClient>;subl $, %esp;movl %eax, %ebx;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl (%ebp), %esi;calll *-;cmpb $, %al;jbe  <PsAssignImpersonationToken+>;calll *-": 1,
                "jne  <PsAssignImpersonationToken+>;leal (%ebx), %esi;movl %esi, %ecx;calll - <ObQueryNameString+>;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);testb $, (%ebx);jne  <PsAssignImpersonationToken+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpw $, (%ebx);jne  <PsAssignImpersonationToken+>;calll - <KiCheckForKernelApcDelivery>;jmp  <PsAssignImpersonationToken+>;testb $, (%ebx)": 1,
                "jne  <PsAssignImpersonationToken+>;calll - <KiCheckForKernelApcDelivery>;movl $, -(%ebp);jmp  <PsAssignImpersonationToken+>;movl $, -(%ebp)": 1,
                "jne  <PsReferenceImpersonationToken+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl (%ebp), %eax;movb %dl, (%eax);movl (%ebx), %eax;movl (%eax), %esi;testb $, (%ebx)": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <PsReferenceImpersonationToken+>;cmpw $, (%ebx);jne  <PsReferenceImpersonationToken+>": 1,
                "cmpl %eax, (%ebx);je  <PsReferenceImpersonationToken+>;cmpw $, (%ebx);jne  <PsReferenceImpersonationToken+>;calll - <KiCheckForKernelApcDelivery>": 1,
                "calll - <ObfDereferenceObject>;movl -(%ebp), %ebx;leave;retl $;pushl %ebp": 1,
                "je  <PsDisableImpersonation+>;movl %fs:, %eax;movl (%eax), %ebx;movl %fs:, %eax;cmpl (%eax), %ebx": 1,
                "movl %fs:, %eax;cmpl (%eax), %ebx;je  <PsDisableImpersonation+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%esi), %eax;movl %eax, %ecx;movl %eax, %edx;andl $-, %edx;lock": 1,
                "movl %fs:, %eax;cmpl (%eax), %esi;je  <PsDisableImpersonation+>;movl $, (%esp);movl $, (%esp)": 1,
                "testb $, (%ebx);je  <PsRestoreImpersonation+>;movl (%eax), %edi;testl %esi, %esi;je  <PsRestoreImpersonation+>": 1,
                "je  <PsRestoreImpersonation+>;movl (%eax), %edi;testl %esi, %esi;je  <PsRestoreImpersonation+>;movl (%esi), %edx": 1,
                "movl %eax, -(%ebp);movl (%edx), %eax;movl %eax, -(%ebp);jmp  <PsRestoreImpersonation+>;movl %esi, %esi": 1,
                "movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <PsRestoreImpersonation+>;movl -(%ebp), %eax": 2,
                "jmp  <PsRestoreImpersonation+>;nop;jmp - <PsRestoreImpersonation+>;movl -(%ebp), %eax;movl %eax, %fs:": 2,
                "movl -(%ebp), %eax;movl %eax, %fs:;leal -(%ebp), %edx;movl %edx, (%ebp);movsbl -(%ebp), %esi": 1,
                "movl %eax, (%esp);calll  <SeImpersonateClient>;subl $, %esp;movl -(%ebp), %ecx;testl %ecx, %ecx": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);jmp  <PsRestoreImpersonation+>;jmp - <PsRestoreImpersonation+>;movl -(%ebp), %eax": 1,
                "movl $, -(%ebp);movl $, -(%ebp);jmp  <PsRestoreImpersonation+>;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %eax, -(%ebp);jmp  <PsRestoreImpersonation+>;nop;jmp - <PsRestoreImpersonation+>;movl -(%ebp), %eax": 1,
                "je  <PsRestoreImpersonation+>;movl %edi, %ecx;calll - <ExAcquireRundownProtection>;testb %al, %al;je  <PsRestoreImpersonation+>": 2,
                "calll - <PsTerminateSystemThread+>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;je  <PsRestoreImpersonation+>": 2,
                "subl $, %esp;movl $, %eax;jmp  <PsRestoreImpersonation+>;movl $, %eax;leal -(%ebp), %esp": 2,
                "movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%edx);jmp  <NtAlertThread+>;movl $, %eax": 3,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <NtAlertThread+>;nop": 2,
                "calll  <IoCsqRemoveNextIrp+>;leal (%esi), %esi;jmp - <NtAlertThread+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "testl %eax, %eax;je  <NtAlertThread+>;movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <KeInitializeApc>;subl $, %esp": 1,
                "leal (%esi), %esi;leal (%edi), %edi;jmp - <NtAlertThread+>;movl -(%ebp), %eax;movl %eax, %fs:": 2,
                "movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <PsSetJobUIRestrictionsClass+>;subl $, %esp": 1,
                "xorl (%edx), %ecx;movl %ecx, %edx;xorl %eax, %edx;xorl -(%ebp), %edx;movl %esi, %eax": 1,
                "cmpxchgl %edx, -;cmpl $, -;je - <NtAlertThread+>;leal -(%ebp), %esp;popl %ebx": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl (%ebx), %eax;movl (%eax), %edx": 1,
                "movl $, (%esp);calll  <DbgPrint>;movl (%ebx), %eax;movl (%eax), %edx;movl %edx, (%esp)": 1,
                "movl (%eax), %eax;movl %eax, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;testl %ecx, %ecx": 1,
                "movl (%eax), %eax;movl %eax, (%esp);calll - <NtAlertThread+>;rep  retl;pushl %ebp": 1,
                "movl $, %ebx;jmp  <NtAlertThread+>;testb %bl, %bl;je  <NtAlertThread+>;movl -(%ebp), %ecx": 1,
                "testl $, %edi;je  <NtAlertThread+>;movw $, (%edi);addl $, %edi;subl $, %edx": 1,
                "cmpl $, (%ecx);jne  <NtAlertThread+>;calll - <ObfDereferenceObject>;movl $, -(%ebp);jmp  <NtAlertThread+>": 1,
                "movl $, (%esp);movl $, (%esp);addl $, %ecx;movl %ecx, (%esp);calll - <KeInitializeSemaphore>": 1,
                "movl %edx, (%eax);movl %edx, (%eax);movl $, (%eax);movl -(%ebp), %ecx;movl (%ecx), %edx": 1,
                "movl (%ecx), %edx;movl %edx, (%eax);movl (%ecx), %edx;movl %edx, (%eax);jmp  <NtAlertThread+>": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%eax), %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl %eax, (%esp);calll - <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;subl $, %esp;movl %eax, -(%ebp)": 1,
                "subl $, %esp;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;jmp  <NtAlertThread+>;movl %fs:, %eax": 1,
                "jne  <NtAlertThread+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 5,
                "jne  <NtAlertThread+>;movl -(%ebp), %eax;testb $, (%eax);je  <NtAlertThread+>;cmpl $, (%ebp)": 1,
                "movl (%ebx), %ecx;leal (%ebx), %esi;movl %esi, (%eax);movl %ecx, (%eax);movl %edx, (%ecx)": 1,
                "movl %edx, (%ecx);movl %edx, (%ebx);movl -(%ebp), %eax;addl $, (%eax);movl -(%ebp), %eax": 1,
                "calll - <KeAcquireInStackQueuedSpinLockAtDpcLevel+>;subl $, %esp;movl -(%ebp), %ebx;leal (%ebx), %esi;testb $, (%ebx)": 1,
                "leal (%ebx), %eax;cmpl %eax, (%ebx);je  <NtAlertThread+>;cmpw $, (%ebx);jne  <NtAlertThread+>": 2,
                "calll - <NtQueryInformationAtom+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax;je  <NtAlertThread+>": 1,
                "movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %edx, (%esp);movl $, (%esp)": 1,
                "calll - <ObQueryNameString+>;jmp  <NtAlertThread+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "calll  <SeDeleteAccessState>;subl $, %esp;cmpl $, -(%ebp);jns  <NtAlertThread+>;jmp  <NtAlertThread+>": 1,
                "movl %eax, %fs:;jmp  <NtAlertThread+>;leal (%esi), %esi;leal (%edi), %edi;jmp - <NtAlertThread+>": 1,
                "jne - <NtAlertThread+>;movl $, -(%ebp);movl -(%ebp), %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movl %ebx, %eax;movl $, %edx;testl %ebx, %ebx;jne  <PsCreateSystemThread+>;movl -, %edx": 1,
                "jne  <PsCreateSystemThread+>;movl -, %edx;movl $, %eax;movl (%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %edi, %ecx;calll - <ObQueryNameString+>;testb %al, %al;je  <PsLookupThreadByThreadId+>;movl (%ebp), %eax": 1,
                "subl $, %esp;movl %fs:, %eax;movl (%eax), %eax;cmpb $, (%eax);je  <PsSetThreadWinThread+>": 1,
                "movl %eax, (%edx);cmpl $, (%ebp);je  <PsSetThreadWinThread+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%edx), %eax;movl %eax, -(%ebp);movl (%edx), %eax;movl %eax, -(%ebp);movl $, (%esp)": 1,
                "jmp  <NtOpenThread+>;movl (%ebp), %edx;cmpl $, (%edx);setne %al;movl (%edx), %ebx": 1,
                "je  <NtOpenThread+>;testb %al, %al;jne  <NtOpenThread+>;movl , %eax;addl $, %eax": 1,
                "testl $, %eax;je  <NtOpenThread+>;orl $, -(%ebp);jmp  <NtOpenThread+>;orl %eax, -(%ebp)": 1,
                "jmp  <NtOpenThread+>;leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %ecx;movl (%ecx), %eax": 1,
                "movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx);jmp  <NtOpenThread+>;movl $, %eax": 1,
                "movl %eax, (%edx);jmp  <NtOpenThread+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 1,
                "movl $, -(%ebp);jmp  <NtOpenThread+>;movl $, -(%ebp);movl -(%ebp), %eax;leal -(%ebp), %esp": 1,
                "movl %eax, %ebx;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %esi;calll *-": 1,
                "je  <NtOpenThread+>;movl $, %eax;cmpl $, (%ebx);jne  <NtOpenThread+>;cmpb $, (%ebx)": 1,
                "movl %fs:, %eax;movl (%eax), %edi;calll *-;cmpb $, %al;jbe  <NtOpenThread+>": 2,
                "calll *-;cmpb $, %al;jbe  <NtOpenThread+>;movl $, (%esp);movl $, (%esp)": 2,
                "addl $, %eax;movw %ax, (%edi);testw %ax, %ax;jne  <NtOpenThread+>;leal (%edi), %eax": 1,
                "calll - <MmFreeMappingAddress+>;subl $, %esp;movl $, (%esp);movl %esi, (%esp);calll *-": 1,
                "testl %eax, %eax;js  <NtOpenThread+>;movl $, (%ebx);cmpl $, (%ebx);je  <NtOpenThread+>": 1,
                "testl %eax, %eax;jns  <NtOpenThread+>;movl $, (%ebx);jmp  <NtOpenThread+>;movl $, %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %edx;movl %edx, -;movl (%eax), %edx": 3,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;jns  <PsEstablishWinCallouts+>;jmp  <PsEstablishWinCallouts+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <PsEstablishWinCallouts+>": 1,
                "jmp  <PsEstablishWinCallouts+>;nop;jmp - <PsEstablishWinCallouts+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "cmpl -, %eax;jbe  <PsEstablishWinCallouts+>;leal -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%ebx);movl (%ebx), %eax;movl -(%ebp), %ebx;leave;retl $": 1,
                "cmpl $, %eax;je  <PsEstablishWinCallouts+>;cmpl $, %eax;je  <PsEstablishWinCallouts+>;cmpl $, %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <ExAcquireResourceExclusiveLite>;subl $, %esp;jmp  <PsEstablishWinCallouts+>": 1,
                "subl $, %esp;movl $, (%esp);movl $, (%esp);calll - <ExAllocatePool>;subl $, %esp": 1,
                "cmpb $, %al;jbe  <PsEstablishWinCallouts+>;movl %fs:, %eax;movl (%eax), %edx;movzbl (%eax), %ecx": 1,
                "cmpl %ebx, %eax;jb  <PsEstablishWinCallouts+>;movl %ebx, (%esi);movl $, %edx;jmp  <PsEstablishWinCallouts+>": 1,
                "movl %ebx, (%esi);movl $, %edx;jmp  <PsEstablishWinCallouts+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "movl %eax, (%esi);movl (%ecx), %edx;testl %edx, %edx;je  <PsEstablishWinCallouts+>;cmpl %eax, %ebx": 1,
                "movl (%ecx), %edx;testl %edx, %edx;je  <PsEstablishWinCallouts+>;cmpl %eax, %ebx;jbe  <PsEstablishWinCallouts+>": 1,
                "testl %edx, %edx;je  <PsEstablishWinCallouts+>;cmpl %eax, %ebx;jbe  <PsEstablishWinCallouts+>;cmpl %edx, %ebx": 1,
                "movl %edx, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll - <PsEstablishWinCallouts+>": 1,
                "movl %eax, (%esp);calll - <ProbeForRead>;subl $, %esp;cmpl $, (%ebp);je  <RtlWalkFrameChain+>": 1,
                "movb $, -(%ebp);jmp  <RtlWalkFrameChain+>;movb $, -(%ebp);cmpl %edi, -(%ebp);jae  <RtlWalkFrameChain+>": 1,
                "movl %edi, (%esi,%edx,);cmpb $, -(%ebp);je  <RtlWalkFrameChain+>;movl %eax, -(%ebp);addl $, %edx": 1,
                "movb $, -(%ebp);movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;nop": 1,
                "leal (%esi), %esi;jmp - <RtlWalkFrameChain+>;movl $, %edx;jmp  <RtlWalkFrameChain+>;movl $, %edx": 1,
                "jmp  <RtlWalkFrameChain+>;movl %eax, -(%ebp);jmp  <RtlWalkFrameChain+>;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "addl $, %eax;movl %eax, (%esp);calll - <KeInitializeEvent>;subl $, %esp;movl $, %eax": 1,
                "movl %eax, (%esp);calll - <ExiTryToAcquireFastMutex+>;subl $, %esp;movl $, (%ebx);movl -(%ebp), %ebx": 1,
                "movl %eax, %ebx;testl %eax, %eax;je  <RtlWalkFrameChain+>;movl %esi, (%esp);movl $, (%esp)": 2,
                "movl %eax, (%esp);calll - <ExFreePoolWithTag>;subl $, %esp;leave;retl": 2,
                "movl (%ebp), %ebx;movl %ebx, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll - <ExiTryToAcquireFastMutex+>;subl $, %esp": 2,
                "movl %eax, (%esp);calll - <ExiTryToAcquireFastMutex+>;subl $, %esp;testl %eax, %eax;je  <RtlWalkFrameChain+>": 2,
                "jbe  <RtlWalkFrameChain+>;movl $, (%esp);movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "movw %dx, (%ebx);subw $, %dx;movw %dx, (%ebx);movl $, %eax;jmp  <RtlWalkFrameChain+>": 1,
                "movl (%ebp), %eax;shll $, %eax;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl $, %esi;movl %esi, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp": 1,
                "movzbl %al, %eax;movl %eax, (%esp);movl %ebx, (%esp);movl (%ebp), %edx;movl (%edx), %eax": 1,
                "orl %eax, %edi;andl $, %edi;movl %edi, (%esp);movl %ebx, (%esp);movl (%ebp), %ecx": 1,
                "movl %eax, (%esp);movl %edx, (%esp);calll  <LdrAccessResource+>;movl %eax, %edx;movl (%ebp), %eax": 1,
                "movl %edx, (%eax);testl %edx, %edx;je  <RtlWalkFrameChain+>;movl $, %eax;testl %esi, %esi": 1,
                "movl %eax, (%esp);calll  <memmove>;jmp  <RtlWalkFrameChain+>;leal (%esi), %esi;movl $, %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl , %eax;movl %eax, (%ebx)": 1,
                "andl $, %eax;movw %ax, (%ebx);movl , %eax;movw %ax, (%ebx);movl , %eax": 1,
                "je  <RtlGetVersion+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 6,
                "movl %edx, %eax;shrl $, %eax;andl $, %eax;jmp  <RtlGetVersion+>;addl $, %ebx": 1,
                "movl $, %eax;jmp  <RtlGetVersion+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx": 2,
                "movl %eax, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <RtlGetVersion+>": 1,
                "jne  <RtlGetVersion+>;leal (%esi), %eax;cmpl %eax, (%esi);je  <RtlGetVersion+>;cmpw $, (%esi)": 1,
                "movl (%ebx), %edx;movl %eax, (%esi);movl %edx, (%esi);movl (%ebx), %eax;movl %eax, (%esi)": 1,
                "movl %fs:, %eax;movl (%eax), %edi;movl %fs:, %eax;cmpl (%eax), %edi;je  <RtlGetVersion+>": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll - <ExAcquireResourceSharedLite>;subl $, %esp;movl (%ebx), %eax": 1,
                "movl %eax, (%esi);movl %edx, (%esi);movl (%ebx), %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax": 1,
                "movl (%ebx), %ecx;calll - <ExReleaseResourceLite>;movl %fs:, %eax;movl (%eax), %ebx;movl %fs:, %eax": 1,
                "cmpw $, (%ebx);js  <RtlGetVersion+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "je  <RtlGetVersion+>;movl %edi, %eax;testb %al, %al;jne  <RtlGetVersion+>;movl $, %eax": 1,
                "movl %eax, (%esp);calll  <SeAccessCheck+>;subl $, %esp;testl %eax, %eax;jns  <RtlGetVersion+>": 1,
                "testl %edi, %edi;jne  <RtlGetVersion+>;movl $, (%ebx);jmp  <RtlGetVersion+>;leal (%ebx), %eax": 1,
                "subl $, %esp;movl (%ebp), %ebx;calll *-;cmpb $, %al;jbe  <SeLockSubjectContext+>": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%ebx), %edi;movl (%ebx), %esi": 1,
                "movl (%ebx), %edi;movl (%ebx), %esi;movl %fs:, %eax;movl (%eax), %ebx;movl %fs:, %eax": 1,
                "movl (%ebx), %esi;movl %fs:, %eax;movl (%eax), %ebx;movl %fs:, %eax;cmpl (%eax), %ebx": 1,
                "cmpl (%eax), %ebx;je  <SeLockSubjectContext+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "calll - <ExAcquireResourceSharedLite>;subl $, %esp;testl %esi, %esi;je  <SeLockSubjectContext+>;movl %fs:, %eax": 1,
                "movw %ax, (%ebx);testw %ax, %ax;jne  <SeUnlockSubjectContext+>;leal (%ebx), %eax;cmpl %eax, (%ebx)": 2,
                "subl $, %esp;movl (%ebp), %ebx;calll *-;cmpb $, %al;jbe  <SeReleaseSubjectContext+>": 1,
                "subl $, %esp;movl (%ebp), %esi;movl (%ebp), %edi;movl (%ebp), %ebx;movl %edi, -(%ebp)": 1,
                "movl (%ebp), %ebx;movl %edi, -(%ebp);calll *-;cmpb $, %al;jbe  <SeReleaseSubjectContext+>": 1,
                "rep  stosl %eax, %es:(%edi);testb $, %dl;je  <SeReleaseSubjectContext+>;movw $, (%edi);addl $, %edi": 1,
                "cmpb $, (%edx);je  <SeReleaseSubjectContext+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl -(%ebp), %eax;jb - <SeReleaseSubjectContext+>;addl %eax, %edx;testb $, %cl;je  <SeReleaseSubjectContext+>": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %ebx, (%esp);movl %eax, (%esp);calll - <SeReleaseSubjectContext+>": 1,
                "movl %ebx, (%esp);calll - <SeReleaseSubjectContext>;subl $, %esp;movl -(%ebp), %ebx;leave": 1,
                "cmpb $, %al;jbe  <SeSetAccessStateGenericMapping+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%eax), %eax;movl (%ebx), %edx;movl %edx, (%eax)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%esi), %ebx;testl %ebx, %ebx;jne  <SeCreateClientSecurityFromSubjectContext+>": 1,
                "movl $, (%esp);movl %eax, (%esp);andl $, %edi;movl %edi, (%esp);movl (%ebp), %eax": 1,
                "movl %edi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <RtlGetVersion+>": 1,
                "cmpb $, (%eax);jne  <SeCreateClientSecurityFromSubjectContext+>;movl %ebx, %ecx;calll - <ObfDereferenceObject>;movl %esi, %eax": 1,
                "andl $, %edi;movl %edi, (%esp);movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "calll *-;cmpb $, %al;jbe  <SeImpersonateClient+>;calll *-;movzbl %al, %eax": 7,
                "movl %eax, (%esp);calll - <SeImpersonateClientEx>;subl $, %esp;leave;retl $": 1,
                "movl %eax, (%esp);calll  <RtlCreateAcl>;subl $, %esp;movl , %eax;movl %eax, (%esp)": 6,
                "movl %ebx, (%esp);calll  <RtlAddAccessAllowedAce>;subl $, %esp;movl $, %eax;jmp  <SeImpersonateClient+>": 1,
                "movl %edx, (%ecx);movl (%ecx), %eax;testl %eax, %eax;je  <SeImpersonateClient+>;movzwl (%ecx), %edx": 1,
                "je  <SeImpersonateClient+>;movl $, (%esp);movzwl %dx, %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl %edx, %eax;addl $, %eax;movl -(%ebp), %ecx;movw %ax, (%ecx);jmp  <SeImpersonateClient+>": 1,
                "jmp - <SeImpersonateClient+>;cmpl $, -(%ebp);je  <SeImpersonateClient+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, -(%ebp);leal (%esi), %esi;movl -(%ebp), %eax;movl %eax, %fs:;jmp  <SeImpersonateClient+>": 1,
                "movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <ObQueryNameString>": 1,
                "movl %eax, (%esp);movl %edi, (%esp);calll - <ObQueryNameString>;subl $, %esp;cmpl $, %eax": 1,
                "cmpl $, %eax;je  <SeImpersonateClient+>;cmpl $, %eax;je  <SeImpersonateClient+>;movl $, %ebx": 1,
                "movl $, %ebx;cmpl $, %eax;jne  <SeImpersonateClient+>;movl -(%ebp), %eax;cmpl $, %eax": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <PsSetCreateThreadNotifyRoutine+>;subl $, %esp;movl %eax, %esi": 1,
                "movl -(%ebp), %eax;movzwl (%eax), %edx;addl $, %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movzwl (%eax), %edx;addl $, %edx;movl %edx, (%esp);movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl %eax, (%ebx);movl %ebx, (%edi);jmp  <SeImpersonateClient+>;movl $, %esi;jmp  <SeImpersonateClient+>": 1,
                "cmpl $, %ebx;jbe  <SeImpersonateClient+>;movl %ebx, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <SeImpersonateClient+>;leal -(%ebp), %eax;movl %eax, (%esp);calll - <SeCaptureSubjectContext>;subl $, %esp": 1,
                "movl %esi, %eax;testb %al, %al;je  <SeImpersonateClient+>;movl (%ebp), %eax;subl $, %eax": 1,
                "jmp  <SeImpersonateClient+>;jmp - <SeImpersonateClient+>;movl -(%ebp), %eax;movl %eax, %fs:;movl $, (%esp)": 1,
                "calll  <DbgPrint>;jmp  <SePrivilegeObjectAuditAlarm+>;movl (%ebp), %ecx;movl %esi, %edx;leal -(%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <SePrivilegeObjectAuditAlarm+>;calll - <PsGetCurrentThread>": 1,
                "movl %eax, %esi;movl %eax, (%esp);calll - <PsIsThreadImpersonating>;subl $, %esp;testb %al, %al": 1,
                "movl %eax, (%esp);calll - <SeImpersonateClient+>;subl $, %esp;testb %bl, %bl;je  <SePrivilegeObjectAuditAlarm+>": 1,
                "movl %eax, (%esp);calll - <ExFreePool>;subl $, %esp;movl %esi, %eax;testb %al, %al": 1,
                "movl %esi, %eax;testb %al, %al;je  <SePrivilegeObjectAuditAlarm+>;movl $, %esi;testl %edi, %edi": 1,
                "calll  <DbgPrint>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;movl $, %esi;jmp  <SePrivilegeObjectAuditAlarm+>": 2,
                "movl (%ebp), %edx;movl (%edx), %eax;cmpl $, %eax;ja  <SePrivilegeObjectAuditAlarm+>;leal (%eax,%eax,), %eax": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll  <memmove>;jmp  <SePrivilegeObjectAuditAlarm+>": 1,
                "leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <SePrivilegeObjectAuditAlarm+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "leal -(%ebp), %ebx;movl %ebx, (%esp);calll - <SeCaptureSubjectContext>;subl $, %esp;movl -(%ebp), %eax": 1,
                "movl %ebx, (%esp);calll - <SeCaptureSubjectContext>;subl $, %esp;movl -(%ebp), %eax;movzbl -(%ebp), %edx": 1,
                "movl %ebx, (%esp);calll - <SeReleaseSubjectContext>;subl $, %esp;movl $, %esi;jmp  <SePrivilegeObjectAuditAlarm+>": 1,
                "movl $, %esi;movl -(%ebp), %eax;movl %eax, %fs:;cmpl $, (%ebp);je  <SePrivilegeObjectAuditAlarm+>": 1,
                "testl %eax, %eax;je  <SePrivilegeObjectAuditAlarm+>;movl -(%ebp), %eax;movl $, (%esp);movl %eax, (%esp)": 1,
                "cmpl %edi, (%eax);jne  <SeUnregisterLogonSessionTerminatedRoutine+>;movl -(%ebp), %edi;testb $, (%eax);je  <SeUnregisterLogonSessionTerminatedRoutine+>": 1,
                "jne  <SeUnregisterLogonSessionTerminatedRoutine+>;jmp  <SeUnregisterLogonSessionTerminatedRoutine+>;addl $, %edx;addl $, %eax;cmpl %ecx, %edx": 1,
                "movl $, %edx;movl %edi, -(%ebp);jmp - <SeUnregisterLogonSessionTerminatedRoutine+>;movl $, %eax;cmpl $, -(%ebp)": 1,
                "movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;leal (%esi), %esi;jmp - <SeUnregisterLogonSessionTerminatedRoutine+>": 1,
                "leal (%esi), %esi;jmp - <SeUnregisterLogonSessionTerminatedRoutine+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax": 1,
                "jmp - <SeUnregisterLogonSessionTerminatedRoutine+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 2,
                "nop;je  <SeUnregisterLogonSessionTerminatedRoutine+>;movl -(%ebp), %edx;cmpl (%ebp), %edx;ja  <SeUnregisterLogonSessionTerminatedRoutine+>": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <SeUnregisterLogonSessionTerminatedRoutine+>": 1,
                "leal (%edi), %edi;jmp - <SeUnregisterLogonSessionTerminatedRoutine+>;movl -(%ebp), %eax;movl %eax, %fs:;movl -(%ebp), %eax": 1,
                "movl (%edx), %eax;movl %eax, (%esp);calll - <ExFreePool>;subl $, %esp;jmp  <SeUnregisterLogonSessionTerminatedRoutine+>": 1,
                "jmp  <SeUnregisterLogonSessionTerminatedRoutine+>;movl $, -(%ebp);movl -(%ebp), %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "calll - <ExFreePool>;subl $, %esp;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 2,
                "cmpl $, %edx;jbe  <SeAppendPrivileges+>;leal (%eax,%eax,), %eax;movl -(%ebp), %edx;leal (%edx,%eax,), %eax": 1,
                "calll  <memmove>;movl (%ebx), %eax;addl %eax, (%edi);movl (%ebp), %edx;cmpb $, (%edx)": 1,
                "subl $, %esp;movl (%esi), %eax;testl %eax, %eax;jne  <SePrivilegeCheck+>;movl (%esi), %eax": 1,
                "addl $, %ebx;movl %ebx, (%esp);movl %eax, (%esp);calll - <SeUnregisterLogonSessionTerminatedRoutine+>;subl $, %esp": 1,
                "jmp  <SePrivilegeCheck+>;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "subl $, %esp;movl %eax, %esi;movl %ebx, (%esp);calll - <SeReleaseSubjectContext>;subl $, %esp": 2,
                "shrl $, %ebx;cmpl %ecx, %ebx;jne  <SeSinglePrivilegeCheck+>;movl $, (%esp);movl %edi, (%esp)": 1,
                "cmpl %ecx, %ebx;jne  <SeSinglePrivilegeCheck+>;movl $, (%esp);movl %edi, (%esp);movl (%ebp), %edx": 1,
                "movl $, %eax;nop;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <SeSinglePrivilegeCheck+>": 1,
                "leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <SeSinglePrivilegeCheck+>;movl -(%ebp), %eax;movl (%eax), %eax": 2,
                "jmp - <SeSinglePrivilegeCheck+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %edi;jmp  <SeSinglePrivilegeCheck+>": 2,
                "js  <SeSinglePrivilegeCheck+>;movl -(%ebp), %ecx;cmpl $, (%ecx);jne  <SeSinglePrivilegeCheck+>;cmpl $, (%ecx)": 1,
                "movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll  <memmove>;movzbl -(%ebp), %eax": 1,
                "movl (%ebp), %edx;movb %al, (%edx);movl $, %edi;jmp  <SeSinglePrivilegeCheck+>;movl $, %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %edi;jmp  <SeSinglePrivilegeCheck+>;nop": 1,
                "nop;leal (%esi), %esi;jmp - <SeSinglePrivilegeCheck+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "movl %edx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <SeUnregisterLogonSessionTerminatedRoutine+>;subl $, %esp": 1,
                "movl %eax, (%edx);movl %eax, (%esp);calll  <RtlLengthRequiredSid>;subl $, %esp;movl %eax, %esi": 2,
                "movl $, (%esp);movl %eax, (%esp);calll  <RtlCreateSecurityDescriptor>;subl $, %esp;movl $, (%esp)": 6,
                "calll  <RtlLengthSid>;subl $, %esp;movl %eax, %ebx;movl $, %eax;movl %edi, %edx": 1,
                "andl $, %edx;movl %edx, -(%ebp);je  <SeSinglePrivilegeCheck+>;leal (%ebx), %eax;movl %edi, %edx": 1,
                "jbe  <SeSinglePrivilegeCheck+>;movl %eax, (%esi);movl $, %eax;jmp  <SeSinglePrivilegeCheck+>;movl %eax, (%esi)": 1,
                "orw $, (%edx);movl $, (%esp);addl $, %ebx;movl %ebx, (%esp);movl %edi, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl %edi, (%esp);calll  <RtlAddAccessAllowedAce>;subl $, %esp": 1,
                "movl %edi, (%esp);calll  <RtlAddAccessAllowedAce>;subl $, %esp;testl %eax, %eax;js  <SeSinglePrivilegeCheck+>": 1,
                "calll  <RtlAddAccessAllowedAce>;subl $, %esp;testl %eax, %eax;js  <SeSinglePrivilegeCheck+>;movl (%ebp), %eax": 1,
                "js  <SeSinglePrivilegeCheck+>;movl (%ebp), %eax;movl %esi, (%eax);movl $, %eax;jmp  <SeSinglePrivilegeCheck+>": 1,
                "subl $, %esp;movl (%ebp), %edx;cmpl $, (%edx);jne  <SeSinglePrivilegeCheck+>;movl (%edx), %eax": 1,
                "je  <SeSinglePrivilegeCheck+>;movl $, (%esp);movl $, (%esp);movl %eax, (%esp);calll - <ProbeForRead>": 1,
                "jne  <SeSinglePrivilegeCheck+>;movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <SeSinglePrivilegeCheck+>": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, -(%ebp);jmp  <SeSinglePrivilegeCheck+>;jmp - <SeSinglePrivilegeCheck+>": 1,
                "testl %eax, %eax;je  <SeSinglePrivilegeCheck+>;cmpl $, (%eax);jne  <SeSinglePrivilegeCheck+>;movl $, (%esp)": 1,
                "jmp  <SeSinglePrivilegeCheck+>;movl $, -(%ebp);jmp  <SeSinglePrivilegeCheck+>;movl $, -(%ebp);jmp  <SeSinglePrivilegeCheck+>": 1,
                "pushl %ebx;subl $, %esp;movzbl (%ebp), %eax;movb %al, -(%ebp);movzbl (%ebp), %eax": 1,
                "cmpl $, (%ebp);jne  <SeCaptureSecurityDescriptor+>;movl (%ebp), %edx;movl $, (%edx);movl $, %eax": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl %esi, %edx;andw $, %dx;movw %dx, -(%ebp)": 1,
                "movl %esi, %edx;andw $, %dx;movw %dx, -(%ebp);je  <SeCaptureSecurityDescriptor+>;jmp  <SeCaptureSecurityDescriptor+>": 1,
                "sbbl %eax, %eax;notl %eax;andl %eax, %edx;movl %edx, -(%ebp);movl $, -(%ebp)": 1,
                "addl $, %eax;andl $-, %eax;addl %eax, -(%ebp);cmpw $, -(%ebp);je  <SeCaptureSecurityDescriptor+>": 1,
                "jmp  <SeCaptureSecurityDescriptor+>;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "movzbl -(%ebp), %edx;movl -(%ebp), %eax;movb %dl, (%eax);movzbl -(%ebp), %edx;movb %dl, (%eax)": 1,
                "movb %dl, (%eax);movl %esi, %eax;orw $, %ax;movl -(%ebp), %edx;movw %ax, (%edx)": 1,
                "movw %ax, (%edx);cmpl $, -(%ebp);je  <SeCaptureSecurityDescriptor+>;movl %edi, %edx;jmp  <SeCaptureSecurityDescriptor+>": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %edx;addl %ebx, %edx;movl %edx, -(%ebp);movl -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);je  <SeCaptureSecurityDescriptor+>;movl %edx, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %edx, (%esp);calll  <RtlValidSid>;subl $, %esp;testb %al, %al;jne  <SeCaptureSecurityDescriptor+>": 2,
                "movl $, (%eax);movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %edx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <memmove>;cmpl $, -(%ebp)": 3,
                "movl %eax, (%esp);calll  <memmove>;movl -(%ebp), %edx;cmpl %edx, -(%ebp);je  <SeCaptureSecurityDescriptor+>": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl -(%ebp), %edx;movl %edx, %fs:;jmp  <SeCaptureSecurityDescriptor+>": 1,
                "movl (%ebp), %eax;movl (%eax), %ebx;testl %ebx, %ebx;jne  <SeQuerySecurityDescriptorInfo+>;movl (%ebp), %esi": 1,
                "movl $, (%esi);movl $, %eax;jmp  <SeQuerySecurityDescriptorInfo+>;movl (%ebp), %esi;movl $, (%esi)": 1,
                "je  <SeQuerySecurityDescriptorInfo+>;addl %ebx, %eax;movl %eax, -(%ebp);movl %eax, (%esp);calll  <RtlLengthSid>": 2,
                "orl %eax, %edi;jmp  <SeQuerySecurityDescriptorInfo+>;movl $, -(%ebp);movl $, -(%ebp);jmp  <SeQuerySecurityDescriptorInfo+>": 2,
                "addl $, %ecx;andl $, %ecx;movl %ecx, -(%ebp);jmp  <SeQuerySecurityDescriptorInfo+>;movl $, -(%ebp)": 1,
                "addl %ebx, %edx;movl %edx, -(%ebp);movzwl (%edx), %edx;addl $, %edx;andl $, %edx": 2,
                "movl %esi, (%ecx);movl $, %eax;jmp  <SeQuerySecurityDescriptorInfo+>;movl $, (%esp);movl (%ebp), %eax": 1,
                "movl (%ebp), %edx;movl $, (%edx);movl -(%ebp), %ebx;addl %edi, %ebx;cmpl $, -(%ebp)": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll  <memmove>;subl (%ebp), %ebx;movl (%ebp), %edx": 1,
                "cmpb $, %al;jbe  <SeReleaseSecurityDescriptor+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "testl %edi, %edi;je  <SeReleaseSecurityDescriptor+>;movl %esi, %eax;testb %al, %al;jne  <SeReleaseSecurityDescriptor+>": 1,
                "cmpw $, (%ebx);js  <SeSetSecurityDescriptorInfo+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edi;testl $, %edi": 1,
                "testl $, %edi;je  <SeSetSecurityDescriptorInfo+>;movl (%esi), %edx;movl %edx, -(%ebp);testl %edx, %edx": 1,
                "subl $, %esp;addl $, %eax;andl $-, %eax;movl %eax, -(%ebp);jmp  <SeSetSecurityDescriptorInfo+>": 2,
                "movl %ecx, -(%ebp);testl $, %edi;je  <SeSetSecurityDescriptorInfo+>;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll  <RtlLengthSid>;subl $, %esp;addl $, %eax": 2,
                "je  <SeSetSecurityDescriptorInfo+>;movl (%ebx), %ecx;testl %ecx, %ecx;je  <SeSetSecurityDescriptorInfo+>;addl %ebx, %ecx": 1,
                "movl $, -(%ebp);movl $, -(%ebp);andl $, %edx;orl %edx, %eax;testl $, %edi": 1,
                "movl %esi, (%ebx);addl -(%ebp), %esi;cmpl $, -(%ebp);je  <SeSetSecurityDescriptorInfo+>;movl -(%ebp), %eax": 1,
                "movl (%ebp), %edx;cmpl $, (%edx);je  <SeSetSecurityDescriptorInfoEx+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %ecx;jmp  <SeValidSecurityDescriptor+>;cmpb $, (%edx);je  <SeValidSecurityDescriptor+>;movl $, (%esp)": 2,
                "calll  <DbgPrint>;movl $, %ecx;jmp  <SeValidSecurityDescriptor+>;cmpw $, (%edx);js  <SeValidSecurityDescriptor+>": 1,
                "cmpw $, (%edx);js  <SeValidSecurityDescriptor+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl %eax, (%ebp);jae  <SeValidSecurityDescriptor+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 4,
                "movl $, (%esp);calll  <DbgPrint>;movl $, %ecx;jmp  <SeValidSecurityDescriptor+>;movzbl (%ecx), %ecx": 1,
                "jmp  <SeValidSecurityDescriptor+>;addl %edx, %ecx;movzbl (%ecx), %ebx;subl $, %ebx;cmpb $, %bl": 1,
                "je  <SeValidSecurityDescriptor+>;testb $, %bl;je  <SeValidSecurityDescriptor+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %ecx;jmp  <SeValidSecurityDescriptor+>;addl %ebx, %edx;movzbl (%edx), %ecx;subl $, %ecx": 1,
                "addl %ebx, %edx;movzbl (%edx), %ecx;subl $, %ecx;cmpb $, %cl;jbe  <SeValidSecurityDescriptor+>": 1,
                "subl $, %ecx;cmpb $, %cl;jbe  <SeValidSecurityDescriptor+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll *-;cmpb $, %al;jbe  <SeDeassignSecurity+>;calll *-;movzbl %al, %eax": 1,
                "cmpb $, %al;jbe  <SeDeassignSecurity+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "addl %ebx, %eax;movl %eax, -(%ebp);jmp  <SeAssignSecurity+>;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "cmpl $, -(%ebp);jne  <SeAssignSecurity+>;testl %edi, %edi;je  <SeAssignSecurity+>;movl (%edi), %eax": 1,
                "je  <SeAssignSecurity+>;testw %ax, %ax;jns  <SeAssignSecurity+>;movl (%ebx), %eax;leal (%ebx,%eax), %edx": 1,
                "movl %edx, -(%ebp);jmp  <SeAssignSecurity+>;movl -(%ebp), %eax;orl $, %eax;movl %eax, -(%ebp)": 1,
                "jmp  <SeAssignSecurity+>;movl $, -(%ebp);testl %ebx, %ebx;je  <SeAssignSecurity+>;movzwl (%ebx), %eax": 1,
                "cmpl $, %eax;sbbl %eax, %eax;notl %eax;andl %eax, %ebx;movl %ebx, -(%ebp)": 1,
                "movzwl (%eax), %esi;addl $, %esi;andl $, %esi;jmp  <SeAssignSecurity+>;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, %esi;jmp  <SeAssignSecurity+>;movl $, -(%ebp);movl $, %esi": 1,
                "movl -(%ebp), %edx;leal (%eax,%edx), %edi;addl -(%ebp), %edi;addl %esi, %edi;movl $, (%esp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll  <RtlCreateSecurityDescriptor>;subl $, %esp;movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <SeUnlockSubjectContext>;subl $, %esp;movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, %eax;jmp  <SeAssignSecurity+>;movl -(%ebp), %edx": 1,
                "movl $, %edx;testb %al, %al;je  <SeAssignSecurity+>;calll - <SeSinglePrivilegeCheck+>;movl $, %edx": 1,
                "addl $, %ecx;movl $, %edx;calll - <ObQueryNameString+>;calll  <SeAccessCheck+>;movl %fs:, %edx": 1,
                "movl %fs:, %edx;movl (%edx), %edx;movl (%edx), %ecx;addl $, %ecx;movl %eax, %edx": 2,
                "andl $-, %eax;movl %eax, (%esp);calll - <ObInsertObject>;subl $, %esp;testl %eax, %eax": 1,
                "calll - <ZwClose>;subl $, %esp;testl %eax, %eax;jns  <SeAssignSecurity+>;movl $, (%esp)": 2,
                "cmpl $, %ebx;jb  <SeAssignSecurity+>;cmpl $, %ebx;je  <SeAssignSecurity+>;cmpl $, %ebx": 1,
                "jne  <SeAssignSecurity+>;movl (%ebp), %eax;movl $, (%eax);movl $, %eax;jmp  <SeAssignSecurity+>": 3,
                "movl (%ebp), %edi;movl (%ebp), %ecx;movl (%ecx), %esi;testl %esi, %esi;jne  <SeAssignSecurity+>": 1,
                "movl %esi, (%esp);calll - <SeUnregisterLogonSessionTerminatedRoutine+>;subl $, %esp;testb %al, %al;jne  <SeAssignSecurity+>": 1,
                "orl (%ecx), %eax;movl (%ebp), %edx;movl %eax, (%edx);jmp  <SeAssignSecurity+>;orl (%ebp), %eax": 1,
                "jmp  <SeAssignSecurity+>;movl (%ebp), %eax;movl $, (%eax);movl (%ebp), %edx;movl $, (%edx)": 1,
                "movl $, %eax;jmp  <SeAssignSecurity+>;testb $, (%ebp);je  <SeAssignSecurity+>;addl $, %ebx": 1,
                "movl -(%ebp), %eax;notl %eax;andl -(%ebp), %eax;orl %eax, -(%ebp);jmp  <SeAssignSecurity+>": 2,
                "orl %eax, -(%ebp);jmp  <SeAssignSecurity+>;testb %al, %al;jne  <SeAssignSecurity+>;movl %edx, (%esp)": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %eax;orl $, %eax;notl %eax;testl %edi, %eax": 1,
                "orl $, %eax;notl %eax;testl %edi, %eax;je  <SeAssignSecurity+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %eax;movl $, (%eax);movl $, %eax;jmp  <SeAssignSecurity+>;addl $, %ebx": 1,
                "movl $, (%edx);movl (%ebp), %ecx;movl $, (%ecx);movl $, %eax;jmp  <SeAssignSecurity+>": 1,
                "movl $, (%ecx);movl $, %eax;jmp  <SeAssignSecurity+>;testb %al, %al;jne  <SeAssignSecurity+>": 1,
                "je  <SeAccessCheck+>;movl (%ebp), %ebx;andl $, %ebx;orl (%ebp), %ebx;movl (%ebp), %eax": 1,
                "movl (%ebp), %ebx;andl $, %ebx;orl (%ebp), %ebx;movl (%ebp), %eax;orl (%eax), %ebx": 1,
                "movl %ebx, (%edx);jmp  <SeAccessCheck+>;movl (%ebp), %ebx;orl (%ebp), %ebx;movl (%ebp), %eax": 1,
                "orl (%ebp), %ebx;movl (%ebp), %eax;movl %ebx, (%eax);movl (%ebp), %edx;movl $, (%edx)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll - <RtlGetVersion+>;subl $, %esp": 1,
                "orl $, (%ebp);jmp  <SeAccessCheck+>;movl (%ebp), %eax;andl $, %eax;orl %eax, (%ebp)": 1,
                "movl (%ebp), %eax;andl $, %eax;orl %eax, (%ebp);andl $, (%ebp);cmpl $, (%ebp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll - <SeUnlockSubjectContext>;subl $, %esp;movl %ebx, %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;int $;testl %esi, %esi": 1,
                "testl %edx, %edx;je  <SeAccessCheck+>;movzwl (%edx), %esi;movl $, %eax;testw %si, %si": 1,
                "movl (%ebp), %ecx;testb $, (%ecx);jne  <SeAccessCheck+>;leal (%edx), %eax;movzwl %si, %esi": 1,
                "jne  <SeAccessCheck+>;leal (%edx), %eax;movzwl %si, %esi;testl %esi, %esi;je  <SeAccessCheck+>": 1,
                "andl $, %eax;movl (%ebp), %edx;orl (%edx), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "orl (%edx), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);jmp  <SeAccessCheck+>;movl (%ebp), %edx": 1,
                "cmpl $, (%ecx);je  <SeAccessCheck+>;calll - <ObfDereferenceObject>;movl $, %ebx;jmp  <SeAccessCheck+>": 1,
                "jns  <SeAccessCheck+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>;jmp  <SeAccessCheck+>;movl -(%ebp), %eax": 3,
                "movl (%ebp), %ecx;cmpw $, (%ecx);jns  <SeAccessCheck+>;movl %ecx, %edx;addl (%ecx), %edx": 1,
                "addl (%edx), %edx;jmp  <SeAccessCheck+>;movl (%ebp), %ecx;movl (%ecx), %edx;testl %edx, %edx": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;testl %edx, %edx;jne  <SeAccessCheck+>;movl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <SeReleaseSecurityDescriptor>;subl $, %esp;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 2,
                "movl %esi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <SeReleaseSecurityDescriptor>;subl $, %esp": 1,
                "subl $, %esp;movl %eax, %edi;movl $, (%esp);calll  <RtlLengthRequiredSid>;subl $, %esp": 1,
                "cmpl $, -;je  <SeAccessCheck+>;cmpl $, -;je  <SeAccessCheck+>;testl %eax, %eax": 1,
                "testl %eax, %eax;jne  <SeAccessCheck+>;calll - <SeAccessCheck+>;movl $, %eax;jmp  <SeAccessCheck+>": 1,
                "jne  <SeAccessCheck+>;calll - <SeAccessCheck+>;movl $, %eax;jmp  <SeAccessCheck+>;movl $, (%esp)": 1,
                "movzbl (%ebp), %ebx;movzbl (%ebp), %esi;calll *-;cmpb $, %al;jbe  <SeAccessCheck+>": 2,
                "testb %bl, %bl;jne  <SeAccessCheck+>;jmp  <SeAccessCheck+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %eax;movl -(%ebp), %edx;movl %edx, %fs:;jmp  <SeAccessCheck+>;nop": 1,
                "movl $, %eax;jmp  <SeAccessCheck+>;movl %esi, %edx;testb %dl, %dl;jne  <SeAccessCheck+>": 1,
                "movl $, (%esp);movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <ExAllocatePoolWithTag>": 2,
                "movl (%ebp), %edx;movl $, (%edx);movl (%ebp), %eax;movl $, (%eax);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);testl %esi, %esi;je  <SeAccessCheck+>;cmpl $, %esi;ja  <SeAccessCheck+>": 1,
                "movl %eax, (%esp);calll  <RtlLengthRequiredSid>;subl $, %esp;movl %eax, %edi;movl $, (%esp)": 1,
                "movl %ebx, (%esp);calll - <ProbeForRead>;subl $, %esp;addl $, %edi;andl $-, %edi": 1,
                "movzbl (%eax), %eax;movl %eax, (%esp);calll  <RtlLengthRequiredSid>;subl $, %esp;addl $, %eax": 1,
                "addl $, %ebx;cmpl %esi, %ebx;jne - <SeAccessCheck+>;movl %edi, -(%ebp);movl -(%ebp), %eax": 1,
                "ja  <SeAccessCheck+>;movl (%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%ebp), %edx": 1,
                "movl %eax, (%edi);movl -(%ebp), %eax;movl %eax, (%edi);movl %esi, (%esp);movl (%ebx), %eax": 1,
                "movl %eax, (%esp);calll  <RtlValidSid>;subl $, %esp;testb %al, %al;jne  <SeAccessCheck+>": 1,
                "subl $, %esp;testb %al, %al;jne  <SeAccessCheck+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, -(%ebp);movl -(%ebp), %eax;andl $-, %eax;addl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %esi;movl %ebx, %eax;addl -(%ebp), %eax;movl %eax, -(%ebp);movl (%ebx), %eax": 1,
                "movl -(%ebp), %eax;addl $, %eax;andl $-, %eax;addl %eax, %edi;addl $, %ebx": 1,
                "cmpl $, %edx;nop;jne  <SeAccessCheck+>;movb $-, %dl;jmp  <SeAccessCheck+>": 1,
                "calll - <ExFreePoolWithTag>;subl $, %esp;movl -(%ebp), %ebx;leave;retl $": 1,
                "movl $, -(%ebp);testb %bl, %bl;jne - <SeAccessCheck+>;movl -(%ebp), %eax;movl -(%ebp), %ebx": 1,
                "testb %bl, %bl;jne - <SeAccessCheck+>;movl -(%ebp), %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %ecx;cmpl %ecx, (%ebp);ja  <SeAccessCheck+>;cmpl -, %ecx;jb  <SeAccessCheck+>": 1,
                "movl %eax, (%ebx);cmpl $, (%ebp);je  <SeAccessCheck+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <ProbeForWrite>;subl $, %esp;jmp  <SeAccessCheck+>;movl $, %eax": 1,
                "movl $, -(%ebp);movl $, %ebx;movl %ebx, %esi;movl %edi, -(%ebp);cmpb $, -(%ebp)": 1,
                "addl (%edi), %eax;movl (%eax), %ecx;andl $-, %ecx;movl %ecx, -(%ebp);jmp  <SeAccessCheck+>": 1,
                "je  <SeAccessCheck+>;movl (%edx), %edx;leal (%eax,%eax,), %eax;shll $, %eax;movl %eax, (%esp)": 1,
                "movl %ebx, %edx;calll - <ObQueryNameString+>;movb $, (%eax);movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "movl $, %edx;calll - <ObQueryNameString+>;movb $, (%eax);popl %ebp;retl $": 1,
                "movl %eax, (%esp);calll  <RtlEqualSid>;subl $, %esp;testb %al, %al;je  <SeAccessCheck+>": 3,
                "testb %al, %al;je  <SeAccessCheck+>;movl %ebx, (%esi);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;testb %al, %al;je  <SeAccessCheck+>;movl (%esi), %eax;movl (%eax,%ebx,), %eax": 1,
                "addl $, %ebx;movl (%esi), %eax;cmpl %ebx, %eax;ja - <SeAccessCheck+>;cmpl (%esi), %eax": 1,
                "addl $, %edi;testb $, %dl;je  <SeAccessCheck+>;movb $, (%edi);movl -(%ebp), %eax": 2,
                "movl $, (%esp);movl %ebx, (%esp);movl %eax, (%esp);calll  <memmove>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;testl %eax, %eax;je  <SeAccessCheck+>;movl (%edx), %edx": 2,
                "movl %eax, %edi;testl %eax, %eax;js  <SeAccessCheck+>;movl $, (%esp);movl (%ebx), %eax": 1,
                "subl $, %esp;movl %eax, %edi;testl %eax, %eax;js  <SeAccessCheck+>;movl -(%ebp), %esi": 1,
                "movl (%ebx), %eax;movl %eax, (%esi);leal (%eax,%eax,), %eax;shll $, %eax;movl %eax, -(%ebp)": 1,
                "calll  <RtlCopyLuid>;subl $, %esp;movl (%ebx), %eax;movl (%eax,%edi), %ecx;movl -(%ebp), %eax": 1,
                "subl $, %esp;movl (%ebx), %eax;movl (%eax,%edi), %ecx;movl -(%ebp), %eax;movl (%eax), %edx": 1,
                "movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ObInsertObject>": 1,
                "movl %ecx, (%edx);movb %bl, (%edx);movl (%ebp), %ecx;movl %edx, (%ecx);movl -(%ebp), %ebx": 1,
                "movl (%eax), %edi;movl %fs:, %edx;movl (%edx), %edx;movl (%edx), %ecx;addl $, %ecx": 1,
                "movw $, -(%ebp);movl $, -(%ebp);movb $, -(%ebp);movl $, -(%ebp);movl , %eax": 1,
                "movl %esi, (%esp);calll - <SeAccessCheck+>;subl $, %esp;movl %ebx, %ecx;calll - <ObfReferenceObject>": 1,
                "je  <SeAccessCheck+>;movl $, -(%ebp);addl $, %edi;addl $, %ebx;cmpl %esi, %edi": 1,
                "movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <ZwAlertThread+>;subl $, %esp": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jns  <SeAccessCheck+>;movl %eax, (%esp);movl $, (%esp)": 2,
                "je  <SeAccessCheck+>;movb $, (%edi);movl -(%ebp), %eax;movl $, (%eax);movl (%ebp), %edx": 1,
                "movl %ecx, (%eax);movl -(%ebp), %ecx;movl %ecx, (%eax);movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl (%ebp), %ecx;movl %ecx, (%eax);shll $, %edx;movl %edx, -(%ebp);movl (%ebp), %edx": 1,
                "testl %esi, %esi;je  <SeAccessCheck+>;movl $, %ebx;movl (%ebp), %edi;movl (%edi,%ebx,), %eax": 1,
                "movl (%ebp), %edi;movl (%edi,%ebx,), %eax;movl %eax, (%esp);calll  <RtlLengthSid>;subl $, %esp": 1,
                "movl (%edx), %edx;leal (%eax,%edx,), %edx;movl %edx, -(%ebp);leal -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %ecx, (%esp);leal -(%ebp), %ecx;movl %ecx, (%esp);movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <SeAccessCheck+>;subl $, %esp;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;js  <SeAccessCheck+>;movl (%ebp), %edx;leal (%edx,%edx,), %ebx": 1,
                "leal (%edx,%edx,), %ebx;shll $, %ebx;movl %ebx, -(%ebp);testl %ebx, %ebx;je  <SeAccessCheck+>": 1,
                "movl %edx, (%esp);movl %eax, (%esp);calll  <memmove>;movl -(%ebp), %esi;cmpl $, (%esi)": 1,
                "movl %esi, %eax;calll - <SeAccessCheck+>;addl $, %ebx;cmpl (%esi), %ebx;jb - <SeAccessCheck+>": 1,
                "movl $, (%esp);calll - <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, (%ebx);movl -(%ebp), %eax": 2,
                "jmp  <SeAccessCheck+>;movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx);jmp  <SeAccessCheck+>": 1,
                "calll - <ObfDereferenceObject>;jmp  <SeAccessCheck+>;movl $, -(%ebp);jmp  <SeAccessCheck+>;movl $, -(%ebp)": 1,
                "subl $, %esp;movl $, -(%ebp);movl $, -(%ebp);movl -, %edi;movl %edi, -(%ebp)": 1,
                "cmpl $, -;jne  <SeAccessCheck+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %esp, %ebp;subl $, %esp;calll *-;cmpb $, %al;jbe  <SeTokenType+>": 1,
                "subl $, %esp;calll *-;cmpb $, %al;jbe  <SeTokenIsAdmin+>;calll *-": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;shrl $, %eax;andl $, %eax;leave": 3,
                "subl $, %esp;calll *-;cmpb $, %al;jbe  <SeTokenIsRestricted+>;calll *-": 1,
                "cmpb $, %al;jbe  <SeTokenIsWriteRestricted+>;calll *-;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "js  <NtQueryInformationToken+>;cmpl $, %ebx;ja  <NtQueryInformationToken+>;jmpl *-(,%ebx,);movl -(%ebp), %eax": 1,
                "cmpl $, %ebx;ja  <NtQueryInformationToken+>;jmpl *-(,%ebx,);movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "subl $, %esp;movl %eax, -(%ebp);addl $, %eax;movl %eax, -(%ebp);movl (%ebp), %edx": 3,
                "movl (%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "jmp  <NtQueryInformationToken+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;nop": 2,
                "movl (%eax), %ecx;leal -(,%ecx,), %edx;subl $, %ecx;movl (%ebp), %ebx;movl %ecx, (%ebx)": 1,
                "movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;leal (%esi), %esi;jmp - <NtQueryInformationToken+>": 6,
                "nop;jmp - <NtQueryInformationToken+>;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, %fs:": 2,
                "leal (%eax,%eax,), %eax;leal (,%eax,), %eax;movl %eax, -(%ebp);movl (%ebp), %ebx;addl $, %ebx": 1,
                "cmpl %eax, (%ebp);jb  <NtQueryInformationToken+>;movl -(%ebp), %eax;movl (%eax), %edx;movl (%ebp), %ecx": 1,
                "jmp  <NtQueryInformationToken+>;jmp - <NtQueryInformationToken+>;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "movl %eax, %fs:;jmp  <NtQueryInformationToken+>;movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, (%esp)": 1,
                "jmp  <NtQueryInformationToken+>;movl $, -(%ebp);jmp  <NtQueryInformationToken+>;movl (%ebp), %edx;cmpl %edx, -(%ebp)": 1,
                "movl %ebx, (%ecx);movl (%eax), %eax;movzwl (%eax), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "jmp  <NtQueryInformationToken+>;movl (%ebp), %eax;movl $, (%eax);jmp  <NtQueryInformationToken+>;movl $, -(%ebp)": 1,
                "cmpl $, (%ebp);jbe  <NtQueryInformationToken+>;movl -(%ebp), %eax;movl (%eax), %edx;movl (%ebp), %ecx": 1,
                "je  <NtQueryInformationToken+>;movl (%ebp), %ecx;movl $, (%ecx);jmp  <NtQueryInformationToken+>;movl $, %eax": 3,
                "je  <NtQueryInformationToken+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx": 1,
                "cmpl $, %eax;ja  <NtQueryInformationToken+>;jmpl *-(,%eax,);cmpl $, %esi;ja  <NtQueryInformationToken+>": 1,
                "jmp  <NtQueryInformationToken+>;movl (%ebp), %edx;movl (%edx), %eax;jmp  <NtQueryInformationToken+>;nop": 2,
                "movl (%eax,%edx,), %esi;movl -(%ebp), %ebx;movl %ebx, (%esp);calll  <RtlLengthSid>;subl $, %esp": 1,
                "movl %esi, (%esp);movl %eax, (%esp);calll  <RtlCopySid>;subl $, %esp;movl $, (%esp)": 2,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <SeAccessCheck+>;subl $, %esp;jmp  <NtQueryInformationToken+>": 2,
                "movl (%edx), %eax;jmp  <NtQueryInformationToken+>;movl $, %eax;nop;leal -(%ebp), %ecx": 1,
                "movl %eax, %fs:;jmp  <NtQueryInformationToken+>;leal (%esi), %esi;leal (%edi), %edi;jmp - <NtQueryInformationToken+>": 1,
                "jmp  <NtQueryInformationToken+>;leal (%esi), %esi;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 2,
                "movl -(%ebp), %eax;movl %eax, %fs:;jmp  <NtQueryInformationToken+>;jmp - <NtQueryInformationToken+>;movl -(%ebp), %eax": 1,
                "movl $, -(%ebp);jmp  <NtQueryInformationToken+>;movl $, -(%ebp);jmp  <NtQueryInformationToken+>;movl $, -(%ebp)": 1,
                "ja  <NtDuplicateToken+>;movl %fs:, %eax;movl (%eax), %eax;movzbl (%eax), %eax;movb %al, -(%ebp)": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, %fs:;jmp  <NtDuplicateToken+>": 1,
                "jmp  <NtDuplicateToken+>;leal (%esi), %esi;jmp - <NtDuplicateToken+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "movl -(%ebp), %ecx;cmpl $, (%ecx);jne  <NtDuplicateToken+>;cmpb $, -(%ebp);je  <NtDuplicateToken+>": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movzbl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %ecx, (%esp);calll - <SeAccessCheck+>;subl $, %esp": 1,
                "js  <NtDuplicateToken+>;cmpl $, (%ebp);jne  <NtDuplicateToken+>;movl -(%ebp), %eax;movl %eax, (%ebp)": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jns  <NtDuplicateToken+>;jmp  <NtDuplicateToken+>;movl -(%ebp), %eax": 1,
                "jns  <NtDuplicateToken+>;jmp  <NtDuplicateToken+>;movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "movl %eax, (%edx);jmp  <NtDuplicateToken+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 1,
                "jmp  <NtDuplicateToken+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;nop": 1,
                "jne  <NtAdjustPrivilegesToken+>;movl %fs:, %eax;movl (%eax), %eax;movzbl (%eax), %eax;movb %al, -(%ebp)": 1,
                "calll - <SeUnregisterLogonSessionTerminatedRoutine+>;subl $, %esp;jmp  <NtAdjustPrivilegesToken+>;movl $, %eax;leal -(%ebp), %ecx": 1,
                "movl %edx, (%esp);movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <ObReferenceObjectByHandle>": 1,
                "calll  <DbgPrint>;testl %eax, %eax;je  <NtAdjustPrivilegesToken+>;movl $, (%esp);movl $, (%esp)": 1,
                "nop;jmp - <NtAdjustPrivilegesToken+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %ebx": 1,
                "movl %eax, (%esp);movl -(%ebp), %ecx;movl -(%ebp), %edx;movl -(%ebp), %eax;calll - <SeAccessCheck+>": 1,
                "ja  <NtAdjustPrivilegesToken+>;cmpl -, %eax;jb  <NtAdjustPrivilegesToken+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %edx": 1,
                "subl $, %esp;movl (%ebp), %edx;movl (%edx), %esi;movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <NtAdjustPrivilegesToken+>;jmp - <NtAdjustPrivilegesToken+>;movl -(%ebp), %eax;movl %eax, %fs:;nop": 1,
                "movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp);movl (%ecx), %eax;movl %eax, -(%ebp)": 2,
                "movl %eax, (%esp);movl %edi, (%esp);movl (%ebp), %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <SeImpersonateClient+>": 1,
                "calll - <SeImpersonateClient+>;subl $, %esp;movl -(%ebp), %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "jmp  <NtOpenThreadTokenEx+>;movl -(%ebp), %eax;cmpl %eax, (%ebp);ja  <NtOpenThreadTokenEx+>;cmpl -, %eax": 1,
                "cmpl %eax, (%ebp);ja  <NtOpenThreadTokenEx+>;cmpl -, %eax;jb  <NtOpenThreadTokenEx+>;calll - <ExRaiseAccessViolation>": 1,
                "jmp - <NtOpenThreadTokenEx+>;movl -(%ebp), %eax;movl %eax, %fs:;movsbl -(%ebp), %esi;movl $, (%esp)": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;js  <NtOpenThreadTokenEx+>;leal -(%ebp), %eax": 1,
                "movl %eax, %ebx;testl %eax, %eax;jne  <NtOpenThreadTokenEx+>;movl -(%ebp), %ecx;calll - <ObfDereferenceObject>": 1,
                "movl $, -(%ebp);jmp  <NtOpenThreadTokenEx+>;cmpl $, -(%ebp);jne  <NtOpenThreadTokenEx+>;movl %eax, %ecx": 1,
                "calll - <SeImpersonateClient+>;subl $, %esp;movl %eax, -(%ebp);movl -(%ebp), %eax;movl (%eax), %ecx": 1,
                "subl $, %esp;movl $, -(%ebp);movl $, -(%ebp);movl (%ebp), %edx;movl %edx, -(%ebp)": 1,
                "subl $, %esp;movl %eax, -(%ebp);jmp  <NtOpenThreadTokenEx+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <ExFreePoolWithTag>;subl $, %esp;movl %edi, %edx;testb %dl, %dl": 1,
                "je  <NtOpenThreadTokenEx+>;calll - <ObfDereferenceObject>;cmpb $, -(%ebp);je  <NtOpenThreadTokenEx+>;movl -(%ebp), %ecx": 1,
                "calll - <ObfDereferenceObject>;cmpl $, -(%ebp);jns  <NtOpenThreadTokenEx+>;jmp  <NtOpenThreadTokenEx+>;movl -(%ebp), %eax": 1,
                "leal (%esi), %esi;leal (%edi), %edi;jmp - <NtOpenThreadTokenEx+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <NtOpenThreadTokenEx>;subl $, %esp": 1,
                "movl (%eax), %eax;movzbl (%eax), %eax;movb %al, -(%ebp);testb %al, %al;jne  <NtOpenThreadToken+>": 1,
                "movl (%ebp), %eax;cmpl -, %eax;jb  <NtOpenThreadToken+>;calll - <ExRaiseAccessViolation>;movl (%ebp), %edx": 1,
                "jmp  <NtOpenThreadToken+>;nop;jmp - <NtOpenThreadToken+>;movl -(%ebp), %eax;movl %eax, %fs:": 1,
                "jmp - <NtOpenThreadToken+>;movl -(%ebp), %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "cmpb $, (%ebx);jne  <NtTraceEvent+>;cmpb $, (%ebx);jne  <NtTraceEvent+>;movsbl -(%ebx), %eax": 1,
                "cmpl $, %eax;ja  <NtTraceEvent+>;movsbl (%ebx), %eax;subl $, %eax;cmpl $, %eax": 2,
                "jne  <NtTraceEvent+>;movzbl -(%ebp), %eax;movb %al, -(%ebp);movzbl -(%ebp), %edx;movb %dl, -(%ebp)": 1,
                "jmp  <NtTraceEvent+>;movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movzwl -(%ebp), %eax;movw %ax, -(%ebp);addl $, %ebx;addl $, %ebx;cmpl %ebx, %esi": 1,
                "movb $, (%edi);movl $, %eax;jmp  <NtTraceEvent+>;movb $, (%edi);movl $, %eax": 1,
                "movl $, %eax;jmp  <NtTraceEvent+>;movb $, (%edi);movl $, %eax;addl $, %esp": 1,
                "jle  <NtTraceEvent+>;cmpb $, %dl;jle  <NtTraceEvent+>;addl $, %eax;movl %eax, ": 1,
                "leal -(%ebp), %ebx;cmpb $, %dl;je  <NtTraceEvent+>;jmp  <NtTraceEvent+>;subl $, %ebx": 1,
                "jle  <NtTraceEvent+>;cmpb $, %al;jne - <NtTraceEvent+>;jmp  <NtTraceEvent+>;leal -(%ebp), %ebx": 1,
                "cmpb $, %bl;jne - <NtTraceEvent+>;movzwl %si, %esi;movl (%ebp), %ebx;movb $, (%ebx,%esi)": 1,
                "jne - <NtTraceEvent+>;movzwl %si, %esi;movl (%ebp), %ebx;movb $, (%ebx,%esi);movl $, %eax": 1,
                "testl %eax, %eax;js  <NtTraceEvent+>;movzbl -, %eax;movl %eax, -(%ebp);movl $, (%esp)": 1,
                "calll - <CmUnRegisterCallback+>;subl $, %esp;movl -(%ebp), %eax;movl %eax, (%esp);calll - <NtClose>": 3,
                "jmp  <NtTraceEvent+>;movzwl (%ebx), %eax;movzbl %al, %edx;movl %edx, (%esp);movzbl %ah, %eax": 1,
                "movl %edx, (%esp);calll  <sprintf>;leal -(%ebp), %edi;movl $, %eax;movl $, %ecx": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <CcGetFileObjectFromSectionPtrs+>;subl $, %esp;testl %eax, %eax": 2,
                "movl $, -(%ebp);movw $, -(%ebp);leal -(%ebp), %edi;movl $, %eax;movl $, %ecx": 1,
                "testl %eax, %eax;jns  <NtTraceEvent+>;movl %eax, %edi;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "je  <NtTraceEvent+>;leal -(%ebp), %eax;movl %eax, (%esp);movl %eax, (%esp);movl %eax, (%esp)": 1,
                "cmpl $, -(%ebp);jbe  <NtTraceEvent+>;movl $, -(%ebp);movl $, %eax;leal -(%ebp), %edx": 1,
                "movl %edi, -(%ebp);movb $, -(%ebp);calll - <KeRevertToUserAffinityThread>;cmpl $, -(%ebp);je  <NtTraceEvent+>": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);calll  <RtlFreeUnicodeString>;subl $, %esp;cmpb $, (%ebx)": 1,
                "shrl $, %ecx;andl $, %ecx;andl $, %edx;addl %ecx, %edx;andl $, %edx": 1,
                "movl %eax, (%esp);calll - <ZwMapViewOfSection>;subl $, %esp;movl $, %edi;testl %eax, %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <NtTraceEvent+>;subl $, %esp;testb %al, %al": 3,
                "movl %eax, (%esp);calll - <NtTraceEvent+>;subl $, %esp;testb %al, %al;je  <NtTraceEvent+>": 3,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <NtTraceEvent+>;subl $, %esp;movl $, %edi": 1,
                "cmpl $, %eax;ja  <NtTraceEvent+>;addl %ebx, -(%ebp);leal -(%ebp), %edx;movl %edx, (%esp)": 2,
                "subl $, %esp;testb %al, %al;jne - <NtTraceEvent+>;movl %edi, %eax;jmp  <NtTraceEvent+>": 1,
                "movw $, (%edx);leal (%eax), %edi;movl $, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "movl %ebx, (%esp);calll  <RtlInitUnicodeString>;subl $, %esp;movl %edi, (%esp);movl -(%ebp), %eax": 1,
                "subl $, %esp;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);calll - <ZwUnmapViewOfSection>": 4,
                "movl %eax, (%esp);movl $, (%esp);calll - <ZwUnmapViewOfSection>;subl $, %esp;movl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwMapViewOfSection>;subl $, %esp;testl %eax, %eax": 1,
                "movl %eax, (%esp);movl $, (%esp);calll - <KeIAllocateGdtSelectors+>;subl $, %esp;movl -(%ebp), %eax": 3,
                "movl $, (%esp);calll - <KeIAllocateGdtSelectors+>;subl $, %esp;movl -(%ebp), %eax;movl %eax, %edx": 2,
                "movl -(%ebp), %eax;movl %eax, %edx;andl $, %edx;shll $, %edx;movzbl %al, %ecx": 1,
                "movl %eax, %edx;andl $, %edx;shll $, %edx;movzbl %al, %ecx;addl %ecx, %edx": 1,
                "movl %fs:, %eax;andl $, %edx;movw %dx, (%eax);jmp  <KeIAllocateGdtSelectors+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <KeIAllocateGdtSelectors+>;movl $, (%esp);movl $, (%esp)": 2,
                "movl $, %eax;cmpb %dl, %cl;je  <KeIAllocateGdtSelectors+>;movl $, %edi;movl $, %ecx": 1,
                "movl %edx, %eax;andl $, %eax;cmpl $, %eax;jne  <KeIAllocateGdtSelectors+>;andl $, %edx": 1,
                "movl $, %ebx;jmp  <KeIAllocateGdtSelectors+>;movl $, %edx;movl $, %ebx;jmp  <KeIAllocateGdtSelectors+>": 2,
                "jmp  <KeIAllocateGdtSelectors+>;movl $, %edx;movl $, %ebx;movl -(%ebp), %eax;testb $, %al": 1,
                "orl $, %ebx;testb $, %ah;je  <KeIAllocateGdtSelectors+>;orl $, %ebx;testb $-, %ah": 1,
                "calll - <KeIAllocateGdtSelectors+>;subl $, %esp;movl -(%ebp), %eax;testl $, %eax;je  <KeIAllocateGdtSelectors+>": 1,
                "orl $, %ebx;cmpl $, %esi;je  <KeIAllocateGdtSelectors+>;cmpl $, %esi;jne  <KeIAllocateGdtSelectors+>": 1,
                "je  <KeIAllocateGdtSelectors+>;movl $, -(%ebp);movl $, -(%ebp);testb $, %bl;je  <KeIAllocateGdtSelectors+>": 3,
                "movl $, -(%ebp);testb $, %bl;je  <KeIAllocateGdtSelectors+>;movl $, -(%ebp);movl $, %esi": 1,
                "movl -(%ebp), %edi;movl %edi, (%esp);movl -(%ebp), %edi;movl %edi, (%esp);movl -(%ebp), %edi": 13,
                "movl %esi, (%esp);movl %ecx, (%esp);movl %edx, (%esp);movl %eax, (%esp);movl $, (%esp)": 1,
                "je  <KeIAllocateGdtSelectors+>;cmpl $, %eax;je  <KeIAllocateGdtSelectors+>;cmpl $, %eax;nop": 1,
                "movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "je  <KeIAllocateGdtSelectors+>;movl %ecx, %eax;movl %ecx, %ebx;shrl $, %ebx;testb %cl, %cl": 1,
                "jne  <KeIAllocateGdtSelectors+>;jmp  <KeIAllocateGdtSelectors+>;cmpl $, %ecx;je  <KeIAllocateGdtSelectors+>;cmpl $, %ecx": 1,
                "jmpl *-(,%eax,);movl $, %edi;movl $, %esi;jmp  <KeIAllocateGdtSelectors+>;movl $, %edi": 1,
                "movl %edi, %eax;movl $, %edx;divl %ecx;cmpl -(%ebp), %eax;jbe  <KeIAllocateGdtSelectors+>": 1,
                "movl $, %edx;divl %ecx;cmpl -(%ebp), %eax;jbe  <KeIAllocateGdtSelectors+>;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edx;movl %edi, (%edx);movl %esi, %ecx;movb %cl, (%edx);movl %eax, -(%ebp)": 1,
                "movl %esi, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp);leal -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "subl $, %esp;movl $, -(%ebp);cmpl $, -(%ebp);jbe  <KeIAllocateGdtSelectors+>;leal -(%ebp), %eax": 1,
                "jmpl *-(,%eax,);movl $, %eax;jmp  <KeIAllocateGdtSelectors+>;movl $, %eax;jmp  <KeIAllocateGdtSelectors+>": 1,
                "movl $, %eax;jmp  <KeIAllocateGdtSelectors+>;movl $, %eax;shrl $, %edx;shll $, %edx": 1,
                "movl %edx, (%ecx);movb %al, (%ecx);jmp  <KeIAllocateGdtSelectors+>;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl %eax, %cr;popl %ebp;retl;pushl %ebp;movl %esp, %ebp": 3,
                "leal (%ebx), %eax;movl $, (%esp);movl $, (%esp);movl %eax, (%esp);calll  <memset>": 1,
                "movb $, (%ebx);movb $, (%ebx);movb $, (%ebx);leal (%ebx), %eax;movl %eax, %edx": 1,
                "movw %ax, (%ebx);movl %eax, %edx;shrl $, %edx;movb %dl, (%ebx);shrl $, %eax": 2,
                "movw $, (%ebx);movb $-, (%esi);movw $, (%esi);movl $, (%esp);calll - <KeIAllocateGdtSelectors+>": 1,
                "movl (%edx), %eax;movl %eax, %cr;movl (%edx), %eax;movl %eax, %dr;movl (%edx), %eax": 1,
                "lidtl (%edx);movzwl (%edx), %eax;addl (%edx), %eax;andb $-, (%eax);movzwl (%edx), %eax": 1,
                "movl %edx, (%eax);movl $, %edx;movl %edx, %dr;sgdtl (%eax);sidtl (%eax)": 1,
                "leave;retl $;pushl %ebp;movl %esp, %ebp;movl , %eax": 1,
                "retl $;pushl %ebp;movl %esp, %ebp;movl %cr, %eax;orb $, %ah": 1,
                "movw %dx, (%eax);movzbl (%eax), %edx;andl $, %edx;orl $-, %edx;orl $, %edx": 1,
                "movzbl (%eax), %edx;andl $, %edx;orl $-, %edx;orl $, %edx;movb %dl, (%eax)": 1,
                "movl %eax, %esi;leal (%eax), %ebx;cli;sidtl -(%ebp);movzwl -(%ebp), %eax": 1,
                "movl %fs:, %eax;movl %ebx, (%eax);sti;movl $, (%esp);movl %esi, (%esp)": 1,
                "cmpl $, -;jbe  <KeInvalidateAllCaches+>;wbinvd;movl $, %eax;popl %ebp": 1,
                "fnstsw -(%ebp);cmpb $, -(%ebp);je  <KeInvalidateAllCaches+>;orl $, %eax;movl %eax, %cr": 1,
                "ja  <KeInvalidateAllCaches+>;movl %eax, %edx;orl $, %edx;orl $, %edx;movl %edx, %cr": 1,
                "movl %edx, %cr;movl $, %eax;leave;retl;pushl %ebp": 1,
                "fdivl -;fmull -;fldl -;fsubp %st();fistpl -(%ebp)": 1,
                "testl %esi, %esi;jne  <KeInvalidateAllCaches+>;pushl %edi;popfl;jmp  <KeInvalidateAllCaches+>": 1,
                "cmpl $, -;je  <KeInvalidateAllCaches+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "orl %edx, %eax;orl $, %eax;movl %eax, %cr;pushl %edi;popfl": 1,
                "movl $, %eax;jmp  <KeSaveFloatingPointState+>;movl $, %eax;movl -(%ebp), %ebx;leave": 1,
                "testl %eax, %eax;je  <KeRestoreFloatingPointState+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %fs:, %ebx;calll *-;movl %eax, %esi;movl (%ebx), %edx;notl %edx": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %edx, (%esp);calll - <KeLeaveGuardedRegion+>": 1,
                "cmpl %eax, %ebx;je  <KeFlushEntireTb+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%ebp), %edx;movl %fs:, %ebx;movl (%ebx), %ecx": 1,
                "testl %ecx, %ecx;jne  <KeSaveStateForHibernate+>;addl $, %eax;retl;pushl %ebp": 1,
                "andb $, %al;movl %eax, -(%ebp);testl $, %edi;je  <KeSaveStateForHibernate+>;orl $, %eax": 1,
                "cmpl $, -(%ebp);je  <KeSaveStateForHibernate+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %edi, %edx;andl $-, %edx;orb $-, %dl;movl %edx, -(%ebp);testl %ebx, %ebx": 1,
                "movl (%edx), %ecx;testb $, %cl;jne  <KeSaveStateForHibernate+>;testb $, (%edx);je  <KeSaveStateForHibernate+>": 1,
                "testb %al, %al;jne  <KeSaveStateForHibernate+>;movl $, %ecx;calll *-;movl %eax, %esi": 1,
                "jne  <KeSaveStateForHibernate+>;testb $, (%ebx);je  <KeSaveStateForHibernate+>;movl %edi, (%ebx);jmp  <KeSaveStateForHibernate+>": 1,
                "movl %edi, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;testl $, %edx;jne  <KeSaveStateForHibernate+>": 1,
                "testb %al, %al;jne  <KeSaveStateForHibernate+>;movl $, %ecx;calll *-;movl -(%ebp), %ebx": 1,
                "testb $, (%edx);je  <KeSaveStateForHibernate+>;movl (%edx), %eax;orl $, %eax;popl %ebp": 1,
                "orl $, %edx;movl %edx, (%eax);popl %ebp;retl $;pushl %ebp": 1,
                "movl %fs:, %ecx;movl (%ecx), %ecx;subl $, %eax;movl %eax, (%ecx);pushl %edx": 1,
                "calll *-;movb %al, -(%ebp);movl (%ebp), %eax;andl $, %eax;cmpl $, %eax": 1,
                "andl $, %eax;orb $, %ah;movl %eax, (%ebx);movl (%esi), %edx;movl %edx, (%ebx)": 1,
                "jmp  <KeSaveStateForHibernate+>;andl $, %eax;orl $, %eax;cmpl $, %eax;jbe  <KeSaveStateForHibernate+>": 1,
                "andl $, %eax;cmpl $, %eax;jne  <KeSaveStateForHibernate+>;movl (%esi), %eax;movl %eax, (%ebx)": 2,
                "cmpl $, %eax;jne  <KeSaveStateForHibernate+>;movl (%esi), %eax;movl %eax, (%ebx);movl (%esi), %eax": 2,
                "movl (%ebp), %eax;andl $, %eax;cmpl $, %eax;jne  <KeSaveStateForHibernate+>;testb $, (%ebx)": 3,
                "je  <KeSaveStateForHibernate+>;movl $, (%esp);calll - <KeInvalidateAllCaches+>;subl $, %esp;movl $, (%esp)": 2,
                "calll - <KeInvalidateAllCaches+>;subl $, %esp;movl $, (%esp);leal (%esi), %eax;movl %eax, (%esp)": 1,
                "andl %eax, (%ebx);movl (%ebx), %eax;andl $-, %eax;movl %eax, (%ebx);movl %fs:, %edx": 1,
                "movl (%edx), %edx;cmpl $, (%edx);je  <KeSaveStateForHibernate+>;movl (%esi), %edx;andl $, %edx": 2,
                "subl $, %esp;cmpl $, -;je  <KeSaveStateForHibernate+>;movl (%esi), %eax;movw %ax, (%ebx)": 1,
                "je  <KeSaveStateForHibernate+>;movw $, (%edi);addl $, %edi;testb $, %dl;je  <KeSaveStateForHibernate+>": 1,
                "jae  <KeSaveStateForHibernate+>;movl $, (%ebx);movl (%esi), %eax;andl $, %eax;movl %eax, (%ebx)": 1,
                "movl $, (%ebx);movl (%esi), %eax;andl $, %eax;movl %eax, (%ebx);cmpl $, (%ebx)": 1,
                "andl $, %eax;movl %eax, (%ebx);cmpl $, (%ebx);je  <KeSaveStateForHibernate+>;orl $, -(%ebp)": 1,
                "movl %eax, (%ebx);movl (%edi), %eax;testl $, %eax;jne  <KeSaveStateForHibernate+>;testb $, (%edi)": 1,
                "movl $, (%edi);movl $, (%edi);movl $, (%edi);movzwl (%edi), %eax;movl %eax, (%ebx)": 1,
                "movl %edx, (%ebx);movl (%edi), %edx;movl %edx, (%ebx);andl $, %eax;cmpl $, %eax": 1,
                "leal (%edi), %eax;movl %eax, (%esp);leal (%ebx), %eax;movl %eax, (%esp);calll  <memmove>": 2,
                "popl %ebp;retl $;pushl %ebp;movl %esp, %ebp;testl %ecx, %ecx": 1,
                "cmpl %eax, (%ecx);sete %al;jmp  <KeSaveStateForHibernate+>;movl $, %eax;popl %ebp": 1,
                "sete %al;jmp  <KeSaveStateForHibernate+>;movl $, %eax;popl %ebp;retl": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <KeSaveStateForHibernate+>;subl $, %esp;movl (%ebp), %edx": 2,
                "movl (%ebp), %ecx;movl $, (%ecx);testb %bl, %bl;jne  <KeSaveStateForHibernate+>;testb $, -(%ebp)": 1,
                "jne  <KeSaveStateForHibernate+>;movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;testb %al, %al;jne  <KeSaveStateForHibernate+>;movl $, (%esp);movl (%ebp), %ecx": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%esp)": 2,
                "movl %esi, (%esp);calll  <memmove>;movl (%ebp), %edx;movl (%edx), %eax;leal (,%eax,), %edi": 1,
                "calll  <memmove>;movl (%ebp), %edx;movl (%edx), %eax;leal (,%eax,), %edi;movl %esi, %ebx": 1,
                "movl $, (%esp);leal (%edi), %eax;movl %eax, (%esp);movl %ecx, (%esp);calll - <ProbeForWrite>": 1,
                "movl %ebx, (%esp);calll  <memmove>;movl %esi, -(%ebx);movl %ebx, -(%ebx);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <KeSaveStateForHibernate+>;subl $, %esp;movl (%ebp), %edx;movl $, (%edx)": 1,
                "leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <KeSaveStateForHibernate+>;cmpl $, -(%ebp);jne  <KeSaveStateForHibernate+>": 1,
                "cmpl $, -(%ebp);je  <KeSaveStateForHibernate+>;movzbl -(%ebp), %eax;movb %al, (%ebx);addl $, %edi": 1,
                "shrl $, %ecx;rep  movsl (%esi), %es:(%edi);movl $, %edx;testb $, %al;je  <KeSaveStateForHibernate+>": 1,
                "movb %al, (%edi,%edx);movl -(%ebp), %eax;movl %eax, %fs:;jmp - <KeSaveStateForHibernate+>;leal (%esi), %esi": 1,
                "testb %al, %al;jne  <KeSaveStateForHibernate+>;movl %fs:, %edx;movl %fs:, %eax;movl (%ebp), %ebx": 1,
                "movl (%edx), %edx;movl %edx, (%esp);movl (%ebx), %edx;movl %edx, (%esp);movl (%ebx), %edx": 1,
                "testb %dl, %dl;jne - <KeSaveStateForHibernate+>;nop;jmp - <KeSaveStateForHibernate+>;movl %edi, %ecx": 1,
                "je  <KeSaveStateForHibernate+>;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "subl $, %esp;movl %ebx, %ecx;calll  <KiEoiHelper>;pushl %ebp;movl %esp, %ebp": 1,
                "calll  <IoCsqRemoveNextIrp+>;leal (%esi), %esi;jmp - <KeRaiseUserException+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %edx;movl %edx, %fs:;jmp  <KeRaiseUserException+>;leal (%esi), %esi;leal (%edi), %edi": 1,
                "movl (%edx), %eax;movl -, %edx;movl -(%ebp), %ecx;movl %edx, (%ecx);addl $, %esp": 1,
                "movl -, %edx;movl -(%ebp), %ecx;movl %edx, (%ecx);addl $, %esp;popl %ebx": 1,
                "movzbl %cl, %ecx;movl -, %edx;calll *%edx;movb %al, -(%ebp);movl (%esi), %ebx": 1,
                "leal -(%edi), %esi;jmp - <KeRaiseUserException+>;movzbl -(%ebp), %eax;cli;movl -(%ebp), %edx": 1,
                "movl %eax, (%esp);calll *-;subl $, %esp;movl -(%ebp), %ecx;calll  <KiEoiHelper>": 1,
                "xchgl %edx, (%eax);movzbl -(%ebp), %eax;cli;movl %edi, (%esp);movzbl %al, %eax": 1,
                "subl $, %eax;imull -, %eax;addl $, %eax;movl %eax, (%ebx);movl $, (%ebx)": 1,
                "movl $, (%ebx);movl %fs:, %edi;movl %esi, (%esp);calll *-;subl $, %esp": 1,
                "calll *-;subl $, %esp;movzbl %al, %eax;movl (%edi), %edx;leal (%edx,%eax,), %edx": 1,
                "movl $, %edx;movl %edx, %dr;movl (%eax), %edx;movl %edx, %dr;movl (%eax), %edx": 23,
                "calll *-;subl $, %esp;movl %ebx, %ecx;calll  <KiEoiHelper>;movl %ebx, %ecx": 1,
                "subl $, %esp;movl %ebx, %ecx;calll  <KiEoiHelper>;movl %ebx, %ecx;calll  <KiEoiHelper>": 1,
                "cmpb $, (%eax);je  <KiUnexpectedInterrupt+>;movl %fs:, %eax;movl %dr, %edx;movl %edx, (%ecx)": 1,
                "movl (%eax), %eax;movl %eax, %dr;movl %ebx, %edx;calll *(%ebx);addl $, %esp": 1,
                "movzbl (%ebx), %edx;movb %dl, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll *-;subl $, %esp;movl $, (%esp)": 1,
                "subl $, %esp;movl $, (%esp);movl %ebx, (%esp);calll - <KeRaiseUserException+>;subl $, %esp": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll - <KeRaiseUserException+>;subl $, %esp;movb $, (%ebx)": 1,
                "movb $, (%ebx);movl %fs:, %ecx;addl $, %ecx;calll - <KeReleaseSemaphore+>;movl %edi, %eax": 1,
                "addl $, %ecx;calll - <KeReleaseSemaphore+>;movl %edi, %eax;movzbl %al, %ecx;calll - <KeSetTimer+>": 1,
                "movzbl (%ebx), %eax;movb %al, -(%ebp);movl $, %esi;cmpb $, %al;ja  <KeConnectInterrupt+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <KeRaiseUserException+>;subl $, %esp": 1,
                "movl %edi, (%esp);calll - <KeRaiseUserException+>;subl $, %esp;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "calll - <KeRaiseUserException+>;subl $, %esp;movl -(%ebp), %eax;testl %eax, %eax;jne  <KeConnectInterrupt+>": 1,
                "testl %eax, %eax;jne  <KeConnectInterrupt+>;movb $, (%ebx);leal (%ebx), %eax;movl %eax, (%ebx)": 1,
                "jne  <KeConnectInterrupt+>;movb $, (%ebx);leal (%ebx), %eax;movl %eax, (%ebx);movl %eax, (%ebx)": 1,
                "movl %eax, (%esp);movl %edi, (%esp);calll *-;subl $, %esp;cmpb $, %al": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <KeRaiseUserException+>;subl $, %esp;leal (%ebx), %edx": 1,
                "jmp  <KeConnectInterrupt+>;movb $, -(%ebp);movl $, %esi;movl %fs:, %ecx;addl $, %ecx": 1,
                "movzbl -(%ebp), %ecx;calll - <KeSetTimer+>;calll - <KeRevertToUserAffinityThread>;cmpb $, -(%ebp);je  <KeConnectInterrupt+>": 1,
                "subl $, %esp;movl %eax, %esi;movl (%ebx), %ecx;calll - <KefReleaseSpinLockFromDpcLevel>;movl %edi, %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <KeSynchronizeExecution+>;subl $, %esp;testb %al, %al": 1,
                "andl $, -;testb $, -;je  <KeSynchronizeExecution+>;calll  <KeSynchronizeExecution+>;movb $, -": 1,
                "movb $, -;cmpl $, -;je  <KeSynchronizeExecution+>;movl -, %esi;testl %esi, %esi": 1,
                "calll - <KeSetSystemAffinityThread>;subl $, %esp;calll - <KeInvalidateAllCaches+>;testb %al, %al;je  <KeSynchronizeExecution+>": 1,
                "je  <KeSynchronizeExecution+>;andl $, -;movl $, -;movl $, -;movb $, -": 1,
                "movb $, -;movb $, -;movb $, -;movb $, -;testb $, -": 1,
                "movzbl -, %eax;movl %eax, -(%ebp);leal -(%ebp), %ebx;movl %ebx, (%esp);movl $, (%esp)": 1,
                "movl %ebx, (%esp);movl $, (%esp);calll - <KeIpiGenericCall>;subl $, %esp;testb $, -": 1,
                "movl $, (%esp);calll - <KeIpiGenericCall>;subl $, %esp;movb $-, -;calll - <KeIAllocateGdtSelectors+>": 1,
                "movl $, (%eax);testb $, -;jne  <KeSynchronizeExecution+>;jmp  <KeSynchronizeExecution+>;addl $, %esi": 1,
                "movl %edx, (%esp);movl %edx, (%esp);movl %edx, (%esp);movl $, (%esp);calll - <KeIAllocateGdtSelectors+>": 2,
                "calll *-;subl $, %esp;movl %eax, (%esi);movl %edx, (%esi);rdtsc": 1,
                "movl %eax, (%esi);movl %edx, (%esi);movl $, (%esi);movl $, (%esi);leal (%esi), %ebx": 1,
                "movl %ecx, %eax;movl %ebx, %edx;subl (%esi), %eax;sbbl (%esi), %edx;movl %eax, -(%ebp)": 1,
                "movl %eax, (%esp);movl %edx, (%esp);movl %ecx, (%esp);movl %ebx, (%esp);calll  <wcstombs+>": 1,
                "jne  <KeSynchronizeExecution+>;movl $, -;jmp  <KeSynchronizeExecution+>;cmpl $, %eax;je  <KeSynchronizeExecution+>": 1,
                "movl $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax);movl (%ebp), %ebx": 1,
                "movl $, (%eax);movl $, (%eax);movl (%ebp), %ebx;movl %ebx, (%eax);movl %eax, (%eax)": 1,
                "movl %eax, (%eax);leal (%eax), %ebx;movl %ebx, (%eax);movw $, (%eax);movw $, (%eax)": 1,
                "leal (%eax), %ebx;movl %ebx, (%eax);movw $, (%eax);movw $, (%eax);movw $, (%eax)": 1,
                "movw $, (%eax);movw $, (%eax);movw $, (%eax);movw $, (%eax);movb %cl, (%eax)": 1,
                "movl %esi, (%eax);movl %ebx, -(,%ecx,);movb $, (%eax);movl (%ebp), %ecx;movl %ecx, (%eax)": 1,
                "movl %ebx, (%esp);calll - <PoRequestShutdownEvent+>;subl $, %esp;cmpb $, (%ebx);jne  <KeSynchronizeExecution+>": 1,
                "subl $, %esp;cmpb $, (%ebx);jne  <KeSynchronizeExecution+>;movl $, (%esp);movl $, (%esp)": 1,
                "movb $, -;movl , %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl $, (%esp)": 1,
                "movl (%ebx), %eax;movl %eax, ;movzbl -(%ebp), %eax;movl %eax, ;movzbl (%ebx), %eax": 1,
                "movzwl %dx, %ecx;movl %ecx, -;movw $, -;movzbl %al, %ecx;movw %cx, -": 1,
                "movb %dl, -;movl %eax, %edx;andl $, %edx;cmpl $, %edx;sete -": 1,
                "andl $, %eax;movb %al, ;movl %esi, (%ebx);movl $, (%ebx);movl %esi, (%ebx)": 1,
                "movl %eax, (%ebx);movl , %eax;movl %eax, (%ebx);movl $, (%esp);movl $, (%esp)": 1,
                "movl %esi, (%esp);calll - <KeSetPriorityThread>;subl $, %esp;calll *-;cmpb $, %al": 1,
                "cmpl $, (%ebx);jne  <KeSynchronizeExecution+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "xchgl %eax, (%esi);movl $, %ecx;calll *-;movl (%ebp), %eax;movl $, (%eax)": 1,
                "movl $, %ecx;calll *-;movl (%ebp), %eax;movl $, (%eax);leal -(%ebp), %esp": 1,
                "pushl %ebx;subl $, %esp;movl %fs:, %edx;movl , %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movzbl -, %ecx;subl $, %ecx;movsbl %cl, %ecx;movl %ecx, (%esp)": 1,
                "movl (%eax), %eax;movl %eax, (%esp);movl $, (%esp);calll - <KeSynchronizeExecution+>;subl $, %esp": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %ecx;rdtsc": 1,
                "movl (%ebp), %ecx;rdtsc;movl %eax, ;movl %edx, -;movl %ecx, -": 1,
                "jne  <KeSynchronizeExecution+>;movl $, %eax;movl %eax, %fs;movl $, %fs:;movl , %eax": 1,
                "movl , %eax;movl %eax, (%ecx);movl $, (%ecx);movl %eax, -(%ebp);movl $, -": 1,
                "movl %eax, -(%ebp);movl $, -;movl $, -;calll - <KeIAllocateGdtSelectors+>;leal -(%ebp), %eax": 1,
                "testl $, %edi;je  <KeSynchronizeExecution+>;movw $, (%edi);addl $, %edi;subl $, %edx": 3,
                "movzbl -(%ebp), %ecx;shll %cl, %esi;movl %esi, %fs:;movl %esi, %fs:;movl %esi, %fs:": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll *-;subl $, %esp;movl %fs:, %eax": 1,
                "calll *-;subl $, %esp;movl %fs:, %eax;orl %eax, -;addb $, -": 1,
                "pushl $;jmp - <KeSynchronizeExecution+>;jmp  <KeSynchronizeExecution+>;movl (%ecx), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ecx), %eax;leal (%eax), %edx;movl %edx, (%eax);movl %edx, (%eax);calll - <KeIAllocateGdtSelectors+>": 1,
                "ja  <KeSynchronizeExecution+>;cmpl $, %ebx;jne  <KeSynchronizeExecution+>;movl $, (%esp);movl (%edi), %eax": 1,
                "movl $, %eax;jmp  <KeSynchronizeExecution+>;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 4,
                "movl %edi, -(%ebp);movl $, %ecx;calll *-;movl %fs:, %edx;movl (%edx), %ecx": 1,
                "movl (%edx), %ecx;movl (%ebp), %ebx;andl $-, %ebx;shrl %ebx;movzwl (%ebp), %edx": 1,
                "movzwl (%esi), %edi;andw $, %di;movl (%ebp), %edx;andl $, %edx;shrl $, %edx": 1,
                "je  <KeSynchronizeExecution+>;movl %ecx, %ebx;movl $, %esi;andl %ebx, %esi;movl $, %eax": 1,
                "jns  <KeSynchronizeExecution+>;movzbl (%edx), %ecx;shll $, %ecx;movzbl (%edx), %eax;shll $, %eax": 1,
                "andl $, %eax;cmpb $, %al;sbbl %eax, %eax;andl $, %eax;subl $, %eax": 1,
                "movl $, (%esp);calll  <DbgPrint>;movl $, %eax;jmp  <KeSynchronizeExecution+>;movl $, %eax": 1,
                "movl (%eax), %eax;movl (%eax), %esi;movzwl (%esi), %eax;movzbl (%esi), %edx;movl %eax, %ecx": 1,
                "cmpl %eax, -(%ebp);jae  <KeSynchronizeExecution+>;movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp);movl $, (%esp);calll - <ExAllocatePool>": 1,
                "testl %eax, %eax;jne  <KeSynchronizeExecution+>;movzbl -(%ebp), %edx;movl $, %ecx;calll *-": 1,
                "shrl $, %eax;orb $-, %ah;movw %ax, (%esi);movl -(%ebp), %edx;andl $, %edx": 1,
                "orb $-, %ah;movw %ax, (%esi);movl -(%ebp), %edx;andl $, %edx;shrl $, %edx": 1,
                "calll  <memmove>;testl %ebx, %ebx;je  <KeSynchronizeExecution+>;movl $, (%esp);leal (%ebp), %eax": 1,
                "calll  <memmove>;movzbl -(%ebp), %edx;movl $, %ecx;calll *-;movl $, %eax": 1,
                "calll *-;movl $, %eax;jmp  <KeSynchronizeExecution+>;movl $, %eax;jmp  <KeSynchronizeExecution+>": 1,
                "cli;lock;subl $, (%eax);cmpl $, (%eax);je - <KeSynchronizeExecution+>": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <KeSynchronizeExecution+>;subl $, %esp": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <KeSynchronizeExecution+>": 1,
                "addl -(%ebp), %eax;orb $, (%eax);shrdl $, %edi, %esi;shll $, %esi;movl (%eax), %edx": 1,
                "movl (%ebx), %eax;andl $, %eax;movl %eax, (%esp);calll - <MmGetPhysicalAddress>;subl $, %esp": 1,
                "movl (%ebp), %edi;addl $, %edi;movb $-, %dl;testl $, %edi;je  <KeSynchronizeExecution+>": 1,
                "addl $, %edi;movb $-, %dl;testl $, %edi;je  <KeSynchronizeExecution+>;movw $, (%edi)": 1,
                "calll - <KeSynchronizeExecution+>;subl $, %esp;movl %eax, %esi;movl %edx, %edi;movl (%ebp), %edx": 1,
                "movl %esi, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <KeSynchronizeExecution+>;subl $, %esp": 1,
                "movl $, %eax;jmp  <KeSynchronizeExecution+>;movl $, %ebx;movl (%ebp), %esi;jmp - <KeSynchronizeExecution+>": 1,
                "movb $, -(%eax);leal (%esi), %edi;movb $-, %dl;testl $, %edi;je  <KeSynchronizeExecution+>": 1,
                "sbbl %eax, %eax;andl $-, %eax;addl $, %eax;movl %eax, %edx;orl $, %edx": 1,
                "leal -(%ecx), %edx;leal -(%ecx), %eax;movl %eax, %edi;movl $, %ebx;testb $, %al": 1,
                "testb $, %bl;je  <KeSynchronizeExecution+>;movw $, (%edi);addl $, %edi;testb $, %bl": 1,
                "movl %edx, (%ecx);movl (%ebp), %edx;movl %edx, (%ecx);movl (%ebp), %edx;movl %edx, (%ecx)": 1,
                "movb $, (%eax);movl $, %ecx;calll - <WRITE_REGISTER_BUFFER_ULONG+>;sti;pause": 1,
                "subl $, (%eax);movl (%ebx), %eax;subl $, (%eax);movl (%ebx), %eax;movzwl (%edi), %edx": 1,
                "movl $, (%esp);calll - <KeBugCheckEx>;movl $, %eax;cmpb $, (%esi);je  <KeSynchronizeExecution+>": 1,
                "movl %esi, (%ecx);cli;movl %cr, %edx;movzbl (%eax), %ebx;movl (%eax), %esi": 1,
                "movl %fs:, %ebx;movl %ebx, -(%ebp);leal (%ebx), %edi;cli;movl (%ebx), %eax": 1,
                "testb %al, %al;je  <KiDispatchInterrupt+>;movb $, (%ebx);calll - <KeRemoveEntryDeviceQueue+>;jmp  <KiDispatchInterrupt+>": 1,
                "calll - <KeRemoveEntryDeviceQueue+>;jmp  <KiDispatchInterrupt+>;movl (%ebx), %eax;testl %eax, %eax;je  <KiDispatchInterrupt+>": 1,
                "cmpl %eax, %edi;je  <KiDispatchInterrupt+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "subl $, %esp;movl (%ebx), %eax;testl %eax, (%esi);je  <KiDispatchInterrupt+>;movb $, (%esi)": 1,
                "movb $, (%esi);movsbl (%esi), %edi;movzbl (%esi), %eax;movb %al, -(%ebp);movb $, (%esi)": 1,
                "movl , %eax;movl %eax, (%esi);cmpl $, %edi;jbe  <KiDispatchInterrupt+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpb $, -(%ebp);je  <KiDispatchInterrupt+>": 1,
                "movl -(,%edi,), %eax;movl -(%ebp), %edx;orl %eax, (%edx);movsbl (%esi), %eax;cmpl %eax, %edi": 1,
                "testb $, (%ecx);jne  <KiEoiHelper+>;testb $, (%ecx);je  <KiEoiHelper+>;movl %fs:, %eax": 21,
                "movl %edx, -(%ebp);movl $, %ecx;movl -(%ebp), %edx;calll *%edx;movl %eax, %esi": 1,
                "calll *%edx;movl %eax, %esi;sti;movl %edi, (%esp);movl $, (%esp)": 1,
                "movl %fs:, %eax;movl (%edi), %edx;movl %edx, (%eax);testl $, (%edi);je  <KiEoiHelper+>": 1,
                "je  <KiEoiHelper+>;movl $, %eax;movl %eax, %dr;movl (%edi), %eax;movl %eax, %dr": 1,
                "je  <KiEoiHelper+>;movl %edi, %ecx;calll - <WRITE_REGISTER_BUFFER_ULONG+>;movl (%edi), %edx;testb $, %dl": 1,
                "pushl %ebx;subl $, %esp;movl %ecx, %ebx;testb $, (%ecx);je  <KiEoiHelper+>": 2,
                "calll  <KeUserModeCallback+>;cmpb $-, %al;jne  <KiEoiHelper+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %esi;testb $, (%ebx);je  <KiEoiHelper+>;movb $, (%esi);cmpb $, (%esi)": 1,
                "movl %edx, -(%ebp);movl $, %ecx;calll *%edi;movb %al, -(%ebp);sti": 1,
                "jne  <KiEoiHelper+>;movl (%ebx), %esi;movl $, %edx;jmp  <KiEoiHelper+>;cmpb -(%eax), %cl": 1,
                "cmpb $, %dl;je  <KiEoiHelper+>;cmpb $, %al;je  <KiEoiHelper+>;cmpb $, %al": 1,
                "jmp  <KiEoiHelper+>;cmpb $, %al;je  <KiEoiHelper+>;cmpb $, %al;nop": 1,
                "andl $, %edx;cmpl %edx, %ecx;jae  <KiEoiHelper+>;leal (%eax), %edx;cmpb $, %dl": 1,
                "calll - <WRITE_REGISTER_BUFFER_ULONG+>;jmp  <KiEoiHelper+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll  <RtlAssert>;subl $, %esp;testl $, (%ebx);jne  <KiEoiHelper+>;movl $, (%esp)": 1,
                "movl %edi, %eax;movzbl %al, %ecx;movl -(%ebp), %edx;calll *%edx;cli": 2,
                "movl (%ebx), %eax;movl %eax, %dr;movl (%ebx), %eax;movl %eax, %dr;movl %fs:, %eax": 1,
                "sti;movl %esi, (%esp);movl $, (%esp);movl $, (%esp);calll - <KiDeliverApc>": 1,
                "movl (%esi), %edx;movl %edx, (%eax);testl $, (%esi);je  <KiEoiHelper+>;testb $, (%esi)": 1,
                "movl %fs:, %eax;movl (%eax), %edx;movl (%esi), %eax;movb %al, (%edx);movl (%esi), %eax": 1,
                "calll - <WRITE_REGISTER_BUFFER_ULONG+>;movl %esi, %ecx;calll - <WRITE_REGISTER_BUFFER_ULONG+>;pushl %ebp;movl %esp, %ebp": 1,
                "movl %esi, %ecx;calll - <WRITE_REGISTER_BUFFER_ULONG+>;pushl %ebp;movl %esp, %ebp;pushl %esi": 1,
                "movl $, (%esp);movl (%ebx), %eax;subl $, %eax;movl %eax, (%esp);movl $, (%esp)": 2,
                "cmpl $, -;je  <KiEoiHelper+>;movzwl (%ebx), %eax;movzwl (%ebx), %edx;movl (%ebx), %ecx": 1,
                "notl %eax;andl %edx, %eax;testb $, %al;je  <KiEoiHelper+>;testb $, %al": 1,
                "movl %ecx, (%esp);movl $, (%esp);calll - <KeSaveStateForHibernate+>;movl %esi, (%esp);movl $, (%esp)": 2,
                "calll - <KeSaveStateForHibernate+>;movl %esi, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cli;movl -, %ebx;movl , %eax;movl (%eax), %eax;movl (%eax), %edx": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movzwl (%ebx), %eax;movl %eax, -(%ebp);movl , %eax": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movl $, (%esp);movl %edx, (%esp);calll - <KeInvalidateAllCaches+>": 1,
                "subl $, %esp;calll - <KeAreAllApcsDisabled+>;testb %al, %al;jne  <KiEoiHelper+>;movzbl -, %edi": 1,
                "movl , %eax;cmpw $, (%eax);je  <KiEoiHelper+>;movl %ebx, -;movb $-, (%esi)": 1,
                "iretl;movl $, %edx;movl $, %ecx;calll - <KeSaveStateForHibernate+>;pushl %ebp": 1,
                "movl (%eax), %edx;movl %edx, %dr;movl (%eax), %eax;movl %eax, %dr;movl $, (%esp)": 4,
                "movl %edx, %dr;movl (%eax), %eax;movl %eax, %dr;movl $, (%esp);movl $, (%esp)": 4,
                "movl (%eax), %eax;movl %eax, %dr;movl $, (%esp);movl $, (%esp);movl $, %edx": 1,
                "movl (%eax), %eax;movl %eax, %dr;movl (%ebx), %edx;sti;testb $, (%ebx)": 1,
                "movl %ebx, (%esp);movl $, (%esp);movl $, (%esp);calll - <KeAreAllApcsDisabled+>;movl %eax, (%esp)": 1,
                "calll - <KiEoiHelper+>;pushl %ebp;movl %esp, %ebp;movl %ecx, %edx;movl $, %ecx": 1,
                "jne  <KiEoiHelper+>;movl %ebx, (%esp);movl (%ebx), %eax;movl %eax, (%esp);movl (%ebx), %eax": 1,
                "calll - <KiEoiHelper>;movl %ebx, (%esp);movl (%ebx), %eax;andl $, %eax;movl %eax, (%esp)": 1,
                "movl %esi, (%esp);movl (%ebx), %eax;andl $, %eax;movl %eax, (%esp);calll - <MmGetPhysicalAddress+>": 1,
                "movl %ebx, %ecx;calll - <KiEoiHelper>;testb $, (%ebx);jne  <KiEoiHelper+>;testb $, (%ebx)": 1,
                "cmpl $, %edi;jne  <KiEoiHelper+>;movl %ebx, (%esp);movl $, (%esp);movl %esi, (%esp)": 2,
                "andl $, %eax;movl %eax, (%esp);movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 3,
                "calll - <KeSaveStateForHibernate+>;movl %ebx, (%esp);movl %edi, (%esp);movl %esi, (%esp);movl (%ebx), %eax": 1,
                "movl %ebx, (%esp);movl %edi, (%esp);movl %esi, (%esp);movl (%ebx), %eax;shrl %eax": 1,
                "movl $, (%esp);calll - <KeAreAllApcsDisabled+>;movl (%esi), %edi;testb $, (%ebx);jne  <KiEoiHelper+>": 1,
                "movl $, (%esp);movl $, (%esp);calll - <KeAreAllApcsDisabled+>;leal -(%edi), %eax;movl %cr, %edx": 1,
                "orl $, %edx;movl %edx, %cr;movb $, (%esi);movl %fs:, %edx;movl $, (%edx)": 1,
                "movl (%ecx), %eax;movl %eax, (%esp);calll  <KeUserModeCallback+>;subl $, %esp;movl %eax, %edx": 1,
                "movl %eax, (%esp);calll  <KeUserModeCallback+>;subl $, %esp;movl %eax, %edx;movl %ebx, %ecx": 1,
                "movl %eax, %edx;movl %ebx, %ecx;calll - <KiEoiHelper+>;pushl %ebp;movl %esp, %ebp": 1,
                "movl (%eax), %edx;movl %edx, %dr;movl (%eax), %eax;movl %eax, %dr;movl (%ecx), %eax": 1,
                "movl (%ecx), %edx;movl (%ecx), %eax;movl %eax, (%esp);movl (%ecx), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <KiEoiHelper+>;pushl %ebp;movl %esp, %ebp;pushl %edi": 1,
                "movl %eax, %edx;movl (%eax), %eax;movl %eax, (%ecx);movl $, (%ecx);movsbl (%edx), %eax": 2,
                "movl %fs:, %eax;movl $, (%eax);movl $, (%ecx);testb $, (%ecx);je  <KiEoiHelper+>": 2,
                "movl -(%ebp), %ecx;movl %ebx, (%ecx);movzbl (%ebx), %eax;andl $, %eax;movb %al, (%ecx)": 2,
                "andl $, %edi;movl %edi, -(%ebp);movl -(%ebp), %edi;andl $, %edi;movl -(%ebp), %esi": 2,
                "movl (%esi), %eax;movzbl (%eax,%edi), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx;cmpl -, %edx": 2,
                "movl -(%ebp), %edx;cmpl -, %edx;jae  <KiEoiHelper+>;testb $, (%ebx);jne  <KiEoiHelper+>": 2,
                "movl $, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;cmpl $, -(%ebp);jbe  <KiEoiHelper+>": 2,
                "movl %eax, %edx;cmpl $, -(%ebp);jbe  <KiEoiHelper+>;movl -, %ecx;testl %ecx, %ecx": 2,
                "movl %ebx, %ecx;calll - <KiEoiHelper+>;pushl %ebp;movl %esp, %ebp;pushl %edi": 1,
                "orb $, %ah;movl %eax, (%ecx);movl $, (%ecx);movl , %eax;movl %eax, (%ecx)": 1,
                "movl %eax, (%ecx);movl $, (%ecx);movl , %eax;movl %eax, (%ecx);movl $, (%ecx)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <KeBugCheckEx>;nop;nop": 1,
                "calll - <KeBugCheckEx>;nop;nop;nop;nop": 1,
                "testl %ecx, %ecx;jne  <KeiEoiHelper+>;addl $, %eax;retl;pushl %ebp": 1,
                "movl %eax, (%ebx);jmp  <KeiEoiHelper+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 1,
                "movl %fs:, %eax;movl (%eax), %eax;cmpb $, (%eax);je  <KeUserModeCallback+>;movl $, (%esp)": 2,
                "movl %eax, -(%ebp);movl (%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);jmp  <KeUserModeCallback+>": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll - <ProbeForWrite>;subl $, %esp;movl (%ebp), %edx": 1,
                "calll - <ProbeForWrite>;subl $, %esp;movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %eax": 1,
                "movl %esi, (%edx);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "je  <KeUserModeCallback+>;movl %edi, (%ebx);movl $, %eax;jmp  <KeUserModeCallback+>;movl -(%ebp), %edx": 1,
                "movl (%ebx), %edx;jmp  <KeUserModeCallback+>;movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>": 1,
                "calll *-;testb %al, %al;je  <KeUserModeCallback+>;calll *-;movl $, (%esp)": 1,
                "leal -(%edi), %eax;cmpl (%ebx), %eax;jae  <KeUserModeCallback+>;movl %edi, (%esp);calll - <MmGrowKernelStack>": 1,
                "movl %edx, (%eax);sti;movl $, %edx;movl %eax, %ecx;calll - <KiEoiHelper+>": 1,
                "movl %eax, -(%ebp);movl (%edi), %eax;movl -(%ebp), %edx;movl %eax, (%edx);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;subl $, %eax;movl %eax, -(%ebp);movl -(%ecx), %ecx;movl (%ebx), %eax": 1,
                "movl %edx, -(%ebp);cmpl $, (%ebp);jne  <KeUserModeCallback+>;movl (%edi), %eax;andl $, %eax": 1,
                "movl %eax, (%esp);leal (%edi), %eax;movl %eax, (%esp);movl %edx, %eax;addl $, %eax": 1,
                "calll  <memmove>;movl -(%ebp), %ecx;movl $, (%ecx);cmpb $, (%esi);je  <KeUserModeCallback+>": 1,
                "movl %eax, (%ecx);movl (%edi), %eax;movl %eax, (%ecx);movl (%edi), %eax;movl %eax, (%ecx)": 4,
                "movl %eax, (%ecx);movl (%edi), %eax;movl %eax, (%ecx);movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "testb $, (%ecx);je  <KeUserModeCallback+>;movl %ecx, %edx;addl $, %edx;movl %edx, (%eax)": 1,
                "movl %ecx, %edx;addl $, %edx;movl %edx, (%eax);jmp  <KeUserModeCallback+>;movl -(%ebp), %edx": 1,
                "movl %edx, (%eax);movl (%ebx), %eax;movl %eax, (%esi);movl -(%ebp), %eax;movl %eax, (%esi)": 1,
                "subl $, %esp;lock;andl $, ;lock;orl %edi, ": 1,
                "jmpl *-(,%eax,);calll - <KeUserModeCallback+>;jmp  <KeUserModeCallback+>;orb $, %dh;leal (%esi), %esi": 1,
                "pushl %ebx;subl $, %esp;movl %ecx, %ebx;leal (%ecx), %edi;movl $, (%ecx)": 1,
                "movl %eax, (%esp);calll  <memmove>;movl %fs:, %eax;movl $, (%eax);movl %fs:, %eax": 1,
                "testl %edx, %edx;je  <KeCallBios+>;movb $, (%edi);movb $-, ;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movb %al, ;movl $, ;movl $, ;movl $, %edi": 1,
                "movl $, (%edx);movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax;movl %edx, (%eax)": 1,
                "calll - <KeSetSystemAffinityThread>;subl $, %esp;movl %fs:, %eax;movl (%eax), %eax;cmpw $, (%eax)": 1,
                "subl $, %esp;movl $, (%esp);movl , %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll  <memmove>;movl (%ebp), %eax;movl $, (%eax)": 1,
                "movl $, %eax;jmp  <KeCallBios+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movl $, %eax;addl $, %esp;popl %ebx;popl %ebp;retl $": 12,
                "cmpl $, %eax;jne - <KeQueryIoAccessMap+>;movl $, %eax;jmp  <KeQueryIoAccessMap+>;movl %fs:, %ebx": 1,
                "je  <KeQueryIoAccessMap+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>": 19,
                "movl $, (%esp);calll  <DbgPrint>;movl $, (%esp);calll - <KeBugCheck>;movl $, %eax": 1,
                "movl $, %eax;jmp  <KeQueryIoAccessMap+>;movl $, %eax;testb $, %dh;jne  <KeQueryIoAccessMap+>": 1,
                "movl $, %eax;retl;leave;rep  retl;pushl %ebp": 1,
                "jbe  <KeQueryIoAccessMap+>;testl %eax, %eax;jne  <KeQueryIoAccessMap+>;movl $, (%esp);movl $, (%esp)": 3,
                "jne  <KeQueryIoAccessMap+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 12,
                "calll - <ExAllocatePoolWithQuota+>;subl $, %esp;testl %eax, %eax;jne  <KeQueryIoAccessMap+>;movl $, (%esp)": 2,
                "calll - <KeBugCheck>;movl -(%ebp), %ecx;leal (%eax,%ecx,), %edx;testb $, (%edx);jne  <KeQueryIoAccessMap+>": 1,
                "movl %eax, (%esp);calll - <ExAllocatePoolWithQuota+>;subl $, %esp;movl %fs:, %eax;movl (%eax), %eax": 1,
                "jne  <KeQueryIoAccessMap+>;movl %edi, %eax;testb %al, %al;je  <KeQueryIoAccessMap+>;movl -(%ebp), %ecx": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;movl %ebx, -(,%eax,);movl %fs:, %eax": 1,
                "cmpb $, %al;je  <KeQueryIoAccessMap+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll - <MmGrowKernelStack+>;subl $, %esp;jmp  <KeQueryIoAccessMap+>;movl $, %esi;jmp  <KeQueryIoAccessMap+>": 1,
                "subl $, %esp;movl $, %ecx;calll - <KeQueryIoAccessMap+>;movl $, %ebx;testl %eax, %eax": 1,
                "movl (%ebp), %edx;movl (%ebp), %eax;calll - <KeQueryIoAccessMap+>;movl %eax, %edx;andl $, %edx": 1,
                "movl %edi, -(%ebp);movl (%ebp), %edi;movl (%ebp), %ebx;movzbl (%ebp), %eax;movb %al, -(%ebp)": 1,
                "calll - <KeQueryIoAccessMap+>;testl %eax, %eax;jne  <KeQueryIoAccessMap+>;testl %edi, %edi;je  <KeQueryIoAccessMap+>": 1,
                "je  <KeQueryIoAccessMap+>;movb $, (%edi);testl %ebx, %ebx;je  <KeQueryIoAccessMap+>;movl $, (%ebx)": 1,
                "movl (%ebp), %ecx;movl (%ecx), %edx;movl (%ebp), %eax;shrl $, %eax;addl $, %eax": 1,
                "addl $, %eax;subw $, (%edx,%eax,);movl (%ecx), %edx;cmpw $, (%edx,%eax,);jbe  <KeQueryIoAccessMap+>": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;movl $, %ecx": 1,
                "testb $, %bl;je  <KeQueryIoAccessMap+>;shrl $, %ecx;movzbl -(,%ecx,), %eax;andl $, %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;movl (%ebp), %eax;calll - <KeQueryIoAccessMap+>;shrl $, %eax": 1,
                "movl $, (%esp);calll - <KeBugCheck>;movl %ecx, %eax;calll - <KeQueryIoAccessMap+>;movl -(%ebp), %ebx": 1,
                "pushl %ebx;subl $, %esp;movl $, %ecx;movl (%ebp), %edx;movl (%ebp), %eax": 1,
                "subl $, %esp;movl $, %ecx;movl (%ebp), %edx;movl (%ebp), %eax;calll - <KeQueryIoAccessMap+>": 1,
                "lock;cmpxchgl %eax, (%edx);testl %eax, %eax;je  <KeQueryIoAccessMap+>;movl (%edx), %ecx": 1,
                "lock;cmpxchgl %ebx, (%edx);cmpl %eax, %ecx;jne - <KeQueryIoAccessMap+>;movl %edx, %eax": 1,
                "movl %edx, %eax;calll - <KeQueryIoAccessMap+>;addl $, %esp;popl %ebx;popl %ebp": 1,
                "calll - <KeBugCheckEx>;cmpl -, %esi;jae  <KeQueryIoAccessMap+>;movl (%edi), %eax;shrl $, %esi": 1,
                "ja  <KeQueryIoAccessMap+>;movl (%ebp), %eax;shrl $, %eax;addl (%ebp), %eax;cmpl $, %eax": 1,
                "shrl $, %eax;cmpl %eax, (%ebp);ja  <KeQueryIoAccessMap+>;movl (%ebp), %edx;shrl $, %edx": 1,
                "movl $, (%esp);calll - <KeBugCheck>;movl %ebx, -(%ebp);movl %ebx, %edx;shrl $, %edx": 1,
                "calll  <DbgPrint>;movl $, (%esp);calll - <KeBugCheck>;cmpl %ebx, -;jbe  <KeQueryIoAccessMap+>": 1,
                "calll - <KeBugCheck>;cmpl %ebx, -;jbe  <KeQueryIoAccessMap+>;movl (%ebp), %eax;movl (%eax), %edx": 1,
                "movl (%ebp), %eax;movl (%eax), %edx;movl -(%ebp), %eax;addl $, %eax;addw $, (%edx,%eax,)": 1,
                "cmpl (%ebp), %esi;jne - <KeQueryIoAccessMap+>;cmpl %ebx, (%ebp);jb  <KeQueryIoAccessMap+>;jmp  <KeQueryIoAccessMap+>": 1,
                "jmp  <KeQueryIoAccessMap+>;movl $, %edi;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll - <KeQueryIoAccessMap+>;subl $, %esp;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl $, %edx;testb $, %al;je  <KeQueryIoAccessMap+>;movl %eax, %edx;andl $, %edx": 1,
                "ja  <KeQueryIoAccessMap+>;movl %eax, %ebx;andl $, %ebx;jmp  <KeQueryIoAccessMap+>;movl %eax, %ebx": 1,
                "calll - <KeQueryIoAccessMap+>;jmp  <KeQueryIoAccessMap+>;calll - <KeQueryIoAccessMap+>;leal -(%ebp), %esp;popl %ebx": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;cmpl $, -;ja  <KeQueryIoAccessMap+>": 1,
                "movl $, -;movl , %eax;subl $, %eax;movl %eax, ;movl , %eax": 1,
                "subl %ebx, %edx;shrl $, %edx;cmpl %eax, %edx;sbbl %eax, %eax;notl %eax": 1,
                "addl -, %eax;andl $, %eax;movl %eax, -(%ebp);movl %eax, ;movl , %eax": 1,
                "movl %eax, ;cmpl $, %eax;ja  <KeQueryIoAccessMap+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl $, -;movl , %eax": 1,
                "orl %edi, %esi;orl %eax, %esi;movl %esi, (%ebx);movl %ebx, %edx;shll $, %edx": 2,
                "cmpl %ebx, -(%ebp);jae - <KeQueryIoAccessMap+>;movl , %eax;shrl $, %eax;leal -(,%eax,), %ebx": 1,
                "movl -, %edx;movl , %eax;leal -(%edx,%eax), %eax;shrl $, %eax;leal -(,%eax,), %eax": 1,
                "orl %edi, %esi;movl %esi, -(%ebx);movl %ebx, %eax;cmpl %ebx, -(%ebp);jae - <KeQueryIoAccessMap+>": 1,
                "subl $, %esp;calll - <MmFreeNonCachedMemory+>;calll - <MmFreeNonCachedMemory+>;movl (%ebp), %ecx;movl %ecx, (%esp)": 1,
                "shll $, %ebx;andl $, %edi;orl %edi, %ebx;movl %ebx, -;calll - <KeIAllocateGdtSelectors+>": 1,
                "movl $, %ecx;calll *-;movl $, %edi;movl $, %edx;movl %edx, %ecx": 1,
                "addl $, %edi;testb $, %dl;je  <KeQueryIoAccessMap+>;movb $, (%edi);movl , %eax": 1,
                "shrl $, %ebx;movl $, %edx;cmpl -, %ebx;ja  <KeQueryIoAccessMap+>;cmpl $, -": 1,
                "calll  <RtlTestBit>;subl $, %esp;movl $, %edx;testb %al, %al;je  <KeQueryIoAccessMap+>": 2,
                "movl -(%ebp), %edi;andl $, %edi;orl %eax, %edi;testb $, -(,%ebx,);je  <KeQueryIoAccessMap+>": 1,
                "leal -(,%eax,), %ebx;testb $, -(,%eax,);jne  <KeQueryIoAccessMap+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpl -, %esi;ja  <KeQueryIoAccessMap+>;cmpl $, -;je  <KeQueryIoAccessMap+>;movl %esi, (%esp)": 1,
                "calll - <KeSaveStateForHibernate+>;subl $, %esp;leave;retl $;pushl %ebp": 1,
                "movzbl (%ebp), %esi;calll *-;cmpb $, %al;jbe  <KeQueryIoAccessMap+>;calll *-": 1,
                "pushl %ebx;subl $, %esp;calll *-;cmpb $, %al;jbe  <KeQueryIoAccessMap+>": 1,
                "movl %eax, -(%ebp);movl (%edx), %eax;movl %eax, -(%ebp);jmp  <KeQueryIoAccessMap+>;movl $, %eax": 1,
                "movl $, %eax;leal -(%ebp), %ecx;calll  <IoCsqRemoveNextIrp+>;jmp - <KeQueryIoAccessMap+>;movl -(%ebp), %eax": 2,
                "movl -(%ebp), %edx;movl %edx, %fs:;jmp  <KeQueryIoAccessMap+>;leal (%esi), %esi;jmp - <KeQueryIoAccessMap+>": 1,
                "jmp  <KeQueryIoAccessMap+>;movl (%ebp), %eax;movl (%eax), %edx;movl $, %eax;cmpl $, (%edx)": 1,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <KeQueryIoAccessMap+>;movl $, -(%ebp);movl -(%ebp), %eax": 1,
                "movl (%ebp), %ebx;calll *-;cmpb $, %al;jbe  <NtVdmControl+>;calll *-": 3,
                "testl %ebx, %ebx;je  <NtVdmControl+>;cmpl $, %ebx;jne  <NtVdmControl+>;jmp  <NtVdmControl+>": 1,
                "cmpb $, %al;je  <NtVdmControl+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 8,
                "movl %eax, (%edi);movl (%ebx), %eax;movl %eax, (%edi);jmp  <NtVdmControl+>;cmpl $, (%ebx)": 1,
                "xorl %edx, %eax;testl $, %eax;je  <NtVdmControl+>;movl %ebx, (%esp);calll - <KeSaveStateForHibernate+>": 1,
                "calll *-;movb %al, -(%ebp);cmpl $, ;je  <NtVdmControl+>;movl $, (%esp)": 1,
                "movl -(%ebp), %eax;testb $, (%eax);jne  <NtVdmControl+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpb $, -;je  <NtVdmControl+>;movl -(%ebp), %eax;movl (%eax), %edx;testl $, %edx": 1,
                "leal -(%ebp), %edi;leal (%eax), %esi;movl $, %ecx;rep  movsl (%esi), %es:(%edi);testl $, -(%ebp)": 1,
                "movzbl -(%ebp), %ecx;calll *-;movl $, %eax;jmp  <NtVdmControl+>;leal -(%ebp), %edx": 1,
                "movl $, %ecx;calll *-;movb %al, -(%ebp);movl $, (%ebx);leal -(%ebp), %edi": 1,
                "movl $, (%ebx);leal -(%ebp), %edi;leal (%ebx), %esi;movl $, %ecx;rep  movsl (%esi), %es:(%edi)": 1,
                "movl $, %ecx;rep  movsl (%esi), %es:(%edi);testb $, -(%ebp);jne  <NtVdmControl+>;testl $, -(%ebp)": 1,
                "jne  <NtVdmControl+>;testl $, -(%ebp);je  <NtVdmControl+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <NtVdmControl+>;subl $, %esp;cmpb $, -": 1,
                "je  <NtVdmControl+>;movzwl (%ebx), %esi;shll $, %esi;movzwl (%ebx), %eax;addl %eax, %esi": 1,
                "addl $, -;movl %fs:, %eax;movl (%eax), %eax;movl $, (%eax);movzbl (%esi), %edx": 1,
                "subl $, %esp;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp": 1,
                "nop;pushl %ebp;movl %esp, %ebp;pushl %ebx;movl $, %ebx": 1,
                "andl $, %ecx;addl %ecx, %edx;cmpl $, %edx;jbe  <NtVdmControl+>;movl %eax, %edx": 1,
                "orl %ebx, %eax;movl %eax, ;invlpg -;leal -(%ecx), %eax;popl %ebx": 1,
                "invlpg -;leal -(%ecx), %eax;popl %ebx;popl %ebp;retl": 1,
                "leal -(%ecx), %eax;popl %ebx;popl %ebp;retl;pushl %ebp": 1,
                "movl $, %edx;jmp  <NtVdmControl+>;movl $, %eax;movl $, %edx;addl $, %esp": 1,
                "andl $, %eax;movl %ebx, %edx;shrl $, %edx;leal (%eax,%edx,), %eax;movl $, %edx": 1,
                "addl %ebx, %edx;movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax;jmp  <NtVdmControl+>": 1,
                "movl (%ebp), %esi;movl (%ebp), %ebx;cmpb $, -;jne  <NtVdmControl+>;movl %esi, (%esp)": 1,
                "jmp  <NtVdmControl+>;cmpl $, %esi;je  <NtVdmControl+>;cmpl $, %esi;jne  <NtVdmControl+>": 1,
                "calll - <NtVdmControl+>;movb %al, (%ebx);movl $, %edx;jmp  <NtVdmControl+>;movl $, %edx": 1,
                "movl %edi, (%eax);movl $, %edx;jmp  <NtVdmControl+>;movl %esi, (%eax);movl $, %edx": 1,
                "jmp  <NtVdmControl+>;movl %esi, %edx;movb %dl, (%eax);movl $, %edx;jmp  <NtVdmControl+>": 1,
                "movl %fs:, %edx;movl (%edx), %edx;cmpb $, (%edx);jne  <NtVdmControl+>;addl $, %eax": 1,
                "jmp  <NtVdmControl+>;movl $, %ecx;testl %edx, %edx;je  <NtVdmControl+>;movl %ecx, (%edx)": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;cmpl $, (%ebp);jne  <NtVdmControl+>": 3,
                "movl %ecx, -(%ebp);movzbl (%ebp), %eax;movb %al, -(%ebp);movl %edx, %ebx;movl %ecx, %edx": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <NtVdmControl+>;cmpb $, -(%ebp)": 1,
                "je  <NtVdmControl+>;movsbl %al, %edx;movl %ebx, %eax;calll - <NtVdmControl+>;jmp  <NtVdmControl+>": 1,
                "testb %al, %al;je - <NtVdmControl+>;cmpb $, -(%ebp);je  <NtVdmControl+>;movzbl -, %eax": 1,
                "movl -(%ebp), %edx;leal (%edx,%ebx,), %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "testb %dl, %dl;je  <NtVdmControl+>;jmp  <NtVdmControl+>;movzbl (%esi), %eax;movl %eax, %edx": 1,
                "movl %eax, %edx;shrb $, %dl;movsbl %dl, %edx;movzbl -(%edx), %edx;movb %dl, (%ebx)": 1,
                "cmpl $, %eax;jg  <NtVdmControl+>;movb $, %dl;cmpl $, %eax;jge  <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;cmpl $, %eax;je  <NtVdmControl+>;cmpl $, %eax;jne  <NtVdmControl+>": 2,
                "jmp  <NtVdmControl+>;movl $, %edx;jmp  <NtVdmControl+>;movl $, %edx;movb $, -": 1,
                "movzbl -(%eax), %eax;movb %al, ;andl $, %edx;movzbl -(%edx), %eax;movb %al, ": 1,
                "movl %ebx, %eax;calll - <NtVdmControl+>;movl %eax, -(%ebp);movl $, (%esp);movl $, %ecx": 1,
                "cmpb $, %al;je  <NtVdmControl+>;jmp - <NtVdmControl+>;movl $, %ebx;movl $, %esi": 1,
                "jne - <NtVdmControl+>;calll - <NtVdmControl+>;movsbl %al, %eax;movl %eax, (%esp);calll - <NtVdmControl+>": 1,
                "movzbl %bl, %eax;movl %eax, (%esp);calll - <NtVdmControl+>;addl %ebx, %edi;addl $, %esi": 2,
                "movzbl (%eax), %eax;testb %al, %al;je  <NtVdmControl+>;movl $, %ebx;movsbl %al, %eax": 1,
                "testb %al, %al;je  <NtVdmControl+>;movl $, %ebx;movsbl %al, %eax;movl %eax, (%esp)": 1,
                "js  <NtVdmControl+>;movl (%edi), %edx;shll $, %edx;orl %edx, %eax;movl %eax, (%edi)": 1,
                "movl (%esi), %eax;leal (%eax), %edx;movl %edx, (%esi);movzbl (%eax), %eax;testb %al, %al": 1,
                "movl %eax, (%ebx);addl $, %esp;popl %ebx;popl %ebp;retl": 2,
                "movl (%ebp), %esi;addl -(%ebx), %esi;movl $, -(%ebp);movl -(%edx), %ecx;movl $, (%esp)": 1,
                "movl $, -(%ebp);movl $, %edi;movl $, %ecx;movl (%ebp), %esi;rep  cmpsb %es:(%edi), (%esi)": 1,
                "movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx);movl $, %eax;movl -(%ebp), %esi": 1,
                "movb $, -;movl -, %ecx;testl %ecx, %ecx;je  <NtVdmControl+>;calll - <ObfDereferenceObject>": 2,
                "jmp  <NtVdmControl+>;movb $, -;jmp  <NtVdmControl+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %ecx;cmpl %eax, %ecx;jne  <NtVdmControl+>;movl $, -;calll - <ObfDereferenceObject>": 1,
                "movl $, -;movl , %eax;cmpl $, %eax;je  <NtVdmControl+>;movl (%eax), %edx": 1,
                "movl , %eax;cmpl $, %eax;je  <NtVdmControl+>;movl (%eax), %edx;leal (%eax), %ecx": 1,
                "je  <NtVdmControl+>;jmp  <NtVdmControl+>;movl (%eax), %edx;leal (%eax), %ecx;cmpl %ecx, %edx": 2,
                "testl %edx, %edx;jne  <NtVdmControl+>;jmp  <NtVdmControl+>;movl (%eax), %eax;cmpl $, %eax": 1,
                "movb $, -;movl (%edx), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "je  <NtVdmControl+>;movl (%eax), %edx;movl (%eax), %eax;leal (%edx), %ecx;cmpl %ecx, %eax": 1,
                "cmpl %ecx, %eax;je  <NtVdmControl+>;subl $, %eax;movl %eax, ;jmp  <NtVdmControl+>": 1,
                "subl $, %edx;jmp  <NtVdmControl+>;movl (%eax), %eax;cmpl $, %eax;jne - <NtVdmControl+>": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);addl $, %eax;movl %eax, (%esp);calll - <NtVdmControl+>": 1,
                "movl %edx, (%esp);addl $, %eax;movl %eax, (%esp);calll - <NtVdmControl+>;testb %al, %al": 1,
                "calll  <strcpy>;movl %esi, %ecx;calll - <ObfDereferenceObject>;leal -(%ebp), %edi;movl %ebx, %ecx": 1,
                "cmpb $, %al;jbe  <NtVdmControl+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl $, -;je  <NtVdmControl+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "calll - <ObfDereferenceObject>;movl $, -;cmpb $, -;je  <NtVdmControl+>;movl (%ebp), %edx": 1,
                "ja  <NtVdmControl+>;movzbl %dl, %edx;jmpl *-(,%edx,);movl $, %ebx;jmp  <NtVdmControl+>": 1,
                "jne  <NtVdmControl+>;calll - <PsGetCurrentThread>;movl (%ebp), %edi;jmp  <NtVdmControl+>;movl (%eax), %edi": 1,
                "jmp  <NtVdmControl+>;movl (%esi), %eax;movl (%edi,%eax), %eax;movl %eax, -(%ebp);jmp  <NtVdmControl+>": 1,
                "movl (%esi), %eax;movl (%edi,%eax), %eax;movl %eax, -(%ebp);jmp  <NtVdmControl+>;cmpl $, %ebx": 1,
                "jbe - <NtVdmControl+>;jmp  <NtVdmControl+>;movl -, %edx;testl %edx, %edx;je  <NtVdmControl+>": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);movl %edx, (%esp);movl %eax, (%esp);calll - <NtVdmControl+>": 2,
                "movl %eax, -(%ebp);cmpb $, %dl;jne  <NtVdmControl+>;leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "calll - <KeAttachProcess>;subl $, %esp;movb $, -;movl $, (%esp);movl -(%ebp), %ecx": 2,
                "movl -(%ebp), %eax;calll - <NtVdmControl+>;testl %ebx, %ebx;je  <NtVdmControl+>;calll - <KeDetachProcess>": 2,
                "cmpb $, %dl;jne  <NtVdmControl+>;movl , %eax;testl %eax, %eax;je  <NtVdmControl+>": 1,
                "movb $, -;movl $, (%esp);movl -(%ebp), %ecx;movl -(%ebp), %edx;movl -(%ebp), %eax": 2,
                "calll - <NtVdmControl+>;testl %eax, %eax;je  <NtVdmControl+>;movl -(%ebp), %eax;movl (%ebp), %edi": 1,
                "movl %eax, (%ecx);movl %dr, %eax;movl %eax, %edx;testb $, %ah;jne  <NtVdmControl+>": 1,
                "orl $, (%edi);jmp  <NtVdmControl+>;addl $, %ecx;addl $, %eax;cmpl $, %ecx": 1,
                "addl $, %ecx;addl $, %eax;cmpl $, %ecx;jne - <NtVdmControl+>;movl (%ebp), %eax": 1,
                "cmpl $, -;je  <NtVdmControl+>;movl $, %esi;movl $, -(%ebp);movl $, %ebx": 1,
                "je  <NtVdmControl+>;movb $, %al;cmpl $, %edx;je  <NtVdmControl+>;movl $, (%esp)": 1,
                "shll %cl, %edi;movl (%ebp), %ecx;orl (%ecx), %edi;movl %edi, -(%ebp);leal (%ebx,%ebx), %ecx": 1,
                "movl %edi, -(%ebp);leal (%ebx,%ebx), %ecx;movl $, %edi;shll %cl, %edi;movl %edi, -(%ebp)": 1,
                "jmp  <NtVdmControl+>;movl (%ebp), %ecx;movl %edx, (%ecx);addl $, %ebx;addl $, %esi": 1,
                "sete -(,%ebx,);movzbl -, %eax;testb %al, %al;je  <NtVdmControl+>;movl -(,%ebx,), %eax": 1,
                "movb $, -;jmp  <NtVdmControl+>;movl %eax, (%esp);calll - <NtVdmControl+>;jmp  <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;movl %eax, (%esp);calll - <NtVdmControl+>;nop;jmp  <NtVdmControl+>": 1,
                "je  <NtVdmControl+>;movl $, -;jmp  <NtVdmControl+>;movl %esi, -(,%ebx,);movb $, -(,%ebx,)": 1,
                "calll  <DbgPrint>;movl $, -;jmp  <NtVdmControl+>;leal -(%edx), %ebx;cmpl $, %ebx": 1,
                "movl $, (%esp);calll  <DbgPrint>;movl $, -;jmp  <NtVdmControl+>;movl -, %ebx": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;leal (%eax), %edx;movl -, %ebx": 1,
                "movl %eax, (%esp);calll  <memmove>;subl $, %ebx;movl %ebx, -;movw $, -": 2,
                "movl %edi, -(%ebp);cmpl (%eax), %esi;jne  <NtVdmControl+>;movl -(%ebp), %edi;cmpl (%eax), %edi": 1,
                "cmpl (%eax), %edi;jne  <NtVdmControl+>;leal (%edx), %eax;cmpl %ebx, %eax;jae  <NtVdmControl+>": 1,
                "movl %ebx, %ecx;subl %edx, %ecx;leal (%ecx,%ecx,), %ecx;leal -(,%ecx,), %ecx;movl %ecx, (%esp)": 1,
                "movl %edi, %eax;movzbl %al, %ecx;calll *-;movl $, %eax;leal -(%ebp), %esp": 1,
                "movl $, %eax;jmp  <NtVdmControl+>;movl $, %eax;popl %ebp;retl": 2,
                "movb %dl, (%eax);addl $, %eax;movl %eax, ;movl %ebx, %eax;jmp  <NtVdmControl+>": 1,
                "leal (%eax), %edi;movl %ebx, %eax;testl %edi, %edi;je  <NtVdmControl+>;jmp  <NtVdmControl+>": 1,
                "movl %ebx, %eax;testl %edi, %edi;je  <NtVdmControl+>;jmp  <NtVdmControl+>;cmpb $, %al": 1,
                "movl $, %eax;jmp  <NtVdmControl+>;testb %al, %al;jne  <NtVdmControl+>;calll  <DbgBreakPoint>": 1,
                "movzbl (%ebx), %eax;cmpb $, %al;jne - <NtVdmControl+>;movl %ebx, %eax;jmp  <NtVdmControl+>": 1,
                "cmpl $, -;je  <NtVdmControl+>;testl $, %esi;je  <NtVdmControl+>;movl , %eax": 1,
                "movl , %eax;movb $, (%eax);addl $, %eax;movl %eax, ;jmp  <NtVdmControl+>": 10,
                "movl %ebx, %eax;cmpb $, -;jne  <NtVdmControl+>;testb $, -;jne  <NtVdmControl+>": 2,
                "jne  <NtVdmControl+>;testb $, -;jne  <NtVdmControl+>;cmpl $, -(%ebp);je  <NtVdmControl+>": 1,
                "addl $, %eax;movl %eax, ;movl %ebx, %eax;jmp  <NtVdmControl+>;testb $, -": 1,
                "jmp  <NtVdmControl+>;orl $, -;movl %ebx, %eax;jmp  <NtVdmControl+>;testb $, -": 1,
                "movl %ebx, %eax;jmp  <NtVdmControl+>;testb $, -;jne  <NtVdmControl+>;jmp  <NtVdmControl+>": 2,
                "jne  <NtVdmControl+>;cmpl $, -;je  <NtVdmControl+>;movl , %eax;movb $, (%eax)": 2,
                "jne  <NtVdmControl+>;testb $, -;jne  <NtVdmControl+>;testb $, -;jne  <NtVdmControl+>": 1,
                "addl $, %eax;movl %eax, ;movl %ebx, %eax;jmp  <NtVdmControl+>;cmpl $, -(%ebp)": 2,
                "cmpb $, -;jne  <NtVdmControl+>;jmp - <NtVdmControl+>;cmpb $, -;jne  <NtVdmControl+>": 1,
                "jne  <NtVdmControl+>;jmp - <NtVdmControl+>;cmpb $, -;jne  <NtVdmControl+>;jmp - <NtVdmControl+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <sprintf>;movl $, %eax;jmp  <NtVdmControl+>": 1,
                "leal (%edx,%edx,), %eax;addl %eax, %eax;subl %eax, %ebx;addl $, %ebx;movb %bl, (%esi)": 1,
                "subl $, %esp;movl -, %ebx;testb $, %bl;je  <NtVdmControl+>;orl $, -": 1,
                "movl -, %ebx;testb $, %bl;je  <NtVdmControl+>;orl $, -;movsbl -, %eax": 1,
                "orl $, -;movsbl -, %eax;addl $, %eax;calll - <NtVdmControl+>;testb $, %bl": 3,
                "testb $, -;jne  <NtVdmControl+>;jmp  <NtVdmControl+>;movl -, %edx;movl -(%edx,%eax,), %eax": 2,
                "movl , %eax;movzbl -, %edx;movb %dl, (%eax);leal (%eax), %edx;movl %edx, -": 6,
                "jmp  <NtVdmControl+>;testb $, %dl;je - <NtVdmControl+>;jmp - <NtVdmControl+>;orl $, -": 1,
                "addl $, %eax;calll - <NtVdmControl+>;movl (%ebp), %edx;movl (%ebp), %eax;calll - <NtVdmControl+>": 1,
                "jmp - <NtVdmControl+>;popl %ebp;retl;pushl %ebp;movl %esp, %ebp": 3,
                "movl $, (%esp);calll  <sprintf>;movl $, %eax;calll - <NtVdmControl+>;jmp  <NtVdmControl+>": 1,
                "calll - <NtVdmControl+>;jmp  <NtVdmControl+>;orl $, -;movl $, %eax;jmp - <NtVdmControl+>": 3,
                "movsbl -, %eax;addl $, %eax;calll - <NtVdmControl+>;jmp  <NtVdmControl+>;orl $, -": 6,
                "addl -, %edx;movl %edx, (%esp);movl $, (%esp);movl $, (%esp);calll  <sprintf>": 2,
                "leal (%esi), %esi;jmpl *-(,%eax,);orl $, %ebx;movl %ebx, -;testl %edx, %edx": 1,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll *(%esi);testl %eax, %eax": 1,
                "movl %eax, (%esp);movl $, (%esp);movl $, (%esp);calll  <sprintf>;movl , %eax": 1,
                "orl %ecx, %eax;addl $, %edx;movl %edx, -;addl $, %esp;popl %ebx": 2,
                "calll - <NtVdmControl+>;movl $, %eax;calll - <NtVdmControl+>;addl $, %esp;popl %ebx": 2,
                "movl %ebx, (%esp);movl %eax, (%esp);movl $, (%esp);movl $, (%esp);calll  <sprintf>": 2,
                "movzbl (%edx), %eax;addl $, %edx;movl %edx, -;movl $, %edx;jmp  <NtVdmControl+>": 2,
                "andl %eax, %ecx;movl $, %edx;movl $, %eax;calll - <NtVdmControl+>;movsbl -, %eax": 2,
                "movl %edx, -;movl $, %edx;jmp  <NtVdmControl+>;testb $, -;jne  <NtVdmControl+>": 1,
                "addl $, %edx;movl %edx, -;movl $, %edx;testb %cl, %cl;jns  <NtVdmControl+>": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;testb $, -;jne  <NtVdmControl+>": 1,
                "movl (%eax,%edi,), %eax;calll - <NtVdmControl+>;jmp  <NtVdmControl+>;addl -, %edi;movl , %eax": 6,
                "jmp  <NtVdmControl+>;cmpl $, (%ebp);jne  <NtVdmControl+>;addl -, %edi;movl , %eax": 1,
                "andl $, %ecx;movl %ecx, %eax;negl %eax;andl $, %eax;orl %edi, %eax": 1,
                "cmpl $, %eax;je  <NtVdmControl+>;testl %eax, %eax;jne  <NtVdmControl+>;movl %ebx, %eax": 1,
                "addl $, %eax;movl %eax, ;cmpl $, -(%ebp);je  <NtVdmControl+>;movl $, %eax": 1,
                "movl $, %eax;calll - <NtVdmControl+>;movl , %eax;movb $, (%eax);testb $, -": 1,
                "movb $, (%eax);jmp  <NtVdmControl+>;cmpb $, -;je  <NtVdmControl+>;cmpl $, -": 1,
                "movl %eax, %ecx;movl $, %edx;movl $, %eax;calll - <NtVdmControl+>;movl $, %eax": 1,
                "cmpl $, -;jne  <NtVdmControl+>;movl , %eax;andl $, %eax;cmpl $, %eax": 1,
                "movzbl -, %edx;movb %dl, (%eax);addl $, %eax;movl %eax, ;jmp - <NtVdmControl+>": 2,
                "movl %eax, ;jmp - <NtVdmControl+>;movl , %eax;movzbl -, %edx;movb %dl, (%eax)": 1,
                "pushl %edi;subl $, %esp;cmpl $, -;jne  <NtVdmControl+>;movl , %eax": 1,
                "movw $, -(%ecx);movb $, -(%ecx);jmp  <NtVdmControl+>;cmpl $, %eax;jle  <NtVdmControl+>": 1,
                "calll - <NtVdmControl+>;jmp  <NtVdmControl+>;cmpl $, -;je  <NtVdmControl+>;calll - <NtVdmControl+>": 1,
                "notl %ecx;movl $, -(%ecx);movw $, -(%ecx);movb $, -(%ecx);addl $, %edx": 1,
                "cmpb $, -(%ecx);sete %cl;movzbl %cl, %ecx;subl %ecx, %eax;testl %edx, %edx": 1,
                "movl $, (%esp);calll  <strcpy>;movl (%ebx), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "cmpb $, -;jne  <NtVdmControl+>;calll  <DbgBreakPoint>;addl $, -;movl , %eax": 1,
                "calll  <wcstombs+>;testl %eax, %eax;je  <NtVdmControl+>;leal -(%ebp), %eax;cmpl %eax, -": 1,
                "movzbl (%ebx), %eax;cmpb $, %al;je  <NtVdmControl+>;cmpb $, %al;ja  <NtVdmControl+>": 1,
                "cmpb $, %dl;ja  <NtVdmControl+>;jmp  <NtVdmControl+>;cmpb $-, %al;nop": 1,
                "nop;je  <NtVdmControl+>;cmpb $-, %al;ja  <NtVdmControl+>;cmpb $, %al": 1,
                "movl $, %esi;jmp  <NtVdmControl+>;movl , %eax;testl %eax, %eax;je  <NtVdmControl+>": 1,
                "testl %eax, %eax;je  <NtVdmControl+>;movl $, %edx;calll - <NtVdmControl+>;calll - <NtVdmControl+>": 1,
                "je  <NtVdmControl+>;leal (%eax), %ecx;cmpb $, %cl;jbe  <NtVdmControl+>;movzbl -(%ebp), %eax": 1,
                "movzbl (%edx), %eax;imull $, %eax, %ebx;addl $, %ebx;movzbl -(%eax), %ecx;movb %cl, -": 1,
                "jne  <NtVdmControl+>;cmpl $, (%ebx);jne  <NtVdmControl+>;cmpb $, -;jne  <NtVdmControl+>": 1,
                "movl , %eax;movzbl (%eax), %eax;movl %eax, %edx;shrb $, %dl;movzbl %dl, %edx": 1,
                "movl %esi, %edx;calll - <NtVdmControl+>;movl $, -;movl %esi, (%esp);movzbl -(%ebx), %eax": 1,
                "addl %edx, %eax;leal -(%eax), %ebx;movl -(%eax), %eax;testl %eax, %eax;jne  <NtVdmControl+>": 1,
                "jne  <NtVdmControl+>;movl , %eax;movl (%eax), %eax;movl %eax, (%esp);movl $, (%esp)": 3,
                "calll - <NtVdmControl+>;movl $, -;movl (%ebx), %eax;testl %eax, %eax;je  <NtVdmControl+>": 1,
                "je  <NtVdmControl+>;cmpl $, %eax;jne  <NtVdmControl+>;imull $, -, %edx;imull $, (%ebx), %eax": 1,
                "je  <NtVdmControl+>;movl %ecx, -;movl $, %eax;jmp  <NtVdmControl+>;andl $, %eax": 1,
                "testl %eax, %edx;je  <NtVdmControl+>;orl $, %eax;movl -(%ebp), %edx;calll - <NtVdmControl+>": 1,
                "movl -, %edx;movl %edx, -;movl %eax, ;movl $, %ebx;movl $, %eax": 1,
                "je  <NtVdmControl+>;cmpl $, -;jne  <NtVdmControl+>;movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %eax, (%esp);calll *(%ecx);jmp  <NtVdmControl+>;movl %eax, (%esp);movl $, (%esp)": 1,
                "jmp  <NtVdmControl+>;movl $, (%esp);movl $, (%esp);movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "movl -(,%eax,), %eax;movl %eax, (%esp);calll *(%edx);jmp  <NtVdmControl+>;movl %ebx, (%esp)": 1,
                "jmp  <NtVdmControl+>;movl %ebx, (%esp);movl $, (%esp);movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "movl -, %ecx;subl %eax, %ecx;movl %ecx, %eax;jmp  <NtVdmControl+>;movl $, %eax": 1,
                "cmpb $, -;jne - <NtVdmControl+>;jmp  <NtVdmControl+>;cmpb $, -;jne - <NtVdmControl+>": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl $, (%esp);movl %ebx, (%esp);calll  <NtVdmControl+>": 1,
                "movl %ebx, (%esp);calll  <NtVdmControl+>;testb %al, %al;jne  <NtVdmControl+>;movl %ebx, (%esp)": 3,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <NtVdmControl+>;leave": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movb $-, -;movl (%ebp), %edx": 1,
                "notl %eax;addl $, %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "je  <NtVdmControl+>;movw $, (%eax);addl $, %eax;subl $, %edx;movl %edx, %ecx": 1,
                "movl %edx, (%ebx);movl %eax, (%ebx);movl %esi, (%esp);calll - <KeSaveStateForHibernate+>;subl $, %esp": 1,
                "cmpl $, %eax;ja  <NtVdmControl+>;leal (%eax,%eax,), %edx;cmpl $, -(,%edx,);je  <NtVdmControl+>": 1,
                "leal (%eax,%edx,), %eax;movl -(,%eax,), %edx;movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax": 1,
                "movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax;popl %ebp;retl": 1,
                "je  <NtVdmControl+>;testb %bl, %bl;sete %dl;movzbl %dl, %edx;leal (%edx,%eax,), %edx": 1,
                "leal (%edx,%eax,), %edx;movl %ecx, -(,%edx,);addl $, %eax;cmpl $, %eax;jne - <NtVdmControl+>": 1,
                "je  <NtVdmControl+>;cmpl $, -;je  <NtVdmControl+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %esi;movl $, %ecx;movl $, %eax;movl %esi, %edi;rep  stosl %eax, %es:(%edi)": 1,
                "addl $, %edx;movl %edx, -;movl $, -;movl $, -;movl $, -": 1,
                "movl -(%ebp), %eax;movl %eax, ;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %edx": 1,
                "movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <PsLookupProcessByProcessId>": 1,
                "jmp  <NtVdmControl+>;movl -(%ebp), %ecx;movl (%ecx), %ebx;calll - <ObfDereferenceObject>;movl , %eax": 1,
                "addl $, %eax;cmpl %eax, %ebx;jne  <NtVdmControl+>;movl %esi, (%esp);movl $, (%esp)": 1,
                "movl %ecx, (%esp);movl %eax, (%esp);calll - <NtVdmControl+>;subl $, %esp;testb %al, %al": 1,
                "movl %eax, (%esp);calll - <NtVdmControl+>;testl %eax, %eax;js  <NtVdmControl+>;movzbl -(%ebp), %eax": 4,
                "testl %eax, %eax;js  <NtVdmControl+>;movzbl -(%ebp), %eax;subl $, %eax;cmpb $, %al": 1,
                "cmpb $-, %dl;je  <NtVdmControl+>;leal (%eax), %ecx;movl $, %eax;cmpl $, %ecx": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl %eax, %ebx;movl %eax, %edi": 1,
                "movl (%ebp), %esi;cmpl %edi, %eax;jae  <NtVdmControl+>;movsbl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl %eax, -(%ebp);movl %edx, %eax;andl $, %eax;movl %eax, -(%ebp);movl %eax, (%esp)": 1,
                "movl %ebx, (%esp);calll - <KeStackAttachProcess>;subl $, %esp;movl -(%ebp), %eax;andl $, %eax": 1,
                "movl %eax, %edi;testl %eax, %eax;jns  <NtVdmControl+>;cmpl $, -(%ebp);je  <NtVdmControl+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <NtVdmControl+>;movl %eax, %edi": 1,
                "movl %eax, %edi;cmpl $, -(%ebp);je  <NtVdmControl+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <KeQueryIoAccessMap+>;subl $, %esp;cmpl -(%ebp), %ebx;je  <NtVdmControl+>;leal -(%ebp), %eax": 1,
                "movl (%ebp), %ebx;testl %esi, %esi;jns  <NtVdmControl+>;testl %ebx, %ebx;jne  <NtVdmControl+>": 3,
                "subl $, %esp;movzbl (%ebx), %ecx;movl (%ebx), %edx;movl (%ebx), %eax;movl $, (%esp)": 1,
                "movl (%ebx), %eax;movl $, (%esp);calll - <NtVdmControl+>;testl %eax, %eax;js  <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;addl $, %eax;cmpl %edx, %eax;jne - <NtVdmControl+>;cmpl $-, %eax": 2,
                "addl %ecx, %ecx;movl $, %eax;shll %cl, %eax;notl %eax;andl -, %eax": 1,
                "andl -, %eax;testb %al, %al;je  <NtVdmControl+>;movl %eax, ;jmp  <NtVdmControl+>": 1,
                "movl %esi, (%esp);movl $, (%esp);calll  <NtVdmControl+>;movl $, %eax;leal -(%ebp), %esp": 1,
                "movl %esi, (%esp);movl $, (%esp);calll  <NtVdmControl+>;movl $, (%ebx);subl $, -": 1,
                "movl $, (%esp);calll  <NtVdmControl+>;movl $, %eax;jmp  <NtVdmControl+>;andl $-, %eax": 1,
                "movl $, %ecx;calll - <NtVdmControl+>;testl %eax, %eax;jns  <NtVdmControl+>;movl (%ebx), %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movl $, %eax;jmp  <NtVdmControl+>;movl (%ebx), %edx": 1,
                "leal (,%eax,), %ecx;movl %ecx, -(%ebp);movl $, %edx;shll %cl, %edx;notl %edx": 1,
                "orl $, %edi;leal (%eax,%eax), %ecx;movl $, %edx;shll %cl, %edx;orl %edx, %edi": 1,
                "shll %cl, %edx;orl %edx, %edi;movl -(%ebp), %edx;andl %edi, %edx;movl %edx, -": 1,
                "jmp  <NtVdmControl+>;movl $, %edi;jmp  <NtVdmControl+>;movl $, %edi;movzbl -(%ebp), %ecx": 1,
                "cmpl $, %edx;je  <NtVdmControl+>;movl -, %ecx;movl %ecx, (%edx);movl -, %ecx": 1,
                "movl -, %ecx;movl %ecx, (%edx);andl $, %eax;movzbl (%ebx), %edx;andl $-, %edx": 1,
                "jmp  <NtVdmControl+>;movl $, %eax;cmpl $, %eax;je - <NtVdmControl+>;cmpl $, %eax": 1,
                "movb %al, -(%ebp);movzbl (%ebp), %edx;movb %dl, -(%ebp);testl %ebx, %ebx;jne  <NtVdmControl+>": 1,
                "jne  <NtVdmControl+>;movzbl -(%ebp), %ecx;movl (%ebp), %eax;movl $, %edx;divl %ecx": 1,
                "movl (%ebp), %eax;movl $, %edx;divl %ecx;testl %edx, %edx;je  <NtVdmControl+>": 1,
                "movl $, (%esp);calll  <NtVdmControl+>;movl $, %eax;jmp  <NtVdmControl+>;cmpl $, -": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll  <NtVdmControl+>;movl %eax, -(%ebp)": 1,
                "repne  scasb %es:(%edi), %al;notl %ecx;movl %ecx, -(%ebp);movl $, (%esp);movl %ecx, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl $, -;jne  <NtVdmControl+>": 1,
                "movl %esi, (%esp);calll - <NtVdmControl+>;cmpl $, (%ebp);je  <NtVdmControl+>;movl (%ebp), %eax": 1,
                "calll - <NtVdmControl+>;testl %eax, %eax;js  <NtVdmControl+>;movl -(%ebp), %edx;movl $, %eax": 1,
                "movb $, -(%ebp);testl %eax, %eax;je  <NtVdmControl+>;cmpl $, %eax;jne  <NtVdmControl+>": 1,
                "jne  <NtVdmControl+>;testb %cl, %cl;je  <NtVdmControl+>;cmpl $, %eax;sete %al": 1,
                "cmpl $, %edx;ja  <NtVdmControl+>;cmpl $, %ebx;jne  <NtVdmControl+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;subl $, %eax;movl %eax, -(%ebp);cmpl $, -": 1,
                "subl $, %esp;movl -(,%ebx,), %eax;cmpl (%eax), %edi;jne  <NtVdmControl+>;movl -(%ebp), %edi": 1,
                "jb - <NtVdmControl+>;movl -(%ebp), %edi;movl -(%ebp), %ebx;jmp  <NtVdmControl+>;cmpl $, %ebx": 1,
                "jb - <NtVdmControl+>;movl -(%ebp), %edi;movl -(%ebp), %ebx;jmp  <NtVdmControl+>;movl %eax, ": 1,
                "movl -(%ebp), %edx;movl -(%edx), %eax;cmpl $, %eax;jne  <NtVdmControl+>;cmpl $, (%esi)": 1,
                "movl , %eax;cmpl %eax, (%esi);jne  <NtVdmControl+>;movl (%ebp), %edx;testb $, (%edx)": 1,
                "calll - <NtVdmControl+>;movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);subl $, %eax": 1,
                "movl %eax, -(%ebp);subl $, %eax;movl (%ebp), %edx;movl %eax, (%edx);movl -, %edx": 1,
                "je  <NtVdmControl+>;cmpb $, -;je  <NtVdmControl+>;movl %eax, (%esp);calll - <NtVdmControl+>": 1,
                "jne  <NtVdmControl+>;movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll - <NtVdmControl+>": 2,
                "calll - <NtVdmControl+>;testb %al, %al;jne  <NtVdmControl+>;movl (%ebp), %eax;orl $, (%eax)": 1,
                "andl $-, %eax;movb $, -(%ebp);cmpl $, %eax;jne  <NtVdmControl+>;cmpl $, %ebx": 1,
                "orl $, (%edx);movl %esi, -;movb $, -(%ebp);cmpb $, (%esi);jne  <NtVdmControl+>": 1,
                "movl $, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll  <NtVdmControl+>;testb %al, %al": 1,
                "cmpl $, %eax;jne  <NtVdmControl+>;movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp)": 2,
                "movl $, %eax;cmpl $, %edx;je  <NtVdmControl+>;movl $, %eax;cmpl $, %edx": 4,
                "movl $, %eax;cmpl $, %edx;jne  <NtVdmControl+>;movl $, %eax;movl %ecx, (%esp)": 4,
                "sarl $, %esi;imull $, %esi, %eax;movl %eax, (%esp);movl $, (%esp);calll  <NtVdmControl+>": 1,
                "movl %eax, (%esp);calll - <NtVdmControl+>;testb %al, %al;je  <NtVdmControl+>;movl (%ebp), %eax": 1,
                "cmpb $, -(%ebp);je  <NtVdmControl+>;movl $, (%esp);calll  <NtVdmControl+>;movb $, -(%ebp)": 1,
                "je  <NtVdmControl+>;movl $, %edx;movl %eax, (%esp);movl %ebx, (%esp);movl %edx, (%esp)": 1,
                "movb $, -(%ebp);jmp  <NtVdmControl+>;movb $, -(%ebp);movl $, -;movl %fs:, %eax": 1,
                "testb $, -;je  <NtVdmControl+>;calll - <InbvIsBootDriverInstalled>;testb %al, %al;je  <NtVdmControl+>": 1,
                "je  <NtVdmControl+>;calll - <InbvCheckDisplayOwnership>;testb %al, %al;jne  <NtVdmControl+>;nop": 1,
                "testb %al, %al;jne  <NtVdmControl+>;nop;calll - <InbvAcquireDisplayOwnership>;calll - <InbvResetDisplay>": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "cmpb $, -;jne  <NtVdmControl+>;movl , %eax;movl (%eax), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll - <KeSaveStateForHibernate+>;subl $, %esp;movl , %eax": 1,
                "calll - <KeSaveStateForHibernate+>;subl $, %esp;lock;subl $, -;movzbl -(%ebp), %ecx": 1,
                "movl $, (%esp);calll  <NtVdmControl+>;cmpb $, %al;jne  <NtVdmControl+>;movl $, (%esp)": 2,
                "movl $, (%esp);calll  <NtVdmControl+>;cmpb $-, %al;je  <NtVdmControl+>;movb %al, -(%esi)": 2,
                "calll  <NtVdmControl+>;cmpb $-, %al;jne - <NtVdmControl+>;cmpl $, -;jg  <NtVdmControl+>": 2,
                "addl %eax, -(%ebp);movl , %eax;testl %eax, %eax;jle  <NtVdmControl+>;movl -(%ebp), %edx": 2,
                "movl , %eax;testl %eax, %eax;jle  <NtVdmControl+>;movl -(%ebp), %edx;addl -, %edx": 2,
                "movb $, -;cmpl $, -;je  <NtVdmControl+>;movl $, (%esp);calll  <DbgPrint>": 2,
                "calll  <NtVdmControl+>;movl %eax, %ebx;jmp  <NtVdmControl+>;movl $, (%esp);leal -(%ebp), %edx": 2,
                "cmpb $, %bl;jne  <NtVdmControl+>;testb $, -;je  <NtVdmControl+>;movl $, (%esp)": 2,
                "movl %ebx, (%esp);movl %esi, (%esp);calll  <strcpy>;jmp  <NtVdmControl+>;leal (%esi), %eax": 2,
                "calll  <strcpy>;movl $, (%esp);movl %edi, (%esp);calll  <strrchr>;movl %eax, %esi": 2,
                "movl -(%ebp), %eax;addl %eax, -;cmpb $, (%edi);jne - <NtVdmControl+>;jmp  <NtVdmControl+>": 2,
                "addl $, %edx;cmpl $, %eax;je  <NtVdmControl+>;movzbl (%edx), %ecx;testb %cl, %cl": 2,
                "cmpb $, %al;je - <NtVdmControl+>;cmpb $, %al;je - <NtVdmControl+>;testb %al, %al": 1,
                "movl %esi, (%esp);calll *-(%ebx);jmp  <NtVdmControl+>;addl $, %ebx;cmpl $, %ebx": 1,
                "movl $, (%esp);movl %esi, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll *%eax": 1,
                "testb %al, %al;jne  <NtVdmControl+>;addl $, %ebx;cmpl $, %ebx;jne - <NtVdmControl+>": 1,
                "movb %al, ;movl -(%ebp), %edx;addl $, %edx;movl $, %eax;jmp - <NtVdmControl+>": 1,
                "movl %eax, (%esp);calll  <_stricmp>;testl %eax, %eax;jne  <NtVdmControl+>;movb $, -": 4,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl %ebx, (%esp);calll - <NtVdmControl+>": 1,
                "movl $, %edx;movl -(%ebp), %ecx;movl $, %eax;testl %ecx, %ecx;je  <NtVdmControl+>": 1,
                "testl %eax, %eax;je  <NtVdmControl+>;movl (%ebx), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "jbe  <NtVdmControl+>;movl (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);calll - <NtVdmControl+>": 1,
                "calll  <_stricmp>;testl %eax, %eax;je  <NtVdmControl+>;movl $, (%esp);movl (%ebx), %eax": 6,
                "testl %eax, %eax;jne  <NtVdmControl+>;movl $, -(%ebp);jmp  <NtVdmControl+>;movl $, (%esp)": 4,
                "movl %eax, (%esp);movl %esi, (%esp);movl $, (%esp);calll - <NtVdmControl+>;jmp  <NtVdmControl+>": 2,
                "movl $, (%esp);calll - <NtVdmControl+>;jmp  <NtVdmControl+>;movl -(%ebp), %eax;movl $, %ecx": 1,
                "movl %eax, (%esp);calll  <wcstombs+>;movl -(%ebp), %esi;addl %eax, %esi;cmpb $, (%esi)": 1,
                "notl %ecx;subl $, %ecx;movl %esi, %edi;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "subl $, %ecx;movl %esi, %edi;movl -(%ebp), %eax;movl %eax, -(%ebp);cmpl %ecx, -(%ebp)": 1,
                "movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll  <wcstombs+>;cmpl -(%ebp), %esi": 1,
                "calll  <KdChangeOption+>;subl $, %esp;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edi, %eax;addl -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <NtVdmControl+>": 1,
                "calll - <NtVdmControl+>;jmp  <NtVdmControl+>;movl -(%ebp), %ecx;movl %edi, (%esp);movzwl %cx, %edi": 1,
                "movl %edi, (%esp);movzwl %cx, %edi;movw $, %ax;orl %edi, %eax;movl %eax, (%esp)": 1,
                "jae - <NtVdmControl+>;jmp  <NtVdmControl+>;cmpb $, %al;jne  <NtVdmControl+>;sgdtl -(%ebp)": 1,
                "ja  <NtVdmControl+>;movl $, (%esp);movl %ebx, %eax;addl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <NtVdmControl+>;testl %eax, %eax;jns  <NtVdmControl+>;addl -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "jbe  <NtVdmControl+>;cmpb $, -(%ebp);je  <NtVdmControl+>;cmpb $, -(%ebp);setne %bl": 1,
                "je  <NtVdmControl+>;cmpb $, -(%ebp);setne %bl;movzbl %bl, %ebx;subl $, %ebx": 1,
                "andl %ebx, -(%ebp);jmp  <NtVdmControl+>;testb $, %ah;jne  <NtVdmControl+>;movl $, %ecx": 1,
                "je  <NtVdmControl+>;testb $, %ah;jne  <NtVdmControl+>;testb $, %ah;je  <NtVdmControl+>": 1,
                "testb $, %ah;jne  <NtVdmControl+>;testb $, %ah;je  <NtVdmControl+>;movl $, (%esp)": 1,
                "leal (%esi), %esi;jmp - <NtVdmControl+>;testb $-, %ah;jne - <NtVdmControl+>;nop": 1,
                "jne  <NtVdmControl+>;movl -(%ebp), %edx;movl $, %eax;testl %edx, %edx;js  <NtVdmControl+>": 1,
                "movl $, (%esp);calll - <NtVdmControl+>;movl -(%ebp), %ebx;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <NtVdmControl+>;movl $, (%esp);movl $, (%esp);movl $, %eax;andl $, %eax": 1,
                "movl $, %eax;andl $, %eax;movl %eax, (%esp);movl $, (%esp);calll - <NtVdmControl+>": 1,
                "je  <NtVdmControl+>;movl $, %edx;cmpb $, %cl;jne  <NtVdmControl+>;movl $, %edx": 1,
                "movl %eax, (%esp);movl %esi, (%esp);movl $, (%esp);calll - <NtVdmControl+>;movl (%ebx), %ebx": 1,
                "jmp  <NtVdmControl+>;cmpl $, (%ebp);ja  <NtVdmControl+>;movl $, (%esp);calll - <NtVdmControl+>": 1,
                "movl , %eax;movl (%eax), %eax;movl %eax, (%esp);movl %esi, (%esp);movl $, (%esp)": 1,
                "calll - <NtVdmControl+>;jmp  <NtVdmControl+>;movl %edx, (%esp);movl $, (%esp);calll - <NtVdmControl+>": 2,
                "jmp  <NtVdmControl+>;movl %edx, (%esp);movl $, (%esp);calll - <NtVdmControl+>;jmp  <NtVdmControl+>": 2,
                "leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll - <PsLookupProcessByProcessId>;subl $, %esp": 1,
                "calll - <PsLookupProcessByProcessId>;subl $, %esp;movl $, %ebx;testl %eax, %eax;jns  <NtVdmControl+>": 1,
                "je - <NtVdmControl+>;movl , %eax;movl %eax, -(%ebp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll  <_stricmp>;testl %eax, %eax;jne  <NtVdmControl+>;movl , %eax": 1,
                "leal -(%edi), %eax;movl %eax, -(%ebp);movl $, %esi;movl $, -(%ebp);cmpl -, %eax": 1,
                "je  <NtVdmControl+>;movl (%edx), %ebx;movl (%edx), %eax;movl %eax, -(%ebp);jmp  <NtVdmControl+>": 1,
                "movl %esi, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp);movl %ebx, (%esp);movl (%eax), %ecx": 1,
                "jne - <NtVdmControl+>;cmpb $, -(%ebp);je  <NtVdmControl+>;calll - <ObfDereferenceObject>;jmp  <NtVdmControl+>": 1,
                "movl $, (%esp);calll - <NtVdmControl+>;cmpb $, -(%ebp);je  <NtVdmControl+>;movl -(%ebp), %ecx": 1,
                "jmp - <NtVdmControl+>;movl -(%ebp), %eax;movl (%eax), %edi;addl $, %eax;cmpl %eax, %edi": 1,
                "testl %eax, %eax;je - <NtVdmControl+>;jmp  <NtVdmControl+>;movl , %eax;movl %eax, -(%ebp)": 1,
                "movl $, (%esp);calll - <NtVdmControl+>;jmp  <NtVdmControl+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "seta %cl;setb %al;cmpb %al, %cl;jne  <NtVdmControl+>;movl -(%ebp), %eax": 1,
                "jne  <NtVdmControl+>;movl -(%ebp), %eax;leal (%eax), %edx;movl %edx, -(%ebp);cmpl %edx, (%ebp)": 1,
                "addl $, %edx;cmpl -(%ebp), %edx;jne - <NtVdmControl+>;jmp  <NtVdmControl+>;movl -(%ebx,%edx,), %esi": 1,
                "movb $, -(%esi,%ecx);movl %edx, -(%ebp);cmpl -(%ebp), %edx;jb - <NtVdmControl+>;movl $, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl $, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "jmp  <NtVdmControl+>;movl (%ebx), %eax;movzbl (%eax), %eax;cmpb $, %al;jne  <NtVdmControl+>": 1,
                "jne  <NtVdmControl+>;movl $, (%esp);movl %esi, (%esp);calll - <NtVdmControl+>;jmp  <NtVdmControl+>": 2,
                "movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movl $, -(%ebp)": 2,
                "calll - <NtVdmControl+>;testb %al, %al;je  <NtVdmControl+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, %eax;cmpb $, -(%ebp);jne  <NtVdmControl+>": 1,
                "movl $, -(%ebp);movl $, %eax;cmpb $, -(%ebp);jne  <NtVdmControl+>;movl -(%ebp), %eax": 1,
                "andl $-, %ecx;cmpl $, %ecx;jne  <NtVdmControl+>;movl -(%ebp), %edx;movl $, -(%ebp)": 1,
                "movl %edi, (%esp);movl $, (%esp);calll - <NtVdmControl+>;jmp  <NtVdmControl+>;cmpl $, %edx": 1,
                "calll - <NtVdmControl+>;jmp  <NtVdmControl+>;cmpl $, %edx;jne  <NtVdmControl+>;cmpb $, -(%ebp)": 1,
                "jne  <NtVdmControl+>;movl -(%ebp), %ecx;movl $, -(%ebp);testl %ecx, %ecx;jne  <NtVdmControl+>": 1,
                "cmpb $, %dl;je  <NtVdmControl+>;movl $, -(%ebp);cmpb $, %dl;jne  <NtVdmControl+>": 2,
                "movl $, %edx;movl -(%ebp), %edi;movl %edi, (%esp);movl %ecx, (%esp);movl -(%ebp), %ecx": 2,
                "movl -(%ebp), %edi;movl %edi, (%esp);movl %ecx, (%esp);movl -(%ebp), %ecx;movl %ecx, (%esp)": 2,
                "movl , %eax;movl (%eax), %eax;movl %eax, -(%ebp);cmpl $, (%ebp);jbe  <NtVdmControl+>": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);cmpl $, (%ebp);jbe  <NtVdmControl+>;movl (%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl (%ebp), %edx;movl -(%ebx,%edx,), %eax;movl %eax, (%esp)": 2,
                "movl %eax, (%esp);calll  <wcstombs+>;testl %eax, %eax;je  <NtVdmControl+>;subl $, (%ebp)": 3,
                "testl %eax, %eax;je  <NtVdmControl+>;subl $, (%ebp);jmp  <NtVdmControl+>;movl (%ebp), %ecx": 1,
                "subl $, (%ebp);jmp  <NtVdmControl+>;movl (%ebp), %ecx;movl -(%ebx,%ecx,), %eax;cmpb $, (%eax)": 1,
                "movb $, -(%edi,%ecx);addl $, %edx;cmpl %esi, %edx;jne - <NtVdmControl+>;cmpl $, (%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);jmp  <NtVdmControl+>;movl $, (%esp);calll - <NtVdmControl+>": 1,
                "movl $, (%esp);calll - <NtVdmControl+>;leal -(%ebp), %esi;leal -(%ebp), %edi;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 2,
                "jmp  <NtVdmControl+>;movl $, (%esp);calll - <NtVdmControl+>;cmpb $, -;jne  <NtVdmControl+>": 1,
                "cmpl $, %eax;jbe  <NtVdmControl+>;cmpl $, %eax;jae  <NtVdmControl+>;jmp  <NtVdmControl+>": 1,
                "orl %edx, %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <NtVdmControl+>": 1,
                "calll - <NtVdmControl+>;jmp - <NtVdmControl+>;cmpl $, %ebx;jne  <NtVdmControl+>;movl (%esi), %eax": 1,
                "je - <NtVdmControl+>;movl $, %eax;shll %cl, %eax;testl %eax, (%esi);je  <NtVdmControl+>": 1,
                "calll - <NtVdmControl+>;cmpl $, %edi;jle - <NtVdmControl+>;movl $, (%esp);calll - <NtVdmControl+>": 1,
                "movl $, -(%ebp);movl (%esi), %edi;movl (%esi), %ecx;movl %ecx, -(%ebp);movl (%esi), %eax": 1,
                "movl (%esi), %edi;movl (%esi), %ecx;movl %ecx, -(%ebp);movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "movl %esi, (%esp);movl $, (%esp);calll - <NtVdmControl+>;movl $, %ebx;movl $, %edi": 1,
                "movl %eax, -(%ebp);movl (%ebx), %eax;cmpb $, (%eax);sete %al;movzbl %al, %eax": 1,
                "andl $-, %eax;addl $, %eax;movl %eax, -(%ebp);cmpl $, (%ebp);jbe  <NtVdmControl+>": 1,
                "jbe  <NtVdmControl+>;movl $, -(%ebp);movl (%ebp), %edx;movl -(%ebx,%edx,), %esi;movl $, %edi": 1,
                "jmp  <NtVdmControl+>;cmpl $, -(%ebp);jne  <NtVdmControl+>;jmp  <NtVdmControl+>;movl $, -(%ebp)": 1,
                "movl -(%ebp), %esi;movl $, (%esp);movl %esi, (%esp);movl %edi, (%esp);calll - <NtVdmControl+>": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%ebp), %esi;movl $, -(%ebp)": 1,
                "leal -(%eax), %edx;cmpl $, %edx;jbe  <NtVdmControl+>;movl %edx, %ebx;movl $, %edx": 1,
                "je  <NtVdmControl+>;movl -(%ebp), %eax;movl -(%ebp), %edx;cmpl $, %edx;jbe  <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;movl %eax, (%esp);movl %eax, (%esp);movl $, (%esp);calll - <NtVdmControl+>": 1,
                "je  <NtVdmControl+>;movl (%ebp), %ebx;addl %ecx, %ebx;movl %ebx, %eax;subl $, %eax": 1,
                "cmpb %dl, (%eax);je  <NtVdmControl+>;leal (%eax,%ecx), %edx;cmpl %edx, %ebx;jne - <NtVdmControl+>": 1,
                "subl $, %esp;movl (%ebp), %edx;movl (%ebp), %eax;movl -, %ebx;imull -, %ebx": 1,
                "jae  <NtVdmControl+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <NtVdmControl+>;subl %eax, %esi;movl %ecx, %ebx;testl %esi, %esi;jne - <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;movl %edi, %ebx;testl %ebx, %ebx;jne  <NtVdmControl+>;movl $, (%esp)": 1,
                "leal -(%edx,%eax), %eax;movl $, %edx;divl -;movl %eax, -(%ebp);cmpb $, (%ecx)": 1,
                "jne  <NtVdmControl+>;movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "je  <NtVdmControl+>;cmpb $, %bl;jne  <NtVdmControl+>;movl %edi, (%esp);movl (%ebp), %edx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <NtVdmControl+>": 2,
                "movl %eax, %esi;testl %eax, %eax;jne - <NtVdmControl+>;movl %edi, (%esp);calll  <DbgPrint>": 1,
                "movl , %eax;movl %edx, (%esp);movl %ebx, (%esp);movl %eax, (%esp);movl $, (%esp)": 1,
                "movl -, %esi;movl , %eax;movl -, %ecx;cmpl %ecx, %ebx;jb  <NtVdmControl+>": 1,
                "jb  <NtVdmControl+>;movl , %eax;movl %eax, (%esp);movl , %eax;movl %eax, (%esp)": 1,
                "movb $, -;movl $, %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl $, %eax;jmp  <NtVdmControl+>;cmpl $, -(,%eax,);jne  <NtVdmControl+>;movl %ecx, -(,%eax,)": 1,
                "cmpl $, -(,%eax,);jne  <NtVdmControl+>;movl %ecx, -(,%eax,);movl $, %eax;jmp  <NtVdmControl+>": 1,
                "je  <NtVdmControl+>;movl $, (%esp);calll  <NtVdmControl+>;cmpb $-, %al;jne - <NtVdmControl+>": 1,
                "jne - <NtVdmControl+>;jmp  <NtVdmControl+>;leal -(%ebp), %ebx;movl $, (%esp);movl %ebx, (%esp)": 1,
                "cmpb $-, %al;jne - <NtVdmControl+>;movl $, -;movl $, -;movl $, (%esp)": 1,
                "movl $, %edi;movl $, %ebx;testb $, -;je  <NtVdmControl+>;movzbl -, %esi": 1,
                "subl $, %esp;testb $, -;je  <NtVdmControl+>;movl $, (%esp);calll  <NtVdmControl+>": 2,
                "calll  <NtVdmControl+>;movb %al, ;jmp  <NtVdmControl+>;movl $, (%esp);leal -(%ebp), %eax": 1,
                "testb %al, %al;jne  <NtVdmControl+>;jmp  <NtVdmControl+>;movb %dl, (%ebx);addl $, %ebx": 1,
                "movzbl (%eax), %edx;testb %dl, %dl;jne - <NtVdmControl+>;movb $, (%ebx);jmp  <NtVdmControl+>": 1,
                "calll - <NtVdmControl+>;movl %esi, %ebx;jmp - <NtVdmControl+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpl $, %ecx;ja  <NtVdmControl+>;movl %ecx, %edi;movl %edi, (%esp);movl %edx, (%esp)": 2,
                "movl %edx, (%esp);movl $, (%esp);calll  <memmove>;leal -(%edi), %ebx;movb $, -(%edi)": 2,
                "leal -(%edi), %ebx;movb $, -(%edi);movl $, (%esp);movl $, (%esp);calll - <NtVdmControl+>": 2,
                "movl -, %ebx;movl -(,%ebx,), %eax;testl %eax, %eax;je  <NtVdmControl+>;movl $, (%esp)": 1,
                "movl %eax, (%esp);calll  <strcmp>;testl %eax, %eax;je  <NtVdmControl+>;movl -, %edi": 1,
                "subl %edi, %esi;movl %esi, -(%ebp);movl -, %esi;addl $, %esi;movl %ebx, %eax": 1,
                "movl $, -(,%eax,);subl $, %eax;jns  <NtVdmControl+>;movl $, %eax;cmpl %eax, %ebx": 1,
                "je  <NtVdmControl+>;movl -(%ebp), %eax;addl $, %eax;movl %edi, (%esp);movl %eax, (%esp)": 1,
                "jmp - <NtVdmControl+>;subl $, %eax;jmp - <NtVdmControl+>;subl $, %ebx;jmp - <NtVdmControl+>": 1,
                "retl;cmpb $, -;je  <NtVdmControl+>;pushl %ebp;movl %esp, %ebp": 1,
                "movl %edx, (%esp);calll  <wcstombs+>;movl %eax, -(%ebp);testl %eax, %eax;jle  <NtVdmControl+>": 1,
                "calll - <NtVdmControl+>;movzbl -(%ebp), %edx;movl -(%ebp), %eax;movb %dl, (%eax);movl -(%ebp), %eax": 1,
                "je - <NtVdmControl+>;movl -(%ebp), %eax;cmpb $, (%eax);jne - <NtVdmControl+>;addl $, %esp": 1,
                "shrl $, %eax;testb %al, %al;je  <NtVdmControl+>;movl %ebx, (%esp);calll - <ExFreePool>": 1,
                "movl -(%ebp), %eax;cmpl %esi, %eax;jle  <NtVdmControl+>;movl %esi, %eax;movb $, (%ebx,%eax)": 1,
                "jle  <NtVdmControl+>;movl %esi, %eax;movb $, (%ebx,%eax);pushfl;popl %esi": 1,
                "movb $, (%ebx,%eax);pushfl;popl %esi;cli;movl %ebx, -": 1,
                "movl -, %esi;movl $, %ecx;calll - <KeTestSpinLock>;testb %al, %al;je - <NtVdmControl+>": 1,
                "movl $, %ecx;calll - <KeTestSpinLock>;testb %al, %al;je - <NtVdmControl+>;movl $, %ecx": 4,
                "movl %eax, (%esp);movl $, (%esp);calll - <NtVdmControl+>;subl $, %esp;addl $, %ebx": 3,
                "jne  <NtVdmControl+>;calll  <NtVdmControl+>;cmpw $, -(%ebp);je  <NtVdmControl+>;movl (%ebp), %edx": 1,
                "movl $, (%esp);calll  <NtVdmControl+>;cmpb $-, %al;je - <NtVdmControl+>;jmp  <NtVdmControl+>": 1,
                "movl (%ebp), %edx;movb $, (%edx,%eax);movl $, (%esp);movl $, (%esp);calll - <NtVdmControl+>": 1,
                "orl %eax, %edx;setne %al;movzbl %al, %eax;movl $, %edx;popl %ebp": 1,
                "ja  <NtVdmControl+>;cmpl %esi, %edi;jb  <NtVdmControl+>;movl $, %eax;movl $, %edx": 1,
                "cmpl %ecx, %ebx;jb  <NtVdmControl+>;ja  <NtVdmControl+>;cmpl %esi, %edi;jbe  <NtVdmControl+>": 1,
                "jb  <NtVdmControl+>;ja  <NtVdmControl+>;cmpl %esi, %edi;jbe  <NtVdmControl+>;movl $, %eax": 1,
                "ja  <NtVdmControl+>;cmpl %esi, %edi;jbe  <NtVdmControl+>;movl $, %eax;movl $, %edx": 1,
                "cmpl (%ebx), %edx;jae  <NtVdmControl+>;movl $, (%esp);movl %esi, (%esp);shll $, %edx": 1,
                "movl $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax);movb $, (%eax)": 3,
                "movl %eax, -(%ebp,%edi,);movl %edx, -(%ebp,%edi,);addl $, %edi;jmp  <NtVdmControl+>;cmpl $, %edi": 1,
                "cmpl $, (%ebp);je  <NtVdmControl+>;movl (%ebp), %ecx;movl $, (%ecx);movl $, (%ecx)": 1,
                "cmpb $, %al;jne  <NtVdmControl+>;jmp  <NtVdmControl+>;movzbl (%edx), %eax;movl %eax, -(%ebp)": 1,
                "movzwl (%edx), %eax;movl %eax, -(%ebp);movl $, -(%ebp);jmp  <NtVdmControl+>;movl (%edx), %ecx": 1,
                "jmp  <NtVdmControl+>;movl (%edx), %ecx;movl %ecx, -(%ebp);movl $, -(%ebp);jmp  <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;movl (%edx), %eax;movl (%edx), %edx;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "addl $, %edi;jmp  <NtVdmControl+>;testl %edi, %edi;jne  <NtVdmControl+>;cmpl $, (%ebp)": 1,
                "movl %edx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <NtVdmControl+>;testl %eax, %eax": 2,
                "jmp  <NtVdmControl+>;movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);leal -(%ebp), %ecx": 1,
                "subl $, %esp;movl $, %eax;jmp  <NtVdmControl+>;movl -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movl %edx, (%esp);movl %eax, (%esp);movl -(%ebp,%ecx,), %eax;movl -(%ebp,%ecx,), %edx;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl %edx, (%esp);calll *(%esi);movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "shll $, %edx;addl -(%ebp), %edx;leal (%edx), %eax;movl (%edx), %edx;movl %edx, -(%ebp)": 1,
                "addl -(%ebp), %edx;leal (%edx), %eax;movl (%edx), %edx;movl %edx, -(%ebp);movl (%eax), %ecx": 1,
                "je  <NtVdmControl+>;movl -(%ebp), %edx;cmpb $, (%edx);jne  <NtVdmControl+>;jmp  <NtVdmControl+>": 1,
                "jmp - <NtVdmControl+>;cmpb $, %bl;je - <NtVdmControl+>;cmpb $, %bl;je - <NtVdmControl+>": 1,
                "movl %eax, (%esp);calll  <isspace>;testl %eax, %eax;jne - <NtVdmControl+>;movl %edi, (%ebp)": 1,
                "movl %edx, -(%ebp);movl %ebx, -(%ebp);movl $, %esi;movl -(%ebp), %edi;movl $, (%esp)": 1,
                "movl -(%ebp), %edi;movl $, (%esp);movl %edi, (%esp);calll  <wcstombs+>;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;jle  <NtVdmControl+>;movl %eax, %ebx;jmp  <NtVdmControl+>;movl %esi, %ebx": 1,
                "jne - <NtVdmControl+>;movl %ebx, %esi;cmpl $, %ebx;jle  <NtVdmControl+>;movl $, %esi": 1,
                "addl %edi, %ebx;cmpb $, (%ebx);jne  <NtVdmControl+>;movl $, (%esp);leal -(%ebp), %edx": 1,
                "movl %edx, (%esp);calll  <_stricmp>;movl $, %esi;testl %eax, %eax;je  <NtVdmControl+>": 2,
                "movl $, %esi;movl -(%ebp), %eax;addl %eax, (%ebp);movl %ebx, %edi;jmp - <NtVdmControl+>": 1,
                "jmp - <NtVdmControl+>;movl %edi, -(%ebp);movl (%ebp), %esi;movl $, %ebx;leal -(%ebp), %edx": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl %edx, %eax;subl -(%ebp), %eax;addl %esi, %eax": 1,
                "addl %esi, %eax;movl %eax, (%ebp);movl %edx, -(%ebp);jmp  <NtVdmControl+>;cmpl $, (%ebp)": 1,
                "movl -(%ebp), %eax;calll - <NtVdmControl+>;testb %al, %al;jne  <NtVdmControl+>;cmpl $, (%ebp)": 5,
                "movl $, (%edx);cmpl $, (%ebp);je  <NtVdmControl+>;movl -(%ebp), %edx;movl (%ebp), %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;movl -(%ebp), %eax;cmpb $, (%eax);je  <NtVdmControl+>": 1,
                "movl $, %eax;jmp  <NtVdmControl+>;cmpb $, (%eax);je  <NtVdmControl+>;movl -(%ebp), %esi": 1,
                "movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %edx;movl -(%ebp), %eax;calll - <NtVdmControl+>": 1,
                "movzbl (%edx), %edx;movl %edx, %eax;subl $, %eax;cmpb $, %al;ja  <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;movl -(%ebp), %eax;cmpb $, (%eax);je  <NtVdmControl+>;movl $, (%esp)": 1,
                "jmp  <NtVdmControl+>;movl -(%ebp), %esi;cmpb $, -(%ebp);je  <NtVdmControl+>;leal -(%ebp), %edx": 1,
                "calll  <isspace>;testl %eax, %eax;jne - <NtVdmControl+>;cmpl $, -(%ebp);je  <NtVdmControl+>": 1,
                "jmp  <NtVdmControl+>;movl $, %eax;jmp  <NtVdmControl+>;testb %al, %al;je - <NtVdmControl+>": 1,
                "movl -(%ebp), %eax;calll - <NtVdmControl+>;testb %al, %al;jne - <NtVdmControl+>;jmp - <NtVdmControl+>": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;testl %esi, %esi;jne  <NtVdmControl+>": 1,
                "subl $, %esp;movl (%ebp), %esi;testl %esi, %esi;jne  <NtVdmControl+>;movl $, (%esp)": 1,
                "movl (%ebp), %esi;testl %esi, %esi;jne  <NtVdmControl+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <DbgPrint>;cmpl $, (%esi);je  <NtVdmControl+>;movl $, %ebx;movl %ebx, %eax": 1,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <NtVdmControl+>;movl $, (%esp);calll  <DbgPrint>": 1,
                "movl $, (%esp);calll  <DbgPrint>;jmp  <NtVdmControl+>;movzbl (%edx), %eax;movl -(,%eax,), %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;cmpl $, (%ebp);jne  <NtVdmControl+>": 2,
                "movl $, (%esp);movl $, %ecx;movl %ebx, %edx;movl $, %eax;calll - <NtVdmControl+>": 2,
                "calll - <NtVdmControl+>;movl $, %edx;testb %al, %al;je  <NtVdmControl+>;movl %edi, (%esp)": 1,
                "calll - <ExAllocatePoolWithTag>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jne  <NtVdmControl+>": 2,
                "movl $, (%esi);movl $, (%esi);movl $, (%esi);movw $, (%esi);cmpl $, (%ebp)": 1,
                "jmp  <NtVdmControl+>;movl $, %ebx;movl %ebx, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl $, (%esp);calll *-;subl $, %esp;movl $, (%esp);calll *%esi": 1,
                "movl $, (%esp);movl $, (%esp);calll *-;subl $, %esp;movl $, %ebx": 1,
                "movzbl -(%eax,%edx), %edx;movl (%ebp), %ecx;movl %eax, (%ecx);testb %dl, %dl;jle  <NtVdmControl+>": 1,
                "movl %edx, %eax;jmp  <NtVdmControl+>;movl $, (%esp);calll *%esi;subl $, %esp": 1,
                "jne - <NtVdmControl+>;testl %edi, %edi;jne  <NtVdmControl+>;jmp - <NtVdmControl+>;movl %eax, %ebx": 1,
                "movl %eax, -(%ebp);movl %edx, %esi;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "testb $, %dl;je  <NtVdmControl+>;movw $, (%edx);addl $, %edx;subl $, %ecx": 1,
                "movl %eax, (%esp);calll  <_wcsnicmp>;testl %eax, %eax;je  <NtVdmControl+>;cmpl $, (%ebp)": 1,
                "leal -(%ebp), %ecx;calll - <NtVdmControl+>;movl %eax, %edx;jmp  <NtVdmControl+>;movl $, %edx": 1,
                "addl $, %edx;cmpl %ebx, %edx;jne - <NtVdmControl+>;addl %eax, %ebx;jmp  <NtVdmControl+>": 1,
                "cmpl %ebx, %edx;jne - <NtVdmControl+>;addl %eax, %ebx;jmp  <NtVdmControl+>;movl %eax, %ebx": 1,
                "movl $, %eax;testb %dl, %dl;je  <NtVdmControl+>;movl $, (%esp);leal -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl (%ebp), %ebx;subl (%eax), %ebx;leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 2,
                "calll  <DbgPrint>;movl $, %eax;jmp  <NtVdmControl+>;movl %ebx, (%esp);leal -(%ebp), %eax": 1,
                "movl $, (%ebx);jmp  <NtVdmControl+>;movl (%ebx), %edi;testl %edi, %edi;je  <NtVdmControl+>": 1,
                "jne  <NtVdmControl+>;cmpl $, (%esi);jne  <NtVdmControl+>;movl $, (%esp);movl $, (%esp)": 1,
                "cmpl $, (%esi);jne  <NtVdmControl+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%esi), %edx;movl (%esi), %eax;movl %eax, (%edx);movl %edx, (%eax);movl (%esi), %eax": 1,
                "movl (%esi), %eax;movl %eax, (%edx);movl %edx, (%eax);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl (%esi), %esi;cmpl $, %esi;jne - <NtVdmControl+>;movzbl -(%ebp), %edx;movl $, %ecx": 2,
                "testl %eax, %eax;js  <NtVdmControl+>;movl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax": 1,
                "calll - <ZwClose>;subl $, %esp;movl (%ebx), %edx;movl %edi, %eax;calll - <NtVdmControl+>": 1,
                "calll - <NtVdmControl+>;leal -(%ebp), %esp;popl %ebx;popl %esi;popl %edi": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%ebp), %edx;movb $, -;cmpl $, -": 1,
                "cmpl $, -;jbe  <NtVdmControl+>;movb $, -;testl %edx, %edx;jne  <NtVdmControl+>": 1,
                "movl %edx, (%eax);movl %eax, (%edx);movl %eax, ;movl $, -;movl $, -": 1,
                "jmp  <NtVdmControl+>;leal (%esi), %ebx;movl $, (%esp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "movl %esi, (%esp);calll  <toupper>;movl %eax, %edx;andl $-, %edx;cmpb $, %dl": 1,
                "nop;leal (%esi), %esi;jne  <NtVdmControl+>;movl , %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <NtVdmControl+>;movl , %eax;movl (%eax), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%edx);movl %edx, (%eax);movl %edx, -;jmp  <NtVdmControl+>;cmpl $, (%ebp)": 1,
                "testl %eax, %eax;jne  <NtVdmControl+>;leal (%ebx), %esi;orb $, -;jmp  <NtVdmControl+>": 2,
                "cmpb $, (%ebx);je  <NtVdmControl+>;movl %esi, (%esp);calll  <atol>;leal -(%eax), %edx": 1,
                "movl %eax, ;movl $, -;movl $, -;jmp  <NtVdmControl+>;movl $, (%esp)": 1,
                "jne  <NtVdmControl+>;orb $, -;leal (%ebx), %esi;cmpb $, (%ebx);jne  <NtVdmControl+>": 1,
                "jne  <NtVdmControl+>;leal (%ebx), %esi;orb $, -;movb $, -;movb $, -": 2,
                "calll  <strstr>;testl %eax, %eax;je  <NtVdmControl+>;movb $, -;jmp  <NtVdmControl+>": 2,
                "calll  <strstr>;movl %eax, %ebx;movl $, (%esp);movl %esi, (%esp);calll  <strstr>": 1,
                "je  <NtVdmControl+>;cmpl $, -;jne  <NtVdmControl+>;orb $, -;testl %edi, %edi": 1,
                "jne  <NtVdmControl+>;orb $, -;testl %edi, %edi;je  <NtVdmControl+>;leal (%edi), %eax": 1,
                "movl , %eax;testl %eax, %eax;je  <NtVdmControl+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %ebx, (%esp);calll - <NtVdmControl+>;subl $, %esp;jmp  <NtVdmControl+>;movl $, %ebx": 1,
                "subl $, %esp;movl (%ebp), %eax;movl (%ebp), %edx;testb $, -;je  <NtVdmControl+>": 1,
                "movl $, (%esp);calll - <ExAllocatePool>;subl $, %esp;movl %eax, ;movl $, (%esp)": 1,
                "calll - <InbvEnableDisplayString>;subl $, %esp;movl $, -;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <DbgPrint>;movl , %eax;shll $, %eax;shrl $, %eax;movl %eax, (%esp)": 2,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl , %eax;movl (%eax), %edx": 2,
                "testb %al, %al;je  <NtVdmControl+>;movl %edx, %ebx;movl -, %edi;movl %edi, %esi": 1,
                "movl %edx, -;movl $, (%esp);calll *%edi;subl $, %esp;movl $, (%esp)": 1,
                "addl $, %eax;movl %eax, (%esp);calll *%esi;subl $, %esp;movb $, -": 1,
                "movl $, -;addl $, %ebx;movzbl (%ebx), %eax;testb %al, %al;jne - <NtVdmControl+>": 1,
                "movl %eax, ;movzbl -, %eax;testb %al, %al;jne  <NtVdmControl+>;cmpl $, -": 1,
                "testl %esi, %esi;je  <NtVdmControl+>;leal (%esi,%eax), %edi;andl $, %edi;cmpl %edi, %eax": 1,
                "andl $, %edi;cmpl %edi, %eax;jae  <NtVdmControl+>;movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl $, %edx;subl %eax, %edx;movl %edx, -(%ebp);movl %edx, (%esp);movl (%ebp), %edx": 1,
                "subl %eax, %edx;movl %edx, -(%ebp);movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %edx, (%esp);addl -, %eax;movl %eax, (%esp);calll  <memmove>;movl %edi, (%esp)": 1,
                "movl (%ebp), %eax;addl -(%ebp), %eax;movl %eax, (%esp);movl , %eax;movl %eax, (%esp)": 1,
                "addl -(%ebp), %eax;movl %eax, (%esp);movl , %eax;movl %eax, (%esp);calll  <memmove>": 1,
                "cmpl $, (%ebp);jne  <NtVdmControl+>;movl -, %edx;movl $, (%edx);movl $, (%eax)": 1,
                "movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;jmp  <NtVdmControl+>;cmpl $, (%ebp)": 2,
                "subl $, %esp;testl %eax, %eax;js  <NtVdmControl+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl %ecx, %eax;testl %eax, %eax;je  <NtVdmControl+>;leal (%eax,%edx), %esi;andl $, %esi": 1,
                "movl %eax, (%esp);addl -, %edx;movl %edx, (%esp);calll  <memmove>;jmp  <NtVdmControl+>": 1,
                "calll - <KeWaitForSingleObject>;subl $, %esp;movl -, %esi;movl , %eax;movl %ebx, %edi": 1,
                "movl $, (%esp);movl $, (%esp);movl %edi, (%esp);addl -, %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <NtWriteFile>;subl $, %esp;lock;addl %edi, -": 1,
                "jmp - <NtVdmControl+>;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %ebx": 1,
                "je  <NtVdmControl+>;movl $, %eax;movl (%edx), %ecx;movl %ecx, %ebx;andl $-, %ebx": 1,
                "shrl $, %eax;popl %ebx;popl %esi;popl %ebp;retl $": 1,
                "jmp  <NtVdmControl+>;movl -, %edx;movl , %eax;movl %edx, (%eax);movl $, -": 1,
                "movl %edx, (%eax);movl $, -;movl , %eax;movl (%ebp), %edx;movl $, (%edx)": 1,
                "subl $, %esp;jmp  <NtVdmControl+>;movl $, %esi;movl %esi, %eax;leal -(%ebp), %esp": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll - <KeAreAllApcsDisabled+>;subl $, %esp;movl $, %eax": 1,
                "subl $, %esp;movzbl %al, %eax;jmp  <NtVdmControl+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %eax;jmp  <NtVdmControl+>;leave;retl $;pushl %ebp": 1,
                "jmp  <NtVdmControl+>;leave;retl $;pushl %ebp;movl %esp, %ebp": 1,
                "jne  <NtVdmControl+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl (%edx), %eax;movl (%eax), %eax;movl %eax, (%esp);calll - <NtVdmControl+>": 1,
                "calll - <NtVdmControl+>;subl $, %esp;movl (%ebp), %edx;movl %eax, (%edx);movl (%ebp), %ecx": 1,
                "retl $;cmpl $, %eax;setne %al;retl $;pushl %ebp": 1,
                "calll  <DbgPrint>;movzbl -, %eax;leave;retl;pushl %ebp": 1,
                "movb $, -;movzbl %al, %ecx;calll *-;movl $, %eax;popl %ebp": 2,
                "pushl %ebx;movl (%ebp), %edx;movl (%ebp), %ecx;cmpl $, %ecx;ja  <KdChangeOption+>": 1,
                "testl %ebx, %ebx;je  <KdChangeOption+>;cmpl %edx, -;je  <KdChangeOption+>;movl $, %eax": 1,
                "je  <KdChangeOption+>;movl $, %eax;jmp  <KdChangeOption+>;cmpl %edx, -(,%eax,);jne  <KdChangeOption+>": 1,
                "jne  <KdChangeOption+>;jmp  <KdChangeOption+>;movl $, %eax;leal (%ecx), %edi;movl %edi, -": 1,
                "jmp  <KdChangeOption+>;notl %esi;andl %esi, -(,%eax,);movl $, %eax;jmp  <KdChangeOption+>": 1,
                "sbbl %eax, %eax;notl %eax;andl $, %eax;movl (%ebp), %edx;addl $, %edx": 1,
                "andl $, %eax;movl (%ebp), %edx;addl $, %edx;andl $, %edx;outb %al, %dx": 1,
                "movl (%ebp), %ebx;movl $, %eax;movl $, %edx;divl (%ebp);movl %eax, %edi": 1,
                "movzbl %dh, %eax;movzwl -(%ebp), %edx;outb %al, %dx;movl %ecx, %edx;movl %esi, %eax": 1,
                "movl $, %eax;andl $, %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "andl $, %eax;addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "testl %edi, %edi;je  <KdSystemDebugControl+>;movl %ebx, (%esp);calll - <KdSystemDebugControl+>;subl $, %esp": 1,
                "addl $, %edx;andl $, %edx;movl $, %eax;outb %al, %dx;movl $, (%esp)": 1,
                "andl $, %ebx;addl $, %ebx;cmpl $, (%esi);jne  <KdSystemDebugControl+>;jmp  <KdSystemDebugControl+>": 1,
                "je  <KdSystemDebugControl+>;testb $, %al;je  <KdSystemDebugControl+>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;movzbl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %esi;movzbl (%esi), %eax;movl %eax, (%esp);calll - <IoReleaseCancelSpinLock>;subl $, %esp": 1,
                "movl (%esi), %ebx;cmpl $, (%ebx);jne  <KdSystemDebugControl+>;movl (%ebx), %eax;movl $, (%ebx)": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);calll *(%ebx);subl $, %esp;leal -(%ebp), %esp": 1,
                "jle  <IoCsqInsertIrpEx+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;jne  <IoCsqInsertIrpEx+>;lock": 1,
                "calll *(%esi);subl $, %esp;movl %ebx, (%esp);movl %esi, (%esp);calll *(%esi)": 1,
                "testl %edi, %edi;je  <IoCsqInsertIrpEx+>;movl $, (%edi);movzbl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <IoCsqRemoveNextIrp+>;movl %esi, -(%ebp);movl %eax, -(%ebp);xorl %ecx, %ecx;xorl %eax, %eax": 1,
                "movl %eax, -(%ebp);xorl %ecx, %ecx;xorl %eax, %eax;calll *-(%ebp);negl %eax": 2,
                "addl -(%ebp), %eax;movl $, %ecx;calll *-(%ebp);testl %eax, %eax;js  <IoCsqRemoveNextIrp+>": 1,
                "calll  <RtlUnwind>;popl %ebp;movl -(%ebp), %esi;movl (%ebp), %eax;movl (%eax), %ebx": 1,
                "movl (%ebx), %edx;movl %edx, (%eax);movl (%ebx), %eax;cmpl $, (%eax);jne  <IoCsqRemoveNextIrp+>": 1,
                "movl %edx, (%eax);movl (%ebx), %eax;cmpl $, (%eax);jne  <IoCsqRemoveNextIrp+>;movl %edi, (%ebx)": 1,
                "movl (%eax), %eax;movl %ebx, -(%ebp);movl %eax, -(%ebp);xorl %ecx, %ecx;xorl %eax, %eax": 1,
                "movl %eax, (%esi);movl $, -(%ebp);movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 2,
                "calll *(%ebx);subl $, %esp;movl %eax, %edx;movl $, %eax;testb %dl, %dl": 2,
                "addl (%ebx), %eax;movl (%eax), %eax;addl $, %esi;movl %esi, %edx;shll $, %edx": 1,
                "subl $, %esp;movl $, %edx;cmpl $-, %eax;je  <IoCsqRemoveNextIrp+>;movl (%ebx), %eax": 1,
                "calll - <KeQuerySystemTime>;subl $, %esp;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl $, (%ebx);movl $, %edx;movl %edx, %eax;leal -(%ebp), %esp": 1,
                "testl %ebx, %ebx;jne  <IoCsqRemoveNextIrp+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 4,
                "movl $, %eax;cmpl (%edx,%esi), %ebx;jae  <IoCsqRemoveNextIrp+>;shll $, %ebx;addl (%edx,%esi), %ebx": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %ebx;testb $, -": 1,
                "movl %edi, %eax;shll $, %eax;subl %edx, %eax;movl -(%ebp), %edx;cmpl (%esi,%eax), %edx": 1,
                "movl -(%ebp), %edx;cmpl (%esi,%eax), %edx;jb  <IoCsqRemoveNextIrp+>;movl $, (%esp);movl $, (%esp)": 2,
                "leal (,%edi,), %eax;shll $, %edi;subl %eax, %edi;movl -(%ebp), %eax;shll $, %eax": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%esi), %eax;leal (%eax,%ebx), %eax": 1,
                "movl (%eax), %ebx;cmpl $, %ebx;ja  <IoCsqRemoveNextIrp+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;cmpl %edi, (%ebx);jne  <IoCsqRemoveNextIrp+>;movl (%eax), %eax;movl %eax, (%ebx)": 1,
                "cmpl $-, %eax;jne - <IoCsqRemoveNextIrp+>;testb $, -;je  <IoCsqRemoveNextIrp+>;movl $, (%esp)": 1,
                "je  <IoCsqRemoveNextIrp+>;movl %edi, (%esp);movl $, (%esp);calll  <DbgPrint>;movl -(%ebp), %edx": 1,
                "leal (%edi,%edx), %eax;leal (%esi,%eax,), %ebx;movl -(%ebp), %eax;movl (%eax,%edi,), %edx;cmpl $-, %edx": 1,
                "movl %edx, (%esp);movl $, (%esp);calll  <DbgPrint>;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl (%eax), %edx;movl %eax, %ebx;cmpl $-, %edx;jne - <IoCsqRemoveNextIrp+>;testb $, -": 1,
                "movl $, (%esp);calll  <DbgPrint>;addl $, %edi;cmpl $, %edi;jne - <IoCsqRemoveNextIrp+>": 1,
                "subl $, %esp;addl $, (%ebx);movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "testl %eax, %eax;js  <IoCsqRemoveNextIrp+>;addl (%esi), %ebx;jmp  <IoCsqRemoveNextIrp+>;subl %eax, %ebx": 1,
                "movl $, %edi;testl %eax, %eax;je  <IoCsqRemoveNextIrp+>;movl (%eax), %eax;addl $, %eax": 1,
                "shrl $, %eax;movl %eax, -(%ebp);movl %edi, %ecx;andl $, %ecx;movl %ecx, -(%ebp)": 1,
                "subl $, %esp;leal (,%ebx,), %eax;shll $, %ebx;subl %eax, %ebx;movl -(%ebp), %eax": 1,
                "addl (%esi,%ebx), %eax;movl (%eax), %ebx;testl %ebx, %ebx;jne  <IoCsqRemoveNextIrp+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movl (%esi), %eax;leal (%eax,%edi), %ebx": 1,
                "leal (%eax,%edi), %ebx;movl (%ebx), %eax;movl -(%ebp), %edx;addl $, %edx;cmpl %edx, %eax": 1,
                "subl -(%ebp), %eax;movl %eax, (%edx);movl -(%ebp), %ecx;movl %ecx, (%ebx);addl %edi, %ecx": 1,
                "negl (%ebx);movl -(%ebp), %eax;subl $, %eax;addl $, %ebx;movl %eax, (%esp)": 1,
                "movl %edi, (%esp);movl $, (%esp);movl $, (%esp);calll  <DbgPrint>;movl %edi, %eax": 1,
                "calll  <RtlAssert>;subl $, %esp;testb $, -;je  <IoCsqRemoveNextIrp+>;movl (%ebp), %edi": 1,
                "movl (%ebp), %ebx;shrl $, %ebx;movl (%ebp), %edi;andl $, %edi;shrl $, %edi": 1,
                "calll  <RtlAssert>;subl $, %esp;movl (%esi), %eax;negl %eax;movl %eax, (%esi)": 1,
                "addl %eax, %ebx;movl %edx, %ecx;movl -(%ebp), %edi;addl (%edi), %ecx;cmpl %ecx, %ebx": 1,
                "jae  <IoCsqRemoveNextIrp+>;movl (%ebx), %eax;testl %eax, %eax;jle  <IoCsqRemoveNextIrp+>;movl %eax, %edi": 1,
                "andl $, %eax;orl %eax, %edx;movl %edx, -(%ebp);cmpl $, %edi;ja  <IoCsqRemoveNextIrp+>": 1,
                "calll  <RtlAssert>;subl $, %esp;shrl $, %edi;leal -(%edi), %edx;movl %edx, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %ebx;cmpl $-, %ebx;jne  <IoCsqRemoveNextIrp+>": 1,
                "movl %edx, (%esp);calll - <IoCsqRemoveNextIrp+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax": 1,
                "movl %esi, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll  <memmove>": 1,
                "movl %edi, (%ebx,%edx,);movl %esi, (%ebx,%edx,);addl $, %eax;movw %ax, (%ebx);movl $, %eax": 1,
                "jne  <IoCsqRemoveNextIrp+>;movl (%ebx), %eax;cmpl %eax, (%ebx);jne  <IoCsqRemoveNextIrp+>;movl %ebx, (%esp)": 1,
                "testl %eax, %eax;je  <IoCsqRemoveNextIrp+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 8,
                "movl (%ebx), %esi;movl %ebx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl %esi, (%esp)": 1,
                "movl %ebx, (%esp);calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl %esi, (%esp);movl %eax, (%esp)": 1,
                "movl $, %edx;testl %eax, %eax;je  <IoCsqRemoveNextIrp+>;movl $, (%esp);movl $, (%esp)": 2,
                "cmpl %ebx, %eax;ja - <IoCsqRemoveNextIrp+>;testl %eax, %eax;je  <IoCsqRemoveNextIrp+>;movl $, (%esp)": 1,
                "movw $, (%edi);addl $, %edi;testb $, %dl;je  <IoCsqRemoveNextIrp+>;movb $, (%edi)": 3,
                "cmpl $, (%ebx);je  <IoCsqRemoveNextIrp+>;movl %esi, -(%ebp);leal (%esi), %edi;cmpl $, (%esi)": 1,
                "addl -(%ebp), %edi;cmpl $, (%edi);jne  <IoCsqRemoveNextIrp+>;movl (%edi), %eax;testl $, %eax": 1,
                "jmp  <IoCsqRemoveNextIrp+>;movl $, (%esp);movl $, (%esp);movl %eax, (%esp);calll *(%ebx)": 1,
                "addl $, %edx;addl $, %eax;addl $, %esi;movl -(%ebp), %ecx;movl (%ecx), %ecx": 1,
                "addl $, %ebx;shll $, %esi;movl %esi, (%esp);movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);movl $, %edx;movl %edx, %eax": 1,
                "movl $, (%ebx);movl $, (%ebx);movl (%ebp), %eax;andl $-, %eax;movl %eax, (%ebx)": 1,
                "cmpl $, %esi;je  <IoCsqRemoveNextIrp+>;cmpl $, %esi;jb  <IoCsqRemoveNextIrp+>;cmpl $, %esi": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <IoCsqRemoveNextIrp+>;subl $, %esp": 3,
                "je  <IoCsqRemoveNextIrp+>;cmpw $, %ax;jne  <IoCsqRemoveNextIrp+>;cmpw $, (%esi);je  <IoCsqRemoveNextIrp+>": 2,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;cmpw $, (%ebx);je  <IoCsqRemoveNextIrp+>": 1,
                "movl (%ebp), %ebx;cmpw $, (%ebx);je  <IoCsqRemoveNextIrp+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <wcslen>;leal (%eax,%eax), %edi;movl $, (%esp)": 1,
                "leal (%edi), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <IoCsqRemoveNextIrp+>;subl $, %esp": 1,
                "movl %esi, (%eax);movl (%ebx), %edx;movl %edx, -(%ebp);movl %edx, (%esp);calll  <IoCsqRemoveNextIrp+>": 1,
                "calll  <IoCsqRemoveNextIrp+>;subl $, %esp;movl -(%ebp), %edx;movl %eax, (%edx);movl %esi, (%esp)": 1,
                "movl (%ebp), %eax;addl $, %eax;andl $, %eax;movl %eax, -(%ebp);movl %eax, %edi": 2,
                "movl (%eax), %edx;shll $, %edx;movl -(%ebp), %ecx;movl %edx, (%ecx);movl -(%ebp), %edx": 1,
                "calll *(%ecx);subl $, %esp;movl %eax, %esi;testl %eax, %eax;jne  <IoCsqRemoveNextIrp+>": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll  <memmove>;movl $, (%esp);movl -(%ebp), %ecx": 1,
                "jne - <IoCsqRemoveNextIrp+>;movl -(%ebp), %edi;movl -(%ebp), %eax;subl $, %eax;movl -(%ebp), %edx": 1,
                "movl (%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, %ebx;addl $, %ebx;andl $-, %ebx": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);shrl $, %eax;cmpl %eax, %ebx;jbe  <IoCsqRemoveNextIrp+>": 1,
                "movl %eax, (%esp);calll  <memset>;movl (%ebp), %ecx;cmpl $, (%ecx);je  <IoCsqRemoveNextIrp+>": 1,
                "movl (%ecx), %eax;movl %eax, (%esp);calll *(%ecx);subl $, %esp;shll $, %ebx": 1,
                "pushl %edi;movl (%ebp), %eax;movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ebp), %ebx": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ebp), %ebx;movl (%ebp), %edi;int $": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movzwl (%eax), %edx": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <KdChangeOption+>;subl $, %esp": 3,
                "movl %eax, (%esp);calll - <DbgBreakPointWithStatus+>;subl $, %esp;leave;retl $": 3,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;leal (%ebp), %eax;movl $, (%esp)": 3,
                "movl $, (%esp);movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 2,
                "repne  scasb %es:(%edi), %al;notl %ecx;subl $, %ecx;movw %cx, -(%ebp);movl %edx, -(%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %edx;movl %edx, -(%ebp);movl %eax, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <DbgBreakPointWithStatus+>": 2,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movl (%ebp), %edi;movl (%ebp), %ebx;movl %edi, -(%ebp);movl $, %edx;movl $, %eax": 1,
                "notl %ecx;subl $, %ecx;movw %cx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, %edi": 1,
                "subl $, %ecx;movw %cx, -(%ebp);movl %ebx, -(%ebp);movl %ebx, %edi;movl %edx, %ecx": 1,
                "xorl %ebx, %ebx;xorl %esi, %esi;xorl %edi, %edi;pushl (%esp);pushl (%esp)": 1,
                "pushl %ebp;movl %esp, %ebp;pushl (%ebp);pushl %edx;pushl %fs:": 1,
                "popl %ebp;retl $;movl $, %eax;movl (%esp), %ecx;testl $, (%ecx)": 1,
                "movl $, %eax;retl $;movl $, %eax;movl (%esp), %ecx;testl $, (%ecx)": 1,
                "movl $, %eax;movl (%esp), %ecx;testl $, (%ecx);je  <RtlCaptureContext+>;movl (%esp), %ecx": 1,
                "movl $, %eax;retl $;pushl %ebp;movl %esp, %ebp;leal -(%esp), %esp": 1,
                "jne  <RtlRaiseException+>;pushl %esp;pushl (%ebp);calll  <RtlGetCallersAddress+>;testb %al, %al": 1,
                "pushl (%ebp);calll  <RtlGetCallersAddress+>;testb %al, %al;je  <RtlRaiseException+>;movl %esp, %ecx": 1,
                "nop;nop;nop;cmpl $, %ecx;ja  <LdrAccessResource+>": 1,
                "movl (%ebp), %edx;cmpl $, %edx;sete %cl;cmpl $, %edx;sete %al": 1,
                "sete %cl;cmpl $, %edx;sete %al;orl %ecx, %eax;movzbl %al, %eax": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;movl (%ebp), %ecx;movl (%ebp), %eax": 1,
                "movl (%ebp), %edx;leal (%edx), %ecx;movzwl (%edx), %edi;movzwl (%edx), %eax;addl %eax, %edi": 1,
                "sete %al;movl %eax, %esi;movzbl (%edx), %eax;shrb $, %al;movl %esi, %ebx": 1,
                "cmpb %al, %bl;je  <LdrAccessResource+>;jmp  <LdrAccessResource+>;movl %edx, %ecx;addl $, %edx": 1,
                "cmpw %si, %ax;jne  <LdrAccessResource+>;jmp  <LdrAccessResource+>;leal (%edx,%ecx), %eax;movl %eax, %ebx": 1,
                "calll - <LdrAccessResource+>;jmp  <LdrAccessResource+>;leal (%ebx), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movl %eax, %esi;shrl $, %esi;addl %eax, %esi;sarl %esi;movl -(%ebp), %eax": 1,
                "leal (%ebx), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <_wcsnicmp>": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <_wcsnicmp>;testl %eax, %eax;jne  <LdrAccessResource+>": 1,
                "subl $, %esi;movl %esi, -(%ebp);jmp  <LdrAccessResource+>;addl $, %esi;movl %esi, -(%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <RtlImageDirectoryEntryToData>;subl $, %esp;testl %eax, %eax": 1,
                "cmpl $, (%ebp);je  <LdrAccessResource+>;cmpl $, -(%ebp);je  <LdrAccessResource+>;movl (%ebp), %ebx": 1,
                "movl $, %eax;leal -(%ebp), %ecx;calll - <IoCsqRemoveNextIrp+>;jmp - <LdrAccessResource+>;movl -(%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll - <RtlWalkFrameChain+>": 2,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax), %eax;jmp  <LdrFindResource_U+>;leal (%esi), %esi": 1,
                "jmp  <LdrFindResource_U+>;leal (%esi), %esi;jmp - <LdrFindResource_U+>;movl -(%ebp), %edx;movl %edx, %fs:": 1,
                "movl (%eax), %eax;jmp  <LdrFindResourceDirectory_U+>;nop;leal (%esi), %esi;jmp - <LdrFindResourceDirectory_U+>": 1,
                "movl -(%ebp), %eax;movzwl (%eax), %edx;movzwl (%eax), %eax;addl %eax, %edx;movl %edx, -(%ebp)": 1,
                "je  <LdrEnumResources+>;movl $, %edi;movl $, -(%ebp);movl $, -(%ebp);cmpl $, (%ebp)": 1,
                "andl $, %eax;addl -(%ebp), %eax;leal (%eax), %edx;movl %edx, -(%ebp);movzwl (%eax), %edx": 1,
                "movl (%ebp), %eax;movl (%eax), %ecx;movl %ebx, %edx;movl -(%ebp), %eax;calll - <LdrAccessResource+>": 1,
                "movl %ebx, %edx;movl -(%ebp), %eax;calll - <LdrAccessResource+>;testl %eax, %eax;jne  <LdrEnumResources+>": 1,
                "andl $, %ecx;addl -(%ebp), %ecx;jmp  <LdrEnumResources+>;movzwl (%ebx), %ecx;addl -(%ebp), %edx": 1,
                "addl $, %eax;cmpl -(%ebp), %eax;jne - <RtlCustomCPToUnicodeN+>;jmp  <RtlCustomCPToUnicodeN+>;movl $, (%esp)": 1,
                "movl %edi, -(%ebp);movl (%ebp), %eax;movl (%ebp), %edi;movl (%ebp), %ebx;movl (%ebp), %esi": 1,
                "movl %eax, (%edi);testl %ecx, %ecx;je  <RtlMultiByteToUnicodeN+>;movl $, %eax;movzbl (%ebx,%eax), %edi": 1,
                "movl -, %edi;movl %edi, -(%ebp);movzbl %cl, %ecx;movzwl (%edi,%ecx,), %edi;movw %di, -(%ebp)": 1,
                "movl $, %edx;movl $, %ecx;calll - <PsEstablishWinCallouts+>;cmpb $, -;je  <RtlMultiByteToUnicodeSize+>": 1,
                "leal -(%esi), %ecx;movl -, %edi;movl $, %edx;testl %esi, %esi;jne  <RtlMultiByteToUnicodeSize+>": 1,
                "jmp  <RtlMultiByteToUnicodeSize+>;movl %ecx, %eax;movl %esi, %ebx;jmp  <RtlMultiByteToUnicodeSize+>;movl %ecx, %eax": 1,
                "movl %ecx, %esi;cmpl %ebx, %ecx;jbe  <RtlOemToUnicodeN+>;movl %ebx, %esi;cmpl $, (%ebp)": 1,
                "leal (%eax,%ecx), %edi;movl (%ebp), %ecx;shrl %ecx;movl %ecx, -(%ebp);je  <RtlOemToUnicodeN+>": 1,
                "movl %edi, -(%ebp);movzbl (%eax), %ebx;leal (%eax), %ecx;testb %bl, %bl;js  <RtlOemToUnicodeN+>": 1,
                "movl %edi, -(%ebp);movzbl %bl, %ebx;movzwl (%edi,%ebx,), %edi;movw %di, -(%ebp);testw %di, %di": 1,
                "movl $, %esi;cmpl $, (%ebp);je  <RtlOemToUnicodeN+>;leal (%esi,%esi), %eax;movl (%ebp), %edi": 1,
                "movl (%ebp), %esi;movl (%ebp), %ecx;movl (%ebp), %ebx;movl (%ebp), %eax;movl (%ebp), %edi": 1,
                "movb %dl, (%ecx,%eax);addl $, %eax;cmpl -(%ebp), %eax;jne - <RtlUnicodeToCustomCPN+>;jmp  <RtlUnicodeToCustomCPN+>": 1,
                "subl $, %eax;subl $, %edx;subl $, %eax;je  <RtlUnicodeToMultiByteN+>;testl %edx, %edx": 1,
                "movl (%ebp), %edx;movl (%ebp), %eax;shrl %eax;cmpb $, -;je  <RtlUnicodeToMultiByteSize+>": 1,
                "movl -, %esi;movl $, %ebx;jmp  <RtlUnicodeToMultiByteSize+>;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "movl $, %ebx;jmp  <RtlUnicodeToMultiByteSize+>;movl (%ebp), %edx;movl %eax, (%edx);jmp  <RtlUnicodeToMultiByteSize+>": 1,
                "je  <RtlUnicodeToMultiByteSize+>;addl $, %ebx;jmp  <RtlUnicodeToMultiByteSize+>;addl $, %ebx;subl $, %eax": 1,
                "addl $, %ebx;subl $, %eax;cmpl $-, %eax;jne - <RtlUnicodeToMultiByteSize+>;movl (%ebp), %eax": 1,
                "movzwl (%ecx,%edx,), %ebx;movl -, %edi;movzbl (%edi,%ebx), %ebx;movb %bl, (%eax,%edx);addl $, %edx": 1,
                "jne - <RtlUnicodeToOemN+>;jmp  <RtlUnicodeToOemN+>;movl (%ebp), %ebx;shrl %ebx;je  <RtlUnicodeToOemN+>": 1,
                "movb %bl, (%eax);addl $, %eax;jmp  <RtlUnicodeToOemN+>;movzwl %bx, %ebx;movl -, %edi": 1,
                "jne  <RtlUnicodeToOemN+>;movb %bl, (%eax);addl $, %eax;jmp  <RtlUnicodeToOemN+>;cmpl $, %edx": 1,
                "subl $, %esi;subl $, %edx;je  <RtlUnicodeToOemN+>;testl %esi, %esi;jne - <RtlUnicodeToOemN+>": 1,
                "movzbl %ah, %ecx;movl %eax, %ebx;shrw $, %bx;andl $, %ebx;addw (%edx,%ecx,), %bx": 1,
                "subl $, %esp;movzwl %ax, %eax;movl (%edi), %edx;movzbl (%edx,%eax), %eax;movb %al, (%ebx)": 1,
                "jne  <RtlUpcaseUnicodeToMultiByteN+>;leal (%edi,%edi), %edx;cmpl (%ebp), %edx;jb  <RtlUpcaseUnicodeToMultiByteN+>;movl (%ebp), %edi": 1,
                "subl $, %edi;subl $, -(%ebp);je  <RtlUpcaseUnicodeToOemN+>;testl %edi, %edi;jne - <RtlUpcaseUnicodeToOemN+>": 1,
                "movl -, %edx;movzbl (%edx,%eax), %eax;leave;retl $;nop": 1,
                "movl (%ebp), %ecx;movl $, (%ecx);movl $, %eax;cmpl $, %edx;jbe  <RtlUpperChar+>": 1,
                "testb $, %al;je  <RtlUpperChar+>;testw %ax, %ax;jns  <RtlUpperChar+>;movl (%ebx), %eax": 2,
                "movzwl (%ebx), %eax;addl $, %eax;andl $-, %eax;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "jmp - <RtlUpperChar+>;movl (%ebp), %eax;movl $, (%eax);jmp - <RtlUpperChar+>;movl -(%ebp), %ebx": 1,
                "movl $, (%ebx);movb $, (%ebx);movw $, (%ebx);movl $, %eax;jmp  <RtlCreateSecurityDescriptor+>": 1,
                "cmpw $, (%ebx);jns  <RtlLengthSecurityDescriptor+>;jmp  <RtlLengthSecurityDescriptor+>;movl $, %esi;movl (%ebx), %eax": 1,
                "je  <RtlLengthSecurityDescriptor+>;testw %ax, %ax;jns  <RtlLengthSecurityDescriptor+>;movl (%ebx), %eax;addl %eax, %ebx": 1,
                "testl %ebx, %ebx;je  <RtlLengthSecurityDescriptor+>;movzwl (%ebx), %eax;addl $, %eax;andl $-, %eax": 1,
                "movzwl (%ebx), %edx;testb $, %dl;je  <RtlGetSaclSecurityDescriptor+>;testw %dx, %dx;jns  <RtlGetSaclSecurityDescriptor+>": 1,
                "movl $, %eax;jmp  <RtlGetSaclSecurityDescriptor+>;movl $, %eax;addl $, %esp;popl %ebx": 1,
                "movl $, %edx;movl $, %ecx;calll - <PsEstablishWinCallouts+>;cmpb $, (%ebx);jne  <RtlGetOwnerSecurityDescriptor+>": 1,
                "cmpl $, %eax;sbbl %eax, %eax;notl %eax;andl %eax, %edx;jmp  <RtlGetOwnerSecurityDescriptor+>": 1,
                "jne  <RtlGetGroupSecurityDescriptor+>;cmpw $, (%ebx);jns  <RtlGetGroupSecurityDescriptor+>;movl (%ebx), %eax;leal (%ebx,%eax), %edx": 1,
                "movl $, %eax;jmp  <RtlGetGroupSecurityDescriptor+>;movl $, %eax;addl $, %esp;popl %ebx": 1,
                "movzwl (%ebx), %eax;testw %ax, %ax;js  <RtlSetSaclSecurityDescriptor+>;movl %esi, %edx;testb %dl, %dl": 1,
                "movl %edx, (%ebx);andl $-, %eax;movl %edi, %edx;testb %dl, %dl;jne  <RtlSetSaclSecurityDescriptor+>": 1,
                "jne  <RtlSetOwnerSecurityDescriptor+>;movzwl (%ebx), %eax;testw %ax, %ax;js  <RtlSetOwnerSecurityDescriptor+>;movl (%ebp), %edx": 1,
                "orl $, %eax;movw %ax, (%ebx);movl $, %eax;jmp  <RtlSetOwnerSecurityDescriptor+>;movl $, %eax": 1,
                "cmpb $, (%ebx);jne  <RtlSetGroupSecurityDescriptor+>;movzwl (%ebx), %eax;testw %ax, %ax;js  <RtlSetGroupSecurityDescriptor+>": 1,
                "movl %edx, (%ebx);andl $-, %eax;movl %esi, %edx;testb %dl, %dl;jne  <RtlSetGroupSecurityDescriptor+>": 1,
                "jne  <RtlSetGroupSecurityDescriptor+>;movzwl (%ebx), %edx;movl (%ebp), %eax;movw %dx, (%eax);movl $, %eax": 1,
                "movb $, (%eax);movl $, %eax;jmp  <RtlSetGroupSecurityDescriptor+>;movzbl (%ebx), %eax;movl (%ebp), %edx": 1,
                "movl $, %ecx;calll - <PsEstablishWinCallouts+>;movzbl (%ebx), %eax;movl (%ebp), %edx;movl %eax, (%edx)": 1,
                "addl -(%ebp), %esi;movl %fs:, %eax;movl %esi, (%esp);movl $, (%esp);movl (%eax), %eax": 1,
                "subl $, %esp;movl (%ebp), %edx;movl %eax, (%edx);testl %eax, %eax;je  <RtlSetGroupSecurityDescriptor+>": 1,
                "calll  <memmove>;movl $, %eax;jmp  <RtlSetGroupSecurityDescriptor+>;movl $, %eax;leal -(%ebp), %esp": 1,
                "calll - <PsEstablishWinCallouts+>;leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%edx);movl $, %eax;jmp  <RtlSetGroupSecurityDescriptor+>;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll  <memset>;movl $, (%esp);movl %esi, (%esp)": 1,
                "movl %eax, -(%ebp);movl %eax, %esi;testl %edi, %edi;je  <RtlSetGroupSecurityDescriptor+>;movl %edi, (%esp)": 1,
                "cmpl $, -(%ebp);je  <RtlSetGroupSecurityDescriptor+>;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl %esi, (%ebx);orw $, (%ebx);movl $, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "subl $, %esp;jmp  <RtlAbsoluteToSelfRelativeSD+>;movl $, %eax;movl -(%ebp), %ebx;leave": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);calll  <memmove>;movl $, (%ebx);movl $, (%ebx)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <memmove>": 3,
                "subl $, %esp;andw $, (%ebx);movl -(%ebp), %eax;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%ebx);movl $, %eax;jmp  <RtlSelfRelativeToAbsoluteSD+>;movl $, %eax": 1,
                "movl $, %ecx;calll - <PsEstablishWinCallouts+>;jmp  <RtlValidSecurityDescriptor+>;movl (%ebp), %eax;cmpb $, (%eax)": 1,
                "jmp  <RtlValidSecurityDescriptor+>;movl $, %ebx;movl (%ebp), %eax;movl (%eax), %edx;movl %eax, %ecx": 1,
                "movl (%eax), %edx;movl %eax, %ecx;addl %edx, %ecx;cmpl $, %edx;sbbl %eax, %eax": 1,
                "je  <RtlValidSecurityDescriptor+>;movl (%ebp), %edx;movzwl (%edx), %eax;testb $, %al;je  <RtlValidSecurityDescriptor+>": 2,
                "testw %ax, %ax;jns  <RtlValidSecurityDescriptor+>;movl (%edx), %eax;testl %eax, %eax;je  <RtlValidSecurityDescriptor+>": 2,
                "movl %edx, (%esp);movl %eax, (%esp);calll - <RtlUpperChar+>;subl $, %esp;movl %eax, %edx": 2,
                "testb %dl, %dl;je  <RtlValidRelativeSecurityDescriptor+>;movl %esi, (%esp);calll  <RtlLengthSid>;subl $, %esp": 2,
                "testb $, (%ebp);jne  <RtlValidRelativeSecurityDescriptor+>;movl (%ebx), %eax;testl %eax, %eax;je  <RtlValidRelativeSecurityDescriptor+>": 1,
                "movl %ebx, %esi;addl (%ebx), %esi;movl %esi, (%esp);calll  <RtlCreateAcl+>;subl $, %esp": 1,
                "movl $, %eax;testb %dl, %dl;je  <RtlValidRelativeSecurityDescriptor+>;addl (%ebx), %ebx;movl %ebx, (%esp)": 1,
                "leal (%esi), %ecx;movzwl (%esi), %edi;addl %esi, %edi;movzwl (%esi), %esi;testl %esi, %esi": 1,
                "movl %eax, %ecx;addl $, %edx;cmpl %esi, %edx;jb - <RtlValidRelativeSecurityDescriptor+>;movl $, %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <memmove>;addl $, %esp;popl %ebx": 1,
                "addl %esi, %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <memmove>": 1,
                "movl $, %eax;jmp  <RtlGetAce+>;movl $, %eax;jmp  <RtlGetAce+>;movl $, %eax": 2,
                "jbe  <RtlCreateAcl+>;leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <RtlValidRelativeSecurityDescriptor+>": 1,
                "subl $, %esp;testb %al, %al;je  <RtlCreateAcl+>;movzwl (%ebx), %eax;movl %eax, (%edi)": 1,
                "testb %al, %al;je  <RtlCreateAcl+>;movzwl (%ebx), %eax;movl %eax, (%edi);movl -(%ebp), %eax": 1,
                "movzwl (%ebx), %eax;movl %eax, (%edi);movl $, (%edi);movl $, %eax;jmp  <RtlCreateAcl+>": 1,
                "movl -(%ebp), %edi;movl %edi, %esi;cmpw $, (%eax);je  <RtlCreateAcl+>;addl %eax, %edx": 1,
                "jne  <RtlCreateAcl+>;movl %edi, %edx;addl %ebx, %edx;cmpl %edx, -(%ebp);jb  <RtlCreateAcl+>": 1,
                "addl %ebx, %edx;cmpl %edx, -(%ebp);jb  <RtlCreateAcl+>;movl $, -(%ebp);jmp  <RtlCreateAcl+>": 1,
                "movzwl %cx, %edx;movl %edx, (%esp);movzwl %ax, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "calll - <DbgPrint>;jmp  <RtlCreateAcl+>;cmpw $, %ax;ja  <RtlCreateAcl+>;movl $, (%esp)": 2,
                "movl $, (%esp);movl $, (%esp);calll - <DbgPrint>;jmp  <RtlCreateAcl+>;leal (%esi), %eax": 1,
                "movl $, (%esp);calll - <DbgPrint>;jmp  <RtlCreateAcl+>;cmpb $, %dl;jne  <RtlCreateAcl+>": 1,
                "calll - <RtlValidRelativeSecurityDescriptor+>;subl $, %esp;testb %al, %al;je  <RtlDeleteAce+>;leal (%ebx), %eax": 1,
                "subl $, %esp;subw $, (%ebx);movl $, %eax;jmp  <RtlDeleteAce+>;movl $, %eax": 1,
                "testb %al, %al;je  <RtlAddAce+>;leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx": 1,
                "movl $, %ebx;cmpl %edi, %eax;ja  <RtlAddAce+>;movl -(%ebp), %ecx;movl %ecx, -(%ebp)": 1,
                "movzwl -(%ebp), %ebx;movl -(%ebp), %eax;subl %edx, %eax;movl %eax, (%esp);movl %edx, (%esp)": 1,
                "movl %esi, (%esp);calll  <RtlValidSid>;subl $, %esp;testb %al, %al;je  <RtlAddAce+>": 1,
                "movl (%ebp), %esi;movl %esi, (%esp);movl %edi, (%esp);calll  <memmove>;leal (%edi), %esi": 1,
                "calll  <RtlCopySid>;subl $, %esp;addw $, (%ebx);movzbl -(%ebp), %edx;movl (%ebp), %eax": 2,
                "movb %al, (%ebx);movl $, %eax;jmp  <RtlAddAce+>;movl $, %eax;jmp  <RtlAddAce+>": 2,
                "movl (%ebp), %ebx;movl (%ebp), %edi;movzbl (%ebp), %eax;movb %al, -(%ebp);movl $, %edx": 1,
                "movzbl (%ebp), %eax;movb %al, -(%ebp);movl $, %edx;movl $, %ecx;calll - <PsEstablishWinCallouts+>": 11,
                "movzbl (%ebp), %ebx;cmpb $, (%ebp);je  <RtlAddAce+>;orl $, %eax;testb %bl, %bl": 1,
                "movl %esi, %eax;testb %al, %al;je  <RtlAddAce+>;orb $-, %bl;movl $, (%esp)": 1,
                "testl %ebx, %ebx;je  <RtlAddAccessAllowedAce+>;movw %si, (%ebx);movl $, %eax;jmp  <RtlAddAccessAllowedAce+>": 1,
                "movl %eax, %ebx;movl %ecx, %edi;movl %edx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, %ebx;jmp  <RtlAddAccessAllowedAce+>;movl $, (%edi);movl $, %ebx;movl %ebx, %eax": 1,
                "jmp  <RtlAddAccessAllowedAce+>;movl $, (%edi);movl $, %ebx;movl %ebx, %eax;leal -(%ebp), %esp": 1,
                "testl %eax, %eax;jns  <RtlCreateAtomTable+>;movl %edi, (%esp);calll - <RtlWalkFrameChain+>;jmp  <RtlCreateAtomTable+>": 1,
                "calll - <RtlWalkFrameChain+>;testb %al, %al;jne  <RtlCreateAtomTable+>;movl %edi, (%esp);calll - <RtlWalkFrameChain+>": 1,
                "testb %al, %al;jne  <RtlCreateAtomTable+>;movl %edi, (%esp);calll - <RtlWalkFrameChain+>;movl %edi, (%esp)": 1,
                "movl (%ebp), %edx;movl (%edx), %eax;leal (%edx,%eax,), %eax;movl %eax, -(%ebp);addl $, %edx": 1,
                "cmpb $, -(%ebp);jne  <RtlEmptyAtomTable+>;testb $, (%ebx);jne  <RtlEmptyAtomTable+>;movl %esi, (%edi)": 1,
                "jne - <RtlEmptyAtomTable+>;movl (%ebp), %edx;movl %edx, (%esp);calll - <RtlWalkFrameChain+>;movl $, %eax": 1,
                "testl %esi, %esi;je  <RtlAddAtomToAtomTable+>;movw %ax, (%esi);movl $, %ebx;jmp  <RtlAddAtomToAtomTable+>": 1,
                "movl (%ebp), %eax;calll - <RtlAddAccessAllowedAce+>;testl %eax, %eax;je  <RtlAddAtomToAtomTable+>;movzbl (%eax), %edx": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%eax);testl %esi, %esi;je  <RtlAddAtomToAtomTable+>;movzwl (%ecx), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <RtlWalkFrameChain+>;movl $, %ebx;jmp  <RtlAddAtomToAtomTable+>": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movzwl (%ebp), %ebx;movl $, %esi;cmpw $, %bx": 1,
                "movzwl %bx, %eax;subl $, %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpw %bx, (%eax);jne  <RtlDeleteAtomFromAtomTable+>;movl $, %esi;testb $, (%eax);jne  <RtlDeleteAtomFromAtomTable+>": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <RtlWalkFrameChain+>;movl $, %eax;testl %ebx, %ebx": 1,
                "calll - <RtlWalkFrameChain+>;movzwl %bx, %eax;subl $, %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "subl $, %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <RtlWalkFrameChain+>": 1,
                "movl $, %ebx;jmp  <RtlQueryAtomInAtomTable+>;leal -(%edx), %ebx;jmp  <RtlQueryAtomInAtomTable+>;movl %ebx, (%esi)": 1,
                "movl $, %ebx;jmp  <RtlQueryAtomInAtomTable+>;cmpl $, (%ebp);sbbl %ebx, %ebx;notl %ebx": 1,
                "movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll  <memmove>;movl %ebx, %eax": 1,
                "je  <RtlQueryAtomInAtomTable+>;movl $, %edi;movl $, %edx;movl (%ecx), %eax;testl %eax, %eax": 1,
                "movl $, %edi;movl $, %edx;movl (%ebp), %eax;movl %edx, (%eax);movl (%ebp), %eax": 1,
                "movzbl (%ebp), %eax;movb %al, -(%ebp);cmpl %ebx, %edx;ja  <RtlAddRange+>;jb  <RtlAddRange+>": 1,
                "jb  <RtlAddRange+>;cmpl %edi, -(%ebp);ja  <RtlAddRange+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %edi, (%eax);movl %ebx, (%eax);movzbl -(%ebp), %edx;movb %dl, (%eax);movl (%ebp), %edx": 1,
                "jb  <RtlAddRange+>;ja  <RtlAddRange+>;cmpl (%edx), %edi;jb  <RtlAddRange+>;leal (%esi), %esi": 1,
                "cmpl (%edx), %edi;jb  <RtlAddRange+>;leal (%esi), %esi;jmp  <RtlAddRange+>;cmpl (%edx), %ebx": 1,
                "jb  <RtlAddRange+>;cmpl (%edx), %edi;leal (%esi), %esi;jae  <RtlAddRange+>;movl (%edx), %ecx": 1,
                "jae  <RtlAddRange+>;movl (%edx), %ecx;movl %edx, (%eax);movl %ecx, (%eax);movl %eax, (%ecx)": 1,
                "movl %eax, %edi;cmpl %eax, %ebx;je  <RtlDeleteOwnersRanges+>;cmpl %esi, (%ebx);jne  <RtlDeleteOwnersRanges+>": 1,
                "orl %edx, %ecx;jne  <RtlDeleteRange+>;movl (%ebp), %edx;cmpl %edx, (%eax);jne  <RtlDeleteRange+>": 1,
                "movl (%ebp), %ecx;movl %ecx, -(%ebp);movl (%ebp), %edx;movl %edx, -(%ebp);movl (%ebp), %ecx": 1,
                "movl (%ebp), %edx;movl %edx, -(%ebp);movl (%ebp), %ecx;movl %ecx, -(%ebp);cmpl $, (%ebp)": 1,
                "movl $, %eax;jmp  <RtlFindRange+>;movl (%eax), %esi;cmpl %esi, %eax;jne  <RtlFindRange+>": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;addl %ecx, %eax;adcl %ebx, %edx;cmpl -(%ebp), %edx": 1,
                "ja  <RtlFindRange+>;subl %edi, %ecx;sbbl %edx, %ebx;cmpl %ebx, -(%ebp);jb  <RtlFindRange+>": 1,
                "calll - <PsEstablishWinCallouts+>;subl $, %esp;movl (%ebx), %eax;cmpl %esi, %eax;jne - <RtlFreeRangeList+>": 1,
                "cmpl %esi, %eax;jne - <RtlFreeRangeList+>;movl $, (%ebx);movl $, (%ebx);leal -(%ebp), %esp": 1,
                "jmp  <RtlGetFirstRange+>;movl %ecx, (%edx);addl $, %ecx;movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "movl (%ecx), %ebx;cmpl %ebx, (%eax);jne  <RtlGetNextRange+>;testb %dl, %dl;je  <RtlGetNextRange+>": 1,
                "addl $, %edx;movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax;jmp  <RtlGetNextRange+>": 1,
                "retl $;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl %eax, (%eax)": 1,
                "testl %eax, %eax;jns  <RtlInvertRangeList+>;jmp  <RtlInvertRangeList+>;movl (%edx), %eax;movl (%edx), %edx": 1,
                "movl (%esi), %edx;movl %ebx, %edi;xorl %edx, %edi;movl %edi, -(%ebp);movl %ecx, %edi": 1,
                "calll - <RtlAddRange>;subl $, %esp;testl %eax, %eax;setg %dl;movzbl %dl, %edx": 1,
                "movl (%ebx), %edx;movl (%ebx), %eax;cmpl %esi, %eax;jb  <RtlIsRangeAvailable+>;ja  <RtlIsRangeAvailable+>": 1,
                "ja  <RtlIsRangeAvailable+>;movl -(%ebp), %ecx;cmpl (%ebx), %ecx;jb  <RtlIsRangeAvailable+>;cmpl %edi, %eax": 1,
                "jb  <RtlIsRangeAvailable+>;ja  <RtlIsRangeAvailable+>;movl -(%ebp), %eax;cmpl (%ebx), %eax;nop": 1,
                "subl $, %esp;testl %eax, %eax;js  <RtlMergeRangeLists+>;movl $, (%esp);movl %edi, (%esp)": 1,
                "calll - <PsEstablishWinCallouts+>;movl (%ebp), %eax;leal (,%eax,), %eax;popl %ebp;retl $": 1,
                "movl %edi, %eax;movb %al, (%ebx);movl (%esi), %eax;movl %eax, (%ebx);movzwl (%esi), %eax": 1,
                "movw %ax, (%ebx);movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "cmpb %dl, (%ebx);jne  <RtlCopySid+>;movzwl (%esi), %ecx;cmpw %cx, (%ebx);jne  <RtlCopySid+>": 1,
                "subl $, %esp;movl %eax, %esi;cmpl (%ebp), %eax;ja  <RtlCopySid+>;subl %eax, (%ebp)": 1,
                "movl %eax, %esi;cmpl (%ebp), %eax;ja  <RtlCopySid+>;subl %eax, (%ebp);movl (%ebp), %eax": 1,
                "addl $, %edi;movl (%ebp), %eax;cmpl %eax, -(%ebp);jne - <RtlCopySid+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;cmpl %eax, -(%ebp);jne - <RtlCopySid+>;movl (%ebp), %eax;movl (%ebp), %edx": 1,
                "movl $, %eax;jmp  <RtlAllocateAndInitializeSid+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "calll  <swprintf>;leal (%ebx,%eax,), %esi;jmp  <RtlConvertSidToUnicodeString+>;movzbl (%edi), %eax;movl %eax, (%esp)": 1,
                "movl %esi, (%esp);calll  <swprintf>;leal (%esi,%eax,), %esi;addl $, %ebx;movzbl (%edi), %eax": 1,
                "leal (%esi,%eax,), %esi;addl $, %ebx;movzbl (%edi), %eax;cmpl %ebx, %eax;ja - <RtlConvertSidToUnicodeString+>": 1,
                "je  <RtlConvertSidToUnicodeString+>;leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %eax, (%esp);movl (%edx), %eax;movl %eax, (%esp);calll  <memmove>;movl (%ebp), %eax": 1,
                "movw $, (%eax,%esi);movl $, %eax;jmp  <RtlConvertSidToUnicodeString+>;movl $, %eax;jmp  <RtlConvertSidToUnicodeString+>": 1,
                "jmp  <RtlConvertSidToUnicodeString+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl %eax, (%ebx);movl (%edi), %eax;shrl $, %eax;movl %eax, (%ebx);movl (%edi), %eax": 2,
                "movl (%edi), %eax;movl %eax, (%ebx);movl $, (%ebx);movw %dx, (%ebx);testb $, (%ebp)": 1,
                "movb $, %al;leal (%ebx,%eax,), %ecx;leal (%ecx), %edx;movl %edx, (%edx);movl %edx, (%ecx)": 1,
                "movl %esi, (%ebx);addl $, %esi;cmpl %ecx, %esi;jne - <RtlConvertSidToUnicodeString+>;movl $, %eax": 1,
                "movl $, %edx;jmp - <RtlConvertSidToUnicodeString+>;cmpl $, (%ebp);jne - <RtlConvertSidToUnicodeString+>;jmp - <RtlConvertSidToUnicodeString+>": 1,
                "leal -(,%ebx,), %eax;movl %eax, (%esp);leal (%esi), %eax;movl %eax, (%esp);calll  <RtlFillMemoryUlong>": 1,
                "je  <RtlConvertSidToUnicodeString+>;movzwl -(%eax), %edx;cmpl %edx, %ebx;ja  <RtlConvertSidToUnicodeString+>;jmp  <RtlConvertSidToUnicodeString+>": 1,
                "movzwl -(%eax), %edx;cmpl %edx, %ebx;ja  <RtlConvertSidToUnicodeString+>;jmp  <RtlConvertSidToUnicodeString+>;movzwl -(%eax), %edx": 1,
                "movl %eax, %ebx;jmp  <RtlConvertSidToUnicodeString+>;movl %eax, %ebx;nop;leal (%esi), %esi": 1,
                "movl (%ebx), %edx;movl %ebx, (%esi);movl %edx, (%esi);movl %eax, (%edx);movl %eax, (%ebx)": 1,
                "movl (%ebp), %edi;movl (%ebp), %eax;addl %edi, (%eax);movzbl (%ebx), %edx;movb %dl, -(%ebp)": 1,
                "subl -(%ebp), %edi;movl -(%ebp), %ecx;leal (%ebx,%ecx,), %ebx;movl -(%ebp), %eax;cmpl (%eax), %ebx": 1,
                "movl (%ebp), %ebx;movzbl (%ebp), %ecx;movzbl (%ebp), %esi;movl (%ebx), %edx;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %eax, (%edx);movl %edx, (%eax);cmpl %eax, %edx;jne  <RtlConvertSidToUnicodeString+>": 1,
                "cmpw $, (%ebx);jbe  <RtlConvertSidToUnicodeString+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpl $, %esi;jbe  <RtlConvertSidToUnicodeString+>;leal -(%edx), %esi;movl $, (%esp);movl %esi, (%esp)": 1,
                "leal (%ebx,%eax), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <DbgPrint>;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %edx;addl %edx, (%eax);movl -(%ebp), %eax;movl -(%ebp), %edx;leal (%eax), %ecx": 1,
                "addl (%edx), %edx;cmpl %edx, %ecx;jbe - <RtlConvertSidToUnicodeString+>;movl (%ebx), %eax;movl (%eax), %edx": 1,
                "leal (%esi,%edx), %ecx;cmpl %edi, %ecx;jne  <RtlConvertSidToUnicodeString+>;addl %edx, (%ebp);movl (%ebx), %ebx": 1,
                "movl (%ebx), %ebx;cmpl -(%ebp), %ebx;jne - <RtlConvertSidToUnicodeString+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "shrl $, %eax;movl (%ebp), %edx;subl %eax, (%edx);movl -(%ebp), %edi;testl %esi, %esi": 1,
                "jne  <RtlConvertSidToUnicodeString+>;cmpw $, (%esi);jne  <RtlConvertSidToUnicodeString+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll  <RtlAssert>;subl $, %esp;movzwl (%esi), %eax;leal (%esi,%eax,), %esi": 1,
                "jmp  <RtlConvertSidToUnicodeString+>;movzbl (%ebx), %eax;movl (%esi,%eax,), %edi;leal (%ebx), %eax;andl $, %eax": 1,
                "movzwl (%ebx), %edx;movl $, -(%ebp);testw %dx, %dx;je  <RtlConvertSidToUnicodeString+>;cmpl %eax, %ebx": 1,
                "movl $, -(%ebp);testw %dx, %dx;je  <RtlConvertSidToUnicodeString+>;cmpl %eax, %ebx;jne  <RtlConvertSidToUnicodeString+>": 1,
                "movl %edx, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);jmp  <RtlConvertSidToUnicodeString+>;movl $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %eax;cmpl %eax, %edx;jbe  <RtlConvertSidToUnicodeString+>;subl %eax, %edx": 1,
                "jbe  <RtlConvertSidToUnicodeString+>;subl %eax, %edx;movl %edx, -(%ebp);movl %edi, (%esp);calll - <RtlConvertSidToUnicodeString+>": 1,
                "subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax;jne  <RtlConvertSidToUnicodeString+>;jmp  <RtlConvertSidToUnicodeString+>": 1,
                "subl $, %esp;jmp  <RtlConvertSidToUnicodeString+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "orb $, (%edx);cmpl $, -(%ebp);je  <RtlConvertSidToUnicodeString+>;movl -(%ebp), %eax;shll $, %eax": 1,
                "movw $, (%ecx);movzbl (%edi), %edx;movb %dl, (%ecx);movzwl -(%ebp), %edx;movw %dx, (%ecx)": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpl %ebx, (%ebp);je  <RtlConvertSidToUnicodeString+>;movw $, (%ebx)": 1,
                "subl %ecx, %edx;movl %edx, (%esp);movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movzwl (%esi), %edx;movzwl %dx, %ecx;addl (%edi), %ecx;cmpl $, %ecx;ja  <RtlConvertSidToUnicodeString+>": 1,
                "cmpw %dx, %ax;je  <RtlConvertSidToUnicodeString+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl %ebx, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %esi, %ebx;testb $, (%esi);jne  <RtlConvertSidToUnicodeString+>;movl (%edi), %eax;movw %ax, (%esi,%eax,)": 1,
                "testb $, (%ebx);jne  <RtlConvertSidToUnicodeString+>;movl (%edi), %eax;leal (%ebx,%eax,), %esi;testb $, (%esi)": 1,
                "jne  <RtlConvertSidToUnicodeString+>;movzwl (%esi), %edx;addl %eax, %edx;cmpl $, %edx;ja  <RtlConvertSidToUnicodeString+>": 1,
                "andl $, %eax;movb %al, (%ebx);movl $, (%esp);movl $, (%esp);movl %esi, (%esp)": 1,
                "calll - <RtlConvertSidToUnicodeString+>;subl $, %esp;testl %eax, %eax;je  <RtlConvertSidToUnicodeString+>;shrl $, -(%ebp)": 1,
                "cmpl %edx, %ebx;je  <RtlConvertSidToUnicodeString+>;leal -(%ebp), %edi;shrl %edx;cmpl %edx, %ebx": 1,
                "movl $, (%esp);calll - <DbgPrint>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpl (%ebp), %eax;sbbl %eax, %eax;notl %eax;andl %eax, %ebx;jmp  <RtlConvertSidToUnicodeString+>": 1,
                "movl -(%ebp), %eax;addl %eax, (%esi);movl (%esi), %eax;cmpl %eax, %ebx;jbe - <RtlConvertSidToUnicodeString+>": 1,
                "movl %edx, (%esp);movl %esi, (%esp);calll  <VerSetConditionMask+>;subl $, %esp;movl %eax, -(%ebp)": 1,
                "calll - <DbgPrint>;andl $, %esi;testl %ebx, %ebx;jne  <RtlCreateHeap+>;leal -(%ebp), %ebx": 1,
                "leal -(%ebp), %ebx;testl $, %edi;je  <RtlCreateHeap+>;orl $, %esi;testl $, %edi": 1,
                "jmp  <RtlCreateHeap+>;addl $, %eax;andl $, %eax;movl %eax, (%ebp);movl (%ebp), %edx": 1,
                "movw $, %ax;movl %eax, (%ebp);testl $, %esi;jne  <RtlCreateHeap+>;testl $, %esi": 1,
                "cmpl $, (%ebp);je  <RtlCreateHeap+>;cmpl $, (%ebx);je  <RtlCreateHeap+>;testl $, %esi": 1,
                "cmpl $, %eax;jne  <RtlCreateHeap+>;movl %edx, %edi;movl $, %edx;testl $, %edi": 1,
                "je  <RtlCreateHeap+>;movl $, %edi;jmp  <RtlCreateHeap+>;movl $, %eax;cmpl $, (%ebx)": 1,
                "jmp  <RtlCreateHeap+>;movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp)": 1,
                "movl (%ebp), %ebx;testl %ebx, %ebx;je  <RtlDestroyHeap+>;testb $, (%ebx);je  <RtlDestroyHeap+>": 1,
                "movl $, (%esp);movl %edi, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "testl %eax, %eax;js  <RtlDestroyHeap+>;movl (%ebx), %eax;movl %eax, (%esp);calll - <PsEstablishWinCallouts+>": 1,
                "movl $, (%ebx);movl (%ebx), %eax;leal (%ebx), %edx;movl %edx, -(%ebp);cmpl %edx, %eax": 1,
                "je  <RtlDestroyHeap+>;movl %eax, (%esp);calll - <RtlConvertSidToUnicodeString+>;subl $, %esp;subl $, %esi": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edi;movl (%ebp), %ebx;movl (%ebp), %eax": 1,
                "shrl $, %ecx;orl %ecx, %edx;movb %dl, (%ebx);movb $, (%ebx);movzwl (%ebx), %ecx": 1,
                "movzwl (%edx), %eax;movl -(%ebp), %ecx;addl %eax, %ecx;movl %ecx, -(%ebp);subl %eax, (%edi)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <DbgPrint>;testl %eax, %eax;je  <RtlFreeHeap+>": 3,
                "movl $, (%esp);calll - <ZwFreeVirtualMemory>;subl $, %esp;movl %eax, -(%ebp);testl %eax, %eax": 1,
                "ja  <RtlFreeHeap+>;movl %eax, %edx;addl (%esi), %edx;cmpl (%esi), %edx;jae  <RtlFreeHeap+>": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll - <RtlConvertSidToUnicodeString+>;subl $, %esp;movl -(%ebp), %eax": 1,
                "subl $, %esp;movl -(%ebp), %ecx;movzwl (%ebx), %edx;addl %ecx, %edx;cmpl %edx, %esi": 1,
                "movb %al, -(%ebp);movl %edx, -(%ebp);jmp  <RtlFreeHeap+>;movzbl (%edi), %eax;movb %al, -(%ebp)": 1,
                "testb $, -(%ebp);je  <RtlFreeHeap+>;movzwl %ax, %eax;movl -(%ebx,%eax,), %edx;movl -(%ebx,%eax,), %eax": 1,
                "je  <RtlFreeHeap+>;movzwl %ax, %eax;movl -(%ebx,%eax,), %edx;movl -(%ebx,%eax,), %eax;movl %eax, -(%ebx,%esi,)": 1,
                "movb %dl, (%esi);testb $, -(%ebp);je  <RtlFreeHeap+>;movzbl -(%ebp), %edx;movb %dl, (%esi)": 1,
                "andl $-, %edx;movb %dl, (%esi);movw %ax, (%esi);movl -(%ebp), %edx;movw %ax, (%edx)": 1,
                "movl (%ebp), %edx;addl %eax, (%edx);jmp  <RtlFreeHeap+>;movl %eax, (%esp);movl %esi, (%esp)": 1,
                "testb $, (%eax);je  <RtlFreeHeap+>;subl $, %eax;jmp  <RtlFreeHeap+>;movzwl (%eax), %edx": 1,
                "cmpl %eax, %ecx;je  <RtlFreeHeap+>;movzwl -(%eax), %eax;cmpl %ebx, %eax;jb  <RtlFreeHeap+>": 1,
                "movl $, (%eax);leal (%ebx), %eax;jmp  <RtlFreeHeap+>;movl (%eax), %eax;cmpl %eax, %ecx": 1,
                "testl %edx, %edx;je  <RtlFreeHeap+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %esi;orl (%ebx), %esi;testl $, %esi;jne  <RtlAllocateHeap+>;testl $, %esi": 1,
                "jns  <RtlAllocateHeap+>;movl $, (%esp);calll  <RtlNtStatusToDosError+>;subl $, %esp;movl $, (%esp)": 1,
                "testl %edx, %edx;je  <RtlAllocateHeap+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "je  <RtlAllocateHeap+>;movl (%ebp), %edx;movl %edx, -(%ebp);jmp  <RtlAllocateHeap+>;movl $, -(%ebp)": 1,
                "jne  <RtlAllocateHeap+>;movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll - <PsEstablishWinCallouts+>": 1,
                "andl (%ebx,%eax,), %edx;leal (%ebx,%eax,), %eax;cmpl $, %edi;ja  <RtlAllocateHeap+>;testl %edx, %edx": 1,
                "leal (%ebx,%eax,), %eax;cmpl $, %edi;ja  <RtlAllocateHeap+>;testl %edx, %edx;jne  <RtlAllocateHeap+>": 1,
                "andl $, %ecx;je  <RtlAllocateHeap+>;movzbl -(%ecx), %edx;addl $, %edx;jmp  <RtlAllocateHeap+>": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);calll - <RtlDestroyHeap+>;subl $, %esp;movl %eax, %edi": 1,
                "orb $, (%edi);testb $, (%edi);je  <RtlAllocateHeap+>;movl %edi, (%esp);calll - <RtlFreeHeap+>": 1,
                "movl %eax, (%esp);calll - <RtlRaiseException>;subl $, %esp;movl $, (%esp);calll  <RtlNtStatusToDosError+>": 1,
                "testl %eax, %eax;jne  <RtlAllocateHeap+>;movb $, %al;movl (%ebp), %esi;addl (%esi), %eax": 1,
                "cmpl $, (%esi);je  <RtlAllocateHeap+>;addl $, -(%ebp);movb $, -(%ebp);testb $, %bl": 1,
                "movzwl -(%edi), %ecx;movl %ecx, -(%ebp);movl %ecx, %edx;shll $, %edx;movzbl -(%edi), %eax": 1,
                "movl -(%ebp), %eax;shrl $, %eax;movl %eax, -(%ebp);cmpl %eax, %ecx;jb  <RtlAllocateHeap+>": 1,
                "movzwl -(%edi), %eax;movl -(%ebp), %ecx;movl -(%ecx,%eax,), %edx;movl -(%ecx,%eax,), %ecx;movl -(%ebp), %esi": 1,
                "movl -(%ebp), %eax;cmpl %eax, (%ebp);jbe  <RtlAllocateHeap+>;testb $, %bl;je  <RtlAllocateHeap+>": 2,
                "movl %eax, (%esp);calll  <memset>;jmp  <RtlAllocateHeap+>;movl (%ebp), %esi;testb $, (%esi)": 1,
                "testb $, (%esi);je  <RtlAllocateHeap+>;movl -(%ebp), %eax;andl $, %eax;je  <RtlAllocateHeap+>": 1,
                "addl -(%ebp), %eax;cmpl %eax, (%ebp);jbe  <RtlAllocateHeap+>;movl (%ebp), %edx;subl %eax, %edx": 1,
                "movl %eax, (%esp);calll - <RtlConvertSidToUnicodeString+>;subl $, %esp;movl (%ebp), %edx;addl %esi, (%edx)": 3,
                "jmp  <RtlAllocateHeap+>;leal (%ebx,%esi,), %ecx;movl %ecx, -(%ebp);movzbl (%ecx), %eax;testb $, %al": 1,
                "movw %si, (%ecx);movl $, (%esp);movl %esi, (%esp);movl %ebx, (%esp);movl (%ebp), %eax": 1,
                "movl -(%ebp), %esi;movl %esi, (%esp);movl %ebx, (%esp);movl (%ebp), %esi;movl %esi, (%esp)": 1,
                "testb %al, %al;je  <RtlAllocateHeap+>;movzbl %al, %eax;shll $, %eax;orl %eax, %ebx": 1,
                "je  <RtlAllocateHeap+>;testb $, -(%eax);je  <RtlAllocateHeap+>;leal -(%eax), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl %eax, -(%ebp);testb $, -(%edi);je  <RtlAllocateHeap+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl $, (%eax);movl $, (%eax);movl -(%ebp), %eax;cmpl %eax, (%ebp)": 1,
                "movl %esi, (%esp);calll  <memmove>;jmp  <RtlAllocateHeap+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl %eax, %edx;addl %esi, %eax;movl %edx, (%esp);movl $, (%esp);movl %eax, (%esp)": 1,
                "movl %edx, (%esp);movl $, (%esp);movl %eax, (%esp);calll  <memset>;movl %edi, (%esp)": 1,
                "movl %eax, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp;jmp  <RtlAllocateHeap+>;movl %eax, %edi": 1,
                "subl $, %esp;jmp  <RtlAllocateHeap+>;movl %eax, %edi;testb $, %bl;je - <RtlAllocateHeap+>": 1,
                "je  <RtlSizeHeap+>;subl $, %edx;movl %edx, (%esp);calll - <RtlConvertSidToUnicodeString+>;subl $, %esp": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %ebx;testb $, (%ebx);je  <RtlSizeHeap+>": 1,
                "je  <RtlSizeHeap+>;movl %ebx, (%esp);calll - <RtlConvertSidToUnicodeString+>;subl $, %esp;movl %eax, %esi": 1,
                "movzbl (%ebx), %eax;subl %eax, %esi;leal (%ebx,%esi), %edi;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %edx;cmpl $, %eax;je  <RtlSizeHeap+>;addl %eax, %edi;movl %edi, (%esp)": 1,
                "movl $, (%esp);calll - <DbgPrint>;movl $, %edx;testl %eax, %eax;je  <RtlSizeHeap+>": 10,
                "movl $, (%esp);calll - <DbgPrint>;movl $, %edx;movl %edx, %eax;movl -(%ebp), %ebx": 1,
                "cmpl $, %edx;jne  <RtlSizeHeap+>;jmp  <RtlSizeHeap+>;cmpb $, %dl;ja  <RtlSizeHeap+>": 1,
                "jmp  <RtlSizeHeap+>;cmpb $, %dl;ja  <RtlSizeHeap+>;testl %ecx, %ecx;je  <RtlSizeHeap+>": 1,
                "subl $, %esp;testb %al, %al;je  <RtlSizeHeap+>;movl $, %edx;testb $, (%ebx)": 1,
                "testb $, (%ebx);jne  <RtlSizeHeap+>;movl $, %eax;movl (%esi,%eax,), %edx;testl %edx, %edx": 1,
                "jb  <RtlSizeHeap+>;addl $, %eax;cmpl $, %eax;jne - <RtlSizeHeap+>;movl $, %edx": 1,
                "movl $, (%esp);calll - <DbgPrint>;movl $, %edx;jmp  <RtlSizeHeap+>;movl $, %edx": 2,
                "movl %eax, %edi;movl $, -(%ebp);movl $, -(%ebp);jmp  <RtlSizeHeap+>;testl %esi, %esi": 1,
                "movl $, %eax;testl %edx, %edx;je  <RtlSizeHeap+>;movl $, (%esp);movl $, (%esp)": 8,
                "movl (%ebp), %edx;addl %eax, (%edx);movl (%ebp), %eax;testb $, (%eax);je  <RtlSizeHeap+>": 1,
                "je  <RtlSizeHeap+>;movl -(%ebp), %edx;subl $, %edx;movl %edx, -(%ebp);testb $, %al": 1,
                "movl %eax, -(%ebp);movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);leal (%edi), %eax": 1,
                "jmp  <RtlSizeHeap+>;testb $, (%edi);je  <RtlSizeHeap+>;addl -(%ebp), %edi;testl %esi, %esi": 1,
                "movl (%ebx), %eax;cmpl -(%ebp), %eax;je  <RtlSizeHeap+>;movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl %edx, (%esp);movl %ebx, (%esp);movl $, (%esp)": 1,
                "testl %ecx, %ecx;je  <RtlSizeHeap+>;movl -(%ebp), %eax;cmpl (%eax), %eax;sete %al": 1,
                "movl -(%ebp), %eax;cmpl (%eax), %eax;sete %al;movl %ecx, %edx;shrl $, %edx": 1,
                "movl %ecx, %edx;andl $, %edx;btl %edx, %esi;jae  <RtlSizeHeap+>;testb %al, %al": 1,
                "movzwl %di, %edi;movl %edi, (%esp);movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movzwl %si, %edi;cmpl %ecx, %edi;je  <RtlSizeHeap+>;movl %edi, (%esp);movl %eax, (%esp)": 1,
                "jne - <RtlSizeHeap+>;addl $, -(%ebp);addl $, %ecx;movl -(%ebp), %edx;cmpl %edx, -(%ebp)": 1,
                "movl (%ebp), %eax;movl (%eax), %esi;cmpl %esi, %edi;je  <RtlSizeHeap+>;testb $, (%esi)": 1,
                "movl (%eax), %esi;cmpl %esi, %edi;je  <RtlSizeHeap+>;testb $, (%esi);je  <RtlSizeHeap+>": 1,
                "testb %al, %al;je  <RtlSizeHeap+>;movl (%esi), %esi;cmpl %esi, %edi;jne - <RtlSizeHeap+>": 1,
                "movl (%esi), %esi;cmpl %esi, %edi;jne - <RtlSizeHeap+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, %esi;leal -(%ebp), %edi;movl %ebx, -(%ebp);movl (%ebp), %ebx": 1,
                "movl %ebx, -(%ebp);movl (%ebp), %ebx;movl (%ebx,%esi,), %eax;testl %eax, %eax;je  <RtlSizeHeap+>": 1,
                "cmpl $, %esi;jne - <RtlSizeHeap+>;movl -(%ebp), %ebx;movl -(%ebp), %eax;cmpl %ebx, %eax": 1,
                "testl $, %eax;je  <RtlSizeHeap+>;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl $, (%esp);calll - <DbgPrint>;jmp  <RtlSizeHeap+>;movl $, %esi;testb $, %al": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp;movl $, %esi": 1,
                "movl %ebx, (%esp);calll - <RtlSizeHeap+>;subl $, %esp;movl %eax, %edi;movl %esi, %eax": 1,
                "calll - <DbgPrint>;movl $, %eax;leave;retl;pushl %ebp": 2,
                "testb %al, %al;je  <RtlZeroHeap+>;movl (%ebx), %eax;movl %eax, (%esp);calll - <PsEstablishWinCallouts+>": 2,
                "je  <RtlZeroHeap+>;movl (%ebp), %eax;subl $, %eax;movl %eax, (%esp);calll - <RtlFreeHeap+>": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp;movl %esi, %eax": 6,
                "testb %dl, %dl;je  <RtlZeroHeap+>;movl (%ebx), %eax;movl %eax, (%esp);calll - <PsEstablishWinCallouts+>": 2,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl %edx, (%esp)": 1,
                "subl $, %esp;movl $, %edi;movzbl -(%ebx), %eax;testb $, %al;jne  <RtlZeroHeap+>": 1,
                "movl $, %edi;movzbl -(%ebx), %eax;testb $, %al;jne  <RtlZeroHeap+>;movl $, (%esp)": 1,
                "testb $, %al;je  <RtlZeroHeap+>;leal -(%ebx), %eax;movl %eax, (%esp);calll - <RtlFreeHeap+>": 1,
                "movl %eax, (%esp);calll - <RtlFreeHeap+>;subl $, %esp;cmpl $, (%ebp);je  <RtlZeroHeap+>": 1,
                "subl $, %esp;movl %edx, %esi;movl %eax, %edi;movb %cl, -(%ebp);testb %cl, %cl": 1,
                "jmp  <RtlZeroHeap+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl $, %edx;movl $, %ecx;calll - <PsEstablishWinCallouts+>;movl , %eax;testl %eax, %eax": 1,
                "movl $, %ecx;calll - <PsEstablishWinCallouts+>;movl , %eax;testl %eax, %eax;je  <RtlAnsiCharToUnicodeChar+>": 1,
                "calll - <RtlMultiByteToUnicodeSize>;subl $, %esp;movl -(%ebp), %eax;addl $, %eax;movl -(%ebp), %ebx": 1,
                "leal (%eax,%eax), %edi;jmp  <RtlAnsiStringToUnicodeString+>;movl %esi, (%esp);calll - <RtlxAnsiStringToUnicodeSize>;subl $, %esp": 1,
                "movl %esi, (%esp);calll - <RtlxAnsiStringToUnicodeSize>;subl $, %esp;movl %eax, %edi;cmpl $, %edi": 1,
                "calll - <RtlxAnsiStringToUnicodeSize>;subl $, %esp;movl %eax, %edi;cmpl $, %edi;ja  <RtlAnsiStringToUnicodeString+>": 1,
                "movl %eax, %edi;cmpl $, %edi;ja  <RtlAnsiStringToUnicodeString+>;leal -(%edi), %eax;movw %ax, (%ebx)": 1,
                "movw %di, (%ebx);testl %eax, %eax;jne  <RtlAnsiStringToUnicodeString+>;jmp  <RtlAnsiStringToUnicodeString+>;cmpw (%ebx), %ax": 1,
                "cmpw (%ebx), %ax;jae  <RtlAnsiStringToUnicodeString+>;movzwl (%ebx), %eax;testb $, %al;jne  <RtlAnsiStringToUnicodeString+>": 1,
                "movzwl (%ebx), %eax;movzwl %ax, %edi;movzwl %si, %ecx;addl %ecx, %edi;movzwl (%ebx), %ecx": 1,
                "addl %ecx, %edi;movzwl (%ebx), %ecx;cmpl %ecx, %edi;jg  <RtlAppendStringToString+>;movzwl %si, %ecx": 1,
                "movl %eax, (%esp);calll  <memmove>;addw %si, (%ebx);movl $, %eax;jmp  <RtlAppendStringToString+>": 1,
                "movzwl (%ebx), %edx;movl $, %eax;testw %si, %si;je  <RtlAppendUnicodeStringToString+>;movzwl %si, %edi": 1,
                "cmpw (%ebx), %dx;jae  <RtlAppendUnicodeStringToString+>;shrw %si;movzwl %si, %esi;movw $, (%edi,%esi,)": 1,
                "addl $, %eax;movzbl (%eax), %edx;cmpb $, %dl;jg  <RtlCharToInteger+>;testb %dl, %dl": 1,
                "movzbl (%eax), %edx;cmpb $, %dl;jg  <RtlCharToInteger+>;testb %dl, %dl;jne - <RtlCharToInteger+>": 1,
                "addl $, %eax;movb $, %bl;jmp  <RtlCharToInteger+>;cmpb $, %dl;jne  <RtlCharToInteger+>": 1,
                "je  <RtlCharToInteger+>;cmpl $, %ebx;nop;je  <RtlCharToInteger+>;cmpl $, %ebx": 1,
                "je  <RtlCharToInteger+>;cmpl $, %ebx;jne  <RtlCharToInteger+>;cmpl $, (%ebp);je  <RtlCharToInteger+>": 1,
                "ja  <RtlCharToInteger+>;movsbl %dl, %edx;subl $, %edx;jmp  <RtlCharToInteger+>;leal -(%edi), %ebx": 1,
                "cmpl %edx, %esi;jle  <RtlCharToInteger+>;movl %edx, %ebx;shrl $, %ebx;testb %bl, %bl": 1,
                "movzbl (%ebp), %ecx;movl (%ebp), %ebx;movzwl (%ebx), %edx;movl (%ebp), %ebx;movzwl (%ebx), %eax": 2,
                "movzwl %ax, %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %ebx;movl (%ebp), %edx": 1,
                "addl $, %ebx;movl %eax, (%esp);calll - <RtlUpperChar>;subl $, %esp;movl %eax, %edi": 1,
                "movsbl (%ebx,%edx), %eax;movsbl (%esi,%edx), %ecx;subl %ecx, %eax;jne  <RtlCompareString+>;addl $, %edx": 1,
                "je  <RtlFreeAnsiString+>;movl $, (%esp);movl %eax, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp": 1,
                "calll - <PsEstablishWinCallouts+>;subl $, %esp;movl $, (%ebx);movl $, (%ebx);movl -(%ebp), %ebx": 2,
                "calll - <PsEstablishWinCallouts+>;subl $, %esp;leave;retl $;pushl %ebp": 2,
                "movw $, (%edx);movl %ebx, (%edx);movl -(%ebp), %ebx;movl -(%ebp), %edi;movl %ebp, %esp": 1,
                "je  <RtlInitAnsiStringEx+>;movl %ebx, %edi;movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al": 1,
                "movw %cx, (%edx);addl $, %ecx;movw %cx, (%edx);jmp  <RtlInitAnsiStringEx+>;movw $, (%edx)": 1,
                "testl %esi, %esi;je  <RtlInitUnicodeStringEx+>;movl %esi, (%esp);calll  <wcslen>;addl %eax, %eax": 1,
                "jmp  <RtlIntegerToChar+>;movl $, %esi;movb $, -(%ebp);leal -(%ebp), %ecx;subl $, %ecx": 1,
                "subl %ecx, %eax;cmpl (%ebp), %eax;ja  <RtlIntegerToChar+>;testl %edi, %edi;je  <RtlIntegerToChar+>": 1,
                "jne  <RtlIntegerToChar+>;movl %eax, (%esp);movl %ecx, (%esp);movl %edi, (%esp);calll  <memmove>": 1,
                "movl (%ebp), %ebx;testl %ebx, %ebx;je  <RtlIntegerToUnicode+>;cmpl $, %ebx;je  <RtlIntegerToUnicode+>": 1,
                "addl $, %edi;movw %di, (%ecx);jmp  <RtlIntegerToUnicode+>;addl $, %edx;movw %dx, (%ecx)": 1,
                "movl %ecx, %eax;subl %ebx, %eax;cmpl (%ebp), %eax;jae  <RtlIntegerToUnicode+>;cmpl %ebx, %ecx": 1,
                "calll - <RtlIntegerToChar>;subl $, %esp;testl %eax, %eax;js  <RtlIntegerToUnicodeString+>;leal -(%ebp), %edi": 1,
                "movl $, %eax;testb %bl, %bl;je  <RtlPrefixString+>;jmp  <RtlPrefixString+>;movsbl (%edi,%ebx), %eax": 1,
                "cmpl -(%ebp), %eax;jne - <RtlPrefixString+>;movl $, %esi;jmp  <RtlPrefixString+>;movl $, %esi": 1,
                "movl $, %esi;jmp  <RtlPrefixUnicodeString+>;movzwl (%edi,%eax,), %ecx;movzwl (%esi,%eax,), %edx;addl $, %eax": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %ecx": 2,
                "ja  <RtlUnicodeStringToInteger+>;addl $, %eax;subw $, %dx;je  <RtlUnicodeStringToInteger+>;cmpw $, (%eax)": 1,
                "testl %ecx, %ecx;jne  <RtlUnicodeStringToInteger+>;movb $, %cl;cmpw $, %dx;jbe  <RtlUnicodeStringToInteger+>": 1,
                "jmp  <RtlUnicodeStringToInteger+>;cmpw $, %bx;jne  <RtlUnicodeStringToInteger+>;addl $, %eax;subl $, %edx": 1,
                "movl $, %ebx;cmpb $, -(%ebp);je  <RtlUnicodeStringToInteger+>;negl %ebx;movl (%ebp), %eax": 1,
                "jmp  <RtlUnicodeStringToInteger+>;movzwl (%eax), %ebx;cmpw $, %bx;jne - <RtlUnicodeStringToInteger+>;jmp - <RtlUnicodeStringToInteger+>": 1,
                "cmpb $, -(%ebp);je  <RtlUnicodeStringToOemString+>;movl $, (%esp);movl %edi, (%esp);calll - <PsEstablishWinCallouts+>": 1,
                "testl %eax, %eax;jne  <RtlUnicodeStringToOemString+>;jmp  <RtlUnicodeStringToOemString+>;cmpw (%ebx), %ax;jb  <RtlUnicodeStringToOemString+>": 1,
                "jne  <RtlUnicodeStringToOemString+>;jmp  <RtlUnicodeStringToOemString+>;cmpw (%ebx), %ax;jb  <RtlUnicodeStringToOemString+>;jmp  <RtlUnicodeStringToOemString+>": 1,
                "subl $, %esp;movl $, (%ebx);jmp  <RtlUnicodeStringToOemString+>;movl (%ebx), %edx;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movb $, (%edx,%eax);jmp  <RtlUnicodeStringToOemString+>;movl $, %esi;jmp  <RtlUnicodeStringToOemString+>": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);movzwl %ax, %eax;movl %eax, (%esp);movl (%ebx), %eax": 3,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;cmpl $, %eax;ja  <RtlUnicodeStringToOemString+>": 1,
                "jle  <RtlUnicodeStringToOemString+>;movl $, %edi;movl (%ebp), %eax;movzwl (%eax), %ebx;cmpw $, %bx": 1,
                "orl $, %esi;jmp  <RtlUnicodeStringToOemString+>;cmpw $-, %bx;jne  <RtlUnicodeStringToOemString+>;orl $, %esi": 1,
                "shrl %eax;cmpl %edx, %eax;jge  <RtlUnicodeStringToOemString+>;orl $, %esi;testl $, -(%ebp)": 1,
                "cmpl %esi, %ebx;jne - <RtlUnicodeStringToOemString+>;movl -(%ebp), %esi;jmp  <RtlUnicodeStringToOemString+>;testb $, -(%ebp)": 1,
                "jne - <RtlUnicodeStringToOemString+>;movl -(%ebp), %esi;jmp  <RtlUnicodeStringToOemString+>;testb $, -(%ebp);je  <RtlUnicodeStringToOemString+>": 1,
                "testl %eax, %eax;je  <RtlUnicodeStringToOemString+>;orl $, %esi;jmp  <RtlUnicodeStringToOemString+>;addl $, %ebx": 1,
                "movl %esi, (%eax);movl $, %eax;testl $, %esi;jne  <RtlUnicodeStringToOemString+>;testl $, %esi": 1,
                "ja  <RtlGUIDFromString+>;leal -(%ebx), %ecx;jmp  <RtlGUIDFromString+>;leal -(%ebx), %ecx;cmpw $, %cx": 1,
                "jmp  <RtlGUIDFromString+>;leal -(%esi), %ebx;cmpw $, %bx;ja  <RtlGUIDFromString+>;leal -(%esi), %ebx": 1,
                "jmpl *-(,%eax,);movb %cl, (%edi);jmp  <RtlGUIDFromString+>;movb %cl, (%edi);leal (%esi), %esi": 1,
                "jle - <RtlGUIDFromString+>;movl $, %eax;jmp  <RtlGUIDFromString+>;movl $, %eax;jmp  <RtlGUIDFromString+>": 1,
                "testw %dx, %dx;je  <RtlGUIDFromString+>;movzwl %dx, %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "testl %edx, %edx;je  <RtlHashUnicodeString+>;testl %ecx, %ecx;je  <RtlHashUnicodeString+>;movl $, %eax": 1,
                "addl %esi, %ebx;movl %ebx, (%edx);addl $, %eax;cmpl %eax, -(%ebp);jne - <RtlHashUnicodeString+>": 1,
                "movl $, %edx;movl $, %ecx;calll - <PsEstablishWinCallouts+>;cmpb $, -;je  <RtlUnicodeStringToCountedOemString+>": 1,
                "jmp  <RtlUnicodeStringToCountedOemString+>;movzwl (%esi), %eax;addl $, %eax;shrl %eax;subl $, %eax": 1,
                "subl $, %eax;testl %eax, %eax;jne  <RtlUnicodeStringToCountedOemString+>;movl $, (%ebx);movl $, (%ebx)": 1,
                "jmp  <RtlUnicodeStringToCountedOemString+>;cmpl $, %eax;ja  <RtlUnicodeStringToCountedOemString+>;movl %eax, %edi;movw %ax, (%ebx)": 1,
                "movw %di, (%ebx);testl %eax, %eax;jne  <RtlUnicodeStringToCountedOemString+>;jmp  <RtlUnicodeStringToCountedOemString+>;cmpw (%ebx), %ax": 1,
                "js  <RtlUnicodeStringToCountedOemString+>;movl %ebx, (%esp);movl %esi, (%esp);calll - <RtlFreeUnicodeString+>;subl $, %esp": 1,
                "cmpl $, (%ebp);jne  <RtlUnicodeStringToCountedOemString+>;jmp  <RtlUnicodeStringToCountedOemString+>;movl $, (%ebp);movb $, -(%ebp)": 1,
                "movl %eax, %ebx;movl %edx, %esi;cmpb $, -(%ebp);jg  <RtlUnicodeStringToCountedOemString+>;movzbl -(%ebp), %eax": 1,
                "movl %edx, %esi;cmpb $, -(%ebp);jg  <RtlUnicodeStringToCountedOemString+>;movzbl -(%ebp), %eax;addl $, %eax": 1,
                "cmpl (%ebp), %eax;ja  <RtlUnicodeStringToCountedOemString+>;adcl $, %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "subl $, %esp;testl %eax, %eax;js  <RtlIntToUnicodeString+>;leal -(%ebp), %edi;movl %edi, -(%ebp)": 1,
                "movl -(%ebp), %edx;movw %ax, (%edx);addl $, %ebx;cmpl %ebx, -(%ebp);ja - <RtlUpcaseUnicodeString+>": 1,
                "ja - <RtlUpcaseUnicodeString+>;movzwl (%esi), %eax;movw %ax, (%edi);movl $, %eax;jmp  <RtlUpcaseUnicodeString+>": 1,
                "jmp  <RtlUpcaseUnicodeString+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl $, (%ebx);jmp  <RtlUpcaseUnicodeStringToCountedOemString+>;cmpl $, %eax;ja  <RtlUpcaseUnicodeStringToCountedOemString+>;movl %eax, %edi": 1,
                "movl $, %edi;movl %edi, %eax;shrl $, %eax;testb %al, %al;je  <RtlUpcaseUnicodeStringToCountedOemString+>": 1,
                "subl $, %esp;movl %eax, %edi;jmp  <RtlUpcaseUnicodeStringToOemString+>;movzwl (%esi), %edi;addl $, %edi": 1,
                "leal -(%edi), %eax;movw %ax, (%ebx);cmpb $, -(%ebp);je  <RtlUpcaseUnicodeStringToOemString+>;movl $, (%esp)": 1,
                "movl (%ebx), %edx;movl -(%ebp), %eax;movb $, (%edx,%eax);jmp  <RtlUpcaseUnicodeStringToOemString+>;movl $, %edi": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <RtlUpcaseUnicodeStringToOemString+>;subl $, %esp;leave": 1,
                "calll - <RtlMultiByteToUnicodeSize>;subl $, %esp;movl -(%ebp), %eax;addl $, %eax;leave": 1,
                "movl $, %edx;movl $, %ecx;calll - <PsEstablishWinCallouts+>;cmpb $, -;je  <RtlOemStringToCountedUnicodeString+>": 1,
                "jne  <RtlOemStringToCountedUnicodeString+>;movl $, (%ebx);movl $, (%ebx);movl $, %esi;jmp  <RtlOemStringToCountedUnicodeString+>": 1,
                "movl $, %esi;jmp  <RtlOemStringToCountedUnicodeString+>;cmpl $, %eax;ja  <RtlOemStringToCountedUnicodeString+>;movl %eax, %edi": 1,
                "je  <RtlOemStringToCountedUnicodeString+>;movl $, (%esp);movl %eax, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp": 1,
                "subl $, %esp;movl %eax, %esi;testl %eax, %eax;jns  <RtlOemStringToCountedUnicodeString+>;movl $, (%esp)": 1,
                "calll - <PsEstablishWinCallouts+>;subl $, %esp;movl $, (%ebx);jmp  <RtlOemStringToCountedUnicodeString+>;movl $, %esi": 1,
                "jmp  <RtlOemStringToCountedUnicodeString+>;movl $, %esi;jmp  <RtlOemStringToCountedUnicodeString+>;movl $, %esi;jmp  <RtlOemStringToCountedUnicodeString+>": 3,
                "movl %edx, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);andl $, %eax;movl %eax, (%esp)": 1,
                "movl %esi, (%esp);calll - <RtlxOemStringToUnicodeSize>;subl $, %esp;movl %eax, %edi;jmp  <RtlOemStringToUnicodeString+>": 1,
                "testl %eax, %eax;jne  <RtlOemStringToUnicodeString+>;jmp  <RtlOemStringToUnicodeString+>;cmpw (%ebx), %ax;jb  <RtlOemStringToUnicodeString+>": 1,
                "movl %eax, %esi;testl %eax, %eax;jns  <RtlOemStringToUnicodeString+>;movl $, (%esp);movl (%ebx), %eax": 1,
                "jmp  <RtlOemStringToUnicodeString+>;movl -(%ebp), %edx;shrl %edx;movl (%ebx), %eax;movw $, (%eax,%edx,)": 1,
                "calll - <RtlOemToUnicodeN>;subl $, %esp;movl %eax, %esi;jmp - <RtlOemStringToUnicodeString+>;movl %esi, %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp;movl %eax, (%esi)": 1,
                "movzbl (%ebx), %edx;movl %edx, (%esp);movzbl (%ebx), %edx;movl %edx, (%esp);movzbl (%ebx), %edx": 6,
                "movzbl (%ebx), %edx;movl %edx, (%esp);movzwl (%ebx), %edx;movl %edx, (%esp);movzwl (%ebx), %edx": 1,
                "movl $, (%esp);movl %eax, (%esp);calll  <swprintf>;movl $, %eax;jmp  <RtlStringFromGUID+>": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <RtlUnicodeToMultiByteSize>": 1,
                "movzwl %ax, %eax;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll - <RtlUpcaseUnicodeToMultiByteN>": 1,
                "calll  <RtlAssert>;subl $, %esp;cmpb $, -;jne  <RtlUnicodeStringToAnsiString+>;movzwl (%esi), %edi": 1,
                "movb $, (%edx,%eax);movl %edi, %esi;jmp  <RtlUnicodeStringToAnsiString+>;movl $, %esi;jmp  <RtlUnicodeStringToAnsiString+>": 1,
                "movl $, %esi;jmp  <RtlUnicodeStringToAnsiString+>;movl $, %edi;movzwl (%esi), %eax;movl %eax, (%esp)": 1,
                "jne  <RtlCompareUnicodeString+>;movl $, %edx;movl -(%ebp), %edi;cmpl $, -(%ebp);jne  <RtlCompareUnicodeString+>": 1,
                "jne  <RtlCompareUnicodeString+>;jmp  <RtlCompareUnicodeString+>;cmpl $, -(%ebp);je  <RtlCompareUnicodeString+>;movzwl (%ebx), %eax": 1,
                "jmp  <RtlCompareUnicodeString+>;movzwl (%ebx,%edx,), %eax;movzwl (%esi,%edx,), %ecx;subl %ecx, %eax;jne  <RtlCompareUnicodeString+>": 1,
                "jne - <RtlCompareUnicodeString+>;movl (%ebp), %ebx;movzwl (%ebx), %eax;movl (%ebp), %ebx;movzwl (%ebx), %edx": 1,
                "cmpw %ax, (%ebx);jae  <RtlCopyUnicodeString+>;shrl %esi;movl (%ebx), %eax;movw $, (%eax,%esi,)": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp;movl %eax, %edx": 1,
                "movzwl (%eax,%ebx,), %eax;cmpw $, %ax;ja  <RtlDowncaseUnicodeString+>;movl (%edi), %edx;movw %ax, (%edx,%ebx,)": 1,
                "movw %ax, (%edx,%ebx,);jmp  <RtlDowncaseUnicodeString+>;cmpw $, %ax;ja  <RtlDowncaseUnicodeString+>;movl (%edi), %ecx": 1,
                "movl (%edi), %ecx;addl $, %eax;movw %ax, (%ecx,%edx);jmp  <RtlDowncaseUnicodeString+>;addl (%edi), %edx": 1,
                "movzwl %ax, %eax;movl %eax, (%esp);calll - <RtlCustomCPToUnicodeN+>;subl $, %esp;movl -(%ebp), %edx": 1,
                "jmp  <RtlDowncaseUnicodeString+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "calll  <memmove>;movl %esi, %eax;addw (%ebx), %ax;movw %ax, (%ebx);cmpw (%ebx), %ax": 1,
                "movl (%ebp), %edx;movl (%ebp), %ecx;movzwl (%edx), %ebx;movzwl (%ecx), %eax;cmpw %bx, %ax": 1,
                "calll - <PsEstablishWinCallouts+>;testl %esi, %esi;je  <RtlUpperString+>;testl %ebx, %ebx;je  <RtlUpperString+>": 1,
                "movl $, (%esp);movl %edi, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp;movl %eax, (%esi)": 1,
                "jmp  <RtlUpperString+>;testl %edx, %edx;jne - <RtlUpperString+>;jmp - <RtlUpperString+>;leave": 1,
                "testl %edx, %edx;jne - <RtlUpperString+>;jmp - <RtlUpperString+>;leave;retl $": 1,
                "jne - <RtlUpperString+>;jmp - <RtlUpperString+>;leave;retl $;pushl %ebp": 1,
                "cmpb -(%ebp), %al;jne  <RtlUpperString+>;addl %ebx, %ebx;movl (%ebp), %edx;movw %bx, (%edx)": 1,
                "addl %ebx, %ebx;movl (%ebp), %edx;movw %bx, (%edx);movl $, %eax;jmp  <RtlUpperString+>": 1,
                "addl $, %ebx;cmpw %bx, -(%ebp);ja - <RtlUpperString+>;movl $, %eax;jmp  <RtlUpperString+>": 1,
                "jb - <RtlUpperString+>;jmp  <RtlUpperString+>;movl %esi, %edi;testl %edi, %edi;je  <RtlUpperString+>": 1,
                "je  <RtlUpperString+>;movl $, -(%ebp);movl %edi, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;movw %ax, -(%ebp);movw $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <PsEstablishWinCallouts+>;movl (%ebp), %eax;testl %eax, (%ebp);setne %al;popl %ebp": 1,
                "je  <RtlMapGenericMask+>;orl (%esi), %eax;movl %eax, (%ebx);movl (%ebx), %eax;testl $, %eax": 2,
                "jne  <RtlFindLeastSignificantBit+>;bsfl %ecx, %eax;addl $, %eax;cmpl $, %ecx;sbbl %edx, %edx": 1,
                "andl %eax, (%ebx);jmp  <RtlClearBits+>;notl %eax;andl %eax, (%ebx);addl $, %ebx": 1,
                "andl %edx, (%ebx,%eax,);leal -(%ebp), %esp;popl %ebx;popl %esi;popl %ebp": 1,
                "movl $, %edx;movl %esi, %ecx;shll %cl, %edx;movl %edx, %esi;notl %esi": 1,
                "movl %edx, %ecx;andl $, %ecx;subl %edx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %eax": 2,
                "addl $, %esi;cmpl %esi, %eax;jbe  <RtlAreBitsClear+>;testl %edi, %edi;jne  <RtlAreBitsClear+>": 1,
                "testl %edi, %edi;jne  <RtlAreBitsClear+>;movl (%esi), %edi;addl $, %esi;cmpl %esi, %eax": 1,
                "leal (%esi,%eax,), %eax;movl (%esi), %edi;notl %edi;shrl %cl, %edi;shll %cl, %edi": 1,
                "jae  <RtlNumberOfSetBits+>;movl $, %eax;movzbl (%edx), %ecx;movzbl -(%ecx), %ecx;addl %ecx, %eax": 1,
                "pushl %ebx;subl $, %esp;movl $, %esi;cmpl $, (%ebp);je  <RtlFindClearBits+>": 1,
                "cmpl $, (%ebp);je  <RtlFindClearBits+>;movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "andl %eax, (%ebp);movl (%ebp), %esi;andl $-, %esi;testl %edi, %edi;je  <RtlFindClearBits+>": 1,
                "movl %edi, -(%ebp);cmpl %edi, -(%ebp);jbe  <RtlFindClearBits+>;movl (%ebp), %eax;movl (%eax), %eax": 1,
                "cmpl %edi, %eax;jbe  <RtlFindClearBits+>;movl %edi, %esi;leal (%ecx,%esi), %eax;shrl $, %eax": 1,
                "jb  <RtlFindSetBits+>;cmpl %eax, (%ebp);sbbl %eax, %eax;andl %eax, (%ebp);movl (%ebp), %esi": 1,
                "andl $-, %esi;testl %edi, %edi;je  <RtlFindSetBits+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "shll %cl, %edi;addl $, %edx;cmpl %edx, %eax;jbe  <RtlFindSetBits+>;testl %edi, %edi": 1,
                "cmpl %edx, %eax;jbe  <RtlFindSetBits+>;movl (%edx), %edi;addl $, %edx;xorl $-, %edi": 1,
                "movl %eax, %esi;cmpl -(%ebp), %eax;jbe  <RtlFindSetBits+>;movl -(%ebp), %esi;cmpl %esi, (%ebp)": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll - <RtlClearBits>;subl $, %esp;movl %ebx, %eax": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %ebx;addl %eax, %ebx;movl (%ebp), %edi;movl %ebx, (%edi)": 1,
                "movl (%esi), %edi;shrl %cl, %edi;shll %cl, %edi;addl $, %esi;testl %edi, %edi": 1,
                "ja  <RtlFindNextForwardRunClear+>;movl (%ebp), %edi;movl %edx, (%edi);movl $, %eax;jmp  <RtlFindNextForwardRunClear+>": 1,
                "addl %ecx, %eax;addl %eax, %edi;movl %edi, -(%ebp);cmpl %ebx, %edi;jbe  <RtlFindNextForwardRunClear+>": 1,
                "movl %ecx, %edx;shrl $, %edx;leal (%eax,%edx,), %edx;notl %ecx;andl $, %ecx": 1,
                "nop;jmp  <RtlFindLastBackwardRunClear+>;movl (%ebp), %eax;subl (%eax), %ebx;leal (%ebx,%esi), %eax": 1,
                "leal (%ebx,%esi), %eax;jmp  <RtlFindLastBackwardRunClear+>;movl $, %eax;jmp  <RtlFindLastBackwardRunClear+>;movl $, %eax": 1,
                "jmp  <RtlFindLastBackwardRunClear+>;movl $, %eax;jmp  <RtlFindLastBackwardRunClear+>;movl $, %eax;jmp  <RtlFindLastBackwardRunClear+>": 1,
                "shll $, %eax;leal (%edi,%eax), %eax;movl (%ebp), %edx;movl %eax, (%edx);jmp - <RtlFindLastBackwardRunClear+>": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %esi;movl (%ebp), %eax;cmpl %eax, -(%ebp);jb  <RtlFindClearRuns+>": 1,
                "movl $, %edx;cmpl $, (%ebp);jne  <RtlFindClearRuns+>;movl $, -(%ebp);jmp  <RtlFindClearRuns+>": 1,
                "jne  <RtlFindClearRuns+>;movl $, -(%ebp);jmp  <RtlFindClearRuns+>;cmpl (%esi,%ebx,), %eax;jae  <RtlFindClearRuns+>": 1,
                "cmpl (%ebp), %edx;jne - <RtlFindClearRuns+>;movl (%ebp), %edx;movl %edx, -(%ebp);addl %eax, -(%ebp)": 1,
                "movl %eax, %esi;addl %eax, %ebx;jmp - <RtlFindLongestRunClear+>;movl %esi, %eax;leal -(%ebp), %esp": 2,
                "testl %eax, %eax;je  <RtlAssert+>;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl %ecx, %eax;movb $, (%ecx);movl $, (%edx)": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %edx;movl $, -(%ebp);leal -(%ebp), %edi": 1,
                "movl (%edx), %eax;movl %eax, (%esp);movl $, (%esp);calll - <DbgPrint>;leal -(%ebp), %esi": 1,
                "calll - <DbgPrint>;jmp  <RtlAssert+>;movl -(%ebp), %eax;movl (%eax), %esi;movl (%esi), %eax": 1,
                "leal -(%ebp), %ecx;leal -(%ebp), %edx;calll - <RtlAssert+>;movl -(%ebp), %eax;leal -(%ebp), %edx": 1,
                "cmpl $, %eax;je  <RtlAssert+>;testl %eax, %eax;je  <RtlAssert+>;subl $, %ebx": 1,
                "jmp - <RtlAssert+>;movl -(%ebp), %eax;movl %eax, %fs:;addl $, %esp;popl %ebx": 1,
                "movl %eax, %fs:;addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "movl %esi, %edx;movl $, %ebx;movl $, %ecx;testl %edi, %edi;jne  <RtlCaptureStackBackTrace+>": 1,
                "addl %edx, %ecx;addl $, %ebx;cmpl %edi, %ebx;jne - <RtlCaptureStackBackTrace+>;cmpl $, (%ebp)": 1,
                "subl $, %esp;movl (%ebp), %edx;movl (%ebp), %eax;movl (%ebp), %ebx;leal -(%edx), %ecx": 1,
                "jmp  <RtlCaptureStackBackTrace+>;cmpw (%ebx), %si;ja  <RtlCaptureStackBackTrace+>;movzwl %si, %eax;movl %eax, (%esp)": 1,
                "cmpl (%ebp), %ebx;je  <RtlCaptureStackBackTrace+>;testl %eax, %eax;je  <RtlCaptureStackBackTrace+>;movl %eax, (%esp)": 1,
                "movl %ebx, (%esp);calll  <memmove>;movl $, %eax;jmp  <RtlCaptureStackBackTrace+>;leal (%eax), %esi": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %edx;movl $, (%edx)": 1,
                "cmpl (%edi), %edx;jne  <RtlCaptureStackBackTrace+>;movl (%edi), %ecx;testl %ecx, %ecx;jne  <RtlCaptureStackBackTrace+>": 1,
                "jne - <RtlCaptureStackBackTrace+>;jmp  <RtlCaptureStackBackTrace+>;movl -(%ebp), %eax;cmpw $, (%eax);jne - <RtlCaptureStackBackTrace+>": 1,
                "jae  <RtlCaptureStackBackTrace+>;subl %ebx, %esi;movl -(%ebp), %edi;addl %esi, %edi;movl (%ebp), %eax": 1,
                "movl %esi, -(%ebp);jmp  <RtlCaptureStackBackTrace+>;movl (%edi), %eax;movl %eax, -(%ebp);movl %ebx, -(%ebp)": 1,
                "testb $, (%edi);jne  <RtlCaptureStackBackTrace+>;cmpl $, %ecx;jne  <RtlCaptureStackBackTrace+>;movl -(%ebp), %ecx": 1,
                "movl (%edi), %ecx;movl %ecx, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);movl %eax, (%esp)": 1,
                "ja - <RtlCaptureStackBackTrace+>;movl %eax, %esi;jmp  <RtlCaptureStackBackTrace+>;cmpl $, %esi;jbe  <RtlCaptureStackBackTrace+>": 1,
                "movl %eax, %esi;jmp  <RtlCaptureStackBackTrace+>;cmpl $, %esi;jbe  <RtlCaptureStackBackTrace+>;cmpl $, %ecx": 1,
                "jmp  <RtlCaptureStackBackTrace+>;cmpl $, %esi;jbe  <RtlCaptureStackBackTrace+>;cmpl $, %ecx;jne  <RtlCaptureStackBackTrace+>": 1,
                "movw $, -(%edx,%eax,);jmp  <RtlCaptureStackBackTrace+>;movw $, -(%ebp);movl -(%ebp), %ecx;movw $, (%ecx)": 1,
                "movw $, (%ecx);leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <VerSetConditionMask+>": 1,
                "calll  <VerSetConditionMask+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax;js  <RtlCaptureStackBackTrace+>": 1,
                "movl %eax, %esi;testl %eax, %eax;js  <RtlCaptureStackBackTrace+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, -(%ebp);movzwl -(%ebp), %esi;addl $, %esi;movl $, %ecx": 1,
                "movl (%edi), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp)": 1,
                "movl %ecx, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll *(%edi);subl $, %esp": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);calll *(%edi);subl $, %esp;movl %eax, %esi": 1,
                "testb $, (%edi);je - <RtlCaptureStackBackTrace+>;jmp - <RtlCaptureStackBackTrace+>;andl $, %esi;movw %si, -(%ebp)": 1,
                "calll - <ZwClose>;subl $, %esp;testl %ebx, %ebx;js  <RtlFormatCurrentUserKeyPath+>;movl $, (%esp)": 1,
                "movzwl -(%ebp), %ebx;addl $, %ebx;movl %ebx, -(%ebp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp;movw $, (%esi)": 1,
                "movl %eax, (%esp);calll - <RtlFreeUnicodeString>;subl $, %esp;movl $, %ebx;jmp  <RtlFormatCurrentUserKeyPath+>": 1,
                "calll - <RtlAppendUnicodeToString>;subl $, %esp;leal -(%ebp), %ebx;movl %ebx, (%esp);movl %esi, (%esp)": 1,
                "jmp  <RtlFormatCurrentUserKeyPath+>;testl %eax, %eax;jns  <RtlFormatCurrentUserKeyPath+>;andl $, %eax;cmpl $, %eax": 1,
                "testl %eax, %eax;jns  <RtlFormatCurrentUserKeyPath+>;andl $, %eax;cmpl $, %eax;ja  <RtlFormatCurrentUserKeyPath+>": 1,
                "leal -(%ebp), %edi;movl %edi, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <RtlAppendUnicodeStringToString>": 1,
                "movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <RtlAppendUnicodeToString>;subl $, %esp": 3,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <ZwCreateKey>;subl $, %esp;movl %eax, %ebx": 1,
                "jmp  <RtlFormatCurrentUserKeyPath+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl (%ebp), %edx": 1,
                "jne  <RtlWriteRegistryValue+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>;subl $, %esp": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwDeleteValueKey>;subl $, %esp;movl %eax, %ebx": 1,
                "js  <RtlCheckRegistryKey+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>;subl $, %esp": 1,
                "movl %eax, (%esp);calll - <ZwCreateKey>;subl $, %esp;leave;retl $": 1,
                "movl %fs:, %eax;movl %ebx, (%esp);movl $, (%esp);movl (%eax), %eax;movl (%eax), %eax": 2,
                "je  <RtlCheckRegistryKey+>;leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl %edi, (%esp)": 1,
                "subl $, %esp;movl %eax, %ebx;jmp  <RtlCheckRegistryKey+>;movl $, %ebx;movl %fs:, %eax": 1,
                "calll - <ZwOpenKey>;subl $, %esp;leave;retl $;pushl %ebp": 1,
                "movl (%ebp), %edi;movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 1,
                "js  <RtlQueryRegistryValues+>;cmpl $, (%edi);je  <RtlQueryRegistryValues+>;movl $, %esi;movl $, -(%ebp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <RtlInitUnicodeString>;subl $, %esp;movl $, %esi": 1,
                "movl %eax, -(%ebp);cmpl $, -(%ebp);jne  <RtlQueryRegistryValues+>;movl -(%ebp), %eax;addl $, %eax": 1,
                "subl $, %edi;jmp - <RtlQueryRegistryValues+>;cmpl $, (%ebx);jne  <RtlQueryRegistryValues+>;movl -(%ebp), %eax": 1,
                "subl $, %esp;jmp  <RtlQueryRegistryValues+>;testb $, %al;je - <RtlQueryRegistryValues+>;movl (%edi), %eax": 1,
                "jmp  <RtlQueryRegistryValues+>;addl $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl %edi, (%esp)": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);movl %edi, (%esp);calll - <RtlCaptureStackBackTrace+>;subl $, %esp": 1,
                "movl %eax, -(%ebp);cmpl $, %eax;sbbl $, %esi;addl $, %esi;movl $, -(%ebp)": 1,
                "jne - <RtlQueryRegistryValues+>;movl -(%ebp), %eax;testl %eax, %eax;je  <RtlQueryRegistryValues+>;cmpl $, -(%ebp)": 1,
                "movl (%esp), %edi;movl (%esp), %ecx;movb (%esp), %al;movb %al, %ah;shll $, %eax": 1,
                "movb %al, %ah;cld;movl %ecx, %edx;andl $, %edx;shrl $, %ecx": 1,
                "andl $, %ecx;testl %ecx, %ecx;je  <RtlMoveMemory+>;rep  movsb (%esi), %es:(%edi);movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl $, (%eax);movl (%ebp), %eax;movl $, (%eax);movl $, %eax": 2,
                "mull %edx;addl %ecx, %edx;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "movl (%ebp), %eax;mull (%ebp);popl %ebp;retl $;pushl %ebp": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %edx;movl (%ebp), %eax;movl %eax, %ebx": 1,
                "je  <RtlExtendedLargeIntegerDivide+>;movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl %esi, (%esp)": 1,
                "xorl %edx, %edx;addl %eax, %ecx;adcl %edx, %ebx;imull %esi, %edi;movl -(%ebp), %eax": 1,
                "negl %edx;addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "andl $, %edx;sarl %cl, %eax;popl %ebx;popl %ebp;retl $": 1,
                "adcl $, %edx;negl %edx;popl %ebp;retl $;pushl %ebp": 1,
                "shrb $, %al;addl %eax, %ecx;andl $, %ecx;subl %eax, %ecx;movl (%ebp), %eax": 2,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %ebx;movl $, %edx": 1,
                "movl $, %edx;movl $, %ecx;calll - <PsEstablishWinCallouts+>;movl $, %eax;movl (%ebx), %edx": 1,
                "movl $, %ecx;calll - <PsEstablishWinCallouts+>;movl $, %eax;movl (%ebx), %edx;cmpl %edx, (%esi)": 1,
                "cmpl %eax, (%esi);sete %al;movzbl %al, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movzwl (%esi), %eax;movzwl %ax, %ebx;movzwl -(%ebp), %edx;addl %edx, %ebx;cmpl $, %ebx": 1,
                "movzwl %dx, %edx;movl -(%ebp), %eax;leal (%eax,%edx,), %eax;movl %eax, (%esp);calll  <memmove>": 1,
                "subl $, %esp;leal (%eax), %ebx;movl $, (%esp);movl %ebx, (%esp);calll - <PsEstablishWinCallouts+>": 1,
                "calll - <PsEstablishWinCallouts+>;subl $, %esp;movl %eax, %edi;testl %eax, %eax;je  <RtlCreateSystemVolumeInformationFolder+>": 1,
                "calll - <RtlAddAccessAllowedAceEx>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;js  <RtlCreateSystemVolumeInformationFolder+>": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;je  <RtlCreateSystemVolumeInformationFolder+>;movl %eax, (%esp);calll - <RtlCopySid+>": 4,
                "movl %eax, (%esp);calll - <RtlCopySid+>;subl $, %esp;testl %edi, %edi;je  <RtlCreateSystemVolumeInformationFolder+>": 1,
                "je  <RtlCreateSystemVolumeInformationFolder+>;movl $, (%esp);movl %edi, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp": 1,
                "calll - <ZwOpenFile>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax;js  <RtlCreateSystemVolumeInformationFolder+>": 1,
                "testl %eax, %eax;js  <RtlCreateSystemVolumeInformationFolder+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwSetSecurityObject>": 1,
                "jne  <RtlCreateSystemVolumeInformationFolder+>;movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <PsEstablishWinCallouts+>": 2,
                "calll - <ZwQuerySecurityObject>;subl $, %esp;movl %eax, %ebx;movl $, -(%ebp);testl %eax, %eax": 1,
                "subl $, %esp;movl %eax, %ebx;movl $, -(%ebp);testl %eax, %eax;js  <RtlCreateSystemVolumeInformationFolder+>": 8,
                "calll - <RtlEqualSid>;subl $, %esp;testb %al, %al;je  <RtlCreateSystemVolumeInformationFolder+>;movl -(%ebp), %eax": 1,
                "subl $, %esp;testb %al, %al;je  <RtlCreateSystemVolumeInformationFolder+>;movl -(%ebp), %eax;movzbl (%eax), %edx": 1,
                "movzbl (%eax), %edx;movl %edx, %ecx;andl $, %ecx;cmpb $, %cl;je  <RtlCreateSystemVolumeInformationFolder+>": 1,
                "movl %eax, (%esp);calll - <RtlSetOwnerSecurityDescriptor>;subl $, %esp;movl %eax, %ebx;movl $, -(%ebp)": 1,
                "movl %edx, (%esp);calll - <ZwSetSecurityObject>;subl $, %esp;movl %eax, %ebx;jmp  <RtlCreateSystemVolumeInformationFolder+>": 1,
                "subl $, %esp;movl $, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll - <PsEstablishWinCallouts+>": 1,
                "js  <RtlLockBootStatusData+>;movl -(%ebp), %edx;movl %edx, (%esi);leal -(%ebp), %esp;popl %ebx": 1,
                "movl %eax, (%ebx);testb %dl, %dl;jne  <RtlUnlockBootStatusData+>;testb %cl, %cl;je  <RtlUnlockBootStatusData+>": 1,
                "movl %esp, %ebp;movl (%ebp), %edx;movl (%edx), %eax;testl %eax, %eax;jne  <RtlRealPredecessor+>": 1,
                "jmp  <RtlRealPredecessor+>;movl %edx, %eax;movl (%eax), %edx;testl %edx, %edx;jne - <RtlRealPredecessor+>": 1,
                "movl (%eax), %edx;testl %edx, %edx;jne - <RtlRealPredecessor+>;jmp  <RtlRealPredecessor+>;movl %ecx, %edx": 1,
                "jmp  <RtlRealSuccessor+>;movl %ecx, %edx;movl (%edx), %ecx;cmpl %edx, (%ecx);je - <RtlRealSuccessor+>": 1,
                "movl %esp, %ebp;pushl %ebx;movl (%ebp), %eax;jmp  <RtlSplay+>;movl (%edx), %ecx": 1,
                "movl (%edx), %ebx;testl %ebx, %ebx;je  <RtlSplay+>;movl %edx, (%ebx);movl (%ecx), %ebx": 4,
                "jmp  <RtlSplay+>;movl %eax, (%ebx);movl %edx, (%eax);movl %eax, (%ecx);movl %ecx, (%eax)": 1,
                "movzbl -(%ebp), %ecx;movzbl -(%ebp), %edx;movl %esi, %eax;calll - <RtlUnlockBootStatusData+>;cmpb $, -(%ebp)": 1,
                "movl %esi, (%esi);movl (%ebx), %eax;testl %eax, %eax;jne  <RtlDelete+>;movl (%ebx), %eax": 1,
                "testl %eax, %eax;jne  <RtlDelete+>;movl (%ebx), %edx;cmpl %edx, %ebx;je  <RtlDelete+>": 1,
                "nop;jmp  <RtlDelete+>;movl %eax, (%edx);movl (%ebx), %edx;movl %edx, (%eax)": 1,
                "calll - <RtlSplay>;subl $, %esp;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl (%eax), %edx;testl %edx, %edx;jne - <RtlSubtreeSuccessor+>;popl %ebp;retl $": 1,
                "jne  <RtlInsertElementGenericTableFull+>;cmpl $, (%ebp);je  <RtlInsertElementGenericTableFull+>;movl (%ebp), %eax;movb $, (%eax)": 1,
                "movl %ebx, (%eax);movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;cmpl $, (%eax);sete %al;popl %ebp": 2,
                "calll *(%esi);subl $, %esp;testl %eax, %eax;jne  <RtlIsGenericTableEmpty+>;movl (%ebx), %eax": 1,
                "jne - <RtlIsGenericTableEmpty+>;movl (%ebp), %eax;movl %ebx, (%eax);movl $, %edx;jmp  <RtlIsGenericTableEmpty+>": 2,
                "calll - <RtlIsGenericTableEmpty+>;subl $, %esp;movl %eax, %edx;movl (%ebp), %eax;movl %edx, (%eax)": 1,
                "calll - <RtlLookupElementGenericTableFull>;subl $, %esp;leave;retl $;pushl %ebp": 1,
                "movl (%eax), %eax;movl %eax, (%edx);movl %edx, (%eax);subl $, (%ebx);movl $, (%ebx)": 1,
                "subl $, (%ebx);movl $, (%ebx);leal (%ebx), %eax;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "movl $, (%ebx);leal (%ebx), %eax;movl %eax, (%ebx);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %esi;movzbl (%ebp), %ebx;movl %esi, (%esp);calll - <RtlIsGenericTableEmpty>;subl $, %esp": 1,
                "jne  <RtlEnumerateGenericTable+>;testb %bl, %bl;je  <RtlEnumerateGenericTable+>;movl (%esi), %ebx;jmp  <RtlEnumerateGenericTable+>": 1,
                "je  <RtlEnumerateGenericTable+>;movl (%esi), %ebx;jmp  <RtlEnumerateGenericTable+>;movl %edx, %ebx;movl (%ebx), %edx": 1,
                "jmp  <RtlEnumerateGenericTable+>;movl %edx, %ebx;movl (%ebx), %edx;testl %edx, %edx;jne - <RtlEnumerateGenericTable+>": 1,
                "testl %eax, %eax;jne  <RtlEnumerateGenericTableWithoutSplaying+>;movl (%esi), %eax;jmp  <RtlEnumerateGenericTableWithoutSplaying+>;movl %edx, %eax": 1,
                "calll - <RtlRealSuccessor>;subl $, %esp;testl %eax, %eax;je  <RtlEnumerateGenericTableWithoutSplaying+>;movl %eax, (%ebx)": 1,
                "pushl %esi;pushl %ebx;movl (%ebp), %esi;movl (%ebp), %ebx;leal (%ebx), %edx": 1,
                "movl (%esi), %eax;movl (%esi), %ecx;movl (%esi), %edi;cmpl %edi, %edx;ja  <RtlGetElementGenericTable+>": 1,
                "movl (%esi), %ecx;movl (%esi), %edi;cmpl %edi, %edx;ja  <RtlGetElementGenericTable+>;cmpl $-, %ebx": 1,
                "je  <RtlGetElementGenericTable+>;movl (%eax), %eax;subl $, %ecx;jne - <RtlGetElementGenericTable+>;jmp  <RtlGetElementGenericTable+>": 1,
                "movl %edx, (%esi);addl $, %eax;jmp  <RtlGetElementGenericTable+>;movl $, %eax;popl %ebx": 1,
                "movb $, (%edx);leal (%edx), %edi;movb $, %bl;testl $, %edi;je  <RtlInitializeGenericTableAvl+>": 1,
                "cmpl $, (%ebp);je  <RtlInsertElementGenericTableFullAvl+>;cmpl $-, (%esi);jne  <RtlInsertElementGenericTableFullAvl+>;movl $, (%esp)": 1,
                "movl $, %edi;jmp  <RtlInsertElementGenericTableFullAvl+>;leal (%eax), %edi;movl $, (%eax);movl $, (%eax)": 1,
                "movb %al, -(%ebp);cmpb $, %al;jne  <RtlInsertElementGenericTableFullAvl+>;movl (%ebx), %ecx;jmp  <RtlInsertElementGenericTableFullAvl+>": 1,
                "movb $, (%ecx);movb $, (%ebx);jmp  <RtlInsertElementGenericTableFullAvl+>;movsbl %al, %eax;movl %eax, -(%ebp)": 1,
                "jmp  <RtlInsertElementGenericTableFullAvl+>;movl (%ecx), %edx;movl (%edx), %esi;movl %esi, -(%ebp);movl (%esi), %eax": 1,
                "movl -(%ebp), %eax;cmpl (%eax), %edx;jne  <RtlInsertElementGenericTableFullAvl+>;addl $, %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, (%esi);testl %eax, %eax;je  <RtlInsertElementGenericTableFullAvl+>;movl -(%ebp), %esi;movl %esi, (%eax)": 1,
                "movsbl %al, %eax;cmpl %eax, -(%ebp);jne  <RtlInsertElementGenericTableFullAvl+>;movzbl -(%ebp), %eax;movb %al, (%ecx)": 1,
                "movb $, (%ebx);jmp  <RtlInsertElementGenericTableFullAvl+>;movb $, (%ecx);movb $, (%ebx);movb $, (%edx)": 1,
                "movl (%eax), %esi;leal (%eax), %edx;movl %edx, -(%ebp);leal (%ecx), %ebx;movl %ebx, -(%ebp)": 1,
                "movl %ebx, -(%ebp);cmpl (%eax), %ecx;jne  <RtlInsertElementGenericTableFullAvl+>;leal (%eax), %edx;movl %edx, -(%ebp)": 1,
                "movl %edx, (%ebx);testl %edx, %edx;je  <RtlInsertElementGenericTableFullAvl+>;movl %eax, (%edx);movl -(%ebp), %edx": 1,
                "movl %ecx, (%eax);leal (%esi), %edx;cmpl (%esi), %eax;jne  <RtlInsertElementGenericTableFullAvl+>;leal (%esi), %edx": 1,
                "calll  <memmove>;jmp  <RtlInsertElementGenericTableFullAvl+>;movl (%ebp), %edi;addl $, %edi;cmpl $, (%ebp)": 1,
                "movl (%ebp), %esi;setne (%esi);jmp  <RtlInsertElementGenericTableFullAvl+>;movl $, %edi;movl %edi, %eax": 1,
                "jne  <RtlInsertElementGenericTableAvl+>;movl (%ebx), %eax;testl %eax, %eax;jne - <RtlInsertElementGenericTableAvl+>;movl $, %edx": 2,
                "movl (%ebp), %esi;movl (%ebp), %edi;cmpl $, (%esi);je  <RtlLookupElementGenericTableFullAvl+>;movl (%esi), %ebx": 1,
                "jmp  <RtlLookupElementGenericTableFullAvl+>;movl %eax, %ebx;leal (%ebx), %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <RtlLookupElementGenericTableFullAvl>;subl $, %esp;leave": 1,
                "testl %ebx, %ebx;jne - <RtlLookupElementGenericTableAvl+>;jmp  <RtlLookupElementGenericTableAvl+>;cmpl $, %eax;jne  <RtlLookupElementGenericTableAvl+>": 1,
                "jmp - <RtlLookupElementGenericTableAvl+>;leal -(%ebp), %esp;popl %ebx;popl %esi;popl %edi": 1,
                "jmp  <RtlEnumerateGenericTableWithoutSplayingAvl+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "testl %eax, %eax;jne  <RtlDeleteElementGenericTableAvl+>;movl (%edi), %edi;testl %edi, %edi;jne - <RtlDeleteElementGenericTableAvl+>": 1,
                "jne  <RtlDeleteElementGenericTableAvl+>;movl (%edi), %edi;testl %edi, %edi;jne - <RtlDeleteElementGenericTableAvl+>;jmp  <RtlDeleteElementGenericTableAvl+>": 1,
                "testl %edi, %edi;jne - <RtlDeleteElementGenericTableAvl+>;jmp  <RtlDeleteElementGenericTableAvl+>;cmpl $, %eax;jne  <RtlDeleteElementGenericTableAvl+>": 1,
                "jmp  <RtlDeleteElementGenericTableAvl+>;movl %eax, %edi;jmp  <RtlDeleteElementGenericTableAvl+>;movl %eax, %edi;movl (%edi), %eax": 1,
                "movb $, (%edx);movl %edi, -(%ebp);movzbl (%esi), %edx;cmpb %al, %dl;jne  <RtlDeleteElementGenericTableAvl+>": 1,
                "cmpb %al, %dl;jne  <RtlDeleteElementGenericTableAvl+>;movb $, (%esi);movl %esi, %eax;jmp  <RtlDeleteElementGenericTableAvl+>": 1,
                "movl -(%ebp), %edx;movl %edx, (%edi);movl (%edx), %eax;movl %eax, -(%ebp);addl $, %edx": 1,
                "movl -(%ebp), %edx;movl %edi, (%edx);movl -(%ebp), %eax;movl %eax, (%edi);movzbl (%edi), %eax": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;movl (%esi), %ecx;movl -(%ebp), %esi;movl %ecx, (%esi)": 1,
                "movl -(%ebp), %esi;movl (%esi), %ecx;movl -(%ebp), %esi;movl %ecx, (%esi);testl %ecx, %ecx": 1,
                "movl %edx, (%ebx);movzbl -(%ebp), %eax;negl %eax;movb %al, (%ebx);jmp  <RtlDeleteElementGenericTableAvl+>": 1,
                "sete %al;leal -(%eax,%eax), %eax;jmp - <RtlDeleteElementGenericTableAvl+>;cmpl %edi, -(%ebp);je  <RtlDeleteElementGenericTableAvl+>": 1,
                "leal -(%eax,%eax), %eax;jmp - <RtlDeleteElementGenericTableAvl+>;cmpl %edi, -(%ebp);je  <RtlDeleteElementGenericTableAvl+>;movl -(%ebp), %esi": 1,
                "cmpl (%eax), %esi;jne  <RtlDeleteElementGenericTableAvl+>;movl (%edi), %eax;addl $, %eax;jmp  <RtlDeleteElementGenericTableAvl+>": 1,
                "addl $, %eax;movl %edi, (%eax);movl (%edi), %eax;testl %eax, %eax;je  <RtlDeleteElementGenericTableAvl+>": 1,
                "movl (%ebp), %esi;movl (%esi), %eax;cmpl -(%ebp), %eax;jne - <RtlDeleteElementGenericTableAvl+>;jmp - <RtlDeleteElementGenericTableAvl+>": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "jne - <RtlFindMessage+>;movl $, %eax;jmp  <RtlFindMessage+>;leal (%edx,%edx,), %eax;addl (%esi,%eax,), %esi": 1,
                "movl $, %eax;jmp  <RtlFindMessage+>;movl $, %eax;jmp  <RtlFindMessage+>;movl $, %eax": 3,
                "movl %ecx, (%esp);movl %edx, (%esp);movl %eax, (%esp);movl %edi, %edx;movzbl %dl, %eax": 1,
                "shrw %bx;movzwl %bx, %ebx;subl $, %ebx;je  <RtlFindMessage+>;movl (%eax), %esi": 1,
                "subl $, %esp;movl (%ebp), %ecx;movl (%ebp), %ebx;movl (%ebp), %eax;movzwl (%eax), %eax": 1,
                "jne  <RtlFindMessage+>;addl $, %ebx;cmpl %edx, %ebx;jne - <RtlFindMessage+>;leal (%ebx,%ebx), %eax": 1,
                "negl %edx;addl %edx, %edx;addl %edx, %edi;movl %edi, -(%ebp);addl %eax, %edx": 1,
                "ja - <RtlFindMessage+>;jmp  <RtlFindMessage+>;movl $, %ebx;jmp  <RtlFindMessage+>;movl %edi, %esi": 1,
                "cmpw $, %ax;je  <RtlFindMessage+>;cmpw %ax, -(%ebp);setae %al;movzbl %al, %eax": 1,
                "movl $, %eax;jmp  <RtlFindMessage+>;movl $, %eax;jmp  <RtlFindMessage+>;movl (%ecx), %edi": 1,
                "subl $, %esp;movl (%ebx), %edx;cmpw %ax, (%edx);jg  <RtlFindUnicodePrefix+>;jmp  <RtlFindUnicodePrefix+>": 1,
                "je  <RtlFindUnicodePrefix+>;leal -(%edi), %ebx;movl $, (%esp);movl %esi, (%esp);movl (%ebx), %eax": 1,
                "jne  <RtlFindUnicodePrefix+>;movl (%edi), %edi;jmp  <RtlFindUnicodePrefix+>;testl %eax, %eax;jne  <RtlFindUnicodePrefix+>": 1,
                "jmp  <RtlFindUnicodePrefix+>;movl %ebx, %edi;cmpl $, (%ebp);jne  <RtlFindUnicodePrefix+>;movl -(%ebp), %esi": 1,
                "jne  <RtlFindUnicodePrefix+>;movl -(%ebp), %esi;cmpw $, (%ebx);jne  <RtlFindUnicodePrefix+>;movl (%esi), %edi": 1,
                "movw $, (%esi);movl $, (%esi);addl $, %ebx;movl %ebx, (%esp);calll - <RtlSplay>": 1,
                "movl $, (%esi);addl $, %ebx;movl %ebx, (%esp);calll - <RtlSplay>;subl $, %esp": 1,
                "movl %edx, (%esp);movl %esi, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll - <RtlFindMessage+>": 1,
                "movl (%ebx), %ebx;cmpl %edi, %ebx;jne - <RtlFindUnicodePrefix+>;jmp  <RtlFindUnicodePrefix+>;testl %edi, %edi": 1,
                "movzwl (%ebx), %eax;cmpw %ax, %cx;jl - <RtlInsertUnicodePrefix+>;movl %edx, -(%ebp);jmp  <RtlInsertUnicodePrefix+>": 1,
                "jl - <RtlInsertUnicodePrefix+>;movl %edx, -(%ebp);jmp  <RtlInsertUnicodePrefix+>;movl %ebx, -(%ebp);movl %edx, %ebx": 1,
                "jne  <RtlInsertUnicodePrefix+>;movl %esi, -(%ebp);movl %esi, -(%ebp);movl %ebx, -(%ebp);movl %esi, -(%ebp)": 1,
                "cmpl $, %eax;je  <RtlInsertUnicodePrefix+>;movl (%ebx), %ebx;cmpl %edi, %ebx;jne - <RtlInsertUnicodePrefix+>": 1,
                "je  <RtlInsertUnicodePrefix+>;leal -(%eax), %esi;jmp - <RtlInsertUnicodePrefix+>;movw $, (%edi);movl $, (%edi)": 2,
                "jmp - <RtlInsertUnicodePrefix+>;movw $, (%edi);movl $, (%edi);movl %edi, (%edi);movl -(%ebp), %eax": 1,
                "movl %esi, (%esp);calll - <RtlSplay>;subl $, %esp;leal -(%eax), %edx;movw $, -(%eax)": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movzbl (%ebp), %edx": 1,
                "subl $, %esp;movl (%ebp), %ebx;movzbl (%ebp), %edx;movl (%ebx), %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;jne  <RtlNextUnicodePrefix+>;movl (%ebx), %edx;addl $, %edx;jmp  <RtlNextUnicodePrefix+>": 1,
                "jne - <RtlNextUnicodePrefix+>;movl -(%eax), %edx;cmpw $, (%edx);jg  <RtlNextUnicodePrefix+>;jmp  <RtlNextUnicodePrefix+>": 1,
                "subl $, %eax;movl %eax, (%ebx);jmp  <RtlNextUnicodePrefix+>;movl $, %eax;jmp  <RtlNextUnicodePrefix+>": 1,
                "movl (%eax), %ebx;movl %ebx, %ecx;jmp  <RtlRemoveUnicodePrefix+>;movl %edx, %ecx;movl (%ecx), %edx": 1,
                "jne - <RtlRemoveUnicodePrefix+>;jmp  <RtlRemoveUnicodePrefix+>;cmpl (%ebx), %eax;jne  <RtlRemoveUnicodePrefix+>;leal (%edx), %eax": 1,
                "leal (%edx), %eax;movl %eax, (%ebx);movl (%edx), %eax;testl %eax, %eax;je  <RtlRemoveUnicodePrefix+>": 1,
                "movl (%eax), %ebx;cmpl %eax, %ebx;jne - <RtlRemoveUnicodePrefix+>;leal -(%ebx), %esi;movl %edx, (%esp)": 1,
                "cmpl %esi, %eax;jne - <RtlRemoveUnicodePrefix+>;movl %ecx, (%edx);jmp  <RtlRemoveUnicodePrefix+>;leal (%esi), %edx": 1,
                "addl $, %edx;cmpl %ebx, %edx;jne - <RtlRemoveUnicodePrefix+>;jmp  <RtlRemoveUnicodePrefix+>;movl $, %eax": 1,
                "movl %esp, %ebp;pushl %ebx;movl $, %ecx;movl $, %ebx;mull %ebx": 1,
                "pushl %ebx;movl $, %ecx;movl $, %ebx;mull %ebx;shrl $, %edx": 1,
                "movl $, %ebx;mull %ebx;shrl $, %edx;movl %edx, %eax;addl $, %ecx": 1,
                "jne  <RtlRemoveUnicodePrefix+>;movb $, %cl;jmp  <RtlRemoveUnicodePrefix+>;movl $, %ecx;movl %ecx, %eax": 1,
                "movl %ecx, %eax;popl %ebx;popl %ebp;retl;pushl %ebp": 1,
                "calll - <RtlUpcaseUnicodeToOemN>;subl $, %esp;cmpl $, -(%ebp);jne  <RtlGeneratedotName+>;movzbl -(%ebp), %ecx": 2,
                "addl $, %ebx;addl $, %esi;cmpl $, %ebx;ja  <RtlGeneratedotName+>;cmpl %esi, -(%ebp)": 1,
                "movl -(%ebp), %edi;movl $, -(%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp);jae  <RtlGeneratedotName+>": 1,
                "movl -(%ebp), %edx;movl %ebx, -(%ebp);movl $, %ebx;movl %edi, -(%ebp);movl %edx, %edi": 1,
                "movl $, %ebx;movl %edi, -(%ebp);movl %edx, %edi;movb $, -(%ebp);movl $, (%esp)": 1,
                "movl (%ebp), %ecx;cmpb $, (%ecx);je  <RtlGeneratedotName+>;movl $, %edx;subl %eax, %edx": 1,
                "movl %ecx, %eax;addl $, %eax;movl %eax, (%esp);calll  <wcsncmp>;testl %eax, %eax": 1,
                "jne  <RtlGeneratedotName+>;movzwl -(%ebp), %edx;movl (%ebp), %eax;cmpw %dx, (%eax);jne  <RtlGeneratedotName+>": 1,
                "movl (%edi), %esi;addl %eax, %esi;movl %ecx, %edx;andl $, %edx;leal (%edx), %ebx": 1,
                "cmpl $, -(%ebp);je  <RtlGeneratedotName+>;addl %esi, %esi;movl $, %ebx;movl $, %eax": 1,
                "je  <RtlGeneratedotName+>;addl %esi, %esi;movl $, %ebx;movl $, %eax;mull %ecx": 1,
                "addl %esi, %esi;movl $, %ebx;movl $, %eax;mull %ecx;shrl $, %edx": 1,
                "shrl $, %edx;leal (%edx,%edx,), %eax;addl %eax, %eax;subl %eax, %ecx;addl $, %ecx": 1,
                "movl (%edi), %eax;movw %cx, (%eax,%esi);movl %edx, %ecx;addl $, %ebx;subl $, %esi": 1,
                "movl %esi, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp);movl (%edi), %eax;movl -(%ebp), %edx": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;jbe - <RtlGeneratedotName+>;jmp - <RtlGeneratedotName+>;leal -(%ebp), %esp": 1,
                "jne  <RtlIsNameLegalDOSDot+>;movw $, -(%ebp);movw $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "testl %eax, %eax;js  <RtlIsNameLegalDOSDot+>;movzwl (%ebx), %eax;movw %ax, -(%ebp);movl $, %eax": 1,
                "je  <RtlIsNameLegalDOSDot+>;cmpb $, (%esi);je  <RtlIsNameLegalDOSDot+>;movzwl -(%ebp), %edi;testl %edi, %edi": 1,
                "je  <RtlIsNameLegalDOSDot+>;movb $, -(%ebp);jmp  <RtlIsNameLegalDOSDot+>;cmpl $-, -(%ebp);jne  <RtlIsNameLegalDOSDot+>": 1,
                "testl %eax, %eax;jne  <RtlIsNameLegalDOSDot+>;addl $, %ebx;cmpl %edi, %ebx;jl - <RtlIsNameLegalDOSDot+>": 1,
                "jne  <RtlIsNameLegalDOSDot+>;movl $, %eax;cmpw $, -(%ebp);jbe  <RtlIsNameLegalDOSDot+>;jmp  <RtlIsNameLegalDOSDot+>": 1,
                "cmpw $, -(%ebp);jbe  <RtlIsNameLegalDOSDot+>;jmp  <RtlIsNameLegalDOSDot+>;movl $, %eax;cmpl $, -(%ebp)": 1,
                "cmpl $, (%ebp);je  <RtlIsNameLegalDOSDot+>;movzbl -(%ebp), %edx;movl (%ebp), %eax;movb %dl, (%eax)": 1,
                "cmpl $, (%esi);je  <RtlGetCallersAddress+>;testw %ax, %ax;je  <RtlGetCallersAddress+>;movl -(%ebp), %edx": 1,
                "subl $, %esp;movl $, %edx;testb %al, %al;jne  <RtlGetCallersAddress+>;leal -(%ebp), %eax": 1,
                "movl %edi, (%esp);movl %esi, (%esp);movl %eax, (%esp);movl %ebx, (%esp);calll - <PsEstablishWinCallouts+>": 1,
                "movl %ebx, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp;testb %al, %al;jne  <RtlGetCallersAddress+>": 1,
                "je  <RtlGetCallersAddress+>;movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "jne  <RtlUnwind+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <RtlUnwind+>;movl (%ebx), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <RtlCaptureContext+>;subl $, %esp;movl %ebx, %edx;cmpl $, %eax": 1,
                "subl $, %esp;movl %ebx, %edx;cmpl $, %eax;je  <RtlUnwind+>;movl -(%ebp), %edx": 1,
                "jne - <RtlUnwind+>;cmpl $-, %edi;jne  <RtlUnwind+>;movl $, (%esp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <ZwQueryVolumeInformationFile+>": 1,
                "calll - <ZwQueryVolumeInformationFile+>;subl $, %esp;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "cmpl %edi, %esi;ja  <RtlUnwind+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "calll - <DbgPrint>;movl $, %eax;jmp  <RtlUnwind+>;movl (%ebp), %edx;movl (%edx), %eax": 1,
                "cmpl $, %eax;jle  <RtlUnwind+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "jle  <RtlUnwind+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll - <DbgPrint>": 1,
                "cmpl %eax, %esi;jae  <RtlImageNtHeader+>;jmp  <RtlImageNtHeader+>;movl %edx, (%ebx);addl (%edx), %esi": 1,
                "subl (%edx), %esi;movl (%ebp), %eax;addl %esi, %eax;jmp  <RtlImageNtHeader+>;movl $, %eax": 1,
                "jmp  <RtlImageNtHeader+>;movl $, %eax;jmp  <RtlImageNtHeader+>;movl $, %eax;jmp  <RtlImageNtHeader+>": 1,
                "movl $, %eax;jmp  <RtlImageNtHeader+>;movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movzwl %si, %edx;cmpl (%eax), %edx;jae  <RtlImageDirectoryEntryToData+>;movl %edx, %esi;movl (%eax,%edx,), %edx": 1,
                "cmpl (%eax), %edx;jae  <RtlImageDirectoryEntryToData+>;movl %edx, %esi;movl (%eax,%edx,), %edx;testl %edx, %edx": 1,
                "jae  <RtlImageDirectoryEntryToData+>;movl %edx, %esi;movl (%eax,%edx,), %edx;testl %edx, %edx;je  <RtlImageDirectoryEntryToData+>": 1,
                "addl (%ebp), %eax;cmpw $, %dx;ja  <RtlImageDirectoryEntryToData+>;movzwl %dx, %ecx;jmpl *-(,%ecx,)": 1,
                "movl %eax, (%esp);calll - <RtlImageNtHeader>;subl $, %esp;testl %eax, %eax;je  <RtlImageDirectoryEntryToData+>": 1,
                "testl %eax, %eax;je  <RtlImageDirectoryEntryToData+>;testb $, (%eax);jne  <RtlImageDirectoryEntryToData+>;movl (%eax), %ecx": 1,
                "movl %ecx, %eax;addl %ecx, %ebx;cmpl %ebx, %ecx;jae  <RtlImageDirectoryEntryToData+>;movl (%ecx), %edx": 1,
                "addl %ecx, %ebx;cmpl %ebx, %ecx;jae  <RtlImageDirectoryEntryToData+>;movl (%ecx), %edx;testl %edx, %edx": 1,
                "subl $, %edx;shrl %edx;movl %edx, (%esp);movl %ecx, (%esp);calll - <RtlImageDirectoryEntryToData+>": 1,
                "jne  <RtlImageDirectoryEntryToData+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll - <DbgPrint>": 1,
                "cmpl %eax, %ebx;jbe  <RtlImageDirectoryEntryToData+>;movl (%eax), %edx;testl %edx, %edx;jne - <RtlImageDirectoryEntryToData+>": 1,
                "movl (%ebp), %ebx;movl $, %eax;testl %ebx, %ebx;je  <RtlIpvAddressToStringA+>;movzbl (%edx), %eax": 1,
                "movl %eax, (%esp);movzbl (%edx), %eax;movl %eax, (%esp);movl $, (%esp);movl %ebx, (%esp)": 2,
                "movzbl (%eax), %edx;movl %edx, (%esp);movzbl (%eax), %edx;movl %edx, (%esp);movzbl (%eax), %eax": 2,
                "calll  <sprintf>;movl %eax, %esi;testw %di, %di;je  <RtlIpvAddressToStringExA+>;movl %edi, %eax": 1,
                "testw %di, %di;je  <RtlIpvAddressToStringExA+>;movl %edi, %eax;shll $, %eax;andl $, %eax": 1,
                "movl %eax, (%esp);calll  <strcpy>;movl $, %eax;jmp  <RtlIpvAddressToStringExA+>;addl $, %esi": 1,
                "jmp  <RtlIpvAddressToStringExW+>;movl $, %eax;jmp  <RtlIpvAddressToStringExW+>;movl $, %eax;movl -(%ebp), %ebx": 1,
                "movl (%ebp), %ebx;testl %ebx, %ebx;je  <RtlNtStatusToDosErrorNoTeb+>;testl $, %ebx;je  <RtlNtStatusToDosErrorNoTeb+>": 1,
                "testl %edx, %edx;jne - <RtlNtStatusToDosErrorNoTeb+>;shrl $, %ecx;movzwl %bx, %eax;cmpw $, %cx": 1,
                "jne - <RtlNtStatusToDosErrorNoTeb+>;shrl $, %ecx;movzwl %bx, %eax;cmpw $, %cx;je  <RtlNtStatusToDosErrorNoTeb+>": 1,
                "je  <RtlNtStatusToDosErrorNoTeb+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll - <DbgPrint>": 1,
                "movl $, %eax;jmp  <RtlMapSecurityErrorToNtStatus+>;testl %ecx, %ecx;je  <RtlMapSecurityErrorToNtStatus+>;movl (%edx), %ebx": 1,
                "movl (%edx), %ebx;movl %ebx, (%ecx);movl %eax, (%edx);movl $, %eax;addl $, %esp": 1,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);addl $, %ebx;movl %ebx, -(%ebp)": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll - <RtlWriteRegistryValue>;subl $, %esp": 7,
                "movl $, (%esp);calll - <RtlWriteRegistryValue>;subl $, %esp;testl %eax, %eax;js  <RtlSetTimeZoneInformation+>": 6,
                "subl %edx, %ecx;shrl %ecx;addl %edx, %ecx;shrl $, %ecx;movl %ecx, %eax": 1,
                "imull $, %ecx, %esi;addl $, %esi;movl %esi, %eax;mull %edi;movl %esi, %edi": 1,
                "subl %eax, %edx;movl %edx, (%ebx);andl $, %edx;movl -(,%edx,), %eax;movl %ecx, -(,%edx,)": 1,
                "shrl %eax;addl %edx, %eax;shrl $, %eax;movl %eax, %edx;shll $, %edx": 2,
                "shrl $, %eax;movl %eax, %edx;shll $, %edx;subl %eax, %edx;subl %edx, %ecx": 2,
                "cmpw $, %cx;jg  <RtlTimeFieldsToTime+>;movzwl (%edx), %eax;testw %ax, %ax;jle  <RtlTimeFieldsToTime+>": 1,
                "cmpl %edx, -(%ebp);jne  <RtlTimeFieldsToTime+>;movl $, %edx;movl -(%ebp), %eax;imull %edx": 1,
                "sarl $, %ecx;movl %ecx, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %edx;movl (%ebp), %ecx": 1,
                "sarl $, %ecx;movl -(%ebp), %eax;sarl $, %eax;subl %eax, %ecx;imull $, %ecx, %ecx": 1,
                "movl -(%ebp), %ecx;subl -(%ebp), %ecx;movl %ecx, -(%ebp);sarl $, %edx;subl %eax, %edx": 1,
                "movzbl -(%ecx,%esi,), %esi;movl $, %edi;addl %esi, %eax;adcl %edi, %edx;addl $, %ecx": 1,
                "addl (%ecx), %eax;adcl (%ecx), %edx;imull $, %edx, %ecx;movl $, %edx;mull %edx": 1,
                "movl $, %edx;mull %edx;addl %ecx, %edx;movswl -(%ebp), %ecx;imull $, %ecx, %ecx": 1,
                "calll  <wcstombs+>;movl %eax, %esi;movl %edx, %edi;movl $, (%esp);movl $, (%esp)": 2,
                "imull $, %ecx, %ecx;movl -(%ebp), %eax;subl %ecx, %eax;movl %eax, %ecx;shrl $, %edx": 1,
                "movl %edi, (%esp);calll  <wcstombs+>;movl %eax, %esi;movl %edx, %edi;movl $, (%esp)": 1,
                "imull $, %edx, %edx;subl %edx, %ecx;movl $, %edx;movl %ecx, %eax;mull %edx": 1,
                "sarl $, %edx;movl %esi, %eax;sarl $, %eax;subl %eax, %edx;imull $, %edx, %edx": 2,
                "cmpl %edx, %ecx;jne  <RtlTimeToTimeFields+>;movl $, %edx;movl %ecx, %eax;imull %edx": 1,
                "addl $, %ebx;movw %bx, (%eax);addl $, %esp;popl %ebx;popl %esi": 1,
                "movzwl (%ebx), %eax;cmpw $, %ax;jg  <RtlTimeToTimeFields+>;testw %ax, %ax;je  <RtlTimeToTimeFields+>": 1,
                "jmp  <RtlTimeToTimeFields+>;addl $, %edx;subl %eax, %edx;addw %dx, -(%ebp);movzwl (%ebx), %eax": 1,
                "movzwl (%ebx), %eax;cmpw $, %ax;jle  <RtlTimeToTimeFields+>;subl $, %eax;leal (,%eax,), %edx": 1,
                "subl %eax, %edx;imull $, %edx, %edx;movb $, %cl;cmpl %edx, %edi;jne  <RtlTimeToTimeFields+>": 1,
                "imull $, %edx, %edx;cmpl %edx, %edi;sete %cl;movzbl %cl, %ecx;movzwl -(%ebp), %edi": 1,
                "jle  <RtlTimeToTimeFields+>;movzwl -(%ebp), %ecx;subl $, %ecx;movw %cx, -(%ebp);movzwl -(%ebp), %eax": 1,
                "movzwl -(%ebp), %eax;addl %edi, %eax;movw %ax, -(%ebp);movl %esi, (%esp);leal -(%ebp), %eax": 1,
                "movl %esp, %ebp;movl $, %eax;mull (%ebp);addl $, %eax;adcl $, %edx": 2,
                "movl $, %ebx;testb $, %cl;je  <RtlSecondsSinceToTime+>;shrdl $, %edx, %eax;movl %eax, %ebx": 1,
                "testb $, %cl;je  <RtlSecondsSinceToTime+>;shrdl $, %edx, %eax;movl %eax, %ebx;movl %ebx, %eax": 1,
                "movl $, %edx;testb $, (%ebp);je - <RtlVerifyVersionInfo+>;jmp - <RtlVerifyVersionInfo+>;movl $, %edx": 1,
                "movl $, %eax;jmp - <RtlVerifyVersionInfo+>;movl %ebx, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movl (%ebp), %edx;movl (%ebp), %esi;movzbl (%ebp), %ecx;testl %esi, %esi;je  <VerSetConditionMask+>": 1,
                "testl $, %esi;je  <VerSetConditionMask+>;orl %edi, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "orl %edi, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ebp, %esp": 1,
                "testl %ecx, %ecx;je  <VerSetConditionMask+>;subl %eax, %ecx;movl %ecx, (%eax);movl (%eax), %ecx": 7,
                "movl %eax, (%ebp);cmpl $, (%ebp);jne  <VerSetConditionMask+>;movl %fs:, %eax;movl (%eax), %eax": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%ebp)": 1,
                "movzwl (%ecx), %eax;addl $, %eax;andl $-, %eax;leal (%edx,%eax), %eax;movl (%ebp), %edx": 1,
                "movzwl %ax, %eax;leal (%edi,%eax,), %edi;movzwl (%ebx), %eax;testw %ax, %ax;je  <VerSetConditionMask+>": 1,
                "leal (%edi,%eax,), %edi;movzwl (%ebx), %eax;testw %ax, %ax;je  <VerSetConditionMask+>;shrw %ax": 1,
                "leal (%esi,%eax,), %esi;movl (%ebp), %ecx;movzwl (%ecx), %eax;movw %ax, (%ebx);addw $, %ax": 1,
                "testw %ax, %ax;je  <VerSetConditionMask+>;movzwl %ax, %eax;movl %eax, (%esp);movl (%ecx), %eax": 2,
                "je  <VerSetConditionMask+>;movzwl %ax, %eax;movl %eax, (%esp);movl (%ecx), %eax;movl %eax, (%esp)": 2,
                "movzwl (%edx), %eax;movw %ax, (%ebx);movzwl (%edx), %eax;movw %ax, (%ebx);movl %esi, (%ebx)": 1,
                "movzwl (%ecx), %edx;movw %dx, (%ebx);movzwl (%ecx), %edx;movw %dx, (%ebx);movl %eax, (%ebx)": 1,
                "movzwl (%ecx), %edx;testw %dx, %dx;je  <VerSetConditionMask+>;movzwl %dx, %edx;movl %edx, (%esp)": 1,
                "jmp  <VerSetConditionMask+>;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebx), %ecx;movl %ecx, %eax;testl %ecx, %ecx;jne  <VerSetConditionMask+>;jmp  <VerSetConditionMask+>": 1,
                "jne - <VerSetConditionMask+>;subl %ecx, %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl $, (%esp)": 1,
                "movl %eax, (%ebx);movl $, -(%ebp);movl (%ebx), %eax;movl %eax, -(%ebp);movl $, (%esp)": 1,
                "jmp  <VerSetConditionMask+>;movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl -(%ebp), %eax": 1,
                "leal (%esi), %eax;movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;jmp  <VerSetConditionMask+>;movl (%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %eax": 1,
                "movl (%esi), %eax;movl %eax, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;jmp  <VerSetConditionMask+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <ZwClose>": 1,
                "jmp  <VerSetConditionMask+>;xorl -(%ebp), %ebx;movl %ebx, %eax;movl -(%ebp), %ebx;leave": 1,
                "je  <VerSetConditionMask+>;movl %fs:, %eax;movl (%eax), %eax;testb $, (%eax);je  <VerSetConditionMask+>": 1,
                "popl %ebp;retl;pushl %ebp;movl %esp, %ebp;calll - <NtQuerySystemInformation+>": 1,
                "testl %ebx, %ebx;je  <VerSetConditionMask+>;addl %edx, %ebx;movzbl (%edx), %ecx;xorl %eax, %ecx": 1,
                "jne - <VerSetConditionMask+>;notl %eax;popl %ebx;popl %ebp;retl $": 1,
                "subl $, %esp;cmpl $, (%ebp);je  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll - <RtlRaiseException>;subl $, %esp;leave;retl $;pushl %ebp": 1,
                "subl $, %esp;movl (%ebp), %eax;testb $, (%eax);je  <VerSetConditionMask+>;cmpl $, (%eax)": 1,
                "movl (%ebp), %eax;testb $, (%eax);je  <VerSetConditionMask+>;cmpl $, (%eax);jne  <VerSetConditionMask+>": 1,
                "je  <VerSetConditionMask+>;cmpl $, (%eax);jne  <VerSetConditionMask+>;addl $, %eax;jmp  <VerSetConditionMask+>": 1,
                "cmpl $, (%eax);jne  <VerSetConditionMask+>;addl $, %eax;jmp  <VerSetConditionMask+>;movl $, (%esp)": 1,
                "jne  <VerSetConditionMask+>;addl $, %eax;jmp  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, %ebx;testl %eax, %eax;jns  <VerSetConditionMask+>;cmpl $, %esi;jne  <VerSetConditionMask+>": 1,
                "calll - <DbgBreakPoint>;jmp  <VerSetConditionMask+>;lock;addl $, -;testb $, -": 2,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl %esi, (%esp);leal (%ebp), %eax": 1,
                "leal (%ebx), %eax;movl %eax, (%esp);calll - <RtlInsertElementGenericTableAvl>;subl $, %esp;cmpl %eax, %edi": 1,
                "movl %ecx, (%edx);cmpl $, (%eax);jne  <VerSetConditionMask+>;movl %edx, (%eax);movl %edx, (%eax)": 2,
                "testl %ecx, %ecx;je  <VerSetConditionMask+>;movl %ebx, (%ecx);subl $, (%eax);movl (%edx), %ecx": 1,
                "jae  <VerSetConditionMask+>;movl %ecx, %edi;jmp  <VerSetConditionMask+>;cmpl %eax, (%edi);jae  <VerSetConditionMask+>": 1,
                "movl %ecx, %edi;jmp  <VerSetConditionMask+>;cmpl %eax, (%edi);jae  <VerSetConditionMask+>;movl (%edi), %edi": 1,
                "jmp  <VerSetConditionMask+>;movl (%edi), %ecx;movl %ecx, -(%ebp);addl (%edi), %ecx;cmpl %ecx, %eax": 1,
                "movl %esi, (%esp);calll - <VerSetConditionMask+>;subl $, %esp;subl $, (%esi);movl %edi, %edx": 1,
                "movl (%edx), %ecx;movl (%edx), %ebx;addl %ecx, %ebx;cmpl %ebx, (%eax);jne  <VerSetConditionMask+>": 1,
                "calll - <RtlAssert>;subl $, %esp;testl %ebx, %ebx;je  <VerSetConditionMask+>;subl $, %esi": 1,
                "subl $, %esi;cmpl %esi, (%ebp);jbe  <VerSetConditionMask+>;jmp  <VerSetConditionMask+>;subl $, %esi": 1,
                "subl $, %esi;movl %edi, %ebx;cmpl %esi, (%ebp);ja  <VerSetConditionMask+>;movl (%ebx), %edi": 1,
                "movl (%ebp), %esi;movzbl (%ebp), %edi;movl (%ebp), %ecx;shrl $, %ecx;movl %ecx, %edx": 1,
                "calll - <VerSetConditionMask+>;subl $, %esp;movl %eax, %edi;testl %eax, %eax;jne  <VerSetConditionMask+>": 6,
                "movl %ebx, (%esp);calll - <VerSetConditionMask+>;subl $, %esp;leal -(%ebp), %esp;popl %ebx": 1,
                "subl $, %esp;leal (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;addl $, %eax": 1,
                "testl %eax, %eax;jne  <VerSetConditionMask+>;movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "testl %eax, %eax;jns  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "subl $, %esp;movl %eax, %edi;testl %eax, %eax;jne  <VerSetConditionMask+>;movl (%ebx), %eax": 2,
                "movl (%ebx), %eax;cmpl $, %eax;ja  <VerSetConditionMask+>;jmp  <VerSetConditionMask+>;movl (%ebx), %eax": 1,
                "je  <VerSetConditionMask+>;movl %esi, (%esp);calll - <VerSetConditionMask+>;subl $, %esp;movl %eax, %ebx": 1,
                "movl %esi, (%esp);calll - <VerSetConditionMask+>;subl $, %esp;movl %eax, %ebx;testl %eax, %eax": 2,
                "testl %eax, %eax;jne  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp);movl %esi, (%esp)": 1,
                "testl %eax, %eax;jns  <VerSetConditionMask+>;jmp  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp)": 1,
                "jmp  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "movl $, (%esp);calll - <RtlAssert>;subl $, %esp;movl $, %ebx;jmp  <VerSetConditionMask+>": 5,
                "subl $, %esp;movl %eax, %ebx;jmp  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;testb $, %bh;je  <VerSetConditionMask+>": 1,
                "movl $, (%ebx);movl $, %eax;cmpl $, -(%esi);je  <VerSetConditionMask+>;movl $, (%ebx)": 1,
                "movl (%eax), %ebx;leal -(%eax), %esi;cmpl %edi, (%esi);jne  <VerSetConditionMask+>;movl (%eax), %eax": 1,
                "movl %edi, (%esp);calll - <VerSetConditionMask+>;subl $, %esp;movl (%esi), %eax;subl %eax, -": 1,
                "jne  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp);movl $, (%esp);leal -(%ebp), %eax": 1,
                "calll - <RtlAssert>;subl $, %esp;movl $, %ebx;jmp  <VerSetConditionMask+>;movl $, (%esp)": 3,
                "subl $, %esp;movl -(%ebp), %eax;movl %edi, %edx;orl $, %edx;movl %edx, (%eax)": 1,
                "movl $, (%esp);movl $, (%esp);movl %eax, (%esp);calll - <VerSetConditionMask+>;subl $, %esp": 1,
                "movl $, %ebx;jmp  <VerSetConditionMask+>;movl -(%ebp), %ebx;leal (%ebx), %esi;movl $, (%ebx)": 1,
                "movl %eax, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp;leal (%ebx), %eax;movl %eax, (%ebx)": 1,
                "calll - <VerSetConditionMask+>;subl $, %esp;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %edx, (%esp);movl (%ebx), %edx;movl %edx, (%esp);movl %ebx, (%esp);movl (%eax), %eax": 1,
                "pushl %ebx;subl $, %esp;movl %fs:, %eax;movl (%eax), %eax;movl (%ebp), %edx": 1,
                "movl %fs:, %eax;movl (%eax), %eax;movl (%ebp), %edx;cmpl %edx, (%eax);jne  <VerSetConditionMask+>": 1,
                "testl %eax, %eax;je  <VerSetConditionMask+>;movl (%eax), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "calll - <VerSetConditionMask+>;subl $, %esp;leal (%ebx), %edi;movl $, (%esp);movl %edi, (%esp)": 1,
                "subl $, %esp;movl (%ebx), %eax;movl %eax, (%esp);calll - <PsEstablishWinCallouts+>;subl $, %esp": 2,
                "movl $, (%esp);movl (%eax), %eax;movl %eax, (%esp);calll - <VerSetConditionMask+>;subl $, %esp": 1,
                "movl $, (%esp);movl $, (%esp);calll - <DbgPrint>;movl $, %eax;testl $, %esi": 1,
                "calll - <DbgPrint>;movl $, %eax;testl $, %esi;je  <VerSetConditionMask+>;movl $, (%esp)": 1,
                "subl $, %esp;testb %al, %al;jne  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp)": 2,
                "movl %eax, %esi;testl %eax, %eax;jne  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp)": 3,
                "jmp  <VerSetConditionMask+>;cmpl (%eax), %edi;jbe  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll - <RtlAssert>;subl $, %esp;movl (%esi), %eax;movl %eax, -(%ebp)": 1,
                "subl $, %esp;movl (%esi), %eax;movl %eax, -(%ebp);movl (%esi), %eax;cmpl %eax, %edi": 1,
                "movl %edx, (%esi);subl %edi, %eax;movl %eax, (%esi);subl %edi, (%ebx);movl %ebx, (%esp)": 1,
                "movl (%esi), %eax;movl (%ebp), %edx;movl %edx, (%esp);movl $, (%esp);movl %eax, (%esp)": 1,
                "jne  <VerSetConditionMask+>;movl -(%ebp), %edx;movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edi;testl %edi, %edi;jne  <VerSetConditionMask+>": 1,
                "movl (%esi), %eax;movl %eax, (%esp);calll - <VerSetConditionMask+>;subl $, %esp;jmp  <VerSetConditionMask+>": 1,
                "movl %edi, -(%ebp);testl $, %edi;je  <VerSetConditionMask+>;movl %ebx, (%esp);calll - <VerSetConditionMask+>": 1,
                "movl $, %esi;testb $, -(%ebp);je  <VerSetConditionMask+>;movl $, (%esp);calll - <VerSetConditionMask+>": 2,
                "movl %esi, (%esp);movl %ebx, (%esp);calll - <VerSetConditionMask+>;subl $, %esp;movl %eax, -(%ebp)": 1,
                "movl (%edi), %eax;movl -(%ebp), %edx;movl %eax, (%edx);cmpb $, -(%ebp);jne  <VerSetConditionMask+>": 1,
                "movl -(%ebp), %edx;movl %eax, (%edx);cmpb $, -(%ebp);jne  <VerSetConditionMask+>;movl $, (%esp)": 1,
                "movl (%edi), %eax;testl %eax, %eax;je  <VerSetConditionMask+>;movl $, (%esp);movl %eax, (%esp)": 1,
                "movl (%ebp), %edi;movl (%ebp), %esi;movl (%ebp), %eax;movl %eax, (%esp);calll - <VerSetConditionMask+>": 1,
                "movl $, (%esp);calll - <RtlAssert>;subl $, %esp;movl $, %eax;jmp  <VerSetConditionMask+>": 3,
                "jmp  <VerSetConditionMask+>;movl (%eax), %esi;movl %ebx, (%esp);calll - <VerSetConditionMask+>;subl $, %esp": 1,
                "movl %eax, (%esp);movl (%edx), %eax;movl %eax, (%esp);calll - <RtlSizeHeap+>;subl $, %esp": 2,
                "subl $, %esp;jmp  <VerSetConditionMask+>;movl %edi, (%esp);movl %esi, (%esp);movl %ebx, (%esp)": 1,
                "je - <VerSetConditionMask+>;movl %esi, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "calll - <DbgPrint>;jmp  <VerSetConditionMask+>;movl -(%ebp), %eax;cmpl %esi, %eax;je  <VerSetConditionMask+>": 1,
                "movl (%ebp), %ebx;movl $, -(%ebp);calll - <PsEstablishWinCallouts+>;cmpl (%eax), %ebx;jne  <VerSetConditionMask+>": 1,
                "calll - <PsEstablishWinCallouts+>;cmpl (%eax), %ebx;jne  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);calll - <DbgPrint>;movl $, %edx;testl %eax, %eax;je  <VerSetConditionMask+>": 2,
                "movl $, %edx;testl %eax, %eax;je  <VerSetConditionMask+>;movl $, (%esp);movl $, (%esp)": 2,
                "calll - <DbgPrint>;movl $, %edx;jmp  <VerSetConditionMask+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "subl $, %esp;movl %eax, %esi;jmp  <VerSetConditionMask+>;movl (%ebx), %edx;cmpl $, %edx": 6,
                "movl %eax, %esi;jmp  <VerSetConditionMask+>;movl (%ebx), %edx;cmpl $, %edx;je  <VerSetConditionMask+>": 6,
                "je  <VerSetConditionMask+>;movl %edx, (%esp);movl %ebx, (%esp);movl $, (%esp);movl $, (%esp)": 7,
                "je  <VerSetConditionMask+>;movl $, (%esp);movl %ebx, (%esp);calll - <RtlSizeHeap+>;subl $, %esp": 2,
                "calll - <DbgPrint>;jmp  <VerSetConditionMask+>;testl %edi, %edi;je  <VerSetConditionMask+>;movl %edi, %edx": 1,
                "movl $, (%esp);movl $, (%esp);calll - <DbgPrint>;jmp  <VerSetConditionMask+>;movl (%ebp), %esi": 6,
                "calll - <DbgPrint>;jmp  <VerSetConditionMask+>;movl (%ebp), %esi;orl %eax, %esi;testl $, %esi": 6,
                "subl $, %esp;movl $, %esi;testb %al, %al;je  <VerSetConditionMask+>;movl %edi, (%esp)": 1,
                "calll - <RtlSizeHeap+>;subl $, %esp;movl $, (%esp);movl %ebx, (%esp);calll - <RtlSizeHeap+>": 2,
                "subl $, %esp;movl $, (%esp);movl %ebx, (%esp);calll - <RtlSizeHeap+>;subl $, %esp": 2,
                "orl $, %esi;movl %esi, -(%ebp);movl $, %edi;movl $, (%esp);movl %ebx, (%esp)": 5,
                "movl $, %esi;testb %al, %al;je  <VerSetConditionMask+>;movl (%ebp), %eax;movl %eax, (%esp)": 5,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <RtlSizeHeap>;subl $, %esp": 1,
                "calll - <PsEstablishWinCallouts+>;movl %fs:, %eax;movl (%eax), %eax;movl (%eax), %eax;movl (%eax), %esi": 1,
                "movl %eax, (%esp);movl $, (%esp);movl %esi, (%esp);movl $, (%esp);calll - <MmUnsecureVirtualMemory+>": 1,
                "jns  <VerSetConditionMask+>;calll - <PsEstablishWinCallouts+>;movl (%ebp), %edx;movl $, (%edx);jmp  <VerSetConditionMask+>": 1,
                "movl $, %ebx;calll - <PsEstablishWinCallouts+>;cmpl $, -(%ebp);jne  <VerSetConditionMask+>;movl $, (%esp)": 1,
                "movl %eax, (%edx);movl %ebx, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl %eax, (%esp);movl $, (%esp);calll - <NtFreeVirtualMemory>;subl $, %esp;leave": 1,
                "jbe  <VerSetConditionMask+>;movl (%esi), %ecx;leal (%ecx), %eax;shrw %dx;movzwl %dx, %edx": 1,
                "sarl %eax;movl %eax, -(%ebp);cmpw $, (%edi);je  <VerSetConditionMask+>;movl %edi, %esi": 1,
                "testl %eax, %eax;jne  <VerSetConditionMask+>;movl -(%ebp), %ebx;movl %ebx, (%esp);calll  <wcslen>": 2,
                "movl %esi, -(%ebp);movl $, %eax;jmp  <VerSetConditionMask+>;movl %edi, -(%ebp);movl $, %edi": 1,
                "movl $, %eax;cmpl $, (%ebp);je  <VerSetConditionMask+>;movl (%ebp), %esi;cmpl $, (%esi)": 1,
                "je  <VerSetConditionMask+>;movl (%ebp), %esi;cmpl $, (%esi);je  <VerSetConditionMask+>;movl %ebx, -(%ebp)": 1,
                "subl %eax, %edx;andl $-, %edx;movl %edx, (%esp);movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);movl -(%ebp), %edx;leal (%ebx,%edx,), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %ecx;movzwl (%ecx), %eax;shrw %ax;movzwl %ax, %eax;leal (%ebx,%eax,), %ebx": 1,
                "movzwl (%ecx), %eax;shrw %ax;movzwl %ax, %eax;leal (%ebx,%eax,), %ebx;movw $, (%ebx)": 1,
                "shrw %ax;movzwl %ax, %eax;leal (%ebx,%eax,), %ebx;movw $, (%ebx);addl $, %ebx": 1,
                "movl (%ebp), %ecx;movzwl (%ecx), %eax;shrw %ax;movzwl %ax, %eax;movw $, (%ebx,%eax,)": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <RtlEqualUnicodeString>": 1,
                "je  <VerSetConditionMask+>;subl %esi, %ebx;sarl %ebx;leal (%ebx,%ebx), %eax;movl (%ebp), %edx": 1,
                "movl (%ebp), %edx;movw %ax, (%edx);movzwl (%edx), %edx;movl $, %ebx;cmpw %dx, %ax": 1,
                "jbe  <VerSetConditionMask+>;movl %edx, %ecx;movl %ecx, (%esp);movl %esi, (%esp);movl (%ebp), %edx": 1,
                "movl %esi, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll  <memmove>": 1,
                "calll - <PsEstablishWinCallouts+>;jmp  <VerSetConditionMask+>;movl $, %ebx;jmp  <VerSetConditionMask+>;movl $, %ebx": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movzwl (%eax), %edx;shrw %dx": 1,
                "shrw %dx;movzwl %dx, %edi;movl (%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "movl $, -(%ebp);movl -(%ebp), %eax;cmpw $, (%eax);je  <VerSetConditionMask+>;testl %edi, %edi": 1,
                "movl %esi, %edx;subl %eax, %edx;sarl %edx;addl %edx, %edx;movw %dx, -(%ebp)": 1,
                "sarl %edx;addl %edx, %edx;movw %dx, -(%ebp);movw %dx, -(%ebp);movl %eax, -(%ebp)": 1,
                "movl %edi, %esi;movl -(%ebp), %ebx;movl $, %edi;jmp  <VerSetConditionMask+>;movl %edi, %esi": 1,
                "jne  <RtlUlonglongByteSwap+>;movl (%eax), %edx;movl %edx, (%ebp);cmpl $, (%ebp);jne  <RtlUlonglongByteSwap+>": 1,
                "cmpl (%ebp), %eax;jb  <RtlUlonglongByteSwap+>;leal (%eax), %edx;andl $, %edx;movl %edx, (%ebp)": 1,
                "leal -(%eax,%edx), %eax;negl %edx;andl %eax, %edx;movl %edx, (%ebp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <ZwQueryInformationThread>;subl $, %esp;movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl $, (%esp);movl $, (%esp);calll - <ZwSetInformationThread>;subl $, %esp": 1,
                "movl %eax, %ebx;testl %eax, %eax;js  <RtlUlonglongByteSwap+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp);movl %esi, (%esp)": 1,
                "andl $, %edi;movl %edi, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "subl $, %esp;movl %eax, %ebx;testl %eax, %eax;jns  <RtlUlonglongByteSwap+>;leal -(%ebp), %eax": 1,
                "jmp  <RtlUlonglongByteSwap+>;cmpl $, (%ebp);je  <RtlUlonglongByteSwap+>;movl -(%ebp), %eax;movl (%ebp), %edx": 1,
                "movl %eax, (%ecx);movl %edx, (%ecx);movl %ebx, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "retl $;pushl %ebp;movl %esp, %ebp;subl $, %esp;calll - <PsEstablishWinCallouts+>": 1,
                "calll - <MmUnsecureVirtualMemory+>;subl $, %esp;testl %eax, %eax;js  <RtlUlonglongByteSwap+>;cmpl $, -(%ebp)": 1,
                "subl $, %esp;testl %eax, %eax;js  <RtlUlonglongByteSwap+>;cmpl $, -(%ebp);je  <RtlUlonglongByteSwap+>": 1,
                "retl $;pushl %ebp;movl %esp, %ebp;movl %fs:, %eax;popl %ebp": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl $, (%ebx);movl (%ebp), %eax;subl $, %eax": 1,
                "je  <RtlUlonglongByteSwap+>;movl %eax, %edx;shrl %edx;shll $, %edx;addl %edi, %edx": 1,
                "movl %eax, %edx;shrl %edx;shll $, %edx;addl %edi, %edx;movl (%edx), %ecx": 2,
                "je  <RtlUlonglongByteSwap+>;movl %edi, -(%ebp);movl %esi, -(%ebp);movl %edi, %esi;jmp  <RtlUlonglongByteSwap+>": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;jmp  <RtlUlonglongByteSwap+>;movl %edi, -(%ebp);jmp  <RtlUlonglongByteSwap+>": 1,
                "movl $, %eax;jmp  <RtlUlonglongByteSwap+>;movzwl (%eax), %edx;leal (%eax,%edx), %ebx;movzwl (%eax), %edi": 1,
                "movl $, %edx;jmp  <RtlUlonglongByteSwap+>;movzwl -(%ebp), %edx;movl -(%ebp), %eax;leal (%edx,%eax), %eax": 1,
                "testl %eax, %eax;jne  <RtlUlonglongByteSwap+>;movzwl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "calll *-;testb %al, %al;jne  <RtlUlonglongByteSwap+>;movl -(%ebp), %eax;movl %eax, (%esp)": 2,
                "movl $, (%esp);calll - <DbgPrint>;movl $, %edx;jmp  <RtlUlonglongByteSwap+>;movl -(%ebp), %ecx": 1,
                "calll - <DbgPrint>;movl $, %edx;jmp  <RtlUlonglongByteSwap+>;movl -(%ebp), %ecx;cmpl $, %ecx": 1,
                "movl (%ebx), %edx;leal (%eax,%edx), %edx;movl %edx, (%eax);movl (%ebp), %edx;movl (%edx), %eax": 1,
                "addl (%ebx), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl (%eax), %eax": 1,
                "movl %eax, (%esp);calll - <ZwReadFile>;subl $, %esp;movl $, %edx;testl %eax, %eax": 1,
                "notl %eax;shrl $, %eax;leave;retl;nop": 1,
                "movl $, %eax;retl;pushl %ebx;pushl %esi;pushl %edi": 1,
                "pushl %edi;movl (%esp), %eax;pushl %ebp;pushl %eax;pushl $-": 1,
                "retl;pushl %ebp;movl %esp, %ebp;subl $, %esp;pushl %ebx": 2,
                "movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%ebx);movl (%ebx), %esi": 1,
                "je  <_except_handler+>;leal (%esi,%esi,), %ecx;cmpl $, (%edi,%ecx,);je  <_except_handler+>;pushl %esi": 1,
                "jmp  <_except_handler+>;movl $, %eax;jmp  <_except_handler+>;pushl %ebp;movl (%ebx), %ebp": 2,
                "movl (%ebx), %ebp;pushl $-;pushl %ebx;calll - <_local_unwind>;addl $, %esp": 2,
                "je  <_except_handler+>;leal (%esi,%esi,), %ecx;movl (%edi,%ecx,), %eax;orl %eax, %eax;je  <_except_handler+>": 1,
                "leal (%esi,%esi,), %ecx;movl (%edi,%ecx,), %eax;movl %eax, (%ebx);movl (%edi,%ecx,), %eax;xorl %ebx, %ebx": 1,
                "movl %eax, %ebx;movl (%esp), %ecx;movl (%esp), %edx;movl (%esp), %eax;shrl %ebx": 3,
                "mull (%esp);movl %eax, %ecx;movl (%esp), %eax;mull %esi;addl %ecx, %edx": 4,
                "incl %ebp;movl (%esp), %edx;negl %eax;negl %edx;sbbl $, %eax": 1,
                "orl %eax, %eax;jne  <_alldvrm+>;movl (%esp), %ecx;movl (%esp), %eax;xorl %edx, %edx": 1,
                "divl %ecx;movl %eax, %esi;movl %ebx, %eax;mull (%esp);movl %eax, %ecx": 2,
                "subl (%esp), %eax;sbbl (%esp), %edx;xorl %ebx, %ebx;subl (%esp), %eax;sbbl (%esp), %edx": 2,
                "andl $, %ecx;addl %ecx, %eax;jae  <_allmul+>;movl $, %eax;popl %ecx": 1,
                "movl (%esp), %eax;orl %eax, %eax;jge  <_allrem+>;incl %edi;movl (%esp), %edx": 1,
                "sbbl (%esp), %edx;decl %edi;jns  <_allrem+>;negl %edx;negl %eax": 1,
                "negl %eax;sbbl $, %edx;popl %edi;popl %ebx;retl $": 1,
                "popl %edi;popl %ebx;retl $;nop;nop": 1,
                "movl %edx, %eax;sarl $, %edx;andb $, %cl;sarl %cl, %eax;retl": 1,
                "pushl %esi;movl (%esp), %eax;orl %eax, %eax;jne  <_aulldiv+>;movl (%esp), %ecx": 1,
                "movl %edx, %eax;xorl %edx, %edx;jmp  <_aullrem+>;movl %eax, %ecx;movl (%esp), %ebx": 1,
                "xchgl %ecx, %eax;mull (%esp);addl %ecx, %edx;jb  <_aullrem+>;cmpl (%esp), %edx": 1,
                "addl %ecx, %edx;jb  <_aullrem+>;cmpl (%esp), %edx;ja  <_aullrem+>;jb  <_aullrem+>": 1,
                "movl $, -(%ebp);movb $, -(%ebp);leal -(%ebp), %ebx;movl %eax, -(%ebp);movl %eax, %edx": 1,
                "calll  <wcstombs+>;movl %eax, %esi;movl %edx, %edi;cmpl $, -(%ebp);jg  <_aullshr+>": 1,
                "subl $, %eax;movb $, -(%edx);leal -(%ebp), %edx;subl %eax, %edx;movl %edx, (%esp)": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <memmove>;movl (%ebp), %eax": 4,
                "calll  <memmove>;movl (%ebp), %eax;addl $, %esp;popl %ebx;popl %esi": 7,
                "addl $, %eax;movb %al, (%ebx);jmp  <_aullshr+>;movl %ebx, %edx;movzbl -(%ebp), %eax": 1,
                "movl %edi, %eax;orl %esi, %eax;jne - <_aullshr+>;movl %edx, %eax;cmpl $, -(%ebp)": 1,
                "cmpl $, -(%ebp);je  <_aullshr+>;subl $, %edx;movb $, -(%eax);leal -(%ebp), %ecx": 1,
                "movb %cl, (%eax);addl $, %eax;subl $, %edx;cmpl %ebx, %eax;jne - <_aullshr+>": 1,
                "jmp  <_aullshr+>;movl $, %eax;jmp  <_aullshr+>;leal -(%ebp), %ecx;subl %edx, %ecx": 1,
                "movb $, -(%ebp);leal -(%ebp), %edi;movl (%ebp), %eax;movl %eax, -(%ebp);movl %eax, %edx": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);calll  <wcstombs+>;movl %eax, %esi;movl %edx, %ebx": 2,
                "movl %edi, %eax;movzbl -(%ebp), %edx;addl $, %edx;movb %dl, (%edi);jmp  <_aullshr+>": 1,
                "movl %edi, %eax;movzbl -(%ebp), %edx;addl $, %edx;movb %dl, (%edi);subl $, %edi": 1,
                "movb %dl, (%edi);subl $, %edi;movl %ebx, %edx;orl %esi, %edx;jne - <_aullshr+>": 1,
                "movl $, %eax;cmpl $, %edx;ja  <_aullshr+>;movb $, -(%ebp);leal -(%ebp), %edi": 1,
                "movl -(%ebp), %edx;movl %eax, (%esp);movl %edx, (%esp);movl %ebx, (%esp);movl %esi, (%esp)": 4,
                "jne - <_aullshr+>;leal -(%ebp), %ecx;subl %edx, %ecx;movl $, %eax;cmpl %ecx, (%ebp)": 1,
                "subl %edx, %ecx;movl $, %eax;cmpl %ecx, (%ebp);jb  <_aullshr+>;movl %ecx, (%esp)": 1,
                "jb  <_aullshr+>;movl %ecx, (%esp);movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %edx, (%esp);calll  <memmove>;movl $, %eax;jmp  <_aullshr+>;movl $, %eax": 1,
                "movl $, -(%ebp);movb $, -(%ebp);leal -(%ebp), %ecx;movl %ebx, %eax;movl $, %edx": 2,
                "jne - <_aullshr+>;movl %edi, %eax;cmpl $, -(%ebp);je  <_aullshr+>;subl $, %edi": 1,
                "leal -(%ebp), %eax;subl %edi, %eax;movl %eax, (%esp);movl %edi, (%esp);movl (%ebp), %eax": 2,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <_aullshr+>;leave;retl": 1,
                "movl (%ebp), %eax;shrl $, %eax;testb %al, %al;je  <_itoa+>;movl (%ebp), %ebx": 1,
                "je  <_itoa+>;movl (%ebp), %ebx;negl %ebx;movl $, -(%ebp);jmp  <_itoa+>": 1,
                "negl %ebx;movl $, -(%ebp);jmp  <_itoa+>;movl (%ebp), %ebx;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <_itoa+>;movl (%ebp), %ebx;movl $, -(%ebp);movb $, -(%ebp)": 1,
                "leal -(%ebp), %edx;subl %edi, %edx;cmpl %edx, (%ebp);jae  <_itoa+>;movl (%ebp), %eax": 1,
                "jae  <_itoa+>;movl (%ebp), %eax;addl $, %eax;subl $, (%ebp);cmpl $, (%ebp)": 1,
                "addl $, %eax;subl $, %edx;cmpl %ebx, %eax;jne - <_itoa+>;movl (%ebp), %eax": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %esi;movb $, -(%ebp)": 1,
                "jg  <_itoa+>;movl %ecx, %edi;addl $, %edx;movb %dl, (%ecx);jmp  <_itoa+>": 1,
                "movl $, -(%ebp);movw $, -(%ebp);leal -(%ebp), %ebx;movl %eax, -(%ebp);movl %eax, %edx": 1,
                "cmpl $, (%ebp);je  <_itoa+>;movl (%ebp), %eax;movw $, (%eax);movl $, %eax": 1,
                "movw $, (%eax);movl $, %eax;jmp  <_itoa+>;cmpl $, (%ebp);jne  <_itoa+>": 1,
                "calll  <wcstombs+>;movl %eax, %esi;movl %edx, %edi;cmpl $, -(%ebp);ja  <_itoa+>": 1,
                "movzwl -(%ebp), %edx;addl $, %edx;movw %dx, (%ebx);jmp  <_itoa+>;movl %ebx, %eax": 1,
                "jne - <_itoa+>;movl %eax, %edx;cmpl $, -(%ebp);je  <_itoa+>;subl $, %eax": 1,
                "jae  <_itoa+>;movl (%ebp), %ecx;addl $, %ecx;subl $, (%ebp);cmpl $, (%ebp)": 1,
                "sarl %edx;movl %edx, %ebx;movl (%ebp), %ecx;cmpl %edx, (%ebp);jb - <_itoa+>": 1,
                "movl %ebx, (%esp);calll  <wcstombs+>;movl %eax, %esi;movl %edx, %ebx;cmpw $, %di": 1,
                "calll  <wcstombs+>;movl %eax, %ebx;movl %edx, %esi;cmpl $, %edi;jg  <_itoa+>": 1,
                "movl -(%ebp), %edx;addl $, %edi;movw %di, (%edx);subl $, -(%ebp);movl %esi, %eax": 1,
                "movl $, %edi;jmp  <_itoa+>;movl $, %edi;movw $, -(%ebp);leal -(%ebp), %ecx": 1,
                "jmp  <_itoa+>;movl $, %edi;movw $, -(%ebp);leal -(%ebp), %ecx;movl %ebx, %eax": 1,
                "movw $, -(%eax);cmpl $, (%ebp);je  <_itoa+>;leal -(%ebp), %eax;subl %ecx, %eax": 1,
                "cmpl $, (%ebp);je  <_itow+>;movl %eax, %edi;leal -(%eax), %edx;cmpl $, %edx": 1,
                "testb %al, %al;je  <_itow+>;movl (%ebp), %ebx;negl %ebx;movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movw $, -(%ebp);leal -(%ebp), %ecx;movl %ebx, %eax;movl %esi, -(%ebp)": 1,
                "addl $, %edx;cmpl %esi, %edx;jne - <_itow+>;movl (%ebp), %eax;movw $, (%eax)": 1,
                "addl %edx, %edx;movl %edx, (%esp);movl %edi, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpl %eax, %esi;jb - <_itow+>;jmp - <_itow+>;addl $, %esp;popl %ebx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <_itow+>;leave;retl": 1,
                "leal -(%ecx), %ecx;jmp  <_itow+>;addl $, %edx;movw %dx, -(%ecx);leal -(%ecx), %ecx": 1,
                "jmp  <_itow+>;addl $, %edx;movw %dx, -(%ecx);leal -(%ecx), %ecx;testl %eax, %eax": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;jmp  <_stricmp+>": 1,
                "movl %eax, %edi;movl (%ebp), %edx;movsbl (%edx), %eax;movl %eax, (%esp);calll  <toupper>": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;movzbl (%esi), %edx;testb %dl, %dl": 2,
                "movl %edx, (%ebp);movl %eax, (%esp);calll  <toupper>;cmpl %eax, %edi;je  <_strnicmp+>": 1,
                "calll  <toupper>;subl %eax, %esi;movl %esi, %eax;jmp  <_strnicmp+>;addl $, %esi": 1,
                "subl $, (%ebp);jne - <_strnicmp+>;movl $, %eax;jmp  <_strnicmp+>;movl $, %eax": 1,
                "addl $, %edx;cmpb $, (%edx);jne - <_strset+>;popl %ebp;retl": 1,
                "jb - <_strrev+>;movl %esi, %eax;popl %ebx;popl %esi;popl %ebp": 1,
                "movl (%ebp), %edx;movl (%ebp), %ecx;testl %ecx, %ecx;sete %bl;jne  <_vsnprintf+>": 1,
                "cmpl $, (%ebp);je  <_wcsnicmp+>;movzwl (%esi), %edi;movzwl %di, %eax;movl %eax, (%esp)": 1,
                "calll  <towupper>;cmpw %ax, -(%ebp);je  <_wcsnicmp+>;movzwl -(%ebp), %ecx;movzwl %ax, %edx": 1,
                "testl %edx, %edx;je  <_wcsnset+>;cmpw $, (%eax);je  <_wcsnset+>;movl $, %edx": 1,
                "movl $, %edx;movw %bx, (%eax,%edx,);cmpl %ecx, %edx;je  <_wcsnset+>;addl $, %edx": 1,
                "calll  <wcslen>;leal -(%ebx,%eax,), %edx;cmpl %edx, %ebx;jae  <_wcsrev+>;movl %ebx, %ecx": 1,
                "calll  <wcscmp>;leave;retl;pushl %ebp;movl %esp, %ebp": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <wcslen>;movl (%ebp), %esi;cmpl %esi, %eax": 1,
                "jae  <_wcsrev+>;leal (%esi,%esi), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %esi;movl (%ebp), %eax;testl %eax, %eax;je  <_wcsrev+>;testl %esi, %esi": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <_wcsrev+>;testl %esi, %esi;je  <_wcsrev+>": 1,
                "cmpl %edx, %esi;jae  <_wcsrev+>;movl %esi, %eax;cmpw $, (%esi);jne  <_wcsrev+>": 1,
                "addl $, %ecx;testw %bx, %bx;je  <_wcsrev+>;cmpl %edx, %eax;jb - <_wcsrev+>": 1,
                "je  <_wcsrev+>;cmpl $, (%ebp);je  <_wcsrev+>;movl $, %edi;cmpl $, (%ebp)": 1,
                "je  <_wcsrev+>;movl $, %eax;jmp  <_wcsrev+>;movl (%ebp), %edx;cmpw $, (%edx,%esi,)": 1,
                "cmpl %esi, %ebx;ja - <_wcsrev+>;jmp  <_wcsrev+>;movl $, %esi;movl $, %edi": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);calll  <wcslen>;movl (%ebp), %edx;movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl $, %edi;cmpl %eax, %edx;jbe  <_wcsrev+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %edx;movw $, (%edx);movl $, %edi;jmp  <_wcsrev+>;movl $, %edi": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;andl $, %eax;popl %ebp;retl": 1,
                "testl %eax, %eax;je  <isxdigit+>;subl $, %ebx;movl %ebx, %eax;addl $, %esp": 1,
                "movl %eax, -(%ebp);testl %edx, %edx;je  <mbtowc+>;movl $, %eax;testl %ebx, %ebx": 1,
                "subl $, %esp;movl (%ebp), %edx;movl (%ebp), %ebx;movl %ebx, %edi;movl $, %eax": 1,
                "testl %edx, %edx;jne  <mbstowcs+>;movl %ecx, (%esp);movl %ebx, (%esp);leal -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <RtlMultiByteToUnicodeSize>;subl $, %esp;movl -(%ebp), %eax;jmp  <mbstowcs+>": 1,
                "subl $, %esp;movl -(%ebp), %eax;jmp  <mbstowcs+>;movl %ecx, (%esp);movl %ebx, (%esp)": 1,
                "nop;pushl %ebp;movl %esp, %ebp;pushl %edi;movl (%ebp), %edi": 1,
                "jbe  <memmove+>;movl %ecx, %eax;addl %esi, %eax;cmpl %eax, %edi;jb  <memmove+>": 1,
                "rep  movsb (%esi), %es:(%edi);movl (%ebp), %eax;popl %edi;popl %esi;leave": 1,
                "cld;movl (%ebp), %eax;popl %edi;popl %esi;leave": 1,
                "subl $, %edi;subl $, %esi;jmp - <memmove+>;testl %ecx, %ecx;je - <memmove+>": 1,
                "jb  <memset+>;movl $, %edx;mull %edx;movl %ecx, %edx;testl $, %edi": 1,
                "movl $, %edx;mull %edx;movl %ecx, %edx;testl $, %edi;je  <memset+>": 1,
                "movl -(%ebp), %edx;leal (%edx,%edx,), %eax;addl %eax, %eax;movl %eax, -(%ebp);movl (%ebp), %esi": 1,
                "calll *%edx;testl %eax, %eax;jle  <memset+>;movl -(%ebp), %ebx;movl %esi, (%esp)": 1,
                "addl -(%ebp), %ebx;cmpl %edi, %ebx;jb  <memset+>;cmpl %edi, %esi;ja  <memset+>": 1,
                "cmpl %edi, %esi;ja  <memset+>;jmp  <memset+>;movl %edi, (%esp);movl %ebx, (%esp)": 1,
                "movl %ebx, (%esp);movl -(%ebp), %edx;calll *%edx;testl %eax, %eax;jg - <memset+>": 1,
                "testl %eax, %eax;jg - <memset+>;jmp - <memset+>;movl %esi, (%esp);movl %edi, (%esp)": 1,
                "jg - <memset+>;jmp - <memset+>;movl %esi, (%esp);movl %edi, (%esp);movl -(%ebp), %edx": 1,
                "testl %eax, %eax;jg  <memset+>;addl -(%ebp), %esi;cmpl %esi, %edi;jb - <memset+>": 1,
                "movl %esi, %edi;movl %esi, %eax;movl -(%ebp), %ecx;addl %ebx, %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %ebx;jmp - <memset+>;movl -(%ebp), %edi;addl %ebx, %edi;movl %ebx, %esi": 1,
                "jmp  <memset+>;movl -(%ebp), %ecx;cmpl %ecx, -(%ebp);ja  <memset+>;movl (%ebp), %eax": 1,
                "cmpl -(%ebp), %esi;jae - <memset+>;jmp  <memset+>;movl (%ebp), %esi;subl -(%ebp), %esi": 1,
                "movl -(%ebp), %ebx;jmp - <memset+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "jmp - <memset+>;addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "cmpl $, (%ebp);je  <qsort+>;movl (%ebp), %edx;imull %eax, %edx;addl (%ebp), %edx": 1,
                "jbe  <qsort+>;movl %edx, (%esp);movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ebp), %eax": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ebp), %eax;calll - <memset+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl %ecx, %esi;movzbl (%ebx), %ecx;movzbl (%eax), %edx;movb %dl, (%ebx)": 1,
                "jmp - <qsort+>;movl -(%ebp), %ebx;movl (%ebp), %esi;movl %ebx, %eax;subl (%ebp), %eax": 1,
                "calll *%esi;testl %eax, %eax;jg - <qsort+>;addl (%ebp), %ebx;cmpl %edi, %ebx": 1,
                "jg - <qsort+>;addl (%ebp), %ebx;cmpl %edi, %ebx;je  <qsort+>;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %esi;movzbl (%edi), %eax;movb %al, -(%ebp);movl -(%ebp), %eax;cmpl %eax, %ebx": 1,
                "movl %edx, %eax;movzbl (%eax), %edx;movb %dl, (%ecx);leal (%eax,%esi), %edx;movl %eax, %ecx": 1,
                "movl %edi, %eax;movzbl -(%ebp), %edx;movb %dl, (%eax);subl $, %edi;subl $, -(%ebp)": 1,
                "subl $, %edi;subl $, -(%ebp);cmpl -(%ebp), %edi;jne - <qsort+>;movl (%ebp), %ecx": 1,
                "subl $, -(%ebp);cmpl -(%ebp), %edi;jne - <qsort+>;movl (%ebp), %ecx;addl %ecx, -(%ebp)": 1,
                "cmpl -(%ebp), %edi;jne - <qsort+>;movl (%ebp), %ecx;addl %ecx, -(%ebp);movl -(%ebp), %edi": 1,
                "movl %edx, -;shrdl $, %edx, %eax;andl $, %eax;popl %ebp;retl": 1,
                "repne  scasb %es:(%edi), %al;decl %edi;lodsb (%esi), %al;stosb %al, %es:(%edi);testb %al, %al": 1,
                "movl (%esp), %eax;popl %edi;popl %esi;retl;nop": 6,
                "movl (%esp), %edx;cld;lodsb (%esi), %al;cmpb %al, %dl;je  <strchr+>": 1,
                "cld;lodsb (%esi), %al;scasb %es:(%edi), %al;jne  <strcmp+>;testl %eax, %eax": 1,
                "popl %esi;retl;pushl %edi;movl (%esp), %edi;xorl %eax, %eax": 1,
                "xorl %eax, %eax;stosb %al, %es:(%edi);movl (%esp), %eax;popl %edi;popl %esi": 1,
                "jmp  <strncmp+>;sbbl %eax, %eax;orb $, %al;popl %edi;popl %esi": 1,
                "orb $, %al;popl %edi;popl %esi;retl;nop": 3,
                "movl (%esp), %esi;movl (%esp), %ecx;xorl %eax, %eax;cld;decl %ecx": 2,
                "lodsb (%esi), %al;stosb %al, %es:(%edi);testb %al, %al;jne - <strncpy+>;rep  stosb %al, %es:(%edi)": 1,
                "popl %esi;retl;nop;pushl %ebp;movl %esp, %ebp": 2,
                "movl $, %ecx;movl $, %eax;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movzbl (%edx), %ecx": 2,
                "movzbl %dl, %edx;movzbl -(%ebp,%edx), %edx;andl $, %eax;btl %eax, %edx;jae  <strspn+>": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %eax;movzbl (%eax), %esi": 1,
                "movl %esi, %edx;testb %dl, %dl;je  <strstr+>;addl $, %eax;movl %eax, -(%ebp)": 1,
                "subl $, %eax;popl %esi;retl;nop;nop": 1,
                "xorl %eax, %eax;jmp  <wcscmp+>;sbbl %eax, %eax;orb $, %al;popl %edi": 1,
                "movzwl (%edx), %ecx;testw %cx, %cx;jne - <wcscspn+>;jmp  <wcscspn+>;movzwl (%edi), %ebx": 1,
                "movzwl (%edi), %ebx;movl (%ebp), %esi;testw %bx, %bx;je  <wcscspn+>;cmpw %bx, %ax": 1,
                "js  <wcsncpy+>;lodsw (%esi), %ax;stosw %ax, %es:(%edi);testw %ax, %ax;jne - <wcsncpy+>": 1,
                "stosw %ax, %es:(%edi);testw %ax, %ax;jne - <wcsncpy+>;rep  stosw %ax, %es:(%edi);movl (%esp), %eax": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %eax;movw %ax, -(%ebp)": 1,
                "nop;nop;nop;pushl %ecx;pushl %eax": 1,
                "testl %eax, (%ecx);popl %eax;popl %ecx;retl;pushl %ebp": 1,
                "popl %ecx;retl;pushl %ebp;movl %esp, %ebp;pushl %edi": 1,
                "calll - <toupper>;cmpl %eax, -(%ebp);je  <wcstombs+>;movl -(%ebp), %eax;subl %edi, %eax": 1,
                "subl %edi, %eax;jmp  <wcstombs+>;addl $, %ebx;addl $, %esi;subl $, (%ebp)": 1,
                "jmp  <wcstombs+>;addl $, %ebx;addl $, %esi;subl $, (%ebp);jne - <wcstombs+>": 1,
                "movl %esp, %ebp;movzwl (%ebp), %eax;movzbl %ah, %edx;movzwl -(%edx,%edx), %edx;movzbl %al, %eax": 1,
                "subl $, %esi;cmpl $, %esi;jbe - <wcstombs+>;jmp  <wcstombs+>;movl $, %eax": 1,
                "cmpl $, -(%ebp);je  <wcstombs+>;negl %eax;adcl $, %edx;negl %edx": 1,
                "negl %eax;adcl $, %edx;negl %edx;jmp  <wcstombs+>;movl $, %eax": 1,
                "movl %ebx, (%esp);calll - <isspace>;testl %eax, %eax;jne - <wcstombs+>;cmpl $, %ebx": 1,
                "leal (%esi), %esi;testl $, (%ebp);jne  <wcstombs+>;cmpl $, %ebx;jne  <wcstombs+>": 1,
                "jne  <wcstombs+>;cmpl $, %ebx;jne  <wcstombs+>;movzbl (%esi), %eax;andl $-, %eax": 1,
                "divl (%ebp);movl %edx, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp);movl $, %edi": 1,
                "cmpl $, -(%ebp);js  <wcstombs+>;cmpl $, -(%ebp);je  <wcstombs+>;movl %eax, %edi": 1,
                "js  <wcstombs+>;cmpl $, -(%ebp);je  <wcstombs+>;movl %eax, %edi;negl %edi": 1,
                "je  <wcstombs+>;movl %eax, %edi;negl %edi;cmpl $, (%ebp);je  <wcstombs+>": 1,
                "movl (%ebp), %eax;movl %edx, (%eax);jmp  <wcstombs+>;cmpl $, (%ebp);je - <wcstombs+>": 1,
                "movl (%ecx), %ebx;movl (%ecx), %edi;movl (%ecx), %esi;movl (%ecx), %esp;jmpl *%edx": 1,
                "jne - <wcstombs+>;movzbl (%ebx), %eax;testb %al, %al;je  <wcstombs+>;movl %eax, %edx": 1,
                "jne - <wcstombs+>;jmp  <wcstombs+>;movl %ebx, %eax;jmp  <wcstombs+>;movl %ebx, %eax": 1,
                "movl (%eax), %ecx;movb %dl, (%ecx);addl $, (%eax);subl $, (%eax);movl $, %eax": 1,
                "movl $, -(%ebp);cmpl $, (%ebp);jle  <wcstombs+>;movl (%ebp), %edx;subl $, %edx": 2,
                "fstpl (%esp);calll  <wcstombs+>;jmp  <wcstombs+>;fldz;fstpl (%esp)": 2,
                "movl $, %edi;jmp  <wcstombs+>;movl $, %edi;jmp  <wcstombs+>;movl $, %edi": 4,
                "movzwl -(%ebp), %eax;movb $, %ah;movw %ax, -(%ebp);fldcw -(%ebp);fistpll -(%ebp)": 20,
                "fldcw -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %ebx;jmp  <wcstombs+>;fsubs -": 2,
                "calll  <wcstombs+>;fstpt -(%ebp);movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp)": 2,
                "movl -(%ebp), %edx;jmp  <wcstombs+>;fsubs -;fnstcw -(%ebp);movzwl -(%ebp), %eax": 2,
                "sahf;jb  <wcstombs+>;addl $, -(%ebp);movl (%ebp), %eax;subl -(%ebp), %eax": 2,
                "sarl $, %edx;movl %ecx, %eax;sarl $, %eax;subl %eax, %edx;leal (%edx,%edx,), %eax": 2,
                "fstpt -(%ebp);jmp  <wcstombs+>;movl -(%ebp), %edi;movl %ebx, (%ebp);jmp  <wcstombs+>": 2,
                "fucompp;fnstsw %ax;sahf;jbe  <wcstombs+>;movl (%ebp), %eax": 2,
                "sahf;jbe  <wcstombs+>;movl (%ebp), %eax;movl $, (%eax);jmp  <wcstombs+>": 2,
                "testb $, (%ebp);je  <wcstombs+>;movl (%ebp), %ecx;movl $, (%ecx);fldt -(%ebp)": 2,
                "movl (%esi), %eax;leal -(%eax), %edx;movl %edx, (%esi);movl $, -(%eax);movw $, -(%eax)": 1,
                "movl (%esi), %ebx;leal -(%ebx), %eax;movl %eax, (%esi);fldt -(%ebp);fldt -": 4,
                "testb $, (%ebp);je  <wcstombs+>;jmp  <wcstombs+>;fld;fstpt -(%ebp)": 2,
                "movb %al, -(%ebx);fldt -(%ebp);fdivs -;fstpt -(%ebp);flds -": 1,
                "fdivs -;fstpt -(%ebp);flds -;fldt -(%ebp);fucom %st()": 2,
                "movl %esi, %ebx;jmp  <wcstombs+>;movzbl (%eax), %edx;leal (%eax), %ebx;testb %dl, %dl": 1,
                "movzbl (%ebx), %edx;addl $, %ebx;jmp - <wcstombs+>;movl %ebx, %eax;cmpb $, %dl": 1,
                "jmp  <wcstombs+>;movl -(%ebp), %eax;leal (%eax,%eax,), %eax;movsbl %dl, %edx;leal -(%edx,%eax,), %eax": 1,
                "movzbl (%ebx), %edx;addl $, %ebx;leal -(%edx), %ecx;cmpb $, %cl;jbe - <wcstombs+>": 1,
                "orl $, %esi;jmp  <wcstombs+>;cmpb $, %dl;je  <wcstombs+>;cmpb $, %dl": 1,
                "cmpb $, %dl;nop;jne  <wcstombs+>;cmpb $, -(%ebx);jne  <wcstombs+>": 1,
                "jmp  <wcstombs+>;cmpb $, %al;jne  <wcstombs+>;cmpb $, (%ebx);jne  <wcstombs+>": 1,
                "cmpb $, %al;je  <wcstombs+>;cmpb $, %al;jne  <wcstombs+>;movzbl (%ebx), %edx": 1,
                "leal -(%edx), %ecx;cmpb $, %cl;ja  <wcstombs+>;movzbl %cl, %ecx;jmpl *-(,%ecx,)": 1,
                "leal (%eax), %edx;movl %edx, (%ebp);movl (%eax), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 2,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);testl $, %esi;je  <wcstombs+>;movl (%ebp), %eax": 2,
                "movw $, -(%ebp);movl $, -(%ebp);jmp  <wcstombs+>;movl (%ebp), %eax;leal (%eax), %edx": 2,
                "movl (%ebp), %edx;leal (%edx), %ecx;movl %ecx, (%ebp);movl (%edx), %edx;testl %edx, %edx": 2,
                "je  <wcstombs+>;shrl %edx;movl %edx, -(%ebp);jmp  <wcstombs+>;movl (%ebp), %edx": 1,
                "leal (%edx), %ecx;movl %ecx, (%ebp);movl (%edx), %edx;movl %edx, -(%ebp);testb $, %ah": 2,
                "movl %eax, -(%ebp);cmpl $, -(%ebp);jne  <wcstombs+>;movl $, -(%ebp);andl $, %esi": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll  <wcstombs+>": 2,
                "movl -(%ebp), %edi;movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al;notl %ecx": 2,
                "movl (%edi), %ecx;movl %edx, -(%ebp);movl %ecx, -(%ebp);jmp  <wcstombs+>;testb $, %ah": 1,
                "movl %edx, -(%ebp);movl %edx, %ecx;sarl $, %ecx;movl %ecx, -(%ebp);jmp  <wcstombs+>": 2,
                "je  <wcstombs+>;movl $, -(%ebp);cmpl $, -(%ebp);jle  <wcstombs+>;subl $, -(%ebp)": 2,
                "movl $, %eax;testl $, %esi;je  <wcstombs+>;movl -(%ebp), %eax;addl $, %eax": 2,
                "movl $, %ecx;movl %edx, -(%ebp);movl %ecx, -(%ebp);jmp  <wcstombs+>;movl $, %eax": 2,
                "movl -(%ebp), %esi;movl -(%ebp), %edi;movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al": 1,
                "repne  scasb %es:(%edi), %al;notl %ecx;subl $, %ecx;movl %ecx, -(%ebp);jmp  <wcstombs+>": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %edi;movl %esi, -(%ebp);movl -(%ebp), %esi;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %eax;addl %eax, -(%ebp);movl -(%ebp), %edi;subl $, %edi;cmpl $, -(%ebp)": 2,
                "movl -(%ebp), %edi;subl $, %edi;cmpl $, -(%ebp);jle  <wcstombs+>;movl %ebx, -(%ebp)": 2,
                "subl $, %edi;cmpl $-, %edi;jne - <wcstombs+>;movl -(%ebp), %esi;movl %ebx, -(%ebp)": 2,
                "movl (%ebp), %eax;calll - <wcstombs+>;testl %eax, %eax;je  <wcstombs+>;addl $, %edi": 1,
                "movsbw (%esi,%edi), %dx;subl $, %ebx;jne - <wcstombs+>;subl $, -(%ebp);jne - <wcstombs+>": 1,
                "jmp  <wcstombs+>;movl -(%ebp), %ebx;movl $, %edi;jmp  <wcstombs+>;movl $, %edi": 1,
                "calll - <wcstombs+>;movl %eax, %edi;cmpl $-, %edi;je  <wcstombs+>;addl %edi, -(%ebp)": 1,
                "jmp  <wcstombs+>;movl %ebx, %eax;jmp  <wcstombs+>;movl %ebx, %eax;testl %edi, %edi": 1,
                "jns - <wcstombs+>;cmpl $-, %edi;setne %al;movzbl %al, %eax;subl $, %eax": 1,
                "setne %al;movzbl %al, %eax;subl $, %eax;orl %eax, -(%ebp);jmp  <wcstombs+>": 2,
                "movzbl %al, %eax;subl $, %eax;orl %eax, -(%ebp);jmp  <wcstombs+>;movl $, -(%ebp)": 2,
                "subl $, %eax;orl %eax, -(%ebp);jmp  <wcstombs+>;movl $, -(%ebp);jmp  <wcstombs+>": 2,
                "movw %dx, (%ecx);addl $, (%eax);subl $, (%eax);movl $, %eax;jmp  <wcstombs+>": 1,
                "movl %edx, %edi;movl $, %ebx;movzwl (%edi,%ebx,), %edx;movl -(%ebp), %eax;calll - <wcstombs+>": 1,
                "ja  <wcstombs+>;movzwl %ax, %eax;jmpl *-(,%eax,);movl $, %edi;jmp  <wcstombs+>": 1,
                "subl $, %eax;movl %eax, (%esi);movl $, (%esp);movl %eax, (%esp);calll - <wcscpy>": 2,
                "movl $, -(%ebp);movl %edi, %ebx;jmp  <wcstombs+>;movzwl (%eax), %edx;leal (%eax), %ebx": 1,
                "orl $, %esi;jmp  <wcstombs+>;cmpw $, %dx;jne  <wcstombs+>;orl $, %esi": 5,
                "orl $, %esi;movzwl (%ebx), %edx;addl $, %ebx;jmp - <wcstombs+>;movl %ebx, %eax": 1,
                "jmp - <wcstombs+>;movl %ebx, %eax;cmpw $, %dx;je  <wcstombs+>;leal -(%edx), %eax": 1,
                "movl (%edx), %edi;testl %edi, %edi;jns  <wcstombs+>;orl $, %esi;negl %edi": 1,
                "movl %eax, -(%ebp);jmp  <wcstombs+>;movl (%ebp), %edx;leal (%edx), %ecx;movl %ecx, (%ebp)": 1,
                "addl $, %ecx;movl %ecx, (%ebp);movl %edx, %ecx;movl (%edx), %edx;movl (%ecx), %ecx": 2,
                "movl %edx, %ecx;movl (%edx), %edx;movl (%ecx), %ecx;movl %edx, -(%ebp);movl %ecx, -(%ebp)": 2,
                "movl $, -(%ebp);movl -(%ebp), %edx;orl -(%ebp), %edx;je  <wcstombs+>;movl %eax, -(%ebp)": 1,
                "movl %edi, (%esp);calll  <wcstombs+>;movl -(%ebp), %edx;movzwl (%edx,%eax,), %eax;movw %ax, -(%ebx)": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %eax;movl %eax, (%esp);calll - <wcslen>;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <wcslen>;movl %eax, -(%ebp);jmp  <wcstombs+>": 1,
                "movl %eax, -(%ebp);jmp  <wcstombs+>;leal -(%ebx), %eax;jmp  <wcstombs+>;movl -(%ebp), %eax": 1,
                "calll - <wcslen>;movl %eax, -(%ebp);movl -(%ebp), %eax;sarl $, %eax;notl %eax": 1,
                "jne  <wcstombs+>;testl %edi, %edi;jle  <wcstombs+>;movl %ebx, -(%ebp);movl %edi, %ebx": 1,
                "movl %edi, %ebx;movl %esi, -(%ebp);movl -(%ebp), %esi;movl (%ebp), %edi;movl $, %edx": 1,
                "testl %edx, %edx;je  <wcstombs+>;movl -(%ebp), %ecx;movl (%ebp), %eax;calll - <wcstombs+>": 1,
                "calll - <wcstombs+>;movl %eax, -(%ebp);jmp  <wcstombs+>;movl -(%ebp), %esi;cmpl $, -(%ebp)": 1,
                "jmp  <wcstombs+>;movl -(%ebp), %esi;cmpl $, -(%ebp);je  <wcstombs+>;movl %ebx, -(%ebp)": 1,
                "movl %edi, %eax;calll - <wcstombs+>;testl %eax, %eax;je  <wcstombs+>;addl $, %ebx": 1,
                "movl -(%ebp), %ebx;movl $, -(%ebp);jmp  <wcstombs+>;movl %ebx, -(%ebp);movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %ebx;cmpl $-, -(%ebp);je  <wcstombs+>;movl -(%ebp), %eax;addl %eax, -(%ebp)": 1,
                "cmpl $-, -(%ebp);setne %al;movzbl %al, %eax;subl $, %eax;orl %eax, -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;fldl (%ebp);fldlg;fxch %st()": 1,
                "fldl (%ebp);fldlg;fxch %st();fylx;popl %ebp": 1,
                "fnclex;movw $, -(%ebp);fldcw -(%ebp);frndint;wait": 1,
                "movb %ah, %dl;andb $, %ah;cmpb $, %ah;je  <wcstombs+>;cmpb $, %ah": 1,
                "je  <wcstombs+>;cmpb $, %ah;je  <wcstombs+>;cmpb $, %ah;je  <wcstombs+>": 1,
                "fabs;fcompl -;fnstsw %ax;sahf;jae  <wcstombs+>": 1,
                "fucomp %st();fnstsw %ax;sahf;je  <wcstombs+>;fxch %st()": 1,
                "fnstsw %ax;andb $, %ah;cmpb $, %ah;je  <wcstombs+>;cmpb $, %ah": 1,
                "testb $, %dl;je  <wcstombs+>;testb $, %dh;je  <wcstombs+>;fld %st()": 1,
                "popl %edx;andb $, %al;je  <wcstombs+>;cmpl $, %edx;jbe  <wcstombs+>": 1,
                "movl %edx, %ecx;shrl $, %ecx;andw $, %cx;movl $, %eax;cmpw $, %cx": 1,
                "movl %ecx, %edx;cld;repne  scasb %es:(%edi), %al;sete %al;subl %ecx, %edx": 1,
                "movl (%esp), %edx;movl %edi, (%esp);movl (%esp), %ecx;movl (%esp), %edi;movl %ebx, (%esp)": 1,
                "movl (%esp), %ecx;movl (%esp), %edi;movl %ebx, (%esp);movl (%esp), %ebx;testl %edx, %edx": 1,
                "movl %eax, %ebx;movl %edi, %eax;divl %ecx;movl %ebx, %edx;jmp  <wcstombs+>": 1,
                "movl %ebx, %edx;divl %ecx;xorl %edx, %edx;jmp - <wcstombs+>;movl %edi, %ecx": 1,
                "subl %edi, %eax;shll %cl, %edx;movl %eax, %ecx;movl %edx, (%esp);movl %esi, %edx": 1,
                "shrl %cl, %edx;movl (%esp), %ecx;orl %ecx, %edx;movl %edi, %ecx;shll %cl, %esi": 1,
                "shll %cl, %esi;movl %eax, %ecx;movl %esi, (%esp);movl %ebx, %esi;shrl %cl, %esi": 1,
                "movl %esi, (%esp);movl %ebx, %esi;shrl %cl, %esi;movl %edi, %ecx;movl %edx, (%esp)": 1,
                "xorl %edx, %edx;jmp - <wcstombs+>;xorl %edx, %edx;movl $, %eax;jmp - <wcstombs+>": 1,
                "jmp - <wcstombs+>;xorl %edx, %edx;movl $, %eax;jmp - <wcstombs+>;nop": 1,
                "xorl %edx, %edx;divl %ecx;movl %eax, %esi;movl %ebx, %eax;divl %ecx": 1,
                "movl %ebx, %ecx;movl $, %eax;subl %ebx, %eax;shll %cl, %edx;movl %eax, %ecx": 1,
                "movl %eax, %ecx;movl %edx, (%esp);movl %esi, %edx;shrl %cl, %edx;movl %ebx, %ecx": 1,
                "subl $, %ebx;jmp - <wcstombs+>;nop;nop;subl $, %esp": 1,
                "nop;nop;subl $, %esp;movl %esi, (%esp);movl (%esp), %esi": 1,
                "ja  <wcstombs+>;movl %ebx, %edx;subl %ecx, %ebp;sbbl %esi, %edx;movl %ebp, %eax": 1,
                "shrl %cl, %ebp;movzbl (%esp), %ecx;orl %eax, %ebp;movl (%esp), %eax;shll %cl, %edi": 1,
                "movl (%esp), %eax;shll %cl, %edi;movl %esi, %ecx;shrl %cl, %edx;movzbl (%esp), %ecx": 1,
                "movzbl (%esp), %ecx;movl %ebx, %edx;shrl %cl, %eax;movl %esi, %ecx;shll %cl, %edx": 1,
                "shrl %cl, %edx;jmp - <wcstombs+>;cmpl %edx, %ebx;jne - <wcstombs+>;movl %edx, %ecx": 1,
                "jne - <wcstombs+>;movl %edx, %ecx;movl %eax, %edi;subl (%esp), %edi;sbbl %ebp, %ecx": 1,
                "testl %esi, %esi;js  <wcstombs+>;testl %edx, %edx;movl %ebx, %esi;movl %ecx, (%esp)": 1,
                "movl %ebx, (%esp);jne  <wcstombs+>;cmpl %ebx, %eax;jbe  <wcstombs+>;movl %ecx, %eax": 1,
                "movl %esi, %edx;movl %eax, (%esp);movl (%esp), %eax;shll %cl, %eax;movzbl (%esp), %ecx": 1,
                "movl (%esp), %eax;shll %cl, %eax;movzbl (%esp), %ecx;movl %eax, (%esp);movl (%esp), %eax": 1,
                "shll %cl, %eax;movzbl (%esp), %ecx;movl %eax, (%esp);movl (%esp), %eax;shrl %cl, %edx": 1,
                "movl %edx, %ecx;movl %eax, %edi;subl (%esp), %edi;sbbl (%esp), %ecx;jmp - <wcstombs+>": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                ".text": 1,
                "P`.data": 1,
                ".rdata": 1,
                "0@/19": 1,
                "0@.bss": 1,
                ".edata": 1,
                "0@.idata": 1,
                ".rsrc": 1,
                ".reloc": 1,
                "0B.rossym": 1,
                "f9Hrt'": 86,
                "C(9C(t": 216,
                "t0;P0w/": 1,
                "f9Prt'": 146,
                "C(9C(tG": 1,
                "G(9G(t": 20,
                "F(9F(t": 66,
                "F(9F(": 16,
                "S(9S(t": 3,
                ";C,|,": 1,
                ";S(v%": 1,
                "9B$t'": 1,
                "C(9C(": 45,
                "C49C4": 2,
                "9B<t'": 1,
                "9P@t'": 1,
                "GZ9F<t'": 1,
                "O\\9N@t'": 1,
                "9P(tE": 1,
                "9P(w+": 1,
                "C(9G$t'": 1,
                ",;S0t'": 1,
                "3ST3CP": 1,
                "CX9G4t'": 1,
                "CZ9G<t'": 1,
                "S\\9W@t'": 1,
                "Cbf9G": 1,
                "A,9B,vB9": 1,
                "q,9r,v": 1,
                "f=lht": 4,
                ":rit'": 1,
                "f=lft3f=lit-f=lht'": 4,
                "f=lfu": 2,
                ">lhto": 1,
                "f=lit=f=lhtEf=lft?": 1,
                ":lhu*": 1,
                ":lhti": 1,
                ":lit,": 1,
                "8rit'": 1,
                "3f=lit'": 1,
                "f=lfuh": 1,
                ">riuS": 1,
                ">liu0+": 1,
                "CmKbt'": 4,
                "CmKbt1": 1,
                ";CmKbt'": 2,
                "P49P4u'": 1,
                "ky02t'": 1,
                ";B4t'": 1,
                "FHf;E": 1,
                ";A4t'": 1,
                "8ky02u-": 1,
                "CHf;E": 1,
                "\\u(kE": 1,
                "9P<t'": 1,
                ";ky02u%": 1,
                ";vkt'": 1,
                "C09C0t'": 1,
                "9Pts'": 8,
                ";V8r'": 1,
                "9V8w'": 1,
                "C(9C(t&": 2,
                "S89W8r": 1,
                "C(9C(t%f": 1,
                "C(9C(t$f": 1,
                "W<6w-": 1,
                "9E sS": 1,
                "B[:A[": 1,
                "9BPux": 1,
                "N<;=0": 1,
                "+<\\t,": 1,
                "4[^_]": 7,
                "t+;{0u&": 1,
                ";C0u@": 1,
                "tL9E r": 1,
                "C09C,": 1,
                "t=f;}": 1,
                "f93u&": 1,
                "<.tg< tc": 1,
                ";F v.": 1,
                ";x$|H": 1,
                ";p vA": 1,
                "9J$t-": 1,
                ";Q vw": 1,
                ";A$|^": 1,
                ";Q vW": 1,
                ";r$|H": 1,
                ";Z vA": 1,
                "9A$t-": 1,
                "C(9C(t7f": 1,
                "A4;C4": 1,
                "3Q43A0": 1,
                "9x$uE": 1,
                "C 9C t'": 1,
                "<Kf9<su": 1,
                "8*t-f": 1,
                "$[^_]": 6,
                "@ 9C t": 1,
                "@-@t[": 1,
                "5EFI ": 2,
                "9GXu6": 1,
                "3Q$3A ": 1,
                ":\\twf": 1,
                "@.@t%f": 1,
                "j9JTte": 1,
                "H\"8H#": 1,
                "S\"8S#": 1,
                "C\"8C#}'": 1,
                "t#93u": 1,
                "x,2u!": 1,
                "R6f9Prt'": 1,
                "I6f9Hrt'": 2,
                "(9B(t": 3,
                "S6f9Prt'": 2,
                "{(;{(": 1,
                "s0;s0": 1,
                "F09F0u": 1,
                "F(9F(tR": 1,
                ":C[~'": 3,
                ":F[~'": 1,
                "9s8u'": 1,
                "C09C0t": 6,
                "{(;{(u": 1,
                "f9prt'": 7,
                "f9xrt'": 3,
                "G(9G(": 2,
                "t99H$u.9X u)9p": 1,
                "F(9F(t?": 1,
                "F(9F(tU": 1,
                "BIG u'": 1,
                "$Pool": 2,
                "BIG t'": 1,
                ";P8t'": 2,
                ";X8t'": 2,
                "9p8tI": 5,
                "9p8tL": 2,
                "p<0u'": 3,
                "p< u'": 4,
                "F' t'": 1,
                ",;^ v'": 1,
                "PP9PPt'": 1,
                "p< t;": 1,
                "@' u2": 1,
                "r7;=X": 1,
                "vD;=d": 1,
                "9P8tL": 9,
                "9H8tL": 4,
                "3MRAt'": 3,
                "p,+5P": 1,
                ";X8tI": 4,
                "r/;5X": 3,
                "9x8tI": 1,
                ";H8tI": 1,
                ";x8tI": 1,
                "V,9V0": 1,
                "C# t'": 5,
                "C  t'": 3,
                ";sPr'": 1,
                "G# t'": 1,
                "u$9_Ht": 1,
                "G' t'": 1,
                "9X8tI": 4,
                "p<`u'": 4,
                "B# t'": 1,
                ";GPr'": 1,
                ";zPr'": 1,
                "9xts'": 1,
                ";CSNTt": 1,
                ">CSNTt'": 1,
                "8CSNTtX": 1,
                "0< u'": 1,
                "p<@u'": 1,
                ";S,r9": 1,
                "@# t'": 1,
                "C  u'": 1,
                "C#@t'": 1,
                ";CSNTu": 1,
                "S(9S(tD": 1,
                "S(9S(": 2,
                "9S(t;": 1,
                "uK95H": 1,
                "C(9C(t,f": 1,
                ">INIT": 1,
                "C(9C(tFf": 1,
                "=.rsru4": 1,
                "l=POOLu>": 1,
                "CODEu": 1,
                "'=MISYu ": 1,
                "SPTEu": 1,
                ".edat": 1,
                "PAGEu;": 1,
                "C(9C(t_": 1,
                ";A v'": 2,
                ";s v'": 1,
                "@  u<": 1,
                "p<`u]": 1,
                ";^ v'": 1,
                ";F v'": 1,
                "{$MAret'": 1,
                "tI90w": 1,
                "$MAret'": 1,
                "C$MAre": 1,
                "F(9F(t~": 1,
                "D$$ @": 1,
                "X9L2Xs'": 1,
                "V,9VT|.": 1,
                "9FPv'": 1,
                ";Q,|.": 1,
                ";A(v'": 1,
                "f9Xrt'": 1,
                ";W,|.": 1,
                ";G(v'": 1,
                ";F,|,": 1,
                ";V(v%": 1,
                ";C4r'": 1,
                "ST3VT3FP": 1,
                "8CSNTtQ": 1,
                ">CSNTt(": 1,
                ";B8t,": 1,
                ";B8t>": 2,
                ";B8tv": 1,
                "D[^_]": 3,
                ";B8t3": 1,
                "G(9G(ty": 1,
                "C(9C(t0f": 1,
                "<ItN<I": 1,
                "Systf": 1,
                "=OSTRt": 1,
                "=ASTRt": 1,
                "=USTRu": 1,
                "f98uK": 1,
                "9P\\w&": 1,
                "9w\\w&": 1,
                "<[^_]": 5,
                "8038f": 1,
                "J f9H t7": 1,
                "([^_]": 1,
                "N):N(v": 1,
                "F(8F)v78E": 1,
                "K09J0": 1,
                "P$3W$": 1,
                "Ch=='": 1,
                "uT95$": 1,
                "d[^_]": 2,
                "pausf": 1,
                "4<}u'": 1,
                "(badf": 1,
                ",[^_]": 6,
                "sfenf": 1,
                "swapf": 1,
                "mwaif": 1,
                "<dwK<6": 1,
                "J<lt'": 1,
                ";<ct'": 1,
                "|[^_]": 1,
                "a<dt'": 1,
                "rflof": 10,
                "ectef": 1,
                "preff": 1,
                "t}<-uy": 1,
                "emorf": 1,
                "=RosC": 1,
                "=RosCw": 1,
                "t(=Ros ": 1,
                "5=RosD": 1,
                "=KdbR": 1,
                "0HSWt": 1,
                " [^_]": 1,
                "9B(t'": 1,
                ";\\2hs": 1,
                ";regfu=": 1,
                "?hbinu": 1,
                "f=lit": 1,
                "f=riuZf": 1,
                "f=lfu?f": 1,
                ";nkt'": 1,
                "hbinkE": 1,
                "G@@t+": 1,
                "tf;x,wj": 1,
                "Vx;Vt": 1,
                "B@@t<": 1,
                "F@@t ": 2,
                "C@@t ": 1,
                ";K`w.": 1,
                "F@@tJ": 1,
                "tS;Y$f": 1,
                "rL;Y(sG": 1,
                ";Z(r_": 1,
                "1f92u": 2,
                "f9<Bu": 1,
                "H[^_]": 1,
                "B4[_]": 1,
                "\\tAf9E": 1,
                ";PtsG": 1,
                "Xd9Phu": 1,
                "9S|sU": 2,
                "SVWUj": 1,
                ";t$(v": 1,
                "l[^_]": 3,
                "\\[^_]": 4,
                "#QNAf": 1,
                "u>XZ$": 1,
                "u:;L$": 1,
                "r/9D$": 1,
                "ub;D$": 1,
                "rG9D$": 1,
                "20140715-rUNKNOWN": 1,
                " ,,@,@D": 1,
                "Io  Hal MdlPPooLObStIrp NDdbIrpLIoOpMdl FileCMVaSeSdNtFCPoolTCPrCMNbSeTdNtFsTCPTTCPCKey ObSqIoNmIoEaTCPcNtFaNtf0SectIrpSTokeSe  ObClCcScNtFlSeAcFSfmCcWkFSimAfdCAfdEFSroNtfnUIRPNpFrNpFRSePaSeUsAcpFAcpMSeScObNmNpFsSeLuScPDEvenRqrvVadlPp  VadSVad VadLVadFBIG ": 1,
                "None yet": 1,
                "$*06<": 1,
                "*SYSTEM*": 1,
                "f.>&de6": 1,
                ")#_ck": 1,
                "*MdI.": 1,
                "uaUyA": 1,
                "CCPF: InitializePrefetecher()": 1,
                "../../ntoskrnl/cc/cacheman.c": 1,
                "WARNING:  %s at %s:%d is UNIMPLEMENTED!": 64,
                "CcGetFlushedValidData": 3,
                "CcRemapBcb": 3,
                "CcScheduleReadAhead": 3,
                "CcSetAdditionalCacheAttributes": 3,
                "CcSetBcbOwnerPointer": 3,
                "CcSetDirtyPageThreshold": 3,
                "CcSetReadAheadGranularity": 3,
                "Can't allocate CcZeroPage.": 1,
                "../../ntoskrnl/cc/copy.c": 1,
                "(%s:%d) IoPageRead failed, Status %x": 1,
                "(%s:%d) DbgPrint() failed!": 134,
                "(%s:%d) IoPageWrite failed, Status %x": 1,
                "(%s:%d) ReadCacheSegment failed, status %x": 1,
                "CcCanIWrite": 3,
                "CcDeferWrite": 3,
                "CcFastCopyRead": 3,
                "CcFastCopyWrite": 3,
                "CcWaitForCurrentLazyWriterActivity": 3,
                "../../ntoskrnl/cc/fs.c": 1,
                "FileObject": 6,
                "FileSizes": 1,
                "../../ntoskrnl/include/internal/ke_x.h": 50,
                "KeGetCurrentIrql() <= APC_LEVEL": 54,
                "GuardedMutex->Owner != Thread": 34,
                "_Thread == KeGetCurrentThread()": 70,
                "(_Thread->SpecialApcDisable <= 0) && (_Thread->SpecialApcDisable != -32768)": 39,
                "(%s:%d) Anyone has referenced a cache segment behind the new size.": 1,
                "GuardedMutex->Owner == KeGetCurrentThread()": 34,
                "KeGetCurrentThread()->SpecialApcDisable == GuardedMutex->SpecialApcDisable": 34,
                "(OldValue & GM_LOCK_BIT) == 0": 34,
                "_Thread->SpecialApcDisable < 0": 39,
                "(%s:%d) CcRosInternalFreeCacheSegment failed, status = %x": 1,
                "CcGetDirtyPages": 3,
                "CcGetLsnForFileObject": 3,
                "CcIsThereDirtyData": 3,
                "CcSetLogHandleForFile": 3,
                "../../ntoskrnl/cc/mdl.c": 1,
                "CcMdlRead": 3,
                "CcMdlWriteComplete2": 2,
                "CcMdlWriteAbort": 3,
                "CcPrepareMdlWrite": 3,
                "../../ntoskrnl/cc/pin.c": 1,
                "FileObject->SectionObjectPointer": 2,
                "FileObject->SectionObjectPointer->SharedCacheMap": 1,
                "CcUnpinDataForThread": 3,
                "(%s:%i) CacheSegment %p --RefCount=%lu, Dirty %u, PageOut %lu": 1,
                "(%s:%i) CacheSegment %p ++RefCount=%lu, Dirty %u, PageOut %lu": 1,
                "../../ntoskrnl/cc/view.c": 1,
                "SwapEntry == 0": 2,
                "MmGetReferenceCountPage(Page) == 1": 1,
                "(%s:%d) CacheMap 0x%p: new Cache Segment: 0x%p": 1,
                "(%s:%d) CacheMap 0x%p: deleting newly created Cache Segment 0x%p ( found existing one 0x%p )": 1,
                "previous == NULL || previous->FileOffset < current->FileOffset": 1,
                "(%s:%d) Enabling Tracing for CacheMap 0x%p:": 1,
                "(%s:%d)   CacheSegment 0x%p enabled, RefCount %lu, Dirty %u, PageOut %lu": 1,
                "(%s:%d) Disabling Tracing for CacheMap 0x%p:": 1,
                "(_Thread->KernelApcDisable <= 0) && (_Thread->KernelApcDisable != -32768)": 39,
                "current->Dirty": 1,
                "(%s:%d) CC: Failed to flush cache segment.": 1,
                "_Thread->KernelApcDisable < 0": 40,
                "Previous": 1,
                "(%s:%d) Bad fileoffset %x should be multiple of %x": 1,
                "(%s:%d) CacheMap 0x%p: deleting Cache Segment: 0x%p": 1,
                "!current->Dirty": 1,
                "!current->MappedCount": 1,
                "(%s:%d) Freeing dirty segment": 1,
                "Bcb->BcbRemoveListEntry.Flink != NULL": 1,
                "Bcb->BcbRemoveListEntry.Flink == NULL": 1,
                "../../ntoskrnl/cache/section/io.c": 1,
                "FileOffset": 1,
                "Buffer": 2,
                "ReadStatus": 1,
                "DeviceObject": 3,
                "../../include/ddk/wdm.h": 16,
                "Irp->CurrentLocation > 0": 12,
                "(%s:%d) Warning: Failed to wait for synchronous IRP": 1,
                "FALSE": 65,
                "(%s:%d) MiSimpleWrite failed (%x)": 1,
                "../../ntoskrnl/cache/section/data.c": 1,
                "../../ntoskrnl/include/internal/ex.h": 46,
                "Segment->Locked": 2,
                "KeGetCurrentIrql() == APC_LEVEL": 14,
                "ViewOffset.QuadPart == BaseOffset->QuadPart": 1,
                "Status != STATUS_PENDING": 1,
                "MemoryArea": 2,
                "../../ntoskrnl/cache/section/fault.c": 1,
                "(%s:%d) Found no PFN entry for page 0x%x in page entry 0x%x (segment: 0x%p, offset: %08x%08x)": 1,
                "(%s:%d) MmCreateVirtualMapping failed, not out of memory": 1,
                "(%s:%d) Page fault at high IRQL was %u": 2,
                "(%s:%d) Completed page fault handling %Ix %x": 1,
                "(%s:%d) Type %x (%p -> %p)": 1,
                "(%s:%d) Page fault at high IRQL %u, address %Ix": 1,
                "(%s:%d) Address: %p:%Ix": 1,
                "(%s:%d) Type %x DIP %x": 1,
                "(%s:%d) No memory area": 1,
                "(%s:%d) Process %p, Address %Ix": 1,
                "Status != STATUS_UNSUCCESSFUL": 1,
                "Status != STATUS_INVALID_PARAMETER": 1,
                "../../ntoskrnl/cache/section/reqtools.c": 1,
                "(%s:%d) Status: %x": 1,
                "(%s:%d) MmRequestPageMemoryConsumer failed, status = %x": 1,
                "(%s:%d) MmReadFromSwapPage failed, status = %x": 2,
                "(%s:%d) MiSwapInPage(%x,%x)": 1,
                "(%s:%d) MiWriteFilePage(%x,%x)": 1,
                "../../ntoskrnl/cache/section/sptab.c": 1,
                "PageTable": 1,
                "!IS_SWAP_FROM_SSE(Entry) || !IS_DIRTY_SSE(Entry)": 1,
                "MiSectionPageTableGet(&Segment->PageTable, Offset)": 1,
                "!OldEntry || IS_SWAP_FROM_SSE(OldEntry)": 1,
                "!Entry || IS_SWAP_FROM_SSE(Entry)": 1,
                "!IS_SWAP_FROM_SSE(OldEntry) || SWAPENTRY_FROM_SSE(OldEntry) == MM_WAIT_ENTRY": 1,
                "../../ntoskrnl/cache/section/swapout.c": 1,
                "(%s:%d) SWAP ENTRY?! (%p:%08x%08x)": 1,
                "(%s:%d) Cannot page out locked page %x with ref count %lu": 1,
                "OurPage == Required->Page[0]": 1,
                "(%s:%d) In progress page out %x": 1,
                "SectionPage == Page": 1,
                "(%s:%d) Page %x is in transit": 1,
                "(%s:%d) Wait entry ... can't continue": 1,
                "(%s:%d) bail": 1,
                "!MM_IS_WAIT_PTE(MmGetPfnForProcess(Process, Address))": 1,
                "Element": 1,
                "(%s:%d) Need to trim %lu cache pages": 1,
                "(%s:%d) Evicted %lu cache pages": 1,
                "NTDDK: Pageable code called at IRQL > APC_LEVEL (%d)": 115,
                "../../ntoskrnl/config/cmalloc.c": 1,
                "IsListEmpty(&Kcb->KeyBodyListHead) == TRUE": 2,
                "Kcb->KeyBodyArray[i] == NULL": 2,
                "((GET_HASH_ENTRY(CmpCacheTable, Kcb->ConvKey).Owner == KeGetCurrentThread())) || (CmpTestRegistryLockExclusive() == TRUE)": 1,
                "AllocPage->FreeCount != CM_KCBS_PER_PAGE": 1,
                "AllocPage->FreeCount != 0": 1,
                "CurrentKcb->PrivateAlloc == 1": 1,
                "AllocPage->FreeCount != CM_DELAYS_PER_PAGE": 1,
                "../../ntoskrnl/config/cmapi.c": 1,
                "(CmpSpecialBootCondition == TRUE) || (CmpTestRegistryLockExclusive() == TRUE)": 3,
                "(%s:%d) ERROR: Hive is frozen": 1,
                "PushLock->Locked": 26,
                "PushLock->Waiting || PushLock->Shared > 0": 11,
                "(%s:%d) FIXME: Hive is damaged and needs fixup": 1,
                "OldValue.Locked": 27,
                "Parent->ValueList.List != HCELL_NIL": 1,
                "HvIsCellDirty(Hive, ValueCell)": 2,
                "(%s:%d) Invalid user data!": 1,
                "HvIsCellDirty(Hive, CellData->u.KeyValue.Data)": 1,
                "(CmpSpecialBootCondition == TRUE) || (((PCMHIVE)Hive)->HiveIsLoading == TRUE) || (CmpTestHiveFlusherLockShared((PCMHIVE)Hive) == TRUE) || (CmpTestHiveFlusherLockExclusive((PCMHIVE)Hive) == TRUE) || (CmpTestRegistryLockExclusive() == TRUE)": 2,
                "DataCell != HCELL_NIL": 1,
                "HvGetCellSize(Hive, CellData) > 0": 1,
                "HvIsCellDirty(Hive, NewCell)": 1,
                "Big keys not supported!": 2,
                "!CmpIsKeyValueBig(Hive, Length)": 1,
                "!CmpIsKeyValueBig(Hive, DataSize)": 2,
                "Length > Offset": 1,
                "Assertion %s(%d): %s": 21,
                "../../ntoskrnl/include/internal/cm_x.h": 3,
                "CmpIsKcbLockedExclusive(k) == FALSE": 3,
                "FlusherLocked == FALSE": 1,
                "Parent": 1,
                "(CmpIsKcbLockedExclusive(Kcb) == TRUE) || (CmpTestRegistryLockExclusive() == TRUE)": 3,
                "Parent->MaxValueNameLen == Kcb->KcbMaxValueNameLen": 1,
                "Parent->MaxValueDataLen == Kcb->KcbMaxValueDataLen": 1,
                "!(CMP_IS_CELL_CACHED(Kcb->ValueCache.ValueList))": 2,
                "!(Kcb->ExtFlags & CM_KCB_SYM_LINK_FOUND)": 2,
                "Value": 3,
                "HvIsCellDirty(Hive, Parent->ValueList.List)": 1,
                "HvIsCellDirty(Hive, ChildCell)": 1,
                "HvIsCellDirty(Hive, Cell)": 1,
                "ChildCell != HCELL_NIL": 2,
                "CellToRelease == HCELL_NIL": 1,
                "ValueData == NULL": 1,
                "ValueData != NULL": 1,
                "(%s:%d) HACK: Overriding value cache count": 1,
                "CellData == NULL": 1,
                "CellToRelease2 == HCELL_NIL": 1,
                "Node->ValueList.Count == Kcb->ValueCache.Count": 1,
                "SubKeyCount == 0": 1,
                "SubKeyCount == 1": 1,
                "SubKeyCount == Kcb->IndexHint->Count": 1,
                "SubKeyCount == Kcb->SubKeyCount": 1,
                "Node->LastWriteTime.QuadPart == Kcb->KcbLastWriteTime.QuadPart": 1,
                "Node->MaxNameLen == Kcb->KcbMaxNameLen": 1,
                "Node->MaxValueNameLen == Kcb->KcbMaxValueNameLen": 1,
                "Node->MaxValueDataLen == Kcb->KcbMaxValueDataLen": 1,
                "(%s:%d) Kcb cache incoherency detected, kcb = %p": 1,
                "(%s:%d) Unsupported class: %d!": 1,
                "Child": 1,
                "Node->Flags == Kcb->Flags": 1,
                "HvIsCellDirty(Hive, ParentCell)": 1,
                "CmHive->ViewLock": 1,
                "(CmpSpecialBootCondition == TRUE) || (((PCMHIVE)CmHive)->HiveIsLoading == TRUE) || (CmpTestRegistryLockExclusive() == TRUE)": 1,
                "KeGetCurrentThread() == CmHive->ViewLockOwner": 1,
                "(%s:%d) Trusted classes not yet supported": 1,
                "(%s:%d) Security context failed": 1,
                "LoadedHive": 1,
                "(%s:%d) CmpLinkHiveToMaster failed, Status %lx": 1,
                "CmUnloadKey": 2,
                "../../ntoskrnl/config/cmboot.c": 1,
                "SystemHive->ReleaseCellRoutine == NULL": 2,
                "ControlSet%03lu": 1,
                "Hive->ReleaseCellRoutine == NULL": 2,
                "DriverTag": 1,
                "TagOrder": 1,
                "ErrorControl": 1,
                "End != NULL": 1,
                "ListNode": 1,
                "DriverCell != HCELL_NIL": 1,
                "DriverNode": 1,
                "KeyValue": 1,
                "ControlNode": 1,
                "ServicesNode": 1,
                "../../ntoskrnl/config/cmconfig.c": 1,
                "Disposition == REG_CREATED_NEW_KEY": 2,
                "Component too large -- need reallocation!": 1,
                "../../ntoskrnl/config/cmcontrl.c": 1,
                "(IsSmallKey ? (Length <= CM_KEY_VALUE_SMALL) : TRUE)": 1,
                "PCMCIA": 1,
                "MPIPI": 1,
                "../../ntoskrnl/config/cmdelay.c": 1,
                "CmpDelayDerefKCBWorkItemActive": 2,
                "CmpDelayCloseWorkItemActive": 2,
                "!IsListEmpty(&CmpDelayedLRUListHead)": 1,
                "Kcb->RefCount == 0": 2,
                "OldRefCount == 0": 1,
                "Entry": 2,
                "OldRefCount == 1": 1,
                "../../ntoskrnl/config/cmhook.c": 1,
                "(Value >= EX_RUNDOWN_COUNT_INC) || (KeNumberProcessors > 1)": 14,
                "Function && Cookie": 1,
                "../../ntoskrnl/config/cmhvlist.c": 1,
                "(&CmiVolatileHive->Hive)->ReleaseCellRoutine == NULL": 2,
                "(%s:%d) CmpGetHiveName: Unable to allocate memory": 1,
                "(%s:%d) CmpAddToHiveFileList: Creation or opening of the hive list failed, status = %08lx": 1,
                "(%s:%d) CmpAddToHiveFileList: Unable to retrieve the hive name": 1,
                "(%s:%d) CmpAddToHiveFileList: Hive file name query failed, status = %08lx": 1,
                "(%s:%d) CmpAddToHiveFileList: Setting of entry in the hive list failed, status = %08lx": 1,
                "(%s:%d) CmpRemoveFromHiveFileList: Opening of the hive list failed, status = %08lx": 1,
                "../../ntoskrnl/config/cmindex.c": 1,
                "Index->Count != 0": 1,
                "Index->Signature == CM_KEY_INDEX_ROOT": 1,
                "(Leaf->Signature == CM_KEY_INDEX_LEAF) || (Leaf->Signature == CM_KEY_FAST_LEAF) || (Leaf->Signature == CM_KEY_HASH_LEAF)": 1,
                "Leaf->Count != 0": 1,
                "(High - Low == 1) || (High == Low)": 1,
                "Result == -1": 1,
                "(Result == 1) || (Result == 0)": 1,
                "(Index->Signature == CM_KEY_INDEX_LEAF) || (Index->Signature == CM_KEY_FAST_LEAF) || (Index->Signature == CM_KEY_HASH_LEAF)": 1,
                "(Name->Length == 0) || (AllowSeparators) || (Name->Buffer[0] != OBJ_NAME_PATH_SEPARATOR)": 1,
                "AllowSeparators || (*Cp != OBJ_NAME_PATH_SEPARATOR)": 1,
                "Leaf != NULL": 1,
                "LeafCell == Index->List[i - 1]": 1,
                "Number < Index->Count": 1,
                "CellToRelease != HCELL_NIL": 1,
                "(IndexRoot->Signature == CM_KEY_INDEX_LEAF) || (IndexRoot->Signature == CM_KEY_FAST_LEAF) || (IndexRoot->Signature == CM_KEY_HASH_LEAF)": 1,
                "(Leaf->Signature == CM_KEY_FAST_LEAF) || (Leaf->Signature == CM_KEY_HASH_LEAF)": 1,
                "Child == HCELL_NIL": 1,
                "Result != 0": 1,
                "Result == 1": 1,
                "LeafKey->Signature == CM_KEY_HASH_LEAF": 1,
                "LeafKey->Signature == CM_KEY_INDEX_LEAF": 1,
                "HvGetCellType(LeafCell) == Type": 1,
                "FirstHalf != 0": 1,
                "LastHalf != 0": 1,
                "IndexKey = NULL!, it should not happen!": 1,
                "IndexKey->Signature == CM_KEY_INDEX_ROOT": 1,
                "HvIsCellDirty(Hive, TargetKey)": 1,
                "HvIsCellDirty(Hive, ParentKey)": 1,
                "Node->SubKeyCounts[Storage] != 0": 1,
                "ChildCell != FALSE": 1,
                "../../ntoskrnl/config/cminit.c": 1,
                "(%s:%d) ZwCreateFile failed : %lx.": 1,
                "../../ntoskrnl/config/cmkcbncb.c": 1,
                "(((CM_KEY_CONTROL_BLOCK *)(((ULONG_PTR)(KeyHash)) - (ULONG_PTR)(&(((CM_KEY_CONTROL_BLOCK *)0)->KeyHash)))))->Signature == CM_KCB_SIGNATURE": 1,
                "Current != NULL": 1,
                "(((CM_KEY_CONTROL_BLOCK *)(((ULONG_PTR)(Current)) - (ULONG_PTR)(&(((CM_KEY_CONTROL_BLOCK *)0)->KeyHash)))))->Signature == CM_KCB_SIGNATURE": 1,
                "(((CM_KEY_CONTROL_BLOCK *)(((ULONG_PTR)(*Prev)) - (ULONG_PTR)(&(((CM_KEY_CONTROL_BLOCK *)0)->KeyHash)))))->Signature == CM_KCB_SIGNATURE": 1,
                "(((CM_KEY_CONTROL_BLOCK *)(((ULONG_PTR)(Entry)) - (ULONG_PTR)(&(((CM_KEY_CONTROL_BLOCK *)0)->KeyHash)))))->Signature == CM_KCB_SIGNATURE": 1,
                "Ncb->RefCount != 0xFFFF": 1,
                "Ncb->RefCount >= 1": 1,
                "(Kcb->DelayedCloseIndex == CmpDelayedCloseSize) || (Kcb->DelayedCloseIndex == 0)": 1,
                "Kcb->Delete": 1,
                "(Kcb)->Signature == CM_KCB_SIGNATURE": 1,
                "!FoundKcb->Delete": 1,
                "(FoundKcb)->Signature == CM_KCB_SIGNATURE": 1,
                "Kcb->RefCount + 1 != 0": 1,
                "(!Kcb) || (Kcb->Delete == FALSE)": 1,
                "NodeName.Length > 0": 1,
                "KeyBody->KeyControlBlock != NULL": 1,
                "!(Flags & CMP_ENLIST_KCB_LOCKED_EXCLUSIVE)": 1,
                "(CmpIsKcbLockedExclusive(KeyBody->KeyControlBlock) == TRUE) || (CmpTestRegistryLockExclusive() == TRUE)": 1,
                "IsListEmpty(&KeyBody->KeyControlBlock->KeyBodyListHead) == FALSE": 1,
                "IsListEmpty(&KeyBody->KeyBodyList) == FALSE": 1,
                "KeyBody->Type == '20yk'": 1,
                "KeyBody->NotifyBlock == NULL": 1,
                "../../ntoskrnl/config/cmkeydel.c": 1,
                "CellData->u.KeyNode.SubKeyCounts[Stable] == 0": 1,
                "CellData->u.KeyNode.SubKeyCounts[Volatile] == 0": 1,
                "ValueData": 1,
                "(CellData->u.KeyNode.SubKeyCounts[Stable] + CellData->u.KeyNode.SubKeyCounts[Volatile]) == 0": 1,
                "../../ntoskrnl/config/cmlazy.c": 1,
                "(%s:%d) Flushing: %wZ": 1,
                "(%s:%d) Handle: %p": 1,
                "CmHive->FlushCount == CmpLazyFlushCount": 1,
                "(%s:%d) Lazy flush held. Bye bye.": 1,
                "../../ntoskrnl/config/cmparse.c": 1,
                "LinkCell != HCELL_NIL": 1,
                "Kcb->RefCount == 1": 1,
                "Cell == ParentKcb->KeyCell": 1,
                "KeyBody->KeyControlBlock->ParentKcb->KeyCell == Cell": 1,
                "KeyBody->KeyControlBlock->ParentKcb->KeyHive == Hive": 1,
                "KeyBody->KeyControlBlock->ParentKcb == ParentKcb": 1,
                "KeyBody->KeyControlBlock->ParentKcb->KcbMaxNameLen == KeyNode->MaxNameLen": 1,
                "(%s:%d) Invalid link node attempt": 1,
                "*ReleaseHive != NULL": 1,
                "(*Kcb)->RefCount > 0": 1,
                "Kcb != NULL": 1,
                "ParentKcb != NULL": 1,
                "Caching not implemented": 1,
                "../../ntoskrnl/config/cmse.c": 1,
                "RtlValidSid(Sid[0])": 1,
                "RtlValidSid(Sid[1])": 1,
                "RtlValidSid(Sid[2])": 1,
                "RtlValidSid(Sid[3])": 1,
                "NT_SUCCESS(Status)": 11,
                "../../ntoskrnl/config/cmsysini.c": 1,
                "(%s:%d) CM: CmpLinkKeyToHive: couldn't create %S Status = 0x%lx": 1,
                "(%s:%d) CM: CmpLinkKeyToHive: %S already exists!": 1,
                "(%s:%d) CM: CmpLinkKeyToHive: couldn't create symbolic link for %S": 1,
                "LoaderBlock != NULL": 1,
                "\\Registry\\Machine\\System\\ControlSet%03ld": 1,
                "%04ld": 1,
                "Status == STATUS_SUCCESS": 6,
                "\\Registry\\Machine\\System\\CurrentControlSet\\Hardware Profiles\\%04ld": 1,
                "STATUS_SUCCESS == Status": 1,
                "CmpMachineHiveList[i].Name != NULL": 1,
                "CmpMachineHiveList[i].CmHive == CmpMachineHiveList[i].CmHive2": 1,
                "CmpMachineHiveList[i].Name == NULL": 1,
                "CmpLoadWorkerIncrement == CM_NUMBER_OF_MACHINE_HIVES": 1,
                "CmpMachineHiveList[i].ThreadFinished == TRUE": 1,
                "CmpMachineHiveList[i].ThreadStarted == TRUE": 1,
                "CmpMachineHiveList[i].CmHive2 != NULL": 1,
                "CmpFlushStarveWriters == 0": 1,
                "(CmpSpecialBootCondition == TRUE) || (((PCMHIVE)Hive)->HiveIsLoading == TRUE) || (CmpTestRegistryLock() == TRUE)": 1,
                "(ExIsResourceAcquiredShared(Hive->FlusherLock) == 0) && (ExIsResourceAcquiredExclusiveLite(Hive->FlusherLock) == 0)": 1,
                "(CmpSpecialBootCondition == TRUE) || (CmpTestRegistryLock() == TRUE)": 1,
                "(GET_HASH_ENTRY(CmpCacheTable, ConvKey2).Owner == KeGetCurrentThread()) || (CmpTestRegistryLockExclusive())": 1,
                "(GET_HASH_ENTRY(CmpCacheTable, ConvKey1).Owner == KeGetCurrentThread()) || (CmpTestRegistryLockExclusive())": 1,
                "(%s:%d) Failed to create key %wZ (Status: %08lx)": 1,
                "Cached Values Not Yet Supported!": 1,
                "../../ntoskrnl/config/cmvalche.c": 1,
                "(ValueKey->u.KeyValue.DataLength & CM_KEY_VALUE_SPECIAL_SIZE) == 0": 1,
                "*Allocated == FALSE": 1,
                "*DataPointer == NULL": 1,
                "(SearchResult == SearchFail) || !(CmpIsKcbLockedExclusive(Kcb))": 1,
                "Cell == HCELL_NIL": 1,
                "Buffer == NULL": 2,
                "BufferAllocated == FALSE": 2,
                "(IsSmall ? (Size <= CM_KEY_VALUE_SMALL) : TRUE)": 1,
                "(%s:%d) Caller requested unknown class: %lx": 1,
                "!CmpIsKcbLockedExclusive(Kcb)": 1,
                "ValueCellToRelease == HCELL_NIL": 1,
                "Value == NULL": 2,
                "../../ntoskrnl/config/cmvalue.c": 1,
                "!CmpIsKeyValueBig(Hive, KeySize)": 1,
                "CellIndex == HCELL_NIL": 1,
                "Value->Signature == CM_KEY_VALUE_SIGNATURE": 1,
                "!CmpIsKeyValueBig(Hive, *Length)": 1,
                "(((LONG)Index) >= 0) && (Index <= ChildList->Count)": 1,
                "HvIsCellDirty(Hive, ChildList->List)": 1,
                "CellData != NULL": 1,
                "DataSize > CM_KEY_VALUE_SMALL": 1,
                "HvIsCellDirty(Hive, CellData->u.KeyList[Index])": 1,
                "NewCell != HCELL_NIL": 1,
                "../../ntoskrnl/config/ntapi.c": 1,
                "(%s:%d) Restore Privilege missing!": 1,
                "Boot took %I64u cycles!": 2,
                "Interrupts: %u System Calls: %u Context Switches: %u": 2,
                "NtCompactKeys": 2,
                "NtCompressKey": 2,
                "NtLockProductActivationKeys": 2,
                "NtLockRegistryKey": 2,
                "NtNotifyChangeMultipleKeys": 2,
                "NtQueryMultipleValueKey": 2,
                "NtQueryOpenSubKeysEx": 2,
                "NtRenameKey": 2,
                "NtReplaceKey": 2,
                "NtRestoreKey": 2,
                "NtSaveKey": 2,
                "NtSaveKeyEx": 2,
                "NtSaveMergedKeys": 2,
                "NtSetInformationKey": 2,
                "NtUnloadKey2": 2,
                "NtUnloadKeyEx": 2,
                "../../ntoskrnl/dbgk/dbgkobj.c": 1,
                "IsListEmpty(&((PDEBUG_OBJECT)DebugObject)->EventList)": 1,
                "../../ntoskrnl/dbgk/dbgkutil.c": 1,
                "Thread == PsGetCurrentThread()": 2,
                "../../ntoskrnl/ex/atom.c": 1,
                "(%s:%d) Atom name too long": 1,
                "(%s:%d) Buffer too small": 1,
                "../../ntoskrnl/ex/callback.c": 1,
                "IsListEmpty(&((PCALLBACK_OBJECT)Object)->RegisteredCallbacks)": 1,
                "Object != NULL": 3,
                "!(((ULONG_PTR)Object) & MAX_FAST_REFS)": 3,
                "(%s:%d) Unhandled callback race condition": 1,
                "Callback block is already undergoing rundown": 1,
                "CallbackFunction": 1,
                "KeGetCurrentIrql()<=(2)": 12,
                "../../ntoskrnl/ex/efi.c": 1,
                "NtAddBootEntry": 2,
                "NtAddDriverEntry": 2,
                "NtDeleteBootEntry": 2,
                "NtDeleteDriverEntry": 2,
                "NtEnumerateBootEntries": 2,
                "NtEnumerateDriverEntries": 2,
                "NtModifyBootEntry": 2,
                "NtModifyDriverEntry": 2,
                "NtQueryBootEntryOrder": 2,
                "NtQueryDriverEntryOrder": 2,
                "NtQueryBootOptions": 2,
                "NtSetBootEntryOrder": 2,
                "NtSetDriverEntryOrder": 2,
                "NtSetBootOptions": 2,
                "NtTranslateFilePath": 2,
                "../../ntoskrnl/ex/event.c": 1,
                "../../ntoskrnl/ex/evtpair.c": 1,
                "(%s:%d) NtSetHighEventPair(EventPairHandle 0x%p)": 1,
                "../../ntoskrnl/ex/exintrin.c": 1,
                "(Alignment == 1) || (Alignment == 2) || (Alignment == 4) || (Alignment == 8) || (Alignment == 16)": 1,
                "(KeGetCurrentIrql() == APC_LEVEL) || (Thread->CombinedApcDisable != 0) || (Thread->Teb == NULL) || (Thread->Teb >= (PTEB)MM_SYSTEM_RANGE_START)": 2,
                "FastMutex->Owner != Thread": 2,
                "(KeGetCurrentIrql() == APC_LEVEL) || (KeGetCurrentThread()->CombinedApcDisable != 0) || (KeGetCurrentThread()->Teb == NULL) || (KeGetCurrentThread()->Teb >= (PTEB)MM_SYSTEM_RANGE_START)": 2,
                "FastMutex->Owner == KeGetCurrentThread()": 2,
                "../../ntoskrnl/ex/handle.c": 1,
                "HandleTableEntry->Object == NULL": 1,
                "HandleTableEntry == ExpLookupHandleTableEntry(HandleTable, Handle)": 1,
                "(OldValue & FREE_HANDLE_MASK) < HandleTable->NextHandleNeedingPool": 1,
                "PushLock->Waiting || PushLock->Shared == 0": 12,
                "OldValue.Waiting || OldValue.Shared == 0": 13,
                "(NewValue & FREE_HANDLE_MASK) < HandleTable->NextHandleNeedingPool": 1,
                "(KeGetCurrentThread()->CombinedApcDisable != 0) || (KeGetCurrentIrql() == APC_LEVEL)": 1,
                "(OldValue & EXHANDLE_TABLE_ENTRY_LOCK_BIT) == 0": 1,
                "(HandleTableEntry->Value & EXHANDLE_TABLE_ENTRY_LOCK_BIT) == 0": 1,
                "(((ULONG_PTR)Object) & EXHANDLE_TABLE_ENTRY_LOCK_BIT) == 0": 1,
                "../../ntoskrnl/ex/harderr.c": 1,
                "NumberOfParameters <= MAXIMUM_HARDERROR_PARAMETERS": 1,
                "(%s:%d) NtSetDefaultHardErrorPort: Caller requires the SeTcbPrivilege privilege!": 1,
                "../../ntoskrnl/ex/hdlsterm.c": 1,
                "(%s:%d) Failed to initialize port through cportlib": 1,
                "(%s:%d) EMS on Port %lu (0x%p) at %lu bps": 1,
                "(%s:%d) PCI Serial Ports not supported": 1,
                "(%s:%d) FIXME: No Headless logging support": 1,
                "(%s:%d) Please use other baud rate than 9600bps for now": 1,
                "HeadlessGlobals != NULL": 1,
                "HeadlessGlobals->InBugCheck == TRUE": 1,
                "(%s:%d) Invalid buffer": 1,
                "HeadlessGlobals->ProcessingCmd == TRUE": 1,
                "HdlspPutString": 2,
                "HdlspDispatch": 2,
                "\\SystemRoot": 2,
                "\\ArcName\\%s%s": 1,
                "../../ntoskrnl/ex/init.c": 1,
                "NlsTablesEncountered < 4": 1,
                "SectionBase >= MmSystemRangeStart": 1,
                "(%s:%d) Executive: Event initialization failed": 1,
                "(%s:%d) Executive: Event Pair initialization failed": 1,
                "(%s:%d) Executive: Mutant initialization failed": 1,
                "(%s:%d) Executive: Callback initialization failed": 1,
                "(%s:%d) Executive: Semaphore initialization failed": 1,
                "(%s:%d) Executive: Timer initialization failed": 1,
                "(%s:%d) Executive: Profile initialization failed": 1,
                "(%s:%d) Executive: Keyed event initialization failed": 1,
                "(%s:%d) Executive: Win32 initialization failed": 1,
                "%S\\System32\\Drivers\\%wZ": 1,
                "(%s:%d) Burn RAM amount: %lu pages": 1,
                "net(0)": 1,
                "!_memicmp(LoaderBlock->ArcBootDeviceName, \"net(0)\", 6)": 1,
                "PERFMEM": 1,
                "(%s:%d) BBT performance mode not yet supported./PERFMEM option ignored.": 1,
                "BURNMEMORY": 1,
                "%Z %u%c": 1,
                "CSD %04x": 1,
                "%u.%u": 1,
                "(%s:%d) Kernel-mode stack trace support not yet present.FLG_KERNEL_STACK_TRACE_DB flag ignored.": 1,
                "(%s:%d) Kernel-mode exception logging support not yet present.FLG_ENABLE_EXCEPTION_LOGGING flag ignored.": 1,
                "REACTOS (R)": 1,
                "%u System Processor [%u MB Memory] %Z": 2,
                "NOGUIBOOT": 1,
                "MININT": 1,
                "INRAM": 1,
                ": %wZ": 1,
                "MultiProcessor Kernel": 2,
                "SAFEBOOT:": 1,
                "MINIMAL": 1,
                "NETWORK": 1,
                "DSREPAIR": 1,
                "(ALTERNATESHELL)": 1,
                "(%s:%d) Free non-cache pages: %lx": 2,
                "(%s:%d) INIT: Session Manager terminated.": 1,
                "BOOTLOG": 1,
                "../../ntoskrnl/ex/keyedevt.c": 1,
                "../../ntoskrnl/ex/locale.c": 1,
                "../../ntoskrnl/ex/mutant.c": 1,
                "../../ntoskrnl/ex/profile.c": 1,
                "State != FALSE": 1,
                "(%s:%d) Bucket size invalid": 1,
                "(%s:%d) Bucket size too small": 1,
                "(%s:%d) Range too big": 1,
                "(%s:%d) NtCreateProfile: Caller requires the SeSystemProfilePrivilege privilege!": 1,
                "../../ntoskrnl/ex/pushlock.c": 1,
                "!OldValue.MultipleShared": 1,
                "!NewValue.Waking": 1,
                "NewValue.Locked": 1,
                "NewValue.Waiting": 1,
                "FirstWaitBlock != WaitBlock": 1,
                "PushLock->Waiting": 1,
                "!WaitBlock->Signaled": 1,
                "((ULONG_PTR)pWaitBlock & 0xF) == 0": 1,
                "WaitBlock->Signaled": 1,
                "(WaitBlock->ShareCount == 0)": 1,
                "WaitBlock->Flags & EX_PUSH_LOCK_FLAGS_EXCLUSIVE": 1,
                "NewValue.Waking && !NewValue.Locked && !NewValue.MultipleShared": 1,
                "WaitBlock->ShareCount > 0": 1,
                "NewValue.Waking && !NewValue.Locked": 1,
                "NewValue.Waking && !NewValue.Waiting": 1,
                "../../ntoskrnl/ex/resource.c": 1,
                "(((ULONG_PTR)Resource) & (sizeof(ULONG_PTR) - 1)) == 0": 1,
                "!Resource->SharedWaiters || Resource->SharedWaiters->Header.Type == SemaphoreObject": 1,
                "!Resource->SharedWaiters || Resource->SharedWaiters->Header.Size == (sizeof(KSEMAPHORE) / sizeof(ULONG))": 1,
                "!Resource->ExclusiveWaiters || Resource->ExclusiveWaiters->Header.Type == SynchronizationEvent": 1,
                "!Resource->ExclusiveWaiters || Resource->ExclusiveWaiters->Header.Size == (sizeof(KEVENT) / sizeof(ULONG))": 1,
                "(%s:%d) EX: resource: APCs still enabled before resource %p acquire !!!": 1,
                "(%s:%d) WARNING: Handling race condition": 1,
                "LockHandle != 0": 1,
                "Resource->OwnerEntry.OwnerThread != 0": 1,
                "KeGetCurrentIrql() >= DISPATCH_LEVEL": 15,
                "ExclusiveWaiter ": 1,
                "SharedWaiter ": 1,
                "IsOwnedExclusive ": 1,
                "(%s:%d) Resource @ %p": 1,
                "(%s:%d)  ActiveEntries = %04lx  Flags = %s%s%s": 1,
                "(%s:%d)  NumberOfExclusiveWaiters = %04lx": 1,
                "(%s:%d)    Thread = %08lx, Count = %02x": 1,
                "(%s:%d) EX - Rewaiting": 1,
                "(Resource->Flag & ResourceNeverExclusive) == 0": 1,
                "KeIsExecutingDpc() == FALSE": 2,
                "Resource->ActiveCount == 0": 1,
                "Owner->OwnerCount != 0": 1,
                "Resource->ActiveCount == 1": 1,
                "IsOwnedExclusive(Resource) == FALSE": 1,
                "Resource->ActiveEntries > 0": 1,
                "Owner->OwnerThread != Thread": 1,
                "IsOwnedExclusive(Resource)": 1,
                "Resource->OwnerEntry.OwnerThread == (ERESOURCE_THREAD)PsGetCurrentThread()": 1,
                "IsSharedWaiting(Resource) == FALSE": 1,
                "IsExclusiveWaiting(Resource) == FALSE": 1,
                "Thread != 0": 1,
                "Resource->OwnerEntry.OwnerThread == Thread": 1,
                "Resource->ActiveEntries == 1": 1,
                "Owner != NULL": 1,
                "Owner->OwnerThread == Thread": 1,
                "Owner->OwnerCount > 0": 1,
                "(OwnerPointer != 0) && (((ULONG_PTR)OwnerPointer & 3) == 3)": 1,
                "Resource->OwnerEntry.OwnerCount > 0": 1,
                "Resource->ActiveEntries >= 2": 1,
                "../../ntoskrnl/ex/rundown.c": 1,
                "(RunRef->Count & EX_RUNDOWN_ACTIVE) != 0": 2,
                "(WaitBlock->Count > 0) || (KeNumberProcessors > 1)": 1,
                "(Value >= EX_RUNDOWN_COUNT_INC * Count) || (KeNumberProcessors > 1)": 1,
                "(WaitBlock->Count >= Count) || (KeNumberProcessors > 1)": 1,
                "(Value & EX_RUNDOWN_ACTIVE) == 0": 1,
                "WaitBlock.Count == 0": 1,
                "ExfAcquireRundownProtectionCacheAware": 2,
                "ExfAcquireRundownProtectionCacheAwareEx": 2,
                "ExfReleaseRundownProtectionCacheAware": 2,
                "ExfReleaseRundownProtectionCacheAwareEx": 2,
                "ExfWaitForRundownProtectionReleaseCacheAware": 2,
                "ExfRundownCompletedCacheAware": 2,
                "ExfReInitializeRundownProtectionCacheAware": 2,
                "ExAllocateCacheAwareRundownProtection": 3,
                "ExFreeCacheAwareRundownProtection": 3,
                "ExInitializeRundownProtectionCacheAware": 3,
                "ExSizeOfRundownProtectionCacheAware": 3,
                "../../ntoskrnl/ex/sem.c": 1,
                "../../ntoskrnl/ex/shutdown.c": 1,
                "(%s:%d) Setting state to: %lx": 1,
                "../../ntoskrnl/ex/sysinfo.c": 1,
                "(%s:%d) NtQuerySystemInformation - SystemSessionProcessInformation not implemented": 1,
                "(%s:%d) NtSetSystemInformation - SystemAddVerifier not implemented": 1,
                "(%s:%d) NtSetSystemInformation - SystemVerifierInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemVerifierInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemInvalidInfoClass4 not implemented": 1,
                "(%s:%d) NtSetSystemInformation - SystemSetTimSlipEvent not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemLookasideInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemProcessorSpeedInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemPowerInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemDockInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemPlugPlayBusInformation not implemented": 1,
                "(%s:%d) NtSetSystemInformation - SystemPrioritySeperation not implemented": 1,
                "(%s:%d) NtSetSystemInformation - SystemRegistryQuotaInformation not implemented": 1,
                "(%s:%d) Faking max registry size of 32 MB": 1,
                "(%s:%d) NtQuerySystemInformation - SystemCrashDumpStateInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemCrashDumpInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemEventIdsInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemNextEventIdInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemSummaryMemoryInformation not implemented": 1,
                "(%s:%d) NtSetSystemInformation - SystemDpcBehaviourInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemDpcBehaviourInformation not implemented": 1,
                "(%s:%d) NtSetSystemInformation - SystemFileCacheInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemVdmBopInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemVdmInstemulInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemObjectInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemNonPagedPoolInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemPagedPoolInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemStackTraceInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemLocksInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemCallTimeInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemCallCountInformation not implemented": 1,
                "(%s:%d) NtQuerySystemInformation - SystemPathInformation not implemented": 1,
                "KeGetCurrentIrql() == PASSIVE_LEVEL": 7,
                "(%s:%d) Process %p (%s:%p) is a zombie": 1,
                "../../include/reactos/probe.h": 4,
                "Dest != NULL": 4,
                "(%s:%d) NtQuerySystemEnvironmentValue: Caller requires the SeSystemEnvironmentPrivilege privilege!": 1,
                "(%s:%d) NtSetSystemEnvironmentValue: Caller requires the SeSystemEnvironmentPrivilege privilege!": 1,
                "NtEnumerateSystemEnvironmentValuesEx": 2,
                "NtQuerySystemEnvironmentValueEx": 2,
                "NtSetSystemEnvironmentValueEx": 2,
                "../../ntoskrnl/ex/time.c": 1,
                "(%s:%d) NtSetSystemTime: Caller requires the SeSystemtimePrivilege privilege!": 1,
                "../../ntoskrnl/ex/timer.c": 1,
                "../../ntoskrnl/ex/uuid.c": 1,
                "ExUuidCreate": 3,
                "../../ntoskrnl/ex/win32k.c": 1,
                "(%s:%d) Could not attach to 0x%p, object %p, callout 0x%p": 1,
                "../../ntoskrnl/ex/work.c": 1,
                "Thread->ExWorkerCanWaitUser == 0": 1,
                "(ULONG_PTR)WorkItem->WorkerRoutine > MmUserProbeAddress": 1,
                "(%s:%d) Warning: Broken Worker Thread: %p %p %p came back with APCs disabled!": 1,
                "Queue->DynamicThreadCount <= 16": 1,
                "(%s:%d) EX: Work Queue Deadlock detected: %lu": 1,
                "(%s:%d) Dynamic threads queued %d": 1,
                "(%s:%d) EX: Creating new dynamic thread as requested": 1,
                "(%s:%d) System shutdown": 1,
                "ExpLastWorkerThread": 2,
                "QueueType < MaximumWorkQueue": 1,
                "WorkItem->List.Flink == NULL": 1,
                "!WorkQueue->Info.QueueDisabled": 1,
                "(%s:%d) Requesting a new thread. CurrentCount: %lu. MaxCount: %lu": 1,
                "XIPBOOT": 1,
                "XIPRAM=": 1,
                "XIPROM=": 1,
                "XIPMEGS=": 1,
                "XIPVERBOSE": 1,
                "12:24:49": 1,
                "Jul 15 2014": 1,
                "../../ntoskrnl/ex/xipdisp.c": 1,
                "XIP: debug timestamp at line %d in %s:   <<<%s %s>>>": 1,
                "(%s:%d) ReactOS does not yet support eXecute In Place boot technology": 1,
                "(%s:%d) %s MB requested (XIP = %s)": 1,
                "../../ntoskrnl/ex/zone.c": 1,
                "(%s:%d) Invalid ExExtendZone Alignment and/or Size": 1,
                "(%s:%d) Invalid ExInitializeZone Alignment and/or Size": 1,
                "../../ntoskrnl/fsrtl/dbcsname.c": 1,
                "Name->Length": 1,
                "Expression->Length": 1,
                "!FsRtlDoesDbcsContainWildCards(Name)": 1,
                "../../ntoskrnl/fsrtl/fastio.c": 1,
                "FileObject->FsContext": 1,
                "!KeIsExecutingDpc()": 1,
                "FastIoDispatch != NULL": 1,
                "FastIoDispatch->FastIoCheckIfPossible != NULL": 1,
                "(ULONGLONG)FcbHeader->FileSize.QuadPart >= ((ULONGLONG)FileOffset->QuadPart + IoStatus->Information)": 1,
                "(IoStatus->Status == STATUS_END_OF_FILE) || (((ULONGLONG)FileOffset->QuadPart + IoStatus->Information) <= (ULONGLONG)FcbHeader->FileSize.QuadPart)": 1,
                "MAXLONGLONG - FileOffset->QuadPart >= (LONGLONG)Length": 1,
                "../../ntoskrnl/fsrtl/faulttol.c": 1,
                "Irp->CurrentLocation <= Irp->StackCount + 1": 6,
                "../../ntoskrnl/fsrtl/filelock.c": 1,
                "RemovedOld": 1,
                "InsertedNew": 1,
                "IoStackLocation->MajorFunction == IRP_MJ_LOCK_CONTROL": 1,
                "../../ntoskrnl/fsrtl/filtrctx.c": 1,
                "IoChangeFileObjectFilterContext(FileObject, FOContext, FALSE) == STATUS_SUCCESS": 1,
                "IsListEmpty(&(FOContext->FilterContexts))": 1,
                "AdvFcbHeader": 1,
                "FlagOn(AdvFcbHeader->Flags2, FSRTL_FLAG2_SUPPORTS_FILTER_CONTEXTS)": 1,
                "PerStreamContext->FreeCallback": 1,
                "../../ntoskrnl/fsrtl/fsrtlpc.c": 1,
                "../../ntoskrnl/fsrtl/largemcb.c": 1,
                "Res != GenericEqual": 1,
                "RunFoundHigher == NULL": 1,
                "RunFoundLower != NULL": 1,
                "FoundRun == NULL": 1,
                "run_compare_func_last_b_run == NULL": 1,
                "run_compare_func_last_a_run != &NeedleRunTop": 1,
                "run_compare_func_last_b_run == &NeedleRunTop": 1,
                "Runs > 0": 1,
                "HaystackRun->RunEndVbn.QuadPart > NeedleRun.RunStartVbn.QuadPart": 1,
                "HaystackRun->RunStartVbn.QuadPart < NeedleRun.RunEndVbn.QuadPart": 1,
                "NeedleRun.RunStartVbn.QuadPart >= HaystackRun->RunStartVbn.QuadPart": 1,
                "NeedleRun.RunEndVbn.QuadPart <= HaystackRun->RunEndVbn.QuadPart": 1,
                "LowerRun->RunEndVbn.QuadPart == Node.RunStartVbn.QuadPart": 1,
                "HigherRun->RunStartVbn.QuadPart == Node.RunEndVbn.QuadPart": 1,
                "NewElement": 1,
                "Run->RunEndVbn.QuadPart + Amount > Run->RunEndVbn.QuadPart": 1,
                "ExistingRun == NULL": 1,
                "../../ntoskrnl/fsrtl/name.c": 1,
                "!IgnoreCase || UpcaseTable": 1,
                "IntExpression.Buffer[ExpressionPosition] == UpcaseTable[IntExpression.Buffer[ExpressionPosition]]": 1,
                "../../ntoskrnl/fsrtl/notify.c": 1,
                "FsRtlCancelNotify": 2,
                "Drive letter already used!": 1,
                "No drive letter available!": 1,
                "../../ntoskrnl/fstub/disksup.c": 1,
                "(%s:%d) ZwCreateValueKey failed for %wZ, status=%x": 1,
                "(%s:%d) ZwOpenDirectoryObject for %wZ failed, status=%lx": 1,
                "(%s:%d) ZwOpenSymbolicLinkObject failed for %wZ, status=%lx": 1,
                "(%s:%d) ZwQuerySymbolicLinkObject failed, status=%lx": 1,
                "(%s:%d) FSTUB: entry is invalid": 1,
                "(%s:%d) FSTUB: offset %#08lx": 1,
                "(%s:%d) FSTUB: length %#08lx": 1,
                "(%s:%d) FSTUB: end %#I64x": 1,
                "(%s:%d) FSTUB: max %#I64x": 1,
                "(%s:%d) FSTUB: maxOffset %#I64x": 1,
                "PartitionDescriptor->PartitionType == 0x55": 1,
                "(%s:%d) FSTUB: (IoReadPartitionTable) No 0xaa55 found in partition table %d": 1,
                "(%s:%d) FSTUB: Multiple container partitions found in partition table %d": 1,
                " - table is invalid": 1,
                "(%s:%d) FSTUB: MaxSector now = %I64d": 1,
                "(%s:%d) FSTUB: Jump byte %#x found along with empty partition table - disk is a super floppy and has no valid MBR": 1,
                "(%s:%d) FSTUB: Drive %#p has no valid MBR. Make it into a super-floppy": 1,
                "(%s:%d) FSTUB: Drive has %I64d sectors and is %#016I64x bytes large": 1,
                "xHalQueryDriveLayout() failed (Status = 0x%lx)": 1,
                "../../ntoskrnl/fstub/fstubex.c": 1,
                "SectorSize": 1,
                "PartitionCount": 1,
                "*PartitionCount <= Count": 1,
                "Count % 4 == 0": 1,
                "LayoutEx": 1,
                "Partition": 1,
                "{%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}": 1,
                "Geometry": 1,
                "Geometry->Geometry.BytesPerSector % PARTITION_ENTRY_SIZE == 0": 1,
                "DiskBuffer": 1,
                "IS_VALID_DISK_INFO(Disk)": 1,
                "ReturnedDriveLayout": 1,
                "HeaderBuffer": 1,
                "PartitionStyle": 1,
                "Offset <= Disk->SectorSize": 1,
                "MaxPartitionCount >= 128": 1,
                "PartitionCount <= MaxPartitionCount": 1,
                "DiskInfo": 1,
                "ReadEFIHeader": 1,
                "BackupValid": 1,
                "DriveLayout": 1,
                "\\Device\\Harddisk%lu\\Partition0": 2,
                "\\ArcName\\%s": 3,
                "\\Device\\Harddisk%lu\\Partition%lu": 2,
                "%spartition(%lu)": 2,
                "PartitionInfo": 1,
                "Layout": 1,
                "../../ntoskrnl/fstub/halstub.c": 1,
                "../../ntoskrnl/fstub/translate.c": 1,
                "Source->Type == CmResourceTypeInterrupt": 1,
                "Alternative->Type == CmResourceTypeInterrupt": 1,
                "Version == HAL_IRQ_TRANSLATOR_VERSION": 1,
                "Size >= sizeof(TRANSLATOR_INTERFACE)": 1,
                "../../ntoskrnl/inbv/inbv.c": 1,
                "Floor < Ceiling": 1,
                "Ceiling <= 100": 1,
                "BOOTLOGO": 1,
                "../../ntoskrnl/inbv/inbvport.c": 1,
                "IsMMIODevice == FALSE": 1,
                "\\Device\\CdRom%lu": 1,
                "../../ntoskrnl/io/iomgr/arcname.c": 1,
                "(%s:%d) Boot device found": 1,
                "\\ArcName\\%spartition(%lu)": 1,
                "cdrom": 1,
                "\\Device\\LanmanRedirector": 1,
                "../../ntoskrnl/io/iomgr/bootlog.c": 1,
                "(%s:%d) ZwCreateFile() failed (Status %lx)": 1,
                "(%s:%d) ZwWriteFile() failed (Status %lx)": 1,
                "(%s:%d) ZwOpenKey() failed (Status %lx)": 1,
                "(%s:%d) ZwCreateKey() failed (Status %lx)": 1,
                "(%s:%d) NtSetValueKey() failed (Status %lx)": 1,
                "(%s:%d) ZwWriteKey() failed (Status %lx)": 1,
                "(%s:%d) IopCreateLogFile() failed (Status %lx)": 1,
                "(%s:%d) IopWriteLogFile() failed (Status %lx)": 1,
                "../../ntoskrnl/io/iomgr/controller.c": 1,
                "KeGetCurrentIrql()==(2)": 1,
                "../../ntoskrnl/io/iomgr/device.c": 1,
                "(%s:%d) No DriverUnload function on PnP driver! '%wZ' will not be unloaded!": 1,
                "(%s:%d) Unloading driver '%wZ' (automatic)": 1,
                "DeviceObject->ReferenceCount": 1,
                "!ForceUnload": 1,
                "(DriverObject->Flags & DRVO_UNLOAD_INVOKED) == 0": 1,
                "DeviceExtension->AttachedTo == TargetDevice": 1,
                "SourceDeviceExtension->AttachedTo == NULL": 1,
                "!(FileObject->Flags & FO_DIRECT_DEVICE_OPEN)": 1,
                "DeviceObject != NULL": 2,
                "(%s:%d) FOEs not supported": 1,
                "DeviceRelations": 1,
                "DeviceRelations->Count == 1": 1,
                "../../ntoskrnl/io/iomgr/deviface.c": 1,
                "(%s:%d) Failed to open %wZ": 1,
                "(%s:%d) Bad symbolic link: %wZ": 1,
                "(%s:%d) Failed to open %wZ%wZ (%x)": 1,
                "(%s:%d) Failed to open %wZ%wZ\\%wZ": 1,
                "(%s:%d) Failed to open %wZ%wZ\\%wZ%\\%wZ (%x)": 1,
                "(%s:%d) PhysicalDeviceObject != NULL. Case not implemented.": 1,
                "(%s:%d) ZwOpenKey() failed with status 0x%08lx": 2,
                "(%s:%d) ZwQueryValueKey #2 failed (%x)": 1,
                "(%s:%d) Bad registry read": 1,
                "(%s:%d) ZwQueryValueKey #1 failed (%x)": 1,
                "KeGetCurrentIrql()==(0)": 2,
                "PdoNameInfo->Name.Length": 1,
                "((PEXTENDED_DEVOBJ_EXTENSION)PhysicalDeviceObject->DeviceObjectExtension)->DeviceNode": 1,
                "(%s:%d) IoCreateSymbolicLink() failed with status 0x%08lx": 1,
                "(%s:%d) ZwSetValueKey() failed with status 0x%08lx": 1,
                "(%s:%d) IoSetDeviceInterfaceState() returning STATUS_INVALID_PARAMETER_1": 1,
                "(%s:%d) Failed to create the Control subkey": 1,
                "(%s:%d) Failed to write the Linked value": 1,
                "(%s:%d) IoGetDeviceObjectPointer() failed with status 0x%08lx": 1,
                "(%s:%d) RtlGUIDFromString() failed with status 0x%08lx": 1,
                "../../ntoskrnl/io/iomgr/driver.c": 1,
                "(%s:%d) Deleting driver object '%wZ'": 1,
                "!DriverObject->DeviceObject": 1,
                "%s%sSystem32\\Drivers\\%wZ%s": 1,
                "(%s:%d) If you see this, please report to Fireball or hpoussin!": 1,
                "(%s:%d) ZwOpenKey() failed with Status %08X": 1,
                "(%s:%d) RtlQueryRegistryValues() failed (Status %x)": 1,
                "DriverList": 1,
                "(%s:%d) Can't locate driver object for %wZ": 1,
                "(%s:%d) Driver deletion pending": 1,
                "(%s:%d) IopNormalizeImagePath() failed (Status %x)": 1,
                "(%s:%d) Drivers device object is referenced or has attached devices": 1,
                "(%s:%d) Unloading driver '%wZ' (manual)": 1,
                "(%s:%d) No DriverUnload function! '%wZ' will not be unloaded!": 1,
                "(%s:%d) '%wZ' initialization failed, status (0x%08lx)": 1,
                "(%s:%d) Driver <%wZ> set DriverObject->MajorFunction[%lu] to NULL!": 1,
                "LoadParams->ServiceName->Length >= sizeof(WCHAR)": 1,
                "(%s:%d) IopCreateDeviceNode() failed (Status %lx)": 1,
                "(%s:%d) IopInitializeDriverModule() failed (Status %lx)": 1,
                "(%s:%d) Driver '%wZ' load failed, status (%x)": 1,
                "NextEntry != &PsLoadedModuleList": 1,
                "Index < IopGroupIndex": 1,
                "../../ntoskrnl/io/iomgr/error.c": 1,
                "IopRaiseHardError": 2,
                "IoRaiseInformationalHardError": 3,
                "../../ntoskrnl/io/iomgr/file.c": 1,
                "(%s:%d) You are seeing this because the following ROS driver: %wZ": 1,
                " sucks. Please fix it's AddDevice Routine": 1,
                "%s [%.16s] - ": 3,
                "ObjectBody: %p": 1,
                "(%s:%d) FIXME: Set SD unimplemented for Devices": 1,
                "(%s:%d) We need to unlock this file!": 1,
                "!(FileObject->Flags & FO_SYNCHRONOUS_IO) || (InterlockedExchange((PLONG)&FileObject->Busy, TRUE) == FALSE)": 1,
                "ParseObject: %p. RemainingName: %wZ": 1,
                "(%s:%d) Traverse access failed!": 1,
                "(%s:%d) Using IopParseDevice() hack. Requested invalid attributes: %lx": 1,
                "!Irp->PendingReturned": 2,
                "!Irp->MdlAddress": 1,
                "Status != STATUS_NOT_IMPLEMENTED": 1,
                "Class: %lx": 1,
                "FileName: %wZ": 1,
                "(%s:%d) File Create 'FileAttributes' Parameter contains invalid flags!": 1,
                "(%s:%d) File Create 'ShareAccess' Parameter contains invalid flags!": 1,
                "(%s:%d) File Create 'Disposition' Parameter is out of range!": 1,
                "(%s:%d) File Create 'CreateOptions' parameter contains invalid flags!": 1,
                "(%s:%d) File Create 'CreateOptions' parameter FILE_SYNCHRONOUS_IO_* requested, but 'DesiredAccess' does not have SYNCHRONIZE!": 1,
                "(%s:%d) File Create 'CreateOptions' parameter FILE_DELETE_ON_CLOSE requested, but 'DesiredAccess' does not have DELETE!": 1,
                "(%s:%d) File Create 'FileAttributes' parameter both FILE_SYNCHRONOUS_IO_NONALERT and FILE_SYNCHRONOUS_IO_ALERT specified!": 1,
                "(%s:%d) File Create 'CreateOptions' Parameter has flags incompatible with FILE_DIRECTORY_FILE!": 1,
                "(%s:%d) File Create 'CreateOptions' Parameter FILE_DIRECTORY_FILE requested, but 'Disposition' is not FILE_CREATE/FILE_OPEN/FILE_OPEN_IF!": 1,
                "(%s:%d) File Create 'CreateOptions' Parameter both FILE_COMPLETE_IF_OPLOCKED and FILE_RESERVE_OPFILTER specified!": 1,
                "(%s:%d) File Create 'CreateOptions' parameter FILE_NO_INTERMEDIATE_BUFFERING requested, but 'DesiredAccess' FILE_APPEND_DATA requires it!": 1,
                "(%s:%d) Invalid EA buffer": 1,
                "OpenPacket->FileObject->Type == IO_TYPE_FILE": 1,
                "FileObject: %p": 1,
                "CreatedFileObject->Type == IO_TYPE_FILE": 1,
                "FileHandle: %p": 2,
                "FileMame: %wZ": 1,
                "IopParseDevice": 2,
                "IopDeleteFile": 2,
                "IopSecurityFile": 2,
                "IopQueryNameFile": 2,
                "IopCloseFile": 2,
                "IopQueryAttributesFile": 2,
                "IoGetFileObjectFilterContext": 2,
                "IoChangeFileObjectFilterContext": 2,
                "IoCheckQuerySetFileInformation": 3,
                "IoCheckQuotaBufferValidity": 3,
                "IoCreateFile": 3,
                "IoCreateFileSpecifyDeviceObjectHint": 3,
                "IoCreateStreamFileObjectEx": 3,
                "IoCreateStreamFileObjectLite": 3,
                "IoFastQueryNetworkAttributes": 3,
                "IoQueryFileDosDeviceName": 3,
                "NtCancelIoFile": 2,
                "NtDeleteFile": 3,
                "../../ntoskrnl/io/iomgr/iocomp.c": 1,
                "../../ntoskrnl/io/iomgr/ioevent.c": 1,
                "../../ntoskrnl/io/iomgr/iofunc.c": 1,
                "IRP: %p. FO: %p ": 1,
                "IRP: %p. Status: %lx ": 1,
                "IRP: %p. DO: %p. FO: %p ": 1,
                "Handle: %p. CTL: %lx. Type: %lx ": 1,
                "FileObject: %p. Mdl: %p. Offset: %p ": 1,
                "FileObject: %p. Class: %lx. Length: %lx ": 1,
                "IopCleanupAfterException": 2,
                "IopFinalizeAsynchronousIo": 2,
                "IopPerformSynchronousRequest": 2,
                "IopDeviceFsIoControl": 2,
                "IopQueryDeviceInformation": 2,
                "IoSynchronousPageWrite": 3,
                "IoPageRead": 3,
                "IoSetInformation": 3,
                "NtFlushBuffersFile": 2,
                "NtNotifyChangeDirectoryFile": 3,
                "NtLockFile": 3,
                "NtQueryDirectoryFile": 3,
                "NtQueryEaFile": 3,
                "NtQueryInformationFile": 3,
                "NtQueryQuotaInformationFile": 3,
                "NtReadFile": 3,
                "NtReadFileScatter": 2,
                "NtSetEaFile": 3,
                "NtSetInformationFile": 3,
                "NtSetQuotaInformationFile": 3,
                "NtUnlockFile": 3,
                "NtWriteFile": 3,
                "NtWriteFileGather": 2,
                "NtQueryVolumeInformationFile": 3,
                "NtSetVolumeInformationFile": 3,
                "NtCancelDeviceWakeupRequest": 2,
                "NtRequestDeviceWakeup": 2,
                "../../ntoskrnl/io/iomgr/iomdl.c": 1,
                "Length != 0": 2,
                "((Mdl)->MdlFlags & MDL_PARTIAL) != 0": 1,
                "((Mdl)->MdlFlags & MDL_MAPPED_TO_SYSTEM_VA) == 0": 1,
                "../../ntoskrnl/io/iomgr/iomgr.c": 1,
                "(%s:%d) Failed to create \\Driver directory: 0x%lx": 1,
                "(%s:%d) Failed to create \\FileSystem directory: 0x%lx": 1,
                "(%s:%d) Failed to create \\FileSystem\\Filters directory: 0x%lx": 1,
                "(%s:%d) IopCreateObjectTypes failed!": 1,
                "(%s:%d) IopCreateRootDirectories failed!": 1,
                "ramdisk(0)": 1,
                "(%s:%d) IopCreateArcNames failed: %lx": 1,
                "(%s:%d) IopMarkBootPartition failed!": 1,
                "(%s:%d) IopReassignSystemRoot failed: %lx": 1,
                "(%s:%d) RtlUnicodeStringToAnsiString failed: %lx": 1,
                "(%s:%d) RtlAnsiStringToUnicodeString failed: %lx": 1,
                "(%s:%d) PsLocateSystemDll failed: %lx": 1,
                "../../ntoskrnl/io/iomgr/iorsrce.c": 1,
                "NtSystemPartitionDeviceName->MaximumLength >= NtSystemPartitionDeviceName->Length + sizeof(WCHAR)": 1,
                "NtSystemPartitionDeviceName->Buffer[NtSystemPartitionDeviceName->Length / sizeof(WCHAR)] == UNICODE_NULL": 1,
                "OsLoaderPathName->MaximumLength >= OsLoaderPathName->Length + sizeof(WCHAR)": 1,
                "OsLoaderPathName->Buffer[OsLoaderPathName->Length / sizeof(WCHAR)] == UNICODE_NULL": 1,
                "(%s:%d) Failed opening given symbolic link!": 1,
                "(%s:%d) Failed querying given symbolic link!": 1,
                "(%s:%d) Failed opening registry!": 1,
                "(%s:%d) Failed opening/creating Setup key!": 1,
                "(%s:%d) Failed writing SystemPartition value!": 1,
                "(%s:%d) Failed writing OsLoaderPath value!": 1,
                "(%s:%d) IoReportResourceUsage is halfplemented!": 1,
                "(%s:%d) Denying an attempt to claim resources currently in use by another device!": 1,
                "(%s:%d) Proceeding with conflicting resources": 1,
                "(%s:%d) IopLegacyResourceAllocation is halfplemented!": 1,
                "../../ntoskrnl/io/iomgr/iotimer.c": 1,
                "../../ntoskrnl/io/iomgr/iowork.c": 1,
                "../../ntoskrnl/io/iomgr/irp.c": 1,
                "%s - Deassociating IRP %p for %p": 1,
                "%s - Canceling IRP %p": 1,
                "Irp->Type == IO_TYPE_IRP": 1,
                "%s - Canceling IRPs for Thread %p": 1,
                "(%s:%d) Broken driver did not complete!": 1,
                "%s - Freeing IRPs %p": 1,
                "IsListEmpty(&Irp->ThreadListEntry)": 1,
                "Irp->CurrentLocation >= Irp->StackCount": 1,
                "%s - Completing IRP %p for %p": 1,
                "Irp->IoStatus.Status != (NTSTATUS)0xFFFFFFFF": 1,
                "ERROR:  %s at %s:%d is UNIMPLEMENTED!": 8,
                "Reparse support not yet present!": 1,
                "%s - Cleaning IRP %p for %p": 1,
                "%s - Completing IRP %p": 1,
                "!Irp->CancelRoutine": 1,
                "Irp->IoStatus.Status != STATUS_PENDING": 1,
                "Irp->IoStatus.Status != STATUS_REPARSE": 1,
                "Not supported!": 1,
                "%s - Initializing IRP %p": 1,
                "%s - Allocated IRP %p with allocation flags %lx": 1,
                "%s - Built IRP %p with Major, Buffer, DO %lx %p %p": 1,
                "%s - Associating IRP %p": 1,
                "%s - Queueing IRP %p": 1,
                "%s - Built IRP %p with IOCTL, Buffers, DO %lx %p %p %p": 1,
                "%s - Reusing IRP %p": 1,
                "IopDisassociateThreadIrp": 2,
                "IopCleanupIrp": 2,
                "IopCompleteRequest": 2,
                "IoAllocateIrp": 3,
                "IoBuildAsynchronousFsdRequest": 3,
                "IoBuildDeviceIoControlRequest": 3,
                "IoCancelIrp": 3,
                "IoCancelThreadIo": 2,
                "IofCompleteRequest": 3,
                "IoFreeIrp": 3,
                "IoInitializeIrp": 3,
                "IoIsValidNameGraftingBuffer": 3,
                "IoMakeAssociatedIrp": 3,
                "IoQueueThreadIrp": 3,
                "IoReuseIrp": 3,
                "../../ntoskrnl/io/iomgr/irq.c": 1,
                "RDIMAGEOFFSET": 1,
                "RDIMAGELENGTH": 1,
                "../../ntoskrnl/io/iomgr/rawfs.c": 1,
                "../../ntoskrnl/io/iomgr/remlock.c": 1,
                "HighWatermark < MAXLONG": 1,
                "LockValue > 0": 1,
                "Lock->Dbg.HighWatermark == 0 || LockValue <= Lock->Dbg.HighWatermark": 1,
                "LockValue >= 0": 1,
                "Lock->Common.Removed": 1,
                "Lock->Dbg.Blocks": 1,
                "../../ntoskrnl/io/iomgr/symlink.c": 1,
                "../../ntoskrnl/io/iomgr/util.c": 1,
                "IoCheckFunctionAccess": 3,
                "IoValidateDeviceIoControlAccess": 3,
                "IoCheckQuerySetVolumeInformation": 3,
                "../../ntoskrnl/io/iomgr/volume.c": 1,
                "DeviceObject->ReferenceCount > 0": 1,
                "../../ntoskrnl/io/pnpmgr/plugplay.c": 1,
                "DeviceIds": 1,
                "(%s:%d) Set status data is NOT SUPPORTED": 1,
                "(%s:%d) FIXME: Clear status data!": 1,
                "(%s:%d) NtGetPlugPlayEvent cannot be called from kernel mode!": 1,
                "(%s:%d) NtGetPlugPlayEvent: Caller does not hold the SeTcbPrivilege privilege!": 1,
                "(%s:%d) KeWaitForSingleObject() failed (Status %lx)": 1,
                "(%s:%d) Buffer is too small for the pnp-event": 1,
                "DeviceNode->Flags & DNF_ENUMERATED": 1,
                "DeviceNode->Flags & DNF_PROCESSED": 1,
                "(%s:%d) A reboot is required for the current driver for '%wZ' to be replaced": 1,
                "(%s:%d) A new driver will be loaded for '%wZ' (no FDO above)": 1,
                "../../ntoskrnl/io/pnpmgr/pnpinit.c": 1,
                "KeyValueInformation->Type == REG_SZ": 1,
                "KeyValueInformation->DataLength": 1,
                "((Count + 1) * sizeof(ULONG)) <= KeyValueInformationGroupOrderList->DataLength": 1,
                "(%s:%d) IopOpenRegistryKeyEx() failed with Status %08X": 1,
                "(%s:%d) Need to build DACL": 1,
                "(%s:%d) IoCreateDriverObject() failed": 1,
                "(%s:%d) IoCreateDevice() failed": 1,
                "../../ntoskrnl/io/pnpmgr/pnpmgr.c": 1,
                "DeviceNode->PhysicalDeviceObject": 1,
                "(%s:%d) %wZ->AddDevice(%wZ) failed with status 0x%x": 1,
                "!DeviceNode->Child": 1,
                "(%s:%d) ZwSetValueKey() failed (Status %lx)": 1,
                "(%s:%d) ZwSetValueKey() failed (Status %lx) or no Compatible ID returned": 1,
                "disabled": 2,
                "enabled": 2,
                "(%s:%d) ZwCreateKey() failed with status 0x%08lx": 1,
                "(%s:%d) ZwQueryValueKey(%wZ%wZ) failed": 1,
                "(%s:%d) Failed to allocate memory for registry query": 1,
                "(%s:%d) ZwQueryValueKey(%wZ%wZ) failed with status 0x%08lx": 1,
                "(%s:%d) ZwOpenKey(%wZ) failed with status 0x%08lx": 1,
                "(%s:%d) Firmware mapper is %s": 1,
                "(%s:%d) Parent of %wZ has NULL Instance path, please report!": 1,
                "(%s:%d) ZwOpenKey('%wZ') failed with status 0x%08lx": 1,
                "(%s:%d) ZwCreateKey('%wZ') failed with status 0x%08lx": 1,
                "(%s:%d) PnpRootCreateDevice() failed with status 0x%08X": 1,
                "(%s:%d) IRP_MN_QUERY_CAPABILITIES failed with status 0x%x": 1,
                "(%s:%d) Installed service '%S' for critical device '%wZ'": 1,
                "(%s:%d) Installed NULL service for critical device '%wZ'": 1,
                "(%s:%d) Child not ready to be configured": 1,
                "(%s:%d) ZwQueryDefaultLocale() failed with status 0x%lx": 1,
                "(%s:%d) IopInitiatePnpIrp() failed (Status %x)": 1,
                "(%s:%d) IopInitiatePnpIrp() failed (Status 0x%08lx)": 1,
                "(%s:%d) IopGetParentIdPrefix() failed (Status 0x%08lx)": 1,
                "(%s:%d) Duplicate device instance '%wZ'": 1,
                "(%s:%d) Current instance parent: '%wZ'": 1,
                "(%s:%d) Old instance parent: '%wZ'": 1,
                "(%s:%d) Failed to create the instance key! (Status %lx)": 1,
                "(%s:%d) ZwSetValueKey() failed (Status 0x%lx)": 1,
                "(BufferLength & 1) == 0": 1,
                "DeviceInstanceName != NULL": 1,
                "EnumeratorNameEnd": 1,
                "(%s:%d) IoOpenDeviceRegistryKey(): got wrong params, exiting... ": 1,
                "(%s:%d) Call to IoGetDeviceProperty() failed with Status 0x%08lx": 1,
                "(%s:%d) IoOpenDeviceRegistryKey(%wZ): Base key doesn't exist, exiting... (Status 0x%08lx)": 1,
                "(%s:%d) Removal not allowed for %wZ": 1,
                "DeviceNode": 1,
                "(%s:%d) Removal vetoed by %wZ": 1,
                "(%s:%d) Removal vetoed by failing the query remove request": 1,
                "(ChildDeviceObject->Flags & DO_DEVICE_INITIALIZING) == 0": 1,
                "(%s:%d) IopCreateDeviceNode() failed with status 0x%08x. Skipping PDO %u": 1,
                "(DeviceNode->Flags & DNF_ADDED)": 1,
                "(DeviceNode->Flags & (DNF_RESOURCE_ASSIGNED | DNF_RESOURCE_REPORTED | DNF_NO_RESOURCE_REQUIRED))": 1,
                "(%s:%d) IRP_MN_QUERY_PNP_DEVICE_STATE failed with status 0x%x": 1,
                "(%s:%d) Failed to stop device for rebalancing": 1,
                "(%s:%d) Restart after resource rebalance failed": 1,
                "!(DeviceNode->Flags & DNF_DISABLED)": 1,
                "(%s:%d) Warning: PnP Start failed (%wZ) [Status: 0x%x]": 1,
                "(%s:%d) Child not ready to be added": 1,
                "(%s:%d) IopStartDevice(%wZ) failed with status 0x%08x": 1,
                "(%s:%d) Service '%wZ' is disabled": 1,
                "IoGetDeviceProperty": 3,
                "../../ntoskrnl/io/pnpmgr/pnpnotify.c": 1,
                "(%s:%d) IopNotifyPlugPlayNotification(): unknown EventCategory 0x%x UNIMPLEMENTED": 1,
                "(%s:%d) %s: unknown EventCategory 0x%x UNIMPLEMENTED": 1,
                "IoPnPDeliverServicePowerNotification": 3,
                "IoRegisterPlugPlayNotification": 3,
                "../../ntoskrnl/io/pnpmgr/pnpreport.c": 1,
                "(%s:%d) Invalid bus type: %d": 1,
                "NotificationStructure != NULL": 1,
                "SyncStatus": 1,
                "(%s:%d) Reported device: %S (%wZ)": 1,
                "notifyStruct": 1,
                "notifyStruct->FileObject == NULL": 1,
                "../../ntoskrnl/io/pnpmgr/pnpres.c": 1,
                "DeviceNode->ResourceListTranslated": 1,
                "OldLength": 1,
                "(%s:%d) Resource conflict: Memory (0x%I64x to 0x%I64x vs. 0x%I64x to 0x%I64x)": 1,
                "(%s:%d) Resource conflict: Port (0x%I64x to 0x%I64x vs. 0x%I64x to 0x%I64x)": 1,
                "(%s:%d) Resource conflict: IRQ (0x%x 0x%x vs. 0x%x 0x%x)": 1,
                "(%s:%d) Resource conflict: Bus number (0x%x to 0x%x vs. 0x%x to 0x%x)": 1,
                "(%s:%d) Resource conflict: Dma (0x%x 0x%x vs. 0x%x 0x%x)": 1,
                "(%s:%d) Unable to satisfy preferred resource or alternates in list %lu": 1,
                "IoDesc->Type == CmDesc->Type": 1,
                "IoDesc->Type == CmResourceTypeInterrupt": 1,
                "(%s:%d) Satisfying interrupt requirement with IRQ 0x%x": 1,
                "IoDesc->Type == CmResourceTypePort": 1,
                "(%s:%d) Satisfying port requirement with 0x%I64x (length: 0x%x)": 1,
                "IoDesc->Type == CmResourceTypeMemory": 1,
                "(%s:%d) Satisfying memory requirement with 0x%I64x (length: 0x%x)": 1,
                "IoDesc->Type == CmResourceTypeBusNumber": 1,
                "(%s:%d) Satisfying bus number requirement with 0x%x (length: 0x%x)": 1,
                "IoDesc->Type == CmResourceTypeDma": 1,
                "(%s:%d) Satisfying DMA requirement with channel 0x%x": 1,
                "(%s:%d) Unsupported resource type: %x": 1,
                "(%s:%d) Unable to satisfy required resource in list %lu": 1,
                "(%s:%d) Out of alternate lists!": 1,
                "(%s:%d) Failed to find an available interrupt resource (0x%x to 0x%x)": 1,
                "(%s:%d) Failed to find an available port resource (0x%I64x to 0x%I64x length: 0x%x)": 1,
                "(%s:%d) Failed to find an available memory resource (0x%I64x to 0x%I64x length: 0x%x)": 1,
                "(%s:%d) Failed to find an available bus number resource (0x%x to 0x%x length: 0x%x)": 1,
                "(%s:%d) Failed to find an available dma resource (0x%x to 0x%x)": 1,
                "(%s:%d) IopInitiatePnpIrp(IRP_MN_FILTER_RESOURCE_REQUIREMENTS) failed": 1,
                "(%s:%d) Boot resources for %wZ cause a resource conflict!": 1,
                "(%s:%d) Failed to fixup a resource list from supplied resources for %wZ": 1,
                "IopDetectResourceConflict(DeviceNode->ResourceList, FALSE, NULL) != STATUS_CONFLICTING_ADDRESSES": 1,
                "(%s:%d) Failed to translate port resource (Start: 0x%I64x)": 1,
                "(%s:%d) Guessed incorrect address space: 1 -> 0": 1,
                "(%s:%d) Failed to translate interrupt resource (Vector: 0x%x | Level: 0x%x)": 1,
                "(%s:%d) Failed to translate memory resource (Start: 0x%I64x)": 1,
                "(%s:%d) Guessed incorrect address space: 0 -> 1": 1,
                "(%s:%d) Unknown resource descriptor type 0x%x": 1,
                "(%s:%d) Failed to translate resources for %wZ": 1,
                "../../ntoskrnl/io/pnpmgr/pnproot.c": 1,
                "(%s:%d) RtlCreateUnicodeString() failed": 1,
                "(%s:%d) IopOpenRegistryKeyEx() failed with status 0x%08lx": 1,
                "(%s:%d) Failed to read the LogConf key for %S\\%S": 1,
                "(%s:%d) IRP_MJ_PNP / IRP_MN_QUERY_DEVICE_TEXT / unknown query id type 0x%lx": 1,
                "(%s:%d) IRP_MJ_PNP / IRP_MN_QUERY_ID / unknown query id type 0x%lx": 1,
                "(%s:%d) IRP_MJ_PNP / Unknown minor function 0x%lx": 1,
                "InstancePath": 1,
                "(%s:%d) Failed to open registry key": 1,
                "(%s:%d) Too many legacy devices reported for service '%wZ'": 1,
                "(%s:%d) NextInstance value is corrupt! (%lu)": 1,
                "(%s:%d) Failed to write new NextInstance value! (0x%x)": 1,
                "(%s:%d) Failed to create instance path (0x%x)": 1,
                "../../ntoskrnl/ke/apc.c": 1,
                "Apc->Inserted == TRUE": 1,
                "Thread->State == Running": 5,
                "(%s:%d) A thread was in a gate wait": 1,
                "KeGetCurrentIrql()==(1)": 1,
                "TargetEnvironment <= InsertApcEnvironment": 1,
                "(TargetEnvironment <= Thread->ApcStateIndex) || (TargetEnvironment == InsertApcEnvironment)": 1,
                "(Apc)->Type == ApcObject": 1,
                "../../ntoskrnl/ke/balmgr.c": 1,
                "!IsListEmpty(&Prcb->DispatcherReadyListHead[Index])": 1,
                "Thread->Priority == Index": 1,
                "(Prcb->ReadySummary & PRIORITY_MASK(Index))": 1,
                "(Thread->PriorityDecrement >= 0) && (Thread->PriorityDecrement <= Thread->Priority)": 5,
                "(Thread->PriorityDecrement >= 0) && (Thread->PriorityDecrement <= THREAD_BOOST_PRIORITY)": 1,
                "Prcb->PrcbLock != 0": 7,
                "(%s:%d) BALMGR: Illegal wait status, %lx =": 1,
                "<%s: %p>": 1,
                "../../ntoskrnl/ke/bug.c": 1,
                "(%s:%d) Potentially unloaded driver!": 1,
                "%s**  %12s - Address %p base at %p, DateStamp %08lx": 1,
                "*** STOP: 0x%08lX (0x%p,0x%p,0x%p,0x%p)": 1,
                "*** Fatal System Error: 0x%08lx": 1,
                "                       (0x%p,0x%p,0x%p,0x%p)": 1,
                "Driver at fault: %s.": 1,
                "Next == NmiData->Next": 1,
                "KeInitializeCrashDumpHeader": 3,
                "KeDeregisterNmiCallback": 3,
                "../../ntoskrnl/ke/clock.c": 1,
                "(NewTime->HighPart & 0xF0000000) == 0": 1,
                "KeGetCurrentIrql() <= DISPATCH_LEVEL": 6,
                "(DeviceQueue)->Type == DeviceQueueObject": 1,
                "../../ntoskrnl/ke/devqueue.c": 1,
                "KeGetCurrentIrql() == DISPATCH_LEVEL": 10,
                "DeviceQueue->Busy": 1,
                "NextEntry != &DeviceQueue->DeviceListHead": 1,
                "../../ntoskrnl/ke/dpc.c": 1,
                "(%s:%d) Invalid timer state!": 1,
                "(Thread->Priority < LOW_REALTIME_PRIORITY) ? TRUE : (Thread->PriorityDecrement == 0)": 4,
                "(Thread->BasePriority == 0) || (Priority != 0)": 4,
                "(PrioritySet & PRIORITY_MASK(HighPriority)) != 0": 2,
                "IsListEmpty(&Prcb->DispatcherReadyListHead[HighPriority]) == FALSE": 2,
                "HighPriority == Thread->Priority": 2,
                "Thread->Affinity & AFFINITY_MASK(Prcb->Number)": 2,
                "Thread->NextProcessor == Prcb->Number": 4,
                "(Thread == NULL) || (Thread->BasePriority == 0) || (Thread->Priority != 0)": 2,
                "Thread->SwapBusy == FALSE": 6,
                "Prcb == KeGetCurrentPrcb()": 6,
                "(Priority >= 0) && (Priority <= HIGH_PRIORITY)": 4,
                "Priority == Thread->Priority": 4,
                "((Dpc)->Type == 0) || ((Dpc)->Type == DpcObject) || ((Dpc)->Type == ThreadedDpcObject)": 1,
                "Prcb == CurrentPrcb": 1,
                "UNRECOVERABLE ERROR:  %s at %s:%d is UNIMPLEMENTED!": 2,
                "Threaded DPC not supported": 1,
                "IsListEmpty(&Object->WaitListHead) == FALSE": 5,
                "IsListEmpty(&Event->Header.WaitListHead) == FALSE": 2,
                "DpcCalls < MAX_TIMER_DPCS": 1,
                "KiTimerTableListHead[Index].Time.QuadPart <= Timer->DueTime.QuadPart": 1,
                "DpcData->DpcQueueDepth == 0": 1,
                "KeGetCurrentIrql () < DISPATCH_LEVEL": 1,
                "KeInsertQueueDpc": 3,
                "((Event)->Header.Type == NotificationEvent) || ((Event)->Header.Type == SynchronizationEvent)": 1,
                "../../ntoskrnl/ke/eventobj.c": 1,
                "Event->Header.Type == EventSynchronizationObject": 1,
                "../../ntoskrnl/ke/except.c": 1,
                "(%s:%d) KiRaiseException: Failed to Probe": 1,
                "(((Gate)->Header.Type & KOBJECT_TYPE_MASK) == GateObject) || (((Gate)->Header.Type & KOBJECT_TYPE_MASK) == EventSynchronizationObject)": 1,
                "../../ntoskrnl/ke/gate.c": 1,
                "(KeGetCurrentIrql() == APC_LEVEL) || (Thread->SpecialApcDisable < 0) || (Thread->Teb == NULL) || (Thread->Teb >= (PTEB)MM_SYSTEM_RANGE_START)": 3,
                "(KeGetCurrentIrql() == APC_LEVEL) || (KeGetCurrentThread()->SpecialApcDisable < 0) || (KeGetCurrentThread()->Teb == NULL) || (KeGetCurrentThread()->Teb >= (PTEB)MM_SYSTEM_RANGE_START)": 3,
                "../../ntoskrnl/ke/gmutex.c": 1,
                "Not yet implemented": 2,
                "../../ntoskrnl/ke/ipi.c": 1,
                "KeGetCurrentIrql() == IPI_LEVEL": 1,
                "../../ntoskrnl/ke/krnlinit.c": 1,
                "(%s:%d) Threaded DPCs not yet supported": 1,
                "(Mutant)->Header.Type == MutantObject": 2,
                "../../ntoskrnl/ke/mutex.c": 1,
                "(Mutex)->Header.Type == MutantObject": 1,
                "../../ntoskrnl/ke/procobj.c": 1,
                "Process != Thread->ApcState.Process": 1,
                "Process->StackCount != MAXULONG_PTR": 3,
                "(%s:%d) Errr. ReactOS doesn't support paging out processes yet...": 1,
                "Node->ProcessorMask & Affinity": 1,
                "(((Process)->Header.Type & KOBJECT_TYPE_MASK) == ProcessObject)": 1,
                "(Affinity & KeActiveProcessors) != 0": 2,
                "Process->StackCount != 0": 2,
                "Process->State == ProcessInMemory": 2,
                "../../ntoskrnl/ke/queue.c": 1,
                "((Queue)->Header.Type & KOBJECT_TYPE_MASK) == QueueObject": 1,
                "Thread->WaitIrql <= DISPATCH_LEVEL": 2,
                "IsListEmpty(&Queue->Header.WaitListHead)": 1,
                "(Semaphore)->Header.Type == SemaphoreObject": 1,
                "../../ntoskrnl/ke/semphobj.c": 1,
                "../../ntoskrnl/ke/spinlock.c": 1,
                "KeAcquireSpinLockForDpc": 3,
                "KeReleaseSpinLockForDpc": 3,
                "KeAcquireInStackQueuedSpinLockForDpc": 3,
                "KeReleaseInStackQueuedSpinLockForDpc": 3,
                "../../ntoskrnl/ke/thrdobj.c": 1,
                "Set != 0": 1,
                "(((Thread)->Header.Type & KOBJECT_TYPE_MASK) == ThreadObject)": 1,
                "OldCount != MAXIMUM_SUSPEND_COUNT": 1,
                "(Thread->UserAffinity & AFFINITY_MASK(IdealProcessor))": 1,
                "CurrentThread->SystemAffinityActive != FALSE": 1,
                "Processor <= MAXIMUM_PROCESSORS": 1,
                "(Priority <= HIGH_PRIORITY) && (Priority >= LOW_PRIORITY)": 1,
                "KeCapturePersistentThreadState": 3,
                "SMP: Not yet implemented": 1,
                "../../ntoskrnl/ke/thrdschd.c": 1,
                "Thread->State == DeferredReady": 1,
                "(Thread->Priority >= 0) && (Thread->Priority <= HIGH_PRIORITY)": 1,
                "(Thread->PriorityDecrement >= 0) && (Thread->PriorityDecrement <= OldPriority)": 1,
                "Thread->AdjustIncrement >= 0": 1,
                "NextThread->State == Standby": 1,
                "(OldPriority >= 0) && (OldPriority <= HIGH_PRIORITY)": 1,
                "OldPriority == Thread->Priority": 1,
                "Prcb->DeferredReadyListHead.Next != NULL": 1,
                "Prcb->DeferredReadyListHead.Next == NULL": 1,
                "Thread != NULL": 1,
                "(Thread->BasePriority == 0) || (Thread->Priority != 0)": 1,
                "CurrentThread != Prcb->IdleThread": 1,
                "WaitIrql == 0": 1,
                "Thread->State != Transition": 1,
                "(Prcb->ReadySummary & PRIORITY_MASK(Thread->Priority))": 1,
                "(%s:%d) Deferred state not yet supported": 1,
                "(%s:%d) Affinity support disabled!": 1,
                "OldIrql <= DISPATCH_LEVEL": 1,
                "../../ntoskrnl/ke/timerobj.c": 1,
                "Hand == KiComputeTimerTableIndex(DueTime)": 1,
                "((Timer)->Header.Type == TimerNotificationObject) || ((Timer)->Header.Type == TimerSynchronizationObject)": 1,
                "../../ntoskrnl/ke/wait.c": 1,
                "Increment >= 0": 1,
                "(BitsToAdd == GM_LOCK_WAITER_INC) || (BitsToAdd == GM_LOCK_WAITER_WOKEN)": 1,
                "(BitsToRemove == GM_LOCK_BIT) || ((OldValue & GM_LOCK_WAITER_WOKEN) != 0)": 1,
                "(GuardedMutex->Count & GM_LOCK_WAITER_WOKEN) != 0": 1,
                "KeGetCurrentIrql() == SYNCH_LEVEL": 1,
                "OldIrql == PASSIVE_LEVEL": 1,
                "KeGetCurrentIrql() < DISPATCH_LEVEL || (KeGetCurrentIrql() == DISPATCH_LEVEL && Timeout && Timeout->QuadPart == 0)": 1,
                "CurrentObject->Header.Type != QueueObject": 1,
                "Count != 0": 1,
                "../../ntoskrnl/lpc/close.c": 1,
                "../../ntoskrnl/lpc/complete.c": 1,
                "(%s:%d) LPC connection was refused": 1,
                "(%s:%d) Client section mapping failed: %lx": 1,
                "(%s:%d) View base, offset, size: %p %lx %p": 1,
                "../../ntoskrnl/lpc/connect.c": 1,
                "../../ntoskrnl/lpc/create.c": 1,
                "../../ntoskrnl/lpc/listen.c": 1,
                "../../ntoskrnl/lpc/port.c": 1,
                "NtImpersonateClientOfPort": 2,
                "NtQueryInformationPort": 2,
                "../../ntoskrnl/lpc/reply.c": 1,
                "(%s:%d) SEH crash [1]": 1,
                "(%s:%d) SEH crash [2]": 1,
                "NtReplyWaitReplyPort": 2,
                "NtReadRequestData": 2,
                "NtWriteRequestData": 2,
                "../../ntoskrnl/lpc/send.c": 1,
                "../../ntoskrnl/mm/ARM3/contmem.c": 1,
                "SizeInPages != 0": 1,
                "i != MmPhysicalMemoryBlock->NumberOfRuns": 1,
                "EndPfn == MI_PFN_ELEMENT(Page + 1)": 1,
                "Pfn1 == MI_PFN_ELEMENT(Page)": 1,
                "Page != 0": 3,
                "StartPte->u.Hard.Valid == 1": 1,
                "BaseAddress": 1,
                "NumberOfBytes != 0": 4,
                "CacheType <= MmWriteCombined": 1,
                "Pfn1->u3.e2.ReferenceCount == 1": 2,
                "Pfn1->u2.ShareCount == 1": 4,
                "Pfn1->PteAddress == PointerPte": 1,
                "Pfn1->u3.e1.PageLocation == ActiveAndValid": 3,
                "Pfn1->u4.VerifierAllocation == 0": 3,
                "Pfn1->u3.e1.PrototypePte == 0": 4,
                "../../ntoskrnl/mm/ARM3/drvmgmt.c": 1,
                "MmUnlockPageableImageSection": 2,
                "MmLockPageableSectionByHandle": 2,
                "MmLockPageableDataSection": 2,
                "MmTrimAllSystemPageableMemory": 2,
                "../../ntoskrnl/mm/ARM3/dynamic.c": 1,
                "Size == (sizeof(PHYSICAL_MEMORY_RANGE) * (MmPhysicalMemoryBlock->NumberOfRuns + 1))": 1,
                "MmAddPhysicalMemory": 3,
                "MmMarkPhysicalMemoryAsBad": 3,
                "MmMarkPhysicalMemoryAsGood": 3,
                "MmRemovePhysicalMemory": 3,
                "../../ntoskrnl/mm/ARM3/expool.c": 1,
                "Context->PoolTrackTableSizeExpansion == 0": 1,
                "(%s:%d) PreviousEntry BlockSize %lu, tag %.4s. Entry PreviousSize %lu, tag %.4s": 1,
                "(%s:%d) PreviousEntry tag %.4s. Entry tag %.4s": 1,
                "(%s:%d) Entry tag %.4s": 1,
                "(%s:%d) Entry BlockSize %lu, tag %.4s. NextEntry PreviousSize %lu, tag %.4s": 1,
                "PagedPool": 1,
                "NonPagedPool": 1,
                "(%s:%d) Allocation has wrong pool tag! Expected '%.4s', got '%.4s' (0x%08lx)": 1,
                "(%s:%d) Wrong pool type! Expected %s, got %s": 1,
                "Entry->PreviousSize == 0": 1,
                "TrackTable[Hash].Key != Key": 1,
                "(%s:%d) Empty item reached in tracker table. Hash=0x%lx, TableMask=0x%lx, Tag=0x%08lx, NumberOfBytes=%lu, PoolType=%d": 1,
                "Hash == TableMask": 1,
                "(%s:%d) Out of pool tag space, ignoring...": 1,
                "Key & 0xFFFFFF00": 1,
                "!(PoolType & SESSION_POOL_MASK)": 1,
                "KeGetCurrentProcessorNumber() == 0": 1,
                "Table[Hash].Key == 0": 1,
                "PoolType != PagedPoolSession": 1,
                "((ULONG_PTR)Va & POOL_BIG_TABLE_ENTRY_FREE) == 0": 1,
                "(%s:%d) Should attempt expansion since we now have %lu entries": 1,
                "(%s:%d) Big pool expansion needed, not implemented!": 1,
                "Tag != 0": 1,
                "Tag != ' GIB'": 1,
                "(%s:%d) Driver Verifier is not yet supported": 1,
                "PoolDesc != NULL": 1,
                "(%s:%d) EX: ExAllocatePool (%lu, 0x%x) returning NULL": 1,
                "i < POOL_LISTS_PER_PAGE": 1,
                "Entry->BlockSize >= i": 1,
                "Entry->PoolType == 0": 1,
                "(TableSize & ~1) == 0": 1,
                "KeNumberNodes == 1": 1,
                "(%s:%d) Verifier not yet supported": 1,
                "(%s:%d) We do not know the size of this allocation. This is not yet supported": 1,
                "Tag == ' GIB'": 1,
                "(%s:%d) Freeing pool - invalid tag specified: %.4s != %.4s": 1,
                "RealPageCount == PageCount": 1,
                "Process != NULL": 2,
                "(%s:%d) Object %p is not a process. Type %u, pool type 0x%x, block size %u": 1,
                "BlockSize != 1": 1,
                "TrackerEntry->PagedAllocs >= TrackerEntry->PagedFrees": 1,
                "TrackerEntry->NonPagedAllocs >= TrackerEntry->NonPagedFrees": 1,
                "(Free)     ": 1,
                "(Allocated)": 1,
                "Invalid parameter: %s": 1,
                "Heap is unimplemented": 1,
                "Address not accessible!": 1,
                "Allocation is from PagedPool region": 1,
                "Allocation is from NonPagedPool region": 1,
                "Address 0x%p is not within any pool!": 1,
                "%c%p size: %4d previous size: %4d  %s  %.4s": 1,
                "    %p  %08lx %08lx %08lx %08lx": 2,
                "ExQueryPoolBlockSize": 3,
                "ExAllocatePoolWithTagPriority": 3,
                "../../ntoskrnl/mm/ARM3/hypermap.c": 1,
                "MiGetPfnEntry(Page) != NULL": 1,
                "Process == PsGetCurrentProcess()": 2,
                "../../ntoskrnl/mm/ARM3/../ARM3/miarm.h": 12,
                "PointerPte->u.Hard.Valid == 0": 13,
                "TempPte.u.Hard.Valid == 1": 14,
                "NumberOfPages != 0": 1,
                "NumberOfPages <= (MI_ZERO_PTES - 1)": 1,
                "Pfn1 != (PVOID)LIST_HEAD": 1,
                "../../ntoskrnl/mm/ARM3/iosup.c": 1,
                "PhysicalAddress.HighPart == 0": 1,
                "(Pfn1 == MiGetPfnEntry(Pfn)) || (Pfn1 == NULL)": 1,
                "../../ntoskrnl/mm/ARM3/largepag.c": 1,
                "MiLargePageHyperPte": 2,
                "No support for large pages": 1,
                "(%s:%d) Large page drivers not supported": 1,
                "MiSyncCachedRanges": 2,
                "../../ntoskrnl/mm/ARM3/mdlsup.c": 1,
                "Mdl->ByteCount != 0": 1,
                "(Mdl->MdlFlags & (MDL_PAGES_LOCKED | MDL_MAPPED_TO_SYSTEM_VA | MDL_SOURCE_IS_NONPAGED_POOL | MDL_PARTIAL)) == 0": 1,
                "PageCount != 0": 1,
                "(Mdl->MdlFlags & MDL_IO_SPACE) == 0": 1,
                "((ULONG_PTR)Mdl->StartVa & (PAGE_SIZE - 1)) == 0": 1,
                "MI_IS_PFN_DELETED(Pfn1) == TRUE": 1,
                "Pfn1->u3.e2.ReferenceCount != 0": 3,
                "(Mdl->MdlFlags & (MDL_MAPPED_TO_SYSTEM_VA | MDL_SOURCE_IS_NONPAGED_POOL | MDL_PARTIAL_HAS_BEEN_MAPPED)) == 0": 1,
                "(Mdl->MdlFlags & (MDL_PAGES_LOCKED | MDL_PARTIAL)) != 0": 1,
                "(Mdl->MdlFlags & MDL_MAPPED_TO_SYSTEM_VA) == 0": 1,
                "(Mdl->MdlFlags & MDL_PARENT_MAPPED_SYSTEM_VA) == 0": 1,
                "Mdl->MdlFlags & MDL_MAPPED_TO_SYSTEM_VA": 1,
                "PointerPte >= MmSystemPtesStart[SystemPteSpace]": 1,
                "PointerPte <= MmSystemPtesEnd[SystemPteSpace]": 1,
                "PointerPte->u.Hard.Valid == 1": 7,
                "(Mdl->MdlFlags & MDL_PAGES_LOCKED) != 0": 1,
                "(Mdl->MdlFlags & MDL_SOURCE_IS_NONPAGED_POOL) == 0": 1,
                "(Mdl->MdlFlags & MDL_PARTIAL) == 0": 1,
                "OldRefCount != 0": 2,
                "Pfn1->u3.e1.PageLocation != ActiveAndValid": 3,
                "Pfn1->u2.ShareCount == 0": 3,
                "(%s:%d) Not returning commit for prototype PTE": 2,
                "RefCount != 0": 2,
                "RefCount > 1": 2,
                "Process->NumberOfLockedPages > 0": 1,
                "*MdlPages != 0": 1,
                "((ULONG)Mdl->ByteOffset & ~(PAGE_SIZE - 1)) == 0": 1,
                "(Mdl->MdlFlags & (MDL_PAGES_LOCKED | MDL_MAPPED_TO_SYSTEM_VA | MDL_SOURCE_IS_NONPAGED_POOL | MDL_PARTIAL | MDL_IO_SPACE)) == 0": 1,
                "LockPages != 0": 1,
                "!MI_IS_PHYSICAL_ADDRESS(Address)": 1,
                "LockPages == 0": 1,
                "(%s:%d) MDL PROBE FAILED!": 1,
                "CurrentProcess == NULL": 1,
                "TotalPages != 0": 1,
                "CurrentProcess == PsGetCurrentProcess()": 1,
                "Thread->OwnsProcessWorkingSetShared == FALSE": 3,
                "Thread->OwnsProcessWorkingSetExclusive == FALSE": 5,
                "!MM_ANY_WS_LOCK_HELD(Thread)": 5,
                "!MI_IS_WS_UNSAFE(Process)": 5,
                "(%s:%d) Thread: %p is not an owner": 5,
                "(%s:%d) Current thread %p is attached to another process %p": 5,
                "MI_WS_OWNER(Process)": 5,
                "Thread->OwnsProcessWorkingSetExclusive == TRUE": 5,
                "(%s:%d) Access fault failed": 1,
                "(CurrentProcess == NULL) || (UsePfnLock == FALSE)": 1,
                "CurrentProcess->PhysicalVadRoot == NULL": 1,
                "(Pfn1->u2.ShareCount != 0) && (Pfn1->u3.e1.PageLocation == ActiveAndValid)": 1,
                "(%s:%d) Not charging commit for prototype PTE": 2,
                "OldRefCount < 2500": 1,
                "(Mdl->MdlFlags & MDL_DESCRIBES_AWE) == 0": 1,
                "Mdl->MdlFlags & MDL_PAGES_LOCKED": 1,
                "MmMapLockedPagesSpecifyCache": 3,
                "MmUnmapLockedPages": 3,
                "MmAdvanceMdl": 3,
                "MmMapLockedPagesWithReservedMapping": 3,
                "MmUnmapReservedMapping": 3,
                "MmPrefetchPages": 3,
                "MmProtectMdlSystemAddress": 3,
                "MmProbeAndLockProcessPages": 3,
                "MmProbeAndLockSelectedPages": 3,
                "MmMapMemoryDumpMdl": 3,
                "../../ntoskrnl/mm/ARM3/mmdbg.c": 1,
                "MmIsAddressValid(MappingBaseAddress)": 1,
                "Flags & MMDBG_COPY_UNSAFE": 1,
                "MmIsAddressValid(TargetAddress)": 1,
                "MmIsSessionAddress(TargetAddress) == FALSE": 1,
                "../../ntoskrnl/mm/ARM3/miarm.h": 2,
                "../../ntoskrnl/mm/ARM3/mminit.c": 1,
                "FreePageCount != 0": 1,
                "Pfn1 != NULL": 2,
                "(%s:%d) You either have specified /BURNMEMORY or damaged RAM modules.": 1,
                "Buffer != NULL": 1,
                "MI_IS_PHYSICAL_ADDRESS(MiPteToAddress(Pfn1->PteAddress)) == FALSE": 1,
                "MmHighMemoryThreshold > MmLowMemoryThreshold": 1,
                "(%s:%d) HAL I/O Mapping at %p is unsafe": 1,
                "Active and Valid": 1,
                "Zero Page List": 1,
                "Free Page List": 1,
                "Other (ASSERT!)": 1,
                "is disabled": 1,
                "Page tracking": 1,
                "0x%08p:": 1,
                "(%04d.%04d)": 1,
                "[%16s - %16s])": 1,
                "Active:               %5d pages": 1,
                "[%6d KB]": 2,
                "Free:                 %5d pages": 1,
                "-----------------------------------------": 1,
                "MdBlock->PageCount != 0": 1,
                "Run <= Buffer->NumberOfRuns": 1,
                "PointerPte": 1,
                "(MmSizeOfPagedPoolInBytes + (ULONG_PTR)MmPagedPoolStart) <= (ULONG_PTR)MmNonPagedSystemStart": 1,
                "PointerPde->u.Hard.Valid == 0": 4,
                "TempPde.u.Hard.Valid == 1": 2,
                "Size == MmSizeOfPagedPoolInPages": 1,
                "MmPagedPoolInfo.PagedPoolAllocationMap": 1,
                "MmPagedPoolInfo.EndOfPagedPoolBitmap": 1,
                "MiLowPagedPoolThreshold < MiHighPagedPoolThreshold": 1,
                "(%s:%d) Base": 1,
                "Length": 1,
                "(%s:%d) %08lX": 1,
                "%08lX": 1,
                "(%s:%d) Total: %08lX (%lu MB)": 1,
                "ExceptionBlock    ": 1,
                "SystemBlock       ": 1,
                "Free              ": 1,
                "Bad               ": 1,
                "LoadedProgram     ": 1,
                "FirmwareTemporary ": 1,
                "FirmwarePermanent ": 1,
                "OsloaderHeap      ": 1,
                "OsloaderStack     ": 1,
                "SystemCode        ": 1,
                "HalCode           ": 1,
                "BootDriver        ": 1,
                "ConsoleInDriver   ": 1,
                "ConsoleOutDriver  ": 1,
                "StartupDpcStack   ": 1,
                "StartupKernelStack": 1,
                "StartupPanicStack ": 1,
                "StartupPcrPage    ": 1,
                "StartupPdrPage    ": 1,
                "RegistryData      ": 1,
                "MemoryData        ": 1,
                "NlsData           ": 1,
                "SpecialMemory     ": 1,
                "BBTMemory         ": 1,
                "LoaderReserve     ": 1,
                "LoaderXIPRom      ": 1,
                "PointerPte == TestPte": 1,
                "MmLargeStackSize <= KERNEL_LARGE_STACK_SIZE": 1,
                "(MmLargeStackSize & (PAGE_SIZE - 1)) == 0": 1,
                "SharedUserData->NumberOfPhysicalPages == 0": 1,
                "(%s:%d) System cache working set too big": 1,
                "../../ntoskrnl/mm/ARM3/mmsup.c": 1,
                "(%s:%d) WARNING: %s returns bogus result": 1,
                "MmMapUserAddressesToPage": 3,
                "MmAdjustWorkingSetSize": 3,
                "MmSetAddressRangeModified": 3,
                "MmIsNonPagedSystemAddressValid": 3,
                "MmSetBankedSection": 3,
                "../../ntoskrnl/mm/ARM3/ncache.c": 1,
                "PageCount > MdlPageCount": 1,
                "PAGE_ALIGN(BaseAddress) == BaseAddress": 1,
                "../../ntoskrnl/mm/ARM3/pagfault.c": 1,
                "(%s:%d) Process owns address space lock": 1,
                "KeAreAllApcsDisabled() == TRUE": 5,
                "(%s:%d) Process is attached": 1,
                "GuranteedSize == 0": 1,
                "(%s:%d) Faulting address outside of stack bounds. Address=%p, StackBase=%p, DeallocationStack=%p": 1,
                "(%s:%d) Close to our death...": 1,
                "(PsGetCurrentProcess()->Peb->NtGlobalFlag & FLG_DISABLE_STACK_EXTENSION) == 0": 1,
                "(%s:%d) Guard page failure: %lx": 1,
                "ProtectionMask != MM_DECOMMIT": 1,
                "((TempPte.u.Soft.Transition == 1) && (TempPte.u.Soft.Prototype == 0)) == FALSE": 1,
                "TempPte.u.Long != 0": 3,
                "InvalidPte.u.Hard.Valid == 0": 7,
                "InvalidPte.u.Long != 0": 7,
                "Vad->u.VadFlags.VadType != VadDevicePhysicalMemory": 2,
                "Vad->u.VadFlags.VadType != VadAwe": 2,
                "Vad->u.VadFlags.VadType != VadImageMap": 2,
                "Vad->u2.VadFlags2.ExtendableFile == 0": 1,
                "PointerPte != NULL": 2,
                "PointerPte <= Vad->LastContiguousPte": 1,
                "IsListEmpty(&MmSessionSpace->ImageList)": 1,
                "MiCheckPdeForSessionSpace: No current session for PTE %p": 1,
                "MiCheckPdeForSessionSpace: No Session PDE for PTE %p, %p": 1,
                "MiCheckPdeForSessionSpace: No current session for VA %p": 1,
                "MiCheckPdeForSessionSpace: No Session PDE for VA %p, %p": 1,
                "ZeroPte": 1,
                "MI_IS_PAGE_TABLE_ADDRESS(PointerPte)": 1,
                "Process->ForkInProgress == NULL": 1,
                "MmAvailablePages >= 32": 2,
                "Pfn1->u1.Event == 0": 1,
                "PointerProtoPte->u.Hard.Valid == 1": 1,
                "Pfn1->OriginalPte.u.Soft.Prototype != 0": 1,
                "(*LockedProtoPfn)->u3.e2.ReferenceCount >= 1": 1,
                "MappingPte <= MiHighestUserPte": 2,
                "PointerPte == MiAddressToPte(Address)": 1,
                "(%s:%d) Transition fault on 0x%p with PTE 0x%p in process %s": 1,
                "*InPageBlock == NULL": 1,
                "OldIrql != MM_NOIRQL": 1,
                "(TempPte.u.Soft.Valid == 0) && (TempPte.u.Soft.Prototype == 0) && (TempPte.u.Soft.Transition == 1)": 1,
                "(%s:%d) Transition PFN: %lx": 1,
                "Pfn1->u4.InPageError == 0": 2,
                "Pfn1->u3.e1.ReadInProgress == 0": 2,
                "MmAvailablePages > 0": 1,
                "MmAvailablePages > 32": 1,
                "(%s:%d) Transition in active list": 1,
                "(Pfn1->PteAddress >= MiAddressToPte(MmPagedPoolStart)) && (Pfn1->PteAddress <= MiAddressToPte(MmPagedPoolEnd))": 1,
                "Pfn1->u2.ShareCount != 0": 1,
                "(%s:%d) Transition page in free/zero list": 1,
                "NewRefCount < 2500": 1,
                "(%s:%d) Double transition fault not yet supported": 1,
                "PointerPte->u.Trans.Prototype == 0": 1,
                "PointerPte->u.Trans.Transition == 1": 1,
                "PointerPte->u.Soft.Prototype == 1": 1,
                "(%s:%d) Access on reserved section?": 1,
                "TempPte.u.Long != MmDecommittedPte.u.Long": 1,
                "Process->CloneRoot == NULL": 2,
                "TempPte.u.Soft.Prototype == 0": 2,
                "TempPte.u.Soft.PageFileHigh == 0": 1,
                "OldIrql <= APC_LEVEL": 2,
                "!MI_IS_PHYSICAL_ADDRESS(PointerProtoPte)": 1,
                "OldIrql == KeGetCurrentIrql()": 1,
                "PointerPte->u.Soft.PageFileHigh == MI_PTE_LOOKUP_NEEDED": 1,
                "Address <= MM_HIGHEST_USER_ADDRESS": 1,
                "SuperProtoPte->u.Hard.Valid == 1": 1,
                "PointerProtoPte->u.Hard.Valid == 0": 1,
                "PointerProtoPte->u.Trans.Prototype == 0": 1,
                "PointerProtoPte->u.Trans.Transition == 1": 1,
                "OutPfn->u3.e2.ReferenceCount > 1": 1,
                "OutPfn->u3.e2.ReferenceCount >= 1": 1,
                "TempPte.u.Hard.Valid == 0": 2,
                "TempPte.u.Soft.Transition == 0": 2,
                "MM:***PAGE FAULT AT IRQL > 1  Va %p, IRQL %lx": 1,
                "MM:***EIP %p, EFL %p": 1,
                "MM:***EAX %p, ECX %p EDX %p": 1,
                "MM:***EBX %p, ESI %p EDI %p": 1,
                "MI_IS_PAGE_LARGE(PointerPde) == FALSE": 1,
                "(%s:%d) Fault at IRQL %u is ok (%p)": 1,
                "MiCheckPdeForPagedPool(Address) != STATUS_WAIT_1": 1,
                "(Thread->OwnsSystemWorkingSetExclusive == FALSE) && (Thread->OwnsSystemWorkingSetShared == FALSE)": 2,
                "(Thread->OwnsSessionWorkingSetExclusive == FALSE) && (Thread->OwnsSessionWorkingSetShared == FALSE)": 1,
                "(Thread->OwnsProcessWorkingSetExclusive == FALSE) && (Thread->OwnsProcessWorkingSetShared == FALSE)": 1,
                "!IsSessionAddress": 1,
                "MI_IS_SESSION_IMAGE_ADDRESS(Address)": 1,
                "(Thread->OwnsSystemWorkingSetExclusive == TRUE) || (Thread->OwnsSystemWorkingSetShared == TRUE)": 2,
                "(Thread->OwnsSessionWorkingSetExclusive == TRUE) || (Thread->OwnsSessionWorkingSetShared == TRUE)": 1,
                "(Thread->OwnsProcessWorkingSetExclusive) || (Thread->OwnsProcessWorkingSetShared)": 1,
                "ProtoPte != NULL": 1,
                "PointerPde->u.Long == 0": 3,
                "PointerPde->u.Hard.Valid == 1": 4,
                "*RefCount <= PTE_PER_PAGE": 3,
                "ProtectionCode != MM_DECOMMIT": 1,
                "ProtoPte == NULL": 1,
                "CurrentThread->ApcNeeded == 0": 1,
                "KeGetCurrentIrql() == OldIrql": 1,
                "PageFrameIndex": 2,
                "Pfn1->u1.Event == NULL": 2,
                "ProtectionCode != 0x100": 1,
                "CurrentProcess->CloneRoot != NULL": 1,
                "((StoreInstruction) && (PointerPte->u.Hard.CopyOnWrite)) == FALSE": 1,
                "MI_IS_SESSION_ADDRESS((PVOID)WorkingSet) == FALSE": 2,
                "(%s:%d) Invalid no-execute options": 1,
                "../../ntoskrnl/mm/ARM3/pfnlist.c": 1,
                "VirtualAddress": 1,
                "Entry->u3.e1.WriteInProgress == 0": 1,
                "Entry->u3.e1.ReadInProgress == 0": 1,
                "ListHead != NULL": 1,
                "ListName <= FreePageList": 1,
                "((ListHead)->Total == 0 && (ListHead)->Flink == LIST_HEAD && (ListHead)->Blink == LIST_HEAD) || ((ListHead)->Total != 0 && (ListHead)->Flink != LIST_HEAD && (ListHead)->Blink != LIST_HEAD)": 1,
                "ListHead->Total != 0": 1,
                "Entry->u4.PteFrame != COLORED_LIST_HEAD": 1,
                "ColorTable->Count >= 1": 1,
                "(%s:%d) Running low on pages: %lu remaining": 1,
                "Pfn->u3.e2.ReferenceCount == 0": 1,
                "ListHead->ListName >= StandbyPageList": 1,
                "Pfn->u3.e1.Rom == 0": 1,
                "Pfn->u3.e1.PrototypePte == 1": 1,
                "Pfn->OriginalPte.u.Soft.Prototype == 0": 1,
                "Pfn->u3.e1.WriteInProgress == 0": 1,
                "Pfn->u3.e1.ReadInProgress == 0": 1,
                "Color < MmSecondaryColors": 1,
                "Pfn1->u3.e1.RemovalRequested == 0": 1,
                "Pfn1->u3.e1.Rom == 0": 2,
                "MmAvailablePages != 0": 1,
                "((&MmFreePageListHead)->Total == 0 && (&MmFreePageListHead)->Flink == LIST_HEAD && (&MmFreePageListHead)->Blink == LIST_HEAD) || ((&MmFreePageListHead)->Total != 0 && (&MmFreePageListHead)->Flink != LIST_HEAD && (&MmFreePageListHead)->Blink != LIST_HEAD)": 1,
                "((&MmZeroedPageListHead)->Total == 0 && (&MmZeroedPageListHead)->Flink == LIST_HEAD && (&MmZeroedPageListHead)->Blink == LIST_HEAD) || ((&MmZeroedPageListHead)->Total != 0 && (&MmZeroedPageListHead)->Flink != LIST_HEAD && (&MmZeroedPageListHead)->Blink != LIST_HEAD)": 1,
                "PageIndex != LIST_HEAD": 2,
                "MmZeroedPageListHead.Total == 0": 1,
                "(Pfn1->u3.e1.PageLocation == FreePageList) || (Pfn1->u3.e1.PageLocation == ZeroedPageList)": 1,
                "Pfn1->u3.e2.ReferenceCount == 0": 2,
                "Pfn1 == MI_PFN_ELEMENT(PageIndex)": 1,
                "(PageFrameIndex != 0) && (PageFrameIndex <= MmHighestPhysicalPage) && (PageFrameIndex >= MmLowestPhysicalPage)": 1,
                "Pfn1->u4.MustBeCached == 0": 1,
                "Pfn1->u3.e1.Rom != 1": 1,
                "(%s:%d) Inserting page: %lx into standby list !": 1,
                "Pfn1->u3.e1.PrototypePte == 1": 1,
                "ListHead != &MmFreePageListHead": 1,
                "(PageFrameIndex) && (PageFrameIndex <= MmHighestPhysicalPage) && (PageFrameIndex >= MmLowestPhysicalPage)": 1,
                "ListHead->ListName == ListName": 1,
                "Pfn1->OriginalPte.u.Soft.Prototype == 0": 1,
                "ListName == ZeroedPageList": 1,
                "Pfn1->OriginalPte.u.Soft.PageFileHigh == 0": 1,
                "PsGetCurrentProcess()->Vm.WorkingSetSize == 0": 1,
                "!((Pfn1->OriginalPte.u.Soft.Prototype == 0) && (Pfn1->OriginalPte.u.Soft.Transition == 1))": 1,
                "PageFrameIndex != 0": 2,
                "(%s:%d) Warning, running low on memory: %lu pages left": 1,
                "(%s:%d) PageFrameIndex=0x%lx, MmHighestPhysicalPage=0x%lx": 1,
                "(%s:%d) Pfn1=%p, Element=%p, RefCount=%u": 1,
                "PageFrameIndex <= MmHighestPhysicalPage": 1,
                "Pfn1 == MI_PFN_ELEMENT(PageFrameIndex)": 1,
                "Pfn1->u3.e2.ReferenceCount < 2500": 1,
                "PageFrameIndex > 0": 1,
                "MI_PFN_ELEMENT(PageFrameIndex) != NULL": 1,
                "Pfn1->u2.ShareCount < 0xF000000": 1,
                "(PointerPte >= (PMMPTE)MmPagedPoolStart) && (PointerPte <= (PMMPTE)MmPagedPoolEnd)": 1,
                "MI_IS_ROS_PFN(Pfn1) == FALSE": 2,
                "MI_PFN_ELEMENT(*PageFrameIndex)->u1.WsIndex == 0": 1,
                "../../ntoskrnl/mm/ARM3/pool.c": 1,
                "MiLowNonPagedPoolThreshold < MiHighNonPagedPoolThreshold": 1,
                "(%s:%d) OUT OF PAGED POOL!!!": 1,
                "PageTableCount < i": 1,
                "FreeEntry->Signature == MM_FREE_POOL_SIGNATURE": 1,
                "Pfn1->u3.e1.StartOfAllocation == 0": 1,
                "Pfn1->u3.e1.EndOfAllocation == 0": 1,
                "(%s:%d) Out of NP Expansion Pool": 1,
                "FreePages == NumberOfPages": 1,
                "(ULONG_PTR)StartingVa + NumberOfPages <= (ULONG_PTR)MmNonPagedPoolEnd": 1,
                "FreeEntry->Owner == FreeEntry": 1,
                "FreePages != 0": 1,
                "(%s:%d) Session Pool Start: 0x%p End: 0x%p": 1,
                "NT_SUCCESS(Status) == TRUE": 1,
                "MmSessionSpace->PageTables[Index].u.Long == 0": 2,
                "PagedPoolInfo->PagedPoolAllocationMap != NULL": 1,
                "PagedPoolInfo->EndOfPagedPoolBitmap != NULL": 1,
                "MiRaisePoolQuota": 2,
                "MmAllocateMappingAddress": 3,
                "MmFreeMappingAddress": 3,
                "../../ntoskrnl/mm/ARM3/procsup.c": 1,
                "*Base >= (ULONG_PTR)MI_LOWEST_VAD_ADDRESS": 1,
                "Vad->EndingVpn >= Vad->StartingVpn": 2,
                "MI_IS_WS_UNSAFE(Process)": 3,
                "Vad != NULL": 2,
                "(%s:%d) Corrupted VAD!": 1,
                "(Vad->StartingVpn == ((ULONG_PTR)Teb >> PAGE_SHIFT) && (Vad->EndingVpn == (TebEnd >> PAGE_SHIFT)))": 1,
                "Vad->u.VadFlags.NoChange == TRUE": 1,
                "Vad->u2.VadFlags2.OneSecured == TRUE": 1,
                "Vad->u2.VadFlags2.MultipleSecured == FALSE": 1,
                "VadTree->NumberGenericTableElements >= 1": 1,
                "MappingPte > MiHighestUserPte": 2,
                "!MI_IS_SESSION_PTE(MappingPte)": 2,
                "(MappingPte < (PMMPTE)PDE_BASE) || (MappingPte > (PMMPTE)PDE_TOP)": 1,
                "((ULONG_PTR)Thread->StackBase - (ULONG_PTR)Thread->StackLimit) <= (KERNEL_LARGE_STACK_SIZE + PAGE_SIZE)": 1,
                "LimitPte->u.Hard.Valid == 1": 1,
                "(%s:%d) Thread wants too much stack": 1,
                "Pfn1->u4.PteFrame == MiGetPfnEntryIndex(Pfn1)": 1,
                "Process->Pcb.DirectoryTableBase[0] != 0": 1,
                "Process->PdeUpdateNeeded == FALSE": 1,
                "Process->AddressSpaceInitialized <= 1": 1,
                "Process->VadRoot.NumberGenericTableElements == 0": 1,
                "Process->Pcb.DirectoryTableBase[0] == PageFrameNumber * PAGE_SIZE": 1,
                "PointerPte->u.Long != 0": 2,
                "Process->PhysicalVadRoot == NULL": 1,
                "Process->AddressSpaceInitialized == 0": 1,
                "Process->Pcb.DirectoryTableBase[0] == 0": 1,
                "MiGetPdeOffset(MmHyperSpaceEnd) >= PdeOffset": 1,
                "Process->AddressSpaceInitialized == 2": 1,
                "Vad->u.VadFlags.VadType == VadNone": 3,
                "(Pfn1->u3.e2.ReferenceCount == 0) || (Pfn1->u3.e1.WriteInProgress)": 1,
                "NtAllocateUserPhysicalPages": 2,
                "NtMapUserPhysicalPages": 2,
                "NtMapUserPhysicalPagesScatter": 2,
                "NtFreeUserPhysicalPages": 2,
                "../../ntoskrnl/mm/ARM3/section.c": 1,
                "(Protect & PAGE_GUARD) == 0": 1,
                "(Protect & (PAGE_GUARD | PAGE_NOACCESS)) == 0": 1,
                "(%s:%d) Invalid protection mask": 2,
                "Session->SystemSpaceBitMap": 1,
                "Session->SystemSpaceViewTable != NULL": 1,
                "Buckets < MI_SYSTEM_VIEW_BUCKET_SIZE": 1,
                "(%s:%d) Ran out of system view hash entries": 1,
                "(%s:%d) Out of system view space": 1,
                "ControlArea->u.Flags.GlobalOnlyPerSession == 0": 1,
                "ControlArea->u.Flags.Rom == 0": 1,
                "ControlArea->FilePointer == NULL": 1,
                "PteCount != 0": 1,
                "ControlArea->NumberOfMappedViews >= 1": 1,
                "ControlArea->NumberOfUserReferences >= 1": 1,
                "ControlArea->NumberOfSectionReferences != 0": 1,
                "ControlArea->u.Flags.BeingCreated == 0": 1,
                "ControlArea->u.Flags.BeingDeleted == 0": 1,
                "ControlArea->u.Flags.BeingPurged == 0": 1,
                "PointerPte->u.Long == 0": 1,
                "FailIfSystemViews == FALSE": 1,
                "ControlArea->u.Flags.Image == 0": 1,
                "Subsection->SubsectionBase != NULL": 1,
                "Vad->FirstPrototypePte >= Subsection->SubsectionBase": 1,
                "Vad->FirstPrototypePte < &Subsection->SubsectionBase[Subsection->PtesInSubsection]": 1,
                "PteOffset < 0xF0000000": 1,
                "PteOffset < Subsection->PtesInSubsection": 1,
                "ControlArea->u.Flags.BeingDeleted == 1": 1,
                "ControlArea->WritableUserReferences == 0": 1,
                "ControlArea->DereferenceList.Flink == NULL": 1,
                "!(ControlArea->u.Flags.Image) & !(ControlArea->u.Flags.File)": 1,
                "SegmentFlags.LargePages == 0": 1,
                "TempPte.u.Soft.Prototype == 1": 1,
                "ControlArea->NumberOfUserReferences == 0": 1,
                "Vad->u2.VadFlags2.ExtendableFile == FALSE": 1,
                "ControlArea": 1,
                "(%s:%d) Process died!": 1,
                "(%s:%d) No VAD or invalid VAD": 1,
                "(%s:%d) Trying to unmap protected VAD!": 1,
                "Vad->u.VadFlags.VadType != VadRotatePhysical": 2,
                "Process->VadRoot.NumberGenericTableElements >= 1": 2,
                "StartVa >= (PVOID)MmSessionBase": 1,
                "EndVa < (PVOID)MiSessionSpaceEnd": 1,
                "PAGE_ALIGN(EndVa) == EndVa": 1,
                "StartPde->u.Hard.Valid == 0": 1,
                "ActualPages <= PageCount": 1,
                "ControlArea->u.Flags.WasPurged == 0": 1,
                "(%s:%d) View is too large": 1,
                "(%s:%d) Out of system space": 1,
                "(AllocationType & MEM_DOS_LIM) == 0": 1,
                "(SectionOffset->LowPart & ((ULONG)_64K - 1)) == 0": 1,
                "Segment->SegmentFlags.TotalNumberOfPtes4132 == 0": 1,
                "PteOffset < Segment->TotalNumberOfPtes": 1,
                "((SectionOffset->QuadPart + *ViewSize + PAGE_SIZE - 1) >> PAGE_SHIFT) >= PteOffset": 1,
                "Segment->SegmentFlags.LargePages == 0": 1,
                "Process->VmTopDown == 0": 1,
                "ZeroBits == 0": 1,
                "(%s:%d) Conflict with SEC_BASED or manually based section!": 1,
                "(AllocationType & MEM_RESERVE) == 0": 1,
                "Vad->FirstPrototypePte <= Vad->LastContiguousPte": 1,
                "QuotaCharge >= QuotaExcess": 1,
                "Segment->NumberOfCommittedPages <= Segment->TotalNumberOfPtes": 1,
                "Subsection->u.SubsectionFlags.SectorEndOffset == 0": 1,
                "(%s:%d) Mm: Subsection inconsistent (%x vs %x)": 1,
                "(AllocationAttributes & SEC_LARGE_PAGES) == 0": 1,
                "ProtectionMask != 0": 1,
                "NewSegment": 1,
                "SectionObject != NULL": 1,
                "MiIsRosSectionObject(SectionObject) == TRUE": 1,
                "(%s:%d) HERE!": 1,
                "(%s:%d) Name query failed": 1,
                "(%s:%d) Not an image section": 1,
                "(%s:%d) Invalid address": 1,
                "(%s:%d) Address is not a section": 1,
                "FileObject != NULL": 1,
                "Pfn1->u3.e1.CacheAttribute != MiWriteCombined": 1,
                "PointerPte->u.Hard.PageFrameNumber == TempPte.u.Hard.PageFrameNumber": 1,
                "PreviousPte.u.Hard.Valid == 1": 1,
                "(%s:%d) Warning, not handling dirty bit": 1,
                "FoundVad->u.VadFlags.VadType != VadWriteWatch": 1,
                "FoundVad->u.VadFlags.PrivateMemory == 0": 1,
                "FoundVad->u.VadFlags.VadType != VadImageMap": 1,
                "FoundVad->u2.VadFlags2.CopyOnWrite == 0": 1,
                "(%s:%d) Invalid section protect": 1,
                "FoundVad->u.VadFlags.VadType != VadRotatePhysical": 2,
                "(NewProtect & (PAGE_NOACCESS | PAGE_GUARD)) == 0": 1,
                "PteContents.u.Soft.Prototype == 0": 2,
                "PteContents.u.Soft.Transition == 0": 2,
                "SystemMapPde->u.Hard.Valid == 1": 1,
                "(PteContents.u.Long == 0) || (PteContents.u.Soft.Prototype == 1)": 1,
                "((Pfn1->u3.e1.PrototypePte) && (Pfn1->OriginalPte.u.Soft.Prototype)) == 0": 1,
                "(AllocationAttributes & ~(SEC_COMMIT | SEC_RESERVE | SEC_BASED | SEC_LARGE_PAGES | SEC_IMAGE | SEC_NOCACHE | SEC_NO_CHANGE)) == 0": 1,
                "(AllocationAttributes & (SEC_COMMIT | SEC_RESERVE | SEC_IMAGE)) != 0": 1,
                "!((AllocationAttributes & SEC_IMAGE) && (AllocationAttributes & (SEC_COMMIT | SEC_RESERVE | SEC_NOCACHE | SEC_NO_CHANGE)))": 1,
                "!((AllocationAttributes & SEC_COMMIT) && (AllocationAttributes & SEC_RESERVE))": 1,
                "!((SectionPageProtection & PAGE_NOCACHE) || (SectionPageProtection & PAGE_WRITECOMBINE) || (SectionPageProtection & PAGE_GUARD) || (SectionPageProtection & PAGE_NOACCESS))": 1,
                "FileObject == NULL": 1,
                "(AllocationAttributes & SEC_IMAGE) == 0": 1,
                "File->SectionObjectPointer->DataSectionObject == NULL": 1,
                "NewSegment == NULL": 1,
                "PreviousSectionPointer == File->SectionObjectPointer": 1,
                "File != NULL": 1,
                "ControlArea->WaitingForDeletion == NULL": 1,
                "Segment->ControlArea->u.Flags.Rom == 0": 1,
                "Subsection->NextSubsection == NULL": 1,
                "(%s:%d) BASED section is too large": 1,
                "ControlArea->u.Flags.WasPurged == FALSE": 1,
                "(ULONG64)NewSection->SizeOfSection.QuadPart <= NewSection->Segment->SizeOfSegment": 1,
                "Section->u.Flags.Image == 0": 1,
                "Section->u.Flags.NoCache == 0": 1,
                "Section->u.Flags.WriteCombined == 0": 1,
                "ControlArea->u.Flags.PhysicalMemory == 0": 1,
                "(%s:%d) Mapping protection is incompatible": 1,
                "(%s:%d) Section offset overflows": 1,
                "(%s:%d) Section offset is larger than section": 1,
                "(%s:%d) Section view won't fit": 1,
                "(%s:%d) Attempting to commit more than the view itself": 1,
                "(%s:%d) The view is larger than the section": 1,
                "(%s:%d) The protection is invalid": 1,
                "(%s:%d) Cannot write combine a pagefile-backed section": 1,
                "(%s:%d) The process is dying": 1,
                "(%s:%d) Process is not in session": 1,
                "MmIsAddressValid(MmSessionSpace) == TRUE": 2,
                "(%s:%d) Proess is not in session": 1,
                "(%s:%d) Base outside of valid range": 1,
                "(%s:%d) Size outside of valid range": 1,
                "ViewSize != 0": 1,
                "(%s:%d) Only page-filed backed sections can be commited": 1,
                "(%s:%d) PTE is out of bounds": 1,
                "(%s:%d) Bogus allocation attribute: %lx": 1,
                "(%s:%d) Missing allocation type in allocation attributes": 1,
                "(%s:%d) Image allocation with invalid attributes": 1,
                "(%s:%d) Commit and reserve in the same time": 1,
                "(%s:%d) Sections don't support these protections": 1,
                "(%s:%d) Invalid zero bits": 1,
                "(%s:%d) Invalid inherit disposition": 1,
                "(%s:%d) Invalid allocation type": 1,
                "(%s:%d) Invalid page protection": 1,
                "(%s:%d) Kernel base not allowed": 1,
                "(%s:%d) Overflowing into kernel base not allowed": 1,
                "(%s:%d) Trying to unmap a kernel view": 1,
                "(%s:%d) Not extending a file": 1,
                "MmDisableModifiedWriteOfSection": 3,
                "MmForceSectionClosed": 3,
                "../../ntoskrnl/mm/ARM3/session.c": 1,
                "(%s:%d) Last process in session %lu going down!!!": 1,
                "!MI_IS_PHYSICAL_ADDRESS(SessionGlobal)": 1,
                "RtlCheckBit(MiSessionIdBitmap, SessionId)": 1,
                "MiExpansionLockOwner == NULL": 1,
                "SessionGlobal->u.Flags.DeletePending == 0": 1,
                "MiExpansionLockOwner == PsGetCurrentThread()": 1,
                "MmSessionSpace->u.Flags.DeletePending == 1": 1,
                "MmSessionSpace->AttachCount == 0": 1,
                "PsGetCurrentProcess()->ProcessInSession || ((MmSessionSpace->u.Flags.Initialized == 0) && (PsGetCurrentProcess()->Vm.Flags.SessionLeader == 1) && (MmSessionSpace->ReferenceCount == 1))": 1,
                "Process->Session == NULL": 1,
                "NewProcess->Session == NULL": 1,
                "PointerPde->u.Hard.Global == 0": 1,
                "SessionGlobal->WsListEntry.Flink == NULL": 1,
                "SessionGlobal->WsListEntry.Blink == NULL": 1,
                "SessionGlobal->Vm.WorkingSetExpansionLinks.Flink == NULL": 1,
                "SessionGlobal->Vm.WorkingSetExpansionLinks.Blink == NULL": 1,
                "MmIsAddressValid(MmSessionSpace) == FALSE": 1,
                "(%s:%d) Lost session race": 1,
                "Process->Flags & PSF_SESSION_CREATION_UNDERWAY_BIT": 1,
                "PageTables != NULL": 1,
                "(%s:%d) Too many sessions created. Expansion not yet supported": 1,
                "SessionPte != NULL": 1,
                "MI_PFN_ELEMENT(SessionPageDirIndex)->u1.WsIndex == 0": 1,
                "MI_PFN_ELEMENT(DataPage[i])->u1.WsIndex == 0": 1,
                "(%s:%d) Session %lu is ready to go: 0x%p 0x%p, %lx 0x%p": 1,
                "Result == TRUE": 1,
                "SessionGlobal->ProcessReferenceToSession == 0": 1,
                "(%s:%d) Process already in session": 1,
                "(%s:%d) Session leader race": 1,
                "MiSessionLeaderExists == 1": 1,
                "(%s:%d) Not in a session!": 1,
                "(%s:%d) Not a session leader!": 1,
                "EntryProcess != NULL": 1,
                "EntryProcess->Vm.Flags.SessionLeader == 0": 1,
                "EntrySession != NULL": 1,
                "CurrentSession->SessionId != EntrySession->SessionId": 1,
                "EntrySession->AttachCount >= 1": 1,
                "KeGetCurrentIrql () <= APC_LEVEL": 2,
                "EntryProcess->Session != NULL": 1,
                "../../ntoskrnl/mm/ARM3/special.c": 1,
                "SpecialPoolPtes >= PTE_PER_PAGE": 1,
                "(%s:%d) Special pool start %p - end %p": 1,
                "(%s:%d) MmAllocateSpecialPool(%x %x %x %x)": 1,
                "(%s:%d) Special pool: MmAvailablePages 0x%x is too small": 1,
                "(%s:%d) Special pool: No PTEs left!": 1,
                "(NumberOfBytes <= PAGE_SIZE - sizeof(POOL_HEADER)) && (PAGE_SIZE <= 32 * 1024)": 1,
                "(%s:%d) %p": 1,
                "(%s:%d) MmFreeSpecialPool(%p)": 1,
                "(PointerPte + 1)->u.Soft.PageFileHigh == SPECIAL_POOL_NONPAGED_PTE": 1,
                "(PointerPte + 1)->u.Soft.PageFileHigh == SPECIAL_POOL_PAGED_PTE": 1,
                "MiSpecialPoolLastPte->u.List.NextEntry == MM_EMPTY_PTE_LIST": 1,
                "(%s:%d) p1 %p size %lu": 1,
                "(%s:%d) p2[%lu] %p size %lu": 1,
                "(%s:%d) Freeing %p": 1,
                "../../ntoskrnl/mm/ARM3/sysldr.c": 1,
                "Session loading not yet supported!": 1,
                "LdrEntry == NULL": 1,
                "(%s:%d) MmMapViewOfSection failed with status 0x%x": 1,
                "(%s:%d) MiReserveSystemPtes failed": 1,
                "(%s:%d) Loading: %wZ at %p with %lx pages": 1,
                "DllInitialize": 1,
                "!(Function > (PVOID)ExportDirectory) && (Function < (PVOID)((ULONG_PTR)ExportDirectory + ExportSize))": 1,
                "(%s:%d) Warning: Driver failed to load, %s not found": 1,
                "LdrEntry->LoadCount != 0": 1,
                "(%s:%d) Leaking driver: %wZ": 1,
                "DllUnload": 1,
                "LdrEntry->LoadCount == 0": 1,
                "(%s:%d) %wZ <%wZ>": 1,
                "LdrEntry->LoadCount >= 1": 1,
                "MI_IS_PHYSICAL_ADDRESS(InitStart) == FALSE": 1,
                "*StartVa == 0": 1,
                "MI_IS_PHYSICAL_ADDRESS((PVOID)InitStart) == FALSE": 1,
                "MI_IS_PHYSICAL_ADDRESS(DllBase) == FALSE": 1,
                "UNRECOVERABLE ERROR:  %s at %s:%d ": 2,
                "[Mm0]: Couldn't allocate driver section!": 1,
                "ExpInitializationPhase == 0": 1,
                "OldPte.u.Hard.Valid == 1": 1,
                "*(PULONG)NewImageAddress == *(PULONG)DllBase": 1,
                "SYSLDR": 1,
                "Relocations failed!": 1,
                "EntryArray[j]": 1,
                "Broken IAT entry for %p at %p (%lx)": 1,
                "LoadedImports": 1,
                "j == ImportSize": 1,
                "*ImageBaseAddress >= MmSystemRangeStart": 1,
                "(%s:%d) Large pages not supported!": 1,
                "(%s:%d) Session drivers not supported": 1,
                "SessionSpace == FALSE": 1,
                "Session drivers not supported": 1,
                "Sections != 0": 1,
                "(%s:%d) Badly linked image!": 1,
                "(ComboPte == NULL) || (ComboPte == PointerPte)": 1,
                "StartPte < LastPte": 1,
                "CurrentPte >= StartPte": 1,
                "(%s:%d) WARNING: MiSetPagingOfDriver() called, but paging is broken! ignoring!": 1,
                "(%s:%d) ZwCreateSection failed with status 0x%x": 1,
                "(%s:%d) ZwMapViewOfSection failed with status 0x%x": 1,
                "in session space": 1,
                "NamePrefix == NULL": 1,
                "LoadedName == NULL": 1,
                "(%s:%d) Prefixed images are not yet supported!": 1,
                "(%s:%d) MM:SYSLDR Loading %wZ (%wZ) %s": 1,
                "Unsupported Session-Load!": 1,
                "(%s:%d) ZwOpenFile failed for '%wZ' with status 0x%x": 1,
                "Status != STATUS_ALREADY_COMMITTED": 1,
                "(%s:%d) MiLoadImageSection failed with status 0x%x": 1,
                "(%s:%d) LdrRelocateImageWithBias failed with status 0x%x": 1,
                "(%s:%d) MiResolveImageReferences failed with status 0x%x": 1,
                "(%s:%d)  Missing driver '%ls', missing API '%s'": 1,
                "%ws%wZ": 1,
                "Section == NULL": 1,
                "win32k": 1,
                "dxapi": 1,
                "coverage": 1,
                "ntdll": 1,
                "winsrv": 1,
                "advapi32": 1,
                "kernel32": 1,
                "user32": 1,
                "gdi32": 1,
                "ntoskrnl": 1,
                "(%s:%d) Name Prefix not yet supported!": 1,
                "(%s:%d) Failed to load dependency: %wZ": 1,
                "DllBase == DllEntry->DllBase": 1,
                "ERROR:  %s at %s:%d ": 1,
                "MmCallDllInitialize failed with status 0x%x": 1,
                "(%s:%d) Warning: Driver failed to load, %S not found": 1,
                "MI_IS_SESSION_IMAGE_ADDRESS(AddressWithinSection) == FALSE": 1,
                "MiLoadImageSection": 2,
                "MiResolveImageReferences": 2,
                "MiReloadBootLoadedDrivers": 2,
                "MiBuildImportsForBootDrivers": 2,
                "MiWriteProtectSystemImage": 2,
                "MmLoadSystemImage": 2,
                "MmResetDriverPaging": 3,
                "../../ntoskrnl/mm/ARM3/syspte.c": 1,
                "Alignment <= PAGE_SIZE": 1,
                "(%s:%d) MiReserveSystemPtes: Failed to reserve %lu PTE(s)!": 1,
                "NumberOfPtes != 0": 1,
                "StartingPte >= MmSystemPtesStart[SystemPtePoolType]": 1,
                "StartingPte + NumberOfPtes - 1 <= MmSystemPtesEnd[SystemPtePoolType]": 1,
                "NumberOfPtes >= 1": 1,
                "../../ntoskrnl/mm/ARM3/vadnode.c": 1,
                "FoundVad != NULL": 1,
                "(Vpn >= FoundVad->StartingVpn) && (Vpn <= FoundVad->EndingVpn)": 1,
                "CurrentNode != NULL": 1,
                "../../ntoskrnl/mm/ARM3/../../../lib/rtl/avlsupp.c": 1,
                "SearchResult != TableFoundNode": 1,
                "Table->DepthOfTree == 0": 2,
                "RtlParentAvl(Node) != Node": 2,
                "Vad->u4.Banked == (PVOID)0xDEADBABE": 1,
                "(Parent != NULL) || (Result == TableEmptyTree)": 1,
                "Result != TableFoundNode": 1,
                "Section->Address.EndingVpn >= Section->Address.StartingVpn": 1,
                "MemoryArea != (PVOID)0xDEADBAB1": 1,
                "MemoryArea->Type == MEMORY_AREA_OWNED_BY_ARM3": 2,
                "MemoryArea->Vad == NULL": 1,
                "Parent != NULL": 1,
                "BoundaryAddress": 1,
                "BoundaryAddress <= ((ULONG_PTR)MM_HIGHEST_VAD_ADDRESS + 1)": 1,
                "Table == &MmSectionBasedRoot": 1,
                "(%s:%d) Trying to mess with a no-change VAD!": 1,
                "Vad->u2.VadFlags2.MultipleSecured == 0": 1,
                "(%s:%d) Not allowed to change protection on guard page!": 1,
                "Vad->u2.VadFlags2.ReadOnly == 0": 1,
                "(%s:%d) Invalid protection mask for RW access!": 1,
                "../../ntoskrnl/mm/ARM3/virtual.c": 1,
                "PageTableVirtualAddress > MM_HIGHEST_USER_ADDRESS": 1,
                "(PageTableVirtualAddress < MmPagedPoolStart) || (PageTableVirtualAddress > MmPagedPoolEnd)": 1,
                "Thread->OwnsProcessWorkingSetShared == TRUE": 1,
                "VirtualAddress > MM_HIGHEST_USER_ADDRESS": 1,
                "PointerPte->u.Soft.Prototype == 0": 1,
                "PointerPte->u.Soft.Transition == 0": 1,
                "Pfn1->u1.WsIndex == 0": 1,
                "PointerPte->u.Soft.PageFileHigh == 0": 1,
                "CurrentProcess->CloneRoot == NULL": 1,
                "Va <= EndingAddress": 1,
                "ProtoPte <= Vad->LastContiguousPte": 1,
                "*RefCount < PTE_PER_PAGE": 1,
                "FailedInProbe == FALSE": 1,
                "TempPte.u.Long": 1,
                "Pfn->u4.AweAllocation == 0": 1,
                "(%s:%d) Prototype PTE: %lx %p": 1,
                "(%s:%d) VA: %p": 1,
                "(%s:%d) Mask: %lx": 1,
                "(%s:%d) Mask2: %lx": 1,
                "(Vad->StartingVpn <= ((ULONG_PTR)Va >> PAGE_SHIFT)) && (Vad->EndingVpn >= ((ULONG_PTR)Va >> PAGE_SHIFT))": 1,
                "PointerPde->u.Hard.LargePage == FALSE": 1,
                "(%s:%d) Not supported": 1,
                "(%s:%d) Process is dying": 1,
                "TargetProcess->VadRoot.NumberGenericTableElements": 1,
                "MemoryArea != NULL": 2,
                "(%s:%d) MmQuerySectionView failed. MemoryArea=%p (%p-%p), BaseAddress=%p": 1,
                "MemoryArea->Type == MEMORY_AREA_SECTION_VIEW": 1,
                "OldIrql == MM_NOIRQL": 1,
                "PointerPxe->u.Hard.Valid == 1": 1,
                "PointerPpe->u.Hard.Valid == 1": 1,
                "(%s:%d) Illegal VAD for attempting to set protection": 1,
                "(%s:%d) Trying to change protection of a NoChange VAD": 1,
                "(%s:%d) Invalid protection flags for section": 1,
                "(%s:%d) Fixme: Not checking for valid protection": 1,
                "(%s:%d) Section protection not yet supported": 1,
                "(%s:%d) Invalid protection flags for private memory": 1,
                "(%s:%d) The entire range is not committed": 1,
                "(%s:%d) Making valid page invalid is not yet supported!": 1,
                "Pfn1->u3.e1.PrototypePte == FALSE": 1,
                "PteContents.u.Soft.PageFileHigh == 0": 1,
                "CapturedEntryCount != 0": 1,
                "(%s:%d) Unhandled memory information class %d": 1,
                "(%s:%d) Too many zero bits": 1,
                "(%s:%d) Invalid Allocation Type": 1,
                "(%s:%d) No memory allocation base type": 1,
                "(%s:%d) Invalid use of MEM_RESET": 1,
                "(%s:%d) Must supply MEM_COMMIT with MEM_LARGE_PAGES": 1,
                "(%s:%d) Using illegal flags with MEM_LARGE_PAGES": 1,
                "(%s:%d) MEM_WRITE_WATCH used without MEM_RESERVE": 1,
                "(%s:%d) Using illegal flags with MEM_PHYSICAL": 1,
                "(%s:%d) MEM_PHYSICAL used without PAGE_READWRITE": 1,
                "(%s:%d) Virtual allocation base above User Space": 1,
                "(%s:%d) Region size would overflow into kernel-memory": 1,
                "(%s:%d) Region size is invalid (zero)": 1,
                "(%s:%d) Privilege not held for MEM_LARGE_PAGES": 1,
                "(%s:%d) Zero bits not supported": 1,
                "(%s:%d) MEM_LARGE_PAGES not supported": 1,
                "(%s:%d) MEM_PHYSICAL not supported": 1,
                "(%s:%d) MEM_WRITE_WATCH not supported": 1,
                "(%s:%d) MEM_TOP_DOWN not supported": 1,
                "(%s:%d) VmTopDown not supported": 1,
                "(%s:%d) Copy on write not allowed through this path": 1,
                "(%s:%d) Could not find a VAD for this allocation": 1,
                "(%s:%d) Illegal VAD for attempting a MEM_COMMIT": 1,
                "(%s:%d) Address range does not fit into the VAD": 1,
                "(%s:%d) Illegal commit of non-ARM3 section!": 1,
                "(%s:%d) Large page sections cannot be VirtualAlloc'd": 1,
                "(%s:%d) Cannot use caching flags with anything but rotate VADs": 1,
                "(%s:%d) Secured VAD being messed around with": 1,
                "FoundVad->ControlArea->FilePointer == NULL": 1,
                "(%s:%d) Invalid page protection for rotate VAD": 1,
                "QuotaCharge >= QuotaFree": 1,
                "FoundVad->u.VadFlags.VadType == VadNone": 1,
                "(%s:%d) Write copy attempted when not allowed": 1,
                "(%s:%d) Invalid FreeType": 1,
                "(%s:%d) Invalid FreeType combination": 1,
                "(%s:%d) Virtual free base above User Space": 1,
                "(%s:%d) Process is dead": 1,
                "(%s:%d) Unable to find VAD for address 0x%p": 1,
                "(%s:%d) Address 0x%p is beyond the VAD": 1,
                "(%s:%d) Attempt to free section memory": 1,
                "Vad->u.VadFlags.NoChange == 0": 1,
                "(%s:%d) Address 0x%p does not match the VAD": 1,
                "(%s:%d) Case A not handled": 1,
                "Vad->StartingVpn << PAGE_SHIFT == (ULONG_PTR)MemoryArea->StartingAddress": 1,
                "(Vad->EndingVpn + 1) << PAGE_SHIFT == (ULONG_PTR)MemoryArea->EndingAddress": 1,
                "(%s:%d) Case B not handled": 1,
                "(%s:%d) Trying to decommit from invalid VAD": 1,
                "(%s:%d) Decomitting non-committed memory": 1,
                "Vad->u.VadFlags.CommitCharge >= 0": 1,
                "(%s:%d) MM:MmGetPhysicalAddressFailed base address was %p": 1,
                "MmFlushVirtualMemory": 2,
                "MiGetPageProtection": 2,
                "MmGetVirtualForPhysical": 3,
                "MmSecureVirtualMemory": 3,
                "MmUnsecureVirtualMemory": 3,
                "NtLockVirtualMemory": 2,
                "NtUnlockVirtualMemory": 2,
                "NtGetWriteWatch": 2,
                "NtResetWriteWatch": 2,
                "../../ntoskrnl/mm/ARM3/zeropage.c": 1,
                "ZeroAddress": 1,
                "../../ntoskrnl/mm/balance.c": 1,
                "(%s:%d) Tried to release page zero.": 1,
                "pointerPde->u.Hard.Valid == 0": 2,
                "(%s:%d) KeWaitForMultipleObjects failed, status = %x": 1,
                "../../ntoskrnl/mm/freelist.c": 1,
                "Bitmap": 1,
                "Position != 0": 1,
                "MI_IS_ROS_PFN(MiGetPfnEntry(Position)) == TRUE": 1,
                "Pfn != 0": 1,
                "MI_IS_ROS_PFN(MiGetPfnEntry(Pfn)) == TRUE": 1,
                "!RtlCheckBit(&MiUserPfnBitMap, (ULONG)Pfn)": 1,
                "MI_IS_ROS_PFN(MiGetPfnEntry(Page)) == TRUE": 1,
                "RtlCheckBit(&MiUserPfnBitMap, (ULONG)Page)": 1,
                "(%s:%d) ARM3-DEBUG: Being called with %I64x %I64x %I64x %lx %d %lu": 1,
                "(%s:%d) WARNING: Caller requesting SkipBytes, MDL might be mismatched": 1,
                "PagesFound": 1,
                "PagesFound < PageCount": 1,
                "(%s:%d) NO MDL PAGES!": 1,
                "MiIsPfnInUse(Pfn1) == TRUE": 1,
                "MI_IS_ROS_PFN(Pfn1) == TRUE": 1,
                "MI_IS_ROS_PFN(Page) == TRUE": 1,
                "Pfn <= MmHighestPhysicalPage": 1,
                "Page->u3.e2.ReferenceCount != 0": 1,
                "(%s:%d) MmAllocPage(): Out of memory": 1,
                "MI_GET_ROS_DATA(Pfn1) != NULL": 1,
                "../../ntoskrnl/mm/marea.c": 1,
                "Node->Magic == 'erAM'": 1,
                "PAGE_ALIGN(Node->StartingAddress) == Node->StartingAddress": 1,
                "Node->EndingAddress != NULL": 1,
                "PAGE_ALIGN(Node->EndingAddress) == Node->EndingAddress": 1,
                "(ULONG_PTR)Node->StartingAddress < (ULONG_PTR)Node->EndingAddress": 1,
                "(Node->Type == 0) || (Node->Type == MEMORY_AREA_CACHE) || (Node->Type == MEMORY_AREA_SECTION_VIEW) || (Node->Type == MEMORY_AREA_OWNED_BY_ARM3) || (Node->Type == (MEMORY_AREA_OWNED_BY_ARM3 | MEMORY_AREA_STATIC))": 1,
                "Candidate >= LowestAddress": 1,
                "CONTAINING_RECORD(AddressSpace, EPROCESS, Vm)->AddressCreationLock.Owner == KeGetCurrentThread()": 1,
                "MemoryArea->Magic == 'erAM'": 1,
                "AddressSpace != MmGetKernelAddressSpace()": 1,
                "MemoryArea->EndingAddress < MmSystemRangeStart": 1,
                "MemoryArea->Type == MEMORY_AREA_SECTION_VIEW || MemoryArea->Type == MEMORY_AREA_CACHE": 1,
                "((PMMVAD)MemoryArea->Vad)->u.VadFlags.Spare != 0": 1,
                "MiStaticMemoryAreaCount < MI_STATIC_MEMORY_AREAS": 1,
                "(%s:%d) Not enough memory.": 1,
                "marea->Type == MEMORY_AREA_SECTION_VIEW || marea->Type == MEMORY_AREA_CACHE": 1,
                "marea->EndingAddress <= Node->StartingAddress || marea->StartingAddress >= Node->EndingAddress": 1,
                "marea->StartingAddress != Node->StartingAddress": 1,
                "((ULONG_PTR)BaseAddress % PAGE_SIZE) == 0": 1,
                "(%s:%d) Unable to allocate page": 1,
                "(%s:%d) Unable to create virtual mapping": 2,
                "(%s:%d) Process %p, Address %p, UsedPageTableEntries %lu": 1,
                "MiQueryPageTableReferences(Address) == 0": 1,
                "../../ntoskrnl/mm/mmfault.c": 1,
                "(%s:%d) MmAccessFault(Mode %d, Address %x)": 1,
                "(%s:%d) Page fault at high IRQL was %u, address %x": 1,
                "(%s:%d) Address: %x": 1,
                "MpwThread: Wait failed": 1,
                "../../ntoskrnl/mm/mminit.c": 1,
                "Boot Loaded Image": 1,
                "(%s:%d)           0x%p - 0x%p": 1,
                "PFN Database": 1,
                "ARM3 Non Paged Pool": 1,
                "System View Space": 1,
                "Session Space": 1,
                "Page Tables": 1,
                "Page Directories": 1,
                "Hyperspace": 1,
                "ARM3 Paged Pool": 1,
                "System PTE Space": 1,
                "Non Paged Pool Expansion PTE Space": 1,
                "Phase == 1": 1,
                "../../ntoskrnl/mm/pagefile.c": 1,
                "(%s:%d) MM: Out of swap space.": 1,
                "(%s:%d) Bad paging file 0x%.8X": 1,
                "(%s:%d) BytesPerAllocationUnit %lu is not a multiple of PAGE_SIZE %d": 1,
                "../../ntoskrnl/mm/rmap.c": 1,
                "(%s:%d) MmIsDirtyRmap: No rmaps.": 1,
                "(%s:%d) Insert rmap (%d, 0x%.8X) 0x%.8X which doesn't match physical address 0x%.8X": 1,
                "MmInsertRmap tries to add a second rmap entry for address %p": 1,
                "    current caller ": 1,
                "    previous caller ": 1,
                "(%s:%d) MmDeleteAllRmaps: No rmaps.": 1,
                "../../ntoskrnl/mm/section.c": 1,
                "ImageSectionObject->Segments[i].Image.VirtualAddress >= ImageSectionObject->Segments[i - 1].Image.VirtualAddress": 1,
                "(%s:%d) Mapping between 0x%p and 0x%p failed (%X).": 1,
                "KeGetCurrentIrql()<(2)": 1,
                "FileHeader": 1,
                "FileHeaderSize > 0": 1,
                "ImageSectionObject": 1,
                "ReadFileCb": 1,
                "AllocateSegmentsCb": 1,
                "Intsafe_CanOffsetPointer(FileHeader, FileHeaderSize)": 1,
                "((UINT_PTR)FileHeader % TYPE_ALIGNMENT(IMAGE_DOS_HEADER)) == 0": 1,
                "Intsafe_CanOffsetPointer(FileHeader, pidhDosHeader->e_lfanew)": 1,
                "pData": 1,
                "pBuffer": 1,
                "cbReadSize > 0": 1,
                "(UINT_PTR)pBuffer % TYPE_ALIGNMENT(IMAGE_NT_HEADERS32) == 0": 1,
                "IsPowerOf2(nFileAlignment)": 1,
                "Intsafe_CanMulULong32(pinhNtHeader->FileHeader.NumberOfSections, sizeof(IMAGE_SECTION_HEADER))": 1,
                "../../include/reactos/exeformat.h": 1,
                "IsPowerOf2(Alignment)": 1,
                "Intsafe_CanOffsetPointer(FileHeader, cbSectionHeadersOffset)": 1,
                "(UINT_PTR)pBuffer % TYPE_ALIGNMENT(IMAGE_SECTION_HEADER) == 0": 1,
                "pssSegments[i].Image.FileOffset == 0": 1,
                "pssSegments[i].RawLength.QuadPart == 0": 1,
                "Intsafe_CanAddLong64(pssSegments[i].Image.FileOffset, pssSegments[i].RawLength.QuadPart)": 1,
                "(%s:%d) Image segment %lu still referenced (was %lu)": 1,
                "(%s:%d) Data segment still referenced": 1,
                "(%s:%d) Entry == 0 for MmSharePageEntrySectionSegment": 1,
                "(%s:%d) Maximum share count reached": 1,
                "(%s:%d) Entry == 0 for MmUnsharePageEntrySectionSegment": 1,
                "(%s:%d) Zero share count for unshare (Seg %p Offset %x Page %x)": 1,
                "(%s:%d) CcRosUnmapCacheSegment failed, status = %x": 1,
                "(%s:%d) MM: Failed to write to swap page (Status was 0x%.8X)": 1,
                "(%s:%d) Found a swapentry for a non private page in an image or data file sgment": 1,
                "(%s:%d) Found a swap entry for a page in a pagefile section.": 1,
                "(%s:%d) Found a private page in a pagefile section.": 1,
                "(ULONG_PTR)DestAddress % PAGE_SIZE == 0": 1,
                "(ULONG_PTR)SrcAddress % PAGE_SIZE == 0": 1,
                "Region != NULL": 1,
                "(%s:%d) Found a swaped out private page in a pagefile section.": 1,
                "(%s:%d) MmRequestPageMemoryConsumer failed (Status %x)": 1,
                "(%s:%d) MiReadPage failed (Status %x)": 1,
                "MmIsPagePresent(Process, PAddress)": 1,
                "(%s:%d) Someone changed ppte entry while we slept (%x vs %x)": 1,
                "(%s:%d) MmCreateVirtualMapping failed, unable to create virtual mapping, not out of memory": 1,
                "dirty": 1,
                "clean": 1,
                "(%s:%d) Trying to page out from physical memory section address 0x%p process %p": 1,
                "(%s:%d) Trying to page out not-present page at (%p,0x%p).": 1,
                "(%s:%d) Direct mapped non private page is not associated with the cache.": 1,
                "(%s:%d) Found a %s private page (address %p) in a pagefile segment.": 1,
                "(%s:%d) Found a %s private page (address %p) in a shared section segment.": 1,
                "(%s:%d) Found a swapentry for a non private and direct mapped page (address %p)": 1,
                "(%s:%d) CCRosUnmapCacheSegment failed, status = %x": 1,
                "(%s:%d) Found a swap entry for a non dirty, non private and not direct mapped page (address %p)": 1,
                "(%s:%d) Status %x Swapping out %p:%p": 1,
                "OldEntry == 0 || OldEntry == MAKE_SWAP_SSE(MM_WAIT_ENTRY)": 1,
                "(%s:%d) Status %x Creating page file mapping for %p:%p": 1,
                "(%s:%d) Trying to write back page from physical memory mapped at %p process %p": 1,
                "(%s:%d) MmCreatePageFileSection: (UMaximumSize == NULL)": 1,
                "(%s:%d) MmCreatePageFileSection: failed to create object (0x%lx)": 1,
                "ImageSectionObject->Segments != NULL": 1,
                "ImageSectionObject->Segments[i].Length.QuadPart > 0": 1,
                "ImageSectionObject->Segments[i].Image.VirtualAddress >= (ImageSectionObject->Segments[i - 1].Image.VirtualAddress + ImageSectionObject->Segments[i - 1].Length.QuadPart)": 1,
                "ImageSectionObject->NrSegments >= 1": 1,
                "(ImageSectionObject->Segments[i].Image.VirtualAddress % PAGE_SIZE) == 0": 1,
                "(ImageSectionObject->Segments[i].Length.QuadPart % PAGE_SIZE) == 0": 1,
                "(EndOfEffectiveSegment % PAGE_SIZE) == 0": 1,
                "LastSegment <= i": 1,
                "LastSegment < ImageSectionObject->NrSegments": 1,
                "(EffectiveSegment->Image.VirtualAddress % PAGE_SIZE) == 0": 1,
                "PAGE_ROUND_UP(Segment->Image.VirtualAddress + Segment->Length.QuadPart) >= EndOfEffectiveSegment": 1,
                "ProtectionFlags < 16": 1,
                "ImageSectionObject->Segments": 1,
                "Process": 3,
                "MemoryArea->Type != MEMORY_AREA_OWNED_BY_ARM3": 1,
                "(%s:%d) NtQuerySection() failed, Status: 0x%x": 1,
                "*BaseAddress == NULL": 1,
                "*BaseAddress == ALIGN_DOWN_POINTER_BY(*BaseAddress, MM_VIRTMEM_GRANULARITY)": 1,
                "(%s:%d) ERROR: File can't be truncated because it has an image section": 1,
                "(%s:%d) SectionObject has ImageSection": 1,
                "(%s:%d) Page protection is invalid": 1,
                "(%s:%d) Large pages cannot be used with an image mapping": 1,
                "(%s:%d) Failed to get a handle to the FO: %lx": 1,
                "(%s:%d) CC failure: %lx": 1,
                "(%s:%d) Invalid path: %lx %p %p": 1,
                "(%s:%d) Failed to create PhysicalMemory section": 1,
                "MmSectionBasedRoot.NumberGenericTableElements == 0": 1,
                "../../ntoskrnl/ob/obdir.c": 1,
                "ObjectHeader->NameInfoOffset != 0": 1,
                "(%s:%d) OB: ObpInsertEntryDirectory - invalid context %p %u": 1,
                "../../ntoskrnl/include/internal/ob_x.h": 9,
                "OB: Unhandled path": 4,
                "../../ntoskrnl/ob/obhandle.c": 1,
                "*Object != NULL": 2,
                "HandleTable != NULL": 2,
                "!FreeEntry->Process": 1,
                "!FreeEntry->HandleCount": 1,
                "HandleInfo->SingleEntry.Process == Process": 1,
                "HandleInfo->SingleEntry.HandleCount > 0": 1,
                "Close": 1,
                "OB: ObjectType: %wZ  Procedure: %s  Object: %p": 4,
                "    Returned at %x IRQL, but was called at %x IRQL": 4,
                "NtClose": 3,
                "(%s:%d) ACCESS_SYSTEM_SECURITY not validated!": 1,
                "(%s:%d) Unhandled case": 1,
                "(%s:%d) Need auditing!": 1,
                "HandleTable->HandleCount == 0": 1,
                "(%s:%d) OB: Attempting to insert existing object %p": 1,
                "(Handle) || ((ObjectPointerBias == 0) && (ObjectName == NULL) && (ObjectType->TypeInfo.SecurityRequired) && (NewObject == NULL))": 1,
                "(%s:%d) Unhandled path": 1,
                "../../ntoskrnl/ob/oblife.c": 1,
                "Security": 2,
                "Delete": 1,
                "LocalObjectType->Index != 0": 1,
                "(%s:%d) NOT IMPLEMENTED!": 1,
                "(%s:%d) Privilege not held": 1,
                "../../ntoskrnl/ob/oblink.c": 1,
                "(%s:%d) Device Type %lu for %wZ is not known or unhandled": 1,
                "OB: Invalid symbolic link target - %wZ": 1,
                "ObpParseSymbolicLink": 2,
                "../../ntoskrnl/ob/obname.c": 1,
                "Parse": 1,
                "ReferencedDirectory == NULL": 1,
                "(((ULONG_PTR)Object) & MAX_FAST_REFS) == 0": 2,
                "../../ntoskrnl/ob/obref.c": 1,
                "Object": 1,
                "(%s:%d) Misbehaving object: %wZ": 1,
                "Header->HandleCount == 0": 1,
                "../../ntoskrnl/ob/obsdcach.c": 1,
                "Length == RtlLengthSecurityDescriptor(SecurityDescriptor)": 1,
                "Length1 == RtlLengthSecurityDescriptor(Sd1)": 1,
                "SdHeader->RefCount == 0": 1,
                "SdHeader->RefCount != 0": 1,
                "../../ntoskrnl/ob/obsecure.c": 1,
                "NewSd": 1,
                "SecurityDescriptor": 1,
                "CapturedDescriptor->Control & SE_SELF_RELATIVE": 1,
                "../../ntoskrnl/ob/obwait.c": 1,
                "(%s:%d) Invalid handle passed to NtWaitForMultipleObjects": 1,
                "(%s:%d) Handle does not have SYNCHRONIZE access": 1,
                "(%s:%d) Passed a duplicate object to NtWaitForMultipleObjects": 1,
                "(%s:%d) Failed to reference the handle with status 0x%x": 1,
                "../../ntoskrnl/po/events.c": 1,
                "(%s:%d) IoBuildDeviceIoControlRequest() failed": 1,
                "(%s:%d) A device reported the event 0x%x (": 1,
                " POWER": 1,
                " SLEEP": 1,
                " WAKE": 1,
                "(%s:%d) Initiating shutdown after power button event": 1,
                "(%s:%d) ZwOpenFile() failed with status 0x%08lx": 1,
                "(%s:%d) ObReferenceObjectByHandle() failed with status 0x%08lx": 1,
                "(%s:%d) Sending IOCTL_GET_SYS_BUTTON_CAPS failed with status 0x%08x": 1,
                "(%s:%d) ExAllocatePool() failed": 1,
                "(%s:%d) IoAllocateWorkItem() failed": 1,
                "(%s:%d) Removal of a power capable device not implemented": 1,
                "../../ntoskrnl/po/poshtdwn.c": 1,
                "                       ": 1,
                "The system may be powered off now.": 1,
                "(%s:%d) It's the final countdown...%lx": 1,
                "(%s:%d) %15s is still RUNNING (%p)": 1,
                "(%s:%d) HAL shutting down": 1,
                "(%s:%d) I/O manager shutting down in phase 0": 1,
                "(%s:%d) Configuration Manager shutting down": 1,
                "(%s:%d) I/O manager shutting down in phase 1": 1,
                "(%s:%d) Disabling wake timers": 1,
                "(%s:%d) Taking the system down": 1,
                "../../ntoskrnl/po/povolume.c": 1,
                "(%s:%d) Opening: %wZ": 1,
                "(%s:%d) Sending flush to: %p": 1,
                "(%s:%d) Opening registry": 1,
                "(%s:%d) Flushing registry": 1,
                "(%s:%d) Creating flush thread": 1,
                "(%s:%d) Local flush": 1,
                "(%s:%d) Waiting for flushes": 1,
                "(%s:%d) Flushes have completed": 1,
                "PopFlushVolumes": 2,
                "NOACPI": 1,
                "../../ntoskrnl/po/power.c": 1,
                "(%s:%d) PerfIdle function: %p": 1,
                "(%s:%d) PoShutdownBugCheck called": 1,
                "(%s:%d) No system power driver available": 1,
                "(%s:%d) Query system power state failed; changing state anyway": 1,
                "(%s:%d) Device '%wZ' failed IRP_MN_SET_POWER": 1,
                "(%s:%d) Device '%wZ' failed IRP_MN_QUERY_POWER": 1,
                "(%s:%d) PowerInformationLevel 0x%x is UNIMPLEMENTED! Have a nice day.": 1,
                "(%s:%d) NtSetSystemPowerState: Bad parameters!": 1,
                "(%s:%d)                        SystemAction: 0x%x": 1,
                "(%s:%d)                        MinSystemState: 0x%x": 1,
                "(%s:%d)                        Flags: 0x%x": 1,
                "(%s:%d) ERROR: Privilege not held for shutdown": 1,
                "(%s:%d) Stopping lazy flush": 1,
                "(%s:%d) Notifying callbacks": 1,
                "(%s:%d) Swapping worker threads": 1,
                "(%s:%d) Flushing volumes, cache flushed %lu pages": 1,
                "(%s:%d) Queueing shutdown thread": 1,
                "FALSE && \"System is still up and running?!\"": 1,
                "PoCancelDeviceNotify": 3,
                "PoRegisterDeviceNotify": 3,
                "PoSetHiberRange": 3,
                "PoRegisterDeviceForIdleDetection": 3,
                "PoRegisterSystemState": 3,
                "PoSetSystemState": 3,
                "PoStartNextPowerIrp": 3,
                "PoUnregisterSystemState": 3,
                "NtInitiatePowerAction": 2,
                "NtGetDevicePowerState": 2,
                "NtIsSystemResumeAutomatic": 2,
                "NtRequestWakeupLatency": 2,
                "State %u Affinity %08x Priority %d PID.TID %d.%d Name %.8s Stack: ": 1,
                "Ebp %p": 1,
                "%.8X %.8X%s": 1,
                "../../ntoskrnl/ps/debug.c": 1,
                "../../ntoskrnl/ps/job.c": 1,
                "(%s:%d) Failed to initialize job lock!!!": 1,
                "NtCreateJobSet": 2,
                "NtQueryInformationJobObject": 2,
                "NtSetInformationJobObject": 2,
                "../../ntoskrnl/ps/kill.c": 1,
                "!(((ULONG_PTR)SystemArgument2) & 1)": 1,
                "Break, or Ignore (bi)?": 1,
                "(NextEntry != NULL) && (NextEntry != (PVOID)1)": 1,
                "# checking PsActiveProcessHead @ %p": 1,
                "Thread->Tcb.Win32Thread == NULL": 1,
                "(Thread) == PsGetCurrentThread()": 1,
                "Critical thread 0x%p (in %s) exited": 1,
                "Critical  process 0x%p (in %s) exited": 1,
                "Thread->Tcb.CombinedApcDisable == 0": 1,
                "Terminating critical thread 0x%p (%s)": 1,
                "Terminating critical process 0x%p (%s)": 1,
                "../../ntoskrnl/ps/process.c": 1,
                "No support for cloning yet": 1,
                "(%s:%d) Jobs not yet supported": 2,
                "IsListEmpty(&Process->ThreadListHead) == TRUE": 1,
                "KiUserApcDispatcher": 1,
                "KiUserExceptionDispatcher": 1,
                "KiUserCallbackDispatcher": 1,
                "KiRaiseUserExceptionDispatcher": 1,
                "ExpInterlockedPopEntrySListEnd": 2,
                "../../ntoskrnl/ps/psmgr.c": 1,
                "(%s:%d) this not found": 1,
                "ExpInterlockedPopEntrySListFault": 2,
                "ExpInterlockedPopEntrySListResume": 2,
                "KiFastSystemCall": 1,
                "KiFastSystemCallRet": 1,
                "KiIntSystemCall": 1,
                "LdrInitializeThunk": 1,
                "NtApphelpCacheControl": 2,
                "../../ntoskrnl/ps/psnotify.c": 1,
                "../../ntoskrnl/ps/query.c": 1,
                "(%s:%d) PROCESS_DEVICEMAP_INFORMATION_EX not supported!": 1,
                "(%s:%d) Handle tracing Not implemented: %lx": 1,
                "(%s:%d) VDM/16-bit not implemented: %lx": 1,
                "(%s:%d) WS Watch Not implemented: %lx": 1,
                "(%s:%d) Pool limits Not implemented: %lx": 1,
                "(%s:%d) Unsupported info class: %lx": 1,
                "(%s:%d) Need TCB privilege": 1,
                "(%s:%d) Privilege to change priority to realtime lacking": 1,
                "(%s:%d) Privilege to change priority from %lx to %lx lacking": 1,
                "(%s:%d) Need TCB to set IOPL": 1,
                "(%s:%d) VDM/16-bit Request not implemented: %lx": 1,
                "(%s:%d) Quota Limits not implemented": 1,
                "(%s:%d) WS watch not implemented": 1,
                "(%s:%d) Device map not implemented": 1,
                "(%s:%d) Handle tracing not implemented": 1,
                "(%s:%d) Invalid Server 2003 Info Class: %lx": 1,
                "(%s:%d) Not implemented: %d": 1,
                "(%s:%d) Not implemented: %lx": 1,
                "NtSetInformationProcess": 3,
                "../../ntoskrnl/ps/quota.c": 1,
                "Process != PsInitialSystemProcess": 1,
                "PoolIndex <= 2": 1,
                "Process->QuotaBlock": 1,
                "(%s:%d) Quota exceeded, but ROS will let it slide...": 1,
                "!(Amount & 0x80000000)": 1,
                "(%s:%d) WARNING: Process->QuotaUsage sanity check failed.": 1,
                "QuotaBlock != NULL": 1,
                "KeGetCurrentIrql() < DISPATCH_LEVEL": 1,
                "../../ntoskrnl/ps/security.c": 1,
                "CurrentThread == PsGetCurrentThread()": 1,
                "../../ntoskrnl/include/internal/ps_x.h": 1,
                "../../ntoskrnl/ps/state.c": 1,
                "../../ntoskrnl/ps/thread.c": 1,
                "(%s:%d) PS: Unhandled Kernel Mode Exception Pointers = 0x%p": 1,
                "(%s:%d) Code %x Addr %p Info0 %p Info1 %p Info2 %p Info3 %p": 1,
                "!(Thread->CreateTime.HighPart & 0xF0000000)": 1,
                "../../ntoskrnl/ps/win32.c": 1,
                "PspW32ProcessCallout != NULL": 1,
                "Thread->Tcb.Win32Thread == 0": 1,
                "KeGetPreviousMode() != KernelMode": 1,
                "../../ntoskrnl/rtl/libsupp.c": 1,
                "%s:%i: Pagable code called at IRQL > APC_LEVEL (%u)": 1,
                "../../ntoskrnl/rtl/misc.c": 1,
                "../../ntoskrnl/se/access.c": 1,
                "PrincipalSelfSid == NULL": 1,
                "Restricted == FALSE": 1,
                "Sid != NULL": 1,
                "AccessState->SecurityDescriptor == NULL": 1,
                "AccessState->PrivilegesAllocated == FALSE": 1,
                "../../ntoskrnl/se/acl.c": 1,
                "../../ntoskrnl/se/audit.c": 1,
                "AuditInfo": 1,
                "ExGetPreviousMode() != KernelMode": 1,
                "(%s:%d) Invalid audit type: %u": 1,
                "PreviousMode != KernelMode": 1,
                "(%s:%d) Caller does not have SeAuditPrivilege": 1,
                "(%s:%d) Failed to capture subsystem name!": 1,
                "(%s:%d) Failed to reference client token: 0x%lx": 1,
                "(%s:%d) Invalid impersonation level (%u)": 1,
                "(%s:%d) Failed to capture service name!": 1,
                "(%s:%d) Failed to allocate %u bytes": 1,
                "(%s:%d) Got exception 0x%lx": 1,
                "SepAdtCloseObjectAuditAlarm": 2,
                "SepAdtPrivilegedServiceAuditAlarm": 2,
                "SepAccessCheckAndAuditAlarm": 2,
                "SeAuditHardLinkCreation": 3,
                "SeAuditingFileEvents": 3,
                "SeAuditingFileEventsWithContext": 3,
                "SeAuditingHardLinkEvents": 3,
                "SeAuditingHardLinkEventsWithContext": 3,
                "SeAuditingFileOrGlobalEvents": 3,
                "SeCloseObjectAuditAlarm": 3,
                "SeDeleteObjectAuditAlarm": 3,
                "SeOpenObjectForDeleteAuditAlarm": 3,
                "SePrivilegeObjectAuditAlarm": 3,
                "NtDeleteObjectAuditAlarm": 2,
                "NtOpenObjectAuditAlarm": 2,
                "NtPrivilegeObjectAuditAlarm": 2,
                "../../ntoskrnl/se/lsa.c": 1,
                "SeMarkLogonSessionForTerminationNotification": 3,
                "SeRegisterLogonSessionTerminatedRoutine": 3,
                "SeUnregisterLogonSessionTerminatedRoutine": 3,
                "../../ntoskrnl/se/priv.c": 1,
                "Required > 0": 1,
                "../../ntoskrnl/se/sd.c": 1,
                "CapturedSecurityQualityOfService": 1,
                "Present": 1,
                "Offset == DescriptorSize": 1,
                "ObjectSd->Control & SE_SELF_RELATIVE": 1,
                "(%s:%d) Invalid Security Descriptor revision": 1,
                "(%s:%d) No self-relative Security Descriptor": 1,
                "(%s:%d) No Owner SID": 1,
                "(%s:%d) Invalid Owner SID revision": 1,
                "(%s:%d) Invalid Owner SID size": 1,
                "(%s:%d) Invalid Group SID alignment": 1,
                "(%s:%d) Invalid Group SID revision": 1,
                "(%s:%d) Invalid Group SID size": 1,
                "(%s:%d) Invalid DACL alignment": 1,
                "(%s:%d) Invalid DACL revision": 1,
                "(%s:%d) Invalid DACL size": 1,
                "(%s:%d) Invalid SACL alignment": 1,
                "(%s:%d) Invalid SACL revision": 1,
                "(%s:%d) Invalid SACL size": 1,
                "(%s:%d) ExAlloctePool() failed": 1,
                "RtlLengthSecurityDescriptor(Descriptor)": 1,
                "SeSetSecurityDescriptorInfoEx": 3,
                "SeAssignSecurityEx": 3,
                "../../ntoskrnl/se/semgr.c": 1,
                "(PoolType == PagedPool) || (PoolType == NonPagedPool)": 1,
                "(%s:%d) Unsupported ACE type 0x%lx": 1,
                "(%s:%d) HACK: Should deny access for caller: granted 0x%lx, desired 0x%lx (generic mapping %p).": 1,
                "AccessMode != KernelMode": 1,
                "NtAccessCheckByType": 2,
                "NtAccessCheckByTypeResultList": 2,
                "../../ntoskrnl/se/sid.c": 1,
                "RtlLengthSid(SidAndAttributes[i].Sid) == SidLength": 1,
                "RtlValidSid(SidAndAttributes[i].Sid)": 1,
                "Index < Token->PrivilegeCount": 1,
                "../../ntoskrnl/se/token.c": 1,
                "(%s:%d) ObCreateObject() failed (Status %lx)": 1,
                "Token->TokenType == TokenPrimary": 1,
                "!Token->TokenInUse": 1,
                "(%s:%d) ObInsertObject() failed (Status %lx)": 1,
                "GroupLength <= sizeof(Groups)": 1,
                "SeSystemDefaultDacl != NULL": 1,
                "(%s:%d) NtQueryInformationToken(TokenGroupsAndPrivileges) not implemented": 1,
                "(%s:%d) NtQueryInformationToken(TokenSandboxInert) not implemented": 1,
                "(%s:%d) NtQueryInformationToken(%d) invalid information class": 1,
                "(%s:%d) Unhandled TokenInformationClass: 0x%lx": 1,
                "(%s:%d) NtDuplicateToken() failed to capture QoS! Status: 0x%x": 1,
                "(%s:%d) Failed to reference token (Status %lx)": 1,
                "SepFreeProxyData": 2,
                "SepCopyProxyData": 2,
                "SeFilterToken": 3,
                "SeQueryInformationToken": 3,
                "NtAdjustGroupsToken": 2,
                "NtFilterToken": 2,
                "NtImpersonateAnonymousToken": 2,
                "../../ntoskrnl/vf/driver.c": 1,
                "VfIsVerificationEnabled": 3,
                "VfFailDeviceNode": 3,
                "VfFailSystemBIOS": 3,
                "../../ntoskrnl/wmi/wmi.c": 1,
                "(%s:%d) IoWMIRegistrationControl() called for DO %p, requesting %lu action, returning success": 1,
                "(%s:%d) IoWMIWriteEvent() called for WnodeEventItem %p, returning success": 1,
                "IoWMIAllocateInstanceIds": 3,
                "IoWMISuggestInstanceName": 3,
                "IoWMIOpenBlock": 3,
                "IoWMIQueryAllData": 3,
                "IoWMIQueryAllDataMultiple": 3,
                "IoWMIQuerySingleInstance": 3,
                "IoWMIQuerySingleInstanceMultiple": 3,
                "IoWMISetSingleInstance": 3,
                "IoWMISetSingleItem": 3,
                "IoWMIExecuteMethod": 3,
                "IoWMISetNotificationCallback": 3,
                "IoWMIHandleToInstanceName": 3,
                "IoWMIDeviceObjectToInstanceName": 3,
                "WmiQueryTraceInformation": 3,
                "WmiTraceMessage": 3,
                "WmiTraceMessageVa": 3,
                "NtTraceEvent": 3,
                "x86 Family %u Model %u Stepping %u": 1,
                "80%u86-%c%x": 1,
                "../../ntoskrnl/ke/i386/abios.c": 1,
                "KeI386FlatToGdtSelector": 3,
                "KeI386ReleaseGdtSelectors": 3,
                "KeI386AllocateGdtSelectors": 3,
                "../../ntoskrnl/ke/i386/cpu.c": 1,
                "(%s:%d) CPUID Support lacking": 1,
                "(%s:%d) Cyrix CPU support not fully tested!": 1,
                "(%s:%d) Transmeta CPU support not fully tested!": 1,
                "(%s:%d) Centaur CPU support not fully tested!": 1,
                "(%s:%d) Rise CPU support not fully tested!": 1,
                "(%s:%d) %s CPU support not fully tested!": 1,
                "KF_NX_ENABLED": 1,
                "KF_NX_BIT": 1,
                "KF_DTS": 1,
                "KF_XMMI64": 1,
                "KF_AMDK6MTRR": 1,
                "KF_3DNOW": 1,
                "KF_XMMI": 1,
                "KF_FAST_SYSCALL": 1,
                "KF_FXSR": 1,
                "KF_PAT": 1,
                "KF_WORKING_PTE": 1,
                "KF_MMX": 1,
                "KF_CMPXCHG8B": 1,
                "KF_MTRR": 1,
                "KF_LARGE_PAGE": 1,
                "KF_GLOBAL_PAGE": 1,
                "KF_CMOV": 1,
                "KF_CR4": 1,
                "KF_RDTSC": 1,
                "KF_V86_VIS": 1,
                "(%s:%d) Supported CPU features : %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s": 1,
                "(%s:%d) Prefetch Cache: %lu bytes": 1,
                "L2 Cache: %lu bytes": 1,
                "L2 Cache Line: %lu bytes": 1,
                "L2 Cache Associativity: %lu": 1,
                "(%s:%d) Support for SYSENTER disabled.": 1,
                "(%s:%d) No support for SYSENTER detected.": 1,
                "KeI386FxsrPresent == TRUE": 1,
                "(%s:%d) %s is not really implemented": 1,
                "KeGetCurrentThread()->Header.NpxIrql == KeGetCurrentIrql()": 1,
                "GenuineIntel": 1,
                "AuthenticAMD": 1,
                "CyrixInstead": 1,
                "GenuineTMx86": 1,
                "CentaurHauls": 1,
                "RiseRiseRise": 1,
                "KeSaveFloatingPointState": 3,
                "KeRestoreFloatingPointState": 3,
                "../../ntoskrnl/ke/i386/context.c": 1,
                "KiSwapProcess": 2,
                "../../ntoskrnl/ke/i386/exp.c": 1,
                "(DebugMask & DR_REG_MASK) != 0": 1,
                "(Dr7 & ~DR7_RESERVED_MASK) == DR7_OVERRIDE_MASK": 1,
                "(*Dr7Ptr & DR7_RESERVED_MASK) == 0": 1,
                "NewMask == 0": 1,
                "!((PreviousMode == KernelMode) && (Context.EFlags & EFLAGS_V86_MASK))": 1,
                "(%s:%d) Kill %.16s, ExceptionCode: %lx, ExceptionAddress: %p, BaseAddress: %p, P0: %lx, P1: %lx": 1,
                "../../ntoskrnl/ke/i386/irqobj.c": 1,
                "OldInterruptIrql == Interrupt->Irql": 1,
                "Type == 0": 1,
                "Interrupt->FloatingSave == FALSE": 1,
                "Dispatch.FlatDispatch == NULL": 1,
                "(%s:%d) ": 1,
                "!!! Unexpected Interrupt 0x%02lx !!!": 1,
                "Irql <= SYNCH_LEVEL": 1,
                "Dispatch.Interrupt->Mode != Latched": 1,
                "(%s:%d) HalEnableSystemInterrupt failed": 1,
                "../../ntoskrnl/ke/i386/kiinit.c": 1,
                "(%s:%d) ISR Time Limit not yet supported": 1,
                "NOEXECUTE=ALWAYSON": 1,
                "NOEXECUTE=OPTOUT": 1,
                "NOEXECUTE=OPTIN": 1,
                "NOEXECUTE": 1,
                "NOEXECUTE=ALWAYSOFF": 1,
                "EXECUTE": 1,
                "(%s:%d) SMP Boot support not yet present": 1,
                "../../ntoskrnl/ke/i386/ldt.c": 1,
                "(%s:%d) WARNING: Windows would mark this descriptor invalid!": 1,
                "../../ntoskrnl/ke/i386/patpge.c": 1,
                "(%s:%d) Failed to get buffer for large pages identity mapping": 1,
                "../../ntoskrnl/ke/i386/thrdini.c": 1,
                "(%s:%d) LDT switch not implemented": 1,
                "(%s:%d) WMI Tracing not supported": 1,
                "../../ntoskrnl/ke/i386/traphdlr.c": 1,
                "KiVdmTrap(TrapFrame) == FALSE": 1,
                "(TrapFrame->EFlags & EFLAGS_V86_MASK) == 0": 1,
                "!KiIsFrameEdited(TrapFrame)": 1,
                "(KiVdmTrap(TrapFrame)) == FALSE": 1,
                "(((UCHAR*)TrapFrame->Eip)[0] == 0x8B) && (((UCHAR*)TrapFrame->Eip)[1] == 0x18) && (((UCHAR*)TrapFrame->Eip)[2] == 0x0F) && (((UCHAR*)TrapFrame->Eip)[3] == 0xC7) && (((UCHAR*)TrapFrame->Eip)[4] == 0x4D) && (((UCHAR*)TrapFrame->Eip)[5] == 0x00)": 1,
                "Mismatched NT/HAL version": 1,
                "KiTrap06Handler": 2,
                "KiTrap07Handler": 2,
                "KiTrap0BHandler": 2,
                "KiTrap0CHandler": 2,
                "KiTrap0DHandler": 2,
                "KiTrap0EHandler": 2,
                "KiTrap0FHandler": 2,
                "KiGetTickCountHandler": 2,
                "KiSystemCall": 1,
                "Kei386EoiHelper": 3,
                "../../ntoskrnl/ke/i386/usercall.c": 1,
                "KiUserTrap(TrapFrame)": 1,
                "KeGetCurrentThread()->ApcState.KernelApcInProgress == FALSE": 1,
                "KeGetPreviousMode() == UserMode": 1,
                "../../ntoskrnl/ke/i386/v86vdm.c": 1,
                "KeI386VirtualIntExtensions == FALSE": 1,
                "PsGetCurrentProcess()->VdmObjects == NULL": 1,
                "((PKIPCR)KeGetPcr())->GDT[KGDT_TSS / 8].LimitLow >= (0x2000 + IOPM_OFFSET - 1)": 1,
                "KiVdmOpcodeF": 2,
                "KiVdmOpcodeOUTSW": 2,
                "KiVdmOpcodeOUTSB": 2,
                "KiVdmOpcodeINSB": 2,
                "KiVdmOpcodeINSW": 2,
                "KiVdmOpcodeNPX": 2,
                "KiVdmOpcodeINBimm": 2,
                "KiVdmOpcodeINWimm": 2,
                "KiVdmOpcodeOUTBimm": 2,
                "KiVdmOpcodeOUTWimm": 2,
                "KiVdmOpcodeINB": 2,
                "KiVdmOpcodeINW": 2,
                "KiVdmOpcodeOUTB": 2,
                "KiVdmOpcodeOUTW": 2,
                "KiVdmOpcodeHLT": 2,
                "KiVdmOpcodeINTO": 2,
                "KiVdmOpcodeINV": 2,
                "../../ntoskrnl/mm/i386/page.c": 1,
                "(%s:%d) Unknown main protection type.": 1,
                "Create == FALSE": 1,
                "../../ntoskrnl/mm/i386/../ARM3/miarm.h": 1,
                "Process == NULL": 1,
                "Process->Vm.VmWorkingSetList->UsedPageTableEntries[MiGetPdeOffset(Address)] < PTE_COUNT": 1,
                "(%s:%d) Pte %x (want not 1 and 0x800)": 1,
                "(%s:%d) MmSetCleanPage is called for user space without a process.": 1,
                "(%s:%d) MmSetDirtyPage is called for user space without a process.": 1,
                "(%s:%d) No process": 1,
                "(%s:%d) Setting kernel address with process context": 1,
                "Process->Vm.VmWorkingSetList->UsedPageTableEntries[MiGetPdeOffset(Address)] <= PTE_COUNT": 1,
                "((ULONG_PTR)Address % PAGE_SIZE) == 0": 1,
                "(%s:%d) Page count too large": 1,
                "(%s:%d) Page Count too large": 1,
                "(%s:%d) Setting physical address but not allowing access at address 0x%p with attributes %x/%x.": 1,
                "(%s:%d) Bad PTE %lx": 1,
                "Process->Vm.VmWorkingSetList->UsedPageTableEntries[MiGetPdeOffset(Addr)] <= PTE_COUNT": 1,
                "Addr > Address": 1,
                "(ULONG_PTR)Address % PAGE_SIZE == 0": 1,
                "(%s:%d) Page at address %x not in use": 1,
                "(%s:%d) Invalid Pte %lx": 1,
                "../../ntoskrnl/mm/ARM3/i386/init.c": 1,
                "MmNumberOfSystemPtes > 1000": 1,
                "(%s:%d) Paged pool is too big!": 1,
                "../../ntoskrnl/mm/ARM3/i386/../../ARM3/miarm.h": 1,
                "MiAddressToPte(MmNonPagedSystemStart) < MiAddressToPte(MmNonPagedPoolExpansionStart)": 1,
                "MmFreePagesByColor[0] < (PMMCOLOR_TABLES)PTE_BASE": 1,
                "StartPde->u.Hard.Valid == 1": 1,
                "LastPte->u.Hard.Valid == 1": 1,
                "MiComputeNonPagedPoolVa": 2,
                "../../ntoskrnl/ps/i386/psctx.c": 1,
                "../../ntoskrnl/ps/i386/psldt.c": 1,
                "Thread->ThreadsProcess->LdtInformation == NULL": 1,
                "../../ntoskrnl/vdm/vdmmain.c": 1,
                "(%s:%d) Couldn't open \\Device\\PhysicalMemory": 1,
                "(%s:%d) Couldn't map physical memory (%x)": 1,
                "(%s:%d) Couldn't copy first page (%x)": 1,
                "(%s:%d) Couldn't unmap the section (%x)": 1,
                "(%s:%d) Unknown VDM call: %lx": 1,
                "../../ntoskrnl/vdm/vdmexec.c": 1,
                "*VdmState == 0": 1,
                "VdmTib->VdmContext.EFlags & EFLAGS_V86_MASK": 1,
                "(TrapFrame->EFlags & EFLAGS_V86_MASK) || (TrapFrame->SegCs != (KGDT_R3_CODE | RPL_MASK))": 1,
                "Kernel Debugger: Serial port not found!": 1,
                "Waiting for GDB to attach": 1,
                "   GDB debugging enabled": 1,
                "fThreadInfo": 1,
                "sThreadInfo": 1,
                "ThreadExtraInfo": 1,
                "%s [%d:0x%x], ": 1,
                "Supported": 1,
                "PacketSize=%u": 1,
                "../../ntoskrnl/kd/wrappers/gdbstub.c": 1,
                "(%s:%d) Failed to remove software breakpoint from 0x%p": 1,
                "(%s:%d) Internal error: entering stub with non-NULL GspDbgThread": 1,
                "(%s:%d) Fault during memory read": 1,
                "(%s:%d) Fault during memory write": 1,
                "(%s:%d) Failed to set software breakpoint at 0x%p": 1,
                "(%s:%d) Trying to set too many software breakpoints": 1,
                "(%s:%d) Read watchpoint not supported": 1,
                "(%s:%d) Invalid length %lu for hardware breakpoint": 1,
                "(%s:%d) Invalid length %lu for GDB Z type %lu": 1,
                "(%s:%d) Invalid alignment for address 0x%p and length %d": 1,
                "(%s:%d) Trying to set too many hardware breakpoints": 1,
                "!GspSwBreakpoints[Index].Active": 1,
                "(%s:%d) Not found": 1,
                "0123456789abcdef": 1,
                "Initialized": 2,
                "Ready": 2,
                "Running": 2,
                "Standby": 2,
                "Terminated": 2,
                "Waiting": 2,
                "Transition": 2,
                "DeferredReady": 2,
                "rexYZ": 1,
                "rexXZ": 1,
                "rexXY": 1,
                "rexXYZ": 1,
                "rex64": 1,
                "rex64Z": 1,
                "rex64Y": 1,
                "rex64YZ": 1,
                "rex64X": 1,
                "rex64XZ": 1,
                "rex64XY": 1,
                "rex64XYZ": 1,
                "repnz": 1,
                "data32": 1,
                "addr64": 1,
                "addr32": 1,
                "fwait": 1,
                "addr16": 1,
                "data16": 1,
                "(bad)": 1,
                "(%dx)": 1,
                "<internal disassembler error>": 1,
                "%%tr%d": 1,
                "%%db%d": 1,
                "%%cr%d": 1,
                "%%xmm%d": 1,
                "%%mm%d": 1,
                "%%st(%d)": 1,
                "cmp%s%c%c": 1,
                "0x%x,0x%x": 1,
                "$0x%x,$0x%x": 1,
                "(%rip)": 1,
                "BYTE PTR ": 1,
                "WORD PTR ": 1,
                "DWORD PTR ": 1,
                "QWORD PTR ": 1,
                "XWORD PTR ": 1,
                "rip + ": 1,
                ".byte 0x%x": 1,
                "repz ": 1,
                "repnz ": 1,
                "lock ": 1,
                "addr32 ": 1,
                "addr16 ": 1,
                "data32 ": 1,
                "data16 ": 1,
                "        # ": 1,
                "<%08x>": 2,
                "bx+si": 1,
                "bx+di": 1,
                "bp+si": 1,
                "bp+di": 1,
                "%r10d": 1,
                "%r11d": 1,
                "%r12d": 1,
                "%r13d": 1,
                "%r14d": 1,
                "%r15d": 1,
                "%r10w": 1,
                "%r11w": 1,
                "%r12w": 1,
                "%r13w": 1,
                "%r14w": 1,
                "%r15w": 1,
                "%r10b": 1,
                "%r11b": 1,
                "%r12b": 1,
                "%r13b": 1,
                "%r14b": 1,
                "%r15b": 1,
                "%bx,%si": 1,
                "%bx,%di": 1,
                "%bp,%si": 1,
                "%bp,%di": 1,
                "syscall": 1,
                "sysretP": 1,
                "wbinvd": 1,
                "femms": 1,
                "movlpX": 1,
                "unpcklpX": 1,
                "unpckhpX": 1,
                "movhpX": 1,
                "movapX": 1,
                "movntpX": 1,
                "ucomisX": 1,
                "comisX": 1,
                "wrmsr": 1,
                "rdtsc": 1,
                "rdmsr": 1,
                "rdpmc": 1,
                "sysenter": 1,
                "sysexit": 1,
                "cmovo": 1,
                "cmovno": 1,
                "cmovb": 1,
                "cmovae": 1,
                "cmove": 1,
                "cmovne": 1,
                "cmovbe": 1,
                "cmova": 1,
                "cmovs": 1,
                "cmovns": 1,
                "cmovp": 1,
                "cmovnp": 1,
                "cmovl": 1,
                "cmovge": 1,
                "cmovle": 1,
                "cmovg": 1,
                "movmskpX": 1,
                "andpX": 1,
                "andnpX": 1,
                "xorpX": 1,
                "punpcklbw": 1,
                "punpcklwd": 1,
                "punpckldq": 1,
                "packsswb": 1,
                "pcmpgtb": 1,
                "pcmpgtw": 1,
                "pcmpgtd": 1,
                "packuswb": 1,
                "punpckhbw": 1,
                "punpckhwd": 1,
                "punpckhdq": 1,
                "packssdw": 1,
                "pcmpeqb": 1,
                "pcmpeqw": 1,
                "pcmpeqd": 1,
                "setno": 1,
                "setae": 1,
                "setne": 1,
                "setbe": 1,
                "setns": 1,
                "setnp": 1,
                "setge": 1,
                "setle": 1,
                "pushT": 1,
                "cpuid": 1,
                "shldS": 1,
                "shrdS": 1,
                "imulS": 1,
                "cmpxchgB": 1,
                "cmpxchgS": 1,
                "movz{bR|x|bR|x}": 1,
                "movz{wR|x|wR|x}": 1,
                "movs{bR|x|bR|x}": 1,
                "movs{wR|x|wR|x}": 1,
                "xaddB": 1,
                "xaddS": 1,
                "movntiS": 1,
                "pinsrw": 1,
                "pextrw": 1,
                "shufpX": 1,
                "bswap": 1,
                "psrlw": 1,
                "psrld": 1,
                "psrlq": 1,
                "paddq": 1,
                "pmullw": 1,
                "pmovmskb": 1,
                "psubusb": 1,
                "psubusw": 1,
                "pminub": 1,
                "paddusb": 1,
                "paddusw": 1,
                "pmaxub": 1,
                "pandn": 1,
                "pavgb": 1,
                "psraw": 1,
                "psrad": 1,
                "pavgw": 1,
                "pmulhuw": 1,
                "pmulhw": 1,
                "psubsb": 1,
                "psubsw": 1,
                "pminsw": 1,
                "paddsb": 1,
                "paddsw": 1,
                "pmaxsw": 1,
                "psllw": 1,
                "pslld": 1,
                "psllq": 1,
                "pmuludq": 1,
                "pmaddwd": 1,
                "psadbw": 1,
                "psubb": 1,
                "psubw": 1,
                "psubd": 1,
                "psubq": 1,
                "paddb": 1,
                "paddw": 1,
                "paddd": 1,
                "push{T|}": 1,
                "pop{T|}": 1,
                "popT|}": 1,
                "daa{|}": 1,
                "das{|}": 1,
                "aaa{|}": 1,
                "aas{|}": 1,
                "inc{S|}": 1,
                "dec{S|}": 1,
                "pushS": 1,
                "pusha{P|}": 1,
                "popa{P|}": 1,
                "bound{S|}": 1,
                "ins{b||b|}": 1,
                "ins{R||R|}": 1,
                "outs{b||b|}": 1,
                "outs{R||R|}": 1,
                "testB": 1,
                "testS": 1,
                "xchgB": 1,
                "xchgS": 1,
                "cW{tR||tR|}": 1,
                "cR{tO||tO|}": 1,
                "lcall{T|}": 1,
                "pushfT": 1,
                "popfT": 1,
                "sahf{|}": 1,
                "lahf{|}": 1,
                "movs{b||b|}": 1,
                "movs{R||R|}": 1,
                "cmps{b||b|}": 1,
                "cmps{R||R|}": 1,
                "stosB": 1,
                "stosS": 1,
                "lodsB": 1,
                "lodsS": 1,
                "scasB": 1,
                "scasS": 1,
                "les{S|}": 1,
                "enterT": 1,
                "leaveT": 1,
                "lretP": 1,
                "into{|}": 1,
                "iretP": 1,
                "aam{|}": 1,
                "aad{|}": 1,
                "loopneFH": 1,
                "loopeFH": 1,
                "loopFH": 1,
                "jEcxzH": 1,
                "callT": 1,
                "ljmp{T|}": 1,
                "icebp": 1,
                "testA": 1,
                "imulA": 1,
                "idivA": 1,
                "testQ": 1,
                "imulQ": 1,
                "idivQ": 1,
                "lcallT": 1,
                "ljmpT": 1,
                "pushU": 1,
                "sldtQ": 1,
                "sgdtQ": 1,
                "sidtQ": 1,
                "lgdtQ": 1,
                "lidtQ": 1,
                "smswQ": 1,
                "invlpg": 1,
                "cmpxchg8b": 1,
                "psrldq": 1,
                "pslldq": 1,
                "fxsave": 1,
                "fxrstor": 1,
                "ldmxcsr": 1,
                "stmxcsr": 1,
                "lfence": 1,
                "mfence": 1,
                "clflush": 1,
                "prefetchnta": 1,
                "prefetcht0": 1,
                "prefetcht1": 1,
                "prefetcht2": 1,
                "prefetch": 1,
                "prefetchw": 1,
                "xstorerng": 1,
                "xcryptecb": 1,
                "xcryptcbc": 1,
                "xcryptcfb": 1,
                "xcryptofb": 1,
                "addps": 1,
                "addss": 1,
                "addpd": 1,
                "addsd": 1,
                "cvtpi2ps": 1,
                "cvtsi2ssY": 1,
                "cvtpi2pd": 1,
                "cvtsi2sdY": 1,
                "cvtps2pi": 1,
                "cvtss2siY": 1,
                "cvtpd2pi": 1,
                "cvtsd2siY": 1,
                "cvttps2pi": 1,
                "cvttss2siY": 1,
                "cvttpd2pi": 1,
                "cvttsd2siY": 1,
                "divps": 1,
                "divss": 1,
                "divpd": 1,
                "divsd": 1,
                "maxps": 1,
                "maxss": 1,
                "maxpd": 1,
                "maxsd": 1,
                "minps": 1,
                "minss": 1,
                "minpd": 1,
                "minsd": 1,
                "movups": 1,
                "movss": 1,
                "movupd": 1,
                "movsd": 1,
                "mulps": 1,
                "mulss": 1,
                "mulpd": 1,
                "mulsd": 1,
                "rcpps": 1,
                "rcpss": 1,
                "rsqrtps": 1,
                "rsqrtss": 1,
                "sqrtps": 1,
                "sqrtss": 1,
                "sqrtpd": 1,
                "sqrtsd": 1,
                "subps": 1,
                "subss": 1,
                "subpd": 1,
                "subsd": 1,
                "cvtdq2pd": 1,
                "cvttpd2dq": 1,
                "cvtpd2dq": 1,
                "cvtdq2ps": 1,
                "cvttps2dq": 1,
                "cvtps2dq": 1,
                "cvtps2pd": 1,
                "cvtss2sd": 1,
                "cvtpd2ps": 1,
                "cvtsd2ss": 1,
                "maskmovq": 1,
                "maskmovdqu": 1,
                "movdqu": 1,
                "movdqa": 1,
                "movq2dq": 1,
                "movdq2q": 1,
                "pshufw": 1,
                "pshufhw": 1,
                "pshufd": 1,
                "pshuflw": 1,
                "punpckhqdq": 1,
                "movntq": 1,
                "movntdq": 1,
                "punpcklqdq": 1,
                "addsubpd": 1,
                "addsubps": 1,
                "haddpd": 1,
                "haddps": 1,
                "hsubpd": 1,
                "hsubps": 1,
                "movsldup": 1,
                "movlpd": 1,
                "movddup": 1,
                "movshdup": 1,
                "movhpd": 1,
                "lddqu": 1,
                "movs{||lq|xd}": 1,
                "pi2fw": 1,
                "pi2fd": 1,
                "pf2iw": 1,
                "pf2id": 1,
                "pfnacc": 1,
                "pfpnacc": 1,
                "pfcmpge": 1,
                "pfmin": 1,
                "pfrcp": 1,
                "pfrsqrt": 1,
                "pfsub": 1,
                "pfadd": 1,
                "pfcmpgt": 1,
                "pfmax": 1,
                "pfrcpit1": 1,
                "pfrsqit1": 1,
                "pfsubr": 1,
                "pfacc": 1,
                "pfcmpeq": 1,
                "pfmul": 1,
                "pfrcpit2": 1,
                "pfmulhrw": 1,
                "pswapd": 1,
                "pavgusb": 1,
                "unord": 1,
                "fadd{s||s|}": 1,
                "fmul{s||s|}": 1,
                "fcom{s||s|}": 1,
                "fcomp{s||s|}": 1,
                "fsub{s||s|}": 1,
                "fsubr{s||s|}": 1,
                "fdiv{s||s|}": 1,
                "fdivr{s||s|}": 1,
                "fld{s||s|}": 1,
                "fst{s||s|}": 1,
                "fstp{s||s|}": 1,
                "fldenv": 1,
                "fldcw": 1,
                "fNstenv": 1,
                "fNstcw": 1,
                "fiadd{l||l|}": 1,
                "fimul{l||l|}": 1,
                "ficom{l||l|}": 1,
                "ficomp{l||l|}": 1,
                "fisub{l||l|}": 1,
                "fisubr{l||l|}": 1,
                "fidiv{l||l|}": 1,
                "fidivr{l||l|}": 1,
                "fild{l||l|}": 1,
                "fisttp{l||l|}": 1,
                "fist{l||l|}": 1,
                "fistp{l||l|}": 1,
                "fld{t||t|}": 1,
                "fstp{t||t|}": 1,
                "fadd{l||l|}": 1,
                "fmul{l||l|}": 1,
                "fcom{l||l|}": 1,
                "fcomp{l||l|}": 1,
                "fsub{l||l|}": 1,
                "fsubr{l||l|}": 1,
                "fdiv{l||l|}": 1,
                "fdivr{l||l|}": 1,
                "fld{l||l|}": 1,
                "fisttp{ll||ll|}": 1,
                "fst{l||l|}": 1,
                "fstp{l||l|}": 1,
                "frstor": 1,
                "fNsave": 1,
                "fNstsw": 1,
                "fiadd": 1,
                "fimul": 1,
                "ficom": 1,
                "ficomp": 1,
                "fisub": 1,
                "fisubr": 1,
                "fidiv": 1,
                "fidivr": 1,
                "fisttp": 1,
                "fistp": 1,
                "fild{ll||ll|}": 1,
                "fbstp": 1,
                "fistp{ll||ll|}": 1,
                "fcomp": 1,
                "fsubr": 1,
                "fdivr": 1,
                "fcmovb": 1,
                "fcmove": 1,
                "fcmovbe": 1,
                "fcmovu": 1,
                "fcmovnb": 1,
                "fcmovne": 1,
                "fcmovnbe": 1,
                "fcmovnu": 1,
                "fucomi": 1,
                "fcomi": 1,
                "ffree": 1,
                "fucom": 1,
                "fucomp": 1,
                "faddp": 1,
                "fmulp": 1,
                "fsubp": 1,
                "fsubrp": 1,
                "fdivp": 1,
                "fdivrp": 1,
                "ffreep": 1,
                "fucomip": 1,
                "fcomip": 1,
                "fldl2t": 1,
                "fldl2e": 1,
                "fldpi": 1,
                "fldlg2": 1,
                "fldln2": 1,
                "f2xm1": 1,
                "fyl2x": 1,
                "fptan": 1,
                "fpatan": 1,
                "fxtract": 1,
                "fprem1": 1,
                "fdecstp": 1,
                "fincstp": 1,
                "fprem": 1,
                "fyl2xp1": 1,
                "fsqrt": 1,
                "fsincos": 1,
                "frndint": 1,
                "fscale": 1,
                "fucompp": 1,
                "feni(287 only)": 1,
                "fdisi(287 only)": 1,
                "fNclex": 1,
                "fNinit": 1,
                "fNsetpm(287 only)": 1,
                "fcompp": 1,
                "Invalid thread id: 0x%08x": 1,
                "Cannot attach to thread within another process while executing a DPC.": 1,
                "../../ntoskrnl/kdbg/kdb.c": 1,
                "KdbCurrentTrapFrame == &KdbThreadTrapFrame": 1,
                "KdbCurrentTrapFrame == &KdbTrapFrame": 1,
                "KdbCurrentProcess == PsGetCurrentProcess()": 1,
                "Invalid process id: 0x%08x": 1,
                "No threads in process 0x%p, cannot attach to process!": 1,
                "KDSERIAL": 1,
                "KDNOECHO": 1,
                "FIRSTCHANCE": 1,
                "Couldn't access memory at 0x%p": 1,
                "BreakPoint": 1,
                "Invalid breakpoint: %d": 1,
                "Breakpoint %d is not enabled.": 1,
                "KdbSwBreakPointCount > 0": 1,
                "Couldn't restore original instruction.": 1,
                "BreakPoint->Type == KdbBreakPointHardware": 1,
                "Breakpoint %d disabled.": 1,
                "Breakpoint %d deleted.": 1,
                "Breakpoint %d is already enabled.": 1,
                "Maximum number of SW breakpoints (%d) used. Disable another breakpoint in order to enable this one.": 1,
                "BreakPoint->Data.Hw.Size == 1": 1,
                "(BreakPoint->Address % BreakPoint->Data.Hw.Size) == 0": 1,
                "Maximum number of HW breakpoints (%d) already used. Disable another breakpoint in order to enable this one.": 1,
                "i < KDB_MAXIMUM_HW_BREAKPOINT_COUNT": 1,
                "Breakpoint %d enabled.": 1,
                "Type != KdbBreakPointNone": 1,
                "Address (0x%p) must be aligned to a multiple of the size (%d)": 1,
                "Size must be 1 for execution breakpoints.": 1,
                "Couldn't parse expression: %s at character %d": 1,
                "Couldn't parse expression: %s": 1,
                "i < (LONG)RTL_NUMBER_OF(KdbBreakPoints)": 1,
                "KdbCurrentProcess": 3,
                "Breakpoint %d inserted.": 1,
                "WRITE": 1,
                "Unknown/User defined exception": 1,
                "first": 2,
                "written": 1,
                "(KdbSwBreakPoints[i]->Type == KdbBreakPointSoftware || KdbSwBreakPoints[i]->Type == KdbBreakPointTemporary)": 1,
                "KdbSwBreakPoints[i]->Enabled": 1,
                "KdbHwBreakPoints[i]->Type == KdbBreakPointHardware && KdbHwBreakPoints[i]->Enabled": 1,
                "Couldn't restore original instruction after INT3! Cannot continue execution.": 1,
                "(TrapFrame->EFlags & EFLAGS_TF) == 0": 1,
                "ExceptionCode == STATUS_BREAKPOINT": 1,
                "Entered debugger on breakpoint #%d: EXEC 0x%04x:0x%08x": 1,
                "Entered debugger on breakpoint #%d: %s 0x%08x": 1,
                "BreakPoint->Type == KdbBreakPointSoftware || BreakPoint->Type == KdbBreakPointTemporary": 1,
                "Warning: Couldn't reenable breakpoint %d": 1,
                "Entered debugger on unexpected debug trap!": 1,
                "Entered debugger on embedded INT3 at 0x%04x:0x%08x.": 1,
                "Entered debugger on %s-chance exception (Exception Code: 0x%x) (%s)": 1,
                "Memory at 0x%p could not be %s: ": 1,
                "Page not present.": 1,
                "Reserved bits in page directory set.": 1,
                "Page protection violation.": 1,
                "(KdbCurrentTrapFrame->Tf.EFlags & EFLAGS_TF) == 0": 1,
                "Divide Error": 1,
                "Debug Trap": 1,
                "Breakpoint": 1,
                "Overflow": 1,
                "BOUND range exceeded": 1,
                "Invalid Opcode": 1,
                "No Math Coprocessor": 1,
                "Double Fault": 1,
                "Unknown(9)": 1,
                "Invalid TSS": 1,
                "Segment Not Present": 1,
                "Stack Segment Fault": 1,
                "General Protection": 1,
                "Page Fault": 1,
                "Reserved(15)": 1,
                "Math Fault": 1,
                "Alignment Check": 1,
                "Machine Check": 1,
                "SIMD Fault": 1,
                "--- Press q to abort, any other key to continue ---": 1,
                "../../ntoskrnl/kdbg/kdb_cli.c": 1,
                "p[0] == '\\0'": 1,
                "Command '%s' is unknown.": 1,
                "Kernel debugger commands:": 1,
                "[7m* %s:": 1,
                "  %-20s - %s": 1,
                "intel": 1,
                "always": 1,
                "never": 1,
                "umode": 1,
                "kmode": 1,
                "Available settings:": 1,
                "  syntax [intel|at&t]": 1,
                "  condition [exception|*] [first|last] [never|always|kmode|umode]": 1,
                "  break_on_module_load [true|false]": 1,
                "syntax": 1,
                "syntax = %s": 1,
                "Unknown syntax '%s'.": 1,
                "condition": 1,
                "Conditions:                 (First)  (Last)": 1,
                "  #%02d  %-20s %-8s %-8s": 1,
                "OTHERS": 1,
                "       %-20s %-8s %-8s": 1,
                "Unknown exception '%s'.": 1,
                "set condition: second argument must be 'first' or 'last'": 1,
                "set condition: third argument must be 'never', 'always', 'umode' or 'kmode'": 1,
                "Couldn't change condition for exception #%02d": 1,
                "Couldn't change condition for all exceptions": 1,
                "Condition for exception #%02d (%s): FirstChance %s  LastChance %s": 1,
                "Condition for all other exceptions: FirstChance %s  LastChance %s": 1,
                "break_on_module_load": 1,
                "break_on_module_load = %s": 1,
                "enable": 1,
                "disable": 1,
                "false": 1,
                "Unknown setting '%s'.": 1,
                "filter: bad class name '%.*s'": 1,
                "filter: '%s' is not a valid component name!": 1,
                "Current TSS is at 0x%08x.": 1,
                "  Eip:           0x%08x": 1,
                "  Es:            0x%04x": 1,
                "  Cs:            0x%04x": 1,
                "  Ss:            0x%04x": 1,
                "  Ds:            0x%04x": 1,
                "  Fs:            0x%04x": 1,
                "  Gs:            0x%04x": 1,
                "  IoMapBase:     0x%04x": 1,
                "Current PCR is at 0x%08x.": 1,
                "  Tib.ExceptionList:         0x%08x": 1,
                "  Tib.StackBase:             0x%08x": 1,
                "  Tib.StackLimit:            0x%08x": 1,
                "  Tib.SubSystemTib:          0x%08x": 1,
                "  Tib.FiberData/Version:     0x%08x": 1,
                "  Tib.ArbitraryUserPointer:  0x%08x": 1,
                "  Tib.Self:                  0x%08x": 1,
                "  Self:                      0x%08x": 1,
                "  PCRCB:                     0x%08x": 1,
                "  Irql:                      0x%02x": 1,
                "  IRR:                       0x%08x": 1,
                "  IrrActive:                 0x%08x": 1,
                "  IDR:                       0x%08x": 1,
                "  KdVersionBlock:            0x%08x": 1,
                "  IDT:                       0x%08x": 1,
                "  GDT:                       0x%08x": 1,
                "  TSS:                       0x%08x": 1,
                "  MajorVersion:              0x%04x": 1,
                "  MinorVersion:              0x%04x": 1,
                "  SetMember:                 0x%08x": 1,
                "  StallScaleFactor:          0x%08x": 1,
                "  Number:                    0x%02x": 1,
                "  L2CacheAssociativity:      0x%02x": 1,
                "  VdmAlert:                  0x%08x": 1,
                "  L2CacheSize:               0x%08x": 1,
                "  InterruptMode:             0x%08x": 1,
                "TASKGATE": 1,
                "Global": 1,
                "Local": 1,
                "TSS16(Avl)": 1,
                "TSS16(Busy)": 1,
                "CALLGATE16": 1,
                "INTGATE16": 1,
                "TRAPGATE16": 1,
                "TSS32(Avl)": 1,
                "TSS32(Busy)": 1,
                "CALLGATE32": 1,
                "INTGATE32": 1,
                "UNKNOWN": 1,
                "DATA16": 1,
                "CODE32": 1,
                "CODE16": 1,
                "DATA32": 1,
                "TRAPGATE32": 1,
                "Interrupt descriptor table is empty.": 1,
                "IDT Base: 0x%08x  Limit: 0x%04x": 1,
                "  Idx  Type        Seg. Sel.  Offset      DPL": 1,
                "Couldn't access memory at 0x%08x!": 1,
                "  %03d  %-10s  [NP]       [NP]        %02d": 1,
                "  %03d  %-10s  0x%04x                 %02d": 1,
                "  %03d  %-10s  0x%04x     0x%08x  %02d": 1,
                "Argv[0][0] == 'l'": 1,
                "%s descriptor table is empty.": 1,
                "%cDT Base: 0x%08x  Limit: 0x%04x": 1,
                "  Idx  Sel.    Type         Base        Limit       DPL  Attribs": 1,
                "  %03d  0x%04x  %-11s  [NP]        [NP]        %02d   NP": 1,
                "  %03d  0x%04x  %-11s  0x%08x  0x%08x  %02d  ": 1,
                "%*s%s": 1,
                "%s: Warning: Address %I64x is beeing truncated": 1,
                "No module containing address 0x%p found!": 1,
                "  Base      Size      Name": 1,
                "ntoskrnl.exe": 1,
                "  %08x  %08x  %s": 1,
                "  %08x  %08x  %wZ": 1,
                "In Transition": 1,
                "In Memory": 1,
                "Out of Memory": 1,
                "Current process:": 1,
                "No processes in the system!": 1,
                "  PID         State       Filename": 1,
                " %s0x%08x  %-10s  %s%s": 1,
                "process attach: process id argument required!": 1,
                "process attach: '%s' is not a valid process id!": 1,
                "Attached to process 0x%08x, thread 0x%08x.": 1,
                "proc: '%s' is not a valid process id!": 1,
                "proc: Invalid process id!": 1,
                "%s  PID:             0x%08x": 1,
                "  State:           %s (0x%x)": 1,
                "  Image Filename:  %s": 1,
                "attach": 1,
                "Unknown": 1,
                "Loaded": 1,
                "Not loaded": 1,
                "Current Thread:": 1,
                "thread: '%s' is not a valid process id!": 1,
                "thread: Invalid process id!": 1,
                "No threads in process 0x%08x!": 1,
                "No threads in current process!": 1,
                "  TID         State        Prior.  Affinity    EBP         EIP": 1,
                " %s0x%08x  %-11s  %3d     0x%08x  0x%08x  0x%08x%s": 1,
                "thread attach: thread id argument required!": 1,
                "thread attach: '%s' is not a valid thread id!": 1,
                "Attached to thread 0x%08x.": 1,
                "thread: '%s' is not a valid thread id!": 1,
                "thread: Invalid thread id!": 1,
                "%s  TID:            0x%08x": 1,
                "  State:          %s (0x%x)": 1,
                "  Priority:       %d": 1,
                "  Affinity:       0x%08x": 1,
                "  Initial Stack:  0x%08x": 1,
                "  Stack Limit:    0x%08x": 1,
                "  Stack Base:     0x%08x": 1,
                "  Kernel Stack:   0x%08x": 1,
                "  Trap Frame:     0x%08x": 1,
                "  NPX State:      %s (0x%x)": 1,
                "Address": 1,
                "Memory size": 1,
                "bpx: Address argument required.": 1,
                "Argv[0][2] == 'm'": 1,
                "bpm: Access type argument required (one of r, w, rw, x)": 1,
                "bpm: Unknown access type '%s'": 1,
                "bpm: %s argument required.": 1,
                "dword": 2,
                "bpm: Unknown memory size '%s'": 1,
                "bpm: Address argument required.": 1,
                "%s: IF requires condition expression.": 1,
                "%s: argument required": 1,
                "%s: integer argument required": 1,
                "Argv[0][1] == 'c'": 1,
                "  global": 1,
                "  IF ": 1,
                "  disabled": 1,
                "write": 1,
                "No breakpoints.": 1,
                "Breakpoints:": 1,
                "  PID 0x%08lx": 1,
                " %s%03d  BPX  0x%08x%s%s%s%s%s": 1,
                " %s%03d  BPM  0x%08x  %-5s %-5s  disabled%s%s%s%s": 1,
                " %s%03d  BPM  0x%08x  %-5s %-5s  DR%d%s%s%s%s": 1,
                "%s: Integer argument required": 1,
                "Warning: Address %I64x is beeing truncated": 1,
                "Thread backtrace not supported yet!": 1,
                "Frames:": 2,
                "Couldn't access memory at 0x%p!": 1,
                "CS:EIP  0x%04x:0x%08x": 1,
                "SS:ESP  0x%04x:0x%08x": 1,
                "   EAX  0x%08x   EBX  0x%08x": 1,
                "   ECX  0x%08x   EDX  0x%08x": 1,
                "   ESI  0x%08x   EDI  0x%08x": 1,
                "   EBP  0x%08x": 1,
                "EFLAGS  0x%08x ": 1,
                " !BIT1": 1,
                " IOPL%d": 1,
                "CR0  0x%08x ": 1,
                "CR2  0x%08x": 1,
                "CR3  0x%08x  Pagedir-Base 0x%08x %s%s": 1,
                "CR4  0x%08x ": 1,
                "GDTR  Base 0x%08x  Size 0x%04x": 1,
                "LDTR  0x%04x": 1,
                "IDTR  Base 0x%08x  Size 0x%04x": 1,
                "CS  0x%04x  Index 0x%04x  %cDT RPL%d": 1,
                "DS  0x%04x  Index 0x%04x  %cDT RPL%d": 1,
                "ES  0x%04x  Index 0x%04x  %cDT RPL%d": 1,
                "FS  0x%04x  Index 0x%04x  %cDT RPL%d": 1,
                "GS  0x%04x  Index 0x%04x  %cDT RPL%d": 1,
                "SS  0x%04x  Index 0x%04x  %cDT RPL%d": 1,
                "Argv[0][0] == 'd'": 1,
                "DR0  0x%08x": 1,
                "DR1  0x%08x": 1,
                "DR2  0x%08x": 1,
                "DR3  0x%08x": 1,
                "DR6  0x%08x": 1,
                "DR7  0x%08x": 1,
                "x: Address argument required.": 1,
                "<%x>:": 1,
                " ????????": 1,
                " %08x": 1,
                "<%08x>: ": 1,
                "<INVALID>": 2,
                "?: Argument required": 1,
                "0x%016I64x  %20I64u  %20I64d": 1,
                "0x%016I64x  %20I64u": 1,
                "0x%08lx  %10lu  %10ld": 1,
                "0x%08lx  %10lu": 1,
                "pCurPos <= Buffer + BufLength": 1,
                "p != 0": 1,
                "Dmesg: error, p > Buffer+BufLength,d=%d": 1,
                "--- Press q to abort, e/End,h/Home,u/PgUp, other key/PgDn ---": 1,
                " '%c'/scan=%04x": 1,
                "Dmesg: error, buffer is not allocated! /DEBUGPORT=SCREEN kernel param required for dmesg.": 1,
                "*** Dmesg *** TotalWritten=%lu, BufferSize=%lu, CurrentPosition=%lu": 1,
                "*** Dmesg: buffer rollup ***": 1,
                "*** Dmesg: end of output ***": 1,
                "kdb:> ": 1,
                "%c %c": 1,
                "Length1 <= RTL_NUMBER_OF(KdbCommandHistoryBuffer)": 1,
                "(KdbCommandHistory[KdbCommandHistoryIndex] + Length1) <= KdbCommandHistoryBuffer + RTL_NUMBER_OF(KdbCommandHistoryBuffer)": 1,
                "Module %wZ loaded.": 1,
                "break": 1,
                "? expression": 1,
                "Evaluate expression.": 1,
                "disasm": 1,
                "disasm [address] [L count]": 1,
                "Disassemble count instructions at address.": 1,
                "x [address] [L count]": 1,
                "Display count dwords, starting at addr.": 1,
                "Display general purpose registers.": 1,
                "cregs": 1,
                "Display control registers.": 1,
                "sregs": 1,
                "Display status registers.": 1,
                "dregs": 1,
                "Display debug registers.": 1,
                "bt [*frameaddr|thread id]": 1,
                "Prints current backtrace or from given frame addr": 1,
                "Flow control": 1,
                "Continue execution (leave debugger)": 1,
                "step [count]": 1,
                "Execute single instructions, stepping into interrupts.": 1,
                "next [count]": 1,
                "Execute single instructions, skipping calls and reps.": 1,
                "List breakpoints.": 1,
                "be [breakpoint]": 1,
                "Enable breakpoint.": 1,
                "bd [breakpoint]": 1,
                "Disable breakpoint.": 1,
                "bc [breakpoint]": 1,
                "Clear breakpoint.": 1,
                "bpx [address] [IF condition]": 1,
                "Set software execution breakpoint at address.": 1,
                "bpm [r|w|rw|x] [byte|word|dword] [address] [IF condition]": 1,
                "Set memory breakpoint at address.": 1,
                "Process/Thread": 1,
                "thread": 1,
                "thread [list[ pid]|[attach ]tid]": 1,
                "List threads in current or specified process, display thread with given id or attach to thread.": 1,
                "proc [list|[attach ]pid]": 1,
                "List processes, display process with given id or attach to process.": 1,
                "System info": 1,
                "mod [address]": 1,
                "List all modules or the one containing address.": 1,
                "Display global descriptor table.": 1,
                "Display local descriptor table.": 1,
                "Display interrupt descriptor table.": 1,
                "Display processor control region.": 1,
                "Display task state segment.": 1,
                "Others": 1,
                "bugcheck": 1,
                "Bugchecks the system.": 1,
                "filter": 1,
                "filter [error|warning|trace|info|level]+|-[componentname|default]": 1,
                "Enable/disable debug channels": 1,
                "set [var] [value]": 1,
                "Sets var to value or displays value of var.": 1,
                "dmesg": 1,
                "Display debug messages on screen, with navigation on pages.": 1,
                "Kernel dmesg. Alias for dmesg.": 1,
                "Display help screen.": 1,
                "!pool": 1,
                "!pool [Address [Flags]]": 1,
                "Display information about pool allocations.": 1,
                "ZERODEVIDE": 1,
                "DEBUGTRAP": 1,
                "OVERFLOW": 1,
                "BOUND": 1,
                "INVALIDOP": 1,
                "NOMATHCOP": 1,
                "DOUBLEFAULT": 1,
                "RESERVED(9)": 1,
                "INVALIDTSS": 1,
                "SEGMENTNOTPRESENT": 1,
                "STACKFAULT": 1,
                "PAGEFAULT": 1,
                "RESERVED(15)": 1,
                "MATHFAULT": 1,
                "ALIGNMENTCHECK": 1,
                "MACHINECHECK": 1,
                "SIMDFAULT": 1,
                "error": 1,
                "warning": 1,
                "trace": 1,
                "DEFAULT": 1,
                "SYSTEM": 1,
                "SETUP": 1,
                "FSTUB": 1,
                "CRASHDUMP": 1,
                "CDAUDIO": 1,
                "CDROM": 1,
                "CLASSPNP": 1,
                "REDBOOK": 1,
                "STORPROP": 1,
                "SCSIPORT": 1,
                "SCSIMINIPORT": 1,
                "CONFIG": 1,
                "I8042PRT": 1,
                "SERMOUSE": 1,
                "LSERMOUS": 1,
                "KBDHID": 1,
                "MOUHID": 1,
                "KBDCLASS": 1,
                "MOUCLASS": 1,
                "TWOTRACK": 1,
                "WMILIB": 1,
                "HALIA64": 1,
                "VIDEO": 1,
                "SVCHOST": 1,
                "VIDEOPRT": 1,
                "TCPIP": 1,
                "DMSYNTH": 1,
                "NTOSPNP": 1,
                "FASTFAT": 1,
                "SAMSS": 1,
                "PNPMGR": 1,
                "NETAPI": 1,
                "SCSERVER": 1,
                "SCCLIENT": 1,
                "SERIAL": 1,
                "SERENUM": 1,
                "RPCPROXY": 1,
                "AUTOCHK": 1,
                "DCOMSS": 1,
                "UNIMODEM": 1,
                "FLTMGR": 1,
                "WMICORE": 1,
                "BURNENG": 1,
                "IMAPI": 1,
                "FUSION": 1,
                "IDLETASK": 1,
                "SOFTPCI": 1,
                "MCHGR": 1,
                "PCIIDE": 1,
                "FLOPPY": 1,
                "TERMSRV": 1,
                "W32TIME": 1,
                "PREFETCHER": 1,
                "RSFILTER": 1,
                "FCPORT": 1,
                "DMCONFIG": 1,
                "DMADMIN": 1,
                "WSOCKTRANSPORT": 1,
                "PNPMEM": 1,
                "PROCESSOR": 1,
                "DMSERVER": 1,
                "INFINIBAND": 1,
                "IHVDRIVER": 1,
                "IHVVIDEO": 1,
                "IHVAUDIO": 1,
                "IHVNETWORK": 1,
                "IHVSTREAMING": 1,
                "IHVBUS": 1,
                "RTLTHREADPOOL": 1,
                "TCPIP6": 1,
                "ISAPNP": 1,
                "STORPORT": 1,
                "STORMINIPORT": 1,
                "PRINTSPOOLER": 1,
                "VSSDYNDISK": 1,
                "VERIFIER": 1,
                "VDSBAS": 1,
                "VDSDYN": 1,
                "VDSDYNDR": 1,
                "VDSLDR": 1,
                "VDSUTIL": 1,
                "DFRGIFC": 1,
                "WOW64": 1,
                "PERFLIB": 1,
                "IOSTRESS": 1,
                "USERGDI": 1,
                "MMCSS": 1,
                "THREADORDER": 1,
                "ENVIRON": 1,
                "FVEVOL": 1,
                "NVCTRACE": 1,
                "LUAFV": 1,
                "APPCOMPAT": 1,
                "USBSTOR": 1,
                "SBP2PORT": 1,
                "COVERAGE": 1,
                "CACHEMGR": 1,
                "MOUNTMGR": 1,
                "KSECDD": 1,
                "FLTREGRESS": 1,
                "MSDSM": 1,
                "PSHED": 1,
                "STORVSP": 1,
                "LSASS": 1,
                "SSPICLI": 1,
                "EXFAT": 1,
                "FILETRACE": 1,
                "XSAVE": 1,
                "DRIVEEXTENDER": 1,
                " BIT3": 1,
                " BIT5": 1,
                " BIT15": 1,
                " BIT22": 1,
                " BIT23": 1,
                " BIT24": 1,
                " BIT25": 1,
                " BIT26": 1,
                " BIT27": 1,
                " BIT28": 1,
                " BIT29": 1,
                " BIT30": 1,
                " BIT31": 1,
                " OSFXSR": 1,
                " OSXMMEXCPT": 1,
                "../../ntoskrnl/kdbg/kdb_expr.c": 1,
                "Stack": 1,
                "TrapFrame": 1,
                "Result": 1,
                "Couldn't access memory at 0x%lx": 1,
                "Expression": 1,
                "+-*/%()[]<>!=": 1,
                "qword": 1,
                "MemorySize == 1 || MemorySize == 2 || MemorySize == 4 || MemorySize == 8": 1,
                "Operator[1] == '='": 1,
                "Stack size: %ld": 1,
                "0x%I64x,": 1,
                "UNKNOWN OP,": 1,
                "[%s],": 1,
                "Unsupported Type: %d": 1,
                "Stack->Sp >= 1": 1,
                "eflags": 1,
                "1234567890-=": 1,
                "qwertyuiop[]": 1,
                "asdfghjkl;'`": 1,
                "\\zxcvbnm,./": 1,
                "789-456+1230": 2,
                "!@#$%^&*()_+": 1,
                "QWERTYUIOP{}": 1,
                "ASDFGHJKL:\"`": 1,
                "\\ZXCVBNM<>?": 1,
                "../../ntoskrnl/kdbg/kdb_symbols.c": 1,
                "CacheEntry": 1,
                "CacheEntry->FileName.Buffer": 1,
                "<%s:%x (%s:%d (%s))>": 1,
                "<%s:%x>": 1,
                "Current->RefCount > 0": 1,
                "(%s:%d) Warning: Removing unknown symbol file: RosSymInfo = %p": 1,
                "KeLoaderBlock": 3,
                "LOADSYMBOLS": 1,
                "NOLOADSYMBOLS": 1,
                "   Bochs debugging enabled": 1,
                "SCREEN": 1,
                "BOCHS": 1,
                "BREAK": 1,
                "NODEBUG": 1,
                "CRASHDEBUG": 1,
                "DEBUG": 1,
                "DEBUGPORT": 1,
                "BAUDRATE": 1,
                "../../ntoskrnl/kd/kdio.c": 1,
                "(%s:%d) -----------------------------------------------------": 1,
                "(%s:%d) ReactOS 0.4-SVN (Build 20140715-rUNKNOWN)": 1,
                "(%s:%d) %u System Processor [%u MB Memory]": 1,
                "(%s:%d) Command Line: %s": 1,
                "(%s:%d) ARC Paths: %s %s %s %s": 1,
                "   Screen debugging enabled": 1,
                "(%s:%d) ---------------------------------------------------------------": 1,
                "   File log debugging enabled": 1,
                "   Serial debugging enabled": 1,
                "\\SystemRoot\\debug.log": 1,
                "../../ntoskrnl/kd/kdmain.c": 1,
                "(%s:%d) Invalid debug service call!": 1,
                "Invalid debug service call!": 1,
                "!!! Assertion Failure at Address 0x%p !!!": 1,
                "KdRefreshDebuggerNotPresent": 3,
                "KdPowerTransition": 3,
                "KdChangeOption": 3,
                "../../lib/cmlib/hivewrt.c": 1,
                "RegistryHive->ReadOnly == FALSE": 2,
                "RegistryHive->BaseBlock->Length == RegistryHive->Storage[Stable].Length * HV_BLOCK_SIZE": 1,
                "HvpWriteLog": 1,
                "../../lib/cmlib/hivecell.c": 1,
                "RegistryHive != NULL": 1,
                "FreeBlock != NULL": 1,
                "Size >= (1 << 3)": 1,
                "%s - Hive %p, CellIndex %08lx": 1,
                "CellIndex != HCELL_NIL": 1,
                "CellBlock < RegistryHive->Storage[CellType].Length": 1,
                "Block != NULL": 1,
                "(CellIndex & HCELL_TYPE_MASK) == Stable": 1,
                "-- beginning of HvpRemoveFree trace --": 1,
                "block we are about to free: %08x": 1,
                "chosen free list index: %u": 1,
                "free list [%u]: ": 1,
                "%08x ": 1,
                "-- end of HvpRemoveFree trace --": 1,
                "%s - Hive %p, CellIndex %08lx, HoldingLock %u": 1,
                "Hive->ReadOnly == FALSE": 1,
                "Stable": 1,
                "Volatile": 1,
                "%s - Hive %p, Size %x, %s, Vicinity %08lx": 1,
                "%s - CellIndex %08lx": 1,
                "Free->Size < 0": 1,
                "%s - Hive %p, CellIndex %08lx, Size %x": 1,
                "OldCellSize > 0": 1,
                "CellRef": 1,
                "Cell != HCELL_NIL": 1,
                "ERROR: Too many references": 1,
                "CellRef->StaticCount <= STATIC_CELL_PAIR_COUNT": 1,
                "HvpGetCellHeader": 1,
                "HvMarkCellDirty": 2,
                "HvAllocateCell": 2,
                "HvReallocateCell": 2,
                "HvFreeCell": 2,
                "../../lib/cmlib/hiveinit.c": 1,
                "(%s:%d) Verify Hive Header failed: ": 1,
                "(%s:%d)     Signature: 0x%x and not 0x%x, Major: 0x%x and not 0x%x": 1,
                "(%s:%d)     Minor: 0x%x is not >= 0x%x, Type: 0x%x and not 0x%x": 1,
                "(%s:%d)     Format: 0x%x and not 0x%x, Cluster: 0x%x and not 1": 1,
                "(%s:%d)     Sequence: 0x%x and not 0x%x, Checksum: 0x%x and not 0x%x": 1,
                "(%s:%d) Registry is corrupt: ChunkSize %lu < sizeof(HBASE_BLOCK) %lu, or HvpVerifyHiveHeader() failed": 1,
                "(%s:%d) Allocating block list failed": 1,
                "sizeof(HBASE_BLOCK) >= (HV_BLOCK_SIZE * Hive->Cluster)": 1,
                "../../lib/cmlib/cminit.c": 1,
                "(%s:%d) IndexCell->Signature %x": 1,
                "KeyCell->Signature == CM_KEY_NODE_SIGNATURE": 1,
                "../../lib/cmlib/hivebin.c": 1,
                "RegistryHive->DirtyVector.Buffer": 1,
                "../../lib/rtl/nls.c": 1,
                "(%s:%d) RtlConsoleMultiByteToUnicodeN calling RtlMultiByteToUnicodeN": 1,
                "NlsUnicodeToOemTable != NULL": 1,
                "RtlConsoleMultiByteToUnicodeN": 2,
                "../../lib/rtl/sd.c": 1,
                "../../lib/rtl/acl.c": 1,
                "(%s:%d) Invalid ACL revision": 1,
                "(%s:%d) Invalid ACL size": 1,
                "(%s:%d) Invalid ACE size": 1,
                "(%s:%d) Invalid ACE size: %lx": 1,
                "(%s:%d) Invalid ACE size %lx %lx": 1,
                "(%s:%d) Invalid ACE size: %lx %lx": 1,
                "(%s:%d) Invalid SID": 1,
                "(%s:%d) Unsupported ACE in ReactOS, assuming valid": 1,
                "(%s:%d) Unknown ACE": 1,
                "../../lib/rtl/atom.c": 1,
                "AtomName != NULL": 1,
                "../../lib/rtl/sid.c": 1,
                "../../lib/rtl/heap.c": 1,
                "Heap != NULL": 1,
                "Parameters != NULL": 1,
                "!(Flags & HEAP_LOCK_USER_ALLOCATED)": 1,
                "!(Flags & HEAP_NO_SERIALIZE) || (Lock == NULL)": 1,
                "FreeEntry->Size == BlockSize": 1,
                "FreeEntry->Size < HEAP_FREELISTS": 1,
                "(Heap->u.FreeListsInUseBytes[Index] & Bit) == 0": 1,
                "Heap->u.FreeListsInUseBytes[Index] & Bit": 1,
                "IsListEmpty(&Heap->FreeLists[FreeEntry->Size])": 1,
                "(%s:%d) Free heap block %p modified at %p after it was freed": 1,
                "(%s:%d) Committing page failed with status 0x%08X": 1,
                "LastEntry->Size != 0": 1,
                "(LastEntry + LastEntry->Size) == FirstEntry": 1,
                "(FirstEntry + FirstEntry->Size)->PreviousSize == 0": 1,
                "(%s:%d) HEAP: Failed to create UCR descriptor": 1,
                "Segment != NULL": 1,
                "SegmentCommit >= PAGE_SIZE": 1,
                "ROUND_DOWN(SegmentCommit, PAGE_SIZE) == SegmentCommit": 1,
                "SegmentReserve >= SegmentCommit": 1,
                "ROUND_DOWN(SegmentReserve, PAGE_SIZE) == SegmentReserve": 1,
                "(Segment->Entry.Size << HEAP_ENTRY_SHIFT) <= PAGE_SIZE": 1,
                "(%s:%d) HEAP: Failed to release segment's memory with status 0x%08X": 1,
                "FreeEntry->PreviousSize == CurrentEntry->Size": 1,
                "*FreeSize == NextEntry->PreviousSize": 1,
                "(%s:%d) Committing failed with status 0x%08X": 1,
                "(%s:%d) Reserving failed with status 0x%08X": 1,
                "(%s:%d) Enabling page heap failed": 1,
                "(%s:%d) Invalid flags 0x%08x, fixing...": 1,
                "(%s:%d) Getting max usermode address failed with status 0x%08x": 1,
                "(%s:%d) Querying amount of user supplied memory failed with status 0x%08X": 1,
                "(%s:%d) Failed to reserve memory with status 0x%08x": 1,
                "(%s:%d) Failure, Status 0x%08X": 1,
                "(%s:%d) Failed to initialize heap (%x)": 1,
                "(%s:%d) Failed to initialize heap segment (%x)": 1,
                "(%s:%d) HEAP: Trying to free an invalid address %p!": 1,
                "(%s:%d) HEAP: Failed releasing memory with Status 0x%08X. Heap %p, ptr %p, base address %p": 1,
                "(HeapEntry + BlockSize)->PreviousSize == BlockSize": 1,
                "(%s:%d) HEAP: Allocation failed!": 1,
                "(%s:%d) Flags %x": 1,
                "(%s:%d) HEAP: RtlAllocateHeap is called with unsupported flags %x, ignoring": 1,
                "(%s:%d) HEAP: Unable to release memory (pointer %p, size 0x%x), Status %08x": 1,
                "(%s:%d) Realloc in place failed, but it was the only option": 1,
                "(%s:%d) HEAP: Heap entry (size %x) %p tail is modified at %p": 1,
                "(%s:%d) HEAP: Invalid heap entry %p in heap %p": 1,
                "(%s:%d) HEAP: Entry %p is not inside uncommited range [%p .. %p)": 1,
                "(%s:%d) HEAP: Entry %p has incorrect PreviousSize %x instead of %x": 1,
                "(%s:%d) HEAP: Free heap block %p modified at %p after it was freed": 1,
                "(%s:%d) HEAP: Heap entry %p SegmentOffset is incorrect %x (should be %x)": 1,
                "(%s:%d) HEAP: Heap entry %p is not last block in segment (%p)": 1,
                "(%s:%d) HEAP: Heap entry %p does not match next uncommitted address (%p)": 1,
                "(%s:%d) HEAP: Segment %p NumberOfUnCommittedPages is invalid (%x != %x)": 1,
                "(%s:%d) HEAP: Segment %p NumberOfUnCommittedRanges is invalid (%x != %x)": 1,
                "(%s:%d) HEAP: Empty %x-free list marked as non-empty": 1,
                "(%s:%d) HEAP: Non-empty %x-free list marked as empty": 1,
                "(%s:%d) HEAP: %Ix-dedicated list free element %p is marked in-use": 1,
                "(%s:%d) HEAP: Non dedicated list free element %p has size %x which would fit a dedicated list": 1,
                "(%s:%d) HEAP: %Ix-dedicated list free element %p has incorrect size %x": 1,
                "(%s:%d) HEAP: Non dedicated list free element %p is not put in order": 1,
                "(%s:%d) HEAP: Free blocks count in arena (%lu) does not match free blocks number in the free lists (%lu)": 1,
                "(%s:%d) HEAP: Total size of free blocks in arena (%Iu) does not equal to the one in heap header (%Iu)": 1,
                "(%s:%d) HEAP: Signature %lx is invalid for heap %p": 1,
                "(%s:%d) RtlSetHeapInformation() needs to enable LFH": 1,
                "RtlpCoalesceHeap": 2,
                "RtlCompactHeap": 2,
                "RtlpValidateHeapSegment": 2,
                "RtlEnumProcessHeaps": 2,
                "RtlGetProcessHeaps": 2,
                "RtlValidateProcessHeaps": 2,
                "RtlZeroHeap": 3,
                "RtlUsageHeap": 2,
                "RtlQueryTagHeap": 2,
                "RtlExtendHeap": 2,
                "RtlCreateTagHeap": 2,
                "RtlWalkHeap": 2,
                "RtlProtectHeap": 2,
                "RtlMultipleAllocateHeap": 2,
                "RtlMultipleFreeHeap": 2,
                "../../lib/rtl/unicode.c": 1,
                "!(UniDest->MaximumLength & 1) && UniDest->Length <= UniDest->MaximumLength": 1,
                "!(UnicodeString->Length & 1)": 1,
                "!(UniSource->Length & 1)": 1,
                "Flags == 0": 1,
                "(%s:%d) RtlpEnsureBufferSize: stub": 1,
                "RtlMultiAppendUnicodeStringBuffer": 2,
                "RtlIsValidOemCharacter": 3,
                "../../lib/rtl/access.c": 1,
                "Assertion '%s' failed at %s line %u: %s": 1,
                "Assertion '%s' failed at %s line %u": 1,
                "Unhandled exception": 1,
                "ExceptionCode:    %8x": 1,
                "Faulting Address: %8x": 1,
                "CS:EIP %x:%x": 1,
                "DS %x ES %x FS %x GS %x": 1,
                "EAX: %.8x   EBX: %.8x   ECX: %.8x": 1,
                "EDX: %.8x   EBP: %.8x   ESI: %.8x   ESP: %.8x": 1,
                "EDI: %.8x   EFLAGS: %.8x": 1,
                "Address:": 1,
                "   %8x+%-8x   %s": 2,
                "<invalid address>": 1,
                "   %8x%9s   %s": 1,
                "<error dumping stack trace: 0x%x>": 1,
                "../../lib/rtl/exception.c": 1,
                "RtlUnhandledExceptionFilter": 2,
                "../../lib/rtl/registry.c": 1,
                "(%s:%d) RTL: Expand variables for %wZ failed - Status == %lx Size %x > %x <%x>": 1,
                "(%s:%d) RTL: Expand variables for %wZ failed - Status == %lx": 1,
                "(%s:%d) RtlQueryRegistryValues: Miscomputed buffer size at line %d": 1,
                "../../lib/rtl/luid.c": 1,
                "../../lib/rtl/bootdata.c": 1,
                "NewPath.Length == PathLen": 1,
                "NewPath.Length == NewPath.MaximumLength - sizeof(WCHAR)": 1,
                "SecurityDescriptor != NULL": 1,
                "SecurityDescriptor->Dacl != NULL": 1,
                "../../lib/rtl/splaytree.c": 1,
                "RtlDeleteNoSplay": 3,
                "../../lib/rtl/generictable.c": 1,
                "Table->NumberGenericTableElements != (MAXULONG - 1)": 2,
                "Result == GenericEqual": 2,
                "RtlEnumerateGenericTableLikeADirectory": 3,
                "../../lib/rtl/avltable.c": 1,
                "../../lib/rtl/avlsupp.c": 1,
                "RtlGetElementGenericTableAvl": 3,
                "../../lib/rtl/message.c": 1,
                "(%s:%d) RtlFormatMessage(%S, %u, %s, %s, %s, %s, %p, %lu %lx)": 1,
                "RtlFormatMessageEx": 2,
                ";+=[],\"*\\<>/?:|": 1,
                "*?<>|\"+=,;[]:/\\": 1,
                "../../lib/rtl/i386/except.c": 1,
                "RegistrationFrame != NULL": 1,
                "../../lib/rtl/image.c": 1,
                "(%s:%d) Invalid flag combination... check for new API flags?": 1,
                "(%s:%d) Size too small": 1,
                "(%s:%d) Not an MZ file": 1,
                "(%s:%d) e_lfanew is larger than PE file": 1,
                "(%s:%d) e_lfanew is larger than 4GB": 1,
                "(%s:%d) PE is larger than 4GB": 1,
                "(%s:%d) PE offset is larger than 256MB": 1,
                "(%s:%d) PE signature missing": 1,
                "(%s:%d) Unknown/unsupported fixup type %hu.": 1,
                "(%s:%d) Address %p, Current %u, Count %u, *TypeOffset %x": 1,
                "(%s:%d) Error during call to LdrProcessRelocationBlockLongLong()!": 1,
                "%u.%u.%u.%u": 1,
                "../../lib/rtl/network.c": 1,
                "RtlIpv4StringToAddressA": 3,
                "RtlIpv4StringToAddressExA": 3,
                "RtlIpv4StringToAddressW": 3,
                "RtlIpv4StringToAddressExW": 3,
                "RtlIpv6AddressToStringA": 3,
                "RtlIpv6AddressToStringExA": 3,
                "RtlIpv6AddressToStringW": 3,
                "RtlIpv6AddressToStringExW": 3,
                "RtlIpv6StringToAddressA": 3,
                "RtlIpv6StringToAddressExA": 3,
                "RtlIpv6StringToAddressW": 3,
                "RtlIpv6StringToAddressExW": 3,
                "../../lib/rtl/error.c": 1,
                "(%s:%d) no mapping for %08x": 1,
                "(%s:%d) Invalid error mode": 1,
                "RtlMapSecurityErrorToNtStatus": 3,
                "../../lib/rtl/timezone.c": 1,
                "../../lib/rtl/random.c": 1,
                "../../lib/rtl/process.c": 1,
                "(%s:%d) Failed to read image file from disk, Status = 0x%08X": 1,
                "(%s:%d) Failed to create section for image file, Status = 0x%08X": 1,
                "(%s:%d) Failed to reserve 1MB of space ": 1,
                "(%s:%d) Failed to allocate Environment Block": 1,
                "(%s:%d) Failed to allocate Parameter Block": 1,
                "(%s:%d) Could not map process image": 1,
                "(%s:%d) Could not create Kernel Process Object": 1,
                "(%s:%d) Could not query Section Info": 1,
                "(%s:%d) Could not query Process Info": 1,
                "(%s:%d) Could not Create Thread": 1,
                "(%s:%d) Failed to receive the process cookie! Status: 0x%lx": 1,
                "Qkkbal": 1,
                "wn>Jj": 1,
                "-../../lib/rtl/heappage.c": 1,
                "(ULONG_PTR)(((PRTL_BALANCED_LINKS)0)+1) + sizeof(PUCHAR) == ByteSize": 1,
                "pBlock": 1,
                "(%s:%d) heap handle with incorrect signature": 1,
                "(%s:%d) multithreaded access in HEAP_NO_SERIALIZE heap": 1,
                "(%s:%d) Page heap: AllocVm (%p, %Ix, %x) failed with %x ": 1,
                "(%s:%d) Page heap: FreeVm (%p, %Ix, %x) status %x ": 1,
                "(%s:%d) Page heap: FreeVm (%p, %Ix, %x) failed with %x ": 1,
                "(%s:%d) Page heap: ProtectVm (%p, %Ix, %x) failed with %x ": 1,
                "AddressUserData == &DphNode->pUserAllocation": 1,
                "NewElement == TRUE": 1,
                "ElementPresent == TRUE": 1,
                "FreeAllocations >= LeaveOnFreeList": 1,
                "DphNode": 1,
                "Node->pUserAllocation == pUserMem": 1,
                "(Node->nVirtualAccessSize + PAGE_SIZE) <= Node->nVirtualBlockSize": 1,
                "(%s:%d) Failure initializing delayed free queue critical section": 1,
                "(%s:%d) block corrupted after having been freed": 1,
                "(%s:%d) block already freed": 1,
                "(%s:%d) corrupted infix pattern for freed block": 1,
                "(%s:%d) corrupted heap pointer or using wrong heap": 1,
                "(%s:%d) corrupted suffix pattern": 1,
                "(%s:%d) corrupted prefix pattern": 1,
                "(%s:%d) corrupted start stamp": 1,
                "(%s:%d) corrupted end stamp": 1,
                "(%s:%d) exception raised while verifying block": 1,
                "(%s:%d) Corrupted heap block %p": 1,
                "ValidationInformation != NULL": 1,
                "(%s:%d) Page heap: pid 0x%p: page heap enabled with flags 0x%X.": 1,
                "DphNode != NULL": 1,
                "(%s:%d) Page heap: process 0x%p created heap @ %p (%p, flags 0x%X)": 1,
                "(%s:%d) Page heap: process 0x%p destroyed heap @ %p (%p)": 1,
                "(%s:%d) extreme size request": 1,
                "(%s:%d) Page heap: Unable to allocate virtual memory": 1,
                "AvailableNode->nVirtualBlockSize >= AllocateSize": 1,
                "BusyNode != NULL": 1,
                "(%s:%d) Page heap: freeing a null pointer ": 1,
                "Node != NULL": 1,
                "RtlpDphTargetDllsLogicInitialize": 2,
                "RtlpDphInternalValidatePageHeap": 2,
                "RtlpDphVerifyIntegrity": 2,
                "RtlpDphIsNormalFreeHeapBlock": 2,
                "../../lib/rtl/heapdbg.c": 1,
                "(%s:%d) HEAP: Incorrect ReserveSize %x": 1,
                "(%s:%d) HEAP: Incorrect CommitSize %x": 1,
                "(%s:%d) HEAP: Can't specify Lock routine and have HEAP_NO_SERIALIZE flag set": 1,
                "(%s:%d) HEAP: Specified heap base address %p is invalid, Status 0x%08X": 1,
                "(%s:%d) HEAP: Specified heap base address %p is not really a base one %p": 1,
                "(%s:%d) HEAP: Specified heap base address %p is free": 1,
                "(%s:%d) HEAP: It's forbidden delete process heap!": 1,
                "(%s:%d) HEAP: Invalid heap %p signature 0x%x": 1,
                "(%s:%d) HEAP: Too big allocation size %x (max allowed %x)": 1,
                "../../lib/rtl/env.c": 1,
                "RtlSetEnvironmentStrings": 2,
                "../../lib/rtl/thread.c": 1,
                "RtlRemoteCall": 2,
                "../../lib/rossym/find.c": 1,
                "(%s:%d) Uninitialized RosSymInfo": 1,
                "LineNumber || FileName || FunctionName": 1,
                "../../lib/rossym/frommem.c": 1,
                "(%s:%d) Image doesn't have a valid DOS header": 2,
                "(%s:%d) Image doesn't have a valid PE header": 2,
                "(%s:%d) Image doesn't have valid section headers": 1,
                "../../lib/rossym/fromfile.c": 1,
                "(%s:%d) Failed to read DOS header": 1,
                "(%s:%d) Failed seeking to NT headers": 1,
                "(%s:%d) Failed to read NT headers": 1,
                "(%s:%d) Failed seeking to section headers": 1,
                "(%s:%d) Failed to allocate memory for %u section headers": 1,
                "(%s:%d) Failed to read section headers": 1,
                "(%s:%d) Failed seeking to section data": 1,
                "(%s:%d) Failed to read rossym header": 1,
                "(%s:%d) Invalid ROSSYM_HEADER": 2,
                "(%s:%d) Failed to allocate memory for rossym": 2,
                "(%s:%d) Failed to read rossym headers": 1,
                "../../lib/rossym/fromraw.c": 1,
                "(null)": 2,
                "0123456789abcdef0x": 2,
                "0123456789ABCDEF0X": 2,
                " b b b b": 1,
                "EricF.Nelson": 1,
                "O`RMz": 1,
                "1\"EYg-": 1,
                "@R.R=": 1,
                "ikKS=": 1,
                "8Jess*": 1,
                "]$C9\"D": 1,
                "3]X+'/": 1,
                "-qZ~C": 1,
                "Y3@(G": 1,
                "K$ZQH": 1,
                "3!XI-X": 1,
                "libgcc.a.dbg": 1,
                "0 ]libgcc.a.dbg": 3,
                "ntkrnlmp.exe": 1,
                "CcCopyRead": 2,
                "CcCopyWrite": 2,
                "CcFastMdlReadWait": 2,
                "CcFastReadNotPossible": 2,
                "CcFastReadWait": 2,
                "CcFlushCache": 2,
                "CcGetFileObjectFromBcb": 2,
                "CcGetFileObjectFromSectionPtrs": 2,
                "CcInitializeCacheMap": 2,
                "CcMapData": 2,
                "CcMdlReadComplete": 2,
                "CcMdlWriteComplete": 2,
                "CcPinMappedData": 2,
                "CcPinRead": 2,
                "CcPreparePinWrite": 2,
                "CcPurgeCacheSection": 2,
                "CcRepinBcb": 2,
                "CcSetDirtyPinnedData": 2,
                "CcSetFileSizes": 2,
                "CcUninitializeCacheMap": 2,
                "CcUnpinData": 2,
                "CcUnpinRepinnedBcb": 2,
                "CcZeroData": 2,
                "CmRegisterCallback": 2,
                "CmUnRegisterCallback": 2,
                "DbgBreakPoint": 2,
                "DbgBreakPointWithStatus": 2,
                "DbgCommandString": 2,
                "DbgLoadImageSymbols": 2,
                "DbgPrint": 2,
                "DbgPrintEx": 2,
                "DbgPrintReturnControlC": 2,
                "DbgPrompt": 2,
                "DbgQueryDebugFilterState": 2,
                "DbgSetDebugFilterState": 2,
                "ExAcquireFastMutexUnsafe": 2,
                "ExAcquireResourceExclusiveLite": 2,
                "ExAcquireResourceSharedLite": 2,
                "ExAcquireRundownProtection": 1,
                "ExAcquireRundownProtectionCacheAware": 1,
                "ExAcquireRundownProtectionCacheAwareEx": 1,
                "ExAcquireRundownProtectionEx": 1,
                "ExAcquireSharedStarveExclusive": 2,
                "ExAcquireSharedWaitForExclusive": 2,
                "ExAllocateFromPagedLookasideList": 1,
                "ExAllocatePool": 2,
                "ExAllocatePoolWithQuota": 2,
                "ExAllocatePoolWithQuotaTag": 2,
                "ExAllocatePoolWithTag": 2,
                "ExConvertExclusiveToSharedLite": 2,
                "ExCreateCallback": 2,
                "ExDeleteNPagedLookasideList": 2,
                "ExDeletePagedLookasideList": 2,
                "ExDeleteResourceLite": 2,
                "ExDesktopObjectType": 2,
                "ExDisableResourceBoostLite": 2,
                "ExEnterCriticalRegionAndAcquireFastMutexUnsafe": 2,
                "ExEnterCriticalRegionAndAcquireResourceExclusive": 2,
                "ExEnterCriticalRegionAndAcquireResourceShared": 2,
                "ExEnterCriticalRegionAndAcquireSharedWaitForExclusive": 2,
                "ExEnumHandleTable": 2,
                "ExEventObjectType": 1,
                "ExExtendZone": 2,
                "ExFreePool": 2,
                "ExFreePoolWithTag": 2,
                "ExFreeToPagedLookasideList": 1,
                "ExGetCurrentProcessorCounts": 2,
                "ExGetCurrentProcessorCpuUsage": 2,
                "ExGetExclusiveWaiterCount": 2,
                "ExGetPreviousMode": 2,
                "ExGetSharedWaiterCount": 2,
                "ExInitializeNPagedLookasideList": 2,
                "ExInitializePagedLookasideList": 2,
                "ExInitializeResourceLite": 2,
                "ExInitializeRundownProtection": 1,
                "ExInitializeZone": 2,
                "ExInterlockedAddLargeInteger": 2,
                "ExInterlockedAddLargeStatistic": 2,
                "ExInterlockedAddUlong": 2,
                "ExInterlockedCompareExchange64": 2,
                "ExInterlockedDecrementLong": 2,
                "ExInterlockedExchangeUlong": 2,
                "ExInterlockedExtendZone": 2,
                "ExInterlockedFlushSList": 2,
                "ExInterlockedIncrementLong": 2,
                "ExInterlockedInsertHeadList": 2,
                "ExInterlockedInsertTailList": 2,
                "ExInterlockedPopEntryList": 2,
                "ExInterlockedPopEntrySList": 2,
                "ExInterlockedPushEntryList": 2,
                "ExInterlockedPushEntrySList": 2,
                "ExInterlockedRemoveHeadList": 2,
                "ExIsProcessorFeaturePresent": 2,
                "ExIsResourceAcquiredExclusiveLite": 2,
                "ExIsResourceAcquiredSharedLite": 2,
                "ExLocalTimeToSystemTime": 2,
                "ExNotifyCallback": 2,
                "ExQueueWorkItem": 2,
                "ExRaiseAccessViolation": 2,
                "ExRaiseDatatypeMisalignment": 2,
                "ExRaiseException": 1,
                "ExRaiseHardError": 2,
                "ExRaiseStatus": 1,
                "ExReInitializeRundownProtection": 1,
                "ExReInitializeRundownProtectionCacheAware": 1,
                "ExRegisterCallback": 2,
                "ExReinitializeResourceLite": 2,
                "ExReleaseFastMutexUnsafe": 2,
                "ExReleaseFastMutexUnsafeAndLeaveCriticalRegion": 2,
                "ExReleaseResourceAndLeaveCriticalRegion": 2,
                "ExReleaseResourceForThreadLite": 2,
                "ExReleaseResourceLite": 2,
                "ExReleaseRundownProtection": 1,
                "ExReleaseRundownProtectionCacheAware": 1,
                "ExReleaseRundownProtectionCacheAwareEx": 1,
                "ExReleaseRundownProtectionEx": 1,
                "ExRundownCompleted": 1,
                "ExRundownCompletedCacheAware": 1,
                "ExSemaphoreObjectType": 1,
                "ExSetResourceOwnerPointer": 2,
                "ExSetTimerResolution": 2,
                "ExSystemExceptionFilter": 2,
                "ExSystemTimeToLocalTime": 2,
                "ExUnregisterCallback": 2,
                "ExVerifySuite": 2,
                "ExWaitForRundownProtectionRelease": 1,
                "ExWaitForRundownProtectionReleaseCacheAware": 1,
                "ExWindowStationObjectType": 2,
                "ExfAcquirePushLockExclusive": 2,
                "ExfAcquirePushLockShared": 2,
                "ExfInterlockedAddUlong": 2,
                "ExfInterlockedCompareExchange64": 2,
                "ExfInterlockedInsertHeadList": 2,
                "ExfInterlockedInsertTailList": 2,
                "ExfInterlockedPopEntryList": 2,
                "ExfInterlockedPushEntryList": 2,
                "ExfInterlockedRemoveHeadList": 2,
                "ExfReleasePushLock": 2,
                "ExfReleasePushLockExclusive": 2,
                "ExfReleasePushLockShared": 2,
                "ExfTryToWakePushLock": 2,
                "ExfUnblockPushLock": 2,
                "Exfi386InterlockedDecrementLong": 2,
                "Exfi386InterlockedExchangeUlong": 2,
                "Exfi386InterlockedIncrementLong": 2,
                "Exi386InterlockedDecrementLong": 2,
                "Exi386InterlockedExchangeUlong": 2,
                "Exi386InterlockedIncrementLong": 2,
                "ExiAcquireFastMutex": 1,
                "ExiReleaseFastMutex": 1,
                "ExiTryToAcquireFastMutex": 1,
                "FsRtlAcquireFileExclusive": 2,
                "FsRtlAddBaseMcbEntry": 2,
                "FsRtlAddLargeMcbEntry": 2,
                "FsRtlAddMcbEntry": 2,
                "FsRtlAddToTunnelCache": 2,
                "FsRtlAllocateFileLock": 2,
                "FsRtlAllocatePool": 2,
                "FsRtlAllocatePoolWithQuota": 2,
                "FsRtlAllocatePoolWithQuotaTag": 2,
                "FsRtlAllocatePoolWithTag": 2,
                "FsRtlAllocateResource": 2,
                "FsRtlAreNamesEqual": 2,
                "FsRtlBalanceReads": 2,
                "FsRtlCheckLockForReadAccess": 2,
                "FsRtlCheckLockForWriteAccess": 2,
                "FsRtlCheckOplock": 2,
                "FsRtlCopyRead": 2,
                "FsRtlCopyWrite": 2,
                "FsRtlCreateSectionForDataScan": 2,
                "FsRtlCurrentBatchOplock": 2,
                "FsRtlDeleteKeyFromTunnelCache": 2,
                "FsRtlDeleteTunnelCache": 2,
                "FsRtlDeregisterUncProvider": 2,
                "FsRtlDissectDbcs": 2,
                "FsRtlDissectName": 2,
                "FsRtlDoesDbcsContainWildCards": 2,
                "FsRtlDoesNameContainWildCards": 2,
                "FsRtlFastCheckLockForRead": 2,
                "FsRtlFastCheckLockForWrite": 2,
                "FsRtlFastUnlockAll": 2,
                "FsRtlFastUnlockAllByKey": 2,
                "FsRtlFastUnlockSingle": 2,
                "FsRtlFindInTunnelCache": 2,
                "FsRtlFreeFileLock": 2,
                "FsRtlGetFileSize": 2,
                "FsRtlGetNextBaseMcbEntry": 2,
                "FsRtlGetNextFileLock": 2,
                "FsRtlGetNextLargeMcbEntry": 2,
                "FsRtlGetNextMcbEntry": 2,
                "FsRtlIncrementCcFastReadNoWait": 2,
                "FsRtlIncrementCcFastReadNotPossible": 2,
                "FsRtlIncrementCcFastReadResourceMiss": 2,
                "FsRtlIncrementCcFastReadWait": 2,
                "FsRtlInitializeBaseMcb": 2,
                "FsRtlInitializeFileLock": 2,
                "FsRtlInitializeLargeMcb": 2,
                "FsRtlInitializeMcb": 2,
                "FsRtlInitializeOplock": 2,
                "FsRtlInitializeTunnelCache": 2,
                "FsRtlInsertPerFileObjectContext": 2,
                "FsRtlInsertPerStreamContext": 2,
                "FsRtlIsDbcsInExpression": 2,
                "FsRtlIsFatDbcsLegal": 2,
                "FsRtlIsHpfsDbcsLegal": 2,
                "FsRtlIsNameInExpression": 2,
                "FsRtlIsNtstatusExpected": 2,
                "FsRtlIsPagingFile": 2,
                "FsRtlIsTotalDeviceFailure": 2,
                "FsRtlLegalAnsiCharacterArray": 1,
                "FsRtlLookupBaseMcbEntry": 2,
                "FsRtlLookupLargeMcbEntry": 2,
                "FsRtlLookupLastBaseMcbEntry": 2,
                "FsRtlLookupLastBaseMcbEntryAndIndex": 2,
                "FsRtlLookupLastLargeMcbEntry": 2,
                "FsRtlLookupLastLargeMcbEntryAndIndex": 2,
                "FsRtlLookupLastMcbEntry": 2,
                "FsRtlLookupMcbEntry": 2,
                "FsRtlLookupPerFileObjectContext": 2,
                "FsRtlLookupPerStreamContextInternal": 2,
                "FsRtlMdlRead": 2,
                "FsRtlMdlReadComplete": 2,
                "FsRtlMdlReadCompleteDev": 2,
                "FsRtlMdlReadDev": 2,
                "FsRtlMdlWriteComplete": 2,
                "FsRtlMdlWriteCompleteDev": 2,
                "FsRtlNormalizeNtstatus": 2,
                "FsRtlNotifyChangeDirectory": 2,
                "FsRtlNotifyCleanup": 2,
                "FsRtlNotifyFilterChangeDirectory": 2,
                "FsRtlNotifyFilterReportChange": 2,
                "FsRtlNotifyFullChangeDirectory": 2,
                "FsRtlNotifyFullReportChange": 2,
                "FsRtlNotifyInitializeSync": 2,
                "FsRtlNotifyReportChange": 2,
                "FsRtlNotifyUninitializeSync": 2,
                "FsRtlNotifyVolumeEvent": 2,
                "FsRtlNumberOfRunsInBaseMcb": 2,
                "FsRtlNumberOfRunsInLargeMcb": 2,
                "FsRtlNumberOfRunsInMcb": 2,
                "FsRtlOplockFsctrl": 2,
                "FsRtlOplockIsFastIoPossible": 2,
                "FsRtlPostPagingFileStackOverflow": 2,
                "FsRtlPostStackOverflow": 2,
                "FsRtlPrepareMdlWrite": 2,
                "FsRtlPrepareMdlWriteDev": 2,
                "FsRtlPrivateLock": 2,
                "FsRtlProcessFileLock": 2,
                "FsRtlRegisterFileSystemFilterCallbacks": 2,
                "FsRtlRegisterUncProvider": 2,
                "FsRtlReleaseFile": 2,
                "FsRtlRemoveBaseMcbEntry": 2,
                "FsRtlRemoveLargeMcbEntry": 2,
                "FsRtlRemoveMcbEntry": 2,
                "FsRtlRemovePerFileObjectContext": 2,
                "FsRtlRemovePerStreamContext": 2,
                "FsRtlResetBaseMcb": 2,
                "FsRtlResetLargeMcb": 2,
                "FsRtlSplitBaseMcb": 2,
                "FsRtlSplitLargeMcb": 2,
                "FsRtlSyncVolumes": 2,
                "FsRtlTeardownPerStreamContexts": 2,
                "FsRtlTruncateBaseMcb": 2,
                "FsRtlTruncateLargeMcb": 2,
                "FsRtlTruncateMcb": 2,
                "FsRtlUninitializeBaseMcb": 2,
                "FsRtlUninitializeFileLock": 2,
                "FsRtlUninitializeLargeMcb": 2,
                "FsRtlUninitializeMcb": 2,
                "FsRtlUninitializeOplock": 2,
                "HalDispatchTable": 1,
                "HalExamineMBR": 2,
                "HalPrivateDispatchTable": 2,
                "HeadlessDispatch": 2,
                "InbvAcquireDisplayOwnership": 2,
                "InbvCheckDisplayOwnership": 2,
                "InbvDisplayString": 2,
                "InbvEnableBootDriver": 2,
                "InbvEnableDisplayString": 2,
                "InbvInstallDisplayStringFilter": 2,
                "InbvIsBootDriverInstalled": 2,
                "InbvNotifyDisplayOwnershipLost": 2,
                "InbvResetDisplay": 2,
                "InbvSetScrollRegion": 2,
                "InbvSetTextColor": 2,
                "InbvSolidColorFill": 2,
                "InitSafeBootMode": 2,
                "InterlockedCompareExchange": 2,
                "InterlockedDecrement": 2,
                "InterlockedExchange": 2,
                "InterlockedExchangeAdd": 2,
                "InterlockedIncrement": 2,
                "InterlockedPopEntrySList": 2,
                "InterlockedPushEntrySList": 2,
                "IoAcquireCancelSpinLock": 2,
                "IoAcquireRemoveLockEx": 2,
                "IoAcquireVpbSpinLock": 2,
                "IoAdapterObjectType": 2,
                "IoAllocateAdapterChannel": 2,
                "IoAllocateController": 2,
                "IoAllocateDriverObjectExtension": 2,
                "IoAllocateErrorLogEntry": 2,
                "IoAllocateMdl": 2,
                "IoAllocateWorkItem": 2,
                "IoAssignDriveLetters": 2,
                "IoAssignResources": 2,
                "IoAttachDevice": 2,
                "IoAttachDeviceByPointer": 2,
                "IoAttachDeviceToDeviceStack": 2,
                "IoAttachDeviceToDeviceStackSafe": 2,
                "IoBuildPartialMdl": 2,
                "IoBuildSynchronousFsdRequest": 2,
                "IoCallDriver": 2,
                "IoCancelFileOpen": 2,
                "IoCheckDesiredAccess": 2,
                "IoCheckEaBufferValidity": 2,
                "IoCheckShareAccess": 2,
                "IoCompleteRequest": 2,
                "IoConnectInterrupt": 2,
                "IoCreateController": 2,
                "IoCreateDevice": 2,
                "IoCreateDisk": 2,
                "IoCreateDriver": 2,
                "IoCreateNotificationEvent": 2,
                "IoCreateStreamFileObject": 2,
                "IoCreateSymbolicLink": 2,
                "IoCreateSynchronizationEvent": 2,
                "IoCreateUnprotectedSymbolicLink": 2,
                "IoCsqInitialize": 2,
                "IoCsqInitializeEx": 2,
                "IoCsqInsertIrp": 2,
                "IoCsqInsertIrpEx": 2,
                "IoCsqRemoveIrp": 2,
                "IoCsqRemoveNextIrp": 2,
                "IoDeleteController": 2,
                "IoDeleteDevice": 2,
                "IoDeleteDriver": 2,
                "IoDeleteSymbolicLink": 2,
                "IoDetachDevice": 2,
                "IoDeviceHandlerObjectSize": 2,
                "IoDeviceHandlerObjectType": 2,
                "IoDeviceObjectType": 2,
                "IoDisconnectInterrupt": 2,
                "IoDriverObjectType": 2,
                "IoEnqueueIrp": 2,
                "IoEnumerateDeviceObjectList": 2,
                "IoEnumerateRegisteredFiltersList": 2,
                "IoFileObjectType": 1,
                "IoForwardAndCatchIrp": 1,
                "IoForwardIrpSynchronously": 2,
                "IoFreeController": 2,
                "IoFreeErrorLogEntry": 2,
                "IoFreeMdl": 2,
                "IoFreeWorkItem": 2,
                "IoGetAttachedDevice": 2,
                "IoGetAttachedDeviceReference": 2,
                "IoGetBaseFileSystemDeviceObject": 2,
                "IoGetBootDiskInformation": 2,
                "IoGetConfigurationInformation": 2,
                "IoGetCurrentProcess": 2,
                "IoGetDeviceAttachmentBaseRef": 2,
                "IoGetDeviceInterfaceAlias": 2,
                "IoGetDeviceInterfaces": 2,
                "IoGetDeviceObjectPointer": 2,
                "IoGetDeviceToVerify": 2,
                "IoGetDiskDeviceObject": 2,
                "IoGetDmaAdapter": 2,
                "IoGetDriverObjectExtension": 2,
                "IoGetFileObjectGenericMapping": 2,
                "IoGetInitialStack": 2,
                "IoGetLowerDeviceObject": 2,
                "IoGetPagingIoPriority": 2,
                "IoGetRelatedDeviceObject": 2,
                "IoGetRequestorProcess": 2,
                "IoGetRequestorProcessId": 2,
                "IoGetRequestorSessionId": 2,
                "IoGetStackLimits": 2,
                "IoGetTopLevelIrp": 2,
                "IoInitializeRemoveLockEx": 2,
                "IoInitializeTimer": 2,
                "IoInvalidateDeviceRelations": 2,
                "IoInvalidateDeviceState": 2,
                "IoIsFileOriginRemote": 2,
                "IoIsOperationSynchronous": 2,
                "IoIsSystemThread": 2,
                "IoIsWdmVersionAvailable": 2,
                "IoOpenDeviceInterfaceRegistryKey": 2,
                "IoOpenDeviceRegistryKey": 2,
                "IoQueryDeviceDescription": 2,
                "IoQueryFileInformation": 2,
                "IoQueryVolumeInformation": 2,
                "IoQueueWorkItem": 2,
                "IoRaiseHardError": 2,
                "IoReadDiskSignature": 2,
                "IoReadOperationCount": 2,
                "IoReadPartitionTable": 2,
                "IoReadPartitionTableEx": 2,
                "IoReadTransferCount": 2,
                "IoRegisterBootDriverReinitialization": 2,
                "IoRegisterDeviceInterface": 2,
                "IoRegisterDriverReinitialization": 2,
                "IoRegisterFileSystem": 2,
                "IoRegisterFsRegistrationChange": 2,
                "IoRegisterLastChanceShutdownNotification": 2,
                "IoRegisterShutdownNotification": 2,
                "IoReleaseCancelSpinLock": 2,
                "IoReleaseRemoveLockAndWaitEx": 2,
                "IoReleaseRemoveLockEx": 2,
                "IoReleaseVpbSpinLock": 2,
                "IoRemoveShareAccess": 2,
                "IoReportDetectedDevice": 2,
                "IoReportHalResourceUsage": 2,
                "IoReportResourceForDetection": 2,
                "IoReportResourceUsage": 2,
                "IoReportTargetDeviceChange": 2,
                "IoReportTargetDeviceChangeAsynchronous": 2,
                "IoRequestDeviceEject": 2,
                "IoSetCompletionRoutineEx": 2,
                "IoSetDeviceInterfaceState": 2,
                "IoSetDeviceToVerify": 2,
                "IoSetFileOrigin": 2,
                "IoSetHardErrorOrVerifyDevice": 2,
                "IoSetIoCompletion": 2,
                "IoSetPartitionInformation": 2,
                "IoSetPartitionInformationEx": 2,
                "IoSetShareAccess": 2,
                "IoSetStartIoAttributes": 2,
                "IoSetSystemPartition": 2,
                "IoSetThreadHardErrorMode": 2,
                "IoSetTopLevelIrp": 2,
                "IoStartNextPacket": 2,
                "IoStartNextPacketByKey": 2,
                "IoStartPacket": 2,
                "IoStartTimer": 2,
                "IoStatisticsLock": 2,
                "IoStopTimer": 2,
                "IoSynchronousInvalidateDeviceRelations": 2,
                "IoThreadToProcess": 2,
                "IoTranslateBusAddress": 2,
                "IoUnregisterFileSystem": 2,
                "IoUnregisterFsRegistrationChange": 2,
                "IoUnregisterPlugPlayNotification": 2,
                "IoUnregisterShutdownNotification": 2,
                "IoUpdateShareAccess": 2,
                "IoVerifyPartitionTable": 2,
                "IoVerifyVolume": 2,
                "IoVolumeDeviceToDosName": 2,
                "IoWMIRegistrationControl": 2,
                "IoWMIWriteEvent": 2,
                "IoWriteErrorLogEntry": 2,
                "IoWriteOperationCount": 2,
                "IoWritePartitionTable": 2,
                "IoWritePartitionTableEx": 2,
                "IoWriteTransferCount": 2,
                "IofCallDriver": 2,
                "KdDebuggerEnabled": 1,
                "KdDebuggerNotPresent": 1,
                "KdDisableDebugger": 2,
                "KdEnableDebugger": 2,
                "KdEnteredDebugger": 2,
                "KdPollBreakIn": 2,
                "KdSystemDebugControl": 2,
                "Ke386CallBios": 2,
                "Ke386IoSetAccessProcess": 2,
                "Ke386QueryIoAccessMap": 2,
                "Ke386SetIoAccessMap": 2,
                "KeAcquireGuardedMutex": 2,
                "KeAcquireGuardedMutexUnsafe": 2,
                "KeAcquireInStackQueuedSpinLockAtDpcLevel": 2,
                "KeAcquireInterruptSpinLock": 2,
                "KeAcquireSpinLockAtDpcLevel": 2,
                "KeAddSystemServiceTable": 2,
                "KeAreAllApcsDisabled": 2,
                "KeAreApcsDisabled": 2,
                "KeAttachProcess": 2,
                "KeBugCheck": 2,
                "KeBugCheckEx": 2,
                "KeCancelTimer": 2,
                "KeClearEvent": 2,
                "KeConnectInterrupt": 2,
                "KeDelayExecutionThread": 2,
                "KeDeregisterBugCheckCallback": 2,
                "KeDeregisterBugCheckReasonCallback": 2,
                "KeDetachProcess": 2,
                "KeDisconnectInterrupt": 2,
                "KeEnterCriticalRegion": 1,
                "KeEnterGuardedRegion": 1,
                "KeEnterKernelDebugger": 2,
                "KeFindConfigurationEntry": 2,
                "KeFindConfigurationNextEntry": 2,
                "KeFlushEntireTb": 2,
                "KeFlushQueuedDpcs": 2,
                "KeGenericCallDpc": 2,
                "KeGetCurrentThread": 2,
                "KeGetPreviousMode": 2,
                "KeGetRecommendedSharedDataAlignment": 2,
                "KeI386MachineType": 2,
                "KeInitializeApc": 2,
                "KeInitializeDeviceQueue": 2,
                "KeInitializeDpc": 2,
                "KeInitializeEvent": 2,
                "KeInitializeGuardedMutex": 2,
                "KeInitializeInterrupt": 2,
                "KeInitializeMutant": 2,
                "KeInitializeMutex": 2,
                "KeInitializeQueue": 2,
                "KeInitializeSemaphore": 2,
                "KeInitializeSpinLock": 1,
                "KeInitializeThreadedDpc": 2,
                "KeInitializeTimer": 2,
                "KeInitializeTimerEx": 2,
                "KeInsertByKeyDeviceQueue": 2,
                "KeInsertDeviceQueue": 2,
                "KeInsertHeadQueue": 2,
                "KeInsertQueue": 2,
                "KeInsertQueueApc": 2,
                "KeInvalidateAllCaches": 2,
                "KeIpiGenericCall": 2,
                "KeIsAttachedProcess": 2,
                "KeIsExecutingDpc": 2,
                "KeLeaveCriticalRegion": 1,
                "KeLeaveGuardedRegion": 1,
                "KeNumberProcessors": 1,
                "KeProfileInterrupt": 2,
                "KeProfileInterruptWithSource": 2,
                "KePulseEvent": 2,
                "KeQueryActiveProcessors": 2,
                "KeQueryInterruptTime": 2,
                "KeQueryPriorityThread": 2,
                "KeQueryRuntimeThread": 2,
                "KeQuerySystemTime": 2,
                "KeQueryTickCount": 2,
                "KeQueryTimeIncrement": 2,
                "KeRaiseUserException": 2,
                "KeReadStateEvent": 2,
                "KeReadStateMutant": 2,
                "KeReadStateMutex": 1,
                "KeReadStateQueue": 2,
                "KeReadStateSemaphore": 2,
                "KeReadStateTimer": 2,
                "KeRegisterBugCheckCallback": 2,
                "KeRegisterBugCheckReasonCallback": 2,
                "KeRegisterNmiCallback": 2,
                "KeReleaseGuardedMutex": 2,
                "KeReleaseGuardedMutexUnsafe": 2,
                "KeReleaseInStackQueuedSpinLockFromDpcLevel": 2,
                "KeReleaseInterruptSpinLock": 2,
                "KeReleaseMutant": 2,
                "KeReleaseMutex": 2,
                "KeReleaseSemaphore": 2,
                "KeReleaseSpinLockFromDpcLevel": 2,
                "KeRemoveByKeyDeviceQueue": 2,
                "KeRemoveByKeyDeviceQueueIfBusy": 2,
                "KeRemoveDeviceQueue": 2,
                "KeRemoveEntryDeviceQueue": 2,
                "KeRemoveQueue": 2,
                "KeRemoveQueueDpc": 2,
                "KeRemoveSystemServiceTable": 2,
                "KeResetEvent": 2,
                "KeRevertToUserAffinityThread": 2,
                "KeRundownQueue": 2,
                "KeSaveStateForHibernate": 2,
                "KeServiceDescriptorTable": 2,
                "KeSetAffinityThread": 2,
                "KeSetBasePriorityThread": 2,
                "KeSetDmaIoCoherency": 2,
                "KeSetEvent": 2,
                "KeSetEventBoostPriority": 2,
                "KeSetIdealProcessorThread": 2,
                "KeSetImportanceDpc": 2,
                "KeSetKernelStackSwapEnable": 2,
                "KeSetPriorityThread": 2,
                "KeSetProfileIrql": 2,
                "KeSetSystemAffinityThread": 2,
                "KeSetTargetProcessorDpc": 2,
                "KeSetTimeIncrement": 2,
                "KeSetTimer": 2,
                "KeSetTimerEx": 2,
                "KeSignalCallDpcDone": 2,
                "KeSignalCallDpcSynchronize": 2,
                "KeStackAttachProcess": 2,
                "KeSynchronizeExecution": 2,
                "KeTerminateThread": 2,
                "KeTestSpinLock": 2,
                "KeTickCount": 2,
                "KeTryToAcquireGuardedMutex": 2,
                "KeTryToAcquireSpinLockAtDpcLevel": 2,
                "KeUnstackDetachProcess": 2,
                "KeUpdateRunTime": 2,
                "KeUpdateSystemTime": 2,
                "KeUserModeCallback": 2,
                "KeWaitForMultipleObjects": 2,
                "KeWaitForMutexObject": 1,
                "KeWaitForSingleObject": 2,
                "KefAcquireSpinLockAtDpcLevel": 2,
                "KefReleaseSpinLockFromDpcLevel": 2,
                "KiAcquireSpinLock": 2,
                "KiBugCheckData": 2,
                "KiCheckForKernelApcDelivery": 2,
                "KiCoprocessorError": 2,
                "KiDeliverApc": 2,
                "KiDispatchInterrupt": 2,
                "KiEnableTimerWatchdog": 2,
                "KiEoiHelper": 2,
                "KiIpiServiceRoutine": 2,
                "KiReleaseSpinLock": 2,
                "KiUnexpectedInterrupt": 2,
                "Kii386SpinOnSpinLock": 2,
                "LdrAccessResource": 2,
                "LdrEnumResources": 2,
                "LdrFindResourceDirectory_U": 2,
                "LdrFindResource_U": 2,
                "LpcPortObjectType": 2,
                "LpcRequestPort": 2,
                "LpcRequestWaitReplyPort": 2,
                "LsaCallAuthenticationPackage": 2,
                "LsaDeregisterLogonProcess": 2,
                "LsaFreeReturnBuffer": 2,
                "LsaLogonUser": 2,
                "LsaLookupAuthenticationPackage": 2,
                "LsaRegisterLogonProcess": 2,
                "Mm64BitPhysicalAddress": 2,
                "MmAddVerifierThunks": 2,
                "MmAllocateContiguousMemory": 2,
                "MmAllocateContiguousMemorySpecifyCache": 2,
                "MmAllocateNonCachedMemory": 2,
                "MmAllocatePagesForMdl": 2,
                "MmAllocatePagesForMdlEx": 2,
                "MmBuildMdlForNonPagedPool": 2,
                "MmCanFileBeTruncated": 2,
                "MmCommitSessionMappedView": 2,
                "MmCreateMdl": 2,
                "MmCreateSection": 2,
                "MmFlushImageSection": 2,
                "MmFreeContiguousMemory": 2,
                "MmFreeContiguousMemorySpecifyCache": 2,
                "MmFreeNonCachedMemory": 2,
                "MmFreePagesFromMdl": 2,
                "MmGetPhysicalAddress": 2,
                "MmGetPhysicalMemoryRanges": 2,
                "MmGetSystemRoutineAddress": 2,
                "MmGrowKernelStack": 2,
                "MmHighestUserAddress": 2,
                "MmIsAddressValid": 2,
                "MmIsDriverVerifying": 2,
                "MmIsRecursiveIoFault": 2,
                "MmIsThisAnNtAsSystem": 2,
                "MmIsVerifierEnabled": 2,
                "MmLockPagableDataSection": 1,
                "MmLockPagableImageSection": 1,
                "MmLockPagableSectionByHandle": 1,
                "MmMapIoSpace": 2,
                "MmMapLockedPages": 2,
                "MmMapVideoDisplay": 2,
                "MmMapViewInSessionSpace": 2,
                "MmMapViewInSystemSpace": 2,
                "MmMapViewOfSection": 2,
                "MmPageEntireDriver": 2,
                "MmProbeAndLockPages": 2,
                "MmQuerySystemSize": 2,
                "MmSectionObjectType": 2,
                "MmSizeOfMdl": 2,
                "MmSystemRangeStart": 2,
                "MmTrimAllSystemPagableMemory": 1,
                "MmUnlockPagableImageSection": 1,
                "MmUnlockPages": 2,
                "MmUnmapIoSpace": 2,
                "MmUnmapVideoDisplay": 2,
                "MmUnmapViewInSessionSpace": 2,
                "MmUnmapViewInSystemSpace": 2,
                "MmUnmapViewOfSection": 2,
                "MmUserProbeAddress": 2,
                "NlsAnsiCodePage": 2,
                "NlsLeadByteInfo": 2,
                "NlsMbCodePageTag": 2,
                "NlsMbOemCodePageTag": 2,
                "NlsOemCodePage": 2,
                "NlsOemLeadByteInfo": 1,
                "NtAddAtom": 2,
                "NtAdjustPrivilegesToken": 2,
                "NtAlertThread": 2,
                "NtAllocateLocallyUniqueId": 2,
                "NtAllocateUuids": 2,
                "NtAllocateVirtualMemory": 2,
                "NtBuildNumber": 2,
                "NtConnectPort": 2,
                "NtCreateEvent": 2,
                "NtCreateFile": 2,
                "NtCreateSection": 2,
                "NtCreateTimer": 2,
                "NtDeleteAtom": 2,
                "NtDeviceIoControlFile": 2,
                "NtDuplicateObject": 2,
                "NtDuplicateToken": 2,
                "NtFindAtom": 2,
                "NtFreeVirtualMemory": 2,
                "NtFsControlFile": 2,
                "NtGlobalFlag": 2,
                "NtMakePermanentObject": 2,
                "NtMapViewOfSection": 2,
                "NtOpenEvent": 2,
                "NtOpenFile": 2,
                "NtOpenProcess": 2,
                "NtOpenProcessToken": 2,
                "NtOpenProcessTokenEx": 2,
                "NtOpenThread": 2,
                "NtOpenThreadToken": 2,
                "NtOpenThreadTokenEx": 2,
                "NtQueryInformationAtom": 2,
                "NtQueryInformationProcess": 2,
                "NtQueryInformationThread": 2,
                "NtQueryInformationToken": 2,
                "NtQuerySecurityObject": 2,
                "NtQuerySystemInformation": 2,
                "NtRequestPort": 2,
                "NtRequestWaitReplyPort": 2,
                "NtSetEvent": 2,
                "NtSetInformationThread": 2,
                "NtSetSecurityObject": 2,
                "NtShutdownSystem": 2,
                "NtVdmControl": 2,
                "NtWaitForSingleObject": 2,
                "ObAssignSecurity": 2,
                "ObCheckCreateObjectAccess": 2,
                "ObCheckObjectAccess": 2,
                "ObCloseHandle": 2,
                "ObCreateObject": 2,
                "ObCreateObjectType": 2,
                "ObDeleteCapturedInsertInfo": 2,
                "ObDereferenceObject": 2,
                "ObDereferenceObjectDeferDelete": 2,
                "ObDereferenceSecurityDescriptor": 2,
                "ObFindHandleForObject": 2,
                "ObGetObjectSecurity": 2,
                "ObInsertObject": 2,
                "ObIsKernelHandle": 2,
                "ObLogSecurityDescriptor": 2,
                "ObMakeTemporaryObject": 2,
                "ObOpenObjectByName": 2,
                "ObOpenObjectByPointer": 2,
                "ObQueryNameString": 2,
                "ObQueryObjectAuditingByHandle": 2,
                "ObReferenceObjectByHandle": 2,
                "ObReferenceObjectByName": 2,
                "ObReferenceObjectByPointer": 2,
                "ObReferenceSecurityDescriptor": 2,
                "ObReleaseObjectSecurity": 2,
                "ObSetHandleAttributes": 2,
                "ObSetSecurityDescriptorInfo": 2,
                "ObSetSecurityObjectByPointer": 2,
                "ObfDereferenceObject": 2,
                "ObfReferenceObject": 2,
                "PoCallDriver": 2,
                "PoQueueShutdownWorkItem": 2,
                "PoRequestPowerIrp": 2,
                "PoRequestShutdownEvent": 2,
                "PoSetPowerState": 2,
                "PoShutdownBugCheck": 2,
                "ProbeForRead": 2,
                "ProbeForWrite": 2,
                "PsAssignImpersonationToken": 2,
                "PsChargePoolQuota": 2,
                "PsChargeProcessNonPagedPoolQuota": 2,
                "PsChargeProcessPagedPoolQuota": 2,
                "PsChargeProcessPoolQuota": 2,
                "PsCreateSystemProcess": 2,
                "PsCreateSystemThread": 2,
                "PsDereferenceImpersonationToken": 2,
                "PsDereferencePrimaryToken": 2,
                "PsDisableImpersonation": 2,
                "PsEstablishWin32Callouts": 2,
                "PsGetContextThread": 2,
                "PsGetCurrentProcess": 1,
                "PsGetCurrentProcessId": 2,
                "PsGetCurrentProcessSessionId": 2,
                "PsGetCurrentProcessWin32Process": 2,
                "PsGetCurrentThread": 1,
                "PsGetCurrentThreadId": 2,
                "PsGetCurrentThreadPreviousMode": 2,
                "PsGetCurrentThreadProcess": 2,
                "PsGetCurrentThreadProcessId": 2,
                "PsGetCurrentThreadStackBase": 2,
                "PsGetCurrentThreadStackLimit": 2,
                "PsGetCurrentThreadTeb": 2,
                "PsGetCurrentThreadWin32Thread": 2,
                "PsGetCurrentThreadWin32ThreadAndEnterCriticalRegion": 2,
                "PsGetJobLock": 2,
                "PsGetJobSessionId": 2,
                "PsGetJobUIRestrictionsClass": 2,
                "PsGetProcessCreateTimeQuadPart": 2,
                "PsGetProcessDebugPort": 2,
                "PsGetProcessExitProcessCalled": 2,
                "PsGetProcessExitStatus": 2,
                "PsGetProcessExitTime": 2,
                "PsGetProcessId": 2,
                "PsGetProcessImageFileName": 2,
                "PsGetProcessInheritedFromUniqueProcessId": 2,
                "PsGetProcessJob": 2,
                "PsGetProcessPeb": 2,
                "PsGetProcessPriorityClass": 2,
                "PsGetProcessSectionBaseAddress": 2,
                "PsGetProcessSecurityPort": 2,
                "PsGetProcessSessionId": 2,
                "PsGetProcessSessionIdEx": 2,
                "PsGetProcessWin32Process": 2,
                "PsGetProcessWin32WindowStation": 2,
                "PsGetThreadFreezeCount": 2,
                "PsGetThreadHardErrorsAreDisabled": 2,
                "PsGetThreadId": 2,
                "PsGetThreadProcess": 2,
                "PsGetThreadProcessId": 2,
                "PsGetThreadSessionId": 2,
                "PsGetThreadTeb": 2,
                "PsGetThreadWin32Thread": 2,
                "PsGetVersion": 2,
                "PsImpersonateClient": 2,
                "PsInitialSystemProcess": 2,
                "PsIsProcessBeingDebugged": 2,
                "PsIsSystemProcess": 2,
                "PsIsSystemThread": 2,
                "PsIsThreadImpersonating": 2,
                "PsIsThreadTerminating": 2,
                "PsJobType": 2,
                "PsLookupProcessByProcessId": 2,
                "PsLookupProcessThreadByCid": 2,
                "PsLookupThreadByThreadId": 2,
                "PsProcessType": 1,
                "PsReferenceImpersonationToken": 2,
                "PsReferencePrimaryToken": 2,
                "PsRemoveCreateThreadNotifyRoutine": 2,
                "PsRemoveLoadImageNotifyRoutine": 2,
                "PsRestoreImpersonation": 2,
                "PsReturnPoolQuota": 2,
                "PsReturnProcessNonPagedPoolQuota": 2,
                "PsReturnProcessPagedPoolQuota": 2,
                "PsRevertThreadToSelf": 2,
                "PsRevertToSelf": 2,
                "PsSetContextThread": 2,
                "PsSetCreateProcessNotifyRoutine": 2,
                "PsSetCreateThreadNotifyRoutine": 2,
                "PsSetJobUIRestrictionsClass": 2,
                "PsSetLegoNotifyRoutine": 2,
                "PsSetLoadImageNotifyRoutine": 2,
                "PsSetProcessPriorityByClass": 2,
                "PsSetProcessPriorityClass": 2,
                "PsSetProcessSecurityPort": 2,
                "PsSetProcessWin32Process": 2,
                "PsSetProcessWindowStation": 2,
                "PsSetThreadHardErrorsAreDisabled": 2,
                "PsSetThreadWin32Thread": 2,
                "PsTerminateSystemThread": 2,
                "PsThreadType": 1,
                "READ_REGISTER_BUFFER_UCHAR": 2,
                "READ_REGISTER_BUFFER_ULONG": 2,
                "READ_REGISTER_BUFFER_USHORT": 2,
                "READ_REGISTER_UCHAR": 2,
                "READ_REGISTER_ULONG": 2,
                "READ_REGISTER_USHORT": 2,
                "RtlAbsoluteToSelfRelativeSD": 2,
                "RtlAddAccessAllowedAce": 2,
                "RtlAddAccessAllowedAceEx": 2,
                "RtlAddAce": 2,
                "RtlAddAtomToAtomTable": 2,
                "RtlAddRange": 2,
                "RtlAllocateAndInitializeSid": 2,
                "RtlAllocateHeap": 2,
                "RtlAnsiCharToUnicodeChar": 2,
                "RtlAnsiStringToUnicodeSize": 1,
                "RtlAnsiStringToUnicodeString": 2,
                "RtlAppendAsciizToString": 2,
                "RtlAppendStringToString": 2,
                "RtlAppendUnicodeStringToString": 2,
                "RtlAppendUnicodeToString": 2,
                "RtlAreAllAccessesGranted": 2,
                "RtlAreAnyAccessesGranted": 2,
                "RtlAreBitsClear": 2,
                "RtlAreBitsSet": 2,
                "RtlAssert": 2,
                "RtlCaptureContext": 2,
                "RtlCaptureStackBackTrace": 2,
                "RtlCharToInteger": 2,
                "RtlCheckRegistryKey": 2,
                "RtlClearAllBits": 2,
                "RtlClearBit": 2,
                "RtlClearBits": 2,
                "RtlCompareMemory": 2,
                "RtlCompareMemoryUlong": 2,
                "RtlCompareString": 2,
                "RtlCompareUnicodeString": 2,
                "RtlCompressBuffer": 2,
                "RtlCompressChunks": 2,
                "RtlConvertLongToLargeInteger": 2,
                "RtlConvertSidToUnicodeString": 2,
                "RtlConvertUlongToLargeInteger": 2,
                "RtlCopyLuid": 2,
                "RtlCopyRangeList": 2,
                "RtlCopySid": 2,
                "RtlCopyString": 2,
                "RtlCopyUnicodeString": 2,
                "RtlCreateAcl": 2,
                "RtlCreateAtomTable": 2,
                "RtlCreateHeap": 2,
                "RtlCreateRegistryKey": 2,
                "RtlCreateSecurityDescriptor": 2,
                "RtlCreateSystemVolumeInformationFolder": 2,
                "RtlCreateUnicodeString": 2,
                "RtlCustomCPToUnicodeN": 2,
                "RtlDecompressBuffer": 2,
                "RtlDecompressChunks": 2,
                "RtlDecompressFragment": 2,
                "RtlDelete": 2,
                "RtlDeleteAce": 2,
                "RtlDeleteAtomFromAtomTable": 2,
                "RtlDeleteElementGenericTable": 2,
                "RtlDeleteElementGenericTableAvl": 2,
                "RtlDeleteOwnersRanges": 2,
                "RtlDeleteRange": 2,
                "RtlDeleteRegistryValue": 2,
                "RtlDescribeChunk": 2,
                "RtlDestroyAtomTable": 2,
                "RtlDestroyHeap": 2,
                "RtlDowncaseUnicodeString": 2,
                "RtlEmptyAtomTable": 2,
                "RtlEnlargedIntegerMultiply": 2,
                "RtlEnlargedUnsignedDivide": 2,
                "RtlEnlargedUnsignedMultiply": 2,
                "RtlEnumerateGenericTable": 2,
                "RtlEnumerateGenericTableAvl": 2,
                "RtlEnumerateGenericTableWithoutSplaying": 2,
                "RtlEnumerateGenericTableWithoutSplayingAvl": 2,
                "RtlEqualLuid": 2,
                "RtlEqualSid": 2,
                "RtlEqualString": 2,
                "RtlEqualUnicodeString": 2,
                "RtlExtendedIntegerMultiply": 2,
                "RtlExtendedLargeIntegerDivide": 2,
                "RtlExtendedMagicDivide": 2,
                "RtlFillMemory": 2,
                "RtlFillMemoryUlong": 2,
                "RtlFindClearBits": 2,
                "RtlFindClearBitsAndSet": 2,
                "RtlFindClearRuns": 2,
                "RtlFindFirstRunClear": 2,
                "RtlFindLastBackwardRunClear": 2,
                "RtlFindLeastSignificantBit": 2,
                "RtlFindLongestRunClear": 2,
                "RtlFindMessage": 2,
                "RtlFindMostSignificantBit": 2,
                "RtlFindNextForwardRunClear": 2,
                "RtlFindRange": 2,
                "RtlFindSetBits": 2,
                "RtlFindSetBitsAndClear": 2,
                "RtlFindUnicodePrefix": 2,
                "RtlFormatCurrentUserKeyPath": 2,
                "RtlFreeAnsiString": 2,
                "RtlFreeHeap": 2,
                "RtlFreeOemString": 2,
                "RtlFreeRangeList": 2,
                "RtlFreeUnicodeString": 2,
                "RtlGUIDFromString": 2,
                "RtlGenerate8dot3Name": 2,
                "RtlGetAce": 2,
                "RtlGetCallersAddress": 2,
                "RtlGetCompressionWorkSpaceSize": 2,
                "RtlGetDaclSecurityDescriptor": 2,
                "RtlGetDefaultCodePage": 2,
                "RtlGetElementGenericTable": 2,
                "RtlGetFirstRange": 2,
                "RtlGetGroupSecurityDescriptor": 2,
                "RtlGetNextRange": 2,
                "RtlGetNtGlobalFlags": 2,
                "RtlGetOwnerSecurityDescriptor": 2,
                "RtlGetSaclSecurityDescriptor": 2,
                "RtlGetSetBootStatusData": 2,
                "RtlGetVersion": 2,
                "RtlHashUnicodeString": 2,
                "RtlImageDirectoryEntryToData": 2,
                "RtlImageNtHeader": 2,
                "RtlInitAnsiString": 2,
                "RtlInitAnsiStringEx": 2,
                "RtlInitCodePageTable": 2,
                "RtlInitString": 2,
                "RtlInitUnicodeString": 2,
                "RtlInitUnicodeStringEx": 2,
                "RtlInitializeBitMap": 2,
                "RtlInitializeGenericTable": 2,
                "RtlInitializeGenericTableAvl": 2,
                "RtlInitializeRangeList": 2,
                "RtlInitializeSid": 2,
                "RtlInitializeUnicodePrefix": 2,
                "RtlInsertElementGenericTable": 2,
                "RtlInsertElementGenericTableAvl": 2,
                "RtlInsertElementGenericTableFull": 2,
                "RtlInsertElementGenericTableFullAvl": 2,
                "RtlInsertUnicodePrefix": 2,
                "RtlInt64ToUnicodeString": 2,
                "RtlIntegerToChar": 2,
                "RtlIntegerToUnicode": 2,
                "RtlIntegerToUnicodeString": 2,
                "RtlInvertRangeList": 2,
                "RtlIpv4AddressToStringA": 2,
                "RtlIpv4AddressToStringExA": 2,
                "RtlIpv4AddressToStringExW": 2,
                "RtlIpv4AddressToStringW": 2,
                "RtlIsGenericTableEmpty": 2,
                "RtlIsGenericTableEmptyAvl": 2,
                "RtlIsNameLegalDOS8Dot3": 2,
                "RtlIsRangeAvailable": 2,
                "RtlLargeIntegerAdd": 2,
                "RtlLargeIntegerArithmeticShift": 2,
                "RtlLargeIntegerDivide": 2,
                "RtlLargeIntegerNegate": 2,
                "RtlLargeIntegerShiftLeft": 2,
                "RtlLargeIntegerShiftRight": 2,
                "RtlLargeIntegerSubtract": 2,
                "RtlLengthRequiredSid": 2,
                "RtlLengthSecurityDescriptor": 2,
                "RtlLengthSid": 2,
                "RtlLockBootStatusData": 2,
                "RtlLookupAtomInAtomTable": 2,
                "RtlLookupElementGenericTable": 2,
                "RtlLookupElementGenericTableAvl": 2,
                "RtlLookupElementGenericTableFull": 2,
                "RtlLookupElementGenericTableFullAvl": 2,
                "RtlMapGenericMask": 2,
                "RtlMergeRangeLists": 2,
                "RtlMoveMemory": 2,
                "RtlMultiByteToUnicodeN": 2,
                "RtlMultiByteToUnicodeSize": 2,
                "RtlNextUnicodePrefix": 2,
                "RtlNtStatusToDosError": 2,
                "RtlNtStatusToDosErrorNoTeb": 2,
                "RtlNumberGenericTableElements": 2,
                "RtlNumberGenericTableElementsAvl": 2,
                "RtlNumberOfClearBits": 2,
                "RtlNumberOfSetBits": 2,
                "RtlOemStringToCountedUnicodeString": 2,
                "RtlOemStringToUnicodeSize": 1,
                "RtlOemStringToUnicodeString": 2,
                "RtlOemToUnicodeN": 2,
                "RtlPinAtomInAtomTable": 2,
                "RtlPrefetchMemoryNonTemporal": 2,
                "RtlPrefixString": 2,
                "RtlPrefixUnicodeString": 2,
                "RtlQueryAtomInAtomTable": 2,
                "RtlQueryRegistryValues": 2,
                "RtlQueryTimeZoneInformation": 2,
                "RtlRaiseException": 2,
                "RtlRandom": 2,
                "RtlRandomEx": 2,
                "RtlRealPredecessor": 2,
                "RtlRealSuccessor": 2,
                "RtlRemoveUnicodePrefix": 2,
                "RtlReserveChunk": 2,
                "RtlSecondsSince1970ToTime": 2,
                "RtlSecondsSince1980ToTime": 2,
                "RtlSelfRelativeToAbsoluteSD": 2,
                "RtlSelfRelativeToAbsoluteSD2": 2,
                "RtlSetAllBits": 2,
                "RtlSetBit": 2,
                "RtlSetBits": 2,
                "RtlSetDaclSecurityDescriptor": 2,
                "RtlSetGroupSecurityDescriptor": 2,
                "RtlSetOwnerSecurityDescriptor": 2,
                "RtlSetSaclSecurityDescriptor": 2,
                "RtlSetTimeZoneInformation": 2,
                "RtlSizeHeap": 2,
                "RtlSplay": 2,
                "RtlStringFromGUID": 2,
                "RtlSubAuthorityCountSid": 2,
                "RtlSubAuthoritySid": 2,
                "RtlSubtreePredecessor": 2,
                "RtlSubtreeSuccessor": 2,
                "RtlTestBit": 2,
                "RtlTimeFieldsToTime": 2,
                "RtlTimeToElapsedTimeFields": 2,
                "RtlTimeToSecondsSince1970": 2,
                "RtlTimeToSecondsSince1980": 2,
                "RtlTimeToTimeFields": 2,
                "RtlUlongByteSwap": 2,
                "RtlUlonglongByteSwap": 2,
                "RtlUnicodeStringToAnsiSize": 1,
                "RtlUnicodeStringToAnsiString": 2,
                "RtlUnicodeStringToCountedOemString": 2,
                "RtlUnicodeStringToInteger": 2,
                "RtlUnicodeStringToOemSize": 1,
                "RtlUnicodeStringToOemString": 2,
                "RtlUnicodeToCustomCPN": 2,
                "RtlUnicodeToMultiByteN": 2,
                "RtlUnicodeToMultiByteSize": 2,
                "RtlUnicodeToOemN": 2,
                "RtlUnlockBootStatusData": 2,
                "RtlUnwind": 2,
                "RtlUpcaseUnicodeChar": 2,
                "RtlUpcaseUnicodeString": 2,
                "RtlUpcaseUnicodeStringToAnsiString": 2,
                "RtlUpcaseUnicodeStringToCountedOemString": 2,
                "RtlUpcaseUnicodeStringToOemString": 2,
                "RtlUpcaseUnicodeToCustomCPN": 2,
                "RtlUpcaseUnicodeToMultiByteN": 2,
                "RtlUpcaseUnicodeToOemN": 2,
                "RtlUpperChar": 2,
                "RtlUpperString": 2,
                "RtlUshortByteSwap": 2,
                "RtlValidRelativeSecurityDescriptor": 2,
                "RtlValidSecurityDescriptor": 2,
                "RtlValidSid": 2,
                "RtlVerifyVersionInfo": 2,
                "RtlVolumeDeviceToDosName": 1,
                "RtlWalkFrameChain": 2,
                "RtlWriteRegistryValue": 2,
                "RtlZeroMemory": 2,
                "RtlxAnsiStringToUnicodeSize": 2,
                "RtlxOemStringToUnicodeSize": 2,
                "RtlxUnicodeStringToAnsiSize": 2,
                "RtlxUnicodeStringToOemSize": 2,
                "SeAccessCheck": 2,
                "SeAppendPrivileges": 2,
                "SeAssignSecurity": 2,
                "SeCaptureSecurityDescriptor": 2,
                "SeCaptureSubjectContext": 2,
                "SeCreateAccessState": 2,
                "SeCreateClientSecurity": 2,
                "SeCreateClientSecurityFromSubjectContext": 2,
                "SeDeassignSecurity": 2,
                "SeDeleteAccessState": 2,
                "SeExports": 2,
                "SeFreePrivileges": 2,
                "SeImpersonateClient": 2,
                "SeImpersonateClientEx": 2,
                "SeLockSubjectContext": 2,
                "SeOpenObjectAuditAlarm": 2,
                "SePrivilegeCheck": 2,
                "SePublicDefaultDacl": 2,
                "SeQueryAuthenticationIdToken": 2,
                "SeQuerySecurityDescriptorInfo": 2,
                "SeQuerySessionIdToken": 2,
                "SeReleaseSecurityDescriptor": 2,
                "SeReleaseSubjectContext": 2,
                "SeSetAccessStateGenericMapping": 2,
                "SeSetSecurityDescriptorInfo": 2,
                "SeSinglePrivilegeCheck": 2,
                "SeSystemDefaultDacl": 2,
                "SeTokenImpersonationLevel": 2,
                "SeTokenIsAdmin": 2,
                "SeTokenIsRestricted": 2,
                "SeTokenIsWriteRestricted": 2,
                "SeTokenObjectType": 2,
                "SeTokenType": 2,
                "SeUnlockSubjectContext": 2,
                "SeValidSecurityDescriptor": 2,
                "VerSetConditionMask": 2,
                "WRITE_REGISTER_BUFFER_UCHAR": 2,
                "WRITE_REGISTER_BUFFER_ULONG": 2,
                "WRITE_REGISTER_BUFFER_USHORT": 2,
                "WRITE_REGISTER_UCHAR": 2,
                "WRITE_REGISTER_ULONG": 2,
                "WRITE_REGISTER_USHORT": 2,
                "ZwAccessCheckAndAuditAlarm": 2,
                "ZwAddBootEntry": 2,
                "ZwAddDriverEntry": 2,
                "ZwAdjustPrivilegesToken": 2,
                "ZwAlertThread": 2,
                "ZwAllocateVirtualMemory": 2,
                "ZwAssignProcessToJobObject": 2,
                "ZwCancelIoFile": 2,
                "ZwCancelTimer": 2,
                "ZwClearEvent": 2,
                "ZwClose": 2,
                "ZwCloseObjectAuditAlarm": 2,
                "ZwConnectPort": 2,
                "ZwCreateDirectoryObject": 2,
                "ZwCreateEvent": 2,
                "ZwCreateFile": 2,
                "ZwCreateJobObject": 2,
                "ZwCreateKey": 2,
                "ZwCreateSection": 2,
                "ZwCreateSymbolicLinkObject": 2,
                "ZwCreateTimer": 2,
                "ZwDeleteBootEntry": 2,
                "ZwDeleteDriverEntry": 2,
                "ZwDeleteFile": 2,
                "ZwDeleteKey": 2,
                "ZwDeleteValueKey": 2,
                "ZwDeviceIoControlFile": 2,
                "ZwDisplayString": 2,
                "ZwDuplicateObject": 2,
                "ZwDuplicateToken": 2,
                "ZwEnumerateBootEntries": 2,
                "ZwEnumerateDriverEntries": 2,
                "ZwEnumerateKey": 2,
                "ZwEnumerateValueKey": 2,
                "ZwFlushInstructionCache": 2,
                "ZwFlushKey": 2,
                "ZwFlushVirtualMemory": 2,
                "ZwFreeVirtualMemory": 2,
                "ZwFsControlFile": 2,
                "ZwInitiatePowerAction": 2,
                "ZwIsProcessInJob": 2,
                "ZwLoadDriver": 2,
                "ZwLoadKey": 2,
                "ZwMakeTemporaryObject": 2,
                "ZwMapViewOfSection": 2,
                "ZwModifyBootEntry": 2,
                "ZwModifyDriverEntry": 2,
                "ZwNotifyChangeKey": 2,
                "ZwOpenDirectoryObject": 2,
                "ZwOpenEvent": 2,
                "ZwOpenFile": 2,
                "ZwOpenJobObject": 2,
                "ZwOpenKey": 2,
                "ZwOpenProcess": 2,
                "ZwOpenProcessToken": 2,
                "ZwOpenProcessTokenEx": 2,
                "ZwOpenSection": 2,
                "ZwOpenSymbolicLinkObject": 2,
                "ZwOpenThread": 2,
                "ZwOpenThreadToken": 2,
                "ZwOpenThreadTokenEx": 2,
                "ZwOpenTimer": 2,
                "ZwPowerInformation": 2,
                "ZwPulseEvent": 2,
                "ZwQueryBootEntryOrder": 2,
                "ZwQueryBootOptions": 2,
                "ZwQueryDefaultLocale": 2,
                "ZwQueryDefaultUILanguage": 2,
                "ZwQueryDirectoryFile": 2,
                "ZwQueryDirectoryObject": 2,
                "ZwQueryDriverEntryOrder": 2,
                "ZwQueryEaFile": 2,
                "ZwQueryFullAttributesFile": 2,
                "ZwQueryInformationAtom": 2,
                "ZwQueryInformationFile": 2,
                "ZwQueryInformationJobObject": 2,
                "ZwQueryInformationProcess": 2,
                "ZwQueryInformationThread": 2,
                "ZwQueryInformationToken": 2,
                "ZwQueryInstallUILanguage": 2,
                "ZwQueryKey": 2,
                "ZwQueryObject": 2,
                "ZwQuerySection": 2,
                "ZwQuerySecurityObject": 2,
                "ZwQuerySymbolicLinkObject": 2,
                "ZwQuerySystemInformation": 2,
                "ZwQueryValueKey": 2,
                "ZwQueryVolumeInformationFile": 2,
                "ZwReadFile": 2,
                "ZwReplaceKey": 2,
                "ZwRequestWaitReplyPort": 2,
                "ZwResetEvent": 2,
                "ZwRestoreKey": 2,
                "ZwSaveKey": 2,
                "ZwSaveKeyEx": 2,
                "ZwSecureConnectPort": 2,
                "ZwSetBootEntryOrder": 2,
                "ZwSetBootOptions": 2,
                "ZwSetDefaultLocale": 2,
                "ZwSetDefaultUILanguage": 2,
                "ZwSetDriverEntryOrder": 2,
                "ZwSetEaFile": 2,
                "ZwSetEvent": 2,
                "ZwSetInformationFile": 2,
                "ZwSetInformationJobObject": 2,
                "ZwSetInformationObject": 2,
                "ZwSetInformationProcess": 2,
                "ZwSetInformationThread": 2,
                "ZwSetSecurityObject": 2,
                "ZwSetSystemInformation": 2,
                "ZwSetSystemTime": 2,
                "ZwSetTimer": 2,
                "ZwSetValueKey": 2,
                "ZwSetVolumeInformationFile": 2,
                "ZwTerminateJobObject": 2,
                "ZwTerminateProcess": 2,
                "ZwTranslateFilePath": 2,
                "ZwUnloadDriver": 2,
                "ZwUnloadKey": 2,
                "ZwUnmapViewOfSection": 2,
                "ZwWaitForMultipleObjects": 2,
                "ZwWaitForSingleObject": 2,
                "ZwWriteFile": 2,
                "ZwYieldExecution": 2,
                "_abnormal_termination": 2,
                "_alldiv": 2,
                "_alldvrm": 2,
                "_allmul": 2,
                "_alloca_probe": 2,
                "_allrem": 2,
                "_allshl": 2,
                "_allshr": 2,
                "_aulldiv": 2,
                "_aulldvrm": 2,
                "_aullrem": 2,
                "_aullshr": 2,
                "_except_handler2": 2,
                "_except_handler3": 2,
                "_global_unwind2": 2,
                "_itoa": 2,
                "_itow": 2,
                "_local_unwind2": 2,
                "_purecall": 2,
                "_snprintf": 2,
                "_snwprintf": 2,
                "_stricmp": 2,
                "_strlwr": 2,
                "_strnicmp": 2,
                "_strnset": 2,
                "_strrev": 2,
                "_strset": 2,
                "_strupr": 2,
                "_vsnprintf": 2,
                "_vsnwprintf": 2,
                "_wcsicmp": 2,
                "_wcslwr": 2,
                "_wcsnicmp": 2,
                "_wcsnset": 2,
                "_wcsrev": 2,
                "_wcsupr": 2,
                "isdigit": 2,
                "islower": 2,
                "isprint": 2,
                "isspace": 2,
                "isupper": 2,
                "isxdigit": 2,
                "mbstowcs": 2,
                "mbtowc": 2,
                "memchr": 2,
                "memcpy": 2,
                "memmove": 2,
                "memset": 2,
                "qsort": 2,
                "sprintf": 2,
                "srand": 2,
                "strcat": 2,
                "strchr": 2,
                "strcmp": 2,
                "strcpy": 2,
                "strlen": 2,
                "strncat": 2,
                "strncmp": 2,
                "strncpy": 2,
                "strrchr": 2,
                "strspn": 2,
                "strstr": 2,
                "swprintf": 2,
                "tolower": 2,
                "toupper": 2,
                "towlower": 2,
                "towupper": 2,
                "vDbgPrintEx": 2,
                "vDbgPrintExWithPrefix": 2,
                "vsprintf": 2,
                "wcscat": 2,
                "wcschr": 2,
                "wcscmp": 2,
                "wcscpy": 2,
                "wcscspn": 2,
                "wcslen": 2,
                "wcsncat": 2,
                "wcsncmp": 2,
                "wcsncpy": 2,
                "wcsrchr": 2,
                "wcsspn": 2,
                "wcsstr": 2,
                "wcstombs": 2,
                "wctomb": 2,
                "VidBitBlt": 2,
                "VidBufferToScreenBlt": 2,
                "VidCleanUp": 2,
                "VidDisplayString": 2,
                "VidInitialize": 2,
                "VidResetDisplay": 2,
                "VidScreenToBufferBlt": 2,
                "VidSetScrollRegion": 2,
                "VidSetTextColor": 2,
                "VidSolidColorFill": 2,
                "HalAdjustResourceList": 2,
                "HalAllProcessorsStarted": 2,
                "HalAllocateAdapterChannel": 2,
                "HalBeginSystemInterrupt": 2,
                "HalClearSoftwareInterrupt": 2,
                "HalDisableSystemInterrupt": 2,
                "HalDisplayString": 2,
                "HalEnableSystemInterrupt": 2,
                "HalEndSystemInterrupt": 2,
                "HalGetEnvironmentVariable": 2,
                "HalGetInterruptVector": 2,
                "HalHandleNMI": 2,
                "HalInitSystem": 2,
                "HalInitializeProcessor": 2,
                "HalProcessorIdle": 2,
                "HalQueryRealTimeClock": 2,
                "HalReportResourceUsage": 2,
                "HalRequestSoftwareInterrupt": 2,
                "HalReturnToFirmware": 2,
                "HalSetEnvironmentVariable": 2,
                "HalSetProfileInterval": 2,
                "HalSetRealTimeClock": 2,
                "HalSetTimeIncrement": 2,
                "HalStartProfileInterrupt": 2,
                "HalStopProfileInterrupt": 2,
                "HalSystemVectorDispatchEntry": 2,
                "HalTranslateBusAddress": 2,
                "KdComPortInUse": 1,
                "KeAcquireInStackQueuedSpinLock": 2,
                "KeAcquireInStackQueuedSpinLockRaiseToSynch": 2,
                "KeAcquireQueuedSpinLock": 2,
                "KeAcquireQueuedSpinLockRaiseToSynch": 2,
                "KeAcquireSpinLockRaiseToSynch": 2,
                "KeFlushWriteBuffer": 2,
                "KeGetCurrentIrql": 2,
                "KeQueryPerformanceCounter": 2,
                "KeRaiseIrqlToDpcLevel": 2,
                "KeRaiseIrqlToSynchLevel": 2,
                "KeReleaseInStackQueuedSpinLock": 2,
                "KeReleaseQueuedSpinLock": 2,
                "KeStallExecutionProcessor": 2,
                "KfAcquireSpinLock": 2,
                "KfLowerIrql": 2,
                "KfRaiseIrql": 2,
                "KfReleaseSpinLock": 2,
                "READ_PORT_UCHAR": 2,
                "WRITE_PORT_UCHAR": 2,
                "bootvid.dll": 1,
                "hal.dll": 1,
                "3f32#4": 1,
                "c1#2!": 3,
                "wgfSC": 1,
                "#36fh": 3,
                "vwguw": 3,
                "WUuWwx": 1,
                "wgwvwgwvw": 1,
                "TUEUE": 3,
                "DTDEDED": 1,
                "UWUWU": 1,
                "WUuwW": 3,
                "TUuwx": 3,
                "WUWUwx": 3,
                "3236i": 3,
                "\"3cfh": 3,
                "ff33!": 2,
                "hhffc3!": 2,
                "3f32#4SS331": 2,
                "wgfSC33i": 2,
                "wgvvwvSi": 2,
                "xwwgg": 2,
                "66ffx": 2,
                "3ffhy": 2,
                "#6ffh": 2,
                "c8hww": 2,
                "xwwvuwwx": 2,
                "NggVWWUwx": 2,
                "*vuvuuWUuWwx": 2,
                "wWWwg": 2,
                "4vuueeUUWWx": 2,
                "wggwgwvwgwvw": 2,
                "uWWUWWU": 2,
                "vvwggvw": 2,
                "WWUUuUWWU": 2,
                "gWWfuuv": 2,
                "uUuUUWWUe": 2,
                "euefVVUe": 2,
                "uWUUWW": 2,
                "uuWUu": 2,
                "wuUUuWUu": 2,
                "DTDEDEDTT": 2,
                "wWuuUWUWUuuUuu": 2,
                "UUWWx": 2,
                "uuUuUUEDDT": 2,
                "TUUuwx": 2,
                "TEDDE": 2,
                "EEUUww": 2,
                "wuuWUUT": 2,
                "TEUWWx": 2,
                "wwWUUT": 2,
                "TUUWWw": 2,
                "wwuuUU": 2,
                "UUeuw": 2,
                "wwuVUE": 2,
                "wwWwx": 2,
                "%WWwwx": 2,
                "wwuuUT": 2,
                "EEUUV": 2,
                "wwuww": 2,
                "wuuUTT": 2,
                "wwVUT": 2,
                "wuUUTT": 2,
                "uuWUww": 2,
                "wWUuuwwx": 2,
                "4CDDT": 2,
                "uUuUuu": 2,
                "4D4DDEE": 2,
                "WUUWUuww": 2,
                "wuuTT": 2,
                "wWUTT": 2,
                "wuUUE": 2,
                "wWUUE": 2,
                "wwUUTT": 2,
                "uuUUE": 2,
                "ETTDDED": 2,
                "$UUTTU": 2,
                "3ffc1": 2,
                "\"uwwd ": 2,
                "ff33\"": 2,
                "f6633ccff": 2,
                "ffc63c66f": 2,
                "#336i": 2,
                "fc3#33": 2,
                "33236f": 2,
                "ffc332##3": 2,
                "#22#33": 2,
                "fc331": 2,
                "336fi": 2,
                "c3#33": 2,
                "33#3fi": 2,
                "ff33#33!": 2,
                "3##33ff": 2,
                "\"\"\"\"\"\"\"\"\"\"\"\"\"22\"\"\"22223333333333333CCD44DDDDDDDDdFDDFDdddfFFFffdffffffffffff": 1,
                "hhhffffffffffffffffffFfFFFFFDDDDDDDDDDDDDDDDDDDD333333333333333222\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"333333333333444444DD444DDDDDDDDDDDDFFFFFFFFffdfFffffffffff": 1,
                "hffffffffffdfFffddddddddDDDDDDDDDDDDCCCDDCCCCCC333333333333\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"###333333333333333DDDDDDDDDDDDDDDDDDDDdddddfdffffffffffffffffff": 1,
                "hffffffffffffFffdddfFFFDdDDdFDDDDDDDDCCD443333333333333####\"\"\"##\"\"\"\"\"\"\"\"\"(": 1,
                "vwgwggHf": 1,
                "p\"\" }": 1,
                "xwxwxw": 1,
                "wxwxwxw": 1,
                "vfgfw": 1,
                "wgwgvwgvwgw": 1,
                "The bug code is undefined. Please use an existing code instead.": 1,
                "APC_INDEX_MISMATCH": 1,
                "DEVICE_QUEUE_NOT_BUSY": 1,
                "INVALID_AFFINITY_SET": 1,
                "INVALID_DATA_ACCESS_TRAP": 1,
                "INVALID_PROCESS_ATTACH_ATTEMPT": 1,
                "INVALID_PROCESS_DETACH_ATTEMPT": 1,
                "INVALID_SOFTWARE_INTERRUPT": 1,
                "IRQL_NOT_DISPATCH_LEVEL": 1,
                "IRQL_NOT_GREATER_OR_EQUAL": 1,
                "IRQL_NOT_LESS_OR_EQUAL": 1,
                "NO_EXCEPTION_HANDLING_SUPPORT": 1,
                "MAXIMUM_WAIT_OBJECTS_EXCEEDED": 1,
                "MUTEX_LEVEL_NUMBER_VIOLATION": 1,
                "NO_USER_MODE_CONTEXT": 1,
                "SPIN_LOCK_ALREADY_OWNED": 1,
                "SPIN_LOCK_NOT_OWNED": 1,
                "THREAD_NOT_MUTEX_OWNER": 1,
                "TRAP_CAUSE_UNKNOWN": 1,
                "EMPTY_THREAD_REAPER_LIST": 1,
                "The thread reaper was handed a thread to reap, but the thread's process'": 1,
                "LAST_CHANCE_CALLED_FROM_KMODE": 1,
                "CID_HANDLE_CREATION": 1,
                "CID_HANDLE_DELETION": 1,
                "REFERENCE_BY_POINTER": 1,
                "BAD_POOL_HEADER": 1,
                "MEMORY_MANAGEMENT": 1,
                "PFN_SHARE_COUNT": 1,
                "PFN_REFERENCE_COUNT": 1,
                "NO_SPINLOCK_AVAILABLE": 1,
                "Check to be sure you have adequate disk space. If a driver is": 1,
                "identified in the Stop message, disable the driver or check": 1,
                "with the manufacturer for driver updates. Try changing video": 1,
                "adapters.": 1,
                "Check with your hardware vendor for any BIOS updates. Disable": 2,
                "BIOS memory options such as caching or shadowing. If you need": 2,
                "to use Safe Mode to remove or disable components, restart your": 2,
                "computer, press F8 to select Advanced Startup Options, and then": 2,
                "select Safe Mode.": 3,
                "SHARED_RESOURCE_CONV_ERROR": 1,
                "KERNEL_APC_PENDING_DURING_EXIT": 1,
                "QUOTA_UNDERFLOW": 1,
                "FILE_SYSTEM": 1,
                "Disable or uninstall any anti-virus, disk defragmentation": 1,
                "or backup utilities. Check your hard drive configuration,": 1,
                "and check for any updated drivers. Run CHKDSK /F to check": 1,
                "for hard drive corruption, and then restart your computer.": 1,
                "NTFS_FILE_SYSTEM": 1,
                "NPFS_FILE_SYSTEM": 1,
                "CDFS_FILE_SYSTEM": 1,
                "RDR_FILE_SYSTEM": 1,
                "CORRUPT_ACCESS_TOKEN": 1,
                "SECURITY_SYSTEM": 1,
                "INCONSISTENT_IRP": 1,
                "PANIC_STACK_SWITCH": 1,
                "PORT_DRIVER_INTERNAL": 1,
                "SCSI_DISK_DRIVER_INTERNAL": 1,
                "Run system diagnostics supplied by your hardware manufacturer.": 1,
                "In particular, run a memory check, and check for faulty or": 1,
                "mismatched memory. Try changing video adapters.": 1,
                "INSTRUCTION_BUS_ERROR": 1,
                "SET_OF_INVALID_CONTEXT": 1,
                "PHASE0_INITIALIZATION_FAILED": 1,
                "PHASE1_INITIALIZATION_FAILED": 1,
                "UNEXPECTED_INITIALIZATION_CALL": 1,
                "CACHE_MANAGER": 1,
                "NO_MORE_IRP_STACK_LOCATIONS": 1,
                "DEVICE_REFERENCE_COUNT_NOT_ZERO": 1,
                "FLOPPY_INTERNAL_ERROR": 1,
                "SERIAL_DRIVER_INTERNAL": 1,
                "SYSTEM_EXIT_OWNED_MUTEX": 1,
                "MULTIPROCESSOR_CONFIGURATION_NOT_SUPPORTED": 1,
                "Remove any recently installed software including backup": 1,
                "utilities or disk-intensive applications.": 1,
                "If you need to use Safe Mode to remove or disable components,": 2,
                "restart your computer, press F8 to select Advanced Startup": 1,
                "Options, and then select Safe Mode.": 1,
                "TARGET_MDL_TOO_SMALL": 1,
                "MUST_SUCCEED_POOL_EMPTY": 1,
                "ATDISK_DRIVER_INTERNAL": 1,
                "MULTIPLE_IRP_COMPLETE_REQUESTS": 1,
                "INSUFFICIENT_SYSTEM_MAP_REGS": 1,
                "CANCEL_STATE_IN_COMPLETED_IRP": 1,
                "PAGE_FAULT_WITH_INTERRUPTS_OFF": 1,
                "IRQL_GT_ZERO_AT_SYSTEM_SERVICE": 1,
                "STREAMS_INTERNAL_ERROR": 1,
                "FATAL_UNHANDLED_HARD_ERROR": 1,
                "NO_PAGES_AVAILABLE": 1,
                "PFN_LIST_CORRUPT": 1,
                "NDIS_INTERNAL_ERROR": 1,
                "PAGE_FAULT_IN_NONPAGED_AREA": 1,
                "REGISTRY_ERROR": 1,
                "MAILSLOT_FILE_SYSTEM": 1,
                "NO_BOOT_DEVICE": 1,
                "LM_SERVER_INTERNAL_ERROR": 1,
                "DATA_COHERENCY_EXCEPTION": 1,
                "INSTRUCTION_COHERENCY_EXCEPTION": 1,
                "XNS_INTERNAL_ERROR": 1,
                "FTDISK_INTERNAL_ERROR": 1,
                "PINBALL_FILE_SYSTEM": 1,
                "CRITICAL_SERVICE_FAILED": 1,
                "SET_ENV_VAR_FAILED": 1,
                "HAL_INITIALIZATION_FAILED": 1,
                "UNSUPPORTED_PROCESSOR": 1,
                "OBJECT_INITIALIZATION_FAILED": 1,
                "SECURITY_INITIALIZATION_FAILED": 1,
                "PROCESS_INITIALIZATION_FAILED": 1,
                "HAL1_INITIALIZATION_FAILED": 1,
                "OBJECT1_INITIALIZATION_FAILED": 1,
                "SECURITY1_INITIALIZATION_FAILED": 1,
                "SYMBOLIC_INITIALIZATION_FAILED": 1,
                "MEMORY1_INITIALIZATION_FAILED": 1,
                "CACHE_INITIALIZATION_FAILED": 1,
                "CONFIG_INITIALIZATION_FAILED": 1,
                "FILE_INITIALIZATION_FAILED": 1,
                "IO1_INITIALIZATION_FAILED": 1,
                "LPC_INITIALIZATION_FAILED": 1,
                "PROCESS1_INITIALIZATION_FAILED": 1,
                "REFMON_INITIALIZATION_FAILED": 1,
                "SESSION1_INITIALIZATION_FAILED": 1,
                "SESSION2_INITIALIZATION_FAILED": 1,
                "SESSION3_INITIALIZATION_FAILED": 1,
                "SESSION4_INITIALIZATION_FAILED": 1,
                "SESSION5_INITIALIZATION_FAILED": 1,
                "ASSIGN_DRIVE_LETTERS_FAILED": 1,
                "CONFIG_LIST_FAILED": 1,
                "BAD_SYSTEM_CONFIG_INFO": 1,
                "CANNOT_WRITE_CONFIGURATION": 1,
                "PROCESS_HAS_LOCKED_PAGES": 1,
                "KERNEL_STACK_INPAGE_ERROR": 1,
                "PHASE0_EXCEPTION": 1,
                "Mismatched Kernel and HAL image": 1,
                "KERNEL_DATA_INPAGE_ERROR": 1,
                "Check for viruses on your computer. Remove any newly installed": 1,
                "hard drives or hard drive controllers. Check your hard drive": 1,
                "to make sure it is properly configured and terminated.": 1,
                "Run CHKDSK /F to check for hard drive corruption, and then": 1,
                "restart your computer.": 1,
                "INSTALL_MORE_MEMORY": 1,
                "SYSTEM_THREAD_EXCEPTION_NOT_HANDLED": 1,
                "Run a system diagnostic utility supplied by your hardware manufacturer.": 1,
                "In particular, run a memory check, and check for faulty or mismatched": 1,
                "memory. Try changing video adapters.": 1,
                "Disable or remove any newly installed hardware and drivers. Disable or": 1,
                "remove any newly installed software. If you need to use Safe Mode to": 1,
                "remove or disable components, restart your computer, press F8 to select": 1,
                "Advanced Startup Options, and then select Safe Mode.": 1,
                "Hardware malfunction": 1,
                "SPIN_LOCK_INIT_FAILURE": 1,
                "KERNEL_MODE_EXCEPTION_NOT_HANDLED": 1,
                "PP0_INITIALIZATION_FAILED": 1,
                "PP1_INITIALIZATION_FAILED": 1,
                "INVALID_KERNEL_HANDLE": 1,
                "KERNEL_STACK_LOCKED_AT_EXIT": 1,
                "INVALID_WORK_QUEUE_ITEM": 1,
                "INTERNAL_POWER_ERROR": 1,
                "Inconsistency detected in the PCI Bus driver's internal structures.": 1,
                "The BIOS in this system is not fully ACPI compliant.  Please contact your": 1,
                "system vendor for an updated BIOS.": 1,
                "Allocate from NonPaged Pool failed for a HAL critical allocation.": 1,
                "The video driver failed to initialize": 1,
                "A wait operation, attach process, or yield was attempted from a DPC routine.": 1,
                "An attempt was made to write to read-only memory.": 1,
                "SPECIAL_POOL_DETECTED_MEMORY_CORRUPTION": 1,
                "BAD_POOL_CALLER": 1,
                "A system file that is owned by ReactOS was replaced by an application": 1,
                "running on your system.  The operating system detected this and tried to": 1,
                "verify the validity of the file's signature.  The operating system found that": 1,
                "the file signature is not valid and put the original, correct file back": 1,
                "so that your operating system will continue to function properly.": 1,
                "A device driver has pool.": 1,
                "Check to make sure any new hardware or software is properly installed.": 2,
                "If this is a new installation, ask your hardware or software manufacturer": 2,
                "for any ReactOS updates you might need.": 2,
                "Run the driver verifier against any new (or suspect) drivers.": 1,
                "If that doesn't reveal the corrupting driver, try enabling special pool.": 1,
                "Both of these features are intended to catch the corruption at an earlier": 1,
                "point where the offending driver can be identified.": 1,
                "restart your computer, press F8 to select Advanced Startup Options,": 1,
                "and then select Safe Mode.": 1,
                "A device driver attempting to corrupt the system has been caught.": 1,
                "The faulty driver currently on the kernel stack must be replaced": 1,
                "with a working version.": 1,
                "The processor's IRQL is not valid for the currently executing context.": 1,
                "This is a software error condition and is usually caused by a device": 1,
                "driver changing IRQL and not restoring it to its previous value when": 1,
                "it has finished its task.": 1,
                "Plug and Play detected an error most likely caused by a faulty driver.": 1,
                "DRIVER_LEFT_LOCKED_PAGES_IN_PROCESS": 1,
                "DRIVER_UNLOADED_WITHOUT_CANCELLING_PENDING_OPERATIONS": 1,
                "DRIVER_CORRUPTED_MMPOOL": 1,
                "DRIVER_IRQL_NOT_LESS_OR_EQUAL": 1,
                "The driver mistakenly marked a part of its image pageable instead of non-pageable.": 1,
                "The driver unloaded without cancelling pending operations.": 1,
                "The driver is attempting to unmap an invalid memory address.": 1,
                "The driver has used an excessive number of system PTEs.": 1,
                "Your computer (BIOS) has reported that a component in your system is faulty and": 1,
                "has prevented ReactOS from operating.  You can determine which component is": 1,
                "faulty by running the diagnostic disk or tool that came with your computer.": 1,
                "If you do not have this tool, you must contact your system vendor and report": 1,
                "this error message to them.  They will be able to assist you in correcting this": 1,
                "hardware problem thereby allowing ReactOS to operate.": 1,
                "WORKER_THREAD_RETURNED_AT_BAD_IRQL": 1,
                "MANUALLY_INITIATED_CRASH": 1,
                "RESOURCE_NOT_OWNED": 1,
                "If Parameter1 == 0, an executive worker item was found in memory which": 1,
                "must not contain such items.  Usually this is memory being freed.  This": 1,
                "is usually caused by a device driver that has not cleaned up properly": 1,
                "before freeing memory.": 1,
                "If Parameter1 == 1, an attempt was made to queue an executive worker item": 1,
                "with a usermode execution routine.": 1,
                "POWER_FAILURE_SIMULATE": 1,
                "Invalid cancel of a open file. It already has handle.": 1,
                "An executive worker thread is being terminated without having gone through the worker thread rundown code.": 1,
                "Work items queued to the Ex worker queue must not terminate their threads.": 1,
                "A stack trace should indicate the culprit.": 1,
                "The device driver got stuck in an infinite loop. This usually indicates": 1,
                "problem with the device itself or with the device driver programming the": 1,
                "hardware incorrectly.": 1,
                "Please check with your hardware device vendor for any driver updates.": 1,
                "The kernel attempted to ready a thread that was in an incorrect state such as terminated.": 1,
                "A process or thread crucial to system operation has unexpectedly exited or been terminated.": 1,
                "The PCI driver has detected an error in a PCI device or BIOS being verified.": 1,
                "An initialization failure occurred while attempting to boot from the RAM disk.": 1,
                "A worker thread is impersonating another process. The work item forgot to": 1,
                "disable impersonation before it returned.": 1,
                "An attempt was made to execute to non-executable memory.": 1,
                "ReactOS (R) Kernel Version %hs (Build %u%hs)": 1,
                "Service Pack": 1,
                "A kernel thread terminated while holding a mutex": 1,
                "%u System Processors [%u MB Memory] %Z": 1,
                "\\n\\nReactOS is free software, covered by the GNU General Public License,": 1,
                " and you\\n are welcome to change it and/or distribute copies of it under": 1,
                " certain\\n conditions. There is absolutely no warranty for ReactOS.\\n": 1,
                "The system is booting in safemode - Minimal Services": 1,
                "The system is booting in safemode - Minimal Services with Network": 1,
                "The system is booting in safemode - Directory Services Repair": 1,
                "Boot Logging Enabled": 1,
                "A problem has been detected and ReactOS has been shut down to prevent damage": 1,
                "to your computer.": 1,
                "The problem seems to be caused by the following file:": 1,
                "If this is the first time you've seen this Stop error screen,": 1,
                "restart your computer. If this screen appears again, follow": 1,
                "these steps:": 1,
                "If problems continue, disable or remove any newly installed hardware": 1,
                "or software. Disable BIOS memory options such as caching or shadowing.": 1,
                "If you need to use Safe Mode to remove or disable components, restart": 1,
                "your computer, press F8 to select Advanced Startup Options, and then": 1,
                "Technical information:": 1,
                "0B0J0Q0u0}0": 1,
                "1-151<1Z1|1": 1,
                "6 6'6": 1,
                "7'8/868": 1,
                ";D;7=?=F=e=m=t=": 1,
                "152<2b2i2": 1,
                "2$3@3G3X3r3y3": 1,
                "4!464C4Q4[4g4": 1,
                "5&5-5j5p5": 1,
                "6-6J6Q6r6{6": 1,
                "7r7y7": 1,
                "8H9P9W9": 1,
                ":[:b:": 2,
                "<X=`=g=o=y=": 1,
                "=v>~>": 1,
                ">N?V?]?e?o?{?": 1,
                "%0\\0c0": 1,
                "1#1)121;1D1": 1,
                "1!2=2D2U2o2v2": 1,
                "333@3N3X3n3": 1,
                "4C4_4f4": 1,
                "5$5E5N5e5": 1,
                "6#6*626<6F6": 1,
                "7&70797@7J7P7l7s7": 1,
                "8*818R8[8r8": 1,
                "8#9>9Z9a9": 1,
                ":4:;:": 1,
                ";4;;;t;{;": 1,
                "<\"<)<W<^<": 1,
                "<?=F=_=f=}=": 1,
                ">:>A>p>w>": 1,
                "?,?2?N?U?o?": 1,
                "040=0T0p0w0": 1,
                "151<1": 1,
                "2<2C2r2y2": 2,
                "393S3Z3u3": 1,
                "4:4A4o4v4": 2,
                "4/565e5l5": 1,
                "6H6O6~6": 1,
                "8#8=8W8^8y8": 1,
                "9(9D9K9y9": 1,
                ":4:;:I:c:j:": 1,
                ";';4;?;I;S;};": 1,
                "<*<1<L<j<q<": 1,
                "=F=M=t={=": 2,
                "?*?1?_?f?": 1,
                "0#0<0S0n0": 1,
                "1%131D1a1h1": 1,
                "2(2/2`2": 1,
                "3'3.3H3d3k3": 1,
                "4_4s4y4": 1,
                "5%565V5]5": 1,
                "5 6'6": 1,
                "777>7L7]7z7": 1,
                "8A8H8": 1,
                "9%9?9F9`9|9": 1,
                ":%:3:D:K:U:[:h:": 1,
                ";$;B;I;W;h;": 1,
                ";$<+<R<Y<": 1,
                "=-=4=B=\\=c=}=": 1,
                "> >->8>B>P>": 1,
                "? ?:?A?\\?z?": 1,
                "0'0.0\\0c0": 1,
                "0!1(1": 1,
                "2%2,2Z2a2": 1,
                "3#3=3W3^3y3": 1,
                "4\"4>4E4s4z4": 1,
                "40575": 1,
                "6&6@6G6a6}6": 1,
                "7&7@7G7R7X7t7{7": 1,
                "82898Z8c8z8": 1,
                "9I:P:i:p:{:": 1,
                ";\";P;W;": 1,
                "<%<Y<`<": 1,
                "<+=G=N=|=": 1,
                ">D>w>~>": 1,
                "?M?T?i?v?": 1,
                "010K0R0m0": 1,
                "181?1m1t1": 1,
                "21282I2c2j2": 1,
                "3'343B3L3X3d3": 1,
                "3.444@4\\4c4}4": 1,
                "5!5B5K5b5~5": 1,
                "7*818`8g8|8": 1,
                "9)909K9i9p9~9": 1,
                ":E:L:s:z:": 1,
                ";8;?;Y;s;z;": 1,
                "<'<><Z<a<": 1,
                "<$=@=G=U=o=v=": 1,
                ">3>@>K>U>": 1,
                "?Q?W?s?z?": 1,
                "01080Y0b0y0": 1,
                "0W1_1f1n1x1": 1,
                "2#2*2X2_2": 1,
                "3&3@3G3a3}3": 1,
                "4&4K4R4~4": 1,
                "5/565Q5o5v5": 1,
                "6K6R6y6": 1,
                "747P7W7": 1,
                "7%8A8H8b8|8": 1,
                "9'909G9c9j9": 1,
                ":5:<:J:d:k:": 1,
                ";(;5;@;J;l;s;": 1,
                "<(<F<M<[<l<": 1,
                "<\"=)=P=W=": 1,
                ">,>3>a>h>": 1,
                "> ?<?C?]?w?~?": 1,
                "0\"0+0B0^0e0": 1,
                "161=1K1e1l1": 1,
                "2)262A2K2i2p2": 1,
                "373U3\\3j3{3": 2,
                "41484_4f4": 2,
                "5'5C5J5x5": 1,
                "6$6-666I6e6l6": 1,
                "7#7*7K7T7k7": 1,
                "9/969P9j9q9": 1,
                ":5:Q:X:": 1,
                ":-;1;7;;;A;E;K;O;U;Y;_;c;i;m;s;w;};": 1,
                "<T<d<": 1,
                "=B=I=o=v=": 1,
                "?+?2?O?V?": 1,
                "050<0m0t0": 1,
                "1&1~1": 1,
                "6:6A6": 1,
                "7#7=7Y7`7": 1,
                "8;8B8v8}8": 1,
                "9B9^9e9": 1,
                ";!;(;V;];": 1,
                ";$<Y<y<": 1,
                "=P=W=": 1,
                ">8>?>m>t>": 1,
                ">7?`?|?": 1,
                "0$0S0Z0": 1,
                "1!1Z1a1": 1,
                "2=2D2k2r2": 1,
                "3'3p3w3": 1,
                "334S4": 1,
                "5B5I5": 1,
                "5%6,6S6Z6": 1,
                "677U7\\7": 1,
                "82898": 1,
                "9?9S9o9v9": 1,
                "99:@:": 1,
                ";)<1<L<p<": 1,
                "=*>1>r?": 1,
                "2!3=3D3o3v3": 1,
                "5[5b5": 1,
                "5#6*6_6": 1,
                "8#8?8F8t8{8": 1,
                "9f9z9": 1,
                ":W:^:": 1,
                ":\";);l;": 1,
                ";L<g<": 1,
                ">;>C>Q>h>": 1,
                ">\\?t?": 1,
                "4E5a5h5": 1,
                "686?6": 1,
                "767=7v7}7": 1,
                "8$8+8Y8`8": 1,
                "91989r9y9": 1,
                ":V:r:y:": 1,
                ";V<r<y<": 1,
                "= =O=V=": 1,
                ">2>9>R>Y>}>": 1,
                "?Z?a?": 2,
                "1?1F1f1m1,2H2O2w2~2": 1,
                "4#4:4`4g4": 1,
                "5>5E5": 1,
                "5\"6>6E6s6z6": 1,
                "8G8c8j8": 1,
                "9@9G9": 1,
                ":M:T:": 2,
                ";0;7;^;e;": 1,
                "<*<1<N<U<m<~<": 1,
                ">4>;>": 1,
                "(0/0L0S0": 1,
                "1$1`1g1": 1,
                "6H6O6": 2,
                "6J7Q7": 1,
                "8e8l8": 1,
                "9<9h9": 1,
                ";/;e;": 1,
                "=*=1=I=": 1,
                "=#>*>[>}>": 1,
                "?\"?+?": 1,
                "0+0R0Y0": 1,
                "0.151N1U1`1|1": 1,
                "242P2W2e2o2|2": 1,
                "333C3": 1,
                "4$4R4Y4": 1,
                "5M5T5": 1,
                "5%6A6H6v6}6": 1,
                "7!7d7": 1,
                "7,838r8y8": 1,
                "9=9D9": 2,
                ":!:(:W:s:z:": 1,
                ";];y;": 1,
                "<M<v<": 1,
                "=)=k=": 1,
                "?:?P?W?p?w?": 1,
                "0!0+040?0C0I0M0a0k0y0": 1,
                "1C1_1f1t1": 1,
                "262=2R2_2j2t2": 1,
                "3/363~3": 1,
                "4*4;4X4_4": 1,
                "5&5q5{5": 1,
                "6&6@6\\6c6": 1,
                "7$7N7U7~7": 1,
                "8*818?8P8p8w8": 1,
                "9:9A9": 1,
                "9':1:?:\\:c:}:": 1,
                ";:;A;p;w;": 1,
                "<4<;<U<o<v<": 1,
                "< =)=@=\\=c=": 1,
                "=/>5>@>Y>v>}>": 1,
                "?4?;?\\?e?|?": 1,
                "0N0X0f0": 1,
                "1,131a1h1": 2,
                "2a2}2": 1,
                "3;3B3c3l3": 1,
                "4J4T4b4": 1,
                "6#6>6E6S6[6z6": 1,
                "7\"7;7B7k7": 1,
                "778>8": 1,
                "8C9J9": 1,
                "=>>E>": 1,
                "4H4~4": 1,
                "5R5Y5": 1,
                "5(6/6b6j6": 1,
                "7G7u7|7": 1,
                "8\"8a8m8": 1,
                ";\";k;r;": 1,
                ";$<+<T<[<'=-=": 1,
                "=<>H>": 1,
                "0R1Y1v2}2": 1,
                "4o4v4": 1,
                "4:5A5p5": 1,
                "6f6p6~6": 1,
                "6#7*7X7_7z7": 1,
                "8 9'9i9u9": 1,
                "9A:H:": 1,
                ":>;J;|;": 1,
                ";?<K<n<u<": 1,
                "> >6>": 1,
                ">-?4?": 1,
                "$0,0e0l0": 1,
                "0M1T1": 1,
                "2&2-2": 1,
                "2S3_3": 1,
                "3+424": 1,
                "4(545^5e5": 1,
                "5l6x6": 1,
                "6D7K7": 1,
                "7A8M8{8": 1,
                "9Q:X:": 1,
                ";N;Z;p;": 1,
                "<2=:=p=w=": 1,
                ">n>x>": 1,
                ">9?@?r?y?": 1,
                "0;0B0k0r0": 1,
                "0S1Z1s1z1": 1,
                "3\"3)3[3": 1,
                "5U5\\5": 1,
                "7.757": 2,
                "8#8M8T8B9I9": 1,
                ":a:h:": 1,
                ";H;O;~;": 1,
                ";!<(<6<c<j<": 1,
                "=J=Q=": 1,
                ">&>M>T>": 2,
                "?]?d?": 1,
                "222;2V2]2v2}2": 1,
                "3E3l3": 1,
                "4_4f4v4": 1,
                "8U8\\8": 1,
                ":%;J;": 1,
                "<0=7=L=": 1,
                "?_?f?": 1,
                "0-141D1": 1,
                "2/464[4b4": 1,
                "455<5": 1,
                "9=9L9": 1,
                "?!?1?8?O?a?": 1,
                "Z0b0t0|0": 1,
                "1l2s2": 2,
                "3\"373O3": 1,
                "3T4[4": 2,
                "6_6x6": 1,
                "6 7:7k7": 1,
                "8'828B8J8T8\\8g8u8|8": 1,
                "90979V9r9y9": 1,
                ":I:P:e:r:}:": 1,
                ";+;I;P;^;o;": 1,
                ";*<1<X<_<": 1,
                "=(=D=K=y=": 1,
                ">(>/>I>c>j>": 1,
                "?.?J?Q?": 1,
                "0-0E0`0g0~0": 1,
                "1&101:1C1N1R1X1\\1b1f1l1v1": 1,
                "1>2Z2a2o2": 1,
                "31383M3Z3e3o3t3z3": 1,
                "4&4A4_4f4t4": 1,
                "5;5B5i5p5": 1,
                "646>6L6i6p6~6": 1,
                "7+7G7N7|7": 1,
                "8(84888R8Y8f8": 1,
                "9 919N9U9v9": 1,
                ":r:z:": 1,
                ";';A;H;b;~;": 1,
                "<'<-<3<9<L<T<": 1,
                "=8=?=Z=x=": 1,
                ">&>T>[>": 1,
                ">D?`?g?u?": 1,
                "070>0S0`0k0u0": 1,
                "141R1Y1g1x1": 1,
                "2.252\\2c2": 1,
                "393@3N3_3": 1,
                "4\"4I4P4": 1,
                "4>5Z5a5o5": 1,
                "61686M6Z6e6o6x6": 1,
                "7#7A7H7V7g7": 1,
                "8$8K8R8": 1,
                "9#9O9V9o9": 1,
                ":#:v:}:": 1,
                ";-;4;B;\\;c;};": 1,
                "< <-<8<B<G<P<Y<^<d<l<z<": 1,
                "=&=7=T=[=|=": 1,
                ">\">o>y>": 1,
                ">\"?)?B?\\?c?": 1,
                "060=0k0r0": 1,
                "1/1I1P1k1": 1,
                "262=2k2r2": 1,
                "3(3/3_3f3|3": 1,
                "4 4&4*404:4D4_4{4": 1,
                "5.575=5C5": 1,
                "5 6<6C6V6]6h6s6": 1,
                "7&7-7;7E7R7h7y7": 1,
                "8O8k8r8": 1,
                "9%929H9^9": 1,
                ":&:1:G:P:V:\\:": 1,
                ";2;N;U;h;o;z;": 1,
                "<+<N<j<q<": 1,
                "=#=9=J=": 1,
                "0r0y0": 1,
                "2 292@2": 1,
                "5_6f6": 1,
                "6=7D7": 1,
                "7<8C8": 1,
                "<O?V?": 1,
                "3i5p5": 1,
                "7e7l7": 2,
                ":g;n;\"<)<P<W<": 1,
                "<)=0=": 1,
                "=E>L>": 1,
                "N0X0f0": 1,
                "0T1[1": 1,
                "1U2\\2": 1,
                "4J4Q4": 1,
                "5%5H6O6h7o7": 1,
                "7I8P8": 1,
                "9Z9a94?<?D?L?T?\\?": 1,
                "R0_0j0": 1,
                "7(9N9": 1,
                "94:B:R:": 1,
                ":#;*;`;g;": 1,
                "<7<><p<q=v=": 1,
                "?F?M?": 1,
                "P0U0r0w0": 1,
                "0L1X1": 1,
                "1!2(2O2V2": 1,
                "3<3C3": 2,
                "4U4]4": 1,
                "5?5H5u5|5": 1,
                "5 6'6k6w6": 1,
                "697E7": 1,
                "80878E8u8": 1,
                "8G9O9": 1,
                "9?:K:": 1,
                ";F;R;": 1,
                "=n=u=": 1,
                ">\\>h>": 1,
                ">W?_?": 1,
                "0B0I0": 2,
                "1*1V1]1": 1,
                "464=4": 1,
                "4/565o5v5": 1,
                "6N7U7": 1,
                "7A8H8": 1,
                ":Z;c;": 1,
                ";-<4<~<": 1,
                "=P=\\=": 1,
                "='>Q>X>": 1,
                ">+?2?Z?a?": 1,
                "/0;0x0": 1,
                "1F1p1w1": 1,
                "2b2i2": 2,
                "4G5N5": 1,
                "7D8K8": 1,
                "9$9}9": 1,
                ":.:5:C:K:j:q:": 1,
                ";1;8;Q;X;m;": 1,
                "<7<@<^<h<v<": 1,
                "=1=8=F=Y=`=y=": 1,
                ">,>I>P>h>o>~>": 1,
                "?9?C?Q?n?u?": 1,
                ";0E0S0p0w0": 1,
                "=%=j=q=": 1,
                ">)?0?[?b?": 1,
                "n0u0K1R1i2=3R3Y3{3": 1,
                "4,636": 1,
                "8E8L8~8": 1,
                "8f9m9::A:": 1,
                "<#<9<I<P<": 1,
                "=:>A>.?5?": 1,
                "2_2i2w2": 1,
                "5I5P5": 1,
                "5C7J7": 1,
                "70878": 1,
                ":$:[:b:": 1,
                ":S;Z;~;": 1,
                ";\"<h<o<": 1,
                "=~>=?D?T?": 1,
                "2N3U3i3": 1,
                "6P7W7": 1,
                "8&848Q8X8": 2,
                "9?9F9": 1,
                "9F:O:T:j:{:": 1,
                "<6===D=K=R=e=": 1,
                "=C?M?[?x?": 1,
                "253E3": 1,
                "5*5h5z5": 1,
                "5'636": 1,
                "6m7t7": 1,
                "8(8W8a8o8": 1,
                "8!9f9t9": 1,
                "9F:a:h:": 1,
                ";+;2;b;i;": 1,
                "=\"=)=7=@=G=N=R=X=\\=b=l=w=": 1,
                ";0{0<1D1": 1,
                "4'4.4>4E4": 1,
                "5 5<5[5": 1,
                "6E6L6": 1,
                "7P7W7e7": 1,
                "8 8D8K8h8u8": 1,
                "8!9+999V9]9v9": 1,
                "9::@<H<": 1,
                "=;=e=l=": 1,
                "=1>[>b>i?": 1,
                "212=2P2": 1,
                "3/3;3W3{3": 1,
                "4.454Z4f4": 1,
                "425:5h5o5": 1,
                "6#6+6Z6a6": 1,
                "868=8O8": 1,
                "9m:t:": 1,
                ";#</<l<s<": 1,
                "<l=x=": 1,
                "=]>d>": 1,
                "?8???": 1,
                "0)000Z0a0|0": 1,
                "0P1\\1": 1,
                "10575]5d5": 1,
                "7]7d7": 1,
                "8!8>8E8": 1,
                "9W9^9": 1,
                ":#;*;];d;": 1,
                ";!<(<": 1,
                "=0=:=H=e=l=": 1,
                ">3>:>": 1,
                "?;?B?": 2,
                "060@0N0k0r0": 1,
                "0'171>1f1p1~1": 1,
                "1$2+2V2]2": 1,
                "31383": 2,
                "3R4Y4": 2,
                "5'5D5K5p5w5": 1,
                "5#636:6e6o6}6": 1,
                "667=7v7}7": 1,
                "76;@;N;k;r;": 1,
                ";,<V<": 1,
                "?$?+?^?": 1,
                "0+0H0O0": 1,
                "22292v2": 1,
                "4(4/4q4": 1,
                "5Q5T6^6l6": 1,
                "677}8": 1,
                "8L:V:d:": 1,
                ";G<O<": 1,
                "<(=1=g=p=": 1,
                ">&>4>Q>X>x>~>": 1,
                "?C?J?u?": 1,
                "1D1J1P1V1e1": 1,
                "1O2W2^2": 1,
                "3#3*3": 1,
                "6/676>6b6j6q6": 1,
                "7.767=7a7i7p7": 1,
                "8!8(8P8W8": 1,
                "9g9q9": 1,
                "9!:=:D:W:^:i:t:": 1,
                ";(<D<K<": 1,
                "=q>{>": 2,
                "171>1Q1X1c1n1": 1,
                "132O2V2": 1,
                "3K3U3c3": 1,
                "4B5L5Z5w5~5": 1,
                "5V6`6n6": 1,
                "6H8R8`8}8": 1,
                "88:S:Z:": 1,
                ">$>A>H>": 1,
                "?0?L?S?a?k?x?": 1,
                "0&000>0[0b0z0": 1,
                "2,2H2O2]2f2v2": 1,
                "2 3*383U3\\3": 1,
                "545;5x5": 1,
                "586T6[6i6s6": 1,
                "71787K7": 1,
                "9;9B9": 1,
                ":n:x:": 1,
                ";!;*;T;p;w;": 1,
                "<_<{<": 1,
                "=\"=)=p=": 1,
                ">'>B>c>": 1,
                "?0?7?R?n?u?": 1,
                "0&0<0R0k0": 1,
                "181V1": 1,
                "4B4^4e4x4>5Z5a5": 1,
                "696@6c6": 1,
                "8 8.8K8R8u8": 1,
                "8+959C9`9g9": 1,
                "9\":O:k:r:": 1,
                "252<2l2v2": 1,
                "<1<8<c<j<": 1,
                "<:=f=": 1,
                "=r>|>": 1,
                "?;?B?m?t?": 1,
                "0p1z1": 1,
                "1.2l2s2": 1,
                "2J3Q3z3": 1,
                "3e4l4N5U5": 1,
                "5\\6c6|6": 1,
                "6<7L7S7": 1,
                "8B8I8\\8d8o8": 1,
                ";p;v;": 1,
                "=%>,>:>V>]>": 1,
                ">/?K?R?m?y?": 1,
                ">0F0M0q0y0": 1,
                "1=1E1L1p1x1": 1,
                "2<2D2K2o2w2~2": 1,
                "5=5s5}5": 1,
                "5M6W6e6": 1,
                "8!8>8E8l8": 1,
                "9i9s9": 1,
                ";\";W;": 1,
                ";3<=<K<h<o<": 1,
                ">+>u>": 1,
                "?)?F?M?": 1,
                "020:0B0J0n0": 1,
                "2i2s2": 1,
                "2B3l3": 1,
                "9>:E:d:": 1,
                "<1<8<]<d<": 1,
                "<*=1=": 1,
                ">*>1>D>": 1,
                ">\"?9?S?Z?": 1,
                "0O0V0": 1,
                "1%1)1/13191": 1,
                "4 5'5~5": 1,
                "5b8l8z8": 1,
                "8S9Z9Y:`:": 1,
                ":t;{;": 1,
                ";1<8<g<n<": 1,
                "=$=[=b=": 1,
                "?G?N?": 1,
                "0I1P1w1~1-242f2m2": 1,
                "3D3K3~3": 1,
                "4\"5)5P5W5": 1,
                "6,636": 1,
                "7*717;7A7\\7c7q7z7": 1,
                "8&8]8d8": 1,
                "819M9T9": 1,
                ":&:-:a:h:": 1,
                ":2;9;h;o;": 1,
                ";I<S<a<~<": 1,
                "=)=D=K=m=": 1,
                ">6>=>R>": 1,
                "?8???p?w?": 1,
                "0#0R0Y0": 1,
                "1/262f2m2": 1,
                "3'3.3": 2,
                "3@4J4X4u4|4#5*5Y5`5(656@6[6b6s6z6": 1,
                "7#7S7Z7o7": 1,
                "7>8H8V8s8z8": 1,
                "9/:9:G:d:k:": 1,
                "; ;Z;a;": 1,
                ";V<]<": 3,
                ">2>E>": 1,
                "D0N0\\0y0": 1,
                "4 5&5I5P5t5{5": 1,
                "5,6j6": 1,
                "7!7(7C7": 1,
                "8(8/8B8Q8f8": 1,
                ":+:2:<:]:d:}:": 1,
                ";1;8;n;": 1,
                ";$<+<I<i<p<": 1,
                "=1=B=s=z=": 1,
                "=2>9>[>b>~>": 1,
                "?&?k?": 1,
                "406b6": 1,
                "6)7O7\\7d7l7x7": 1,
                "7)868": 1,
                "9;9N9V9^9j9t9": 1,
                "9&:/:F:U:m:": 1,
                ";5<s<": 1,
                "0)0<0@0F0J0Q0_0": 1,
                "1C1J1l1s1": 1,
                "2#2K2R2t2{2": 1,
                "3%3,3V3]3{3": 1,
                "4%5,5E5L5": 2,
                "606;6L6s6z6": 1,
                "7j7p7": 1,
                "8I8R8Z8q8": 1,
                "9C9M9f9": 1,
                ":A:^:j:": 1,
                "=&=9=@=Y=`=w=": 1,
                ">,>6>@>k>": 1,
                "0/080Q0": 1,
                "2A3J3R3W3b3o3u3{3": 1,
                "7=7v7": 1,
                "858H8a8u8": 1,
                ":5;S;": 1,
                ">!>5><>U>\\>": 1,
                "?$?,?I?": 1,
                "1W1^1": 2,
                "2D2K2{2": 1,
                "30373": 1,
                "444;4l4s4": 1,
                "6A6H6": 2,
                "6%7,7v7}7": 1,
                ":Z:+;": 1,
                "<o=u=": 1,
                "=H?N?X?f?": 1,
                "161R1": 1,
                "2&2>2T2": 1,
                "5 5=5": 1,
                "6<6I6": 1,
                "7'7}7": 1,
                "8C8G8M8Q8W8[8a8e8k8o8u8y8": 1,
                ":%:8:>:": 1,
                ":`;p;z;": 1,
                ">*>G>N>u>": 1,
                "0,0A0": 1,
                "0&101>1[1b1": 1,
                "535;5C5K5\\5r5": 1,
                "7D7K7o7v7": 1,
                "7*8r8x8": 1,
                ":*;W;": 1,
                "<R<r<": 1,
                "<7=U=)>h>r>": 1,
                "0/0D0": 1,
                "1N1U1": 1,
                "1J2Q2y2": 1,
                "3!4(4": 1,
                "4`5g5": 1,
                "5*616W6^6": 1,
                "6+727z7": 1,
                "8W9^9": 1,
                ";i;p;": 1,
                "<H<O<": 1,
                "?0?7?f?m?": 1,
                "010;0E0I0O0S0Y0v0": 1,
                "1D1e1": 1,
                "232i2": 1,
                "4K6g6n6": 1,
                "6k7q7}7": 1,
                "7\"8)8B8I8e8l8": 1,
                "9$9=9D9h9o9": 1,
                "9n:u:": 1,
                ":F;w;~;": 1,
                "<><x<": 1,
                "=\\=c=": 1,
                ">&>V>{>": 1,
                "?$?Q?s?": 1,
                "0B1I1n1": 1,
                "1'2Y2o2": 1,
                "3!4(4=4S4": 1,
                "5@5G5[5{5": 1,
                "666=6X6^6q6": 1,
                ":B:l:s:": 1,
                "::;A;R;": 1,
                ";<<C<m<t<": 1,
                "<==D=U={=": 1,
                ">6>=>g>n>-?4?M?": 1,
                "02191h1o1": 1,
                "4)4F4M4s4z4": 1,
                "556?6M6j6q6": 1,
                "7k7r7": 1,
                "8&8.858R8Z8a8~8": 1,
                "979?9F9e9m9t9R:": 1,
                ":%;E;M;U;];};": 1,
                "<%<C<": 1,
                ">3>H>": 1,
                ">&?0?>?[?b?": 1,
                "0s0}0": 1,
                "1+222K2R2": 1,
                "353?3": 1,
                "3&4X4a4i4": 1,
                "5%5O5i5": 1,
                "5/666O6V6x6": 1,
                "7*717S7Z7s7z7": 1,
                "8.858N8U8w8~8": 1,
                "9)909R9Y9r9y9": 1,
                ":_:f:": 4,
                ";:;A;Z;a;": 1,
                "<5<<<i<p<": 1,
                "=\"=)=K=R=k=r=": 1,
                ">&>->F>M>o>v>": 1,
                "?!?(?J?Q?j?q?": 1,
                "1O2h2": 1,
                "2_3{3": 1,
                "3t4~4": 1,
                "5$5,545J5R5\\5V6l6~6": 1,
                "6B7J7;9": 1,
                ":6;{<": 1,
                "<$=N=": 1,
                "?(?.?9???J?P?[?c?k?s?{?": 1,
                "7\"7Q7X7t7": 1,
                "8!9+999V9]9": 1,
                "94:::]:d:": 1,
                ";&<0<><[<b<": 1,
                "<-=M=T=r=y=": 2,
                ">4><>C>g>q>": 1,
                "0I0S0a0~0": 1,
                "1 1O1V1t1": 1,
                "1D2{2": 1,
                "3 3&3K3[3b3n3w3": 1,
                "4!4:4@4F4O4^4h4s4y4": 1,
                "5 5E5q5": 1,
                "696?6E6\\6f6u6": 1,
                "7(7E7L7m7": 1,
                "8B8I8m8t8": 1,
                "9#:-:7:": 1,
                "?4?<?": 1,
                "090`0h0p0x0": 1,
                "1'1D1K1n1": 1,
                "3g3q3": 1,
                "3U4~4": 1,
                "5R6|6": 1,
                "797d7": 1,
                "7E8O8]8z8": 1,
                "9=:`:j:x:": 1,
                "=\"===L=Z=d=n=x=": 1,
                "=*>4>B>_>f>": 1,
                "?Z?b?i?": 1,
                "0\"080A0G0O0^0m0v0}0": 1,
                "1#181G1": 1,
                "2%232=2J2`2q2": 1,
                "4,4<4C4": 1,
                "7$7,747<7F7T7[7b7j7*8U8\\8v8": 1,
                "9(9/9l9s9": 1,
                "<\"<Q<X<q<x<": 1,
                "=?=I=W=t={=": 1,
                "=b>i>": 1,
                ">'?1?;?V?d?h?n?r?x?~?": 1,
                "0 0K0~0": 1,
                "1S1Y1c1q1": 1,
                "2*232<2": 1,
                "2A3]3d3r3|3": 1,
                "4!424": 1,
                "536:6S6Z6w6~6": 1,
                "8.858": 1,
                "8)929": 1,
                ":':.:H:Q:Z:": 1,
                ";.;5;[;b;": 1,
                ";B<V<": 1,
                "1k3u3": 1,
                "3M4V4_4;6G6S6_6x6": 1,
                "8i8p8": 1,
                "949;9": 1,
                ":,:3:": 1,
                ";F<M<": 1,
                "=,=3=k=": 1,
                ">>>E>": 1,
                "?M?T?": 2,
                "1<1C1i1p1p2k3r3": 1,
                "99:@:g:n:U;_;m;": 1,
                "=V>]>": 1,
                ">2?~?": 1,
                "0H1O1v1}1d3n3|3": 1,
                ":)<0<_<f<": 1,
                "=t>{>": 1,
                ">d?n?|?": 1,
                "L0S0z0": 1,
                "3,333v4}486?6": 1,
                "80979::B:J:m:u:}:": 1,
                "g0n0$1+1": 1,
                ";D<L<S<[<e<q<*>F>M>": 1,
                ">\"?)?Q?X?": 1,
                "0%1,1U1\\1p1": 1,
                "1)2E2L2": 1,
                "3+4G4N4": 1,
                "5a5}5": 1,
                "686?6R6": 1,
                "7L8h8o8": 1,
                "9$9q9z9": 1,
                ":!:>:Z:a:t:": 1,
                "<$<-<W<\\<": 1,
                "==>D>": 2,
                "0A0|0": 1,
                "161=1l1s1": 1,
                "1,232i2p2": 1,
                "3>3E3l3s3": 1,
                "3;4C4K4w4}4": 1,
                "5$5.585": 1,
                "5Z6j7q7m8": 1,
                "8'9.9]9d9": 1,
                ":2:9:o:v:": 1,
                ";D;K;r;y;": 1,
                "=_=f=w=": 1,
                "?=?D?s?z?": 1,
                "%0,0b0i0": 1,
                "171>1e1l1": 1,
                "22292S2o2v2": 1,
                "2?3[3b3": 1,
                "4T4p4w4": 1,
                "4+5G5N5s5z5": 1,
                "6\"6k6": 1,
                "7;7B7": 1,
                "9^9e9": 1,
                ";I;P;m;": 1,
                "<$<k<r<": 1,
                "<#=*=D=`=g=": 1,
                "=E>a>h>": 1,
                "?Z?v?}?": 1,
                "I0e0l0": 1,
                "191@1": 1,
                "142;2s2z2": 1,
                "373>3": 3,
                "4=4D4^4z4": 1,
                "435O5V5": 1,
                "6H6d6k6": 1,
                "7u8|8": 1,
                "8 9'9A9]9d9": 1,
                "94:P:W:": 1,
                ";I;e;l;": 1,
                "<&=-=\\=c=": 1,
                ">I>P>": 2,
                "?%?L?S?": 1,
                "0#0-070r2|2": 1,
                "2,464D4a4h4F5P5^5{5": 1,
                "6,6I6P6": 1,
                "<%=B=I=z=": 1,
                "=1>k>": 1,
                ">Z?b?i?": 1,
                "20o0y0": 1,
                "4c5m5{5": 1,
                "646;6": 2,
                "8i8p8<:C:": 1,
                "=?>F>N>V>^>q>y>": 1,
                ")060O0i0": 1,
                "0@1t2": 1,
                "31383g3n3": 1,
                "4&4-4H4f4m4{4": 1,
                "5B5I5p5w5": 1,
                "626P6W6e6v6": 1,
                "72797`7g7": 1,
                "838:8h8o8": 1,
                "949;9U9o9v9": 1,
                "9 :):@:\\:c:": 1,
                ">2?9?V?]?": 1,
                "1&1C1J1g3q3": 1,
                "3 4'4@4G4": 1,
                "5&5-5F5M5m5t5": 1,
                "546;6T6[6": 1,
                "7%7,7L7S7": 1,
                "434:4q5x5": 1,
                "6o8y8": 1,
                "030:0": 1,
                "081?1X1_1": 1,
                "697T8": 1,
                "1\\203": 1,
                "575A5O5l5s5": 1,
                "6F6M6v6": 1,
                "8=8D8h8o8": 1,
                ":H;R;`;};": 1,
                "<\"<0<M<T<z<": 1,
                "<T>[>": 1,
                "?0?7?[?b?": 1,
                "1M1T1x1": 1,
                "3D3K3o3v3": 1,
                "4+525X5_5q8{8": 1,
                ":@:G:k:r:": 1,
                ";#;*;N;U;{;": 1,
                ";C<J<": 1,
                "===D=z=": 1,
                "=\"?,?:?W?^?": 1,
                "o0v0r1|1": 1,
                "2.252,464D4a4h4": 1,
                "6%6I6P6t6{6": 1,
                "6J8T8b8": 1,
                "9g9n9V:]:_<i<w<": 1,
                "G0Q0_0|0": 1,
                "0#1-1;1X1_1D3N3\\3y3": 1,
                "5$5y5": 1,
                "5t7~7": 1,
                "7'<1<?<\\<c<": 1,
                ">&>C>J>W>": 1,
                "6!6>6E6k6r6": 1,
                "8@8G8k8r8": 1,
                ":):F:M:j:t:": 1,
                ";&;4;Q;X;u;": 1,
                "<%</<=<Z<a<": 1,
                "=8=?=h=o=4>": 1,
                "1;1B1I1P1": 1,
                "132U2": 1,
                "363?3M3b3v3": 1,
                "676=6s6|6": 1,
                "7T7\\7b7": 1,
                "8+8A8b8": 1,
                "9(919": 1,
                ";k<x<": 1,
                "?7?V?": 1,
                "6\"6)6": 1,
                "8X9j;s;|;": 1,
                "2J3V4": 1,
                "6M6d6": 1,
                "6%7;7": 1,
                "9\":):B:I:": 1,
                ";0;O;g;};": 1,
                ";J<Q<j<q<{<": 1,
                "=%=>=E=`=": 1,
                "> >'>4>:>L>n>": 1,
                ">B?I?f?m?": 1,
                "0!0(0F0M0f0m0w0": 1,
                "1.2q2w2": 1,
                "4l5v5": 1,
                "6&6V7]7v7}7": 1,
                "7\"8)8T8[8": 1,
                ";9;H;": 1,
                "2N4U4": 1,
                "5/565S5Z5": 1,
                "5%6,6T6[6#7": 1,
                ":H:T:Z:": 1,
                ">*>1>": 2,
                ">e?l?": 1,
                "1:1A1": 1,
                "4;4B4f4": 1,
                "565C7J7g7n789?9a9h9z9-:4:M:T:": 1,
                "0'0-0I0P0O1V1": 1,
                "2_3<5": 1,
                "6~7%8,8E8L8": 1,
                "8r9y9": 1,
                ";7;>;": 1,
                ";/<6<S<Z<{<": 1,
                "=Q=X=u=|=": 1,
                "=o>v>": 1,
                "V0`0n0": 1,
                "3L3U3Z3x3": 1,
                "5&5P5": 1,
                "6*616": 1,
                "7&7-7": 2,
                "7-848Q8X8": 1,
                "9/:6:S:Z:": 1,
                "=&=4=Q=X=": 1,
                "=#>j>q>": 1,
                "1A1|1": 1,
                "2)202a2f2": 1,
                "3#3U3^3g3s324": 1,
                "6o7v7": 1,
                "<i=p=": 2,
                "?'?-?X?d?p?": 1,
                "$0I0Q0": 1,
                "121M1i1p1": 1,
                "293M3m3}3": 1,
                "4D5K5": 1,
                "6:6g6w6": 1,
                "6O7h7": 1,
                "979F9": 1,
                "9%:/:=:Z:a:0<F<0=": 1,
                "?$?)?7?~?": 1,
                "2h3r3": 1,
                "4Z5a5": 1,
                "6\"6E6L6\\6": 1,
                "7&7J7Q7": 1,
                ";#=F=M=]=": 1,
                ">'?-?6?": 1,
                " 0C0J0Z0": 1,
                "1M2g2": 1,
                "3,333M3": 1,
                "4o5N6": 1,
                "7^9e9~:": 1,
                "<;=i=": 1,
                ">y>0?7?": 1,
                "292@2N2q2x2": 1,
                "4'5/565Z5b5i5": 1,
                "60676M6": 1,
                "7#7*7J7Q7s7z7": 1,
                "7!8(8T8[8}8": 1,
                "9.959`9g9": 1,
                ":8:?:q;": 1,
                ">1>8>": 1,
                ">0E0r0A1I1P1v1": 1,
                "3#4-4;4X4_4m4": 1,
                "6 6K6v6": 1,
                "8$8+8": 1,
                "8H:R:`:}:": 1,
                ";\";);": 1,
                "?B?g?": 1,
                "O0Y0g0": 1,
                "2)2.383F3c3j3x3": 1,
                "3C4p4": 1,
                "6%6,6:6]6d6z6": 1,
                "628k8": 1,
                "<9=C=Q=n=u=": 1,
                "?2?~?": 1,
                "0D0`0|0": 1,
                "1K2U2c2": 1,
                "283B3P3m3t3": 1,
                "4!5(5<5": 1,
                "6'6.6<6_6f6}6": 1,
                "6s7}7": 1,
                "8?8E8T8w8": 1,
                "9A9F:i:p:": 1,
                "1*111Q1Z2a2": 1,
                "4%4,4J4": 1,
                "4-5P5W5u5": 1,
                "7@7G7b7k8r8": 1,
                ";!;4;X;s;": 1,
                "=c>m>{>": 1,
                "2&2I2P2`2": 1,
                "6(6/6=6`6g6z6": 1,
                "7P8h:": 1,
                "<#<1<T<[<n<": 1,
                "0!1]1c1l1;2": 1,
                "4#5+525r5|5": 1,
                "626z6": 1,
                "7b9i9": 1,
                "<!</<L<S<a<": 1,
                "3!5b5?6": 1,
                "7$7A7H7V7y7": 1,
                "8R:Y:": 1,
                ":I<S<a<~<": 1,
                "0Q1(2": 1,
                "3G3Q3_3|3": 1,
                "4+626}6": 1,
                "8-8P8W8j8": 1,
                "8I9W9*;1;": 1,
                "<b=j=q=": 1,
                "*010m0t0": 1,
                "141D1k1{1": 1,
                "2&2B2N2": 1,
                "3 3a3y3": 1,
                "3,444<4D4O4e4": 1,
                "5<5U5k5": 1,
                "6;6C6K6S6]6d6k6r6y6": 1,
                "6(7/7Q7X7}7": 1,
                ";&;*;0;4;:;>;D;H;N;R;X;\\;b;f;l;p;v;z;": 1,
                "< <*<4<><B<H<L<\\<c<z<": 1,
                "<\"=)=K=R=l=r=": 1,
                ">1>8>Z>a>u>": 1,
                "?,?s?": 1,
                "01080V0]0": 1,
                "1\"1,1I1f1;3": 1,
                "<G?m?t?": 1,
                "131:1": 2,
                "1;2B2_2f2x2": 1,
                "7)849": 1,
                ":H:X:^:|:": 1,
                "<$<*<D<J<]<f<l<": 1,
                ">(>E>L>": 1,
                "?A?H?V?b?i?t?": 1,
                "0%0c0m0": 1,
                "3+323F3M3]3": 1,
                "4C4P4y4": 1,
                "5.656G6": 1,
                "6\"7)7Q7X7": 1,
                "7;8^8e8": 1,
                "9.:e;": 1,
                "<(<r<z<G>j>q>": 1,
                ">#?F?M?^?e?": 1,
                "0$0J0Q0": 1,
                "0m1t1": 1,
                "2E3M3T3`3": 1,
                "7R8Y8": 1,
                "<5<<<M<T<": 1,
                "1&171>1b1i1": 1,
                "232:2S2": 1,
                ":2:<:J:g:n:];g;u;": 1,
                "<#=*=": 2,
                "?n?u?": 1,
                "0$060j0t0": 1,
                "122<2J2g2n2": 1,
                "4(4/4": 1,
                "5S6]6k6": 1,
                "6.787F7c7j7`9g9+:5:C:`:g:": 1,
                ";f;p;~;": 1,
                "0!0k0": 1,
                "131s1}1": 1,
                "2:2D2R2o2v2": 1,
                "2g3n3": 1,
                "3a4j4s4~4": 1,
                "4 5(585A5M5S5[5": 1,
                "6C6J6{6": 1,
                "7;7B7v7}7": 2,
                "7!8+898V8]8": 1,
                "<P<Z<h<": 1,
                "<p=x=": 1,
                ">M>m>t>": 1,
                "0-171E1b1i1": 1,
                "2+323N3\\3b3": 1,
                "4c4m4{4": 1,
                "6*616q6x6": 1,
                "6%7,7[7b7~7": 1,
                "8/868": 1,
                "999@9\\9j9n9u9": 1,
                ":/:J:W:": 1,
                ";$;2;O;V;": 1,
                ";-<4<k<r<": 1,
                "=r>y>": 1,
                ">6?B?K?": 1,
                "$0+0Y0t0": 1,
                "1\"2)2": 1,
                "30373S3": 1,
                "4E4L4": 1,
                "4G6N6": 1,
                "96:>:F:N:V:^:f:n:": 1,
                "0%0)0@0w0~0": 1,
                "1&1M1o1": 1,
                "7)707Z7": 1,
                "9&9W9y9": 1,
                "9M:T:v:}:": 1,
                ":!;m;": 1,
                "=#=P=W=p=w=": 1,
                "1+1=1f1m1": 1,
                "3>4Q4": 1,
                "5-545[5": 1,
                "6`6g6": 1,
                "6D7W7]7k7": 1,
                ":C:J:c:j:": 1,
                ";Z;l;": 1,
                "=9>@>Y>`>": 2,
                "?1?7?S?Z?m?": 1,
                "090J0[0`0": 1,
                "1:1A1j1q1~1": 1,
                "5'5?5R5X5": 1,
                "8k8r8": 1,
                ":':.:": 2,
                ";<;X;t;": 1,
                "8:9A9^9e9": 1,
                ";.;5;a;h;": 1,
                "<&<-<5=<=^=e=": 1,
                ">0E0b0i0": 1,
                "1&1C1J1E2X2": 1,
                "4C5Y5": 1,
                "8!8|8": 1,
                "8:9M9`9s9": 1,
                "5!5(507:7H7e7l7K8U8_8h8}8": 1,
                "9 9=9D9|9": 1,
                ";@;F;b;i;": 1,
                "30:0W0^0": 1,
                "161=1_1f1": 1,
                "31383Y3`3y3": 1,
                "3J4Q4s4z4": 1,
                ";8;?;": 1,
                ";U<d<s<": 1,
                "=$=+=7=`=h=o={=": 1,
                ">!><>": 1,
                "?V?]?": 1,
                "1-2p2": 1,
                "5/565": 1,
                "7*707A7G7U7[7n7s7": 1,
                "8\"9)9": 1,
                "=M>W>e>": 1,
                "12191": 1,
                "2L3S3": 1,
                "41484Q4X4": 1,
                "4Q5X5u5|5": 1,
                "6!6:6A6": 1,
                "6-747N7j7q7": 1,
                "8A8H8]8j8u8": 1,
                "9,939A9R9o9v9": 1,
                ":6:=:": 1,
                ";9;W;^;l;};": 1,
                "<3<:<a<h<": 1,
                "=%=?=Y=`={=": 1,
                ">*>F>M>{>": 1,
                "?8???Y?s?z?": 1,
                "0'0>0Z0a0": 1,
                "0*1_1{1": 1,
                "292@2a2j2": 1,
                "4,434A4R4o4v4": 1,
                "565=5": 1,
                "6-646O6m6t6": 1,
                "7I7P7w7~7": 1,
                "7:8l8s8": 1,
                "949R9Y9g9x9": 1,
                ":6:=:d:k:": 1,
                ";!;=;D;r;y;": 1,
                "<#<=<W<^<y<": 1,
                "=\"=>=E=s=z=": 1,
                "='>/>6>Y>c>q>": 1,
                ">+?3?;?C?": 1,
                "?0O0V0o0v0": 1,
                "1J1Q1": 1,
                "22292T2r2y2": 1,
                "3&3T3[3": 1,
                "4(4/4I4e4l4z4": 1,
                "5<5C5X5e5p5z5": 1,
                "6!6(666G6d6k6": 1,
                "7+727": 1,
                "8&8-848J8Q8q8x8": 1,
                "9\"9D9": 1,
                ":6;Y;": 1,
                ";H<L=d=": 1,
                "?1?U?y?": 1,
                "3g4n4B5I5": 1,
                "?)?0?": 1,
                "(2/2L2S2": 1,
                "4!4(4N4U4": 1,
                "5%5K5R5@6G6d6k6": 1,
                "8B8I8o8v8": 1,
                "9'9.9T9[9": 1,
                "9!:(:I:P:m:t:": 1,
                "<C<J<c<j<": 1,
                "<$=+=p=w=": 1,
                "0P0W0p0w0": 1,
                "20272X2_2x2": 1,
                "3;3B3": 2,
                "4\"4)4F4M4u4|4": 1,
                "445;5X5_5|5": 1,
                "9,9o9": 1,
                ":/:6:e:l:": 1,
                ">q>x>": 1,
                ">g?q?{?": 1,
                "0\"0)0f1": 2,
                "2I2P2": 1,
                "4$5+5": 1,
                "6!6(6S6Z6t6": 1,
                "8'8.8b8i8": 1,
                "8C9_9f9": 1,
                "=\"=>=E=p=w=": 1,
                "?H?O?": 1,
                "0N1U1r1y1": 1,
                "2&2e2": 1,
                "4%4?4[4b4": 1,
                "535:5k5r5": 1,
                "5.6J6Q6": 1,
                "6-7I7X7m7": 1,
                "7'8.8]8d8": 1,
                "8B:I:f:m:": 1,
                ";k;r;": 2,
                "<3<:<G<": 1,
                "$0+0d0k0": 1,
                "1)101": 1,
                "1m5t5": 1,
                "5<6C6o6": 1,
                "7\"8>8E8": 1,
                "8<9S9": 1,
                "99:d:v:": 1,
                ";R;w;": 1,
                ">]>d>": 1,
                "?N?U?": 1,
                "0(1\\1l1s1": 1,
                "2K3z3": 1,
                "4)4Z4a4": 1,
                "4D5`5g5": 2,
                "5S6[6": 1,
                ":V;o;*<s<}<": 1,
                "><>V>g?": 1,
                "0$0J0l0": 1,
                "1J1T1r1{1": 1,
                "2+414=4I4u4": 1,
                "5M5i5": 1,
                "546@6I6R6[6d6o6z6": 1,
                "7 7W7d7": 1,
                "7*818W8`8i8q8z8": 1,
                "8!9H9p9": 1,
                ":&:M:S:^:l:": 1,
                ";&;8;>;g;o;v;": 1,
                "<(<d<q<z<": 1,
                "=$=2=N=U=": 1,
                ">*>1>O>^>": 1,
                "?*?1?o?": 1,
                "40Y0u0|0": 1,
                "0H1]1b1g1l1": 1,
                "3<3D3f3m3": 1,
                "3)494@4d4l4": 1,
                "5%5Z5j5q5": 1,
                "5;6C6_6f6": 1,
                "7D7K7": 1,
                "8F8V8]8": 1,
                "9K9S9o9v9": 1,
                ":E:L:": 2,
                ";2;F;M;f;m;": 1,
                "<J<f<m<": 1,
                "=7=>=": 2,
                "?-?k?r?": 1,
                "0$0A0f0m0": 1,
                "1R1r1y1": 1,
                "2#2O2V2": 1,
                "3&4T4[4": 1,
                "5%515": 1,
                "5!6p6": 1,
                "7p7w7": 1,
                ":H:f:m:": 1,
                ";*;1;": 1,
                ">'>->T>r>y>:?": 1,
                "12191t1": 1,
                "1Y2c2q2": 1,
                "263=3": 1,
                "4Q5a5h5u5": 1,
                "546D6K6|6": 1,
                "6.7>7E7R7n7u7": 1,
                "91:8:": 1,
                "<9<I=f=m=": 1,
                "=,?6?;?": 1,
                "0A0e0": 1,
                "12191N1j1q1": 1,
                "2C2J2\\2x2": 1,
                "3 3<3C3P3Y3": 1,
                "4+4X4t4{4": 1,
                "565=5W5": 1,
                "6/666d6k6": 1,
                "787?7u7|7": 1,
                "8J8Q8x8": 1,
                "9)909h9": 1,
                "97:>:": 1,
                ":!;(;W;s;z;": 1,
                ";<<X<_<": 1,
                ">&>->G>W>^>y>": 1,
                "0%03080b0": 1,
                "1,1E1I1O1S1Y1]1c1g1m1": 1,
                "1(262:2@2D2J2N2T2X2^2b2h2l2r2|2": 1,
                "3!3&3'424=4": 1,
                "5)5=5Q5e5y5": 1,
                "6<6F6P6Z6d6n6x6": 1,
                "7&7Q8a8h8u8": 1,
                "96:F:M:": 1,
                "=h=o=}=": 1,
                "?&?4?P?W?e?": 1,
                "0)1c1j1": 1,
                "2&2a2": 1,
                "2!3?3F3": 1,
                "4a5h5": 1,
                "8b8i8": 2,
                ":&:C:Q:_:h:q:z:": 1,
                ";#;-;A;K;U;_;": 1,
                "<^<e<o<t<y<": 1,
                "=C=I=P=s=x=": 1,
                ">.>:>b>": 1,
                ">3?y?": 1,
                "0D1U1q1x1 2T2[2i2": 1,
                "3%3A3H3": 1,
                "3=4D4R4n4u4<5": 1,
                "6R7&9-9U9\\9x9": 1,
                "=(>8>?>L>h>o>/?9?": 1,
                "2#2E2M2T2q2y2": 1,
                "6:7A7U7": 1,
                "8!8)8E8L8": 1,
                "8(9/9": 1,
                "99:@:N:j:q:a;h;v;": 1,
                ";B<^<e<": 1,
                "? ?O?V?": 1,
                "393Y3`3": 1,
                "3(4/4=4Y4`4": 1,
                "4:5V5]576>6e6l6": 1,
                "7B8J8R8^9w:": 1,
                ":Q;X;": 1,
                ";!<=<D<": 1,
                "<F=M=q=}=": 1,
                ">->4>d>n>u>": 1,
                "?+?2?[?b?": 1,
                "060=031:1n1u1": 1,
                "1K2g2n2": 1,
                "4/4K4R4": 1,
                "4.5J5Q5": 1,
                "5N6U6": 1,
                "6J7Z7a7": 1,
                "9#919M9T9z9": 1,
                "9[:b:": 1,
                ";F;M;": 1,
                "<(</<d<j<": 1,
                "<&=-=z=": 1,
                ">T>p>w>": 1,
                "<0C0k0r0": 1,
                "0D1j1q1": 1,
                "2D2K2": 1,
                "2\"3<3C3n3u3": 1,
                "464k4r4": 1,
                "5<5X5_5m5": 1,
                "6D6K6": 1,
                "7a7h7": 2,
                "718n8u8": 1,
                "8(9/9[9b9": 1,
                ":3:O:V:": 1,
                ":';.;": 1,
                ";9<@<|<": 1,
                "=[=b=|=": 1,
                ">n>u>": 1,
                ">.?N?U?w?": 1,
                "060=0f0m0": 1,
                "0I1c1j1": 1,
                "2%2Q2X2|2": 1,
                "2 3'3A3]3d3": 1,
                "5#5C5J5s5z5": 1,
                "6>6E6z6": 1,
                "70777T7[7": 1,
                "80878|8": 1,
                ":$:::]:d:": 1,
                ":I;P;": 1,
                "<$<+<Z<a<": 1,
                "=H=h=o=": 1,
                ">E>L>w>": 1,
                "?3?O?V?": 1,
                "0\"141j1": 1,
                "2#2I2U2^2": 1,
                "3&3+313b3": 1,
                "364<4": 1,
                "4\"5>5E5": 1,
                "5T6[6": 1,
                "748_8o8v8": 1,
                "8;9L9h9o9(:8:?:u:": 1,
                ";S;d;": 1,
                ";.<d<u<": 1,
                ">*>F>M>": 1,
                "1J1b1~1": 1,
                "1'2.2Y2`2": 1,
                "4.454^4e4": 1,
                "5f6r7y7": 1,
                "798V8]8": 1,
                ";@;G;": 2,
                "?=?D?^?z?": 1,
                "32393I3d3": 1,
                "959<9X9t9{9": 1,
                ">G>N>}>": 1,
                "?%?A?H?b?|?": 1,
                "0'000G0c0j0": 1,
                "1)171T1[1": 2,
                "333M3T3o3": 1,
                "5@5\\5c5q5": 1,
                "636:6O6\\6g6q6": 1,
                "72797S7o7v7": 1,
                ":3:Q:X:f:w:": 1,
                ":-;4;[;b;": 1,
                "=6===W=s=z=": 1,
                ">4>P>W>q>": 1,
                "?<?E?\\?x?": 1,
                "060=0W0q0x0": 1,
                "0\"1+1B1^1e1": 1,
                "373>3X3t3{3": 1,
                "575U5\\5j5{5": 1,
                "676>6e6l6": 1,
                "7$7B7I7W7h7": 1,
                "7$8+8R8Y8": 1,
                "9':C:J:X:r:y:": 1,
                ";!;6;C;N;X;": 1,
                "<\"<0<A<^<e<": 1,
                "<%=,=": 1,
                ">1>8>F>W>t>{>": 1,
                "0;0B0P0a0": 1,
                "1$1K1R1": 1,
                "2^2Q3m3t3": 1,
                "4D4K4`4m4x4": 1,
                "5)505>5O5o5v5": 1,
                "696@6/767O7V7": 1,
                "9D9K9z9": 1,
                ":!:(:C:a:h:v:": 1,
                ";=;D;k;r;": 1,
                ";5<?<M<j<q<": 1,
                "=5=<=V=r=y=": 1,
                ">/>K>R>l>": 1,
                "?1?:?Q?m?t?": 1,
                "+0G0N0h0": 1,
                "1-161M1i1p1": 1,
                "1\"2>2E2_2y2": 1,
                "3*333J3f3m3": 1,
                "3Z4v4}4": 1,
                "5M5T5i5v5": 1,
                "62696S6m6t6": 1,
                "7!787T7[7": 1,
                ";0<L<S<a<{<": 1,
                "<#=*=?=L=W=a=g=m=": 1,
                ">/>M>T>b>s>": 1,
                ">)?0?W?^?": 1,
                "0#0A0H0V0g0": 1,
                "0#1*1Q1X1": 1,
                "3D3K3z3": 1,
                "555<5W5u5|5": 1,
                "6#6Q6X6": 1,
                "6:7A7h7o7S9o9v9": 1,
                ":F:M:b:o:z:": 1,
                ";.;L;S;a;r;": 1,
                ";(</<V<]<M>W>e>": 1,
                "?(?6?S?Z?": 1,
                "0t1~1": 1,
                "2/262": 1,
                "3!3+343R3y3": 1,
                "4+4f4": 1,
                "666=6N6h6o6": 1,
                "7 787E7S7]7": 1,
                "8!8(868G8d8k8": 1,
                "9+929": 1,
                ":$:+:9:J:g:n:": 1,
                ";.;5;": 1,
                "< <=<D<": 1,
                ">&>->G>c>j>": 1,
                "?.?4?=?F?O?c?": 1,
                "0 0=0D0e0n0": 1,
                "1Y1u1|1": 1,
                "232:2[2d2{2": 1,
                "3K3R3`3z3": 1,
                "3\"4)4>4K4V4`4": 1,
                "6-646N6h6o6": 1,
                "737O7V7": 1,
                ";9;U;\\;": 1,
                "<-<4<N<h<o<": 1,
                "=3=O=V=": 1,
                ">\"><>V>]>x>": 1,
                "?'?C?J?x?": 2,
                "C0_0f0t0": 1,
                "161=1R1_1j1t1z1": 1,
                "2 2'2B2`2g2u2": 1,
                "3<3C3j3q3": 1,
                "454S4Z4h4y4": 1,
                "555<5c5j5": 1,
                "6+6G6N6|6": 1,
                "6A8]8d8~8": 1,
                "9%9I9R9i9": 1,
                ";!;O;V;": 1,
                "<1<K<R<m<": 1,
                "=2=9=g=n=": 1,
                "=o?v?": 1,
                "080?0Y0s0z0": 1,
                "1'1>1Z1a1": 1,
                "182{2": 1,
                "2+333:3^3f3m3": 1,
                "5*515_5f5": 1,
                "6(6D6K6e6": 1,
                "7*737J7f7m7": 1,
                "8:8A8[8u8|8": 1,
                "9&9/9F9b9i9": 1,
                ":+:E:L:f:": 1,
                ";!;+;": 1,
                ";;<B<q<x<": 1,
                "=\"=)=7=H=e=l=": 1,
                ">,>3>": 2,
                "081T1[1i1": 1,
                "1+222G2T2_2i2o2u2": 1,
                "5-5K5R5`5q5": 1,
                "5-646[6b6": 1,
                "7\"7)777Q7X7r7": 1,
                "8\"8-878": 1,
                "9\"9*9": 1,
                ":(:/:I:c:j:": 1,
                ";.;J;Q;": 1,
                ";[<b<": 1,
                "<M=i=p=~=": 1,
                ">@>G>\\>i>t>~>": 1,
                "?/?6?Q?o?v?": 1,
                "0#0Q0X0": 1,
                "1,1F1M1g1": 1,
                "2\"2,2": 1,
                "42494S4o4v4": 1,
                "5$5:5@5I5R5[5o5": 1,
                "6,6I6P6q6z6": 1,
                "8%8E8L8p8y8": 1,
                ":4:;:U:q:x:": 1,
                "=-=4=O=m=t=": 1,
                ">!>O>V>}>": 1,
                ">+?2?Y?`?": 1,
                "A0K0Y0v0}0": 1,
                "0Z1v1}1": 1,
                "2M2T2i2v2": 1,
                "393@3[3y3": 1,
                "4 4'4U4\\4": 1,
                "52595T5r5y5": 1,
                "6&6T6[6": 1,
                "8!8(8V8]8": 1,
                "9h:o:": 1,
                ";1;O;V;d;u;": 1,
                "<1<8<_<f<": 2,
                "=;=B=": 1,
                ">!>/>I>P>j>": 1,
                "?%?/?": 1,
                "0)000>0O0l0s0": 1,
                "3=3D3f3": 1,
                "3\"4k4": 1,
                "6$6>6Z6a6": 1,
                "9C:J:o:v:": 1,
                ";Y;c;q;": 1,
                "=$=J=Q=w=~=": 1,
                "20:0A0`0h0o0": 1,
                "141;1I1": 1,
                "2J2s2": 1,
                "273>3e3l3": 1,
                "464>4E4i4q4x4": 1,
                "5+5c5j5": 1,
                "6@6\\6c6": 1,
                "6T:[:t:{:": 1,
                "; ;>;E;^;e;": 1,
                "<!<:<A<": 1,
                "</=5=o=v=": 1,
                ">#>*>C>J>": 1,
                ">Y?j?": 1,
                "$0+0<0": 1,
                "10171X1_1": 1,
                "242;2e2l2z2": 1,
                "3*3;3@3f3m3": 1,
                "3,434q4x4": 1,
                "4$5/5M5T5m5t5": 1,
                "5+626X6_6": 1,
                "7E7T7n7{7": 1,
                "838:8P8]8l8": 1,
                "9 :':@:G:R:": 1,
                ";H<g<": 1,
                "<*=1=c=j=": 1,
                "=*>1>g>n>": 1,
                "?C?J?q?x?": 1,
                "070>0": 1,
                "1$2+2a2h2": 1,
                "363=3d3k384A4_4f4": 1,
                "6K6R6": 2,
                "7)7F7M7~7": 1,
                "8D8`8g8": 1,
                "8]9f9": 1,
                ":N:V:_:h:": 1,
                ";7;@;t;|;": 1,
                "<(<2<6<\\<o<": 1,
                "=.=b=": 1,
                ">%>a>n>": 1,
                ">??F?_?f?": 1,
                "0L0d0k0": 1,
                "1!1.1": 1,
                "1o2v2": 1,
                "4E4L4i4": 1,
                "6 7'7]7d7": 1,
                "82898`8g8": 1,
                "8O9`9|9": 1,
                "90:7:u:": 1,
                ":3;F;m;": 1,
                "<,<[<z<": 1,
                "071B1I1": 1,
                "1d2k2{2": 1,
                "4 4?4[4b4{4": 1,
                "5,5l5": 1,
                "6 6b6~6": 1,
                "6I7P7t7{7": 1,
                "7Y8c8": 1,
                "949W9^9": 1,
                ":t:~:": 1,
                ";\";6;": 1,
                ";^<z<": 1,
                "=5=9=?=C=I=[=a=l=": 1,
                ">!?(?t?{?": 1,
                "1,131^1e1": 1,
                "2-242Z2a2": 1,
                "3c3j3": 1,
                "485?5|5": 1,
                "5)61686": 1,
                "6#7*7N7U7{7": 1,
                "8!8@8Z8a8o8": 1,
                "9?9F9o9v9": 1,
                ":C:J:f:": 1,
                ":\";);O;V;z;": 1,
                "<<<C<z<": 1,
                "=_=f=": 1,
                ">0>^>e>": 1,
                "?*?3?x?": 1,
                "*010@0`0": 1,
                "1D1K1": 1,
                "1I2P2": 1,
                "2.353N3U3": 1,
                "4&4Z4a4": 1,
                "5F5M5|5": 1,
                "6:6A6j6q6": 1,
                "697@7Y7`7": 1,
                "868=8f8m8": 1,
                "9J9Q9{9": 1,
                ":E:L:i:p:": 1,
                ";\";);W;^;": 1,
                "<:<A<j<q<": 1,
                "<C=J=c=j=": 1,
                ">@>G>p>w>": 1,
                "?$?T?[?": 1,
                "0M0T0q0x0": 1,
                "161=1k1r1": 1,
                "2%2N2U2~2": 1,
                "2,333`3g3": 1,
                "484?4X4_4k4": 1,
                "5!5m5": 1,
                "6#6*6t6{6": 1,
                "7!7Y7`7": 1,
                "8L8S8z8": 1,
                "8&9-9F9M9": 1,
                "9*:1:Z:a:": 1,
                ";M;T;~;": 1,
                "<O<V<": 1,
                "=1=9=@=d=l=s=": 1,
                ">&>.>5>T>\\>c>": 1,
                ">@?j?q?~?": 1,
                "2 2+2E2N2[2c2l2u2~2": 1,
                "3\"3'3/393L3]3h3u3~3": 1,
                "3:4A4i4p4": 1,
                ";3;:;[;i;};": 1,
                "=,=2=@=Y=": 1,
                "=f>m>": 1,
                "?d?k?": 1,
                "0$040\\0r0y0": 1,
                "1F1X1j1": 1,
                "4!4&474<4H4O4X4t4{4": 1,
                "5%5D5": 1,
                "6G6O6l6z6": 1,
                "7'7F7b7n7}7": 1,
                "7+828": 1,
                "8\"929g9n9": 1,
                ":-:2:c:n:": 1,
                "<-<4<h<": 1,
                "=!=.=I=": 1,
                ">&>?>F>P>": 1,
                "0#0-070<0n0u0": 1,
                "0@1g1n1": 1,
                "2!2+252>2R2q2": 1,
                "3$3.383B3S3o3": 1,
                "4&444@4N4T4f4": 1,
                "5>5N5a5i5": 1,
                "6$656Z6a6n6": 1,
                "787?7P7\\7h7m7r7|7": 1,
                "8$8H8P8W8": 1,
                "9C9M9x9": 1,
                "9.:5:": 1,
                ":];d;": 1,
                "<@<G<": 1,
                "=B=I=t={=": 1,
                "= >'>I>P>": 1,
                "191@1d1k1": 1,
                "1!2(2Y2`2": 1,
                "2 3'3N3U3": 1,
                "3.4:4F4`4": 1,
                "5(5y5": 1,
                "5%6N6Z6h6": 1,
                "9'9/9?9G9t9": 1,
                ":G:O:U:": 1,
                "; ;-;b;i;": 1,
                "<G<c<j<": 1,
                ">F>M>s>z>": 1,
                "?&?`?g?": 1,
                "01080E0\\0u0": 1,
                "0\"1)191": 1,
                "272>2]2d2}2": 1,
                "3!3/3J3Q3w3~3": 1,
                "4D4K4q4x4": 1,
                "5#5N5U5y5": 1,
                "6L6S6y6": 1,
                "7/7Y7`7y7": 1,
                "7#8*8K8b8": 1,
                "859Q9X9}9": 1,
                ":d;k;": 1,
                "<5<<<l<s<": 1,
                "<@=G=l=s=": 1,
                ">,>3>\\>c>": 1,
                "?'?.?": 1,
                "01080k0r0": 1,
                "1B1h1o1": 1,
                "2=2D2j2q2": 1,
                "3%3,3S3Z3": 1,
                "3&4-4P4W4p4w4": 1,
                "535:5c5j5": 1,
                "6B6I6b6i6u6~6": 1,
                "7D7K7w7~7": 1,
                "8%8R8Y8": 1,
                "9>9E9": 1,
                ";&;v;": 1,
                "<r<y<": 1,
                "<;=G=Y=~=": 1,
                ">@>G>x>": 1,
                "?!?P?W?m?u?": 1,
                "0-040z0": 1,
                "0/161": 1,
                "2A2H2": 1,
                "3@3G3z3": 1,
                "434:4a4h4": 1,
                "7^7e7": 2,
                "8M8T8": 2,
                "959<9k9": 1,
                ";#;O;V;": 1,
                ";B<I<b<i<": 1,
                "=I=P=|=": 1,
                "=5><>l>s>": 1,
                "?$?[?z?": 1,
                "-040^0e0": 1,
                "0$1+1D1K1": 1,
                "1+222^2e2": 1,
                "3K3R3|3": 1,
                "5.555": 1,
                "5%6,6d6k6": 1,
                "7&7-7[7b7": 1,
                "808@8G8": 1,
                "9K9R9k9r9": 1,
                ":&:R:Y:": 1,
                ";<;C;q;x;": 1,
                ";!<(<S<p<w<": 1,
                "<A=H=l=s=": 1,
                "=1>8>P>f>": 1,
                "?$?d?k?": 1,
                "0<0C0\\0c0": 1,
                "1C1J1v1}1": 1,
                "1,232c2j2": 1,
                "3p3w3": 1,
                "4/565O5V5": 1,
                "6F6M6": 1,
                "6'7C7J7x7": 1,
                "7C8J8": 1,
                "9\"9[9b9{9": 1,
                ":5:<:r:y:": 1,
                ":$;+;[;w;~;": 1,
                "<;<B<": 2,
                "=!=(=a=h=": 1,
                ">;>B>x>": 1,
                ">+?2?]?y?": 1,
                "0\"1)1U1": 1,
                "1,2H2O2o2v2": 1,
                "3 4'4M4T4j4": 1,
                "5(5/5P5i5x5": 1,
                "6]6d6": 1,
                "7%7;7B7[7b7": 1,
                "8!8E8L8g8l8r8y8": 1,
                "9/969K9l9s9": 1,
                ":>:E:j:q:": 1,
                ";&;B;I;Z;t;{;": 1,
                "<F<M<x<": 1,
                "<1=K=R=j=": 1,
                ">%>;>B>[>b>": 1,
                "? ?2?D?M?V?`?k?": 1,
                "0%0F0M0[0v0}0": 1,
                "1&141=1F1Q1Z1u1|1": 1,
                "262=2K2f2m2{2": 1,
                "3!303K3R3_3u3~3": 1,
                "474>4T4`4": 1,
                "595@5N5W5`5k5t5": 1,
                "5*6F6M6_6g6": 1,
                "7@7G7n7u7": 1,
                "8 8@8G8w8": 1,
                "8!9*939K9|9": 1,
                ":=:D:k:r:": 1,
                ":,;3;^;x;": 1,
                "<*<1<C<K<e<l<|<": 1,
                "<%=>=^=e=v=": 1,
                ">=>d>": 1,
                "?\"?K?R?x?": 1,
                "030:0`0g0u0": 1,
                "2$3+3;3F3h3o3": 1,
                "3(4/4L4n4u4": 1,
                "5#5<5C5S5\\5e5p5y5": 1,
                "6K6T6]6h6q6": 1,
                "7\"7>7E7R7_7": 1,
                "878>8L8h8o8": 1,
                "839:9f9": 1,
                ":&:B:I:": 1,
                ";A;H;": 1,
                ";5<<<": 1,
                "<D=g=s=~=": 1,
                ">$>b>": 1,
                "2<2C2h2": 1,
                "2%3,3[3b3w3": 1,
                "4;4B4\\4v4}4": 1,
                "5!5*5A5]5d5": 1,
                "6\"646E6\\6n6": 1,
                "7\"72787>7K7U7e7o7|7": 1,
                "8&8,82888`8g8~8": 1,
                "9$9,949": 1,
                ":$:>:Z:a:": 1,
                ";3;9;[;b;{;": 1,
                "<$<+<9<J<g<n<": 2,
                "=.=5=": 2,
                ">7>e>": 1,
                "?3?:?S?Z?e?": 1,
                "0\"0?0F0g0p0": 1,
                "1V1f1w1": 1,
                "2#242Q2X2y2": 1,
                "4$4L4": 1,
                "5)515?5S5t5{5": 1,
                "6 646U6\\6w6": 1,
                "7.7L7\\7d7j7": 1,
                "8>8E8": 1,
                "989J9g9": 1,
                ":&:-:>:X:_:|:": 1,
                ";(;5;C;M;V;n;": 1,
                ">\">6>Z>t>": 1,
                "?'?g?n?": 1,
                "(040B0Z0": 1,
                "1\"161g1}1": 1,
                "2E2M2T2": 1,
                "30353>3\\3c3|3": 1,
                "3%4Z4a4n4w4": 1,
                "4)505": 1,
                "5\"6*616U6]6d6": 1,
                "8$8U8\\8": 1,
                ";B;I;y;": 1,
                "<G<N<}<": 1,
                "<H=O=x=": 1,
                "=\">)>\\>c>": 1,
                "?A?H?": 1,
                "0)000^0e0": 1,
                "1 1'1O1V1p1": 1,
                "1g2n2": 2,
                "2!3(3N3U3{3": 1,
                "4c4j4": 1,
                "5O5k5r5": 1,
                "5+626K6R6": 1,
                "7@7G7|7": 1,
                "80878P8l8s8": 1,
                "8-949y9": 1,
                ";\";;;C;Q;m;": 1,
                "<R<Z<": 1,
                "=@=G=U=a=l=}=": 1,
                ">/?6?Z?a?~?": 1,
                "0!0(0U0\\0l0y0": 1,
                "0D1M1": 1,
                "3(363O3W3_3g3r3}3": 1,
                "3*4~5p6w6": 1,
                "828:8H8\\8p8": 1,
                "9#9P9W9g9t9": 1,
                ":&:O:V:": 1,
                ";2;`;g;": 1,
                "<?<F<j<q<": 1,
                "<7=>=U=6?=?": 1,
                "00I0f0r0": 1,
                "161W1^1": 1,
                "2(2/2=2E2_2f2": 1,
                "3*353w3": 1,
                "4\"4<4C4Q4Y4s4z4": 1,
                "5)505G5v5}5": 1,
                "5g6n6": 1,
                "7%7S7Z7": 1,
                "8\"8M8T8": 1,
                "9(9D9K9t9{9": 1,
                ":':.:x:": 1,
                ";R;Y;": 1,
                "<G<N<w<~<": 1,
                "< ='=W=^=": 1,
                "=*>H>O>x>": 1,
                "?+?2?": 1,
                "0$0Y0`0": 1,
                "1w1~1": 1,
                "1!2(2Q2X2": 1,
                "2#3?3F3o3v3": 1,
                "4&4p4w4": 1,
                "5J5Q5": 3,
                "6-646h6o6": 1,
                "6:7V7]7": 1,
                "8,848B8V8m8u8": 1,
                "8?9G9U9i9": 1,
                ":&:.:<:P:": 1,
                ":$;,;3;W;_;f;": 1,
                "<0<}<": 1,
                "<K=R=r=y=": 1,
                ">'>->5>;>@>": 1,
                "?=?D?": 2,
                "0%0B0^0e0": 1,
                "1;1B1": 1,
                "3C3J3": 2,
                "4F4M4": 1,
                "5P5W5": 1,
                "6-646b6i6": 1,
                "667R7Y7": 1,
                "8K8g8n8": 1,
                "8E9L9r9y9": 1,
                "9$:+:Q:X:~:": 1,
                ":!;(;M;T;d;": 1,
                "<Q<W<": 1,
                "=Q=X=": 1,
                ">N>U>h>": 1,
                "?D?K?q?x?": 1,
                "0E0L0q0x0": 1,
                "1B1I1o1v1": 1,
                "1P2W2": 1,
                "32393s3z3": 1,
                "5D5`5g5": 1,
                "5 6'6@6G6": 1,
                "7>7E7z7": 1,
                "8,838F8": 1,
                "8b9~9": 1,
                "9\":):X:_:": 1,
                ";%;Y;`;": 1,
                ";+<G<N<|<": 1,
                "=6===`=|=": 1,
                "?o?v?": 1,
                "050Q0X0": 1,
                "1^1z1": 1,
                "192@2l2s2": 1,
                "3#3L3S3": 1,
                "454<4p4w4": 1,
                "4B5^5e5": 1,
                "5C6L6f6m6{6": 1,
                "71888`8g8": 1,
                "939:9u9|9": 1,
                "9':.:T:[:": 1,
                "; ;N;U;n;u;": 1,
                ";$<+<D<K<l<": 1,
                "=D=`=g=z=": 1,
                "=B>I>x>": 1,
                "0 0W0^0": 1,
                "0n1u1": 1,
                "1,232\\2c2": 1,
                "2+323]3d3": 1,
                "4$4h4o4": 2,
                "5n5u5": 1,
                "6W6^6": 3,
                "8<8C8q8x8": 1,
                "8,939Z9v9}9": 1,
                ":6:=:V:]:": 1,
                ";K;R;": 1,
                "<!<=<D<": 1,
                "= =+=d=k=": 1,
                "> >[>x>": 1,
                "0?0I0W0t0{0": 1,
                "1P1W1": 1,
                "1W3s3z3": 1,
                "454<4T4[4t4{4:5A5Z5a5": 1,
                "6&6F6M6": 1,
                "787?7m7t7": 1,
                "8.858@8\\8c8": 1,
                "8 9'9o9": 1,
                "9A:]:d:": 1,
                ":!;(;p;": 1,
                ";m<t<": 1,
                "<6===": 1,
                "?4?;?t?{?": 1,
                "0(0/0]0d0": 1,
                "3&3A3L3k3r3": 1,
                "4*4G4N4v4}4": 1,
                "5,535L5S5~5": 1,
                "6!6S6Z6": 1,
                "7R7Y7": 1,
                "8D8K8": 2,
                "9p9w9": 1,
                ":::A:W:~:": 1,
                ";%;,;R;Y;": 1,
                ";%<A<H<q<x<": 1,
                "='=.={=": 1,
                "=(>/>g>n>": 1,
                "?%?|?": 1,
                "0#0O0V0~0": 1,
                "161=1h1": 1,
                "343;3`3g3": 1,
                "5;5B5z5": 1,
                "6>6E6": 1,
                "6(7/7]7d7": 1,
                "8,878": 1,
                "8;9[9b9": 1,
                ":p:w:": 1,
                ":p;w;": 1,
                "<(=/=n=": 1,
                ">%>>>E>n>": 1,
                ">+?2?a?h?}?": 1,
                "0:0A0[0u0|0": 1,
                "1&1/1F1b1i1": 1,
                "2N2U2": 1,
                "3/363\\3c3": 1,
                "5-545V5]5": 1,
                "6:6A6c6j6": 1,
                "7)707[7b7|7": 1,
                "9L9S9": 1,
                "9-:I:P:~:": 1,
                ";A;I;P;n;x;": 1,
                "<+<2<C<j<q<": 1,
                "=+=X=w=": 1,
                ">*>1>B>i>p>": 1,
                "?<?C?i?p?": 1,
                "0*010^0": 1,
                "171S1Z1": 1,
                "3P3W3": 1,
                "3%4,4S4Z4": 1,
                "4@5G5`5g5x5": 1,
                "7*8e8": 1,
                "9(919B9^9e9": 1,
                ":W:s:z:": 1,
                ":=;D;": 1,
                "<%<,<F<`<g<u<": 1,
                "=9=@=v=}=": 1,
                ">K>R>y>": 2,
                ">)?E?L?t?{?": 1,
                "0#0}0": 1,
                "1]1d1": 1,
                "2+222~2": 1,
                "3^3e3": 1,
                "4,434": 1,
                "5 5b5i5": 1,
                "60676": 1,
                "6-747v7}7": 1,
                "8.959w9~9": 1,
                ":3;:;|;": 1,
                "<#<J<Q<": 1,
                "=?=F=": 1,
                "=(>/>V>]>": 2,
                ">6?=?": 1,
                "0&0M0T0": 1,
                "1J1Q1u1|1": 1,
                "262=2m2t2": 1,
                "2:3]3": 1,
                "5:5Q5": 1,
                "5<6C6g6n6": 1,
                "6!7(7\\7c7": 1,
                "8'8I8": 1,
                "969=9a9h9": 1,
                "96:/;": 1,
                "<(=c=j=": 1,
                ">%>/>=>Z>a>": 1,
                "?)?3?=?G?Q?[?e?o?x?": 1,
                "061=1W1": 1,
                "2-242T2i2p2": 1,
                "3@3G3v3}3": 1,
                "4/464P4j4q4": 1,
                "555Q5X5": 1,
                "6#60666>6Y6`6r6": 1,
                "7;7B7{7": 1,
                "8$8B8I8": 1,
                ";3;:;H;d;k;x;~;": 1,
                "=0=7=D=J=R=m=t=": 1,
                ">J>R>": 1,
                "?>?E?m?t?": 1,
                "040M0U0": 1,
                "1*111C1a1h1": 1,
                "2\"2,2:2E2_2f2t2": 1,
                "3$3e3": 1,
                "3E4L4": 1,
                "5)505>5X5_5y5": 1,
                "6)646>6S6x6": 1,
                "7$7+7F7d7k7y7": 1,
                "8@8G8n8u8": 1,
                "9&9,989x9": 1,
                ":+:E:M:U:a:": 1,
                ";N;U;z;": 1,
                "<#=A=j=": 1,
                ">3>q>x>": 1,
                "?5?<?": 1,
                "0Z0a0": 2,
                "0:1A1p1w1": 1,
                "2j2q2": 2,
                "2O3V3}3": 1,
                "30474[4b4": 1,
                "535:5y5": 1,
                "6&636O6V6": 1,
                "777>7P7e7": 1,
                "8,898?8E8a8h8": 1,
                "9;9B9k9r9": 1,
                ":#:A:H:y:": 1,
                ":?;O;V;c;": 1,
                "<&<-<:<@<H<c<j<|<": 1,
                "=(=/=i=q=": 1,
                ">Y>`>p>x>": 1,
                "?#?*?C?J?j?": 1,
                "0!050:0N0U0w0~0": 1,
                "1)181@1E1M1S1": 1,
                "2E3\\3c3|3": 1,
                "3>4E4": 1,
                "5B6K6g6n6": 1,
                "7,7R7Y7f7o7": 1,
                "888?8": 1,
                "9H9O9h9o9": 1,
                ";\";T;[;o;": 1,
                "<4<;<T<[<": 1,
                "<)=0=I=P=[=": 1,
                "=X>_>": 1,
                "40D0N0": 1,
                "2A3H3w3~3": 1,
                "3 4'4N4U4D5N5\\5y5": 1,
                "9&:-:": 1,
                ";?<I<W<t<{<": 1,
                "=&=C=J=": 1,
                ">Y?`?": 1,
                "4,444B4V4w4~4": 1,
                "4,5G5N5[5": 1,
                ":(:7;>;": 1,
                "<'=5=?=C=I=M=Z=g>m>x>": 1,
                "?,?8?A?G?o?": 1,
                "01080o0v0": 1,
                "0 1(1Q1Y1`1l1": 1,
                "2!2(2}2": 1,
                "7*717V7": 1,
                "7W8^8{8": 1,
                "91989u:": 1,
                "<%<0<R<Y<r<y<": 1,
                "<-=;=A=m=w=": 1,
                ">0?7?T?[?": 1,
                "'0.0K0R0x0": 1,
                "0<1C1": 2,
                "2I2P2m2t2e4l4": 1,
                "5C6~6": 1,
                "7!8o8y8": 1,
                ":1:`:": 1,
                "; ;@;`;": 1,
                "=.>5>E>{>": 1,
                ">%?,?N?U?": 1,
                "2>2H2V2s2z2": 1,
                "3G3O3V3{3": 1,
                "4\"4>4L4R4": 1,
                "4.555\\5c5": 1,
                "7 777": 1,
                "7#8*898S8Z8m8": 1,
                ":*:5:^:k:z:": 1,
                ";\";L;S;": 1,
                ";:<A<": 2,
                "<r=y=": 1,
                "1R1Y1": 1,
                "3\"3I3": 1,
                ";\\=v=}=": 1,
                "1H1b1i1z1": 1,
                "252<2o2v2": 1,
                "3%3N3U3": 1,
                "4O4V4": 1,
                "4)505f5m5": 1,
                "5)606I6P6": 1,
                "6$7+7T7[7": 1,
                "898@8k8": 1,
                "8J9Q9j9q9": 1,
                ":E:L:u:|:": 1,
                "; ;X;v;};": 1,
                "<.=5=e=l=": 1,
                ">&>O>V>": 1,
                "?(?/?]?d?": 2,
                "0@0G0p0w0": 1,
                "1U1\\1": 1,
                "6C6J6]6a6i6m6": 1,
                "8=8E8S8q8": 1,
                "9B9I9v9z9": 1,
                ":&:-:B:a:h:": 1,
                ";#;J;Q;": 1,
                "<\"<)<Y<`<": 1,
                ">.>6>D>`>": 1,
                "0+020w0~0": 1,
                "1e1l1": 1,
                "2%2`2g2": 1,
                "3A3K3Y3v3}384B4P4m4t4'5.5#7": 1,
                "9s9z9": 1,
                ">#>1>N>U>m>u>|>": 1,
                "?-?5?<?Y?`?": 1,
                "0+020K0R0q0x0": 1,
                "1'1.1E1": 1,
                "1A2H2": 1,
                "3e3l3": 1,
                "4]4d4": 1,
                "4`5W677": 1,
                "8I8P8": 1,
                "8,939l9s9": 1,
                ":!:O:V:}:": 1,
                ";E;L;": 2,
                "<+<2<f<m<": 1,
                "<8=T=[=": 1,
                ">r?y?": 1,
                "181?1x1": 1,
                "2&2-2[2b2": 1,
                "4 4N4X4f4": 1,
                "6+626L6h6o6": 1,
                "6>7Z7a7": 1,
                "8%8m8": 1,
                "8T9[9": 1,
                "91:8:z:": 1,
                ";!;H;O;": 1,
                ";Q<X<": 1,
                "=D=K=p=w=": 1,
                "1-141^1e1": 1,
                "2)202S2Z2s2z2": 1,
                "3F3M3v3}3": 1,
                "474>4t4{4": 1,
                "5C5J5y5": 1,
                "6M6T6": 1,
                "797@7s7z7": 1,
                "8&9-9O9W9e9y9": 1,
                ":G:N:}:": 1,
                ";Q;X;": 1,
                "<=<D<w<~<": 1,
                "<t={=": 1,
                "><>C>`>|>": 1,
                "?B?I?b?i?": 1,
                "&0-0c0j0": 1,
                "181T1[1i1": 1,
                "2F2M2": 1,
                "4^4e4": 1,
                "5,535": 1,
                "6!6/6K6": 1,
                "7P8W8": 1,
                ";.;5;Y;`;u;": 1,
                "=P=W=p=w=": 1,
                "=7>>>w>~>": 1,
                ">*?1?R?n?u?": 1,
                "0 0'0:0C0]0e0l0": 1,
                "151S1": 1,
                "2(3M3k3": 1,
                "5$5w5": 1,
                "5G6V6": 1,
                "8$8R8n8": 1,
                "9B9H9": 1,
                "9A:I:P:": 1,
                ";$;R;": 1,
                "<T<\\<c<": 2,
                "= =Y=c=q=": 1,
                "2$2,232}2": 1,
                "3i3q3x3": 1,
                "344Y4,535L5S5": 1,
                "6*616X6_6": 1,
                "7#7]7d7": 1,
                "858<8c8j8": 1,
                ":w:~:": 1,
                ";d;~;": 1,
                "<C<J<q<x<": 1,
                "<6=<=c=j=": 1,
                ">C>J>w>~>": 1,
                "?;?B?[?b?": 1,
                "0+020": 1,
                "0\\1x1": 1,
                "1+222g2n2#3": 1,
                "4W4^4": 1,
                "5%5N5U5": 1,
                "6O6V6": 1,
                "7&8B8I8}8": 1,
                "9U9q9x9": 1,
                ":#;*;D;`;g;": 1,
                ";+<2<O<V<": 1,
                "<(=/=L=S=": 1,
                ">+>2>s>z>": 1,
                "0X0_0": 1,
                "1/161F1S1^1": 1,
                "2D2K2m2": 1,
                "3&3C3J3s3": 1,
                "42494p4": 1,
                "4,535\\5c5": 1,
                "6L6S6": 1,
                "6&7-7V7]7": 1,
                "7:8A8n8u8": 1,
                "979>9q9x9": 1,
                ":O:V:": 1,
                ";C;J;h;": 1,
                "=I=P=": 1,
                ">7>>>l>s>": 1,
                "F0P0^0{0": 1,
                "141;1Y1u1": 1,
                "20272Y2`2": 1,
                "3;3B3p3w3": 1,
                "5.555g5n5": 1,
                "6+626w6~6": 1,
                "7 7B7I7": 1,
                "7>8E8n8u8": 2,
                "8`9g9": 1,
                ":@:G:z:": 1,
                ";&;-;m;t;": 1,
                "<$<M<T<": 1,
                "=!=O=V=": 1,
                ">9>@>o>v>": 1,
                ">:?A?j?q?": 1,
                " 0'0X0_0": 1,
                "1E1L1": 1,
                "1 2<2C2q2x2": 1,
                "3d3k3": 1,
                "4\"5)5k5r5": 1,
                "696@6F7M7f7m7": 1,
                "8;8@8": 1,
                "9)9r9": 1,
                ":,:::W:h:~:": 1,
                ";&;L;S;l;s;": 1,
                ";.<K<x<": 1,
                "=%>,>?>[>": 1,
                "0A0G0a0g0": 1,
                "0%1+1K1j1": 1,
                "2%2T2l2t2": 1,
                "2*313>3P3_3": 1,
                "4\"464>4L4e4": 1,
                "5+535A5Z5{5": 1,
                "6-6G6l6s6": 1,
                "7\"7c7j7": 1,
                "8+8N8U8h8u8": 1,
                "9-949": 1,
                ";8;?;{;": 1,
                "<U<\\<": 1,
                ">&>4>L>k>r>": 1,
                ">7?m?u?": 1,
                "0Q0X0y0": 1,
                "1'1.1n1u1": 1,
                "2(2/2N2e2": 1,
                "233:3M3a3z3": 1,
                "4!454T4[4": 1,
                "5#5B5I5~5": 1,
                "6\"606H6g6n6": 1,
                "6%7,7O7W7]7~7": 1,
                "7@8G8": 1,
                ":@:G:n:u:": 1,
                "<L=S=": 1,
                "=5>F>]>": 1,
                "> ?<?C?k?r?": 1,
                "0a0}0": 1,
                "0A1H1": 1,
                "2)303_3f3{3": 1,
                "4#4*4E4c4j4x4": 1,
                "5?5F5m5t5": 1,
                "6B6,7H7O7m7|7": 1,
                "8O8V8m8": 1,
                ";';.;;;G;O;": 1,
                ";S<g<": 1,
                "=$>+>": 1,
                "0N0U0n0u0": 1,
                "171>1X1t1{1": 1,
                "1N2j2q2": 1,
                "2+323w3": 1,
                "3F4b4i4": 1,
                "595@5": 2,
                "6#6b6i6": 1,
                "7/767": 1,
                "8<8C8r8y8": 1,
                "989a9h9": 1,
                ": :4:T:_:{:": 1,
                "=0=7=x=": 1,
                ">;>B>t>{>": 1,
                "?S?Z?": 1,
                "%0A0H0v0}0": 1,
                "0'1C1J1~1": 1,
                "2G2c2j2": 1,
                "3 3K3R3o3": 1,
                "5O5V5": 1,
                "7%7G7N7^7f7": 1,
                "8B8I8f8": 1,
                ":&;-;": 1,
                "<M<T<": 1,
                "<-=4=[=b=": 1,
                ">!>(>Y>`>": 1,
                "?,?3?g?n?": 1,
                "90U0\\0": 1,
                "2L3d3": 1,
                "5$5S5k5": 1,
                "6(6W6o6": 1,
                "7\"7/7^7v7": 1,
                "7#8*8|8": 1,
                "8#9*9|9": 1,
                ":!:':D:K:d:k:u:}:": 1,
                ";*;/;8;L;S;l;s;": 1,
                "<(<H<O<h<o<y<": 1,
                "=+=0=9=M=T=m=t=": 1,
                "?8?H?\\?f?": 1,
                "0)000>0J0h0o0": 1,
                "0\\1c1": 1,
                "2^4g4z4": 1,
                "4*5K5R5k5r5$6": 1,
                "7/898C8M8]8o8}8": 1,
                "9&9G9j9u9": 1,
                ":(:~:": 1,
                ";@;z;": 1,
                ":&:?:[:b:u:|:": 1,
                ";!;+;8;N;_;~;": 1,
                "<0<h<": 1,
                "<(=G=N=a=}=": 1,
                ">?>F>`>|>": 1,
                ">R?n?u?": 1,
                "/060{0": 1,
                "141s1": 1,
                "1C2W2s2z2": 1,
                "243;3": 1,
                "494x4": 1,
                "5!5(5\\5c5": 1,
                "536O6V6": 1,
                "7-747h7o7": 1,
                "7:8V8]8": 1,
                "9K9f9m9": 1,
                ":3:<:`:g:": 1,
                ";#;4;H;d;k;~;": 1,
                "<C<_<f<t<~<": 1,
                "=/=8=R=n=u=": 1,
                ">+>5>B>X>i>": 1,
                ">$?*?;?A?J?S?\\?": 1,
                "000L0S0f0m0x0": 1,
                "1@1\\1c1q1{1": 1,
                "2%282?2J2U2k2t2": 1,
                "3!3.3H3": 1,
                "4*4N4j4q4": 1,
                "535:5H5Q5a5w5": 1,
                "666=6P6W6b6m6": 1,
                "7!7.7D7Z7r7": 1,
                "8&898@8K8V8l8u8": 1,
                "9/9E9K9S9Z9b9l9{9": 1,
                ":T;u;M<T<m<t<Z=": 1,
                "2#2I2P2v2}2": 1,
                "3,333": 1,
                "4 4F4M4s4z4": 1,
                "7[8b8": 1,
                "949;9z9": 1,
                ":!;(;P;W;": 1,
                "?4?;?T?[?": 1,
                "E0n0u0": 1,
                "3D4w4~4": 1,
                "5\"6)6b6i6": 1,
                "7B7I7p7w7": 1,
                "8(8/8I8e8l8": 1,
                "8 9>9": 1,
                ":$:+:": 1,
                "<8<?<m<t<": 1,
                "<,=|=": 1,
                "=2>9>{>": 1,
                "?\"?I?P?": 1,
                "5`6g6": 1,
                "707L7S7": 1,
                "8Y8u8|8": 1,
                "8+9E9a9h9": 1,
                ":8:?:": 1,
                ";C;J;": 1,
                "<1<8<f<m<": 1,
                "=$=L=S=m=": 1,
                "=W>^>w>~>": 1,
                "?@?G?": 1,
                "0.050c0j0": 1,
                "181?1e1": 1,
                "1%2,2[2b243`3": 1,
                "4 5'5f5m5": 1,
                "6=7D7a7h7": 1,
                "8.858d8k8": 1,
                "9!9;9W9^9": 1,
                ":8:g:": 1,
                ":-;4;l;": 1,
                "<Q<X<": 2,
                "=.=5=\\=c=": 1,
                ">>>E>_>{>": 1,
                ">9?W?": 1,
                "0b0i0": 1,
                "1Q1X1q1x1": 1,
                "2&3J3": 1,
                "434:4n4u4": 1,
                "4@5\\5c5": 1,
                "6,6H6O6w6~6": 1,
                "8%9A9H9v9}9": 1,
                "9(:D:K:y:": 1,
                ":!;(;": 1,
                ";%<q<": 1,
                ">t>{>": 1,
                "0I1g1": 1,
                "2 2'2@2G2": 1,
                "283w3~3": 1,
                "4 4'4e4": 1,
                "5^5z5": 1,
                "6%6T6[6": 1,
                "7P7W7": 1,
                "7-848[8b8": 1,
                "809|9": 1,
                ":<:C:r:y:": 1,
                "</<C<_<f<": 1,
                "< ='=l=": 1,
                "=.>n>u>": 1,
                "1C1J1": 1,
                "21282f2m2": 1,
                "393f3": 1,
                "4 4<4C4t4{4": 1,
                "5:5f5z5": 1,
                "6\"7)7}7": 1,
                "848;8X8t8{8": 1,
                "889V9": 1,
                "9.:5:t:{:": 1,
                ";?;F;": 1,
                "=m=t=": 1,
                ">J>e>": 1,
                ">;?B?[?b?": 1,
                "80?0e0^1": 1,
                "7A:]:d:w:U;": 1,
                "<==D=": 1,
                "=.>5>": 1,
                "1/161{1": 1,
                "8 8'8O8V8p8": 1,
                "9+:2:q:x:": 1,
                ";<;C;": 1,
                "<!<X<h<o<": 1,
                "=!=`=g=": 1,
                ">+>2>": 1,
                "?:?A?^?e?": 1,
                "2#2=2Y2`2": 1,
                "4]4y4": 1,
                "4:5A5": 1,
                "7W7^7": 1,
                "7\"8)8": 1,
                "9.959i9p9": 1,
                "9;:W:^:": 1,
                ":9;U;\\;": 1,
                "<b<~<": 1,
                "<<=X=_=": 1,
                "> >e>": 1,
                ">??[?b?": 1,
                "0#0h0": 1,
                "0[1w1~1": 1,
                "182?2": 1,
                "474>4r4y4": 1,
                "6%6Y6`6": 1,
                "6+7G7N7|7": 1,
                ":::Q:q:": 1,
                ";1;8;g;n;": 1,
                ";*<><Z<a<": 1,
                "=\"=g=": 1,
                "=,>I>e>l>": 1,
                "?<?C?": 1,
                "&0-0l0s0": 1,
                "171>1": 1,
                "2,232m2t2": 1,
                "7'7/777A7H7^7": 1,
                "7*818J8Q8n8u8": 1,
                "9;9B9P9j:q:": 1,
                ":;;B;": 1,
                ";K<R<": 1,
                "<7=>=e=l=": 1,
                ">7>>>": 1,
                "0R1|1": 1,
                "2#2a2": 1,
                "4 4k4r4": 1,
                "7u7|7": 1,
                "7q8{8": 1,
                "<1<8<r<y<)=0=": 1,
                ">\">Q>X>": 1,
                "?q?x?": 1,
                "W0a0o0": 1,
                "2e3l3": 1,
                "3 4*484U4\\4v4": 1,
                "71787V7": 1,
                "8$828O8V8": 1,
                "8)9:9H9S9i9": 1,
                ";$;+;p;w;": 1,
                ";`=g=": 1,
                ">9>@>": 1,
                "050<0o0": 1,
                "1v1}1": 1,
                "2$3.3<3Y3`3'4C4J4": 1,
                "4m6t6": 1,
                "777>7p7": 1,
                "818O8V8o8v8": 1,
                "8\"9)9X9_9": 1,
                ":<:X:_:": 1,
                ";F;b;i;": 1,
                ">r>y>": 1,
                "0]1d1": 1,
                "2b3i3": 1,
                "3O5Y5g5": 1,
                "50676f6m6": 1,
                "6!7(7": 1,
                ":):F:M:": 1,
                ";@;G;j;": 1,
                "2?3F3m3t3+555C5`5g5'7y7": 1,
                "<_=f=": 1,
                "0S0Z0": 1,
                "1O2V2x3": 1,
                "595@5l6": 1,
                "7E7Z7": 1,
                "?,?Y?": 1,
                "0A0S0]0g0q0": 1,
                "0F1_1": 1,
                "2#2<2X2g2~2": 1,
                "2\"3i3v3": 1,
                "4)5b5i5": 1,
                "6G7N7u7|7": 1,
                ";!;[;b;": 1,
                "<.<5<g<": 1,
                "<2=C=N=f=": 1,
                "=)>N>]>": 1,
                ">,?3?": 1,
                "0;0B0": 1,
                "3Q4[4i4": 1,
                "7O8c8~8": 1,
                ";(=.=": 1,
                "0^0e0": 1,
                "1*212": 1,
                "3$4+4": 1,
                "7%8,8c8y8": 1,
                "9(9/9a9}9": 1,
                ":t:{:": 1,
                "< <G<N<r=|=": 1,
                "?\"???F?": 1,
                "0&0,0": 1,
                "0>1\\1": 1,
                "20373P3W3": 1,
                "484?4": 2,
                "5(5z5": 1,
                "6$6C6&7C7J7": 1,
                "8%868P8W8t8": 1,
                "9 9-9;9E9J9h9": 1,
                ":%:D:K:u:~:": 1,
                "%0,0a1": 1,
                "2$2>2E2b2~2": 1,
                "3)33383]3y3": 1,
                "4:4A4e4n4": 1,
                "6 6=6D6": 1,
                "8,8I8P8q8": 1,
                ";.;5;\\;q;": 1,
                ";Y<c<q<": 1,
                "=!>(>W>^>": 1,
                "2F3b3i3w3": 1,
                "494@4U4b4m4w4": 1,
                "5$5+595J5g5n5": 1,
                "6.656t6": 1,
                "71787g7n7": 1,
                "8&8A8_8f8t8": 1,
                "9;9B9i9p9": 1,
                ":+:I:P:^:o:": 1,
                ":%;,;S;Z;": 1,
                "=!=~=": 1,
                ">#>y>": 1,
                ">\"?)?[?w?~?": 1,
                "=0D0k0r0": 1,
                "3l4}4": 1,
                "5'6.6": 1,
                "7=8D8s8z8": 1,
                ";v;};": 1,
                "'0.0U0\\0P2": 1,
                "3D4^4g4": 1,
                "425N5U5c5}5": 1,
                "5%6,6A6N6Y6c6h6z6": 1,
                "7)707>7O7l7s7": 1,
                "838:8": 2,
                "9\"9P9W9": 1,
                ":9:@:[:y:": 1,
                "; ;';U;\\;": 1,
                ">L?S?": 1,
                "0R0\\0j0": 1,
                "182?2f2m2": 1,
                "4,535V5": 1,
                "6G7N7": 1,
                "7B8T8 9'9": 1,
                "93:::": 1,
                ":B;I;x;": 1,
                "; <'<Y<v<}<": 1,
                "<&=-=_=f=": 1,
                ">1>8>F>O>m>t>": 1,
                ">/?6?]?d?": 1,
                "0:0A0q0x0": 1,
                "21282I2R2s2z2": 1,
                "3`4g4": 1,
                "6B6]6d6u6~6": 1,
                "8+8H8O8": 1,
                "8j9t9": 1,
                ":):7:T:[:": 1,
                "<u<|<": 1,
                "?;?B?c?": 1,
                "0$0q0": 1,
                "1[1e1s1": 1,
                "2,232": 1,
                "5$5A5H5": 1,
                "8(8/8\\8c8": 1,
                "9a9v9a:": 1,
                ";X<b<p<": 1,
                "=H=O=": 1,
                "?$?~?": 1,
                "12191}1": 1,
                "1m2t2": 1,
                "2\"3)3": 1,
                "829d9": 1,
                "9.:;;B;T;w;~;": 1,
                "</<@<Q<a<m<": 1,
                "=+=B=V=z=": 1,
                "?/?6?": 1,
                "1S1Z1s1z1": 1,
                "1Y2`2": 1,
                "3)333<3G3Y3c3q3": 1,
                "41484R4n4u4": 1,
                "5%5-5Z5v5}5": 1,
                "646;6\\6e6|6": 1,
                "7Y7s7": 1,
                "80878f8m8": 1,
                "9*9H9O9]9n9": 1,
                "9$:+:R:Y:": 1,
                ";*;$<8<G<U<u<|<": 1,
                "=t=|=": 1,
                ">!>1>8>Q>X>|>": 1,
                "?-?4?F?Y?`?y?": 1,
                "1I1P1": 1,
                "2+2E2L2g2": 1,
                "3,333a3h3": 1,
                "5#6*6D6^6e6": 1,
                "7M7T7": 1,
                "758<8U8\\8\"9)9B9I9": 1,
                ":I:P:": 1,
                ";9;S;Z;u;": 1,
                "<:<A<o<v<": 1,
                "=)>3>A>^>e>": 1,
                "?&?T?[?": 1,
                "0+0E0L0g0": 1,
                "2=2Y2`2n2": 1,
                "30373L3Y3d3n3": 1,
                "4$424C4`4g4": 1,
                "5'5.5X5^5m5s5": 1,
                "6%6>6E6": 1,
                "7!7/7I7P7j7": 1,
                "8%8/84898": 1,
                "9\"9<9C9^9|9": 1,
                ":#:*:X:_:": 1,
                ":\";);B;I;Z;": 1,
                "<!<?<F<T<e<": 1,
                "=\"=I=P=": 1,
                "070J0\\0d0r0x0|0": 1,
                "2$2+2O2W2^2": 1,
                "3E4L4j4q4": 1,
                "5%5x5": 1,
                "7T7[7t7{7": 1,
                "839:9L9": 1,
                ":1:9:@:_:g:n:": 1,
                "=;=B=k=": 1,
                "?%?>?E?g?n?": 1,
                "060=0a0h0": 1,
                "1#1)131:1D1N1X1b1l1v1": 1,
                "2#2*2A2H2a2h2": 1,
                "3B3K3_3": 1,
                "4 4*4B4d4": 1,
                "6%7,7": 1,
                ":&:U:\\:": 1,
                ";/;6;": 1,
                ";C<M<[<x<": 1,
                "=)=7=T=[=~=": 1,
                ">\">)><>C>N>Y>o>{>": 1,
                "?#?'?-?1?7?A?K?f?": 1,
                "1/161": 2,
                "2]2r2": 1,
                "4#4*4=4D4O4Z4p4y4": 1,
                "607E7": 1,
                "8\"8)8M8U8\\8": 1,
                "8g9n9": 1,
                "9*:1:h:r:": 1,
                ";>;E;d;l;t;": 1,
                "<B<X<": 1,
                "<L=y=": 1,
                ">6>=>l>s>": 1,
                ">;?C?_?f?": 1,
                "0$0E0N0e0": 1,
                "0/191G1d1k1": 1,
                "1M2T2": 1,
                "3D3K3": 1,
                "6\"6?6F6": 1,
                "8F8M8": 1,
                "9$:+:u:|:": 1,
                ":A;H;w;~;": 1,
                ";G<N<": 1,
                "<B=I=p=w=": 1,
                ">6>P>": 1,
                "#041;132:2i2p2": 1,
                "3.484F4c4j4": 1,
                "4R5Z5b5": 1,
                "6/666\\6": 1,
                "7h7r7": 1,
                "8%8L8h8o8}8": 1,
                "9?9F9[9h9s9}9": 1,
                ":!:?:F:T:e:": 1,
                ":!;(;O;V;": 1,
                ">[>C?^?e?": 1,
                "0)0F0M0": 1,
                "0>1H1V1s1z1": 1,
                "1;2E2S2p2w2": 1,
                "2B3I3~3": 1,
                "32494": 1,
                "5(565S5Z5t5": 1,
                "61686g6n6": 1,
                "7)7C7J7e7": 1,
                "8*818_8f8": 1,
                "9 9'999z9": 1,
                ":$:,:::D:T:[:e:n:": 1,
                ":`;j;x;": 1,
                ";6<B<H<": 1,
                "=K>f>m>": 1,
                "1&1.2": 1,
                "2P3`3g3": 1,
                "4>4E4t4{4": 1,
                "565=5X5v5}5": 1,
                "6#6*6X6_6": 1,
                "7u8R9": 1,
                ":.:4:::@:O:": 1,
                ":W;a;o;": 1,
                "<#<^<": 1,
                "=(=6=S=Z=": 1,
                "0!1(1W1^1": 1,
                "1)202_2f2": 1,
                "2!3(3O3V3": 1,
                "4$4A4H4d4": 1,
                "6@7F7": 1,
                ";,;3;Q;X;u;|;": 1,
                "<9<@<P<X<o<": 1,
                "E0[0b0i0p0": 1,
                "1&1,10161:1@1J1T1]1v1": 1,
                "2:2Z2b2j2r2": 1,
                "3$3(3.32383B3L3U3n3": 1,
                "4A4N4_4o4": 1,
                "6<6a6i6p6": 1,
                "8*888F8c8j8~8": 1,
                "829<9J9g9n9": 1,
                ":\":?:F:Z:": 1,
                ";&;C;J;": 1,
                "=-=J=Q=": 1,
                "= >`>": 1,
                "3?4F4w4~4": 1,
                "4)505a5h5": 1,
                "7D7p7": 1,
                "<;<B<i<p<": 1,
                "=]>c>": 1,
                "0?0F0": 1,
                "0;1B1r1y1": 1,
                "5'6.6U6\\6": 1,
                "8\"9)9Y9`9": 1,
                "<(=/=V=]=": 1,
                ">3>:>a>h>": 1,
                "]0g0u0": 1,
                "4\"4R4Y4": 1,
                "4C5b5i5": 1,
                "9+:1:": 1,
                "</<6<": 1,
                "2q3x3": 1,
                "4:4A4Z4a4": 1,
                "5+525V5]5": 1,
                "5K6R6w6": 1,
                "8K8z8": 1,
                "8<9F9T9q9x9": 1,
                ":2:9:": 1,
                ";&;-;p;z;": 1,
                "=<=C=v=}=": 1,
                ">*?1?`?g?": 1,
                "0&0V0]0": 1,
                "1{2w3": 1,
                "364k4u4": 1,
                "4C5M5[5x5": 1,
                "7X7_7": 2,
                "72898n8u8": 1,
                "82999`9g9": 1,
                ":>:H:V:s:z:": 1,
                ";\\;c;": 1,
                ";#<*<X<_<": 1,
                ">$>s>z>": 1,
                "? ?U?\\?": 1,
                "1K2R2": 1,
                "3=3D3t3{3": 1,
                "4s4z4": 1,
                "4.555": 1,
                "52696`6g6": 1,
                "9H9O9": 1,
                ";E;O;];z;": 1,
                ";-<4<c<j<": 1,
                "<(=/=d=k=": 1,
                "?A?H?w?~?": 1,
                "A0H0}0": 1,
                "0?1F1m1t1": 1,
                "42494p4z4": 1,
                "6)606u6": 1,
                "6Y7t7{7": 1,
                "<+<H<O<": 1,
                "=T>^>l>": 1,
                ">3?=?K?h?o?": 1,
                "0=1G1U1r1y1": 1,
                "22393R3Y3": 1,
                "7 7Z7": 1,
                "959<9": 1,
                ":%:T:[:": 1,
                "1h1o1": 1,
                "1%2@2G2": 1,
                "3l3v3": 1,
                "484s4": 1,
                "4P6W6": 1,
                ":/;5;": 1,
                "<7=A=O=l=s=": 1,
                "=:>V>]>": 1,
                "? ?'?U?\\?": 1,
                "0(090b0k0t0}0": 1,
                "101W1": 1,
                "3,434": 1,
                "585?5": 1,
                "6&656L6": 1,
                ">d>v>": 1,
                ">L?V?d?": 1,
                "3F4M4t4{4": 1,
                "526<6J6g6n6": 1,
                "7,7I7P7": 1,
                "7)808_8f8": 1,
                "8'9.9U9\\9": 1,
                "9D:N:\\:y:": 1,
                "=\">,>:>W>^>": 1,
                ">q?{?": 1,
                "@0J0X0u0|0": 1,
                "1!1Z1l1": 1,
                "2(2:2L2": 1,
                "3#3<3L3^3p3": 1,
                "454E4W4i4{4": 1,
                "5)5B5R5k5{5": 1,
                "6'676I6x6": 1,
                "7#7@7G7T7f7x7D8h8": 1,
                ":O;V;y;}<4=>=L=i=p=": 1,
                "=w>~>": 1,
                ":0B0I0h0p0w0": 1,
                "1/161X1_1#2[2c2j2": 1,
                "3?3G3N3r3z3": 1,
                "4*444B4_4f4": 1,
                "5#5Z5a5": 1,
                "6.656\"7*717U7]7d7": 1,
                "808d8k8": 1,
                "969=9V9]9": 1,
                ";=;D;a;h;x<": 1,
                "<T?\\?c?": 1,
                "0)000": 1,
                "0.181F1c1j1": 1,
                "3 3.3K3R3": 1,
                "5:5D5R5o5v5": 1,
                "6O7Y7g7": 1,
                ";7;H;w;": 1,
                "<\"<Q<~<": 1,
                "<+=T=e=": 1,
                "?E?L?r?y?": 1,
                ":f;m;": 1,
                "?5?<?^?e?": 1,
                "040;0]0d0": 1,
                "1F1M1o1v1": 1,
                "1!2(2W2^2": 1,
                "363=3q3x3": 1,
                "3%4,4J4Q4u4": 1,
                "5,565D5a5h5": 1,
                "8.858K9R9": 1,
                "9A:G:L:R:W:]:b:h:m:s:x:~:": 1,
                ";#;(;.;3;9;>;D;I;O;T;Z;_;e;j;p;u;{;": 1,
                "< <%<+<0<6<;<@<E<J<O<T<Y<^<c<h<m<r<w<|<": 1,
                "=\"=(=-=3=8=>=C=I=N=T=Z=^=e=": 1,
                "?+?U?": 1,
                "0!0>0": 1,
                "1&1p2z2": 1,
                "2E3K3M4S4": 1,
                "6&6-6L7S7l7s7": 1,
                "7A8K8Y8v8}8": 1,
                ":*:G:N:b:r:y:F;P;^;{;": 1,
                "> >O>V>o?v?": 1,
                " 0(0/0S0[0b0": 1,
                "1/1K1g1": 1,
                "2+2G2c2": 1,
                "3'3C3_3{3": 1,
                "404P4p4": 1,
                "505P5p5": 1,
                "606P6p6": 1,
                "707P7V7d7q7~7": 1,
                "8$8-868?8H8Q8Z8c8l8u8": 1,
                "969;9V9[9v9{9": 1,
                ":6:;:V:[:v:{:": 1,
                ";6;;;V;[;v;{;": 1,
                "<1<O<m<": 1,
                "=!=?=]={=": 1,
                ">/>M>k>": 1,
                "?=?[?y?": 1,
                "0D0N0\\0y0": 1,
                "0k1\\2f2t2": 1,
                "3\"3)354b5r5y5": 1,
                "7!7>7E7": 1,
                "<@=H=O=n=v=}=": 1,
                "?'?D?K?": 1,
                "4T5u5": 1,
                "6,6I6P6y6": 1,
                "=/=5=P=V=q=w=": 1,
                ">7>=>X>^>y>": 1,
                "?!?9???Q?W?i?o?": 1,
                "1#1*1[1e1s1": 1,
                "2\"2,2:2W2^2": 1,
                "3E3O3]3z3": 1,
                "324L4": 1,
                "4C506": 1,
                "7^8:9": 1,
                ">A?K?Y?v?}?": 1,
                "00Q0A1*213v3|3": 1,
                "4=4D4g4n4": 1,
                "5,5I5P5": 1,
                "596@6]6d6": 1,
                "8p8x8": 1,
                ":(;X;_;x;": 1,
                "8\\9f9t9": 1,
                "9%:b:": 1,
                ":3;;;B;f;n;u;": 1,
                "<<<C<\\<c<": 1,
                "=R=Z=a=": 1,
                ">&>->Q>Y>`>": 1,
                "?%?,?P?X?_?": 1,
                "7;7o7": 1,
                "<%<Y>Q?": 1,
                "1-223": 1,
                "3\"4*414U4]4d4": 1,
                "4C5=6D6]6d6{6": 1,
                "6>7_7}7": 1,
                "848;8O8r8y8": 1,
                "9)909P9W9": 1,
                ">*>1>=>D>P>W>c>j>v>}>": 1,
                "?$?3?": 1,
                "0j283": 1,
                "7C7S7X7]7b7h7l7s7|7": 1,
                "829;9H9W9b9h9l9|9": 1,
                ":]:0;": 1,
                "<`<{<": 1,
                "<[=w=~=": 1,
                ">G>e>l>|>": 1,
                "?'?Y?`?p?": 1,
                "1\"1g1n1": 1,
                "2Y2`2": 1,
                "3|3m4": 1,
                "3\"4K4J5Q5b5": 1,
                "7)707A7Q7V7`7n7": 1,
                ":g;w;|;": 1,
                "?B?r?": 1,
                "0/090N0[0": 1,
                "1\"1,1=1K1U1c1q1|1": 1,
                "4(4c4": 1,
                "4|5 6.6T6z6": 1,
                "7#7-757>7K7X7_7k7x7~7": 1,
                "8s8z8": 1,
                ";#;*;S;Z;t;": 1,
                "<;<_<": 1,
                "<`=l=": 1,
                "=\">/>e>r>": 1,
                "0&0,0Q0W0(1C1J1j1q1": 1,
                "<6===V=]=z=": 1,
                ">#?C?J?": 1,
                "0!0P0l0s0": 1,
                "8@8G8z8": 1,
                "8?9y9": 1,
                ":C;J;n;": 1,
                ";\\>c>": 1,
                "4T5v5~5": 1,
                "6,6d8l8s8": 1,
                "8*;1;": 1,
                "0]3d3": 1,
                "8#8/8s8": 1,
                "=)>0>e>l>A?": 1,
                "3!3H3P3W3c3": 1,
                "4)4P4X4_4k4": 1,
                "5%515X5`5g5s5": 1,
                "6&6-696`6h6o6{6": 1,
                "7A8\\8c8L9g9n9": 1,
                ":Q:l:s:": 1,
                "1n2S4Z4s4z4": 1,
                "4 5B5I5": 1,
                "6)6H6P6": 1,
                "777>7": 1,
                "7&8-8c8": 1,
                ":.;5;N;U;": 1,
                "<0<7<": 1,
                "< >6>=>V>]>t>": 1,
                ">B?}?": 1,
                "0%0,0j0q0": 1,
                "1 191@1b1": 1,
                "1v2}2": 1,
                "2@3G3": 1,
                "51585": 1,
                "6%6/696O6[6d6m6u6z6": 1,
                "717H7[7c7y7": 1,
                "8a8q8w8}8": 1,
                "9\"9)9B9I9T9]9n9t9": 1,
                "9B:I:q:x:": 1,
                ":=;D;l;s;": 1,
                ";(</<W<^<": 1,
                "='=0=9=X=h=": 1,
                ">\">P>": 1,
                "?2?I?Q?_?x?": 1,
                "10171D1p1w1": 1,
                "2l2v2": 1,
                "3\"3t3~3": 1,
                "3s4}4": 1,
                "5!6~6": 1,
                "7:8A8Z8a8": 1,
                "8w9~9": 1,
                ":G:N:n:u:": 1,
                ":2;N;U;": 1,
                "<f=p=~=": 1,
                ">.>5>C>": 1,
                "?)?7?T?[?": 1,
                "4<5y5": 1,
                "6(6:6A6H6M6X6n6u6": 1,
                "8/8;8": 1,
                ":\\;n;": 1,
                "</=@=O=f=": 1,
                "=6>=>D>V>g>": 1,
                ">#?A?G?P?U?": 1,
                "0R0f0k0u0": 1,
                "1C1w1": 1,
                "2;2B2U2\\2g2r2": 1,
                "3%333?3R3Y3r3y3": 1,
                "4(4V4m4": 1,
                "5=5p5": 1,
                "536;6G6": 1,
                "7$7=7D7e7": 1,
                "8,868J8Q8j8q8": 1,
                "839t9": 1,
                "9T:`:r:z:": 1,
                ";\";1;;;W;^;l;v;": 1,
                ";M<b<i<": 1,
                "=$=+=6=]=d=}=": 1,
                ">4>;>F>U>j>q>": 1,
                ">:?U?\\?p?": 1,
                "0]0k0|0": 1,
                "021B1U1": 1,
                "3#3-373>3E3L3S3Z3a3h3r3z3": 1,
                "4\"4*40474=4D4J4S4`4i4t4": 1,
                "5\\5i5{5": 1,
                "6)666Q6W6k6s6y6": 1,
                "7'727?7G7R7_7p7": 1,
                "8%848A8I8T8c8p8": 1,
                "9.959@9M9X9_9j9r9~9": 1,
                ":!:(:3:8:C:R:_:l:r:}:": 1,
                "; ;(;0;;;Y;l;r;};": 1,
                ";$<B</=H=o=": 1,
                ">'>/>4>D>O>T>d>o>t>": 1,
                "?*?@?O?k?p?": 1,
                "0#000<0C0X0_0x0": 1,
                "1.1<1E1Q1X1e1n1~1": 1,
                "2*262=2G2T2j2x2": 1,
                "3!3,363B3I3V3b3i3u3z3": 1,
                "4#464;4X4]4m4r4": 1,
                "5$5)585": 1,
                "6#606:6Y6r6": 1,
                "767E7M7_7t7": 1,
                "808:8w8": 1,
                "8$9I9Q9c9r9": 1,
                ":Z:b:t:": 1,
                ";&;S;": 1,
                "<\"<-<6<p<x<": 1,
                "=#=+=<=P=V=\\=f=o=": 1,
                "> >3>8>K>P>c>h>{>": 1,
                "?)?6?G?Y?}?": 1,
                "070?0Q0c0": 1,
                "1C1b1g1v1": 1,
                "2$2-2C2Q2[2": 1,
                "3(3:3A3L3g3n3x3": 1,
                "4'444F4P4s4": 1,
                "50575B5L5Q5^5e5p5": 1,
                "6J6R6\\6p6{6": 1,
                "777D7Q7_7s7|7": 1,
                "7#8+8P8z8": 1,
                "959`9": 1,
                ":%:e:k:{:": 1,
                "; ;&;*;0;4;:;>;D;H;N;R;X;\\;b;i;p;w;": 1,
                ";#<G<b<f<l<v<": 1,
                "<T=i=z=": 1,
                ">)>2>:>H>`>k>t>": 1,
                "?,?3?9?@?O?a?h?m?r?}?": 1,
                "0B0R0^0i0s0": 1,
                "1(161=1V1\\1h1r1": 1,
                "2$2.2;2E2`2r2": 1,
                "31393P3\\3v3|3": 1,
                "4\"4+43484>4D4I4N4S4Z4_4n4y4": 1,
                "5(535D5[5r5|5": 1,
                "7(7f7m7t7": 1,
                "8=9^9y9": 1,
                "<.<<<R<Z<b<j<r<{<": 1,
                "=+=5=F=": 1,
                ">#>*>=>R>e>": 1,
                "2<2M2m2": 1,
                "3#3*3W3^3": 1,
                "4(4/4P4": 1,
                "4)5:5v5}5": 1,
                "6)6`6t6{6": 1,
                "7%7x7": 1,
                "7-848`8": 1,
                ":Z:z:": 1,
                ";^;e;s;": 1,
                ";$<-<><u>L?v?": 1,
                "0*010@0P0g0": 1,
                "1*1C1^1n1": 1,
                "212f2": 1,
                "373S3^3|3": 1,
                "404?4S4^4|4": 1,
                "545q5": 1,
                "6#6=6O6d6|6": 1,
                "7$8-858J8R8f8": 1,
                "9\"9+9`9i9": 1,
                ":):3:?:J:X:v:": 1,
                ":D;d;k;x;": 1,
                "<'<3<<<]<h<o<{<": 1,
                "=J=y=": 1,
                "=,>W>y>": 1,
                ">&?5?Z?j?": 1,
                "0%0/0G0Z0s0": 1,
                "1$1/1K1`1n1": 1,
                "2!2\\2c2s2|2": 1,
                "3'373>3V3": 1,
                "4\"494Y4y4": 1,
                "5D5K5": 1,
                "6'61696B6L6V6e6t6": 1,
                "707G7\\7m7": 1,
                "8F8R8": 1,
                ";%;1;y;": 1,
                "<8<P<": 1,
                "='=2=d=p=": 1,
                "=!>&>->4>;>B>I>P>W>^>e>l>s>z>": 1,
                "?A?_?i?t?": 1,
                "G0X0r0": 1,
                "0*1d1": 1,
                "2*2N2g2": 1,
                "3\"3+343>3e3r3": 1,
                "444J4S4]4q4|4": 1,
                "4:5U5\\5u5": 1,
                "6!626E6L6R6Y6`6": 1,
                "8&808v8": 1,
                "829L9]9": 1,
                ":!:<:^:": 1,
                ";(;Q;": 1,
                "<'=j=": 1,
                "=8>I>": 1,
                "?!?,?_?": 1,
                "0(010F0R0^0f0o0y0": 1,
                "0'1D1I1v1": 1,
                "8O8c8~8": 1,
                "9<9u9": 1,
                ":J:{:": 1,
                "<b<w<": 1,
                "=0>F>": 1,
                "0$0/060?0H0U0b0o0|0": 1,
                "1\"171l1v1": 1,
                "2E2W2k2|2": 1,
                "2&363l3": 1,
                "5%5A5H5R5b5h5m5": 1,
                "5%6.6@6J6v6": 1,
                "7&717B7W7]7g7": 1,
                "8;8D8X8r8y8": 1,
                "9!999c9~9": 1,
                ":(:1:b:m:s:|:": 1,
                "; ;);Z;e;k;t;{;": 1,
                "<-<3<C<V<a<g<": 1,
                "=!=0=;=E=O=U=`=r=": 1,
                "141K1Z1k1z1": 1,
                "2!2^2u2": 1,
                "365=5}5": 1,
                "6(6/6": 1,
                "7R7(868": 1,
                ";;<B<G=N=t={=7>>>": 1,
                "\"0B0b0~0": 1,
                "6D6K6Z6": 1,
                ":>:E:d:v:": 1,
                ";';6;?;N;W;f;o;};": 1,
                "<@<G<m<t<": 1,
                "<8=?=L=o=": 1,
                ">j>q>": 1,
                "?0?h?n?": 1,
                "(0e0t0": 1,
                "0-1M1": 1,
                "70767?7E7r7x7": 1,
                "7^8e8q8": 1,
                ":+:8:?:D:M:X:g:m:": 1,
                ";(;>;m;s;x;": 1,
                "<#<8<M<`<u<|<": 1,
                "=Q=c=l=~=": 1,
                "=2>F>O>X>": 1,
                "?N?`?g?m?s?}?": 1,
                "1,131=1T1[1t1{1": 1,
                "2\"2/252<2C2O2\\2b2j2p2|2": 1,
                "3.3C3P3U3z3": 1,
                "4#4T4j4": 1,
                "5&5:5A5Z5a5v5}5": 1,
                "8;8S8`8n8y8": 1,
                "9G9u9": 1,
                "9U:v:}:": 1,
                ";!;(;A;H;R;h;|;": 1,
                ";!<(<A<H<\\<b<~<": 1,
                "=->4>M>T>`>f>": 1,
                "0<0t0|0": 1,
                "10181?1p1z1": 1,
                "2%2E2L2R2Y2k2{2": 1,
                "<,=4=;=": 1,
                "=*>1>W>^>": 1,
                ">g?z?": 1,
                "0F0M0v0}0": 1,
                "2>2H2[2e2": 1,
                "3$3A3H3": 1,
                "5%5,5W5^5": 1,
                "62696[6b6": 1,
                "737:7": 1,
                "748;8I8b8i8t8": 1,
                "9Z9a9": 1,
                "< <.<K<R<": 1,
                "<[=b=": 1,
                ">F>M>": 1,
                ">,?3?L?S?": 1,
                "01080Q0X0": 1,
                ":%:,:": 1,
                "181E1": 1,
                "4f4q4}4": 1,
                "6#6/686C6L6U6[6g6p6z6": 1,
                "7J7U7": 1,
                "7;8D8": 1,
                "93:::l:": 1,
                ";,;m;": 1,
                ";6<B<Z<": 1,
                "3\"4l4": 1,
                ";5=R>": 1,
                "1E1L1i1p1": 1,
                "1:2A2^2e2": 1,
                "3N3U3r3y3": 1,
                "4!4A4H4e4l4": 1,
                "535:5S5Z5w5~5": 1,
                "6M8#:": 1,
                "0,1u1": 1,
                "2!2=2p2": 1,
                "475W5": 1,
                "7?7F7z7": 1,
                "9#:*:v:}:": 1,
                "<_<f<": 1,
                "=5=<=": 1,
                "1p1w1": 1,
                "1#2*2": 1,
                "3w5~5": 1,
                "6.656`6g6": 1,
                "8 8'8": 1,
                "97<><W<^<": 1,
                "> >9>@>": 1,
                "2[3b3{3": 1,
                "4%4,4": 1,
                ";!;(;": 1,
                " 0S0Z0x0": 1,
                "0b1i1": 1,
                "132:2^2e2": 1,
                "394@4d4k4": 1,
                "5'6.6N6U647;7]7d7": 1,
                "858<8w8~8": 1,
                "9:9A9c9j9Z:a:": 1,
                ":o;v;": 1,
                ";?<G<N<r<z<": 1,
                "0&0J0R0Y0}0": 1,
                "1%1b1i1": 1,
                "272?2F2": 1,
                "2%3/3": 1,
                "9#9*9": 1,
                "9 9I:T:Z<e<": 1,
                "031U1\\1j1U4$5r7": 1,
                "8:9A9Z9a9": 1,
                "9 :P:": 1,
                ":3;;;J;": 1,
                "4O5P6m6": 1,
                "8093>:>W>^>": 1,
                "\"2t2t4@9n9": 1,
                ":\":+;2;a;h;": 1,
                "2,636Y6`6": 1,
                "6:8P8!9": 1,
                "2P3W3": 1,
                "3i4p4+727": 1,
                ";]?h?m?v?{?": 1,
                "4I4P4t4{4": 1,
                "5'5.5Z5a5": 1,
                ";5<d<": 1,
                "=7=?=F=j=r=y=": 1,
                ">6>>>E>i>q>x>": 1,
                "1$1+1": 1,
                "242N2e2|2": 1,
                "2<3D3z3": 1,
                "4;4C4x4": 1,
                "5>5I5S5X5": 1,
                ";7<><[<b<": 1,
                "=H>z>": 1,
                "?v?}?": 1,
                "0U1\\1u1|1": 1,
                "2.252C3": 1,
                "4e4l4": 1,
                "5'6.6\\6c6|6": 1,
                "6Y7`7y7": 1,
                "8>8E8^8e8": 1,
                ">3?:?": 1,
                "5%5G5O5V5u5}5": 1,
                "6.656N6U6o6v6": 1,
                "72797R7Y7s7z7": 1,
                "8Z8a8#9*9B9J9Q9": 1,
                ":3:>:h:l:r:v:}:": 1,
                ";$;+;": 1,
                "<h=o=": 1,
                "=(>/>|>": 1,
                "?&?,?2?C?{?": 1,
                "3^3e3~3": 1,
                "4]4d4Z5": 1,
                "9c:j:": 1,
                ";Z<a<": 1,
                "?,?3?Y?`?": 1,
                "?0F0h0o0": 1,
                "2+222": 1,
                "3-343{3": 1,
                "5 5g5n5": 1,
                "<R>Y>{>": 1,
                ">S?|?": 1,
                "0-040q0x0": 1,
                "2\"2)2W2^2": 1,
                "3%3,3N3U3": 1,
                "4\"4)4N4s4z4": 1,
                "5\"5)5": 1,
                "6$6B6]6q6x6": 1,
                "737L7S7u7|7": 1,
                "8+828": 1,
                "8$9+9M9T9p9": 1,
                "9P;p;": 1,
                "2 262<2": 1,
                "?)?G?v?": 1,
                "1:1^1q1": 1,
                "2?2P2a2": 1,
                "3?4H4}4": 1,
                "9!919=9Q9]9m9": 1,
                "?,?J?y?": 1,
                "1=1a1t1": 1,
                "2E2V2g2": 1,
                "4T4]4": 1,
                "417;7n8": 1,
                ":2:K:W:": 1,
                "0 0&0O0`0l0": 1,
                "1;1A1O1U1": 1,
                "1&2.262>2F2N2V2^2f2n2v2~2": 1,
                "0 0(00080@0H0P0X0`0h0p0x0": 1,
                "1 1(10181@1H1P1X1`1h1p1x1": 1,
                "2 2(20282@2H2P2X2`2h2p2x2": 1,
                "3 3(30383@3H3P3X3`3h3p3x3": 1,
                "4 4(40484@4H4P4X4`4h4p4x4": 1,
                "5 5(50585@5H5P5X5`5h5p5x5": 1,
                "6 6(60686@6H6P6X6`6h6p6x6": 1,
                "7 7(70787@7H7P7X7`7h7p7x7": 1,
                "8 8$8(84888<8H8L8P8\\8`8d8p8t8x8": 1,
                "9$9(9,989<9@9L9P9T9`9d9h9t9x9|9": 1,
                ":(:,:0:<:@:D:P:T:X:d:h:l:x:|:": 1,
                "; ;,;0;4;@;D;H;T;X;\\;`;d;h;l;p;|;": 1,
                "< <$<(<0<4<8<D<H<L<X<\\<`<l<p<t<": 1,
                "= =$=(=4=8=<=H=L=P=\\=`=d=p=t=x=|=": 1,
                ">$>(>,>8><>@>L>P>T>`>d>h>t>x>|>": 1,
                "?D?L?T?\\?d?l?t?|?": 1,
                "0$0,040<0D0L0T0\\0d0l0t0|0": 1,
                "1 181<1T1X1p1t1": 1,
                "1 2$2(2,20242@4": 1,
                "5 5$5054585<5@5D5H5L5d5h5l5t5x5|5": 1,
                "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9h9l9p9t9x9|9": 2,
                "= =$=(=,=0=4=8=<=@=D=H=L=P=T=X=\\=`=d=h=l=p=t=x=|=": 1,
                "> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\\>`>d>h>l>p>t>x>|>": 2,
                "? ?$?(?,?0?4?8?<?@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?|?": 2,
                "0 0$0(0,0004080<0@0D0H0L0P0T0X0\\0`0d0h0l0p0t0x0|0": 2,
                "1@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3": 1,
                "3 4$4(4,40444l5": 1,
                "7 7$7`7d7": 1,
                "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8t8x8|8": 1,
                ": :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:d;": 1,
                "@<D<H<L<P<T<X<": 1,
                " 2$2(2,20242<2@2": 1,
                "4585<5@5D5H5": 1,
                "2$2,242": 1,
                "4(5,50585@5D5": 1,
                "< <$<<<@<D<L<T<X<\\<d<h<$=,=0=4=<=@=": 1,
                "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6": 1,
                "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8": 1,
                "4 5(5,50585<5T5X5\\5d5l5p5": 1,
                "$5,50545<5@5X5\\5`5h5p5t5": 1,
                "3 3(30383@3H3P3X3`3h3l3p3x3": 1,
                "4 4$4(444<4D4H4P4X4\\4d4h4p4t4": 1,
                "4(6064686@6H6P6": 1,
                "7$7(7": 1,
                "h1l1p1t1x1|1": 1,
                "8L<X<`<d<h<l<p<t<x<|<": 1,
                "8H9P9X9": 1,
                "; ;X=": 1,
                ">0>D>d>l>": 1,
                ">0?8?@?H?x?": 1,
                "7 7$7(7,7074787<7@7D7H7L7P7T7X7\\7`7d7h7l7p7t7x7|7": 3,
                "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8": 1,
                "0 0(0": 1,
                "4383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3t3x3|3": 1,
                "3l<p<t<x<|<": 1,
                "$0(0,0004080<0": 1,
                "4H8L8P8T8X8\\8`8": 1,
                "= =$=": 1,
                "447<7D7": 1,
                "3 3(3": 1,
                "8<<<@<D<t<|<": 1,
                "= =(=H=P=X=`=x=": 1,
                ": :(:,:0:8:<:": 1,
                "6 6$6(6": 1,
                "7 7$7(7074787@7D7": 1,
                "446<6D6L6": 1,
                "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4": 2,
                "4X7\\7`7d7h7l7p7t7x7|7": 1,
                "8 8$8(8,8084888<8@8D8H8L8p8t8x8|8": 1,
                "9$9,949<9D9L9T9\\9d9l9t9|9": 1,
                ":$:,:4:<:D:L:T:\\:d:l:t:|:": 1,
                ":4><>D>": 1,
                "?$?,?4?<?": 1,
                "1P3X3": 1,
                ",141<1": 1,
                "7,8084888<8@8D8H8L8P8T8": 1,
                "; ;(;0;8;@;H;P;l;t;|;": 1,
                "7p;t;x;": 1,
                "H4L4P4": 1,
                "5 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5t5x5|5": 1,
                "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6`6d6h6l6p6t6x6|6": 1,
                "8 8$8(8,8084888<8@8D8H8L8P8T8X8\\8`8d8h8l8p8t8": 1,
                ": :$:(:,:0:4:8:<:@:D:H:L:P:T:X:\\:`:d:h:l:p:t:x:|:": 2,
                "<T=X=\\=`=d=h=l=p=t=x=|=": 1,
                "1 1$1(1,1014181<1@1D1H1L1P1T1X1\\1`1d1h1l1p1t1x1|1": 1,
                "2 2$2(2,2024282<2@2D2H2L2P2T2X2\\2`2d2h2l2p2t2x2|2": 2,
                "3 3$3(3,3034383<3@3D3H3L3P3T3X3\\3`3d3h3l3p3": 1,
                "3044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4": 1,
                "<$<4<8<@<P<l<": 1,
                "=0=h=": 1,
                ">,>0>8>d>h>p>x>": 1,
                "?(?D?`?d?l?|?": 1,
                "0$0@0D0L0\\0`0h0": 1,
                "1 1<1X1t1": 1,
                "282T2p2": 1,
                "3$34383@3P3T3\\3l3p3x3": 1,
                "4 40444<4L4P4X4h4l4t4": 1,
                "5,50585H5L5T5d5h5p5`6d6l6|6": 1,
                "7$7(707@7D7L7\\7`7h7x7|7": 1,
                "989T9": 1,
                ":4:8:P:T:l:p:": 1,
                ";0;4;L;P;h;l;": 1,
                "<,<0<H<L<d<h<": 1,
                "=(=,=D=H=`=d=|=": 1,
                ">@>D>\\>`>x>": 1,
                "? ?$?,?<?@?H?X?\\?d?t?x?": 2,
                "0T0X0`0p0t0|0": 1,
                "14181@1P1T1\\1d1l1p1x1": 1,
                "20242L2P2h2l2": 1,
                "3,30383d3h3p3": 1,
                "4(4,444D4H4P4`4d4l4|4": 1,
                "4@5D5L5\\5`5h5x5|5": 1,
                "6<6@6H6X6\\6d6t6x6": 1,
                "7 7(787<7D7T7X7`7p7t7|7": 1,
                "7`<d<l<|<": 1,
                "=$=(=@=D=L=\\=`=h=x=|=": 1,
                "> >$>,><>@>H>X>\\>d>t>x>": 1,
                "? ?(?8?<?D?T?X?`?p?t?|?": 1,
                "0$04080@0P0T0\\0l0p0x0": 1,
                "1 10141<1L1P1X1h1": 1,
                "2,20282H2d2": 1,
                "3(3D3`3d3|3": 1,
                "4$4(4@4D4\\4`4x4|4": 1,
                "5 5$5<5@5X5\\5t5x5": 1,
                "6 686<6T6X6p6t6": 1,
                "7$7P7l7": 1,
                "8 8(80848<8L8P8X8h8l8t8": 1,
                "9,909H9L9d9h9": 1,
                ":(:,:D:H:": 1,
                ";$;(;0;@;D;L;\\;`;h;x;|;": 1,
                "< <$<<<@<H<X<\\<d<t<x<": 1,
                "=8=<=T=p=": 1,
                ">$>4>8>@>P>T>\\>l>p>x>": 1,
                "? ?0?4?<?L?P?X?h?l?t?": 1,
                "0,00080H0L0T0d0h0p0": 1,
                "1(1,141D1H1P1": 1,
                "2$2(202@2D2L2\\2x2|2": 1,
                "54585P5T5\\5l5p5x5": 1,
                "60646<6L6P6X6h6l6t6": 1,
                "<,<0<8<H<L<T<d<h<p<": 1,
                "=(=,=4=D=H=P=`=d=l=|=": 1,
                ">$>(>0>@>D>L>\\>`>h>x>|>": 1,
                "0 080<0T0X0p0t0": 1,
                "14181P1T1l1p1": 1,
                "2 20242<2L2P2X2h2": 1,
                "3,30383H3d3h3p3": 1,
                "4(4,4D4H4`4d4l4|4": 1,
                "5$5(5@5D5\\5`5x5": 1,
                "6 6$6<6@6X6\\6t6x6": 1,
                "7 787<7T7X7p7t7": 1,
                "84888P8T8l8": 1,
                "90949<9L9P9X9h9l9t9": 1,
                ":,:H:d:": 1,
                ";(;,;4;D;`;|;": 1,
                "<$<@<\\<x<|<": 1,
                "= =$=<=@=X=\\=t=x=": 1,
                "> >8><>T>X>p>": 1,
                "?4?P?l?": 1,
                "00040L0P0h0l0": 1,
                "0@3D3L3\\3`3h3x3|3": 1,
                "4 4$4,4<4@4H4X4\\4d4t4x4": 1,
                "5 5(585<5D5T5X5`5p5t5|5": 1,
                "6$64686@6P6T6\\6l6p6x6": 1,
                "7 70747<7L7P7X7h7l7t7": 1,
                "8,80888H8L8T8d8h8p8": 1,
                "9(9,949D9H9P9`9d9l9|9": 1,
                ":$:(:0:@:D:L:\\:`:h:x:|:": 1,
                "; ;$;,;<;@;H;X;\\;d;t;x;": 1,
                "< <(<8<<<D<T<X<`<p<t<|<": 1,
                "=$=,=4=8=@=H=P=T=\\=l=p=x=": 1,
                "> >0>4><>L>P>X>h>l>t>": 1,
                "?,?0?8?H?L?T?d?h?p?": 1,
                "0(0,040D0H0P0`0d0l0t0|0": 1,
                "1$1(101@1D1L1\\1`1h1x1|1": 1,
                "3P3T3": 1,
                "5 50585<5H5X5`5p5x5|5": 1,
                "<0<4<<<L<P<X<h<l<t<": 1,
                "=(>D>`>d>l>|>": 1,
                "?$?@?D?L?\\?`?h?x?": 1,
                "0 0$0<0X0\\0t0x0": 1,
                "1 1(181p1t1|1": 1,
                "242l2p2x2": 1,
                "4@?D?H?L?P?T?X?\\?`?d?h?l?p?t?x?|?": 1,
                "3 3$3(3,383@3D3H3L3P3T3X3\\3h3p3t3x3|3": 1,
                "4 4$4(4,4044484<4@4D4H4L4 5$5(5,5054585<5@5D5H5L5P5T5X5\\5`5d5h5l5p5": 1,
                ": :(:0:8:@:H:P:X:`:h:p:x:": 1,
                "; ;(;0;8;@;H;P;X;`;h;p;x;": 1,
                "< <(<0<8<@<H<P<X<`<h<p<x<": 1,
                "= =(=0=8=@=H=P=X=`=h=p=x=": 1,
                "> >(>0>8>@>H>P>X>`>h>p>x>": 1,
                "0`0d0h0l0p0t0": 1,
                "0 1$1(1,1014181<1@1D1H1": 1,
                "3 4(40484@4H4P4X4`4h4p4x4": 1,
                "3 5t5x5|5": 1,
                "P5T5X5\\5`5d5h5l5p5t5x5|5": 1,
                "6 6$6(6,6": 1,
                "H2d4h4l4p4t4x4|4": 1,
                "4(747@7L7X7d7p7|7": 1,
                "d=h=l=p=t=x=": 1,
                "7 7$7(7,7074787<7@7P7T7X7\\7`7d7h7l7p7t7x7|7": 1,
                "8 8$8(8,8": 1,
                "9 9$9(9,9094989<9@9D9H9L9P9T9X9\\9`9d9t9x9|9": 1,
                ": :$:(:,:0:4:8:<:@:D:H:L:P:": 1,
                "ntoskrnl/fsrtl/filter.c": 1,
                "ntoskrnl/fsrtl/unc.c": 1,
                "iswlower": 1,
                "RtlpDestroyHeapSegment": 1,
                "MmInitializeProcessAddressSpace": 1,
                "VdmpGetVdmTib": 1,
                "HvReleaseFreeCellRefArray": 1,
                "ntoskrnl/fsrtl/filelock.c": 1,
                "HdlspEnableTerminal": 1,
                "HvpRemoveFree": 1,
                "IopEnumerateDevice": 1,
                "lib/sdk/crt/wstring/wcscspn.c": 1,
                "CmpCreateRootNode": 1,
                "ExRemoveHandleTable": 1,
                "ExGetPoolTagInfo": 1,
                "Ki386HandleOpcodeV86": 1,
                "NtOpenDirectoryObject": 1,
                "CmpGetNextName": 1,
                "KeReleaseQueuedSpinLockFromDpcLevel": 1,
                "SeExchangePrimaryToken": 1,
                "ntoskrnl/config/cmhook.c": 1,
                "lib/sdk/crt/wstring/wcsupr.c": 1,
                "CmpDelayDerefKCBDpcRoutine": 1,
                "MiSessionAddProcess": 1,
                "RtlpDphSearchAvailableMemoryListForBestFit": 1,
                "ExQueryPoolUsage": 1,
                "RawCheckForDismount": 1,
                "MmSetSavedSwapEntryPage": 1,
                "NtAlertResumeThread": 1,
                "CmpDoCompareKeyName": 1,
                "Phase1InitializationDiscard": 1,
                "PipAllocateDeviceNode": 1,
                "ntoskrnl/ke/krnlinit.c": 1,
                "ntoskrnl/io/pnpmgr/pnpdma.c": 1,
                "HvpInitializeMemoryHive": 1,
                "PspDeleteProcess": 1,
                "KiProcessDeferredReadyList": 1,
                "NtOpenJobObject": 1,
                "PspInitializeSystemDll": 1,
                "RtlNormalizeProcessParams": 1,
                "ntoskrnl/mm/region.c": 1,
                "DetermineACLSize": 1,
                "MmDumpArmPfnDatabase": 1,
                "CmpCleanUpKcbValueCache": 1,
                "MiRemoveAnyPage": 1,
                "PnpFreeUnicodeStringList": 1,
                "RpnBinaryOperatorAdd": 1,
                "ntoskrnl/include/internal/arch/../i386/intrin_i.h": 1,
                "ntoskrnl/inbv/inbvport.c": 1,
                "strcspn": 1,
                "KiTrap13Handler": 1,
                "_KeEnterGuardedRegion": 1,
                "ntoskrnl/mm/ARM3/../ARM3/miarm.h": 1,
                "ExpIsPoolListEmpty": 1,
                "ExpCheckPoolHeader": 1,
                "CmpFindSubKeyInRoot": 1,
                "RtlDestroyProcessParameters": 1,
                "ExpKdbgExtPool": 1,
                "CmpSortDriverList": 1,
                "KiInitializeTSS2": 1,
                "ntoskrnl/se/acl.c": 1,
                "PrintStackTrace": 1,
                "CmpCmdHiveOpen": 1,
                "CmpIsHiveAlreadyLoaded": 1,
                "PsChargeProcessPageFileQuota": 1,
                "OP_ESreg": 1,
                "MmIsPagePresent": 1,
                "ExfWaitForRundownProtectionRelease": 1,
                "ObReferenceObjectEx": 1,
                "ExpAllocateTablePagedPool": 1,
                "RtlpDphWritePageHeapBlockInformation": 1,
                "ObQueryTypeInfo": 1,
                "IopMountInitializeVpb": 1,
                "KdbpCmdMod": 1,
                "FinalizeBootLogo": 1,
                "ExpGetGlobalAtomTable": 1,
                "SeCheckPrivilegedObject": 1,
                "CmLoadKey": 1,
                "ntoskrnl/mm/ARM3/contmem.c": 1,
                "MmVerifyImageIsOkForMpUse": 1,
                "RtlDebugFreeHeap": 1,
                "RawQueryFsAttributeInfo": 1,
                "OP_0fae": 1,
                "KeSetPriorityAndQuantumProcess": 1,
                "KeSetGdtSelector": 1,
                "CmpSetValueKeyNew": 1,
                "ntoskrnl/fsrtl/oplock.c": 1,
                "MmDeleteRmap": 1,
                "FsRtlWorkerThread": 1,
                "xKdGetAcpiTablePhase": 1,
                "IopCreateEvent": 1,
                "ExfAcquireRundownProtectionEx": 1,
                "KdPortPutByteEx": 1,
                "MiProtectFreeNonPagedPool": 1,
                "InbvPortEnableFifo": 1,
                "RtlEraseUnicodeString": 1,
                "RawClose": 1,
                "DelistKeyBodyFromKCB": 1,
                "ntoskrnl/mm/pagefile.c": 1,
                "RtlpDeCommitFreeBlock": 1,
                "KiEspToTrapFrame": 1,
                "PopFlushVolumeWorker": 1,
                "KeInitializeGate": 1,
                "NtSetHighWaitLowEventPair": 1,
                "ExpInitializeWorkerThreads": 1,
                "xHalSetSystemInformation": 1,
                "MiFindExportedRoutineByName": 1,
                "ntoskrnl/config/cminit.c": 1,
                "KdbpInsertBreakPoint": 1,
                "MiDecrementReferenceCount": 1,
                "KiIpiSignalPacketDoneAndStall": 1,
                "KiSaveProcessorControlState": 1,
                "RtlOpenCurrentUser": 1,
                "SepInitSDs": 1,
                "CmpGetRegistryPath": 1,
                "NtReleaseSemaphore": 1,
                "RtlpPageHeapGetUserInfo": 1,
                "ExpExpandResourceOwnerTable": 1,
                "NtCreateNamedPipeFile": 1,
                "RtlInitializeContext": 1,
                "KiWaitTest": 1,
                "NtCompleteConnectPort": 1,
                "ntoskrnl/io/iomgr/iowork.c": 1,
                "CcRosRequestCacheSegment": 1,
                "ExpVerifyResource": 1,
                "CmpDelayDerefKeyControlBlock": 1,
                "MiDbgDumpAddressSpace": 1,
                "RpnBinaryOperatorEquals": 1,
                "ntoskrnl/ex/sem.c": 1,
                "CmpAcquireTwoKcbLocksExclusiveByKey": 1,
                "MiInitializeSessionIds": 1,
                "MiSpecialPoolCheckPattern": 1,
                "RtlInitNlsTables": 1,
                "memrchr": 1,
                "QSISystemContextSwitchInformation": 1,
                "RtlpFindAndCommitPages": 1,
                "MiAllocatePagesForMdl": 1,
                "MmSetDirtyPage": 1,
                "MiRosUnmapViewOfSection": 1,
                "PpSetCustomTargetEvent": 1,
                "IoGetRelatedTargetDevice": 1,
                "KiChainedDispatch": 1,
                "MmMapViewOfArm3Section": 1,
                "_module_name_from_addr": 1,
                "MmAllocRetrievelDescriptorList": 1,
                "QSISystemVerifierInformation": 1,
                "RosSymCreateFromMem": 1,
                "KiInitMachineDependent": 1,
                "include/reactos/exeformat.h": 1,
                "MiInitSystemMemoryAreas": 1,
                "QSISystemLocksInformation": 1,
                "IopGetBusTypeGuidIndex": 1,
                "KeFreezeAllThreads": 1,
                "ExpWinStaObjectParse": 1,
                "KiIpiGenericCallTarget": 1,
                "RpnBinaryOperatorGreaterThan": 1,
                "KeStartThread": 1,
                "ExpGetPoolTagInfoTarget": 1,
                "MiInitializeMemoryEvents": 1,
                "CmpCompareInIndex": 1,
                "IopUnloadDriver": 1,
                "RtlpDphReturnNodeToUnusedList": 1,
                "RtlDecodePointer": 1,
                "ntoskrnl/ob/obhandle.c": 1,
                "get32s": 1,
                "RtlSetUserValueHeap": 1,
                "RtlpDphAllocateNodeForTable": 1,
                "ntoskrnl/mm/ARM3/../../../lib/rtl/avlsupp.c": 1,
                "InbvReleaseLock": 1,
                "KeQueryBasePriorityThread": 1,
                "streamout_astring": 1,
                "ntoskrnl/ke/gate.c": 1,
                "MiBuildPfnDatabaseZeroPage": 1,
                "LockCompleteCanceledIrp": 1,
                "PsChangeQuantumTable": 1,
                "ObpAllocateObject": 1,
                "PspAssignPrimaryToken": 1,
                "RtlpDphPlaceOnFreeList": 1,
                "RtlpPageHeapFree": 1,
                "MiSubsectionConsistent": 1,
                "CmpGetValueDataFromCache": 1,
                "KiIpiSend": 1,
                "ntoskrnl/ob/obinit.c": 1,
                "IopGetRelatedTargetDevice": 1,
                "QSISystemCrashDumpStateInformation": 1,
                "SepInitializeTokenImplementation": 1,
                "lib/drivers/csq/csq.c": 1,
                "MmUseSpecialPool": 1,
                "KdpSafeWriteMemory": 1,
                "RtlpPageHeapAllocate": 1,
                "IopActionInitChildServices": 1,
                "CmpInitializeSystemHive": 1,
                "RtlpDphFreeVm": 1,
                "SepInitDACLs": 1,
                "lib/rtl/compress.c": 1,
                "_KeInitializeSpinLock": 1,
                "RtlpInsertFreeBlockHelper": 1,
                "NtDelayExecution": 1,
                "KiScanReadyQueues": 1,
                "IopStartDevice": 1,
                "ExpInitializeHandleTables": 1,
                "lib/rtl/time.c": 1,
                "ntoskrnl/io/iomgr/volume.c": 1,
                "lib/sdk/crt/string/stricmp.c": 1,
                "MiInitializeUserPfnBitmap": 1,
                "xHalAllocateMapRegisters": 1,
                "InbvPortGetByte": 1,
                "ntoskrnl/ps/psnotify.c": 1,
                "PspUnhandledExceptionInSystemThread": 1,
                "MiSetSystemCodeProtection": 1,
                "lib/rtl/access.c": 1,
                "IopTraverseDeviceNode": 1,
                "MiRosProtectVirtualMemory": 1,
                "MiSessionCreateInternal": 1,
                "MiInitializePfn": 1,
                "PspCheckProcessList": 1,
                "ntoskrnl/config/cmvalue.c": 1,
                "ntoskrnl/mm/ARM3/mmdbg.c": 1,
                "KeRosDumpStackFrames": 1,
                "lib/cmlib/hivesum.c": 1,
                "ntoskrnl/config/cmsysini.c": 1,
                "KdbpPrintDisasm": 1,
                "xHalLocateHiberRanges": 1,
                "PspComputeQuantumAndPriority": 1,
                "print_operand_value": 1,
                "IopQueryDeviceDescription": 1,
                "KiTrap09Handler": 1,
                "ObFastReplaceObject": 1,
                "NtCloseObjectAuditAlarm": 1,
                "KeI386VdmInitialize": 1,
                "RtlpCreateAtomHandle": 1,
                "ntoskrnl/se/access.c": 1,
                "lib/rtl/../../ntoskrnl/include/internal/se.h": 1,
                "__pwctype_func": 1,
                "ntoskrnl/cache/section/swapout.c": 1,
                "DefaultSetInfoBufferCheck": 1,
                "CmpReportNotify": 1,
                "ntoskrnl/fsrtl/name.c": 1,
                "_atoi64": 1,
                "RtlSetCurrentEnvironment": 1,
                "MmDeletePageFileMapping": 1,
                "_ltow_s": 1,
                "MiSectionPageTableCompare": 1,
                "RtlpValidateSDOffsetAndSize": 1,
                "ExpAllocateExclusiveWaiterEvent": 1,
                "CcFreeCachePage": 1,
                "RtlpDphCompareNodeForTable": 1,
                "ntoskrnl/kdbg/kdb_symbols.c": 1,
                "RtlFirstEntrySList": 1,
                "KdbpCmdFilter": 1,
                "IopSuffixUnicodeString": 1,
                "ObpDeleteEntryDirectory": 1,
                "InbvSetProgressBarSubset": 1,
                "ntoskrnl/fstub/translate.c": 1,
                "KdpInitDebugLog": 1,
                "ExpLockHandleTableEntry": 1,
                "GspQueryThreadStatus": 1,
                "CmpCompareCompressedName": 1,
                "NtCompareTokens": 1,
                "CcRosReferenceCache": 1,
                "format_float": 1,
                "lib/rtl/version.c": 1,
                "MiLoadUserSymbols": 1,
                "IopCheckDescriptorForConflict": 1,
                "KdbpCmdHelp": 1,
                "MiUnmapPageInHyperSpace": 1,
                "ExpFindEntryForThread": 1,
                "SeReleaseLuidAndAttributesArray": 1,
                "ntoskrnl/po/povolume.c": 1,
                "_isctype": 1,
                "MmIsSessionAddress": 1,
                "MmReserveSwapPages": 1,
                "KdbpCmdSet": 1,
                "MmFreeCacheSectionPage": 1,
                "MiInitializeColorTables": 1,
                "NtRemoveIoCompletion": 1,
                "IopStopBootLog": 1,
                "CmpUnlockRegistry": 1,
                "RtlpInitializeHeapSegment": 1,
                "SeCaptureSidAndAttributesArray": 1,
                "MmspAssertSegmentsSorted": 1,
                "PspIsProcessExiting": 1,
                "SSISystemFlagsInformation": 1,
                "NtPrivilegeCheck": 1,
                "LpcpCreatePort": 1,
                "IopGetDeviceObjectFromDeviceInstance": 1,
                "FstubDetectPartitionStyle": 1,
                "KeThawAllThreads": 1,
                "KeQueryRuntimeProcess": 1,
                "CmpCreateKeyControlBlock": 1,
                "CHECK_PAGED_CODE_RTL": 1,
                "PsReturnProcessPageFileQuota": 1,
                "KiTrap00Handler": 1,
                "PopGetSysButton": 1,
                "CmpComputeHashKey": 1,
                "MmMapMemoryArea": 1,
                "KiInitializePcr": 1,
                "MiQueryMemoryBasicInformation": 1,
                "RtlMakeSelfRelativeSD": 1,
                "PspWriteTebImpersonationInfo": 1,
                "HdlspSendStringAtBaud": 1,
                "MmIterateNextNode": 1,
                "SepTokenIsOwner": 1,
                "ntoskrnl/config/i386/cmhardwr.c": 1,
                "MmInitializeMemoryConsumer": 1,
                "IopCreateArcNamesDisk": 1,
                "OP_I64": 1,
                "RtlpCloseHandleCallback": 1,
                "KiInsertTimerTable": 1,
                "PpInitGetGroupOrderIndex": 1,
                "ExSweepHandleTable": 1,
                "KdpCallInitRoutine": 1,
                "SeDefaultObjectMethod": 1,
                "NtSetDefaultUILanguage": 1,
                "ntoskrnl/ex/time.c": 1,
                "MiInitializePfnAndMakePteValid": 1,
                "MiCheckPurgeAndUpMapCount": 1,
                "KdbpReadMemory": 1,
                "FstubCreateDiskEFI": 1,
                "MmCreatePageFileMapping": 1,
                "CmpFreeKeyControlBlock": 1,
                "PspDeleteVdmObjects": 1,
                "MiReleaseSystemPtes": 1,
                "RtlCreateBootStatusDataFile": 1,
                "RtlpAllocAtomTableEntry": 1,
                "DbgkpResumeProcess": 1,
                "NtQueryTimer": 1,
                "ntoskrnl/se/sd.c": 1,
                "lib/sdk/crt/string/mbstowcs_nt.c": 1,
                "CmpSetupConfigurationTree": 1,
                "CmpValueToData": 1,
                "ntoskrnl/ex/efi.c": 1,
                "DbgkMapViewOfSection": 1,
                "ntoskrnl/config/cmmapvw.c": 1,
                "KiVdmOpcodeINTnn": 1,
                "MiDereferenceImports": 1,
                "DisplayFilter": 1,
                "CmpFileRead": 1,
                "SepSidInTokenEx": 1,
                "RawQueryFsVolumeInfo": 1,
                "MiAdjustWorkingSetManagerParameters": 1,
                "RtlpRemoveFreeBlock": 1,
                "IopFreeApc": 1,
                "MmFinalizeSegment": 1,
                "KiTagWordFnsaveToFxsave": 1,
                "ExpWin32kInit": 1,
                "RtlStringCbPrintfExA": 1,
                "NtExtendSection": 1,
                "ntoskrnl/mm/ARM3/pool.c": 1,
                "GspMem2Hex": 1,
                "MmWriteToSwapPage": 1,
                "MmQuitNextSession": 1,
                "lib/rtl/env.c": 1,
                "ExpFreeLowLevelTable": 1,
                "HalpCalculateChsValues": 1,
                "RpnBinaryOperatorMod": 1,
                "__isascii": 1,
                "lib/sdk/crt/wstring/wcsstr.c": 1,
                "PsConvertToGuiThread": 1,
                "ObInitProcess": 1,
                "NtCreateWaitablePort": 1,
                "_ultoa": 1,
                "MiCheckForContiguousMemory": 1,
                "ntoskrnl/ps/security.c": 1,
                "CpInitialize": 1,
                "RtlpAddData": 1,
                "RtlpAllocAtomTable": 1,
                "MmInitializeHandBuiltProcess": 1,
                "RtlpPageHeapDestroy": 1,
                "MiMapPagesInZeroSpace": 1,
                "MiFreeSegmentPage": 1,
                "MmpSectionAccessFaultInner": 1,
                "ntoskrnl/mm/ARM3/session.c": 1,
                "ntoskrnl/mm/marea.c": 1,
                "ObInitSystem": 1,
                "CmpFileWrite": 1,
                "KdbpCliInit": 1,
                "RtlpDphTakeNodeFromUnusedList": 1,
                "MiLocateSubsection": 1,
                "ExfRundownCompleted": 1,
                "ntoskrnl/ps/state.c": 1,
                "MiDeleteVirtualAddresses": 1,
                "KiGetCacheInformation": 1,
                "PspTerminateJobObject": 1,
                "CmpMarkIndexDirty": 1,
                "OP_MMX": 1,
                "CmpCopyCompressedName": 1,
                "IoInitSystem": 1,
                "MiSnapThunk": 1,
                "include/ndk/i386/ketypes.h": 1,
                "RtlDebugReAllocateHeap": 1,
                "IopMountVolume": 1,
                "ExSwapinWorkerThreads": 1,
                "xHalStartMirroring": 1,
                "xHalExamineMBR": 1,
                "KiComputeReciprocal": 1,
                "KeSetAffinityProcess": 1,
                "MiSimpleReadComplete": 1,
                "RtlpDphPlaceOnPoolList": 1,
                "MiProtectVirtualMemory": 1,
                "IopLoadUnloadDriver": 1,
                "CmpGetValueData": 1,
                "PoInitializePrcb": 1,
                "KdbpGetCommandLineSettings": 1,
                "IopTimerDispatch": 1,
                "IopConnectLogPort": 1,
                "HvpAddFree": 1,
                "SSISystemLoadGdiDriverInformation": 1,
                "RtlValidateUnicodeString": 1,
                "_ultow": 1,
                "NtCreateSemaphore": 1,
                "ntoskrnl/config/cmalloc.c": 1,
                "RtlGetUserInfoHeap": 1,
                "ObDereferenceProcessHandleTable": 1,
                "iswxdigit": 1,
                "LpcpFreeDataInfoMessage": 1,
                "ntoskrnl/io/pnpmgr/pnpres.c": 1,
                "NtTerminateJobObject": 1,
                "KiUnlinkThread": 1,
                "OP_MS": 1,
                "MiWriteFilePage": 1,
                "lib/sdk/crt/printf/_sxprintf.c": 1,
                "KiSsToTrapFrame": 1,
                "lib/sdk/crt/math/rand_nt.c": 1,
                "KeAlertThread": 1,
                "CmpFreeDelayItem": 1,
                "NtStartProfile": 1,
                "MiCheckVirtualAddress": 1,
                "FsRtlAcquireFileForCcFlushEx": 1,
                "PnpRootPnpControl": 1,
                "SeInitializeProcessAuditName": 1,
                "CmpFileFlush": 1,
                "PiCompareInstancePath": 1,
                "KiInitializeContextThread": 1,
                "LpcpDestroyPortQueue": 1,
                "lib/rtl/avlsupp.c": 1,
                "MiBuildPfnDatabaseFromPages": 1,
                "ntoskrnl/mm/ARM3/zeropage.c": 1,
                "ExpRemovePoolEntryList": 1,
                "NtDebugActiveProcess": 1,
                "ExeFmtpAllocateSegments": 1,
                "CmpAddToLeaf": 1,
                "MiLookupDataTableEntry": 1,
                "IopUnloadSafeCompletion": 1,
                "MiAllocateContiguousMemory": 1,
                "MmUnloadSystemImage": 1,
                "CmpDoOpen": 1,
                "KdbpGetEnterCondition": 1,
                "ntoskrnl/io/iomgr/arcname.c": 1,
                "KeInitExceptions": 1,
                "FindBitmapResource": 1,
                "KiRosPcToUserFileHeader": 1,
                "CmpDoCreate": 1,
                "PiGetDeviceRegistryProperty": 1,
                "NtUnmapViewOfSection": 1,
                "lib/rtl/atom.c": 1,
                "ObpValidateAccessMask": 1,
                "ObpCreateUnnamedHandle": 1,
                "MmInitSectionImplementation": 1,
                "KiVdmOpcodeIRET": 1,
                "NtCancelTimer": 1,
                "lib/sdk/crt/stdlib/qsort.c": 1,
                "ntoskrnl/config/cmhvlist.c": 1,
                "ntoskrnl/ob/obdir.c": 1,
                "PspChargeProcessQuotaSpecifiedPool": 1,
                "PspGetOrSetContextKernelRoutine": 1,
                "ObpReferenceProcessObjectByHandle": 1,
                "ObpCaptureObjectName": 1,
                "MiInitializeLargePageSupport": 1,
                "RtlpQuerySecurityDescriptor": 1,
                "DbgkpSendApiMessageLpc": 1,
                "InbvBitBlt": 1,
                "ntoskrnl/mm/mminit.c": 1,
                "RtlpInitializeHeap": 1,
                "MmPageOutPhysicalAddress": 1,
                "KdbpSetEnterCondition": 1,
                "ObInheritDeviceMap": 1,
                "lib/sdk/crt/string/itoa.c": 1,
                "RtlpCallQueryRegistryRoutine": 1,
                "CmpResolveDriverDependencies": 1,
                "lib/sdk/crt/string/strlwr.c": 1,
                "KiSystemStartupBootStack": 1,
                "MmAlterRegion": 1,
                "QSISystemProcessInformation": 1,
                "ObFastReferenceObjectLocked": 1,
                "RtlpDphProcessStartupInitialization": 1,
                "RtlEqualPrefixSid": 1,
                "MmNotPresentFaultSectionView": 1,
                "wcsncpy_s": 1,
                "IoShutdownSystem": 1,
                "ExpDecodePoolLink": 1,
                "MiSetPagingOfDriver": 1,
                "QueryStringCallback": 1,
                "CmpFindValueByName": 1,
                "NtSetDebugFilterState": 1,
                "MmpFreePageFileSegment": 1,
                "OP_REG": 1,
                "FsRtlNotifySetCancelRoutine": 1,
                "xHalEndMirroring": 1,
                "ObpCloseHandleTableEntry": 1,
                "ExpWaitForKeyedEvent": 1,
                "ntoskrnl/ke/i386/v86vdm.c": 1,
                "ntoskrnl/cache/section/fault.c": 1,
                "IopQueryCompatibleIds": 1,
                "MmUnmapViewOfSegment": 1,
                "IopStartAndEnumerateDevice": 1,
                "IopLoadServiceModule": 1,
                "CmpQueryKeyName": 1,
                "ExfReInitializeRundownProtection": 1,
                "iswprint": 1,
                "RtlpAddKnownAce": 1,
                "MiCopyFromUserPage": 1,
                "CmpInitCallback": 1,
                "CmpRemoveSubKey": 1,
                "NtAccessCheckByTypeResultListAndAuditAlarm": 1,
                "NtSetSystemTime": 1,
                "KiInitializeBugCheck": 1,
                "lib/rtl/avltable.c": 1,
                "ntoskrnl/fsrtl/pnp.c": 1,
                "ntoskrnl/ke/except.c": 1,
                "NtSetLowWaitHighEventPair": 1,
                "xHalGetInterruptTranslator": 1,
                "IopLogWorker": 1,
                "IopCreateVpb": 1,
                "CmpTestHiveFlusherLockShared": 1,
                "KdbDebugPrint": 1,
                "KdbpCmdDmesg": 1,
                "MmRequestPageMemoryConsumer": 1,
                "CmpFreeKeyByCell": 1,
                "QSISystemExceptionInformation": 1,
                "RosSymInitKernelMode": 1,
                "KeForceResumeThread": 1,
                "ntoskrnl/ke/procobj.c": 1,
                "IopRestartLogWorker": 1,
                "ntoskrnl/ex/work.c": 1,
                "NtCreateKeyedEvent": 1,
                "PspExitNormalApc": 1,
                "PspDeleteLdt": 1,
                "NtSetContextThread": 1,
                "MiProtectedPoolInsertList": 1,
                "IopInitializeDriverModule": 1,
                "NtSetLdtEntries": 1,
                "IopDeleteIoCompletion": 1,
                "print_insn_i386": 1,
                "NtEnumerateValueKey": 1,
                "KiTrap05Handler": 1,
                "ntoskrnl/config/cmkeydel.c": 1,
                "LdrRelocateImageWithBias": 1,
                "RosSymAllocMemKM": 1,
                "lib/rtl/dos8dot3.c": 1,
                "InbvSetDisplayOwnership": 1,
                "PspInheritQuota": 1,
                "KdpEnterDebuggerException": 1,
                "lib/rtl/splaytree.c": 1,
                "DbgkpSetProcessDebugObject": 1,
                "ExpInitializeExecutive": 1,
                "RtlPcToFileHeader": 1,
                "streamout_wstring": 1,
                "find_entry": 1,
                "MmSessionCreate": 1,
                "ntoskrnl/ke/semphobj.c": 1,
                "PspDestroyQuotaBlock": 1,
                "MmWritePageSectionView": 1,
                "ntoskrnl/ob/obsecure.c": 1,
                "MiQueryAddressState": 1,
                "ntoskrnl/fsrtl/fsfilter.c": 1,
                "CcGetFileSizes": 1,
                "lib/rtl/bitmap.c": 1,
                "IopWriteLogFile": 1,
                "ExpInitializeProfileImplementation": 1,
                "RtlEnterHeapLock": 1,
                "ExpCreateSystemRootLink": 1,
                "ntoskrnl/ex/atom.c": 1,
                "ntoskrnl/include/internal/ps_x.h": 1,
                "CmpFreeValueData": 1,
                "IopLoadFileSystemDriver": 1,
                "OP_indirE": 1,
                "lib/rtl/i386/except.c": 1,
                "IopStoreSystemPartitionInformation": 1,
                "MiRosTrimCache": 1,
                "IopEditDeviceList": 1,
                "ExInitPoolLookasidePointers": 1,
                "FsRtlReleaseFileForCcFlush": 1,
                "MmGetSessionLocaleId": 1,
                "SeCreateAccessStateEx": 1,
                "xHalHandlerForBus": 1,
                "SepCaptureSid": 1,
                "MiInsertPageInFreeList": 1,
                "_itoa_s": 1,
                "CmpInitializeHive": 1,
                "IopInitPlugPlayEvents": 1,
                "RtlpDphRemoveFromBusyList": 1,
                "ntoskrnl/se/semgr.c": 1,
                "MmCreateMemoryArea": 1,
                "CmpCreateObjectTypes": 1,
                "RawFsDriverEntry": 1,
                "MiRemoveZeroPage": 1,
                "ntoskrnl/se/lsa.c": 1,
                "ExpReleaseKeyedEvent": 1,
                "isalpha": 1,
                "IopCreateDeviceKeyPath": 1,
                "xHalIoReadPartitionTable": 1,
                "ExiFreeToPagedLookasideList": 1,
                "xHalpGetRDiskCount": 1,
                "MiCallDllUnloadAndUnloadDll": 1,
                "KdpEnableSafeMem": 1,
                "QSISystemHandleInformation": 1,
                "ExReleaseTimeRefreshLock": 1,
                "RtlpGetAtomEntry": 1,
                "lib/rtl/bootdata.c": 1,
                "NtOpenIoCompletion": 1,
                "RawShutdown": 1,
                "KdbpPrintAddressInCode": 1,
                "CmpLockHiveFlusherExclusive": 1,
                "IopSendRemoveChildDevices": 1,
                "IopDeleteDriver": 1,
                "KdpCallGdb": 1,
                "ntoskrnl/rtl/misc.c": 1,
                "MmDeleteTeb": 1,
                "Ki386BuildIdentityBuffer": 1,
                "ObQuerySecurityDescriptorInfo": 1,
                "IopCancelPrepareDeviceForRemoval": 1,
                "ntoskrnl/mm/ARM3/dynamic.c": 1,
                "ObpDeleteObject": 1,
                "ntoskrnl/ps/process.c": 1,
                "RtlDeleteHeapLock": 1,
                "KiTrap02": 1,
                "NtQueryTimerResolution": 1,
                "CmpDereferenceKeyControlBlock": 1,
                "CmpGetHiveName": 1,
                "NtYieldExecution": 1,
                "RtlpDestroyAtomTableLock": 1,
                "PiInitPhase0": 1,
                "CcTryToInitializeFileCache": 1,
                "SSISystemFileCacheInformation": 1,
                "CmCreateRootNode": 1,
                "RtlpFreeAtomTableEntry": 1,
                "MiResolveProtoPteFault": 1,
                "CcRosReleaseFileCache": 1,
                "MmGetPageEntryForProcess": 1,
                "include/crt/mingw32/intrin_x86.h": 1,
                "PnpRootDriverEntry": 1,
                "IopActionConfigureChildServices": 1,
                "lib/cmlib/cminit.c": 1,
                "ExpWaitForResource": 1,
                "CmpCleanUpKcbCacheWithLock": 1,
                "lib/sdk/crt/string/wcs.c": 1,
                "ntoskrnl/io/iomgr/iofunc.c": 1,
                "QSISystemPagedPoolInformation": 1,
                "lib/rtl/heap.c": 1,
                "LdrShutdownThread": 1,
                "IopInitializeArbiters": 1,
                "MmSetSectionAssociation": 1,
                "ntoskrnl/ex/exintrin.c": 1,
                "RtlImageRvaToVa": 1,
                "MmNotPresentFaultCachePage": 1,
                "NtSetEventBoostPriority": 1,
                "KiSetPriorityThread": 1,
                "MiZeroPfn": 1,
                "NtQueryEvent": 1,
                "MiUnmapViewInSystemSpace": 1,
                "lib/rtl/heap.h": 1,
                "MiInsertPageInList": 1,
                "ntoskrnl/mm/ARM3/mdlsup.c": 1,
                "INVLPG_Fixup": 1,
                "GspPutPacket": 1,
                "KdbpSymAddCachedFile": 1,
                "DbgkForwardException": 1,
                "KeQueryIntervalProfile": 1,
                "OP_SEG": 1,
                "RtlCreateUserThread": 1,
                "PnpDeviceObjectToDeviceInstance": 1,
                "InbvGetResourceAddress": 1,
                "IopBootLog": 1,
                "DefaultQueryInfoBufferCheck": 1,
                "iscntrl": 1,
                "RosSymCreateFromRaw": 1,
                "lib/rossym/initkm.c": 1,
                "KiIdleSchedule": 1,
                "CcRosCacheSegmentIncRefCount_": 1,
                "CcRosInitializeFileCache": 1,
                "MiInitializePfnDatabase": 1,
                "RtlDebugGetUserInfoHeap": 1,
                "MmspWaitForFileLock": 1,
                "MmpPageOutPhysicalAddress": 1,
                "RawReadWriteDeviceControl": 1,
                "IopParseFile": 1,
                "RtlGetLastWin32Error": 1,
                "MmGetPageFileMapping": 1,
                "QSISystemCallTimeInformation": 1,
                "NtSetTimerResolution": 1,
                "ObpIncrementUnnamedHandleCount": 1,
                "GspFindSwBreakpoint": 1,
                "NtFlushVirtualMemory": 1,
                "GspReadMemSafe": 1,
                "SeQuerySecurityAccessMask": 1,
                "FsRtlAcquireFileForCcFlush": 1,
                "ExeFmtpCreateImageSection": 1,
                "KdPortGetByteEx": 1,
                "MiBalancerThread": 1,
                "RtlFindCharInUnicodeString": 1,
                "ntoskrnl/mm/ARM3/sysldr.c": 1,
                "ObpReferenceSecurityDescriptor": 1,
                "QSISystemDeviceInformation": 1,
                "RtlpExtendHeap": 1,
                "CmpCreateLinkNode": 1,
                "CmDeleteValueKey": 1,
                "DbgkpMarkProcessPeb": 1,
                "MiInitializeAndChargePfn": 1,
                "PnpDetermineResourceListSize": 1,
                "IopCheckVpbMounted": 1,
                "IopInitializeDevice": 1,
                "CmpDoFindSubKeyByNumber": 1,
                "Ki386IdentityMapMakeValid": 1,
                "MmIteratePrevNode": 1,
                "KeFlushQueueApc": 1,
                "MiIsEntireRangeCommitted": 1,
                "RtlReAllocateHeap": 1,
                "IopQueryBusDescription": 1,
                "IopInitializeBootDrivers": 1,
                "RpnpEvaluateStack": 1,
                "ntoskrnl/ps/i386/psldt.c": 1,
                "IopSynchronousCompletion": 1,
                "InbvScreenToBufferBlt": 1,
                "IopStartNextPacketByKeyEx": 1,
                "PspExitApcRundown": 1,
                "MiMakeSystemAddressValid": 1,
                "RtlDebugSetUserFlagsHeap": 1,
                "NtSetTimer": 1,
                "_ltoa": 1,
                "RtlSetLastWin32Error": 1,
                "MiUnlinkFreeOrZeroedPage": 1,
                "ntoskrnl/ex/pushlock.c": 1,
                "ExpIsLoaderValid": 1,
                "IopSendRemoveDevice": 1,
                "iswalnum": 1,
                "CpDoesPortExist": 1,
                "MiLocateExportName": 1,
                "KdbpCmdBugCheck": 1,
                "CmCountOpenSubKeys": 1,
                "MmGetLRUFirstUserPage": 1,
                "ntoskrnl/ob/obsdcach.c": 1,
                "MmInitGlobalKernelPageDirectory": 1,
                "KiRetireDpcList": 1,
                "MiZeroFillSection": 1,
                "ntoskrnl/ex/handle.c": 1,
                "_ui64tow_s": 1,
                "ExCompareExchangeCallBack": 1,
                "MiLocateAddress": 1,
                "ExpFreeHandleTableEntry": 1,
                "RtlAddAccessAllowedObjectAce": 1,
                "QSISystemPageFileInformation": 1,
                "NtSetInformationToken": 1,
                "ntoskrnl/io/iomgr/symlink.c": 1,
                "ntoskrnl/ke/eventobj.c": 1,
                "FstubFreeDiskInformation": 1,
                "MmFreeSpecialPool": 1,
                "lib/rtl/sid.c": 1,
                "MmPageOutCacheSection": 1,
                "KdbpRpnEvaluateExpression": 1,
                "putop": 1,
                "lib/rtl/random.c": 1,
                "CmpSecurityMethod": 1,
                "RtlpDphFindAvailableMemory": 1,
                "ntoskrnl/ke/i386/irqobj.c": 1,
                "CmpLockRegistryExclusive": 1,
                "MiFlushTlb": 1,
                "CmpInitializeHiveList": 1,
                "ntoskrnl/mm/ARM3/section.c": 1,
                "CmpFlushNotify": 1,
                "FstubGetDiskGeometry": 1,
                "CcRosTraceCacheMap": 1,
                "CmEnumerateValueKey": 1,
                "CmpWalkPath": 1,
                "KdbpGetBreakPointInfo": 1,
                "RpnpClearStack": 1,
                "lib/sdk/crt/string/atoi64.c": 1,
                "ExpSetCurrentUserUILanguage": 1,
                "IopDereferenceVpbAndFree": 1,
                "MmReleasePageMemoryConsumer": 1,
                "DbgkUnMapViewOfSection": 1,
                "MiProcessLoaderEntry": 1,
                "CmpFreeValue": 1,
                "memcmp": 1,
                "Ki386EnableFxsr": 1,
                "KiAcquireFastMutex": 1,
                "KiCallbackReturnHandler": 1,
                "RtlpDphPointerFromHandle": 1,
                "MmpFaultWorker": 1,
                "InbvSetProgressBarCoordinates": 1,
                "QSISystemVdmBopInformation": 1,
                "InbvPortPutByte": 1,
                "SepCreateSystemProcessToken": 1,
                "MxGetNextPage": 1,
                "InbvAcquireLock": 1,
                "MmReadFromSwapPage": 1,
                "RtlSetLastWin32ErrorAndNtStatusFromNtStatus": 1,
                "CmSetValueKey": 1,
                "MiDeleteSystemPageableVm": 1,
                "ntoskrnl/se/token.c": 1,
                "ReadCacheSegment": 1,
                "HalpAssignDrive": 1,
                "PspInitializeJobStructures": 1,
                "KdbpDisableBreakPoint": 1,
                "KiSaveProcessorState": 1,
                "_ltow": 1,
                "ntoskrnl/include/internal/cc.h": 1,
                "ntoskrnl/io/iomgr/deviface.c": 1,
                "CcRosDereferenceCache": 1,
                "RtlSetUnhandledExceptionFilter": 1,
                "NtContinue": 1,
                "ExpInitSystemPhase0": 1,
                "oappend": 1,
                "RtlpGetRegistryHandle": 1,
                "ExpInitSystemPhase1": 1,
                "ExpSeedHotTags": 1,
                "LdrVerifyMappedImageMatchesChecksum": 1,
                "MiInitializeSystemPtes": 1,
                "DbgkExitThread": 1,
                "NtResumeThread": 1,
                "MmMpwThreadMain": 1,
                "LocateChildDevice": 1,
                "ExpLookupHandleTableEntry": 1,
                "ExBurnMemory": 1,
                "ExDereferenceCallBackBlock": 1,
                "NtQueryDefaultLocale": 1,
                "ntoskrnl/fsrtl/notify.c": 1,
                "NtUnloadKey": 1,
                "MiInitializeNonPagedPoolThresholds": 1,
                "ntoskrnl/fstub/fstubex.c": 1,
                "KeStartProfile": 1,
                "MiZeroPhysicalPage": 1,
                "ntoskrnl/ke/dpc.c": 1,
                "KeBoostPriorityThread": 1,
                "lib/rossym/fromraw.c": 1,
                "RtlpCheckLogException": 1,
                "FstubAdjustPartitionCount": 1,
                "KdbpSymSearchModuleList": 1,
                "KiDispatchException": 1,
                "KdpSafeReadMemory": 1,
                "PnpRegSzToString": 1,
                "ntoskrnl/ps/debug.c": 1,
                "NtCreateDebugObject": 1,
                "NtWaitForMultipleObjects": 1,
                "KiI386PentiumLockErrataFixup": 1,
                "CmpInitHiveFromFile": 1,
                "ntoskrnl/lpc/reply.c": 1,
                "FstubWriteEntryEFI": 1,
                "format_floatw": 1,
                "lib/rtl/crc32.c": 1,
                "MiFlushTbAndCapture": 1,
                "MmWithdrawSectionPage": 1,
                "MiTrimMemoryConsumer": 1,
                "FstubConvertExtendedToLayout": 1,
                "ObDeassignSecurity": 1,
                "KiRaiseException": 1,
                "RtlpAddKnownObjectAce": 1,
                "ntoskrnl/ke/i386/mtrr.c": 1,
                "PspGetContext": 1,
                "NtSetSystemInformation": 1,
                "ntoskrnl/cache/section/io.c": 1,
                "ntoskrnl/config/cmquota.c": 1,
                "IopInstallCriticalDevice": 1,
                "ntoskrnl/ex/interlocked.c": 1,
                "ExpWorkerThreadEntryPoint": 1,
                "PspExitProcessFromJob": 1,
                "IopDetectResourceConflict": 1,
                "GspHex2MemGetContent": 1,
                "ntoskrnl/ke/ipi.c": 1,
                "_MmSetPageEntrySectionSegment": 1,
                "DbgUnLoadImageSymbols": 1,
                "MiDoPoolCopy": 1,
                "FsRtlReleaseFileForModWrite": 1,
                "CmSetLazyFlushState": 1,
                "NtQueryAttributesFile": 1,
                "QSISystemSummaryMemoryInformation": 1,
                "ObpReapObject": 1,
                "McbMappingFree": 1,
                "ExfAcquireRundownProtection": 1,
                "lib/rtl/error.c": 1,
                "ntoskrnl/wmi/wmi.c": 1,
                "KeReadStateThread": 1,
                "PeFmtCreateSection": 1,
                "ntoskrnl/mm/ARM3/pfnlist.c": 1,
                "ntoskrnl/io/iomgr/iorsrce.c": 1,
                "lib/sdk/crt/printf/streamout.c": 1,
                "ExpAllocateLocallyUniqueId": 1,
                "RtlLeaveHeapLock": 1,
                "SeDetailedAuditingWithToken": 1,
                "HvIsCellDirty": 1,
                "FsRtlNotifyCompleteIrp": 1,
                "ntoskrnl/ex/dbgctrl.c": 1,
                "KiTrap01Handler": 1,
                "ObIsDosDeviceLocallyMapped": 1,
                "QSISystemProcessorPerformanceInformation": 1,
                "KiDebugServiceHandler": 1,
                "NtSetInformationObject": 1,
                "NtLoadKey": 1,
                "wcscpy_s": 1,
                "CmpHandleExitNode": 1,
                "KiSwapContextExit": 1,
                "NtGetCurrentProcessorNumber": 1,
                "KiCompleteTimer": 1,
                "xHalQuerySystemInformation": 1,
                "RpnBinaryOperatorMul": 1,
                "KiSystemFatalException": 1,
                "ntoskrnl/mm/ARM3/../ARM3/miavl.h": 1,
                "KeAlertResumeThread": 1,
                "MiCheckAllProcessMemoryAreas": 1,
                "ExpDeleteProfile": 1,
                "SepInitializationPhase0": 1,
                "MiDeletePte": 1,
                "KiDisplayBlueScreen": 1,
                "SepInitializationPhase1": 1,
                "PipGetDriverTagPriority": 1,
                "MiDbgTranslatePhysicalAddress": 1,
                "MmEnableVirtualMapping": 1,
                "DebugPrint": 1,
                "OP_Rd": 1,
                "MiProtectedPoolRemoveEntryList": 1,
                "GspSetSingleRegisterInTrapFrame": 1,
                "RtlQueryEnvironmentVariable_U": 1,
                "ntoskrnl/mm/ARM3/mmsup.c": 1,
                "KiIpiSendPacket": 1,
                "DetermineSIDSize": 1,
                "IopInitiatePnpIrp": 1,
                "IopInterlockedDecrementUlong": 1,
                "ntoskrnl/mm/i386/page.c": 1,
                "KiFlushTargetEntireTb": 1,
                "NtCreateMailslotFile": 1,
                "KiEnterV86Mode": 1,
                "KiVdmOpcodePUSHF": 1,
                "NtSuspendThread": 1,
                "MiDereferenceSessionFinal": 1,
                "NtReleaseMutant": 1,
                "ntoskrnl/io/iomgr/remlock.c": 1,
                "PsLocateSystemDll": 1,
                "CmpAddSubKey": 1,
                "ObKillProcess": 1,
                "ntoskrnl/ex/uuid.c": 1,
                "KdpGdbEnterDebuggerException": 1,
                "ExpInitializeMutantImplementation": 1,
                "ntoskrnl/io/iomgr/device.c": 1,
                "MiAllocatePfn": 1,
                "MmDeleteSectionAssociation": 1,
                "MiFindEmptyAddressRangeDownBasedTree": 1,
                "RtlpSplitEntry": 1,
                "RtlpSetHeapParameters": 1,
                "IopAbortIrpKernelApc": 1,
                "ObpCreateHandle": 1,
                "include/reactos/probe.h": 1,
                "NtAcceptConnectPort": 1,
                "RtlFreeUserThreadStack": 1,
                "RtlpDidUnicodeToOemWork": 1,
                "ntoskrnl/se/sid.c": 1,
                "RtlpDphPreProcessing": 1,
                "MmAllocPage": 1,
                "RtlLocalTimeToSystemTime": 1,
                "CmpFindSubKeyInLeaf": 1,
                "ExpAllocateLowLevelTable": 1,
                "OP_ST": 1,
                "IoShutdownPnpDevices": 1,
                "ObpCaptureObjectCreateInformation": 1,
                "NtResetEvent": 1,
                "KiSwapThread": 1,
                "ntoskrnl/config/cmindex.c": 1,
                "KiTrap10Handler": 1,
                "lib/sdk/crt/string/ctype.c": 1,
                "MmIsDisabledPage": 1,
                "PsTerminateProcess": 1,
                "KeFlushCurrentTb": 1,
                "ObpDestroySecurityDescriptorHeader": 1,
                "HvpCreateHiveFreeCellList": 1,
                "IopGetParentIdPrefix": 1,
                "MmGrowKernelStackEx": 1,
                "NtOpenMutant": 1,
                "CmpSetValueDataNew": 1,
                "RtlAddAuditAccessAce": 1,
                "InbvPortPollOnly": 1,
                "KbdDisableMouse": 1,
                "NtDebugContinue": 1,
                "xHalSetWakeAlarm": 1,
                "lib/rtl/sd.c": 1,
                "ExpQueryModuleInformation": 1,
                "RtlpDphNormalHeapValidate": 1,
                "RpnBinaryOperatorLessThanOrEquals": 1,
                "IopGetDeviceObjectPointer": 1,
                "MiGetExceptionInfo": 1,
                "GspLong2Hex": 1,
                "NtPlugPlayControl": 1,
                "KiIpiSignalPacketDone": 1,
                "ntoskrnl/kdbg/i386/i386-dis.c": 1,
                "ntoskrnl/io/iomgr/rawfs.c": 1,
                "MmInsertLRULastUserPage": 1,
                "IopGetInterfaceTypeString": 1,
                "ObpDeleteNameCheck": 1,
                "RtlReleasePebLock": 1,
                "PsResumeProcess": 1,
                "ntoskrnl/ke/i386/patpge.c": 1,
                "ExfWakePushLock": 1,
                "MiSectionPageTableAllocate": 1,
                "MiRemoveMappedView": 1,
                "MiInitMachineDependent": 1,
                "KiActivateWaiterQueue": 1,
                "FstubReadPartitionTableEFI": 1,
                "RawUserFsCtrl": 1,
                "IopShutdownBaseFileSystems": 1,
                "MmRemoveLRUUserPage": 1,
                "CompareUnicodeStrings": 1,
                "MiDecommitPages": 1,
                "PoNotifySystemTimeSet": 1,
                "SeIsTokenChild": 1,
                "MiArm3GetCorrectFileAccessMask": 1,
                "lib/cmlib/hivecell.c": 1,
                "OP_sI": 1,
                "CmpAddToDelayedClose": 1,
                "ntoskrnl/rtl/libsupp.c": 1,
                "ExpInitializePushLocks": 1,
                "MiUnmapViewOfSection": 1,
                "DbgkClearProcessDebugObject": 1,
                "KeReadyThread": 1,
                "CmpSetValueKeyExisting": 1,
                "RtlpRemoveHeapFromProcessList": 1,
                "ProbeAndCaptureUnicodeString": 1,
                "RtlpFreeMemory": 1,
                "MiRosTakeOverSharedUserPage": 1,
                "RtlDebugSetUserValueHeap": 1,
                "CmpDelayDerefKCBWorker": 1,
                "KiThreadStartup": 1,
                "RtlFormatMessage": 1,
                "ntoskrnl/fsrtl/faulttol.c": 1,
                "CmpCreateControlSet": 1,
                "KiDumpParameterImages": 1,
                "KdpPhysMap": 1,
                "CmpDelayCloseDpcRoutine": 1,
                "ObpLookupEntryDirectory": 1,
                "RtlpCheckInUsePattern": 1,
                "MiInitializeSectionPageTable": 1,
                "ntoskrnl/ex/shutdown.c": 1,
                "CmpAllocateDelayItem": 1,
                "RtlSystemTimeToLocalTime": 1,
                "HvpGetHiveHeader": 1,
                "PspSetPrimaryToken": 1,
                "RpnBinaryOperatorDiv": 1,
                "KiUpdateDr7": 1,
                "MmSetCleanAllRmaps": 1,
                "CmpAddValueToList": 1,
                "QSISystemInterruptInformation": 1,
                "PspExitThread": 1,
                "LockInsertIrpEx": 1,
                "lib/rossym/delete.c": 1,
                "RtlpDphAllocateVm": 1,
                "CmCheckRegistry": 1,
                "lib/rtl/exception.c": 1,
                "lib/rtl/slist.c": 1,
                "_memicmp": 1,
                "IopDereferenceDeviceObject": 1,
                "ComputeUnicodeNameLength": 1,
                "CcInitializeCacheManager": 1,
                "IopInvalidDeviceRequest": 1,
                "_i64toa_s": 1,
                "KdInitSystem": 1,
                "CmpInitCmPrivateAlloc": 1,
                "ntoskrnl/kd/i386/kdbg.c": 1,
                "_MiSimpleWrite": 1,
                "RtlDebugCreateHeap": 1,
                "LockFree": 1,
                "RtlDuplicateUnicodeString": 1,
                "xHalTranslateBusAddress": 1,
                "KiSystemStartup": 1,
                "KdbpDisassemble": 1,
                "ntoskrnl/io/iomgr/util.c": 1,
                "GspPutPacketNoWait": 1,
                "ntoskrnl/config/cmcheck.c": 1,
                "CmpDoFlushAll": 1,
                "FsRtlpExpandLockElement": 1,
                "FsRtlStackOverflowRead": 1,
                "MiInsertNode": 1,
                "KeSetIntervalProfile": 1,
                "KdbSymProcessSymbols": 1,
                "KeRosDumpTriageForBugZillaReport": 1,
                "ExpCreateWorkerThread": 1,
                "KiPcToFileHeader": 1,
                "CmpFindNameInList": 1,
                "lib/sdk/crt/string/strnicmp.c": 1,
                "MmCreateArm3Section": 1,
                "KeSetDisableBoostProcess": 1,
                "ExpSetSwappingKernelApc": 1,
                "KdpServiceDispatcher": 1,
                "KeThawExecution": 1,
                "NtSecureConnectPort": 1,
                "KiTimerExpiration": 1,
                "CmpReleaseTwoKcbLockByKey": 1,
                "RtlpPageHeapSize": 1,
                "SepReleaseAcl": 1,
                "KdbpTrapFrameToKdbTrapFrame": 1,
                "RtlGetThreadErrorMode": 1,
                "InsertAfterEntry": 1,
                "RtlpClearInDbgPrint": 1,
                "ExDupHandleTable": 1,
                "FstubTranslateResource": 1,
                "ntoskrnl/io/iomgr/driver.c": 1,
                "MiSessionCommitPageTables": 1,
                "OP_0f07": 1,
                "WRMSR": 1,
                "RtlpCreateAtomHandleTable": 1,
                "MiMakePdeExistAndMakeValid": 1,
                "RtlpValidateHeapEntry": 1,
                "KdbSymPrintAddress": 1,
                "PspDeleteProcessSecurity": 1,
                "RtlpNtEnumerateSubKey": 1,
                "FstubReadHeaderEFI": 1,
                "ntoskrnl/ke/devqueue.c": 1,
                "RtlGetCurrentProcessorNumber": 1,
                "RtlpNtOpenKey": 1,
                "MmIsDirtyPage": 1,
                "ntoskrnl/ps/win32.c": 1,
                "KdbpCmdBreakPointList": 1,
                "RawQueryFsSizeInfo": 1,
                "ntoskrnl/fstub/halstub.c": 1,
                "IopDisplayLoadingMessage": 1,
                "PspDeleteJob": 1,
                "ExpFindFreeEntry": 1,
                "IopAttachFilterDrivers": 1,
                "xHalpGetDiskNumberFromRDisk": 1,
                "KiRestoreFastSyscallReturnState": 1,
                "MiDispatchFault": 1,
                "NtPrivilegedServiceAuditAlarm": 1,
                "ExpCheckPoolBlocks": 1,
                "CmiCallRegisteredCallbacks": 1,
                "PnpBusTypeGuidGet": 1,
                "lib/rossym/zwfile.c": 1,
                "ObAssignObjectSecurityDescriptor": 1,
                "RtlCreateUserProcess": 1,
                "QSISystemFullMemoryInformation": 1,
                "PsReferenceEffectiveToken": 1,
                "MiAllocatePoolPages": 1,
                "RtlQueryAtomListInAtomTable": 1,
                "Ki386EnableDE": 1,
                "MmGetPageTableForProcess": 1,
                "ntoskrnl/include/internal/cm_x.h": 1,
                "xHalGetPartialGeometry": 1,
                "lib/rossym/frommem.c": 1,
                "RtlpValidateHeapHeaders": 1,
                "KdbpCmdEnableDisableClearBreakPoint": 1,
                "IopGetErrorLogEntry": 1,
                "KeStopProfile": 1,
                "xKdReleasePciDeviceForDebugging": 1,
                "KiInitializeKernel": 1,
                "CcRosSetRemoveOnClose": 1,
                "LpcpDeletePort": 1,
                "MmGetLRUNextUserPage": 1,
                "ntoskrnl/config/cmse.c": 1,
                "ntoskrnl/mm/ARM3/largepag.c": 1,
                "lib/rtl/i386/thread.c": 1,
                "EnumerateDevices": 1,
                "Ki386EnableGlobalPage": 1,
                "ExpSetTimeZoneInformation": 1,
                "CcInitCacheZeroPage": 1,
                "RtlDowncaseUnicodeChar": 1,
                "RtlpCreateUserStack": 1,
                "KiInitializeMTRR": 1,
                "CmpSetVersionData": 1,
                "DbgkpSectionToFileHandle": 1,
                "RtlQueryDepthSList": 1,
                "ntoskrnl/ke/mutex.c": 1,
                "ObpDecrementHandleCount": 1,
                "MiRosUnmapViewInSystemSpace": 1,
                "MmFreeMemoryArea": 1,
                "CmpInitDelayDerefKCBEngine": 1,
                "CmpArmDelayedCloseTimer": 1,
                "ntoskrnl/io/pnpmgr/pnpreport.c": 1,
                "SepUpdateSinglePrivilegeFlagToken": 1,
                "ExAllocateCallBack": 1,
                "QSISystemVdmInstemulInformation": 1,
                "ntoskrnl/ke/config.c": 1,
                "RtlpInsertUnCommittedPages": 1,
                "QSISystemPlugPlayBusInformation": 1,
                "ExpCheckDynamicThreadCount": 1,
                "RtlpPageHeapCreate": 1,
                "MmUnmapViewOfCacheSegment": 1,
                "NtCreateProcessEx": 1,
                "IopEnumerateDetectedDevices": 1,
                "lib/sdk/crt/string/atoi.c": 1,
                "KiSignalTimer": 1,
                "ntoskrnl/dbgk/dbgkobj.c": 1,
                "MiSectionPageTableGetOrAllocate": 1,
                "MiCacheImageSymbols": 1,
                "lib/sdk/crt/mem/memicmp.c": 1,
                "ntoskrnl/ps/quota.c": 1,
                "NtCreateToken": 1,
                "KiGetVectorDispatch": 1,
                "ntoskrnl/ex/profile.c": 1,
                "ExfReleaseRundownProtection": 1,
                "page_fault": 1,
                "ExpWin32SessionCallout": 1,
                "ntoskrnl/mm/section.c": 1,
                "KeResumeThread": 1,
                "MmGetFileNameForFileObject": 1,
                "MiIsProtectionCompatible": 1,
                "find_first_entry": 1,
                "lib/rtl/ppb.c": 1,
                "QSISystemEventIdsInformation": 1,
                "IopVerifyDiskSignature": 1,
                "KeRosDumpStackFrameArray": 1,
                "RtlAddAccessDeniedAceEx": 1,
                "KdbpRpnParseExpression": 1,
                "RtlAcquirePebLock": 1,
                "KdbpCallMainLoop": 1,
                "wcspbrk": 1,
                "OP_DIR": 1,
                "PopIdle0": 1,
                "RpnBinaryOperatorNotEquals": 1,
                "iswpunct": 1,
                "_finite": 1,
                "RawCreate": 1,
                "PspIsDescriptorValid": 1,
                "MiCreatePagingFileMap": 1,
                "CmpIsLoadType": 1,
                "OP_3DNowSuffix": 1,
                "lib/sdk/crt/string/iswctype.c": 1,
                "ntoskrnl/kd/kdio.c": 1,
                "NtSetIoCompletion": 1,
                "IopCleanupFailedIrp": 1,
                "streamout_char": 1,
                "NtSetSystemPowerState": 1,
                "lib/sdk/crt/wstring/wcsnicmp.c": 1,
                "CmpFree": 1,
                "MiFreePoolPages": 1,
                "NtTerminateThread": 1,
                "SepCaptureSecurityQualityOfService": 1,
                "lib/rtl/timezone.c": 1,
                "McbMappingAllocate": 1,
                "MmIsFileObjectAPagingFile": 1,
                "PsInitializeQuotaSystem": 1,
                "wcsncat_s": 1,
                "ExpInitializePoolListHead": 1,
                "xHalIoAssignDriveLetters": 1,
                "IopLogDpcRoutine": 1,
                "MiReserveAlignedSystemPtes": 1,
                "IopWorkItemCallback": 1,
                "MiSessionRemoveProcess": 1,
                "ExpInitializeEventImplementation": 1,
                "ntoskrnl/ex/keyedevt.c": 1,
                "CmpCmdInit": 1,
                "NtSignalAndWaitForSingleObject": 1,
                "RDMSR": 1,
                "ntoskrnl/ke/time.c": 1,
                "CmpDereferenceNameControlBlockWithLock": 1,
                "ExpInitUuids": 1,
                "FreeInitializedSids": 1,
                "IopInitializePnpServices": 1,
                "KdbpCmdEvalExpression": 1,
                "InbvDriverInitialize": 1,
                "NtQuerySection": 1,
                "ntoskrnl/mm/ARM3/syspte.c": 1,
                "MiCopyPageToPage": 1,
                "RmapListFree": 1,
                "PopSetSystemPowerState": 1,
                "CmpMarkValueDataDirty": 1,
                "RtlpGetSizeOfBigBlock": 1,
                "KdbpGetNextBreakPointNr": 1,
                "MmShowOutOfSpaceMessagePagingFile": 1,
                "RtlpGetExtraStuffPointer": 1,
                "NtDisplayString": 1,
                "HvTrackCellRef": 1,
                "ntoskrnl/kdbg/kdb_expr.c": 1,
                "SeInitSystem": 1,
                "KiGetMachineBootPointers": 1,
                "ntoskrnl/fsrtl/largemcb.c": 1,
                "NtWaitForKeyedEvent": 1,
                "ntoskrnl/fsrtl/dbcsname.c": 1,
                "ObpDeferObjectDeletion": 1,
                "PspMapSystemDll": 1,
                "ntoskrnl/lpc/connect.c": 1,
                "ntoskrnl/io/pnpmgr/plugplay.c": 1,
                "FstubDbgPrintDriveLayoutEx": 1,
                "ntoskrnl/ex/rundown.c": 1,
                "ntoskrnl/mm/rmap.c": 1,
                "ntoskrnl/ex/callback.c": 1,
                "RtlCopyLuidAndAttributesArray": 1,
                "PoRemoveVolumeDevice": 1,
                "print_insn_i386_att": 1,
                "IopCheckDeviceAndDriver": 1,
                "NtCreateProcess": 1,
                "PspDeleteThreadSecurity": 1,
                "CmpQueryKeyValueData": 1,
                "NtListenPort": 1,
                "NtWaitLowEventPair": 1,
                "MiInitializeDriverLargePageList": 1,
                "_isnan": 1,
                "CmpPrepareIndexOfKeys": 1,
                "IopStartDevice2": 1,
                "SSISystemAddVerifier": 1,
                "RtlSetEnvironmentVariable": 1,
                "CmpQueryKeyData": 1,
                "QSISystemBasicInformation": 1,
                "RtlpDphCoalesceFreeIntoAvailable": 1,
                "xHalRegisterBusHandler": 1,
                "xHalQueryDriveLayout": 1,
                "ObpIncrementHandleCount": 1,
                "ObpCreateCacheEntry": 1,
                "_KeLeaveGuardedRegion": 1,
                "MiSegmentDelete": 1,
                "ntoskrnl/vdm/vdmexec.c": 1,
                "HalpIsValidPartitionEntry": 1,
                "KdbpTryGetCharSerial": 1,
                "KiServiceExit": 1,
                "RtlpDphPlaceOnBusyList": 1,
                "ExpInitializeCallbacks": 1,
                "_NtCurrentTeb": 1,
                "SepSidInToken": 1,
                "ntoskrnl/ke/i386/abios.c": 1,
                "KiDeferredReadyThread": 1,
                "CmpTestRegistryLock": 1,
                "KdpBochsDebugPrint": 1,
                "NtOpenEventPair": 1,
                "GspGetPacket": 1,
                "KdbInitialize": 1,
                "NtSuspendProcess": 1,
                "PopQuerySystemPowerStateTraverse": 1,
                "RtlpDphGrowVirtual": 1,
                "include/ddk/ntstrsafe.h": 1,
                "QSISystemPowerInformation": 1,
                "FstubWritePartitionTableEFI": 1,
                "ntoskrnl/ke/clock.c": 1,
                "include/ndk/rtlfuncs.h": 1,
                "ReadCacheSegmentChain": 1,
                "MiComputeDriverProtection": 1,
                "RtlEncodeSystemPointer": 1,
                "CmpLinkKeyToHive": 1,
                "NtQueryDebugFilterState": 1,
                "sprintf_nt": 1,
                "RtlpUnlockAtomTable": 1,
                "ObpIncrementHandleDataBase": 1,
                "RtlpGrowBlockInPlace": 1,
                "ExpInitializeSemaphoreImplementation": 1,
                "MiUnmapPagesInZeroSpace": 1,
                "NtQueryIoCompletion": 1,
                "MmBuildMdlFromPages": 1,
                "lib/sdk/crt/string/strset.c": 1,
                "PnpRootAddDevice": 1,
                "ntoskrnl/io/pnpmgr/pnpnotify.c": 1,
                "lib/sdk/crt/string/strrev.c": 1,
                "KdpScreenPrint": 1,
                "KdpGetMemorySizeInMBs": 1,
                "find_entry_by_name": 1,
                "IopCancelRemoveDevice": 1,
                "QSISystemFileCacheInformation": 1,
                "ntoskrnl/kd/kdmain.c": 1,
                "SepAdjustPrivileges": 1,
                "ntoskrnl/ke/thrdschd.c": 1,
                "HvpCreateHive": 1,
                "KiFastCallEntryHandler": 1,
                "ntoskrnl/io/iomgr/file.c": 1,
                "ntoskrnl/ke/wait.c": 1,
                "RtlpDeleteData": 1,
                "IopAttachFilterDriversCallback": 1,
                "ExWaitForUnblockPushLock": 1,
                "SepReleaseSecurityQualityOfService": 1,
                "ntoskrnl/io/iomgr/adapter.c": 1,
                "lib/rtl/registry.c": 1,
                "CmShutdownSystem": 1,
                "ntoskrnl/vf/driver.c": 1,
                "ntoskrnl/kdbg/kdb_serial.c": 1,
                "DaysSinceEpoch": 1,
                "RtlDebugSizeHeap": 1,
                "lib/rtl/heappage.c": 1,
                "IopSetDeviceInstanceData": 1,
                "SepCreateClientSecurity": 1,
                "ntoskrnl/ke/gmutex.c": 1,
                "DbgkpPostFakeThreadMessages": 1,
                "RosSymCreateFromFile": 1,
                "McbMappingIntersectCompare": 1,
                "append_seg": 1,
                "KiQuantumEnd": 1,
                "MmGetSavedSwapEntryPage": 1,
                "MiRemoveMappedPtes": 1,
                "NtReleaseKeyedEvent": 1,
                "KiSetCR0Bits": 1,
                "KiExitV86Mode": 1,
                "RawInitializeVcb": 1,
                "RtlpHashAtomName": 1,
                "MmInitializeRmapList": 1,
                "SIMD_Fixup": 1,
                "KdbpCmdGdtLdtIdt": 1,
                "PopAddRemoveSysCapsCallback": 1,
                "PopProcessShutDownLists": 1,
                "KeInitializeThread": 1,
                "lib/sdk/crt/wstring/wcsspn.c": 1,
                "KeSetProcess": 1,
                "CpSetBaud": 1,
                "NtDeleteValueKey": 1,
                "CmpCopyName": 1,
                "LdrProcessRelocationBlockLongLong": 1,
                "ntoskrnl/ke/spinlock.c": 1,
                "ObpInsertEntryDirectory": 1,
                "ObDereferenceObjectEx": 1,
                "IopAllocateIrpMustSucceed": 1,
                "SepFindPrimaryGroupAndDefaultOwner": 1,
                "MiIsRegularMemory": 1,
                "NtOpenKey": 1,
                "MmGetOffsetPageFile": 1,
                "KdpGdbStubInit": 1,
                "IopGetDeviceNode": 1,
                "RtlpCheckIntegerAtom": 1,
                "ExpReleaseOrWaitForKeyedEvent": 1,
                "iswspace": 1,
                "ntoskrnl/include/internal/arch/../i386/ke.h": 1,
                "ntoskrnl/ke/i386/exp.c": 1,
                "RosSymDelete": 1,
                "IopGetSystemPowerDeviceObject": 1,
                "SeSubProcessToken": 1,
                "RtlStringCbPrintfA": 1,
                "CcRosUnmapCacheSegment": 1,
                "ntoskrnl/ps/query.c": 1,
                "FstubCreateDiskMBR": 1,
                "MmSharePageEntrySectionSegment": 1,
                "MmGetPfnForProcess": 1,
                "RosSymFreeMemKM": 1,
                "ntoskrnl/kd/wrappers/gdbstub.c": 1,
                "lib/rossym/init.c": 1,
                "VdmSwapContext": 1,
                "ntoskrnl/io/iomgr/iotimer.c": 1,
                "HvpFreeHiveBins": 1,
                "NtCreateJobObject": 1,
                "MiCompleteProtoPteFault": 1,
                "ntoskrnl/cc/fs.c": 1,
                "ntoskrnl/config/cmnotify.c": 1,
                "MmDeleteAllRmaps": 1,
                "OP_XS": 1,
                "RtlCallVectoredExceptionHandlers": 1,
                "_MmLockSectionSegment": 1,
                "FsRtlIsNameInExpressionPrivate": 1,
                "KdbpShouldStepOverInstruction": 1,
                "PspLookupSystemDllEntryPoint": 1,
                "KiGetCpuVendor": 1,
                "ntoskrnl/config/cmparse.c": 1,
                "RtlpDphAddNewPool": 1,
                "ExInitializeSystemLookasideList": 1,
                "ntoskrnl/fsrtl/tunnel.c": 1,
                "RtlpQueryRegistryDirect": 1,
                "KiFlushNPXState": 1,
                "KeWaitForGate": 1,
                "_toupper": 1,
                "NtSystemDebugControl": 1,
                "KdbpGetHexNumber": 1,
                "KdbpTryGetCharKeyboard": 1,
                "IopSaveBootLogToFile": 1,
                "IopUpdateResourceMap": 1,
                "MmNotPresentFaultCacheSection": 1,
                "CmpCompressedNameSize": 1,
                "CmpCreateRegistryRoot": 1,
                "KdpPrintToLogFile": 1,
                "CmpDereferenceKeyControlBlockWithLock": 1,
                "MiInitializeLoadedModuleList": 1,
                "CmpDeleteKeyObject": 1,
                "SeLocateProcessImageName": 1,
                "CmpAddToHiveFileList": 1,
                "MmpCloseSection": 1,
                "KdbpCmdBackTrace": 1,
                "MiGetOnePage": 1,
                "RpnpPushStack": 1,
                "ntoskrnl/ps/psmgr.c": 1,
                "Ki386VdmEnablePentiumExtentions": 1,
                "_i64toa": 1,
                "IopAsynchronousInvalidateDeviceRelations": 1,
                "ExiAllocateFromPagedLookasideList": 1,
                "KeRemoveQueueApc": 1,
                "MmInitializeHandBuiltProcess2": 1,
                "MiIsPfnFree": 1,
                "MmpAccessFault": 1,
                "PnpRegMultiSzToUnicodeStrings": 1,
                "ntoskrnl/se/audit.c": 1,
                "PpInitializeDeviceReferenceTable": 1,
                "KdbpStepIntoInstruction": 1,
                "isalnum": 1,
                "ExpDesktopDelete": 1,
                "NtW32Call": 1,
                "NtSetThreadExecutionState": 1,
                "IopCsqCancelRoutine": 1,
                "MiSimpleRead": 1,
                "KeInitThread": 1,
                "NtQuerySemaphore": 1,
                "FsRtlCheckNotifyForDelete": 1,
                "NtSetHighEventPair": 1,
                "PspLookupKernelUserEntryPoints": 1,
                "strtoul": 1,
                "InbvPortTerminate": 1,
                "DbgkCopyProcessDebugPort": 1,
                "lib/sdk/crt/wstring/wcslwr.c": 1,
                "MmSetMemoryPriorityProcess": 1,
                "MmUnmapPageTable": 1,
                "KbdEnableMouse": 1,
                "MiFreeContiguousMemory": 1,
                "RtlEncodePointer": 1,
                "LockAcquireQueueLock": 1,
                "PopSendQuerySystemPowerState": 1,
                "ntoskrnl/config/cmvalche.c": 1,
                "MiReleaseProcessReferenceToSessionDataPage": 1,
                "MiInitializeSpecialPool": 1,
                "ExpRemovePoolHeadList": 1,
                "iswdigit": 1,
                "ObpDeleteSymbolicLink": 1,
                "MmCallDllInitialize": 1,
                "NtSetSystemEnvironmentValue": 1,
                "NtRaiseException": 1,
                "ObpHash": 1,
                "MiAccessCheck": 1,
                "BadOp": 1,
                "ntoskrnl/mm/ARM3/vadnode.c": 1,
                "RtlFindNextForwardRunSet": 1,
                "RtlpDphFreeDelayedBlocksFromHeap": 1,
                "VdmpInitialize": 1,
                "MiBuildPfnDatabaseSelf": 1,
                "ExfInitializeRundownProtection": 1,
                "RtlpAllocateNonDedicated": 1,
                "MmspCompareSegments": 1,
                "ExpInitLookasideLists": 1,
                "ExpCheckPoolAllocation": 1,
                "GdbGetChar": 1,
                "_i64tow": 1,
                "IopInitializePlugPlayServices": 1,
                "CmDeleteKey": 1,
                "NtPulseEvent": 1,
                "lib/cportlib/cport.c": 1,
                "NtFlushKey": 1,
                "lib/rtl/largeint.c": 1,
                "ExAcquireTimeRefreshLock": 1,
                "KiSuspendThread": 1,
                "ntoskrnl/ex/resource.c": 1,
                "MiCheckPdeForPagedPool": 1,
                "MmInitializeRegion": 1,
                "NtQueryOpenSubKeys": 1,
                "DbgkpPostFakeProcessCreateMessages": 1,
                "RtlLookupFirstMatchingElementGenericTableAvl": 1,
                "IopStartNextPacketByKey": 1,
                "RtlpAllocDeallocQueryBuffer": 1,
                "IopCreateDeviceNode": 1,
                "PsReferenceProcessFilePointer": 1,
                "include/ddk/wdm.h": 1,
                "KdpScreenInit": 1,
                "ObpChargeQuotaForObject": 1,
                "MiMapViewOfDataSection": 1,
                "NtQueueApcThread": 1,
                "ExpInitializeKeyedEvent": 1,
                "IopAttachDeviceToDeviceStackSafe": 1,
                "RtlpPageHeapSetUserFlags": 1,
                "xKdUnmapVirtualAddress": 1,
                "xHalVectorToIDTEntry": 1,
                "_MiMapViewOfSegment": 1,
                "lib/rtl/process.c": 1,
                "MiFindContiguousPages": 1,
                "ExpBoostOwnerThread": 1,
                "PoInitSystem": 1,
                "LpcInitSystem": 1,
                "MmAccessFaultSectionView": 1,
                "RtlpFindGenericTableNodeOrParent": 1,
                "KiInitializeUserApc": 1,
                "NtWaitForMultipleObjects32": 1,
                "MiCheckSecuredVad": 1,
                "FstubAllocateDiskInformation": 1,
                "lib/rtl/image.c": 1,
                "MmDbgCopyMemory": 1,
                "InbvUpdateProgressBar": 1,
                "IopDeviceStatus": 1,
                "ntoskrnl/mm/ARM3/expool.c": 1,
                "RtlSetThreadIsCritical": 1,
                "RtlImageNtHeaderEx": 1,
                "ntoskrnl/lpc/create.c": 1,
                "ExpResourceInitialization": 1,
                "MiResolveTransitionFault": 1,
                "NtGetContextThread": 1,
                "PspCreateThread": 1,
                "ObpInitSdCache": 1,
                "RtlpAllocateMemory": 1,
                "KdbpNopPrintAddress": 1,
                "KeInitializeProcess": 1,
                "KiInsertQueueApc": 1,
                "KeBugCheckWithTf": 1,
                "xHalQueryBusSlots": 1,
                "RtlpDestroyUnCommittedRange": 1,
                "RpnBinaryOperatorGreaterThanOrEquals": 1,
                "ObDuplicateObject": 1,
                "KdbEnterDebuggerException": 1,
                "MmCreateVirtualMappingUnsafe": 1,
                "ObFreeObjectCreateInfoBuffer": 1,
                "RtlCopySecurityDescriptor": 1,
                "HvpWriteHive": 1,
                "ObGetProcessHandleCount": 1,
                "CmpConstructName": 1,
                "QSISystemTimeAdjustmentInformation": 1,
                "CmpTestHiveFlusherLockExclusive": 1,
                "InbvPortInitialize": 1,
                "PoVolumeDevice": 1,
                "get16": 1,
                "RtlpCheckForActiveDebugger": 1,
                "IopRemoveTimerFromTimerList": 1,
                "MmNotPresentFault": 1,
                "lib/sdk/crt/string/itow.c": 1,
                "CmpLinkHiveToMaster": 1,
                "MiDecrementShareCount": 1,
                "PopRequestPowerIrpCompletion": 1,
                "ExpRaiseHardError": 1,
                "lib/rtl/assert.c": 1,
                "__toascii": 1,
                "CmpDoCreateChild": 1,
                "MmMapCacheViewInSystemSpaceAtOffset": 1,
                "KiTrap11Handler": 1,
                "CmPrepareHive": 1,
                "KiUserModeCallout": 1,
                "ObpDeleteObjectType": 1,
                "MiInitializeNonPagedPool": 1,
                "ExpDetectWorkerThreadDeadlock": 1,
                "FsRtlInitializeWorkerThread": 1,
                "ExpInitLuid": 1,
                "SeFastTraverseCheck": 1,
                "IopFixupDeviceId": 1,
                "MiCheckForConflictingNode": 1,
                "RtlpDestroyAtomHandleTable": 1,
                "DbgkpSendApiMessage": 1,
                "ntoskrnl/mm/ARM3/i386/../../ARM3/miarm.h": 1,
                "KiSetAffinityThread": 1,
                "ntoskrnl/io/iomgr/controller.c": 1,
                "ntoskrnl/lpc/send.c": 1,
                "ExDestroyHandle": 1,
                "CmpCompareNewValueDataAgainstKCBCache": 1,
                "SeCopyClientToken": 1,
                "ntoskrnl/ke/i386/traphdlr.c": 1,
                "vDbgPrintExWithPrefixInternal": 1,
                "MiEnablePagingOfDriver": 1,
                "PspAssignProcessToJob": 1,
                "RtlSetSecurityDescriptorRMControl": 1,
                "ExfReleaseRundownProtectionEx": 1,
                "RtlAddAccessDeniedObjectAce": 1,
                "ExInitSystem": 1,
                "wcscat_s": 1,
                "QSISystemProcessorInformation": 1,
                "ntoskrnl/lpc/listen.c": 1,
                "NtQueryVirtualMemory": 1,
                "ExWaitForCallBacks": 1,
                "PoRequestShutdownWait": 1,
                "KiDebugHandler": 1,
                "CmpInitCmPrivateDelayAlloc": 1,
                "Ke386GetGdtEntryThread": 1,
                "ntoskrnl/ex/init.c": 1,
                "wstreamout": 1,
                "xHalInitPnpDriver": 1,
                "ntoskrnl/ke/freeze.c": 1,
                "MiQueryMemorySectionName": 1,
                "RtlpDphEnterCriticalSection": 1,
                "RawSetInformation": 1,
                "QSISystemCallCountInformation": 1,
                "RtlInitializeHeapManager": 1,
                "FstubFixupEfiPartition": 1,
                "IopGetRegistryValue": 1,
                "CpEnableFifo": 1,
                "QSISystemCrashDumpInformation": 1,
                "ntoskrnl/ke/queue.c": 1,
                "CmEnumerateKey": 1,
                "FstubWriteSector": 1,
                "ExpWorkerThreadBalanceManager": 1,
                "CmpMarkKeyDirty": 1,
                "HvFree": 1,
                "lib/rtl/rangelist.c": 1,
                "ntoskrnl/mm/freelist.c": 1,
                "ntoskrnl/lpc/complete.c": 1,
                "ntoskrnl/ex/evtpair.c": 1,
                "SeAssignPrimaryToken": 1,
                "RpnBinaryOperatorLessThan": 1,
                "lib/rtl/heapdbg.c": 1,
                "KdpPrintString": 1,
                "ObpCloseHandle": 1,
                "MmLocateMemoryAreaByRegion": 1,
                "GspFindThread": 1,
                "KdbpCmdBreakPoint": 1,
                "MiCheckForUserStackOverflow": 1,
                "IopSendSurpriseRemoval": 1,
                "QSISystemFlagsInformation": 1,
                "iswgraph": 1,
                "MmLocateMemoryAreaByAddress": 1,
                "MmSetSessionLocaleId": 1,
                "ntoskrnl/mm/ARM3/ncache.c": 1,
                "LpcpPrepareToWakeClient": 1,
                "ExAcquireFastMutex": 1,
                "MiDereferenceControlArea": 1,
                "DebugPrompt": 1,
                "NtFlushWriteBuffer": 1,
                "IopFreeIrpKernelApc": 1,
                "Phase1Initialization": 1,
                "HvLoadHive": 1,
                "MmGetSessionId": 1,
                "Ki386EnableTargetLargePage": 1,
                "_KeLeaveCriticalRegion": 1,
                "NtQuerySystemTime": 1,
                "lib/sdk/crt/string/strxspn.h": 1,
                "ExpWinStaObjectDelete": 1,
                "ntoskrnl/include/internal/io_x.h": 1,
                "RtlLengthSidAndAttributes": 1,
                "NtSetLowEventPair": 1,
                "CmpFindControlSet": 1,
                "NtQueryIntervalProfile": 1,
                "KdbpCmdTss": 1,
                "KiSsFromTrapFrame": 1,
                "ntoskrnl/config/cmname.c": 1,
                "KiEspFromTrapFrame": 1,
                "ntoskrnl/kdbg/kdb.c": 1,
                "MiReserveSystemPtes": 1,
                "MiMakeSystemAddressValidPfn": 1,
                "KeFindNextRightSetAffinity": 1,
                "_itow_s": 1,
                "MiUnlinkPageFromList": 1,
                "ExeFmtpReadFile": 1,
                "DbgkpCloseObject": 1,
                "InitializeKCBKeyBodyList": 1,
                "lib/sdk/crt/string/atol.c": 1,
                "KdbSymGetAddressInformation": 1,
                "IopGetLowestDevice": 1,
                "ExpLoadInitialProcess": 1,
                "DbgkpWakeTarget": 1,
                "CmpInitHiveViewList": 1,
                "MmCreateCacheSection": 1,
                "Ki386AdjustEsp0": 1,
                "IopFixupResourceListWithRequirements": 1,
                "PoInitializeDeviceObject": 1,
                "MmCreatePhysicalMemorySection": 1,
                "ntoskrnl/io/iomgr/irp.c": 1,
                "KiContinuePreviousModeUser": 1,
                "MiInsertStandbyListAtFront": 1,
                "MiResolveDemandZeroFault": 1,
                "ntoskrnl/cache/section/reqtools.c": 1,
                "ExGetCallBackBlockRoutine": 1,
                "CmpRemoveKeyHash": 1,
                "CmpLazyFlushWorker": 1,
                "ExInitializeCallBack": 1,
                "MmAllocSwapPage": 1,
                "RtlQueryInformationAcl": 1,
                "RtlIdentifierAuthoritySid": 1,
                "RtlpDphCoalesceNodeIntoAvailable": 1,
                "RtlpCaptureStackLimits": 1,
                "NtQueryValueKey": 1,
                "NtCreateKey": 1,
                "include/ddk/ntddk.h": 1,
                "KiConnectVectorToInterrupt": 1,
                "KiVdmHandleOpcode": 1,
                "ntoskrnl/ob/obwait.c": 1,
                "NtQueryKey": 1,
                "CcRosReleaseCacheSegment": 1,
                "KdPortInitializeEx": 1,
                "SeSetWorldSecurityDescriptor": 1,
                "include/reactos/libs/pseh/pseh3.h": 1,
                "ntoskrnl/config/cmboot.c": 1,
                "NtQueryDirectoryObject": 1,
                "NtSetIntervalProfile": 1,
                "RtlpInsertFreeBlock": 1,
                "MiDbgDumpMemoryDescriptors": 1,
                "RtlpDphShouldAllocateInPageHeap": 1,
                "FsRtlNotifyCompleteIrpList": 1,
                "CmpLoadHiveThread": 1,
                "MiRosCheckMemoryAreasRecursive": 1,
                "MmCreatePeb": 1,
                "get32": 1,
                "ExCreateHandleTable": 1,
                "MmCreateImageSection": 1,
                "RosSymZwSeekFile": 1,
                "MmCompressHelper": 1,
                "MmSetCleanPage": 1,
                "ntoskrnl/ps/job.c": 1,
                "NtOpenKeyedEvent": 1,
                "SSISystemTimeAdjustmentInformation": 1,
                "IopNotifyAlreadyRegisteredFileSystems": 1,
                "KiDispatchExceptionFromTrapFrame": 1,
                "KeAcquireQueuedSpinLockAtDpcLevel": 1,
                "RawCompletionRoutine": 1,
                "NtQueryPerformanceCounter": 1,
                "QSISystemPerformanceInformation": 1,
                "ntoskrnl/cc/copy.c": 1,
                "CmpBuildHashStackAndLookupCache": 1,
                "NtReplyWaitReceivePort": 1,
                "ExpTimerDpcRoutine": 1,
                "KiSelectNextThread": 1,
                "ObpInsertHandleCount": 1,
                "IopGetDriverObject": 1,
                "RpnpDumpStack": 1,
                "SSISystemCreateSession": 1,
                "ntoskrnl/ob/obname.c": 1,
                "ntoskrnl/io/iomgr/iomgr.c": 1,
                "KiAcquireGuardedMutex": 1,
                "KdbpCmdThread": 1,
                "ObFastDereferenceObject": 1,
                "ObpSetPermanentObject": 1,
                "ntoskrnl/ke/balmgr.c": 1,
                "QSISystemObjectInformation": 1,
                "NtIsProcessInJob": 1,
                "FsRtlLookupLastLargeMcbEntryAndIndex_internal": 1,
                "FstubReadSector": 1,
                "ExpGetCurrentUserUILanguage": 1,
                "KiServiceExit2": 1,
                "PopPerfIdleDpc": 1,
                "MmSessionDelete": 1,
                "ntoskrnl/ex/sysinfo.c": 1,
                "IopInitBootLog": 1,
                "KiGetFeatureBits": 1,
                "EnlistKeyBodyWithKCB": 1,
                "ntoskrnl/config/cmkcbncb.c": 1,
                "ptr_reg": 1,
                "MiFillSystemPageDirectory": 1,
                "MiCacheEvictPages": 1,
                "CcInitView": 1,
                "ObpFreeObjectNameBuffer": 1,
                "RtlImageRvaToSection": 1,
                "MiInitializeSessionSpaceLayout": 1,
                "lib/sdk/crt/string/strupr.c": 1,
                "MmFinalizeSectionPageOut": 1,
                "FsRtlAcquireFileExclusiveCommon": 1,
                "MmIsPageInUse": 1,
                "KdbpRpnEvaluateParsedExpression": 1,
                "ntoskrnl/include/internal/probe.h": 1,
                "KeSetBaseGdtSelector": 1,
                "KdpLoggerThread": 1,
                "KdbpAttachToProcess": 1,
                "NtOpenSemaphore": 1,
                "ObpAllocateObjectNameBuffer": 1,
                "__p__pwctype": 1,
                "ntoskrnl/io/pnpmgr/pnpmgr.c": 1,
                "PsGetNextProcessThread": 1,
                "MmGetExecuteOptions": 1,
                "RtlLockHeap": 1,
                "NtMakeTemporaryObject": 1,
                "KeTrapFrameToContext": 1,
                "MiRemovePageByColor": 1,
                "MiFreeInitializationCode": 1,
                "SepCreateToken": 1,
                "RtlpFreeAtomTable": 1,
                "IopGetDeviceProperty": 1,
                "KiUnexpectedInterruptTailHandler": 1,
                "KeUninitThread": 1,
                "OP_SIMD_Suffix": 1,
                "MmCreatePageFileSection": 1,
                "RtlpNtCreateKey": 1,
                "KdpPrompt": 1,
                "MmSetRmapListHeadPage": 1,
                "_strcmpi": 1,
                "MiIsBalancerThread": 1,
                "KiSetProcessorType": 1,
                "ntoskrnl/se/priv.c": 1,
                "RtlpDphPlaceOnVirtualList": 1,
                "ExTimedWaitForUnblockPushLock": 1,
                "MmGetImageInformation": 1,
                "PopGetSysButtonCompletion": 1,
                "IopPrepareDeviceForRemoval": 1,
                "ExReferenceCallBackBlock": 1,
                "CcRosGetCacheSegmentChain": 1,
                "MmSetPageProtect": 1,
                "ntoskrnl/io/iomgr/bootlog.c": 1,
                "MiCreateMemoryEvent": 1,
                "ntoskrnl/ke/i386/thrdini.c": 1,
                "NtWaitHighEventPair": 1,
                "MmCreateKernelStack": 1,
                "RtlExpandEnvironmentStrings_U": 1,
                "RpnpPopStack": 1,
                "ntoskrnl/mm/i386/../ARM3/miarm.h": 1,
                "MmSetExecuteOptions": 1,
                "RtlpPageHeapSetUserValue": 1,
                "ntoskrnl/include/internal/ke_x.h": 1,
                "CmpEnableLazyFlushDpcRoutine": 1,
                "RtlCopySidAndAttributesArray": 1,
                "KeSetQuantumProcess": 1,
                "RtlpGetMode": 1,
                "ntoskrnl/ex/timer.c": 1,
                "NtLoadKeyEx": 1,
                "PopShutdownHandler": 1,
                "CmpOrderGroup": 1,
                "CmpFreeDriverList": 1,
                "ExpLoadBootSymbols": 1,
                "KdIsThisAKdTrap": 1,
                "MmExtendCacheSection": 1,
                "ntoskrnl/ob/oblife.c": 1,
                "ntoskrnl/ke/profobj.c": 1,
                "ExFreeCallBack": 1,
                "lib/cmlib/hiveinit.c": 1,
                "IopQueryRemoveDeviceRelations": 1,
                "OpenRegistryHandlesFromSymbolicLink": 1,
                "MiCheckControlArea": 1,
                "MmTrimUserMemory": 1,
                "MiSetControlAreaSymbolsLoaded": 1,
                "MmPageOutDeleteMapping": 1,
                "NtCreateMutant": 1,
                "QSISystemInvalidInfoClass4": 1,
                "KeSetDisableBoostThread": 1,
                "ntoskrnl/ex/lookas.c": 1,
                "MiTestSpecialPool": 1,
                "xHalIoSetPartitionInformation": 1,
                "Ke386SetIOPL": 1,
                "NtGetPlugPlayEvent": 1,
                "KdbpDoCommand": 1,
                "ExpInitializeEventPairImplementation": 1,
                "NtReplyPort": 1,
                "FstubDbgGuidToString": 1,
                "MmFreeSwapPage": 1,
                "FsRtlPTeardownPerFileObjectContexts": 1,
                "RtlpVerGetCondition": 1,
                "MmIterateFirstNode": 1,
                "CcPfInitializePrefetcher": 1,
                "IopReadyDeviceObjects": 1,
                "ntoskrnl/ex/locale.c": 1,
                "ntoskrnl/config/cmsecach.c": 1,
                "ntoskrnl/dbgk/dbgkutil.c": 1,
                "RtlpPageHeapReAllocate": 1,
                "RosSymGetAddressInformation": 1,
                "IopOpenRegistryKeyEx": 1,
                "RtlpFreeUserStack": 1,
                "KiContinue": 1,
                "RawDispatch": 1,
                "CcRosLookupCacheSegment": 1,
                "CmFlushKey": 1,
                "ntoskrnl/io/iomgr/irq.c": 1,
                "ExpRemovePoolTailList": 1,
                "ntoskrnl/cache/section/sptab.c": 1,
                "_KeEnterCriticalRegion": 1,
                "CmpNameSize": 1,
                "lib/rtl/message.c": 1,
                "CmGetSystemDriverList": 1,
                "IopStopDevice": 1,
                "MiCalculatePageCommitment": 1,
                "MmFindRegion": 1,
                "ntoskrnl/config/cmdelay.c": 1,
                "PspQueryDescriptorThread": 1,
                "RtlCutoverTimeToSystemTime": 1,
                "MiBuildPagedPool": 1,
                "CmpSetSystemValues": 1,
                "NtSetDefaultHardErrorPort": 1,
                "_ltoa_s": 1,
                "CmpInsertKeyHash": 1,
                "PspReturnProcessQuotaSpecifiedPool": 1,
                "CmpLazyFlush": 1,
                "OP_OFF64": 1,
                "NtProtectVirtualMemory": 1,
                "KiHandleNmi": 1,
                "RtlSetProcessIsCritical": 1,
                "PspSetContext": 1,
                "MiCheckPdeForSessionSpace": 1,
                "ntoskrnl/fsrtl/filtrctx.c": 1,
                "ExpMoveFreeHandles": 1,
                "InbvGetDisplayState": 1,
                "QSISystemNextEventIdInformation": 1,
                "ObpDeallocateObject": 1,
                "NtSetUuidSeed": 1,
                "ispunct": 1,
                "IopInitLookasideLists": 1,
                "KiIsNpxErrataPresent": 1,
                "MiSessionLeader": 1,
                "ntoskrnl/ex/xipdisp.c": 1,
                "KiAttachProcess": 1,
                "RtlGetSecurityDescriptorRMControl": 1,
                "ntoskrnl/io/iomgr/ioevent.c": 1,
                "KeInitSystem": 1,
                "ExpInsertPoolHeadList": 1,
                "set_op": 1,
                "ntoskrnl/cc/view.c": 1,
                "RtlpInitEnvironment": 1,
                "RpnBinaryOperatorSub": 1,
                "_ui64toa": 1,
                "RtlpCreateUnCommittedRange": 1,
                "IopQueryHardwareIds": 1,
                "ExpAllocateMidLevelTable": 1,
                "RtlGetLastNtStatus": 1,
                "xHalEndOfBoot": 1,
                "lib/rtl/unicodeprefix.c": 1,
                "KiVdmOpcodeCLI": 1,
                "RawUnload": 1,
                "MmFreeSectionPage": 1,
                "NtLoadDriver": 1,
                "ntoskrnl/config/cmwraprs.c": 1,
                "NtQuerySystemEnvironmentValue": 1,
                "MiReadFilePage": 1,
                "CmpConvertLangId": 1,
                "KdbpPager": 1,
                "PopShutdownSystem": 1,
                "ExBlockPushLock": 1,
                "RtlpIsCharInUnicodeString": 1,
                "HvHiveWillShrink": 1,
                "GspHex2Long": 1,
                "NtEnumerateKey": 1,
                "lib/pseh/i386/pseh3.c": 1,
                "MmpDeleteSection": 1,
                "NtAccessCheck": 1,
                "CcRosCacheSegmentDecRefCount_": 1,
                "PsExitSpecialApc": 1,
                "ExpFreeTablePagedPool": 1,
                "MmFindGap": 1,
                "QSISystemRangeStartInformation": 1,
                "MmArmInitSystem": 1,
                "MiInsertInSystemSpace": 1,
                "FstubDbgPrintPartitionEx": 1,
                "PnpRootCreateDevice": 1,
                "MiUpdateThunks": 1,
                "HvpHiveHeaderChecksum": 1,
                "MmInitializeMemoryLimits": 1,
                "PopReadShutdownPolicy": 1,
                "ntoskrnl/cc/pin.c": 1,
                "ObInit2": 1,
                "MmGetFileNameForSection": 1,
                "CmpSelectLeaf": 1,
                "ntoskrnl/ps/kill.c": 1,
                "RtlCreateSecurityDescriptorRelative": 1,
                "NtStopProfile": 1,
                "FsRtlIsNotifyOnList": 1,
                "DbgkpOpenHandles": 1,
                "PopPerfIdle": 1,
                "NtFlushInstructionCache": 1,
                "PspTerminateProcess": 1,
                "KiCheckTimerTable": 1,
                "MiGetNextNode": 1,
                "_SEH3$_except_handler": 1,
                "ObQueryDeviceMapInformation": 1,
                "KiBugCheckDebugBreak": 1,
                "GspStopReply": 1,
                "RtlUnlockHeap": 1,
                "KiInitSpinLocks": 1,
                "NtReadVirtualMemory": 1,
                "QSISystemKernelDebuggerInformation": 1,
                "MmPageOutSectionView": 1,
                "NtQueryDefaultUILanguage": 1,
                "ntoskrnl/cc/cacheman.c": 1,
                "_ui64tow": 1,
                "RtlpDphPostProcessing": 1,
                "KdbpGetInstLength": 1,
                "RtlDebugDestroyHeap": 1,
                "Ki386InitializeTss": 1,
                "KeBugCheckUnicodeToAnsi": 1,
                "_atoldbl": 1,
                "lib/rtl/res.c": 1,
                "MiUnProtectFreeNonPagedPool": 1,
                "CmpRemoveKeyControlBlock": 1,
                "RtlAddAuditAccessObjectAce": 1,
                "FsRtlAcquireFileForModWriteEx": 1,
                "ExpBlockOnLockedHandleEntry": 1,
                "McbMappingCompare": 1,
                "IopQueueTargetDeviceEvent": 1,
                "MmGetSessionById": 1,
                "KiSwapContextEntry": 1,
                "ntoskrnl/ke/thrdobj.c": 1,
                "MiMakeProtectionMask": 1,
                "CmpHiveRootSecurityDescriptor": 1,
                "CpGetByte": 1,
                "CmpInitializeDelayedCloseTable": 1,
                "PspInitPhase0": 1,
                "SepReleaseSid": 1,
                "PspInitPhase1": 1,
                "RtlResetRtlTranslations": 1,
                "ntoskrnl/config/cmapi.c": 1,
                "get64": 1,
                "PipCallDriverAddDevice": 1,
                "KdbpOverwriteInstruction": 1,
                "NtNotifyChangeKey": 1,
                "RtlpHandleDpcStackException": 1,
                "FsRtlpPostStackOverflow": 1,
                "NtClearEvent": 1,
                "MiClearImports": 1,
                "_tolower": 1,
                "MmGetSectionAssociation": 1,
                "PsResumeThread": 1,
                "ntoskrnl/mm/ARM3/hypermap.c": 1,
                "IopStartBootLog": 1,
                "RtlLargeIntegerToChar": 1,
                "ntoskrnl/cc/mdl.c": 1,
                "IopGetDeviceDepth": 1,
                "NtRegisterThreadTerminatePort": 1,
                "KdbpPrint": 1,
                "NtQueryObject": 1,
                "HvInitialize": 1,
                "HvpAddBin": 1,
                "CmpAddDriverToList": 1,
                "MiInitializePfnForOtherProcess": 1,
                "NtOpenTimer": 1,
                "MmCopyVirtualMemory": 1,
                "lib/cmlib/hivewrt.c": 1,
                "ntoskrnl/io/iomgr/iocomp.c": 1,
                "SSISystemVerifierInformation": 1,
                "IopSetEvent": 1,
                "IopUpdateResourceMapForPnPDevice": 1,
                "MiInitializePoolEvents": 1,
                "ntoskrnl/ke/i386/ldt.c": 1,
                "IopAssignDeviceResources": 1,
                "ntoskrnl/io/iomgr/error.c": 1,
                "SepCreateImpersonationTokenDacl": 1,
                "MiGetPreviousNode": 1,
                "IopTraverseDeviceTreeNode": 1,
                "ExpAddTagForBigPages": 1,
                "NtCreatePort": 1,
                "NtOpenSymbolicLinkObject": 1,
                "RtlCreateUnicodeStringFromAsciiz": 1,
                "IopUnloadDevice": 1,
                "SSISystemExtendServiceTableInformation": 1,
                "MiMapPageInHyperSpace": 1,
                "KdbpNopPrintDisasm": 1,
                "lib/rtl/generictable.c": 1,
                "IopCreateRootDirectories": 1,
                "KiInitializeDpc": 1,
                "ExCreateHandle": 1,
                "xHalMirrorPhysicalMemory": 1,
                "lib/rtl/unicode.c": 1,
                "NtQuerySymbolicLinkObject": 1,
                "CmpDelayCloseWorker": 1,
                "ntoskrnl/ex/fmutex.c": 1,
                "ntoskrnl/po/poshtdwn.c": 1,
                "ObInitializeFastReference": 1,
                "MiFindContiguousMemory": 1,
                "CpReadLsr": 1,
                "MmCheckSystemImage": 1,
                "KiReadyThread": 1,
                "IopAbortInterruptedIrp": 1,
                "CcRosDeleteFileCache": 1,
                "FstubDbgPrintSetPartitionEx": 1,
                "IopStartRamdisk": 1,
                "ntoskrnl/include/internal/spinlock.h": 1,
                "RtlpDphProtectVm": 1,
                "FstubReadPartitionTableMBR": 1,
                "ExpFreeHandleTable": 1,
                "CmpSplitLeaf": 1,
                "GdbPutChar": 1,
                "MmDeleteKernelStack": 1,
                "RtlInitializeSListHead": 1,
                "IopInterlockedIncrementUlong": 1,
                "NtCreateProfile": 1,
                "ntoskrnl/inbv/inbv.c": 1,
                "MmArmAccessFault": 1,
                "KiNpxHandler": 1,
                "KdbpCliModuleLoaded": 1,
                "KdbpCmdProc": 1,
                "SSISystemSetTimeSlipEvent": 1,
                "RtlpDphAllocateNode": 1,
                "PspShutdownProcessManager": 1,
                "KdbpCliInterpretInitFile": 1,
                "MmProtectSectionView": 1,
                "ntoskrnl/kd/wrappers/bochs.c": 1,
                "RtlInitializeHeapLock": 1,
                "KiTrap03Handler": 1,
                "FstubWriteHeaderEFI": 1,
                "IopCreateArcNamesCd": 1,
                "NameToOrdinal": 1,
                "ntoskrnl/lpc/port.c": 1,
                "NtCreateThread": 1,
                "OP_STi": 1,
                "HdlspPutData": 1,
                "MmCleanProcessAddressSpace": 1,
                "InbvBufferToScreenBlt": 1,
                "RtlpDebugPageHeapValidate": 1,
                "MmZeroPageThread": 1,
                "MmDereferencePage": 1,
                "KdbpSymUnicodeToAnsi": 1,
                "CmQueryKey": 1,
                "KeSetSystemTime": 1,
                "CmpRemoveFromDelayedClose": 1,
                "IopActionInterrogateDeviceStack": 1,
                "LpcExitThread": 1,
                "RtlpDphSetProtectionBeforeUse": 1,
                "MiInitializeWorkingSetList": 1,
                "PiFreeGenericTableEntry": 1,
                "MiDereferenceSession": 1,
                "NtSetInformationDebugObject": 1,
                "lib/rtl/rtlavl.h": 1,
                "MmDeterminePoolType": 1,
                "DbgkpFreeDebugEvent": 1,
                "lib/sdk/crt/wstring/wcsicmp.c": 1,
                "ntoskrnl/fsrtl/fsrtlpc.c": 1,
                "PspDumpThreads": 1,
                "PopGracefulShutdown": 1,
                "NtPowerInformation": 1,
                "CcRosCreateCacheSegment": 1,
                "SepInitPrivileges": 1,
                "ntoskrnl/ke/bug.c": 1,
                "lib/sdk/crt/string/strstr.c": 1,
                "find_entry_by_id": 1,
                "ExpAllocateHandleTableEntry": 1,
                "LockPeekNextIrp": 1,
                "MmGetPageProtect": 1,
                "VdmDispatchBop": 1,
                "xHalReferenceHandler": 1,
                "MiInitBalancerThread": 1,
                "RtlEqualComputerName": 1,
                "ntoskrnl/fsrtl/fastio.c": 1,
                "ntoskrnl/cache/section/data.c": 1,
                "ExpDesktopClose": 1,
                "RtlpDphReportCorruptedBlock": 1,
                "MmGetSegmentRmap": 1,
                "ntoskrnl/include/internal/arch/../i386/trap_x.h": 1,
                "lib/sdk/crt/float/isnan.c": 1,
                "RawQueryVolumeInformation": 1,
                "_i64tow_s": 1,
                "iswupper": 1,
                "MmDeleteVirtualMapping": 1,
                "CmpDoFlushNextHive": 1,
                "CmpInitSecurityCache": 1,
                "PsGetNextProcess": 1,
                "RtlpFreeAtomHandle": 1,
                "MmCreateVirtualMapping": 1,
                "CcRosGetCacheSegment": 1,
                "CmpLockRegistry": 1,
                "KdpBochsInit": 1,
                "ntoskrnl/kdbg/kdb_keyboard.c": 1,
                "Ki386AllocateContiguousMemory": 1,
                "KiDoBugCheckCallbacks": 1,
                "print_insn": 1,
                "DbgkCreateThread": 1,
                "KdbpSafeWriteMemory": 1,
                "MiSwapInPage": 1,
                "ntoskrnl/ex/win32k.c": 1,
                "RtlFirstFreeAce": 1,
                "RtlSetThreadErrorMode": 1,
                "ExpAllocateHandleTable": 1,
                "PspCreateProcess": 1,
                "ntoskrnl/mm/ARM3/drvmgmt.c": 1,
                "IopCheckBackupRestorePrivilege": 1,
                "FstubWriteBootSectorEFI": 1,
                "DisplayBootBitmap": 1,
                "KdbpEvaluateExpression": 1,
                "ExpInsertPoolTracker": 1,
                "ExInitializePoolDescriptor": 1,
                "ntoskrnl/ob/obref.c": 1,
                "ntoskrnl/kdbg/kdb_cli.c": 1,
                "RtlpValidateHeap": 1,
                "CcMdlReadComplete2": 1,
                "NtTerminateProcess": 1,
                "LpcpClosePort": 1,
                "ExTryToAcquireFastMutex": 1,
                "RpnpParseExpression": 1,
                "SeDeassignPrimaryToken": 1,
                "LdrpAccessResource": 1,
                "InitializePool": 1,
                "PspExitProcess": 1,
                "ntoskrnl/mm/ARM3/virtual.c": 1,
                "MiMapPfnDatabase": 1,
                "FsRtlInitializeLargeMcbs": 1,
                "QSISystemPoolTagInformation": 1,
                "ExUnlockHandleTableEntry": 1,
                "PspRemoveProcessFromJob": 1,
                "ntoskrnl/config/cmlazy.c": 1,
                "RtlDestroyEnvironment": 1,
                "RtlValidAcl": 1,
                "CmpGetBiosVersion": 1,
                "ObpLookupObjectName": 1,
                "KdpSerialDebugPrint": 1,
                "SepInitSecurityIDs": 1,
                "PiInitCacheGroupInformation": 1,
                "RtlpDphFreeNodeForTable": 1,
                "MiBuildPfnDatabaseFromLoaderBlock": 1,
                "ObpDuplicateHandleCallback": 1,
                "RtlpVerCompare": 1,
                "MiMapViewInSystemSpace": 1,
                "ObDereferenceDeviceMap": 1,
                "PopSendSetSystemPowerState": 1,
                "CmpInitializeHardwareConfiguration": 1,
                "IopQueryDeviceCapabilities": 1,
                "KeSignalGateBoostPriority": 1,
                "iswctype": 1,
                "KeGetBugMessageText": 1,
                "ExpInitializeKeyedEventImplementation": 1,
                "HvGetCellSize": 1,
                "ntoskrnl/mm/ARM3/pagfault.c": 1,
                "XIPpFindMemoryDescriptor": 1,
                "ntoskrnl/ob/oblink.c": 1,
                "QSISystemTimeOfDayInformation": 1,
                "MiFindInitializationCode": 1,
                "ExUpdateSystemTimeFromCmos": 1,
                "ntoskrnl/ke/i386/cpu.c": 1,
                "IopCreateRegistryKeyEx": 1,
                "KdbpStepOverInstruction": 1,
                "NtAssignProcessToJobObject": 1,
                "IopDecrementDeviceObjectHandleCount": 1,
                "ntoskrnl/include/internal/ex.h": 1,
                "PsInitSystem": 1,
                "PsSuspendThread": 1,
                "HeadlessInit": 1,
                "PspUserThreadStartup": 1,
                "IopInitializeBuiltinDriver": 1,
                "ExpAllocateHandleTableEntrySlow": 1,
                "NtCreateSymbolicLinkObject": 1,
                "MiNotifyMemoryEvents": 1,
                "RtlpDphRemoveFromFreeList": 1,
                "PspDeleteThread": 1,
                "MmDeleteProcessAddressSpace": 1,
                "Ki386FreeIdentityMap": 1,
                "MmInsertRmap": 1,
                "KiInitializeTSS": 1,
                "CmpFindDrivers": 1,
                "RtlpCoalesceFreeBlocks": 1,
                "KdbpSymFindModule": 1,
                "IopSendRemoveDeviceRelations": 1,
                "IopDecrementDeviceObjectRef": 1,
                "ExpOptimizePushLockList": 1,
                "HvIsCellAllocated": 1,
                "lib/sdk/crt/string/strtoul.c": 1,
                "KiSuspendRundown": 1,
                "_MiFlushMappedSection": 1,
                "DbgkpPostFakeModuleMessages": 1,
                "CmpParseKey": 1,
                "CmpAllocate": 1,
                "ObpDeleteSymbolicLinkName": 1,
                "QSISystemPathInformation": 1,
                "IopCreateArcNames": 1,
                "ExpCheckPoolLinks": 1,
                "QSISystemCurrentTimeZoneInformation": 1,
                "MiInsertVad": 1,
                "RawQueryInformation": 1,
                "ntoskrnl/io/pnpmgr/pnpinit.c": 1,
                "MmDetachSession": 1,
                "MmGetDeviceObjectForFile": 1,
                "NtAccessCheckAndAuditAlarm": 1,
                "LdrpCompareResourceNames_U": 1,
                "NtOpenSection": 1,
                "ntoskrnl/ex/hdlsterm.c": 1,
                "RtlAddAuditAccessAceEx": 1,
                "DbgkInitialize": 1,
                "RtlQueryHeapInformation": 1,
                "RtlComputeCrc32": 1,
                "IopStartNextPacket": 1,
                "ntoskrnl/ke/i386/usercall.c": 1,
                "ExpInitNls": 1,
                "prefix_name": 1,
                "ntoskrnl/ex/harderr.c": 1,
                "NtCallbackReturn": 1,
                "MmIsDirtyPageRmap": 1,
                "LockCompare": 1,
                "IopReinitializeDrivers": 1,
                "OP_XMM": 1,
                "KeInitializeEventPair": 1,
                "FixupChildLinks": 1,
                "DbgkpDeleteObject": 1,
                "RtlUniform": 1,
                "RawCleanup": 1,
                "PNI_Fixup": 1,
                "DbgkpConvertKernelToUserStateChange": 1,
                "ObpCreateDosDevicesDirectory": 1,
                "NtSetValueKey": 1,
                "RtlpGetCheckSum": 1,
                "ObReferenceObjectSafe": 1,
                "CmpCloseKeyObject": 1,
                "CmpCreateEvent": 1,
                "MiLocateKernelSections": 1,
                "wcscoll": 1,
                "ntoskrnl/ke/i386/context.c": 1,
                "CcRosFlushDirtyPages": 1,
                "Mmi386MakeKernelPageTableGlobal": 1,
                "lib/sdk/crt/string/wcstombs_nt.c": 1,
                "IopReportTargetDeviceChangeAsyncWorker": 1,
                "ExpDesktopOpen": 1,
                "KdbpCmdPcr": 1,
                "KiTrap0AHandler": 1,
                "IopCaptureUnicodeString": 1,
                "xHalHaltSystem": 1,
                "KdbRegisterCliCallback": 1,
                "RtlpGetIndexLength": 1,
                "iswascii": 1,
                "ObpHashSecurityDescriptor": 1,
                "PspInitializeProcessSecurity": 1,
                "MmFreePageTablesSectionSegment": 1,
                "KiInitializeMachineType": 1,
                "ExRefreshTimeZoneInformation": 1,
                "KeBalanceSetManager": 1,
                "SSISystemUnloadGdiDriverInformation": 1,
                "QSISystemModuleInformation": 1,
                "IopInitializeSystemDrivers": 1,
                "ntoskrnl/lpc/close.c": 1,
                "RtlAddAccessDeniedAce": 1,
                "RtlpSetInDbgPrint": 1,
                "ntoskrnl/ex/mutant.c": 1,
                "KdpGdbDebugPrint": 1,
                "MmQuerySectionView": 1,
                "CcRosInternalFreeCacheSegment": 1,
                "KiMoveApcState": 1,
                "ExpRemovePoolTracker": 1,
                "RtlSetHeapInformation": 1,
                "ntoskrnl/config/cmcontrl.c": 1,
                "ExpInsertPoolTailList": 1,
                "KiAdjustQuantumThread": 1,
                "KiVdmOpcodePrefix": 1,
                "KiUnwaitThread": 1,
                "MmInitPagingFile": 1,
                "CmpReferenceKeyControlBlock": 1,
                "streamout": 1,
                "FsRtlInitSystem": 1,
                "ObFastReferenceObject": 1,
                "CmpLockHiveFlusherShared": 1,
                "MiScanMemoryDescriptors": 1,
                "KbdSendCommandToMouse": 1,
                "GspBreakIn": 1,
                "MmReferencePage": 1,
                "RtlpAddHeapToProcessList": 1,
                "KiIsNpxPresent": 1,
                "GspGetEspFromTrapFrame": 1,
                "ntoskrnl/ex/event.c": 1,
                "FstubTranslatorNull": 1,
                "QSISystemProcessorSpeedInformation": 1,
                "MmDereserveSwapPages": 1,
                "RtlGetControlSecurityDescriptor": 1,
                "ExTimerRundown": 1,
                "MiAddHalIoMappings": 1,
                "SSISystemDeleteSession": 1,
                "CmpGetBiosDate": 1,
                "ExMapHandleToPointer": 1,
                "ObClearProcessHandleTable": 1,
                "KiIdleLoop": 1,
                "ObpEnumFindHandleProcedure": 1,
                "CountOnePageUp": 1,
                "CmpGetNameControlBlock": 1,
                "FstubCreateDiskRaw": 1,
                "isgraph": 1,
                "MmFindGapAtAddress": 1,
                "MmRebalanceMemoryConsumers": 1,
                "SSISystemPrioritySeperation": 1,
                "RawFileSystemControl": 1,
                "MmFreeDriverInitialization": 1,
                "DbgkExitProcess": 1,
                "NtQueryMutant": 1,
                "KiTrap08Handler": 1,
                "NtQueryInstallUILanguage": 1,
                "KdbpAttachToThread": 1,
                "KdbpCmdStep": 1,
                "Ki386CreateIdentityMap": 1,
                "VdmEndExecution": 1,
                "OP_IMREG": 1,
                "DbgkpQueueMessage": 1,
                "FstubWritePartitionTableMBR": 1,
                "lib/cmlib/hivebin.c": 1,
                "ExpAllocateTablePagedPoolNoZero": 1,
                "GspWriteMemSafe": 1,
                "MmAttachSession": 1,
                "KeInitializeProfile": 1,
                "SeCaptureLuidAndAttributesArray": 1,
                "ObReferenceProcessHandleTable": 1,
                "lib/rossym/find.c": 1,
                "IopTraverseDeviceTree": 1,
                "DbgkOpenProcessDebugPort": 1,
                "HvWriteHive": 1,
                "PiAllocateGenericTableEntry": 1,
                "CPUID": 1,
                "CmpInitializeMachineDependentConfiguration": 1,
                "IopNotifyPlugPlayNotification": 1,
                "KdDebuggerInitialize1": 1,
                "NOP_Fixup": 1,
                "ntoskrnl/include/internal/mm.h": 1,
                "PpInitSystem": 1,
                "CmpFreeKeyBody": 1,
                "MmInitMpwThread": 1,
                "KiRestoreProcessorControlState": 1,
                "PopSetSystemPowerStateTraverse": 1,
                "KdbpCmdContinue": 1,
                "ntoskrnl/mm/mmfault.c": 1,
                "RtlCreateEnvironment": 1,
                "PopInitShutdownList": 1,
                "MmMapViewOfSegment": 1,
                "CmpRemoveValueFromList": 1,
                "QSISystemRegistryQuotaInformation": 1,
                "ntoskrnl/kd/kdinit.c": 1,
                "KiParseProfileList": 1,
                "NtLoadKey2": 1,
                "_ui64toa_s": 1,
                "SSISystemRegistryQuotaInformation": 1,
                "MiCreatePebOrTeb": 1,
                "RtlpDphRemoveFromAvailableList": 1,
                "ExpLoadUuidSequence": 1,
                "KiTimerListExpire": 1,
                "HvGetCell": 1,
                "NtRaiseHardError": 1,
                "CmpLazyFlushDpcRoutine": 1,
                "KeZeroPages": 1,
                "GspHex2Mem": 1,
                "IopFreeDeviceNode": 1,
                "SeGetTokenControlInformation": 1,
                "RtlpMapFile": 1,
                "GspQuery": 1,
                "RtlpDphIsPageHeapBlock": 1,
                "KiRecordDr7": 1,
                "RtlpDphRaiseException": 1,
                "RosSymInit": 1,
                "CmpGetValueListFromCache": 1,
                "MiFindEmptyAddressRangeDownTree": 1,
                "NtImpersonateThread": 1,
                "NtCreateDirectoryObject": 1,
                "fetch_data": 1,
                "RtlExitUserThread": 1,
                "CcRosFlushCacheSegment": 1,
                "KdbpDeleteBreakPoint": 1,
                "lib/rtl/nls.c": 1,
                "QueryBinaryValueCallback": 1,
                "ObpCheckObjectReference": 1,
                "FstubCopyEntryEFI": 1,
                "XIPInit": 1,
                "NtAccessCheckByTypeAndAuditAlarm": 1,
                "lib/rtl/luid.c": 1,
                "PspCatchCriticalBreak": 1,
                "ExpInitializeTimerImplementation": 1,
                "KdbpCmdRegs": 1,
                "CmGetSystemControlValues": 1,
                "ObpCreateSymbolicLinkName": 1,
                "ntoskrnl/fsrtl/mcb.c": 1,
                "CmpFileSetSize": 1,
                "MmInitBsmThread": 1,
                "NtAccessCheckByTypeResultListAndAuditAlarmByHandle": 1,
                "xHalSetWakeEnable": 1,
                "print_insn_i386_intel": 1,
                "DbgkpSuspendProcess": 1,
                "MmCreateTeb": 1,
                "CcRosTrimCache": 1,
                "NtAreMappedFilesTheSame": 1,
                "SepCaptureAcl": 1,
                "NtCreatePagingFile": 1,
                "NtWriteVirtualMemory": 1,
                "lib/sdk/crt/mem/memcmp.c": 1,
                "MmGetFileObjectForSection": 1,
                "SepPrivilegeCheck": 1,
                "GspSetThread": 1,
                "_MiWriteBackPage": 1,
                "LockAllocate": 1,
                "ExChangeHandle": 1,
                "RtlpDphInitializeDelayedFreeQueue": 1,
                "lib/rtl/thread.c": 1,
                "OP_EM": 1,
                "RtlFindLongestRunSet": 1,
                "MmAccessFaultCacheSection": 1,
                "CmpOpenHiveFiles": 1,
                "NtQueryFullAttributesFile": 1,
                "ObpCompareSecurityDescriptors": 1,
                "NtResumeProcess": 1,
                "KdpTranslateAddress": 1,
                "MmInitSystem": 1,
                "KeSetAutoAlignmentProcess": 1,
                "OP_DSreg": 1,
                "IopReferenceVerifyVpb": 1,
                "MmGetRmapListHeadPage": 1,
                "LpcpFreeToPortZone": 1,
                "RawQueryFsDeviceInfo": 1,
                "ntoskrnl/mm/ARM3/iosup.c": 1,
                "MmFreeSectionSegments": 1,
                "LockReleaseQueueLock": 1,
                "CcRosMarkDirtyCacheSegment": 1,
                "ntoskrnl/ps/i386/psctx.c": 1,
                "QSISystemDockInformation": 1,
                "ExpAllocateSharedWaiterSemaphore": 1,
                "RosSymZwReadFile": 1,
                "ExpDesktopOkToClose": 1,
                "CmpAllocateKeyControlBlock": 1,
                "CmpDoSort": 1,
                "MiSetProtectionOnSection": 1,
                "ExDestroyHandleTable": 1,
                "CmpIsSafe": 1,
                "MiDoMappedCopy": 1,
                "OP_EX": 1,
                "RtlpDphFindBusyMemory": 1,
                "RtlSetAttributesSecurityDescriptor": 1,
                "ntoskrnl/config/ntapi.c": 1,
                "RtlDebugAllocateHeap": 1,
                "__iscsymf": 1,
                "ntoskrnl/vdm/vdmmain.c": 1,
                "MmCreateDataFileSection": 1,
                "IopCancelRemoveDeviceRelations": 1,
                "ObpCheckTraverseAccess": 1,
                "IopDetermineDefaultInterfaceType": 1,
                "QSISystemNonPagedPoolInformation": 1,
                "RtlpSecMemFreeVirtualMemory": 1,
                "MmFreeLoaderBlock": 1,
                "MiInsertBasedSection": 1,
                "KdpPhysRead": 1,
                "RtlpNtQueryValueKey": 1,
                "MiFindEmptyAddressRangeInTree": 1,
                "HvpInitializeMemoryInplaceHive": 1,
                "ntoskrnl/ex/zone.c": 1,
                "KiSuspendNop": 1,
                "push_language": 1,
                "RtlEqualDomainName": 1,
                "ntoskrnl/ps/thread.c": 1,
                "InbvIndicateProgress": 1,
                "ntoskrnl/config/cmconfig.c": 1,
                "MiInitializeSessionPool": 1,
                "CmpInitializeCache": 1,
                "ntoskrnl/include/internal/ob_x.h": 1,
                "GspSetRegistersInTrapFrame": 1,
                "NtWaitForDebugEvent": 1,
                "NtCreateIoCompletion": 1,
                "IopCreateObjectTypes": 1,
                "KiSystemServiceHandler": 1,
                "IopNormalizeImagePath": 1,
                "CmpShutdownWorkers": 1,
                "ntoskrnl/mm/balance.c": 1,
                "KeSuspendThread": 1,
                "CmpRemoveFromHiveFileList": 1,
                "xHalInitPowerManagement": 1,
                "IopDeleteDevice": 1,
                "KdpKdbgInit": 1,
                "MiRosCheckMemoryAreas": 1,
                "IopReassignSystemRoot": 1,
                "ProtectToPTE": 1,
                "ExpFindAndRemoveTagBigPages": 1,
                "ExpDeleteCallback": 1,
                "MmNotPresentFaultCacheSectionInner": 1,
                "ntoskrnl/ke/apc.c": 1,
                "CmpGetValueKeyFromCache": 1,
                "MmSetDirtyAllRmaps": 1,
                "ObpParseSymbolicLinkToIoDeviceObject": 1,
                "RtlDeNormalizeProcessParams": 1,
                "FstubVerifyPartitionTableEFI": 1,
                "KiLoadFastSyscallMachineSpecificRegisters": 1,
                "ObpCloseHandleCallback": 1,
                "PspTerminateThreadByPointer": 1,
                "_MmGetPageEntrySectionSegment": 1,
                "KiInterruptDispatch": 1,
                "RtlDispatchException": 1,
                "SeReleaseSidAndAttributesArray": 1,
                "ntoskrnl/mm/ARM3/procsup.c": 1,
                "WriteCacheSegment": 1,
                "LdrProcessDriverModule": 1,
                "KdpSerialInit": 1,
                "MmAlterViewAttributes": 1,
                "RtlpSafeCopyMemory": 1,
                "ExComputeTickCountMultiplier": 1,
                "MiSessionInitializeWorkingSetList": 1,
                "CmpFindTagIndex": 1,
                "KiExitDispatcher": 1,
                "SSISystemDpcBehaviourInformation": 1,
                "NtRemoveProcessDebug": 1,
                "MmIsSpecialPoolAddress": 1,
                "MiDbgUnTranslatePhysicalAddress": 1,
                "ntoskrnl/io/pnpmgr/pnproot.c": 1,
                "PopGetDope": 1,
                "ntoskrnl/include/internal/se.h": 1,
                "KdbpEnableBreakPoint": 1,
                "ExTryToAcquireResourceExclusiveLite": 1,
                "SepAccessCheck": 1,
                "RtlpInitAtomTableLock": 1,
                "IopUpdateRootKey": 1,
                "Ki386MapAddress": 1,
                "VdmpStartExecution": 1,
                "ExpDeleteMutant": 1,
                "MmAllocateSpecialPool": 1,
                "RtlIsTextUnicode": 1,
                "CmInitSystem1": 1,
                "ntoskrnl/ke/i386/kiinit.c": 1,
                "KiInterruptTemplateHandler": 1,
                "SepDeleteToken": 1,
                "KiRaiseAssertionHandler": 1,
                "lib/rtl/debug.c": 1,
                "CpPutByte": 1,
                "ObpSetHandleAttributes": 1,
                "ExpDeleteTimer": 1,
                "IopMarkBootPartition": 1,
                "lib/rtl/network.c": 1,
                "NtQueryPortInformationProcess": 1,
                "CmpFindValueByNameFromCache": 1,
                "MiCreateDataFileMap": 1,
                "FstubTranslateRequirement": 1,
                "NtSetDefaultLocale": 1,
                "PspSystemThreadStartup": 1,
                "IopReinitializeBootDrivers": 1,
                "RtlpLockAtomTable": 1,
                "HalpGetFullGeometry": 1,
                "MmInitializeBalancer": 1,
                "KeFreezeExecution": 1,
                "KiQueueReadyThread": 1,
                "HvSyncHive": 1,
                "ntoskrnl/mm/ARM3/special.c": 1,
                "MmUnsharePageEntrySectionSegment": 1,
                "lib/rossym/fromfile.c": 1,
                "RtlSetUserFlagsHeap": 1,
                "lib/rtl/acl.c": 1,
                "MmAccessFault": 1,
                "MmGetSessionIdEx": 1,
                "RtlpIsShortIllegal": 1,
                "SSISystemCurrentTimeZoneInformation": 1,
                "RtlpEnsureBufferSize": 1,
                "MiRemoveFromSystemSpace": 1,
                "LpcpSaveDataInfoMessage": 1,
                "PsOpenTokenOfProcess": 1,
                "IopLegacyResourceAllocation": 1,
                "KdpGetDebugMode": 1,
                "CmQueryValueKey": 1,
                "RtlGetCurrentPeb": 1,
                "KeRosCaptureUserStackBackTrace": 1,
                "_MmUnlockSectionSegment": 1,
                "KiInitSystem": 1,
                "NtInitializeRegistry": 1,
                "KiInsertQueue": 1,
                "MiReadPage": 1,
                "MmIsAvailableSwapPage": 1,
                "FsRtlpRebuildSharedLockRange": 1,
                "IopFreeMiniPacket": 1,
                "MmDeleteProcessAddressSpace2": 1,
                "CmpGetSymbolicLink": 1,
                "CmpFindSubKeyByName": 1,
                "IopFetchConfigurationInformation": 1,
                "NtUnloadDriver": 1,
                "CmpUnlockHiveFlusher": 1,
                "ntoskrnl/io/pnpmgr/pnputil.c": 1,
                "MiAddMappedPtes": 1,
                "xHalIoWritePartitionTable": 1,
                "CmpFlushNotifiesOnKeyBodyList": 1,
                "MiInitializeSessionWsSupport": 1,
                "QSISystemSessionProcessesInformation": 1,
                "QSISystemLookasideInformation": 1,
                "IopQueryRemoveChildDevices": 1,
                "ntoskrnl/mm/ARM3/mminit.c": 1,
                "RtlFreeSid": 1,
                "RtlSetInformationAcl": 1,
                "ntoskrnl/kd/wrappers/kdbg.c": 1,
                "KeRundownThread": 1,
                "RawMountVolume": 1,
                "KdbpSafeReadMemory": 1,
                "ntoskrnl/po/power.c": 1,
                "ntoskrnl/fsrtl/stackovf.c": 1,
                "__iscsym": 1,
                "xKdSetupPciDeviceForDebugging": 1,
                "LpcpFreeConMsg": 1,
                "CmpFindSubKeyByNumber": 1,
                "CmpPrepareKey": 1,
                "HvpVerifyHiveHeader": 1,
                "KdbpCmdDisassembleX": 1,
                "iswalpha": 1,
                "RtlInitializeRangeListPackage": 1,
                "RtlCreateProcessParameters": 1,
                "ExpWindowStationOkToClose": 1,
                "NtTestAlert": 1,
                "SeSetSecurityAccessMask": 1,
                "CmpTestRegistryLockExclusive": 1,
                "ExpSystemErrorHandler": 1,
                "ntoskrnl/io/iomgr/ramdisk.c": 1,
                "MiIsPfnInUse": 1,
                "RtlValidateHeap": 1,
                "FsRtlCompleteLockIrpReal": 1,
                "QSISystemStackTraceInformation": 1,
                "NtDeleteKey": 1,
                "ntoskrnl/po/events.c": 1,
                "SeCaptureSubjectContextEx": 1,
                "KiAmdK6InitializeMTRR": 1,
                "ExReleaseFastMutex": 1,
                "Ki386ConvertPte": 1,
                "MmCreateProcessAddressSpace": 1,
                "KeTestAlertThread": 1,
                "MmIsPageSwapEntry": 1,
                "ntoskrnl/mm/ARM3/miarm.h": 1,
                "PspReapRoutine": 1,
                "PspQueueApcSpecialApc": 1,
                "LockRemoveIrp": 1,
                "SeAuditProcessCreate": 1,
                "HexValue": 1,
                "ExpEncodePoolLink": 1,
                "ntoskrnl/io/iomgr/iomdl.c": 1,
                "PsSuspendProcess": 1,
                "NtCreateEventPair": 1,
                "KdbpMemoryError": 1,
                "SepDuplicateToken": 1,
                "FstubSetPartitionInformationEFI": 1,
                "PopCleanupPowerState": 1,
                "MiCowCacheSectionPage": 1,
                "KiVdmOpcodeSTI": 1,
                "IopRemoveDevice": 1,
                "MatchAll": 1,
                "CmpCleanUpSubKeyInfo": 1,
                "PnpRootRegisterDevice": 1,
                "MmGetFileNameForAddress": 1,
                "IopCreateDriver": 1,
                "NtReplyWaitReceivePortEx": 1,
                "SeAuditProcessExit": 1,
                "RtlDnsHostNameToComputerName": 1,
                "ExpTimerApcKernelRoutine": 1,
                "MiRemoveNode": 1,
                "KiVdmOpcodePOPF": 1,
                "MiProcessValidPteList": 1,
                "RtlpDphLeaveCriticalSection": 1,
                "KiInitializePAT": 1,
                "LpcpInitializePortQueue": 1,
                "LpcpMoveMessage": 1,
                "LpcpFreePortClientSecurity": 1,
                "KiTrap04Handler": 1,
                "RtlpNtMakeTemporaryKey": 1,
                "IopSynchronousCall": 1,
                "CmpSetGlobalQuotaAllowed": 1,
                "MmGetReferenceCountPage": 1,
                "RtlpDphSetProtectionAfterUse": 1,
                "MiSectionPageTableGet": 1,
                "ntoskrnl/fstub/disksup.c": 1,
                "KeInvalidAccessAllowed": 1,
                "ExpCheckForApcsDisabled": 1,
                "CmpInitializeRegistryNode": 1,
                "MiSectionPageTableFree": 1,
                "MmUnmapCacheViewInSystemSpace": 1,
                "ntoskrnl/mm/ARM3/i386/init.c": 1,
                "QSISystemDpcBehaviourInformation": 1,
                "ntoskrnl/include/internal/lpc_x.h": 1,
                "ntoskrnl/ke/timerobj.c": 1,
                "iswcntrl": 1,
                "RtlSetControlSecurityDescriptor": 1,
                "RtlpNtSetValueKey": 1,
                "LookupEntryPoint": 1,
                "MiUseLargeDriverPage": 1,
                "MiInitializeSystemSpaceMap": 1,
                "MiIsPageFromCache": 1,
                "KdbpCliMainLoop": 1,
                "ntoskrnl/kd/i386/kdmemsup.c": 1,
                "MiComputeColorInformation": 1,
                "IopGetRelatedDevice": 1,
                "Ki386EnableXMMIExceptions": 1,
                "KeContextToTrapFrame": 1,
                "KiInsertTreeTimer": 1,
                "ExGetCallBackBlockContext": 1,
                "_SEH3$_FilterFunction.40597": 1,
                "_SEH3$_FilterFunction.40506": 1,
                "_SEH3$_FilterFunction.40399": 1,
                "_SEH3$_FilterFunction.40317": 1,
                "_SEH3$_FilterFunction.40266": 1,
                "_SEH3$_FilterFunction.40189": 1,
                "_SEH3$_FilterFunction.40520": 1,
                "_SEH3$_FilterFunction.40450": 1,
                "_SEH3$_FilterFunction.40380": 1,
                "_SEH3$_FilterFunction.40338": 1,
                "_SEH3$_FilterFunction.40268": 1,
                "_SEH3$_FilterFunction.40198": 1,
                "_SEH3$_FilterFunction.40260": 1,
                "_SEH3$_FilterFunction.40190": 1,
                "_SEH3$_FilterFunction.40258": 1,
                "_SEH3$_FilterFunction.40219": 1,
                "_SEH3$_FilterFunction.40265": 1,
                "_SEH3$_FilterFunction.40229": 1,
                "_SEH3$_FilterFunction.40178": 1,
                "_SEH3$_FilterFunction.40377": 1,
                "_SEH3$_FilterFunction.40307": 1,
                "_SEH3$_FilterFunction.40195": 1,
                "_SEH3$_FilterFunction.40393": 1,
                "_SEH3$_FilterFunction.40278": 1,
                "_SEH3$_FilterFunction.40209": 1,
                "_SEH3$_FilterFunction.40376": 1,
                "_SEH3$_FilterFunction.40305": 1,
                "_SEH3$_FilterFunction.40263": 1,
                "_SEH3$_FilterFunction.40193": 1,
                "_SEH3$_FilterFunction.40810": 1,
                "_SEH3$_FilterFunction.40238": 1,
                "_SEH3$_FilterFunction.40224": 1,
                "_SEH3$_FilterFunction.40494": 1,
                "_SEH3$_FilterFunction.40414": 1,
                "_SEH3$_FilterFunction.40341": 1,
                "_SEH3$_FilterFunction.40372": 1,
                "_SEH3$_FilterFunction.40302": 1,
                "_SEH3$_FilterFunction.40230": 1,
                "_SEH3$_FilterFunction.40435": 1,
                "_SEH3$_FilterFunction.40355": 1,
                "_SEH3$_FilterFunction.40233": 1,
                "_SEH3$_FilterFunction.40269": 1,
                "_SEH3$_FilterFunction.40174": 1,
                "_SEH3$_FinallyFunction.40218": 1,
                "_SEH3$_FinallyFunction.40298": 1,
                "_SEH3$_FinallyFunction.40253": 1,
                "_SEH3$_FilterFunction.40421": 1,
                "_SEH3$_FilterFunction.40342": 1,
                "_SEH3$_FilterFunction.40301": 1,
                "_SEH3$_FilterFunction.40231": 1,
                "_SEH3$_FilterFunction.40259": 1,
                "_SEH3$_FilterFunction.40291": 1,
                "_SEH3$_FilterFunction.41080": 1,
                "_SEH3$_FilterFunction.41023": 1,
                "_SEH3$_FilterFunction.40392": 1,
                "_SEH3$_FilterFunction.40321": 1,
                "_SEH3$_FilterFunction.40223": 1,
                "_SEH3$_FilterFunction.40467": 1,
                "_SEH3$_FilterFunction.40255": 1,
                "_SEH3$_FilterFunction.40212": 1,
                "_SEH3$_FilterFunction.40397": 1,
                "_SEH3$_FilterFunction.40325": 1,
                "_SEH3$_FilterFunction.40323": 1,
                "_SEH3$_FilterFunction.40379": 1,
                "_SEH3$_FilterFunction.40160": 1,
                "_SEH3$_FilterFunction.40191": 1,
                "_SEH3$_FilterFunction.40167": 1,
                "_SEH3$_FilterFunction.41508": 1,
                "_SEH3$_FilterFunction.40250": 1,
                "_SEH3$_FilterFunction.40156": 1,
                "_SEH3$_FilterFunction.45347": 1,
                "_SEH3$_FilterFunction.45308": 1,
                "_SEH3$_FilterFunction.45269": 1,
                "__udivdi3": 1,
                "__divdi3": 1,
                "__umoddi3": 1,
                "__moddi3": 1,
                "RAMDISK_BOOTDISK_GUID": 1,
                "DbgkDebugObjectType": 1,
                "SeChangeNotifyPrivilege": 1,
                "IopCancelSpinLock": 1,
                "ExEventPairObjectType": 1,
                "RtlpDphTargetDllsUnicode": 1,
                "KiUnexpectedInterruptTail": 1,
                "GUID_VIDEO_SUBGROUP": 1,
                "ALL_POWERSCHEMES_GUID": 1,
                "MxcsrFeatureMask": 1,
                "IopLogPortConnected": 1,
                "ZwUnloadKeyEx": 1,
                "NtSystemRoot": 1,
                "@ExfReleaseRundownProtectionEx": 1,
                "MiHighestUserPde": 1,
                "wine_wctype_table": 1,
                "@KeAcquireInStackQueuedSpinLockForDpc": 1,
                "_imp__VidSolidColorFill": 1,
                "SeCreateSymbolicLinkPrivilege": 1,
                "IopFsNotifyChangeQueueHead": 1,
                "ZwRemoveIoCompletion": 1,
                "KiTimerExpireDpc": 1,
                "KeGdiFlushUserBatch": 1,
                "_imp__KeFlushWriteBuffer": 1,
                "KdpEarlyBreak": 1,
                "GdbPortNumber": 1,
                "MmRomPageListHead": 1,
                "ZwLockRegistryKey": 1,
                "KeUserPopEntrySListResume": 1,
                "ValidKernelPteLocal": 1,
                "ZwApphelpCacheControl": 1,
                "ObpReaperWorkItem": 1,
                "MiEndOfInitialPoolFrame": 1,
                "BugCheckCallbackLock": 1,
                "ZwAccessCheck": 1,
                "BATTERY_CYCLE_COUNT_WMI_GUID": 1,
                "ZwQueryInformationPort": 1,
                "MiLargePageRanges": 1,
                "ObpTypeMapping": 1,
                "ZwAllocateUuids": 1,
                "KiCallUserMode": 1,
                "PspVariableQuantums": 1,
                "PspReaperListHead": 1,
                "HvShutdownComplete": 1,
                "MmPeakCommitment": 1,
                "CmpHoldLazyFlush": 1,
                "ZwRequestPort": 1,
                "KeBootTimeBias": 1,
                "SePublicDefaultUnrestrictedDacl": 1,
                "MmPageLocationList": 1,
                "GUID_CRITICAL_POWER_TRANSITION": 1,
                "ObpLUIDDeviceMapsEnabled": 1,
                "MiSessionTagSizePages": 1,
                "SeRelabelPrivilege": 1,
                "NtInitialUserProcessBufferLength": 1,
                "MmBootImageSize": 1,
                "RtlRaiseStatus": 1,
                "ExSemaphoreMapping": 1,
                "IopTimer": 1,
                "CmiVolatileHive": 1,
                "MxFreeDescriptor": 1,
                "ZwOpenKeyedEvent": 1,
                "KiInterruptTemplate2ndDispatch": 1,
                "@ExReleaseFastMutexUnsafe": 1,
                "IopDiskFileSystemQueueHead": 1,
                "SeBatchSid": 1,
                "KdpScreenLineLength": 1,
                "MiHighNonPagedPoolEvent": 1,
                "@ExfReleasePushLockShared": 1,
                "MmVerifyDriverBufferLength": 1,
                "RtlpBitsClearLow": 1,
                "GUID_DEVICE_ENUMERATE_REQUEST": 1,
                "RosSymCallbacks": 1,
                "IoArcHalDeviceName": 1,
                "@KeReleaseGuardedMutexUnsafe": 1,
                "__crt_xi_end__": 1,
                "ExpDefaultErrorPortProcess": 1,
                "ZwRequestWakeupLatency": 1,
                "MiPagedPoolSListHead": 1,
                "PspPriorityTable": 1,
                "@IoGetPagingIoPriority": 1,
                "ZwAlertResumeThread": 1,
                "_imp__KeStallExecutionProcessor": 1,
                "CmpBiosSearchEnd": 1,
                "MmLargeStackSize": 1,
                "KiTickOffset": 1,
                "GUID_TYPICAL_POWER_SAVINGS": 1,
                "KiProcessInSwapListHead": 1,
                "ExpTimeZoneId": 1,
                "MmMinimumNonPagedPoolSize": 1,
                "CmpFlushOnLockRelease": 1,
                "MI_PFN_CURRENT_PROCESS_NAME": 1,
                "GUID_BATTERY_SUBGROUP": 1,
                "ZwAllocateLocallyUniqueId": 1,
                "Kd_WIN2000_Mask": 1,
                "_imp__KeGetCurrentIrql": 1,
                "KiI386PentiumLockErrataPresent": 1,
                "ZwIsSystemResumeAutomatic": 1,
                "GUID_ACTIVE_POWERSCHEME": 1,
                "MmSystemSpaceLock": 1,
                "ZwSetContextThread": 1,
                "MiUsedSwapPages": 1,
                "ObsSecurityDescriptorCache": 1,
                "InitWinPEModeType": 1,
                "ZwWriteVirtualMemory": 1,
                "_imp_@KeAcquireSpinLockRaiseToSynch": 1,
                "PsDefaultThreadLocaleId": 1,
                "@InterlockedExchange": 1,
                "GlobalAtomTable": 1,
                "GUID_PROCESSOR_PERF_TIME_CHECK": 1,
                "MmMakeLowMemory": 1,
                "GUID_ACPI_CMOS_INTERFACE_STANDARD": 1,
                "ExpLastTimeZoneBias": 1,
                "@HalExamineMBR": 1,
                "_rt_psrelocs_start": 1,
                "MiSpecialPoolFirstPte": 1,
                "@KefReleaseSpinLockFromDpcLevel": 1,
                "RtlpDphDelayedFreeQueue": 1,
                "GUID_TARGET_DEVICE_REMOVE_COMPLETE": 1,
                "_IAT_end__": 1,
                "_head_drivers_base_bootvid_libbootvid_a": 1,
                "PspSystemDllBase": 1,
                "ExPoolLookasideListHead": 1,
                "DispatchTable": 1,
                "MmLargeSystemCache": 1,
                "CmpDelayedCloseTableLock": 1,
                "ZwCompareTokens": 1,
                "@InterlockedPushEntrySList": 1,
                "ExpFirmwareTableResource": 1,
                "ExpAltTimeZoneBias": 1,
                "RotBarSelection": 1,
                "ExpWorkerListHead": 1,
                "GUID_DEVINTERFACE_STORAGEPORT": 1,
                "PopDopeGlobalLock": 1,
                "KiTrap10": 1,
                "KdbOriginalThread": 1,
                "ExPoolFailures": 1,
                "GUID_DEVINTERFACE_CDCHANGER": 1,
                "MmSpecialPoolEnd": 1,
                "KiTrap13": 1,
                "RtlpDphDelayedTemporaryPushList": 1,
                "IopLogPort": 1,
                "KdpSerialSpinLock": 1,
                "MmPoolCodeStart": 1,
                "KiTrap11": 1,
                "ZwReplyWaitReceivePort": 1,
                "@ExInterlockedAddLargeStatistic": 1,
                "_imp__HalReportResourceUsage": 1,
                "_imp__VidCleanUp": 1,
                "GUID_BUS_TYPE_ISAPNP": 1,
                "GUID_BATTERY_DISCHARGE_LEVEL_2": 1,
                "_imp_@KfAcquireSpinLock": 1,
                "KiSMTProcessorsPresent": 1,
                "MiNonPagedPoolSListMaximum": 1,
                "MiHighMemoryEvent": 1,
                "MiPlatformCacheAttributes": 1,
                "KiMask32Array": 1,
                "PspCidTable": 1,
                "KiSwapContextInternal": 1,
                "CmpLoadHiveLock": 1,
                "GUID_BATTERY_DISCHARGE_LEVEL_3": 1,
                "ZwAccessCheckByType": 1,
                "MmSpecialPoolStart": 1,
                "Ki486CompatibilityLock": 1,
                "ZwLockProductActivationKeys": 1,
                "@IoWritePartitionTable": 1,
                "PspLegoNotifyRoutine": 1,
                "GUID_BATTERY_DISCHARGE_LEVEL_1": 1,
                "ValidKernelPdeLocal": 1,
                "GUID_DEVICE_ENUMERATED": 1,
                "SeAnonymousLogonSid": 1,
                "__RUNTIME_PSEUDO_RELOC_LIST_END__": 1,
                "MiSessionSpaceEnd": 1,
                "GUID_BATTERY_DISCHARGE_LEVEL_0": 1,
                "SeWorldSidAuthority": 1,
                "SeCreatePermanentPrivilege": 1,
                "RtlpDphReleaseFails": 1,
                "ObpKernelHandleTable": 1,
                "KeBugCheckOwnerRecursionCount": 1,
                "KiMinimumDpcRate": 1,
                "ExpNonPagedLookasideListLock": 1,
                "KiReadyScanLast": 1,
                "CmpBiosStrings": 1,
                "MiMemoryConsumers": 1,
                "DriverBootReinitTailEntry": 1,
                "MmMaxAdditionNonPagedPoolPerMb": 1,
                "MmTotalSystemDriverPages": 1,
                "RtlpDphBreakOptions": 1,
                "IopDatabaseLock": 1,
                "_imp__HalAdjustResourceList": 1,
                "SeSystemtimePrivilege": 1,
                "MmProtectToPteMask": 1,
                "KdpDmesgFreeBytes": 1,
                "NonPagedPoolDescriptor": 1,
                "KiNode0": 1,
                "MmSessionPoolSize": 1,
                "HandleTableListLock": 1,
                "IopTimerDpc": 1,
                "RtlpRangeListEntryLookasideList": 1,
                "KdpDebugBuffer": 1,
                "KdbpIsInDmesgMode": 1,
                "GUID_IO_TAPE_ERASE": 1,
                "MmAvailablePages": 1,
                "PopFlushPolicy": 1,
                "GUID_TARGET_DEVICE_QUERY_REMOVE": 1,
                "@KeReleaseInStackQueuedSpinLockFromDpcLevel": 1,
                "MmNumberOfSystemPtes": 1,
                "@IoSetPartitionInformation": 1,
                "SeNtSidAuthority": 1,
                "MiWriteMutex": 1,
                "MmHeapDeCommitTotalFreeThreshold": 1,
                "__crt_xc_start__": 1,
                "GUID_DEVINTERFACE_MEDIUMCHANGER": 1,
                "@ExReleaseResourceLite": 1,
                "GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS": 1,
                "GUID_PROCESSOR_PERF_HISTORY": 1,
                "MmTrackPtes": 1,
                "SeLoadDriverPrivilege": 1,
                "MmHeapSegmentReserve": 1,
                "KiDebugService": 1,
                "KdbEnter": 1,
                "KiFastCallCopyDoneOnce": 1,
                "KeI386NpxPresent": 1,
                "KeBootTime": 1,
                "BaseArray": 1,
                "KeI386FxsrPresent": 1,
                "InbvProgressState": 1,
                "ZwCreatePort": 1,
                "RtlpRegPaths": 1,
                "ZwQueueApcThread": 1,
                "ExKeyedEventObjectType": 1,
                "ExpDesktopObjectOpen": 1,
                "@Exfi386InterlockedDecrementLong": 1,
                "KiNmiCallbackListHead": 1,
                "MmMirroring": 1,
                "InitIsWinPEMode": 1,
                "SeTcbPrivilege": 1,
                "NtInitialUserProcessBuffer": 1,
                "GUID_BUS_TYPE_USB": 1,
                "MmtotalCommitLimitMaximum": 1,
                "CmpEnableLazyFlushDpc": 1,
                "MmNumberOfFreeNonPagedPool": 1,
                "IopDeviceTreeLock": 1,
                "GUID_PROCESSOR_THROTTLE_MAXIMUM": 1,
                "SeCreatorSidAuthority": 1,
                "InbvProgressIndicator": 1,
                "MmDeadStackSListHead": 1,
                "MmTriageActionTaken": 1,
                "ExpKernelResolutionCount": 1,
                "ZwCreateProcessEx": 1,
                "KeI386XMMIPresent": 1,
                "SeRestrictedSid": 1,
                "@ExInterlockedPopEntrySList": 1,
                "_ctype": 1,
                "MmSystemPtesStart": 1,
                "MmNumberOfPhysicalPages": 1,
                "ExpSmallPagedPoolLookasideLists": 1,
                "KiFreezeExecutionLock": 1,
                "CmpFreeDelayItemsListHead": 1,
                "CmpSystemProcess": 1,
                "ObpTypeObjectType": 1,
                "ZwCreateProfile": 1,
                "ZwQueryAttributesFile": 1,
                "SeSystemAuthenticationId": 1,
                "MiKernelResourceStartPte": 1,
                "CmpHiveListHeadLock": 1,
                "ZwSetQuotaInformationFile": 1,
                "KeMinimumIncrement": 1,
                "KeRaiseUserExceptionDispatcher": 1,
                "SeManageVolumePrivilege": 1,
                "MmTransitionSharedPages": 1,
                "ExpResourceSpinLock": 1,
                "GUID_ALLOW_DISPLAY_REQUIRED": 1,
                "KeUserPopEntrySListFault": 1,
                "IoOtherOperationCount": 1,
                "_major_os_version__": 1,
                "GUID_DEVINTERFACE_HIDDEN_VOLUME": 1,
                "ZwSetSystemEnvironmentValueEx": 1,
                "GUID_BUS_TYPE_IRDA": 1,
                "PiInitGroupOrderTableCount": 1,
                "CmpDelayedCloseElements": 1,
                "GUID_ALLOW_AWAYMODE": 1,
                "CmpFreeKCBListHead": 1,
                "DbgUserBreakPoint": 1,
                "_imp_@KeAcquireInStackQueuedSpinLockRaiseToSynch": 1,
                "_imp__VidResetDisplay": 1,
                "PsPrioritySeparation": 1,
                "CmpDelayCloseIntervalInSeconds": 1,
                "CmpLazyFlushPending": 1,
                "HiveListValueName": 1,
                "ZwCreateThread": 1,
                "MiFirstReservedZeroingPte": 1,
                "GUID_IO_VOLUME_LOCK": 1,
                "SysThreadCreated": 1,
                "ZwResumeProcess": 1,
                "MmTotalPagesForPagingFile": 1,
                "_NlsOemLeadByteInfo": 1,
                "ZwPrivilegedServiceAuditAlarm": 1,
                "_imp__HalSetProfileInterval": 1,
                "SePublicDefaultUnrestrictedSd": 1,
                "_hal_halx86_libhal_a_iname": 1,
                "@ExInterlockedFlushSList": 1,
                "LpcpNextMessageId": 1,
                "GUID_ALLOW_SYSTEM_REQUIRED": 1,
                "_imp_@KeAcquireInStackQueuedSpinLock": 1,
                "KeProcessorArchitecture": 1,
                "GUID_PROCESSOR_PERF_INCREASE_TIME": 1,
                "CmNtGlobalFlag": 1,
                "_imp__HalTranslateBusAddress": 1,
                "@KeUpdateSystemTime": 1,
                "_imp__HalStartProfileInterrupt": 1,
                "IoSmallIrpLookaside": 1,
                "KiSystemCallTrapReturn": 1,
                "KiProcessOutSwapListHead": 1,
                "ExpDesktopObjectDelete": 1,
                "PspDefaultPagedLimit": 1,
                "ZwSetLowWaitHighEventPair": 1,
                "MiPagedPoolSListMaximum": 1,
                "_loader_flags__": 1,
                "PspThreadNotifyRoutineCount": 1,
                "_size_of_heap_commit__": 1,
                "GUID_PROCESSOR_PARKING_PERF_STATE": 1,
                "SeIncreaseQuotaPrivilege": 1,
                "MmCritsectTimeoutSeconds": 1,
                "KeI386CpuStep": 1,
                "CmpSelfHeal": 1,
                "__ImageBase": 1,
                "_imp__HalEnableSystemInterrupt": 1,
                "ExpEventMapping": 1,
                "GUID_BUS_TYPE_DOT4PRT": 1,
                "MmSessionBase": 1,
                "ExpThreadSetManagerEvent": 1,
                "CmpNoWrite": 1,
                "KeI386CpuType": 1,
                "MmEnforceWriteProtection": 1,
                "@IoAssignDriveLetters": 1,
                "_PsThreadType": 1,
                "ExpUnicodeCaseTableDataOffset": 1,
                "RtlpPageHeapSizeRangeEnd": 1,
                "GUID_IO_VOLUME_LOCK_FAILED": 1,
                "_RUNTIME_PSEUDO_RELOC_LIST__": 1,
                "SePublicOpenDacl": 1,
                "MmPagedPoolInfo": 1,
                "BATTERY_STATUS_WMI_GUID": 1,
                "GUID_MF_ENUMERATION_INTERFACE": 1,
                "ExStopBadTags": 1,
                "CmpSpecialBootCondition": 1,
                "MiSegmentList": 1,
                "ZwUnlockFile": 1,
                "ZwTraceEvent": 1,
                "@ExfReleaseRundownProtectionCacheAwareEx": 1,
                "ExpWindowStationMapping": 1,
                "ObpObjectTypes": 1,
                "MmSessionImageSize": 1,
                "GUID_PROCESSOR_PERF_BOOST_POLICY": 1,
                "MmNonPagedPoolEnd": 1,
                "GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY": 1,
                "KeRosVideoBiosDate": 1,
                "ZwSetInformationKey": 1,
                "_imp_@KeReleaseQueuedSpinLock": 1,
                "_setjmp": 1,
                "RtlpDphFreeFails": 1,
                "MmSizeOfPagedPoolInBytes": 1,
                "MiSessionLastPte": 1,
                "CcBcbSpinLock": 1,
                "MainSSPT": 1,
                "ZwOpenSemaphore": 1,
                "GUID_BUS_TYPE_PCMCIA": 1,
                "_rt_psrelocs_size": 1,
                "SeLocalSidAuthority": 1,
                "ZwQueryEvent": 1,
                "GUID_IO_DEVICE_EXTERNAL_REQUEST": 1,
                "GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING": 1,
                "ObpInitializationPhase": 1,
                "GUID_HWPROFILE_QUERY_CHANGE": 1,
                "@IoReadPartitionTable": 1,
                "ExpWindowStationObjectOkToClose": 1,
                "CmCSDVersionString": 1,
                "ExpProfileMutex": 1,
                "@ExfAcquireRundownProtectionCacheAwareEx": 1,
                "GUID_DEVINTERFACE_FLOPPY": 1,
                "_imp__VidBitBlt": 1,
                "GUID_IO_VOLUME_CHANGE_SIZE": 1,
                "ExpPoolBigEntriesInUse": 1,
                "@ExReleaseResourceAndLeaveCriticalRegion": 1,
                "PopEventCallout": 1,
                "GUID_VIDEO_ADAPTIVE_POWERDOWN": 1,
                "KeUserCallbackDispatcher": 1,
                "CmpGlobalQuotaAllowed": 1,
                "MmProcessCommit": 1,
                "_imp__HalReturnToFirmware": 1,
                "GUID_POWER_DEVICE_WAKE_ENABLE": 1,
                "SeBackupPrivilege": 1,
                "GUID_DEVICE_ARRIVAL": 1,
                "@InterlockedPopEntrySList": 1,
                "KiCallbackReturn": 1,
                "FillPattern": 1,
                "ZwQueryPerformanceCounter": 1,
                "_imp_@KeAcquireQueuedSpinLockRaiseToSynch": 1,
                "CmpGlobalQuota": 1,
                "ZwFlushWriteBuffer": 1,
                "ShortTime": 1,
                "MmFreePageListHead": 1,
                "ExTimerType": 1,
                "KeRosProcessorName": 1,
                "MiSpecialPoolLastPte": 1,
                "_imp__HalGetEnvironmentVariable": 1,
                "KdbOriginalProcess": 1,
                "_imp__HalDisableSystemInterrupt": 1,
                "PspBootAccessToken": 1,
                "MiLowNonPagedPoolEvent": 1,
                "MmSizeOfNonPagedPoolInBytes": 1,
                "MiSpecialPoolExtraCount": 1,
                "FsRtlPagingIoResourceSelector": 1,
                "MmHeapDeCommitFreeBlockThreshold": 1,
                "LastChanceShutdownListHead": 1,
                "MmPteCodeEnd": 1,
                "SeProfileSingleProcessPrivilege": 1,
                "KeProcessorLevel": 1,
                "ExpWorkersCanSwap": 1,
                "RtlpExecuteHandlerForException": 1,
                "GUID_PROCESSOR_IDLE_TIME_CHECK": 1,
                "IopLoaderBlock": 1,
                "ZwReleaseSemaphore": 1,
                "GUID_LIDSWITCH_STATE_CHANGE": 1,
                "DriverReinitListHead": 1,
                "MiSessionDataPages": 1,
                "GUID_BUS_TYPE_SD": 1,
                "DemandZeroPde": 1,
                "KiHardwareTrigger": 1,
                "@KeReleaseGuardedMutex": 1,
                "MmSystemLoadLock": 1,
                "GUID_SYSTEM_BUTTON_SUBGROUP": 1,
                "ExpPagedPoolMutex": 1,
                "IopMdlLookasideList": 1,
                "MmPfnLock": 1,
                "PoolVector": 1,
                "MmTotalCommittedPages": 1,
                "SeCreatorGroupServerSid": 1,
                "IopCompletionLock": 1,
                "CmControlVector": 1,
                "KiProfileTimeInterval": 1,
                "_imp_@HalRequestSoftwareInterrupt": 1,
                "SeRestrictedCodeSid": 1,
                "KiTimeIncrementShiftCount": 1,
                "PspForegroundQuantum": 1,
                "CmVersionString": 1,
                "HandleTableListHead": 1,
                "MiSessionTagPages": 1,
                "ExpInitializationPhase": 1,
                "PopAcpiPresent": 1,
                "@KeTryToAcquireGuardedMutex": 1,
                "ZwSetIntervalProfile": 1,
                "ObDirectoryType": 1,
                "ZwReleaseMutant": 1,
                "GUID_LIDCLOSE_ACTION": 1,
                "KiISROverflow": 1,
                "KeBugcheckCallbackListHead": 1,
                "ZwTerminateThread": 1,
                "@ExfInterlockedCompareExchange64": 1,
                "CmpLazyFlushDpc": 1,
                "PsDefaultSystemLocaleId": 1,
                "ExpInTextModeSetup": 1,
                "_imp__HalDisplayString": 1,
                "ZwUnlockVirtualMemory": 1,
                "CmSelfHeal": 1,
                "ZwQueryDebugFilterState": 1,
                "KiFastSystemCallDisable": 1,
                "KiFreezeFlag": 1,
                "ExpTimerResolutionCount": 1,
                "MmHyperSpaceEnd": 1,
                "@IofCompleteRequest": 1,
                "PsMaximumWorkingSet": 1,
                "PsMinimumWorkingSet": 1,
                "MmSystemCacheStart": 1,
                "GUID_IO_VOLUME_PREPARING_EJECT": 1,
                "ZwPrivilegeObjectAuditAlarm": 1,
                "ZwSetHighEventPair": 1,
                "PspWorkingSetChangeHead": 1,
                "MiPfnBitMap": 1,
                "MiLargePageDriverList": 1,
                "PspSystemDllSection": 1,
                "IopNetworkFileSystemQueueHead": 1,
                "KeNumberNodes": 1,
                "_imp__HalSetTimeIncrement": 1,
                "ZwCreateMailslotFile": 1,
                "ZwDeleteObjectAuditAlarm": 1,
                "_HalDispatchTable": 1,
                "PopVolumeLock": 1,
                "KeServiceDescriptorTableShadow": 1,
                "PsDefaultUILanguageId": 1,
                "ExpPoolFlags": 1,
                "RawDiskDeviceObject": 1,
                "@KeReleaseSpinLockForDpc": 1,
                "ExpAnsiCodePageDataOffset": 1,
                "GUID_IO_MEDIA_REMOVAL": 1,
                "ExpDesktopObjectClose": 1,
                "ZwCreateProcess": 1,
                "SeNetworkSid": 1,
                "GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY": 1,
                "_imp__HalAllProcessorsStarted": 1,
                "MmSystemViewSize": 1,
                "ZwFindAtom": 1,
                "GUID_BATTERY_DISCHARGE_FLAGS_1": 1,
                "SeAliasUsersSid": 1,
                "GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS": 1,
                "KdpScreenLineBuffer": 1,
                "KeUserExceptionDispatcher": 1,
                "KdbLastBreakPointNr": 1,
                "@RtlPrefetchMemoryNonTemporal": 1,
                "@ExfAcquireRundownProtectionCacheAware": 1,
                "GUID_BATTERY_DISCHARGE_FLAGS_0": 1,
                "PsNtosImageBase": 1,
                "CmInstallUILanguageIdLength": 1,
                "DebugService": 1,
                "MmSpecialPoolTag": 1,
                "RingIndicator": 1,
                "IoOtherTransferCount": 1,
                "GUID_BATTERY_DISCHARGE_FLAGS_2": 1,
                "MpwThreadEvent": 1,
                "GUID_STANDBY_TIMEOUT": 1,
                "GUID_LOCK_CONSOLE_ON_WAKE": 1,
                "PnpDefaultInterfaceType": 1,
                "PspW32ThreadCallout": 1,
                "MmPoolCodeEnd": 1,
                "SeUnrestrictedSd": 1,
                "_imp_@KfRaiseIrql": 1,
                "MmLargePageDriverBuffer": 1,
                "ZwCreateSemaphore": 1,
                "KePrefetchNTAGranularity": 1,
                "MmProductType": 1,
                "PspDefaultQuotaBlock": 1,
                "GUID_BUS_TYPE_SERENUM": 1,
                "RtlpDphProtectFails": 1,
                "KiTrap03": 1,
                "ZwImpersonateClientOfPort": 1,
                "PspDefaultNonPagedLimit": 1,
                "CmpCacheTable": 1,
                "HeadlessGlobals": 1,
                "ZwAddAtom": 1,
                "GUID_PROCESSOR_IDLE_DISABLE": 1,
                "ObpAccessProtectCloseBit": 1,
                "_imp__HalQueryRealTimeClock": 1,
                "NlsOemToUnicodeTable": 1,
                "@KeAcquireInStackQueuedSpinLockAtDpcLevel": 1,
                "RtlpDphNumberOfDelayedFreeBlocks": 1,
                "RtlpUnhandledExceptionFilter": 1,
                "ZwRaiseException": 1,
                "IopGroupTable": 1,
                "KiTrap01": 1,
                "KiTrap00": 1,
                "KiTrap04": 1,
                "KeUserApcDispatcher": 1,
                "CmpRegistryLockCallerCaller": 1,
                "ValidKernelPte": 1,
                "KiSystemCallExitAdjust": 1,
                "MiSessionBigPoolPages": 1,
                "GUID_SLEEP_IDLE_THRESHOLD": 1,
                "MiExpansionPoolPagesInitialCharge": 1,
                "@ExfInterlockedAddUlong": 1,
                "KiTrap05": 1,
                "KeProcessorRevision": 1,
                "KiFastCallEntry": 1,
                "DiskMountString": 1,
                "GUID_IO_VOLUME_CHANGE": 1,
                "NlsAnsiToUnicodeTable": 1,
                "MmPagedPoolStart": 1,
                "ZwCompactKeys": 1,
                "KiInterruptTemplateDispatch": 1,
                "MmSystemCacheEnd": 1,
                "wcsnlen": 1,
                "KiOldIrql": 1,
                "GUID_MONITOR_POWER_ON": 1,
                "ZwSetDefaultHardErrorPort": 1,
                "SeCreatorGroupSid": 1,
                "@ExfReInitializeRundownProtectionCacheAware": 1,
                "MiLargePageRangeIndex": 1,
                "KdpDmesgLogSpinLock": 1,
                "CmpDelayDerefKCBListHead": 1,
                "RtlpSetExceptionList": 1,
                "ZwQueryIntervalProfile": 1,
                "IoCompletionPacketLookaside": 1,
                "InbvDisplayFilter": 1,
                "MmWorkingSetExpansionHead": 1,
                "CmpSelfHealQueueLock": 1,
                "MmNonPagedPoolLock": 1,
                "MmUnloadedDrivers": 1,
                "ZwLockVirtualMemory": 1,
                "KiInitialProcess": 1,
                "ZwRenameKey": 1,
                "SeNullSid": 1,
                "GUID_BUS_TYPE_INTERNAL": 1,
                "KiRaiseAssertion": 1,
                "ExMutantObjectType": 1,
                "GUID_CLASS_INPUT": 1,
                "_RUNTIME_PSEUDO_RELOC_LIST_END__": 1,
                "KiEndUnexpectedRange": 1,
                "ZwSetLdtEntries": 1,
                "KeI386EFlagsAndMaskV86": 1,
                "ExpTimeZoneBias": 1,
                "KeBugcheckReasonCallbackListHead": 1,
                "MmMinimumFreePages": 1,
                "__tls_end__": 1,
                "ZwSuspendProcess": 1,
                "ExpFirmwareTableProviderListHead": 1,
                "GUID_BACKGROUND_TASK_NOTIFICATION": 1,
                "_imp__VidInitialize": 1,
                "_image_base__": 1,
                "GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR": 1,
                "MmTotalCommitLimitMaximum": 1,
                "__crt_xp_start__": 1,
                "ExpInitializeCallback": 1,
                "ZwAccessCheckByTypeResultListAndAuditAlarm": 1,
                "CmDefaultLanguageIdType": 1,
                "ZwTestAlert": 1,
                "_PsProcessType": 1,
                "PspFixedQuantums": 1,
                "CmpConfigurationAreaSize": 1,
                "CmpDelayedCloseSize": 1,
                "iBcbLookasideList": 1,
                "DummyData": 1,
                "RtlpDphMemoryUsedByDelayedFreeBlocks": 1,
                "SeCreatePagefilePrivilege": 1,
                "LpcWaitablePortObjectType": 1,
                "SePublicOpenUnrestrictedDacl": 1,
                "VdmBopCount": 1,
                "IopTotalLogSize": 1,
                "ExpMutantMapping": 1,
                "KeTimeIncrement": 1,
                "ObpDosDevicesShortNameRoot": 1,
                "SeAliasGuestsSid": 1,
                "ObpCaseInsensitive": 1,
                "MmLastReservedMappingPte": 1,
                "_alloca_probe_16": 1,
                "ZwVdmControl": 1,
                "MmStandbyPageListHead": 1,
                "GUID_IO_DISK_LAYOUT_CHANGE": 1,
                "ZwQueryTimer": 1,
                "PoolTrackTableMask": 1,
                "MmPagedPoolEnd": 1,
                "CcFastReadNoWait": 1,
                "CmpLazyFlushTimer": 1,
                "@KeReleaseInStackQueuedSpinLockForDpc": 1,
                "RtlpExecuteHandlerForUnwind": 1,
                "@ExfInterlockedPopEntryList": 1,
                "LpcpTraceLevel": 1,
                "ObpDefaultObject": 1,
                "MiSessionWsList": 1,
                "MmPlentyFreePages": 1,
                "KiTimeIncrementReciprocal": 1,
                "MmNonPagedPoolEnd0": 1,
                "KiTrapPrefixTable": 1,
                "KdpDmesgBuffer": 1,
                "ZwSetEventBoostPriority": 1,
                "ZwSetHighWaitLowEventPair": 1,
                "@InterlockedCompareExchange": 1,
                "floor": 1,
                "CmpBiosSearchStart": 1,
                "@ExInterlockedCompareExchange64": 1,
                "KdpLoggingEnabled": 1,
                "MmTotalCommitLimit": 1,
                "ExpSmallNPagedPoolLookasideLists": 1,
                "IopNumberDeviceNodes": 1,
                "MmPagedPoolCommit": 1,
                "SeSystemDefaultSd": 1,
                "MmTotalSystemPtes": 1,
                "MiHighestUserPte": 1,
                "DriverBootReinitListLock": 1,
                "GUID_IO_VOLUME_DISMOUNT": 1,
                "@Exfi386InterlockedExchangeUlong": 1,
                "NO_SUBGROUP_GUID": 1,
                "IopErrorLogObject": 1,
                "ExpTimeRefreshLock": 1,
                "GUID_IO_VOLUME_UNLOCK": 1,
                "MmPagedPoolMutex": 1,
                "FsRtlWorkerQueues": 1,
                "MmSpecialPoolCatchOverruns": 1,
                "ZwResumeThread": 1,
                "GUID_HIBERNATE_FASTS4_POLICY": 1,
                "ZwOpenObjectAuditAlarm": 1,
                "KiTimeLimitIsrMicroseconds": 1,
                "ZwDelayExecution": 1,
                "SeWorldSid": 1,
                "KiMXCsrMask": 1,
                "GUID_IO_MEDIA_ARRIVAL": 1,
                "CmpEnableLazyFlushTimer": 1,
                "ZwQueryVirtualMemory": 1,
                "KeRosVideoBiosVersion": 1,
                "SeSystemEnvironmentPrivilege": 1,
                "DriverReinitTailEntry": 1,
                "@ExfAcquireRundownProtection": 1,
                "RtlpDphDelayedFreeQueueLock": 1,
                "GUID_IO_CDROM_EXCLUSIVE_UNLOCK": 1,
                "GUID_POWERBUTTON_ACTION": 1,
                "MmSharedCommit": 1,
                "MmConsumedPoolPercentage": 1,
                "CmpHashTableSize": 1,
                "BootCyclesEnd": 1,
                "ZwCreateKeyedEvent": 1,
                "MmUserProtectionToMask2": 1,
                "ZwListenPort": 1,
                "PsIdleProcess": 1,
                "CmpBootType": 1,
                "ZwCreateToken": 1,
                "MmUserProtectionToMask1": 1,
                "PspTraceLevel": 1,
                "MmVerifyDriverBuffer": 1,
                "__DTOR_LIST__": 1,
                "IopRootDeviceNode": 1,
                "ExpNlsSectionPointer": 1,
                "KiGetTickCount": 1,
                "ZwQueryIoCompletion": 1,
                "P0BootStack": 1,
                "IopSetFsOperationAccess": 1,
                "ZwCreateJobSet": 1,
                "KiDmaIoCoherency": 1,
                "PopShutdownWorkItem": 1,
                "MiNonPagedPoolSListHead": 1,
                "KeThreadDpcEnable": 1,
                "CmSuiteBufferType": 1,
                "_imp__HalProcessorIdle": 1,
                "_FsRtlLegalAnsiCharacterArray": 1,
                "IopTimerQueueHead": 1,
                "ExCmosClockIsSane": 1,
                "IoCompletionType": 1,
                "ObpSymbolicLinkMapping": 1,
                "KdbDebugState": 1,
                "MpwThreadHandle": 1,
                "KeDcacheFlushCount": 1,
                "KiRetireDpcListInDpcStack": 1,
                "@ExTryToAcquireFastMutex": 1,
                "MmSessionSize": 1,
                "KiIdleSMTSummary": 1,
                "CmiCallbackLock": 1,
                "ZwQueryMultipleValueKey": 1,
                "ZwCancelDeviceWakeupRequest": 1,
                "KiSystemCallSysExitReturn": 1,
                "MmSecondaryColorMask": 1,
                "MmSystemPtesEnd": 1,
                "CmNtSpBuildNumber": 1,
                "GUID_IO_CDROM_EXCLUSIVE_LOCK": 1,
                "ZwFilterToken": 1,
                "MmMinAdditionNonPagedPoolPerMb": 1,
                "NlsUnicodeDefaultChar": 1,
                "ZwPlugPlayControl": 1,
                "KdbDmesgTotalWritten": 1,
                "ObpCreateInfoLookasideList": 1,
                "ZwCreateWaitablePort": 1,
                "KiSwitchThreads": 1,
                "longjmp": 1,
                "MmCompatibleProtectionMask": 1,
                "MmFreePagesByColor": 1,
                "@RtlUlonglongByteSwap": 1,
                "PspProcessNotifyRoutine": 1,
                "MmMakeSectionAccess": 1,
                "MmSystemPageDirectory": 1,
                "ZwShutdownSystem": 1,
                "CmpUnknownBusCount": 1,
                "_imp__KeRaiseIrqlToSynchLevel": 1,
                "CmpDelayDerefKCBLock": 1,
                "ZwWriteRequestData": 1,
                "ExpRealTimeIsUniversal": 1,
                "_rt_psrelocs_end": 1,
                "GUID_DISK_BURST_IGNORE_THRESHOLD": 1,
                "CmpDelayDerefKCBTimer": 1,
                "KiSwapContext": 1,
                "MxPfnAllocation": 1,
                "IopTimerCount": 1,
                "ExpDesktopObjectOkToClose": 1,
                "ExpWakeListLock": 1,
                "ZwCallbackReturn": 1,
                "@ExfAcquirePushLockShared": 1,
                "ZwQuerySemaphore": 1,
                "MOUNTDEV_MOUNTED_DEVICE_GUID": 1,
                "SeCreatorOwnerServerSid": 1,
                "FsRtlFastMutexLookasideList": 1,
                "GUID_DEVINTERFACE_PARTITION": 1,
                "IopQueryFsOperationLength": 1,
                "KeFeatureBits": 1,
                "KdpContext": 1,
                "ShowProgressBar": 1,
                "FsRtlFirstMappingLookasideList": 1,
                "GUID_IO_DISK_CLONE_ARRIVAL": 1,
                "KiSystemCallExitAdjusted": 1,
                "RtlpDphPageHeapListLock": 1,
                "@IofCallDriver": 1,
                "RmapListLock": 1,
                "CmpNameCacheTable": 1,
                "MmModifiedNoWritePageListHead": 1,
                "ZwGetPlugPlayEvent": 1,
                "ExpAdditionalDelayedWorkerThreads": 1,
                "MiLowPagedPoolThreshold": 1,
                "SeNullSidAuthority": 1,
                "@ExfReleasePushLockExclusive": 1,
                "SeAliasBackupOpsSid": 1,
                "SeAliasAdminsSid": 1,
                "IopSetOperationAccess": 1,
                "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR": 1,
                "Dummy": 1,
                "ZwAccessCheckByTypeResultList": 1,
                "ExReadyForErrors": 1,
                "KiSystemService": 1,
                "_imp__HalAllocateAdapterChannel": 1,
                "MmNumberOfPagingFiles": 1,
                "GUID_DEVICE_WARM_EJECT_VETOED": 1,
                "SeAliasPowerUsersSid": 1,
                "@InterlockedIncrement": 1,
                "GUID_SLEEPBUTTON_ACTION": 1,
                "SeRemoteShutdownPrivilege": 1,
                "IopCompletionMapping": 1,
                "KiInterruptTemplate": 1,
                "CcpLazyWriteEvent": 1,
                "@ExAcquireFastMutexUnsafe": 1,
                "CmpAllocInited": 1,
                "MmDynamicPfn": 1,
                "RtlpDphPageHeapListLength": 1,
                "CmlibTraceLevel": 1,
                "GUID_PROCESSOR_PERF_DECREASE_POLICY": 1,
                "GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME": 1,
                "KiStartUnexpectedRange": 1,
                "KdpPort": 1,
                "GUID_CONSOLE_DISPLAY_STATE": 1,
                "ZwCreatePagingFile": 1,
                "_imp__HalInitSystem": 1,
                "MiNumberOfFreePages": 1,
                "ExpWindowStationObjectDelete": 1,
                "SeDialupSid": 1,
                "SeSecurityPrivilege": 1,
                "MmSessionViewSize": 1,
                "WrapperInitRoutine": 1,
                "Ki386EnableCurrentLargePage": 1,
                "KdpScreenLineBufferPos": 1,
                "PopShutdownQueue": 1,
                "GUID_DEVICE_REMOVAL_VETOED": 1,
                "GUID_ENABLE_SWITCH_FORCED_SHUTDOWN": 1,
                "GUID_POWER_DEVICE_TIMEOUTS": 1,
                "Kd_DEFAULT_MASK": 1,
                "GUID_MAX_POWER_SAVINGS": 1,
                "ZwCompressKey": 1,
                "GUID_BATTERY_DISCHARGE_FLAGS_3": 1,
                "KiIdt": 1,
                "KdbNumSingleSteps": 1,
                "MmSystemCacheWorkingSetList": 1,
                "SeAuthenticatedUsersSid": 1,
                "ZwUnloadKey2": 1,
                "PopShutdownListAvailable": 1,
                "PspLoadImageNotifyRoutineCount": 1,
                "GUID_DEVINTERFACE_WRITEONCEDISK": 1,
                "CmpMaxFastIndexPerHblock": 1,
                "_minor_subsystem_version__": 1,
                "@ExfReleaseRundownProtection": 1,
                "PsLoadedModuleList": 1,
                "KdbCurrentThread": 1,
                "IopSetOperationLength": 1,
                "RawTapeDeviceObject": 1,
                "ExpPagedLookasideListHead": 1,
                "KeBugCheckOwner": 1,
                "_size_of_heap_reserve__": 1,
                "SeIncreaseWorkingSetPrivilege": 1,
                "IopLogWorkerRunning": 1,
                "MmReadClusterSize": 1,
                "GUID_DEVICE_SAFE_REMOVAL": 1,
                "KeProcessNodeSeed": 1,
                "SeIncreaseBasePriorityPrivilege": 1,
                "MiSessionImageEnd": 1,
                "ZwSuspendThread": 1,
                "@KefAcquireSpinLockAtDpcLevel": 1,
                "MmFirstFreeSystemPte": 1,
                "GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE": 1,
                "ExWorkerQueue": 1,
                "RtlpGetStackLimits": 1,
                "IopVpbSpinLock": 1,
                "ExpOemCodePageDataOffset": 1,
                "BATTERY_FULL_CHARGED_CAPACITY_WMI_GUID": 1,
                "MmLowestPhysicalPage": 1,
                "ZwStopProfile": 1,
                "GUID_UNATTEND_SLEEP_TIMEOUT": 1,
                "SeDebugPrivilege": 1,
                "@ExfInterlockedRemoveHeadList": 1,
                "GUID_DEVICE_SURPRISE_REMOVAL": 1,
                "MmStandbyPageListByPriority": 1,
                "GUID_PROCESSOR_IDLESTATE_POLICY": 1,
                "MiNonPagedSystemSize": 1,
                "SeSyncAgentPrivilege": 1,
                "NlsUnicodeUpcaseTable": 1,
                "RawCdromDeviceObject": 1,
                "ZwReadRequestData": 1,
                "RtlpDphGlobalFlags": 1,
                "PspSystemDllEntryPoint": 1,
                "@ExInterlockedPushEntrySList": 1,
                "PsJobListHead": 1,
                "GUID_DISK_ADAPTIVE_POWERDOWN": 1,
                "ExpSystemResourcesList": 1,
                "GUID_MIN_POWER_SAVINGS": 1,
                "@RtlUlongByteSwap": 1,
                "GUID_ACPI_INTERFACE_STANDARD": 1,
                "MmSystemPagePtes": 1,
                "LpcpMaxMessageSize": 1,
                "ProcessCount": 1,
                "KdpDmesgCurrentPosition": 1,
                "ExpLargePoolTableLock": 1,
                "GUID_LIDOPEN_POWERSTATE": 1,
                "_imp__KdComPortInUse": 1,
                "WrapperTable": 1,
                "ZwOpenMutant": 1,
                "PpRegistryDeviceResource": 1,
                "GUID_PROCESSOR_PERF_INCREASE_THRESHOLD": 1,
                "GUID_BUS_INTERFACE_STANDARD": 1,
                "ZwSetLowEventPair": 1,
                "_pctype": 1,
                "SeAliasAccountOpsSid": 1,
                "GUID_PCIEXPRESS_SETTINGS_SUBGROUP": 1,
                "KeSwitchKernelStack": 1,
                "KeNodeBlock": 1,
                "MmSystemPteBase": 1,
                "PpDeviceReferenceTableLock": 1,
                "MmNonPagedPoolExpansionStart": 1,
                "MmAllocationFragment": 1,
                "ZwContinue": 1,
                "GUID_LEGACY_DEVICE_DETECTION_STANDARD": 1,
                "MiExpansionLockOwner": 1,
                "RtlpDphDebugOptions": 1,
                "GUID_DEVICE_NOOP": 1,
                "PoolTrackTableSize": 1,
                "CmpAllocBucketLock": 1,
                "GUID_PROCESSOR_CORE_PARKING_MIN_CORES": 1,
                "MI_PFN_CURRENT_USAGE": 1,
                "ExpTimeout": 1,
                "MmSystemCacheWs": 1,
                "SerialPortInfo": 1,
                "MiSessionCreateCharge": 1,
                "CmDefaultLanguageId": 1,
                "KeI386EFlagsOrMaskV86": 1,
                "MmZeroedPageListHead": 1,
                "_chkstk": 1,
                "IoControllerObjectType": 1,
                "IopTapeFileSystemQueueHead": 1,
                "SeInteractiveSid": 1,
                "GUID_DEVINTERFACE_CDROM": 1,
                "GUID_BUS_TYPE_PCI": 1,
                "_ExEventObjectType": 1,
                "ZwLoadKeyEx": 1,
                "KiTimerTableListHead": 1,
                "CmpDelayedLRUListHead": 1,
                "ZwImpersonateThread": 1,
                "KiTimeAdjustmentEnabled": 1,
                "GUID_DEVICE_SYS_BUTTON": 1,
                "GUID_DISK_SUBGROUP": 1,
                "_size_of_stack_reserve__": 1,
                "ZwOpenEventPair": 1,
                "GUID_PROCESSOR_IDLE_ALLOW_SCALING": 1,
                "GUID_BATTERY_PERCENTAGE_REMAINING": 1,
                "ZwWaitForKeyedEvent": 1,
                "ExpNonPagedLookasideListHead": 1,
                "ZwCreateNamedPipeFile": 1,
                "@ExfReInitializeRundownProtection": 1,
                "SeNtAuthoritySid": 1,
                "@ExfAcquireRundownProtectionEx": 1,
                "PopShutdownEvent": 1,
                "MmDecommittedPte": 1,
                "GUID_BUS_TYPE_AVC": 1,
                "MiTempEvent": 1,
                "RtlpDphAllocFails": 1,
                "KdPitchDebugger": 1,
                "MmSystemSize": 1,
                "CmpRegistryLock": 1,
                "DirtyPageCount": 1,
                "CmpMultifunctionTypes": 1,
                "PortNumber": 1,
                "KdbCurrentTrapFrame": 1,
                "IopFsRegistrationOps": 1,
                "MmSystemCacheWsMinimum": 1,
                "SeTimeZonePrivilege": 1,
                "ZwOpenIoCompletion": 1,
                "_end__": 1,
                "BATTERY_STATUS_CHANGE_WMI_GUID": 1,
                "_drivers_base_bootvid_libbootvid_a_iname": 1,
                "KdComponentTableEntries": 1,
                "ZwInitializeRegistry": 1,
                "GUID_PROCESSOR_PERF_INCREASE_POLICY": 1,
                "ZwReplyWaitReplyPort": 1,
                "BATTERY_TEMPERATURE_WMI_GUID": 1,
                "GUID_BUS_TYPE_MCA": 1,
                "MiSessionImagePteStart": 1,
                "PnpBusTypeGuidList": 1,
                "PsImageNotifyEnabled": 1,
                "KeActiveProcessors": 1,
                "ZwWaitForMultipleObjects32": 1,
                "DbgkpTraceLevel": 1,
                "ZwMapUserPhysicalPagesScatter": 1,
                "ViewLock": 1,
                "MiSessionLeaderExists": 1,
                "PltRotBarStatus": 1,
                "CmSymbolicLinkValueName": 1,
                "IopCdRomFileSystemQueueHead": 1,
                "KiInitialThread": 1,
                "NlsUnicodeLowercaseTable": 1,
                "BATTERY_TAG_CHANGE_WMI_GUID": 1,
                "ZwSignalAndWaitForSingleObject": 1,
                "CmpLoadWorkerIncrement": 1,
                "GUID_SYSTEM_COOLING_POLICY": 1,
                "ZwAdjustGroupsToken": 1,
                "ZwSetSystemPowerState": 1,
                "KiTrap0E": 1,
                "KiTrap0C": 1,
                "_imp__READ_PORT_UCHAR": 1,
                "MiDbgEnableMdDump": 1,
                "ObpObjectsCreated": 1,
                "GUID_PNP_CUSTOM_NOTIFICATION": 1,
                "ZwGetCurrentProcessorNumber": 1,
                "RtlpPageHeapDllRangeStart": 1,
                "MmDisablePagingExecutive": 1,
                "GUID_PROCESSOR_PERFSTATE_POLICY": 1,
                "CmpForceForceFlush": 1,
                "ZwSaveMergedKeys": 1,
                "IopRootDriverObject": 1,
                "CcFastReadResourceMiss": 1,
                "_imp__VidBufferToScreenBlt": 1,
                "IopDeadIrp": 1,
                "IopErrorLogListHead": 1,
                "IopFileMapping": 1,
                "_RtlpDphPageHeapListLock": 1,
                "KdProviders": 1,
                "KiTrap0D": 1,
                "@ExfReleaseRundownProtectionCacheAware": 1,
                "ZwQuerySystemTime": 1,
                "KiTrap0A": 1,
                "MiSessionPoolEnd": 1,
                "ZwWriteFileGather": 1,
                "GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD": 1,
                "KiTrapReturnNoSegmentsRet8": 1,
                "RtlpDphPageHeapListInitialized": 1,
                "PortInfo": 1,
                "MmHeapSegmentCommit": 1,
                "SeCreateGlobalPrivilege": 1,
                "_subsystem__": 1,
                "KeWin32PreServiceHook": 1,
                "MmHighSectionBase": 1,
                "GUID_VIDEO_DIM_TIMEOUT": 1,
                "MiSessionImagePteEnd": 1,
                "MiVerifierDriverAddedThunkListHead": 1,
                "PspThreadMapping": 1,
                "PspInitialSystemProcessHandle": 1,
                "MiSystemViewStart": 1,
                "CcMasterSpinLock": 1,
                "ZwSetInformationDebugObject": 1,
                "CmFirstTime": 1,
                "KdIgnoreUmExceptions": 1,
                "KiTrap0F": 1,
                "PsInstallUILanguageId": 1,
                "CmiCallbackHead": 1,
                "@ExfInterlockedPushEntryList": 1,
                "MiLowMemoryEvent": 1,
                "ZwImpersonateAnonymousToken": 1,
                "CmpDelayCloseTimer": 1,
                "ExpTimeZoneInfo": 1,
                "MmMakeFileAccess": 1,
                "@KeAcquireGuardedMutex": 1,
                "KiDebugRoutine": 1,
                "ExpWindowStationObjectParse": 1,
                "PiInitGroupOrderTable": 1,
                "NtInitialUserProcessBufferType": 1,
                "KiTrap0B": 1,
                "@KeInitializeGuardedMutex": 1,
                "KdbpBugCheckRequested": 1,
                "GUID_DEVICE_INTERFACE_ARRIVAL": 1,
                "DbgBreakPointNoBugCheck": 1,
                "ExResourceStrict": 1,
                "ZwSetTimerResolution": 1,
                "ExpTickCountMultiplier": 1,
                "GUID_ACDC_POWER_SOURCE": 1,
                "KeI386VirtualIntExtensions": 1,
                "ExpWorkerThreadBalanceManagerPtr": 1,
                "IopQueryFsOperationAccess": 1,
                "MmProcessColorSeed": 1,
                "ZwSetThreadExecutionState": 1,
                "MiHighPagedPoolEvent": 1,
                "KiAdjustDpcThreshold": 1,
                "KiReverseStallIpiLock": 1,
                "ExPoolCodeEnd": 1,
                "P0BootStackData": 1,
                "CmpProfileLoaded": 1,
                "MiSessionViewStart": 1,
                "KiFastCallExitHandler": 1,
                "_imp_@HalSystemVectorDispatchEntry": 1,
                "MmResidentAvailablePages": 1,
                "SeShutdownPrivilege": 1,
                "SepSubjectContextLock": 1,
                "PspProcessMapping": 1,
                "MmAllocatedNonPagedPool": 1,
                "__crt_xi_start__": 1,
                "MmSharedUserDataPte": 1,
                "RtlpAllocDeallocQueryBufferSize": 1,
                "_KdDebuggerNotPresent": 1,
                "PoolBigPageTableSize": 1,
                "MmMaximumNonPagedPoolInBytes": 1,
                "KiTrap07": 1,
                "KdpLoggerThreadEvent": 1,
                "MmSectionCommitMutex": 1,
                "@InterlockedDecrement": 1,
                "KiTrap08": 1,
                "KeWin32PostServiceHook": 1,
                "SeEnableDelegationPrivilege": 1,
                "GUID_ALLOW_STANDBY_STATES": 1,
                "KiTrap06": 1,
                "GUID_DEVICE_EJECT_VETOED": 1,
                "NonPagedPoolLock": 1,
                "_major_subsystem_version__": 1,
                "CmpBiosBegin": 1,
                "GUID_POWER_DEVICE_ENABLE": 1,
                "GUID_BUS_TYPE_HID": 1,
                "GUID_HWPROFILE_CHANGE_CANCELLED": 1,
                "MmVerifyDriverBufferType": 1,
                "RtlpBreakWithStatusInstruction": 1,
                "CmClassName": 1,
                "KdbSingleStepOver": 1,
                "KiTrap09": 1,
                "LpcpMessagesLookaside": 1,
                "MmZeroingPageThreadActive": 1,
                "MmSectionBasedMutex": 1,
                "StackOverflowFallbackSerialEvent": 1,
                "_head_hal_halx86_libhal_a": 1,
                "MmMinimumStackCommitInBytes": 1,
                "SeSystemTokenSource": 1,
                "ZwSetIoCompletion": 1,
                "MmMaximumNonPagedPoolInPages": 1,
                "@KiReleaseSpinLock": 1,
                "MiActiveVerifierThunks": 1,
                "_imp__HalHandleNMI": 1,
                "MmKernelAddressSpace": 1,
                "GUID_IO_DEVICE_BECOMING_READY": 1,
                "ExSystemLookasideListHead": 1,
                "_KdDebuggerEnabled": 1,
                "IoLargeIrpLookaside": 1,
                "KeRosBiosDate": 1,
                "_imp__HalStopProfileInterrupt": 1,
                "GUID_PROCESSOR_CORE_PARKING_MAX_CORES": 1,
                "ZwSystemDebugControl": 1,
                "IopQueryOperationAccess": 1,
                "ZwNotifyChangeMultipleKeys": 1,
                "RtlpCaptureContext": 1,
                "MmProtectFreedNonPagedPool": 1,
                "CmpCallBackCount": 1,
                "GUID_DEVICE_IDLE_POLICY": 1,
                "KiProfileIrql": 1,
                "__crt_xt_end__": 1,
                "GUID_HWPROFILE_CHANGE_COMPLETE": 1,
                "KdpDmesgBufferSize": 1,
                "PsLoadedModuleSpinLock": 1,
                "KiNmiCallbackListLock": 1,
                "GUID_ALLOW_RTC_WAKE": 1,
                "GUID_SYSTEM_AWAYMODE": 1,
                "GUID_IO_DRIVE_REQUIRES_CLEANING": 1,
                "NtBuildLab": 1,
                "__crt_xt_start__": 1,
                "KeTimeAdjustment": 1,
                "MmHighMemoryThreshold": 1,
                "ZwReleaseKeyedEvent": 1,
                "KeIcacheFlushCount": 1,
                "SeCreateTokenPrivilege": 1,
                "IopGroupIndex": 1,
                "__RUNTIME_PSEUDO_RELOC_LIST__": 1,
                "ZwQueryPortInformationProcess": 1,
                "ZwReadVirtualMemory": 1,
                "ExpNlsTableInfo": 1,
                "GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD": 1,
                "PspUseJobSchedulingClasses": 1,
                "CmControlHive": 1,
                "SidInTokenCalls": 1,
                "MiSessionPoolStart": 1,
                "CmpLazyFlushCount": 1,
                "RtlpExecuteHandler2": 1,
                "ShutdownListLock": 1,
                "MmVerifyDriverLevel": 1,
                "MmModifiedPageListHead": 1,
                "CmSuiteBuffer": 1,
                "_imp__WRITE_PORT_UCHAR": 1,
                "MiSessionImageStart": 1,
                "CmpShareSystemHives": 1,
                "ZwQueryQuotaInformationFile": 1,
                "@ExfAcquirePushLockExclusive": 1,
                "KiProfileSourceListHead": 1,
                "@ExfInitializeRundownProtection": 1,
                "GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD": 1,
                "IopSetFsOperationLength": 1,
                "ExpCallbackEvent": 1,
                "GUID_TARGET_DEVICE_REMOVE_CANCELLED": 1,
                "CmpMiniNTBoot": 1,
                "_major_image_version__": 1,
                "_section_alignment__": 1,
                "ZwExtendSection": 1,
                "KeBugCheckActive": 1,
                "SeAssignPrimaryTokenPrivilege": 1,
                "KdbInitFileBuffer": 1,
                "PsActiveProcessHead": 1,
                "PnpSystemInit": 1,
                "ShutdownListHead": 1,
                "CmpLazyFlushIntervalInSeconds": 1,
                "IopNumTriageDumpDataBlocks": 1,
                "InbvBootDriverInstalled": 1,
                "CcWorkQueueSpinLock": 1,
                "GUID_HIBERNATE_TIMEOUT": 1,
                "ZwMakePermanentObject": 1,
                "ObpDosDevicesShortName": 1,
                "ObpNameBufferLookasideList": 1,
                "GUID_DEVICE_THERMAL_ZONE": 1,
                "DbgkpProcessDebugPortMutex": 1,
                "ResourceList": 1,
                "MmPteCodeStart": 1,
                "ObpObjectsWithHandleDB": 1,
                "GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD": 1,
                "BATTERY_RUNTIME_WMI_GUID": 1,
                "ZwAllocateUserPhysicalPages": 1,
                "MmNonPagedSystemStart": 1,
                "CmpDelayDerefKCBDpc": 1,
                "PopShutdownThreadList": 1,
                "ZwQuerySystemEnvironmentValueEx": 1,
                "CmpMaxIndexPerHblock": 1,
                "MmProcessList": 1,
                "IopDatabaseResource": 1,
                "ExSuiteMask": 1,
                "GUID_IO_VOLUME_MOUNT": 1,
                "_RtlpDphDelayedFreeQueueLock": 1,
                "MmSession": 1,
                "ExpCritSecOutOfMemoryEvent": 1,
                "PspActiveProcessMutex": 1,
                "CmpLoadWorkerEvent": 1,
                "KdpCurrentPosition": 1,
                "DriverBootReinitListHead": 1,
                "BootCycles": 1,
                "MmLowMemoryThreshold": 1,
                "ObSymbolicLinkType": 1,
                "__crt_xl_start__": 1,
                "GUID_PROCESSOR_THROTTLE_POLICY": 1,
                "_DTOR_LIST__": 1,
                "KdpPortIrq": 1,
                "MmBadPageListHead": 1,
                "@RtlUshortByteSwap": 1,
                "PoolTrackTable": 1,
                "InbvDisplayState": 1,
                "SeAuthenticatedUserSid": 1,
                "GUID_PNP_LOCATION_INTERFACE": 1,
                "ExpDefaultErrorPort": 1,
                "GUID_DEVICE_INTERFACE_REMOVAL": 1,
                "ZwGetWriteWatch": 1,
                "GUID_DISK_POWERDOWN_TIMEOUT": 1,
                "RtlpPageHeapSizeRangeStart": 1,
                "GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME": 1,
                "ZwAreMappedFilesTheSame": 1,
                "GUID_PCMCIA_BUS_INTERFACE_STANDARD": 1,
                "GUID_DEVICE_STANDBY_VETOED": 1,
                "GUID_SLEEPBUTTON_ACTION_FLAGS": 1,
                "InbvDisplayDebugStrings": 1,
                "MiKernelResourceEndPte": 1,
                "PopSystemPowerDeviceNode": 1,
                "MmCriticalSectionTimeout": 1,
                "MmSystemLockPagesCount": 1,
                "MxOldFreeDescriptor": 1,
                "MmVerifierData": 1,
                "MiHighPagedPoolThreshold": 1,
                "KeLargestCacheLine": 1,
                "CmNtCSDReleaseType": 1,
                "ExpThreadSetManagerShutdownEvent": 1,
                "_bss_start__": 1,
                "DemandZeroPte": 1,
                "ExpDelayedWorkerThreads": 1,
                "SerialPortNumber": 1,
                "MmMaximumDeadKernelStacks": 1,
                "InitRoutines": 1,
                "_imp_@HalClearSoftwareInterrupt": 1,
                "NtfsStructLock": 1,
                "CmpRegistryLockCaller": 1,
                "MiLowNonPagedPoolThreshold": 1,
                "DriverReinitListLock": 1,
                "GUID_DEVICE_PROCESSOR": 1,
                "ZwReplyPort": 1,
                "CmpMachineHiveList": 1,
                "GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD": 1,
                "ZwSetDebugFilterState": 1,
                "CmpDelayCloseDpc": 1,
                "_KeNumberProcessors": 1,
                "ZwDeleteAtom": 1,
                "PopShutdownListMutex": 1,
                "ObpTraceLevel": 1,
                "ExPushLockSpinCount": 1,
                "PpDeviceReferenceTable": 1,
                "KdpLogFileHandle": 1,
                "ExpNlsTableSize": 1,
                "@KeAcquireSpinLockForDpc": 1,
                "ZwAccessCheckByTypeAndAuditAlarm": 1,
                "log10": 1,
                "_minor_image_version__": 1,
                "PrototypePte": 1,
                "GUID_ARBITER_INTERFACE_STANDARD": 1,
                "GUID_DEVICE_EVENT_RBC": 1,
                "KeUserPopEntrySListEnd": 1,
                "GUID_VIDEO_ANNOYANCE_TIMEOUT": 1,
                "KiProfileLock": 1,
                "_imp__KeRaiseIrqlToDpcLevel": 1,
                "GUID_SESSION_DISPLAY_STATE": 1,
                "KdbpSymbolsInitialized": 1,
                "_imp__VidSetTextColor": 1,
                "MmSystemPageColor": 1,
                "CmInstallUILanguageId": 1,
                "ObpObjectsWithPoolQuota": 1,
                "MmModifiedPageListByColor": 1,
                "ExpCallbackMapping": 1,
                "PspThreadNotifyRoutine": 1,
                "ZwQuerySystemEnvironmentValue": 1,
                "GUID_PCI_PME_INTERFACE": 1,
                "MiSpecialPoolExtra": 1,
                "IoRemoteBootClient": 1,
                "MmDebugPte": 1,
                "KdBreakAfterSymbolLoad": 1,
                "KiInterruptTemplateObject": 1,
                "MmWorkingSetList": 1,
                "MmSecondaryColors": 1,
                "ShortPsLockDelay": 1,
                "ZwCreateDebugObject": 1,
                "IopDeviceObjectNumber": 1,
                "ExEventPairMapping": 1,
                "__crt_xp_end__": 1,
                "NlsOemDefaultChar": 1,
                "SeServiceSid": 1,
                "GUID_PROCESSOR_SETTINGS_SUBGROUP": 1,
                "KiBugCheckDriver": 1,
                "GdbPortInfo": 1,
                "CcFastMdlReadNotPossible": 1,
                "__tls_start__": 1,
                "GUID_IO_MEDIA_EJECT_REQUEST": 1,
                "PsNtDllPathName": 1,
                "CmpLazyWorkItem": 1,
                "MmExpansionLock": 1,
                "ZwEnumerateSystemEnvironmentValuesEx": 1,
                "@ExfReleasePushLock": 1,
                "KiDoubleFaultStack": 1,
                "SeUnrestrictedDacl": 1,
                "KiSwapEvent": 1,
                "KdComponentTable": 1,
                "GUID_DEVICE_KERNEL_INITIATED_EJECT": 1,
                "DbgkDebugObjectMapping": 1,
                "_imp__HalSetEnvironmentVariable": 1,
                "ObSystemDeviceMap": 1,
                "CcVacbSpinLock": 1,
                "KiProcessorBlock": 1,
                "MmResidentAvailableAtInit": 1,
                "IopTimerLock": 1,
                "PoolHitTag": 1,
                "strnlen": 1,
                "IopLogListLock": 1,
                "ZwReplyWaitReceivePortEx": 1,
                "IopHardwareDatabaseKey": 1,
                "MmSizeOfPagedPoolInPages": 1,
                "IopQueryOperationLength": 1,
                "ObpDirectoryMapping": 1,
                "ExpNumberOfPagedPools": 1,
                "PspReaperWorkItem": 1,
                "MiNumberDescriptors": 1,
                "NlsUnicodeToOemTable": 1,
                "ExShortTime": 1,
                "GUID_IO_VOLUME_PHYSICAL_CONFIGURATION_CHANGE": 1,
                "CmBootAcceptFirstTime": 1,
                "InbvResetDisplayParameters": 1,
                "KeBugCheckCount": 1,
                "ObpObjectsWithCreatorInfo": 1,
                "IopSecurityResource": 1,
                "GUID_PROCESSOR_PARKING_CORE_OVERRIDE": 1,
                "GUID_PCI_DEVICE_PRESENT_INTERFACE": 1,
                "KdpFreeBytes": 1,
                "GUID_USERINTERFACEBUTTON_ACTION": 1,
                "ExpPagedPoolDescriptor": 1,
                "MmFirstReservedMappingPte": 1,
                "GUID_IDLE_BACKGROUND_TASK": 1,
                "_imp__KeQueryPerformanceCounter": 1,
                "Ke386Pae": 1,
                "PspJobSchedulingClasses": 1,
                "ZwCompleteConnectPort": 1,
                "FsRtlFileLockLookasideList": 1,
                "ZwDebugContinue": 1,
                "KiEditedTrapReturn": 1,
                "ExpPagedLookasideListLock": 1,
                "GUID_VIDEO_POWERDOWN_TIMEOUT": 1,
                "ZwQueryTimerResolution": 1,
                "CmpID1": 1,
                "KiBugCodeMessages": 1,
                "ZwGetDevicePowerState": 1,
                "SeTrustedCredmanPrivilege": 1,
                "ZwAcceptConnectPort": 1,
                "@KiEoiHelper": 1,
                "_IAT_start__": 1,
                "GUID_IO_VOLUME_NAME_CHANGE": 1,
                "__crt_xc_end__": 1,
                "GUID_IO_VOLUME_FVE_STATUS_CHANGE": 1,
                "_CTOR_LIST__": 1,
                "CmpTypeCount": 1,
                "ObpTypeDirectoryObject": 1,
                "ZwMapUserPhysicalPages": 1,
                "_imp_@KeAcquireQueuedSpinLock": 1,
                "ZwRemoveProcessDebug": 1,
                "SeAliasPrintOpsSid": 1,
                "_data_start__": 1,
                "MmLastUnloadedDrivers": 1,
                "IopErrorLogWorkItem": 1,
                "MmReadWrite": 1,
                "KiProfileListHead": 1,
                "SeUnsolicitedInputPrivilege": 1,
                "HyperTemplatePte": 1,
                "@ExfRundownCompleted": 1,
                "MmSessionDataPages": 1,
                "MmNonPagedPoolFreeListHead": 1,
                "@KeAcquireGuardedMutexUnsafe": 1,
                "IoLoaderArcBootDeviceName": 1,
                "ZwWaitHighEventPair": 1,
                "SeAuditPrivilege": 1,
                "MmSubsectionBase": 1,
                "SeCreatorOwnerSid": 1,
                "Ki386IopmSaveArea": 1,
                "MmLoadedUserImageList": 1,
                "KiSystemCallReturn": 1,
                "KiServiceLimit": 1,
                "ZwWaitLowEventPair": 1,
                "ObpReaperList": 1,
                "MmZeroPageFile": 1,
                "ZwQueryOpenSubKeys": 1,
                "ProgressBarTop": 1,
                "GUID_PCIEXPRESS_ASPM_POLICY": 1,
                "LpcpNextCallbackId": 1,
                "GUID_DEVICE_EJECT": 1,
                "PsLoadedModuleResource": 1,
                "_imp__VidDisplayString": 1,
                "KiProfileAlignmentFixupInterval": 1,
                "BATTERY_STATIC_DATA_WMI_GUID": 1,
                "ZwPrivilegeCheck": 1,
                "CmpTraceLevel": 1,
                "InbvOldIrql": 1,
                "@InterlockedExchangeAdd": 1,
                "_imp__VidScreenToBufferBlt": 1,
                "GUID_POWERSCHEME_PERSONALITY": 1,
                "_data_end__": 1,
                "GUID_DEVICE_BATTERY": 1,
                "_imp_@KfLowerIrql": 1,
                "_imp__HalBeginSystemInterrupt": 1,
                "IopTriageDumpDataBlocks": 1,
                "GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS": 1,
                "IopTraceLevel": 1,
                "__CTOR_LIST__": 1,
                "KiIdealDpcRate": 1,
                "PoolBigPageTableHash": 1,
                "StackOverflowFallback": 1,
                "ZwResetWriteWatch": 1,
                "MmMaximumNonPagedPoolPercent": 1,
                "SetSystemTimeCallback": 1,
                "GUID_APPLAUNCH_BUTTON": 1,
                "AfdWorkQueueSpinLock": 1,
                "GUID_DEVICE_MESSAGE_INDICATOR": 1,
                "ValidKernelPde": 1,
                "_imp__HalInitializeProcessor": 1,
                "CmpKeyObjectType": 1,
                "GUID_BUS_TYPE_LPTENUM": 1,
                "ObpDosDevicesShortNamePrefix": 1,
                "@KiAcquireSpinLock": 1,
                "MmHighestPhysicalPage": 1,
                "RtlpPageHeapEnabled": 1,
                "CmDefaultLanguageIdLength": 1,
                "HyperIrql": 1,
                "@ObfReferenceObject": 1,
                "PspLoadImageNotifyRoutine": 1,
                "_minor_os_version__": 1,
                "RtlpPageHeapDllRangeEnd": 1,
                "ExpProfileMapping": 1,
                "ExCallbackObjectType": 1,
                "__chkstk_ms": 1,
                "SePublicDefaultSd": 1,
                "ZwSetSystemEnvironmentValue": 1,
                "SeRestorePrivilege": 1,
                "GUID_ACPI_REGS_INTERFACE_STANDARD": 1,
                "PoolBigPageTable": 1,
                "KiMaximumDpcQueueDepth": 1,
                "ResourceCount": 1,
                "PowerStateCallback": 1,
                "GUID_DEVINTERFACE_TAPE": 1,
                "KdpLogFileName": 1,
                "ZwCreateEventPair": 1,
                "FsRtlPagingIoResources": 1,
                "ZwRegisterThreadTerminatePort": 1,
                "KiTrapIoTable": 1,
                "CmpHiveListHead": 1,
                "MmSystemCacheWsMaximum": 1,
                "KiNtVdmState": 1,
                "ArcTypes": 1,
                "ZwQueryOpenSubKeysEx": 1,
                "GUID_PROCESSOR_PERF_DECREASE_THRESHOLD": 1,
                "@ExEnterCriticalRegionAndAcquireFastMutexUnsafe": 1,
                "ExpAdditionalCriticalWorkerThreads": 1,
                "SeLockMemoryPrivilege": 1,
                "MiSessionIdMutex": 1,
                "_dll__": 1,
                "MiSessionIdBitmap": 1,
                "MainSSDT": 1,
                "CmpDelayDerefKCBIntervalInSeconds": 1,
                "ExpTaggedPoolLock": 1,
                "NlsUnicodeToAnsiTable": 1,
                "KiDoubleFaultTSS": 1,
                "MmWaitPageEvent": 1,
                "ObpDeviceMapLock": 1,
                "ZwCreateIoCompletion": 1,
                "KiGenericCallDpcMutex": 1,
                "ExpCriticalWorkerThreads": 1,
                "KdpBreakPending": 1,
                "SePublicOpenUnrestrictedSd": 1,
                "GUID_AGP_TARGET_BUS_INTERFACE_STANDARD": 1,
                "CmInstallUILanguageIdType": 1,
                "_imp_@KfReleaseSpinLock": 1,
                "CmpSelfHealQueueListHead": 1,
                "MmProtectToValue": 1,
                "_pwctype": 1,
                "MmLargePageDriverBufferLength": 1,
                "CmpCallBackVector": 1,
                "@ExfWaitForRundownProtectionRelease": 1,
                "GUID_INT_ROUTE_INTERFACE_STANDARD": 1,
                "SeLocalSystemSid": 1,
                "@ExReleaseFastMutex": 1,
                "GUID_DEVICE_LID": 1,
                "KiIdtDescriptor": 1,
                "GUID_DEVICE_HIBERNATE_VETOED": 1,
                "ZwLoadKey2": 1,
                "NtMinorVersion": 1,
                "ZwNotifyChangeDirectoryFile": 1,
                "HyperProcess": 1,
                "MmTrackLockedPages": 1,
                "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD": 1,
                "@KeTryToAcquireSpinLockAtDpcLevel": 1,
                "SepTokenLock": 1,
                "MiLowPagedPoolEvent": 1,
                "KiStackInSwapListHead": 1,
                "_SEH3$_RegisterTryLevel": 1,
                "@ObfDereferenceObject": 1,
                "KiUnexpectedEntrySize": 1,
                "CmpDelayDerefKCBWorkItem": 1,
                "@Exfi386InterlockedIncrementLong": 1,
                "GUID_TRANSLATOR_INTERFACE_STANDARD": 1,
                "GUID_DEVICE_START_REQUEST": 1,
                "@ExfRundownCompletedCacheAware": 1,
                "@KeTestSpinLock": 1,
                "IoArcBootDeviceName": 1,
                "GUID_BUS_TYPE_EISA": 1,
                "_bss_end__": 1,
                "@ExAcquireFastMutex": 1,
                "Ke386NoExecute": 1,
                "SePublicOpenSd": 1,
                "CcPfGlobals": 1,
                "ExpWorkerSwapinMutex": 1,
                "MmZeroingPageEvent": 1,
                "CmpID2": 1,
                "CmSuiteBufferLength": 1,
                "@ExfWaitForRundownProtectionReleaseCacheAware": 1,
                "GUID_PCI_CARDBUS_INTERFACE_PRIVATE": 1,
                "KdbpStackSwitchAndCall": 1,
                "MiStartOfInitialPoolFrame": 1,
                "ExPoolCodeStart": 1,
                "KiTimerTableLock": 1,
                "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD": 1,
                "CmpLoadOptions": 1,
                "PopShutdownPowerOffPolicy": 1,
                "ZwCreateMutant": 1,
                "CmTypeName": 1,
                "MmPfnDatabase": 1,
                "GUID_LIDCLOSE_ACTION_FLAGS": 1,
                "MmTotalFreeSystemPtes": 1,
                "MiLargePageAllDrivers": 1,
                "_ExSemaphoreObjectType": 1,
                "ZwFlushBuffersFile": 1,
                "MiSpecialPagesNonPagedMaximum": 1,
                "RtlpDphCounter": 1,
                "KdpDebugMode": 1,
                "GUID_PROCESSOR_THROTTLE_MINIMUM": 1,
                "KiProcessListHead": 1,
                "_SEH3$_RegisterFrame": 1,
                "Ki386BiosCallReturnAddress": 1,
                "KiDispatcherLock": 1,
                "MainNumberOfSysCalls": 1,
                "_file_alignment__": 1,
                "IoCountOperations": 1,
                "MmNonPagedPoolStart": 1,
                "ZwReadFileScatter": 1,
                "GUID_BATTERY_DISCHARGE_ACTION_0": 1,
                "ExpWakeList": 1,
                "PspW32ProcessCallout": 1,
                "GUID_PCI_BUS_INTERFACE_STANDARD": 1,
                "SeSystemProfilePrivilege": 1,
                "MmSessionSpace": 1,
                "SeUndockPrivilege": 1,
                "_IoFileObjectType": 1,
                "ExProfileObjectType": 1,
                "GUID_BATTERY_DISCHARGE_ACTION_2": 1,
                "ZwAccessCheckByTypeResultListAndAuditAlarmByHandle": 1,
                "ExpEnvironmentLock": 1,
                "MiStaticMemoryAreaCount": 1,
                "ProgressBarLeft": 1,
                "GUID_BATTERY_DISCHARGE_ACTION_1": 1,
                "GUID_PROCESSOR_ALLOW_THROTTLING": 1,
                "NlsDbcsUnicodeToAnsiTable": 1,
                "KiDPCTimeout": 1,
                "RtlpDphPageHeapList": 1,
                "MiHighNonPagedPoolThreshold": 1,
                "_imp__HalEndSystemInterrupt": 1,
                "PspProcessNotifyRoutineCount": 1,
                "GUID_BATTERY_DISCHARGE_ACTION_3": 1,
                "NlsDbcsUnicodeToOemTable": 1,
                "SeAliasSystemOpsSid": 1,
                "@ExfTryToWakePushLock": 1,
                "SepExports": 1,
                "PspDoingGiveBacks": 1,
                "KernelVerifier": 1,
                "_imp__VidSetScrollRegion": 1,
                "MiFreeSwapPages": 1,
                "GUID_PNP_POWER_NOTIFICATION": 1,
                "GUID_BUS_TYPE_1394": 1,
                "DebugService2": 1,
                "@ExfInterlockedInsertHeadList": 1,
                "_setjmp3": 1,
                "CmpConfigurationData": 1,
                "NtMajorVersion": 1,
                "GUID_BUS_TYPE_USBPRINT": 1,
                "GUID_DEVICE_QUERY_AND_REMOVE": 1,
                "GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD": 1,
                "GUID_DEVINTERFACE_VOLUME": 1,
                "ExpDesktopMapping": 1,
                "KiIdleSummary": 1,
                "GUID_DEVICE_REMOVE_PENDING": 1,
                "RtlpShortIllegals": 1,
                "Ki386SetupAndExitToV86Mode": 1,
                "KiISRTimeout": 1,
                "KdpDebugLogSpinLock": 1,
                "KiDoubleFaultStackData": 1,
                "GUID_DEVINTERFACE_DISK": 1,
                "CmNtCSDVersion": 1,
                "MmSectionBasedRoot": 1,
                "@ExReleaseFastMutexUnsafeAndLeaveCriticalRegion": 1,
                "SePrincipalSelfSid": 1,
                "CmpRegistryRootHandle": 1,
                "_imp_@KeReleaseInStackQueuedSpinLock": 1,
                "PspJobMapping": 1,
                "CmpDelayAllocBucketLock": 1,
                "GUID_POWERBUTTON_ACTION_FLAGS": 1,
                "MiStaticMemoryAreas": 1,
                "MmDefaultMaximumNonPagedPool": 1,
                "PsRawPrioritySeparation": 1,
                "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING": 1,
                "ExpCallBackFlush": 1,
                "ZwRaiseHardError": 1,
                "ZwFreeUserPhysicalPages": 1,
                "ZwStartProfile": 1,
                "MiSessionSpaceWs": 1,
                "CmpDelayCloseWorkItem": 1,
                "KeMaximumIncrement": 1,
                "KiTrapReturn": 1,
                "KiTrapReturnNoSegments": 1,
                "KiNMITSS": 1,
                "GUID_IO_VOLUME_DEVICE_INTERFACE": 1,
                "@ExfInterlockedInsertTailList": 1,
                "_imp__HalGetInterruptVector": 1,
                "_size_of_stack_commit__": 1,
                "MiGlobalPageOperation": 1,
                "_dll_characteristics__": 1,
                "PopVolumeDevices": 1,
                "SetSystemStateCallback": 1,
                "SeLocalSid": 1,
                "RtlpGetExceptionList": 1,
                "PnpNotifyListHead": 1,
                "ObpRootDirectoryObject": 1,
                "GUID_SLEEP_SUBGROUP": 1,
                "ExpNlsTableBase": 1,
                "KdpPromptString": 1,
                "LpcpLock": 1,
                "CmpWasSetupBoot": 1,
                "PspDefaultPagefileLimit": 1,
                "ZwSetInformationToken": 1,
                "MiDebugMapping": 1,
                "ZwLockFile": 1,
                "ZwRequestDeviceWakeup": 1,
                "MiSessionBasePte": 1,
                "KeRosBiosVersion": 1,
                "MmDriverCommit": 1,
                "_wctype": 1,
                "GUID_IO_VOLUME_DISMOUNT_FAILED": 1,
                "GUID_PROCESSOR_PERF_DECREASE_TIME": 1,
                "ZwQueryMutant": 1,
                "@ExfUnblockPushLock": 1,
                "ExpResourceTimeoutCount": 1,
                "ObpObjectsWithName": 1,
                "GUID_DEVICE_MEMORY": 1,
                "ZwDebugActiveProcess": 1,
                "ZwWaitForDebugEvent": 1,
                "PnpNotifyListLock": 1,
                "_imp__HalSetRealTimeClock": 1,
                "PopAction": 1,
                "SeTakeOwnershipPrivilege": 1,
                "ZwSetUuidSeed": 1,
                "ZwGetContextThread": 1,
                "GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS": 1,
                "MmPhysicalMemoryBlock": 1,
                "BootDriverLock": 1,
                "CmpFlushStarveWriters": 1,
                "RtlpDphTargetDlls": 1,
                "KiTbFlushTimeStamp": 1,
                "SeImpersonatePrivilege": 1,
                "ZwProtectVirtualMemory": 1,
                ".gnu_debuglink": 1,
                ".eh_frame": 1,
                ".debug_aranges": 1,
                ".debug_info": 1,
                ".debug_abbrev": 1,
                ".debug_line": 1,
                ".debug_frame": 1,
                ".debug_str": 1,
                ".debug_loc": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-r-- name=.rdata": 1,
                "perm=m-r-- name=.gnu_debuglink": 1,
                "perm=m-r-- name=.eh_frame": 1,
                "perm=m-rw- name=.bss": 1,
                "perm=m-r-- name=.edata": 1,
                "perm=m-rw- name=.idata": 1,
                "perm=m-rw- name=.rsrc": 1,
                "perm=m-r-- name=.reloc": 1,
                "perm=m-r-- name=.rossym": 1,
                "type=program": 1,
                "bind=NONE type=FUNC name=bootvid.dll_VidBitBlt": 3,
                "bind=NONE type=FUNC name=bootvid.dll_VidBufferToScreenBlt": 3,
                "bind=NONE type=FUNC name=bootvid.dll_VidCleanUp": 3,
                "bind=NONE type=FUNC name=bootvid.dll_VidDisplayString": 3,
                "bind=NONE type=FUNC name=bootvid.dll_VidInitialize": 3,
                "bind=NONE type=FUNC name=bootvid.dll_VidResetDisplay": 3,
                "bind=NONE type=FUNC name=bootvid.dll_VidScreenToBufferBlt": 3,
                "bind=NONE type=FUNC name=bootvid.dll_VidSetScrollRegion": 3,
                "bind=NONE type=FUNC name=bootvid.dll_VidSetTextColor": 3,
                "bind=NONE type=FUNC name=bootvid.dll_VidSolidColorFill": 3,
                "bind=NONE type=FUNC name=hal.dll_HalAdjustResourceList": 3,
                "bind=NONE type=FUNC name=hal.dll_HalAllProcessorsStarted": 3,
                "bind=NONE type=FUNC name=hal.dll_HalAllocateAdapterChannel": 3,
                "bind=NONE type=FUNC name=hal.dll_HalBeginSystemInterrupt": 3,
                "bind=NONE type=FUNC name=hal.dll_HalClearSoftwareInterrupt": 3,
                "bind=NONE type=FUNC name=hal.dll_HalDisableSystemInterrupt": 3,
                "bind=NONE type=FUNC name=hal.dll_HalDisplayString": 3,
                "bind=NONE type=FUNC name=hal.dll_HalEnableSystemInterrupt": 3,
                "bind=NONE type=FUNC name=hal.dll_HalEndSystemInterrupt": 3,
                "bind=NONE type=FUNC name=hal.dll_HalGetEnvironmentVariable": 3,
                "bind=NONE type=FUNC name=hal.dll_HalGetInterruptVector": 3,
                "bind=NONE type=FUNC name=hal.dll_HalHandleNMI": 3,
                "bind=NONE type=FUNC name=hal.dll_HalInitSystem": 3,
                "bind=NONE type=FUNC name=hal.dll_HalInitializeProcessor": 3,
                "bind=NONE type=FUNC name=hal.dll_HalProcessorIdle": 3,
                "bind=NONE type=FUNC name=hal.dll_HalQueryRealTimeClock": 3,
                "bind=NONE type=FUNC name=hal.dll_HalReportResourceUsage": 3,
                "bind=NONE type=FUNC name=hal.dll_HalRequestSoftwareInterrupt": 3,
                "bind=NONE type=FUNC name=hal.dll_HalReturnToFirmware": 3,
                "bind=NONE type=FUNC name=hal.dll_HalSetEnvironmentVariable": 3,
                "bind=NONE type=FUNC name=hal.dll_HalSetProfileInterval": 3,
                "bind=NONE type=FUNC name=hal.dll_HalSetRealTimeClock": 3,
                "bind=NONE type=FUNC name=hal.dll_HalSetTimeIncrement": 3,
                "bind=NONE type=FUNC name=hal.dll_HalStartProfileInterrupt": 3,
                "bind=NONE type=FUNC name=hal.dll_HalStopProfileInterrupt": 3,
                "bind=NONE type=FUNC name=hal.dll_HalSystemVectorDispatchEntry": 3,
                "bind=NONE type=FUNC name=hal.dll_HalTranslateBusAddress": 3,
                "bind=NONE type=FUNC name=hal.dll_KdComPortInUse": 3,
                "bind=NONE type=FUNC name=hal.dll_KeAcquireInStackQueuedSpinLock": 3,
                "bind=NONE type=FUNC name=hal.dll_KeAcquireInStackQueuedSpinLockRaiseToSynch": 3,
                "bind=NONE type=FUNC name=hal.dll_KeAcquireQueuedSpinLock": 3,
                "bind=NONE type=FUNC name=hal.dll_KeAcquireQueuedSpinLockRaiseToSynch": 3,
                "bind=NONE type=FUNC name=hal.dll_KeAcquireSpinLockRaiseToSynch": 3,
                "bind=NONE type=FUNC name=hal.dll_KeFlushWriteBuffer": 3,
                "bind=NONE type=FUNC name=hal.dll_KeGetCurrentIrql": 3,
                "bind=NONE type=FUNC name=hal.dll_KeQueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=hal.dll_KeRaiseIrqlToDpcLevel": 3,
                "bind=NONE type=FUNC name=hal.dll_KeRaiseIrqlToSynchLevel": 3,
                "bind=NONE type=FUNC name=hal.dll_KeReleaseInStackQueuedSpinLock": 3,
                "bind=NONE type=FUNC name=hal.dll_KeReleaseQueuedSpinLock": 3,
                "bind=NONE type=FUNC name=hal.dll_KeStallExecutionProcessor": 3,
                "bind=NONE type=FUNC name=hal.dll_KfAcquireSpinLock": 3,
                "bind=NONE type=FUNC name=hal.dll_KfLowerIrql": 3,
                "bind=NONE type=FUNC name=hal.dll_KfRaiseIrql": 3,
                "bind=NONE type=FUNC name=hal.dll_KfReleaseSpinLock": 3,
                "bind=NONE type=FUNC name=hal.dll_READ_PORT_UCHAR": 3,
                "bind=NONE type=FUNC name=hal.dll_WRITE_PORT_UCHAR": 3,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcCanIWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcCopyRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcCopyWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcDeferWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcFastCopyRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcFastCopyWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcFastMdlReadWait": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcFastReadNotPossible": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcFastReadWait": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcFlushCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcGetDirtyPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcGetFileObjectFromBcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcGetFileObjectFromSectionPtrs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcGetFlushedValidData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcGetLsnForFileObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcInitializeCacheMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcIsThereDirtyData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcMapData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcMdlRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcMdlReadComplete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcMdlWriteAbort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcMdlWriteComplete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcPinMappedData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcPinRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcPrepareMdlWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcPreparePinWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcPurgeCacheSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcRemapBcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcRepinBcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcScheduleReadAhead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcSetAdditionalCacheAttributes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcSetBcbOwnerPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcSetDirtyPageThreshold": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcSetDirtyPinnedData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcSetFileSizes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcSetLogHandleForFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcSetReadAheadGranularity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcUninitializeCacheMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcUnpinData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcUnpinDataForThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcUnpinRepinnedBcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcWaitForCurrentLazyWriterActivity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CcZeroData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CmRegisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_CmUnRegisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_DbgBreakPoint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_DbgBreakPointWithStatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_DbgCommandString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_DbgLoadImageSymbols": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_DbgPrint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_DbgPrintEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_DbgPrintReturnControlC": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_DbgPrompt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_DbgQueryDebugFilterState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_DbgSetDebugFilterState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAcquireFastMutexUnsafe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAcquireResourceExclusiveLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAcquireResourceSharedLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAcquireRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAcquireRundownProtectionCacheAware": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAcquireRundownProtectionCacheAwareEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAcquireRundownProtectionEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAcquireSharedStarveExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAcquireSharedWaitForExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAllocateCacheAwareRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAllocateFromPagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAllocatePool": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAllocatePoolWithQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAllocatePoolWithQuotaTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAllocatePoolWithTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExAllocatePoolWithTagPriority": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExConvertExclusiveToSharedLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExCreateCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExDeleteNPagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExDeletePagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExDeleteResourceLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExDesktopObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExDisableResourceBoostLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExEnterCriticalRegionAndAcquireFastMutexUnsafe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExEnterCriticalRegionAndAcquireResourceExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExEnterCriticalRegionAndAcquireResourceShared": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExEnterCriticalRegionAndAcquireSharedWaitForExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExEnumHandleTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExEventObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExExtendZone": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExFreeCacheAwareRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExFreePool": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExFreePoolWithTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExFreeToPagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExGetCurrentProcessorCounts": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExGetCurrentProcessorCpuUsage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExGetExclusiveWaiterCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExGetPreviousMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExGetSharedWaiterCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInitializeNPagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInitializePagedLookasideList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInitializeResourceLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInitializeRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInitializeRundownProtectionCacheAware": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInitializeZone": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedAddLargeInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedAddLargeStatistic": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedAddUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedCompareExchange64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedDecrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedExchangeUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedExtendZone": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedFlushSList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedIncrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedInsertHeadList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedInsertTailList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedPopEntryList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedPopEntrySList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedPushEntryList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedPushEntrySList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExInterlockedRemoveHeadList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExIsProcessorFeaturePresent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExIsResourceAcquiredExclusiveLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExIsResourceAcquiredSharedLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExLocalTimeToSystemTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExNotifyCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExQueryPoolBlockSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExQueueWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExRaiseAccessViolation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExRaiseDatatypeMisalignment": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExRaiseException": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExRaiseHardError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExRaiseStatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExReInitializeRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExReInitializeRundownProtectionCacheAware": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExRegisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExReinitializeResourceLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExReleaseFastMutexUnsafe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExReleaseFastMutexUnsafeAndLeaveCriticalRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExReleaseResourceAndLeaveCriticalRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExReleaseResourceForThreadLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExReleaseResourceLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExReleaseRundownProtection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExReleaseRundownProtectionCacheAware": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExReleaseRundownProtectionCacheAwareEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExReleaseRundownProtectionEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExRundownCompleted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExRundownCompletedCacheAware": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExSemaphoreObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExSetResourceOwnerPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExSetTimerResolution": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExSizeOfRundownProtectionCacheAware": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExSystemExceptionFilter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExSystemTimeToLocalTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExUnregisterCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExUuidCreate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExVerifySuite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExWaitForRundownProtectionRelease": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExWaitForRundownProtectionReleaseCacheAware": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExWindowStationObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfAcquirePushLockExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfAcquirePushLockShared": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfInterlockedAddUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfInterlockedCompareExchange64": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfInterlockedInsertHeadList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfInterlockedInsertTailList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfInterlockedPopEntryList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfInterlockedPushEntryList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfInterlockedRemoveHeadList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfReleasePushLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfReleasePushLockExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfReleasePushLockShared": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfTryToWakePushLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExfUnblockPushLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Exfi386InterlockedDecrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Exfi386InterlockedExchangeUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Exfi386InterlockedIncrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Exi386InterlockedDecrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Exi386InterlockedExchangeUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Exi386InterlockedIncrementLong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExiAcquireFastMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExiReleaseFastMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ExiTryToAcquireFastMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlAcquireFileExclusive": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlAddBaseMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlAddLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlAddMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlAddToTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlAllocateFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlAllocatePool": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlAllocatePoolWithQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlAllocatePoolWithQuotaTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlAllocatePoolWithTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlAllocateResource": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlAreNamesEqual": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlBalanceReads": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlCheckLockForReadAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlCheckLockForWriteAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlCheckOplock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlCopyRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlCopyWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlCreateSectionForDataScan": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlCurrentBatchOplock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlDeleteKeyFromTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlDeleteTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlDeregisterUncProvider": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlDissectDbcs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlDissectName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlDoesDbcsContainWildCards": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlDoesNameContainWildCards": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlFastCheckLockForRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlFastCheckLockForWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlFastUnlockAll": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlFastUnlockAllByKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlFastUnlockSingle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlFindInTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlFreeFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlGetFileSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlGetNextBaseMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlGetNextFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlGetNextLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlGetNextMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlIncrementCcFastReadNoWait": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlIncrementCcFastReadNotPossible": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlIncrementCcFastReadResourceMiss": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlIncrementCcFastReadWait": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlInitializeBaseMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlInitializeFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlInitializeLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlInitializeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlInitializeOplock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlInitializeTunnelCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlInsertPerFileObjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlInsertPerStreamContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlIsDbcsInExpression": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlIsFatDbcsLegal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlIsHpfsDbcsLegal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlIsNameInExpression": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlIsNtstatusExpected": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlIsPagingFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlIsTotalDeviceFailure": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlLegalAnsiCharacterArray": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlLookupBaseMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlLookupLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlLookupLastBaseMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlLookupLastBaseMcbEntryAndIndex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlLookupLastLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlLookupLastLargeMcbEntryAndIndex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlLookupLastMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlLookupMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlLookupPerFileObjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlLookupPerStreamContextInternal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlMdlRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlMdlReadComplete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlMdlReadCompleteDev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlMdlReadDev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlMdlWriteComplete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlMdlWriteCompleteDev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNormalizeNtstatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNotifyChangeDirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNotifyCleanup": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNotifyFilterChangeDirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNotifyFilterReportChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNotifyFullChangeDirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNotifyFullReportChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNotifyInitializeSync": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNotifyReportChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNotifyUninitializeSync": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNotifyVolumeEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNumberOfRunsInBaseMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNumberOfRunsInLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlNumberOfRunsInMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlOplockFsctrl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlOplockIsFastIoPossible": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlPostPagingFileStackOverflow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlPostStackOverflow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlPrepareMdlWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlPrepareMdlWriteDev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlPrivateLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlProcessFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlRegisterFileSystemFilterCallbacks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlRegisterUncProvider": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlReleaseFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlRemoveBaseMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlRemoveLargeMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlRemoveMcbEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlRemovePerFileObjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlRemovePerStreamContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlResetBaseMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlResetLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlSplitBaseMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlSplitLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlSyncVolumes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlTeardownPerStreamContexts": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlTruncateBaseMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlTruncateLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlTruncateMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlUninitializeBaseMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlUninitializeFileLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlUninitializeLargeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlUninitializeMcb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_FsRtlUninitializeOplock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_HalDispatchTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_HalExamineMBR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_HalPrivateDispatchTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_HeadlessDispatch": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InbvAcquireDisplayOwnership": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InbvCheckDisplayOwnership": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InbvDisplayString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InbvEnableBootDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InbvEnableDisplayString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InbvInstallDisplayStringFilter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InbvIsBootDriverInstalled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InbvNotifyDisplayOwnershipLost": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InbvResetDisplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InbvSetScrollRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InbvSetTextColor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InbvSolidColorFill": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InitSafeBootMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InterlockedCompareExchange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InterlockedDecrement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InterlockedExchange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InterlockedExchangeAdd": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InterlockedIncrement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InterlockedPopEntrySList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_InterlockedPushEntrySList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAcquireCancelSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAcquireRemoveLockEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAcquireVpbSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAdapterObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAllocateAdapterChannel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAllocateController": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAllocateDriverObjectExtension": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAllocateErrorLogEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAllocateIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAllocateMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAllocateWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAssignDriveLetters": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAssignResources": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAttachDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAttachDeviceByPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAttachDeviceToDeviceStack": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoAttachDeviceToDeviceStackSafe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoBuildAsynchronousFsdRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoBuildDeviceIoControlRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoBuildPartialMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoBuildSynchronousFsdRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCallDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCancelFileOpen": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCancelIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCheckDesiredAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCheckEaBufferValidity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCheckFunctionAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCheckQuerySetFileInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCheckQuerySetVolumeInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCheckQuotaBufferValidity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCheckShareAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCompleteRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoConnectInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateController": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateDisk": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateFileSpecifyDeviceObjectHint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateNotificationEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateStreamFileObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateStreamFileObjectEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateStreamFileObjectLite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateSymbolicLink": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateSynchronizationEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCreateUnprotectedSymbolicLink": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCsqInitialize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCsqInitializeEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCsqInsertIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCsqInsertIrpEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCsqRemoveIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoCsqRemoveNextIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoDeleteController": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoDeleteDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoDeleteDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoDeleteSymbolicLink": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoDetachDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoDeviceHandlerObjectSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoDeviceHandlerObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoDeviceObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoDisconnectInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoDriverObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoEnqueueIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoEnumerateDeviceObjectList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoEnumerateRegisteredFiltersList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoFastQueryNetworkAttributes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoFileObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoForwardAndCatchIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoForwardIrpSynchronously": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoFreeController": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoFreeErrorLogEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoFreeIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoFreeMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoFreeWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetAttachedDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetAttachedDeviceReference": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetBaseFileSystemDeviceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetBootDiskInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetConfigurationInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetCurrentProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetDeviceAttachmentBaseRef": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetDeviceInterfaceAlias": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetDeviceInterfaces": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetDeviceObjectPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetDeviceProperty": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetDeviceToVerify": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetDiskDeviceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetDmaAdapter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetDriverObjectExtension": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetFileObjectGenericMapping": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetInitialStack": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetLowerDeviceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetPagingIoPriority": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetRelatedDeviceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetRequestorProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetRequestorProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetRequestorSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetStackLimits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoGetTopLevelIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoInitializeIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoInitializeRemoveLockEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoInitializeTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoInvalidateDeviceRelations": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoInvalidateDeviceState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoIsFileOriginRemote": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoIsOperationSynchronous": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoIsSystemThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoIsValidNameGraftingBuffer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoIsWdmVersionAvailable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoMakeAssociatedIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoOpenDeviceInterfaceRegistryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoOpenDeviceRegistryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoPageRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoPnPDeliverServicePowerNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoQueryDeviceDescription": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoQueryFileDosDeviceName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoQueryFileInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoQueryVolumeInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoQueueThreadIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoQueueWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoRaiseHardError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoRaiseInformationalHardError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReadDiskSignature": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReadOperationCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReadPartitionTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReadPartitionTableEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReadTransferCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoRegisterBootDriverReinitialization": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoRegisterDeviceInterface": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoRegisterDriverReinitialization": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoRegisterFileSystem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoRegisterFsRegistrationChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoRegisterLastChanceShutdownNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoRegisterPlugPlayNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoRegisterShutdownNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReleaseCancelSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReleaseRemoveLockAndWaitEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReleaseRemoveLockEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReleaseVpbSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoRemoveShareAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReportDetectedDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReportHalResourceUsage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReportResourceForDetection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReportResourceUsage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReportTargetDeviceChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReportTargetDeviceChangeAsynchronous": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoRequestDeviceEject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoReuseIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetCompletionRoutineEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetDeviceInterfaceState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetDeviceToVerify": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetFileOrigin": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetHardErrorOrVerifyDevice": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetIoCompletion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetPartitionInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetPartitionInformationEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetShareAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetStartIoAttributes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetSystemPartition": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetThreadHardErrorMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSetTopLevelIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoStartNextPacket": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoStartNextPacketByKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoStartPacket": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoStartTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoStatisticsLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoStopTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSynchronousInvalidateDeviceRelations": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoSynchronousPageWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoThreadToProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoTranslateBusAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoUnregisterFileSystem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoUnregisterFsRegistrationChange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoUnregisterPlugPlayNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoUnregisterShutdownNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoUpdateShareAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoValidateDeviceIoControlAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoVerifyPartitionTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoVerifyVolume": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoVolumeDeviceToDosName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMIAllocateInstanceIds": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMIDeviceObjectToInstanceName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMIExecuteMethod": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMIHandleToInstanceName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMIOpenBlock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMIQueryAllData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMIQueryAllDataMultiple": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMIQuerySingleInstance": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMIQuerySingleInstanceMultiple": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMIRegistrationControl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMISetNotificationCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMISetSingleInstance": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMISetSingleItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMISuggestInstanceName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWMIWriteEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWriteErrorLogEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWriteOperationCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWritePartitionTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWritePartitionTableEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IoWriteTransferCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IofCallDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_IofCompleteRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KdChangeOption": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KdDebuggerEnabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KdDebuggerNotPresent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KdDisableDebugger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KdEnableDebugger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KdEnteredDebugger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KdPollBreakIn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KdPowerTransition": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KdRefreshDebuggerNotPresent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KdSystemDebugControl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Ke386CallBios": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Ke386IoSetAccessProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Ke386QueryIoAccessMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Ke386SetIoAccessMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeAcquireGuardedMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeAcquireGuardedMutexUnsafe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeAcquireInStackQueuedSpinLockAtDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeAcquireInStackQueuedSpinLockForDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeAcquireInterruptSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeAcquireSpinLockAtDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeAcquireSpinLockForDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeAddSystemServiceTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeAreAllApcsDisabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeAreApcsDisabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeAttachProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeBugCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeBugCheckEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeCancelTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeCapturePersistentThreadState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeClearEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeConnectInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeDelayExecutionThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeDeregisterBugCheckCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeDeregisterBugCheckReasonCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeDeregisterNmiCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeDetachProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeDisconnectInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeEnterCriticalRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeEnterGuardedRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeEnterKernelDebugger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeFindConfigurationEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeFindConfigurationNextEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeFlushEntireTb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeFlushQueuedDpcs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeGenericCallDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeGetCurrentThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeGetPreviousMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeGetRecommendedSharedDataAlignment": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeI386AllocateGdtSelectors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeI386FlatToGdtSelector": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeI386MachineType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeI386ReleaseGdtSelectors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeApc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeCrashDumpHeader": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeGuardedMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeMutant": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeSemaphore": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeThreadedDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInitializeTimerEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInsertByKeyDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInsertDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInsertHeadQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInsertQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInsertQueueApc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInsertQueueDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeInvalidateAllCaches": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeIpiGenericCall": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeIsAttachedProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeIsExecutingDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeLeaveCriticalRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeLeaveGuardedRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeLoaderBlock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeNumberProcessors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeProfileInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeProfileInterruptWithSource": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KePulseEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeQueryActiveProcessors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeQueryInterruptTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeQueryPriorityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeQueryRuntimeThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeQuerySystemTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeQueryTickCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeQueryTimeIncrement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRaiseUserException": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReadStateEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReadStateMutant": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReadStateMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReadStateQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReadStateSemaphore": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReadStateTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRegisterBugCheckCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRegisterBugCheckReasonCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRegisterNmiCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReleaseGuardedMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReleaseGuardedMutexUnsafe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReleaseInStackQueuedSpinLockForDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReleaseInStackQueuedSpinLockFromDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReleaseInterruptSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReleaseMutant": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReleaseMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReleaseSemaphore": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReleaseSpinLockForDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeReleaseSpinLockFromDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRemoveByKeyDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRemoveByKeyDeviceQueueIfBusy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRemoveDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRemoveEntryDeviceQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRemoveQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRemoveQueueDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRemoveSystemServiceTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeResetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRestoreFloatingPointState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRevertToUserAffinityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeRundownQueue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSaveFloatingPointState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSaveStateForHibernate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeServiceDescriptorTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetAffinityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetBasePriorityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetDmaIoCoherency": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetEventBoostPriority": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetIdealProcessorThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetImportanceDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetKernelStackSwapEnable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetPriorityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetProfileIrql": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetSystemAffinityThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetTargetProcessorDpc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetTimeIncrement": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSetTimerEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSignalCallDpcDone": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSignalCallDpcSynchronize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeStackAttachProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeSynchronizeExecution": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeTerminateThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeTestSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeTickCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeTryToAcquireGuardedMutex": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeTryToAcquireSpinLockAtDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeUnstackDetachProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeUpdateRunTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeUpdateSystemTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeUserModeCallback": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeWaitForMultipleObjects": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeWaitForMutexObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KeWaitForSingleObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KefAcquireSpinLockAtDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KefReleaseSpinLockFromDpcLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Kei386EoiHelper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KiAcquireSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KiBugCheckData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KiCheckForKernelApcDelivery": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KiCoprocessorError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KiDeliverApc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KiDispatchInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KiEnableTimerWatchdog": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KiEoiHelper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KiIpiServiceRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KiReleaseSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_KiUnexpectedInterrupt": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Kii386SpinOnSpinLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LdrAccessResource": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LdrEnumResources": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LdrFindResourceDirectory_U": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LdrFindResource_U": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LpcPortObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LpcRequestPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LpcRequestWaitReplyPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LsaCallAuthenticationPackage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LsaDeregisterLogonProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LsaFreeReturnBuffer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LsaLogonUser": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LsaLookupAuthenticationPackage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_LsaRegisterLogonProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_Mm64BitPhysicalAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmAddPhysicalMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmAddVerifierThunks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmAdjustWorkingSetSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmAdvanceMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmAllocateContiguousMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmAllocateContiguousMemorySpecifyCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmAllocateMappingAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmAllocateNonCachedMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmAllocatePagesForMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmAllocatePagesForMdlEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmBuildMdlForNonPagedPool": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmCanFileBeTruncated": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmCommitSessionMappedView": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmCreateMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmCreateSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmDisableModifiedWriteOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmFlushImageSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmForceSectionClosed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmFreeContiguousMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmFreeContiguousMemorySpecifyCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmFreeMappingAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmFreeNonCachedMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmFreePagesFromMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmGetPhysicalAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmGetPhysicalMemoryRanges": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmGetSystemRoutineAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmGetVirtualForPhysical": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmGrowKernelStack": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmHighestUserAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmIsAddressValid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmIsDriverVerifying": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmIsNonPagedSystemAddressValid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmIsRecursiveIoFault": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmIsThisAnNtAsSystem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmIsVerifierEnabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmLockPagableDataSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmLockPagableImageSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmLockPagableSectionByHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmMapIoSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmMapLockedPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmMapLockedPagesSpecifyCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmMapLockedPagesWithReservedMapping": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmMapMemoryDumpMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmMapUserAddressesToPage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmMapVideoDisplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmMapViewInSessionSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmMapViewInSystemSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmMapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmMarkPhysicalMemoryAsBad": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmMarkPhysicalMemoryAsGood": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmPageEntireDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmPrefetchPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmProbeAndLockPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmProbeAndLockProcessPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmProbeAndLockSelectedPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmProtectMdlSystemAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmQuerySystemSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmRemovePhysicalMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmResetDriverPaging": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmSectionObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmSecureVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmSetAddressRangeModified": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmSetBankedSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmSizeOfMdl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmSystemRangeStart": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmTrimAllSystemPagableMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmUnlockPagableImageSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmUnlockPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmUnmapIoSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmUnmapLockedPages": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmUnmapReservedMapping": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmUnmapVideoDisplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmUnmapViewInSessionSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmUnmapViewInSystemSpace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmUnmapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmUnsecureVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_MmUserProbeAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NlsAnsiCodePage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NlsLeadByteInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NlsMbCodePageTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NlsMbOemCodePageTag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NlsOemCodePage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NlsOemLeadByteInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtAddAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtAdjustPrivilegesToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtAlertThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtAllocateLocallyUniqueId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtAllocateUuids": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtAllocateVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtBuildNumber": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtClose": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtConnectPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtCreateEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtCreateFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtCreateSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtCreateTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtDeleteAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtDeleteFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtDeviceIoControlFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtDuplicateObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtDuplicateToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtFindAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtFreeVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtFsControlFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtGlobalFlag": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtLockFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtMakePermanentObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtMapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtNotifyChangeDirectoryFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtOpenEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtOpenFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtOpenProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtOpenProcessToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtOpenProcessTokenEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtOpenThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtOpenThreadToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtOpenThreadTokenEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtQueryDirectoryFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtQueryEaFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtQueryInformationAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtQueryInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtQueryInformationProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtQueryInformationThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtQueryInformationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtQueryQuotaInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtQuerySecurityObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtQuerySystemInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtQueryVolumeInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtReadFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtRequestPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtRequestWaitReplyPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtSetEaFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtSetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtSetInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtSetInformationProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtSetInformationThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtSetQuotaInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtSetSecurityObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtSetVolumeInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtShutdownSystem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtTraceEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtUnlockFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtVdmControl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtWaitForSingleObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_NtWriteFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObAssignSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObCheckCreateObjectAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObCheckObjectAccess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObCloseHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObCreateObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObCreateObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObDeleteCapturedInsertInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObDereferenceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObDereferenceObjectDeferDelete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObDereferenceSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObFindHandleForObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObGetObjectSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObInsertObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObIsKernelHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObLogSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObMakeTemporaryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObOpenObjectByName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObOpenObjectByPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObQueryNameString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObQueryObjectAuditingByHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObReferenceObjectByHandle": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObReferenceObjectByName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObReferenceObjectByPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObReferenceSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObReleaseObjectSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObSetHandleAttributes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObSetSecurityDescriptorInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObSetSecurityObjectByPointer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObfDereferenceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ObfReferenceObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoCallDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoCancelDeviceNotify": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoQueueShutdownWorkItem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoRegisterDeviceForIdleDetection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoRegisterDeviceNotify": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoRegisterSystemState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoRequestPowerIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoRequestShutdownEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoSetHiberRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoSetPowerState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoSetSystemState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoShutdownBugCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoStartNextPowerIrp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PoUnregisterSystemState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ProbeForRead": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ProbeForWrite": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsAssignImpersonationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsChargePoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsChargeProcessNonPagedPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsChargeProcessPagedPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsChargeProcessPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsCreateSystemProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsCreateSystemThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsDereferenceImpersonationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsDereferencePrimaryToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsDisableImpersonation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsEstablishWin32Callouts": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetContextThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentProcessSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentProcessWin32Process": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentThreadId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentThreadPreviousMode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentThreadProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentThreadProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentThreadStackBase": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentThreadStackLimit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentThreadTeb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentThreadWin32Thread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetCurrentThreadWin32ThreadAndEnterCriticalRegion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetJobLock": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetJobSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetJobUIRestrictionsClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessCreateTimeQuadPart": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessDebugPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessExitProcessCalled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessExitStatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessExitTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessImageFileName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessInheritedFromUniqueProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessJob": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessPeb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessPriorityClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessSectionBaseAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessSecurityPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessSessionIdEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessWin32Process": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetProcessWin32WindowStation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetThreadFreezeCount": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetThreadHardErrorsAreDisabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetThreadId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetThreadProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetThreadProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetThreadSessionId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetThreadTeb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetThreadWin32Thread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsGetVersion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsImpersonateClient": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsInitialSystemProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsIsProcessBeingDebugged": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsIsSystemProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsIsSystemThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsIsThreadImpersonating": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsIsThreadTerminating": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsJobType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsLookupProcessByProcessId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsLookupProcessThreadByCid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsLookupThreadByThreadId": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsProcessType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsReferenceImpersonationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsReferencePrimaryToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsRemoveCreateThreadNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsRemoveLoadImageNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsRestoreImpersonation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsReturnPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsReturnProcessNonPagedPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsReturnProcessPagedPoolQuota": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsRevertThreadToSelf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsRevertToSelf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetContextThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetCreateProcessNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetCreateThreadNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetJobUIRestrictionsClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetLegoNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetLoadImageNotifyRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetProcessPriorityByClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetProcessPriorityClass": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetProcessSecurityPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetProcessWin32Process": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetProcessWindowStation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetThreadHardErrorsAreDisabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsSetThreadWin32Thread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsTerminateSystemThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_PsThreadType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_READ_REGISTER_BUFFER_UCHAR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_READ_REGISTER_BUFFER_ULONG": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_READ_REGISTER_BUFFER_USHORT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_READ_REGISTER_UCHAR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_READ_REGISTER_ULONG": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_READ_REGISTER_USHORT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAbsoluteToSelfRelativeSD": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAddAccessAllowedAce": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAddAccessAllowedAceEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAddAce": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAddAtomToAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAddRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAllocateAndInitializeSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAllocateHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAnsiCharToUnicodeChar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAnsiStringToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAnsiStringToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAppendAsciizToString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAppendStringToString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAppendUnicodeStringToString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAppendUnicodeToString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAreAllAccessesGranted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAreAnyAccessesGranted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAreBitsClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAreBitsSet": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlAssert": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCaptureContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCaptureStackBackTrace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCharToInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCheckRegistryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlClearAllBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlClearBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlClearBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCompareMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCompareMemoryUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCompareString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCompareUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCompressBuffer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCompressChunks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlConvertLongToLargeInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlConvertSidToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlConvertUlongToLargeInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCopyLuid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCopyRangeList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCopySid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCopyString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCopyUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCreateAcl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCreateAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCreateHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCreateRegistryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCreateSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCreateSystemVolumeInformationFolder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCreateUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlCustomCPToUnicodeN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDecompressBuffer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDecompressChunks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDecompressFragment": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDelete": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDeleteAce": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDeleteAtomFromAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDeleteElementGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDeleteElementGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDeleteNoSplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDeleteOwnersRanges": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDeleteRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDeleteRegistryValue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDescribeChunk": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDestroyAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDestroyHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlDowncaseUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEmptyAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEnlargedIntegerMultiply": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEnlargedUnsignedDivide": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEnlargedUnsignedMultiply": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEnumerateGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEnumerateGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEnumerateGenericTableLikeADirectory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEnumerateGenericTableWithoutSplaying": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEnumerateGenericTableWithoutSplayingAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEqualLuid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEqualSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEqualString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlEqualUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlExtendedIntegerMultiply": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlExtendedLargeIntegerDivide": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlExtendedMagicDivide": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFillMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFillMemoryUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindClearBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindClearBitsAndSet": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindClearRuns": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindFirstRunClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindLastBackwardRunClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindLeastSignificantBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindLongestRunClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindMessage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindMostSignificantBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindNextForwardRunClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindSetBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindSetBitsAndClear": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFindUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFormatCurrentUserKeyPath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFreeAnsiString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFreeHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFreeOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFreeRangeList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlFreeUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGUIDFromString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGenerate8dot3Name": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetAce": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetCallersAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetCompressionWorkSpaceSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetDaclSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetDefaultCodePage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetElementGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetElementGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetFirstRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetGroupSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetNextRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetNtGlobalFlags": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetOwnerSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetSaclSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetSetBootStatusData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlGetVersion": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlHashUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlImageDirectoryEntryToData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlImageNtHeader": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInitAnsiString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInitAnsiStringEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInitCodePageTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInitString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInitUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInitUnicodeStringEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInitializeBitMap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInitializeGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInitializeGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInitializeRangeList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInitializeSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInitializeUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInsertElementGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInsertElementGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInsertElementGenericTableFull": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInsertElementGenericTableFullAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInsertUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInt64ToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIntegerToChar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIntegerToUnicode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIntegerToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlInvertRangeList": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv4AddressToStringA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv4AddressToStringExA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv4AddressToStringExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv4AddressToStringW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv4StringToAddressA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv4StringToAddressExA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv4StringToAddressExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv4StringToAddressW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv6AddressToStringA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv6AddressToStringExA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv6AddressToStringExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv6AddressToStringW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv6StringToAddressA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv6StringToAddressExA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv6StringToAddressExW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIpv6StringToAddressW": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIsGenericTableEmpty": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIsGenericTableEmptyAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIsNameLegalDOS8Dot3": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIsRangeAvailable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlIsValidOemCharacter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLargeIntegerAdd": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLargeIntegerArithmeticShift": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLargeIntegerDivide": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLargeIntegerNegate": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLargeIntegerShiftLeft": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLargeIntegerShiftRight": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLargeIntegerSubtract": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLengthRequiredSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLengthSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLengthSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLockBootStatusData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLookupAtomInAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLookupElementGenericTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLookupElementGenericTableAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLookupElementGenericTableFull": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlLookupElementGenericTableFullAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlMapGenericMask": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlMapSecurityErrorToNtStatus": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlMergeRangeLists": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlMoveMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlMultiByteToUnicodeN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlMultiByteToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlNextUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlNtStatusToDosError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlNtStatusToDosErrorNoTeb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlNumberGenericTableElements": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlNumberGenericTableElementsAvl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlNumberOfClearBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlNumberOfSetBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlOemStringToCountedUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlOemStringToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlOemStringToUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlOemToUnicodeN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlPinAtomInAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlPrefetchMemoryNonTemporal": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlPrefixString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlPrefixUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlQueryAtomInAtomTable": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlQueryRegistryValues": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlQueryTimeZoneInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlRaiseException": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlRandom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlRandomEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlRealPredecessor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlRealSuccessor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlRemoveUnicodePrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlReserveChunk": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSecondsSince1970ToTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSecondsSince1980ToTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSelfRelativeToAbsoluteSD": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSelfRelativeToAbsoluteSD2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSetAllBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSetBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSetBits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSetDaclSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSetGroupSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSetOwnerSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSetSaclSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSetTimeZoneInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSizeHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSplay": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlStringFromGUID": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSubAuthorityCountSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSubAuthoritySid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSubtreePredecessor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlSubtreeSuccessor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlTestBit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlTimeFieldsToTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlTimeToElapsedTimeFields": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlTimeToSecondsSince1970": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlTimeToSecondsSince1980": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlTimeToTimeFields": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUlongByteSwap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUlonglongByteSwap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUnicodeStringToAnsiSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUnicodeStringToAnsiString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUnicodeStringToCountedOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUnicodeStringToInteger": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUnicodeStringToOemSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUnicodeStringToOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUnicodeToCustomCPN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUnicodeToMultiByteN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUnicodeToMultiByteSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUnicodeToOemN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUnlockBootStatusData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUnwind": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUpcaseUnicodeChar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUpcaseUnicodeString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUpcaseUnicodeStringToAnsiString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUpcaseUnicodeStringToCountedOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUpcaseUnicodeStringToOemString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUpcaseUnicodeToCustomCPN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUpcaseUnicodeToMultiByteN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUpcaseUnicodeToOemN": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUpperChar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUpperString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlUshortByteSwap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlValidRelativeSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlValidSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlValidSid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlVerifyVersionInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlVolumeDeviceToDosName": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlWalkFrameChain": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlWriteRegistryValue": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlZeroHeap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlZeroMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlxAnsiStringToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlxOemStringToUnicodeSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlxUnicodeStringToAnsiSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_RtlxUnicodeStringToOemSize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeAccessCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeAppendPrivileges": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeAssignSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeAssignSecurityEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeAuditHardLinkCreation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeAuditingFileEvents": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeAuditingFileEventsWithContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeAuditingFileOrGlobalEvents": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeAuditingHardLinkEvents": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeAuditingHardLinkEventsWithContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeCaptureSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeCaptureSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeCloseObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeCreateAccessState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeCreateClientSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeCreateClientSecurityFromSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeDeassignSecurity": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeDeleteAccessState": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeDeleteObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeExports": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeFilterToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeFreePrivileges": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeImpersonateClient": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeImpersonateClientEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeLockSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeMarkLogonSessionForTerminationNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeOpenObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeOpenObjectForDeleteAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SePrivilegeCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SePrivilegeObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SePublicDefaultDacl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeQueryAuthenticationIdToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeQueryInformationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeQuerySecurityDescriptorInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeQuerySessionIdToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeRegisterLogonSessionTerminatedRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeReleaseSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeReleaseSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeSetAccessStateGenericMapping": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeSetSecurityDescriptorInfo": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeSetSecurityDescriptorInfoEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeSinglePrivilegeCheck": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeSystemDefaultDacl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeTokenImpersonationLevel": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeTokenIsAdmin": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeTokenIsRestricted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeTokenIsWriteRestricted": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeTokenObjectType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeTokenType": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeUnlockSubjectContext": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeUnregisterLogonSessionTerminatedRoutine": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_SeValidSecurityDescriptor": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_VerSetConditionMask": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_VfFailDeviceNode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_VfFailSystemBIOS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_VfIsVerificationEnabled": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_WRITE_REGISTER_BUFFER_UCHAR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_WRITE_REGISTER_BUFFER_ULONG": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_WRITE_REGISTER_BUFFER_USHORT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_WRITE_REGISTER_UCHAR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_WRITE_REGISTER_ULONG": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_WRITE_REGISTER_USHORT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_WmiQueryTraceInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_WmiTraceMessage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_WmiTraceMessageVa": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwAccessCheckAndAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwAddBootEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwAddDriverEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwAdjustPrivilegesToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwAlertThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwAllocateVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwAssignProcessToJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwCancelIoFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwCancelTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwClearEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwClose": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwCloseObjectAuditAlarm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwConnectPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwCreateDirectoryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwCreateEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwCreateFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwCreateJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwCreateKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwCreateSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwCreateSymbolicLinkObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwCreateTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwDeleteBootEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwDeleteDriverEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwDeleteFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwDeleteKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwDeleteValueKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwDeviceIoControlFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwDisplayString": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwDuplicateObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwDuplicateToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwEnumerateBootEntries": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwEnumerateDriverEntries": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwEnumerateKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwEnumerateValueKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwFlushInstructionCache": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwFlushKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwFlushVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwFreeVirtualMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwFsControlFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwInitiatePowerAction": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwIsProcessInJob": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwLoadDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwLoadKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwMakeTemporaryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwMapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwModifyBootEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwModifyDriverEntry": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwNotifyChangeKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenDirectoryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenProcessToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenProcessTokenEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenSymbolicLinkObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenThreadToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenThreadTokenEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwOpenTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwPowerInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwPulseEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryBootEntryOrder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryBootOptions": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryDefaultLocale": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryDefaultUILanguage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryDirectoryFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryDirectoryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryDriverEntryOrder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryEaFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryFullAttributesFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryInformationAtom": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryInformationJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryInformationProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryInformationThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryInformationToken": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryInstallUILanguage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQuerySection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQuerySecurityObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQuerySymbolicLinkObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQuerySystemInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryValueKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwQueryVolumeInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwReadFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwReplaceKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwRequestWaitReplyPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwResetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwRestoreKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSaveKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSaveKeyEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSecureConnectPort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetBootEntryOrder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetBootOptions": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetDefaultLocale": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetDefaultUILanguage": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetDriverEntryOrder": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetEaFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetEvent": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetInformationJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetInformationObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetInformationProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetInformationThread": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetSecurityObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetSystemInformation": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetSystemTime": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetTimer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetValueKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwSetVolumeInformationFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwTerminateJobObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwTerminateProcess": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwTranslateFilePath": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwUnloadDriver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwUnloadKey": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwUnmapViewOfSection": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwWaitForMultipleObjects": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwWaitForSingleObject": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwWriteFile": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_ZwYieldExecution": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__abnormal_termination": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__alldiv": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__alldvrm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__allmul": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__alloca_probe": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__allrem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__allshl": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__allshr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__aulldiv": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__aulldvrm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__aullrem": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__aullshr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__except_handler2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__except_handler3": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__global_unwind2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__itoa": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__itow": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__local_unwind2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__purecall": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__snprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__snwprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__stricmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__strlwr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__strnicmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__strnset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__strrev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__strset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__strupr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__vsnprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__vsnwprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__wcsicmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__wcslwr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__wcsnicmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__wcsnset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__wcsrev": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe__wcsupr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_atoi": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_atol": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_isdigit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_islower": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_isprint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_isspace": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_isupper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_isxdigit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_mbstowcs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_mbtowc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_memchr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_memcpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_memmove": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_memset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_qsort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_rand": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_sprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_srand": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_strcat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_strchr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_strcmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_strcpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_strlen": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_strncat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_strncmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_strncpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_strrchr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_strspn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_strstr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_swprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_tolower": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_toupper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_towlower": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_towupper": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_vDbgPrintEx": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_vDbgPrintExWithPrefix": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_vsprintf": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcscat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcschr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcscmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcscpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcscspn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcslen": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcsncat": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcsncmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcsncpy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcsrchr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcsspn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcsstr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wcstombs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=ntkrnlmp.exe_wctomb": 1,
                "section=.data type=utf16le string= \"\u5be8\u8098,.\u5c0c\u8098 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf16le string=(*\u5d2c\u8098 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf16le string= \"\u5dd4\u8098\"$\u5df8\u8098\"$\u5e1c\u8098$&\u5e40\u8098\"$\u5e68\u8098$&\u5e8c\u8098 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf16le string=(*\u5f14\u8098 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf16le string=\"$\u5f7c\u8098\"$\u5fa0\u8098\"$\u5fc4\u8098$&\u5fe8\u8098$&\u6010\u8098 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf16le string=\"$\u6078\u8098 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf16le string=$&\u60b8\u8098.0\u60e0\u8098,.\u6110\u8098 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf16le string=\\n\\f\u6166\u8098 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf16le string=\"$\u61c8\u8098 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf16le string=vx\u6954\u8098\u03f5 blocks=Basic Latin,CJK Unified Ideographs,Greek and Coptic": 1,
                "section=.data type=utf16le string=\\SystemRoot\\System32\\smss.exe": 1,
                "section=.data type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\": 1,
                "section=.data type=utf16le string=Hardware Profiles\\Current\\System\\CurrentControlSet\\": 1,
                "section=.data type=utf16le string=Control\\Class\\": 1,
                "section=.data type=utf16le string=Enum\\": 1,
                "section=.data type=utf16le string=Device Parameters": 1,
                "section=.data type=utf8 \u1440r2 blocks=Basic Latin,Unified Canadian Aboriginal Syllabics": 1,
                "section=.data type=utf32le string= @\u0180\u0100 blocks=Basic Latin,Latin Extended-B,Latin Extended-A": 1,
                "section=.data type=utf16le string=\\b\\b\uf5e8\u8097\\?? blocks=Basic Latin,Private Use Area,CJK Unified Ideographs": 1,
                "section=.data type=utf16le string=\\??\\": 1,
                "section=.data type=utf32le string=cccc": 1,
                "section=.data type=utf8 string=L\u96c0x~ blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.data type=utf8 string=\\vLW)": 1,
                "section=.data type=utf8 string=)#_ck": 1,
                "section=.data type=utf8 string=xD\u0778= blocks=Basic Latin,Arabic Supplement": 1,
                "section=.data type=utf8 \\nD\u0778= blocks=Basic Latin,Arabic Supplement": 1,
                "section=.rdata type=utf16le string=select": 1,
                "section=.rdata type=utf16le string=AutoSelect": 1,
                "section=.rdata type=utf16le string=Current": 2,
                "section=.rdata type=utf16le string=ImagePath": 2,
                "section=.rdata type=utf16le string=System32\\Drivers\\": 1,
                "section=.rdata type=utf16le string=.sys": 2,
                "section=.rdata type=utf16le string=ErrorControl": 1,
                "section=.rdata type=utf16le string=group": 1,
                "section=.rdata type=utf16le string=Start": 2,
                "section=.rdata type=utf16le string=Control": 5,
                "section=.rdata type=utf16le string=ServiceGroupOrder": 1,
                "section=.rdata type=utf16le string=list": 1,
                "section=.rdata type=utf16le string=Group": 2,
                "section=.rdata type=utf16le string=Services": 1,
                "section=.rdata type=utf16le string=GroupOrderList": 1,
                "section=.rdata type=utf16le string=SafeBoot": 1,
                "section=.rdata type=utf16le string=Minimal": 1,
                "section=.rdata type=utf16le string=Network": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Services\\": 3,
                "section=.rdata type=utf16le string=Component Information": 2,
                "section=.rdata type=utf16le string=Identifier": 3,
                "section=.rdata type=utf16le string=Configuration Data": 3,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\Hardware\\DeviceMap": 2,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\Hardware\\Description": 1,
                "section=.rdata type=utf16le string=current": 1,
                "section=.rdata type=utf16le string=control": 1,
                "section=.rdata type=utf16le string=Session Manager": 1,
                "section=.rdata type=utf16le string=ProtectionMode": 1,
                "section=.rdata type=utf16le string=ObjectSecurityMode": 1,
                "section=.rdata type=utf16le string=LUIDDeviceMapsDisabled": 1,
                "section=.rdata type=utf16le string=AuditBaseDirectories": 1,
                "section=.rdata type=utf16le string=AuditBaseObjects": 1,
                "section=.rdata type=utf16le string=LSA\\audit": 1,
                "section=.rdata type=utf16le string=ProcessAccessesToAudit": 1,
                "section=.rdata type=utf16le string=TimeZoneInformation": 2,
                "section=.rdata type=utf16le string=ActiveTimeBias": 1,
                "section=.rdata type=utf16le string=Bias": 2,
                "section=.rdata type=utf16le string=RealTimeIsUniversal": 1,
                "section=.rdata type=utf16le string=GlobalFlag": 1,
                "section=.rdata type=utf16le string=Session Manager\\Memory Management": 1,
                "section=.rdata type=utf16le string=PagedPoolQuota": 1,
                "section=.rdata type=utf16le string=NonPagedPoolQuota": 1,
                "section=.rdata type=utf16le string=PagingFileQuota": 1,
                "section=.rdata type=utf16le string=AllocationPreference": 1,
                "section=.rdata type=utf16le string=DynamicMemory": 1,
                "section=.rdata type=utf16le string=Mirroring": 1,
                "section=.rdata type=utf16le string=SystemViewSize": 1,
                "section=.rdata type=utf16le string=SessionImageSize": 1,
                "section=.rdata type=utf16le string=SessionPoolSize": 1,
                "section=.rdata type=utf16le string=PoolUsageMaximum": 1,
                "section=.rdata type=utf16le string=MapAllocationFragment": 1,
                "section=.rdata type=utf16le string=PagedPoolSize": 1,
                "section=.rdata type=utf16le string=NonPagedPoolSize": 1,
                "section=.rdata type=utf16le string=NonPagedPoolMaximumPercent": 1,
                "section=.rdata type=utf16le string=LargeSystemCache": 1,
                "section=.rdata type=utf16le string=LargeStackSize": 1,
                "section=.rdata type=utf16le string=SystemPages": 1,
                "section=.rdata type=utf16le string=LowMemoryThreshold": 1,
                "section=.rdata type=utf16le string=HighMemoryThreshold": 1,
                "section=.rdata type=utf16le string=DisablePagingExecutive": 1,
                "section=.rdata type=utf16le string=ModifiedPageLife": 1,
                "section=.rdata type=utf16le string=SecondLevelDataCache": 1,
                "section=.rdata type=utf16le string=ClearPageFileAtShutdown": 1,
                "section=.rdata type=utf16le string=PoolTagSmallTableSize": 1,
                "section=.rdata type=utf16le string=PoolTagBigTableSize": 1,
                "section=.rdata type=utf16le string=PoolTag": 1,
                "section=.rdata type=utf16le string=PoolTagOverruns": 1,
                "section=.rdata type=utf16le string=SnapUnloads": 1,
                "section=.rdata type=utf16le string=ProtectNonPagedPool": 1,
                "section=.rdata type=utf16le string=TrackLockedPages": 1,
                "section=.rdata type=utf16le string=TrackPtes": 1,
                "section=.rdata type=utf16le string=VerifyDrivers": 1,
                "section=.rdata type=utf16le string=VerifyDriverLevel": 1,
                "section=.rdata type=utf16le string=VerifyMode": 1,
                "section=.rdata type=utf16le string=LargePageMinimum": 1,
                "section=.rdata type=utf16le string=EnforceWriteProtection": 1,
                "section=.rdata type=utf16le string=MakeLowMemory": 1,
                "section=.rdata type=utf16le string=WriteWatch": 1,
                "section=.rdata type=utf16le string=MinimumStackCommitInBytes": 1,
                "section=.rdata type=utf16le string=Session Manager\\Executive": 1,
                "section=.rdata type=utf16le string=AdditionalCriticalWorkerThreads": 1,
                "section=.rdata type=utf16le string=AdditionalDelayedWorkerThreads": 1,
                "section=.rdata type=utf16le string=PriorityQuantumMatrix": 1,
                "section=.rdata type=utf16le string=Session Manager\\Kernel": 1,
                "section=.rdata type=utf16le string=DpcQueueDepth": 1,
                "section=.rdata type=utf16le string=MinimumDpcRate": 1,
                "section=.rdata type=utf16le string=AdjustDpcThreshold": 1,
                "section=.rdata type=utf16le string=IdealDpcRate": 1,
                "section=.rdata type=utf16le string=Session Manager\\I/O System": 1,
                "section=.rdata type=utf16le string=CountOperations": 1,
                "section=.rdata type=utf16le string=LargeIrpStackLocations": 1,
                "section=.rdata type=utf16le string=IoVerifierLevel": 1,
                "section=.rdata type=utf16le string=ResourceTimeoutCount": 1,
                "section=.rdata type=utf16le string=CriticalSectionTimeout": 1,
                "section=.rdata type=utf16le string=HeapSegmentReserve": 1,
                "section=.rdata type=utf16le string=HeapSegmentCommit": 1,
                "section=.rdata type=utf16le string=HeapDeCommitTotalFreeThreshold": 1,
                "section=.rdata type=utf16le string=HeapDeCommitFreeBlockThreshold": 1,
                "section=.rdata type=utf16le string=ProductOptions": 1,
                "section=.rdata type=utf16le string=ProductType": 1,
                "section=.rdata type=utf16le string=Terminal Server": 1,
                "section=.rdata type=utf16le string=TSEnabled": 1,
                "section=.rdata type=utf16le string=TSAppCompat": 1,
                "section=.rdata type=utf16le string=ProductSuite": 1,
                "section=.rdata type=utf16le string=Windows": 1,
                "section=.rdata type=utf16le string=CSDVersion": 1,
                "section=.rdata type=utf16le string=Nls\\Language": 1,
                "section=.rdata type=utf16le string=Default": 2,
                "section=.rdata type=utf16le string=InstallLanguage": 1,
                "section=.rdata type=utf16le string=RegistrySizeLimit": 1,
                "section=.rdata type=utf16le string=ForceNpxEmulation": 1,
                "section=.rdata type=utf16le string=PowerPolicySimulate": 1,
                "section=.rdata type=utf16le string=MaxTimeSeparationBeforeCorrect": 1,
                "section=.rdata type=utf16le string=ShutdownTime": 1,
                "section=.rdata type=utf16le string=PriorityControl": 1,
                "section=.rdata type=utf16le string=Win32PrioritySeparation": 1,
                "section=.rdata type=utf16le string=EnableTimerWatchdog": 1,
                "section=.rdata type=utf16le string=Debugger Retries": 1,
                "section=.rdata type=utf16le string=Session Manager\\Debug Print Filter": 1,
                "section=.rdata type=utf16le string=WIN2000": 1,
                "section=.rdata type=utf16le string=MaxEventSize": 1,
                "section=.rdata type=utf16le string=WMI\\Trace": 1,
                "section=.rdata type=utf16le string=UsePerformanceClock": 1,
                "section=.rdata type=utf16le string=TraceAlignment": 1,
                "section=.rdata type=utf16le string=System": 2,
                "section=.rdata type=utf16le string=CentralProcessor": 3,
                "section=.rdata type=utf16le string=FloatingPointProcessor": 2,
                "section=.rdata type=utf16le string=PrimaryICache": 2,
                "section=.rdata type=utf16le string=PrimaryDCache": 2,
                "section=.rdata type=utf16le string=SecondaryICache": 2,
                "section=.rdata type=utf16le string=SecondaryDCache": 2,
                "section=.rdata type=utf16le string=SecondaryCache": 2,
                "section=.rdata type=utf16le string=EisaAdapter": 2,
                "section=.rdata type=utf16le string=TcAdapter": 2,
                "section=.rdata type=utf16le string=ScsiAdapter": 2,
                "section=.rdata type=utf16le string=DtiAdapter": 2,
                "section=.rdata type=utf16le string=MultifunctionAdapter": 1,
                "section=.rdata type=utf16le string=DiskController": 2,
                "section=.rdata type=utf16le string=TapeController": 2,
                "section=.rdata type=utf16le string=CdRomController": 2,
                "section=.rdata type=utf16le string=WormController": 2,
                "section=.rdata type=utf16le string=SerialController": 3,
                "section=.rdata type=utf16le string=NetworkController": 2,
                "section=.rdata type=utf16le string=DisplayController": 2,
                "section=.rdata type=utf16le string=ParallelController": 3,
                "section=.rdata type=utf16le string=PointerController": 3,
                "section=.rdata type=utf16le string=KeyboardController": 3,
                "section=.rdata type=utf16le string=AudioController": 2,
                "section=.rdata type=utf16le string=OtherController": 2,
                "section=.rdata type=utf16le string=DiskPeripheral": 2,
                "section=.rdata type=utf16le string=FloppyDiskPeripheral": 3,
                "section=.rdata type=utf16le string=TapePeripheral": 2,
                "section=.rdata type=utf16le string=ModemPeripheral": 2,
                "section=.rdata type=utf16le string=MonitorPeripheral": 2,
                "section=.rdata type=utf16le string=PrinterPeripheral": 2,
                "section=.rdata type=utf16le string=PointerPeripheral": 2,
                "section=.rdata type=utf16le string=KeyboardPeripheral": 2,
                "section=.rdata type=utf16le string=TerminalPeripheral": 2,
                "section=.rdata type=utf16le string=OtherPeripheral": 2,
                "section=.rdata type=utf16le string=LinePeripheral": 2,
                "section=.rdata type=utf16le string=NetworkPeripheral": 2,
                "section=.rdata type=utf16le string=SystemMemory": 2,
                "section=.rdata type=utf16le string=DockingInformation": 2,
                "section=.rdata type=utf16le string=RealModeIrqRoutingTable": 2,
                "section=.rdata type=utf16le string=RealModePCIEnumeration": 2,
                "section=.rdata type=utf16le string=Undefined": 2,
                "section=.rdata type=utf16le string=Processor": 1,
                "section=.rdata type=utf16le string=Cache": 1,
                "section=.rdata type=utf16le string=Adapter": 2,
                "section=.rdata type=utf16le string=Controller": 2,
                "section=.rdata type=utf16le string=Peripheral": 1,
                "section=.rdata type=utf16le string=MemoryClass": 1,
                "section=.rdata type=utf16le string=SymbolicLinkValue": 1,
                "section=.rdata type=utf16le string=HARDWARE": 1,
                "section=.rdata type=utf16le string=MACHINE\\": 1,
                "section=.rdata type=utf16le string=SECURITY": 1,
                "section=.rdata type=utf16le string=SOFTWARE": 1,
                "section=.rdata type=utf16le string=SYSTEM": 2,
                "section=.rdata type=utf16le string=DEFAULT": 1,
                "section=.rdata type=utf16le string=USER\\.DEFAULT": 1,
                "section=.rdata type=utf16le string=\\REGISTRY\\": 2,
                "section=.rdata type=utf16le string=\\REGISTRY\\MACHINE\\SYSTEM\\CurrentControlSet\\Control\\hivelist": 1,
                "section=.rdata type=utf16le string=.log": 1,
                "section=.rdata type=utf16le string=.LOG": 1,
                "section=.rdata type=utf16le string=\\REGISTRY\\MACHINE\\SYSTEM\\CurrentControlSet\\Control": 1,
                "section=.rdata type=utf16le string=SystemStartOptions": 1,
                "section=.rdata type=utf16le string=SystemBootDevice": 1,
                "section=.rdata type=utf16le string=Control\\IDConfigDB": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\Select": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\ControlSet001": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet": 2,
                "section=.rdata type=utf16le string=CurrentConfig": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Hardware Profiles": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Hardware Profiles\\Current": 1,
                "section=.rdata type=utf16le string=\\SystemRoot\\System32\\Config\\SYSTEM": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\SYSTEM": 2,
                "section=.rdata type=utf16le string=REGISTRY": 1,
                "section=.rdata type=utf16le string=\\REGISTRY": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\HARDWARE": 1,
                "section=.rdata type=utf16le string=InstallPath": 1,
                "section=.rdata type=utf16le string=\\SystemRoot": 2,
                "section=.rdata type=utf16le string=\\System32\\Config\\": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\SAM\\SAM": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\Security\\SAM": 1,
                "section=.rdata type=utf16le string=\\Registry\\User\\.Default": 2,
                "section=.rdata type=utf16le string=\\Registry\\User\\S-1-5-18": 1,
                "section=.rdata type=utf16le string=\\REGISTRY\\MACHINE": 1,
                "section=.rdata type=utf16le string=\\REGISTRY\\USER": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System": 1,
                "section=.rdata type=utf16le string=\\REGISTRY\\MACHINE\\SOFTWARE": 1,
                "section=.rdata type=utf16le string=Microsoft": 1,
                "section=.rdata type=utf16le string=Windows NT": 1,
                "section=.rdata type=utf16le string=CurrentVersion": 1,
                "section=.rdata type=utf16le string=CurrentType": 1,
                "section=.rdata type=utf16le string=Multiprocessor": 1,
                "section=.rdata type=utf16le string=ecked": 1,
                "section=.rdata type=utf16le string=DebugObject": 1,
                "section=.rdata type=utf16le string=\\SystemRoot\\System32\\ntdll.dll": 1,
                "section=.rdata type=utf16le string=ntdll.dll": 1,
                "section=.rdata type=utf16le \\Callback": 1,
                "section=.rdata type=utf16le string=Callback": 1,
                "section=.rdata type=utf16le string=\\Callback\\SetSystemTime": 1,
                "section=.rdata type=utf16le string=\\Callback\\SetSystemState": 1,
                "section=.rdata type=utf16le string=\\Callback\\PowerState": 1,
                "section=.rdata type=utf16le string=Event": 1,
                "section=.rdata type=utf16le string=EventPair": 1,
                "section=.rdata type=utf16le string=\\ArcName": 2,
                "section=.rdata type=utf16le string=\\Device": 1,
                "section=.rdata type=utf16le string=INIT: Unable to allocate Process Parameters. 0x%lx": 1,
                "section=.rdata type=utf16le string=INIT: Unable to allocate Process Environment. 0x%lx": 1,
                "section=.rdata type=utf16le string=\\System32": 1,
                "section=.rdata type=utf16le string=Path=": 1,
                "section=.rdata type=utf16le string=SystemDrive=": 1,
                "section=.rdata type=utf16le string=SystemRoot=": 1,
                "section=.rdata type=utf16le string=INIT: Unable to create Session Manager. 0x%lx": 1,
                "section=.rdata type=utf16le string=INIT: Unable to resume Session Manager. 0x%lx": 1,
                "section=.rdata type=utf16le string=\\REGISTRY\\MACHINE\\SYSTEM\\CURRENTCONTROLSET\\CONTROL\\SAFEBOOT": 1,
                "section=.rdata type=utf16le string=AlternateShell": 1,
                "section=.rdata type=utf16le string=Option": 1,
                "section=.rdata type=utf16le string=OptionValue": 1,
                "section=.rdata type=utf16le string=UseAlternateShell": 1,
                "section=.rdata type=utf16le string=\\REGISTRY\\MACHINE\\SYSTEM\\CURRENTCONTROLSET\\CONTROL": 1,
                "section=.rdata type=utf16le string=MiniNT": 1,
                "section=.rdata type=utf16le string=KeyedEvent": 1,
                "section=.rdata type=utf16le string=\\KernelObjects\\CritSecOutOfMemoryEvent": 1,
                "section=.rdata type=utf16le string=Control Panel\\International": 1,
                "section=.rdata type=utf16le string=Control Panel\\Desktop": 1,
                "section=.rdata type=utf16le string=%04lX": 1,
                "section=.rdata type=utf16le string=Locale": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Control\\Nls\\Language": 1,
                "section=.rdata type=utf16le string=%08lx": 1,
                "section=.rdata type=utf16le string=%04lx": 1,
                "section=.rdata type=utf16le string=MultiUILanguageId": 1,
                "section=.rdata type=utf16le string=MUILanguagePending": 1,
                "section=.rdata type=utf16le string=Mutant": 1,
                "section=.rdata type=utf16le string=Profile": 1,
                "section=.rdata type=utf16le string=Semaphore": 1,
                "section=.rdata type=utf16le string=\\SystemRoot\\System32\\win32k.sys": 1,
                "section=.rdata type=utf16le string=>@\ud478\u8098\u927a\u8084 blocks=Basic Latin,Hangul Syllables,CJK Unified Ideographs": 1,
                "section=.rdata type=utf16le string=Timer": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\Software\\Microsoft\\Rpc": 1,
                "section=.rdata type=utf16le string=UuidSequenceNumber": 1,
                "section=.rdata type=utf16le string=WindowStation": 1,
                "section=.rdata type=utf16le string=Desktop": 1,
                "section=.rdata type=utf16le string=\\??\\%C:": 1,
                "section=.rdata type=utf16le string=multi(0)disk(0)rdisk(": 1,
                "section=.rdata type=utf16le string=rcName\\multi(0)disk(0)rdisk(%lu)": 1,
                "section=.rdata type=utf16le string=\\Device\\Harddisk": 1,
                "section=.rdata type=utf16le string=\\Partition0": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\SYSTEM\\MountedDevices": 1,
                "section=.rdata type=utf16le string=\\Device\\Harddisk%lu\\Partition0": 1,
                "section=.rdata type=utf16le string=\\??\\PhysicalDrive%lu": 1,
                "section=.rdata type=utf16le string=\\Device\\Harddisk%lu\\Partition%lu": 1,
                "section=.rdata type=utf16le string=\\Device\\Harddisk%lu\\Partition1": 1,
                "section=.rdata type=utf16le string=\\Device\\Floppy%lu": 1,
                "section=.rdata type=utf16le string=\\Device\\CdRom%lu": 1,
                "section=.rdata type=utf16le string=\\DosDevices\\%C:": 1,
                "section=.rdata type=utf16le string=ntoskrnl.exe": 2,
                "section=.rdata type=utf16le string=ntkrnlmp.exe": 1,
                "section=.rdata type=utf16le string=\\SystemRoot\\rosboot.log": 1,
                "section=.rdata type=utf16le string=Loaded driver": 1,
                "section=.rdata type=utf16le string=Did not load driver": 1,
                "section=.rdata type=utf16le string=%ws %wZ": 1,
                "section=.rdata type=utf16le string=BootLog": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\BootLog": 1,
                "section=.rdata type=utf16le string=\\Device\\%08lx": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Control\\DeviceClasses\\": 1,
                "section=.rdata type=utf16le string=Device Parameters": 1,
                "section=.rdata type=utf16le string=SymbolicLink": 2,
                "section=.rdata type=utf16le \\Registry\\Machine\\": 1,
                "section=.rdata type=utf16le string=System\\CurrentControlSet\\Control\\DeviceClasses": 1,
                "section=.rdata type=utf16le string=Linked": 1,
                "section=.rdata type=utf16le string=DeviceInstance": 1,
                "section=.rdata type=utf16le string=##?#": 1,
                "section=.rdata type=utf16le string=\\??\\": 2,
                "section=.rdata type=utf16le string=\\FileSystem\\": 1,
                "section=.rdata type=utf16le string=\\Driver\\": 1,
                "section=.rdata type=utf16le string=.SYS": 1,
                "section=.rdata type=utf16le string=\\SystemRoot\\system32\\drivers\\": 1,
                "section=.rdata type=utf16le string=\\SystemRoot\\": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\SYSTEM\\CurrentControlSet\\Services": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Enum": 5,
                "section=.rdata type=utf16le string=LowerFilters": 1,
                "section=.rdata type=utf16le string=UpperFilters": 1,
                "section=.rdata type=utf16le string=ClassGUID": 3,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Control\\Class": 2,
                "section=.rdata type=utf16le string=\\Driver\\%08u": 1,
                "section=.rdata type=utf16le string=Type": 2,
                "section=.rdata type=utf16le string=\\REGISTRY\\MACHINE\\HARDWARE\\DESCRIPTION\\SYSTEM": 2,
                "section=.rdata type=utf16le string=\\ErrorLogPort": 1,
                "section=.rdata type=utf16le string=Application Popup": 1,
                "section=.rdata type=utf16le string=File": 3,
                "section=.rdata type=utf16le string=Floppy": 1,
                "section=.rdata type=utf16le string=Harddisk": 1,
                "section=.rdata type=utf16le string=Device": 1,
                "section=.rdata type=utf16le string=Driver": 2,
                "section=.rdata type=utf16le string=IoCompletion": 1,
                "section=.rdata type=utf16le string=\\Driver": 1,
                "section=.rdata type=utf16le string=\\FileSystem": 1,
                "section=.rdata type=utf16le string=\\FileSystem\\Filters": 1,
                "section=.rdata type=utf16le string=ltifunctionAdapter": 1,
                "section=.rdata type=utf16le string=Setup": 2,
                "section=.rdata type=utf16le string=SystemPartition": 2,
                "section=.rdata type=utf16le string=OsLoaderPath": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\HARDWARE\\RESOURCEMAP": 2,
                "section=.rdata type=utf16le string=Hardware Abstraction Layer": 1,
                "section=.rdata type=utf16le string=.Raw": 2,
                "section=.rdata type=utf16le string=.Translated": 2,
                "section=.rdata type=utf16le string=\\Device\\Ramdisk": 1,
                "section=.rdata type=utf16le string=\\Device\\Ramdisk%wZ": 1,
                "section=.rdata type=utf16le string=\\ArcName\\ramdisk(0)": 1,
                "section=.rdata type=utf8 string=\u21c0/\u31c0/\u31c0/\u31c0 blocks=Arrows,Basic Latin,CJK Strokes": 2,
                "section=.rdata type=utf8 string=\u21c0/\u31c0/\u31c0/\u31c0/\u31c0/\u31c0/\u31c0/\u31c0 blocks=Arrows,Basic Latin,CJK Strokes": 2,
                "section=.rdata type=utf8 string=\u21c0/\u31c0/\u31c0/\u31c0\\b\u31c0/\u31c0/\u31c0/\u31c0 blocks=Arrows,Basic Latin,CJK Strokes": 1,
                "section=.rdata type=utf8 string=\uf1c0V\uf1c0V\uf1c0m\uf1c0 blocks=Private Use Area,Basic Latin": 1,
                "section=.rdata type=utf8 string=\uf1c0?\uf1c0V\uf1c0 blocks=Private Use Area,Basic Latin": 1,
                "section=.rdata type=utf16le string=Device\\RawDisk": 1,
                "section=.rdata type=utf16le string=\\Device\\RawCdRom": 1,
                "section=.rdata type=utf16le string=\\Device\\RawTape": 1,
                "section=.rdata type=utf16le string=\\REGISTRY\\MACHINE\\SYSTEM": 1,
                "section=.rdata type=utf16le string=\\Device\\MountPointManager": 1,
                "section=.rdata type=utf16le string=HTREE\\ROOT\\0": 2,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Control\\ServiceGroupOrder": 1,
                "section=.rdata type=utf16le string=List": 1,
                "section=.rdata type=utf16le string=Properties": 1,
                "section=.rdata type=utf16le string=\\REGISTRY\\MACHINE\\SYSTEM\\CURRENTCONTROLSET": 1,
                "section=.rdata type=utf16le string=\\Driver\\PnpManager": 1,
                "section=.rdata type=utf16le string=DeviceClasses": 1,
                "section=.rdata type=utf16le string=Enum": 1,
                "section=.rdata type=utf16le string=Root": 3,
                "section=.rdata type=utf16le string=\\REGISTRY\\MACHINE\\SYSTEM\\CURRENTCONTROLSET\\ENUM": 2,
                "section=.rdata type=utf16le string=HardwareID": 2,
                "section=.rdata type=utf16le string=CompatibleIDs": 2,
                "section=.rdata type=utf16le string=BootConfig": 2,
                "section=.rdata type=utf16le string=LogConf": 2,
                "section=.rdata type=utf16le string=*PNP0501": 1,
                "section=.rdata type=utf16le string=*PNP0303": 1,
                "section=.rdata type=utf16le string=*PNP0F13": 1,
                "section=.rdata type=utf16le string=*PNP0400": 1,
                "section=.rdata type=utf16le string=*PNP0700": 1,
                "section=.rdata type=utf16le string=%04lu": 2,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\SYSTEM\\CurrentControlSet\\Enum": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\HARDWARE\\DESCRIPTION\\System\\MultifunctionAdapter": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\SYSTEM\\CURRENTCONTROLSET\\Control\\Pnp": 1,
                "section=.rdata type=utf16le string=DisableFirmwareMapper": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Enum\\": 1,
                "section=.rdata type=utf16le string=ParentIdPrefix": 1,
                "section=.rdata type=utf16le string=%lx&%lx": 1,
                "section=.rdata type=utf16le string=LEGACY_": 2,
                "section=.rdata type=utf16le string=UNKNOWN": 1,
                "section=.rdata type=utf16le string=Service": 1,
                "section=.rdata type=utf16le string=Legacy": 1,
                "section=.rdata type=utf16le string=Class": 1,
                "section=.rdata type=utf16le string=LegacyDriver": 1,
                "section=.rdata type=utf16le string={8ECC055D-047F-11D1-A537-0000F8753ED1}": 1,
                "section=.rdata type=utf16le string=DeviceDesc": 2,
                "section=.rdata type=utf16le string=Capabilities": 1,
                "section=.rdata type=utf16le string=UINumber": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Control\\CriticalDeviceDatabase": 1,
                "section=.rdata type=utf16le string=BasicConfigVector": 2,
                "section=.rdata type=utf16le string=ConfigFlags": 1,
                "section=.rdata type=utf16le string=Unknown device": 1,
                "section=.rdata type=utf16le string=LocationInformation": 1,
                "section=.rdata type=utf16le string=FriendlyName": 1,
                "section=.rdata type=utf16le string=ActiveService": 1,
                "section=.rdata type=utf16le string=Internal": 1,
                "section=.rdata type=utf16le string=Eisa": 1,
                "section=.rdata type=utf16le string=MicroChannel": 1,
                "section=.rdata type=utf16le string=TurboChannel": 1,
                "section=.rdata type=utf16le string=PCIBus": 1,
                "section=.rdata type=utf16le string=VMEBus": 1,
                "section=.rdata type=utf16le string=NuBus": 1,
                "section=.rdata type=utf16le string=PCMCIABus": 1,
                "section=.rdata type=utf16le string=CBus": 1,
                "section=.rdata type=utf16le string=MPIBus": 1,
                "section=.rdata type=utf16le string=MPSABus": 1,
                "section=.rdata type=utf16le string=ProcessorInternal": 1,
                "section=.rdata type=utf16le string=PNPISABus": 1,
                "section=.rdata type=utf16le string=PNPBus": 1,
                "section=.rdata type=utf16le string=Vmcs": 1,
                "section=.rdata type=utf16le string=DETECTED%ls\\%wZ": 1,
                "section=.rdata type=utf16le string=DETECTED\\%wZ": 1,
                "section=.rdata type=utf16le string=PnpManager": 1,
                "section=.rdata type=utf16le string=PnP Manager": 1,
                "section=.rdata type=utf8 string=\u3200\\\u32006\ua200 blocks=Enclosed CJK Letters and Months,Basic Latin,Yi Syllables": 1,
                "section=.rdata type=utf8 string=\u6200<\u92006\ua200*\u8200(%s:%d) IopInitiatePnpIrp(IRP_MN_FILTER_RESOURCE_REQUIREMENTS) failed\\n blocks=CJK Unified Ideographs,Basic Latin,Yi Syllables": 1,
                "section=.rdata type=utf16le string=AllocConfig": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Enum\\Root": 1,
                "section=.rdata type=utf16le string=%s\\%s": 1,
                "section=.rdata type=utf16le string=%s\\%wZ": 1,
                "section=.rdata type=utf16le string=NextInstance": 1,
                "section=.rdata type=utf16le string=**\u2e2e\u2e2f\u2f2e\u746e\u736f\u726b\u6c6e\u6b2f\u2f65\u7562 blocks=Basic Latin,Supplemental Punctuation,Kangxi Radicals,CJK Unified Ideographs": 1,
                "section=.rdata type=utf16le Port": 1,
                "section=.rdata type=utf16le string=WaitablePort": 2,
                "section=.rdata type=utf16le string=\\KernelObjects\\LowMemoryCondition": 1,
                "section=.rdata type=utf16le string=\\KernelObjects\\HighMemoryCondition": 1,
                "section=.rdata type=utf16le string=\\KernelObjects\\LowPagedPoolCondition": 1,
                "section=.rdata type=utf16le string=\\KernelObjects\\HighPagedPoolCondition": 1,
                "section=.rdata type=utf16le string=\\KernelObjects\\LowNonPagedPoolCondition": 1,
                "section=.rdata type=utf16le string=\\KernelObjects\\HighNonPagedPoolCondition": 1,
                "section=.rdata type=utf16le string=hal.dll": 1,
                "section=.rdata type=utf16le string=drivers\\": 1,
                "section=.rdata type=utf16le string=\\Device\\PhysicalMemory": 3,
                "section=.rdata type=utf16le string=Section": 1,
                "section=.rdata type=utf32le string=@@\ud840\udc05\ud840\udc02\ud840\udc08\udb80\udc1f blocks=Basic Latin,CJK Unified Ideographs Extension B,Supplementary Private Use Area-A": 1,
                "section=.rdata type=utf32le string=  @@\\b\\b\\b\\b": 1,
                "section=.rdata type=utf16le string=Directory": 1,
                "section=.rdata type=utf16le string=ernelObjects": 1,
                "section=.rdata type=utf16le string=\\ObjectTypes": 1,
                "section=.rdata type=utf8 string=\u1400l\u1400l\u1400l\u1400 blocks=Unified Canadian Aboriginal Syllabics,Basic Latin": 1,
                "section=.rdata type=utf8 string=\u1400e\u1400NTDDK: Pageable code called at IRQL > APC_LEVEL (%d)\\n blocks=Unified Canadian Aboriginal Syllabics,Basic Latin": 1,
                "section=.rdata type=utf16le string=\\GLOBAL??": 1,
                "section=.rdata type=utf16le string=GLOBALROOT": 1,
                "section=.rdata type=utf16le string=Global": 1,
                "section=.rdata type=utf16le string=\\DosDevices": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\Software\\Policies\\Microsoft\\Windows NT": 1,
                "section=.rdata type=utf16le string=DontPowerOffAfterShutdown": 1,
                "section=.rdata type=utf16le \\Registry": 1,
                "section=.rdata type=utf16le string=Process": 1,
                "section=.rdata type=utf16le string=Thread": 1,
                "section=.rdata type=utf16le string=\\SystemRoot\\system32\\ntdll.dll": 1,
                "section=.rdata type=utf16le string=\\Security": 1,
                "section=.rdata type=utf16le string=LSA_AUTHENTICATION_INITIALIZED": 1,
                "section=.rdata type=utf16le string=Token": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Memory Management": 1,
                "section=.rdata type=utf16le string=PhysicalAddressExtension": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\Hardware\\Description\\System": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\SYSTEM\\CurrentControlSet\\Control\\BIOSINFO": 1,
                "section=.rdata type=utf16le string=ProcessorNameString": 1,
                "section=.rdata type=utf16le string=VendorIdentifier": 1,
                "section=.rdata type=utf16le string=FeatureSet": 1,
                "section=.rdata type=utf16le string=~MHz": 1,
                "section=.rdata type=utf16le string=Update Signature": 1,
                "section=.rdata type=utf16le string=SystemBiosDate": 1,
                "section=.rdata type=utf16le string=SystemBiosVersion": 1,
                "section=.rdata type=utf16le string=VideoBiosDate": 1,
                "section=.rdata type=utf16le string=VideoBiosVersion": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Control\\Wow": 1,
                "section=.rdata type=utf16le string=DisableVme": 1,
                "section=.rdata type=utf16le string=xrw\u7772 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.rdata type=utf16le string=\\SystemRoot\\system32\\drivers\\etc\\KDBinit": 1,
                "section=.rdata type=utf8 string= \u06c0$\u06c0(\u06c0,\u06c00\u06c04\u06c0 blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=@\u06c0D\u06c0H\u06c0 VME blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=\u16c0\\a\u16c0\\f\u16c0 blocks=Runic,Basic Latin": 1,
                "section=.rdata type=utf16le string=* \u8281\u8483\u8685\u8887\u8a89 blocks=Basic Latin,CJK Unified Ideographs": 2,
                "section=.rdata type=utf16le string=#%lu": 1,
                "section=.rdata type=utf16le string=S-1-": 1,
                "section=.rdata type=utf16le x%02hx%02hx%02hx%02hx%02hx%02hx": 1,
                "section=.rdata type=utf16le string={%08lx-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x}": 1,
                "section=.rdata type=utf16le string=\\r\\n\\t \u3000 blocks=Basic Latin,CJK Symbols and Punctuation": 1,
                "section=.rdata type=utf16le string=\\r\\n\\t": 1,
                "section=.rdata type=utf16le string=\\REGISTRY\\USER\\": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Services": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\System\\CurrentControlSet\\Control": 1,
                "section=.rdata type=utf16le string=\\Registry\\Machine\\Software\\Microsoft\\Windows NT\\CurrentVersion": 1,
                "section=.rdata type=utf16le string=System Volume Information": 1,
                "section=.rdata type=utf16le string=\\SystemRoot\\bootstat.dat": 1,
                "section=.rdata type=utf8 string=\\n\u95804\u8580H\u8580T\u8580n\u8580n\u8580n\u8580n\u8580n\u8580n\u8580^\u8580(%s:%d) Error during call to LdrProcessRelocationBlockLongLong()!\\n blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.rdata type=utf16le string=%u.%u.%u.%u": 1,
                "section=.rdata type=utf32le string=WW\u0532\u1770 blocks=Basic Latin,Armenian,Tagbanwa": 1,
                "section=.rdata type=utf32le string=\\e\u00ea\\b\u01e7\u01e7WW blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "section=.rdata type=utf32le string=WWW\u011a blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf32le :;<=>?@ABCDEFGHX": 1,
                "section=.rdata type=utf32le string=WWWWWWWWWWWW": 1,
                "section=.rdata type=utf32le string=@@3;;;;\u045a\u023d\u023e\u023f\u0240\u0242|V\u0243m\u03f1\u03f8\u0244\u03ed\u045e blocks=Basic Latin,Cyrillic,Latin Extended-B,Greek and Coptic": 1,
                "section=.rdata type=utf32le string=D4@@@D;;;;;;;22": 1,
                "section=.rdata type=utf16le string=StandardName": 1,
                "section=.rdata type=utf16le string=StandardBias": 1,
                "section=.rdata type=utf16le string=StandardStart": 1,
                "section=.rdata type=utf16le string=DaylightName": 1,
                "section=.rdata type=utf16le string=DaylightBias": 1,
                "section=.rdata type=utf16le string=DaylightStart": 1,
                "section=.rdata type=utf16le string=\\WindowsSS": 1,
                "section=.rdata type=utf16le string=csrss": 1,
                "section=.rdata type=utf8 string=(kdz": 1,
                "section=.rdata type=utf8 string=!#\u0133V blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf8 string=|\u04cceL blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string=\u04b1t9G blocks=Cyrillic,Basic Latin": 1,
                "section=.rdata type=utf8 string=+\u04c9Zz blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string=c\uc723ju\\n blocks=Basic Latin,Hangul Syllables": 1,
                "section=.rdata type=utf8 string=wn>Jj\u046e blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf16le string=         h((((                  H": 1,
                "section=.rdata type=utf16le string=                                 H": 1,
                "section=.rdata type=utf16le string=         (((((                  H": 1,
                "section=.rdata type=utf16le abcdef0x": 2,
                "section=.rdata type=utf16le ABCDEF0X": 2,
                "section=.rdata type=utf16le string=#QNAN": 1,
                "section=.rdata type=utf16le string=#INF": 1,
                "section=.rdata type=utf16le string=\\a\\b\\t\\n\\v\\f\\r": 1,
                "section=.rdata type=utf16le string= !\"#$%&'()%*+,-./012": 1,
                "section=.rdata type=utf16le :;": 1,
                "section=.rdata type=utf16le string=<(((((((((((((((((((((((((((((((((": 1,
                "section=.rdata type=utf16le string==>?@A\u2042\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u68e2\u2892\u2882\u2892\u28a2\u2082\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u2082\u2082\u2082\u4892\u10a2\u10b2\u10b2\u1052\u1052\u1052\u10b2\u10b2\u10b2\u10b2\u10b2\u1042\u1072\u1042\u1072\u8472\u8432\u8432\u8432\u8432\u8432\u8432\u8432\u8432\u8432\u1032\u1072\u10b2\u10b2\u10b2\u10b2\u10b2\u81b2\u8113\u8113\u8113\u8113\u8113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u1013\u10b2\u10b2\u10b2\u10b2\u10b2\u82b2\u8213\u8213\u8213\u8213\u8213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u1013\u10b2\u10b2\u10b2\u20b2\u20e2\u20e2\u20e2\u20e2\u20e2\u28e2\u2082\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u20e2\u48e2\u1072\u10b2\u1052\u1052\u1052\u1052\u10b2\u10b2\u10b2\u12b2\u1013\u10b2\u30b2\u10e2\u10b2\u10b2\u1052\u1452\u1432\u1032\u12b2\u1013\u10b2\u10b2\u14b2\u1232\u1013\u10b2\u10b2\u10b2\u10b2\u01b2\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u0113\u1013\u01b2\u0113\u0113\u0113\u0113\u0113\u0113\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u1013\u02b2\u0213\u0213\u0213\u0213\u0213\u0213\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0113\u0213\u0113\u0213\u0113\u0213\u0213\u0213\u0113\u0113\u0213\u0113\u0213\u0113\u0113\u0213\u0113\u0113\u0113\u0213\u0213\u0113\u0113\u0113\u0113\u0213\u0113\u0113\u0213\u0113\u0113\u0113\u0213\u0213\u0213\u0113\u0113\u0213\u0113\u0113\u0213\u0113\u0213\u0113\u0213\u0113\u0113\u0213\u0113\u0213\u0213\u0113\u0213\u0113\u0113\u0213\u0113\u0113\u0113\u0213\u0113\u0213\u0113\u0113\u0213\u0213 blocks=Basic Latin,General Punctuation,Combining Diacritical Marks for Symbols,CJK Unified Ideographs,Braille Patterns,Superscripts and Subscripts,CJK Unified Ideographs Extension A,Georgian,Myanmar,Latin Extended-A,Latin Extended-B,Currency Symbols,Ethiopic,Katakana,Unified Canadian Aboriginal Syllabics,Spacing Modifier Letters": 1,
                "section=.rdata type=utf16le string=\"\u00d2\u10d2\"\u00d2\u10d2\"\u00d2 blocks=Basic Latin,Latin-1 Supplement,Georgian": 1,
                "section=.rdata type=utf16le string=###########################": 1,
                "section=.rdata type=utf16le string=##\u1023\u1022\" blocks=Basic Latin,Myanmar": 1,
                "section=.rdata type=utf16le \u00c3\u00c3\u00c3\u00c2\u00c2\u10c3\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u10c2\u00c2\u2000b\u00c3\u00d2\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2 blocks=Basic Latin,Latin-1 Supplement,Georgian,General Punctuation": 1,
                "section=.rdata type=utf16le string=\"#################################\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2##\u10b2\u10b2\u10b2\u00b2# blocks=Basic Latin,Latin-1 Supplement,Georgian": 1,
                "section=.rdata type=utf16le string=######################\u00d2\u00d2\u00d2\u00d2#\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2\u00d2#\u00d2\u00d2\u00d2#\u00d2\u00d2\u00d2\u00d2\u00d2 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=#######################\u00d2\u00d2\u00d2 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le BB\u10b2\u10b2\u02b2 blocks=Basic Latin,Georgian,Spacing Modifier Letters": 1,
                "section=.rdata type=utf16le BB\u10b2\u10b2\u00b2 blocks=Basic Latin,Georgian,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=RRRRRRRRRRRRRRRRRRRRRRRRRR": 1,
                "section=.rdata type=utf16le string=BR\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u10b2\u10b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2\u00b2 blocks=Basic Latin,Latin-1 Supplement,Georgian": 1,
                "section=.rdata type=utf16le": 1,
                "section=.rdata type=utf16le string=#\u00d2##########B############# blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=#####": 1,
                "section=.rdata type=utf16le string=##########\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c3\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2\u00c2 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=B\u00b2\u00b2\u00b2\u1000\u00b2\u1052\u1052\u00b2 blocks=Basic Latin,Latin-1 Supplement,Myanmar": 1,
                "section=.rdata type=utf16le string=RR\u00b2\u00b2\u00b2RR blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf8 string=\u0260m2x blocks=IPA Extensions,Basic Latin": 1,
                "section=.rdata type=utf8 string=\u0260m2xH blocks=IPA Extensions,Basic Latin": 1,
                "section=.rdata type=utf8 string=\u01ec\\rzN blocks=Latin Extended-B,Basic Latin": 1,
                "section=.rdata type=utf8 string=\u0260m2\u07b0 blocks=IPA Extensions,Basic Latin,Thaana": 1,
                "section=.rdata type=utf16le string=&\u00aa\ub3b7\u352a\u5da7\ub0a4\ud0fe\ubd11&\u00aa\ub3b7\u822a\u546a\ub0a9\ud0fe\ubd11&\u00aa\ub3b7\ufd2a\u04d4\uc73b\u231c blocks=Basic Latin,Latin-1 Supplement,Hangul Syllables,CJK Unified Ideographs Extension A,CJK Unified Ideographs,Arabic Presentation Forms-A,Cyrillic,Miscellaneous Technical": 1,
                "section=.rdata type=utf8 string=X\u05d2K$ZQH blocks=Basic Latin,Hebrew": 1,
                "section=.rdata type=utf8 string=H\"{\u0333yM blocks=Basic Latin,Combining Diacritical Marks": 1,
                "section=.rdata type=utf8 string=U\u04572|E blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string=\u01b5]\\t) blocks=Latin Extended-B,Basic Latin": 1,
                "section=.rdata type=utf8 \u03413x blocks=Basic Latin,Combining Diacritical Marks": 1,
                "section=.rdata type=utf8 string=\u816d3[- blocks=CJK Unified Ideographs,Basic Latin": 1,
                "section=.rdata type=utf8 string=@\u0319\\rc blocks=Basic Latin,Combining Diacritical Marks": 1,
                "section=.rsrc type=utf16le string=/\u00f0?\u00f0\u100f\uf001 blocks=Basic Latin,Latin-1 Supplement,Myanmar,Private Use Area": 1,
                "section=.rsrc type=utf16le string=`\u00fe\u00fe> blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=P\\n\u0400\ub84b\u00e4 blocks=Basic Latin,Cyrillic,Hangul Syllables,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le \\b\u0400\uf39f blocks=Basic Latin,Cyrillic,Private Use Area": 1,
                "section=.rsrc type=utf8 string=\\f\u0256c#3 blocks=Basic Latin,IPA Extensions": 3,
                "section=.rsrc type=utf8 string=\\f\u0259fc3 blocks=Basic Latin,IPA Extensions": 1,
                "section=.rsrc type=utf8 string=\\n\u0259fc1 blocks=Basic Latin,IPA Extensions": 1,
                "section=.rsrc type=utf8 string=\u0259fc1 blocks=IPA Extensions,Basic Latin": 5,
                "section=.rsrc type=utf8 string=H\u02833f blocks=Basic Latin,IPA Extensions": 1,
                "section=.rsrc type=utf8 string=\u0299fc3 blocks=IPA Extensions,Basic Latin": 3,
                "section=.rsrc type=utf16le string=a$\u1200\u8c36\u66cc\u9c68\u81c9 blocks=Basic Latin,Ethiopic,CJK Unified Ideographs": 3,
                "section=.rsrc type=utf8 string=f6\u0329b blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=i\u0318c6 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=c6j\u0316 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=l\u0316c6 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 i\u0316 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=\u030323l\u0283  blocks=Combining Diacritical Marks,Basic Latin,IPA Extensions": 3,
                "section=.rsrc type=utf8 string=\u0246!2l\u0246  blocks=Latin Extended-B,Basic Latin": 3,
                "section=.rsrc type=utf8 string=\u024313j\u03161 blocks=Latin Extended-B,Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=\u0243139\u03161 blocks=Latin Extended-B,Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=#l\u03030 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=#l\u0256! blocks=Basic Latin,IPA Extensions": 3,
                "section=.rsrc type=utf8 j\u03061 blocks=Basic Latin,Combining Diacritical Marks": 6,
                "section=.rsrc type=utf8 string=#<\u03161 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 l\u02430 blocks=Basic Latin,Latin Extended-B": 6,
                "section=.rsrc type=utf8 \u03161 blocks=Basic Latin,Combining Diacritical Marks": 15,
                "section=.rsrc type=utf8 l\u02461 blocks=Basic Latin,Latin Extended-B": 3,
                "section=.rsrc type=utf8 i\u03161 blocks=Basic Latin,Combining Diacritical Marks": 12,
                "section=.rsrc type=utf8 l\u02560 blocks=Basic Latin,IPA Extensions": 3,
                "section=.rsrc type=utf8 \u0316c blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=#8\u0316a blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 \u0316c3h blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 j\u02961 blocks=Basic Latin,IPA Extensions": 3,
                "section=.rsrc type=utf8 string=cl\u02466 blocks=Basic Latin,Latin Extended-B": 3,
                "section=.rsrc type=utf8 \u0316f blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 i\u03061 blocks=Basic Latin,Combining Diacritical Marks": 6,
                "section=.rsrc type=utf8 \u03162 blocks=Basic Latin,Combining Diacritical Marks": 6,
                "section=.rsrc type=utf8 string=#i\u0303c blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=cl\u02460 blocks=Basic Latin,Latin Extended-B": 3,
                "section=.rsrc type=utf8 string=ci\u02965 blocks=Basic Latin,IPA Extensions": 1,
                "section=.rsrc type=utf8 l\u0316gw blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=#9\u0318b blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 l\u03161 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=gum\uee47u blocks=Basic Latin,Private Use Area": 1,
                "section=.rsrc type=utf8 string=\u0287wWUu blocks=IPA Extensions,Basic Latin": 3,
                "section=.rsrc type=utf8 l\u03061 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 l\u0329w\\bu\\nU blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=#l\u03161 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 \u0318c\\nu blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 j\u03161E blocks=Basic Latin,Combining Diacritical Marks": 1,
                "section=.rsrc type=utf8 string=!i\u03162 blocks=Basic Latin,Combining Diacritical Marks": 1,
                "section=.rsrc type=utf8 \u0318b blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 i\u03131 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=#i\u03161 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=c19\u0318a blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=f19\u03182 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=\u02461i\u03161 blocks=Latin Extended-B,Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=\u03062i\u0316a blocks=Combining Diacritical Marks,Basic Latin": 3,
                "section=.rsrc type=utf8 string=i\u0316#i blocks=Basic Latin,Combining Diacritical Marks": 6,
                "section=.rsrc type=utf8 string=\u03163l\u03161 blocks=Combining Diacritical Marks,Basic Latin": 3,
                "section=.rsrc type=utf8 string=\u03183i\u03161 blocks=Combining Diacritical Marks,Basic Latin": 3,
                "section=.rsrc type=utf8 i\u03180 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=i\u0329cl\u03161 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf8 string=cl\u03161 blocks=Basic Latin,Combining Diacritical Marks": 3,
                "section=.rsrc type=utf16le &\u1200\u6913\u98cc\u9c36\u86cc blocks=Basic Latin,Ethiopic,CJK Unified Ideographs": 3,
                "section=.rsrc type=utf8 string=\\f\u0258fc3 blocks=Basic Latin,IPA Extensions": 1,
                "section=.rsrc type=utf8 string=\\f\u0286362 blocks=Basic Latin,IPA Extensions": 1,
                "section=.rsrc type=utf8 string=\\b\u0258c! blocks=Basic Latin,IPA Extensions": 1,
                "section=.rsrc type=utf16le string=\\f\u00f0\u00f0\u06f0 blocks=Basic Latin,Latin-1 Supplement,Arabic": 1,
                "section=.rsrc type=utf16le \\b\uff02\uf002\\n\u1800\uab03\ubabb\u1064\u1300\ubb69\ua2bb\\n\u1000\ubb0a\u30b7\u3800\ub8bb blocks=Basic Latin,Halfwidth and Fullwidth Forms,Private Use Area,Mongolian,Ethiopic Extended-A,Hangul Syllables,Myanmar,Ethiopic,Yi Syllables,Katakana,CJK Unified Ideographs Extension A": 2,
                "section=.rsrc type=utf16le string=`\\f\u1000\uff3f blocks=Basic Latin,Myanmar,Halfwidth and Fullwidth Forms": 2,
                "section=.rsrc type=utf16le \\b\u9f02\uf302 blocks=Basic Latin,CJK Unified Ideographs,Private Use Area": 2,
                "section=.rsrc type=utf16le `\uff02\uf002\\n\u0800\ubb3b\u40b8\\n\u0800\ubb49\u40bb\\b blocks=Basic Latin,Halfwidth and Fullwidth Forms,Private Use Area,Samaritan,Hangul Syllables,CJK Unified Ideographs Extension A": 2,
                "section=.rsrc type=utf8 string=\u0258ff\\f3 blocks=IPA Extensions,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u0259ff32 blocks=IPA Extensions,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u0259fc3 blocks=IPA Extensions,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\\n\u029633f blocks=Basic Latin,IPA Extensions": 2,
                "section=.rsrc type=utf8 string=P\u02833f blocks=Basic Latin,IPA Extensions": 2,
                "section=.rsrc type=utf8 i\u0318 blocks=Basic Latin,Combining Diacritical Marks": 2,
                "section=.rsrc type=utf8 j\u0256337 blocks=Basic Latin,IPA Extensions": 2,
                "section=.rsrc type=utf8 string=&6\u0319cch blocks=Basic Latin,Combining Diacritical Marks": 2,
                "section=.rsrc type=utf8 \u0316a blocks=Basic Latin,Combining Diacritical Marks": 2,
                "section=.rsrc type=utf8 \u0316b blocks=Basic Latin,Combining Diacritical Marks": 2,
                "section=.rsrc type=utf8 \u0318c blocks=Basic Latin,Combining Diacritical Marks": 2,
                "section=.rsrc type=utf8 string=ci\u02965ww blocks=Basic Latin,IPA Extensions": 2,
                "section=.rsrc type=utf8 \u0316fwwx blocks=Basic Latin,Combining Diacritical Marks": 2,
                "section=.rsrc type=utf8 string=\ue188331 blocks=Private Use Area,Basic Latin": 2,
                "section=.rsrc type=utf8 string=gum\uee47uWWUWWU blocks=Basic Latin,Private Use Area": 2,
                "section=.rsrc type=utf8 string=i\u0316#\\e blocks=Basic Latin,Combining Diacritical Marks": 2,
                "section=.rsrc type=utf8 string=\uca07uuWUu\\bU blocks=Hangul Syllables,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u06a8wWW blocks=Arabic,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u0247wuUUuWUu blocks=Latin Extended-B,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u0258wWuuUWUWUuuUuu blocks=IPA Extensions,Basic Latin": 2,
                "section=.rsrc type=utf8 j\u03161EWW blocks=Basic Latin,Combining Diacritical Marks": 2,
                "section=.rsrc type=utf8 string= !i\u03162 blocks=Basic Latin,Combining Diacritical Marks": 2,
                "section=.rsrc type=utf16le string=P$\u1200\u6913\u96cc\u9c36\u96cc blocks=Basic Latin,Ethiopic,CJK Unified Ideographs": 2,
                "section=.rsrc type=utf8 string=\u0246331 blocks=Latin Extended-B,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u0318f6633ccff blocks=Combining Diacritical Marks,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u0329c332 blocks=Combining Diacritical Marks,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u0316331 blocks=Combining Diacritical Marks,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u0316362 blocks=Combining Diacritical Marks,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u0316363 blocks=Combining Diacritical Marks,Basic Latin": 4,
                "section=.rsrc type=utf8 string=\u0258fc3 blocks=IPA Extensions,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u0248ffc332##3 blocks=Latin Extended-B,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u0286362 blocks=IPA Extensions,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\u0246fc331 blocks=Latin Extended-B,Basic Latin": 2,
                "section=.rsrc type=utf8 string=\\b\u0258c!) blocks=Basic Latin,IPA Extensions": 2,
                "section=.rsrc type=utf32le \u00d7\u00d7\u00d7\u00d7 blocks=Basic Latin,Latin-1 Supplement": 2,
                "section=.rsrc type=utf8 string=\u0742\"\"} blocks=Syriac,Basic Latin": 1,
                "section=.rsrc type=utf8 string=R\"(\u0742 blocks=Basic Latin,Syriac": 1,
                "section=.rsrc type=utf8 string=&\u0742\"\" blocks=Basic Latin,Syriac": 1,
                "section=.rsrc type=utf32le string=>B\u0cecDE blocks=Basic Latin,Kannada": 1,
                "section=.rsrc type=utf32le string=H{\u0ec4} blocks=Basic Latin,Lao": 1,
                "section=.rsrc type=utf16le string=_VERSION_INFO": 1,
                "section=.rsrc type=utf16le string=StringFileInfo": 1,
                "section=.rsrc type=utf16le B0": 1,
                "section=.rsrc type=utf16le string=CompanyName": 1,
                "section=.rsrc type=utf16le string=ReactOS(R) Foundation": 1,
                "section=.rsrc type=utf16le string=FileDescription": 1,
                "section=.rsrc type=utf16le string=NT Kernel & System": 1,
                "section=.rsrc type=utf16le string=FileVersion": 1,
                "section=.rsrc type=utf16le .2.3790.1830": 2,
                "section=.rsrc type=utf16le string=InternalName": 1,
                "section=.rsrc type=utf16le string=ntkrnlmp.exe": 2,
                "section=.rsrc type=utf16le string=LegalCopyright": 1,
                "section=.rsrc type=utf16le string= ReactOS Foundation. All rights reserved.": 1,
                "section=.rsrc type=utf16le string=OriginalFilename": 1,
                "section=.rsrc type=utf16le string=ProductName": 1,
                "section=.rsrc type=utf16le string=ReactOS(R) Operating System": 1,
                "section=.rsrc type=utf16le string=ProductVersion": 1,
                "section=.rsrc type=utf16le string=arFileInfo": 1,
                "section=.rsrc type=utf16le string=Translation": 1,
                "arch     x86": 1,
                "binsz    4101120": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x003ea014": 1,
                "compiled Tue Jul 15 17:25:22 2014": 1,
                "crypto   false": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x003ed0a9": 1,
                "linenum  false": 1,
                "lsyms    false": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       native": 1,
                "overlay  true": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   false": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Native": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0xb": 1,
                "TimeDateStamp : 0x53c555f2": 1,
                "PointerToSymbolTable : 0x3e9200": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x102": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x2": 1,
                "MinorLinkerVersion : 0x17": 1,
                "SizeOfCode : 0x17ba00": 1,
                "SizeOfInitializedData : 0x88a00": 1,
                "SizeOfUninitializedData : 0x1b400": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0x17d000": 1,
                "ImageBase : 0x80800000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x200": 1,
                "MajorOperatingSystemVersion : 0x4": 1,
                "MinorOperatingSystemVersion : 0x0": 1,
                "MajorImageVersion : 0x1": 1,
                "MinorImageVersion : 0x0": 1,
                "MajorSubsystemVersion : 0x4": 1,
                "MinorSubsystemVersion : 0x0": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x40a000": 1,
                "SizeOfHeaders : 0x600": 1,
                "CheckSum : 0x3ed0a9": 1,
                "Subsystem : 0x1": 1,
                "DllCharacteristics : 0x0": 1,
                "SizeOfStackReserve : 0x200000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_EXPORT": 1,
                "VirtualAddress : 0x1ed000": 1,
                "Size : 0xbfba": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x1f9000": 1,
                "Size : 0x864": 1,
                "IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "VirtualAddress : 0x1fa000": 1,
                "Size : 0x131a8": 1,
                "IMAGE_DIRECTORY_ENTRY_BASERELOC": 1,
                "VirtualAddress : 0x20e000": 1,
                "Size : 0x16a68": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x1f9128": 1,
                "Size : 0xec": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "bootvid.dll": 1,
                "hal.dll": 1,
                "4101120": 1,
                "=== VS_VERSIONINFO ===": 1,
                "# VS_FIXEDFILEINFO": 1,
                "Signature: 0xfeef04bd": 1,
                "StrucVersion: 0x10000": 1,
                "FileVersion: 5.2.3790.1830": 2,
                "ProductVersion: 5.2.3790.1830": 2,
                "FileFlagsMask: 0x3f": 1,
                "FileFlags: 0x9": 1,
                "FileOS: 0x40004": 1,
                "FileType: 0x3": 1,
                "FileSubType: 0x0": 1,
                "# StringTable": 1,
                "CompanyName: ReactOS(R) Foundation": 1,
                "FileDescription: NT Kernel & System": 1,
                "InternalName: ntkrnlmp.exe": 1,
                "LegalCopyright: \u00a9 ReactOS Foundation. All rights reserved.": 1,
                "OriginalFilename: ntkrnlmp.exe": 1,
                "ProductName: ReactOS(R) Operating System": 1
            }
        }
    ]
}