{
    "filepath": "/corpus/family_2/e6e30d6a54e204c4fa074e3e84b9066651b48519143b27f5a578e41383c126e7",
    "fileinfo": {
        "labels": {
            "family": "family_2"
        },
        "md5": "d0b697cc9ce3841fcdbe2a68fffa43b8",
        "type": "ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, stripped"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "push ebp;mov eax, 0;mov ebp, esp;sub esp, 8;call ": 3,
                "push ebp;mov ebp, esp;push edi;push esi;push ebx": 88,
                "mov al, byte [ebp + 8];mov esi, edx;push 0;mov byte [ebp - ], al;push ": 3,
                "mov esi, edx;push 0;mov byte [ebp - ], al;push ;push ebx": 3,
                "push esi;call fcn.0804a100;push ;mov dword [ebp - ], eax;push ": 3,
                "push 7;push ebx;push esi;call fcn.0804a1a0;add esp, ": 3,
                "test ecx, ecx;je ;mov edx, dword [ebp - ];test edx, edx;je ": 3,
                "mov edx, dword [ebp - ];add esp, ;cmp eax, edx;jle ;mov ecx, dword [ebp - ]": 3,
                "add esp, ;cmp eax, edx;jle ;mov ecx, dword [ebp - ];add ecx, edx": 3,
                "sub esp, ;push ;call fcn.0804f070;mov dword [esp], ;call fcn.0804f070": 3,
                "mov esi, dword [ebp - ];pop edi;pop eax;push ;push esi": 3,
                "mov dword [esi], ;mov edx, dword [ebp - ];mov ecx, dword [ebp + ];mov eax, edx;sar edx, ": 3,
                "add esp, ;ret;sub esp, ;mov eax, dword [esp + ];mov dword [esp + ], eax": 134,
                "sub esp, ;mov eax, dword [esp + ];mov dword [esp + ], eax;mov eax, dword [esp + ];mov dword [esp + ], eax": 145,
                "mov eax, dword [esp + ];mov dword [esp + ], eax;lea eax, [esp + ];push eax;push 5": 8,
                "mov eax, dword [esp + ];mov dword [esp + ], eax;lea eax, [esp + ];push eax;push ": 66,
                "lea eax, [esp + ];push eax;push 4;call fcn.08051c2b;add esp, ": 11,
                "mov dword [esp + ], eax;lea eax, [esp + ];push eax;push 1;call fcn.08051c2b": 16,
                "push edx;push dword [esp + ];push eax;call fcn.0804fb18;add esp, ": 17,
                "ret;sub esp, ;mov eax, dword [esp + ];test eax, eax;jle ": 17,
                "jmp ;mov dword [esp + ], eax;mov eax, ;jmp ;mov dword [esp + eax*4 + ], 0": 17,
                "dec eax;jns ;push edx;push edx;push ebx": 17,
                "mov edx, dword [ebp + ];mov ecx, dword [ebp + 8];test edx, edx;je ;xor eax, eax": 6,
                "je ;mov byte [ebp - ], 0;cmp esi, ;je ;mov ecx, eax": 7,
                "cmp esi, ;je ;mov ecx, eax;mov dword [ebp - ], 0;mov ebx, ": 7,
                "push edi;push esi;push ebx;sub esp, ;mov ecx, dword [ebp + ]": 7,
                "cmp ecx, dword [ebp - ];je ;mov eax, dword [ebp + 8];mov ebx, dword [ebp - ];mov esi, dword [ebp + ]": 6,
                "pop esi;pop edi;pop ebp;ret;push ebp": 29,
                "push edi;push esi;push ebx;sub esp, ;mov esi, dword [ebp + 8]": 6,
                "push ebx;sub esp, ;mov esi, dword [ebp + 8];lea esi, [esi];mov cl, byte [esi]": 6,
                "push ebp;mov ebp, esp;push ebx;mov ebx, eax;mov edx, dword []": 1,
                "shl ebx, ;mov ecx, edx;shr ecx, ;xor ebx, eax;mov eax, dword []": 1,
                "cmp ebx, 1;je ;call fcn.0804e930;sub ebx, 2;mov word [esi], ax": 2,
                "push ebp;mov ecx, 8;mov ebp, esp;push edi;cld": 3,
                "mov dword [ebp + 8], eax;jg ;add esp, ;pop ebx;pop esi": 3,
                "mov dword [ebp - ], eax;mov ecx, dword [ebp - ];dec ebx;shr ecx, 3;mov edx, ecx": 3,
                "mov byte [edi], dl;inc edi;mov dword [ebp + 8], edi;jmp ;push ebp": 3,
                "ret;push ebp;mov dword [ecx], 1;mov ebp, esp;push esi": 4,
                "mov ebp, esp;push esi;mov esi, edx;push ebx;xor edx, edx": 5,
                "push esi;mov esi, edx;push ebx;xor edx, edx;mov ebx, eax": 5,
                "mov dl, byte [ebx + 1];lea eax, [eax + edx - ];mov edx, 1;lea ebx, [eax + esi];mov al, byte [ebx]": 5,
                "dec edx;jne ;mov eax, dword [ecx];inc eax;mov dword [ecx], eax": 5,
                "pop ebp;ret;lea esi, [esi];inc ebx;test edx, edx": 5,
                "mov ebx, dword [ebp + 8];test ebx, ebx;je ;mov eax, dword [ebx + 4];test eax, eax": 6,
                "pop edi;ret;push edi;sub esp, 8;mov edi, dword [esp + ]": 63,
                "call fcn.08051191;mov dword [esp], ebx;call fcn.0804fa39;add esp, ;add esp, ": 10,
                "sub esp, ;push ;push dword [esp + ];call fcn.0804fb4a;add esp, ": 11,
                "push edi;call fcn.0804fa39;mov dword [ebx], esi;jmp ;sub esp, ": 9,
                "call fcn.080518f5;add esp, ;add esp, ;mov eax, ebx;pop ebx": 7,
                "push eax;call fcn.080518f8;mov dword [esp], ebx;call fcn.080518f5;add esp, ": 8,
                "movzx edx, word [ebx + 8];add eax, edx;mov dword [esi + 4], eax;mov eax, dword [ebx + 4];mov dword [esi + ], eax": 7,
                "add esp, ;imul eax, eax, ;and eax, ;ret;push edi": 8,
                "push ebx;mov ebx, edi;mov eax, 6;int ;pop ebx": 6,
                "mov eax, ebx;add esp, ;pop ebx;pop edi;ret": 14,
                "mov ecx, dword [esp + ];mov edx, dword [esp + ];mov esi, dword [esp + ];mov edi, dword [esp + ];mov eax, dword [esp + ]": 31,
                "mov eax, dword [esp + ];push ebx;mov ebx, eax;mov eax, ;int ": 31,
                "cmp eax, ;jbe ;call fcn.0804ff71;neg esi;mov dword [eax], esi": 55,
                "call fcn.0804ff71;neg esi;mov dword [eax], esi;or esi, ;mov eax, esi": 46,
                "push eax;lea eax, [esp + ];push eax;push ebx;call fcn.08051b37": 16,
                "movzx eax, al;ret;push ebx;mov eax, 1;mov ecx, dword [esp + ]": 15,
                "pop ebx;ret;mov edx, eax;push ebx;shr edx, 8": 14,
                "and ebx, 3;lea eax, [ebx + eax*4 + ];pop ebx;ret;push ebp": 14,
                "push fcn.080518f5;lea eax, [esp + ];push eax;call fcn.080518f8;mov dword [esp], ": 20,
                "push eax;call fcn.080518f8;mov dword [esp], ;call fcn.080518f5;add esp, ": 16,
                "add esp, ;cmp ebx, ;jbe ;call fcn.0804ff71;xor ebx, ebx": 16,
                "cmp edi, dword [esp + ];je ;cmp edi, ;ja ;mov esi, edi": 9,
                "jmp ;mov eax, edi;call fcn.080503a6;mov esi, eax;lea eax, [eax*8 + ]": 9,
                "mov dword [esp + ], ecx;mov ebx, dword [esp + ];push ebx;sub esp, 8;mov edx, dword [esp + ]": 1,
                "ret;push edi;push esi;sub esp, 4;mov edi, dword [esp + ]": 5,
                "sub esp, 4;mov edi, dword [esp + ];mov ecx, dword [esp + ];mov edx, dword [esp + ];mov esi, dword [esp + ]": 6,
                "push eax;push eax;push dword [esp + ];push ecx;call fcn.0805213d": 7,
                "mov esi, eax;test eax, eax;jle ;lea edi, [ebx + eax];jmp ": 8,
                "mov dword [ebx + 4], eax;mov eax, dword [ebx + ];mov word [ebx + 8], ax;mov al, byte [ebx + ];mov byte [ebx + ], al": 8,
                "mov word [ebx + 8], ax;mov al, byte [ebx + ];mov byte [ebx + ], al;push eax;movzx eax, word [ebx + 8]": 8,
                "push eax;lea eax, [ebx + ];push eax;lea eax, [ebx + ];push eax": 8,
                "push eax;call fcn.0804ff9b;add esp, ;movzx eax, word [ebx + 8];push eax": 8,
                "neg dword [ebp - ];mov edx, dword [ebp - ];mov dword [eax], edx;jmp ;cmp dword [ebp - ], ": 9,
                "mov esi, dword [ebp + ];mov ebx, dword [ebp - ];mov dword [ebp - ], ;mov dword [ebp - ], ;jmp ": 8,
                "push dword [ebp + 8];call fcn.08051fbf;add esp, ;cmp esi, dword [ebp + ];jne ": 8,
                "mov al, byte [ebx + ];mov byte [esi + ], al;push eax;movzx eax, word [ebx + ];sub eax, ": 8,
                "pop ebp;jmp ;push ebp;mov ebp, esp;push edi": 3,
                "call fcn.0804f580;xor eax, eax;add esp, ;mov al, byte [ebp - ];mov dword [eax*8 + ], esi": 4,
                "call fcn.0804f080;mov ecx, 2;mov edx, ;mov eax, ;call fcn.0804f080": 4,
                "mov eax, 8;call fcn.0804f080;mov ecx, 4;mov edx, str._rDF_;mov eax, 9": 4,
                "mov eax, ;call fcn.0804f080;mov ecx, 8;mov edx, str._rQVCVWQ_;mov eax, ": 4,
                "call fcn.0804f080;mov ecx, ;mov edx, str.jvvrdnmmf_;mov eax, ;call fcn.0804f080": 4,
                "mov ecx, 8;mov edx, str.XMNNCPF_;mov eax, ;call fcn.0804f080;mov ecx, ": 4,
                "mov ecx, 6;mov edx, str.QJGNN_;mov eax, ;call fcn.0804f080;mov ecx, 7": 4,
                "or eax, ;jmp ;mov esi, 8;push ebx;mov ebx, edi": 12,
                "mov esi, 8;push ebx;mov ebx, edi;mov eax, ;int ": 12,
                "add esp, ;sub esp, ;mov eax, dword [esp + ];mov dword [esp + ], eax;mov eax, dword [esp + ]": 2,
                "call fcn.08050fe9;push ebx;sub esp, 8;mov eax, 2;int ": 1,
                "push eax;movzx esi, byte [ebp + ];call fcn.08050b40;and esi, ;push 0": 2,
                "movzx esi, byte [ebp + ];call fcn.08050b40;and esi, ;push 0;mov dword [ebp - ], eax": 2,
                "push edi;push esi;call fcn.0804a1a0;push ;mov byte [ebp - ], al": 2,
                "push esi;call fcn.0804a1a0;push 0;mov byte [ebp - ], al;push ": 2,
                "push ;push edi;push esi;call fcn.0804a1a0;add esp, ": 4,
                "inc eax;je ;sub esp, ;lea eax, [ebp - ];mov dword [ebp - ], 1": 2,
                "sub esp, ;lea eax, [ebp - ];mov dword [ebp - ], 1;push 4;push eax": 2,
                "push eax;mov eax, dword [ebp - ];push 3;push 0;push eax": 2,
                "mov ecx, dword [ebp - ];mov word [ebp - ], dx;mov eax, dword [ebp - ];mov dl, byte [ebp - ];mov edi, dword [ebp - ]": 2,
                "mov dl, byte [ebp - ];mov edi, dword [ebp - ];mov word [ebp - ], cx;mov word [ebp - ], ax;mov byte [ebp - ], dl": 2,
                "xor ebx, ebx;lea ecx, [eax + ];lea edx, [eax + ];mov word [ebp - ], cx;mov ecx, dword [ebp - ]": 2,
                "mov dword [ebp - ], ebx;mov word [edi], ax;mov ax, word [ebp - ];ror ax, 8;mov word [edi + 2], ax": 2,
                "lea edi, [ebx + ];mov eax, dword [ebp - ];ror ax, 8;mov word [ebx + 2], ax;mov eax, dword [ebp - ]": 2,
                "mov ebx, dword [ebp - 4];leave;jmp loc.0804ffd7;mov eax, ebx;mov ebx, dword [ebp - 4]": 2,
                "xor eax, eax;mov al, byte [ebp + 8];push eax;call fcn.0804a100;add esp, ": 3,
                "mov dword [ebp + 8], eax;mov ebx, dword [ebp - 4];leave;jmp fcn.0804f790;lea esi, [esi]": 3,
                "sub esp, ;mov bl, byte [ebp + ];movzx edi, byte [ebp + ];movzx esi, byte [ebp + ];call fcn.0804fa67": 4,
                "push eax;mov eax, dword [ebp + ];push eax;mov eax, edi;and eax, ": 4,
                "xor eax, eax;mov al, byte [];mov dword [ebp - ], eax;test eax, eax;jle ": 4,
                "xor eax, eax;mov edx, dword [ecx];cmp bl, byte [edx + 4];jne ;jmp ": 4,
                "jne ;jmp ;push ebp;mov ebp, esp;push ebx": 4,
                "cmp esi, edi;jne ;mov esi, dword [ebp - ];lea eax, [esi + esi*4];sub ebx, eax": 5,
                "push 1;push dword [esp + ];push dword [esp + ];push dword [esp + ];call fcn.0805146c": 4,
                "jne ;mov ebp, 1;jmp ;xor ebp, ebp;inc ebx": 5,
                "xor edx, edx;cmp eax, ;ja ;or eax, ;xor edx, edx": 4,
                "ja ;or eax, ;xor edx, edx;div esi;mov byte [esp + ], dl": 4,
                "or eax, ;xor edx, edx;div esi;mov byte [esp + ], dl;xor edx, edx": 4,
                "or eax, ;mov cl, ;cmp al, ;jbe ;lea ecx, [eax - ]": 4,
                "cmp al, ;jbe ;lea ecx, [eax - ];movzx eax, cl;cmp eax, esi": 4,
                "jmp ;cmp dword [esp + ], 0;je ;mov eax, dword [esp + ];mov dword [eax], edi": 4,
                "mov eax, ebp;test al, al;je ;neg edx;add esp, ": 4,
                "sub esp, ;push esi;call eax;add esp, ;push eax": 5,
                "push ebx;call loc.08050386;add esp, ;test eax, eax;js ": 6,
                "call fcn.08051b37;add esp, ;test eax, eax;jns ;call fcn.0804ff71": 5,
                "mov ebx, eax;mov esi, dword [eax];push ebp;push 0;lea eax, [esp + ]": 5,
                "lea ebp, [esp + ];lea ebx, [esp + ];jne ;push edi;push edi": 5,
                "push 2;call fcn.0804fca5;mov dword [ebx], esi;jmp ;push esi": 5,
                "ret;sub esp, ;sub esp, ;push ;push 0": 1,
                "cmp dword [esp + ], ;jbe ;mov eax, dword [esp + ];lea edx, [eax*8 + ];mov eax, dword [edx + ]": 5,
                "cmp dword [esp + ], ;jbe ;mov eax, dword [esp + ];lea edx, [eax*8 + ];push edi": 1,
                "cmp esi, ;je ;lea ebx, [ebp - ];push eax;push ": 4,
                "inc eax;add esp, ;jmp ;mov byte [ecx], dl;inc edi": 6,
                "test eax, eax;jle ;mov dl, byte [esi];cmp dl, ;je ": 6,
                "mov dl, byte [esi];cmp dl, ;je ;test dl, dl;jne ": 6,
                "push 8;push 1;call fcn.08050b40;mov edx, dword [ebp + 8];pop ecx": 6,
                "sub eax, edx;sub esi, eax;pop eax;pop edx;lea edx, [ebp - ]": 5,
                "sub esp, ;push esi;call fcn.0804fa39;add esp, ;push eax": 5,
                "mov eax, dword [esi + ];mov dword [ebx + ], eax;mov eax, dword [esi + ];mov dword [ebx + ], eax;mov eax, dword [esi + ]": 40,
                "mov dword [eax], esi;mov eax, 1;jmp ;xor eax, eax;pop edx": 8,
                "mov eax, 1;jmp ;xor eax, eax;pop edx;pop ebx": 8,
                "pop edi;pop ebp;ret;mov edx, dword [eax + ];mov dword [], edx": 8,
                "xor dword [], ecx;jb ;inc ecx;outsb dx, byte gs:[si];je ": 7,
                "jb ;inc ecx;outsb dx, byte gs:[si];je ;and byte [eax], al": 7,
                "mov byte [esi + 8], dl;ror ax, 8;cmp byte [ebp - ], 0;mov word [esi + 4], ax;je ": 1,
                "pop edi;pop ebp;ret;mov edx, dword [ebp - ];mov ecx, dword [ebp - ]": 1,
                "push eax;push 2;push 1;push edx;call fcn.080501f2": 2,
                "call fcn.080501f2;add esp, ;push 0;push 3;mov eax, dword []": 2,
                "call fcn.0804f975;add esp, ;or ah, 8;push eax;push 4": 2,
                "or ah, 8;push eax;push 4;mov eax, dword [];push eax": 2,
                "add esp, ;inc eax;je ;push edx;push edx": 2,
                "push eax;push ;push esi;mov esi, dword [];push esi": 2,
                "call fcn.08050270;add esp, ;push 0;push ebx;push 0": 2,
                "call fcn.0804fb4a;add esp, ;mov ebx, eax;cmp eax, ;je ": 2,
                "push 9;push eax;call fcn.0804fb18;add esp, ;leave": 4,
                "call fcn.0804f070;pop edx;pop ecx;push 0;push ": 5,
                "cmp al, ;je ;lea eax, [edi + edx];mov dl, byte [eax + 3];inc eax": 4,
                "test al, al;je ;cmp al, ;je ;cmp al, 9": 3,
                "call fcn.0804f4c0;add esp, ;cmp eax, ;jg ;push eax": 3,
                "sub esp, ;mov eax, dword [ebp - ];push eax;call fcn.0804fa39;lea edx, [ebp - ]": 3,
                "mov dword [ebp - ], eax;mov dword [ebp - ], 0;test eax, eax;je ;sub esp, ": 3,
                "lea edi, [eax + ];mov al, byte [eax + ];sub eax, ;cmp al, 9;ja ": 2,
                "add esp, ;push ebp;mov ebp, esp;push edi;push esi": 1,
                "mov edx, str.PGDPGQJ;mov eax, ;call fcn.0804f080;mov ecx, ;mov edx, str.NMACVKML": 3,
                "mov eax, ;call fcn.0804f080;mov ecx, ;mov edx, str.AMLLGAVKML;mov eax, ": 3,
                "mov ecx, ;mov edx, str.oMXKNNC_r;mov eax, ;leave;jmp fcn.0804f080": 2,
                "jne ;push eax;push eax;push ebx;push ": 6,
                "push edx;push 8;push ebx;lea eax, [esp + eax*8 + ];push eax": 7,
                "mov ax, ;mov dword [], eax;cmp dword [esp + ], ;jne ;call fcn.08051f99": 7,
                "call fcn.080518f9;mov edx, ;mov eax, 2;call fcn.080518f9;mov esi, ": 7,
                "cmp ebx, esi;jb ;test ebp, ebp;je ;call ebp": 7,
                "test eax, eax;je ;call fcn.0804ff71;mov dword [eax], 0;mov eax, 0": 6,
                "call 0;mov dword [eax], 0;push eax;push dword [];push edi": 6,
                "mov dword [esp], eax;call fcn.08051581;mov eax, ;int ;pop eax": 6,
                "test ebx, ebx;je ;mov eax, dword [ebx];mov dword [esp + ], eax;lea eax, [ebx + 4]": 7,
                "add esp, ;mov ebx, eax;test esi, esi;je ;test eax, eax": 7,
                "add esp, ;mov dword [esi + ], eax;mov eax, ebx;add esp, ;pop ebx": 6,
                "cmp esi, ;lea ecx, [eax + 8];jbe ;mov ebx, dword [esp + ];lea edx, [eax + ebx]": 3,
                "mov eax, ecx;cmp eax, edx;jne ;mov ecx, dword [esp + ];mov esi, 1": 3,
                "test edx, edx;je ;mov eax, edi;mov esi, 1;shl eax, 8": 3,
                "mov eax, edi;mov esi, 1;shl eax, 8;lea ebx, [eax + ];jmp ": 3,
                "test edx, esi;je ;mov ecx, dword [ebx + ];cmp ecx, ebx;jne ": 3,
                "mov eax, esi;lea ebx, [ecx + 8];not eax;and edx, eax;add esi, esi": 3,
                "add esi, esi;mov dword [edi*4 + ], edx;jmp ;mov edx, eax;push ebx": 1,
                "pop edx;pop ecx;pop ebx;ret;push esi": 9,
                "push ebx;sub esp, 4;cmp dword [], 0;mov esi, dword [esp + ];jne ": 10,
                "jne ;mov ebx, eax;jmp ;sub esp, ;mov ebx, eax": 10,
                "or ebx, ;mov eax, ebx;pop edx;pop ebx;pop esi": 10,
                "mov dword [eax], ;mov eax, ecx;pop edx;sub esp, ;mov eax, dword [esp + ]": 1,
                "jmp loc.080518b2;call fcn.0804ff71;mov dword [eax], ;jmp loc.08051885;mov eax, ": 3,
                "mov dword [eax], ;jmp loc.08051885;mov eax, ;jmp loc.080518b2;mov eax, ": 3,
                "mov eax, ;jmp loc.080518b2;mov eax, ;add esp, ;ret": 3,
                "cmp ebx, ;jne ;mov eax, dword [];test eax, eax;je ": 3,
                "je ;call eax;mov ecx, dword [];test ecx, ecx;je ": 3,
                "jmp ecx;pop eax;pop edx;pop ebx;ret": 3,
                "pop edx;pop ebx;ret;xor eax, eax;ret": 3,
                "ret;push ebp;mov ebp, esp;push ebx;push ebx": 1,
                "pop edx;pop ecx;pop ebx;ret;mov eax, dword []": 7,
                "push eax;dec edi;push ebx;push esp;add byte [edi], ah": 6,
                "leave;mov al, byte [];add al, 8;or byte [edi], ch;jo ": 6,
                "add al, 8;or byte [edi], ch;jo ;outsd dx, dword [esi];arpl word [edi], bp": 6,
                "arpl word [eax + ], bp;outsd dx, dword [esi];add byte [bx + si], al;add byte [eax], al;add dword [eax], eax": 5,
                "or byte [eax - ], dh;add al, 8;mov al, ;add al, 8;sal al, 1": 5,
                "add al, 8;pushal;invalid;add al, 8;xor ch, 4": 5,
                "jo ;jb ;je ;jbe ;xor byte [ecx], dh": 4,
                "inc ebx;dec esp;inc ebp;inc edi;dec edi": 6,
                "dec ebx;push ecx;push esi;inc edi;dec esp": 3,
                "mov edi, dword [esp + ];mov ebx, ecx;lea esi, [esp + 8];sar ebx, ;mov eax, dword [esp + ]": 7,
                "mov dword [ebx + ], eax;push ebx;sub esp, 8;mov eax, ;int ": 1,
                "or ebx, ;mov eax, ebx;push esi;push ebx;sub esp, 8": 1,
                "add esp, ;cmp byte [esi + ], ;je ;sub esp, ;mov eax, dword [ebp - ]": 1,
                "add esp, ;push eax;mov eax, dword [ebp - ];push eax;lea eax, [esi + ]": 1,
                "lea eax, [esi + ];push eax;call fcn.0804f5b0;mov ecx, dword [ebp - ];pop ebx": 1,
                "dec ebx;dec edi;inc edi;and al, byte [eax];or eax, ": 1,
                "mov ebx, dword [ebp + ];mov byte [ebp - 9], al;mov al, byte [ebp + 8];and eax, ;mov esi, eax": 1,
                "pop ebx;pop esi;pop ebp;ret;mov ebx, dword [ebx]": 1,
                "mov dword [eax], 0;push eax;push eax;mov eax, dword [ebp - ];push eax": 4,
                "push eax;mov eax, dword [ebp - ];push eax;xor eax, eax;mov al, byte [ebp - ]": 4,
                "jge ;xor eax, eax;lea esp, [ebp - ];pop ebx;pop esi": 2,
                "je ;mov edx, dword [ebp + 8];mov al, byte [edx];cmp al, byte [edi];je ": 2,
                "mov eax, dword [eax - 4];test al, 2;jne ;and eax, ;lea edx, [eax - 4]": 1,
                "cmp dword [esp + ], 0;jne ;sub esp, ;push ebx;call fcn.080503cc": 2,
                "mov dword [esp + 4], eax;mov edi, dword [esp + ];sub edi, 8;mov edx, dword [edi + 4];mov eax, edx": 2,
                "mov edx, dword [edi + 4];mov eax, edx;and eax, ;mov dword [esp + 8], eax;test dl, 2": 2,
                "mov ecx, dword [esp + 4];mov ebx, eax;cmp eax, ecx;jae ;lea esi, [edi + eax]": 2,
                "lea esi, [edi + eax];cmp esi, dword [];jne ;mov eax, dword [esi + 4];mov ecx, ebx": 2,
                "mov eax, dword [esi + 4];mov ecx, ebx;and eax, ;add ecx, eax;mov eax, dword [esp + 4]": 2,
                "cmp ecx, eax;jb ;and edx, 1;or edx, dword [esp + 4];mov dword [edi + 4], edx": 2,
                "and edx, 1;or edx, dword [esp + 4];mov dword [edi + 4], edx;mov esi, dword [esp + 4];sub ecx, esi": 2,
                "jmp ;sub esp, ;mov eax, dword [esp + ];sub eax, 7;push eax": 2,
                "push esi;push eax;push dword [esp + ];push edx;call fcn.080521ba": 2,
                "mov dword [edx + 4], eax;mov eax, dword [esi + 8];mov dword [edx + 8], eax;jbe ;mov eax, dword [esi + ]": 2,
                "mov dword [edx + ], eax;mov eax, dword [esi + ];mov dword [edx + ], eax;sub esp, ;add ebx, 8": 2,
                "inc edi;cmp dword [ebp - ], edi;push edi;push esi;mov eax, dword [esp + ]": 1,
                "jle ;cmp ebx, ;push edi;push ebx;sub esp, ": 1,
                "lea edx, [ebx - ];cmp edx, dword [ebp + ];jge ;test edi, edi;js ": 5,
                "lea eax, [edx - ];cmp al, ;ja ;push ebp;mov ebp, esp": 1,
                "je ;neg eax;add esp, ;pop ebx;pop esi": 3,
                "pop edi;pop ebp;ret;movsx ebx, byte [esi];inc esi": 3,
                "mov ecx, dword [ebp + ];push ebp;push edi;push esi;push ebx": 1,
                "ret;sub esp, ;mov eax, dword [esp + ];cmp eax, ;ja ": 2,
                "call dword [ebx*4 + ];dec ebx;cmp ebx, ;jne ;push ebp": 1,
                "push ebx;call fcn.08051191;add esp, ;mov ecx, dword [ebp - ];test ecx, ecx": 3,
                "add esp, ;mov ecx, dword [ebp - ];test ecx, ecx;je ;xor eax, eax": 3,
                "jle ;mov ebx, 1;lea esi, [eax + 1];mov edx, dword [ebp - ];mov eax, dword [edx + ebx*8 - 8]": 3,
                "push ecx;push 8;mov dl, byte [ebp - ];and edx, ;mov dword [ebp - ], edx": 3,
                "lea ecx, [edi - 8];mov eax, dword [];add esp, ;mov edx, dword [ecx + 4];mov ebx, edx": 3,
                "or eax, 3;mov dword [], eax;lea edx, [ebx*4 + ];mov eax, dword [edx - 4];mov dword [ecx + 8], eax": 3,
                "sub eax, ebp;mov edi, dword [eax + 8];mov edx, dword [eax + ];mov ecx, dword [edi + ];cmp ecx, eax": 3,
                "mov dword [eax + 8], edx;add ebx, ebp;mov eax, dword [];mov dword [ecx + ], ;mov dword [ecx + 8], eax": 2,
                "mov eax, dword [eax + 4];and eax, ;cmp eax, dword [];jb ;mov edx, ": 2,
                "push eax;push ecx;sub dword [], eax;call fcn.0805205d;add esp, ": 2,
                "lea eax, [esp + ];push eax;push 6;call fcn.08051b37;add esp, ": 2,
                "cmp byte [], 3;jne ;sub esp, ;mov byte [], 4;push ": 2,
                "jbe ;mov dword [], eax;lea ebx, [edx + 8];jmp ;mov eax, dword [esp]": 1,
                "je ;push ecx;mov eax, dword [esp + ];sub eax, 8;push eax": 1,
                "cmp ecx, 1;ja ;dec ecx;jne ;movsx eax, byte [edx]": 1,
                "and edx, ;shr eax, ;add eax, edx;movzx edx, word [ebp - ];add eax, edx": 2,
                "shr eax, ;add eax, edx;movzx edx, word [ebp - ];add eax, edx;mov dx, word [ebp - ]": 2,
                "add eax, edx;mov edx, eax;shr edx, ;jne ;xor eax, ": 2,
                "xor eax, ;pop edx;and eax, ;pop ecx;pop ebx": 2,
                "mov al, byte [edx];add ebx, eax;jmp ;push ebp;mov ebp, esp": 2,
                "cmp edi, edx;jg ;dec edx;cmp edx, ;je ": 3,
                "pop ebp;ret;push ebp;mov ebp, esp;sub esp, ": 3,
                "lea edx, [ebp - ];push ;push eax;push edx;call fcn.0804fc0a": 1,
                "mov eax, esi;sar edx, ;add esi, 2;idiv ecx;mov ecx, dword [ebp - ]": 1,
                "push edi;push esi;push ebx;sub esp, ;push 0": 1,
                "push ebx;sub esp, ;push 0;call fcn.0804fcfa;mov esi, eax": 1,
                "call fcn.0805022d;add esp, ;mov ebx, eax;cmp eax, ;je ": 1,
                "call fcn.080500e3;add esp, ;sub esp, ;push 5;call fcn.080515e8": 1,
                "mov dword [esp], 7;call fcn.0804f070;pop ebx;pop edi;push 0": 1,
                "pop edx;push 0;push 7;call fcn.0804efb0;pop ecx": 1,
                "push ebx;call fcn.0804f5b0;mov edi, eax;pop eax;lea eax, [ebp - ]": 1,
                "call fcn.0804f070;pop ecx;pop edi;push 0;push 6": 1,
                "test eax, eax;je ;sub esp, ;push 6;call fcn.0804f060": 1,
                "add esp, ;mov edx, eax;test eax, eax;je ;mov al, byte [edx + ]": 1,
                "mov dword [ebp - ], eax;mov dword [ebp - ], edx;cmp esi, eax;jl ;sub esp, ": 1,
                "add esp, ;cmp eax, ;jle ;mov esi, ;jmp ": 1,
                "je ;xor eax, eax;mov ebx, dword [ebp - ];mov al, byte [ebp - ];mov esi, dword [ebp - ]": 2,
                "mov eax, dword [ebp - ];cmp dword [ebp - ], eax;jne ;jmp ;push ebp": 2,
                "mov cl, dl;inc edx;mov dword [], eax;push ebp;mov ebp, esp": 1,
                "inc edx;mov dword [], eax;push ebp;mov ebp, esp;push edi": 1,
                "add esp, ;cmp byte [edx], 0;je ;mov eax, dword [ebp - ];lea esp, [ebp - ]": 2,
                "mov ax, word [ebp - ];test ax, ax;je ;ror ax, 8;mov word [ebp - ], ax": 1,
                "test ax, ax;je ;ror ax, 8;mov word [ebp - ], ax;jmp ": 1,
                "mov eax, ebx;lea ecx, [ebp - ];lea edx, [ebp - ];mov edi, ebx;call fcn.0804ead0": 1,
                "mov dx, word [edi + 8];mov eax, edx;ror ax, 8;cmp ax, 4;jne ": 1,
                "lea eax, [eax*4 + 4];push eax;mov eax, dword [ecx + 4];push ebp;mov ebp, esp": 1,
                "mov dword [ecx], eax;add ecx, ;mov eax, dword [esp + ];mov edx, dword [esp + ];add eax, 4": 2,
                "je ;mov eax, dword [ebx + ebp + 4];mov dword [ebx + 4], ebp;and eax, 1;test eax, eax": 2,
                "mov edx, dword [ebx + 8];mov eax, dword [ebx + ];mov esi, dword [edx + ];cmp esi, ebx;jne ": 2,
                "or eax, 1;mov dword [edx + ], ecx;mov dword [ecx + 4], eax;mov eax, dword [esp + ];mov dword [ecx + 8], edx": 2,
                "jmp ;lea eax, [edi + ebp];or eax, 1;mov dword [ecx + 4], eax;mov edx, dword [esp + ]": 2,
                "lea eax, [edi + ebp];or eax, 1;mov dword [ecx + 4], eax;mov edx, dword [esp + ];mov dword [edx + ], ecx": 2,
                "mov dword [edx + ], ecx;mov ecx, dword [esp + ];test ecx, ecx;jne ;mov ecx, dword [esp + ]": 2,
                "mov eax, dword [esp + ];or dword [eax + ], 1;mov dword [eax + ], 0;mov dword [eax + ], ;mov dword [eax + ], ": 2,
                "call fcn.080520c1;mov dword [esp], 0;call fcn.080520c1;add esp, ;cmp eax, ": 1,
                "je ;mov ecx, edi;sub ecx, eax;je ;mov eax, dword [ebp + ]": 1,
                "mov dword [esi + ], eax;mov eax, dword [esp + ];add esp, ;mov dword [esi + ], eax;sub esp, ": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "C)QQWP": 1,
                "@t%RRj": 1,
                "xAPPSh": 1,
                "\\$Th<0": 1,
                "\\$0PPj": 1,
                "t$$hl0": 1,
                "u%WWSS": 1,
                "POST /cdn-cgi/": 1,
                "HTTP/1.1": 1,
                "User-Agent:": 1,
                "Cookie:": 1,
                "/proc/net/tcp": 1,
                "/dev/watchdog": 1,
                "/dev/misc/watchdog": 1,
                "abcdefghijklmnopqrstuvw012345678": 1,
                "AJCLEGOG": 2,
                "PGRMPV": 1,
                "NKQVGLKLE": 1,
                "uEzAs\"": 1,
                "FGNGVGF": 1,
                "CLKOG\"": 1,
                "QVCVWQ\"": 1,
                "pgrmpv": 1,
                "jvvrdnmmf\"": 1,
                "nmnlmevdm\"": 1,
                "XMNNCPF\"": 1,
                "egvnmacnkr\"": 1,
                "QJGNN\"": 1,
                "GLC@NG\"": 1,
                "Q[QVGO\"": 1,
                "@WQ[@MZ": 3,
                "okpck\"": 1,
                "CRRNGV": 1,
                "DMWLF\"": 1,
                "LAMPPGAV\"": 1,
                "vqMWPAG": 1,
                "gLEKLG": 1,
                "sWGP[\"": 1,
                "PGQMNT": 1,
                "LCOGQGPTGP": 1,
                "aMLLGAVKML": 1,
                "CNKTG\"": 1,
                "QGVaMMIKG": 1,
                "PGDPGQJ": 1,
                "NMACVKML": 1,
                "AMMIKG": 1,
                "AMLVGLV": 1,
                "NGLEVJ": 1,
                "VPCLQDGP": 1,
                "GLAMFKLE": 1,
                "AJWLIGF\"": 1,
                "AMLLGAVKML": 1,
                "QGPTGP": 2,
                "FMQCPPGQV\"": 1,
                "ANMWFDNCPG": 1,
                "LEKLZ\"": 1,
                "cAAGRV": 2,
                "CRRNKACVKML": 3,
                "nCLEWCEG": 1,
                "aMLVGLV": 1,
                "WPNGLAMFGF\"": 1,
                "oMXKNNC": 5,
                "uKLFMUQ": 4,
                "cRRNGuG@iKV": 5,
                "aJPMOG": 4,
                "qCDCPK": 5,
                "oCAKLVMQJ": 1,
                "tGPQKML": 1,
                "/dev/null": 1,
                ".shstrtab": 1,
                ".rodata": 1,
                ".ctors": 1,
                ".dtors": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=----- name=": 1,
                "perm=--r-x name=.init": 1,
                "perm=--r-x name=.text": 1,
                "perm=--r-x name=.fini": 1,
                "perm=--r-- name=.rodata": 1,
                "perm=--rw- name=.ctors": 1,
                "perm=--rw- name=.dtors": 1,
                "perm=--rw- name=.data": 1,
                "perm=--rw- name=.bss": 1,
                "perm=----- name=.shstrtab": 1,
                "perm=m-r-x name=LOAD0": 1,
                "perm=m-rw- name=LOAD1": 1,
                "perm=m-rw- name=GNU_STACK": 1,
                "perm=m-rw- name=ehdr": 1,
                "type=program": 1,
                "arch     x86": 1,
                "binsz    45196": 1,
                "bintype  elf": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    ELF32": 1,
                "crypto   false": 1,
                "endian   little": 1,
                "havecode true": 1,
                "lang     c": 1,
                "linenum  false": 1,
                "lsyms    false": 1,
                "machine  Intel 80386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       true": 1,
                "os       linux": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   false": 1,
                "rpath    NONE": 1,
                "static   true": 1,
                "stripped true": 1,
                "subsys   linux": 1,
                "va       true": 1,
                "0x00000000  ELF MAGIC   0x464c457f": 1,
                "0x00000004  Type        0x0101": 1,
                "0x00000006  Machine     0x0001": 1,
                "0x00000008  Version     0x00000000": 1,
                "0x0000000c  Entrypoint  0x00000000": 1,
                "0x00000010  PhOff       0x00030002": 1,
                "0x00000014  ShOff       0x00000001": 1,
                "45196": 1
            }
        }
    ]
}