{
    "filepath": "/corpus/benign/096c861070b5d48ef221d59411b2fedd3c87a8f1",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "59ddfc876d2cea215c8639124368c895"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "je  <.text+>;fmul %st();fxch %st();jmp  <.text+>;fxch %st()": 1,
                "fstp %st();testl %edx, %edx;je  <.text+>;fdivrs ;jmp  <.text+>": 1,
                "fldz;jmp  <.text+>;fld;popl %ebp;retl": 1,
                "movl %esi, %eax;orl $, %eax;movl %eax, (%ebx);imull %edi, %ecx;movl %ecx, (%esp)": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 11,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl (%ebp), %ebx;movl (%ebp), %edx": 1,
                "movl $, (%esp);calll  <png_get_io_chunk_name+>;movl %eax, (%edi);movl %eax, %edi;movl $, %edx": 1,
                "movb $-, %dl;testl $, %edi;je  <png_info_init_+>;movw $, (%edi);addl $, %edi": 1,
                "movl $, %eax;rep  stosl %eax, %es:(%edi);testb $, %dl;je  <png_info_init_+>;movw $, (%edi)": 1,
                "movl %edx, (%esp);movl (%eax), %eax;movl %eax, (%esp);movl $, (%esp);calll  <png_get_io_chunk_name+>": 1,
                "calll - <png_info_init_>;movl -(%ebp), %eax;jmp  <png_create_info_struct+>;movl $, %eax;leave": 1,
                "cmpl $, (%ebp);jne  <png_data_freer+>;movl (%ebp), %edx;notl %edx;andl %edx, (%eax)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %edi;movl (%ebp), %ebx;testl %ebx, %ebx": 2,
                "testl %ebx, %ebx;je  <png_free_data+>;testl %edi, %edi;je  <png_free_data+>;movl (%ebp), %eax": 1,
                "cmpl $-, (%ebp);jne  <png_free_data+>;movl $, %esi;cmpl $, (%ebx);jg  <png_free_data+>": 1,
                "movl %edi, (%esp);calll  <png_free>;movl (%ebx), %eax;movl $, (%eax,%esi);jmp  <png_free_data+>": 2,
                "movl (%ebx), %eax;movl $, (%eax,%esi);jmp  <png_free_data+>;movl %esi, (%esp);movl $, (%esp)": 1,
                "movl %edi, (%esp);calll  <png_free>;movl (%ebx), %eax;movl %eax, (%esp);movl %edi, (%esp)": 3,
                "calll  <png_free>;movl $, (%ebx);movl $, (%ebx);cmpl $, (%ebx);je  <png_free_data+>": 1,
                "movl (%eax,%esi,), %eax;movl %eax, (%esp);movl %edi, (%esp);calll  <png_free>;movl (%ebx), %eax": 2,
                "calll  <png_free>;movl $, (%edi);movl (%ebp), %eax;andl (%ebx), %eax;testb $, %ah": 1,
                "andl %eax, (%ebx);addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "testl %esi, %esi;je  <png_destroy_info_struct+>;movl (%esi), %edi;testl %edi, %edi;je  <png_destroy_info_struct+>": 1,
                "movl %edi, (%esp);movl %ebx, (%esp);calll - <png_free_data+>;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax": 63,
                "cmpl $, %eax;ja  <png_convert_to_rfc+>;movb $, (%edi,%eax);addl $, %eax;movzbl (%ebx), %edx": 1,
                "movl %esp, %ebp;movl $, %eax;popl %ebp;retl;pushl %ebp": 7,
                "movzbl (%eax,%edx), %ebx;cmpb %bl, (%esi,%edx);je  <png_get_libpng_ver+>;movl (%ebp), %ebx;orl $, (%ebx)": 1,
                "movl $, (%esp);calll - <png_get_header_ver>;movl %eax, (%esp);movl %esi, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %eax": 4,
                "calll  <png_write_chunk+>;testl %eax, %eax;jne  <png_handle_as_unknown+>;movzbl (%ebx), %eax;jmp  <png_handle_as_unknown+>": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <png_handle_as_unknown>;leave": 1,
                "subl $, %esp;movl (%ebp), %eax;testl %eax, %eax;je  <png_reset_zstream+>;addl $, %eax": 1,
                "testb %al, %al;jne  <png_access_version_number+>;cmpl $, %esi;jg  <png_access_version_number+>;cmpl $, %esi": 1,
                "jne  <png_access_version_number+>;cmpl $, %esi;jg  <png_access_version_number+>;cmpl $, %esi;jne  <png_access_version_number+>": 1,
                "cmpl $, %esi;jne  <png_access_version_number+>;movl $, (%esp);movl %ebx, (%esp);calll  <png_warning>": 1,
                "cmpl $, (%ebp);jg  <png_access_version_number+>;cmpl $, %esi;je  <png_access_version_number+>;cmpl $, %esi": 1,
                "je  <png_access_version_number+>;cmpl $, %esi;je  <png_access_version_number+>;cmpl $, %esi;jne  <png_access_version_number+>": 1,
                "calll  <png_warning>;movl $, %edi;cmpl $, (%ebp);jle  <png_access_version_number+>;movl $, (%esp)": 1,
                "je  <png_access_version_number+>;movl $, (%esp);movl %ebx, (%esp);calll  <png_warning>;testb $, (%ebx)": 1,
                "orl $, %eax;jmp  <png_access_version_number+>;orl $, %eax;orl %ecx, %eax;jmp  <png_access_version_number+>": 1,
                "jne  <png_access_version_number+>;orl $, %eax;jmp  <png_access_version_number+>;orl $, %eax;addl $, %edx": 1,
                "testl %eax, %eax;je  <png_access_version_number+>;movl -(%ebp), %eax;cmpl %ebx, %eax;je  <png_access_version_number+>": 1,
                "fchs;fstpl -(%ebp);movb $, (%esi);addl $, %esi;subl $, (%ebp)": 1,
                "sahf;jb  <png_access_version_number+>;leal -(%ebp), %eax;movl %eax, (%esp);fstpl (%esp)": 1,
                "fstpl -(%ebp);jmp  <png_access_version_number+>;fstp %st();leal (%edi), %ebx;movl %ebx, %eax": 1,
                "calll - <.text>;fldl ;fucomp %st();fnstsw %ax;sahf": 1,
                "fstpl (%esp);calll *;jmp  <png_access_version_number+>;fadds ;fstpl (%esp)": 1,
                "movl %eax, -(%ebp);fildl -(%ebp);subl $, %edi;jne  <png_access_version_number+>;fstp %st()": 1,
                "addl $, (%ebp);movl $, -(%ebp);movl %eax, %esi;jmp  <png_access_version_number+>;addl $, %eax": 1,
                "sahf;jp  <png_access_version_number+>;fucomp %st();fnstsw %ax;sahf": 1,
                "jmp  <png_access_version_number+>;fstp %st();fxch %st();jmp  <png_access_version_number+>;fxch %st()": 1,
                "testl %eax, %eax;jne  <png_access_version_number+>;movb $, (%esi);addl $, %esi;subl $, (%ebp)": 1,
                "addl $, %esi;subl $, (%ebp);fxch %st();subl $, %eax;movl %eax, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);jle  <png_access_version_number+>;fldl ;fxch %st();fucom %st()": 1,
                "fldl ;fxch %st();fucom %st();fnstsw %ax;fstp %st()": 3,
                "fstp %st();movl %esi, %ecx;jmp  <png_access_version_number+>;fstp %st();movl %esi, %ecx": 1,
                "cmpl %ecx, -(%ebp);jle  <png_access_version_number+>;testl %ecx, %ecx;jle  <png_access_version_number+>;movl %ecx, %eax": 1,
                "subl $, %eax;movzbl -(%ebp,%eax), %edx;movb %dl, (%ebx);addl $, %ebx;testl %eax, %eax": 1,
                "jne - <png_access_version_number+>;addl %ecx, %edi;movb $, (%edi);jmp  <png_access_version_number+>;fstp %st()": 1,
                "sahf;jae  <png_access_version_number+>;movb $, (%esi);movb $, (%esi);jmp  <png_access_version_number+>": 1,
                "testl %eax, %eax;jns  <png_access_version_number+>;movb $, (%esi);addl $, %esi;negl %ebx": 1,
                "ja  <png_access_version_number+>;testl %ebx, %ebx;je  <png_access_version_number+>;movl $, %edi;movl $, %ecx": 1,
                "movb %al, -(%ebp,%ecx);addl $, %ecx;testl %ebx, %ebx;je  <png_access_version_number+>;cmpl $, %edi": 1,
                "addl $, %ecx;testl %ebx, %ebx;je  <png_access_version_number+>;cmpl $, %edi;jne  <png_access_version_number+>": 1,
                "subl $, %ecx;movzbl -(%ebp,%ecx), %edx;movb %dl, (%eax);addl $, %eax;cmpl $, %ecx": 1,
                "cmpl $, %edi;ja  <png_access_version_number+>;movb $, (%esi);leal (%esi), %ebx;cmpl $, %ecx": 1,
                "fnstsw %ax;fstp %st();sahf;ja  <png_access_version_number+>;flds ": 1,
                "fnstsw %ax;sahf;jbe  <png_access_version_number+>;fstp %st();jmp  <png_access_version_number+>": 1,
                "jbe  <png_access_version_number+>;fstp %st();jmp  <png_access_version_number+>;fstp %st();movl (%ebp), %eax": 1,
                "fstp %st();movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movzwl -(%ebp), %eax;movb $, %ah;movw %ax, -(%ebp);movl (%ebp), %eax;fldcw -(%ebp)": 1,
                "movl $, %edx;testl %eax, %eax;je  <png_access_version_number+>;movl -(%ebp), %eax;addl %edi, %eax": 1,
                "movl $, %eax;cmpl $, %ebx;ja  <png_access_version_number+>;testl %esi, %esi;js  <png_access_version_number+>": 1,
                "movl $, %eax;cmpl %esi, -(%ebp);jl  <png_access_version_number+>;cmpl $, %edi;ja  <png_access_version_number+>": 1,
                "movl %edx, -(%ebp);movl $, (%esp);movl %eax, (%esp);movl %edx, (%esp);leal -(%ebp), %eax": 2,
                "movl $, %eax;testl %edx, %edx;je  <png_access_version_number+>;movl %ebx, %eax;subl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;subl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;subl -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, (%esp);calll - <png_access_version_number+>": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %edi": 2,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %edi;movl %esi, %ecx": 1,
                "andl $, %esi;movl %edi, %edx;shrl $, %edx;andl $, %edi;movl %esi, %ebx": 1,
                "imull %ecx, %edi;imull %edx, %esi;addl %edi, %esi;addl %esi, %eax;andl $, %ebx": 1,
                "je  <png_access_version_number+>;cmpl $, (%ebp);jle  <png_access_version_number+>;movl (%ebp), %eax;shrl $, %eax": 1,
                "jle  <png_access_version_number+>;movl (%ebp), %eax;shrl $, %eax;testb %al, %al;jne  <png_access_version_number+>": 1,
                "testb %al, %al;jne  <png_access_version_number+>;movl %ebx, %eax;shrl $, %eax;testb %al, %al": 1,
                "testb %al, %al;jne  <png_access_version_number+>;movl (%ebp), %eax;shrl $, %eax;testb %al, %al": 4,
                "jle  <png_access_version_number+>;movl $, (%esp);movl %esi, (%esp);calll  <png_warning>;movl $, %edi": 4,
                "movl %eax, (%esp);movl (%ebp), %eax;subl %ebx, %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "subl %ebx, %eax;movl %eax, (%esp);movl (%ebp), %eax;subl (%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <png_access_version_number+>;leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %eax;subl %ebx, %eax;movl %eax, (%esp);calll - <png_access_version_number+>;movl -(%ebp), %eax": 1,
                "cmpb $, (%eax);jne  <png_access_version_number+>;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "addl $, %edx;cmpl $, %edx;jne - <png_access_version_number+>;addl $, %esp;popl %ebx": 1,
                "cmpl $, -(%ebp);je  <png_access_version_number+>;movl $, %esi;movl -(%ebp), %edx;movl %edx, -(%ebp)": 1,
                "je  <png_access_version_number+>;movl $, %esi;movl -(%ebp), %edx;movl %edx, -(%ebp);movl $, -(%ebp)": 1,
                "fmuls ;fadds ;fstpl (%esp);movl , %eax;calll *%eax": 1,
                "cmpl $, %ebx;jne - <png_access_version_number+>;jmp  <png_access_version_number+>;movl $, %ebx;movl -(%ebp), %ecx": 1,
                "cmpl $, %ebx;jne - <png_access_version_number+>;movl -(%ebp), %esi;addl $, %esi;cmpl -(%ebp), %esi": 1,
                "movl (%eax,%esi,), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <png_free>;addl $, %esi": 3,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;cmpl $, (%eax)": 1,
                "testl %edx, %edx;jle  <png_access_version_number+>;movl %edx, (%esp);movl (%ebp), %edx;movl (%edx), %eax": 2,
                "movl %edx, (%esp);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp);calll - <png_access_version_number+>": 2,
                "movl (%ebx), %eax;movl (%ebp), %edx;addl $, %edx;movl %eax, %ecx;movl (%ebp), %eax": 1,
                "movb $, -(%ebp);jmp  <png_access_version_number+>;movl (%ebp), %edx;fildl (%edx);fmull ": 1,
                "jmp  <png_access_version_number+>;movl (%ebp), %edx;fildl (%edx);fmull ;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %edx;fildl (%edx);fmull ;movl %eax, -(%ebp);fildl -(%ebp)": 1,
                "fstp %st();movl $, -(%ebp);movzbl -(%ebp), %edx;movl $, %eax;subl %edx, %eax": 1,
                "movl %eax, %ebx;movzbl -(%ebp), %ecx;shll %cl, %ebx;movl %ebx, -(%ebp);movl $, %ecx": 1,
                "movl %ebx, -(%ebp);movl $, %ecx;subl %edx, %ecx;shll %cl, %eax;subl $, %eax": 1,
                "addl $, %edx;movl $, %eax;mull %edx;shrl $, %edx;addl $, %edx": 1,
                "movl (%edi,%eax,), %eax;movw $, (%eax,%edx,);addl $, %ebx;cmpl -(%ebp), %ebx;jne - <png_access_version_number+>": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);jmp - <png_access_version_number+>;movl $, %eax;jmp  <png_access_version_number+>": 1,
                "movl $, %eax;movb %al, -(%ebp);cmpb $, %al;jbe  <png_access_version_number+>;movb $, -(%ebp)": 1,
                "movb $, -(%ebp);movzbl -(%ebp), %ecx;movl %ecx, -(%ebp);movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "movl %esi, %edx;cmpl $, -(%ebp);jne  <png_access_version_number+>;movb $, (%esi,%eax);jmp  <png_access_version_number+>": 1,
                "jmp  <png_access_version_number+>;movb %bl, (%edx,%ecx);addl $, %ecx;cmpl %eax, %ecx;je  <png_access_version_number+>": 1,
                "movb %bl, (%edx,%eax);leal (%eax), %ecx;addl $, %eax;movl -(%ebp), %esi;subl -(%ebp), %esi": 1,
                "jne  <png_access_version_number+>;movl $, %eax;mull %esi;shrl $, %edx;leal (%edx,%edx,), %eax": 1,
                "movl $, -(%ebp);movl $, %eax;mull %esi;shrl $, %edx;leal (%edx,%edx,), %eax": 1,
                "jae  <png_access_version_number+>;cmpl -(%ebp), %ebx;jl - <png_access_version_number+>;testl %esi, %esi;jne - <png_access_version_number+>": 1,
                "movl , %ebx;addl $, %ebx;movl %ebx, (%esp);calll *;movl %ebx, (%esp)": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;leal -(%eax), %edx": 1,
                "cmpl $, %edx;ja  <png_warning+>;movl (%ebp), %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %eax": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %eax;testl %eax, %eax": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <png_access_version_number+>;movl %eax, %edx;cmpl %ebx, %edx": 1,
                "je  <png_warning+>;movl $, %ecx;movl %eax, %ebx;movl %edi, %eax;movl %ebx, %edi": 1,
                "movb %bl, -(%ebp,%ecx);addl $, %ecx;cmpl $, %ecx;je  <png_warning+>;movzbl (%edx,%ecx), %ebx": 1,
                "jne - <png_warning+>;jmp  <png_warning+>;movl $, %edx;movb $, -(%ebp,%edx);leal -(%ebp), %eax": 1,
                "movl %esp, %ebp;subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx": 20,
                "movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp;popl %ebp;retl": 25,
                "movl %edx, (%eax);jmp  <png_set_longjmp_fn+>;movl $, %eax;popl %ebp;retl": 1,
                "calll *%edx;calll  <png_write_chunk+>;pushl %ebp;movl %esp, %ebp;pushl %esi": 1,
                "je  <png_error+>;movl %esi, (%esp);movl %ebx, (%esp);calll *%eax;testl %esi, %esi": 1,
                "movl %ebx, (%esp);calll *%eax;testl %esi, %esi;jne  <png_error+>;movl $, %esi": 1,
                "calll  <png_write_chunk+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_longjmp>;pushl %ebp": 1,
                "calll - <png_error>;pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax": 1,
                "movl (%ebp), %edx;testb $-, (%eax);je  <png_chunk_benign_error+>;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "nop;nop;pushl %ebp;movl %esp, %ebp;subl $, %esp": 7,
                "andl -(%ebp), %eax;jmp  <png_get_error_ptr+>;movl $, %eax;retl;leave": 1,
                "movl (%ebp), %edx;testl %edx, %edx;je  <png_get_valid+>;cmpl $, (%ebp);je  <png_get_valid+>": 1,
                "jmp  <png_get_rows+>;movl $, %eax;popl %ebp;retl;pushl %ebp": 1,
                "je  <png_get_color_type+>;cmpl $, (%ebp);je  <png_get_color_type+>;movzbl (%eax), %eax;jmp  <png_get_color_type+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax;je  <png_get_interlace_type+>": 1,
                "testl %eax, %eax;je  <png_get_compression_type+>;cmpl $, (%ebp);je  <png_get_compression_type+>;movzbl (%eax), %eax": 1,
                "je  <png_get_compression_type+>;cmpl $, (%ebp);je  <png_get_compression_type+>;movzbl (%eax), %eax;jmp  <png_get_compression_type+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;testl %edx, %edx;je  <png_get_y_pixels_per_meter+>": 1,
                "cmpb $, (%edx);jne  <png_get_y_pixels_per_meter+>;movl (%edx), %eax;jmp  <png_get_y_pixels_per_meter+>;movl $, %eax": 1,
                "jne  <png_get_y_pixels_per_meter+>;movl (%edx), %eax;jmp  <png_get_y_pixels_per_meter+>;movl $, %eax;popl %ebp": 1,
                "jne  <png_get_pixels_per_meter+>;movl (%edx), %eax;cmpl (%edx), %eax;setne %dl;movzbl %dl, %edx": 1,
                "movl $, %ebx;movl %ecx, -(%ebp);movl %ebx, -(%ebp);fildll -(%ebp);movl $, %edx": 1,
                "fildll -(%ebp);movl $, %edx;movl %eax, -(%ebp);movl %edx, -(%ebp);fildll -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;testl %edx, %edx;je  <png_get_x_offset_microns+>": 1,
                "je  <png_get_y_offset_microns+>;movl $, %eax;testb $, (%edx);je  <png_get_y_offset_microns+>;cmpb $, (%edx)": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <png_get_y_pixels_per_meter>;calll - <png_get_error_ptr+>": 1,
                "movl %ebx, (%esp);calll - <png_get_y_offset_microns>;movl %eax, %edx;movl %ebx, %eax;calll - <png_get_error_ptr+>": 1,
                "movzwl -(%ebp), %eax;movb $, %ah;movw %ax, -(%ebp);fldcw -(%ebp);fistpll -(%ebp)": 2,
                "testl %edx, %edx;je  <png_get_cHRM_XYZ_fixed+>;cmpl $, (%ebp);je  <png_get_cHRM_XYZ_fixed+>;movl $, %eax": 1,
                "testl %edx, %edx;je  <png_get_cHRM_XYZ_fixed+>;cmpl $, (%ebp);je  <png_get_cHRM_XYZ_fixed+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl (%ebp), %edx;movl %eax, (%edx);cmpl $, (%ebp);je  <png_get_cHRM_XYZ_fixed+>": 4,
                "movl (%ebp), %edx;testl %edx, %edx;je  <png_get_cHRM+>;cmpl $, (%ebp);je  <png_get_cHRM+>": 1,
                "fildl (%edx);fmull ;movl (%ebp), %eax;fstpl (%eax);cmpl $, (%ebp)": 7,
                "fmull ;movl (%ebp), %eax;fstpl (%eax);cmpl $, (%ebp);je  <png_get_cHRM+>": 7,
                "fstpl (%eax);cmpl $, (%ebp);je  <png_get_cHRM+>;fildl (%edx);fmull ": 7,
                "movl $, %edx;movl %edx, %eax;addl $, %esp;popl %ebx;popl %esi": 2,
                "jmp  <png_get_gAMA_fixed+>;movl $, %eax;popl %ebp;retl;pushl %ebp": 1,
                "testb $, (%edx);je  <png_get_sRGB+>;cmpl $, (%ebp);je  <png_get_sRGB+>;movzbl (%edx), %eax": 1,
                "testl %edx, %edx;je  <png_get_iCCP+>;cmpl $, (%ebp);je  <png_get_iCCP+>;movl $, %eax": 1,
                "cmpl $, (%ebp);je  <png_get_iCCP+>;cmpl $, (%ebp);je  <png_get_iCCP+>;cmpl $, (%ebp)": 2,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl (%ebp), %edx;testl %eax, %eax": 5,
                "je  <png_get_IHDR+>;cmpl $, (%ebp);je  <png_get_IHDR+>;movl (%eax), %edx;movl (%ebp), %ecx": 1,
                "je  <png_get_IHDR+>;movl (%eax), %edx;movl (%ebp), %ecx;movl %edx, (%ecx);movl (%eax), %edx": 1,
                "movl %edx, (%ecx);movl (%eax), %edx;movl (%ebp), %ecx;movl %edx, (%ecx);movzbl (%eax), %edx": 1,
                "movl %edx, (%ecx);movzbl (%eax), %edx;movl %edx, (%esp);movzbl (%eax), %edx;movl %edx, (%esp)": 1,
                "movl %edx, (%esp);movzbl (%eax), %edx;movl %edx, (%esp);movl (%eax), %edx;movl %edx, (%esp)": 1,
                "movzbl (%eax), %edx;movl %edx, (%esp);movl (%eax), %edx;movl %edx, (%esp);movl (%eax), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %edx;testl %edx, %edx;je  <png_get_oFFs+>": 1,
                "movl (%ebp), %edx;testl %edx, %edx;je  <png_get_oFFs+>;cmpl $, (%ebp);je  <png_get_oFFs+>": 1,
                "cmpl $, (%ebp);je  <png_get_pCAL+>;cmpl $, (%ebp);je  <png_get_pCAL+>;movl (%edx), %eax": 1,
                "je  <png_get_pCAL+>;cmpl $, (%ebp);je  <png_get_pCAL+>;movl (%edx), %eax;movl (%ebp), %ecx": 1,
                "movzbl (%edx), %eax;movl (%ebp), %ecx;movl %eax, (%ecx);movzbl (%edx), %eax;movl (%ebp), %ecx": 1,
                "movl (%ebp), %esi;movl (%ebp), %ebx;testl %ebx, %ebx;je  <png_get_sCAL_fixed+>;testl %esi, %esi": 1,
                "movl %esi, (%esp);calll - <png_access_version_number+>;movl (%ebp), %edx;movl %eax, (%edx);movl (%ebx), %eax": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);movl $, %eax;jmp  <png_get_sCAL_fixed+>;movl $, %eax": 1,
                "movl (%ebp), %eax;movl %ecx, (%eax);movl (%edx), %ecx;movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "movzbl (%edx), %eax;movl (%ebp), %edx;movl %eax, (%edx);movl $, %eax;jmp  <png_get_pHYs+>": 1,
                "je  <png_get_PLTE+>;cmpl $, (%ebp);je  <png_get_PLTE+>;movl $, %eax;testb $, (%edx)": 1,
                "movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax;jmp  <png_get_PLTE+>;movl $, %eax": 1,
                "movl $, %eax;jmp  <png_get_PLTE+>;movl $, %eax;popl %ebp;retl": 1,
                "je  <png_get_sBIT+>;cmpl $, (%ebp);je  <png_get_sBIT+>;movl $, %eax;testb $, (%edx)": 1,
                "movl $, %eax;testb $, (%edx);je  <png_get_sBIT+>;cmpl $, (%ebp);je  <png_get_sBIT+>": 1,
                "jle  <png_get_text+>;cmpl $, (%ebp);je  <png_get_text+>;movl (%eax), %ecx;movl (%ebp), %ebx": 1,
                "movl $, %eax;testb $, (%edx);je  <png_get_tIME+>;cmpl $, (%ebp);je  <png_get_tIME+>": 1,
                "testl %eax, %eax;je  <png_get_unknown_chunks+>;cmpl $, (%ebp);je  <png_get_unknown_chunks+>;testl %edx, %edx": 1,
                "movl (%eax), %eax;jmp  <png_get_user_chunk_ptr+>;movl $, %eax;popl %ebp;retl": 1,
                "movl (%eax), %eax;jmp  <png_get_user_width_max+>;movl $, %eax;popl %ebp;retl": 1,
                "testl %eax, %eax;je  <png_get_chunk_cache_max+>;movl (%eax), %eax;jmp  <png_get_chunk_cache_max+>;movl $, %eax": 1,
                "jmp  <png_get_chunk_cache_max+>;movl $, %eax;popl %ebp;retl;pushl %ebp": 1,
                "movl (%eax), %eax;jmp  <png_get_chunk_malloc_max+>;movl $, %eax;popl %ebp;retl": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %edx;movl %edx, %ecx;shrl $, %ecx": 1,
                "movb %cl, (%eax);movl %edx, %ecx;shrl $, %ecx;movb %cl, (%eax);movl %edx, %ecx": 2,
                "movl $, (%esp);movl %eax, (%esp);calll  <png_write_chunk+>;movl %ebx, %eax;addl $, %esp": 1,
                "movl (%ebp), %edx;testl %eax, %eax;je  <png_get_io_chunk_name+>;testl %edx, %edx;je  <png_get_io_chunk_name+>": 1,
                "testl %eax, %eax;je  <png_get_io_chunk_name+>;testl %edx, %edx;je  <png_get_io_chunk_name+>;movl (%ebp), %ecx": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <png_malloc_default+>;cmpl $, (%ebp);je  <png_malloc_default+>": 1,
                "je  <png_malloc_default+>;cmpl $, (%ebp);je  <png_malloc_default+>;movl %eax, (%esp);calll  <png_write_chunk+>": 1,
                "calll  <png_write_chunk+>;movl %ebx, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp": 1,
                "calll - <png_malloc>;movl %esi, (%ebx);jmp  <png_malloc_warn+>;movl $, %eax;movl -(%ebp), %ebx": 1,
                "je  <png_get_mem_ptr+>;movl (%ebx), %eax;movl (%ebp), %edx;testl %eax, %eax;je  <png_get_mem_ptr+>": 1,
                "jbe  <png_get_mem_ptr+>;movl %eax, %edi;movl %edi, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 2,
                "addl %edi, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ebp, %esp": 1,
                "movl $, (%esp);movl %edx, (%esp);calll - <png_error>;movl $, (%edx);movl $, (%edx)": 1,
                "movzbl (%ebx), %esi;movl $, %eax;subl %esi, %eax;movl (%ebx), %edx;movl %eax, %edi": 1,
                "movl %esi, (%esp);movl %edx, (%esp);calll - <png_sig_cmp>;testl %eax, %eax;je  <png_process_data_skip+>": 1,
                "je  <png_process_data_skip+>;cmpl $, %esi;ja  <png_process_data_skip+>;subl $, %edi;movl %edi, (%esp)": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;movl $, (%eax)": 1,
                "jbe  <png_process_data_skip+>;addl $, %ecx;notl %ecx;cmpl %ecx, %edx;jbe  <png_process_data_skip+>": 1,
                "calll - <png_free>;movl %edi, (%ebx);movl (%ebx), %eax;testl %eax, %eax;je  <png_process_data_skip+>": 1,
                "cmpl %eax, %edx;jbe  <png_process_data_skip+>;movl %eax, %esi;movl %esi, (%esp);movl (%ebx), %eax": 1,
                "jmp  <png_process_data_skip+>;movl $, (%esp);movl %ebx, (%esp);calll  <png_get_uint_+>;movl $, (%ebx)": 1,
                "sbbl %eax, %eax;andl %ebx, %eax;jmp  <png_process_data_pause+>;movl $, %eax;addl $, %esp": 1,
                "subl $, %esp;movl (%ebp), %edx;movl (%edx), %eax;testl %eax, %eax;je  <png_process_data_pause+>": 2,
                "movl %ebx, (%esp);calll - <png_process_data_skip+>;jmp  <png_process_data_pause+>;movl $, (%esp);leal -(%ebp), %esi": 2,
                "movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <png_get_uint_+>": 2,
                "orl %edx, %eax;movzbl -(%ebp), %edx;shll $, %edx;orl %edx, %eax;movl %eax, (%ebx)": 3,
                "cmpl (%ebx), %edx;jbe  <png_process_data_pause+>;movl %ebx, (%esp);calll - <png_process_data_skip+>;jmp  <png_process_data_pause+>": 21,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <png_get_uint_+>;movl (%ebx), %eax": 1,
                "testb $, %al;jne  <png_process_data_pause+>;jmp  <png_process_data_pause+>;orl $, (%ebx);jmp  <png_process_data_pause+>": 1,
                "cmpb $, (%ebx);jne  <png_process_data_pause+>;testb $, %al;jne  <png_process_data_pause+>;movl $, (%esp)": 2,
                "jne  <png_process_data_pause+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_error>;cmpl $, %esi": 1,
                "jne  <png_process_data_pause+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_error>;cmpb $, (%ebx)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <png_get_uint_+>;cmpl $, %esi": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx": 3,
                "movb %al, -(%ebp);movzbl (%ebx), %eax;movb %al, -(%ebp);cmpb $, %al;jbe  <png_process_data_pause+>": 1,
                "movl %ebx, (%esp);calll - <png_error>;cmpb $, (%ebx);je  <png_process_data_pause+>;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;testb $, %al;je  <png_process_data_pause+>;movzbl (%ebx), %edx;cmpb $, %dl": 1,
                "calll  <png_get_uint_+>;cmpb $, (%ebx);ja  <png_process_data_pause+>;movzbl (%ebx), %eax;jmpl *(,%eax,)": 1,
                "jmpl *(,%eax,);movl (%ebx), %eax;addl $, %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "calll - <png_process_data_pause+>;movl %ebx, (%esp);calll - <png_process_data_pause+>;subl $, %esi;je  <png_process_data_pause+>": 7,
                "movl %ebx, (%esp);calll - <png_process_data_pause+>;subl $, %esi;je  <png_process_data_pause+>;cmpb $, (%ebx)": 7,
                "cmpb $, (%ebx);je - <png_process_data_pause+>;cmpb $, (%ebx);jne  <png_process_data_pause+>;movl $, (%esp)": 4,
                "jmp  <png_process_data_pause+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_process_data_pause+>;movl %ebx, (%esp)": 4,
                "je - <png_process_data_pause+>;jmp  <png_process_data_pause+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_process_data_pause+>": 1,
                "jmp  <png_process_data_pause+>;cmpb $, (%ebx);jne - <png_process_data_pause+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "jmp - <png_process_data_pause+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_process_data_pause+>;movl %ebx, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %edx;movl (%ebp), %eax;testl %eax, %eax": 1,
                "movl (%ebx), %eax;movl %eax, (%ebx);movl $, (%esp);movl %edi, (%esp);calll  <png_write_chunk+>": 1,
                "cmpl %eax, (%ebx);jae  <png_process_data_pause+>;cmpb $, (%ebx);jbe  <png_process_data_pause+>;movl $, (%esp)": 2,
                "movl $, (%esp);movl %ebx, (%esp);calll - <png_error>;movl (%ebx), %eax;cmpl %eax, (%ebx)": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll - <png_warning>;orl $, (%ebx);jmp  <png_process_data_pause+>": 1,
                "shll $, %edx;orl %edx, %eax;movl %eax, (%ebx);orl $, (%ebx);cmpl $, %eax": 1,
                "movl %ebx, (%esp);calll - <png_sig_cmp+>;movl %esi, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 2,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <png_process_data_pause+>;subl %esi, (%ebx);subl %esi, (%ebx)": 2,
                "nop;jmp  <png_process_data_pause+>;cmpl $, %edx;je  <png_process_data_pause+>;cmpl $, %edx": 1,
                "calll - <png_process_data_skip+>;jmp  <png_process_data_pause+>;movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <png_process_data_skip+>;jmp  <png_process_data_pause+>;movl $, (%eax);leave": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;testl %eax, %eax;je  <png_progressive_combine_row+>": 1,
                "movl %eax, (%esp);calll  <png_get_uint_+>;leave;retl;pushl %ebp": 2,
                "testl %eax, %eax;je  <png_get_progressive_ptr+>;movl (%eax), %eax;jmp  <png_get_progressive_ptr+>;movl $, %eax": 1,
                "jmp  <png_get_progressive_ptr+>;movl $, %eax;popl %ebp;retl;nop": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll - <png_set_error_fn>;movl -(%ebp), %eax": 2,
                "movl -(%ebp), %eax;testl %eax, %eax;jne  <png_create_read_struct_+>;movl -(%ebp), %eax;movl $, (%eax)": 1,
                "calll - <png_malloc_warn>;movl %eax, (%ebx);movl -(%ebp), %eax;cmpl $, (%eax);jne  <png_create_read_struct_+>": 1,
                "movl -(%ebp), %eax;movl $, (%esp);movl $, (%esp);addl $, %eax;movl %eax, (%esp)": 1,
                "cmpl $-, %eax;je  <png_create_read_struct_+>;cmpl $-, %eax;jg  <png_create_read_struct_+>;cmpl $-, %eax": 1,
                "movl $, -(%ebp);jmp  <png_create_read_struct_+>;movl -(%ebp), %eax;movl $, (%esp);movl %eax, (%esp)": 3,
                "movl $, (%esp);movl %eax, (%esp);calll  <png_set_read_fn>;movl -(%ebp), %eax;jmp  <png_create_read_struct_+>": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <png_create_read_struct_>": 1,
                "je  <png_read_info+>;orb $, %ah;movl %eax, (%esi);jmp  <png_read_info+>;cmpl $, %ebx": 1,
                "jne - <png_read_info+>;jmp - <png_read_info+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "testb $, (%ebx);je  <png_read_row+>;cmpb $, (%ebx);ja  <png_read_row+>;movzbl (%ebx), %ecx": 1,
                "jne  <png_read_row+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_error>;movl (%ebx), %ecx": 1,
                "je  <png_read_row+>;jmp  <png_read_row+>;movl $, (%esp);movl %ebx, (%esp);calll  <png_get_uint_+>": 1,
                "movl %ebx, (%esp);calll  <png_get_uint_+>;movl %ebx, (%esp);calll  <png_get_uint_+>;movl %eax, (%ebx)": 1,
                "movl (%ebx), %ecx;movl %ecx, (%ebx);movl (%ebx), %edx;movl %edx, (%ebx);cmpl %eax, %ecx": 2,
                "calll - <png_benign_error>;orl $, (%ebx);orl $, (%ebx);jmp  <png_read_row+>;testl %eax, %eax": 1,
                "jne  <png_read_row+>;movl $, %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <png_error>": 1,
                "cmpb $, %al;ja  <png_read_row+>;movzbl %al, %eax;movl %eax, (%esp);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll  <png_write_chunk+>;testb $, (%ebx);je  <png_read_row+>": 1,
                "jne  <png_read_row+>;movzbl -(%ebp), %eax;movb %al, (%ebx);cmpb (%ebx), %al;jbe  <png_read_row+>": 1,
                "calll *%eax;addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "je  <png_read_rows+>;testl %esi, %esi;setne %al;testl %edi, %edi;setne %dl": 1,
                "testl %esi, %esi;setne %al;testl %edi, %edi;setne %dl;je  <png_read_rows+>": 1,
                "setne %al;testl %edi, %edi;setne %dl;je  <png_read_rows+>;testb %al, %al": 1,
                "movl %eax, (%esp);movl (%esi,%ebx,), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "addl $, %ebx;cmpl (%ebp), %ebx;jne - <png_read_rows+>;jmp  <png_read_rows+>;testb %al, %al": 1,
                "cmpb $, (%esi);je  <png_read_image+>;testb $, (%esi);jne  <png_read_image+>;movl $, (%esp)": 1,
                "jne  <png_read_image+>;movl $, (%esp);movl %esi, (%esp);calll - <png_warning>;movl (%esi), %eax": 1,
                "movl $, -(%ebp);cmpl $, -(%ebp);jg  <png_read_image+>;jmp  <png_read_image+>;movl $, (%esp)": 1,
                "je  <png_read_image+>;movl $, %ebx;cmpl $, -(%ebp);jne - <png_read_image+>;jmp - <png_read_image+>": 1,
                "testl %esi, %esi;je  <png_read_end+>;movl $, (%esp);movl %esi, (%esp);calll  <png_get_uint_+>": 1,
                "calll  <png_get_uint_+>;movl %eax, %edi;movl (%esi), %ebx;cmpl $, %ebx;jne  <png_read_end+>": 1,
                "jne  <png_read_end+>;testl %edi, %edi;jne  <png_read_end+>;testb $, (%esi);je  <png_read_end+>": 2,
                "testb $, (%esi);je  <png_read_end+>;movl $, (%esp);movl %esi, (%esp);calll - <png_benign_error>": 2,
                "movl %esi, (%esp);calll  <png_get_uint_+>;cmpl $, %ebx;jne  <png_read_end+>;orl $, (%esi)": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <png_free_data+>;testl %esi, %esi;je  <png_read_end+>": 1,
                "calll - <png_free>;movl (%ebx), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <png_free>": 14,
                "movl %ebx, (%esp);calll - <png_sig_cmp+>;movl (%ebx), %eax;movl %eax, %edx;andb $-, %dh": 1,
                "testb $, %ah;je  <png_read_end+>;movl (%ebx), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl (%ebx), %eax;movl %eax, -(%ebp);movl %ebx, %edi;movl $, %edx;testb $, %bl": 2,
                "testb $, %dl;je  <png_read_end+>;movb $, (%edi);movl %esi, (%ebx);movl -(%ebp), %eax": 1,
                "je  <png_destroy_read_struct+>;movl (%ebp), %eax;movl (%eax), %ebx;testl %ebx, %ebx;je  <png_destroy_read_struct+>": 1,
                "movl (%eax), %ebx;testl %ebx, %ebx;je  <png_destroy_read_struct+>;movl (%ebx), %eax;movl %eax, -(%ebp)": 1,
                "je  <png_destroy_read_struct+>;movl (%ebp), %eax;movl (%eax), %edi;jmp  <png_destroy_read_struct+>;movl $, %edi": 1,
                "calll - <png_free_data>;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 2,
                "je  <png_read_png+>;movl %esi, (%esp);calll  <png_set_packswap>;testl $, %edi;je  <png_read_png+>": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll  <png_set_shift>;testl $, %edi;je  <png_read_png+>": 1,
                "addl $, %eax;cmpl %eax, (%ebx);ja - <png_read_png+>;orl $, (%ebx);cmpl $, (%ebx)": 1,
                "cmpl %edi, (%ebx);jg - <png_read_png+>;movl (%ebx), %eax;movl %eax, (%esp);movl %esi, (%esp)": 1,
                "movl %eax, (%esp);calll *;cmpl %esi, %eax;je  <png_read_png+>;movl $, (%esp)": 1,
                "movl %ecx, (%esp);movl %eax, (%esp);calll *%edx;jmp  <png_read_png+>;movl $, (%esp)": 1,
                "jne  <png_set_read_fn+>;orl $, (%eax);cmpl $, %ecx;sbbl %edx, %edx;andl $, %edx": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %ebx;fldl (%ebp);fldz": 1,
                "fldz;fxch %st();fucom %st();fnstsw %ax;fstp %st()": 1,
                "fnstsw %ax;fstp %st();sahf;jbe  <png_set_read_fn+>;flds ": 1,
                "fnstsw %ax;fstp %st();sahf;ja  <png_set_read_fn+>;fldl ": 1,
                "calll - <png_error+>;fnstcw -(%ebp);movzwl -(%ebp), %eax;movb $, %ah;movw %ax, -(%ebp)": 1,
                "cmpl $, %eax;nop;leal (%esi), %esi;je  <png_set_crc_action+>;cmpl $, %eax": 1,
                "cmpl $, %eax;jne  <png_set_crc_action+>;jmp  <png_set_crc_action+>;movl (%ebx), %eax;andb $-, %ah": 1,
                "calll - <png_warning>;andl $, (%ebx);cmpl $, %esi;je  <png_set_crc_action+>;cmpl $, %esi": 1,
                "jg  <png_set_crc_action+>;cmpl $, %esi;jne  <png_set_crc_action+>;jmp  <png_set_crc_action+>;cmpl $, %esi": 1,
                "movl (%ebp), %ebx;movl (%ebp), %esi;testl %ebx, %ebx;je  <png_set_background_fixed+>;testl %esi, %esi": 1,
                "movl (%ebp), %esi;testl %ebx, %ebx;je  <png_set_background_fixed+>;testl %esi, %esi;jne  <png_set_background_fixed+>": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl %esi, %eax;movb %al, (%ebx);cmpl $, (%ebp)": 1,
                "orl $, (%ebx);jmp  <png_set_background_fixed+>;andl $, (%ebx);movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax;je  <png_set_scale_+>;orl $, (%eax)": 1,
                "je  <png_set_strip_alpha+>;orl $, (%eax);popl %ebp;retl;pushl %ebp": 1,
                "jmp  <png_set_alpha_mode_fixed+>;andl $, (%ebx);andl $, (%ebx);movl $, %edx;movl $, %edi": 1,
                "movl $, %edx;jmp  <png_set_alpha_mode_fixed+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_error>": 1,
                "movl %eax, (%ebx);movl %edi, (%ebx);testl %edx, %edx;je  <png_set_alpha_mode_fixed+>;movl $, (%ebx)": 1,
                "pushl %ebx;subl $, %esp;cmpl $, (%ebp);je  <png_set_quantize+>;movl (%ebp), %ebx": 1,
                "cmpl (%ebp), %eax;jne - <png_set_quantize+>;movl (%ebp), %esi;subl $, %esi;cmpl %esi, (%ebp)": 1,
                "jle  <png_set_quantize+>;jmp  <png_set_quantize+>;movl $, %edi;movl $, %ebx;movl %esi, -(%ebp)": 1,
                "movb %cl, (%eax);movl (%ebp), %ebx;movl (%ebx), %eax;movzbl -(%ebp), %edx;movb %dl, (%eax,%edi)": 1,
                "movb %dl, (%eax,%edi);movl $, %ebx;addl $, %edi;cmpl -(%ebp), %edi;jne - <png_set_quantize+>": 1,
                "movl -(%ebp), %esi;testl %ebx, %ebx;jne  <png_set_quantize+>;subl $, %esi;cmpl %esi, (%ebp)": 1,
                "subl $, %esi;cmpl %esi, (%ebp);jg  <png_set_quantize+>;testl %esi, %esi;jg - <png_set_quantize+>": 1,
                "jne  <png_set_quantize+>;movl (%ebp), %ecx;movl (%ebp), %edi;movl $, %esi;cmpl $, (%ebp)": 1,
                "addl $, %ebx;cmpl (%ebp), %edi;jne - <png_set_quantize+>;jmp  <png_set_quantize+>;movl (%ebp), %ebx": 1,
                "subl %ecx, %ebx;movl %ebx, -(%ebp);movzbl (%eax), %ecx;movl -(%ebp), %ebx;subl %ecx, %ebx": 1,
                "cmpl -(%ebp), %ecx;jge  <png_set_quantize+>;movl %edx, %edi;movl %ecx, -(%ebp);addl $, %edx": 1,
                "jne - <png_set_quantize+>;jmp  <png_set_quantize+>;movl $, %edi;movl %edi, %eax;movl -(%ebp), %edx": 1,
                "movl %ebx, (%esp);calll - <png_free>;movl $, (%ebx);movl (%ebp), %esi;movl %esi, (%ebp)": 1,
                "calll - <png_free>;movl $, (%ebx);movl (%ebp), %esi;movl %esi, (%ebp);jmp  <png_set_quantize+>": 1,
                "calll - <png_malloc>;movl %eax, (%esi);movl %ebx, (%esp);movl %esi, (%esp);calll - <png_malloc>": 1,
                "movb %al, (%ecx,%eax);addl $, %eax;cmpl (%ebp), %eax;jne - <png_set_quantize+>;jmp  <png_set_quantize+>": 1,
                "jge  <png_set_quantize+>;movl -(%ebp), %esi;movl %edi, -(%ebp);leal -(%edi), %ebx;movb %bl, -(%ebp)": 1,
                "movl $, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll - <png_malloc_warn>;testl %eax, %eax": 1,
                "movb %cl, (%eax);movl %eax, (%edx);addl $, -(%ebp);addl $, %esi;movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %eax;movl %esi, -(%ebp);movzbl (%edx,%eax), %edx;leal (%edx,%edx,), %edx;movl (%ebp), %ebx": 1,
                "movl %esi, -(%ebp);movzbl (%edx,%eax), %edx;leal (%edx,%edx,), %edx;movl (%ebp), %ebx;addl %edx, %ebx": 1,
                "leal (%edx,%edx,), %edx;movl (%ebp), %ebx;addl %edx, %ebx;leal (%esi,%esi,), %edx;addl (%ebp), %edx": 1,
                "movl -(%ebp), %ecx;movzbl (%edx,%ecx), %edx;movzbl -(%ebp), %ebx;movl (%edi), %ecx;movb %bl, (%ecx,%edx)": 1,
                "addl $, -(%ebp);movl -(%ebp), %esi;cmpl %esi, -(%ebp);jle - <png_set_quantize+>;movl -(%ebp), %edi": 1,
                "movl -(%ebp), %esi;cmpl %esi, -(%ebp);jle - <png_set_quantize+>;movl -(%ebp), %edi;jmp  <png_set_quantize+>": 1,
                "movl -(%ebp), %edx;movl (%edx,%esi,), %eax;testl %eax, %eax;je  <png_set_quantize+>;movl (%eax), %edi": 1,
                "movl (%edx,%esi,), %eax;testl %eax, %eax;je  <png_set_quantize+>;movl (%eax), %edi;movl %eax, (%esp)": 1,
                "movzwl (%ebp), %esi;movl (%ebp), %ebx;movw %si, (%ebx);cmpl $, (%ebp);je  <png_set_quantize+>": 1,
                "movl %ebx, -(%ebp);movl $, -(%ebp);movl -(%ebp), %eax;movzbl (%eax), %eax;movb %al, -(%ebp)": 1,
                "movl -(%ebp), %eax;cmpl %eax, -(%ebp);jge  <png_set_quantize+>;subl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %ecx, %ebx;cmpl %edi, %ecx;jge  <png_set_quantize+>;movl %edi, %ebx;addl -(%ebp), %ebx": 1,
                "jne - <png_set_quantize+>;addl $, -(%ebp);addl $, -(%ebp);movl (%ebp), %esi;cmpl %esi, -(%ebp)": 1,
                "movl (%ebp), %ebx;fldl (%ebp);fstpl -(%ebp);fldl (%ebp);fstpl (%esp)": 1,
                "fstpl (%esp);movl %ebx, %eax;calll - <png_set_read_fn+>;movl %esi, (%esp);movl %eax, (%esp)": 1,
                "movl (%ebp), %edx;movl (%ebp), %ecx;testl %ebx, %ebx;je  <png_set_rgb_to_gray_fixed+>;cmpl $, %edx": 1,
                "calll - <png_error>;cmpb $, (%ebx);jne  <png_set_rgb_to_gray_fixed+>;orl $, (%ebx);testl %ecx, %ecx": 1,
                "calll - <png_access_version_number+>;movl %eax, %esi;movl $, (%esp);fldl -(%ebp);fstpl (%esp)": 3,
                "je  <png_set_read_user_transform_fn+>;movl (%edi), %edx;testl %edx, %edx;je  <png_set_read_user_transform_fn+>;movl $, (%esp)": 1,
                "movl %eax, (%edi);jmp  <png_set_read_user_transform_fn+>;movl (%edi), %eax;testl %eax, %eax;je  <png_set_read_user_transform_fn+>": 1,
                "movl $, -(%ebp);movzbl -(%esi,%eax), %edx;cmpb $-, %dl;je  <png_set_read_user_transform_fn+>;testb %dl, %dl": 1,
                "cmpb $-, %dl;je  <png_set_read_user_transform_fn+>;testb %dl, %dl;jne  <png_set_read_user_transform_fn+>;movl $, -(%ebp)": 1,
                "movl %ecx, %eax;andl $, %eax;movl %eax, (%edi);andl $, (%edi);cmpl $, -(%ebp)": 1,
                "leal (%eax,%eax,), %eax;addl (%edi), %eax;movzbl (%eax), %edx;movw %dx, (%edi);movzbl (%eax), %edx": 1,
                "movzbl (%edi), %ecx;cmpb $, %cl;je  <png_set_read_user_transform_fn+>;cmpb $, %cl;je  <png_set_read_user_transform_fn+>": 1,
                "addl %ecx, %edx;movw %ax, (%edi);movw %ax, (%edi);movw %ax, (%edi);testb $, (%edi)": 1,
                "movw %ax, (%edi);movw %ax, (%edi);movw %ax, (%edi);testb $, (%edi);jne  <png_set_read_user_transform_fn+>": 1,
                "movw %dx, (%edi);movw %dx, (%edi);movl (%edi), %edx;movl %edx, %eax;andl $, %eax": 1,
                "movl %edx, %ecx;shll $, %ecx;addl %ecx, %edx;movw %dx, (%edi);movl (%edi), %edx": 1,
                "shll $, %ecx;addl %ecx, %edx;movw %dx, (%edi);movl (%edi), %edx;movl %edx, (%edi)": 1,
                "testl $, %eax;je  <png_set_read_user_transform_fn+>;movl (%edi), %eax;movl %eax, (%esp);calll - <png_access_version_number+>": 1,
                "movzbl (%edi), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <png_access_version_number+>;movl (%edi), %eax": 1,
                "movl %eax, (%esp);movl %edi, (%esp);calll - <png_access_version_number+>;movl (%edi), %eax;testb $-, %al": 1,
                "movl $, %esi;cmpb $, %al;jne  <png_set_read_user_transform_fn+>;movl (%edi), %esi;movl $, %ebx": 1,
                "movl (%edi), %eax;movl %eax, (%esp);calll - <png_access_version_number+>;movl %eax, %ebx;jmp  <png_set_read_user_transform_fn+>": 4,
                "movb %al, -(%ebp);movzbl (%edi), %eax;movb %al, -(%ebp);movzbl (%edi), %eax;movb %al, -(%ebp)": 1,
                "testb %al, %al;jne  <png_set_read_user_transform_fn+>;movzbl -(%ebp), %eax;movb %al, (%ebx);movzbl -(%ebp), %eax": 1,
                "movzbl -(%ebp), %eax;movl (%edi), %esi;mulb (%esi,%edx);movl $, %edx;subw -(%ebp), %dx": 1,
                "movl $, %edx;subw -(%ebp), %dx;imulw -(%ebp), %dx;leal (%eax,%edx), %edx;movzbl %dh, %eax": 1,
                "leal (%edx,%eax), %eax;movzbl %ah, %eax;movl (%edi), %edx;movzbl (%edx,%eax), %eax;movb %al, (%ebx)": 2,
                "movb %al, (%ebx);movzbl (%ebx), %eax;movl (%edi), %edx;movzbl (%edx,%eax), %eax;movb %al, (%ebx)": 2,
                "jmp  <png_set_read_user_transform_fn+>;movl $, (%esp);movl %edi, (%esp);calll - <png_error>;movl %esi, (%esp)": 1,
                "cmpl $, -(%ebp);je  <png_set_read_user_transform_fn+>;movl %esi, (%esp);movzwl (%edi), %eax;movl %eax, (%esp)": 1,
                "calll - <png_access_version_number+>;movw %ax, (%edi);movl %esi, (%esp);movzwl (%edi), %eax;movl %eax, (%esp)": 2,
                "movb %bl, (%edx);movzbl -(%ebp), %ebx;movb %bl, (%edx);jmp  <png_set_read_user_transform_fn+>;cmpb $-, %cl": 1,
                "cmpb $-, %cl;je  <png_set_read_user_transform_fn+>;movzbl %cl, %ebx;movzbl (%edx), %eax;mulb %cl": 1,
                "leal (%ebx,%eax), %eax;movzwl %ax, %ecx;movzbl %ah, %eax;addl %ecx, %eax;sarl $, %eax": 2,
                "movl $, %ecx;subl %eax, %ecx;andl $-, (%edi);leal -(%ecx), %eax;cmpl $, %eax": 1,
                "sbbl %eax, %eax;andl $-, %eax;addl $, %eax;movb %al, (%edx);movb $, (%edx)": 1,
                "movb %bl, (%edx);cmpb $, (%edx);ja  <png_set_read_user_transform_fn+>;movb $, (%edx);movw $, (%edx)": 1,
                "je  <png_set_read_user_transform_fn+>;orb $, (%edx);testl $, (%ecx);je  <png_set_read_user_transform_fn+>;andb $-, (%edx)": 1,
                "movb %al, (%edx);movzbl (%edx), %eax;mulb (%edx);movb %al, (%edx);cmpb $, %al": 1,
                "movl %ecx, -(%ebp);cmpb $, %al;je  <png_set_read_user_transform_fn+>;cmpb $, %al;je  <png_set_read_user_transform_fn+>": 1,
                "cmpl $, %ecx;jne  <png_set_read_user_transform_fn+>;subl $, %esi;movb $, %cl;jmp  <png_set_read_user_transform_fn+>": 3,
                "addl %ecx, %ecx;cmpl $, -(%ebp);je  <png_set_read_user_transform_fn+>;movl %eax, %edi;subl -(%ebp), %edi": 1,
                "subl $, %eax;movl %eax, %esi;shrl %esi;addl (%ebp), %esi;addl (%ebp), %eax": 1,
                "andl $, %ecx;cmpl $, %ecx;sbbl %ecx, %ecx;andl $, %ecx;cmpl $, -(%ebp)": 2,
                "movb $, %cl;jmp  <png_set_read_user_transform_fn+>;movl $, %ecx;subl $, %eax;cmpl %edi, %eax": 1,
                "leal (,%eax,), %ecx;movb %cl, (%edx);movzbl %al, %eax;imull -(%ebp), %eax;movl %eax, (%edx)": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %ecx": 1,
                "testl %edx, %edx;jle  <png_set_read_user_transform_fn+>;cmpl %edx, %ebx;jg  <png_set_read_user_transform_fn+>;movl $, (%ecx)": 1,
                "cmpb $, -(%ebp);je  <png_set_read_user_transform_fn+>;cmpb $, -(%ebp);jne  <png_set_read_user_transform_fn+>;jmp  <png_set_read_user_transform_fn+>": 1,
                "movl (%ebp), %eax;movzbl (%eax), %edx;shrb %dl;andl $, %edx;movb %dl, (%eax)": 1,
                "movl -(%ebp), %ecx;movl $, %esi;sarl %cl, %esi;movl %esi, %eax;shll $, %eax": 1,
                "testl %edx, %edx;je  <png_set_read_user_transform_fn+>;movl $, %ecx;movzbl -(%eax), %edi;movzbl -(%eax), %ebx": 1,
                "addl $, %ecx;cmpl %edx, %ecx;jne - <png_set_read_user_transform_fn+>;jmp  <png_set_read_user_transform_fn+>;movl (%eax), %eax": 3,
                "jmp  <png_set_read_user_transform_fn+>;movl (%eax), %eax;addl (%ebp), %eax;testl %edx, %edx;je  <png_set_read_user_transform_fn+>": 4,
                "movb %bl, -(%eax);leal -(%eax), %ebx;movl %ebx, %eax;movl %esi, %ecx;movb %cl, (%ebx)": 1,
                "jne - <png_set_read_user_transform_fn+>;popl %ebx;popl %esi;popl %edi;popl %ebp": 1,
                "cmpl %edx, %ecx;jne - <png_set_read_user_transform_fn+>;popl %ebp;retl;pushl %ebp": 1,
                "movl (%ebp), %edx;movl (%edx), %edi;movl %eax, %ecx;shrl $, %ecx;movb %cl, -(%ebp)": 1,
                "cmpb $, %dl;jne  <png_set_read_user_transform_fn+>;testb $-, (%ebp);je  <png_set_read_user_transform_fn+>;movl (%ebp), %edx": 1,
                "subl %edi, %ecx;leal (%ecx), %esi;movl -(%ebp), %ecx;movb %al, -(%ebp);movzbl -(%ebp), %ebx": 1,
                "movb %bl, -(%ecx);leal -(%ecx), %ebx;movl %ebx, %ecx;subl $, %edx;movzbl (%edx), %eax": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);jmp  <png_set_read_user_transform_fn+>;movl (%ebp), %edx;addl %edi, %edx": 1,
                "movl (%ebp), %ebx;leal (%ebx,%edi,), %ecx;leal (%ebx,%edi,), %edx;movl %edx, -(%ebp);cmpl $, %edi": 1,
                "jbe  <png_set_read_user_transform_fn+>;movl $, %ebx;movl %edi, -(%ebp);movb %al, -(%ebp);movzbl -(%ebp), %eax": 2,
                "movb %al, -(%edx);movzbl -(%ecx), %eax;movb %al, -(%edx);leal -(%edx), %esi;movl %esi, %edx": 2,
                "movl -(%ebp), %ecx;leal (%ecx,%edx,), %ecx;movl %ecx, -(%ebp);movzbl -(%ebp), %ebx;movl -(%ebp), %edx": 2,
                "movl (%ebp), %ecx;movb $, (%ecx);movb $, (%ecx);leal (,%edi,), %eax;movl %eax, (%ecx)": 3,
                "jmp  <png_set_read_user_transform_fn+>;movl (%ebp), %ebx;leal (%ebx,%edi,), %ecx;leal (%ebx,%edi,), %edx;testl %edi, %edi": 1,
                "movl (%ebp), %edx;movb $, (%edx);movb $, (%edx);leal (,%edi,), %eax;movl %eax, (%edx)": 1,
                "movb $, (%edx);movb $, (%edx);leal (,%edi,), %eax;movl %eax, (%edx);jmp  <png_set_read_user_transform_fn+>": 1,
                "movl %esi, %edx;leal -(%ecx), %ebx;movl %ebx, %ecx;movzbl (%ebx), %eax;movb %al, (%esi)": 1,
                "movl %ebx, %ecx;movzbl (%ebx), %eax;movb %al, (%esi);cmpl %edi, %ebx;jne - <png_set_read_user_transform_fn+>": 1,
                "jmp  <png_set_read_user_transform_fn+>;leal (%edi,%edi,), %ebx;movl (%ebp), %esi;addl %ebx, %esi;leal (%esi,%edi), %ecx": 1,
                "movl (%ebp), %esi;addl %ebx, %esi;leal (%esi,%edi), %ecx;testl %edi, %edi;je  <png_set_read_user_transform_fn+>": 1,
                "movzbl -(%edx), %ebx;movb %bl, -(%ecx);movzbl -(%edx), %ebx;movb %bl, -(%ecx);movzbl -(%edx), %ebx": 1,
                "jne  <png_set_read_user_transform_fn+>;testb $-, (%ebp);je  <png_set_read_user_transform_fn+>;leal (%edi,%edi), %edx;leal (%edx,%edi), %ecx": 1,
                "movb %al, -(%edx);movzbl -(%ecx), %eax;movb %al, -(%edx);movzbl -(%ecx), %eax;movb %al, -(%edx)": 4,
                "movb %bl, -(%edx);movzbl -(%ebp), %ebx;movb %bl, -(%edx);leal -(%edx), %ebx;movl %ebx, %edx": 1,
                "cmpb $, %al;jbe  <png_set_read_user_transform_fn+>;movzbl (%edx), %ebx;testb $, %bl;jne  <png_set_read_user_transform_fn+>": 1,
                "movl (%ebp), %ebx;leal -(%ebx,%ecx), %eax;leal (%eax,%ecx,), %edi;testl %ecx, %ecx;je  <png_set_read_user_transform_fn+>": 1,
                "testl %ecx, %ecx;je  <png_set_read_user_transform_fn+>;movl $, %edi;movzbl (%eax), %ebx;movb %bl, (%esi)": 1,
                "leal -(%ebx,%ecx,), %eax;testl %ecx, %ecx;je  <png_set_read_user_transform_fn+>;movl $, %edi;movzbl (%esi), %ebx": 1,
                "jne - <png_set_read_user_transform_fn+>;movzbl (%edx), %eax;addl $, %eax;movb %al, (%edx);orb $, (%edx)": 1,
                "imull %eax, %ecx;addl $, %ecx;shrl $, %ecx;movl %ecx, (%edx);popl %ebx": 1,
                "movl %eax, %edx;andl $, %edx;movl $, -(%ebp);cmpb $, %dl;jne  <png_set_read_user_transform_fn+>": 1,
                "movl $, -(%ebp);cmpb $, %dl;jne  <png_set_read_user_transform_fn+>;movl (%ebp), %ebx;movzwl (%ebx), %ebx": 1,
                "cmpb $, (%edi);jne  <png_set_read_user_transform_fn+>;movl (%ebp), %eax;cmpl $, (%eax);jne  <png_set_read_user_transform_fn+>": 1,
                "jne  <png_set_read_user_transform_fn+>;cmpl $, -(%ebp);jne  <png_set_read_user_transform_fn+>;movl $, -(%ebp);jmp  <png_set_read_user_transform_fn+>": 2,
                "movl $, %esi;movl $, -(%ebp);movl %esi, -(%ebp);movl %edx, %esi;movzbl (%eax), %edx": 1,
                "cmpb -(%ebp), %dl;je  <png_set_read_user_transform_fn+>;movzbl %dl, %edx;movzbl -(%ebp), %ebx;movzbl %cl, %ecx": 1,
                "imull -(%ebp), %esi;movzbl %cl, %ecx;imull -(%ebp), %ecx;addl %ecx, %esi;movzbl -(%ebp), %ebx": 1,
                "addl %esi, %ebx;shrl $, %ebx;movb %bl, (%edx);addl $, %edx;movl $, -(%ebp)": 1,
                "movb %cl, (%edx);addl $, %edx;addl $, %eax;addl $, %edi;cmpl -(%ebp), %edi": 2,
                "orl %ecx, %edx;cmpw %dx, %ax;jne  <png_set_read_user_transform_fn+>;cmpw %bx, %ax;jne  <png_set_read_user_transform_fn+>": 1,
                "cmpw %dx, %ax;jne  <png_set_read_user_transform_fn+>;cmpw %bx, %ax;jne  <png_set_read_user_transform_fn+>;movl (%ebp), %ebx": 1,
                "movzwl (%edx,%eax,), %eax;jmp  <png_set_read_user_transform_fn+>;movl (%ebp), %edi;movl (%edi), %edi;movl %edi, -(%ebp)": 1,
                "movl (%eax,%edi,), %edi;movl -(%ebp), %eax;movzwl (%edi,%eax,), %edi;imull -(%ebp), %edi;movl %edi, -(%ebp)": 1,
                "movzwl %cx, %ecx;imull -(%ebp), %ecx;movzwl %bx, %ebx;imull -(%ebp), %ebx;leal (%ecx,%ebx), %ebx": 1,
                "movl -(%ebp), %ecx;imull %esi, %ecx;addl %ebx, %ecx;shrl $, %ecx;movl %ecx, %ebx": 1,
                "cmpl $, -(%ebp);jne  <png_set_read_user_transform_fn+>;addl $, %eax;addl $, %edx;jmp  <png_set_read_user_transform_fn+>": 1,
                "jne - <png_set_read_user_transform_fn+>;jmp  <png_set_read_user_transform_fn+>;movl $, -(%ebp);jmp  <png_set_read_user_transform_fn+>;movl $, -(%ebp)": 1,
                "jmp  <png_set_read_user_transform_fn+>;movl $, -(%ebp);movl (%ebp), %eax;movzbl (%eax), %eax;movb %al, -(%ebp)": 1,
                "movzbl (%eax), %eax;movb %al, -(%ebp);subl $, %eax;movl (%ebp), %edx;movb %al, (%edx)": 1,
                "testl %edx, %edx;je  <png_build_grayscale_palette+>;cmpl $, %eax;je  <png_build_grayscale_palette+>;cmpl $, %eax": 1,
                "je  <png_build_grayscale_palette+>;cmpl $, %eax;jg  <png_build_grayscale_palette+>;cmpl $, %eax;jne  <png_build_grayscale_palette+>": 1,
                "movl (%edi), %esi;movl (%edi), %edx;movl %edx, -(%ebp);movl (%edi), %ebx;movl (%edi), %edx": 1,
                "je  <png_build_grayscale_palette+>;cmpb $, %dl;ja  <png_build_grayscale_palette+>;testb %dl, %dl;je  <png_build_grayscale_palette+>": 2,
                "cmpl -(%ebp), %ebx;jne - <png_build_grayscale_palette+>;jmp  <png_build_grayscale_palette+>;testl %esi, %esi;jne  <png_build_grayscale_palette+>": 1,
                "jne  <png_build_grayscale_palette+>;movl (%ebp), %esi;movl $, %eax;movl $, %edx;cmpl $, -(%ebp)": 2,
                "orl -(%ebp), %ecx;orl %edx, %ecx;shll $, %edx;orl %ecx, %edx;movl -(%ebp), %ecx": 1,
                "orl %ecx, %edx;movl -(%ebp), %ecx;movzbl (%ecx,%edx), %edx;shrb $, %dl;movzbl %dl, %edx": 2,
                "movl -(%ebp), %ecx;movzbl (%ecx,%edx), %edx;shrb $, %dl;movzbl %dl, %edx;movl %eax, %ecx": 2,
                "sarl %cl, %edi;andl %edi, %ebx;movb %bl, (%esi);movl -(%ebp), %ecx;movzwl (%ecx), %edi": 2,
                "addl -(%ebp), %ecx;movl (%ebp), %eax;movzbl (%eax), %edx;movzbl %dl, %ebx;cmpw (%edi), %bx": 1,
                "jne  <png_build_grayscale_palette+>;movzbl (%edi), %ecx;movb %cl, (%eax);movzwl (%edi), %ecx;movb %cl, (%eax)": 2,
                "movb %cl, (%eax);movzwl (%edi), %ecx;movb %cl, (%eax);jmp  <png_build_grayscale_palette+>;movzbl %cl, %esi": 1,
                "movzbl %bl, %ebx;movl %ebx, -(%ebp);movl -(%ebp), %ebx;movl (%ebx,%esi,), %ecx;movl -(%ebp), %esi": 1,
                "shrw $, %bx;movb %bl, (%eax);movb %cl, (%eax);addl $, %edx;addl $, %eax": 2,
                "movzbl (%edi), %edx;movb %dl, (%eax);movzwl (%edi), %edx;movb %dl, (%eax);addl $, %ecx": 1,
                "addl $, %eax;cmpl %ebx, %ecx;jne - <png_build_grayscale_palette+>;jmp  <png_build_grayscale_palette+>;cmpb $, (%eax)": 1,
                "jne  <png_build_grayscale_palette+>;movzbl (%eax), %edx;cmpw (%edi), %dx;jne  <png_build_grayscale_palette+>;movzwl (%edi), %edx": 1,
                "movzbl (%esi), %eax;movb %al, (%ebx);movzwl (%esi), %eax;movb %al, (%ebx);movzbl (%esi), %eax": 2,
                "movzbl (%ebx), %eax;movb %al, -(%ebp);movzbl (%ebx), %edx;movb %dl, -(%ebp);movzbl (%ebx), %eax": 1,
                "shll $, %edx;movzbl (%ebx), %eax;addl %edx, %eax;cmpw %ax, (%edi);jne  <png_build_grayscale_palette+>": 1,
                "cmpw %ax, (%edi);jne  <png_build_grayscale_palette+>;movzbl (%edi), %eax;movb %al, (%ebx);movzwl (%edi), %eax": 1,
                "movl -(%ebp), %esi;cmpl $, -(%ebp);jne  <png_build_grayscale_palette+>;jmp  <png_build_grayscale_palette+>;testl %esi, %esi": 1,
                "movl $, %ecx;subw -(%ebp), %cx;imulw (%edi), %cx;leal (%eax,%ecx), %ecx;movzwl %cx, %eax": 1,
                "shll $, %edx;movzbl (%eax), %ecx;addl %ecx, %edx;cmpw $-, %dx;jne  <png_build_grayscale_palette+>": 2,
                "movzbl (%eax), %edx;movzbl -(%ebp), %ecx;sarl %cl, %edx;movzbl (%eax), %ecx;movl -(%ebp), %ebx": 2,
                "movl -(%ebp), %ebx;movl (%ebx,%edx,), %edx;movzwl (%edx,%ecx,), %edx;movl %edx, %ecx;shrw $, %cx": 2,
                "movl %ebx, -(%ebp);movzbl (%eax), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %ecx;movl -(%ebp), %ebx": 1,
                "addl $, %eax;cmpl -(%ebp), %esi;jne - <png_build_grayscale_palette+>;jmp  <png_build_grayscale_palette+>;movzbl (%eax), %ecx": 1,
                "jmp  <png_build_grayscale_palette+>;cmpw $-, %cx;je  <png_build_grayscale_palette+>;movzwl %cx, %ecx;movzbl (%eax), %esi": 1,
                "movzbl (%eax), %esi;shll $, %esi;movzbl (%eax), %ebx;addl %esi, %ebx;movzwl %bx, %ebx": 1,
                "leal (%esi), %esi;je  <png_build_grayscale_palette+>;testl %ebx, %ebx;jne  <png_build_grayscale_palette+>;movl (%ebp), %eax": 1,
                "movl (%ebp), %eax;movl $, %ecx;cmpl $, -(%ebp);jne  <png_build_grayscale_palette+>;jmp  <png_build_grayscale_palette+>": 1,
                "sarl $, %ebx;cmpl $, -(%ebp);jne  <png_build_grayscale_palette+>;andl $, %ebx;movl -(%ebp), %esi": 2,
                "movb %bl, (%eax);movl %ecx, %ebx;imulw (%edi), %bx;movw %bx, -(%ebp);movzbl (%eax), %ebx": 1,
                "movw %bx, -(%ebp);movzbl (%eax), %ebx;movl -(%ebp), %esi;movzbl (%esi,%ebx), %ebx;imull %edx, %ebx": 1,
                "imulw (%edi), %cx;movzbl (%eax), %ebx;movl -(%ebp), %esi;movzbl (%esi,%ebx), %ebx;imull %ebx, %edx": 1,
                "cmpl $, -(%ebp);jne  <png_build_grayscale_palette+>;andl $, %ecx;movl -(%ebp), %edx;movzbl (%edx,%ecx), %ecx": 1,
                "movzbl (%eax), %edx;testb %dl, %dl;jne  <png_build_grayscale_palette+>;movzwl (%edi), %edx;movb %dl, (%eax)": 1,
                "movzbl -(%ebp), %ecx;sarl %cl, %esi;movzbl %bh, %ebx;movl %ebx, -(%ebp);movl -(%ebp), %ebx": 2,
                "movl (%ebx,%esi,), %ecx;movl -(%ebp), %esi;movzwl (%ecx,%esi,), %ebx;movl %ebx, %ecx;shrw $, %cx": 2,
                "jmp  <png_build_grayscale_palette+>;movzbl (%ebx), %edx;shll $, %edx;movzbl (%ebx), %ecx;addw %cx, %dx": 1,
                "shll $, %esi;movzbl (%ebx), %ecx;addl %esi, %ecx;movw %cx, -(%ebp);movzbl (%ebx), %esi": 1,
                "movzwl %dx, %edx;movl $, %ecx;subl %edx, %ecx;movl %ecx, -(%ebp);movzbl (%ebx), %esi": 1,
                "leal (%edx,%ecx), %edx;movl %edx, %ecx;shrl $, %ecx;addl %ecx, %edx;shrl $, %edx": 1,
                "movl (%eax), %edi;movl (%eax), %edx;movl %edx, -(%ebp);movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "je  <png_build_grayscale_palette+>;movl (%ebp), %ecx;movzbl (%ecx), %edx;cmpb $, %dl;je  <png_build_grayscale_palette+>": 1,
                "movzbl (%ecx), %edx;cmpb $, %dl;je  <png_build_grayscale_palette+>;cmpb $, %dl;ja  <png_build_grayscale_palette+>": 1,
                "cmpb $, %dl;jne  <png_build_grayscale_palette+>;jmp  <png_build_grayscale_palette+>;cmpb $, %al;nop": 1,
                "movl -(%ebp), %esi;leal (%esi,%esi,), %ecx;addl (%ebp), %ecx;movl (%ebp), %eax;movzbl (%eax), %edx": 1,
                "movzbl (%eax), %esi;sarl %cl, %esi;movzbl (%eax), %edi;movl (%ebx,%esi,), %esi;movzwl (%esi,%edi,), %esi": 6,
                "movb %dl, (%eax);movzbl (%eax), %edx;movzbl (%edi,%edx), %edx;movb %dl, (%eax);addl $, %eax": 1,
                "jne  <png_build_grayscale_palette+>;jmp  <png_build_grayscale_palette+>;cmpl $, -(%ebp);je  <png_build_grayscale_palette+>;movl $, %edx": 1,
                "movb %al, (%ecx,%edx,);addl $, %edx;cmpl %ebx, %edx;jne - <png_build_grayscale_palette+>;jmp  <png_build_grayscale_palette+>": 1,
                "movl %esi, -(%ebp);movl %ebx, %esi;shll $, %esi;orl -(%ebp), %esi;orl %ebx, %esi": 1,
                "orl %ecx, %ebx;leal (,%edx,), %esi;movl %edx, %ecx;sarl $, %ecx;orl %esi, %ecx": 1,
                "andl $, %eax;orl %eax, %ebx;movb %bl, (%edi);addl $, %edi;addl $, -(%ebp)": 1,
                "movl %ebx, %esi;shll $, %esi;orl %esi, %ebx;movzbl (%edi,%ebx), %ebx;shrb $, %bl": 1,
                "movl %esi, %edi;movl (%ebp), %esi;movzbl (%esi), %eax;cmpb $, %al;jne - <png_build_grayscale_palette+>": 1,
                "movl (%edx), %eax;movzbl (%edx), %ebx;testb $, %bl;je  <png_build_grayscale_palette+>;movzbl (%edx), %edx": 1,
                "je  <png_build_grayscale_palette+>;movzbl (%edx), %edx;cmpb $, %dl;jne  <png_build_grayscale_palette+>;movl (%edi), %esi": 1,
                "movzbl (%edx), %edx;cmpb $, %dl;jne  <png_build_grayscale_palette+>;movl (%edi), %esi;testl %esi, %esi": 1,
                "subl $, %eax;jne - <png_build_grayscale_palette+>;jmp  <png_build_grayscale_palette+>;cmpb $, %dl;jne  <png_build_grayscale_palette+>": 1,
                "movl (%edi), %ecx;testl %esi, %esi;je  <png_build_grayscale_palette+>;andl $, %ebx;cmpb $, %bl": 1,
                "movzbl -(%ebp), %ecx;sarl %cl, %ebx;movzbl (%edx), %edi;movl (%esi,%ebx,), %ebx;movzwl (%ebx,%edi,), %ebx": 1,
                "cmpb $, (%ebx);jne  <png_build_grayscale_palette+>;movzbl (%ebx), %eax;cmpb $, %al;ja  <png_build_grayscale_palette+>": 1,
                "movzbl (%edi), %ebx;sarl %cl, %ebx;andl $, %ebx;movb %bl, (%eax);cmpl $, %ecx": 3,
                "subl $, %edi;movb $, %cl;jmp  <png_build_grayscale_palette+>;addl $, %ecx;subl $, %eax": 3,
                "cmpl %esi, %eax;jne - <png_build_grayscale_palette+>;movl -(%ebp), %ebx;jmp  <png_build_grayscale_palette+>;movl -(%ebp), %eax": 2,
                "andl $, %ecx;addl %ecx, %ecx;cmpl $, -(%ebp);je  <png_build_grayscale_palette+>;movl %eax, %esi": 1,
                "movl -(%ebp), %eax;subl $, %eax;movl %eax, %edi;shrl %edi;addl (%ebp), %edi": 1,
                "movzbl (%edx,%esi), %ecx;movb %cl, -(%ebx);movzbl (%eax), %esi;leal (%esi,%esi,), %esi;movzbl (%edx,%esi), %ecx": 1,
                "movzbl (%edx,%esi), %ecx;movb %cl, -(%ebx);subl $, %eax;subl $, -(%ebp);cmpl -(%ebp), %eax": 1,
                "jne - <png_build_grayscale_palette+>;movl -(%ebp), %ebx;movb $, (%ebx);movb $, (%ebx);movl -(%ebp), %eax": 1,
                "leal (%esi,%esi,), %ecx;movl %ecx, -(%ebp);leal -(%edi,%ecx), %ecx;testl %esi, %esi;je  <png_build_grayscale_palette+>": 1,
                "movzbl (%eax), %esi;leal (%esi,%esi,), %esi;movzbl (%edx,%esi), %ebx;movb %bl, -(%ecx);movzbl (%eax), %esi": 1,
                "movzbl (%edx,%esi), %ebx;movb %bl, -(%ecx);movzbl (%eax), %esi;leal (%esi,%esi,), %esi;movzbl (%edx,%esi), %ebx": 1,
                "movzbl (%edx,%esi), %ebx;movb %bl, -(%ecx);subl $, %ecx;subl $, %eax;cmpl %edi, %eax": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %edx;movl %edx, -(%ebp)": 1,
                "notl %ecx;andl $, %ecx;cmpl $, -(%ebp);je  <png_build_grayscale_palette+>;movl %edx, %edi": 1,
                "subl $, %ebx;movl %ebx, %edx;shrl $, %edx;movl (%ebp), %esi;addl %edx, %esi": 1,
                "cmpl $, -(%ebp);je  <png_build_grayscale_palette+>;movl %ebx, %edi;subl -(%ebp), %edi;movl %edi, -(%ebp)": 1,
                "addl $, %ecx;subl $, %ebx;cmpl -(%ebp), %ebx;jne - <png_build_grayscale_palette+>;movl -(%ebp), %eax": 1,
                "je  <png_build_grayscale_palette+>;movl %edx, %ebx;subl -(%ebp), %ebx;movl %eax, -(%ebp);movzbl (%esi), %eax": 1,
                "cmpl %ebx, %edx;jne - <png_build_grayscale_palette+>;movl -(%ebp), %eax;movb $, (%eax);movb $, (%eax)": 1,
                "movl %eax, -(%ebp);movzbl (%edx), %ebx;cmpw %di, %bx;jne  <png_build_grayscale_palette+>;movl %ecx, %ebx": 1,
                "cmpl %esi, %edx;jne - <png_build_grayscale_palette+>;movl -(%ebp), %eax;jmp  <png_build_grayscale_palette+>;cmpb $, %dl": 1,
                "cmpb %al, -(%edx);jne  <png_build_grayscale_palette+>;movzbl -(%ebp), %ebx;cmpb %bl, (%edx);jne  <png_build_grayscale_palette+>": 2,
                "movb $, (%ecx);jmp  <png_build_grayscale_palette+>;movl %ecx, %eax;movb $-, (%ecx);movb $-, (%ecx)": 1,
                "cmpb $, %dl;jbe  <png_build_grayscale_palette+>;shrb $, %dl;movzbl %dl, %edx;imull -(%ebp), %edx": 2,
                "subl $, %ecx;leal (%edi,%edi,), %ebx;movl %edx, %edi;subl %ebx, %edi;movl %eax, %ebx": 1,
                "jne  <png_build_grayscale_palette+>;movzbl -(%ebp), %eax;cmpb %al, -(%edx);jne  <png_build_grayscale_palette+>;movzbl -(%ebp), %ebx": 1,
                "movl (%ebp), %ebx;leal -(%ebx,%edx), %edx;movl -(%ebp), %esi;leal -(%ebx,%esi,), %ebx;testl %esi, %esi": 1,
                "jne  <png_build_grayscale_palette+>;movl %ebx, %eax;movb $, (%ebx);movb $, (%ebx);jmp  <png_build_grayscale_palette+>": 1,
                "movl (%ebp), %edx;addl %eax, %edx;addl %edx, %eax;cmpl %eax, %edx;jae  <png_build_grayscale_palette+>": 1,
                "cmpl %eax, %edx;jae  <png_build_grayscale_palette+>;subl $, %edx;movzbl (%edx), %ecx;movb %cl, -(%eax)": 1,
                "movzbl (%ebx), %eax;shll $, %eax;movb %al, (%ebx);popl %ebx;popl %ebp": 1,
                "orl %ebx, %esi;movzbl (%ecx,%esi), %ebx;movb %bl, (%edx);addl $, %edx;cmpl -(%ebp), %edx": 2,
                "movl $, (%esp);movl %ebx, (%esp);calll - <png_error>;movl (%ebx), %edx;andl $, %edx": 1,
                "movl (%ebx), %edx;testb $, %dh;je  <png_build_grayscale_palette+>;cmpb $, (%esi);jne  <png_build_grayscale_palette+>": 1,
                "testb $, %dh;je  <png_build_grayscale_palette+>;cmpb $, (%esi);jne  <png_build_grayscale_palette+>;movzwl (%ebx), %edx": 1,
                "calll - <png_build_grayscale_palette+>;jmp  <png_build_grayscale_palette+>;cmpw $, (%ebx);je  <png_build_grayscale_palette+>;testl $, %edx": 1,
                "calll - <png_build_grayscale_palette+>;jmp  <png_build_grayscale_palette+>;movl $, (%esp);addl $, %eax;movl %eax, (%esp)": 1,
                "je  <png_build_grayscale_palette+>;testb $, (%esi);je  <png_build_grayscale_palette+>;movl %ebx, (%esp);movl (%ebx), %eax": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll - <png_build_grayscale_palette+>;cmpl $, (%esi);jne  <png_build_grayscale_palette+>": 1,
                "movl %ebx, (%esp);calll - <png_error>;testb $, (%ebx);je  <png_build_grayscale_palette+>;movl (%ebx), %eax": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);calll *%eax;movzbl (%ebx), %eax;testb %al, %al": 1,
                "testb $, %dl;je  <png_build_grayscale_palette+>;movl (%eax), %ebx;movzbl (%eax), %eax;cmpb $, %al": 1,
                "movzbl (%eax), %eax;cmpb $, %al;jne  <png_build_grayscale_palette+>;cmpb $, %dl;je  <png_build_grayscale_palette+>": 1,
                "jne - <png_build_grayscale_palette+>;jmp  <png_build_grayscale_palette+>;cmpb $, %al;jne  <png_build_grayscale_palette+>;cmpb $, %dl": 1,
                "orl %esi, %ecx;addl %ebx, %ecx;andl $, %ecx;movzbl (%eax), %edi;shll $, %edi": 1,
                "andl $, %ecx;movzbl (%eax), %edi;shll $, %edi;movzbl (%eax), %esi;orl %edi, %esi": 2,
                "movzbl (%eax), %esi;orl %edi, %esi;addl %esi, %ebx;andl $, %ebx;movl %ecx, %esi": 1,
                "movb %bl, (%eax);addl $, -(%ebp);addl -(%ebp), %eax;movl -(%ebp), %edx;cmpl %edx, -(%ebp)": 2,
                "addl -(%ebp), %eax;movl -(%ebp), %edx;cmpl %edx, -(%ebp);jne - <png_build_grayscale_palette+>;addl $, %esp": 1,
                "movl $, %eax;movzbl (%esi,%eax), %ecx;addb %cl, (%edx,%eax);addl $, %eax;cmpl %ebx, %eax": 1,
                "movl %eax, %esi;subl -(%ebp), %esi;movl %ebx, %ecx;subl -(%ebp), %ecx;movl %esi, %edx": 1,
                "subl -(%ebp), %ecx;movl %esi, %edx;sarl $, %edx;movl %edx, %eax;xorl %esi, %eax": 1,
                "movl %ecx, %esi;sarl $, %esi;xorl %esi, %ecx;subl %esi, %ecx;cmpl %edx, %eax": 1,
                "movl -(%ebp), %ebx;movl (%ebp), %eax;movzbl (%eax,%edi), %ecx;addl %ebx, %ecx;movb %cl, (%eax,%edi)": 1,
                "movl (%ebp), %eax;movzbl (%eax,%edi), %ecx;addl %ebx, %ecx;movb %cl, (%eax,%edi);addl $, %edi": 1,
                "movb %cl, (%eax,%edi);addl $, %edi;movl -(%ebp), %edx;movl %edx, -(%ebp);cmpl -(%ebp), %edi": 1,
                "addl %eax, %edi;subl %esi, %ebx;movl (%ebp), %edx;addl (%edx), %ebx;movl %ebx, -(%ebp)": 1,
                "addl $, (%ebp);movl %eax, %esi;subl -(%ebp), %esi;movl %edx, %ecx;subl -(%ebp), %ecx": 1,
                "subl %eax, %ebx;movl %ecx, %eax;sarl $, %eax;movl %eax, -(%ebp);xorl %ecx, %eax": 1,
                "sarl $, %esi;xorl %esi, %ecx;subl %esi, %ecx;cmpl %eax, %ebx;jle  <png_build_grayscale_palette+>": 1,
                "movl -(%ebp), %edx;addb %dl, (%edi);addl $, %edi;cmpl -(%ebp), %edi;jne - <png_build_grayscale_palette+>": 1,
                "shll $, %ecx;addl %ebx, %ecx;movzbl (%edx), %ebx;addl %ebx, %ecx;movzbl (%edx), %edx": 1,
                "movl %eax, (%esp);calll - <png_warning>;movl $, %edx;movl %edx, %eax;addl $, %esp": 1,
                "movl $, (%eax);movl $, %edi;leal (%eax), %eax;movl %eax, -(%ebp);cmpl $, (%ebx)": 1,
                "movl %eax, -(%ebp);movl $, (%esp);movl %eax, (%esp);calll  <png_write_chunk+>;movl %eax, %esi": 1,
                "movl %eax, %edx;cmpl -(%ebp), %eax;jbe  <png_build_grayscale_palette+>;movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <png_write_chunk+>;cmpl $, %esi;je  <png_build_grayscale_palette+>": 1,
                "movl $, %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <png_chunk_warning>;movl $, %edi": 1,
                "shll $, %eax;addl %eax, %ecx;movzbl (%edx), %eax;addl %eax, %ecx;movzbl (%edx), %eax": 1,
                "movzbl (%edx), %edx;shll $, %edx;addl %edx, %eax;popl %ebp;retl": 1,
                "addl %ecx, %edx;movzbl (%eax), %eax;shll $, %eax;addl %eax, %edx;movl %edx, %eax": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %esi;movl (%ebp), %edi;testl %ebx, %ebx": 1,
                "testb $, (%ebx);je  <png_get_uint_+>;movl (%ebx), %eax;andl $, %eax;cmpl $, %eax": 1,
                "movzbl %al, %eax;movl %eax, %esi;jmp  <png_get_uint_+>;movl (%ebx), %esi;shrl $, %esi": 1,
                "testl %esi, %esi;je  <png_get_uint_+>;movzbl -(%ebp), %edx;shll $, %edx;movzbl -(%ebp), %eax": 1,
                "je  <png_get_uint_+>;movzbl -(%ebp), %edx;shll $, %edx;movzbl -(%ebp), %eax;shll $, %eax": 1,
                "shll $, %edx;movzbl -(%ebp), %eax;shll $, %eax;addl %edx, %eax;movzbl -(%ebp), %edx": 1,
                "setne %al;movzbl %al, %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl %ebx, (%esp);calll - <png_get_uint_+>;subl %edi, %esi;cmpl %esi, %edi;jb - <png_get_uint_+>": 1,
                "movl (%ebp), %ebx;cmpl %edi, %ebx;jbe  <png_get_uint_+>;movl $, (%esp);movl %esi, (%esp)": 1,
                "calll - <png_warning>;movl $, (%esp);movl %esi, (%esp);calll - <png_malloc_warn>;movl %eax, %edi": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <png_get_uint_+>;leal (%edi,%ebx), %edx;subl $, %eax": 1,
                "addl %ebx, %edx;movl %edi, (%esp);movl -(%ebp), %eax;addl %ebx, %eax;movl %eax, (%esp)": 1,
                "movb $, (%ecx,%edx);cmpl %edi, %eax;jne  <png_get_uint_+>;movl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl %esi, (%esp);calll - <png_free>;movl -(%ebp), %eax;movl %eax, (%esi);movl -(%ebp), %ecx": 1,
                "calll - <png_warning>;jmp  <png_get_uint_+>;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "leal -(%ebp), %edi;movl %edi, (%esp);calll - <png_warning+>;movl $, (%esp);movl %edi, (%esp)": 1,
                "leal (%ebx), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <png_malloc_warn>;movl %eax, %edi": 1,
                "testl %eax, %eax;je  <png_get_uint_+>;testl %ebx, %ebx;je  <png_get_uint_+>;movl %ebx, (%esp)": 1,
                "movl %eax, (%ebx);movl $, (%esp);leal -(%ebp), %esi;movl %esi, (%esp);movl %ebx, (%esp)": 1,
                "movzbl -(%ebp), %ecx;movl %ecx, -(%ebp);movzbl -(%ebp), %ecx;movl %ecx, -(%ebp);movl %esi, (%ebx)": 1,
                "movl %edi, (%ebx);movb %al, (%ebx);movzbl -(%ebp), %ecx;movb %cl, (%ebx);movb %dl, (%ebx)": 1,
                "movzbl -(%ebp), %ecx;movb %cl, (%ebx);movzbl -(%ebp), %ecx;movb %cl, (%ebx);cmpb $, %dl": 1,
                "movb %cl, (%ebx);cmpb $, %dl;je  <png_get_uint_+>;cmpb $, %dl;je  <png_get_uint_+>": 1,
                "movzbl %al, %eax;imull %esi, %eax;jmp  <png_get_uint_+>;movzbl %al, %eax;imull %esi, %eax": 1,
                "testb $, %cl;jne  <png_get_uint_+>;movl $, (%esp);movl %esi, (%esp);calll - <png_warning>": 1,
                "movl %ebx, (%esp);movl %esi, (%esp);calll - <png_get_uint_+>;jmp  <png_get_uint_+>;cmpl $, %ebx": 2,
                "cmpl %eax, %ebx;je  <png_get_uint_+>;cmpb $, %cl;je  <png_get_uint_+>;movl $, (%esp)": 1,
                "cmpb $, %cl;je  <png_get_uint_+>;movl $, (%esp);movl %esi, (%esp);calll - <png_warning>": 1,
                "cmpl -(%ebp), %ebx;jne - <png_get_uint_+>;movl $, (%esp);movl %esi, (%esp);calll - <png_get_uint_+>": 2,
                "movl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx": 1,
                "movl (%ebp), %ebx;movl (%ebp), %esi;movl (%ebx), %eax;andl $, %eax;cmpl $, %eax": 1,
                "calll - <png_get_uint_+>;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp;popl %ebp": 1,
                "calll - <png_get_uint_+>;jmp  <png_get_uint_+>;cmpl $, %esi;je  <png_get_uint_+>;movl $, (%esp)": 2,
                "movl %ebx, (%esp);calll - <png_get_uint_+>;jmp  <png_get_uint_+>;movl $, (%esp);leal -(%ebp), %eax": 8,
                "jmp  <png_get_uint_+>;testl %edi, %edi;je  <png_get_uint_+>;testb $, (%edi);je  <png_get_uint_+>": 3,
                "movl %edi, (%esp);movl %ebx, (%esp);calll - <png_get_uint_+>;jmp  <png_get_uint_+>;testb $, %al": 3,
                "movl %edi, (%esp);movl %ebx, (%esp);calll - <png_get_uint_+>;jmp  <png_get_uint_+>;movl $, (%esp)": 4,
                "calll - <png_build_grayscale_palette+>;movl %eax, -(%ebp);leal -(%ebp), %edx;movl $, %eax;calll - <png_build_grayscale_palette+>": 6,
                "leal -(%edi), %eax;cmpl $, %eax;ja  <png_get_uint_+>;movl -(%ebp), %eax;subl $, %eax": 1,
                "calll - <png_warning+>;movl %edi, (%esp);movl $, (%esp);movl $, (%esp);movl %esi, (%esp)": 2,
                "calll - <png_warning+>;jmp  <png_get_uint_+>;cmpb $, (%ebx);jne  <png_get_uint_+>;movl -(%ebp), %eax": 1,
                "testl %eax, %eax;js  <png_get_uint_+>;cmpl $, %eax;jg  <png_get_uint_+>;movl $, (%esp)": 2,
                "jg  <png_get_uint_+>;cmpl %edx, %eax;jg  <png_get_uint_+>;addl %ecx, %edx;movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %eax;leal (%edx,%eax), %ecx;addl -(%ebp), %ecx;cmpl $, %ecx": 1,
                "je  <png_get_uint_+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_error>;movw %dx, (%ebx)": 1,
                "movw %dx, (%ebx);movw %ax, (%ebx);jmp  <png_get_uint_+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll - <png_error>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%esi), %eax;leal -(%eax), %edx;cmpl $, %edx;jbe  <png_get_uint_+>;movl %eax, (%esp)": 1,
                "ja  <png_get_uint_+>;movl (%esi), %eax;subl $, %eax;cmpl $, %eax;ja  <png_get_uint_+>": 6,
                "cmpl $, %eax;jbe  <png_get_uint_+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_warning>": 2,
                "movw $, (%ebx);movb $, (%ebx);movl %edi, (%esp);movl %esi, (%esp);movl %ebx, (%esp)": 1,
                "nop;leal (%esi), %esi;jmp - <png_get_uint_+>;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "jmp - <png_get_uint_+>;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ebp, %esp": 1,
                "calll - <png_warning>;movl (%ebx), %eax;testb $, %ah;jne  <png_get_uint_+>;cmpl $, (%ebp)": 1,
                "movl %esi, (%esp);movl %eax, (%esp);movl %ebx, (%esp);calll - <png_get_uint_+>;movl $, (%esp)": 2,
                "movb $, (%eax,%esi);movl (%ebx), %eax;cmpb $, (%eax);je  <png_get_uint_+>;movl %eax, %edi": 1,
                "leal -(%eax,%esi), %edx;cmpl %edx, %ecx;jb  <png_get_uint_+>;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <png_free>;movl $, (%ebx)": 1,
                "movl %ebx, (%esp);calll - <png_free>;movl $, (%ebx);movl %esi, (%esp);movl $, (%esp)": 1,
                "calll - <png_warning+>;jmp  <png_get_uint_+>;movl %esi, (%esp);movl %edx, (%esp);movl -(%ebp), %edx": 1,
                "movl %esi, (%esp);movl %edx, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %eax": 1,
                "subl $, %eax;movl %eax, (%ebx);cmpl $, %eax;jne  <png_get_uint_+>;movl $, (%esp)": 4,
                "movl %edi, (%esp);movl %ebx, (%esp);calll - <png_get_uint_+>;jmp  <png_get_uint_+>;movl (%ebx), %eax": 4,
                "movl %eax, (%ebx);movl %edi, (%esp);movl %eax, (%esp);movl %ebx, (%esp);calll - <png_get_uint_+>": 1,
                "movb $, (%eax,%edi);movl (%ebx), %ecx;cmpb $, (%ecx);je  <png_get_uint_+>;movl %ecx, %esi": 1,
                "jmp  <png_get_uint_+>;movzbl (%esi), %eax;movb %al, -(%ebp);addl $, %esi;cmpb $, %al": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll - <png_warning>;jmp  <png_get_uint_+>;movl %ebx, -(%ebp)": 1,
                "addl $, %ecx;addl $, %edx;cmpl %ecx, -(%ebp);jg - <png_get_uint_+>;movl -(%ebp), %ebx": 1,
                "movl %ebx, (%esp);calll  <png_set_sPLT>;movl (%ebx), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <png_free>;addl $, %esp": 2,
                "movl %ebx, (%esp);calll - <png_get_uint_+>;jmp  <png_get_uint_+>;testl %edi, %edi;je  <png_get_uint_+>": 4,
                "jmp  <png_get_uint_+>;cmpb $, %dl;jne  <png_get_uint_+>;cmpl $, %esi;je  <png_get_uint_+>": 1,
                "movzbl -(%ebp), %eax;addl %edx, %eax;movw %ax, (%ebx);jmp  <png_get_uint_+>;cmpb $, %dl": 1,
                "movl %ebx, (%esp);calll - <png_warning>;movl $, (%esp);movl %ebx, (%esp);calll - <png_get_uint_+>": 1,
                "testl %edi, %edi;je  <png_get_uint_+>;movzwl (%edi), %edx;testw %dx, %dx;je  <png_get_uint_+>": 1,
                "movzbl %al, %ecx;cmpw %cx, %dx;ja  <png_get_uint_+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "movl %edi, (%esp);movl %ebx, (%esp);calll  <png_set_bKGD>;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl $, (%esp);movl %esi, (%esp);calll - <png_error>;testb $, %al;je  <png_get_uint_+>": 2,
                "movw %ax, -(%ebp,%ebx,);addl $, %ebx;cmpl -(%ebp), %ebx;jne - <png_get_uint_+>;movl $, (%esp)": 1,
                "leal (%esi), %eax;cmpl %eax, %edi;ja  <png_get_uint_+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "movzbl (%esi), %eax;shll $, %eax;addl %edx, %eax;movl %eax, -(%ebp);movzbl (%esi), %eax": 1,
                "testb %dl, %dl;je  <png_get_uint_+>;movzbl -(%ebp), %eax;subl $, %eax;cmpb $, %al": 1,
                "cmpb $, -(%ebp);jne  <png_get_uint_+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_warning>": 1,
                "movl %ebx, (%esp);calll - <png_free>;movl $, (%ebx);jmp  <png_get_uint_+>;cmpb $, -(%ebp)": 1,
                "jne - <png_get_uint_+>;jmp  <png_get_uint_+>;movl -(%ebp), %esi;movzbl -(%ebp), %eax;shll $, %eax": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;je  <png_get_uint_+>;movzbl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "leal (%esi), %eax;movl -(%ebp), %edx;movl %eax, (%edx,%ecx,);cmpl %eax, %edi;jb  <png_get_uint_+>": 1,
                "je  <png_get_uint_+>;movl -(%ebp), %edx;addl $, %eax;cmpl %edx, %eax;je  <png_get_uint_+>": 1,
                "calll - <png_get_uint_+>;jmp  <png_get_uint_+>;cmpl $, %esi;ja  <png_get_uint_+>;movl $, (%esp)": 1,
                "movl (%ebx), %eax;movb $, (%eax,%esi);movl $, (%esp);movl %ebx, (%esp);calll - <png_get_uint_+>": 1,
                "movl %eax, -(%ebp);testb %cl, %cl;je  <png_get_uint_+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "calll - <png_warning>;jmp  <png_get_uint_+>;movl (%ebx), %eax;movl -(%ebp), %edx;addl %eax, %edx": 1,
                "calll - <png_get_uint_+>;testl %eax, %eax;jne  <png_get_uint_+>;movzbl -(%ebp), %eax;movb %al, -(%ebp)": 1,
                "jne  <png_get_uint_+>;movzbl -(%ebp), %eax;movb %al, -(%ebp);movzbl -(%ebp), %eax;movb %al, -(%ebp)": 1,
                "movzbl -(%ebp), %eax;movb %al, -(%ebp);movzbl -(%ebp), %edx;shll $, %edx;movzbl -(%ebp), %eax": 1,
                "jmp  <png_get_uint_+>;movl (%ebx), %eax;movl %eax, -(%ebp);addl %eax, %esi;movb $, (%esi)": 1,
                "movl %esi, (%esp);calll - <png_get_uint_+>;jmp  <png_get_uint_+>;subl $, %eax;movl %eax, (%esi)": 1,
                "jmp  <png_get_uint_+>;subl $, %eax;movl %eax, (%esi);cmpl $, %eax;jne  <png_get_uint_+>": 1,
                "jmp  <png_get_uint_+>;movl (%esi), %eax;testb $, %al;jne  <png_get_uint_+>;movl $, (%esp)": 1,
                "calll - <png_malloc_warn>;movl %eax, (%esi);testl %eax, %eax;jne  <png_get_uint_+>;movl $, (%esp)": 1,
                "movl $, (%esp);movl %esi, (%esp);calll - <png_get_uint_+>;testl %eax, %eax;je  <png_get_uint_+>": 1,
                "movl $, -(%ebp);addl $, %ebx;subl (%esi), %ebx;movl %ebx, -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <png_free>;movl $, (%esi);jmp  <png_get_uint_+>;movl -(%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl %esi, %eax;leal (%eax), %ecx;leal -(%esi,%edi), %edx;cmpl %edx, %ecx;jb  <png_get_uint_+>": 1,
                "leal (%eax), %edx;movl %edx, -(%ebp);cmpb $, (%eax);jne  <png_get_uint_+>;jmp  <png_get_uint_+>": 1,
                "testl %edi, %edi;jne  <png_get_uint_+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_warning>": 1,
                "movl %eax, (%edi);movl -(%ebp), %eax;subl %esi, %eax;addl (%ebx), %eax;movl %eax, (%edi)": 2,
                "addl (%ebx), %eax;movl %eax, (%edi);movl $, (%esp);movl %edi, (%esp);movl (%ebp), %eax": 1,
                "jne  <png_get_uint_+>;movl %eax, (%esp);movl %ebx, (%esp);calll - <png_handle_as_unknown+>;cmpl $, %eax": 2,
                "movl %esi, (%esp);movl %ebx, (%esp);calll *%eax;testl %eax, %eax;jns  <png_get_uint_+>": 1,
                "calll - <png_handle_as_unknown+>;cmpl $, %eax;je  <png_get_uint_+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "calll  <png_set_unknown_chunks>;jmp  <png_get_uint_+>;movl $, (%esp);leal (%ebx), %eax;movl %eax, (%esp)": 1,
                "leal -(%edx), %ecx;cmpl $, %ecx;jbe  <png_get_uint_+>;subl $, %edx;cmpl $, %edx": 1,
                "leal -(%ecx), %ebx;cmpl $, %ebx;jbe  <png_get_uint_+>;subl $, %ecx;cmpl $, %ecx": 1,
                "cmpl $, %ecx;jbe  <png_get_uint_+>;movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <png_get_uint_+>;shrl $, %eax;movl $, %edx;jmp - <png_get_uint_+>;addl $, %esp": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl $, (%ebx);movl $, (%esp)": 1,
                "movl %ebx, (%esp);calll - <png_read_png+>;movl %esi, (%esp);movl %ebx, (%esp);calll - <png_get_uint_>": 1,
                "calll - <png_get_uint_>;movl %eax, %esi;movzbl -(%ebp), %edx;shll $, %edx;movzbl -(%ebp), %eax": 1,
                "movl (%ebp), %eax;movzbl (%eax), %edx;movb %dl, -(%ebp);movzbl %dl, %ebx;movl (%eax), %ecx": 1,
                "testl %edx, %edx;je  <png_get_uint_+>;cmpl $, %ebx;jbe  <png_get_uint_+>;movl %ebx, %ecx": 1,
                "je  <png_get_uint_+>;movl $, (%esp);movl %eax, (%esp);calll - <png_error>;testl %edi, %edi": 1,
                "jmp  <png_get_uint_+>;movb $, -(%ebp);movl $, %esi;cmpb $, (%eax);je  <png_get_uint_+>": 1,
                "movl %ecx, -(%ebp);testb $, %cl;je  <png_get_uint_+>;movzbl -(%ebp), %edx;movl %edx, -(%ebp)": 1,
                "testb $, %cl;je  <png_get_uint_+>;movzbl -(%ebp), %edx;movl %edx, -(%ebp);cmpl $, %edx": 1,
                "movl %ebx, %eax;imull %edi, %eax;imull %ebx, %ecx;subl %ecx, %eax;movl %eax, -(%ebp)": 1,
                "movb %al, (%esi);movzbl (%edi), %eax;movb %al, (%esi);cmpl %ebx, -(%ebp);ja  <png_get_uint_+>": 1,
                "movl -(%ebp), %edx;subl %ebx, %edx;movzbl (%edi), %eax;movb %al, (%esi);movzbl (%edi), %eax": 1,
                "movzbl (%edi), %eax;movb %al, (%esi);addl %ebx, %edi;addl %ebx, %esi;movl %edx, %eax": 1,
                "movl %edx, %eax;subl %ebx, %edx;cmpl %ebx, %eax;ja - <png_get_uint_+>;jmp  <png_get_uint_+>": 1,
                "ja  <png_get_uint_+>;movl %esi, %eax;testl $, %esi;jne  <png_get_uint_+>;movl %edi, %edx": 1,
                "testl $, %esi;jne  <png_get_uint_+>;movl %edi, %edx;testl $, %edi;jne  <png_get_uint_+>": 1,
                "testb $, %dl;jne  <png_get_uint_+>;testb $, -(%ebp);jne  <png_get_uint_+>;testb $, %bl": 1,
                "addl %edx, %edi;subl %ebx, %ecx;cmpl -(%ebp), %ecx;jae - <png_get_uint_+>;movl %ecx, -(%ebp)": 1,
                "movl %ebx, %edx;imull %edi, %edx;jmp  <png_get_uint_+>;movl -(%ebp), %edx;addl $, %edx": 1,
                "testl %eax, %eax;je  <png_get_uint_+>;cmpl $, (%ebp);je  <png_get_uint_+>;movl (%ebp), %ebx": 1,
                "je  <png_get_uint_+>;cmpb $, %cl;jne  <png_get_uint_+>;leal -(%edx), %ecx;shrl $, %ecx": 1,
                "notl %eax;andl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;addl $, %eax": 1,
                "movzbl (%esi), %edi;movzbl -(%ebp), %ecx;sarl %cl, %edi;andl $, %edi;cmpl $, -(%ebp)": 2,
                "movl -(%ebp), %edx;addl %edx, -(%ebp);addl $, -(%ebp);movl -(%ebp), %edx;movl (%ebp), %esi": 3,
                "leal (%edx,%edx), %eax;andl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %esi;leal (%esi,%esi), %eax": 1,
                "addl $, %eax;notl %eax;andl $, %eax;addl %eax, %eax;movl $, -(%ebp)": 1,
                "cmpl %edx, (%esi);ja - <png_get_uint_+>;jmp  <png_get_uint_+>;leal -(%edx), %ecx;shrl %ecx": 1,
                "cmpb $, %al;jbe  <png_get_uint_+>;shrb $, %al;movzbl %al, %eax;imull %ebx, %eax": 1,
                "jne  <png_get_uint_+>;movzbl (%eax), %ecx;addl $, %ecx;sarl $, %ecx;movl $, (%eax)": 1,
                "cmpl (%ebx), %eax;jb  <png_get_uint_+>;cmpb $, (%ebx);je  <png_get_uint_+>;movl $, (%ebx)": 1,
                "movl %esi, (%esp);calll  <png_write_chunk+>;cmpl $, %eax;jne  <png_get_uint_+>;cmpl $, (%ebx)": 1,
                "jne  <png_get_uint_+>;movl $, %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <png_error>": 1,
                "cmpb $, (%ebx);je  <png_get_uint_+>;testb $, (%ebx);jne  <png_get_uint_+>;movl (%ebx), %eax": 1,
                "testb $, (%ebx);jne  <png_get_uint_+>;movl (%ebx), %eax;addl $, %eax;shrl $, %eax": 1,
                "movl %eax, (%ebx);movl (%ebx), %eax;movl %eax, (%ebx);movzbl (%ebx), %edx;movl (%ebx), %ecx": 1,
                "movl $, %edx;testb $, %ch;je  <png_get_uint_+>;movzbl (%ebx), %eax;cmpb $, %al": 1,
                "cmpl $, %edx;jg  <png_get_uint_+>;movl $, %edx;cmpw $, (%ebx);je  <png_get_uint_+>": 1,
                "andl $-, %edx;addl $, %edx;testl $, %eax;je  <png_get_uint_+>;movzbl (%ebx), %ecx": 1,
                "addl $, %eax;addl $, %edx;sarl $, %edx;leal (%eax,%edx), %esi;cmpl (%ebx), %esi": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <png_free>;cmpb $, (%ebx);je  <png_get_uint_+>": 1,
                "movl %ebx, (%esp);calll - <png_calloc>;movl %eax, (%ebx);jmp  <png_get_uint_+>;movl %esi, (%esp)": 1,
                "orl $, (%ebx);jmp  <png_get_uint_+>;testb $, %ch;jne - <png_get_uint_+>;jmp - <png_get_uint_+>": 1,
                "jne - <png_get_uint_+>;jmp - <png_get_uint_+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "testl %ebx, %ebx;je  <png_set_bKGD+>;cmpl $, (%ebp);je  <png_set_bKGD+>;movl $, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax": 6,
                "fldl (%ebp);fstpl (%esp);movl %ebx, (%esp);calll - <png_access_version_number+>;movl %eax, %edi": 1,
                "jmp  <png_set_gAMA_fixed+>;movl %edx, (%eax);orl $, (%eax);leave;retl": 1,
                "movl %ebx, (%esp);calll - <png_set_gAMA_fixed>;addl $, %esp;popl %ebx;popl %ebp": 1,
                "calll - <png_free_data>;movl $, (%esp);movl %esi, (%esp);calll - <png_malloc_warn>;movl %eax, (%esi)": 1,
                "calll - <png_malloc_warn>;movl %eax, (%esi);testl %eax, %eax;je  <png_set_hIST+>;movl $, %eax": 1,
                "movl (%ebp), %esi;testl %ebx, %ebx;je  <png_set_IHDR+>;cmpl $, (%ebp);je  <png_set_IHDR+>": 1,
                "testb $, %dl;je  <png_set_IHDR+>;addb $, (%ebx);movzbl (%ebx), %eax;mulb (%ebx)": 1,
                "jbe  <png_set_IHDR+>;shrb $, %al;movzbl %al, %eax;imull %eax, %esi;jmp  <png_set_IHDR+>": 1,
                "movl (%ebp), %ecx;movl %ecx, (%esp);calll - <png_warning>;jmp  <png_set_pCAL+>;movl -(%ebp), %edx": 1,
                "movl %ecx, (%esp);calll - <png_warning>;jmp  <png_set_pCAL+>;movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %ebx, (%esp);movl $, (%esp);movl %eax, (%esp);calll  <png_write_chunk+>;cmpl $, (%ebp)": 1,
                "jle  <png_set_pCAL+>;movl $, %ebx;movl %esi, -(%ebp);movl (%ebp), %esi;movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <png_warning>;jmp  <png_set_pCAL+>;movl %edi, (%esp);movl -(%ebp), %ecx": 1,
                "movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al;notl %ecx;movl %ecx, %esi": 1,
                "movl %ecx, %esi;subl $, %esi;je  <png_set_sCAL_s+>;movl (%ebp), %edx;cmpb $, (%edx)": 1,
                "movl $, %ecx;repne  scasb %es:(%edi), %al;notl %ecx;movl %ecx, %edi;subl $, %edi": 2,
                "repne  scasb %es:(%edi), %al;notl %ecx;movl %ecx, %edi;subl $, %edi;je  <png_set_sCAL_s+>": 1,
                "movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <png_malloc_warn>;movl %eax, (%ebx)": 1,
                "jne  <png_set_sCAL_s+>;movl $, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <png_warning>": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <png_warning>;jmp  <png_set_sCAL_s+>": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <png_set_sCAL_s>;movl -(%ebp), %ebx": 2,
                "movl %ebx, (%esp);calll - <png_warning>;jmp  <png_set_sCAL_fixed+>;testl %esi, %esi;jg  <png_set_sCAL_fixed+>": 1,
                "cmpl $, (%ebp);je  <png_set_pHYs+>;movl (%ebp), %edx;movl %edx, (%eax);movl (%ebp), %edx": 1,
                "cmpb $, (%ebx);jne  <png_set_PLTE+>;movl $, (%esp);movl %esi, (%esp);calll - <png_error>": 1,
                "je  <png_set_sBIT+>;cmpl $, (%ebp);je  <png_set_sBIT+>;movl $, (%esp);movl (%ebp), %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax;je  <png_set_sRGB+>;cmpl $, (%ebp)": 1,
                "movl $, %ecx;repne  scasb %es:(%edi), %al;movl %ecx, %edi;notl %edi;movl %edi, (%esp)": 1,
                "testl %eax, %eax;jne  <png_set_iCCP+>;movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <png_warning>;jmp  <png_set_iCCP+>;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "pushl %ebx;subl $, %esp;cmpl $, (%ebp);je  <png_set_iCCP+>;cmpl $, (%ebp)": 1,
                "je  <png_set_iCCP+>;movl $, %eax;cmpl $, (%ebp);je  <png_set_iCCP+>;cmpl $, (%ebp)": 1,
                "movl (%ebp), %eax;movl (%eax), %ebx;movl $, %eax;subl %ebx, %eax;cmpl %eax, (%ebp)": 1,
                "calll  <png_write_chunk+>;movl %edi, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll - <png_free>": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);movl $, %eax;cmpl $, (%ebp)": 1,
                "movl $, %eax;repne  scasb %es:(%edi), %al;notl %ecx;movl %ecx, -(%ebp);subl $, %ecx": 1,
                "je  <png_set_iCCP+>;movl $, %ecx;repne  scasb %es:(%edi), %al;notl %ecx;subl $, %ecx": 1,
                "repne  scasb %es:(%edi), %al;notl %ecx;leal -(%ecx), %edi;movl %edx, (%ebx);movl -(%ebp), %ecx": 1,
                "addl %edi, %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <png_malloc_warn>": 1,
                "movl $, %eax;jmp  <png_set_iCCP+>;movl $, %eax;jmp  <png_set_iCCP+>;movl $, %eax": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%ebp), %ebx": 1,
                "movl $, (%esp);movl $, (%esp);movl %ebx, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "ja  <png_set_tRNS+>;movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebx), %eax": 1,
                "jmp  <png_set_tRNS+>;cmpb $, %al;jne  <png_set_tRNS+>;movl (%ebp), %edx;movzwl (%edx), %eax": 1,
                "je  <png_set_tRNS+>;jmp  <png_set_tRNS+>;movw %si, (%ebx);testl %esi, %esi;je  <png_set_tRNS+>": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;cmpl $, (%ebp);je  <png_set_sPLT+>": 1,
                "je  <png_set_sPLT+>;cmpl $, (%ebp);je  <png_set_sPLT+>;cmpl $, (%ebp);js  <png_set_sPLT+>": 1,
                "movl (%edx), %eax;movl $, %edx;subl %eax, %edx;cmpl %edx, (%ebp);jg  <png_set_sPLT+>": 1,
                "movl %eax, -(%ebp);testl %eax, %eax;jne  <png_set_sPLT+>;movl $, (%esp);movl (%ebp), %edx": 1,
                "movl %eax, (%esp);calll - <png_free>;movl (%ebp), %edx;movl $, (%edx);cmpl $, (%ebp)": 1,
                "je  <png_set_unknown_chunks+>;cmpl $, (%ebp);js  <png_set_unknown_chunks+>;movl (%ebp), %edx;movl (%edx), %eax": 1,
                "movl $, (%esi);jmp  <png_set_unknown_chunks+>;movl -(%ebp), %ecx;movl (%ecx), %edx;movl %edx, (%esp)": 1,
                "movl %edx, (%esp);movl %eax, (%esp);calll  <png_write_chunk+>;addl $, %edi;addl $, %ebx": 1,
                "addl $, %edi;addl $, %ebx;cmpl (%ebp), %edi;jne - <png_set_unknown_chunks+>;movl -(%ebp), %edx": 1,
                "addl %ecx, (%eax);orl $, (%eax);addl $, %esp;popl %ebx;popl %esi": 1,
                "testl %edx, %edx;js  <png_set_unknown_chunk_location+>;cmpl (%eax), %edx;jge  <png_set_unknown_chunk_location+>;leal (%edx,%edx,), %edx": 1,
                "movl %eax, (%esp);calll  <png_write_chunk+>;movl -(%ebp), %edx;leal (%edx,%edi), %eax;testl %esi, %esi": 1,
                "movb %cl, (%eax);addl $, %eax;cmpl %edx, %eax;jne - <png_set_keep_unknown_chunks+>;movl -(%ebp), %eax": 1,
                "movl %esi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %esi;testl %ebx, %ebx;je  <png_set_rows+>": 1,
                "testl %eax, %eax;je  <png_set_user_limits+>;movl (%ebp), %edx;movl %edx, (%eax);movl (%ebp), %edx": 1,
                "testl %eax, %eax;je  <png_set_packing+>;cmpb $, (%eax);ja  <png_set_packing+>;orl $, (%eax)": 1,
                "movzbl (%eax), %edx;cmpb $, %dl;jne  <png_set_filler+>;movb $, (%eax);jmp  <png_set_filler+>": 1,
                "jne  <png_set_filler+>;movb $, (%eax);jmp  <png_set_filler+>;testb %dl, %dl;jne  <png_set_filler+>": 1,
                "movl %ebx, (%esp);calll - <png_set_filler>;orl $, (%ebx);addl $, %esp;popl %ebx": 1,
                "calll - <png_set_filler>;orl $, (%ebx);addl $, %esp;popl %ebx;popl %ebp": 1,
                "je  <png_set_invert_alpha+>;orl $, (%eax);popl %ebp;retl;pushl %ebp": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <png_set_invert_mono+>;orl $, (%eax);popl %ebp": 1,
                "cmpb $, (%eax);jne  <png_set_invert_mono+>;movzbl (%eax), %esi;imull (%eax), %esi;testl %esi, %esi": 1,
                "je  <png_set_invert_mono+>;movl (%ebp), %eax;movl $, %edx;movzbl (%eax), %ebx;movzbl (%eax), %ecx": 1,
                "cmpb $, %al;ja  <png_set_invert_mono+>;movl (%edx), %ecx;cmpb $, %al;je  <png_set_invert_mono+>": 1,
                "addl (%eax), %edx;movzbl (%eax), %ecx;cmpb $, %cl;jne  <png_set_invert_mono+>;movzbl (%eax), %ecx": 1,
                "movzbl (%ecx), %eax;movb %al, (%ebx);addl $, %ebx;addl $, %ecx;cmpl %ecx, %edx": 1,
                "cmpl $, (%ebp);je  <png_set_invert_mono+>;movl (%ebp), %ecx;addl $, %ecx;movl %ecx, -(%ebp)": 3,
                "movl %edi, %ebx;movl -(%ebp), %ecx;movl %eax, -(%ebp);movzbl (%ecx), %eax;movb %al, (%ebx)": 3,
                "movb %cl, -(%ebp);movzwl %bx, %esi;movl $, %edi;shll %cl, %edi;cmpl %edi, %esi": 1,
                "cmpb $, -(%ebp);jne  <png_set_invert_mono+>;jmp  <png_set_invert_mono+>;cmpb $, -(%ebp);je  <png_set_invert_mono+>": 1,
                "cmpl %eax, %ebx;leal (%esi), %esi;jae  <png_set_invert_mono+>;movzbl (%eax), %esi;sarl %cl, %esi": 1,
                "sarl %cl, %esi;testl %esi, %esi;je  <png_set_invert_mono+>;movl $, (%edx);subl $, %eax": 1,
                "movl %esi, (%edx);movzbl (%eax), %esi;sarl %cl, %esi;sarl $, %esi;movl %esi, %ecx": 2,
                "andl $, %ecx;cmpl (%edx), %ecx;jle  <png_set_invert_mono+>;movl %ecx, (%edx);subl $, %eax": 2,
                "cmpl %ebx, %eax;jne - <png_set_invert_mono+>;jmp  <png_set_invert_mono+>;movzbl (%eax), %ecx;cmpl (%edx), %ecx": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <png_set_user_transform_info+>;movl (%ebp), %edx;movl %edx, (%eax)": 1,
                "testl %eax, %eax;je  <png_set_user_transform_info+>;movl (%ebp), %edx;movl %edx, (%eax);movl (%ebp), %edx": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;testl %eax, %eax;je  <png_get_current_pass_number+>": 1,
                "testl %ebx, %ebx;je  <png_get_current_pass_number+>;movl (%ebx), %eax;movl %eax, (%esp);movl %esi, (%esp)": 1,
                "testl %eax, %eax;je  <png_set_write_fn+>;movl (%ebp), %ebx;movl %ebx, (%eax);testl %ecx, %ecx": 1,
                "calll - <png_warning>;addl $, %esp;popl %ebx;popl %ebp;retl": 1,
                "testl %ebx, %ebx;je  <png_set_write_fn+>;movl %edx, %edi;movl %ecx, %esi;movl %ebx, %eax": 1,
                "jne - <png_set_write_fn+>;movl %esi, %eax;movb %al, (%ebx);cmpl $, (%ebx);jne  <png_set_write_fn+>": 1,
                "jmp - <png_set_write_fn+>;movl $, %eax;jmp - <png_set_write_fn+>;addl $, %esp;popl %ebx": 1,
                "testl %edi, %edi;je  <png_write_info_before_PLTE+>;testb $, (%edi);jne  <png_write_info_before_PLTE+>;movl %edi, (%esp)": 1,
                "movl %edi, (%esp);calll  <png_write_chunk+>;movl (%ebx), %eax;testl %eax, %eax;je  <png_write_info_before_PLTE+>": 1,
                "movl %esi, (%esp);movl %edi, (%esp);calll - <png_handle_as_unknown>;cmpl $, %eax;je  <png_write_info_before_PLTE+>": 1,
                "testb $, %dl;jne  <png_write_info_before_PLTE+>;testb $, (%esi);jne  <png_write_info_before_PLTE+>;cmpl $, %eax": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;testl %ebx, %ebx;je  <png_write_info+>": 1,
                "cmpw $, (%ebx);je  <png_write_info+>;movl $, %eax;movl (%ebx), %edx;addl %eax, %edx": 1,
                "movl %eax, (%esp);calll  <png_write_chunk+>;testb $, (%ebx);je  <png_write_info+>;movl (%ebx), %eax": 2,
                "movl %eax, (%esp);calll  <png_write_chunk+>;testb $-, (%ebx);je  <png_write_info+>;movzbl (%ebx), %eax": 1,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <png_write_chunk+>;movl (%ebp), %eax": 1,
                "movl %eax, (%esp);calll  <png_write_chunk+>;movl (%ebp), %eax;orl $, (%eax);testb $, (%ebx)": 1,
                "movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <png_write_chunk+>;movl (%ebx), %eax": 2,
                "movl (%ebx), %eax;movl $, (%eax,%esi);jmp  <png_write_info+>;cmpl $-, %edx;jne  <png_write_info+>": 1,
                "jmp  <png_write_info+>;cmpl $-, %edx;jne  <png_write_info+>;movl $, (%esp);movl (%eax), %edx": 1,
                "cmpl $-, %edx;jne  <png_write_info+>;movl $, (%esp);movl (%eax), %edx;movl %edx, (%esp)": 1,
                "je  <png_write_info+>;movl (%ebx), %esi;leal (%eax,%eax,), %eax;leal (%esi,%eax,), %eax;cmpl %eax, %esi": 1,
                "movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);movl %edi, (%esp);movl (%ebp), %eax": 1,
                "movl (%ebp), %ebx;cmpl $, (%ebp);je  <png_write_end+>;movl (%ebp), %eax;testb $, (%eax)": 1,
                "jle  <png_write_end+>;movl (%eax), %ecx;movl %ecx, (%esp);movl (%eax), %ecx;movl %ecx, (%esp)": 1,
                "jne  <png_write_end+>;cmpl $, %eax;je  <png_write_end+>;movl (%ebp), %eax;testb $, (%eax)": 1,
                "movl (%edx), %ecx;movb %cl, (%eax);movl (%edx), %ecx;movb %cl, (%eax);movl (%edx), %edx": 1,
                "testl %eax, %eax;je  <png_create_write_struct_+>;movl -(%ebp), %eax;movl $, (%eax);movl -(%ebp), %eax": 1,
                "je  <png_create_write_struct_+>;movl -(%ebp), %eax;movl $, (%eax);movl -(%ebp), %eax;movl $, (%eax)": 1,
                "testl %eax, %eax;jne  <png_create_write_struct_+>;movl -(%ebp), %ebx;movl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <png_set_write_fn>;movl -(%ebp), %eax;calll - <png_set_write_fn+>;movl -(%ebp), %eax": 1,
                "jne  <png_write_row+>;cmpb $, (%ebx);jne  <png_write_row+>;testb $, (%ebx);jne  <png_write_row+>": 1,
                "cmpl $, (%ebx);ja  <png_write_row+>;movl %ebx, (%esp);calll  <png_write_chunk+>;jmp  <png_write_row+>": 3,
                "testb $, (%ebx);jne  <png_write_row+>;movl %ebx, (%esp);calll  <png_write_chunk+>;jmp  <png_write_row+>": 1,
                "movb %al, -(%ebp);imull %edx, %eax;movb %al, -(%ebp);cmpb $, %al;jbe  <png_write_row+>": 1,
                "imull %edx, %eax;movb %al, -(%ebp);cmpb $, %al;jbe  <png_write_row+>;shrb $, %al": 1,
                "movzbl (%ebx), %eax;cmpb $, %al;ja  <png_write_row+>;testb $, (%ebx);je  <png_write_row+>": 1,
                "movl %ebx, (%esp);calll  <png_write_png+>;movzbl -(%ebp), %eax;cmpb (%ebx), %al;jne  <png_write_row+>": 1,
                "cmpb $, (%ebx);jne  <png_write_row+>;movl (%ebx), %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "movl $, %ebx;movl (%edi,%ebx,), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <png_write_row>": 1,
                "calll  <png_write_chunk+>;testl %eax, %eax;je  <png_write_flush+>;movl (%ebx), %eax;testl %eax, %eax": 1,
                "movl (%ebx), %eax;testl %eax, %eax;je  <png_write_flush+>;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "jmp - <png_write_flush+>;addl $, %esp;popl %ebx;popl %esi;popl %ebp": 1,
                "addl $, %edi;testb $, %dl;je  <png_write_flush+>;movb $, (%edi);movl %esi, (%ebx)": 1,
                "je  <png_set_filter+>;testb $, (%ebx);je  <png_set_filter+>;cmpl $, %eax;je  <png_set_filter+>": 1,
                "cmpl $, (%ebx);jne  <png_set_filter+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_warning>": 3,
                "movl %ebx, (%esp);calll - <png_malloc>;movl %eax, (%ebx);movb $, (%eax);cmpb $, (%ebx)": 4,
                "subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %esi;movl (%ebp), %edi;movl (%ebp), %ecx": 1,
                "fistpl -(%ebp);fldcw -(%ebp);movl -(%ebp), %eax;movl (%ebx), %edi;movw %ax, (%edi,%edx)": 2,
                "cmpl %ecx, %edx;jne - <png_set_filter_heuristics+>;fstp %st();movl -(%ebp), %edi;jmp  <png_set_filter_heuristics+>": 1,
                "mull %edi;shrl $, %edx;movw %dx, (%esi,%ecx);addl $, %ecx;cmpl $, %ecx": 1,
                "je  <png_set_text_compression_window_bits+>;cmpl $, %esi;jle  <png_set_text_compression_window_bits+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "movl (%ebp), %ebx;movl (%ebp), %esi;testl %ebx, %ebx;je  <png_set_text_compression_method+>;cmpl $, %esi": 1,
                "movl (%ebp), %eax;testl %eax, %eax;je  <png_set_write_status_fn+>;movl (%ebp), %edx;movl %edx, (%eax)": 1,
                "je  <png_write_png+>;testl %edi, %edi;je  <png_write_png+>;movl %esi, (%esp);movl %edi, (%esp)": 1,
                "je  <png_write_png+>;movl $, (%esp);movl $, (%esp);movl %edi, (%esp);calll - <png_set_filler>": 2,
                "shll %cl, %edx;orl %edx, %ebx;testl %ecx, %ecx;jne  <png_write_png+>;movb %bl, (%edi)": 2,
                "jmp  <png_write_png+>;subl $, %ecx;addl $, %eax;cmpl %esi, %eax;jne - <png_write_png+>": 2,
                "mulb (%edx);movb %al, (%edx);cmpb $, %al;jbe  <png_write_png+>;shrb $, %al": 1,
                "movl %ecx, -(%ebp);movzbl (%ebx), %ecx;movl %edx, %esi;subl %ecx, %esi;movl %esi, -(%ebp)": 1,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);movl $, %edx;jmp  <png_write_png+>;movzbl (%ebx), %edx": 1,
                "movl %ecx, -(%ebp,%edx,);addl $, %edx;movzbl (%eax), %ecx;cmpb $, %cl;ja  <png_write_png+>": 1,
                "testl %eax, %eax;je  <png_write_png+>;movl -(%ebp), %edx;movl %edx, -(%ebp);movl -(%ebp), %edi": 1,
                "movl (%ebp), %edx;movzbl (%edx), %ecx;movb $, (%edx);cmpl %ebx, -(%ebp);jle  <png_write_png+>": 1,
                "imull (%eax), %edx;testl %edx, %edx;je  <png_write_png+>;addl (%ebp), %edx;movl %edx, -(%ebp)": 1,
                "movzbl (%esi), %eax;addl %eax, %edi;movl -(%ebp,%edx,), %eax;movl -(%ebp,%edx,), %esi;movl %esi, %edx": 1,
                "movl %esi, -(%ebp);addl $, -(%ebp);movl -(%ebp), %edi;cmpl %edi, -(%ebp);jne - <png_write_png+>": 1,
                "movzbl (%eax), %ecx;movb %cl, (%eax);movzbl (%eax), %ecx;movb %cl, (%eax);movzbl (%eax), %ecx": 5,
                "movb %bl, (%eax);addl $, %eax;addl $, %edx;cmpl %edi, %edx;jne - <png_write_png+>": 2,
                "movzbl (%eax), %ebx;movzbl (%eax), %ecx;movb %cl, (%eax);movb %bl, (%eax);addl $, %eax": 1,
                "movl (%ebp), %eax;movl $, %edx;notb (%eax);addl $, %eax;addl $, %edx": 2,
                "movl (%ebp), %eax;movl $, %edx;notb (%eax);notb (%eax);addl $, %eax": 2,
                "movzbl (%eax), %ecx;subb %cl, (%eax);subb %cl, (%eax);addl $, %edx;addl %esi, %eax": 1,
                "movl %esi, %ebx;andl $, %ebx;movl %ecx, %esi;shrl $, %esi;movl %esi, %edx": 1,
                "movl $, %esi;cmpl $-, %eax;je  <png_write_png+>;movl $, %esi;cmpl $-, %eax": 2,
                "testl %eax, %eax;jne  <png_write_png+>;movl $, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "calll - <png_warning>;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ebp, %esp": 1,
                "testb $, %al;jne  <png_write_png+>;movl %edx, %esi;cmpl %edx, %eax;je  <png_write_png+>": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <png_error>;orl $, (%ebx);jmp  <png_write_png+>": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %ebx;movl %edx, -(%ebp);movl %ecx, %esi": 1,
                "movl (%ebp), %eax;movl (%ebp), %edi;movl $, (%edi);movl $, (%edi);movl $, (%edi)": 1,
                "jne  <png_write_png+>;movl %edx, (%edi);movl %ecx, %eax;jmp  <png_write_png+>;cmpl $, %eax": 1,
                "calll - <png_write_png+>;movl %esi, (%ebx);movl -(%ebp), %edx;movl %edx, (%ebx);movl (%ebx), %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edx;movl %edx, -(%ebp);movl $, (%esp);movl %edx, (%esp)": 1,
                "testl %edx, %edx;je  <png_write_png+>;shll $, %eax;movl %eax, (%esp);movl %ebx, (%esp)": 2,
                "movl %eax, (%esp);movl (%edi), %edx;movl (%edi), %eax;movl (%eax,%edx,), %eax;movl %eax, (%esp)": 2,
                "movl %esi, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll - <png_save_uint_>;movl $, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, %ecx;sarl $, %ecx;movb %cl, (%eax);movl %edx, %ecx": 1,
                "movl (%ebp), %ebx;movb $-, -(%ebp);movb $, -(%ebp);movb $, -(%ebp);movb $, -(%ebp)": 1,
                "movzbl (%ebx), %eax;movl $, %edx;subl %eax, %edx;movl %edx, (%esp);leal -(%ebp,%eax), %eax": 1,
                "movl %ebx, (%esp);calll - <png_write_chunk_data>;jmp  <png_write_chunk_data+>;cmpl $, %ecx;jbe  <png_write_chunk_data+>": 1,
                "testl %edi, %edi;je  <png_write_chunk_data+>;movl (%esi), %eax;movl (%eax), %eax;movzbl (%eax), %eax": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;shll $, %eax;orl $, %eax;testl %edi, %edi": 1,
                "testl %edi, %edi;je  <png_write_chunk_data+>;movl (%esi), %edx;movl (%edx), %edx;movzbl (%edx), %ecx": 1,
                "cmpl %eax, %ecx;je  <png_write_chunk_data+>;movb %al, (%edx);movl (%esi), %edx;movl (%edx), %ecx": 1,
                "je  <png_write_chunk_data+>;movb %al, (%edx);movl (%esi), %edx;movl (%edx), %ecx;movzbl (%ecx), %edx": 1,
                "movl $, %edx;movl %edi, %eax;mull %edx;movl %edi, %eax;subl %edx, %eax": 1,
                "mull %edx;movl %edi, %eax;subl %edx, %eax;shrl %eax;addl %eax, %edx": 1,
                "movb %al, (%edx);movl (%ebx), %edx;movzbl (%edx), %edx;movl %edx, %ecx;andl $, %ecx": 1,
                "movl (%ebx), %ecx;movb %al, (%ecx);jmp - <png_write_chunk_data+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "movb %al, (%ecx);jmp - <png_write_chunk_data+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_error>": 1,
                "leal -(%ebp), %esi;movl %esi, (%esp);calll - <png_save_uint_>;movl $, (%esp);movl %esi, (%esp)": 1,
                "calll - <png_write_chunk_end>;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ebp, %esp": 2,
                "je  <png_write_chunk+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_error>;movb $, (%ebx)": 3,
                "movl $, (%ebp);testb $, (%ebx);je  <png_write_chunk+>;testb $, (%ebx);jne  <png_write_chunk+>": 1,
                "movl %ebx, (%esp);calll - <png_warning>;movl $, (%ebp);cmpl $, (%ebp);jbe  <png_write_chunk+>": 1,
                "shrl $, %eax;movl %eax, (%ebx);movl %esi, (%ebx);movl %edi, %eax;movb %al, (%ebx)": 1,
                "movb %al, (%ebx);movb %dl, (%ebx);movl %esi, (%esp);leal -(%ebp), %esi;movl %esi, (%esp)": 1,
                "calll - <png_save_uint_>;movl (%ebp), %ecx;movl %ecx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "ja  <png_write_chunk+>;movb $, (%ebx);jmp  <png_write_chunk+>;movb $-, (%ebx);movl (%ebx), %eax": 1,
                "testl $, %eax;jne  <png_write_chunk+>;movl (%ebx), %edx;movl %edx, (%ebx);testl $, %eax": 3,
                "jmp  <png_write_chunk+>;movw %bx, (%esi);leal (%ebx,%ebx,), %edi;movl %edi, %ecx;movl $, %edx": 1,
                "movl %edi, %ecx;movl $, %edx;movl %esi, %eax;calll - <png_save_uint_+>;testl %ebx, %ebx": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;movl (%ebp), %edi;testb $, (%ebx);jne  <png_write_chunk+>": 1,
                "jne  <png_write_chunk+>;cmpb $, (%ebx);jne  <png_write_chunk+>;movzbl (%edi), %eax;movl %eax, %edx": 1,
                "je  <png_write_chunk+>;addl $, %edx;shrl $, %edx;cmpb $, -(%ebp);sbbl %ecx, %ecx": 1,
                "addl $, %ecx;imull %ecx, %edx;addl %edx, %esi;movzbl %al, %eax;movl %eax, -(%ebp)": 1,
                "movl $, %edx;shll %cl, %edx;cmpl %edx, %esi;ja  <png_write_chunk+>;cmpl $, %edx": 1,
                "cmpl %eax, -(%ebp);je  <png_write_chunk+>;movb %al, (%edi);movzbl (%edi), %edx;andl $, %edx": 1,
                "movl %edx, %eax;shll $, %eax;subl %edx, %eax;subl %ecx, %esi;leal (%esi,%eax), %eax": 1,
                "movl $, %edx;movl %ebx, %eax;calll - <png_write_chunk_end+>;orl $, (%ebx);movl (%ebx), %eax": 1,
                "movl (%ebp), %esi;movl (%ebp), %ebx;cmpl $, %ebx;jle  <png_write_chunk+>;movl $, (%esp)": 1,
                "movzbl (%eax), %edx;movl (%ebp), %ecx;movzbl (%ecx), %ebx;testb %bl, %bl;je  <png_write_chunk+>": 1,
                "testb %bl, %bl;je  <png_write_chunk+>;cmpb %bl, %dl;jb  <png_write_chunk+>;movzbl (%ecx), %edi": 1,
                "cmpb %cl, %dl;jb  <png_write_chunk+>;movl (%ebp), %ecx;movzbl (%ecx), %ecx;movb %cl, -(%ebp)": 1,
                "movl $, %ebx;testl $, %esi;je  <png_write_chunk+>;movl (%ebp), %ecx;movzbl (%ecx), %edx": 1,
                "movl %edi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <png_access_version_number+>;testl %eax, %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <png_save_uint_>;movl %ebx, (%esp);leal -(%ebp), %eax": 1,
                "movl $, %esi;shll %cl, %esi;cmpl %esi, %edx;jl  <png_write_chunk+>;movl $, (%esp)": 2,
                "movl %eax, (%esp);calll - <png_save_uint_>;movl (%ebp), %edx;movzwl (%edx), %eax;movl %eax, (%esp)": 2,
                "movl %eax, (%esp);calll - <png_save_uint_>;cmpb $, (%ebx);jne  <png_write_chunk+>;movzbl -(%ebp), %eax": 2,
                "orb -(%ebp), %al;orb -(%ebp), %al;je  <png_write_chunk+>;movl $, (%esp);movl %ebx, (%esp)": 2,
                "jmp  <png_write_chunk+>;testb $, %al;je  <png_write_chunk+>;movzwl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl %edi, (%esp);calll - <png_write_chunk_end>;addl $, %esp;popl %ebx;popl %esi": 1,
                "movl (%ebp), %eax;movl $, (%eax);testl %esi, %esi;je  <png_write_chunk+>;movl %esi, %edi": 1,
                "movl %eax, (%edx);testl %eax, %eax;je  <png_write_chunk+>;movzbl (%esi), %eax;testb %al, %al": 1,
                "calll - <png_warning>;movl $, %edi;jmp  <png_write_chunk+>;movl %edi, -(%ebp);movl (%ebp), %edi": 1,
                "movl (%edx), %ebx;cmpb $, (%ebx);jne  <png_write_chunk+>;movl $, (%esp);movl (%ebp), %eax": 1,
                "addl $, %edx;movl $, %ecx;addl $, %ebx;movzbl (%ebx), %eax;testb %al, %al": 1,
                "jmp  <png_write_chunk+>;cmpl $, %edi;jbe  <png_write_chunk+>;movl $, (%esp);movl (%ebp), %eax": 1,
                "subl $, %esp;movl (%ebp), %ebx;cmpb $, (%ebx);setne %al;movzbl %al, %eax": 1,
                "movzbl %al, %eax;leal (,%eax,), %eax;movl %eax, -(%ebp);movl (%ebx), %edi;leal -(%ebp), %eax": 1,
                "imull -(%ebp), %edi;leal (%eax,%edi), %ecx;movl $, %edx;movl (%ebp), %eax;calll - <png_save_uint_+>": 1,
                "movl (%ebx), %eax;leal (%eax,%eax,), %eax;leal (%esi,%eax,), %eax;cmpl %eax, %esi;jae  <png_write_chunk+>": 1,
                "orl %eax, %edi;movzbl (%edx), %eax;shll $, %eax;orl %eax, %edi;jns  <png_write_chunk+>": 1,
                "jns  <png_write_chunk+>;movl $, (%esp);movl %ebx, (%esp);calll - <png_warning>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <png_free>;jmp  <png_write_chunk+>": 4,
                "jmp  <png_write_chunk+>;cmpl %edi, (%ebp);jle  <png_write_chunk+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "je  <png_write_chunk+>;movl %edi, %ecx;leal -(%ebp), %edx;movl %ebx, %eax;calll - <png_write_chunk_data+>": 1,
                "leal -(%ebp), %edx;movl %ebx, %eax;calll - <png_write_chunk_data+>;movl %ebx, (%esp);calll - <png_write_chunk_end>": 2,
                "movl %eax, %edx;testl %eax, %eax;je  <png_write_chunk+>;cmpl $, (%ebp);je  <png_write_chunk+>": 1,
                "je  <png_write_chunk+>;cmpl $, (%ebp);je  <png_write_chunk+>;movl (%ebp), %eax;cmpb $, (%eax)": 1,
                "movl %ebx, (%esp);calll - <png_write_chunk_data>;testl %edi, %edi;je  <png_write_chunk+>;movl %edi, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <png_write_chunk+>;movl %eax, %ebx": 1,
                "movl %eax, -(%ebp);leal (%ebx,%eax), %ecx;movl $, %edx;movl %esi, %eax;calll - <png_save_uint_+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;subl $, %eax;movl %eax, (%esp)": 1,
                "movl %ebx, %eax;calll - <png_save_uint_+>;addl $, %esi;movl %esi, (%esp);movl -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <png_write_chunk_data>;movb $, -(%ebp)": 1,
                "jne  <png_write_chunk+>;leal -(%ebp), %eax;movl %eax, (%ebp);movl %ecx, (%esp);movl (%ebp), %eax": 1,
                "movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edi;movl (%ebp), %esi;cmpl $, %esi": 2,
                "movl $, (%esp);movl %edi, (%esp);calll - <png_warning>;movl (%ebp), %eax;movl %eax, (%esp)": 2,
                "movb %al, -(%ebp);movl $, (%esp);movl %ebx, %ecx;movl $, %edx;movl %edi, %eax": 2,
                "movl $, %edx;movl %edi, %eax;calll - <png_write_chunk_end+>;movl -(%ebp), %ebx;movl -(%ebp), %esi": 2,
                "movl -(%ebp), %edx;leal (%edx,%eax), %ebx;movl (%ebp), %eax;shll $, %eax;movl %eax, (%esp)": 1,
                "jne - <png_write_chunk+>;movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <png_free>": 1,
                "movl %edx, (%esp);calll - <png_write_chunk_end>;jmp  <png_write_chunk+>;movl %ebx, %ecx;movl $, %edx": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <png_save_int_>;movzbl (%ebp), %eax;movb %al, -(%ebp)": 1,
                "movl %eax, (%esp);calll - <png_write_chunk_data>;movl (%ebp), %edx;movl %edx, (%esp);leal -(%ebp), %ebx": 1,
                "movl %eax, (%esp);calll  <png_write_chunk+>;leal -(%ebp,%ebx), %eax;movl %edi, (%esp);movl (%ebp), %edx": 1,
                "leal -(%ebp), %ebx;movl %ebx, (%esp);calll - <png_save_uint_>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <png_save_uint_>;movl %esi, %eax;movb %al, -(%ebp);movl $, (%esp)": 1,
                "subl $, %eax;cmpb $, %al;ja  <png_write_chunk+>;movzbl (%ebx), %eax;cmpb $, %al": 1,
                "movl %eax, (%ebx);movb $, (%eax);testb $, (%ebx);je  <png_write_chunk+>;movl (%ebx), %eax": 2,
                "testb $, (%ebx);je  <png_write_chunk+>;movl (%ebx), %eax;addl $, %eax;movl %eax, (%esp)": 3,
                "je  <png_write_chunk+>;movl %esi, (%esp);movl %ebx, (%esp);calll - <png_calloc>;movl %eax, (%ebx)": 1,
                "calll - <png_calloc>;movl %eax, (%ebx);testb $, (%ebx);je  <png_write_chunk+>;movl (%ebx), %eax": 1,
                "movl %eax, (%ebx);movb $, (%eax);cmpb $, (%ebx);jns  <png_write_chunk+>;movl (%ebx), %eax": 1,
                "calll - <png_write_png+>;movl (%ebx), %eax;movl %eax, (%ebx);movl (%ebx), %eax;movl %eax, (%ebx)": 1,
                "movl (%ebx), %eax;addl $, %eax;movl %eax, (%ebx);cmpl (%ebx), %eax;jb  <png_write_chunk+>": 1,
                "testl %eax, %eax;je - <png_write_chunk+>;movl %esi, %eax;movb %al, (%ebx);movl (%ebx), %eax": 1,
                "movl %esi, (%esp);calll  <png_write_chunk+>;testl %eax, %eax;jne  <png_write_chunk+>;cmpl $, (%ebx)": 1,
                "je  <png_write_chunk+>;movl %eax, (%esp);movl %ebx, (%esp);calll - <png_error>;movl $, (%esp)": 1,
                "notl %esi;movl (%ebp), %ebx;movl %ebx, -(%ebp);movl $, %ebx;movl $, %edx": 1,
                "movl %ecx, -(%ebp);movl %esi, %ecx;andl $, %ecx;movl -(%ebp), %edi;sarl %cl, %edi": 1,
                "cmpl $, %edx;je  <png_write_chunk+>;movl -(%ebp), %eax;movb %bl, (%eax);jmp  <png_write_chunk+>": 2,
                "cmpl %eax, %ebx;jbe  <png_write_chunk+>;movzbl (%edi), %ebx;movl %ebx, -(%ebp);negl %ebx": 1,
                "movl (%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp);movl (%ebp), %edi;movzbl (%edi), %eax": 1,
                "movzbl (%edi), %eax;cmpl %eax, %ebx;jbe  <png_write_chunk+>;movzbl (%edi), %edx;movl %edx, -(%ebp)": 1,
                "cmpl $, %ecx;sbbl %ecx, %ecx;andl $, %ecx;sarl %cl, %esi;andl $, %esi": 1,
                "movl (%ebp), %eax;movzbl (%eax), %ebx;cmpl %ebx, -(%ebp);jbe  <png_write_chunk+>;movl (%ebp), %esi": 1,
                "movl %esi, (%esp);calll  <png_write_chunk+>;addl %edi, %esi;movl (%ebp), %edx;movzbl (%edx), %eax": 1,
                "cmpl %ebx, -(%ebp);ja - <png_write_chunk+>;movl (%ebp), %ebx;movzbl (%ebx), %ecx;movl (%ebp), %edi": 1,
                "shrl $, %edx;movl %edx, -(%ebp);addl $, %eax;cmpl %esi, %eax;jne - <png_write_chunk+>": 3,
                "shll $, %edx;shrl $, %eax;addl %edx, %eax;movl %eax, -(%ebp);jmp  <png_write_chunk+>": 1,
                "movl (%edi), %edx;leal (%edx), %ecx;cmpl $, -(%ebp);je  <png_write_chunk+>;movl $, %eax": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %ebx;addl -(%ebp), %ebx;addl -(%ebp), %ecx;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;jmp  <png_write_chunk+>;movl $, %eax;cmpl %eax, -(%ebp);jbe  <png_write_chunk+>": 1,
                "cmpl %eax, -(%ebp);jbe  <png_write_chunk+>;movl -(%ebp), %esi;subl %eax, %esi;movl $, %eax": 1,
                "shrl $, %ecx;movl %ecx, -(%ebp);addl $, %eax;cmpl %esi, %eax;jne - <png_write_chunk+>": 5,
                "shrl $, %eax;addl %edx, %eax;movl %eax, -(%ebp);movl -(%ebp), %ecx;addl $, %ecx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %ecx;addl $, %ecx;movl %ecx, -(%ebp);movl (%edi), %ecx": 1,
                "movl -(%ebp), %ebx;movzbl (%ebx,%eax), %ecx;movb %cl, (%edi,%eax);movzbl %cl, %ebx;movl $, %esi": 1,
                "shrl $, %ecx;movl $, %edx;cmpl $, %ecx;ja  <png_write_chunk+>;imull %ebx, %eax": 2,
                "movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %edi, -(%ebp);movl -(%ebp), %edi": 2,
                "testb $, -(%ebp);je  <png_write_chunk+>;movl -(%ebp), %eax;movl %eax, -(%ebp);cmpb $, (%edi)": 2,
                "jb  <png_write_chunk+>;addl $, %eax;cmpl -(%ebp), %eax;jne - <png_write_chunk+>;movl -(%ebp), %edi": 1,
                "cmpb $, (%edi);jne  <png_write_chunk+>;movzwl %cx, %ebx;shrl $, %ecx;andl $, %ecx": 1,
                "movzwl (%eax), %eax;movl -(%ebp), %edx;imull %eax, %edx;shrl $, %edx;movl $, %ecx": 1,
                "ja  <png_write_chunk+>;imull %ebx, %eax;movl %edx, %ecx;shll $, %ecx;shrl $, %eax": 1,
                "addl $, %ebx;movl (%edi), %ecx;leal (%ecx), %eax;movl %eax, -(%ebp);movl -(%ebp), %esi": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %esi;movl %edi, -(%ebp);movl -(%ebp), %edi;movzbl (%esi,%eax), %edx": 1,
                "movzbl (%edi,%eax), %ebx;subl %edx, %ebx;movb %bl, (%ecx,%eax);addl $, %eax;cmpl %eax, -(%ebp)": 1,
                "movl $, %ebx;subl %ecx, %ebx;cmpl $, %ecx;jg  <png_write_chunk+>;movl %ecx, %ebx": 2,
                "movl -(%ebp), %edi;movzbl (%edi,%eax), %ecx;addl %ebx, %ecx;sarl %ecx;movzbl (%esi,%eax), %ebx": 1,
                "addl %ebx, %ecx;sarl %ecx;movzbl (%esi,%eax), %ebx;subl %ecx, %ebx;movl -(%ebp), %edi": 1,
                "jle  <png_write_chunk+>;movl $, %ecx;subl %ebx, %ecx;addl %ecx, %edx;cmpl %edx, -(%ebp)": 1,
                "movl %ecx, %edx;shll $, %edx;shrl $, %eax;addl %eax, %edx;cmpl %edx, -(%ebp)": 1,
                "subl %edx, %eax;movl %ecx, %edi;sarl $, %edi;movl %edi, %edx;xorl %ecx, %edx": 2,
                "cmpl %ecx, %edx;jg  <png_write_chunk+>;movl -(%ebp), %ebx;movl -(%ebp), %eax;movzbl (%eax,%esi), %eax": 2,
                "movl -(%ebp), %ebx;movl -(%ebp), %eax;movzbl (%eax,%esi), %eax;movb %al, -(%ebp);subl %ebx, %eax": 2,
                "jle  <png_write_chunk+>;movl (%edi), %ebx;movzbl -(%ebp), %esi;addl $, %esi;movl $, %eax": 1,
                "shll $, %ecx;movl %edx, %eax;shrl $, %eax;addl %ecx, %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %edi;movzbl (%edi,%eax), %edx;movl -(%ebp), %ecx;subb (%ecx,%eax), %dl;movl -(%ebp), %ebx": 1,
                "addl %eax, -(%ebp);jmp  <png_write_chunk+>;movl $, -(%ebp);movl $, -(%ebp);movl -(%ebp), %edx": 1,
                "movl -(%ebp), %eax;addl %esi, %eax;cmpl %eax, -(%ebp);ja - <png_write_chunk+>;movl -(%ebp), %edi": 1,
                "movl (%edi), %ebx;movzwl -(%ebx,%eax,), %ebx;imull %ebx, %esi;shrl $, %esi;imull -(%ebp), %ebx": 1,
                "shrl $, %edx;movl $, -(%ebp);cmpl $, %edx;ja  <png_write_chunk+>;imull %esi, %eax": 1,
                "movl $, -(%ebp);cmpl $, %edx;ja  <png_write_chunk+>;imull %esi, %eax;shll $, %edx": 1,
                "movl (%ebp), %eax;movl (%eax), %ebx;addl $, %ebx;movl -(%ebp), %edx;movl %edx, (%edi)": 1,
                "movl %edi, (%esp);calll - <png_error>;movl $, (%esp);movl %edi, (%esp);calll - <png_error>": 1,
                "leal -(%ebp), %eax;calll - <png_write_chunk+>;testb $, %bl;je  <png_write_chunk+>;movl %esi, %edx": 2,
                "movl (%ebp), %ecx;testl %ecx, %ecx;je  <png_write_chunk+>;movl (%ebp), %eax;notl %eax": 1,
                "andl $, %esi;movl %ecx, %eax;shrl $, %eax;movzbl %cl, %edi;movl (,%eax,), %eax": 1,
                "andl $, (%ebp);jmp  <png_write_chunk+>;movl %edx, (%ebp);cmpl $, (%ebp);jbe  <png_write_chunk+>": 1,
                "cmpl %edi, %ecx;jne - <png_write_chunk+>;andl $, (%ebp);cmpl $, (%ebp);je  <png_write_chunk+>": 1,
                "shrl $, %eax;xorl (,%edx,), %eax;addl $, %ecx;cmpl %ebx, %ecx;jne - <png_write_chunk+>": 1,
                "jmp  <png_write_chunk+>;movl $, %eax;addl $, %esp;popl %ebx;popl %esi": 12,
                "cmpl $, %ebx;sbbl %edx, %edx;notl %edx;andl $, %edx;cmpl %edx, %edi": 1,
                "movl %eax, (%ebx);testl %eax, %eax;je  <png_write_chunk+>;cmpl $, (%ebx);jne  <png_write_chunk+>": 1,
                "movl %eax, (%ebx);movl $, %eax;jmp  <png_write_chunk+>;movl (%ebx), %edx;subl %edx, %eax": 1,
                "movl $, %eax;jmp  <png_write_chunk+>;movl (%ebx), %edx;subl %edx, %eax;movl %esi, %edi": 1,
                "jmp  <png_write_chunk+>;movl %edi, %eax;addl (%ebx), %eax;movl %eax, (%ebx);movl (%ebx), %edx": 1,
                "jmp  <png_write_chunk+>;movl $, %eax;jmp  <png_write_chunk+>;movl $, %eax;leave": 1,
                "movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %eax;testl %esi, %esi;je  <png_write_chunk+>": 1,
                "movl (%esi), %ebx;testl %ebx, %ebx;je  <png_write_chunk+>;testl %eax, %eax;jns  <png_write_chunk+>": 1,
                "jns  <png_write_chunk+>;negl %eax;movl $, -(%ebp);jmp  <png_write_chunk+>;movl %eax, %edx": 1,
                "negl %eax;movl $, -(%ebp);jmp  <png_write_chunk+>;movl %eax, %edx;sarl $, %edx": 1,
                "testl %eax, %eax;je  <png_write_chunk+>;movl %eax, (%ebx);movl $, (%eax);movl (%ebp), %eax": 1,
                "movl %eax, (%esp);calll *(%ebx);movl $, (%ebx);jmp  <png_write_chunk+>;movl $, %edi": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <png_write_chunk+>;leave": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;cmpl $, (%ebp);je  <png_write_chunk+>": 1,
                "movl -(%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %edi;movl (%edi), %ebx": 1,
                "movl -(%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);movl %edi, %eax;movl %esi, %edi": 1,
                "movl $, (%esp);calll - <png_write_chunk+>;movl -(%ebp), %ebx;movl %eax, (%ebx);movb $, -(%ebp)": 1,
                "movl %eax, (%ebx);movb $, -(%ebp);movb $-, -(%ebp);movl $, (%esp);leal -(%ebp), %edx": 1,
                "testb $, (%ebx);je  <png_write_chunk+>;movl -(%ebp), %ecx;shll $, %ecx;andl $, %ecx": 1,
                "andl $, %ecx;movl -(%ebp), %eax;shrl $, %eax;addl %eax, %ecx;movl $, %edx": 1,
                "movl -(%ebp), %ebx;movl $, (%ebx);jmp - <png_write_chunk+>;movl -(%ebp), %eax;andl $, %eax": 1,
                "andl $, %eax;cmpl $, %eax;je  <png_write_chunk+>;movl (%ebp), %ebx;movl $, (%ebx)": 1,
                "addl $, %ecx;cmpl $, %ecx;jbe - <png_write_chunk+>;movl %eax, -(%ebp);movl %ecx, -(%ebp)": 6,
                "jmp - <png_write_chunk+>;testl $, -(%ebp);je  <png_write_chunk+>;movl (%ebp), %ebx;movl $, (%ebx)": 1,
                "movl $, (%ebx);jmp - <png_write_chunk+>;movl -(%ebp), %ebx;movl (%ebx), %eax;testl %eax, %eax": 1,
                "testb $, (%ebx);je  <png_write_chunk+>;movzbl -(%ebp), %eax;movb %al, -(%ebp);movl -(%ebp), %eax": 2,
                "movl %eax, (%ebx);movl -(%ebp), %ebx;movl $, (%ebx);movl $, -(%ebp);movl $, -(%ebp)": 3,
                "jmp  <png_write_chunk+>;testl %esi, %esi;je  <png_write_chunk+>;jmp  <png_write_chunk+>;movl -(%ebp), %eax": 9,
                "addl $, %ecx;cmpl $, %ecx;jbe - <png_write_chunk+>;movl %eax, -(%ebp);movl -(%ebp), %ebx": 3,
                "movb %al, -(%ebp);movl -(%ebp), %eax;shrl $, %eax;movb %al, -(%ebp);movl -(%ebp), %edx": 1,
                "calll - <png_write_chunk+>;movl %eax, (%ebx);movl $, -(%ebp);movl $, -(%ebp);jmp  <png_write_chunk+>": 1,
                "je  <png_write_chunk+>;movl $, (%eax);jmp  <png_write_chunk+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "testb $, (%ebx);je  <png_write_chunk+>;movl (%ebx), %edx;movl %esi, -(%ebp);cmpl %edx, %esi": 1,
                "je  <png_write_chunk+>;movl -(%ebp), %ebx;movl (%ebx), %eax;testl %eax, %eax;je  <png_write_chunk+>": 1,
                "subl %edx, %ebx;movl %ebx, -(%ebp);movl (%eax), %edx;movl -(%ebp), %ebx;addl -(%ebp), %ebx": 1,
                "movl %edx, (%esp);calll  <png_write_chunk+>;movl -(%ebp), %ebx;testb $, (%ebx);je  <png_write_chunk+>": 1,
                "subl -(%ebp), %esi;addl -(%ebp), %edi;movl -(%ebp), %eax;movl -(%ebp), %ebx;subl %eax, (%ebx)": 1,
                "movl -(%ebp), %ebx;movl $, (%ebx);movl $, (%ebx);movl -(%ebp), %ebx;testb $, (%ebx)": 2,
                "movl (%ebx), %eax;testl %eax, %eax;je  <png_write_chunk+>;sarl $, %edx;andl $, %edx": 1,
                "shll $, %ecx;movl -(%ebp), %eax;shrl $, %eax;addl %eax, %ecx;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;andl $, %eax;shll $, %eax;addl %ecx, %eax;movl -(%ebp), %ebx": 1,
                "movl $, -(%ebp);movl -(%ebp), %ebx;cmpl $, (%ebx);jne  <png_write_chunk+>;movl %esi, %eax": 1,
                "jmp - <png_write_chunk+>;movl -(%ebp), %ecx;andl $, %ecx;shrl %cl, -(%ebp);andl $-, -(%ebp)": 1,
                "xorl $, %edx;cmpl %edx, %eax;je  <png_write_chunk+>;movl (%ebp), %ebx;movl $, (%ebx)": 1,
                "subl %ebx, -(%ebp);addl %ebx, -(%ebp);movl -(%ebp), %edx;subl %ebx, (%edx);jmp - <png_write_chunk+>": 1,
                "andl $, %ecx;addl $, %ecx;movl %ecx, (%ebx);shrl $, -(%ebp);subl $, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movl -(%ebp), %ebx;movl (%ebx), %eax;cmpl $, %eax;ja  <png_write_chunk+>": 1,
                "movl %eax, (%ebx);movl %eax, (%ebx);movl $, (%ebx);movl %ebx, %eax;addl $, %eax": 1,
                "leal -(%eax), %eax;movl %eax, (%esp);leal (%eax), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "jmp  <png_write_chunk+>;movl -(%ebp), %edi;movl %ebx, %ecx;subl $, %esi;movzbl (%edi), %eax": 1,
                "subl $, %esi;movzbl (%edi), %eax;shll %cl, %eax;addl %eax, %edx;addl $, %edi": 4,
                "movzwl (%eax), %eax;movw %ax, -(%ebp);movzbl %bl, %eax;cmpl %ecx, %eax;ja - <png_write_chunk+>": 1,
                "cmpw $, -(%ebp);ja  <png_write_chunk+>;shrl %cl, %edx;subl %eax, %ebx;movzwl -(%ebp), %ecx": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %eax;movw %cx, (%eax,%edi,);movl %edi, %eax;addl $, %eax": 1,
                "subl %eax, %ebx;cmpl $, -(%ebp);jne  <png_write_chunk+>;movl -(%ebp), %edi;movl %edx, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <png_write_chunk+>;testl %esi, %esi;je  <png_write_chunk+>;jmp  <png_write_chunk+>": 1,
                "jmp  <png_write_chunk+>;movl -(%ebp), %edi;movl %edx, -(%ebp);movl %ebx, -(%ebp);movl (%ebp), %ebx": 1,
                "movl -(%ebp), %edi;movl (%edi), %ecx;movl $, %eax;shll %cl, %eax;movl %eax, %ecx": 1,
                "andl %edx, %eax;movl -(%ebp), %edi;leal (%edi,%eax,), %eax;movzbl (%eax), %ecx;movzwl (%eax), %eax": 1,
                "movl %ebx, (%esp);movl -(%ebp), %eax;addl $, %eax;movl %eax, (%esp);movl %edx, (%esp)": 1,
                "movl -(%ebp), %edx;movl (%edx), %eax;movl %eax, (%edx);movl $, (%edx);movl %ebx, (%esp)": 1,
                "addl $, %eax;movl %eax, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp);movl (%edx), %eax": 1,
                "movl (%edx), %eax;leal (%edx,%eax,), %eax;movl %eax, (%esp);movl $, (%esp);calll  <png_write_chunk+>": 1,
                "movl $, (%ebx);jmp - <png_write_chunk+>;movl -(%ebp), %ebx;movl $, (%ebx);cmpl $, (%ebp)": 1,
                "movl -(%ebp), %ebx;movl (%ebx), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %ebx;cmpl $, (%ebx)": 1,
                "subl $, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;andl -(%ebp), %eax;movl -(%ebp), %ebx": 2,
                "movl %eax, %edi;jmp  <png_write_chunk+>;testl %ebx, %ebx;je  <png_write_chunk+>;jmp  <png_write_chunk+>": 2,
                "jmp  <png_write_chunk+>;testl %ebx, %ebx;je  <png_write_chunk+>;jmp  <png_write_chunk+>;movl -(%ebp), %ecx": 2,
                "movzbl %al, %edx;cmpl %ecx, %edx;ja - <png_write_chunk+>;movl %esi, -(%ebp);movl %ebx, %esi": 2,
                "je  <png_write_chunk+>;testb $-, -(%ebp);jne  <png_write_chunk+>;movzwl -(%ebp), %ebx;movl %ebx, -(%ebp)": 1,
                "movl %ecx, -(%ebp);movzbl -(%ebp), %ecx;addl -(%ebp), %ecx;movl $, %ebx;shll %cl, %ebx": 2,
                "movl %ebx, %ecx;shll %cl, %eax;addl %eax, -(%ebp);addl $, %edi;addl $, %ebx": 2,
                "movl -(%ebp), %ecx;leal (%ecx,%eax,), %edx;movzbl (%edx), %eax;movb %al, -(%ebp);movzbl (%edx), %eax": 2,
                "movl $, (%ebx);jmp - <png_write_chunk+>;testb $, -(%ebp);je  <png_write_chunk+>;movl -(%ebp), %ebx": 1,
                "movl $, (%ebx);jmp - <png_write_chunk+>;testb $, -(%ebp);je  <png_write_chunk+>;movl (%ebp), %ebx": 1,
                "addl %eax, (%ebx);shrl %cl, -(%ebp);subl %edx, -(%ebp);addl %edx, (%ebx);movl -(%ebp), %ebx": 2,
                "shrl %cl, -(%ebp);subl %edx, -(%ebp);addl %edx, (%ebx);movl -(%ebp), %ebx;movl (%ebx), %eax": 1,
                "movl %eax, %ecx;subl %edx, %ecx;cmpl (%ebx), %ecx;jbe  <png_write_chunk+>;cmpl $, (%ebx)": 1,
                "jmp  <png_write_chunk+>;subl %ecx, %eax;movl -(%ebp), %ebx;addl (%ebx), %eax;movl -(%ebp), %ebx": 1,
                "movl %edx, -(%ebp);movl -(%ebp), %ebx;cmpl $, (%ebx);jne - <png_write_chunk+>;movl $, (%ebx)": 1,
                "jmp - <png_write_chunk+>;cmpl $, -(%ebp);je  <png_write_chunk+>;movl -(%ebp), %ebx;movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl -(%ebp), %ebx;movb %al, (%ebx);addl $, %ebx;movl %ebx, -(%ebp)": 1,
                "movl (%ebp), %ebx;addl %eax, (%ebx);movl -(%ebp), %ebx;addl %eax, (%ebx);testl %eax, %eax": 1,
                "cmpl $, (%ebx);je  <png_write_chunk+>;movl %eax, (%esp);movl -(%ebp), %ebx;subl %eax, %ebx": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll - <png_write_chunk+>;jmp  <png_write_chunk+>;movl %eax, (%esp)": 1,
                "movl -(%ebp), %ebx;movl %eax, (%ebx);movl (%ebp), %ebx;movl %eax, (%ebx);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl -(%ebp), %ebx;cmpl $, (%ebx);jne  <png_write_chunk+>;andl $, %eax": 1,
                "movl $, (%eax);jmp - <png_write_chunk+>;movl %esi, %eax;movl %edi, %esi;movl %eax, %edi": 1,
                "jmp - <png_write_chunk+>;movl %esi, %eax;movl %edi, %esi;movl %eax, %edi;movl $, %ebx": 1,
                "movl %edi, %esi;movl %eax, %edi;movl $, %ebx;movl $, -(%ebp);jmp  <png_write_chunk+>": 2,
                "movl %eax, %edi;movl $, %ebx;movl $, -(%ebp);jmp  <png_write_chunk+>;movl %esi, %eax": 1,
                "movl %eax, %edi;jmp  <png_write_chunk+>;movl %esi, %edx;movl %edi, %esi;movl %eax, -(%ebp)": 6,
                "movl (%esi), %eax;cmpl $, %eax;ja  <png_write_chunk+>;cmpl $, %eax;jbe  <png_write_chunk+>": 1,
                "movl %esi, %eax;calll - <png_write_chunk+>;testl %eax, %eax;je  <png_write_chunk+>;movl -(%ebp), %edi": 1,
                "movl (%ebp), %edi;subl (%edi), %ebx;addl %esi, (%edi);addl %ebx, (%edi);movl -(%ebp), %edi": 1,
                "je  <png_write_chunk+>;cmpl $, (%edi);je  <png_write_chunk+>;movl %ebx, (%esp);movl (%ebp), %edi": 1,
                "cmpl $, %edx;je  <png_write_chunk+>;cmpl $, %edx;je  <png_write_chunk+>;movl $, %edx": 1,
                "movl $, -(%ebp);jmp  <png_write_chunk+>;movl $, -(%ebp);jmp  <png_write_chunk+>;movl $, -(%ebp)": 4,
                "jmp - <png_write_chunk+>;movl -(%ebp), %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "testl %eax, %eax;je  <png_write_chunk+>;movl (%eax), %ebx;testl %ebx, %ebx;je  <png_write_chunk+>": 2,
                "movl (%ebx), %eax;movl %eax, (%esi);movl $, %eax;jmp  <png_write_chunk+>;movl $, %eax": 1,
                "je  <png_write_chunk+>;movl (%esi), %ebx;testl %ebx, %ebx;je  <png_write_chunk+>;cmpl $, (%ebx)": 1,
                "cmpl %eax, (%ebx);jne  <png_write_chunk+>;movl (%ebp), %edx;addl %edi, %edx;movl %edi, %ecx": 1,
                "movl %eax, %ecx;andl $-, %ecx;movl %ecx, (%esi);cmpl $, %ecx;jbe  <png_write_chunk+>": 1,
                "movl %ecx, (%esi);cmpl $, %ecx;jbe  <png_write_chunk+>;movl (%esi), %edx;leal -(%ebp), %eax": 1,
                "cmpl $, %ecx;jbe  <png_write_chunk+>;movl (%esi), %edx;leal -(%ebp), %eax;subl $, %ecx": 1,
                "leal -(%ebp), %edx;calll - <png_write_chunk+>;movl (%ebx), %ecx;leal (%esi), %eax;movl (%ebx), %edx": 1,
                "movl %eax, (%esp);calll *(%esi);movl %eax, -(%ebp);testl %eax, %eax;jne  <png_write_chunk+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll *(%esi)": 1,
                "movl %eax, (%ebx);movl -(%ebp), %edi;movl -(%ebp), %esi;movl $, %eax;testl $, %edi": 1,
                "movb %al, (%edi);movl -(%ebp), %edi;addl $, %edi;movl -(%ebp), %esi;addl $, %esi": 1,
                "pushl %ebx;movl (%ebp), %eax;testl %eax, %eax;je  <png_write_chunk+>;movl (%eax), %edx": 1,
                "subl $, %esp;movl %eax, %edi;movl (%eax), %eax;movl %eax, -(%ebp);movl (%edi), %ecx": 1,
                "movl (%edi), %ecx;movl %ecx, -(%ebp);movl (%edi), %ecx;movl -(%ebp), %ebx;addl %ecx, %ebx": 1,
                "cmpl %ebx, %ecx;jbe  <png_write_chunk+>;leal (%ecx), %ebx;subl -(%ebp), %ebx;movl %ebx, -(%ebp)": 1,
                "movb %cl, -(%ebp);movl -(%ebp), %ebx;movzbl (%ebx,%eax), %ecx;cmpl (%edi), %eax;jb  <png_write_chunk+>": 1,
                "movzbl -(%ebx,%esi), %eax;movb %al, -(%ebp);movl %ecx, %edi;movzbl -(%ebp), %eax;cmpb %al, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);ja - <png_write_chunk+>;movl -(%ebp), %ebx;movl %ebx, -(%ebp);movl -(%ebp), %esi": 1,
                "cmpl -(%ebp), %ebx;jge  <png_write_chunk+>;movl -(%ebp), %ecx;movzbl -(%ecx,%ebx), %ecx;movb %cl, -(%ebp)": 1,
                "jne - <png_write_chunk+>;movl -(%ebp), %edi;jmp  <png_write_chunk+>;movl -(%ebp), %edi;movl %ebx, %esi": 1,
                "subl %ebx, (%edi);subl %ebx, (%edi);subl %ebx, (%edi);movl (%edi), %ecx;movl (%edi), %eax": 1,
                "movl %edx, %esi;subl %ebx, %esi;cmpl %ebx, %edx;sbbl %edx, %edx;notl %edx": 2,
                "jne - <png_write_chunk+>;addl %ebx, -(%ebp);movl (%edi), %esi;movl (%esi), %eax;testl %eax, %eax": 1,
                "jbe  <png_write_chunk+>;movl %eax, -(%ebp);movl $, %edx;cmpl $, -(%ebp);je  <png_write_chunk+>": 1,
                "movl %eax, (%esp);movl %ecx, (%esp);calll  <png_write_chunk+>;movl (%esi), %eax;movl (%eax), %eax": 1,
                "movl -(%ebp), %edx;addl %edx, (%esi);addl %edx, (%esi);addl (%edi), %edx;movl %edx, (%edi)": 1,
                "andl (%edi), %ecx;movl %ecx, (%edi);movl (%edi), %edx;movzwl (%edx,%ecx,), %esi;movl %eax, %ecx": 1,
                "movl %edx, (%edi);addl (%edi), %edx;cmpl $, %edx;jbe  <png_write_chunk+>;cmpl $, (%edi)": 1,
                "cmpl $, (%edi);jne - <png_write_chunk+>;cmpl $, (%edi);ja  <png_write_chunk+>;movl (%edi), %eax": 1,
                "addl %esi, %ebx;movl %ebx, (%edi);jmp  <png_write_chunk+>;leal (%ebx), %ecx;cmpl %ecx, %eax": 1,
                "movl %edx, (%ebx);movl (%ebx), %ecx;movzwl (%ecx,%edx,), %edx;andl (%ebx), %eax;movl (%ebx), %ecx": 2,
                "jbe  <png_write_chunk+>;movl $, (%ebx);movl (%ebx), %eax;cmpl $, %eax;jbe  <png_write_chunk+>": 1,
                "subl $, %eax;subw (%ebx), %dx;leal -(%edx), %ecx;movl (%ebx), %edi;movl (%ebx), %esi": 1,
                "movzbl (%eax), %eax;addw $, (%ebx,%eax,);cmpw $, %dx;ja  <png_write_chunk+>;movzwl %dx, %edx": 1,
                "movzwl (%ecx,%edx,), %ecx;andl (%ebx), %eax;movl (%ebx), %edx;movw %cx, (%edx,%eax,);movl (%ebx), %edx": 1,
                "movl (%ebx), %ecx;movw %cx, (%eax,%edx,);movl (%ebx), %eax;subl $, %eax;movl %eax, (%ebx)": 1,
                "movl (%ebx), %ecx;addl %edx, %ecx;movl $, (%esp);movl %eax, (%esp);movl %ecx, (%esp)": 1,
                "subl $, %edx;cmpl %edx, %eax;jne  <png_write_chunk+>;movl (%ebx), %eax;movl (%ebx), %ecx": 1,
                "movl $, (%ebx);addl $, (%ebx);subl $, (%ebx);jmp - <png_write_chunk+>;cmpl $, (%ebx)": 1,
                "movzbl %al, %eax;addw $, (%ebx,%eax,);movl $, (%ebx);movl (%ebx), %edx;movl %edx, %eax": 1,
                "cmpl $, %eax;jbe  <png_write_chunk+>;subl $, %eax;movl (%ebx), %ecx;subw (%ebx), %cx": 1,
                "subl $, %eax;movl (%ebx), %ecx;subw (%ebx), %cx;movl (%ebx), %edi;movl (%ebx), %edx": 1,
                "movl %edx, (%ebx);subl $, %ecx;movzbl %al, %eax;movzbl (%eax), %eax;addw $, (%ebx,%eax,)": 1,
                "jbe  <png_write_chunk+>;subl $, %eax;movl %eax, (%ebx);movl (%ebx), %ecx;leal (%ecx), %eax": 1,
                "movzbl (%edi,%ecx), %edi;movl (%ebx), %esi;movzbl (%ebx), %ecx;shll %cl, %esi;xorl %esi, %edi": 1,
                "movzbl (%ebx), %ecx;shll %cl, %esi;xorl %esi, %edi;movl %edi, %ecx;andl (%ebx), %ecx": 1,
                "movw %di, (%eax,%ecx,);movl (%ebx), %eax;subl $, %eax;movl %eax, (%ebx);testl %eax, %eax": 1,
                "movl (%ebx), %ecx;shll %cl, %edi;xorl %edi, %eax;andl (%ebx), %eax;movl %eax, (%ebx)": 1,
                "movl (%ebx), %edx;leal (%esi,%edx), %ecx;testl %eax, %eax;je  <png_write_chunk+>;cmpl %ecx, %eax": 1,
                "js  <png_write_chunk+>;movl (%ebx), %eax;addl %edx, %eax;movl $, (%esp);movl %ecx, (%esp)": 2,
                "movl (%eax), %ebx;testl %ebx, %ebx;je  <png_write_chunk+>;testl %esi, %esi;je  <png_write_chunk+>": 1,
                "movl (%ebx), %eax;leal -(%eax,%eax), %edx;movl (%ebx), %eax;movl %edx, (%esp);movl $, (%esp)": 2,
                "calll  <png_write_chunk+>;movl $, (%ebx);movl $, (%ebx);movl $, (%ebx);movl (%ebx), %eax": 1,
                "movzbl (%edx,%eax), %edx;movl (%ebx), %ecx;movl (%ebx), %edi;shll %cl, %edi;xorl %edi, %edx": 1,
                "movw %di, (%edx,%ecx,);movl (%ebx), %ecx;movl (%ebx), %edx;movw %ax, (%edx,%ecx,);addl $, %eax": 1,
                "movl %edx, %eax;addl (%ebx), %eax;movl %eax, (%ebx);movl %eax, (%ebx);movl %edx, (%ebx)": 1,
                "movl $, %eax;jmp  <png_write_chunk+>;cmpl $, (%ebx);je - <png_write_chunk+>;nop": 1,
                "jmp  <png_write_chunk+>;cmpl $, (%ebx);je - <png_write_chunk+>;nop;jmp - <png_write_chunk+>": 1,
                "movl (%ebx), %eax;movl %eax, (%ebx);movl (%ebx), %eax;testl %eax, %eax;jns  <png_write_chunk+>": 1,
                "calll - <png_write_chunk+>;jmp  <png_write_chunk+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl %ebx, (%esp);calll - <png_write_chunk+>": 1,
                "movl %ecx, (%ebx);movzwl (%edx), %edx;movl %edx, (%ebx);movzwl (%eax), %edx;movl %edx, (%ebx)": 1,
                "je  <png_write_chunk+>;movl (%eax), %ebx;testl %ebx, %ebx;je  <png_write_chunk+>;testl %ecx, %ecx": 1,
                "andl (%ebp), %edx;movl %eax, %ecx;shll %cl, %edx;orw %dx, (%esi);addl %ebx, %eax": 1,
                "cmpl $, %edx;sbbl %edx, %edx;notl %edx;andl $, %edx;jmp  <png_write_chunk+>": 1,
                "movl %edx, -(%ebp);testl %edx, %edx;je  <png_write_chunk+>;cmpl $, (%edx);je  <png_write_chunk+>": 1,
                "testl %esi, %esi;je  <png_write_chunk+>;movl -(%ebp), %edx;subl %edx, %esi;movl %esi, -(%ebp)": 1,
                "je  <png_write_chunk+>;movl (%esi), %edi;testl %edi, %edi;je  <png_write_chunk+>;cmpl $, (%ebp)": 1,
                "je  <png_write_chunk+>;cmpl $, (%ebp);ja  <png_write_chunk+>;cmpl $, (%esi);je  <png_write_chunk+>": 1,
                "addl (%edi), %ebx;movl (%edi), %ecx;movl $, %edx;cmpl $, %ecx;je  <png_write_chunk+>": 1,
                "addl $, %eax;movl %eax, (%edi);movl $, (%edi);jmp  <png_write_chunk+>;addl (%edi), %ecx": 1,
                "addl %ecx, %edx;movl -(%ebp), %ecx;movb %dl, (%ecx);leal (%eax), %edx;movl %edx, (%edi)": 1,
                "leal (%eax), %edx;movl %edx, (%edi);movl (%edi), %edx;movl (%edi), %ecx;movzwl (%ecx), %ecx": 1,
                "movzbl (%ecx), %ecx;movb %cl, (%edx,%eax);leal (%eax), %ecx;movl %ecx, (%edi);addl (%edi), %ecx": 1,
                "movl %ecx, (%edi);addl (%edi), %ecx;movl (%edi), %ebx;movl $, %edx;cmpl $, %ebx": 1,
                "cmpl $, %ecx;jle  <png_write_chunk+>;movb $, %al;cmpl $, %ecx;jle  <png_write_chunk+>": 1,
                "subl %edx, %eax;movl %eax, %edx;movl $, (%edi);addl $, %edx;movl %edi, %eax": 1,
                "movzwl (%esi), %edx;movl %edi, %eax;calll - <png_write_chunk+>;movzwl (%esi), %edx;movl %edi, %eax": 2,
                "movl %ecx, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll - <png_write_chunk+>;movl %eax, (%esi)": 2,
                "movl (%esi), %eax;movl %eax, (%esp);calll - <png_write_chunk+>;movl %eax, (%esi);movl %esi, %eax": 1,
                "movb %bl, (%edx,%eax);addl $, %eax;movl %eax, (%edi);movl (%edi), %ebx;addl $, %ebx": 1,
                "movl $, (%edi);movl $, (%edi);jmp  <png_write_chunk+>;movl $, (%edi);jmp  <png_write_chunk+>": 2,
                "movl (%ecx), %eax;movl %eax, (%esp);calll - <png_write_chunk+>;movl -(%ebp), %ebx;movl %eax, (%ebx)": 1,
                "addl $, %eax;movl %eax, (%edi);movl (%edi), %eax;movl (%edi), %esi;movb %dl, (%esi,%eax)": 2,
                "subl %ecx, %eax;movl %eax, (%esp);movl (%edi), %eax;addl %ecx, %eax;movl %eax, (%esp)": 2,
                "movl (%esi), %ecx;shrl $, %ecx;movb %cl, (%ebx,%eax);movl %edx, (%edi);movl $, (%esp)": 1,
                "jmp  <png_write_chunk+>;cmpl $, (%esi);jne  <png_write_chunk+>;movl (%ebp), %edx;addl %edx, %edx": 1,
                "cmpl $, -(%ebp);setge %al;movzbl %al, %eax;leal (%eax,%eax,), %eax;subl %eax, %ecx": 1,
                "movl $, %eax;jmp  <png_write_chunk+>;cmpl $, (%esi);jne  <png_write_chunk+>;cmpl $, (%edi)": 1,
                "cmpl $, (%edi);jne  <png_write_chunk+>;movl $, %eax;cmpl $, (%ebp);jne  <png_write_chunk+>": 1,
                "movl %edx, (%esp);movl %ecx, (%esp);movl %edi, (%esp);calll  <png_write_chunk+>;movl (%edi), %eax": 1,
                "movl %edi, (%esp);calll  <png_write_chunk+>;movl (%edi), %eax;movl %eax, (%edi);movl (%edi), %eax": 6,
                "movl (%edi), %edx;addl %eax, %edx;movl $, (%esp);movl %ecx, (%esp);movl %edx, (%esp)": 5,
                "testl %edx, %edx;je  <png_write_chunk+>;movl (%edi), %ecx;movl %ecx, -(%ebp);leal -(%ecx,%edx), %ecx": 1,
                "movl %ebx, -(%ebp);movzbl (%ecx), %ebx;cmpl %ebx, -(%ebp);jne  <png_write_chunk+>;movzbl (%ecx), %ebx": 1,
                "movl $, (%edi);jmp  <png_write_chunk+>;movl (%edi), %edx;movl (%edi), %eax;movzbl (%edx,%eax), %edx": 1,
                "movl $, (%edi);testl $, %eax;jne  <png_write_chunk+>;movl $, %eax;cmpl $, (%esi)": 1,
                "cmpl $, (%ebp);jne  <png_write_chunk+>;movl (%edi), %edx;movl (%edi), %eax;movw $, -(%eax,%edx,)": 1,
                "calll  <png_write_chunk+>;cmpl $, (%edi);jne  <png_write_chunk+>;movl $, (%edi);movl $, (%edi)": 1,
                "movl (%edi), %ecx;movl (%esi), %edx;movb %dl, (%ecx,%eax);leal (%eax), %edx;movl %edx, (%edi)": 2,
                "leal (%eax), %edx;movl %edx, (%edi);movl (%edi), %edx;movl (%esi), %ecx;shrl $, %ecx": 2,
                "testb %al, %al;jne  <png_write_chunk+>;cmpl $, %edi;jg  <png_write_chunk+>;movl (%ebx), %eax": 1,
                "leal (%esi,%esi,), %ecx;cmpl %eax, (,%ecx,);je  <png_write_chunk+>;movl $, %eax;cmpl $, (%edx)": 1,
                "cmpl %eax, (,%ecx,);je  <png_write_chunk+>;movl $, %eax;cmpl $, (%edx);je  <png_write_chunk+>": 1,
                "movl $, %eax;cmpl %esi, (%ebx);je  <png_write_chunk+>;movl %esi, (%ebx);leal (%esi,%esi,), %ecx": 1,
                "movl (%ebx), %eax;testl %eax, %eax;je  <png_write_chunk+>;movl (%eax), %esi;cmpl $, %esi": 1,
                "je  <png_write_chunk+>;movl (%eax), %esi;cmpl $, %esi;je  <png_write_chunk+>;cmpl $, %esi": 1,
                "je  <png_write_chunk+>;cmpl $, %esi;je  <png_write_chunk+>;cmpl $, %esi;jne  <png_write_chunk+>": 1,
                "jne  <png_write_chunk+>;movl (%eax), %eax;testl %eax, %eax;je  <png_write_chunk+>;movl %eax, (%esp)": 1,
                "subl $, %esp;movl (%ebp), %esi;movl (%ebp), %edi;movl (%ebp), %eax;testl %eax, %eax": 1,
                "cmpl $, (%ebp);jne  <png_write_chunk+>;testl %esi, %esi;je  <png_write_chunk+>;movl $, (%esi)": 1,
                "movl $, (%esi);cmpl $, (%esi);jne  <png_write_chunk+>;movl $, (%esi);movl $, (%esi)": 1,
                "jne  <png_write_chunk+>;movl $, (%esi);cmpl $-, (%ebp);jne  <png_write_chunk+>;movl $, (%ebp)": 1,
                "jg  <png_write_chunk+>;cmpl $, %edi;jne  <png_write_chunk+>;movw $, %di;movl $, (%esp)": 1,
                "cmpl $, %edi;jne  <png_write_chunk+>;movw $, %di;movl $, (%esp);movl $, (%esp)": 1,
                "shll %cl, %eax;movl %eax, %ecx;movl %eax, (%ebx);subl $, %ecx;movl %ecx, (%ebx)": 1,
                "subl $, %ecx;movl %ecx, (%ebx);movl (%ebp), %eax;addl $, %eax;movl $, %edx": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp);calll *(%esi)": 2,
                "jne  <png_write_chunk+>;movl $, (%ebx);movl , %eax;movl %eax, (%esi);movl %esi, (%esp)": 1,
                "movl %esi, (%esp);calll - <png_write_chunk+>;movl $, %eax;jmp  <png_write_chunk+>;movl %edx, %ecx": 1,
                "je  <png_write_chunk+>;movl (%eax), %edx;movl (%ebp), %ebx;movl %edx, (%ebx);movl (%eax), %edx": 1,
                "movl (%eax), %ecx;movl %ecx, (%ebx);movl (%eax), %ebx;movl (%ebp), %esi;movl %ebx, (%esi)": 1,
                "movl %eax, (%esi);movl $, (%esp);movl $, (%esp);movl %ecx, (%esp);calll *%edx": 1,
                "je  <png_write_chunk+>;movzbl (%esi,%edx), %eax;movb %al, (%edi,%edx);movl (%ebp), %edi;movl %edi, (%ebx)": 1,
                "movl -(%ebp), %edi;movl (%edi), %edx;movl %ecx, (%esp);movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl %edx, (%esp);movl %eax, (%esp);calll  <png_write_chunk+>;movl (%ebx), %eax;movl (%ebx), %ecx": 2,
                "movl %eax, %ecx;andl $-, %ecx;addl %ecx, %esi;movl %esi, (%ebx);leal (%eax,%eax,), %eax": 1,
                "movl %edx, (%ebx);leal (%ebx), %eax;movl %eax, (%ebx);leal (%ebx), %eax;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);leal (%ebx), %eax;movl %eax, (%ebx);movl $, %eax;jmp  <png_write_chunk+>": 1,
                "shrl $, %esi;shrl $, %ebx;addl %esi, %ebx;subl %edx, %ebx;movl $, %eax": 1,
                "imull $, %edx, %edx;movl -(%ebp), %eax;subl %edx, %eax;addl %eax, %ebx;leal (%ebx), %eax": 1,
                "leal -(%ebx), %eax;cmpl $, %eax;jbe  <png_write_chunk+>;subl $, %eax;shll $, %eax": 1,
                "subl $, %eax;shll $, %eax;orl %ecx, %eax;jmp  <png_write_chunk+>;movl $, %eax": 1,
                "movl (%ebp), %ecx;movzbl (%ecx), %eax;addl %eax, %edi;cmpl $, %edi;jbe  <png_write_chunk+>": 1,
                "jbe  <png_write_chunk+>;subl $, %eax;shll $, %eax;orl %edi, %eax;jmp  <png_write_chunk+>": 1,
                "movl %ecx, -(%ebp);cmpl $, %edi;jbe  <png_write_chunk+>;subl $, %edi;movl $, %edx": 1,
                "movzbl (%eax), %esi;addl %edi, %esi;movzbl (%eax), %ebx;addl %esi, %ebx;movzbl (%eax), %ecx": 1,
                "movl %eax, -(%ebp);movzbl (%esi), %eax;addl -(%ebp), %eax;movl %eax, -(%ebp);movzbl (%esi), %ecx": 1,
                "addl -(%ebp), %ebx;addl -(%ebp), %ebx;addl -(%ebp), %ebx;addl -(%ebp), %ebx;addl %ebx, %ecx": 1,
                "movl -(%ebp), %eax;addl $, %eax;shll $, %eax;addl %eax, (%ebp);leal -(%edx), %eax": 1,
                "addl %eax, (%ebp);leal -(%edx), %eax;testl %edx, %edx;jne  <png_write_chunk+>;jmp  <png_write_chunk+>": 1,
                "imull $, %eax, %eax;subl %eax, %edi;movl -(%ebp), %eax;mull %ecx;movl %edx, %eax": 1,
                "movl -(%ebp), %eax;shll $, %eax;orl %edi, %eax;jmp  <png_write_chunk+>;movl $, %eax": 1,
                "movl (%ebp), %eax;jmp - <png_write_chunk+>;cmpl $, (%ebp);jne - <png_write_chunk+>;jmp - <png_write_chunk+>": 1,
                "movl $, %eax;subl %edx, %esi;js  <png_write_chunk+>;jmp  <png_write_chunk+>;addl %esi, %esi": 1,
                "subl %edx, %esi;js  <png_write_chunk+>;jmp  <png_write_chunk+>;addl %esi, %esi;movzwl (%eax), %ebx": 1,
                "jmp  <png_write_chunk+>;addl %esi, %esi;movzwl (%eax), %ebx;subl %ebx, %esi;js  <png_write_chunk+>": 1,
                "movl $, %eax;addl $, %eax;movzwl -(%ebp,%eax,), %ecx;addw -(%ebp,%eax,), %cx;movw %cx, -(%ebp,%eax,)": 1,
                "je  <png_write_chunk+>;movb $, %al;movl %edx, -(%ebp);movl (%ebp), %esi;movzwl (%esi,%eax,), %edx": 1,
                "movb $, %al;movl %edx, -(%ebp);movl (%ebp), %esi;movzwl (%esi,%eax,), %edx;testw %dx, %dx": 1,
                "movzwl %dx, %edx;movzwl -(%ebp,%edx,), %ebx;movl (%ebp), %ecx;movw %ax, (%ecx,%ebx,);movzwl -(%ebp,%edx,), %ecx": 1,
                "sete -(%ebp);cmpl $, -(%ebp);jbe  <png_write_chunk+>;movl $, %eax;cmpb $, -(%ebp)": 1,
                "movzbl -(%ebp), %edx;subb -(%ebp), %dl;movb %dl, -(%ebp);movl -(%ebp), %ebx;movl %ebx, -(%ebp)": 1,
                "movl -(%ebp), %ebx;movl %ebx, -(%ebp);movzwl (%ebx), %ebx;movzwl %bx, %eax;movl $, %edx": 1,
                "movzbl -(%ebp), %ecx;shrl %cl, %eax;addl -(%ebp), %eax;subl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "andl %esi, %eax;leal (%eax,%ecx), %esi;jmp  <png_write_chunk+>;movl $, %esi;movl -(%ebp), %edx": 1,
                "movl %eax, %ebx;jmp  <png_write_chunk+>;movzwl (%ecx,%edi,), %eax;subl %eax, %edx;testl %edx, %edx": 1,
                "leal (,%ebx,), %eax;movl (%ebp), %ecx;movl (%ecx), %edx;movl %edi, %ecx;movb %cl, (%edx,%ebx,)": 1,
                "movw %cx, (%edx,%eax);movl %ebx, -(%ebp);jmp - <png_write_chunk+>;testl %esi, %esi;je  <png_write_chunk+>": 1,
                "addl $, %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl $, (%eax);movl $, %eax": 1,
                "jmp - <png_write_chunk+>;movl %eax, %ebx;cmpl $, %eax;jbe  <png_write_chunk+>;movl $, %ebx": 1,
                "movl %eax, -(%ebp);movl (%ebx), %esi;subl $, %esi;movl %esi, -(%ebp);movl (%ebx), %eax": 1,
                "movl (%ebx), %eax;movl %eax, %edx;subl (%ebp), %edx;addl %esi, %edx;movl %edx, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl -(%ebp), %edx;movl (%edx), %edx": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %eax;movl (%eax), %esi;movl (%eax), %edi;movl (%eax), %edx": 1,
                "movl %eax, %edx;shll %cl, %edx;movl %edx, %ecx;subl $, %ecx;movl %ecx, -(%ebp)": 1,
                "movl %edx, -(%ebp);cmpl $, %edi;ja  <png_write_chunk+>;movl -(%ebp), %ebx;movzbl (%ebx), %eax": 1,
                "movzbl (%ebx), %eax;movl %edi, %ecx;shll %cl, %eax;movzbl (%ebx), %edx;leal (%edi), %ecx": 2,
                "jmp  <png_write_chunk+>;movl -(%ebp), %eax;movb %dl, (%eax);leal (%eax), %eax;movl %eax, -(%ebp)": 1,
                "jmp  <png_write_chunk+>;testb $, %al;je  <png_write_chunk+>;movzwl %dx, %edx;movl %edx, -(%ebp)": 1,
                "movl %edx, -(%ebp);andl $, %eax;movzbl %al, %edx;testl %edx, %edx;je  <png_write_chunk+>": 1,
                "shrl %cl, %esi;subl %edx, %edi;cmpl $, %edi;ja  <png_write_chunk+>;movl -(%ebp), %ebx": 1,
                "subl %edx, %edi;cmpl $, %edi;ja  <png_write_chunk+>;movl -(%ebp), %ebx;movzbl (%ebx), %eax": 1,
                "andl $, %edx;movzbl %dl, %ebx;cmpl %edi, %ebx;jbe  <png_write_chunk+>;movl -(%ebp), %ecx": 1,
                "movl %ecx, -(%ebp);movl %edx, %eax;subl -(%ebp), %eax;cmpl $, -(%ebp);ja  <png_write_chunk+>": 1,
                "addl -(%ebp), %edx;movl %edx, -(%ebp);movl %edx, %eax;subl -(%ebp), %eax;jmp - <png_write_chunk+>": 1,
                "movl %edx, -(%ebp);jmp  <png_write_chunk+>;movl -(%ebp), %eax;subl -(%ebp), %eax;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %ebx;testl %ecx, %ecx;je  <png_write_chunk+>;movzbl (%eax), %edx": 1,
                "movzbl %cl, %ebx;shrl %cl, %esi;subl %ebx, %edi;testb %al, %al;jne - <png_write_chunk+>": 1,
                "shrl %cl, %esi;subl %ebx, %edi;testb %al, %al;jne - <png_write_chunk+>;jmp - <png_write_chunk+>": 1,
                "testb %al, %al;jne - <png_write_chunk+>;jmp - <png_write_chunk+>;testb $, %al;je  <png_write_chunk+>": 1,
                "cmpl %edx, -(%ebp);jae  <png_write_chunk+>;movl -(%ebp), %ebx;cmpl %ebx, -(%ebp);jb - <png_write_chunk+>": 1,
                "movl -(%ebp), %ebx;addl $, %ebx;movl %ebx, (%esi);cmpl %eax, -(%ebp);jbe  <png_write_chunk+>": 1,
                "movl %ebx, %eax;addl $, %eax;jmp  <png_write_chunk+>;movl -(%ebp), %esi;subl %eax, %esi": 1,
                "movl %eax, (%ebx);movl -(%ebp), %esi;movl %edx, (%esi);movl %ecx, (%esi);addl $, %esp": 1,
                "cmpl $, %edx;jne - <png_write_chunk+>;movb $, %dl;movw $, (%eax,%edx,);addl $, %edx": 1,
                "movw $, (%eax,%edx,);addl $, %edx;cmpl $, %edx;jne - <png_write_chunk+>;movw $, (%eax)": 1,
                "addl $, %edx;cmpl $, %edx;jne - <png_write_chunk+>;movw $, (%eax);movl $, (%eax)": 1,
                "cmpw %bx, %di;jne  <png_write_chunk+>;movzbl (%eax,%ecx), %ebx;movl -(%ebp), %edi;cmpb %bl, (%eax,%edi)": 1,
                "cmpb %bl, (%eax,%edi);jbe  <png_write_chunk+>;movl %edx, %esi;jmp  <png_write_chunk+>;movl %edx, %esi": 1,
                "movl (%eax), %ecx;movl %esi, -(%ebp);cmpl %edx, %ecx;jge - <png_write_chunk+>;jmp  <png_write_chunk+>": 1,
                "movl %eax, -(%ebp);cmpl $, %edx;sbbl %esi, %esi;andl $, %esi;addl $, %esi": 1,
                "movl -(%ebp), %eax;movw $, (%eax,%ecx,);testl %ecx, %ecx;js  <png_write_chunk+>;movl $, %eax": 1,
                "subl $, %esp;movl %eax, %edi;movl %edx, -(%ebp);movl %ecx, -(%ebp);movzwl (%edx), %eax": 1,
                "sbbl %ecx, %ecx;addl $, %ecx;cmpl $, %eax;sbbl %edx, %edx;andl $, %edx": 1,
                "je  <png_write_chunk+>;cmpl %esi, -(%ebp);je  <png_write_chunk+>;movzwl (%edi,%esi,), %eax;movl (%edi), %ecx": 1,
                "jmp  <png_write_chunk+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movzwl (%edi), %eax;movl (%edi), %ecx": 1,
                "jle  <png_write_chunk+>;movzwl (%edi), %edx;movl %edx, -(%ebp);shll %cl, %edx;movl %edx, %ecx": 1,
                "movl %eax, (%edi);movl (%edi), %eax;movl $, %ecx;subl %eax, %ecx;sarl %cl, %edx": 1,
                "jmp  <png_write_chunk+>;movzwl -(%ebp), %eax;subl $, %eax;movzwl %ax, %eax;shll %cl, %eax": 4,
                "jg  <png_write_chunk+>;movzwl (%edi), %ebx;movl (%edi), %ecx;movl $, %eax;subl %ebx, %eax": 1,
                "movzwl (%edi), %ebx;movl (%edi), %ecx;movl $, %eax;subl %ebx, %eax;cmpl %eax, %ecx": 2,
                "movl $, %ecx;movl $, %edx;movl $, -(%ebp);jmp  <png_write_chunk+>;movl -(%ebp), %ebx": 1,
                "jne  <png_write_chunk+>;movzbl %al, %eax;movl -(%ebp), %ecx;leal (%ecx,%eax,), %edx;movzwl (%edx), %eax": 1,
                "movl %eax, (%edi);jmp  <png_write_chunk+>;movzbl %al, %eax;movl %eax, -(%ebp);movzbl (%eax), %eax": 1,
                "movl (%edi), %ecx;movl $, %esi;subl %edx, %esi;cmpl %esi, %ecx;jle  <png_write_chunk+>": 2,
                "orw (%edi), %bx;movw %bx, (%edi);movl (%edi), %ecx;movl (%edi), %esi;movb %bl, (%esi,%ecx)": 2,
                "addl $, %ecx;movl %ecx, (%edi);movl (%edi), %ebx;movl $, %ecx;subl %ebx, %ecx": 2,
                "subl %ebx, %ecx;movl -(%ebp), %esi;sarl %cl, %esi;movw %si, (%edi);leal -(%edx,%ebx), %edx": 2,
                "movzwl %ax, %esi;movl %esi, %eax;shll %cl, %eax;movl %eax, %ecx;orw (%edi), %cx": 1,
                "movl (%edi), %eax;movl $, %ecx;subl %eax, %ecx;sarl %cl, %esi;movw %si, (%edi)": 1,
                "movl (%eax), %esi;movl %esi, -(%ebp);movl (%eax), %esi;movl $, (%edi);movl $, (%edi)": 1,
                "testl %esi, %esi;jle  <png_write_chunk+>;movl %ebx, %edx;movl $, -(%ebp);movl $, %eax": 1,
                "movl (%edi), %ecx;leal (%ecx), %ebx;movl %ebx, (%edi);movl %eax, (%edi,%ecx,);movb $, (%edi,%eax)": 1,
                "addl $, %eax;addl $, %edx;cmpl %esi, %eax;jne - <png_write_chunk+>;movl %ecx, -(%ebp)": 1,
                "jg  <png_write_chunk+>;addl $, %ecx;movl %ecx, %eax;movl %eax, (%edi,%ebx,);leal (,%eax,), %ebx": 1,
                "movw $, (%esi,%eax,);movb $, (%edi,%eax);subl $, (%edi);testl %edx, %edx;je  <png_write_chunk+>": 1,
                "sarl %eax;movl %eax, %ebx;testl %eax, %eax;jle  <png_write_chunk+>;movl -(%ebp), %esi": 1,
                "movl (%edi), %ebx;movl %ebx, -(%ebp);movl (%edi), %eax;movl (%edi,%eax,), %edx;movl %edx, (%edi)": 1,
                "movzbl (%edi,%edx), %edx;leal (%edx), %ecx;cmpb %dl, %bl;jb  <png_write_chunk+>;leal (%ebx), %ecx": 1,
                "leal (%edx), %ecx;cmpb %dl, %bl;jb  <png_write_chunk+>;leal (%ebx), %ecx;movl -(%ebp), %ebx": 1,
                "movl (%eax), %ebx;movl %ebx, -(%ebp);movl (%eax), %esi;movl %esi, -(%ebp);movl (%eax), %eax": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl $, %eax;movw $, (%edi,%eax,);addl $, %eax": 1,
                "leal (%edi,%eax,), %esi;leal (%edi), %edx;movl %edx, -(%ebp);movl $, -(%ebp);movl (%esi), %edx": 1,
                "addl $, %eax;cmpl %eax, -(%ebp);jge  <png_write_chunk+>;addl $, -(%ebp);movl -(%ebp), %eax": 1,
                "imull %edx, %eax;addl %eax, (%edi);cmpl $, -(%ebp);je  <png_write_chunk+>;movl -(%ebp), %ebx": 1,
                "cmpl -(%ebp), %esi;jne - <png_write_chunk+>;movl $, %eax;cmpl $, -(%ebp);je  <png_write_chunk+>": 1,
                "je - <png_write_chunk+>;subl $, %ecx;movw %cx, (%edi,%edx,);addw $, (%edi,%edx,);subw $, (%edi,%ebx,)": 1,
                "jg - <png_write_chunk+>;cmpl $, -(%ebp);je  <png_write_chunk+>;movl -(%ebp), %esi;movl %esi, -(%ebp)": 1,
                "cmpl -(%ebp), %esi;je  <png_write_chunk+>;movl %esi, %ebx;movl -(%ebp), %esi;subl %ebx, %esi": 1,
                "movl %esi, %ebx;movl -(%ebp), %esi;subl %ebx, %esi;movzwl (%ecx), %ebx;imull %esi, %ebx": 1,
                "addl %ebx, (%edi);movzwl -(%ebp), %esi;movw %si, (%ecx);subl $, %edx;testl %edx, %edx": 1,
                "subl $, %eax;testl %eax, %eax;jg - <png_write_chunk+>;shrl %ecx;movl -(%ebp), %ebx": 1,
                "testl %eax, %eax;jg - <png_write_chunk+>;shrl %ecx;movl -(%ebp), %ebx;movw %cx, (%ebx,%edi,)": 1,
                "movl (%eax), %edx;movl (%eax), %ebx;movzwl (%eax), %ecx;movb %cl, (%ebx,%edx);movl (%eax), %ecx": 3,
                "movzwl (%eax), %ecx;movl (%eax), %ebx;movb %cl, (%ebx,%edx);addl $, %edx;movl %edx, (%eax)": 2,
                "subl $, (%eax);popl %ebx;popl %ebp;retl;pushl %ebp": 1,
                "pushl %ebx;movl (%ebp), %ebx;movl (%ebp), %esi;movl (%ebx), %ecx;cmpl $, %ecx": 1,
                "shll %cl, %edx;orw (%ebx), %dx;movw %dx, (%ebx);movl (%ebx), %eax;movl (%ebx), %ecx": 1,
                "movl $, %ecx;subl %eax, %ecx;sarl %cl, %edi;movw %di, (%ebx);subl $, %eax": 1,
                "sarl %cl, %ebx;movw %bx, (%eax);subl $, %edx;movl %edx, (%eax);jmp  <png_write_chunk+>": 1,
                "addl $, %edx;movl %edx, (%eax);calll - <png_write_chunk+>;popl %ebx;popl %esi": 1,
                "jne - <png_write_chunk+>;movw $, %ax;jmp  <png_write_chunk+>;movl $, %eax;jmp  <png_write_chunk+>": 1,
                "movl (%ebx), %ecx;leal (%ebx), %edx;movl %ebx, %eax;calll - <png_write_chunk+>;movl (%ebx), %ecx": 1,
                "jmp  <png_write_chunk+>;leal (%esi), %ecx;movl %ecx, %edx;movl $, %eax;jmp  <png_write_chunk+>": 1,
                "jmp  <png_write_chunk+>;movl %ecx, %edx;leal (%esi), %edi;cmpl %edi, %edx;jb  <png_write_chunk+>": 1,
                "movl %ecx, %edx;leal (%esi), %edi;cmpl %edi, %edx;jb  <png_write_chunk+>;cmpl $, (%ebp)": 1,
                "movl (%ebx), %eax;movl $, %ecx;subl %eax, %ecx;sarl %cl, %edx;movw %dx, (%ebx)": 1,
                "jmp  <png_write_chunk+>;movzwl (%ebp), %eax;addl $, %eax;movzwl %ax, %eax;shll %cl, %eax": 1,
                "movb %cl, (%edi,%edx);movl (%ebx), %edi;movzbl (%ebx), %ecx;movb %cl, (%edi,%edx);addl $, %edx": 2,
                "subl %edx, %ecx;sarl %cl, %esi;movw %si, (%ebx);subl $, %edx;movl %edx, (%ebx)": 2,
                "shll %cl, %edx;orw %dx, (%ebx);addl $, %ecx;movl %ecx, (%ebx);leal (%eax), %edx": 1,
                "addl $, %ecx;movl %ecx, (%ebx);leal (%eax), %edx;movl %edx, -(%ebp);movl (%ebx), %ecx": 1,
                "movl (%ebx), %ecx;movl %ecx, -(%ebp);movl (%ebx), %ecx;movl %ecx, -(%ebp);movl (%ebx), %ecx": 1,
                "subl %edx, %ecx;sarl %cl, %edi;movw %di, (%ebx);subl $, %edx;movl %edx, (%ebx)": 2,
                "movzwl -(%ebp), %edx;subw $, %dx;movzwl %dx, %edx;shll %cl, %edx;orw %dx, (%ebx)": 1,
                "shll %cl, %edx;orw %dx, (%ebx);addl $, %ecx;movl %ecx, (%ebx);movl (%ebx), %ecx": 2,
                "movzwl -(%ebp), %edi;movl %edi, %edx;shll %cl, %edx;movl %edx, %ecx;orw (%ebx), %cx": 1,
                "jmp  <png_write_chunk+>;movzwl -(%ebp), %edx;shll %cl, %edx;orw %dx, (%ebx);addl $, %ecx": 1,
                "sarl %cl, %eax;movw %ax, (%ebx);subl $, %edx;movl %edx, (%ebx);movl $, %eax": 1,
                "orw %ax, (%ebx);addl $, %ecx;movl %ecx, (%ebx);jmp - <png_write_chunk+>;movl (%ebx), %ecx": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;movl (%ebp), %ecx;movl (%eax), %ebx;movl (%eax), %esi": 1,
                "movb %cl, (%esi,%ebx);addl $, %ebx;movl %ebx, (%eax);testl %edx, %edx;jne  <png_write_chunk+>": 1,
                "testl %edx, %edx;jne  <png_write_chunk+>;addw $, (%eax,%ecx,);jmp  <png_write_chunk+>;addl $, (%eax)": 1,
                "shrl $, %ebx;movzbl (%ebx), %edx;addw $, (%eax,%edx,);movl (%eax), %edx;subl $, %edx": 1,
                "movl %eax, ;movl , %ebx;jmp  <png_write_chunk+>;movl %fs:, %eax;movl (%eax), %ebx": 1,
                "movl $, (%esp);calll  <png_write_chunk+>;movl , %eax;cmpl $, %eax;jne  <png_write_chunk+>": 1,
                "jne - <png_write_chunk+>;movl , %eax;cmpl $, %eax;je  <png_write_chunk+>;movl $, (%esp)": 1,
                "movl , %eax;cmpl $, %eax;je  <png_write_chunk+>;movl $, (%esp);calll *": 1,
                "calll  <png_write_chunk+>;movl %eax, %ebx;jmp  <png_write_chunk+>;movl (%ebx), %edx;testl %edx, %edx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <png_write_chunk+>;subl $, %esp;movl %eax, %esi": 1,
                "jne  <png_write_chunk+>;movl %edi, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 2,
                "calll  <png_write_chunk+>;subl $, %esp;movl %edi, (%esp);movl $, (%esp);movl -(%ebp), %eax": 2,
                "popl %ebp;retl $;nop;nop;nop": 1,
                "movl %edx, (%esp);movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <png_write_chunk+>": 1,
                "retl $;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %ebx": 1,
                "cmpl $, (%eax);ja  <png_write_chunk+>;movl $, ;movl $, (%esp);calll  <png_write_chunk+>": 1,
                "testl %eax, %eax;je  <png_write_chunk+>;calll *%eax;addl $, %ebx;cmpl %esi, %ebx": 1,
                "movl $, ;movl %edx, (%esp);calll  <png_write_chunk+>;subl $, %esp;jmp - <png_write_chunk+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;popl %ebp;retl;pushl %ebp": 2,
                "movl %esi, (%esp);movl $, (%esp);calll - <png_write_chunk+>;leal (%ebx,%ebx,), %ebx;shll $, %ebx": 1,
                "movl -(%ebp), %edx;movl %edx, (%eax);movl $, (%eax);calll  <png_write_chunk+>;movl -(%ebp), %edx": 1,
                "testl %eax, %eax;jne  <png_write_chunk+>;movl , %eax;movl (%eax,%ebx), %eax;movl %eax, (%esp)": 1,
                "addl , %ebx;movl %ebx, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll  <png_write_chunk+>;subl $, %esp": 1,
                "movl %edx, (%esp);movl %esi, (%esp);calll  <png_write_chunk+>;movl -(%ebp), %eax;cmpl $, %eax": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);calll  <png_write_chunk+>;leal -(%ebp), %esp": 1,
                "cmpl $, ;jne  <png_write_chunk+>;movl $, %ebx;cmpl $, ;je  <png_write_chunk+>": 1,
                "jne  <png_write_chunk+>;cmpl $, (%ebx);je  <png_write_chunk+>;jmp  <png_write_chunk+>;movl $, %ebx": 1,
                "je  <png_write_chunk+>;jmp  <png_write_chunk+>;movl $, %ebx;jmp  <png_write_chunk+>;movl $, %ebx": 1,
                "movl (%edx), %edx;addl (%ebx), %edx;movl %edx, -(%ebp);movl $, %ecx;leal -(%ebp), %edx": 1,
                "movl %edx, -(%ebp);movl $, %ecx;leal -(%ebp), %edx;calll - <png_write_chunk+>;addl $, %ebx": 1,
                "addl $, %ebx;cmpl $, %ebx;jae  <png_write_chunk+>;movl (%ebx), %ecx;leal (%ecx), %eax": 1,
                "cmpl $, %edx;jne  <png_write_chunk+>;movzbl (%eax), %edx;movzbl %dl, %ecx;testb %dl, %dl": 1,
                "movl (%eax), %eax;movl %eax, (%esp);movl $, (%esp);calll - <png_write_chunk+>;leal -(%ebp), %eax": 1,
                "addl $, %ebx;cmpl , %esi;jl - <png_write_chunk+>;jmp  <png_write_chunk+>;movl %ecx, -(%ebp)": 1,
                "leal -(%ebp), %edx;calll - <png_write_chunk+>;jmp - <png_write_chunk+>;leal -(%ebp), %esp;popl %ebx": 1,
                "jne  <png_write_chunk+>;movl $, %ebx;jmp  <png_write_chunk+>;movl %eax, %ebx;leal (%ebx), %eax": 1,
                "calll *(,%ebx,);subl $, %ebx;nop;jne - <png_write_chunk+>;movl $, (%esp)": 1,
                "jne  <png_write_chunk+>;movb $, %bl;movl %ebx, ;notl %ebx;movl %ebx, ": 1,
                "nop;nop;movl , %eax;testl %eax, %eax;je  <png_write_chunk+>": 1,
                "testl %edx, %edx;je  <png_write_chunk+>;pushl %ebp;movl %esp, %ebp;pushl %ebx": 1,
                "je  <png_write_chunk+>;movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl $, (%esp);calll  <png_write_chunk+>": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl $, (%esp);calll  <png_write_chunk+>;subl $, %esp": 1,
                "movl $, %eax;jmp  <png_write_chunk+>;movl $, %eax;movl -(%ebp), %ebx;leave": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl , %eax": 1,
                "leal (%esi), %esi;jne  <png_write_chunk+>;testl %edx, %edx;jne  <png_write_chunk+>;movl %eax, %edx": 1,
                "movl %eax, %edx;movl (%edx), %eax;movl %eax, ;movl %edx, %eax;jmp  <png_write_chunk+>": 1,
                "subl $, %esp;movl (%ebp), %eax;cmpl $, %eax;je  <png_write_chunk+>;cmpl $, %eax": 1,
                "movl , %eax;cmpl $, %eax;jne  <png_write_chunk+>;movl $, ;movl $, (%esp)": 1,
                "leave;retl;nop;nop;nop": 1,
                "nop;nop;nop;pushl %ecx;pushl %eax": 1,
                "calll - <png_write_chunk+>;movl %eax, %edx;movl $, %eax;testl %edx, %edx;je  <png_write_chunk+>": 1,
                "subl $, %esp;movl $, (%esp);calll - <png_write_chunk+>;cmpl $, %eax;sbbl %eax, %eax": 1,
                "calll - <png_write_chunk+>;cmpl $, %eax;sbbl %eax, %eax;notl %eax;andl $, %eax": 1,
                "je  <png_write_chunk+>;movl %esi, (%esp);movl $, (%esp);calll - <png_write_chunk+>;testl %eax, %eax": 1,
                "jmp  <png_write_chunk+>;subl $, %ebx;addl $, %eax;jmp - <png_write_chunk+>;movl $, %eax": 1,
                "addl $, %eax;jmp - <png_write_chunk+>;movl $, %eax;jmp  <png_write_chunk+>;movl $, %eax": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;jmp  <png_write_chunk+>;movl %ebx, %edx": 1,
                "movl %edx, (%esp);calll - <png_write_chunk+>;testl %eax, %eax;jne - <png_write_chunk+>;jmp  <png_write_chunk+>": 1,
                "calll  <png_write_chunk+>;subl $, %esp;movl %eax, ;movl , %eax;movl -(%ebp), %ebx": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                ".text": 1,
                "P`.data": 1,
                ".rdata": 1,
                "0@.bss": 1,
                ".edata": 1,
                "0@.idata": 1,
                ".reloc": 1,
                "0B.rossym": 1,
                "$[^_]": 14,
                "RQKs]": 1,
                "T[^_]": 3,
                "=DWKs": 1,
                "=HWKs": 1,
                "+E 9E": 1,
                "+E(9E$~": 1,
                "5XWKs": 1,
                "5hWKs": 1,
                "\\[^_]": 6,
                "<[^_]": 5,
                "Bp;Bt": 1,
                "TADIu": 2,
                "RDHIuK": 1,
                "DNEIuO": 1,
                "ETLPu6": 1,
                "=AMAgu6": 1,
                "=TIBsu6": 1,
                "=MRHcu6": 1,
                "BGRsu6": 1,
                "=PCCiu6": 1,
                "TLPsu6": 1,
                "SNRtu6": 1,
                "DGKbu6": 1,
                "TSIhu6": 1,
                "sYHpu6": 1,
                "sFFou6": 1,
                "LACpu6": 1,
                "LACsu6": 1,
                "EMItu6": 1,
                "tXEtu6": 1,
                "tXTzu3": 1,
                "tXTiu3": 1,
                "ETLPu": 3,
                "=TADIt$": 1,
                "RDHIu": 2,
                "TADIuE": 1,
                "DGKbu": 2,
                "MRHcu": 2,
                "AMAgu": 2,
                "TSIhu": 2,
                "sFFou": 2,
                "LACpu": 2,
                "LACsu": 2,
                "sYHpu": 2,
                "TIBsu": 2,
                "BGRsu": 2,
                "PCCiu": 2,
                "TLPsu": 2,
                "tXEtu": 2,
                "EMItu": 2,
                "SNRtu": 2,
                "tXTzu": 2,
                "tXTiu": 2,
                "TADIt": 2,
                ",[^_]": 10,
                "DNEIu": 1,
                "TADIu#": 1,
                "TADIu+": 1,
                "Ct@t?": 1,
                "L[^_]": 1,
                "=TADIt": 1,
                "D[^_]": 2,
                "d[^_]": 1,
                "|[^_]": 1,
                "4[^_]": 3,
                "@yKs<": 1,
                "@P;IJs": 1,
                "@[^_]": 1,
                "<~vH<": 1,
                "_@;Z s": 1,
                "_@;Z(s": 1,
                "Sh;S\\rX": 1,
                "9Z\\v-": 1,
                ";K,v!": 1,
                "t[^_]": 1,
                "0[^_]": 1,
                "W<+Wt)": 1,
                ")_p)_l)_\\": 1,
                "Cl+Cp=": 1,
                "Klf+Kp": 1,
                "<O#C4": 1,
                ";{,sW": 1,
                ";{,rR": 1,
                "9G sl": 1,
                "W`)Wt": 1,
                "X[^_]": 1,
                "(@Ksf": 1,
                "=H@Ks": 1,
                "( Ls9": 1,
                "L@Ks=N": 1,
                "Too many bytes for PNG signature": 1,
                "Potential overflow in png_zalloc()": 1,
                "Unknown freer parameter in png_data_freer": 1,
                "Ignoring invalid time value": 2,
                " +0000": 1,
                "libpng version 1.5.14 - January 24, 2013": 1,
                "Copyright (c) 1998-2013 Glenn Randers-Pehrson": 1,
                "Copyright (c) 1996-1997 Andreas Dilger": 1,
                "Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.": 1,
                "1.5.14": 1,
                "Application built with libpng-": 1,
                " but running with ": 1,
                " libpng version 1.5.14 - January 24, 2013": 1,
                "Image width is zero in IHDR": 1,
                "Image height is zero in IHDR": 1,
                "Image width exceeds user limit in IHDR": 1,
                "Image height exceeds user limit in IHDR": 1,
                "Invalid image width in IHDR": 1,
                "Invalid image height in IHDR": 1,
                "Width is too large for libpng to process pixels": 1,
                "Invalid bit depth in IHDR": 1,
                "Invalid color type in IHDR": 1,
                "Invalid color type/bit depth combination in IHDR": 1,
                "Unknown interlace method in IHDR": 1,
                "Unknown compression method in IHDR": 1,
                "MNG features are not allowed in a PNG datastream": 2,
                "Unknown filter method in IHDR": 1,
                "Invalid filter method in IHDR": 1,
                "Invalid IHDR data": 1,
                " Is. Is": 1,
                " IsR Iss Is": 1,
                " Is6 Is": 1,
                " Ise Isz IsASCII conversion buffer too small": 1,
                "fixed point overflow ignored": 1,
                "extreme cHRM chunk cannot be converted to tristimulus values": 1,
                "internal error in png_XYZ_from_xy": 1,
                "Ignoring attempt to set negative chromaticity value": 1,
                "Invalid cHRM white point": 1,
                "Invalid cHRM red point": 1,
                "Invalid cHRM green point": 1,
                "Invalid cHRM blue point": 1,
                "Ignoring attempt to set cHRM RGB triangle with zero area": 1,
                "gamma table being rebuilt": 1,
                "<Isw<Isp<Is": 1,
                "<Islibpng warning: %s": 1,
                "undefined": 1,
                "libpng error: %s": 1,
                "0123456789ABCDEF": 2,
                "123456789": 1,
                "sCAL width": 1,
                "sCAL height": 1,
                ">Out of Memory": 1,
                "png_process_data_skip called inside png_process_data": 1,
                "png_process_data_skip called with saved data": 1,
                "Not a PNG file": 2,
                "PNG file corrupted by ASCII conversion": 2,
                "Potential overflow of save_buffer": 1,
                "Insufficient memory for save_buffer": 1,
                "Invalid IHDR length": 1,
                "Missing IHDR before IDAT": 2,
                "Missing PLTE before IDAT": 2,
                "Too many IDATs found": 2,
                "bad adaptive filter value": 2,
                "progressive row overflow": 1,
                "internal progressive row size calculation error": 1,
                "gIsZgIs3gIs": 1,
                "fIsNo IDAT data (internal error)": 1,
                "Truncated compressed data in IDAT": 1,
                "Decompression error in IDAT": 1,
                "Extra compressed data in IDAT": 1,
                "Extra compression data in IDAT": 1,
                "Not enough compressed data": 1,
                "1.2.8": 3,
                "zlib memory error": 1,
                "zlib stream error": 1,
                "zlib version error": 1,
                "Unknown zlib error": 1,
                "Decompression error": 1,
                "Invalid attempt to read row data": 1,
                "Not enough image data": 2,
                "Extra compressed data": 2,
                "sequential row overflow": 1,
                "internal sequential row size calculation error": 1,
                "xIs3yIsmyIsInterlace handling should be turned on when using png_read_image": 1,
                "Read palette index exceeding num_palette": 1,
                "Image is too high to process with png_read_png()": 1,
                "Read Error": 1,
                "Call to NULL read function": 1,
                "Can't set both read_data_fn and write_data_fn in the same structure": 2,
                "gamma value": 1,
                "Can't discard critical data on CRC error": 1,
                "Application must supply a known background gamma": 1,
                "png_set_background": 3,
                "output gamma out of expected range": 1,
                "invalid alpha mode": 1,
                "conflicting calls to set alpha mode and background": 1,
                "invalid error action to rgb_to_gray": 1,
                "ignoring out of range rgb_to_gray coefficients": 1,
                "rgb to gray green coefficient": 1,
                "rgb to gray red coefficient": 1,
                "libpng does not support gamma+background+rgb_to_gray": 1,
                "invalid background gamma type": 1,
                "Ispng_do_encode_alpha: unexpected call": 1,
                "NULL row buffer": 1,
                "Uninitialized row": 1,
                "png_do_rgb_to_gray found nongray pixel": 1,
                "png_do_quantize returned rowbytes=0": 1,
                "PNG fixed point integer out of range": 1,
                "Buffer error in compressed datastream": 1,
                "Data error in compressed datastream": 1,
                "Incomplete compressed datastream": 1,
                "PNG unsigned integer out of range": 1,
                "CRC error": 1,
                "invalid chunklength": 1,
                "Exceeded size limit while expanding chunk": 1,
                "png_inflate logic error": 1,
                "Not enough memory to decompress chunk": 1,
                "Unknown compression type @1": 2,
                "Out of place IHDR": 1,
                "Invalid IHDR chunk": 1,
                "Missing IHDR before PLTE": 1,
                "Invalid PLTE after IDAT": 1,
                "Duplicate PLTE chunk": 1,
                "Ignoring PLTE chunk in grayscale PNG": 1,
                "Invalid palette chunk": 1,
                "Truncating incorrect tRNS chunk length": 1,
                "Truncating incorrect info tRNS chunk length": 1,
                "No image in file": 1,
                "Incorrect IEND chunk length": 1,
                "Missing IHDR before gAMA": 1,
                "Invalid gAMA after IDAT": 1,
                "Out of place gAMA chunk": 1,
                "Duplicate gAMA chunk": 1,
                "Incorrect gAMA chunk length": 1,
                "Ignoring gAMA chunk with out of range gamma": 1,
                "Ignoring incorrect gAMA value @1 when sRGB is also present": 1,
                "Missing IHDR before sBIT": 1,
                "Invalid sBIT after IDAT": 1,
                "Out of place sBIT chunk": 1,
                "Duplicate sBIT chunk": 1,
                "Incorrect sBIT chunk length": 1,
                "Missing IHDR before cHRM": 1,
                "Invalid cHRM after IDAT": 1,
                "Out of place cHRM chunk": 1,
                "Duplicate cHRM chunk": 1,
                "Incorrect cHRM chunk length": 1,
                "Ignoring cHRM chunk with negative chromaticities": 1,
                "Ignoring incorrect cHRM white(@1,@2) r(@3,@4)g(@5,@6)b(@7,@8) when sRGB is also present": 1,
                "internal error handling cHRM coefficients": 1,
                "internal error handling cHRM->XYZ": 1,
                "Missing IHDR before sRGB": 1,
                "Invalid sRGB after IDAT": 1,
                "Out of place sRGB chunk": 1,
                "Duplicate sRGB chunk": 1,
                "Incorrect sRGB chunk length": 1,
                "Unknown sRGB intent": 1,
                "Ignoring incorrect cHRM value when sRGB is also present": 1,
                "Missing IHDR before iCCP": 1,
                "Invalid iCCP after IDAT": 1,
                "Out of place iCCP chunk": 1,
                "Duplicate iCCP chunk": 1,
                "Malformed iCCP chunk": 1,
                "Ignoring nonzero compression type in iCCP chunk": 1,
                "Profile size field missing from iCCP chunk": 1,
                "Ignoring iCCP chunk with declared size = @1 and actual length = @2": 1,
                "No space in chunk cache for sPLT": 1,
                "Missing IHDR before sPLT": 1,
                "Invalid sPLT after IDAT": 1,
                "malformed sPLT chunk": 1,
                "sPLT chunk has bad length": 1,
                "sPLT chunk too long": 1,
                "sPLT chunk requires too much memory": 1,
                "Missing IHDR before tRNS": 1,
                "Invalid tRNS after IDAT": 1,
                "Duplicate tRNS chunk": 1,
                "Incorrect tRNS chunk length": 1,
                "Missing PLTE before tRNS": 1,
                "Zero length tRNS chunk": 1,
                "tRNS chunk not allowed with alpha channel": 1,
                "Missing IHDR before bKGD": 1,
                "Invalid bKGD after IDAT": 1,
                "Missing PLTE before bKGD": 1,
                "Duplicate bKGD chunk": 1,
                "Incorrect bKGD chunk length": 1,
                "Incorrect bKGD chunk index value": 1,
                "Missing IHDR before hIST": 1,
                "Invalid hIST after IDAT": 1,
                "Missing PLTE before hIST": 1,
                "Duplicate hIST chunk": 1,
                "Incorrect hIST chunk length": 1,
                "Missing IHDR before pHYs": 1,
                "Invalid pHYs after IDAT": 1,
                "Duplicate pHYs chunk": 1,
                "Incorrect pHYs chunk length": 1,
                "Missing IHDR before oFFs": 1,
                "Invalid oFFs after IDAT": 1,
                "Duplicate oFFs chunk": 1,
                "Incorrect oFFs chunk length": 1,
                "Missing IHDR before pCAL": 1,
                "Invalid pCAL after IDAT": 1,
                "Duplicate pCAL chunk": 1,
                "No memory for pCAL purpose": 1,
                "Invalid pCAL data": 1,
                "Invalid pCAL parameters for equation type": 1,
                "Unrecognized equation type for pCAL chunk": 2,
                "No memory for pCAL params": 1,
                "Missing IHDR before sCAL": 1,
                "Invalid sCAL after IDAT": 1,
                "Duplicate sCAL chunk": 1,
                "sCAL chunk too short": 1,
                "Out of memory while processing sCAL chunk": 1,
                "Invalid sCAL ignored: invalid unit": 1,
                "Invalid sCAL chunk ignored: bad width format": 1,
                "Invalid sCAL chunk ignored: non-positive width": 1,
                "Invalid sCAL chunk ignored: bad height format": 1,
                "Invalid sCAL chunk ignored: non-positive height": 1,
                "Out of place tIME chunk": 1,
                "Duplicate tIME chunk": 1,
                "Incorrect tIME chunk length": 1,
                "No space in chunk cache for tEXt": 1,
                "Missing IHDR before tEXt": 1,
                "No memory to process text chunk": 1,
                "Not enough memory to process text chunk": 1,
                "Insufficient memory to process text chunk": 1,
                "No space in chunk cache for zTXt": 1,
                "Missing IHDR before zTXt": 1,
                "Out of memory processing zTXt chunk": 1,
                "Truncated zTXt chunk": 1,
                "Unknown compression type in zTXt chunk": 1,
                "Not enough memory to process zTXt chunk": 1,
                "Insufficient memory to store zTXt chunk": 1,
                "No space in chunk cache for iTXt": 1,
                "Missing IHDR before iTXt": 1,
                "No memory to process iTXt chunk": 1,
                "Truncated iTXt chunk": 1,
                "invalid iTXt compression flag": 1,
                "unknown iTXt compression type": 1,
                "Malformed iTXt chunk": 1,
                "Not enough memory to process iTXt chunk": 1,
                "Insufficient memory to store iTXt chunk": 1,
                "No space in chunk cache for unknown chunk": 1,
                "unknown critical chunk": 1,
                "error in user chunk": 1,
                "invalid chunk type": 1,
                "internal row logic error": 1,
                "internal row size calculation error": 1,
                "internal row width error": 1,
                "invalid user transform pixel depth": 1,
                "Decompression Error": 1,
                "Extra compression data": 1,
                "Row has too many bytes to allocate in memory": 1,
                "\"\"\"\"UUUU": 1,
                "DDDDUUUU": 1,
                "00003333": 1,
                "XYZ values out of representable range": 1,
                "cHRM Blue Y": 1,
                "cHRM Blue X": 1,
                "cHRM Green Y": 1,
                "cHRM Green X": 1,
                "cHRM Red Y": 1,
                "cHRM Red X": 1,
                "cHRM White Y": 1,
                "cHRM White X": 1,
                "cHRM Red Z": 1,
                "Out of range gamma value ignored": 1,
                "png_set_gAMA": 3,
                "Invalid palette size, hIST allocation skipped": 1,
                "Insufficient memory for hIST chunk data": 1,
                "Invalid pCAL equation type": 1,
                "Invalid format for pCAL parameter": 1,
                "Insufficient memory for pCAL purpose": 1,
                "Insufficient memory for pCAL units": 1,
                "Insufficient memory for pCAL params": 1,
                "Insufficient memory for pCAL parameter": 1,
                "Invalid sCAL unit": 1,
                "Invalid sCAL width": 1,
                "Invalid sCAL height": 1,
                "Memory allocation failed while processing sCAL": 1,
                "Invalid sCAL width ignored": 1,
                "Invalid sCAL height ignored": 1,
                "Invalid palette length": 1,
                "Insufficient memory to process iCCP chunk": 1,
                "Insufficient memory to process iCCP profile": 1,
                "too many text chunks": 1,
                "text compression mode is out of range": 1,
                "Insufficient memory to store text": 1,
                "Ignoring invalid num_trans value": 1,
                "tRNS chunk has out-of-range samples for bit_depth": 1,
                "No memory for sPLT palettes": 1,
                "Out of memory while processing sPLT chunk": 1,
                "Out of memory while processing unknown chunk": 1,
                " 0@P`p": 1,
                "!1AQaq": 1,
                "\"2BRbr": 1,
                "#3CScs": 1,
                "$4DTdt": 1,
                "%5EUeu": 1,
                "&6FVfv": 1,
                "'7GWgw": 1,
                "(8HXhx": 1,
                ")9IYiy": 1,
                "*:JZjz": 1,
                "+;K[k{": 1,
                ",<L\\l|": 1,
                "-=M]m}": 1,
                ".>N^n~": 1,
                "/?O_o": 1,
                "Write Error": 1,
                "Call to NULL write function": 1,
                "Unknown filter heuristic method": 1,
                "Writing zero-length unknown chunk": 1,
                "Valid palette required for paletted images": 1,
                "No IDATs written into file": 1,
                "Wrote palette index exceeding num_palette": 1,
                "png_write_info was never called before png_write_row": 1,
                "internal write transform logic error": 1,
                "WJs4WJszlib error": 1,
                "Unknown row filter for method 0": 1,
                "Can't add Up filter after starting": 1,
                "Can't add Average filter after starting": 1,
                "Can't add Paeth filter after starting": 1,
                "Unknown custom filter method": 1,
                "]Jsy]Jsy]Jsy]JsOnly compression windows <= 32k supported by PNG": 1,
                "Only compression windows >= 256 supported by PNG": 1,
                "Compression window is being reset to 512": 1,
                "Only compression method 8 is supported by PNG": 1,
                "Text compression window is being reset to 512": 1,
                "Aincorrect png_set_filler call ignored": 1,
                "version": 1,
                "stream": 1,
                "memory": 1,
                "unknown": 1,
                "[no zlib message]": 1,
                "zlib failed to reset compressor: @1(@2): @3": 1,
                "zstream not in use (internal error)": 1,
                "invalid zlib state": 1,
                "zlib failed to initialize compressor (": 1,
                ") version error": 1,
                ") stream error": 1,
                ") memory error": 1,
                ") unknown error": 1,
                "zstream already in use (internal error)": 1,
                "zlib error": 1,
                "Invalid zlib compression method or flags in non-IDAT chunk": 1,
                "Invalid bit depth for grayscale image": 1,
                "Invalid bit depth for RGB image": 1,
                "Invalid bit depth for paletted image": 1,
                "Invalid bit depth for grayscale+alpha image": 1,
                "Invalid bit depth for RGBA image": 1,
                "Invalid image color type specified": 1,
                "Invalid compression type specified": 1,
                "Invalid filter type specified": 1,
                "Invalid interlace type specified": 1,
                "xJs>xJsfxJs": 1,
                "xJsInvalid number of colors in palette": 1,
                "Ignoring request to write a PLTE chunk in grayscale PNG": 1,
                "Invalid zlib compression method or flags in IDAT": 1,
                "Invalid sRGB rendering intent specified": 1,
                "Invalid sBIT depth specified": 1,
                "Invalid number of transparent colors specified": 1,
                "Ignoring attempt to write tRNS chunk out-of-range for bit_depth": 1,
                "Ignoring attempt to write 16-bit tRNS chunk when bit_depth is 8": 1,
                "Can't write tRNS with an alpha channel": 1,
                "Invalid background palette index": 1,
                "Ignoring attempt to write 16-bit bKGD chunk when bit_depth is 8": 1,
                "Ignoring attempt to write bKGD chunk out-of-range for bit_depth": 1,
                "Invalid number of histogram entries specified": 1,
                "zero length keyword": 1,
                "Out of memory while procesing keyword": 1,
                "invalid keyword character 0x@1": 1,
                "trailing spaces removed from keyword": 1,
                "leading spaces removed from keyword": 1,
                "extra interior spaces removed from keyword": 1,
                "Zero length keyword": 1,
                "keyword length must be 1 - 79 characters": 1,
                "Unknown compression type in iCCP chunk": 1,
                "Embedded profile length in iCCP chunk is negative": 1,
                "Embedded profile length too large in iCCP chunk": 1,
                "Truncating profile to actual length in iCCP chunk": 1,
                "Empty language field in iTXt chunk": 1,
                "Unrecognized unit type for oFFs chunk": 1,
                "Can't write sCAL (buffer too small)": 1,
                "Unrecognized unit type for pHYs chunk": 1,
                "Invalid time specified for tIME chunk": 1,
                "Qkkbal": 1,
                "wn>Jj": 1,
                "[-&LMb#{'": 1,
                "w+OQvr": 1,
                "R1h58": 1,
                ")\\ZEo^m/": 1,
                "H*0\"ZOW": 1,
                "mj>zjZ": 1,
                "l6qnk": 1,
                "IiGM>nw": 1,
                "1A26b": 1,
                "ewh/?y": 1,
                "1wsHp": 1,
                "#bML\"": 1,
                "vQO+t": 1,
                "^oEZ_": 1,
                "OZw3(?": 1,
                "V_:X1:": 1,
                "NJ2\"v": 1,
                "O*9y]": 1,
                "incorrect header check": 1,
                "unknown compression method": 1,
                "invalid window size": 1,
                "unknown header flags set": 1,
                "header crc mismatch": 1,
                "invalid block type": 1,
                "invalid stored block lengths": 1,
                "too many length or distance symbols": 1,
                "invalid code lengths set": 1,
                "invalid bit length repeat": 1,
                "invalid code -- missing end-of-block": 1,
                "invalid literal/lengths set": 1,
                "invalid distances set": 1,
                "invalid literal/length code": 2,
                "invalid distance code": 2,
                "invalid distance too far back": 2,
                "incorrect data check": 1,
                "incorrect length check": 1,
                " deflate 1.2.8 Copyright 1995-2013 Jean-loup Gailly and Mark Adler ": 1,
                "need dictionary": 1,
                "stream end": 1,
                "file error": 1,
                "stream error": 1,
                "data error": 1,
                "insufficient memory": 1,
                "buffer error": 1,
                "incompatible version": 1,
                " inflate 1.2.8 Copyright 1995-2013 Mark Adler ": 1,
                "mingwm10.dll": 1,
                "__mingwthr_remove_key_dtor": 1,
                "__mingwthr_key_dtor": 1,
                "+KsMingw-w64 runtime failure:": 1,
                "Address %p has no image-section": 1,
                "  VirtualQuery failed for %d bytes at address %p": 1,
                "  VirtualProtect failed with code 0x%x": 1,
                "  Unknown pseudo relocation protocol version %d.": 1,
                "  Unknown pseudo relocation bit size %d.": 1,
                "libgcc.a.dbg": 1,
                "libpng.dll": 1,
                "png_access_version_number": 2,
                "png_benign_error": 2,
                "png_build_grayscale_palette": 2,
                "png_calloc": 2,
                "png_chunk_benign_error": 2,
                "png_chunk_error": 2,
                "png_chunk_warning": 2,
                "png_convert_from_struct_tm": 2,
                "png_convert_from_time_t": 2,
                "png_convert_to_rfc1123": 2,
                "png_create_info_struct": 2,
                "png_create_read_struct": 2,
                "png_create_read_struct_2": 2,
                "png_create_write_struct": 2,
                "png_create_write_struct_2": 2,
                "png_data_freer": 2,
                "png_destroy_info_struct": 2,
                "png_destroy_read_struct": 2,
                "png_destroy_write_struct": 2,
                "png_error": 2,
                "png_free": 2,
                "png_free_data": 2,
                "png_free_default": 2,
                "png_get_IHDR": 2,
                "png_get_PLTE": 2,
                "png_get_bKGD": 2,
                "png_get_bit_depth": 2,
                "png_get_cHRM": 2,
                "png_get_cHRM_XYZ": 2,
                "png_get_cHRM_XYZ_fixed": 2,
                "png_get_cHRM_fixed": 2,
                "png_get_channels": 2,
                "png_get_chunk_cache_max": 2,
                "png_get_chunk_malloc_max": 2,
                "png_get_color_type": 2,
                "png_get_compression_buffer_size": 2,
                "png_get_compression_type": 2,
                "png_get_copyright": 2,
                "png_get_current_pass_number": 2,
                "png_get_current_row_number": 2,
                "png_get_error_ptr": 2,
                "png_get_filter_type": 2,
                "png_get_gAMA": 2,
                "png_get_gAMA_fixed": 2,
                "png_get_hIST": 2,
                "png_get_header_ver": 2,
                "png_get_header_version": 2,
                "png_get_iCCP": 2,
                "png_get_image_height": 2,
                "png_get_image_width": 2,
                "png_get_int_32": 2,
                "png_get_interlace_type": 2,
                "png_get_io_chunk_name": 2,
                "png_get_io_chunk_type": 2,
                "png_get_io_ptr": 2,
                "png_get_io_state": 2,
                "png_get_libpng_ver": 2,
                "png_get_mem_ptr": 2,
                "png_get_oFFs": 2,
                "png_get_pCAL": 2,
                "png_get_pHYs": 2,
                "png_get_pHYs_dpi": 2,
                "png_get_pixel_aspect_ratio": 2,
                "png_get_pixel_aspect_ratio_fixed": 2,
                "png_get_pixels_per_inch": 2,
                "png_get_pixels_per_meter": 2,
                "png_get_progressive_ptr": 2,
                "png_get_rgb_to_gray_status": 2,
                "png_get_rowbytes": 2,
                "png_get_rows": 2,
                "png_get_sBIT": 2,
                "png_get_sCAL": 2,
                "png_get_sCAL_fixed": 2,
                "png_get_sCAL_s": 2,
                "png_get_sPLT": 2,
                "png_get_sRGB": 2,
                "png_get_signature": 2,
                "png_get_tIME": 2,
                "png_get_tRNS": 2,
                "png_get_text": 2,
                "png_get_uint_16": 2,
                "png_get_uint_31": 2,
                "png_get_uint_32": 2,
                "png_get_unknown_chunks": 2,
                "png_get_user_chunk_ptr": 2,
                "png_get_user_height_max": 2,
                "png_get_user_transform_ptr": 2,
                "png_get_user_width_max": 2,
                "png_get_valid": 2,
                "png_get_x_offset_inches": 2,
                "png_get_x_offset_inches_fixed": 2,
                "png_get_x_offset_microns": 2,
                "png_get_x_offset_pixels": 2,
                "png_get_x_pixels_per_inch": 2,
                "png_get_x_pixels_per_meter": 2,
                "png_get_y_offset_inches": 2,
                "png_get_y_offset_inches_fixed": 2,
                "png_get_y_offset_microns": 2,
                "png_get_y_offset_pixels": 2,
                "png_get_y_pixels_per_inch": 2,
                "png_get_y_pixels_per_meter": 2,
                "png_handle_as_unknown": 2,
                "png_info_init_3": 2,
                "png_init_io": 2,
                "png_longjmp": 2,
                "png_malloc": 2,
                "png_malloc_default": 2,
                "png_malloc_warn": 2,
                "png_permit_mng_features": 2,
                "png_process_data": 2,
                "png_process_data_pause": 2,
                "png_process_data_skip": 2,
                "png_progressive_combine_row": 2,
                "png_read_end": 2,
                "png_read_image": 2,
                "png_read_info": 2,
                "png_read_png": 2,
                "png_read_row": 2,
                "png_read_rows": 2,
                "png_read_update_info": 2,
                "png_reset_zstream": 2,
                "png_save_int_32": 2,
                "png_save_uint_16": 2,
                "png_save_uint_32": 2,
                "png_set_IHDR": 2,
                "png_set_PLTE": 2,
                "png_set_add_alpha": 2,
                "png_set_alpha_mode": 2,
                "png_set_alpha_mode_fixed": 2,
                "png_set_bKGD": 2,
                "png_set_background_fixed": 2,
                "png_set_benign_errors": 2,
                "png_set_bgr": 2,
                "png_set_cHRM": 2,
                "png_set_cHRM_XYZ": 2,
                "png_set_cHRM_XYZ_fixed": 2,
                "png_set_cHRM_fixed": 2,
                "png_set_check_for_invalid_index": 2,
                "png_set_chunk_cache_max": 2,
                "png_set_chunk_malloc_max": 2,
                "png_set_compression_buffer_size": 2,
                "png_set_compression_level": 2,
                "png_set_compression_mem_level": 2,
                "png_set_compression_method": 2,
                "png_set_compression_strategy": 2,
                "png_set_compression_window_bits": 2,
                "png_set_crc_action": 2,
                "png_set_error_fn": 2,
                "png_set_expand": 2,
                "png_set_expand_16": 2,
                "png_set_expand_gray_1_2_4_to_8": 2,
                "png_set_filler": 2,
                "png_set_filter": 2,
                "png_set_filter_heuristics": 2,
                "png_set_filter_heuristics_fixed": 2,
                "png_set_flush": 2,
                "png_set_gAMA_fixed": 2,
                "png_set_gamma": 2,
                "png_set_gamma_fixed": 2,
                "png_set_gray_to_rgb": 2,
                "png_set_hIST": 2,
                "png_set_iCCP": 2,
                "png_set_interlace_handling": 2,
                "png_set_invalid": 2,
                "png_set_invert_alpha": 2,
                "png_set_invert_mono": 2,
                "png_set_keep_unknown_chunks": 2,
                "png_set_longjmp_fn": 2,
                "png_set_mem_fn": 2,
                "png_set_oFFs": 2,
                "png_set_pCAL": 2,
                "png_set_pHYs": 2,
                "png_set_packing": 2,
                "png_set_packswap": 2,
                "png_set_palette_to_rgb": 2,
                "png_set_progressive_read_fn": 2,
                "png_set_quantize": 2,
                "png_set_read_fn": 2,
                "png_set_read_status_fn": 2,
                "png_set_read_user_chunk_fn": 2,
                "png_set_read_user_transform_fn": 2,
                "png_set_rgb_to_gray": 2,
                "png_set_rgb_to_gray_fixed": 2,
                "png_set_rows": 2,
                "png_set_sBIT": 2,
                "png_set_sCAL": 2,
                "png_set_sCAL_fixed": 2,
                "png_set_sCAL_s": 2,
                "png_set_sPLT": 2,
                "png_set_sRGB": 2,
                "png_set_sRGB_gAMA_and_cHRM": 2,
                "png_set_scale_16": 2,
                "png_set_shift": 2,
                "png_set_sig_bytes": 2,
                "png_set_strip_16": 2,
                "png_set_strip_alpha": 2,
                "png_set_swap": 2,
                "png_set_swap_alpha": 2,
                "png_set_tIME": 2,
                "png_set_tRNS": 2,
                "png_set_tRNS_to_alpha": 2,
                "png_set_text": 2,
                "png_set_text_compression_level": 2,
                "png_set_text_compression_mem_level": 2,
                "png_set_text_compression_method": 2,
                "png_set_text_compression_strategy": 2,
                "png_set_text_compression_window_bits": 2,
                "png_set_unknown_chunk_location": 2,
                "png_set_unknown_chunks": 2,
                "png_set_user_limits": 2,
                "png_set_user_transform_info": 2,
                "png_set_write_fn": 2,
                "png_set_write_status_fn": 2,
                "png_set_write_user_transform_fn": 2,
                "png_sig_cmp": 2,
                "png_start_read_image": 2,
                "png_warning": 2,
                "png_write_chunk": 2,
                "png_write_chunk_data": 2,
                "png_write_chunk_end": 2,
                "png_write_chunk_start": 2,
                "png_write_end": 2,
                "png_write_flush": 2,
                "png_write_image": 2,
                "png_write_info": 2,
                "png_write_info_before_PLTE": 2,
                "png_write_png": 2,
                "png_write_row": 2,
                "png_write_rows": 2,
                "png_write_sig": 2,
                "DeleteCriticalSection": 2,
                "DisableThreadLibraryCalls": 2,
                "EnterCriticalSection": 2,
                "FreeLibrary": 2,
                "GetCurrentProcess": 2,
                "GetCurrentProcessId": 2,
                "GetCurrentThreadId": 2,
                "GetLastError": 2,
                "GetModuleHandleA": 2,
                "GetProcAddress": 2,
                "GetSystemTimeAsFileTime": 2,
                "GetTickCount": 2,
                "InitializeCriticalSection": 2,
                "InterlockedCompareExchange": 2,
                "InterlockedExchange": 2,
                "LeaveCriticalSection": 2,
                "LoadLibraryA": 2,
                "LoadLibraryW": 2,
                "QueryPerformanceCounter": 2,
                "SetUnhandledExceptionFilter": 2,
                "Sleep": 2,
                "TerminateProcess": 2,
                "TlsGetValue": 2,
                "UnhandledExceptionFilter": 2,
                "VirtualProtect": 2,
                "VirtualQuery": 2,
                "__dllonexit": 2,
                "_amsg_exit": 2,
                "_initterm": 2,
                "_lock": 2,
                "_onexit": 2,
                "_setjmp": 2,
                "_unlock": 2,
                "_winmajor": 1,
                "abort": 2,
                "calloc": 2,
                "fflush": 2,
                "floor": 2,
                "fprintf": 2,
                "fputc": 2,
                "fread": 2,
                "frexp": 2,
                "fwrite": 2,
                "gmtime": 2,
                "longjmp": 2,
                "malloc": 2,
                "memcmp": 2,
                "memcpy": 2,
                "memmove": 2,
                "memset": 2,
                "strncmp": 2,
                "vfprintf": 2,
                "kernel32.dll": 1,
                "msvcrt.dll": 1,
                "0C0j011M3<9": 1,
                ";D;N;": 1,
                "> >;>Y>": 1,
                "?B?u?": 1,
                "2T2x2": 1,
                "22364": 1,
                "4#506O6X6a6g6x6": 1,
                "7S9t9z9": 1,
                "9 ?:?[?f?o?u?": 1,
                "192Q2_2e2n2": 1,
                "4>4D4L4s6": 1,
                "<[=a=m=": 1,
                "6=7C7}7": 1,
                ";2;F;Z;": 1,
                "6!8:8": 1,
                "<C>C?h?": 1,
                "5R6g6": 1,
                "2;2W2s234X4": 1,
                "5!8-8l8": 1,
                "879D9J9S9Y9j9": 1,
                "3L4p4": 1,
                "4(5>5": 1,
                "7K7l7H8h8": 1,
                "9@9a9": 1,
                "<#<H<i<": 1,
                "1;2O2t2": 1,
                ";4<W<|<": 1,
                "<T=h=": 1,
                ">v>g?{?": 1,
                "2@2f2u3": 1,
                "6`7t7": 1,
                ":L:&;N;": 1,
                "<6=^=": 1,
                "=(>d>": 1,
                "8A8{8": 1,
                "'010;0J0V0": 1,
                "111E1": 1,
                "1@2e2": 1,
                "283I3": 1,
                "8*8D8^8x8": 1,
                "8^9x9": 1,
                ";==v=": 1,
                "<f<i=D>": 1,
                "359l9x9": 1,
                "9u=}=": 1,
                "2%2h2": 1,
                "3'3m3": 1,
                "= =*=o=": 1,
                "=&>l>~>": 1,
                ">A?_?": 1,
                "828N8": 1,
                "889U9[:e:": 1,
                ";}=B>": 1,
                "8-8V8": 1,
                "5>6P6": 1,
                "7!7<7C7O7V7q7x7": 1,
                "8#8*8E8L8V8]8w8~8": 1,
                "9+9j9": 1,
                "3Z516": 1,
                "9$949": 1,
                "7+>N>": 1,
                "6O7a7": 1,
                "2\"2o4": 1,
                "6G6W6]6q6": 1,
                "7'7-757Y7": 1,
                "8]8l8": 1,
                "9(:D:Y:i:": 1,
                ";);4;A;Q;a;i;n;~;": 1,
                "<*<4<N<X<": 1,
                "=L=\\=": 1,
                "?-?3?<?A?U?^?f?l?v?": 1,
                "0?0a0": 1,
                "181L1s1": 1,
                "2&222": 1,
                "3'3,343:3D3M3U3n3": 1,
                "4J4W4`4g4": 1,
                "4#5.5<5L5W5b5M6[6b6g6": 1,
                "7 757D7K7Q7": 1,
                "8\"868F8`8": 1,
                "9)969;9E9R9Z9b9j9r9z9": 1,
                ":\":*:2:::B:J:R:Z:b:j:r:z:": 1,
                "0,0D0": 1,
                "4 4$4(4,4044484<4@4D4H4L4P4T4X4\\4`4d4h4l4p4t4x4|4": 1,
                "5 5$5(5,5054585<5@5D5H5": 1,
                "< <$<(<,<$?(?,?0?4?8?<?@?D?H?L?P?T?X?\\?`?d?": 1,
                "p8t8x8|8": 1,
                "(242@2L2X2d2p2|2": 1,
                "2 3$3(3,3034383<3@3D3": 1,
                "png_write_oFFs": 1,
                "png_inflate": 1,
                "png_write_compressed_data_out": 1,
                "png_read_filter_row_avg": 1,
                "png_do_scale_16_to_8": 1,
                "png_write_complete_chunk": 1,
                "lib/sdk/crt/startup/dllmain.c": 1,
                "png_format_buffer": 1,
                "lib/sdk/crt/startup/crtdll.c": 1,
                "_encode_pointer": 1,
                "png_handle_sCAL": 1,
                "dll/3rdparty/libpng/pngget.c": 1,
                "png_fixed": 1,
                "png_handle_tEXt": 1,
                "png_zlib_claim": 1,
                "updatewindow": 1,
                "__DllMainCRTStartup": 1,
                "png_crc_finish": 1,
                "png_default_read_data": 1,
                "png_handle_oFFs": 1,
                "__mingw_GetSectionForAddress": 1,
                "__main": 1,
                "lib/sdk/crt/startup/pesect.c": 1,
                "png_write_bKGD": 1,
                "__do_global_ctors": 1,
                "bi_flush": 1,
                "png_write_IDAT": 1,
                "lib/sdk/crt/startup/pseudo-reloc.c": 1,
                "crc32_combine": 1,
                "png_push_crc_finish": 1,
                "png_pow10": 1,
                "pre_c_init": 1,
                "get_crc_table": 1,
                "zcfree": 1,
                "deflateBound": 1,
                "png_write_iCCP": 1,
                "png_reset_filter_heuristics": 1,
                "png_do_packswap": 1,
                "png_text_compress": 1,
                "lib/sdk/crt/startup/gccmain.c": 1,
                "deflateSetDictionary": 1,
                "crc32_combine_": 1,
                "png_do_unpack": 1,
                "__report_gsfailure": 1,
                "png_write_sRGB": 1,
                "png_fixed_error": 1,
                "dll/3rdparty/libpng/pngwio.c": 1,
                "png_read_filter_row_sub": 1,
                "png_handle_bKGD": 1,
                "png_check_IHDR": 1,
                "png_write_data": 1,
                "png_write_find_filter": 1,
                "deflate": 1,
                "png_read_finish_row": 1,
                "_CRT_INIT": 1,
                "png_do_read_transformations": 1,
                "inflateSetDictionary": 1,
                "png_handle_gAMA": 1,
                "png_do_quantize": 1,
                "lib/sdk/crt/startup/atonexit.c": 1,
                "png_handle_iCCP": 1,
                "png_write_chunk_header": 1,
                "png_ascii_from_fixed": 1,
                "png_push_crc_skip": 1,
                "png_write_sPLT": 1,
                "png_decompress_chunk": 1,
                "lib/3rdparty/zlib/deflate.c": 1,
                "png_gamma_significant": 1,
                "___w64_mingwthr_add_key_dtor": 1,
                "png_do_pack": 1,
                "png_handle_sRGB": 1,
                "png_write_sBIT": 1,
                "png_do_gray_to_rgb": 1,
                "__do_global_dtors": 1,
                "png_gamma_8bit_correct": 1,
                "png_do_read_filler": 1,
                "png_build_8bit_table": 1,
                "png_xy_from_XYZ": 1,
                "png_do_expand": 1,
                "_tr_flush_bits": 1,
                "png_reciprocal2": 1,
                "_tr_stored_block": 1,
                "png_init_filter_heuristics": 1,
                "ppi_from_ppm": 1,
                "png_check_fp_string": 1,
                "include/crt/mingw32/intrin_x86.h": 1,
                "png_handle_sPLT": 1,
                "png_do_write_interlace": 1,
                "png_handle_sBIT": 1,
                "lib/3rdparty/zlib/trees.c": 1,
                "_decode_pointer": 1,
                "adler32_combine": 1,
                "_pei386_runtime_relocator": 1,
                "png_destroy_struct": 1,
                "__tlregdtor": 1,
                "__mingwthr_run_key_dtors": 1,
                "zlibVersion": 1,
                "inflateEnd": 1,
                "png_gamma_16bit_correct": 1,
                "deflateResetKeep": 1,
                "crc32": 1,
                "png_do_strip_channel": 1,
                "deflateSetHeader": 1,
                "_FindPESectionExec": 1,
                "png_push_have_info": 1,
                "lib/sdk/crt/startup/mingw_helpers.c": 1,
                "png_warning_parameter": 1,
                "__security_init_cookie": 1,
                "png_check_keyword": 1,
                "inflateReset": 1,
                "deflateInit_": 1,
                "lib/3rdparty/zlib/inffast.c": 1,
                "png_64bit_product": 1,
                "png_format_number": 1,
                "png_crc_read": 1,
                "png_formatted_warning": 1,
                "png_crc_error": 1,
                "inflateInit2_": 1,
                "png_do_write_transformations": 1,
                "inflate_fast": 1,
                "deflatePrime": 1,
                "_GetPEImageBase": 1,
                "dll/3rdparty/libpng/pngmem.c": 1,
                "png_do_shift": 1,
                "deflateInit2_": 1,
                "dll/3rdparty/libpng/pngtrans.c": 1,
                "png_check_fp_number": 1,
                "png_calculate_crc": 1,
                "inflateSyncPoint": 1,
                "png_warning_parameter_signed": 1,
                "dll/3rdparty/libpng/png.c": 1,
                "scan_tree": 1,
                "png_read_push_finish_row": 1,
                "png_do_unshift": 1,
                "png_handle_cHRM": 1,
                "png_push_process_row": 1,
                "deflateParams": 1,
                "png_get_fixed_point": 1,
                "png_do_expand_16": 1,
                "lib/3rdparty/zlib/inflate.c": 1,
                "deflateTune": 1,
                "png_ascii_from_fp": 1,
                "png_write_IHDR": 1,
                "lib/sdk/crt/startup/gs_support.c": 1,
                "deflatePending": 1,
                "_IsNonwritableInCurrentImage": 1,
                "png_reset_crc": 1,
                "png_write_finish_row": 1,
                "adler32": 1,
                "__dyn_tls_init": 1,
                "png_write_tRNS": 1,
                "png_init_read_transformations": 1,
                "__write_memory": 1,
                "png_write_cHRM_fixed": 1,
                "putShortMSB": 1,
                "lib/sdk/crt/startup/tlssup.c": 1,
                "png_chunk_unknown_handling": 1,
                "png_write_gAMA_fixed": 1,
                "compress_block": 1,
                "png_handle_IHDR": 1,
                "png_XYZ_from_xy_checked": 1,
                "dll/3rdparty/libpng/pngrio.c": 1,
                "inflate": 1,
                "_FindPESectionByName": 1,
                "png_write_zTXt": 1,
                "png_default_flush": 1,
                "deflateCopy": 1,
                "png_muldiv": 1,
                "png_handle_tRNS": 1,
                "png_create_struct": 1,
                "build_tree": 1,
                "png_write_sCAL_s": 1,
                "deflate_stored": 1,
                "inflate_table": 1,
                "png_do_invert": 1,
                "png_write_IEND": 1,
                "__dyn_tls_dtor": 1,
                "_tr_init": 1,
                "mingw_onexit": 1,
                "png_push_have_row": 1,
                "dll/3rdparty/libpng/pngset.c": 1,
                "__report_error": 1,
                "png_do_expand_palette": 1,
                "lib/sdk/crt/startup/tlsthrd.c": 1,
                "png_handle_zTXt": 1,
                "inflateResetKeep": 1,
                "inflateGetHeader": 1,
                "dll/3rdparty/libpng/pngread.c": 1,
                "png_write_destroy": 1,
                "png_info_destroy": 1,
                "png_do_write_invert_alpha": 1,
                "png_do_write_intrapixel": 1,
                "flush_pending": 1,
                "png_flush": 1,
                "deflateEnd": 1,
                "png_read_filter_row_paeth_multibyte_pixel": 1,
                "png_handle_IEND": 1,
                "png_XYZ_from_xy": 1,
                "deflate_slow": 1,
                "___w64_mingwthr_remove_key_dtor": 1,
                "inflateCopy": 1,
                "dll/3rdparty/libpng/pngwrite.c": 1,
                "_tr_flush_block": 1,
                "png_destroy_gamma_table": 1,
                "png_read_data": 1,
                "png_do_gamma": 1,
                "inflateGetDictionary": 1,
                "png_fixed_inches_from_microns": 1,
                "DllMainCRTStartup": 1,
                "convert_gamma_value": 1,
                "png_push_read_IDAT": 1,
                "_tr_tally": 1,
                "png_default_write_data": 1,
                "__mingw_enum_import_library_names": 1,
                "lib/3rdparty/zlib/zutil.c": 1,
                "png_push_have_end": 1,
                "lib/3rdparty/zlib/inftrees.c": 1,
                "inflateSync": 1,
                "DllMain": 1,
                "png_set_text_2": 1,
                "longest_match": 1,
                "png_read_destroy": 1,
                "png_create_struct_2": 1,
                "png_write_pCAL": 1,
                "png_do_check_palette_indexes": 1,
                "png_warning_parameter_unsigned": 1,
                "inflateReset2": 1,
                "send_tree": 1,
                "png_safecat": 1,
                "dll/3rdparty/libpng/pngerror.c": 1,
                "fill_window": 1,
                "zlibCompileFlags": 1,
                "__mingw_get_msvcrt_handle": 1,
                "png_zalloc": 1,
                "inflateMark": 1,
                "atexit": 1,
                "lib/sdk/crt/startup/dllentry.c": 1,
                "png_do_read_intrapixel": 1,
                "png_write_start_row": 1,
                "gf2_matrix_times": 1,
                "png_push_read_chunk": 1,
                "pqdownheap": 1,
                "png_check_cHRM_fixed": 1,
                "png_build_16bit_table": 1,
                "crc32_combine64": 1,
                "png_user_version_check": 1,
                "png_reciprocal": 1,
                "png_push_save_buffer": 1,
                "png_muldiv_warn": 1,
                "png_handle_pCAL": 1,
                "png_zlib_release": 1,
                "deflateReset": 1,
                "png_do_write_swap_alpha": 1,
                "png_do_chop": 1,
                "zError": 1,
                "adler32_combine_": 1,
                "png_do_read_invert_alpha": 1,
                "png_do_swap": 1,
                "png_push_restore_buffer": 1,
                "bi_windup": 1,
                "deflate_fast": 1,
                "png_destroy_struct_2": 1,
                "png_do_rgb_to_gray": 1,
                "png_read_transform_info": 1,
                "png_write_pHYs": 1,
                "png_gamma_correct": 1,
                "png_read_filter_row": 1,
                "translate_gamma_flags": 1,
                "png_write_tIME": 1,
                "init_block": 1,
                "png_handle_unknown": 1,
                "dll/3rdparty/libpng/pngwtran.c": 1,
                "png_read_filter_row_up": 1,
                "png_read_sig": 1,
                "png_write_PLTE": 1,
                "png_do_read_interlace": 1,
                "inflateInit_": 1,
                "png_build_gamma_table": 1,
                "__mingw_TLScallback": 1,
                "zcalloc": 1,
                "dll/3rdparty/libpng/pngwutil.c": 1,
                "png_process_some_data": 1,
                "png_read_filter_row_paeth_1byte_pixel": 1,
                "png_handle_pHYs": 1,
                "png_write_iTXt": 1,
                "dll/3rdparty/libpng/pngrtran.c": 1,
                "png_handle_tIME": 1,
                "inflatePrime": 1,
                "png_zfree": 1,
                "png_handle_PLTE": 1,
                "png_read_start_row": 1,
                "png_write_hIST": 1,
                "png_do_encode_alpha": 1,
                "_FindPESection": 1,
                "png_do_read_swap_alpha": 1,
                "png_do_bgr": 1,
                "adler32_combine64": 1,
                "DllEntryPoint": 1,
                "lib/3rdparty/zlib/crc32.c": 1,
                "png_process_IDAT_data": 1,
                "__mingw_GetSectionCount": 1,
                "dll/3rdparty/libpng/pngpread.c": 1,
                "png_read_chunk_header": 1,
                "png_push_read_sig": 1,
                "gf2_matrix_square": 1,
                "dll/3rdparty/libpng/pngrutil.c": 1,
                "png_do_compose": 1,
                "_tr_align": 1,
                "png_combine_row": 1,
                "png_handle_iTXt": 1,
                "png_check_chunk_name": 1,
                "png_push_fill_buffer": 1,
                "png_handle_hIST": 1,
                "_ValidateImageBase": 1,
                "inflateUndermine": 1,
                "lib/3rdparty/zlib/adler32.c": 1,
                "syncsearch": 1,
                "png_write_tEXt": 1,
                "_imp__floor": 1,
                "__RUNTIME_PSEUDO_RELOC_LIST__": 1,
                "_data_start__": 1,
                "_dll_win32_msvcrt_libmsvcrt_a_iname": 1,
                "__DTOR_LIST__": 1,
                "__xi_a": 1,
                "_imp__VirtualProtect": 1,
                "_imp___onexit": 1,
                "_imp__GetLastError": 1,
                "_imp__VirtualQuery": 1,
                "z_errmsg": 1,
                "_imp__modf": 1,
                "__tls_start__": 1,
                "__native_startup_lock": 1,
                "_imp__TlsGetValue": 1,
                "_imp__InterlockedExchange": 1,
                "_imp__InitializeCriticalSection": 1,
                "_rt_psrelocs_start": 1,
                "_imp__abort": 1,
                "__xl_c": 1,
                "_dll_characteristics__": 1,
                "_size_of_stack_commit__": 1,
                "_size_of_stack_reserve__": 1,
                "_major_subsystem_version__": 1,
                "__crt_xl_start__": 1,
                "__crt_xi_start__": 1,
                "_imp___amsg_exit": 1,
                "__crt_xi_end__": 1,
                "__xl_z": 1,
                "_imp__QueryPerformanceCounter": 1,
                "mingw_initltsdrot_force": 1,
                "_imp___iob": 1,
                "_imp__strncmp": 1,
                "_head_dll_win32_msvcrt_libmsvcrt_a": 1,
                "_bss_start__": 1,
                "_imp__fputc": 1,
                "__RUNTIME_PSEUDO_RELOC_LIST_END__": 1,
                "_size_of_heap_commit__": 1,
                "__onexitend": 1,
                "_imp__GetCurrentProcess": 1,
                "_imp__GetProcAddress": 1,
                "__crt_xp_start__": 1,
                "_dist_code": 1,
                "__mingw_gMTKeyDtor": 1,
                "__crt_xp_end__": 1,
                "pcinit": 1,
                "_dll__": 1,
                "_minor_os_version__": 1,
                "_image_base__": 1,
                "_section_alignment__": 1,
                "_imp__memmove": 1,
                "deflate_copyright": 1,
                "__xc_a": 1,
                "_imp__FreeLibrary": 1,
                "_IAT_end__": 1,
                "_RUNTIME_PSEUDO_RELOC_LIST__": 1,
                "_tls_start": 1,
                "inflate_copyright": 1,
                "__native_startup_state": 1,
                "_data_end__": 1,
                "__xl_a": 1,
                "__xl_d": 1,
                "_CTOR_LIST__": 1,
                "__onexitbegin": 1,
                "_CRT_MT": 1,
                "_bss_end__": 1,
                "__security_cookie_complement": 1,
                "__crt_xc_end__": 1,
                "_tls_index": 1,
                "_imp__GetTickCount": 1,
                "__crt_xc_start__": 1,
                "__CTOR_LIST__": 1,
                "_imp__GetCurrentProcessId": 1,
                "mingw_app_type": 1,
                "_imp__TerminateProcess": 1,
                "_rt_psrelocs_size": 1,
                "_imp__fread": 1,
                "_imp____dllonexit": 1,
                "_length_code": 1,
                "_imp__memcpy": 1,
                "_file_alignment__": 1,
                "_imp__LoadLibraryW": 1,
                "_imp___unlock": 1,
                "_imp__LeaveCriticalSection": 1,
                "_imp__malloc": 1,
                "_imp__memcmp": 1,
                "_major_os_version__": 1,
                "_imp__gmtime": 1,
                "_IAT_start__": 1,
                "__xc_z": 1,
                "_tls_end": 1,
                "_end__": 1,
                "_imp__GetModuleHandleA": 1,
                "_imp___lock": 1,
                "_DTOR_LIST__": 1,
                "_imp__fprintf": 1,
                "_imp__memset": 1,
                "_imp___initterm": 1,
                "_size_of_heap_reserve__": 1,
                "__crt_xt_start__": 1,
                "__ImageBase": 1,
                "_subsystem__": 1,
                "__mingw_gMTRemoveKeyDtor": 1,
                "_imp__fflush": 1,
                "__mingw_usemthread_dll": 1,
                "_imp__calloc": 1,
                "_imp__pow": 1,
                "__native_vcclrit_reason": 1,
                "_imp__GetSystemTimeAsFileTime": 1,
                "_dll_win32_kernel32_libkernel32_a_iname": 1,
                "_imp___winmajor": 1,
                "__native_dllmain_reason": 1,
                "__tls_end__": 1,
                "__xi_z": 1,
                "mingw_initltssuo_force": 1,
                "_imp__free": 1,
                "_imp__SetUnhandledExceptionFilter": 1,
                "_major_image_version__": 1,
                "_loader_flags__": 1,
                "_imp__UnhandledExceptionFilter": 1,
                "_imp__frexp": 1,
                "__chkstk_ms": 1,
                "_rt_psrelocs_end": 1,
                "_minor_subsystem_version__": 1,
                "_minor_image_version__": 1,
                "_imp__DisableThreadLibraryCalls": 1,
                "_imp__Sleep": 1,
                "_imp__vfprintf": 1,
                "_imp__atof": 1,
                "_imp__InterlockedCompareExchange": 1,
                "mingw_initltsdyn_force": 1,
                "_imp__GetCurrentThreadId": 1,
                "_head_dll_win32_kernel32_libkernel32_a": 1,
                "_imp__DeleteCriticalSection": 1,
                "__security_cookie": 1,
                "_imp__LoadLibraryA": 1,
                "_imp___setjmp": 1,
                "_RUNTIME_PSEUDO_RELOC_LIST_END__": 1,
                "__dyn_tls_init_callback": 1,
                "_imp__longjmp": 1,
                "_tls_used": 1,
                "__crt_xt_end__": 1,
                "_imp__EnterCriticalSection": 1,
                "_imp__fwrite": 1,
                ".gnu_debuglink": 1,
                ".debug_aranges": 1,
                ".debug_info": 1,
                ".debug_abbrev": 1,
                ".debug_line": 1,
                ".debug_frame": 1,
                ".debug_str": 1,
                ".debug_loc": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-r-- name=.rdata": 1,
                "perm=m-r-- name=.gnu_debuglink": 1,
                "perm=m-rw- name=.bss": 1,
                "perm=m-r-- name=.edata": 1,
                "perm=m-rw- name=.idata": 1,
                "perm=m-rw- name=.CRT": 1,
                "perm=m-rw- name=.tls": 1,
                "perm=m-r-- name=.reloc": 1,
                "perm=m-r-- name=.rossym": 1,
                "type=program": 1,
                "type=tls": 2,
                "bind=NONE type=FUNC name=kernel32.dll_DeleteCriticalSection": 3,
                "bind=NONE type=FUNC name=kernel32.dll_DisableThreadLibraryCalls": 3,
                "bind=NONE type=FUNC name=kernel32.dll_EnterCriticalSection": 3,
                "bind=NONE type=FUNC name=kernel32.dll_FreeLibrary": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetCurrentProcess": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetCurrentProcessId": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetCurrentThreadId": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetLastError": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetModuleHandleA": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetProcAddress": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetSystemTimeAsFileTime": 3,
                "bind=NONE type=FUNC name=kernel32.dll_GetTickCount": 3,
                "bind=NONE type=FUNC name=kernel32.dll_InitializeCriticalSection": 3,
                "bind=NONE type=FUNC name=kernel32.dll_InterlockedCompareExchange": 3,
                "bind=NONE type=FUNC name=kernel32.dll_InterlockedExchange": 3,
                "bind=NONE type=FUNC name=kernel32.dll_LeaveCriticalSection": 3,
                "bind=NONE type=FUNC name=kernel32.dll_LoadLibraryA": 3,
                "bind=NONE type=FUNC name=kernel32.dll_LoadLibraryW": 3,
                "bind=NONE type=FUNC name=kernel32.dll_QueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=kernel32.dll_SetUnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=kernel32.dll_Sleep": 3,
                "bind=NONE type=FUNC name=kernel32.dll_TerminateProcess": 3,
                "bind=NONE type=FUNC name=kernel32.dll_TlsGetValue": 3,
                "bind=NONE type=FUNC name=kernel32.dll_UnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=kernel32.dll_VirtualProtect": 3,
                "bind=NONE type=FUNC name=kernel32.dll_VirtualQuery": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___dllonexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__amsg_exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__initterm": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__iob": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__lock": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__onexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__setjmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__unlock": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__winmajor": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_abort": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_atof": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_calloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fflush": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_floor": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fputc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fread": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_free": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_frexp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fwrite": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_gmtime": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_longjmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_malloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memcmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memcpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memmove": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memset": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_modf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_pow": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_strncmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_vfprintf": 3,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_access_version_number": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_benign_error": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_build_grayscale_palette": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_calloc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_chunk_benign_error": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_chunk_error": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_chunk_warning": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_convert_from_struct_tm": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_convert_from_time_t": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_convert_to_rfc1123": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_create_info_struct": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_create_read_struct": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_create_read_struct_2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_create_write_struct": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_create_write_struct_2": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_data_freer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_destroy_info_struct": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_destroy_read_struct": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_destroy_write_struct": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_error": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_free": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_free_data": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_free_default": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_IHDR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_PLTE": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_bKGD": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_bit_depth": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_cHRM": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_cHRM_XYZ": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_cHRM_XYZ_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_cHRM_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_channels": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_chunk_cache_max": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_chunk_malloc_max": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_color_type": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_compression_buffer_size": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_compression_type": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_copyright": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_current_pass_number": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_current_row_number": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_error_ptr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_filter_type": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_gAMA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_gAMA_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_hIST": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_header_ver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_header_version": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_iCCP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_image_height": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_image_width": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_int_32": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_interlace_type": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_io_chunk_name": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_io_chunk_type": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_io_ptr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_io_state": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_libpng_ver": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_mem_ptr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_oFFs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_pCAL": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_pHYs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_pHYs_dpi": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_pixel_aspect_ratio": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_pixel_aspect_ratio_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_pixels_per_inch": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_pixels_per_meter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_progressive_ptr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_rgb_to_gray_status": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_rowbytes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_rows": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_sBIT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_sCAL": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_sCAL_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_sCAL_s": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_sPLT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_sRGB": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_signature": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_tIME": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_tRNS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_text": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_uint_16": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_uint_31": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_uint_32": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_unknown_chunks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_user_chunk_ptr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_user_height_max": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_user_transform_ptr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_user_width_max": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_valid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_x_offset_inches": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_x_offset_inches_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_x_offset_microns": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_x_offset_pixels": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_x_pixels_per_inch": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_x_pixels_per_meter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_y_offset_inches": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_y_offset_inches_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_y_offset_microns": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_y_offset_pixels": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_y_pixels_per_inch": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_get_y_pixels_per_meter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_handle_as_unknown": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_info_init_3": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_init_io": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_longjmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_malloc": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_malloc_default": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_malloc_warn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_permit_mng_features": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_process_data": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_process_data_pause": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_process_data_skip": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_progressive_combine_row": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_read_end": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_read_image": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_read_info": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_read_png": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_read_row": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_read_rows": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_read_update_info": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_reset_zstream": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_save_int_32": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_save_uint_16": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_save_uint_32": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_IHDR": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_PLTE": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_add_alpha": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_alpha_mode": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_alpha_mode_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_bKGD": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_background": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_background_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_benign_errors": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_bgr": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_cHRM": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_cHRM_XYZ": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_cHRM_XYZ_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_cHRM_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_check_for_invalid_index": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_chunk_cache_max": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_chunk_malloc_max": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_compression_buffer_size": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_compression_level": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_compression_mem_level": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_compression_method": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_compression_strategy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_compression_window_bits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_crc_action": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_error_fn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_expand": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_expand_16": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_expand_gray_1_2_4_to_8": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_filler": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_filter": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_filter_heuristics": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_filter_heuristics_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_flush": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_gAMA": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_gAMA_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_gamma": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_gamma_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_gray_to_rgb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_hIST": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_iCCP": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_interlace_handling": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_invalid": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_invert_alpha": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_invert_mono": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_keep_unknown_chunks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_longjmp_fn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_mem_fn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_oFFs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_pCAL": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_pHYs": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_packing": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_packswap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_palette_to_rgb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_progressive_read_fn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_quantize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_read_fn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_read_status_fn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_read_user_chunk_fn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_read_user_transform_fn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_rgb_to_gray": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_rgb_to_gray_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_rows": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_sBIT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_sCAL": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_sCAL_fixed": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_sCAL_s": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_sPLT": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_sRGB": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_sRGB_gAMA_and_cHRM": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_scale_16": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_shift": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_sig_bytes": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_strip_16": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_strip_alpha": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_swap": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_swap_alpha": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_tIME": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_tRNS": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_tRNS_to_alpha": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_text": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_text_compression_level": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_text_compression_mem_level": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_text_compression_method": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_text_compression_strategy": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_text_compression_window_bits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_unknown_chunk_location": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_unknown_chunks": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_user_limits": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_user_transform_info": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_write_fn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_write_status_fn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_set_write_user_transform_fn": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_sig_cmp": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_start_read_image": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_warning": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_chunk": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_chunk_data": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_chunk_end": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_chunk_start": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_end": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_flush": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_image": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_info": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_info_before_PLTE": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_png": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_row": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_rows": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=libpng.dll_png_write_sig": 1,
                "section=.rdata type=utf8 string=(kdz": 1,
                "section=.rdata type=utf8 string=!#\u0133V blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf8 string=|\u04cceL blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string=\u04b1t9G blocks=Cyrillic,Basic Latin": 1,
                "section=.rdata type=utf8 string=+\u04c9Zz blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string=c\uc723ju\\n blocks=Basic Latin,Hangul Syllables": 1,
                "section=.rdata type=utf8 string=wn>Jj\u046e blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string=ZV\u01d6AO\\b blocks=Basic Latin,Latin Extended-B": 1,
                "section=.rdata type=utf8 F\u07f2\\a] blocks=Basic Latin,NKo": 1,
                "section=.rdata type=utf8 string=y\u07a9%8 blocks=Basic Latin,Thaana": 1,
                "section=.rdata type=utf8 string=\\r\u01608L blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf8 string=!\u03273` blocks=Basic Latin,Combining Diacritical Marks": 1,
                "section=.rdata type=utf8 string=pl@Aw": 1,
                "section=.rdata type=utf8 string=yk\u02acHp blocks=Basic Latin,IPA Extensions": 1,
                "section=.rdata type=utf8 string=ux\u0709~O blocks=Basic Latin,Syriac": 1,
                "section=.rdata type=utf8 string=uW\\t\u05b7V blocks=Basic Latin,Hebrew": 1,
                "section=.rdata type=utf8 string=\u014aO\\b}d blocks=Latin Extended-A,Basic Latin": 1,
                "section=.rdata type=utf8 string=mN\u041f5+ blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string={kHw\u00e2 blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf8 string=\u02b0\\3; blocks=Spacing Modifier Letters,Basic Latin": 1,
                "section=.rdata type=utf8 string=\\bF\\rm": 1,
                "section=.rdata type=utf8 string=\u04a5fAj blocks=Cyrillic,Basic Latin": 1,
                "section=.rdata type=utf8 string=A\u06b1&S blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=lDa>": 1,
                "section=.rdata type=utf8 string=\u03e97~8A blocks=Greek and Coptic,Basic Latin": 1,
                "section=.rdata type=utf8 string=\u6e31{I\\r blocks=CJK Unified Ideographs,Basic Latin": 1,
                "section=.rdata type=utf8 string=\u06c82y\u0738 blocks=Arabic,Basic Latin,Syriac": 1,
                "section=.rdata type=utf8 x\\a\u0262 blocks=Basic Latin,IPA Extensions": 1,
                "section=.rdata type=utf8 string=J\u07e5A=\u0615\u05e4 blocks=Basic Latin,NKo,Arabic,Hebrew": 1,
                "section=.rdata type=utf8 string=\\;:l": 1,
                "section=.rdata type=utf8 string=\\r+\u06af\\n\\eL6 blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=%o\u04a0Rh blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf8 string=&/\u017a; blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf8 string=\u00a7g&a blocks=Latin-1 Supplement,Basic Latin": 1,
                "section=.rdata type=utf8 string=IiGM>nw\u06ee blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=\u0172e]] blocks=Latin Extended-A,Basic Latin": 1,
                "section=.rdata type=utf8 string=Ge\u00adlH blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf8 string=d\\b\u0613S\\n blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=ru\u055bE~ blocks=Basic Latin,Armenian": 1,
                "section=.rdata type=utf8 string=x]`\u063a7W blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=D\\at\u0346mC blocks=Basic Latin,Combining Diacritical Marks": 1,
                "section=.rdata type=utf8 string=)\u0121:C blocks=Basic Latin,Latin Extended-A": 1,
                "section=.rdata type=utf8 string=\u00ffZ^\u06be blocks=Latin-1 Supplement,Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 %k_\u071d blocks=Basic Latin,Syriac": 1,
                "section=.rdata type=utf8 string=\\bzG\u02602 blocks=Basic Latin,IPA Extensions": 1,
                "section=.rdata type=utf8 string=\u03cfOZw3(? blocks=Greek and Coptic,Basic Latin": 1,
                "section=.rdata type=utf8 string=b;!l\u0687F\\t blocks=Basic Latin,Arabic": 1,
                "section=.rdata type=utf8 string=>aD\u018b\u03aa~7 blocks=Basic Latin,Latin Extended-B,Greek and Coptic": 1,
                "section=.rdata type=utf8 string=\u6563\\rI{\\e blocks=CJK Unified Ideographs,Basic Latin": 1,
                "section=.rdata type=utf8 string=Js\u0432Js blocks=Basic Latin,Cyrillic": 1,
                "section=.rdata type=utf16le string=  \ud7cd\u734a\\b blocks=Basic Latin,Hangul Jamo Extended-B,CJK Unified Ideographs": 1,
                "section=.rdata type=utf8 string=KsrKs\u00b2Ks\u0372Ks\u06b2Ks blocks=Basic Latin,Latin-1 Supplement,Greek and Coptic,Arabic": 1,
                "section=.rdata type=utf8 string=KsrKs": 1,
                "section=.rdata type=utf16le string=\\a\\b\\t\\n\\v\\r": 1,
                "section=.rdata type=utf16le string=#+3;CScs": 1,
                "section=.rdata type=utf16le string=!1Aa": 1,
                "section=.rdata type=utf16le string=@@\u6e69\u6176\u696c blocks=Basic Latin,CJK Unified Ideographs": 1,
                "section=.rdata type=utf32le string=\\a\\a\\b\\b\\t\\t\\n\\n\\v\\v\\f\\f\\r\\r": 1,
                "section=.rdata type=utf16le string=\\bL\\b\u00cc\\b,\\b\u00ac\\bl\\b\u00ec\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\b\\\\b\u00dc\\b<\\b\u00bc\\b|\\b\u00fc\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bB\\b\u00c2\\b\"\\b\u00a2\\bb\\b\u00e2\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bR\\b\u00d2\\b2\\b\u00b2\\br\\b\u00f2\\b\\n\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bJ\\b\u00ca\\b*\\b\u00aa\\bj\\b\u00ea\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bZ\\b\u00da\\b:\\b\u00ba\\bz\\b\u00fa\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bF\\b\u00c6\\b&\\b\u00a6\\bf\\b\u00e6\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bV\\b\u00d6\\b6\\b\u00b6\\bv\\b\u00f6\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bN\\b\u00ce\\b.\\b\u00ae\\bn\\b\u00ee\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\b^\\b\u00de\\b>\\b\u00be\\b~\\b\u00fe\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bA\\b\u00c1\\b!\\b\u00a1\\ba\\b\u00e1\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bQ\\b\u00d1\\b1\\b\u00b1\\bq\\b\u00f1\\b\\t\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bI\\b\u00c9\\b)\\b\u00a9\\bi\\b\u00e9\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bY\\b\u00d9\\b9\\b\u00b9\\by\\b\u00f9\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bE\\b\u00c5\\b%\\b\u00a5\\be\\b\u00e5\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bU\\b\u00d5\\b5\\b\u00b5\\bu\\b\u00f5\\b\\r\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\bM\\b\u00cd\\b-\\b\u00ad\\bm\\b\u00ed\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\b]\\b\u00dd\\b=\\b\u00bd\\b}\\b\u00fd\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf16le string=\\tS\\t\u0153\\t\u00d3\\t\u01d3\\t3\\t\u0133\\t\u00b3\\t\u01b3\\ts\\t\u0173\\t\u00f3\\t\u01f3\\t\\v\\t\u010b\\t blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B": 1,
                "section=.rdata type=utf16le string=\\tK\\t\u014b\\t\u00cb\\t\u01cb\\t+\\t\u012b\\t\u00ab\\t\u01ab\\tk\\t\u016b\\t\u00eb\\t\u01eb\\t\\e\\t\u011b\\t blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B": 1,
                "section=.rdata type=utf16le string=\\t[\\t\u015b\\t\u00db\\t\u01db\\t;\\t\u013b\\t\u00bb\\t\u01bb\\t{\\t\u017b\\t\u00fb\\t\u01fb\\t\\a\\t\u0107\\t blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B": 1,
                "section=.rdata type=utf16le string=\\tG\\t\u0147\\t\u00c7\\t\u01c7\\t'\\t\u0127\\t\u00a7\\t\u01a7\\tg\\t\u0167\\t\u00e7\\t\u01e7\\t blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B": 1,
                "section=.rdata type=utf16le string=\\tW\\t\u0157\\t\u00d7\\t\u01d7\\t7\\t\u0137\\t\u00b7\\t\u01b7\\tw\\t\u0177\\t\u00f7\\t\u01f7\\t blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B": 1,
                "section=.rdata type=utf16le string=\\tO\\t\u014f\\t\u00cf\\t\u01cf\\t/\\t\u012f\\t\u00af\\t\u01af\\to\\t\u016f\\t\u00ef\\t\u01ef\\t blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B": 1,
                "section=.rdata type=utf16le string=\\t_\\t\u015f\\t\u00df\\t\u01df\\t?\\t\u013f\\t\u00bf\\t\u01bf\\t blocks=Basic Latin,Latin Extended-A,Latin-1 Supplement,Latin Extended-B": 1,
                "section=.rdata type=utf16le string=\\t\u00ff\\t\u01ff\\t blocks=Basic Latin,Latin-1 Supplement,Latin Extended-B": 1,
                "section=.rdata type=utf16le string=\\a@\\a \\a`\\a": 1,
                "section=.rdata type=utf16le string=\\aP\\a0\\ap\\a\\b\\aH\\a(\\ah\\a": 1,
                "section=.rdata type=utf16le string=\\aX\\a8\\ax\\a": 1,
                "section=.rdata type=utf16le string=\\aD\\a$\\ad\\a": 1,
                "section=.rdata type=utf16le string=\\aT\\a4\\at\\a": 1,
                "section=.rdata type=utf16le string=\\bC\\b\u00c3\\b#\\b\u00a3\\bc\\b\u00e3\\b blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rdata type=utf32le string=\\a\\b\\n\\f": 1,
                "section=.rdata type=utf32le string= (08@P`p": 1,
                "section=.rdata type=utf32le string= 0@`": 2,
                "section=.rdata type=utf16le string=svcrt.dll": 1,
                "arch     x86": 1,
                "binsz    413696": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x00072757": 1,
                "compiled Tue Jul 15 17:22:44 2014": 1,
                "crypto   false": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x00068551": 1,
                "linenum  false": 1,
                "lsyms    false": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       windows": 1,
                "overlay  true": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   false": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Windows CUI": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0xb": 1,
                "TimeDateStamp : 0x53c55554": 1,
                "PointerToSymbolTable : 0x64e00": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x2102": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x2": 1,
                "MinorLinkerVersion : 0x17": 1,
                "SizeOfCode : 0x22c00": 1,
                "SizeOfInitializedData : 0xaa00": 1,
                "SizeOfUninitializedData : 0x400": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0x24000": 1,
                "ImageBase : 0x73490000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x200": 1,
                "MajorOperatingSystemVersion : 0x4": 1,
                "MinorOperatingSystemVersion : 0x0": 1,
                "MajorImageVersion : 0x1": 1,
                "MinorImageVersion : 0x0": 1,
                "MajorSubsystemVersion : 0x4": 1,
                "MinorSubsystemVersion : 0x0": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x6d000": 1,
                "SizeOfHeaders : 0x600": 1,
                "CheckSum : 0x68551": 1,
                "Subsystem : 0x3": 1,
                "DllCharacteristics : 0x0": 1,
                "SizeOfStackReserve : 0x200000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_EXPORT": 1,
                "VirtualAddress : 0x2f000": 1,
                "Size : 0x1b30": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x31000": 1,
                "Size : 0x664": 1,
                "IMAGE_DIRECTORY_ENTRY_BASERELOC": 1,
                "VirtualAddress : 0x34000": 1,
                "Size : 0xa5c": 1,
                "IMAGE_DIRECTORY_ENTRY_TLS": 1,
                "VirtualAddress : 0x33004": 1,
                "Size : 0x18": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x31128": 1,
                "Size : 0xec": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x0": 1,
                "Size : 0xffff": 1,
                "kernel32.dll": 1,
                "msvcrt.dll": 1,
                "413696": 1,
                "=== VS_VERSIONINFO ===": 1
            }
        }
    ]
}