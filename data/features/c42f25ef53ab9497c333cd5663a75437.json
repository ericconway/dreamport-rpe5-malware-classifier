{
    "filepath": "/corpus/benign/0541db41b214272d1f26d1f0b1ad66450864c3d4",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "c42f25ef53ab9497c333cd5663a75437"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "sbbb %ah, (%eax);addb %al, (%eax);addb %ah, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %ah, (%eax);sbbb %ah, (%eax);addb %bh, %ah;testl $, (%ebx);je  <.text+>": 1,
                "movl (%ebx), %edx;bswapl %edx;incb %dh;movl $, %esi;movl $, %edi": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dl, -(%eax);movl $, %eax;cmpl $, (%ebp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <.text+>;testb %al, %al": 2,
                "movl %ebx, (%esp);calll  <.text+>;testb %al, %al;je  <.text+>;movl $, (%esp)": 1,
                "je  <.text+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "calll  <.text+>;movl $, %ebx;leal -(%ebp), %esi;imull $, %ebx, %eax;addl $, %eax": 1,
                "movl %eax, (%esp);movl %edi, (%esp);calll *(%ebx);jmp  <.text+>;addl $, %ebx": 1,
                "addl $, %ebx;cmpl $, %ebx;jne - <.text+>;addl $, %esp;popl %ebx": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);calll  <.text+>;movl %eax, %edx": 1,
                "calll  <.text+>;calll  <.text+>;testb %al, %al;jne  <.text+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll  <.text+>;jmp  <.text+>;movl -(%ebp), %eax;leal (%eax,%eax,), %eax": 1,
                "jmp  <.text+>;movl -(%ebp), %eax;leal (%eax,%eax,), %eax;leal (%edi,%eax,), %eax;movl %eax, (%esp)": 1,
                "calll - <.text+>;movl $, %ebx;jmp - <.text+>;movl $, (%esp);calll  <.text+>": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <.text+>;movl $, (%esp)": 1,
                "movzwl (%ebp), %eax;movl (%ebp), %edx;movb %al, (%edx);movl $, %eax;popl %ebp": 1,
                "leave;retl;nop;nop;nop": 10,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 23,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl , %eax;movl %eax, (%esp)": 4,
                "calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax;je  <.text+>;leal (%eax), %esi;movl $, (%esp)": 1,
                "leal (%eax), %esi;movl $, (%esp);movl %esi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax": 1,
                "addl %edx, ;addl $, %esp;popl %ebx;popl %esi;popl %ebp": 1,
                "movl %eax, (%esp);calll  <.text+>;movl , %edx;testb $, %dl;je  <.text+>": 1,
                "jne  <.text+>;movb $, -(%ebp);movl $, %esi;movl $, %ebx;jmp  <.text+>": 1,
                "jg - <.text+>;jmp  <.text+>;movzbl -(%ebp,%ebx), %edx;movl %edx, (%esp);calll - <.text+>": 1,
                "addl $, %ebx;cmpl %esi, %ebx;jl - <.text+>;movl $, %eax;addl $, %esp": 1,
                "je  <.text+>;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 3,
                "movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp);calll - <.text+>": 3,
                "movl $, (%esp);calll - <.text+>;jmp  <.text+>;movl $, (%esp);calll - <.text+>": 22,
                "calll - <.text+>;jmp  <.text+>;movl $, (%esp);calll - <.text+>;movb $, ": 1,
                "movl $, (%esp);calll - <.text+>;movb $, ;leal (%ebp), %eax;movl %eax, (%esp)": 1,
                "jne - <.text+>;addl $, %esp;popl %ebx;popl %ebp;retl": 2,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;testb $, (%eax)": 1,
                "movl $, (%esp);calll - <.text+>;cmpl $, (%ebp);je  <.text+>;movl $, %esi": 1,
                "leal -(%eax), %edx;cmpb $, %dl;ja  <.text+>;movzbl %al, %eax;movl %eax, (%esp)": 1,
                "jne - <.text+>;movl $, (%esp);calll - <.text+>;cmpl (%ebp), %esi;jb - <.text+>": 1,
                "movl %eax, -(%ebp);movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax;jne  <.text+>;movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %esi;rep  cmpsb %es:(%edi), (%esi);seta %cl;setb %al;cmpb %al, %cl": 4,
                "movl %edx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax;jne  <.text+>;movzbl -(%ebp), %edx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp);calll - <.text+>;calll  <ScsiPortWriteRegisterUshort+>": 1,
                "cmpb $, %al;jne  <.text+>;movl %ebx, %eax;addl $, %eax;movzbl (%eax), %edx": 1,
                "cmpb $, %dl;je  <.text+>;movl %eax, %edx;addl $, %edx;movzbl (%edx), %ecx": 1,
                "je  <.text+>;movl %eax, %edx;addl $, %edx;movzbl (%edx), %ecx;testb %cl, %cl": 1,
                "cmpb $, %cl;jne - <.text+>;jmp  <.text+>;movl %eax, %edx;movb $, (%edx)": 1,
                "movl %esi, (%esp);movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl $, %eax;addl $, %esp": 1,
                "pushl %edi;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl %ebx, (%esp)": 2,
                "notl %ecx;movl %ecx, ;movl $, %eax;addl $, %esp;popl %ebx": 1,
                "calll - <.text+>;movl , %eax;movzwl (%eax), %eax;movl %eax, (%esp);movl $, (%esp)": 26,
                "movl , %eax;movzwl (%eax), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 26,
                "jmp  <.text+>;movl $, %eax;addl $, %esp;popl %ebx;popl %esi": 25,
                "movl $, %eax;retl;movl $, %eax;cmpb $, ;jne  <.text+>": 1,
                "retl;movl $, %eax;cmpb $, ;jne  <.text+>;pushl %ebp": 1,
                "calll  <.text+>;movl %esi, (%esp);movl $, (%esp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "movl %eax, (%esp);movl $, (%esp);movl , %eax;subl $, %eax;movl %eax, (%esp)": 3,
                "movl , %eax;movl %eax, (%esp);movl $, (%esp);calll - <.text+>;movl , %eax": 1,
                "movl $, (%esp);calll - <.text+>;movl , %eax;movl (%eax), %eax;movl %eax, (%esp)": 27,
                "movl $, %edx;movl %edx, %eax;addl $, %esp;popl %ebx;popl %esi": 6,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl $, (%esp)": 5,
                "movl %eax, ;movl , %edx;movl $, %eax;testl %edx, %edx;je  <.text+>": 1,
                "testb %al, %al;je  <.text+>;addl $, %ebx;addl $, ;movl , %eax": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %esi": 1,
                "movl (%eax), %esi;movl (%eax), %ebx;calll  <.text+>;testl %ebx, %ebx;je  <.text+>": 1,
                "movl %ebx, (%esp);movl $, (%esp);movl $, (%esp);calll  <ScsiPortWriteRegisterUshort+>;jmp  <.text+>": 1,
                "movl $, (%esp);calll  <ScsiPortWriteRegisterUshort+>;jmp  <.text+>;movl $, ;movl $, ": 1,
                "testb %al, %al;je  <.text+>;movl $, (%esp);calll  <.text+>;movl %eax, %ebx": 1,
                "movl $, (%esp);movl $, (%esp);leal -(%ebp), %edi;movl %edi, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 1,
                "jbe  <.text+>;movl $, (%edx);jmp  <.text+>;movw $, (%eax);movw $, (%eax)": 1,
                "je  <.text+>;movl %eax, (%esp);calll  <.text+>;movl $, ;movl $, ": 1,
                "movl $, ;movl $, ;movl $, ;movl $, ;movl $, ": 45,
                "movl $, ;movl $, ;movl $, ;movb $, ;movl $, ": 1,
                "nop;nop;pushl %ebp;movl %esp, %ebp;subl $, %esp": 13,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);movzbl (%ebp), %eax": 3,
                "nop;ja  <.text+>;movl -(%ebp), %eax;jmpl *(,%eax,);movl $, ": 1,
                "jmp  <.text+>;movb $, ;jmp  <.text+>;movb $, ;jmp  <.text+>": 1,
                "movl $, ;jmp  <.text+>;movb $, ;jmp  <.text+>;movb $, -(%ebp)": 1,
                "calll  <.text+>;testb %al, %al;je  <.text+>;leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <.text+>;jmp  <.text+>;movl $, ": 1,
                "movl %esi, %eax;testb %al, %al;je  <.text+>;leal -(%ebx), %eax;cmpl $, %eax": 1,
                "notl %ecx;leal -(%ebp,%ecx), %eax;movw $, (%eax);movb $, (%eax);movl , %eax": 3,
                "movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movzbl , %eax": 2,
                "testb %al, %al;jne  <.text+>;cmpb $, -(%ebp);je  <.text+>;leal -(%ebp), %edi": 1,
                "cmpb $, -(%ebp);je  <.text+>;leal -(%ebp), %edi;movl $, %eax;movl $, %ecx": 3,
                "movl $, (%eax);movl $, (%eax);movl $, (%eax);jmp  <.text+>;movl %ebx, %edi": 2,
                "jmp  <.text+>;movl $, (%esp);calll - <.text+>;jmp  <.text+>;movl %ebx, %edi": 1,
                "movl $, (%esp);calll - <.text+>;jmp  <.text+>;movl %ebx, %edi;movl $, %eax": 1,
                "movl $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax);movb $, (%eax)": 3,
                "notl %ecx;leal -(%ebx,%ecx), %eax;movl $, (%eax);movl $, (%eax);addl $, %esp": 1,
                "leal -(%ebx,%ecx), %eax;movl $, (%eax);movl $, (%eax);addl $, %esp;popl %ebx": 1,
                "testl %eax, %eax;je  <.text+>;movl %ebx, (%esp);movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <.text+>;movl -(%ebp), %eax;movl %eax, (%esp);calll  <.text+>;movl %eax, -(%ebp)": 1,
                "andl $-, %edx;cmpb $, %dl;jne  <.text+>;leal -(%ebp), %ebx;addl $, %ebx": 1,
                "addl $, %ebx;movzbl (%ebx), %eax;movl %eax, %edx;andl $-, %edx;cmpb $, %dl": 1,
                "movl %eax, %edx;andl $-, %edx;cmpb $, %dl;je - <.text+>;jmp  <.text+>": 1,
                "addl $, (%eax);jmp  <.text+>;movl (%eax), %eax;cmpl %eax, %edx;jne - <.text+>": 1,
                "je  <.text+>;cmpb $, (%ebx);je - <.text+>;movl $, %eax;cmpl %edx, (%esi)": 1,
                "movl , %eax;movl %eax, (%esp);calll  <.text+>;movl $, (%esp);movl %ebx, (%esp)": 10,
                "movl %eax, ;movl (%esi), %edx;imull (%esi), %edx;imull %edx, %eax;movl %eax, ": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;movzbl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll - <.text+>;movl (%esi), %eax": 25,
                "calll - <.text+>;movl (%esi), %ebx;addl $, %esi;cmpl %esi, %ebx;je  <.text+>": 1,
                "movl $, (%esp);calll - <.text+>;movl (%ebx), %eax;movl %eax, (%esp);movl $, (%esp)": 34,
                "movl $, (%esp);calll - <.text+>;movzbl (%ebx), %eax;movl %eax, (%esp);movl $, (%esp)": 45,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll - <.text+>;cmpl $, (%ebx)": 2,
                "addl $, %edx;imull %edx, %eax;cmpl , %eax;jbe  <.text+>;movl %ebx, (%esp)": 1,
                "testb $, %al;je  <.text+>;movb $, (%eax);leal (%eax), %edx;movb $, %cl": 2,
                "movw $, (%edx);addl $, %edx;testb $, %cl;je  <.text+>;movb $, (%edx)": 5,
                "movb $, (%edx);movl (%ebp), %eax;movl %eax, (%esi);movl $, (%esp);movl (%ebx), %eax": 1,
                "movl %esi, (%esp);movl , %eax;movl %eax, (%esp);calll  <.text+>;movl $, %esi": 5,
                "jmp  <.text+>;movl (%ebx), %eax;imull (%ebx), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "leal (%esi), %edx;movl %edx, (%ebx);movl %ebx, (%eax);movl %ebx, (%esi);movl -(%ebp), %ebx": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp;popl %ebp;retl": 9,
                "cmpb %dl, %al;jne  <.text+>;testb %al, %al;jns  <.text+>;movl $, %eax": 1,
                "jns  <.text+>;movl $, %eax;cmpb $, ;jne  <.text+>;jmp  <.text+>": 1,
                "movb $, ;movl , %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl , %eax;movl %eax, (%esp);calll  <.text+>;movl , %ebx;cmpl $, %ebx": 1,
                "andl $, %esi;leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll *": 1,
                "movzbl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "cmpb $, ;je  <.text+>;movl , %ebx;movl %ebx, (%esp);movl $, (%esp)": 1,
                "je  <.text+>;movl , %ebx;movl %ebx, (%esp);movl $, (%esp);movl %esi, (%esp)": 1,
                "movl -(%ebp), %eax;subl -(%ebp), %eax;movl %eax, -(%ebp);movl %eax, %ebx;addl $, %ebx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 2,
                "movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 10,
                "movl -(%ebp), %esi;imull , %esi;addl (%ebp), %esi;movl -(%ebp), %edi;addl $, %edi": 1,
                "movl $, (%esp);calll - <.text+>;movl %eax, %ebx;testl %eax, %eax;je  <.text+>": 3,
                "movl %eax, %ebx;testl %eax, %eax;je  <.text+>;movl , %eax;imull , %eax": 1,
                "calll - <.text+>;movl $, %eax;cmpb $, ;je  <.text+>;testl %esi, %esi": 1,
                "movl $, %ebx;movl $, (%esp);calll - <.text+>;testb %al, %al;je  <.text+>": 1,
                "movl $, (%esp);calll - <.text+>;testb %al, %al;je  <.text+>;movl , %eax": 3,
                "addl %eax, %ebx;cmpl %ebx, %esi;ja - <.text+>;jmp  <.text+>;movl $, %ebx": 1,
                "movl $, %eax;jmp  <.text+>;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 4,
                "movl %ebp, %esp;popl %ebp;retl;movl $, %eax;cmpb $, ": 1,
                "popl %ebp;retl;movl $, %eax;cmpb $, ;je  <.text+>": 1,
                "movl $, %eax;cmpb $, ;je  <.text+>;pushl %ebp;movl %esp, %ebp": 2,
                "movl $, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 3,
                "movb %al, ;popl %ebp;retl;pushl %ebp;movl %esp, %ebp": 1,
                "movzbl (%ebp), %edx;movl %edx, %ecx;shrb $, %cl;cmpb $, %dl;sete %al": 1,
                "repne  scasb %es:(%edi), %al;movl %ecx, %esi;notl %esi;leal -(%ebp), %edi;movl %edx, %ecx": 1,
                "movl %esi, %ecx;movl $, %eax;repne  scasb %es:(%edi), %al;notl %ecx;leal -(%ebx,%ecx), %eax": 2,
                "movl %esi, (%esp);movl %edi, (%esp);movl %ebx, (%esp);calll *;movl $, %edx": 1,
                "calll *;movl $, %edx;testb %al, %al;je  <.text+>;movl $, (%esp)": 2,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <.text+>": 25,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <.text+>;movl $, %edx;testb %al, %al": 1,
                "leal -(%ebp,%eax), %edx;leal (%edx), %eax;movl (%edx), %edx;movl %edx, (%ebx);movl (%eax), %edx": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl $, (%ebx);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%eax), %eax;movl %eax, (%ecx);movl $, %edx;movl %edx, %eax;addl $, %esp": 1,
                "retl $;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %ebx": 26,
                "mull (%ebx);movl %eax, -(%ebp);movl %edx, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %edx": 2,
                "movzbl (%ebx), %eax;shrb $, %al;movb %al, (%ecx);movb $, (%ecx);movb $, (%ecx)": 1,
                "jbe  <.text+>;movl %ecx, %ebx;movl %edx, (%esp);movl $, (%esp);calll  <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 2,
                "calll  <.text+>;subl $, %esp;movl $, %ebx;jmp  <.text+>;movzbl (%esi,%ebx), %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll  <.text+>;subl $, %esp;movl %eax, %edi": 1,
                "movl %eax, (%esp);leal (%ebx), %eax;shll $, %eax;leal (%esi,%eax), %eax;movl %eax, (%esp)": 1,
                "popl %ebx;popl %esi;popl %edi;popl %ebp;retl $": 73,
                "movl %esp, %ebp;movl $, %eax;popl %ebp;retl;pushl %ebp": 19,
                "leal (%ebx,%eax), %edx;cmpl , %edx;jbe  <.text+>;movl (%ebp), %eax;movl $, (%eax)": 1,
                "cmpl , %edx;jbe  <.text+>;movl (%ebp), %eax;movl $, (%eax);movl $, %eax": 1,
                "movl , %eax;movl %eax, (%ebx);movl $, %eax;popl %ebx;popl %edi": 1,
                "movl $, (%esp);movl $, (%esp);calll  <.text+>;leave;retl": 1,
                "movl $, (%esp);calll  <.text+>;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);calll  <.text+>;jmp  <.text+>;cmpl $, -(%ebp);je  <.text+>": 1,
                "jbe  <.text+>;movl %ecx, %ebx;shrl $, %ebx;movl $, %eax;movl $, %edx": 1,
                "movl %eax, -(%ebp);movl $, (%esp);movl %ecx, (%esp);calll  <.text+>;movl %eax, ": 1,
                "movl %eax, ;testl %eax, %eax;je  <.text+>;movl , %edi;movl -(%ebp), %esi": 1,
                "addl -(%ebp), %ebx;movl , %edi;cmpl %ebx, %edi;ja - <.text+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <.text+>;movl $, (%esp);movl $, (%esp)": 2,
                "popl %ebp;retl $;nop;nop;nop": 7,
                "retl $;nop;nop;nop;pushl %ebp": 4,
                "movl %esp, %ebp;subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl (%ebp), %ebx": 10,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <.text+>;movl %eax, %esi;movl (%ebx), %eax": 2,
                "movl $, %ebx;cmpl (%esi), %ebx;ja  <.text+>;jb  <.text+>;cmpl (%esi), %ecx": 1,
                "movl %eax, %edx;movl %ebx, %edi;movl $, %esi;testb $, %bl;je  <.text+>": 2,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <.text+>;movl $, (%esp);movl %eax, (%esp)": 1,
                "calll  <.text+>;movl $, (%esp);movl %eax, (%esp);movl , %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %ebx, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "je  <.text+>;movl %ebx, -(%ebp);movzwl (%ebx), %eax;testw %ax, %ax;je  <.text+>": 1,
                "jb  <.text+>;movl $, %esi;jmp  <.text+>;movl -(%ebp), %ebx;addl %esi, %ebx": 1,
                "jne  <.text+>;movl $, (%esp);movl %ebx, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl $, (%esp);calll - <.text+>;movl (%ebp), %edx;movzwl (%edx), %eax;movl %eax, (%esp)": 1,
                "calll - <.text+>;addl $, %ebx;movzbl (%esi), %eax;cmpl %ebx, %eax;ja - <.text+>": 1,
                "jmp  <.text+>;movzwl (%ebx), %eax;addl %eax, %esi;cmpl %esi, (%ebp);ja - <.text+>": 1,
                "movl $, (%esp);calll - <.text+>;movl , %eax;addl $, %eax;movl %eax, (%esp)": 2,
                "calll - <.text+>;movl , %eax;movl (%eax), %ecx;movl $, %eax;shll %cl, %eax": 1,
                "movl (%eax), %ecx;movl $, %eax;shll %cl, %eax;movl %eax, %ecx;movl %eax, ": 1,
                "divl ;movl %eax, ;movl %ecx, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl %ecx, %eax;movl $, %edx;divl ;movl %eax, ;movl %ecx, (%esp)": 1,
                "movl , %eax;cmpl , %eax;je  <.text+>;movl $, (%esp);calll  <.text+>": 1,
                "jmp  <.text+>;movl , %eax;movl %esi, (%esp);movl %eax, (%esp);mull %ebx": 1,
                "movl %eax, -(%ebp);movl %eax, %edi;movl $, (%esp);imull , %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %eax": 7,
                "movl %edi, (%esp);movl %ebx, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "movzbl -(%ebp), %eax;movb %al, ;movl %esi, ;movl %edi, ;movl $, (%esp)": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll *;movl $, %edx;testb %al, %al": 1,
                "movl $, (%edx);movl $, (%edx);movl (%ebx), %ecx;movl %ecx, -(%ebp);testl %ecx, %ecx": 1,
                "cmpw $, %ax;jne  <.text+>;cmpl $, (%ebx);ja  <.text+>;cmpl $, (%ebx)": 1,
                "movl %ecx, -(%ebp);cmpl %ecx, -(%ebp);ja  <.text+>;movl -(%ebp), %ecx;cmpl %ecx, -(%ebp)": 1,
                "adcl %edx, (%ecx);movl -(%ebp), %eax;movl $, %edx;subl %eax, %esi;sbbl %edx, %edi": 1,
                "movl , %ecx;movl %ecx, (%esp);movl $, (%esp);movl %esi, (%esp);movl %edi, (%esp)": 1,
                "addl %eax, (%ecx);adcl %edx, (%ecx);movl , %ecx;movl $, %edx;subl %ecx, %esi": 1,
                "je  <.text+>;movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);movl $, (%esp)": 2,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);movl $, (%esp);movl (%esp), %edx": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;shll $, %eax;movl $, %edx;divl ": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;subl $, %eax;movl , %ecx": 3,
                "movl %edx, %eax;movl $, %edx;divl ;movl %edx, %eax;popl %ebp": 1,
                "movl (%ebp), %ecx;movl (%esi,%edx,), %edi;movl %edi, (%ecx,%eax,);movl (%ebx), %eax;addl $, %eax": 1,
                "movl (%esi,%edx,), %edi;movl %edi, (%ecx,%eax,);movl (%ebx), %eax;addl $, %eax;movl %eax, (%ebx)": 1,
                "addl $, %eax;movl %eax, (%ebx);addl $, %edx;cmpl %eax, (%ebp);jbe  <.text+>": 1,
                "movl %eax, (%esp);calll  <.text+>;movl $, %edx;movl %edx, %eax;addl $, %esp": 1,
                "movl %edi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <.text+>;testb %al, %al": 2,
                "jmp  <.text+>;movl $, (%esp);movl %edi, (%esp);movl , %eax;movl %eax, (%esp)": 2,
                "movl %edi, (%esp);movl , %eax;movl %eax, (%esp);calll  <.text+>;movl $, %eax": 6,
                "movl %eax, (%esp);movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 2,
                "subl $, %esp;movl (%ebp), %edi;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl , %edx;leal -(%edx,%eax), %ecx;movl %edx, %eax;negl %eax;andl %ecx, %eax": 1,
                "leal -(%edx,%eax), %ecx;movl %edx, %eax;negl %eax;andl %ecx, %eax;movl %edx, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl %esi, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 2,
                "calll  <.text+>;movl (%ebp), %eax;movl $, (%eax);movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl , %eax;movl %eax, (%esp);calll  <.text+>;movl $, %edx;jmp  <.text+>": 2,
                "movl $, (%esp);calll - <.text+>;movl (%ebp), %edi;movl $, %edx;testl $, %edi": 1,
                "addl $, %edi;testb $, %dl;je  <.text+>;movb $, (%edi);movl %ebx, (%esp)": 1,
                "movl %ebx, (%esp);calll  <.text+>;movl %eax, -(%ebp);testl %eax, %eax;je  <.text+>": 1,
                "calll  <.text+>;movzbl (%ebx), %eax;cmpb $, %al;je  <.text+>;cmpb $, %al": 1,
                "movzbl (%ebx), %eax;cmpb $, %al;je  <.text+>;cmpb $, %al;je  <.text+>": 5,
                "testb %dl, %dl;je  <.text+>;movzwl -(%ebp), %edx;movl %edx, %eax;andw $, %ax": 1,
                "calll  <.text+>;movl $, %eax;jmp  <.text+>;movzbl , %edx;movl (%ebp), %ecx": 1,
                "jne  <.text+>;cmpl $, -(%ebp);jbe  <.text+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movzwl -(%ebp), %eax;andw $, %ax": 1,
                "testb %al, %al;je  <.text+>;movzwl -(%ebp), %eax;andw $, %ax;cmpw $, %ax": 1,
                "movl -(%ebp), %eax;movl $, %ebx;testl %eax, %eax;je  <.text+>;movl $, (%esp)": 1,
                "movl $, %ebx;testl %eax, %eax;je  <.text+>;movl $, (%esp);movl %eax, (%esp)": 1,
                "repne  scasb %es:(%edi), %al;notl %ecx;subl $, %ecx;je  <.text+>;subl $, %ecx": 1,
                "movl %eax, (%esp);calll  <.text+>;leal -(%ebp), %eax;movl %eax, (%esp);calll - <.text+>": 1,
                "movl %eax, (%esp);calll  <.text+>;movl %eax, %ebx;testl %eax, %eax;jne  <.text+>": 3,
                "movl %eax, (%esp);calll  <.text+>;jmp  <.text+>;movl $, (%esp);leal -(%ebp), %eax": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;jmp  <.text+>;movl $, %ebx": 1,
                "movl %edx, (%esp);movl (%ebp), %eax;movl (%eax), %eax;movl %eax, (%esp);calll  <.text+>": 1,
                "jae  <.text+>;movl %edx, (%esi);movb $, %al;movl -(%ebp), %ebx;movl -(%ebp), %esi": 2,
                "rep  cmpsb %es:(%edi), (%esi);seta %dl;setb %cl;cmpb %cl, %dl;jne  <.text+>": 1,
                "movl %eax, (%esp);movl $, (%esp);movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %edx, (%esp)": 1,
                "movl -(%ebp), %ecx;movl %edx, (%esp);movl %ecx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;cmpl $, %eax": 1,
                "movzwl (%ebx), %esi;movzwl (%ebx), %eax;testw %ax, %ax;je  <.text+>;movzwl %ax, %eax": 1,
                "je  <.text+>;movzwl %ax, %eax;movl %eax, -(%ebp);jmp  <.text+>;movl (%ebx), %ecx": 2,
                "movl -(%ebp), %edx;subl %eax, %edx;movl %edx, %eax;movzbl %cl, %ecx;movl $, %edx": 1,
                "movsbl (%ebx), %eax;movl %eax, (%esp);movsbl (%ebx), %eax;movl %eax, (%esp);movsbl (%ebx), %eax": 44,
                "leal (%ebx), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movl (%esi), %edi;leal -(%edi), %eax": 1,
                "movzwl %ax, %eax;movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp)": 1,
                "cmpl $, %eax;jbe  <.text+>;jmp  <.text+>;movzwl (%ebx), %eax;movzbl (%ebx), %ecx": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;cmpl $, %edi;setne %dl;movzbl %dl, %edx;leal (%edx,%edx), %edx": 1,
                "shll $, %eax;leal -(%ecx,%eax), %eax;movl $, %edx;divl %ecx;movl %eax, (%esi)": 1,
                "je  <.text+>;movb $, (%ecx,%eax);movzbl (%ebx), %edi;movl %edi, %edx;cmpb $, %dl": 1,
                "andl %esi, %edi;movl %edi, %edx;movb %dl, (%ecx,%eax);movzbl (%ebx), %edi;movl %edi, %edx": 1,
                "movl %edi, %edx;movb %dl, (%ecx,%eax);movzbl (%ebx), %edi;movl %edi, %edx;cmpb $, %dl": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll  <.text+>;movl %eax, %esi;movl $, %edi;testl %eax, %eax": 1,
                "movl %ebx, (%esp);calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebp), %edx": 1,
                "movl %edx, (%esp);movl -(%ebp), %eax;addl %esi, %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movl (%ebp), %ebx;movl $, (%esp);movl (%ebx), %eax;addl %eax, %eax;movl %eax, (%esp)": 1,
                "movl %ecx, %eax;movl $, %edx;divl (%ebx);movl %edx, -(%ebp);movl %eax, %edi": 1,
                "cmpl -(%ebp), %eax;sete %al;movzbl %al, %eax;addl $, %eax;movl %esi, (%esp)": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl -(%ebp), %eax;movl $, %edx": 1,
                "movl -(%ebp), %eax;movl $, %edx;divl %edi;movzwl (%esi,%edx), %edi;movl $, %ebx": 1,
                "movzwl (%esi,%edx), %edi;movl $, %ebx;jmp  <.text+>;movl (%ebp), %edx;shll $, %edx": 1,
                "calll  <.text+>;movl (%ebp), %eax;movl %edi, (%eax);jmp  <.text+>;movl $, %ebx": 1,
                "jne  <.text+>;cmpl $, (%ebp);jbe  <.text+>;jmp  <.text+>;cmpl $, %eax": 3,
                "jmp  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax;jne  <.text+>": 3,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll - <.text+>;movl $, -(%ebp)": 12,
                "movl $, (%esp);calll - <.text+>;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 2,
                "movl $, -(%ebp);movb $, -(%ebp);leal -(%ebp), %eax;movl %eax, %edi;movl $, %edx": 1,
                "testb $, %al;je  <.text+>;movb $, -(%ebp);leal -(%ebp), %edi;movb $, %dl": 1,
                "je  <.text+>;movb $, (%edi);cmpl $, -(%ebp);je  <.text+>;movl $, -(%ebp)": 1,
                "movzbl (%esi), %edx;movzwl (%esi), %edi;movzwl (%esi), %ebx;movzwl (%esi), %eax;movw %ax, -(%ebp)": 1,
                "movl %edi, %edx;movb %dl, -(%ebp,%eax);cmpw $-, %bx;je  <.text+>;movzbl %cl, %eax": 1,
                "movzbl -(%ebp), %edx;movb %dl, -(%ebp,%eax);cmpw $-, -(%ebp);je  <.text+>;movzbl %cl, %edx": 1,
                "movb %dl, -(%ebp,%eax);cmpw $-, -(%ebp);je  <.text+>;movzbl %cl, %edx;leal (%edx,%edx,), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 1,
                "movzwl -(%ebp), %ebx;shll $, %ebx;movzwl -(%ebp), %eax;addl %eax, %ebx;movl %ebx, (%esp)": 1,
                "movzwl -(%ebp), %eax;addl %eax, %ebx;movl %ebx, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movl %ebx, (%esp);movl (%ebp), %eax": 2,
                "movl %ebx, (%esp);calll - <.text+>;testb %al, %al;je  <.text+>;movl (%ebx), %eax": 1,
                "divl -(%ebp);movl %eax, %edi;testl %eax, %eax;je  <.text+>;movl (%ebx), %eax": 1,
                "calll - <.text+>;cmpb $, %al;sbbl %eax, %eax;andl $, %eax;leave": 1,
                "testb %al, %al;jne  <.text+>;jmp  <.text+>;movl (%esi), %edi;movb $, -(%ebp)": 1,
                "movl %eax, %ebx;testl %eax, %eax;jne  <.text+>;jmp  <.text+>;movl %edi, (%esp)": 1,
                "movl %esi, (%esp);calll - <.text+>;movl (%esi), %edx;imull (%esi), %edx;imull %edx, %eax": 1,
                "imull %edx, %eax;movl (%ebp), %edx;movl %eax, (%edx);movl %eax, (%esp);movl $, (%esp)": 1,
                "calll  <.text+>;movl $, %eax;jmp  <.text+>;leal (%eax), %eax;movl %eax, (%esp)": 1,
                "movl %esi, (%ebx);movl %edi, (%ebx);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%ebx)": 1,
                "movl $, (%ebx);movl %eax, (%ebx);movl %ebx, (%eax);movl %ebx, ;leal (%ebx), %eax": 1,
                "calll  <.text+>;movl %eax, -(%ebp);testl %eax, %eax;je  <.text+>;movl $, %ebx": 1,
                "shrl $, %eax;movl %eax, -(%ebp);leal -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax;jne  <.text+>": 6,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax;jne  <.text+>;movl -(%ebp), %esi": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %ebx, (%esp);calll - <.text+>;movl %eax, %edx": 1,
                "movl %eax, (%esp);calll  <.text+>;movl %eax, %ebx;testl %eax, %eax;je  <.text+>": 3,
                "je  <.text+>;movl $, (%esp);movl %ebx, (%esp);movl , %eax;movl %eax, (%esp)": 7,
                "movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax": 6,
                "jmp  <.text+>;leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll  <.text+>": 1,
                "movl %eax, (%esp);calll  <.text+>;movl $, %eax;jmp  <.text+>;movl -(%ebp), %edx": 2,
                "movl %ebx, (,%esi,);movl $, %eax;jmp  <.text+>;movl $, %eax;addl $, %esp": 2,
                "subl $, %esp;movl (%ebp), %ebx;movl %ebx, %edi;movl $, %eax;movl $, %ecx": 3,
                "jmp  <.text+>;movzbl (%edx), %ecx;cmpb $, %cl;je  <.text+>;cmpb $, %cl": 1,
                "cmpl $, %ebx;ja  <.text+>;leal (%ebx,%ebx,), %eax;movl (,%eax,), %edx;movl $, %eax": 1,
                "testl %edx, %edx;je  <.text+>;movl %ebx, (%esp);calll *(%edx);testl %eax, %eax": 1,
                "calll *(%ecx);leave;retl;pushl %ebp;movl %esp, %ebp": 3,
                "movl $, %edx;testl %eax, %eax;jne  <.text+>;cmpl $, -(%ebp);sbbl %edx, %edx": 1,
                "calll - <.text+>;movl (%ebp), %eax;movl $, (%eax);movl $, (%esp);movl %ebx, (%esp)": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl %eax, -(%ebp);movl $, %eax;cmpl $, -(%ebp);je  <.text+>": 1,
                "movl %eax, -(%ebp);movl $, %eax;cmpl $, -(%ebp);je  <.text+>;movl -(%ebp), %edx": 1,
                "movl %ebx, %esi;cmpb $, (%eax);jne  <.text+>;cmpb $, (%eax);sete %bl": 1,
                "movl $, %edi;movl , %ebx;movl (%ebp), %ecx;movl %ecx, -(%ebp);cmpl $, %ecx": 1,
                "cmpl $, (%ebx);jne  <.text+>;movl $, -(%ebp);cmpl $, ;jne  <.text+>": 1,
                "movl $, -(%ebp);cmpl $, ;jne  <.text+>;jmp  <.text+>;cmpl $, (%eax)": 1,
                "movl (%ebx), %eax;leal -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "jmp  <.text+>;movl (%ebx), %eax;movl %eax, -(%ebp);addl $, (%ebx);cmpl $, %ebx": 1,
                "movl $, %ebx;movl -(%ebp), %eax;cmpb $, (%eax);jne  <.text+>;addl $, %eax": 1,
                "testl %eax, %eax;sete %al;leave;retl;pushl %ebp": 1,
                "cmpl $, (,%edx,);je  <.text+>;movl %edx, %eax;movl (%ebp), %edx;movl %edx, (,%eax,)": 1,
                "movl (%ebp), %edx;movl %edx, (,%eax,);popl %ebp;retl;pushl %ebp": 1,
                "movl $, %edx;movl $, %ecx;movl $, %eax;movl %edx, %edi;rep  stosl %eax, %es:(%edi)": 3,
                "movl %ebx, %edx;andl $, %edx;movl %edx, -(%ebp);je  <.text+>;movl %ebx, %eax": 1,
                "movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <.text+>": 5,
                "movl %edx, -(%ebp);cmpl %eax, %edx;jbe  <.text+>;movl %eax, -(%ebp);movl -(%ebp), %edx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;movl (%ebp), %edx": 1,
                "addl %eax, (%edx);subl %eax, (%ebp);addl %eax, %ebx;addl %eax, (%ebp);cmpl $, (%ebp)": 1,
                "addl %eax, %ebx;addl %eax, (%ebp);cmpl $, (%ebp);je  <.text+>;movl %ebx, %eax": 1,
                "addl %edx, (%eax);movl %edx, %eax;addl %ebx, %eax;movl (%ebp), %ebx;subl %edx, %ebx": 1,
                "movl (%ebp), %eax;addl -(%ebp), %eax;movl %ebx, (%esp);leal -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl $, %edx;testl $, %esi;je  <.text+>;movb $, (%esi);leal (%esi), %edi": 2,
                "subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp);calll - <.text+>;movl $, (%esp)": 3,
                "movl %eax, %ebx;testl %eax, %eax;jne  <.text+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "calll - <.text+>;movl %eax, -(%ebp);movb $, %bl;testl %eax, %eax;jne  <.text+>": 1,
                "calll - <.text+>;movl %eax, -(%ebp);testl %eax, %eax;je  <.text+>;movl $, -(%ebp)": 2,
                "testl %eax, %eax;je  <.text+>;movl $, -(%ebp);leal -(%ebp), %esi;movl -(%ebp), %eax": 1,
                "movl $, -(%ebp);leal -(%ebp), %esi;movl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %edx": 1,
                "je  <.text+>;testb %al, %al;je  <.text+>;addl $, %edx;movzbl (%edx), %eax": 1,
                "movl -(%ebp), %edi;addl $, %edi;shrl $, %edi;movl %edi, (%esp);movl $, (%esp)": 1,
                "shrl $, %edi;movl %edi, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movl $, (%esp);movl -(%ebp), %eax": 6,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;cmpl -(%ebp), %edi;je  <.text+>": 1,
                "movl , %eax;movl %eax, (%esp);calll  <.text+>;movl $, %ebx;jmp  <.text+>": 2,
                "jne  <.text+>;movl -(%ebp), %eax;addl $, %eax;andl $, %eax;movl %eax, -(%ebp)": 1,
                "jne  <.text+>;movzbl (%ebx), %eax;testb %al, %al;jne  <.text+>;movl $, (%esp)": 1,
                "movl %eax, (%esp);calll  <.text+>;movl $, %ebx;movl %ebx, %eax;addl $, %esp": 1,
                "movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %ecx;movl %ebx, %edx;movl (%ebp), %eax": 1,
                "movl $, -(%ebp);leal -(%ebp), %ecx;movl %ebx, %edx;movl (%ebp), %eax;calll - <.text+>": 1,
                "testl %edx, %edx;jne  <.text+>;movl $, (%esp);movl $, (%esp);movl , %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <.text+>;testl %eax, %eax": 1,
                "jne  <.text+>;cmpl $, -(%ebp);jbe  <.text+>;movl $, %edx;cmpb $, -(%ebp)": 1,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;cmpl $, %eax;sbbl %edx, %edx;andl $, %edx": 1,
                "leal (%esi,%edi,), %edi;jmp  <.text+>;cmpw %bx, (%edx);jne  <.text+>;movzwl (%ecx), %esi": 1,
                "jne  <.text+>;movzwl (%ecx), %esi;movw %si, (%edx);addl $, %ecx;movzwl (%eax), %esi": 1,
                "movl %edx, %eax;andl $, %eax;movl %eax, -(%ebp);je  <.text+>;movl %esi, %ebx": 1,
                "subl $, %edx;movl %ebx, %eax;movl $, %ecx;testl %edx, %edx;jg  <.text+>": 1,
                "movl $, %ecx;testl %edx, %edx;jg  <.text+>;jmp  <.text+>;movl -(%ebp), %edx": 1,
                "testl %edx, %edx;jg  <.text+>;jmp  <.text+>;movl -(%ebp), %edx;movl $, (%edx)": 1,
                "jmp  <.text+>;movl %ebx, -(%ebp);movl %edx, %ebx;movl -(%ebp), %edx;movzbl (%eax), %esi": 1,
                "calll - <.text+>;movl -(%ebp), %ecx;movl (%ecx), %eax;movl (%ecx), %edx;movl %eax, (%esp)": 2,
                "subl $, %esp;movl %eax, -(%ebp);movl %edx, %esi;movl %ecx, %edi;movl (%ebp), %eax": 1,
                "movl %eax, (%esp);movl $, (%esp);movl %esi, (%esp);movl %edi, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 2,
                "movl %eax, -(%ebp);movl $, -(%ebp);movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %edx, (%esp)": 1,
                "movzwl -(%ebp), %ebx;jmp  <.text+>;movzwl -(%ebp), %ecx;subl %eax, %ecx;movzwl %cx, %ebx": 1,
                "movl -(%ebp), %ebx;movzwl (%ebx), %eax;negl %eax;movl -(%ebp), %ebx;andl %eax, %ebx": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %ebx;movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll - <.text+>;movl $, %edx;testl %eax, %eax": 2,
                "testl %eax, %eax;jne  <.text+>;movl -(%ebp), %edx;xorl -(%ebp), %edx;movl -(%ebp), %eax": 1,
                "orl %eax, %edx;sete %dl;movl %edx, %eax;addl $, %esp;popl %ebx": 1,
                "cmpb $, (%edx);jne  <.text+>;movl (%edx), %ebx;movl $, %ecx;cmpl -(%ebp), %ecx": 1,
                "subl -(%ebp), %ebx;movl %ebx, (%ebp);movl (%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx": 1,
                "addl %ecx, %edx;addl %eax, %esi;adcl %edx, %edi;jmp - <.text+>;movl %ebx, -(%ebp)": 1,
                "sbbl -(%ebp), %ebx;movl %ecx, -(%ebp);movl %ebx, -(%ebp);addl %ecx, %eax;adcl %ebx, %edx": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %ecx;subl -(%ebp), %edx;sbbl -(%ebp), %ecx;movl %edx, -(%ebp)": 1,
                "leal -(%ebp), %edx;movl -(%ebp), %eax;calll - <.text+>;movl %eax, -(%ebp);movl -(%ebp), %eax": 2,
                "movl %edx, -(%ebp);movl %ecx, -(%ebp);movl %ebx, (%ebp);movl -(%ebp), %eax;cmpb $, (%eax)": 1,
                "jae  <.text+>;imull %ecx, %ebx;jmp  <.text+>;movl %esi, %ebx;movl -(%ebp), %eax": 1,
                "imull %ecx, %ebx;jmp  <.text+>;movl %esi, %ebx;movl -(%ebp), %eax;andl -(%ebp), %eax": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl %ebx, (%esp);movl $, (%esp);movl -(%ebp), %edx": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);testl %esi, %esi;jne - <.text+>;movl -(%ebp), %eax": 1,
                "testl %esi, %esi;jne - <.text+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl -(%ebp), %esi": 1,
                "movl -(%ebp), %edx;movl %eax, (%edx);movl -(%ebp), %eax;movl $, %edx;addl -(%ebp), %eax": 1,
                "movl %eax, (%ecx);movl %edx, (%ecx);movl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, (%ecx)": 3,
                "movl %esi, (%esp);imull %eax, %ecx;mull %edx;addl %ecx, %edx;movl %eax, (%esp)": 1,
                "movl %edx, (%esp);movl (%ebx), %edx;movl %ebx, %eax;calll - <.text+>;cmpl (%ebx), %eax": 1,
                "movl %edi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;cmpb $, (%esi);je  <.text+>;movzwl (%ebx), %eax": 1,
                "calll - <.text+>;movl %eax, -(%ebp);addl $, %eax;calll - <.text+>;movl %eax, -(%ebp)": 1,
                "addl %eax, %ecx;movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);movl -(%ebp), %edx": 1,
                "movl (%ebp), %esi;movzwl (%edx), %edx;addl %ebx, %edx;movl %ebx, %ecx;addl (%eax), %ecx": 1,
                "je  <.text+>;movl $, %ebx;addl $, %ebx;cmpw $, (%esi,%ebx,);jne - <.text+>": 1,
                "movl %eax, (%esp);calll - <.text+>;movl %eax, %esi;movl %ebx, %edi;movl $, %edx": 1,
                "movl %edx, (%ebx);movl (%esi), %eax;movl (%esi), %edx;movl %eax, (%ebx);movl %edx, (%ebx)": 1,
                "subl $, %esp;movl (%ebp), %ecx;movzbl (%ecx), %esi;movl %esi, %eax;testb %al, %al": 1,
                "cmpb $, (%ebx);je  <.text+>;movl $, %edi;movl $, %eax;cmpb $, -(%ebp)": 1,
                "jne  <.text+>;movzbl -(%ebp), %eax;leal -(%eax), %edi;andl $, %edi;movl $, %eax": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl %eax, -(%ebp);movsbl (%esi,%edi), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;cmpl %eax, -(%ebp);jne  <.text+>;addl $, %edi": 1,
                "cmpb %al, -(%ebp);ja - <.text+>;movl $, %eax;jmp  <.text+>;movl $, %eax": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll - <.text+>;movzbl (%ebx), %eax;cmpb $, %al": 1,
                "je  <.text+>;movl %eax, (%esp);movl %esi, %edx;movl %edi, %ecx;movl -(%ebp), %eax": 1,
                "movl %edi, %ecx;movl -(%ebp), %eax;calll - <.text+>;testb %al, %al;je  <.text+>": 1,
                "movl -(%ebp), %eax;calll - <.text+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <.text+>": 2,
                "jbe  <.text+>;testb $, (%esi);je - <.text+>;movl -(%ebp), %eax;testb $, (%eax)": 1,
                "calll - <.text+>;movl -(%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl $, (%esp)": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl -(%ebp), %edx;testb %cl, (%edx,%eax);je  <.text+>;jmp  <.text+>;movl %edi, %eax": 1,
                "movl -(%ebp), %edx;movzwl (%edx), %eax;leal (%edx,%eax), %esi;cmpl -(%ebp), %esi;jae  <.text+>": 1,
                "movl %eax, (%esp);movl , %eax;movl %eax, (%esp);calll  <.text+>;movl -(%ebp), %eax": 1,
                "calll - <.text+>;movl %eax, %edx;movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax": 1,
                "movl %eax, %edx;movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax;testl %edx, %edx": 2,
                "movl %edx, (%eax);movl $, %eax;testl %edx, %edx;jne  <.text+>;movl $, (%esp)": 1,
                "addb $, -(%ebp);movzbl -(%ebp), %eax;cmpl %eax, -(%ebp);ja - <.text+>;movl %esi, -(%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;cmpl $, -(%ebp);je  <.text+>": 2,
                "movzbl (%ebx), %edx;movzwl (%ebx), %eax;imull %edx, %eax;movl %eax, (%ebx);movzbl (%ebx), %ecx": 1,
                "imull %eax, %ecx;movl %ecx, (%ebx);jmp  <.text+>;movsbl %cl, %ecx;negl %ecx": 2,
                "testb %dl, %dl;jne  <.text+>;movl %esi, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;jmp  <.text+>;subl $, %ebx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %edi;cmpl (%ebp), %edx;jne  <.text+>": 1,
                "addl $, %edi;movb $, %dl;testl $, %edi;je  <.text+>;movw $, (%edi)": 6,
                "popl %edi;popl %ebp;rep  retl;pushl %ebp;movl %esp, %ebp": 1,
                "jb  <.text+>;movl $, -(%ebp);movl $, -(%ebp);movl $, %eax;movl %eax, %edx": 1,
                "shrl $, %edx;movw %dx, -(%ebp);movw %ax, -(%ebp);movl (%ebp), %eax;movl (%eax), %edx": 1,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl , %eax;movl %eax, ;movzwl -(%ebp), %edx": 1,
                "jmp  <.text+>;movl $, %eax;addl $, %esp;popl %ebx;popl %ebp": 3,
                "movl $, %eax;addl $, %esp;popl %ebx;popl %ebp;rep  retl": 1,
                "jmp  <.text+>;movl %ebx, (%esp);subl , %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);addl , %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;jmp  <.text+>": 1,
                "movl %eax, %edi;movl $, %edx;testb $, %al;je  <.text+>;movw $, -(%ebp)": 1,
                "je  <.text+>;movw $, -(%ebp);leal -(%ebp), %edi;movb $-, %dl;movl %edx, %ecx": 1,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl %edi, (%esp);movl $, (%esp);calll - <.text+>": 1,
                "testb %dl, %dl;je  <.text+>;movl -(%ebp), %eax;movl %eax, ;cmpl $, %eax": 1,
                "movl (%ebp), %eax;movl (%eax), %eax;movl %eax, ;movl $, %eax;movl -(%ebp), %ebx": 1,
                "je  <.text+>;movl $, ;movl , %edx;movb $, %al;testl %edx, %edx": 1,
                "movl %eax, (%esp);calll  <.text+>;movl $, ;movl $, %eax;leave": 1,
                "movzwl -(%ebp), %eax;leal (%edx,%eax), %eax;movl %eax, (%esp);movl $, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;movl $, (%esp);calll  <.text+>": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <.text+>;testl %eax, %eax;jne  <.text+>": 14,
                "jmp  <.text+>;movl -(%ebp), %ebx;movl $, (%esp);movl %ebx, (%esp);movl , %eax": 1,
                "calll - <.text+>;movl $, %ebx;jmp  <.text+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpl %ebx, %eax;je  <.text+>;movl $, (%esp);calll  <.text+>;movl -(%ebp), %eax": 1,
                "movl %ebx, (%edi);movl %edi, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %eax;jmp  <.text+>;movl (%ebx), %ebx;cmpl $, %ebx;jne - <.text+>": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ecx), %eax;addl $, %ecx": 1,
                "movl (%ebp), %ebx;movl %ebx, (%esp);movl %esi, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl (%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax;movb $, -(%eax,%esi)": 1,
                "leal (%ebx), %edx;movb $, %cl;testb $, %dl;je  <.text+>;movw $, (%edx)": 1,
                "testb $, %cl;je  <.text+>;movb $, (%edx);movl (%ebp), %edi;movl $, %eax": 1,
                "movl %eax, (%ebx);movl $, (%ebx);movl %ebx, (%eax);movl %ebx, ;movl (%ebp), %eax": 1,
                "movl $, (%ebx);movl %ebx, (%eax);movl %ebx, ;movl (%ebp), %eax;movl %ebx, (%eax)": 1,
                "movl (%ebp), %eax;movl %ebx, (%eax);movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 2,
                "subl $, %esp;movl (%ebp), %esi;leal (%esi), %edi;movl (%esi), %ebx;cmpl %ebx, %edi": 1,
                "movl (%ebx), %eax;movl %eax, (%esi);movl %edi, (%eax);movl $, (%esp);movl (%ebx), %eax": 1,
                "jne - <.text+>;movl $, (%esp);movl (%esi), %eax;movl %eax, (%esp);movl , %eax": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;movl (%ebp), %eax;cmpl %ecx, %eax;jae  <.text+>": 1,
                "movl (%ebp), %eax;cmpl %ecx, %eax;jae  <.text+>;movl (%ebp), %edx;addl %eax, %edx": 1,
                "movl $, %eax;jmp  <.text+>;movl $, %eax;addl $, %eax;popl %ebp": 1,
                "jmp  <.text+>;movl $, %edx;addl $, %edx;cmpl %ebx, %edx;jne - <.text+>": 2,
                "movl $, %edx;addl $, %edx;cmpl %ebx, %edx;jne - <.text+>;leal (%edx), %eax": 1,
                "je  <.text+>;cmpb $, %dl;je  <.text+>;movl %ecx, %eax;cmpl %ebx, %eax": 1,
                "movl (%ebp), %ebx;movl (%ebp), %edi;movl (%ebp), %esi;testl %esi, %esi;je  <.text+>": 1,
                "jne  <.text+>;jmp  <.text+>;movzbl (%edi,%ecx), %eax;cmpb $, %al;je  <.text+>": 2,
                "testl %ecx, %ecx;je  <.text+>;cmpb $, (%edx);je  <.text+>;leal (%edx), %eax": 1,
                "cmpl %edx, %eax;jne - <.text+>;movl $, %eax;jmp  <.text+>;movl $, %eax": 1,
                "jne - <.text+>;movl $, %eax;jmp  <.text+>;movzbl (%esi,%eax), %edx;testb %dl, %dl": 1,
                "movl %esp, %ebp;pushl %esi;pushl %ebx;movl (%ebp), %ecx;movl (%ebp), %ebx": 1,
                "testl %ebx, %ebx;je  <.text+>;movzbl (%ecx), %eax;cmpb $, %al;je  <.text+>": 1,
                "testb %dl, %dl;je  <.text+>;cmpb $, %dl;je  <.text+>;movl $, %eax": 1,
                "movl %eax, %edx;movb %cl, -(%esi,%edx);cmpl %edi, %edx;jne - <.text+>;jmp  <.text+>": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl %eax, (%esp)": 4,
                "calll - <.text+>;cmpb $, ;jne  <.text+>;movl $, ;movl $, ": 1,
                "cmpl $, (%ebp);je  <.text+>;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl -(%ebp), %edx;subl $, %edx;movl %edx, -(%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <.text+>;movl %eax, %ebx;cmpl -(%ebp), %eax": 1,
                "movl %esi, %edi;movl $, %ecx;movl $, %eax;repne  scasb %es:(%edi), %al;notl %ecx": 2,
                "movl $, %ecx;movl $, %eax;repne  scasb %es:(%edi), %al;notl %ecx;leal -(%ecx), %ebx": 1,
                "je  <.text+>;movb $, (%edx);movl %ebx, (%esp);movl %esi, (%esp);calll - <.text+>": 1,
                "jmp  <.text+>;movl %ebx, (%esp);movl %esi, (%esp);movl %eax, (%esp);calll - <.text+>": 1,
                "addl $, ;movl , %eax;movl $, (%edx);movl %eax, (%edx);movl %edx, (%eax)": 1,
                "movl %eax, %edx;movl (%eax), %eax;leal (%edx), %edx;movl %edx, (%edi);movl %eax, (%edi)": 1,
                "calll  <.text+>;movl , %eax;movl %eax, (%esp);movl , %eax;movl %eax, (%esp)": 1,
                "movl %edi, -(%ebp);leal (%ebx,%ebx,), %ecx;movl (%esi,%ecx,), %edi;addl (%esi,%ecx,), %edi;cmpl %edi, -(%ebp)": 1,
                "movl %esi, %eax;movl (%ebp), %ecx;addl %edi, %ecx;movl %ecx, %esi;subl %eax, %esi": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %ecx;movl %edi, (%ecx);movl -(%ebp), %eax;movl (%eax), %edx": 1,
                "movl $, -(%ebp);jmp  <.text+>;movl %eax, -(%ebp);movl -(%ebp), %eax;leal -(%ebp), %esp": 1,
                "subl $, %esp;movl $, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl %eax, %ebx": 1,
                "movl $, (%esp);calll - <.text+>;movzwl (%ebx), %eax;movl %eax, ;movzwl (%ebx), %eax": 1,
                "jne  <.text+>;cmpl $, (%eax);jne  <.text+>;cmpl $, (%eax);ja  <.text+>": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movzwl (%ebx), %eax;orl $, %eax": 1,
                "movl (%eax), %ecx;cmpl %ecx, %edi;ja  <.text+>;cmpl $, %ecx;ja  <.text+>": 1,
                "movl %ecx, %edi;movl %eax, (%esp);calll - <.text+>;testl %eax, %eax;jne - <.text+>": 1,
                "ja  <.text+>;leal -(%esi,%edi), %edx;cmpl , %edx;jbe  <.text+>;movl , %edx": 1,
                "movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);calll - <.text+>;movl $, %ebx": 1,
                "movl %ebx, (%esp);calll - <.text+>;movl %eax, %ebx;testl %eax, %eax;jne - <.text+>": 2,
                "movl %edi, (%ecx,%eax,);cmpl %ebx, %eax;setne %dl;movzbl %dl, %edx;subl $, %edx": 1,
                "cmpl %ebx, %eax;setne %dl;movzbl %dl, %edx;subl $, %edx;andl (%ebp), %edx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;movl (%ebp), %ecx;movl (%ebp), %eax": 1,
                "movl $, %edx;cmpl $, (%ebx,%eax,);jne  <.text+>;addl $, %edx;cmpl %esi, %edx": 1,
                "jb  <.text+>;addl , %eax;jmp  <.text+>;movl $, %edx;subl $, %eax": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ecx;movl (%ebp), %ebx": 1,
                "movl (%ebp), %eax;subl $, %eax;je  <.text+>;cmpl $, (%edx,%eax,);jne  <.text+>": 1,
                "cmpl $, (%edx,%eax,);jne  <.text+>;jmp  <.text+>;cmpl $, (%edx,%eax,);jne  <.text+>": 1,
                "jmp  <.text+>;cmpl $, (%edx,%eax,);jne  <.text+>;movl , %edx;leal (%eax,%edx), %eax": 1,
                "calll - <.text+>;testb %al, %al;jne  <.text+>;movl $, (%esp);calll  <.text+>": 1,
                "movl %eax, (%esp);movl (%ebx), %eax;shll $, %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "calll - <.text+>;movl %eax, ;movl , %edx;movl %edx, ;testl %eax, %eax": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll - <.text+>;movl %eax, ;movl %ebx, (%esp)": 1,
                "calll - <.text+>;movl %eax, ;movl %ebx, (%esp);calll  <.text+>;movl , %eax": 1,
                "cmpl $, (%ebx,%eax,);jne  <.text+>;jmp  <.text+>;cmpl $, (%ebx,%eax,);jne  <.text+>": 1,
                "subl $, %esp;movl (%ebp), %edi;testl %edi, %edi;jne  <.text+>;movl $, (%esp)": 1,
                "movl %eax, (%esp);movl , %eax;movl %eax, (%esp);calll - <.text+>;movl %eax, %esi": 4,
                "calll  <.text+>;movl $, -(%ebp);jmp  <.text+>;movl (%ebp), %eax;movl %eax, (%esp)": 2,
                "movl %eax, (%esp);movl %ebx, (%esp);movl %esi, (%esp);movl , %eax;movl %eax, (%esp)": 3,
                "movl %eax, -(%ebp);movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "jmp  <.text+>;movl (%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl %eax, %ebx": 1,
                "movl $, (%esp);calll - <.text+>;movl $, -(%ebp);jmp  <.text+>;movl (%ebp), %eax": 1,
                "movl %eax, (%esp);calll - <.text+>;subl %ebx, ;movl %esi, %edi;shll $, %edi": 2,
                "calll - <.text+>;addl -(%ebp), %edi;shrl $, %edi;cmpl , %edi;jbe  <.text+>": 1,
                "movl %eax, %esi;testl %eax, %eax;jne  <.text+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "jne  <.text+>;movl $, (%esp);calll - <.text+>;cmpl $, (%esi,%ebx,);ja  <.text+>": 1,
                "movl (%esi,%ebx,), %eax;jmpl *(,%eax,);movl $, (%esp);calll - <.text+>;jmp  <.text+>": 1,
                "pushl %ebp;movl %esp, %ebp;movl , %eax;movl (%ebp), %edx;movl , %ecx": 1,
                "calll - <.text+>;subl $, %esp;movl -(%ebp), %edx;movl (%edx), %eax;cmpl $, %eax": 1,
                "pushl %ebx;subl $, %esp;movl %eax, %esi;movl %edx, %ebx;cmpl $, (%edx)": 1,
                "movl (%edx,%eax,), %eax;leal (%edx,%eax,), %eax;cmpl %eax, %ebx;jbe  <.text+>;movl (%eax), %eax": 1,
                "subl %edx, %ecx;sarl $, %ecx;movl %ecx, (%eax);movl (%ebx), %eax;movl %ecx, (%edx,%eax,)": 1,
                "movl (%ebx), %eax;movl %ecx, (%edx,%eax,);leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl $, (%esp);calll - <.text+>;movl (%ebp), %esi;addl $, %esi;andl $, %esi": 1,
                "calll - <.text+>;movl %eax, -(%ebp);testl %eax, %eax;jne  <.text+>;movl %ebx, (%esp)": 2,
                "jmp  <.text+>;movl %edi, %ecx;leal -(%esi), %edi;cmpl $, %edi;sbbl %eax, %eax": 1,
                "cmpl $, %edi;sbbl %eax, %eax;notl %eax;orl %eax, %edi;movw %di, (%ebx)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;cmpl $, %esi;ja - <.text+>": 1,
                "ja - <.text+>;jmp  <.text+>;movl -(%ebp), %ebx;movl $, %edi;movl %ebx, %eax": 1,
                "movw $, (%ebx);movw %di, (%ebx);movl $, (%ebx);movl $, (%ebx);subl $, %eax": 1,
                "movl $, (%ebx);movl $, (%ebx);subl $, %eax;movzwl %di, %edi;subl %edi, %eax": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl $, (%esp);movl (%ebx), %eax;shrl $, %eax": 1,
                "calll - <.text+>;subl $, %esp;movl (%ebx), %edx;xorl $, %edx;movl (%ebx), %eax": 2,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;subl $, %esp;movl (%ebx), %eax": 5,
                "subl $, %esp;movl (%ebx), %eax;movl (%ebx,%eax), %edx;xorl $, %edx;movl (%ebx,%eax), %eax": 2,
                "subl $, %esp;movzwl (%ebx), %eax;leal (%ebx,%eax,), %ebx;movzwl (%ebx), %eax;testw %ax, %ax": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movl (%ebp), %ebx;addl $, %ebx": 1,
                "je  <.text+>;movl $, %edi;cmpl $, (%ebx);je  <.text+>;movzwl %ax, %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movl (%ebx), %eax;movl (%ebx), %edx": 1,
                "movl %ebx, (%esp);movl %esi, (%esp);movl %edi, (%esp);movl %eax, (%esp);movl %edx, (%esp)": 1,
                "movl $, (%esp);calll - <.text+>;movl , %eax;movl %eax, (%esp);calll - <.text+>": 2,
                "movzwl (%ebx), %esi;movl %esi, %eax;subw -(%ebp), %ax;cmpw $, %ax;jbe  <.text+>": 1,
                "movzwl -(%ebp), %edx;movw %dx, (%ebx);movzwl -(%ebp), %edx;leal (%ebx,%edx,), %edx;movl %edx, -(%ebp)": 1,
                "movzwl %si, %eax;leal (%ebx,%eax,), %eax;movw %si, (%eax);addl $, (%edi);movzwl (%ebx), %edx": 1,
                "movl %eax, (%edi);movl (%edi), %ecx;movl %eax, %edx;cmpl %ecx, %eax;jae  <.text+>": 1,
                "subl -(%ebp), %eax;sbbl -(%ebp), %edx;addl %eax, (%edi);adcl %edx, (%edi);leal (%ebx), %esi": 1,
                "leal (%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%ebx);movl $, (%ebx);movl $, (%ebx);movl $, (%ebx)": 1,
                "movl $, (%esp);calll - <.text+>;subl $, %esp;movl %esi, (%esp);calll - <.text+>": 1,
                "subl $, %esp;movl %esi, (%esp);calll - <.text+>;leal (%esi), %eax;cmpl %eax, %ebx": 1,
                "movl %esi, %eax;calll - <.text+>;movzwl -(%ebx), %eax;leal (%edi,%eax,), %eax;movl %eax, -(%ebp)": 1,
                "je  <.text+>;movzwl -(%ebp), %eax;notl %eax;leal (%edi,%eax,), %eax;cmpl $, (%eax)": 1,
                "movzwl -(%ebx), %ebx;movzwl %dx, %ecx;movzwl %bx, %edx;leal (%ecx,%edx), %ecx;cmpl $, %ecx": 1,
                "movl %edi, %edx;movl %esi, %eax;calll - <.text+>;movzwl (%edi), %eax;movl -(%ebp), %edx": 1,
                "addl %eax, (%esi);adcl %edx, (%esi);leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "je  <.text+>;testb $, (%ebp);je  <.text+>;movl %esi, (%esp);movl $, (%esp)": 1,
                "calll - <.text+>;movl $, %eax;leave;retl $;nop": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl %edx, %ebx;cmpw $, (%edx)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;subl $, %esp;addl $, (%ebx)": 1,
                "movl (%ebp), %ebx;testl %ecx, %ecx;je  <.text+>;movl (%edx), %edx;movl %edx, (%ecx)": 1,
                "testl %ecx, %ecx;je  <.text+>;movl (%edx), %edx;movl %edx, (%ecx);testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;je  <.text+>;movl (%esi), %edx;movl %edx, %edi;andl $, %edi": 1,
                "cmpl $, (%ebp);je  <.text+>;movl (%ebx), %ecx;testl %ecx, %ecx;je  <.text+>": 1,
                "movl (%esi), %ecx;movl (%ebx), %edx;cmpl %ecx, %edx;jbe  <.text+>;movl %ecx, %edx": 1,
                "movl %eax, %ebx;cmpw $, (%eax);je  <.text+>;movl $, (%esp);movl $, (%esp)": 1,
                "subl $, %esp;leal (%ebx), %eax;movl %eax, (%esp);movzwl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;testb %al, %al": 2,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;testl %eax, %eax;jns  <.text+>": 2,
                "movl %eax, (%esp);calll - <.text+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "movl (%ebx), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "cmpw $, %ax;jne  <.text+>;movl (%ebp), %ecx;movl -(%ebp), %edx;movl (%edx,%ecx,), %eax": 1,
                "movl (%edx,%ecx,), %eax;movl %eax, (%esp);movl %edi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp": 1,
                "movl , %edi;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp)": 2,
                "movw $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl $, -(%ebp)": 2,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;testb %al, %al": 1,
                "movl %esi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;testb %al, %al;jne  <.text+>": 2,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll - <.text+>;leal -(%ebp), %esi": 1,
                "calll - <.text+>;movl $, %eax;jmp  <.text+>;leal -(%ebp), %edx;movl %esi, %eax": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl , %eax": 1,
                "subl $, %esp;movl (%ebp), %ebx;movl , %eax;movl %eax, -(%ebp);movl (%ebp), %edx": 1,
                "movl (%ebp), %edx;cmpw $, (%edx);je  <.text+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %eax;jmp  <.text+>;addl $, %esi;movl (%ebp), %eax;cmpl %esi, (%eax)": 1,
                "je  <.text+>;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 9,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;jmp  <.text+>;movl $, -(%ebp)": 4,
                "movl (%ebp), %edx;movl $, (%edx);addl $, %ebx;movl %ebx, (%esp);movl (%ebp), %eax": 1,
                "movl $, (%edx);jmp  <.text+>;movl $, (%esp);movl $, (%esp);movl %esi, (%esp)": 2,
                "calll  <ScsiPortWriteRegisterUshort+>;addl $-, %eax;movl (%ebp), %edx;movb %al, (%edx);movl $, (%esp)": 2,
                "movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl %eax, %ebx;movl $, %edx;testl %eax, %eax": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edx;movl %eax, (%edx);movl $, (%esp);movl %ebx, (%esp)": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl $, %edx;jmp  <.text+>;movl $, %edx;jmp  <.text+>": 1,
                "movl (%ebp), %esi;movl (%ebp), %edi;movl $, (%esp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "jne  <.text+>;movl $, (%edi);movl $, (%esi);movl (%ebp), %eax;movl $, (%eax)": 1,
                "movl (%ebp), %eax;movl $, (%eax);movl (%ebp), %eax;movl $, (%eax);movl $, %eax": 4,
                "movl %eax, %edx;movl $, %eax;cmpl $, %edx;jne  <.text+>;movl (%ebp), %eax": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %esi;movl (%ebp), %edi": 8,
                "movl %ecx, %edi;notl %edi;movl $, (%esp);movl %edi, (%esp);movl , %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl %edi, (%esi)": 1,
                "movl $, (%eax);movw $, (%eax);movw $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "movl %eax, (%edx);leave;retl $;pushl %ebp;movl %esp, %ebp": 1,
                "movl %eax, %edx;movl (%edx), %eax;testl %eax, %eax;jne - <.text+>;movl %ecx, (%edx)": 1,
                "je  <.text+>;movl %esi, (%eax);testl %esi, %esi;je  <.text+>;movl %eax, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax": 7,
                "movl %eax, (%ebx);cmpl $, (%ebp);je  <.text+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <.text+>;subl $, %esp": 1,
                "testl %edi, %edi;je  <.text+>;movl %edi, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx)": 1,
                "movl %ebx, (%eax);movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi;movl %ebp, %esp": 1,
                "orb , %al;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp);movl (%esi), %eax": 2,
                "movl $, %ebx;movl %ebx, (%esp);movl %esi, (%esp);calll  <.text+>;subl $, %esp": 1,
                "movl %ebx, (%esp);movl %esi, (%esp);calll  <.text+>;subl $, %esp;addl $, %ebx": 1,
                "movl (%ebp), %eax;addl $, %eax;addl $, %ebx;movl $, (%esp);movl (%ebp), %edx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;movzbl (%ebp), %eax": 2,
                "movl %ebx, %esi;movzbl -(%ebp), %ebx;movb %bl, (%ecx,%esi,);movl %edx, %ebx;imull , %ebx": 1,
                "cmpl %ecx, %ebx;jbe  <.text+>;movl (%ebp), %ebx;addl $, %ebx;cmpl $, %esi": 1,
                "jbe  <.text+>;movl (%ebp), %ebx;addl $, %ebx;cmpl $, %esi;ja  <.text+>": 1,
                "addl $, %ebx;cmpl %ebx, %eax;jae - <.text+>;movl , %ebx;subl $, %ebx": 1,
                "movl , %ebx;subl $, %ebx;cmpl %ebx, %eax;jae  <.text+>;movl (%ebp), %ebx": 1,
                "subl $, %ebx;cmpl %ebx, %esi;jae  <.text+>;movl (%ebp), %ebx;addl $, %ebx": 1,
                "cmpl %esi, %ecx;jae  <.text+>;leal (%ecx), %esi;imull %esi, %ebx;leal (%eax,%ebx), %ebx": 1,
                "jae  <.text+>;addl $, %ecx;imull %ecx, %esi;leal (%eax,%esi), %eax;movb $, (%edx,%eax,)": 1,
                "movb %al, -(%ebp);cmpb $-, -(%ebp);sete %bl;leal -(,%ebx,), %ebx;sete %al": 1,
                "sete %bl;leal -(,%ebx,), %ebx;sete %al;leal -(,%eax,), %eax;movb %al, -(%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <.text+>;andl $, %esi": 1,
                "movl %edi, (%esp);movl %edx, (%esp);movl %edi, (%esp);calll - <.text+>;movl %esi, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "movl %eax, (%esp);movl %edx, (%esp);calll - <.text+>;movl %esi, (%esp);movsbl -(%ebp), %eax": 1,
                "movl %esi, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movb %al, -(%ebp);movl , %ebx;movzbl (%edi), %edx;testb %dl, %dl;je  <.text+>": 1,
                "movl %eax, %edi;subl (%ebp), %edi;cmpl %edi, (%ebp);ja - <.text+>;cmpb $, -(%ebp)": 1,
                "cmpb $, (%edx,%eax);jne  <.text+>;addl $, -(%ebp);movl %eax, %edi;jmp  <.text+>": 1,
                "movl %eax, %edi;jmp  <.text+>;movl %eax, %ebx;subl %edi, %ebx;cmpl %esi, %ebx": 1,
                "calll - <.text+>;addl $, %ebx;cmpl -(%ebp), %ebx;jne - <.text+>;jmp  <.text+>": 1,
                "subl (%ebp), %eax;subl %esi, %eax;shrl %eax;addl (%ebp), %eax;movl %eax, -(%ebp)": 1,
                "orb , %al;movzbl %al, %eax;movl %eax, (%esp);movl %edi, (%esp);movl , %eax": 1,
                "subl $, %eax;movl %eax, (%esp);movl $, (%esp);calll - <.text+>;movl $, %eax": 1,
                "movl %eax, (%esp);calll  <.text+>;cmpb $, ;je  <.text+>;calll *": 1,
                "je  <.text+>;movl $, (%esp);movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl $, %edx": 16,
                "addl $, %esp;popl %ebx;popl %ebp;retl;cmpb $, ": 1,
                "ja  <.text+>;cmpw $, (%ebx);ja  <.text+>;cmpw $, (%ebx);ja  <.text+>": 2,
                "repne  scasb %es:(%edi), %al;notl %ecx;movw $, -(%ebp,%ecx);movl $, (%esp);leal -(%ebp), %eax": 2,
                "movw %ax, (%ebx);movb $, -(%ebp);cmpw $, (%ebx);jne  <.text+>;movw $, (%ebx)": 1,
                "movb $, -(%ebp);cmpw $, (%ebx);jne  <.text+>;movw $, (%ebx);movl $, (%esp)": 1,
                "movl $, %ecx;repne  scasb %es:(%edi), %al;notl %ecx;movw $, -(%ebp,%ecx);movl $, (%esp)": 2,
                "movl $, (%esp);addl , %ecx;movl %ecx, (%esp);calll - <.text+>;movl -(%ebp), %ebx": 1,
                "calll  <.text+>;movl (%ebp), %ebx;movl (%ebp), %edx;cmpl %edx, %ebx;jbe  <.text+>": 1,
                "movl %eax, (%esp);movl %edi, (%esp);movl %esi, (%esp);calll - <.text+>;addl $, %edi": 1,
                "orb , %al;movzbl %al, %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl -(%ebp), %eax;cmpl %eax, -(%ebp);jae  <.text+>;movl -(%ebp), %esi;movzbl , %eax": 1,
                "cmpl -(%ebp), %edi;je  <.text+>;movzbl (%esi,%ecx), %edx;testb %dl, %dl;je  <.text+>": 1,
                "jne - <.text+>;movl %ecx, %eax;movl $, %ebx;jmp - <.text+>;movl , %eax": 1,
                "movl , %eax;subl $, %eax;subl -(%ebp), %eax;shrl %eax;movl %eax, -(%ebp)": 1,
                "subl -(%ebp), %eax;shrl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl -(%ebp), %edx": 1,
                "shrl %eax;movl %eax, -(%ebp);movl %eax, -(%ebp);movl -(%ebp), %edx;leal (%eax,%edx), %edx": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll - <.text+>;movl $, %edx;movl $, %ebx": 1,
                "testb %al, %al;je  <.text+>;calll *;testb %al, %al;jne  <.text+>": 1,
                "subl $, %esp;movzbl , %eax;shll $, %eax;orb , %al;movzbl %al, %eax": 1,
                "movl , %eax;subl $, %eax;movl %eax, (%esp);calll - <.text+>;movl $, %edi": 1,
                "leal (%ecx,%eax), %eax;shrl %eax;movl %eax, (%esp);calll - <.text+>;calll - <.text+>": 1,
                "calll - <.text+>;calll  <.text+>;addl $, %esp;popl %edi;popl %ebp": 1,
                "calll - <.text+>;cmpb $, ;je  <.text+>;calll *;testb %al, %al": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;movl (%ebp), %ebx;movl , %ecx": 2,
                "movzbl (%ecx,%eax), %edx;movb %dl, (%ebx,%eax);addl $, %eax;movl , %edx;imull , %edx": 1,
                "movl $, %eax;movzbl (%ebx,%eax), %edx;movb %dl, (%ecx,%eax);addl $, %eax;movl , %edx": 1,
                "addl %eax, %eax;movl %eax, (%esp);movl , %eax;movl %eax, (%esp);calll - <.text+>": 2,
                "jmp  <.text+>;cmpb $, (%eax);sete %dl;movzbl %dl, %edx;addl %edx, %edi": 1,
                "je  <.text+>;jmp  <.text+>;movl %edi, -(%ebp);movl %eax, %edi;movzbl (%ebx,%ecx), %edx": 1,
                "movl -(%ebp), %edi;movl , %esi;subl $, %esi;subl -(%ebp), %esi;shrl %esi": 1,
                "movl %edi, -(%ebp);movzbl , %edx;shll $, %edx;orb , %dl;movzbl %dl, %edx": 1,
                "movb %al, -(%ebp,%edx);addl $, %edx;addl $, %esi;movl %ebx, %edi;movl $, %eax": 1,
                "movl %eax, -(%ebp);movl %ebx, %edi;movzbl , %eax;shll $, %eax;orb , %al": 1,
                "orb , %al;movzbl %al, %eax;movl %eax, (%esp);movl $, (%esp);movl %ebx, (%esp)": 1,
                "je  <.text+>;cmpl %esi, -(%ebp);jb  <.text+>;leal -(%esi), %ebx;movl -(%ebp), %eax": 1,
                "jbe  <.text+>;addl $, %esi;jmp  <.text+>;calll *;leal (%esi), %esi": 1,
                "jae  <.text+>;cmpl %eax, %esi;jae  <.text+>;movl -(%ebp), %eax;subl %esi, %eax": 1,
                "addl $, %esi;movl %eax, (%esp);movl %edx, (%esp);movl (%ebp), %eax;addl %esi, %eax": 1,
                "jmp  <.text+>;movl -(%ebp), %ebx;addl %esi, %ebx;movl $, %edx;movzbl , %ecx": 1,
                "movl %eax, (%esp);andl $, %ebx;movl %ebx, (%esp);calll *;calll - <.text+>": 1,
                "andl $, %ebx;movl %ebx, (%esp);calll *;calll - <.text+>;calll  <.text+>": 1,
                "movl $, %ebx;jmp  <.text+>;movl $, %ebx;jmp  <.text+>;movzbl , %eax": 1,
                "leal (%eax), %edx;movl %edx, -(%ebp);testl %eax, %eax;je  <.text+>;movl (%ebp), %ecx": 1,
                "movl $, %ebx;movl $, %eax;movl (%edx), %edi;testl %edi, %edi;je  <.text+>": 1,
                "cmpl %ecx, %ebx;jae  <.text+>;movl %ecx, %ebx;addl $, %edx;cmpl %esi, %edx": 1,
                "cmpb $, ;je  <.text+>;movl , %eax;subl %ebx, %eax;shrl %eax": 1,
                "movl (%ebp), %edx;movl $, (%edx);movl $, (%edx);movl (%ebp), %edx;addl (%edx), %ebx": 1,
                "movl -(%ebp), %eax;addl (%edx), %eax;movl %eax, (%edx);addl $, %esp;popl %ebx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;cmpb $, ": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;cmpb $, ;je  <.text+>": 1,
                "movl %edi, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;cmpb $, ": 1,
                "jne - <.text+>;movb $, -(%ebp);cmpb $, ;je  <.text+>;leal -(%ebp), %edx": 1,
                "calll  <.text+>;addl $, %esi;cmpl %esi, (%ebx);ja - <.text+>;addl $, %esp": 1,
                "jmp  <.text+>;movl $, %eax;subl $, %edx;subl %esi, %edx;subl %eax, %edx": 1,
                "movl $, (%eax);movb $, (%eax);movl $, %esi;movl (%ebx), %eax;movl (%ebp), %edx": 1,
                "movl %eax, -(%ebp);movl (%eax), %eax;testl %eax, %eax;je  <.text+>;movl %eax, (%esp)": 1,
                "testl %eax, %eax;je  <.text+>;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 2,
                "notl %ecx;movw $, -(%ebp,%ecx);addl $, %edx;cmpl %esi, %edx;jne - <.text+>": 1,
                "jne - <.text+>;movl -(%ebp), %eax;cmpl $, (%eax);jne  <.text+>;leal -(%ebp), %edx": 1,
                "movl $, %eax;movl %edx, %edi;rep  stosl %eax, %es:(%edi);movl (%ebx), %eax;subl $, %eax": 1,
                "movl $, (%esp);calll *;movl %esi, (%esp);calll - <.text+>;subl $, %esp": 1,
                "calll *;movl $, %ebx;testb %al, %al;je  <.text+>;cmpl $-, (%esi)": 1,
                "leal (%edx), %eax;movl %eax, -(%ebp);movl %eax, (%esi);movl %edx, (%esp);movl %esi, (%esp)": 1,
                "movl %edx, (%esp);movl %esi, (%esp);calll - <.text+>;subl $, %esp;cmpl -(%ebp), %edi": 1,
                "jne  <.text+>;addl $, (%esi);jmp  <.text+>;testb %cl, %cl;je  <.text+>": 1,
                "subl $, %esp;movl (%esi), %eax;movl %eax, (%esp);movl %esi, (%esp);calll - <.text+>": 1,
                "movl (%ebp), %edx;movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax;jmp  <.text+>": 1,
                "movl $, %eax;jmp  <.text+>;movl (%ebp), %ecx;movl %ecx, -(%ebp);movl (%ebp), %ecx": 1,
                "subl $, %esp;movl %ebx, (%esp);calll *;calll - <.text+>;movzwl (%eax), %eax": 1,
                "cmpl $, %eax;je  <.text+>;cmpl $, %eax;jne  <.text+>;cmpb $, -(%ebp)": 1,
                "movl -(%ebp), %eax;testl %eax, %eax;jle  <.text+>;calll - <.text+>;movzwl (%eax), %edi": 1,
                "subl $, %esp;calll  <.text+>;movl %edi, -(%ebp);jmp  <.text+>;testl %eax, %eax": 1,
                "jmp - <.text+>;cmpl $, (%ebp);nop;je  <.text+>;movl -(%ebp), %eax": 1,
                "movzbl %al, %eax;movl %eax, (%esp);movl %ebx, (%esp);movl %edi, (%esp);movl %esi, (%esp)": 1,
                "movl %ebx, (%esp);calll - <.text+>;movl %ebx, (%esp);calll - <.text+>;calll *": 1,
                "addl $, %ebx;movl (%ebp), %esi;notl %esi;jmp  <.text+>;cmpb $, -(%ebx)": 1,
                "pushl %ebx;subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "calll - <.text+>;testb %al, %al;je  <.text+>;movl $, %ebx;leal -(%ebp), %esi": 1,
                "jmp  <.text+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 4,
                "movl %ebx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <.text+>;movl $, (%esp)": 1,
                "calll - <.text+>;movl $, (%esp);movl %esi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax": 1,
                "testl %eax, %eax;jne  <.text+>;movl %ebx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %eax, %edi;testl %eax, %eax;je  <.text+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %ebx, -(%ebp);movl %edi, -(%ebp);movl (%ebp), %edx;movl (%ebp), %ebx;movl %edx, %edi": 1,
                "repne  scasb %es:(%edi), %al;notl %ecx;subl $, %ecx;cmpl %ebx, %ecx;jbe  <.text+>": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movb $, -(%ebp);leal -(%ebp), %eax": 1,
                "jmp  <.text+>;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll *": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp);calll *": 3,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;calll *;testl %esi, %esi": 1,
                "calll *;testl %esi, %esi;je  <.text+>;movl $, %ebx;movl $, (%esp)": 1,
                "movzbl %bl, %eax;cmpl %esi, %eax;jb - <.text+>;addl $, %esp;popl %ebx": 1,
                "testl %eax, %eax;je  <.text+>;movl $, -(%ebp);jmp  <.text+>;leal (%eax,%eax,), %esi": 1,
                "movzbl (%eax), %edx;movl %edx, (%esp);movzbl (%eax), %edx;movl %edx, (%esp);movzbl (%eax), %eax": 2,
                "movzbl %bl, %esi;cmpl %esi, (%ebp);ja - <.text+>;subl $, -(%ebp);je  <.text+>": 1,
                "pushl %ebx;subl $, %esp;movl $, -(%ebp);leal -(%ebp), %edi;jmp  <.text+>": 1,
                "movl $, %ebx;cmpl $, (%ebp);jne - <.text+>;jmp - <.text+>;addl $, %esp": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %edi;calll *": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;testl %eax, %eax;je  <.text+>": 1,
                "calll *;movl $, (%esp);movl %eax, (%esp);calll - <.text+>;movl %eax, ": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;andl $, %eax;popl %ebp;retl": 2,
                "retl;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;orl $, %eax": 1,
                "movl (%ebp), %eax;orl $, %eax;popl %ebp;retl;pushl %ebp": 1,
                "movl %eax, (%esp);calll - <.text+>;movl %eax, (%ebx);movl %esi, %ebx;cmpl %esi, %edi": 1,
                "movl %eax, (%esp);calll - <.text+>;movl (%esi), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "testl %eax, %eax;je  <.text+>;movl (%ebx), %eax;testl %eax, %eax;je  <.text+>": 1,
                "movl %eax, (%ebx);movl (%ebx), %eax;movl %eax, (%esp);calll - <.text+>;movl (%ebx), %edx": 1,
                "calll - <.text+>;movl %eax, %esi;testl %eax, %eax;jne - <.text+>;addl $, %esp": 1,
                "repne  scasb %es:(%edi), %al;notl %ecx;leal -(%ecx), %edi;movzwl (%edx), %eax;movw %ax, -(%ebp)": 1,
                "movl $, (%esp);calll - <.text+>;movl (%esi), %ebx;cmpl %ebx, %esi;je  <.text+>": 1,
                "movl $, %eax;cmpl $, -(%ebp);je  <.text+>;movl -(%ebp), %edi;movl $, %edx": 1,
                "movl %edx, (%ecx);addl (%eax), %esi;movl %esi, (%ecx);movl $, (%ecx);movl (%eax), %eax": 1,
                "addl (%eax), %esi;movl %esi, (%ecx);movl $, (%ecx);movl (%eax), %eax;movl %eax, (%ecx)": 1,
                "calll - <.text+>;movl %eax, %esi;testl %eax, %eax;jne  <.text+>;movl $, (%esp)": 4,
                "testb %al, %al;jne - <.text+>;movl (%ebp), %edi;movl $, %eax;movl $, %ecx": 1,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;movw %si, (%eax);movw %si, (%eax)": 1,
                "movw %ax, (%ebx);addl $, %ebx;addl $, %edx;movzbl (%edx), %eax;testb %al, %al": 1,
                "movl %ebx, (%esp);movl %eax, (%esp);movl -(%ebp), %eax;movzwl (%eax), %eax;movw %ax, -(%ebp)": 1,
                "movl %edx, (%eax);movl $, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "movl %eax, (%esp);movl $, (%esp);movl %esi, (%esp);calll - <.text+>;movl %eax, %edx": 1,
                "movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 4,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl %eax, %esi": 1,
                "movl %eax, (%esp);calll - <.text+>;movl $, %eax;jmp  <.text+>;movzwl (%eax), %edi": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll - <.text+>;leal -(%ebp), %edx": 2,
                "addl $, -(%ebp);movl -(%ebp), %eax;cmpl %eax, -(%ebp);ja - <.text+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;jmp  <.text+>": 1,
                "calll - <.text+>;movl %eax, -(%ebp);movl (%eax), %eax;testl %eax, %eax;jns  <.text+>": 1,
                "movl %eax, -(%ebp);movl (%eax), %eax;testl %eax, %eax;jns  <.text+>;testb %bl, %bl": 1,
                "addl (%edx), %eax;movl %eax, (%esp);calll - <.text+>;movl %eax, -(%ebp);movl -(%ebp), %edx": 1,
                "movl %eax, (%esp);calll - <.text+>;movl %eax, -(%ebp);movl -(%ebp), %edx;movl (%edx), %eax": 1,
                "jae  <.text+>;movl -(%ebp), %edx;addl $, %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "testl %eax, %eax;jne  <.text+>;movl -(%ebp), %eax;movzwl (%eax,%ebx,), %ebx;jmp  <.text+>": 1,
                "movl $, %edi;movl -(%ebp), %edx;addl $, %edx;movl %edx, -(%ebp);leal (%edi,%esi), %eax": 1,
                "movl %edx, -(%ebp);leal (%edi,%esi), %eax;movl %eax, %ebx;shrl $, %ebx;addl %eax, %ebx": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax": 1,
                "calll - <.text+>;movl (%eax,%ebx,), %eax;addl -(%ebp), %eax;movl -(%ebp), %edx;movl %eax, (%edx)": 1,
                "movl (%eax), %eax;movl %eax, (%esp);calll - <.text+>;leal -(%ebp), %edx;movl %edx, (%esp)": 5,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl %eax, %esi;movl $, %edi": 1,
                "movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;leal (%eax), %edx;movl %edx, %edi;movl $, %eax": 1,
                "movl %eax, (%esp);calll - <.text+>;movl %eax, -(%ebp);movl (%ebp), %edx;movzwl (%edx), %eax": 1,
                "movzwl (%edx), %eax;movw %ax, -(%ebp);movl %edi, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movl -(%ebp), %edx;movl %esi, %eax": 1,
                "calll - <.text+>;jmp  <.text+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <.text+>": 1,
                "movl %eax, (%esp);movl %edi, (%esp);movl %ebx, (%esp);movl -(%ebp), %ecx;movl -(%ebp), %edx": 1,
                "movl %edi, -(%ebp);movl -(%ebp), %edi;movl (%ebp), %esi;movl %ebx, (%esp);calll - <.text+>": 1,
                "jmp  <.text+>;movl $, %ebx;jmp  <.text+>;movl -(%ebp), %esi;movl (%ebp), %edx": 1,
                "movl %edx, %edi;movl %ecx, %esi;movzbl (%ebp), %eax;movb %al, -(%ebp);movl $, -(%ebp)": 1,
                "movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl %ebx, (%esp);movl $, (%esp);movl (%ebp), %eax": 1,
                "movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <.text+>;movl %edi, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <.text+>;movl %edi, (%esp);leal -(%ebp), %ebx": 1,
                "movl $, (%esp);calll - <.text+>;leal -(%ebp), %eax;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;addl %eax, %ebx;cmpb $, (%ebx);jne  <.text+>": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl %eax, %ebx;testl %eax, %eax;jne - <.text+>;jmp  <.text+>": 1,
                "movl $, (%esp);movl %edi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax;jne  <.text+>": 2,
                "movl %edi, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;jmp  <.text+>": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl %ebx, %ecx;movl (%ebp), %edx": 1,
                "movl $, (%eax);movl $, (%eax);movw $, (%eax);movl (%ebp), %edx;movl (%edx), %eax": 1,
                "movl $, (%eax);movw $, (%eax);movl (%ebp), %edx;movl (%edx), %eax;movl %eax, (%esp)": 1,
                "leal (%eax), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movb $, -(%ebp);leal -(%ebp), %ebx;movl %ebx, (%esp);leal -(%ebp), %eax": 1,
                "movl $, %edx;testb %al, %al;jne  <.text+>;movl %esi, (%esp);movl -(%ebp), %edx": 1,
                "testl %eax, %eax;jne  <.text+>;movl $, (%esp);calll - <.text+>;jmp  <.text+>": 3,
                "movb $, (%edi);movl , %eax;leal (%eax), %edx;movl %edx, (%eax);movl %eax, (%eax)": 1,
                "movl (%ebp), %eax;movl $, (%eax);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %eax, %ebx;testl %eax, %eax;jne  <.text+>;movl -(%ebp), %eax;movl %eax, (%esp)": 2,
                "jmp  <.text+>;leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);movl %ebx, (%esp)": 1,
                "movl %ecx, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movb $, -(%ebp,%esi)": 1,
                "movl $, (%esp);calll - <.text+>;movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esp);calll - <.text+>;movl (%ebp), %edx": 3,
                "cmpb $, ;je  <.text+>;leal (%ebx), %eax;movl %eax, (%ebx);movl $, (%esp)": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll - <.text+>;movl %eax, (%ebx);movl (%ebp), %ecx": 1,
                "subl $, %esp;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "movl %eax, %esi;movzwl %si, %esi;leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "jmp  <.text+>;calll - <.text+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%eax), %esi;movl %edi, (%esp);calll - <.text+>;movl %eax, %ebx;movzbl -(%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movl $, %edi;movl $, %edx": 2,
                "movl $, (%esp);calll - <.text+>;movl $, %edi;movl $, %edx;movl %edx, %ecx": 3,
                "movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);movl -(%ebp), %eax": 1,
                "repne  scasb %es:(%edi), %al;notl %ecx;cmpb $, -(%ebp,%ecx);je  <.text+>;leal -(%ebp), %edi": 1,
                "movl $, %ecx;repne  scasb %es:(%edi), %al;notl %ecx;movw $, -(%ebp,%ecx);testb %bl, %bl": 1,
                "leal -(%ebp), %ebx;movl %ebx, (%esp);calll - <.text+>;movl $, (%esp);movl %ebx, (%esp)": 1,
                "movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movb $, (%eax);movl %ebx, (%esp);calll - <.text+>": 1,
                "movl %esi, (%ebp);movl , %eax;cmpl $, %eax;jbe  <.text+>;movl $, (%esp)": 1,
                "movl %ebx, (%esi);movl (%ebp), %ecx;movl %ecx, (%esi);movl (%ebp), %eax;movl %eax, (%esi)": 1,
                "movl %eax, (%esi);movl (%ebp), %edi;addl $, %edi;movl (,%eax,), %eax;movl %eax, (%esp)": 1,
                "cmpl (%eax), %ecx;jb  <.text+>;movl %eax, %edx;movl (%edx), %eax;cmpl %eax, %edi": 1,
                "movl %eax, -(%ebp);movl %edx, %ebx;movl %edx, -(%ebp);jmp  <.text+>;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %edi;movl %edi, (%esp);movl %esi, (%esp);movl %ebx, (%esp);movl $, (%esp)": 1,
                "jne  <.text+>;testl $, %eax;je  <.text+>;movl $, (%esp);movl %esi, (%esp)": 1,
                "jmp  <.text+>;movl $, (%esp);movl %esi, (%esp);movl %ebx, (%esp);calll  <.text+>": 1,
                "leal (,%eax,), %edx;shrl $, %edx;movl %edx, -(%ebp);movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%esp);movl (%ebp), %edi;movl %edi, (%esp);calll - <.text+>;movl (%esi,%ebx,), %eax": 1,
                "movl %edx, (%esp);movl %esi, (%esp);calll - <.text+>;addl $, %ebx;cmpl %ebx, ": 1,
                "movl $, (%esp);calll - <.text+>;movl %edi, %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl %ebx, (%esp);movl %esi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;leal -(%ebp), %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;testl $, %edi;setne %dl": 1,
                "addl -(%ebp), %eax;addl -(%ebp), %eax;movl %eax, ;movl $, (%esp);shll $, %eax": 1,
                "movl %eax, ;movl $, (%esp);shll $, %eax;movl %eax, (%esp);calll - <.text+>": 1,
                "movl (%ecx), %edx;movl %eax, (%edx);movl (%ecx), %edx;movl -(%ebp), %ecx;shll $, %ecx": 1,
                "movl %eax, (%edx);movl (%ecx), %edx;movl -(%ebp), %ecx;shll $, %ecx;movl %ecx, -(%ebp)": 1,
                "movl -(%ebp), %ecx;shll $, %ecx;movl %ecx, -(%ebp);addl %eax, %ecx;movl %ecx, (%edx)": 1,
                "movl (%edx), %eax;movl (%eax), %eax;movl %eax, (%esp);calll - <.text+>;leal -(%ebp), %edx": 2,
                "jne  <.text+>;movl -(%ebp), %eax;movl %eax, (%esp);calll - <.text+>;cmpb $, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl %ecx, (%esp);movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movzwl %ax, %eax;movl %eax, (%esp);movl , %eax;movl %eax, (%esp);calll - <.text+>": 3,
                "movl %edi, (%esp);movl %esi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;testl %eax, %eax": 2,
                "addl %esi, %eax;leal (%eax,%eax), %eax;movw $, (%ebx);movw %ax, (%ebx);movl $, (%esp)": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp": 1,
                "movl %eax, (%esp);movl , %eax;movl %eax, (%esp);calll - <.text+>;jmp  <.text+>": 2,
                "movl %eax, (%esp);calll - <.text+>;testl %eax, %eax;jne  <.text+>;movl $, -(%ebp)": 5,
                "testl %eax, %eax;jne  <.text+>;movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 6,
                "addl $, -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax;jbe  <.text+>;jmp  <.text+>": 1,
                "movl %ebx, (%esp);movl -(%ebp), %eax;movl %eax, (%esp);calll - <.text+>;cmpl $, %eax": 1,
                "movl -(%ebp), %edx;testl %edx, %edx;je  <.text+>;movl -(%ebp), %ecx;cmpl %ecx, -(%ebp)": 1,
                "je  <.text+>;addl $, %eax;cmpl %eax, %edx;jae - <.text+>;jmp  <.text+>": 1,
                "je  <.text+>;leal -(%ebp), %eax;movl %eax, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);leal -(%ebp), %eax": 1,
                "movl $, (%esp);leal -(%ebp), %esi;movl %esi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl %esi, (%esp)": 1,
                "movl $, (%esp);calll - <.text+>;movl $, %eax;jmp  <.text+>;cmpl $, -(%ebp)": 1,
                "calll - <.text+>;movl (%esi), %ebx;movl (%esi), %eax;movl %eax, (%esp);calll - <.text+>": 1,
                "movl $, %edx;jmp  <.text+>;movl $, (%esp);calll - <.text+>;movl $, %edx": 1,
                "movl %esp, %ebp;pushl %edi;subl $, %esp;movl $, %edx;movl $, %ecx": 1,
                "movl $, (%esp);movl %eax, (%esp);movl $, (%esp);calll - <.text+>;testb %al, %al": 2,
                "movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %edx;movb $, %cl;movl %edx, %edi": 3,
                "calll  <ScsiPortWriteRegisterUshort+>;leal -(%ebp), %eax;movl %eax, (%esp);movl %ebx, (%esp);calll - <.text+>": 3,
                "calll - <.text+>;movl %ebx, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <.text+>;addl $, %esp;popl %ebx;popl %edi;popl %ebp": 5,
                "movl %ebx, (%esp);calll - <.text+>;movl %ebx, (%esp);movl $, (%esp);movl -(%ebp), %eax": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, (%esp);movl $, (%esp)": 3,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;testb %al, %al;je  <.text+>": 2,
                "nop;leal (%esi), %esi;calll - <.text+>;jmp  <.text+>;calll - <.text+>": 1,
                "movl %esp, %ebp;subl $, %esp;movl $, (%esp);calll - <.text+>;calll  <.text+>": 1,
                "movl $, (%esp);calll - <.text+>;calll  <.text+>;calll  <ScsiPortWriteRegisterUshort+>;leave": 1,
                "cmpl $, %ecx;jbe  <.text+>;movzbl (%ebx), %edx;movl %edx, %eax;andl $-, %eax": 1,
                "andl $-, %eax;cmpb $, %al;je  <.text+>;cmpb $, %dl;je  <.text+>": 1,
                "cmpb $, %dl;je  <.text+>;movl $, %eax;cmpb $, %dl;jne  <.text+>": 1,
                "addl $, %eax;cmpb $, %dl;ja  <.text+>;cmpl %ecx, %eax;jne - <.text+>": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movzbl (%ebx), %eax": 2,
                "jmp  <.text+>;leal (%ebx), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movzbl (%ebx), %ecx": 1,
                "shll $, %eax;movl %eax, ;movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl %esi, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl $, (%esp);leal -(%ebp), %edi": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movzbl (%ebp), %eax;movl %eax, (%esp);calll - <.text+>": 1,
                "cmpl %eax, %edx;jb - <.text+>;leave;retl;pushl %ebp": 1,
                "movl $, (%esp);movl $, (%esp);movl %eax, (%esp);movl %edx, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 7,
                "jne  <.text+>;rep  retl;inb $, %al;testb $, %al;je  <.text+>": 1,
                "movl $, %eax;outb %al, $;movl $, %eax;outb %al, $;movl $, %eax": 1,
                "calll - <.text+>;cmpl $, %eax;ja - <.text+>;movl %ebx, %eax;shrl %eax": 1,
                "je  <.text+>;movl $, %edi;jmp  <.text+>;shrl %ebx;je  <.text+>": 1,
                "mull %edx;shrl $, %edx;movl %edx, ;popl %ebx;popl %esi": 1,
                "andl %eax, %ebx;movl $, (%esp);calll - <.text+>;inb $, %al;testb $, %al": 1,
                "calll  <.text+>;popl %ebp;retl;pushl %ebp;movl %esp, %ebp": 1,
                "movb $, (%edi);movw $, (%edi);movl %ebx, (%edi);movl %edi, %ebx;movl %esi, %eax": 1,
                "movl %edx, (%esp);movl %esi, %eax;andl $, %eax;movl %eax, (%esp);calll *": 1,
                "movl %esi, %eax;andl $, %eax;movl %eax, (%esp);calll *;testb %al, %al": 1,
                "subl $, %eax;movl %eax, (%esp);movl %esi, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %edi;leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl -(%ebp), %eax;movl %eax, (%esp);calll  <.text+>;movl %ebx, (%esp);movl -(%ebp), %eax": 1,
                "movl %edx, -(%ebp);testl %eax, %eax;jne  <.text+>;movl -(%ebp), %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;je  <.text+>;testl %edx, %edx;jne  <.text+>;movl $, (%esp)": 1,
                "movl $, (%esp);calll - <.text+>;movl -(%ebp), %eax;imull -(%ebp), %eax;addl $, %eax": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;movw $, (%eax);movw $, (%eax);movl $, (%eax)": 2,
                "addl $, -(%ebp);movl $, (%esp);movl $, (%esp);movl , %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);movl , %eax;movl %eax, (%esp);calll - <.text+>;testl %eax, %eax": 4,
                "cmpb $, ;je  <.text+>;movl $, -(%ebp);movzbl -(%ebp), %edx;addl $-, %edx": 1,
                "movb $, (%edi);movw $, (%ebx);movw $, (%ebx);movl $, (%ebx);movb $, (%ebx)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp);calll  <.text+>;testb %al, %al": 1,
                "movl %eax, (%edi);jmp  <.text+>;leal -(%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp)": 1,
                "movl %edx, (%esp);movl %esi, (%esp);calll *;testb %al, %al;je  <.text+>": 2,
                "calll  <.text+>;leal -(%ebp), %edx;movl %edx, (%esp);movl %edi, (%esp);movl %ebx, (%esp)": 1,
                "addl $, -(%ebp);movzbl , %eax;cmpl %eax, -(%ebp);jb - <.text+>;movl -(%ebp), %eax": 1,
                "setne %dl;testb $-, %al;setne %al;leal (%edx,%eax), %esi;andl $, %esi": 1,
                "subl $, %ebx;movl %ebx, %ecx;shrl $, %ecx;movl $, %eax;rep  stosl %eax, %es:(%edi)": 4,
                "movl $, (%esp);movl $, (%esp);movl -(%ebp), %edx;movl %edx, (%esp);calll - <.text+>": 5,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, %esi": 1,
                "je  <.text+>;movzwl , %edx;shll $, %edx;movzwl , %eax;addl %edx, %eax": 1,
                "movzwl , %edx;shll $, %edx;movzwl , %eax;addl %edx, %eax;movl %eax, -(%ebp)": 1,
                "movzbl %bl, %eax;movl -(%ebp,%eax,), %eax;movl %eax, (%edi);movl $, (%edi);addl $, %edi": 1,
                "addl $, %esi;cmpl $, %esi;jne - <.text+>;movl -(%ebp), %edx;movl %edx, -(%ebp)": 2,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movl $, %esi;movl $, -(%ebp)": 1,
                "movl $, (%esp);calll - <.text+>;movl $, %esi;movl $, -(%ebp);movzwl (%esi,%esi), %edx": 1,
                "testl %ebx, %ebx;je  <.text+>;movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp": 1,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl $, (%esp);movl , %eax": 1,
                "outb %al, %dx;leal (%ebx), %ecx;movl $, %eax;movl %ecx, %edx;outb %al, %dx": 1,
                "leal (%ebx), %edi;movl %edi, %edx;inb %dx, %al;movzwl -(%ebp), %edx;inb %dx, %al": 1,
                "movl %ebx, %edx;inb %dx, %al;movl %edi, %edx;inb %dx, %al;testb $, %al": 1,
                "movl $, %eax;movzwl -(%ebp), %edx;outb %al, %dx;movl $, (%esp);calll - <.text+>": 9,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %edx;movl %edx, -(%ebp);movl $, %ebx": 1,
                "je  <.text+>;cmpb $, %al;jne  <.text+>;jmp  <.text+>;movl $, (%esp)": 1,
                "andl $-, %eax;cmpb $, %al;jne - <.text+>;movb %dl, -(%ebp);addl $, %edx": 1,
                "movb %dl, -(%ebp);movl $, -(%ebp);movl %esi, -(%ebp);movl $, %esi;movl $, %ebx": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "jne - <.text+>;movl -(%ebp), %edx;movb $, -(%ebp,%edx);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpb $, -(%ebp,%edx);je  <.text+>;jmp  <.text+>;addl $, %edx;cmpl %edx, %eax": 1,
                "leal (%esi), %esi;jmp  <.text+>;cmpb $, -(%ebp,%edx);jne  <.text+>;addl $, %edx": 1,
                "jne  <.text+>;jmp  <.text+>;cmpb $, -(%ebp,%edx);je  <.text+>;nop": 1,
                "jbe  <.text+>;cmpb $, -(%ebp,%ecx);je  <.text+>;movl %ecx, %eax;movl -(%ebp), %ebx": 1,
                "movl $, %ecx;repne  scasb %es:(%edi), %al;movl %ecx, %eax;notl %eax;subl $, %eax": 1,
                "movl %edx, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);movl $, (%esp)": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl -(%ebp,%esi,), %eax;movl %eax, -(%ebp)": 1,
                "calll - <.text+>;jmp  <.text+>;movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movw $, (%ecx);addl $, %ecx;subl $, %ebx;movl %ebx, %esi;andl $-, %esi": 2,
                "movb $, (%eax);movw $, (%eax);movl $, (%eax);movl $, (%eax);movl $, (%eax)": 1,
                "sbbl %edx, %edx;notl %edx;andl %edx, %ebx;inb $, %al;testb %al, %al": 1,
                "testb %bl, %bl;je  <.text+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movl -(%ebp), %esi;calll  <.text+>": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;cmpw $, %bx;ja  <.text+>": 1,
                "movl $, -(%ebp);jmp  <.text+>;movl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, %edx;subl $, %edx;jmp - <.text+>;movl $, %edx;jmp - <.text+>": 1,
                "movl %edi, (%ebx);movl $, (%ebx);movl $, (%ebx);jmp - <.text+>;leal -(%ebp), %eax": 1,
                "movl %eax, (%esp);calll  <.text+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movb $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);movl %eax, (%esp);movl $, (%esp)": 10,
                "pushl %esi;pushl %ebx;subl $, %esp;movl $, %esi;movl $, %ebx": 1,
                "leal (%eax,%eax,), %edi;shll $, %edi;leal (%edi), %eax;movl %eax, -(%ebp);addl $, %edi": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;movl %eax, (%esp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <.text+>": 5,
                "movw $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 4,
                "calll - <.text+>;movl %eax, %ebx;movl $, %eax;cmpl $, (%ebp);jne  <.text+>": 3,
                "addl (%ebx), %eax;adcl (%ebx), %edx;movl %edx, %ecx;imull %esi, %ecx;mull %esi": 2,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <.text+>;movl %eax, -(%ebp);movl (%eax), %ecx": 1,
                "movl %edx, -(%ebp);testl %ebx, %ebx;je  <.text+>;movl %ebx, %esi;movl (%ebp), %eax": 1,
                "jbe  <.text+>;movl -(%ebp), %ebx;movl $, (%esp);movl %ebx, (%esp);movl -(%ebp), %edx": 1,
                "addl %ebx, -(%ebp);adcl %edx, -(%ebp);subl %ebx, %esi;jne - <.text+>;jmp  <.text+>": 1,
                "je  <.text+>;movzbl -(%ebp), %edx;movb %dl, (%eax);movl %ebx, (%eax);movl %esi, (%eax)": 2,
                "movzbl -(%ebp), %edx;movb %dl, (%eax);movl %ebx, (%eax);movl %esi, (%eax);movl %edi, (%eax)": 2,
                "leal -(%eax,%eax,), %eax;leal (,%eax,), %eax;popl %ebp;retl;pushl %ebp": 1,
                "movzbl (%ebp), %ebx;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 2,
                "jmp  <.text+>;movl , %esi;movl %esi, -(%ebp);movl %esi, (%esp);movl $, (%esp)": 1,
                "calll - <.text+>;movl $, %edx;movl $, %eax;addl (,%eax,), %edx;addl $, %eax": 2,
                "leal -(%ebx), %esi;movl %esi, -(%ebp);negl %edx;movl %edx, -(%ebp);movl %edx, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movl , %eax;leal (,%eax,), %edx": 2,
                "shll $, %eax;addl $, %eax;movl %eax, -(%ebp);movl %esi, (%esp);movl %eax, (%esp)": 1,
                "movl %eax, -(%ebp);movl %esi, (%esp);movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;leal (%edi,%edi,), %eax": 1,
                "calll - <.text+>;addl $, %esi;movl %edi, (%esp);movl %esi, (%esp);movl %ebx, (%esp)": 1,
                "movzbl (%eax), %eax;movb %al, (%ebx);movl -(%ebp), %eax;shrl $, %eax;andl $, %eax": 11,
                "andl $, %eax;movzbl (%eax), %eax;movb %al, (%ebx);movl -(%ebp), %eax;andl $, %eax": 2,
                "movb %al, (%ebx);movl -(%ebp), %eax;andl $, %eax;movzbl (%eax), %eax;movb %al, (%ebx)": 2,
                "pushl %esi;pushl %ebx;subl $, %esp;movl $, (%esp);calll - <.text+>": 1,
                "movb $-, (%edi);leal -(%ebx), %edi;movl %edi, %eax;movzbl %al, %esi;movl $, (%esp)": 1,
                "movl %esi, (%esp);calll *;testb %al, %al;jne - <.text+>;movb %bl, -(%ebp)": 1,
                "movl %eax, (%esp);calll *;movzbl , %eax;testb %al, %al;jns  <.text+>": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movzwl (%ebx), %esi;testl %esi, %esi": 1,
                "movl $, (%esp);calll - <.text+>;movzwl (%ebx), %esi;testl %esi, %esi;je  <.text+>": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;jmp  <.text+>;movl %eax, %edx": 1,
                "testb $, %cl;je  <.text+>;movb $, (%edx);movw $, (%ebx);movw $, (%ebx)": 1,
                "testb %al, %al;je  <.text+>;cmpb $, %al;jne  <.text+>;addl $, ": 1,
                "movl %eax, (%esp);movl $, (%esp);calll - <.text+>;movl (%ebx), %eax;movl %eax, (%esp)": 8,
                "movl $, (%esp);calll - <.text+>;movzwl (%esi), %eax;movl %eax, (%esp);movl (%esi), %eax": 2,
                "movl %eax, (%esp);movl %ebx, (%esp);movl $, (%esp);calll - <.text+>;testl %esi, %esi": 1,
                "movl , %eax;movl %eax, (%esp);movl $, (%esp);calll - <.text+>;jmp - <.text+>": 1,
                "xorl $, %eax;andl $, %eax;addl $, %esp;popl %ebx;popl %ebp": 2,
                "calll - <.text+>;movb $, ;movl $, %eax;jmp  <.text+>;movb $, ": 1,
                "movb $, ;movl $, %eax;addl $, %esp;popl %ebx;popl %ebp": 1,
                "retl;pushl %ebp;movl %esp, %ebp;movl $, %eax;movl $, %edx": 1,
                "calll - <.text+>;movzwl , %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 3,
                "je  <.text+>;movzwl , %edx;cmpw $-, %dx;je  <.text+>;movzwl %ax, %ebx": 1,
                "shll $, %ebx;movzwl %dx, %edx;addl %edx, %ebx;movl %ebx, (%esp);movl $, (%esp)": 1,
                "movw %dx, (,%eax,);shrl $, %edx;movw %dx, (,%eax,);movw $, (,%eax,);movw %cx, (,%eax,)": 1,
                "movw $, (,%eax,);movw %cx, (,%eax,);popl %ebp;retl;pushl %ebp": 1,
                "movzbl %cl, %eax;outb %al, $;movzbl %ch, %eax;outb %al, $;inb $, %al": 1,
                "movl %esp, %ebp;subl $, %esp;movl $, (%esp);calll - <.text+>;movl $, (%esp)": 1,
                "movb $, (%edi);movb $, ;movb $, ;movb $, ;movb $, ": 1,
                "calll - <.text+>;cmpw $, -(%ebp);je  <.text+>;movl $, (%esp);movl $, (%esp)": 1,
                "movzbl , %eax;movl %eax, (%esp);movzbl , %eax;movl %eax, (%esp);movl $, (%esp)": 2,
                "andl $, %ecx;movl %eax, %edx;shrw $, %dx;andl $, %edx;leal (%edx,%edx,), %edx": 1,
                "movl %eax, %edx;shrw $, %dx;andl $, %edx;leal (%edx,%edx,), %edx;leal (%ecx,%edx,), %edx": 1,
                "shrw $, %dx;andl $, %edx;leal (%edx,%edx,), %edx;leal (%ecx,%edx,), %edx;movl %edx, (%esp)": 1,
                "movl $, ;movl $, ;popl %ebp;retl;nop": 1,
                "testl %eax, %eax;jne  <.text+>;leal -(%ebp), %edx;movl %edx, %edi;movl $, %ecx": 1,
                "repne  scasb %es:(%edi), %al;notl %ecx;leal -(%edx,%ecx), %eax;movl $, (%eax);movl $, (%eax)": 1,
                "movl %esi, (%esp);calll *;testb %al, %al;jne  <.text+>;movl $, (%esp)": 2,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl (%ebp), %eax;movl (%eax), %ebx": 1,
                "movl $, (%eax);popl %ebp;retl $;pushl %ebp;movl %esp, %ebp": 1,
                "je  <.text+>;leal -(%ebp), %edi;movl %esi, %ebx;cmpl $, %esi;jbe  <.text+>": 1,
                "cmpl $, %esi;jbe  <.text+>;movl $, %ebx;movb $-, -(%ebp);movl %ebx, %eax": 1,
                "movl %eax, (%esp);movl %eax, (%esp);movl $, (%esp);calll  <ScsiPortWriteRegisterUshort+>;addl $, %esp": 1,
                "setne %al;je  <.text+>;cmpb $, -(%ebp);jns  <.text+>;movl $, %edx": 1,
                "movl $, (%esp);calll - <.text+>;movl (%ebp), %ebx;cmpl $, %ebx;jbe  <.text+>": 1,
                "movb $, ;movzwl (%ebp), %edx;movw %dx, ;movzwl (%ebp), %eax;cmpl %eax, (%ebp)": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movzbl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %edx, (%esp);movzbl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %eax;testb %dl, %dl;je  <.text+>;cmpl $, -(%ebp);je  <.text+>": 1,
                "movb %al, -(%ebp);movl -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp);movl %esi, (%esp)": 1,
                "movzbl -(%ebp), %ecx;subl %ecx, %esi;cmpl (%ebp), %esi;jbe  <.text+>;movl (%ebp), %esi": 1,
                "jbe  <.text+>;cmpl -(%ebp), %eax;jae  <.text+>;movzbl -(%ebp), %eax;leal (%esi,%eax), %edi": 1,
                "calll - <.text+>;movl $, %eax;jmp  <.text+>;movb $, -(%ebp);movl %esi, %eax": 1,
                "shrl $, %edx;addb -(%ebp), %dl;movb %dl, -(%ebp);movzbl -(%ebp), %edx;movb %dl, -(%ebp)": 1,
                "movl $, (%esp);calll - <.text+>;movl $, %eax;jmp  <.text+>;movl %esi, %eax": 2,
                "movzbl (%ebp), %esi;movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl %esi, %edx;movzbl %dl, %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%ebx);movl $, (%ebx);movl $, %eax;addl $, %esp;popl %ebx": 1,
                "movw $, (%ebx);movb $, (%ebx);movl $, %eax;jmp  <.text+>;movl (%ebp), %eax": 1,
                "cmpl $, ;je  <.text+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movw $, -(%ebp);movw $, -(%ebp);movl -(%ebp), %ebx": 1,
                "movl $, (%esp);calll - <.text+>;cmpl $, -(%ebp);jne  <.text+>;testb $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp);leal (%eax,%eax,), %ebx;leal (,%ebx,), %eax": 1,
                "jne  <.text+>;leal (%eax,%eax,), %ecx;movl (,%ecx,), %eax;movl (,%ecx,), %edx;movl %eax, %esi": 1,
                "cmpl $, %edx;setne %cl;movzbl %cl, %ecx;subl $, %ecx;andl $-, %ecx": 1,
                "andl $-, %ecx;addl $, %ecx;leal (%eax,%eax,), %ebx;movl (,%ebx,), %eax;movl (,%ebx,), %edx": 1,
                "addl $, %ecx;leal (%eax,%eax,), %ebx;movl (,%ebx,), %eax;movl (,%ebx,), %edx;movl %eax, %esi": 1,
                "movl $, %eax;cmpl $, -(%ebp);ja  <.text+>;cmpl $, -(%ebp);sbbl %eax, %eax": 1,
                "testw %si, %si;je  <.text+>;movzwl %si, %esi;movl $, %ebx;jmp  <.text+>": 1,
                "je  <.text+>;movzwl %si, %esi;movl $, %ebx;jmp  <.text+>;movl $, %eax": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movzwl -(%ebp), %eax;movl $, (%esp)": 1,
                "movl $, (%esp);shrl $, %eax;movl %eax, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "leal -(%ebp), %ebx;movl $, -(%ebp);movb $, -(%ebp);movl %ebx, (%esp);movl %ebx, (%esp)": 1,
                "movb $, -(%ebp);movl %ebx, (%esp);movl %ebx, (%esp);movl $, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 7,
                "movzwl %cx, %edx;movl $, %eax;outb %al, %dx;leal (%ecx), %edx;movl $, %eax": 1,
                "leal (%ecx), %edx;movl $, %eax;outb %al, %dx;popl %ebp;retl": 1,
                "pushl %ebp;movl %esp, %ebp;calll - <.text+>;cmpl $, %eax;jne  <.text+>": 1,
                "calll - <.text+>;calll - <.text+>;calll - <.text+>;movl $, %edx;movl $, %eax": 4,
                "movl %eax, (%esp);movl $, (%esp);calll  <ScsiPortWriteRegisterUshort+>;cmpw $, -(%ebp);sete %al": 1,
                "movl %eax, (%esp);movl $, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl $, %eax;cmpw $, -(%ebp)": 1,
                "movw %ax, ;movl $, ;movl $, ;movl $, ;movl $, ": 1,
                "calll - <.text+>;movl $, ;movl $, ;movl $, %eax;jmp  <.text+>": 5,
                "calll - <.text+>;calll - <.text+>;leal (%esi), %esi;calll - <.text+>;movl $, %edx": 1,
                "calll - <.text+>;leal (%esi), %esi;calll - <.text+>;calll - <.text+>;calll - <.text+>": 1,
                "movw $, ;movl $, ;movl $, %eax;jmp  <.text+>;cmpw $, %bx": 1,
                "movl $, ;movl $, %eax;jmp  <.text+>;leal -(%ebx), %eax;cmpw $, %ax": 1,
                "movzwl %bx, %esi;movl $, %edx;movl %esi, %eax;calll - <.text+>;movl %eax, %edx": 2,
                "movl %esi, %eax;testb %al, %al;sete %al;movzbl %al, %eax;calll - <.text+>": 2,
                "movl $, (%esp);movl $, (%esp);movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl %eax, %edx": 1,
                "movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl %eax, %edx;movzwl %dx, %ebx;movl %ebx, %eax": 1,
                "calll - <.text+>;movl %esi, %eax;testb %al, %al;sete %al;movzbl %al, %eax": 1,
                "movzbl %al, %eax;addl $, %eax;movl (%ebp), %edx;movl %eax, (%edx);jmp  <.text+>": 1,
                "movl (%ebp), %edx;movl %eax, (%edx);jmp  <.text+>;movzbl %al, %eax;movl (%ebp), %edx": 1,
                "movl $, %edx;movl $, %eax;calll - <.text+>;jmp  <.text+>;movl $, %edx": 1,
                "subl $, %esp;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl , %eax": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movl , %eax;testl %eax, %eax": 1,
                "testl %eax, %eax;jne  <.text+>;calll - <.text+>;movl %eax, (%esp);movl (%ebp), %eax": 1,
                "movzwl %bx, %ebx;movl %ebx, %eax;calll - <.text+>;movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "movl %ebx, %eax;calll - <.text+>;movl -(%ebp), %edx;movl %edx, (%esp);imull %edi, %ebx": 1,
                "addl $, %eax;cmpl $, %eax;jne - <.text+>;popl %ebp;retl": 1,
                "movzbl (%ebp), %ecx;shll $, %ecx;movzbl (%ebp), %edx;orl %edx, %ecx;movl (%ebp), %edx": 1,
                "movb $-, %dl;movzbl (%ebp), %eax;outb %al, %dx;movzbl (%ebp), %eax;outb %al, %dx": 1,
                "jmp  <.text+>;movl $, %eax;calll - <.text+>;movl $, (%esp);calll - <.text+>": 1,
                "movl , %eax;addl $, %eax;andl $-, %eax;movl %eax, ;jmp  <.text+>": 1,
                "movl %edx, -(%ebp);movb %cl, -(%ebp);movzbl (%ebp), %eax;movb %al, -(%ebp);movzbl (%ebp), %eax": 1,
                "movb %al, -(%ebp);movzbl (%ebp), %eax;movb %al, -(%ebp);movzbl (%ebp), %eax;movb %al, -(%ebp)": 2,
                "movzbl (%ebp), %eax;movb %al, -(%ebp);movzbl (%ebp), %edx;movb %dl, -(%ebp);movzbl (%ebp), %eax": 1,
                "jne - <.text+>;jmp  <.text+>;movzbl -(%ebp), %eax;movl %eax, (%esp);movzbl -(%ebp), %eax": 1,
                "movl %eax, (%esp);movzbl -(%ebp), %eax;movl %eax, (%esp);movzbl -(%ebp), %eax;andl $, %eax": 1,
                "calll - <.text+>;movl %ebx, %edx;inb %dx, %al;movl %eax, %edx;testb %al, %al": 1,
                "movl %eax, -(%ebp);movl %edi, %edx;testb %dl, %dl;jne  <.text+>;movl $, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;movl $, %eax;movzwl -(%ebp), %edx": 1,
                "calll - <.text+>;leal (%esi,%esi,), %eax;addl %eax, %eax;movl %eax, (%esp);movl $, (%esp)": 2,
                "calll - <.text+>;movzbl -(%ebp), %eax;orl $-, %eax;movl %eax, %edi;movzwl -(%ebp), %esi": 1,
                "movl $, %ecx;movl $, %edx;movl $, %eax;calll - <.text+>;testb %al, %al": 2,
                "testb %al, %al;je  <.text+>;movl %esi, %edi;shll $, %esi;addl %esi, (%ebp)": 1,
                "shll $, %esi;addl %esi, (%ebp);subl %edi, %ebx;jne - <.text+>;movl $, %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);movl %esi, %edx;movzbl %dl, %eax": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, %ecx": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);movl $, %ecx;movl $, %edx": 1,
                "testw %ax, %ax;je  <.text+>;movzwl %ax, %ecx;testw %ax, %ax;js  <.text+>": 1,
                "calll - <.text+>;subl $, %esp;movl -(%ebp), %ebx;movl $, (%esp);movl $, (%esp)": 1,
                "calll - <.text+>;jmp  <.text+>;movl -(%ebp), %ecx;movl %ecx, (%esp);movl $, (%esp)": 1,
                "movl $, (%eax);movb $, (%eax);movb $, (%eax);movw $, (%eax);movl %ebx, (%eax)": 1,
                "movl %ebx, -(%ebp);movl $, %ebx;andw $, %si;movw %si, -(%ebp);movl -(%ebp), %esi": 1,
                "movw %dx, (%edi);movl -(%ebp), %edx;movl %edx, (%esp);movl -(%ebp), %edx;movl %edx, (%esp)": 1,
                "addl $, %ebx;movb %bl, -(%ebp);movl $, (%esp);movl $, (%esp);movl , %eax": 1,
                "calll *;testb %al, %al;je  <.text+>;movl -(%ebp), %edi;movl -(%ebp), %eax": 1,
                "movl %edi, (%esp);movl %ecx, (%esp);movl %edx, (%esp);movl %eax, (%esp);movl %esi, (%esp)": 1,
                "addl $, %eax;cmpl $, %eax;jne - <.text+>;negl %edx;movl %edx, -(%ebp)": 1,
                "movl $, (%esp);leal -(%ebp), %ebx;movl %ebx, (%esp);calll - <.text+>;movl $, (%esp)": 1,
                "movl %edx, (%esp);calll - <.text+>;addl $, %ebx;leal -(%ebp), %ecx;movl %ecx, (%esp)": 1,
                "movzbl (%eax), %eax;movb %al, -(%ebp);movl -(%ebp), %eax;shrl $, %eax;andl $, %eax": 12,
                "andl $, %eax;movzbl (%eax), %eax;movb %al, -(%ebp);movl -(%ebp), %eax;shrl $, %eax": 10,
                "leal -(%ebp), %eax;movl %eax, (%esp);movl -(%ebp), %ebx;movl %ebx, (%esp);movl -(%ebp), %eax": 3,
                "movl %ebx, %edx;inb %dx, %al;testb $, %al;je - <.text+>;testb $, %al": 1,
                "inb %dx, %al;testb $, %al;je - <.text+>;testb $, %al;jne  <.text+>": 1,
                "movl %edi, %eax;outb %al, %dx;movl %ecx, %edx;inw %dx, %ax;outw %ax, %dx": 1,
                "je  <.text+>;movl $, %edx;movl $, %ecx;addl %ecx, %ecx;addl %edx, %edx": 1,
                "jmp  <.text+>;movl $, %edx;movl $, %ecx;andl $, %edx;shll $, %ecx": 1,
                "calll - <.text+>;movl $, %edx;movl $, %eax;calll - <.text+>;popl %ebx": 1,
                "movl $, -;movl $, %eax;movl $, %edx;outl %eax, %dx;movl $, %eax": 1,
                "shrl $, %ecx;rep  stosl %eax, %es:(%edi);testb $, %dl;je  <.text+>;movw $, (%edi)": 2,
                "movb $, (%edi);wbinvd;movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, ;movl , %eax;movl %eax, %edx;shll $, %edx;shrl $, %edx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %ebx;movl %eax, %ecx;andl $, %eax": 1,
                "testb $, %cl;je  <.text+>;movzbl %dl, %ebx;shll $, %ebx;orl %ebx, %eax": 1,
                "andl $, %ecx;movzbl %dl, %edx;shll $, %ecx;sarl $, %ecx;andl %edx, %ecx": 1,
                "movl , %edx;movl %edx, -(%ebp);movl , %ecx;movl , %edi;movl $, %esi": 1,
                "addl $, %edx;cmpl %ecx, %edx;jb - <.text+>;addl $, %esi;addl -(%ebp), %edi": 1,
                "cmpl %ecx, %edx;jb - <.text+>;addl $, %esi;addl -(%ebp), %edi;cmpl -(%ebp), %esi": 1,
                "movl $, %edx;movl -(%ebp), %eax;calll - <.text+>;leave;retl": 1,
                "pushl %ebx;subl $, %esp;movzbl (%ebp), %eax;leal -(%ebp), %ecx;leal -(%ebp), %edx": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movzbl (%ebp), %edi;shll $, %edi": 1,
                "testb %dl, (%edi,%ebx);je  <.text+>;movl -(%ebp), %ecx;movl %ecx, (%esi,%eax,);shrb %dl": 1,
                "movl $, %eax;jmp - <.text+>;addl $, %esp;popl %ebx;popl %esi": 1,
                "shll $, %eax;movl %eax, ;movl $, %edx;movl $, %eax;calll - <.text+>": 1,
                "imull %edx, %eax;addl %eax, %eax;popl %ebp;retl;pushl %ebp": 1,
                "movl , %eax;shrl $, %eax;cmpl %ebx, %eax;ja - <.text+>;addl $, %edi": 1,
                "jbe  <.text+>;movl $, %ebx;cmpl $, ;ja - <.text+>;jmp - <.text+>": 1,
                "movl $, (%esp);movl %eax, (%esp);movl %esi, (%esp);calll - <.text+>;cmpl , %esi": 1,
                "movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl %ebx, ;movl %ebx, %eax;andl $, %eax": 1,
                "movl $, ;movl $, ;movl $, %eax;addl $, %esp;popl %ebx": 1,
                "addl $, ;movl , %eax;movl (%edx), %edx;andl $, %edx;movl (%eax,%ebx,), %ecx": 1,
                "movl %edx, (%esp);leal -(%ebp), %ecx;movl %ecx, (%esp);movl %eax, (%esp);calll - <.text+>": 1,
                "movl %esi, %edi;andl $, %edi;movl -(%ebp), %eax;movl %edi, %edx;shll $, %edx": 1,
                "movl %edx, (%eax,%ebx,);testl %esi, %esi;setne -(%ebp);movl -(%ebp), %eax;movzbl -(%ebp), %edx": 1,
                "movzbl (%eax,%ebx,), %ecx;andl $-, %ecx;orl %edx, %ecx;movb %cl, (%eax,%ebx,);movl -(%ebp), %eax": 1,
                "movl (%eax,%ebx,), %ecx;andl $, %ecx;orl %ecx, %edx;movl %edx, (%eax,%ebx,);movl -(%ebp), %eax": 1,
                "andl $, %ebx;orl %ebx, %ecx;movl %ecx, (%eax);orl $, %ecx;movb %cl, (%eax)": 1,
                "movl %esp, %ebp;pushl %ebx;subl $, %esp;movl $, -(%ebp);movb $, -(%ebp)": 1,
                "movl %ebx, (%esp);movl $, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movzwl -(%ebp), %eax;shll $, %eax": 6,
                "movl %edx, ;testl %eax, %eax;jne  <.text+>;movl $, (%esp);calll - <.text+>": 1,
                "pushl %ebx;subl $, %esp;movl , %ebx;shll $, %ebx;orl $, %ebx": 1,
                "movb $, (%eax);movb $-, (%eax);movb $-, (%eax);movb $, (%eax);movw $, (%eax)": 4,
                "movb $-, (%eax);movb $-, (%eax);movb $, (%eax);movw $, (%eax);movw %bx, (%eax)": 1,
                "movb $, (%eax);shrl $, %ebx;movb %bl, (%eax);movw $, (%eax);movw $, (%eax)": 1,
                "movb %bl, (%eax);movw $, (%eax);movw $, (%eax);movb $-, (%eax);movb $-, (%eax)": 1,
                "movw $, (%eax);movb $, (%eax);movb $-, (%eax);movb $, (%eax);movb $, (%eax)": 6,
                "movw $, (%eax);movb $, (%eax);movb $, (%eax);movb $, (%eax);movb $, (%eax)": 1,
                "cmpl $, %eax;jne  <.text+>;movl $, (%esp);addl $, %ebx;movl %ebx, (%esp)": 1,
                "leal (%ebx), %eax;movl %eax, %ebx;cmpl $, %eax;jne - <.text+>;movl $, (%esi)": 1,
                "movl $, (%esi);movl $, (%esi);movl $, (%esi);movl $, (%esi);leal -(%ebp), %esp": 1,
                "subl $, %esp;movl %esi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;testb %al, %al": 1,
                "movl %esi, (%esp);leal (%ebx,%ebx,), %eax;leal (,%eax,), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 1,
                "movl , %eax;movl , %ebx;testl %ecx, %ecx;je  <.text+>;testl %eax, %eax": 1,
                "movzbl %al, %eax;subl $, %eax;movb $, %al;addl $, %eax;movl %eax, ": 1,
                "movl $, ;movw $, %bx;movl $, %edx;movl %ebx, %eax;mull %edx": 1,
                "movl %eax, ;movb $, ;jmp  <.text+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax;je  <.text+>;movl $, (%esp);calll - <.text+>": 1,
                "movl %eax, ;testl %eax, %eax;je  <.text+>;movl $, ;movl $, (%esp)": 1,
                "cmpl $, ;je  <.text+>;cmpl $, ;jne  <.text+>;movl $, ": 1,
                "movl %ecx, (%esp);movl $, (%esp);movl %edx, (%esp);movl %edi, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %eax, (%esp);calll - <.text+>;movl %eax, (%esp);calll - <.text+>;subl $, %esp": 1,
                "movl (%ebx), %eax;movl %eax, (%esp);calll *(%ebx);subl $, %esp;testb %al, %al": 1,
                "subl $, %esp;testb $, (%esi);jne - <.text+>;movzbl (%esi), %eax;andb $, %al": 1,
                "cmpl $, %eax;sete %bl;movl %esi, (%esp);calll - <.text+>;subl $, %esp": 1,
                "cmpl (%ebx), %edx;ja  <.text+>;jb  <.text+>;cmpl (%ebx), %eax;jae  <.text+>": 1,
                "movl (%ebx), %esi;movl %esi, -(%ebp);cmpl $, -(%ebp);je  <.text+>;movl $, (%esp)": 1,
                "movl -(%ebp), %ecx;addl %esi, %ecx;movl %ecx, -(%ebp);movl (%ebx), %eax;movl %eax, (%esp)": 1,
                "testl %esi, %esi;je  <.text+>;movl $, (%esp);movl $, (%esp);calll - <.text+>": 1,
                "movl $, %eax;jmp  <.text+>;movl %eax, %edi;movl $, -(%ebp);testb $, %al": 1,
                "movl (%ebx), %ecx;movl %ecx, (%edx);movl $, (%edx);movl %esi, (%edx);movb $, (%edx)": 1,
                "subl $, %esp;movl $, %eax;jmp  <.text+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "movl $, %eax;jmp  <.text+>;movl (%ebp), %eax;movl %eax, (%esp);movl %esi, (%esp)": 1,
                "leal -(%ebp), %eax;movl %eax, (%edx);movb $, (%edx);movl %edx, (%esp);movl %ebx, (%esp)": 1,
                "movl $, %ecx;testl %eax, %eax;je  <.text+>;movl %ebx, (%eax);movl %edi, %edx": 1,
                "movl %eax, (%esp);calll - <.text+>;movl $, %ecx;movl %ecx, %eax;movl -(%ebp), %ebx": 1,
                "movl $, (%edx);movl (%ebx), %eax;movl %eax, (%edx);movl $, (%edx);movl $, (%edx)": 1,
                "leave;retl $;pushl %ebp;movl %esp, %ebp;pushl %ebx": 7,
                "calll - <.text+>;movl %ebx, %eax;jmp  <ScsiPortGetDeviceBase+>;movl $, %eax;movl -(%ebp), %ebx": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;cmpl $, (%ebx);jne  <ScsiPortGetSrb+>;movl $, (%ebx)": 1,
                "movl $, (%esp);calll - <.text+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax": 2,
                "movl %esi, (%ebx);movl $, %eax;jmp  <ScsiPortGetSrb+>;movl $, (%ebx);movl $, %eax": 1,
                "movl $, %eax;jmp  <ScsiPortGetSrb+>;movl $, (%ebx);movl $, %eax;jmp  <ScsiPortGetSrb+>": 1,
                "movl $, %eax;cmpl $, -(%ebx);jne  <ScsiPortGetUncachedExtension+>;cmpl $, -(%ebx);jne  <ScsiPortGetUncachedExtension+>": 1,
                "movl %eax, -(%ebx);movl (%ebp), %eax;movl %eax, (%esp);leal -(%ebx), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);leal -(%ebx), %eax;movl %eax, (%esp);calll - <ScsiPortGetSrb+>": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl %ebx, (%esp);calll - <.text+>;leal -(%ebp), %eax": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <ScsiPortGetVirtualAddress+>;leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "je  <ScsiPortGetVirtualAddress+>;movl $, %ebx;leal -(%ebp), %edi;movl %ebx, %edx;shll $, %edx": 1,
                "movl %edi, (%esp);calll - <.text+>;addl $, %ebx;movl -(%ebp), %eax;cmpl %ebx, (%eax)": 1,
                "ja - <ScsiPortGetVirtualAddress+>;movl %eax, (%esp);calll - <.text+>;subl $, %esp;movl -(%ebp), %eax": 1,
                "movzbl (%edx), %ecx;andl $, %ecx;orl %ecx, %eax;movb %al, (%edx);movb $, (%edx)": 1,
                "movb $, (%edx);movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <.text+>": 1,
                "movl %ecx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl $, (%esp);leal -(%ebp), %edx": 1,
                "cmpb $, %al;ja  <ScsiPortGetVirtualAddress+>;cmpb $, %al;jne  <ScsiPortGetVirtualAddress+>;jmp  <ScsiPortGetVirtualAddress+>": 1,
                "jne  <ScsiPortGetVirtualAddress+>;jmp  <ScsiPortGetVirtualAddress+>;cmpb $, %al;je  <ScsiPortGetVirtualAddress+>;cmpb $, %al": 1,
                "movl %eax, (%esp);movl (%esi), %eax;movl (%esi), %edx;movl %eax, (%esp);movl %edx, (%esp)": 2,
                "movl %eax, (%ecx);movb $, (%ecx);addl $, -(%ebp);jmp  <ScsiPortGetVirtualAddress+>;movl -(%ebp), %eax": 1,
                "movl %eax, (%edx);movl (%esi), %eax;movl %eax, (%edx);movzwl (%esi), %eax;cmpw $, %ax": 1,
                "andl $-, %edx;movl %edx, %edi;orl %eax, %edi;movl (%ebp), %edx;movzbl (%edx), %edx": 1,
                "movl %edx, %edi;orl %eax, %edi;movl (%ebp), %edx;movzbl (%edx), %edx;movl %edx, %ebx": 1,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movzwl (%esi), %eax;movl %eax, (%esp);movl (%esi), %eax": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax;jne  <ScsiPortGetVirtualAddress+>;movzwl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);movl $, (%esp);movl $, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp": 1,
                "movl %eax, (%esp);calll - <.text+>;movl %eax, %esi;testl %eax, %eax;je  <ScsiPortInitialize+>": 1,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl $, (%esi);movl (%ebx), %eax;movl %eax, (%esi)": 1,
                "calll - <.text+>;testl %eax, %eax;je  <ScsiPortInitialize+>;movl %eax, %edi;movl $, (%esp)": 1,
                "leal -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <ScsiPortInitialize+>;cmpl $, -(%ebp);jne  <ScsiPortInitialize+>;movl $, (%esp);movl %esi, (%esp)": 1,
                "movl $, %eax;jmp  <ScsiPortInitialize+>;movzbl -(%ebp), %eax;cmpb $-, %al;jbe  <ScsiPortInitialize+>": 1,
                "jne  <ScsiPortInitialize+>;jmp  <ScsiPortInitialize+>;movl $, (%esp);movl %esi, (%esp);movl , %eax": 1,
                "andl $, (%eax);jmp  <ScsiPortNotification+>;movl (%ebp), %eax;orl $, -(%eax);jmp  <ScsiPortNotification+>": 1,
                "jmp  <ScsiPortNotification+>;movl (%ebp), %eax;orl $, -(%eax);jmp  <ScsiPortNotification+>;movl $, (%esp)": 1,
                "pushl %edi;movzwl (%ebp), %edx;movl (%ebp), %edi;movl (%ebp), %ecx;rep  insl %dx, %es:(%edi)": 2,
                "movzwl (%ebp), %edx;movl (%ebp), %edi;movl (%ebp), %ecx;rep  insl %dx, %es:(%edi);popl %edi": 2,
                "movzwl (%ebp), %edx;movl (%ebp), %edi;movl (%ebp), %ecx;rep  insw %dx, %es:(%edi);popl %edi": 2,
                "movb %al, (%edx);popl %ebp;retl $;pushl %ebp;movl %esp, %ebp": 3,
                "movl %esp, %ebp;pushl %edi;pushl %ebx;subl $, %esp;movl $, -(%ebp)": 1,
                "calll - <.text+>;testb %al, %al;jne  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;movl (%eax), %edx": 1,
                "subl $, %esp;movl $, %edx;testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %edx": 1,
                "movl $, (%esp);movl $, (%esp);calll *%eax;subl $, %esp;movl $, %edx": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);movw $, %ax": 1,
                "jmpl *;orl %esi, (%edx);xorb $-, -(%ebx);lock;movl %eax, ": 1,
                "pushl %ebp;movl %esp, %ebp;pushal;pushl %es;movl (%ebp), %eax": 1,
                "pushal;pushl %es;movl (%ebp), %eax;shll $, %eax;movw (%ebp), %ax": 1,
                "movw %ax, ;movl (%ebp), %eax;andl $, %eax;movw %ax, ;movw $, %bx": 2,
                "movl %ebp, %esp;popl %ebp;movw , %ax;retl;movw $, %bx": 1,
                "movl %esp, ;ljmpl $, $;nop;addb %ch, (%edi);orb $, (%ecx)": 1,
                "addb %al, (%eax);addb %bl, -(%esi);addb %al, (%eax);addb %dl, (%edx);decl %eax": 1,
                "jmp - <ScsiPortWriteRegisterUshort+>;pushl %esi;pushl $;popl %ecx;xorl %edx, %edx": 1,
                "movl %esi, %edi;xorl %eax, %eax;movw (%esi), %ax;shll $, %eax;movw (%esi), %ax": 1,
                "pushl %es;movl (%ebp), %esi;movb (%esi), %al;movb %al, ;movl (%ebp), %eax": 1,
                "pushl %ebp;pushl %ebx;pushl %esi;pushl %edi;pushl %fs": 1,
                "movl %dr, %eax;pushl %eax;movl %dr, %eax;pushl %eax;movl %dr, %eax": 8,
                "orl $, %eax;movl %eax, %dr;popl %eax;retl;pushl %eax": 11,
                "movl (%esp), %ecx;movl $, %esi;movl $, %edi;rep  movsb (%esi), %es:(%edi);movw $, %bx": 1,
                "movb %dl, (%eax);movl (%ebp), %edx;movl (%edx), %edx;movl %edx, (%esp);movzwl (%eax), %eax": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl $, %eax;leave;retl $": 3,
                "shrl $, %edx;shll $, %edx;movzbl (%eax), %ecx;andl $, %ecx;orl %ecx, %edx": 6,
                "shll $, %edx;movzbl (%eax), %ecx;andl $, %ecx;orl %ecx, %edx;movb %dl, (%eax)": 6,
                "movl (%ebp), %edx;movl %eax, (%edx);movl $, %eax;leave;retl $": 1,
                "movl (%ebp), %edx;movw %ax, (%edx);movl $, %eax;leave;retl $": 1,
                "movzbl (%ebp), %esi;movl (%ebp), %eax;movl (%eax), %ebx;movl $, (%esp);movl (%ebx), %eax": 1,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl $, (%esp);movl (%ebx), %eax": 1,
                "subl $, %esp;movl $, %ecx;calll - <.text+>;movzbl %bl, %ecx;calll  <ScsiPortWriteRegisterUshort+>": 1,
                "movzbl %bl, %ecx;calll  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %ebx;leave;retl $": 1,
                "movl $, %ecx;calll  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edx;movb %al, (%edx);movl $, %ecx": 2,
                "movl (%ebp), %eax;movl %eax, (%esp);calll *;subl $, %esp;testl %ebx, %ebx": 1,
                "leal -(%ebp), %ecx;movl %ecx, (%esp);movl (%ebp), %ecx;movl (%ecx), %edx;movl %edx, (%esp)": 1,
                "testb %al, %al;je  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl %ebp, %esp;popl %ebp": 2,
                "movl %eax, (%esp);movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %edi;movl $, (%esp)": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp,%ebx);jmp  <ScsiPortWriteRegisterUshort+>;cmpl $, -(%ebp,%ebx);je  <ScsiPortWriteRegisterUshort+>": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl (%ebp), %ecx;movl %ecx, (%esp);calll - <ScsiPortWriteRegisterUshort+>": 2,
                "movl $, (%esp);movl %edi, (%esp);leal -(%ebp,%esi,), %eax;movl %eax, (%esp);movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;shll $, %eax;leal (%eax), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%edi), %eax;movl (%ebp), %ecx;movl (%ecx), %edx;movl %edx, (%eax);movl (%edi), %eax": 1,
                "je  <ScsiPortWriteRegisterUshort+>;testb $, %al;jne  <ScsiPortWriteRegisterUshort+>;movb $, (%esi);movb $, (%esi)": 1,
                "movl $, (%esp);movl -(%ebp,%ebx,), %eax;movl %eax, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp": 2,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;subl $, %esp;movl $, %eax": 6,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax;leal -(%ebp), %esp": 9,
                "movl (%ebp), %eax;movl %eax, %esi;cmpl $, %eax;jbe  <ScsiPortWriteRegisterUshort+>;movl $, %esi": 1,
                "movl %eax, %ebx;leal -(%ebp,%edi), %eax;movl %eax, -(%ebp);movl %ebx, (%esp);movl (%ebp), %eax": 1,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl %ebx, (%esp);movl %edi, (%esp);movl -(%ebp), %eax": 1,
                "movl (%ebp), %edx;movl $, %eax;testl %edx, %edx;je  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax": 1,
                "addl %eax, %edx;testb $, %cl;je  <ScsiPortWriteRegisterUshort+>;movw $, (%edx);addl $, %edx": 1,
                "cmpl $, (%edi);jne - <ScsiPortWriteRegisterUshort+>;jmp - <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %edx;movl %edx, ": 1,
                "movl %edi, -(%ebp);movl (%ebp), %ebx;cmpl $-, %ebx;sete %al;movzbl %al, %eax": 1,
                "movl (%ebp), %ebx;movl (%ebp), %esi;movl (%ebx), %eax;testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>": 1,
                "addl $, %eax;movl %eax, (%esp);addl $, %edx;movl %edx, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl (%ebx), %eax;movl (%esi), %edx;movl %edx, (%ebx);movl %eax, (%esi)": 1,
                "leal (%edx), %eax;testb %bl, %bl;je  <ScsiPortWriteRegisterUshort+>;addl $, (%edx);jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 7,
                "movl $, (%esp);calll - <.text+>;subl $, %esp;leave;rep  retl": 2,
                "subl $, %edx;cmpl %edx, %eax;je  <ScsiPortWriteRegisterUshort+>;movl (%eax), %eax;cmpl $, %eax": 1,
                "movl $, ;movl $, (%esp);movl $, (%esp);movl $, (%esp);calll - <.text+>": 1,
                "nop;pushl %ebp;movl %esp, %ebp;pushl %edi;movzwl (%ebp), %edx": 1,
                "subl $, %esp;movl (%ebp), %edi;leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll *;subl $, %esp": 1,
                "movl %eax, (%ebx);movl -(%ebp), %eax;movl (%eax), %edi;movl $, %edx;testl $, %edi": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movb $, (%edi);movl -(%ebp), %eax;movl (%eax), %eax;movw $, (%eax)": 1,
                "movl -(%ebp), %eax;movl (%eax), %edx;movl $, (%edx);movl $, (%edx);movl (%eax), %edx": 1,
                "cmpl $, ;je  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, %ebx;testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "subl $, %esp;movl %eax, %esi;movl %ebx, %ecx;calll *;jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "movl $, (%esp);calll - <.text+>;movl $, %esi;testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>": 1,
                "movl (%ebp), %edx;movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp);movl %esi, (%esp)": 1,
                "movl %ebx, %ecx;calll *;movl %esi, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl (%eax), %edx;movl (%eax), %ecx;calll *;movl %eax, %ebx;movl $, %edi": 1,
                "movl %ebx, %ecx;calll *;movl %edi, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %edx;movl (%ebp), %ecx": 4,
                "subl $, %esp;movl (%ebp), %edi;calll  <ScsiPortWriteRegisterUshort+>;cmpb $, %al;jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "movl (%ebp), %eax;movzbl (%eax), %edx;movl $, %eax;subl (%ebp), %eax;cmpl %eax, %edx": 1,
                "movl %esi, (%esp);movl (%ebp), %edx;movzbl (%edx), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl %ebx, (%esp);movl %eax, (%esp);movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 2,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %ecx, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp": 1,
                "cmpl $, %ebx;jne - <ScsiPortWriteRegisterUshort+>;jmp - <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %edx;movl (%ebp), %eax": 1,
                "jmp - <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %edx;movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax": 1,
                "movl -(%ebp), %edx;movl (%ebp), %eax;movl %edx, (%eax);movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %ebx;movl (%ebx), %ecx;movl %ecx, %ebx": 1,
                "movl (%ebp), %ebx;movl (%ebx), %ecx;movl %ecx, %ebx;addl $, %ebx;je  <ScsiPortWriteRegisterUshort+>": 1,
                "cmpl %eax, (%ebx);leal (%esi), %esi;jg  <ScsiPortWriteRegisterUshort+>;jl  <ScsiPortWriteRegisterUshort+>;cmpl %edx, (%ebx)": 1,
                "movl %esi, %eax;movl %edi, %edx;addl (%ebx), %eax;adcl (%ebx), %edx;movl %eax, -(%ebp)": 1,
                "movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;leal (%eax), %ebx;movl $, %edx;subl %eax, %edx": 1,
                "calll - <.text+>;calll  <ScsiPortWriteRegisterUshort+>;movl $, %eax;leave;retl $": 2,
                "movl %eax, (%esp);movl %ebx, (%esp);movl %esi, (%esp);movl %edi, (%esp);movl (%ebp), %edx": 1,
                "movl $, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "jmp - <ScsiPortWriteRegisterUshort+>;pushl %ebp;movl %esp, %ebp;movl $, %eax;popl %ebp": 1,
                "movl %esp, %ebp;cli;hlt;popl %ebp;retl": 1,
                "retl;pushl %ebp;movl %esp, %ebp;int;popl %ebp": 1,
                "movl (%ebp), %edx;movb %dl, (%eax,%eax);movl (%ebp), %edx;movb %dl, (%eax,%eax);popl %ebp": 1,
                "nop;pushl %ebp;movl %esp, %ebp;movl $, %ecx;calll - <ScsiPortWriteRegisterUshort+>": 1,
                "movzbl (%ecx), %ecx;calll - <ScsiPortWriteRegisterUshort+>;popl %ebp;retl;pushl %ebp": 1,
                "calll - <ScsiPortWriteRegisterUshort+>;movb %al, (%ebx);movl $, %eax;addl $, %esp;popl %ebx": 2,
                "pushl %ebp;movl %esp, %ebp;pushfl;popl %eax;cli": 1,
                "sbbl %eax, %eax;notl %eax;andl $, %eax;movl (%ebp), %edx;addl $, %edx": 1,
                "andl $, %eax;movl (%ebp), %edx;addl $, %edx;andl $, %edx;outb %al, %dx": 1,
                "movl (%ebp), %ebx;movl $, %eax;movl $, %edx;divl (%ebp);movl %eax, %edi": 1,
                "movzbl %dh, %eax;movzwl -(%ebp), %edx;outb %al, %dx;movl %ecx, %edx;movl %esi, %eax": 1,
                "outb %al, %dx;inb %dx, %al;cmpb %al, %cl;jne  <ScsiPortWriteRegisterUshort+>;addl $, %ecx": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax;andl $, %eax;addl $, %esp;popl %ebx": 1,
                "movl $, %eax;andl $, %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "andl $, %eax;addl $, %esp;popl %ebx;popl %esi;popl %edi": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movl %ebx, (%esi);movl $, (%esi);movw $, (%esi);leal (%ebx), %edx": 1,
                "calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl (%esi), %edx;addl $, %edx;andl $, %edx": 1,
                "addl $, %edx;andl $, %edx;movl $, %eax;outb %al, %dx;movl $, (%esp)": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;leal (%ecx), %edx;inb %dx, %al;andl $, %eax;cmpb $, %al": 1,
                "movb %cl, ;cmpb $, %cl;jne  <ScsiPortWriteRegisterUshort+>;orw $, (%esi);movl %ebx, %eax": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax;movb $, (%eax);movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>": 3,
                "testl %ebx, %ebx;jne - <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl %esi, (%esp);calll - <ScsiPortWriteRegisterUshort+>": 1,
                "movl (%ebp), %ebx;movzbl (%ebp), %esi;movl $, (%esp);movl %ebx, (%esp);calll - <ScsiPortWriteRegisterUshort+>": 1,
                "movl $, (%esp);movl %ebx, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;testb $, %al": 1,
                "cmpl $, %eax;ja  <ScsiPortWriteRegisterUshort+>;movsbl (%edi), %eax;addl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>": 2,
                "movl %edi, %eax;shll $, %eax;subl %edx, %eax;movl -(%ebp), %edx;cmpl (%esi,%eax), %edx": 1,
                "leal (,%edi,), %eax;shll $, %edi;subl %eax, %edi;movl -(%ebp), %eax;shll $, %eax": 1,
                "shrl $, %ebx;leal -(%ebx), %edx;movl %edx, -(%ebp);cmpl $, %edx;jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "subl -(%ebp), %eax;movl -(%ebp), %edx;leal (%edx,%eax), %eax;leal (%esi,%eax,), %ebx;jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "calll - <.text+>;testb $, ;je  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;testb $, ;je  <ScsiPortWriteRegisterUshort+>;movl %edi, (%esp);movl $, (%esp)": 1,
                "leal (%edi,%edx), %eax;leal (%esi,%eax,), %ebx;movl -(%ebp), %eax;movl (%eax,%edi,), %edx;cmpl $-, %edx": 1,
                "movl %edx, (%esp);movl %eax, (%esp);leal (%ebx), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>": 1,
                "subl $, %esp;addl $, (%ebx);movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movl (%ebp), %esi;movl (%ebp), %ebx;cmpb $, (%esi);je  <ScsiPortWriteRegisterUshort+>;movl $, (%esp)": 2,
                "movl -(%ebp), %esi;addl %ebx, %esi;movl (%esi), %eax;testl %eax, %eax;jle  <ScsiPortWriteRegisterUshort+>": 1,
                "subl %eax, %ebx;movl (%edi), %eax;cmpl %eax, %ebx;jb - <ScsiPortWriteRegisterUshort+>;shrl $, %eax": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;movl $, %eax;movl (%ebp), %edx;movl %edx, (%esp);movl %eax, (%esp)": 1,
                "ja  <ScsiPortWriteRegisterUshort+>;movl (%ebx), %edi;movl (%eax), %eax;movl %eax, (%ebx);cmpl $-, %edi": 1,
                "movl %eax, (%ebx);cmpl $-, %edi;jne  <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;movl %eax, %ebx": 1,
                "movl %eax, %ebx;movl (%ebx), %eax;cmpl $-, %eax;jne - <ScsiPortWriteRegisterUshort+>;addl $, -(%ebp)": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl $, %edi;testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %edi, (%esp);movl %esi, (%esp);movl $, (%esp);movl $, (%esp);calll - <.text+>": 1,
                "shrl $, %eax;movl %eax, -(%ebp);movl %edi, %ecx;andl $, %ecx;movl %ecx, -(%ebp)": 1,
                "subl $, %esp;leal (,%ebx,), %eax;shll $, %ebx;subl %eax, %ebx;movl -(%ebp), %eax": 1,
                "leal (%eax,%edi), %ebx;movl (%ebx), %eax;movl -(%ebp), %edx;addl $, %edx;cmpl %edx, %eax": 1,
                "subl -(%ebp), %eax;movl %eax, (%edx);movl -(%ebp), %ecx;movl %ecx, (%ebx);addl %edi, %ecx": 1,
                "negl (%ebx);movl -(%ebp), %eax;subl $, %eax;addl $, %ebx;movl %eax, (%esp)": 1,
                "movl (%ebp), %ebx;cmpb $, (%ebx);je  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl $, (%esp)": 1,
                "calll - <.text+>;subl $, %esp;testb $, ;je  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edi": 1,
                "cmpb $, (%edi);jne  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %ebx;shrl $, %ebx;movl (%ebp), %edi": 1,
                "movl (%ebp), %ebx;shrl $, %ebx;movl (%ebp), %edi;andl $, %edi;shrl $, %edi": 1,
                "leal (%eax,%edi), %esi;cmpl $, (%esi);js  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl $, (%esp)": 1,
                "addl %eax, %ebx;movl %edx, %ecx;movl -(%ebp), %edi;addl (%edi), %ecx;cmpl %ecx, %ebx": 1,
                "movl %edi, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl (%ebx), %eax;addl %eax, (%esi)": 1,
                "cmpl %esi, %ebx;jae  <ScsiPortWriteRegisterUshort+>;movl (%ebx), %eax;testl %eax, %eax;jle  <ScsiPortWriteRegisterUshort+>": 1,
                "addl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax;cmpl %eax, -(%ebp);je  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %edx, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl %eax, %esi;testl %eax, %eax": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <ScsiPortWriteRegisterUshort+>": 1,
                "cmpl $-, %esi;jne  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %edi, (%ebx,%edx,);movl %esi, (%ebx,%edx,);addl $, %eax;movw %ax, (%ebx);movl $, %eax": 1,
                "subl $, %esp;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi;movl -(%ebp), %edi": 1,
                "testw %ax, %ax;je  <ScsiPortWriteRegisterUshort+>;movl $, %ebx;cmpw $, %ax;jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movl (%esi,%ebx,), %ecx;movl %ecx, (%esp);movl %edx, (%esp);calll *%eax": 1,
                "movzwl (%esi), %eax;cmpl %ebx, %eax;ja - <ScsiPortWriteRegisterUshort+>;movw $, (%esi);leal -(%ebp), %esp": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl (%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;movzwl (%ebp), %edx;movzbl (%ebp), %ecx": 1,
                "addl %edx, %edx;movl $, %eax;cmpl %edx, %edi;jne  <ScsiPortWriteRegisterUshort+>;testb %cl, %cl": 1,
                "movzwl %bx, %ebx;testl %ebx, %ebx;je  <ScsiPortWriteRegisterUshort+>;movl (%esi), %ecx;movl (%ebp), %esi": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movl (%esi), %edx;movl (%ebp), %esi;movzwl (%esi), %esi;cmpw %si, (%edx)": 1,
                "subl $, %esp;movl %eax, %edi;movl (%ebp), %edx;movzwl (%edx,%ebx,), %eax;movl %eax, (%esp)": 1,
                "movl (%ebp), %edx;movzwl (%edx,%ebx,), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;leal -(%ebp), %esp": 2,
                "movl $, (%esp);calll - <.text+>;subl $, %esp;testw %di, %di;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "cmpb $, -(%ebp);jne  <ScsiPortWriteRegisterUshort+>;addl %edi, %edi;movzwl %di, %ecx;cmpl (%ebp), %ecx": 1,
                "addl %edi, %edi;movzwl %di, %ecx;cmpl (%ebp), %ecx;jbe  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %ecx": 1,
                "shrl %ecx;testl %ebx, %ebx;je  <ScsiPortWriteRegisterUshort+>;testl %ecx, %ecx;je  <ScsiPortWriteRegisterUshort+>": 2,
                "movw $, (%ebx,%edx,);leal -(%ebp), %esp;popl %ebx;popl %esi;popl %edi": 1,
                "addl $, %ebx;movl %ebx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 2,
                "movl (%ebp), %ebx;cmpl $, (%ebx);jne  <ScsiPortWriteRegisterUshort+>;cmpl $, (%ebx);jne  <ScsiPortWriteRegisterUshort+>": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;cmpl (%ebx), %eax": 1,
                "cmpl (%ebx), %eax;je  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl (%ebx), %esi;movl %ebx, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl %esi, (%esp)": 1,
                "testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "cmpl $, (%esi);jne - <ScsiPortWriteRegisterUshort+>;jmp - <ScsiPortWriteRegisterUshort+>;leal -(%ebp), %esp;popl %ebx": 1,
                "jne - <ScsiPortWriteRegisterUshort+>;jmp - <ScsiPortWriteRegisterUshort+>;leal -(%ebp), %esp;popl %ebx;popl %esi": 2,
                "movl %eax, %edi;movl $, %edx;testb $, %al;je  <ScsiPortWriteRegisterUshort+>;movb $, (%eax)": 1,
                "movl $, (%ebx,%eax,);addl $, %eax;cmpl $, %eax;jne - <ScsiPortWriteRegisterUshort+>;movb $, %al": 1,
                "movb $, %al;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "movl $, %edx;jmp  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "movl %eax, (%ebx);testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl %esi, (%esp)": 1,
                "movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl $, (%esp);movl $, (%esp)": 1,
                "calll - <.text+>;movl $, (%esp);movl (%ebx), %eax;movl %eax, (%esp);calll *(%ebx)": 1,
                "movl %eax, (%esp);calll *(%ebx);subl $, %esp;movl $, %edx;jmp  <ScsiPortWriteRegisterUshort+>": 5,
                "movl %esi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl (%edi), %eax;cmpl $, %eax;jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "addl $, %edx;addl $, %eax;addl $, %esi;movl -(%ebp), %ecx;movl (%ecx), %ecx": 1,
                "addl $, %ebx;shll $, %esi;movl %esi, (%esp);movl %eax, (%esp);movl %ebx, (%esp)": 1,
                "movb $, (%ebx);movb $, (%ebx);movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax": 1,
                "movl (%esi), %eax;shll $, %eax;cmpl $, %eax;jbe  <ScsiPortWriteRegisterUshort+>;movl $, (%esp)": 1,
                "shll $, %eax;subl $, %eax;testl %eax, %ebx;je  <ScsiPortWriteRegisterUshort+>;movl $, (%esp)": 1,
                "movl %eax, (%esp);movl %ebx, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);movl $, %edx;movl %edx, %eax": 1,
                "je  <ScsiPortWriteRegisterUshort+>;cmpl $, %edx;ja  <ScsiPortWriteRegisterUshort+>;movw $, %ax;testl %edx, %edx": 1,
                "cmpl $, %edx;jbe  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;movl $, (%eax);movl %eax, (%ebx)": 1,
                "movl %eax, (%esp);movl %esi, (%esp);leal -(%ebp), %eax;movl %eax, (%esp);movl $, (%esp)": 1,
                "movl (%ebp), %eax;movl %eax, (%ebx);movl (%ebp), %eax;movl %eax, (%ebx);movl $, (%ebx)": 1,
                "movl $, (%ebx);movl $, (%ebx);movl (%ebp), %eax;andl $-, %eax;movl %eax, (%ebx)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;cmpl $, %esi;je  <ScsiPortWriteRegisterUshort+>;cmpl $, %esi;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %ebx, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl %eax, %esi;cmpl $, %eax": 1,
                "subl $, %esp;movl %eax, %esi;cmpl $, %eax;je  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax": 1,
                "jns - <ScsiPortWriteRegisterUshort+>;movl %esi, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 1,
                "cmpw $, %ax;je  <ScsiPortWriteRegisterUshort+>;cmpw $, %ax;jne  <ScsiPortWriteRegisterUshort+>;cmpw $, (%esi)": 2,
                "movl $, %ebx;movl (%esi,%ebx,), %eax;movl %eax, (%esp);movl %edi, (%esp);calll - <ScsiPortWriteRegisterUshort+>": 2,
                "calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;addl $, %ebx;movzwl (%esi), %eax;cmpl %ebx, %eax": 1,
                "movl $, (%esp);calll - <.text+>;subl $, %esp;movl $, (%ebx);movl $, (%ebx)": 1,
                "subl $, %esp;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <ScsiPortWriteRegisterUshort+>": 1,
                "movl %ebx, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl %eax, %esi;movl $, %eax": 1,
                "testl %edx, %edx;je  <ScsiPortWriteRegisterUshort+>;movw $, (%edx);movw $, (%edx);movl $, (%edx)": 1,
                "movl $, (%edx);movl $, (%edx);movl $, (%edx);movl $, (%edx);movl $, (%edx)": 7,
                "movl (%ebp), %eax;addl $, %eax;andl $, %eax;movl %eax, -(%ebp);movl %eax, %edi": 1,
                "movl $, (%esp);movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;movl $, (%eax)": 1,
                "movl (%eax), %edx;shll $, %edx;movl -(%ebp), %ecx;movl %edx, (%ecx);movl -(%ebp), %edx": 1,
                "calll *(%edi);subl $, %esp;movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;testl %ebx, %ebx": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl -(%ebp), %ecx;movl (%ecx), %eax;movl %eax, (%esp)": 1,
                "cmpl -(%ebp), %edx;jne - <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %edi;movl -(%ebp), %eax;subl $, %eax": 1,
                "movl (%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, %ebx;addl $, %ebx;andl $-, %ebx": 1,
                "movl %eax, (%esp);movl %esi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl (%ebp), %ecx": 1,
                "movl (%ecx), %eax;movl %eax, (%esp);calll *(%ecx);subl $, %esp;shll $, %ebx": 1,
                "movl %ebx, (%esp);movl %esi, (%esp);movl (%ebp), %eax;addl $, %eax;movl %eax, (%esp)": 1,
                "pushl %edi;movl (%ebp), %eax;movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ebp), %ebx": 1,
                "movl (%ebp), %ecx;movl (%ebp), %edx;movl (%ebp), %ebx;movl (%ebp), %edi;int $": 1,
                "movl $, (%ecx);testl $, %eax;je  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);movl $, (%esp)": 1,
                "movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edx;subl $, %edx;cmpl $-, %edx": 1,
                "subl $, %edx;cmpl $-, %edx;ja  <ScsiPortWriteRegisterUshort+>;testb $, %al;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;subl $, %edi;cmpl $, %ebx;ja  <ScsiPortWriteRegisterUshort+>": 1,
                "subl $, %edi;cmpl $, %ebx;ja  <ScsiPortWriteRegisterUshort+>;cmpl %edi, %esi;ja  <ScsiPortWriteRegisterUshort+>": 1,
                "movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;movl %eax, (%ecx);movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "cmpw $, (%edx);jne - <ScsiPortWriteRegisterUshort+>;jmp - <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "movzwl (%eax), %ecx;leal (%eax,%ecx), %eax;testl %edx, %edx;je  <ScsiPortWriteRegisterUshort+>;movl (%eax), %ecx": 1,
                "movl (%ebp), %esi;movl (%ebp), %ebx;testl %ebx, %ebx;je  <ScsiPortWriteRegisterUshort+>;movl (%ebx), %edx": 1,
                "cmpl %esi, %eax;ja  <ScsiPortWriteRegisterUshort+>;addl (%edx), %eax;cmpl %eax, %esi;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;movl %esi, (%esp);movl (%ebp), %eax;movl %eax, (%esp)": 1,
                "cmpl (%eax), %edx;jae  <ScsiPortWriteRegisterUshort+>;movl %edx, %esi;movl (%eax,%edx,), %edx;testl %edx, %edx": 1,
                "jmpl *(,%ecx,);movzwl (%eax), %edx;shll $, %edx;addl -(%ebp), %edx;shrl $, %edx": 1,
                "calll - <.text+>;movl $, %ebx;testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>;movl $, (%esp)": 1,
                "addl $, %esi;cmpl %edi, %esi;jne - <ScsiPortWriteRegisterUshort+>;movl %ebx, %eax;addl $, %esp": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;testl %eax, %eax": 4,
                "testl %ebx, %ebx;je  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edx;movl %edx, -(%ebp);subl (%eax), %edx": 1,
                "subl $, %esp;movl %edx, %esi;movl %eax, %edi;movb %cl, -(%ebp);testb %cl, %cl": 1,
                "movl %eax, %edi;movb %cl, -(%ebp);testb %cl, %cl;je  <ScsiPortWriteRegisterUshort+>;movzwl %ax, %eax": 1,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl %eax, %edi;cmpw $, (%esi)": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;cmpw %ax, %di;je  <ScsiPortWriteRegisterUshort+>;addl $, %ebx": 1,
                "addl $, %esi;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %esi;movl %esi, (%esp);movl (%ebx), %eax": 1,
                "cmpw (%ebx), %ax;jae  <ScsiPortWriteRegisterUshort+>;movzwl (%ebx), %eax;testb $, %al;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "movzwl (%ebx), %eax;movzwl %ax, %edi;movzwl %si, %ecx;addl %ecx, %edi;movzwl (%ebx), %ecx": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movzwl %si, %edi;movzwl %dx, %eax;addl %eax, %edi;movzwl (%ebx), %eax": 1,
                "movzbl (%eax), %edx;cmpb $, %dl;jg  <ScsiPortWriteRegisterUshort+>;testb %dl, %dl;jne - <ScsiPortWriteRegisterUshort+>": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;addl $, %eax;movb $, %bl;jmp  <ScsiPortWriteRegisterUshort+>;cmpl $, %ebx": 1,
                "cmpl $, %ebx;nop;je  <ScsiPortWriteRegisterUshort+>;cmpl $, %ebx;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;cmpl $, (%ebp);je  <ScsiPortWriteRegisterUshort+>;movzbl (%eax), %edx;testb %dl, %dl": 1,
                "movzbl (%ebp), %ecx;movl (%ebp), %ebx;movzwl (%ebx), %edx;movl (%ebp), %ebx;movzwl (%ebx), %eax": 2,
                "movzwl %ax, %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl (%eax), %ebx;movl (%ebp), %edx": 1,
                "addl $, %edx;cmpl %edx, %edi;jne - <ScsiPortWriteRegisterUshort+>;movl (%ebp), %ebx;movzwl (%ebx), %eax": 2,
                "jne - <ScsiPortWriteRegisterUshort+>;movl (%ebp), %ebx;movzwl (%ebx), %eax;movl (%ebp), %ebx;movzwl (%ebx), %edx": 2,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl %edi, %eax;leal -(%ebp), %esp;popl %ebx;popl %esi": 2,
                "movl (%ebp), %eax;movl (%eax), %eax;testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>;movl $, (%esp)": 1,
                "movl -(%ebp), %edx;movl (%edx), %edx;movzwl -(%ebp), %edi;cmpw %di, (%edx,%eax,);jne  <ScsiPortWriteRegisterUshort+>": 1,
                "movl (%ebp), %edx;movl (%ebp), %ebx;testl %ebx, %ebx;je  <ScsiPortWriteRegisterUshort+>;movl %ebx, %edi": 2,
                "movw $, (%edx);movl %ebx, (%edx);movl -(%ebp), %ebx;movl -(%ebp), %edi;movl %ebp, %esp": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;testl %ebx, %ebx;je  <ScsiPortWriteRegisterUshort+>": 2,
                "cmpl $, %ebx;je  <ScsiPortWriteRegisterUshort+>;cmpl $, %ebx;jne  <ScsiPortWriteRegisterUshort+>;leal (%esi), %esi": 1,
                "cmpl $, %ebx;je - <ScsiPortWriteRegisterUshort+>;cmpl $, %ebx;jne  <ScsiPortWriteRegisterUshort+>;nop": 1,
                "addl $, %ecx;testl %eax, %eax;jne - <ScsiPortWriteRegisterUshort+>;cmpl %esi, %ecx;je  <ScsiPortWriteRegisterUshort+>": 1,
                "cmpl (%ebp), %eax;jae  <ScsiPortWriteRegisterUshort+>;cmpl %ebx, %ecx;jbe  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax": 1,
                "movsbl (%esi,%ebx), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;addl $, %ebx": 1,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;addl $, %ebx;cmpb %al, -(%ebp)": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;addl $, %ebx;cmpb %al, -(%ebp);je  <ScsiPortWriteRegisterUshort+>": 1,
                "movl $, %esi;jmp  <ScsiPortWriteRegisterUshort+>;movzwl (%edi,%eax,), %ecx;movzwl (%esi,%eax,), %edx;addl $, %eax": 1,
                "movzwl (%edi,%eax,), %ecx;movzwl (%esi,%eax,), %edx;addl $, %eax;cmpw %dx, %cx;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "movl (%edx), %eax;movzwl (%edx), %edx;shrw %dx;je  <ScsiPortWriteRegisterUshort+>;cmpw $, (%eax)": 1,
                "movl $, %ecx;cmpl $, (%ebp);je  <ScsiPortWriteRegisterUshort+>;testw %dx, %dx;je  <ScsiPortWriteRegisterUshort+>": 1,
                "cmpb $, ;je  <ScsiPortWriteRegisterUshort+>;movl %esi, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp": 7,
                "movl %esi, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl %eax, %edi;jmp  <ScsiPortWriteRegisterUshort+>": 4,
                "movl %eax, %edi;jmp  <ScsiPortWriteRegisterUshort+>;movzwl (%esi), %edi;addl $, %edi;shrl %edi": 3,
                "jb  <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;movzwl (%esi), %eax;movl %eax, (%esp);movl (%esi), %eax": 1,
                "movb $, (%edx,%eax);jmp  <ScsiPortWriteRegisterUshort+>;movl $, %esi;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %esi": 2,
                "leal -(%ebp), %edx;movl %edx, (%esp);movzwl %ax, %eax;movl %eax, (%esp);movl (%ebx), %eax": 3,
                "movl %eax, %esi;jmp - <ScsiPortWriteRegisterUshort+>;movl %esi, %eax;leal -(%ebp), %esp;popl %ebx": 3,
                "cmpl $, %eax;jle  <ScsiPortWriteRegisterUshort+>;movl $, %edi;movl (%ebp), %eax;movzwl (%eax), %ebx": 1,
                "orl $, %esi;testb $, -(%ebp);je  <ScsiPortWriteRegisterUshort+>;testl %edi, %edi;jle  <ScsiPortWriteRegisterUshort+>": 1,
                "testl %edi, %edi;jle  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax;leal (%eax,%edi,), %ecx;movl $, %edx": 1,
                "addl $, %eax;cmpl %ecx, %eax;jne - <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %edx": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;movzwl (%eax), %edx;testb %dl, %dl;je  <ScsiPortWriteRegisterUshort+>;addl $, %eax": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %esi;orl $, %esi": 1,
                "ja  <ScsiPortWriteRegisterUshort+>;leal -(%ebx), %ecx;leal -(%esi), %ebx;cmpw $, %bx;jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "jbe  <ScsiPortWriteRegisterUshort+>;leal -(%esi), %ebx;cmpw $, %bx;ja  <ScsiPortWriteRegisterUshort+>;leal -(%esi), %ebx": 1,
                "leal -(%esi), %ebx;jmp  <ScsiPortWriteRegisterUshort+>;leal -(%esi), %ebx;cmpw $, %bx;ja  <ScsiPortWriteRegisterUshort+>": 1,
                "cmpl $, %eax;ja  <ScsiPortWriteRegisterUshort+>;jmpl *(,%eax,);movb %cl, (%edi);jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;addl $, %edx;movl $, %eax": 1,
                "testl %edx, %edx;je  <ScsiPortWriteRegisterUshort+>;testl %ecx, %ecx;je  <ScsiPortWriteRegisterUshort+>;movl $, %eax": 1,
                "ja  <ScsiPortWriteRegisterUshort+>;movl %eax, %edi;movw %ax, (%ebx);cmpb $, -(%ebp);je  <ScsiPortWriteRegisterUshort+>": 3,
                "movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl %eax, %edi;testl %eax, %eax": 3,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl $, %edi;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %edi;jmp  <ScsiPortWriteRegisterUshort+>": 5,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl $, %edi;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %edi;movl %edi, %eax": 3,
                "movl %ebx, (%esp);movl %esi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl %eax, -(%ebp);movl (%ebp), %edx": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl %eax, -(%ebp);movl (%ebp), %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;movzwl (%esi), %eax;movl %eax, (%esp);movl (%esi), %eax;movl %eax, (%esp)": 1,
                "testl %eax, %eax;js  <ScsiPortWriteRegisterUshort+>;movl $, (%esp);leal -(%ebp), %esi;movl %esi, (%esp)": 1,
                "movl %eax, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;movl %ebx, %eax;leal -(%ebp), %esp": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;movl $, (%ebx);movl $, (%ebx);movl $, %esi;jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %edx, (%esp);leal -(%ebp), %edx;movl %edx, (%esp);andl $, %eax;movl %eax, (%esp)": 1,
                "movw $, (%esi);movw $, (%esi);movl $, (%esp);movl $, (%esp);calll - <.text+>": 1,
                "movl $, (%esp);movl $, (%esp);calll - <.text+>;subl $, %esp;movl %eax, (%esi)": 1,
                "calll - <.text+>;subl $, %esp;movl %eax, (%esi);testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>": 2,
                "movzbl (%ebx), %edx;movl %edx, (%esp);movzbl (%ebx), %edx;movl %edx, (%esp);movzbl (%ebx), %edx": 6,
                "movzbl (%ebx), %edx;movl %edx, (%esp);movzwl (%ebx), %edx;movl %edx, (%esp);movzwl (%ebx), %edx": 1,
                "calll - <.text+>;subl $, %esp;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %edi;movl (%ebx), %edx": 1,
                "jbe  <ScsiPortWriteRegisterUshort+>;movl %edx, %eax;movzwl %ax, %eax;shrl %eax;movl %eax, -(%ebp)": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;subl $, %esp;movzwl %di, %edi;movzwl %ax, %eax;subl %eax, %edi": 1,
                "movzwl %di, %edi;movzwl %ax, %eax;subl %eax, %edi;jne  <ScsiPortWriteRegisterUshort+>;subl $, -(%ebp)": 1,
                "jbe  <ScsiPortWriteRegisterUshort+>;movl %ecx, %eax;movzwl %ax, %ecx;movw %ax, (%ebx);movl (%ebx), %ebx": 1,
                "movl (%ebp), %eax;testl %eax, %eax;jne  <ScsiPortWriteRegisterUshort+>;movw $, (%ebx);jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %esi, -(%ebp);movl (%ebp), %esi;movl $, %edx;movl $, %ecx;calll - <.text+>": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax;movw %bx, (%eax);subl $, %ebx;movw %bx, (%eax)": 1,
                "movzwl (%eax,%ebx,), %eax;cmpw $, %ax;ja  <ScsiPortWriteRegisterUshort+>;movl (%edi), %edx;movw %ax, (%edx,%ebx,)": 1,
                "movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;shrw %ax;movzwl %ax, %eax;movl (%ebx), %edx": 1,
                "movl (%ebp), %eax;movl %eax, (%esp);movl %edi, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl %esi, %eax": 1,
                "testl %edx, %edx;je  <ScsiPortWriteRegisterUshort+>;movl %edx, %edi;movl $, %eax;movl $, %ecx": 1,
                "movl (%ebp), %edx;movl (%ebp), %ecx;movzwl (%edx), %ebx;movzwl (%ecx), %eax;cmpw %bx, %ax": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movl (%ebx), %ecx;cmpw $, (%ecx);je  <ScsiPortWriteRegisterUshort+>;movl $, %eax": 1,
                "movl -(%ebp), %eax;movw %ax, -(%ebp);movw $, -(%ebp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;movzbl -(%ebp), %eax;movl %eax, (%esp);leal -(%ebp), %eax;movl %eax, (%esp)": 1,
                "movl (%esp), %edi;movl (%esp), %ecx;shrl $, %ecx;je  <ScsiPortWriteRegisterUshort+>;rep  cmpsl %es:(%edi), (%esi)": 1,
                "andl $, %ecx;je  <ScsiPortWriteRegisterUshort+>;rep  cmpsb %es:(%edi), (%esi);jne  <ScsiPortWriteRegisterUshort+>;movl (%esp), %eax": 1,
                "je  <ScsiPortWriteRegisterUshort+>;subl $, %edi;subl (%esp), %edi;movl %edi, %eax;popl %edi": 1,
                "movl (%esp), %edi;movl (%esp), %ecx;movb (%esp), %al;movb %al, %ah;shll $, %eax": 1,
                "movb %al, %ah;cld;movl %ecx, %edx;andl $, %edx;shrl $, %ecx": 1,
                "addl %ecx, %esi;cmpl $, %ecx;jb  <ScsiPortWriteRegisterUshort+>;movl %ecx, %edx;testl $, %edi": 2,
                "retl $;subl $, %edi;subl $, %esi;jmp - <ScsiPortWriteRegisterUshort+>;testl %ecx, %ecx": 1,
                "addb %al, (%eax);addb %dl, (%eax);nop;nop;nop": 1,
                "shll %cl, %eax;shrl %cl, %eax;notl %eax;andl %eax, (%ebx);jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "andl %edx, (%ebx,%eax,);leal -(%ebp), %esp;popl %ebx;popl %esi;popl %ebp": 1,
                "shrl %cl, %eax;orl %eax, (%ebx);jmp  <ScsiPortWriteRegisterUshort+>;orl %eax, (%ebx);addl $, %ebx": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;orl %eax, (%ebx);addl $, %ebx;subl %edx, %esi;movl $, (%esp)": 1,
                "movl $, %edx;movl %esi, %ecx;shll %cl, %edx;movl %edx, %esi;notl %esi": 1,
                "movl $, %eax;cmpl %ebx, %ecx;ja  <ScsiPortWriteRegisterUshort+>;cmpl %ecx, %edx;jae  <ScsiPortWriteRegisterUshort+>": 2,
                "cmpl %ebx, %ecx;ja  <ScsiPortWriteRegisterUshort+>;cmpl %ecx, %edx;jae  <ScsiPortWriteRegisterUshort+>;movl (%esi), %esi": 2,
                "jae  <ScsiPortWriteRegisterUshort+>;movl (%esi), %esi;movl %esi, -(%ebp);movl %edx, %eax;shrl $, %eax": 2,
                "movl %edx, %ecx;andl $, %ecx;subl %edx, %ebx;movl %ebx, -(%ebp);movl (%ebp), %eax": 2,
                "shrl %cl, %edi;shll %cl, %edi;addl $, %esi;cmpl %esi, %eax;jbe  <ScsiPortWriteRegisterUshort+>": 2,
                "leal (%esi,%eax,), %eax;movl (%esi), %edi;notl %edi;shrl %cl, %edi;shll %cl, %edi": 1,
                "jbe  <ScsiPortWriteRegisterUshort+>;movl (%esi), %edi;addl $, %esi;xorl $-, %edi;jne  <ScsiPortWriteRegisterUshort+>": 3,
                "addl %ecx, %eax;addl $, %edx;cmpl %ebx, %edx;jne - <ScsiPortWriteRegisterUshort+>;movl %ebx, %edx": 1,
                "jne - <ScsiPortWriteRegisterUshort+>;movl %ebx, %edx;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax;movzbl (%edx), %edx": 1,
                "movl (%eax), %eax;movl %eax, -(%ebp);movl (%ebp), %edi;cmpl %edi, %eax;jb  <ScsiPortWriteRegisterUshort+>": 2,
                "jbe  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp);movl %eax, -(%ebp)": 1,
                "jae - <ScsiPortWriteRegisterUshort+>;cmpl $, (%ebp);je  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebx), %edx;cmpl %eax, %edx;ja  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edi;movl %eax, (%edi)": 1,
                "addl $, %esi;xorl $-, %edi;jne  <ScsiPortWriteRegisterUshort+>;cmpl %esi, %edx;ja - <ScsiPortWriteRegisterUshort+>": 2,
                "testl %edi, %edi;je  <ScsiPortWriteRegisterUshort+>;bsfl %edi, %edi;movl $, %edx;subl %eax, %edx": 1,
                "movl %ebx, -(%ebp);movl -(%ebp), %ebx;addl %eax, %ebx;movl (%ebp), %edi;movl %ebx, (%edi)": 1,
                "movl (%esi), %edi;shrl %cl, %edi;shll %cl, %edi;addl $, %esi;testl %edi, %edi": 1,
                "jbe  <ScsiPortWriteRegisterUshort+>;movl (%esi), %edi;addl $, %esi;cmpl %esi, %edx;jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %ecx, %edx;shrl $, %edx;leal (%eax,%edx,), %edx;notl %ecx;andl $, %ecx": 1,
                "shrl %cl, %edi;subl $, %edx;testl %edi, %edi;jne  <ScsiPortWriteRegisterUshort+>;cmpl %edx, %eax": 1,
                "movl -(%ebp), %esi;jmp  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);movl $, %ebx;movl $, -(%ebp)": 1,
                "jbe  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %ecx;movl %ecx, (%edx);movl %eax, (%edx);movl $, %edx": 1,
                "cmpl (%ebp), %edx;jne - <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edx;movl %edx, -(%ebp);addl %eax, -(%ebp)": 1,
                "jne - <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edx;movl %edx, -(%ebp);addl %eax, -(%ebp);jmp - <ScsiPortWriteRegisterUshort+>": 1,
                "addl %eax, -(%ebp);jmp - <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;leal -(%ebp), %esp;popl %ebx": 1,
                "testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>;leal (%ebx,%ebx), %edx;movl %edx, (%eax);testl %ebx, %ebx": 1,
                "movl (%ebp), %eax;movzwl , %edx;movw %dx, (%eax);movl (%ebp), %eax;movzwl , %edx": 1,
                "movl %eax, (%esp);leal (%ebx), %eax;movl %eax, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movzwl (%esi), %eax": 1,
                "movl %edi, -(%ebp);movl (%ebp), %eax;movl (%ebp), %edi;movl (%ebp), %ebx;movl (%ebp), %esi": 1,
                "movl (%ebp), %edi;movl %eax, (%edi);testl %ecx, %ecx;je  <ScsiPortWriteRegisterUshort+>;movl $, %eax": 1,
                "movl (%ebp), %eax;shrl %eax;movl %eax, -(%ebp);je  <ScsiPortWriteRegisterUshort+>;cmpl %edi, %ebx": 1,
                "je  <ScsiPortWriteRegisterUshort+>;cmpl %edi, %ebx;jae  <ScsiPortWriteRegisterUshort+>;leal (%esi), %eax;movl $, %esi": 1,
                "testb %cl, %cl;js  <ScsiPortWriteRegisterUshort+>;movzbl %cl, %ecx;movw %cx, -(%eax);movl %edx, %ebx": 1,
                "addl $, %eax;cmpl -(%ebp), %ebx;jb - <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %esi": 1,
                "je  <ScsiPortWriteRegisterUshort+>;leal (%esi,%esi), %eax;movl (%ebp), %edi;movl %eax, (%edi);jmp  <ScsiPortWriteRegisterUshort+>": 2,
                "jbe  <ScsiPortWriteRegisterUshort+>;movl %ebx, %esi;cmpl $, (%ebp);je  <ScsiPortWriteRegisterUshort+>;leal (%esi,%esi), %ecx": 1,
                "shrl %ecx;movl %ecx, -(%ebp);je  <ScsiPortWriteRegisterUshort+>;cmpl %edi, %eax;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %edi, -(%ebp);movzbl %bl, %ebx;movzwl (%edi,%ebx,), %edi;movw %di, -(%ebp);testw %di, %di": 1,
                "movw %ax, -(%edx);movl %ecx, %eax;jmp  <ScsiPortWriteRegisterUshort+>;cmpl %ecx, -(%ebp);jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "setne ;movl (%eax), %edx;movl %edx, ;movzwl (%eax), %edx;movw %dx, ": 2,
                "movl (%eax), %edx;movl %edx, ;movl (%eax), %edx;movl %edx, ;movzwl (%eax), %edx": 1,
                "pushl %esi;pushl %ebx;subl $, %esp;movl (%ebp), %esi;movl (%ebp), %ecx": 1,
                "movl (%ebp), %esi;movl (%ebp), %ecx;movl (%ebp), %ebx;movl (%ebp), %eax;movl (%ebp), %edi": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;leal (%ebx,%ebx), %edx;cmpl (%ebp), %edx;jb  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %ebx": 1,
                "shrl %ecx;cmpl $, (%ebp);je  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax;movl %ecx, (%eax)": 1,
                "addl $, %eax;cmpl %ecx, %eax;jne - <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edx": 1,
                "addl $, %esi;cmpw $, %cx;ja  <ScsiPortWriteRegisterUshort+>;movb %cl, (%ebx);addl $, %ebx": 1,
                "cmpw $, %cx;ja  <ScsiPortWriteRegisterUshort+>;movb %cl, (%ebx);addl $, %ebx;jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "jbe  <ScsiPortWriteRegisterUshort+>;movl %edi, %ecx;movb %cl, (%ebx);movzbl -(%ebp), %ecx;movb %cl, (%ebx)": 1,
                "movl %esp, %ebp;pushl %esi;pushl %ebx;movl (%ebp), %edx;movl (%ebp), %eax": 1,
                "cmpw $, %cx;jbe  <ScsiPortWriteRegisterUshort+>;movzwl %cx, %ecx;cmpb $, (%esi,%ecx,);je  <ScsiPortWriteRegisterUshort+>": 1,
                "movl (%ebp), %edx;addl %edx, %edx;movl (%ebp), %esi;cmpl (%ebp), %edx;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "addl %edx, %edx;movl (%ebp), %esi;cmpl (%ebp), %edx;jb  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %esi": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;cmpl $, %edx;jbe  <ScsiPortWriteRegisterUshort+>;movl %edi, %ebx;movb %bl, (%eax)": 1,
                "cmpl $, %edx;jbe  <ScsiPortWriteRegisterUshort+>;movl %edi, %ebx;movb %bl, (%eax);movzbl -(%ebp), %ebx": 1,
                "movzbl %ah, %ecx;movl %eax, %ebx;shrw $, %bx;andl $, %ebx;addw (%edx,%ecx,), %bx": 1,
                "movl (%ebp), %eax;movl (%ebp), %edx;movl (%ebp), %esi;cmpw $, (%edi);jne  <ScsiPortWriteRegisterUshort+>": 1,
                "subl $, %esp;movzwl %ax, %eax;movl (%edi), %edx;movzbl (%edx,%eax), %eax;movb %al, (%ebx)": 1,
                "addl $, %esi;cmpl -(%ebp), %ebx;jne - <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;movl $, (%esp)": 1,
                "movl (%ebp), %edi;cmpl (%ebp), %eax;jb  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edi;shrl %edi": 1,
                "cmpw $, %ax;ja  <ScsiPortWriteRegisterUshort+>;movb %al, (%ebx);addl $, %ebx;jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;addl $, %esi;addl $, (%ebp);movzbl (%esi), %ebx;movsbl %bl, %eax": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;cmpl %eax, %edi;je - <ScsiPortWriteRegisterUshort+>;movzbl (%esi), %eax;movl %eax, (%esp)": 1,
                "movl $, (%esp);movzwl (%ebp), %eax;movl %eax, (%esp);calll - <.text+>;leave": 11,
                "movl $, %eax;cmpl $, %ebx;jg  <ScsiPortWriteRegisterUshort+>;movl %ebx, (%esp);calll - <ScsiPortWriteRegisterUshort+>": 2,
                "movl %eax, %edx;movl $, %eax;testl %edx, %edx;jne  <ScsiPortWriteRegisterUshort+>;cmpl $, %ebx": 2,
                "rep  movsb (%esi), %es:(%edi);movl (%ebp), %eax;popl %edi;popl %esi;leave": 1,
                "cld;movl (%ebp), %eax;popl %edi;popl %esi;leave": 1,
                "leave;retl;subl $, %edi;subl $, %esi;jmp - <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;testb %al, %al;jne - <ScsiPortWriteRegisterUshort+>;movl $, %esi;movl %esi, %eax": 1,
                "testb %al, %al;jne - <ScsiPortWriteRegisterUshort+>;movl $, %esi;movl %esi, %eax;decl %eax": 1,
                "jne - <ScsiPortWriteRegisterUshort+>;movl $, %esi;movl %esi, %eax;decl %eax;popl %esi": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %eax;movzbl (%eax), %esi": 1,
                "movl (%esp), %esi;movl (%esp), %ecx;xorl %eax, %eax;cld;decl %ecx": 1,
                "lodsb (%esi), %al;stosb %al, %es:(%edi);testb %al, %al;jne - <ScsiPortWriteRegisterUshort+>;rep  stosb %al, %es:(%edi)": 1,
                "movl (%esp), %eax;popl %edi;popl %esi;retl;nop": 5,
                "popl %esi;retl;nop;pushl %ebp;movl %esp, %ebp": 1,
                "movl %eax, %esi;movsbl (%esi), %ebx;addl $, %esi;movl %ebx, (%esp);calll - <ScsiPortWriteRegisterUshort+>": 1,
                "testl $, (%ebp);jne  <ScsiPortWriteRegisterUshort+>;cmpl $, %ebx;jne  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %edx": 1,
                "movsbl (%eax), %ebx;addl $, %eax;movl %eax, -(%ebp);movl $, (%ebp);jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "movl $, (%esp);movl $, (%esp);calll  <ScsiPortWriteRegisterUshort+>;movl %eax, -(%ebp);movl %edx, -(%ebp)": 1,
                "cmpl $, %eax;sbbl %eax, %eax;andl $, %eax;addl $, %eax;movl %ebx, %ecx": 1,
                "ja  <ScsiPortWriteRegisterUshort+>;movl $, %eax;testb %al, %al;jne  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax": 1,
                "movl %eax, %esi;movl %edx, %edi;negl %esi;adcl $, %edi;negl %edi": 1,
                "cmpl $, (%ebp);je - <ScsiPortWriteRegisterUshort+>;jmp - <ScsiPortWriteRegisterUshort+>;movl $, %esi;movl $, %edi": 1,
                "calll - <ScsiPortWriteRegisterUshort+>;testl %eax, %eax;jne - <ScsiPortWriteRegisterUshort+>;cmpl $, %ebx;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "jne - <ScsiPortWriteRegisterUshort+>;cmpl $, %ebx;jne  <ScsiPortWriteRegisterUshort+>;movsbl (%esi), %ebx;addl $, %esi": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;movsbl (%esi), %ebx;leal (%esi), %esi;testl $, (%ebp);jne  <ScsiPortWriteRegisterUshort+>": 1,
                "divl (%ebp);movl %edx, -(%ebp);movl %eax, -(%ebp);movl $, -(%ebp);movl $, %edi": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl %ebx, (%esp);calll - <ScsiPortWriteRegisterUshort+>;testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>": 1,
                "jle  <ScsiPortWriteRegisterUshort+>;cmpl -(%ebp), %edi;ja  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;shrl $, %eax": 1,
                "cmpl $, (%ebp);je - <ScsiPortWriteRegisterUshort+>;jmp - <ScsiPortWriteRegisterUshort+>;movl $, %edi;cmpl $, (%ebp)": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;movl $, %eax;testb %bl, %bl;jne  <ScsiPortWriteRegisterUshort+>;movl %edx, -(%ebp)": 2,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl (%ebp), %eax;movl %eax, -(%ebp)": 3,
                "repne  scasb %es:(%edi), %al;decl %edi;lodsb (%esi), %al;stosb %al, %es:(%edi);testb %al, %al": 1,
                "movl $, -(%ebp);movb $, -(%ebp);leal -(%ebp), %ebx;movl %eax, -(%ebp);movl %eax, %edx": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl %ebx, %eax;movzbl -(%ebp), %edx;addl $, %edx;movb %dl, (%ebx)": 1,
                "subl $, %eax;movb $, -(%edx);leal -(%ebp), %edx;subl %eax, %edx;movl %edx, (%esp)": 1,
                "movl (%ebp), %eax;subl $, %eax;cmpl $, %eax;jbe  <ScsiPortWriteRegisterUshort+>;cmpl $, (%ebp)": 1,
                "movl (%ebp), %eax;movb $, (%eax);movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;cmpl $, (%ebp)": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);movb $, -(%ebp);leal -(%ebp), %ebx;movl (%ebp), %eax": 1,
                "calll  <ScsiPortWriteRegisterUshort+>;movl %eax, %esi;movl %edx, %edi;cmpl $, -(%ebp);ja  <ScsiPortWriteRegisterUshort+>": 1,
                "movb $, -(%eax);leal -(%ebp), %ecx;subl %edx, %ecx;cmpl %ecx, (%ebp);jae  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %ecx, (%esp);movl %edx, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <ScsiPortWriteRegisterUshort+>": 1,
                "movb $, -(%ebp);leal -(%ebp), %edi;movl (%ebp), %eax;movl %eax, -(%ebp);movl %eax, %edx": 1,
                "movl %edi, %eax;movzbl -(%ebp), %edx;addl $, %edx;movb %dl, (%edi);subl $, %edi": 1,
                "movl -(%ebp), %edx;movl %eax, (%esp);movl %edx, (%esp);movl %ebx, (%esp);movl %esi, (%esp)": 2,
                "jb  <ScsiPortWriteRegisterUshort+>;movl %ecx, (%esp);movl %edx, (%esp);movl (%ebp), %edx;movl %edx, (%esp)": 1,
                "movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);movb $, -(%ebp);leal -(%ebp), %ecx": 1,
                "movl $, -(%ebp);movb $, -(%ebp);leal -(%ebp), %ecx;movl %ebx, %eax;movl $, %edx": 2,
                "subl $, %ecx;testl %ebx, %ebx;jne - <ScsiPortWriteRegisterUshort+>;movl %edi, %eax;cmpl $, -(%ebp)": 2,
                "leal -(%ebp), %eax;subl %edi, %eax;movl %eax, (%esp);movl %edi, (%esp);movl (%ebp), %eax": 2,
                "jne  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax;shrl $, %eax;testb %al, %al;je  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %edi, (%esp);movl (%ebp), %eax;movl %eax, (%esp);calll - <ScsiPortWriteRegisterUshort+>;movl $, %eax": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %ebx;movl (%ebp), %esi;movb $, -(%ebp)": 1,
                "testb %bl, %bl;je  <ScsiPortWriteRegisterUshort+>;subl $, (%ebp);jne - <ScsiPortWriteRegisterUshort+>;movl $, %eax": 1,
                "nop;pushl %ebp;movl %esp, %ebp;pushl %edi;movl (%ebp), %edi": 1,
                "addl $, %ecx;addl $, %eax;movl %esi, %edx;cmpb %bl, %dl;je  <ScsiPortWriteRegisterUshort+>": 1,
                "subl $, %edi;jne - <ScsiPortWriteRegisterUshort+>;movl $, %eax;movl -(%ebp), %ebx;movl -(%ebp), %esi": 1,
                "orb $, %al;popl %edi;popl %esi;retl;nop": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %ebx;movl %eax, %ecx": 1,
                "ja  <ScsiPortWriteRegisterUshort+>;movsbl %cl, %ebx;leal (%edx), %esi;cmpl %esi, %ebx;jg  <ScsiPortWriteRegisterUshort+>": 1,
                "movl $, %eax;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax;popl %ebx;popl %esi": 1,
                "movl (%ebp), %edi;testl %ebx, %ebx;je  <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;addl $, %edi": 1,
                "addl $, %edi;movzbl (%edi), %eax;movzbl %al, %ecx;subl $, %ecx;cmpl $, %ecx": 1,
                "movl $, -(%ebp);movl $, -(%ebp);movl $, %edx;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp)": 14,
                "movl -(%ebp), %eax;addl $, %eax;movzbl (%esi), %edx;movb %dl, -(%ebp);movsbl %dl, %ebx": 1,
                "cmpl $, -(%ebp);jle  <ScsiPortWriteRegisterUshort+>;subl $, -(%ebp);movl $, -(%ebp);movl $, -(%ebp)": 2,
                "je  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;cmpl $, -(%ebp);je  <ScsiPortWriteRegisterUshort+>": 2,
                "movl %eax, -(%ebp);movl %edx, %esi;movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp)": 1,
                "movl -(%ebp), %eax;subl %esi, %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, %edx": 1,
                "movl (%ebp), %ecx;addl $, %ecx;movl %ecx, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax": 1,
                "addl $, %ecx;movl %ecx, -(%ebp);movl (%ebp), %eax;movl (%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl -(%ebp), %ecx;movl %eax, (%ecx);movl %edx, (%ecx);movl -(%ebp), %eax": 1,
                "cmpl $, -(%ebp);je  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;negl %eax;jmp  <ScsiPortWriteRegisterUshort+>": 4,
                "movl (%ebp), %eax;movl (%eax), %ecx;cmpl $, -(%ebp);je  <ScsiPortWriteRegisterUshort+>;movzwl -(%ebp), %eax": 2,
                "movl (%eax), %ecx;cmpl $, -(%ebp);je  <ScsiPortWriteRegisterUshort+>;movzwl -(%ebp), %eax;negl %eax": 2,
                "cmpl $, -(%ebp);je  <ScsiPortWriteRegisterUshort+>;movzwl -(%ebp), %eax;negl %eax;jmp  <ScsiPortWriteRegisterUshort+>": 2,
                "movl %edx, (%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edx;addl $, %edx;movl (%ebp), %eax": 2,
                "movl %edx, (%ebp);jmp  <ScsiPortWriteRegisterUshort+>;addl $, %edi;movsbl (%esi), %ebx;addl $, %esi": 1,
                "testb %dl, %dl;je  <ScsiPortWriteRegisterUshort+>;cmpl $, -(%ebp);setg %cl;movzbl %cl, %ecx": 2,
                "movsbl (%eax), %ebx;leal (%eax), %esi;jmp  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);cmpl $, %ebx": 1,
                "movl $, -(%ebp);cmpl $, %ebx;je  <ScsiPortWriteRegisterUshort+>;movzbl %bl, %eax;subl $, %eax": 1,
                "movsbl (%esi), %ebx;leal (%esi), %eax;cmpl $, -(%ebp);setg %dl;movzbl %dl, %edx": 1,
                "testl %ebx, %ebx;je  <ScsiPortWriteRegisterUshort+>;testl %edx, %edx;je  <ScsiPortWriteRegisterUshort+>;movzbl %bl, %esi": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;fstp %st();movl %eax, -(%ebp);movl -(%ebp), %edi;movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %eax;movl $, %ecx;movl -(%ebp), %edx;subl %eax, %edx;movl %edx, -(%ebp)": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %esi;jmp  <ScsiPortWriteRegisterUshort+>;leal (%ecx,%ecx,), %edx;leal -(%ebx,%edx,), %ecx": 1,
                "setg %dl;movzbl %dl, %edx;subl %edx, %esi;movl -(%ebp), %edx;addl %eax, %edx": 1,
                "jne - <ScsiPortWriteRegisterUshort+>;fstp %st();testl %esi, %esi;je  <ScsiPortWriteRegisterUshort+>;fdivrp %st()": 1,
                "je  <ScsiPortWriteRegisterUshort+>;fchs;fstpl (%edx);movl %ecx, (%ebp);movl %eax, %esi": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);movl (%ebp), %eax": 1,
                "movl -(%ebp), %edi;jmp  <ScsiPortWriteRegisterUshort+>;movl %edi, -(%ebp);movl -(%ebp), %edi;movzbl %bl, %eax": 2,
                "movl -(%ebp), %edi;jmp - <ScsiPortWriteRegisterUshort+>;cmpl $, -(%ebp);jne  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %ecx": 1,
                "movl %esi, -(%ebp);movl -(%ebp), %ecx;subl %esi, %ecx;movl %ecx, -(%ebp);movl %esi, -(%ebp)": 1,
                "jmp - <ScsiPortWriteRegisterUshort+>;cmpl $, -(%ebp);jne  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;movw %bx, (%eax)": 1,
                "movl -(%ebp), %edi;cmpl $, -(%ebp);jne  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %esi;movw $, (%esi)": 1,
                "testl %ebx, %ebx;je  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);movl $, %ecx;movl %edi, -(%ebp)": 2,
                "je  <ScsiPortWriteRegisterUshort+>;cmpl -(%ebp), %ecx;jne - <ScsiPortWriteRegisterUshort+>;movl %ecx, -(%ebp);movl -(%ebp), %edi": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax;cmpl $, -(%ebp);jne  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %ecx": 1,
                "subl $, %esp;movl %eax, -(%ebp);movl $, (%esp);movl %eax, (%esp);leal -(%ebp), %ecx": 2,
                "movl %edi, -(%ebp);movl -(%ebp), %edi;jmp  <ScsiPortWriteRegisterUshort+>;cmpl $, -(%ebp);jne  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %edx, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;testb %al, %al;je  <ScsiPortWriteRegisterUshort+>": 2,
                "testb %al, %al;je  <ScsiPortWriteRegisterUshort+>;cmpl $, -(%ebp);jne  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %edx": 2,
                "movb $, (%esi);movl %fs:, %eax;movl -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp)": 1,
                "movl -(%ebp), %edx;movl %edx, (%esp);movl $, (%esp);movl (%eax), %eax;movl (%eax), %eax": 2,
                "movsbl (%esi), %ebx;addl $, %esi;jmp  <ScsiPortWriteRegisterUshort+>;cmpl $, -(%ebp);jne  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %edx;movzwl (%edx), %eax;movl $, -(%ebp)": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;addl $, %esi;movzwl (%edi), %ebx;addl $, %edi;testl %ebx, %ebx": 6,
                "testl %ebx, %ebx;je  <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %esi;movl $, (%esp)": 1,
                "movl %eax, (%esp);calll - <.text+>;testl %eax, %eax;jne - <ScsiPortWriteRegisterUshort+>;movl %esi, -(%ebp)": 8,
                "testl %eax, %eax;jne - <ScsiPortWriteRegisterUshort+>;movl %ebx, -(%ebp);movl -(%ebp), %ebx;cmpl $, -(%ebp)": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movzwl -(%ebp), %ecx;andl $-, %ecx;cmpw $, %cx;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "leal (%edi), %edx;cmpl $, -(%ebp);jle  <ScsiPortWriteRegisterUshort+>;subl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl -(%ebp), %edx;movl $, %esi;jmp  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);movl $, -(%ebp)": 1,
                "movl $, %esi;jmp  <ScsiPortWriteRegisterUshort+>;addl $, %ecx;movzwl (%edi), %ebx;addl $, %edi": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;addl $, %ecx;movzwl (%edi), %ebx;addl $, %edi;testl %edx, %edx": 1,
                "movzbl %al, %eax;subl %eax, %edx;movl $, %esi;testl %edx, %edx;setne %al": 1,
                "movl %edi, -(%ebp);movl $, -(%ebp);movl $, -(%ebp);testb %al, %al;je  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movzwl %bx, %eax;movl -(%ebp), %edx;calll - <ScsiPortWriteRegisterUshort+>;cmpl $-, %eax": 1,
                "movl -(%ebp), %eax;subl $, %eax;movl %eax, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %ebx": 1,
                "movl %eax, -(%ebp);movl %edx, -(%ebp);movl %esi, -(%ebp);movl -(%ebp), %esi;testl %ebx, %ebx": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movzwl %bx, %eax;movl -(%ebp), %edx;calll - <ScsiPortWriteRegisterUshort+>;movl %eax, %ecx": 1,
                "subl %ecx, -(%ebp);je  <ScsiPortWriteRegisterUshort+>;movzbl %dl, %edx;movl %edx, -(%ebp);movl -(%ebp), %ecx": 1,
                "subl $, %ebx;movl %ebx, -(%ebp);fildl -(%ebp);faddp %st();fstpt -(%ebp)": 1,
                "testl %eax, %eax;jne - <ScsiPortWriteRegisterUshort+>;movl %esi, -(%ebp);movl -(%ebp), %esi;jmp  <ScsiPortWriteRegisterUshort+>": 3,
                "movl -(%ebp), %esi;cmpl $, %ebx;jne  <ScsiPortWriteRegisterUshort+>;cmpl $, -(%ebp);je  <ScsiPortWriteRegisterUshort+>": 1,
                "setg %al;movzbl %al, %eax;subl %eax, -(%ebp);fld;fstpt -(%ebp)": 1,
                "cmpl $, -(%ebp);je  <ScsiPortWriteRegisterUshort+>;movl %ebx, %eax;andl $-, %eax;cmpl $, %eax": 1,
                "andl $-, %eax;cmpl $, %eax;jne  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;addl $, %eax": 1,
                "je  <ScsiPortWriteRegisterUshort+>;cmpl $, %ebx;sete %al;je  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp)": 1,
                "subl %eax, -(%ebp);movl $, %edi;movl %esi, -(%ebp);movl -(%ebp), %esi;jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %eax, (%ebp);jmp  <ScsiPortWriteRegisterUshort+>;cmpl $, -(%ebp);je  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax": 1,
                "fstpt -(%ebp);fldt -(%ebp);fstpl (%edx);movl %eax, (%ebp);jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "fldt -(%ebp);fchs;fstpt -(%ebp);fldt -(%ebp);fstps (%edx)": 1,
                "movl %ecx, -(%ebp);movl %esi, -(%ebp);movl -(%ebp), %esi;jmp  <ScsiPortWriteRegisterUshort+>;movl %esi, -(%ebp)": 1,
                "movl -(%ebp), %ecx;movb $, (%ecx);movl -(%ebp), %eax;movl %eax, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "movl -(%ebp), %esi;jmp - <ScsiPortWriteRegisterUshort+>;cmpl $, -(%ebp);jne  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %edx": 1,
                "movl -(%ebp), %esi;movl %ecx, -(%ebp);movl %edx, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax": 1,
                "movl %edx, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;addl $, %esi;movzwl (%esi), %eax": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;movzwl (%esi), %edx;cmpw $, %dx;je  <ScsiPortWriteRegisterUshort+>;movzwl -(%esi), %eax": 1,
                "je  <ScsiPortWriteRegisterUshort+>;movzwl -(%esi), %eax;cmpw %ax, %dx;jbe  <ScsiPortWriteRegisterUshort+>;movzwl %ax, %eax": 1,
                "movzwl -(%esi), %eax;cmpw %ax, %dx;jbe  <ScsiPortWriteRegisterUshort+>;movzwl %ax, %eax;movzwl %dx, %edx": 1,
                "movzwl %dx, %edx;subl %eax, %edx;movl %edx, (%esp);addl $, %eax;movl %eax, (%esp)": 1,
                "movl %eax, (%esp);calll - <ScsiPortWriteRegisterUshort+>;subl $, %esp;leal (%esi), %eax;jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;cmpl $, -(%ebp);jne  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %ecx;movw %bx, (%ecx)": 1,
                "testl %esi, %esi;jne - <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %esi;cmpl $, -(%ebp);jne  <ScsiPortWriteRegisterUshort+>": 1,
                "leal (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax;movl %eax, (%esp);movl (%ebp), %eax": 2,
                "movl $, %ecx;movl $, %eax;movl %esi, %edi;rep  stosl %eax, %es:(%edi);movzbl (%edx), %ecx": 2,
                "rep  stosl %eax, %es:(%edi);movzbl (%edx), %ecx;testb %cl, %cl;je  <ScsiPortWriteRegisterUshort+>;movl %edx, %eax": 2,
                "movzbl (%eax), %ecx;testb %cl, %cl;jne - <ScsiPortWriteRegisterUshort+>;movzbl (%ebx), %eax;testb %al, %al": 2,
                "je  <ScsiPortWriteRegisterUshort+>;movl %eax, %edx;shrb $, %dl;movzbl %dl, %edx;movzbl -(%ebp,%edx), %edx": 2,
                "je  <ScsiPortWriteRegisterUshort+>;movzbl (%edx), %ebx;testb %bl, %bl;jne  <ScsiPortWriteRegisterUshort+>;movsbl %al, %eax": 1,
                "movl (%ebp), %ebx;movl %ebx, (%esp);calll - <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;cmpb $, (%edx)": 1,
                "leal (%esi), %esi;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %esi;movl $, %ecx;movl $, %eax": 1,
                "movl %ecx, %eax;shrb $, %al;movzbl %al, %eax;andl $, %ecx;movl %esi, %ebx": 1,
                "movl %ebx, %esi;shll %cl, %esi;shrb $, %dl;movzbl %dl, %edx;testl %esi, -(%ebp,%edx,)": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl %edi, %eax;addl $, %esp;popl %ebx;popl %esi": 1,
                "xorl %eax, %eax;stosb %al, %es:(%edi);movl (%esp), %eax;popl %edi;popl %esi": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;addl $, %eax;movzbl (%eax), %edx;testb %dl, %dl;jne - <ScsiPortWriteRegisterUshort+>": 1,
                "pushl %ebx;subl $, %esp;movl (%ebp), %esi;movzbl (%esi), %edx;testb %dl, %dl": 1,
                "nop;nop;nop;pushl %ecx;pushl %eax": 1,
                "je  <ScsiPortWriteRegisterUshort+>;addl $, %edi;addl $, %esi;movzwl (%edi), %ebx;movzwl %bx, %eax": 1,
                "calll - <ScsiPortWriteRegisterUshort+>;movw %ax, -(%ebp);movzwl (%esi), %eax;movl %eax, (%esp);calll - <ScsiPortWriteRegisterUshort+>": 1,
                "movw %ax, -(%ebp);movzwl (%esi), %eax;movl %eax, (%esp);calll - <ScsiPortWriteRegisterUshort+>;cmpw %ax, -(%ebp)": 1,
                "calll - <ScsiPortWriteRegisterUshort+>;cmpw %ax, -(%ebp);je - <ScsiPortWriteRegisterUshort+>;movzwl -(%ebp), %ecx;movzwl %ax, %edx": 1,
                "movl %ecx, %eax;subl %edx, %eax;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %eax;addl $, %esp": 1,
                "subl $, %eax;popl %esi;retl;nop;nop": 1,
                "movl (%ebp), %ebx;testl %ebx, %ebx;je  <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;addl $, %ebx": 1,
                "movsbl %dl, %eax;movl %eax, (%esp);calll - <ScsiPortWriteRegisterUshort+>;testl %eax, %eax;jne - <ScsiPortWriteRegisterUshort+>": 1,
                "movl (%eax), %ecx;movb %dl, (%ecx);addl $, (%eax);subl $, (%eax);movl $, %eax": 1,
                "movl %edx, -(%ebp);movl $, (%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);movl $, (%ebp)": 2,
                "jmp  <ScsiPortWriteRegisterUshort+>;fstp %st();fldt -(%ebp);fstpl -(%ebp);fldl -(%ebp)": 2,
                "fchs;fstpl (%esp);calll  <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;fldz": 2,
                "movzwl -(%ebp), %eax;movb $, %ah;movw %ax, -(%ebp);fldcw -(%ebp);fistpll -(%ebp)": 20,
                "movl -(%ebp), %eax;movl -(%ebp), %edx;jmp  <ScsiPortWriteRegisterUshort+>;fstp %st();fldt -(%ebp)": 8,
                "jmp  <ScsiPortWriteRegisterUshort+>;fstp %st();fldt -(%ebp);fsubs ;fnstcw -(%ebp)": 6,
                "je - <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %edi;movl %ebx, (%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl $, %edi": 2,
                "fnstsw %ax;sahf;jb  <ScsiPortWriteRegisterUshort+>;addl $, -(%ebp);movl (%ebp), %eax": 2,
                "sarl $, %edx;movl %ecx, %eax;sarl $, %eax;subl %eax, %edx;leal (%edx,%edx,), %eax": 2,
                "subl $, -(%ebp);jne - <ScsiPortWriteRegisterUshort+>;movl (%esi), %edx;leal -(%edx), %eax;movl %eax, (%esi)": 2,
                "movl (%ebp), %eax;movl $, (%eax);jmp  <ScsiPortWriteRegisterUshort+>;testb $, (%ebp);je  <ScsiPortWriteRegisterUshort+>": 2,
                "movl $, (%eax);jmp  <ScsiPortWriteRegisterUshort+>;testb $, (%ebp);je  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edx": 2,
                "movl (%esi), %eax;leal -(%eax), %edx;movl %edx, (%esi);movl $, -(%eax);movw $, -(%eax)": 1,
                "movl %edx, (%esi);movl $, -(%eax);movb $, (%eax);jmp  <ScsiPortWriteRegisterUshort+>;movl (%esi), %edx": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;fstp %st();fldt -(%ebp);fsubs ;fldcw -(%ebp)": 2,
                "movl %edx, %ecx;orl %eax, %ecx;jne - <ScsiPortWriteRegisterUshort+>;addl $, %esp;popl %ebx": 2,
                "leal (%eax), %ebx;testb %dl, %dl;je  <ScsiPortWriteRegisterUshort+>;cmpb $, %dl;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "testl %eax, %eax;je  <ScsiPortWriteRegisterUshort+>;addl %eax, -(%ebp);movl %ebx, %eax;jmp  <ScsiPortWriteRegisterUshort+>": 2,
                "movl %ebx, %eax;jmp  <ScsiPortWriteRegisterUshort+>;cmpb $, %dl;jne  <ScsiPortWriteRegisterUshort+>;orl $, %esi": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;orl $, %esi;movzbl (%ebx), %edx;addl $, %ebx;jmp - <ScsiPortWriteRegisterUshort+>": 1,
                "movl $, -(%ebp);cmpb $, %al;jbe  <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edx": 1,
                "addl $, %ebx;jmp  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %ecx;leal (%ecx,%ecx,), %ecx;movsbl %dl, %edx": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %ecx;leal (%ecx,%ecx,), %ecx;movsbl %dl, %edx;leal -(%edx,%ecx,), %ecx": 1,
                "cmpb $, %dl;nop;jne  <ScsiPortWriteRegisterUshort+>;cmpb $, -(%ebx);jne  <ScsiPortWriteRegisterUshort+>": 1,
                "cmpb $, %dl;jne  <ScsiPortWriteRegisterUshort+>;movzbl (%ebx), %eax;cmpb $, %al;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;cmpb $, (%ebx);jne  <ScsiPortWriteRegisterUshort+>;addl $, %ebx;orl $, %esi": 1,
                "orl $, %esi;jmp  <ScsiPortWriteRegisterUshort+>;movl %eax, %edx;andl $-, %edx;cmpb $, %dl": 1,
                "movw %dx, (%eax);movl %ebx, %eax;jmp  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax;leal (%eax), %edx": 2,
                "leal (%eax), %edx;movl %edx, (%ebp);movl (%eax), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax)": 2,
                "movl %ecx, (%eax);movl %ebx, %eax;jmp  <ScsiPortWriteRegisterUshort+>;testb $, %ah;jne  <ScsiPortWriteRegisterUshort+>": 2,
                "orl $, %esi;leal -(%ebp), %eax;movl %eax, -(%ebp);testl $, %esi;je  <ScsiPortWriteRegisterUshort+>": 2,
                "movl (%ebp), %edx;leal (%edx), %ecx;movl %ecx, (%ebp);movl (%edx), %edx;testl %edx, %edx": 2,
                "movzwl (%edx), %edx;movl %edx, -(%ebp);testb $, %ah;je  <ScsiPortWriteRegisterUshort+>;shrl %edx": 2,
                "movl %edx, -(%ebp);testb $, %ah;je  <ScsiPortWriteRegisterUshort+>;shrl %edx;movl %edx, -(%ebp)": 2,
                "leal (%edx), %ecx;movl %ecx, (%ebp);movl (%edx), %edx;movl %edx, -(%ebp);testb $, %ah": 2,
                "movl -(%ebp), %edi;movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al;notl %ecx": 2,
                "movl %ecx, -(%ebp);movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;testb $, %ah;je  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %ecx, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;testb $, %ah;je  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edx": 2,
                "movl %edx, -(%ebp);movl %edx, %ecx;sarl $, %ecx;movl %ecx, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>": 2,
                "movl %ecx, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %edx;leal (%edx), %ecx;movl %ecx, (%ebp)": 2,
                "movl $, -(%ebp);movl $, %eax;movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;testb $, %al": 6,
                "je  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);movl $, %eax;movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>": 4,
                "movl $, %eax;movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;andl $-, %esi;movl $, -(%ebp)": 2,
                "movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);movl $, %eax;testl $, %esi": 2,
                "movl $, -(%ebp);movl $, %eax;testl $, %esi;je  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax": 2,
                "movl $, -(%ebp);andl $, %esi;cmpl $, -(%ebp);jns  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp)": 1,
                "movl -(%ebp), %esi;movl -(%ebp), %edi;movl $, %eax;movl $, %ecx;repne  scasb %es:(%edi), %al": 1,
                "repne  scasb %es:(%edi), %al;notl %ecx;leal -(%ecx), %edi;jmp  <ScsiPortWriteRegisterUshort+>;movl $, %edi": 1,
                "movl -(%ebp), %ebx;movl -(%ebp), %edi;movl %esi, -(%ebp);movl -(%ebp), %esi;movl -(%ebp), %edx": 1,
                "testl %edx, %edx;je  <ScsiPortWriteRegisterUshort+>;movl %edi, %ecx;movl (%ebp), %eax;calll - <ScsiPortWriteRegisterUshort+>": 1,
                "cmpl $-, %eax;je  <ScsiPortWriteRegisterUshort+>;addl %eax, -(%ebp);movl %esi, %ecx;andl $, %ecx": 2,
                "movl -(%ebp), %eax;addl %eax, -(%ebp);movl -(%ebp), %edi;subl $, %edi;cmpl $, -(%ebp)": 2,
                "subl $, %edi;cmpl $, -(%ebp);jle  <ScsiPortWriteRegisterUshort+>;movl %ebx, -(%ebp);movl %esi, -(%ebp)": 2,
                "jle  <ScsiPortWriteRegisterUshort+>;movl %ebx, -(%ebp);movl %esi, -(%ebp);movl -(%ebp), %ebx;movl (%ebp), %esi": 2,
                "je  <ScsiPortWriteRegisterUshort+>;addl %eax, %ebx;subl $, %edi;cmpl $-, %edi;jne - <ScsiPortWriteRegisterUshort+>": 2,
                "addl %eax, %ebx;subl $, %edi;cmpl $-, %edi;jne - <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %esi": 2,
                "jmp  <ScsiPortWriteRegisterUshort+>;leal -(%ebp), %eax;movl %eax, -(%ebp);movl $, -(%ebp);jmp - <ScsiPortWriteRegisterUshort+>": 1,
                "movw %ax, -(%ebx);movl %edx, %ecx;subl $, -(%ebp);jne - <ScsiPortWriteRegisterUshort+>;movl (%esi), %edx": 1,
                "movzwl (%ebx), %edx;addl $, %ebx;leal -(%edx), %eax;cmpw $, %ax;jbe - <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;leal -(%edx), %ecx;movl $, -(%ebp);movl %eax, %ebx;cmpw $, %cx": 1,
                "movl $, -(%ebp);movl %eax, %ebx;cmpw $, %cx;ja  <ScsiPortWriteRegisterUshort+>;jmp  <ScsiPortWriteRegisterUshort+>": 1,
                "cmpw $, %dx;jne  <ScsiPortWriteRegisterUshort+>;movzwl (%ebx), %eax;cmpw $, %ax;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %edx, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl (%ebp), %eax;leal (%eax), %edx;movl %edx, (%ebp)": 1,
                "addl $, %ecx;movl %ecx, (%ebp);movl %edx, %ecx;movl (%edx), %edx;movl (%ecx), %ecx": 2,
                "movl %edx, %ecx;movl (%edx), %edx;movl (%ecx), %ecx;movl %edx, -(%ebp);movl %ecx, -(%ebp)": 2,
                "movl -(%ebp), %edx;orl -(%ebp), %edx;je  <ScsiPortWriteRegisterUshort+>;movl %eax, -(%ebp);movl %eax, %ecx": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;leal -(%ebx), %eax;jmp  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax;movl $, -(%ebp)": 1,
                "andl %eax, %edi;movl %edi, -(%ebp);testl $, %esi;jne  <ScsiPortWriteRegisterUshort+>;testl %edi, %edi": 1,
                "movl %edi, %ebx;movl %esi, -(%ebp);movl -(%ebp), %esi;movl (%ebp), %edi;movl $, %edx": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %edx;movl (%ebp), %eax;calll - <ScsiPortWriteRegisterUshort+>;movl %eax, -(%ebp)": 1,
                "jmp  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %esi;cmpl $, -(%ebp);je  <ScsiPortWriteRegisterUshort+>;movl %ebx, -(%ebp)": 1,
                "jle  <ScsiPortWriteRegisterUshort+>;addl %eax, %esi;movzwl -(%ebp), %edx;movl %edi, %eax;calll - <ScsiPortWriteRegisterUshort+>": 1,
                "movl -(%ebp), %ebx;jmp  <ScsiPortWriteRegisterUshort+>;movl $, -(%ebp);jmp  <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %ebx": 1,
                "jns - <ScsiPortWriteRegisterUshort+>;cmpl $-, -(%ebp);setne %al;movzbl %al, %eax;subl $, %eax": 1,
                "cmpl $-, -(%ebp);setne %al;movzbl %al, %eax;subl $, %eax;orl %eax, -(%ebp)": 1,
                "leal -(%ebp), %edx;movl %edx, -(%ebp);movl $, -(%ebp);jmp - <ScsiPortWriteRegisterUshort+>;movl -(%ebp), %eax": 1,
                "pushl %ebp;movl %esp, %ebp;fldl (%ebp);fldlg;fxch %st()": 1,
                "fldl (%ebp);fldlg;fxch %st();fylx;popl %ebp": 1,
                "fnclex;movw $, -(%ebp);fldcw -(%ebp);frndint;wait": 1,
                "fsub %st();fylxp;jmp  <ScsiPortWriteRegisterUshort+>;fylx;fmul %st()": 1,
                "negl %eax;cmpl $, %eax;ja  <ScsiPortWriteRegisterUshort+>;shrl $, %edx;fldl (,%edx,)": 1,
                "popl %edx;andb $, %al;je  <ScsiPortWriteRegisterUshort+>;cmpl $, %edx;jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "fstp %st();addl $, %esp;fldl ;fdivl ;retl": 1,
                "retl;fstp %st();addl $, %esp;fldl ;retl": 1,
                "movl %edx, %ecx;shrl $, %ecx;andw $, %cx;movl $, %eax;cmpw $, %cx": 1,
                "movl $, %eax;cmpw $, %cx;jne  <ScsiPortWriteRegisterUshort+>;movb $, %al;testl $, %edx": 1,
                "movb $, %al;testl $, %edx;jne  <ScsiPortWriteRegisterUshort+>;testl %ebx, %ebx;setne %al": 1,
                "movl %ecx, %edx;cld;repne  scasb %es:(%edi), %al;sete %al;subl %ecx, %edx": 1,
                "movl (%esp), %edx;movl %edi, (%esp);movl (%esp), %ecx;movl (%esp), %edi;movl %ebx, (%esp)": 1,
                "movl (%esp), %ecx;movl (%esp), %edi;movl %ebx, (%esp);movl (%esp), %ebx;testl %edx, %edx": 1,
                "subl %edi, %eax;shll %cl, %edx;movl %eax, %ecx;movl %edx, (%esp);movl %esi, %edx": 1,
                "shrl %cl, %edx;movl (%esp), %ecx;orl %ecx, %edx;movl %edi, %ecx;shll %cl, %esi": 1,
                "shll %cl, %esi;movl %eax, %ecx;movl %esi, (%esp);movl %ebx, %esi;shrl %cl, %esi": 1,
                "movl %esi, (%esp);movl %ebx, %esi;shrl %cl, %esi;movl %edi, %ecx;movl %edx, (%esp)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;movl %edi, %ecx;shll %cl, %ebp;cmpl %eax, %ebp;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "cmpl %edx, %esi;je  <ScsiPortWriteRegisterUshort+>;movl %ebx, %eax;xorl %edx, %edx;jmp - <ScsiPortWriteRegisterUshort+>": 1,
                "nop;nop;subl $, %esp;movl %esi, (%esp);movl (%esp), %esi": 1,
                "divl %ecx;movl %ebp, %eax;divl %ecx;jmp - <ScsiPortWriteRegisterUshort+>;leal (%esi), %esi": 1,
                "shrl %cl, %ebp;movzbl (%esp), %ecx;orl %eax, %ebp;movl (%esp), %eax;shll %cl, %edi": 1,
                "movl (%esp), %eax;shll %cl, %edi;movl %esi, %ecx;shrl %cl, %edx;movzbl (%esp), %ecx": 1,
                "movl %eax, %edi;movl %edx, %ecx;jb  <ScsiPortWriteRegisterUshort+>;cmpl %eax, (%esp);jb  <ScsiPortWriteRegisterUshort+>": 1,
                "movl %edx, %ecx;jb  <ScsiPortWriteRegisterUshort+>;cmpl %eax, (%esp);jb  <ScsiPortWriteRegisterUshort+>;movl (%esp), %eax": 1,
                "movzbl (%esp), %ecx;movl %ebx, %edx;shrl %cl, %eax;movl %esi, %ecx;shll %cl, %edx": 1,
                "movl %edx, %ecx;movl %eax, %edi;subl (%esp), %edi;sbbl %ebp, %ecx;jmp - <ScsiPortWriteRegisterUshort+>": 1,
                "xorl %edx, %edx;divl %ecx;movl %eax, %esi;movl %ebx, %eax;divl %ecx": 1,
                "negl %ebx;jmp - <ScsiPortWriteRegisterUshort+>;movl %ebx, %ecx;movl $, %eax;subl %ebx, %eax": 1,
                "movl %ebx, %ecx;movl $, %eax;subl %ebx, %eax;shll %cl, %edx;movl %eax, %ecx": 1,
                "movl %eax, %ecx;movl %edx, (%esp);movl %esi, %edx;shrl %cl, %edx;movl %ebx, %ecx": 1,
                "subl $, %ebx;jmp - <ScsiPortWriteRegisterUshort+>;nop;nop;incl %edx": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dl, ": 1,
                "addb %al, (%eax);addb %dl, ;popal;jb  <ScsiPortWriteRegisterUshort+>;imull $, (%ecx,%ebp,), %esi": 1,
                "popal;jb  <ScsiPortWriteRegisterUshort+>;imull $, (%ecx,%ebp,), %esi;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);jecxz - <ScsiPortWriteRegisterUshort+>;addb $, %al": 1,
                "xchgl %edi, %eax;fiadds (%eax,%eax);addb %al, (%eax);addb %al, (%eax);testl $, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);testl $, %eax;fiadds (%eax,%eax);int": 1,
                "subl %eax, (%eax);addb %al, (%eax);addb %dl, %ah;movl $, %ecx;addb $, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);sbbl $, %eax;popl %ss": 1,
                "addl $, %eax;addb %al, (%ecx);sbbb %al, ;addb %dl, (%ebx);sbbb %al, ": 1,
                "repne  pushl %edx;addb (%eax), %al;notl (%edx);addb %bh, %ah;pushl %edx": 1,
                "pushl %edx;addb (%eax), %al;addl %edx, (%ebx);addb %al, (%esi);pushl %ebx": 1,
                "imull $, (%esi), %ebp;popl %ebp;andb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);popl %ebx;cmpb $, %al;addb %ch, (%esi)": 1,
                "addb %al, (%esi);cmpl $, %eax;addl $, %eax;addb %bh, (%edi);cmpl $, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dh, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, %al": 1,
                "addb %al, (%eax);addb %al, (%ecx);addb %al, (%eax);addb %ah, -(%esi);nop": 1,
                "addb %dh, %ch;popl %ebx;addl $, %eax;addb %ch, (%esp,%ebx,);addl $, %eax": 1,
                "nop;nop;nop;nop;pushl %es": 1,
                "addb %al, (%eax);addb %cl, (%esi);addb %al, (%eax);addb %al, (%eax,%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax,%eax);addb %al, (%eax);sldtw (%eax);addb %dh, (%ecx)": 1,
                "addb %dl, (%esi);addb %al, (%eax);addb %bh, %bh;sldtw (%eax);addl %eax, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%ecx);addb %al, (%eax);addb %ah, (%eax);nop": 1,
                "addb %ah, (%eax);nop;nop;nop;nop": 1,
                "addb %al, (%eax);addb %bh, -(%esi,%eax,);sarb $, (%eax,%eax);addb %al, (%eax);addb %bh, -(%esi)": 1,
                "addb %al, (%eax);sbbb %bh, (%esp,%edi);outl %eax, $;outl %eax, $;sbbb %bh, (%eax,%eax)": 1,
                "xorb %dh, (%eax);xorb %dh, (%eax);jo - <ScsiPortWriteRegisterUshort+>;loopne ;addb %al, (%eax)": 1,
                "sbbb %bl, (%eax);fstpt (%edi);cmpb $-, %al;sbbb %bl, (%eax);addb %al, (%eax)": 1,
                "fstpt (%edi);cmpb $-, %al;sbbb %bl, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);sbbb %bh, (%esi,%edi,);sbbb %bl, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%eax);cmpb $, %al;sbbb %bl, (%eax);sbbb %bl, (%eax)": 1,
                "addb %al, (%eax);subb %ch, (%esi,%edi,);subb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "cmpb %bh, (%eax);jl  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%eax);cmpb $, %al;cmpb $, %al;sbbb %bl, (%eax)": 1,
                "addb %al, (%eax);addb %dh, (%eax);sbbb %cl, (%esp,%ecx);orb $, %al;orb $, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);sbbb %bl, (%eax);sbbb %dh, (%eax);addb %al, (%eax)": 1,
                "sbbb %bl, (%eax);sbbb %dh, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);jl - <ScsiPortWriteRegisterUshort+>;pushl %es;pushl %es": 1,
                "jl - <ScsiPortWriteRegisterUshort+>;pushl %es;pushl %es;cmpb $, %al;pushl %es": 1,
                "addb %al, (%eax);addb %al, (%eax);incb %al;rolb $, %al;pushl %es": 1,
                "addb %al, (%eax);incb %al;rolb $, %al;pushl %es;pushl %es": 1,
                "incb %al;rolb $, %al;pushl %es;pushl %es;pushl %es": 1,
                "jl - <ScsiPortWriteRegisterUshort+>;movb $, %dh;pushl %es;pushl %es;pushl %es": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, (%esi);addb %bh, (%esi)": 1,
                "cld;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);cmpb $, %al": 1,
                "addb %al, (%eax);cmpb $, %al;retl $-;rolb $, %al;cmpb $, %al": 1,
                "addb %bh, %al;insb %dx, %es:(%edi);insb %dx, %es:(%edi);clc;addb %al, (%eax)": 1,
                "incb (%eax);addb %al, (%eax);addb %al, (%eax);addb %bh, %dh;bound (%eax), %bp": 1,
                "addb %bh, %dh;bound (%eax), %bp;pushl $;addb %al, (%eax);addb %al, (%eax)": 1,
                "retl $-;faddp %st();addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "pushal;pushal;bound -(%esi), %esp;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, %dh;outb %al, $;into": 1,
                "fidivrs (%esp,%ecx);addb %al, (%eax);addb %al, (%eax);cld;jl  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %bh, -(%esi,%eax,);pushal;cmpb %cl, (%esi,%eax);movb $, %dh;addb %al, (%eax)": 1,
                "cmpb %bh, -(%esp,%ebp,);movb $, (%eax);addb %al, (%eax);addb %al, (%eax);cmpb $, %al": 1,
                "xorb %dh, (%eax);xorb %dh, (%eax);xorb %dh, (%eax);xorb %bh, (%eax,%eax);addb %al, (%eax)": 1,
                "orb $, %al;orb $, %al;orb $, %al;orb $, %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);jl - <ScsiPortWriteRegisterUshort+>;incb %al": 1,
                "rolb $, %dh;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);cmpb %ch, (%esp)": 1,
                "int;js  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax);loopne ;pushal": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%esi);pushl %es;addb %cl, (%esi)": 1,
                "addb %al, (%eax);loopne ;pushal;insb %dx, %es:(%edi);js  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %bh, (%eax);sbbb %bl, (%eax);sbbb %bl, (%eax)": 1,
                "addb %al, (%eax);addb %bh, (%eax);sbbb %bl, (%eax);sbbb %bl, (%eax);sbbb %bl, (%eax)": 1,
                "sbbb %bl, (%eax);sbbb %bl, (%eax);sbbb %bl, (%eax);sbbb %bl, (%eax);cmpb $, %al": 1,
                "movb $, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %bl, %ah": 1,
                "addb %al, (%eax);fsubl (%esi);jl  <ScsiPortWriteRegisterUshort+>;pushal;lock": 1,
                "int;int;int;jl  <ScsiPortWriteRegisterUshort+>;orb $, %al": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);int": 2,
                "int;int;int;int;int": 7,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, %dh": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, %dh;salc;salc": 1,
                "addb %al, (%eax);addb %al, %dh;salc;salc;addb %al, (%eax)": 1,
                "pushl %cs;sbbb %bl, (%eax);sbbb %dh, (%eax);sbbb %bl, (%eax);sbbb %cl, (%esi)": 1,
                "sbbb %bl, (%eax);jo  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax);addb %al, (%eax);addb %dh, -(%esi)": 1,
                "cmpb %ch, (%eax,%edi);js  <ScsiPortWriteRegisterUshort+>;jl - <ScsiPortWriteRegisterUshort+>;int;int": 1,
                "pushal;pushal;cmpb $, %al;pushl %es;cmpb $, %al": 1,
                "sbbb %al, (%eax);jl - <ScsiPortWriteRegisterUshort+>;incb %al;rolb $, %dh;addb %al, (%eax)": 1,
                "cmpb $, %al;addb %al, (%eax);addb %al, (%eax);sbbb %bh, (%esi);addb %bh, (%eax)": 1,
                "addb %al, (%eax);addb %bl, (%eax);xorb %ah, (%eax);jl  <ScsiPortWriteRegisterUshort+>;pushal": 1,
                "jle  <ScsiPortWriteRegisterUshort+>;sbbb %bl, (%eax);sbbb %bl, (%eax);fdivs (%eax);addb %al, (%eax)": 1,
                "movb $, %dh;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "fsubrs (%esi,%esi);fadds (%eax);addb %al, (%eax);addb %al, (%eax);addb %dl, (%ecx)": 1,
                "fadds (%eax);addb %al, (%eax);addb %al, (%eax);addb %dl, (%ecx);incl %esp": 1,
                "pushl %ebp;stosb %al, %es:(%edi);pushl %ebp;stosb %al, %es:(%edi);pushl %ebp": 5,
                "pushl %ebp;stosb %al, %es:(%edi);pushl %ebp;stosb %al, %es:(%edi);fnsave -(%edi)": 1,
                "stosb %al, %es:(%edi);fnsave -(%edi);ja - <ScsiPortWriteRegisterUshort+>;ja - <ScsiPortWriteRegisterUshort+>;ja - <ScsiPortWriteRegisterUshort+>": 1,
                "sbbb %bl, (%eax);divb %ss:(%esi);addb %al, %ss:(%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %bh, %dh;addb %al, %ss:(%eax);addb %al, (%eax);addb %bh, %al;sbbb %bh, %al": 1,
                "addb %al, (%eax);addb %bh, %al;sbbb %bh, %al;sbbb %bl, (%eax);sbbb %bl, (%eax)": 1,
                "testb $-, %ss:(%esi);addb %al, %ss:(%eax);addb %al, (%eax);addb %bh, %dh;pushl %es": 1,
                "addb %bh, %al;sbbb %bl, (%eax);sbbb %bl, (%eax);sbbb %bl, (%eax);sbbb %bl, (%eax)": 1,
                "sbbb %bl, (%eax);sbbb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %dh, -(%esi);fcomp %st()": 1,
                "fcomp %st();jo  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 2,
                "addb %dh, -(%esi);sbbb %bl, (%eax);sbbb %bl, (%eax);sbbb %bl, (%eax);addb %al, (%eax)": 1,
                "addl (%esi), %eax;jle - <ScsiPortWriteRegisterUshort+>;fcomi %st();jle  <ScsiPortWriteRegisterUshort+>;rolb $, (%eax)": 1,
                "addb %al, (%eax);addb %al, (%eax);sbbb $, %al;pushal;pushal": 1,
                "addb %al, (%eax);addb %al, (%eax);incb (%eax);addb %bh, %dh;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %dh, (%eax);movl $, %ebp;addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%ecx);addb (%ecx), %al;addb (%edx), %al;addl %eax, (%ecx);addl %eax, (%ecx)": 1,
                "addb (%edx), %al;addl %eax, (%ecx);addl %eax, (%ecx);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%edx);addb %al, (%eax);addb %ah, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);decl %eax;addb %al, (%eax);addb %al, (%eax,%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %al;orb $, %al;addb %cl, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%ecx);addb %al, (%eax);addb %dl, (%ecx);addb %al, (%eax);addb %bh, %al": 1,
                "addb %al, (%eax);addb %dh, %al;jg  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %dl, (%ecx,%ebp,);decl %edi;jne  <ScsiPortWriteRegisterUshort+>;addb %al, (%ebp);jb  <ScsiPortWriteRegisterUshort+>": 1,
                "ja  <ScsiPortWriteRegisterUshort+>;outsb %gs:(%esi), %dx;andb %ah, (%ebp);arpl %si, %gs:(%ecx,%ebp,);andb %ch, (%bx,%si)": 1,
                "popal;bound (%ebp), %ebp;je  <ScsiPortWriteRegisterUshort+>;andb %ch, (%edi,%ebp,);andb %ah, %fs:(%ecx)": 1,
                "je  <ScsiPortWriteRegisterUshort+>;andb %ch, (%edi,%ebp,);andb %ah, %fs:(%ecx);imull $, %fs:(%ecx,%ebp,), %esi;bound (%edi), %ebp": 1,
                "imull $, %fs:(%ecx,%ebp,), %esi;bound (%edi), %ebp;je  <ScsiPortWriteRegisterUshort+>;jbe  <ScsiPortWriteRegisterUshort+>;arpl %sp, (%ebp)": 1,
                "andb %ah, (%esi);insb %dx, %es:(%edi);jb  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;popal": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;andb %al, (%ebp);pushl %esp;incl %ebp;pushl %edx": 8,
                "andb %dh, (%edi,%ebp,);jb  <ScsiPortWriteRegisterUshort+>;bound (%edi), %ebp;je  <ScsiPortWriteRegisterUshort+>;addb %dl, (%eax,%ebp,)": 1,
                "andb %dh, (%bp,%di);jae  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);jae  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi)": 1,
                "andb %dh, (%ebx);insb %dx, %es:(%edi);arpl %si, %gs:(%eax);pushl $;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "bound (%edi), %ebp;je  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;addb %al, %cs:(%bx,%si);addb %al, (%eax)": 1,
                "popal;imull $, (%esi), %ebp;insb %dx, %es:(%edi);insb %dx, %es:(%edi);orb %cs:(%eax), %al": 1,
                "outsb (%esi), %dx;popal;bound (%ebp), %ebp;je  <ScsiPortWriteRegisterUshort+>;andb %ch, (%ecx)": 1,
                "insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;andb %ch, (%ebp);outsb (%esi), %dx": 2,
                "addb %dh, (%edx);bound (%ecx), %esp;cmpl $, %eax;imull $, (%edx), %edi;outsl (%esi), %dx": 1,
                "popal;je  <ScsiPortWriteRegisterUshort+>;andl $, %eax;je  <ScsiPortWriteRegisterUshort+>;andb %ch, (%ebp)": 1,
                "andb %ch, (%edi);andb %ah, ;jns  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;orb (%eax), %al": 1,
                "andl $, %eax;orb (%eax), %al;jb  <ScsiPortWriteRegisterUshort+>;addb %ah, (%esi);js  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;addb %ah, (%esi);js  <ScsiPortWriteRegisterUshort+>;addb %dh, %gs:(%edi);jb  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;addb %dh, (%edx,%esi,);arpl %sp, (%ebp);insl %dx, %es:(%edi);insl %dx, %es:(%edi)": 1,
                "insl %dx, %es:(%edi);addb %ch, (%ecx);imull $, (%esi), %esp;imull $, (%eax), %eax;addb %ah, (%ebx)": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;addb %ch, (%eax)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;addb %ch, (%eax);popal;jo  <ScsiPortWriteRegisterUshort+>;popal": 1,
                "decl %edi;pushl %eax;cmpb (%eax), %ah;xorb %bh, (%eax);xorb %bh, (%eax)": 1,
                "xorb %bh, (%eax);insb %dx, %es:(%edi);popl %eax;subb $, %al;xorb %bh, (%eax)": 3,
                "pushl %ebx;decl %ecx;decl %esi;incl %edi;popl %edi": 1,
                "popl %edi;incl %ebx;decl %edi;pushl %edx;pushl %edx": 1,
                "decl %esi;addb %al, (%eax);addb %dl, (%ebx);arpl %si, (%ecx,%ebp,);outsb (%esi), %dx": 1,
                "andl %eax, (%eax);decl %ebx;jb  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);addb %cl, (%ecx,%ebp,)": 1,
                "addb %cl, (%ecx,%ebp,);jne  <ScsiPortWriteRegisterUshort+>;andb %ch, (%ebx);jb  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi)": 1,
                "andb %ch, (%ebx);jb  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);andb %ah, (%esi);insb %dx, %es:(%edi)": 1,
                "insl %dx, %es:(%edi);pushl %ebx;imull $, (%edx), %edi;andl $, %eax;ja  <ScsiPortWriteRegisterUshort+>": 1,
                "js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>;addb %dl, (%edx);insl %dx, %es:(%edi);pushl %ebx": 1,
                "popal;cmpb (%bx,%si), %ah;xorb %bh, (%eax);js  <ScsiPortWriteRegisterUshort+>;addb %cl, (%edi,%ebp,)": 1,
                "je  <ScsiPortWriteRegisterUshort+>;andb %ah, (%ecx);andb %ch, (%edi);andb %ch, %fs:(%ebx);jb  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %dl, %cs:(%bp,%di);je  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;popal;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "ja  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;pushl $;andl $, %eax;je  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %cl, (%ebx);jb  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);pushl %esi;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "insb %dx, %es:(%edi);pushl %esi;jb  <ScsiPortWriteRegisterUshort+>;imull $, (%edi), %ebp;andl $, %eax": 1,
                "jo  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;jbe  <ScsiPortWriteRegisterUshort+>;pushl %ebx;imull $, (%edx), %edi": 1,
                "outsl (%esi), %dx;xorl %gs:(%edx), %esi;pushl %ebx;je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "js  <ScsiPortWriteRegisterUshort+>;addb %dl, (%edx);insl %dx, %es:(%edi);imull $, %fs:(%ebx), %esi;cmpb (%eax), %ah": 1,
                "xorb %bh, (%eax);js  <ScsiPortWriteRegisterUshort+>;addb %al, (%edx);outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>": 1,
                "js  <ScsiPortWriteRegisterUshort+>;addb %cl, (%ecx);imull $, (%edx,%esi,), %esi;jae  <ScsiPortWriteRegisterUshort+>;decl %ebp": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;andb %ch, (%ecx);imull $, (%edx,%esi,), %esi;andb %ah, %gs:(%bx);andl $, %eax": 1,
                "imull $, (%edx,%esi,), %esi;andb %ah, %gs:(%bx);andl $, %eax;outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %dh, -(%eax);xorb (%ecx), %al;addb %bl, %ah;xorb (%ecx), %al;addb %al, -(%esi)": 1,
                "xorb (%ecx), %al;addb %al, -(%esi);xorb (%ecx), %al;addb %bh, %dh;xorb (%ecx), %al": 1,
                "addb %dl, (%ebx);xorl (%ecx), %eax;addb %bl, (%edi);xorl (%ecx), %eax;addb %ch, (%eax)": 1,
                "imulw $, (%edi), %sp;je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;outsb (%esi), %dx;andb %ch, (%ecx)": 1,
                "outsb (%esi), %dx;andb %ch, (%ecx);andb %ch, (%esi);je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "orb (%eax), %al;addb %al, (%eax);addb %dl, %bh;addl %eax, %ss:(%eax);testl $, %eax": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;subb $, %al;imull $, (%eax), %edi;jb  <ScsiPortWriteRegisterUshort+>;andb %ah, (%eax)": 1,
                "andb %ch, (%edi);insl %dx, %es:(%edi);imull $, (%ebp), %esi;andb %ch, (%ebp);insb %dx, %es:(%edi)": 1,
                "andb %ah, (%ebp);je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;subl (%eax), %esp;outsl (%esi), %dx": 1,
                "je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;subl (%eax), %esp;outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %ch, (%edi);andb %ch, %gs:(%edi);andb %dh, (%eax,%ebp,);andb %ah, (%esi);insb %dx, %es:(%edi)": 1,
                "imull $, (%ebp), %ebp;insl %dx, %es:(%edi);subb $, %al;outsb (%esi), %dx;imull $, (%esi), %esp": 1,
                "popal;arpl %si, (%edi,%ebp,);orb (%eax), %ah;andb %ch, (%ebx);pushl $": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;andb %ch, (%ebp);jae  <ScsiPortWriteRegisterUshort+>;andb %ah, (%edx);andb %ch, (%edi,%ebp,)": 1,
                "andb %al, (%edi);outsl (%esi), %dx;andb %al, %fs:(%ebx);outsb (%esi), %dx;imulw $, (%edi), %sp": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;addb %al, (%eax);incl %esp;imull $, (%edx), %esi": 1,
                "je  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);andb %al, (%edx);outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;andb %dl, (%bp,%di);jae  <ScsiPortWriteRegisterUshort+>": 2,
                "jae  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);jae  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax);incl %esi": 1,
                "bound (%ebp), %esp;andb %bh, ;addb %al, (%eax);das;das": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;arpl %si, %gs:(%edi,%ebp,);cmpb (%eax), %ah;andl $, %eax": 3,
                "arpl %bp, (%eax);pushl %ebx;imull $, (%edx), %edi;je  <ScsiPortWriteRegisterUshort+>;andb %ah, ": 3,
                "arpl %bp, (%eax);andb %al, (%edx);outsl (%esi), %dx;arpl %bp, (%ebx);andb %al, (%edx)": 2,
                "andb %al, (%ebx);arpl %bp, (%eax);cmpb (%eax), %ah;andl $, %eax;addb %ch, (%eax)": 1,
                "cmpb (%eax), %ah;andl $, %eax;addb %ch, (%eax);andl $, %eax;subl %esp, (%eax)": 1,
                "outsl (%esi), %dx;arpl %bp, (%ebx);incl %edx;insb %dx, %es:(%edi);outsl (%esi), %dx": 2,
                "orb (%eax), %al;addb %al, (%eax);incl %ebx;popal;arpl %bp, (%eax)": 1,
                "je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;popal;insb %dx, %es:(%edi);incl %ebx": 1,
                "insb %dx, %es:(%edi);incl %ebx;pushl $;popal;arpl %bp, (%eax)": 1,
                "imull $, (%edx), %edi;je  <ScsiPortWriteRegisterUshort+>;subb %ch, (%ecx);orb (%eax), %al;addb %al, (%eax)": 1,
                "insb %dx, %es:(%edi);decl %edi;jo  <ScsiPortWriteRegisterUshort+>;imull $, (%ebp), %ebp;outsl (%esi), %dx": 1,
                "insb %dx, %es:(%edi);incl %edi;je  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);outsl (%esi), %dx": 1,
                "incl %edx;insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %bp, (%ebx);jne  <ScsiPortWriteRegisterUshort+>": 5,
                "incl %esp;jne  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);outsl (%esi), %dx": 1,
                "andb %ah, ;popal;arpl %bp, (%eax);pushl %ebx;imull $, (%edx), %edi": 1,
                "imull $, (%edx), %edi;outsb %gs:(%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;andb %ah, ;decl %ecx": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;subb %ch, (%ecx);andb %al, (%ecx,%ebp,);imull $, (%esi), %ecx;bound (%ebp), %esp": 1,
                "andb %ah, ;arpl %si, (%edi,%ebp,);decl %edi;jae  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>": 2,
                "outsb (%esi), %dx;incl %edx;insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %bp, (%ebx)": 2,
                "js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>;andb %ah, ;addb %dh, (%edx);andb %ch, ": 1,
                "popal;jae  <ScsiPortWriteRegisterUshort+>;andb %bh, ;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %bh, %al;addl (%eax), %eax;addb %bh, %al;addb (%eax), %al": 1,
                "outsb (%esi), %dx;andb %dh, %fs:(%eax);jae  <ScsiPortWriteRegisterUshort+>;andb %dh, %fs:(%edi,%ebp,);jb  <ScsiPortWriteRegisterUshort+>": 1,
                "insl %dx, %es:(%edi);outsl (%esi), %dx;jbe  <ScsiPortWriteRegisterUshort+>;addb %al, %fs:(%eax);bound (%ecx), %esp": 1,
                "js  <ScsiPortWriteRegisterUshort+>;andb %ah, %fs:(%ecx,%ebp,);imull $, (%eax), %esp;arpl %si, %gs:(%edi,%ebp,);andb %ah, (%esi)": 1,
                "arpl %bp, (%ebx);imull $, (%esi), %ebp;andb %ch, (%ebp);imull $, %fs:(%ecx), %esp;insb %dx, %es:(%edi)": 1,
                "imull $, (%esi), %ebp;andb %ch, (%ebp);imull $, %fs:(%ecx), %esp;insb %dx, %es:(%edi);imull $, (%eax), %esp": 1,
                "imull $, %fs:(%ecx), %esp;insb %dx, %es:(%edi);imull $, (%eax), %esp;jb  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx": 1,
                "outsl (%esi), %dx;andb %dh, (%ebx);arpl %si, (%edi,%ebp,);jae  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx": 1,
                "outsb (%esi), %dx;andb %ah, (%esi);js  <ScsiPortWriteRegisterUshort+>;andb %ah, %fs:(%ecx,%ebp,);imull $, (%eax), %esp": 1,
                "andb %ah, %fs:(%ecx,%ebp,);imull $, (%eax), %esp;outsl (%esi), %dx;outsb (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>": 1,
                "outsb (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;insb %dx, %es:(%edi);insb %dx, %es:(%edi)": 6,
                "je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;insb %dx, %es:(%edi);insb %dx, %es:(%edi);andb %ah, %fs:(%ecx)": 1,
                "imulw $, (%eax), %di;imull $, %fs:(%ebx), %esi;andb %ah, (%ecx);bound (%ecx), %ebp;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %ch, (%edi);je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;andb %dh, (%edx);outsb (%esi), %dx": 1,
                "imull $, (%eax), %esp;popal;addb %al, %fs:(%eax);addb %al, (%eax);jb  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;andb %ah, (%ecx);popal;andb %ah, (%esi);js  <ScsiPortWriteRegisterUshort+>": 1,
                "popal;andb %ah, (%esi);js  <ScsiPortWriteRegisterUshort+>;andb %ah, %fs:(%edx);andb %al, (%ebp)": 1,
                "addb %al, (%eax);arpl %bp, (%edi);je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;insb %dx, %es:(%edi)": 1,
                "popal;jns  <ScsiPortWriteRegisterUshort+>;imulw $, (%eax), %di;imull $, %fs:(%ebx), %esi;imulw $, %gs:(%esi), %bp": 1,
                "andb %ah, (%esi);jne  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;outsb (%esi), %dx": 1,
                "outsb (%esi), %dx;andb %ah, (%esi);imull $, (%ebp), %ebp;outsb (%esi), %dx;outsl (%esi), %dx": 1,
                "ja  <ScsiPortWriteRegisterUshort+>;andb %ah, (%ebp);jb  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;arpl %bp, (%edi)": 1,
                "cmpl %ecx, (%edx);addb %bl, (%edx,%ecx,);addb %bl, (%edx,%ecx,);addb %bl, (%edx,%ecx,);addb %bl, (%edx,%ecx,)": 1,
                "addl %eax, (%eax);popl %esp;decl %edx;addl %eax, (%eax);pushl %ebp": 1,
                "insb %dx, %es:(%edi);imull $, (%eax), %esp;andb %dh, %gs:(%eax);jb  <ScsiPortWriteRegisterUshort+>;imull $, (%ecx,%ebp,), %esi": 1,
                "andb %dh, (%bx,%si);jb  <ScsiPortWriteRegisterUshort+>;imull $, (%ecx,%ebp,), %esi;bound (%ebp), %ebp;outsw (%esi), %dx": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;jbe  <ScsiPortWriteRegisterUshort+>;andb %dh, (%eax);js  <ScsiPortWriteRegisterUshort+>": 2,
                "andb %dh, (%eax);js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>;orb (%eax), %al;addb %al, (%eax)": 1,
                "addb %al, (%eax);addb %ch, (%esi);das;das;bound (%edi), %ebp": 8,
                "subb %cl, (%ebp);pushl %ebx;pushl %esp;incl %ebp;pushl %edx": 1,
                "pushl %edx;incl %ebp;incl %ebx;decl %edi;pushl %edx": 1,
                "subl %esp, (%eax);cmpl $, %eax;js  <ScsiPortWriteRegisterUshort+>;orb (%eax), %al;subl $, %eax": 1,
                "imull $, %fs:(%ebx), %esp;andb %dh, (%eax);js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>;addb %dl, (%ebx)": 1,
                "andb %dh, (%eax);js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>;addb %dl, (%ebx);popal": 1,
                "js  <ScsiPortWriteRegisterUshort+>;addb %dl, (%ebx);jae  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);decl %ecx": 1,
                "andl $, %eax;outsb (%esi), %dx;incl %ebx;jns  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp": 1,
                "incl %ebx;outsl (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;outsw %gs:(%esi), %dx": 1,
                "je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>": 2,
                "outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;bound (%ebp), %ebp;subb %ah, (%ecx);je  <ScsiPortWriteRegisterUshort+>": 1,
                "jbe  <ScsiPortWriteRegisterUshort+>;subl %esp, (%eax);jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;imull $, (%ecx,%ebp,), %esi": 2,
                "incl %ecx;pushl %edx;decl %esi;decl %ecx;decl %esi": 5,
                "addb %cl, (%ecx);pushl %edx;popal;pushl %eax;popal": 1,
                "outsl (%esi), %dx;outsl (%esi), %dx;andb %ah, (%edx);orb (%bx,%si), %al;incl %esi": 1,
                "andb %ah, (%ecx,%ebp,);imull $, (%edx), %ecx;incl %esi;popal;imull $, (%ebp), %ebp": 1,
                "imull $, (%edx), %ecx;incl %esi;popal;imull $, (%ebp), %ebp;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "popl %eax;addl %eax, (%eax);popl %eax;addl %eax, (%eax);xorb $, %al": 1,
                "addl %eax, (%eax);xorb $, %al;addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "imull $, (%edx), %edi;orb %fs:(%eax), %al;incl %ebp;js  <ScsiPortWriteRegisterUshort+>;xorb (%edi), %al": 1,
                "andb %al, (%esi);insb %dx, %es:(%edi);pushl %eax;outsl (%esi), %dx;imull $, (%esi), %ebp": 4,
                "js  <ScsiPortWriteRegisterUshort+>;xorb (%ebx), %dl;popal;jb  <ScsiPortWriteRegisterUshort+>;pushl $": 1,
                "outsb %gs:(%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;jns  <ScsiPortWriteRegisterUshort+>;popal;je  <ScsiPortWriteRegisterUshort+>": 1,
                "imull $, (%edx), %esi;jns  <ScsiPortWriteRegisterUshort+>;incl %ebp;outsb (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>": 1,
                "imull $, (%esi), %ebp;andb %ah, ;imull $, (%edx), %esi;outsb (%esi), %dx;andb %bh, ": 1,
                "andb %bh, ;addb %ah, (%esi);insb %dx, %es:(%edi);je  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;andb %bh, ;addb %ch, (%esi);insl %dx, %es:(%edi)": 1,
                "andb %bh, ;addb %ch, (%esi);insl %dx, %es:(%edi);andb %bh, %gs:;addb %cl, (%edx)": 1,
                "insl %dx, %es:(%edi);andb %bh, %gs:;addb %cl, (%edx);addb %al, (%ebp);je  <ScsiPortWriteRegisterUshort+>": 1,
                "outsb (%esi), %dx;andb %dh, (%bp,%di);jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;bound (%edi,%ebp,), %ebp": 1,
                "outsl (%esi), %dx;arpl %bp, (%ebx);jae  <ScsiPortWriteRegisterUshort+>;jp  <ScsiPortWriteRegisterUshort+>;cmpb (%eax), %ah": 1,
                "insl %dx, %es:(%di);outsb %gs:(%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;jp  <ScsiPortWriteRegisterUshort+>": 2,
                "popl %edi;jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;jne  <ScsiPortWriteRegisterUshort+>": 2,
                "je  <ScsiPortWriteRegisterUshort+>;popl %edi;jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;cmpb (%eax), %ah;andl $, %eax;outsb (%esi), %dx;outsl (%esi), %dx": 1,
                "outsl (%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "insl %dx, %es:(%edi);outsb (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;arpl %bp, (%edi);outsb (%esi), %dx": 1,
                "andb %ah, ;popal;imull $, (%bp,%di), %esp;js  <ScsiPortWriteRegisterUshort+>;addb %ah, (%esi)": 1,
                "imull $, (%esi), %ebp;jbe  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;outsb (%esi), %dx": 1,
                "outsb (%esi), %dx;popl %edi;insb %dx, %es:(%edi);jbe  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi)": 2,
                "cmpb (%eax), %ah;andl $, %eax;jb  <ScsiPortWriteRegisterUshort+>;popal;je  <ScsiPortWriteRegisterUshort+>": 1,
                "popal;je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;andb %ah, ;jbe  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx": 1,
                "andl $, %eax;imull $, (%edx), %esi;outsl (%esi), %dx;cmpb %gs:(%eax), %ah;andl $, %eax": 1,
                "andl $, %eax;popal;je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;popl %edi": 1,
                "popl %edi;arpl %bp, (%edi);jo  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;bound (%ecx), %ebp": 1,
                "addb %dh, (%ebp);imull $, (%ecx), %esi;andb %bh, ;js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>": 1,
                "outsb (%esi), %dx;jbe  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);imull $, (%eax), %esp;andb %ah, (%edx)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;outsl %fs:(%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;outsl (%esi), %dx": 3,
                "jb  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;andb %dh, %fs:(%eax,%ebp,);andb %dh, (%edx)": 1,
                "andb %ah, %fs:(%esi);popal;je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "outsl (%esi), %dx;popal;jb  <ScsiPortWriteRegisterUshort+>;addb %al, (%ebp);je  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;addb %al, (%ebp);je  <ScsiPortWriteRegisterUshort+>;incl %edi;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "arpl %bp, (%ebx);imull $, (%edx), %edi;je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;andb %ah, ": 1,
                "insl %dx, %es:(%di);outsb %gs:(%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;imull $, (%edx), %edi;je  <ScsiPortWriteRegisterUshort+>": 1,
                "arpl %si, (%edi,%ebp,);jae  <ScsiPortWriteRegisterUshort+>;andb %ah, ;pushl %esp;pushl $": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;jp  <ScsiPortWriteRegisterUshort+>;andb %ch, (%ebp);jae  <ScsiPortWriteRegisterUshort+>;andb %ah, (%edx)": 1,
                "imull $, %fs:(%esi), %ebp;arpl %bp, (%ebx);andl $, %eax;bound (%edi,%ebp,), %ebp;imull $, (%eax), %esp": 1,
                "outsb (%esi), %dx;addb %al, %cs:(%bx,%si);addb %al, (%eax);incl %edx;insb %dx, %es:(%edi)": 1,
                "andb %ah, %gs:(%esi);insb %dx, %es:(%edi);andb %bl, %cs:(%edx);jb  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;subb %ch, %gs:(%ecx);andb %al, (%edx,%esi,);jbe  <ScsiPortWriteRegisterUshort+>;decl %esi": 1,
                "popal;jb  <ScsiPortWriteRegisterUshort+>;imull $, (%ecx), %esp;imull $, (%eax), %ebp;andb %al, (%edx)": 1,
                "andb %ch, (%esi);je  <ScsiPortWriteRegisterUshort+>;popal;andb %ah, (%esi);jae  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;orb (%eax), %al;bound (%edi,%ebp,), %ebp;imull $, (%edi), %ebx;andb %bh, ": 1,
                "imull $, (%ebx), %esi;andb %ah, ;jb  <ScsiPortWriteRegisterUshort+>;popl %edi;imull $, (%esi), %ebp": 1,
                "decl %ecx;outsb (%esi), %dx;outsl (%esi), %dx;subb %ch, %gs:(%ecx);andb %cl, (%ecx)": 1,
                "andb %bh, ;addb %cl, (%ecx);outsl (%esi), %dx;decl %edi;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;jne  <ScsiPortWriteRegisterUshort+>;andb %ah, (%ebp);arpl %sp, (%eax)": 1,
                "outsb (%esi), %dx;andb %ch, (%bx,%di);outsl (%esi), %dx;andb %ch, %gs:(%ecx);outsw (%esi), %dx": 1,
                "outsl (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);popl %edi;imull $, (%esi), %ebp": 1,
                "popl %edi;imull $, (%esi), %ebp;insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %bp, (%ebx)": 2,
                "cmpl $, %eax;addb %dh, (%esi);jb  <ScsiPortWriteRegisterUshort+>;imull $, (%edi), %ebp;orb %fs:(%eax), %al": 1,
                "popal;arpl %bp, (%eax);andb %ah, ;imull $, (%edx), %esi;cmpl $, %eax": 1,
                "addb %ch, (%edi);xorb %fs:(%eax), %ah;cmpl $, %eax;subb $, %al;andl $, %eax": 1,
                "cmpl $, %eax;subb $, %al;andl $, %eax;andb %bh, %fs:(%ebp);addb %al, (%eax)": 1,
                "incl %ebp;js  <ScsiPortWriteRegisterUshort+>;xorb (%ebx), %al;jo  <ScsiPortWriteRegisterUshort+>;incl %esp": 1,
                "imull $, (%esi), %ebp;jae  <ScsiPortWriteRegisterUshort+>;subb %ch, (%ecx);orb (%eax), %al;addb %al, (%ebp)": 1,
                "orb (%eax), %al;addb %al, (%ebp);je  <ScsiPortWriteRegisterUshort+>;pushl %edx;popal": 1,
                "andb %bh, %gs:;addb %cl, (%ecx);outsl (%esi), %dx;andb %ch, %gs:(%ecx);andb %ch, (%esi)": 2,
                "popal;jb  <ScsiPortWriteRegisterUshort+>;imulw $, (%ebp), %bp;andb %dh, (%ebx);insl %dx, %es:(%edi)": 1,
                "imull $, (%ebx), %esp;addb %al, %cs:(%eax);das;addb %al, (%ebp);je  <ScsiPortWriteRegisterUshort+>": 1,
                "das;addb %al, (%ebp);je  <ScsiPortWriteRegisterUshort+>;decl %edi;jo  <ScsiPortWriteRegisterUshort+>": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);bound (%edi), %ebp;imull $, (%ebx), %esp;orb (%eax), %al": 1,
                "xorl (%edx), %esi;addb %al, (%eax);addb %al, (%eax);incl %esi;popal": 1,
                "andb %al, (%ebp);imull $, (%ebx), %esp;andb %ah, ;jne  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl %ebx;incl %ebp;incl %ebx;pushl %esp;decl %edi": 3,
                "pushl %esp;jns  <ScsiPortWriteRegisterUshort+>;cmpb %gs:(%eax), %ah;andl $, %eax;arpl %sp, ": 2,
                "cmpb (%eax), %ah;andl $, %eax;outsb (%esi), %dx;imull $, (%esi), %ebp;outsb (%esi), %dx": 1,
                "imull $, (%esi), %ebp;outsb (%esi), %dx;cmpb (%eax), %ah;xorb %bh, (%eax);js  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %dh, (%ebx);jp  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;subb %al, (%esi);pushl %esp": 1,
                "js  <ScsiPortWriteRegisterUshort+>;orb (%eax), %al;decl %edx;jne  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>": 1,
                "js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>;xorb %bh, (%eax);js  <ScsiPortWriteRegisterUshort+>;xorb %bh, (%eax)": 1,
                "js  <ScsiPortWriteRegisterUshort+>;xorb %bh, (%eax);js  <ScsiPortWriteRegisterUshort+>;xorb %bh, (%eax);js  <ScsiPortWriteRegisterUshort+>": 1,
                "js  <ScsiPortWriteRegisterUshort+>;xorb %bh, (%eax);js  <ScsiPortWriteRegisterUshort+>;addb %cl, (%edi);insl %dx, %es:(%edi)": 1,
                "xorb %bh, (%eax);js  <ScsiPortWriteRegisterUshort+>;addb %cl, (%edi);insl %dx, %es:(%edi);decl %esi": 1,
                "outsl (%esi), %dx;outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;imull $, (%edx), %esi;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %ah, ;arpl %si, %gs:(%edi,%ebp,);jae  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %ah, ;jne  <ScsiPortWriteRegisterUshort+>;bound (%ebp), %esp;decl %edi;decw %ax": 1,
                "imull $, (%esp), %esp;je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;cmpb (%eax), %ah;andl $, %eax": 1,
                "outsb (%esi), %dx;incl %esi;insb %dx, %es:(%edi);popal;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "insb %dx, %es:(%edi);jne  <ScsiPortWriteRegisterUshort+>;decl %esp;popal;bound (%ebp), %esp": 1,
                "arpl %bp, (%ebp,%esi,);je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;jp  <ScsiPortWriteRegisterUshort+>": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;jp  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;bound (%ecx), %ebp;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "outsl (%esi), %dx;insb %dx, %es:(%edi);andb %dh, %fs:(%edi,%ebp,);ja  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);orb %cs:(%eax), %dl;popal": 1,
                "arpl %si, %gs:(%edi,%ebp,);jae  <ScsiPortWriteRegisterUshort+>;subl %esp, (%eax);incl %esi;popal": 2,
                "popal;imull $, (%ebp), %ebp;jae  <ScsiPortWriteRegisterUshort+>;imull $, %gs:(%edx), %ecx;addb %al, (%esi)": 1,
                "outsb (%esi), %dx;imull $, (%esi), %ebp;outsb (%esi), %dx;andb %al, (%esi);pushl %esp": 1,
                "je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi)": 2,
                "je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;incl %ebx;insb %dx, %es:(%edi);jne  <ScsiPortWriteRegisterUshort+>": 4,
                "pushl $;subl %esp, (%eax);incl %ebx;insb %dx, %es:(%edi);jne  <ScsiPortWriteRegisterUshort+>": 1,
                "insb %dx, %es:(%edi);jne  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;pushl $": 2,
                "jb  <ScsiPortWriteRegisterUshort+>;pushl $;jb  <ScsiPortWriteRegisterUshort+>;popal;jns  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl $;jb  <ScsiPortWriteRegisterUshort+>;popal;jns  <ScsiPortWriteRegisterUshort+>;subl %esp, (%eax)": 1,
                "arpl %sp, ;arpl %sp, ;arpl %cx, (%edx);addb %al, (%ecx);je  <ScsiPortWriteRegisterUshort+>": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;decl %esi;pushl %esp;andb %bh, ": 1,
                "incl %esp;popal;je  <ScsiPortWriteRegisterUshort+>;andb %bh, ;addb %al, (%ebx)": 1,
                "popal;je  <ScsiPortWriteRegisterUshort+>;andb %bh, ;addb %al, (%ebx);jne  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;andb %bh, ;addb %al, (%ebx);jne  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %bh, %gs:;addb %al, (%ebx);jne  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "decl %esi;jne  <ScsiPortWriteRegisterUshort+>;bound (%ebp), %esp;decl %edi;incw %bx": 1,
                "je  <ScsiPortWriteRegisterUshort+>;popal;incl %esi;imull $, (%ebp), %ebp;je  <ScsiPortWriteRegisterUshort+>": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;cmpl $, %eax;js  <ScsiPortWriteRegisterUshort+>;addb %al, (%esi)": 1,
                "cmpl $, %eax;js  <ScsiPortWriteRegisterUshort+>;addb %al, (%esi);jne  <ScsiPortWriteRegisterUshort+>;andb %ah, %fs:(%ebx)": 1,
                "je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;orb (%eax), %al;incl %esi;incl %ecx": 1,
                "orb (%eax), %al;incl %esi;incl %ecx;decl %esp;pushl %ebx": 2,
                "subl %esp, (%eax);incl %esp;imull $, (%edx), %esi;jns  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>": 2,
                "popal;je  <ScsiPortWriteRegisterUshort+>;pushl %ebx;popal;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "incl %esi;incl %ecx;pushl %esp;xorl (%edx), %esi;andb %ah, (%eax)": 1,
                "arpl %ax, (%eax);addb %al, (%esi);incl %edi;je  <ScsiPortWriteRegisterUshort+>;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %al, (%eax);addb %al, (%esi);pushl %edx;imull $, %gs:(%bp,%di), %esi;jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;imulw $, (%eax), %di;andl $, %eax;jae  <ScsiPortWriteRegisterUshort+>;pushl %ebx": 1,
                "pushl %ebx;imull $, (%edx), %edi;orb %fs:(%eax), %al;addb %cl, (%ecx);outsl (%esi), %dx": 1,
                "je  <ScsiPortWriteRegisterUshort+>;subl %esp, (%eax);andl $, %eax;je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "insl %dx, %es:(%edi);andb %ah, %gs:(%edi);daa;orb (%eax), %al;decl %esi": 2,
                "imull $, (%ebp), %ebp;cmpl $, %eax;addb %cl, (%ecx);outsl (%esi), %dx;decl %edi": 1,
                "outsb (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;arpl %ax, (%eax);incl %esp": 1,
                "decl %esp;outsb %gs:(%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;cmpb (%eax), %ah;andl $, %eax": 1,
                "addb %cl, (%esi);jae  <ScsiPortWriteRegisterUshort+>;imull $, (%ebx), %esi;andb %ch, ;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl %eax;outsl (%esi), %dx;imull $, (%esi), %ebp;andb %ah, ;andb %ah, ": 1,
                "arpl %bp, (%ebx);imull $, (%edx), %edi;orb (%eax), %al;decl %esp;popal": 1,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx);imull $, (%edi), %ebp;cmpb (%eax), %ah": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;pushl %eax;jb  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;arpl %bp, %gs:(%edi)": 1,
                "arpl %bp, %gs:(%edi);cmpb %fs:(%eax), %ah;andl $, %eax;je  <ScsiPortWriteRegisterUshort+>;arpl %bp, %gs:(%edi)": 1,
                "outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;decl %ebp;popal;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;decl %ebp;popal;jae  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %ah, %gs:(%esi);jne  <ScsiPortWriteRegisterUshort+>;andb %ah, %fs:(%ecx);andb %ah, ;addb %al, (%eax)": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;arpl %ax, %cs:(%eax);pushl %eax;js  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl %eax;js  <ScsiPortWriteRegisterUshort+>;incl %ebx;popal;insb %dx, %es:(%edi)": 2,
                "js  <ScsiPortWriteRegisterUshort+>;incl %ebx;popal;insb %dx, %es:(%edi);insb %dx, %es:(%edi)": 2,
                "incl %ebx;popal;insb %dx, %es:(%edi);insb %dx, %es:(%edi);subb %dh, (%eax)": 3,
                "subb $, %al;bound (%ebp), %esi;andb %dh, (%edx);je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %dh, (%edx);je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;andb %ah, %fs:(%ebp);jb  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %ch, (%esi);je  <ScsiPortWriteRegisterUshort+>;xorb %ch, (%ecx);addb %ch, -(%edi);testb $, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %dh, %dh;addl %eax, (%eax);orb %dh, %dh": 1,
                "addl %eax, (%eax);orb %dh, %dh;addl %eax, (%eax);adcb $-, %al;addl %eax, (%eax)": 1,
                "imull $, (%ecx,%ebp,), %esi;subb %ch, (%ecx);orb (%eax), %al;addb %al, (%eax);addb %ch, (%esi)": 1,
                "imull $, (%esi), %ebp;imulw $, (%ebp), %bp;je  <ScsiPortWriteRegisterUshort+>;outsw (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %ch, (%edi);andb %ch, (%ebp);insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>": 4,
                "insb %dx, %es:(%edi);jb  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;addb %al, (%ebp);jb  <ScsiPortWriteRegisterUshort+>": 1,
                "insb %dx, %es:(%edi);jb  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;addb %cl, (%ecx);imull $, (%edi), %ecx": 1,
                "andb %ch, (%esi);je  <ScsiPortWriteRegisterUshort+>;outsw (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>;orb %cs:(%eax), %al": 2,
                "orb %cs:(%eax), %al;addb %al, (%eax);addb %cl, (%ecx);imull $, (%edi), %eax;pushl %ebx": 1,
                "xorb %dh, %cs:(%eax);xorl %esp, (%eax);decl %esi;popal;insl %dx, %es:(%edi)": 1,
                "addb %cl, (%ecx);imull $, (%edx), %edx;je  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;insl %dx, %es:(%edi)": 4,
                "imull $, (%esi), %ebp;insl %dx, %es:(%edi);bound (%ebp), %esp;subb %ch, (%ecx);andb %dl, (%ebx)": 5,
                "insl %dx, %es:(%edi);bound (%ebp), %esp;subb %ch, (%ecx);andb %dl, (%ebx);arpl %si, (%ecx,%ebp,)": 1,
                "pushl %ebx;imull $, (%edx), %edi;orb %fs:(%eax), %al;xorl (%eax), %esp;decl %esi": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;orb %cs:(%eax), %al;decl %ecx;outsb (%esi), %dx;imull $, (%eax), %edx": 1,
                "imull $, (%esi), %ebp;das;jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;arpl %ax, %cs:(%eax)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;arpl %ax, %cs:(%eax);addb %al, (%ebp);jb  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %al, (%ebp);jb  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;andb %ah, (%esi);insb %dx, %es:(%edi)": 1,
                "popl %ebp;orb %cs:(%eax), %al;pushl %eax;jb  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>;orb %cs:(%eax), %al;addb %al, (%eax)": 1,
                "outsb (%esi), %dx;andb %ah, %fs:;je  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;decl %ecx": 1,
                "imull $, (%esi), %ebp;decl %ecx;outsb (%esi), %dx;imull $, (%eax), %edx;imull $, (%ebp), %ebp": 1,
                "insb %dx, %es:(%edi);cmpb %fs:(%eax), %ah;subb %dh, (%eax);js  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi)": 1,
                "xorb %bh, (%eax);insb %dx, %es:(%edi);js  <ScsiPortWriteRegisterUshort+>;orb (%eax), %al;incl %ebx": 1,
                "outsl (%esi), %dx;imull $, (%ebp), %esi;popal;bound (%ebp), %ebp;subl %esp, (%eax)": 2,
                "js  <ScsiPortWriteRegisterUshort+>;andb %ch, (%edi);je  <ScsiPortWriteRegisterUshort+>;imull $, (%ebp), %esp;outsl (%esi), %dx": 1,
                "addb %cl, (%ebp);jb  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;jae  <ScsiPortWriteRegisterUshort+>;xorb %bh, (%eax)": 1,
                "outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;andb %dh, (%bx,%si);jae  <ScsiPortWriteRegisterUshort+>": 1,
                "incl %ecx;insb %dx, %es:(%edi);insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%eax)": 1,
                "arpl %sp, (%eax);insb %dx, %es:(%edi);outsl (%esi), %dx;ja  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi)": 1,
                "outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;subb $, %al;decl %esp;popal": 1,
                "andb %cl, (%ebp);jo  <ScsiPortWriteRegisterUshort+>;subb %al, (%edx);jae  <ScsiPortWriteRegisterUshort+>;andb %al, (%ecx)": 1,
                "outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;imull $, (%edx), %edi;insl %dx, %es:(%edi)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;imull $, (%edx), %edi;insl %dx, %es:(%edi);outsl (%esi), %dx": 1,
                "decl %ebp;insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;andb %cl, (%ebp)": 1,
                "addb %al, (%edx);andb %ch, %fs:(%ebp);insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;addb %cl, (%edi,%ebp,);pushl %eax": 1,
                "jns  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);incl %ebx;outsl (%esi), %dx": 1,
                "addb %al, %gs:(%edx);outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;jbe  <ScsiPortWriteRegisterUshort+>": 2,
                "jb  <ScsiPortWriteRegisterUshort+>;jbe  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;pushl %edx;imull $, %gs:(%bp,%di), %esi": 1,
                "jbe  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;pushl %edx;imull $, %gs:(%bp,%di), %esi;je  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %dl, (%edx);jae  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;addb %al, %gs:(%eax);addb %cl, (%ebp)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;subb %ch, (%ecx);andb %ah, (%ebx);insb %dx, %es:(%edi);insb %dx, %es:(%edi)": 2,
                "insb %dx, %es:(%edi);andb %ah, %fs:(%esi);jb  <ScsiPortWriteRegisterUshort+>;xorb %ah, (%eax);bound (%ecx), %edi": 6,
                "andb %ah, (%ecx);insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx);imull $, (%edi), %ebp": 9,
                "outsl (%esi), %dx;arpl %sp, (%ecx);andb %ah, %gs:;je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>": 4,
                "imull $, (%edi), %ebp;insb %dx, %es:(%edi);cmpb %fs:(%eax), %ah;outsl (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "arpl %sp, (%ecx);imull $, (%edi), %ebp;outsb (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "popal;jb  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;jo  <ScsiPortWriteRegisterUshort+>;andb %ah, %gs:(%di)": 1,
                "orb (%eax), %al;addb %al, (%eax);addb %ch, ;subl $, %eax;subl $, %eax": 1,
                "orl %eax, (%eax);andb %al, (%eax);subb (%eax), %al;subl $, %eax;addb %dl, (%eax)": 1,
                "addb %dl, (%eax);decl %eax;addb %dl, (%ebx);decl %ebx;addb %cl, (%eax,%eax)": 1,
                "addb (%eax), %al;xchgl %esp, (%edi);addb (%eax), %al;xchgl %ebp, %eax;daa": 1,
                "addb (%eax), %al;addl $, %eax;daa;addb (%eax), %al;addb (%eax), %al": 1,
                "andb %bh, ;andb %bh, (%esp,%edi,);subb %cl, (%esi);js  <ScsiPortWriteRegisterUshort+>;subl $, %eax": 1,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %bp, (%ebx);subl $, %eax;popal": 2,
                "outsl (%esi), %dx;arpl %bp, (%ebx);addb %al, (%eax);addb %al, (%eax);subb %dl, (%eax)": 1,
                "popal;popl %ebx;xorb %bl, (%ebp);incl %esi;insb %dx, %es:(%edi)": 1,
                "js  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);js  <ScsiPortWriteRegisterUshort+>;andb %dl, (%ecx,%edi,);orb %gs:(%eax), %al": 1,
                "insb %dx, %es:(%edi);js  <ScsiPortWriteRegisterUshort+>;andb %dl, (%ecx,%edi,);orb %gs:(%eax), %al;pushl %edx": 1,
                "subb (%edx), %dl;incl %esp;popl %edx;decl %edi;decl %esi": 1,
                "imull $, (%edx), %edi;incl %ebp;incl %ecx;pushl %eax;popl %edi": 1,
                "pushl %edx;incl %ebp;incl %esp;popl %edx;decl %edi": 2,
                "decl %edi;decl %esi;incl %ebp;popl %edi;decl %esp": 1,
                "decl %edi;decl %esi;incl %ebp;popl %edi;decl %ebp": 2,
                "incl %ebp;popl %edi;decl %eax;decl %ecx;subb %al, (%edx)": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;popal;je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;imull $, (%ebx), %esp": 2,
                "andb %ah, (%ebp);popal;jne  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;pushl $": 1,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %dx, (%ecx,%ebp,);andb %bh, %gs:;xorb $, %al": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;andl $, %eax;decl %eax;incl %ebp;incl %ecx": 1,
                "incl %ebp;incl %ecx;pushl %eax;cmpb (%eax), %ah;incl %ecx": 1,
                "jo  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx)": 2,
                "subb $, %al;andl $, %eax;andb %ch, ;je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "bound (%ebp), %ebp;outsw (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>;andb %ah, %fs:(%esi);jb  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %ah, (%bx,%di);cmpl $, %eax;incl %ebp;andl (%edi), %esp;addb %al, (%eax)": 1,
                "outsb (%esi), %dx;andb %dh, (%si);andb %ah, (%esi);andb %ah, %gs:;je  <ScsiPortWriteRegisterUshort+>": 1,
                "outsl (%esi), %dx;imull $, (%esi), %ebp;jo  <ScsiPortWriteRegisterUshort+>;andb %ah, (%edx);outsl (%esi), %dx": 1,
                "subb $, %al;jb  <ScsiPortWriteRegisterUshort+>;jno  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;andb %ah, %fs:(%edi)": 1,
                "decl %ecx;outsb (%esi), %dx;imull $, (%ecx,%ebp,), %esi;decl %eax;popal": 2,
                "jo  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;jns  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;decl %ecx": 2,
                "outsb (%esi), %dx;js  <ScsiPortWriteRegisterUshort+>;andb %ah, (%ebx);arpl %bp, %gs:(%ebx);outsb (%esi), %dx": 1,
                "outsb (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>;decl %ebx;jns  <ScsiPortWriteRegisterUshort+>;andl $, %eax": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;decl %ebx;jns  <ScsiPortWriteRegisterUshort+>;andl $, %eax;insb %dx, %es:(%edi)": 1,
                "pushl %edx;incl %ebp;addb %dl, (%edx);incl %ebp;outsb (%esi), %dx": 1,
                "decl %ebx;jns  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>": 1,
                "jns  <ScsiPortWriteRegisterUshort+>;outsl %fs:(%esi), %dx;outsb (%esi), %dx;andb %ch, %gs:;subb $, %al": 1,
                "jns  <ScsiPortWriteRegisterUshort+>;andb %ah, (%ecx);jae  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);jne  <ScsiPortWriteRegisterUshort+>": 1,
                "jns  <ScsiPortWriteRegisterUshort+>;andb %ah, ;andb %ah, ;andb %ah, ;addb %al, (%eax)": 1,
                "andb %ah, (%ebp);insl %dx, %es:(%edi);outsb %gs:(%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;daa": 1,
                "imulw $, (%esi), %bp;jne  <ScsiPortWriteRegisterUshort+>;andb %ch, (%ebx);jns  <ScsiPortWriteRegisterUshort+>;daa": 1,
                "insb %dx, %es:(%edi);andb %ah, ;pushl %edx;decl %edi;jo  <ScsiPortWriteRegisterUshort+>": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;subb %ah, ;orb (%eax), %al": 1,
                "outsb (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;insb %dx, %es:(%edi);pushl %ebx": 4,
                "popl %esp;addb %dl, (%edx);addb %ah, %gs:(%edi);imull $, (%eax), %eax;jb  <ScsiPortWriteRegisterUshort+>": 7,
                "popl %esp;addb %dl, (%ebx);popl %ecx;addb %dl, (%ebx);pushl %esp": 8,
                "addb %ch, (%esi);outsl (%esi), %dx;addb %dh, (%edi);outsb (%esi), %dx;addb %al, (%edi)": 1,
                "addb %dh, (%edi);outsb (%esi), %dx;addb %al, (%edi);outsl (%esi), %dx;addb %ch, (%edi)": 1,
                "outsb (%esi), %dx;addb %al, (%edi);outsl (%esi), %dx;addb %ch, (%edi);addb %al, %fs:(%eax)": 1,
                "outsl (%esi), %dx;addb %ch, (%esi);je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx": 6,
                "outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %ah, (%ebp);je  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax)": 1,
                "cmpl $, %eax;decl %esp;addb %dl, (%edx);incl %ebp;outsb (%esi), %dx": 1,
                "pushl %eax;addb (%eax), %al;loopne ;addb (%eax), %al;sbbl %esi, (%eax)": 1,
                "loopne ;addb (%eax), %al;sbbl %esi, (%eax);addb %al, (%edi);addb (%eax), %al": 1,
                "decl %esp;imull $, (%edi), %esp;imull $, %fs:(%ebp), %esi;imull $, (%eax), %eax;insb %dx, %es:(%edi)": 1,
                "addb %dl, (%edx);addb %cl, %fs:(%ebp);outsb %gs:(%si), %dx;je  <ScsiPortWriteRegisterUshort+>;addb %al, (%edx)": 1,
                "pushl %edx;andb %dh, (%edi,%ebp,);arpl %bp, (%edi);je  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx": 2,
                "jb  <ScsiPortWriteRegisterUshort+>;decl %edi;jo  <ScsiPortWriteRegisterUshort+>;imull $, (%edi), %ebp;addb %dl, (%eax)": 1,
                "addb (%bx,%si), %al;sahf;popl %edx;addb (%eax), %al;ja  <ScsiPortWriteRegisterUshort+>": 1,
                "sahf;popl %edx;addb (%eax), %al;ja  <ScsiPortWriteRegisterUshort+>;addb %cl, (%ebp,%esi,)": 1,
                "andb %bl, %fs:(%ecx);andb %dh, (%edi,%ebp,);jae  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);arpl %si, %gs:(%esp,%ebp)": 1,
                "pushl %edx;addb %al, %cs:(%eax);addb %al, (%eax);nop;nop": 1,
                "andb %dl, (%di);jb  <ScsiPortWriteRegisterUshort+>;decl %ecx;outsb (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>": 1,
                "outsl (%esi), %dx;insl %dx, %es:(%edi);andb %bl, (%ebx);imull $, (%ebx), %esi;andb %dh, (%ebx)": 1,
                "arpl %si, (%ecx,%ebp,);outsb (%esi), %dx;orb %cs:(%eax), %al;incl %esp;imull $, (%ebx), %esi": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;pushl %ebx;je  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "popal;arpl %bp, (%ebx);jb  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>": 1,
                "arpl %bp, (%ebx);jb  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;insb %dx, %es:(%edi)": 1,
                "insb %dx, %es:(%edi);incl %edx;outsl (%esi), %dx;js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>": 1,
                "incl %edx;outsl (%esi), %dx;js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>;incl %ebx": 2,
                "insb %dx, %es:(%edi);incl %ebp;arpl %si, %gs:(%ebx,%esi,);pushl %ebx;pushl $": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %cl, (%edx);insb %dx, %es:(%edi)": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);incl %ecx": 1,
                "insl %dx, %es:(%edi);bound (%ebp), %esp;andb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 3,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %ch, (%esi)": 2,
                "jbe  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;imull $, (%edi), %ebp;imull $, (%ebx), %esi;pushl %eax": 1,
                "subl $, %eax;outsb (%esi), %dx;imull $, (%eax), %esp;cmpl $, %eax;addb %al, (%ebx)": 1,
                "andb %dh, (%eax);js  <ScsiPortWriteRegisterUshort+>;popl %eax;subl %ecx, (%edx);addb %al, (%eax)": 1,
                "je  <ScsiPortWriteRegisterUshort+>;andl $, %eax;addb %al, (%eax);pushl %edi;imull $, (%esi), %ebp": 1,
                "insl %dx, %es:(%edi);jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;incl %esp;insb %dx, %es:(%edi)": 1,
                "insb %dx, %es:(%edi);insb %dx, %es:(%edi);cmpb (%eax), %ah;incl %esp;insb %dx, %es:(%edi)": 1,
                "andb %ah, ;popal;jae  <ScsiPortWriteRegisterUshort+>;andb %ah, ;insl %dx, %es:(%edi)": 1,
                "insb %dx, %es:(%edi);cmpb (%eax), %ah;decl %esp;outsl (%esi), %dx;popal": 1,
                "cmpb (%eax), %ah;decl %esp;outsl (%esi), %dx;popal;incl %ebp": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;cmpl $, %eax;addb %dl, (%edi);outsb (%esi), %dx;decl %esp": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;popal;imull $, %fs:(%esi), %ebp;insl %dx, %es:(%edi);andb %ah, (%esi)": 1,
                "popal;imull $, %fs:(%esi), %ebp;insl %dx, %es:(%edi);andb %ah, (%esi);insb %dx, %es:(%edi)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;subl $, %eax;decl %esi;pushl %esp;andb %ch, (%eax)": 1,
                "outsb (%esi), %dx;andb %ah, (%ebp);arpl %si, %gs:(%ebp);popal;bound (%ebp), %ebp": 1,
                "imull $, (%ebp), %ebp;popal;jae  <ScsiPortWriteRegisterUshort+>;andb %dl, (%eax);cmpb (%eax), %ah": 1,
                "popal;jae  <ScsiPortWriteRegisterUshort+>;andb %dl, (%eax);cmpb (%eax), %ah;xorb %bh, (%eax)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;popal;imull $, %fs:(%esi), %ebp;je  <ScsiPortWriteRegisterUshort+>": 1,
                "popal;subb %ch, %gs:(%bx,%di);cmpb (%eax), %ah;pushl %ebx;decl %edi": 1,
                "incl %esp;andb %ah, ;pushl %esi;pushl %ebx;andb %ah, ": 1,
                "incl %esi;jb  <ScsiPortWriteRegisterUshort+>;decl %esp;jb  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax)": 1,
                "insb %dx, %es:(%edi);imull $, (%ecx), %esp;outsb (%esi), %dx;decl %esp;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "popal;insl %dx, %es:(%edi);subb %ch, %gs:(%ecx);cmpb (%eax), %ah;incl %esi": 1,
                "outsb (%esi), %dx;pushl %ebx;arpl %sp, (%ecx);pushl %edx;jb  <ScsiPortWriteRegisterUshort+>": 2,
                "jb  <ScsiPortWriteRegisterUshort+>;arpl %sp, (%ecx);decl %ecx;insl %dx, %es:(%edi);jo  <ScsiPortWriteRegisterUshort+>": 3,
                "decl %esp;jb  <ScsiPortWriteRegisterUshort+>;decl %esp;outsl (%esi), %dx;popal": 1,
                "popal;incl %edx;popal;jae  <ScsiPortWriteRegisterUshort+>;andb %dh, (%eax)": 1,
                "andb %dh, (%eax);js  <ScsiPortWriteRegisterUshort+>;popl %eax;orb (%eax), %al;incl %ebp": 1,
                "andl %ecx, (%edx);addb %dl, (%edi);outsb (%esi), %dx;decl %esp;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "decl %esp;jb  <ScsiPortWriteRegisterUshort+>;pushl %ebx;arpl %sp, (%ecx);decl %ecx": 2,
                "bound (%ebp), %ebp;subl %esp, (%eax);popaw;imull $, (%ebp), %ebp;jo  <ScsiPortWriteRegisterUshort+>": 1,
                "decl %ebp;incl %esp;decl %esp;decl %esp;addb %cl, (%edi,%ebp,)": 1,
                "ja  <ScsiPortWriteRegisterUshort+>;das;ja  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;insb %dx, %es:(%edi)": 1,
                "popal;andb %dh, %fs:(%ebx);arpl %sp, (%ebx);jae  <ScsiPortWriteRegisterUshort+>;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl %eax;decl %edi;pushl %edx;pushl %esp;cmpl $, %eax": 2,
                "decl %edi;pushl %edx;pushl %esp;cmpl $, %eax;addb %ah, (%eax)": 1,
                "je  <ScsiPortWriteRegisterUshort+>;cmpb (%eax), %ah;andl $, %eax;insb %dx, %es:(%edi);insb %dx, %es:(%edi)": 1,
                "popaw;imull $, (%ebp), %ebp;andb %ah, ;addb %al, (%eax);incl %esi": 1,
                "imull $, (%ebp), %ebp;andb %ah, ;addb %al, (%eax);incl %esi;popal": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;jbe  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;daa;andl $, %eax": 1,
                "andb %ah, %gs:;decl %esp;outsl (%esi), %dx;popal;andb %ah, %fs:": 1,
                "andb %ah, %fs:;andb %dh, (%eax);js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>;ja  <ScsiPortWriteRegisterUshort+>": 1,
                "ja  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;andb %dh, (%ebx);jp  <ScsiPortWriteRegisterUshort+>;andb %dh, (%eax)": 1,
                "outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;andb %ah, ;jns  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;addb %dl, (%edi);outsb (%esi), %dx;decl %esp;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl %eax;pushl $;subb %ch, (%ecx);andb %ah, (%ebx);insl %dx, %es:(%edi)": 1,
                "addb %bl, (%eax,%eax);addb %dh, (%ebp);jb  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;addb %ch, %gs:(%esi)": 6,
                "insl %dx, %es:(%edi);addb %ch, (%ecx);outsb (%esi), %dx;addb %ah, (%ecx);insb %dx, %es:(%edi)": 1,
                "addb %ch, (%ecx);outsb (%esi), %dx;addb %ah, (%ecx);insb %dx, %es:(%edi);addb %ah, (%eax)": 1,
                "arpl %bp, (%eax);arpl %bp, (%ebx);jne  <ScsiPortWriteRegisterUshort+>;cmpb (%eax), %ah;xorb %bh, (%eax)": 1,
                "subb $, %al;jae  <ScsiPortWriteRegisterUshort+>;outsb (%si), %dx;popal;je  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;andb %ch, (%edi,%ebp,);andb %dh, %fs:(%edi);je  <ScsiPortWriteRegisterUshort+>;andb %dh, (%ebx)": 1,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;andb %ah, (%esi);outsl (%esi), %dx;insl %dx, %es:(%edi)": 1,
                "andb %ah, ;outsl (%esi), %dx;popal;jb  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi)": 1,
                "incl %ecx;andb %ah, ;insb %dx, %es:(%edi);outsl (%esi), %dx;popal": 1,
                "popal;imull $, %fs:(%esi), %ebp;addb %dl, %cs:(%ebx);jae  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi)": 1,
                "das;pushl %edx;incl %esp;pushl %eax;incl %ecx": 1,
                "decl %ebp;insl %dx, %es:(%edi);jo  <ScsiPortWriteRegisterUshort+>;decl %ebp;insl %dx, %es:(%edi)": 1,
                "outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;arpl %ax, %cs:(%eax);incl %ebp;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;decl %esp;imull $, (%ebx), %esi;jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "imull $, (%ebx), %esi;jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;subb $, %al;jo  <ScsiPortWriteRegisterUshort+>": 1,
                "jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;subb $, %al;jo  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp": 1,
                "imull $, (%eax), %esp;andb %ah, (%eax);addb %dl, (%ebx);jae  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi)": 1,
                "pushl %eax;jb  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);andb %ah, (%eax)": 1,
                "incl %esp;jb  <ScsiPortWriteRegisterUshort+>;jbe  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;andb %al, (%eax)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;jbe  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;andb %al, (%eax);pushl %ebx": 1,
                "andb %ah, (%eax);andb %ah, (%eax);addb %cl, (%ebp);insl %dx, %es:(%edi);outsl (%esi), %dx": 1,
                "andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);addb %cl, (%esi);jae  <ScsiPortWriteRegisterUshort+>": 1,
                "decl %ebp;insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;andb %ah, (%eax)": 2,
                "andb %ah, (%eax);andb %al, (%eax);addb %al, (%ecx);jae  <ScsiPortWriteRegisterUshort+>;incl %esi": 1,
                "xorb (%eax), %al;popl %esp;addb %ah, (%eax,%eax);addb %ch, (%ecx);jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %ch, (%esi);addb %dh, (%ebx);jns  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax)": 1,
                "imull $, (%eax), %eax;incl %edi;addb %dh, (%edx);outsl (%esi), %dx;addb %dh, (%ebp)": 1,
                "andb %ah, ;popl %esp;addb %dl, (%edx);addb %ah, %gs:(%edi);imull $, (%eax), %eax": 1,
                "addb %al, (%eax);addb %bl, (%eax,%eax);addb %ah, (%ebp);addb %ch, (%bx,%di);jae  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %dh, %gs:(%eax,%eax);addb %dl, (%ebx);addb %dh, %gs:(%edx);jbe  <ScsiPortWriteRegisterUshort+>;imull $, (%eax), %eax": 2,
                "jb  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;addb %dh, (%ebp);jo  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax)": 1,
                "popal;addb %ah, (%edi);addb %dl, %gs:(%eax);popal;addb %dh, (%eax,%eax)": 1,
                "addb %al, (%eax);addb %cl, (%ecx);popal;pushl %eax;popal": 1,
                "cmpb (%eax), %ah;outsb (%esi), %dx;outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;outsw (%esi), %dx": 1,
                "andl $, %eax;jae  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);xorl (%edx), %esi;popl %esp": 1,
                "andl $, %eax;popal;pushl %eax;popal;je  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;addb %dl, (%ebx);jb  <ScsiPortWriteRegisterUshort+>;imull $, (%ebx), %esp;andb %ah, (%edi)": 1,
                "addb %dl, (%ebx);jb  <ScsiPortWriteRegisterUshort+>;imull $, (%ebx), %esp;andb %ah, (%edi);andl $, %eax": 1,
                "imull $, (%ebx), %esp;andb %ah, (%edi);andl $, %eax;andl $, %eax;je  <ScsiPortWriteRegisterUshort+>": 1,
                "popl %esp;andl $, %eax;jae  <ScsiPortWriteRegisterUshort+>;andb %ah, (%eax);incl %ecx": 1,
                "andb %ah, (%eax);incl %ecx;imull $, %fs:(%esi), %ebp;je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;addb %ch, (%eax,%eax);addb %cl, (%esi)": 2,
                "addb %cl, (%esi);decl %esp;addb %dl, (%ebx);popl %esp;addb %al, (%ebx)": 1,
                "insb %dx, %es:(%edi);addb %dh, (%ebx);addb %al, (%eax);addb %al, (%eax);popl %esp": 1,
                "addb %ch, (%esi);addb %dh, (%di);popal;addb %ah, (%edi);addb %al, %gs:(%eax)": 1,
                "addb %al, (%eax,%eax);addb %ah, (%esi);popal;addb %dh, (%ebp);insb %dx, %es:(%edi)": 1,
                "addb %dh, (%eax,%eax);addb %cl, (%esi);pushl %ebx;andb %ah, (%ecx);popal": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;andl $, %eax;je  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;andb %ch, (%esi)": 1,
                "imull $, (%esi), %ebp;andb %ch, (%esi);insl %dx, %es:(%edi);jae  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "imull $, (%ebx), %esp;andb %cl, (%esi);andb %dh, (%edx);jno  <ScsiPortWriteRegisterUshort+>;imull $, (%edx), %esi": 1,
                "andb %dh, (%edx);jno  <ScsiPortWriteRegisterUshort+>;imull $, (%edx), %esi;insb %dx, %es:(%edi);jae  <ScsiPortWriteRegisterUshort+>": 1,
                "jno  <ScsiPortWriteRegisterUshort+>;imull $, (%edx), %esi;insb %dx, %es:(%edi);jae  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "incl %ebp;decl %ebp;addb %cl, (%ecx);jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "imull $, (%esi), %ebp;popal;jb  <ScsiPortWriteRegisterUshort+>;andb %ch, (%eax);jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "insb %dx, %es:(%edi);imull $, (%esi), %ebp;insb %dx, %es:(%edi);andl %eax, %fs:(%eax);nop": 1,
                "je  <ScsiPortWriteRegisterUshort+>;jns  <ScsiPortWriteRegisterUshort+>;addb %al, %gs:(%edx);outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>": 1,
                "outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;arpl %si, %gs:(%edi,%ebp,);addb %al, (%edx);outsl (%esi), %dx": 1,
                "arpl %si, %gs:(%edi,%ebp,);addb %al, (%edx);outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;arpl %si, %gs:(%edi,%ebp,)": 1,
                "arpl %si, %gs:(%edi,%ebp,);incl %esi;imull $, (%ebp), %ebp;outsl (%esi), %dx;insl %dx, %es:(%edi)": 1,
                "decl %esp;imull $, (%esi), %ebp;jb  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);addb %cl, (%ecx)": 1,
                "imull $, (%esi), %ebp;jb  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);addb %cl, (%ecx);imull $, (%edx,%esi,), %esi": 1,
                "andb %ah, (%ebx);outsl (%esi), %dx;outsl (%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>;andb %ah, (%ecx)": 1,
                "cmpb %fs:(%eax), %al;addb %ah, -(%ecx);addb (%eax), %al;pushl $;filds (%edx)": 1,
                "bound (%edi), %ebp;je  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);orb %cs:(%edx), %cl;incl %ebp;js  <ScsiPortWriteRegisterUshort+>": 1,
                "incl %ebx;pushl %esp;andb %ch, (%edi);pushl %ebx;decl %edi": 1,
                "pushl %esp;andb %ch, (%edi);pushl %ebx;decl %edi;pushl %ebx": 1,
                "incl %ebp;decl %ebp;cmpl $, %eax;decl %ebx;incl %ebp": 1,
                "decl %ebp;cmpl $, %eax;decl %ebx;incl %ebp;pushl %edx": 1,
                "insl %dx, %es:(%edi);andb %ah, (%ecx,%ebp,);arpl %si, %gs:(%edi,%ebp,);jns  <ScsiPortWriteRegisterUshort+>;orb (%edx), %cl": 1,
                "jns  <ScsiPortWriteRegisterUshort+>;orb (%edx), %cl;incl %ebp;js  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi)": 1,
                "andb %cl, %gs:(%ecx,%ebp,);jne  <ScsiPortWriteRegisterUshort+>;andb %ch, (%ebx);jb  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi)": 2,
                "insl %dx, %es:(%edi);popal;outsb (%esi), %dx;andb %ch, %fs:(%ecx,%ebp,);orb %cs:(%edx), %cl": 1,
                "das;jbe  <ScsiPortWriteRegisterUshort+>;pushl $;jb  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx": 1,
                "popal;andb %dh, %gs:(%bx,%si);je  <ScsiPortWriteRegisterUshort+>;orb %cs:(%edx), %cl;incl %ebp": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;orb (%edi), %ch;jbe  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);imull $, (%esi), %ebp": 1,
                "je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;andb %ah, %gs:(%edx);outsl (%esi), %dx": 3,
                "jb  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;andb %ah, %gs:(%edx);outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>": 3,
                "jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;imull $, (%ecx,%ebp,), %esi;incl %ebp;outsb (%esi), %dx": 1,
                "je  <ScsiPortWriteRegisterUshort+>;jbe  <ScsiPortWriteRegisterUshort+>;andb %ch, (%eax);bound (%edi), %ebp;je  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;jbe  <ScsiPortWriteRegisterUshort+>;orb %cs:(%edx), %cl;incl %ebp": 1,
                "insl %dx, %es:(%edi);jo  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;orb (%esi), %ah;xorb %ah, (%eax)": 1,
                "decl %edi;pushl %ebx;andb %ah, (%edx,%esi,);jbe  <ScsiPortWriteRegisterUshort+>;andb %ch, (%esi)": 1,
                "popal;jns  <ScsiPortWriteRegisterUshort+>;popal;insb %dx, %es:(%edi);jae  <ScsiPortWriteRegisterUshort+>": 1,
                "orb (%eax), %dh;js  <ScsiPortWriteRegisterUshort+>;xorl %esp, (%eax);subl $, %eax;outsl (%esi), %dx": 1,
                "insl %dx, %es:(%edi);popal;jo  <ScsiPortWriteRegisterUshort+>;arpl %ax, (%eax);decl %ecx": 1,
                "insb %dx, %es:(%edi);insb %dx, %es:(%edi);imull $, (%esi), %ebp;xorl %esi, (%ebx);andb %ah, (%edx,%esi,)": 1,
                "andl $, %eax;imull $, (%esi), %esi;addb %dl, (%edx);insl %dx, %es:(%edi);outsl (%esi), %dx": 1,
                "imull $, (%esi), %esi;addb %dl, (%edx);insl %dx, %es:(%edi);outsl (%esi), %dx;jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;xorl (%eax), %esp;jb  <ScsiPortWriteRegisterUshort+>;jbe  <ScsiPortWriteRegisterUshort+>;andb %ch, (%ebp)": 1,
                "andb %ah, ;je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;addb %ah, (%eax,%edx,);outsb (%esi), %dx": 1,
                "addb %dl, (%eax);pushl %eax;subl $, %eax;andb %ch, (%esi);je  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %ch, (%edi);andb %dl, (%ebx);jae  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);andb %al, (%ebp)": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;jp  <ScsiPortWriteRegisterUshort+>;andb %ah, ;outsl (%esi), %dx;cmpb %gs:(%eax), %ah": 1,
                "imull $, (%edx), %edi;subb %dh, (%eax);js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>;orb (%eax), %al": 1,
                "je  <ScsiPortWriteRegisterUshort+>;andb %ch, %fs:(%ebx);jns  <ScsiPortWriteRegisterUshort+>;andb %al, (%ecx,%ebp,);imull $, (%ebx), %eax": 2,
                "addb %dl, (%edx);popal;imull $, %fs:(%esi), %ebp;imull $, (%eax), %esp;outsl %gs:(%esi), %dx": 2,
                "andl $, %eax;je  <ScsiPortWriteRegisterUshort+>;arpl %si, (%ebx,%edx,);jb  <ScsiPortWriteRegisterUshort+>;popal": 1,
                "andb %dh, (%eax);js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>;addb %al, (%ebx);decl %ebp": 1,
                "andl $, %eax;andb %ah, ;orb (%eax), %al;addb %al, (%eax);decl %ebp": 1,
                "orb (%eax), %al;addb %al, (%eax);decl %ebp;imull $, (%ebx), %esp;je  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;arpl %si, (%ebp);orb (%eax), %al;addb %al, (%eax);addb %cl, (%ebp)": 1,
                "outsb %gs:(%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;imulw $, (%ebp), %sp;je  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp": 1,
                "jns  <ScsiPortWriteRegisterUshort+>;andb %dl, (%eax);imull $, (%esi), %ebp;jb  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>": 1,
                "subl %esp, (%eax);arpl %sp, (%ecx);insb %dx, %es:(%edi);orb %fs:(%eax), %al;pushl %eax": 1,
                "decl %esp;decl %esp;incl %ebp;decl %esp;andl $, %eax": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;subl %esp, (%eax);outsl %fs:(%esi), %dx;outsb (%esi), %dx;orb %gs:(%eax), %al": 1,
                "addb %al, (%eax);incl %ebx;jb  <ScsiPortWriteRegisterUshort+>;popal;je  <ScsiPortWriteRegisterUshort+>": 5,
                "jns  <ScsiPortWriteRegisterUshort+>;andb %cl, (%ebx);jns  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;popal": 2,
                "incl %ecx;decl %esi;incl %ebx;incl %ebp;incl %esp": 1,
                "popl %esp;xorb %cl, (%edx);addb %al, (%ebp);arpl %si, %gs:(%ebp);andb %dl, (%eax)": 1,
                "xorb %cl, (%edx);addb %al, (%ebp);arpl %si, %gs:(%ebp);andb %dl, (%eax);xorb (%eax), %ah": 2,
                "jb  <ScsiPortWriteRegisterUshort+>;orb %fs:(%eax), %al;addb %al, (%eax);incl %ebx;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "xorb %cl, (%edx);addb %al, (%ebp);arpl %si, %gs:(%eax,%ecx,);jb  <ScsiPortWriteRegisterUshort+>;ja  <ScsiPortWriteRegisterUshort+>": 1,
                "outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;addb %dl, (%edx);incl %esp;pushl %esp": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;addb %dl, (%edx);incl %esp;pushl %esp;andb %ah, ": 1,
                "addb %dl, (%edx);incl %esp;pushl %esp;andb %ah, ;popal": 1,
                "andb %ah, ;popal;je  <ScsiPortWriteRegisterUshort+>;andb %dh, (%ebx);jp  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl %eax;decl %ecx;andb %al, (%edx);decl %edi;pushl %ebx": 1,
                "andl $, %eax;decl %esp;cmpb (%eax), %ah;andl $, %eax;decl %eax": 1,
                "andb %ah, (%esi);imull $, (%ebp), %ebp;das;das;bound (%edi), %ebp": 1,
                "cmpb (%eax), %ah;andl $, %eax;pushl $;jne  <ScsiPortWriteRegisterUshort+>;cmpb (%eax), %ah": 2,
                "jne  <ScsiPortWriteRegisterUshort+>;cmpb (%eax), %ah;andl $, %eax;jne  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>": 2,
                "daa;je  <ScsiPortWriteRegisterUshort+>;arpl %bp, (%eax);outsb (%esi), %dx;orb %gs:(%bx,%si), %al": 2,
                "je  <ScsiPortWriteRegisterUshort+>;arpl %bp, (%eax);outsb (%esi), %dx;orb %gs:(%bx,%si), %al;incl %edx": 2,
                "imull $, %fs:(%ebx), %esi;addb %al, (%eax);addb %ah, %dl;adcb (%ebx), %al;addb %bl, %bh": 1,
                "andb %dl, %fs:(%eax);decl %ecx;andb %ah, (%edx);outsl (%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "decl %ecx;andb %ah, (%edx);outsl (%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>;addb %ch, (%esi)": 1,
                "insb %dx, %es:(%edi);imull $, (%eax), %esp;jae  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);orb (%eax), %al": 1,
                "andb %bh, (%edx,%esi,);outsl (%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>;jbe  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "orb %ds:(%edx), %cl;xorb %bh, (%eax);xorb %dh, (%edx);insb %dx, %es:(%edi);js  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);incl %esp;pushl %edx": 5,
                "incl %ebp;pushl %ebx;decl %ecx;cmpb (%eax), %ah;andl $, %eax": 1,
                "decl %ecx;cmpb (%eax), %ah;andl $, %eax;andb %ah, (%eax);andb %ah, (%eax)": 2,
                "incl %esp;pushl %edx;aaa;cmpb (%eax), %ah;andl $, %eax": 1,
                "pushl %edx;decl %edi;pushl %edx;andb %al, (%ebx);incl %esp": 1,
                "incl %esi;decl %esp;incl %ecx;incl %edi;pushl %ebx": 2,
                "incl %edi;incl %esp;pushl %esp;pushl %edx;andb %al, (%edx)": 1,
                "andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);decl %ecx;incl %esp": 1,
                "andb %ah, ;orb (%edx), %cl;addb %al, (%eax);addb %al, (%eax);orb (%ecx), %cl": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;popal;insl %dx, %es:(%edi);cmpb (%eax), %ah": 1,
                "andl $, %eax;andl $, %eax;orb (%eax), %al;addb %al, (%eax);incl %ecx": 1,
                "andb %al, %fs:(%esi);decl %esp;outsl (%esi), %dx;popal;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "arpl %sp, (%ecx);imull $, (%edi), %ebp;cmpb , %ah;addb %al, (%eax);addb %al, (%eax)": 1,
                "andb %ah, (%eax);andl $, %eax;andb %ah, (%eax);andl $, %eax;addb %al, (%eax)": 1,
                "decl %ecx;decl %edi;decl %esi;orb (%edx), %cl;addb %al, (%ebp)": 3,
                "imull $, (%edi), %ebp;andb %cl, (%edi);incl %ebp;pushl %edx;incl %esi": 1,
                "outsb (%esi), %dx;andb %dh, (%eax);xorl $, %eax;pushl %ebp;decl %esi": 1,
                "incl %esp;andb %al, (%ebp);incl %ebx;incl %ebp;pushl %eax": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;andb %dh, (%eax);cmpb %ss:(%eax), %ah;decl %ecx": 1,
                "jo  <ScsiPortWriteRegisterUshort+>;imull $, (%edi), %ebp;andb %al, (%esi);pushl %ebp;andb %cl, (%esi)": 1,
                "decl %ecx;incl %esp;andb %dl, (%ebx,%edx,);orb (%edx), %cl;addb %al, (%ebp)": 1,
                "je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;outsb (%esi), %dx;andb %dh, (%eax);incl %ebx": 1,
                "cmpb (%eax), %ah;pushl %ebx;pushl %esp;incl %ecx;incl %ebx": 1,
                "decl %esi;incl %ebp;pushl %edx;incl %ecx;decl %esp": 1,
                "cmpb (%eax), %ah;pushl %eax;incl %ecx;incl %edi;incl %ebp": 1,
                "pushl %eax;incl %ecx;incl %edi;incl %ebp;andb %al, (%esi)": 1,
                "incl %ecx;incl %edi;incl %ebp;andb %al, (%esi);pushl %ebp": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;orb %fs:(%edx), %cl;addb %al, (%eax);addb %al, (%eax)": 1,
                "andb %dh, (%ecx);xorb (%edx), %bh;andb %cl, (%ebp);incl %ebx;decl %eax": 1,
                "decl %ecx;decl %esi;incl %edi;andb %al, (%ebx);decl %esi": 2,
                "arpl %ax, (%ecx,%ebp,);imull $, (%ecx), %ecx;xorl %esi, (%ebx);incl %ebp;js  <ScsiPortWriteRegisterUshort+>": 1,
                "xorl %esi, (%ebx);incl %ebp;js  <ScsiPortWriteRegisterUshort+>;outsb %gs:(%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>": 2,
                "imull $, (%ebx), %esi;js  <ScsiPortWriteRegisterUshort+>;outsb %gs:(%esi), %dx;incl %esp;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax)": 3,
                "andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);andb %ah, ": 8,
                "outsb (%esi), %dx;andb %ah, (%edx,%esi,);jbe  <ScsiPortWriteRegisterUshort+>;cmpb (%eax), %ah;andb %ah, (%eax)": 3,
                "andb %ch, (%edi);andb %dh, (%eax);jns  <ScsiPortWriteRegisterUshort+>;imull $, (%ebx), %esp;arpl %si, (%edi,%ebp,)": 1,
                "jns  <ScsiPortWriteRegisterUshort+>;imull $, (%ebx), %esp;arpl %si, (%edi,%ebp,);jae  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>": 1,
                "jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;popal;arpl %bp, (%ebx)": 1,
                "cmpb (%eax), %ah;andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax);andb %ah, (%eax)": 9,
                "andb %ah, (%eax);andb %ah, (%eax);andb %ah, ;addb %al, (%eax);incl %ebp": 1,
                "je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;cmpb (%eax), %ah;andb %ah, (%eax);andb %ah, (%eax)": 2,
                "andb %ah, (%eax);andb %ah, (%eax);andl $, %eax;addb %al, (%eax);jb  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %ah, (%eax);andb %ah, (%eax);andl $, %eax;addb %al, (%eax);jae  <ScsiPortWriteRegisterUshort+>": 1,
                "subl $, %eax;outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;popal": 1,
                "andl $, %eax;addb %al, (%eax);incl %esp;decl %ebp;incl %ecx": 1,
                "outsl (%esi), %dx;insb %dx, %es:(%edi);cmpb (%eax), %ah;andb %ah, (%eax);andb %ah, (%eax)": 2,
                "andb %cl, %fs:(%ecx);decl %edi;andb %ah, (%ebx);outsb (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %al, (%eax);jae  <ScsiPortWriteRegisterUshort+>;outsb (%si), %dx;popal;je  <ScsiPortWriteRegisterUshort+>": 1,
                "imull $, (%edi), %ebp;jae  <ScsiPortWriteRegisterUshort+>;pushl %ebx;jne  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %al, (%ecx);andb %bh, ;js  <ScsiPortWriteRegisterUshort+>;addb %dl, (%esi);pushl %ebx": 1,
                "addb %dl, (%esi);pushl %ebx;incl %ecx;andb %al, (%edx);decl %edi": 1,
                "outsb (%esi), %dx;outsw (%esi), %dx;subl $, %eax;outsb (%esi), %dx;popal": 1,
                "popal;pushl %esi;jb  <ScsiPortWriteRegisterUshort+>;imull $, (%edi), %ebp;andl $, %eax": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;imull $, (%edi), %ebp;andl $, %eax;orb (%eax), %al;pushl %ebx": 1,
                "outsb (%esi), %dx;outsw (%esi), %dx;subl $, %eax;decl %esi;popal": 1,
                "insl %dx, %es:(%edi);pushl %eax;je  <ScsiPortWriteRegisterUshort+>;andb %bh, ;js  <ScsiPortWriteRegisterUshort+>": 3,
                "andb %bh, ;js  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax);addb %al, (%eax);pushl %ebx": 2,
                "subl $, %eax;popal;bound (%ecx), %ebp;imull $, (%ecx,%ebp,), %esi;xorb %bh, (%eax)": 1,
                "bound (%ecx), %ebp;imull $, (%ecx,%ebp,), %esi;xorb %bh, (%eax);js  <ScsiPortWriteRegisterUshort+>;addb %dl, (%ebx)": 1,
                "decl %ecx;outsb (%esi), %dx;outsw (%esi), %dx;subl $, %eax;outsl %gs:(%esi), %dx": 1,
                "andb %dh, (%esi);xorb %ah, %cs:(%eax);subl $, %eax;addb %al, (%eax);addb %dl, (%ebx)": 1,
                "outsl %fs:(%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;popal;insl %dx, %es:(%edi);pushl %eax": 1,
                "decl %ecx;outsb (%esi), %dx;outsw (%esi), %dx;subl $, %eax;jne  <ScsiPortWriteRegisterUshort+>": 2,
                "andb %dh, (%edx);popal;andb %ah, %fs:(%edx);outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>": 2,
                "je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;arpl %si, (%edi,%ebp,);addb %cl, %cs:(%ecx);jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "je  <ScsiPortWriteRegisterUshort+>;andb %dh, (%edx);popal;andb %dh, %fs:(%eax);jb  <ScsiPortWriteRegisterUshort+>": 1,
                "outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;arpl %si, (%edi,%ebp,);addb %al, (%eax)": 1,
                "pushl %eax;arpl %ax, (%ecx,%ebp,);imull $, (%edx), %edx;je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;subb %ah, %fs:;andb %ah, ": 1,
                "incl %edx;incl %ecx;subb %ch, (%ecx);andb %al, (%edx,%esi,);jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "outsl (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;cmpl $, %eax;arpl %si, (%edi,%ebp,)": 1,
                "decl %eax;pushl %ebx;andb %ch, (%ebp);subb $, %al;popal": 1,
                "andb %dh, (%ecx,%ebp,);jae  <ScsiPortWriteRegisterUshort+>;andb %ah, ;imull $, (%ebx), %esi;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;andb %ah, ;imull $, (%ebx), %esi;jb  <ScsiPortWriteRegisterUshort+>;jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "outsl %gs:(%esi), %dx;insl %dx, %es:(%edi);je  <ScsiPortWriteRegisterUshort+>;jns  <ScsiPortWriteRegisterUshort+>;subl %ecx, (%edx)": 1,
                "jo  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);insl %dx, %es:(%edi);arpl %ax, %cs:(%eax);pushl %eax": 1,
                "insl %dx, %es:(%edi);insl %dx, %es:(%edi);arpl %ax, %cs:(%eax);pushl %eax;arpl %ax, (%edx)": 1,
                "arpl %ax, %cs:(%eax);pushl %eax;arpl %ax, (%edx);outsl (%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "popl %eax;andb %bh, ;js  <ScsiPortWriteRegisterUshort+>;addb %al, (%ebp);popl %eax": 2,
                "andb %bh, ;js  <ScsiPortWriteRegisterUshort+>;addb %al, (%ebx);andb %dh, (%ebx);je  <ScsiPortWriteRegisterUshort+>": 1,
                "js  <ScsiPortWriteRegisterUshort+>;addb %al, (%ebx);andb %dh, (%ebx);je  <ScsiPortWriteRegisterUshort+>;cmpl $, %eax": 2,
                "jae  <ScsiPortWriteRegisterUshort+>;incl %ecx;jb  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;cmpb (%eax), %ah": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;cmpb %fs:(%eax), %ah;xorb %bh, (%eax);insb %dx, %es:(%edi);js  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %cl, (%ebp);jo  <ScsiPortWriteRegisterUshort+>;orb (%edx), %cl;addb %al, (%eax);addb %al, (%eax)": 1,
                "insl %dx, %es:(%edi);outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;incl %ebx;outsl (%esi), %dx": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;imulw $, (%edi), %sp;je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx": 1,
                "js  <ScsiPortWriteRegisterUshort+>;addb %al, (%edx);andb %bh, ;js  <ScsiPortWriteRegisterUshort+>;addb %al, (%ebx)": 1,
                "xorl $, %eax;cmpl $, %eax;addb %cl, (%ecx);je  <ScsiPortWriteRegisterUshort+>;xorl $, %eax": 1,
                "nop;orb (%eax), %al;addb %al, (%eax);das;das": 1,
                "js  <ScsiPortWriteRegisterUshort+>;addb %cl, (%ebp);incl %ecx;je  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "bound (%ebp), %esi;jae  <ScsiPortWriteRegisterUshort+>;cmpl $, %eax;js  <ScsiPortWriteRegisterUshort+>;addb %dl, (%edi)": 1,
                "addb %dl, (%edi);outsb (%esi), %dx;outsl %fs:(%esi), %dx;ja  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx": 1,
                "addb %al, (%edx);je  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;arpl %sp, (%ecx)": 1,
                "cmpl $, %eax;addb %al, (%ebx);popal;jb  <ScsiPortWriteRegisterUshort+>;arpl %si, (%ebp)": 1,
                "insb %dx, %es:(%edi);popal;outsb (%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>;cmpl $, %eax": 2,
                "cmpl $, %eax;addb %al, (%edx);je  <ScsiPortWriteRegisterUshort+>;pushl %eax;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "imull $, (%edx), %edi;orb %fs:(%eax), %al;pushl %edx;decl %ebp;popal": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;decl %ebp;popal;jae  <ScsiPortWriteRegisterUshort+>;pushl %eax": 1,
                "popal;jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;arpl %si, (%ebp)": 3,
                "andb %bh, (%bx,%si);xorb %bh, (%eax);xorl $, %eax;je  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi)": 1,
                "orb %cs:(%eax), %al;addb %dl, (%esi);incl %ecx;andb %ah, (%ecx,%ebp,);jo  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %al, (%ebp);pushl %esp;incl %ebp;decl %esi;incl %esp": 1,
                "pushl %esp;incl %ebp;decl %esi;incl %esp;incl %ebp": 1,
                "outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;andb %dh, (%ebp);popal;bound (%ebp), %ebp": 1,
                "andb %dh, %gs:(%eax);js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax);addb %al, (%ebp)": 1,
                "pushw %bx;arpl %si, (%edx);outsb %gs:(%esi), %dx;incl %edx;jne  <ScsiPortWriteRegisterUshort+>": 1,
                "nop;pushl %edx;incl %ebp;incl %ecx;incl %esp": 1,
                "incl %ecx;cmpl $, %eax;decl %ebx;cmpl $, %eax;incl %ebx": 1,
                "cmpb (%ebx), %dl;cmpl $, %eax;cmpb (%ebx), %dl;cmpl $, %eax;cmpb (%ebx), %al": 1,
                "andb %ah, (%ebp);arpl %sp, (%ebp);andl %ecx, %fs:(%edx);addb %dl, (%edx);popal": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;bound (%ebp), %esi;jns  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;andb %ah, (%ebx)": 1,
                "outsb (%esi), %dx;jbe  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);imull $, (%eax), %esp;andb %ch, (%esi)": 1,
                "addb %al, (%eax);addb %dh, (%eax,%edi);bound (%ecx), %ebp;andb %cl, (%edx,%eax,);andb %dh, (%edx)": 1,
                "jno  <ScsiPortWriteRegisterUshort+>;imull $, (%edx), %esi;je  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;outsl (%esi), %dx": 1,
                "je  <ScsiPortWriteRegisterUshort+>;orb %fs:(%eax), %al;popl %eax;bound (%edi), %ebp;incl %esp": 1,
                "addb %al, (%eax);pushl %esp;pushl $;ja  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl $;ja  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;popal;andb %dh, (%eax)": 1,
                "jo  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;imull $, (%edx), %esp;andb %ah, (%ecx);insb %dx, %es:(%edi)": 1,
                "outsl (%esi), %dx;arpl %bp, (%ebx);outsw (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>": 1,
                "orb (%eax), %al;addb %al, (%eax);addb %ch, (%edx);incl %ebp;js  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %al, (%eax);addb %ch, (%edx);incl %ebp;js  <ScsiPortWriteRegisterUshort+>;outsb %gs:(%esi), %dx": 1,
                "je  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;andb %al, %fs:(%edx);decl %edi;pushl %ebx": 1,
                "incl %ebp;orb (%eax), %al;xorb %bh, (%eax);xorb %dh, (%eax,%ebx,);andb %bh, (%eax)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;imull $, %fs:(%edx), %esi;outsb (%esi), %dx;decl %ecx;outsb (%esi), %dx": 1,
                "insl %dx, %es:(%edi);addb %ch, (%edi);jb  <ScsiPortWriteRegisterUshort+>;imull $, %fs:(%edx), %esi;arpl %bp, (%edi)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;imull $, %fs:(%edx), %esi;arpl %bp, (%edi);addb %dh, (%ebp);bound %gs:(%ecx), %ebp": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;imull $, (%esi), %ebp;incl %ecx;incl %ebx": 1,
                "addb %ah, -(%esi);nop;das;das;bound (%edi), %ebp": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;bound (%ebp), %esp;andb %bh, (%eax);xorb %bh, (%eax);incl %esi": 1,
                "pushl $;popal;insb %dx, %es:(%edi);incl %ecx;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "subl %ecx, (%edx);addb %al, (%eax);addb %al, (%eax);pushl %ebx;arpl %si, (%ebx)": 1,
                "je  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;arpl %sp, (%ecx);pushl $;je  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl $;je  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx": 1,
                "outsb (%esi), %dx;subb %ah, ;andb %ah, ;addb %al, (%eax);addb %al, (%eax)": 1,
                "addb %al, (%eax);pushl %ebx;jo  <ScsiPortWriteRegisterUshort+>;incl %ecx;insb %dx, %es:(%edi)": 1,
                "orb (%eax), %al;jae  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>;subb %ah, ;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %al, (%edi);je  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;andb %ah, (%ecx)": 1,
                "subb $, %al;insb %dx, %es:(%edi);outsb %gs:(%esi), %dx;andb %dh, (%eax);js  <ScsiPortWriteRegisterUshort+>": 2,
                "arpl %si, (%ebx);pushl %eax;outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;incl %ebx": 1,
                "insb %dx, %es:(%edi);jne  <ScsiPortWriteRegisterUshort+>;pushl $;pushl %ebx;arpl %si, (%ebx)": 1,
                "pushl $;pushl %ebx;arpl %si, (%ebx);pushl %eax;outsl (%esi), %dx": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;incl %edi;je  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;imull $, (%bp,%di), %esp": 1,
                "outsb (%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>;pushl %ebx;arpl %si, (%ebx)": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;arpl %bp, (%eax);jb  <ScsiPortWriteRegisterUshort+>;addb %al, (%eax);addb %al, (%eax)": 1,
                "outsb (%esi), %dx;addb %al, (%bx,%si);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "je  <ScsiPortWriteRegisterUshort+>;pushl %edx;imull $, %gs:(%bp,%di), %esi;jb  <ScsiPortWriteRegisterUshort+>;jae  <ScsiPortWriteRegisterUshort+>": 1,
                "decl %ecx;andb %dl, (%ebx);outsl (%esi), %dx;je  <ScsiPortWriteRegisterUshort+>;pushl %edx": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;imull $, (%edi), %esp;andb %ch, (%ecx);andb %al, (%esi);decl %edi": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;cmpl $, %eax": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;imull $, (%ecx), %esp;jne  <ScsiPortWriteRegisterUshort+>;arpl %sp, (%ebp);imull $, (%ebx), %esi": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;arpl %sp, (%ebp);imull $, (%ebx), %esi;je  <ScsiPortWriteRegisterUshort+>;popal": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;arpl %sp, (%ebp);outsl (%esi), %dx;jne  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %ch, (%ecx);andb %dl, (%ebp);decl %ecx;decl %ebp;pushl %eax": 4,
                "incl %esp;andl %ecx, (%edx);addb %al, (%eax);subb %ah, ;subl %esp, (%eax)": 1,
                "decl %ebx;cmpb (%eax), %ah;pushl %eax;popal;popal": 2,
                "pushl %ecx;decl %esp;andb %bh, (%esi);andb %al, (%ecx);incl %ebx": 2,
                "jae  <ScsiPortWriteRegisterUshort+>;popal;jb  <ScsiPortWriteRegisterUshort+>;pushl $;pushl %eax": 1,
                "subb %ah, ;subl %esp, (%eax);decl %eax;incl %ecx;decl %esp": 1,
                "incl %ecx;pushl $;jae  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);outsb %gs:(%esi), %dx": 1,
                "decl %eax;popal;jb  <ScsiPortWriteRegisterUshort+>;ja  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;andb %ch, (%ebp);jns  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi);popal": 1,
                "imull $, (%esi), %ebp;imull $, (%esi), %ebp;jo  <ScsiPortWriteRegisterUshort+>;incl %ebx;decl %ecx": 1,
                "bound (%ebp), %esi;das;bound (%ebp), %esi;pushl $;arpl %ax, %cs:(%eax)": 1,
                "bound (%ebp), %esi;pushl $;arpl %ax, %cs:(%eax);subb %ah, ;subl %esp, (%eax)": 1,
                "subl %esp, (%eax);pushl %ebx;pushl %esp;pushl %ebp;incl %edx": 3,
                "subl %esp, (%eax);popaw;imull $, (%ebp), %ebp;andl $, %eax;subl %esp, (%eax)": 3,
                "incl %edx;andb %al, (%ecx);pushl $;jae  <ScsiPortWriteRegisterUshort+>;insl %dx, %es:(%edi)": 1,
                "decl %esi;incl %ebp;popl %edi;pushl %esp;popl %ecx": 1,
                "decl %esp;andb %ch, (%eax);andl $, %eax;xorb %al, (%eax);subb %ah, ": 1,
                "xorb %al, (%eax);subb %ah, ;subl %esp, (%eax);pushl %ebx;insb %dx, %es:(%edi)": 1,
                "cmpb (%eax), %ah;andl $, %eax;popal;outsb (%esi), %dx;insb %dx, %es:(%edi)": 1,
                "addb %al, (%eax);addb %ch, (%eax);andl $, %eax;subl %esp, (%eax);decl %edi": 1,
                "andb %ah, ;outsb (%esi), %dx;andb %dl, %fs:(%esi);arpl %si, (%edi,%ebp,);andb %ah, ": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;andb %bh, ;pushl %ebp;incl %ebp;subl %eax, (%eax)": 1,
                "outsl (%esi), %dx;andb %ch, (%eax);pushl $;popal;insb %dx, %es:(%edi)": 1,
                "addb %al, (%eax);subb %ah, ;subl %esp, (%eax);pushl %esi;arpl %si, %gs:(%edi,%ebp,)": 1,
                "arpl %si, %gs:(%edi,%ebp,);andb %ah, ;jae  <ScsiPortWriteRegisterUshort+>;incl %ecx;decl %esp": 1,
                "jp  <ScsiPortWriteRegisterUshort+>;andb %bh, (%esi);cmpl $, %eax;cmpb $, %al;andb %dh, (%ebx)": 1,
                "outsl (%esi), %dx;jbe  <ScsiPortWriteRegisterUshort+>;incl %esi;jb  <ScsiPortWriteRegisterUshort+>;andb %dh, %gs:(%edx,%esi,)": 2,
                "jne  <ScsiPortWriteRegisterUshort+>;andb %dh, (%edi,%ebp,);jb  <ScsiPortWriteRegisterUshort+>;cmpb %gs:(%eax), %ah;andl $, %eax": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;andb %ah, (%esi);andb %ch, %gs:(%ecx,%ebp,);je  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %dl, (%ebx);popal;bound (%ebp), %ebp;pushl %esi;outsl (%esi), %dx": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;andb %dl, (%esi);arpl %bp, (%ecx);imull $, (%ecx,%edi,), %esi;js  <ScsiPortWriteRegisterUshort+>": 1,
                "arpl %bp, (%ecx);imull $, (%ecx,%edi,), %esi;js  <ScsiPortWriteRegisterUshort+>;addb %ah, ;incl %ebx": 1,
                "imull $, (%ecx,%edi,), %esi;js  <ScsiPortWriteRegisterUshort+>;addb %ah, ;incl %ebx;insb %dx, %es:(%edi)": 1,
                "addb %ah, ;incl %ebx;insb %dx, %es:(%edi);insb %dx, %es:(%edi);decl %ecx": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;subl $, %eax;andb %bh, %gs:(%eax);xorb %al, (%eax);andl $, %eax": 1,
                "jb  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;arpl %sp, (%ebp);orb (%eax), %al;addb %al, (%ebx)": 1,
                "cmpb $, %al;andb %dl, (%ebx);incl %ecx;pushl %esp;decl %ecx": 1,
                "decl %esp;decl %esp;popl %edi;pushl %eax;incl %ecx": 1,
                "pushl %ebp;decl %esi;pushl %esp;addb %cl, (%eax);jo  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl %es;pushl %es;pushl %es;decl %eax;jbe  <ScsiPortWriteRegisterUshort+>": 1,
                "pushl %edx;popal;insb %dx, %es:(%edi);insb %dx, %es:(%edi);outsl (%esi), %dx": 1,
                "insb %dx, %es:(%edi);addb %cl, (%eax);incl %esi;jb  <ScsiPortWriteRegisterUshort+>;incl %ebx": 1,
                "insb %dx, %es:(%edi);jne  <ScsiPortWriteRegisterUshort+>;incl %ebx;insb %dx, %es:(%edi);insb %dx, %es:(%edi)": 1,
                "imull $, (%esi,%ebp), %esi;jae  <ScsiPortWriteRegisterUshort+>;andl $, %eax;jb  <ScsiPortWriteRegisterUshort+>;jns  <ScsiPortWriteRegisterUshort+>": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;andl $, %eax;jb  <ScsiPortWriteRegisterUshort+>;jns  <ScsiPortWriteRegisterUshort+>;decl %eax": 1,
                "decl %eax;imull $, (%esi), %esi;jb  <ScsiPortWriteRegisterUshort+>;popaw;imull $, (%ebp), %ebp": 1,
                "imull $, (%edi), %esp;cmpb %gs:(%eax), %ah;xorb %bh, (%eax);js  <ScsiPortWriteRegisterUshort+>;popal": 1,
                "andb %dh, (%eax);js  <ScsiPortWriteRegisterUshort+>;js  <ScsiPortWriteRegisterUshort+>;popal;outsb (%esi), %dx": 4,
                "addb %al, (%eax);addb %al, (%eax);subb %ah, ;subl %esp, (%eax);andb %ah, (%eax)": 1,
                "subl %esp, (%eax);andb %ah, (%eax);andb %ah, (%eax);incl %esi;outsl (%esi), %dx": 1,
                "incl %esi;outsl (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>;popal;je  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %ch, (%eax);andl $, %eax;subl %esp, (%eax);pushl %edx;imull $, %gs:(%bp,%di), %esi": 1,
                "jae  <ScsiPortWriteRegisterUshort+>;arpl %bp, (%edi);jb  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;cmpb (%eax), %ah": 1,
                "incl %ebx;decl %ebx;subl %esp, (%eax);cmpl $, %eax;popl %edi": 1,
                "js  <ScsiPortWriteRegisterUshort+>;insb %dx, %es:(%edi);insb %dx, %es:(%edi);subl $, %eax;outsb (%esi), %dx": 1,
                "jbe  <ScsiPortWriteRegisterUshort+>;subl $, %eax;je  <ScsiPortWriteRegisterUshort+>;pushl %esi;arpl %si, %gs:(%edi,%ebp,)": 1,
                "outsb (%esi), %dx;andb %ah, %cs:(%ebx);arpl %bp, %gs:(%ebx);outsw (%esi), %dx;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "outsb (%esi), %dx;andb %dl, (%eax);andb %ah, (%esi);insb %dx, %es:(%edi);orb %gs:(%eax), %al": 1,
                "andb %ch, (%ecx);andb %ch, (%ecx);jb  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;popal": 1,
                "andb %dh, (%edx);xorl $, %eax;addb %ch, (%eax);andl $, %eax;subl %esp, (%eax)": 1,
                "subl %esp, (%eax);pushl %eax;incl %ebp;andb %dh, (%ebx);outsb (%si), %dx": 1,
                "andb %ah, %fs:(%esi);js  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;je  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>": 1,
                "andb %ah, ;addb %al, (%eax);addb %al, (%eax);subb %ah, ;subl %esp, (%eax)": 1,
                "pushl %ds;adcl %eax, (%eax,%eax);pushl %ds;adcl %eax, (%eax,%eax);pushl %cs": 1,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %sp, (%ecx);imull $, (%edi), %ebp;imull $, (%edi,%ebp,), %ecx": 1,
                "decl %esp;outsl (%esi), %dx;outsb (%esi), %dx;subb %ch, (%bx,%di);andl %ecx, (%edx)": 1,
                "andl %ecx, (%edx);addb %al, (%eax);addb %al, (%eax);andl %ebp, (%eax);pushl %ebp": 1,
                "pushl %cs;andl $, %eax;addb $, %al;adcl , %esp;addb $, %al": 1,
                "adcl , %esp;addb $, %al;sbbb , %ah;addb $, %al;sbbb , %ah": 1,
                "subl $, %eax;addb %dh, (%edx);addb %bh, (%eax);andl $, %eax;addb %bh, (%eax)": 2,
                "insb %dx, %es:(%edi);popal;jae  <ScsiPortWriteRegisterUshort+>;cmpl $, %eax;addb %al, (%eax)": 1,
                "popal;jae  <ScsiPortWriteRegisterUshort+>;cmpl $, %eax;addb %al, (%eax);addb %ch, (%eax)": 1,
                "subl %esp, (%eax);pushl %edx;je  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx": 1,
                "je  <ScsiPortWriteRegisterUshort+>;jo  <ScsiPortWriteRegisterUshort+>;outsb (%esi), %dx;jae  <ScsiPortWriteRegisterUshort+>;jb  <ScsiPortWriteRegisterUshort+>": 1,
                "jne  <ScsiPortWriteRegisterUshort+>;orb (%eax), %al;subb %ah, ;subl %esp, (%eax);incl %esp": 1,
                "addb $, %al;addl $, %eax;popl %es;addb $, %al;addl $, %eax": 1,
                "arpl %ax, (%eax);incl %esi;incl %ecx;decl %esp;pushl %ebx": 1,
                "addb %al, (%eax);andb %al, (%eax);andb %al, (%eax);andb %al, (%eax);andb %al, (%eax)": 2,
                "adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax)": 37,
                "adcb %al, (%eax);adcb %al, (%eax);adcb %al, (%eax);testb %al, (%eax);testb %al, (%eax)": 1,
                "adcb %al, (%eax);addl $, (%ecx);addl $, (%ecx);addl %eax, (%ecx);addl %eax, (%ecx)": 1,
                "adcb %al, (%eax);addb $-, (%ecx);addl %eax, -(%edx);addl %eax, (%edx);addl %eax, (%edx)": 1,
                "adcb %al, (%eax);adcb %al, (%eax);adcb $, %al;adcb %al, (%eax);adcb %al, (%eax)": 1,
                "addb %dl, (%eax);addb %dl, (%eax);addb %dl, (%eax);addb %dl, (%eax);addb %ah, (%eax)": 1,
                "addb $, %al;pushal;insb %dx, %es:(%edi);addb $, %al;subb $, %al": 1,
                "addb $, %al;testl %ebp, (%esp,%eax);xchgl %edx, %eax;insb %dx, %es:(%edi);addb $, %al": 1,
                "addb $, %al;decl %eax;jae  <ScsiPortWriteRegisterUshort+>;addb %dl, -(%edx);insb %dx, %es:(%edi)": 1,
                "addb $, %al;testl %ebp, (%esp,%eax);testl %ebp, (%esp,%eax);testl %ebp, (%esp,%eax);xchgl %edx, %eax": 1,
                "movsl (%esi), %es:(%edi);insb %dx, %es:(%edi);addb $, %al;xchgl %edx, %eax;insb %dx, %es:(%edi)": 1,
                "addb %al, (%edi);jnp  <ScsiPortWriteRegisterUshort+>;addb %bl, %al;jp  <ScsiPortWriteRegisterUshort+>;addb %al, (%edi)": 1,
                "jnp  <ScsiPortWriteRegisterUshort+>;addb %al, (%edi);jnp  <ScsiPortWriteRegisterUshort+>;addb %cl, %al;jp  <ScsiPortWriteRegisterUshort+>": 1,
                "addb %ch, (%ecx);jnp  <ScsiPortWriteRegisterUshort+>;addb %dh, (%esi);jnp  <ScsiPortWriteRegisterUshort+>;addb %dh, (%esi)": 1,
                "addb %dh, (%esi);jnp  <ScsiPortWriteRegisterUshort+>;addb %ah, -(%esi);addb $, %al;jnp  <ScsiPortWriteRegisterUshort+>": 1,
                "xchgl %edx, %eax;addb $, %al;movb $-, %bl;addb $, %al;movb $-, %bl": 1,
                "xorb %al, (%eax);addb %al, (%eax);addb %bh, (%edi);cltd;addb $, %al": 1,
                "addb $, %al;aam $-;addb $, %al;aam $-;addb $, %al": 21,
                "aas;cltd;addb $, %al;aas;cltd": 2,
                "cltd;addb $, %al;aas;cltd;addb $, %al": 2,
                "addb $, %al;aam $-;addb $, %al;salc;xchgl %edi, %eax": 1,
                "addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);subl $, %eax": 1,
                "lahf;addb $, %al;subb %ch, (%esi);insb %dx, %es:(%edi);insb %dx, %es:(%edi)": 1,
                "addb $, %al;xchgb %ch, -(%eax);addb $, %al;movb $-, %ah;addb $, %al": 1,
                "movb $-, %ah;addb $, %al;movb $-, %ah;addb $, %al;cli": 1,
                "addb $, %al;subb $-, %al;addb $, %al;cli;lodsb (%esi), %al": 1,
                "addb %dh, (%ecx);addb %dh, (%edx);addb %dh, (%ebx);addb %dh, (%eax,%eax);xorl $, %eax": 2,
                "bound (%eax), %eax;arpl %ax, (%eax);addb %ah, %fs:(%ebp);addb %dh, (%eax);addb %bh, (%eax)": 2,
                "addb %al, (%eax);addb %al, (%eax);xorb %al, (%eax);xorl %eax, (%eax);xorb (%eax), %al": 2,
                "addb %cl, (%esi);addb %al, (%eax);andl (%eax), %eax;decl %ecx;addb %cl, (%esi)": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                ".text": 1,
                "``.edata": 1,
                "0@.bss": 1,
                "Sectf": 1,
                "l[^_]": 6,
                "HdrSu=": 1,
                "@ L) /": 1,
                "@$SOS": 1,
                "OTLOf": 1,
                "t\"t'9X": 1,
                "$[^_]": 18,
                "L[^_]": 1,
                "fdisf": 1,
                "rdisf": 1,
                "itiof": 1,
                "cdrof": 1,
                "t[^_]": 1,
                ",[^_]": 12,
                "D[^_]": 7,
                "</t\"<\\u": 1,
                "4[^_]": 11,
                "</t0<\\t,": 1,
                "<[^_]": 9,
                "T[^_]": 1,
                "t9<]t5": 1,
                "t><=t:": 1,
                "t(< t$": 1,
                "@<9C8tj": 1,
                "=#Endt+": 2,
                "#Endu'": 1,
                "f=lit": 2,
                "f=rius": 1,
                "f=lht": 3,
                "8nkt'": 1,
                ";nkt'": 6,
                "f=lfu": 1,
                ":nkt'": 1,
                "0[^_]": 1,
                "([^_]": 1,
                "EM32f": 3,
                "</~ <9": 1,
                "em32f": 1,
                "MOUSf": 1,
                "WHEEf": 1,
                " MOUf": 1,
                "$PIRt": 1,
                ";$PIR": 1,
                "net(f": 1,
                "Ptrf=": 1,
                "5f=\"P": 1,
                "f=\"Pw": 1,
                "tf=+P": 1,
                "BRFRu<": 1,
                "D.SYf": 1,
                "WVQR1": 1,
                "=$PnPt": 1,
                "Vj!Y1": 1,
                "D$TTP": 1,
                ";s8s?": 1,
                "Xt)9C": 1,
                ";\\2hs": 1,
                "4Af94BuM": 1,
                ";vkt'": 2,
                ";regfu=": 1,
                "?hbinu": 1,
                "f=riuZf": 1,
                "f=lfu?f": 1,
                "hbinkE": 1,
                ";PtsG": 1,
                "1f92u": 2,
                "f9<Bu": 1,
                "H[^_]": 1,
                "I<.wG": 1,
                "C<5w ": 1,
                "#QNAf": 1,
                "\\[^_]": 2,
                "u>XZ$": 1,
                "r/9D$": 1,
                "u:;L$": 1,
                "BootSector": 2,
                "Drive": 2,
                "Partition": 2,
                "Linux": 2,
                "Windows": 1,
                "WindowsNT40": 1,
                "Windows2003": 2,
                "multi(0)disk(0)": 2,
                "[Time Remaining: ] ": 1,
                "Boot Menu": 1,
                "<fBBf<": 1,
                "<ffff<": 1,
                "?3?0000p": 1,
                "ccccg": 1,
                "fffffff": 1,
                "8ll8v": 1,
                "000000": 1,
                "fff|ffff": 1,
                "lffffffl": 1,
                "fbhxh`bf": 1,
                "fbhxh```": 1,
                "fflxxlff": 1,
                "``````bf": 1,
                "fff|````": 1,
                "fff|lfff": 1,
                "l|88|l": 1,
                "ffff<": 1,
                "<00000000<": 1,
                "``xlffff|": 1,
                "``lvffff": 1,
                "``flxxlf": 1,
                "ffffff": 2,
                "fffff|``": 2,
                "vf```": 1,
                "00006": 1,
                "fffff<": 1,
                "l888l": 1,
                "<f``f<": 1,
                "f`|``f": 1,
                "<f```f<": 1,
                "6666666": 3,
                "66666666": 4,
                "66666": 2,
                "666666666666666666666666": 1,
                "6666666666666": 1,
                "66666667666666666666670?": 1,
                "?076666666666666": 1,
                "666666666666670766666666": 1,
                "666666666666666?": 1,
                "?666666666666666": 1,
                "lllllll": 1,
                "<fff<": 1,
                ">ffff<": 1,
                "0``|```0": 1,
                "lllll": 1,
                "|||||||": 1,
                "CBootType": 1,
                "FreeLoader": 1,
                "DefaultOS": 1,
                "TimeOut": 1,
                "Error when detecting hardware": 1,
                "Unable to load additional boot device driver": 1,
                "Error initializing .ini file": 1,
                "Section [FreeLoader] not found in freeldr.ini.": 1,
                "Unable to initialize UI.": 2,
                "Unable to read operating systems section in freeldr.ini.": 1,
                "Press ENTER to reboot.": 3,
                "There were no operating systems listed in freeldr.ini.": 1,
                "For troubleshooting and advanced startup options for ReactOS, press F8.": 1,
                "Please select the operating system to start:": 1,
                "Rebooting...": 1,
                "BootMain() called.": 1,
                "../../boot/freeldr/freeldr/freeldr.c": 1,
                "Unable to initialize memory manager": 1,
                "timeout=": 1,
                "defaultos=": 1,
                "rdbase=": 1,
                "rdsize=": 1,
                "rdoffset=": 1,
                "(%s:%lu) ": 1,
                "err: ": 1,
                "fixme: ": 1,
                "warn: ": 1,
                "trace: ": 1,
                "Dumping buffer at %p with length of %lu bytes:": 1,
                "000%x:": 1,
                "00%x:": 1,
                "fixme": 1,
                "trace": 1,
                "memory": 1,
                "filesystem": 1,
                "inifile": 1,
                "cache": 1,
                "registry": 1,
                "linux": 1,
                "hwdetect": 1,
                "windows": 1,
                "peloader": 1,
                "scsiport": 1,
                "*** STOP: 0x%08lX (0x%08lX, 0x%08lX, 0x%08lX, 0x%08lX)": 1,
                "Assertion '%s' failed at %s line %u: %s": 1,
                "Assertion '%s' failed at %s line %u": 1,
                "TEST_BUGCHECK": 1,
                "MISSING_HARDWARE_REQUIREMENTS": 1,
                "FREELDR_IMAGE_CORRUPTION": 1,
                "Section [%s] not found in freeldr.ini.": 2,
                "BootPath": 1,
                "Boot path not specified for selected OS!": 1,
                "Kernel": 2,
                "Linux kernel filename not specified for selected OS!": 1,
                "Initrd": 2,
                "CommandLine": 2,
                "Invalid boot sector magic (0xaa55)": 2,
                "SetupSectors: %d": 1,
                "../../boot/freeldr/freeldr/linuxboot.c": 1,
                "RootFlags: 0x%x": 1,
                "SystemSize: 0x%x": 1,
                "SwapDevice: 0x%x": 1,
                "RamSize: 0x%x": 1,
                "VideoMode: 0x%x": 1,
                "RootDevice: 0x%x": 1,
                "BootFlag: 0x%x": 1,
                "Loading %s": 1,
                "Error: Cannot load a ramdisk (initrd) with an old kernel image.": 1,
                "SetupHeaderSignature: 0x%x (HdrS)": 1,
                "Version: 0x%x": 1,
                "RealModeSwitch: 0x%x": 1,
                "SetupSeg: 0x%x": 1,
                "StartSystemSeg: 0x%x": 1,
                "KernelVersion: 0x%x": 1,
                "TypeOfLoader: 0x%x": 1,
                "LoadFlags: 0x%x": 1,
                "SetupMoveSize: 0x%x": 1,
                "Code32Start: 0x%x": 1,
                "RamdiskAddress: 0x%x": 1,
                "RamdiskSize: 0x%x": 1,
                "BootSectKludgeOffset: 0x%x": 1,
                "BootSectKludgeSegment: 0x%x": 1,
                "HeapEnd: 0x%x": 1,
                "InitrdAddressMax: 0x%x": 1,
                "Loading %s...": 2,
                "Linux kernel '%s' not found.": 1,
                "Linux initrd image '%s' not found.": 1,
                "Booting Linux...": 1,
                "Select an option:": 1,
                "Last known good configuration is not supported yet!": 1,
                "Enable FreeLdr debug channels": 1,
                "Acceptable syntax: [level1]#channel1[,[level2]#channel2]": 1,
                "level can be one of: trace,warn,fixme,err": 1,
                "  if the level is ommited all levels": 1,
                "  are enabled for the specified channel": 1,
                "# can be either + or -": 1,
                "channel can be one of the following:": 1,
                "  all,warning,memory,filesystem,inifile,ui,disk,cache,registry,": 1,
                "  reactos,linux,hwdetect,windows,peloader,scsiport,heap": 1,
                "Examples:": 8,
                "  trace+windows,trace+reactos": 1,
                "  +hwdetect,err-disk": 1,
                "  +peloader": 1,
                "NOTE: all letters must be lowercase, no spaces allowed.": 1,
                "Safe Mode": 1,
                "Safe Mode with Networking": 1,
                "Safe Mode with Command Prompt": 1,
                "Enable Boot Logging": 1,
                "Enable VGA Mode": 1,
                "Last Known Good Configuration": 1,
                "Directory Services Restore Mode": 1,
                "Debugging Mode": 1,
                "FreeLdr debugging": 1,
                "Start ReactOS normally": 1,
                "Custom Boot": 1,
                "Reboot": 1,
                "Operating Systems": 2,
                "FreeLoader v%d.%d": 1,
                "CacheInternalFindBlock() BlockNumber = %d": 1,
                "../../boot/freeldr/freeldr/cache/blocklist.c": 1,
                "CacheInternalFreeBlock()": 1,
                "Dumping block list for BIOS drive 0x%x.": 1,
                "BytesPerSector: %d.": 2,
                "BlockSize: %d.": 2,
                "CacheSizeLimit: %d.": 2,
                "CacheSizeCurrent: %d.": 1,
                "CacheBlockCount: %d.": 1,
                "Cache Block: CacheBlock: 0x%x": 1,
                "Cache Block: Block Number: %d": 1,
                "Cache Block: Access Count: %d": 1,
                "Cache Block: Block Data: 0x%x": 1,
                "Cache Block: Locked In Cache: %d": 1,
                "(%s:%d) Fatal Error in %s: CacheBlock->BlockData == NULL": 1,
                "CacheInternalCheckCacheSizeLimits()": 1,
                "CacheInternalAddBlockToCache() BlockNumber = %d": 1,
                "CacheInternalOptimizeBlockList()": 1,
                "CacheInternalGetBlockPointer() BlockNumber = %d": 1,
                "Cache hit! BlockNumber: %d CacheBlock->BlockNumber: %d": 1,
                "Cache miss! BlockNumber: %d": 1,
                "CacheInternalDumpBlockList": 1,
                "CacheBlockCount: %d": 1,
                "../../boot/freeldr/freeldr/cache/cache.c": 1,
                "CacheSizeLimit: %d": 1,
                "CacheSizeCurrent: %d": 1,
                "Initializing BIOS drive 0x%x.": 1,
                "CacheReadDiskSectors() DiskNumber: 0x%x StartSector: %I64d SectorCount: %d Buffer: 0x%x": 1,
                "StartBlock: %d SectorOffsetInStartBlock: %d CopyLengthInStartBlock: %d EndBlock: %d SectorOffsetInEndBlock: %d BlockCount: %d": 1,
                "1 - RtlCopyMemory(0x%x, 0x%x, %d)": 1,
                "2 - RtlCopyMemory(0x%x, 0x%x, %d)": 1,
                "3 - RtlCopyMemory(0x%x, 0x%x, %d)": 1,
                "CacheReleaseMemory() MinimumAmountToRelease = %d": 1,
                "no error": 1,
                "bad command passed to driver": 1,
                "address mark not found or bad sector": 1,
                "diskette write protect error": 1,
                "sector not found": 1,
                "fixed disk reset failed": 1,
                "diskette changed or removed": 1,
                "bad fixed disk parameter table": 1,
                "DMA overrun": 1,
                "DMA access across 64k boundary": 1,
                "bad fixed disk sector flag": 1,
                "bad fixed disk cylinder": 1,
                "unsupported track/invalid media": 1,
                "invalid number of sectors on fixed disk format": 1,
                "fixed disk controlled data address mark detected": 1,
                "fixed disk DMA arbitration level out of range": 1,
                "ECC/CRC error on disk read": 1,
                "recoverable fixed disk data error, data fixed by ECC": 1,
                "controller error (NEC for floppies)": 1,
                "seek failure": 1,
                "time out, drive not ready": 1,
                "fixed disk drive not ready": 1,
                "fixed disk undefined error": 1,
                "fixed disk write fault on selected drive": 1,
                "fixed disk status error/Error reg = 0": 1,
                "sense operation failed": 1,
                "unknown error code": 1,
                "Error Code: 0x%lx": 1,
                "Error: %s": 1,
                "../../boot/freeldr/freeldr/disk/disk.c": 1,
                "Invalid active partition information": 1,
                "Dumping partition table for drive 0x%x:": 1,
                "../../boot/freeldr/freeldr/disk/partition.c": 1,
                "Boot record logical start sector = %d": 1,
                "sizeof(MASTER_BOOT_RECORD) = 0x%x.": 1,
                "-------------------------------------------": 1,
                "Partition %d": 1,
                "BootIndicator: 0x%x": 1,
                "StartHead: 0x%x": 1,
                "StartSector (Plus 2 cylinder bits): 0x%x": 1,
                "StartCylinder: 0x%x": 1,
                "SystemIndicator: 0x%x": 1,
                "EndHead: 0x%x": 1,
                "EndSector (Plus 2 cylinder bits): 0x%x": 1,
                "EndCylinder: 0x%x": 1,
                "SectorCountBeforePartition: 0x%x": 1,
                "PartitionSectorCount: 0x%x": 1,
                "No bootable (active) partitions found.": 1,
                "Too many bootable (active) partitions found.": 1,
                "(%s:%d) WARNING: %s is UNIMPLEMENTED!": 3,
                "IoReadPartitionTable": 1,
                "ramdisk(0)": 2,
                "Loading ramdisk...": 1,
                "RAM disk too big": 1,
                "Failed to allocate memory for RAM disk": 1,
                "Failed to read ramdisk": 1,
                "Ext2Seek() NewFilePointer = %lu": 1,
                "../../boot/freeldr/freeldr/fs/ext2.c": 1,
                "Ext2GetFileInformation() FileSize = %d": 1,
                "Ext2GetFileInformation() FilePointer = %d": 1,
                "Ext2SearchDirectoryBufferForFile() DirectoryBuffer = 0x%x DirectorySize = %d FileName = %s": 1,
                "Directory entry extends past end of directory file.": 1,
                "Dumping directory entry at offset %d:": 1,
                "EXT2 Directory Entry:": 1,
                "inode = %d": 1,
                "direntlen = %d": 1,
                "namelen = %d": 1,
                "filetype = %d": 1,
                "name = ": 1,
                "Ext2ReadSuperBlock()": 1,
                "Out of memory.": 1,
                "Dumping super block:": 1,
                "total_inodes: %d": 1,
                "total_blocks: %d": 1,
                "reserved_blocks: %d": 1,
                "free_blocks: %d": 1,
                "free_inodes: %d": 1,
                "first_data_block: %d": 1,
                "log2_block_size: %d": 1,
                "log2_fragment_size: %d": 1,
                "blocks_per_group: %d": 1,
                "fragments_per_group: %d": 1,
                "inodes_per_group: %d": 1,
                "mtime: %d": 1,
                "utime: %d": 1,
                "mnt_count: %d": 1,
                "max_mnt_count: %d": 1,
                "magic: 0x%x": 1,
                "fs_state: %d": 1,
                "error_handling: %d": 1,
                "minor_revision_level: %d": 1,
                "lastcheck: %d": 1,
                "checkinterval: %d": 1,
                "creator_os: %d": 1,
                "revision_level: %d": 1,
                "uid_reserved: %d": 1,
                "gid_reserved: %d": 1,
                "first_inode: %d": 1,
                "inode_size: %d": 1,
                "block_group_number: %d": 1,
                "feature_compatibility: 0x%x": 1,
                "feature_incompat: 0x%x": 1,
                "feature_ro_compat: 0x%x": 1,
                "unique_id = { 0x%x, 0x%x, 0x%x, 0x%x }": 1,
                "volume_name = '%.16s'": 1,
                "last_mounted_on = '%.64s'": 1,
                "compression_info = 0x%x": 1,
                "Invalid super block magic (0xef53)": 1,
                "FreeLoader does not understand the revision of this EXT2/EXT3 filesystem.": 1,
                "Please update FreeLoader.": 3,
                "FreeLoader does not understand features of this EXT2/EXT3 filesystem.": 1,
                "Ext2GroupCount: %d": 1,
                "Ext2BlockSizeInBytes: %d": 1,
                "Ext2BlockSizeInSectors: %d": 1,
                "Ext2FragmentSizeInBytes: %d": 1,
                "Ext2FragmentSizeInSectors: %d": 1,
                "The fragment size must be equal to the block size.": 1,
                "Ext2InodesPerBlock: %d": 1,
                "Ext2GroupDescPerBlock: %d": 1,
                "Ext2ReadBlock() BlockNumber = %d Buffer = 0x%x": 1,
                "Error reading block %d - block out of range.": 1,
                "Block is part of a sparse file. Zeroing input buffer.": 1,
                "Ext2ReadGroupDescriptors()": 1,
                "Ext2OpenVolume() DriveNumber = 0x%x VolumeStartSector = %d": 1,
                "Ext2ReadPartialBlock() BlockNumber = %d StartingOffset = %d Length = %d Buffer = 0x%x": 1,
                "Ext2ReadFileBig() BytesToRead = %d Buffer = 0x%x": 1,
                "Block pointer list is NULL and file is not a fast symbolic link.": 1,
                "Reading fast symbolic link data": 1,
                "Ext2ReadGroupDescriptor()": 1,
                "Dumping group descriptor:": 1,
                "block_id = %d": 1,
                "inode_id = %d": 1,
                "inode_table_id = %d": 1,
                "free_blocks = %d": 1,
                "free_inodes = %d": 1,
                "used_dirs = %d": 1,
                "Ext2ReadInode() Inode = %d": 1,
                "Error reading inode %ld - inode out of range.": 1,
                "InodeGroupNumber = %d": 1,
                "InodeBlockNumber = %d": 1,
                "InodeOffsetInBlock = %d": 1,
                "InodeBlockNumber (after group desc correction) = %d": 1,
                "Dumping inode information:": 1,
                "mode = 0x%x": 1,
                "uid = %d": 1,
                "size = %d": 1,
                "atime = %d": 1,
                "ctime = %d": 1,
                "mtime = %d": 1,
                "dtime = %d": 1,
                "gid = %d": 1,
                "nlinks = %d": 1,
                "blockcnt = %d": 1,
                "flags = 0x%x": 1,
                "osd1 = 0x%x": 1,
                "dir_blocks = { %u, %u, %u, %u, %u, %u, %u, %u, %u, %u, %u, %u }": 1,
                "indir_block = %u": 1,
                "double_indir_block = %u": 1,
                "tripple_indir_block = %u": 1,
                "version = %d": 1,
                "acl = %d": 1,
                "dir_acl = %d": 1,
                "fragment_addr = %d": 1,
                "osd2 = { %d, %d, %d }": 1,
                "Ext2CopyIndirectBlockPointers() BlockCount = %d": 1,
                "Ext2CopyDoubleIndirectBlockPointers() BlockCount = %d": 1,
                "Ext2CopyTripleIndirectBlockPointers() BlockCount = %d": 1,
                "Ext2ReadBlockPointerList()": 1,
                "Ext2ReadDirectory() Inode = %d": 1,
                "Inode is not a directory.": 1,
                "DirectoryFileInfo.FileSize <= 0xFFFFFFFF": 1,
                "Ext2LookupFile() FileName = %s": 1,
                "Inode is not a regular file or symbolic link.": 1,
                "Ext2OpenFile() FileName = %s": 1,
                "File is a symbolic link": 1,
                "Symbolic link path = %s": 1,
                "Full file path = %s": 1,
                "Ext2Open() FileName = %s": 1,
                "FatSeek() NewFilePointer = %lu": 1,
                "../../boot/freeldr/freeldr/fs/fat.c": 1,
                "FatGetFileInformation() FileSize = %d": 1,
                "FatGetFileInformation() FilePointer = %d": 1,
                "FATX16": 1,
                "FATX32": 1,
                "FatOpenVolume() DeviceId = %d": 1,
                "Dumping boot sector:": 1,
                "sizeof(FATX_BOOTSECTOR) = 0x%x.": 1,
                "FileSystemType: %c%c%c%c.": 1,
                "VolumeSerialNumber: 0x%x": 1,
                "SectorsPerCluster: %d": 1,
                "NumberOfFats: %d": 1,
                "Unknown: 0x%x": 1,
                "FatType %s": 1,
                "sizeof(FAT32_BOOTSECTOR) = 0x%x.": 1,
                "JumpBoot: 0x%x 0x%x 0x%x": 1,
                "OemName: %c%c%c%c%c%c%c%c": 1,
                "BytesPerSector: %d": 1,
                "ReservedSectors: %d": 1,
                "RootDirEntries: %d": 1,
                "TotalSectors: %d": 1,
                "MediaDescriptor: 0x%x": 1,
                "SectorsPerFat: %d": 1,
                "SectorsPerTrack: %d": 1,
                "NumberOfHeads: %d": 1,
                "HiddenSectors: %d": 1,
                "TotalSectorsBig: %d": 1,
                "SectorsPerFatBig: %d": 1,
                "ExtendedFlags: 0x%x": 1,
                "FileSystemVersion: 0x%x": 1,
                "RootDirStartCluster: %d": 1,
                "FsInfo: %d": 1,
                "BackupBootSector: %d": 1,
                "Reserved: 0x%x": 1,
                "DriveNumber: 0x%x": 1,
                "Reserved1: 0x%x": 1,
                "BootSignature: 0x%x": 1,
                "VolumeLabel: %c%c%c%c%c%c%c%c%c%c%c": 1,
                "FileSystemType: %c%c%c%c%c%c%c%c": 1,
                "BootSectorMagic: 0x%x": 1,
                "sizeof(FAT_BOOTSECTOR) = 0x%x.": 1,
                "Invalid boot sector magic (expected 0xaa55 found 0x%x)": 1,
                "This file system has cluster sizes bigger than 64k.": 1,
                "FreeLoader does not support this.": 1,
                "FreeLoader is too old to work with this FAT32 filesystem.": 1,
                "FatReadVolumeSectors() Failed to seek": 1,
                "FatReadVolumeSectors() Failed to read": 1,
                "FatOffset: %d": 1,
                "ThisFatSecNum: %d": 1,
                "ThisFatEntOffset: %d": 1,
                "Unknown FAT type %d": 1,
                "FatCountClustersInChain() StartCluster = %d": 1,
                "FatCountClustersInChain() ClusterCount = %d": 1,
                "FatGetClusterChainArray() StartCluster = %d": 1,
                "FatSearchDirectoryBufferForFile() DirectoryBuffer = 0x%x EntryCount = %d FileName = %s": 1,
                "MSDOS Directory Entry:": 1,
                "FileName[11] = %c%c%c%c%c%c%c%c%c%c%c": 1,
                "Attr = 0x%x": 1,
                "ReservedNT = 0x%x": 1,
                "TimeInTenths = %d": 1,
                "CreateTime = %d": 1,
                "CreateDate = %d": 1,
                "LastAccessDate = %d": 1,
                "ClusterHigh = 0x%x": 1,
                "Time = %d": 1,
                "Date = %d": 1,
                "ClusterLow = 0x%x": 1,
                "Size = %d": 1,
                "StartCluster = 0x%x": 1,
                "FatReadClusterChain() StartClusterNumber = %d NumberOfClusters = %d Buffer = 0x%x": 1,
                "FatReadFile() BytesToRead = %d Buffer = 0x%x": 1,
                "Found cached buffer": 1,
                "Trying to allocate (DirectorySize) %d bytes.": 1,
                "FALSE": 10,
                "FatBufferDirectory() DirectoryStartCluster = %d RootDirectory = %s": 1,
                "FatLookupFile() FileName = %s": 1,
                "FatXSearchDirectoryBufferForFile() DirectoryBuffer = 0x%x EntryCount = %d FileName = %s": 1,
                "FATX Directory Entry:": 1,
                "FileNameSize = %d": 1,
                "LastAccessTime = %d": 1,
                "FatOpen() FileName = %s": 1,
                "FAT12   ": 1,
                "FAT16   ": 1,
                "FAT32   ": 1,
                "../../boot/freeldr/freeldr/fs/fs.c": 1,
                "FsGetNumPathParts() Path = %s NumPathParts = %d": 1,
                "FsGetFirstNameFromPath() Path = %s FirstName = %s": 1,
                "Opening file '%s'...": 1,
                "FsRegisterDevice() Prefix = %s": 1,
                "IsoSeek() NewFilePointer = %lu": 1,
                "../../boot/freeldr/freeldr/fs/iso.c": 1,
                "IsoRead() Buffer = %p, N = %lu": 1,
                "IsoRead() done": 1,
                "IsoGetFileInformation() FileSize = %d": 1,
                "IsoGetFileInformation() FilePointer = %d": 1,
                "IsoLookupFile() FileName = %s": 1,
                "IsoBufferDirectory() DirectoryStartSector = %d DirectoryLength = %d": 1,
                "Trying to read (DirectoryCount) %d sectors.": 1,
                "Trying to allocate (DirectoryLength) %d bytes.": 1,
                "Name '.'": 1,
                "Name '..'": 1,
                "Name '%s'": 1,
                "IsoSearchDirectoryBufferForFile() DirectoryBuffer = 0x%x DirectoryLength = %d FileName = %s": 1,
                "IsoOpen() FileName = %s": 1,
                "CD001": 1,
                "DataRunOffsetSize: %x": 1,
                "../../boot/freeldr/freeldr/fs/ntfs.c": 1,
                "DataRunLengthSize: %x": 1,
                "DataRunOffset: %x": 1,
                "DataRunLength: %x": 1,
                "NtfsDiskRead - Offset: %I64d Length: %I64d": 1,
                "Failed to allocate memory: %x": 1,
                "NtfsSeek() NewFilePointer = %lu": 1,
                "NtfsGetFileInformation() FileSize = %d": 1,
                "NtfsGetFileInformation() FilePointer = %d": 1,
                "- %s (%x)": 1,
                "NtfsLookupFile() FileName = %s": 1,
                "- Lookup: %s": 1,
                "IndexRecordSize: %x IndexBlockSize: %x": 1,
                "Large Index!": 1,
                "Corrupted filesystem!": 1,
                "BitmapDataSize: %x": 1,
                "RecordOffset: %x IndexAllocationSize: %x": 1,
                "File found": 1,
                "Can't read MFT record": 1,
                "NtfsLookupFile: Can't read MFT record": 1,
                "NtfsLookupFile: Can't find data attribute": 1,
                "- Failed": 1,
                "- Lookup: %x": 1,
                "NtfsOpen() FileName = %s": 1,
                "ClusterSize: 0x%x": 1,
                "ClustersPerMftRecord: %d": 1,
                "ClustersPerIndexRecord: %d": 1,
                "MftRecordSize: 0x%x": 1,
                "IndexRecordSize: 0x%x": 1,
                "Reading MFT index...": 1,
                "Failed to seek to Master File Table record.": 1,
                "Failed to read the Master File Table record.": 1,
                "Failed to allocate memory.": 1,
                "Searching for DATA attribute...": 1,
                "Can't find data attribute for Master File Table.": 1,
                "!PXE structure found at %p": 1,
                "../../boot/freeldr/freeldr/fs/pxe.c": 1,
                "PxeCall(0x%x, %p)": 1,
                "PxeCall(0x%x, %p) failed with exit=%d status=0x%x": 1,
                "PxeCall(0x%x, %p) succeeded, but returned error status 0x%x": 1,
                "net(0)": 1,
                "IniFileInitialize()": 1,
                "../../boot/freeldr/freeldr/inifile/ini_init.c": 1,
                "Error opening freeldr.ini or file not found.": 1,
                "You need to re-install FreeLoader.": 2,
                "Error while getting informations about freeldr.ini.": 1,
                "Out of memory while loading freeldr.ini.": 1,
                "Error while reading freeldr.ini.": 1,
                "IniOpenSection() SectionName = %s": 1,
                "../../boot/freeldr/freeldr/inifile/inifile.c": 1,
                "IniOpenSection() Found it! SectionId = 0x%x": 1,
                "IniOpenSection() Section not found.": 1,
                "IniGetNumSectionItems() SectionId = 0x%x": 1,
                "IniGetNumSectionItems() Item count = %d": 1,
                ".001 NameSize = %d ValueSize = %d": 1,
                "IniReadSettingByNumber() SectionId = 0x%x": 1,
                "IniReadSettingByNumber() Setting number %d not found.": 1,
                "IniReadSettingByNumber() Setting number %d found.": 1,
                "IniReadSettingByNumber() Setting name = %s": 1,
                "IniReadSettingByNumber() Setting value = %s": 1,
                "1 NameSize = %d ValueSize = %d": 1,
                "2 NameSize = %d ValueSize = %d": 1,
                "3 NameSize = %d ValueSize = %d": 1,
                "4 NameSize = %d ValueSize = %d": 1,
                "IniReadSettingByName() SectionId = 0x%x": 1,
                "IniReadSettingByName() Setting '%s' found.": 1,
                "IniReadSettingByName() Setting value = %s": 1,
                "IniReadSettingByName() Setting '%s' not found.": 1,
                "IniParseFile() IniFileSize: %d": 1,
                "../../boot/freeldr/freeldr/inifile/parse.c": 1,
                "Error: freeldr.ini:%lu: Setting '%s' found outside of a [section].": 1,
                "Press any key to continue...": 1,
                "Parsed %d sections and %d settings.": 1,
                "IniParseFile() done.": 1,
                "AddMemoryDescriptor(0x%lx-0x%lx [0x%lx pages])": 1,
                "../../boot/freeldr/freeldr/mm/meminit.c": 1,
                "PageCount > 0": 1,
                "Inserting at i=%ld: (0x%lx:0x%lx)": 1,
                "Adding i=%ld: (0x%lx:0x%lx)": 1,
                "Could not get NtHeaders!": 1,
                "FreeLdr FileHeader is invalid.": 1,
                "FreeLdr OptionalHeader is invalid.": 1,
                "lo/hi %lx %lx": 1,
                "MmGetAddressablePageCountIncludingHoles() returning 0x%x": 1,
                "MmFindLocationForPageLookupTable() returning 0x%x": 1,
                "MmMarkPagesInLookupTable()": 1,
                "Memory (0x%lx:0x%lx) outside of lookup table! Valid range: 0x%lx-0x%lx.": 1,
                "MmMarkPagesInLookupTable() Done": 1,
                "MmInitPageLookupTable()": 1,
                "Marking pages 0x%lx-0x%lx as type %s": 1,
                "Ignoring pages 0x%lx-0x%lx (%s)": 1,
                "Marking the page lookup table pages as reserved StartPage: 0x%x PageCount: 0x%x": 1,
                "Alloc low memory, LastFreePageHint 0x%x, TPC 0x%x": 1,
                "Initializing Memory Manager.": 1,
                "System Memory Map (Base Address, Length, Type):": 1,
                "Error initializing memory manager!": 1,
                "Memory Manager initialized. 0x%x pages available.": 1,
                "Unknown memory": 1,
                "Free memory": 1,
                "Bad memory": 1,
                "LoadedProgram": 1,
                "FirmwareTemporary": 1,
                "FirmwarePermanent": 1,
                "OsloaderHeap": 1,
                "OsloaderStack": 1,
                "SystemCode": 1,
                "HalCode": 1,
                "BootDriver": 1,
                "RegistryData": 1,
                "MemoryData": 1,
                "NlsData": 1,
                "SpecialMemory": 1,
                "Reserve": 1,
                "MmAllocateMemory() called for 0 bytes. Returning NULL.": 1,
                "../../boot/freeldr/freeldr/mm/mm.c": 1,
                "Memory allocation failed: MmAllocateMemory() called for 0 bytes.": 1,
                "Memory allocation failed in MmAllocateMemory(). Not enough free memory to allocate %d bytes.": 1,
                "Memory allocation failed: out of memory.": 1,
                "Allocated %d bytes (%d pages) of memory (type %ld) starting at page 0x%lx.": 1,
                "Memory allocation pointer: 0x%x": 1,
                "MmAllocateMemoryAtAddress() called for 0 bytes. Returning NULL.": 1,
                "Memory allocation failed: MmAllocateMemoryAtAddress() called for 0 bytes.": 1,
                "Memory allocation failed in MmAllocateMemoryAtAddress(). Not enough free memory to allocate %d bytes (requesting %d pages but have only %d). ": 1,
                "Memory allocation failed in MmAllocateMemoryAtAddress(). Not enough free memory to allocate %d bytes at address %p.": 1,
                "Allocated %d bytes (%d pages) of memory starting at page %d.": 1,
                "MmAllocateHighestMemoryBelowAddress() called for 0 bytes. Returning NULL.": 1,
                "Memory allocation failed: MmAllocateHighestMemoryBelowAddress() called for 0 bytes.": 1,
                "Memory allocation failed in MmAllocateHighestMemoryBelowAddress(). Not enough free memory to allocate %d bytes.": 1,
                "----------- Memory Allocation Bitmap -----------": 1,
                "%08x:": 1,
                "../../boot/freeldr/freeldr/mm/heap.c": 1,
                "(Next->Tag == 0) || (Next->Tag == 'dnE#')": 1,
                "Next->Data[0].Blink == Block - &Heap->Blocks": 1,
                "(Previous->Tag == 0) || (Previous->Tag == 'dnE#')": 1,
                "Previous->Data[0].Flink == Block - &Heap->Blocks": 1,
                "FreeBlock->Tag == 0": 1,
                "HeapCreate(MemoryType=%ld)": 1,
                "HEAP: Failed to allocate heap of size 0x%lx, Type": 1,
                "Remaining = %ld": 1,
                "*REDZONE_SIZE(Block) <= Block->Size * sizeof(HEAP_BLOCK)": 1,
                "*REDZONE_LOW(Block) == REDZONE_MARK": 1,
                "*REDZONE_HI(Block) == REDZONE_MARK": 1,
                "HeapRelease(%p)": 1,
                "HeapRelease() done, freed %lu of %lu pages": 1,
                "Heap statistics for default heap:": 1,
                "CurrentAlloc=0x%lx, MaxAlloc=0x%lx, LargestAllocation=0x%lx": 2,
                "NumAllocs=%ld, NumFrees=%ld": 2,
                "AllocTime = %I64d, FreeTime = %I64d, sum = %I64d": 1,
                "Heap statistics for temp heap:": 1,
                "HEAP: Allocation of 0x%lx bytes too large": 1,
                "Block->Tag == 0": 1,
                "HeapAllocate(%p, %ld, %.4s) -> return %p": 1,
                "HEAP: nothing suitable found for 0x%lx bytes": 1,
                "HeapFree(%p, %p)": 1,
                "Tag != 'dnE#'": 1,
                "HEAP: trying to free %p outside of heap %p": 1,
                "HEAP: Bad tag! Pointer=%p: block tag '%.4s', requested '%.4s', size=0x%lx": 1,
                "MmInitializeHeap()": 1,
                "FrLdrDefaultHeap": 1,
                "FrLdrTempHeap": 1,
                "MmInitializeHeap() done, default heap %p, temp heap %p": 1,
                "../../boot/freeldr/freeldr/reactos/registry.c": 1,
                "RemainingPath->Buffer[0] == '\\\\'": 1,
                "RegpFindSubkeyInIndex('%wZ')": 1,
                "SubKeyNode->Signature == CM_KEY_NODE_SIGNATURE": 1,
                " RegpFindSubkeyInIndex: checking '%.*s'": 1,
                "RegImportBinaryHive(%p, 0x%lx)": 1,
                "Invalid hive Signature!": 1,
                "RegImportBinaryHive done": 1,
                "RegEnumKey(%p, %lu, %p, %p->%u)": 1,
                "KeyNode->Signature == CM_KEY_NODE_SIGNATURE": 2,
                "RegEnumKey index out of bounds": 1,
                "IndexCell: %x, SubKeyCounts: %x": 1,
                "RegEnumKey done -> %u, '%.*s'": 1,
                "RegOpenKey(%p, '%S', %p)": 1,
                "RegOpenKey: absolute path": 1,
                "RegOpenKey: invalid path '%S' (%wZ)": 1,
                "RegOpenKey: %wZ / %wZ / %wZ": 1,
                "RegOpenKey: RemainingPath '%wZ'": 1,
                "RegOpenKey: next element '%wZ'": 1,
                "Did not find sub key '%wZ' (full %S)": 1,
                "RegOpenKey done": 1,
                "RegQueryValue(%p, '%S', %p, %p, %p)": 1,
                "RegQueryValue no values in key (%.*s)": 1,
                "ValueListCell: %x": 1,
                "checking %.*s": 1,
                "RegQueryValue success": 1,
                "RegQueryValue value not found": 1,
                "RegInitCurrentControlSet": 1,
                "RegOpenKey() failed (Error %u)": 1,
                "RegQueryValue('Default') failed (Error %u)": 1,
                "RegOpenKey(SystemKey) failed (Error %lu)": 1,
                "RegOpenKey(CurrentControlSetKey) failed (Error %lu)": 1,
                "RegInitCurrentControlSet done": 1,
                "RegEnumValue(%p, %lu, %S, %p, %p, %p, %p (%lu))": 1,
                "RegEnumValue: index invalid": 1,
                "ValueCell != NULL": 1,
                "RegEnumValue done": 1,
                "fdisk(": 1,
                "cdrom(": 1,
                "rdisk(": 1,
                ")partition(": 1,
                "scsi(%lu)disk(%lu)rdisk(%lu)partition(%lu)": 1,
                "scsi(%lu)cdrom(%lu)fdisk(%lu)": 1,
                "multi(%lu)disk(%lu)rdisk(%lu)partition(%lu)": 1,
                "multi(%lu)disk(%lu)cdrom(%lu)": 1,
                "multi(%lu)disk(%lu)fdisk(%lu)": 1,
                "fdisk(%d)": 1,
                "rdisk(%d)partition(%d)": 1,
                " and ": 2,
                " to move the highlight to your choice.": 1,
                "Press ENTER to choose.": 1,
                "Press any key": 1,
                "Light": 1,
                "Medium": 1,
                "Black": 1,
                "Green": 1,
                "Magenta": 1,
                "Brown": 1,
                "DarkGray": 1,
                "LightBlue": 1,
                "LightGreen": 1,
                "LightCyan": 1,
                "LightRed": 1,
                "LightMagenta": 1,
                "Yellow": 1,
                "White": 1,
                "Press ENTER to continue": 1,
                "by ReactOS Team": 1,
                "<www.reactos.org>": 1,
                "F8 for Options": 1,
                "Press ENTER to continue, or ESC to cancel": 1,
                " to select, then press ENTER.": 1,
                "MessageBox": 1,
                "Initializing User Interface.": 1,
                "../../boot/freeldr/freeldr/ui/ui.c": 1,
                "Reading in UI settings from [Display] section.": 1,
                "Display": 1,
                "DisplayMode": 1,
                "MinimalUI": 1,
                "TitleText": 1,
                "TimeText": 1,
                "StatusBarColor": 1,
                "StatusBarTextColor": 1,
                "BackdropTextColor": 1,
                "BackdropColor": 1,
                "BackdropFillStyle": 1,
                "TitleBoxTextColor": 1,
                "TitleBoxColor": 1,
                "MessageBoxTextColor": 1,
                "MessageBoxColor": 1,
                "MenuTextColor": 1,
                "MenuColor": 1,
                "TextColor": 1,
                "SelectedTextColor": 1,
                "SelectedColor": 1,
                "EditBoxTextColor": 1,
                "EditBoxColor": 1,
                "SpecialEffects": 1,
                "ShowTime": 1,
                "MenuBox": 1,
                "CenterMenu": 1,
                "UiInitialize() returning TRUE.": 1,
                "January ": 1,
                "February ": 1,
                "March ": 1,
                "April ": 1,
                "June ": 1,
                "July ": 1,
                "August ": 1,
                "September ": 1,
                "October ": 1,
                "November ": 1,
                "December ": 1,
                "../../boot/freeldr/freeldr/windows/conversion.c": 1,
                "ListHeadPa->Flink != 0": 1,
                "ListHeadPa->Blink != 0": 1,
                "ConvertConfigToVA(Start 0x%X)": 1,
                "Device 0x%X class %d type %d id '%s', parent %p": 1,
                "WinLdrpCompareDllName: %s and %wZ, Length = %d UN->Length %d": 1,
                "../../boot/freeldr/freeldr/windows/peloader.c": 1,
                "WinLdrCheckForLoadedDll: DllName %s": 1,
                "WinLdrCheckForLoadedDll: DTE %p, EP %p, base %p name '%.*ws'": 1,
                "WinLdrCheckForLoadedDll: LoadedEntry %X": 1,
                "WinLdrAllocateDataTableEntry(, '%s', '%s', %p)": 1,
                "Inserting DTE %p, name='%.*S' DllBase=%p ": 1,
                "WinLdrLoadImage(%s, %ld, *)": 1,
                "Error reading from file": 1,
                "Error - no NT header found": 1,
                "Not an executable image": 1,
                "Failed to alloc pages for image": 1,
                "Base PA: 0x%X, VA: 0x%X": 1,
                "Error seeking to start of file": 1,
                "Error reading headers": 1,
                "SH->VA: 0x%X": 1,
                "WinLdrLoadImage(): Error reading section from file!": 1,
                "WinLdrLoadImage(): SORD %d < VS %d": 1,
                "Relocating %p -> %p": 1,
                "FreeLdr": 2,
                "WinLdrLoadImage() done, PA = %p": 1,
                "Loading referenced DLL: %s": 1,
                "WinLdrLoadImage() failed": 1,
                "WinLdrAllocateDataTableEntry() failed": 2,
                "WinLdrScanImportDescriptorTable() calling ourselves for %S": 1,
                "WinLdrScanImportDescriptorTable() failed": 1,
                "DllBase == NULL!": 1,
                "Did not find export '%s'!": 1,
                "Ordinal number is invalid!": 1,
                "WinLdrpBindImportName(): ForwarderName %s": 1,
                "WinLdrpLoadAndScanReferencedDll() failed to load forwarder dll.": 1,
                "WinLdrScanImportDescriptorTable(): %wZ ImportTable = 0x%X": 1,
                "WinLdrScanImportDescriptorTable(): Looking at %s": 1,
                "WinLdrpLoadAndScanReferencedDll() failed": 1,
                "WinLdrpScanImportAddressTable(): DllBase 0x%X, ImageBase 0x%X, ThunkData 0x%X": 1,
                "Error, DllBase == NULL!": 1,
                "WinLdrpScanImportAddressTable(): ExportDirectory 0x%X": 1,
                "DllBase=%p(%p)": 1,
                "WinLdrpScanImportAddressTable() failed: ImportName = '%s', DirectoryPath = '%s'": 1,
                "KDCOM.DLL": 1,
                "Loading %s failed": 1,
                "../../boot/freeldr/freeldr/windows/winldr.c": 1,
                "%s loaded successfully at %p": 1,
                "NTOSKRNL.EXE": 1,
                "HAL.DLL": 1,
                "DEBUGPORT=": 1,
                "DriverPath: %s, DllName: %s, LPB": 1,
                "%s%wZ": 1,
                "WinLdrScanImportDescriptorTable() failed for %s": 1,
                "Failed to allocate memory for system block!": 1,
                "BootDriver %wZ DTE %08X RegPath: %wZ": 1,
                "Can't load boot driver '%wZ'!": 1,
                "Loading module %s": 1,
                "Loaded %s at 0x%x with size 0x%x": 1,
                "ArcBoot: %s": 1,
                "SystemRoot: %s": 1,
                "Options: %s": 1,
                "WinLdrInitializePhase1() completed": 1,
                "BP %08X PC %04X MT %d": 1,
                "ArcDisk %s checksum: 0x%X, signature: 0x%X": 1,
                "LoadAndBootWindowsCommon()": 1,
                "Error loading NTOS core.": 1,
                "Loading boot drivers...": 1,
                "Boot drivers loaded with status %d": 1,
                "Hello from paged mode, KiSystemStartup %p, LoaderBlockVA %p!": 1,
                "loaded": 1,
                "not loaded": 1,
                "scanned": 1,
                "not scanned": 1,
                "Loading NT...": 1,
                "SystemPath": 2,
                "LiveCD": 1,
                "Options": 2,
                "BootOptions: '%s'": 1,
                "/RDPATH=": 1,
                "BootPath: '%s'": 1,
                "Loading system hive...": 1,
                "SYSTEM hive %s": 1,
                "MempAddMemoryBlock(BasePage=0x%lx, PageCount=0x%lx, Type=%ld)": 1,
                "../../boot/freeldr/freeldr/windows/wlmemory.c": 1,
                "Error: no MAD slots left!": 1,
                "BP=0x%X PC=0x%X %s": 1,
                "MempSetupPagingForRegion(BasePage=0x%lx, PageCount=0x%lx, Type=%ld)": 1,
                "Error during MempSetupPaging": 1,
                "Can not retrieve the current memory map": 1,
                "Got memory map with %d entries": 1,
                "MadCount: %d": 1,
                "Memory Descriptor List prepared, printing PDE": 1,
                "ExceptionBlock    ": 1,
                "SystemBlock       ": 1,
                "Free              ": 1,
                "Bad               ": 1,
                "LoadedProgram     ": 1,
                "FirmwareTemporary ": 1,
                "FirmwarePermanent ": 1,
                "OsloaderHeap      ": 1,
                "OsloaderStack     ": 1,
                "SystemCode        ": 1,
                "HalCode           ": 1,
                "BootDriver        ": 1,
                "ConsoleInDriver   ": 1,
                "ConsoleOutDriver  ": 1,
                "StartupDpcStack   ": 1,
                "StartupKernelStack": 1,
                "StartupPanicStack ": 1,
                "StartupPcrPage    ": 1,
                "StartupPdrPage    ": 1,
                "RegistryData      ": 1,
                "MemoryData        ": 1,
                "NlsData           ": 1,
                "SpecialMemory     ": 1,
                "BBTMemory         ": 1,
                "AnsiFileSize: %d": 1,
                "../../boot/freeldr/freeldr/windows/wlregistry.c": 1,
                "OemFileSize: %d": 1,
                "LanguageFileSize: %d": 1,
                "Error reading NLS file!": 1,
                "Failed to open the 'ServiceGroupOrder' key (rc %d)": 1,
                "Failed to open the 'GroupOrderList' key (rc %d)": 1,
                "Failed to open the 'Services' key (rc %d)": 1,
                "RegQueryValue(): rc %d": 1,
                "BufferSize: %d ": 1,
                "GroupNameBuffer: '%S' ": 1,
                "Driver group: '%S'": 1,
                "RegEnumKey(): rc %d": 1,
                "ImagePath: not found": 1,
                "%s\\system32\\drivers\\%S.sys": 1,
                "ImagePath: '%s'": 1,
                "Adding boot driver: '%s'": 1,
                "Failed to add boot driver": 1,
                "Service %d: '%S'": 1,
                "%ssystem32\\drivers\\%S.sys": 1,
                "  Adding boot driver: '%s'": 1,
                " Failed to add boot driver": 1,
                "NLS data %s %s %s": 1,
                "NLS data loaded with status %d": 1,
                "Getting NLS names from registry failed!": 1,
                "Opening hive file failed!": 1,
                "Hive file has 0 size!": 1,
                "Unable to alloc memory for a hive!": 1,
                "Unable to read from hive file!": 1,
                "  Adding filesystem service %S": 1,
                " Failed to add filesystem service": 1,
                "  No required filesystem service": 1,
                "SYSTEM": 1,
                "Importing binary hive failed!": 1,
                "Initializing CurrentControlSet link failed!": 1,
                "CustomBootDisk%u%u%u%u%u%u": 1,
                "BootType": 1,
                "BootDrive": 2,
                "CustomBootPartition%u%u%u%u%u%u": 1,
                "BootPartition": 2,
                "CustomBootSectorFile%u%u%u%u%u%u": 1,
                "BootSectorFile": 2,
                "CustomReactOS%u%u%u%u%u%u": 1,
                "CustomLinux%u%u%u%u%u%u": 1,
                "Custom Linux Setup": 1,
                "Boot Sector File": 1,
                "ReactOS": 1,
                "Please choose a boot method:": 1,
                "The system will now reboot.": 1,
                "Press ENTER to boot your custom boot setup.": 1,
                "Enter the options you want passed to the kernel.": 1,
                "/DEBUG /DEBUGPORT=COM1 /BAUDRATE=115200": 1,
                "/FASTDETECT /SOS /NOGUIBOOT": 1,
                "/BASEVIDEO /MAXMEM=64": 1,
                "/KERNEL=NTKRNLMP.EXE /HAL=HALMPS.DLL": 1,
                "Enter the path to your ReactOS system directory.": 1,
                "\\REACTOS": 1,
                "Enter the Linux kernel command line.": 1,
                "root=/dev/hda1": 1,
                "root=/dev/fd0 read-only": 1,
                "root=/dev/sdb1 init=/sbin/init": 1,
                "Enter the initrd image path.": 1,
                "/initrd.gz": 1,
                "/boot/root.img.gz": 1,
                "Leave blank for no initial ram disk.": 1,
                "Enter the Linux kernel image path.": 1,
                "/vmlinuz": 1,
                "/boot/vmlinuz-2.4.18": 1,
                "Enter the boot sector file path.": 1,
                "\\BOOTSECT.DOS": 1,
                "/boot/bootsect.dos": 1,
                "Enter the boot partition.": 1,
                "Enter 0 for the active (bootable) partition.": 1,
                "Enter the boot drive.": 1,
                "fd0 - first floppy drive": 1,
                "hd0 - first hard drive": 1,
                "hd1 - second hard drive": 1,
                "cd0 - first CD-ROM drive.": 1,
                "BIOS drive numbers may also be used:": 1,
                "0 - first floppy drive": 1,
                "0x80 - first hard drive": 1,
                "0x81 - second hard drive": 1,
                "DriveMap": 1,
                "Max DriveMap count exceeded in section [%s]:": 1,
                "%s=%s": 2,
                "Error in DriveMap setting in section [%s]:": 1,
                "Mapping BIOS drive 0x%x to drive 0x%x": 1,
                "../../boot/freeldr/freeldr/arch/i386/drivemap.c": 1,
                "Installing Int13 drive map for %d drives.": 1,
                "Removing any previously installed Int13 drive map.": 1,
                "DetectHardware()": 2,
                "../../boot/freeldr/freeldr/arch/i386/hardware.c": 1,
                "Failed to allocate resource descriptor": 4,
                "Disk %x: %u Cylinders  %u Heads  %u Sectors  %u Bytes": 2,
                "PnP-BIOS not supported": 1,
                "PnP-BIOS supported": 1,
                "Signature '%c%c%c%c'": 1,
                "PnP-BIOS function 'Get Number of System Device Nodes' not supported": 1,
                "PnP-BIOS failed to enumerate device nodes": 1,
                "MaxNodeSize %u  NodeCount %u": 1,
                "Estimated buffer size %u": 1,
                "Node: %u  Size %u (0x%x)": 1,
                "Buffer too small!": 1,
                "Real buffer size: %u": 1,
                "Resource size: %u": 1,
                "PNP BIOS": 1,
                "Created key: DiskController\\0": 2,
                "Failed to allocate a full resource descriptor": 2,
                "Reading disk geometry failed": 2,
                "Floppy count: %u": 1,
                "FLOPPY%d": 1,
                "DetectSerialPorts()": 1,
                "Found COM%u port at 0x%x": 1,
                "COM%ld": 1,
                "DetectSerialPointerPeripheral()": 1,
                "Mouse data: %x %x %x %x": 1,
                "Microsoft Mouse with 3-buttons detected": 1,
                "Microsoft Wheel Mouse detected": 1,
                "Microsoft Mouse with 2-buttons detected": 1,
                "PnP ID length: %u": 1,
                "PnP ID string: %s": 1,
                "Identifier string: %s": 1,
                "Created key: PointerPeripheral\\0": 1,
                "DetectParallelPorts() called": 1,
                "Parallel port %u: %x": 1,
                "PARALLEL%ld": 1,
                "DetectParallelPorts() done": 1,
                "Created key: KeyboardController\\0": 1,
                "PCAT_ENHANCED": 1,
                "Created key: KeyboardPeripheral\\0": 1,
                "Detected PS2 port": 1,
                "Created key: PointerController\\0": 1,
                "Detected PS2 mouse": 1,
                "MICROSOFT PS2 MOUSE": 1,
                "VESA version %c.%c": 1,
                "VESA not supported": 1,
                "Created key: DisplayController\\0": 1,
                "DetectHardware() Done": 2,
                "RSD PTR ": 1,
                "ACPI supported": 1,
                "../../boot/freeldr/freeldr/arch/i386/hwacpi.c": 1,
                "ACPI not supported": 1,
                "RSDT %p, data size %x": 1,
                "ACPI BIOS": 1,
                "Found APM BIOS": 1,
                "../../boot/freeldr/freeldr/arch/i386/hwapm.c": 1,
                "AH: %x": 1,
                "AL: %x": 2,
                "BH: %x": 2,
                "BL: %x": 2,
                "CX: %x": 1,
                "No APM BIOS found": 1,
                "Reading MBR failed": 2,
                "../../boot/freeldr/freeldr/arch/i386/hwdisk.c": 1,
                "Signature: %x": 2,
                "Checksum: %x": 2,
                "multi(0)disk(0)rdisk(%lu)": 2,
                "multi(0)disk(0)rdisk(%u)partition(0)": 2,
                "multi(0)disk(0)rdisk(%u)partition(%lu)": 2,
                "Identifier: %s": 2,
                "BIOS reports success for disk %d but data didn't change": 2,
                "BIOS reports %d harddisk%s": 2,
                "0123456789abcdef": 1,
                "Found PCI bios": 1,
                "../../boot/freeldr/freeldr/arch/i386/hwpci.c": 1,
                "CL: %x": 1,
                "No PCI bios found": 1,
                "PCI BIOS": 1,
                "Found signature": 1,
                "Invalid routing table": 1,
                "Valid checksum": 1,
                "Table size: %u": 1,
                "PCI Real-mode IRQ Routing Table": 1,
                "Frames:": 1,
                "An error occured in FreeLoader": 1,
                "FreeLoader v3.0": 1,
                "Report this error to the ReactOS Development mailing list <ros-dev@reactos.org>": 1,
                "0x%02lx: %s": 1,
                "EAX: %.8lx        ESP: %.8lx        CR0: %.8lx        DR0: %.8lx": 1,
                "EBX: %.8lx        EBP: %.8lx        CR1: ????????        DR1: %.8lx": 1,
                "ECX: %.8lx        ESI: %.8lx        CR2: %.8lx        DR2: %.8lx": 1,
                "EDX: %.8lx        EDI: %.8lx        CR3: %.8lx        DR3: %.8lx": 1,
                "                                                               DR6: %.8lx": 1,
                "                                                               DR7: %.8lx": 1,
                "CS: %.4lx        EIP: %.8lx": 1,
                "DS: %.4lx        ERROR CODE: %.8lx": 1,
                "ES: %.4lx        EFLAGS: %.8lx": 1,
                "FS: %.4lx        GDTR Base: %.8lx Limit: %.4x": 1,
                "GS: %.4lx        IDTR Base: %.8lx Limit: %.4x": 1,
                "SS: %.4lx        LDTR: %.4lx TR: %.4lx": 1,
                "Instructionstream: %.2x %.2x %.2x %.2x %.2x %.2x %.2x %.2x ": 1,
                "A problem has been detected and FreeLoader boot has been aborted.": 1,
                "%ld: %s": 1,
                "Location: %s:%ld": 1,
                "Bug Information:": 1,
                "    %p": 5,
                "Exception 00: DIVIDE BY ZERO": 1,
                "Exception 01: DEBUG EXCEPTION": 1,
                "Exception 02: NON-MASKABLE INTERRUPT EXCEPTION": 1,
                "Exception 03: BREAKPOINT (INT 3)": 1,
                "Exception 04: OVERFLOW": 1,
                "Exception 05: BOUND EXCEPTION": 1,
                "Exception 06: INVALID OPCODE": 1,
                "Exception 07: FPU NOT AVAILABLE": 1,
                "Exception 08: DOUBLE FAULT": 1,
                "Exception 09: COPROCESSOR SEGMENT OVERRUN": 1,
                "Exception 0A: INVALID TSS": 1,
                "Exception 0B: SEGMENT NOT PRESENT": 1,
                "Exception 0C: STACK EXCEPTION": 1,
                "Exception 0D: GENERAL PROTECTION FAULT": 1,
                "Exception 0E: PAGE FAULT": 1,
                "Exception 0F: Reserved": 1,
                "Exception 10: COPROCESSOR ERROR": 1,
                "Exception 11: ALIGNMENT CHECK": 1,
                "Exception 12: MACHINE CHECK": 1,
                "DiskResetController(0x%x) DISK OPERATION FAILED -- RESETTING CONTROLLER": 1,
                "../../boot/freeldr/freeldr/arch/i386/i386disk.c": 1,
                "PcDiskInt13ExtensionsSupported()": 1,
                "Using cached value %s for drive 0x%x": 1,
                "Suspicious API subset support bitmap 0x%x on device 0x%lx": 1,
                "DiskGetExtendedDriveParameters()": 1,
                "size of buffer:                          %x": 1,
                "information flags:                       %x": 1,
                "number of physical cylinders on drive:   %u": 1,
                "number of physical heads on drive:       %u": 1,
                "number of physical sectors per track:    %u": 1,
                "total number of sectors on drive:        %I64u": 1,
                "bytes per sector:                        %u": 1,
                "EED configuration parameters:            %x:%x": 1,
                "SpecPtr:                                 %x": 1,
                "physical I/O port base address:          %x": 1,
                "disk-drive control port address:         %x": 1,
                "drive flags:                             %x": 1,
                "proprietary information:                 %x": 1,
                "IRQ for drive:                           %u": 1,
                "sector count for multi-sector transfers: %u": 1,
                "DMA control:                             %x": 1,
                "programmed I/O control:                  %x": 1,
                "drive options:                           %x": 1,
                "signature:                             %x": 1,
                "BiosIsVesaSupported()": 1,
                "../../boot/freeldr/freeldr/arch/i386/i386vid.c": 1,
                "AL = 0x%x": 1,
                "AH = 0x%x": 1,
                "VESA BIOS call failed": 1,
                "Supported.": 1,
                "SvgaInfo->Signature[4] = %c%c%c%c": 1,
                "SvgaInfo->VesaVersion = v%d.%d": 1,
                "SvgaInfo->OemNamePtr = 0x%x": 1,
                "SvgaInfo->Capabilities = 0x%x": 1,
                "SvgaInfo->VideoMemory = %dK": 1,
                "---VBE v2.0 ---": 1,
                "SvgaInfo->OemSoftwareVersion = v%d.%d": 1,
                "SvgaInfo->VendorNamePtr = 0x%x": 1,
                "SvgaInfo->ProductNamePtr = 0x%x": 1,
                "SvgaInfo->ProductRevisionStringPtr = 0x%x": 1,
                "SvgaInfo->VBE/AF Version = 0x%x (BCD WORD)": 1,
                "Bad signature in VESA information (%c%c%c%c)": 1,
                "Boot sector file not specified for selected OS!": 1,
                "Unable to read boot sector.": 1,
                "Booting...": 1,
                "Boot drive not specified for selected OS!": 1,
                "Boot partition not specified for selected OS!": 1,
                "Unable to read partition's boot sector.": 1,
                "Unable to read boot sector": 1,
                "PcDiskResetController(0x%x) DISK OPERATION FAILED -- RESETTING CONTROLLER": 1,
                "../../boot/freeldr/freeldr/arch/i386/pcdisk.c": 1,
                "PcDiskReadLogicalSectors() DriveNumber: 0x%x SectorNumber: %I64d SectorCount: %d Buffer: 0x%x": 1,
                "Using Int 13 Extensions for read. DiskInt13ExtensionsSupported(%d) = %s": 1,
                "PcDiskReadLogicalSectorsLBA() DriveNumber: 0x%x SectorNumber: %I64d SectorCount: %d Buffer: 0x%x": 1,
                "((ULONG_PTR)Buffer) <= 0xFFFFF": 1,
                "Packet->LBABlockCount == SectorCount": 1,
                "Disk Read Failed in LBA mode: %x (DriveNumber: 0x%x SectorNumber: %I64d SectorCount: %d)": 1,
                "PcDiskReadLogicalSectorsCHS()": 1,
                "Disk read exceeds drive geometry limits.": 1,
                "Disk Read Failed in CHS mode, after retrying 3 times: %x": 1,
                "DiskGetDriveGeometry()": 1,
                "../../boot/freeldr/freeldr/arch/i386/pcmem.c": 1,
                "PcBiosMapCount == 0": 1,
                "GetBiosMemoryMap()": 1,
                "Memory Map Entry %d": 1,
                "Int15h AX=E820h": 1,
                "EAX = 0x%x": 1,
                "EBX = 0x%x": 1,
                "ECX = 0x%x": 1,
                "CF set = %s": 2,
                "BaseAddress: 0x%llx": 1,
                "Length: 0x%llx": 1,
                "Type: 0x%lx": 1,
                "Reserved: 0x%lx": 1,
                "End Of System Memory Map!": 1,
                "GetExtendedMemoryConfiguration()": 1,
                "Int15h AX=E801h": 1,
                "AX = 0x%x": 2,
                "BX = 0x%x": 1,
                "CX = 0x%x": 1,
                "DX = 0x%x": 1,
                "Int15h AH=88h": 1,
                "Int15h Failed": 1,
                "CMOS reports: 0x%x": 1,
                "GetConventionalMemorySize()": 1,
                "Int12h": 1,
                "Dumping resulting memory map:": 1,
                "BasePage=0x%lx, PageCount=0x%lx, Type=%s": 1,
                "../../boot/freeldr/freeldr/arch/i386/pcvideo.c": 1,
                "BiosVesaGetSVGAModeInformation() mode 0x%x": 1,
                "ModeAttributes = 0x%x": 1,
                "WindowAttributesA = 0x%x": 1,
                "WindowAttributesB = 0x%x": 1,
                "WindowGranularity = %dKB": 1,
                "WindowSize = %dKB": 1,
                "WindowAStartSegment = 0x%x": 1,
                "WindowBStartSegment = 0x%x": 1,
                "WindowPositioningFunction = 0x%x": 1,
                "BytesPerScanLine = %d": 1,
                "WidthInPixels = %d": 1,
                "HeightInPixels = %d": 1,
                "CharacterWidthInPixels = %d": 1,
                "CharacterHeightInPixels = %d": 1,
                "NumberOfMemoryPlanes = %d": 1,
                "BitsPerPixel = %d": 1,
                "NumberOfBanks = %d": 1,
                "MemoryModel = %d": 1,
                "BankSize = %d": 1,
                "NumberOfImagePlanes = %d": 1,
                "---VBE v1.2+ ---": 1,
                "RedMaskSize = %d": 1,
                "RedMaskPosition = %d": 1,
                "GreenMaskSize = %d": 1,
                "GreenMaskPosition = %d": 1,
                "BlueMaskSize = %d": 1,
                "BlueMaskPosition = %d": 1,
                "ReservedMaskSize = %d": 1,
                "ReservedMaskPosition = %d": 1,
                "CGA or other display adapter detected.": 1,
                "Using 80x25 text mode.": 1,
                "EGA display adapter detected.": 1,
                "VGA display adapter detected.": 1,
                "NORMAL_VGA": 1,
                "EXTENDED_VGA": 1,
                "Error: unable to set video display mode 0x%x": 1,
                "Defaulting to 80x25 text mode.": 1,
                "Press any key to continue.": 1,
                "PcVideoCopyOffScreenBufferToVRAM": 1,
                "READ:DRV=%d:LBA=1:BLK=%d:SC=0x%x:CM=0x%x": 1,
                "../../boot/freeldr/freeldr/arch/i386/xboxdisk.c": 1,
                "READ:DRV=%d:LBA=0:CH=0x%x:CL=0x%x:HD=0x%x:SN=0x%x:SC=0x%x:CM=0x%x": 1,
                "Buffer size exceeded!": 1,
                "Read %lu sectors of junk!": 1,
                "status=0x%x": 1,
                "waited %d usecs for busy to clear": 1,
                "Drive is BUSY for too long": 1,
                "Invalid drive number": 1,
                "48bit LBA required but not implemented": 1,
                "XboxDiskPolledRead() failed": 1,
                "BytesPerSector %d": 1,
                "Cylinders %d": 1,
                "Heads %d": 1,
                "Sectors %d": 1,
                "../../boot/freeldr/freeldr/arch/i386/xboxhw.c": 1,
                "0123456789ABCDEF": 1,
                "NumPageTables = %d": 1,
                "../../boot/freeldr/freeldr/arch/i386/winldr.c": 1,
                "There was a problem allocating two adjacent blocks of memory!": 1,
                "Impossible to allocate memory block for page tables!": 1,
                "WARNING! Entry: %X > 1023": 1,
                "MempSetupPaging: SP 0x%X, Number: 0x%X, Kernel: %s": 1,
                "xxx already mapped ": 1,
                "Local APIC detected at address 0x%x": 1,
                "HalPageTable: 0x%X": 1,
                "*ExtendedBIOSDataArea = 0x%lx": 1,
                "Couldn't get address of extended BIOS data area": 1,
                "Can't allocate PCR": 1,
                "Can't allocate pages for GDT+IDT!": 1,
                "(%s:%d) Fatal Error in %s: MempAllocatePageTables failed!": 1,
                "GDtIdt %p, Pcr %p, Tss 0x%08X": 1,
                "0x%04X | ": 1,
                "0x%08X ": 1,
                "WinLdrSetupMachineDependent": 1,
                "_UUID_": 1,
                "../../boot/freeldr/freeldr/windows/headless.c": 1,
                "LoaderRedirectionInformation.IsMMIODevice == FALSE": 1,
                "/redirect=": 1,
                "usebiossettings": 1,
                "ACPI SRT Table Not Supported...": 1,
                "/redirectbaudrate=": 1,
                "115200": 1,
                "57600": 1,
                "19200": 1,
                "../../boot/freeldr/freeldr/disk/scsiport.c": 1,
                "!(Srb->SrbFlags & SRB_FLAGS_IS_ACTIVE)": 1,
                "Context->SectorNumber < 0xFFFFFFFF": 1,
                "ScsiPortGetPhysicalAddress(%p %p %p %p)": 1,
                "ScsiPortGetUncachedExtension(%p %p %lu)": 1,
                "SpiAllocateCommonBuffer() failed with Status = 0x%08X!": 1,
                "%spartition(0)": 1,
                "%spartition(%lu)": 1,
                "Scanning SCSI device %d.%d.%d": 1,
                "scsi(%ld)cdrom(%d)fdisk(%d)": 1,
                "scsi(%ld)disk(%d)rdisk(%d)": 1,
                "Got port at 0x%I64x, len 0x%x": 1,
                "Got memory at 0x%I64x, len 0x%x": 1,
                "Got interrupt level %d, vector %d": 1,
                "Got DMA channel %d, port %d": 1,
                "%04hx": 1,
                "Found device 0x%04hx 0x%04hx at %1lu %2lu %1lu": 1,
                "VendorId '%.*s'  DeviceId '%.*s'": 1,
                "Adapter found: buses = %d, targets = %d": 1,
                "ScsiPortReadPortUchar(%p)": 1,
                "NTBOOTDD.SYS": 1,
                "ntbootdd.sys": 1,
                "FREELDR.SYS": 1,
                "scsiport.sys": 1,
                "ScsiPortCompleteRequest": 2,
                "ScsiPortFlushDma": 2,
                "ScsiPortGetDeviceBase": 2,
                "ScsiPortGetLogicalUnit": 2,
                "ScsiPortGetSrb": 2,
                "SpiAllocateCommonBuffer": 1,
                "ScsiPortGetVirtualAddress": 2,
                "DiskOpen": 1,
                "ScsiPortIoMapTransfer": 2,
                "ScsiPortLogError": 2,
                "ScsiPortNotification": 2,
                "ScsiPortReadRegisterBufferUchar": 2,
                "ScsiPortReadRegisterBufferUlong": 2,
                "ScsiPortReadRegisterBufferUshort": 2,
                "ScsiPortSetBusDataByOffset": 2,
                "ScsiPortValidateRange": 2,
                "ScsiPortWriteRegisterBufferUchar": 2,
                "ScsiPortWriteRegisterBufferUlong": 2,
                "ScsiPortWriteRegisterBufferUshort": 2,
                "../../hal/halx86/legacy/bus/pcibus.c": 1,
                "(%s:%d) WARNING: PCI Slot Resource Assignment is FOOBAR": 1,
                "(%s:%d) DbgPrint() failed!": 9,
                "Descriptor == (*AllocatedResources)->List[0].PartialResourceList.PartialDescriptors + ResourceCount": 1,
                "ERROR:  %s at %s:%d is UNIMPLEMENTED!": 2,
                "(%s:%d) Unimplemented!": 1,
                "NTDDK: Pageable code called at IRQL > APC_LEVEL (%d)": 2,
                "You have implemented the KD routines for searching PCI debuggerdevices, but you have forgotten to implement this routine": 1,
                "(%s:%d) HAL: No PCI Resource Adjustment done! Hardware may malfunction": 1,
                "HAL: Unknown PCI type": 1,
                "HalpPCIPin2ISALine": 1,
                "HalpPCIISALine2Pin": 1,
                "HalpRegisterPciDebuggingDeviceInfo": 1,
                "../../hal/halx86/legacy/bus/bushndlr.c": 1,
                "(%s:%d) STUB GetSetBusData": 1,
                "(%s:%d) STUB Adjustment": 1,
                "(%s:%d) STUB Assignment": 1,
                "Bus->ReferenceCount != 0": 1,
                "../../hal/halx86/legacy/bussupp.c": 1,
                "HalpBusType == MACHINE_TYPE_ISA": 1,
                "(%s:%d) Slot assignment for %d on bus %u": 1,
                "(%s:%d) No translator Interface: %x, Bus: %x, Handler: %p!": 1,
                "(%s:%d) Returning IRQL %lx, Vector %lx for Level/Vector: %lx/%lx": 1,
                "(%s:%d) Old HAL would've returned IRQL %lx and Vector %lx": 1,
                "(*Context) || (NextBus == TRUE)": 1,
                "In I/O Space": 1,
                "In RAM": 1,
                "../../hal/halx86/legacy/bus/sysbus.c": 1,
                "(%s:%d) Translation of %I64x is %I64x %s": 1,
                "(%s:%d) Translation of %I64x failed!": 1,
                "(%s:%d) IRQ %lx is too high!": 1,
                "HalpDefaultInterruptAffinity": 1,
                "(%s:%d) Vector %lx is ALREADY IN USE!": 1,
                "../../hal/halx86/legacy/bus/cmosbus.c": 1,
                "CMOS GetData": 1,
                "CMOS SetData": 1,
                "HalpcGetCmosData": 1,
                "HalpcSetCmosData": 1,
                "../../lib/cmlib/hivecell.c": 1,
                "RegistryHive != NULL": 1,
                "FreeBlock != NULL": 1,
                "Size >= (1 << 3)": 1,
                "%s - Hive %p, CellIndex %08lx": 1,
                "CellIndex != HCELL_NIL": 1,
                "CellBlock < RegistryHive->Storage[CellType].Length": 1,
                "Block != NULL": 1,
                "(CellIndex & HCELL_TYPE_MASK) == Stable": 1,
                "RegistryHive->ReadOnly == FALSE": 1,
                "-- beginning of HvpRemoveFree trace --": 1,
                "block we are about to free: %08x": 1,
                "chosen free list index: %u": 1,
                "free list [%u]: ": 1,
                "%08x ": 1,
                "-- end of HvpRemoveFree trace --": 1,
                "%s - Hive %p, CellIndex %08lx, HoldingLock %u": 1,
                "Hive->ReadOnly == FALSE": 1,
                "Stable": 1,
                "Volatile": 1,
                "%s - Hive %p, Size %x, %s, Vicinity %08lx": 1,
                "%s - CellIndex %08lx": 1,
                "Free->Size < 0": 1,
                "%s - Hive %p, CellIndex %08lx, Size %x": 1,
                "OldCellSize > 0": 1,
                "CellRef": 1,
                "Cell != HCELL_NIL": 1,
                "ERROR: Too many references": 1,
                "CellRef->StaticCount <= STATIC_CELL_PAIR_COUNT": 1,
                "HvpGetCellHeader": 1,
                "HvMarkCellDirty": 1,
                "HvAllocateCell": 1,
                "HvReallocateCell": 1,
                "HvFreeCell": 1,
                "../../lib/cmlib/cmtools.c": 1,
                "ValueCell->Signature == CM_KEY_VALUE_SIGNATURE": 1,
                "Name != 0": 1,
                "NameLength != 0": 1,
                "../../lib/cmlib/hiveinit.c": 1,
                "(%s:%d) Verify Hive Header failed: ": 1,
                "(%s:%d)     Signature: 0x%x and not 0x%x, Major: 0x%x and not 0x%x": 1,
                "(%s:%d)     Minor: 0x%x is not >= 0x%x, Type: 0x%x and not 0x%x": 1,
                "(%s:%d)     Format: 0x%x and not 0x%x, Cluster: 0x%x and not 1": 1,
                "(%s:%d)     Sequence: 0x%x and not 0x%x, Checksum: 0x%x and not 0x%x": 1,
                "(%s:%d) Registry is corrupt: ChunkSize %lu < sizeof(HBASE_BLOCK) %lu, or HvpVerifyHiveHeader() failed": 1,
                "(%s:%d) Allocating block list failed": 1,
                "sizeof(HBASE_BLOCK) >= (HV_BLOCK_SIZE * Hive->Cluster)": 1,
                "../../lib/cmlib/cminit.c": 1,
                "(%s:%d) IndexCell->Signature %x": 1,
                "KeyCell->Signature == CM_KEY_NODE_SIGNATURE": 1,
                "../../lib/cmlib/hivebin.c": 1,
                "RegistryHive->DirtyVector.Buffer": 1,
                "../../lib/rtl/image.c": 1,
                "(%s:%d) Invalid flag combination... check for new API flags?": 1,
                "(%s:%d) Size too small": 1,
                "(%s:%d) Not an MZ file": 1,
                "(%s:%d) e_lfanew is larger than PE file": 1,
                "(%s:%d) e_lfanew is larger than 4GB": 1,
                "(%s:%d) PE is larger than 4GB": 1,
                "(%s:%d) PE offset is larger than 256MB": 1,
                "(%s:%d) PE signature missing": 1,
                "(%s:%d) Unknown/unsupported fixup type %hu.": 1,
                "(%s:%d) Address %p, Current %u, Count %u, *TypeOffset %x": 1,
                "(%s:%d) Error during call to LdrProcessRelocationBlockLongLong()!": 1,
                "../../lib/rtl/unicode.c": 1,
                "WARNING:  %s at %s:%d is UNIMPLEMENTED!": 2,
                "!(UniDest->MaximumLength & 1) && UniDest->Length <= UniDest->MaximumLength": 1,
                "!(UnicodeString->Length & 1)": 1,
                "!(UniSource->Length & 1)": 1,
                "Flags == 0": 1,
                "(%s:%d) RtlpEnsureBufferSize: stub": 1,
                "RtlMultiAppendUnicodeStringBuffer": 1,
                "RtlIsValidOemCharacter": 1,
                "../../lib/rtl/nls.c": 1,
                "(%s:%d) RtlConsoleMultiByteToUnicodeN calling RtlMultiByteToUnicodeN": 1,
                "NlsUnicodeToOemTable != NULL": 1,
                "RtlConsoleMultiByteToUnicodeN": 1,
                "(null)": 2,
                "0123456789abcdef0x": 2,
                "0123456789ABCDEF0X": 2,
                "freeldr.sys": 1,
                "ScsiDebugPrint": 1,
                "ScsiPortConvertPhysicalAddressToUlong": 1,
                "ScsiPortConvertUlongToPhysicalAddress": 1,
                "ScsiPortFreeDeviceBase": 1,
                "ScsiPortGetBusData": 1,
                "ScsiPortGetPhysicalAddress": 1,
                "ScsiPortGetUncachedExtension": 1,
                "ScsiPortInitialize": 1,
                "ScsiPortMoveMemory": 1,
                "ScsiPortReadPortBufferUchar": 1,
                "ScsiPortReadPortBufferUlong": 1,
                "ScsiPortReadPortBufferUshort": 1,
                "ScsiPortReadPortUchar": 1,
                "ScsiPortReadPortUlong": 1,
                "ScsiPortReadPortUshort": 1,
                "ScsiPortReadRegisterUchar": 1,
                "ScsiPortReadRegisterUlong": 1,
                "ScsiPortReadRegisterUshort": 1,
                "ScsiPortStallExecution": 1,
                "ScsiPortWritePortBufferUchar": 1,
                "ScsiPortWritePortBufferUlong": 1,
                "ScsiPortWritePortBufferUshort": 1,
                "ScsiPortWritePortUchar": 1,
                "ScsiPortWritePortUlong": 1,
                "ScsiPortWritePortUshort": 1,
                "ScsiPortWriteRegisterUchar": 1,
                "ScsiPortWriteRegisterUlong": 1,
                "ScsiPortWriteRegisterUshort": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-r-- name=.edata": 1,
                "perm=m-rw- name=.bss": 1,
                "type=program": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiDebugPrint": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortCompleteRequest": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortConvertPhysicalAddressToUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortConvertUlongToPhysicalAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortFlushDma": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortFreeDeviceBase": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortGetBusData": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortGetDeviceBase": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortGetLogicalUnit": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortGetPhysicalAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortGetSrb": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortGetUncachedExtension": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortGetVirtualAddress": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortInitialize": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortIoMapTransfer": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortLogError": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortMoveMemory": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortNotification": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortReadPortBufferUchar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortReadPortBufferUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortReadPortBufferUshort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortReadPortUchar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortReadPortUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortReadPortUshort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortReadRegisterBufferUchar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortReadRegisterBufferUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortReadRegisterBufferUshort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortReadRegisterUchar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortReadRegisterUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortReadRegisterUshort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortSetBusDataByOffset": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortStallExecution": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortValidateRange": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortWritePortBufferUchar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortWritePortBufferUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortWritePortBufferUshort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortWritePortUchar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortWritePortUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortWritePortUshort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortWriteRegisterBufferUchar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortWriteRegisterBufferUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortWriteRegisterBufferUshort": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortWriteRegisterUchar": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortWriteRegisterUlong": 1,
                "fwd=NONE  bind=GLOBAL type=FUNC name=freeldr.sys_ScsiPortWriteRegisterUshort": 1,
                "arch     x86": 1,
                "binsz    307200": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x0005003f": 1,
                "compiled Tue Jul 15 17:22:22 2014": 1,
                "crypto   false": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x0004e636": 1,
                "linenum  false": 1,
                "lsyms    false": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       native": 1,
                "overlay  false": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   true": 1,
                "signed   false": 1,
                "static   true": 1,
                "stripped true": 1,
                "subsys   Native": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0x3": 1,
                "TimeDateStamp : 0x53c5553e": 1,
                "PointerToSymbolTable : 0x0": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x2103": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x2": 1,
                "MinorLinkerVersion : 0x17": 1,
                "SizeOfCode : 0x49000": 1,
                "SizeOfInitializedData : 0x4a000": 1,
                "SizeOfUninitializedData : 0xb000": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0x0": 1,
                "ImageBase : 0x10000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x1000": 1,
                "MajorOperatingSystemVersion : 0x4": 1,
                "MinorOperatingSystemVersion : 0x0": 1,
                "MajorImageVersion : 0x1": 1,
                "MinorImageVersion : 0x0": 1,
                "MajorSubsystemVersion : 0x4": 1,
                "MinorSubsystemVersion : 0x0": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x55000": 1,
                "SizeOfHeaders : 0x1000": 1,
                "CheckSum : 0x4e636": 1,
                "Subsystem : 0x1": 1,
                "DllCharacteristics : 0x0": 1,
                "SizeOfStackReserve : 0x200000": 1,
                "SizeOfStackCommit : 0x1000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_EXPORT": 1,
                "VirtualAddress : 0x4a000": 1,
                "Size : 0x678": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x0": 2,
                "Size : 0xffff": 2,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "307200": 1,
                "=== VS_VERSIONINFO ===": 1
            }
        }
    ]
}