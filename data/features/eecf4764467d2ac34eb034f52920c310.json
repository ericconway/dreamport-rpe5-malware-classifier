{
    "filepath": "/corpus/benign/cmd.exe",
    "fileinfo": {
        "classification": "benign",
        "author": null,
        "campaign": null,
        "md5": "eecf4764467d2ac34eb034f52920c310"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "movb $-, %bh;jl - <.text+>;decl %ecx;testb %bh, (%edx,%ebp,);xchgb %bh, -(%ebp,%eax,)": 1,
                "jl - <.text+>;decl %ecx;testb %bh, (%edx,%ebp,);xchgb %bh, -(%ebp,%eax,);cmpb $-, (%ecx,%ebp,)": 1,
                "subb %al, -(%ecx);jl  <.text+>;outsl (%esi), %dx;cmpl $-, -(%edi,%eax);jl  <.text+>": 1,
                "jl - <.text+>;cmpl $, %es:-(%eax,%eax,);xchgl %ecx, %eax;jl - <.text+>;adcl %eax, -(%ecx)": 1,
                "adcl %eax, -(%ecx);jl  <.text+>;movb $-, %bl;jl - <.text+>;lahf": 1,
                "outl %eax, $;jl  <.text+>;pushl %cs;cmpl $, -(%ebp,%esi,);nop": 1,
                "cmpl $, -(%ecx);cmpb $-, (%esi,%ecx,);jl - <.text+>;cmpb $-, (%ebx,%edx);jl - <.text+>": 1,
                "aaa;cmpl $-, -(%ecx,%eax);jl - <.text+>;wait;cmpb $-, -(%edx,%ebx,)": 1,
                "xchgl %edi, (%edx,%ebp);xchgl %edi, (%esp,%ecx,);xchgl %edi, -(%ebx,%ecx,);cmpl $, (%ecx,%ecx,);cmpl $, -(%ecx)": 1,
                "ldsl -(%ebp), %ecx;salc;retl;decl %ebp;popfl": 1,
                "decl %ebp;outl %eax, $;retl $-;addl $, %ebx;decl %ebp": 1,
                "rorb $, -(%ebp);retl $;sahf;retl $;into": 1,
                "decl %ebp;pushl $;retl;decl %ebp;decl %ebp": 1,
                "retl;decl %ebp;movb $-, %bh;rorb $, (%ebp);rorl $, (%ebp)": 1,
                "rorb $, (%ebp);rorl $, (%ebp);retl $;sti;retl $": 1,
                "rorb $, -(%ebp);rorl $, (%ebp);rorl $, (%ebp);retl;decl %ebp": 1,
                "pushfl;popal;retl $-;popl %esp;retl $-": 1,
                "pushl %ecx;lcalll $, $;xchgl %ebp, %eax;xchgl %ecx, %eax;incl %ecx": 1,
                "nop;nop;nop;movl %edi, %edi;pushl %ebp": 335,
                "popl %ebp;retl $;nop;nop;nop": 100,
                "jne  <.text+>;movl %edi, %eax;popl %edi;popl %ebp;retl $": 1,
                "cmpl $, (%ebp);je  <.text+>;movl (%esi), %eax;testl %eax, %eax;jne  <.text+>": 1,
                "cmpl $, (%esi);je  <.text+>;pushl (%ebp);pushl %esi;calll  <.text+>": 1,
                "nop;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ebx": 25,
                "movl %ecx, %fs:;popl %ecx;popl %edi;popl %esi;popl %ebx": 1,
                "popl %esi;popl %ebx;leave;pushl %ecx;retl": 1,
                "popl %ecx;cmpl $, %eax;je  <.text+>;pushl %edi;calll  <.text+>": 1,
                "xorl %esi, %esi;cmpl %ebx, ;ja  <.text+>;pushl %esi;calll  <.text+>": 1,
                "pushl %esi;pushl %edi;pushl (%ebp);pushl (%ebp);calll *": 1,
                "pushl (%ebp);calll *;movl , %esi;movl %eax, %edi;calll *%esi": 1,
                "andl $, %eax;cmpb $, %al;jne  <.text+>;pushl $;pushl $": 1,
                "testl %eax, %eax;je  <.text+>;movl , %eax;movl %eax, %ecx;andl $, %ecx": 1,
                "nop;nop;incl %ebx;addb %cl, (%ebp);incl %esp": 2,
                "addb %al, (%ebp);popl %eax;addb %al, (%ebp);addb %al, (%eax);nop": 1,
                "addl $, %esi;pushl %esi;pushl $;calll *;pushl %eax": 1,
                "movl %eax, ;addl $, %eax;popl %esi;popl %ebp;retl $": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl (%ebp)": 6,
                "popl %ecx;leal (,%eax,), %eax;pushl %eax;calll - <.text+>;movw , %di": 1,
                "jne - <.text+>;andw $, -(%ebp,%ebx,);xorl %eax, %eax;incl %eax;movl %eax, -(%ebp)": 1,
                "addl $, -(%ebp);movw %ax, (%ecx);cmpw $, (%esi);je  <.text+>;andl $, -(%ebp)": 1,
                "je  <.text+>;cmpw $, %ax;jne  <.text+>;xorl %eax, %eax;cmpw %ax, (%esi)": 1,
                "pushl %eax;pushl -(%ebp);calll - <.text+>;popl %edi;popl %ebx": 1,
                "calll - <.text+>;popl %edi;popl %ebx;movl -(%ebp), %ecx;popl %esi": 1,
                "leave;retl $;nop;nop;subl %eax, (%eax)": 1,
                "jne  <.text+>;andl $, -(%ebp);addl $, -(%ebp);jmp - <.text+>;nop": 1,
                "je  <.text+>;movl (%esi), %eax;testl %eax, %eax;je  <.text+>;pushl %eax": 2,
                "pushl %eax;pushl %ebx;calll *;popl %ecx;popl %ecx": 4,
                "testl %eax, %eax;je  <.text+>;movl (%esi), %eax;cmpw $, (%eax);jne  <.text+>": 1,
                "je  <.text+>;pushl %esi;pushl %ebx;calll *;popl %ecx": 2,
                "popl %ecx;andw $, (%ebx,%eax,);movl (%ebp), %eax;popl %edi;popl %esi": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %ecx;pushl %ecx": 16,
                "xorl %edi, %edi;cmpl %edi, (%ebp);je  <.text+>;cmpl %edi, ;jne  <.text+>": 1,
                "je  <.text+>;cmpl %edi, ;jne  <.text+>;cmpl %edi, ;je  <.text+>": 1,
                "retl $;nop;addb %ch, %cs:(%esi);addb %al, (%eax);addb %dl, (%eax)": 1,
                "calll *%esi;pushl $;movl %eax, %ebx;calll *%esi;leal (%ebp), %eax": 1,
                "calll *;pushl %ebx;movl %eax, %edi;calll *%esi;testl %edi, %edi": 1,
                "calll *;movl (%ebp), %edi;orl $-, %esi;cmpl %esi, %eax;movl %eax, (%edi)": 1,
                "movl %eax, ;popl %edi;popl %esi;movb %bl, %al;popl %ebx": 1,
                "testl %eax, %eax;je  <.text+>;andl $, ;movb $, %bl;cmpl %esi, (%edi)": 1,
                "testl %eax, %eax;pushl %edi;movl (%ebp), %edi;jbe  <.text+>;movl , %edx": 1,
                "pushl $;movl %eax, ;calll *%esi;pushl %eax;calll *": 1,
                "movl %esp, %ebp;pushl %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, (%ebp)": 1,
                "pushl %esi;pushl %edi;xorl %edi, %edi;cmpl %edi, (%ebp);jl  <.text+>": 1,
                "pushl -(%esi);pushl (%ebp);calll *;testl %eax, %eax;popl %ecx": 1,
                "xorb %al, %al;pushl %edi;movb $, -(%ebp);xorl %ebx, %ebx;movl (%esi), %ecx": 1,
                "cmpw $, %di;je  <.text+>;testw %di, %di;je  <.text+>;cmpb $, -(%ebp)": 1,
                "je  <.text+>;cmpb $, -(%ebp);jne  <.text+>;testb %al, %al;jne  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;cmpl $-, %eax;je  <.text+>": 1,
                "movl %eax, %edi;cmpl $-, %edi;movl %edi, -(%ebp);jne  <.text+>;pushl -(%ebp)": 1,
                "jne  <.text+>;cmpb $, -(%ebp);jne  <.text+>;pushl %edi;calll *": 1,
                "testl %eax, %eax;popl %ecx;jne  <.text+>;pushl %edi;pushl $": 1,
                "incl %ebx;movb $, -(%ebp);cmpb $, -(%ebp);je - <.text+>;movl (%esi), %eax": 1,
                "calll - <.text+>;testl %eax, %eax;je - <.text+>;cmpb $, ;je - <.text+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;leal (%eax,%eax,), %eax;movl (,%eax,), %eax;popl %ebp": 1,
                "movl %eax, ;popl %ebp;retl $;nop;nop": 16,
                "calll  <.text+>;cmpl $, %eax;jne  <.text+>;movl %ebx, ;cmpb %bl, ": 1,
                "pushl $;movl $, ;calll  <.text+>;andl $, ;cmpl $, ": 1,
                "calll  <.text+>;decl ;cmpl $, %ebx;popl %ebx;je  <.text+>": 1,
                "cmpl $, %ebx;popl %ebx;je  <.text+>;popl %ebp;retl $": 1,
                "je  <.text+>;testb $, (%ebp);movl , %eax;movl %eax, ;movl %esi, -(%ebp)": 1,
                "incl %ecx;incl %ecx;movl %ecx, ;retl;calll  <.text+>": 1,
                "cmpl $, %eax;movl $, %edi;jne  <.text+>;andw $, ;pushl $": 1,
                "pushl %ecx;leal (%esp), %ecx;subl $, %ecx;subl $, %eax;testl %eax, (%ecx)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl (%ebp);pushl (%ebp)": 5,
                "movl $, %eax;calll - <.text+>;movl , %eax;pushl %esi;movl %eax, -(%ebp)": 1,
                "movl %esi, %eax;pushl %eax;calll *;popl %ecx;popl %ecx": 1,
                "movl %edi, -(%ebp);movl %edi, -(%ebp);je  <.text+>;pushl %ebx;pushl $": 1,
                "jne  <.text+>;testb $, (%esi);movl $, %eax;jne  <.text+>;movl $, %eax": 1,
                "movl $, %eax;jne  <.text+>;movl $, %eax;xorl %ecx, %ecx;movw (%edi), %cx": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;pushl %edi;calll - <.text+>": 1,
                "cmpw $, %ax;je  <.text+>;testb $, (%esi);je - <.text+>;xorl %eax, %eax": 1,
                "testb $, %al;je  <.text+>;andl $-, (%esi);testb $, (%esi);je - <.text+>": 1,
                "pushl %esi;movl $, %esi;jne  <.text+>;cmpl %esi, ;jne  <.text+>": 1,
                "pushl %esi;pushl %edi;leal -(%ebp), %eax;xorl %ebx, %ebx;pushl %eax": 1,
                "leal -(%ebp), %eax;xorl %ebx, %ebx;pushl %eax;movl %ebx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "je  <.text+>;movl (%eax), %ecx;xorl %edx, %edx;incl %edx;shll %cl, %edx": 1,
                "movl (%eax), %eax;jmp - <.text+>;popl %edi;movl %esi, %eax;popl %esi": 1,
                "jmp - <.text+>;popl %edi;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "popl %edi;movl %esi, %eax;popl %esi;popl %ebx;leave": 4,
                "leave;retl;nop;nop;nop": 10,
                "pushl %ebx;pushl %esi;xorl %esi, %esi;pushl %edi;pushl %esi": 1,
                "leal -(%ebp), %ebx;calll  <.text+>;movl %eax, %edi;calll  <.text+>;testl %eax, %eax": 1,
                "je  <.text+>;pushl %ebx;calll  <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "calll  <.text+>;testl %eax, %eax;jne  <.text+>;pushl %esi;pushl %esi": 1,
                "jne  <.text+>;movl -(%ebp), %eax;testl %eax, %eax;popl %edi;popl %esi": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;calll  <.text+>;movl %eax, %esi": 1,
                "movl , %esi;pushl (%ebp);calll *%esi;testl %eax, %eax;popl %ecx": 1,
                "pushl %ebx;pushl %ebx;calll - <.text+>;movl %edi, %eax;popl %edi": 1,
                "nop;nop;nop;movl , %ecx;xorl %eax, %eax": 1,
                "nop;movl , %ecx;xorl %eax, %eax;cmpw %ax, (%ecx);setne %al": 1,
                "movl , %ecx;xorl %eax, %eax;cmpw %ax, (%ecx);setne %al;retl": 1,
                "addb %dl, -(%eax);pushl $;pushl $;pushl $;pushl $": 1,
                "retl;nop;nop;jl  <.text+>;jl  <.text+>": 1,
                "addl %ecx, %eax;shll %eax;pushl %eax;calll - <.text+>;movl %eax, %esi": 1,
                "testl %eax, %eax;je  <.text+>;pushl %eax;pushl %esi;calll *": 3,
                "popl %ebp;retl $;movl , %eax;movl %eax, %ecx;subl $, %ecx": 1,
                "jl  <.text+>;xorl %ebx, %ebx;movw -(%eax), %bx;pushl %ebx;calll *": 1,
                "jne - <.text+>;testb $, (%esi);movl $, %eax;je - <.text+>;jmp - <.text+>": 1,
                "jmp - <.text+>;movl %edi, %eax;popl %edi;popl %esi;popl %ebp": 1,
                "calll *;xorl %ecx, %ecx;incl %ecx;cmpl %eax, %ecx;movl -(%ebp), %ecx": 1,
                "movl -(%ebp), %ecx;sbbl %eax, %eax;negl %eax;calll - <.text+>;leave": 1,
                "incl %esi;incl %esi;movw (%esi), %ax;movw %ax, (%ecx);movw (%esi), %ax": 1,
                "cmpw $, (%esi);jne - <.text+>;cmpw $, (%esi);jne - <.text+>;jmp  <.text+>": 1,
                "pushl %esi;pushl $;xorl %esi, %esi;pushl %esi;movl $, %ebx": 1,
                "nop;incl %ebx;addb %cl, (%edi);pushl %eax;addb %bl, (%ecx)": 1,
                "pushl %eax;addb %bl, (%ecx);incl %ebx;addb %cl, (%ebp);incl %esp": 1,
                "je  <.text+>;pushl %esi;calll *;movl %eax, %esi;cmpl %ebx, %esi": 1,
                "movl %eax, %edi;pushl $;pushl %edi;movl %edi, (%ebp);calll - <.text+>": 1,
                "pushl %ecx;pushl %esi;pushl (%ebp);calll *;popl %ecx": 1,
                "cmpl $, %eax;jne  <.text+>;movl (%ebp), %eax;subl $, %eax;je  <.text+>": 2,
                "je  <.text+>;decl %eax;jne  <.text+>;pushl $-;calll *": 2,
                "movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll *": 3,
                "pushl %eax;pushl %esi;calll *;xorl %ecx, %ecx;incl %ecx": 1,
                "movb $, ;calll *;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;movl %eax, -(%ebp);je  <.text+>;pushl %esi": 1,
                "movl %eax, %esi;testl %esi, %esi;je  <.text+>;pushl -(%ebp);pushl %edi": 1,
                "pushl %edi;calll  <.text+>;xorl %edx, %edx;incl %edx;cmpl %edx, %eax": 1,
                "jne  <.text+>;pushl %ebx;calll - <.text+>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "testl %ebx, %ebx;je  <.text+>;pushl %esi;calll - <.text+>;pushl %esi": 1,
                "pushl %esi;pushl (%ebp);pushl (%ebp);pushl %ebx;pushl %edi": 1,
                "cmpl $, ;pushl %esi;movl (%ebp), %esi;jne  <.text+>;testl %esi, %esi": 1,
                "calll *;testl %eax, %eax;popl %ecx;je  <.text+>;pushl $": 3,
                "andl %esi, (%eax);pushl %edx;calll *;popl %ecx;popl %esi": 1,
                "movl %esp, %ebp;movl (%ebp), %ecx;xorl %eax, %eax;cmpl $, %ecx;jg  <.text+>": 1,
                "andl $, %eax;cmpl $, %eax;movl %ebx, -(%ebp);movl %edi, -(%ebp);movl $, -(%ebp)": 1,
                "pushl $;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl (%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl -(%ebp);pushl (%ebp)": 2,
                "xorl %esi, %esi;pushl %eax;movw $, -(%ebp);movw %si, -(%ebp);calll *": 1,
                "movl , %eax;movl %eax, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);movl (%ebp), %eax": 3,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);pushl $;popl %ecx;xorl %eax, %eax": 1,
                "pushl $;popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi)": 6,
                "movl %eax, -(%ebp);movl %eax, -(%ebp);movl %ebx, -(%ebp);movw %cx, -(%ebp);calll *": 1,
                "pushl -(%ebp);calll *%esi;testl %eax, %eax;je  <.text+>;movl -(%ebp), %eax": 2,
                "movl -(%ebp), %eax;cmpl %ebx, %eax;jbe  <.text+>;shrl %eax;movl %edi, %ecx": 1,
                "movw $, (%edi);incl %edi;incl %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <.text+>;movl -(%ebp), %eax;movl %eax, -(%ebp);movl $, %edi;pushl %edi": 1,
                "movl $, %edi;pushl %edi;calll - <.text+>;movl %eax, %esi;cmpl %ebx, %esi": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;jne  <.text+>;movl $, %esi;cmpl %ebx, %esi": 1,
                "pushl %eax;movl $, %esi;pushl %esi;pushl %ebx;pushl %ebx": 1,
                "pushl %ebx;calll *;pushl %eax;calll *;cmpl %ebx, %edi": 1,
                "cmpl %ebx, ;jne  <.text+>;cmpl %ebx, ;je  <.text+>;movl %ebx, -(%ebp)": 1,
                "addb %cl, (%edi);pushl %eax;addb %bl, (%ecx);addb %al, %cs:(%ebp);popl %eax": 1,
                "addb %al, %cs:(%ebp);popl %eax;addb %al, (%ebp);addb %al, (%eax);nop": 1,
                "addb %bh, %bh;xorl $, %eax;calll - <.text+>;movl %eax, ;movl %eax, -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;calll - <.text+>;cmpl $, -(%ebp)": 1,
                "calll - <.text+>;cmpl %ebx, -(%ebp);je - <.text+>;jmp  <.text+>;nop": 1,
                "movl (%ebp), %ecx;pushl %ebx;pushl %esi;movl %eax, -(%ebp);movl (%ebp), %eax": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll *;popl %ecx": 4,
                "pushl %ebx;calll - <.text+>;testl %eax, %eax;jne  <.text+>;pushl %ebx": 1,
                "leal (%eax,%eax), %eax;pushl %eax;pushl %ebx;calll - <.text+>;movl %eax, %ebx": 2,
                "andw $, (%eax);incl %eax;incl %eax;cmpl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "popl %ecx;jne  <.text+>;addl %edi, %eax;leal (%eax,%eax), %eax;pushl %eax": 1,
                "popl %ecx;movl %eax, -(%ebp);cmpb $, ;je  <.text+>;pushl $": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %edi;testl %edi, %edi;je  <.text+>;pushl %edi": 1,
                "je  <.text+>;pushl %edi;calll *;popl %ecx;movl %eax, %ebx": 1,
                "cmpw , %ax;je  <.text+>;incl %edi;incl %ebx;incl %esi": 1,
                "pushl -(%ebp);calll *;popl %ecx;popl %ecx;movl -(%ebp), %ecx": 1,
                "calll *;popl %ecx;popl %ecx;movl -(%ebp), %ecx;xorl %edx, %edx": 1,
                "popl %ecx;movl -(%ebp), %esi;pushl %esi;calll - <.text+>;testl %eax, %eax": 1,
                "jne  <.text+>;movzwl (%eax), %eax;pushl %eax;calll - <.text+>;testl %eax, %eax": 1,
                "je  <.text+>;pushl $;pushl %edi;calll *%esi;negl %eax": 1,
                "je  <.text+>;cmpw $, %ax;jne - <.text+>;jmp  <.text+>;nop": 1,
                "calll - <.text+>;movzbl %al, %ebx;testl %ebx, %ebx;jne  <.text+>;cmpl $, ": 1,
                "pushl %edi;calll *;popl %ecx;popl %ecx;jmp - <.text+>": 4,
                "pushl %ebx;pushl $;pushl -(%ebp);pushl -(%ebp);calll  <.text+>": 1,
                "jg  <.text+>;xorl %edx, %edx;incl %edx;shll %cl, %edx;leal (,%eax,), %eax": 1,
                "movl %esp, %ebp;pushl (%ebp);calll - <.text+>;cmpl $, %eax;jne  <.text+>": 1,
                "testl %esi, %esi;je  <.text+>;movl , %eax;testl %eax, %eax;je  <.text+>": 1,
                "movl %eax, (%edi);je  <.text+>;movl , %esi;incl -(%ebp);movw %bx, (%eax)": 1,
                "pushl $;calll - <.text+>;movl (%edi), %ecx;movl %eax, (%ecx);calll - <.text+>": 1,
                "addl $, %ebx;cmpl %esi, (%ebx);je - <.text+>;jmp - <.text+>;calll - <.text+>": 1,
                "movl %eax, %ebx;movw %bx, (%esi);incl %esi;incl %esi;movl %ebx, -(%ebp)": 1,
                "shll %cl, %edx;andl %edx, %eax;popl %ebp;retl $;nop": 1,
                "andl %edx, %eax;popl %ebp;retl $;nop;nop": 1,
                "movl %edi, %edi;pushl %esi;pushl %edi;movl , %edi;movl (%edi), %eax": 1,
                "movl , %edi;movl (%edi), %eax;movl (%eax), %esi;testl %esi, %esi;je  <.text+>": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %ebx": 29,
                "movl (%edi), %esi;cmpl %ebx, %esi;je  <.text+>;orl $-, %ebx;cmpl $, (%esi)": 1,
                "cmpl $, (%esi);jne  <.text+>;pushl (%esi);movl , %edi;calll *%edi": 1,
                "jne  <.text+>;pushl (%esi);movl , %edi;calll *%edi;cmpl %ebx, %eax": 1,
                "calll *%edi;cmpl %ebx, %eax;popl %ecx;je  <.text+>;pushl (%esi)": 1,
                "calll  <.text+>;cmpl %ebx, %eax;pushl (%esi);movl %eax, (%esi);je  <.text+>": 1,
                "cmpw $, (%esi);je  <.text+>;movl (%esi), %ecx;negl %ecx;sbbl %ecx, %ecx": 1,
                "addl $, %ecx;pushl %ecx;pushl %eax;calll - <.text+>;movl %eax, %edi": 1,
                "cmpl %eax, %edi;jne  <.text+>;cmpl %ebx, %edi;je  <.text+>;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;movl %edi, (%eax);movl (%esi), %esi;testl %esi, %esi;jne - <.text+>": 1,
                "movl %edi, (%eax);movl (%esi), %esi;testl %esi, %esi;jne - <.text+>;xorl %eax, %eax": 1,
                "pushl %esi;pushl (%ebp);calll *;movl %eax, %esi;cmpl $-, %esi": 2,
                "popl %ebp;retl $;decl %eax;jne - <.text+>;pushl $-": 1,
                "cmpw $, %ax;je  <.text+>;cmpw , %ax;je  <.text+>;cmpw , %ax": 2,
                "jne  <.text+>;movb $, ;leal (%esi), %eax;testl %eax, %eax;je  <.text+>": 1,
                "movl %ebx, -(%ebp);pushl %ebx;calll - <.text+>;movl %ebx, -(%ebp);leal -(%ebp), %eax": 1,
                "jge  <.text+>;movl -(%ebp), %eax;movl -(%ebp,%eax,), %eax;cmpl %ebx, %eax;jne  <.text+>": 1,
                "pushl ;pushl %eax;pushl %esi;calll - <.text+>;movl %eax, %edi": 1,
                "movl %edi, -(%ebp);cmpl %esi, %edi;je  <.text+>;cmpl $-, %edi;je  <.text+>": 1,
                "movl %eax, -(%ebp);cmpl %ebx, %eax;je - <.text+>;movl %eax, -(%ebp);jmp - <.text+>": 1,
                "calll  <.text+>;testl %eax, %eax;je - <.text+>;pushl (%ebp);calll *": 1,
                "movl , %eax;pushl %esi;movl (%ebp), %esi;movw (%esi), %cx;movl %eax, -(%ebp)": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl $;calll *": 1,
                "pushl %eax;pushl $;calll *;pushl -(%ebp);movl , %edi": 1,
                "pushl $;calll *;pushl -(%ebp);movl , %edi;calll *%edi": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %esi;movw %ax, -(%ebp);movw $, -(%ebp);movw %bx, -(%ebp)": 1,
                "calll *;xorl %ebx, %ebx;popl %ecx;popl %ecx;leal -(%ebp), %eax": 1,
                "addl $, %esp;incl %edi;incl %edi;movl %edi, %esi;jmp  <.text+>": 1,
                "calll *;cmpl $, %eax;popl %ecx;movl %eax, -(%ebp);jg  <.text+>": 1,
                "incl %eax;popl %ebx;popl %edi;movl -(%ebp), %ecx;popl %esi": 1,
                "rep  movsl (%esi), %es:(%edi);movl %eax, %ecx;andl $, %ecx;xorl %eax, %eax;rep  movsb (%esi), %es:(%edi)": 1,
                "calll - <.text+>;popl %ebp;retl $;nop;nop": 8,
                "calll *%edi;pushl %eax;calll *;movl %eax, %esi;xorl %ebx, %ebx": 1,
                "movl %eax, %esi;xorl %ebx, %ebx;cmpl %ebx, %esi;je  <.text+>;movl , %eax": 1,
                "calll *;movl %eax, %edx;cmpl %ebx, %edx;movl %edx, (%esi);je  <.text+>": 1,
                "xorl %eax, %eax;jmp - <.text+>;cmpb $, ;pushl %edi;je  <.text+>": 1,
                "pushl %edi;je  <.text+>;movl , %edi;pushl $;pushl (%ebp)": 1,
                "nop;nop;pushl %edx;addb %al, (%ecx);decl %esi": 1,
                "popl %ecx;jmpl *%eax;nop;nop;nop": 2,
                "movl (%eax), %edi;movl (%ebp), %eax;subl %ebx, %eax;sarl $, %eax;shll $, %eax": 1,
                "pushl %edi;calll *;movl %eax, %ebx;testl %ebx, %ebx;je  <.text+>": 1,
                "testl %eax, %eax;jne  <.text+>;movl %ebx, %eax;popl %edi;popl %esi": 1,
                "movl $, %ebx;pushl %ebx;pushl $;calll *%esi;movl , %edi": 1,
                "xorl %ebx, %ebx;pushl %ebx;movl %eax, ;calll *%esi;pushl %eax": 1,
                "pushl %ecx;calll *;popl %ecx;popl %ecx;cmpl %ebx, ": 1,
                "pushl $;calll *;movl , %esi;pushl $;pushl %eax": 1,
                "pushl $;pushl ;movl %eax, ;calll *%esi;pushl $": 1,
                "retl $;pushl %ebx;je  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx": 1,
                "outsl (%esi), %dx;jo  <.text+>;incl %esi;imull $, (%ebp), %ebp;addb %al, (%ebp)": 1,
                "movl $, %edi;leal -(%ebp), %eax;pushl %eax;movl -(%ebp), %eax;pushl $": 1,
                "testl %eax, %eax;jne  <.text+>;cmpl $, (%ebp);jne  <.text+>;movw -(%ebp), %ax": 3,
                "movw , %cx;pushl $;popl %edx;cmpw %dx, %cx;jne  <.text+>": 1,
                "popl %edx;cmpw %dx, %cx;jne  <.text+>;cmpw %dx, %ax;jb  <.text+>": 1,
                "cmpw %dx, %cx;jae  <.text+>;movw %cx, ;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl -(%ebp);calll *;movl -(%ebp), %esi;addl $, -(%ebp);decl -(%ebp)": 1,
                "leave;retl $;incl %ecx;addb %dh, (%ebp);je  <.text+>": 1,
                "outsl (%esi), %dx;addb %ch, (%ebp);jo  <.text+>;insb %dx, %es:(%edi);addb %ah, (%ebp)": 1,
                "addb %ah, (%ebp);incl %ebp;addb %bh, (%eax);je  <.text+>;addb %ch, %gs:(%esi)": 1,
                "addb %ch, %gs:(%esi);jae  <.text+>;imull $, (%eax), %eax;jae  <.text+>;addb %al, (%eax)": 1,
                "outsb (%esi), %dx;addb %ah, (%eax,%eax);addb %dl, (%eax);jb  <.text+>;outsl (%esi), %dx": 1,
                "decl %ecx;decl %esp;popal;outsb (%esi), %dx;jne  <.text+>": 1,
                "jne  <.text+>;addb %dl, %gs:-(%bx,%si);nop;nop;movl %edi, %edi": 1,
                "movl (%eax), %edx;movl %edx, -(%ebp);movl %fs:, %eax;movl (%eax), %ecx;movl (%esi), %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll *%ebx;cmpl $, %eax": 1,
                "jge  <.text+>;addl %ecx, -(%ebp);cmpl %edi, -(%ebp);je - <.text+>;movl %edi, (%esi)": 1,
                "pushl %ecx;pushl %ecx;pushl %esi;movl (%ebp), %esi;andl $, (%esi)": 1,
                "outsl (%esi), %dx;addb %ah, (%esi);je  <.text+>;popl %esp;addb %dl, (%edi)": 1,
                "xorb %bl, %bl;testl %eax, %eax;je  <.text+>;pushl $;xorl %eax, %eax": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;testl %eax, %eax;je  <.text+>": 1,
                "calll *;movl -(%ebp), %esi;xorl -(%ebp), %esi;calll *;xorl %eax, %esi": 1,
                "movl %eax, ;leave;retl;nop;nop": 1,
                "pushl -(%ebp);calll *;movl %eax, %edi;testl %edi, %edi;je  <.text+>": 1,
                "cmpw $, (%eax);jne  <.text+>;movl (%eax), %ecx;addl %eax, %ecx;cmpl $, (%ecx)": 1,
                "movl (%eax), %ecx;addl %eax, %ecx;cmpl $, (%ecx);jne  <.text+>;movzwl (%ecx), %eax": 1,
                "jbe  <.text+>;xorl %eax, %eax;cmpl %edi, (%ecx);setne %al;movl %eax, -(%ebp)": 1,
                "movl %ecx, (%eax);calll *;movl , %ecx;movl %ecx, (%eax);movl , %eax": 1,
                "pushl ;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "xchgl %ebp, %eax;nop;rorl -(%edx);nop;rorl -(%edx)": 1,
                "rorl -(%edx);nop;nop;nop;nop": 2,
                "movb $, -(%ebp);pushl %eax;pushl %edx;calll - <.text+>;movl %eax, %esi": 1,
                "movl , %edi;pushl %ebx;xorl %eax, %eax;leal (%esi), %ebx;movw (%ebx), %ax": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je  <.text+>;testl %ebx, %ebx;je  <.text+>": 1,
                "pushl %ebx;movl %eax, -(%ebp);calll - <.text+>;cmpl $, -(%ebp);movl %eax, -(%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;leal (%eax), %ebx;pushl $": 1,
                "calll - <.text+>;movl %eax, ;pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "pushl $;leal -(%ebp), %eax;pushl %eax;pushl ;calll *": 1,
                "movl $, %ebx;pushl %ebx;leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl $;calll *%edi;pushl $;pushl $;calll *%edi": 1,
                "calll *%edi;andl $, ;addl $, %esp;pushl %ebx;leal -(%ebp), %eax": 1,
                "jne  <.text+>;movl $, ;pushl $;movl $, %ebx;pushl %ebx": 1,
                "je  <.text+>;pushl $;pushl $;calll *;popl %ecx": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%eax), %ebx;movl (%eax), %eax;pushl %esi": 1,
                "movl %eax, (%esi);je  <.text+>;pushl $;pushl (%esi);calll - <.text+>": 1,
                "pushl (%esi);calll - <.text+>;cmpl $-, %eax;je  <.text+>;pushl (%esi)": 1,
                "pushl (%esi);calll - <.text+>;movl %edi, (%esi);cmpl %edi, (%ebx);jg  <.text+>": 1,
                "je  <.text+>;pushl %edi;pushl (%esi);calll - <.text+>;cmpl %ebx, %eax": 1,
                "movl %esi, %eax;popl %ebx;jmp - <.text+>;andl $, ;xorl %eax, %eax": 1,
                "movw , %ax;movw %ax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax": 2,
                "movl %eax, ;xorl %eax, %eax;movl %ecx, %edi;stosl %eax, %es:(%edi);stosl %eax, %es:(%edi)": 1,
                "movw (%esi), %ax;cmpw %cx, %ax;pushl %edi;je  <.text+>;movl , %edi": 1,
                "je  <.text+>;cmpl $, %ebx;je  <.text+>;pushl %esi;calll *%edi": 1,
                "leave;retl $;cmpl $, %edi;jne - <.text+>;movl $, (%esi)": 1,
                "testb $, (%esi);jne  <.text+>;movl (%ebp), %ecx;leal (%edi,%edi,), %eax;movw (,%eax,), %ax": 1,
                "movw (,%eax,), %ax;movw %ax, (%ecx);movl %edi, ;movl %edi, %eax;jmp - <.text+>": 1,
                "movl %edi, %eax;jmp - <.text+>;cmpb %al, ;je - <.text+>;jmp - <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;testl %eax, %eax;je - <.text+>": 2,
                "cmpw $, (%esi);popl %ecx;jmp - <.text+>;nop;nop": 1,
                "pushl (%ebp);pushl %edi;calll *;popl %ecx;pushl %eax": 1,
                "je  <.text+>;cmpl %esi, (%ebp);jne  <.text+>;movl -(%ebp), %eax;popl %edi": 1,
                "pushl %esi;leal (%ebp), %eax;pushl %eax;pushl (%ebp);movl $, %esi": 1,
                "pushl %esi;calll - <.text+>;popl %esi;popl %ebp;retl": 1,
                "calll *%edi;testl %eax, %eax;popl %ecx;popl %ecx;jne  <.text+>": 12,
                "pushl -(%ebp);pushl -(%ebp);calll - <.text+>;testl %eax, %eax;jne - <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;pushl (%ebp);pushl (%ebp);calll *(%ebp)": 1,
                "movb $, %al;popl %esi;popl %ebp;retl $;calll *": 1,
                "movl , %eax;testl %eax, %eax;je  <.text+>;pushl %eax;pushl $": 1,
                "testl %eax, %eax;je  <.text+>;pushl %eax;pushl $;calll *": 1,
                "pushl %edi;pushl %ebx;calll  <.text+>;movw (%eax), %ax;cmpw $, %ax": 1,
                "jmp - <.text+>;xorl %eax, %eax;incl %eax;jmp - <.text+>;nop": 3,
                "movl (%ebp), %edi;testl %edi, %edi;jne  <.text+>;movl -(%ebp), %eax;popl %edi": 1,
                "movl -(%ebp), %eax;popl %edi;leave;retl $;nop": 1,
                "pushl %esi;movl (%ebp), %esi;pushl (%ebp);movl %esi, -(%ebp);calll *": 1,
                "pushl (%ebp);movl %esi, -(%ebp);calll *;xorl %ebx, %ebx;cmpb %bl, ": 1,
                "pushl %ebx;pushl %esi;pushl %edi;pushl (%ebp);calll - <.text+>": 1,
                "movw (%eax), %cx;cmpw $, %cx;jb  <.text+>;cmpw $, %cx;ja  <.text+>": 1,
                "xorl %ebx, %ebx;cmpl $, %eax;je  <.text+>;cmpl %ebx, ;je  <.text+>": 1,
                "calll *;cmpl %ebx, ;jne - <.text+>;jmp  <.text+>;nop": 1,
                "jne  <.text+>;calll - <.text+>;cmpb %bl, ;movb %bl, ;je  <.text+>": 1,
                "calll *;popl %ecx;movl (%ebp), %ecx;pushl %edi;movl %eax, (%ecx)": 1,
                "cmpl $-, %esi;je  <.text+>;cmpl %ebx, -(%ebp);jne  <.text+>;movl (%esi), %eax": 1,
                "cmpl %ebx, (%esi);jne  <.text+>;movl $, %edi;pushl %edi;pushl (%esi)": 1,
                "pushl $;calll - <.text+>;cmpl $-, %eax;je  <.text+>;pushl %esi": 1,
                "calll *;popl %ecx;pushl %eax;calll *;popl %edi": 1,
                "movl %edi, %esi;calll *;pushl %ebx;pushl (%ebp);movl %eax, -(%ebp)": 1,
                "movl %esp, %ebp;subl $, %esp;pushl %ebx;xorl %ebx, %ebx;cmpl %ebx, ": 1,
                "cmpl %ebx, (%ebp);je  <.text+>;incl ;pushl $;calll - <.text+>": 1,
                "cmpl %ebx, -(%ebp);jne  <.text+>;pushl (%ebp);pushl %esi;calll - <.text+>": 1,
                "pushl (%ebp);pushl %esi;calll - <.text+>;cmpl %ebx, -(%ebp);movl %eax, %edi": 1,
                "cmpl %esi, %eax;jne  <.text+>;pushl %esi;calll  <.text+>;cmpl %ebx, ": 1,
                "jmp - <.text+>;cmpl $, -(%ebp);jne - <.text+>;jmp - <.text+>;decl %eax": 1,
                "leal (%ecx,%eax,), %eax;movl (%eax), %ecx;movl %ecx, -(%ebp);cmpw %si, (%eax);jne  <.text+>": 1,
                "cmpw %si, (%eax);jne  <.text+>;movl , %eax;movl , %ecx;movl %esi, (%eax,%ecx,)": 1,
                "pushl %esi;calll - <.text+>;testl %eax, %eax;pushl %esi;pushl $": 1,
                "pushl %esi;pushl $;jne  <.text+>;calll *;pushl %eax": 1,
                "calll *;xorl %eax, %eax;jmp - <.text+>;cmpb $, (%esi);jne - <.text+>": 1,
                "addl %eax, %esi;pushl %esi;pushl (%ebp);calll *;jmp - <.text+>": 1,
                "calll *;jmp - <.text+>;pushl $;calll - <.text+>;movl , %eax": 1,
                "cmpl %ebx, (%esi);jne  <.text+>;movl (%ebp), %eax;pushl (%eax);pushl %esi": 1,
                "movl (%ebp), %eax;pushl (%eax);pushl %esi;calll  <.text+>;testl %eax, %eax": 1,
                "cmpl %ebx, ;jne - <.text+>;calll  <.text+>;pushl %ebx;pushl %esi": 1,
                "movl , %eax;andw $, -(%ebp);movw %cx, -(%ebp);pushl $;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;leal -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "movl , %eax;cmpw $, (%eax);je - <.text+>;pushl $;pushl $": 1,
                "cmpl $, %eax;jne  <.text+>;movl %esi, %eax;popl %esi;retl": 1,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;je  <.text+>;pushl $": 1,
                "testl %eax, %eax;movl %eax, (%ebp);je  <.text+>;pushl %ebx;pushl %edi": 1,
                "calll - <.text+>;testl %eax, %eax;movl , %edi;jne  <.text+>;movl , %ecx": 1,
                "testl %eax, %eax;movl , %edi;jne  <.text+>;movl , %ecx;pushl %ecx": 1,
                "movl (%esi), %ecx;cmpw $, (%ecx);jne  <.text+>;cmpl %eax, ;je  <.text+>": 1,
                "pushl $;calll - <.text+>;movl , %eax;movl %eax, -(%ebp);xorl %ebx, %ebx": 1,
                "jne  <.text+>;cmpl %ebx, ;je  <.text+>;cmpl %ebx, ;jne  <.text+>": 1,
                "calll *;popl %ecx;popl %ecx;movl %esi, -(%ebp);movb $, ": 1,
                "pushl %ebx;pushl $;calll - <.text+>;movl $, %edi;movl %edi, %esi": 1,
                "jne - <.text+>;decl %edx;movb $, %ch;rorb (%edx);movb $-, %bh": 1,
                "jmp - <.text+>;pushl -(%ebp);pushl %esi;pushl $;pushl %ebx": 2,
                "cmpb $, ;je - <.text+>;calll  <.text+>;cmpl %ebx, -(%ebp);je - <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;addl $, %esp;movw $, -(%ebp)": 1,
                "movl $, -(%ebp);movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "addl $, %esp;jmp - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl $": 2,
                "pushl $;jmp - <.text+>;pushl $;pushl $;pushl %eax": 1,
                "pushl %edi;calll *;addl $, %esp;leal (,%eax,), %esi;jmp  <.text+>": 1,
                "calll *;addl $, %esp;leal (,%eax,), %esi;jmp  <.text+>;calll - <.text+>": 1,
                "decl %edx;popl %edi;je - <.text+>;decl %edx;enter $-, $": 1,
                "calll - <.text+>;cmpl %ebx, ;jne - <.text+>;movl -(%ebp), %ecx;calll - <.text+>": 1,
                "testl %ecx, %ecx;je  <.text+>;cmpw $, (%ecx);je  <.text+>;cmpl $, %eax": 1,
                "popl %ebp;retl $;cmpb $, ;je  <.text+>;cmpw $, %ax": 1,
                "retl $;cmpb $, ;je  <.text+>;cmpw $, %ax;je  <.text+>": 1,
                "pushl %eax;pushl %esi;pushl $;calll  <.text+>;movl %eax, %edi": 1,
                "movl %eax, %ebx;addl %ebx, -(%ebp);cmpl $, -(%ebp);popl %ecx;jg  <.text+>": 1,
                "addb %cl, -(%ebx);incl (%ebx);subb %al, %dl;decl %edx;je - <.text+>": 1,
                "je  <.text+>;movw (%ebp), %di;cmpw %di, %cx;je  <.text+>;cmpb $, ": 1,
                "jmp - <.text+>;cmpw %di, (%eax);je - <.text+>;movw (%eax), %bx;testw %bx, %bx": 1,
                "addl %edx, %eax;cmpb $, ;movl %eax, -(%ebp);je  <.text+>;cmpw $, %bx": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;incl %ecx;incl %ecx;pushl %ecx": 1,
                "calll - <.text+>;cmpb $, ;movl %eax, %ebx;movl %ebx, -(%ebp);je  <.text+>": 1,
                "pushl %edi;movl $, %esi;pushl %esi;calll - <.text+>;pushl %esi": 1,
                "popl %ebx;calll - <.text+>;leave;retl $;movl (%ebp), %eax": 1,
                "cmpl %ebx, %esi;je  <.text+>;movl $, %edi;pushl %edi;movl %ebx, (%esi)": 1,
                "pushl %eax;calll *;popl %ecx;leal (%eax,%eax), %eax;pushl %eax": 1,
                "je  <.text+>;pushl %ecx;pushl %eax;calll *%edi;popl %ecx": 1,
                "pushl %eax;calll *%edi;popl %ecx;popl %ecx;movl (%esi), %eax": 1,
                "movl %ebx, (%esi);movl $, -(%ebp);jmp - <.text+>;cmpl %ebx, %esi;je - <.text+>": 1,
                "pushl %esi;movl , %ebx;calll *%ebx;popl %ecx;leal (,%eax,), %edi": 1,
                "calll - <.text+>;movl , %ecx;movl %eax, (%ecx);movl , %eax;movl (%eax), %eax": 1,
                "movl , %eax;movl (%eax), %eax;testl %eax, %eax;je  <.text+>;pushl %esi": 1,
                "popl %ecx;movl , %eax;movl (%eax), %ecx;movl %ecx, (%eax);pushl $": 1,
                "jl - <.text+>;xorl %eax, %eax;cmpw %ax, (%edi);jne  <.text+>;movl , %ecx": 1,
                "movl %eax, -(%ebp);movl , %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);pushl %eax": 1,
                "movl , %ecx;movl (%ecx), %ecx;movl %ecx, -(%ebp);pushl %eax;leal -(%ebp), %eax": 1,
                "popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);movl %edx, -(%ebp)": 1,
                "movl %edx, (%eax);movl , %eax;movl (%ebp), %ecx;movl %ecx, (%eax);movl , %eax": 1,
                "decl %edx;popl %es;sbbl $, %eax;addb (%edi), %cl;testl %edx, (%eax)": 1,
                "cmpw $, -(%eax);jne  <.text+>;movl $, ;xorl %ebx, %ebx;pushl $": 1,
                "testw %ax, %ax;je  <.text+>;pushl $;popl %ebx;cmpw $, %ax": 1,
                "cmpw $, (%esi);je  <.text+>;movl , %edi;pushl %ebx;pushl $": 1,
                "testl %eax, %eax;je  <.text+>;cmpw $, (%esi);je  <.text+>;cmpw $, (%esi)": 1,
                "je  <.text+>;cmpw $, (%esi);je  <.text+>;pushl $;pushl %esi": 1,
                "addb %al, (%eax);addb %ah, (%eax);addb %cl, (%ecx);addb %al, (%eax);addb %dl, -(%eax)": 1,
                "je  <.text+>;cmpl $, (%eax);jge  <.text+>;movl , %edi;pushl $": 1,
                "calll *%ebx;movl %eax, %esi;testl %esi, %esi;je  <.text+>;pushl $": 1,
                "cmpl %ebx, %eax;movl %eax, (%esi);je  <.text+>;pushl $;pushl %eax": 1,
                "popl %ecx;popl %ecx;calll - <.text+>;cmpl %ebx, %eax;movl %eax, (%esi)": 1,
                "movl %eax, (%esi);je  <.text+>;movb , %al;movb %al, (%esi);movb , %al": 1,
                "popl %ecx;jne - <.text+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "movl (%ebp), %esi;pushl %esi;calll  <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "pushl %esi;movl (%ebp), %esi;testl %esi, %esi;je  <.text+>;pushl %esi": 1,
                "movl %esi, %eax;popl %esi;popl %ebp;retl $;movl , %esi": 1,
                "movl (%esi), %eax;cmpl $, %eax;jg  <.text+>;cmpl $, %eax;jge  <.text+>": 1,
                "jge  <.text+>;subl %ebx, %eax;jne  <.text+>;pushl (%ebp);leal (%esi), %eax": 1,
                "pushl (%ebp);leal (%esi), %eax;pushl %ebx;pushl %eax;pushl %esi": 2,
                "pushl %esi;calll  <.text+>;testl %eax, %eax;jne  <.text+>;movl (%esi), %edi": 1,
                "movl %esp, %ebp;subl $, %esp;movl (%ebp), %ecx;movl (%ecx), %edx;pushl %ebx": 1,
                "leal (%esi,%eax,), %eax;movl %eax, -(%ebp);movl (%eax), %eax;cmpl %ebx, %eax;je  <.text+>": 1,
                "retl $;pushl (%ebp);pushl (%esi);calll - <.text+>;testl %eax, %eax": 1,
                "retl $;nop;nop;andl $, %eax;addb %dl, -(%eax)": 1,
                "pushl $;movl %eax, ;calll - <.text+>;movl %eax, ;movl , %eax": 1,
                "je  <.text+>;pushl %esi;pushl (%esi);calll - <.text+>;calll *%eax": 1,
                "pushl %esi;pushl (%esi);calll - <.text+>;calll *%eax;testl %eax, %eax": 1,
                "calll *%eax;testl %eax, %eax;setne %al;xorb (%ebp), %al;jne  <.text+>": 1,
                "leal (%ebp), %eax;pushl ;pushl %eax;pushl %edi;pushl $": 1,
                "leal (%edi,%ecx,), %ecx;pushl %eax;movl %ecx, (%ebp);calll *;popl %ecx": 1,
                "cmpl $, %eax;jle - <.text+>;cmpl $, %eax;je  <.text+>;jle - <.text+>": 1,
                "jmp - <.text+>;subl $, %eax;je  <.text+>;decl %eax;jne  <.text+>": 1,
                "pushl (%esi);calll - <.text+>;testl %eax, %eax;jne  <.text+>;movl (%esi), %esi": 1,
                "pushl %edi;calll *%esi;popl %ecx;popl %ecx;popl %esi": 1,
                "testl %edi, %edi;je - <.text+>;movl , %eax;testl %eax, %eax;je - <.text+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl $;calll - <.text+>": 1,
                "decl ;jmp - <.text+>;pushl %edi;calll - <.text+>;pushl ": 1,
                "nop;das;addb %cl, (%ecx);addb %al, (%eax);popl %esi": 1,
                "popl %ecx;je  <.text+>;pushl $;calll - <.text+>;cmpl %ebx, %edi": 1,
                "testb %al, %al;jne  <.text+>;xorl %edi, %edi;cmpb %bl, ;je  <.text+>": 1,
                "movl %eax, (%esi);je  <.text+>;cmpl %ebx, %edi;jne  <.text+>;pushl $": 1,
                "pushl ;pushl $;calll *;testl %eax, %eax;popl %ecx": 1,
                "je  <.text+>;pushl %ebx;pushl %ebx;calll - <.text+>;popl %edi": 1,
                "pushl %esi;pushl %edi;xorl %ebx, %ebx;pushl %ebx;calll - <.text+>": 1,
                "cmpw %bx, (%edi);movl %edi, (%ebp);movl %edi, %esi;je  <.text+>;xorl %eax, %eax": 1,
                "je  <.text+>;xorl %eax, %eax;movw (%esi), %ax;pushl %eax;calll *": 3,
                "incl %esi;incl %esi;cmpw %bx, (%esi);jne - <.text+>;pushl %esi": 1,
                "jne - <.text+>;pushl %esi;calll - <.text+>;cmpw %bx, (%eax);je  <.text+>": 1,
                "xorl %edi, %edi;pushl $;movl %eax, -(%ebp);movl %ebx, -(%ebp);movl %edi, ": 1,
                "xorl %ecx, %ecx;incl %ecx;movl %eax, %edi;addl $, %eax;movl %ecx, (%eax)": 1,
                "movl %eax, -(%ebp);calll  <.text+>;testb %al, %al;movb %al, -(%ebp);jne  <.text+>": 1,
                "popl %ecx;calll - <.text+>;leal -(%ebp), %eax;pushl %eax;calll *%ebx": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;calll *;popl %ecx;popl %ecx;movl (%edi), %eax": 1,
                "movl (%edi), %eax;testl %eax, %eax;pushl (%esi);jne  <.text+>;calll *%ebx": 1,
                "pushl %eax;calll - <.text+>;testl %eax, %eax;movl %eax, (%edi);je  <.text+>": 2,
                "pushl %eax;calll *;leal -(%ebp), %eax;pushl $;pushl %eax": 3,
                "pushl %esp;addb %al, (%eax);addb %dl, -(%eax);movl %edi, %edi;pushl %ebp": 1,
                "incl %eax;cmpl %eax, (%esi);movl %edi, (%esi);movl %ebx, (%esi);movl %ebx, (%esi)": 1,
                "jne  <.text+>;cmpl %ebx, -(%ebp);jne  <.text+>;leal -(%ebp), %ecx;pushl %ecx": 1,
                "leal -(%ebp), %eax;pushl %eax;calll  <.text+>;testb %al, %al;je  <.text+>": 1,
                "leal (%edi), %eax;cmpl %ebx, %eax;movl $, -(%ebp);je  <.text+>;pushl %eax": 1,
                "leal (%edi), %ecx;leal (%ecx,%eax,), %eax;cmpl %ebx, %eax;movl %eax, -(%ebp);je  <.text+>": 1,
                "jne - <.text+>;pushl -(%ebp);calll - <.text+>;movl , %eax;cmpl %ebx, %eax": 1,
                "calll - <.text+>;movl , %eax;cmpl %ebx, %eax;je  <.text+>;cmpl $, %eax": 1,
                "movl -(%ebp), %eax;movl (%eax), %eax;incl -(%ebp);movl %eax, -(%ebp);movl -(%ebp), %eax": 1,
                "xorl %eax, %eax;cmpl %ebx, -(%ebp);jne  <.text+>;cmpl %ebx, -(%ebp);je  <.text+>": 1,
                "je  <.text+>;movl -(%ebp), %ecx;popl %edi;popl %esi;popl %ebx": 2,
                "movl %esp, %ebp;subl $, %esp;pushl %edi;xorl %edi, %edi;cmpl %edi, ": 1,
                "je  <.text+>;pushl %ebx;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 3,
                "movl %eax, %edi;leal -(%ebp), %eax;pushl %eax;pushl $;calll *": 1,
                "calll - <.text+>;pushl (%edi);calll - <.text+>;pushl %edi;calll - <.text+>": 1,
                "pushl %ebx;pushl %esi;pushl %edi;movl (%ebp), %edi;movw %cx, -(%ebp)": 2,
                "movw %cx, -(%ebp);pushl $;leal -(%ebp), %ecx;movl %eax, -(%ebp);movl (%ebp), %eax": 3,
                "je  <.text+>;movzwl -(%ebp), %ebx;leal (%esi,%ebx,), %eax;movl %eax, -(%ebp);movzwl (%eax), %eax": 1,
                "pushl %edi;movl %esp, -(%ebp);movl (%ebp), %eax;movl %eax, -(%ebp);xorl %ebx, %ebx": 1,
                "movl , %esi;xorl %edi, %edi;incl %edi;pushl %ebx;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl %ebx": 6,
                "pushl %eax;calll *;popl %ecx;popl %ecx;testl %eax, %eax": 2,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *%edi;popl %ecx": 7,
                "movb %bl, -(%ebp);leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;calll *%esi;addl $, %esp;cmpl %ebx, -(%ebp);je  <.text+>": 1,
                "addl $, %esp;cmpl %ebx, -(%ebp);je  <.text+>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);cmpl %ebx, -(%ebp);jne  <.text+>;calll *": 1,
                "movw $, (%esi);incl %esi;incl %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %eax, %eax;je  <.text+>;movl -(%ebp), %eax;movl %eax, -(%ebp);cmpb %bl, -(%ebp)": 1,
                "pushl %ebx;pushl %ebx;pushl -(%ebp);leal -(%ebp), %eax;pushl %eax": 1,
                "calll *;pushl %eax;calll *;cmpl %ebx, %esi;je  <.text+>": 1,
                "popl %esi;popl %ebx;leave;retl $;arpl %ax, (%eax)": 1,
                "addb %ah, (%eax,%eax);addb %ah, (%ebp);js  <.text+>;addb %al, %gs:(%eax);addb %bh, %bh": 1,
                "pushl %ecx;pushl %ebx;pushl %esi;movl (%ebp), %esi;xorl %eax, %eax": 1,
                "cmpw $, (%ecx);je  <.text+>;addl $, (%esi);incl %ebx;jmp - <.text+>": 1,
                "pushl %eax;calll *%esi;popl %ecx;popl %ecx;testl %eax, %eax": 13,
                "addb %dl, (%eax);addb %dl, (%eax);incl %ecx;addb %dl, (%edx);incl %ecx": 1,
                "addb %dl, (%eax);addb %bl, (%eax);addb %al, (%eax);decl %ebp;addb %cl, (%ecx)": 1,
                "addb %al, (%eax);addb %al, (%edx);incl %ebp;addb %cl, (%eax,%eax);addb %dl, (%edi)": 1,
                "pushl (%ebp);movl , %edi;movw $, -(%ebp);calll *%edi;andw $, -(%ebp)": 1,
                "calll *%edi;andw $, -(%ebp);movw %ax, -(%ebp);popl %ecx;leal -(%ebp), %eax": 1,
                "testl %eax, %eax;je  <.text+>;testl %esi, %esi;je  <.text+>;pushl %eax": 1,
                "popl %ecx;movl %ebx, ;cmpw %bx, (%esi);je  <.text+>;calll  <.text+>": 1,
                "popl %esi;popl %ebx;retl;xorb %al, %al;jmp - <.text+>": 1,
                "movl , %ecx;movl , %edx;movl (%ebp), %eax;movl %eax, (%ecx,%edx,);movl , %eax": 1,
                "movl (%ebp), %eax;movl %eax, (%ecx,%edx,);movl , %eax;movl , %ecx;andw $, (%ecx,%eax,)": 1,
                "je  <.text+>;pushl $;pushl %edi;calll *;popl %ecx": 1,
                "popl %ecx;movl , %eax;movl (%eax), %eax;testl %eax, %eax;je  <.text+>": 1,
                "andw $, (%eax);cmpb $, ;je  <.text+>;pushl $;pushl $": 1,
                "movl , %eax;pushl (%eax);calll - <.text+>;movl %eax, %esi;cmpw $, (%esi)": 1,
                "calll - <.text+>;movl %eax, %esi;cmpw $, (%esi);je  <.text+>;pushl $": 1,
                "pushl %esi;calll *%ebx;popl %ecx;movl , %ecx;movl %eax, (%edi,%ecx)": 1,
                "je - <.text+>;jmp  <.text+>;cmpl $, (%esi);jbe - <.text+>;jmp - <.text+>": 1,
                "pushl %edi;calll - <.text+>;jmp - <.text+>;nop;nop": 1,
                "pushl %eax;addb %ah, (%eax,%eax);incl %edi;addb %al, (%eax);addb %cl, (%eax)": 1,
                "cmpl %edi, %eax;je - <.text+>;leal -(%ebp), %eax;pushl %eax;calll - <.text+>": 1,
                "leal -(%ebp), %eax;movl %eax, -(%ebp);jmp - <.text+>;nop;nop": 1,
                "calll *;popl %ecx;pushl %eax;calll *;pushl %ebx": 1,
                "popl %ecx;pushl %eax;calll *;pushl %ebx;pushl (%esi)": 1,
                "pushl %eax;calll *;pushl %ebx;pushl (%esi);movl %eax, -(%ebp)": 1,
                "calll *;addl $, %esp;testl %eax, %eax;jne  <.text+>;movzwl (%esi), %esi": 1,
                "movb $, ;pushl -(%ebp);calll - <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "xorl %ebx, %ebx;pushl %ebx;pushl (%ebp);calll - <.text+>;movl %eax, %esi": 1,
                "jne  <.text+>;cmpb %al, (%ebp);je  <.text+>;movl (%ebp), %eax;movw %di, (%eax,%ebx,)": 1,
                "je  <.text+>;movl (%ebp), %eax;movw %di, (%eax,%ebx,);incl %ebx;incl %esi": 1,
                "movl (%ebp), %eax;movw %di, (%eax,%ebx,);incl %ebx;incl %esi;incl %esi": 1,
                "incl %esi;incl %esi;cmpl (%ebp), %ebx;movw (%esi), %di;jb - <.text+>": 1,
                "movw (%esi), %di;jb - <.text+>;movl (%ebp), %eax;andw $, (%eax,%ebx,);popl %edi": 1,
                "orb (%eax), %al;orl $, %eax;addb %al, (%eax);addb %ah, (%ecx);movl (%eax), %esi": 1,
                "jmp - <.text+>;xorl %eax, %eax;incl %eax;jmp - <.text+>;cmpw $, %ax": 2,
                "incl %eax;jmp - <.text+>;cmpw $, %ax;jne - <.text+>;jmp - <.text+>": 1,
                "pushl %edi;pushl $;calll - <.text+>;testl %eax, %eax;jne - <.text+>": 1,
                "calll - <.text+>;movl , %esi;pushl $;pushl %ebx;pushl %ebx": 1,
                "movl -(%ebp), %eax;cmpl %ebx, %eax;je  <.text+>;cmpl $-, %eax;je  <.text+>": 1,
                "cmpl %ebx, %esi;je  <.text+>;testb %al, %al;jne  <.text+>;subl $, %esi": 1,
                "movl $, %edi;jmp - <.text+>;xorl %ebx, %ebx;jmp - <.text+>;xorl %esi, %esi": 1,
                "xorl %ebx, %ebx;jmp - <.text+>;xorl %esi, %esi;jmp - <.text+>;movl %edx, -(%ebp)": 1,
                "jmp - <.text+>;cmpl %ebx, %eax;je - <.text+>;jmp - <.text+>;cmpb $, ": 1,
                "calll - <.text+>;pushl -(%ebp);movl %eax, %edi;calll - <.text+>;pushl -(%ebp)": 1,
                "jmp  <.text+>;xorl %eax, %eax;jmp - <.text+>;movw , %cx;pushl (%ebp)": 1,
                "testl %edi, %edi;movl , %eax;movl (%eax), %ecx;jle - <.text+>;jmp  <.text+>": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;pushl %esi;pushl $": 2,
                "pushl $;calll - <.text+>;movl (%ebp), %esi;pushl $;movl %eax, (%esi)": 1,
                "cmpl $, %eax;movl , %ecx;jb  <.text+>;cmpw $, (%ecx);jne  <.text+>": 1,
                "popl %esi;popl %ebp;retl $;cmpl $, %eax;addb %cl, (%ebx)": 1,
                "retl $;cmpl $, %eax;addb %cl, (%ebx);orl (%ecx), %eax;jmp - <.text+>": 1,
                "addb %cl, (%ebx);orl (%ecx), %eax;jmp - <.text+>;cmpl %ebx, (%ebp);jne  <.text+>": 1,
                "cmpl %ebx, (%ebp);jne  <.text+>;pushl $;movl $, (%esi);calll - <.text+>": 1,
                "pushl %esi;movl (%ebp), %esi;movl (%esi), %eax;cmpl %ebx, %eax;je  <.text+>": 1,
                "xorl %eax, %eax;jmp - <.text+>;movw %ax, (%esi);incl %esi;incl %esi": 1,
                "cmpl $, ;jne - <.text+>;jmp  <.text+>;nop;nop": 1,
                "popl %ecx;movl (%ebp), %eax;movl (%eax), %eax;cmpl %edi, %eax;movl %edi, -(%ebp)": 1,
                "xorl %ebx, %ebx;cmpw %bx, %ax;movl %ebx, -(%ebp);je  <.text+>;cmpw -(%ebp), %ax": 1,
                "movw (%ebx), %ax;cmpw -(%ebp), %ax;jne  <.text+>;cmpw %si, (%ebx);movl -(%ebp), %eax": 1,
                "popl %ecx;movl %eax, %ecx;movw (%ebx), %ax;cmpw %dx, %ax;movl %ecx, -(%ebp)": 1,
                "incl %ebx;incl %ebx;andw %si, (%ebx,%eax,);pushl $;pushl %ebx": 1,
                "testl %edi, %edi;popl %ecx;popl %ecx;je  <.text+>;xorl %ebx, %ebx": 1,
                "calll *;addl $, %esp;testl %eax, %eax;je  <.text+>;movl %ebx, %esi": 1,
                "nop;nop;je  <.text+>;outsl (%esi), %dx;addb %ch, (%ebx)": 1,
                "calll - <.text+>;movl %eax, %ebx;testl %ebx, %ebx;jne - <.text+>;jmp  <.text+>": 2,
                "jne  <.text+>;movl , %eax;leal (%eax,%eax), %eax;pushl %eax;calll - <.text+>": 1,
                "je  <.text+>;incl %esi;incl %esi;jmp - <.text+>;cmpl %edi, -(%ebp)": 1,
                "jne - <.text+>;cmpl $, -(%ebp);je  <.text+>;pushl (%ebp);movl (%ebp), %eax": 1,
                "pushl %esi;pushl $;pushl ;calll *;leal (%ebx,%eax,), %eax": 1,
                "leal (%ebx,%eax,), %eax;cmpl %ebx, %eax;movl %ebx, -(%ebp);movl %eax, -(%ebp);je  <.text+>": 1,
                "movl -(%ebp), %eax;leal (%ebx,%eax,), %ebx;cmpw $, (%ebx);movl %ebx, -(%ebp);jne - <.text+>": 1,
                "jne  <.text+>;cmpw %bx, (%esi);je  <.text+>;cmpl %ebx, ;jne  <.text+>": 1,
                "je  <.text+>;cmpl %ebx, -(%ebp);jne  <.text+>;movl -(%ebp), %eax;leal (%esi,%eax,), %esi": 1,
                "jmp - <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;popl %edi;popl %esi": 1,
                "pushl %ebp;movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %edi": 1,
                "movl %esp, %ebp;subl $, %esp;movl , %eax;pushl %edi;movl (%ebp), %edi": 1,
                "jne  <.text+>;calll *;cmpl $, %eax;jne  <.text+>;pushl %edi": 1,
                "xorl %eax, %eax;incl %eax;popl %esi;popl %ebx;movl -(%ebp), %ecx": 1,
                "jne - <.text+>;cmpl %ebx, -(%ebp);je  <.text+>;pushl %ebx;pushl %ebx": 2,
                "leave;retl $;movl (%edi), %eax;cmpl %ebx, %eax;je  <.text+>": 1,
                "pushl %edi;movl (%ebp), %edi;movl %edi, -(%ebp);jne  <.text+>;leal -(%ebp), %eax": 1,
                "popl %esi;movl -(%ebp), %ecx;popl %edi;calll - <.text+>;leave": 1,
                "cmpw %di, (%esi);je - <.text+>;movl %eax, %ecx;negl %ecx;cmpl $, %eax": 1,
                "xorl %ebx, %ebx;cmpl %ebx, %esi;pushl %edi;movl %eax, -(%ebp);movl $, -(%ebp)": 1,
                "pushl %ebx;calll - <.text+>;pushl %eax;calll *%edi;movl %eax, %esi": 1,
                "movl %eax, %esi;cmpl %ebx, %esi;je  <.text+>;incl %esi;leal (%esi,%esi), %eax": 1,
                "cmpl %ebx, %esi;je  <.text+>;incl %esi;leal (%esi,%esi), %eax;pushl %eax": 1,
                "movzwl -(%ebp), %eax;pushl %eax;calll - <.text+>;movl , %esi;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%esi;movl -(%ebp), %edi;cmpl %ebx, %edi": 1,
                "jne  <.text+>;pushl ;pushl %eax;pushl $;calll - <.text+>": 1,
                "movl , %eax;pushl %esi;xorl %esi, %esi;pushl %esi;pushl $": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;jne  <.text+>;cmpl %esi, ": 1,
                "movb $, -(%ebp);movl -(%ebp), %ebx;pushl $;popl %eax;leal -(%ebp), %ecx": 1,
                "pushl %eax;pushl %esi;calll - <.text+>;testb %al, %al;je  <.text+>": 1,
                "incl %ecx;incl %ecx;movl %ecx, -(%ebp);movl $, %esi;cmpl $, ": 1,
                "je  <.text+>;movl (%ebx), %eax;addl $, %eax;je  <.text+>;pushl %eax": 1,
                "calll *;popl %ecx;popl %ecx;cmpl $, -(%ebp);je  <.text+>": 1,
                "popl %ecx;cmpb $, -(%ebp);jne - <.text+>;xorl %eax, %eax;movw , %ax": 1,
                "incl %eax;incl %eax;je  <.text+>;movl (%ebx), %ecx;addl $, %ecx": 1,
                "ja  <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax;pushl %esi": 1,
                "movl -(%ebp), %eax;addl %eax, %edi;cmpl %esi, %edi;popl %ecx;ja  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;leal (%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "pushl %esi;pushl %edi;pushl $;popl %esi;jne  <.text+>": 1,
                "movl , %esi;movl %eax, -(%ebp);movl (%ebp), %eax;pushl %edi;movl (%ebp), %edi": 2,
                "movl (%ebp), %eax;pushl %edi;movl (%ebp), %edi;pushl %eax;movl %eax, -(%ebp)": 1,
                "nop;nop;das;addb %bl, (%ecx);addb %al, (%eax)": 1,
                "pushl %ebx;pushl %esi;xorl %eax, %eax;movw (%edi), %ax;testw %ax, %ax": 1,
                "movw (%edi), %ax;testw %ax, %ax;je  <.text+>;cmpw $, %ax;jbe  <.text+>": 1,
                "jae  <.text+>;jmp - <.text+>;nop;nop;nop": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;movw (%ebx), %ax;incl %ebx": 1,
                "movl , %edi;pushl %ebx;calll *%edi;movl %eax, %esi;cmpl $, %esi": 1,
                "popl %ecx;jne  <.text+>;pushl %esi;calll *%edi;cmpl $, %eax": 1,
                "ja  <.text+>;pushl %esi;calll - <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "calll *;popl %ecx;popl %ecx;movw (%esi), %ax;cmpw $, %ax": 1,
                "pushl %eax;pushl -(%ebp);calll - <.text+>;movl %eax, %ebx;testl %ebx, %ebx": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;je  <.text+>;incl %ebx;incl %ebx": 2,
                "je  <.text+>;incl %ebx;incl %ebx;xorl %eax, %eax;movw , %ax": 2,
                "popl %ecx;pushl (%ebp);movl -(%ebp), %ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;pushl %eax;movl %eax, -(%ebp)": 1,
                "popl %ecx;movl %eax, %esi;testl %ebx, %ebx;je  <.text+>;pushl %ebx": 1,
                "jne - <.text+>;pushl -(%ebp);calll - <.text+>;movl %edi, %eax;movl -(%ebp), %ecx": 1,
                "pushl %eax;calll - <.text+>;testl %eax, %eax;jne  <.text+>;leal (%edi), %eax": 1,
                "pushl %eax;pushl (%esi);leal -(%ebp), %eax;pushl %ebx;pushl %eax": 2,
                "cmpb $, -(%ebp);jne  <.text+>;movl -(%ebp), %ebx;testb $, (%ebx);jne  <.text+>": 1,
                "jne  <.text+>;movl -(%ebp), %ebx;testb $, (%ebx);jne  <.text+>;jmp  <.text+>": 1,
                "jmp  <.text+>;leal -(%ebp), %eax;pushl %eax;calll *%esi;testl %eax, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%esi;testl %eax, %eax;je  <.text+>": 1,
                "calll *%esi;testl %eax, %eax;je  <.text+>;xorl %esi, %esi;testl %esi, %esi": 1,
                "movl (,%ecx,), %ecx;cmpl $-, %ecx;je  <.text+>;movl %ecx, (%ebp);cmpl $, (%ebp)": 1,
                "movl %ecx, (%ebp);cmpl $, (%ebp);je  <.text+>;pushl $;pushl (%ebp)": 1,
                "jne  <.text+>;cmpl %esi, ;je  <.text+>;pushl (%ebx);pushl $": 1,
                "calll - <.text+>;addl $, %esp;pushl $;calll  <.text+>;movzbl %al, %eax": 2,
                "je  <.text+>;incl %esi;incl %esi;jmp - <.text+>;xorl %eax, %eax": 1,
                "retl $;das;addb %al, (%eax,%eax);addb %dl, -(%eax);movl %edi, %edi": 1,
                "orl $-, -(%ebp);pushl %ebx;movl (%ebp), %ebx;pushl %esi;pushl %edi": 1,
                "movl $, -(%ebp);rep  stosl %eax, %es:(%edi);movl (%edx), %eax;xorl %esi, %esi;xorl %edi, %edi": 1,
                "je  <.text+>;movl (%eax), %eax;shrl %eax;andl $, %eax;pushl %esi": 1,
                "pushl %esi;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl $": 1,
                "pushl $;pushl $;movl %esi, -(%ebp);movl %esi, -(%ebp);calll  <.text+>": 1,
                "pushl %ebx;calll  <.text+>;cmpl %edi, %eax;je  <.text+>;cmpl %esi, ": 1,
                "cmpl %edi, %eax;je  <.text+>;cmpl %esi, ;je  <.text+>;testb $, (%ebx)": 1,
                "cmpl $, ;je  <.text+>;cmpw %si, -(%ebp);je  <.text+>;pushl %esi": 1,
                "jne  <.text+>;cmpl %esi, ;jne  <.text+>;movl -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %eax, -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);movl (%ebx), %eax;testb $, %al": 1,
                "movl %eax, %esi;leal -(%ebp), %eax;pushl %eax;calll - <.text+>;pushl %eax": 1,
                "pushl %eax;pushl $;pushl %esi;calll  <.text+>;testl %eax, %eax": 2,
                "testl %eax, %eax;jne  <.text+>;xorl %esi, %esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl (%ebx);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll  <.text+>": 1,
                "je  <.text+>;pushl $;pushl $;pushl $;leal -(%ebp), %ecx": 1,
                "pushl $;pushl $;pushl $;leal -(%ebp), %ecx;pushl %ecx": 2,
                "calll *%eax;xorl %esi, %esi;cmpl %esi, %eax;je  <.text+>;cmpl %esi, -(%ebp)": 1,
                "xorl %esi, %esi;cmpl %esi, %eax;je  <.text+>;cmpl %esi, -(%ebp);jne  <.text+>": 1,
                "movl %esi, ;movl %edi, ;movl %edi, ;movl %edi, ;movl %eax, ": 1,
                "movl %edi, ;movl %edi, ;movl %eax, ;calll  <.text+>;movl %eax, %edi": 1,
                "pushl (%ebp);movl $, %esi;pushl (%ebp);pushl $;pushl %esi": 1,
                "calll *;addl $, %esp;movl %esi, %eax;popl %esi;popl %ebp": 1,
                "movl $, %edi;pushl %edi;movl %eax, -(%ebp);pushl %eax;pushl $": 1,
                "jne  <.text+>;movl %ebx, %eax;popl %ebx;popl %ebp;retl $": 1,
                "incl (%eax);movl (%esi), %eax;testb $, (%eax);pushl $;popl %edi": 1,
                "movl %eax, -(%ebp);xorl %eax, %eax;incl %ecx;cmpl %eax, ;pushl %esi": 1,
                "pushl $;pushl %eax;calll *;addl $, %esp;testl %eax, %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;pushl -(%ebp);movzbl %al, %esi": 1,
                "jmp - <.text+>;testb $, %al;jne  <.text+>;pushl %edi;pushl %edi": 1,
                "pushl %edi;xorl %edi, %edi;cmpw %di, (%esi);movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "pushl %edi;movl %eax, -(%ebp);movl %edi, -(%ebp);movl %esi, -(%ebp);movl $, (%esi)": 1,
                "movl %edi, -(%ebp);movl %esi, -(%ebp);movl $, (%esi);calll *;movl %eax, %ebx": 1,
                "popl %ecx;je  <.text+>;addl %ebx, %eax;cmpl $, %eax;jge  <.text+>": 1,
                "testb $, %al;jne  <.text+>;testl %edi, %edi;jne  <.text+>;leal -(%ebp), %eax": 1,
                "pushl %eax;pushl -(%ebp);calll *;testl %eax, %eax;je  <.text+>": 3,
                "pushl -(%ebp);calll *;testl %eax, %eax;je  <.text+>;movl -(%ebp), %esi": 1,
                "movl %ebx, -(%ebp);movl %ebx, -(%ebp);movw %bx, -(%ebp);movw %bx, -(%ebp);movl %eax, -(%ebp)": 1,
                "stosl %eax, %es:(%edi);movw %bx, -(%ebp);movw %bx, -(%ebp);movl (%ebp), %ecx;leal -(%ebp), %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl $;pushl %esi;calll *": 1,
                "pushl %eax;pushl $;pushl %esi;calll *;cmpl $, %eax": 1,
                "popl %ecx;popl %ecx;cmpl $, (%edi);jne  <.text+>;incl (%edi)": 1,
                "movl %ecx, -(%ebp);je  <.text+>;pushl %esi;calll *;movl %eax, -(%ebp)": 1,
                "pushl %esi;calll *;movl %eax, -(%ebp);movw (%esi), %ax;cmpw , %ax": 1,
                "je  <.text+>;movzwl -(%ebp), %ebx;xorl %eax, %eax;movw (%esi,%ebx,), %ax;pushl %eax": 1,
                "jne  <.text+>;orl $, (%edi);cmpw $, (%esi,%ebx,);jne  <.text+>;movl -(%ebp), %esi": 1,
                "retl $;cmpb $, -(%ebp);jne  <.text+>;orb $, (%edi);jmp - <.text+>": 1,
                "calll - <.text+>;cmpl $, ;jne - <.text+>;xorl %esi, %esi;cmpl %esi, %eax": 1,
                "jne  <.text+>;pushl $;pushl (%esi);calll - <.text+>;testl %eax, %eax": 2,
                "jmp - <.text+>;pushl %edi;movl , %edi;calll *%edi;cmpl $, %eax": 1,
                "je  <.text+>;popl %edi;jmp - <.text+>;pushl %edi;jmp - <.text+>": 1,
                "pushl %ebx;calll *;movl -(%ebp), %eax;testw %ax, %ax;popl %ecx": 1,
                "popl %ecx;je - <.text+>;movw %ax, (%edi);jmp - <.text+>;xorb %al, %al": 1,
                "movl %eax, %esi;jne  <.text+>;pushl %edi;calll - <.text+>;pushl $": 1,
                "pushl %edi;calll - <.text+>;pushl $;pushl ;calll - <.text+>": 1,
                "leal (%ecx,%eax,), %eax;pushl %esi;movl (%eax), %esi;andl $, (%eax);testl %esi, %esi": 1,
                "pushl (%esi);calll  <.text+>;movb (%esi), %al;movl , %edi;movb %al, ": 1,
                "pushl %eax;calll *%ebx;popl %edi;popl %ebx;popl %esi": 1,
                "calll - <.text+>;movl %eax, %edi;pushl %edi;pushl %edx;pushl ": 1,
                "pushl ;calll - <.text+>;testl %eax, %eax;je  <.text+>;movl %edi, ": 1,
                "popl %edi;popl %esi;popl %ebp;retl $;calll - <.text+>": 1,
                "cmpw %di, %ax;movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp);movl %edi, -(%ebp)": 1,
                "jmp  <.text+>;orw $, -(%ebp);jmp  <.text+>;orb $, -(%ebp);jmp  <.text+>": 1,
                "popl %ecx;popl %ecx;jne  <.text+>;xorl %eax, %eax;movw (%esi), %ax": 1,
                "movzwl %ax, %eax;cmpl $, %eax;popl %ecx;jg  <.text+>;je - <.text+>": 1,
                "testb %ch, %ch;jns  <.text+>;leal -(%ebp), %eax;cmpl %eax, %esi;jne  <.text+>": 1,
                "jne  <.text+>;testb $, %cl;movl , %edi;jne  <.text+>;cmpl %ebx, -(%ebp)": 1,
                "leal -(%ebp), %eax;movw %bx, (%esi);pushl %eax;calll  <.text+>;movl %eax, %edi": 1,
                "movl %eax, -(%ebp);movw (%eax), %dx;testw %dx, %dx;je  <.text+>;cmpw %cx, %dx": 1,
                "cmpw %cx, %dx;je  <.text+>;movw %cx, (%eax);movl -(%ebp), %eax;addl $, %eax": 1,
                "movl -(%ebp), %eax;addl $, %eax;movl %eax, -(%ebp);movl %eax, %ecx;leal -(%ebp), %edx": 1,
                "movl %eax, -(%ebp);movl %eax, %ecx;leal -(%ebp), %edx;subl %edx, %ecx;sarl %ecx": 1,
                "pushl %eax;calll *%edi;jmp - <.text+>;xorl %eax, %eax;jmp - <.text+>": 1,
                "je  <.text+>;cmpw $, %cx;je  <.text+>;movl %ebx, -(%ebp);movw (%eax), %cx": 1,
                "movl %eax, (%esi);cmpw $, (%edi);movl %ecx, %ebx;je - <.text+>;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;pushl %edi;pushl %eax;calll *;popl %ecx": 2,
                "pushl -(%ebp);pushl %esi;calll *;addl $, %esp;testl %eax, %eax": 1,
                "movl -(%ebp), %eax;incl %esi;incl %esi;cmpw $, -(%eax);jne - <.text+>": 1,
                "pushl -(%ebp);jne  <.text+>;pushl -(%ebp);calll *;movl -(%ebp), %eax": 1,
                "movl -(%ebp), %eax;leal (%eax,%ebx,), %eax;movl %eax, -(%ebp);movl -(%ebp), %eax;addl $, %esp": 1,
                "leal (%esi,%eax,), %esi;jmp - <.text+>;andl $, (%esi);jmp  <.text+>;pushl (%ebp)": 1,
                "jmp - <.text+>;andl $, (%esi);jmp  <.text+>;pushl (%ebp);leal (%edi), %eax": 1,
                "testl %eax, %eax;jne  <.text+>;movl (%edi), %edi;incl %ebx;cmpl $, %ebx": 1,
                "jmp - <.text+>;cmpw $-, -(%ebp);jne  <.text+>;jmp - <.text+>;orl $-, %eax": 1,
                "testl %eax, %eax;jne - <.text+>;pushl %edi;pushl %ebx;calll *": 1,
                "pushl %esi;calll *;popl %ecx;popl %ecx;leal -(%ebp), %eax": 1,
                "pushl %eax;movl %esi, (%eax);calll - <.text+>;movl -(%ebp), %ecx;movl (%ecx), %eax": 1,
                "calll *;addl -(%ebp), %eax;popl %ecx;cmpl %eax, -(%ebp);jae  <.text+>": 1,
                "popl %ecx;popl %ecx;movl -(%ebp), %eax;testb $, (%eax);jne  <.text+>": 1,
                "pushl (%ebp);movl %edi, (%eax,%ecx,);movl -(%ebp), %eax;pushl (%eax);calll - <.text+>": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je - <.text+>;jmp  <.text+>;testl %eax, %eax": 1,
                "testl %eax, %eax;movl $, -(%ebp);je  <.text+>;pushl %esi;pushl %edi": 1,
                "pushl %eax;calll  <.text+>;testl %eax, %eax;movl (%ebp), %edi;movl , %esi": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;movl (%eax), %eax;testb $, %ah;jne  <.text+>": 1,
                "jmp - <.text+>;cmpl $, ;je  <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx": 1,
                "movl (%esi), %eax;cmpl %ebx, %eax;pushl %edi;movl , %edi;movl %ebx, -(%ebp)": 1,
                "popl %ecx;movl %eax, %ebx;movl (%esi), %eax;addl $, %eax;je  <.text+>": 1,
                "calll *%edi;popl %ecx;movl (%esi), %ecx;testl %ecx, %ecx;je  <.text+>": 1,
                "je  <.text+>;movl (%ebp), %ecx;movl (%ecx), %eax;testb $-, %ah;jne  <.text+>": 1,
                "jne  <.text+>;cmpl $, %edx;jb  <.text+>;movl (%ebp), %edx;cmpw $, (%edx)": 1,
                "movl (%ebp), %eax;pushl %ebx;movl (%eax), %ebx;testl %ebx, %ebx;pushl %esi": 1,
                "movl (%ebp), %esi;pushl %edi;movl %eax, -(%ebp);movl %ecx, -(%ebp);movl %ebx, -(%ebp)": 1,
                "calll - <.text+>;cmpw $, (%eax);je  <.text+>;pushl (%ebp);pushl (%esi)": 1,
                "pushl %esi;movl (%ebp), %esi;pushl %edi;movl (%ebp), %edi;pushl %eax": 1,
                "calll *;movl -(%ebp), %eax;popl %ecx;popl %ecx;subl %edi, %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%ebx;leal (%eax,%esi), %eax;cmpl $, %eax": 1,
                "pushl %edi;movl (%ebp), %edi;movl %ecx, -(%ebp);je  <.text+>;movl (%ebp), %esi": 1,
                "cmpl (%ebp), %ecx;jae  <.text+>;movzwl %ax, %ecx;cmpl $, %ecx;je  <.text+>": 1,
                "jne - <.text+>;cmpl (%ebp), %ecx;jae  <.text+>;andw $, (%edi);xorl %eax, %eax": 1,
                "subl $, %esp;movl (%ebp), %ecx;andl $, -(%ebp);pushl %ebx;pushl %esi": 1,
                "pushl $;popl %edx;xorl %ebx, %ebx;movl %ecx, %eax;pushl $": 1,
                "pushl %eax;calll - <.text+>;testl %eax, %eax;je  <.text+>;movl -(%ebp), %ecx": 2,
                "calll *%esi;movl %eax, %edx;pushl %edx;movl %edx, ;calll - <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %edx;calll *;cmpl $, %eax": 1,
                "cmpl $, (%esi);je  <.text+>;pushl (%ebp);pushl $;calll - <.text+>": 1,
                "movl $, %ecx;jmp  <.text+>;movl $, %ecx;jmp  <.text+>;pushl (%esi)": 1,
                "rorb (%edx);outb %al, %dx;rorb (%edx);outb %al, %dx;rorb (%edx)": 1,
                "calll - <.text+>;movl (%esi), %eax;testl %eax, %eax;popl %ecx;popl %ecx": 1,
                "popl %ecx;je  <.text+>;pushl %eax;pushl %edi;calll - <.text+>": 1,
                "pushl $;calll *;movl (%esi), %ecx;leal (%ecx,%eax,), %eax;pushl %eax": 1,
                "movl (%esi), %ecx;leal (%ecx,%eax,), %eax;pushl %eax;pushl $;calll - <.text+>": 1,
                "pushl (%esi);pushl $;calll - <.text+>;movl (%esi), %esi;xorl %ecx, %ecx": 1,
                "addb %al, (%eax);testl %esi, %esi;jne - <.text+>;jmp - <.text+>;cmpb $, ": 1,
                "pushl (%esi);pushl %ecx;pushl (%esi);pushl $;calll - <.text+>": 1,
                "jmp - <.text+>;pushl %ecx;pushl %ebx;calll - <.text+>;movl (%esi), %esi": 1,
                "pushl %ecx;pushl %ebx;calll - <.text+>;movl (%esi), %esi;popl %ecx": 1,
                "movl %eax, -(%ebp);jne  <.text+>;cmpl %edi, -(%ebp);je  <.text+>;movl %edi, (%ebp)": 1,
                "jne  <.text+>;pushl %ebx;calll - <.text+>;testl %eax, %eax;je  <.text+>": 2,
                "calll - <.text+>;testl %eax, %eax;je - <.text+>;cmpl %ebx, -(%ebp);jne - <.text+>": 1,
                "jne - <.text+>;jmp  <.text+>;movb %bl, ;calll - <.text+>;pushl %ebx": 1,
                "andl $, %eax;pushl %eax;pushl (%ebp);pushl %edi;pushl %esi": 1,
                "pushl %edi;pushl %esi;calll  <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "pushl %esi;calll  <.text+>;testl %eax, %eax;je  <.text+>;movl -(%ebp), %ebx": 1,
                "movl %eax, -(%ebp);pushl %ebx;calll *;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl -(%ebp);pushl %esi;pushl %ebx;calll *": 1,
                "addb %ah, (%ebx);addb %ah, %fs:(%eax);addb %al, (%eax);addb %dl, (%ebx);movl , %esi": 1,
                "calll *;pushl %ebx;calll *%edi;pushl (%ebp);movl %eax, ": 1,
                "jne - <.text+>;movl $, (%ebp);movl %esi, -(%ebp);jmp - <.text+>;nop": 1,
                "pushl %esi;xorl %esi, %esi;cmpl %esi, ;movl %esi, -(%ebp);je  <.text+>": 1,
                "calll *%esi;testl %eax, %eax;je  <.text+>;movl $, %eax;cmpl %eax, -(%ebp)": 1,
                "pushl $;pushl %eax;calll *;movl %eax, ;jmp - <.text+>": 1,
                "jmp - <.text+>;decl %esi;je  <.text+>;jne  <.text+>;jb  <.text+>": 1,
                "je  <.text+>;outsl (%esi), %dx;outsb (%esi), %dx;pushl %eax;jb  <.text+>": 1,
                "movl , %eax;andw $, -(%ebp);pushl %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "movl %eax, %edi;movl %ebx, -(%ebp);jne  <.text+>;movl %ecx, (%esi);movw (%edi), %ax": 1,
                "movl %ecx, (%esi);movw (%edi), %ax;cmpw %cx, %ax;movl %ecx, -(%ebp);je  <.text+>": 1,
                "je  <.text+>;pushl %edi;calll *%esi;popl %ecx;leal (%eax), %ecx": 1,
                "je  <.text+>;testl %edi, %edi;je  <.text+>;pushl %edi;pushl %ebx": 1,
                "popl %ebp;retl $;xorl %eax, %eax;jmp - <.text+>;movw , %ax": 1,
                "popl %ebp;retl $;movl %eax, %edi;jmp - <.text+>;nop": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;xorl %ecx, %ecx;cmpl %ecx, (%ebp);movl %eax, -(%ebp)": 1,
                "cmpl %ecx, -(%ebp);jne  <.text+>;pushl %eax;pushl $;calll *": 1,
                "pushl %esi;pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "popl %edi;movl %esi, ;popl %esi;movl %eax, ;movl %eax, ": 1,
                "cmpl %eax, ;jl  <.text+>;movl %ecx, ;movl , %eax;movl , %ecx": 1,
                "testl %eax, %eax;jne  <.text+>;movl -(%ebp), %ecx;movl (%ecx), %eax;cmpl %esi, %eax": 1,
                "je  <.text+>;pushl $;pushl $;pushl %eax;pushl (%ecx)": 1,
                "cmpw %si, (%edi);jne - <.text+>;movl -(%ebp), %eax;movw %si, (%ebx);movl (%eax), %edi": 1,
                "movl %edi, -(%ebp);calll *;cmpl %esi, %eax;popl %ecx;popl %ecx": 1,
                "movl -(%ebp), %esi;movl (%eax), %eax;movl , %ebx;pushl $;pushl $": 1,
                "jne  <.text+>;movl -(%ebp), %eax;movl (%eax), %eax;movl (%eax,%esi), %eax;addl %edi, %eax": 1,
                "addl %edi, %eax;movl %eax, -(%ebp);movzwl (%eax), %eax;testw %ax, %ax;je  <.text+>": 1,
                "movl (%ecx,%eax), %edi;jne  <.text+>;pushl (%ebp);pushl (%ebp);pushl %edi": 1,
                "pushl %ebx;addl $, %eax;pushl %eax;pushl %edi;calll *": 1,
                "addl $, %esp;cmpb $, (%ebp);leal (%edi,%ebx,), %eax;jne  <.text+>;andw $, (%eax)": 1,
                "incl -(%ebp);incl -(%ebp);movl -(%ebp), %eax;cmpl -(%ebp), %eax;jl - <.text+>": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;je - <.text+>;jmp - <.text+>": 1,
                "movw , %ax;pushl %esi;movl (%ebp), %esi;pushl %edi;xorl %ebx, %ebx": 1,
                "calll - <.text+>;testl %eax, %eax;movl (%ebp), %edi;jne  <.text+>;movl (%edi), %eax": 1,
                "subl $, %esp;andl $, -(%ebp);pushl %ebx;pushl %esi;movl (%ebp), %esi": 1,
                "andl $, -(%ebp);pushl %ebx;pushl %esi;movl (%ebp), %esi;pushl %edi": 1,
                "pushl $;calll - <.text+>;testl %eax, %eax;jne  <.text+>;leal -(%ebp), %eax": 1,
                "addl %eax, (%esi);cmpl %edi, -(%ebp);movl (%esi), %eax;jne  <.text+>;incl %eax": 1,
                "calll  <.text+>;movl %eax, -(%ebp);movl -(%ebp), %eax;movl -(%ebp), %ecx;popl %edi": 1,
                "testb $, (%ebp);je  <.text+>;cmpl $, -(%ebp);je  <.text+>;pushl -(%ebp)": 1,
                "je  <.text+>;cmpl $, -(%ebp);je  <.text+>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "cmpw $, (%eax);je  <.text+>;pushl $;pushl %ebx;calll  <.text+>": 1,
                "jne  <.text+>;pushl %ebx;calll - <.text+>;movl -(%ebp), %ecx;popl %edi": 1,
                "pushl $;pushl %eax;calll *;movl %eax, %edi;movl (%esi), %eax": 1,
                "movl %eax, -(%ebp);movl (%ebp), %eax;testl %eax, %eax;pushl %esi;movl (%ebp), %esi": 1,
                "pushl %esi;calll - <.text+>;movl -(%ebp), %ecx;negl %eax;sbbl %eax, %eax": 1,
                "calll - <.text+>;movl -(%ebp), %ecx;negl %eax;sbbl %eax, %eax;negl %eax": 1,
                "sbbl %eax, %eax;pushl %edi;movl (%ebp), %edi;movl (%edi), %edx;movl (%edi), %ebx": 1,
                "je  <.text+>;xorl %eax, %eax;popl %edi;popl %esi;popl %ebx": 1,
                "popl %ecx;leal (%eax,%eax), %eax;pushl %eax;calll - <.text+>;cmpl %edi, %eax": 1,
                "pushl -(%ebp);calll *;popl %ecx;popl %ecx;pushl $": 1,
                "movb %cl, -(%ebp);movl %edi, -(%ebp);jne  <.text+>;movl $, (%eax);pushl (%esi)": 1,
                "movl %edi, (%ebp);jbe  <.text+>;movl -(%ebp), %eax;movl (%ebp), %ecx;movl (%eax,%ecx,), %edi": 1,
                "xorl %edi, %edi;pushl -(%ebp);calll - <.text+>;pushl -(%ebp);calll - <.text+>": 1,
                "pushl -(%ebp);calll - <.text+>;pushl -(%ebp);calll - <.text+>;pushl -(%ebp)": 1,
                "cmpl $, %ebx;ja  <.text+>;pushl $;popl %ecx;xorl %eax, %eax": 1,
                "popl %ecx;xorl %eax, %eax;leal -(%ebp), %edi;rep  stosl %eax, %es:(%edi);leal (%ebx,%ebx), %eax": 1,
                "movl %eax, %ebx;leal -(%ebp), %eax;pushl %eax;pushl $;calll *%esi": 1,
                "calll - <.text+>;leave;retl $;nop;incl %esp": 1,
                "addb %al, (%ebx);decl %ebp;addb %al, (%eax,%eax);addb %dl, -(%eax);movl %edi, %edi": 1,
                "pushl %eax;calll  <.text+>;xorl %edi, %edi;incl %edi;cmpl %edi, %eax": 1,
                "leal -(%ebp), %eax;pushl %edi;movl %ebx, -(%ebp);movl , %ebx;pushl %eax": 1,
                "movl , %ebx;pushl %eax;calll *%ebx;leal -(%ebp), %eax;pushl %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%ebx;popl %ecx;popl %ecx": 2,
                "pushl %eax;pushl (%esi);movl %ecx, (%esi);pushl (%esi);movl %ecx, (%esi)": 1,
                "pushl %edi;movl %ecx, (%esi);calll - <.text+>;testl %eax, %eax;movl %eax, -(%ebp)": 1,
                "pushl (%edi);calll - <.text+>;cmpl $, (%edi);movl (%edi), %ebx;movl $, -(%ebp)": 1,
                "cmpl $, (%edi);movl (%edi), %ebx;movl $, -(%ebp);jb  <.text+>;movl (%ebx), %eax": 1,
                "je - <.text+>;jmp - <.text+>;cmpl $, ;je  <.text+>;jmp - <.text+>": 1,
                "jne  <.text+>;cmpb $, -(%ebp);jne  <.text+>;orl $, (%esi);cmpw $, (%edi,%ebx,)": 1,
                "movl %eax, (%esi);xorl %eax, %eax;pushl %esi;movl %edi, (%esi);movl %eax, (%esi)": 1,
                "popl %edi;movl %esi, (%eax);popl %esi;xorl %eax, %eax;popl %ebx": 1,
                "pushl %esi;pushl %edi;movl (%ebp), %edi;movl (%edi), %eax;testl %eax, %eax": 1,
                "jne  <.text+>;cmpb $, -(%ebp);jne  <.text+>;orl $, (%esi);jmp - <.text+>": 1,
                "movl , %eax;andl $, -(%ebp);cmpl $, (%ebp);movl %eax, -(%ebp);movl (%ebp), %eax": 1,
                "andl $, -(%ebp);cmpl $, (%ebp);movl %eax, -(%ebp);movl (%ebp), %eax;pushl %esi": 1,
                "je  <.text+>;pushl %edi;calll *%esi;cmpl $, %eax;popl %ecx": 1,
                "orl $, %eax;pushl %eax;pushl -(%ebp);movb $, -(%ebp);calll *": 2,
                "calll *;calll *%edi;pushl $-;calll *%ebx;leal -(%ebp), %ecx": 1,
                "pushl %eax;pushl $;leal -(%ebp), %eax;pushl %eax;pushl $-": 2,
                "testb $, ;jne - <.text+>;jmp  <.text+>;nop;nop": 1,
                "nop;nop;cmpb $, %al;outsb (%esi), %dx;addb %ch, (%edi)": 1,
                "movl %eax, -(%ebp);pushl %eax;pushl $;calll *;movl %eax, ": 1,
                "movl , %eax;addl $, %eax;pushl $;pushl %eax;calll *": 2,
                "addl $, %eax;pushl %eax;calll *;addl $, %esp;jmp - <.text+>": 2,
                "je  <.text+>;pushl %ebx;calll - <.text+>;movl %eax, %esi;negl %esi": 1,
                "calll - <.text+>;jmp - <.text+>;calll - <.text+>;cmpb $, ;jne  <.text+>": 1,
                "movl %eax, -(%ebp);jmp - <.text+>;xorl %edi, %edi;jmp - <.text+>;pushl -(%ebp)": 1,
                "jmp - <.text+>;xorl %edi, %edi;jmp - <.text+>;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "calll - <.text+>;movl %ebx, ;cmpl %ebx, ;jne  <.text+>;movl , %eax": 1,
                "retl;calll - <.text+>;jmp - <.text+>;nop;nop": 1,
                "cmpl %edi, %esi;jne  <.text+>;cmpl %edi, %eax;jne  <.text+>;movl %edi, ": 1,
                "cmpl %edi, %eax;jne  <.text+>;movl %edi, ;movl %edi, ;movl %edi, ": 1,
                "movl %edi, ;popl %edi;popl %esi;retl;nop": 1,
                "pushl %esi;calll - <.text+>;testb %al, %al;je  <.text+>;testb $, -(%ebp)": 1,
                "popl %ecx;pushl %eax;calll *-(%ebp);cmpl %ebx, %eax;movl %eax, -(%ebp)": 1,
                "incl %esi;pushl %edi;movl %eax, -(%ebp);movl %edi, -(%ebp);movl %ebx, -(%ebp)": 1,
                "movl %esi, -(%ebp);calll - <.text+>;cmpl $-, %eax;movl %eax, -(%ebp);je  <.text+>": 1,
                "calll *;movl %esi, -(%ebp);cmpl %ebx, ;jne  <.text+>;pushl %ebx": 1,
                "cmpb %bl, (%ecx);jne  <.text+>;incl %eax;decl -(%ebp);jne - <.text+>": 1,
                "movl $, %edi;pushl %edi;leal -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "pushl %eax;pushl %ebx;pushl ;calll *;cmpl %ebx, %eax": 1,
                "jle - <.text+>;cmpl %ebx, ;jne  <.text+>;pushl $;calll - <.text+>": 1,
                "jne  <.text+>;pushl $;calll - <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "je  <.text+>;movl -(%ebp), %ecx;cmpl %esi, %ecx;jne  <.text+>;subl %ecx, -(%ebp)": 1,
                "pushl -(%ebp);calll *;popl %ecx;pushl %eax;calll *": 4,
                "pushl %esi;pushl %edi;je  <.text+>;movl (%ebp), %esi;movl (%ebp), %edi": 1,
                "cmpl %ecx, %eax;jae  <.text+>;movb (%eax), %dl;movb %dl, (%ebp);movzbl %dl, %edx": 1,
                "jne  <.text+>;cmpb $, (%ebp);je  <.text+>;incl %eax;jmp - <.text+>": 1,
                "orl $-, %eax;popl %edi;popl %esi;popl %ebx;popl %ebp": 1,
                "movl $, (%ebp);jmp - <.text+>;pushl $;popl %eax;movl %eax, -(%ebp)": 1,
                "andl $, -(%ebp);jmp - <.text+>;movl , %ebx;xorl %edi, %edi;cmpl %esi, ": 1,
                "cmpl %esi, ;jle  <.text+>;movl , %eax;pushl (%eax,%edi,);calll *%ebx": 1,
                "movw %cx, -(%ebp,%esi,);jmp - <.text+>;decl ;js  <.text+>;jmp - <.text+>": 1,
                "movw %ax, ;cmpw %bx, ;je - <.text+>;xorl %eax, %eax;movw , %ax": 1,
                "movl (%ebp), %ebx;movl %ebx, %eax;shrl $, %eax;xorb %bl, %al;testb $, %al": 1,
                "movl %ebx, %eax;shrl $, %eax;xorb %bl, %al;testb $, %al;je  <.text+>": 1,
                "shrl $, %eax;xorb %bl, %al;testb $, %al;je  <.text+>;pushl %esi": 1,
                "andw $, (%ebp);leal -(%ebp), %eax;pushl %eax;movswl -(%ebp), %eax;pushl (%ebp)": 1,
                "pushl %eax;movswl -(%ebp), %eax;pushl (%ebp);imull %ecx, %eax;pushl %eax": 1,
                "xorl %eax, %eax;incl %eax;jmp - <.text+>;pushl $;leal -(%ebp), %eax": 1,
                "nop;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;calll *": 1,
                "jne - <.text+>;movl (%ebp), %eax;movl -(%ebp), %ecx;movl %ecx, (%eax);movl %esi, (%eax)": 1,
                "pushl $;pushl %eax;calll *;movl , %ecx;movl -(%ebp), %edx": 1,
                "testb $, -(%ebp);je  <.text+>;movl $, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp)": 1,
                "movl %ebx, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll *;movl %eax, -(%ebp)": 1,
                "leal -(%eax), %edx;movw (%edx), %si;cmpw $, %si;je  <.text+>;cmpw $, %si": 1,
                "jne - <.text+>;jmp - <.text+>;xorl %eax, %eax;incl %eax;jmp - <.text+>": 1,
                "pushl %eax;pushl $;calll - <.text+>;popl %edx;popl %ecx": 2,
                "pushl %edi;pushl %eax;movl %eax, -(%ebp);calll *%ebx;addl $, %esp": 2,
                "jmp - <.text+>;orl $, (%esi);jmp - <.text+>;calll  <.text+>;jmp - <.text+>": 2,
                "cmpl $, ;popl %ecx;popl %ecx;jne - <.text+>;cmpl %esi, ": 1,
                "popl %ecx;jne  <.text+>;jmp  <.text+>;movw (%esi), %ax;cmpw %dx, %ax": 1,
                "testw %ax, %ax;jne  <.text+>;jmp - <.text+>;pushl $;jmp  <.text+>": 1,
                "pushl (%ebx);calll  <.text+>;cmpw $, (%eax);jne - <.text+>;pushl $": 1,
                "je  <.text+>;incl %edi;incl %edi;testb $, (%esi);je - <.text+>": 1,
                "popl %ebp;retl $;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "testb $, (%ebx);je  <.text+>;jmp - <.text+>;cmpl $-, -(%ebp);je  <.text+>": 1,
                "pushl %eax;calll - <.text+>;jmp  <.text+>;movl %edi, %eax;jmp - <.text+>": 1,
                "testl %eax, (%eax);xchgl %esp, %eax;movl (%eax), %eax;pushl %eax;retl": 1,
                "movl %eax, %ebx;movl (%esp), %ecx;movl (%esp), %edx;movl (%esp), %eax;shrl %ebx": 1,
                "rcrl %ecx;shrl %edx;rcrl %eax;orl %ebx, %ebx;jne - <.text+>": 1,
                "mull (%esp);movl %eax, %ecx;movl (%esp), %eax;mull %esi;addl %ecx, %edx": 2,
                "decl %esi;xorl %edx, %edx;movl %esi, %eax;decl %edi;jne  <.text+>": 1,
                "decl %edi;jne  <.text+>;negl %edx;negl %eax;sbbl $, %edx": 1,
                "divl %ecx;movl %eax, %esi;movl %ebx, %eax;mull (%esp);movl %eax, %ecx": 1,
                "subl (%esp), %eax;sbbl (%esp), %edx;xorl %ebx, %ebx;subl (%esp), %eax;sbbl (%esp), %edx": 1,
                "calll - <.text+>;popl %ecx;popl %ecx;jmp - <.text+>;movl , %eax": 2,
                "incl %esi;incl %esi;xorl %eax, %eax;movw (%esi), %ax;pushl %eax": 1,
                "movl (%eax), %eax;movl (%eax), %eax;movl %eax, ;xorl %eax, %eax;incl %eax": 5,
                "testl %eax, %eax;pushl $;jne  <.text+>;pushl $;calll - <.text+>": 1,
                "cmpl $, %eax;jne - <.text+>;jmp  <.text+>;pushl $;calll - <.text+>": 1,
                "sbbl %eax, %eax;addl $, %eax;pushl %edi;pushl %eax;calll - <.text+>": 1,
                "addl $, %eax;pushl %edi;pushl %eax;calll - <.text+>;movl %eax, %esi": 1,
                "jmp - <.text+>;movl , %eax;andl $, ;movl %eax, ;movl , %eax": 1,
                "jmp - <.text+>;xorl %eax, %eax;jmp - <.text+>;movl %ebx, (%ecx);xorl %eax, %eax": 1,
                "jmp - <.text+>;movl %ebx, (%ecx);xorl %eax, %eax;jmp - <.text+>;movzwl (%edi), %edi": 1,
                "movl , %eax;shll $, %edi;movl (%edi,%eax), %eax;testl %eax, %eax;je  <.text+>": 1,
                "movl (%edi,%eax), %eax;testl %eax, %eax;je  <.text+>;pushl %eax;calll *": 1,
                "movl %eax, (%ebp);addl %ebx, %eax;cmpl $, %eax;jg - <.text+>;testl %esi, %esi": 1,
                "jmp - <.text+>;calll *;jmp - <.text+>;pushl $;pushl %esi": 1,
                "calll *;jmp - <.text+>;pushl $;pushl %esi;calll *%edi": 1,
                "jne  <.text+>;movb $, ;jmp - <.text+>;pushl $;pushl %esi": 1,
                "subl $, -(%ebp);incl %esi;incl %esi;jmp - <.text+>;pushl %ebx": 1,
                "incl %esi;pushl %esi;pushl (%ebp);calll *;testl %eax, %eax": 1,
                "jmp - <.text+>;pushl $;pushl (%ebp);pushl (%ebp);pushl (%ebp)": 1,
                "pushl (%ebp);pushl (%ebp);pushl (%ebp);pushl (%ebp);calll *": 1,
                "jmp - <.text+>;pushl (%ebp);leal (%edi), %eax;pushl %ebx;pushl %eax": 1,
                "movl (%edi), %eax;pushl %ebx;pushl $;movl %eax, ;calll - <.text+>": 1,
                "sarl %esi;pushl %esi;pushl %eax;jmp - <.text+>;cmpl %ebx, -(%ebp)": 1,
                "pushl %eax;jmp - <.text+>;cmpl %ebx, -(%ebp);je  <.text+>;pushl %ebx": 1,
                "calll - <.text+>;addl $, %esp;movl %esi, -(%ebp);jmp - <.text+>;leal -(%ebp), %eax": 1,
                "movl %esi, -(%ebp);jmp - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl ": 1,
                "incl %ecx;incl %ecx;movl %ecx, -(%ebp);movw (%ecx), %ax;testw %ax, %ax": 1,
                "movl -(%ebp), %eax;addl $, %eax;movl %eax, %esi;jmp  <.text+>;cmpw %bx, %cx": 1,
                "jne  <.text+>;cmpw %bx, (%eax);jne  <.text+>;incl %eax;incl %eax": 1,
                "sarl %eax;leal (%eax,%eax), %eax;pushl %eax;calll - <.text+>;movl %eax, %ebx": 1,
                "je - <.text+>;addl $, -(%ebp);jmp - <.text+>;addl $, -(%ebp);pushl %eax": 1,
                "leal -(%ecx,%ebx), %eax;movl %ebx, -(%ebp);movl %eax, -(%ebp);jmp - <.text+>;cmpw $, %ax": 1,
                "jmp - <.text+>;movl -(%ebp), %ebx;jmp - <.text+>;pushl %ebx;pushl $": 1,
                "addl $, %esp;calll *;jmp - <.text+>;pushl %ebx;pushl $": 1,
                "jmp - <.text+>;pushl %eax;pushl $;calll - <.text+>;popl %ecx": 4,
                "pushl %eax;calll *;jmp - <.text+>;pushl %esi;calll *%edi": 1,
                "movl %eax, %ebx;testl %ebx, %ebx;je  <.text+>;cmpw $, (%esi);movl %esi, %edx": 1,
                "calll *;movl , %esi;movl $, (%esp);pushl %edi;calll *%esi": 1,
                "incl %ebx;jmp - <.text+>;movl (%esi), %eax;cmpl %edi, %eax;jne  <.text+>": 1,
                "cmpl %edi, %eax;jne  <.text+>;movl $, %eax;pushl %eax;calll - <.text+>": 1,
                "movl %esi, -(%ebp);jmp - <.text+>;leal (%eax,%eax), %eax;pushl %eax;calll - <.text+>": 1,
                "movl , %eax;movl %edi, (%eax,%esi,);jmp - <.text+>;pushl %ecx;calll *": 1,
                "movl %edi, (%eax,%esi,);jmp - <.text+>;pushl %ecx;calll *;popl %ecx": 1,
                "nop;addb %bl, %cs:(%eax,%eax);addb %ch, (%eax);subb %cl, %dl;decl %edx": 1,
                "jmp - <.text+>;nop;subb $, %al;addb %al, (%eax);pushl %ebx": 1,
                "pushl $;addb %dl, (%edi);addb %ah, %gs:(%eax,%eax);addb %dl, (%eax,%eax);addb %ah, (%ebp)": 1,
                "addb %ah, (%ebp);addb %al, (%eax);decl %ebp;addb %ch, (%edi);outsb (%esi), %dx": 1,
                "addb %al, (%eax);addb %ah, (%eax,%eax);addb %ch, (%edi);addb %cl, (%ebp);decl %ebp": 1,
                "leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax;leal -(%ebp), %edi;pushl %eax": 1,
                "pushl ;leal -(%ebp), %eax;pushl %eax;calll *;popl %ecx": 1,
                "jmp - <.text+>;cmpw $, %dx;jne  <.text+>;andl $, -(%ebp);cmpl $, %ecx": 1,
                "jmp  <.text+>;pushl %ebx;jmp  <.text+>;cmpl $, (%ebp);movzwl -(%ebp), %esi": 1,
                "movzwl -(%ebp), %esi;movzwl -(%ebp), %edi;movzwl -(%ebp), %ebx;jne  <.text+>;pushl $": 1,
                "jne  <.text+>;movl %esi, %eax;movl %edi, %esi;movl %eax, %edi;cmpl $, ": 1,
                "movl $, ;pushl %ebx;movl $, %eax;pushl %eax;pushl %edi": 1,
                "pushl $;pushl ;calll *;addl $, %esp;xorl %ebx, %ebx": 1,
                "pushl $;pushl %edi;calll *%esi;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;pushl %edi;calll *%esi;movl , %esi;pushl $": 1,
                "jmp - <.text+>;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll  <.text+>": 1,
                "idivl %ecx;testl %edi, %edi;movzwl -(%ebp), %ecx;pushl %eax;movzwl -(%ebp), %eax": 1,
                "popl %ecx;cmpl %ecx, %eax;jb  <.text+>;jbe  <.text+>;subl %ecx, %eax": 1,
                "cmpl %ecx, %eax;jb  <.text+>;jbe  <.text+>;subl %ecx, %eax;movl $, %edx": 1,
                "subl %ecx, %eax;movl $, %edx;jmp  <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "pushl %ebx;pushl $;pushl %ebx;calll - <.text+>;pushl $": 2,
                "pushl %eax;calll - <.text+>;jmp  <.text+>;pushl %ebx;pushl %esi": 1,
                "pushl %eax;jmp - <.text+>;movl , %eax;pushl $;addl $, %eax": 1,
                "calll - <.text+>;popl %ecx;popl %ecx;jmp - <.text+>;pushl $": 6,
                "jmp - <.text+>;cmpw $, %ax;ja  <.text+>;addl %ebx, %esi;movw (%esi), %ax": 1,
                "calll  <.text+>;jmp - <.text+>;pushl $;pushl $;pushl (%eax)": 1,
                "movl %eax, %edi;xorl %eax, %eax;cmpw %ax, (%edi);je - <.text+>;movl , %ebx": 1,
                "cmpl %eax, %esi;je  <.text+>;pushl %esi;calll *%ebx;popl %ecx": 1,
                "popl %ecx;jmp  <.text+>;xorl %eax, %eax;pushl %eax;calll *%ebx": 3,
                "jmp  <.text+>;xorl %eax, %eax;testl %eax, %eax;je  <.text+>;movl (%ebp), %eax": 1,
                "je  <.text+>;movl (%ebp), %eax;pushl $;addl $, %eax;pushl %eax": 1,
                "pushl %ecx;movl $, %esi;pushl %esi;pushl %ebx;pushl %ebx": 1,
                "jmp - <.text+>;pushl ;calll - <.text+>;movl %eax, ;movl %eax, -(%ebp)": 1,
                "pushl ;calll - <.text+>;movl %eax, ;movl %eax, -(%ebp);jmp - <.text+>": 1,
                "jmp - <.text+>;pushl $;calll - <.text+>;movl %eax, %esi;cmpl %ebx, %esi": 1,
                "leal (%ebx), %eax;jmp - <.text+>;cmpl %ebx, %eax;jne - <.text+>;xorl %ebx, %ebx": 1,
                "jmp - <.text+>;pushl -(%ebp);calll *;cmpl $-, %eax;je - <.text+>": 1,
                "pushl $-;movl %eax, %esi;calll *;cmpl $, %esi;je - <.text+>": 1,
                "popl %ecx;je  <.text+>;testb $, -(%ebp);jne  <.text+>;pushl -(%ebp)": 1,
                "calll *;addl $, %esp;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 4,
                "movl (%edi), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;pushl %eax;calll *%esi": 1,
                "pushl -(%ebp);movl %eax, %esi;calll *;cmpl $, -(%ebp);jne  <.text+>": 1,
                "jmp - <.text+>;pushl %esi;pushl $;pushl %edi;calll *": 1,
                "jne  <.text+>;pushl $;pushl $;pushl (%ebp);calll - <.text+>": 2,
                "popl %ecx;popl %ecx;movl -(%ebp), %ecx;leal (%eax,%ecx), %eax;cmpl $, %eax": 2,
                "calll *%edi;popl %ecx;jmp  <.text+>;xorl %eax, %eax;andw $, -(%ebx,%eax,)": 1,
                "jmp  <.text+>;xorl %eax, %eax;andw $, -(%ebx,%eax,);jmp - <.text+>;calll *": 1,
                "movl %eax, -(%ebp);pushl %eax;pushl %esi;calll - <.text+>;movzbl %al, %eax": 1,
                "testl %eax, %eax;jne - <.text+>;movl , %eax;cmpl $, %eax;jne  <.text+>": 1,
                "popl %ecx;jmp - <.text+>;cmpl $, %eax;jne  <.text+>;movl $, %eax": 1,
                "pushl %eax;movl %eax, -(%ebp);calll - <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "calll *;jmp - <.text+>;pushl -(%ebp);movl -(%ebp), %eax;pushl -(%ebp)": 1,
                "je - <.text+>;movl -(%ebp), %ebx;movl -(%ebp), %ecx;jmp - <.text+>;pushl -(%ebp)": 1,
                "calll - <.text+>;movl %esi, %eax;jmp - <.text+>;pushl -(%ebp);pushl $": 1,
                "jmp - <.text+>;pushl -(%ebp);pushl $;calll - <.text+>;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll - <.text+>;cmpl $-, %eax;movl %eax, -(%ebp)": 1,
                "je  <.text+>;incl -(%ebp);movl -(%ebp), %eax;movl %eax, -(%ebp);jmp - <.text+>": 1,
                "jmp - <.text+>;movl %edi, %eax;movl %eax, -(%ebp);jmp - <.text+>;pushl -(%ebp)": 1,
                "calll *;popl %ecx;pushl %eax;calll *;movl -(%ebp), %ecx": 1,
                "popl %ecx;pushl %eax;calll *;movl -(%ebp), %ecx;subl %ecx, -(%ebp)": 1,
                "cmpl %ebx, -(%ebp);je  <.text+>;movw (%edi,%esi,), %ax;movw %ax, -(%ebp);movw %bx, (%edi,%esi,)": 1,
                "movw %ax, (%edi,%esi,);movl -(%ebp), %ecx;movl %ecx, %eax;shrl %eax;subl %eax, -(%ebp)": 1,
                "popl %ecx;jmp - <.text+>;pushl -(%ebp);calll - <.text+>;movl %esi, %ebx": 1,
                "calll - <.text+>;pushl -(%ebp);calll - <.text+>;xorl %ebx, %ebx;incl %ebx": 1,
                "pushl %eax;calll *;decl %eax;negl %eax;sbbb %al, %al": 3,
                "sbbb %al, %al;popl %ecx;incb %al;jmp - <.text+>;cmpl $, (%ebp)": 1,
                "jmp - <.text+>;cmpl $, (%ebp);jne  <.text+>;pushl %esi;leal -(%ebp), %eax": 2,
                "testl %eax, %eax;je  <.text+>;leal -(%ebp), %eax;pushl %esi;pushl %eax": 1,
                "jmp  <.text+>;andw $, -(%ebp);xorl %esi, %esi;jmp - <.text+>;movl , %esi": 1,
                "je  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %eax;calll *%esi": 1,
                "jmp - <.text+>;cmpl $, ;je - <.text+>;movl , %eax;addl $, %eax": 1,
                "movb $, ;jmp - <.text+>;movb $, ;jmp - <.text+>;cmpw , %ax": 1,
                "pushl $;pushl %ebx;calll *;addl $, %esp;testl %eax, %eax": 3,
                "jmp  <.text+>;movb $, ;jmp  <.text+>;cmpw $, %ax;jne  <.text+>": 1,
                "popl %ecx;movl -(%ebp), %eax;andl $, (%eax);andl $, (%eax);jmp - <.text+>": 1,
                "movb %al, ;leal (%esi), %eax;jmp - <.text+>;movb $, ;pushl $": 1,
                "popl %ecx;je - <.text+>;xorl %eax, %eax;movw (%esi), %ax;pushl %eax": 2,
                "shlw $, %ax;movw %ax, ;xorl %eax, %eax;movw (%esi), %ax;pushl %eax": 1,
                "leal (%esi), %eax;testl %eax, %eax;je - <.text+>;pushl %eax;leal (%esi), %eax": 1,
                "xorl %esi, %esi;cmpl %esi, ;jne  <.text+>;pushl %esi;pushl $": 1,
                "cmpb (%eax), %al;decl %edi;addb %cl, (%esi);addb %al, (%eax);pushl %eax": 1,
                "calll - <.text+>;jmp - <.text+>;pushl $;pushl %eax;calll *": 1,
                "popl %ecx;popl %ecx;jne - <.text+>;movl $, ;jmp - <.text+>": 1,
                "pushl $;pushl %edi;calll - <.text+>;jmp - <.text+>;movl , %eax": 1,
                "leal -(%ebp), %ecx;addl %edx, %eax;pushl %ecx;pushl %eax;movl %eax, -(%ebp)": 1,
                "cmpl %eax, -(%ebp);popl %ecx;jge  <.text+>;jmp  <.text+>;leal (%edi,%ebx,), %ebx": 1,
                "sarl %eax;movl %eax, (%ecx);jmp - <.text+>;addl %edx, %eax;movl %eax, -(%ebp)": 1,
                "pushl $-;pushl -(%ebp);calll *;addl %edx, %eax;movl %eax, -(%ebp)": 1,
                "pushl %eax;leal (%edi,%ebx,), %eax;pushl %eax;calll *;addl $, %esp": 1,
                "je  <.text+>;decl %eax;je  <.text+>;subl $, %eax;je  <.text+>": 3,
                "jne  <.text+>;orb $, -(%ebp);jmp - <.text+>;orw $, -(%ebp);jmp - <.text+>": 1,
                "xorl %eax, %eax;jmp - <.text+>;movl -(%ebp), %eax;movl -(%ebp), %esi;movl %eax, -(%ebp)": 1,
                "jmp - <.text+>;addl $, %edi;pushl %edi;calll - <.text+>;movl %eax, %edi": 1,
                "pushl %eax;pushl $;pushl $;pushl %edi;pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;xorl %ebx, %ebx;pushl %ebx;leal -(%ebp), %eax": 1,
                "pushl %eax;calll *;testl %eax, %eax;je - <.text+>;testb $, -(%ebp)": 1,
                "je - <.text+>;testb $, -(%ebp);je  <.text+>;movl , %eax;cmpw %bx, %ax": 1,
                "cmpw %bx, %ax;jne - <.text+>;testb $, -(%ebp);je  <.text+>;leal -(%ebp), %eax": 1,
                "leal (%esi,%eax,), %esi;testb $, -(%ebp);je - <.text+>;leal -(%ebp), %eax;cmpl %eax, %esi": 1,
                "testb $, -(%ebp);je - <.text+>;leal -(%ebp), %eax;cmpl %eax, %esi;je  <.text+>": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *%edi;subl $, -(%ebp);popl %ecx": 1,
                "subl $, -(%ebp);popl %ecx;popl %ecx;jmp - <.text+>;pushl -(%ebp)": 1,
                "leal -(%ebp), %eax;pushl %eax;movl -(%ebp), %eax;pushl $;leal (,%eax,), %eax": 1,
                "pushl %eax;movl -(%ebp), %eax;pushl $;leal (,%eax,), %eax;pushl %eax": 1,
                "jne  <.text+>;calll *;cmpl $, %eax;jne - <.text+>;cmpl %ebx, -(%ebp)": 1,
                "cmpl %ebx, ;je  <.text+>;incl -(%ebp);movw $, ;jmp - <.text+>": 1,
                "calll - <.text+>;jmp - <.text+>;andl $, ;testb $, (%esi);je  <.text+>": 1,
                "popl %ecx;jmp  <.text+>;xorl %eax, %eax;movl -(%ebp), %ecx;addl %ecx, %eax": 1,
                "movl %eax, %edi;testl %edi, %edi;jne  <.text+>;pushl %eax;pushl $": 1,
                "movl (%esi), %eax;testl %eax, %eax;je  <.text+>;testl %edi, %edi;je  <.text+>": 1,
                "pushl $;pushl $;pushl (%ebp);movl $, -(%ebp);calll *": 1,
                "jmp - <.text+>;incl %esp;addb %ch, (%ecx);jae  <.text+>;popal": 1,
                "jmp  <.text+>;movl , %eax;movl %eax, -(%ebp);jmp - <.text+>;movl %ebx, (%esi)": 1,
                "pushl $;jmp  <.text+>;pushl %esi;calll *;pushl %eax": 1,
                "pushl %esi;calll *;pushl %eax;calll - <.text+>;popl %ecx": 2,
                "calll - <.text+>;xorl %eax, %eax;jmp - <.text+>;xorl %eax, %eax;jmp - <.text+>": 1,
                "jne - <.text+>;calll - <.text+>;movl %eax, %esi;testl %esi, %esi;je - <.text+>": 1,
                "pushl %ebx;calll  <.text+>;pushl $;calll - <.text+>;movl %esi, -(%ebp)": 1,
                "calll  <.text+>;pushl $;calll - <.text+>;movl %esi, -(%ebp);cmpl %ebx, ": 1,
                "movl (%ebp), %eax;shrl $, %eax;andl $, %eax;addl $, %eax;movl %eax, -(%ebp)": 1,
                "popl %ecx;xorl %eax, %eax;jmp - <.text+>;pushl %eax;pushl $": 1,
                "jmp - <.text+>;calll  <.text+>;pushl %eax;pushl $;calll - <.text+>": 1,
                "pushl (%eax);calll - <.text+>;movl , %eax;movl (%eax), %ecx;cmpl %edi, %ecx": 1,
                "subl %esi, %ecx;sarl %ecx;jmp  <.text+>;subl %edx, %ecx;incl %ebx": 1,
                "testl %eax, %eax;je - <.text+>;jmp - <.text+>;cmpl $, %eax;ja - <.text+>": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl %eax;movl %eax, (%esi);calll *%edi": 1,
                "testl %eax, %eax;jne - <.text+>;andl %eax, (%esi);jmp - <.text+>;movl , %edi": 1,
                "calll *%edi;popl %ecx;movl %eax, %ecx;movswl -(%ebp), %eax;addl %eax, %ecx": 1,
                "calll *%edi;movl %eax, %edi;movswl -(%ebp), %eax;addl %eax, %edi;jmp - <.text+>": 1,
                "pushl $;calll  <.text+>;andl $, (%esi);pushl %esi;calll - <.text+>": 1,
                "testl %eax, %eax;je  <.text+>;movl (%esi), %edi;movl (%esi), %eax;leal (%edi,%eax,), %eax": 1,
                "movl (%esi), %eax;leal (%edi,%eax,), %eax;movl %eax, -(%ebp);jmp  <.text+>;cmpl %eax, %edi": 1,
                "jne  <.text+>;incl %ebx;incl %ebx;cmpl -(%ebp), %ebx;jb - <.text+>": 1,
                "incl %ebx;cmpl -(%ebp), %ebx;jb - <.text+>;cmpl %edi, %ebx;je  <.text+>": 1,
                "movl %ebx, %edi;movl -(%ebp), %eax;cmpl %eax, %edi;jae  <.text+>;jmp - <.text+>": 1,
                "cmpl %eax, -(%ebp);jb  <.text+>;jmp  <.text+>;movl (%ebp), %esi;pushl $": 1,
                "movl (%ebp), %esi;pushl $;calll - <.text+>;testl %eax, %eax;je  <.text+>": 1,
                "jmp - <.text+>;movl (%esi), %eax;pushl %ebx;leal (%eax,%edi,), %eax;pushl $": 1,
                "calll *;testl %eax, %eax;je  <.text+>;cmpl %edi, -(%ebp);jne  <.text+>": 1,
                "jae - <.text+>;jmp - <.text+>;pushl $;calll - <.text+>;testl %eax, %eax": 1,
                "popl %ecx;pushl %eax;pushl %ebx;pushl $;calll *": 1,
                "calll *;jmp - <.text+>;movw (%esi), %ax;testw %ax, %ax;je  <.text+>": 1,
                "jne - <.text+>;movl (%ebp), %eax;movl %eax, ;jmp - <.text+>;cmpl $, ": 1,
                "andb %al, (%eax);subb %al, (%eax);andl $, %eax;addb %ah, (%eax);addb %ah, (%edi)": 1,
                "movl %edi, (%esi);jmp - <.text+>;calll  <.text+>;calll  <.text+>;jmp - <.text+>": 1,
                "jmp - <.text+>;pushl %eax;calll - <.text+>;movl %eax, (%esi);jmp - <.text+>": 1,
                "nop;incl %edi;addb %al, (%ebp);pushl %ecx;addb %al, (%eax)": 1,
                "addb %al, (%ebp);pushl %ecx;addb %al, (%eax);addb %al, (%ebp);pushl %ecx": 1,
                "cmpl %ebx, %eax;jne - <.text+>;movl %ecx, (%edi);jmp - <.text+>;movl (%esi), %eax": 1,
                "movl (%esi), %eax;cmpl %ebx, %eax;jne  <.text+>;movl -(%ebp), %edi;movl %edi, (%esi)": 1,
                "jne - <.text+>;movl -(%ebp), %edi;movl %edi, (%eax);jmp - <.text+>;movl %ebx, %eax": 1,
                "jmp  <.text+>;movl %eax, (%edi);andl $, -(%ebp);jmp - <.text+>;calll  <.text+>": 1,
                "movw $, (%eax);movl , %eax;movw $, (%eax);movl , %eax;movw %bx, (%eax)": 2,
                "pushl %ebx;calll - <.text+>;cmpl %ebx, (%esi);je  <.text+>;calll  <.text+>": 1,
                "cmpw $, %ax;je - <.text+>;movl , %eax;leal (%eax,%eax), %eax;jmp - <.text+>": 1,
                "jmp - <.text+>;calll  <.text+>;jmp - <.text+>;pushl $;calll *": 1,
                "movl $, (%esi);movl %ebx, (%esi);jmp - <.text+>;incl %edi;jmp - <.text+>": 1,
                "jmp - <.text+>;calll  <.text+>;xorl %eax, %eax;popl %esi;retl": 1,
                "pushl %ebx;pushl %esi;calll  <.text+>;jmp - <.text+>;pushl %eax": 1,
                "popl %ecx;incl %eax;jmp - <.text+>;pushl %ebx;calll *": 1,
                "popl %esi;pushl $;popl %edi;jne  <.text+>;leal -(%ebp), %eax": 1,
                "leal -(%ebp), %eax;jmp  <.text+>;cmpw %si, -(%ebp);jne  <.text+>;cmpw %si, -(%ebp)": 1,
                "cmpw %si, %cx;je  <.text+>;addl %edi, %eax;movl %eax, -(%ebp);movw (%eax), %cx": 3,
                "je - <.text+>;pushl %ebx;pushl %eax;jmp  <.text+>;pushl %ebx": 1,
                "pushl %eax;jmp  <.text+>;pushl %ebx;pushl $;calll - <.text+>": 1,
                "movw %cx, -(%ebp);movw $, -(%ebp);movw %si, -(%ebp);movw %si, (%eax);movl %esi, -(%ebp)": 1,
                "cmpl , %ecx;jg - <.text+>;leal (,%eax,), %eax;pushl %eax;pushl ": 1,
                "calll *;popl %ecx;popl %ecx;cmpl %esi, %eax;je - <.text+>": 1,
                "jmp - <.text+>;cmpw $, (%esi);jne - <.text+>;pushl $;leal (%esi), %eax": 1,
                "jmp  <.text+>;andw $, (%ebx);incl %ebx;incl %ebx;movl %ebx, -(%ebp)": 1,
                "movl , %ecx;testl %ecx, %ecx;je  <.text+>;cmpl $, %ecx;je  <.text+>": 1,
                "movw -(%ebp), %ax;movw %ax, (%esi);movw $, (%esi);testl %ebx, %ebx;je  <.text+>": 1,
                "calll *;pushl %eax;calll *;jmp - <.text+>;cmpw $, (%ebx)": 1,
                "xorl %eax, %eax;movw (%ebx), %ax;pushl %eax;calll *;testl %eax, %eax": 2,
                "jne - <.text+>;xorl %eax, %eax;movw (%ecx), %ax;movl %ecx, %esi;jmp  <.text+>": 1,
                "incl %esi;movw (%esi), %ax;testw %ax, %ax;jne - <.text+>;movl %esi, %eax": 1,
                "jb  <.text+>;pushl %eax;pushl $;pushl %ecx;calll *": 1,
                "calll - <.text+>;pushl $;pushl %eax;calll - <.text+>;cmpl %eax, ": 1,
                "movl %eax, (%ebx);cmpl %edi, -(%ebp);je - <.text+>;orl %esi, (%ebx);jmp - <.text+>": 1,
                "movl %ebx, ;popl %edi;popl %esi;jmp - <.text+>;pushl $": 1,
                "pushl -(%ecx,%eax,);calll - <.text+>;jmp - <.text+>;testw %ax, %ax;je - <.text+>": 1,
                "pushl %esi;pushl (%ebp);pushl %eax;calll *;jmp - <.text+>": 1,
                "jmp - <.text+>;movl %ecx, %eax;jmp - <.text+>;pushl %edi;calll - <.text+>": 1,
                "jmp - <.text+>;pushl $;popl %eax;jmp - <.text+>;movl $, -(%ebp)": 1,
                "movl -(%ebp), %ebx;movl , %edi;xorl %eax, %eax;cmpl %eax, %ebx;movl %eax, -(%ebp)": 1,
                "jb - <.text+>;cmpl $, -(%ebp);je  <.text+>;leal -(%eax), %edx;cmpl %edx, -(%ebp)": 1,
                "testl %eax, %eax;je  <.text+>;movl (%esi), %eax;addl $, %eax;je  <.text+>": 2,
                "jmp  <.text+>;xorl %eax, %eax;leal (%eax,%ebx), %eax;cmpl $, %eax;ja  <.text+>": 3,
                "jne  <.text+>;jmp - <.text+>;testl %ebx, %ebx;je  <.text+>;pushl -(%ebp)": 1,
                "testl %eax, %eax;je  <.text+>;movl (%ebx), %eax;testl %eax, %eax;je  <.text+>": 1,
                "movl (%esi), %esi;addl $, %esi;je - <.text+>;pushl %esi;pushl -(%ebp)": 1,
                "je - <.text+>;movl (%esi), %eax;addl $, %eax;je - <.text+>;pushl %eax": 1,
                "jne - <.text+>;movl -(%ebp), %eax;testl %eax, %eax;je  <.text+>;andb $-, (%eax)": 1,
                "pushl %edi;leal -(%ebp), %eax;pushl %eax;pushl $;pushl -(%ebp)": 1,
                "movl -(%ebp), %ecx;movl -(%ebp), %eax;cmpl %eax, %ecx;jae - <.text+>;movl %ecx, -(%ebp)": 1,
                "orl $, %eax;movl %eax, (%ebx);jmp - <.text+>;pushl -(%ebp);calll - <.text+>": 2,
                "calll - <.text+>;pushl $;calll - <.text+>;cmpl $, ;je  <.text+>": 1,
                "pushl $;calll - <.text+>;cmpl $, ;je  <.text+>;movl %edi, -(%ebp)": 1,
                "je  <.text+>;movl %edi, -(%ebp);jmp - <.text+>;testb $-, (%ebx);jne - <.text+>": 1,
                "pushl %eax;pushl -(%ebp);calll - <.text+>;jmp - <.text+>;pushl -(%ebp)": 1,
                "calll - <.text+>;jmp - <.text+>;pushl -(%ebp);calll - <.text+>;jmp - <.text+>": 1,
                "pushl -(%ebp);pushl -(%ebp);pushl -(%ebp);pushl %eax;leal -(%ebp), %eax": 1,
                "movl $, -(%ebp);jne - <.text+>;movl -(%ebp), %edx;movl (%edx), %edx;cmpl %esi, %edx": 1,
                "movl %ecx, (%ebx);jmp - <.text+>;movl -(%ebp), %ecx;cmpl %esi, %ecx;jne  <.text+>": 1,
                "jmp - <.text+>;cmpl $, -(%ebp);jne - <.text+>;cmpl $, -(%ebp);jne - <.text+>": 1,
                "jmp - <.text+>;calll *;pushl -(%ebp);movl %eax, ;calll - <.text+>": 1,
                "movl $, ;cmpl %eax, ;je  <.text+>;xorl %esi, %esi;jmp  <.text+>": 1,
                "calll  <.text+>;movl %eax, %esi;cmpl $-, %esi;movl %esi, -(%ebp);je  <.text+>": 1,
                "calll - <.text+>;addl $, %esp;pushl %esi;jmp  <.text+>;pushl %esi": 1,
                "jne  <.text+>;andl $, -(%ebp);movl , %edi;pushl $;leal -(%ebp), %eax": 1,
                "pushl %eax;calll *%esi;testl %eax, %eax;je  <.text+>;cmpl $, -(%ebp)": 1,
                "movl -(%ebp), %edi;movl -(%ebp), %esi;xorl %eax, %eax;rep  cmpsb %es:(%edi), (%esi);jne  <.text+>": 1,
                "rep  cmpsb %es:(%edi), (%esi);jne  <.text+>;cmpl %eax, -(%ebp);je - <.text+>;pushl -(%ebp)": 1,
                "cmpl %eax, -(%ebp);je - <.text+>;pushl -(%ebp);calll - <.text+>;orl $-, -(%ebp)": 1,
                "jmp - <.text+>;xorl %esi, %esi;pushl %esi;pushl %edi;leal -(%ebp), %eax": 1,
                "cmpl $, ;je - <.text+>;movl %edi, -(%ebp);movl %edi, ;jmp - <.text+>": 1,
                "je  <.text+>;orl %esi, (%eax);jmp  <.text+>;orl %esi, (%ecx);cmpl $, ": 1,
                "calll  <.text+>;xorl %esi, %esi;cmpl %esi, ;je  <.text+>;pushl -(%ebp)": 1,
                "je - <.text+>;pushl -(%ebp);calll - <.text+>;testl %eax, %eax;jne - <.text+>": 1,
                "pushl %eax;calll - <.text+>;shll -(%ebp);incl %ebx;cmpl $, %ebx": 1,
                "movb $, %al;jmp - <.text+>;cmpl $, -(%ebp);jle - <.text+>;movw %bx, (%edi)": 1,
                "decl %edi;decl %edi;calll *%ebx;pushl $;pushl (%esi)": 1,
                "pushl %eax;calll - <.text+>;testl %eax, %eax;jne  <.text+>;pushl (%ebp)": 1,
                "testl %eax, %eax;jne  <.text+>;pushl (%ebp);calll - <.text+>;testl %eax, %eax": 2,
                "je  <.text+>;pushl %esi;calll - <.text+>;pushl %eax;calll *%edi": 1,
                "pushl %edi;pushl $;calll - <.text+>;addl $, %esp;testb $, (%ebp)": 1,
                "jmp  <.text+>;xorl %ecx, %ecx;cmpl $, %eax;setne %cl;pushl %ebx": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);calll *;addl $, %esp": 2,
                "pushl %eax;pushl (%ebp);calll *;addl $, %esp;pushl $": 2,
                "leal -(%ebp), %eax;pushl %eax;pushl $-;leal -(%ebp), %eax;pushl %eax": 2,
                "movl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl %ebx;pushl %esi;pushl $": 1,
                "incl %eax;incl %eax;jmp - <.text+>;shll $, %eax;pushl %eax": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl ;pushl ;pushl %edi": 1,
                "movw (%eax), %dx;incl %eax;incl %eax;cmpw $, %dx;jne  <.text+>": 1,
                "incl ;cmpl %ecx, %eax;jb - <.text+>;subl (%ebp), %eax;sarl %eax": 1,
                "jmp - <.text+>;calll *;movl %eax, -(%ebp);jmp - <.text+>;calll - <.text+>": 1,
                "addl %edx, %ecx;jmp - <.text+>;pushl %esi;pushl (%ebp);calll - <.text+>": 1,
                "testl %eax, %eax;jne - <.text+>;jmp - <.text+>;calll *;cmpl $, %eax": 1,
                "jmp - <.text+>;calll *;cmpl $, %eax;je - <.text+>;jmp - <.text+>": 1,
                "pushl (%ebp);calll *;popl %ecx;jmp - <.text+>;calll *": 1,
                "movl %eax, ;jne - <.text+>;movl $, ;jmp - <.text+>;pushl $": 2,
                "calll *%esi;jmp - <.text+>;orl $-, -(%ebp);pushl $;leal -(%ebp), %eax": 1,
                "incl %edx;shll %cl, %edx;leal (,%edi,), %eax;notl %edx;andl %edx, (%eax)": 1,
                "jmp - <.text+>;xorb %al, %al;jmp - <.text+>;cmpl $, %ebx;jne  <.text+>": 1,
                "cmpl %ecx, (%ebp);jne  <.text+>;cmpb $, ;je  <.text+>;movl -(%ebp), %eax": 1,
                "jmp  <.text+>;movl -(%ebp), %eax;decl -(%ebp);testl %eax, %eax;je  <.text+>": 1,
                "movl %eax, ;movb $, %al;jmp - <.text+>;pushl $;popl %eax": 1,
                "pushl %ebx;calll *%esi;jmp - <.text+>;calll *;cmpl $, %eax": 1,
                "jmp - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %edi;movl %eax, -(%ebp)": 1,
                "pushl %eax;pushl %edi;movl %eax, -(%ebp);calll *;testl %eax, %eax": 1,
                "jbe  <.text+>;movw (%eax), %si;andw $, (%eax);pushl %edi;calll *": 1,
                "movl %eax, %ecx;movl -(%ebp), %eax;movw %si, (%eax);jmp  <.text+>;pushl %edi": 1,
                "calll *;xorl %ecx, %ecx;cmpl $-, %eax;setne %cl;movl %ecx, %esi": 1,
                "jmp - <.text+>;movl (%ebp), %edi;pushl %esi;pushl %edi;calll - <.text+>": 1,
                "calll - <.text+>;addl $, %edi;je  <.text+>;pushl %edi;calll *": 1,
                "je  <.text+>;pushl %edi;calll *;popl %ecx;jmp  <.text+>": 2,
                "movl $, ;movl $, -(%ebp);jmp - <.text+>;cmpl $, %eax;je - <.text+>": 1,
                "calll - <.text+>;testl %esi, %esi;je  <.text+>;pushl %esi;calll *%ebx": 1,
                "pushl %esi;calll *%ebx;popl %ecx;jmp  <.text+>;xorl %eax, %eax": 3,
                "jmp - <.text+>;movl $, ;movl $, -(%ebp);jmp - <.text+>;movl (%ebx), %eax": 1,
                "pushl $;pushl $;jmp - <.text+>;calll  <.text+>;pushl $": 1,
                "movl (%eax), %eax;testl %eax, %eax;jne - <.text+>;movl -(%ebp), %ebx;jmp - <.text+>": 1,
                "leal (%esi,%eax,), %eax;pushl %eax;pushl $;pushl $;jmp  <.text+>": 1,
                "calll  <.text+>;jmp - <.text+>;cmpw $, -(%ebp);jne - <.text+>;cmpw $, -(%ebp)": 1,
                "jmp - <.text+>;pushl %esi;calll *;cmpl $-, %eax;je - <.text+>": 1,
                "pushl %esi;calll *%ebx;testl %eax, %eax;je  <.text+>;andl $, -(%ebp)": 1,
                "testl %eax, %eax;je  <.text+>;andl $, -(%ebp);jmp - <.text+>;calll *%edi": 1,
                "testl %eax, %eax;popl %ecx;je  <.text+>;andw $, (%esi);leal -(%ebp), %eax": 1,
                "cmpl $, %eax;popl %ecx;jb  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;calll *%edi;addl $, %esp": 1,
                "pushl -(%ebp);jmp - <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 1,
                "movl (%edi), %eax;testb $, %al;je  <.text+>;andl $-, %eax;pushl %eax": 1,
                "popl %ecx;jmp - <.text+>;pushl %ebx;pushl $;calll - <.text+>": 1,
                "popl %ecx;jmp - <.text+>;incl %edi;incl %edi;jmp - <.text+>": 1,
                "je  <.text+>;decl %eax;jne  <.text+>;orl %ecx, -(%ebp);testb %bl, %bl": 1,
                "jne  <.text+>;orl %ecx, -(%ebp);testb %bl, %bl;je  <.text+>;andl $-, %esi": 1,
                "andl $-, %esi;jmp  <.text+>;orl %ecx, %esi;jmp - <.text+>;orl $, -(%ebp)": 1,
                "jmp  <.text+>;orl %eax, %esi;jmp - <.text+>;orl $, -(%ebp);testb %bl, %bl": 1,
                "jmp - <.text+>;andl $-, %esi;jmp  <.text+>;orl $, -(%ebp);testb %bl, %bl": 1,
                "jmp  <.text+>;orl $, -(%ebp);testb %bl, %bl;je  <.text+>;andl $-, %esi": 1,
                "incb %bl;jmp - <.text+>;movl (%ebp), %eax;leal (%edi,%eax,), %eax;pushl %eax": 1,
                "pushl %edi;calll - <.text+>;testl %eax, %eax;jne  <.text+>;cmpw $, (%edi)": 1,
                "pushl %ebx;calll *%esi;popl %ecx;popl %ecx;jmp - <.text+>": 1,
                "jmp - <.text+>;cmpw $, (%eax);jne - <.text+>;movw (%eax), %cx;testw %cx, %cx": 1,
                "jne - <.text+>;movw (%eax), %cx;testw %cx, %cx;je - <.text+>;cmpw $, %cx": 1,
                "jmp - <.text+>;movl (%eax), %ecx;decl %ecx;movl %ecx, (%eax);jmp - <.text+>": 1,
                "movl %eax, (%esi);jmp - <.text+>;movl %edi, %eax;jmp - <.text+>;orb $, (%esi)": 1,
                "popl %ecx;popl %ecx;je - <.text+>;cmpl $, -(%ebp);je  <.text+>": 1,
                "testb $, (%esi);je  <.text+>;pushl -(%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "jmp - <.text+>;pushl -(%ebp);calll - <.text+>;jmp - <.text+>;movl %eax, %ebx": 1,
                "movl (%ebx), %eax;cmpl %ecx, %eax;je - <.text+>;jmp - <.text+>;movb $, -(%ebp)": 1,
                "jmp - <.text+>;decl %eax;je  <.text+>;decl %eax;je  <.text+>": 2,
                "subl $, %eax;jne  <.text+>;cmpb $, -(%ebp);je  <.text+>;xorl $, (%esi)": 1,
                "cmpb $, -(%ebp);je  <.text+>;xorl $, (%esi);jmp - <.text+>;orb $, (%esi)": 3,
                "popl %ecx;ja  <.text+>;andl $, (%esi);movl $, (%esi);jmp - <.text+>": 1,
                "je  <.text+>;xorl $, (%esi);jmp  <.text+>;orb $, (%esi);cmpb $, -(%ebp)": 1,
                "leal (%edi,%ebx,), %eax;pushl %eax;calll  <.text+>;jmp - <.text+>;pushl $": 1,
                "calll  <.text+>;jmp - <.text+>;pushl $;calll - <.text+>;movl %eax, (%ebx)": 1,
                "jmp - <.text+>;pushl $;calll - <.text+>;movl %eax, (%ebx);movl %eax, %ebx": 1,
                "pushl $;calll - <.text+>;movl %eax, (%ebx);movl %eax, %ebx;andl $, (%ebx)": 1,
                "jmp - <.text+>;cmpl $, -(%ebp);jne - <.text+>;movb $, %al;jmp - <.text+>": 1,
                "pushl (%eax);pushl $;pushl $;pushl (%ebp);calll  <.text+>": 1,
                "calll *;popl %ecx;jmp - <.text+>;testb $, %al;je  <.text+>": 1,
                "pushl %ebx;pushl %eax;pushl -(%ebp);calll  <.text+>;jmp - <.text+>": 1,
                "calll  <.text+>;movl -(%ebp), %eax;movzwl (%eax), %eax;pushl %ebx;leal (%ebx,%eax,), %eax": 1,
                "pushl %eax;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);pushl $": 1,
                "pushl %ebx;addl $, %ebx;pushl %ebx;pushl (%esi);pushl -(%ebp)": 1,
                "movl %eax, -(%ebp);pushl -(%ebp);calll  <.text+>;jmp - <.text+>;movw (%edx), %dx": 1,
                "nop;addb %ch, %cs:(%esi);addb %ch, (%esi);addb %al, (%eax);addb %al, -(%ebp)": 1,
                "addb %ch, %cs:(%esi);addb %ch, (%esi);addb %al, (%eax);addb %al, -(%ebp);jnp - <.text+>": 1,
                "addb %al, -(%ebp);jnp - <.text+>;pushl %esi;ldsl (%eax), %eax;orl $, %eax": 1,
                "movzwl %ax, %eax;pushl %eax;jmp  <.text+>;pushl $;pushl (%ebp)": 1,
                "xorl %ebx, %ebx;movl %ebx, -(%ebp);testl %eax, %eax;movl %eax, -(%ebp);ja  <.text+>": 1,
                "pushl %edi;calll - <.text+>;testl %eax, %eax;jne - <.text+>;incl (%ebp)": 1,
                "jae  <.text+>;jmp - <.text+>;pushl (%ebp);calll - <.text+>;testl %eax, %eax": 1,
                "jne  <.text+>;movl (%edi), %eax;movl (%eax,%ebx,), %eax;movl (%eax), %ecx;movl (%eax), %eax": 1,
                "calll *;jmp - <.text+>;movl , %eax;leal (%eax,%ecx,), %eax;movl (%eax), %edx": 1,
                "popl %ecx;leal (%ebx,%ebx), %eax;subl %eax, %ecx;addl %ecx, (%esi);pushl (%esi)": 1,
                "addl %ecx, (%esi);pushl (%esi);pushl $;pushl $;calll - <.text+>": 1,
                "movl -(%ebp), %eax;andl $-, %eax;orl $, %eax;movl %eax, -(%ebp);jmp - <.text+>": 1,
                "movl %eax, -(%ebp);jmp - <.text+>;leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "cmpl $, %eax;jbe - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "orb $, -(%ebp);jmp - <.text+>;orl $, -(%ebp);jmp - <.text+>;orb $, -(%ebp)": 1,
                "orb $, -(%ebp);jmp - <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "testl %eax, %eax;je - <.text+>;jmp  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "je  <.text+>;leal -(%ebp), %eax;pushl %eax;movl , %edi;calll *%edi": 1,
                "je - <.text+>;movl %ecx, ;jmp - <.text+>;nop;nop": 1,
                "xorl %eax, %eax;jmp - <.text+>;leal -(%ebp), %eax;pushl %eax;calll  <.text+>": 1,
                "nop;nop;pushl %edi;addb %al, (%eax);addb %bh, %bh": 1,
                "cmpw $, %ax;je - <.text+>;movb %bl, ;movb %bl, ;jmp - <.text+>": 1,
                "jmp - <.text+>;movl $, %edx;pushl %esi;movb (%edx), %cl;cmpb %bl, %cl": 1,
                "movl %esi, %ecx;andl $, %ecx;rep  stosb %al, %es:(%edi);incl %edx;incl %edx": 1,
                "movl %eax, %edi;calll *%ebx;popl %ecx;leal (%eax,%eax), %eax;pushl %eax": 1,
                "pushl $;jmp - <.text+>;pushl $;popl %eax;jmp - <.text+>": 1,
                "pushl %eax;calll *-(%ebp);jmp - <.text+>;movl %eax, %esi;jmp  <.text+>": 1,
                "jmp  <.text+>;addl $, -(%ebp);pushl -(%ebp);pushl (%esi);calll - <.text+>": 1,
                "cmpl $, %ebx;je  <.text+>;movl (%ebp), %eax;movl -(%ebp), %ecx;movl (%ecx,%eax,), %eax": 1,
                "movl -(%ebp), %ecx;sarl %ecx;addl %eax, %edi;cmpl %ecx, (%ebp);movb $, (%ebp)": 1,
                "addl %eax, %edi;cmpl %ecx, (%ebp);movb $, (%ebp);jl  <.text+>;decl (%ebp)": 1,
                "movb $, (%ebp);jmp - <.text+>;movw $, (%edi);incl %edi;incl %edi": 1,
                "addl $, %esp;movl %eax, %esi;movl %esi, -(%ebp);cmpl %edi, -(%ebp);jne  <.text+>": 1,
                "movl %esi, -(%ebp);cmpl %edi, -(%ebp);jne  <.text+>;pushl %esi;calll *": 1,
                "movl %eax, (%ebp);leal (%ebp), %eax;pushl %eax;pushl $;pushl %ecx": 1,
                "calll *%eax;jmp - <.text+>;calll *;movl %eax, -(%ebp);movl , %eax": 1,
                "cmpl $, (%eax);jne - <.text+>;movl -(%ebp), %ecx;cmpl %ecx, (%eax);jne - <.text+>": 1,
                "jne - <.text+>;cmpl (%eax), %edi;jne - <.text+>;movl -(%ebp), %eax;movl (%ebp), %ecx": 1,
                "addb %dl, (%eax,%eax);addb %ah, (%eax);addb %al, (%eax);addb %dl, (%eax);addb %dl, (%ecx)": 1,
                "addb %dl, (%ebx);pushl %ebx;addb %ah, (%eax);addb %al, (%eax);addb %dl, (%eax)": 1,
                "incl %ebp;addb %dl, (%ecx);pushl %ebp;addb %ah, (%eax);addb %al, (%eax)": 1,
                "addb %dl, (%ecx);pushl %ebp;addb %ah, (%eax);addb %al, (%eax);addb %dl, (%eax)": 1,
                "outsb (%esi), %dx;insl %dx, %es:(%edi);outsb %gs:(%esi), %dx;je  <.text+>;nop": 1,
                "addb %al, (%eax);nop;nop;decl %edi;addb %al, (%esi)": 1,
                "outsb (%esi), %dx;addb %al, (%eax);addb %ch, (%edi);addb %al, (%edx);addb %al, (%eax)": 1,
                "addl $, %esp;cmpl $, %eax;setle %cl;movl %ecx, %eax;popl %ebp": 1,
                "pushl (%eax);calll - <.text+>;negl %eax;sbbl %eax, %eax;negl %eax": 1,
                "calll *;jmp  <.text+>;calll *;movl (%esi), %esi;decl %esi": 1,
                "movl (%eax), %eax;cmpl %edi, %eax;je  <.text+>;pushl %edi;pushl %eax": 1,
                "jne  <.text+>;movw (%eax), %cx;cmpw $, %cx;jb  <.text+>;cmpw $, %cx": 1,
                "pushl $;popl %ecx;cmpl %ecx, %edi;jge  <.text+>;leal (%esi,%edi,), %eax": 1,
                "nop;movl %edi, %edi;pushl %esi;movl , %esi;jmp  <.text+>": 2,
                "calll - <.text+>;andl %esi, ;pushl $;pushl $;calll *": 1,
                "movl %edi, %eax;je  <.text+>;incl %edx;movw (%eax), %bx;incl %eax": 1,
                "movw (%eax), %bx;incl %eax;incl %eax;testw %bx, %bx;jne - <.text+>": 1,
                "movl -(%ebp), %eax;leal (%esi,%eax,), %esi;pushl %ebx;pushl %esi;calll *%edi": 1,
                "incl %esi;incl %esi;cmpw %ax, (%ebx);jne - <.text+>;andw $, (%esi)": 1,
                "popl %ecx;leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);calll *": 1,
                "movl %ebx, -(%ebp);calll - <.text+>;movl %eax, %esi;incl %esi;incl %esi": 1,
                "incl %esi;leal -(%ebp), %eax;pushl %eax;pushl %esi;calll *%edi": 1,
                "pushl -(%ebp);pushl -(%ebp);calll - <.text+>;andw $, (%esi);movl %eax, %ebx": 1,
                "pushl -(%ebp);calll *;testl %eax, %eax;je  <.text+>;jmp - <.text+>": 1,
                "pushl %ebp;movl %esp, %ebp;pushl %esi;pushl (%ebp);movl , %esi": 1,
                "pushl (%ebp);movl , %esi;calll *%esi;pushl (%ebp);calll *%esi": 1,
                "calll *%esi;negl %eax;sbbl %eax, %eax;negl %eax;popl %esi": 1,
                "pushl $;pushl %esi;calll *;movl %edi, %ecx;subl %esi, %ecx": 1,
                "cmpl $, %eax;jge  <.text+>;jmp  <.text+>;cmpl $, %ecx;je  <.text+>": 1,
                "pushl %eax;pushl (%ebp);calll *;testl %eax, %eax;popl %ecx": 1,
                "movl (%ebp), %edx;movw %ax, (%edx);movl -(%ebp), %eax;movw -(%ebp,%eax,), %ax;movw %ax, (%edx)": 1,
                "movw %ax, (%edx);movl -(%ebp), %eax;leal -(%ebp,%eax,), %eax;movl (%eax), %ecx;testl %ecx, %ecx": 1,
                "retl $;cmpl $, %ecx;jl  <.text+>;cmpl $, %ecx;jg  <.text+>": 1,
                "cmpl $, %ecx;jg  <.text+>;addl $, %ecx;jmp - <.text+>;cmpl $, %ecx": 1,
                "pushl %edi;movl $, %esi;leal -(%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 1,
                "jmp  <.text+>;xorl %esi, %esi;cmpl $, %esi;jg  <.text+>;xorl %eax, %eax": 1,
                "testl %eax, %eax;je  <.text+>;movw (%ebx), %ax;cmpw $, %ax;je  <.text+>": 1,
                "movw (%ebx), %bx;testw %bx, %bx;je  <.text+>;cmpw $, %bx;je  <.text+>": 1,
                "movl (%ebp), %eax;testl %eax, %eax;jne  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "movw %ax, -(%ebp);pushl $;leal -(%ebp), %eax;pushl %eax;calll *": 1,
                "popl %ecx;popl %ecx;je  <.text+>;cmpw %bx, (%esi);je  <.text+>": 1,
                "movl , %eax;subl %ebx, %eax;je  <.text+>;decl %eax;decl %eax": 1,
                "decl %eax;je  <.text+>;movl $, %eax;jmp  <.text+>;movl $, %eax": 1,
                "je  <.text+>;movl $, %eax;jmp  <.text+>;movl $, %eax;jmp  <.text+>": 2,
                "pushl %ebx;calll *;popl %ecx;pushl %eax;calll - <.text+>": 1,
                "movl %esp, %ebp;movl (%ebp), %eax;testl %eax, %eax;je  <.text+>;movl %eax, ": 1,
                "movl %esi, (%ebp);calll - <.text+>;cmpl %edi, %eax;je  <.text+>;movw %di, (%eax)": 1,
                "calll *;addl $, %esp;xorl %eax, %eax;incl %eax;popl %esi": 1,
                "incl %eax;popl %esi;retl;pushl %edi;testl %esi, %esi": 1,
                "jmp  <.text+>;xorl %edi, %edi;testl %edi, %edi;jbe  <.text+>;cmpl $, ": 1,
                "nop;movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movzwl (%ebp), %ecx": 2,
                "movl %eax, (%ecx);popl %ebp;retl $;nop;nop": 1,
                "cmpl $, %ecx;jg  <.text+>;je  <.text+>;movl %ecx, %eax;subl $, %eax": 1,
                "movl (%ebp), %eax;imull (%ebp), %eax;jmp  <.text+>;movl (%ebp), %eax;andl (%ebp), %eax": 1,
                "jne  <.text+>;movl (%ebp), %eax;movl $, (%eax);jmp  <.text+>;movl (%ebp), %eax": 2,
                "decl %eax;jmp  <.text+>;movl (%ebp), %eax;sarl %cl, %eax;jmp  <.text+>": 1,
                "sarl %cl, %eax;jmp  <.text+>;movl (%ebp), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "jb  <.text+>;je  <.text+>;insl %dx, %es:(%edi);je  <.text+>;arpl %cx, (%edi)": 1,
                "movl %esp, %ebp;pushl %esi;movl (%ebp), %esi;pushl %esi;calll - <.text+>": 1,
                "cmpw $, (%eax);jne - <.text+>;movl (%edi), %eax;movl (%ebp), %ecx;movl %eax, (%ecx)": 1,
                "movl %eax, %esi;leal (%ebp), %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 16,
                "popl %ecx;je  <.text+>;addl $, (%ebp);subl $, %esp;movl %esp, %edi": 1,
                "leal -(%ebp), %eax;pushl %eax;movsl (%esi), %es:(%edi);calll - <.text+>;movl %eax, %esi": 16,
                "movsl (%esi), %es:(%edi);cmpl $, (%ebp);jne  <.text+>;pushl (%ebp);leal (%ebp), %eax": 1,
                "jmp  <.text+>;movl , %esi;pushl %ebx;calll *%esi;testl %eax, %eax": 1,
                "calll *;addl $, %esp;cmpl $-, %eax;movl %eax, (%ebp);jne  <.text+>": 1,
                "addl $, %esp;cmpl $-, %eax;movl %eax, (%ebp);jne  <.text+>;calll *": 1,
                "movl (%ebp), %eax;movzwl (%eax), %eax;pushl %eax;calll *;testl %eax, %eax": 1,
                "pushl %eax;leal (%ebp), %eax;pushl %eax;calll - <.text+>;testl %eax, %eax": 2,
                "movl %eax, (%ebp);movl (%ebp), %eax;leal (%ebp), %esi;movl %eax, %edi;movsl (%esi), %es:(%edi)": 1,
                "pushl $;pushl %edi;calll *%esi;addl $, %esp;testl %ebx, %ebx": 1,
                "pushl %ebx;pushl %edi;calll *%esi;popl %ecx;popl %ecx": 1,
                "incl %esi;popl %edi;movl %esi, %eax;popl %esi;popl %ebx": 1,
                "movl (%ebp), %esi;pushl %edi;pushl (%ebp);movw (%esi), %di;andw $, (%esi)": 1,
                "pushl (%ebp);movw (%esi), %di;andw $, (%esi);pushl $;movl %eax, -(%ebp)": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;calll *;movl %eax, -(%ebp)": 1,
                "pushl %edi;xorl %edi, %edi;cmpl %edi, %eax;je  <.text+>;pushl %edi": 1,
                "pushl %edi;pushl %eax;calll - <.text+>;movw (%eax), %ax;jmp  <.text+>": 1,
                "pushl (%esi);calll - <.text+>;testl %eax, %eax;je  <.text+>;cmpl %edi, (%ebp)": 1,
                "jmp  <.text+>;pushl $;pushl $;pushl (%esi);calll - <.text+>": 1,
                "pushl (%esi);calll - <.text+>;cmpw %di, (%eax);movl $, %ecx;je  <.text+>": 1,
                "movl $, %ecx;je  <.text+>;cmpl %edi, (%ebp);jne  <.text+>;movl $, %ecx": 1,
                "jmp  <.text+>;cmpl %edi, (%ebp);movl $, %eax;movl %ecx, %edx;jne  <.text+>": 1,
                "pushl $;pushl (%eax);je  <.text+>;calll - <.text+>;pushl %eax": 1,
                "calll - <.text+>;pushl %eax;pushl $;calll - <.text+>;pushl %eax": 1,
                "pushl $;calll - <.text+>;pushl %eax;calll - <.text+>;jmp  <.text+>": 1,
                "jmp  <.text+>;calll - <.text+>;pushl %eax;pushl $;calll - <.text+>": 1,
                "pushl $;calll - <.text+>;movl %eax, ;popl %ebp;retl $": 1,
                "incl %esi;incl %esi;movw (%esi), %ax;cmpw %bx, %ax;movl %esi, -(%ebp)": 2,
                "movl %esi, -(%ebp);jne - <.text+>;movw (%esi), %ax;cmpw %bx, %ax;je  <.text+>": 1,
                "incl %esi;incl %esi;movw (%esi), %ax;cmpw %bx, %ax;jne - <.text+>": 1,
                "movw (%esi), %ax;cmpw %bx, %ax;jne - <.text+>;pushl $;pushl %esi": 1,
                "pushl %ecx;pushl %eax;movl %eax, -(%ebp);calll *;testl %eax, %eax": 2,
                "calll *;pushl $-;calll *%edi;leal -(%ebp), %ecx;pushl %ecx": 1,
                "jne  <.text+>;addl $, (%ebp);subl $, %esp;movl %esp, %edi;movsl (%esi), %es:(%edi)": 1,
                "movl (%ebp), %eax;movl %eax, %edi;movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi);movsl (%esi), %es:(%edi)": 2,
                "testw %bx, %bx;je  <.text+>;cmpw $, %bx;je  <.text+>;pushl %ebx": 1,
                "calll - <.text+>;movl %eax, %esi;jmp  <.text+>;addl $, (%ebp);subl $, %esp": 1,
                "pushl %eax;calll - <.text+>;testw %ax, %ax;je  <.text+>;movl $, -(%ebp)": 1,
                "calll  <.text+>;movl %eax, %esi;testl %esi, %esi;je  <.text+>;pushl %edi": 1,
                "pushl -(%ebp);pushl %ebx;pushl ;calll *;pushl %ebx": 1,
                "je  <.text+>;pushl -(%ebp);pushl %esi;calll - <.text+>;andl $, -(%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl , %ecx;xorl %edx, %edx;movl $, %eax": 1,
                "xorl %edx, %edx;movl $, %eax;incl %edx;cmpl %eax, %ecx;ja  <.text+>": 1,
                "jne  <.text+>;pushl $;jmp  <.text+>;movl $, %eax;jmp  <.text+>": 1,
                "jmp  <.text+>;subl $, %ecx;je  <.text+>;subl $, %ecx;je  <.text+>": 1,
                "movl %eax, ;pushl %edx;pushl %eax;calll - <.text+>;addl $, %esp": 1,
                "testl %esi, %esi;jne  <.text+>;leal -(%ebp), %eax;pushl %eax;leal -(%ebp), %eax": 2,
                "testl %esi, %esi;jne  <.text+>;leal -(%ebp), %eax;pushl %eax;pushl %edi": 1,
                "movl %eax, %esi;leal -(%ebp), %eax;movl $, (%esp);pushl %eax;calll *": 1,
                "cmpw $, (%edi);jne  <.text+>;pushl $;popl %esi;pushl %edi": 1,
                "jne  <.text+>;pushl $;popl %esi;pushl %edi;pushl $": 1,
                "andb %al, (%eax);arpl %ax, (%eax);outsl (%esi), %dx;addb %ch, (%ebp);insl %dx, %es:(%edi)": 1,
                "imull $, (%eax), %eax;addb %ah, %fs:(%eax);addb %ch, (%edx);addb %ch, (%edx);addb %ch, (%edx)": 1,
                "addb %ch, (%edx);addb %ch, (%edx);addb %al, (%eax);addb %bl, (%eax,%eax);addb %ch, (%eax)": 1,
                "addb %dh, (%eax);addb %ch, %gs:(%esi);popl %esp;addb %al, (%ebx);outsl (%esi), %dx": 1,
                "xorl %edi, %edi;cmpl %edi, %eax;movl %eax, -(%ebp);je  <.text+>;cmpl %edi, %esi": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);movw %di, (%esi);calll *": 1,
                "calll - <.text+>;addl $, %esp;jmp  <.text+>;movl -(%ebp), %esi;movl -(%ebp), %ebx": 1,
                "popl %ecx;leal (%eax,%eax), %eax;pushl %eax;pushl %esi;pushl $": 1,
                "jmp  <.text+>;pushl %ebx;pushl $;pushl $;jmp  <.text+>": 1,
                "addl $, %esp;pushl -(%ebp);calll *;movl -(%ebp), %ecx;movl -(%ebp), %eax": 1,
                "movl %ebx, (%ebp);movl , %ebx;movl %edi, %esi;testl %esi, %esi;je  <.text+>": 2,
                "popl %ecx;movl %eax, -(%ebp);jne  <.text+>;pushl %edi;calll - <.text+>": 2,
                "popl %ecx;popl %ecx;calll - <.text+>;pushl $;pushl $": 1,
                "pushl %edi;pushl %eax;calll *%ebx;leal -(%ebp), %eax;pushl %eax": 1,
                "decl %eax;andw $, -(%ebp,%eax,);movl %eax, -(%ebp);testb $, (%edi);jne  <.text+>": 1,
                "movw , %cx;pushl %ecx;pushl %eax;calll - <.text+>;testl %eax, %eax": 1,
                "movw $, -(%ebp);calll *%esi;popl %ecx;movl %eax, %edi;leal -(%ebp), %eax": 1,
                "calll *%esi;popl %ecx;movl %eax, %edi;leal -(%ebp), %eax;pushl %eax": 1,
                "movl %eax, -(%ebp);pushl %eax;leal -(%ebp), %eax;sbbl %edi, %edi;pushl %eax": 1,
                "testb %al, %al;jne  <.text+>;pushl $;popl %eax;leal -(%ebp), %ecx": 1,
                "andl $, -(%ebp);cmpl $, ;jne  <.text+>;movl -(%ebp), %eax;movl (%eax), %eax": 1,
                "addl $, %esp;andw $, -(%ebp,%eax,);jmp  <.text+>;movl -(%ebp), %ecx;leal -(%ebp,%ecx,), %ecx": 1,
                "leal -(%ebp), %eax;pushl -(%ebp);pushl %eax;calll - <.text+>;leal -(%ebp), %eax": 1,
                "je  <.text+>;leal -(%ebp), %ecx;pushl %ecx;pushl %eax;calll *%ebx": 1,
                "pushl (%eax);calll - <.text+>;testb %al, %al;jne - <.text+>;pushl -(%ebp)": 1,
                "movw %si, -(%ebp);calll *;cmpl %edi, %eax;jne  <.text+>;pushl $": 1,
                "popl %ecx;calll *%esi;cmpl $, %eax;pushl %edi;jne  <.text+>": 1,
                "calll *%esi;cmpl $, %eax;pushl %edi;jne  <.text+>;pushl %eax": 1,
                "pushl $;pushl %eax;calll *;leal -(%ebp), %eax;pushl %eax": 2,
                "nop;decl %esp;addb %cl, (%ecx);pushl %ebx;addb %dl, (%eax,%eax)": 1,
                "pushl %esi;pushl (%ebp);pushl (%ebp);pushl (%ebp);calll *": 1,
                "je  <.text+>;pushl $;jmp  <.text+>;pushl $;calll - <.text+>": 1,
                "popl %ecx;popl %esi;xorl %eax, %eax;popl %ebp;retl $": 1,
                "je  <.text+>;cmpl %eax, %edi;je  <.text+>;pushl %edi;calll *%esi": 1,
                "movl %esp, %ebp;subl $, %esp;cmpb $, (%ebp);pushl %esi;pushl %edi": 1,
                "je  <.text+>;movl %eax, (%edi);jmp  <.text+>;andl $, (%esi);xorl %eax, %eax": 1,
                "testl %eax, %eax;movl %eax, -(%ebp);je  <.text+>;pushl %eax;calll *": 1,
                "incl %esi;incl %esi;testw %ax, %ax;je  <.text+>;movw %ax, (%edi)": 1,
                "pushl %ebx;movl (%ebp), %ebx;pushl %esi;movl (%edx), %esi;testl %esi, %esi": 1,
                "pushl %eax;pushl (%ebp);calll - <.text+>;testl %eax, %eax;jne  <.text+>": 3,
                "calll - <.text+>;testl %eax, %eax;jne  <.text+>;movl (%esi), %esi;pushl $": 1,
                "calll - <.text+>;testl %eax, %eax;je  <.text+>;xorl %eax, %eax;incl %eax": 1,
                "movl (%ebp), %edi;testl %esi, %esi;je - <.text+>;pushl %edi;leal (%esi), %eax": 1,
                "je  <.text+>;cmpl $, %eax;je  <.text+>;jle  <.text+>;cmpl $, %eax": 2,
                "jne  <.text+>;pushl %ebx;pushl $;pushl %edi;calll - <.text+>": 1,
                "pushl %ebx;pushl $;pushl %edi;calll - <.text+>;cmpb $, ": 1,
                "pushl %ebx;pushl $;calll *;popl %ecx;movl (%esi), %ecx": 1,
                "pushl $;calll *;popl %ecx;movl (%esi), %ecx;leal (%ecx,%eax,), %eax": 1,
                "calll - <.text+>;pushl $;pushl (%esi);pushl %edi;calll - <.text+>": 1,
                "pushl $;pushl $;pushl %edi;calll - <.text+>;movl (%esi), %eax": 1,
                "pushl %ebx;addl $, %eax;pushl %eax;pushl %edi;calll - <.text+>": 1,
                "pushl $;pushl %eax;pushl (%ebp);calll - <.text+>;pushl (%ebp)": 1,
                "cmpl $, %eax;je  <.text+>;cmpl $, %eax;jne - <.text+>;movl , %eax": 1,
                "pushl (%ebp);calll - <.text+>;movl $, %edi;jmp  <.text+>;pushl %ebx": 1,
                "calll - <.text+>;movl $, %edi;jmp  <.text+>;pushl %ebx;pushl $": 1,
                "calll - <.text+>;movl (%esi), %eax;cmpl $, %eax;je  <.text+>;cmpl $, %eax": 1,
                "jmp  <.text+>;cmpl $, %eax;jne  <.text+>;movl $, %edi;pushl %ebx": 1,
                "decl %ebp;addb %ah, (%eax);addb %ch, (%edi);addb %bh, (%edi);addb %al, (%eax)": 1,
                "addb %dl, -(%eax);movl %edi, %edi;pushl %ebp;movl %esp, %ebp;cmpl $, (%ebp)": 1,
                "pushl %ebp;movl %esp, %ebp;movl (%ebp), %ecx;movl (%ecx), %eax;pushl %esi": 1,
                "movl (%ebp), %ecx;movl (%ecx), %eax;pushl %esi;movl (%ebp), %esi;testl %esi, %esi": 1,
                "movl (%ecx), %eax;pushl %esi;movl (%ebp), %esi;testl %esi, %esi;movl %eax, (%ecx)": 1,
                "testl %esi, %esi;movl %eax, (%ecx);je  <.text+>;xorl %edx, %edx;divl %esi": 1,
                "testw %ax, %ax;jne - <.text+>;movl %esi, %eax;jmp  <.text+>;pushl (%ebp)": 1,
                "popl %ecx;movl %eax, %edi;jb  <.text+>;cmpl $, -(%ebp);je  <.text+>": 1,
                "je  <.text+>;subl (%ebp), %edi;addl %edi, %ebx;movl (%esi), %eax;andw $, (%eax,%ebx,)": 1,
                "movl (%esi), %eax;andw $, (%eax,%ebx,);movl %ebx, (%esi);jmp  <.text+>;movl %ebx, %eax": 1,
                "pushl %edi;movl %eax, -(%ebp);leal (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "cmpl $, (%esi);pushl %edi;je  <.text+>;pushl %ebx;calll - <.text+>": 1,
                "movl (%ebp), %ecx;xorl %eax, %eax;cmpl %eax, (%ecx);je  <.text+>;pushl %ecx": 1,
                "popl %ecx;jmp  <.text+>;pushl %ebx;pushl %esi;movl , %esi": 1,
                "pushl $;setne %al;addl $, %eax;pushl %eax;calll - <.text+>": 1,
                "movl %eax, %esi;xorl %eax, %eax;jmp  <.text+>;pushl %eax;calll *": 1,
                "jne  <.text+>;cmpw $, -(%ebp);jb  <.text+>;calll  <.text+>;pushl $": 1,
                "pushl -(%ebp);calll - <.text+>;movl %eax, ;popl %esi;leave": 1,
                "cmpl $, (%esi);je  <.text+>;pushl $;calll - <.text+>;pushl (%esi)": 1,
                "je  <.text+>;pushl $;calll - <.text+>;pushl (%esi);calll - <.text+>": 1,
                "movl $, ;calll *;nop;nop;nop": 1,
                "jne  <.text+>;movl %ecx, ;jmp  <.text+>;movl , %eax;movw (%eax), %dx": 1,
                "jmp  <.text+>;movl , %eax;movw (%eax), %dx;cmpw $, %dx;jne  <.text+>": 1,
                "calll - <.text+>;addl $, %esp;testl %esi, %esi;popl %esi;je  <.text+>": 1,
                "pushl %esi;pushl (%ebp);pushl $;calll - <.text+>;movl (%ebp), %esi": 1,
                "movl (%ebp), %ebx;leal -(%ebx), %eax;movl %eax, (%ebp);pushl %edi;cmpl $-, (%ebp)": 1,
                "movl %ebx, %edi;pushl $;pushl $;calll - <.text+>;decl %edi": 1,
                "incl %ebx;incl %ebx;cmpl $, %eax;jg  <.text+>;je  <.text+>": 1,
                "cmpl $, %eax;jg  <.text+>;je  <.text+>;subl $, %eax;je  <.text+>": 1,
                "pushl $;calll - <.text+>;movl (%esi), %esi;jmp  <.text+>;movl (%esi), %eax": 1,
                "jmp  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax;je  <.text+>": 1,
                "jmp  <.text+>;cmpl $, %eax;je  <.text+>;cmpl $, %eax;jne  <.text+>": 1,
                "addl $, %esp;testl %eax, %eax;je  <.text+>;pushl %eax;pushl $": 1,
                "pushl %esi;calll - <.text+>;jmp  <.text+>;pushl (%esi);pushl $": 1,
                "subb (%eax), %al;subb (%eax), %al;subb (%eax), %al;andb %al, (%eax);pushl %ebp": 1,
                "ja  <.text+>;outsb (%esi), %dx;addb %ah, (%eax);addb %dh, (%eax,%eax);addb %dh, (%eax)": 1,
                "addb %ah, ;addb %al, (%eax);addb %dl, -(%eax);movl , %eax;retl": 1,
                "pushl %esi;pushl %edi;je  <.text+>;pushl $;pushl $": 1,
                "pushl %edi;je  <.text+>;pushl $;pushl $;pushl (%ebp)": 1,
                "pushl (%ebp);calll - <.text+>;pushl (%ebp);pushl (%ebp);pushl %edx": 1,
                "pushl %edx;pushl %eax;calll - <.text+>;movl %eax, %ebx;movl %edx, (%ebp)": 1,
                "sbbl %eax, %eax;incl %eax;pushl %eax;calll - <.text+>;movl -(%ebp), %ecx": 1,
                "calll - <.text+>;movl -(%ebp), %ecx;movl %eax, -(%ebp);cmpl (%ebp), %ecx;je - <.text+>": 1,
                "leave;retl $;calll *;pushl (%ebp);movl %eax, ": 1,
                "negl %ecx;pushl %ecx;pushl %eax;calll *%esi;popl %ecx": 1,
                "calll *;pushl $;leal (%ebp), %eax;pushl %eax;pushl %edi": 1,
                "pushl %eax;calll *;testl %eax, %eax;jne  <.text+>;pushl (%ebx)": 1,
                "calll  <.text+>;cmpl $-, %eax;movl %eax, (%ebx);je - <.text+>;pushl $": 1,
                "pushl %ecx;pushl %ecx;movl , %eax;cmpl $, %eax;jne  <.text+>": 1,
                "retl $;pushl (%ebp);movl (%ebp), %eax;pushl (%ebp);pushl %eax": 1,
                "calll - <.text+>;pushl $;pushl $;jmp  <.text+>;leal -(%ebp), %eax": 1,
                "calll *;pushl (%ebp);movl %eax, ;calll - <.text+>;pushl (%ebp)": 1,
                "cmpl %edi, ;je  <.text+>;xorl %ebx, %ebx;jmp  <.text+>;cmpl %edi, %ebx": 1,
                "je  <.text+>;xorl %ebx, %ebx;jmp  <.text+>;cmpl %edi, %ebx;jne  <.text+>": 1,
                "cmpl %ebx, ;je  <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "testb $, %al;je  <.text+>;andl $-, %eax;orl $, %eax;movl %eax, (%esi)": 1,
                "calll - <.text+>;movl %eax, -(%ebp);jmp  <.text+>;pushl %ebx;pushl (%esi)": 1,
                "jmp  <.text+>;pushl %ebx;pushl (%esi);calll - <.text+>;movl %eax, %edi": 1,
                "movl $, -(%ebp);leal -(%ebp), %eax;pushl %eax;pushl -(%ebp);leal -(%ebp), %eax": 1,
                "pushl %eax;calll  <.text+>;cmpl $-, %eax;movl %eax, -(%ebp);je  <.text+>": 1,
                "je  <.text+>;cmpl %ebx, -(%ebp);jle  <.text+>;pushl %edi;leal -(%ebp), %eax": 1,
                "calll - <.text+>;cmpl $, %eax;jne  <.text+>;pushl -(%ebp);calll - <.text+>": 1,
                "calll - <.text+>;movl %eax, -(%ebp);cmpl %ebx, ;je - <.text+>;pushl %edi": 1,
                "orl $, %eax;movl %eax, (%edi);pushl $;pushl (%esi);leal -(%ebp), %eax": 1,
                "pushl -(%ebp);leal -(%ebp), %eax;pushl %edi;pushl %eax;pushl -(%ebp)": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;calll - <.text+>;pushl (%ebp)": 1,
                "nop;nop;nop;xorl %eax, %eax;pushl %eax": 1,
                "nop;xorl %eax, %eax;pushl %eax;pushl %eax;pushl $": 1,
                "pushl ;calll *;addl $, %esp;retl;nop": 1,
                "movb $, ;retl;nop;nop;nop": 1,
                "movswl (%edx), %edi;imull %edi, %eax;subl %esi, %eax;addl %ecx, %eax;movswl (%edx), %ecx": 1,
                "movswl (%edx), %ecx;popl %edi;addl %ecx, %eax;popl %esi;popl %ebp": 1,
                "pushl $;pushl $;leal -(%ebp), %ecx;pushl %ecx;pushl $": 1,
                "leal -(%ebp), %ecx;pushl %ecx;pushl $;pushl $;pushl %eax": 1,
                "movl %eax, ;jne  <.text+>;movl $, ;orl $-, %eax;jmp  <.text+>": 1,
                "jmp  <.text+>;pushl $;pushl %eax;calll *;popl %ecx": 1,
                "movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);movl , %eax;cmpl $, %eax": 1,
                "pushl $;pushl %eax;calll - <.text+>;popl %ecx;popl %ecx": 1,
                "movl $, %edi;jmp  <.text+>;pushl $;leal -(%ebp), %eax;pushl %eax": 1,
                "jne  <.text+>;incl %edi;incl %edi;andl $, (%ebp);cmpw $, (%edi)": 1,
                "incl %esi;cmpw $, (%esi);movl %esi, %eax;jne - <.text+>;xorl %eax, %eax": 1,
                "movl %esi, %eax;jne - <.text+>;xorl %eax, %eax;popl %edi;popl %esi": 1,
                "pushl %ebx;pushl %esi;movl (%eax), %esi;movl (%ebp), %eax;pushl %edi": 1,
                "testl %eax, %eax;popl %ecx;popl %ecx;je  <.text+>;pushl %edi": 1,
                "pushl %esi;pushl (%ebp);calll *;popl %edi;popl %esi": 1,
                "addl $, %ecx;jmp  <.text+>;movl -(%ebp), %eax;movl -(%ebp), %ecx;pushl %ecx": 1,
                "pushl %edi;jne  <.text+>;incl %esi;incl %esi;andl $, -(%ebp)": 1,
                "cmpw $, (%esi);movl (%ebp), %ebx;movl (%ebx), %edi;je  <.text+>;leal (%ebx,%edi,), %eax": 1,
                "je  <.text+>;movl (%ebp), %eax;subl $, (%ebp);decl %edi;subl $, (%ebp)": 1,
                "jne  <.text+>;pushl $;movl $, (%ebx);movl $, (%ebx);popl %edi": 1,
                "movl %eax, %edi;movl %edi, -(%ebp);subl %ebx, %edi;sarl %edi;shll %edi": 1,
                "movl %edi, -(%ebp);subl %ebx, %edi;sarl %edi;shll %edi;jmp  <.text+>": 1,
                "testl %ecx, %ecx;je  <.text+>;leal (%edi), %eax;testl %eax, %eax;je  <.text+>": 1,
                "movw (%edi), %ax;pushl %eax;calll - <.text+>;testl %eax, %eax;jne  <.text+>": 1,
                "pushl %eax;calll - <.text+>;testl %eax, %eax;jne  <.text+>;movw (%edi), %ax": 1,
                "leal -(%ebp), %eax;pushl %eax;calll *;popl %ecx;leal -(%ebp), %eax": 2,
                "pushl %eax;calll - <.text+>;cmpl $, ;je  <.text+>;testb $, (%ebp)": 1,
                "movl $, %esi;pushl %esi;leal -(%ebp), %ecx;pushl %ecx;pushl %eax": 1,
                "movl $, %edi;addl $, %eax;je  <.text+>;pushl %eax;leal -(%ebp), %eax": 1,
                "movl (%eax,%edi,), %eax;addl $, %eax;je  <.text+>;pushl %eax;calll *": 1,
                "movl %edi, %edi;pushl %ebp;movl %esp, %ebp;movl (%ebp), %eax;cmpw $, (%eax)": 1,
                "jne  <.text+>;xorl %eax, %eax;jmp  <.text+>;pushl %edi;leal -(%ebp), %eax": 1,
                "movw %di, -(%ebp);cmpw %di, -(%ebp);je  <.text+>;leal -(%ebp), %eax;pushl %eax": 1,
                "pushl %esi;calll - <.text+>;addl $, %esp;cmpl %edi, %eax;jne  <.text+>": 1,
                "pushl $;movw %cx, (%esi);xorl %edx, %edx;popl %ecx;divl %ecx": 1,
                "cmpl %edx, -(%ebp);je  <.text+>;movl -(%ebp), %eax;pushl -(%ebp);negl %eax": 1,
                "xorl %edi, %edi;cmpl %edi, %edx;ja  <.text+>;jb  <.text+>;cmpl %eax, -(%ebp)": 1,
                "pushl %edi;calll - <.text+>;addl $, %esp;testl %eax, %eax;jne  <.text+>": 1,
                "pushl %edi;calll - <.text+>;leal -(%ebp), %eax;pushl %eax;pushl $": 3,
                "pushl $;jmp - <.text+>;incl %eax;pushl %eax;pushl %edi": 1,
                "nop;nop;subb %al, (%eax);andl $, %eax;addb %al, (%eax)": 1,
                "leal -(%ebp), %eax;pushl %eax;pushl (%ebp);pushl $;calll - <.text+>": 2,
                "pushl %edi;movl (%ebp), %edi;pushl %esi;movl %eax, -(%ebp);calll - <.text+>": 1,
                "movl %ebx, -(%ebp);movl %esi, -(%ebp);movl %edi, -(%ebp);movw %ss, -(%ebp);movw %cs, -(%ebp)": 1,
                "leal (%ebp), %eax;movl %eax, -(%ebp);leal (%ebp), %eax;movl -(%eax), %eax;movl %eax, -(%ebp)": 1,
                "movl (%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);leal -(%ebp), %eax": 1,
                "movl %eax, -(%ebp);leal -(%ebp), %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp)": 1,
                "movl , %eax;movl %eax, -(%ebp);movl , %eax;movl %eax, -(%ebp);pushl $": 1,
                "addl %eax, (%eax);addb %al, (%eax);movb , %al;decl %eax;addl (%eax), %eax": 1,
                "addb %dl, (%eax);addb (%eax), %al;enter $, $;addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%eax);addb %al, (%eax);addb %al, (%eax);addb %al, (%eax);pushl %ebx": 1,
                "addb %al, (%eax);addb %al, (%eax);pushl %ebx;popal;jb  <.text+>": 1,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;jae  <.text+>;decl %esp;jbe  <.text+>": 1,
                "jns  <.text+>;addb %al, (%eax);addb %dl, (%edx);incl %esp;insb %dx, %es:(%edi)": 1,
                "je  <.text+>;decl %ebx;jns  <.text+>;addb %al, (%eax);addb %dl, (%edx)": 1,
                "insb %dx, %es:(%edi);jne  <.text+>;incl %ebp;js  <.text+>;addb %dh, (%ebx)": 1,
                "js  <.text+>;addb %dh, (%ebx);addb %al, (%eax);pushl %edx;decl %edi": 1,
                "jae  <.text+>;jae  <.text+>;jb  <.text+>;addb %ch, (%eax,%eax);pushl %edx": 1,
                "decl %ebx;jns  <.text+>;js  <.text+>;addb %al, (%eax);addb %al, (%esi)": 1,
                "outsl (%esi), %dx;outsb (%esi), %dx;outsb (%esi), %dx;arpl %si, %gs:(%ecx,%ebp,);outsb (%esi), %dx": 3,
                "arpl %si, %gs:(%ecx,%ebp,);outsb (%esi), %dx;xorb (%edi), %dl;addb %al, (%eax);addb %dl, (%edi)": 1,
                "arpl %si, %gs:(%ecx,%ebp,);outsb (%esi), %dx;xorb (%edi), %dl;addb %al, (%eax);pushl %ebx": 1,
                "pushl %ebp;pushl %ebx;incl %ebp;pushl %edx;xorl (%edx), %esi": 1,
                "stc;addl %eax, (%eax);loop -;addl %eax, (%eax);clc": 1,
                "stc;addl %eax, (%eax);pushl %es;cli;addl %eax, (%eax)": 1,
                "addl %eax, (%eax);pushl %eax;sti;addl %eax, (%eax);pushl $": 1,
                "addl %eax, (%eax);loop -;addl %eax, (%eax);lock;sti": 1,
                "adcb %ah, %bh;addl %eax, (%eax);xorb %bh, %ah;addl %eax, (%eax);decl %edx": 1,
                "addb %al, -(%eax);addl %eax, (%eax);pushl %esi;incb (%ecx);addb %ch, (%esi,%edi,)": 1,
                "addb (%eax), %al;addl %eax, %es:(%edx);addb %dh, (%edx);addl %eax, (%edx);addb %cl, (%eax)": 1,
                "addb (%eax), %al;xchgb %al, (%ecx);addb (%eax), %al;xchgl %esi, %eax;addl %eax, (%edx)": 1,
                "addl %eax, (%edx);addb %ch, -(%eax);addl %eax, (%edx);addb %dl, %dl;addl %eax, (%edx)": 1,
                "addb %dl, (%edx);addb (%eax), %al;bound (%edx), %eax;addb (%eax), %al;jbe  <.text+>": 1,
                "addb (%edx), %al;addb %bh, -(%esi);addb (%edx), %al;addb %dl, %dl;addb (%edx), %al": 1,
                "addb %bh, -(%esi);addb (%edx), %al;addb %dl, %dl;addb (%edx), %al;addb %bl, %ah": 1,
                "addb (%eax), %al;orb $, %al;addb (%eax), %al;pushl %ds;addl (%edx), %eax": 1,
                "addl (%edx), %eax;addb %ch, (%eax);addl (%edx), %eax;addb %dh, (%edx);addl (%edx), %eax": 1,
                "addl (%edx), %eax;addb %bh, -(%eax);addl (%edx), %eax;addb %cl, %ah;addl (%edx), %eax": 1,
                "addb %bh, (%esp,%eax);addb %al, (%esp,%eax);addb (%eax), %al;cwtl;addb $, %al": 1,
                "addb (%eax), %al;addb %al, (%eax);addb %al, (%eax);insb %dx, %es:(%edi);addl $, %eax": 1,
                "pushl $;addb %dh, %al;addb %al, (%esi);decl %esp;imull $, (%edx), %esp": 1,
                "insb %dx, %es:(%edi);outsl (%esi), %dx;arpl %ax, (%eax);addb %bl, %ah;addl %eax, (%edi)": 1,
                "incl %esp;decl %ebp;incl %ebx;jne  <.text+>;jb  <.text+>": 1,
                "insl %dx, %es:(%edi);incl %edx;popal;je  <.text+>;outsl (%esi), %dx": 1,
                "jo  <.text+>;imull $, (%edi), %ebp;jb  <.text+>;popl %ebx;addl (%ebp), %edx": 1,
                "je  <.text+>;jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;rolb $, (%ecx)": 1,
                "je  <.text+>;jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;addb %dl, %ah": 1,
                "jae  <.text+>;addb %dl, %ah;addl %eax, (%edi);je  <.text+>;imull $, (%ebx), %esp": 1,
                "outsb (%esi), %dx;arpl %sp, (%ebp);outsl (%esi), %dx;jne  <.text+>;je  <.text+>": 1,
                "movb $, %dh;pushl %edx;insl %dx, %es:(%edi);outsl (%esi), %dx;jbe  <.text+>": 1,
                "je  <.text+>;imull $, (%ebp), %ebp;bound (%ebp), %esi;jae  <.text+>;addb %al, (%eax)": 2,
                "jne  <.text+>;jb  <.text+>;addb %al, (%eax);inb %dx, %al;addb %al, (%esi)": 1,
                "popal;outsb (%esi), %dx;insb %dx, %es:(%edi);jb  <.text+>;jmp ": 1,
                "pushl %eax;jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;addb %al, (%eax)": 1,
                "addb %al, %gs:(%eax);outsb (%esi), %dx;addl (%esi), %edx;jb  <.text+>;jne  <.text+>": 1,
                "addb %al, %gs:(%edx);addl (%ebx), %edx;je  <.text+>;outsb (%esi), %dx;jbe  <.text+>": 1,
                "addl %eax, (%edi);je  <.text+>;popal;je  <.text+>;incl %esi": 1,
                "outsl (%esi), %dx;jb  <.text+>;addb %dh, (%ecx);addb %al, (%ebx);outsl (%esi), %dx": 1,
                "outsl (%esi), %dx;jae  <.text+>;decl %eax;popal;outsb (%esi), %dx": 1,
                "outsb (%esi), %dx;insb %dx, %es:(%edi);addb %dh, %gs:(%eax);addl (%ebx), %edx;je  <.text+>": 1,
                "arpl %ax, (%ecx);jb  <.text+>;jae  <.text+>;addb %al, (%eax);jns  <.text+>": 1,
                "decl %eax;popal;outsb (%esi), %dx;insb %dx, %es:(%edi);pushl %edi": 1,
                "je  <.text+>;imull $, (%ebp), %ebp;jb  <.text+>;addb %ch, (%ebx,%eax);arpl %bp, (%ebp)": 1,
                "addb %al, (%eax);scasl %es:(%edi), %eax;addl (%ebx,%esi,), %ebp;jb  <.text+>;insl %dx, %es:(%edi)": 1,
                "insl %dx, %es:(%edi);jo  <.text+>;pushl %edi;addb %al, ;jo  <.text+>": 1,
                "cmpsb %es:(%edi), (%esi);addb (%edx), %dl;popal;incl %esi;imull $, (%ebp), %ebp": 1,
                "je  <.text+>;incl %ebx;outsl (%esi), %dx;outsb (%esi), %dx;jae  <.text+>": 1,
                "outsb (%esi), %dx;jae  <.text+>;insb %dx, %es:(%edi);decl %edi;jne  <.text+>": 2,
                "pushl $;je  <.text+>;jb  <.text+>;addb %ah, %dl;addb (%ebx), %dl": 1,
                "jne  <.text+>;jae  <.text+>;jb  <.text+>;outsl (%esi), %dx;jae  <.text+>": 1,
                "addb %al, (%eax);cltd;addb (%edx), %dl;imull $, (%ebx), %esi;jo  <.text+>": 1,
                "addb (%edx), %dl;imull $, (%ebx), %esi;jo  <.text+>;imull $, (%edi), %ebp;incl %edi": 1,
                "incl %esi;imull $, (%ebp), %ebp;imull $, (%esi), %ebp;addb %bl, %dl;addb %al, (%esi)": 1,
                "addb %al, (%esi);outsb (%esi), %dx;decl %esi;js  <.text+>;incl %esi": 1,
                "jne  <.text+>;insb %dx, %es:(%edi);pushl %eax;popal;je  <.text+>": 1,
                "addb %al, (%eax);sbbl %eax, (%ebx);pushl %ebx;je  <.text+>;outsl (%esi), %dx": 1,
                "outsl (%esi), %dx;pushl %ebx;jns  <.text+>;je  <.text+>;insl %dx, %es:(%edi)": 1,
                "popl %edi;imull $, (%esi), %ebp;insl %dx, %es:(%edi);addb %ch, (%ebp);popl %edi": 1,
                "addb %dh, (%ebx,%eax);ja  <.text+>;jae  <.text+>;je  <.text+>;addb %al, (%eax)": 1,
                "jne  <.text+>;pushl $;js  <.text+>;je  <.text+>;addb %dh, (%edx,%eax)": 1,
                "jne  <.text+>;addb %ch, %bl;addb %bl, (%edi);jb  <.text+>;outsb (%esi), %dx": 1,
                "addb (%ecx), %ch;ja  <.text+>;insb %dx, %es:(%edi);jo  <.text+>;popal": 1,
                "addb %bl, (%edi);imull $, (%esi), %ebp;je  <.text+>;ja  <.text+>;outsl (%esi), %dx": 1,
                "ja  <.text+>;jb  <.text+>;outsb (%esi), %dx;je  <.text+>;addb %al, (%eax)": 1,
                "addb %al, (%eax);addl %es:(%edi), %esi;jae  <.text+>;popal;je  <.text+>": 1,
                "outsb (%esi), %dx;addb %bl, (%ecx);je  <.text+>;addb %bh, (%ecx,%eax);outsl (%esi), %dx": 1,
                "jae  <.text+>;pushl $;addb (%ecx), %ch;ja  <.text+>;jo  <.text+>": 1,
                "arpl %sp, (%ebp);addb %cl, (%eax);addb (%edi), %bl;insb %dx, %es:(%edi);insb %dx, %es:(%edi)": 1,
                "addb %cl, (%eax);addb (%edi), %bl;insb %dx, %es:(%edi);insb %dx, %es:(%edi);addb %dl, %bh": 1,
                "movl $, (%edx);imull $, (%edi), %esp;addl %ebx, (%edi);je  <.text+>;pushl $": 1,
                "addb %bl, (%edi);outsl (%esi), %dx;outsb (%esi), %dx;je  <.text+>;outsl (%esi), %dx": 1,
                "outsl (%esi), %dx;insb %dx, %es:(%edi);jo  <.text+>;addb %bl, %ah;addl %ebx, (%edi)": 1,
                "jo  <.text+>;addb %bl, %ah;addl %ebx, (%edi);je  <.text+>;insl %dx, %es:(%edi)": 1,
                "addl %ebx, (%edi);je  <.text+>;insl %dx, %es:(%edi);jo  <.text+>;addb %al, (%eax)": 1,
                "addb %al, (%eax);xorl (%ebx), %eax;ja  <.text+>;jae  <.text+>;jo  <.text+>": 1,
                "addb %al, (%eax);sbbl $, %eax;jne  <.text+>;jo  <.text+>;jb  <.text+>": 1,
                "jae  <.text+>;jb  <.text+>;bound (%edx), %ebp;arpl %si, (%ecx,%ecx,);outsw (%esi), %dx": 1,
                "jb  <.text+>;arpl %sp, (%ebp);jae  <.text+>;imull $, (%esi), %ebp;popal": 1,
                "arpl %sp, (%ebp);jae  <.text+>;imull $, (%esi), %ebp;popal;je  <.text+>": 1,
                "addb %al, (%edx);addb %al, (%eax);addb %ah, (%eax);addb %al, (%eax);addb %al, (%eax)": 1,
                "addl %eax, (%eax);cmpb %cl, (%esi);addl (%ebx), %edi;int;popl %esp": 1
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                "RichY": 1,
                ".text": 1,
                "`.data": 1,
                ".rsrc": 1,
                "KERNEL32.dll": 2,
                "NTDLL.DLL": 1,
                "msvcrt.dll": 2,
                "USER32.dll": 2,
                "JYYf97": 1,
                "YYuHS": 1,
                "QQSVWj": 1,
                "QQSVW": 2,
                "1j%[f;": 1,
                "J1t095D": 1,
                "t)VVVV": 1,
                "JVSSj": 2,
                "Wt j*V": 1,
                "JYY9^": 1,
                "JYPVV": 1,
                "SetConsoleInputExeNameW": 1,
                "IsDebuggerPresent": 1,
                "CopyFileExW": 1,
                "PVhxL": 1,
                "PVh\\L": 1,
                "PVh<L": 1,
                "Jj Zf;": 1,
                "JYY_^[": 2,
                "SetThreadUILanguage": 1,
                "j(hhQ": 1,
                ">\"u*Fj\"FV": 1,
                "@<VWj(": 1,
                "YYuWj": 1,
                "usj(V": 1,
                "ugj)V": 1,
                "u[j@V": 1,
                "uOj^V": 1,
                "uCj|V": 1,
                ":tXAAC": 1,
                "YYtgf": 1,
                ":t^f;": 1,
                ":taf;": 1,
                "tDSSVWj": 1,
                "t,@@f": 1,
                "9:tq9]": 1,
                "SWj^V": 1,
                "J_[^]": 1,
                "PVh@F": 2,
                "AAQhT*": 1,
                "JYYf9;": 1,
                "HpjLX": 1,
                "F8SPV": 1,
                "YY^_]": 1,
                "JYYj)": 1,
                "F<@@Ph": 1,
                ":j\\_u": 1,
                "JWtpS": 1,
                "Yu69E": 1,
                "t+jL_": 1,
                "<XCFF;]": 1,
                "JYY^]": 1,
                "PSVW3": 1,
                "twf;E": 1,
                "CCf!4Chp": 1,
                "Gf9\\F": 1,
                "tcj/P": 2,
                "t$SSj": 2,
                "@f9>t": 1,
                "JujSS": 1,
                "AFFf9": 1,
                "r,Vh$": 1,
                "J950;": 1,
                "QSVW3": 1,
                "PVh6#": 1,
                "JYj*V": 1,
                "YYt3hx": 1,
                "YYt%h\\": 1,
                "HuKQS": 1,
                "v<YY3": 1,
                "NtQueryInformationProcess": 1,
                "VVVVV": 1,
                "WWWWWj": 1,
                "SVWj,": 1,
                "_ _^[": 1,
                "t6h(#": 1,
                "Ju@VW": 1,
                "SVWtH": 1,
                "G;=T;": 1,
                "QRPh(": 1,
                "JVh<#": 1,
                "u)hA#": 1,
                ">FFCC": 1,
                "F<SPV": 1,
                "SSSSVh": 1,
                "t$SSSS": 1,
                "SFSFS": 1,
                "\"u)CCS": 1,
                "@@BBf": 1,
                "YYu&Sj": 1,
                "JWWWP": 1,
                "JYYWW": 1,
                "J }3j@": 1,
                "JPWPVh": 1,
                "RQh@K": 1,
                "u\"Sh7#": 1,
                "YYSSj": 2,
                "u\"Sh8#": 1,
                "JSh:#": 1,
                ">:u)j": 1,
                ">:u\"j": 1,
                "JYYusVh": 1,
                "JuLVh": 1,
                "JYYu7Vh": 1,
                "JYYu\"Vh": 1,
                "JYYPS": 1,
                "JYYVSW": 1,
                "@@f;U": 1,
                "st2Ht#": 1,
                "FFj:V": 1,
                "YYt.f": 1,
                "FWFVS": 1,
                "JWh?#": 1,
                "JYPSj": 1,
                "JYYj*": 1,
                ":j\\^j": 1,
                "r Ph,": 1,
                "SSVWh": 1,
                "VWh]#": 2,
                "Ht?Ht\"": 1,
                "K,SQP": 1,
                "JuH9]": 1,
                "PWhb#": 1,
                "YYh 8": 1,
                "PWhu#": 1,
                "YYtPj0": 1,
                "Null environment": 1,
                "vDNt@Nt4Nt(Nt": 1,
                "CCFFf9": 2,
                "YYtzVC": 1,
                "YYt.f9": 1,
                "t'HHt": 1,
                "APerformUnaryOperation: '%c'": 1,
                "%t>Ht0": 1,
                "<tUHtGHt*": 1,
                "APerformArithmeticOperation: '%c'": 1,
                "YYuWS": 1,
                " v(PS": 1,
                "=t4ShP": 1,
                "VWtvf9": 1,
                "Y@_^[": 1,
                "IIt/It,IIt$": 1,
                "twf9>trV": 1,
                "JYPVj": 1,
                "?.u$j{^Wj": 1,
                "PVhT*": 1,
                "ttf9>to": 1,
                "FFf9>u": 1,
                "tIf9>tDV": 1,
                "JSVW3": 1,
                "JYWWWW": 1,
                "u+hxK": 1,
                "f97u!95": 1,
                "Jf9tG": 1,
                "YY[_3": 1,
                "JYY_^[]": 1,
                "!uaj!": 1,
                "C4;{4u": 1,
                "Ht^HuR": 1,
                "9uFSh|": 1,
                "J_^[3": 1,
                "v<PhH": 1,
                "HtCHt": 1,
                "HuhSVh": 1,
                "9u7SVh|": 1,
                "SVWt#j": 1,
                "J_^[]": 1,
                "tAHt3HHt$": 1,
                "YYt&h": 1,
                "F' t$": 1,
                "QRPhH": 1,
                "ADVAPI32.dll": 1,
                "SHELL32.dll": 1,
                "MPR.dll": 1,
                "SaferRecordEventLogEntry": 1,
                "ImpersonateLoggedOnUser": 1,
                "SaferCloseLevel": 1,
                "SaferComputeTokenFromLevel": 1,
                "SaferIdentifyLevel": 1,
                "RevertToSelf": 1,
                "RegQueryValueW": 1,
                "RegEnumKeyW": 1,
                "RegDeleteKeyW": 1,
                "RegSetValueW": 1,
                "RegCloseKey": 1,
                "RegQueryValueExW": 1,
                "RegOpenKeyW": 1,
                "RegSetValueExW": 1,
                "RegCreateKeyExW": 1,
                "CreateProcessAsUserW": 1,
                "RegOpenKeyExW": 1,
                "FreeSid": 1,
                "LookupAccountSidW": 1,
                "GetSecurityDescriptorOwner": 1,
                "GetFileSecurityW": 1,
                "WNetCancelConnection2W": 1,
                "WNetGetConnectionW": 1,
                "WNetAddConnection2W": 1,
                "ShellExecuteExW": 1,
                "SHChangeNotify": 1,
                "FlushConsoleInputBuffer": 1,
                "LoadLibraryA": 1,
                "InterlockedExchange": 1,
                "FreeLibrary": 1,
                "LocalAlloc": 1,
                "GetVDMCurrentDirectories": 1,
                "CmdBatNotification": 1,
                "GetModuleHandleA": 1,
                "SetUnhandledExceptionFilter": 1,
                "UnhandledExceptionFilter": 1,
                "GetCurrentProcess": 1,
                "GetSystemTimeAsFileTime": 1,
                "GetCurrentProcessId": 1,
                "GetTickCount": 1,
                "QueryPerformanceCounter": 1,
                "GetThreadLocale": 1,
                "GetDiskFreeSpaceExW": 1,
                "CompareFileTime": 1,
                "RemoveDirectoryW": 1,
                "GetCurrentDirectoryW": 1,
                "SetCurrentDirectoryW": 1,
                "TerminateProcess": 1,
                "WaitForSingleObject": 1,
                "GetExitCodeProcess": 1,
                "CopyFileW": 1,
                "SetFileAttributesW": 1,
                "DeleteFileW": 1,
                "SetFileTime": 1,
                "CreateDirectoryW": 1,
                "FillConsoleOutputAttribute": 1,
                "SetConsoleTextAttribute": 1,
                "ScrollConsoleScreenBufferW": 1,
                "FormatMessageW": 1,
                "DuplicateHandle": 1,
                "FlushFileBuffers": 1,
                "HeapReAlloc": 1,
                "HeapSize": 1,
                "GetFileAttributesExW": 1,
                "LocalFree": 1,
                "GetDriveTypeW": 1,
                "InitializeCriticalSection": 1,
                "SetConsoleCtrlHandler": 1,
                "GetWindowsDirectoryW": 1,
                "GetConsoleTitleW": 1,
                "GetModuleFileNameW": 1,
                "GetVersion": 1,
                "EnterCriticalSection": 1,
                "LeaveCriticalSection": 1,
                "ExpandEnvironmentStringsW": 1,
                "SearchPathW": 1,
                "WriteFile": 1,
                "GetVolumeInformationW": 1,
                "SetLastError": 1,
                "MoveFileW": 1,
                "SetConsoleTitleW": 1,
                "MoveFileExW": 1,
                "GetBinaryTypeW": 1,
                "GetFileAttributesW": 1,
                "GetCurrentThreadId": 1,
                "CreateProcessW": 1,
                "LoadLibraryW": 1,
                "ReadProcessMemory": 1,
                "SetErrorMode": 1,
                "GetConsoleMode": 1,
                "SetConsoleMode": 1,
                "VirtualAlloc": 1,
                "VirtualFree": 1,
                "SetEnvironmentVariableW": 1,
                "GetEnvironmentVariableW": 1,
                "GetCommandLineW": 1,
                "GetEnvironmentStringsW": 1,
                "GetLocalTime": 1,
                "GetTimeFormatW": 1,
                "FileTimeToLocalFileTime": 1,
                "GetDateFormatW": 1,
                "GetLastError": 1,
                "CloseHandle": 1,
                "SetThreadLocale": 1,
                "GetProcAddress": 1,
                "GetModuleHandleW": 1,
                "SetFilePointer": 1,
                "lstrcmpW": 1,
                "lstrcmpiW": 1,
                "HeapAlloc": 1,
                "GetProcessHeap": 1,
                "HeapFree": 1,
                "MultiByteToWideChar": 1,
                "ReadFile": 1,
                "WriteConsoleW": 1,
                "FillConsoleOutputCharacterW": 1,
                "SetConsoleCursorPosition": 1,
                "ReadConsoleW": 1,
                "GetConsoleScreenBufferInfo": 1,
                "GetStdHandle": 1,
                "GetFileType": 1,
                "VirtualQuery": 1,
                "RaiseException": 1,
                "GetCPInfo": 1,
                "GetConsoleOutputCP": 1,
                "WideCharToMultiByte": 1,
                "GetFileSize": 1,
                "CreateFileW": 1,
                "FindClose": 1,
                "FindNextFileW": 1,
                "FindFirstFileW": 1,
                "GetFullPathNameW": 1,
                "GetUserDefaultLCID": 1,
                "GetLocaleInfoW": 1,
                "SetLocalTime": 1,
                "SystemTimeToFileTime": 1,
                "GetSystemTime": 1,
                "FileTimeToSystemTime": 1,
                "__p__fmode": 1,
                "__p__commode": 1,
                "_adjust_fdiv": 1,
                "__setusermatherr": 1,
                "_initterm": 1,
                "__getmainargs": 1,
                "__initenv": 1,
                "_cexit": 1,
                "_XcptFilter": 1,
                "_exit": 1,
                "_c_exit": 1,
                "calloc": 1,
                "_wcslwr": 1,
                "qsort": 1,
                "_vsnwprintf": 1,
                "wcsstr": 1,
                "_dup2": 1,
                "_open_osfhandle": 1,
                "_close": 1,
                "swscanf": 1,
                "_ultoa": 1,
                "_pipe": 1,
                "_seh_longjmp_unwind": 1,
                "_setmode": 1,
                "wcsncmp": 1,
                "iswxdigit": 1,
                "fflush": 1,
                "_wtol": 1,
                "srand": 1,
                "__set_app_type": 1,
                "wcsrchr": 1,
                "malloc": 1,
                "wcstoul": 1,
                "_errno": 1,
                "iswalpha": 1,
                "printf": 1,
                "swprintf": 1,
                "fprintf": 1,
                "towlower": 1,
                "realloc": 1,
                "setlocale": 1,
                "_snwprintf": 1,
                "wcscat": 1,
                "_wcsupr": 1,
                "wcsncpy": 1,
                "_wpopen": 1,
                "fgets": 1,
                "_pclose": 1,
                "memmove": 1,
                "wcschr": 1,
                "iswspace": 1,
                "_tell": 1,
                "longjmp": 1,
                "wcscmp": 1,
                "_wcsnicmp": 1,
                "_wcsicmp": 1,
                "wcstol": 1,
                "iswdigit": 1,
                "_getch": 1,
                "_get_osfhandle": 1,
                "_controlfp": 1,
                "_setjmp3": 1,
                "_except_handler3": 1,
                "wcscpy": 1,
                "wcslen": 1,
                "wcsspn": 1,
                "towupper": 1,
                "GetUserObjectInformationW": 1,
                "GetThreadDesktop": 1,
                "MessageBeep": 1,
                "GetProcessWindowStation": 1,
                "cmd.pdb": 1,
                "CMD Internal Error %s": 1,
                "wwwwwwwwwwwwwwww": 1,
                "wwwwwwww": 1,
                "T3333333333333333333333333333333333333333B75": 1,
                "01'22222222222222222222222222222222222222'46A": 1,
                "))))):::::::::::::::::::::::::::::::;+": 1,
                "hyvegggggggggggggggggggggggffw": 1,
                "C]xz|}}}}}}}}}}}}}}}}}}}}}}{z~": 1,
                "kkkkkkkkkkkkkkkkkkkkkkkklrtpmnsqocdO9": 1,
                "PQ^[KIIIIIIIIIIIIIIIIIIIIIIIIJEDHJZDFGYa`_XV": 1,
                "&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&": 1,
                "22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222.............................22": 1,
                "000000000000000000000000000": 1,
                "111111111111111111111111111": 11,
                "111/---/11-111-1-------1111": 1,
                "111-/1/-11111/-111111111111": 1,
                "111-111111111-/111111111111": 1,
                "111-111111-1/-1111111111111": 1,
                "111-/1/-1111-/1111111111111": 1,
                "111/---/1111-11111111111111": 1,
                ".2\"***************************": 1,
                ".2!$$$$$$$$$$$$$$$$$$'#)(#)": 1,
                ".222%": 1,
                "&.2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222": 1,
                "*****************'''''''''''''''": 1,
                ")))))))))))))": 3,
                ")(&&())))(&))": 1,
                ")&((&)&))&())": 1,
                ")&))))))(&)))": 1,
                ")&((&)&)&()))": 1,
                ")(&&()))&))))": 1,
                "' $\"\"\"\"\"\"\"\"!#!%": 1,
                "*********************************": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "perm=m-r-x name=.text": 1,
                "perm=m-rw- name=.data": 1,
                "perm=m-r-- name=.rsrc": 1,
                "type=program": 1,
                "bind=NONE type=FUNC name=KERNEL32.dll_FlushConsoleInputBuffer": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LoadLibraryA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_InterlockedExchange": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FreeLibrary": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LocalAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetVDMCurrentDirectories": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CmdBatNotification": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetModuleHandleA": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetUnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_UnhandledExceptionFilter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemTimeAsFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentProcessId": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTickCount": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_QueryPerformanceCounter": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetThreadLocale": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetDiskFreeSpaceExW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CompareFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_RemoveDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetCurrentDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_TerminateProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WaitForSingleObject": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetExitCodeProcess": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CopyFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetFileAttributesW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DeleteFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FillConsoleOutputAttribute": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleTextAttribute": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ScrollConsoleScreenBufferW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FormatMessageW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_DuplicateHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FlushFileBuffers": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapReAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapSize": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileAttributesExW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LocalFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetDriveTypeW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_InitializeCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleCtrlHandler": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetWindowsDirectoryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleTitleW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetModuleFileNameW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetVersion": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_EnterCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LeaveCriticalSection": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ExpandEnvironmentStringsW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SearchPathW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WriteFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetVolumeInformationW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetLastError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_MoveFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleTitleW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_MoveFileExW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetBinaryTypeW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileAttributesW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCurrentThreadId": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateProcessW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_LoadLibraryW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReadProcessMemory": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetErrorMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleMode": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VirtualAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VirtualFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetEnvironmentVariableW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetEnvironmentVariableW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCommandLineW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetEnvironmentStringsW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLocalTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetTimeFormatW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FileTimeToLocalFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetDateFormatW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLastError": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CloseHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetThreadLocale": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetProcAddress": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetModuleHandleW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetFilePointer": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcmpW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_lstrcmpiW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapAlloc": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetProcessHeap": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_HeapFree": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_MultiByteToWideChar": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReadFile": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WriteConsoleW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FillConsoleOutputCharacterW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetConsoleCursorPosition": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_ReadConsoleW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleScreenBufferInfo": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetStdHandle": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileType": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_VirtualQuery": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_RaiseException": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetCPInfo": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetConsoleOutputCP": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_WideCharToMultiByte": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFileSize": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_CreateFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindClose": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindNextFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FindFirstFileW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetFullPathNameW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetUserDefaultLCID": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetLocaleInfoW": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SetLocalTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_SystemTimeToFileTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_GetSystemTime": 3,
                "bind=NONE type=FUNC name=KERNEL32.dll_FileTimeToSystemTime": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___p__fmode": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___p__commode": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__adjust_fdiv": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___setusermatherr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__initterm": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___getmainargs": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___initenv": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__cexit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__XcptFilter": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__c_exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_calloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcslwr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_qsort": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__vsnwprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsstr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__dup2": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__dup": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__open_osfhandle": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__close": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_swscanf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__ultoa": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__pipe": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__seh_longjmp_unwind": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__setmode": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsncmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_iswxdigit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fflush": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_exit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wtol": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_time": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_srand": 3,
                "bind=NONE type=FUNC name=msvcrt.dll___set_app_type": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsrchr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_malloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_free": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcstoul": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__errno": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_iswalpha": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_printf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_rand": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_swprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__iob": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_towlower": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_realloc": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_setlocale": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__snwprintf": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcscat": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsupr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsncpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wpopen": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_fgets": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__pclose": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_memmove": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcschr": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_iswspace": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__tell": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_longjmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcscmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsnicmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__wcsicmp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcstol": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_iswdigit": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__getch": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__get_osfhandle": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__controlfp": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__setjmp3": 3,
                "bind=NONE type=FUNC name=msvcrt.dll__except_handler3": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcscpy": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcslen": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_wcsspn": 3,
                "bind=NONE type=FUNC name=msvcrt.dll_towupper": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetUserObjectInformationW": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetThreadDesktop": 3,
                "bind=NONE type=FUNC name=USER32.dll_MessageBeep": 3,
                "bind=NONE type=FUNC name=USER32.dll_GetProcessWindowStation": 3,
                "bind=NONE type=FUNC name=ADVAPI32.dll_SaferRecordEventLogEntry": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_ImpersonateLoggedOnUser": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_SaferCloseLevel": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_SaferComputeTokenFromLevel": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_SaferIdentifyLevel": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RevertToSelf": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegQueryValueW": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegEnumKeyW": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegDeleteKeyW": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegSetValueW": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegCloseKey": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegQueryValueExW": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegOpenKeyW": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegSetValueExW": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegCreateKeyExW": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_CreateProcessAsUserW": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_RegOpenKeyExW": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_FreeSid": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_LookupAccountSidW": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_GetSecurityDescriptorOwner": 9,
                "bind=NONE type=FUNC name=ADVAPI32.dll_GetFileSecurityW": 9,
                "section=.data type=utf16le string==ExitCode": 1,
                "section=.data type=utf16le string==ExitCodeAscii": 1,
                "section=.data type=utf16le string=DPATH": 1,
                "section=.data type=utf16le string=CALL": 1,
                "section=.data type=utf16le string=COLOR": 1,
                "section=.data type=utf16le string=TITLE": 1,
                "section=.data type=utf16le string=CHDIR": 1,
                "section=.data type=utf16le string=CMDEXTVERSION": 1,
                "section=.data type=utf16le string=DEFINED": 1,
                "section=.data type=utf16le string=COPY": 1,
                "section=.data type=utf16le string=PATH": 2,
                "section=.data type=utf16le string=PROMPT": 2,
                "section=.data type=utf16le string=PUSHD": 1,
                "section=.data type=utf16le string=POPD": 1,
                "section=.data type=utf16le string=ASSOC": 1,
                "section=.data type=utf16le string=FTYPE": 1,
                "section=.data type=utf16le string=DATE": 1,
                "section=.data type=utf16le string=ECHO": 1,
                "section=.data type=utf16le string=ENDLOCAL": 1,
                "section=.data type=utf16le string=ERASE": 1,
                "section=.data type=utf16le string=ERRORLEVEL": 1,
                "section=.data type=utf16le string=EXIT": 1,
                "section=.data type=utf16le string=EXIST": 1,
                "section=.data type=utf16le string=BREAK": 1,
                "section=.data type=utf16le string=GOTO": 1,
                "section=.data type=utf16le string=KEYS": 1,
                "section=.data type=utf16le string=MKDIR": 1,
                "section=.data type=utf16le string=PAUSE": 1,
                "section=.data type=utf16le string=MOVE": 1,
                "section=.data type=utf16le string=RENAME": 1,
                "section=.data type=utf16le string=RMDIR": 1,
                "section=.data type=utf16le string=SETLOCAL": 1,
                "section=.data type=utf16le string=SHIFT": 1,
                "section=.data type=utf16le string=START": 1,
                "section=.data type=utf16le string=TIME": 1,
                "section=.data type=utf16le string=TYPE": 1,
                "section=.data type=utf16le string=VERIFY": 1,
                "section=.data type=utf16le string==,;+/[] \\t\"": 1,
                "section=.data type=utf16le string=PATHEXT": 1,
                "section=.data type=utf16le string=FOR/?": 1,
                "section=.data type=utf16le string=IF/?": 1,
                "section=.data type=utf16le string=REM/?": 1,
                "section=.data type=utf16le string=COMSPEC": 1,
                "section=.data type=utf32le string=kcquax": 1,
                "section=.data type=utf16le string=%s\\r\\n": 1,
                "section=.data type=utf16le string=.CMD": 1,
                "section=.data type=utf16le string=.BAT": 1,
                "section=.data type=utf16le string=ELSE": 1,
                "section=.data type=utf16le string=:EOF": 1,
                "section=.data type=utf16le string=%s %s": 1,
                "section=.data type=utf16le string=E\\b\\eD": 1,
                "section=.data type=utf16le string=B\\b|G\\b>H": 1,
                "section=.data type=utf16le string=L\\b<N\\a": 1,
                "section=.data type=utf16le string=S\\b Q\\b=V": 1,
                "section=.data type=utf16le string=$\\b$A\\b&C\\b(F\\b)+\\t": 1,
                "section=.data type=utf32le string=\\e\\e  !!PPRRW": 1,
                "section=.data type=utf32le string=nnpp": 1,
                "section=.data type=utf16le string=fdpnxsatz": 1,
                "section=.data type=utf16le string= %s": 1,
                "section=.data type=utf16le string=s) %s": 1,
                "section=.data type=utf16le string=%s %s%s": 1,
                "section=.data type=utf16le string=%c%c": 1,
                "section=.data type=utf16le string= &()[]{}^=;!%'+,`~": 1,
                "section=.data type=utf16le string=\\b\\b  \\b\\b": 1,
                "section=.data type=utf16le string=%02d%s%02d%s": 1,
                "section=.data type=utf16le string=%2d%s%02d%s%02d%s%02d": 1,
                "section=.data type=utf16le string=[%s]": 1,
                "section=.data type=utf16le string=%02d%s%02d%s%02d": 1,
                "section=.data type=utf16le string=%s=%s\\r\\n": 1,
                "section=.data type=utf16le X-%04X": 1,
                "section=.data type=utf16le string=.COM;.EXE;.BAT;.CMD;.VBS;.JS;.WS": 1,
                "section=.data type=utf16le string=+-*/%()|^&=,": 1,
                "section=.data type=utf16le string=+-~!": 1,
                "section=.data type=utf16le string=CMD.EXE": 1,
                "section=.rsrc type=utf16le string=\\vIDI_APPICON": 1,
                "section=.rsrc type=utf8 string=|||\u0308p blocks=Basic Latin,Combining Diacritical Marks": 1,
                "section=.rsrc type=utf16le string=_VERSION_INFO": 1,
                "section=.rsrc type=utf16le string=StringFileInfo": 1,
                "section=.rsrc type=utf16le B0": 1,
                "section=.rsrc type=utf16le string=CompanyName": 1,
                "section=.rsrc type=utf16le string=Microsoft Corporation": 1,
                "section=.rsrc type=utf16le string=FileDescription": 1,
                "section=.rsrc type=utf16le string=Windows Command Processor": 1,
                "section=.rsrc type=utf16le string=FileVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512 (xpsp.080413-2111)": 1,
                "section=.rsrc type=utf16le string=InternalName": 1,
                "section=.rsrc type=utf16le string=LegalCopyright": 1,
                "section=.rsrc type=utf16le string= Microsoft Corporation. All rights reserved.": 1,
                "section=.rsrc type=utf16le string=OriginalFilename": 1,
                "section=.rsrc type=utf16le string=Cmd.Exe": 1,
                "section=.rsrc type=utf16le string=ProductName": 1,
                "section=.rsrc type=utf16le string=Microsoft\u00ae Windows\u00ae Operating System blocks=Basic Latin,Latin-1 Supplement": 1,
                "section=.rsrc type=utf16le string=ProductVersion": 1,
                "section=.rsrc type=utf16le .1.2600.5512": 1,
                "section=.rsrc type=utf16le string=arFileInfo": 1,
                "section=.rsrc type=utf16le string=Translation": 1,
                "section=.rsrc type=utf16le string=NY%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=An incorrect parameter was\\r\\nentered for the command.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The syntax of the command is incorrect.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Press any key to continue . . . %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1, Delete (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=The system cannot accept the path\\r\\nor file name requested.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The system cannot accept the date entered.\\r\\n": 1,
                "section=.rsrc type=utf16le string=No batch label specified to GOTO command.\\r\\n": 1,
                "section=.rsrc type=utf16le string='%1' is not recognized as an internal or external command,\\r\\noperable program or batch file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The system cannot accept the time entered.\\r\\n": 1,
                "section=.rsrc type=utf16le string=(C) Copyright 1985-2001 Microsoft Corp.\\r\\n": 1,
                "section=.rsrc type=utf16le string=^C\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 file(s) copied.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The current date is: %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=The current time is: %0\\r\\n": 1,
                "section=.rsrc type=utf16le string= Directory of %1\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=The system is out of environment space.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The system cannot execute the specified program.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The input line is too long.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The contents of the target file\\r\\nwere lost.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Insert the diskette that contains the batch file\\r\\nand press any key when ready. %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Enter the new date: (mm-dd-yy) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Enter the new time: %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=The handle could not be duplicated\\r\\nduring redirection of handle %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=ECHO is off.\\r\\n": 1,
                "section=.rsrc type=utf16le string=ECHO is on.\\r\\n": 1,
                "section=.rsrc type=utf16le string=VERIFY is off.\\r\\n": 1,
                "section=.rsrc type=utf16le string=VERIFY is on.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The file cannot be copied onto itself.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 was unexpected at this time.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The Process Identification Number is %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=A duplicate file name exists, or the file\\r\\ncannot be found.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1, Are you sure (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=The following character string is too long:\\r\\n%1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Microsoft Windows XP [Version %1]%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=The handle could not be duplicated during\\r\\na pipe operation.\\r\\n": 1,
                "section=.rsrc type=utf16le string=More? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=The system cannot complete the process.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n%1\\r\\n\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string= Volume Serial Number is %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=A subdirectory or file %1 already exists.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Error occurred while processing: %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string= Volume in drive %1 has no label.\\r\\n": 1,
                "section=.rsrc type=utf16le string= Volume in drive %1 is %2\\r\\n": 1,
                "section=.rsrc type=utf16le string=KEYS is on.\\r\\n": 1,
                "section=.rsrc type=utf16le string=KEYS is off.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The system cannot accept the START command parameter %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The system cannot find the file %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The process tried to write to a nonexistent pipe.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\"%1\" is not a recognized device.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The batch file cannot be found.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 file(s) moved.\\r\\n": 1,
                "section=.rsrc type=utf16le string=A program attempted to reference storage outside the\\r\\nlimits of a stack segment.  The program was ended.\\r\\n\\r\\n%1\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Command not implemented.\\r\\n": 1,
                "section=.rsrc type=utf16le string=<DIR>       %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Out of memory.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid switch - \"%1\".\\r\\n": 1,
                "section=.rsrc type=utf16le string=Parameter format not correct - \"%1\".\\r\\n": 1,
                "section=.rsrc type=utf16le string=(Error occurred in environment variable)\\r\\n": 1,
                "section=.rsrc type=utf16le string=     %1 File(s) %2 bytes\\r\\n": 1,
                "section=.rsrc type=utf16le string=     %1 Dir(s)  %2 bytes free\\r\\n": 1,
                "section=.rsrc type=utf16le string=     Total Files Listed:\\r\\n": 1,
                "section=.rsrc type=utf16le string=Terminate batch job (Y/N)? %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=The current directory is invalid.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays the name of or changes the current directory.\\r\\n\\r\\nCHDIR [/D] [drive:][path]\\r\\nCHDIR [..]\\r\\nCD [/D] [drive:][path]\\r\\nCD [..]\\r\\n\\r\\n  ..   Specifies that you want to change to the parent directory.\\r\\n\\r\\nType CD drive: to display the current directory in the specified drive.\\r\\nType CD without parameters to display the current drive and directory.\\r\\n\\r\\nUse the /D switch to change current drive in addition to changing current\\r\\ndirectory for a drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Clears the screen.\\r\\n\\r\\nCLS\\r\\n": 1,
                "section=.rsrc type=utf16le string=Copies one or more files to another location.\\r\\n\\r\\nCOPY [/D] [/V] [/N] [/Y | /-Y] [/Z] [/A | /B ] source [/A | /B]\\r\\n     [+ source [/A | /B] [+ ...]] [destination [/A | /B]]\\r\\n\\r\\n  source       Specifies the file or files to be copied.\\r\\n  /A           Indicates an ASCII text file.\\r\\n  /B           Indicates a binary file.\\r\\n  /D           Allow the destination file to be created decrypted\\r\\n  destination  Specifies the directory and/or filename for the new file(s).\\r\\n  /V           Verifies that new files are written correctly.\\r\\n  /N           Uses short filename, if available, when copying a file with a\\r\\n               non-8dot3 name.\\r\\n  /Y           Suppresses prompting to confirm you want to overwrite an\\r\\n               existing destination file.\\r\\n  /-Y          Causes prompting to confirm you want to overwrite an\\r\\n               existing destination file.\\r\\n  /Z           Copies networked files in restartable mode.\\r\\n\\r\\nThe switch /Y may be preset in the COPYCMD environment variable.\\r\\nThis may be overridden with /-Y on the command line.  Default is\\r\\nto prompt on overwrites unless COPY command is being executed from\\r\\nwithin a batch script.\\r\\n\\r\\nTo append files, specify a single file for destination, but multiple files\\r\\nfor source (using wildcards or file1+file2+file3 format).\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays or sets the date.\\r\\n\\r\\nDATE [/T | date]\\r\\n\\r\\nType DATE without parameters to display the current date setting and\\r\\na prompt for a new one.  Press ENTER to keep the same date.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deletes one or more files.\\r\\n\\r\\nDEL [/P] [/F] [/S] [/Q] [/A[[:]attributes]] names\\r\\nERASE [/P] [/F] [/S] [/Q] [/A[[:]attributes]] names\\r\\n\\r\\n  names         Specifies a list of one or more files or directories.\\r\\n                Wildcards may be used to delete multiple files. If a\\r\\n                directory is specified, all files within the directory\\r\\n                will be deleted.\\r\\n\\r\\n  /P            Prompts for confirmation before deleting each file.\\r\\n  /F            Force deleting of read-only files.\\r\\n  /S            Delete specified files from all subdirectories.\\r\\n  /Q            Quiet mode, do not ask if ok to delete on global wildcard\\r\\n  /A            Selects files to delete based on attributes\\r\\n  attributes    R  Read-only files            S  System files\\r\\n                H  Hidden files               A  Files ready for archiving\\r\\n                -  Prefix meaning not\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays a list of files and subdirectories in a directory.\\r\\n\\r\\nDIR [drive:][path][filename] [/A[[:]attributes]] [/B] [/C] [/D] [/L] [/N]\\r\\n  [/O[[:]sortorder]] [/P] [/Q] [/S] [/T[[:]timefield]] [/W] [/X] [/4]\\r\\n\\r\\n  [drive:][path][filename]\\r\\n              Specifies drive, directory, and/or files to list.\\r\\n\\r\\n  /A          Displays files with specified attributes.\\r\\n  attributes   D  Directories                R  Read-only files\\r\\n               H  Hidden files               A  Files ready for archiving\\r\\n               S  System files               -  Prefix meaning not\\r\\n  /B          Uses bare format (no heading information or summary).\\r\\n  /C          Display the thousand separator in file sizes.  This is the\\r\\n              default.  Use /-C to disable display of separator.\\r\\n  /D          Same as wide but files are list sorted by column.\\r\\n  /L          Uses lowercase.\\r\\n  /N          New long list format where filenames are on the far right.\\r\\n  /O          List by files in sorted order.\\r\\n  sortorder    N  By name (alphabetic)       S  By size (smallest first)\\r\\n               E  By extension (alphabetic)  D  By date/time (oldest first)\\r\\n               G  Group directories first    -  Prefix to reverse order\\r\\n  /P          Pauses after each screenful of information.\\r\\n  /Q          Display the owner of the file.\\r\\n  /S          Displays files in specified directory and all subdirectories.\\r\\n  /T          Controls which time field displayed or used for sorting\\r\\n  timefield   C  Creation\\r\\n              A  Last Access\\r\\n              W  Last Written\\r\\n  /W          Uses wide list format.\\r\\n  /X          This displays the short names generated for non-8dot3 file\\r\\n              names.  The format is that of /N with the short name inserted\\r\\n              before the long name. If no short name is present, blanks are\\r\\n              displayed in its place.\\r\\n  /4          Displays four-digit years\\r\\n\\r\\nSwitches may be preset in the DIRCMD environment variable.  Over": 1,
                "section=.rsrc type=utf16le string=ride\\r\\npreset switches by prefixing any switch with - (hyphen)--for example, /-W.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Quits the CMD.EXE program (command interpreter) or the current batch\\r\\nscript.\\r\\n\\r\\nEXIT [/B] [exitCode]\\r\\n\\r\\n  /B          specifies to exit the current batch script instead of\\r\\n              CMD.EXE.  If executed from outside a batch script, it\\r\\n              will quit CMD.EXE\\r\\n\\r\\n  exitCode    specifies a numeric number.  if /B is specified, sets\\r\\n              ERRORLEVEL that number.  If quitting CMD.EXE, sets the process\\r\\n              exit code with that number.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Creates a directory.\\r\\n\\r\\nMKDIR [drive:]path\\r\\nMD [drive:]path\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays or sets a search path for executable files.\\r\\n\\r\\nPATH [[drive:]path[;...][;%%PATH%%]\\r\\nPATH ;\\r\\n\\r\\nType PATH ; to clear all search-path settings and direct cmd.exe to search\\r\\nonly in the current directory.\\r\\nType PATH without parameters to display the current path.\\r\\nIncluding %%PATH%% in the new path setting causes the old path to be\\r\\nappended to the new setting.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Changes the cmd.exe command prompt.\\r\\n\\r\\nPROMPT [text]\\r\\n\\r\\n  text    Specifies a new command prompt.\\r\\n\\r\\nPrompt can be made up of normal characters and the following special codes:\\r\\n\\r\\n  $A   & (Ampersand)\\r\\n  $B   | (pipe)\\r\\n  $C   ( (Left parenthesis)\\r\\n  $D   Current date\\r\\n  $E   Escape code (ASCII code 27)\\r\\n  $F   ) (Right parenthesis)\\r\\n  $G   > (greater-than sign)\\r\\n  $H   Backspace (erases previous character)\\r\\n  $L   < (less-than sign)\\r\\n  $N   Current drive\\r\\n  $P   Current drive and path\\r\\n  $Q   = (equal sign)\\r\\n  $S     (space)\\r\\n  $T   Current time\\r\\n  $V   Windows XP version number\\r\\n  $_   Carriage return and linefeed\\r\\n  $$   $ (dollar sign)\\r\\n": 1,
                "section=.rsrc type=utf16le string=Removes (deletes) a directory.\\r\\n\\r\\nRMDIR [/S] [/Q] [drive:]path\\r\\nRD [/S] [/Q] [drive:]path\\r\\n\\r\\n    /S      Removes all directories and files in the specified directory\\r\\n            in addition to the directory itself.  Used to remove a directory\\r\\n            tree.\\r\\n\\r\\n    /Q      Quiet mode, do not ask if ok to remove a directory tree with /S\\r\\n": 1,
                "section=.rsrc type=utf16le string=Renames a file or files.\\r\\n\\r\\nRENAME [drive:][path]filename1 filename2.\\r\\nREN [drive:][path]filename1 filename2.\\r\\n\\r\\nNote that you cannot specify a new drive or path for your destination file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays, sets, or removes cmd.exe environment variables.\\r\\n\\r\\nSET [variable=[string]]\\r\\n\\r\\n  variable  Specifies the environment-variable name.\\r\\n  string    Specifies a series of characters to assign to the variable.\\r\\n\\r\\nType SET without parameters to display the current environment variables.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays or sets the system time.\\r\\n\\r\\nTIME [/T | time]\\r\\n\\r\\nType TIME with no parameters to display the current time setting and a prompt\\r\\nfor a new one.  Press ENTER to keep the same time.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays the contents of a text file or files.\\r\\n\\r\\nTYPE [drive:][path]filename\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays the Windows XP version.\\r\\n\\r\\nVER\\r\\n": 1,
                "section=.rsrc type=utf16le string=Tells cmd.exe whether to verify that your files are written correctly to a\\r\\ndisk.\\r\\n\\r\\nVERIFY [ON | OFF]\\r\\n\\r\\nType VERIFY without a parameter to display the current VERIFY setting.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays the disk volume label and serial number, if they exist.\\r\\n\\r\\nVOL [drive:]\\r\\n": 1,
                "section=.rsrc type=utf16le string=Calls one batch program from another.\\r\\n\\r\\nCALL [drive:][path]filename [batch-parameters]\\r\\n\\r\\n  batch-parameters   Specifies any command-line information required by the\\r\\n                     batch program.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Records comments (remarks) in a batch file or CONFIG.SYS.\\r\\n\\r\\nREM [comment]\\r\\n": 1,
                "section=.rsrc type=utf16le string=Suspends processing of a batch program and displays the message\\r\\n    Press any key to continue . . . %0\\r\\n\\r\\nPAUSE\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays messages, or turns command-echoing on or off.\\r\\n\\r\\n  ECHO [ON | OFF]\\r\\n  ECHO [message]\\r\\n\\r\\nType ECHO without parameters to display the current echo setting.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Directs cmd.exe to a labeled line in a batch program.\\r\\n\\r\\nGOTO label\\r\\n\\r\\n  label   Specifies a text string used in the batch program as a label.\\r\\n\\r\\nYou type a label on a line by itself, beginning with a colon.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Changes the position of replaceable parameters in a batch file.\\r\\n\\r\\nSHIFT [/n]\\r\\n": 1,
                "section=.rsrc type=utf16le string=Performs conditional processing in batch programs.\\r\\n\\r\\nIF [NOT] ERRORLEVEL number command\\r\\nIF [NOT] string1==string2 command\\r\\nIF [NOT] EXIST filename command\\r\\n\\r\\n  NOT               Specifies that Windows XP should carry out \\r\\n                    the command only if the condition is false.\\r\\n\\r\\n  ERRORLEVEL number Specifies a true condition if the last program run\\r\\n                    returned an exit code equal to or greater than the number\\r\\n                    specified.\\r\\n\\r\\n  string1==string2  Specifies a true condition if the specified text strings\\r\\n                    match.\\r\\n\\r\\n  EXIST filename    Specifies a true condition if the specified filename\\r\\n                    exists.\\r\\n\\r\\n  command           Specifies the command to carry out if the condition is\\r\\n                    met.  Command can be followed by ELSE command which\\r\\n                    will execute the command after the ELSE keyword if the\\r\\n                    specified condition is FALSE\\r\\n\\r\\nThe ELSE clause must occur on the same line as the command after the IF.  For\\r\\nexample:\\r\\n\\r\\n    IF EXIST filename. (\\r\\n        del filename.\\r\\n    ) ELSE (\\r\\n        echo filename. missing.\\r\\n    )\\r\\n\\r\\nThe following would NOT work because the del command needs to be terminated\\r\\nby a newline:\\r\\n\\r\\n    IF EXIST filename. del filename. ELSE echo filename. missing\\r\\n\\r\\nNor would the following work, since the ELSE command must be on the same line\\r\\nas the end of the IF command:\\r\\n\\r\\n    IF EXIST filename. del filename.\\r\\n    ELSE echo filename. missing\\r\\n\\r\\nThe following would work if you want it all on one line:\\r\\n\\r\\n    IF EXIST filename. (del filename.) ELSE echo filename. missing\\r\\n": 1,
                "section=.rsrc type=utf16le string=Runs a specified command for each file in a set of files.\\r\\n\\r\\nFOR %%variable IN (set) DO command [command-parameters]\\r\\n\\r\\n  %%variable  Specifies a single letter replaceable parameter.\\r\\n  (set)      Specifies a set of one or more files.  Wildcards may be used.\\r\\n  command    Specifies the command to carry out for each file.\\r\\n  command-parameters\\r\\n             Specifies parameters or switches for the specified command.\\r\\n\\r\\nTo use the FOR command in a batch program, specify %%%%variable instead\\r\\nof %%variable.  Variable names are case sensitive, so %%i is different\\r\\nfrom %%I.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Starts a separate window to run a specified program or command.\\r\\n\\r\\nSTART [\"title\"] [/Dpath] [/I] [/MIN] [/MAX] [/SEPARATE | /SHARED]\\r\\n      [/LOW | /NORMAL | /HIGH | /REALTIME | /ABOVENORMAL | /BELOWNORMAL]\\r\\n      [/WAIT] [/B] [command/program]\\r\\n      [parameters]\\r\\n\\r\\n    \"title\"     Title to display in  window title bar.\\r\\n    path        Starting directory\\r\\n    B           Start application without creating a new window. The\\r\\n                application has ^C handling ignored. Unless the application\\r\\n                enables ^C processing, ^Break is the only way to interrupt\\r\\n                the application\\r\\n    I           The new environment will be the original environment passed\\r\\n                to the cmd.exe and not the current environment.\\r\\n    MIN         Start window minimized\\r\\n    MAX         Start window maximized\\r\\n    SEPARATE    Start 16-bit Windows program in separate memory space\\r\\n    SHARED      Start 16-bit Windows program in shared memory space\\r\\n    LOW         Start application in the IDLE priority class\\r\\n    NORMAL      Start application in the NORMAL priority class\\r\\n    HIGH        Start application in the HIGH priority class\\r\\n    REALTIME    Start application in the REALTIME priority class\\r\\n    ABOVENORMAL Start application in the ABOVENORMAL priority class\\r\\n    BELOWNORMAL Start application in the BELOWNORMAL priority class\\r\\n    WAIT        Start application and wait for it to terminate\\r\\n    command/program\\r\\n                If it is an internal cmd command or a batch file then\\r\\n                the command processor is run with the /K switch to cmd.exe.\\r\\n                This means that the window will remain after the command\\r\\n                has been run.\\r\\n\\r\\n                If it is not an internal cmd command or batch file then\\r\\n                it is a program and will run as either a windowed application\\r\\n                or a console application.\\r\\n\\r\\n    parameters  These are the parameters passed to the command/pro": 1,
                "section=.rsrc type=utf16le string=gram\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=Sets or Clears Extended CTRL+C checking on DOS system\\r\\n\\r\\nThis is present for Compatibility with DOS systems. It has no effect\\r\\nunder Windows XP.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Starts a new instance of the Windows XP command interpreter\\r\\n\\r\\nCMD [/A | /U] [/Q] [/D] [/E:ON | /E:OFF] [/F:ON | /F:OFF] [/V:ON | /V:OFF]\\r\\n    [[/S] [/C | /K] string]\\r\\n\\r\\n/C      Carries out the command specified by string and then terminates\\r\\n/K      Carries out the command specified by string but remains\\r\\n/S      Modifies the treatment of string after /C or /K (see below)\\r\\n/Q      Turns echo off\\r\\n/D      Disable execution of AutoRun commands from registry (see below)\\r\\n/A      Causes the output of internal commands to a pipe or file to be ANSI\\r\\n/U      Causes the output of internal commands to a pipe or file to be\\r\\n        Unicode\\r\\n/T:fg   Sets the foreground/background colors (see COLOR /? for more info)\\r\\n/E:ON   Enable command extensions (see below)\\r\\n/E:OFF  Disable command extensions (see below)\\r\\n/F:ON   Enable file and directory name completion characters (see below)\\r\\n/F:OFF  Disable file and directory name completion characters (see below)\\r\\n/V:ON   Enable delayed environment variable expansion using ! as the\\r\\n        delimiter. For example, /V:ON would allow !var! to expand the\\r\\n        variable var at execution time.  The %var% syntax expands variables\\r\\n        at input time, which is quite a different thing when inside of a FOR\\r\\n        loop.\\r\\n/V:OFF  Disable delayed environment expansion.\\r\\n\\r\\nNote that multiple commands separated by the command separator '&&'\\r\\nare accepted for string if surrounded by quotes.  Also, for compatibility\\r\\nreasons, /X is the same as /E:ON, /Y is the same as /E:OFF and /R is the\\r\\nsame as /C.  Any other switches are ignored.\\r\\n\\r\\nIf /C or /K is specified, then the remainder of the command line after\\r\\nthe switch is processed as a command line, where the following logic is\\r\\nused to process quote (\") characters:\\r\\n\\r\\n    1.  If all of the following conditions are met, then quote characters\\r\\n        on the command line are preserved:\\r\\n\\r\\n        - no /S switch\\r\\n        - exactly two quote characters": 1,
                "section=.rsrc type=utf16le string=\\n        - no special characters between the two quote characters,\\r\\n          where special is one of: &<>()@^|\\r\\n        - there are one or more whitespace characters between the\\r\\n          the two quote characters\\r\\n        - the string between the two quote characters is the name\\r\\n          of an executable file.\\r\\n\\r\\n    2.  Otherwise, old behavior is to see if the first character is\\r\\n        a quote character and if so, strip the leading character and\\r\\n        remove the last quote character on the command line, preserving\\r\\n        any text after the last quote character.\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=If /D was NOT specified on the command line, then when CMD.EXE starts, it\\r\\nlooks for the following REG_SZ/REG_EXPAND_SZ registry variables, and if\\r\\neither or both are present, they are executed first.\\r\\n\\r\\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Command Processor\\AutoRun\\r\\n\\r\\n        and/or\\r\\n\\r\\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Command Processor\\AutoRun\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCommand Extensions are enabled by default.  You may also disable\\r\\nextensions for a particular invocation by using the /E:OFF switch.  You\\r\\ncan enable or disable extensions for all invocations of CMD.EXE on a\\r\\nmachine and/or user logon session by setting either or both of the\\r\\nfollowing REG_DWORD values in the registry using REGEDT32.EXE:\\r\\n\\r\\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Command Processor\\EnableExtensions\\r\\n\\r\\n        and/or\\r\\n\\r\\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Command Processor\\EnableExtensions\\r\\n\\r\\nto either 0x1 or 0x0.  The user specific setting takes precedence over\\r\\nthe machine setting.  The command line switches take precedence over the\\r\\nregistry settings.\\r\\n\\r\\nThe command extensions involve changes and/or additions to the following\\r\\ncommands:\\r\\n\\r\\n    DEL or ERASE\\r\\n    COLOR\\r\\n    CD or CHDIR\\r\\n    MD or MKDIR\\r\\n    PROMPT\\r\\n    PUSHD\\r\\n    POPD\\r\\n    SET\\r\\n    SETLOCAL\\r\\n    ENDLOCAL\\r\\n    IF\\r\\n    FOR\\r\\n    CALL\\r\\n    SHIFT\\r\\n    GOTO\\r\\n    START (also includes changes to external command invocation)\\r\\n    ASSOC\\r\\n    FTYPE\\r\\n\\r\\nTo get specific details, type commandname /? to view the specifics.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nDelayed environment variable expansion is NOT enabled by default.  You\\r\\ncan enable or disable delayed environment variable expansion for a\\r\\nparticular invocation of CMD.EXE with the /V:ON or /V:OFF switch.  You\\r\\ncan enable or disable completion for all invocations of CMD.EXE on a\\r\\nmachine and/or user logon session by setting either or both of the\\r\\nfollowing REG_DWORD values in the registry using REGEDT32.EXE:\\r\\n\\r\\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Command Processor\\DelayedExpansion\\r\\n\\r\\n        and/or\\r\\n\\r\\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Command Processor\\DelayedExpansion\\r\\n\\r\\nto either 0x1 or 0x0.  The user specific setting takes precedence over\\r\\nthe machine setting.  The command line switches take precedence over the\\r\\nregistry settings.\\r\\n\\r\\nIf delayed environment variable expansion is enabled, then the exclamation\\r\\ncharacter can be used to substitute the value of an environment variable\\r\\nat execution time.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nFile and Directory name completion is NOT enabled by default.  You can\\r\\nenable or disable file name completion for a particular invocation of\\r\\nCMD.EXE with the /F:ON or /F:OFF switch.  You can enable or disable\\r\\ncompletion for all invocations of CMD.EXE on a machine and/or user logon\\r\\nsession by setting either or both of the following REG_DWORD values in\\r\\nthe registry using REGEDT32.EXE:\\r\\n\\r\\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Command Processor\\CompletionChar\\r\\n    HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Command Processor\\PathCompletionChar\\r\\n\\r\\n        and/or\\r\\n\\r\\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Command Processor\\CompletionChar\\r\\n    HKEY_CURRENT_USER\\Software\\Microsoft\\Command Processor\\PathCompletionChar\\r\\n\\r\\nwith the hex value of a control character to use for a particular\\r\\nfunction (e.g.  0x4 is Ctrl-D and 0x6 is Ctrl-F).  The user specific\\r\\nsettings take precedence over the machine settings.  The command line\\r\\nswitches take precedence over the registry settings.\\r\\n\\r\\nIf completion is enabled with the /F:ON switch, the two control\\r\\ncharacters used are Ctrl-D for directory name completion and Ctrl-F for\\r\\nfile name completion.  To disable a particular completion character in\\r\\nthe registry, use the value for space (0x20) as it is not a valid\\r\\ncontrol character.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nCompletion is invoked when you type either of the two control\\r\\ncharacters.  The completion function takes the path string to the left\\r\\nof the cursor appends a wild card character to it if none is already\\r\\npresent and builds up a list of paths that match.  It then displays the\\r\\nfirst matching path.  If no paths match, it just beeps and leaves the\\r\\ndisplay alone.  Thereafter, repeated pressing of the same control\\r\\ncharacter will cycle through the list of matching paths.  Pressing the\\r\\nShift key with the control character will move through the list\\r\\nbackwards.  If you edit the line in any way and press the control\\r\\ncharacter again, the saved list of matching paths is discarded and a new\\r\\none generated.  The same occurs if you switch between file and directory\\r\\nname completion.  The only difference between the two control characters\\r\\nis the file completion character matches both file and directory names,\\r\\nwhile the directory completion character only matches directory names.\\r\\nIf file completion is used on any of the built in directory commands\\r\\n(CD, MD or RD) then directory completion is assumed.\\r\\n\\r\\nThe completion code deals correctly with file names that contain spaces\\r\\nor other special characters by placing quotes around the matching path.\\r\\nAlso, if you back up, then invoke completion from within a line, the\\r\\ntext to the right of the cursor at the point completion was invoked is\\r\\ndiscarded.\\r\\n\\r\\nThe special characters that require quotes are:\\r\\n     <space>\\r\\n     &()[]{}^=;!%'+,`~\\r\\n": 1,
                "section=.rsrc type=utf16le string=Command Processor Extensions Enabled\\r\\n": 1,
                "section=.rsrc type=utf16le string=Command Processor Extensions enabled by default.  Use CMD /? for details.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Deleted file - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays or modifies file extension associations\\r\\n\\r\\nASSOC [.ext[=[fileType]]]\\r\\n\\r\\n  .ext      Specifies the file extension to associate the file type with\\r\\n  fileType  Specifies the file type to associate with the file extension\\r\\n\\r\\nType ASSOC without parameters to display the current file associations.\\r\\nIf ASSOC is invoked with just a file extension, it displays the current\\r\\nfile association for that file extension.  Specify nothing for the file\\r\\ntype and the command will delete the association for the file extension.\\r\\n": 1,
                "section=.rsrc type=utf16le string=File association not found for extension %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Displays or modifies file types used in file extension associations\\r\\n\\r\\nFTYPE [fileType[=[openCommandString]]]\\r\\n\\r\\n  fileType  Specifies the file type to examine or change\\r\\n  openCommandString Specifies the open command to use when launching files\\r\\n                    of this type.\\r\\n\\r\\nType FTYPE without parameters to display the current file types that\\r\\nhave open command strings defined.  FTYPE is invoked with just a file\\r\\ntype, it displays the current open command string for that file type.\\r\\nSpecify nothing for the open command string and the FTYPE command will\\r\\ndelete the open command string for the file type.  Within an open\\r\\ncommand string %%0 or %%1 are substituted with the file name being\\r\\nlaunched through the assocation.  %%* gets all the parameters and %%2\\r\\ngets the 1st parameter, %%3 the second, etc.  %%~n gets all the remaining\\r\\nparameters starting with the nth parameter, where n may be between 2 and 9,\\r\\ninclusive.  For example:\\r\\n\\r\\n    ASSOC .pl=PerlScript\\r\\n    FTYPE PerlScript=perl.exe %%1 %%*\\r\\n\\r\\nwould allow you to invoke a Perl script as follows:\\r\\n\\r\\n    script.pl 1 2 3\\r\\n\\r\\nIf you want to eliminate the need to type the extensions, then do the\\r\\nfollowing:\\r\\n\\r\\n    set PATHEXT=.pl;%%PATHEXT%%\\r\\n\\r\\nand the script could be invoked as follows:\\r\\n\\r\\n    script 1 2 3\\r\\n": 1,
                "section=.rsrc type=utf16le string=File type '%1' not found or no open command associated with it.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid parameter to SETLOCAL command\\r\\n": 1,
                "section=.rsrc type=utf16le string=The restartable option to the COPY command is not supported by\\r\\nthis version of the operating system.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The following usage of the path operator in batch-parameter\\r\\nsubstitution is invalid: %1\\r\\n\\r\\nFor valid formats type CALL /? or FOR /?\\r\\n": 1,
                "section=.rsrc type=utf16le string=Environment variable %1 not defined\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid attempt to call batch label outside of batch script.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The system cannot find the batch label specified - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=The unicode output option to CMD.EXE is not supported by this\\r\\nversion of the operating system.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled DEL and ERASE change as follows:\\r\\n\\r\\nThe display semantics of the /S switch are reversed in that it shows\\r\\nyou only the files that are deleted, not the ones it could not find.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled CHDIR changes as follows:\\r\\n\\r\\nThe current directory string is converted to use the same case as\\r\\nthe on disk names.  So CD C:\\TEMP would actually set the current\\r\\ndirectory to C:\\Temp if that is the case on disk.\\r\\n\\r\\nCHDIR command does not treat spaces as delimiters, so it is possible to\\r\\nCD into a subdirectory name that contains a space without surrounding\\r\\nthe name with quotes.  For example:\\r\\n\\r\\n    cd \\winnt\\profiles\\username\\programs\\start menu\\r\\n\\r\\nis the same as:\\r\\n\\r\\n    cd \"\\winnt\\profiles\\username\\programs\\start menu\"\\r\\n\\r\\nwhich is what you would have to type if extensions were disabled.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled MKDIR changes as follows:\\r\\n\\r\\nMKDIR creates any intermediate directories in the path, if needed.\\r\\nFor example, assume \\a does not exist then:\\r\\n\\r\\n    mkdir \\a\\b\\c\\d\\r\\n\\r\\nis the same as:\\r\\n\\r\\n    mkdir \\a\\r\\n    chdir \\a\\r\\n    mkdir b\\r\\n    chdir b\\r\\n    mkdir c\\r\\n    chdir c\\r\\n    mkdir d\\r\\n\\r\\nwhich is what you would have to type if extensions were disabled.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled the DATE command supports\\r\\nthe /T switch which tells the command to just output the\\r\\ncurrent date, without prompting for a new date.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled the TIME command supports\\r\\nthe /T switch which tells the command to just output the\\r\\ncurrent time, without prompting for a new time.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled the PROMPT command supports\\r\\nthe following additional formatting characters:\\r\\n\\r\\n  $+   zero or more plus sign (+) characters depending upon the\\r\\n       depth of the PUSHD directory stack, one character for each\\r\\n       level pushed.\\r\\n\\r\\n  $M   Displays the remote name associated with the current drive\\r\\n       letter or the empty string if current drive is not a network\\r\\n       drive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled the PUSHD command accepts\\r\\nnetwork paths in addition to the normal drive letter and path.\\r\\nIf a network path is specified, PUSHD will create a temporary\\r\\ndrive letter that points to that specified network resource and\\r\\nthen change the current drive and directory, using the newly\\r\\ndefined drive letter.  Temporary drive letters are allocated from\\r\\nZ: on down, using the first unused drive letter found.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled the POPD command will delete\\r\\nany temporary drive letter created by PUSHD when you POPD that\\r\\ndrive off the pushed directory stack.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled SET changes as follows:\\r\\n\\r\\nSET command invoked with just a variable name, no equal sign or value\\r\\nwill display the value of all variables whose prefix matches the name\\r\\ngiven to the SET command.  For example:\\r\\n\\r\\n    SET P\\r\\n\\r\\nwould display all variables that begin with the letter 'P'\\r\\n\\r\\nSET command will set the ERRORLEVEL to 1 if the variable name is not\\r\\nfound in the current environment.\\r\\n\\r\\nSET command will not allow an equal sign to be part of the name of\\r\\na variable.\\r\\n\\r\\nTwo new switches have been added to the SET command:\\r\\n\\r\\n    SET /A expression\\r\\n    SET /P variable=[promptString]\\r\\n\\r\\nThe /A switch specifies that the string to the right of the equal sign\\r\\nis a numerical expression that is evaluated.  The expression evaluator\\r\\nis pretty simple and supports the following operations, in decreasing\\r\\norder of precedence:\\r\\n\\r\\n    ()                  - grouping\\r\\n    ! ~ -               - unary operators\\r\\n    * / %%               - arithmetic operators\\r\\n    + -                 - arithmetic operators\\r\\n    << >>               - logical shift\\r\\n    &                   - bitwise and\\r\\n    ^                   - bitwise exclusive or\\r\\n    |                   - bitwise or\\r\\n    = *= /= %%= += -=    - assignment\\r\\n      &= ^= |= <<= >>=\\r\\n    ,                   - expression separator\\r\\n\\r\\nIf you use any of the logical or modulus operators, you will need to\\r\\nenclose the expression string in quotes.  Any non-numeric strings in the\\r\\nexpression are treated as environment variable names whose values are\\r\\nconverted to numbers before using them.  If an environment variable name\\r\\nis specified but is not defined in the current environment, then a value\\r\\nof zero is used.  This allows you to do arithmetic with environment\\r\\nvariable values without having to type all those %% signs to get their\\r\\nvalues.  If SET /A is executed from the command line outside of a\\r\\ncommand script, then it displays the final value of the": 1,
                "section=.rsrc type=utf16le string=expression.  The\\r\\nassignment operator requires an environment variable name to the left of\\r\\nthe assignment operator.  Numeric values are decimal numbers, unless\\r\\nprefixed by 0x for hexadecimal numbers, and 0 for octal numbers.\\r\\nSo 0x12 is the same as 18 is the same as 022. Please note that the octal\\r\\nnotation can be confusing: 08 and 09 are not valid numbers because 8 and\\r\\n9 are not valid octal digits.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nThe /P switch allows you to set the value of a variable to a line of input\\r\\nentered by the user.  Displays the specified promptString before reading\\r\\nthe line of input.  The promptString can be empty.\\r\\n\\r\\nEnvironment variable substitution has been enhanced as follows:\\r\\n\\r\\n    %%PATH:str1=str2%%\\r\\n\\r\\nwould expand the PATH environment variable, substituting each occurrence\\r\\nof \"str1\" in the expanded result with \"str2\".  \"str2\" can be the empty\\r\\nstring to effectively delete all occurrences of \"str1\" from the expanded\\r\\noutput.  \"str1\" can begin with an asterisk, in which case it will match\\r\\neverything from the beginning of the expanded output to the first\\r\\noccurrence of the remaining portion of str1.\\r\\n\\r\\nMay also specify substrings for an expansion.\\r\\n\\r\\n    %%PATH:~10,5%%\\r\\n\\r\\nwould expand the PATH environment variable, and then use only the 5\\r\\ncharacters that begin at the 11th (offset 10) character of the expanded\\r\\nresult.  If the length is not specified, then it defaults to the\\r\\nremainder of the variable value.  If either number (offset or length) is\\r\\nnegative, then the number used is the length of the environment variable\\r\\nvalue added to the offset or length specified.\\r\\n\\r\\n    %%PATH:~-10%%\\r\\n\\r\\nwould extract the last 10 characters of the PATH variable.\\r\\n\\r\\n    %%PATH:~0,-2%%\\r\\n\\r\\nwould extract all but the last 2 characters of the PATH variable.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nFinally, support for delayed environment variable expansion has been\\r\\nadded.  This support is always disabled by default, but may be\\r\\nenabled/disabled via the /V command line switch to CMD.EXE.  See CMD /?\\r\\n\\r\\nDelayed environment variable expansion is useful for getting around\\r\\nthe limitations of the current expansion which happens when a line\\r\\nof text is read, not when it is executed.  The following example\\r\\ndemonstrates the problem with immediate variable expansion:\\r\\n\\r\\n    set VAR=before\\r\\n    if \"%%VAR%%\" == \"before\" (\\r\\n        set VAR=after\\r\\n        if \"%%VAR%%\" == \"after\" @echo If you see this, it worked\\r\\n    )\\r\\n\\r\\nwould never display the message, since the %%VAR%% in BOTH IF statements\\r\\nis substituted when the first IF statement is read, since it logically\\r\\nincludes the body of the IF, which is a compound statement.  So the\\r\\nIF inside the compound statement is really comparing \"before\" with\\r\\n\"after\" which will never be equal.  Similarly, the following example\\r\\nwill not work as expected:\\r\\n\\r\\n    set LIST=\\r\\n    for %%i in (*) do set LIST=%%LIST%% %%i\\r\\n    echo %%LIST%%\\r\\n\\r\\nin that it will NOT build up a list of files in the current directory,\\r\\nbut instead will just set the LIST variable to the last file found.\\r\\nAgain, this is because the %%LIST%% is expanded just once when the\\r\\nFOR statement is read, and at that time the LIST variable is empty.\\r\\nSo the actual FOR loop we are executing is:\\r\\n\\r\\n    for %%i in (*) do set LIST= %%i\\r\\n\\r\\nwhich just keeps setting LIST to the last file found.\\r\\n\\r\\nDelayed environment variable expansion allows you to use a different\\r\\ncharacter (the exclamation mark) to expand environment variables at\\r\\nexecution time.  If delayed variable expansion is enabled, the above\\r\\nexamples could be written as follows to work as intended:\\r\\n\\r\\n    set VAR=before\\r\\n    if \"%%VAR%%\" == \"before\" (\\r\\n        set VAR=after\\r\\n        if \"!VAR!\" == \"after\" @echo If you see this, it worked\\r\\n    )": 1,
                "section=.rsrc type=utf16le string=\\n\\r\\n    set LIST=\\r\\n    for %%i in (*) do set LIST=!LIST! %%i\\r\\n    echo %%LIST%%\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled, then there are several dynamic\\r\\nenvironment variables that can be expanded but which don't show up in\\r\\nthe list of variables displayed by SET.  These variable values are\\r\\ncomputed dynamically each time the value of the variable is expanded.\\r\\nIf the user explicitly defines a variable with one of these names, then\\r\\nthat definition will override the dynamic one described below:\\r\\n\\r\\n%%CD%% - expands to the current directory string.\\r\\n\\r\\n%%DATE%% - expands to current date using same format as DATE command.\\r\\n\\r\\n%%TIME%% - expands to current time using same format as TIME command.\\r\\n\\r\\n%%RANDOM%% - expands to a random decimal number between 0 and 32767.\\r\\n\\r\\n%%ERRORLEVEL%% - expands to the current ERRORLEVEL value\\r\\n\\r\\n%%CMDEXTVERSION%% - expands to the current Command Processor Extensions\\r\\n    version number.\\r\\n\\r\\n%%CMDCMDLINE%% - expands to the original command line that invoked the\\r\\n    Command Processor.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled GOTO changes as follows:\\r\\n\\r\\nGOTO command now accepts a target label of :EOF which transfers control\\r\\nto the end of the current batch script file.  This is an easy way to\\r\\nexit a batch script file without defining a label.  Type CALL /?  for a\\r\\ndescription of extensions to the CALL command that make this feature\\r\\nuseful.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled the SHIFT command supports\\r\\nthe /n switch which tells the command to start shifting at the\\r\\nnth argument, where n may be between zero and eight.  For example:\\r\\n\\r\\n    SHIFT /2\\r\\n\\r\\nwould shift %%3 to %%2, %%4 to %%3, etc. and leave %%0 and %%1 unaffected.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled CALL changes as follows:\\r\\n\\r\\nCALL command now accepts labels as the target of the CALL.  The syntax\\r\\nis:\\r\\n\\r\\n    CALL :label arguments\\r\\n\\r\\nA new batch file context is created with the specified arguments and\\r\\ncontrol is passed to the statement after the label specified.  You must\\r\\n\"exit\" twice by reaching the end of the batch script file twice.  The\\r\\nfirst time you read the end, control will return to just after the CALL\\r\\nstatement.  The second time will exit the batch script.  Type GOTO /?\\r\\nfor a description of the GOTO :EOF extension that will allow you to\\r\\n\"return\" from a batch script.\\r\\n\\r\\nIn addition, expansion of batch script argument references (%%0, %%1,\\r\\netc.) have been changed as follows:\\r\\n\\r\\n\\r\\n    %%* in a batch script refers to all the arguments (e.g. %%1 %%2 %%3\\r\\n        %%4 %%5 ...)\\r\\n\\r\\n    Substitution of batch parameters (%%n) has been enhanced.  You can\\r\\n    now use the following optional syntax:\\r\\n\\r\\n        %%~1         - expands %%1 removing any surrounding quotes (\")\\r\\n        %%~f1        - expands %%1 to a fully qualified path name\\r\\n        %%~d1        - expands %%1 to a drive letter only\\r\\n        %%~p1        - expands %%1 to a path only\\r\\n        %%~n1        - expands %%1 to a file name only\\r\\n        %%~x1        - expands %%1 to a file extension only\\r\\n        %%~s1        - expanded path contains short names only\\r\\n        %%~a1        - expands %%1 to file attributes\\r\\n        %%~t1        - expands %%1 to date/time of file\\r\\n        %%~z1        - expands %%1 to size of file\\r\\n        %%~$PATH:1   - searches the directories listed in the PATH\\r\\n                       environment variable and expands %%1 to the fully\\r\\n                       qualified name of the first one found.  If the\\r\\n                       environment variable name is not defined or the\\r\\n                       file is not found by the search, then this\\r\\n                       modifier expands to the empty strin": 1,
                "section=.rsrc type=utf16le string=\\r\\n    The modifiers can be combined to get compound results:\\r\\n\\r\\n        %%~dp1       - expands %%1 to a drive letter and path only\\r\\n        %%~nx1       - expands %%1 to a file name and extension only\\r\\n        %%~dp$PATH:1 - searches the directories listed in the PATH\\r\\n                       environment variable for %%1 and expands to the\\r\\n                       drive letter and path of the first one found.\\r\\n        %%~ftza1     - expands %%1 to a DIR like output line\\r\\n\\r\\n    In the above examples %%1 and PATH can be replaced by other\\r\\n    valid values.  The %%~ syntax is terminated by a valid argument\\r\\n    number.  The %%~ modifiers may not be used with %%*\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled SETLOCAL changes as follows:\\r\\n\\r\\nSETLOCAL batch command now accepts optional arguments:\\r\\n        ENABLEEXTENSIONS / DISABLEEXTENSIONS\\r\\n            enable or disable command processor extensions.  See\\r\\n            CMD /? for details.\\r\\n        ENABLEDELAYEDEXPANSION / DISABLEDELAYEDEXPANSION\\r\\n            enable or disable delayed environment variable\\r\\n            expansion.  See SET /? for details.\\r\\nThese modifications last until the matching ENDLOCAL command,\\r\\nregardless of their setting prior to the SETLOCAL command.\\r\\n\\r\\nThe SETLOCAL command will set the ERRORLEVEL value if given\\r\\nan argument.  It will be zero if one of the two valid arguments\\r\\nis given and one otherwise.  You can use this in batch scripts\\r\\nto determine if the extensions are available, using the following\\r\\ntechnique:\\r\\n\\r\\n    VERIFY OTHER 2>nul\\r\\n    SETLOCAL ENABLEEXTENSIONS\\r\\n    IF ERRORLEVEL 1 echo Unable to enable extensions\\r\\n\\r\\nThis works because on old versions of CMD.EXE, SETLOCAL does NOT\\r\\nset the ERRORLEVEL value. The VERIFY command with a bad argument\\r\\ninitializes the ERRORLEVEL value to a non-zero value.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled ENDLOCAL changes as follows:\\r\\n\\r\\nIf the corresponding SETLOCAL enable or disabled command extensions\\r\\nusing the new ENABLEEXTENSIONS or DISABLEEXTENSIONS options, then\\r\\nafter the ENDLOCAL, the enabled/disabled state of command extensions\\r\\nwill be restored to what it was prior to the matching SETLOCAL\\r\\ncommand execution.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled, external command invocation\\r\\nthrough the command line or the START command changes as follows:\\r\\n\\r\\nnon-executable files may be invoked through their file association just\\r\\n    by typing the name of the file as a command.  (e.g.  WORD.DOC would\\r\\n    launch the application associated with the .DOC file extension).\\r\\n    See the ASSOC and FTYPE commands for how to create these\\r\\n    associations from within a command script.\\r\\n\\r\\nWhen executing an application that is a 32-bit GUI application, CMD.EXE\\r\\n    does not wait for the application to terminate before returning to\\r\\n    the command prompt.  This new behavior does NOT occur if executing\\r\\n    within a command script.\\r\\n\\r\\nWhen executing a command line whose first token is the string \"CMD \"\\r\\n    without an extension or path qualifier, then \"CMD\" is replaced with\\r\\n    the value of the COMSPEC variable.  This prevents picking up CMD.EXE\\r\\n    from the current directory.\\r\\n\\r\\nWhen executing a command line whose first token does NOT contain an\\r\\n    extension, then CMD.EXE uses the value of the PATHEXT\\r\\n    environment variable to determine which extensions to look for\\r\\n    and in what order.  The default value for the PATHEXT variable\\r\\n    is:\\r\\n\\r\\n        .COM;.EXE;.BAT;.CMD\\r\\n\\r\\n    Notice the syntax is the same as the PATH variable, with\\r\\n    semicolons separating the different elements.\\r\\n\\r\\nWhen searching for an executable, if there is no match on any extension,\\r\\nthen looks to see if the name matches a directory name.  If it does, the\\r\\nSTART command launches the Explorer on that path.  If done from the\\r\\ncommand line, it is the equivalent to doing a CD /D to that path.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled, and running on the Windows XP\\r\\nplatform, then the BREAK command will enter a hard coded breakpoint\\r\\nif being debugged by a debugger.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled, the following additional\\r\\nforms of the FOR command are supported:\\r\\n\\r\\nFOR /D %%variable IN (set) DO command [command-parameters]\\r\\n\\r\\n    If set contains wildcards, then specifies to match against directory\\r\\n    names instead of file names.\\r\\n\\r\\nFOR /R [[drive:]path] %%variable IN (set) DO command [command-parameters]\\r\\n\\r\\n    Walks the directory tree rooted at [drive:]path, executing the FOR\\r\\n    statement in each directory of the tree.  If no directory\\r\\n    specification is specified after /R then the current directory is\\r\\n    assumed.  If set is just a single period (.) character then it\\r\\n    will just enumerate the directory tree.\\r\\n\\r\\nFOR /L %%variable IN (start,step,end) DO command [command-parameters]\\r\\n\\r\\n    The set is a sequence of numbers from start to end, by step amount.\\r\\n    So (1,1,5) would generate the sequence 1 2 3 4 5 and (5,-1,1) would\\r\\n    generate the sequence (5 4 3 2 1)\\r\\n\\r\\nFOR /F [\"options\"] %%variable IN (file-set) DO command [command-parameters]\\r\\nFOR /F [\"options\"] %%variable IN (\"string\") DO command [command-parameters]\\r\\nFOR /F [\"options\"] %%variable IN ('command') DO command [command-parameters]\\r\\n\\r\\n    or, if usebackq option present:\\r\\n\\r\\nFOR /F [\"options\"] %%variable IN (file-set) DO command [command-parameters]\\r\\nFOR /F [\"options\"] %%variable IN ('string') DO command [command-parameters]\\r\\nFOR /F [\"options\"] %%variable IN (`command`) DO command [command-parameters]\\r\\n\\r\\n    filenameset is one or more file names.  Each file is opened, read\\r\\n    and processed before going on to the next file in filenameset.\\r\\n    Processing consists of reading in the file, breaking it up into\\r\\n    individual lines of text and then parsing each line into zero or\\r\\n    more tokens.  The body of the for loop is then called with the\\r\\n    variable value(s) set to the found token string(s).  By default, /F\\r\\n    passes the first blank separated token from each line of each file.\\r\\n    Blank lines are skipped.": 1,
                "section=.rsrc type=utf16le string=You can override the default parsing\\r\\n    behavior by specifying the optional \"options\" parameter.  This\\r\\n    is a quoted string which contains one or more keywords to specify\\r\\n    different parsing options.  The keywords are:\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n        eol=c           - specifies an end of line comment character\\r\\n                          (just one)\\r\\n        skip=n          - specifies the number of lines to skip at the\\r\\n                          beginning of the file.\\r\\n        delims=xxx      - specifies a delimiter set.  This replaces the\\r\\n                          default delimiter set of space and tab.\\r\\n        tokens=x,y,m-n  - specifies which tokens from each line are to\\r\\n                          be passed to the for body for each iteration.\\r\\n                          This will cause additional variable names to\\r\\n                          be allocated.  The m-n form is a range,\\r\\n                          specifying the mth through the nth tokens.  If\\r\\n                          the last character in the tokens= string is an\\r\\n                          asterisk, then an additional variable is\\r\\n                          allocated and receives the remaining text on\\r\\n                          the line after the last token parsed.\\r\\n        usebackq        - specifies that the new semantics are in force,\\r\\n                          where a back quoted string is executed as a\\r\\n                          command and a single quoted string is a\\r\\n                          literal string command and allows the use of\\r\\n                          double quotes to quote file names in\\r\\n                          filenameset.\\r\\n\\r\\n    Some examples might help:\\r\\n\\r\\nFOR /F \"eol=; ,3* delims=, \" %%i in (myfile.txt) do @echo %%i %%j %%k\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n    would parse each line in myfile.txt, ignoring lines that begin with\\r\\n    a semicolon, passing the 2nd and 3rd token from each line to the for\\r\\n    body, with tokens delimited by commas and/or spaces.  Notice the for\\r\\n    body statements reference %%i to get the 2nd token, %%j to get the\\r\\n    3rd token, and %%k to get all remaining tokens after the 3rd.  For\\r\\n    file names that contain spaces, you need to quote the filenames with\\r\\n    double quotes.  In order to use double quotes in this manner, you also\\r\\n    need to use the usebackq option, otherwise the double quotes will be\\r\\n    interpreted as defining a literal string to parse.\\r\\n\\r\\n    %%i is explicitly declared in the for statement and the %%j and %%k\\r\\n    are implicitly declared via the tokens= option.  You can specify up\\r\\n    to 26 tokens via the tokens= line, provided it does not cause an\\r\\n    attempt to declare a variable higher than the letter 'z' or 'Z'.\\r\\n    Remember, FOR variables are single-letter, case sensitive, global, \\r\\n    and you can't have more than 52 total active at any one time.\\r\\n\\r\\n    You can also use the FOR /F parsing logic on an immediate string, by\\r\\n    making the filenameset between the parenthesis a quoted string,\\r\\n    using single quote characters.  It will be treated as a single line\\r\\n    of input from a file and parsed.\\r\\n\\r\\n    Finally, you can use the FOR /F command to parse the output of a\\r\\n    command.  You do this by making the filenameset between the\\r\\n    parenthesis a back quoted string.  It will be treated as a command\\r\\n    line, which is passed to a child CMD.EXE and the output is captured\\r\\n    into memory and parsed as if it was a file.  So the following\\r\\n    example:\\r\\n\\r\\n      FOR /F \"usebackq delims==\" %%i IN (`set`) DO @echo %%i\\r\\n\\r\\n    would enumerate the environment variable names in the current\\r\\n    environment.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIn addition, substitution of FOR variable references has been enhanced.\\r\\nYou can now use the following optional syntax:\\r\\n\\r\\n    %%~I         - expands %%I removing any surrounding quotes (\")\\r\\n    %%~fI        - expands %%I to a fully qualified path name\\r\\n    %%~dI        - expands %%I to a drive letter only\\r\\n    %%~pI        - expands %%I to a path only\\r\\n    %%~nI        - expands %%I to a file name only\\r\\n    %%~xI        - expands %%I to a file extension only\\r\\n    %%~sI        - expanded path contains short names only\\r\\n    %%~aI        - expands %%I to file attributes of file\\r\\n    %%~tI        - expands %%I to date/time of file\\r\\n    %%~zI        - expands %%I to size of file\\r\\n    %%~$PATH:I   - searches the directories listed in the PATH\\r\\n                   environment variable and expands %%I to the\\r\\n                   fully qualified name of the first one found.\\r\\n                   If the environment variable name is not\\r\\n                   defined or the file is not found by the\\r\\n                   search, then this modifier expands to the\\r\\n                   empty string\\r\\n\\r\\nThe modifiers can be combined to get compound results:\\r\\n\\r\\n    %%~dpI       - expands %%I to a drive letter and path only\\r\\n    %%~nxI       - expands %%I to a file name and extension only\\r\\n    %%~fsI       - expands %%I to a full path name with short names only\\r\\n    %%~dp$PATH:I - searches the directories listed in the PATH\\r\\n                   environment variable for %%I and expands to the\\r\\n                   drive letter and path of the first one found.\\r\\n    %%~ftzaI     - expands %%I to a DIR like output line\\r\\n\\r\\nIn the above examples %%I and PATH can be replaced by other valid\\r\\nvalues.  The %%~ syntax is terminated by a valid FOR variable name.\\r\\nPicking upper case variable names like %%I makes it more readable and\\r\\navoids confusion with the modifiers, which are not case sensitive.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nIf Command Extensions are enabled IF changes as follows:\\r\\n\\r\\n    IF [/I] string1 compare-op string2 command\\r\\n    IF CMDEXTVERSION number command\\r\\n    IF DEFINED variable command\\r\\n\\r\\nwhere compare-op may be one of:\\r\\n\\r\\n    EQU - equal\\r\\n    NEQ - not equal\\r\\n    LSS - less than\\r\\n    LEQ - less than or equal\\r\\n    GTR - greater than\\r\\n    GEQ - greater than or equal\\r\\n\\r\\nand the /I switch, if specified, says to do case insensitive string\\r\\ncompares.  The /I switch can also be used on the string1==string2 form\\r\\nof IF.  These comparisons are generic, in that if both string1 and\\r\\nstring2 are both comprised of all numeric digits, then the strings are\\r\\nconverted to numbers and a numeric comparison is performed.\\r\\n\\r\\nThe CMDEXTVERSION conditional works just like ERRORLEVEL, except it is\\r\\ncomparing against an internal version number associated with the Command\\r\\nExtensions.  The first version is 1.  It will be incremented by one when\\r\\nsignificant enhancements are added to the Command Extensions.\\r\\nCMDEXTVERSION conditional is never true when Command Extensions are\\r\\ndisabled.\\r\\n\\r\\nThe DEFINED conditional works just like EXISTS except it takes an\\r\\nenvironment variable name and returns true if the environment variable\\r\\nis defined.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\n%%ERRORLEVEL%% will expand into a string representation of\\r\\nthe current value of ERRORLEVEL, provided that there is not already\\r\\nan environment variable with the name ERRORLEVEL, in which case you\\r\\nwill get its value instead.  After running a program, the following\\r\\nillustrates ERRORLEVEL use:\\r\\n\\r\\n    goto answer%%ERRORLEVEL%%\\r\\n    :answer0\\r\\n    echo Program had return code 0\\r\\n    :answer1\\r\\n    echo Program had return code 1\\r\\n\\r\\nYou can also using the numerical comparisons above:\\r\\n\\r\\n    IF %%ERRORLEVEL%% LEQ 1 goto okay\\r\\n\\r\\n%%CMDCMDLINE%% will expand into the original command line passed to\\r\\nCMD.EXE prior to any processing by CMD.EXE, provided that there is not\\r\\nalready an environment variable with the name CMDCMDLINE, in which case\\r\\nyou will get its value instead.\\r\\n\\r\\n%%CMDEXTVERSION%% will expand into a string representation of the\\r\\ncurrent value of CMDEXTVERSION, provided that there is not already\\r\\nan environment variable with the name CMDEXTVERSION, in which case you\\r\\nwill get its value instead.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Enables or disables command line editing on DOS system\\r\\n\\r\\nThis is present for Compatibility with DOS systems. It has no effect\\r\\nunder Windows XP, as command line editing is always enabled.\\r\\n": 1,
                "section=.rsrc type=utf16le string='%1'\\r\\nCMD.EXE was started with the above path as the current directory.\\r\\nUNC paths are not supported.  Defaulting to Windows directory.\\r\\n": 1,
                "section=.rsrc type=utf16le string='%1'\\r\\nCMD does not support UNC paths as current directories.\\r\\n": 1,
                "section=.rsrc type=utf16le string=UNC paths not supported for current directory. Using\\r\\n\\r\\n    PUSHD %1\\r\\n\\r\\nto create temporary drive letter to support UNC current\\r\\ndirectory.  Use POPD or EXIT to delete temporary drive\\r\\nletter.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid parameter to SHIFT command\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unbalanced parenthesis.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Missing operand.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Missing operator.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid number.  Numeric constants are either decimal (17),\\r\\nhexadecimal (0x11), or octal (021).\\r\\n": 1,
                "section=.rsrc type=utf16le string=Invalid number.  Numbers are limited to 32-bits of precision.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Divide by zero error.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The COMSPEC environment variable does not point to CMD.EXE.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Overwrite %1? (Yes/No/All): %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=NYA%0\\r\\n": 1,
                "section=.rsrc type=utf16le string=<JUNCTION> %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=The directory name %1\\%2 is too long.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The full path of %1 is too long.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The path %1\\%2 is too long.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Unable to find library %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot find function %1!S!:%2!S!.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot find ordinal %1!S!:%2!d!.\\r\\n": 1,
                "section=.rsrc type=utf16le string=File Not Found\\r\\n": 1,
                "section=.rsrc type=utf16le string=Could Not Find %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=The FAT File System only support Last Write Times\\r\\n": 1,
                "section=.rsrc type=utf16le string=Begins localization of environment changes in a batch file.  Environment\\r\\nchanges made after SETLOCAL has been issued are local to the batch file.\\r\\nENDLOCAL must be issued to restore the previous settings.  When the end\\r\\nof a batch script is reached, an implied ENDLOCAL is executed for any\\r\\noutstanding SETLOCAL commands issued by that batch script.\\r\\n\\r\\nSETLOCAL\\r\\n": 1,
                "section=.rsrc type=utf16le string=Ends localization of environment changes in a batch file.\\r\\nEnvironment changes made after ENDLOCAL has been issued are\\r\\nnot local to the batch file; the previous settings are not\\r\\nrestored on termination of the batch file.\\r\\n\\r\\nENDLOCAL\\r\\n": 1,
                "section=.rsrc type=utf16le string=Sets the window title for the command prompt window.\\r\\n\\r\\nTITLE [string]\\r\\n\\r\\n  string       Specifies the title for the command prompt window.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Allows programs to open data files in specified directories as if they were\\r\\nin the current directory.\\r\\n\\r\\nAPPEND [[drive:]path[;...]] [/X[:ON | :OFF]] [/PATH:ON | /PATH:OFF] [/E]\\r\\nAPPEND ;\\r\\n\\r\\n  [drive:]path Specifies a drive and directory to append.\\r\\n  /X:ON        Applies appended directories to file searches and\\r\\n               application execution.\\r\\n  /X:OFF       Applies appended directories only to requests to open files.\\r\\n               /X:OFF is the default setting.\\r\\n  /PATH:ON     Applies the appended directories to file requests that already\\r\\n               specify a path.  /PATH:ON is the default setting.\\r\\n  /PATH:OFF    Turns off the effect of /PATH:ON.\\r\\n  /E           Stores a copy of the appended directory list in an environment\\r\\n               variable named APPEND.  /E may be used only the first time\\r\\n               you use APPEND after starting up your system.\\r\\n\\r\\nType APPEND ; to clear the appended directory list.\\r\\nType APPEND without parameters to display the appended directory list.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Moves files and renames files and directories.\\r\\n\\r\\nTo move one or more files:\\r\\nMOVE [/Y | /-Y] [drive:][path]filename1[,...] destination\\r\\n\\r\\nTo rename a directory:\\r\\nMOVE [/Y | /-Y] [drive:][path]dirname1 dirname2\\r\\n\\r\\n  [drive:][path]filename1 Specifies the location and name of the file\\r\\n                          or files you want to move.\\r\\n  destination             Specifies the new location of the file. Destination\\r\\n                          can consist of a drive letter and colon, a\\r\\n                          directory name, or a combination. If you are moving\\r\\n                          only one file, you can also include a filename if\\r\\n                          you want to rename the file when you move it.\\r\\n  [drive:][path]dirname1  Specifies the directory you want to rename.\\r\\n  dirname2                Specifies the new name of the directory.\\r\\n\\r\\n  /Y                      Suppresses prompting to confirm you want to\\r\\n                          overwrite an existing destination file.\\r\\n  /-Y                     Causes prompting to confirm you want to overwrite\\r\\n                          an existing destination file.\\r\\n\\r\\nThe switch /Y may be present in the COPYCMD environment variable.\\r\\nThis may be overridden with /-Y on the command line.  Default is\\r\\nto prompt on overwrites unless MOVE command is being executed from\\r\\nwithin a batch script.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Stores the current directory for use by the POPD command, then\\r\\nchanges to the specified directory.\\r\\n\\r\\nPUSHD [path | ..]\\r\\n\\r\\n  path        Specifies the directory to make the current directory.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Changes to the directory stored by the PUSHD command.\\r\\n\\r\\nPOPD\\r\\n\\r\\n": 1,
                "section=.rsrc type=utf16le string=%1 - %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Maximum setlocal recursion level reached.\\r\\n": 1,
                "section=.rsrc type=utf16le string=Enter the new date: (yy-mm-dd) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Enter the new date: (dd-mm-yy) %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=ERROR Verify - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=Cannot move multiple files to a single file.\\r\\n": 1,
                "section=.rsrc type=utf16le string=The handle could not be opened\\r\\nduring redirection of handle %1.\\r\\n": 1,
                "section=.rsrc type=utf16le string=%r%1%% copied %0\\r\\n": 1,
                "section=.rsrc type=utf16le string=Sets the default console foreground and background colors.\\r\\n\\r\\nCOLOR [attr]\\r\\n\\r\\n  attr        Specifies color attribute of console output\\r\\n\\r\\nColor attributes are specified by TWO hex digits -- the first\\r\\ncorresponds to the background; the second the foreground.  Each digit\\r\\ncan be any of the following values:\\r\\n\\r\\n    0 = Black       8 = Gray\\r\\n    1 = Blue        9 = Light Blue\\r\\n    2 = Green       A = Light Green\\r\\n    3 = Aqua        B = Light Aqua\\r\\n    4 = Red         C = Light Red\\r\\n    5 = Purple      D = Light Purple\\r\\n    6 = Yellow      E = Light Yellow\\r\\n    7 = White       F = Bright White\\r\\n\\r\\nIf no argument is given, this command restores the color to what it was\\r\\nwhen CMD.EXE started.  This value either comes from the current console\\r\\nwindow, the /T command line switch or from the DefaultColor registry\\r\\nvalue.\\r\\n\\r\\nThe COLOR command sets ERRORLEVEL to 1 if an attempt is made to execute\\r\\nthe COLOR command with a foreground and background color that are the\\r\\nsame.\\r\\n\\r\\nExample: \"COLOR fc\" produces light red on bright white\\r\\n": 1,
                "section=.rsrc type=utf16le string=Maximum path length exceeded - %1\\r\\n": 1,
                "section=.rsrc type=utf16le string=******  B A T C H   R E C U R S I O N  exceeds STACK limits ******\\r\\nRecursion Count=%1!d!, Stack Usage=%2!d! percent\\r\\n******       B A T C H   PROCESSING IS   A B O R T E D      ******\\r\\n": 1,
                "section=.rsrc type=utf16le string=There are too many directories already in the PUSHD stack.\\r\\n": 1,
                "section=.rsrc type=utf16le string=\\r\\nThe command prompt has been disabled by your administrator.\\r\\n\\r\\n": 1,
                "arch     x86": 1,
                "binsz    389120": 1,
                "bintype  pe": 1,
                "bits     32": 1,
                "canary   false": 1,
                "class    PE32": 1,
                "cmp.csum 0x00062585": 1,
                "compiled Sun Apr 13 20:14:55 2008": 1,
                "crypto   false": 1,
                "dbg_file cmd.pdb": 1,
                "endian   little": 1,
                "havecode true": 1,
                "hdr.csum 0x0006a9db": 1,
                "guid     6CEF5CCCAD3C4359BE4BFE642184D33E2": 1,
                "linenum  true": 1,
                "lsyms    true": 1,
                "machine  i386": 1,
                "maxopsz  16": 1,
                "minopsz  1": 1,
                "nx       false": 1,
                "os       windows": 1,
                "overlay  false": 1,
                "pcalign  0": 1,
                "pic      false": 1,
                "relocs   true": 1,
                "signed   false": 1,
                "static   false": 1,
                "stripped true": 1,
                "subsys   Windows CUI": 1,
                "va       true": 1,
                "PE file header:": 1,
                "IMAGE_NT_HEADERS": 1,
                "Signature : 0x4550": 1,
                "IMAGE_FILE_HEADERS": 1,
                "Machine : 0x14c": 1,
                "NumberOfSections : 0x3": 1,
                "TimeDateStamp : 0x48025baf": 1,
                "PointerToSymbolTable : 0x0": 1,
                "NumberOfSymbols : 0x0": 1,
                "SizeOfOptionalHeader : 0xe0": 1,
                "Characteristics : 0x10f": 1,
                "IMAGE_OPTIONAL_HEADERS": 1,
                "Magic : 0x10b": 1,
                "MajorLinkerVersion : 0x7": 1,
                "MinorLinkerVersion : 0xa": 1,
                "SizeOfCode : 0x1f800": 1,
                "SizeOfInitializedData : 0x3f600": 1,
                "SizeOfUninitializedData : 0x0": 1,
                "AddressOfEntryPoint : 0xcc00ffee": 1,
                "BaseOfCode : 0x1000": 1,
                "BaseOfData : 0x1f000": 1,
                "ImageBase : 0x4ad00000": 1,
                "SectionAlignment : 0x1000": 1,
                "FileAlignment : 0x200": 1,
                "MajorOperatingSystemVersion : 0x5": 1,
                "MinorOperatingSystemVersion : 0x1": 1,
                "MajorImageVersion : 0x5": 1,
                "MinorImageVersion : 0x1": 1,
                "MajorSubsystemVersion : 0x4": 1,
                "MinorSubsystemVersion : 0x0": 1,
                "Win32VersionValue : 0x0": 1,
                "SizeOfImage : 0x61000": 1,
                "SizeOfHeaders : 0x400": 1,
                "CheckSum : 0x6a9db": 1,
                "Subsystem : 0x3": 1,
                "DllCharacteristics : 0x8000": 1,
                "SizeOfStackReserve : 0x100000": 1,
                "SizeOfStackCommit : 0x100000": 1,
                "SizeOfHeapReserve : 0x100000": 1,
                "SizeOfHeapCommit : 0x1000": 1,
                "LoaderFlags : 0x0": 1,
                "NumberOfRvaAndSizes : 0x10": 1,
                "IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "VirtualAddress : 0x1f640": 1,
                "Size : 0x50": 1,
                "IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "VirtualAddress : 0x3e000": 1,
                "Size : 0x228a0": 1,
                "IMAGE_DIRECTORY_ENTRY_DEBUG": 1,
                "VirtualAddress : 0x205c4": 1,
                "Size : 0x38": 1,
                "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG": 1,
                "VirtualAddress : 0x19340": 1,
                "Size : 0x40": 1,
                "IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT": 1,
                "VirtualAddress : 0x248": 1,
                "Size : 0x58": 1,
                "IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "VirtualAddress : 0x1000": 1,
                "Size : 0x300": 1,
                "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "VirtualAddress : 0x1f308": 1,
                "Size : 0x80": 1,
                "kernel32.dll": 1,
                "msvcrt.dll": 1,
                "user32.dll": 1,
                "advapi32.dll": 1,
                "shell32.dll": 1,
                "mpr.dll": 1,
                "389120": 1,
                "=== VS_VERSIONINFO ===": 1,
                "# VS_FIXEDFILEINFO": 1,
                "Signature: 0xfeef04bd": 1,
                "StrucVersion: 0x10000": 1,
                "FileVersion: 5.1.2600.5512": 1,
                "ProductVersion: 5.1.2600.5512": 2,
                "FileFlagsMask: 0x3f": 1,
                "FileFlags: 0x0": 1,
                "FileOS: 0x40004": 1,
                "FileType: 0x1": 1,
                "FileSubType: 0x0": 1,
                "# StringTable": 1,
                "CompanyName: Microsoft Corporation": 1,
                "FileDescription: Windows Command Processor": 1,
                "FileVersion: 5.1.2600.5512 (xpsp.080413-2111)": 1,
                "InternalName: cmd": 1,
                "LegalCopyright: \u00a9 Microsoft Corporation. All rights reserved.": 1,
                "OriginalFilename: Cmd.Exe": 1,
                "ProductName: Microsoft\u00ae Windows\u00ae Operating System": 1
            }
        }
    ]
}