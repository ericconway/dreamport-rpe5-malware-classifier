{
    "filepath": "/corpus/malware/offense/5d204ca32a5ed72511decd3245b6cf4731378e5b5e0bf8eb5acb8069adf5136d",
    "fileinfo": {
        "md5": "786e61331a1e84b7fe26c254de0280ad",
        "type": "PE32+ executable (GUI) x86-64, for MS Windows",
        "labels": {},
        "clamav": "OK",
        "blobs": null
    },
    "plugins": [
        {
            "plugin": "extractors.disassembly",
            "version": "0.1",
            "results": {
                "and byte [rsi + ], ch;je ;jae ;jo ;outsd dx, dword [rsi]": 1,
                "outsb dx, byte [rsi];outsd dx, dword [rsi];and byte [rdi + rbp*2 + ], ch;imul esp, dword [rax], ;jbe ": 1,
                "je ;outsd dx, dword [rsi];outsb dx, byte [rsi];and byte [rbx + ], ah;outsb dx, byte [rsi]": 1,
                "add byte fs:[rax], al;add byte [rax], al;add byte [rax], al;je ;outsd dx, dword [rsi]": 1,
                "jo ;jb ;imul esi, dword [rbx + ], ;outsb dx, byte gs:[rsi];imul esp, dword [rbp + ], 0": 1,
                "outsb dx, byte gs:[rsi];imul esp, dword [rbp + ], 0;add byte [rax], al;add byte [rcx + ], ah;jb ": 1,
                "outsb dx, byte [rsi];movsxd rsi, dword gs:[rcx + rbp*2 + ];outsb dx, byte [rsi];pop rdi;jb ": 2,
                "add byte [rax], al;add byte [rax + ], ch;jae ;pop rdi;jne ": 1,
                "add byte [rcx + ], ch;imul ebp, dword [rsi + ], ;pop rdi;invalid;jb ": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rcx + ], ah;jb ;invalid": 1,
                "jns ;movsxd rbp, dword [rdi + ];outsb dx, byte [rsi];movsxd rsi, dword gs:[rbp + ];add byte [rax], al": 1,
                "push rdx;add byte [rsi], dh;add byte [rax], dh;add byte [rdx], dh;add byte [], dh": 1,
                "add byte [rax], dh;add byte [rdx], dh;add byte [], dh;add byte [], ch;add byte [rbp], dh": 1,
                "add byte [rdx], dh;add byte [], dh;add byte [], ch;add byte [rbp], dh;jb ": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rdx], dl;push rdx;add byte [rsi], dh": 5,
                "add byte [rdi], dh;add byte [], cl;add byte [rax], ah;add byte [rsi], ch;outsd dx, dword [rsi]": 1,
                "add byte [rdx], dl;push rdx;add byte [rsi], dh;add byte [rax], dh;add byte [rbx], dh": 4,
                "imul eax, dword [rax], ;imul eax, dword [rax], ;add byte fs:[], cl;add byte [rax], al;add byte [rdx], dl": 1,
                "add byte [rax], ah;add byte [rcx], al;je ;je ;add byte gs:[rbp], ch": 2,
                "add byte [rbp], dh;jb ;and byte [rax], al;invalid;add byte [rax], dh": 2,
                "and byte [rax], al;invalid;add byte [rax], dh;jo ;insb byte [rdi], dx": 2,
                "add byte gs:[rax], ah;add byte [rbp], cl;push rbx;add byte [rcx], cl;add byte [rax], r12b": 1,
                "push rbx;add byte [rcx], cl;add byte [rax], r12b;add byte [rbx], ah;outsd dx, dword [rsi]": 1,
                "add byte [rsi], ah;jb ;outsd dx, dword [rsi];add byte [rbp], ch;and byte [rax], al": 1,
                "add byte [rax], ah;add byte [rax + rax + ], ah;add byte [rdx], dh;imul eax, dword [rax], ;and byte [rax], al": 1,
                "add byte [rax + rax + ], ah;add byte [rdx], dh;imul eax, dword [rax], ;and byte [rax], al;outsb dx, byte [rsi]": 1,
                "imul eax, dword [rax], ;and byte [rax], al;movsxd rax, dword [rax];outsd dx, dword [rsi];add byte [rax + rax + ], ah": 1,
                "imul eax, dword [rax], ;or al, byte [rax];push rsp;add byte [rax], ch;imul eax, dword [rax], ": 1,
                "add byte [rbx], ah;invalid;add byte [rax + rax + ], ch;add byte [rcx], ch;outsb dx, byte [rsi]": 1,
                "add byte [rax], ch;add byte [rdi], ch;add byte [rbx], ah;insb byte [rdi], dx;add byte [rdx], dh": 1,
                "add byte [rdx], dh;sub dword [rax], eax;and byte [rax], al;add byte [rbp], dh;outsb dx, byte [rsi]": 1,
                "add byte [rbp], cl;invalid;add byte [rcx], ch;outsb dx, byte [rsi];add byte [rsi], ch": 1,
                "add byte [rax], ah;add byte [rcx], ch;outsb dx, byte [rsi];add byte [rbx], ah;outsd dx, dword [rsi]": 1,
                "add byte [rcx], ch;outsb dx, byte [rsi];add byte [rbx], ah;outsd dx, dword [rsi];add byte [rsi], ch": 1,
                "je ;and byte [rax], al;outsd dx, dword [rsi];add byte [rsi], ch;add byte gs:[rax], bh": 1,
                "add byte [ecx], ch;outsb dx, byte [rsi];add byte [], ch;add byte [rax + rax + ], ah;add byte [rsi], dh": 1,
                "imul eax, dword [rax], ;insb byte [rdi], dx;add byte [rbp], ah;jae ;or eax, ": 1,
                "mov rsi, rdi;mov rdx, r12;mov rcx, rax;call fcn.13f0cd4e0;mov rcx, rax": 3,
                "mov word [r13], si;xor r8d, r8d;lea rdx, [];mov rcx, r13;call fcn.13f0d43a0": 3,
                "mov qword [r13 + ], 7;mov qword [r13 + ], rsi;mov word [r13], si;cmp qword [rbx + ], 8;jae ": 3,
                "mov word [r13], si;cmp qword [rbx + ], 8;jae ;mov r8, qword [rbx + ];inc r8": 3,
                "mov qword [r13], rax;mov qword [rbx], rsi;mov rax, qword [rbx + ];mov qword [r13 + ], rax;mov rax, qword [rbx + ]": 3,
                "mov qword [r13 + ], rax;mov qword [rbx + ], 7;mov qword [rbx + ], rsi;mov word [rbx], si;cmp qword [var_50h], 8": 3,
                "pop rbp;ret;int3;int3;int3": 137,
                "lea rdx, [];lea rcx, [var_30h];call fcn.13f0d0ac0;lea r8, [];mov rdx, rax": 5,
                "mov qword [], rax;test rbx, rbx;jne ;lea eax, [rbx + ];jmp ": 12,
                "mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;mov qword [arg_18h], rdi;push r12;push r14": 15,
                "lea r15, [rdi + 8];cmp r15, 8;jb ;mov rcx, r14;call fcn.13f11b4fc": 12,
                "jmp ;xor ebx, ebx;lea rdx, [rsi + ];cmp rdx, rsi;jb ": 11,
                "pop r15;pop r14;pop r12;ret;int3": 47,
                "mov r8, rcx;mov rcx, qword [];xor edx, edx;call qword [];test eax, eax": 11,
                "js ;mov rcx, qword [rsi];cmp rbp, r13;mov rdx, r15;cmovb r13d, ebp": 8,
                "add r15, rbx;jmp ;mov ebx, r12d;cmp rbp, rbx;jb ": 7,
                "div r8d;add eax, dword [];jne ;mov dword [var_28h], 4;jmp ": 8,
                "jne ;mov rcx, rdx;call fcn.13f10e55c;mov rdx, rbx;mov rcx, rdi": 8,
                "inc eax;cmp eax, ecx;jne ;mov rcx, rbx;call fcn.13f10e55c": 7,
                "jmp qword [];int3;mov qword [arg_8h], rbx;push rdi;sub rsp, ": 9,
                "lock cmpxchg dword [rbx], ecx;jne ;mov rbx, qword [arg_30h];add rsp, ;pop rdi": 9,
                "mov eax, dword [rdx + ];shr eax, 1;test al, 1;jne ;mov eax, dword [rcx + ]": 10,
                "test al, 1;jne ;mov eax, dword [rcx + ];shr eax, 1;test al, 1": 10,
                "jne ;call fcn.13f123f3c;cmp qword [rbx + ], rbp;je ;mov eax, 1": 8,
                "pop r14;pop r13;ret;lea rdx, [];lea rcx, [var_20h]": 4,
                "or r8d, ;xor edx, edx;call fcn.13f115c68;add rsp, ;ret": 5,
                "int3;push rbx;sub rsp, ;mov rax, qword [rcx + ];mov rbx, rcx": 30,
                "add rsp, ;pop rbx;ret;xor edx, edx;mov r8, rcx": 6,
                "mov eax, dword [rdx + ];mov rdi, rdx;mov rbx, rcx;mov dword [rcx + ], eax;mov rax, qword [rdx + 8]": 8,
                "mov qword [rcx], rax;mov rax, qword [rcx + 8];test rax, rax;jne ;mov rax, rdx": 8,
                "xor al, al;ret;int3;int3;int3": 17,
                "int3;int3;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;mov qword [arg_18h], rdi": 51,
                "int3;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;mov qword [arg_18h], rdi;push r14": 36,
                "mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];mov rdi, qword [arg_40h];add rsp, ;pop r14": 62,
                "ret;int3;int3;int3;push rbx": 372,
                "mov rcx, rbx;call fcn.13f115bc8;add rsp, ;pop rbx;ret": 10,
                "lea rcx, [var_20h];xor eax, eax;lock cmpxchg qword [rbx + ], rcx;jne ;lea rax, [var_20h]": 10,
                "mov rbx, qword [arg_50h];mov qword [], rax;add rsp, ;pop rdi;ret": 2,
                "mov qword [], rax;add rsp, ;pop rdi;ret;call qword []": 2,
                "ret;call qword [];lea rcx, [var_20h];movzx edx, ax;or edx, ": 68,
                "cmovle edx, eax;call fcn.13f123e8c;lea rdx, [];lea rcx, [var_20h];call fcn.13f112d38": 100,
                "lea rdx, [];lea rcx, [var_20h];call fcn.13f112d38;int3;call qword []": 14,
                "lea rcx, [var_20h];call fcn.13f112d38;int3;jmp qword [];int3": 12,
                "mov r9d, ;lea eax, [r8 + 2];cmovne r8d, eax;xor edx, edx;xor ecx, ecx": 5,
                "push rdi;sub rsp, ;mov rbx, r8;mov rdi, rdx;mov rsi, rcx": 15,
                "cmp eax, ;je ;mov r8, rbx;mov rdx, rdi;mov rcx, rsi": 8,
                "test eax, eax;je ;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];add rsp, ": 8,
                "add rsp, ;pop rbx;jmp rax;mov qword [arg_8h], rbx;push rdi": 9,
                "call fcn.13f110eb4;mov rbx, rax;test rax, rax;je ;mov rdx, rdi": 10,
                "mov rbp, qword [arg_58h];mov rsi, qword [arg_68h];mov rax, rbx;mov rbx, qword [arg_50h];add rsp, ": 11,
                "lea rax, [];lea rdx, [arg_60h];lea rcx, [var_20h];mov r8d, 1;mov qword [arg_60h], rax": 16,
                "call fcn.13f112d38;int3;int3;int3;sub rsp, ": 25,
                "mov eax, dword [arg_50h];add rsp, ;ret;call qword [];lea rcx, [var_20h]": 10,
                "call qword [];lea r8, [arg_48h];lea rdx, [lpSystemAffinityMask];mov rcx, rax;call qword []": 11,
                "or dword [var_20h], ;call qword [];test eax, eax;je ;mov rax, qword [Context]": 12,
                "add rsp, ;ret;call qword [];lea rcx, [var_30h];movzx edx, ax": 12,
                "cmovle edx, eax;call fcn.13f123e8c;lea rdx, [];lea rcx, [var_30h];call fcn.13f112d38": 13,
                "mov rcx, rdi;call rax;jmp ;mov rdx, qword [rbx];mov rcx, rdi": 9,
                "lea rcx, [rsp + ];call fcn.13f112d38;int3;int3;jmp qword []": 13,
                "push rbx;sub rsp, ;mov r11d, dword [r8];mov rbx, rdx;mov r9, rcx": 15,
                "sub rsp, ;mov r11d, dword [r8];mov rbx, rdx;mov r9, rcx;and r11d, ": 15,
                "je ;mov eax, dword [r8 + 8];movsxd r10, dword [r8 + 4];neg eax;add r10, rcx": 15,
                "add rcx, qword [rbx + 8];test byte [rcx + 3], ;je ;movzx eax, byte [rcx + 3];and eax, ": 15,
                "call fcn.13f120dc0;mov rbx, rax;mov qword [arg_40h], rax;test rax, rax;jne ": 14,
                "cmp byte [rsi], 0;jne ;call fcn.13f10fca8;mov dword [rax], ;lea rdx, []": 14,
                "mov rax, rdi;mov rbx, qword [arg_48h];mov rsi, qword [arg_50h];mov rdi, qword [arg_58h];add rsp, ": 10,
                "mov dword [rax], ;or eax, ;jmp ;and eax, ;xor edi, edi": 11,
                "mov rbx, qword [arg_30h];mov rbp, qword [arg_38h];mov rsi, qword [arg_40h];add rsp, ;pop rdi": 116,
                "or eax, ;jmp ;cmp r8d, 2;ja ;call fcn.13f110528": 13,
                "int3;push rbx;sub rsp, ;mov rbx, rcx;xor ecx, ecx": 27,
                "mov rax, qword [];xor rax, qword [];je ;call rax;add rsp, ": 70,
                "inc rsi;add rbx, rax;cmp rsi, 7;jb ;mov byte [rbx], 0": 8,
                "pop r14;ret;and qword [var_20h], 0;xor r9d, r9d;xor r8d, r8d": 17,
                "call fcn.13f11b8c0;int3;and qword [var_20h], 0;xor r9d, r9d;xor r8d, r8d": 17,
                "mov rcx, qword [rdi];mov rbx, rax;call fcn.13f112c90;lea rdi, [rdi + 8];add rax, rsi": 9,
                "add rdx, rsi;call fcn.13f11b2a8;test eax, eax;jne ;mov rcx, rbx": 18,
                "cmp rbp, ;jb ;mov byte [rbx], 0;cmp byte [var_48h], 0;je ": 9,
                "xor ecx, ecx;call fcn.13f11b8c0;int3;int3;int3": 29,
                "call sub.KERNEL32.dll_TlsGetValue;test rax, rax;jne ;call fcn.13f129ee4;add rsp, ": 18,
                "int3;int3;mov qword [arg_8h], rcx;push rdi;sub rsp, ": 112,
                "sub rsp, ;mov qword [var_20h], ;mov qword [arg_60h], rbx;mov rbx, rcx;lea rax, []": 18,
                "jmp ;mov edx, ;xor ecx, ecx;lea r9d, [rcx + 4];mov r8d, ": 16,
                "jne ;lea rax, [];mov qword [arg_58h], rax;mov r8d, 1;lea rdx, [arg_58h]": 15,
                "mov rcx, rax;call fcn.13f0e907c;mov qword [rbx + ], rax;mov rax, rbx;mov rbx, qword [arg_60h]": 14,
                "mov rcx, qword [rdi + ];call fcn.13f10efc8;mov rcx, qword [rdi + ];call fcn.13f10efc8;lea rcx, [rdi + ]": 7,
                "mov rsi, qword [arg_50h];add rsp, ;pop rdi;jmp sub.KERNEL32.dll_DeleteCriticalSection;int3": 7,
                "mov r11d, r8d;mov ebx, edx;mov r10, rcx;cmp edx, r8d;jae ": 7,
                "jmp ;lea rcx, [rdx + ];jmp ;mov qword [rsp + ], rdx;push rbp": 12,
                "movsxd rdx, dword [rax + 4];add rdx, rcx;mov eax, dword [rdx + ];or eax, 4;cmp qword [rdx + ], 0": 11,
                "add rsp, ;pop rbp;ret;int3;int3": 23,
                "add rcx, ;jmp ;mov rcx, qword [rdx + ];add rcx, ;jmp ": 16,
                "add byte [rax], al;and al, byte [];add byte [rax], al;cwde;sub cl, byte []": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rbx], al;add byte [rax], al;add byte [rax + ], ah": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rcx], al;add byte [rax], al;add byte [rdx], ah": 16,
                "add byte [rcx], al;add byte [rax], al;add byte [rdx], ah;add eax, ;add byte [rax], al": 16,
                "or eax, 0;add byte [rax], al;add byte [rax], al;add byte [rbx], al;add byte [rax], al": 8,
                "add byte [rax], al;add byte [rbx], al;add byte [rax], al;add ah, al;and ecx, dword []": 1,
                "add byte [rbx], al;add byte [rax], al;add al, bh;and ecx, dword [];add byte [rax], al": 1,
                "add byte [rax], al;add byte [rdx], ah;add eax, ;add byte [rax], al;xor al, ": 2,
                "or eax, 0;add byte [rax], al;add byte [rax], al;add byte [rax + rax], al;add byte [rax], al": 1,
                "add byte [rax], al;add al, 0;add byte [rax], al;shl byte [rcx + ], 1;add byte [rax], al": 1,
                "add byte [rax], al;int3;adc bh, byte fs:[rdi];add dword [rax], eax;add byte [rax], al": 1,
                "add dword [rax], eax;add byte [rax], al;mov byte [rbx + ], ah;invalid;add dword [rax], eax": 1,
                "invalid;add dword [rax], eax;add byte [rax], al;movsxd rdx, dword [rdx];invalid": 1,
                "insb byte [rdi], dx;jp ;invalid;add dword [rax], eax;add byte [rax], al": 1,
                "js ;push rbx;je ;movsxd rbp, dword [rbx + ];imul edi, dword [rdx + ], 0": 1,
                "add byte [rax], al;outsd dx, dword [rsi];outsb dx, byte [rsi];je ;js ": 1,
                "imul ebp, dword [rsi + ], ;je ;invalid;insb byte [rdi], dx;imul edi, dword [rdx + ], ": 1,
                "je ;invalid;insb byte [rdi], dx;imul edi, dword [rdx + ], ;add byte [rax], al": 1,
                "invalid;js ;outsd dx, dword [rsi];insb byte [rdi], dx;imul esp, dword [rbx + ], ": 1,
                "js ;outsd dx, dword [rsi];insb byte [rdi], dx;imul esp, dword [rbx + ], ;outsb dx, byte gs:[rsi]": 1,
                "xor esi, dword [rbx];xor esi, dword [rbx];ret;invalid;invalid": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rbx], al;add byte [rax], al;add byte [rsi + rsi], bl": 1,
                "add eax, dword [rax];add byte [rax], al;cwde;or eax, ;add byte [rax], al": 1,
                "cwde;or eax, ;add byte [rax], al;add byte [rax], al;add byte [rcx], al": 1,
                "add byte [rax], al;invalid;invalid;or eax, 0;add byte [rax], al": 1,
                "je ;outsd dx, dword [rsi];and byte [rdi + rbp*2 + ], ch;add byte [eax], al;add byte [rax], al": 1,
                "add byte [rax], al;add byte [rax], al;add byte [rax], al;mov bl, ah;invalid": 1,
                "or eax, ;add byte [rax - ], dh;invalid;invalid;add dword [rax], eax": 1,
                "insd dword [rdi], dx;outsb dx, byte gs:[rsi];je ;outsd dx, dword [rsi];jne ": 1,
                "outsd dx, dword [rsi];jne ;and byte [rdi + ], ch;and byte [rdx + ], dh;outsb dx, byte [rsi]": 1,
                "and eax, ;add byte [rax + rax], dh;add byte fs:[rax], al;add byte [], ah;add byte [rax], al": 1,
                "add byte [rax + rax], dh;add byte fs:[rax], al;add byte [], ah;add byte [rax], al;add byte [rax], al": 1,
                "add byte [rax], al;cmp al, 0;add byte [rax], al;add dword [rax], eax;add byte [rax], al": 1,
                "rcl byte [rdi + ], cl;mov ebp, ;sub eax, ;mov edi, ;sbb eax, ": 1,
                "mov ch, ;hlt;mov dword [rbp - ], ;imul esp, dword [rdx + rdi*2 - 7], ;std": 1,
                "psubd mm6, mm5;or eax, ;outsb dx, byte [rsi];cmp ebx, dword [rsi + ];imul ecx, dword [rsp + ], ": 1,
                "push rcx;xlatb;enter , ;mov edi, ;and eax, esp": 1,
                "mov dword [rbp - ], eax;mov dh, 6;movsd dword [rdi], dword ptr [rsi];in al, ;lahf": 1,
                "imul ebp, dword [rsi + ], ;je ;and byte [rcx + rdi*2 + ], ah;invalid;insd dword [rdi], dx": 1,
                "outsb dx, byte gs:[rsi];je ;and byte [rdx + rsi*2 + ], dh;add byte gs:[rax], al;outsd dx, dword [rsi]": 2,
                "and byte fs:[rcx + rbp*2 + ], ah;je ;outsb dx, byte [rsi];movsxd rsp, dword [rbp + ];je ": 3,
                "add byte gs:[rax], al;add byte [rax], al;add byte [rax], al;add byte [rax], al;insd dword [rdi], dx": 3,
                "jne ;imul ebp, dword [rsi + ], ;outsb dx, byte [rsi];and byte [rbx + ], ah;insd dword [rdi], dx": 3,
                "add byte [rax], al;add byte [rax + rax + ], bl;add byte [rsi], ch;add byte [rdi], ch;add byte [rax], al": 3,
                "add byte [rax + ], dl;add byte [rsi], cl;invalid;add dword [rax], eax;add byte [rax], al": 3,
                "invalid;invalid;add dword [rax], eax;add byte [rax], al;movabs al, byte []": 3,
                "add byte [rax], al;movabs al, byte [];add byte [rax], al;add byte [rax - ], dh;invalid": 3,
                "add byte [rax], al;add byte [rax - ], dh;invalid;invalid;invalid": 3,
                "test byte [vtable.std::::::std::_W::_WU__char_traits::__basic_ofstream.0], 0;and byte [rcx + ], dh;add byte [rax + ], al;add byte [rax], al;add al, ah": 3,
                "invalid;invalid;add dword [rax], eax;add byte [rax], al;and byte [rcx + ], dh": 1,
                "invalid;add dword [rax], eax;add byte [rax], al;cmp byte [rsi], ;invalid": 1,
                "cmp byte [rsi], ;invalid;add dword [rax], eax;add byte [rax], al;push rax": 1,
                "push rax;invalid;invalid;invalid;add dword [rax], eax": 1,
                "invalid;add dword [rax], eax;add byte [rax], al;sal byte [], 1;add byte [rax], al": 1,
                "imul ebp, dword [rsi + ], ;pop rdi;outsd dx, dword [rsi];jbe ;jb ": 1,
                "je ;outsd dx, dword [rsi];outsb dx, byte [rsi];outsd dx, dword [rsi];outsb dx, byte [rsi]": 1,
                "movsxd rsi, dword [rbp + ];jb ;outsb dx, byte [rsi];movsxd rdi, dword [rcx + ];add byte [rax], al": 4,
                "invalid;outsb dx, byte [rsi];invalid;jb ;je ": 1,
                "outsd dx, dword [rsi];jo ;insb byte [rdi], dx;outsd dx, dword [rsi];jns ": 4,
                "outsd dx, dword [rsi];jns ;js ;movsxd rsi, dword [rbp + ];imul ebp, dword [rdi + ], ": 1,
                "jns ;outsd dx, dword [rsi];outsd dx, dword gs:[rsi];outsb dx, byte [rsi];movsxd rsi, dword [rbp + ]": 1,
                "outsd dx, dword [rsi];je ;imul ebp, dword [rbx + rsi*2 + ], ;jne ;jb ": 1,
                "mov dword [var_20h], edi;jmp ;mov rbx, qword [rsp + ];mov edi, dword [rsp + ];mov rax, qword [rbx]": 2,
                "mov edx, dword [rcx + ];or edx, edi;cmp qword [rcx + ], 0;jne ;or edx, 4": 6,
                "call fcn.13f0b3a80;mov rax, qword [rbx];movsxd rcx, dword [rax + 4];mov rcx, qword [rcx + rbx + ];test rcx, rcx": 7,
                "pop r14;ret;int3;int3;push rbx": 8,
                "mov rax, rbx;add rsp, ;pop rsi;pop rbp;pop rbx": 8,
                "mov qword [rbx + ], rdi;jb ;mov rax, qword [rbx];jmp ;mov rax, rbx": 31,
                "jne ;xor edi, edi;mov esi, edi;jmp ;call fcn.13f0b1ae0": 3,
                "mov qword [rbx + ], rax;mov qword [rcx], rdi;mov rcx, qword [rbx + ];mov qword [rcx], rdi;mov rcx, qword [rbx + ]": 7,
                "mov rcx, qword [rbx + ];mov qword [rcx], rdi;mov rcx, qword [rbx + ];mov dword [rcx], edi;mov qword [rbx + ], rdi": 3,
                "lea rax, [rcx + ];mov qword [rcx + ], rax;lea rax, [rcx + ];push rbx;push rbp": 1,
                "mov dword [rax], r9d;test rdx, rdx;je ;lea rax, [rdx + ];mov qword [rcx + ], rdx": 3,
                "mov qword [rax + ], rsi;mov rax, qword [];xor rax, rsp;mov qword [var_10h], rax;mov rdi, rcx": 8,
                "cmp qword [rcx + ], 0;je ;cmp byte [rcx + ], 0;je ;mov rax, qword [rcx]": 8,
                "mov rax, qword [rcx];or edx, ;call qword [rax + ];cmp eax, ;jne ": 4,
                "mov qword [var_20h], r14;mov byte [var_30h], r14b;xor r8d, r8d;lea edx, [r14 + 8];lea rcx, [var_30h]": 8,
                "mov r9, qword [var_20h];add r9, rdx;lea rax, [var_38h];mov qword [var_20h_2], rax;lea rdx, [rdi + ]": 8,
                "lea rax, [var_38h];mov qword [var_20h_2], rax;lea rdx, [rdi + ];call qword [r10 + ];test eax, eax": 8,
                "jmp ;mov byte [rdi + ], 0;lea rax, [var_30h];mov r10, qword [var_30h];mov qword [arg_8h], rbx": 1,
                "mov r9, qword [var_18h];cmp r9, ;cmovae rax, r10;mov rbx, qword [var_38h];sub rbx, rax": 7,
                "xor r8d, r8d;lea edx, [rbx + 8];lea rcx, [var_30h];call fcn.13f0b1840;jmp ": 7,
                "int3;int3;int3;push rbx;push rbp": 32,
                "mov r15, r9;mov rbp, r8;mov rsi, rdx;cmp rcx, rdx;jb ": 4,
                "lea r13, [rdx + rdi];sub r14, rbp;cmp rcx, r13;jae ;xor r8d, r8d": 3,
                "je ;lea rdx, [rcx + r12];lea rcx, [rax + rsi];mov r8, rdi;call fcn.13f10e580": 2,
                "mov r8, rdi;lea rcx, [rax + rsi];jmp ;lea rax, [rsi + rbp];cmp rax, r12": 1,
                "mov rax, rbx;test rbp, rbp;je ;lea rdx, [rcx + r12];lea rcx, [rax + rsi]": 1,
                "lea rdx, [rcx + r12];lea rcx, [rax + rsi];mov r8, rbp;call fcn.13f10e580;mov rax, qword [rbx + ]": 1,
                "mov rcx, qword [rcx + ];mov rax, rdx;add rcx, r8;mov qword [rdx], rcx;ret": 2,
                "int3;cmp qword [rcx + ], ;jb ;mov rax, qword [rcx];mov qword [rdx], rax": 1,
                "mov rax, rdx;ret;int3;int3;int3": 22,
                "push rsi;push rdi;sub rsp, ;movzx esi, r8b;mov rdi, rdx": 3,
                "jae ;mov r8, qword [rcx + ];call fcn.13f0b3c00;test rdi, rdi;je ": 3,
                "jb ;mov rax, qword [rbx];mov byte [rax], sil;jmp ;test rdx, rdx": 3,
                "cmp rax, ;jb ;mov rax, qword [rcx];mov byte [rax], dl;mov rax, rbx": 3,
                "mov rax, rbx;add rsp, ;pop rdi;pop rsi;pop rbx": 27,
                "sub rsp, ;mov qword [var_20h], ;mov rbx, rcx;mov rax, qword [rcx];movsxd rdx, dword [rax + 4]": 8,
                "test byte [rdx + rcx + ], 2;je ;mov rcx, qword [rdx + rcx + ];mov rax, qword [rcx];call qword [rax + ]": 5,
                "or edx, 4;xor r8d, r8d;call fcn.13f0b3a80;add rsp, ;pop rbx": 5,
                "movsxd rcx, dword [rax + 4];mov rcx, qword [rcx + rdx + ];cmp qword [rcx + ], ;jb ;mov rax, qword [rcx]": 1,
                "cmp qword [rcx + rbx + ], 0;push rbx;push rsi;push rdi;sub rsp, ": 1,
                "mov qword [rsp], ;lea rax, [];mov qword [rcx], rax;lea rax, [];mov qword [rcx], rax": 13,
                "call fcn.13f0b24e0;test bl, 1;je ;mov rcx, rdi;call fcn.13f10e55c": 2,
                "jle ;mov rcx, qword [rcx + ];call fcn.13f10ef88;jmp ;jns ": 3,
                "int3;int3;mov qword [rsp + ], rbx;push rbx;sub rsp, ": 1,
                "xor edi, edi;mov qword [arg_8h], rcx;push rbx;sub rsp, ;mov qword [var_20h], ": 1,
                "mov rcx, r9;sub r8, rdx;call fcn.13f10e580;mov rax, rbx;add rsp, ": 1,
                "pop rbx;ret;int3;mov qword [arg_8h], rcx;push rbx": 1,
                "mov qword [var_20h], ;mov rbx, rcx;lea rax, [];mov qword [rcx], rax;lea rax, []": 7,
                "mov dword [rcx + 8], r8d;lea rax, [];mov qword [rcx], rax;lea rax, [];mov qword [rcx], rax": 7,
                "mov rbx, rcx;mov qword [var_28h], rcx;xor edx, edx;call fcn.13f0e96c0;xor eax, eax": 3,
                "mov qword [rbx + ], rax;mov byte [rbx + ], al;mov qword [rbx + ], rax;mov byte [rbx + ], al;test rdi, rdi": 3,
                "je ;call fcn.13f10ef88;mov qword [rbx], 0;add rsp, ;pop rbx": 2,
                "mov qword [rax + ], rdi;mov r14, rdx;mov rdi, rcx;xor ebx, ebx;mov dword [var_20h], ebx": 10,
                "mov rcx, qword [r14];test rcx, rcx;jne ;lea rdx, [];jmp ": 10,
                "lea rcx, [var_30h];call fcn.13f0b2710;mov ebx, 1;mov dword [var_20h], ebx;xor r8d, r8d": 10,
                "call fcn.13f0b2710;mov ebx, 1;mov dword [var_20h], ebx;xor r8d, r8d;mov rdx, rax": 10,
                "mov rsi, qword [r11 + ];mov rdi, qword [r11 + ];mov rsp, r11;pop r14;ret": 112,
                "lea rcx, [r11 - ];call fcn.13f0e96c0;mov rsi, qword [];mov qword [var_20h], rsi;mov rdi, qword []": 17,
                "cmp rdi, qword [rcx + ];jae ;mov rax, qword [rcx + ];mov rbx, qword [rax + rdi*8];test rbx, rbx": 16,
                "jae ;mov rax, qword [rcx + ];mov rbx, qword [rax + rdi*8];test rbx, rbx;jne ": 16,
                "jne ;jmp ;xor ebx, ebx;cmp byte [rcx + ], 0;je ": 16,
                "cmp rdi, qword [rax + ];jae ;mov rax, qword [rax + ];mov rbx, qword [rax + rdi*8];test rbx, rbx": 16,
                "mov rbx, rsi;jmp ;mov rdx, r14;lea rcx, [var_20h];call fcn.13f0b28c0": 4,
                "mov rcx, rbx;call fcn.13f0e9354;lea rcx, [var_4ch];call fcn.13f0e973c;mov rax, rbx": 15,
                "jmp qword [r8];add rsp, ;ret;int3;int3": 4,
                "mov rax, qword [rcx + ];cmp qword [rax], 0;je ;mov rax, qword [rcx + ];movsxd rax, dword [rax]": 7,
                "je ;mov rdx, qword [rbx + ];mov eax, dword [rdx];cmp eax, 1;jle ": 10,
                "je ;mov rcx, qword [rbx + ];mov eax, dword [rcx];test eax, eax;jle ": 9,
                "ret;mov rax, qword [rbx + ];mov rcx, qword [rax];test rcx, rcx;mov qword [arg_10h], rdx": 1,
                "pop rbx;jmp qword [rax + ];int3;int3;int3": 11,
                "cmp rdx, rax;jb ;cmp r8, ;jb ;mov rcx, qword [rcx]": 6,
                "je ;cmp qword [rbx + ], ;jb ;mov rcx, qword [rbx];jmp ": 9,
                "add rsp, ;pop rsi;ret;lea rcx, [];call fcn.13f0e91b8": 5,
                "mov qword [r11 - ], rbx;xor ebp, ebp;mov dword [var_20h], ebp;cmp qword [r8 + ], rbp;je ": 6,
                "mov rdx, rax;mov rcx, rbx;call fcn.13f0b3e00;cmp qword [var_40h], ;jb ": 5,
                "mov qword [rdi + ], rbp;mov byte [rdi], 0;mov rdx, rbx;mov rcx, rdi;call fcn.13f0b3f40": 5,
                "mov qword [r11 + ], rcx;mov qword [r11 - ], ;mov qword [r11 - ], 0;mov byte [var_40h], 0;or r9, ": 5,
                "lea rdx, [arg_98h];mov rcx, rbx;call fcn.13f10ec3c;lea rax, [];mov qword [rbx], rax": 4,
                "call fcn.13f10ec3c;lea rax, [];mov qword [rbx], rax;cmp qword [var_78h], ;jb ": 4,
                "jb ;mov rcx, qword [var_60h];call fcn.13f10e55c;mov qword [var_78h], ;mov qword [var_70h], 0": 4,
                "call fcn.13f0b3390;movdqa xmmword [rbp - ], xmm6;lea r8, [rbp - 9];lea rdx, [rbp - ];lea rcx, [rbp + ]": 5,
                "call fcn.13f0b2e40;cmp qword [rax + ], ;jb ;mov rax, qword [rax];mov qword [rbp + ], rax": 5,
                "lea rax, [];mov qword [rbx], rax;cmp qword [rbp + ], ;jb ;mov rcx, qword [rbp + ]": 5,
                "movups xmmword [rbx + ], xmm6;cmp qword [rbp - ], ;jb ;mov rcx, qword [rbp - ];call fcn.13f10e55c": 4,
                "ret;int3;int3;mov qword [rsp + 8], rcx;push rbx": 6,
                "test dl, 1;je ;call fcn.13f10e55c;mov r11, rsp;mov qword [r11 + 8], rcx": 1,
                "cmp qword [rcx + ], ;mov qword [rcx + ], rdx;jb ;mov rax, qword [rcx];mov byte [rax + rdx], 0": 10,
                "cmp qword [rcx + ], ;jb ;mov rax, qword [rcx];jmp ;mov rax, rcx": 13,
                "jmp ;mov rax, rcx;sub rdi, r8;lea rcx, [rax + rdx];mov rax, rdi": 2,
                "add rsp, ;pop rdi;ret;lea rcx, [];call fcn.13f0e91f0": 13,
                "mov qword [var_10h], rsi;push rdi;sub rsp, ;mov rdi, r8;mov rsi, rdx": 6,
                "mov byte [rcx], r8b;cmp byte [rdx], r8b;je ;or r8, ;inc r8": 4,
                "je ;or r8, ;inc r8;cmp byte [rdx + r8], 0;jne ": 4,
                "or r8, ;inc r8;cmp byte [rdx + r8], 0;jne ;call fcn.13f0b34c0": 4,
                "mov ecx, r8d;call fcn.13f0e9228;lea rdx, [];test rax, rax;cmovne rdx, rax": 5,
                "je ;or rbx, ;mov qword [var_8h], rbx;mov qword [var_10h], rsi;push rdi": 1,
                "xor eax, eax;mov dword [rsp + ], eax;cmp r8d, 1;jne ;mov qword [rdx + ], ": 4,
                "mov dword [rsp + ], eax;cmp r8d, 1;jne ;mov qword [rdx + ], ;mov qword [rdx + ], rax": 4,
                "lea rdx, [];mov rcx, rbx;call fcn.13f0b34c0;jmp ;call fcn.13f0b3660": 4,
                "int3;int3;int3;mov dword [rdx], r8d;mov qword [rdx + 8], rcx": 4,
                "int3;mov dword [rdx], r8d;mov qword [rdx + 8], rcx;mov rax, rdx;ret": 4,
                "cmp qword [rax + 8], rcx;jne ;mov ecx, dword [rbx];cmp dword [rax], ecx;jne ": 3,
                "xor al, al;add rsp, ;pop rbx;ret;int3": 19,
                "sub rsp, ;mov qword [rsp + ], ;add rsp, ;jmp fcn.13f10eccc;int3": 9,
                "test al, 4;je ;lea rax, [];mov qword [var_38h], rax;movaps xmm0, xmmword [var_40h]": 1,
                "lea r8, [];call fcn.13f0b3070;lea rax, [];mov qword [var_30h], rax;lea rdx, []": 3,
                "int3;lea r8, [];call fcn.13f0b3070;lea rax, [];mov qword [var_30h], rax": 1,
                "jmp ;mov r8, qword [rcx + ];mov rcx, r8;shr rcx, 1;movabs rax, ": 10,
                "jbe ;mov rdi, ;mov rax, rdi;sub rax, rcx;cmp r8, rax": 4,
                "mov rax, rdi;sub rax, rcx;cmp r8, rax;ja ;lea rdi, [rcx + r8]": 4,
                "mov rsi, qword [rsp + ];mov rdi, qword [rsp + ];mov r14, qword [rsp + ];test rsi, rsi;je ": 7,
                "cmp qword [rbx + ], ;jb ;mov rdx, qword [rbx];jmp ;mov rdx, rbx": 14,
                "call fcn.13f10e580;cmp qword [rbx + ], ;jb ;mov rcx, qword [rbx];call fcn.13f10e55c": 4,
                "mov qword [arg_30h], rbp;xor ebp, ebp;cmp rax, rdx;jae ;mov r8, qword [rcx + ]": 5,
                "call fcn.13f10e55c;mov r14, qword [arg_40h];mov qword [rbx + ], rsi;mov qword [rbx + ], ;mov byte [rsi + rbx], bpl": 5,
                "test rdi, rdi;setne al;add rsp, ;pop rdi;ret": 7,
                "call fcn.13f0b3c00;test rdi, rdi;je ;cmp qword [r14 + ], ;jb ": 6,
                "int3;int3;int3;ret 0;int3": 5,
                "mov rax, rcx;ret;int3;int3;int3": 13,
                "jb ;mov rax, qword [rcx];mov byte [rax + rdx], 0;ret;mov byte [rcx + rdx], 0": 8,
                "mov rdi, r8;mov rbx, rcx;test dl, dl;je ;cmp qword [rcx + ], ": 9,
                "push rbx;sub rsp, ;cmp qword [rcx + ], ;mov rbx, rcx;jb ": 10,
                "pop rbx;ret;int3;int3;mov qword [var_10h], rbx": 1,
                "int3;mov rax, rsp;push rbp;push rsi;push rdi": 54,
                "cmp rcx, ;jb ;mov rax, qword [r14];jmp ;mov rax, r14": 18,
                "mov rax, qword [r14];jmp ;mov rax, r14;movzx ebx, byte [rax + r12];mov ecx, ebx": 9,
                "mov byte [rsp + rdi + ], al;inc ebp;inc rdi;inc r12;cmp rdi, 4": 9,
                "movzx esi, byte [rsp + r15 + ];test rdi, rdi;je ;cmp rdi, 1;jb ": 6,
                "test rdi, rdi;je ;cmp rdi, 1;jb ;movzx eax, byte [rdx]": 1,
                "test rdi, rdi;je ;cmp rdi, 1;jb ;lea rbx, []": 5,
                "je ;movsx edx, sil;mov r8, rdi;mov rcx, rbx;call fcn.13f10f83c": 5,
                "mov byte [var_25h], al;shl cl, 6;add cl, byte [var_23h];mov byte [var_26h], cl;lea ecx, [rbp - 1]": 2,
                "pop r15;pop r14;pop rbp;ret;mov qword [arg_40h], rbx": 2,
                "mov qword [var_30h], r15;mov byte [var_20h], 0;lea rdx, [rdi + ];lea rcx, [rbp - ];call fcn.13f0cda80": 5,
                "mov qword [var_30h], r15;mov byte [var_20h], 0;cmp qword [rdi + ], 0;je ;test r14b, r14b": 2,
                "mov qword [var_60h], r15;mov qword [var_60h], ;mov qword [var_58h], r15;mov byte [var_48h], 0;mov ebx, 1": 2,
                "mov byte [var_48h], 0;mov edx, dword [rdi + ];lea rcx, [var_20h];call fcn.13f0d3e30;mov rdx, rax": 2,
                "lea rcx, [rbp - ];call fcn.13f0db450;lea rax, [var_70h];mov qword [var_68h_2], rax;lea rax, [rbp - ]": 1,
                "mov qword [rbp - ], rax;mov qword [rbp - ], ;mov qword [rbp - ], r15;mov byte [var_70h], 0;or r9, ": 1,
                "lea rcx, [var_70h];call fcn.13f0b3390;mov qword [var_38h_2], ;mov qword [var_30h], r15;mov byte [var_20h], 0": 1,
                "or r9, ;xor r8d, r8d;lea rdx, [rbp + 8];lea rcx, [var_20h];call fcn.13f0b3390": 1,
                "mov qword [var_128h], rax;mov rsi, rdx;mov rbx, rcx;mov qword [r11 - ], rdx;mov r15b, 1": 1,
                "mov qword [var_78h], rax;lea rax, [r11 - ];mov qword [var_28h], rax;xor edi, edi;mov qword [r11 - ], rdi": 1,
                "xor edi, edi;mov qword [r11 - ], rdi;mov qword [r11 - ], rdi;mov qword [r11 - ], ;mov qword [r11 - ], rdi": 2,
                "mov qword [r11 - ], rdi;mov qword [r11 - ], ;mov qword [r11 - ], rdi;mov byte [var_80h], dil;or r9, ": 1,
                "je ;or r9, ;xor r8d, r8d;mov rcx, rax;call fcn.13f0b3390": 10,
                "call fcn.13f0b3390;mov rcx, qword [var_f0h];lea rdx, [rcx + ];lea rax, [rbx + ];cmp rax, rdx": 1,
                "mov rax, rbx;mov byte [rax], 0;add rbx, ;mov qword [var_70h], rbx;mov rcx, qword [var_f0h]": 1,
                "cmp qword [rsi + ], ;jb ;mov rcx, qword [rsi];call fcn.13f10e55c;mov qword [rsi + ], ": 21,
                "movzx eax, r15b;mov rcx, qword [var_128h];xor rcx, rsp;call fcn.13f10e4e0;lea r11, [var_130h]": 1,
                "mov rsp, r11;pop r15;pop r14;pop rdi;ret": 17,
                "mov dword [rbp - ], r12d;mov qword [rdx + ], ;mov qword [rdx + ], r12;mov byte [rdx], r12b;mov dword [rbp - ], 1": 2,
                "mov qword [rdx + ], r12;mov byte [rdx], r12b;mov dword [rbp - ], 1;mov r15d, r12d;mov rax, qword [rcx + ]": 2,
                "mov rcx, rbx;call fcn.13f0b3e00;cmp qword [rbp - ], ;jb ;mov rcx, qword [rbp - ]": 2,
                "cmp rax, rcx;jb ;mov rax, rbx;jmp ;mov rax, rdx": 1,
                "lea rdx, [var_50h];lea rcx, [var_b0h];call fcn.13f0d9620;mov r12d, r14d;mov dword [var_40h], r14d": 2,
                "mov rsi, qword [rbx + ];cmp qword [rbx + ], ;jb ;mov rcx, qword [rbx];jmp ": 2,
                "sete al;test al, al;je ;mov r9d, 1;xor r8d, r8d": 2,
                "mov r9d, 1;xor r8d, r8d;lea rdx, [];mov rcx, rbx;call fcn.13f0b4410": 2,
                "add rcx, rdi;call fcn.13f0d3cc0;mov dword [var_28h], eax;mov rax, qword [r13 + ];lea rcx, [var_28h]": 2,
                "mov rax, qword [r13 + ];lea rcx, [var_28h];cmp rcx, rax;jae ;mov rcx, qword [r13 + ]": 2,
                "add qword [r13 + ], 4;jmp ;cmp rax, qword [r13 + ];mov r11, rsp;push rdi": 1,
                "add rdx, rdi;mov qword [var_80h], r14;mov qword [var_88h], r14;mov qword [var_88h], ;mov qword [var_80h], r14": 1,
                "or r9, ;xor r8d, r8d;lea rcx, [var_70h];call fcn.13f0b3390;lea r8, [var_50h]": 1,
                "mov dword [var_30h], eax;mov rcx, qword [r13 + ];lea rdx, [var_30h];cmp rdx, rcx;jae ": 1,
                "test rcx, rcx;je ;mov eax, dword [rax + rsi*4];mov dword [rcx], eax;jmp ": 1,
                "mov eax, dword [rax + rsi*4];mov dword [rcx], eax;jmp ;cmp rcx, qword [r13 + ];jne ": 1,
                "mov qword [rbx + ], r14;xor eax, eax;mov qword [rcx], rax;mov qword [rcx + 8], rax;mov qword [rcx + ], rax": 1,
                "ret;int3;int3;mov qword [arg_10h], rdx;push rbx": 1,
                "call fcn.13f0d3e30;mov rdx, rax;lea rcx, [rbp - ];call fcn.13f0cd990;cmp qword [var_38h], ": 12,
                "cmp r14, rdi;je ;cmp qword [rbx + ], ;jb ;mov rcx, qword [rbx]": 3,
                "mov qword [var_50h], r15;cmp qword [rbp - 8], ;jb ;mov rcx, qword [rbp - ];call fcn.13f10e55c": 3,
                "mov qword [rbp - ], r15;mov byte [rbp - ], 0;mov qword [arg_10h], rdx;push rbx;sub rsp, ": 1,
                "mov qword [rbp - ], r15;mov byte [rbp - ], 0;cmp qword [rbp + ], ;jb ;mov rcx, qword [rbp]": 2,
                "lea rcx, [var_a8h];call fcn.13f0d94e0;mov rdx, rax;lea rcx, [var_e8h];call fcn.13f0daaf0": 1,
                "mov qword [var_d8h], rax;mov qword [var_e0h], rax;lea rax, [var_58h];mov qword [var_28h], rax;lea rax, [var_38h]": 1,
                "mov qword [var_70h], rdi;mov qword [var_70h], ;mov qword [var_68h], rdi;mov byte [var_58h], dil;lea r8d, [rdi + 1]": 1,
                "mov rcx, qword [var_d0h];lea rdx, [rcx + ];lea rax, [rbx + ];cmp rax, rdx;je ": 4,
                "mov rcx, qword [var_d0h];add rcx, ;call fcn.13f0d3cc0;mov dword [rbx + ], eax;mov rcx, qword [var_d0h]": 2,
                "call fcn.13f10e55c;xorps xmm0, xmm0;movdqu xmmword [var_d0h], xmm0;mov qword [var_e0h], rdi;cmp qword [var_100h], ": 1,
                "lea r8, [];mov rdx, rdi;lea rcx, [var_40h];call fcn.13f0d0c20;mov r8, rbx": 2,
                "mov r8, rbx;mov rdx, rax;lea rcx, [var_70h];call fcn.13f0d0d10;cmp qword [var_58h], ": 2,
                "call fcn.13f0d0d10;cmp qword [var_58h], ;jb ;mov rcx, qword [var_40h];call fcn.13f10e55c": 2,
                "call fcn.13f10e55c;mov qword [var_58h], ;xor ebx, ebx;mov qword [var_50h], rbx;mov byte [var_40h], bl": 2,
                "mov rcx, qword [var_20h];call fcn.13f10e55c;mov qword [var_38h], ;mov qword [var_30h], rbx;mov byte [var_20h], 0": 2,
                "cmp qword [var_88h], ;jb ;mov rcx, qword [var_70h];call fcn.13f10e55c;mov qword [var_88h], ": 3,
                "mov qword [var_88h], ;mov qword [var_80h], rbx;mov byte [var_70h], 0;cmp qword [rdi + ], ;jb ": 2,
                "mov rbx, qword [arg_c0h];add rsp, ;pop rdi;ret;int3": 1,
                "mov qword [r11 + ], rbp;mov qword [r11 + ], rsi;mov rax, qword [];xor rax, rsp;mov qword [var_30h], rax": 13,
                "jmp ;xor eax, eax;cmp rdi, rbp;setne al;test eax, eax": 8,
                "mov qword [rsi + ], 0;mov byte [rsi], 0;mov rax, r12;mov rcx, qword [var_30h];xor rcx, rsp": 6,
                "mov rbp, qword [r11 + ];mov rsi, qword [r11 + ];mov rsp, r11;pop r15;pop r14": 34,
                "lea rax, [r11 - ];mov qword [r11 - ], rax;mov qword [r11 - ], ;mov qword [r11 - ], 0;mov byte [var_20h], 0": 3,
                "call fcn.13f10e55c;mov qword [rbx + ], rdi;mov qword [rbx + ], rdi;mov qword [rbx + ], rdi;cmp qword [rbx + ], ": 4,
                "push rsi;push rdi;lea rbp, [rsp - ];sub rsp, ;mov qword [rbp - ], ": 7,
                "mov qword [var_38h], rsi;mov qword [var_30h_2], rsi;mov dword [var_28h], ;lea rax, [rbp - ];mov qword [var_20h], rax": 4,
                "lea rax, [var_40h];mov qword [rbp - ], rax;mov qword [var_58h], 7;mov qword [var_50h], rsi;mov word [var_40h], si": 4,
                "jne ;mov r8d, esi;jmp ;lea rax, [rbp - ];or r8, ": 4,
                "or r8, ;inc r8;cmp word [rax + r8*2], si;mov r11, rsp;push rbx": 1,
                "lea rdx, [rbp - ];lea rcx, [var_40h];call fcn.13f0d43a0;lea rdx, [var_40h];mov rcx, rbx": 3,
                "call fcn.13f10e55c;mov qword [rbx + ], ;mov qword [rbx + ], rsi;mov byte [rbx], 0;mov rdx, rdi": 8,
                "mov byte [var_60h_2], 0;lea rax, [var_60h_2];mov qword [rbp - ], rax;mov qword [var_78h_2], ;mov qword [var_70h_2], rsi": 3,
                "lea rax, [var_60h_2];mov qword [rbp - ], rax;mov qword [var_78h_2], ;mov qword [var_70h_2], rsi;mov byte [var_60h_2], 0": 6,
                "mov rdx, rbx;lea rcx, [var_60h_2];call fcn.13f0b3390;mov r8b, ;lea rdx, [var_60h_2]": 6,
                "mov qword [var_50h], rsi;mov byte [var_40h], 0;lea rax, [var_60h_2];mov qword [rbp - ], rax;mov qword [var_78h_2], ": 3,
                "mov byte [var_40h], 0;mov rax, rbx;mov rcx, qword [rbp + ];xor rcx, rsp;call fcn.13f10e4e0": 2,
                "push r12;push r13;push r14;push r15;push rbp": 1,
                "lea rdi, [rbp - 1];cmp rdx, ;cmovae rdi, r8;add rdi, rsi;test rbx, rbx": 1,
                "mov qword [rbp - ], ;mov qword [rbp - ], r13;mov byte [rbp - ], 0;jmp ;or r9, ": 1,
                "mov byte [rbp - 1], 0;mov rax, r12;mov rcx, qword [rbp + ];xor rcx, rsp;call fcn.13f10e4e0": 1,
                "mov qword [rbp + ], rax;mov r13d, r8d;mov rbx, rdx;mov rdi, rcx;mov qword [var_38h], rcx": 2,
                "call fcn.13f0e9d58;mov qword [rdi + ], ;mov qword [rdi + ], r12;mov byte [rdi], r12b;xor r8d, r8d": 2,
                "jmp ;mov r14, rbx;mov ecx, ;lea rdx, [rbp + ];call qword []": 2,
                "lea esi, [rbx - 1];mov dl, 1;lea ecx, [rsi + 1];lea eax, [r13 + ];movzx ebx, dl": 1,
                "cmovl ebx, r12d;mov qword [rbp + ], r12;mov qword [rbp + ], r12;mov qword [rbp + ], ;mov qword [rbp + ], r12": 1,
                "cmp rdi, rax;je ;or r9, ;xor r8d, r8d;lea rdx, [rbp + ]": 1,
                "xor rax, rsp;mov qword [var_200h], rax;mov rdi, rdx;mov rbx, rcx;mov qword [var_38h], rcx": 2,
                "call fcn.13f0e9d58;mov qword [rbx + ], ;mov qword [rbx + ], rbp;mov byte [rbx], bpl;xor r8d, r8d": 2,
                "mov rcx, rbx;call fcn.13f0b34c0;mov dword [var_30h], 1;cmp qword [rdi + ], ;jb ": 2,
                "mov ecx, r15d;call qword [];mov r14, rax;cmp eax, ;jne ": 2,
                "xor rcx, rsp;call fcn.13f10e4e0;mov rbx, qword [arg_250h];add rsp, ;pop r15": 1,
                "mov qword [rbp - ], ;mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax;mov rsi, r9": 2,
                "imul eax, edx, ;sub ecx, eax;mov byte [rbp + 8], cl;mov qword [rbp - 9], r14;mov qword [rbp - 1], r14": 2,
                "mov byte [rbp - ], r14b;cmp byte [rbp + ], r14b;je ;mov rdx, rbx;lea rcx, [rbp - ]": 2,
                "xor r8d, r8d;lea rdx, [];mov rcx, rax;call fcn.13f0b34c0;jmp ": 2,
                "jb ;mov rcx, qword [rbx];jmp ;mov rcx, rbx;add rdx, rcx": 4,
                "test rdx, rdx;jne ;mov rdx, r14;jmp ;sub rdx, rax": 3,
                "call fcn.13f0b3e00;mov rax, qword [rbx + ];cmp rax, ;jb ;mov rcx, qword [rbx]": 2,
                "mov rcx, rdi;call fcn.13f0b34c0;mov dword [rbp - ], 1;mov qword [var_28h], rsi;mov rdx, rbx": 1,
                "sub rsp, ;mov qword [r11 - ], ;mov rax, qword [];xor rax, rsp;mov qword [var_d0h], rax": 1,
                "mov r9, r15;mov rdx, r14;lea rcx, [var_70h];call fcn.13f0b6ee0;mov r14, rax": 1,
                "mov qword [var_58h], rdi;mov qword [var_50h], rdi;mov rax, qword [var_98h];mov qword [rdi], rax;mov qword [var_98h], rbx": 1,
                "mov qword [var_50h], rdi;mov rax, qword [var_98h];mov qword [rdi], rax;mov qword [var_98h], rbx;mov rax, qword [var_a8h]": 1,
                "push rdi;push r12;push r14;push r15;sub rsp, ": 93,
                "sub rsp, ;mov qword [r11 - ], ;mov rax, qword [];xor rax, rsp;mov qword [var_60h], rax": 2,
                "mov dword [var_20h], 1;mov r8, qword [rcx + ];cmp r8, ;jb ;mov rcx, qword [rcx]": 2,
                "sub rdx, rax;movzx r9d, byte [r15 + ];mov r8d, 1;mov rcx, rbx;call fcn.13f0d3b20": 2,
                "mov qword [var_68h], r8;mov rsi, rdx;mov qword [rbp - ], rdx;mov qword [rbp - ], rcx;mov qword [rbp + ], rcx": 1,
                "lea rdx, [];lea rcx, [rbp + ];call fcn.13f0b34c0;mov qword [rbp + ], rbx;mov qword [rbp + ], rbx": 3,
                "mov r8, qword [rsi + ];add r8, rcx;cmp rdx, ;jb ;mov rdx, qword [rsi]": 1,
                "movdqu xmmword [rbp + ], xmm0;mov qword [rbp + ], rbx;lea rcx, [rbp + ];call fcn.13f0d28c0;lea rax, [rbp + ]": 1,
                "movdqu xmmword [rbp + ], xmm0;mov qword [rbp + ], rbx;mov rcx, qword [rbp + ];mov qword [rbp + ], rcx;mov qword [rbp + ], rbx": 1,
                "mov qword [rbp + ], rax;mov qword [rbp + ], rbx;mov rax, qword [rbp + ];mov qword [rbp + ], rax;mov qword [rbp + ], rbx": 1,
                "mov qword [rbp + ], rbx;test rcx, rcx;je ;call fcn.13f10e55c;xorps xmm0, xmm0": 1,
                "mov r8d, 1;lea rdx, [];lea rcx, [rbp + ];call fcn.13f0b34c0;mov qword [rbp + ], rbx": 2,
                "mov r15, qword [rbp + ];lea r12, [rbp + ];cmp qword [rbp + ], ;cmovae r12, qword [rbp + ];mov rsi, qword [rbp + ]": 1,
                "cmovae r12, qword [rbp + ];mov rsi, qword [rbp + ];test r15, r15;jne ;cmp rdi, rsi": 1,
                "jne ;cmp rdi, rsi;jbe ;cmp rdi, rsi;jae ": 1,
                "jbe ;cmp rdi, rsi;jae ;sub rsi, rdi;cmp r15, rsi": 1,
                "cmp qword [rbp + ], ;cmovae r14, qword [rbp + ];add r14, rdi;test rsi, rsi;je ": 1,
                "shr rax, ;add r15, rax;je ;mov r12, qword [rcx + ];mov rbp, qword [rcx + ]": 2,
                "mov r9d, r8d;test rdx, rdx;je ;lea rcx, [r11 + ];cmp dword [rcx - ], 2": 3,
                "movsxd rax, r8d;cmp rax, rdx;jb ;mov rax, r10;ret": 2,
                "cmp rax, rdx;jb ;mov rax, r10;ret;movsxd rax, r8d": 2,
                "jb ;mov rax, r10;ret;movsxd rax, r8d;lea rax, [rax + rax*2]": 2,
                "ret;mov rax, rsp;push rbp;push r12;push r13": 4,
                "push r12;push r13;push r14;push r15;lea rbp, [rax - ]": 53,
                "mov edi, dword [r14];imul eax, edi, ;cmp eax, dword [r14 + ];jl ;mov rax, qword [r14 + ]": 2,
                "sar r15d, 5;mov eax, r15d;shr eax, ;add r15d, eax;imul eax, r15d, ": 2,
                "call fcn.13f0d3e30;mov r8, rax;lea rdx, [];lea rcx, [rbp - ];call fcn.13f0d0dd0": 2,
                "call fcn.13f0d0d10;lea r8, [];mov rdx, rax;lea rcx, [rbp + ];call fcn.13f0d0ba0": 1,
                "call fcn.13f0d0ba0;lea r8, [r14 + 8];mov rdx, rax;lea rcx, [rbp + ];call fcn.13f0d0f10": 1,
                "lea rcx, [rbp + ];call fcn.13f0d0f10;cmp qword [rbp + ], ;jb ;mov rcx, qword [rbp + ]": 1,
                "call fcn.13f10e55c;mov qword [rbp + ], ;mov qword [rbp + ], r13;mov byte [rbp + ], 0;cmp qword [rbp - ], ": 1,
                "lea rcx, [rbp + ];call fcn.13f0cd330;mov rdx, rax;lea rcx, [rbp - 8];call fcn.13f0dce80": 1,
                "mov r8, qword [rbx + ];inc r8;je ;mov rdx, rbx;lea rcx, [rbp + ]": 1,
                "lea rcx, [rbp + ];call fcn.13f10e580;jmp ;lea rax, [rbp + ];mov rax, rsp": 1,
                "xor rax, rsp;mov qword [rbp + ], rax;mov rbx, rdx;xor esi, esi;mov qword [rbp + ], rsi": 1,
                "mov rcx, qword [rbp - ];call fcn.13f10e55c;mov qword [rbp - 8], ;mov qword [rbp - ], rsi;mov byte [rbp - ], 0": 4,
                "sub rsp, ;xor eax, eax;mov r9, rcx;lea r8, [];mov qword [var_28h], rax": 4,
                "mov rax, rsp;push rbp;push r14;sub rsp, ;xor eax, eax": 1,
                "mov qword [rbp + ], rax;xor r12b, r12b;cmp byte [], r12b;jne ;xor eax, eax": 2,
                "mov qword [rbp + ], rax;lea rax, [var_48h];mov qword [rbp - ], rax;lea rax, [var_68h_2];mov qword [rbp - ], rax": 2,
                "mov qword [var_58h], r15;mov word [var_48h], r15w;lea r8d, [r15 + 3];lea rdx, [];lea rcx, [var_48h]": 2,
                "lea rcx, [rdi + rbx];mov r9d, 2;xor r8d, r8d;lea rdx, [];call fcn.13f0cece0": 2,
                "mov qword [var_60h], 7;mov qword [var_58h], r15;mov word [var_48h], r15w;or r9, ;xor r8d, r8d": 6,
                "lea rcx, [var_48h];call fcn.13f0d4030;lea rdx, [var_48h];lea rcx, [var_68h_2];call fcn.13f0d9410": 2,
                "mov byte [var_28h], 0;cmp qword [rbp - ], ;jb ;mov rcx, qword [var_68h_2];call fcn.13f10e55c": 2,
                "lea rax, [rbp - ];mov qword [var_20h], rax;mov rdx, rsi;lea rcx, [rbp - ];call fcn.13f0bfca0": 2,
                "mov rcx, rax;call fcn.13f0b62d0;mov rbx, qword [rbp + ];inc r14d;movsxd rdi, r14d": 2,
                "jb ;mov rcx, qword [rbx];call fcn.13f10e55c;mov qword [rbx + ], 7;mov qword [rbx + ], r15": 11,
                "jne ;mov rbx, qword [rbp + ];mov rcx, rbx;call fcn.13f10e55c;xorps xmm0, xmm0": 8,
                "mov rax, r9;shr rax, ;add r9, rax;je ;lea rcx, [r10 + ]": 3,
                "lea rax, [rax + rax*2];shl rax, 6;add rax, r10;ret;int3": 3,
                "cmp qword [rdi + ], ;jb ;mov rdx, qword [rdi];jmp ;mov rdx, rdi": 4,
                "mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax;mov r14, rcx;xor r12d, r12d": 2,
                "mov rsi, rax;jmp ;mov rsi, r12;test bl, 8;je ": 2,
                "mov rcx, qword [rbp - ];call fcn.13f10e55c;mov qword [rbp], ;mov qword [rbp - 8], r12;mov byte [rbp - ], 0": 1,
                "jg ;cmp qword [rbx + ], 0;je ;cmp byte [rbx + ], 0;jne ": 1,
                "jne ;mov dword [rbx + ], 2;call fcn.13f0bb9b0;test rax, rax;je ": 1,
                "mov byte [var_48h], 0;or r9, ;xor r8d, r8d;lea rdx, [];lea rcx, [var_48h]": 1,
                "mov byte [var_48h], 0;lea rdx, [rbx + ];or r9, ;xor r8d, r8d;lea rcx, [var_48h]": 1,
                "int3;int3;sub rsp, ;mov rdx, rcx;call fcn.13f0bc790": 1,
                "lea rax, [rbp - ];mov qword [rbp - ], rax;lea rax, [rbp - ];mov qword [var_20h], rax;mov qword [rbp - ], 7": 3,
                "cmovne esi, eax;mov rbx, qword [rbp + 7];test rbx, rbx;je ;mov rdi, qword [rbp + ]": 2,
                "mov rcx, rbx;call fcn.13f10e55c;xorps xmm0, xmm0;movdqu xmmword [rbp + 7], xmm0;mov qword [rbp + ], r14": 2,
                "movdqu xmmword [rbp + 7], xmm0;mov qword [rbp + ], r14;movzx eax, sil;jmp ;movzx eax, r15b": 2,
                "call fcn.13f0d0c20;mov r8, r13;mov rdx, rax;lea rcx, [var_30h_2];call fcn.13f0d0f10": 2,
                "mov rcx, r12;cmp byte [rcx + rax], ;je ;cmp r8, ;jb ": 1,
                "dec rax;jns ;jmp ;lea eax, [rdx + 1];movsxd r8, eax": 1,
                "or r9, ;xor r8d, r8d;lea rdx, [rbp + ];lea rcx, [var_30h_2];call fcn.13f0b3390": 1,
                "xor r8d, r8d;lea rdx, [rbp + ];lea rcx, [var_30h_2];call fcn.13f0b3390;lea rdx, [var_30h_2]": 1,
                "mov rcx, rax;call fcn.13f0e8ee0;mov rdi, rax;cmp qword [rbp + ], 8;jb ": 1,
                "mov word [rbp + ], si;lea rax, [rbp - ];mov qword [rbp - ], rax;lea rax, [rbp];mov qword [var_50h], rax": 1,
                "jb ;mov rax, qword [rax];test rdi, rdi;jne ;mov dword [], ": 1,
                "mov qword [rbx], rsi;mov rcx, rbx;call fcn.13f10e55c;mov rcx, rdi;call fcn.13f10e55c": 1,
                "mov dword [], ;jmp ;mov rbx, qword [rdi + 8];mov rcx, rbx;push rbp": 1,
                "mov rcx, rbx;push rbp;push rbx;push rsi;push rdi": 1,
                "sub rsp, ;mov qword [rbp], ;mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax": 3,
                "mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax;mov rax, r9;mov qword [var_58h], rax": 1,
                "xor eax, eax;mov qword [rbp + ], rax;mov qword [rbp + ], rax;mov qword [rbp + ], rax;mov rdx, qword [rcx + ]": 1,
                "mov rcx, qword [rcx];mov r8, qword [r13 + ];add r8, rcx;cmp rdx, ;jb ": 1,
                "lea r8d, [rsi + 1];lea rdx, [];lea rcx, [rbp + ];call fcn.13f0b34c0;mov qword [rbp + ], rsi": 1,
                "lea rdx, [];lea rcx, [rbp + ];call fcn.13f0b34c0;mov ebx, esi;mov r14, qword [rbp + ]": 1,
                "test r14, r14;jne ;cmp rbx, rdi;jbe ;cmp rbx, rdi": 2,
                "lea rsi, [rbp + ];cmp qword [rbp + ], ;cmovae rsi, qword [rbp + ];add rsi, rbx;test rdi, rdi": 2,
                "add rsi, rbx;test rdi, rdi;je ;movsx edx, byte [r15];mov r8, rdi": 2,
                "call fcn.13f10f83c;mov rbx, rax;test rax, rax;je ;test r14, r14": 2,
                "cmovae rax, qword [rbp + ];sub rbx, rax;mov r14, qword [rbp + ];xor esi, esi;cmp rbx, ": 2,
                "mov qword [rbp + ], rsi;mov byte [rbp + ], 0;mov qword [rbp + ], rsi;mov qword [rbp + ], rsi;mov qword [rbp + ], ": 1,
                "mov byte [rbx + ], 1;mov qword [rbx + ], rdi;mov qword [rbx + ], rdi;mov qword [rbx + ], rdi;mov dword [rbx + ], edi": 1,
                "mov qword [rsp + ], rbx;lea rax, [];mov qword [rbx], rax;lea rax, [];mov qword [rbx], rax": 13,
                "xor r8d, r8d;lea rdx, [];call fcn.13f0b34c0;mov byte [rbx + ], 1;mov dword [rbx + ], edi": 3,
                "mov byte [rbx + ], dil;cmp qword [rbx + ], ;jb ;mov rcx, qword [rbx + ];mov qword [arg_8h], rcx": 1,
                "push rdi;push r14;sub rsp, ;mov qword [var_28h], ;mov rax, qword []": 4,
                "mov qword [rcx + ], ;xor ebp, ebp;mov qword [rcx + ], rbp;mov byte [rcx], bpl;lea r14, [rcx + ]": 4,
                "mov byte [r14], bpl;cmp rcx, rdx;je ;or r9, ;xor r8d, r8d": 4,
                "mov rcx, r14;call fcn.13f0b3390;cmp qword [rdi + ], ;jb ;mov rcx, qword [rdi]": 3,
                "mov rax, rsi;mov rcx, qword [var_40h];xor rcx, rsp;call fcn.13f10e4e0;add rsp, ": 3,
                "pop rbp;pop rbx;ret;int3;push rbx": 3,
                "mov word [r15], r12w;lea rbp, [rcx + ];mov qword [rbp + ], ;mov qword [rbp + ], r12;mov byte [rbp], r12b": 4,
                "jb ;mov rcx, qword [var_60h];call fcn.13f10e55c;mov qword [var_48h], ;mov qword [var_50h], r15": 25,
                "mov qword [var_50h], r15;mov byte [var_60h], 0;lea rdx, [rbx + ];lea rcx, [var_20h];call fcn.13f0cda80": 3,
                "mov qword [var_28h], rax;lea rdx, [var_20h];lea rcx, [var_60h];call fcn.13f0cd8d0;mov rdx, rax": 1,
                "call fcn.13f10e55c;xorps xmm0, xmm0;movdqu xmmword [var_20h], xmm0;mov qword [var_10h], r15;mov rax, r14": 1,
                "lea r8d, [rsi + 2];lea rdx, [];lea rcx, [r11 - ];mov r11, rsp;push rdi": 1,
                "or r9, ;xor r8d, r8d;mov rdx, r14;lea rcx, [var_30h];call fcn.13f0b3390": 1,
                "xor r8d, r8d;mov rdx, r14;lea rcx, [var_30h];call fcn.13f0b3390;lea r8, [var_50h]": 1,
                "and rax, ;cmp rax, ;jne ;mov ecx, ;call fcn.13f10eae8": 1,
                "jb ;mov rax, qword [rax];mov byte [rax], 0;lea rax, [rdi + ];mov qword [rax + ], rsi": 1,
                "mov byte [rax], 0;mov dword [rdi + ], esi;mov byte [rdi + ], 0;lea rcx, [rdi + ];mov qword [rcx + ], rsi": 1,
                "call fcn.13f0d3cc0;mov dword [rdi + ], eax;mov rcx, qword [var_88h];add rcx, ;call fcn.13f0d3cc0": 3,
                "mov rcx, qword [var_88h];add rcx, ;call fcn.13f0d3cc0;mov dword [rdi + ], eax;mov rdx, qword [var_88h]": 1,
                "mov rbx, qword [var_88h];mov rcx, rbx;call fcn.13f10e55c;xorps xmm0, xmm0;movdqu xmmword [var_88h], xmm0": 1,
                "sub rsp, ;mov qword [var_28h], ;mov rbx, rdx;mov dword [var_20h], 0;lea rdx, [rcx + ]": 2,
                "push rbp;push rdi;push r14;lea rbp, [rax - ];sub rsp, ": 23,
                "mov qword [rbp + ], rax;mov qword [rbp - 9], ;mov qword [arg_10h], rdx;push rbx;sub rsp, ": 1,
                "lea rdx, [rcx + ];or r9, ;xor r8d, r8d;lea rcx, [rbp - ];call fcn.13f0b3390": 9,
                "mov r8, rbx;mov rdx, rax;mov rcx, rsi;call fcn.13f0d1160;mov dword [rbp - ], 1": 9,
                "mov qword [rbp - ], 7;mov qword [rbp - ], r14;mov word [rbp - ], r14w;cmp qword [rbp + ], 8;jb ": 2,
                "mov qword [rbp + ], 7;mov qword [rbp + ], r14;mov word [rbp - 1], r14w;cmp qword [rbp + ], 8;jb ": 9,
                "mov rax, rsi;lea r11, [var_d0h];mov rbx, qword [r11 + ];mov rsi, qword [r11 + ];mov rsp, r11": 2,
                "lea rbp, [rax - ];mov rax, rsp;mov qword [rax + ], rdx;push rbp;push rdi": 1,
                "mov qword [rbp - ], rax;lea rdx, [rbp - ];call fcn.13f0c0bd0;mov rdx, rax;lea rcx, [rbp - ]": 3,
                "lea rdx, [rbp - ];call fcn.13f0c0bd0;mov rdx, rax;lea rcx, [rbp - ];call fcn.13f0d9410": 3,
                "mov rdx, rax;lea rcx, [rbp - ];call fcn.13f0d9410;mov rcx, rax;call fcn.13f0dcd70": 6,
                "mov rcx, qword [rbp + ];call fcn.13f0d3cc0;movsxd rdx, eax;mov rcx, rbx;call fcn.13f0c2130": 3,
                "mov ecx, ;call qword [];mov rcx, qword [rbp + ];add rcx, ;call fcn.13f0d3cc0": 3,
                "je ;mov byte [rax + ], dil;lea rcx, [rbp - ];mov qword [rbp - ], rcx;mov rax, rsp": 1,
                "mov qword [rbp - ], rcx;lea rdx, [rbp - ];mov rcx, rax;call fcn.13f0c0210;mov rdx, rax": 2,
                "mov rdi, qword [rbp + ];cmp rbx, rdi;je ;cmp qword [rbx + ], ;jb ": 2,
                "xorps xmm0, xmm0;movdqu xmmword [rbp + ], xmm0;mov qword [rbp + ], rsi;cmp qword [rbp + ], ;jb ": 2,
                "mov byte [rbp + ], 0;mov rcx, qword [rbp + ];xor rcx, rsp;call fcn.13f10e4e0;lea r11, [var_c0h]": 2,
                "mov rbx, rdx;xor eax, eax;mov dword [var_20h], eax;or r9, ;xor r8d, r8d": 2,
                "mov qword [rdx + ], rax;mov byte [rdx], al;jne ;lea rdx, [rcx + ];mov rcx, rbx": 2,
                "xor rax, rsp;mov qword [rbp + ], rax;movzx esi, dl;mov rdi, rcx;lea rax, [rbp - ]": 3,
                "mov rdx, rax;lea rcx, [rbp + ];call fcn.13f0db0a0;xor r14d, r14d;cmp qword [rbp + ], r14": 3,
                "je ;test sil, sil;je ;lea rcx, [];call fcn.13f0e9c60": 3,
                "lea rcx, [rbp - ];call fcn.13f0d9410;mov rbx, rax;lea rdx, [rbp - ];mov rcx, rdi": 2,
                "mov rcx, rdi;call fcn.13f0c0aa0;mov rdx, rax;lea rcx, [rbp - ];call fcn.13f0d9410": 2,
                "mov rdx, rbx;mov rcx, rax;call fcn.13f11024c;cmp qword [rbp - ], ;jb ": 2,
                "call fcn.13f10e55c;mov qword [rbp - ], ;mov qword [rbp - ], r14;mov byte [rbp - ], 0;test sil, sil": 2,
                "mov rcx, rbx;call fcn.13f0d0f80;mov dword [rbp - ], 1;lea rax, [rbp - ];mov qword [rbp - 1], rax": 3,
                "mov dword [rbp - ], 1;lea rax, [rbp - ];mov qword [rbp - 1], rax;mov qword [rbp - 9], 7;mov qword [rbp - ], rsi": 3,
                "mov qword [rbp - 1], rax;mov qword [rbp - 9], 7;mov qword [rbp - ], rsi;mov word [rbp - ], si;or r9, ": 3,
                "mov rax, qword [rax];mov rcx, rax;call qword [];cmp eax, ;jne ": 5,
                "or r9, ;xor r8d, r8d;lea rdx, [rbp + ];lea rcx, [rbp - ];call fcn.13f0d4030": 15,
                "call fcn.13f0d4030;lea rdx, [rbp - ];mov rcx, rdi;call fcn.13f0d9410;mov dword [rbp - ], 1": 2,
                "sub rsp, ;mov qword [rbp + ], ;mov qword [arg_138h], rbx;mov rax, qword [];xor rax, rsp": 3,
                "mov rdi, rcx;mov qword [rbp + ], rdx;mov qword [rbp + ], r8;xor r15d, r15d;mov dword [var_20h], r15d": 3,
                "call fcn.13f0d94e0;push rbp;push rsi;push rdi;lea rbp, [rsp - ]": 1,
                "mov rdx, rax;mov rcx, r14;call fcn.13f0d1070;mov dword [var_20h], 1;cmp qword [rbp - ], 8": 2,
                "or rsi, ;test al, al;jne ;lea rax, [rbp - ];mov qword [rbp - 9], 7": 3,
                "mov qword [rbp - 9], 7;push rbp;push rsi;push rdi;push r14": 1,
                "test al, al;jne ;lea rax, [rbp - ];mov qword [rbp - 9], 7;mov qword [rbp - ], rdi": 2,
                "call fcn.13f0c0940;lea rdx, [rbp - ];mov rcx, rax;call fcn.13f0da660;lea rax, [rbp + 7]": 2,
                "mov rdx, rax;lea rcx, [rbp + ];call fcn.13f0db0a0;lea rdx, [rbp + ];cmp qword [rbp + ], 8": 2,
                "cmovae rdx, qword [rbp + ];mov r10, qword [rbx + ];cmp qword [rbx + ], 8;jb ;mov rcx, qword [rbx]": 2,
                "mov r8, r9;cmp r10, r9;cmovb r8, r10;test r8, r8;jmp ": 2,
                "add rcx, 2;add rdx, 2;dec r8;jmp ;mov r8d, 1": 6,
                "je ;lea rax, [rbp + 7];mov qword [rbp - ], rax;lea rax, [rbp - ];mov qword [rbp - 1], rax": 2,
                "lea rcx, [rbp - ];call fcn.13f0d4030;lea rdx, [rbp - ];lea rcx, [rbp + 7];call fcn.13f0dc5b0": 2,
                "jmp ;mov rbx, rdi;cmp qword [rbp + ], 8;jb ;mov rcx, qword [rbp + ]": 1,
                "jb ;mov rcx, qword [rbp + ];call fcn.13f10e55c;mov qword [rbp + ], 7;mov qword [rbp + ], rdi": 7,
                "call fcn.13f0d05c0;test rax, rax;mov rax, qword [rbp - ];movsxd rcx, dword [rax + 4];lea rcx, [rbp + rcx - ]": 2,
                "call fcn.13f0b3a80;cmp qword [var_58h], ;mov rax, rsp;push rbp;push rdi": 1,
                "mov qword [rbp - ], r14;mov byte [rbp - ], 0;cmp qword [var_78h], ;jb ;mov rcx, qword [var_60h_2]": 3,
                "call fcn.13f10e55c;mov qword [var_78h], ;mov qword [var_70h_2], r14;mov byte [var_60h_2], 0;lea rcx, [rbp - ]": 1,
                "mov qword [rbp - ], rax;lea rax, [rbp - ];mov qword [rbp - ], rax;lea rax, [var_60h_2];mov qword [rbp - ], rax": 1,
                "cmp qword [var_58h], 8;jb ;mov rcx, qword [var_40h];call fcn.13f10e55c;mov qword [var_58h], 7": 1,
                "mov ecx, eax;call fcn.13f0e9d58;lea rcx, [rbp + ];call fcn.13f0cea10;lea rax, [rbp + ]": 1,
                "lea rcx, [rbp + ];call fcn.13f0cea10;lea rax, [rbp + ];mov qword [rbp - ], rax;lea rax, []": 1,
                "mov qword [rbp + ], rax;lea rax, [];mov qword [rbp + ], rax;lea rcx, [rbp + ];call fcn.13f0e9e44": 8,
                "xor rcx, rsp;call fcn.13f10e4e0;lea r11, [var_200h];mov rbx, qword [r11 + ];mov rsi, qword [r11 + ]": 1,
                "mov qword [rdi + ], 0;mov byte [rdi], 0;mov rcx, qword [var_a8h];xor rcx, rsp;call fcn.13f10e4e0": 1,
                "push rsi;push rdi;sub rsp, ;mov qword [var_28h], ;mov qword [arg_70h], rbx": 2,
                "mov rsi, rcx;xor eax, eax;mov dword [var_20h], eax;mov qword [rdx + ], ;mov qword [rdx + ], rax": 8,
                "test bpl, bpl;je ;cmp byte [rax + ], 0;je ;cmp dword [rax + ], 0": 2,
                "cmp rbx, rdx;je ;or r9, ;xor r8d, r8d;mov rcx, rbx": 10,
                "je ;mov edx, dword [rax + ];cmp byte [rbx + ], 0;jne ;mov rax, qword [rbx + ]": 3,
                "jne ;call fcn.13f0c16e0;test rax, rax;je ;movsxd rax, dword [rax + ]": 3,
                "cmp eax, ;je ;cmp rcx, rax;cmovne rcx, rax;mov rax, rcx": 3,
                "push rdi;sub rsp, ;mov qword [var_20h], ;mov qword [arg_68h], rbx;mov rdi, rdx": 4,
                "call fcn.13f0c1950;mov rcx, rbx;call fcn.13f0c16e0;test rax, rax;je ": 3,
                "mov qword [var_20h], ;mov qword [arg_60h], rbx;movzx edi, dl;mov rbx, rcx;call fcn.13f0c16e0": 4,
                "mov rdi, rcx;call fcn.13f0c16e0;mov rbx, rax;mov qword [arg_48h], rax;test rax, rax": 5,
                "mov rbx, qword [rsp + ];jmp ;mov rcx, rdi;call fcn.13f0c1950;mov rcx, rdi": 5,
                "mov dword [var_20h], eax;mov qword [rdx + ], ;mov qword [rdx + ], rax;mov byte [rdx], al;lea r8d, [rax + ]": 6,
                "mov rcx, rsi;call fcn.13f0c1950;lea rdx, [var_30h];mov rcx, rsi;call fcn.13f0c2270": 5,
                "call fcn.13f0c2270;mov rsi, rax;cmp rbx, rax;je ;cmp qword [rbx + ], ": 5,
                "mov qword [rbx + ], ;mov qword [rbx + ], 0;mov byte [rbx], 0;mov rdx, rsi;mov rcx, rbx": 5,
                "mov rdx, rsi;mov rcx, rbx;call fcn.13f0b3f40;cmp qword [var_48h], ;jb ": 5,
                "mov qword [rbx + ], ;mov qword [rbx + ], 0;mov byte [rbx], 0;mov rcx, qword [var_58h];xor rcx, rsp": 5,
                "sub rsp, ;mov qword [r11 - ], ;mov qword [r11 + 8], rbx;mov qword [r11 + ], rbp;mov rax, qword []": 6,
                "mov ebp, r15d;mov rax, qword [];mov rdi, qword [];sub rax, rdi;push rdi": 1,
                "cmp word [rcx], ax;cmovb r8d, r12d;jmp ;jne ;mov r8d, r15d": 3,
                "pop rdi;pop rsi;ret;int3;int3": 131,
                "call fcn.13f10e55c;mov qword [rbx + ], 7;mov qword [rbx + ], r15;mov word [rbx], r15w;mov eax, ebp": 1,
                "mov rbx, qword [arg_60h];mov rbp, qword [arg_70h];mov rsi, qword [arg_78h];add rsp, ;pop r15": 7,
                "mov qword [var_58h], rax;mov rbx, rdx;mov qword [r11 - ], rdx;lea rax, [r11 - ];mov qword [r11 - ], rax": 2,
                "mov rcx, qword [var_58h];xor rcx, rsp;call fcn.13f10e4e0;mov rbx, qword [arg_70h];add rsp, ": 2,
                "call fcn.13f10e4e0;mov rbx, qword [arg_70h];add rsp, ;pop rdi;ret": 4,
                "call fcn.13f0c2690;cmp eax, ;jle ;movsxd r8, eax;shl r8, 5": 3,
                "mov word [rsi], bp;mov rcx, qword [var_58h];mov r11, rsp;push rdi;sub rsp, ": 1,
                "mov qword [rsi + ], rbp;mov word [rsi], bp;mov rcx, qword [var_58h];xor rcx, rsp;call fcn.13f10e4e0": 2,
                "call fcn.13f10e4e0;lea r11, [var_60h];mov rbx, qword [r11 + ];mov rbp, qword [r11 + ];mov rsi, qword [r11 + ]": 2,
                "jmp ;mov rdx, rbx;mov r10, qword [r9 + ];cmp qword [r9 + ], 8;jb ": 3,
                "jb ;mov rax, qword [r9];jmp ;mov rax, r9;mov r8, r11": 3,
                "jmp ;movzx ecx, word [rdx];cmp word [rax], cx;jne ;add rax, 2": 3,
                "movsxd rax, r8d;test r8d, r8d;jne ;cmp r10, r11;jae ": 3,
                "inc esi;add r9, ;mov rcx, qword [rbp + ];sub rcx, qword [rbp + ];sar rcx, 5": 3,
                "jne ;lea rcx, [rdi + ];mov r11, rsp;push rdi;sub rsp, ": 1,
                "mov qword [rbx + ], rdi;mov word [rbx], di;add rbx, ;cmp rbx, r15;jne ": 3,
                "call fcn.13f0d43a0;mov qword [rbp - ], 7;mov qword [rbp - ], rsi;mov word [rbp - ], si;or r9, ": 3,
                "xor al, al;mov rcx, qword [rbp + ];xor rcx, rsp;call fcn.13f10e4e0;lea r11, [var_c0h]": 3,
                "mov qword [rbp - 1], rdi;mov qword [rbp + 7], rdi;mov qword [rbp + 7], 7;mov qword [rbp - 1], rdi;mov word [rbp - ], di": 3,
                "lea r8, [];lea rdx, [rbp - ];lea rcx, [rbp + ];call fcn.13f0d0f80;lea rax, [rbp - ]": 3,
                "call fcn.13f10e55c;mov qword [rbp + ], ;mov qword [rbp + ], rdi;mov byte [rbp + ], 0;mov rcx, qword [rbp + ]": 2,
                "xor rcx, rsp;call fcn.13f10e4e0;lea r11, [var_e0h];mov rbx, qword [r11 + ];mov rdi, qword [r11 + ]": 3,
                "call fcn.13f10e4e0;lea r11, [var_e0h];mov rbx, qword [r11 + ];mov rdi, qword [r11 + ];mov rsp, r11": 3,
                "call fcn.13f0d1070;cmp qword [rbp - ], 8;jb ;mov rcx, qword [rbp - ];call fcn.13f10e55c": 4,
                "mov qword [rbp - ], rdi;mov word [rbp - ], di;cmp qword [var_60h_2], 8;jb ;mov rcx, qword [var_48h]": 4,
                "cmp qword [var_60h_2], 8;jb ;mov rcx, qword [var_48h];call fcn.13f10e55c;mov qword [var_60h_2], 7": 4,
                "mov qword [var_58h_2], rdi;mov word [var_48h], di;or r9, ;xor r8d, r8d;lea rdx, [rbp + ]": 2,
                "xor r8d, r8d;lea rdx, [rbp + ];lea rcx, [var_48h];call fcn.13f0d4030;lea rdx, [var_20h]": 2,
                "lea r11, [var_140h];mov rbx, qword [r11 + ];mov rdi, qword [r11 + ];mov rsp, r11;pop rbp": 3,
                "xor r8d, r8d;lea rdx, [];lea rcx, [rbp - ];call fcn.13f0d4030;lea rax, [var_20h_2]": 2,
                "lea rcx, [rbp - ];call fcn.13f0d4030;lea rax, [var_20h_2];mov qword [var_40h], rax;call qword []": 2,
                "lea rcx, [rbp - ];call fcn.13f0d94e0;lea rax, [var_68h];mov qword [var_40h], rax;mov qword [rbp - ], ": 2,
                "or r9, ;xor r8d, r8d;lea rdx, [];lea rcx, [var_68h];call fcn.13f0b3390": 2,
                "mov qword [var_38h_2], 7;mov qword [var_30h_2], rdi;mov word [var_20h_2], di;or r9, ;xor r8d, r8d": 1,
                "cmp qword [var_60h_2], ;jb ;mov rcx, qword [var_48h];call fcn.13f10e55c;mov qword [var_60h_2], ": 2,
                "mov qword [rbp + ], rdi;mov word [rbp + ], di;cmp qword [rbp + 8], 8;jb ;mov rcx, qword [rbp - ]": 1,
                "lea rbp, [rsp - ];sub rsp, ;mov qword [rbp + ], ;mov qword [arg_420h], rbx;mov rax, qword []": 2,
                "xor r13d, r13d;mov qword [rbp + ], r13;mov qword [rbp + ], r13;mov qword [rbp + ], 7;mov qword [rbp + ], r13": 2,
                "lea rcx, [rbp + ];call fcn.13f0d4030;xor eax, eax;mov qword [rbp + ], rax;mov qword [rbp + ], rax": 2,
                "mov qword [var_40h], rax;mov qword [rbp + ], 7;mov qword [rbp + ], r13;mov word [rbp + ], r13w;lea r8d, [r13 + 2]": 2,
                "mov qword [var_38h], 7;mov qword [var_30h], r13;mov word [var_20h], r13w;or r9, ;xor r8d, r8d": 3,
                "xor r8d, r8d;lea rcx, [var_20h];call fcn.13f0d4030;lea rdx, [var_20h];lea rcx, [rbp + ]": 2,
                "call fcn.13f0d3cc0;mov edi, eax;cmp qword [rbp - ], ;jb ;mov rcx, qword [rbp - ]": 1,
                "mov rbx, rax;mov dword [rbp + ], ;lea rdx, [rbp + ];mov rcx, rax;call qword []": 1,
                "lea rdx, [rbp + ];mov rcx, rax;call qword [];test eax, eax;je ": 1,
                "mov rdx, rax;lea rcx, [rbp - ];call fcn.13f0d0d10;cmp qword [rax + ], ;jb ": 1,
                "mov qword [rbp - ], r13;mov byte [var_70h_2], 0;cmp qword [var_68h], ;jb ;mov rcx, qword [var_50h]": 1,
                "jb ;mov rcx, qword [var_50h];call fcn.13f10e55c;mov qword [var_68h], ;mov qword [var_60h_2], r13": 1,
                "mov qword [rbp + ], r13;mov word [rbp + ], r13w;cmp qword [r12 + ], ;jb ;mov rcx, qword [r12]": 1,
                "movzx eax, r15b;mov rcx, qword [rbp + ];xor rcx, rsp;call fcn.13f10e4e0;mov rbx, qword [arg_420h]": 1,
                "call fcn.13f0d43a0;lea r8, [];mov rdx, rbx;lea rcx, [var_20h];call fcn.13f0d0f80": 1,
                "cmp rbx, rax;je ;cmp qword [rbx + ], 8;jb ;mov rcx, qword [rbx]": 3,
                "xor edi, edi;mov dword [var_30h], edi;lea rcx, [r11 - ];call fcn.13f0ddba0;lea r8, []": 2,
                "mov qword [var_d8h], ;mov qword [var_d0h], rdi;mov byte [var_c0h], 0;lea r8, [var_138h];lea rdx, []": 2,
                "jb ;mov rcx, qword [var_e0h];call fcn.13f10e55c;mov qword [var_f8h], ;mov qword [var_f0h], rdi": 4,
                "lea rax, [var_c0h];mov qword [var_20h], rax;lea rax, [var_100h];mov qword [var_28h], rax;mov qword [var_d8h], ": 2,
                "lea rdx, [];lea rcx, [var_c0h];call fcn.13f0b34c0;mov qword [var_118h], ;mov qword [var_110h], rdi": 2,
                "lea rcx, [var_e0h];call fcn.13f0daaf0;mov rbx, rax;lea rax, [var_a0h];cmp rax, rbx": 2,
                "cmp qword [var_b8h], ;jb ;mov rcx, qword [var_a0h];call fcn.13f10e55c;mov qword [var_b8h], ": 2,
                "mov qword [var_20h], rax;mov rax, qword [rbx];mov qword [var_a0h], rax;mov qword [rbx], rdi;mov rax, qword [rbx + ]": 2,
                "lea rcx, [rax - 1];lea rbx, [var_a0h];cmp qword [var_b8h], ;cmovae rbx, qword [var_a0h];add rbx, rcx": 1,
                "lea rcx, [];call fcn.13f10f83c;test rax, rax;je ;lea rcx, [var_a0h]": 1,
                "mov rdx, qword [var_b8h];cmp rdx, ;cmovae rax, rcx;sub rbx, rax;mov rax, qword [var_b0h]": 1,
                "jmp ;or rbx, ;mov rdx, qword [var_b8h];mov rcx, qword [var_a0h];inc rbx": 1,
                "lea rcx, [];call fcn.13f0e91f0;int3;mov qword [var_b0h], rbx;lea rax, [var_a0h]": 1,
                "cmovae rax, rcx;mov byte [rbx + rax], 0;mov r8, qword [var_b0h];test r8, r8;je ": 1,
                "cmovae rax, qword [var_a0h];mov qword [arg_8h], rcx;push rbx;sub rsp, ;mov qword [var_28h], ": 1,
                "mov qword [rax + ], ;mov byte [rax + ], 0;lea rax, [var_28h];mov qword [var_48h], rax;lea rdx, [var_28h]": 2,
                "call fcn.13f10e4e0;mov rbx, qword [arg_78h];mov rsi, qword [arg_80h];add rsp, ;pop rdi": 3,
                "mov rdx, r12;lea rcx, [rbp];call fcn.13f0b3390;mov qword [var_38h], ;mov qword [var_30h], rbx": 3,
                "mov byte [var_20h], bl;mov r9, r13;xor r8d, r8d;lea rdx, [rbp + ];lea rcx, [var_20h]": 3,
                "test al, al;je ;mov qword [rbp - ], rbx;mov qword [rbp - 8], rbx;mov qword [rbp - 8], 7": 3,
                "mov rdx, rdi;lea rcx, [rbp + ];call fcn.13f0d3ef0;cmp qword [rbp + ], 8;jb ": 3,
                "jb ;mov rcx, qword [rbp];call fcn.13f10e55c;mov qword [rbp + ], 7;mov qword [rbp + ], rbx": 3,
                "call fcn.13f10e55c;mov qword [rbp - 8], 7;mov qword [rbp - ], rbx;mov word [rbp - ], bx;lea rcx, [rbp + ]": 3,
                "test r8d, r8d;jne ;cmp r9, 2;jae ;mov eax, r13d": 2,
                "mov eax, r13d;jmp ;mov eax, ebx;cmp r9, 2;setne al": 2,
                "setne al;test eax, eax;sete sil;test sil, sil;jne ": 2,
                "cmp byte [r15 + ], 0;jne ;xor eax, eax;mov qword [rbp + ], rax;mov qword [rbp + ], rax": 1,
                "mov rdx, qword [rbp + ];sub rax, rdx;sar rax, 5;test rax, rax;je ": 1,
                "add rdx, rcx;mov qword [rbp - ], rbx;mov qword [rbp - 8], rbx;mov qword [rbp - 8], ;mov qword [rbp - ], rbx": 1,
                "mov qword [rbp - 8], rbx;mov qword [rbp - 8], ;mov qword [rbp - ], rbx;mov byte [rbp - ], 0;mov r9, r13": 1,
                "mov qword [rbp - ], rbx;mov byte [rbp - ], 0;mov r9, r13;xor r8d, r8d;lea rdx, [rbp - ]": 1,
                "lea rcx, [rbp - ];push rdi;sub rsp, ;mov qword [var_20h], ;mov qword [arg_78h], rbx": 1,
                "xor rax, rsp;mov qword [var_50h], rax;mov rsi, rcx;xor dil, dil;call fcn.13f0c16e0": 1,
                "movzx eax, dl;mov r8d, 1;cmp ecx, dword [rsi + ];jle ;test dl, dl": 1,
                "jmp ;mov dword [rbx + ], r8d;mov qword [rbx + ], ;jmp ;xor al, al": 1,
                "test dl, dl;je ;movzx edi, dil;test al, al;cmove edi, r8d": 1,
                "je ;mov rcx, rsi;call fcn.13f0c16e0;mov byte [rax + ], 0;mov qword [rax + ], ": 1,
                "mov rsi, r8;mov r14, rdx;mov r15, rcx;mov qword [rbp - 8], rdx;mov qword [rbp + ], r8": 2,
                "mov dword [var_68h], r12d;mov qword [rdx + ], ;mov qword [rdx + ], r12;mov byte [rdx], r12b;or r9, ": 2,
                "lea rdx, [];lea rcx, [var_20h];mov qword [var_60h], rax;mov qword [var_30h], r12;mov qword [var_38h], ": 2,
                "mov qword [var_30h], r12;mov qword [var_38h], ;call fcn.13f0b34c0;test bl, bl;jne ": 2,
                "call fcn.13f0b34c0;test bl, bl;jne ;mov qword [rbp + ], 7;mov qword [rbp + ], r12": 2,
                "mov word [rbp + ], r12w;lea rdx, [r15 + ];or r9, ;xor r8d, r8d;lea rcx, [rbp + ]": 4,
                "mov qword [var_50h], r12;mov byte [var_40h], 0;cmp qword [var_38h], ;jb ;mov rcx, qword [var_20h]": 6,
                "call fcn.13f0b4410;cmp rax, ;je ;lea r8, [rbp + ];lea rdx, []": 2,
                "lea rcx, [rbp - ];call fcn.13f0daaf0;mov rbx, rax;lea rax, [rbp + ];cmp rax, rbx": 1,
                "mov rcx, qword [rbp - ];call fcn.13f10e55c;mov qword [rbp - ], ;mov r11, rsp;push rbx": 1,
                "mov byte [var_48h], bpl;or r9, ;xor r8d, r8d;mov rdx, rsi;lea rcx, [var_48h]": 1,
                "mov byte [var_28h], bpl;or r9, ;xor r8d, r8d;mov rdx, r14;lea rcx, [var_28h]": 1,
                "or r9, ;xor r8d, r8d;mov rdx, r14;lea rcx, [var_28h];call fcn.13f0b3390": 1,
                "mov rcx, rdi;call fcn.13f0b78e0;mov dword [var_20h], 1;lea r9d, [arg_1h];mov rcx, rdi": 1,
                "call fcn.13f0b78e0;mov dword [var_20h], 1;lea r9d, [arg_1h];mov rcx, rdi;call fcn.13f0e0230": 1,
                "lea rax, [rbp - ];mov qword [rbp - ], rax;lea rax, [var_50h];mov qword [rbp - ], rax;mov qword [var_48h], ": 2,
                "or r9, ;xor r8d, r8d;mov rdx, rsi;lea rcx, [var_30h];call fcn.13f0b3390": 3,
                "xor r8d, r8d;mov rdx, r14;lea rcx, [rbp - ];call fcn.13f0b3390;mov qword [rbp - ], ": 2,
                "mov qword [r15 + ], ;mov qword [r15 + ], r12;mov byte [r15], 0;cmp qword [r14 + ], ;jb ": 2,
                "mov rcx, qword [rbp + ];xor rcx, rsp;call fcn.13f10e4e0;add rsp, ;pop r15": 8,
                "mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax;movzx r15d, r9b;mov rdi, r8": 3,
                "mov qword [rbp + ], rax;movzx r15d, r9b;mov rdi, r8;mov rsi, rdx;mov rbx, rcx": 3,
                "lea rcx, [var_60h_2];call fcn.13f0d9410;xor r9d, r9d;mov r8, rax;lea rdx, [var_20h]": 3,
                "xor r8d, r8d;lea rdx, [];lea rcx, [rbp - ];call fcn.13f0b34c0;lea rax, [var_60h_2]": 2,
                "lea rcx, [var_60h_2];call fcn.13f0d9410;mov rdx, rax;lea rcx, [rbp - ];call fcn.13f0da950": 1,
                "cmp qword [rcx + ], 0;jne ;or edx, 4;jmp ;mov edx, r12d": 1,
                "cmp qword [rbp - ], ;cmovae rdx, qword [rbp - ];mov r8, qword [rbp - ];lea rcx, [rbp + ];call fcn.13f0b1710": 1,
                "movsxd rcx, dword [rax + 4];lea rcx, [rbp + rcx + ];mov edx, dword [rcx + ];or edx, 2;cmp qword [rcx + ], 0": 1,
                "lea rcx, [rbp + ];call fcn.13f0e9e44;cmp qword [rbp - ], ;jb ;mov rcx, qword [rbp - ]": 2,
                "lea rax, [var_60h_2];mov qword [rbp - ], rax;mov qword [var_38h_2], ;mov qword [var_30h_2], r12;mov byte [var_20h], 0": 1,
                "mov qword [arg_140h], rbx;mov rax, qword [];xor rax, rsp;mov qword [rbp + 8], rax;mov rbx, rdx": 1,
                "mov byte [var_20h_2], sil;or r9, ;xor r8d, r8d;mov rdx, rdi;lea rcx, [var_20h_2]": 1,
                "lea rcx, [var_50h_2];call fcn.13f0d94e0;mov rdx, rax;lea rcx, [];call fcn.13f0c2c90": 1,
                "call fcn.13f0c5f20;cmp qword [rbp - ], ;jb ;mov rcx, qword [var_70h_2];call fcn.13f10e55c": 1,
                "mov qword [rdi + ], rsi;mov byte [rdi], 0;cmp qword [rbx + ], ;jb ;mov rcx, qword [rbx]": 4,
                "push r15;lea rbp, [rsp - ];sub rsp, ;mov qword [rbp - ], ;mov qword [arg_1b0h], rbx": 2,
                "mov qword [rbp - ], ;mov qword [arg_1b0h], rbx;mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax": 2,
                "call fcn.13f0cece0;cmp rax, ;je ;lea r9d, [r15 + 4];xor r8d, r8d": 2,
                "lea rcx, [var_48h];call fcn.13f0d4030;lea rdx, [var_48h];call fcn.13f0c28b0;lea rax, [rbp + ]": 2,
                "mov qword [rbp - ], rax;lea rax, [rbp - ];mov qword [rbp - ], rax;lea rax, [rbp - ];mov qword [var_40h], rax": 2,
                "call fcn.13f0d4030;lea rdx, [var_48h];lea rcx, [rbp + ];call fcn.13f0d9410;mov rdi, rax": 2,
                "mov r8, rax;lea rdx, [];lea rcx, [var_68h];call fcn.13f0d0dd0;lea r8, []": 2,
                "lea rcx, [rbp - ];call fcn.13f0d0ba0;mov rbx, rax;mov qword [rbp - ], 7;mov qword [rbp - ], r15": 2,
                "lea rcx, [rbp - ];call fcn.13f0c6230;cmp qword [rbp - ], ;jb ;push rbp": 1,
                "xor r8d, r8d;mov rdx, rsi;lea rcx, [var_20h_2];call fcn.13f0d4030;lea rdx, [var_20h_2]": 2,
                "mov rcx, qword [rbp + ];call fcn.13f10e55c;mov qword [rbp + ], ;mov qword [rbp + ], r15;mov byte [rbp + ], 0": 5,
                "mov rbp, rax;mov qword [var_70h], rax;xor esi, esi;test rax, rax;je ": 1,
                "test rax, rax;je ;lea rax, [var_50h];mov qword [var_88h], rax;lea rax, [var_30h]": 1,
                "or r9, ;xor r8d, r8d;mov rdx, rbx;lea rcx, [var_50h];call fcn.13f0b3390": 1,
                "jmp ;mov rax, rsi;mov qword [var_28h], rsi;mov dword [var_20h], esi;mov r9, rax": 1,
                "lea r8, [];xor edx, edx;xor ecx, ecx;call qword [];cmp qword [rdi + ], ": 1,
                "lea rdx, [rbp - ];lea rcx, [rbp - ];call fcn.13f0c6230;lea rax, [rbp - ];mov qword [rbp - ], rax": 1,
                "call fcn.13f0c6230;lea rax, [rbp - ];mov qword [rbp - ], rax;lea rax, [rbp - ];mov qword [rbp - ], rax": 1,
                "mov r14, rcx;mov qword [rbp + ], rcx;mov qword [rbp + ], rdx;mov qword [rbp + ], r8;mov ecx, ": 2,
                "lea rcx, [rbp - ];call fcn.13f0d4030;mov qword [rbp - ], ;mov qword [rbp - ], rbx;mov byte [rbp - ], bl": 2,
                "call fcn.13f10e55c;mov qword [r14 + ], ;mov qword [r14 + ], rbx;mov byte [r14], 0;cmp qword [rsi + ], 8": 1,
                "mov qword [rbp + ], rax;mov rbx, rdx;mov rdi, rcx;mov qword [rbp], rcx;mov qword [rbp - 8], rdx": 2,
                "mov qword [rbp + ], r14;mov qword [rbp + ], r14;mov qword [rbp + ], ;mov qword [rbp + ], r14;mov byte [rbp + 8], r14b": 2,
                "mov rsi, rax;lea rax, [rbp + 8];cmp rax, rsi;je ;cmp qword [rbp + ], ": 4,
                "mov rdx, rax;lea rcx, [var_40h];call fcn.13f0d3980;mov r8, rax;lea rdx, []": 2,
                "call fcn.13f0d3980;mov r8, rax;lea rdx, [];lea rcx, [rbp - ];call fcn.13f0d0dd0": 4,
                "lea rax, [var_40h];mov qword [rbp - ], rax;lea rax, [var_20h_2];mov qword [rbp - ], rax;mov qword [var_58h], ": 1,
                "cmp qword [rbp - ], ;jb ;mov rcx, qword [rbp - ];call fcn.13f10e55c;cmp qword [rbp + ], ": 1,
                "lea r11, [var_150h];mov rbx, qword [r11 + ];mov rsi, qword [r11 + ];mov rsp, r11;pop r14": 1,
                "call fcn.13f0b34c0;mov dword [rbp - ], 1;mov rbx, qword [rdi + ];mov eax, r12d;test rbx, rbx": 1,
                "test al, al;sete al;test al, al;je ;mov eax, r12d": 1,
                "cmovb r8, rbx;test r8, r8;jne ;mov eax, r12d;jmp ": 2,
                "lea rdx, [];lea rcx, [var_58h];call fcn.13f0b34c0;mov qword [var_48h_2], ;mov qword [var_40h_2], r12": 1,
                "call fcn.13f0b34c0;mov qword [var_48h_2], ;mov qword [var_40h_2], r12;mov byte [var_30h], 0;or r9, ": 1,
                "call fcn.13f0b34c0;mov rdx, qword [rbp - ];add rdx, ;mov qword [var_70h_2], ;mov qword [var_68h], r12": 1,
                "lea rcx, [var_58h];call fcn.13f0b3390;lea r8, [var_30h];lea rdx, [var_58h];lea rcx, [rbp + ]": 1,
                "test al, al;je ;mov dword [], ;or r9, ;xor r8d, r8d": 1,
                "lea rax, [var_30h];mov qword [var_50h_2], rax;lea rdx, [var_30h];mov rcx, rbx;call fcn.13f0c0210": 1,
                "mov qword [rbp + ], 7;xor esi, esi;mov qword [rbp + ], rsi;mov word [rbp + 8], si;or r9, ": 1,
                "lea rdx, [];lea rcx, [rbp + 8];call fcn.13f0d4030;lea rdx, [rbp + 8];lea rcx, [rbp - ]": 1,
                "mov byte [rbp - ], 0;lea rax, [rbp + ];mov qword [var_20h_2], rax;lea r8, [];lea rdx, [rbp + ]": 1,
                "lea rax, [var_28h_2];mov qword [var_20h_2], rax;lea rax, [var_48h];mov qword [var_68h], rax;lea rcx, []": 1,
                "movzx edx, al;lea rcx, [var_70h];call fcn.13f0d3800;mov rbx, rax;lea rcx, []": 1,
                "lea rcx, [var_28h_2];call fcn.13f0d1160;mov rbx, rax;lea rdx, [var_48h];lea rcx, []": 1,
                "call fcn.13f0d1160;mov rbx, rax;lea rdx, [var_48h];lea rcx, [];call fcn.13f0c0bd0": 1,
                "call fcn.13f0d0ac0;lea r8, [];mov rdx, rax;lea rcx, [var_48h];call fcn.13f0d0ba0": 1,
                "lea rcx, [rbp - ];call fcn.13f0d0f10;lea r8, [];mov rdx, rax;lea rcx, [rbp - ]": 8,
                "mov qword [var_40h_2], ;mov qword [var_38h_2], rsi;mov byte [var_28h_2], 0;mov qword [rbp - 8], rsi;mov qword [rbp], rsi": 1,
                "lea rcx, [var_28h_2];call fcn.13f0b34c0;mov qword [var_60h_2], ;mov qword [var_58h_2], rsi;mov byte [var_48h], 0": 1,
                "or r9, ;xor r8d, r8d;lea rdx, [rbp - ];lea rcx, [var_48h];call fcn.13f0b3390": 1,
                "lea rax, [var_78h];mov qword [var_70h], rax;lea rax, [rbp];mov qword [var_68h_2], rax;lea rax, [rbp - ]": 2,
                "lea rdx, [var_20h];lea rcx, [];call fcn.13f0c2270;mov rbx, rax;mov edx, esi": 2,
                "mov edx, esi;lea rcx, [var_40h];call fcn.13f0d3e30;mov r8, rax;lea rdx, []": 2,
                "lea rdx, [];lea rcx, [rbp + ];call fcn.13f0d0dd0;lea r8, [];mov rdx, rax": 2,
                "mov r8, rbx;mov rdx, rax;lea rcx, [rbp - ];call fcn.13f0d0d10;mov r9, rdi": 2,
                "cmp qword [rbp - ], ;cmovae rbx, qword [rbp - ];add rbx, rcx;movsx edx, byte [rbx];mov r8, rdi": 2,
                "lea rax, [rbp - ];mov rcx, qword [rbp - ];mov rdx, qword [rbp - ];cmp rdx, ;cmovae rax, rcx": 2,
                "lea rcx, [];call fcn.13f0e91f0;int3;mov qword [rbp - ], rbx;lea rax, [rbp - ]": 3,
                "jmp ;mov eax, r12d;cmp rsi, rdi;setne al;test eax, eax": 2,
                "sub rbx, rax;mov rsi, qword [rbp - ];jmp ;or rbx, ;inc rbx": 2,
                "int3;mov qword [rbp - ], rbx;lea rax, [rbp - ];cmp r15, ;cmovae rax, r14": 1,
                "sub rax, qword [rbp + ];sar rax, 5;test rax, rax;je ;mov esi, r12d": 2,
                "mov word [rbp + ], r12w;xor r8d, r8d;lea rdx, [];lea rcx, [rbp + ];call fcn.13f0d43a0": 2,
                "call fcn.13f0d10f0;lea r8, [];mov rdx, rax;lea rcx, [rbp + ];call fcn.13f0d1070": 2,
                "jne ;lea rax, [rbp + ];mov qword [rsp + ], rax;mov qword [rbp + ], 7;mov qword [rbp + ], r12": 1,
                "mov qword [rbp + ], 7;mov qword [rbp + ], r12;mov word [rbp + ], r12w;or r9, ;xor r8d, r8d": 1,
                "lea rcx, [rbp + ];call fcn.13f0dae20;mov rax, qword [rbp + ];test rax, rax;je ": 1,
                "mov rdx, qword [rbp + ];cmp rdx, ;cmovae rax, rcx;sub rbx, rax;mov rax, qword [rbp + ]": 1,
                "lea rax, [rbp + ];cmp rdx, ;cmovae rax, rcx;mov byte [rbx + rax], 0;mov r9d, 1": 1,
                "mov dword [var_50h], ;xor r9d, r9d;xor r8d, r8d;lea edx, [rsi + 1];xor ecx, ecx": 1,
                "xor ecx, ecx;call qword [];mov qword [], rax;test rax, rax;jne ": 1,
                "mov dword [var_30h], esi;mov dword [var_28h], esi;mov dword [var_20h], ;lea r9, [var_50h];mov r8, rdi": 1,
                "mov byte [var_58h], 0;mov rcx, qword [var_78h];xor rcx, rsp;call fcn.13f10e4e0;lea r11, [var_80h]": 1,
                "lea rcx, [];call fcn.13f0cb580;xor eax, eax;add rsp, ;ret": 1,
                "mov qword [], ;mov qword [], rsi;mov byte [], 0;mov rdx, rbx;mov rcx, rdi": 4,
                "call fcn.13f0dd750;mov rdx, rbx;mov rcx, rax;call fcn.13f0dd870;cmp qword [rsp + ], ": 3,
                "cmp qword [rbp - ], ;jb ;sub rsp, ;mov qword [var_30h], ;mov ecx, 4": 1,
                "jne ;call fcn.13f10fb4c;mov rax, qword [rbp];mov qword [], rax;jmp ": 1,
                "call fcn.13f10fb4c;mov rdx, qword [];mov rcx, qword [rbp];call fcn.13f1103c8;comisd xmm0, xmmword []": 1,
                "mov byte [rsp + ], 0;cmp qword [rbp - ], ;jb ;mov rcx, qword [rsp + ];call fcn.13f10e55c": 1,
                "mov byte [rbp - ], 0;cmp qword [rsp + ], ;push rsi;push rdi;push r12": 1,
                "push r14;push r15;sub rsp, ;mov qword [var_c8h], ;mov qword [arg_428h], rbx": 1,
                "mov edx, 1;lea rcx, [];call qword [];mov ecx, 1;call qword []": 1,
                "sar rdx, 5;mov rax, rdx;shr rax, ;add rdx, rax;cmp rdx, ": 2,
                "mov rax, rdx;shr rax, ;add rdx, rax;cmp rdx, ;jae ": 2,
                "jae ;mov edx, ;call fcn.13f0cf190;xor edi, edi;mov qword [var_3d8h], rdi": 1,
                "mov edx, ;call fcn.13f0cf190;xor edi, edi;mov qword [var_3d8h], rdi;mov qword [var_3e0h], rdi": 1,
                "mov qword [var_3d8h], rdi;mov byte [var_3c8h], dil;or r15, ;cmp byte [rbx], dil;jne ": 1,
                "call fcn.13f0b34c0;lea rcx, [];call fcn.13f0c3a50;lea rdx, [var_348h];lea rcx, []": 1,
                "mov qword [], ;mov qword [], rdi;mov byte [], 0;mov rdx, rbx;mov rcx, rsi": 1,
                "call fcn.13f0b3f40;cmp qword [var_360h], ;jb ;mov rcx, qword [var_348h];call fcn.13f10e55c": 1,
                "mov qword [var_370h], rax;mov qword [var_378h], rax;mov qword [var_380h], rax;mov qword [var_388h], rax;mov qword [var_390h], rax": 1,
                "mov qword [var_3a8h], rax;lea rax, [var_370h];mov qword [var_30h], rax;mov qword [var_370h], rdi;mov qword [var_378h], rdi": 1,
                "mov qword [var_390h], rdi;movss xmm0, dword [];movss dword [var_3a8h], xmm0;mov rax, qword [var_370h];mov qword [var_300h], rax": 1,
                "mov rcx, qword [rbx];call fcn.13f10e55c;mov qword [rbx + ], ;mov qword [arg_8h], rcx;push rbx": 1,
                "push rdi;sub rsp, ;mov rdi, rdx;mov rbx, rcx;cmp rcx, rdx": 21,
                "mov dword [rbx + ], eax;movzx eax, byte [rdi + ];mov byte [rbx + ], al;mov eax, dword [rdi + ];mov dword [rbx + ], eax": 2,
                "or r9, ;xor r8d, r8d;call fcn.13f0b3390;lea rdx, [rdi + ];lea rcx, [rbx + ]": 6,
                "xor r8d, r8d;call fcn.13f0b3390;lea rdx, [rdi + ];lea rcx, [rbx + ];cmp rcx, rdx": 6,
                "mov byte [rbx + ], al;movzx eax, byte [rdi + ];mov byte [rbx + ], al;mov rax, qword [rdi + ];mov qword [rbx + ], rax": 2,
                "mov dword [rbx + ], eax;mov eax, dword [rdi + ];mov dword [rbx + ], eax;mov rax, rbx;mov rbx, qword [arg_30h]": 2,
                "cmp rcx, rdx;je ;cmp qword [rcx + ], ;jb ;mov rcx, qword [rcx]": 3,
                "movsxd rcx, dword [rax + 4];add rcx, rbx;mov edx, dword [rcx + ];and edx, ;cmp qword [rcx + ], 0": 6,
                "mov rax, qword [rbx];movsxd rcx, dword [rax + 4];test byte [rcx + rbx + ], 6;jne ;mov rcx, qword [rcx + rbx + ]": 5,
                "je ;cmp qword [rcx + ], 8;jb ;mov rcx, qword [rcx];call fcn.13f10e55c": 6,
                "xor eax, eax;mov qword [rbx + ], 7;mov rdx, rdi;mov qword [rbx + ], rax;mov rcx, rbx": 6,
                "mov word [rdx], ax;mov rdx, rcx;mov rcx, rbx;call fcn.13f0d4030;mov dword [var_20h], 1": 8,
                "int3;push rdi;sub rsp, ;mov qword [var_38h], ;mov qword [arg_60h], rbx": 13,
                "mov rdx, qword [rbx];mov rdi, r9;sub rdi, rdx;sar rdi, 5;cmp r8, rdi": 9,
                "int3;shl rdi, 5;mov rcx, rdi;call fcn.13f10eae8;test rax, rax": 11,
                "mov rbx, rcx;mov rax, qword [rcx + 8];cmp rdx, rax;jae ;mov rcx, qword [rcx]": 23,
                "cmp rax, qword [rbx + ];jne ;mov rcx, rbx;call fcn.13f0cee60;mov rcx, qword [rbx + 8]": 9,
                "push rdi;sub rsp, ;mov rsi, qword [rcx + 8];mov rbx, qword [rcx];mov rdi, rcx": 6,
                "mov rdi, rcx;cmp rbx, rsi;je ;mov qword [arg_30h], rbp;xor ebp, ebp": 6,
                "pop rdi;mov qword [arg_10h], rdx;push rbx;sub rsp, ;mov qword [var_28h], ": 1,
                "lea rbx, [rbx*4];mov r8, rbx;mov rcx, qword [rdi];call fcn.13f10e580;add rax, rbx": 5,
                "mov qword [arg_68h], rsi;mov rsi, rdx;mov rbx, rcx;mov qword [var_30h], rcx;xor eax, eax": 5,
                "call fcn.13f0cf080;and rdi, ;add rdi, qword [rbx];mov rcx, qword [rbx + 8];mov qword [arg_40h], rcx": 13,
                "mov qword [arg_40h], rcx;mov qword [arg_48h], rcx;test rcx, rcx;je ;mov qword [rcx + ], ": 25,
                "test rcx, rcx;je ;mov qword [rcx + ], ;mov qword [rcx + ], 0;mov byte [rcx], 0": 25,
                "mov qword [rcx + ], ;mov qword [rcx + ], 0;mov byte [rcx], 0;mov rdx, rdi;call fcn.13f0b3f40": 11,
                "cmp rax, qword [rbx + ];jne ;mov rcx, rbx;call fcn.13f0cf080;mov rcx, qword [rbx + 8]": 13,
                "ja ;sub rdi, rcx;cmp rax, qword [rbx + ];jne ;push rdi": 1,
                "mov rdx, rdi;call fcn.13f0b3390;jmp ;cmp rax, qword [rbx + ];jne ": 7,
                "call fcn.13f0b3390;add qword [rbx + 8], ;mov rbx, qword [arg_50h];add rsp, ;pop rdi": 7,
                "sub rsp, ;mov qword [var_20h], ;mov rbx, rdx;mov rcx, qword [];cmp rdx, rcx": 15,
                "call fcn.13f0cf2b0;mov rcx, qword [];mov r8, qword [];lea rdx, [rbx + rbx*2];shl rdx, 6": 7,
                "je ;call fcn.13f0bfca0;jmp ;cmp rcx, qword [];jne ": 6,
                "imul rcx;sar rdx, 5;mov rax, rdx;shr rax, ;add rax, rdx": 7,
                "shr rax, ;add rax, rdx;ret;int3;int3": 7,
                "add rax, rdx;ret;int3;int3;int3": 7,
                "test rcx, rcx;je ;call fcn.13f0cfda0;jmp ;cmp rcx, qword []": 8,
                "mov qword [rcx + ], rax;je ;cmp rbx, ;jbe ;lea rcx, []": 9,
                "mov rsi, qword [arg_58h];add rsp, ;pop rdi;ret;int3": 56,
                "mov dword [var_20h], r8d;lea rax, [];mov qword [rcx], rax;lea rax, [rcx + ];mov qword [arg_50h], rax": 9,
                "mov rax, qword [rdi];movsxd rdx, dword [rax + 4];lea r8d, [rdx - ];mov dword [rdx + rdi - 4], r8d;xor edx, edx": 9,
                "je ;mov rcx, rbx;call fcn.13f0b1960;lea rax, [];mov qword [rbx], rax": 8,
                "mov rcx, rbx;call fcn.13f0b1960;lea rax, [];mov qword [rbx], rax;mov rbx, qword [rbx + ]": 8,
                "lea rax, [];mov qword [rbx], rax;mov rbx, qword [rbx + ];test rbx, rbx;je ": 12,
                "mov rbx, qword [rbx + ];test rbx, rbx;je ;mov rcx, qword [rbx];test rcx, rcx": 20,
                "int3;int3;int3;mov rcx, qword [rcx + ];test rcx, rcx": 10,
                "cmp edx, ;push rdi;sub rsp, ;mov qword [var_28h], ;mov qword [arg_50h], rbx": 1,
                "cmp qword [rbx + ], 0;jne ;or eax, ;jmp ;mov r8, qword [rbx + ]": 3,
                "mov rdx, qword [rbx + ];call fcn.13f110634;or ebx, ;cmp eax, ebx;cmovne ebx, esi": 4,
                "lea rdx, [rbp + 7];cmp r9, ;cmovae rdx, r10;lea r8, [rbp + 7];cmovae r8, r10": 6,
                "mov qword [rsp + ], rax;mov qword [rsp + ], rdx;mov qword [rsp + ], r8;lea rax, [rbp - ];mov qword [rsp + ], rax": 5,
                "lea rax, [rbp - ];mov qword [rsp + ], rax;lea r9, [rbp];lea r8, [rbp - 1];lea rdx, [rbx + ]": 2,
                "mov r10, qword [rbp + 7];mov r9, qword [rbp + ];cmp r9, ;cmovae rax, r10;mov rdi, qword [rbp - 9]": 2,
                "jne ;movsx ecx, byte [rbp - 1];mov qword [arg_8h], rcx;push rbx;sub rsp, ": 1,
                "cmp eax, ebx;cmovne ebx, esi;jmp ;or ebx, ;cmp qword [rbp + ], ": 1,
                "xor r8d, r8d;lea rdx, [rdi + 8];call fcn.13f0d3230;mov rax, qword [rdi];movsxd rdx, dword [rax + 4]": 2,
                "mov qword [rsp + ], rbx;mov rcx, rbx;call fcn.13f0d06c0;mov rcx, qword [rbx];add rsp, ": 3,
                "mov rcx, qword [rbx];add rsp, ;pop rbx;jmp fcn.13f10e55c;int3": 12,
                "push rdi;sub rsp, ;mov qword [rsp + ], ;mov qword [rsp + ], rbx;mov qword [rsp + ], rsi": 13,
                "int3;int3;mov qword [arg_10h], rsi;push rdi;sub rsp, ": 3,
                "cmovne rax, rcx;mov rsi, qword [arg_38h];add rsp, ;pop rdi;ret": 4,
                "add rsp, ;pop rdi;ret;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h]": 5,
                "pop rdi;ret;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];or rax, ": 5,
                "cmp r8, r10;jae ;sub r10, r8;cmp r9, r10;ja ": 3,
                "mov rax, qword [rcx];jmp ;mov rax, rcx;lea rdi, [rax + r8*2];test r10, r10": 3,
                "jmp ;mov rax, rcx;lea rdi, [rax + r8*2];test r10, r10;je ": 3,
                "mov rcx, r10;mov rax, rdi;cmp word [rax], dx;je ;add rax, 2": 2,
                "jne ;cmp qword [rbx + ], 8;jb ;mov rbx, qword [rbx];mov rdi, qword [arg_10h]": 2,
                "mov rdi, qword [arg_10h];mov r14, qword [arg_18h];sub rax, rbx;sar rax, 1;mov rbx, qword [arg_20h]": 2,
                "cmovb edx, r14d;test edx, edx;je ;mov rdx, rax;mov rcx, r14": 2,
                "lea rdi, [rax + 2];sar rdx, 1;sub rcx, rdx;add r10, rcx;jmp ": 2,
                "mov rsi, qword [arg_38h];mov qword [rdi], rbp;mov qword [rdi + 8], rbp;mov qword [rdi + ], rbp;mov rbp, qword [arg_30h]": 10,
                "add rsp, ;pop rdi;ret;int3;push rbx": 76,
                "ret;int3;push rbx;sub rsp, ;xor eax, eax": 6,
                "mov qword [rbx], rax;mov qword [rbx + 8], rax;add rax, rdi;mov rdi, qword [arg_30h];mov qword [rbx + ], rax": 5,
                "sar rax, 2;cmp rax, 1;jae ;mov r10, qword [rcx];movabs r9, ": 5,
                "sub rdx, r10;inc r8;sar rdx, 2;mov rax, rdx;shr rax, 1": 5,
                "mov rsi, qword [rcx + 8];xor ebp, ebp;cmp rbx, rsi;je ;cmp qword [rbx + ], ": 6,
                "mov qword [arg_70h], rsi;mov rsi, rdx;xor edi, edi;mov qword [var_30h], rdi;test rdx, rdx": 12,
                "sar r15, 5;mov rax, r15;shr rax, ;add r15, rax;test rbx, rbx": 11,
                "mov rax, r11;sub rcx, r8;imul rcx;sar rdx, 5;mov rax, rdx": 5,
                "mov rax, rdx;shr rax, ;add rdx, rax;mov rax, rdx;shr rax, 1": 5,
                "je ;mov qword [arg_8h], rbx;push rdi;sub rsp, ;mov rdi, r8": 6,
                "add rdx, rcx;cmp rdx, 1;jae ;sub r8, qword [];mov rax, r9": 5,
                "int3;int3;int3;mov rax, rsp;mov qword [rax + ], r8": 9,
                "sub rcx, r14;movabs rdi, ;mov rax, rdi;imul rcx;mov r15, rdx": 6,
                "add rbx, rax;mov qword [var_40h], rbx;mov dword [var_30h], 0;lea rcx, [rbx + rbx*2];shl rcx, 6": 5,
                "mov rdx, qword [arg_160h];mov rcx, qword [];call fcn.13f0d2bf0;mov dword [var_30h], 2;lea r8, [rbx + 1]": 4,
                "mov rcx, qword [arg_160h];call fcn.13f0d2bf0;mov r8, qword [];mov rcx, r8;push rdi": 1,
                "sub rcx, r9;movabs rax, ;imul rcx;sar rdx, 5;mov rbx, rdx": 3,
                "mov rcx, qword [];call fcn.13f10e55c;lea rax, [rsi + rsi*2];shl rax, 6;add rax, rdi": 3,
                "mov rdx, qword [];add rdx, ;mov qword [], rdx;add rdx, ;lea r8, [var_50h]": 2,
                "call fcn.13f0cff50;lea rax, [];mov qword [rbx], rax;mov byte [rbx + ], 0;mov byte [rbx + ], 0": 2,
                "lea rcx, [rdi + 8];mov qword [rbx + ], rax;mov qword [rbx + ], rax;mov qword [rbx + ], rdi;mov qword [rbx + ], rdi": 1,
                "push rdi;sub rsp, ;mov rax, qword [rdx];mov rbx, rcx;mov rcx, rdx": 2,
                "test al, al;je ;mov qword [rbx + ], rdx;mov rbx, qword [arg_30h];add rsp, ": 2,
                "mov qword [rbx + ], rdi;lea rax, [rbx + 8];lea rcx, [rbx + ];mov qword [rbx + ], rax;mov qword [rbx + ], rcx": 9,
                "jne ;mov rdx, qword [rcx + ];mov r8, qword [rcx + ];mov qword [r9], rdx;mov rax, qword [rcx + ]": 7,
                "cdqe;test rax, rax;jne ;cmp rdi, rsi;jb ": 5,
                "test eax, eax;je ;mov rbx, qword [rbx];mov rax, qword [var_20h];jmp ": 5,
                "mov rcx, r14;call fcn.13f11a4c0;cdqe;test rax, rax;jne ": 4,
                "mov qword [rax], rcx;jmp ;mov r11, qword [var_28h];mov rax, r11;mov qword [r11], rbp": 4,
                "xor esi, esi;mov rdi, rax;test rax, rax;je ;xor eax, eax": 7,
                "xor eax, eax;mov cl, 1;mov qword [rdi], rax;call fcn.13f0e9390;mov qword [rdi], rax": 9,
                "call fcn.13f0d4180;test rdi, rdi;je ;cmp qword [r14 + ], 8;jb ": 3,
                "mov r14, qword [r14];cmp qword [rbx + ], 8;jb ;mov rcx, qword [rbx];jmp ": 3,
                "cmp rsi, rax;jb ;cmp rdx, 8;jb ;mov rcx, qword [rcx]": 6,
                "add rsp, ;pop r14;jmp fcn.13f0d0000;mov r8, qword [rbx + ];or rax, ": 3,
                "pop r14;ret;lea rcx, [];call fcn.13f0e91b8;int3": 7,
                "call fcn.13f0e913c;mov r8, rsi;mov rdx, qword [r15 + 8];mov rcx, qword [r15];call fcn.13f0d2c60": 2,
                "add rbx, ;cmp rbx, r12;jne ;mov rcx, qword [r15];call fcn.13f10e55c": 1,
                "sub rsp, ;mov qword [arg_28h], ;mov qword [arg_60h], rbx;mov r14, rdx;mov rdi, rcx": 1,
                "cmp rdx, rax;ja ;lea rcx, [rdx*4];call fcn.13f10eae8;mov rbx, rax": 1,
                "sar r8, 2;lea r8, [r8*4];mov rcx, rbx;call fcn.13f10e580;mov rcx, qword [rdi]": 1,
                "call fcn.13f10e580;mov rcx, qword [rdi];mov rsi, qword [rdi + 8];sub rsi, rcx;sar rsi, 2": 1,
                "mov qword [rdi + ], rax;lea rax, [rbx + rsi*4];mov qword [rdi + 8], rax;mov qword [rdi], rbx;mov rbx, qword [arg_60h]": 1,
                "add rdx, rcx;cmp rdx, r8;cmovb rdx, r8;mov rax, rdx;ret": 1,
                "jne ;mov r8d, ;mov edx, eax;mov rcx, r9;call fcn.13f0ea110": 2,
                "int3;int3;int3;mov rcx, qword [rcx];jmp fcn.13f10e55c": 2,
                "mov rax, qword [rcx];mov rdi, qword [rax];mov qword [rax], rax;mov rax, qword [rcx];mov qword [rax + 8], rax": 10,
                "call fcn.13f10e55c;mov qword [rbx + ], ;mov qword [rbx + ], rbp;mov byte [rbx], 0;mov rcx, rdi": 5,
                "mov qword [rbx + ], ;mov qword [rbx + ], rbp;mov byte [rbx], 0;mov rcx, rdi;call fcn.13f10e55c": 5,
                "mov rdi, rsi;cmp rsi, qword [r14];jne ;mov rbx, qword [arg_58h];mov rbp, qword [arg_60h]": 9,
                "mov rbx, qword [arg_58h];mov rbp, qword [arg_60h];add rsp, ;pop r14;pop rdi": 47,
                "sar rax, 3;cmp rax, r9;jae ;sub rsi, rcx;sar rsi, 3": 6,
                "shr rcx, 1;mov rax, r8;sub rax, rcx;cmp rax, rbx;jae ": 6,
                "lea rax, [rdi + rbx*8];mov qword [r15 + ], rax;lea rax, [rdi + r14*8];mov qword [r15 + 8], rax;mov qword [r15], rdi": 5,
                "sar rax, 3;mov rbx, qword [arg_c0h];mov rdx, rsi;mov rbx, qword [rbx];cmp rax, r9": 5,
                "cmp rax, r9;jae ;mov qword [var_48h], rbx;lea rdi, [r9*8];add r8, rdi": 4,
                "test rdx, rdx;je ;mov qword [rcx], rbx;lea rcx, [rcx + 8];inc rdi": 4,
                "je ;sub rsi, rdi;sub rdi, 8;mov rax, qword [rdi];mov qword [rsi + rdi], rax": 4,
                "add r8, 8;mov rdx, qword [arg_b0h];add rdx, r14;cmp r8, rdx;jne ": 3,
                "mov qword [arg_58h], rax;mov qword [var_28h], rax;mov qword [rax], rbx;lea rcx, [rax + 8];mov qword [arg_58h], rcx": 12,
                "mov qword [rcx], rdi;mov rbx, qword [arg_48h];add rsp, ;pop rdi;ret": 12,
                "mov qword [var_28h], ;mov qword [arg_58h], rbx;mov qword [arg_60h], rbp;mov r14, r8;mov rsi, rdx": 3,
                "mov ecx, ebx;jmp ;or rcx, ;inc rcx;cmp byte [rdx + rcx], 0": 2,
                "mov rbp, qword [rdi + ];cmp rbp, rdx;ja ;cmp qword [rdi + ], rdx;je ": 13,
                "mov rcx, rdi;call fcn.13f0b3d20;test al, al;je ;mov qword [rdi + ], rbp": 6,
                "call fcn.13f0b3d20;test al, al;je ;mov qword [rdi + ], rbp;cmp qword [rdi + ], ": 6,
                "mov rbx, rcx;mov dword [var_20h], 0;cmp byte [r8], 0;jne ;xor r8d, r8d": 3,
                "call fcn.13f0b2ca0;mov qword [rbx + ], ;mov qword [rbx + ], 0;mov byte [rbx], 0;mov rdx, rax": 3,
                "mov rax, qword [rdx + ];mov rdx, qword [rdx + ];sub rax, rdx;cmp rcx, rax;jbe ": 12,
                "mov byte [rbx], 0;mov rdx, rax;mov rcx, rbx;call fcn.13f0b3f40;jmp ": 4,
                "mov rax, r8;mov rbx, rcx;mov dword [var_20h], 0;cmp byte [rdx], 0;jne ": 5,
                "xor r9d, r9d;jmp ;or r9, ;inc r9;cmp byte [rdx + r9], 0": 5,
                "inc r9;cmp byte [rdx + r9], 0;jne ;mov qword [arg_8h], rcx;push rbx": 1,
                "jne ;mov qword [arg_8h], rcx;push rbx;sub rsp, ;mov qword [var_28h], ": 1,
                "sete al;add rsp, ;pop rbx;ret;int3": 7,
                "cmp word [r8 + rax*2], 0;jne ;lea rdx, [rax + rcx];mov rbp, qword [rdi + ];cmp rbp, rdx": 7,
                "mov r8, rbx;mov rdx, rsi;mov rcx, rdi;call fcn.13f0d0140;mov rax, rdi": 6,
                "jne ;mov r8d, edi;jmp ;or r8, ;inc r8": 7,
                "inc r8;cmp word [rax + r8*2], di;jne ;mov rdx, rax;mov rcx, r9": 7,
                "mov qword [rbx + ], rdi;mov word [rbx], di;mov rdx, rax;mov rcx, rbx;call fcn.13f0d3ef0": 29,
                "mov r11, rdx;push rbx;sub rsp, ;xor ebx, ebx;cmp byte [rdx], bl": 1,
                "mov rcx, r11;mov qword [arg_18h], r8;mov qword [arg_10h], rdx;push rbx;sub rsp, ": 1,
                "mov rbx, rcx;xor eax, eax;mov dword [var_20h], eax;mov qword [rcx + ], ;mov qword [rcx + ], rax": 9,
                "mov byte [rcx], al;mov dword [var_20h], 1;mov qword [arg_8h], rcx;push rsi;push rdi": 1,
                "mov rbp, qword [arg_50h];mov rsi, qword [arg_58h];add rsp, ;pop rdi;ret": 19,
                "mov byte [rcx], 0;or r9, ;xor r8d, r8d;call fcn.13f0b3390;lea rcx, [rdi + ]": 5,
                "je ;cmp rdi, rbx;je ;or r9, ;xor r8d, r8d": 6,
                "mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];mov rax, rdi;add rsp, ;pop rdi": 12,
                "mov rcx, rdi;mov word [rdi], bp;mov qword [arg_8h], rcx;push rdi;sub rsp, ": 1,
                "lea rcx, [var_4ch];call fcn.13f0e973c;mov rax, rbx;mov qword [arg_8h], rcx;push rdi": 1,
                "int3;push rbx;sub rsp, ;mov rax, qword [arg_60h];mov rbx, rcx": 4,
                "mov r8d, ecx;jmp ;sub r8, rdx;test rdx, rdx;mov qword [arg_8h], rbx": 1,
                "test rdx, rdx;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi;sub rsp, ": 1,
                "call fcn.13f10eae8;mov rdi, rax;mov qword [arg_b0h], rax;test rax, rax;je ": 4,
                "mov rdi, rax;mov qword [arg_b0h], rax;test rax, rax;je ;mov rax, qword [r14]": 4,
                "je ;mov rax, qword [r14];test rax, rax;jne ;lea rdx, []": 136,
                "jbe ;test rdi, rdi;je ;mov qword [arg_30h], rbp;lea rbp, [rcx + rdi]": 4,
                "jb ;mov rax, qword [rbx];jmp ;mov rax, rbx;mov r8, qword [rbx + ]": 12,
                "add rsp, ;pop rdi;ret;mov rcx, qword [rbx + ];or rax, ": 3,
                "pop r12;pop rsi;ret;mov rcx, qword [rbx + ];cmp rcx, rdx": 3,
                "mov rbp, qword [arg_70h];mov qword [arg_60h], r14;mov r14, rcx;sub r14, rdx;cmp r14, rsi": 3,
                "test r14, r14;je ;add rdx, rcx;lea rcx, [rax + r12];mov r8, r14": 2,
                "add rdx, rsi;call fcn.13f10e580;mov qword [arg_58h], rdi;test rbp, rbp;jne ": 2,
                "mov r8, qword [rbx + ];mov rdi, r8;sub rdi, rsi;add rdi, rbp;cmp rdi, ": 2,
                "add rdx, rsi;call fcn.13f10e580;cmp qword [rbx + ], ;jb ;mov rax, qword [rbx]": 2,
                "mov r14, qword [arg_60h];mov rax, rbx;mov rbx, qword [arg_68h];add rsp, ;pop r15": 2,
                "mov rax, rbx;mov r8, qword [rbx + ];test r8, r8;je ;lea rcx, [rax + rdi*2]": 2,
                "jb ;mov rsi, qword [rsi];cmp qword [rbx + ], 8;jb ;mov rcx, qword [rbx]": 14,
                "mov rax, qword [rbx];jmp ;mov rax, rbx;xor ecx, ecx;mov word [rax + rbp*2], cx": 2,
                "mov rax, rbx;xor ecx, ecx;mov word [rax + rbp*2], cx;mov rbp, qword [arg_30h];mov rsi, qword [arg_40h]": 2,
                "call fcn.13f10e4e0;mov rbx, qword [arg_68h];add rsp, ;pop rdi;ret": 7,
                "push r14;push r15;sub rsp, ;mov qword [var_50h], ;mov rax, qword []": 3,
                "movzx eax, byte [rcx + rdx];xor rsi, rax;mov qword [var_20h], rsi;imul rsi, r9;mov qword [var_20h], rsi": 3,
                "add rsi, rax;mov qword [var_40h], rsi;mov rbx, qword [r12];shl rsi, 4;mov rax, qword [r12 + ]": 3,
                "mov qword [var_58h], rbx;cmp rbx, qword [rax + rsi];je ;mov rbx, qword [rbx + 8];lea rdx, [rbx + ]": 3,
                "je ;mov rbx, qword [rbx + 8];lea rdx, [rbx + ];mov r15, qword [rdx + ];cmp qword [rdx + ], ": 3,
                "mov rdi, qword [r14 + ];cmp qword [r14 + ], ;jb ;mov rcx, qword [r14];jmp ": 3,
                "call fcn.13f11a4c0;cdqe;mov qword [var_28h], rax;test rax, rax;jne ": 3,
                "test rax, rax;jne ;cmp rdi, r15;jae ;or eax, ": 3,
                "je ;mov rbx, qword [rbx];jmp ;mov r8, qword [arg_c8h];lea rdx, [var_28h]": 2,
                "mov qword [rdx + rsi + 8], rcx;mov rcx, r12;call fcn.13f0d2700;mov qword [r13], rdi;mov byte [r13 + 8], 1": 2,
                "lea rdi, [r8 + 8];mov qword [var_20h], r9;push rbx;push rsi;push rdi": 1,
                "je ;mov qword [arg_30h], rbx;mov qword [arg_38h], rdi;lea rdi, [r8 + 8];lea rbx, [rcx + 8]": 2,
                "mov eax, dword [rbx + ];lea rdx, [rbx + ];lea rcx, [rdi + ];mov dword [rdi + ], eax;cmp rcx, rdx": 7,
                "add rdi, ;cmp rax, rbp;jne ;mov rdi, qword [arg_38h];mov rbx, qword [arg_30h]": 2,
                "pop rsi;ret;int3;mov qword [arg_18h], rbp;push rsi": 1,
                "call fcn.13f0b3390;movzx eax, byte [rbx + ];add rbx, ;add rsi, ;mov byte [rdi + ], al": 2,
                "mov qword [var_28h], r14;mov qword [var_20h], r15;lea r15, [r8 + 8];mov rdi, r8;mov r13, rdx": 3,
                "mov r13, rdx;lea rsi, [r8 + ];lea r12, [r8 + ];lea rbp, [r8 + ];lea r14, [r8 + ]": 3,
                "mov rdx, r15;call fcn.13f0b3390;cmp rbx, rsi;je ;or r9, ": 3,
                "mov rdx, rsi;mov rcx, rbx;call fcn.13f0b3390;mov eax, dword [rdi + ];lea rcx, [rbx + ]": 3,
                "movzx eax, byte [rdi + ];add rbx, ;mov byte [rbx - ], al;mov eax, dword [rdi + ];mov dword [rbx - ], eax": 3,
                "push rsi;push rdi;sub rsp, ;mov qword [var_20h], ;mov rsi, r8": 4,
                "mov qword [arg_50h], rbx;jmp ;add rsp, ;pop rdi;pop rsi": 3,
                "sub rsp, ;mov qword [var_20h], ;test rdx, rdx;je ;test rcx, rcx": 4,
                "mov rax, qword [rcx];mov qword [rcx + 8], rax;jmp ;mov rcx, r8;sub rcx, r10": 5,
                "mov rcx, r8;sub rcx, r10;sar rcx, 2;mov r9, qword [rsi];mov rdx, qword [rsi + 8]": 5,
                "mov rcx, qword [r14 + 8];sub rcx, qword [r14];sar rcx, 2;mov rax, qword [rsi];lea rcx, [rax + rcx*4]": 4,
                "mov rcx, r9;call fcn.13f10e580;mov rax, qword [r14 + 8];sub rax, rdi;sar rax, 2": 4,
                "call fcn.13f10e580;mov rax, qword [r14 + 8];sub rax, rdi;sar rax, 2;lea rbx, [rax*4]": 4,
                "mov rax, qword [r14 + 8];sub rax, rdi;sar rax, 2;lea rbx, [rax*4];mov r8, rbx": 4,
                "lea rbx, [rax*4];mov r8, rbx;mov rdx, rdi;mov rcx, qword [rsi + 8];call fcn.13f10e580": 4,
                "call fcn.13f10e55c;mov rdx, qword [r14 + 8];sub rdx, qword [r14];sar rdx, 2;mov rcx, rsi": 4,
                "sub rdx, qword [r14];sar rdx, 2;mov rcx, rsi;call fcn.13f0cef70;test al, al": 4,
                "int3;int3;mov qword [arg_18h], rbx;push rsi;sub rsp, ": 10,
                "mov qword [arg_18h], rbx;push rsi;sub rsp, ;mov rax, qword [rcx + 8];mov rbx, qword [rcx + ]": 12,
                "lea rax, [var_30h];lea r9, [rbx + rbx];lea rdx, [var_38h];mov qword [rcx + 8], r8;mov qword [var_20h], rax": 11,
                "lea rax, [rbx - 1];mov qword [rsi + ], rax;mov qword [rsi + ], rbx;cmp qword [rdi], rdi;je ": 11,
                "mov rcx, rsi;mov rbx, qword [rbx];mov r9, rbx;lea r8, [rbx + ];call fcn.13f0d1e20": 4,
                "mov qword [arg_18h], r8;push rbx;push rsi;push rdi;sub rsp, ": 16,
                "mov rax, qword [];xor rax, rsp;mov qword [var_30h], rax;mov rbx, r8;mov rsi, rdx": 5,
                "mov qword [var_28h], rdi;cmp qword [rdi + ], ;jb ;mov rcx, qword [rdi + ];call fcn.13f10e55c": 5,
                "mov qword [var_30h], rcx;sub rdi, rdx;mov eax, 0;mov qword [rcx], rax;push rsi": 1,
                "xor r14d, r14d;mov qword [rbx + ], r14;mov qword [rbx + ], r14;mov qword [rbx + ], ;mov qword [rbx + ], r14": 4,
                "mov rbx, r8;mov rsi, rdx;mov rdi, rcx;mov qword [arg_68h], rbx;xor r14d, r14d": 10,
                "jb ;mov rax, qword [rbx];mov qword [arg_18h], r8;push rbx;push rsi": 1,
                "ret;int3;mov qword [var_20h], r9;mov qword [arg_18h], r8;push rsi": 4,
                "mov qword [var_28h], rbx;mov qword [var_30h], rbx;mov rax, qword [rdi];mov qword [rbx], rax;mov qword [rdi], r14": 10,
                "mov qword [rbx], rax;mov qword [rdi], r14;mov rax, qword [rdi + ];mov qword [rbx + ], rax;mov rax, qword [rdi + ]": 10,
                "mov qword [rbx + ], rax;mov qword [rdi + ], ;mov qword [rdi + ], r14;cmp qword [rdi + ], ;jb ": 5,
                "ret;int3;int3;movsxd rax, dword [rcx - 4];sub rcx, rax": 10,
                "int3;int3;movsxd rax, dword [rcx - 4];sub rcx, rax;jmp ": 10,
                "mov rax, qword [rcx + ];mov rbx, r8;cmp rax, rdx;jb ;sub rax, rdx": 6,
                "mov rbx, qword [rcx + ];jb ;mov rcx, qword [rcx];cmp rbx, rdi;mov r8, rdi": 5,
                "int3;int3;int3;int3;mov eax, 1": 4,
                "mov qword [rcx + r10 - ], rax;mov rax, qword [r10 - ];movsxd r8, dword [rax + 4];lea r9d, [r8 - ];mov dword [r8 + r10 - ], r9d": 9,
                "lea rax, [];mov qword [r10], rax;lea rax, [];mov qword [r10], rax;mov rcx, r10": 9,
                "mov qword [rcx + ], rsi;call fcn.13f0b3a80;lea ecx, [rsi + 8];call fcn.13f10eae8;mov rdi, rax": 3,
                "call fcn.13f10eae8;mov rdi, rax;test rax, rax;je ;xor eax, eax": 2,
                "pop rdi;ret;mov qword [rbx + ], rsi;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h]": 2,
                "sub rsp, ;mov qword [var_28h], ;mov r10, rdx;mov rbx, rcx;mov dword [var_20h], 0": 3,
                "lea rax, [];mov qword [rcx + rbx], rax;mov rax, qword [rbx];movsxd rcx, dword [rax + 4];lea edx, [rcx - ]": 5,
                "mov rcx, rbx;call fcn.13f10e55c;mov rsi, qword [rsp + ];mov rax, rbx;mov rbx, qword [rsp + ]": 3,
                "or eax, ;ret;int3;int3;int3": 8,
                "push r14;sub rsp, ;xor ebp, ebp;mov rdi, r8;mov rsi, rdx": 7,
                "mov rcx, r14;call qword [rdx + ];cmp eax, ;je ;mov byte [rsi], al": 3,
                "mov r8, rbx;mov rdx, rsi;mov rcx, qword [rcx];call fcn.13f10e580;mov rax, qword [r14 + ]": 3,
                "mov rbx, rcx;call qword [rax + ];cmp eax, ;jne ;or eax, eax": 1,
                "mov qword [var_30h], rcx;xor ebx, ebx;mov dword [var_20h], ebx;mov r9, rdx;lea r8, []": 2,
                "inc rbx;cmp word [rax + rbx*2], 0;jne ;mov r8, rbx;lea rdx, [var_40h]": 4,
                "cmp word [rax + rbx*2], 0;jne ;mov r8, rbx;lea rdx, [var_40h];mov rcx, rdi": 4,
                "mov qword [r11 + ], rbx;mov rax, qword [];xor rax, rsp;mov qword [var_80h], rax;mov rdi, rcx": 18,
                "lea edx, [rbx + ];lea rcx, [r11 - ];call fcn.13f10fbac;mov qword [rdi + ], ;mov qword [rdi + ], rbx": 18,
                "call fcn.13f10fbac;mov qword [rdi + ], ;mov qword [rdi + ], rbx;mov byte [rdi], bl;cmp byte [var_40h], bl": 18,
                "or rbx, ;inc rbx;cmp byte [rax + rbx], 0;jne ;mov r8, rbx": 18,
                "lea rdx, [var_40h];mov rcx, rdi;call fcn.13f0b34c0;mov dword [var_20h], 1;mov rax, rdi": 18,
                "mov rcx, qword [var_80h];xor rcx, rsp;call fcn.13f10e4e0;mov rbx, qword [arg_b0h];add rsp, ": 18,
                "mov byte [rcx], 0;jmp ;mov rcx, rbx;cmp rax, ;jb ": 4,
                "je ;call fcn.13f10fca8;cmp dword [rax], ;je ;cmp esi, ": 5,
                "call fcn.13f10fca8;cmp dword [rax], ;je ;cmp esi, ;mov eax, edi": 5,
                "sub rsp, ;mov qword [r11 - ], ;mov qword [r11 + ], rbx;mov rax, qword [];or r9, ": 1,
                "je ;mov rax, qword [rdx];mov qword [rcx], rax;mov qword [rdx], rsi;mov rax, qword [rbx + ]": 7,
                "mov rax, rbx;push rbx;sub rsp, ;mov rbx, rcx;cmp rcx, rdx": 1,
                "sub rdi, r8;lea rcx, [rax + rdx*2];mov r8, rdi;sub r8, rdx;je ": 7,
                "lea rdx, [rcx + r9*2];add r8, r8;call fcn.13f10e580;cmp qword [rbx + ], 8;mov qword [rbx + ], rdi": 7,
                "xor eax, eax;mov word [rcx + rdi*2], ax;mov rax, rbx;mov rbx, qword [arg_30h];add rsp, ": 5,
                "jmp ;mov rcx, rbx;xor eax, eax;mov word [rcx + rdi*2], ax;mov rbp, qword [arg_38h]": 4,
                "push rdi;push r14;push r15;sub rsp, ;mov qword [var_28h], ": 4,
                "mul rdi;shr rdx, 1;cmp rcx, rdx;jbe ;mov rax, r9": 6,
                "call fcn.13f0e913c;mov qword [var_20h], r14;jmp ;xor r15d, r15d;mov rbx, qword [rsp + ]": 3,
                "jmp ;xor r15d, r15d;mov rbx, qword [rsp + ];mov rsi, qword [rsp + ];mov rdi, qword [rsp + ]": 3,
                "ret;mov word [rbx], ax;mov rcx, rbx;mov rax, rbx;mov rbx, qword [arg_30h]": 3,
                "je ;cmp qword [rcx + ], 8;jb ;mov qword [arg_30h], rsi;mov rsi, qword [rcx]": 3,
                "mov rcx, rsi;call fcn.13f10e55c;mov rsi, qword [arg_30h];mov qword [rbx + ], 7;mov qword [rbx + ], rdi": 3,
                "int3;push rbx;sub rsp, ;cmp qword [rcx + ], 8;mov rbx, rcx": 3,
                "int3;mov qword [rsp + ], rdx;push rdi;sub rsp, ;mov qword [rsp + ], ": 4,
                "mov rdi, qword [];xor esi, esi;xor r9d, r9d;xor r8d, r8d;xor ecx, ecx": 4,
                "mov qword [rdi + ], ;mov qword [rdi + ], rsi;mov byte [rdi + ], sil;mov byte [rdi + ], sil;mov dword [rdi + ], ": 4,
                "mov dword [rdi + ], 1;mov byte [rdi + ], 1;lea rcx, [rdi + ];mov qword [rcx + ], ;mov qword [rcx + ], rsi": 4,
                "lea rdx, [];call fcn.13f0b34c0;mov dword [rdi + ], ;mov qword [rdi + ], ;mov word [rdi + ], si": 4,
                "mov word [rdi + ], si;lea rcx, [rdi + ];mov qword [rcx + ], 7;mov qword [rcx + ], rsi;mov word [rcx], si": 4,
                "lea r8d, [rsi + ];lea rdx, [];call fcn.13f0b34c0;lea rcx, [rdi + ];mov qword [rcx + ], 7": 4,
                "mov dword [rdi + ], esi;lea rcx, [rdi + ];mov qword [rcx + ], ;mov qword [rcx + ], rsi;mov byte [rcx], sil": 3,
                "call fcn.13f10e55c;mov qword [rbx + ], ;mov qword [rbx + ], rdi;mov byte [rbx + ], 0;cmp qword [rbx + ], 8": 3,
                "call fcn.13f0ceef0;lea rcx, [rbx + ];call fcn.13f0ceef0;cmp qword [rbx + ], 8;jb ": 3,
                "call fcn.13f0ceef0;cmp qword [rbx + ], 8;jb ;mov rcx, qword [rbx];call fcn.13f10e55c": 3,
                "int3;mov qword [arg_8h], rbx;mov qword [arg_10h], rbp;mov qword [arg_18h], rsi;mov qword [arg_20h], rdi": 7,
                "mov qword [arg_8h], rbx;mov qword [arg_10h], rbp;mov qword [arg_18h], rsi;mov qword [arg_20h], rdi;push r12": 10,
                "test ebx, ebx;je ;mov r8, rbx;mov rdx, rdi;mov rcx, r15": 4,
                "sub ebx, edi;cmp ebx, eax;cmova ebx, eax;test ebx, ebx;je ": 2,
                "add rdi, rbx;mov rbx, qword [arg_40h];mov qword [rbp + ], r15;mov rbp, qword [arg_48h];mov qword [rsi + ], rdi": 2,
                "mov rbx, qword [arg_40h];mov qword [rbp + ], r15;mov rbp, qword [arg_48h];mov qword [rsi + ], rdi;mov rsi, qword [arg_50h]": 2,
                "mov byte [rax + ], bpl;mov byte [rax + ], sil;mov qword [rax + ], rdi;mov qword [rax + ], rbx;mov rbx, qword [arg_30h]": 3,
                "mov r15d, dword [rcx + ];mov edi, dword [rcx + ];mov r12, rdx;mov rbx, rcx;cmp r9, qword [rcx + ]": 3,
                "cmp ecx, 9;ja case.default.;mov r14d, 7;lea r11, [];movsxd rcx, ecx": 3,
                "mov dword [r13], 1;mov dword [r13 + ], ecx;mov rcx, qword [r13 + ];mov qword [r13 + 8], rcx;mov r10d, dword [r13 + ]": 3,
                "jmp ;test cl, ;je ;mov dword [r13], r14d;jmp ": 2,
                "shr r15d, cl;sub edi, r10d;mov ecx, dword [r13 + ];mov r14, r9;sub r14, rcx": 1,
                "jb ;cmp dword [r13 + 4], 0;je ;test eax, eax;jne ": 1,
                "mov rcx, qword [rcx + ];mov ebp, r8d;lea r8d, [rdx + ];call qword [rdi + ];mov rbx, rax": 2,
                "mov rcx, qword [rdi + ];test rax, rax;jne ;mov rdx, rbx;call qword [rdi + ]": 2,
                "jmp ;mov r8d, ebp;mov edx, 1;call qword [rdi + ];mov rcx, rax": 2,
                "mov edx, 1;call qword [rdi + ];mov rcx, rax;mov qword [rbx + ], rax;test rax, rax": 2,
                "mov qword [rbx + ], rcx;mov dword [rbx], eax;mov qword [rbx + ], rax;test rsi, rsi;je ": 2,
                "mov ebp, dword [rdx + 8];mov r15d, dword [rcx + ];mov ebx, dword [rcx + ];mov edi, r8d;mov r13, rdx": 3,
                "mov r13, rdx;mov r12, rcx;mov qword [var_50h], r9;cmp r9, qword [rcx + ];jae ": 3,
                "ja case.default.;lea r10, [];xor esi, esi;cdqe;mov ecx, dword [r10 + rax*4 + ]": 3,
                "jmp ;add ebx, ;shr r15d, 3;mov dword [r12], 1;mov ecx, ebx": 3,
                "sub ebx, ecx;jmp ;cmp ebx, ;jae ;test ebp, ebp": 3,
                "not eax;shr eax, ;cmp eax, ecx;jne ;mov dword [r12 + 8], ecx": 3,
                "jne ;mov rax, qword [r12 + ];mov rcx, qword [r12 + ];cmp rax, rcx;je ": 2,
                "test edx, edx;jne ;mov r8d, edi;mov rdx, r13;mov rcx, r12": 2,
                "mov qword [r12 + ], r9;call fcn.13f0d4ba0;mov r9, qword [r12 + ];mov rdx, qword [r12 + ];mov r8d, eax": 2,
                "sub ecx, r9d;dec ecx;jmp ;mov ecx, dword [r12 + ];sub ecx, r9d": 2,
                "jne ;mov rax, qword [r12 + ];cmp rdx, rax;je ;mov r9, rax": 2,
                "je ;mov dword [arg_f0h], esi;mov esi, dword [r12 + 8];mov rcx, r9;cmp esi, ebp": 1,
                "cmova esi, edx;mov rdx, r14;mov r8d, esi;mov edi, esi;call fcn.13f10e580": 1,
                "sub dword [r12 + 8], esi;mov qword [var_50h], r9;mov dword [arg_e0h], edx;jne ;mov eax, dword [r12 + ]": 1,
                "xor esi, esi;lea r10, [];mov eax, dword [r12];cmp eax, 9;jbe ": 1,
                "mov qword [r12 + ], r9;mov rdx, r13;mov rcx, r12;mov rsi, qword [var_98h];add rsp, ": 1,
                "call qword [rdi + ];mov rdx, qword [rbx + ];mov rcx, qword [rdi + ];call qword [rdi + ];mov rcx, qword [rdi + ]": 1,
                "mov rbx, qword [arg_30h];xor eax, eax;add rsp, ;pop rdi;ret": 1,
                "mov qword [rbp + ], rax;mov rax, qword [rbp + ];mov rbx, qword [rbp + ];xor r15d, r15d;mov qword [var_38h], r9": 2,
                "mov qword [var_40h], rax;mov rax, qword [rbp + ];mov qword [var_50h], rax;mov r11d, edx;mov r10, rcx": 2,
                "mov r11d, edx;mov r10, rcx;mov qword [var_48h], r8;mov qword [var_30h], r9;mov qword [rbp - ], r15": 2,
                "mov qword [rbp - ], r15;mov qword [rbp - ], r15;mov qword [rbp - ], r15;mov qword [rbp - 8], r15;mov qword [rbp], r15": 2,
                "sub r8d, eax;mov dword [var_20h_2], r8d;jns ;mov eax, ;jmp ": 2,
                "lea r10, [r10 + 4];test eax, eax;je ;lea rcx, [rbp + ];lea rcx, [rcx + rax*4]": 2,
                "inc eax;mov dword [rcx], eax;inc edx;cmp edx, r11d;jb ": 2,
                "mov r10d, r15d;cmp r13d, ecx;jg ;mov rdi, r14;movsxd rax, r13d": 2,
                "mov dword [var_ch], r8d;cmp r13d, eax;jle ;mov r15d, esi;neg r15d": 2,
                "mov ecx, edx;shl eax, cl;cmp eax, r8d;jbe ;mov r8, qword [var_28h]": 2,
                "shl eax, cl;cmp eax, r8d;jbe ;mov r8, qword [var_28h];or ecx, ": 2,
                "cmp eax, r8d;jbe ;mov r8, qword [var_28h];or ecx, ;sub ecx, r12d": 2,
                "jb ;mov r8, qword [var_50h];mov ecx, edx;mov r10d, 1;mov eax, dword [r8]": 2,
                "mov r9, qword [var_40h];mov dword [r8], ecx;lea r9, [r9 + rax*8];mov qword [rsp + rdi*8 + ], r9;test r14d, r14d": 2,
                "je ;mov byte [rsp], dl;mov rdx, qword [rsp + rdi*8 + ];mov r8d, ebx;lea ecx, [r11 + rsi]": 2,
                "mov r8d, ebx;lea ecx, [r11 + rsi];mov rax, r9;mov byte [var_1h], sil;sub rax, rdx": 2,
                "push rdi;push r14;push r15;sub rsp, ;mov rbx, qword [arg_a0h]": 1,
                "mov r15, rcx;mov rcx, qword [rbx + ];mov r14, r8;lea r8d, [rdx - ];mov rdi, r9": 1,
                "cmp dword [rbp], 0;jne ;lea rax, [];mov edi, ;mov qword [rbx + ], rax": 1,
                "mov qword [arg_20h], r9;push rsi;push rdi;push r12;push r13": 2,
                "and rdx, rcx;mov ecx, dword [rbx + 4];add rdx, rcx;movzx ecx, byte [rbx + rdx*8 + 1];lea rbx, [rbx + rdx*8]": 2,
                "movzx ebx, byte [rsi + rdx*8];lea rsi, [rsi + rdx*8];shr r10d, cl;sub eax, ecx;test bl, ": 4,
                "movzx ecx, byte [rdx];add r9, 2;add rdx, 2;mov byte [r9 - 2], cl;movzx ecx, byte [rdx - 1]": 3,
                "shr ecx, 3;cmp ecx, edx;cmovb edx, ecx;mov ecx, edx;sub r11, rcx": 1,
                "mov qword [rsp], rbx;not ecx;lea rbx, [];cmp r10d, 8;jb ": 1,
                "movzx ecx, byte [r9 - 6];mov r8d, dword [rbx + rax*4];xor r8d, edx;mov eax, r8d;shr r8d, 8": 3,
                "jne ;mov rbx, qword [rsp];not ecx;mov eax, ecx;add rsp, 8": 3,
                "add ecx, r9d;add r9d, eax;movzx eax, byte [r10 - 6];add ecx, r9d;add r9d, eax": 1,
                "add ecx, r9d;dec r8;jne ;test edx, edx;je ": 1,
                "imul eax, edx, ;add ecx, eax;test r11d, r11d;jne ;shl ecx, ": 1,
                "int3;int3;int3;mov rcx, rdx;jmp fcn.13f10ef88": 1,
                "lea r12, [];lea r13, [];cdqe;mov ecx, dword [rbp + rax*4 + ];add rcx, rbp": 4,
                "je ;inc dword [rbx + ];xor edi, edi;dec eax;mov dword [rbx + 8], eax": 8,
                "mov eax, dword [rcx + 4];shr eax, 4;add eax, 8;cmp eax, dword [rcx + ];jbe ": 4,
                "jmp ;mov dword [rcx], 1;mov eax, dword [rbx + 8];test eax, eax;je ": 4,
                "mov eax, ;shl ecx, 8;add ecx, r9d;mul ecx;mov eax, ecx": 4,
                "movzx ecx, byte [rax];shl ecx, ;add dword [rdx + 8], ecx;mov rax, qword [rbx + ];inc qword [rbx]": 4,
                "jbe ;mov eax, ;jmp ;mov rax, qword [rbx + ];mov dword [rax], 2": 1,
                "sub rsp, ;xor r14d, r14d;mov rsi, r9;mov edx, ;mov dword [r9], r14d": 1,
                "jne ;mov dword [rsi], ;xor eax, eax;mov rbp, qword [arg_60h];mov rsi, qword [arg_68h]": 1,
                "xor rax, rsp;mov qword [var_38h], rax;mov edi, edx;mov rsi, r9;mov rbp, rdx": 2,
                "mov rbx, qword [var_48h];mov eax, edi;xor edx, edx;div rbp;mov rcx, qword [var_38h]": 2,
                "mov qword [var_20h], 0;call qword [];test eax, eax;jne ;mov byte [rbx + ], dil": 3,
                "sub edi, esi;mov rdx, rsi;lea rcx, [nNumberOfBytesToRead];mov r8d, edi;add rdx, qword [rbx + ]": 3,
                "sub rsp, ;mov rsi, rdx;lea rdx, [arg_40h];mov rdi, rcx;call fcn.13f0d74a0": 4,
                "call fcn.13f0d74a0;mov r9d, dword [arg_40h];mov r8d, eax;shl r9d, ;add ebx, r9d": 4,
                "lea rdx, [arg_40h];mov rcx, rdi;call fcn.13f0d74a0;mov r8d, eax;test eax, eax": 4,
                "test eax, eax;jne ;mov eax, dword [arg_40h];shl eax, ;add eax, ebx": 4,
                "mov dword [rsi], eax;mov eax, r8d;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];add rsp, ": 4,
                "test rcx, rcx;jne ;lea eax, [rcx - ];add rsp, ;pop r15": 6,
                "mov qword [arg_a0h], rbx;or ebx, ;add edx, dword [rcx + ];mov rcx, qword [rcx];mov qword [arg_a8h], r12": 4,
                "call fcn.13f0d74a0;test eax, eax;jne ;mov eax, dword [arg_60h];shl eax, 8": 17,
                "shl eax, 8;add eax, r12d;mov dword [var_48h], eax;jmp ;test eax, eax": 3,
                "mov dword [var_48h], eax;jmp ;test eax, eax;mov eax, ;mov dword [var_48h], 0": 3,
                "test eax, eax;mov r14d, ;mov dword [var_44h], 0;cmovne ebx, r14d;mov rcx, qword [rdi]": 2,
                "mov ecx, edx;cmovne ebx, r14d;shr ecx, ;mov eax, ecx;and eax, ": 2,
                "shr ecx, ;mov eax, ecx;and eax, ;mov dword [var_ch], eax;mov eax, ecx": 2,
                "mov eax, edx;and edx, ;add edx, edx;shr eax, 5;mov dword [var_18h], edx": 2,
                "lea rdx, [var_38h];cmovne ebx, r14d;call fcn.13f0d7580;mov rcx, qword [rdi];test eax, eax": 2,
                "lea eax, [rcx - ];add rsp, ;pop rdi;ret;mov eax, dword [rcx + ]": 1,
                "mov dword [rdi + ], ebx;mov rbx, qword [arg_60h];add rsp, ;pop rdi;ret": 1,
                "mov qword [arg_20h], r9;mov qword [arg_18h], r8;mov qword [arg_10h], rdx;push rbp;push rsi": 2,
                "mov r10d, dword [rcx + ];xor r14d, r14d;mov rdi, rcx;add r10d, dword [rcx + ];mov rcx, qword [rcx]": 2,
                "mov edx, eax;test eax, eax;jne ;lea rdx, [arg_28h];mov rcx, r12": 2,
                "test r15b, 8;cmove ebx, r13d;mov rcx, qword [rdi];lea rdx, [arg_28h];call fcn.13f0d7580": 4,
                "add dword [rax], r15d;mov rcx, r12;call fcn.13f0d74a0;mov r13d, dword [arg_28h];test eax, eax": 2,
                "mov r13d, dword [arg_28h];test eax, eax;jne ;lea rdx, [arg_28h];mov rcx, r12": 2,
                "cmovne ebx, esi;mov rax, qword [arg_38h];mov edx, dword [rdi + ];mov r13, qword [var_30h];mov r12, qword [var_38h]": 2,
                "int3;push rsi;push rdi;sub rsp, ;mov rsi, rdx": 1,
                "mov rsi, rdx;mov rdi, rcx;test rcx, rcx;jne ;mov eax, ": 2,
                "je ;call fcn.13f0d8340;lea r9, [arg_50h];lea r8, [arg_40h];lea rdx, [arg_58h]": 2,
                "mov ecx, ;mov qword [arg_48h], rbx;call fcn.13f110eb4;mov rbx, rax;test rax, rax": 1,
                "mov dword [rbx + ], eax;movzx eax, byte [rdi + ];and al, 1;mov byte [rbx + ], al;mov eax, dword [rdi + ]": 1,
                "test al, 1;je ;movzx eax, byte [rdi + ];jmp ;movzx eax, byte [rdi + ]": 1,
                "xor eax, eax;mov dword [rbx + ], ecx;mov qword [rdi + ], rbx;mov rbx, qword [arg_48h];add rsp, ": 1,
                "mov rbx, qword [rcx + ];test rbx, rbx;jne ;lea eax, [rbx - ];mov rbx, qword [arg_50h]": 2,
                "pop r15;pop r14;pop r12;ret;cmp qword [rbx], r12": 2,
                "add edx, dword [rbx + ];cmp byte [rcx], 0;je ;cmp byte [rcx + 1], 0;je ": 2,
                "je ;mov r9d, dword [rbx + ];mov edx, dword [rbx + ];push r12;push r14": 1,
                "shr edx, 8;and eax, ;or eax, 2;mov r8d, eax;xor r8d, 1": 1,
                "mov dword [rbx + ], r9d;mov qword [rbx + 8], rax;jne ;cmp r10b, byte [rbx + ];jne ": 1,
                "cmp r10b, byte [rbx + ];jne ;cmp dword [rbx + ], 0;jne ;mov esi, dword [rbx + ]": 1,
                "je ;xor edx, edx;mov r8d, esi;mov rax, qword [rbx + 8];mov rcx, qword [rbx + ]": 1,
                "dec r8;jne ;mov rdi, qword [rbx + ];mov ecx, dword [rbx + ];mov r8d, esi": 1,
                "mov edi, dword [rbx + ];mov rsi, qword [rbx + ];lea rcx, [rbx + 8];call fcn.13f0d6ea0;mov ebp, dword [rbx + ]": 1,
                "cmp r12d, 1;je ;cmp dword [rbx + ], 0;je ;test r12d, r12d": 1,
                "test r14, r14;je ;mov byte [r14], 1;mov eax, r15d;mov rdi, qword [var_28h]": 1,
                "mov rsi, qword [arg_60h];mov rbp, qword [arg_58h];mov r13, qword [var_20h];mov rbx, qword [arg_50h];add rsp, ": 1,
                "mov qword [arg_18h], rsi;push rdi;sub rsp, ;xor ebp, ebp;mov rsi, rcx": 5,
                "push rdi;sub rsp, ;cmp qword [rcx], 0;mov rsi, rdx;mov rdi, rcx": 3,
                "mov qword [arg_30h], rbx;lea rbx, [rcx + ];mov ecx, ;mov rdx, rbx;call qword []": 3,
                "movzx ecx, word [rdi + rax*2 + ];cmp cx, ;je ;cmp cx, ;je ": 3,
                "cmp cx, ;je ;sub rbx, 2;cmp word [rbx + 2], 0;lea rbx, [rbx + 2]": 3,
                "mov rsi, qword [arg_38h];add rsp, ;pop rdi;ret;push rbp": 3,
                "mov qword [rbp + ], rax;mov r14, rcx;mov rcx, qword [rcx];mov rbx, r8;mov r12d, edx": 4,
                "jl ;mov eax, ;jmp ;cmp dword [r14 + 8], ;je ": 4,
                "mov rdi, qword [r14];test rdi, rdi;je ;cmp dword [rdi + ], esi;je ": 4,
                "add dword [rdi + ], ecx;mov rcx, rdi;mov dword [var_20h], esi;call fcn.13f0d7640;mov ecx, esi": 4,
                "lea r9, [rbp - ];lea rdx, [var_60h];xor r8d, r8d;mov dword [var_20h], ;call fcn.13f0d7640": 3,
                "test eax, eax;je ;mov eax, ;jmp ;mov rax, qword [r14]": 3,
                "je ;cmp byte [rcx + 1], sil;je ;mov edx, dword [rcx + ];mov rcx, qword [rcx + 8]": 3,
                "mov rcx, rax;mov r15, rax;call fcn.13f0d73f0;cmp rax, r13;je ": 3,
                "cmp rax, r13;je ;mov rcx, r15;call fcn.13f10efc8;mov eax, ": 3,
                "mov ecx, dword [rax + ];lea rax, [rbp + ];xor edx, edx;mov dword [rbx], ecx;mov ecx, ": 2,
                "je ;cmp word [rdi + 2], ;jne ;add rdi, 4;jmp ": 2,
                "add rdi, 4;jmp ;cmp ax, ;jne ;add rdi, 2": 2,
                "mov r11d, edx;mov r8d, edx;shr r9d, 1;shr r11d, 2;shr r8d, 4": 1,
                "cmp rdx, rdi;je ;sub rdx, rdi;lea rcx, [var_230h];sar rdx, 1": 1,
                "jae ;lea rdx, [var_230h];mov rcx, rbx;mov word [rsp + rsi + ], bp;call fcn.13f0d8be0": 1,
                "mov word [rsp + rsi + ], bp;call fcn.13f0d8be0;mov word [var_20h], bp;test rbx, rbx;je ": 1,
                "test rbx, rbx;je ;lea rcx, [var_20h];sub rcx, rbx;movzx eax, word [rbx]": 1,
                "push rdi;push r14;sub rsp, ;mov rax, qword [];xor rax, rsp": 19,
                "mov rax, qword [];xor rax, rsp;mov qword [var_6c0h], rax;cmp dword [rcx + 8], ;mov r14, r8": 2,
                "mov rcx, qword [rcx];call fcn.13f0d8340;mov rcx, qword [rdi];mov dword [rdi + 8], ;cmp ebp, dword [rcx + 8]": 2,
                "mov dword [rdi + 8], ;cmp ebp, dword [rcx + 8];jl ;mov eax, ;jmp ": 2,
                "mov dword [rbx + ], edx;add ecx, dword [rbx + ];add eax, ;lea r8, [rbx + ];add ecx, eax": 2,
                "mov rcx, qword [var_6c0h];xor rcx, rsp;call fcn.13f10e4e0;add rsp, ;pop r14": 2,
                "mov rcx, r14;test ax, ax;je ;cmp ax, ;je ": 2,
                "movzx eax, word [rcx + 2];add rcx, 2;test ax, ax;jne ;lea rdx, [var_2a0h]": 2,
                "jne ;lea rdx, [var_2a0h];mov rcx, r14;sub rdx, r14;movzx eax, word [rcx]": 2,
                "mov eax, ;jmp ;mov rdx, qword [rdi + ];mov rcx, qword [rdi];push rbp": 1,
                "call fcn.13f10e55c;mov rcx, rdi;call fcn.13f10ef88;mov rsi, qword [arg_30h];xor eax, eax": 2,
                "mov rcx, rax;call fcn.13f117950;xor eax, eax;mov qword [rbx], rax;mov dword [rbx + 8], ": 2,
                "je ;mov rcx, rbx;call fcn.13f0d91e0;xor eax, eax;jmp ": 2,
                "call fcn.13f10efc8;mov rcx, qword [rbx + ];mov qword [rbx + ], 0;test rcx, rcx;je ": 3,
                "int3;int3;int3;int3;test rcx, rcx": 3,
                "ret;mov r9, qword [rcx + 8];mov r8, r9;sub r8, rdx;lea rcx, [r9 + ]": 4,
                "cmp dx, ;je ;sub rcx, 2;cmp word [rcx + 2], 0;lea rcx, [rcx + 2]": 4,
                "jne ;mov dword [], ;mov eax, ;add rsp, ;pop rbx": 9,
                "mov r8, rdi;mov rcx, rbp;call fcn.13f0b4410;mov rdi, rax;cmp rax, ": 6,
                "mov rdx, rax;mov rcx, rbp;mov qword [var_28h], ;mov qword [var_20h], r14;call fcn.13f0b1c80": 6,
                "mov rcx, rbp;mov qword [var_28h], ;mov qword [var_20h], r14;call fcn.13f0b1c80;add rdi, qword [rsi + ]": 6,
                "mov rbx, rdx;mov rdi, rcx;mov qword [var_28h], rcx;mov qword [var_40h], rdx;xor esi, esi": 12,
                "mov rax, qword [rbx + ];lea r8, [rcx + rax*2];cmp rdx, 8;jb ;mov rdx, qword [rbx]": 6,
                "call fcn.13f10e4e0;mov rbx, qword [arg_70h];mov rsi, qword [arg_78h];add rsp, ;pop rdi": 10,
                "mov r8, qword [rbx + ];add r8, rcx;cmp rdx, ;jb ;test rcx, rcx": 1,
                "mov rsi, rax;cmp rax, ;jne ;cmp rbp, qword [rdi + ];jae ": 7,
                "jb ;mov rcx, qword [rdi];call fcn.13f10e55c;push rdi;sub rsp, ": 1,
                "xor r8d, r8d;mov rcx, rdi;call fcn.13f0cece0;mov rsi, rax;cmp rax, ": 3,
                "call fcn.13f10e55c;mov qword [rbx + ], 7;mov qword [rbx + ], r12;mov word [rbx], r12w;mov rax, r14": 2,
                "mov dword [var_20h], 1;mov rdx, qword [rdx + ];test edx, edx;js ;mov r8, qword [rbx + ]": 2,
                "jmp ;mov rax, rbx;cmp word [rax + rcx*2], ;je ;dec edx": 2,
                "mov rax, rbx;cmp word [rax + rcx*2], ;je ;dec edx;dec rcx": 2,
                "lea eax, [rdx + 1];movsxd r8, eax;or r9, ;lea rdx, [var_28h];mov rcx, rbx": 2,
                "je ;cmp qword [rdi + ], 8;jb ;mov rcx, qword [rdi];call fcn.13f10e55c": 2,
                "mov rcx, rdi;call fcn.13f0d3ef0;cmp qword [var_40h], 8;jb ;mov rcx, qword [var_28h]": 2,
                "mov rcx, qword [var_28h];call fcn.13f10e55c;mov qword [var_40h], 7;mov qword [var_38h], rbp;mov word [var_28h], bp": 2,
                "mov qword [rbp + ], ;mov r11, rsp;push rbp;push rsi;push rdi": 1,
                "lea r9d, [r15 + 1];lea rdx, [];mov rcx, rdi;call fcn.13f0e00f0;cmp rax, ": 2,
                "mov r8, rdi;lea rdx, [];lea rcx, [var_50h];call fcn.13f0d0ac0;lea r8, []": 2,
                "lea rcx, [rbp - ];call fcn.13f0d0ba0;mov r8, rsi;mov rdx, rax;lea rcx, [rbp - ]": 2,
                "cmp rax, rdi;je ;or r9, ;xor r8d, r8d;mov rdx, rdi": 1,
                "lea rax, [rbp + ];mov qword [var_48h], rax;lea rax, [rbp + ];mov qword [var_40h], rax;mov qword [var_38h], r15": 1,
                "mov rcx, qword [rbp + ];call qword [];cmp qword [rbp + ], 8;jb ;mov rcx, qword [rbp + ]": 1,
                "mov qword [rbp + ], 7;mov qword [rbp + ], r15;mov word [rbp + ], r15w;mov r11, rsp;push rbp": 1,
                "xor rax, rsp;mov qword [var_150h], rax;mov rdi, rdx;mov rbx, rcx;mov qword [var_38h], rcx": 2,
                "mov rdi, rdx;mov rbx, rcx;mov qword [var_38h], rcx;mov qword [var_30h], rdx;xor edx, edx": 2,
                "call fcn.13f0b1960;test rax, rax;jne ;mov rax, qword [var_40h];movsxd rcx, dword [rax + 4]": 4,
                "mov word [rbx], si;cmp qword [rdi + ], ;jb ;mov rcx, qword [rdi];call fcn.13f10e55c": 2,
                "cmp qword [rcx + ], rdx;cmove edx, eax;xor r8d, r8d;call fcn.13f0b3a80;lea rax, [var_48h]": 3,
                "mov qword [var_20h], rax;lea rax, [];mov qword [rbp + ], rax;lea rax, [];mov qword [rbp + ], rax": 2,
                "mov rbx, qword [arg_1d0h];add rsp, ;pop rdi;pop rsi;pop rbp": 2,
                "test rax, rax;je ;mov rcx, rax;call fcn.13f0e39f0;lea rax, []": 4,
                "mov rcx, qword [rax];call fcn.13f0e9538;mov qword [var_20h], rax;test rbx, rbx;je ": 2,
                "call fcn.13f0e9538;mov qword [var_20h], rax;test rbx, rbx;je ;mov rdx, rbx": 2,
                "test rax, rax;jne ;mov rax, qword [var_60h];movsxd rcx, dword [rax + 4];lea rcx, [rsp + rcx + ]": 3,
                "mov qword [rbp + 8], rax;lea rax, [];mov qword [rbp + 8], rax;lea rcx, [rbp + 8];call fcn.13f0e9e44": 2,
                "call fcn.13f0e9e44;cmp qword [rdi + ], 8;jb ;mov rcx, qword [rdi];call fcn.13f10e55c": 3,
                "jb ;mov rcx, qword [rsi];mov rax, rsp;push rbp;push rdi": 1,
                "mov qword [var_68h], ;mov qword [arg_1e0h], rbx;mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax": 2,
                "movdqa xmmword [var_40h], xmm0;movaps xmm1, xmmword [var_50h];push rbp;push rdi;push r14": 1,
                "mov qword [rdi + ], ;mov qword [rdi + ], r14;mov byte [rdi], r14b;mov r8, qword [rbp - ];mov rdx, qword [var_78h]": 1,
                "lea rcx, [rbp + ];call fcn.13f0e9e44;cmp qword [rbx + ], ;jb ;mov rcx, qword [rbx]": 1,
                "mov qword [rbp - ], rdx;xor r14d, r14d;mov dword [var_20h], r14d;mov qword [rbp - ], r14;mov qword [rbp - ], r14": 2,
                "mov byte [rbp - ], r14b;mov qword [rcx + ], ;mov qword [rcx + ], r14;mov byte [rcx], r14b;mov dword [var_20h], 1": 2,
                "mov byte [rcx], r14b;mov dword [var_20h], 1;xor edx, edx;mov r8d, ;lea rcx, [rbp - ]": 2,
                "mov dl, ;mov rcx, rdi;call qword [rax + ];movzx r8d, al;lea rdx, [rbp - ]": 2,
                "test eax, eax;je ;lea r8, [];mov rdx, rbx;lea rcx, [var_30h]": 2,
                "mov qword [rbx + ], ;mov qword [rbx + ], r14;mov byte [rbx], 0;mov rdx, rdi;mov rcx, rbx": 2,
                "cmp rbx, rax;je ;or r9, ;xor r8d, r8d;lea rdx, [rbp - ]": 2,
                "lea rax, [rbp + ];mov qword [var_28h], rax;lea rax, [];mov qword [rbp + ], rax;lea rax, []": 2,
                "mov rax, rbx;mov rcx, qword [rbp + ];xor rcx, rsp;call fcn.13f10e4e0;lea r11, [var_1d0h]": 1,
                "mov rdi, rdx;mov rbx, rcx;mov qword [var_30h], rcx;mov qword [var_40h], rdx;xor r14d, r14d": 2,
                "test rax, rax;mov rax, qword [var_70h];movsxd rcx, dword [rax + 4];lea rcx, [rsp + rcx + ];jne ": 1,
                "call fcn.13f0b3a80;cmp qword [rbp + ], 0;je ;mov rax, qword [var_70h];movsxd rcx, dword [rax + 4]": 1,
                "lea rcx, [rbp - ];call fcn.13f0b1960;test rax, rax;jne ;mov rax, qword [var_70h]": 1,
                "lea rcx, [rbp + ];call fcn.13f0e9e44;cmp qword [var_60h], ;jb ;mov rcx, qword [var_48h]": 1,
                "call fcn.13f10eae8;mov rbx, rax;mov qword [var_40h], rax;test rax, rax;je ": 2,
                "test rbx, rbx;je ;mov rdx, rbx;lea rcx, [var_28h];call fcn.13f0e12e0": 2,
                "mov rax, qword [var_60h];movsxd rcx, dword [rax + 4];lea rdx, [var_60h];add rcx, rdx;lea rdx, [var_30h]": 2,
                "mov edx, 1;mov rcx, rax;call qword [r8];mov rcx, qword [var_28h];test rcx, rcx": 1,
                "mov word [rdi], bx;cmp word [var_50h], bx;je ;lea rax, [var_50h];or rbx, ": 2,
                "je ;lea rax, [var_50h];or rbx, ;inc rbx;cmp word [rax + rbx*2], 0": 2,
                "mov rbx, qword [arg_288h];add rsp, ;pop rdi;ret;int3": 2,
                "mov rdx, rdi;lea rcx, [rbp - ];call fcn.13f0d0c20;lea r8, [rbp + 7];mov rdx, rax": 2,
                "mov qword [rdi + ], ;mov qword [rdi + ], r12;mov byte [rdi], 0;mov rdx, rbx;mov rcx, rdi": 2,
                "mov qword [rbp + ], rax;mov rdi, rdx;mov rsi, rcx;mov qword [rbp + ], rcx;mov qword [rbp + ], rdx": 3,
                "mov rsi, rcx;mov qword [rbp + ], rcx;mov qword [rbp + ], rdx;xor r15d, r15d;mov dword [var_20h], r15d": 3,
                "mov qword [rbp + ], r15;mov qword [rbp + ], r15;mov qword [rbp + ], 7;mov qword [rbp + ], r15;mov word [rbp + ], r15w": 22,
                "lea rdx, [];lea rcx, [rbp + ];push rbp;push rsi;push rdi": 1,
                "mov qword [rbp + ], rdx;xor r12d, r12d;mov dword [rbp - ], r12d;xor eax, eax;mov qword [rbp + ], rax": 1,
                "mov eax, ;mov word [var_54h], ax;mov byte [var_56h], ;mov eax, ;mov word [var_58h], ax": 1,
                "mov byte [var_56h], ;mov eax, ;mov word [var_58h], ax;mov byte [var_5ah], ;mov eax, ": 1,
                "mov word [var_7ch], ax;mov byte [var_7eh], ;mov eax, ;mov word [rbp - ], ax;mov byte [rbp - ], ": 1,
                "xor r8d, r8d;xor edx, edx;call fcn.13f0e0d90;mov qword [rbp + ], rax;xorps xmm0, xmm0": 1,
                "lea rcx, [rbp + ];call fcn.13f0d0770;mov qword [rbp + ], 7;mov qword [rbp + ], 8;lea r14, [var_40h]": 1,
                "lea rcx, [var_100h];call fcn.13f0cded0;lea rax, [var_100h];mov qword [var_38h], rax;lea rax, []": 1,
                "mov qword [var_100h], rax;lea rcx, [var_100h];call fcn.13f0e9e44;cmp qword [rbx + ], ;jb ": 1,
                "push rdi;push r14;sub rsp, ;mov qword [r11 - ], ;mov qword [r11 + ], rbx": 2,
                "mov qword [r11 - ], ;mov qword [r11 + ], rbx;mov qword [r11 + ], rbp;mov rax, qword [];xor rax, rsp": 2,
                "mov qword [r11 + ], rbx;mov qword [r11 + ], rbp;mov rax, qword [];xor rax, rsp;mov qword [var_68h], rax": 2,
                "mov r14, qword [rdx + ];mov qword [rcx + ], ;mov qword [rcx + ], rsi;mov byte [rcx], sil;mov dword [var_30h], 1": 2,
                "mov qword [rcx + ], ;mov qword [rcx + ], rsi;mov byte [rcx], sil;mov dword [var_30h], 1;test r14, r14": 2,
                "mov rax, qword [rbx];jmp ;mov rax, rbx;mov byte [rax + rbp], 0;mov rdx, rsi": 2,
                "jb ;mov rax, qword [rdi];jmp ;mov rax, rdi;movzx ecx, byte [rax + rdx]": 2,
                "mov r8, rsi;jmp ;sub r8, rax;test rax, rax;je ": 2,
                "call fcn.13f10e4e0;lea r11, [var_70h];mov rbx, qword [r11 + ];mov rbp, qword [r11 + ];mov rsp, r11": 2,
                "push r15;lea rbp, [rsp - ];sub rsp, ;mov qword [rbp - ], ;mov qword [arg_388h], rbx": 3,
                "lea rcx, [rbp - ];call fcn.13f0d10f0;cmp qword [var_38h], 8;jb ;mov rcx, qword [var_20h]": 2,
                "jne ;mov rcx, rdi;call fcn.13f0cee60;and rbx, ;add rbx, qword [rdi]": 2,
                "jmp ;mov qword [var_48h_2], rbx;mov qword [var_60h_2], rbx;mov rax, qword [var_20h];mov qword [rbx], rax": 1,
                "mov word [var_20h], r13w;add qword [rdi + 8], ;cmp qword [var_38h], 8;jb ;mov rcx, qword [var_20h]": 1,
                "jb ;mov rcx, qword [r12];call fcn.13f10e55c;mov qword [r12 + ], 7;mov qword [r12 + ], r13": 1,
                "mov rcx, qword [r12];call fcn.13f10e55c;mov qword [r12 + ], 7;mov qword [r12 + ], r13;mov word [r12], r13w": 1,
                "call qword [];lea rax, [var_48h];mov qword [var_68h], rax;mov qword [var_60h], 7;mov qword [var_58h], r14": 2,
                "mov rcx, rax;call fcn.13f0e00f0;mov rsi, rax;cmp qword [var_40h], ;jb ": 1,
                "call fcn.13f10e55c;mov qword [var_60h], ;mov qword [var_58h], r14;mov byte [var_48h], 0;mov rax, rdi": 1,
                "call qword [];lea rax, [var_50h];mov qword [var_48h], rax;mov qword [var_68h], 7;mov qword [var_60h], rbx": 2,
                "mov qword [var_48h], rax;mov qword [var_40h], 7;mov qword [var_38h], rbx;mov word [var_28h], bx;cmp word [rbp - ], 0": 2,
                "call fcn.13f0d9410;mov dword [var_20h], 1;mov rax, rdi;mov rcx, qword [rbp + ];xor rcx, rsp": 2,
                "xor rcx, rsp;call fcn.13f10e4e0;lea r11, [var_2a0h];mov rbx, qword [r11 + ];mov rdi, qword [r11 + ]": 2,
                "int3;push rdi;sub rsp, ;mov qword [var_60h], ;mov qword [arg_c8h], rbx": 2,
                "lea rdx, [];lea rcx, [var_40h];call fcn.13f0d0dd0;lea r8, [];mov rdx, rax": 3,
                "mov rdx, rax;lea rcx, [rbp - ];call fcn.13f0d0ba0;lea r8, [rbp + ];mov rdx, rax": 3,
                "lea rcx, [rbp];call fcn.13f0d0f10;lea r8, [];mov rdx, rax;lea rcx, [rbp - ]": 3,
                "lea rcx, [var_20h];call fcn.13f0b34c0;mov qword [var_58h], ;mov qword [var_50h_2], rsi;mov byte [var_40h], 0": 2,
                "mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax;mov r14, rcx;mov qword [var_48h], rcx": 2,
                "mov rdi, r15;lea rax, [rbp - ];cmp qword [rbp - ], 8;cmovae rax, qword [rbp - ];movzx ecx, word [rdi + rax]": 2,
                "push r15;sub rsp, ;mov rax, qword [];xor rax, rsp;mov qword [var_a0h], rax": 3,
                "call qword [];lea rcx, [var_20h];mov r14, rax;call qword [];xor ebp, ebp": 3,
                "mov rcx, r14;mov rdx, rax;mov rdi, rax;call qword [];test eax, eax": 3,
                "mov rcx, r14;call qword [];mov eax, ebx;cmp qword [rdi], rax;ja ": 3,
                "xor edx, edx;mov eax, r15d;mov rcx, rdi;div r9d;inc eax": 3,
                "call fcn.13f10e4e0;lea r11, [var_b0h];mov rbx, qword [r11 + ];mov rbp, qword [r11 + ];push rbx": 1,
                "xor r15d, r15d;mov dword [rax - ], r15d;mov qword [rcx + ], ;mov qword [rcx + ], r15;mov byte [rcx], r15b": 3,
                "mov dword [rax - ], 1;mov rcx, qword [rdx + 8];sub rcx, qword [rdx];movabs r13, ;mov rax, r13": 3,
                "mul rcx;lea r12, [];shr rdx, 1;je ;movzx eax, byte [rbx]": 3,
                "shl r8d, 8;shl eax, ;add r8d, eax;movzx eax, byte [rdx];add r8d, eax": 3,
                "and eax, ;movzx r8d, byte [r12 + rax*2];mov edx, 1;mov rcx, rsi;call fcn.13f0b1840": 14,
                "mov rcx, rsi;call fcn.13f0b1840;mov eax, edi;shr rax, 6;and eax, ": 3,
                "movzx r8d, byte [r12 + rdi*2];mov edx, 1;mov rcx, rsi;call fcn.13f0b1840;inc rbp": 3,
                "inc rbp;mov rcx, qword [r14 + 8];sub rcx, qword [r14];mov rax, r13;mul rcx": 3,
                "mov edx, 1;mov rcx, rsi;call fcn.13f0b1840;mov edx, 1;jmp ": 1,
                "mov rcx, rsi;call fcn.13f0b1840;mov edx, 1;jmp ;movzx eax, byte [rbx]": 1,
                "mov rcx, qword [r14];test rcx, rcx;je ;call fcn.13f10e55c;mov qword [r14], r15": 1,
                "movzx ecx, word [rdx + rax*2 + 2];cmp cx, word [r9 + rax*2 + 2];jne ;add rax, 2;cmp rax, ": 2,
                "cmp ebx, r8d;jb ;mov rcx, rsi;call fcn.13f10ef88;xor eax, eax": 2,
                "mov ecx, 1;call qword [];mov edi, eax;xor ecx, ecx;call qword []": 2,
                "mov qword [rbp - ], rax;mov qword [rbp - ], rax;lea rax, [];mov qword [rbp - ], rax;lea rax, []": 2,
                "movups xmmword [rbp - 9], xmm0;mov dword [rbp + ], 4;lea rax, [rbp - ];mov qword [rbp + ], rax;cmp qword [rsi + ], 8": 2,
                "lea r9, [rbp - ];lea r8, [rbp + ];mov rcx, rdi;call qword [];test eax, eax": 2,
                "lea rax, [];mov qword [rbp - ], rax;mov rcx, rdi;call qword [];mov rcx, qword [rbp - ]": 2,
                "lea r11, [var_f0h];mov rbx, qword [r11 + ];mov rsi, qword [r11 + ];mov rdi, qword [r11 + ];mov rsp, r11": 2,
                "pop r12;pop rbp;ret;int3;int3": 16,
                "mov word [rcx], ax;mov rdx, rdi;call fcn.13f0d3ef0;add qword [rbx + 8], ;mov rbx, qword [arg_50h]": 3,
                "mov qword [r8], rcx;mov rax, qword [rbx + ];mov qword [rax], rcx;sub rdx, rcx;sar rdx, 1": 8,
                "mov qword [rbp + ], rax;movzx r14d, dx;mov rbx, rcx;mov edi, ;cmp di, dx": 4,
                "mov rcx, qword [rcx + ];mov qword [arg_8h], rcx;push rdi;sub rsp, ;mov qword [var_28h], ": 1,
                "jg ;lea rax, [rbp + 7];mov r10, qword [rbp + 7];mov r9, qword [rbp + ];mov qword [arg_8h], rcx": 1,
                "cmovae rax, r10;mov rsi, qword [rbp - 9];sub rsi, rax;je ;lea rcx, [rbp + 7]": 2,
                "mov r8, rsi;mov edx, 1;call fcn.13f10f160;cmp rsi, rax;jne ": 2,
                "movzx edi, r14w;cmp qword [rbp + ], ;jb ;mov rcx, qword [rbp + 7];call fcn.13f10e55c": 2,
                "xor edx, edx;lea rcx, [rbx + ];call fcn.13f0cf930;cmp qword [rdi + ], ;jb ": 1,
                "mov r8d, esi;mov rdx, rdi;lea rcx, [rbx + ];call fcn.13f0d05c0;test rax, rax": 1,
                "mov ecx, r8d;sub ecx, r11d;inc ecx;movsxd rdx, ecx;mov rcx, rbp": 3,
                "jle ;shl eax, 6;cmp eax, ;ja ;cmp eax, ": 2,
                "and ax, cx;mov ecx, ;or ax, cx;mov word [rdi], ax;jmp ": 2,
                "or ax, cx;mov word [rdi], ax;jmp ;test r11d, r11d;je ": 2,
                "je ;movzx r8d, byte [rcx];inc rcx;lea edx, [r8 + ];mov qword [r10], rcx": 2,
                "sete r14b;mov eax, r14d;mov rbx, qword [rsp + ];mov rbp, qword [rsp + ];mov rsi, qword [rsp + ]": 2,
                "mov rbp, qword [rsp + ];mov rsi, qword [rsp + ];mov rdi, qword [rsp + ];pop r15;pop r14": 2,
                "movzx ecx, word [rdi];cmp r8w, dx;jae ;mov eax, ;add eax, ecx": 1,
                "sub ecx, ;or eax, ecx;jmp ;lea eax, [r11 + rcx];cmp ax, r9w": 1,
                "sub rsp, ;mov qword [var_30h], ;mov rbx, rdx;mov rdi, rcx;mov qword [arg_68h], rcx": 1,
                "mov qword [rdi + ], 8;mov r8, qword [rbx + 8];mov rdx, qword [rbx];mov rcx, rdi;call fcn.13f0e1960": 1,
                "mov rbx, rcx;mov qword [var_30h], rax;call fcn.13f0e08c0;mov rcx, qword [rbx];mov rax, qword [var_30h]": 2,
                "mov rax, qword [rbx + 8];sub rcx, rax;cmp rcx, 1;jb ;inc rax": 2,
                "mov rcx, qword [rcx + ];xor ebx, ebx;test rcx, rcx;je ;call fcn.13f10e55c": 2,
                "xor ebx, ebx;test rcx, rcx;je ;call fcn.13f10e55c;mov qword [rdi + ], rbx": 2,
                "mov qword [rdi + 8], rbx;cmp rcx, qword [rdi];je ;mov rbx, qword [rcx];call fcn.13f10e55c": 2,
                "mov rcx, qword [rdi];mov rbx, qword [rsp + ];add rsp, ;pop rdi;jmp fcn.13f10e55c": 6,
                "lea rbx, [rsi + ];mov rcx, rbx;call fcn.13f0de760;mov qword [rsp + ], rbx;lea rax, []": 2,
                "lea rsi, [rcx - ];lea rbx, [rsi + ];mov qword [arg_18h], rbx;push rdi;sub rsp, ": 1,
                "test rsi, rsi;je ;movsx edx, byte [rbx];mov r8, rsi;mov rcx, rbp": 1,
                "sub rbx, rdi;mov rax, rbx;jmp ;or rax, ;mov rbx, qword [arg_30h]": 1,
                "cmp rax, ;jb ;mov rbx, qword [rdi];jmp ;mov rbx, rdi": 2,
                "je ;movsx edx, byte [rbx];lea rcx, [];mov r8, rsi;call fcn.13f10f83c": 5,
                "cmp rax, rdx;jbe ;mov qword [arg_50h], rsi;test rdx, rdx;je ": 5,
                "test rdx, rdx;je ;lea rsi, [r8 + rdx];movabs rax, ;cmp rsi, rax": 5,
                "ja ;mov rcx, qword [rcx + ];cmp rcx, rsi;jae ;mov rdx, rsi": 5,
                "cmp qword [rbx + ], 8;jb ;mov rax, qword [rbx];mov word [rax + rcx*2], r14w;jmp ": 5,
                "mov rax, rbx;add rsp, ;pop r14;pop rbp;pop rbx": 8,
                "pop rbp;pop rbx;ret;mov rsi, qword [arg_50h];mov word [rbx], ax": 4,
                "jmp ;mov rax, rbx;lea rdi, [rax + rcx*2];movzx eax, r14w;mov rcx, rbp": 4,
                "mov qword [rbx + ], rax;lea rax, [rbx + ];mov qword [rbx + ], rax;xor ecx, ecx;mov qword [rdx], rcx": 9,
                "mov rcx, qword [rbx + ];mov dword [rcx], edi;mov ecx, dword [];mov qword [rbx + ], rdi;mov dword [rbx + ], ecx": 4,
                "je ;mov rax, qword [rcx];mov ebx, ;mov edx, ebx;call qword [rax + ]": 4,
                "and rcx, rdx;cmp qword [rbx + ], rcx;ja ;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi": 1,
                "cmp r11, r8;jne ;mov rcx, r8;jmp ;mov rcx, qword [rdx + 8]": 4,
                "mov qword [r10], rcx;jmp ;mov qword [r10], r8;mov rax, r10;mov rcx, qword [var_8h]": 4,
                "mov rax, r10;mov rcx, qword [var_8h];xor rcx, rsp;call fcn.13f10e4e0;add rsp, ": 4,
                "mov byte [rbx + ], 1;mov byte [rbx + ], 0;lea rcx, [rbx + 8];mov qword [rbx + ], rcx;lea rdx, [rbx + ]": 6,
                "mov rax, qword [rbx + ];mov qword [rax], rcx;mov rax, qword [rbx + ];mov dword [rax], ecx;mov qword [rbx + ], r8": 5,
                "lea rbx, [rdi + ];mov qword [arg_50h], rbx;cmp qword [rbx + ], 8;jb ;mov rcx, qword [rbx + 8]": 5,
                "mov word [rbx + 8], bp;mov rcx, rdi;call fcn.13f10e55c;mov rdi, rsi;cmp rsi, qword [r14]": 5,
                "mov rbx, qword [arg_58h];push rdi;sub rsp, ;mov qword [var_20h], ;mov qword [arg_48h], rbx": 1,
                "test rdx, rdx;jne ;mov rdx, r15;jmp ;sub rdx, rax": 10,
                "jne ;mov rdx, r15;jmp ;sub rdx, rax;movzx r9d, byte [rdi]": 5,
                "mov rdx, r15;jmp ;sub rdx, rax;movzx r9d, byte [rdi];mov r8d, 1": 5,
                "xor rcx, rsp;call fcn.13f10e4e0;mov rbx, qword [arg_58h];mov rbp, qword [arg_60h];mov rsi, qword [arg_68h]": 8,
                "mov rbp, r8;mov rbx, r9;sub rbp, rdx;cmp rdx, r8;mov rdi, rdx": 5,
                "ja ;cmp qword [rcx + ], rdx;je ;mov r8b, 1;call fcn.13f0d42c0": 6,
                "lea rdx, [];mov rcx, rbx;call fcn.13f0d0140;or r9, ;xor r8d, r8d": 4,
                "je ;mov rax, qword [rcx];call qword [rax + 8];mov rax, qword [rsi];movsxd rcx, dword [rax + 4]": 6,
                "xor eax, eax;cmp dword [rcx + rsi + ], eax;sete al;mov byte [var_50h], al;mov qword [arg_10h], rbx": 1,
                "mov rax, qword [rsi];movsxd rcx, dword [rax + 4];mov eax, dword [rcx + rsi + ];and eax, ;cmp eax, ": 3,
                "test rbx, rbx;je ;mov rax, qword [rsi];movsxd rcx, dword [rax + 4];movzx r8d, byte [rcx + rsi + ]": 6,
                "movsxd rcx, dword [rax + 4];mov qword [rcx + rsi + ], 0;jmp ;mov edi, dword [rsp + ];mov r15, qword [rsp + ]": 2,
                "mov r15, qword [rsp + ];mov rsi, qword [rsp + ];mov rax, qword [rsi];movsxd rcx, dword [rax + 4];add rcx, rsi": 2,
                "mov rax, qword [rsi];movsxd rcx, dword [rax + 4];add rcx, rsi;test edi, edi;je ": 4,
                "add rcx, rsi;test edi, edi;je ;mov edx, dword [rcx + ];or edx, edi": 4,
                "call fcn.13f0e9a68;test al, al;jne ;mov rcx, r15;call fcn.13f0b2230": 2,
                "mov dword [rax - ], edi;mov r13, qword [rdx + ];mov rax, qword [rcx];movsxd rcx, dword [rax + 4];mov rbx, qword [rcx + rsi + ]": 3,
                "jb ;mov r15, qword [r15];mov rax, qword [rsi];movsxd rcx, dword [rax + 4];mov rcx, qword [rcx + rsi + ]": 2,
                "cmp r14w, r8w;jne ;or edi, 4;jmp ;dec rbx": 2,
                "movsxd rdx, dword [rcx + 4];mov rcx, qword [rdx + r12 + ];test rcx, rcx;je ;mov rdx, qword [rcx]": 4,
                "mov rbx, rcx;xor r14d, r14d;mov dword [var_20h], r14d;mov rax, rsp;push rdi": 1,
                "or r9, ;xor r8d, r8d;mov rdx, rbp;mov rcx, rbx;call fcn.13f0d0000": 2,
                "mov rbp, r8;movabs r14, ;mov rdi, rdx;mov rbx, rcx;mov rax, qword [rbx]": 4,
                "mov rcx, qword [rcx + r12 + ];test rcx, rcx;je ;mov rax, qword [rcx];call qword [rax + 8]": 4,
                "mov rax, qword [rcx];call qword [rax + 8];mov rcx, rdi;call fcn.13f0b3b80;mov byte [var_40h], al": 4,
                "mov r12, qword [rsp + ];mov rdi, qword [rsp + ];test sil, sil;jne ;or ebx, 2": 3,
                "je ;mov edx, dword [rcx + ];or edx, ebx;cmp qword [rcx + ], 0;jne ": 3,
                "mov r12, rdx;mov rdi, rcx;xor r13d, r13d;mov ebx, r13d;mov dword [var_24h], ebx": 3,
                "mov byte [var_40h], al;test al, al;je ;mov rax, qword [rdi];movsxd rcx, dword [rax + 4]": 3,
                "call fcn.13f0e3570;mov qword [arg_a8h], rax;mov rcx, qword [arg_a0h];test rcx, rcx;je ": 3,
                "jne ;movzx r8d, r14w;mov edx, 1;mov rcx, r12;call fcn.13f0e0380": 2,
                "call fcn.13f0e0380;mov r15b, 1;mov byte [var_20h], r15b;dec rsi;mov qword [var_28h], rsi": 2,
                "mov qword [rcx + rdi + ], r13;test r15b, r15b;jne ;or ebx, 2;mov rax, qword [rdi]": 1,
                "xor r8d, r8d;call fcn.13f0b3a80;mov rax, qword [rsi];movsxd rcx, dword [rax + 4];mov rcx, qword [rcx + rsi + ]": 1,
                "movabs rcx, ;mov qword [var_20h], rcx;xor edx, edx;movabs r8, ;mov qword [var_28h], rdx": 2,
                "xor edx, edx;movabs r8, ;mov qword [var_28h], rdx;cmp rdx, 1;jae ": 2,
                "xor rcx, rax;mov qword [var_20h], rcx;imul rcx, r8;mov qword [var_20h], rcx;inc rdx": 2,
                "mov qword [var_48h], r8;mov rbx, qword [r9];shl r8, 4;mov rcx, qword [r9 + ];cmp qword [r8 + rcx], rbx": 2,
                "mov rbx, qword [rax];mov qword [var_40h], rbx;mov qword [var_58h], rbx;cmp rbx, qword [rcx + r8];je ": 2,
                "jmp ;movzx eax, byte [r10];cmp byte [rbx + ], al;je ;mov rbx, qword [rbx]": 2,
                "cmp byte [rbx + ], al;je ;mov rbx, qword [rbx];jmp ;mov rdx, qword [arg_a8h]": 2,
                "cmp rax, qword [r9];jne ;mov qword [rdx], rdi;mov rax, qword [r9 + ];mov qword [r8 + rax + 8], rdi": 2,
                "jne ;mov qword [rdx], rdi;mov qword [var_20h], r9;push rbx;push rsi": 1,
                "mov rax, qword [];xor rax, rsp;mov qword [var_68h], rax;mov rsi, rdx;mov r10, rcx": 2,
                "xor ecx, ecx;movabs rdx, ;mov qword [var_28h], rcx;cmp rcx, 2;jae ": 2,
                "dec qword [r10 + 8];mov rcx, r8;call fcn.13f10e55c;mov qword [rsi], rbx;mov byte [rsi + 8], 0": 2,
                "mov qword [rax + 8], rcx;mov qword [rdi + 8], rdx;mov rcx, qword [r10 + ];add rcx, r9;mov rax, qword [rcx]": 2,
                "int3;push rdi;sub rsp, ;mov qword [var_20h], ;mov qword [arg_58h], rbx": 1,
                "mov rcx, rdi;call fcn.13f10e55c;mov rcx, qword [var_30h];xor rcx, rsp;call fcn.13f10e4e0": 2,
                "mov rcx, qword [var_30h];xor rcx, rsp;call fcn.13f10e4e0;mov rbx, qword [arg_58h];add rsp, ": 2,
                "call fcn.13f0e1dd0;cmp rbx, rdi;jne ;mov rdi, qword [arg_68h];mov rbx, qword [arg_70h]": 3,
                "int3;sub rsp, ;mov rax, qword [];xor rax, rsp;mov qword [var_20h], rax": 3,
                "mov rdx, r14;mov rcx, rdi;call fcn.13f0e28e0;test al, al;jne ": 5,
                "dec rcx;cmp rcx, 1;jae ;lea rcx, [];call fcn.13f0e91b8": 5,
                "or rax, ;sub rax, rcx;cmp rax, rdx;jae ;xor edx, edx": 5,
                "add rdx, rcx;cmp rdx, r8;cmovb rdx, r8;mov rcx, rbx;call fcn.13f0e2760": 5,
                "cmp rdx, r8;cmovb rdx, r8;mov rcx, rbx;call fcn.13f0e2760;mov rax, qword [rbx + 8]": 5,
                "call fcn.13f0e2760;mov rax, qword [rbx + 8];mov qword [var_28h], rax;mov qword [var_30h], rax;test rax, rax": 5,
                "mov rcx, qword [rcx];test rcx, rcx;je ;mov rax, qword [rcx + ];mov rdx, qword [rax]": 11,
                "mov qword [rbx], 0;mov byte [rbx + 8], 1;add rsp, ;pop rbx;ret": 8,
                "mov qword [rcx], rax;movzx eax, byte [rdx];jmp ;mov rax, qword [rcx];call qword [rax + ]": 10,
                "mov rax, qword [rcx];call qword [rax + ];cmp eax, ;je ;mov byte [rbx + 8], 0": 10,
                "call qword [rax + ];cmp eax, ;je ;mov byte [rbx + 8], 0;add rsp, ": 4,
                "je ;mov byte [rbx + 8], 0;add rsp, ;pop rbx;ret": 4,
                "mov qword [arg_40h], rdx;mov qword [arg_68h], rdx;test rdx, rdx;je ;mov rax, qword [arg_60h]": 10,
                "lea rax, [rdx + 8];xor ecx, ecx;mov qword [rax + ], rcx;mov qword [rax + ], rcx;mov qword [rax + ], 7": 5,
                "mov qword [rax + ], rcx;mov qword [rax + ], 7;mov qword [rax + ], rcx;cmp qword [rax + ], 8;jb ": 5,
                "lea rax, [rbx + r14];mov qword [rdi + 8], rax;mov qword [rdi], rbx;mov rbx, qword [arg_60h];add rsp, ": 6,
                "mov word [rax], dx;lea rdx, [rdi + 8];or r9, ;xor r8d, r8d;call fcn.13f0d4030": 6,
                "mov qword [arg_8h], rbx;push rdi;sub rsp, ;cmp byte [rcx + 8], 0;mov rbx, rdx": 7,
                "je ;mov byte [rdi + 9], al;jmp ;mov qword [rdi], 0;mov byte [rdi + 8], 1": 6,
                "cmp byte [rbx + 8], 0;jne ;mov rcx, qword [rbx];test rcx, rcx;je ": 25,
                "cmp qword [rdi], 0;jne ;cmp qword [rbx], 0;je ;xor al, al": 5,
                "jmp ;movsxd rax, dword [rcx - 4];sub rcx, rax;jmp ;int3": 5,
                "cmp eax, 1;jle ;mov qword [arg_8h], rcx;push rbx;sub rsp, ": 1,
                "movzx eax, word [rcx];add rsp, ;pop rbx;ret;test rcx, rcx": 4,
                "push rdi;sub rsp, ;mov qword [var_20h], ;mov qword [arg_48h], rbx;mov qword [arg_58h], rsi": 4,
                "movsxd rcx, dword [rax + 4];mov rcx, qword [rcx + rbx + ];mov rax, qword [rcx + ];mov rdx, qword [rax];test rdx, rdx": 3,
                "or edx, 4;xor r8d, r8d;call fcn.13f0b3a80;xor al, al;mov rbx, qword [arg_48h]": 2,
                "mov qword [rdi], 0;test rsi, rsi;je ;cmp byte [rsi], 0;mov qword [rsp + ], rbx": 3,
                "mov qword [rsp + ], rbx;mov rbx, rsi;je ;inc rbx;cmp byte [rbx], 0": 3,
                "mov rsi, qword [rsp + ];add rsp, ;pop rdi;ret;mov rax, rdi": 3,
                "lea rax, [];mov qword [rcx], rax;lea rcx, [var_28h];call fcn.13f0ea120;movups xmm0, xmmword [rax]": 4,
                "mov qword [rsp + ], ;mov qword [rsp + ], rsi;push rdi;sub rsp, ;mov rdi, rcx": 1,
                "mov qword [rsp + ], ;mov qword [rsp + ], rbx;mov edi, edx;mov rbx, rcx;lea rax, []": 3,
                "int3;int3;mov rax, r9;mov r10, r8;mov r11, rdx": 3,
                "mov r11, rdx;lea r9, [rcx + ];mov r8, rax;mov rdx, r10;mov rcx, r11": 3,
                "test al, al;jne ;add rbx, 2;cmp rbx, rdi;jne ": 3,
                "push rbx;sub rsp, ;movzx ebx, dx;lea rdx, [rcx + ];movzx ecx, r8w": 3,
                "add rbx, 2;mov word [rbx - 2], ax;cmp rdi, rsi;jne ;mov rbp, qword [rsp + ]": 1,
                "movups xmmword [rbx + ], xmm1;lea rcx, [var_28h];call fcn.13f0ea120;movups xmm0, xmmword [rax];movups xmmword [rbx + ], xmm0": 1,
                "jmp ;mov rdx, r14;lea rcx, [var_20h];call fcn.13f0e34a0;cmp rax, ": 3,
                "mov word [rcx + rdx*2], r9w;add rsp, 8;ret;cmp qword [rcx + ], 8;mov qword [rsp], rdi": 4,
                "mov r14, rdx;mov rsi, r9;mov qword [rdi], r8;mov ebp, dword [rdx];lea r9, [rcx + ]": 1,
                "mov qword [rdi], r8;mov ebp, dword [rdx];lea r9, [rcx + ];lea rcx, [rsp + ];xor edx, edx": 1,
                "lea r9, [rcx + ];lea rcx, [rsp + ];xor edx, edx;mov r8, r14;call fcn.13f0ea1b0": 1,
                "xor edx, edx;mov r8, r14;call fcn.13f0ea1b0;test eax, eax;jg ": 1,
                "jle ;lea rdx, [rsp + ];mov r8, rbx;call fcn.13f10e580;add qword [rdi], rbx": 1,
                "mov rbx, qword [rsp + ];mov rcx, qword [rsp + ];xor rcx, rsp;call fcn.13f10e4e0;mov rbp, qword [rsp + ]": 1,
                "mov rbp, qword [rsp + ];add rsp, ;pop r14;pop rdi;pop rsi": 11,
                "cmp eax, ;cmove eax, r15d;inc edi;movsxd rcx, eax;movsxd rax, edi": 1,
                "call fcn.13f0e96c0;mov qword [rbp - ], rdi;mov byte [rbp - ], dil;mov qword [rbp - ], rdi;mov byte [rbp - 9], dil": 1,
                "mov byte [rbp - 9], dil;mov qword [rbp - 1], rdi;mov word [rbp + 7], di;mov qword [rbp + ], rdi;mov word [rbp + ], di": 1,
                "lea rdx, [];lea rcx, [rbp - ];call fcn.13f0e94a8;lea rcx, [rbp - ];call fcn.13f0ea120": 1,
                "mov eax, dword [rax + ];mov dword [rbx + ], eax;lea rcx, [rbp - ];call fcn.13f0e9514;mov rcx, qword [rbp + ]": 1,
                "mov r8, rbp;sub r8, rdx;mov r9, r15;mov qword [rsp + ], rax;call fcn.13f0ea22c": 1,
                "jmp ;mov qword [rbx], rbp;mov eax, esi;mov rbx, qword [rsp + ];mov rbp, qword [rsp + ]": 1,
                "mov rax, rbp;sub rax, rsi;cmp rdx, rax;mov rax, qword [rdi];movzx edx, word [rax]": 1,
                "call fcn.13f0ea1b0;test eax, eax;js ;mov rcx, qword [rbx];movsxd rsi, eax": 1,
                "test eax, eax;js ;mov rcx, qword [rbx];movsxd rsi, eax;mov rax, rbp": 1,
                "push r14;sub rsp, ;mov qword [var_28h], ;mov qword [arg_40h], rbx;mov qword [arg_50h], rsi": 1,
                "mov rsi, rdx;mov rdi, rcx;mov dword [var_20h], 0;xor eax, eax;mov qword [rdx], rax": 1,
                "mov rbx, qword [rdi + ];test rbx, rbx;je ;mov r8d, dword [rbx + 8];mov rdx, rdi": 1,
                "mov qword [rsp + ], ;mov rax, qword [];xor rax, rsp;mov qword [rsp + ], rax;mov rbx, rcx": 1,
                "xor ecx, ecx;mov qword [rax], rcx;mov qword [rax + 8], rcx;mov qword [rax + ], rcx;mov edx, dword [rbx + ]": 1,
                "mov qword [rax + 8], rcx;mov qword [rax + ], rcx;mov edx, dword [rbx + ];mov rcx, qword [rsp + ];lea r8, []": 1,
                "mov qword [rax + ], rcx;mov edx, dword [rbx + ];mov rcx, qword [rsp + ];lea r8, [];mov qword [rax], r8": 1,
                "test rcx, rcx;je ;mov qword [var_28h], rbx;mov qword [arg_8h], rcx;sub rsp, ": 1,
                "sub rsp, ;movdqa xmm2, xmmword [];mov qword [rsp], rcx;lea rax, [rcx + ];mov qword [var_8h], rax": 3,
                "mov qword [rsp], rcx;lea rax, [rcx + ];mov qword [var_8h], rax;movdqu xmmword [var_18h], xmm2;lea rax, []": 3,
                "movups xmm1, xmmword [var_10h];movups xmmword [rcx + ], xmm0;mov qword [rsp], rax;lea rax, [rcx + ];mov qword [rcx + ], rdx": 3,
                "mov qword [var_8h], rdx;mov dword [rcx + ], edx;movups xmm0, xmmword [rsp];movups xmmword [rcx + ], xmm1;movsd qword [rcx + ], xmm2": 3,
                "mov qword [var_10h], rax;mov rax, rcx;movdqa xmm2, xmmword [];movdqu xmmword [var_18h], xmm2;movups xmm1, xmmword [var_10h]": 3,
                "mov qword [arg_10h], rdx;mov qword [arg_18h], r8;mov qword [arg_20h], r9;sub rsp, ;mov rax, qword []": 4,
                "sub rsp, ;xor ebp, ebp;mov qword [rcx + ], rdx;mov rbx, rcx;mov qword [rcx + ], rbp": 5,
                "cmp word [rcx + ], bp;jne ;mov qword [arg_30h], rsi;mov qword [arg_38h], rdi;lea r8, []": 5,
                "mov r11, rcx;mov qword [arg_40h], r14;mov r9d, ebp;mov r10d, ebp;mov edi, ebp": 5,
                "mov ecx, dword [r8];mov eax, r14d;inc edx;shl eax, cl;inc r9d": 5,
                "jl ;inc r10d;add r8, 4;cmp r10d, ;jl ": 5,
                "mov qword [rbx + ], rax;movsxd rax, r9d;lea r11, [];mov rsi, rbx;mov byte [rax + rbx + ], r10b": 5,
                "movsxd rax, r9d;lea r11, [];mov rsi, rbx;mov byte [rax + rbx + ], r10b;mov edi, ebp": 5,
                "mov edx, ebp;test eax, eax;jle ;mov byte [rbx + r9 + ], r8b;mov ecx, dword [r10]": 5,
                "shl eax, cl;inc edi;inc r9;cmp edx, eax;jl ": 5,
                "inc edi;inc r9;cmp edx, eax;jl ;inc r8d": 5,
                "mov edx, r14d;sub ecx, 7;inc r9d;inc edi;shl edx, cl": 4,
                "shl edx, cl;inc r10;cmp r9d, edx;jl ;inc r8d": 3,
                "jl ;mov rsi, qword [arg_30h];cmp edi, ;je ;lea rax, []": 3,
                "lea rdi, [rbx + ];mov ecx, ;rep stosd dword [rdi], eax;mov edx, ;lea rax, [rbx + ]": 3,
                "mov word [rax + ], di;inc word [rbx + ];mov word [rax + ], di;inc word [rbx + ];lea rax, [rax + ]": 3,
                "jne ;lea rax, [rbx + ];mov ecx, 7;mov word [rax], cx;inc word [rbx + ]": 3,
                "dec rdx;jne ;lea rax, [rbx + ];mov rcx, rdi;mov word [rax], di": 3,
                "mov word [r9 + 2], r10w;mov edx, r10d;mov edi, r8d;mov eax, ebp;mov ecx, edi": 3,
                "jne ;lea rax, [rbx + ];mov ecx, ;mov word [rax], bp;lea rax, [rax + 4]": 4,
                "jne ;mov word [rbx + ], r14w;mov r14, qword [arg_40h];mov qword [rbx + ], rbp;mov qword [rbx + ], rbp": 2,
                "int3;lea rax, [rcx + ];mov qword [arg_20h], rbx;push rbp;sub rsp, ": 1,
                "mov word [rax], r8w;lea rax, [rax + 4];dec rdx;jne ;lea rax, [rcx + ]": 4,
                "jne ;lea rax, [rcx + ];mov edx, ;mov word [rax], r8w;lea rax, [rax + 4]": 3,
                "ja ;inc r9d;movsxd rax, r9d;movsxd r11, dword [rcx + rax*4 + ];movzx eax, word [rbx + rdi*4]": 2,
                "mov rsi, qword [arg_10h];movsxd rax, r8d;mov dword [rcx + rax*4 + ], edi;mov rbx, qword [arg_18h];pop rdi": 2,
                "xor edi, edi;inc word [r10 + rax*2 + ];cmp r11d, r13d;jl ;mov rax, qword [arg_70h]": 3,
                "mov r15, qword [var_20h];mov r13, qword [var_28h];test r8d, r8d;je ;lea rcx, []": 3,
                "test r8d, r8d;je ;lea rcx, [];call fcn.13f0e4620;lea edi, [r9 - 1]": 3,
                "movsxd rsi, dword [arg_68h];movsxd rax, r9d;movzx edi, word [r10 + rax*2 + ];test edi, edi;je ": 3,
                "mov r11, rdx;xor edi, edi;mov rbx, rcx;lea rcx, [var_22h];mov rdx, rbx": 4,
                "cmp r10, ;jle ;movzx ecx, word [rbx + ];movzx eax, r9w;dec ecx": 3,
                "cmp ecx, ;je ;lea rax, [];mov qword [rbx + ], rax;lea rcx, []": 3,
                "lea rcx, [rcx + rdx*2];lea eax, [r8 + 1];mov word [rcx], ax;mov eax, edi;mov ecx, r8d": 3,
                "dec edx;shr r8d, 1;push rbp;push rsi;push rdi": 1,
                "mov r12d, 1;jge ;movsxd rdx, esi;cmp esi, 2;jge ": 2,
                "mov r8d, r10d;mov rcx, r10;inc dword [rbx + ];movsxd rax, dword [rbx + ];mov dword [rbx + rax*4 + ], r8d": 2,
                "mov byte [rbx + rcx + ], r10b;dec dword [rbx + ];test r9, r9;je ;movzx eax, word [r9 + rcx*4 + 2]": 2,
                "jl ;mov dword [r15 + ], esi;mov eax, dword [rbx + ];cdq;sub eax, edx": 2,
                "mov eax, dword [rbx + ];cdq;sub eax, edx;sar eax, 1;mov edi, eax": 2,
                "dec edi;cmp edi, r12d;jge ;movsxd rax, dword [rbx + ];movsxd rdi, dword [rbx + ]": 2,
                "mov byte [r8 + rbx + ], cl;mov word [r14 + rdx*4 + 2], bp;mov word [r9 + 2], bp;mov dword [rbx + ], ebp;mov rdx, r14": 2,
                "cmp ecx, edi;je ;inc word [r9 + rcx*4 + ];inc word [r9 + ];jmp ": 3,
                "mov eax, ;lea r11d, [r10 + 3];jmp ;cmp ecx, ebx;jne ": 2,
                "mov rbx, qword [arg_8h];mov rdi, qword [arg_10h];ret;int3;int3": 3,
                "sub rsp, ;movzx r15d, word [rdx + 2];xor ebx, ebx;or r10d, ;mov rdi, rcx": 3,
                "lea rdx, [];mov qword [var_20h], r14;inc ebx;movsxd rsi, r15d;movzx r15d, word [r12]": 3,
                "mov r10d, esi;test r15d, r15d;jne ;mov eax, ;lea ecx, [rbx + 3]": 2,
                "jge ;jmp ;sub r9d, 3;jmp ;sub r9d, 2": 3,
                "jge ;lea rax, [];mov qword [rcx + ], rax;cmp edx, ;jg ": 3,
                "jg ;cmp r8d, ;jg ;cmp esi, ;jle ": 3,
                "mov r8d, 5;mov rcx, rbx;call fcn.13f0e5d80;lea r14d, [rdi - 1];mov r8d, 5": 3,
                "call fcn.13f0e5d80;lea edx, [rsi - 4];mov r8d, 4;mov rcx, rbx;call fcn.13f0e5d80": 3,
                "lea r15, [];movzx r8d, byte [rdi + r15];lea rcx, [];mov edx, r8d;call fcn.13f0e4620": 3,
                "mov edx, r8d;call fcn.13f0e4620;movzx edx, word [rbx + r8*4 + ];mov r8d, 3;mov rcx, rbx": 3,
                "call fcn.13f0e4620;movzx edx, word [rbx + r8*4 + ];mov r8d, 3;mov rcx, rbx;call fcn.13f0e5d80": 3,
                "inc rdi;cmp rdi, rsi;jl ;mov r15, qword [arg_40h];mov edx, dword [rbx + ]": 3,
                "mov esi, r8d;mov rbp, rdx;cmp word [rax], cx;jne ;mov rcx, rbx": 3,
                "mov dword [rbx + ], edx;mov ecx, dword [rbx + ];mov eax, dword [rbx + ];lea ecx, [rax + rcx*8];cmp ecx, dword [rbx + ]": 2,
                "mov ecx, dword [rbx + ];mov eax, dword [rbx + ];lea ecx, [rax + rcx*8];cmp ecx, dword [rbx + ];je ": 2,
                "call fcn.13f0e4620;mov eax, dword [rbx + ];mov rbp, qword [arg_58h];mov rsi, qword [arg_60h];mov rdi, qword [arg_68h]": 2,
                "int3;int3;sub rsp, ;mov eax, dword [rcx + ];mov r10, rcx": 2,
                "mov r10, rcx;mov byte [rax + rcx + ], r8b;inc dword [rcx + ];test edx, edx;jne ": 3,
                "dec edx;mov eax, ;cmp dx, ax;jae ;mov eax, ": 3,
                "mov eax, dword [r10 + ];mov word [r10 + rax*2 + ], dx;movzx eax, byte [r10 + ];inc dword [r10 + ];or byte [r10 + ], al": 2,
                "imul ecx, eax;movzx eax, word [rdx - ];add ebx, ecx;mov ecx, dword [r15 + rdx - ];add ecx, 5": 2,
                "add edi, ecx;mov ecx, dword [r12 + rdx - ];add ecx, 5;imul ecx, eax;add r8d, ecx": 2,
                "jne ;lea eax, [r8 + rdi];mov r8d, dword [r10 + ];xor edx, edx;add ebx, eax": 2,
                "cmp dword [r10 + ], ;je ;cmp dword [r10 + ], ;jne ;mov r11d, 1": 1,
                "je ;cmp dword [r10 + ], ;jne ;mov r11d, 1;mov rsi, qword [arg_60h]": 1,
                "push r15;sub rsp, ;xor esi, esi;xor r14b, r14b;mov r13, rdx": 2,
                "test sil, 7;jne ;mov eax, r15d;inc r15d;movzx r14d, byte [rax + rbx + ]": 2,
                "jne ;mov eax, r15d;inc r15d;movzx r14d, byte [rax + rbx + ];movzx ebp, byte [rsi + rbx + ]": 2,
                "jne ;movsxd rax, ebp;movzx r8d, word [r13 + rax*4 + 2];movzx edx, word [r13 + rax*4];jmp ": 2,
                "mov eax, r12d;inc r12d;movzx edi, word [rbx + rax*2 + ];cmp edi, ;jae ": 2,
                "movzx r8d, word [rax + rbp*4 + 2];movzx edx, word [rax + rbp*4];call fcn.13f0e5d80;lea rax, [];mov r8d, dword [rax + rbp*4 + ]": 2,
                "int3;int3;mov qword [arg_8h], rbx;mov qword [arg_10h], rdi;movzx eax, word [rcx + ]": 2,
                "mov rbx, rcx;add r10d, eax;movzx eax, word [rcx + ];add r10d, eax;movzx eax, word [rcx + ]": 2,
                "lea r9d, [rdi + ];mov edx, edi;mov r8d, edi;movzx ecx, word [rax - 4];lea rax, [rax + 8]": 2,
                "add edx, ecx;movzx ecx, word [rax - 8];add r8d, ecx;dec r9;jne ": 2,
                "add r8d, ecx;dec r9;jne ;movzx r11d, word [rbx + ];lea eax, [r8 + rdx]": 2,
                "add edx, eax;movzx eax, word [rcx - 8];add r8d, eax;dec r9;jne ": 2,
                "dec eax;cmp dword [rdi], eax;jb ;mov rdx, qword [rcx + ];mov rcx, qword [rcx]": 4,
                "call qword [rbx + ];mov edx, dword [rdi];mov rcx, qword [rbx + ];movzx eax, byte [rbx + ];mov byte [rdx + rcx], al": 4,
                "movzx eax, byte [rbx + ];mov byte [rdx + rcx], al;inc dword [rdi];mov edx, dword [rdi];mov rcx, qword [rbx + ]": 4,
                "mov rcx, qword [rcx];call qword [rbx + ];mov edx, dword [rbx + ];mov qword [arg_8h], rbx;mov qword [arg_10h], rdi": 1,
                "push rdi;sub rsp, ;mov esi, r8d;mov rbp, rdx;mov rbx, rcx": 4,
                "call fcn.13f0e5e60;mov eax, dword [rbx + ];lea rdi, [rbx + ];dec eax;cmp dword [rdi], eax": 4,
                "mov byte [rcx + rax], sil;inc dword [rdi];mov edx, dword [rdi];mov rax, qword [rbx + ];movzx ecx, si": 4,
                "mov r8, rdi;mov rdx, rbp;mov dword [rdi], esi;call qword [rbx + ];jmp ": 4,
                "mov rbp, qword [arg_38h];lea esi, [rsi*8];add dword [rbx + ], esi;mov rbx, qword [arg_30h];mov rsi, qword [arg_40h]": 3,
                "add dword [rbx + ], esi;mov rbx, qword [arg_30h];mov rsi, qword [arg_40h];add rsp, ;pop rdi": 3,
                "mov dword [rcx + ], ebp;cmp dword [rcx + ], ebp;jne ;mov dword [rcx + ], 1;mov dword [rcx + ], ": 4,
                "jne ;mov dword [rcx + ], 1;mov dword [rcx + ], ;mov dword [rcx + ], ebp;add rcx, ": 4,
                "lea ecx, [rax - 1];mov dword [rbx + ], eax;cmp ecx, ;ja ;mov dword [rbx + ], ebp": 3,
                "jmp ;mov qword [rbx + ], 1;mov rbx, qword [arg_30h];mov rbp, qword [arg_38h];mov rsi, qword [arg_40h]": 3,
                "mov qword [arg_20h], rdi;push r12;push r13;push r14;push r15": 4,
                "lea r13, [];cmp r10d, r15d;jb ;mov qword [r9 + ], r12;mov r8d, r10d": 3,
                "movzx ecx, byte [rdx + 1];inc rax;cmp byte [rax], cl;jne ;movzx ecx, byte [rdx + 2]": 3,
                "inc rax;cmp byte [rax], cl;jne ;movzx ecx, byte [rdx + 2];inc rax": 3,
                "lea rdi, [];mov eax, dword [rbx + ];mov r8d, dword [rbx + ];sub r8d, eax;sub r8d, dword [rbx + ]": 3,
                "je ;lea rax, [rbx + ];lea rcx, [rbx + ];mov edx, ;movups xmm0, xmmword [rax]": 3,
                "movups xmm1, xmmword [rax - ];movups xmmword [rcx - ], xmm1;dec rdx;jne ;add dword [rbx + ], ": 3,
                "call qword [rbx + ];lea ecx, [rax - 1];cmp ecx, ;ja ;add dword [rbx + ], eax": 2,
                "and edx, ;and r8d, ;mov eax, edx;mov dword [rbx + ], eax;mov esi, dword [rbx + rdx*4 + ]": 7,
                "mov dword [rbx + r8*4 + ], esi;mov ecx, dword [rbx + ];mov eax, dword [rbx + ];mov dword [rbx + rcx*4 + ], eax;test esi, esi": 2,
                "cmp dword [rbx + ], 3;jb ;dec edi;inc dword [rbx + ];mov r8d, dword [rbx + ]": 2,
                "test ecx, ecx;js ;lea rdx, [rbx + ];add rdx, rcx;jmp ": 4,
                "js ;lea rdx, [rbx + ];add rdx, rcx;jmp ;mov rdx, rbp": 2,
                "xor r9d, r9d;sub r8d, ecx;mov rcx, rbx;call fcn.13f0e5610;mov eax, dword [rbx + ]": 3,
                "je ;mov qword [arg_40h], r14;cmp dword [rbx + ], 3;jb ;mov r8d, dword [rbx + ]": 2,
                "test esi, esi;je ;mov eax, dword [rbx + ];cmp dword [rbx + ], eax;jae ": 2,
                "mov eax, dword [rbx + ];cmp dword [rbx + ], eax;jae ;mov eax, dword [rbx + ];sub eax, esi": 2,
                "sub ecx, r14d;lea edx, [rcx - 1];mov rcx, rbx;call fcn.13f0e5870;mov edx, dword [rbx + ]": 2,
                "mov esi, dword [rbx + rdx*4 + ];mov qword [arg_10h], rbx;mov qword [arg_18h], rbp;mov qword [arg_20h], rsi;push rdi": 1,
                "xor r9d, r9d;mov rcx, rbx;call fcn.13f0e5610;mov eax, dword [rbx + ];mov dword [rbx + ], eax": 1,
                "lea rdx, [rbx + ];add rdx, rcx;jmp ;mov rdx, r15;mov r8d, dword [rbx + ]": 1,
                "mov ebp, 1;inc dword [rbx + ];dec dword [rbx + ];cmp dword [rbx + ], ;jae ": 1,
                "mov qword [arg_10h], rbx;push rbp;push rsi;push rdi;mov rbp, rsp": 4,
                "mov rcx, rsi;call fcn.13f0e7e40;mov eax, dword [rbx + ];lea rdx, [var_10h];shr rax, 8": 1,
                "mov rdi, r8;mov rbx, rcx;lea rdx, [var_10h];mov r8d, 1;mov rcx, rdi": 2,
                "mov eax, dword [rbx + ];shr eax, 8;mov byte [var_10h], al;lea rdx, [var_10h];mov r8d, 1": 1,
                "mov qword [arg_20h], rbx;push rbp;push rsi;push rdi;push r14": 1,
                "mov qword [var_8h], rax;mov r15, qword [arg_60h];mov esi, edx;mov r14d, r8d;mov edi, ecx": 1,
                "mov r8d, 1;mov rcx, r15;mov byte [var_10h], ;call fcn.13f0e7e40;lea rdx, [var_10h]": 2,
                "mov rcx, r15;mov byte [var_10h], ;call fcn.13f0e7e40;lea rdx, [var_10h];mov r8d, 1": 2,
                "mov r8d, 1;mov rcx, r15;mov byte [var_10h], 5;call fcn.13f0e7e40;lea rdx, [var_10h]": 1,
                "lea rdx, [var_10h];mov r8d, 1;mov rcx, r15;mov byte [var_10h], 6;call fcn.13f0e7e40": 1,
                "call fcn.13f0e7e40;lea rdx, [var_10h];mov r8d, 1;mov rcx, r15;mov byte [var_10h], 0": 6,
                "mov r8d, 1;mov rcx, r15;mov byte [var_10h], 0;call fcn.13f0e7e40;lea rdx, [var_10h]": 5,
                "mov r8d, 1;mov rcx, r15;mov byte [var_10h], dil;call fcn.13f0e7e40;lea rdx, [var_10h]": 1,
                "shr eax, 8;mov r8d, 1;mov rcx, r15;mov byte [var_10h], al;call fcn.13f0e7e40": 2,
                "mov byte [var_10h], al;call fcn.13f0e7e40;mov eax, r14d;shr eax, ;lea rdx, [var_10h]": 1,
                "call fcn.13f0e7e40;lea rdx, [var_10h];shr r14d, ;mov r8d, 1;mov rcx, r15": 1,
                "add rsp, ;pop rbx;ret;lea rdx, [];mov rcx, rbx": 4,
                "test eax, eax;jne ;mov al, 1;add rsp, ;pop rbx": 2,
                "test eax, eax;jne ;mov eax, ;jmp ;mov eax, dword [rbp - ]": 3,
                "bts ebx, ;jmp ;bts ebx, ;bts ebx, ;test edx, edx": 3,
                "jbe ;xor r9d, r9d;xor r8d, r8d;xor edx, edx;mov rcx, rdi": 3,
                "lea rdx, [rbp - ];mov r8d, 2;mov rcx, rdi;mov qword [var_20h], 0;call qword []": 3,
                "mov qword [var_20h], 0;call qword [];mov eax, dword [rbp - ];cmp eax, ;je ": 2,
                "je ;add eax, ;cmp eax, 4;ja ;mov ecx, ": 2,
                "mov rax, rdx;shr rax, ;add rdx, rax;mov rax, r9;mov qword [r13], rdx": 2,
                "mov qword [rbp - ], rcx;lea rdx, [rbp - ];lea rcx, [rbp - ];call qword [];movzx eax, word [rbp - ]": 2,
                "lea rcx, [rbp - ];call qword [];movzx eax, word [rbp - ];movzx ecx, word [rbp - ];and ax, ": 2,
                "or cx, ax;movzx eax, word [rbp - ];and eax, ;shl cx, 5;movzx edx, cx": 2,
                "xor r8d, r8d;mov edx, ;mov rcx, rax;mov dword [var_28h], ;mov dword [var_20h], 2": 2,
                "mov qword [rbx + 8], 0;mov eax, ;add rsp, ;pop rbx;ret": 2,
                "mov byte [rbx + ], 1;xor eax, eax;add rsp, ;pop rbx;ret": 6,
                "call fcn.13f0e7e40;test eax, eax;je ;mov dword [rbx], 0;add rsp, ": 1,
                "mov edi, r8d;mov rsi, rdx;mov rbx, rcx;je ;mov rcx, qword [rcx + ]": 2,
                "xor rcx, r10;mov r9d, r8d;lea r11, [r11 + 1];movzx eax, cl;and r9d, ": 2,
                "mov dword [rbx + ], eax;mov rax, qword [rbx + ];imul ecx, r9d;shr ecx, 8;xor cl, r10b": 2,
                "mov r8, rdi;mov rdx, rsi;call fcn.13f10e580;add dword [rbx + ], edi;mov eax, edi": 2,
                "mov qword [var_20h], 0;call qword [];mov eax, dword [var_30h];jmp ;mov dword [rbx + ], ": 2,
                "ret;int3;int3;sub rsp, ;cmp byte [rcx + ], 0": 3,
                "int3;sub rsp, ;cmp byte [rcx + ], 0;jne ;mov dword [rcx + ], ": 3,
                "jne ;mov dword [rcx + ], ;xor al, al;add rsp, ;ret": 3,
                "add rsp, ;ret;mov r10, qword [rcx + 8];test r10, r10;je ": 3,
                "ret;mov dword [rcx + ], ;xor al, al;add rsp, ;ret": 3,
                "int3;mov qword [arg_8h], rbx;push rdi;sub rsp, ;xor edi, edi": 11,
                "jne ;call fcn.13f0e8df0;mov edi, eax;mov rcx, qword [rbx + ];mov byte [rbx + ], 1": 4,
                "mov qword [rbx + ], 0;test rcx, rcx;je ;cmp byte [rbx + ], 0;je ": 4,
                "mov dword [rbx + ], ecx;mov dword [rbx + ], ecx;test rdx, rdx;jne ;mov eax, ": 4,
                "call fcn.13f0e81b0;mov esi, eax;test eax, eax;je ;mov rcx, rdi": 4,
                "push rdi;sub rsp, ;mov rax, qword [];xor rax, rsp;mov qword [var_60h], rax": 7,
                "mov qword [var_60h], rax;xor eax, eax;mov rdi, rdx;mov rbx, rcx;mov qword [rcx + ], rax": 4,
                "ja ;mov rcx, qword [rcx + 8];mov r9d, 1;xor r8d, r8d;xor edx, edx": 4,
                "lea rdx, [var_30h];lea rcx, [var_48h];mov qword [var_48h], rax;call qword [];movabs rcx, ": 4,
                "mov rax, rdx;shl cx, 4;shr rax, ;add rdx, rax;movzx eax, word [var_32h]": 4,
                "jmp ;mov eax, ;mov rcx, qword [var_60h];xor rcx, rsp;call fcn.13f10e4e0": 4,
                "xor rax, rsp;mov qword [var_38h], rax;mov rdi, rcx;mov rcx, qword [rcx + ];mov rbp, rdx": 4,
                "pop rbp;pop rbx;ret;sub esi, eax;lea rdx, [rcx + rax]": 3,
                "je ;call qword [];mov eax, dword [rbx + ];mov qword [rbx + ], 0;cmp eax, ": 3,
                "je ;mov cl, 1;jmp ;xor cl, cl;mov eax, dword [rbx + ]": 3,
                "cmp qword [rcx + ], rdi;jne ;mov ecx, ;call fcn.13f10eae8;mov r8, rax": 4,
                "mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax;cmp dword [rcx + ], 0;mov rdi, r8": 5,
                "mov eax, ;jmp ;cmp byte [rcx + ], 0;je ;mov eax, ": 5,
                "lea rcx, [rbp + ];mov r15d, r12d;mov r13d, ;cmovne r15d, r13d;sub rcx, rdx": 4,
                "movzx eax, word [rdx];lea rdx, [rdx + 2];mov word [rcx + rdx - 2], ax;test ax, ax;jne ": 4,
                "mov word [rax], cx;add rax, 2;cmp word [rax], r12w;jne ;lea rcx, [rbp + ]": 4,
                "call fcn.13f0e80d0;test eax, eax;jne ;mov qword [var_38h], r12;lea rax, [rbp + ]": 4,
                "call qword [];lea rax, [rbp + ];inc rdi;cmp byte [rax + rdi], r12b;jne ": 4,
                "add eax, r15d;mov dword [var_50h], eax;jmp ;mov dword [var_50h], r12d;mov eax, dword [rbx + ]": 3,
                "mov eax, dword [rbx + ];mov rdx, qword [rbx + ];mov qword [var_68h], rcx;mov rcx, qword [rbx + ];mov dword [var_54h], eax": 3,
                "mov dword [rbp + ], ;add eax, dword [rbx + ];mov byte [rbp + ], 7;mov r8, rbx;mov dword [rbp - ], eax": 3,
                "mov byte [rbp + ], 7;mov r8, rbx;mov dword [rbp - ], eax;lea rax, [rbp + ];mov word [var_78h_2], r12w": 3,
                "movzx eax, byte [rbx + ];mov byte [rbp + ], al;mov rax, rdx;sar rax, 8;mov byte [rbp + ], al": 3,
                "sar rdx, ;sar rax, ;mov byte [rbp + ], dl;mov byte [rbp + ], dl;mov byte [rbp + ], al": 3,
                "sar rax, ;mov byte [rbp + ], cl;mov rcx, qword [rbx + ];mov byte [rbp + ], al;movzx eax, byte [rbx + ]": 2,
                "mov dword [rbx + ], ecx;movzx ecx, byte [rbx + ];xor rcx, rax;mov eax, dword [r14 + rcx*4];xor eax, edx": 2,
                "jne ;cmp byte [], r12b;jne ;call qword [];push rbp": 1,
                "shr edx, 8;and r9d, ;movzx ecx, al;or r9d, 2;mov eax, dword [r14 + rcx*4]": 1,
                "mov dword [rbx + ], eax;movzx eax, al;add eax, dword [rbx + ];imul ecx, eax, ;inc ecx": 1,
                "movzx eax, al;add eax, dword [rbx + ];imul ecx, eax, ;inc ecx;mov dword [rbx + ], ecx": 1,
                "movzx eax, byte [rbx + ];movzx ecx, r8b;xor rcx, rax;shr r8d, 8;mov eax, dword [r14 + rcx*4]": 1,
                "xor eax, r8d;mov qword [arg_18h], rsi;mov qword [arg_20h], rdi;push r12;push r14": 1,
                "sub rsp, ;mov r15d, dword [rcx + ];xor r12d, r12d;mov qword [arg_60h], rbx;mov rbx, qword [rcx + ]": 1,
                "mov rcx, rbx;call fcn.13f0e70d0;movzx edi, dil;test eax, eax;cmovne edi, r12d": 1,
                "mov qword [arg_30h], rdi;mov rdi, qword [rcx + 8];mov rcx, rdi;call fcn.13f0e8040;mov dword [], eax": 4,
                "mov rdi, rcx;mov qword [rcx], rax;call fcn.13f10eccc;test bl, 1;je ": 10,
                "je ;mov rcx, rdi;call fcn.13f10e55c;mov qword [var_20h], r9;push rdi": 1,
                "int3;int3;sub rsp, ;lea rax, [];lea rdx, [arg_50h]": 4,
                "int3;int3;int3;sub rsp, ;mov qword [arg_50h], rcx": 13,
                "mov qword [rcx], rax;xor r8d, r8d;mov qword [rcx + ], r8;mov rax, qword [rdx + ];mov qword [rcx + ], rax": 10,
                "mov rcx, rbx;call fcn.13f0ed320;mov rax, rbx;mov rbx, qword [arg_48h];add rsp, ": 10,
                "sub rsp, ;lea rax, [];mov edi, edx;mov rbx, rcx;mov qword [rcx], rax": 10,
                "int3;mov rax, qword [];ret;push rdi;sub rsp, ": 9,
                "xor ecx, ecx;call fcn.13f0e9574;mov rbx, rax;mov rcx, rax;call fcn.13f0e95e0": 11,
                "mov rcx, qword [];mov qword [], rcx;test dil, dil;je ;mov rax, qword [rbx]": 11,
                "mov rbx, qword [rdi + ];jmp ;dec rbx;mov rax, qword [rdi + ];mov rcx, qword [rax + rbx*8]": 11,
                "jmp ;dec rbx;mov rax, qword [rdi + ];mov rcx, qword [rax + rbx*8];test rcx, rcx": 11,
                "mov rcx, qword [rdi + ];call fcn.13f10ef88;lea rcx, [arg_40h];call fcn.13f0e973c;mov rbx, qword [arg_48h]": 11,
                "call fcn.13f0e973c;mov rbx, qword [arg_48h];add rsp, ;pop rdi;ret": 11,
                "call fcn.13f113500;mov rbx, rax;lea rax, [];test rbx, rbx;lea rcx, [rdi + ]": 11,
                "cmp qword [rcx + ], 0;je ;sub rsp, ;mov qword [arg_50h], rcx;lea rdx, [arg_50h]": 1,
                "int3;sub rsp, ;cmp qword [rcx + ], 0;je ;mov rdx, qword [rcx + ]": 10,
                "sub rsp, ;cmp qword [rcx + ], 0;je ;mov rdx, qword [rcx + ];test rdx, rdx": 11,
                "mov rdx, qword [rcx + ];test rdx, rdx;jne ;lea rdx, [rcx + ];xor ecx, ecx": 11,
                "mov qword [rcx], rdx;mov byte [rcx + 8], dl;lea rdx, [];call fcn.13f0e2d20;jmp ": 10,
                "push rbx;sub rsp, ;cmp byte [], 0;mov rbx, rcx;jne ": 10,
                "mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi;sub rsp, ;mov rsi, rcx": 30,
                "lea rbx, [];mov edi, 4;mov rcx, rbx;call fcn.13f0ef050;add rbx, ": 11,
                "sub rsp, ;mov rbx, rcx;mov dword [rcx], edx;test edx, edx;jne ": 11,
                "mov dword [rcx], edx;test edx, edx;jne ;lea ecx, [rdx + ];call fcn.13f113770": 11,
                "mov qword [rsp + 8], rbx;push rdi;sub rsp, ;lock add dword [], ;jns ": 9,
                "add rsp, ;pop rdi;ret;sub rsp, ;movsxd rax, dword [rcx]": 9,
                "call fcn.13f113db0;mov qword [rbx + 8], rax;test rax, rax;je ;call fcn.13f113978": 10,
                "mov rsi, qword [rax + ];call fcn.13f111f74;mov ebp, eax;jmp ;mov rsi, qword [rdx + ]": 10,
                "call fcn.13f111f74;mov ebp, eax;jmp ;mov rsi, qword [rdx + ];mov ebp, dword [rdx]": 10,
                "jmp ;mov rsi, qword [rdx + ];mov ebp, dword [rdx];test rsi, rsi;jne ": 10,
                "cmp ebx, ;jae ;test rdi, rdi;jne ;mov ecx, ebx": 16,
                "test byte [rax + rbx*2], 1;je ;test rdi, rdi;jne ;call fcn.13f113978": 10,
                "movsx edx, word [rax + rcx*2];shr edx, ;and edx, 1;mov qword [arg_8h], rbx;push rdi": 1,
                "je ;mov eax, ebx;mov byte [arg_79h], bl;mov byte [arg_7ah], 0;sar eax, 8": 13,
                "mov byte [arg_7ah], 0;sar eax, 8;mov byte [arg_78h], al;mov eax, 2;jmp ": 8,
                "mov eax, 2;jmp ;mov byte [arg_78h], bl;mov byte [arg_79h], 0;mov eax, 1": 8,
                "jmp ;mov rsi, qword [rdx + ];mov r14d, dword [rdx];test rsi, rsi;jne ": 7,
                "mov rsi, qword [rdx + ];mov r14d, dword [rdx];test rsi, rsi;jne ;lea eax, [rbx - ]": 7,
                "cmp eax, ;ja ;sub ebx, ;mov eax, ebx;jmp ": 7,
                "mov rax, qword [rdi + 8];test byte [rax + rbx*2], bpl;je ;test rdi, rdi;jne ": 6,
                "pop rsi;ret;jmp fcn.13f11494c;int3;int3": 4,
                "jmp fcn.13f11494c;int3;int3;int3;mov qword [arg_18h], rbx": 5,
                "cmp dword [rsi + ], eax;je ;lea rcx, [rsi + 8];call fcn.13f115d18;mov qword [arg_8h], rbx": 1,
                "je ;mov rax, qword [rbx];inc dword [rax + ];cmp dword [rax + ], 1;jle ": 2,
                "jmp ;call qword [];mov rcx, qword [rbx];mov dword [rcx + ], eax;xor eax, eax": 2,
                "test rcx, rcx;je ;add rcx, 8;call fcn.13f0b3f30;mov rcx, qword [rbx]": 2,
                "mov qword [rdi], rbx;xor eax, eax;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];add rsp, ": 3,
                "push r14;mov rbp, rsp;sub rsp, ;mov qword [var_30h], ;mov qword [rax + ], rbx": 5,
                "mov qword [var_10h], ;xor eax, eax;mov qword [var_18h], rax;mov byte [var_28h], al;cmp byte [r9], al": 5,
                "lea r11, [var_60h];mov rbx, qword [r11 + ];mov rsi, qword [r11 + ];mov rsp, r11;pop r14": 5,
                "int3;int3;int3;sub rsp, ;movsxd rax, ecx": 6,
                "lea rcx, [arg_30h];mov edx, 2;call fcn.13f0e96c0;mov qword [rbx + 8], 1;lea rdx, []": 7,
                "call fcn.13f0e973c;add rsp, ;pop rbx;ret;int3": 7,
                "or edx, 1;test dl, 8;je ;or edx, 2;xor ecx, ecx": 14,
                "je ;mov eax, dword [r14 + r8*4 + ];inc r8;inc ecx;test eax, eax": 13,
                "test eax, eax;jne ;movsxd rbx, ecx;cmp dword [r14 + rbx*4 + ], 0;jne ": 13,
                "lea r8d, [rdx + ];add rcx, 4;call fcn.13f117950;call fcn.13f111f74;mov dword [rdi], eax": 5,
                "or byte [r8 + rdi + ], dl;inc ebx;inc rsi;cmp ebx, ;jl ": 4,
                "lea rax, [var_48h];lea r8, [lpMultiByteStr];mov qword [var_38h], rax;mov eax, dword [r9 + 4];and qword [var_30h], 0": 4,
                "mov eax, dword [r9 + 4];and qword [var_30h], 0;mov dword [var_28h], eax;mov qword [var_20h], rcx;mov ecx, dword [r10]": 4,
                "mov dword [var_88h], eax;movsd qword [var_80h], xmm0;cmp dword [rbx + 8], r15d;je ;test rdi, rdi": 5,
                "jmp ;cmp dword [rsi], r15d;je ;mov al, byte [r14];mov byte [rsi + 1], al": 5,
                "setne al;mov dword [var_28h], eax;mov qword [var_20h], rdi;call qword [];test eax, eax": 15,
                "shl edx, cl;test byte [rax + rbx + ], dl;je ;mov ecx, dword [rbx + 4];cmp rbp, rcx": 5,
                "mov r8, r14;mov edx, 9;setne al;mov dword [var_28h], eax;mov qword [var_20h], rdi": 5,
                "test rdi, rdi;lea edx, [r9 + 8];mov r8, r14;setne al;mov dword [var_28h], eax": 5,
                "mov qword [var_20h], rdi;call qword [];test eax, eax;jne ;jmp ": 5,
                "mov word [arg_50h], cx;cmp cx, dx;je ;cmp qword [rax + ], 0;jne ": 6,
                "cmp qword [rax + ], 0;jne ;mov edx, ;cmp cx, dx;jae ": 6,
                "jne ;mov edx, ;cmp cx, dx;jae ;lea eax, [rcx - ]": 6,
                "mov edx, ;cmp cx, dx;jae ;lea eax, [rcx - ];cmp ax, ": 6,
                "mov word [arg_8h], cx;sub rsp, ;mov ecx, 1;lea r9, [arg_40h];lea rdx, [cchSrc]": 5,
                "jne ;inc r12;inc rcx;mov al, byte [rcx];test al, al": 16,
                "mov rax, qword [rcx + ];mov edx, dword [rax];jmp ;xor edx, edx;test edx, edx": 58,
                "movzx eax, r15b;cmovb ecx, eax;mov byte [rdx + r14], cl;mov cl, byte [var_40h];inc r14": 4,
                "jmp ;xor ebx, ebx;test rbx, rbx;jne ;test rsi, rsi": 104,
                "call fcn.13f10ebc0;lea rdx, [];lea rcx, [var_28h];call fcn.13f112d38;int3": 104,
                "call fcn.13f0e973c;mov rax, rbx;mov rbx, qword [arg_78h];add rsp, ;pop r14": 100,
                "pop rdi;pop rsi;ret;push rsi;push rdi": 93,
                "jne ;mov eax, dword [];inc eax;mov dword [], eax;push rsi": 1,
                "int3;mov r11, rdx;mov byte [rdx], ;lea r10, [rdx + 1];test r9b, ": 2,
                "xor rax, rsp;mov qword [rbp - 1], rax;mov r15, r9;mov rsi, r8;mov qword [rbp - ], rdx": 4,
                "mov qword [rbp - ], rdx;mov r13, rcx;push rsi;push rdi;push r14": 1,
                "inc rdx;mov r9b, byte [var_30h];mov r8, qword [rbp + ];lea rcx, [rbp - ];call fcn.13f0d3b20": 2,
                "mov byte [rax + rdx], cl;mov r9b, byte [var_30h];mov r8, rbx;lea rcx, [rbp - ];call fcn.13f0d3b20": 2,
                "mov r9b, r12b;mov r8d, 1;mov rdx, r14;lea rcx, [rbp - ];call fcn.13f0d3b20": 2,
                "cmp al, ;jne ;mov r14, qword [rbp - ];mov rbx, qword [r15 + ];test rbx, rbx": 2,
                "lea r8, [rbp - ];lea rdx, [rbp - ];mov rcx, r13;call fcn.13f0ed9c0;xor ebx, ebx": 1,
                "call fcn.13f0ed91c;mov r12b, byte [var_31h];movups xmm0, xmmword [rax];movdqu xmmword [rsi], xmm0;movdqu xmmword [rbp - ], xmm0": 1,
                "pop r14;ret;int3;int3;mov rax, rsp": 60,
                "int3;mov rax, rsp;push rsi;push rdi;push r14": 39,
                "mov r8, rdi;mov rdx, r14;call fcn.13f0ebc94;jmp ;lea rdx, [rbp - ]": 4,
                "mov rcx, rdi;call fcn.13f0e28e0;test al, al;jne ;cmp byte [rdi + 8], r12b": 5,
                "call fcn.13f0e28e0;test al, al;jne ;cmp byte [rdi + 8], r12b;jne ": 5,
                "mov rax, qword [rcx + ];mov edx, dword [rax];jmp ;mov edx, r12d;test edx, edx": 20,
                "mov al, byte [rdi + 9];cmp al, byte [rbp + ];jne ;mov byte [r14], ;jmp ": 3,
                "jmp ;mov qword [rdi], r12;mov byte [rdi + 8], 1;mov al, byte [rdi + 9];cmp al, byte [rbp + 9]": 2,
                "mov qword [rdi], r12;mov byte [rdi + 8], 1;mov al, byte [rdi + 9];cmp al, byte [rbp + 9];jne ": 2,
                "mov al, byte [rdi + 9];cmp al, byte [rbp + 9];jne ;mov byte [r14], ;lea r15, [r14 + 1]": 2,
                "mov word [rbp - ], bx;mov qword [rbp - ], 1;xor ebx, ebx;mov rdx, qword [rbp - ];mov rcx, rdi": 2,
                "mov byte [rdi + 8], 1;lea rax, [rbp - 1];mov cl, byte [rbp - 1];jmp ;cmp cl, byte [rdi + 9]": 1,
                "test rax, rax;jne ;test r12d, r12d;je ;lea rcx, []": 3,
                "test r12d, r12d;je ;lea rcx, [];mov al, byte [rax + rcx];mov byte [r15], al": 3,
                "inc r15;inc r12d;mov dword [rbp - ], r12d;lea rax, [rbp - ];cmp qword [rbp - ], ": 1,
                "mov byte [rbx + 8], 1;mov al, byte [rbx + 9];cmp al, byte [rbp - 3];jne ;mov byte [r15], ": 1,
                "mov edi, ;and esi, edi;lea eax, [rdi + 6];cmp ecx, ;cmove esi, eax": 3,
                "pop rdi;ret;int3;mov rax, rsp;push rbp": 2,
                "mov r14, r9;mov r15, r8;mov qword [rbp - ], rdx;mov r13, rcx;mov al, byte [rbp + ]": 2,
                "mov rsi, qword [rbp + ];test rsi, rsi;je ;mov al, byte [rdi];sub al, ": 2,
                "jne ;mov eax, 1;jmp ;xor eax, eax;movsxd rbx, eax": 2,
                "cmp rcx, rsi;ja ;cmp byte [rdi + rbx], ;jne ;mov al, byte [rdi + rbx + 1]": 2,
                "mov rcx, r12;call fcn.13f104cd0;lea rdi, [rbp - ];cmp qword [rbp - 9], ;cmovae rdi, qword [rbp - ]": 2,
                "mov r8d, 1;mov rdx, rsi;lea rcx, [rbp - ];call fcn.13f0d3b20;lea rax, [rdi + 1]": 2,
                "jne ;mov rsi, qword [rbp - ];mov rdi, qword [r14 + ];test rdi, rdi;jle ": 2,
                "mov r9b, r12b;call fcn.13f0ed9c0;movups xmm0, xmmword [rax];movdqu xmmword [r15], xmm0;xor edi, edi": 2,
                "lea r8, [rbp - ];lea rdx, [rbp - ];mov rcx, r13;call fcn.13f0ed9c0;xor edi, edi": 1,
                "mov qword [r14 + ], rsi;movups xmm1, xmmword [r15];movdqu xmmword [rbp - ], xmm1;mov qword [var_20h], rdi;mov r9b, r12b": 1,
                "lea rsi, [rdi + 1];mov eax, ;cmp rsi, rax;cmovb rsi, rax;mov rdx, rsi": 1,
                "call fcn.13f0e913c;int3;mov qword [rbx + ], rax;jmp ;mov rcx, qword [rbx + ]": 1,
                "call qword [rax + 8];mov rax, qword [rbx + ];mov rcx, qword [rax + rdi*8];test rcx, rcx;je ": 1,
                "call fcn.13f0e973c;mov rbx, qword [arg_48h];mov rsi, qword [arg_50h];mov rdi, qword [arg_58h];add rsp, ": 1,
                "mov rdi, rcx;cmp rdx, qword [];jne ;lea rdx, [];lea rcx, [rax - ]": 2,
                "mov rbx, qword [rdi + ];jmp ;dec rbx;mov rax, qword [rsi + ];mov rcx, qword [rax + rbx*8]": 2,
                "mov rbx, rax;test rax, rax;je ;mov dword [rax + 8], r14d;lea rax, []": 3,
                "mov rbx, r14;mov r8, qword [];test r8, r8;jne ;xor edx, edx": 4,
                "lea rcx, [arg_48h];call fcn.13f0e96c0;cmp qword [], r14;jne ;mov eax, dword []": 8,
                "call fcn.13f0ed248;test r14d, r14d;je ;test rsi, rsi;jne ": 2,
                "jne ;lea ecx, [rsi + ];call fcn.13f10eae8;mov rax, rsp;push rbp": 1,
                "mov rcx, rbx;call fcn.13f0ecda4;jmp ;mov rbx, r14;mov r8, qword []": 1,
                "call fcn.13f0ed248;jmp ;mov rbx, qword [];test rbx, rbx;jne ": 1,
                "mov rbp, qword [arg_38h];add rsp, ;pop rdi;ret;int3": 5,
                "add rsp, ;pop rdi;ret;int3;mov al, byte [rcx + ]": 2,
                "je ;mov rcx, rdi;call fcn.13f112c90;mov r8, rax;mov rdx, rdi": 2,
                "mov qword [rbp - ], ;mov rax, qword [];xor rax, rsp;mov qword [rbp - ], rax;mov r13, r9": 4,
                "call fcn.13f0b2b00;mov rdx, rax;mov eax, dword [rbx + ];mov qword [rsp + ], rdx;mov dword [rsp + ], eax": 4,
                "movups xmmword [rsp], xmm0;psrldq xmm0, 8;mov r9, qword [rsp];movd r8d, xmm0;test r8d, r8d": 3,
                "mov ecx, eax;imul eax, eax, ;add r8d, eax;add r9, rcx;cmp r8d, dword [r11 + 8]": 3,
                "mov eax, ;imul ecx;imul rcx, r9, ;sar edx, ;mov eax, edx": 3,
                "mov rcx, r14;call fcn.13f0f1d3c;inc rdi;lea rbx, [rbx + 2];cmp rdi, rsi": 6,
                "xor ebx, ebx;xor esi, esi;test r12, r12;je ;jmp ": 10,
                "jne ;lea rax, [var_28h];cmp qword [var_10h], ;cmovae rax, qword [var_28h];cmp byte [rax + rsi], 0": 10,
                "cmp byte [rax + rsi], 0;je ;lea rax, [var_28h];cmp qword [var_10h], ;cmovae rax, qword [var_28h]": 10,
                "mov cl, 1;mov byte [var_40h], cl;jmp ;mov r13d, esi;sub rsp, ": 1,
                "mov ecx, ;cmp r15, rcx;movzx eax, r15b;sub rsp, ;lea rcx, [lpSystemTimeAsFileTime]": 1,
                "cmp rsi, r12;jb ;test cl, cl;je ;mov rdx, qword [var_38h]": 7,
                "jne ;inc r15;mov rcx, rdi;call fcn.13f0fa378;or r13d, ": 7,
                "lea rax, [var_28h];cmp qword [var_10h], ;cmovae rax, qword [var_28h];cmp byte [rax + rsi], r9b;je ": 4,
                "cmp word [r14 + rbx*2], ax;jne ;mov cl, 1;mov byte [var_40h], cl;jmp ": 2,
                "cmp cx, ax;mov rax, rsp;push rbp;push rsi;push rdi": 1,
                "cmp byte [rcx + ], r15b;je ;mov rcx, qword [r8 + ];jmp ;mov rcx, qword [r8 + ]": 2,
                "push r15;mov rbp, rsp;sub rsp, ;mov rax, qword [r8];xor r15d, r15d": 3,
                "lea r8d, [r15 + 1];mov word [rsi + ], ax;mov rax, qword [rbx + 8];lea rdx, [var_10h];mov cl, byte [rax]": 3,
                "mov qword [rax + 8], rbx;mov qword [rax + ], rbp;mov qword [rax + ], rsi;push rdi;sub rsp, ": 44,
                "lea rsi, [rbp + ];movups xmm0, xmmword [rax];movups xmmword [rsi], xmm0;movups xmm1, xmmword [rax + ];movups xmmword [rsi + ], xmm1": 3,
                "mov rdx, rax;call fcn.13f0e2d20;mov rcx, rdi;call fcn.13f10ef88;cmp qword [rbx + ], 0": 3,
                "cmp byte [rcx + ], 0;mov rsi, r8;mov rbp, rcx;je ;mov r14, qword [r8 + ]": 4,
                "mov r14, qword [rsi + ];mov rcx, r14;call fcn.13f118764;lea rdi, [rax + 1];mov rax, r15": 8,
                "mov qword [rbp + ], rbx;mov rax, qword [rsi + ];mov rbx, qword [arg_40h];movzx ecx, word [rax];mov word [rbp + ], cx": 3,
                "movups xmm0, xmmword [rax];movups xmmword [r14 + ], xmm0;movups xmm1, xmmword [rax + ];movups xmmword [r14 + ], xmm1;movsd xmm0, qword [rax + ]": 4,
                "lea rcx, [rsi + ];mov rdx, rax;call fcn.13f0f1cb8;mov rcx, rbx;call fcn.13f10ef88": 7,
                "je ;mov rbp, qword [rsi + ];test rbp, rbp;jne ;lea rbp, [rsi + ]": 7,
                "call fcn.13f0e907c;lea r8, [rdi + rdi];mov rdx, rbp;mov rcx, rax;mov rbx, rax": 7,
                "mov rdx, rbp;mov rcx, rax;mov rbx, rax;call fcn.13f10e580;mov qword [r14 + ], rbx": 3,
                "mov rbx, rax;call fcn.13f10e580;mov qword [r14 + ], rbx;call fcn.13f119998;mov rbx, rax": 3,
                "mov rcx, rax;mov rbx, rax;mov rax, rsp;mov qword [rax + 8], rbx;mov qword [rax + ], rbp": 1,
                "mov rbx, rax;mov rax, rsp;mov qword [rax + 8], rbx;mov qword [rax + ], rbp;mov qword [rax + ], rsi": 1,
                "mov rbp, qword [r11 + ];mov rsi, qword [r11 + ];mov rdi, qword [r11 + ];mov rsp, r11;pop r15": 16,
                "pop r14;pop r12;ret;mov rax, rsp;mov qword [rax + ], rbx": 2,
                "ret;mov rax, rsp;mov qword [rax + ], rbx;mov qword [rax + ], rbp;push rsi": 2,
                "mov rdi, r14;je ;lea r9, [arg_88h];lea rcx, [arg_70h];mov r8, rdi": 3,
                "jne ;mov rcx, ;inc rbx;mov eax, 2;mul rbx": 3,
                "call fcn.13f0f3974;cmp rax, ;jne ;lea rdx, [];lea rcx, [var_28h]": 3,
                "jmp ;mov rdx, r14;lea rcx, [arg_70h];call fcn.13f0f3bc0;cmp rax, ": 3,
                "jmp ;mov rdx, r14;lea rcx, [arg_70h];call fcn.13f0f3d68;cmp rax, ": 3,
                "pop rdi;pop rsi;ret;mov qword [arg_8h], rbx;mov qword [arg_10h], rbp": 6,
                "ret;mov qword [arg_8h], rbx;mov qword [arg_10h], rbp;mov qword [arg_18h], rsi;push rdi": 27,
                "mov qword [arg_10h], rbp;mov qword [arg_18h], rsi;push rdi;sub rsp, ;mov rsi, rcx": 4,
                "cmp rcx, rdx;je ;push rsi;push rdi;push r14": 1,
                "je ;lea r8, [rbx + 2];mov rdx, rdi;mov rcx, rax;call fcn.13f10e580": 3,
                "mov byte [rbx + 8], 1;movzx eax, word [rbx + ];add rsp, ;pop rbx;ret": 4,
                "pop rbx;ret;int3;mov qword [rsp + 8], rbx;push rdi": 11,
                "mov rcx, qword [rcx + ];call fcn.13f10ef88;lea rax, [];mov qword [rdi], rax;test bl, 1": 11,
                "int3;mov qword [rsp + 8], rbx;push rdi;sub rsp, ;cmp dword [rcx + ], 0": 3,
                "call fcn.13f10e580;jmp ;test rcx, rcx;je ;mov rax, qword [rdx]": 1,
                "mov rax, qword [rbx + ];mov qword [rdi + ], rax;mov qword [rbx + ], rsi;mov qword [rbx + ], 7;mov word [rbx], si": 1,
                "mov word [rbx], si;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];add rsp, ;pop rdi": 1,
                "mov qword [rbx + ], rdi;mov qword [rbx + ], r14;cmp rdi, 8;jb ;mov rbx, r15": 2,
                "pop rsi;pop rbx;ret;mov rax, rsp;push rbp": 2,
                "mov qword [rbp - ], rdx;movzx eax, word [rbp + ];mov word [var_22h], ax;mov rbx, qword [rbp + ];mov r14, qword [rbp + ]": 4,
                "mov rbx, qword [rbp + ];mov r14, qword [rbp + ];xor ecx, ecx;test r14, r14;je ": 9,
                "je ;mov rax, qword [rax];mov edx, 1;call qword [rax];mov rax, qword [r15]": 4,
                "mov r8, qword [rbp + ];lea rcx, [rbp - ];call fcn.13f104cf0;mov rax, qword [r15];mov rcx, r15": 2,
                "mov al, byte [rbx];cmp al, ;je ;movzx r15d, word [rbp - ];xor r12d, r12d": 3,
                "cmp eax, ;je ;test rbx, rbx;je ;movzx r15d, word [var_22h]": 2,
                "movaps xmm0, xmmword [rbp - ];xor ecx, ecx;movdqu xmmword [rsi], xmm0;mov rbx, rcx;movaps xmmword [rbp - ], xmm0": 6,
                "lea r14, [r12 + rbx];mov r8, qword [rbp + ];mov rdx, qword [rbp - ];call fcn.13f0e29c0;lea rdx, [r12 + 1]": 1,
                "movzx r9d, word [var_20h];mov r8, rbx;mov rdx, r12;lea rcx, [rbp - ];call fcn.13f0e29c0": 1,
                "mov rax, rsp;push r14;sub rsp, ;mov qword [var_20h], ;mov qword [rax + ], rbx": 5,
                "mov qword [arg_d0h], rax;test rax, rax;je ;mov rax, qword [r14];test rax, rax": 1,
                "mov rdx, qword [rax + ];test rdx, rdx;jne ;lea rdx, [rax + ];lea rcx, [var_78h]": 4,
                "movups xmm0, xmmword [rax];movups xmmword [rbx + ], xmm0;movups xmm1, xmmword [rax + ];movups xmmword [rbx + ], xmm1;lea rcx, [var_48h]": 4,
                "test sil, 1;je ;lea rcx, [var_78h];call fcn.13f0b2810;mov eax, 2": 3,
                "call fcn.13f0b2810;mov eax, 3;lea r11, [var_90h];mov rbx, qword [r11 + ];mov rsi, qword [r11 + ]": 23,
                "mov r8b, sil;mov rdx, rax;mov rcx, rbx;call fcn.13f0fa3e0;lea rax, []": 8,
                "pop rdi;pop rsi;ret;mov rax, rsp;push rsi": 20,
                "test rax, rax;mov rax, rsp;push rsi;push rdi;push r14": 2,
                "je ;cmp qword [rcx], rsi;jne ;lea ecx, [rsi + ];mov rax, rsp": 1,
                "lea ecx, [rsi + ];mov rax, rsp;push rsi;push rdi;push r14": 1,
                "mov qword [rbx], rax;jmp ;mov rax, rsp;push r14;sub rsp, ": 1,
                "call fcn.13f0fa968;jmp ;xor ebx, ebx;mov qword [rdi], rbx;test sil, 1": 4,
                "mov qword [rbx], rcx;and qword [rbx + ], 0;lea rdx, [arg_a0h];mov rcx, rax;call fcn.13f0fdd18": 12,
                "pop r14;ret;int3;mov rax, rsp;push r14": 4,
                "mov rcx, rbx;call fcn.13f0b2b00;mov rcx, rax;call fcn.13f0f1598;mov r13, rax": 5,
                "mov byte [var_31h], r12b;lea rdx, [var_40h];mov rcx, rbx;call fcn.13f0b2b00;mov rcx, rax": 5,
                "mov word [rdi + ], ax;jmp ;mov qword [rdi], r12;mov byte [rdi + 8], 1;movzx eax, word [rdi + ]": 11,
                "jmp ;mov edx, r12d;test edx, edx;mov rax, rsp;push r14": 1,
                "mov byte [r14], ;lea r15, [r14 + 1];mov qword [var_38h], r15;mov rcx, rdi;call fcn.13f0fa378": 3,
                "mov dword [var_40h], r12d;xor ecx, ecx;mov ebx, ecx;mov dword [var_34h], ecx;lea r14, [rbp - ]": 3,
                "dec al;cmp al, ;ja ;cmp qword [rbp - ], rcx;jne ": 3,
                "mov rax, qword [r13];mov rcx, r13;call qword [rax + ];movzx esi, ax;xor ecx, ecx": 3,
                "jne ;cmp byte [rdi + 8], r11b;jne ;mov rcx, qword [rdi];test rcx, rcx": 5,
                "jae ;mov byte [var_30h], 1;cmp r12d, ;jl ;inc dword [var_34h]": 2,
                "call fcn.13f0b2b00;mov rcx, rax;call fcn.13f0f1598;mov r13, rax;mov qword [var_50h], rax": 1,
                "lea rdx, [var_28h];mov rcx, rbx;call fcn.13f0b2b00;mov rcx, rax;call fcn.13f0f03c8": 1,
                "mov qword [var_28h], r15;mov byte [var_20h], r12b;mov dword [var_30h], r12d;xor r14d, r14d;mov ebx, r14d": 2,
                "mov dword [var_24h], ebx;mov rdx, rsi;mov rcx, rdi;call fcn.13f104b18;test al, al": 2,
                "jmp ;xor esi, esi;lea r14, [rbp - ];mov rax, rsp;push rbp": 1,
                "mov rbp, r9;mov rbx, r8;mov r14, rdx;lea rdx, [rax + ];mov r13, qword [arg_f0h]": 8,
                "mov rbx, r8;mov r14, rdx;lea rdx, [rax + ];mov r13, qword [arg_f0h];mov rcx, r13": 8,
                "lea rdx, [rax + ];mov r13, qword [arg_f0h];mov rcx, r13;call fcn.13f0b2b00;mov rcx, rax": 7,
                "movdqu xmmword [var_60h], xmm0;movups xmm1, xmmword [rbx];movdqu xmmword [var_70h], xmm1;mov rcx, qword [arg_d0h];mov r10, qword [rcx]": 7,
                "movups xmm1, xmmword [rbx];movdqu xmmword [var_70h], xmm1;mov rcx, qword [arg_d0h];mov r10, qword [rcx];mov byte [var_40h], 0": 7,
                "jmp ;and qword [rbx], 0;mov byte [rbx + 8], 1;mov rax, qword [r15];mov edx, ": 2,
                "call qword [rax + ];test al, al;je ;mov rcx, rbx;call fcn.13f0fa378": 2,
                "inc rsi;mov al, byte [rsi];test al, al;jne ;jmp ": 4,
                "or dword [rdi], 2;mov rdx, rbp;mov rcx, rbx;call fcn.13f104b18;test al, al": 2,
                "je ;or dword [rdi], 1;movups xmm0, xmmword [rbx];movdqu xmmword [r14], xmm0;mov rax, r14": 4,
                "mov word [rbx + ], ax;jmp ;mov rax, rsp;mov qword [rax + 8], rcx;push rbp": 1,
                "cmp qword [rbp - ], r13;jne ;mov word [var_22h], r13w;jmp ;mov rax, qword [rdi]": 3,
                "call qword [r10 + ];mov r14, r15;mov rdx, r12;mov rcx, rbx;call fcn.13f104b18": 3,
                "mov r14, r15;mov rdx, r12;mov rcx, rbx;call fcn.13f104b18;mov edi, ": 3,
                "mov qword [rbx], r13;mov byte [rbx + 8], 1;movzx eax, word [rbx + ];cmp ax, word [rbp + 3];jne ": 2,
                "xor r9d, r9d;test al, al;jne ;cmp byte [rbx + 8], r9b;jne ": 4,
                "mov byte [rbx + 8], 1;movzx eax, word [rbx + ];cmp ax, word [rbp - ];jne ;mov r13b, 1": 2,
                "cmp ax, word [rbp + 7];jne ;test esi, ;jne ;mov esi, ": 2,
                "mov r14, r8;lea rdi, [var_30h];call fcn.13f104b18;mov esi, ;mov r9d, 1": 1,
                "mov r9d, 1;test al, al;jne ;cmp byte [rbx + 8], al;jne ": 4,
                "mov byte [rbx + 8], r9b;mov rax, qword [r15];movzx edx, word [rbx + ];xor r8d, r8d;mov rcx, r15": 1,
                "call fcn.13f104b18;test al, al;jne ;mov r13d, ;cmp byte [rbx + 8], 0": 2,
                "movzx eax, word [r8];jmp ;mov rax, qword [rcx];call qword [rax + ];cmp r13w, ax": 2,
                "movzx edx, word [rbx + ];xor r8d, r8d;mov rcx, r15;call qword [rax + ];lea ecx, [rax - ]": 1,
                "call fcn.13f104b18;xor ecx, ecx;test al, al;lea eax, [rcx + 1];cmovne ecx, eax": 1,
                "mov eax, ecx;mov rcx, qword [var_10h];xor rcx, rsp;call fcn.13f10e4e0;mov rbx, qword [arg_a0h]": 2,
                "mov r13, rax;mov qword [var_58h], rax;mov rcx, qword [var_68h_2];jmp ;lea rdx, [rbp - ]": 2,
                "je ;jmp ;mov r15d, r11d;mov dword [var_50h_2], r11d;mov rax, qword [r13]": 2,
                "mov r15d, r11d;mov dword [var_50h_2], r11d;mov rax, qword [r13];mov rcx, r13;call qword [rax + ]": 2,
                "je ;mov word [rdi + ], ax;jmp ;mov qword [rdi], r11;mov r10d, 1": 4,
                "sar rax, 1;cmp rax, ;jae ;lea rcx, [];mov r8b, byte [rax + rcx]": 2,
                "add byte [rax + rbx], cl;jmp ;lea rax, [rbp - ];mov r9, qword [rbp - ];mov r8, qword [rbp - ]": 3,
                "call fcn.13f0f0fa8;mov r13, rax;mov qword [var_58h], rax;mov rcx, qword [rbp - ];test rcx, rcx": 1,
                "lea rdx, [var_78h_2];mov rcx, r15;call fcn.13f0b2b00;mov rcx, rax;call fcn.13f0e3570": 1,
                "jae ;mov r8, qword [rcx + ];call fcn.13f0f222c;jmp ;test r8b, r8b": 1,
                "je ;cmp rdx, 8;jae ;mov r14, qword [rcx + ];cmp rdx, r14": 1,
                "test rdx, rdx;jne ;cmp qword [rcx + ], 8;mov qword [rcx + ], rdi;jb ": 1,
                "mov qword [rax + 8], rcx;push rdi;push r12;push r13;push r14": 9,
                "lea r8, [];lea r14, [];mov r9, rbx;mov rdx, rbx;lea rcx, [rdi + ]": 8,
                "movsx edx, byte [rsi + ];cmp byte [rdi + ], r13b;jne ;cmp edx, 2;ja ": 7,
                "mov rdx, rbx;lea rcx, [rdi + ];call fcn.13f10f858;test r12b, r12b;je ": 7,
                "mov r8, rbx;lea rdx, [];lea rcx, [rdi + ];call fcn.13f10e580;mov r8, rbx": 7,
                "mov r8, rbx;lea rdx, [];lea rcx, [rdi + ];call fcn.13f10e580;lea r11, [var_60h]": 6,
                "xor rax, rsp;mov qword [var_b8h], rax;mov r14b, r8b;mov rdi, rcx;mov qword [var_40h], rcx": 2,
                "mov r14b, r8b;mov rdi, rcx;mov qword [var_40h], rcx;call fcn.13f117ef8;mov r15, rax": 2,
                "lea rcx, [];call fcn.13f0eff58;mov qword [rdi + ], rax;lea r8, [var_88h];xor edx, edx": 2,
                "movaps xmmword [var_60h], xmm1;movsd xmm0, qword [var_a8h];movsd qword [var_70h], xmm0;mov eax, dword [var_b0h];mov dword [var_78h], eax": 2,
                "mov qword [var_48h], ;mov qword [rax + ], rbx;mov qword [rax + ], rsi;mov qword [rax + ], rdi;mov rax, qword []": 3,
                "lea rcx, [var_50h];call fcn.13f0ea120;movups xmm0, xmmword [rax];movups xmmword [var_80h], xmm0;movups xmm1, xmmword [rax + ]": 2,
                "movups xmm0, xmmword [rax];movups xmmword [var_80h], xmm0;movups xmm1, xmmword [rax + ];movups xmmword [var_90h], xmm1;movsd xmm0, qword [rax + ]": 2,
                "mov qword [rbx + ], r12;mov qword [rbx + ], r12;test r15b, r15b;lea rdi, [];jne ": 2,
                "lea rdi, [];jne ;mov rdi, qword [r14 + ];lea rcx, [var_50h];call fcn.13f0ea120": 2,
                "movzx ecx, word [rax];mov word [rbx + ], cx;mov rax, qword [r14 + ];movzx ecx, word [rax];mov word [rbx + ], cx": 2,
                "xor eax, eax;mov qword [rcx + ], rax;mov qword [rcx + ], rax;mov qword [rcx + ], rax;xor edx, edx": 7,
                "je ;mov eax, ecx;movsxd rdi, eax;mov eax, dword [r9 + ];and eax, ": 5,
                "call fcn.13f0f1d3c;add r14, 2;dec r12;jne ;jmp ": 4,
                "xor ecx, ecx;mov rbx, rcx;jmp ;lea r14, [rbp - ];cmp qword [rbp - ], 8": 4,
                "cmovae rax, qword [rbp - ];sub r15, rdi;lea rdi, [rax + rdi*2];je ;xor r14d, r14d": 3,
                "xor edi, edi;mov qword [r13 + ], rdi;movups xmm0, xmmword [rsi];movaps xmmword [rbp - ], xmm0;test rbx, rbx": 2,
                "mov qword [rax + ], rsi;mov qword [rax + ], rdi;mov rbx, r9;mov rdi, r8;mov r15d, edx": 2,
                "movups xmm0, xmmword [rax];movups xmmword [rsi + ], xmm0;movups xmm1, xmmword [rax + ];movups xmmword [rsi + ], xmm1;lea rcx, [var_38h]": 2,
                "jmp ;mov rsi, qword [];test rsi, rsi;jne ;xor edx, edx": 8,
                "cdqe;mov qword [], rax;lea rcx, [arg_38h];call fcn.13f0e973c;mov rsi, qword []": 8,
                "lea rcx, [arg_38h];call fcn.13f0e973c;mov rsi, qword [];mov rcx, rbx;call fcn.13f0f03c8": 1,
                "jne ;lea ecx, [rbx + ];call fcn.13f10eae8;mov rsi, rax;test rax, rax": 4,
                "jne ;lea ecx, [rbx + ];call fcn.13f10eae8;mov rsi, rax;mov qword [var_60h], rax": 2,
                "xor rax, rsp;mov qword [rbp + ], rax;mov r15, r8;mov qword [var_38h], r8;mov qword [var_68h], rdx": 2,
                "lea rdx, [var_60h_2];call fcn.13f0b2b00;mov rcx, rax;call fcn.13f0f0c18;mov r12, rax": 1,
                "mov r13d, r14d;cmp qword [rdi + ], r13;ja ;mov r8d, r13d;sub r8, qword [rdi + ]": 2,
                "mov rax, qword [r12];mov rcx, r12;call qword [rax + ];movzx r14d, ax;lea rbx, [rbp + ]": 2,
                "mov rcx, rdi;call fcn.13f104cf0;lea rax, [rbx + 1];cmp byte [rax], 0;cmovg rbx, rax": 1,
                "mov dword [var_24h], eax;lea rdx, [rbp + ];mov rcx, r12;call fcn.13f10a454;jmp ": 2,
                "xor r10d, r10d;mov qword [rbp + ], r10;mov word [rbp + ], r10w;test byte [rsi + ], 8;je ": 2,
                "movzx r9d, r9b;cmp r8, 3;cmovne r9d, r11d;add r8, r11;cmp r8, 4": 3,
                "jmp ;mov r14, r10;mov ebx, dword [rsi + ];and ebx, ;cmp ebx, ": 2,
                "je ;cmp ebx, ;jne ;test r9b, r9b;jne ": 2,
                "je ;lea rdx, [var_60h_2];call fcn.13f0b2b00;mov rcx, rax;call fcn.13f0f0e78": 1,
                "mov rdi, r11;movzx edx, si;lea rcx, [var_40h];call fcn.13f0f1d3c;mov qword [arg_8h], rbx": 1,
                "push rbx;sub rsp, ;and dword [var_20h], 0;mov rbx, rdx;call fcn.13f119b18": 2,
                "and dword [var_20h], 0;mov rbx, rdx;call fcn.13f119b18;mov qword [rbx], rax;mov rax, rbx": 2,
                "lea r8, [rdi + rdi];lea rdx, [rsi + r14*2];lea rcx, [rcx + rax*2];call fcn.13f10e580;cmp qword [rbx + ], 8": 3,
                "mov word [rax + rbp*2], r15w;mov rbp, qword [arg_48h];mov rsi, qword [arg_50h];mov rax, rbx;mov rbx, qword [arg_40h]": 12,
                "pop r14;pop rdi;ret;lea rcx, [];call fcn.13f0e91f0": 8,
                "mov rax, qword [rbx];jmp ;mov rax, rbx;mov word [rax + rdi*2], bp;mov rbp, qword [arg_38h]": 5,
                "mov rcx, rbx;mov r8, rdi;call fcn.13f0fdefc;jmp ;xor r8d, r8d": 4,
                "sub rsp, ;movzx ebp, r8w;mov rsi, rdx;mov rbx, rcx;cmp rdx, ": 8,
                "cmp r9, qword [rsp + ];cmovne ecx, r10d;xor eax, eax;test ecx, ecx;setne al": 3,
                "sub rsp, ;mov r10, r9;mov r9, qword [rsp + ];mov r11, r8;mov rbx, rdx": 4,
                "int3;mov qword [rsp + 8], rbx;push rdi;sub rsp, ;mov rdi, qword [rcx + ]": 5,
                "mov rcx, rdi;call fcn.13f118764;mov r8, rax;mov rdx, rdi;mov rcx, rbx": 5,
                "call fcn.13f0d43a0;mov rax, rbx;mov rbx, qword [rsp + ];add rsp, ;pop rdi": 2,
                "ret;push rbx;sub rsp, ;xor eax, eax;mov qword [rdx + ], 7": 2,
                "xor r8d, r8d;lea rdx, [rbp - ];mov rcx, rbx;call fcn.13f10a8f4;cmp qword [rbp - ], rbx": 2,
                "mov rdi, rcx;mov esi, 1;mov r14d, ;jne ;mov rcx, qword [rcx]": 1,
                "and qword [rbx], 0;mov byte [rbx + 8], sil;cmp qword [rdi], 0;jne ;cmp qword [rbx], 0": 1,
                "mov byte [rbx + 8], sil;cmp qword [rdi], 0;jne ;cmp qword [rbx], 0;je ": 1,
                "cmp qword [rcx + ], 8;mov qword [rcx + ], rdx;jb ;mov rax, qword [rcx];jmp ": 2,
                "ret;lea rcx, [];call fcn.13f0e91f0;int3;push rbx": 2,
                "mov rbx, rcx;mov rcx, qword [rcx + ];movzx r14d, r9w;mov rsi, r8;mov rdi, rdx": 5,
                "mov rdi, rdx;cmp rcx, rdx;jb ;or rax, ;sub rax, rcx": 5,
                "mov rax, qword [];xor rax, rsp;mov qword [var_10h], rax;mov rsi, rdx;mov qword [arg_8h], rbx": 1,
                "and qword [var_20h], rax;mov byte [var_30h], al;lea rdx, [var_30h];lea ebx, [rax + 1];jmp ": 5,
                "cmp rdx, r8;mov rbx, rdx;cmova rdi, r15;mov r14, rcx;mov ebp, r15d": 6,
                "test rdi, rdi;je ;mov rcx, qword [rsi + 8];test rcx, rcx;je ": 6,
                "cmp byte [rcx + ], 0;mov rbx, r8;mov rsi, rcx;je ;mov rdi, qword [r8 + ]": 6,
                "test rbp, rbp;je ;mov rdx, rax;sub rdx, rdi;mov cl, byte [rdi]": 13,
                "sub rdx, rdi;mov cl, byte [rdi];mov byte [rdx + rdi], cl;mov rax, rsp;push rbp": 1,
                "mov cl, byte [rdi];mov byte [rdx + rdi], cl;mov rax, rsp;push rbp;mov rbp, rsp": 1,
                "movups xmmword [rbp + ], xmm0;movups xmm1, xmmword [rax + ];movups xmmword [rbp + ], xmm1;movsd xmm0, qword [rax + ];movsd qword [rbp + ], xmm0": 5,
                "je ;lea rcx, [rdi + 8];mov rdx, rax;call fcn.13f0e2d20;mov rcx, rbx": 5,
                "call fcn.13f0e2d20;mov rcx, rbx;call fcn.13f10ef88;cmp qword [rdi + 8], 0;je ": 5,
                "je ;mov rbx, qword [rdi + ];test rbx, rbx;jne ;lea rbx, [rdi + ]": 4,
                "test rdi, rdi;je ;mov rdx, rax;sub rdx, rbx;mov cl, byte [rbx]": 8,
                "mov rdx, r14;lea rcx, [arg_70h];call fcn.13f10632c;cmp rax, ;jne ": 3,
                "lea rax, [];push rsi;push rdi;push r14;sub rsp, ": 1,
                "je ;mov rcx, rdi;call fcn.13f10e55c;mov rax, rdi;push rsi": 1,
                "mov r8b, sil;mov rdx, rax;mov rcx, rbx;call fcn.13f107740;lea rax, []": 8,
                "jne ;mov rcx, rbx;call fcn.13f0e2610;inc rsi;mov al, byte [rsi]": 3,
                "mov r9d, 1;cmp eax, ;je ;mov byte [rbx + 9], al;jmp ": 2,
                "jne ;mov byte [var_30h], al;mov rcx, rbx;lea rdi, [var_2fh];call fcn.13f0e2610": 2,
                "mov r15, qword [rbp + ];mov qword [rbp - ], r15;mov rbx, qword [rbp + ];mov qword [var_48h], rbx;xor r12d, r12d": 2,
                "xor al, al;mov byte [var_20h], al;mov qword [rbp - ], ;and qword [rbp - ], 0;mov byte [rbp - ], al": 1,
                "mov rdx, qword [var_30h];mov rcx, rdi;call fcn.13f0e28e0;test al, al;jne ": 1,
                "je ;mov byte [rdi + 9], al;jmp ;and qword [rdi], 0;mov r10d, 1": 2,
                "mov cl, byte [rdx];jmp ;cmp cl, byte [rdi + 9];je ;add rax, r10": 1,
                "jmp ;cmp cl, byte [rdi + 9];je ;add rax, r10;mov cl, byte [rax]": 1,
                "jne ;mov qword [rdi + ], rax;mov r8, rsi;xor edx, edx;mov rcx, rdi": 1,
                "pop r13;pop r12;pop rdi;ret;mov qword [arg_8h], rcx": 1,
                "mov qword [rcx + ], rax;mov r8, rdx;xor edx, edx;call fcn.13f105104;call fcn.13f10b1a0": 2,
                "mov qword [rax + ], rdi;mov rdi, r9;mov rsi, r8;mov r15d, edx;mov r12, rcx": 3,
                "mov r15d, edx;mov r12, rcx;xor r13d, r13d;mov dword [arg_38h], r13d;xor edx, edx": 3,
                "mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;mov qword [arg_18h], r8;push rdi;sub rsp, ": 1,
                "mov rbx, r9;mov rdi, rdx;mov rsi, rcx;test r9, r9;je ": 1,
                "mov r8, qword [arg_40h];cmp eax, ;jne ;mov byte [rdi], 1;inc r8": 1,
                "lea rdx, [rbp + ];mov rcx, r15;call fcn.13f104cd0;mov rax, qword [r15];mov rcx, r15": 2,
                "mov rcx, r15;call qword [rax + ];cdq;mov esi, eax;xor esi, edx": 2,
                "mov dword [var_30h], esi;mov r13d, esi;mov qword [var_28h], r13;cmp qword [rbx + ], r13;ja ": 2,
                "mov cl, byte [rdi];cmp cl, ;je ;mov r13d, 1;test cl, cl": 2,
                "mov cl, byte [rdi];cmp cl, ;jne ;mov r13, qword [var_28h];mov esi, dword [var_30h]": 2,
                "call qword [rax + ];mov eax, dword [var_28h];mov dword [var_28h], eax;lea rdx, [rbp + ];mov rcx, r15": 4,
                "call fcn.13f0cd290;cmp qword [rbp + ], ;jb ;mov rcx, qword [rbp + ];call fcn.13f10e55c": 4,
                "cmovne r9d, r11d;add r8, r11;cmp r8, 4;jb ;mov rsi, qword [rdi + ]": 1,
                "mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax;mov rbx, r9;mov r14, r8": 1,
                "mov rcx, qword [rbp - ];call fcn.13f10e55c;mov rax, rsi;mov rcx, qword [rbp + ];xor rcx, rsp": 1,
                "mov rax, rsi;mov rcx, qword [rbp + ];xor rcx, rsp;call fcn.13f10e4e0;mov rbx, qword [rsp + ]": 1,
                "push r14;push r15;mov rbp, rsp;sub rsp, ;mov qword [rbp - ], ": 1,
                "mov rax, qword [];xor rax, rsp;mov qword [rbp - 8], rax;mov rbx, r9;mov r12, r8": 1,
                "movsx rax, byte [rax + rbx];mov cl, byte [rbp + rax - ];mov byte [rdx + rbx], cl;inc rbx;cmp rbx, rsi": 1,
                "je ;and dword [rsi], 0;and eax, ;cmp eax, 1;jne ": 5,
                "mov rdx, qword [rbp - ];lea r9, [rbp - ];push rbp;push rbx;push rsi": 1,
                "cmp eax, 4;jne ;movsd xmm0, qword [];jmp ;xorps xmm0, xmm0": 2,
                "xorps xmm0, xmm0;movsd qword [rbp - ], xmm0;test r12d, r12d;je ;lea rcx, [rbp - ]": 2,
                "jne ;xorps xmm2, xmm2;call fcn.13f10dc74;jmp ;mov r8d, dword [rbp - ]": 3,
                "call fcn.13f10dc74;jmp ;mov r8d, dword [rbp - ];call fcn.13f10dc54;mov edi, 1": 3,
                "mov rax, rsp;mov qword [rax + ], rbx;mov qword [rax + ], rbp;mov qword [rax + ], rsi;push rdi": 5,
                "mov rdi, rcx;movzx ecx, byte [rcx];mov r14, r9;cmovne rsi, rdx;mov r15d, r8d": 5,
                "jbe ;call fcn.13f10fca8;mov dword [rax], ;test r14, r14;je ": 4,
                "mov dword [r14], 1;mov eax, ;cmp bl, r15b;cmove edi, eax;mov eax, edi": 2,
                "push r13;push r14;push r15;sub rsp, ;mov r12, r9": 6,
                "jmp ;inc rbx;test esi, esi;je ;lea eax, [rsi - 2]": 4,
                "test rax, rax;jne ;mov r14, qword [arg_88h];mov rbp, qword [arg_80h];jmp ": 2,
                "mov rbp, qword [arg_80h];jmp ;mov r13b, byte [arg_90h];cmp qword [arg_98h], rbx;jne ": 2,
                "lea rbp, [];mov r13b, al;mov qword [arg_88h], rdi;mov rcx, rsi;sub r13b, bpl": 2,
                "mov edx, eax;call fcn.13f10f83c;test rax, rax;jne ;mov rbp, qword [arg_70h]": 2,
                "sub rcx, rax;sub rcx, qword [var_28h];js ;test rcx, rcx;jg ": 2,
                "push rbx;sub rsp, ;mov rbx, rcx;call fcn.13f111fac;mov dword [rbx], eax": 3,
                "call fcn.13f11a4c0;test eax, eax;jne ;cmp edi, ebx;je ": 3,
                "mov dword [var_30h], ebx;mov r9, r14;mov r8d, ;mov rdx, rsi;xor ecx, ecx": 3,
                "mov qword [var_28h], rbp;mov dword [var_20h], edi;call fcn.13f11a8f0;test eax, eax;jne ": 3,
                "mov edx, ebx;cmp edi, ebx;mov ecx, 1;cmovl edx, edi;jmp ": 4,
                "movzx eax, word [rsi];cmp word [rbp], ax;jne ;add rbp, 2;add rsi, 2": 4,
                "jne ;add rbp, 2;add rsi, 2;sub edx, ecx;test edx, edx": 4,
                "xor eax, eax;test eax, eax;jne ;cmp edi, ebx;je ": 4,
                "jmp ;sub ecx, 2;mov rbx, qword [arg_40h];mov rbp, qword [arg_48h];mov rsi, qword [arg_50h]": 4,
                "mov rbx, qword [arg_40h];mov rbp, qword [arg_48h];mov rsi, qword [arg_50h];mov eax, ecx;add rsp, ": 4,
                "jne ;cmp rsi, r15;ja ;lea r8, [rsi + rsi];mov rdx, r12": 5,
                "movsxd rdi, eax;test eax, eax;jne ;mov r9d, esi;mov r8, r12": 5,
                "mov dword [var_28h], ebx;mov qword [var_20h], rbx;call fcn.13f117c0c;movsxd rdi, eax;test eax, eax": 5,
                "jne ;mov edi, ;jmp ;movzx ecx, byte [rbx + rbp];mov word [r13 + rbx*2], cx": 5,
                "mov qword [rax + 8], rbx;mov qword [rax + ], rbp;mov qword [arg_10h], rbx;push rdi;sub rsp, ": 1,
                "push r12;push r14;push r15;sub rsp, ;mov rax, qword [arg_90h]": 4,
                "call fcn.13f10e580;mov rdi, rbx;jmp ;mov dword [var_40h], 1;mov dword [var_38h], r14d": 4,
                "mov qword [rax + ], rsi;mov qword [rax + ], rdi;mov qword [rax + ], r14;push r15;sub rsp, ": 13,
                "jmp ;cmp byte [rbx], ;jne ;inc rbx;mov al, byte [rbx]": 3,
                "mov r9b, ;sub al, r9b;test dl, al;je ;cmp byte [rbx], ": 3,
                "cmp byte [rsi], ;jne ;inc rax;movzx ecx, byte [rax];call fcn.13f10f5ec": 3,
                "sub al, r8b;test dl, al;jne ;mov al, byte [rbx + 2];sub al, r9b": 3,
                "mov rbx, qword [arg_30h];mov eax, edi;mov rdi, qword [arg_40h];add rsp, ;pop r15": 2,
                "xor r15d, r15d;cmp byte [rdx], ;jne ;lea r15d, [rax - ];inc rbx": 3,
                "jne ;lea r15d, [rax - ];inc rbx;cmp byte [rbx], ;je ": 5,
                "test eax, eax;jne ;call fcn.13f117ef8;mov rcx, qword [rax];mov al, byte [rcx]": 2,
                "jg ;mov al, byte [rbx];inc r14;inc edi;sub al, ": 2,
                "movzx ecx, byte [rbx];call fcn.13f10f3fc;test eax, eax;jne ;cmp ebp, edi": 2,
                "test eax, eax;jne ;cmp ebp, edi;jge ;cmp byte [rsp + rbp + ], 5": 2,
                "movsxd r11, edi;mov eax, r14d;imul edi;sar edx, 1;mov eax, edx": 2,
                "inc r8;jmp ;mov eax, dword [rsi + r8*4];movsx edx, byte [rsp + r9 + ];lea ecx, [rax + rax*4]": 1,
                "sub al, ;test al, ;jne ;mov r13, rbx;inc rbx": 2,
                "pop rbp;ret;xor ebp, ebp;jmp ;int3": 2,
                "cmp byte [rdx], ;mov dword [var_20h], ebp;jne ;lea r15d, [rax - ];inc rbx": 2,
                "dec dword [rdi];inc rbx;cmp byte [rbx], ;je ;movsx edx, byte [rbx]": 1,
                "movsxd rax, esi;test esi, esi;jle ;lea rcx, [var_38h];cmp byte [rcx + rax - 1], 0": 1,
                "inc dword [rdi];dec rax;dec esi;test rax, rax;jg ": 1,
                "sub r10d, esi;imul r10d;add edx, r10d;sar edx, 2;mov eax, edx": 1,
                "shr eax, ;add edx, eax;imul ecx, edx, 7;cmp r10d, ecx;setne bpl": 1,
                "je ;lea r12d, [rsi + 1];cmp esi, ;jge ;movzx eax, byte [rbx]": 1,
                "ret;movzx eax, word [rcx + 2];test eax, ;jne ;xor eax, eax": 1,
                "test word [rbx + 2], r11w;je ;xorps xmm0, xmmword [];movss dword [rbx], xmm0;mov eax, 1": 3,
                "or cx, ax;lea eax, [r10 + ];mov r11d, ;and bp, r11w;mov word [rbx + 2], cx": 3,
                "cmp word [rbx], di;je ;jmp ;mov word [rbx + 2], bp;mov word [rbx], di": 3,
                "cmp ax, 2;je ;mov rcx, rdi;call fcn.13f10bbec;test ax, ax": 4,
                "cmp ax, 2;je ;mov rcx, rdi;call fcn.13f10bc34;lea rcx, [arg_58h]": 4,
                "lea rcx, [arg_58h];mov r14d, ;movzx ebx, word [rax];and bx, r14w;call fcn.13f10bc34": 4,
                "mov r12d, ;mov ebx, r15d;test esi, esi;jle ;mov r14, rdi": 13,
                "jl ;test ax, ax;je ;movsx edx, word [arg_50h];movsx eax, word [arg_48h]": 12,
                "movsx eax, word [arg_48h];movss xmm1, dword [arg_58h];mov ecx, edx;sub ecx, eax;cmp ecx, ": 4,
                "inc ecx;cmp rax, rsi;jge ;movss xmm0, dword [rdi + rax*4];ucomiss xmm0, xmm6": 4,
                "ucomiss xmm0, xmm6;jp ;jne ;lea eax, [rsi - 1];cmp ecx, eax": 4,
                "cmp ecx, esi;jne ;dec ecx;movsxd rdx, ecx;cmp r15, rdx": 9,
                "dec ecx;movsxd rdx, ecx;cmp r15, rdx;jge ;mov eax, dword [rdi + rdx*4 - 4]": 3,
                "mov eax, dword [rdi + rdx*4 - 4];mov dword [rdi + rdx*4], eax;dec rdx;cmp rdx, r15;jg ": 3,
                "dec rdx;cmp rdx, r15;jg ;and dword [arg_58h], 0;movss dword [r14], xmm1": 3,
                "ucomiss xmm1, xmm6;movss dword [r14], xmm1;jp ;jne ;mov ecx, ebx": 1,
                "jne ;and dword [rdi + rsi*4 - 4], 0;dec r15;sub r13, 4;sub r14, 4": 1,
                "movsxd rax, ebx;lea rcx, [arg_50h];lea rbx, [rdi + rax*4];movss dword [arg_58h], xmm0;mov rdx, rbx": 1,
                "add r13, 4;add r14, 4;cmp ebx, esi;jl ;jmp ": 1,
                "mov dword [rdi + rcx*4 + 4], edx;mov rax, rdi;movaps xmm6, xmmword [var_30h];add rsp, ;pop r15": 1,
                "mov ebp, r9d;mov rsi, r8;mov r14d, edx;mov rbx, rcx;test r9d, r9d": 3,
                "mov edi, 1;cmp edx, edi;je ;movss xmm0, dword [rcx];xorps xmm2, xmm2": 2,
                "jp ;je ;movss xmm6, dword [rcx + 4];ucomiss xmm6, xmm2;jp ": 2,
                "ucomiss xmm1, xmm2;jp ;je ;addss xmm6, xmm0;movss xmm0, dword [rcx + ]": 2,
                "test edx, edx;jle ;movaps xmm0, xmm2;mulss xmm0, dword [rcx];lea rcx, [var_30h]": 4,
                "movzx esi, ax;cmp r12w, ax;jg ;lea ebx, [r12 + 1];cmp ax, 2": 10,
                "movss dword [r12 + rcx], xmm0;add rcx, 4;cmp r14d, 4;jl ;jmp ": 4,
                "mov rax, rdi;mov rcx, qword [var_20h];xor rcx, rsp;call fcn.13f10e4e0;mov rbx, qword [arg_b0h]": 4,
                "je ;movss xmm2, dword [r8];ucomiss xmm2, dword [];jp ;je ": 4,
                "mov edx, esi;mov rcx, rbp;call fcn.13f10c2d8;mov edx, esi;mov rcx, rbp": 4,
                "mov rax, rbp;mov rbp, qword [arg_38h];add rsp, ;pop rdi;ret": 3,
                "call fcn.13f10dffc;movsx edx, word [arg_48h];lea rcx, [arg_50h];call fcn.13f10bc3c;movss xmm0, dword [arg_50h]": 3,
                "call fcn.13f10c2b4;lea rax, [var_50h];lea r8, [var_40h];lea rcx, [var_30h];mov r9d, edi": 4,
                "call fcn.13f10c1ec;movaps xmm6, xmm0;ucomiss xmm6, dword [];jp ;je ": 4,
                "pop rbp;ret;movzx edx, word [rcx + 6];mov eax, ;and dx, ax": 4,
                "mov eax, ;and dx, ax;cmp dx, ax;jne ;test byte [rcx + 6], ": 5,
                "jne ;test byte [rcx + 6], ;mov qword [arg_8h], rbx;mov qword [arg_10h], rbp;mov qword [arg_18h], rsi": 1,
                "jne ;cmp word [rcx + 2], ax;jne ;cmp word [rcx], ax;mov eax, 1": 4,
                "cmp word [rcx + 2], ax;jne ;cmp word [rcx], ax;je ;neg dx": 4,
                "and cx, bp;cmp cx, bp;jne ;test byte [rbx + 6], ;jne ": 5,
                "movzx eax, r10w;jmp ;xor edi, edi;test cx, cx;jne ": 5,
                "add r11w, ax;test si, si;mov eax, edi;setne al;movzx esi, ax": 3,
                "mov ecx, r15d;shl dx, cl;test si, si;setne al;movzx esi, dx": 3,
                "mov ecx, r9d;or ax, r8w;shr dx, cl;mov word [rbx + 6], dx;mov word [rbx + 4], ax": 2,
                "mov word [rbx + 4], ax;or word [rbx + 6], r14w;movzx eax, word [rbx + 6];cmp bp, si;jb ": 2,
                "add ax, r10w;mov word [rbx + 6], ax;jmp ;cmp ax, r14w;jne ": 2,
                "and bx, r14w;call fcn.13f10d47c;movzx ecx, word [rax];and cx, r14w;cmp cx, bx": 10,
                "movsd xmm0, qword [arg_58h];movsd qword [rdi], xmm0;jmp ;test ax, ax;jns ": 9,
                "lea rdx, [var_20h];lea rcx, [arg_50h];movsd qword [var_20h], xmm0;call fcn.13f10e41c;xor edx, edx": 2,
                "movsx eax, word [arg_48h];movsd xmm1, qword [arg_58h];movsd qword [arg_18h], xmm2;push rbp;push rbx": 1,
                "ucomisd xmm1, xmm6;movsd qword [r14], xmm1;jp ;jne ;mov ecx, ebx": 6,
                "jp ;jne ;and qword [rdi + rsi*8 - 8], 0;dec r15;sub r13, 8": 5,
                "dec ebx;jne ;mov r12d, ;jmp ;movsd xmm0, qword [r13]": 5,
                "subsd xmm0, xmm1;ucomisd xmm0, xmm6;movsd qword [arg_58h], xmm0;jp ;jne ": 5,
                "xor rax, rsp;mov qword [var_18h], rax;xor r12d, r12d;movaps xmm7, xmm2;mov r15d, edx": 6,
                "jle ;movaps xmm0, xmm2;mulsd xmm0, qword [rcx];lea rcx, [var_38h];movsd qword [var_38h], xmm0": 6,
                "movsd xmm0, qword [rbp + rax*8 - ];ucomisd xmm0, qword [];movsd qword [rbp + rax*8 - ], xmm0;jp ;je ": 6,
                "cmp rax, rsi;jl ;mov rax, qword [var_40h];add r13d, ebx;sub r12, 8": 6,
                "mov r12, qword [arg_70h];mov rdx, rcx;mov r15, rdi;shl r15, 3;mov rcx, r12": 7,
                "mov rcx, rsi;movsd xmm2, qword [rbx];call fcn.13f10cf04;mov r14d, 1;jmp ": 3,
                "push rsi;push rdi;sub rsp, ;xor ebp, ebp;movaps xmmword [rax - ], xmm6": 9,
                "movaps xmm6, xmm2;mov edi, edx;mov rbx, rcx;test edx, edx;jle ": 9,
                "test edx, edx;jle ;cmp edx, 1;je ;lea rdx, [rax + 8]": 9,
                "call fcn.13f10c894;lea rsi, [rbx + 8];movsd xmm0, qword [arg_50h];subsd xmm6, xmm0;movsd qword [rbx], xmm0": 3,
                "jne ;mov qword [rbx + ], rbp;jmp ;lea rcx, [arg_58h];mov rdx, rsi": 6,
                "je ;mov qword [rbx + ], rbp;jmp ;movsd xmm6, qword [arg_50h];movsd qword [rbx], xmm6": 6,
                "movaps xmm6, xmmword [var_20h];mov rax, rbx;mov rbx, qword [arg_60h];add rsp, ;pop rdi": 6,
                "je ;movsd xmm0, qword [rcx];ucomisd xmm0, qword [];jp ;je ": 8,
                "test edx, edx;lea rcx, [var_30h];mov edx, edi;jle ;movsd xmm2, qword []": 8,
                "movsd xmm2, qword [];call fcn.13f10d210;jmp ;lea r8, [];neg ebx": 4,
                "jmp ;lea r8, [];neg ebx;call fcn.13f10d944;test bl, 1": 8,
                "ret;int3;int3;int3;jmp fcn.13f10c894": 5,
                "int3;int3;jmp fcn.13f10c894;int3;int3": 5,
                "lea rdx, [var_28h];lea rcx, [arg_48h];call fcn.13f10e4c0;cmp r15w, ax;jge ": 7,
                "call fcn.13f10e4c0;movsx edx, word [arg_48h];lea ecx, [r12 - ];cmp ecx, edx;jge ": 5,
                "movsd qword [arg_58h], xmm0;mov rdx, rbx;call fcn.13f10e4c0;mov edx, ;mov rcx, rbx": 4,
                "lea rcx, [arg_48h];call fcn.13f10e4c0;mov ebx, r12d;mov r12d, dword [arg_60h];inc r15": 4,
                "mov edi, 1;cmp edx, edi;je ;movsd xmm0, qword [rcx];xorps xmm2, xmm2": 2,
                "je ;movsd xmm0, qword [rcx];xorps xmm2, xmm2;ucomisd xmm0, xmm2;jp ": 2,
                "ucomisd xmm0, xmm2;jp ;je ;movsd xmm6, qword [rcx + 8];ucomisd xmm6, xmm2": 2,
                "jp ;jne ;addsd xmm1, xmm6;movaps xmm0, xmm1;jmp ": 2,
                "jmp ;addsd xmm2, xmm1;addsd xmm2, qword [rbx];movaps xmm0, xmm2;jmp ": 2,
                "movaps xmm0, xmm6;jmp ;movsd xmm0, qword [rcx];mov rbx, qword [arg_40h];movaps xmm6, xmmword [var_20h]": 2,
                "movaps xmm0, xmm2;mulsd xmm0, qword [rcx];lea rcx, [var_38h];movsd qword [var_38h], xmm0;call fcn.13f10d474": 4,
                "je ;lea rdx, [var_48h];lea rcx, [var_50h];movsd qword [var_48h], xmm0;call fcn.13f10e4c0": 4,
                "mov rcx, rdi;movsd xmm2, qword [var_38h];subsd xmm2, qword [var_48h];call fcn.13f10d48c;mov rax, rbx": 4,
                "je ;cmp bp, ax;jge ;mov qword [arg_18h], rbx;push rbp": 1,
                "call fcn.13f10d484;lea rsi, [rbx + 8];movsd xmm0, qword [arg_50h];mov qword [arg_8h], rbx;mov qword [arg_10h], rbp": 1,
                "lea rcx, [arg_50h];call fcn.13f10d484;lea rsi, [rbx + 8];movsd xmm0, qword [arg_50h];subsd xmm6, xmm0": 3,
                "call fcn.13f10e4b8;movsx edx, word [arg_58h];mov rcx, rsi;call fcn.13f10d484;subsd xmm6, qword [rsi]": 3,
                "add cx, cx;shr r8w, ;mov word [rdx], cx;or r8w, ax;movzx r9d, r8w": 4,
                "or r9w, ax;cmp bx, r8w;jbe ;mov word [rdx + 2], r8w;mov word [rdx], r9w": 4,
                "cmp ax, cx;jne ;mov word [rsi], bx;test byte [rdx + 2], ;jne ": 5,
                "mov eax, 2;jmp ;cmp bx, ax;jl ;mov rcx, rdx": 8,
                "mov rcx, rdx;call fcn.13f10ded8;test ax, ax;jle ;mov word [rsi], bx": 5,
                "call fcn.13f10ded8;test ax, ax;jle ;mov word [rsi], bx;movzx eax, bx": 5,
                "sub ax, ;and word [rdi + 2], cx;mov ecx, ;or word [rdi + 2], cx;mov word [rsi], ax": 4,
                "or word [rdi + 2], cx;mov word [rsi], ax;or eax, ;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h]": 4,
                "jne ;cmp word [r8 + 4], r10w;jne ;cmp word [r8 + 2], r10w;jne ": 5,
                "je ;test ax, ax;jne ;movzx eax, word [r8 + 4];movzx ecx, word [r8 + 2]": 5,
                "movzx eax, cx;movzx ecx, word [r8];mov word [r8], r10w;test dx, dx;je ": 5,
                "movzx ecx, r11w;shr ax, ;shr cx, ;movzx edi, bx;add di, di": 5,
                "ja ;movzx r11d, word [r8 + 4];movzx r10d, word [r8 + 2];movzx ebx, word [r8];movzx ecx, r10w": 4,
                "pop r14;ret;int3;mov eax, ;mov r8, rcx": 4,
                "movzx eax, dx;ret;mov r10d, ;sub r10w, r9w;sub r10w, r11w": 4,
                "ret;mov r10d, ;sub r10w, r9w;sub r10w, r11w;test r10w, r10w": 4,
                "mov r10d, ;sub r10w, r9w;sub r10w, r11w;test r10w, r10w;jle ": 4,
                "mov eax, ;mov dword [r8 + 2], edx;mov word [r8], dx;and cx, ax;or eax, ": 3,
                "movsx ecx, r10w;dec ecx;je ;dec ecx;je ": 3,
                "or r9w, word [r8];mov word [r8], dx;neg r9w;sbb eax, eax;ret": 3,
                "mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi;sub rsp, ;movzx eax, word [rdx + 6]": 4,
                "jl ;mov rcx, rdx;call fcn.13f10e160;test ax, ax;jle ": 3,
                "jne ;rol rcx, ;test cx, ;jne ;ret": 5,
                "jne ;ret;ror rcx, ;jmp loc.13f10f6b8;int3": 5,
                "lea rcx, [rax + ];call fcn.13f117df0;test eax, eax;sete al;add rsp, ": 6,
                "add rsp, ;ret;int3;int3;mov qword [rsp + 8], rbx": 6,
                "ret;int3;int3;int3;jmp fcn.13f10ef88": 6,
                "int3;mov r11, rcx;mov r10, rdx;cmp r8, ;jbe ": 7,
                "sub rdx, rcx;jae ;mov rax, r10;add rax, r8;cmp rcx, rax": 8,
                "mov rsi, r10;mov rcx, r8;rep movsb byte [rdi], byte ptr [rsi];pop rsi;pop rdi": 8,
                "ret;bt dword [], 2;jb ;test cl, 7;je ": 8,
                "test cl, 2;je ;mov ax, word [rdx + rcx];sub r8, 2;mov word [rcx], ax": 8,
                "movsb byte [rdi], byte ptr [rsi];out 5, al;add byte [rax - ], ch;out 5, al;add byte [rdi - ], bh": 7,
                "out 5, al;add bh, ch;out 5, al;add byte [rdx], al;out 5, eax": 7,
                "mov ecx, dword [rdx + 2];mov word [r10], ax;mov dword [r10 + 2], ecx;mov rax, r11;ret": 6,
                "mov rdx, qword [rdx + 3];mov byte [r10], al;mov word [r10 + 1], cx;mov qword [r10 + 3], rdx;mov rax, r11": 6,
                "movzx rax, word [rdx];mov ecx, dword [rdx + 2];mov rdx, qword [rdx + 6];mov word [r10], ax;mov dword [r10 + 2], ecx": 4,
                "mov ecx, dword [rdx + 2];mov rdx, qword [rdx + 6];mov word [r10], ax;mov dword [r10 + 2], ecx;mov qword [r10 + 6], rdx": 4,
                "mov rax, qword [rdx + rcx];mov r10, qword [rdx + rcx + 8];add rcx, ;mov qword [rcx - ], rax;mov qword [rcx - ], r10": 3,
                "jbe ;test cl, ;jne ;movups xmm0, xmmword [rdx + rcx];add rcx, ": 2,
                "movups xmm0, xmmword [rdx + rcx - ];movups xmm1, xmmword [rdx + rcx - ];jne ;movaps xmmword [rcx - ], xmm0;and r8, ": 1,
                "and r8, ;movaps xmm0, xmm1;mov r9, r8;shr r9, 4;je ": 1,
                "pop rbx;ret;lea rax, [];lea rdx, [arg_58h];lea rcx, [var_20h]": 1,
                "int3;mov qword [arg_10h], rdx;push rbx;sub rsp, ;lea rdx, [arg_38h]": 42,
                "mov byte [rcx + ], 0;mov qword [rcx + 8], rax;mov rax, rcx;ret;int3": 6,
                "mov qword [rcx], rax;call fcn.13f10edb8;test bl, 1;je ;mov rcx, rdi": 10,
                "dec rbp;cmp dword [rsi + ], 0;mov r12d, 1;cmovg r12d, dword [rsi + ];test rbp, rbp": 5,
                "int3;mov qword [arg_8h], rbx;push rdi;sub rsp, ;or edi, ": 5,
                "push rdi;sub rsp, ;or edi, ;mov rbx, rcx;test rcx, rcx": 6,
                "or eax, edi;jmp ;test byte [rcx + ], ;je ;call fcn.13f110cbc": 6,
                "jmp ;test byte [rcx + ], ;je ;call fcn.13f110cbc;mov rcx, rbx": 6,
                "test eax, eax;jns ;or edi, ;jmp ;mov rcx, qword [rbx + ]": 6,
                "and qword [rbx + ], 0;and dword [rbx + ], 0;mov eax, edi;mov rbx, qword [arg_30h];add rsp, ": 6,
                "mov qword [arg_10h], rbx;mov qword [arg_8h], rcx;push rdi;sub rsp, ;mov rbx, rcx": 28,
                "and dword [rcx + ], 0;jmp ;jmp fcn.13f10e55c;int3;int3": 1,
                "jmp ;movups xmm0, xmmword [rdx];movdqu xmmword [rcx], xmm0;mov rax, rbx;add rsp, ": 4,
                "mov rax, qword [];movzx eax, word [rax + rbx*2];and eax, ;jmp ;lea rcx, [var_20h]": 13,
                "and ecx, 8;cmp byte [var_38h], 0;je ;mov rax, qword [var_30h];and dword [rax + ], ": 7,
                "movsxd rbx, ecx;jne ;mov rax, qword [];mov qword [arg_10h], rbx;mov qword [arg_8h], rcx": 1,
                "mov ecx, 1;push rbx;sub rsp, ;cmp dword [], 0;movsxd rbx, ecx": 1,
                "imul rax, rax, 1;mov rcx, qword [];mov qword [rsp + rax + ], rcx;push rbx;sub rsp, ": 1,
                "add rsp, ;ret;int3;mov dword [arg_8h], ecx;sub rsp, ": 7,
                "mov rax, qword [arg_28h];mov qword [], rax;lea rax, [arg_28h];add rax, 8;mov qword [], rax": 8,
                "jne ;xor eax, eax;jmp ;push rbx;sub rsp, ": 1,
                "test r9, r9;jne ;xor eax, eax;jmp ;test rcx, rcx": 8,
                "mov ebx, ;mov dword [rax], ebx;call fcn.13f11b8a0;mov eax, ebx;jmp ": 42,
                "call fcn.13f11b8a0;mov eax, ebx;jmp ;test r8, r8;je ": 14,
                "call fcn.13f10e580;jmp ;mov r8, rdx;xor edx, edx;call fcn.13f117950": 8,
                "mov r15, r8;call fcn.13f10f2d4;test r15, r15;je ;mov qword [r15], r12": 8,
                "call fcn.13f10f2d4;test r15, r15;je ;mov qword [r15], r12;test r12, r12": 8,
                "call fcn.13f11b8a0;jmp ;mov sil, byte [r12];mov r8, qword [var_20h];xor edi, edi": 8,
                "mov sil, byte [r12];mov r8, qword [var_20h];xor edi, edi;lea rbx, [r12 + 1];cmp dword [r8 + ], 1": 8,
                "jmp ;mov al, byte [rbx];sub al, ;test al, ;je ": 6,
                "cmp r14d, ;jne ;cmp sil, ;jne ;mov al, byte [rbx]": 6,
                "jne ;cmp sil, ;jne ;mov al, byte [rbx];sub al, ": 6,
                "sub ecx, ;add ecx, ;cmp ecx, r14d;jae ;or ebp, 8": 5,
                "cmp edi, esi;jbe ;call fcn.13f10fca8;mov dword [rax], ;test bpl, 1": 5,
                "cmp rdx, rax;cmovg rdx, rcx;mov qword [arg_8h], rbx;mov qword [arg_18h], rbp;push rsi": 1,
                "mov eax, ecx;add rsp, ;ret;int3;int3": 6,
                "mov ecx, edi;call fcn.13f10fcc8;mov dword [rbx], eax;mov rbx, qword [arg_30h];add rsp, ": 8,
                "add ecx, ;mov eax, ;cmp ecx, ;cmovbe eax, r9d;ret": 10,
                "sub rsp, ;xor ebx, ebx;mov qword [arg_30h], rbx;test rcx, rcx;je ": 11,
                "call fcn.13f10fc58;xor eax, eax;jmp ;mov rcx, rbp;add rcx, rcx": 12,
                "call fcn.13f10fc58;mov rcx, qword [rbx];call fcn.13f10ef88;and qword [rbx], 0;jmp ": 12,
                "mov rdi, qword [arg_58h];add rsp, ;pop r15;ret;push rbx": 12,
                "lea rdx, [];xor ecx, ecx;call qword [];push rbx;sub rsp, ": 1,
                "ret;int3;int3;mov r11, rsp;mov qword [r11 + ], r8": 1,
                "call fcn.13f11e950;xor r8d, r8d;mov ecx, ;lea edx, [r8 + 1];call fcn.13f1100a8": 13,
                "int3;int3;int3;mov edx, 1;xor ecx, ecx": 13,
                "je ;mov ecx, ebx;push rbx;sub rsp, ;mov ebx, ecx": 1,
                "mov qword [arg_10h], rbp;mov qword [arg_18h], rsi;push rdi;sub rsp, ;lea r10, []": 1,
                "cmp rcx, rdx;cmova rbx, rbp;test rbx, rbx;je ;mov rax, qword [rdi]": 11,
                "ret;mov qword [arg_8h], rbx;push rdi;sub rsp, ;xor eax, eax": 11,
                "mov r13d, ecx;mov ecx, 8;call fcn.13f113770;cmp dword [], 1;je ": 13,
                "je ;mov r12, rbx;mov qword [var_28h], rbx;mov rsi, rbx;mov qword [var_30h], rbx": 13,
                "test r14d, r14d;je ;mov ecx, 8;call fcn.13f113960;test r14d, r14d": 12,
                "push r15;sub rsp, ;mov r15, rdx;mov r12, rcx;xor edx, edx": 1,
                "test rax, rax;je ;lea rbp, [rax + rsi*2];mov dword [var_28h], esi;or esi, ": 9,
                "je ;mov r9d, esi;mov r8, r15;xor edx, edx;mov ecx, ebx": 8,
                "mov rdx, rbp;mov rcx, rdi;call fcn.13f11ef38;mov rcx, rdi;mov ebx, eax": 7,
                "test eax, eax;je ;mov ecx, eax;call fcn.13f10fc58;or eax, ": 19,
                "jmp ;xor eax, eax;add rsp, ;ret;int3": 27,
                "add rsp, ;ret;int3;int3;mov ecx, 8": 1,
                "cmp eax, edi;cmovl eax, edi;movsxd rcx, eax;mov edx, 8;mov dword [], eax": 7,
                "mov rcx, qword [];call fcn.13f10ef88;and qword [], 0;add rsp, ;ret": 7,
                "bts dword [rbx + ], ;add rsp, ;pop rbx;ret;lea rcx, [rbx + ]": 9,
                "ja ;btr dword [rcx + ], ;sub rcx, rdx;movabs rax, ;imul rcx": 9,
                "btr dword [rcx + ], ;sub rcx, rdx;movabs rax, ;imul rcx;sar rdx, 3": 9,
                "jmp qword [];int3;int3;cmp ecx, ;jge ": 9,
                "add ecx, ;jmp fcn.13f113960;lea rcx, [rdx + ];jmp qword [];int3": 10,
                "push rdi;sub rsp, ;mov rbx, rdx;mov esi, ecx;xor edi, edi": 11,
                "add rcx, qword [r9 + rax*8];test byte [rcx + ], ;je ;call fcn.13f10fca8;mov dword [rax], ": 16,
                "call fcn.13f11b8a0;or edi, ;test edi, edi;jne ;dec dword [rbx + 8]": 16,
                "jne ;dec dword [rbx + 8];js ;sub rsp, ;test rdx, rdx": 1,
                "call fcn.13f11ba88;lea r9, [];lea r11, [];movsxd r10, eax;lea r8d, [r10 + 2]": 10,
                "lea r9, [];lea r11, [];movsxd r10, eax;lea r8d, [r10 + 2];cmp r8d, 1": 10,
                "cmp rax, qword [rbx + ];jne ;cmp dword [rbx + 8], 0;jne ;inc rax": 7,
                "mov qword [rbx], rax;jmp ;mov byte [rax], dil;inc dword [rbx + 8];and dword [rbx + ], ": 7,
                "jmp ;int3;mov qword [arg_8h], rbx;mov qword [arg_10h], rdx;push rdi": 7,
                "mov rbx, rdx;mov edi, ecx;xor eax, eax;test rdx, rdx;setne al": 8,
                "mov rdx, rbx;mov ecx, edi;call fcn.13f110744;mov edi, eax;mov rcx, rbx": 6,
                "call fcn.13f110528;test byte [rbx + ], ;jne ;lea rdx, [];cmp rcx, rdx": 1,
                "dec dword [rbx + 8];js ;mov rax, qword [rbx];movzx edi, byte [rax];inc rax": 4,
                "call fcn.13f11f39c;mov edi, eax;mov rcx, rbx;call fcn.13f1105c4;mov eax, edi": 3,
                "mov rbx, rcx;test al, ;je ;cmp r8d, 2;ja ": 5,
                "cmp r8d, 1;jne ;call fcn.13f11f53c;mov edi, esi;add rbp, rax": 5,
                "or eax, ;mov rbx, qword [arg_30h];mov rbp, qword [arg_38h];mov rsi, qword [arg_40h];add rsp, ": 13,
                "je ;call fcn.13f11f4e0;cmp rax, ;mov qword [rdi], rax;setne bl": 5,
                "add rsp, ;ret;test rdx, rdx;je ;mov rdx, qword [rdx]": 6,
                "lea rax, [r9 - 2];cmp rax, ;ja ;and rsi, ;call fcn.13f110528": 6,
                "and al, 3;cmp al, 2;jne ;test dword [rcx + ], ;je ": 7,
                "cmp eax, edi;jne ;mov eax, dword [rbx + ];test al, al;jns ": 6,
                "mov ecx, 1;jmp fcn.13f110d88;int3;int3;mov qword [arg_10h], rbx": 7,
                "mov rbx, rcx;test rcx, rcx;jne ;call fcn.13f110d88;mov qword [arg_8h], rbx": 1,
                "push r13;push r14;push r15;sub rsp, ;mov r14d, ecx": 8,
                "call fcn.13f110590;mov rax, qword [];mov rcx, qword [rax + r15*8];test byte [rcx + ], ;je ": 8,
                "jmp ;test r14d, r14d;jne ;sub rsp, ;test rcx, rcx": 1,
                "jmp ;mov ecx, 1;call fcn.13f113960;cmp r14d, 1;cmove edi, esi": 7,
                "pop r14;pop r13;mov qword [arg_10h], rbx;mov qword [arg_18h], rsi;mov qword [arg_8h], rcx": 1,
                "call fcn.13f11e950;mov ecx, ;call fcn.13f10fea4;mov rcx, qword [];mov r8, rdi": 7,
                "je ;jmp ;call fcn.13f10fca8;mov dword [rax], ;call fcn.13f10fca8": 7,
                "jmp ;call fcn.13f11b26c;call fcn.13f10fca8;mov dword [rax], ;xor eax, eax": 7,
                "mov r9, rbx;mov rax, r9;and rax, r10;mov ecx, 1;jmp fcn.13f110d88": 1,
                "mov rax, r9;and rax, r10;mov ecx, 1;jmp fcn.13f110d88;int3": 1,
                "and rax, r10;cmp rax, r11;ja ;mov rax, rdx;and rax, r10": 6,
                "mov r9d, 8;mov qword [arg_10h], rbx;mov qword [arg_8h], rcx;push rdi;sub rsp, ": 1,
                "movzx edx, word [rcx];dec r9;jne ;mov rax, r8;and rax, r10": 4,
                "dec r9;jne ;mov rax, r8;and rax, r10;cmp rax, r11": 4,
                "add r9, ;jmp ;cmp si, word [r8];je ;cmp word [r8], di": 3,
                "xor edx, edx;mov r9, rbx;call qword [];mov rsi, rax;test rax, rax": 4,
                "mov rcx, rbx;call fcn.13f11b26c;test eax, eax;je ;cmp rbx, ": 3,
                "call fcn.13f10fcc8;mov dword [rbx], eax;mov rax, rsi;jmp ;int3": 2,
                "add rsp, ;pop rbx;ret;mov r9, rcx;sub r9, r8": 8,
                "jmp ;xor eax, eax;jmp ;int3;mov rax, rsp": 3,
                "mov rsi, rdx;and dword [rax - ], 0;mov rbx, rdi;imul rbx, rdx;add rbx, rcx": 3,
                "js ;sub rbx, rsi;mov qword [arg_60h], rbx;mov rcx, rbx;call r14": 3,
                "sub rbx, rsi;mov qword [arg_60h], rbx;mov rcx, rbx;call r14;jmp ": 3,
                "sub rbx, r14;mov qword [arg_60h], rbx;mov rcx, rbx;call rsi;jmp ": 4,
                "mov rcx, rbx;call rsi;jmp ;jmp ;mov rbx, qword [arg_68h]": 4,
                "int3;int3;mov qword [rsp + ], rdi;mov qword [rsp + ], r14;push rbp": 4,
                "mov rdx, qword [rbp - ];jmp ;mov rax, qword [rdx + ];movzx eax, word [rax + rdi*2];and eax, 1": 5,
                "je ;mov rax, qword [rbp - ];and dword [rax + ], ;mov eax, edi;jmp ": 5,
                "test eax, eax;je ;mov byte [rbp + ], r14b;mov byte [rbp + ], dil;mov byte [rbp + ], 0": 5,
                "mov byte [rbp + ], dil;mov byte [rbp + ], 0;mov ecx, 2;jmp ;call fcn.13f10fca8": 5,
                "mov dword [rsp + ], 3;mov qword [rsp + ], rax;mov dword [rsp + ], ecx;lea rcx, [rbp - ];call fcn.13f113d18": 5,
                "movzx eax, byte [rbp + ];je ;movzx ecx, byte [rbp + ];shl eax, 8;or eax, ecx": 5,
                "lea eax, [rcx - ];cmp ax, ;ja ;add cx, ;movzx r8d, word [rdx]": 7,
                "cmp ax, ;ja ;add r8w, ;add rdx, 2;dec r11": 7,
                "ret;add rsp, ;jmp ;int3;mov rax, rsp": 6,
                "cmp qword [rax + ], r14;jne ;sub rsi, rdi;movzx ebx, word [rsi + rdi];lea eax, [rbx - ]": 6,
                "cmp bx, ax;je ;movzx ecx, cx;movzx eax, bx;sub eax, ecx": 8,
                "mov qword [arg_18h], rbx;mov qword [arg_8h], rcx;push rbp;push rsi;push rdi": 4,
                "call fcn.13f11b8a0;xor eax, eax;jmp ;test r8d, r8d;je ": 3,
                "lea eax, [rsi - ];cmp ax, ;movzx eax, si;ja ;sub eax, ": 3,
                "call fcn.13f10f2d4;mov rax, qword [var_20h];movzx edx, bl;mov rcx, qword [rax + ];movzx eax, word [rcx + rdx*2]": 3,
                "je ;mov rcx, qword [var_30h];and dword [rcx + ], ;add rsp, ;pop rbx": 3,
                "mov ebx, ecx;lea rcx, [var_20h];xor edx, edx;call fcn.13f10f2d4;mov rax, qword [var_20h]": 2,
                "int3;sub rsp, ;xor r8d, r8d;mov r9, rdx;mov r10, rcx": 3,
                "ja ;add dx, ;movzx ecx, word [r9];lea eax, [rcx - ];cmp ax, ": 3,
                "cmp qword [rax + ], rbp;jne ;sub rsi, rdi;movzx ebx, word [rsi + rdi];lea eax, [rbx - ]": 3,
                "call fcn.13f11fee0;movzx ecx, word [rdi];lea rdx, [var_20h];movzx ebx, ax;lea rsi, [rsi + 2]": 3,
                "mov r14, r8;mov r15, rcx;mov rdi, rdx;lea rcx, [var_28h];lea r8d, [rbx + ]": 4,
                "lea rcx, [var_28h];lea r8d, [rbx + ];xor edx, edx;mov rsi, r9;mov qword [var_30h], rbx": 4,
                "je ;test rdi, rdi;je ;mov dword [var_18h], ;mov qword [var_20h], rdi": 4,
                "jns ;mov word [rbx], di;cmp eax, ;jne ;call fcn.13f10fca8": 4,
                "ret;int3;int3;int3;xor edx, edx": 6,
                "jne ;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;mov qword [arg_18h], rdi;push rbp": 1,
                "xor eax, eax;jmp ;mov eax, r15d;test rdx, rdx;setne al": 4,
                "mov rdi, rax;mov rcx, rbx;call fcn.13f1105c4;mov rax, rdi;mov rbx, qword [arg_58h]": 4,
                "mov qword [var_30h], rax;test byte [rdx + ], ;mov rdi, rdx;movzx esi, cx;jne ": 5,
                "mov rcx, rdi;call fcn.13f11ba88;cmp eax, ;je ;mov rcx, rdi": 47,
                "jmp ;mov rcx, rbp;mov al, byte [rcx + ];and al, ;cmp al, 1": 4,
                "cmp dword [var_20h], ebx;jle ;lea r14, [var_24h];dec dword [rdi + 8];js ": 4,
                "jle ;lea r14, [var_24h];dec dword [rdi + 8];js ;mov rcx, qword [rdi]": 4,
                "movzx eax, si;jmp ;mov rdx, rdi;movzx ecx, si;call fcn.13f1213f4": 4,
                "mov rcx, rbx;call fcn.13f1105c4;movzx eax, di;mov rbx, qword [arg_30h];add rsp, ": 6,
                "sub rsp, ;call fcn.13f11d3c0;mov rcx, qword [rax + ];mov qword [arg_10h], rbx;mov qword [arg_18h], rsi": 1,
                "mov rcx, rax;mov eax, dword [rcx + 8];add rsp, ;ret;int3": 4,
                "test dword [], eax;jne ;call fcn.13f11c808;mov rcx, rax;mov eax, dword [rcx + ]": 6,
                "mov rax, qword [];xor rax, rsp;mov qword [rsp + ], rax;mov r8, qword [rcx + ];xor ebx, ebx": 6,
                "je ;lea r14, [rcx + 4];lea esi, [rbx + 1];cmp dword [r14], ebx;jne ": 5,
                "test r15, r15;je ;test rbp, rbp;je ;test r12, r12": 5,
                "mov eax, dword [r14];lea rcx, [r12 + ];mov dword [rsp + ], eax;mov eax, ;lea r9, [rbp + 1]": 5,
                "mov dword [rsp + ], eax;call fcn.13f113d18;test eax, eax;je ;mov eax, dword [r14]": 5,
                "mov byte [r12 + ], bl;mov byte [r13 + ], bl;cmp dword [rsp + ], esi;jle ;cmp byte [rsp + ], bl": 5,
                "lock dec dword [rcx];jne ;mov rcx, qword [rdi + ];sub rcx, ;call fcn.13f10ef88": 4,
                "mov ebx, esi;mov rcx, rbp;call fcn.13f10ef88;mov eax, ebx;jmp ": 2,
                "je ;lock dec dword [rax];lea rax, [];mov esi, 1;mov qword [rcx + ], rbx": 1,
                "sub rsp, ;mov rax, qword [];xor rax, rsp;mov qword [var_38h], rax;mov r15d, ": 1,
                "add rdx, rax;cmp qword [rdi], rdx;jae ;cmp dword [rdi + 8], 0;jne ": 1,
                "mov rbp, qword [r11 + ];mov rsp, r11;pop r15;pop r14;pop r13": 14,
                "call fcn.13f110528;mov rdx, rbx;movzx ecx, di;call fcn.13f112480;movzx edi, ax": 2,
                "jmp ;test byte [rdi + ], ;jne ;mov rcx, rdi;call fcn.13f11ba88": 3,
                "test byte [rdi + ], ;jne ;mov rcx, rdi;call fcn.13f11ba88;cmp eax, ": 9,
                "and eax, ;imul rsi, rax, ;mov qword [arg_8h], rbx;mov qword [arg_10h], rdx;push rdi": 1,
                "mov rax, r11;ret;mov qword [rcx + rdx], rax;add rdx, 8;mov rax, qword [rdx]": 3,
                "jb ;test cl, 7;je ;inc rcx;mov byte [rcx], dl": 1,
                "sub r8, 1;jb ;mov byte [rcx], dl;inc rcx;jmp ": 1,
                "cmp word [rax + ], cx;jne ;xor ebx, ebx;cmp dword [rax + ], ;jbe ": 1,
                "cmp dword [rax + ], ebx;setne bl;mov dword [arg_40h], ebx;call fcn.13f11b71c;test eax, eax": 1,
                "mov ecx, ;call fcn.13f11e950;mov ecx, ;call fcn.13f10fea4;call fcn.13f11d52c": 1,
                "call fcn.13f122168;mov qword [], rax;call fcn.13f121c84;test eax, eax;jns ": 1,
                "call fcn.13f121f40;test eax, eax;jns ;mov ecx, 9;call fcn.13f10febc": 1,
                "call fcn.13f10ff04;test eax, eax;je ;mov ecx, eax;call fcn.13f10febc": 1,
                "je ;test dh, dh;je ;shr rdx, ;test dl, dl": 4,
                "ret;lea rax, [rcx + rax - 7];ret;lea rax, [rcx + rax - 8];ret": 2,
                "ret;lea rax, [rcx + rax - 8];ret;mov qword [arg_10h], rbx;mov qword [arg_18h], rdi": 2,
                "mov rcx, qword [rcx];sub rcx, 8;mov rax, qword [rcx];mov rbx, qword [rax + ];call qword [rax + ]": 3,
                "mov rcx, rbx;mov qword [var_18h], rdi;mov qword [var_10h], rbx;call qword [];mov rdx, rax": 3,
                "call qword [];mov rdx, rax;mov qword [arg_10h_2], rax;mov qword [var_8h], rax;test rbx, rbx": 3,
                "mov qword [var_8h], rax;test rbx, rbx;je ;test byte [rbx], 8;mov ecx, ": 3,
                "test byte [rbx], 8;mov ecx, ;je ;mov dword [var_20h], ecx;jmp ": 3,
                "call qword [];lea r11, [var_60h];mov rbx, qword [r11 + ];mov rdi, qword [r11 + ];mov rsp, r11": 3,
                "mov rbx, qword [arg_58h];mov rbp, qword [arg_60h];mov rax, rsi;add rsp, ;pop r15": 4,
                "mov rax, rsi;add rsp, ;pop r15;pop r14;pop r12": 4,
                "mov rbp, qword [arg_70h];mov rbx, rdx;mov rcx, rbx;mov rdx, rbp;mov r12d, r9d": 5,
                "cmp r14d, dword [rax + r15 + 4];jle ;cmp r14d, dword [rax + r15 + 8];jle ;mov edx, r9d": 5,
                "lea eax, [rdx - 1];lea rdx, [rax + rax*4];movsxd rax, dword [rbx + ];lea rsi, [rax + rdx*4];add rsi, qword [arg_8h]": 5,
                "add rcx, r9;add rcx, qword [arg_8h];test rsi, rsi;je ;mov eax, dword [rsi + 4]": 4,
                "jl ;cmp r12d, dword [rcx + 4];jg ;cmp dword [r8], ;jne ": 4,
                "lea rdx, [rbx + rbx*4];mov rax, qword [rax + ];lea rcx, [rax + rdx*4];movsxd rax, dword [rdi + ];add rcx, rax": 4,
                "mov rcx, qword [arg_80h];mov rbp, qword [arg_58h];mov rsi, qword [arg_60h];mov qword [rax + ], rbx;lea eax, [rbx + 1]": 4,
                "call fcn.13f11d3c0;cmp rdi, qword [rax + ];je ;call fcn.13f1103f8;call fcn.13f11d3c0": 6,
                "call fcn.13f11d3c0;mov rcx, qword [rbx + 8];mov qword [rax + ], rcx;jmp ;int3": 6,
                "mov rcx, qword [rbx + 8];mov qword [rax + ], rcx;jmp ;int3;int3": 6,
                "call fcn.13f11d3c0;mov qword [rax + ], rbx;add rsp, ;pop rbx;ret": 19,
                "movups xmmword [rcx + ], xmm1;movups xmm1, xmmword [rax + ];movups xmmword [rcx + ], xmm0;movups xmm0, xmmword [rax + ];movups xmmword [rcx + ], xmm1": 22,
                "movups xmmword [rcx + ], xmm1;movups xmm1, xmmword [rax + ];movups xmmword [rcx + ], xmm0;movups xmm0, xmmword [rax + ];mov rax, qword [rax + ]": 11,
                "movups xmmword [rcx + ], xmm1;mov qword [rcx + ], rax;mov rcx, qword [r11];lea rax, [];mov qword [var_50h], rax": 11,
                "mov qword [rcx + ], rax;mov rcx, qword [r11];lea rax, [];mov qword [var_50h], rax;mov rax, qword [rbp + ]": 11,
                "mov qword [rbp - ], rdx;mov rdx, qword [r10];mov qword [var_60h], rax;movsxd rax, dword [rbp + ];mov qword [var_68h], rax": 11,
                "mov qword [var_58h], r9;mov qword [rbp - ], rax;mov qword [arg_8h], rbx;mov qword [arg_10h], rbp;mov qword [arg_18h], rsi": 1,
                "mov qword [rbp - ], ;call qword [];mov rcx, qword [rbp + ];xor rcx, rsp;call fcn.13f10e4e0": 10,
                "call fcn.13f10e4e0;add rsp, ;pop rbp;ret;int3": 10,
                "push r15;sub rsp, ;mov rdi, rdx;movsxd r12, ecx;xor r15d, r15d": 10,
                "mov qword [rax - ], ;mov r9, rdx;xor r8d, r8d;xor edx, edx;lea rcx, [rax + ]": 10,
                "je ;lea edx, [r15 + 2];mov rcx, qword [arg_68h];call fcn.13f113db0;mov rbx, rax": 10,
                "xor r8d, r8d;xor edx, edx;xor ecx, ecx;call fcn.13f11b8c0;sub rsp, ": 1,
                "call fcn.13f11ddf0;mov rdi, rax;mov rcx, rbx;call fcn.13f10ef88;test rdi, rdi": 8,
                "cmp eax, ;je ;test eax, eax;jne ;mov rcx, qword [arg_68h]": 6,
                "jne ;test byte [], 1;jne ;mov rcx, qword [rbx + rdi + ];test rcx, rcx": 2,
                "test rax, rax;jne ;call fcn.13f10fca8;mov dword [rax], ;xor eax, eax": 3,
                "cmp dword [rbx + 8], 1;jne ;movsxd rax, esi;lea rdx, [];xor r8d, r8d": 3,
                "call fcn.13f11c808;mov rcx, rax;mov rax, qword [rcx + ];add rsp, ;ret": 5,
                "mov rsi, rax;call fcn.13f110e70;mov rdi, rax;test rax, rax;je ": 6,
                "xor eax, eax;mov rbx, qword [arg_40h];mov rsi, qword [arg_48h];add rsp, ;pop rdi": 14,
                "mov qword [rbp + ], rsi;mov qword [rbp + ], rdi;mov rax, qword [];xor rax, rbp;mov qword [rbp + 8], rax": 7,
                "mov r13d, r8d;mov qword [rbp], rdx;test ebx, ebx;jle ;mov r10d, ebx": 7,
                "lea ebx, [rax + 1];jl ;mov ebx, eax;mov r14d, dword [rbp + ];mov esi, edi": 7,
                "mov r14d, dword [rax + 4];neg dword [rbp + ];mov r9d, ebx;mov r8, r12;sbb edx, edx": 7,
                "div r15;cmp rax, 2;jb ;lea rcx, [r15 + r15];lea rax, [rcx + ]": 7,
                "call fcn.13f11adcc;movsxd rsi, eax;test eax, eax;je ;mov r9d, ": 6,
                "jg ;mov rax, qword [rbp + ];mov dword [var_28h], ecx;mov r9d, r15d;mov r8, rdi": 5,
                "jmp ;call fcn.13f110eb4;mov rbx, rax;test rax, rax;je ": 23,
                "mov r8, rdi;mov edx, r13d;movsxd rcx, ecx;lea rax, [];add rcx, rcx": 1,
                "mov eax, dword [rbp + ];xor edx, edx;mov qword [var_38h], rcx;mov r9d, esi;mov r8, rbx": 4,
                "mov qword [var_20h], rax;mov ecx, r14d;call qword [];mov esi, eax;lea rcx, [rbx - ]": 4,
                "jne ;call fcn.13f10ef88;lea rcx, [rdi - ];cmp dword [rcx], ;jne ": 3,
                "call fcn.13f11fdc0;mov rdi, rax;test rax, rax;jne ;cmp dword [], eax": 2,
                "mov rax, rdi;mov rdi, qword [arg_48h];add rsp, ;pop r14;ret": 9,
                "call fcn.13f110eb4;mov rdi, rax;test rax, rax;jne ;test esi, esi": 3,
                "call sub.KERNEL32.dll_Sleep;mov esi, dword [];lea ecx, [rbx + ];cmp ecx, esi;mov ebx, ecx": 3,
                "or r14d, ;mov rdx, rsi;mov rcx, rbp;call fcn.13f111168;mov rdi, rax": 4,
                "mov rdx, rsi;mov rcx, rbp;call fcn.13f111168;mov rdi, rax;test rax, rax": 4,
                "mov rsi, r8;mov rbp, rdx;or r15d, ;mov r14, rcx;mov r8, rsi": 5,
                "or r15d, ;mov r14, rcx;mov r8, rsi;mov rdx, rbp;mov rcx, r14": 5,
                "mov rax, qword [rcx + ];test rax, rax;je ;movsxd rdx, dword [rax + 4];test edx, edx": 6,
                "call fcn.13f110418;test byte [rax], ;je ;mov rax, qword [rcx + ];mov rcx, qword [rax]": 6,
                "test bl, 1;mov rax, rsp;mov qword [rax + 8], rbx;mov qword [rax + ], rbp;mov qword [rax + ], rsi": 1,
                "mov rsi, qword [arg_a8h];mov rdi, rax;test r9, r9;je ;mov r8, rsi": 6,
                "call fcn.13f113228;movsxd rcx, dword [rsi + ];mov r9, rdi;add rax, rcx;mov cl, byte [arg_d8h]": 5,
                "sub eax, ;cmp eax, 2;ja ;cmp qword [rdi + ], r12;jne ": 7,
                "mov edx, 1;mov rcx, rdi;call fcn.13f123810;test eax, eax;jne ": 4,
                "call fcn.13f113240;mov rcx, qword [rdi + ];movsxd rdx, dword [rcx + ];mov ecx, dword [rax + rdx];mov dword [rbp - ], ecx": 2,
                "movsxd rdx, dword [rcx + ];mov ecx, dword [rax + rdx];mov dword [rbp - ], ecx;test ecx, ecx;jle ": 2,
                "dec eax;mov dword [rbp - ], eax;test eax, eax;jg ;mov eax, dword [rbp - ]": 2,
                "mov qword [var_20h], rbx;call fcn.13f114094;mov edx, dword [rbp - ];mov ecx, dword [rbp - ];inc ecx": 1,
                "mov edx, dword [rbp - ];mov ecx, dword [rbp - ];inc ecx;add r14, ;mov dword [rbp - ], ecx": 1,
                "mov eax, dword [rbx];and eax, ;cmp eax, ;jb ;mov esi, dword [rbx + ]": 1,
                "mov rdx, rax;movsxd rax, dword [rbx + ];add rdx, rax;jmp ;mov rdx, r12": 1,
                "mov rbx, rax;call fcn.13f11d3c0;cmp qword [rax + ], rbx;je ;cmp dword [rsi], ": 1,
                "cmp qword [rax + ], rbx;je ;cmp dword [rsi], ;je ;cmp dword [rsi], ": 1,
                "mov r8, rdi;mov qword [var_30h], rax;mov rdx, r12;mov rcx, rsi;mov dword [var_28h], ebx": 1,
                "test eax, eax;jne ;jmp ;mov ebx, dword [arg_e0h];cmp dword [arg_ch], 0": 1,
                "mov qword [var_28h], rax;lea rax, [arg_b0h];mov r8d, ebx;mov r9d, r14d;mov rdx, rbp": 1,
                "cmp dword [rax + rdx - ], 0;je ;call fcn.13f113228;movsxd rcx, dword [rdi];lea rdx, [rcx + rcx*4]": 2,
                "call fcn.13f113228;add rax, rbx;jmp ;xor eax, eax;cmp byte [rax + ], 0": 1,
                "add rax, rbx;jmp ;xor eax, eax;cmp byte [rax + ], 0;jne ": 1,
                "add rcx, rax;mov rax, qword [arg_e8h];mov qword [var_48h], rax;mov eax, dword [arg_e0h];mov dword [var_40h], eax": 1,
                "mov dword [var_40h], eax;mov qword [var_38h], r13;and qword [var_30h], 0;mov qword [var_28h], rcx;mov rcx, rsi": 1,
                "call fcn.13f113240;mov rdx, rax;mov rax, qword [r13 + ];movsxd rcx, dword [rax + ];mov ebp, dword [rdx + rcx]": 2,
                "mov ebp, dword [rdx + rcx];test ebp, ebp;jle ;movsxd rax, edi;lea r12, [rax + rax*4]": 2,
                "mov rbx, qword [arg_50h];mov rbp, qword [arg_58h];mov rsi, qword [arg_60h];mov al, r14b;add rsp, ": 2,
                "mov al, r14b;add rsp, ;pop r15;pop r14;pop r13": 2,
                "call fcn.13f110418;int3;int3;sub rsp, ;call fcn.13f11d3c0": 2,
                "call fcn.13f11d3c0;xor ecx, ecx;cmp dword [rax + ], ecx;setne al;add rsp, ": 3,
                "movsxd r8, dword [rdx + rcx];add r8, r9;add rax, r8;ret;int3": 4,
                "mov rsi, rdx;jmp ;mov qword [arg_8h], rbx;mov qword [arg_10h], rbp;mov qword [arg_18h], rsi": 1,
                "je ;call fcn.13f113240;mov rbx, rax;movsxd rax, dword [rdi + ];add rbx, rax": 4,
                "je ;test r15d, r15d;je ;call fcn.13f113228;mov rcx, rax": 5,
                "mov ecx, dword [rbx];test ecx, ecx;js ;movsxd rax, dword [rbx + 8];add rax, qword [rsi]": 5,
                "mov edx, ebx;mov rcx, qword [r13 + ];call fcn.13f123810;test eax, eax;je ": 10,
                "mov rcx, rsi;call fcn.13f10e580;cmp dword [r14 + ], 8;jne ;cmp qword [rsi], rdi": 5,
                "mov r8, rbx;mov rcx, rsi;call fcn.13f10e580;jmp ;call fcn.13f123810": 4,
                "jmp ;call fcn.13f110418;xor eax, eax;mov rbx, qword [arg_50h];mov rsi, qword [arg_58h]": 4,
                "ret;int3;push rbx;push rsi;push rdi": 3,
                "mov dword [rsp + ], r15d;and dword [rsp + ], r15d;and qword [rsp + ], r15;and qword [rsp + ], r15;call fcn.13f11d3c0": 2,
                "call fcn.13f113184;mov r12, rax;mov qword [rsp + ], rax;cmp qword [rdi + ], r15;je ": 1,
                "mov r15d, dword [rsp + ];mov rbx, qword [rsp + ];mov r13, qword [rsp + ];sub rsp, ;mov rax, qword [rcx]": 1,
                "sub rsp, ;mov rax, qword [rcx];cmp dword [rax], ;je ;cmp dword [rax], ": 1,
                "jne ;jmp ;call fcn.13f11d3c0;cmp dword [rax + ], 0;jle ": 1,
                "movsxd rcx, dword [rsi + 8];lea rax, [rax + r14*8];mov edi, dword [rcx + rax];mov dword [var_20h], edi;call fcn.13f113228": 2,
                "xor eax, eax;test rax, rax;je ;mov r9d, edi;mov r8, rsi": 2,
                "mov r12d, dword [rsp + ];mov rsi, qword [rsp + ];mov r13, qword [rsp + ];mov r15, qword [rsp + ];mov edi, dword [rsp + ]": 2,
                "mov r13, qword [rsp + ];mov r15, qword [rsp + ];mov edi, dword [rsp + ];mov dword [var_24h], edi;jmp ": 2,
                "call fcn.13f11d3c0;dec dword [rax + ];cmp edi, ;je ;cmp edi, r12d": 2,
                "mov qword [arg_18h], rsi;push rdi;push r12;push r14;sub rsp, ": 8,
                "mov rsi, rdx;mov rbx, rcx;call fcn.13f11d3c0;mov rdi, qword [arg_80h];cmp dword [rax + ], 0": 3,
                "mov r12d, 1;jne ;cmp dword [rbx], ;je ;cmp dword [rbx], r8d": 3,
                "mov r8, rdi;mov rdx, rbp;mov rcx, rsi;call fcn.13f112ff8;jmp ": 3,
                "test rax, rax;je ;cmp dword [rbx], ;jne ;cmp dword [rbx + ], 3": 3,
                "jmp ;xor r10d, r10d;test r10, r10;je ;movzx eax, byte [arg_98h]": 3,
                "mov qword [var_30h], rax;mov eax, dword [arg_88h];mov rax, rsp;mov dword [rax + ], r9d;mov qword [rax + ], r8": 1,
                "mov r8, r14;mov qword [var_38h], rax;mov eax, dword [arg_88h];mov rdx, rsi;mov dword [var_30h], eax": 2,
                "add rsp, ;pop r14;pop r12;pop rdi;ret": 3,
                "mov rcx, rbx;test rcx, rcx;je ;test esi, esi;je ": 2,
                "cmp dword [rdi + 4], ebx;je ;call fcn.13f113228;mov rsi, rax;movsxd rax, dword [rdi + 4]": 2,
                "jne ;jmp ;call fcn.13f116374;mov dword [var_30h], ;and dword [var_28h], 0": 2,
                "lea rdx, [arg_80h];lea rcx, [var_40h];mov r8d, 1;mov qword [arg_80h], rax;call fcn.13f10ec6c": 2,
                "mov qword [rax + ], rbx;mov rdi, rcx;mov qword [rcx], rdx;lea rbx, [rcx + 8];mov qword [rax + 8], rbx": 6,
                "or edx, ;mov rcx, rbx;call fcn.13f1153d4;mov r8b, 1;mov rdx, rbx": 6,
                "cmp qword [rbx + ], 0;mov dword [rcx], 0;mov rax, rcx;mov dword [rcx + 4], 0;ret": 1,
                "je ;mov eax, dword [rbx + ];shr eax, 2;test al, 1;jne ": 7,
                "jne ;cmp qword [rbx + ], 0;jne ;mov rcx, qword [rbx];mov rax, qword [rcx]": 6,
                "mov rcx, rbx;call fcn.13f115bc8;mov al, 1;jmp ;xor al, al": 6,
                "je ;mov edx, ebx;mov rcx, rax;call fcn.13f1153d4;mov rbx, rax": 7,
                "je ;mov qword [rdi + ], rbx;mov r15d, 1;xor eax, eax;lock cmpxchg dword [rbx + ], r15d": 7,
                "mov qword [rdi + ], rbx;test rbx, rbx;jne ;mov rax, rsi;lock cmpxchg qword [rdi + ], rbp": 6,
                "cmp eax, 2;jne ;mov rcx, rsi;call fcn.13f10e55c;test rbx, rbx": 6,
                "pop r14;pop r12;ret;mov qword [arg_8h], rbx;mov qword [arg_8h], rbx": 1,
                "mov qword [arg_10h], rsi;mov qword [arg_18h], rdi;push r14;sub rsp, ;and qword [rcx + 8], 0": 6,
                "lea rax, [];mov byte [r14 + ], sil;mov rsi, qword [arg_38h];mov qword [r14], rax;xor eax, eax": 5,
                "setne al;add rax, rdi;mov rdi, qword [arg_40h];mov qword [r14 + ], rax;mov qword [r14 + ], 0": 5,
                "mov qword [rax - ], ;mov qword [rax + ], rbx;mov qword [rax + ], rbp;mov r14b, r9b;mov rbp, r8": 6,
                "mov qword [rax + ], rbx;mov qword [rax + ], rbp;mov r14b, r9b;mov rbp, r8;mov bl, dl": 6,
                "mov qword [rcx], ;mov qword [rcx + 8], ;lea rcx, [r8 + 6];shl rcx, 4;mov qword [rsi + ], rcx": 5,
                "lea rcx, [r8 + 6];shl rcx, 4;mov qword [rsi + ], rcx;call fcn.13f0e907c;mov rdi, rax": 5,
                "mov rcx, rax;call fcn.13f115f78;lea rax, [];mov qword [rdi], rax;mov qword [rdi + ], rbp": 4,
                "mov qword [rdi], rax;mov qword [rdi + ], 1;mov rcx, qword [rsi];add rcx, qword [rsi + ];test rbp, rbp": 4,
                "neg rax;inc rbp;add rax, rbp;mov qword [rsi + ], rax;mov rax, rsi": 4,
                "ret;int3;sub rsp, ;lea rax, [];mov qword [rcx], rax": 4,
                "add rcx, ;call fcn.13f115a20;mov rbx, qword [rdi];cmp rbx, 1;jbe ": 6,
                "test rbp, rbp;jne ;mov rcx, qword [rdi + 8];test rcx, rcx;je ": 5,
                "mov rsi, r8;mov rbx, rdx;mov rbp, rcx;xor dil, dil;mov eax, 1": 5,
                "mov rbx, rdx;mov rbp, rcx;xor dil, dil;mov eax, 1;lock xadd dword [rdx + ], eax": 5,
                "inc eax;cmp eax, 1;jne ;mov rcx, qword [rdx + 8];mov dil, al": 5,
                "mov rcx, qword [rdx + 8];mov dil, al;mov byte [rdx + ], al;test rcx, rcx;je ": 5,
                "inc eax;cmp eax, 1;jne ;mov rdi, qword [rcx + 8];call fcn.13f116374": 4,
                "jne ;xchg dword [], eax;jmp ;and dword [var_28h], 0;lea rax, []": 4,
                "mov rax, qword [];add rsp, ;pop rbx;ret;lea rax, []": 4,
                "inc rdx;inc rax;cmp rdx, rax;jne ;call fcn.13f10efc8": 5,
                "cmp r9d, 2;je ;mov r8, qword [r8 + 8];xor eax, eax;lea r9d, [rax + 1]": 4,
                "mov rbx, rcx;test rdx, rdx;je ;and qword [rdx], 0;push rbx": 1,
                "pop rbx;ret;push rbx;sub rsp, ;mov rdx, rcx": 2,
                "sub rsp, ;mov rdx, rcx;mov rcx, qword [rcx];mov r8d, 1;mov rax, rcx": 3,
                "mov rax, rcx;lock cmpxchg qword [rdx], r8;je ;mov rcx, rax;lock cmpxchg qword [rdx], r8": 3,
                "lock cmpxchg qword [rdx], r8;je ;mov rcx, rax;lock cmpxchg qword [rdx], r8;cmp rax, rcx": 3,
                "call qword [rax + ];mov rcx, rbx;test rbx, rbx;jne ;add rsp, ": 3,
                "mov r15d, 1;je ;mov eax, r15d;lock xadd dword [rcx + ], eax;add eax, r15d": 3,
                "jl ;mov rcx, qword [rbx + ];call fcn.13f12389c;jmp ;call fcn.13f116374": 3,
                "call fcn.13f11643c;mov rax, qword [rbp + 8];mov ecx, dword [rax + ];cmp ecx, 2;je ": 3,
                "je ;mov rcx, qword [rbp + 8];xor eax, eax;lock cmpxchg dword [rcx + ], r15d;cmp eax, 2": 3,
                "mov rcx, rsi;call qword [rax + ];mov rbx, qword [rsp + ];mov rbp, qword [rsp + ];mov rsi, qword [rsp + ]": 3,
                "mov rbx, qword [rsp + ];mov rbp, qword [rsp + ];mov rsi, qword [rsp + ];mov rdi, qword [rsp + ];add rsp, ": 13,
                "mov rdx, qword [rcx + ];mov rax, qword [rcx + ];cmp rdx, rax;jb ;mov rax, qword [rcx]": 3,
                "test al, al;je ;mov rax, qword [rcx];call qword [rax + ];jmp ": 3,
                "sub rsp, ;mov al, byte [rcx + ];mov rbx, rcx;test al, al;je ": 2,
                "test al, al;je ;mov rax, qword [rbx];mov rcx, rbx;call qword [rax + ]": 2,
                "mov rdx, qword [rcx + ];mov rax, qword [rcx + ];cmp rdx, rax;jae ;mov al, byte [rcx + ]": 2,
                "jae ;mov al, byte [rcx + ];test al, al;jne ;mov al, 1": 2,
                "add rsp, ;ret;push rbp;push r14;push r15": 2,
                "mov rax, qword [];xor rax, rbp;mov qword [rbp + ], rax;mov r15, rcx;xor ebx, ebx": 3,
                "cmp rsi, 1;jbe ;xor ecx, ecx;mov rax, rsi;test rsi, rsi": 3,
                "test rbx, rbx;mov qword [arg_8h], rbx;mov qword [arg_10h], rbp;mov qword [arg_18h], rsi;push rdi": 1,
                "int3;mov r14, rbx;mov qword [rbp + ], rbx;and qword [rbp + ], 0;xor edi, edi": 2,
                "mov r14, rbx;mov qword [rbp + ], rbx;and qword [rbp + ], 0;xor edi, edi;test rsi, rsi": 2,
                "mov rax, qword [rcx];dec rax;neg rax;sbb rax, rax;jmp ": 3,
                "jne ;lea rax, [];mov qword [rbp - ], rax;and qword [rbp - ], 0;mov dword [rbp - ], 0": 2,
                "mov qword [rbp - ], rax;lea rax, [rbp - ];mov qword [rbx], rax;lea rcx, [rbp + ];call fcn.13f115614": 2,
                "test dil, dil;jne ;mov eax, dword [rbp - ];cmp eax, 1;je ": 2,
                "mov qword [rbp - 8], rax;lea rdx, [];lea rcx, [rbp - 8];call fcn.13f112d38;int3": 3,
                "mov rcx, qword [rcx];test rcx, rcx;jne ;lea rax, [];mov qword [rbp - ], rax": 2,
                "lea rcx, [rbp + ];call fcn.13f112d38;int3;mov edx, r9d;call fcn.13f1169ac": 2,
                "jmp ;xor eax, eax;test rdx, rdx;je ;cmp qword [rcx + rax*8], 0": 2,
                "cmp qword [rcx + rax*8], 0;je ;add rax, r14;cmp rax, rdx;jb ": 2,
                "mov qword [rbp + ], rax;lea rdx, [rax + ];lea rcx, [rbp + ];call fcn.13f1155ac;mov r14, qword [var_50h]": 2,
                "mov rax, qword [rbp + ];mov qword [rax], r14;mov r14d, 1;lea rcx, [rbp + ];call fcn.13f115614": 2,
                "test esi, esi;jne ;mov eax, r14d;lock xadd dword [rbx + ], eax;add eax, r14d": 1,
                "lock xadd dword [rbx + ], eax;add eax, r14d;cmp eax, r14d;jne ;and qword [rbx + ], 0": 1,
                "sub rsp, ;call qword [];test eax, eax;je ;mov qword [arg_8h], rbx": 1,
                "call fcn.13f117820;xor r8d, r8d;jmp qword [];int3;int3": 1,
                "int3;mov r11, rcx;movzx edx, dl;push rbx;sub rsp, ": 1,
                "jne ;mov r9, r8;and r8, 7;shr r9, 3;je ": 4,
                "mov qword [rcx], rdx;mov qword [rcx + 8], rdx;mov qword [rcx + ], rdx;add rcx, ;mov qword [rcx - ], rdx": 4,
                "movaps xmmword [rcx - ], xmm0;jne ;and r8, ;mov qword [arg_8h], rbx;mov qword [arg_10h], rbp": 1,
                "jne ;and r8, ;mov r9, r8;shr r9, 4;je ": 3,
                "jmp r9;jnp ;add byte [rbx], bh;jnp ;add byte [rbx + rdi*2 + 6], cl": 3,
                "jnp ;add byte [rax + ], ah;invalid;add byte [rbp + ], dl;invalid": 3,
                "add byte [rbp + ], ch;invalid;add byte [rbx + rdi*2 + 6], ah;add byte [rdi], bh;jnp ": 3,
                "mov byte [rcx - 1], dl;ret;mov qword [arg_10h], rbx;mov qword [arg_18h], rsi;mov qword [arg_8h], rcx": 1,
                "mov rdi, rax;mov eax, ;and cx, ax;cmp cx, ax;mov edx, ecx": 1,
                "mov rdi, rax;mov eax, ;and cx, ax;cmp cx, ax;jne ": 3,
                "jmp ;mov eax, ;sub eax, ebx;cmp ecx, eax;jg ": 3,
                "mov ecx, ;jmp ;cmp edx, ;jge ;add edx, ": 3,
                "add edx, ;call fcn.13f12ddb4;jmp ;call fcn.13f12ddb4;movaps xmm6, xmm0": 3,
                "jmp ;call fcn.13f12ddb4;movaps xmm6, xmm0;mov rdx, rsi;mov rcx, rdi": 3,
                "movaps xmm6, xmmword [var_30h];add rsp, ;pop rdi;ret;int3": 3,
                "int3;sub rdx, rcx;test cl, 7;je ;movzx eax, byte [rcx]": 3,
                "je ;test cl, 7;jne ;movabs r11, ;movabs r10, ": 4,
                "or rax, 1;ret;int3;sub rsp, ;mov rax, qword []": 4,
                "ret;call fcn.13f10f78c;int3;sub rsp, ;call fcn.13f11d3c0": 5,
                "mov r8d, edx;and ecx, edx;not r8d;and r8d, eax;or r8d, ecx": 7,
                "call qword [];test rax, rax;je ;sub rdx, rcx;test cl, 7": 1,
                "mov r8, rsi;mov qword [var_20h], rbx;call qword [];inc edi;cmp edi, 2": 7,
                "movzx ecx, word [var_60h];mov eax, ;cmovne eax, ecx;add rsp, ;ret": 18,
                "jmp rax;call qword [];mov eax, 1;add rsp, ;ret": 19,
                "xor rax, qword [];je ;lea rcx, [arg_30h];xor edx, edx;mov eax, dword []": 1,
                "lea eax, [rbx + 1];je ;mov eax, ebx;mov dword [], eax;test eax, eax": 19,
                "ret;push rbx;sub rsp, ;lea rcx, [];call qword []": 18,
                "xor rax, qword [];mov qword [], rax;call qword [];lea rdx, [];xor rax, qword []": 17,
                "xor rax, qword [];mov rcx, rbx;mov qword [], rax;push rbx;push rsi": 1,
                "mov rcx, rbx;mov qword [], rax;push rbx;push rsi;push rdi": 1,
                "mov qword [], rax;call qword [];sub rsp, ;mov rax, qword [];xor rax, qword []": 1,
                "call qword [];lea rdx, [];xor rax, qword [];mov rax, qword [];xor rax, qword []": 1,
                "mov rcx, rbx;mov qword [], rax;call qword [];xor rax, qword [];mov qword [], rax": 6,
                "xor rax, qword [];mov qword [], rax;add rsp, ;sub rsp, ;mov rax, qword []": 1,
                "mov r15, rcx;lea rcx, [rax - ];mov r13, r9;mov r14, r8;xor ebx, ebx": 7,
                "and qword [var_20h], rbx;mov ecx, dword [rax + ];or r9d, ;mov r8, r14;xor edx, edx": 5,
                "mov r14, qword [var_40h];mov dword [var_28h], r12d;mov ecx, dword [r14 + ];or r12d, ;xor edx, edx": 3,
                "mov qword [var_20h], rcx;mov r8, rbp;mov rcx, rdi;mov rdx, rsi;call fcn.13f11a314": 3,
                "mov r9d, r12d;mov r8, rdi;xor edx, edx;mov dword [var_28h], esi;mov qword [var_20h], r15": 3,
                "sub r10d, 4;je ;sub r10d, 9;je ;sub r10d, ": 4,
                "shr eax, ;add edx, eax;lea eax, [rdx + rdx*2];shl eax, 2;sub ecx, eax": 3,
                "je ;mov ecx, 6;sub r10d, ecx;je ;xor ebx, ebx": 3,
                "mov qword [var_20h], rax;jmp ;mov eax, dword [r8 + ];cmp eax, ecx;ja ": 3,
                "ja ;mov rax, rsp;mov qword [rax + 8], rbx;mov qword [rax + ], rbp;mov qword [rax + ], rsi": 1,
                "mov edx, 3;jmp ;mov ecx, dword [r8 + ];lea eax, [rcx - 1];cmp eax, ": 1,
                "mov ecx, dword [r8 + ];lea eax, [rcx - 1];cmp eax, ;ja ;mov edx, 2": 1,
                "mov r15, qword [arg_88h];mov r14, qword [arg_80h];xor ebx, ebx;mov qword [var_28h], r15;mov qword [var_20h], r14": 1,
                "test eax, eax;je ;cmp qword [r14], rbx;je ;mov rax, qword [rdi]": 1,
                "shr eax, ;add edx, eax;movzx eax, dx;shl ax, 2;lea ecx, [rax + rdx]": 2,
                "lea ecx, [rax + rdx];add cx, cx;sub r11w, cx;add r11w, ;mov word [r10], r11w": 1,
                "test edx, edx;jle ;cmp qword [r9], 1;ja ;mov rdx, qword [r8]": 1,
                "sub r10, 2;cmp rdx, r10;jb ;jmp ;movsxd rax, edx": 1,
                "cmp rax, qword [r9];jae ;dec edx;lea r10d, [rdx + 1];test r10d, r10d": 1,
                "mov word [rdi + rax], r11w;mov r11d, edx;lea rdi, [rdi - 2];dec r10d;jne ": 1,
                "mov r14, rcx;mov qword [rbp + 8], rcx;mov r10d, edx;mov r9, r8;test edx, edx": 2,
                "movzx eax, word [r8 + ];xor edx, edx;add ax, r10w;mov r9, rdi;mov qword [var_20h], r11": 2,
                "mov word [rbp + ], ax;movzx eax, word [r8 + ];mov word [rbp + ], ax;movzx eax, word [r8 + 8];mov word [rbp + ], ax": 2,
                "call fcn.13f11acdc;jmp ;call fcn.13f11ac10;xor r11d, r11d;mov esi, eax": 2,
                "add qword [r12], 2;dec qword [r15];dec edx;test edx, edx;jg ": 2,
                "jne ;call fcn.13f10ef88;mov eax, 1;jmp ;mov r14, qword [rbp + 8]": 2,
                "jne ;lea eax, [rcx + ];jmp ;mov eax, ;jmp ": 2,
                "sub edx, ;je ;sub edx, 5;je ;sub edx, 6": 1,
                "cmp edx, 5;jne ;cmp ecx, 2;je ;cmp ecx, 4": 1,
                "mov rbp, r15;add r14, ;mov r12d, ;mov word [rbx], r12w;mov r8, qword [r14 - ]": 3,
                "sub rdx, rax;inc rdx;call fcn.13f11123c;test eax, eax;jne ": 6,
                "lea rbx, [rbx + rax*2];mov word [rbx], r12w;mov r8, qword [r14];add rbx, 2;mov rax, rbx": 3,
                "add rbx, 2;mov rax, rbx;mov rcx, rbx;sub rax, rdi;sar rax, 1": 3,
                "xor edx, edx;xor ecx, ecx;mov qword [var_20h], r15;call fcn.13f11b8c0;int3": 24,
                "inc rbp;add r14, 8;lea rbx, [rbx + rax*2];cmp rbp, ;jb ": 2,
                "cmp r15, 1;xor ecx, ecx;jmp ;int3;mov rax, rsp": 1,
                "add r14, 8;inc rax;add rbx, rax;mov rax, qword [arg_88h];cmp rbp, 7": 2,
                "inc rbx;inc rbp;add rbx, rax;add r14, 8;cmp rbp, 2": 2,
                "mov qword [rdi + ], rcx;xor ecx, ecx;jmp ;int3;mov rax, rsp": 1,
                "mov qword [rdi + ], rcx;mov r8, qword [rsi + ];sub rdx, rbx;call fcn.13f11b2a8;test eax, eax": 3,
                "sub rdx, rbx;lea rcx, [rdi + rax*2];mov rax, qword [arg_88h];shr rdx, 1;mov qword [r14 + rax], rcx": 2,
                "mov qword [rax + ], rsi;mov qword [rax + ], rdi;mov qword [rax + 8], rcx;push rbp;push r12": 2,
                "mov r12, r9;mov rdi, r8;mov r14d, r13d;call fcn.13f10f2d4;mov rax, qword [arg_30h]": 2,
                "mov rsi, qword [arg_50h];test rsi, rsi;jne ;mov rax, qword [var_28h];mov rsi, qword [rax + ]": 2,
                "mov rax, rbx;mov qword [var_30h], rbx;test rbx, rbx;je ;mov rcx, qword [arg_30h]": 2,
                "test edx, edx;je ;cmp edx, ;je ;mov word [rcx], dx": 2,
                "mov dword [var_30h_2], eax;lea rax, [var_30h];lea r9, [arg_30h];lea rcx, [var_28h];mov r8, r12": 2,
                "mov qword [var_28h_2], rsi;mov qword [var_20h], rax;call fcn.13f118bdc;test eax, eax;je ": 2,
                "call fcn.13f118bdc;test eax, eax;je ;mov rcx, qword [arg_30h];mov rax, qword [var_30h]": 2,
                "mov rcx, qword [var_18h];and dword [rcx + ], ;lea r11, [var_70h];mov rax, rbx;mov rbx, qword [r11 + ]": 2,
                "jne ;inc rcx;dec r8;test cl, 7;jne ": 3,
                "jne ;mov rax, qword [rcx + ];cmp rax, qword [rdx + rcx + ];jne ;mov rax, qword [rcx + ]": 3,
                "xor rax, rbp;mov qword [rbp + ], rax;mov edi, dword [rbp + ];mov r14, qword [rbp + ];xor ebx, ebx": 4,
                "mov eax, esi;mov rdx, r14;sub eax, r13d;cmp byte [rdx], bl;je ": 4,
                "cmp edi, ecx;jge ;xor eax, eax;jmp ;cmp esi, ecx": 3,
                "test r12d, r12d;jne ;mov rax, qword [r8];mov r12d, dword [rax + 4];test edi, edi": 2,
                "mov ecx, r12d;call qword [];test eax, eax;je ;test edi, edi": 2,
                "je ;mov cl, byte [r15];cmp cl, byte [rax];jb ;cmp cl, byte [rax + 1]": 2,
                "jb ;cmp cl, byte [rax + 1];jbe ;add rax, 2;cmp byte [rax], bl": 4,
                "jbe ;add rax, 2;cmp byte [rax], bl;jmp ;mov r9d, edi": 2,
                "and rax, ;call fcn.13f11fe90;sub rsp, rax;lea r14, [var_30h];test r14, r14": 2,
                "mov qword [var_20h], rbx;call qword [];movsxd r15, eax;test eax, eax;je ": 2,
                "mov edx, 1;mov ecx, r12d;mov dword [var_28h], r15d;mov qword [var_20h], rdi;call qword []": 1,
                "xor rcx, rbp;call fcn.13f10e4e0;lea rsp, [rbp + ];pop r15;pop r14": 1,
                "pop rdi;pop rsi;pop rbx;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi": 1,
                "push rdi;sub rsp, ;mov rsi, rdx;mov rdx, rcx;lea rcx, [var_40h]": 1,
                "mov eax, dword [arg_a8h];lea rcx, [var_40h];mov r9, rbx;mov dword [var_38h], eax;mov eax, dword [arg_a0h]": 1,
                "mov dword [var_20h], eax;call fcn.13f11a588;cmp byte [var_58h], 0;je ;mov rcx, qword [var_50h]": 1,
                "mov ecx, r10d;cdq;sub eax, edx;sar eax, 1;movsxd rdx, eax": 2,
                "sar eax, 1;movsxd rbx, eax;mov rdx, rbx;add rdx, rdx;mov rdx, qword [r14 + rdx*8]": 3,
                "ret;int3;int3;mov r11, rsp;mov qword [r11 + 8], rbx": 10,
                "mov qword [arg_18h], rsi;push rdi;sub rsp, ;movsxd rbx, r8d;mov rsi, rdx": 5,
                "js ;cdqe;lea rbp, [];mov edx, ;add rax, rax": 5,
                "mov rdx, rbx;mov r8, rbp;mov rcx, rsi;call fcn.13f11123c;test eax, eax": 5,
                "call fcn.13f11a9c0;test eax, eax;js ;cdqe;cmp rax, ": 6,
                "test eax, eax;js ;cdqe;cmp rax, ;jae ": 6,
                "mov rax, qword [];xor rax, qword [];je ;xor r9d, r9d;add rsp, ": 7,
                "and qword [r11 - ], 0;mov eax, dword [arg_78h];mov dword [var_28h], eax;mov rax, qword [arg_70h];mov qword [r11 - ], rax": 8,
                "mov qword [r11 - ], rax;call r10;jmp ;call fcn.13f11ab8c;mov r9, rbx": 8,
                "mov dword [var_28h], eax;mov rax, qword [arg_70h];mov qword [var_20h], rax;call qword [];mov rbx, qword [arg_50h]": 7,
                "mov dword [var_28h], eax;mov rax, qword [arg_60h];mov qword [var_20h], rax;call r10;jmp ": 8,
                "jmp rax;call fcn.13f11ab8c;mov edx, 1;mov ecx, eax;add rsp, ": 9,
                "dec r8;je ;test cx, cx;je ;cmp cx, dx": 9,
                "mov dword [var_28h], eax;mov r9d, ebx;mov r8, rsi;mov edx, ebp;mov rcx, r14": 9,
                "lea ecx, [rax - 2];cmovs eax, ecx;mov ecx, 2;test ebx, ebx;cmove eax, ecx": 9,
                "mov rcx, qword [arg_68h];mov rax, rcx;and rax, rdx;cmp rax, rdx;jne ": 8,
                "mov dword [var_40h], r9d;movsd qword [var_38h], xmm0;movsd qword [var_30h], xmm1;movabs r8, ;mov dword [var_28h], ": 8,
                "and dword [var_20h], 0;lea rcx, [];mov edx, 5;call fcn.13f11fc98;jmp ": 8,
                "jmp ;test r8, rcx;je ;movsd xmm1, qword [arg_60h];xorps xmm0, xmm0": 8,
                "mov r9d, 1;mov dword [var_40h], r9d;movsd qword [var_38h], xmm0;movsd qword [var_30h], xmm1;mov dword [var_28h], ": 8,
                "test rcx, rcx;je ;cmp qword [rcx], rax;jne ;mov rax, qword [rcx + 8]": 8,
                "cmp qword [rcx], rax;jne ;mov rax, qword [rcx + 8];mov qword [rdx + 8], rax;call fcn.13f10ef88": 7,
                "jmp ;mov rdx, rcx;jmp ;mov rcx, qword [rbx + 8];call fcn.13f10ef88": 7,
                "mov r9d, edx;mov edx, r11d;xor r8d, ;xor edx, ;mov ebp, eax": 7,
                "mov edx, r11d;xor r8d, ;xor edx, ;mov ebp, eax;or r8d, ebx": 7,
                "xor r8d, ;xor edx, ;mov ebp, eax;or r8d, ebx;lea eax, [rdi + 1]": 6,
                "mov dword [rsp + ], edx;test r10b, r10b;je ;mov edx, eax;and edx, ": 6,
                "cmp edx, ;mov r11, rsp;mov qword [r11 + 8], rbx;mov qword [r11 + ], rsi;push rdi": 1,
                "mov dword [], 5;mov dword [], ;mov rbx, qword [rsp + ];mov rbp, qword [rsp + ];mov rax, rsp": 1,
                "sub rsp, ;mov rbx, rcx;mov rcx, qword [];call qword [];test rax, rax": 4,
                "int3;mov qword [], rcx;ret;push rbx;sub rsp, ": 4,
                "mov rcx, r12;call fcn.13f12ee18;movsxd r15, eax;test eax, eax;je ": 5,
                "test eax, eax;je ;movsxd rsi, r15d;mov edx, 1;mov rcx, rsi": 5,
                "mov edx, 1;mov rcx, rsi;call fcn.13f113db0;mov rcx, rax;mov qword [rbx], rax": 5,
                "test rax, rax;jne ;test r14d, r14d;je ;mov rcx, rdi": 5,
                "call fcn.13f11ac8c;test eax, eax;je ;mov al, byte [var_30h];mov byte [rbx], al": 4,
                "push r15;sub rsp, ;mov r12, qword [r9 + 8];mov r15, qword [r9];mov rbx, qword [r9 + ]": 6,
                "mov r12, qword [r9 + 8];mov r15, qword [r9];mov rbx, qword [r9 + ];sub r15, r12;test byte [rcx + 4], ": 6,
                "test byte [rcx + 4], ;mov r14, r9;mov r13, rdx;mov rbp, rcx;jne ": 6,
                "mov r13, rdx;mov rbp, rcx;jne ;mov esi, dword [r9 + ];mov qword [rax - ], rcx": 6,
                "mov qword [rsp + ], rax;mov rax, qword [r14 + ];add rdx, r12;mov r8, rbp;mov rcx, r13": 3,
                "cmp r9d, edx;jb ;cmp r9d, edx;jne ;mov eax, dword [rbx + rcx*8 + ]": 2,
                "ret;mov rax, rsp;mov qword [rax + ], rbx;mov qword [rax + ], rsi;mov qword [rax + ], rdi": 3,
                "mov esi, edx;mov ebx, ecx;cmp ecx, ;je ;call fcn.13f11e6dc": 4,
                "call fcn.13f11e6dc;and dword [var_30h], 0;lea rcx, [var_34h];xor edx, edx;mov r8d, ": 4,
                "mov rax, qword [rbp + ];mov qword [var_40h], rax;call qword [];lea rcx, [var_20h];mov edi, eax": 4,
                "jmp rax;mov rax, qword [arg_60h];mov qword [var_20h], rax;sub rsp, ;call qword []": 1,
                "je ;mov rax, qword [rbx + ];and ecx, ;mov qword [rbx], rax;mov dword [rbx + ], ecx": 7,
                "add rax, ;cmp rbx, rax;je ;call fcn.13f110520;add rax, ": 13,
                "dec eax;mov dword [rbx + 8], eax;test ebp, ebp;jle ;mov r8d, ebp": 7,
                "jle ;mov r8d, ebp;mov ecx, esi;call fcn.13f11bab0;mov edi, eax": 13,
                "mov ecx, esi;call fcn.13f11bab0;mov edi, eax;jmp ;or ecx, ": 7,
                "mov edi, eax;cmp edi, ebp;jne ;movzx eax, byte [arg_30h];mov rbx, qword [arg_38h]": 7,
                "or eax, ;jmp ;mov eax, dword [rcx + ];add rsp, ;ret": 8,
                "call fcn.13f11bb94;mov edi, eax;jmp ;call fcn.13f10fca8;mov dword [rax], 9": 7,
                "call fcn.13f12f340;mov eax, edi;jmp ;call fcn.13f10fc38;and dword [rax], 0": 9,
                "mov qword [lpNumberOfBytesWritten], rcx;mov rcx, qword [rdx + rcx*8];imul r13, rax, ;mov r12b, byte [r13 + rcx + ];mov qword [arg_58h], r13": 4,
                "add r12b, r12b;sar r12b, 1;lea eax, [r12 - 1];cmp al, 1;ja ": 4,
                "mov eax, r15d;not eax;test al, 1;jne ;call fcn.13f10fc38": 4,
                "call fcn.13f10fc38;xor ecx, ecx;mov dword [rax], ecx;jmp ;test byte [r13 + rcx + 8], ": 3,
                "mov rdi, r14;mov dword [cchWideChar], eax;xor eax, eax;movzx ecx, ax;mov word [lpMultiByteStr], ax": 3,
                "mov ecx, dword [cchWideChar];xor eax, eax;lea r8, [lpMultiByteStr];mov qword [arg_38h], rax;mov qword [var_30h], rax": 3,
                "mov r9d, 1;xor edx, edx;mov dword [var_28h], 5;mov qword [var_20h], rax;inc rdi": 3,
                "mov ecx, eax;mov word [lpMultiByteStr], ax;call fcn.13f12f36c;movzx ecx, word [lpMultiByteStr];cmp ax, cx": 1,
                "movzx ecx, word [lpMultiByteStr];cmp ax, cx;jne ;inc ebx;inc dword [arg_40h]": 1,
                "mov r15, qword [lpNumberOfBytesWritten];lea r12, [];mov rcx, qword [r12 + r15*8];inc ebx;mov rdi, r15": 1,
                "mov rdi, r15;mov byte [r13 + rcx + ], al;mov rax, qword [r12 + r15*8];mov dword [r13 + rax + ], 1;jmp ": 1,
                "mov qword [arg_18h], rbx;mov dword [arg_8h], ecx;push rsi;push rdi;push r14": 4,
                "call fcn.13f11c44c;mov edi, eax;jmp ;call fcn.13f10fca8;mov dword [rax], 9": 1,
                "call fcn.13f12f21c;cmp rax, ;je ;mov rax, qword [];mov ecx, 2": 2,
                "mov rax, qword [];mov ecx, 2;cmp edi, 1;jne ;test byte [rax + ], dil": 2,
                "mov qword [rbx], rax;mov qword [rbx + ], rax;mov dword [rbx + 8], eax;add rsp, ;pop rbx": 3,
                "add rsp, ;pop rbx;ret;int3;lock inc dword [rcx]": 3,
                "je ;mov rdx, qword [rax];test rdx, rdx;je ;lock inc dword [rdx]": 4,
                "mov rax, qword [rbx + ];test rax, rax;je ;cmp dword [rax], 0;jne ": 10,
                "mov edi, ;sub rcx, rdi;call fcn.13f10ef88;mov rcx, qword [rbx + ];sub rcx, rdi": 5,
                "mov rcx, qword [rdi - 8];test rcx, rcx;je ;cmp dword [rcx], 0;jne ": 5,
                "int3;int3;test rcx, rcx;je ;or r9d, ": 4,
                "je ;lock add dword [rax], r9d;mov rax, qword [rcx + ];test rax, rax;je ": 15,
                "je ;lock add dword [rax], r9d;lea rax, [rcx + ];mov r8d, 6;lea rdx, []": 5,
                "push rbx;sub rsp, ;call fcn.13f11d3c0;push rbx;sub rsp, ": 1,
                "test rdx, rdx;je ;test rcx, rcx;je ;mov rbx, qword [rcx]": 6,
                "je ;mov qword [rcx], rdx;mov rcx, rdx;call fcn.13f11c540;test rbx, rbx": 6,
                "je ;mov rcx, rbx;call fcn.13f11c5cc;mov rax, rdi;jmp ": 6,
                "jne ;mov dword [], 1;call qword [];jmp ;cmp ebx, ": 6,
                "xor eax, eax;lea rcx, [var_70h];mov byte [rcx], al;inc eax;inc rcx": 7,
                "and dword [var_30h], 0;lea r8, [var_70h];mov dword [var_28h], eax;lea rax, [rbp + ];mov r9d, ebx": 7,
                "jmp ;test byte [rdx], 2;je ;or byte [rcx], ;mov al, byte [r9 + rcx - ]": 6,
                "test byte [rdx], 2;je ;or byte [rcx], ;mov al, byte [r9 + rcx - ];mov byte [rcx + ], al": 6,
                "call fcn.13f11d3c0;mov rdi, rax;mov ecx, dword [];test dword [rax + ], ecx;je ": 6,
                "mov ecx, ;call fcn.13f113770;mov rbx, qword [rdi + ];mov qword [arg_30h], rbx;cmp rbx, qword []": 5,
                "jne ;lea ecx, [rbx + ];call fcn.13f10febc;mov rax, rbx;mov rbx, qword [arg_38h]": 5,
                "mov rbx, qword [arg_38h];add rsp, ;push rbx;sub rsp, ;mov ebx, ecx": 1,
                "jne ;movups xmm0, xmmword [rax];movups xmmword [rcx], xmm0;movups xmm1, xmmword [rax + ];movups xmmword [rcx + ], xmm1": 3,
                "dec eax;jne ;mov rcx, qword [];cmp rcx, r14;je ": 2,
                "call fcn.13f11c90c;xor esi, esi;mov edi, eax;test eax, eax;jne ": 3,
                "cmp eax, r15d;jbe ;movzx ecx, di;call qword [];test eax, eax": 3,
                "lea rax, [rbx + ];add rax, rcx;sub edi, r8d;mov rax, rsp;mov qword [rax + 8], rbx": 1,
                "add rax, rcx;sub edi, r8d;lea ecx, [r15 + rdi];or byte [rax], 4;add rax, r15": 2,
                "sub rcx, r15;jne ;add rdx, 2;cmp byte [rdx], sil;jne ": 2,
                "add rdx, 2;cmp byte [rdx], sil;jne ;lea rax, [rbx + ];mov ecx, ": 2,
                "mov ecx, dword [rbx + 4];sub ecx, ;je ;sub ecx, 4;je ": 2,
                "mov rax, rsi;jmp ;mov rax, qword [];jmp ;mov rax, qword []": 2,
                "mov dword [rbx + 8], esi;lea rdi, [rbx + ];movzx eax, si;mov ecx, 6;rep stosd dword [rdi], eax": 2,
                "movzx eax, si;mov ecx, 6;rep stosd dword [rdi], eax;jmp ;cmp dword [], esi": 2,
                "mov eax, ebp;lea r9, [r12 + ];lea r11, [rax + rax*2];lea r14, [];mov ebp, 4": 1,
                "lea rdi, [r11 + r12];mov edx, 6;movzx eax, word [rdi + rcx - 8];mov word [rcx], ax;lea rcx, [rcx + 2]": 1,
                "mov qword [arg_10h], rsi;push rbp;push rdi;push r14;mov rbp, rsp": 2,
                "lea eax, [rdi + 1];cmp eax, ;ja ;mov rax, qword [var_20h];mov rcx, qword [rax + ]": 2,
                "movzx eax, word [rcx + rdi*2];jmp ;mov esi, edi;lea rdx, [var_20h];sar esi, 8": 2,
                "jne ;cmp byte [var_8h], al;je ;mov rax, qword [var_10h];and dword [rax + ], ": 2,
                "pop rdi;pop rbp;ret;int3;test rcx, rcx": 2,
                "cmp rdi, rax;je ;cmp dword [rdi], 0;jne ;mov rcx, rdi": 1,
                "mov edi, eax;call fcn.13f118170;mov rbx, rax;test rax, rax;jne ": 3,
                "mov ecx, dword [];mov rdx, rax;call fcn.13f11818c;mov rcx, rbx;test eax, eax": 3,
                "call fcn.13f10ef88;xor ebx, ebx;mov ecx, edi;call qword [];mov rax, rbx": 3,
                "mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi;sub rsp, ;mov rdi, rcx": 18,
                "jne ;mov rax, rbx;jmp ;and qword [var_20h], 0;xor r9d, r9d": 6,
                "mov qword [arg_10h], rbp;mov qword [arg_18h], rsi;push rdi;sub rsp, ;mov rbx, r8": 7,
                "mov rbx, r8;mov rdi, rdx;mov rsi, rcx;call fcn.13f11123c;xor ebp, ebp": 7,
                "mov rsi, qword [arg_50h];add rsp, ;pop rdi;ret;xor r9d, r9d": 7,
                "mov qword [var_20h], rbp;call fcn.13f11b8c0;int3;int3;int3": 7,
                "lea rcx, [rsi + ];lea r9d, [rdx - 1];call fcn.13f130e24;test eax, eax;mov qword [arg_8h], rbx": 1,
                "lea r9d, [rdx - 1];call fcn.13f130e24;test eax, eax;jne ;mov word [rsi + ], r15w": 6,
                "mov rcx, rbx;call fcn.13f130de4;test rax, rax;je ;lea r14, [rbx + rax*2]": 6,
                "jae ;cmp di, ;je ;lea rcx, [rsi + ];lea edx, [arg_3fh]": 6,
                "movups xmmword [r8 + ], xmm1;movups xmm0, xmmword [rdx + ];movups xmmword [r8 + ], xmm0;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi": 1,
                "movups xmm0, xmmword [rdx + ];movups xmmword [r8 + ], xmm0;movups xmm1, xmmword [rdx + ];movups xmmword [r8 + ], xmm1;movups xmm0, xmmword [rdx + ]": 12,
                "movups xmmword [r8 + ], xmm1;movups xmm0, xmmword [rdx + ];movups xmmword [r8 + ], xmm0;movups xmm1, xmmword [rdx + ];add r8, r9": 4,
                "dec rax;jne ;movups xmm0, xmmword [rdx];movups xmmword [r8], xmm0;movups xmm1, xmmword [rdx + ]": 4,
                "sub rsp, ;mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax;mov rdi, qword [rbp + ]": 4,
                "mov qword [var_50h], r8;mov r12, rdx;mov rbx, rcx;call fcn.13f11d3c0;lea rcx, [rax + ]": 4,
                "lea r15, [rax + ];lea r14, [rax + ];mov qword [var_38h], rcx;xor ecx, ecx;mov qword [var_40h], r15": 4,
                "xor ecx, ecx;test eax, eax;jne ;cmp word [rbx], ;jne ": 3,
                "jne ;cmp word [rbx], ;jne ;cmp word [rbx + 2], cx;jne ": 3,
                "mov rcx, rsi;call fcn.13f130e24;xor esi, esi;test eax, eax;je ": 2,
                "mov edx, ;mov dword [r15], eax;lea r15, [r13 + 1];mov rcx, r14;mov r9, r15": 2,
                "je ;jmp ;jmp ;mov rax, qword [var_40h];mov word [rax], si": 2,
                "mov rdx, rsi;mov rcx, rbp;mov r8, qword [rdi];call fcn.13f130d20;test eax, eax": 1,
                "cmp ebx, dword [arg_70h];jl ;add rsp, ;pop rdi;pop rsi": 1,
                "mov rcx, rdi;call fcn.13f11c764;mov rcx, rdi;call fcn.13f11c5cc;and dword [rbx + ], ": 2,
                "mov rcx, rdi;call fcn.13f11c5cc;and dword [rbx + ], ;mov rax, rsi;mov rbx, qword [arg_50h]": 2,
                "push r15;sub rsp, ;mov rdi, rcx;mov ecx, ;mov ebp, 1": 3,
                "lock xadd dword [rax], ecx;add ecx, ebx;jne ;mov rcx, qword [rdi + ];call fcn.13f10ef88": 3,
                "add ecx, ebx;jne ;mov rcx, qword [rdi + ];call fcn.13f10ef88;mov qword [rdi + ], r13": 3,
                "mov rcx, qword [rdi + ];call fcn.13f10ef88;mov rax, qword [rdi + ];mov qword [rdi + ], r13;mov qword [rdi + ], r13": 2,
                "movsxd rax, edx;shl rax, 5;mov rax, qword [rax + rcx + ];jmp ;mov ebp, 1": 3,
                "mov rcx, rbx;call fcn.13f130ef0;mov r14, rax;test rax, rax;je ": 2,
                "mov rbp, rax;sub rbp, rbx;sar rbp, 1;je ;cmp word [rax], ": 2,
                "jle ;add r14, 2;lea rdx, [];mov rcx, r14;call fcn.13f130de4": 2,
                "lea rdx, [];mov rcx, r14;call fcn.13f130de4;mov rbx, rax;test rax, rax": 2,
                "inc rdx;inc r8d;mov rcx, rax;cmp rdx, 5;jl ": 1,
                "inc r8d;mov rcx, rax;cmp rdx, 5;jl ;jmp ": 1,
                "mov edx, r15d;lea rcx, [rbp + ];mov eax, ;inc edx;and word [rcx], ax": 1,
                "mov eax, dword [rdi + 4];mov dword [r14], eax;mov eax, dword [r14 + 4];mov dword [rdi + ], eax;jmp ": 1,
                "call fcn.13f10ef88;mov eax, dword [var_44h];mov dword [rdi + 4], eax;jmp ;lea rcx, []": 1,
                "int3;and dword [], 0;ret;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi": 1,
                "and dword [], 0;ret;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;mov qword [arg_18h], rdi": 2,
                "sub rsp, ;lea rbx, [];lea rdi, [];jmp ;mov rax, qword [rbx]": 10,
                "cmp eax, 1;je ;mov ecx, 3;call fcn.13f12207c;test eax, eax": 6,
                "cmp dword [], 1;jne ;mov ecx, ;call fcn.13f11e950;mov ecx, ": 6,
                "cmp rax, ;jb ;xor eax, eax;ret;movsxd rax, edx": 7,
                "ja ;mov r8d, esi;lea rdx, [nNumberOfBytesToWrite];mov cl, byte [rbx];mov byte [rdx], cl": 6,
                "cmp word [rbx], si;je ;inc r8d;inc rdx;add rbx, 2": 6,
                "mov qword [var_20h], rsi;call qword [];mov rcx, qword [var_240h];xor rcx, rsp;call fcn.13f10e4e0": 6,
                "lea r11, [var_250h];mov rbx, qword [r11 + ];mov rbp, qword [r11 + ];mov rsi, qword [r11 + ];mov rsp, r11": 6,
                "call fcn.13f11b8c0;int3;int3;movsxd r8, dword [rcx + ];xor r9d, r9d": 5,
                "int3;int3;int3;sub rsp, ;mov ecx, 3": 1,
                "lea rbx, [rbx + 8];cmp rax, ;jb ;mov rbx, qword [arg_30h];add rsp, ": 5,
                "sub edx, 4;je ;sub edx, 6;je ;dec edx": 7,
                "or eax, ;jmp ;mov rdx, qword [rax + ];mov rcx, rdx;movsxd r8, dword []": 7,
                "lea r14, [rcx + 8];mov r15, qword [r14];jmp ;lea r14, [];mov rcx, qword []": 7,
                "mov r12d, ;cmp ebx, ;ja ;bt r12d, ebx;jae ": 7,
                "mov edx, ecx;mov dword [var_20h], ecx;mov eax, dword [];add ecx, eax;cmp edx, ecx": 7,
                "cmp ebx, 8;jne ;mov edx, dword [rsi + ];mov ecx, ebx;call r15": 7,
                "call r15;jmp ;mov ecx, ebx;call r15;cmp ebx, ": 7,
                "cmp ebx, 8;jne ;mov eax, dword [arg_68h];mov dword [rsi + ], eax;jmp ": 6,
                "mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi;sub rsp, ;xor edi, edi": 10,
                "jge ;movsxd rsi, ebx;mov rax, qword [];mov rcx, qword [rax + rsi*8];test rcx, rcx": 8,
                "je ;call fcn.13f10f26c;cmp eax, ;je ;inc edi": 8,
                "mov rax, qword [];jmp ;lea rcx, [var_50h];call qword [];cmp word [var_92h], r12w": 4,
                "jge ;mov rdx, rdi;mov rcx, r13;call fcn.13f113db0;mov rcx, rax": 4,
                "jmp ;movsxd rdx, ebx;lea r8, [];mov qword [r8 + rdx*8], rax;add dword [], r13d": 4,
                "mov edx, ;call fcn.13f11824c;inc dword [rbx + ];inc edi;mov dword [var_20h], edi": 4,
                "call fcn.13f11824c;inc dword [rbx + ];inc edi;mov dword [var_20h], edi;inc r14": 4,
                "inc edi;mov dword [var_20h], edi;inc r14;mov qword [var_38h], r14;add rsi, 8": 4,
                "test edi, edi;cmove ecx, eax;call qword [];mov r14, rax;lea rcx, [rax + 1]": 4,
                "movzx eax, al;cmp eax, 2;jne ;movsx eax, byte [rbx + 8];or eax, ": 4,
                "mov r12, qword [r11 + ];mov rsp, r11;pop r15;pop r14;mov rax, rsp": 1,
                "test al, 2;je ;or eax, ;mov dword [rcx + ], eax;jmp ": 6,
                "mov ecx, eax;call fcn.13f1330a0;mov dword [rdi + 8], eax;lea ecx, [rax + 1];cmp ecx, 1": 2,
                "je ;test dword [rdi + ], ;jne ;mov dword [rdi + ], ;mov rcx, qword [rdi]": 6,
                "or dword [rdi + ], eax;and dword [rdi + 8], 0;or eax, ;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h]": 2,
                "call fcn.13f11b8a0;or rax, ;jmp ;call fcn.13f110528;mov rcx, rbx": 3,
                "mov rax, rdi;mov rbx, qword [arg_38h];add rsp, ;pop rdi;ret": 3,
                "xor rax, rsp;mov qword [arg_1040h], rax;mov r14, rcx;call fcn.13f11ba88;xor ebx, ebx": 4,
                "lea rcx, [];mov rcx, qword [rcx + r13*8 + ];imul r15, rax, ;mov r12b, byte [r15 + rcx + ];add r12b, r12b": 4,
                "sub rsi, rax;mov rax, rsi;jmp ;mov rdi, qword [r14];sub rdi, qword [r14 + ]": 4,
                "cmp rcx, rax;jae ;cmp byte [rcx + 1], ;jne ;inc rcx": 5,
                "je ;mov rax, rcx;sub rax, rcx;cmp byte [rcx], ;jne ": 3,
                "mov rax, rcx;sub rax, rcx;cmp byte [rcx], ;jne ;inc rbx": 2,
                "jb ;test dword [r14 + ], ;jmp ;xor r8d, r8d;mov rdx, rsi": 2,
                "call fcn.13f11b8a0;or rax, ;mov rbx, qword [arg_58h];add rsp, ;pop r15": 1,
                "jne ;call fcn.13f10fca8;mov dword [rax], 9;or rax, ;jmp ": 2,
                "mov dword [rax], 9;or rax, ;jmp ;lea r8, [arg_48h];mov r9d, edi": 2,
                "mov rax, qword [arg_48h];mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];add rsp, ;pop rdi": 2,
                "sub rsp, ;mov rbx, rdx;mov rdi, rcx;call fcn.13f133a40;mov esi, eax": 5,
                "and ecx, eax;and edi, ebx;or ecx, edi;mov dword [arg_30h], ecx;cmp byte [], 0": 5,
                "push rbx;sub rsp, ;mov rbx, rcx;call fcn.13f133a40;and ebx, ": 6,
                "movsd qword [rax - ], xmm3;movsd qword [rax - ], xmm0;movsd qword [rax - ], xmm1;mov qword [rax - ], r8;mov qword [arg_8h], rbx": 1,
                "mov qword [rax - ], r8;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi;sub rsp, ": 1,
                "test ebx, ebx;mov rbx, qword [arg_30h];sete al;add rsp, ;pop rdi": 8,
                "lea rbp, [rax - ];sub rsp, ;movaps xmmword [rax - ], xmm6;mov rax, qword [];xor rax, rsp": 8,
                "sub rsp, ;movaps xmmword [rax - ], xmm6;mov rax, qword [];xor rax, rsp;mov qword [rbp - ], rax": 8,
                "mov ecx, ;mov edi, r9d;mov rbx, r8;call fcn.13f11fac4;mov ecx, dword [rbp + ]": 8,
                "xor eax, eax;jmp ;imul rbx, rcx;mov eax, 1;test rbx, rbx": 8,
                "xor r8d, r8d;mov eax, r8d;test rdx, rdx;je ;cmp word [rcx], r8w": 7,
                "int3;int3;sub rsp, ;sub rsp, ;call fcn.13f133a40": 1,
                "cmp r10, r11;jne ;mov r10, qword [rsp];mov r11, qword [var_8h];add rsp, ": 6,
                "jae ;mov edx, 1;call fcn.13f11ffac;test eax, eax;jne ": 5,
                "push rbx;sub rsp, ;mov eax, ;movzx ebx, dx;cmp cx, ax": 6,
                "lea r9, [arg_40h];lea rdx, [cchSrc];mov r8d, ecx;call qword [];xor ecx, ecx": 6,
                "test eax, eax;je ;movzx ecx, word [arg_40h];movzx eax, cx;movzx ecx, bx": 6,
                "mov edx, ;cmp cx, dx;jb ;lea eax, [rdx + ];cmp cx, ax": 39,
                "sub rsp, ;mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax;xor eax, eax": 6,
                "mov dword [rsp + ], eax;call fcn.13f10f2d4;mov qword [arg_10h], rbx;mov word [arg_8h], cx;push rbp": 1,
                "je ;mov rax, qword [rbp - ];and dword [rax + ], ;or eax, ;jmp ": 3,
                "jmp ;mov r8, qword [rbp - ];test r8, r8;je ;movzx r15d, word [r8]": 3,
                "add r8, 2;mov ecx, ;mov qword [rbp - ], r8;test edx, edx;js ": 2,
                "movzx eax, r15w;sub ax, r11w;cmp ax, cx;ja ;lea rcx, []": 2,
                "mov ecx, r9d;test r9d, r9d;je ;dec ecx;je ": 2,
                "test r9d, r9d;je ;dec ecx;je ;dec ecx": 2,
                "jne ;test r14b, ;je ;bt r14d, 8;jae ": 1,
                "jle ;mov qword [arg_8h], rbx;mov qword [arg_10h], rbp;mov qword [arg_18h], rsi;push rdi": 4,
                "mov rdx, rbp;call fcn.13f120c98;test esi, esi;jg ;cmp dword [rbx], 0": 3,
                "test esi, esi;jg ;cmp dword [rbx], 0;jne ;mov dword [rbx], r15d": 6,
                "mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi;sub rsp, ;xor ebx, ebx": 22,
                "mov qword [arg_10h], rsi;push rdi;sub rsp, ;xor ebx, ebx;lea ecx, [rbx + 1]": 4,
                "ja ;lea ecx, [rdi + ];call fcn.13f11383c;test eax, eax;je ": 4,
                "mov ecx, edi;call fcn.13f110590;mov rax, qword [];mov rcx, qword [rax + rsi*8];test byte [rcx + ], ": 4,
                "mov rcx, rax;movsxd rdi, edi;mov rax, qword [];mov qword [rax + rdi*8], rcx;test rcx, rcx": 4,
                "call fcn.13f11b8a0;xor eax, eax;jmp ;mov edi, ;jmp ": 12,
                "or edi, ;jmp ;mov r11d, r8d;jmp ;test dil, 2": 4,
                "mov r10d, r8d;or edi, r13d;jmp ;sub ecx, ;mov qword [arg_8h], rbx": 1,
                "mov r10d, r8d;or edi, r13d;jmp ;sub ecx, ;je ": 3,
                "test r9d, r9d;jne ;mov r9d, r8d;bts esi, ;jmp ": 3,
                "jne ;mov r9d, r8d;bts esi, ;jmp ;test edi, ": 3,
                "jne ;add rbx, 2;cmp word [rbx], r13w;je ;lea rdx, []": 2,
                "jne ;test r8, r8;je ;test rcx, rcx;je ": 4,
                "test rcx, rcx;je ;and dword [rcx], edx;xor eax, eax;jmp ": 4,
                "test rcx, rcx;je ;or dword [rcx], ;cmp r8, ;jbe ": 4,
                "or dword [rcx], ;cmp r8, ;jbe ;call fcn.13f10fca8;mov ebx, ": 4,
                "mov rsi, qword [r11 + ];mov rsp, r11;pop rdi;ret;test rsi, rsi": 4,
                "mov rcx, rsi;call fcn.13f117950;call fcn.13f10fca8;mov ebx, ;mov dword [rax], ebx": 4,
                "mov eax, ;jmp ;test dl, ;je ;call fcn.13f10fca8": 6,
                "je ;mov rax, qword [rbx + ];and edx, ;mov qword [rbx], rax;mov dword [rbx + ], edx": 6,
                "mov rax, qword [rbx + ];mov word [rax], r14w;jmp ;mov ebp, 2;lea rdx, [arg_48h]": 6,
                "mov word [arg_48h], r14w;call fcn.13f11bab0;mov edi, eax;cmp edi, ebp;jne ": 5,
                "jne ;movzx eax, r14w;mov rbx, qword [arg_40h];mov rbp, qword [arg_50h];add rsp, ": 5,
                "mov r15d, r9d;mov r12, r8;mov r13d, edx;test r14d, r14d;jne ": 5,
                "mov ecx, r14d;mov dword [var_28h], edi;sbb edx, edx;mov qword [var_20h], rdi;and edx, 8": 3,
                "xor edx, edx;mov rcx, rbx;add r8, r8;call fcn.13f117950;mov r9d, r15d": 3,
                "mov ecx, r13d;call qword [];mov edi, eax;lea rcx, [rbx - ];cmp dword [rcx], ": 3,
                "mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi;sub rsp, ;mov esi, edx": 4,
                "lea rcx, [var_40h];mov r9d, ebx;mov dword [var_30h], eax;mov eax, dword [arg_98h];mov r8, rdi": 4,
                "mov rbp, r8;mov rsi, rdx;mov rdi, rcx;test rdx, rdx;je ": 3,
                "cmp byte [rdx], r14b;jne ;test rcx, rcx;je ;mov word [rcx], r14w": 3,
                "jne ;test rcx, rcx;je ;mov word [rcx], r14w;xor eax, eax": 3,
                "ret;lea rcx, [rsp + ];mov rdx, r9;call fcn.13f10f2d4;mov rax, qword [rsp + ]": 3,
                "movsxd rax, dword [rcx + ];cmp rbp, rax;jb ;cmp byte [rsi + 1], r14b;je ": 3,
                "mov rax, qword [rsp + ];mov qword [rsp + ], rdi;mov ecx, dword [rax + 4];call qword [];test eax, eax": 3,
                "jne ;call fcn.13f10fca8;or ebx, ;mov dword [rax], ;cmp byte [var_48h], r14b": 3,
                "int3;xor r9d, r9d;jmp fcn.13f121778;mov rax, rsp;mov qword [rax + 8], rbx": 3,
                "push r14;sub rsp, ;xor esi, esi;xor bpl, bpl;mov rdi, rcx": 5,
                "mov dword [rdi + 8], eax;lea ecx, [rax + 1];cmp ecx, 2;jbe ;test byte [rdi + ], ": 4,
                "cmp eax, 2;jbe ;cmp ecx, ;je ;xor eax, eax": 4,
                "cmp dword [rcx], edi;je ;lea rax, [rdx + ];add rcx, ;cmp rcx, rax": 4,
                "lea eax, [r8 - 4];jmp ;cmp r8, 1;jne ;or eax, ": 3,
                "jne ;mov edx, ;mov rax, qword [rbx + ];add rdx, ;mov qword [rdx + rax - 8], r9": 3,
                "mov rcx, rbx;mov qword [var_20h], rax;call fcn.13f121d78;mov eax, dword [arg_40h];mov qword [], rdi": 2,
                "sete al;inc rbx;mov ebp, eax;jmp ;inc dword [r14]": 3,
                "mov ebp, eax;jmp ;inc dword [r14];test rdi, rdi;je ": 3,
                "mov byte [rdi], al;inc rdi;inc rbx;test sil, sil;je ": 3,
                "je ;mov byte [rdi - 1], 0;jmp ;dec rbx;xor esi, esi": 3,
                "cmp byte [rbx], 9;jne ;inc rbx;jmp ;cmp byte [rbx], 0": 3,
                "jmp ;cmp byte [rbx], 0;je ;test r15, r15;je ": 3,
                "mov rbx, rax;jmp ;xor eax, eax;xor edx, edx;test esi, esi": 2,
                "jmp ;xor eax, eax;xor edx, edx;test esi, esi;sete al": 2,
                "je ;test esi, esi;jne ;cmp al, ;je ": 2,
                "cmp al, 9;je ;test edx, edx;je ;movsx ecx, al": 2,
                "inc rdi;inc dword [r14];mov al, byte [rbx];mov byte [rdi], al;inc rdi": 2,
                "inc rdi;jmp ;test eax, eax;je ;inc rbx": 2,
                "jne ;or eax, ;jmp ;cmp al, ;je ": 3,
                "mov al, byte [rbx];test al, al;jne ;lea eax, [rdi + 1];mov edx, 8": 3,
                "mov qword [], rax;mov rax, rsp;mov qword [rax + 8], rbx;mov qword [rax + ], rbp;mov qword [rax + ], rsi": 1,
                "mov r8, rbx;mov rdx, rbp;mov rcx, rax;call fcn.13f11b2a8;test eax, eax": 2,
                "mov rcx, rax;call fcn.13f11b2a8;test eax, eax;jne ;add rdi, 8": 2,
                "test eax, eax;jne ;add rdi, 8;movsxd rax, esi;add rbx, rax": 2,
                "add rbx, rax;cmp byte [rbx], 0;jne ;mov rbx, qword [];mov rcx, rbx": 2,
                "mov rbx, qword [];mov rcx, rbx;call fcn.13f10ef88;and qword [], 0;and qword [rdi], 0": 2,
                "and rax, rcx;movabs rcx, ;cmp rax, rbx;cmove rax, rcx;mov qword [], rax": 4,
                "xor edx, edx;xor ecx, ecx;mov dword [var_28h], ebp;mov qword [var_20h], rax;call qword []": 5,
                "test eax, eax;jne ;mov rcx, rsi;call fcn.13f10ef88;mov rsi, r14": 5,
                "mov edi, eax;movzx ecx, byte [rbx];call fcn.13f117bf8;test eax, eax;je ": 6,
                "je ;inc rbx;inc rbx;jmp ;cmp al, ": 6,
                "jne ;mov rax, rbx;mov rbx, qword [arg_30h];add rsp, ;pop rdi": 6,
                "mov eax, dword [r9 + rax];cmp eax, ;jne ;mov r8, qword [rdx];mov rcx, r10": 6,
                "int3;push rbx;sub rsp, ;lea r9, [arg_40h];mov rbx, r8": 6,
                "mov eax, dword [rax + rcx + 4];add rsp, ;pop rbx;ret;int3": 7,
                "jne ;call fcn.13f1103f8;movsxd rax, dword [rbx + ];mov edi, dword [rbx + ];add rax, qword [rsi + 8]": 11,
                "je ;lea ecx, [r8 - 1];lea rax, [r9 + rcx*8];mov eax, dword [rax + r10 + 4];jmp ": 10,
                "sub rsp, ;lea eax, [r9 - ];mov r10d, ;test r10d, eax;je ": 9,
                "push r12;push r13;mov qword [arg_8h], rbx;push rdi;sub rsp, ": 1,
                "mov rdi, rdx;mov rdx, qword [arg_a8h];mov r14, rcx;lea rcx, [rax - ];mov r15d, ": 9,
                "mov r14, rcx;lea rcx, [rax - ];mov r15d, ;mov ebx, r9d;mov rsi, r8": 9,
                "lea rcx, [rax - ];mov r15d, ;mov ebx, r9d;mov rsi, r8;mov r12d, ": 9,
                "mov edx, ;mov eax, ebx;neg eax;sbb cl, cl;and cl, ": 9,
                "jmp ;movabs rax, ;mov esi, 1;test qword [r14], rax;je ": 8,
                "mov byte [rdi], r10b;mov rax, qword [r14];add rdi, rsi;and rax, r11;neg rax": 7,
                "mov r15, rdi;add rdi, rsi;test ebx, ebx;jne ;mov byte [r15], r9b": 7,
                "test qword [r14], r11;jbe ;movabs r8, ;test ebx, ebx;jle ": 6,
                "and rax, r11;shr rax, cl;add ax, r10w;cmp ax, ;jbe ": 5,
                "add ax, dx;mov byte [rdi], al;shr r8, 4;sub ebx, esi;add rdi, rsi": 4,
                "and rax, r8;and rax, r11;shr rax, cl;cmp ax, 8;jbe ": 4,
                "and rax, r11;shr rax, cl;cmp ax, 8;jbe ;lea rcx, [rdi - 1]": 4,
                "add rdi, rbx;xor r9d, r9d;lea r10d, [r9 + ];cmp byte [r15], r9b;cmove rdi, r15": 2,
                "lea r10d, [r9 + ];cmp byte [r15], r9b;cmove rdi, r15;neg r13d;sbb al, al": 2,
                "add rdi, rsi;jmp ;mov byte [rdi], ;add rdi, rsi;neg rcx": 2,
                "sar rdx, 7;mov rax, rdx;mov rax, rsp;mov qword [rax + 8], rbx;mov qword [rax + ], rbp": 1,
                "jl ;movabs rax, ;imul rcx;sar rdx, 2;mov rax, rdx": 1,
                "jmp ;cmp byte [arg_98h], 0;mov rbp, qword [arg_90h];je ;xor ebx, ebx": 1,
                "je ;mov rcx, rbx;call fcn.13f112c90;movsxd rcx, r15d;mov rdx, rbx": 1,
                "call fcn.13f1348cc;test rdi, rdi;jne ;call fcn.13f10fca8;mov dword [rax], ebp": 5,
                "mov rax, qword [arg_d8h];mov r9d, dword [arg_d0h];mov r8d, esi;mov qword [var_30h], rax;lea rax, [var_40h]": 2,
                "pop rbp;pop rbx;ret;int3;mov rax, rsp": 2,
                "mov dword [rax], ebx;call fcn.13f11b8a0;jmp ;cmp byte [arg_70h], 0;je ": 3,
                "call fcn.13f11b8a0;jmp ;cmp byte [arg_70h], 0;je ;cmp ebx, r14d": 3,
                "mov byte [rdi], cl;mov ebx, dword [rbp + 4];test ebx, ebx;jns ;neg ebx": 2,
                "cmp byte [arg_70h], 0;jne ;mov eax, ebx;mov ebx, r14d;cmp r14d, eax": 2,
                "mov ebx, r14d;cmp r14d, eax;cmovge ebx, eax;test ebx, ebx;je ": 2,
                "movsxd r8, ebx;mov edx, ;mov rcx, rsi;call fcn.13f117950;xor ebx, ebx": 2,
                "mov rdi, rdx;mov esi, r9d;mov ebp, ;lea r8, [var_48h];lea rdx, [var_30h]": 3,
                "mov rax, qword [];xor rax, rsp;mov qword [var_70h], rax;mov rcx, qword [rcx];mov rdi, r8": 4,
                "call fcn.13f11b8a0;mov eax, ebx;jmp ;test rdi, rdi;je ": 3,
                "lea r9, [var_40h];mov r8d, ebp;mov rcx, rbx;call fcn.13f134730;test eax, eax": 3,
                "mov r8d, ebp;mov qword [var_28h], rax;mov rdx, rdi;mov rcx, rsi;mov byte [var_20h], 1": 3,
                "mov rcx, qword [var_70h];xor rcx, rsp;call fcn.13f10e4e0;add rsp, ;pop r14": 3,
                "jmp ;sub al, ;test al, ;je ;inc rbx": 2,
                "je ;mov rax, qword [r8 + ];mov rcx, qword [rax];mov al, byte [rcx];cmp byte [rbx], al": 2,
                "mov rbx, rdx;mov r8, r9;mov rdx, rax;test ecx, ecx;je ": 2,
                "call fcn.13f1114a8;cmp eax, ;push rbx;push rbp;push rsi": 1,
                "call qword [];cmp eax, ;jne ;mov r15d, ebp;mov rsi, r14": 1,
                "je ;inc rsi;cmp byte [rsi], r12b;je ;inc rsi": 1,
                "mov r8, r14;mov ecx, dword [rax + 4];mov edx, 1;mov r9d, esi;mov dword [var_28h], ebp": 1,
                "mov r8, r14;lea edx, [rbx + ];mov r9d, ebx;mov dword [var_28h], r12d;mov qword [var_20h], r12": 1,
                "mov ebx, r12d;test rdx, rdx;jne ;test r8, r8;je ": 2,
                "je ;mov qword [rcx], r12;mov rdx, qword [arg_88h];lea rcx, [var_20h];call fcn.13f10f2d4": 2,
                "mov ebx, ;jmp ;lea r9, [var_20h];mov rdx, r15;mov rcx, rdi": 2,
                "mov rcx, rdi;call fcn.13f123040;cmp rax, ;jne ;test rdi, rdi": 2,
                "mov r13, qword [var_38h];cmp qword [r13 + ], r12;jne ;test rsi, rsi;je ": 3,
                "je ;cmp dword [cchWideChar], r12d;jne ;cmp byte [r15 + rbx - 1], r12b;jne ": 3,
                "jne ;lea rbx, [rdi - 1];jmp ;cmp dword [cchWideChar], r12d;jne ": 3,
                "mov r9d, 1;mov qword [var_38h_2], rax;mov eax, dword [r13 + ];mov qword [var_30h], r12;mov dword [var_28h], eax": 3,
                "je ;cmp dword [cchWideChar], r12d;jne ;test eax, eax;js ": 3,
                "or rbx, ;mov r8, r14;mov qword [var_38h_2], rcx;mov ecx, dword [rax + 4];mov qword [var_30h], r12": 2,
                "mov r8, r14;mov qword [var_38h_2], rcx;mov ecx, dword [rax + 4];mov qword [var_30h], r12;mov r9d, ebx": 2,
                "mov ecx, dword [rax + 4];mov qword [var_30h], r12;mov r9d, ebx;xor edx, edx;mov dword [var_28h], r12d": 2,
                "mov rsi, rcx;test rdx, rdx;je ;test r8, r8;je ": 3,
                "je ;test r8, r8;je ;test rdx, rdx;je ": 3,
                "mov eax, ebx;jmp ;inc rax;test rbx, rbx;je ": 1,
                "ja ;call fcn.13f10fca8;mov ebx, ;jmp ;mov rax, rdi": 1,
                "jmp ;imul rbx, r8;test rcx, rcx;je ;call fcn.13f11b4fc": 2,
                "test rax, rax;je ;cmp rdi, rbx;jae ;sub rbx, rdi": 2,
                "lea rcx, [rdi + rax];xor edx, edx;mov r8, rbx;call fcn.13f117950;mov rax, rsi": 2,
                "xor edx, edx;mov r8, rbx;call fcn.13f117950;mov rax, rsi;mov rbx, qword [arg_30h]": 2,
                "sbb eax, eax;and eax, 1;ret;int3;int3": 3,
                "sub rsp, ;cmp qword [], 0;je ;call fcn.13f129a24;add rsp, ": 4,
                "ret;push rbx;sub rsp, ;lock dec dword [];mov ebx, ecx": 6,
                "je ;lea rcx, [nSize];xor r8d, r8d;xor edx, edx;call qword []": 9,
                "mov qword [], rax;mov rcx, qword [var_250h];xor rcx, rsp;call fcn.13f10e4e0;add rsp, ": 9,
                "mov rdx, rax;mov rcx, r10;mov dil, r9b;call fcn.13f118108;mov rbx, rax": 10,
                "je ;call fcn.13f1239dc;lock inc dword [];imul rcx, rsi, ;neg dil": 10,
                "call fcn.13f1239dc;lock inc dword [];xor r8d, r8d;mov rdx, rdi;mov rcx, rbx": 10,
                "lock inc dword [];xor r8d, r8d;mov rdx, rdi;mov rcx, rbx;call fcn.13f1186dc": 10,
                "mov rbx, rdx;mov rdi, rcx;xor r8d, r8d;mov rcx, rbx;xor edx, edx": 10,
                "mov rcx, rdi;call fcn.13f1181c4;mov rbx, qword [rsp + ];add rsp, ;mov rax, qword []": 1,
                "call fcn.13f1181c4;mov rbx, qword [rsp + ];add rsp, ;mov rax, qword [];xor rax, rcx": 1,
                "sub rsp, ;mov rbx, rcx;call fcn.13f135c10;mov eax, 1;xchg dword [rbx], eax": 10,
                "call fcn.13f135c10;mov eax, dword [rdi];test eax, eax;jne ;lea ebx, [rax + 1]": 10,
                "call fcn.13f135c10;mov al, bl;mov rbx, qword [arg_30h];add rsp, ;pop rdi": 9,
                "jmp sub.KERNEL32.dll_SwitchToThread;int3;int3;push rbx;sub rsp, ": 1,
                "lea rax, [];mov dword [rdi + ], ebx;mov rbx, qword [arg_30h];mov qword [rdi], rax;mov rax, rdi": 17,
                "call fcn.13f112d38;int3;mov byte [rax], 1;push rbx;sub rsp, ": 1,
                "lea rax, [];mov qword [rbx], rax;mov rax, rbx;add rsp, ;push rbx": 1,
                "sub rsp, ;push rbx;sub rsp, ;mov rbx, rcx;call fcn.13f10ecb4": 1,
                "shl rcx, 6;mov rax, qword [rdi + ];mov rcx, qword [rcx + rax + ];test rcx, rcx;push rbx": 1,
                "mov rdx, qword [r8 + rax];lea r8, [r8 + 8];mov rax, qword [rdx + ];sub rsp, ;test dword [], ": 1,
                "mov dword [rdx + 4], ecx;dec r9;jne ;mov ebx, r11d;mov qword [arg_8h], rcx": 1,
                "push rdi;sub rsp, ;mov qword [var_20h], ;mov qword [arg_60h], rbx;mov qword [arg_68h], rsi": 6,
                "call qword [];mov rdx, rax;lea rcx, [var_28h];call fcn.13f123fa0;mov edi, ": 5,
                "mov edi, ;mov ecx, edi;call fcn.13f10eae8;mov rbx, rax;test rax, rax": 5,
                "mov ecx, edi;call fcn.13f10eae8;mov rbx, rax;test rax, rax;je ": 5,
                "mov word [rbx + 8], cx;mov qword [rbx], rdx;jmp ;mov rbx, rsi;mov rcx, rdi": 5,
                "jmp ;mov rbx, rsi;mov rcx, rdi;call fcn.13f10eae8;test rax, rax": 5,
                "mov qword [rax + 8], rbx;jmp ;mov rax, rsi;mov qword [], rax;jmp ": 5,
                "mov ecx, 1;mov word [rbx], cx;mov qword [rbx + 8], rax;jmp ;mov rbx, rsi": 5,
                "and qword [], 0;and dword [], 0;add rsp, ;ret;mov qword [arg_18h], rbx": 6,
                "push r13;push r14;push r15;sub rsp, ;mov qword [arg_8h], rbx": 1,
                "push r13;push r14;push r15;sub rsp, ;mov r15, qword [rdx + ]": 6,
                "sub rsp, ;mov r15, qword [rdx + ];xor ebp, ebp;mov r14, rcx;mov qword [arg_68h], r15": 6,
                "mov r15, qword [rdx + ];xor ebp, ebp;mov r14, rcx;mov qword [arg_68h], r15;cmp dword [rcx + ], ebp": 6,
                "shl rdi, 6;cmp dword [rdi + r15 + 8], ebx;jbe ;mov rax, qword [rdi + r15 + ];xor r13d, r13d": 6,
                "jbe ;mov rax, qword [rdi + r15 + ];xor r13d, r13d;lea rsi, [rbx + rbx*8];lea r12d, [r13 + 1]": 6,
                "mov rax, qword [rdx + ];mov dword [rax + rsi*8], 4;inc r12d;cmp r12d, dword [r14 + ];jb ": 6,
                "mov r15, qword [arg_68h];push rbx;sub rsp, ;xor eax, eax;mov rbx, rcx": 1,
                "test ecx, ecx;js ;add rax, ;and dword [rax], 0;and qword [rax + 8], 0": 6,
                "call fcn.13f117950;xor r9d, r9d;cmp dword [rdi + rbx + 8], r9d;jbe ;mov rax, qword [rdi + r15 + ]": 5,
                "mov qword [rax + rdx*8 + ], rcx;cmp r9d, dword [rdi + rbx + 8];jb ;inc esi;cmp esi, dword [rbp + ]": 3,
                "pop rdi;ret;int3;mov qword [arg_18h], rbx;push rbp": 1,
                "add edi, eax;cmp r9, qword [rsi + ];je ;mov r9, qword [r9 + ];jmp ": 2,
                "xor r9d, r9d;test r9, r9;jne ;lea rcx, [rsi + ];call sub.KERNEL32.dll_LeaveCriticalSection": 2,
                "mov rcx, rax;call fcn.13f0e907c;xor r13d, r13d;test rax, rax;je ": 4,
                "jne ;cmp byte [], r8b;je ;mov r15d, r8d;lea rbx, [rsi + ]": 3,
                "mov eax, dword [rsi + 8];mov dword [rbx + rcx + ], eax;add r14d, ebp;mov r8, qword [rsi + ];test r8, r8": 2,
                "mov rax, qword [];test rax, rax;je ;movzx r8d, word [rax];movzx ecx, r13w": 2,
                "mov rax, qword [rdi + ];mov qword [rax], rbx;jmp ;cmp dword [], r13d;mov r15d, r13d": 2,
                "cmp ecx, 2;jne ;cmp byte [], r13b;je ;mov rax, qword [rsi]": 2,
                "jne ;mov rdx, qword [rsi];test rdx, rdx;je ;mov rcx, qword [rdi + ]": 2,
                "mov dword [var_30h], r13d;mov ebx, r14d;shl rbx, 6;mov dword [var_28h], r13d;mov qword [var_20h], rdx": 2,
                "jbe ;mov ecx, r13d;cmp dword [rdi + ], r13d;jbe ;mov r10, qword [rdi + ]": 1,
                "jne ;add ecx, ebp;cmp ecx, dword [rdi + ];jae ;jmp ": 1,
                "sub rsp, ;mov rbx, qword [rcx + ];mov rdi, rcx;test rbx, rbx;jmp ": 1,
                "mov rbx, qword [rcx + ];mov rdi, rcx;test rbx, rbx;jmp ;mov eax, dword [rbx + ]": 1,
                "lea r8, [arg_38h];lea rdx, [arg_40h];call qword [rax + 8];mov eax, dword [arg_30h];mov dword [rbx + ], eax": 1,
                "test rbx, rbx;jne ;mov rbx, qword [arg_48h];add rsp, ;pop rdi": 1,
                "jne ;mov rbx, qword [arg_48h];add rsp, ;pop rdi;ret": 1,
                "mov r12, qword [rbx + ];add edx, ecx;mov r13d, eax;mov rax, qword [rbx + ];mov r15d, edi": 2,
                "mov eax, dword [r8 + ];shl rdx, 6;add rdx, rsi;cmp dword [rdx + ], eax;jbe ": 2,
                "mov rcx, rbx;call fcn.13f1398ec;inc ebp;cmp ebp, dword [rsi + 8];jb ": 2,
                "mov r8d, dword [rbx + ];add r8d, dword [rbx + ];cmp ecx, r8d;cmovb r8d, ecx;cmp dword [rbx + ], r8d": 2,
                "mov ebx, dword [arg_90h];mov ebp, edx;mov rsi, rcx;xor r15b, r15b;test ebx, ebx": 3,
                "xor edi, edi;mov r14, rbx;mov rax, qword [rsi + ];mov r9, qword [rdi + rax];cmp dword [r9 + 4], 0": 3,
                "cmp r11d, ebx;jae ;mov r14, qword [rsi + ];mov r9d, r11d;shl r9, 3": 3,
                "mov rcx, qword [rax + rcx*8];cmp dword [rcx + 4], 0;mov qword [arg_18h], rbx;push rbp;push rsi": 1,
                "cmp dword [r15 + 4], 0;jbe ;lea r8, [arg_88h];lea rdx, [arg_80h];mov r9, r15": 2,
                "jne ;dec ebx;add rdi, 8;dec r12;jne ": 2,
                "add rsp, ;mov qword [arg_8h], rbx;mov dword [var_20h], r9d;mov dword [arg_18h], r8d;push rbp": 1,
                "jne ;test esi, esi;je ;xor r10d, r10d;test ebx, ebx": 2,
                "jae ;mov r14, qword [rbp + ];mov r9d, r11d;shl r9, 3;mov rdx, qword [r9 + r14]": 2,
                "cmp dword [r15 + 4], 0;jbe ;mov r9d, ebx;mov r8, r15;mov edx, esi": 2,
                "sub ecx, ebx;sub eax, esi;sub ecx, edx;cmp eax, ecx;jae ": 2,
                "cmp eax, ecx;jae ;sub r9d, esi;jmp ;sub r10d, ebx": 2,
                "jbe ;mov ecx, r8d;mov r9d, esi;shl rcx, 6;add rcx, qword [rdi + ]": 2,
                "jne ;mov dword [rdx], 6;inc dword [rcx + ];inc dword [rdi + ];inc r9d": 2,
                "mov ecx, dword [r8 + ];sub ecx, dword [rax + ];add ebx, ecx;inc edx;cmp edx, dword [rdi + ]": 1,
                "mov esi, eax;call fcn.13f127364;xor r9d, r9d;cmp r15d, esi;mov r8d, esi": 1,
                "cmp ecx, r12d;cmovb r9d, ecx;sub r12d, r9d;mov edx, esi;mov rcx, rdi": 1,
                "mov rcx, rdi;call fcn.13f124290;mov edx, ebp;mov rcx, rdi;mov ebx, eax": 1,
                "sub rsp, ;mov rdi, qword [rcx + ];mov ebx, r8d;mov r14d, r9d;shl rbx, 6": 2,
                "mov r8d, esi;add rdx, rbx;mov rcx, r15;call fcn.13f138628;dec r14d": 2,
                "mov rcx, r15;call fcn.13f138628;dec r14d;je ;inc esi": 2,
                "mov qword [arg_18h], r8;mov qword [arg_8h], rcx;push rbx;push rbp;mov rax, rsp": 1,
                "sub r8d, r9d;sub r12d, r13d;sub r12d, r10d;cmp r12d, r8d;cmovb r8d, r12d": 2,
                "test r10d, r10d;je ;add r10d, r11d;mov dword [arg_98h], r10d;jmp ": 2,
                "add rax, qword [r9 + ];test sil, sil;je ;mov r8, rbx;mov rdx, r15": 2,
                "jmp ;add dword [rdi + ], r11d;mov rcx, qword [var_38h];mov r8d, ebp;mov rdx, r15": 2,
                "mov esi, ;jmp ;cmp dword [rdi + ], 0;jbe ;xor edx, edx": 3,
                "mov al, byte [r9 + ];mov byte [arg_e0h], al;mov r9d, dword [r9 + ];or ecx, ;mov dword [var_38h], r11d": 3,
                "jae ;lea r8, [r14 + r9*4];mov qword [var_50h], r8;mov r8d, dword [r8];shl r8, 6": 2,
                "lea r8, [r14 + r9*4];mov qword [var_50h], r8;mov r8d, dword [r8];shl r8, 6;cmp dword [r8 + r10 + ], r11d": 2,
                "mov r8d, dword [r8];shl r8, 6;cmp dword [r8 + r10 + ], r11d;jne ;mov ebp, dword [r8 + r10 + 8]": 2,
                "cmp dword [rdx], r11d;jbe ;mov rax, qword [r13 + ];mov ecx, dword [r8 + rax + ];test ecx, ecx": 2,
                "mov ecx, dword [r8 + rax + ];test ecx, ecx;je ;cmp dword [rdx], ecx;mov r12d, ecx": 2,
                "je ;cmp dword [rdx], ecx;mov r12d, ecx;mov r10d, 1;cmovb r12d, dword [rdx]": 2,
                "cmp dword [rdx], ecx;mov r12d, ecx;mov r10d, 1;cmovb r12d, dword [rdx];cmp dword [r15], 0": 2,
                "mov r10d, 1;cmovb r12d, dword [rdx];cmp dword [r15], 0;jbe ;xor edi, edi": 2,
                "mov edx, dword [rdx + ];mov eax, dword [r8 + rax + ];cmp ecx, edx;mov rsi, r14;mov r14, qword [r14 + ]": 2,
                "add ecx, eax;add ecx, edx;je ;mov eax, dword [r15];sub eax, r11d": 2,
                "add r8, 4;mov qword [var_50h], r8;cmp r9d, dword [r13 + ];jb ;mov r14, qword [var_60h]": 2,
                "jmp ;mov edi, ebx;mov rdx, qword [rsi + ];mov r9d, edi;mov r8d, r15d": 2,
                "call fcn.13f1257b8;mov rax, qword [arg_c8h];sub dword [rax], edi;mov qword [var_20h], r9;mov qword [arg_18h], r8": 1,
                "call fcn.13f1257b8;mov rax, qword [arg_c8h];sub dword [rax], edi;sub ebx, edi;test ebx, ebx": 1,
                "cmp dword [r11], 0;jbe ;xor ebp, ebp;cmp ebp, dword [arg_e8h];jae ": 1,
                "mov r10, qword [rax + rbp*8];mov rcx, qword [r10 + ];mov eax, dword [rcx + ];cmp eax, dword [r10 + ];jbe ": 1,
                "add edi, edx;je ;cmp dword [r11], edi;mov eax, edi;cmovb eax, dword [r11]": 1,
                "inc ebp;test ebx, ebx;jne ;mov edx, dword [rsi + ];mov eax, dword [r14 + r12*4]": 1,
                "mov byte [rsi + ], r11b;mov eax, dword [var_38h];add rsp, ;pop r15;pop r14": 1,
                "mov edx, eax;cmp r12d, eax;cmovb edx, r12d;test r8b, r8b;je ": 1,
                "inc dword [rsi + ];mov byte [rsi + ], 1;jmp ;mov byte [rsi + ], dil;mov rbx, qword [arg_60h]": 1,
                "cmp dword [rax + rdi + ], r9d;jbe ;mov byte [var_20h], r9b;mov r8d, r10d;mov r9d, 1": 2,
                "mov r8d, dword [rdi + rcx + ];test r8d, r8d;jne ;cmp dword [rdi + rcx + ], r8d;je ": 2,
                "jmp ;mov rcx, qword [rcx + ];mov edx, 1;cmp byte [rcx], dl;jne ": 2,
                "lea r8d, [rdx + 1];call qword [];add rsp, ;ret;int3": 2,
                "jne ;lea rax, [];mov qword [rsp + ], rax;mov eax, 1;xchg dword [], eax": 3,
                "mov eax, dword [];test eax, eax;jne ;xor ecx, ecx;call fcn.13f126b1c": 5,
                "movsxd rsi, eax;mov eax, edx;shl rax, 6;add rax, qword [rdi + ];cmp dword [rax + ], ebp": 4,
                "mov r9d, dword [rax + 8];xor r8d, r8d;test r9d, r9d;je ;mov r10, qword [rax + ]": 3,
                "xor r8d, r8d;test r9d, r9d;je ;mov r10, qword [rax + ];lea rcx, [r8 + r8*2]": 3,
                "cmp r8d, r9d;jb ;inc edx;jmp ;call fcn.13f1289c8": 3,
                "je ;cmp dword [], 1;jne ;test rbx, rbx;je ": 3,
                "jne ;test rbx, rbx;je ;and dword [rbx], 0;xor eax, eax": 3,
                "je ;mov r11, qword [rcx + ];lea rcx, [r8 + r8*2];add rcx, rcx;movzx eax, byte [r11 + rcx*8 + 8]": 3,
                "cmp eax, r10d;je ;inc r8d;cmp r8d, r9d;jb ": 3,
                "pop rdi;ret;lea rcx, [var_20h];call fcn.13f123ee0;lea rdx, []": 3,
                "cmp edx, dword [rax + ];jae ;mov eax, edx;shl rax, 6;add rax, r8": 2,
                "test eax, eax;jne ;lea rax, [];mov qword [arg_50h], rax;mov eax, 1": 5,
                "mov eax, 1;xchg dword [], eax;test eax, eax;je ;and dword [var_30h], 0": 16,
                "int3;int3;mov rax, qword [rcx + 8];mov eax, dword [rax + ];ret": 2,
                "lea rcx, [];call fcn.13f117164;mov qword [], rax;add rsp, ;ret": 6,
                "je ;or ecx, ;add dword [rbx + ], ecx;add dword [r12 + ], ecx;jmp ": 6,
                "lea rcx, [rsi + rsi*8];lea r8, [rax + rcx*8];cmp dword [r8], 4;jne ;cmp dword [r8 + ], 0": 7,
                "jne ;cmp dword [r8 + ], 0;ja ;cmp byte [r8 + ], 0;jne ": 7,
                "mov rdx, rdi;mov rcx, r15;call fcn.13f139670;dec ebx;inc esi": 7,
                "jne ;mov rcx, qword [rsi + ];mov eax, dword [rcx + ];mov edx, dword [rcx + ];add edx, dword [rcx + ]": 8,
                "jmp ;mov rax, r15;mov r12d, dword [arg_78h];movzx r13d, si;mov rsi, qword [arg_70h]": 3,
                "movzx edx, r15w;test rsi, rsi;je ;lea rax, [rcx - 1];add dx, bp": 3,
                "mov dword [rbx + 8], r12d;mov edi, dword [rbx + 8];mov rcx, ;mov eax, ;mov dword [rbx + ], r15d": 3,
                "jne ;test bpl, sil;je ;mov eax, r15d;add r15d, ebp": 3,
                "mov ecx, ;add rdi, qword [rbx + ];add eax, r14d;add ebp, eax;call fcn.13f10eae8": 3,
                "jb ;mov rbx, qword [arg_50h];mov rbp, qword [arg_58h];mov rsi, qword [arg_60h];add rsp, ": 2,
                "mov ecx, ;call fcn.13f1264fc;mov rsi, qword [];xor r15d, r15d;cmp dword [], r15d": 3,
                "lea rax, [rcx - 1];add dx, di;and rcx, rax;jne ;movzx eax, dx": 7,
                "seta al;mov dword [], ebp;test al, al;cmovne ecx, r14d;xor r13d, r13d": 2,
                "cmovne ecx, r14d;xor r13d, r13d;cmp byte [arg_60h], r13b;jmp ;cmp eax, 3": 2,
                "mov ebp, r13d;mov r15d, r13d;mov esi, r13d;jbe ;mov edi, 1": 2,
                "add ebp, edi;movzx edx, r13w;lea rax, [rcx - 1];add dx, di;and rcx, rax": 2,
                "cmp ebp, esi;mov ecx, esi;mov dword [], r15d;seta al;mov dword [], esi": 2,
                "test rbx, rbx;je ;mov rcx, qword [rbx + 8];call fcn.13f10e55c;mov rcx, rbx": 2,
                "je ;mov rcx, qword [rbx + 8];call fcn.13f10e55c;mov rcx, rbx;call fcn.13f10e55c": 2,
                "pop rbp;ret;movzx eax, cx;shl rax, 4;add rax, r8": 2,
                "je ;call fcn.13f124738;mov r9b, byte [arg_88h];mov qword [rbx + ], rax;mov r10d, dword [rbx + ]": 2,
                "test r9b, r9b;je ;mov r9d, dword [rbx + ];mov edx, dword [rbx + ];mov esi, dword [rbx + ]": 2,
                "cmp esi, r8d;mov eax, r8d;cmovb eax, esi;inc eax;cmp esi, eax": 2,
                "test r12b, r12b;je ;mov r9b, byte [arg_88h];jmp ;cmp ecx, edx": 2,
                "cmp eax, dword [rbp + ];setb sil;xor r14d, r14d;cmp r10d, r15d;setb r14b": 1,
                "call fcn.13f127fd4;mov edi, eax;cmp eax, esi;jae ;test r12b, r12b": 1,
                "cmp edi, esi;jae ;mov ecx, dword [arg_80h];mov r9d, r15d;mov rdx, rbx": 1,
                "jae ;sub r14d, edi;mov rdx, rbx;mov rcx, rbp;mov r8d, r14d": 1,
                "mov r8d, r14d;call fcn.13f127f70;add edi, eax;mov rcx, rbp;call fcn.13f1281d4": 1,
                "push r12;push r14;push r15;sub rsp, ;and qword [r9 + 8], 0": 2,
                "and qword [r9 + 8], 0;mov dword [r9], edx;mov qword [r9 + ], r8;mov r12, qword [r8 + ];mov r15, r9": 2,
                "mov r9, qword [rbp + ];lea rax, [rsi + rsi*2];mov rdx, rbx;add r9, r14;shl rax, 4": 2,
                "lea rax, [rsi + rsi*2];mov rdx, rbx;add r9, r14;shl rax, 4;mov rcx, rbp": 2,
                "call fcn.13f138920;mov dword [rsi + ], eax;mov eax, dword [arg_60h];mov dword [rdi + ], eax;jmp ": 2,
                "mov dword [rsi + ], eax;mov eax, dword [arg_60h];mov dword [rdi + ], eax;jmp ;mov eax, dword [rdi + ]": 2,
                "jmp ;mov eax, dword [rdi + ];mov dword [rsi + ], eax;mov r8d, dword [rdi + ];test r8d, r8d": 2,
                "cmovb edx, eax;cmp r8d, edx;jae ;mov eax, 1;jmp ": 2,
                "xor edi, edi;test rdi, rdi;jne ;add rsp, ;pop r14": 2,
                "test rdi, rdi;jne ;add rsp, ;pop r14;pop rdi": 2,
                "mov rax, qword [rsi + ];mov rdi, qword [rax + rbp*8];mov rbx, qword [rdi + ];cmp dword [rbx + ], 0;jbe ": 3,
                "jbe ;mov r8, rdi;mov rdx, rbx;mov rcx, rsi;call fcn.13f126530": 3,
                "mov rdx, rbx;mov rcx, rsi;call fcn.13f12667c;cmp byte [rbx + ], 0;jne ": 3,
                "int3;mov qword [arg_8h], rbx;mov qword [arg_20h], rbp;push rsi;push rdi": 3,
                "push r15;xor r15d, r15d;or edi, ;mov r9d, edx;mov r10, rcx": 4,
                "mov r10, rcx;mov r8d, r15d;test edx, edx;je ;cmp r15d, edx": 4,
                "mov rax, qword [rax + r11*8];cmp dword [rax + ], r15d;jne ;mov rax, qword [rax + ];mov r8d, r15d": 4,
                "inc edx;cmp edx, r9d;jb ;mov r8d, r15d;test r9d, r9d": 3,
                "lea ebp, [r8 + 1];mov r11d, r8d;mov edi, ebp;cmp ebp, r9d;jae ": 3,
                "shl rsi, 3;mov rdx, qword [rsi + r14];mov eax, r11d;lea rsi, [rsi + 8];mov rcx, qword [r14 + rax*8]": 3,
                "mov qword [r14 + rbx], rax;mov rax, qword [r10 + ];mov qword [rax + r11*8], r8;mov rax, qword [r10 + ];mov r8d, r15d": 3,
                "shl rcx, 6;add rcx, r12;inc edx;add rsi, 4;cmp edx, dword [r10 + ]": 3,
                "mov eax, dword [arg_40h];mov rbx, qword [arg_38h];mov rbp, qword [arg_50h];pop r15;pop r14": 2,
                "pop rsi;ret;int3;mov rax, rsp;mov qword [rax + 8], rbx": 2,
                "push r14;push r15;sub rsp, ;movaps xmmword [rax - ], xmm6;movaps xmmword [rax - ], xmm7": 3,
                "cmp eax, 1;jbe ;lea edi, [rsi + 1];mov r12d, r8d;cmp eax, edi": 3,
                "mov r10d, 1;mov rbx, rax;mov rax, qword [rbp + ];mov r8d, r10d;xorps xmm0, xmm0": 2,
                "cmp dword [rbp + ], r10d;jbe ;mov rax, qword [rbp + ];mov ecx, r8d;mov rcx, qword [rax + rcx*8]": 1,
                "test r8b, r8b;jne ;mov rax, qword [rbx];cmp dword [rax + 4], r13d;jbe ": 1,
                "jne ;mov rax, qword [rbx];cmp dword [rax + 4], r13d;jbe ;mov r14, qword [arg_88h]": 1,
                "dec rdi;jne ;mov rax, qword [rbx];xor r9d, r9d;mov rdx, r14": 1,
                "mov r8d, dword [rax + 4];mov rcx, rbp;sub r8d, r13d;call fcn.13f127fd4;mov esi, eax": 1,
                "mov r8d, r15d;mov rdx, rbp;mov rcx, rdi;call fcn.13f127fd4;mov ebx, eax": 1,
                "mov rsi, qword [arg_60h];mov eax, ebx;mov rbx, qword [arg_50h];add rsp, ;pop r15": 1,
                "sub r9d, eax;sub r9d, ecx;add r9d, eax;xor eax, eax;mov r10d, r9d": 2,
                "mov r10d, r9d;sub r10d, eax;test r9d, r9d;je ;mov rbp, qword [r11 + ]": 2,
                "mov eax, dword [rcx + ];sub eax, dword [rcx + ];je ;xor edi, edi;cmp dword [rcx + 8], edi": 2,
                "mov rcx, rsi;call fcn.13f13793c;mov ecx, dword [rdi + ];add ecx, dword [rdi + ];mov eax, dword [rdi + ]": 2,
                "cmp dword [rdi + ], ecx;jae ;mov edi, 1;cmp dword [r14 + ], edi;jne ": 2,
                "mov edi, 1;cmp dword [r14 + ], edi;jne ;mov rcx, r14;call fcn.13f124fcc": 2,
                "mov qword [rax + ], rsi;mov dil, r8b;mov rbp, rdx;mov rsi, rcx;xor r12b, r12b": 2,
                "mov r14, rax;movzx r15d, r15b;test rax, rax;cmove r15d, r13d;mov eax, dword [rbp + ]": 2,
                "mov qword [rbp + ], rbp;mov qword [rbp + ], rbp;jmp ;mov rax, qword [rax + ];mov qword [rbp + ], rax": 2,
                "call fcn.13f126dd0;test r14, r14;cmove r14, rax;mov ecx, dword [rbp + ];cmp dword [rbp + ], ecx": 2,
                "mov rcx, rbx;call sub.KERNEL32.dll_LeaveCriticalSection;jmp ;mov dword [rsi + ], r13d;cmp qword [rsi + ], 0": 1,
                "mul rcx;lea rbp, [rdi - 9];cmovo rax, rbp;mov rcx, rax;call fcn.13f0e907c": 1,
                "mov rcx, rax;call fcn.13f0e907c;mov qword [rsi + ], rax;mov r12b, r13b;mov rcx, rbx": 1,
                "mov eax, ebx;mov rbx, qword [arg_30h];add rsp, ;pop r14;ret": 1,
                "jbe ;mov r10, qword [rcx + ];lea r9, [r8 + r8*8];cmp dword [r10 + r9*8], 1;jne ": 2,
                "cmp dword [r10 + r9*8], 1;jne ;mov rax, qword [r10 + r9*8 + ];cmp esi, dword [rax];jne ": 2,
                "cmp dword [rdx + 8], r8d;jbe ;lea r10d, [r8 + 1];mov rax, qword [rdx + ];lea rcx, [r8 + r8*8]": 2,
                "cmp r8d, dword [rdx + 8];jb ;and dword [rdx + ], 0;cmp r9d, r14d;je ": 2,
                "mov dword [r11 + r9*4], ecx;mov dword [r11 + rdx*4], r8d;inc r9d;cmp r9d, dword [rbx + ];jb ": 2,
                "cmp dword [rdx + 8], r11d;jbe ;mov eax, r10d;inc r10d;lea rcx, [rax + rax*2]": 3,
                "jmp ;mov eax, 1;mov dword [], eax;cmp eax, 4;jl ": 3,
                "je ;mov rbx, r10;lea edi, [r11 + 1];mov esi, r11d;mov ebp, edi": 3,
                "cmp ebp, r9d;jb ;cmp r11d, esi;je ;mov rax, qword [r10 + rsi*8]": 3,
                "lea r14, [r14 + 8];mov rcx, qword [r10 + rax*8];mov eax, dword [rcx];cmp dword [rdx], eax;cmovb r11d, esi": 3,
                "test rdx, rdx;je ;mov rdx, qword [rdx + ];test rdx, rdx;je ": 3,
                "cmp r8d, dword [rdi + ];jb ;xor esi, esi;mov dword [arg_60h], esi;mov rax, rsp": 1,
                "jbe ;mov rsi, qword [arg_68h];mov rbx, qword [rdi + ];lea rax, [r14 + r14*2];shl rax, 4": 2,
                "cmp dword [rdx + ], 0;jbe ;cmp rbx, rsi;jne ;mov rcx, rbx": 2,
                "cmp r15d, dword [rdx + ];jbe ;mov r8b, 1;mov rcx, rbx;jmp ": 2,
                "mov r8b, 1;mov rcx, rbx;jmp ;cmp r15d, dword [rdx + ];jne ": 2,
                "test rbx, rbx;jne ;mov rcx, qword [rdi + ];inc r14d;add rcx, rbp": 2,
                "mov qword [rax], rbx;mov rdi, qword [rsi + ];test rdi, rdi;jmp ;cmp rdi, rbp": 2,
                "je ;xor edx, edx;lea rbx, [rdi + ];lea r8d, [rdx + ];mov rcx, rbx": 2,
                "jne ;cmp rax, qword [rax + ];jne ;xor eax, eax;jmp ": 13,
                "cmp dword [r9 + rax*8], 4;jne ;mov rax, qword [r9 + rax*8 + ];add dword [rax], r11d;inc r8d": 1,
                "mov rax, qword [r9 + rax*8 + ];add dword [rax], r11d;inc r8d;cmp r8d, dword [rcx + 8];jb ": 1,
                "inc dword [rdx + ];mov rax, qword [arg_28h];inc dword [rax + ];ret;int3": 2,
                "mov dword [rcx + ], 1;lea eax, [r8 - 1];mov dword [rcx + ], 0;mov dword [rcx + ], r9d;mov rbx, rcx": 3,
                "inc r8d;mov dword [rcx + ], r8d;movsxd rcx, r8d;mov eax, 8;mov rbp, ": 3,
                "mov dword [rcx + ], r8d;movsxd rcx, r8d;mov eax, 8;mov rbp, ;mul rcx": 3,
                "mov rbp, ;mul rcx;cmovo rax, rbp;mov rcx, rax;call fcn.13f0e907c": 3,
                "call fcn.13f0e907c;movsxd r8, dword [rbx + ];xor edx, edx;shl r8, 3;mov rcx, rax": 3,
                "xor edx, edx;shl r8, 3;mov rcx, rax;mov rdi, rax;call fcn.13f117950": 3,
                "mov dword [rdi + ], ebp;mov dword [rdi + ], r15d;mov dword [rdi + ], r15d;mov dword [rdi + ], r15d;mov dword [rdi + ], r15d": 4,
                "mov rcx, rsi;call fcn.13f137504;mov word [rdi + ], ax;lea edx, [rbx - 1];mov rcx, rsi": 3,
                "mov qword [arg_10h], rbp;mov qword [arg_18h], rsi;push rdi;sub rsp, ;mov qword [arg_8h], rbx": 1,
                "mov rbx, rax;test rax, rax;je ;lea rcx, [rbx - ];mov rbx, qword [rbx]": 20,
                "lea rcx, [rbx - ];mov rbx, qword [rbx];call fcn.13f10e55c;test rbx, rbx;jne ": 3,
                "jne ;mov rsi, qword [rdi + ];test rsi, rsi;je ;xor ebx, ebx": 13,
                "test rsi, rsi;je ;xor ebx, ebx;cmp dword [rdi + ], ebx;jle ": 13,
                "jle ;xor ebp, ebp;mov rcx, qword [rsi];mov rcx, qword [rcx + rbp];call fcn.13f10e55c": 1,
                "je ;mov rax, qword [rcx];mov edx, 1;call qword [rax + ];test rbx, rbx": 2,
                "mov rax, qword [rcx];mov edx, 1;call qword [rax + ];inc ebx;add r14, 8": 2,
                "inc ebx;add r14, 8;cmp ebx, dword [rdi + ];jl ;mov rcx, qword [rsi]": 12,
                "mov rbx, rcx;mov rcx, qword [rcx + ];call fcn.13f10efc8;mov rcx, qword [rbx + 8];add rsp, ": 5,
                "mov qword [rcx], rax;ret;int3;mov qword [arg_8h], rcx;push rdi": 3,
                "mov rcx, rbx;call fcn.13f135f9c;mov rcx, qword [rbx + 8];call fcn.13f10efc8;lea rcx, [rdi + ]": 4,
                "call fcn.13f10efc8;lea rcx, [rdi + 8];call fcn.13f0d0660;lea rax, [];mov qword [rdi], rax": 4,
                "lea r13d, [rsi + 1];cmp dword [rbx + ], r11d;jl ;mov r9, qword [rbx];xor edx, edx": 21,
                "cmp edx, dword [rdi + ];jge ;jmp ;add esi, edx;mov bpl, r13b": 19,
                "jne ;movsxd rcx, dword [rdi + ];mov eax, 8;mul rcx;cmovo rax, r11": 18,
                "int3;int3;mov qword [rsp + 8], rbx;mov qword [rsp + ], rbp;push rsi": 5,
                "sub rsp, ;mov rdi, rdx;mov rbx, rcx;test rdx, rdx;je ": 12,
                "mov rbx, rcx;test rdx, rdx;je ;cmp r8d, 1;jb ": 2,
                "test eax, eax;jne ;mov rcx, qword [rbx + ];mov rcx, qword [rcx + rsi*8];call fcn.13f13e3f4": 2,
                "mov rbx, rax;mov qword [rsp + ], rax;test rax, rax;je ;mov r9, rdi": 2,
                "je ;mov r9, rdi;mov r8, rsi;mov rdx, rbp;mov rcx, rax": 2,
                "mov r9, rdi;mov r8, rsi;mov rdx, rbp;mov rcx, rax;call fcn.13f13e718": 2,
                "xor ebx, ebx;mov rax, rbx;mov rbx, qword [rsp + ];mov rbp, qword [rsp + ];mov rsi, qword [rsp + ]": 2,
                "xor ebx, ebx;mov rax, rbx;mov rbx, qword [rsp + ];mov rsi, qword [rsp + ];add rsp, ": 1,
                "int3;push rbx;sub rsp, ;mov rbx, rcx;call fcn.13f12a09c": 1,
                "mov edx, ;mov eax, ;lock cmpxchg dword [rcx + ], edx;jne ;call fcn.13f12ce50": 3,
                "mov eax, ;lock cmpxchg dword [rcx + ], edx;jne ;call fcn.13f12ce50;add rsp, ": 3,
                "je ;mov rdi, qword [rcx + ];xor ebx, ebx;jmp ;lea rcx, [rdi - ]": 4,
                "ret;int3;int3;mov qword [rsp + 8], rbx;mov qword [rsp + ], rsi": 21,
                "dec eax;cmp eax, ;jne ;call fcn.13f140e00;mov ecx, dword []": 5,
                "cmp eax, ;jne ;call fcn.13f140e00;mov ecx, dword [];call sub.KERNEL32.dll_TlsFree": 5,
                "and dword [], 0;lock and dword [], ;add rsp, ;ret;int3": 5,
                "call fcn.13f140db4;lock or dword [], ;mov dword [], 0;add rsp, ;ret": 6,
                "call fcn.13f123be4;lea r8, [rdi + ];jmp ;test ebx, ebx;je ": 7,
                "mov eax, dword [rdi + ];cmp ecx, eax;jb ;cmp ecx, ebx;ja ": 6,
                "mov rax, qword [var_28h];mov qword [rax], rcx;mov qword [var_28h], rdx;mov rax, qword [r8];test rax, rax": 6,
                "test rdx, rdx;jne ;mov rbx, qword [arg_40h];mov rsi, qword [arg_48h];add rsp, ": 5,
                "movsxd rcx, r8d;mov rdi, qword [rax + rcx*8];mov eax, dword [rdx + ];dec eax;movsxd rcx, eax": 6,
                "jbe ;jmp ;mov bpl, 1;mov r9d, r8d;mov qword [arg_8h], rbx": 1,
                "jmp ;mov bpl, 1;mov r9d, r8d;mov qword [arg_8h], rbx;mov qword [arg_10h], rbp": 1,
                "mov r9d, r8d;mov ecx, dword [rdx + ];inc r11d;cmp r11d, ecx;jl ": 4,
                "push rdi;sub rsp, ;call fcn.13f12a944;xor edx, edx;mov rcx, rax": 5,
                "mov rdx, qword [rdi];mov rcx, rdi;mov rbx, rax;call qword [rdx + ];mov rax, rbx": 5,
                "mov rbx, rcx;call fcn.13f1377d8;call fcn.13f129a64;mov rcx, rbx;call fcn.13f140c74": 6,
                "push rbx;sub rsp, ;mov rbx, rcx;mov rcx, qword [rcx + ];or rdx, ": 7,
                "call fcn.13f1264d4;cmp eax, 3;jl ;mov rax, rsp;mov qword [rax + 8], rbp": 1,
                "mov rcx, qword [rdi + ];call qword [];xor ebx, ebx;xchg qword [rdi + ], rbx;test rbx, rbx": 9,
                "call fcn.13f10e55c;mov rbx, rsi;test rsi, rsi;jne ;lea rcx, [rdi + ]": 9,
                "lea rcx, [rdi + ];call qword [];lea rcx, [rax - ];neg rax;sbb r8, r8": 18,
                "neg rax;sbb r8, r8;and r8, rcx;je ;mov rax, qword [r8 + ]": 18,
                "mov r8, rbx;test rbx, rbx;jne ;mov al, byte [];mov r8d, dword [rdi + ]": 9,
                "mov rbx, rax;mov rcx, qword [rax + ];call qword [];mov rcx, qword [rbx + ];call qword []": 8,
                "mov edx, 1;mov rcx, rdi;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];add rsp, ": 8,
                "mov rsi, qword [arg_38h];add rsp, ;pop rdi;jmp qword [rax];mov qword [arg_8h], rbx": 8,
                "div rcx;mov rax, qword [rbx + 8];movsxd rcx, edx;mov rax, qword [rax + rcx*8];test rax, rax": 12,
                "test rax, rax;jne ;xor eax, eax;test rax, rax;je ": 12,
                "mov ecx, dword [rax + ];mov dword [r8], ecx;mov rbx, qword [arg_8h];ret;int3": 8,
                "ret;mov qword [arg_8h], rbx;push rdi;sub rsp, ;mov r8d, dword [rdx]": 8,
                "xor ebx, ebx;mov rdi, rcx;and r8d, ;sub r8d, 2;je ": 8,
                "dec r8d;jne ;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi": 1,
                "mov rbx, r9;mov r11d, r8d;cmp edx, r8d;jge ;mov r10, qword [arg_28h]": 8,
                "sub r8d, dword [r10 + ];movsxd rcx, dword [r10 + ];mov r9, qword [rax + rcx*8 - 8];js ;lea ecx, [r8 + 1]": 7,
                "mov dword [rbx], ecx;mov rbx, qword [arg_8h];ret;int3;mov qword [arg_8h], rbx": 7,
                "mov qword [arg_8h], rbx;mov qword [arg_10h], rdi;xor eax, eax;mov rdi, r9;mov ebx, r8d": 8,
                "xor eax, eax;mov rdi, r9;mov ebx, r8d;mov r10d, edx;sub rsp, ": 1,
                "mov ebx, dword [r8];mov rsi, r8;mov r8d, ;and ebx, r8d;mov r12d, r9d": 6,
                "mov rdi, rcx;cmp ebx, 1;je ;lea eax, [rbx - 2];cmp eax, 1": 6,
                "mov eax, dword [rsi];mov r9d, r12d;xor eax, ecx;mov rdx, r13;and eax, r8d": 6,
                "mov eax, dword [rsi];xor eax, ecx;mov rcx, qword [rdi + ];mov qword [arg_8h], rbx;mov qword [arg_10h], rsi": 1,
                "xor eax, ecx;mov rcx, qword [rdi + ];mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi": 1,
                "jle ;xorps xmm0, xmm0;xor eax, eax;lea r8, [var_20h];mov r9d, r12d": 5,
                "mov dword [var_20h], eax;movdqu xmmword [var_18h], xmm0;call fcn.13f13c280;mov qword [arg_8h], rbx;push rdi": 1,
                "jle ;xor r12d, r12d;mov rax, qword [r14 + ];mov rbx, qword [r12 + rax];test rbx, rbx": 5,
                "mov eax, dword [rbx + ];xor edi, edi;test eax, eax;jle ;mov ecx, dword [rbx + ]": 12,
                "mov eax, dword [rbx + ];inc edi;cmp edi, eax;jge ;jmp ": 6,
                "mov eax, dword [rbx + ];inc edi;cmp edi, eax;mov r8, qword [rcx + ];xor edx, edx": 1,
                "int3;mov rax, rsp;mov qword [rax + ], rdx;push rsi;push rdi": 3,
                "mov qword [rbx + 8], rax;mov r8d, dword [rbx];add r8d, ;shr r8, 5;shl r8, 2": 4,
                "dec ecx;jne ;mov eax, dword [r14 + 8];mov dword [arg_58h], eax;lea rcx, [rbp + ]": 4,
                "lea rcx, [rbp + ];lea r8, [arg_60h];lea rdx, [arg_58h];call fcn.13f12a224;mov ecx, dword [arg_60h]": 4,
                "jne ;mov rcx, qword [];test rcx, rcx;je ;call fcn.13f12c8f0": 4,
                "call qword [rax + ];test al, al;je ;lea rcx, [rdi + ];call qword []": 5,
                "sbb rbx, rbx;and rbx, rcx;mov qword [arg_50h], rbx;jne ;mov rax, qword [rdi]": 5,
                "mov esi, r8d;inc eax;mov rbx, rdx;mov rbp, rcx;cmp eax, r8d": 8,
                "mov qword [r11 - ], r9;mov r9, rdx;mov edx, eax;call fcn.13f12a36c;mov rcx, rax": 8,
                "ret;int3;int3;int3;mov r10, rdx": 8,
                "mov edx, dword [r8 + ];mov r9, rcx;xor r8d, r8d;lea eax, [rdx + 1];cdq": 8,
                "cmove rax, r8;ret;mov edx, dword [rcx + ];mov rax, qword [rcx + ];mov r9, rcx": 8,
                "mov r10, qword [rax + rdx*8];mov rcx, qword [r9 + ];lea eax, [rdx + 1];cdq;idiv dword [r9 + ]": 9,
                "mov eax, r8d;ret;mov eax, 1;lock xadd dword [rcx + ], eax;inc eax": 1,
                "mov edi, edx;mov rbx, rcx;cmp edx, dword [rcx];mov qword [arg_8h], rbx;mov qword [arg_10h], rsi": 1,
                "sub rsp, ;mov edi, dword [rcx];mov ebx, edx;mov rsi, rcx;cmp edx, edi": 8,
                "mov edx, ebx;call fcn.13f12af30;mov rcx, ;mov eax, 4;mul rbx": 8,
                "mov r14, rax;test edi, edi;je ;mov r8, rax;mov eax, edi": 8,
                "sub rsp, ;mov qword [rbp - ], ;mov rdi, rcx;xor r12d, r12d;mov dword [rcx + ], r12d": 8,
                "mov dword [rdi + ], eax;call fcn.13f1264e4;mov dword [rdi + ], eax;call fcn.13f1173b4;inc eax": 7,
                "call fcn.13f1264e4;mov dword [rdi + ], eax;call fcn.13f1173b4;inc eax;mov dword [rdi + ], eax": 7,
                "lea r15, [r12 - 1];cmovo rax, r15;lea r13d, [r12 + 8];add rax, r13;cmovb rax, r15": 6,
                "lea r13d, [r12 + 8];add rax, r13;cmovb rax, r15;mov rcx, rax;call fcn.13f0e907c": 6,
                "mov qword [rbp + ], rax;test rax, rax;je ;mov dword [rax], esi;lea rbx, [rax + 8]": 6,
                "cmovo rax, rcx;mov rcx, rax;call fcn.13f0e907c;mov qword [rbp - ], rax;mov r8d, dword [rbp - ]": 5,
                "call fcn.13f0e907c;mov qword [rbp - ], rax;mov r8d, dword [rbp - ];add r8d, ;shr r8, 5": 5,
                "mov qword [rbp - ], rdx;mov rcx, qword [rdi + ];mov qword [rbp - ], r13;mov r9d, r13d;shr r9, 5": 4,
                "mov rax, qword [rbp - ];or dword [rax + r8*4], r9d;mov rax, qword [rdi + ];mov rdx, qword [rbx + rax + ];or dword [rdx + r8*4], r9d": 3,
                "mov rdx, rdi;mov rcx, rax;call fcn.13f13e1f8;mov r13, rax;jmp ": 2,
                "mov rcx, rax;call fcn.13f13bb90;mov r15, rax;jmp ;xor r15d, r15d": 2,
                "mov dword [rbp - ], eax;lea r8, [rbp - ];lea rdx, [rbp - ];lea rcx, [r15 + ];call fcn.13f12b5a4": 2,
                "mov rax, qword [r14];mov rcx, r14;call qword [rax];mov r14, rax;test rax, rax": 2,
                "mov r15d, dword [rbp - ];jne ;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;mov qword [arg_18h], rdi": 1,
                "div rcx;mov rax, qword [rbx + 8];movsxd rsi, edx;mov rcx, qword [rax + rsi*8];test rcx, rcx": 6,
                "test rcx, rcx;jne ;mov ecx, ;call fcn.13f10eae8;mov r8, rax": 6,
                "jne ;mov ecx, ;call fcn.13f10eae8;mov r8, rax;test rax, rax": 6,
                "mov qword [rcx + rsi*8], r8;inc dword [rbx + 4];jmp ;xor eax, eax;mov rbx, qword [arg_30h]": 6,
                "lea rbx, [rax - ];cmp dword [rdi + ], 0;jne ;test rbx, rbx;jne ": 2,
                "test rbx, rbx;jne ;lea ecx, [rbx + ];call fcn.13f10eae8;mov rbx, rax": 2,
                "mov qword [rbx], rax;mov byte [rbx + ], 1;jmp ;xor ebx, ebx;jmp ": 2,
                "jmp ;xor ebx, ebx;jmp ;mov rdx, rsi;jmp ": 2,
                "ret;int3;int3;int3;mov eax, dword [r9 + ]": 2,
                "int3;int3;mov eax, dword [r9 + ];bt eax, ;jae ": 2,
                "mov eax, dword [r9 + ];bt eax, ;jae ;mov rcx, r8;jmp rdx": 3,
                "add r8d, ecx;lea eax, [r8 + 1];test eax, ;je ;mov dword [rdi + ], r8d": 4,
                "mov rcx, qword [rsp + ];add r9d, ;xor ebx, ebx;xor r8d, r8d;shr r9d, 5": 4,
                "mov rdi, rcx;mov dword [var_30h], eax;call fcn.13f12a48c;test al, al;je ": 5,
                "mov al, 1;jmp ;lea rdx, [rbx + ];lea rcx, [rdi + ];call qword []": 4,
                "call fcn.13f12a36c;jmp ;mov ecx, edi;sub ecx, dword [rax + ];cmp ecx, ": 9,
                "mov qword [rax + 8], rax;jmp ;mov rax, qword [rax + 8];mov qword [rdx + 8], rax;mov rax, qword [rbx + ]": 11,
                "mov qword [rdx + 8], rax;mov rax, qword [rbx + ];mov qword [rdx + ], rax;mov rax, qword [rbx + ];mov rcx, qword [rax + 8]": 11,
                "mov qword [arg_10h], rbx;push rdi;sub rsp, ;cmp qword [], rcx;mov rbx, rcx": 3,
                "xchg dword [], eax;test eax, eax;je ;lea rax, [];mov dword [var_28h], edi": 3,
                "test edx, ;jne ;mov rcx, rbx;call fcn.13f12989c;mov qword [arg_10h], rbx": 1,
                "call fcn.13f12989c;mov qword [arg_10h], rbx;push rbp;push rsi;push rdi": 1,
                "call qword [rax + ];mov eax, dword [rbx + ];mov ecx, eax;mov r8d, eax;btr ecx, ": 3,
                "lock dec dword [rbx + ];jne ;mov rcx, rbx;call fcn.13f12a0c0;mov rbx, qword [arg_38h]": 2,
                "mov rdi, rdx;mov rbp, rcx;lea rsi, [rdx + ];test rdx, rdx;jne ": 2,
                "lea r8, [rsp + ];and eax, edx;mov r9d, 5;mov dword [rsp + ], ebx;xor ecx, eax": 2,
                "je ;lea rcx, [rsp + ];mov rdx, rdi;call fcn.13f13b050;mov bl, 1": 2,
                "test byte [rcx + ], 4;jne ;mov eax, 1;lock xadd dword [rcx + ], eax;inc eax": 2,
                "mov rcx, rbx;call fcn.13f12c7e0;jmp ;xchg dword [rbx + ], ecx;mov eax, edi": 2,
                "mov rbx, qword [rsp + ];add rsp, ;pop rdi;ret;lea rcx, [rsp + ]": 2,
                "push rdi;sub rsp, ;lea rax, [rdx - 1];mov rdi, rdx;mov rsi, rcx": 2,
                "and dword [rsp + ], 0;and dword [rsp + ], 0;lea r9, [rsp + ];mov rcx, rax;mov r8, rbx": 2,
                "and dword [rsp + ], 0;lea r9, [rsp + ];mov rcx, rax;mov r8, rbx;mov rdx, rdi": 2,
                "mov qword [rdi], rdi;mov qword [rdi + 8], rdi;jmp ;mov rax, qword [rax];mov qword [rdi], rax": 2,
                "mov rcx, rbx;mov qword [rsi + ], rdi;call fcn.13f115a78;lea r11, [rsp + ];mov rbx, qword [r11 + ]": 1,
                "mov rsi, qword [r11 + ];mov rsp, r11;pop rdi;ret;call qword []": 1,
                "lea rdx, [];lea rcx, [rsp + ];call fcn.13f112d38;int3;lea rax, []": 1,
                "lea rcx, [rsp + ];call fcn.13f112d38;int3;lea rax, [];lea rdx, [rsp + ]": 1,
                "lock xadd dword [rcx + ], ebx;dec ebx;jne ;mov rax, qword [rcx];call qword [rax + ]": 1,
                "jne ;mov rax, qword [rcx];call qword [rax + ];mov rcx, qword [rdi + 8];mov r8d, dword [rdi + ]": 1,
                "mov rcx, rsi;call qword [];jmp ;test rdi, rdi;je ": 4,
                "mov rcx, rsi;call qword [];lea rdx, [rax - ];neg rax;sbb rbx, rbx": 4,
                "jmp ;movsxd rcx, r10d;mov r8, qword [rax + rcx*8];mov rdx, qword [r8];mov qword [arg_50h], rbp": 5,
                "lock cmpxchg qword [rdx + rcx*8], rdi;mov qword [var_20h], rax;mov rcx, qword [var_20h];mov rax, qword [arg_50h];cmp rcx, rax": 5,
                "mov edx, dword [rax + ];and edx, ebp;cmp edx, ebp;je ;xor eax, eax": 5,
                "jne ;mov qword [rbx + ], rdi;xchg dword [rbx + ], edi;jmp ;lea rax, []": 5,
                "pop rsi;ret;int3;mov qword [arg_10h], rbx;mov qword [arg_18h], rbp": 5,
                "cmp eax, dword [rbx + ];mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi;sub rsp, ": 1,
                "jle ;mov rax, qword [rbx + ];mov edx, dword [rax + ];mov eax, ;and edx, eax": 4,
                "mov rax, qword [rbx + ];mov edx, dword [rax + ];mov eax, ;and edx, eax;cmp edx, eax": 4,
                "mov eax, dword [rcx + ];bt eax, ;jae ;mov rcx, rbx;call fcn.13f129960": 4,
                "xor al, al;mov rbx, qword [arg_48h];mov rbp, qword [arg_50h];mov rsi, qword [arg_58h];add rsp, ": 3,
                "lea rcx, [rsi + 8];call fcn.13f115a78;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];mov rax, rdi": 3,
                "jmp ;mov rax, qword [rax + ];mov qword [rdi + ], rax;and dword [rbx + ], 0;mov rcx, rsi": 3,
                "and qword [rbx + ], 0;add rsp, ;pop rbx;ret;int3": 12,
                "push r14;mov rbp, rsp;sub rsp, ;mov rbx, rdx;mov r14, rcx": 4,
                "lock inc dword [rbx + ];mov rbx, qword [arg_50h];add rsp, ;pop rdi;ret": 4,
                "jmp sub.KERNEL32.dll_TlsGetValue;xor eax, eax;ret;int3;int3": 6,
                "ret;int3;int3;xor r8d, r8d;mov eax, dword [rcx + ]": 6,
                "xor r8d, r8d;mov eax, dword [rcx + ];test eax, eax;je ;lea edx, [rax + 1]": 7,
                "push rdi;sub rsp, ;mov rdi, rcx;mov ecx, dword [];mov rsi, r8": 6,
                "mov rcx, rax;jmp ;mov rcx, qword [rdi + ];mov rax, qword [rcx];mov r8, rsi": 6,
                "mov rcx, qword [rdi + ];mov rax, qword [rcx];mov r8, rsi;mov rdx, rbp;mov rbx, qword [rsp + ]": 6,
                "mov r9, rsi;mov r8, rbp;mov rdx, r14;mov rcx, rax;mov rbx, qword [rsp + ]": 5,
                "mov rsi, qword [rsp + ];mov rdi, qword [rsp + ];add rsp, ;pop r14;jmp ": 5,
                "idiv dword [r8 + ];mov rax, qword [r8 + ];movsxd rcx, edx;mov rcx, qword [rax + rcx*8];mov eax, dword [rcx + ]": 5,
                "mov qword [rax + ], rsi;mov qword [rax + ], rdi;push r14;sub rsp, ;mov edi, r9d": 6,
                "mov rax, qword [rbx + 8];mov qword [var_38h], rax;mov eax, dword [rbx + 4];mov dword [var_34h], eax;mov rax, qword [rbx + ]": 6,
                "xor esi, esi;mov r14, r9;mov r15, r8;mov r12, rdx;mov rdi, rcx": 4,
                "mov r15, r8;mov r12, rdx;mov rdi, rcx;cmp dword [rcx + ], esi;jle ": 4,
                "mov rbx, qword [rax + rcx*8];test rbx, rbx;je ;mov eax, dword [rbx + ];mov edx, eax": 1,
                "sub edx, dword [rbx + ];mov dword [rbx + ], eax;mov eax, dword [rbx + ];mov ecx, eax;sub ecx, dword [rbx + ]": 1,
                "add dword [r14], edx;mov eax, dword [rbx + ];test eax, eax;jne ;mov eax, dword [rbx + ]": 1,
                "mov eax, dword [rbx + ];test eax, eax;jne ;mov eax, dword [rbx + ];cmp dword [rbx + ], eax": 1,
                "cmp dword [rbx + ], eax;jne ;mov eax, dword [rbx + ];cmp dword [rbx + ], eax;jne ": 1,
                "mov esi, 1;mov rdi, rax;mov bpl, sil;test rax, rax;je ": 1,
                "test eax, eax;jne ;xchg dword [rbx + ], esi;mov eax, dword [rbx + ];mov ecx, eax": 1,
                "xor sil, sil;jmp ;mov rdx, rax;mov rcx, rdi;call fcn.13f12b8ac": 2,
                "jne ;test sil, sil;jne ;mov eax, dword [rdi + ];test eax, eax": 2,
                "xchg dword [rdi + ], eax;mov edx, 1;mov rcx, rdi;call fcn.13f12d0d4;mov ebx, eax": 2,
                "call fcn.13f117470;mov ecx, ebx;sub eax, dword [rdi + ];sub ecx, eax;cmp eax, ebx": 2,
                "mov rcx, rdi;sub eax, dword [rdi + ];cmp eax, ebx;jae ;sub ebx, eax": 2,
                "mov edx, ebx;call fcn.13f1298fc;jmp ;call fcn.13f12cf1c;mov rbx, qword [rsp + ]": 2,
                "int3;mov r8d, dword [rcx + ];mov eax, dword [rcx + ];mov r9d, edx;cmp r8d, eax": 2,
                "shr r8d, 3;add r8d, 5;jmp ;cmp r8d, ;jae ": 3,
                "add r8d, 5;jmp ;cmp r8d, ;jae ;shr r8d, 3": 3,
                "mov byte [var_24h], bpl;mov byte [var_25h], sil;mov dword [var_54h], edi;mov word [var_20h], ax;call fcn.13f13aa94": 3,
                "mov rbp, qword [arg_70h];mov rsi, qword [arg_78h];add rsp, ;pop rdi;ret": 3,
                "mov rdi, rcx;mov rbx, rdx;mov rcx, rsi;call fcn.13f123be4;mov eax, dword [rdi + ]": 4,
                "jmp ;mov dword [rcx + ], edx;mov ecx, dword [rbx + ];mov eax, dword [rbx + ];cmp ecx, eax": 4,
                "mov rbx, rcx;call fcn.13f129d3c;mov edx, dword [rbx + ];mov r8d, eax;cmp eax, edx": 5,
                "cmp eax, ecx;jne ;mov eax, r8d;jmp ;xor eax, eax": 5,
                "mov rax, qword [rbx];inc r8d;mov dl, dil;mov rcx, rbx;call qword [rax + ]": 6,
                "xor al, al;jmp ;or edi, ;mov r8d, edi;lock xadd dword [rcx + ], r8d": 6,
                "mov rax, qword [rcx];add r8d, edi;xor edx, edx;call qword [rax + ];mov ecx, edi": 6,
                "xor edx, edx;call qword [rax + ];mov ecx, edi;lock xadd dword [rbx + ], ecx;add ecx, edi": 6,
                "mov qword [arg_8h], rbx;push rdi;sub rsp, ;mov bl, dl;mov rdi, rcx": 7,
                "cmp byte [rbx], ;je ;call fcn.13f10fca8;mov dword [rax], ;call fcn.13f11b8a0": 7,
                "xor edi, edi;or esi, r13d;jmp ;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi": 1,
                "or esi, r13d;jmp ;mov edi, ;or esi, 2;add rbx, r13": 6,
                "test edx, edx;je ;movsx ecx, al;cmp ecx, ;jg ": 6,
                "mov r11d, r13d;jmp ;test dil, 2;jne ;and edi, ": 5,
                "test r9d, r9d;jne ;mov r9d, r13d;or esi, r8d;jmp ": 5,
                "jae ;xor edx, edx;jmp ;bts edi, ;add rbx, r13": 4,
                "mov al, byte [rbx];test al, al;jne ;test r11d, r11d;je ": 4,
                "jne ;test r11d, r11d;je ;jmp ;add rbx, r13": 4,
                "add rbx, r13;cmp byte [rbx], ;mov qword [arg_8h], rbx;push rdi;sub rsp, ": 1,
                "cmp byte [rbx], ;jne ;add rbx, r13;cmp byte [rbx], ;je ": 3,
                "test eax, eax;jne ;add dword [], r13d;and dword [r14 + 8], eax;mov eax, dword [arg_68h]": 2,
                "and qword [r14 + ], 0;mov dword [r14 + ], eax;mov dword [r14 + ], esi;mov rax, r14;mov rbx, qword [arg_60h]": 2,
                "and eax, ;lea rcx, [];mov rcx, qword [rcx + r13*8 + ];imul r15, rax, ;mov r12b, byte [rcx + r15 + ]": 2,
                "imul r15, rax, ;mov r12b, byte [rcx + r15 + ];add r12b, r12b;sar r12b, 1;mov qword [arg_10h], rbx": 1,
                "sub esi, dword [rdi + 8];mov eax, esi;jmp ;mov ebx, dword [rdi];mov r14d, ebx": 1,
                "cmp r12b, 1;jne ;cmp dword [rcx + r15 + ], r8d;je ;mov rbx, qword [rdi]": 1,
                "shr rbx, 1;cmp dword [rdi + 8], r8d;je ;mov rdx, qword [rcx + r15 + ];mov ecx, ebp": 1,
                "sub rcx, rax;lea rax, [rdi + rcx];jmp ;test byte [rcx + r15 + 8], ;je ": 1,
                "test byte [rcx + r15 + 8], ;je ;xor edx, edx;mov ecx, ebp;lea r8d, [rdx + 2]": 1,
                "jb ;test dword [rdi + ], ;jmp ;xor r8d, r8d;mov edx, esi": 1,
                "test dword [rdi + ], ;mov ebx, eax;je ;mov ebx, dword [rdi + ];lea rax, []": 1,
                "mov esi, r8d;mov r14d, edx;movsxd rbx, ecx;cmp ebx, ;jne ": 2,
                "mov r8d, esi;mov edx, r14d;mov ecx, ebx;call fcn.13f12db64;mov edi, eax": 1,
                "mov qword [arg_18h], rsi;push rdi;sub rsp, ;movsxd rdi, ecx;mov esi, r8d": 2,
                "mov rdx, qword [lpNewFilePointer];xor r9d, r9d;xor r8d, r8d;mov rcx, rbx;call qword []": 2,
                "xor r9d, r9d;xor r8d, r8d;mov rcx, rbx;call qword [];call fcn.13f10fca8": 2,
                "mov rcx, rdi;mov rax, rdi;lea rdx, [];sar rax, 5;and ecx, ": 2,
                "and byte [rax + rcx + 8], ;mov eax, dword [arg_58h];mov rbx, qword [arg_40h];mov rbp, qword [arg_48h];mov rsi, qword [arg_50h]": 2,
                "mov qword [arg_8h], rcx;movsd xmm0, qword [arg_8h];ret;int3;movaps xmm1, xmm0": 3,
                "shr rax, ;test eax, ;jne ;test edx, edx;je ": 4,
                "jne ;mov eax, dword [arg_ch];add eax, eax;mov dword [arg_ch], eax;test edx, edx": 4,
                "test edx, edx;jns ;or eax, 1;mov dword [arg_ch], eax;add edx, edx": 4,
                "movsd qword [arg_8h], xmm0;mov rax, qword [arg_10h];shr rax, ;and ax, dx;mov edx, ": 4,
                "shr rdx, ;and dx, r8w;cmp dx, r8w;jne ;mov eax, 3": 5,
                "mov eax, ecx;test cl, ;je ;mov ecx, 5;jmp ": 6,
                "movzx eax, al;mov ecx, 2;and ecx, eax;add ecx, ecx;mov eax, ecx": 6,
                "push rdi;lea rbp, [rax - ];sub rsp, ;movaps xmmword [rax - ], xmm6;movaps xmmword [rax - ], xmm7": 7,
                "jmp ;mov ecx, eax;call fcn.13f12e59c;mov edx, ;mov rcx, rbx": 6,
                "mov ecx, eax;call fcn.13f12e59c;mov edx, ;mov rcx, rbx;call fcn.13f11fac4": 6,
                "mov rcx, qword [rbp + 7];xor rcx, rsp;call fcn.13f10e4e0;lea r11, [var_f0h];mov rbx, qword [r11 + ]": 6,
                "jns ;lea ecx, [r14 + 1];call fcn.13f11fb40;and ebx, ;jmp ": 6,
                "je ;cmp rax, ;je ;cmp rax, rcx;jne ": 8,
                "je ;cmp rax, rcx;jne ;movsd xmm0, qword [rsi];comisd xmm0, xmmword []": 5,
                "jp ;jne ;mov ebp, edi;jmp ;lea rdx, [arg_70h]": 5,
                "call fcn.13f12dc80;mov ecx, dword [arg_70h];add ecx, ;movsd qword [arg_88h], xmm0;cmp ecx, ": 5,
                "mov ecx, dword [arg_70h];add ecx, ;movsd qword [arg_88h], xmm0;cmp ecx, ;jge ": 5,
                "test dil, cl;je ;bts eax, ;mov dword [arg_88h], eax;shr ecx, 1": 4,
                "mov ecx, ;call fcn.13f11fb40;and ebx, ;movaps xmm6, xmmword [var_20h];test ebx, ebx": 3,
                "push rbx;sub rsp, ;cmp dword [], 0;movaps xmmword [var_30h], xmm6;movaps xmm6, xmm1": 3,
                "mov rax, qword [arg_10h];mov edi, ;mov dword [rax + 8], edx;mov rax, qword [arg_10h];mov dword [rax + ], edx": 4,
                "and eax, 2;xor dword [rcx + 8], eax;mov eax, dword [rbx];mov rcx, qword [arg_10h];shr rax, ": 3,
                "mov rcx, qword [arg_10h];shr rax, ;not eax;xor eax, dword [rcx + 8];and eax, 1": 3,
                "je ;mov rcx, qword [arg_10h];or dword [rcx + ], ;test al, 4;je ": 3,
                "or dword [rcx + ], 8;test al, 8;je ;mov rax, qword [arg_10h];or dword [rax + ], 4": 3,
                "mov rax, qword [arg_10h];or dword [rax], 2;jmp ;mov rax, qword [arg_10h];and dword [rax], ": 3,
                "and dword [rax], ;mov rax, qword [arg_10h];or dword [rax], 1;jmp ;mov rax, qword [arg_10h]": 3,
                "test byte [rcx + 8], 4;je ;btr qword [rbx], ;test byte [rcx + 8], 2;je ": 3,
                "btr qword [rbx], ;test byte [rcx + 8], 2;je ;btr qword [rbx], ;test byte [rcx + 8], 1": 3,
                "mov eax, dword [rcx];and eax, 3;je ;dec eax;je ": 3,
                "dec eax;jne ;or qword [rbx], ;jmp ;btr qword [rbx], ": 3,
                "jne ;or qword [rbx], ;jmp ;btr qword [rbx], ;bts qword [rbx], ": 3,
                "bts qword [rbx], ;jmp ;btr qword [rbx], ;bts qword [rbx], ;jmp ": 3,
                "mov dword [rsi], eax;jmp ;mov rax, qword [rcx + ];mov qword [rsi], rax;mov rbx, qword [arg_38h_2]": 2,
                "movsd qword [arg_18h], xmm2;push rbx;mov rax, rsp;mov qword [rax + ], rbx;mov qword [rax + ], rsi": 1,
                "mov dword [var_20h], ebx;mov dword [var_30h], eax;mov eax, dword [arg_74h];mov dword [var_34h], eax;mov eax, dword [arg_78h]": 2,
                "mov eax, dword [arg_84h];mov dword [var_44h], eax;call fcn.13f11fac4;lea rcx, [var_20h];call fcn.13f0d3420": 2,
                "jne ;mov ecx, 6;call fcn.13f113770;cmp dword [], 0;jne ": 3,
                "mov r15d, r12d;lea ecx, [r12 + 7];call fcn.13f113770;call fcn.13f12eb58;mov r14, rax": 4,
                "lea ecx, [r12 + 7];call fcn.13f113770;call fcn.13f12eb58;mov r14, rax;lea rcx, [arg_90h]": 4,
                "call fcn.13f111f74;mov ebx, eax;mov dword [], r12d;or r13d, ;mov dword [], r13d": 4,
                "test eax, eax;je ;mov rcx, qword [];test rcx, rcx;je ": 4,
                "mov r8, rdi;mov rcx, qword [];call fcn.13f11b2a8;test eax, eax;je ": 4,
                "call fcn.13f11b8c0;mov rcx, qword [];test rcx, rcx;je ;call fcn.13f10ef88": 4,
                "call qword [];cmp eax, ;je ;mov dword [], 1;imul ecx, dword [], ": 4,
                "imul eax, dword [], ;add ecx, eax;mov dword [arg_90h], ecx;cmp word [], r12w;je ": 4,
                "imul eax, eax, ;mov dword [arg_a0h], eax;jmp ;mov dword [arg_98h], r12d;mov dword [arg_a0h], r12d": 4,
                "mov rax, qword [r14];mov byte [rax + ], r12b;jmp ;mov rax, qword [r14];mov byte [rax], r12b": 4,
                "test eax, eax;je ;cmp dword [arg_a8h], r12d;jne ;mov rax, qword [r14 + 8]": 4,
                "cmp byte [rdi], ;jne ;lea r15d, [rsi - 2];inc rdi;mov rcx, rdi": 3,
                "jne ;inc rdi;mov rcx, rdi;call fcn.13f1412a4;imul ecx, eax, ": 2,
                "xor r9d, r9d;xor r8d, r8d;xor edx, edx;lea rax, [];ret": 1,
                "call fcn.13f11b8a0;mov eax, ;jmp ;mov eax, dword [];mov dword [rcx], eax": 20,
                "jne ;mov byte [rcx], bl;jmp ;test r8, r8;jne ": 8,
                "mov rax, qword [rcx];mov r15d, r8d;mov r12, rdx;mov r14d, dword [rax + 4];mov r13, r9": 9,
                "mov rbx, rdi;test rbx, rbx;je ;mov r9d, esi;mov r8, rbx": 9,
                "mov r8d, edi;mov rdx, rsi;mov dword [var_20h], eax;call fcn.13f12ecac;cmp byte [var_48h], 0": 10,
                "jne ;call fcn.13f10fca8;lea rax, [];ret;lea rax, []": 1,
                "lea rdx, [];mov rax, rcx;and ecx, ;sar rax, 5;imul rcx, rcx, ": 6,
                "imul rcx, rcx, ;mov rax, qword [rdx + rax*8];movsx eax, byte [rax + rcx + 8];and eax, ;jmp ": 6,
                "add rsp, ;ret;sub rsp, ;test rcx, rcx;jne ": 1,
                "sub rsp, ;or r13, ;mov esi, r13d;xor r12d, r12d;lea ebx, [r13 + ]": 5,
                "mov rbx, qword [r14 + r15*8];test rbx, rbx;je ;mov qword [var_28h], rbx;mov rax, qword [r14 + r15*8]": 5,
                "xor r8d, r8d;mov edx, ;call fcn.13f11824c;inc dword [rbx + ];mov ecx, ": 5,
                "inc dword [rbx + ];mov ecx, ;call fcn.13f113960;test r12d, r12d;jne ": 5,
                "jmp ;lea r14, [];test r12d, r12d;jne ;mov byte [rbx + 8], 1": 4,
                "jne ;mov byte [rbx + 8], 1;mov qword [rbx], r13;sub rbx, qword [r14 + r15*8];movabs rax, ": 4,
                "mov rax, rsi;shr rax, ;add rsi, rax;mov eax, edi;shl eax, 5": 4,
                "shl edi, 5;mov dword [var_20h], edi;movsxd rcx, edi;mov rax, rcx;sar rax, 5": 4,
                "mov ecx, edi;call fcn.13f12eee0;test eax, eax;cmove edi, r13d;mov esi, edi": 4,
                "mov ecx, ;call fcn.13f113960;mov eax, esi;mov rbx, qword [arg_50h];mov rsi, qword [arg_58h]": 4,
                "pop r15;pop r14;pop r13;ret;mov qword [arg_8h], rbx": 4,
                "mov qword [arg_18h], rdi;push r14;mov rax, rsp;mov qword [rax + 8], rbx;mov qword [rax + ], rsi": 1,
                "mov qword [arg_10h], rsi;mov qword [arg_18h], rdi;push r14;sub rsp, ;mov rbx, rdx": 4,
                "and eax, ;sar rdi, 5;imul rsi, rax, ;mov rax, qword [r14 + rdi*8];cmp qword [rsi + rax], ": 4,
                "sar rdi, 5;imul rsi, rax, ;mov rax, qword [r14 + rdi*8];cmp qword [rsi + rax], ;jne ": 4,
                "or eax, ;mov qword [arg_8h], rbx;mov qword [arg_10h], rdi;push r14;sub rsp, ": 1,
                "ret;int3;int3;int3;movsxd rdx, ecx": 3,
                "int3;int3;movsxd rdx, ecx;lea r8, [];mov rax, rdx": 3,
                "add rcx, ;add rcx, rax;jmp qword [];int3;int3": 4,
                "sub rsp, ;mov rcx, qword [];cmp rcx, ;jne ;call fcn.13f141374": 5,
                "lea rdx, [nNumberOfCharsToWrite];mov r8d, 1;call qword [];test eax, eax;je ": 5,
                "mov r8d, 1;call qword [];test eax, eax;je ;movzx eax, word [nNumberOfCharsToWrite]": 5,
                "cmp rcx, qword [];je ;call fcn.13f10ef88;mov rcx, qword [rbx + ];cmp rcx, qword []": 75,
                "mov rcx, r14;call fcn.13f10ef88;jmp ;mov dword [rax], ebx;cmp qword [rsi + ], rbx": 6,
                "mov dword [rax], ebx;mov rdi, qword [rsi + ];mov r9d, ;lea rax, [r14 + ];lea rcx, [rbp - ]": 5,
                "lea rcx, [rbp - ];mov r8, rdi;mov ebx, eax;call fcn.13f11b30c;lea rcx, [r14 + ]": 5,
                "or ebx, eax;call fcn.13f11b30c;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;mov qword [arg_18h], rdi": 1,
                "call fcn.13f11b30c;mov r9d, ;lea r13, [r14 + ];lea rcx, [rbp - ];lea edx, [r9 - ]": 4,
                "lea edx, [r9 - ];mov r8, rdi;or ebx, eax;mov qword [rsp + ], r13;call fcn.13f11b30c": 4,
                "lea rax, [r14 + ];lea rcx, [rbp - ];mov r9d, ;mov r8, rdi;xor edx, edx": 3,
                "lea rcx, [rbp - ];or ebx, eax;lea rax, [r14 + ];mov r9d, ;mov r8, rdi": 3,
                "push rbx;sub rsp, ;mov rbx, rcx;mov rcx, qword [rcx];cmp rcx, qword []": 1,
                "mov qword [r14 + rdx + ], rax;call fcn.13f113e30;mov r12, rax;test rax, rax;jne ": 1,
                "mov qword [rsp + ], rax;call fcn.13f11b30c;or eax, ebx;je ;mov rcx, r14": 1,
                "call fcn.13f12f9d4;or ebp, ;mov rcx, r14;call fcn.13f10ef88;mov rcx, r12": 1,
                "mov cl, byte [rdx];lea eax, [rcx - ];cmp al, 9;ja ;sub cl, ": 1,
                "lea eax, [rcx - ];cmp al, 9;ja ;sub cl, ;mov byte [rdx], cl": 1,
                "mov r8, rdx;lea rcx, [r8 + 1];mov al, byte [rcx];mov byte [r8], al;mov r8, rcx": 1,
                "test r15, r15;je ;mov dword [r15], ebp;mov rax, qword [rsi + ];test rax, rax": 1,
                "call fcn.13f10ef88;mov rcx, qword [rbx + ];call fcn.13f10ef88;mov rcx, qword [rbx + ];call fcn.13f10ef88": 97,
                "mov rcx, qword [rbx + ];call fcn.13f10ef88;mov rcx, qword [rbx + ];call fcn.13f10ef88;mov rcx, qword [rbx]": 2,
                "call fcn.13f10ef88;mov rcx, qword [rbx + ];call fcn.13f10ef88;test rcx, rcx;je ": 1,
                "lea rbp, [];je ;mov edx, ;mov ecx, 1;call fcn.13f113db0": 1,
                "push rbp;mov rbp, rsp;sub rsp, ;mov rsi, qword [rdx + ];mov rbx, rdx": 2,
                "lea r9d, [r14 + ];mov r8, rsi;mov qword [var_20h], rcx;lea rcx, [var_10h];mov edx, r14d": 1,
                "call fcn.13f11b30c;lea r9d, [r14 + ];lea rcx, [var_10h];or ebx, eax;lea rax, [rdi + ]": 22,
                "lea r9d, [r14 + ];lea rcx, [var_10h];mov r8, rsi;mov edx, r14d;mov qword [var_20h], rdi": 1,
                "or ebx, eax;lea rax, [rdi + ];mov edx, r14d;push rbx;sub rsp, ": 1,
                "movzx eax, word [r8];mov word [rcx + r8], ax;lea r8, [r8 + 2];test ax, ax;je ": 1,
                "jne ;mov word [r9], r10w;call fcn.13f10fca8;mov ebx, ;jmp ": 1,
                "ret;int3;int3;int3;xor r10d, r10d": 2,
                "movzx eax, word [rcx];test ax, ax;je ;cmp word [r9], 0;mov r8, r9": 5,
                "cmp rax, 3;sete cl;cmp dword [rbx + ], 0;mov dword [rbx + ], ecx;je ": 6,
                "jne ;xor edx, edx;jmp ;mov edx, 2;movzx r8d, word [rcx]": 13,
                "xor edx, edx;jmp ;mov edx, 2;movzx r8d, word [rcx];add rcx, rdx": 13,
                "mov edx, 2;movzx r8d, word [rcx];add rcx, rdx;lea eax, [r8 - ];cmp ax, ": 13,
                "mov dword [rbx + ], edx;lea rcx, [];lea edx, [r8 + 3];call fcn.13f11abcc;test byte [rbx + ], 4": 6,
                "xor rax, rsp;mov qword [rsp + ], rax;mov rdi, rcx;call fcn.13f11d3c0;mov esi, ": 6,
                "mov ecx, dword [rbx + ];neg ecx;mov rcx, rdi;sbb edx, edx;and edx, ": 6,
                "test eax, eax;jne ;mov dword [rbx + ], ebp;mov eax, 1;jmp ": 6,
                "mov r14d, ;test eax, eax;jne ;mov eax, dword [rbx + ];lea r8, [rsp + ]": 5,
                "add edx, ;call fcn.13f11ac8c;test eax, eax;je ;mov rcx, qword [rbx]": 8,
                "mov rcx, rdi;call fcn.13f118764;lea rcx, [rbx + ];mov r8, rdi;lea r9, [rax + 1]": 10,
                "je ;or dword [rbx + ], 1;mov rcx, rdi;call fcn.13f118764;lea rcx, [rbx + ]": 3,
                "call fcn.13f130e24;test eax, eax;jne ;mov eax, dword [rbx + ];mov ecx, ": 3,
                "and eax, ecx;cmp eax, ecx;je ;mov eax, dword [rbx + ];lea r8, [rsp + ]": 3,
                "mov rcx, rdi;call fcn.13f118764;mov r8, rdi;mov rdx, r14;lea r9, [rax + 1]": 5,
                "call fcn.13f131580;test eax, eax;jne ;mov rcx, qword [rbx];mov esi, ebp": 2,
                "jne ;mov rcx, qword [rbx];mov esi, ebp;test rcx, rcx;je ": 2,
                "jmp ;mov rcx, qword [rbx];push rbx;sub rsp, ;mov rbx, rcx": 1,
                "test eax, eax;je ;jmp ;bts dword [rbx + ], 8;lea rsi, [rbx + ]": 1,
                "lea r8, [arg_30h];mov r9d, 2;mov edx, ;call fcn.13f11ac8c;test eax, eax": 1,
                "mov edx, ;call fcn.13f11ac8c;test eax, eax;jne ;xor eax, eax": 1,
                "mov rax, qword [];xor rax, rsp;mov qword [var_38h], rax;mov r9d, 9;lea r8, [var_20h]": 2,
                "xor rax, rsp;mov qword [var_38h], rax;mov r9d, 9;lea r8, [var_20h];mov rdi, rcx": 2,
                "lea r8, [var_20h];mov rdi, rcx;lea edx, [r9 + ];call fcn.13f11ac8c;xor ebx, ebx": 2,
                "lea rcx, [var_20h];mov r8d, 9;mov rdx, rdi;call fcn.13f1114c8;test eax, eax": 2,
                "push r14;push r15;sub rsp, ;xor ebx, ebx;mov r15, r8": 3,
                "js ;test eax, eax;je ;mov rcx, qword [r15];lea eax, [rsi + rdi]": 3,
                "call fcn.13f130f28;cmp dword [rbx + ], r12d;je ;lea rcx, [r14 + ];mov rdx, rbx": 4,
                "lea ecx, [rax - ];cmp ecx, 1;jbe ;movzx ecx, ax;call qword []": 8,
                "je ;mov dword [rsi], ebx;test rbp, rbp;je ;lea rsi, [rbp + ]": 4,
                "jne ;lea edx, [rax + ];mov rcx, rdi;call fcn.13f1414e8;test rax, rax": 4,
                "test eax, eax;je ;mov r9d, ;lea rdx, [rbp + ];mov ecx, ebx": 4,
                "call fcn.13f130fd8;jmp ;or dword [rbx + ], ;lea rcx, [var_30h];mov edx, ": 3,
                "mov qword [rsp + ], rbp;mov qword [rsp + ], rsi;push rdi;sub rsp, ;mov rax, qword []": 2,
                "sub rsp, ;mov rax, qword [];xor rax, rsp;mov qword [rsp + ], rax;mov rbx, rcx": 6,
                "lea r8, [rsp + ];mov r9d, ;sbb edx, edx;mov ecx, eax;mov esi, eax": 2,
                "jne ;mov dword [rdi], ebx;lea eax, [rbx + 1];jmp ;mov rcx, qword [rbp + ]": 2,
                "lea rbx, [rax + ];mov rcx, qword [rbx];call fcn.13f118764;mov rcx, qword [rbx + 8];xor edx, edx": 2,
                "je ;test byte [rdi], 7;jne ;and dword [rdi], 0;mov rbx, qword [arg_30h]": 1,
                "push rdi;sub rsp, ;mov rdi, rcx;call fcn.13f11d3c0;mov rcx, qword [rax + ]": 2,
                "call qword [];test byte [rdi], 4;jne ;and dword [rdi], 0;mov rbx, qword [arg_30h]": 2,
                "ret;int3;mov qword [rsp + ], rbx;mov qword [rsp + ], rsi;mov qword [rsp + ], rdi": 2,
                "mov rcx, qword [rsi];lea rdx, [rsp + ];call fcn.13f111920;test eax, eax;jne ": 8,
                "movsxd rax, r8d;cmp rax, ;jb ;or ecx, 1;mov dword [rdi], ecx": 2,
                "cmp rax, ;jb ;or ecx, 1;mov dword [rdi], ecx;mov dword [rdi + 8], ebx": 2,
                "cmp dword [rsi + ], r14d;jne ;cmp dword [rsi + ], r14d;je ;mov rcx, qword [rsi]": 4,
                "cmp dword [rsi + ], r14d;je ;mov rcx, qword [rsi];call fcn.13f118764;cmp eax, dword [rsi + ]": 2,
                "je ;bts dword [rdi], 8;cmp dword [rdi + 4], r14d;jne ;mov dword [rdi + 4], ebx": 2,
                "lea rsi, [rax + ];mov qword [arg_8h], rbx;push rdi;sub rsp, ;mov rdi, rcx": 1,
                "test eax, eax;jne ;cmp dword [rsi + ], eax;jne ;lea edx, [rax + 1]": 1,
                "test eax, eax;je ;or dword [rdi], 4;mov dword [rdi + 4], ebx;mov dword [rdi + 8], ebx": 1,
                "je ;or dword [rdi], 4;mov dword [rdi + 4], ebx;mov dword [rdi + 8], ebx;mov eax, dword [rdi]": 1,
                "call qword [];xor ebx, ebx;test eax, eax;jne ;xor eax, eax": 3,
                "mov r14, r8;mov r15, rdx;mov rsi, rcx;call fcn.13f11d3c0;xor edx, edx": 4,
                "mov r8, rbx;dec edx;call fcn.13f1315e8;mov dword [var_20h], r12d;mov rax, qword [rdi + ]": 4,
                "mov edx, dword [];lea r8, [rdi + ];lea rcx, [];dec edx;call fcn.13f1315e8": 4,
                "mov dword [rbx + ], ecx;lea rcx, [];call qword [];test byte [var_20h], 4;jne ": 4,
                "mov dword [r15], ebx;mov ecx, dword [cchData];lea rdx, [rdi + ];mov edi, ;mov r8d, edi": 3,
                "lea rdx, [r14 + ];mov r8d, edi;call fcn.13f11aadc;mov ecx, dword [cchData];mov edi, ": 3,
                "mov edx, ;call qword [];test eax, eax;je ;mov ecx, dword [var_18h]": 3,
                "mov r9d, edi;mov edx, ;call qword [];test eax, eax;je ": 3,
                "test eax, eax;je ;mov qword [arg_10h], rbx;mov qword [arg_18h], rbp;mov qword [arg_20h], rsi": 1,
                "xor eax, eax;mov rcx, qword [var_10h];xor rcx, rsp;call fcn.13f10e4e0;add rsp, ": 2,
                "mov qword [rbp - ], rax;test rsi, rsi;je ;test byte [rsi + ], ;lea r9, []": 1,
                "test byte [rsi + ], ;lea r9, [];jne ;mov rcx, rsi;call fcn.13f11ba88": 1,
                "lea rax, [];and edx, ;sar rcx, 5;imul r9, rdx, ;add r9, qword [rax + rcx*8 + ]": 1,
                "mov r9, r8;test byte [r9 + ], ;jne ;lea eax, [r10 + 2];lea r9, []": 1,
                "mov dword [rsp + ], r10d;mov edx, r10d;mov qword [rbp - ], r10;test r15b, r15b;push rbx": 1,
                "movsx ecx, cl;call fcn.13f11b8fc;cmp eax, ;jne ;or dword [rbx], eax": 1,
                "mov cl, byte [r14];mov r8, rdi;mov rdx, rbp;dec esi;call fcn.13f132cd8": 3,
                "test rax, rax;je ;lea rdx, [];mov rcx, rbx;call qword []": 13,
                "mov rcx, rbx;call qword [];mov rcx, rax;call qword [];mov qword [], rax": 5,
                "je ;mov rcx, qword [];call qword [];mov eax, 3;jmp ": 5,
                "mov rcx, qword [];cmp rcx, rsi;je ;cmp qword [], rsi;je ": 5,
                "je ;lea rcx, [var_30h];mov r9d, ;lea r8, [var_38h];mov qword [var_20h], rcx": 5,
                "call qword [];test rax, rax;je ;mov r9d, ebp;mov r8, r12": 4,
                "mov rcx, rdi;call rax;jmp ;xor eax, eax;mov rcx, qword [var_48h]": 4,
                "mov dword [rax], ebx;call fcn.13f10fca8;mov dword [rax], 9;jmp ;xor ebx, ebx": 4,
                "mov rax, qword [r13 + r14*8];test byte [rax + r12 + 8], 1;je ;mov r8d, esi;mov rdx, r15": 3,
                "je ;mov r8d, esi;mov rdx, r15;mov ecx, edi;call fcn.13f1331bc": 3,
                "pop rdi;ret;mov qword [arg_10h], rdx;mov dword [arg_8h], ecx;push rbx": 1,
                "je ;dec ecx;jne ;mov eax, ebx;not eax": 2,
                "dec ecx;jne ;mov eax, ebx;not eax;test al, 1": 2,
                "mov eax, ebx;not eax;test al, 1;je ;shr ebx, 1": 2,
                "not eax;test al, 1;je ;shr ebx, 1;cmp ebx, r11d": 2,
                "mov rcx, qword [r10 + r13*8 + ];mov qword [rcx + r14 + ], rax;mov rax, qword [r10 + r13*8 + ];mov r12, r15;mov r9d, ": 2,
                "lea esi, [r9 - 9];mov byte [rax + r14 + 9], r9b;test dl, dl;je ;mov rax, qword [r10 + r13*8 + ]": 2,
                "je ;test ebx, ebx;je ;mov byte [r12], cl;mov rax, qword [r10 + r13*8 + ]": 4,
                "je ;mov byte [r12], cl;mov rax, qword [r10 + r13*8 + ];add ebx, r11d;inc r12": 2,
                "mov rax, qword [r10 + r13*8 + ];inc r12;lea esi, [r9 - 7];add ebx, r11d;mov byte [rax + r14 + ], r9b": 2,
                "mov eax, dword [var_24h];lea edx, [rax + rax];mov dword [var_24h], edx;jmp ;lea rcx, []": 1,
                "cmp byte [arg_60h], 2;je ;test edx, edx;mov edx, ;je ": 1,
                "je ;cmp byte [r15], dl;jne ;or al, 4;jmp ": 1,
                "cmp r12, rax;jae ;lea rax, [r12 + 1];cmp byte [rax], dl;jne ": 1,
                "jne ;call qword [];test eax, eax;jne ;cmp dword [var_24h], edi": 1,
                "lea rcx, [var_48h];mov rdx, r8;mov rdi, r9;call fcn.13f10f2d4;lea rax, [var_48h]": 3,
                "mov rax, qword [];xor rax, rsp;mov qword [var_78h], rax;mov rdi, rcx;mov rbx, rdx": 4,
                "pop rdi;ret;int3;xor r9d, r9d;jmp ": 4,
                "test eax, eax;je ;lea rcx, [];call qword [];lea rdx, []": 6,
                "mov rcx, rax;call qword [];mov r10, rax;test rax, rax;jne ": 6,
                "mov eax, dword [arg_98h];mov r9, rbx;or eax, dword [arg_a0h];mov r8d, edi;mov edx, esi": 6,
                "mov r9, rbx;or eax, dword [arg_a0h];mov r8d, edi;mov edx, esi;mov dword [var_28h], eax": 6,
                "test edi, edi;je ;or dword [rbx], ;mov eax, edi;mov rbx, qword [arg_60h]": 10,
                "xor edi, edi;mov r15b, ;mov esi, r9d;mov rbx, rdx;mov dword [rbp - ], ": 5,
                "lea r14d, [rdi + 1];mov dword [rbp - ], edi;mov byte [rbp + ], dil;mov qword [rbp - 9], rdi;test r15b, r9b": 5,
                "jmp ;mov r13d, edx;mov ecx, dword [rbp + ];mov dword [rbp - ], r13d;mov r15d, 2": 4,
                "mov ecx, r15d;jmp ;mov ecx, r14d;jmp ;mov ecx, edi": 4,
                "jmp ;mov r14d, 4;jmp ;mov r14d, r9d;mov edx, ": 3,
                "jmp ;test sil, ;je ;bts eax, ;mov dword [rbp - ], eax": 2,
                "je ;mov eax, dword [rbp - ];mov r8d, dword [rbp - ];mov rcx, qword [rbp + ];mov dword [var_30h], eax": 1,
                "mov dword [var_28h], eax;lea r9, [rbp - ];mov edx, r13d;mov dword [var_20h], r14d;mov dword [rbp - ], r13d": 1,
                "mov rcx, qword [rbp - ];call qword [];test ebx, ebx;jne ;call fcn.13f10fca8": 1,
                "call qword [];test ebx, ebx;jne ;call fcn.13f10fca8;mov dword [rax], ": 1,
                "pshufd xmm3, xmm1, 0;pmovmskb ecx, xmm0;movdqa xmm0, xmm3;pcmpeqb xmm0, xmmword [r10];pmovmskb edx, xmm0": 2,
                "jne ;bsr ecx, edx;movdqa xmm1, xmm2;movdqa xmm0, xmm3;add rcx, r10": 2,
                "cmp rdx, rax;ja ;call fcn.13f10fca8;mov ebx, ;jmp ": 3,
                "je ;inc byte [rax];cmp byte [rbx], ;jne ;inc dword [r9 + 4]": 3,
                "inc dword [r9 + 4];jmp ;mov rcx, rdi;call fcn.13f112c90;mov rdx, rdi": 3,
                "mov eax, dword [rdx];and r8w, r9w;and ecx, ;mov ebx, ;movzx edx, r8w": 4,
                "or r11w, r8w;mov rbx, qword [arg_8h];mov word [r10 + 8], r11w;ret;int3": 4,
                "mov qword [rdi + ], rsi;mov rax, rdi;mov rcx, qword [rbp + ];xor rcx, rsp;call fcn.13f10e4e0": 3,
                "mov qword [rcx + ], rsi;mov dword [rcx + ], esi;mov qword [rcx + ], rdx;mov qword [rcx + ], rsi;mov qword [rcx + ], rsi": 4,
                "test r8b, 2;je ;mov r9d, edi;mov r8d, eax;lea ecx, [rsi + 1]": 3,
                "call fcn.13f135f9c;mov rcx, qword [rbx + 8];add rsp, ;pop rbx;jmp fcn.13f10efc8": 3,
                "mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi;sub rsp, ;cmp dword [rcx + ], 0": 4,
                "mov qword [arg_10h], rsi;push rdi;sub rsp, ;cmp dword [rcx + ], 0;mov rdi, rcx": 4,
                "call fcn.13f134b74;test bl, 1;je ;mov rcx, rdi;call fcn.13f10e55c": 3,
                "push rsi;push rdi;push r13;push r14;mov rax, rsp": 1,
                "mov qword [arg_10h], rsi;push rdi;sub rsp, ;mov rbx, rdx;mov rsi, rcx": 3,
                "add rdx, ;add rcx, ;mov dil, r8b;call fcn.13f134e28;mov byte [rbx + ], 1": 3,
                "add rcx, ;mov dil, r8b;call fcn.13f134e28;mov byte [rbx + ], 1;test dil, dil": 3,
                "jne ;mov qword [rdi + 8], rdi;mov qword [rdi], rdi;jmp ;mov rax, qword [rax + 8]": 4,
                "mov qword [rsi], rdi;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];add rsp, ;pop rdi": 4,
                "mov qword [arg_10h], rsi;push rdi;sub rsp, ;mov edi, edx;mov rbx, rcx": 5,
                "lock cmpxchg dword [rcx + ], edi;jne ;mov eax, dword [rcx + ];test eax, eax;cmovne edx, esi": 5,
                "mov eax, dword [rcx + ];test eax, eax;cmovne edx, esi;call fcn.13f1355c8;mov eax, dword [rbx + ]": 5,
                "mov rbx, qword [arg_30h];add eax, edi;sete al;add rsp, ;pop rdi": 5,
                "mov qword [rax + 8], rcx;push rbp;push rsi;push rdi;sub rsp, ": 6,
                "push rdi;sub rsp, ;mov qword [rax - ], ;mov qword [rax + ], rbx;mov rbp, rdx": 6,
                "test rbx, rbx;jmp ;lea rdi, [rbx - ];mov eax, dword [rdi + ];test eax, eax": 6,
                "mov rcx, rdi;call fcn.13f134f40;cmp rbx, qword [rsi];je ;mov rbx, qword [rbx + 8]": 5,
                "test rbp, rbp;je ;mov rcx, qword [rbp + ];call fcn.13f10efc8;mov rcx, qword [rbp + ]": 9,
                "je ;mov rcx, qword [rbp + ];call fcn.13f10efc8;mov rcx, qword [rbp + ];call fcn.13f10efc8": 9,
                "call fcn.13f10e55c;test rdi, rdi;jne ;mov qword [rsi + ], rbx;xchg dword [rsi + ], ebx": 5,
                "jne ;mov qword [rsi + ], rbx;xchg dword [rsi + ], ebx;mov rbx, qword [rsp + ];mov rbp, qword [rsp + ]": 5,
                "mov qword [rdx], rbx;mov al, 1;jmp ;mov r8, qword [r11];or eax, ": 6,
                "jb ;mov r8d, dword [];mov ecx, 2;test cl, r8b;je ": 6,
                "mov r9d, edi;mov r8d, eax;call fcn.13f135e30;mov rbx, qword [arg_30h];add rsp, ": 5,
                "mov rcx, qword [rbx + ];call fcn.13f137114;mov qword [arg_8h], rbx;push rdi;sub rsp, ": 1,
                "cmp rbx, r8;jl ;xor ebx, ebx;test rbx, rbx;jne ": 5,
                "jne ;mov rcx, r14;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];mov rdi, qword [arg_40h]": 5,
                "cdqe;mov rbx, qword [rbx + rax*8];jmp ;mov rsi, rbx;mov rbx, qword [rdx + rbx*8]": 4,
                "mov rbx, qword [rbx + rax*8];jmp ;mov rsi, rbx;mov rbx, qword [rdx + rbx*8];mov edi, eax": 4,
                "mov rsi, rbx;mov rbx, qword [rdx + rbx*8];mov edi, eax;jmp ;int3": 4,
                "mov qword [rbx + ], rcx;test rcx, rcx;jne ;mov ecx, ;call fcn.13f10eae8": 5,
                "test rax, rax;je ;mov rcx, rax;call fcn.13f143940;mov rdi, rax": 5,
                "mov qword [r11 + 8], rcx;push rdi;push r12;push r13;push r14": 5,
                "test eax, eax;je ;and dword [var_40h], 0;lea rax, [];mov qword [r11 - ], rax": 5,
                "lea rcx, [var_38h];call fcn.13f115b2c;mov eax, dword [rbx + ];test eax, eax;jne ": 5,
                "lea r15, [rdi - ];mov qword [var_30h], r15;mov rcx, qword [r15 + ];call fcn.13f136e90;mov r14, rax": 5,
                "lea rcx, [rax + 8];call fcn.13f115c50;test al, al;jne ;lea rcx, [rbx + ]": 5,
                "mov rax, qword [rdx];mov qword [rax + 8], rcx;mov rax, qword [rbx + ];cmp rdx, rax;jne ": 5,
                "jmp ;test rdi, rdi;sete dil;test sil, sil;je ": 4,
                "call fcn.13f115a78;jmp ;lea r11, [var_50h];mov rbx, qword [r11 + ];mov qword [arg_8h], rbx": 1,
                "mov rbx, qword [r11 + ];mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;mov qword [arg_18h], rdi;push r14": 1,
                "ret;push rbx;sub rsp, ;mov rbx, rdx;mov r11, rcx": 2,
                "jmp ;mov qword [rdx], rax;dec dword [r11 + 4];jmp ;xor al, al": 3,
                "jle ;mov r10d, r8d;mov rax, qword [r9 + ];mov ecx, r8d;sar ecx, 4": 3,
                "mov eax, dword [rcx + ];xor edi, edi;mov rbx, rdx;mov rsi, rcx;test eax, eax": 7,
                "jne ;test rbx, rbx;je ;cmp rbx, qword [rsi + ];je ": 7,
                "xor edx, edx;mov rcx, rbx;call fcn.13f143744;test rax, rax;jne ": 7,
                "mov eax, dword [rbx + 8];sar eax, ;and al, 1;je ;test byte [rbx + ], 3": 7,
                "cmp eax, r8d;jg ;movsxd rcx, dword [rdx + 8];movsxd rax, r8d;and rcx, rax": 7,
                "add r9, qword [rdx + ];mov rax, qword [r9];mov edx, dword [r9 + 8];mov rcx, qword [rax + ];mov r8, qword [rcx + rdx*8]": 7,
                "cmp r8, 1;je ;mov rax, qword [r9];mov edx, dword [r9 + 8];mov rcx, qword [rax + ]": 11,
                "mov eax, 1;xchg qword [rcx + rdx*8], rax;cmp rax, r8;je ;mov r8, qword [r9]": 11,
                "je ;mov r8, qword [r9];lock dec dword [r8 + ];jne ;mov r9, qword [r8]": 21,
                "sub rsp, ;mov rbx, qword [rcx + ];mov rdi, rcx;mov ecx, dword [];mov rdx, rbx": 7,
                "test rdi, rdi;je ;cmp rdi, qword [rsi + ];je ;mov eax, dword [rdi + 8]": 8,
                "test al, al;jne ;mov rcx, rdi;call fcn.13f136f38;test al, al": 8,
                "jmp ;mov ebx, dword [rdi + 8];shl ebx, 4;sar ebx, 4;or eax, ": 8,
                "pop rdi;ret;int3;lock inc dword [rcx + ];ret": 6,
                "mov rcx, qword [rsi + ];mov rdx, rdi;call fcn.13f13f298;jmp ;mov eax, dword [rbx]": 6,
                "mov r8, rbx;mov qword [rbx + ], rax;call fcn.13f12b784;jmp ;mov rcx, rbx": 16,
                "call fcn.13f1157d4;mov rdx, qword [rdi + 8];mov rax, qword [rdi];mov qword [rdx], rax;mov rax, qword [rdi + 8]": 7,
                "mov rax, qword [rdi];mov qword [rdx], rax;mov rax, qword [rdi + 8];mov rdx, qword [rdi];mov qword [rdx + 8], rax": 7,
                "push r14;sub rsp, ;lea r14, [rcx + ];xor eax, eax;xor esi, esi": 9,
                "mov rcx, rdi;cmp qword [rcx], rsi;jne ;inc rdx;inc eax": 9,
                "test rdi, rdi;je ;mov rcx, rdi;call fcn.13f136204;mov rcx, rdi": 7,
                "jmp ;int3;int3;int3;push rdi": 6,
                "mov rbx, rcx;mov rcx, qword [rcx + ];mov qword [rsp + ], rcx;call fcn.13f123be4;xor r9d, r9d": 6,
                "and r8, ;mov edx, dword [rsp + ];mov rcx, qword [rsp + ];mov rax, qword [rcx + ];mov r9, qword [rax + rdx*8]": 5,
                "mov r8, qword [rsp + ];lea rcx, [r8 + ];mov r9, qword [r8];lea rdx, [];call fcn.13f12b784": 5,
                "lea rcx, [r8 + ];mov r9, qword [r8];lea rdx, [];call fcn.13f12b784;jmp ": 5,
                "cmp qword [], 0;mov edi, r9d;mov esi, r8d;mov bpl, dl;mov r14d, ecx": 8,
                "mov byte [var_25h], bpl;mov dword [var_54h], esi;mov word [var_20h], ax;mov dword [var_58h], edi;call fcn.13f13aa94": 6,
                "call fcn.13f13aa94;lea r11, [var_60h];mov rbp, qword [r11 + ];mov rsi, qword [r11 + ];mov rdi, qword [r11 + ]": 8,
                "sub rsp, ;mov eax, dword [rcx + 4];sub edx, dword [rcx + ];mov r8, rcx;dec eax": 6,
                "mov rax, qword [r8 + ];xor r10d, r10d;movsxd r11, edx;and rcx, r11;xchg qword [rax + rcx*8], r10": 5,
                "mov qword [rax + ], rbx;mov qword [rax + ], rbp;mov qword [rax + ], rsi;mov bpl, r8b;mov rsi, rdx": 5,
                "mov rax, qword [rsi + ];mov qword [rbx + ], rax;test rax, ;je ;lock inc dword [rax + 8]": 4,
                "jne ;jmp ;or dword [rbx + ], 1;and qword [rbx + ], 0;call fcn.13f12a090": 4,
                "jne ;call fcn.13f10ef88;add rsp, ;mov rcx, qword [rcx + ];add rcx, ": 1,
                "je ;mov rbx, qword [rcx + ];call fcn.13f137114;mov rcx, rbx;test rbx, rbx": 4,
                "jne ;mov rbx, qword [rdi + ];test rbx, rbx;je ;mov rcx, qword [rbx + 8]": 4,
                "jmp fcn.13f144ae4;int3;int3;int3;mov qword [rsp + 8], rbx": 5,
                "je ;mov eax, dword [rbx + ];shr eax, 1;test al, 1;je ": 4,
                "mov rsi, qword [rbx + ];jmp fcn.13f144ae4;int3;int3;int3": 1,
                "cmp qword [rbx + ], rbx;je ;mov r8d, dword [rbx + ];test r8b, 1;je ": 5,
                "mov rax, qword [rbx + ];mov rdi, qword [rax + ];test rsi, rsi;je ;cmp byte [rsi + ], 0": 5,
                "jbe ;dec dword [rsi + 4];mov rax, qword [rsi + 8];movsxd rcx, dword [rsi + 4];mov edx, dword [rax + rcx*4]": 5,
                "call fcn.13f135f8c;mov rdx, rax;test rax, rax;je ;cmp rax, 1": 5,
                "je ;and dword [rsi + 4], 0;test r14b, r14b;jne ;mov rdx, rdi": 4,
                "int3;sub rsp, ;and dword [var_28h], 0;mov rax, rdx;mov qword [var_20h], rcx": 4,
                "call fcn.13f12a090;cmp byte [rax + ], 0;mov rcx, qword [rax + ];mov qword [arg_18h], rbx;mov qword [arg_10h], rdx": 1,
                "add dword [rcx + ], eax;jmp ;add dword [rcx + ], eax;add rsp, ;ret": 4,
                "call fcn.13f129ee4;mov rbx, rax;cmp qword [rbx + ], rsi;jne ;mov rcx, rbx": 5,
                "test rax, rax;je ;mov r8b, 1;mov rdx, rdi;mov rcx, rax": 4,
                "je ;cmp qword [rdi + ], rdi;je ;mov ecx, dword [rdi + ];test cl, 1": 5,
                "je ;mov dl, sil;sub rsp, ;and dword [var_28h], 0;mov rax, rdx": 1,
                "jmp ;mov edi, dword [rbx + ];lea eax, [rdi - 1];test eax, ;je ": 4,
                "push rdi;sub rsp, ;mov rbx, r8;mov dil, dl;mov dl, dil": 5,
                "xor r8d, r8d;mov r15b, dl;lea esi, [r8 + 4];mov rbx, rcx;mov ecx, edi": 6,
                "je ;dec ecx;je ;cmp ecx, esi;jne ": 6,
                "mov r14, qword [rbx + ];mov bpl, 1;shl edx, 4;mov rcx, r14;sar edx, 4": 6,
                "call fcn.13f1366f4;mov r8b, bpl;push rdi;sub rsp, ;mov qword [var_20h], ": 1,
                "mov rsi, rcx;lea r14, [rcx + ];mov qword [rax + 8], r14;lea rcx, [r14 + 8];call fcn.13f115794": 5,
                "mov qword [rax + 8], r14;lea rcx, [r14 + 8];call fcn.13f115794;test bl, bl;jne ": 5,
                "xchg dword [rbx + ], eax;mov edx, ;mov rcx, rbx;call fcn.13f134e94;xor edx, edx": 5,
                "cmp rdi, qword [r14];je ;mov rdi, qword [rdi + 8];jmp ;xor edi, edi": 5,
                "je ;mov rdi, qword [rdi + 8];jmp ;xor edi, edi;test rdi, rdi": 5,
                "lea rcx, [r14 + 8];mov rbx, qword [arg_58h];mov rbp, qword [arg_60h];add rsp, ;pop r14": 5,
                "lea rcx, [rbx + ];call fcn.13f11657c;add rsp, ;pop rbx;ret": 4,
                "test rdx, rdx;jne ;mov qword [rdi + ], rax;jmp ;mov qword [rdx + 8], rax": 4,
                "mov qword [rdi + ], rdx;call fcn.13f10ef88;mov dword [rbx + ], esi;lock dec dword [rbx + 8];jne ": 4,
                "je ;xor eax, eax;lock cmpxchg dword [rbx + ], r14d;mov edi, eax;cmp eax, 3": 4,
                "je ;lea rcx, [var_60h];call fcn.13f11611c;lea rax, [var_60h];mov qword [rbx + ], rax": 4,
                "lea rcx, [var_60h];call fcn.13f11611c;lea rax, [var_60h];mov qword [rbx + ], rax;xchg dword [rbx + ], esi": 4,
                "je ;mov rax, qword [rcx];mov edx, 1;call qword [rax];add rsp, ": 4,
                "mov rax, rcx;mov rcx, qword [rcx + ];jmp qword [rax + ];int3;push rbp": 4,
                "jmp qword [rax + ];int3;push rbp;push r14;push r15": 4,
                "test rdx, rdx;jne ;test eax, eax;jle ;lea rcx, []": 3,
                "lea rcx, [rcx + 8];mov rdi, qword [rdi + ];dec r8;jne ;mov rax, rsp": 1,
                "call fcn.13f10ef88;jmp ;add rcx, ;or edx, ;call fcn.13f1169ac": 2,
                "pop r15;pop r14;pop rbp;ret;lea rax, [rcx + ]": 2,
                "mov edi, ;mov rbx, rcx;lea eax, [rdi - 1];lock cmpxchg dword [rcx + ], edi;jne ": 4,
                "mov qword [var_20h], ;xor eax, eax;mov dword [rcx + ], eax;mov dword [rcx + ], eax;mov dword [rcx + ], eax": 5,
                "add rcx, ;mov qword [arg_48h], rcx;je ;mov qword [rcx], rax;add rcx, 8": 5,
                "je ;and qword [rbx + ], 0;lea rax, [];mov qword [rbx + ], r14;mov qword [rbx], rax": 9,
                "mov qword [rbx], rax;lea rax, [];mov dword [rbx + 8], esi;mov qword [rbx], rax;lea rax, []": 9,
                "call fcn.13f137050;mov rbp, qword [arg_38h];mov rsi, qword [arg_40h];mov rdi, qword [arg_48h];mov rax, rbx": 9,
                "mov eax, dword [rcx + ];test eax, eax;jne ;lea rdx, [rcx + ];lea rcx, [r11 - ]": 9,
                "mov edi, eax;xor eax, eax;lock cmpxchg dword [rbx + ], edi;jne ;mov rdx, qword [rbx]": 9,
                "mov ecx, 3;mov eax, edi;lock cmpxchg dword [rbx + ], ecx;cmp eax, 2;jne ": 9,
                "jne ;mov rcx, qword [rbx + ];call fcn.13f1167b0;lock dec dword [rbx + 8];jne ": 9,
                "or edx, 2;lock cmpxchg dword [rcx + ], edx;je ;test al, 2;je ": 10,
                "je ;test al, 2;je ;call fcn.13f136204;mov rcx, rbx": 10,
                "mov ecx, dword [rbx + ];and dword [var_28h], 0;lea rax, [];mov qword [var_30h], rax;cmp ecx, 9": 11,
                "lea rcx, [rbx + ];cmp qword [rcx], rbx;je ;mov eax, dword [rbx + ];test al, 1": 11,
                "jne ;mov qword [arg_8h], rcx;sub rsp, ;mov qword [var_20h], ;xor eax, eax": 1,
                "call fcn.13f143818;mov rbx, qword [arg_60h];mov rbp, qword [arg_68h];mov rsi, qword [arg_70h];add rsp, ": 9,
                "ret;mov eax, dword [rcx + ];mov r9d, ;jmp ;mov r8d, eax": 8,
                "and r8d, ;or r8d, edx;lock cmpxchg dword [rcx + ], r8d;je ;test r9d, eax": 9,
                "mov rdi, rcx;lea r14d, [rbx + 1];mov sil, bl;cmp qword [rcx + ], rcx;je ": 7,
                "cmovg esi, r14d;test rax, rax;jne ;test sil, sil;je ": 5,
                "jmp ;mov rax, qword [rbx + 8];mov qword [rax + 8], r8;mov qword [rbx + 8], r8;mov rbx, qword [arg_50h]": 6,
                "mov qword [rbx + 8], r8;mov rbx, qword [arg_50h];add rsp, ;push rbx;sub rsp, ": 1,
                "mov rax, rcx;movsd qword [rdx + ], xmm0;ret;int3;int3": 6,
                "call fcn.13f123dc8;lea rdx, [];lea rcx, [var_20h];call fcn.13f112d38;int3": 7,
                "mov qword [arg_10h], rsi;push rdi;sub rsp, ;mov edi, 1;mov rbx, rcx": 8,
                "mov qword [rax + ], rsi;mov r15, r8;mov r13, rdx;mov rsi, rcx;mov ecx, ": 8,
                "mov qword [arg_a0h], rax;mov qword [rsi], rax;movups xmm0, xmmword [];movups xmmword [rax], xmm0;movups xmm1, xmmword []": 8,
                "mov rdx, qword [rax + rbx*8];lea rcx, [var_28h];call fcn.13f123dc8;lea rdx, [];lea rcx, [var_28h]": 7,
                "test al, al;jne ;mov eax, ;cmp ebx, eax;cmova ebx, eax": 7,
                "jne ;lea rcx, [var_58h];call fcn.13f123df4;lea rdx, [];lea rcx, [var_58h]": 7,
                "call fcn.13f1264dc;or ecx, ;mov edx, eax;mov rax, qword [rdi];cmp dword [rax + 8], ecx": 7,
                "lea eax, [rdx + ];mov rax, qword [rdx];mov rdx, qword [rcx];movups xmm0, xmmword [rax];movups xmmword [rdx], xmm0": 1,
                "sub rsp, ;mov edx, 2;mov rbx, rcx;call fcn.13f137504;test eax, eax": 7,
                "call fcn.13f137504;test eax, eax;je ;add rsp, ;pop rbx": 7,
                "mov qword [r10 + ], rcx;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi;sub rsp, ": 1,
                "mov rcx, r8;call qword [rax];mov rcx, rbx;mov dword [rdi + ], eax;mov eax, dword [rbx + ]": 6,
                "mov dword [rdi + ], eax;mov rax, qword [rbx];call qword [rax + 8];mov rbx, qword [arg_30h];mov rsi, qword [arg_38h]": 6,
                "mov rbx, qword [arg_30h];mov rsi, qword [arg_38h];mov dword [rdi + ], eax;mov rax, rdi;add rsp, ": 5,
                "jne ;cmp qword [rcx + ], 0;setne dil;call fcn.13f137b8c;mov rcx, qword [rbx + ]": 6,
                "mov edx, dword [rbx + ];mov rcx, qword [rbx + ];test dil, dil;sete r9b;call fcn.13f138d5c": 6,
                "call qword [];lea rcx, [rbx + ];mov rdx, rax;call fcn.13f124468;mov rcx, qword [rbx + ]": 6,
                "mov rcx, qword [rbx + ];mov rdx, rbx;call fcn.13f138cf4;mov rcx, qword [rbx + ];mov rdx, rbx": 6,
                "mov rdx, rbx;call fcn.13f139768;mov rbx, qword [arg_30h];add rsp, ;pop rdi": 6,
                "jne ;call qword [];lea rcx, [var_30h];mov rdx, rax;mov rbx, rax": 7,
                "mov rdx, rax;mov rbx, rax;call fcn.13f123fa0;movzx ecx, word [rax + 8];mov word [rdi + ], cx": 6,
                "mov qword [rdi + ], rcx;mov rcx, qword [rdi + ];mov r8d, dword [rdi + ];mov rdx, qword [rcx + ];shl r8, 6": 6,
                "mov qword [var_28h], rdx;mov qword [var_20h], rcx;lea rcx, [var_20h];mov rdx, rbx;mov word [var_28h], ax": 6,
                "lea rcx, [var_20h];mov rdx, rbx;mov word [var_28h], ax;call fcn.13f124468;mov rcx, qword [rdi + ]": 6,
                "int3;mov qword [rsp + 8], rbx;push rdi;sub rsp, ;mov rdi, rdx": 5,
                "mov rbx, qword [rsp + ];add rsp, ;pop rdi;jmp ;lea rax, []": 5,
                "mov r10d, ;lea rax, [rcx + 8];xor r11d, r11d;dec r10d;mov qword [rax + 8], r11": 7,
                "mov rax, rsp;push rbx;sub rsp, ;movaps xmmword [rax - ], xmm6;movaps xmmword [rax - ], xmm7": 7,
                "movaps xmmword [rax - ], xmm6;movaps xmmword [rax - ], xmm7;movaps xmmword [rax - ], xmm8;xor r10d, r10d;movaps xmmword [rax - ], xmm9": 7,
                "movd xmm0, edx;mov eax, r8d;sub eax, edx;movd xmm3, eax;cvtdq2pd xmm0, xmm0": 7,
                "cmp dword [r9 + rcx + ], edx;je ;mov dword [r9 + rcx + ], r10d;mov qword [r9 + rcx], r10;mov qword [r9 + rcx + 8], r10": 7,
                "movsxd rbx, eax;shl rbx, 5;add rbx, rcx;cmp dword [rbx + ], r8d;je ": 6,
                "test eax, eax;jne ;movaps xmm8, xmm1;jmp ;movsd xmm8, qword [rbx]": 6,
                "call fcn.13f1382f4;push rbx;sub rsp, ;mov rax, qword [rcx + ];mov rbx, rcx": 1,
                "divsd xmm0, xmm6;addsd xmm7, xmm0;movaps xmm0, xmm7;call fcn.13f11af5c;movaps xmm1, xmm0": 5,
                "movaps xmm9, xmmword [var_20h];movaps xmm8, xmmword [var_30h];add rsp, ;pop rbx;ret": 5,
                "movaps xmmword [var_20h], xmm7;call fcn.13f1382f4;call fcn.13f11af5c;mov eax, dword [rbx + ];movaps xmm7, xmm0": 6,
                "movaps xmm6, xmmword [var_30h];movaps xmm0, xmm7;movaps xmm7, xmmword [var_20h];add rsp, ;pop rbx": 6,
                "mov dword [r8 + rcx + ], eax;mov qword [r8 + rcx + ], rax;mov qword [r8 + rcx], rax;mov qword [r8 + rcx + 8], rax;mov dword [r8 + rcx + ], eax": 7,
                "mov qword [rdx - ], r9;mov qword [rdx - ], r9;mov dword [rdx + 4], r9d;add rdx, ;dec r8": 8,
                "mov qword [rax + ], rsi;mov qword [rax + ], rdi;push r14;sub rsp, ;mov r9, qword [rcx + ]": 9,
                "sub rsp, ;mov r9, qword [rcx + ];mov edi, dword [rcx + ];mov ebx, edx;movaps xmmword [rax - ], xmm6": 9,
                "mov eax, dword [r9 + ];mov edx, dword [r9 + ];sub edx, r8d;mov rsi, rcx;mov ecx, dword [rcx + ]": 8,
                "mov eax, dword [r9 + ];cmp eax, r8d;cmovb r8d, eax;lea eax, [rcx + rdi];cmp eax, ebx": 8,
                "cmovb r8d, eax;lea eax, [rcx + rdi];cmp eax, ebx;cmovb ebx, eax;cmp edi, ecx": 8,
                "jmp ;add ebx, r14d;cmp edx, ebx;cmova ebx, edx;cmp r8d, ebx": 7,
                "movsxd rcx, eax;shl rcx, 5;cmp dword [rcx + rsi + ], edi;je ;push rbx": 1,
                "cmp dword [rcx + rsi + ], edi;je ;and dword [rcx + rsi + ], 0;and qword [rcx + rsi], 0;and qword [rcx + rsi + 8], 0": 5,
                "and qword [rcx + rsi], 0;and qword [rcx + rsi + 8], 0;and dword [rcx + rsi + ], 0;mov dword [rcx + rsi + ], edi;cmp dword [rcx + rsi + ], 0": 5,
                "mov edx, dword [rsi + ];mov r8d, edi;mov rcx, rsi;call fcn.13f137c90;mulsd xmm0, qword []": 5,
                "mov rsi, qword [arg_48h];mov rdi, qword [arg_50h];movaps xmm6, xmmword [var_20h];mov eax, ebx;mov rbx, qword [arg_40h]": 5,
                "jae ;mov eax, ebp;sub eax, edi;mov edi, ebp;add esi, eax": 6,
                "jae ;cmp esi, 1;jae ;test ecx, ecx;jne ": 6,
                "jne ;mov rax, qword [rbx + ];lea r9d, [rdx + 1];mov dword [rbx + ], edi;mov dword [rbx + ], r9d": 6,
                "mov dword [rbx + ], r9d;mov dword [rbx + ], esi;mov ecx, dword [rax + ];mov r8d, dword [rax + ];mov edx, dword [rax + ]": 6,
                "mov dword [rbx + ], esi;mov ecx, dword [rax + ];mov r8d, dword [rax + ];mov edx, dword [rax + ];sub edx, r8d": 6,
                "sub edx, r8d;cmp edx, ecx;cmova ecx, edx;lea eax, [r8 + rcx];cmp r9d, 3": 6,
                "cvtsi2sd xmm0, rax;divsd xmm1, xmm0;cmp edx, 1;ja ;mov dword [rbx + ], esi": 5,
                "mov dword [rbx + ], esi;jmp ;mov eax, esi;and eax, ;movsxd rdx, eax": 5,
                "mov dword [rdx + ], eax;addsd xmm0, qword [rdx];addsd xmm1, qword [rdx + 8];movsd qword [rdx], xmm0;movsd qword [rdx + 8], xmm1": 4,
                "mov rcx, rbx;call fcn.13f137f08;test al, al;je ;mov al, byte [rbx + ]": 3,
                "add edx, ecx;mov byte [rbx + ], al;mov rcx, rbx;call fcn.13f137f40;mov esi, eax": 2,
                "mov qword [rcx + 8], rbp;mov qword [rcx + ], r8;add rcx, ;call fcn.13f115540;mov qword [rsi + ], rbp": 3,
                "add rcx, ;call fcn.13f115540;mov qword [rsi + ], rbp;mov dword [rsi + ], ebp;mov qword [rsi + ], rbp": 3,
                "mov dword [rsi + ], eax;lea edx, [arg_2h];mov rcx, rdi;call fcn.13f137504;mov dword [rsi + ], eax": 3,
                "xor edx, edx;div ebx;cmp ecx, eax;jae ;mov dword [rsi + ], eax": 2,
                "lea r10d, [rax - 1];mov ecx, r10d;imul ecx, r8d;mov eax, dword [rsi + ];xor edx, edx": 2,
                "xor edx, edx;cmp ecx, eax;jb ;add eax, ;add eax, r9d": 2,
                "add eax, r8d;mov dword [rsi + ], eax;mov rcx, qword [rsi + ];mov rax, qword [rcx];call qword [rax]": 2,
                "mov rax, qword [rcx];call qword [rax];cmp byte [rsi + ], bpl;je ;mov ecx, ": 2,
                "mov edx, dword [rsi + ];mov rcx, rax;call fcn.13f137c1c;jmp ;mov rax, rbp": 2,
                "mov ecx, eax;mov dword [rsi + ], ecx;mov qword [rsi + ], rbp;mov eax, 4;mul rcx": 2,
                "test r9b, r9b;je ;mov r8d, r12d;mov rcx, rdi;call fcn.13f1398ec": 4,
                "jne ;lea rsi, [var_20h];jmp ;mov ecx, ebx;mov eax, 8": 4,
                "mov rdx, rbp;mov rcx, rdi;call qword [r9 + ];mov qword [r14], rax;lea r14, [r14 + 8]": 3,
                "jne ;mov r8d, ebx;mov rdx, rsi;mov rcx, rdi;call fcn.13f138834": 3,
                "lea rax, [var_20h];cmp rsi, rax;mov qword [arg_8h], rcx;push rbx;sub rsp, ": 1,
                "jne ;mov qword [rsi + ], rsi;mov qword [rsi + ], rsi;jmp ;mov rax, qword [rax + ]": 3,
                "mov qword [rsi + ], rsi;jmp ;mov rax, qword [rax + ];mov qword [rsi + ], rax;mov rax, qword [r9 + rdx*8 + ]": 3,
                "mov rdi, qword [r14];mov rax, qword [rdi];mov rcx, rdi;call qword [rax];lea r8, [rdi + ]": 5,
                "mov rcx, qword [rsi + ];mov eax, dword [rdi + ];lea r9, [rax + rax*8];mov r10, qword [rdx + rcx + ];mov rax, qword [r10 + r9*8 + ]": 5,
                "mov rax, qword [r10 + r9*8 + ];test rax, rax;jne ;mov qword [r8 + ], r8;mov qword [r8 + ], r8": 5,
                "mov rax, qword [rax + ];mov qword [r8 + ], rax;mov rax, qword [r10 + r9*8 + ];mov qword [r8 + ], rax;mov rax, qword [r10 + r9*8 + ]": 5,
                "mov ecx, r10d;xor edx, edx;imul ecx, r11d;cmp ecx, eax;jb ": 6,
                "div r10d;mov ecx, eax;mov rax, rsp;mov qword [rax + 8], rbx;mov qword [rax + ], rbp": 1,
                "cmovb r9d, edx;mov eax, r9d;mov rax, rsp;push rdi;sub rsp, ": 1,
                "sub rsp, ;mov rbx, rdx;mov rdi, rcx;test rdx, rdx;je ": 11,
                "push r14;push r15;sub rsp, ;xor r14d, r14d;mov rbp, rcx": 5,
                "jne ;inc r15d;cmp r15d, dword [rsi + 8];jb ;inc r14d": 4,
                "jb ;mov rcx, qword [rbp + ];mov rbx, qword [arg_40h];mov rbp, qword [arg_48h];mov rsi, qword [arg_50h]": 4,
                "lea rdi, [rbx + ];cmp qword [rdi + ], r14;je ;lea rax, [];mov qword [rsp + ], rax": 3,
                "call sub.KERNEL32.dll_LeaveCriticalSection;mov rax, rbp;mov rbx, qword [rsp + ];mov rbp, qword [rsp + ];add rsp, ": 3,
                "mov qword [rsp + ], ;mov qword [rsp + ], rbx;mov qword [rsp + ], rsi;mov ebx, r8d;mov rdi, rdx": 2,
                "mov r9d, ebx;mov r8, rdi;mov rdx, rsi;call fcn.13f1453c0;mov rbx, qword [rsp + ]": 2,
                "add dword [rsi + rdi*8 + ], r15d;jne ;mov rdx, qword [rcx + ];add dword [rcx + ], r15d;add rdx, r14": 3,
                "sub rsp, ;mov rbx, rcx;call fcn.13f1385d8;mov rcx, rbx;call fcn.13f10e55c": 3,
                "lea rsi, [rax + rax*8];add rdx, qword [rbp + ];mov r14, qword [rdx + ];mov eax, dword [r14 + rsi*8 + ];add eax, dword [r14 + rsi*8 + ]": 4,
                "call qword [rax];mov rcx, qword [rbp + ];mov rdx, qword [rcx + ];lea rcx, [rbx + rbx*2];mov r8d, eax": 3,
                "jmp ;mov rax, qword [rax + ];mov qword [r14 + rsi*8 + ], rax;lea rcx, [rbp + ];call sub.KERNEL32.dll_LeaveCriticalSection": 3,
                "jmp qword [rax + ];int3;int3;int3;push rbx": 6,
                "mov rax, qword [rcx + ];xor ebx, ebx;mov ecx, dword [rax + ];call sub.KERNEL32.dll_TlsGetValue;test rax, rax": 4,
                "mov qword [arg_48h], rbx;mov qword [arg_50h], rsi;mov rdi, rdx;mov rsi, rcx;cmp qword [rdx + ], rcx": 4,
                "xor ebx, ebx;test rax, rax;je ;mov r8, rdi;mov rdx, rsi": 4,
                "mov rcx, rbx;call fcn.13f1379d4;jmp ;mov rbx, rdx;mov rax, rbx": 3,
                "mov qword [arg_8h], rbx;mov byte [var_20h], r9b;mov dword [arg_10h], edx;push rbp;push rsi": 4,
                "sub rsp, ;xor ebx, ebx;mov r13b, r9b;mov r14d, edx;mov rdi, rcx": 4,
                "cmp r8d, eax;cmova eax, r8d;add ecx, r14d;lea edx, [r10 + rax];cmp ecx, edx": 4,
                "test r12d, r12d;je ;mov byte [var_21h], bl;or ecx, ;mov r15, rbx": 3,
                "imul ebp, esi;jmp ;mov ecx, dword [rdi + ];mov ebp, esi;lea eax, [rcx - 1]": 3,
                "jne ;cmp ecx, dword [rdi + ];jae ;mov esi, ecx;shl rsi, 6": 3,
                "add rsi, qword [rdi + ];cmp dword [rsi + ], ebx;ja ;cmp dword [rsi + ], ebx;jbe ": 3,
                "jne ;cmp r13d, dword [rsi + 8];jae ;mov r8, qword [rsi + ];mov eax, r13d": 3,
                "cmp byte [var_21h], bl;je ;mov eax, dword [r8 + rdx*8 + ];add eax, dword [r8 + rdx*8 + ];mov edx, dword [var_38h]": 2,
                "mov dword [var_38h], eax;mov r15, rsi;mov r9d, r13d;mov dword [var_24h], r13d;jmp ": 2,
                "jmp ;mov ebp, dword [var_30h];test ebp, ebp;je ;mov rdx, qword [var_48h]": 1,
                "add rcx, r13;mov dword [rax + rcx*8], 4;inc dword [r15 + ];inc dword [rdi + ];jmp ": 1,
                "mov bpl, r9b;lea rdi, [rax + rax*8];mov rax, qword [rcx + ];shl r14, 6;mov rsi, qword [rax + r14 + ]": 2,
                "mov rcx, qword [rax + r14 + ];cmp dword [rcx + rdi*8 + ], 0;jne ;inc dword [rbx + ];test bpl, bpl": 2,
                "mov rax, qword [rdi];call qword [rax + ];mov rbx, qword [rbx + ];mov rax, qword [rbx + ];add rbx, ": 3,
                "call qword [rax + ];mov rbx, qword [rbx + ];mov rax, qword [rbx + ];add rbx, ;test rax, rax": 3,
                "mov rax, qword [rdi];mov rcx, rdi;call qword [rax + ];test rbx, rbx;je ": 3,
                "jne ;inc dword [rcx + ];mov eax, dword [r14 + rsi*8 + ];sub dword [rcx + ], eax;and dword [r14 + rsi*8 + ], 0": 4,
                "jne ;xor eax, eax;jmp ;mov rax, qword [rax + ];mov qword [rcx + ], rax": 5,
                "mov r14, rcx;lea rbx, [rcx + ];mov qword [var_20h], rbx;mov rcx, rbx;call sub.KERNEL32.dll_EnterCriticalSection": 6,
                "call sub.KERNEL32.dll_EnterCriticalSection;xor esi, esi;lea eax, [rsi + 8];cmp dword [rbp + ], eax;jle ": 5,
                "je ;mov rcx, qword [rax + ];jmp ;xor ecx, ecx;mov rdx, qword [rax + ]": 5,
                "mov qword [arg_8h], rbx;push rbp;lea rbp, [rsp - ];sub rsp, ;lea rbx, []": 5,
                "lea rcx, [var_40h];call fcn.13f112d38;int3;call qword [];lea rcx, [rbp + ]": 2,
                "movzx edx, ax;or edx, ;mov qword [arg_8h], rbx;push rbp;lea rbp, [rsp - ]": 1,
                "lea rcx, [var_20h];call fcn.13f112d38;int3;call qword [];lea rcx, [var_40h]": 1,
                "sub rsp, ;mov rcx, qword [];call fcn.13f123890;add rsp, ;jmp rax": 3,
                "add rcx, ;call fcn.13f115540;call fcn.13f117588;mov dword [rbx + ], eax;mov rax, rbx": 4,
                "call fcn.13f117588;mov dword [rbx + ], eax;mov rax, rbx;add rsp, ;pop rbx": 4,
                "test rcx, rcx;je ;mov rax, qword [rcx];call qword [rax + ];mov ecx, dword [rbx + ]": 5,
                "call fcn.13f146240;test bl, 1;je ;mov rcx, rdi;call fcn.13f10e55c": 8,
                "sub rsp, ;cmp dword [], 0;mov rdi, rcx;jne ;call fcn.13f1264dc": 6,
                "mov qword [rbx], rax;mov dword [rbx + ], 1;mov byte [rbx + ], 0;jmp ;xor ebx, ebx": 6,
                "int3;int3;mov eax, dword [rcx + 8];ret;push rdi": 6,
                "mov eax, dword [rcx + 8];ret;push rdi;sub rsp, ;mov qword [var_20h], ": 6,
                "int3;int3;sub rsp, ;mov rax, rdx;cmp dword [rdx + ], r8d": 6,
                "xor ecx, ecx;lea rax, [];cmp edx, dword [rax];je ;lea r8, []": 10,
                "mov rcx, rsi;call qword [];xor ebx, ebx;test rbx, rbx;je ": 6,
                "je ;mov rax, qword [rdi];mov rdx, rbx;mov rcx, rdi;call qword [rax + ]": 8,
                "ret;int3;int3;mov qword [rsp + 8], rbx;sub rsp, ": 1,
                "lea rcx, [rax - ];neg rax;sbb rdx, rdx;and rdx, rcx;je ": 2,
                "inc eax;ret;int3;int3;int3": 2,
                "push r15;sub rsp, ;xor ebx, ebx;mov r15d, r8d;mov r14d, edx": 2,
                "jne ;inc esi;add rbp, 4;cmp esi, 4;jl ": 2,
                "mov edx, r14d;mov rcx, rdi;call qword [rax + ];mov rbx, rax;test rax, rax": 2,
                "sbb rdx, rdx;and rdx, r8;je ;mov rax, qword [r14];mov rbx, qword [rdx + ]": 2,
                "add rdi, ;dec rsi;jne ;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h]": 2,
                "mov rbx, rcx;mov byte [rcx + ], 1;call fcn.13f13a664;mov rax, qword [rbx];mov rcx, rbx": 1,
                "mov rax, rsp;mov qword [rax + ], rbx;mov qword [rax + ], rsi;mov qword [rax + ], rdx;mov qword [rax + 8], rcx": 2,
                "call r15;add rdi, rsi;mov qword [arg_50h], rdi;inc ebx;mov dword [var_24h], ebx": 2,
                "cmp eax, ;jne ;lea rcx, [];call qword [];mov rbx, rax": 3,
                "lea rcx, [];call qword [];mov rbx, rax;test rax, rax;je ": 3,
                "add rsp, ;pop rbx;jmp qword [];xor ecx, ecx;call qword []": 3,
                "pop rbx;jmp qword [];xor ecx, ecx;call qword [];mov rdx, qword []": 3,
                "mov rdx, qword [];mov rcx, qword [];call fcn.13f13a984;movzx ebx, al;test al, al": 3,
                "test eax, eax;jne ;or eax, ;mov dword [], eax;mov byte [], bl": 3,
                "or eax, ;mov dword [], eax;mov byte [], bl;xor eax, eax;add rsp, ": 3,
                "xor edx, edx;call rax;jmp ;mov eax, ;mov rbx, qword [arg_50h]": 6,
                "cmp rbx, rax;je ;mov rcx, rbx;call fcn.13f123890;mov rdx, rdi": 6,
                "mov rcx, rdi;call rax;jmp ;mov eax, ;mov rbx, qword [arg_30h]": 6,
                "lea r8, [];lea rdx, [];mov rcx, rax;call fcn.13f13aa14;mov dword [], 0": 7,
                "mov rdx, qword [];mov byte [], 0;mov dword [], 0;call fcn.13f13aae4;mov rcx, qword []": 8,
                "mov rcx, qword [];call fcn.13f10e55c;and qword [], 0;add rsp, ;ret": 8,
                "sub rsp, ;mov rbx, rdx;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi": 1,
                "lea rcx, [rdi - ];mov rdi, qword [rdi];test rcx, rcx;je ;sub rsp, ": 1,
                "mov r10d, ecx;sub rsp, ;mov rcx, qword [];test rcx, rcx;je ": 1,
                "xchg dword [r11 + ], r10d;test r10d, r10d;setne al;jmp ;mov eax, r10d": 6,
                "test r8d, eax;jne ;xor al, al;mov rbx, qword [arg_8h];ret": 6,
                "xor al, al;mov rbx, qword [arg_8h];ret;mov al, 1;test al, al": 6,
                "ret;mov al, 1;test al, al;je ;test r9b, r9b": 6,
                "jmp ;int3;mov rcx, qword [rcx + ];mov rax, qword [rcx];jmp qword [rax + ]": 6,
                "int3;push rbx;sub rsp, ;mov r9, rdx;mov edx, dword [rcx]": 6,
                "mov r9, rdx;mov edx, dword [rcx];xor al, al;mov rbx, rcx;test edx, edx": 7,
                "call fcn.13f12ae54;mov qword [rbx + ], rax;mov rax, qword [rbx + ];add rsp, ;pop rbx": 7,
                "mov qword [rcx + ], rbp;mov qword [rcx + ], rbp;lea r14d, [rbp + 1];mov dword [rcx + ], r14d;mov dword [rcx + ], r14d": 8,
                "lea r14d, [rbp + 1];mov dword [rcx + ], r14d;mov dword [rcx + ], r14d;mov rax, qword [rdx + 8];mov qword [rcx + ], rax": 8,
                "call fcn.13f1264dc;mov rcx, rbx;mov edx, eax;call fcn.13f12af30;mov eax, dword [rbx]": 8,
                "je ;mov ecx, ebp;mov edx, eax;mov rax, qword [rbx + 8];mov dword [rcx + rax], ebp": 7,
                "and ecx, eax;xor dword [rdi + ], ecx;mov ecx, dword [rdi + ];xor ecx, dword [rdx];and ecx, eax": 7,
                "xor dword [rdi + ], ecx;mov ecx, dword [rdi + ];xor ecx, dword [rdx];and ecx, eax;xor ecx, dword [rdx]": 7,
                "call fcn.13f13b390;mov rax, qword [rsi + ];shl ebx, 4;mov rcx, qword [rax + rbx*8];cmp rcx, r14": 6,
                "mov r8d, dword [];test r8b, 4;je ;mov r9d, ebx;mov r8d, eax": 6,
                "mov rbp, rcx;mov ebx, edx;or esi, ;lock xadd dword [rax + rbx*4], esi;dec esi": 6,
                "jne ;mov r14, qword [rcx + 8];shr rbx, 5;mov rax, rsp;mov qword [rax + 8], rbx": 1,
                "mov r14, qword [rcx + 8];shr rbx, 5;and edx, ;mov eax, dword [r14 + rbx*4];lea edi, [rsi + 1]": 5,
                "mov rbp, qword [arg_58h];mov rdi, qword [arg_68h];mov eax, esi;mov rsi, qword [arg_60h];add rsp, ": 8,
                "mov rax, qword [rcx + ];mov edi, 1;mov rbp, rcx;mov esi, edi;mov ebx, edx": 5,
                "add esi, edi;cmp esi, edi;jne ;mov r14, qword [rcx + 8];shr rbx, 5": 5,
                "shl edi, cl;test edi, eax;je ;and dword [var_28h], 0;lea rax, []": 5,
                "lea eax, [rdi - 4];test eax, ;jne ;mov rax, qword [rbx + ];mov rcx, qword [rax]": 3,
                "test eax, ;jne ;mov rax, qword [rbx + ];mov rcx, qword [rax];lock inc dword [rcx + ]": 3,
                "jne ;mov rax, qword [rbx + ];mov rcx, qword [rax];lock inc dword [rcx + ];mov rax, qword [rbx + ]": 3,
                "jmp qword [rax + ];mov rcx, qword [var_28h];xor r9d, r9d;xor r8d, r8d;mov byte [rbx + ], 1": 4,
                "sub rsp, ;mov rax, qword [rcx + ];mov rbx, rcx;mov rdx, qword [rax];mov rcx, qword [rdx + ]": 4,
                "mov rcx, qword [rdx + ];mov rdx, qword [rbx + ];mov rax, qword [rcx];call qword [rax + ];mov rcx, qword [rbx + ]": 4,
                "and rdx, r10;xchg qword [rax + rdx*8], r9;test r9, r9;jne ;lea eax, [r8 + 1]": 5,
                "jmp ;mov rax, r9;add rsp, ;ret;int3": 5,
                "mov r8, qword [rax + rcx*8];mov rdx, qword [r8];mov qword [rsp + ], rsi;mov r11, rsp;mov qword [r11 + 8], rbx": 1,
                "add rcx, ;call fcn.13f13b2f8;mov rax, qword [rdi + ];lock dec dword [rax + ];cmp byte [rdi + ], 0": 3,
                "mov dword [rdi + ], eax;lock xadd dword [rdx + ], ecx;mov eax, dword [rdi + ];mov ecx, eax;sub ecx, dword [rdi + ]": 3,
                "lea rsi, [rdi + ];jmp ;lea rcx, [rbx + ];call fcn.13f135694;mov edx, dword [rsp + ]": 2,
                "mov edx, dword [rsp + ];lea r8, [rsp + ];mov ecx, dword [rax + ];mov r9, rax;xor ecx, edx": 2,
                "mov r9, rax;xor ecx, edx;and ecx, ;xor edx, ecx;mov ecx, dword [rax + ]": 2,
                "sub ecx, eax;test ecx, ecx;jle ;mov rcx, rsi;call fcn.13f13b550": 1,
                "mov rcx, rsi;call fcn.13f13b550;mov rbx, rax;jmp ;xor ebx, ebx": 1,
                "je ;cmp qword [rdi + ], 0;jne ;xor r9d, r9d;xor r8d, r8d": 1,
                "xor r8d, r8d;xor edx, edx;mov rcx, rsi;call fcn.13f13f488;mov rdi, rax": 1,
                "mov rcx, qword [rbx + ];call fcn.13f10efc8;mov rcx, rbx;call fcn.13f10e55c;add rsp, ": 1,
                "add rcx, ;and dword [rcx], 0;and qword [rcx + 8], 0;call fcn.13f129e60;mov ecx, ": 4,
                "call fcn.13f129e60;mov ecx, ;mov dword [rsi + ], ecx;and dword [rsi + ], 0;mov eax, 8": 4,
                "mov rbx, qword [rbx];test rcx, rcx;je ;mov r8, qword [rcx];mov rax, rsp": 1,
                "sub rsp, ;mov qword [var_20h], ;mov qword [arg_48h], rbx;mov rdi, rcx;add rcx, ": 5,
                "jmp fcn.13f10efc8;int3;mov qword [arg_10h], rbx;mov qword [arg_18h], rbp;push rsi": 5,
                "jmp ;mov rcx, qword [rdi];mov r8, r14;mov rdx, rdi;mov rax, qword [rcx]": 4,
                "mov rdx, rdi;mov rax, qword [rcx];call qword [rax + ];mov rbx, rax;test r15b, r15b": 4,
                "call qword [rax + ];mov rbx, rax;test r15b, r15b;je ;lea rcx, [rsi - ]": 4,
                "test r8d, r8d;jle ;mov rdx, rbx;mov rcx, rbp;call fcn.13f13bdbc": 3,
                "mov rcx, rbx;lea edx, [r8 + 1];call fcn.13f13b42c;mov rbp, qword [arg_48h];mov rsi, qword [arg_50h]": 3,
                "jmp ;xor r10d, r10d;mov rsi, qword [rbx];xor eax, eax;xor edi, edi": 4,
                "xor edi, edi;mov r11, qword [rsi];mov r8d, dword [r11 + ];add r8d, ;shr r8d, 5": 4,
                "je ;lea r9d, [rax + 1];test eax, eax;jne ;mov rax, qword [rsi + ]": 4,
                "mov rax, qword [rsi + ];mov rcx, qword [r11 + ];mov eax, dword [rax + rdi*4];and eax, dword [rcx + rdi*4];add edi, r9d": 4,
                "bt eax, ecx;jae ;xor r9d, r9d;mov rbx, qword [arg_30h];mov rsi, qword [arg_38h]": 3,
                "jge ;movsxd r11, dword [r8 + ];mov rax, qword [r8 + ];cmp edx, r11d;jl ": 3,
                "mov rax, qword [r10];mov rax, qword [rax + rcx*8];test rax, rax;je ;cmp qword [rax + ], rdi": 3,
                "mov rdi, qword [arg_10h];ret;mov eax, dword [rdx];mov r9, rdx;mov r8, rcx": 3,
                "ret;mov eax, dword [rdx];mov r9, rdx;mov r8, rcx;and eax, ": 3,
                "mov edx, r10d;sar edx, cl;cmp edx, dword [r8 + ];jge ;mov rax, qword [r8 + ]": 4,
                "movsxd rax, r10d;and rcx, rax;mov rax, qword [r11];mov rdx, qword [rax + rcx*8];test rdx, rdx": 4,
                "cmp eax, 3;jne ;mov rdx, r8;call fcn.13f13c1b0;test rax, rax": 4,
                "mov edx, 2;mov rcx, rdi;mov r9d, eax;mov qword [var_20h], rbx;call fcn.13f146380": 5,
                "jge ;movsxd rdi, dword [rbx];movsxd rcx, dword [rbx + 8];mov rax, qword [rbx + ];and rcx, rdi": 5,
                "add rcx, qword [rbx + ];call fcn.13f13c070;test al, al;jne ;movsxd rcx, dword [rbx + 8]": 5,
                "jmp ;test r8, r8;je ;lea ecx, [rdi + 1];mov dword [rbx], ecx": 4,
                "ret;push rbx;mov qword [arg_8h], rbx;mov qword [arg_10h], rbp;mov qword [arg_18h], rsi": 1,
                "mov qword [arg_10h], rbp;mov qword [arg_18h], rsi;push rdi;sub rsp, ;lea rbx, [rdx + 8]": 5,
                "test rax, rax;jne ;lea rax, [];movsxd rbx, dword [rax + rdi*4];mov rcx, rbx": 5,
                "jge ;mov rax, qword [rcx + 8];mov qword [arg_8h], rbx;push rdi;sub rsp, ": 1,
                "push rdi;sub rsp, ;lea rbx, [rdx - 8];mov rdi, rcx;mov rcx, qword [rbx]": 6,
                "cmp rdx, ;jbe ;or eax, ;ret;shr rdx, 4": 7,
                "add edx, eax;not eax;and edx, eax;sar edx, cl;shl ecx, 4": 7,
                "jmp fcn.13f0d3420;sub rcx, ;jmp ;int3;int3": 7,
                "mov qword [rax + ], rsi;mov qword [rax + ], rdi;mov qword [rax + ], r13;push rbp;push r14": 6,
                "mov qword [rax + ], r13;push rbp;push r14;push r15;lea rbp, [rax - ]": 6,
                "mov rcx, rsi;call fcn.13f13569c;cmp qword [rdi + ], rax;jne ;lea rdx, [rcx + ]": 1,
                "mov rcx, rsi;call fcn.13f13569c;cmp qword [rdi + ], rax;jne ;mov rcx, rsi": 4,
                "cmp qword [rdi + ], rax;jne ;mov rcx, rsi;call fcn.13f0d3420;mov rax, qword [rdi + ]": 4,
                "mov rax, qword [rdi + ];mov rcx, qword [rax + ];test byte [rcx + ], 2;jne ;mov rax, qword [rsi + ]": 4,
                "movzx ecx, word [rax + ];cmp edx, ecx;jge ;mov r13, qword [rdi + ];mov rcx, rsi": 3,
                "call fcn.13f13d328;mov rax, qword [rdi + ];mov ecx, dword [rax + ];test ecx, ecx;jle ": 3,
                "mov qword [rbp + ], r9;xor ecx, eax;mov qword [rbp + ], rdx;mov qword [rbp - ], r9;xor r10d, ecx": 2,
                "mov qword [rbp - ], r9;xor r10d, ecx;mov ecx, dword [rbp - ];mov qword [rbp - ], rdx;mov eax, ecx": 2,
                "mov rbx, qword [r13 + ];mov rcx, rsi;call fcn.13f135664;cmp rax, rbx;je ": 1,
                "call fcn.13f135664;cmp rax, rbx;je ;mov dword [rdi + ], 0;mov rcx, rsi": 1,
                "mov rcx, rsi;call fcn.13f0d3420;jmp ;mov rcx, rsi;call fcn.13f0d3420": 1,
                "call fcn.13f0d3420;mov ecx, dword [rbp + 7];mov eax, dword [r14];lea r8, [rbp + 7];xor eax, ecx": 1,
                "mov qword [rbp + ], rax;mov eax, dword [r14 + 4];mov dword [rbp + ], eax;mov rax, qword [r14 + ];mov qword [rbp + ], rax": 1,
                "sbb rsi, rsi;and rsi, rcx;mov qword [r11 + 8], rsi;mov rcx, rsi;call fcn.13f0d3420": 1,
                "push rdi;push rbx;sub rsp, ;mov rbx, rcx;add rcx, ": 1,
                "mov rcx, rbx;add rsp, ;pop rbx;jmp fcn.13f13d98c;push rbx": 1,
                "add rcx, ;call fcn.13f0d3420;mov rcx, rbx;call fcn.13f13cde4;mov rcx, qword [rbx + ]": 2,
                "mov rcx, qword [rbx + ];add rsp, ;pop rbx;jmp fcn.13f129f78;mov rax, rsp": 2,
                "add rsp, ;pop rbx;jmp fcn.13f129f78;mov rax, rsp;push rbp": 2,
                "test al, al;je ;mov rcx, rbx;call fcn.13f13d4d4;mov dil, al": 2,
                "je ;mov rcx, rbx;call fcn.13f13d4d4;mov dil, al;test al, al": 2,
                "je ;mov rcx, rsi;call fcn.13f0d3420;mov rcx, qword [rbx + ];call fcn.13f129c08": 2,
                "mov rcx, rsi;call fcn.13f0d3420;mov rcx, qword [rbx + ];call fcn.13f129c08;mov rcx, rsi": 2,
                "mov rcx, rbx;call fcn.13f13d4d4;mov dil, al;jmp ;call fcn.13f13d4d4": 2,
                "mov rcx, rsi;call fcn.13f0d3420;lea rcx, [rbp - ];call fcn.13f123e68;lea rdx, []": 2,
                "mov rdi, rcx;je ;lea rsi, [rcx + ];mov rcx, rsi;call fcn.13f0d3420": 4,
                "call fcn.13f0d3420;cmp byte [rdi + ], 0;je ;mov rax, qword [rdi + ];mov rcx, rax": 4,
                "mov rcx, qword [rdi + ];and qword [rdi + ], 0;mov rdx, rbx;call fcn.13f12c1b0;mov rcx, rsi": 4,
                "call fcn.13f0d3420;mov rcx, rsi;call fcn.13f135990;mov al, 1;jmp ": 4,
                "mov rsi, rcx;lea rdx, [var_20h];lea rcx, [rax + ];xor r9d, r9d;mov dword [var_20h_2], ": 5,
                "mov rcx, qword [rsi + ];mov dl, 1;call fcn.13f12aa98;lea rcx, [rsi + ];mov rdi, rax": 5,
                "lea rcx, [rsi + ];mov rdi, rax;call fcn.13f0d3420;test rdi, rdi;je ": 5,
                "jmp ;mov rax, qword [rsi + ];mov r8, qword [rsi + ];lea rdx, [var_20h];lea rcx, [rax + ]": 7,
                "call fcn.13f12c168;jmp ;mov byte [r14], 1;jmp ;mov rax, qword [rsi + ]": 3,
                "mov dword [var_20h_2], 1;call qword [rax + ];test al, al;je ;lea rcx, [var_20h]": 3,
                "mov rdi, rcx;call fcn.13f0d3420;mov rcx, qword [rdi + ];call fcn.13f13b084;mov rdx, rbx": 3,
                "ret;sub rcx, ;jmp method.Concurrency::details::CacheLocalScheduleGroup.virtual_8;int3;int3": 4,
                "mov rax, qword [rcx + ];ret;mov rcx, qword [rcx + ];mov rax, qword [rcx];jmp qword [rax + ]": 4,
                "call fcn.13f0d3420;mov rax, qword [rbx + ];test rax, rax;je ;mov rax, qword [rbx + ]": 4,
                "jmp ;xor r14d, r14d;mov rbx, qword [rdi + ];mov r12, qword [rdi + ];mov rcx, rbx": 4,
                "mov r8, r14;mov rax, qword [rdi + ];movsxd rcx, dword [rdi + 8];movsxd rdx, r10d;and rcx, rdx": 3,
                "mov eax, dword [rcx + 8];lea r8, [r8 + ];mov dword [r8 - 8], eax;cmp r9, rsi;jl ": 3,
                "test r8, r8;je ;movsxd rdx, eax;and rdx, rsi;shl rdx, 4": 2,
                "pop rbp;jmp fcn.13f10efc8;int3;int3;mov edx, dword [rcx + ]": 2,
                "mov rcx, rbx;mov byte [rsp + ], 0;mov byte [rsp + ], 0;call fcn.13f13d0ec;cmp byte [rsp + ], 0": 4,
                "mov rax, qword [r14];lea edx, [rbp + 2];mov rcx, r14;call qword [rax + ];jmp ": 3,
                "pop rbx;ret;lea rcx, [rsp + ];call fcn.13f123da4;lea rdx, []": 2,
                "je ;mov rcx, qword [rcx + ];and dword [var_20h], 0;lea rdx, [var_20h];mov r9b, 1": 4,
                "test al, al;jne ;jmp ;mov rax, qword [rbx];mov rcx, rbx": 4,
                "mov byte [rbx + ], 0;add rsp, ;pop rbx;ret;mov qword [arg_8h], rbx": 4,
                "je ;mov rdx, qword [rsp + ];lea rcx, [rbx - ];mov r8d, 2;call fcn.13f13dbb0": 5,
                "mov qword [rbx + ], rsi;mov rbx, qword [arg_58h];mov rbp, qword [arg_60h];mov rsi, qword [arg_68h];add rsp, ": 6,
                "mov qword [arg_18h], rsi;mov qword [var_20h], rdi;push r14;sub rsp, ;mov r14, qword [rcx + ]": 7,
                "mov rcx, qword [rbx + ];mov rdx, rbx;call fcn.13f13f9e4;mov rcx, qword [rbx + ];lea rdx, [arg_58h]": 6,
                "mov rcx, qword [rbx + ];xor edx, edx;mov qword [arg_8h], rbx;push rdi;sub rsp, ": 1,
                "xchg dword [rbx + ], eax;lea eax, [rdi - 2];cmp eax, 1;ja ;mov rcx, qword [rbx + ]": 5,
                "mov rcx, qword [rbx + ];mov edx, dword [var_20h];mov r8d, ;mov eax, dword [rcx + ];xor eax, edx": 9,
                "mov r8d, ;mov eax, dword [rcx + ];xor eax, edx;and eax, r8d;xor edx, eax": 8,
                "and eax, r8d;lea r8, [var_20h];xor eax, dword [rcx + ];mov dword [var_20h], eax;mov rax, qword [rcx + ]": 8,
                "test edi, edi;je ;mov r8, qword [r14];mov edx, 1;mov rcx, r14": 4,
                "mov r8d, ;mov eax, dword [rcx + ];xor eax, edx;and eax, r8d;mov r11, rsp": 1,
                "mov r15, qword [rbx + ];mov qword [arg_70h], rax;mov rbp, r13;test r13, r13;jne ": 3,
                "mov rax, qword [r15];mov r8d, edi;mov rdx, rbp;mov rcx, r15;call qword [rax + 8]": 3,
                "call fcn.13f0d3420;lea r11, [var_40h];mov rbx, qword [r11 + ];mov rbp, qword [r11 + ];mov rsi, qword [r11 + ]": 2,
                "mov rcx, qword [rdi + ];mov ebp, dword [rdi + ];dec ebx;mov rax, qword [rcx];call qword [rax + 8]": 2,
                "cmp dl, cl;jb ;mov edx, dword [];test dl, 2;je ": 5,
                "xor edx, eax;mov dword [rsp + ], edx;mov eax, dword [r8 + ];xor eax, edx;lea rdx, [rsp + ]": 1,
                "mov rax, qword [rsi];call qword [rax + ];lea r11, [rsp + ];mov rbx, qword [r11 + ];mov rbp, qword [r11 + ]": 1,
                "mov qword [arg_18h], rdi;push r14;sub rsp, ;inc dword [rcx + ];xor r14d, r14d": 2,
                "sub rsp, ;inc dword [rcx + ];xor r14d, r14d;cmp dword [rcx + ], 1;mov rdi, rcx": 2,
                "call fcn.13f12d43c;jmp ;mov rax, qword [rdi];mov qword [arg_8h], rbx;mov qword [arg_10h], rsi": 1,
                "mov rcx, qword [rdi + ];mov rdx, rdi;call fcn.13f13af70;test al, al;je ": 1,
                "mov edx, dword [rax + ];add rcx, ;call fcn.13f13b2f8;mov dword [rdi + ], r14d;mov rbx, qword [arg_30h]": 1,
                "and dword [rbx + ], 0;mov al, 1;jmp ;xor al, al;add rsp, ": 2,
                "push rbp;mov rbp, rsp;sub rsp, ;mov rbx, rcx;xor sil, sil": 2,
                "mov r8b, 1;call fcn.13f12c168;mov rdi, qword [rbp - ];test rdi, rdi;je ": 2,
                "lea rcx, [rax + ];xor r9d, r9d;mov dword [rsp + ], 1;call qword [rax + ];test al, al": 2,
                "test al, al;je ;lea rcx, [rbp - ];call fcn.13f1464f8;mov rdi, rax": 2,
                "mov qword [rax + ], rbx;mov qword [rax + ], rsi;mov ebx, r8d;mov rdi, rdx;mov rsi, rcx": 3,
                "mov ebx, r8d;mov rdi, rdx;mov rsi, rcx;mov qword [rcx], rdx;and qword [rcx + 8], 0": 3,
                "mov qword [rcx], rdx;and qword [rcx + 8], 0;and qword [rcx + ], 0;add rcx, ;mov r9d, ": 3,
                "and qword [rcx + 8], 0;and qword [rcx + ], 0;add rcx, ;mov r9d, ;mov r8d, ": 3,
                "call fcn.13f13f034;mov qword [rsi + ], rax;mov rax, rsi;mov rbx, qword [arg_58h];mov rsi, qword [arg_60h]": 2,
                "add rsp, ;pop r14;jmp fcn.13f10efc8;mov qword [var_8h], rcx;push rbx": 1,
                "int3;int3;mov eax, 1;xchg dword [rcx + ], eax;ret": 2,
                "mov qword [var_18h], rbp;push rsi;push rdi;push r14;sub rsp, ": 3,
                "mov r8d, dword [rdx + ];mov r9b, 1;jne ;add rcx, ;jmp ": 2,
                "mov qword [arg_68h], rax;test rax, rax;je ;mov dword [var_20h], edi;mov r9d, r14d": 3,
                "pop rsi;ret;mov qword [arg_8h], rcx;push rbx;sub rsp, ": 3,
                "mov rbx, rcx;lea rax, [];mov qword [rcx], rax;mov qword [rcx + 8], rdx;xor eax, eax": 4,
                "lea rax, [];mov qword [rcx], rax;mov qword [rcx + 8], rdx;xor eax, eax;mov dword [rcx + ], eax": 4,
                "mov qword [rcx + 8], rdx;xor eax, eax;mov dword [rcx + ], eax;mov qword [rcx + ], rax;mov qword [rcx + ], rax": 4,
                "mov dword [rcx + ], eax;mov qword [rcx + ], rax;mov qword [rcx + ], rax;mov dword [rcx + ], 1;mov eax, dword [r8]": 4,
                "xor eax, dword [r8];mov dword [rbx + ], eax;mov rax, qword [r8 + 8];mov qword [rbx + ], rax;mov eax, dword [r8 + 4]": 4,
                "mov rax, rbx;add rsp, ;pop rbx;ret;mov r11, rsp": 4,
                "mov qword [rcx], rax;lea r8, [rcx + ];and dword [r8], 0;and qword [r8 + 8], 0;and qword [r8 + ], 0": 4,
                "and dword [r8], 0;and qword [r8 + 8], 0;and qword [r8 + ], 0;and dword [rcx + ], 0;and qword [rcx + ], 0": 4,
                "and qword [rcx + ], 0;lea rax, [rcx + ];and qword [rax], 0;mov qword [rax + 8], rax;mov dword [rax + ], 0": 4,
                "and qword [rax], 0;mov qword [rax + 8], rax;mov dword [rax + ], 0;lea rdx, [r11 - ];mov rcx, qword [rsi + 8]": 4,
                "mov dword [rax + ], 0;lea rdx, [r11 - ];mov rcx, qword [rsi + 8];call fcn.13f12a818;mov rax, rsp": 1,
                "push rdi;sub rsp, ;mov qword [var_20h], ;mov qword [arg_48h], rbx;mov ebx, r9d": 4,
                "mov qword [rcx], rdx;add rcx, 8;and dword [rcx], 0;and qword [rcx + 8], 0;mov rdx, r8": 4,
                "mov eax, dword [arg_60h];mov dword [rdi + ], eax;mov dword [rdi + ], 0;and qword [rdi + ], 0;mov eax, 8": 4,
                "je ;mov rcx, qword [rsi + ];call fcn.13f10efc8;mov rcx, qword [rsi + ];call fcn.13f10efc8": 14,
                "call fcn.13f10efc8;mov rcx, qword [rsi + ];call fcn.13f10efc8;mov rcx, rsi;call fcn.13f10e55c": 14,
                "mov rcx, rsi;call fcn.13f10e55c;test rbx, rbx;jne ;lea rcx, [rdi + ]": 5,
                "cmp dword [rdi + ], ebx;jle ;xor r14d, r14d;mov rax, qword [rsi];mov rbp, qword [r14 + rax]": 4,
                "mov rcx, qword [rbp + ];call fcn.13f10efc8;mov rcx, rbp;call fcn.13f10e55c;inc ebx": 4,
                "mov rdi, qword [arg_48h];add rsp, ;pop r14;jmp fcn.13f10efc8;int3": 4,
                "and eax, ;cmp eax, 3;jne ;mov rax, qword [rcx + ];mov r8, qword [rax + 8]": 4,
                "jne ;mov rcx, qword [r8 + ];xor r8d, r8d;mov rax, rbx;lock cmpxchg qword [rcx + rdx*8], r8": 4,
                "mov qword [var_30h], rax;lea rcx, [var_20h];call fcn.13f115a84;cmp qword [rbx + 8], r13;mov qword [arg_10h], rbx": 1,
                "mov rcx, r14;and eax, r15d;xor eax, dword [rdi];mov dword [var_50h], eax;mov rax, qword [rdi + 8]": 2,
                "mov dword [var_4ch], eax;mov rax, qword [rdi + ];mov qword [var_40h], rax;mov rax, qword [r14];call qword [rax + ]": 2,
                "mov eax, dword [r14 + ];test eax, eax;jle ;mov edx, dword [var_38h];mov ecx, dword [var_20h]": 2,
                "xor edx, r11d;and edx, r15d;xor edx, r11d;mov dword [var_38h], edx;mov rdx, rbx": 2,
                "call fcn.13f12ca9c;lea r11, [var_70h];mov dword [rsi + ], 0;mov rbx, qword [r11 + ];mov rsi, qword [r11 + ]": 2,
                "test r9d, r9d;je ;lea rcx, [r8 + ];call qword [];test rax, rax": 2,
                "mov ecx, ;call fcn.13f10eae8;mov qword [arg_60h], rax;test rax, rax;je ": 3,
                "xor r8d, r8d;mov edx, ebp;mov rcx, rdi;call fcn.13f13f6c4;mov rcx, qword [rdi + ]": 3,
                "jne ;sub ebp, dword [r14 + ];lea rcx, [var_20h];mov rdx, r15;mov dword [var_28h], ebp": 3,
                "jmp ;xor al, al;mov rbx, qword [arg_50h];mov rbp, qword [arg_58h];mov rsi, qword [arg_60h]": 9,
                "mov byte [rdi + ], sil;call fcn.13f123c2c;xchg dword [rdi + ], esi;lea rdx, [rdi + ];lea rcx, [rbp + ]": 4,
                "mov rcx, qword [rdi + 8];cmp qword [rbx + ], rcx;jne ;cmp qword [rbx + ], rsi;je ": 5,
                "mov rbp, rcx;mov edi, ebx;test r15d, r15d;jle ;lea rsi, [rcx + ]": 5,
                "test r15d, r15d;jle ;lea rsi, [rcx + ];mov ecx, dword [rsi + ];mov edx, edi": 5,
                "mov rdx, r14;mov rcx, rsi;call fcn.13f13fa1c;test al, al;jne ": 5,
                "mov rcx, qword [rbx + 8];mov qword [arg_8h], rbx;mov qword [arg_10h], rbp;mov qword [arg_18h], rsi;push rdi": 1,
                "ret;mov dword [rcx + ], 1;mov eax, dword [rcx + ];mov r8d, ;xor eax, dword [rdx]": 7,
                "mov rax, qword [r9 + 8];mov qword [rcx + ], rax;mov eax, dword [r9 + 4];mov qword [arg_8h], rbx;mov qword [arg_10h], rsi": 1,
                "mov rax, qword [r9 + 8];mov qword [rcx + ], rax;mov eax, dword [r9 + 4];mov dword [rcx + ], eax;mov rax, qword [r9 + ]": 8,
                "and dword [rbx], 0;and qword [rbx + 8], 0;mov rcx, qword [var_28h];call fcn.13f10efc8;mov eax, dword [r14]": 8,
                "mov eax, dword [r14 + 8];mov rcx, qword [rbp + 8];lea r8, [arg_58h];lea rdx, [arg_50h];add rcx, ": 8,
                "lea rdx, [arg_50h];add rcx, ;mov dword [arg_50h], eax;mov qword [arg_10h], rbx;mov qword [arg_18h], rbp": 1,
                "mov dword [arg_50h], eax;call fcn.13f12a224;mov eax, dword [arg_58h];mov dword [rdi + ], eax;lea rcx, [rdi + ]": 7,
                "xorps xmm0, xmm0;mov rdx, rsi;movdqu xmmword [var_40h], xmm0;jmp ;mov rcx, qword [rbx + 8]": 8,
                "mov rcx, qword [rbx + 8];xor edx, edx;call fcn.13f12acec;lea rdx, [var_18h];mov rcx, qword [rax + 8]": 8,
                "and edx, ;xor edx, dword [rax];cmp rdi, r15;mov dword [var_60h], edx;mov rax, qword [rax + 8]": 7,
                "cmovne rax, rsi;mov rsi, rax;mov rdx, rax;lea rcx, [var_60h];call fcn.13f146418": 7,
                "mov rdx, rax;lea rcx, [var_60h];call fcn.13f146418;mov r8, rdi;test al, al": 7,
                "pop r14;pop rbp;ret;mov qword [arg_18h], rbx;mov qword [var_20h], rbp": 1,
                "test rdx, rdx;je ;mov ecx, dword [rdx + 4];mov eax, dword [rdx];cmp ecx, eax": 3,
                "cmp esi, eax;jl ;mov edx, dword [rbx + ];mov ecx, dword [rbx + ];cmp ecx, edx": 3,
                "pop rdi;ret;mov rax, rdx;jmp ;int3": 3,
                "call fcn.13f13fb58;mov rcx, rbx;test rbx, rbx;jne ;mov rcx, qword [rdi + ]": 5,
                "push rbx;sub rsp, ;mov r8d, dword [rdx + ];mov rbx, rcx;mov r9b, 1": 5,
                "sub rsp, ;mov rbx, rdx;add rdx, ;mov rdi, rcx;mov r8d, dword [rdx]": 6,
                "mov rdx, rdi;mov rcx, rbx;mov qword [arg_8h], rbx;push rdi;sub rsp, ": 1,
                "mov qword [rsp + ], rsi;push rdi;sub rsp, ;mov rdi, rcx;test rdx, rdx": 5,
                "mov rdi, rcx;test rdx, rdx;je ;mov rax, qword [rcx + ];mov rsi, qword [rax + 8]": 5,
                "mov rcx, qword [rdi + ];test byte [rcx + ], 4;mov rbp, rax;jne ;lock inc dword [rcx + ]": 5,
                "lock inc dword [rcx + ];lea rcx, [rdi + ];call fcn.13f123be4;lea rcx, [rbp + ];and qword [rcx], 0": 5,
                "je ;push rbx;sub rsp, ;mov rbx, rcx;lea rdx, [rcx + ]": 1,
                "mov rbx, rax;test rax, rax;jne ;lea ecx, [rax + ];call fcn.13f10eae8": 3,
                "and dword [rax + ], 0;and dword [rax + ], 0;mov dword [rax + ], 1;jmp ;xor ebx, ebx": 3,
                "and eax, ebx;xor ecx, eax;mov eax, dword [rdi + ];xor eax, ecx;mov rcx, rsi": 3,
                "mov edx, esi;sar edx, cl;cmp edx, dword [rbx + ];jge ;movsxd r8, dword [rbx + ]": 2,
                "mov rax, qword [rbx + ];cmp edx, r8d;jl ;sub edx, r8d;mov r9, qword [rax + r8*8 - 8]": 2,
                "js ;lea ecx, [rdx + 1];mov r9, qword [r9 + 8];dec rcx;jne ": 2,
                "mov dword [rsp + r14*4 + ], esi;inc ebp;inc r14;jmp ;mov dl, r13b": 1,
                "mov dl, r13b;mov rcx, rdi;call fcn.13f143a94;mov qword [var_28h], rax;test rax, rax": 2,
                "mov eax, dword [rdi + ];cmp eax, 1;jne ;mov ecx, dword [rdi];mov eax, dword [rdi + 4]": 2,
                "mov rdx, qword [rax + rcx*8];test rdx, rdx;je ;mov eax, dword [rdx + ];cmp eax, 1": 1,
                "test rdx, rdx;je ;mov eax, dword [rdx + ];cmp eax, 1;jne ": 1,
                "mov r14, r8;mov dword [var_20h], ebx;mul r9;cmovo rax, rcx;mov rcx, rax": 1,
                "shl r8, 2;call fcn.13f117950;mov ecx, dword [rsi];add ecx, ;shr ecx, 5": 1,
                "lock inc dword [rbx + ];mov rsi, qword [arg_58h];mov dword [rbx + ], 0;mov rbx, qword [arg_50h];mov qword [rdi], rax": 2,
                "mov dword [rbx + ], 0;mov rbx, qword [arg_50h];mov qword [rdi], rax;mov dword [rdi + 8], r8d;mov rax, rdi": 2,
                "mov rbx, qword [arg_50h];mov qword [rdi], rax;mov dword [rdi + 8], r8d;mov rax, rdi;add rsp, ": 2,
                "mov rdx, rdi;call fcn.13f1402d4;mov rbx, qword [rsp + ];mov rax, rdi;add rsp, ": 2,
                "lock cmpxchg qword [rcx + rdx*8], rbx;mov rbx, qword [rsp + ];add rsp, ;pop rdi;ret": 2,
                "mov rcx, qword [rdi + ];mov eax, dword [rbx + rax];lock or dword [rdx + rcx], eax;lea rdx, [rdx + 4];lea rbx, [rbx + 4]": 3,
                "and qword [r8], 0;mov rax, qword [rsi + ];mov qword [rax], rdi;mov qword [rsi + ], r8;mov rbx, qword [rsp + ]": 3,
                "int3;push rbx;sub rsp, ;and dword [rsp + ], 0;test byte [rcx + ], 4": 3,
                "mov rbx, rcx;movdqu xmmword [rsp + ], xmm0;je ;lea rdx, [rsp + ];call fcn.13f13f77c": 3,
                "xchg dword [rcx + ], eax;test eax, eax;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;push rdi": 1,
                "mov rbx, rcx;mov r8b, 1;call fcn.13f134984;lea rax, [];mov qword [rbx], rax": 3,
                "mov ecx, ;call fcn.13f10eae8;test rax, rax;je ;and dword [rax + ], 0": 3,
                "call fcn.13f140924;mov rax, rbx;mov rbx, qword [arg_48h];add rsp, ;pop rdi": 2,
                "jmp fcn.13f134b74;int3;mov qword [rsp + 8], rbx;push rdi;sub rsp, ": 3,
                "call fcn.13f140694;test bl, 1;je ;mov rcx, rdi;call fcn.13f10e55c": 3,
                "cmp qword [rcx + ], 0;mov rdi, rdx;mov rbx, rcx;jne ;mov cl, 1": 6,
                "mov qword [rbx + ], rax;mov rcx, qword [rbx + ];test rcx, rcx;je ;mov rdx, rdi": 6,
                "push rdi;sub rsp, ;mov edi, dword [rcx + ];mov rbx, rcx;mov rcx, qword [rcx + ]": 3,
                "int3;int3;mov edx, dword [rcx + ];cmp edx, 1;sete al": 3,
                "lea r14, [rsi + ];call qword [];mov rdi, rax;call qword [];mov rbx, rax": 4,
                "call qword [];mov dword [var_30h], 2;mov qword [arg_8h], rcx;push rbx;sub rsp, ": 1,
                "lea rdx, [];call fcn.13f117480;mov qword [rsi + ], rax;lea r11, [var_60h];mov rbx, qword [r11 + ]": 3,
                "mov rdi, qword [r11 + ];mov rsp, r11;pop r14;ret;call qword []": 3,
                "mov edi, dword [rbx + ];mov rax, qword [rcx];call qword [rax + 8];mov dl, byte [];mov ecx, 4": 3,
                "jb ;mov edx, dword [];test dl, 2;je ;mov r9d, edi": 3,
                "mov r8d, eax;mov dl, cl;call fcn.13f135e30;or eax, ;lock xadd dword [rbx + ], eax": 3,
                "jb ;mov ecx, dword [];test cl, 2;je ;mov qword [arg_8h], rbx": 1,
                "test cl, 2;je ;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;mov qword [arg_18h], rdi": 1,
                "je ;mov qword [arg_8h], rbx;mov qword [arg_10h], rsi;mov qword [arg_18h], rdi;push r14": 1,
                "mov qword [rdi + ], rax;mov rax, rdi;add rsp, ;pop rdi;ret": 3,
                "int3;sub rcx, ;jmp ;int3;int3": 6,
                "jmp ;int3;int3;int3;sub rcx, ": 3,
                "lea rax, [];mov rdi, rcx;mov ebx, edx;mov qword [rcx], rax;lea rax, []": 3,
                "call fcn.13f13c6e4;lea rax, [];mov qword [rbx], rax;lea rax, [];mov qword [rbx + ], rax": 3,
                "movzx ecx, byte [rsi];dec rbx;inc rsi;test byte [rcx + r8 + ], r9b;je ": 6,
                "mov edx, ebp;jmp ;dec rbx;cmp byte [rdi], bpl;jne ": 10,
                "add rsp, ;pop rdi;ret;xor r9d, r9d;jmp ": 6,
                "shl r8w, 8;inc rsi;or r8w, ax;cmp r8w, word [rcx + ];jb ": 4,
                "test byte [rax + rcx + ], ;je ;movzx edx, byte [rax + rcx + ];cmp dx, r8w;jne ": 4,
                "cmp dx, r8w;jne ;sub rsp, ;mov eax, r9d;mov r9d, dword [arg_60h]": 1,
                "int3;xor edx, edx;lea r8d, [rdx + ];jmp fcn.13f10fb1c;int3": 3,
                "je ;test rsi, rsi;je ;mov rcx, rsi;call fcn.13f112c90": 4,
                "call fcn.13f112c90;cmp rax, rdi;jbe ;mov rcx, qword [rbx];cmp byte [rcx + rdi], ": 3,
                "mov edx, ;mov dword [var_20h], r8d;call qword [];mov qword [], rax;add rsp, ": 4,
                "sub rsp, ;xor ebp, ebp;mov esi, r9d;mov rdi, r8;mov r10, rdx": 6,
                "xor ebp, ebp;mov esi, r9d;mov rdi, r8;mov r10, rdx;mov r11d, ecx": 6,
                "mov r9, r8;xor edx, edx;mov eax, r11d;div esi;mov r11d, eax": 5,
                "div esi;mov r11d, eax;cmp edx, 9;jbe ;add dx, ": 5,
                "mov word [r8], ax;mov word [r9], cx;add r9, 2;sub r8, 2;cmp r9, r8": 5,
                "test eax, eax;jne ;add r8, ;jmp ;cmp word [r8], dx": 6,
                "jmp ;mov rax, qword [var_18h];mov r8d, r12d;or r15d, ;mov qword [var_20h], rax": 6,
                "and edx, r12d;add eax, edx;mov r8d, eax;and eax, r12d;sub eax, edx": 6,
                "add eax, edx;mov r8d, eax;and eax, r12d;sub eax, edx;sar r8d, 5": 6,
                "sar r8d, 5;mov edx, esi;sub ecx, eax;movsxd r11, r8d;mov eax, dword [rbp + r11*4 - ]": 5,
                "mov r13d, ebx;lea r8d, [rax + 1];cmp r8d, eax;jb ;cmp r8d, esi": 4,
                "jae ;sub rsp, ;movdqa xmm2, xmmword [rsp];movzx eax, dx;mov r8, rcx": 1,
                "jae ;mov r13d, esi;mov dword [rbp + rdx*4 - ], r8d;sub rdx, rsi;jns ": 3,
                "sub rdx, rsi;jns ;mov r8d, dword [var_24h];movsxd r11, r10d;mov ecx, r8d": 3,
                "jmp ;cmp edi, ecx;jg ;sub ecx, dword [var_40h];mov rax, qword [var_20h]": 3,
                "jg ;sub ecx, dword [var_40h];mov rax, qword [var_20h];mov r10d, r15d;mov qword [var_18h], rax": 3,
                "mov rax, qword [var_20h];mov r10d, r15d;mov qword [var_18h], rax;mov eax, ecx;mov dword [var_10h], r9d": 3,
                "mov eax, dword [r8];mov ecx, edi;mov edx, eax;shr eax, cl;mov ecx, r14d": 3,
                "mov edx, eax;shr eax, cl;mov ecx, r14d;or eax, r9d;and edx, r10d": 3,
                "mov ecx, dword [rbp + rax - ];mov dword [rbp + rdx - ], ecx;jmp ;mov dword [rbp + r8*4 - ], ebx;sub r8, rsi": 2,
                "cmp rcx, r14;jl ;jmp ;mov eax, r8d;mov ecx, r12d": 2,
                "mov r11d, ebx;mov dword [rbp - ], r9d;mov r15d, ebx;mov dword [rbp - ], ebx;mov r12d, ebx": 1,
                "jmp ;mov rdi, r8;cmp byte [r8], ;ja ;movsx rax, byte [r8]": 1,
                "ja ;movsx rax, byte [r8];movabs rdx, ;bt rdx, rax;jae ": 1,
                "bt rdx, rax;jae ;add r8, r9;jmp ;mov dl, byte [r8]": 1,
                "jmp ;mov dl, byte [r8];add r8, r9;cmp ecx, 5;jg ": 1,
                "test ecx, ecx;je ;dec r9d;je ;dec r9d": 1,
                "je ;dec r9d;je ;dec r9d;je ": 4,
                "test r11d, r11d;jne ;jmp ;mov dl, byte [r8];sub esi, r9d": 1,
                "sub esi, r9d;mov dl, byte [r8];add r8, r9;cmp dl, al;jge ": 1,
                "mov rax, qword [rcx];cmp dl, byte [rax];jne ;mov ecx, 5;mov r9d, 1": 1,
                "cmp dl, byte [rax];je ;lea eax, [rdx - ];test al, ;je ": 1,
                "je ;mov r9d, 1;sub r8, r9;jmp ;mov ecx, 2": 1,
                "mov dword [rbp - ], ;jmp ;mov ecx, 2;mov word [rbp - ], bx;jmp ": 1,
                "mov rbp, rdx;xor edi, edi;xor edx, edx;lea r8d, [rdi + 1];mov esi, ecx": 1,
                "call fcn.13f11bb94;cmp eax, ;je ;cdqe;sub rbx, rax": 1,
                "mov ecx, esi;call fcn.13f11f938;cmp rax, ;je ;xor eax, eax": 1,
                "sbb eax, eax;and eax, ;add eax, ;mov rbx, qword [arg_8h];mov rdi, qword [arg_10h]": 3,
                "mov rax, qword [];xor rax, rsp;mov qword [rbp + ], rax;movzx r10d, word [rcx + 8];mov rbx, r9": 4,
                "and cx, dx;lea r13d, [rdx - 1];lea eax, [r11 + ];xor r12d, r12d;and r10w, r13w": 4,
                "mov qword [rbp - ], rbx;mov dword [rbp - 9], ;mov dword [rbp - 5], ;mov dword [rbp - 1], ;mov word [rbp - ], cx": 4,
                "lea edi, [rax + ];test cx, cx;je ;mov byte [rbx + 2], dil;jmp ": 4,
                "cmove eax, edi;mov word [rbx], r12w;mov byte [rbx + 2], al;mov word [rbx + 3], ;mov byte [rbx + 5], r12b": 4,
                "lea rcx, [rbx + 4];lea r8, [];mov edx, ;call fcn.13f11b2a8;test eax, eax": 7,
                "test r9d, r9d;jne ;lea rcx, [rbx + 4];lea r8, [];lea edx, [r9 + ]": 6,
                "je ;jmp ;cmp r8d, esi;jne ;test r9d, r9d": 3,
                "mov dword [rbp - ], r9d;mov word [rbp - ], r10w;mov ecx, r8d;mov eax, edx;lea r9, []": 3,
                "shr eax, 8;mov r15d, ;lea eax, [rax + rcx*2];mov r14d, 5;sub r9, ": 3,
                "mov r15d, ;lea eax, [rax + rcx*2];mov r14d, 5;sub r9, ;mov dword [rbp - ], r8d": 3,
                "movzx ecx, word [rsi + ];movzx eax, word [rbp - ];mov dword [rbp - ], r12d;movzx ebx, cx;and cx, r13w": 3,
                "movzx eax, word [rbp - ];mov dword [rbp - ], r12d;movzx ebx, cx;and cx, r13w;mov qword [rbp - ], 0": 3,
                "jne ;test edx, edx;jne ;mov word [rbp - ], r12w;mov r13d, ": 2,
                "lea r14, [rbp - ];mov ebx, r12d;movsxd rcx, eax;and ebx, r11d;lea r15, [rsi + 8]": 1,
                "mov r15d, ;mov qword [arg_8h], rcx;push rbx;sub rsp, ;mov qword [var_28h], ": 1,
                "call fcn.13f144a68;mov dword [var_20h], 1;mov rcx, rbx;call fcn.13f144a78;mov rax, rbx": 1,
                "jmp ;mov rdx, rax;or rdx, 1;lock cmpxchg qword [rcx + ], rdx;je ": 4,
                "or rdx, 1;lock cmpxchg qword [rcx + ], rdx;je ;test al, 3;je ": 4,
                "mov rbx, rcx;mov rax, qword [rcx + ];mov rcx, rax;and rcx, ;je ": 5,
                "xor r8d, r8d;test rax, rax;je ;mov rcx, rax;call fcn.13f1438b0": 5,
                "sub rsp, ;and dword [var_20h], 0;mov rbx, rcx;call fcn.13f1436d0;mov rax, rbx": 7,
                "sub rsp, ;mov qword [var_20h], ;mov qword [arg_48h], rbx;mov rdi, rcx;lea rbx, [rcx + ]": 9,
                "int3;mov qword [rcx + ], rdx;mov r9, qword [rdx + ];mov r8, rcx;mov r9, qword [r9 + 8]": 20,
                "mov r8, rcx;mov r9, qword [r9 + 8];lea rdx, [];add rcx, ;jmp fcn.13f12b784": 22,
                "sub rsp, ;lea rbx, [rcx + ];mov rdi, rcx;mov rcx, rbx;call fcn.13f123be4": 11,
                "mov dword [rdi + 4], eax;mov dword [rdi + ], eax;mov dword [rdi + ], eax;mov dword [rdi + ], eax;mov byte [rdi + ], al": 11,
                "mov rbx, qword [arg_30h];add rsp, ;pop rdi;jmp fcn.13f123c2c;int3": 11,
                "mov qword [rax + ], rsi;mov dil, dl;mov rsi, rcx;mov rax, qword [rcx + ];xor ecx, ecx": 1,
                "mov dil, dl;mov rsi, rcx;mov rax, qword [rcx + ];xor ecx, ecx;test al, 1": 1,
                "call fcn.13f123c2c;mov rax, rdi;mov rbx, qword [arg_48h];mov rsi, qword [arg_50h];add rsp, ": 11,
                "movsxd r15, esi;movsxd rcx, dword [rbx + 8];and rcx, r15;mov rax, qword [rbx + ];mov r14, qword [rax + rcx*8]": 8,
                "mov rcx, r14;call r13;test al, al;je ;cmp ebp, edi": 8,
                "mov rcx, qword [arg_70h];mov rbx, qword [arg_80h];add rsp, ;pop r15;pop r14": 8,
                "add rcx, ;jmp ;mov qword [arg_10h], rbx;mov qword [arg_18h], rsi;mov qword [arg_8h], rcx": 7,
                "sub rsp, ;mov rdi, r8;mov r15b, dl;mov rsi, rcx;xor ebx, ebx": 8,
                "mov r15b, dl;mov rsi, rcx;xor ebx, ebx;lea r14, [rcx + ];mov rcx, r14": 8,
                "int3;mov qword [arg_8h], rbx;mov qword [arg_10h], rbp;mov qword [arg_18h], rsi;mov qword [arg_8h], rbx": 1,
                "mov edi, dword [rcx];mov bpl, dl;mov rbx, rcx;lea eax, [rdi + 1];xor r8d, r8d": 8,
                "lea eax, [rdi + 1];xor r8d, r8d;xchg dword [rcx], eax;mov eax, dword [rcx + 4];mov qword [arg_8h], rcx": 1,
                "xchg dword [rcx], eax;mov eax, dword [rcx + 4];cmp edi, eax;jge ;movsxd rcx, dword [rbx + 8]": 7,
                "xchg qword [rax + rcx*8], r8;test r8, r8;je ;test r8b, 1;je ": 7,
                "call fcn.13f12b784;xor r8d, r8d;mov edi, dword [rbx];lea eax, [rdi + 1];mov qword [arg_8h], rbx": 1,
                "jmp ;mov rcx, qword [rcx + ];xor ebx, ebx;mov esi, ebx;test rcx, rcx": 4,
                "je ;lea rcx, [rdi + ];mov r8b, 1;mov dl, bpl;call fcn.13f143c2c": 4,
                "call fcn.13f143c2c;mov rsi, rax;test rax, rax;je ;mov rcx, rax": 3,
                "mov rcx, rdi;call fcn.13f13c3c4;test rax, rax;jne ;lea rcx, [rdi + ]": 3,
                "je ;mov eax, 1;mov dword [rdi + 8], eax;mov dword [rdi + ], eax;lea rax, []": 4,
                "lea rax, [];mov qword [rdi], rax;mov qword [rdi + ], r14;jmp ;xor edi, edi": 4,
                "lea rcx, [var_30h];call fcn.13f112d38;mov dword [rax + 8], 1;mov dword [rax + ], 1;lea rax, []": 4,
                "mov byte [rcx + ], r8b;mov eax, dword [rdx];mov rdi, rdx;mov dword [rcx], eax;mov eax, dword [rdx + 4]": 4,
                "sub r8d, dword [rbx + ];xor edx, edx;add rcx, 4;shl r8, 3;lea rcx, [rbx + rcx*8]": 4,
                "cmp qword [rdi + ], 0;mov rsi, qword [rdi + ];je ;test rsi, rsi;je ": 4,
                "je ;movsxd rcx, dword [rsi + ];mov rax, qword [rbx + ];cmp dword [rcx + rax], 0;jle ": 4,
                "movsxd rax, dword [rdx + 4];add rax, r9;call rax;jmp ;test byte [r8 + r9], 8": 4,
                "mov qword [rax + ], rsi;mov qword [rax + ], rdi;mov rdi, r8;mov r14, rdx;mov r8, rcx": 5,
                "xor ebx, ebx;test eax, eax;je ;mov rcx, rax;add rcx, qword [r8 + ]": 4,
                "mov rcx, rax;add rcx, qword [r8 + ];jmp ;mov rcx, rbx;test rcx, rcx": 4,
                "mov rdx, rax;mov r8d, 1;mov rcx, r14;call rbx;jmp ": 4,
                "call fcn.13f114968;mov rdx, rax;mov rcx, r14;call rbx;jmp ": 4,
                "jmp ;mov r8, r9;mov rdx, rdi;mov rcx, r14;call fcn.13f10e580": 4,
                "push r14;sub rsp, ;mov qword [rax - ], ;mov r14b, r9b;mov rbx, r8": 5,
                "mov rbx, r8;push rbx;sub rsp, ;cmp dword [rcx], ;mov rbx, rcx": 1,
                "lea rax, [];mov qword [arg_120h], rax;mov r8d, 1;lea rdx, [arg_120h];lea rcx, [var_a0h]": 4,
                "lea r9, [arg_128h];lea r8, [];mov rdx, rax;lea rcx, [var_48h];call fcn.13f143ef4": 4,
                "add eax, esi;jne ;mov rcx, qword [var_28h];mov rax, qword [rcx];call qword [rax + 8]": 3,
                "movdqu xmmword [var_30h], xmm0;mov rax, rsp;push r14;sub rsp, ;mov qword [rax - ], ": 1,
                "call fcn.13f143fc8;xorps xmm0, xmm0;movdqu xmmword [var_30h], xmm0;mov rdx, rax;lea rcx, [var_30h]": 3,
                "mov rcx, qword [var_38h];mov dword [var_20h], 1;test rcx, rcx;je ;lock dec dword [rcx + 8]": 2,
                "jmp ;mov rax, qword [rsp + ];mov rbx, qword [arg_80h];add rsp, ;pop rdi": 2,
                "mov rax, qword [rcx];xor edx, edx;mov rbx, rcx;call qword [rax + ];mov rcx, rbx": 2,
                "mov rbx, qword [rcx + ];test rbx, rbx;je ;mov rcx, rbx;call fcn.13f144160": 1,
                "mov qword [var_30h], rdi;lea rcx, [var_30h];call fcn.13f10eccc;mov rax, rbx;mov rbx, qword [arg_68h]": 2,
                "mov rbx, qword [arg_30h];mov qword [rsi], rbp;mov rbp, qword [arg_38h];mov qword [rsi + 8], rdi;mov rsi, qword [arg_40h]": 3,
                "mov rax, qword [rdi + rdx + ];lea esi, [rdx - ];movups xmmword [rcx], xmm0;movups xmm0, xmmword [rdi + ];movups xmmword [rcx + ], xmm1": 3,
                "movups xmmword [rcx + rdx - ], xmm0;movups xmmword [rcx + rdx], xmm1;mov qword [rcx + rdx + ], rax;mov r10d, dword [rbp + ];mov r8d, dword [rbp + ]": 3,
                "jne ;mov ecx, dword [rbp + ];lea eax, [rcx - ];cmp eax, 2;jbe ": 2,
                "call fcn.13f1447f0;mov rbx, qword [var_30h];test rbx, rbx;je ;lock dec dword [rbx + 8]": 5,
                "int3;mov rax, qword [rcx];mov edx, 1;jmp qword [rax];int3": 6,
                "xor eax, eax;test rdx, rdx;je ;add rdx, ;jmp ": 8,
                "xor edx, edx;mov rcx, rsi;call fcn.13f144b74;xor edx, edx;mov rcx, r14": 9,
                "mov rcx, rsi;call fcn.13f144b74;xor edx, edx;mov rcx, r14;call fcn.13f143744": 9,
                "mov r15, rax;mov qword [rsp + ], rax;xor edi, edi;mov qword [rsp + ], rdi;test rax, ": 9,
                "mov rdi, rax;mov qword [rsp + ], rax;cmp qword [r14 + ], 0;je ;lea rcx, [rsp + ]": 9,
                "lea rcx, [rsp + ];call fcn.13f112d38;mov rcx, rsi;call qword [rsi + 8];jmp ": 9,
                "cmplesd xmm2, qword [];push rbx;sub rsp, ;mov rbx, qword [rcx + 8];test rbx, rbx": 1,
                "movapd xmm1, xmm0;btr rdx, ;cmp rdx, qword [];jbe ;mulsd xmm1, qword []": 7,
                "movd ecx, xmm2;movapd xmm2, xmm1;mulsd xmm1, qword [];mov rax, ;and eax, ecx": 7,
                "addsd xmm2, xmm0;movapd xmm3, xmmword [];mulsd xmm3, xmm2;movapd xmm0, xmmword [];movapd xmm1, xmm2": 7,
                "movapd xmm3, xmmword [];mulsd xmm3, xmm2;movapd xmm0, xmmword [];movapd xmm1, xmm2;mulsd xmm0, xmm2": 7,
                "cmp rax, qword [];je ;or rax, qword [];movq xmm1, rax;mov r8d, dword []": 4,
                "lea r10, [];vmulsd xmm2, xmm0, qword [rdx + rax*8];vaddsd xmm1, xmm2, qword [r11 + rax*8];vaddsd xmm0, xmm1, qword [r10 + rax*8];jle ": 1,
                "test rdx, rdx;je ;mov rax, qword [rcx + ];cmp qword [rax + ], rdx;jne ": 1,
                "mov rax, qword [rcx + ];cmp qword [rax + ], rdx;jne ;lock dec dword [rcx + ];jne ": 1,
                "int3;int3;sub rsp, ;lock dec dword [rcx + ];jne ": 1,
                "int3;int3;int3;lea rdx, [rcx + ];mov rcx, qword [rcx + ]": 3,
                "mov rsi, rax;mov eax, 1;lock xadd dword [rbx + ], eax;inc eax;cmp eax, 2": 5,
                "lock xadd dword [rbx + ], eax;inc eax;cmp eax, 2;jne ;xchg qword [rbx + 8], rdi": 5,
                "mov rax, qword [rbx + ];test rax, rax;jne ;lea rcx, [rsp + ];call fcn.13f115a84": 10,
                "push rbp;mov rbp, rsp;sub rsp, ;mov rbx, rcx;test rdx, rdx": 6,
                "test rax, rax;sub rsp, ;lock dec dword [rcx + ];jne ;lea rdx, [rcx + ]": 1,
                "mov rcx, rbx;xchg qword [rbx + ], rax;call fcn.13f1453b0;mov rcx, rdi;call fcn.13f146310": 5,
                "mov qword [rbp - ], rax;jmp ;lea rcx, [rbp - ];call fcn.13f115a84;mov rax, qword [rbx + 8]": 5,
                "jne ;lea rdx, [rcx + ];mov rcx, qword [rcx + ];jmp fcn.13f139494;int3": 1,
                "mov rcx, rbx;add rsp, ;pop rbx;jmp qword [rax + ];push rbx": 4,
                "pop rbx;jmp qword [rax + ];push rbx;sub rsp, ;mov rbx, rcx": 3,
                "mov rcx, qword [rbx + ];cmp rcx, rax;jne ;mov rcx, qword [rbx + ];mov rcx, qword [rcx + ]": 1,
                "je ;mov rax, qword [rdi];mov r8d, ebp;mov rdx, rsi;mov rcx, rdi": 2,
                "mov r8, rdx;mov rdx, rcx;mov rcx, r8;jmp qword [rax + ];mov qword [rsp + ], rbx": 3,
                "mov rdx, rbx;mov ecx, eax;call fcn.13f1175dc;jmp ;mov rcx, qword [rdi + ]": 2,
                "mov rax, qword [rcx];call qword [rax + ];mov rcx, qword [rdi + ];lea rdx, [rsp + ];mov rax, qword [rcx]": 2,
                "and qword [rdi + ], 0;mov rax, qword [rcx];mov rdx, rdi;call qword [rax + 8];test rbx, rbx": 2,
                "test rbx, rbx;je ;mov edx, 1;mov rcx, rbx;call fcn.13f145840": 2,
                "mov rdx, rcx;mov rcx, qword [rcx + 8];mov rax, qword [rcx];jmp qword [rax + 8];int3": 2,
                "jmp fcn.13f146310;lea rax, [];lea rdx, [rsp + ];lea rcx, [rsp + ];mov qword [rsp + ], rax": 2,
                "mov esi, r8d;mov r14, rdx;mov rbx, rcx;test rdx, rdx;je ": 2,
                "jne ;mov rax, qword [rbx + ];mov rdx, r14;mov rcx, qword [rax + ];mov rax, qword [rcx]": 2,
                "mov eax, r14d;xchg dword [rbx + ], eax;mov rdx, rdi;call fcn.13f145530;test esi, esi": 2,
                "mov rdx, rdi;call fcn.13f145530;test esi, esi;je ;dec esi": 2,
                "mov rcx, qword [rdi + ];mov r9d, r14d;or r8d, ;call sub.KERNEL32.dll_SignalObjectAndWait;xchg dword [rbx + ], ebp": 2,
                "call fcn.13f1462c0;mov rbx, qword [rsp + ];mov rbp, qword [rsp + ];add rsp, ;pop r14": 2,
                "mov qword [rax + ], rbx;mov qword [rax + ], r9;mov qword [rax + ], r8;mov qword [rax + 8], rcx;push rbp": 3,
                "mov r14, qword [arg_88h];movsxd rax, dword [rdx + ];xor r8d, r8d;movsxd r12, dword [rax + r14 + ];mov eax, dword [rax + r14 + 8]": 3,
                "mov eax, esi;sub eax, ebp;add rbx, r14;cmp eax, r13d;jbe ": 3,
                "xor r8d, r8d;test eax, eax;jne ;test r15, r15;jne ": 3,
                "jne ;mov r13d, dword [rbx + 4];mov rdi, rbx;mov qword [rcx + ], rdx;mov rax, qword [rdx]": 1,
                "mov r13d, dword [rbx + 4];mov rdi, rbx;mov ebp, esi;movsxd rcx, dword [rbx];mov rax, qword [arg_70h]": 2,
                "movsxd rcx, dword [rax + rcx];add rdx, rcx;movsxd rax, dword [rbx + 8];add rax, rdx;cmp rax, qword [arg_78h]": 2,
                "add rax, rdx;cmp rax, qword [arg_78h];jne ;test rdi, rdi;jne ": 2,
                "inc esi;add r12, 4;cmp esi, dword [arg_88h];jae ;jmp ": 2,
                "cmp esi, dword [arg_88h];jae ;jmp ;test byte [rbx + ], 3;jne ": 2,
                "test byte [r15 + ], 1;jne ;mov rax, rbx;jmp ;sub esi, ebp": 2,
                "mov rdi, r9;movsxd r15, dword [rax + r9 + ];mov r14d, dword [rax + r9 + 8];mov r13, r8;add r15, r9": 2,
                "pop r13;pop r12;pop rdi;ret;inc ebx": 2,
                "cmp ebx, r14d;jae ;lea rsi, [r15 + rbx*4];movsxd rax, dword [rsi];test byte [rax + rdi + ], 4": 2,
                "mov rax, rbp;jmp ;int3;int3;mov qword [var_20h], r9": 2,
                "int3;int3;mov qword [var_20h], r9;mov qword [arg_18h], r8;mov qword [arg_8h], rcx": 2,
                "mov eax, dword [rax + r15 + 8];xor r10d, r10d;or r8d, ;add rcx, r15;mov edx, r10d": 3,
                "mov dword [var_20h], eax;mov dword [arg_98h], edx;mov dword [arg_b8h], r8d;mov dil, 1;mov r14d, r10d": 3,
                "test eax, eax;je ;movsxd rbx, dword [rcx];mov eax, r14d;sub eax, r8d": 3,
                "cmovne edi, r10d;mov cl, 1;jmp ;movsxd rax, dword [rbp + ];movzx edi, dil": 2,
                "cmovne edi, r10d;shr ecx, 2;not cl;and cl, 1;test dil, dil": 2,
                "and cl, 1;test dil, dil;je ;test cl, cl;je ": 2,
                "je ;mov rdx, r10;cmp dword [rbp + ], r10d;jl ;movsxd rdx, dword [rbp + ]": 2,
                "jmp ;test r13, r13;je ;test rsi, rsi;je ": 2,
                "sub r14, r13;sub r14, rdi;movsxd rax, dword [rsi + ];mov edx, dword [rax + rcx + 4];test dl, 1": 2,
                "sub r14, rdi;movsxd rax, dword [rsi + ];mov edx, dword [rax + rcx + 4];test dl, 1;jne ": 2,
                "je ;lea rdx, [];lea rcx, [var_40h];call fcn.13f10ebc0;lea rdx, []": 2,
                "mov qword [rbx + ], rax;test rax, rax;je ;mov rax, rbx;add rsp, ": 2,
                "mov eax, dword [rcx + ];ret;mov rcx, qword [rcx + ];jmp qword [];int3": 3,
                "xor r8d, r8d;xchg dword [rcx + ], eax;mov rcx, qword [rcx + ];or edx, ;call qword []": 7,
                "mov dword [rcx + 4], r9d;mov rax, rcx;mov dword [rcx + 8], r8d;ret;int3": 7,
                "movabs r9, ;movzx eax, byte [r10 + rdx];movabs rcx, ;inc r10;xor r9, rax": 8,
                "mov rax, qword [rcx + ];mov rcx, qword [rax + ];mov eax, dword [rdx + 8];cmp dword [rcx + ], eax;jmp ": 9,
                "jmp ;mov al, 1;ret;int3;int3": 9,
                "sub rsp, ;mov rdi, rcx;mov dword [rcx], 1;lea rcx, [rdx + ];mov rbx, rdx": 10,
                "cmp dword [rbx], 4;jne ;mov r8b, 1;jmp ;xor r8d, r8d": 11,
                "call fcn.13f13f488;mov qword [rbx + ], rax;test rax, rax;je ;or byte [rax + ], 1": 11,
                "cmp dword [rcx], 2;mov rdi, rdx;mov rbx, rcx;je ;cmp dword [rcx], 4": 11,
                "mov qword [rbx + ], rdi;mov dword [rbx], 1;mov rbx, qword [arg_30h];add rsp, ;pop rdi": 11,
                "mov eax, dword [rcx];sub r8d, eax;test r8d, r8d;jle ;call fcn.13f13b550": 12,
                "sub r8d, eax;test r8d, r8d;jle ;call fcn.13f13b550;jmp ": 12,
                "cmp dword [rcx + ], ;jb ;cmp dword [rcx + ], ;jae ;mov rcx, r8": 9,
                "mov edx, dword [rcx + 4];mov eax, dword [rcx];sub edx, eax;test edx, edx;jle ": 9,
                "test rax, rax;je ;lea rcx, [var_38h];mov rdx, rax;call fcn.13f1464c0": 8,
                "lea rcx, [var_38h];mov rdx, rax;call fcn.13f1464c0;movups xmm0, xmmword [rax];movups xmmword [rdi], xmm0": 8,
                "mov rbx, qword [arg_60h];add rsp, ;pop rdi;ret;mov rax, rsp": 8,
                "mov qword [rax + ], rbp;mov qword [rax + ], rsi;push rdi;sub rsp, ;mov ebx, dword [rcx + ]": 17,
                "sub rsp, ;mov ebx, dword [rcx + ];mov r8d, dword [rcx + ];lea rbp, [rcx + ];mov rsi, rdx": 17,
                "mov rsi, rdx;mov r9, rdx;mov edx, ebx;mov rdi, rcx;mov qword [rax - ], rbp": 17,
                "mov qword [rax - ], rbp;call fcn.13f12a36c;test rax, rax;mov qword [arg_8h], rbx;xor r8d, r8d": 1,
                "mov qword [arg_8h], rbx;push rdi;sub rsp, ;mov rbx, r8;mov rdi, rdx": 8,
                "mov rdi, rdx;mov rcx, rbx;test r9b, r9b;je ;call fcn.13f13f4e8": 8,
                "mov rax, rsp;mov qword [rax + 8], rbx;mov qword [rax + ], rbp;mov qword [rax + ], rdi;push r12": 8,
                "mov r9d, dword [arg_70h];mov r15, rdx;xor r8d, r8d;mov rdx, rbp;mov byte [rax - ], r12b": 8,
                "mov rcx, rdi;call fcn.13f146734;test al, al;je ;mov al, 1": 8,
                "mov al, 1;movsd qword [rbx + ], xmm1;add rsp, ;pop rbx;ret": 12,
                "mov byte [rax - ], r15b;mov esi, r9d;mov rdi, rcx;call fcn.13f147f44;mov rax, rsp": 1,
                "mov dl, r9b;call fcn.13f13feb8;test rax, rax;je ;mov dword [var_20h], 4": 7,
                "mov rbx, qword [arg_50h];mov rdi, qword [arg_58h];add rsp, ;pop rbp;ret": 6,
                "add rsp, ;pop rbp;ret;int3;mov rax, rsp": 6,
                "mov sil, byte [arg_78h];mov r14, r8;mov r15b, r9b;mov r9d, dword [arg_70h];mov r12, rdx": 7,
                "mov r9b, sil;mov r8, rbx;mov rdx, r12;mov rcx, rdi;mov byte [var_20h], r15b": 5,
                "call fcn.13f146968;test al, al;jne ;mov rbx, qword [rbx + ];jmp ": 5,
                "push rbx;sub rsp, ;cmp dword [rcx], 2;mov rbx, rcx;je ": 6,
                "mov rcx, rax;add rsp, ;pop rbx;jmp qword [rax + ];push rbx": 1,
                "test bl, ;je ;shr ebx, 2;mov r9b, r14b;mov rax, rsp": 1,
                "pop r14;ret;int3;mov qword [arg_8h], rbx;mov qword [arg_10h], rdi": 1,
                "mov qword [arg_18h], rsi;push rdi;sub rsp, ;cmp dword [rcx], 8;mov rbx, rcx": 7,
                "mov byte [rbp - ], sil;movsxd r13, eax;cmp r13, 2;jg ;mov rax, qword [rbp - ]": 3,
                "jg ;mov rax, qword [rbp - ];mov qword [rbp - ], rax;mov rax, qword [rbp - ];mov qword [rbp - ], rax": 3,
                "cmp rdx, rsi;jbe ;mov rcx, qword [r9 + ];mov rax, rdx;lock cmpxchg qword [rcx + r8*8], rsi": 3,
                "lock cmpxchg qword [rcx + r8*8], rsi;cmp rdx, rax;je ;mov rdx, rbx;test rdx, rdx": 3,
                "test r10b, r10b;je ;test sil, r15b;je ;mov r8, qword [rdi]": 2,
                "test sil, r15b;je ;mov r8, qword [rdi];xor r9d, r9d;mov rdx, r12": 2,
                "je ;mov r8, qword [rdi];xor r9d, r9d;mov rdx, r12;mov rcx, rdi": 2,
                "mov r9b, byte [arg_90h];mov byte [rax - ], r13b;mov r8, r15;mov dword [rax - ], ebp;call fcn.13f1467a0": 1,
                "mov dword [var_20h], eax;call fcn.13f146b40;test al, al;jne ;mov r9d, ebp": 3,
                "mov r8, r15;mov rdx, rsi;mov rcx, r14;mov byte [var_20h], r13b;call fcn.13f147f44": 1,
                "call fcn.13f147f44;test al, al;jne ;mov r9b, byte [arg_90h];mov r8, rsi": 1,
                "pop r12;pop rdi;ret;mov al, dil;jmp ": 3,
                "push r14;push r15;sub rsp, ;mov r13b, byte [arg_a8h];mov r12, r9": 2,
                "mov r8, r12;mov byte [var_20h], r13b;call fcn.13f1468ac;test al, al;je ": 2,
                "jne ;mov r8, rsi;mov rdx, r15;mov rcx, r14;call fcn.13f146870": 2,
                "mov r12, r9;mov rbx, r8;mov r13, rdx;mov r14, rcx;test r9, r9": 2,
                "mov r8, r12;mov dword [rax - ], ebp;call fcn.13f1469e0;test al, al;je ": 2,
                "call fcn.13f147f44;test al, al;jne ;mov al, byte [arg_90h];mov r9b, r15b": 2,
                "call fcn.13f12acec;mov r14, rax;mov rdx, r12;mov rcx, rbx;test rax, rax": 1,
                "mov rcx, rbx;test rax, rax;jne ;mov rax, qword [rbx];mov r8, qword [rax + ]": 1,
                "je ;mov r14, rdi;test rdi, rdi;je ;mov r15d, ebp": 1,
                "mov rdx, r12;and r9b, 1;mov rcx, rbx;call fcn.13f147d04;mov rcx, qword [rbx + 8]": 1,
                "call fcn.13f147d04;mov rcx, qword [rbx + 8];mov sil, al;test al, al;jne ": 1,
                "mov r14, rax;test rax, rax;jne ;jmp ;mov rdx, r14": 1,
                "mov rsi, rdx;lea rdx, [var_20h];mov rcx, r8;mov r14b, r9b;mov rdi, r8": 4,
                "mov r15d, dword [var_20h];mov rbx, rax;test rax, rax;je ;mov rcx, rax": 4,
                "mov ecx, dword [rbx + ];mov eax, dword [arg_68h];inc eax;cdq;idiv ecx": 2,
                "inc eax;cdq;idiv ecx;lea rcx, [var_20h];mov dword [rbx + ], edx": 2,
                "cdq;idiv ecx;lea rcx, [var_20h];mov dword [rbx + ], edx;mov rdx, r8": 2,
                "mov dword [rbx + ], edx;mov rdx, r8;call fcn.13f1464c0;movups xmm0, xmmword [rax];movups xmmword [rsi], xmm0": 2,
                "mov r8, rax;test rax, rax;je ;mov dword [var_18h], 4;mov ecx, dword [rdi + ]": 3,
                "mov eax, ebx;mov r10d, ebx;mov r8d, dword [r9 + ];add r8d, ;shr r8d, 5": 4,
                "jne ;mov rax, qword [rdi + ];mov rcx, qword [r9 + ];mov edx, r10d;mov eax, dword [rax + rdx*4]": 4,
                "inc r9d;cmp r9d, r10d;jl ;jmp ;mov ebx, edx": 4,
                "mov al, 1;jmp ;xor al, al;mov rbx, qword [arg_30h];mov rbp, qword [arg_38h]": 4,
                "mov rdi, rdx;xor edx, edx;mov rsi, r9;mov rbp, rcx;mov qword [arg_8h], rbx": 1,
                "je ;mov r8b, 1;mov rax, rsp;mov qword [rax + 8], rbx;mov qword [rax + ], rbp": 1,
                "cmp qword [rcx + ], rax;je ;mov r8b, 1;mov rcx, rdi;call fcn.13f13d98c": 4,
                "je ;mov r8b, 1;mov rcx, rdi;call fcn.13f13d98c;mov rbx, qword [arg_38h]": 4,
                "not rax;and rax, r9;test r11, rax;je ;xor eax, eax": 6,
                "je ;cmp r9d, ecx;je ;sub r9d, ecx;mov eax, r9d": 7,
                "push rdi;sub rsp, ;mov rbp, r8;mov rdi, rdx;mov rsi, rcx": 8,
                "lea rdx, [var_20h];call fcn.13f111354;mov qword [arg_10h], rbx;push rdi;sub rsp, ": 1,
                "lea rdx, [var_20h];mov ebx, eax;call fcn.13f111354;inc rdi;dec rbp": 7,
                "movsxd rdi, eax;test eax, eax;je ;mov rcx, rdi;mov edx, 1": 7,
                "mov r8, qword [rbx];mov r9d, ebp;xor edx, edx;xor ecx, ecx;mov dword [var_28h], edi": 7,
                "add rbx, 8;mov rax, qword [rbx];test rax, rax;jne ;xor eax, eax": 5,
                "xor eax, eax;mov rbx, qword [arg_58h];mov rbp, qword [arg_60h];add rsp, ;pop rdi": 5,
                "jmp ;int3;int3;xor r9d, r9d;jmp ": 5,
                "call fcn.13f11b8a0;mov ebx, ;jmp ;mov ebx, ;cmp rdi, rbx": 7,
                "mov r9, r14;mov r8, rdi;mov rdx, rsi;mov rcx, rbp;call fcn.13f148e34": 5,
                "mov r8, rdi;mov rdx, rsi;mov rcx, rbp;call fcn.13f148e34;mov ebx, eax": 5,
                "mov dword [var_20h], edi;call fcn.13f11a8f0;test eax, eax;je ;lea ebx, [rax - 2]": 5,
                "and dword [rax + ], ;lea r11, [var_60h];mov eax, ebx;mov rbx, qword [r11 + ];mov rbp, qword [r11 + ]": 6,
                "mov rbp, rcx;mov ebx, ;test edx, edx;je ;xor r11d, r11d": 5,
                "or r8d, eax;mov eax, edx;add edx, edx;mov ecx, r8d;shr eax, ": 4,
                "mov dword [r10 + 8], r9d;add r9d, r14d;lea edx, [rsi + rsi];mov ecx, r11d;shr ecx, ": 3,
                "mov dword [r10 + 4], r8d;movsx ecx, byte [rbp];lea r11d, [rdx + rcx];cmp r11d, edx;jb ": 3,
                "xor r8d, r8d;xor ecx, ecx;lea r9d, [r8 + 1];mov eax, r9d;cpuid": 1,
                "bt ecx, ;mov dword [rsp], eax;mov dword [rsp + 4], ebx;cmovb r8d, r9d;mov dword [rsp + ], edx": 1,
                "xor r14d, r14d;mov ebx, edx;mov r15, rcx;mov edi, r14d;test rcx, rcx": 2,
                "je ;cmp rbp, rax;je ;cmp byte [rax + 1], r14b;mov rsi, qword []": 2,
                "cmp rbp, rax;je ;cmp byte [rax + 1], r14b;mov rsi, qword [];mov r12d, r14d": 2,
                "ret;test r12d, r12d;je ;xor eax, eax;jmp ": 2,
                "je ;lea rcx, [rsi + 1];lea rcx, [r14 + rcx*8];mov rax, qword [rcx];inc ebx": 2,
                "jae ;mov rcx, qword [];mov r8d, 8;call fcn.13f113f30;xor r14d, r14d": 2,
                "mov qword [], rax;jmp ;mov rsi, qword [];sub rbx, rsi;sar rbx, 3": 2,
                "mov rcx, rbp;call fcn.13f112c90;mov edx, 1;lea rcx, [rax + 2];call fcn.13f113db0": 1,
                "test rax, rax;je ;mov rcx, rbp;call fcn.13f112c90;mov r8, rbp": 1,
                "call fcn.13f11b2a8;test eax, eax;jne ;mov rdx, rbx;mov rcx, rbx": 1,
                "mov rcx, rbx;sub rdx, rbp;add rdx, r13;mov byte [rdx], r14b;inc rdx": 1,
                "xor r9d, r9d;mov rax, rsp;mov qword [rax + 8], rbx;mov qword [rax + ], rbp;mov qword [rax + ], rsi": 1,
                "call fcn.13f11b8a0;jmp ;mov rax, qword [var_40h];mov rdx, qword [rax + ];test rdx, rdx": 1,
                "call fcn.13f110eb4;mov rdi, rax;test rax, rax;je ;lea rdx, [rsi + 1]": 2,
                "mov dword [rax], ;call fcn.13f11b8a0;jmp ;mov rdx, qword [var_28h];cmp dword [rdx + 8], esi": 3,
                "mov rdx, qword [var_28h];cmp dword [rdx + 8], esi;jne ;mov edx, edi;mov rcx, rbx": 3,
                "mov qword [rdi + ], rax;mov qword [rdi + 8], rax;lea rax, [];xor r8d, r8d;xor edx, edx": 5,
                "call sub.KERNEL32.dll_InitializeCriticalSectionAndSpinCount;test eax, eax;jne ;call qword [];movzx ecx, ax": 5,
                "mov rcx, qword [rdx + ];mov qword [arg_8h], rbx;push rdi;sub rsp, ;xor edx, edx": 1,
                "\u001b[2K": 1,
                "Warning: Base td .?AV?$_Iosb@H@std@@ has no col. Falling back to recovery from td only.": 11,
                "Warning: Base td .?AUmessages_base@std@@ has no col. Falling back to recovery from td only.": 3,
                "Warning: Base td .?AUmoney_base@std@@ has no col. Falling back to recovery from td only.": 9,
                "Warning: Base td .?AUtime_base@std@@ has no col. Falling back to recovery from td only.": 3,
                "Warning: Base td .?AUITopologyExecutionResource@Concurrency@@ has no col. Falling back to recovery from td only.": 1,
                "Warning: Base td .?AUITopologyNode@Concurrency@@ has no col. Falling back to recovery from td only.": 1,
                "Warning: Base td .?AUIResourceManager@Concurrency@@ has no col. Falling back to recovery from td only.": 1,
                "Warning: Base td .?AUIExecutionResource@Concurrency@@ has no col. Falling back to recovery from td only.": 3,
                "Warning: Base td .?AUISchedulerProxy@Concurrency@@ has no col. Falling back to recovery from td only.": 1,
                "Warning: Base td .?AUIThreadProxy@Concurrency@@ has no col. Falling back to recovery from td only.": 2,
                "Warning: class name Concurrency::details::InternalContextBase already taken!": 1,
                "Warning: class name Concurrency::details::ThreadInternalContext already taken!": 1,
                "Warning: class name Concurrency::details::ThreadScheduler already taken!": 1,
                "Warning: Base td .?AUIVirtualProcessorRoot@Concurrency@@ has no col. Falling back to recovery from td only.": 2,
                "Warning: Base td .?AVGdiplusBase@Gdiplus@@ has no col. Falling back to recovery from td only.": 2
            }
        },
        {
            "plugin": "extractors.strings",
            "version": "0.1",
            "results": {
                "!This program cannot be run in DOS mode.": 1,
                "`.rdata": 1,
                "@.data": 1,
                ".pdata": 1,
                "@.rsrc": 1,
                "@.reloc": 1,
                "@SUVATAWH": 1,
                "A_A\\^][": 1,
                "l$ I9h": 1,
                "SVWAVH": 3,
                "8A^_^[": 2,
                "t$ AVH": 5,
                "UVWATAUAVAWH": 78,
                "t7@80t": 2,
                "PA_A^A]A\\_^]": 4,
                "@UAVAWH": 3,
                "pA_A^A]A\\_^]": 6,
                "@UVWAVAWH": 10,
                "A_A^_^]": 16,
                "WAVAWH": 29,
                "UWATAVAWH": 4,
                "A_A^A\\_]": 4,
                "WATAUAVAWH": 46,
                "A_A^A]A\\_": 40,
                "t$@f9u": 1,
                "fB94@u": 1,
                "@UVWATAUAVAWH": 6,
                "A_A^A]A\\_^]": 61,
                "@USVWAVH": 1,
                "A^_^[]": 2,
                "SVWATAUAVAWH": 5,
                "A_A^A]A\\_^[": 2,
                "SUVWATAVAWH": 9,
                "pA_A^A\\_^][": 1,
                "@USVWATAUAVAWH": 18,
                "A_A^A]A\\_^[]": 18,
                "UATAUAVAWH": 9,
                "A_A^A]A\\]": 14,
                "UAVAWH": 12,
                "@SUVWAVH": 6,
                "PA^_^][": 1,
                "@SUVWATAVAWH": 16,
                "PA_A^A\\_^][": 2,
                "C@H+C8H": 1,
                "t Hc@D": 1,
                "VWATAVAWH": 13,
                "@A_A^A\\_^": 1,
                "@WAVAWH": 4,
                "@A_A^_": 4,
                "A@H+A8H": 1,
                "M@H+M8H": 1,
                "F@H+F8H": 1,
                "f9l$Pu": 1,
                "fB9,@u": 1,
                "u#D9C\\u": 1,
                "@USVWATAVAWH": 13,
                "A_A^A\\_^[]": 12,
                "SUVWAVH": 1,
                "A^_^][": 2,
                "E`H+EXH": 2,
                "@VWATAVAWH": 2,
                "2333333": 1,
                "A_A^A\\_^": 14,
                "0A^_^][": 3,
                "\\$ VWAVH": 2,
                "UUUUUUU": 7,
                "@SUVATAUAVAWH": 1,
                "@A_A^A]A\\^][": 1,
                "L9L$(L": 1,
                "@VWAVH": 42,
                "`A_A^A]A\\_^[": 1,
                "|$ fA98u": 1,
                "fB9<@u": 1,
                "\\$ VATAWH": 1,
                "0A_A\\^": 2,
                "D$`t D": 1,
                "L$ SVWATAUAVAWH": 1,
                "I9t$0w": 1,
                "pA_A^A]A\\_^[": 1,
                "^0H9?t(H": 3,
                "|$ AVH": 7,
                "f9\\$@t": 2,
                "@SUVAVH": 1,
                "(A^^][": 1,
                "SVWAVAWH": 3,
                "0A_A^_^[": 2,
                "|$ ATAVAWH": 4,
                "~@H9FXu": 1,
                "A_A^A\\": 20,
                "VWATAUAWH": 1,
                "0A_A]A\\_^": 1,
                "KXL9KPt": 1,
                "@SUWATAUAVAWH": 1,
                "L$Hu:I": 1,
                "L$Hu9I": 1,
                "A_A^A]A\\_][": 1,
                "L$XM9L$Pt)E": 1,
                "@USAWH": 1,
                "L$ VWATAUAVAWH": 1,
                "l$HA_A^A]A\\_^": 1,
                "y H9y0u": 1,
                "A0H9y8u": 1,
                "@UVWAUAWH": 1,
                "pA_A]_^]": 2,
                "UVWAVH": 1,
                "1D81t+D8q": 1,
                "HA^_^]": 2,
                "G@9E(t": 1,
                "GD9E(t": 1,
                "GH9E(t": 1,
                "ATAVAWH": 7,
                "0A_A^A\\": 11,
                "@USATAVH": 1,
                "@81t)@8q": 1,
                "A^A\\[]": 1,
                "@UWAVH": 2,
                "@8t$Pu": 1,
                "A_A^A\\_^][": 22,
                "@8,8t H": 1,
                "D$@HcH": 4,
                "D$`HcH": 8,
                "L9t$xt": 1,
                "D$pHcH": 3,
                "f9\\$Pt": 1,
                "D$PHcH": 1,
                "fF94@u": 1,
                "\\$Pf9]": 1,
                "fF9<@u": 1,
                "|$ AVL": 1,
                "l$@H9+": 1,
                "|$ AVAWH": 1,
                "l$HI9+": 1,
                "|$0A_A^": 1,
                "D$RH9D$@u": 1,
                "`A^_^][": 1,
                "|$ ATAUAVAWL": 1,
                "|$@A_A^A]A\\": 1,
                "WATAUAVAWL": 1,
                "t$HA_A^A]A\\_": 1,
                "@SUAVH": 1,
                "t$ WAVAWH": 5,
                "0A_A^_": 8,
                "`A_A^A\\_^": 1,
                "PA_A^A\\_^": 1,
                "PA_A^A]A\\_^[": 2,
                "L$ SVWH": 2,
                "@SUVWATH": 1,
                "`A\\_^][": 1,
                "\\$ UVWATAWH": 1,
                "@A_A\\_^]": 1,
                "l$ VWAVH": 5,
                "@SUVWAVAWH": 4,
                "fD9|$0u": 1,
                "HA_A^_^][": 1,
                "0A_A^A]A\\_": 12,
                "@A_A^A]A\\_^]": 2,
                "@UVWATAVH": 1,
                "j$LcJ L": 1,
                "Hct$hff": 1,
                "0A^A\\_^]": 1,
                "@SWAWH": 1,
                "VATAUAVAWH": 1,
                "A_A^A]A\\^": 1,
                "|$ ATAUAVAWD": 1,
                "\\$(A_A^A]A\\": 1,
                "t$ WATAWH": 1,
                "*H9{ t\"D": 1,
                "uVH9{(t$D": 1,
                "C(u,H9{0t\"D": 1,
                "\\$ UVWAVAWH": 1,
                "0A_A^_^]": 2,
                "@UWATAUAVAWH": 1,
                "A_A^A]A\\_]": 1,
                "H9yhu0": 1,
                "K(D9c$t": 1,
                "T$T9L$P": 1,
                "D8c,teL9#u`": 1,
                "f9t$Fu": 1,
                "@A_A^A\\": 3,
                "9D$(}d": 1,
                "9A@t<H": 1,
                "UVWAVAWH": 8,
                "D8:u2H": 1,
                "D9>tXA": 1,
                "`A_A^A]A\\_^]": 8,
                "toH91uj": 15,
                "l$$D8d$!u": 3,
                "D$PH9D$8t": 15,
                "USVWAVAWH": 9,
                "A_A^_^[]": 9,
                "A_A^_^][": 3,
                "H9D$@t": 3,
                "@USVWAWH": 2,
                "0A__^[]": 1,
                "@A__^[]": 1,
                "x ATAVAWH": 18,
                "l$4D8d$1u": 2,
                "|<@ u&@": 2,
                "VUD8oDu!": 3,
                "D$0.fD": 2,
                "D$0,fD": 2,
                "<xt!E3": 2,
                ")D$pH+_": 2,
                "Pp<:u3H": 2,
                "Pp<:u/H": 2,
                "L96tfH": 1,
                "L9|$pv^H": 1,
                "fD9|$Xu": 1,
                "l$ VWATAVAWH": 3,
                "@A_A^_^]": 1,
                "|<8 u!@": 1,
                "l$(L9k": 1,
                "D9T$0u3H": 1,
                "PP<:woH": 2,
                "PP<:u3H": 1,
                "PP<:u/H": 1,
                "p WAVAWH": 2,
                "SUVWATAUAVAWH": 4,
                "H+L$ x<H": 1,
                "8A_A^A]A\\_^][": 1,
                "l$pH9\\$ u": 1,
                "H+L$(xBH": 1,
                "0A_A^A]A\\_^]": 7,
                "USVWATAUAVAWH": 5,
                ")t$0Hc": 3,
                "HA_A^A]A\\_^[]": 3,
                "uNfE9P": 1,
                "@A_A^A]A\\_": 2,
                "AUAVAWH": 3,
                "0A_A^A]": 3,
                "0t)fA98t": 1,
                "D8t$8t": 1,
                "@8l$8t": 3,
                "fD9>u\"": 1,
                "9\\$ ~>L": 1,
                "s WATAUAVAWH": 1,
                "9t$P~.8\\$vt(H": 1,
                "9t$P~98\\$vt3H": 1,
                "l$ VWAUAVAWH": 1,
                "u$HcG$H": 1,
                "t5f9(t": 1,
                "A_A^A]_^": 6,
                "x ATAUAWH": 1,
                "@A_A]A\\": 1,
                "@UATAUAVAWH": 3,
                "!t$(H!t$ I": 1,
                "D8eoupH": 1,
                "@SVWATAUAVAWH": 1,
                "L!|$@L!": 1,
                "D$HHcH": 1,
                "0A_A^A]A\\_^[": 1,
                "WATAVH": 2,
                "@A^A\\_": 1,
                "@A_A^A]": 1,
                "{ ATAVAWH": 1,
                "C0H9C(r": 1,
                "H+D$`H+D$H3": 1,
                "fffffff": 2,
                "D$@!\\$(H!\\$": 1,
                "9\\$(tlM": 1,
                "e0A_A^A]A\\_^]": 1,
                "D8|$Ht": 2,
                "p WATAUAVAWH": 1,
                "eHA_A^A]A\\_^[]": 1,
                "HcD$hH": 1,
                "zu|D!t$ E3": 1,
                "\\$ UVWATAUAVAWH": 4,
                "D9l$dtXH": 1,
                "HcD$PH": 2,
                "T$&@8t$&t9@8r": 1,
                "A81t@@8r": 1,
                "fE98t'": 1,
                "Cu1f9K": 1,
                "f93t$M": 1,
                "L$ SUVWH": 1,
                "^fD9+t": 1,
                "fD9|$bu": 1,
                "H9L$Ht8H": 1,
                "LcA<E3": 1,
                "t$ WATAUAVAWH": 4,
                "D!l$h3": 1,
                "` AUAVAWH": 2,
                "t$8Hc0I": 1,
                "\\$0D9=r": 1,
                "A_A^A]": 3,
                "t$ WATAUAVAW": 2,
                "USVWAVH": 1,
                "9D$XumE": 1,
                "D82u&H": 1,
                "D8t$Ht": 1,
                "Hct$@H": 1,
                "sYHcL$HH": 1,
                "H3E H3E": 1,
                "gfffffffH": 1,
                "D8L$Ht": 1,
                "x AUAVAWH": 2,
                "@SUVWH": 2,
                "D8&t4H": 1,
                "D8d$Ht": 1,
                "D8d$8t": 1,
                "D$DH3\\$@H": 1,
                "L$`tcA": 1,
                "A,A9A(v&L": 1,
                "O,D9O(vcH": 1,
                "HA_A^A]A\\_^][": 2,
                "D$0taA": 1,
                "D$0C+D0(": 1,
                "@09D$0": 1,
                "H$E+H,toA": 1,
                "@(A9P4A": 1,
                "BP4A+@4": 1,
                "xA_A^A]A\\_^][": 1,
                "C9|)$u>C": 1,
                "VWAUAVAWH": 7,
                "A`D9L8": 1,
                ",t0D9J0v*L": 1,
                "0A_A^A]_^": 2,
                "D8M@t^": 1,
                "+J$D8M@": 1,
                "L$ UVWATAUAVAWH": 1,
                "9G$vAD": 1,
                "D9G$s5": 1,
                "l$ VWATAUAVAWE3": 1,
                "D9x(uiH": 1,
                "A(9B(D": 1,
                "X(D9y(": 1,
                "l$PA_A^A]A\\_^": 1,
                "H9_ht/H": 1,
                "x ATAVA": 1,
                "A$+A,t[3": 1,
                "|$0A^A\\": 1,
                "l$`C9,": 1,
                "x AVE3": 1,
                "E8X@t8A": 1,
                "R0E8XAt": 1,
                "B0E8XAt": 1,
                "9_P~%E3": 1,
                "9WP~FM": 1,
                "ukHcOP": 5,
                "t H9X8tV": 1,
                "9YD~*3": 1,
                "9_D~*3": 1,
                "t*H9X8u$@8": 1,
                "E+BhIcJhL": 1,
                "q(9YD~tE3": 1,
                "9_D~E3": 1,
                "\\$Pu&H": 1,
                "_(HcODI": 1,
                "G8HcODI": 1,
                "G0LcGDI": 1,
                "D9g@~2Ic": 1,
                "D+ShHcKhL": 6,
                "+VhHcNhL": 2,
                "C(9C u!": 1,
                "C,9C$u": 1,
                "H!\\$(H!\\$0": 1,
                "f9.uVH": 1,
                "f9.u\"H": 1,
                "tVf91tQH": 1,
                "3fD9 t": 1,
                "tSf91tNH": 1,
                "tyfD9 tsH": 1,
                "tHfD9 tB": 1,
                "@A_A^A\\_^[]": 1,
                "D$DD9T$X": 1,
                "|$h+t$D+": 1,
                "tcH95Q": 1,
                "8UXt$@": 1,
                "XA_A^A]A\\_^[]": 1,
                "@USVWH": 1,
                "9WP~IM": 3,
                "H99u{H": 1,
                "91~*E3": 1,
                "ePA_A^]": 1,
                "u59_ @": 1,
                "0A_A^A\\_^": 1,
                "L9w t?H": 1,
                "H9J t1": 1,
                "w 9^ w": 1,
                "8\\$!t)A": 1,
                "tW8\\$!u": 1,
                "8\\$\"t5D": 1,
                "u)!t$(H": 1,
                "F(LcF I": 1,
                "9_P~$E3": 2,
                "h UAVAWH": 1,
                "UVWATAVH": 1,
                "@A^A\\_^]": 1,
                "u!!D$(H": 2,
                "9_P~LE3": 1,
                "9WP~EM": 1,
                "u%!D$@H": 1,
                "K 9N vEH": 1,
                "8D$ u+I": 1,
                "C4D+@ H": 1,
                "D$(A9h": 1,
                "|$ UATAUAVAWH": 2,
                "D$`csm": 1,
                "H9BhuTH": 1,
                "~`8A!t": 1,
                "PA_A^_^[": 1,
                "^ffffff": 1,
                "ffffff": 1,
                "D$`HcK": 1,
                "H9D$(u^L": 1,
                "H#t$0tB": 1,
                "H+G H=": 1,
                "@SUVWATAUAVAWH": 1,
                "H+C H=": 1,
                "A_A^A]A\\_^][": 1,
                "@A_A^]": 2,
                "t.8\\$P": 1,
                "t=L95]4": 1,
                "D9t$htrH": 1,
                "@8t$8t": 1,
                "H(H9J(u": 1,
                "bad allocation": 1,
                "permission denied": 1,
                "file exists": 1,
                "no such device": 1,
                "filename too long": 1,
                "device or resource busy": 1,
                "io error": 1,
                "directory not empty": 1,
                "invalid argument": 1,
                "no space on device": 1,
                "no such file or directory": 1,
                "function not supported": 1,
                "no lock available": 1,
                "not enough memory": 1,
                "resource unavailable try again": 1,
                "cross device link": 1,
                "operation canceled": 1,
                "too many files open": 1,
                "permission_denied": 1,
                "address_in_use": 1,
                "address_not_available": 1,
                "address_family_not_supported": 1,
                "connection_already_in_progress": 1,
                "bad_file_descriptor": 1,
                "connection_aborted": 1,
                "connection_refused": 1,
                "connection_reset": 1,
                "destination_address_required": 1,
                "bad_address": 1,
                "host_unreachable": 1,
                "operation_in_progress": 1,
                "interrupted": 1,
                "invalid_argument": 1,
                "already_connected": 1,
                "too_many_files_open": 1,
                "message_size": 1,
                "filename_too_long": 1,
                "network_down": 1,
                "network_reset": 1,
                "network_unreachable": 1,
                "no_buffer_space": 1,
                "no_protocol_option": 1,
                "not_connected": 1,
                "not_a_socket": 1,
                "operation_not_supported": 1,
                "protocol_not_supported": 1,
                "wrong_protocol_type": 1,
                "timed_out": 1,
                "operation_would_block": 1,
                "address family not supported": 1,
                "address in use": 1,
                "address not available": 1,
                "already connected": 1,
                "argument list too long": 1,
                "argument out of domain": 1,
                "bad address": 1,
                "bad file descriptor": 1,
                "bad message": 1,
                "broken pipe": 1,
                "connection aborted": 1,
                "connection already in progress": 1,
                "connection refused": 1,
                "connection reset": 1,
                "destination address required": 1,
                "executable format error": 1,
                "file too large": 1,
                "host unreachable": 1,
                "identifier removed": 1,
                "illegal byte sequence": 1,
                "inappropriate io control operation": 1,
                "invalid seek": 1,
                "is a directory": 1,
                "message size": 1,
                "network down": 1,
                "network reset": 1,
                "network unreachable": 1,
                "no buffer space": 1,
                "no child process": 1,
                "no link": 1,
                "no message available": 1,
                "no message": 1,
                "no protocol option": 1,
                "no stream resources": 1,
                "no such device or address": 1,
                "no such process": 1,
                "not a directory": 1,
                "not a socket": 1,
                "not a stream": 1,
                "not connected": 1,
                "not supported": 1,
                "operation in progress": 1,
                "operation not permitted": 1,
                "operation not supported": 1,
                "operation would block": 1,
                "owner dead": 1,
                "protocol error": 1,
                "protocol not supported": 1,
                "read only file system": 1,
                "resource deadlock would occur": 1,
                "result out of range": 1,
                "state not recoverable": 1,
                "stream timeout": 1,
                "text file busy": 1,
                "timed out": 1,
                "too many files open in system": 1,
                "too many links": 1,
                "too many symbolic link levels": 1,
                "value too large": 1,
                "wrong protocol type": 1,
                "0123456789ABCDEFabcdef-+Xx": 3,
                "0123456789-+Ee": 3,
                "0123456789ABCDEFabcdef-+XxPp": 3,
                ":Sun:Sunday:Mon:Monday:Tue:Tuesday:Wed:Wednesday:Thu:Thursday:Fri:Friday:Sat:Saturday": 1,
                ":Jan:January:Feb:February:Mar:March:Apr:April:May:May:Jun:June:Jul:July:Aug:August:Sep:September:Oct:October:Nov:November:Dec:December": 1,
                "0123456789-": 6,
                "%b %d %H : %M : %S %Y": 1,
                "%m / %d / %y": 1,
                ":AM:am:PM:pm": 1,
                "%I : %M : %S %p": 1,
                "%H : %M": 1,
                "%H : %M : S": 1,
                "%d / %m / %y": 1,
                "+v$x+v$xv$+xv+$xv$+x+$vx+$vx$v+x+$vx$+vx+v $+v $v $+v +$v $++$ v+$ v$ v++$ v$+ v+xv$+ v$v$ +v+ $v$ ++x$v+ $v$v ++ $v$ +v": 1,
                "A0123456789abcdefghijklmnopqrstuvwxyz": 1,
                "0123456789abcdefghijklmnopqrstuvwxyz": 1,
                "0123456789abcdefABCDEF": 1,
                "Unknown exception": 1,
                "CorExitProcess": 1,
                "_hypot": 1,
                "!\"#$%&'()*+,-./0123456789:": 3,
                "<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~": 1,
                "<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~": 1,
                "bad exception": 1,
                "Lock already taken": 1,
                "pEvents": 1,
                "SetThreadGroupAffinity": 1,
                "GetThreadGroupAffinity": 1,
                "GetCurrentProcessorNumberEx": 1,
                "GetLogicalProcessorInformationEx": 1,
                "FlsAlloc": 1,
                "FlsFree": 1,
                "FlsGetValue": 1,
                "FlsSetValue": 1,
                "InitializeCriticalSectionEx": 1,
                "CreateEventExW": 1,
                "CreateSemaphoreExW": 1,
                "SetThreadStackGuarantee": 1,
                "CreateThreadpoolTimer": 1,
                "SetThreadpoolTimer": 1,
                "WaitForThreadpoolTimerCallbacks": 1,
                "CloseThreadpoolTimer": 1,
                "CreateThreadpoolWait": 1,
                "SetThreadpoolWait": 1,
                "CloseThreadpoolWait": 1,
                "FlushProcessWriteBuffers": 1,
                "FreeLibraryWhenCallbackReturns": 1,
                "GetCurrentProcessorNumber": 1,
                "GetLogicalProcessorInformation": 2,
                "CreateSymbolicLinkW": 1,
                "SetDefaultDllDirectories": 1,
                "EnumSystemLocalesEx": 1,
                "CompareStringEx": 1,
                "GetDateFormatEx": 1,
                "GetLocaleInfoEx": 1,
                "GetTimeFormatEx": 1,
                "GetUserDefaultLocaleName": 1,
                "IsValidLocaleName": 1,
                "LCMapStringEx": 1,
                "GetCurrentPackageId": 1,
                "GetTickCount64": 1,
                "GetFileInformationByHandleExW": 1,
                "SetFileInformationByHandleW": 1,
                "Sunday": 1,
                "Monday": 1,
                "Tuesday": 1,
                "Wednesday": 1,
                "Thursday": 1,
                "Friday": 1,
                "Saturday": 1,
                "January": 1,
                "February": 1,
                "August": 1,
                "September": 1,
                "October": 1,
                "November": 1,
                "December": 1,
                "MM/dd/yy": 1,
                "dddd, MMMM dd, yyyy": 1,
                "HH:mm:ss": 1,
                "<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~": 1,
                "(null)": 1,
                "`h````": 1,
                "xpxxxx": 1,
                "pScheduler": 1,
                "version": 1,
                "eventObject": 1,
                "ppVirtualProcessorRoots": 1,
                "UTF-16LE": 1,
                "UNICODE": 1,
                "_nextafter": 1,
                "SunMonTueWedThuFriSat": 1,
                "JanFebMarAprMayJunJulAugSepOctNovDec": 1,
                "__based(": 1,
                "__cdecl": 1,
                "__pascal": 1,
                "__stdcall": 1,
                "__thiscall": 1,
                "__fastcall": 1,
                "__vectorcall": 1,
                "__clrcall": 1,
                "__eabi": 1,
                "__ptr64": 1,
                "__restrict": 1,
                "__unaligned": 1,
                "restrict(": 1,
                "delete": 1,
                "operator": 1,
                "`vftable'": 1,
                "`vbtable'": 1,
                "`vcall'": 1,
                "`typeof'": 1,
                "`local static guard'": 1,
                "`string'": 1,
                "`vbase destructor'": 1,
                "`vector deleting destructor'": 1,
                "`default constructor closure'": 1,
                "`scalar deleting destructor'": 1,
                "`vector constructor iterator'": 1,
                "`vector destructor iterator'": 1,
                "`vector vbase constructor iterator'": 1,
                "`virtual displacement map'": 1,
                "`eh vector constructor iterator'": 1,
                "`eh vector destructor iterator'": 1,
                "`eh vector vbase constructor iterator'": 1,
                "`copy constructor closure'": 1,
                "`udt returning'": 1,
                "`local vftable'": 1,
                "`local vftable constructor closure'": 1,
                "delete[]": 1,
                "`omni callsig'": 1,
                "`placement delete closure'": 1,
                "`placement delete[] closure'": 1,
                "`managed vector constructor iterator'": 1,
                "`managed vector destructor iterator'": 1,
                "`eh vector copy constructor iterator'": 1,
                "`eh vector vbase copy constructor iterator'": 1,
                "`dynamic initializer for '": 1,
                "`dynamic atexit destructor for '": 1,
                "`vector copy constructor iterator'": 1,
                "`vector vbase copy constructor iterator'": 1,
                "`managed vector copy constructor iterator'": 1,
                "`local static thread guard'": 1,
                "Type Descriptor'": 1,
                "Base Class Descriptor at (": 1,
                "Base Class Array'": 1,
                "Class Hierarchy Descriptor'": 1,
                "Complete Object Locator'": 1,
                "`h`hhh": 1,
                "xppwpp": 1,
                "MessageBoxW": 1,
                "GetActiveWindow": 1,
                "GetLastActivePopup": 1,
                "GetUserObjectInformationW": 1,
                "GetProcessWindowStation": 1,
                "CreateFile2": 1,
                "SchedulerKind": 1,
                "MaxConcurrency": 1,
                "MinConcurrency": 1,
                "TargetOversubscriptionFactor": 1,
                "LocalContextCacheSize": 1,
                "ContextStackSize": 1,
                "ContextPriority": 1,
                "SchedulingProtocol": 1,
                "DynamicProgressFeedback": 1,
                "WinRTInitialization": 1,
                "MaxPolicyElementKey": 1,
                "Mbp?333333": 1,
                "pContext": 1,
                "pExecutionResource": 1,
                "CreateRemoteThreadEx": 1,
                "CreateUmsCompletionList": 1,
                "CreateUmsThreadContext": 1,
                "DeleteProcThreadAttributeList": 1,
                "DeleteUmsCompletionList": 1,
                "DeleteUmsThreadContext": 1,
                "DequeueUmsCompletionListItems": 1,
                "EnterUmsSchedulingMode": 1,
                "ExecuteUmsThread": 1,
                "GetCurrentUmsThread": 1,
                "GetNextUmsListItem": 1,
                "GetUmsCompletionListEvent": 1,
                "InitializeProcThreadAttributeList": 1,
                "QueryUmsThreadInformation": 1,
                "SetUmsThreadInformation": 1,
                "UmsThreadYield": 1,
                "UpdateProcThreadAttribute": 1,
                "RoInitialize": 1,
                "RoUninitialize": 1,
                "RegisterTraceGuidsW": 1,
                "UnregisterTraceGuids": 1,
                "TraceEvent": 1,
                "GetTraceLoggerHandle": 1,
                "GetTraceEnableLevel": 1,
                "GetTraceEnableFlags": 1,
                "pThreadProxy": 1,
                "1#SNAN": 1,
                "1#QNAN": 1,
                "?UUUUUU": 4,
                "switchState": 1,
                "Access violation - no RTTI data!": 1,
                "Bad dynamic_cast!": 1,
                "?8bunz8": 1,
                "?@En[vP": 1,
                "[*ncd>0": 1,
                "S>$hkDh$h>[2": 1,
                "UA>N0Wl": 1,
                "bad locale name": 1,
                "bad cast": 1,
                "ios_base::badbit set": 1,
                "ios_base::failbit set": 1,
                "generic": 1,
                "iostream": 1,
                "iostream stream error": 1,
                "unknown error": 1,
                "ios_base::eofbit set": 1,
                "invalid string position": 1,
                "string too long": 1,
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/": 1,
                "A67D0DB8A2A173347654432503702AA3": 1,
                "A67D0DB8A2A173347654432503702222": 1,
                "A67D0DB885A3432576548A2A03707334": 1,
                "A67D0DB885A3432576548A2A03701111": 1,
                "20202020202020202020202020202020": 1,
                "A67D0DB885A343257654": 1,
                "20202020202020202020202020201111": 1,
                "A67D0DB885A3432576548A2A00001111": 1,
                "20202020202020202020202020202222": 1,
                "n.n.fc.": 1,
                "2020202020202020202020202020": 1,
                "2020:2020:2020:2020:2020:2020:2020:2222": 1,
                "|#|DownloadFile|#|Commandexecuted successfully": 1,
                "R:SF?commandId=CmdResult=": 1,
                "n.n.v.": 1,
                "00000000-0000-0000-0000-000000000000": 1,
                "Microsoft\\windows\\Tmp98871": 1,
                "cmd /a /c echo =========================== (User Name) ========================== > \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c echo %userdomain%\\%username% >>\"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\" 2>&1": 1,
                "cmd /a /c @echo off": 8,
                "cmd /a /c @echo: >>\"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 24,
                "cmd /a /c echo ========================== (IP Config) ========================== >> \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c ipconfig /all >>\"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c echo ========================== (Net View) ========================== >> \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c net view >>\"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c echo ========================== (Net User) ========================== >> \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c net user administrator /domain >>\"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c echo ========================== (NetStat) ========================== >> \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c netstat -ant >>\"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c echo ========================== (SystemInfo) ========================== >> \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c systeminfo >> \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c echo ========================== ( TaskList) ========================== >> \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c tasklist >> \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c echo ========================== ( ServiceList) ========================== >> \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c sc query >> \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /a /c echo ========= (SecInfo) ================== >> \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 1,
                "cmd /u /c type \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\" > \"%localappdata%\\Microsoft\\Windows\\tmp765643.txt\"": 1,
                "del \"%localappdata%\\Microsoft\\Windows\\jTmp765643.txt\"": 2,
                "cmd /u /c WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter  Path AntiVirusProduct": 1,
                "Get   >>": 2,
                "\"%localappdata%\\Microsoft\\Windows\\Tmp765643.txt\"": 12,
                "cmd /u /c echo ---------------------------------------------------------------------------": 6,
                "cmd /u /c WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct": 1,
                "cmd /u /c WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter  Path FirewallProduct": 1,
                "/Format:List >>": 3,
                "cmd /u /c WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path FirewallProduct": 1,
                "Get     /Format:List >>": 1,
                "cmd /u /c WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter  Path AntiSpywareProduct  Get": 1,
                "cmd /u /c WMIC /Node:localhost /Namespace:\\\\root\\SecurityCenter2 Path AntiSpywareProduct  Get": 1,
                "rem %localappdata%\\Microsoft\\Windows\\Tmp765643.txt#1": 1,
                "Microsoft\\Windows\\TmpFiles\\": 1,
                ":\\windows\\temp\\tmp887399": 1,
                "\" & echo \"Finished\" >> \"": 1,
                "ipconfig /all > \"": 1,
                "\"Finished\"": 1,
                "DNS Servers": 1,
                "c:\\windows\\temp\\tmp8873": 1,
                "%appdata%": 1,
                "Microsoft\\Windows": 1,
                "%programdata%": 1,
                "echo %programdata% > \"": 1,
                "Executed Successfully": 1,
                "R:GF?cId=": 1,
                "&message=": 1,
                "appId=": 1,
                "&type=": 1,
                "R:ReId?Id=": 1,
                "General": 1,
                "DownloadFile": 1,
                "UploadFile": 1,
                "R:SF?cId=": 1,
                "\" & timeout /t 3 /nobreak & start \"\" \"": 1,
                "\\dd\" \"": 1,
                "move \"": 1,
                "Replacement Done": 1,
                "Replace bad file": 1,
                "R:GAC?appId=": 1,
                "R:CR?cd=": 1,
                "ChangeAliveSeconds": 1,
                "ChangeAddress": 1,
                "\\Microsoft\\Windows\\Tmp9932u1.bat": 1,
                "GetConfig": 1,
                "GetConfig:::": 1,
                "RunNewVersion": 1,
                "restart": 1,
                "remove": 1,
                "FastAlive": 1,
                "Not Done": 1,
                "ExecuteKL": 1,
                "GetVersion": 1,
                "PauseUpload": 1,
                "ResumeUpload": 1,
                "PauseDownload": 1,
                "ResumeDownload": 1,
                "ImmediateResetRam": 1,
                "&uniqueId=": 1,
                "R:AV?appId=": 1,
                ",why=ram,size=": 1,
                "\" wait=10000)": 1,
                "Restart on high level ram usage,": 1,
                "invalid unordered_map<K, T> key": 1,
                "vector<T> too long": 1,
                "invalid vector<T> subscript": 1,
                "list<T> too long": 1,
                "invalid stoi argument": 1,
                "stoi argument out of range": 1,
                "0123456789ABCDEF": 1,
                "Qkkbal": 2,
                "system": 1,
                "8.8.8.8": 2,
                "1.0.197": 2,
                "need dictionary": 1,
                "invalid literal/length code": 1,
                "invalid distance code": 1,
                "invalid block type": 1,
                "invalid stored block lengths": 1,
                "too many length or distance symbols": 1,
                "invalid bit length repeat": 1,
                "oversubscribed dynamic bit lengths tree": 1,
                "incomplete dynamic bit lengths tree": 1,
                "oversubscribed literal/length tree": 1,
                "incomplete literal/length tree": 1,
                "oversubscribed distance tree": 1,
                "incomplete distance tree": 1,
                "empty distance tree with lengths": 1,
                "unknown compression method": 1,
                "invalid window size": 1,
                "incorrect header check": 1,
                "incorrect data check": 1,
                "2>&1)  > \"": 1,
                "(taskkill /f /pid \"": 1,
                "ct_init: length != 256": 1,
                "ct_init: dist != 256": 1,
                "ct_init: 256+dist != 512": 1,
                "bit length overflow": 1,
                "code %d bits %d->%d": 1,
                "inconsistent bit counts": 1,
                "gen_codes: max_code %d": 1,
                "dyn trees: dyn %ld, stat %ld": 1,
                "not enough codes": 1,
                "too many codes": 1,
                "bl counts:": 1,
                "bl code %2d": 1,
                "bl tree: sent %ld": 1,
                "lit tree: sent %ld": 1,
                "dist tree: sent %ld": 1,
                "lit data: dyn %ld, stat %ld": 1,
                "dist data: dyn %ld, stat %ld": 1,
                "opt %lu(%lu) stat %lu(%lu) stored %lu lit %u dist %u": 1,
                "bad compressed size": 1,
                "ct_tally: bad match": 1,
                "last_lit %u, last_dist %u, in %ld, out ~%ld(%ld%%)": 1,
                "bad d_code": 1,
                "invalid length": 1,
                "output buffer too small for in-memory compression": 1,
                "bad pack level": 1,
                "insufficient lookahead": 1,
                "no future": 1,
                "wild scan": 1,
                "more < 2": 1,
                "C:\\Users\\Void\\Desktop\\wmiPrv\\v 10.0.197\\x64\\Release\\swchost.pdb": 1,
                "WideCharToMultiByte": 1,
                "RaiseException": 1,
                "GetLastError": 1,
                "InitializeCriticalSectionAndSpinCount": 1,
                "DeleteCriticalSection": 1,
                "CloseHandle": 1,
                "DecodePointer": 1,
                "CreateThread": 1,
                "SetEvent": 1,
                "WaitForSingleObject": 1,
                "HeapAlloc": 1,
                "HeapFree": 1,
                "HeapReAlloc": 1,
                "HeapSize": 1,
                "GetProcessHeap": 1,
                "CreateTimerQueue": 1,
                "CreateEventW": 1,
                "CreateTimerQueueTimer": 1,
                "DeleteTimerQueueTimer": 1,
                "DeleteTimerQueue": 1,
                "GetCurrentProcessId": 1,
                "CreateToolhelp32Snapshot": 1,
                "Process32NextW": 1,
                "SetConsoleCtrlHandler": 1,
                "SetErrorMode": 1,
                "SetUnhandledExceptionFilter": 1,
                "CreateFileA": 1,
                "SetFilePointer": 1,
                "ReadFile": 1,
                "SystemTimeToFileTime": 1,
                "GetCurrentDirectoryW": 1,
                "MultiByteToWideChar": 1,
                "LocalFileTimeToFileTime": 1,
                "GetFileAttributesW": 1,
                "CreateDirectoryW": 1,
                "CreateFileW": 1,
                "WriteFile": 1,
                "SetFileTime": 1,
                "DeleteFileW": 1,
                "FindFirstFileW": 1,
                "GetModuleFileNameW": 1,
                "CreateProcessW": 1,
                "GetConsoleWindow": 1,
                "FindNextFileW": 1,
                "FindClose": 1,
                "OpenProcess": 1,
                "TerminateProcess": 1,
                "GetFileAttributesA": 1,
                "GetWindowsDirectoryW": 1,
                "GetCurrentProcess": 1,
                "GetSystemInfo": 1,
                "FileTimeToSystemTime": 1,
                "GetFileInformationByHandle": 1,
                "GetFileSize": 1,
                "UnmapViewOfFile": 1,
                "GetLocalTime": 1,
                "GetTickCount": 1,
                "KERNEL32.dll": 1,
                "GetMessageW": 1,
                "DispatchMessageW": 1,
                "TranslateMessage": 1,
                "GetSystemMetrics": 1,
                "LoadAcceleratorsW": 1,
                "TranslateAcceleratorW": 1,
                "wsprintfW": 1,
                "ReleaseDC": 1,
                "GetDesktopWindow": 1,
                "USER32.dll": 1,
                "CreateCompatibleBitmap": 1,
                "CreateCompatibleDC": 1,
                "SelectObject": 1,
                "BitBlt": 1,
                "DeleteObject": 1,
                "GDI32.dll": 1,
                "SHGetSpecialFolderPathW": 1,
                "SHGetFolderPathW": 1,
                "SHELL32.dll": 1,
                "StringFromGUID2": 1,
                "CoCreateGuid": 1,
                "ole32.dll": 1,
                "GdipGetImageEncodersSize": 1,
                "GdipGetImageEncoders": 1,
                "GdiplusStartup": 1,
                "GdipCreateBitmapFromHBITMAP": 1,
                "GdipFree": 1,
                "GdipAlloc": 1,
                "GdipCloneImage": 1,
                "GdipDisposeImage": 1,
                "GdipSaveImageToFile": 1,
                "GdiplusShutdown": 1,
                "gdiplus.dll": 1,
                "WS2_32.dll": 1,
                "QueryWorkingSet": 1,
                "GetProcessMemoryInfo": 1,
                "PSAPI.DLL": 1,
                "GetCurrentThreadId": 1,
                "GetStringTypeW": 1,
                "EncodePointer": 1,
                "EnterCriticalSection": 1,
                "LeaveCriticalSection": 1,
                "GetSystemTimeAsFileTime": 1,
                "IsDebuggerPresent": 1,
                "IsProcessorFeaturePresent": 1,
                "ExitProcess": 1,
                "GetModuleHandleExW": 1,
                "GetProcAddress": 1,
                "AreFileApisANSI": 1,
                "GetCPInfo": 1,
                "GetCommandLineA": 1,
                "RtlPcToFileHeader": 1,
                "RtlLookupFunctionEntry": 1,
                "RtlUnwindEx": 1,
                "WaitForSingleObjectEx": 1,
                "SignalObjectAndWait": 1,
                "SwitchToThread": 1,
                "SetThreadPriority": 1,
                "GetThreadPriority": 1,
                "TlsAlloc": 1,
                "TlsGetValue": 1,
                "TlsSetValue": 1,
                "TlsFree": 1,
                "ChangeTimerQueueTimer": 1,
                "GetModuleHandleW": 1,
                "GetNumaHighestNodeNumber": 1,
                "GetProcessAffinityMask": 1,
                "SetThreadAffinityMask": 1,
                "RegisterWaitForSingleObject": 1,
                "UnregisterWait": 1,
                "RtlCaptureContext": 1,
                "RtlVirtualUnwind": 1,
                "UnhandledExceptionFilter": 1,
                "SetLastError": 1,
                "GetStartupInfoW": 1,
                "CreateSemaphoreW": 1,
                "GetDateFormatW": 1,
                "GetTimeFormatW": 1,
                "CompareStringW": 1,
                "LCMapStringW": 1,
                "GetLocaleInfoW": 1,
                "IsValidLocale": 1,
                "GetUserDefaultLCID": 1,
                "EnumSystemLocalesW": 1,
                "GetConsoleCP": 1,
                "GetConsoleMode": 1,
                "IsValidCodePage": 1,
                "GetACP": 1,
                "GetOEMCP": 1,
                "GetCurrentThread": 1,
                "GetStdHandle": 1,
                "FreeLibrary": 1,
                "LoadLibraryExW": 1,
                "MoveFileExW": 1,
                "GetFileType": 1,
                "SetFilePointerEx": 1,
                "FlushFileBuffers": 1,
                "GetModuleFileNameA": 1,
                "QueryPerformanceCounter": 1,
                "GetEnvironmentStringsW": 1,
                "FreeEnvironmentStringsW": 1,
                "OutputDebugStringW": 1,
                "GetThreadTimes": 1,
                "FreeLibraryAndExitThread": 1,
                "GetModuleHandleA": 1,
                "GetVersionExW": 1,
                "VirtualAlloc": 1,
                "VirtualFree": 1,
                "VirtualProtect": 1,
                "DuplicateHandle": 1,
                "ReleaseSemaphore": 1,
                "InitializeSListHead": 1,
                "InterlockedPopEntrySList": 1,
                "InterlockedPushEntrySList": 1,
                "InterlockedFlushSList": 1,
                "QueryDepthSList": 1,
                "UnregisterWaitEx": 1,
                "GetTimeZoneInformation": 1,
                "SetStdHandle": 1,
                "WriteConsoleW": 1,
                "ReadConsoleW": 1,
                "LoadLibraryW": 1,
                "SetEndOfFile": 1,
                "SetEnvironmentVariableA": 1,
                "Copyright (c) 1992-2004 by P.J. Plauger, licensed by Dinkumware, Ltd. ALL RIGHTS RESERVED.": 1,
                "abcdefghijklmnopqrstuvwxyz": 2,
                "ABCDEFGHIJKLMNOPQRSTUVWXYZ": 2,
                ".?AVbad_alloc@std@@": 1,
                ".?AVlength_error@std@@": 1,
                ".?AV_Locimp@locale@std@@": 1,
                ".?AV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@": 1,
                ".?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@": 1,
                ".?AV?$numpunct@D@std@@": 1,
                ".?AV?$codecvt@GDH@std@@": 1,
                ".?AV?$ctype@G@std@@": 1,
                ".?AV?$num_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@": 1,
                ".?AV?$num_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@": 1,
                ".?AV?$numpunct@_W@std@@": 1,
                ".?AUmessages_base@std@@": 1,
                ".?AUmoney_base@std@@": 1,
                ".?AUtime_base@std@@": 1,
                ".?AV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@": 1,
                ".?AV?$collate@_W@std@@": 1,
                ".?AV?$messages@_W@std@@": 1,
                ".?AV?$money_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@": 1,
                ".?AV?$money_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@": 1,
                ".?AV?$moneypunct@_W$0A@@std@@": 1,
                ".?AV?$_Mpunct@_W@std@@": 1,
                ".?AV?$moneypunct@_W$00@std@@": 1,
                ".?AV?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@": 1,
                ".?AV?$time_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@": 1,
                ".?AV?$num_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@": 1,
                ".?AV?$numpunct@G@std@@": 1,
                ".?AV?$collate@G@std@@": 1,
                ".?AV?$messages@G@std@@": 1,
                ".?AV?$money_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@": 1,
                ".?AV?$money_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@": 1,
                ".?AV?$moneypunct@G$0A@@std@@": 1,
                ".?AV?$_Mpunct@G@std@@": 1,
                ".?AV?$moneypunct@G$00@std@@": 1,
                ".?AV?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@": 1,
                ".?AV?$time_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@": 1,
                ".?AV?$collate@D@std@@": 1,
                ".?AV?$messages@D@std@@": 1,
                ".?AV?$money_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@": 1,
                ".?AV?$money_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@": 1,
                ".?AV?$moneypunct@D$0A@@std@@": 1,
                ".?AV?$_Mpunct@D@std@@": 1,
                ".?AV?$moneypunct@D$00@std@@": 1,
                ".?AV?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@": 1,
                ".?AV?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@": 1,
                ".?AVtype_info@@": 1,
                ".?AVbad_typeid@std@@": 1,
                ".?AV__non_rtti_object@std@@": 1,
                ".?AVbad_exception@std@@": 1,
                ".?AVimproper_lock@Concurrency@@": 1,
                ".?AVWaitBlock@details@Concurrency@@": 1,
                ".?AVSingleWaitBlock@details@Concurrency@@": 1,
                ".?AVMultiWaitBlock@details@Concurrency@@": 1,
                ".?AVWaitAllBlock@details@Concurrency@@": 1,
                ".?AVWaitAnyBlock@details@Concurrency@@": 1,
                ".?AV?$_MallocaArrayHolder@PEAVContext@Concurrency@@@details@Concurrency@@": 1,
                ".?AVscheduler_resource_allocation_error@Concurrency@@": 1,
                ".?AVinvalid_operation@Concurrency@@": 1,
                ".?AV_Interruption_exception@details@Concurrency@@": 1,
                ".?AVscheduler_worker_creation_error@Concurrency@@": 1,
                ".?AVunsupported_os@Concurrency@@": 1,
                ".?AVimproper_scheduler_attach@Concurrency@@": 1,
                ".?AVimproper_scheduler_reference@Concurrency@@": 1,
                ".?AVcontext_unblock_unbalanced@Concurrency@@": 1,
                ".?AVcontext_self_unblock@Concurrency@@": 1,
                ".?AVmissing_wait@Concurrency@@": 1,
                ".?AVinvalid_scheduler_policy_key@Concurrency@@": 1,
                ".?AVinvalid_scheduler_policy_value@Concurrency@@": 1,
                ".?AVinvalid_scheduler_policy_thread_specification@Concurrency@@": 1,
                ".?AVnested_scheduler_missing_detach@Concurrency@@": 1,
                ".?AVinvalid_oversubscribe_operation@Concurrency@@": 1,
                ".?AVResourceManager@details@Concurrency@@": 1,
                ".?AUIResourceManager@Concurrency@@": 1,
                ".?AUITopologyExecutionResource@Concurrency@@": 1,
                ".?AUITopologyNode@Concurrency@@": 1,
                ".?AUTopologyObject@GlobalCore@details@Concurrency@@": 1,
                ".?AUTopologyObject@GlobalNode@details@Concurrency@@": 1,
                ".?AVScheduleGroupBase@details@Concurrency@@": 1,
                ".?AVScheduleGroup@Concurrency@@": 1,
                ".?AVCacheLocalScheduleGroup@details@Concurrency@@": 1,
                ".?AVFairScheduleGroup@details@Concurrency@@": 1,
                ".?AVSchedulerBase@details@Concurrency@@": 1,
                ".?AVScheduler@Concurrency@@": 1,
                ".?AU_Chore@details@Concurrency@@": 1,
                ".?AVRealizedChore@details@Concurrency@@": 1,
                ".?AVCacheLocalScheduleGroupSegment@details@Concurrency@@": 1,
                ".?AVScheduleGroupSegmentBase@details@Concurrency@@": 1,
                ".?AVFairScheduleGroupSegment@details@Concurrency@@": 1,
                ".?AVContextBase@details@Concurrency@@": 1,
                ".?AVContext@Concurrency@@": 1,
                ".?AV_RefCounter@details@Concurrency@@": 1,
                ".?AV_CancellationTokenRegistration@details@Concurrency@@": 1,
                ".?AVCancellationTokenRegistration_TaskProc@details@Concurrency@@": 1,
                ".?AV?$_MallocaArrayHolder@PEAVevent@Concurrency@@@details@Concurrency@@": 1,
                ".?AVExecutionResource@details@Concurrency@@": 1,
                ".?AUIExecutionResource@Concurrency@@": 1,
                ".?AVSchedulerProxy@details@Concurrency@@": 1,
                ".?AUISchedulerProxy@Concurrency@@": 1,
                ".?AVFreeThreadProxy@details@Concurrency@@": 1,
                ".?AVThreadProxy@details@Concurrency@@": 1,
                ".?AUIThreadProxy@Concurrency@@": 1,
                ".?AUIThreadProxyFactory@details@Concurrency@@": 1,
                ".?AVFreeThreadProxyFactory@details@Concurrency@@": 1,
                ".?AV?$ThreadProxyFactory@VFreeThreadProxy@details@Concurrency@@@details@Concurrency@@": 1,
                ".?AVVirtualProcessor@details@Concurrency@@": 1,
                ".?AVInternalContextBase@details@Concurrency@@": 1,
                ".?AUIExecutionContext@Concurrency@@": 1,
                ".?AVExternalContextBase@details@Concurrency@@": 1,
                ".?AVThreadScheduler@details@Concurrency@@": 1,
                ".?AUIScheduler@Concurrency@@": 1,
                ".?AVThreadInternalContext@details@Concurrency@@": 1,
                ".P6AXPEAV__ExceptionPtr@@@Z": 1,
                ".?AV_Ref_count_base@std@@": 1,
                ".?AV?$_Ref_count@V__ExceptionPtr@@@std@@": 1,
                ".?AV?$_Ref_count_del_alloc@V__ExceptionPtr@@P6AXPEAV1@@ZV?$_DebugMallocator@H@@@std@@": 1,
                ".?AVVirtualProcessorRoot@details@Concurrency@@": 1,
                ".?AUIVirtualProcessorRoot@Concurrency@@": 1,
                ".?AVFreeVirtualProcessorRoot@details@Concurrency@@": 1,
                ".?AVThreadVirtualProcessor@details@Concurrency@@": 1,
                ".?AV?$ctype@D@std@@": 1,
                ".?AUctype_base@std@@": 1,
                ".?AVfacet@locale@std@@": 1,
                ".?AVbad_cast@std@@": 1,
                ".?AV_Facet_base@std@@": 1,
                ".?AV_Iostream_error_category@std@@": 1,
                ".?AV_Generic_error_category@std@@": 1,
                ".?AVerror_category@std@@": 1,
                ".?AVfailure@ios_base@std@@": 1,
                ".?AVsystem_error@std@@": 1,
                ".?AV_System_error@std@@": 1,
                ".?AVruntime_error@std@@": 1,
                ".?AVexception@std@@": 1,
                ".?AV?$basic_istream@DU?$char_traits@D@std@@@std@@": 1,
                ".?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@": 1,
                ".?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@": 1,
                ".?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@": 1,
                ".?AV?$codecvt@DDH@std@@": 1,
                ".?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@": 1,
                ".?AVcodecvt_base@std@@": 1,
                ".?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@": 1,
                ".?AVout_of_range@std@@": 1,
                ".?AV?$basic_ios@DU?$char_traits@D@std@@@std@@": 1,
                ".?AVios_base@std@@": 1,
                ".?AV?$_Iosb@H@std@@": 1,
                ".?AVinvalid_argument@std@@": 1,
                ".?AV_System_error_category@std@@": 1,
                ".?AV?$codecvt_utf8_utf16@_W$0BAPPPP@$0A@@std@@": 1,
                ".?AV?$codecvt_utf8@_W$0BAPPPP@$0A@@std@@": 1,
                ".?AV?$basic_ofstream@_WU?$char_traits@_W@std@@@std@@": 1,
                ".?AV?$basic_ifstream@_WU?$char_traits@_W@std@@@std@@": 1,
                ".?AV?$basic_filebuf@_WU?$char_traits@_W@std@@@std@@": 1,
                ".?AV?$ctype@_W@std@@": 1,
                ".?AV?$basic_istream@_WU?$char_traits@_W@std@@@std@@": 1,
                ".?AV?$codecvt@_WDH@std@@": 1,
                ".?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@": 1,
                ".?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@": 1,
                ".?AVBitmap@Gdiplus@@": 1,
                ".?AVImage@Gdiplus@@": 1,
                ".?AVGdiplusBase@Gdiplus@@": 1,
                ".?AVlogic_error@std@@": 1,
                ".?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@": 1,
                "C:\\bf32d3b0\\b662ef49.exe": 1,
                "<?xml version='1.0' encoding='UTF-8' standalone='yes'?>": 1,
                "<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>": 1,
                "<trustInfo xmlns=\"urn:schemas-microsoft-com:asm.v3\">": 1,
                "<security>": 1,
                "<requestedPrivileges>": 1,
                "<requestedExecutionLevel level='asInvoker' uiAccess='false' />": 1,
                "</requestedPrivileges>": 1,
                "</security>": 1,
                "</trustInfo>": 1,
                "</assembly>": 1,
                "word: program": 1,
                "word: cannot": 1,
                "word: suvatawh": 1,
                "word: svwavh": 3,
                "word: uvwatauavawh": 89,
                "word: uavawh": 16,
                "word: uvwavawh": 19,
                "word: wavawh": 40,
                "word: uwatavawh": 4,
                "word: watauavawh": 52,
                "word: usvwavh": 2,
                "word: svwatauavawh": 7,
                "word: suvwatavawh": 25,
                "word: usvwatauavawh": 23,
                "word: uatauavawh": 14,
                "word: suvwavh": 7,
                "word: vwatavawh": 18,
                "word: usvwatavawh": 13,
                "word: uuuuuuu": 7,
                "word: suvatauavawh": 1,
                "word: vatawh": 1,
                "word: suvavh": 1,
                "word: svwavawh": 3,
                "word: atavawh": 30,
                "word: vwatauawh": 1,
                "word: suwatauavawh": 1,
                "word: vwatauavawh": 1,
                "word: uvwauawh": 1,
                "word: uvwavh": 1,
                "word: usatavh": 1,
                "word: atauavawl": 1,
                "word: watauavawl": 1,
                "word: suvwath": 1,
                "word: uvwatawh": 1,
                "word: suvwavawh": 4,
                "word: uvwatavh": 2,
                "word: vatauavawh": 1,
                "word: atauavawd": 1,
                "word: watawh": 1,
                "word: uwatauavawh": 1,
                "word: usvwavawh": 9,
                "word: usvwawh": 2,
                "word: suvwatauavawh": 5,
                "word: auavawh": 7,
                "word: vwauavawh": 8,
                "word: atauawh": 1,
                "word: watavh": 2,
                "word: fffffff": 2,
                "word: watauavaw": 2,
                "word: gfffffffh": 1,
                "word: vwatauavawe": 1,
                "word: ukhcop": 5,
                "word: bhicjhl": 1,
                "word: shhckhl": 6,
                "word: vhhcnhl": 2,
                "word: ffffff": 2,
                "word: allocation": 2,
                "word: permission": 2,
                "word: denied": 2,
                "word: exists": 1,
                "word: device": 5,
                "word: filename": 2,
                "word: resource": 4,
                "word: directory": 4,
                "word: invalid": 14,
                "word: argument": 7,
                "word: function": 1,
                "word: supported": 8,
                "word: available": 4,
                "word: enough": 2,
                "word: memory": 2,
                "word: unavailable": 1,
                "word: operation": 11,
                "word: canceled": 1,
                "word: address": 11,
                "word: family": 2,
                "word: connection": 8,
                "word: already": 5,
                "word: progress": 4,
                "word: descriptor": 5,
                "word: aborted": 2,
                "word: refused": 2,
                "word: destination": 2,
                "word: required": 2,
                "word: unreachable": 4,
                "word: interrupted": 1,
                "word: connected": 4,
                "word: message": 6,
                "word: network": 6,
                "word: buffer": 3,
                "word: protocol": 7,
                "word: option": 2,
                "word: socket": 2,
                "word: domain": 2,
                "word: broken": 1,
                "word: executable": 1,
                "word: format": 5,
                "word: identifier": 1,
                "word: removed": 1,
                "word: illegal": 1,
                "word: sequence": 1,
                "word: inappropriate": 1,
                "word: control": 1,
                "word: process": 3,
                "word: stream": 4,
                "word: resources": 1,
                "word: permitted": 1,
                "word: system": 5,
                "word: deadlock": 1,
                "word: result": 1,
                "word: recoverable": 1,
                "word: timeout": 2,
                "word: symbolic": 1,
                "word: levels": 1,
                "word: abcdefabcdef": 7,
                "word: sunday": 2,
                "word: monday": 2,
                "word: tuesday": 2,
                "word: wednesday": 2,
                "word: thursday": 2,
                "word: friday": 2,
                "word: saturday": 2,
                "word: january": 2,
                "word: february": 2,
                "word: august": 2,
                "word: september": 2,
                "word: october": 2,
                "word: november": 2,
                "word: december": 2,
                "word: abcdefghijklmnopqrstuvwxyz": 12,
                "word: unknown": 3,
                "word: exception": 4,
                "word: corexitprocess": 1,
                "word: pevents": 1,
                "word: setthreadgroupaffinity": 1,
                "word: getthreadgroupaffinity": 1,
                "word: getcurrentprocessornumberex": 1,
                "word: getlogicalprocessorinformationex": 1,
                "word: flsalloc": 1,
                "word: flsfree": 1,
                "word: flsgetvalue": 1,
                "word: flssetvalue": 1,
                "word: initializecriticalsectionex": 1,
                "word: createeventexw": 1,
                "word: createsemaphoreexw": 1,
                "word: setthreadstackguarantee": 1,
                "word: createthreadpooltimer": 1,
                "word: setthreadpooltimer": 1,
                "word: waitforthreadpooltimercallbacks": 1,
                "word: closethreadpooltimer": 1,
                "word: createthreadpoolwait": 1,
                "word: setthreadpoolwait": 1,
                "word: closethreadpoolwait": 1,
                "word: flushprocesswritebuffers": 1,
                "word: freelibrarywhencallbackreturns": 1,
                "word: getcurrentprocessornumber": 1,
                "word: getlogicalprocessorinformation": 2,
                "word: createsymboliclinkw": 1,
                "word: setdefaultdlldirectories": 1,
                "word: enumsystemlocalesex": 1,
                "word: comparestringex": 1,
                "word: getdateformatex": 1,
                "word: getlocaleinfoex": 1,
                "word: gettimeformatex": 1,
                "word: getuserdefaultlocalename": 1,
                "word: isvalidlocalename": 1,
                "word: lcmapstringex": 1,
                "word: getcurrentpackageid": 1,
                "word: gettickcount": 2,
                "word: getfileinformationbyhandleexw": 1,
                "word: setfileinformationbyhandlew": 1,
                "word: xpxxxx": 1,
                "word: pscheduler": 1,
                "word: version": 2,
                "word: eventobject": 1,
                "word: ppvirtualprocessorroots": 1,
                "word: unicode": 1,
                "word: nextafter": 1,
                "word: sunmontuewedthufrisat": 1,
                "word: janfebmaraprmayjunjulaugsepoctnovdec": 1,
                "word: pascal": 1,
                "word: stdcall": 1,
                "word: thiscall": 1,
                "word: fastcall": 1,
                "word: vectorcall": 1,
                "word: clrcall": 1,
                "word: restrict": 2,
                "word: unaligned": 1,
                "word: delete": 4,
                "word: operator": 1,
                "word: vftable": 3,
                "word: vbtable": 1,
                "word: typeof": 1,
                "word: static": 2,
                "word: string": 3,
                "word: destructor": 7,
                "word: vector": 16,
                "word: deleting": 2,
                "word: default": 1,
                "word: constructor": 13,
                "word: closure": 5,
                "word: scalar": 1,
                "word: iterator": 31,
                "word: virtual": 1,
                "word: displacement": 1,
                "word: returning": 1,
                "word: callsig": 1,
                "word: placement": 2,
                "word: managed": 3,
                "word: dynamic": 5,
                "word: initializer": 1,
                "word: atexit": 1,
                "word: thread": 2,
                "word: hierarchy": 1,
                "word: complete": 1,
                "word: object": 2,
                "word: locator": 1,
                "word: xppwpp": 1,
                "word: messageboxw": 1,
                "word: getactivewindow": 1,
                "word: getlastactivepopup": 1,
                "word: getuserobjectinformationw": 1,
                "word: getprocesswindowstation": 1,
                "word: createfile": 1,
                "word: schedulerkind": 1,
                "word: maxconcurrency": 1,
                "word: minconcurrency": 1,
                "word: targetoversubscriptionfactor": 1,
                "word: localcontextcachesize": 1,
                "word: contextstacksize": 1,
                "word: contextpriority": 1,
                "word: schedulingprotocol": 1,
                "word: dynamicprogressfeedback": 1,
                "word: winrtinitialization": 1,
                "word: maxpolicyelementkey": 1,
                "word: pcontext": 1,
                "word: pexecutionresource": 1,
                "word: createremotethreadex": 1,
                "word: createumscompletionlist": 1,
                "word: createumsthreadcontext": 1,
                "word: deleteprocthreadattributelist": 1,
                "word: deleteumscompletionlist": 1,
                "word: deleteumsthreadcontext": 1,
                "word: dequeueumscompletionlistitems": 1,
                "word: enterumsschedulingmode": 1,
                "word: executeumsthread": 1,
                "word: getcurrentumsthread": 1,
                "word: getnextumslistitem": 1,
                "word: getumscompletionlistevent": 1,
                "word: initializeprocthreadattributelist": 1,
                "word: queryumsthreadinformation": 1,
                "word: setumsthreadinformation": 1,
                "word: umsthreadyield": 1,
                "word: updateprocthreadattribute": 1,
                "word: roinitialize": 1,
                "word: rouninitialize": 1,
                "word: registertraceguidsw": 1,
                "word: unregistertraceguids": 1,
                "word: traceevent": 1,
                "word: gettraceloggerhandle": 1,
                "word: gettraceenablelevel": 1,
                "word: gettraceenableflags": 1,
                "word: pthreadproxy": 1,
                "word: uuuuuu": 4,
                "word: switchstate": 1,
                "word: access": 1,
                "word: violation": 1,
                "word: locale": 3,
                "word: badbit": 1,
                "word: failbit": 1,
                "word: generic": 2,
                "word: iostream": 3,
                "word: eofbit": 1,
                "word: position": 1,
                "word: abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 1,
                "word: downloadfile": 2,
                "word: commandexecuted": 1,
                "word: successfully": 2,
                "word: commandid": 1,
                "word: cmdresult": 1,
                "word: microsoft": 64,
                "word: windows": 64,
                "word: localappdata": 58,
                "word: userdomain": 1,
                "word: username": 1,
                "word: config": 1,
                "word: ipconfig": 2,
                "word: administrator": 1,
                "word: netstat": 2,
                "word: systeminfo": 2,
                "word: tasklist": 2,
                "word: servicelist": 1,
                "word: secinfo": 1,
                "word: localhost": 6,
                "word: namespace": 6,
                "word: securitycenter": 6,
                "word: antivirusproduct": 2,
                "word: firewallproduct": 2,
                "word: antispywareproduct": 2,
                "word: tmpfiles": 1,
                "word: finished": 2,
                "word: servers": 1,
                "word: appdata": 1,
                "word: programdata": 2,
                "word: executed": 1,
                "word: general": 1,
                "word: uploadfile": 1,
                "word: nobreak": 1,
                "word: replacement": 1,
                "word: replace": 1,
                "word: changealiveseconds": 1,
                "word: changeaddress": 1,
                "word: getconfig": 2,
                "word: runnewversion": 1,
                "word: restart": 2,
                "word: remove": 1,
                "word: fastalive": 1,
                "word: executekl": 1,
                "word: getversion": 1,
                "word: pauseupload": 1,
                "word: resumeupload": 1,
                "word: pausedownload": 1,
                "word: resumedownload": 1,
                "word: immediateresetram": 1,
                "word: uniqueid": 1,
                "word: unordered": 1,
                "word: subscript": 1,
                "word: abcdef": 1,
                "word: qkkbal": 2,
                "word: dictionary": 1,
                "word: literal": 3,
                "word: length": 8,
                "word: distance": 5,
                "word: stored": 2,
                "word: lengths": 4,
                "word: symbols": 1,
                "word: repeat": 1,
                "word: oversubscribed": 3,
                "word: incomplete": 3,
                "word: compression": 2,
                "word: method": 1,
                "word: window": 1,
                "word: incorrect": 2,
                "word: header": 1,
                "word: taskkill": 1,
                "word: overflow": 1,
                "word: inconsistent": 1,
                "word: counts": 2,
                "word: compressed": 1,
                "word: output": 1,
                "word: insufficient": 1,
                "word: lookahead": 1,
                "word: future": 1,
                "word: desktop": 1,
                "word: wmiprv": 1,
                "word: release": 1,
                "word: swchost": 1,
                "word: widechartomultibyte": 1,
                "word: raiseexception": 1,
                "word: getlasterror": 1,
                "word: initializecriticalsectionandspincount": 1,
                "word: deletecriticalsection": 1,
                "word: closehandle": 1,
                "word: decodepointer": 1,
                "word: createthread": 1,
                "word: setevent": 1,
                "word: waitforsingleobject": 1,
                "word: heapalloc": 1,
                "word: heapfree": 1,
                "word: heaprealloc": 1,
                "word: heapsize": 1,
                "word: getprocessheap": 1,
                "word: createtimerqueue": 1,
                "word: createeventw": 1,
                "word: createtimerqueuetimer": 1,
                "word: deletetimerqueuetimer": 1,
                "word: deletetimerqueue": 1,
                "word: getcurrentprocessid": 1,
                "word: createtoolhelp": 1,
                "word: snapshot": 1,
                "word: setconsolectrlhandler": 1,
                "word: seterrormode": 1,
                "word: setunhandledexceptionfilter": 1,
                "word: createfilea": 1,
                "word: setfilepointer": 1,
                "word: readfile": 1,
                "word: systemtimetofiletime": 1,
                "word: getcurrentdirectoryw": 1,
                "word: multibytetowidechar": 1,
                "word: localfiletimetofiletime": 1,
                "word: getfileattributesw": 1,
                "word: createdirectoryw": 1,
                "word: createfilew": 1,
                "word: writefile": 1,
                "word: setfiletime": 1,
                "word: deletefilew": 1,
                "word: findfirstfilew": 1,
                "word: getmodulefilenamew": 1,
                "word: createprocessw": 1,
                "word: getconsolewindow": 1,
                "word: findnextfilew": 1,
                "word: findclose": 1,
                "word: openprocess": 1,
                "word: terminateprocess": 1,
                "word: getfileattributesa": 1,
                "word: getwindowsdirectoryw": 1,
                "word: getcurrentprocess": 1,
                "word: getsysteminfo": 1,
                "word: filetimetosystemtime": 1,
                "word: getfileinformationbyhandle": 1,
                "word: getfilesize": 1,
                "word: unmapviewoffile": 1,
                "word: getlocaltime": 1,
                "word: kernel": 1,
                "word: getmessagew": 1,
                "word: dispatchmessagew": 1,
                "word: translatemessage": 1,
                "word: getsystemmetrics": 1,
                "word: loadacceleratorsw": 1,
                "word: translateacceleratorw": 1,
                "word: wsprintfw": 1,
                "word: releasedc": 1,
                "word: getdesktopwindow": 1,
                "word: createcompatiblebitmap": 1,
                "word: createcompatibledc": 1,
                "word: selectobject": 1,
                "word: bitblt": 1,
                "word: deleteobject": 1,
                "word: shgetspecialfolderpathw": 1,
                "word: shgetfolderpathw": 1,
                "word: stringfromguid": 1,
                "word: cocreateguid": 1,
                "word: gdipgetimageencoderssize": 1,
                "word: gdipgetimageencoders": 1,
                "word: gdiplusstartup": 1,
                "word: gdipcreatebitmapfromhbitmap": 1,
                "word: gdipfree": 1,
                "word: gdipalloc": 1,
                "word: gdipcloneimage": 1,
                "word: gdipdisposeimage": 1,
                "word: gdipsaveimagetofile": 1,
                "word: gdiplusshutdown": 1,
                "word: gdiplus": 4,
                "word: queryworkingset": 1,
                "word: getprocessmemoryinfo": 1,
                "word: getcurrentthreadid": 1,
                "word: getstringtypew": 1,
                "word: encodepointer": 1,
                "word: entercriticalsection": 1,
                "word: leavecriticalsection": 1,
                "word: getsystemtimeasfiletime": 1,
                "word: isdebuggerpresent": 1,
                "word: isprocessorfeaturepresent": 1,
                "word: exitprocess": 1,
                "word: getmodulehandleexw": 1,
                "word: getprocaddress": 1,
                "word: arefileapisansi": 1,
                "word: getcpinfo": 1,
                "word: getcommandlinea": 1,
                "word: rtlpctofileheader": 1,
                "word: rtllookupfunctionentry": 1,
                "word: rtlunwindex": 1,
                "word: waitforsingleobjectex": 1,
                "word: signalobjectandwait": 1,
                "word: switchtothread": 1,
                "word: setthreadpriority": 1,
                "word: getthreadpriority": 1,
                "word: tlsalloc": 1,
                "word: tlsgetvalue": 1,
                "word: tlssetvalue": 1,
                "word: tlsfree": 1,
                "word: changetimerqueuetimer": 1,
                "word: getmodulehandlew": 1,
                "word: getnumahighestnodenumber": 1,
                "word: getprocessaffinitymask": 1,
                "word: setthreadaffinitymask": 1,
                "word: registerwaitforsingleobject": 1,
                "word: unregisterwait": 1,
                "word: rtlcapturecontext": 1,
                "word: rtlvirtualunwind": 1,
                "word: unhandledexceptionfilter": 1,
                "word: setlasterror": 1,
                "word: getstartupinfow": 1,
                "word: createsemaphorew": 1,
                "word: getdateformatw": 1,
                "word: gettimeformatw": 1,
                "word: comparestringw": 1,
                "word: lcmapstringw": 1,
                "word: getlocaleinfow": 1,
                "word: isvalidlocale": 1,
                "word: getuserdefaultlcid": 1,
                "word: enumsystemlocalesw": 1,
                "word: getconsolecp": 1,
                "word: getconsolemode": 1,
                "word: isvalidcodepage": 1,
                "word: getacp": 1,
                "word: getoemcp": 1,
                "word: getcurrentthread": 1,
                "word: getstdhandle": 1,
                "word: freelibrary": 1,
                "word: loadlibraryexw": 1,
                "word: movefileexw": 1,
                "word: getfiletype": 1,
                "word: setfilepointerex": 1,
                "word: flushfilebuffers": 1,
                "word: getmodulefilenamea": 1,
                "word: queryperformancecounter": 1,
                "word: getenvironmentstringsw": 1,
                "word: freeenvironmentstringsw": 1,
                "word: outputdebugstringw": 1,
                "word: getthreadtimes": 1,
                "word: freelibraryandexitthread": 1,
                "word: getmodulehandlea": 1,
                "word: getversionexw": 1,
                "word: virtualalloc": 1,
                "word: virtualfree": 1,
                "word: virtualprotect": 1,
                "word: duplicatehandle": 1,
                "word: releasesemaphore": 1,
                "word: initializeslisthead": 1,
                "word: interlockedpopentryslist": 1,
                "word: interlockedpushentryslist": 1,
                "word: interlockedflushslist": 1,
                "word: querydepthslist": 1,
                "word: unregisterwaitex": 1,
                "word: gettimezoneinformation": 1,
                "word: setstdhandle": 1,
                "word: writeconsolew": 1,
                "word: readconsolew": 1,
                "word: loadlibraryw": 1,
                "word: setendoffile": 1,
                "word: setenvironmentvariablea": 1,
                "word: copyright": 1,
                "word: plauger": 1,
                "word: licensed": 1,
                "word: dinkumware": 1,
                "word: rights": 1,
                "word: reserved": 1,
                "word: avlength": 1,
                "word: locimp": 1,
                "word: istreambuf": 9,
                "word: traits": 32,
                "word: ostreambuf": 9,
                "word: numpunct": 3,
                "word: codecvt": 5,
                "word: aumessages": 1,
                "word: aumoney": 1,
                "word: autime": 1,
                "word: collate": 3,
                "word: messages": 3,
                "word: moneypunct": 6,
                "word: mpunct": 3,
                "word: avtype": 1,
                "word: typeid": 1,
                "word: avimproper": 3,
                "word: concurrency": 69,
                "word: avwaitblock": 1,
                "word: details": 40,
                "word: avsinglewaitblock": 1,
                "word: avmultiwaitblock": 1,
                "word: avwaitallblock": 1,
                "word: avwaitanyblock": 1,
                "word: mallocaarrayholder": 2,
                "word: peavcontext": 1,
                "word: avscheduler": 3,
                "word: avinvalid": 6,
                "word: interruption": 1,
                "word: worker": 1,
                "word: creation": 1,
                "word: avunsupported": 1,
                "word: scheduler": 6,
                "word: attach": 1,
                "word: reference": 1,
                "word: avcontext": 3,
                "word: unblock": 2,
                "word: unbalanced": 1,
                "word: avmissing": 1,
                "word: policy": 3,
                "word: specification": 1,
                "word: avnested": 1,
                "word: missing": 1,
                "word: detach": 1,
                "word: oversubscribe": 1,
                "word: avresourcemanager": 1,
                "word: auiresourcemanager": 1,
                "word: auitopologyexecutionresource": 1,
                "word: auitopologynode": 1,
                "word: autopologyobject": 2,
                "word: globalcore": 1,
                "word: globalnode": 1,
                "word: avschedulegroupbase": 1,
                "word: avschedulegroup": 1,
                "word: avcachelocalschedulegroup": 1,
                "word: avfairschedulegroup": 1,
                "word: avschedulerbase": 1,
                "word: avrealizedchore": 1,
                "word: avcachelocalschedulegroupsegment": 1,
                "word: avschedulegroupsegmentbase": 1,
                "word: avfairschedulegroupsegment": 1,
                "word: avcontextbase": 1,
                "word: refcounter": 1,
                "word: cancellationtokenregistration": 1,
                "word: avcancellationtokenregistration": 1,
                "word: taskproc": 1,
                "word: peavevent": 1,
                "word: avexecutionresource": 1,
                "word: auiexecutionresource": 1,
                "word: avschedulerproxy": 1,
                "word: auischedulerproxy": 1,
                "word: avfreethreadproxy": 1,
                "word: avthreadproxy": 1,
                "word: auithreadproxy": 1,
                "word: auithreadproxyfactory": 1,
                "word: avfreethreadproxyfactory": 1,
                "word: threadproxyfactory": 1,
                "word: vfreethreadproxy": 1,
                "word: avvirtualprocessor": 1,
                "word: avinternalcontextbase": 1,
                "word: auiexecutioncontext": 1,
                "word: avexternalcontextbase": 1,
                "word: avthreadscheduler": 1,
                "word: auischeduler": 1,
                "word: avthreadinternalcontext": 1,
                "word: axpeav": 2,
                "word: exceptionptr": 3,
                "word: debugmallocator": 1,
                "word: avvirtualprocessorroot": 1,
                "word: auivirtualprocessorroot": 1,
                "word: avfreevirtualprocessorroot": 1,
                "word: avthreadvirtualprocessor": 1,
                "word: auctype": 1,
                "word: avfacet": 1,
                "word: category": 4,
                "word: averror": 1,
                "word: avfailure": 1,
                "word: avsystem": 1,
                "word: avruntime": 1,
                "word: avexception": 1,
                "word: istream": 2,
                "word: ifstream": 2,
                "word: ostream": 2,
                "word: ofstream": 2,
                "word: filebuf": 2,
                "word: avcodecvt": 1,
                "word: streambuf": 2,
                "word: bapppp": 2,
                "word: avbitmap": 1,
                "word: avimage": 1,
                "word: avgdiplusbase": 1,
                "word: avlogic": 1,
                "word: encoding": 1,
                "word: standalone": 1,
                "word: assembly": 2,
                "word: schemas": 2,
                "word: manifestversion": 1,
                "word: trustinfo": 2,
                "word: security": 2,
                "word: requestedprivileges": 2,
                "word: requestedexecutionlevel": 1,
                "word: asinvoker": 1,
                "word: uiaccess": 1,
                "special: MM/dd/yy": 1,
                "special: e::": 3,
                "special: 2020:2020:2020:2020:2020:2020:2020:2222": 1,
                "special: ::": 1,
                "special: 8.8.8.8": 2,
                "special: 1.0.197": 2,
                "special: literal/length": 3,
                "special: swchost.pdb": 1,
                "special: 10.0.197": 1,
                "special: gdiplus.dll": 1,
                "special: PSAPI.DLL": 1,
                "special: 1.0": 2
            }
        },
        {
            "plugin": "extractors.meta",
            "version": "0.1",
            "results": {
                "radare2: -r-x .text": 1,
                "radare2: -r-- .rdata": 1,
                "radare2: -rw- .data": 1,
                "radare2: -r-- .pdata": 1,
                "radare2: -r-- .rsrc": 1,
                "radare2: -r-- .reloc": 1,
                "radare2: type=program": 1,
                "radare2: KERNEL32.dll_DecodePointer": 2,
                "radare2: KERNEL32.dll_CreateThread": 2,
                "radare2: KERNEL32.dll_SetEvent": 2,
                "radare2: KERNEL32.dll_WaitForSingleObject": 2,
                "radare2: KERNEL32.dll_HeapAlloc": 2,
                "radare2: KERNEL32.dll_HeapFree": 2,
                "radare2: KERNEL32.dll_HeapReAlloc": 2,
                "radare2: KERNEL32.dll_HeapSize": 2,
                "radare2: KERNEL32.dll_GetProcessHeap": 2,
                "radare2: KERNEL32.dll_Sleep": 2,
                "radare2: KERNEL32.dll_CreateTimerQueue": 2,
                "radare2: KERNEL32.dll_CreateEventW": 2,
                "radare2: KERNEL32.dll_CreateTimerQueueTimer": 2,
                "radare2: KERNEL32.dll_DeleteTimerQueueTimer": 2,
                "radare2: KERNEL32.dll_DeleteTimerQueue": 2,
                "radare2: KERNEL32.dll_GetCurrentProcessId": 2,
                "radare2: KERNEL32.dll_CreateToolhelp32Snapshot": 2,
                "radare2: KERNEL32.dll_Process32NextW": 2,
                "radare2: KERNEL32.dll_SetConsoleCtrlHandler": 2,
                "radare2: KERNEL32.dll_SetErrorMode": 2,
                "radare2: KERNEL32.dll_SetUnhandledExceptionFilter": 2,
                "radare2: KERNEL32.dll_CreateFileA": 2,
                "radare2: KERNEL32.dll_SetFilePointer": 2,
                "radare2: KERNEL32.dll_ReadFile": 2,
                "radare2: KERNEL32.dll_SystemTimeToFileTime": 2,
                "radare2: KERNEL32.dll_GetCurrentDirectoryW": 2,
                "radare2: KERNEL32.dll_MultiByteToWideChar": 2,
                "radare2: KERNEL32.dll_LocalFileTimeToFileTime": 2,
                "radare2: KERNEL32.dll_GetFileAttributesW": 2,
                "radare2: KERNEL32.dll_CreateDirectoryW": 2,
                "radare2: KERNEL32.dll_CreateFileW": 2,
                "radare2: KERNEL32.dll_WriteFile": 2,
                "radare2: KERNEL32.dll_SetFileTime": 2,
                "radare2: KERNEL32.dll_CloseHandle": 2,
                "radare2: KERNEL32.dll_FindFirstFileW": 2,
                "radare2: KERNEL32.dll_GetModuleFileNameW": 2,
                "radare2: KERNEL32.dll_CreateProcessW": 2,
                "radare2: KERNEL32.dll_GetConsoleWindow": 2,
                "radare2: KERNEL32.dll_FindNextFileW": 2,
                "radare2: KERNEL32.dll_FindClose": 2,
                "radare2: KERNEL32.dll_OpenProcess": 2,
                "radare2: KERNEL32.dll_TerminateProcess": 2,
                "radare2: KERNEL32.dll_GetFileAttributesA": 2,
                "radare2: KERNEL32.dll_GetWindowsDirectoryW": 2,
                "radare2: KERNEL32.dll_GetCurrentProcess": 2,
                "radare2: KERNEL32.dll_GetSystemInfo": 2,
                "radare2: KERNEL32.dll_FileTimeToSystemTime": 2,
                "radare2: KERNEL32.dll_GetFileInformationByHandle": 2,
                "radare2: KERNEL32.dll_GetFileSize": 2,
                "radare2: KERNEL32.dll_UnmapViewOfFile": 2,
                "radare2: KERNEL32.dll_GetLocalTime": 2,
                "radare2: KERNEL32.dll_GetTickCount": 2,
                "radare2: KERNEL32.dll_SetEndOfFile": 2,
                "radare2: KERNEL32.dll_LoadLibraryW": 2,
                "radare2: KERNEL32.dll_ReadConsoleW": 2,
                "radare2: KERNEL32.dll_WriteConsoleW": 2,
                "radare2: KERNEL32.dll_SetStdHandle": 2,
                "radare2: KERNEL32.dll_GetTimeZoneInformation": 2,
                "radare2: KERNEL32.dll_UnregisterWaitEx": 2,
                "radare2: KERNEL32.dll_QueryDepthSList": 2,
                "radare2: KERNEL32.dll_InterlockedFlushSList": 2,
                "radare2: KERNEL32.dll_InterlockedPushEntrySList": 2,
                "radare2: KERNEL32.dll_InterlockedPopEntrySList": 2,
                "radare2: KERNEL32.dll_DeleteCriticalSection": 2,
                "radare2: KERNEL32.dll_InitializeCriticalSectionAndSpinCount": 2,
                "radare2: KERNEL32.dll_GetLastError": 2,
                "radare2: KERNEL32.dll_RaiseException": 2,
                "radare2: KERNEL32.dll_DeleteFileW": 2,
                "radare2: KERNEL32.dll_WideCharToMultiByte": 2,
                "radare2: KERNEL32.dll_InitializeSListHead": 2,
                "radare2: KERNEL32.dll_ReleaseSemaphore": 2,
                "radare2: KERNEL32.dll_DuplicateHandle": 2,
                "radare2: KERNEL32.dll_VirtualProtect": 2,
                "radare2: KERNEL32.dll_VirtualFree": 2,
                "radare2: KERNEL32.dll_VirtualAlloc": 2,
                "radare2: KERNEL32.dll_GetVersionExW": 2,
                "radare2: KERNEL32.dll_GetModuleHandleA": 2,
                "radare2: KERNEL32.dll_FreeLibraryAndExitThread": 2,
                "radare2: KERNEL32.dll_GetThreadTimes": 2,
                "radare2: KERNEL32.dll_OutputDebugStringW": 2,
                "radare2: KERNEL32.dll_FreeEnvironmentStringsW": 2,
                "radare2: KERNEL32.dll_GetEnvironmentStringsW": 2,
                "radare2: KERNEL32.dll_QueryPerformanceCounter": 2,
                "radare2: KERNEL32.dll_GetModuleFileNameA": 2,
                "radare2: KERNEL32.dll_FlushFileBuffers": 2,
                "radare2: KERNEL32.dll_SetFilePointerEx": 2,
                "radare2: KERNEL32.dll_GetFileType": 2,
                "radare2: KERNEL32.dll_MoveFileExW": 2,
                "radare2: KERNEL32.dll_LoadLibraryExW": 2,
                "radare2: KERNEL32.dll_FreeLibrary": 2,
                "radare2: KERNEL32.dll_GetStdHandle": 2,
                "radare2: KERNEL32.dll_GetCurrentThread": 2,
                "radare2: KERNEL32.dll_GetOEMCP": 2,
                "radare2: KERNEL32.dll_GetACP": 2,
                "radare2: KERNEL32.dll_IsValidCodePage": 2,
                "radare2: KERNEL32.dll_GetConsoleMode": 2,
                "radare2: KERNEL32.dll_SetEnvironmentVariableA": 2,
                "radare2: KERNEL32.dll_GetConsoleCP": 2,
                "radare2: KERNEL32.dll_EnumSystemLocalesW": 2,
                "radare2: KERNEL32.dll_GetUserDefaultLCID": 2,
                "radare2: KERNEL32.dll_IsValidLocale": 2,
                "radare2: KERNEL32.dll_GetLocaleInfoW": 2,
                "radare2: KERNEL32.dll_LCMapStringW": 2,
                "radare2: KERNEL32.dll_CompareStringW": 2,
                "radare2: KERNEL32.dll_GetTimeFormatW": 2,
                "radare2: KERNEL32.dll_GetDateFormatW": 2,
                "radare2: KERNEL32.dll_CreateSemaphoreW": 2,
                "radare2: KERNEL32.dll_GetStartupInfoW": 2,
                "radare2: KERNEL32.dll_SetLastError": 2,
                "radare2: KERNEL32.dll_UnhandledExceptionFilter": 2,
                "radare2: KERNEL32.dll_RtlVirtualUnwind": 2,
                "radare2: KERNEL32.dll_RtlCaptureContext": 2,
                "radare2: KERNEL32.dll_UnregisterWait": 2,
                "radare2: KERNEL32.dll_RegisterWaitForSingleObject": 2,
                "radare2: KERNEL32.dll_SetThreadAffinityMask": 2,
                "radare2: KERNEL32.dll_GetCurrentThreadId": 2,
                "radare2: KERNEL32.dll_GetStringTypeW": 2,
                "radare2: KERNEL32.dll_EncodePointer": 2,
                "radare2: KERNEL32.dll_EnterCriticalSection": 2,
                "radare2: KERNEL32.dll_LeaveCriticalSection": 2,
                "radare2: KERNEL32.dll_GetSystemTimeAsFileTime": 2,
                "radare2: KERNEL32.dll_IsDebuggerPresent": 2,
                "radare2: KERNEL32.dll_IsProcessorFeaturePresent": 2,
                "radare2: KERNEL32.dll_ExitProcess": 2,
                "radare2: KERNEL32.dll_GetModuleHandleExW": 2,
                "radare2: KERNEL32.dll_GetProcAddress": 2,
                "radare2: KERNEL32.dll_AreFileApisANSI": 2,
                "radare2: KERNEL32.dll_GetCPInfo": 2,
                "radare2: KERNEL32.dll_GetCommandLineA": 2,
                "radare2: KERNEL32.dll_RtlPcToFileHeader": 2,
                "radare2: KERNEL32.dll_RtlLookupFunctionEntry": 2,
                "radare2: KERNEL32.dll_RtlUnwindEx": 2,
                "radare2: KERNEL32.dll_WaitForSingleObjectEx": 2,
                "radare2: KERNEL32.dll_SignalObjectAndWait": 2,
                "radare2: KERNEL32.dll_SwitchToThread": 2,
                "radare2: KERNEL32.dll_SetThreadPriority": 2,
                "radare2: KERNEL32.dll_GetThreadPriority": 2,
                "radare2: KERNEL32.dll_TlsAlloc": 2,
                "radare2: KERNEL32.dll_TlsGetValue": 2,
                "radare2: KERNEL32.dll_TlsSetValue": 2,
                "radare2: KERNEL32.dll_TlsFree": 2,
                "radare2: KERNEL32.dll_GetLogicalProcessorInformation": 2,
                "radare2: KERNEL32.dll_ChangeTimerQueueTimer": 2,
                "radare2: KERNEL32.dll_GetModuleHandleW": 2,
                "radare2: KERNEL32.dll_GetNumaHighestNodeNumber": 2,
                "radare2: KERNEL32.dll_GetProcessAffinityMask": 2,
                "radare2: USER32.dll_TranslateMessage": 2,
                "radare2: USER32.dll_GetSystemMetrics": 2,
                "radare2: USER32.dll_GetDC": 2,
                "radare2: USER32.dll_LoadAcceleratorsW": 2,
                "radare2: USER32.dll_TranslateAcceleratorW": 2,
                "radare2: USER32.dll_wsprintfW": 2,
                "radare2: USER32.dll_ReleaseDC": 2,
                "radare2: USER32.dll_DispatchMessageW": 2,
                "radare2: USER32.dll_GetDesktopWindow": 2,
                "radare2: USER32.dll_GetMessageW": 2,
                "radare2: GDI32.dll_BitBlt": 2,
                "radare2: GDI32.dll_SelectObject": 2,
                "radare2: GDI32.dll_CreateCompatibleDC": 2,
                "radare2: GDI32.dll_CreateCompatibleBitmap": 2,
                "radare2: GDI32.dll_DeleteObject": 2,
                "radare2: SHELL32.dll_SHGetFolderPathW": 2,
                "radare2: SHELL32.dll_SHGetSpecialFolderPathW": 2,
                "radare2: ole32.dll_CoCreateGuid": 2,
                "radare2: ole32.dll_StringFromGUID2": 2,
                "radare2: gdiplus.dll_GdipDisposeImage": 2,
                "radare2: gdiplus.dll_GdipSaveImageToFile": 2,
                "radare2: gdiplus.dll_GdiplusShutdown": 2,
                "radare2: gdiplus.dll_GdipAlloc": 2,
                "radare2: gdiplus.dll_GdipGetImageEncodersSize": 2,
                "radare2: gdiplus.dll_GdipGetImageEncoders": 2,
                "radare2: gdiplus.dll_GdiplusStartup": 2,
                "radare2: gdiplus.dll_GdipCreateBitmapFromHBITMAP": 2,
                "radare2: gdiplus.dll_GdipCloneImage": 2,
                "radare2: gdiplus.dll_GdipFree": 2,
                "radare2: WS2_32.dll_recv": 2,
                "radare2: WS2_32.dll_inet_addr": 2,
                "radare2: WS2_32.dll_htons": 2,
                "radare2: WS2_32.dll_socket": 2,
                "radare2: WS2_32.dll_WSAStartup": 2,
                "radare2: WS2_32.dll_WSACleanup": 2,
                "radare2: WS2_32.dll_closesocket": 2,
                "radare2: WS2_32.dll_select": 2,
                "radare2: WS2_32.dll_sendto": 2,
                "radare2: PSAPI.DLL_GetProcessMemoryInfo": 2,
                "radare2: PSAPI.DLL_QueryWorkingSet": 2,
                "radare2: .rdata) utf32le ra\u6272\u6277\u6261 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf32le \\n!\"2*": 2,
                "radare2: .rdata) utf32le \\v#3+": 2,
                "radare2: .rdata) utf16le :Sun:Sunday:Mon:Monday:Tue:Tuesday:Wed:Wednesday:Thu:Thursday:Fri:Friday:Sat:Saturday": 1,
                "radare2: .rdata) utf16le :Jan:January:Feb:February:Mar:March:Apr:April:May:May:Jun:June:Jul:July:Aug:August:Sep:September:Oct:October:Nov:November:Dec:December": 1,
                "radare2: .rdata) utf16le :AM:am:PM:pm": 1,
                "radare2: .rdata) utf16le mscoree.dll": 1,
                "radare2: .rdata) utf16le          (((((                  H": 2,
                "radare2: .rdata) utf16le                                  \\b": 1,
                "radare2: .rdata) utf16le kernel32.dll": 1,
                "radare2: .rdata) utf16le am/pm": 1,
                "radare2: .rdata) utf16le zh-CHS": 1,
                "radare2: .rdata) utf16le ar-SA": 1,
                "radare2: .rdata) utf16le bg-BG": 1,
                "radare2: .rdata) utf16le ca-ES": 1,
                "radare2: .rdata) utf16le zh-TW": 1,
                "radare2: .rdata) utf16le cs-CZ": 1,
                "radare2: .rdata) utf16le da-DK": 1,
                "radare2: .rdata) utf16le de-DE": 1,
                "radare2: .rdata) utf16le el-GR": 1,
                "radare2: .rdata) utf16le en-US": 1,
                "radare2: .rdata) utf16le fi-FI": 1,
                "radare2: .rdata) utf16le fr-FR": 1,
                "radare2: .rdata) utf16le he-IL": 1,
                "radare2: .rdata) utf16le hu-HU": 1,
                "radare2: .rdata) utf16le is-IS": 1,
                "radare2: .rdata) utf16le it-IT": 1,
                "radare2: .rdata) utf16le ja-JP": 1,
                "radare2: .rdata) utf16le ko-KR": 1,
                "radare2: .rdata) utf16le nl-NL": 1,
                "radare2: .rdata) utf16le nb-NO": 1,
                "radare2: .rdata) utf16le pl-PL": 1,
                "radare2: .rdata) utf16le pt-BR": 1,
                "radare2: .rdata) utf16le ro-RO": 1,
                "radare2: .rdata) utf16le ru-RU": 1,
                "radare2: .rdata) utf16le hr-HR": 1,
                "radare2: .rdata) utf16le sk-SK": 1,
                "radare2: .rdata) utf16le sq-AL": 1,
                "radare2: .rdata) utf16le sv-SE": 1,
                "radare2: .rdata) utf16le th-TH": 1,
                "radare2: .rdata) utf16le tr-TR": 1,
                "radare2: .rdata) utf16le ur-PK": 1,
                "radare2: .rdata) utf16le id-ID": 1,
                "radare2: .rdata) utf16le uk-UA": 1,
                "radare2: .rdata) utf16le be-BY": 1,
                "radare2: .rdata) utf16le sl-SI": 1,
                "radare2: .rdata) utf16le et-EE": 1,
                "radare2: .rdata) utf16le lv-LV": 1,
                "radare2: .rdata) utf16le lt-LT": 1,
                "radare2: .rdata) utf16le fa-IR": 1,
                "radare2: .rdata) utf16le vi-VN": 1,
                "radare2: .rdata) utf16le hy-AM": 1,
                "radare2: .rdata) utf16le az-AZ-Latn": 1,
                "radare2: .rdata) utf16le eu-ES": 1,
                "radare2: .rdata) utf16le mk-MK": 1,
                "radare2: .rdata) utf16le tn-ZA": 1,
                "radare2: .rdata) utf16le xh-ZA": 1,
                "radare2: .rdata) utf16le zu-ZA": 1,
                "radare2: .rdata) utf16le af-ZA": 1,
                "radare2: .rdata) utf16le ka-GE": 1,
                "radare2: .rdata) utf16le fo-FO": 1,
                "radare2: .rdata) utf16le hi-IN": 1,
                "radare2: .rdata) utf16le mt-MT": 1,
                "radare2: .rdata) utf16le se-NO": 1,
                "radare2: .rdata) utf16le ms-MY": 1,
                "radare2: .rdata) utf16le kk-KZ": 1,
                "radare2: .rdata) utf16le ky-KG": 1,
                "radare2: .rdata) utf16le sw-KE": 1,
                "radare2: .rdata) utf16le uz-UZ-Latn": 1,
                "radare2: .rdata) utf16le tt-RU": 1,
                "radare2: .rdata) utf16le bn-IN": 1,
                "radare2: .rdata) utf16le pa-IN": 1,
                "radare2: .rdata) utf16le gu-IN": 1,
                "radare2: .rdata) utf16le ta-IN": 1,
                "radare2: .rdata) utf16le te-IN": 1,
                "radare2: .rdata) utf16le kn-IN": 1,
                "radare2: .rdata) utf16le ml-IN": 1,
                "radare2: .rdata) utf16le mr-IN": 1,
                "radare2: .rdata) utf16le sa-IN": 1,
                "radare2: .rdata) utf16le mn-MN": 1,
                "radare2: .rdata) utf16le cy-GB": 1,
                "radare2: .rdata) utf16le gl-ES": 1,
                "radare2: .rdata) utf16le kok-IN": 1,
                "radare2: .rdata) utf16le syr-SY": 1,
                "radare2: .rdata) utf16le div-MV": 1,
                "radare2: .rdata) utf16le quz-BO": 1,
                "radare2: .rdata) utf16le ns-ZA": 1,
                "radare2: .rdata) utf16le mi-NZ": 1,
                "radare2: .rdata) utf16le ar-IQ": 1,
                "radare2: .rdata) utf16le zh-CN": 1,
                "radare2: .rdata) utf16le de-CH": 1,
                "radare2: .rdata) utf16le en-GB": 1,
                "radare2: .rdata) utf16le es-MX": 1,
                "radare2: .rdata) utf16le fr-BE": 1,
                "radare2: .rdata) utf16le it-CH": 1,
                "radare2: .rdata) utf16le nl-BE": 1,
                "radare2: .rdata) utf16le nn-NO": 1,
                "radare2: .rdata) utf16le pt-PT": 1,
                "radare2: .rdata) utf16le sr-SP-Latn": 1,
                "radare2: .rdata) utf16le sv-FI": 1,
                "radare2: .rdata) utf16le az-AZ-Cyrl": 1,
                "radare2: .rdata) utf16le se-SE": 1,
                "radare2: .rdata) utf16le ms-BN": 1,
                "radare2: .rdata) utf16le uz-UZ-Cyrl": 1,
                "radare2: .rdata) utf16le quz-EC": 1,
                "radare2: .rdata) utf16le ar-EG": 1,
                "radare2: .rdata) utf16le zh-HK": 1,
                "radare2: .rdata) utf16le de-AT": 1,
                "radare2: .rdata) utf16le en-AU": 1,
                "radare2: .rdata) utf16le es-ES": 1,
                "radare2: .rdata) utf16le fr-CA": 1,
                "radare2: .rdata) utf16le sr-SP-Cyrl": 1,
                "radare2: .rdata) utf16le se-FI": 1,
                "radare2: .rdata) utf16le quz-PE": 1,
                "radare2: .rdata) utf16le ar-LY": 1,
                "radare2: .rdata) utf16le zh-SG": 1,
                "radare2: .rdata) utf16le de-LU": 1,
                "radare2: .rdata) utf16le en-CA": 1,
                "radare2: .rdata) utf16le es-GT": 1,
                "radare2: .rdata) utf16le fr-CH": 1,
                "radare2: .rdata) utf16le hr-BA": 1,
                "radare2: .rdata) utf16le smj-NO": 1,
                "radare2: .rdata) utf16le ar-DZ": 1,
                "radare2: .rdata) utf16le zh-MO": 1,
                "radare2: .rdata) utf16le de-LI": 1,
                "radare2: .rdata) utf16le en-NZ": 1,
                "radare2: .rdata) utf16le es-CR": 1,
                "radare2: .rdata) utf16le fr-LU": 1,
                "radare2: .rdata) utf16le bs-BA-Latn": 1,
                "radare2: .rdata) utf16le smj-SE": 1,
                "radare2: .rdata) utf16le ar-MA": 1,
                "radare2: .rdata) utf16le en-IE": 1,
                "radare2: .rdata) utf16le es-PA": 1,
                "radare2: .rdata) utf16le fr-MC": 1,
                "radare2: .rdata) utf16le sr-BA-Latn": 1,
                "radare2: .rdata) utf16le sma-NO": 1,
                "radare2: .rdata) utf16le ar-TN": 1,
                "radare2: .rdata) utf16le en-ZA": 1,
                "radare2: .rdata) utf16le es-DO": 1,
                "radare2: .rdata) utf16le sr-BA-Cyrl": 1,
                "radare2: .rdata) utf16le sma-SE": 1,
                "radare2: .rdata) utf16le ar-OM": 1,
                "radare2: .rdata) utf16le en-JM": 1,
                "radare2: .rdata) utf16le es-VE": 1,
                "radare2: .rdata) utf16le sms-FI": 1,
                "radare2: .rdata) utf16le ar-YE": 1,
                "radare2: .rdata) utf16le en-CB": 1,
                "radare2: .rdata) utf16le es-CO": 1,
                "radare2: .rdata) utf16le smn-FI": 1,
                "radare2: .rdata) utf16le ar-SY": 1,
                "radare2: .rdata) utf16le en-BZ": 1,
                "radare2: .rdata) utf16le es-PE": 1,
                "radare2: .rdata) utf16le ar-JO": 1,
                "radare2: .rdata) utf16le en-TT": 1,
                "radare2: .rdata) utf16le es-AR": 1,
                "radare2: .rdata) utf16le ar-LB": 1,
                "radare2: .rdata) utf16le en-ZW": 1,
                "radare2: .rdata) utf16le es-EC": 1,
                "radare2: .rdata) utf16le ar-KW": 1,
                "radare2: .rdata) utf16le en-PH": 1,
                "radare2: .rdata) utf16le es-CL": 1,
                "radare2: .rdata) utf16le ar-AE": 1,
                "radare2: .rdata) utf16le es-UY": 1,
                "radare2: .rdata) utf16le ar-BH": 1,
                "radare2: .rdata) utf16le es-PY": 1,
                "radare2: .rdata) utf16le ar-QA": 1,
                "radare2: .rdata) utf16le es-BO": 1,
                "radare2: .rdata) utf16le es-SV": 1,
                "radare2: .rdata) utf16le es-HN": 1,
                "radare2: .rdata) utf16le es-NI": 1,
                "radare2: .rdata) utf16le es-PR": 1,
                "radare2: .rdata) utf16le zh-CHT": 1,
                "radare2: .rdata) utf16le af-za": 1,
                "radare2: .rdata) utf16le ar-ae": 1,
                "radare2: .rdata) utf16le ar-bh": 1,
                "radare2: .rdata) utf16le ar-dz": 1,
                "radare2: .rdata) utf16le ar-eg": 1,
                "radare2: .rdata) utf16le ar-iq": 1,
                "radare2: .rdata) utf16le ar-jo": 1,
                "radare2: .rdata) utf16le ar-kw": 1,
                "radare2: .rdata) utf16le ar-lb": 1,
                "radare2: .rdata) utf16le ar-ly": 1,
                "radare2: .rdata) utf16le ar-ma": 1,
                "radare2: .rdata) utf16le ar-om": 1,
                "radare2: .rdata) utf16le ar-qa": 1,
                "radare2: .rdata) utf16le ar-sa": 1,
                "radare2: .rdata) utf16le ar-sy": 1,
                "radare2: .rdata) utf16le ar-tn": 1,
                "radare2: .rdata) utf16le ar-ye": 1,
                "radare2: .rdata) utf16le az-az-cyrl": 1,
                "radare2: .rdata) utf16le az-az-latn": 1,
                "radare2: .rdata) utf16le be-by": 1,
                "radare2: .rdata) utf16le bg-bg": 1,
                "radare2: .rdata) utf16le bn-in": 1,
                "radare2: .rdata) utf16le bs-ba-latn": 1,
                "radare2: .rdata) utf16le ca-es": 1,
                "radare2: .rdata) utf16le cs-cz": 1,
                "radare2: .rdata) utf16le cy-gb": 1,
                "radare2: .rdata) utf16le da-dk": 1,
                "radare2: .rdata) utf16le de-at": 1,
                "radare2: .rdata) utf16le de-ch": 1,
                "radare2: .rdata) utf16le de-de": 1,
                "radare2: .rdata) utf16le de-li": 1,
                "radare2: .rdata) utf16le de-lu": 1,
                "radare2: .rdata) utf16le div-mv": 1,
                "radare2: .rdata) utf16le el-gr": 1,
                "radare2: .rdata) utf16le en-au": 1,
                "radare2: .rdata) utf16le en-bz": 1,
                "radare2: .rdata) utf16le en-ca": 1,
                "radare2: .rdata) utf16le en-cb": 1,
                "radare2: .rdata) utf16le en-gb": 1,
                "radare2: .rdata) utf16le en-ie": 1,
                "radare2: .rdata) utf16le en-jm": 1,
                "radare2: .rdata) utf16le en-nz": 1,
                "radare2: .rdata) utf16le en-ph": 1,
                "radare2: .rdata) utf16le en-tt": 1,
                "radare2: .rdata) utf16le en-us": 1,
                "radare2: .rdata) utf16le en-za": 1,
                "radare2: .rdata) utf16le en-zw": 1,
                "radare2: .rdata) utf16le es-ar": 1,
                "radare2: .rdata) utf16le es-bo": 1,
                "radare2: .rdata) utf16le es-cl": 1,
                "radare2: .rdata) utf16le es-co": 1,
                "radare2: .rdata) utf16le es-cr": 1,
                "radare2: .rdata) utf16le es-do": 1,
                "radare2: .rdata) utf16le es-ec": 1,
                "radare2: .rdata) utf16le es-es": 1,
                "radare2: .rdata) utf16le es-gt": 1,
                "radare2: .rdata) utf16le es-hn": 1,
                "radare2: .rdata) utf16le es-mx": 1,
                "radare2: .rdata) utf16le es-ni": 1,
                "radare2: .rdata) utf16le es-pa": 1,
                "radare2: .rdata) utf16le es-pe": 1,
                "radare2: .rdata) utf16le es-pr": 1,
                "radare2: .rdata) utf16le es-py": 1,
                "radare2: .rdata) utf16le es-sv": 1,
                "radare2: .rdata) utf16le es-uy": 1,
                "radare2: .rdata) utf16le es-ve": 1,
                "radare2: .rdata) utf16le et-ee": 1,
                "radare2: .rdata) utf16le eu-es": 1,
                "radare2: .rdata) utf16le fa-ir": 1,
                "radare2: .rdata) utf16le fi-fi": 1,
                "radare2: .rdata) utf16le fo-fo": 1,
                "radare2: .rdata) utf16le fr-be": 1,
                "radare2: .rdata) utf16le fr-ca": 1,
                "radare2: .rdata) utf16le fr-ch": 1,
                "radare2: .rdata) utf16le fr-fr": 1,
                "radare2: .rdata) utf16le fr-lu": 1,
                "radare2: .rdata) utf16le fr-mc": 1,
                "radare2: .rdata) utf16le gl-es": 1,
                "radare2: .rdata) utf16le gu-in": 1,
                "radare2: .rdata) utf16le he-il": 1,
                "radare2: .rdata) utf16le hi-in": 1,
                "radare2: .rdata) utf16le hr-ba": 1,
                "radare2: .rdata) utf16le hr-hr": 1,
                "radare2: .rdata) utf16le hu-hu": 1,
                "radare2: .rdata) utf16le hy-am": 1,
                "radare2: .rdata) utf16le id-id": 1,
                "radare2: .rdata) utf16le is-is": 1,
                "radare2: .rdata) utf16le it-ch": 1,
                "radare2: .rdata) utf16le it-it": 1,
                "radare2: .rdata) utf16le ja-jp": 1,
                "radare2: .rdata) utf16le ka-ge": 1,
                "radare2: .rdata) utf16le kk-kz": 1,
                "radare2: .rdata) utf16le kn-in": 1,
                "radare2: .rdata) utf16le kok-in": 1,
                "radare2: .rdata) utf16le ko-kr": 1,
                "radare2: .rdata) utf16le ky-kg": 1,
                "radare2: .rdata) utf16le lt-lt": 1,
                "radare2: .rdata) utf16le lv-lv": 1,
                "radare2: .rdata) utf16le mi-nz": 1,
                "radare2: .rdata) utf16le mk-mk": 1,
                "radare2: .rdata) utf16le ml-in": 1,
                "radare2: .rdata) utf16le mn-mn": 1,
                "radare2: .rdata) utf16le mr-in": 1,
                "radare2: .rdata) utf16le ms-bn": 1,
                "radare2: .rdata) utf16le ms-my": 1,
                "radare2: .rdata) utf16le mt-mt": 1,
                "radare2: .rdata) utf16le nb-no": 1,
                "radare2: .rdata) utf16le nl-be": 1,
                "radare2: .rdata) utf16le nl-nl": 1,
                "radare2: .rdata) utf16le nn-no": 1,
                "radare2: .rdata) utf16le ns-za": 1,
                "radare2: .rdata) utf16le pa-in": 1,
                "radare2: .rdata) utf16le pl-pl": 1,
                "radare2: .rdata) utf16le pt-br": 1,
                "radare2: .rdata) utf16le pt-pt": 1,
                "radare2: .rdata) utf16le quz-bo": 1,
                "radare2: .rdata) utf16le quz-ec": 1,
                "radare2: .rdata) utf16le quz-pe": 1,
                "radare2: .rdata) utf16le ro-ro": 1,
                "radare2: .rdata) utf16le ru-ru": 1,
                "radare2: .rdata) utf16le sa-in": 1,
                "radare2: .rdata) utf16le se-fi": 1,
                "radare2: .rdata) utf16le se-no": 1,
                "radare2: .rdata) utf16le se-se": 1,
                "radare2: .rdata) utf16le sk-sk": 1,
                "radare2: .rdata) utf16le sl-si": 1,
                "radare2: .rdata) utf16le sma-no": 1,
                "radare2: .rdata) utf16le sma-se": 1,
                "radare2: .rdata) utf16le smj-no": 1,
                "radare2: .rdata) utf16le smj-se": 1,
                "radare2: .rdata) utf16le smn-fi": 1,
                "radare2: .rdata) utf16le sms-fi": 1,
                "radare2: .rdata) utf16le sq-al": 1,
                "radare2: .rdata) utf16le sr-ba-cyrl": 1,
                "radare2: .rdata) utf16le sr-ba-latn": 1,
                "radare2: .rdata) utf16le sr-sp-cyrl": 1,
                "radare2: .rdata) utf16le sr-sp-latn": 1,
                "radare2: .rdata) utf16le sv-fi": 1,
                "radare2: .rdata) utf16le sv-se": 1,
                "radare2: .rdata) utf16le sw-ke": 1,
                "radare2: .rdata) utf16le syr-sy": 1,
                "radare2: .rdata) utf16le ta-in": 1,
                "radare2: .rdata) utf16le te-in": 1,
                "radare2: .rdata) utf16le th-th": 1,
                "radare2: .rdata) utf16le tn-za": 1,
                "radare2: .rdata) utf16le tr-tr": 1,
                "radare2: .rdata) utf16le tt-ru": 1,
                "radare2: .rdata) utf16le uk-ua": 1,
                "radare2: .rdata) utf16le ur-pk": 1,
                "radare2: .rdata) utf16le uz-uz-cyrl": 1,
                "radare2: .rdata) utf16le uz-uz-latn": 1,
                "radare2: .rdata) utf16le vi-vn": 1,
                "radare2: .rdata) utf16le xh-za": 1,
                "radare2: .rdata) utf16le zh-chs": 1,
                "radare2: .rdata) utf16le zh-cht": 1,
                "radare2: .rdata) utf16le zh-cn": 1,
                "radare2: .rdata) utf16le zh-hk": 1,
                "radare2: .rdata) utf16le zh-mo": 1,
                "radare2: .rdata) utf16le zh-sg": 1,
                "radare2: .rdata) utf16le zh-tw": 1,
                "radare2: .rdata) utf16le zu-za": 1,
                "radare2: .rdata) utf16le Sunday": 1,
                "radare2: .rdata) utf16le Monday": 1,
                "radare2: .rdata) utf16le Tuesday": 1,
                "radare2: .rdata) utf16le Wednesday": 1,
                "radare2: .rdata) utf16le Thursday": 1,
                "radare2: .rdata) utf16le Friday": 1,
                "radare2: .rdata) utf16le Saturday": 1,
                "radare2: .rdata) utf16le January": 1,
                "radare2: .rdata) utf16le February": 1,
                "radare2: .rdata) utf16le March": 1,
                "radare2: .rdata) utf16le April": 1,
                "radare2: .rdata) utf16le June": 1,
                "radare2: .rdata) utf16le July": 1,
                "radare2: .rdata) utf16le August": 1,
                "radare2: .rdata) utf16le September": 1,
                "radare2: .rdata) utf16le October": 1,
                "radare2: .rdata) utf16le November": 1,
                "radare2: .rdata) utf16le December": 1,
                "radare2: .rdata) utf16le MM/dd/yy": 1,
                "radare2: .rdata) utf16le dddd, MMMM dd, yyyy": 1,
                "radare2: .rdata) utf16le HH:mm:ss": 1,
                "radare2: .rdata) utf16le LC_ALL": 1,
                "radare2: .rdata) utf16le LC_COLLATE": 1,
                "radare2: .rdata) utf16le LC_CTYPE": 1,
                "radare2: .rdata) utf16le LC_MONETARY": 1,
                "radare2: .rdata) utf16le LC_NUMERIC": 1,
                "radare2: .rdata) utf16le LC_TIME": 1,
                "radare2: .rdata) utf16le (null)": 1,
                "radare2: .rdata) utf16le R6002\\r\\n- floating point support not loaded\\r\\n": 1,
                "radare2: .rdata) utf16le R6008\\r\\n- not enough space for arguments\\r\\n": 1,
                "radare2: .rdata) utf16le R6009\\r\\n- not enough space for environment\\r\\n": 1,
                "radare2: .rdata) utf16le R6010\\r\\n- abort() has been called\\r\\n": 1,
                "radare2: .rdata) utf16le R6016\\r\\n- not enough space for thread data\\r\\n": 1,
                "radare2: .rdata) utf16le R6017\\r\\n- unexpected multithread lock error\\r\\n": 1,
                "radare2: .rdata) utf16le R6018\\r\\n- unexpected heap error\\r\\n": 1,
                "radare2: .rdata) utf16le R6019\\r\\n- unable to open console device\\r\\n": 1,
                "radare2: .rdata) utf16le R6024\\r\\n- not enough space for _onexit/atexit table\\r\\n": 1,
                "radare2: .rdata) utf16le R6025\\r\\n- pure virtual function call\\r\\n": 1,
                "radare2: .rdata) utf16le R6026\\r\\n- not enough space for stdio initialization\\r\\n": 1,
                "radare2: .rdata) utf16le R6027\\r\\n- not enough space for lowio initialization\\r\\n": 1,
                "radare2: .rdata) utf16le R6028\\r\\n- unable to initialize heap\\r\\n": 1,
                "radare2: .rdata) utf16le R6030\\r\\n- CRT not initialized\\r\\n": 1,
                "radare2: .rdata) utf16le R6031\\r\\n- Attempt to initialize the CRT more than once.\\nThis indicates a bug in your application.\\r\\n": 1,
                "radare2: .rdata) utf16le R6032\\r\\n- not enough space for locale information\\r\\n": 1,
                "radare2: .rdata) utf16le R6033\\r\\n- Attempt to use MSIL code from this assembly during native code initialization\\nThis indicates a bug in your application. It is most likely the result of calling an MSIL-compiled (/clr) function from a native constructor or from DllMain.\\r\\n": 1,
                "radare2: .rdata) utf16le R6034\\r\\n- inconsistent onexit begin-end variables\\r\\n": 1,
                "radare2: .rdata) utf16le DOMAIN error\\r\\n": 1,
                "radare2: .rdata) utf16le SING error\\r\\n": 1,
                "radare2: .rdata) utf16le TLOSS error\\r\\n": 1,
                "radare2: .rdata) utf16le runtime error": 1,
                "radare2: .rdata) utf16le Runtime Error!\\n\\nProgram:": 1,
                "radare2: .rdata) utf16le <program name unknown>": 1,
                "radare2: .rdata) utf16le Microsoft Visual C++ Runtime Library": 1,
                "radare2: .rdata) utf16le UTF-8": 1,
                "radare2: .rdata) utf16le UTF-16LE": 1,
                "radare2: .rdata) utf16le UNICODE": 1,
                "radare2: .rdata) utf16le american": 1,
                "radare2: .rdata) utf16le american english": 1,
                "radare2: .rdata) utf16le american-english": 1,
                "radare2: .rdata) utf16le australian": 1,
                "radare2: .rdata) utf16le belgian": 1,
                "radare2: .rdata) utf16le canadian": 1,
                "radare2: .rdata) utf16le chinese": 1,
                "radare2: .rdata) utf16le chinese-hongkong": 1,
                "radare2: .rdata) utf16le chinese-simplified": 1,
                "radare2: .rdata) utf16le chinese-singapore": 1,
                "radare2: .rdata) utf16le chinese-traditional": 1,
                "radare2: .rdata) utf16le dutch-belgian": 1,
                "radare2: .rdata) utf16le english-american": 1,
                "radare2: .rdata) utf16le english-aus": 1,
                "radare2: .rdata) utf16le english-belize": 1,
                "radare2: .rdata) utf16le english-can": 1,
                "radare2: .rdata) utf16le english-caribbean": 1,
                "radare2: .rdata) utf16le english-ire": 1,
                "radare2: .rdata) utf16le english-jamaica": 1,
                "radare2: .rdata) utf16le english-nz": 1,
                "radare2: .rdata) utf16le english-south africa": 1,
                "radare2: .rdata) utf16le english-trinidad y tobago": 1,
                "radare2: .rdata) utf16le english-uk": 1,
                "radare2: .rdata) utf16le english-us": 1,
                "radare2: .rdata) utf16le english-usa": 1,
                "radare2: .rdata) utf16le french-belgian": 1,
                "radare2: .rdata) utf16le french-canadian": 1,
                "radare2: .rdata) utf16le french-luxembourg": 1,
                "radare2: .rdata) utf16le french-swiss": 1,
                "radare2: .rdata) utf16le german-austrian": 1,
                "radare2: .rdata) utf16le german-lichtenstein": 1,
                "radare2: .rdata) utf16le german-luxembourg": 1,
                "radare2: .rdata) utf16le german-swiss": 1,
                "radare2: .rdata) utf16le irish-english": 1,
                "radare2: .rdata) utf16le italian-swiss": 1,
                "radare2: .rdata) utf16le norwegian": 1,
                "radare2: .rdata) utf16le norwegian-bokmal": 1,
                "radare2: .rdata) utf16le norwegian-nynorsk": 1,
                "radare2: .rdata) utf16le portuguese-brazilian": 1,
                "radare2: .rdata) utf16le spanish-argentina": 1,
                "radare2: .rdata) utf16le spanish-bolivia": 1,
                "radare2: .rdata) utf16le spanish-chile": 1,
                "radare2: .rdata) utf16le spanish-colombia": 1,
                "radare2: .rdata) utf16le spanish-costa rica": 1,
                "radare2: .rdata) utf16le spanish-dominican republic": 1,
                "radare2: .rdata) utf16le spanish-ecuador": 1,
                "radare2: .rdata) utf16le spanish-el salvador": 1,
                "radare2: .rdata) utf16le spanish-guatemala": 1,
                "radare2: .rdata) utf16le spanish-honduras": 1,
                "radare2: .rdata) utf16le spanish-mexican": 1,
                "radare2: .rdata) utf16le spanish-modern": 1,
                "radare2: .rdata) utf16le spanish-nicaragua": 1,
                "radare2: .rdata) utf16le spanish-panama": 1,
                "radare2: .rdata) utf16le spanish-paraguay": 1,
                "radare2: .rdata) utf16le spanish-peru": 1,
                "radare2: .rdata) utf16le spanish-puerto rico": 1,
                "radare2: .rdata) utf16le spanish-uruguay": 1,
                "radare2: .rdata) utf16le spanish-venezuela": 1,
                "radare2: .rdata) utf16le swedish-finland": 1,
                "radare2: .rdata) utf16le swiss": 1,
                "radare2: .rdata) utf16le america": 1,
                "radare2: .rdata) utf16le britain": 1,
                "radare2: .rdata) utf16le china": 1,
                "radare2: .rdata) utf16le czech": 1,
                "radare2: .rdata) utf16le england": 1,
                "radare2: .rdata) utf16le great britain": 1,
                "radare2: .rdata) utf16le holland": 1,
                "radare2: .rdata) utf16le hong-kong": 1,
                "radare2: .rdata) utf16le new-zealand": 1,
                "radare2: .rdata) utf16le pr china": 1,
                "radare2: .rdata) utf16le pr-china": 1,
                "radare2: .rdata) utf16le puerto-rico": 1,
                "radare2: .rdata) utf16le slovak": 1,
                "radare2: .rdata) utf16le south africa": 1,
                "radare2: .rdata) utf16le south korea": 1,
                "radare2: .rdata) utf16le south-africa": 1,
                "radare2: .rdata) utf16le south-korea": 1,
                "radare2: .rdata) utf16le trinidad & tobago": 1,
                "radare2: .rdata) utf16le united-kingdom": 1,
                "radare2: .rdata) utf16le united-states": 1,
                "radare2: .rdata) utf16le USER32.DLL": 1,
                "radare2: .rdata) utf16le combase.dll": 1,
                "radare2: .rdata) utf16le advapi32.dll": 1,
                "radare2: .rdata) utf32le  0@P`p": 1,
                "radare2: .rdata) utf16le CONOUT$": 1,
                "radare2: .rdata)  utf8 ?\u02e9:7 blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .rdata)  utf8 ?\u06e0*B blocks=Basic Latin,Arabic": 1,
                "radare2: .rdata)  utf8 ?PN\u079f blocks=Basic Latin,Thaana": 1,
                "radare2: .rdata)  utf8 l>*>\u05e1+ blocks=Basic Latin,Hebrew": 1,
                "radare2: .rdata)  utf8 T>b\u03f4 blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rdata)  utf8 *|\\a>uZ>2": 1,
                "radare2: .rdata)  utf8 \u02bbf>$ blocks=Spacing Modifier Letters,Basic Latin": 1,
                "radare2: .rdata)  utf8 {,\u0306$E> blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .rdata) utf16le ERROR : Unable to initialize critical section in CAtlBaseModule\\n": 1,
                "radare2: .rdata) utf16le WinHttpClient": 1,
                "radare2: .rdata) utf32le \\ \\n,-\u6475 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf32le |#!=&/@+vn": 1,
                "radare2: (.rdata) ascii": 1,
                "radare2: .rdata) utf16le Microsoft\\Windows": 1,
                "radare2: .rdata) utf16le \\BBTmp988712": 1,
                "radare2: .rdata) utf16le \\BTmp988712": 1,
                "radare2: .rdata) utf16le \\Microsoft\\Windows\\CRMFiles": 1,
                "radare2: .rdata) utf16le \\Microsoft\\Windows\\TmpFiles": 1,
                "radare2: .rdata) utf16le .txt": 1,
                "radare2: .rdata) utf16le Microsoft\\windows\\Tmp98871": 1,
                "radare2: .rdata) utf16le \\Microsoft\\Windows\\Tmp9932u1.bat": 1,
                "radare2: .rdata) utf16le Microsoft\\Windows\\TmpFiles\\": 1,
                "radare2: .rdata) utf16le Microsoft\\Windows\\TmpFiles": 1,
                "radare2: .rdata) utf16le": 1,
                "radare2: .rdata) utf16le \\ssc": 1,
                "radare2: .rdata) utf16le swchost": 1,
                "radare2: .rdata) utf16le %I64d": 1,
                "radare2: .rdata)  utf8 (kdz": 2,
                "radare2: .rdata)  utf8 !#\u0133V blocks=Basic Latin,Latin Extended-A": 2,
                "radare2: .rdata)  utf8 |\u04cceL blocks=Basic Latin,Cyrillic": 2,
                "radare2: .rdata)  utf8 \u04b1t9G blocks=Cyrillic,Basic Latin": 2,
                "radare2: .rdata)  utf8 +\u04c9Zz blocks=Basic Latin,Cyrillic": 2,
                "radare2: .rdata)  utf8 c\uc723ju\\n blocks=Basic Latin,Hangul Syllables": 2,
                "radare2: .rdata)  utf8 wn>Jj\u046e blocks=Basic Latin,Cyrillic": 2,
                "radare2: .rdata) utf32le \\a\\a\\b\\b\\t\\t\\n\\n\\v\\v\\f\\f\\r\\r": 2,
                "radare2: .rdata) utf32le !1Aa": 1,
                "radare2: .rdata) utf32le \\a\\b\\t\\n\\v\\r": 1,
                "radare2: .rdata) utf32le #+3;CScs": 1,
                "radare2: .rdata) utf16le ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/": 1,
                "radare2: .rdata) utf16le Tmp98871": 1,
                "radare2: .rdata) utf16le \\..\\": 1,
                "radare2: .rdata) utf16le \\../": 1,
                "radare2: .rdata) utf16le /../": 1,
                "radare2: .rdata) utf16le /..\\": 1,
                "radare2: .rdata) utf16le %s%s": 1,
                "radare2: .rdata) utf16le %s%s%s": 1,
                "radare2: .rdata) utf32le :;>\u3e3e blocks=Basic Latin,CJK Unified Ideographs Extension A": 1,
                "radare2: .rdata) utf16le \\cmd.exe": 1,
                "radare2: .rdata) utf16le image/jpeg": 1,
                "radare2: .rdata) utf16le .zip": 1,
                "radare2: .rdata) utf16le .zoo": 1,
                "radare2: .rdata) utf16le .arc": 1,
                "radare2: .rdata) utf16le .lzh": 1,
                "radare2: .rdata) utf16le .arj": 1,
                "radare2: .rdata) utf16le .tgz": 1,
                "radare2: .rdata)  utf8 m?\u02fcK blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .rdata) utf16le \\f!\\n\ue400.\ud400/\uc4000\u74001\u64008\u60a0 blocks=Basic Latin,Private Use Area,Hangul Syllables,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf16le \\v!\\f\uf400 blocks=Basic Latin,Private Use Area": 1,
                "radare2: .data) utf32le \\t\\a\\f\\b\\f\\t\\f\\n\\a\\v\\b\\f": 1,
                "radare2: .data) utf32le R\\rS\\rW": 1,
                "radare2: .data) utf32le Y\\vl\\rm p": 1,
                "radare2: .data) utf32le \\v\u00a7\\r\u00b7 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: (.data) ascii": 4,
                "radare2: .data) utf32le 5\\v@\u03ff blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 HMXB\u49d39;5 blocks=Basic Latin,CJK Unified Ideographs Extension A": 1,
                "radare2: .data)  utf8 ]\u0740nL\u025b blocks=Basic Latin,Syriac,IPA Extensions": 1,
                "radare2: .data)  utf8 ?q=\\n\u05e3p=\\n\u05e3 blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 \u03d4?$# blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .data)  utf8 \u2f3a;1a blocks=Kangxi Radicals,Basic Latin": 1,
                "radare2: .data)  utf8 zc%C1,<!": 1,
                "radare2: .data)  utf8 ;\u0708X\\b\\e blocks=Basic Latin,Syriac": 1,
                "radare2: .data)  utf8 ;\u0184EB\\a blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 Q\u03dbsw\\b blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 \u039bsw\\b blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .data)  utf8 \u109fsw\\b blocks=Myanmar,Basic Latin": 1,
                "radare2: .data)  utf8 \u025bsw\\b blocks=IPA Extensions,Basic Latin": 1,
                "radare2: arch     x86": 1,
                "radare2: baddr    0x13f0b0000": 1,
                "radare2: binsz    958464": 1,
                "radare2: bintype  pe": 1,
                "radare2: bits     64": 1,
                "radare2: canary   false": 1,
                "radare2: retguard false": 1,
                "radare2: class    PE32+": 1,
                "radare2: cmp.csum 0x000f83b2": 1,
                "radare2: compiled Mon Oct  9 03:21:57 2017": 1,
                "radare2: crypto   false": 1,
                "radare2: endian   little": 1,
                "radare2: havecode true": 1,
                "radare2: hdr.csum 0x504d5544": 1,
                "radare2: laddr    0x0": 1,
                "radare2: linenum  false": 1,
                "radare2: lsyms    false": 1,
                "radare2: machine  AMD 64": 1,
                "radare2: maxopsz  16": 1,
                "radare2: minopsz  1": 1,
                "radare2: nx       true": 1,
                "radare2: os       windows": 1,
                "radare2: overlay  false": 1,
                "radare2: pcalign  0": 1,
                "radare2: pic      true": 1,
                "radare2: relocs   false": 1,
                "radare2: signed   false": 1,
                "radare2: sanitiz  false": 1,
                "radare2: static   false": 1,
                "radare2: stripped false": 1,
                "radare2: subsys   Windows GUI": 1,
                "radare2: va       true": 1,
                "radare2: PE file header:": 1,
                "radare2: IMAGE_NT_HEADERS": 1,
                "radare2: Signature : 0x4550": 1,
                "radare2: IMAGE_FILE_HEADERS": 1,
                "radare2: Machine : 0x8664": 1,
                "radare2: NumberOfSections : 0x6": 1,
                "radare2: TimeDateStamp : 0x59dadd45": 1,
                "radare2: PointerToSymbolTable : 0x0": 1,
                "radare2: NumberOfSymbols : 0x0": 1,
                "radare2: SizeOfOptionalHeader : 0xf0": 1,
                "radare2: Characteristics : 0x22": 1,
                "radare2: IMAGE_OPTIONAL_HEADERS": 1,
                "radare2: Magic : 0x20b": 1,
                "radare2: MajorLinkerVersion : 0xc": 1,
                "radare2: MinorLinkerVersion : 0x0": 1,
                "radare2: SizeOfCode : 0xa1000": 1,
                "radare2: SizeOfInitializedData : 0x45200": 1,
                "radare2: SizeOfUninitializedData : 0x0": 1,
                "radare2: AddressOfEntryPoint : 0x62ab4": 1,
                "radare2: BaseOfCode : 0x1000": 1,
                "radare2: ImageBase : 0x3f0b0000": 1,
                "radare2: SectionAlignment : 0x1000": 1,
                "radare2: FileAlignment : 0x200": 1,
                "radare2: MajorOperatingSystemVersion : 0x5": 1,
                "radare2: MinorOperatingSystemVersion : 0x2": 1,
                "radare2: MajorImageVersion : 0x0": 1,
                "radare2: MinorImageVersion : 0x0": 1,
                "radare2: MajorSubsystemVersion : 0x5": 1,
                "radare2: MinorSubsystemVersion : 0x2": 1,
                "radare2: Win32VersionValue : 0x0": 1,
                "radare2: SizeOfImage : 0xea000": 1,
                "radare2: SizeOfHeaders : 0x400": 1,
                "radare2: CheckSum : 0x504d5544": 1,
                "radare2: Subsystem : 0x2": 1,
                "radare2: DllCharacteristics : 0x8160": 1,
                "radare2: SizeOfStackReserve : 0x100000": 1,
                "radare2: SizeOfStackCommit : 0x1000": 1,
                "radare2: SizeOfHeapReserve : 0x100000": 1,
                "radare2: SizeOfHeapCommit : 0x1000": 1,
                "radare2: LoaderFlags : 0x0": 1,
                "radare2: NumberOfRvaAndSizes : 0x10": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "radare2: VirtualAddress : 0xd5418": 1,
                "radare2: Size : 0xb4": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "radare2: VirtualAddress : 0xe7000": 1,
                "radare2: Size : 0x1e0": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_EXCEPTION": 1,
                "radare2: VirtualAddress : 0xdf000": 1,
                "radare2: Size : 0x7b3c": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_BASERELOC": 1,
                "radare2: VirtualAddress : 0xe8000": 1,
                "radare2: Size : 0x1374": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_DEBUG": 1,
                "radare2: VirtualAddress : 0xa27d0": 1,
                "radare2: Size : 0x38": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG": 1,
                "radare2: VirtualAddress : 0xb9d90": 1,
                "radare2: Size : 0x70": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "radare2: VirtualAddress : 0xa2000": 1,
                "radare2: Size : 0x610": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "radare2: VirtualAddress : 0x0": 1,
                "radare2: Size : 0xffff": 1,
                "radare2: kernel32.dll": 1,
                "radare2: user32.dll": 1,
                "radare2: gdi32.dll": 1,
                "radare2: shell32.dll": 1,
                "radare2: ole32.dll": 1,
                "radare2: gdiplus.dll": 1,
                "radare2: ws2_32.dll": 1,
                "radare2: psapi.dll": 1,
                "radare2: type=SET_64 KERNEL32.dll_Process32NextW": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateToolhelp32Snapshot": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetProcessAffinityMask": 1,
                "radare2: type=SET_64 KERNEL32.dll_VirtualProtect": 1,
                "radare2: type=SET_64 KERNEL32.dll_MoveFileExW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetTimeZoneInformation": 1,
                "radare2: type=SET_64 KERNEL32.dll_UnregisterWaitEx": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetThreadAffinityMask": 1,
                "radare2: type=SET_64 KERNEL32.dll_FreeLibraryAndExitThread": 1,
                "radare2: type=SET_64 KERNEL32.dll_FlushFileBuffers": 1,
                "radare2: type=SET_64 KERNEL32.dll_IsDebuggerPresent": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetWindowsDirectoryW": 1,
                "radare2: type=SET_64 KERNEL32.dll_UnregisterWait": 1,
                "radare2: type=SET_64 KERNEL32.dll_ChangeTimerQueueTimer": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateTimerQueueTimer": 1,
                "radare2: type=SET_64 KERNEL32.dll_DeleteTimerQueueTimer": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateSemaphoreW": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateDirectoryW": 1,
                "radare2: type=SET_64 KERNEL32.dll_DeleteFileW": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetFilePointerEx": 1,
                "radare2: type=SET_64 KERNEL32.dll_FileTimeToSystemTime": 1,
                "radare2: type=SET_64 KERNEL32.dll_SwitchToThread": 1,
                "radare2: type=SET_64 KERNEL32.dll_OutputDebugStringW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetModuleHandleExW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetLocalTime": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetDateFormatW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetTimeFormatW": 1,
                "radare2: type=SET_64 KERNEL32.dll_RaiseException": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetVersionExW": 1,
                "radare2: type=SET_64 KERNEL32.dll_RegisterWaitForSingleObject": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetFileSize": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetFileInformationByHandle": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetFilePointer": 1,
                "radare2: type=SET_64 KERNEL32.dll_VirtualFree": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetFileAttributesA": 1,
                "radare2: type=SET_64 KERNEL32.dll_ReadFile": 1,
                "radare2: type=SET_64 KERNEL32.dll_TlsFree": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateFileW": 1,
                "radare2: type=SET_64 KERNEL32.dll_FindNextFileW": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetFileTime": 1,
                "radare2: type=SET_64 KERNEL32.dll_WriteConsoleW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCurrentThreadId": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetEvent": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCurrentThread": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetSystemTimeAsFileTime": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateEventW": 1,
                "radare2: type=SET_64 KERNEL32.dll_CompareStringW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCurrentProcessId": 1,
                "radare2: type=SET_64 KERNEL32.dll_MultiByteToWideChar": 1,
                "radare2: type=SET_64 KERNEL32.dll_TlsSetValue": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCurrentProcess": 1,
                "radare2: type=SET_64 KERNEL32.dll_DuplicateHandle": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetModuleFileNameA": 1,
                "radare2: type=SET_64 KERNEL32.dll_InitializeCriticalSectionAndSpinCount": 1,
                "radare2: type=SET_64 KERNEL32.dll_QueryPerformanceCounter": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateThread": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetModuleHandleA": 1,
                "radare2: type=SET_64 KERNEL32.dll_FreeLibrary": 1,
                "radare2: type=SET_64 KERNEL32.dll_LoadLibraryExW": 1,
                "radare2: type=SET_64 KERNEL32.dll_VirtualAlloc": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCPInfo": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetEnvironmentStringsW": 1,
                "radare2: type=SET_64 KERNEL32.dll_FreeEnvironmentStringsW": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetConsoleCtrlHandler": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetSystemInfo": 1,
                "radare2: type=SET_64 KERNEL32.dll_LoadLibraryW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetACP": 1,
                "radare2: type=SET_64 KERNEL32.dll_TlsAlloc": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetModuleFileNameW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetUserDefaultLCID": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetStartupInfoW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetStringTypeW": 1,
                "radare2: type=SET_64 KERNEL32.dll_IsValidCodePage": 1,
                "radare2: type=SET_64 KERNEL32.dll_IsValidLocale": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetLocaleInfoW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetThreadPriority": 1,
                "radare2: type=SET_64 KERNEL32.dll_ReleaseSemaphore": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetUnhandledExceptionFilter": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetOEMCP": 1,
                "radare2: type=SET_64 KERNEL32.dll_FindClose": 1,
                "radare2: type=SET_64 KERNEL32.dll_FindFirstFileW": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetErrorMode": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetFileAttributesW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCurrentDirectoryW": 1,
                "radare2: type=SET_64 KERNEL32.dll_OpenProcess": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetStdHandle": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetThreadPriority": 1,
                "radare2: type=SET_64 KERNEL32.dll_LCMapStringW": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateProcessW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCommandLineA": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetTickCount": 1,
                "radare2: type=SET_64 KERNEL32.dll_WaitForSingleObject": 1,
                "radare2: type=SET_64 KERNEL32.dll_Sleep": 1,
                "radare2: type=SET_64 KERNEL32.dll_TlsGetValue": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetLastError": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetLastError": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetFileType": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetConsoleMode": 1,
                "radare2: type=SET_64 KERNEL32.dll_CloseHandle": 1,
                "radare2: type=SET_64 KERNEL32.dll_WaitForSingleObjectEx": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetProcessHeap": 1,
                "radare2: type=SET_64 KERNEL32.dll_HeapFree": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateFileA": 1,
                "radare2: type=SET_64 KERNEL32.dll_SystemTimeToFileTime": 1,
                "radare2: type=SET_64 KERNEL32.dll_UnmapViewOfFile": 1,
                "radare2: type=SET_64 KERNEL32.dll_WriteFile": 1,
                "radare2: type=SET_64 KERNEL32.dll_WideCharToMultiByte": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetProcAddress": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetModuleHandleW": 1,
                "radare2: type=SET_64 KERNEL32.dll_RtlPcToFileHeader": 1,
                "radare2: type=SET_64 KERNEL32.dll_RtlUnwindEx": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetConsoleWindow": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetConsoleCP": 1,
                "radare2: type=SET_64 KERNEL32.dll_DeleteTimerQueue": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetThreadTimes": 1,
                "radare2: type=SET_64 KERNEL32.dll_RtlVirtualUnwind": 1,
                "radare2: type=SET_64 KERNEL32.dll_RtlLookupFunctionEntry": 1,
                "radare2: type=SET_64 KERNEL32.dll_RtlCaptureContext": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetLogicalProcessorInformation": 1,
                "radare2: type=SET_64 KERNEL32.dll_TerminateProcess": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetStdHandle": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetEnvironmentVariableA": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetEndOfFile": 1,
                "radare2: type=SET_64 KERNEL32.dll_LocalFileTimeToFileTime": 1,
                "radare2: type=SET_64 KERNEL32.dll_EnumSystemLocalesW": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateTimerQueue": 1,
                "radare2: type=SET_64 KERNEL32.dll_AreFileApisANSI": 1,
                "radare2: type=SET_64 KERNEL32.dll_IsProcessorFeaturePresent": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetNumaHighestNodeNumber": 1,
                "radare2: type=SET_64 KERNEL32.dll_ReadConsoleW": 1,
                "radare2: type=SET_64 KERNEL32.dll_SignalObjectAndWait": 1,
                "radare2: type=SET_64 KERNEL32.dll_UnhandledExceptionFilter": 1,
                "radare2: type=SET_64 PSAPI.DLL_GetProcessMemoryInfo": 1,
                "radare2: type=SET_64 PSAPI.DLL_QueryWorkingSet": 1,
                "radare2: type=SET_64 USER32.dll_LoadAcceleratorsW": 1,
                "radare2: type=SET_64 USER32.dll_GetDesktopWindow": 1,
                "radare2: type=SET_64 USER32.dll_GetDC": 1,
                "radare2: type=SET_64 USER32.dll_ReleaseDC": 1,
                "radare2: type=SET_64 USER32.dll_TranslateAcceleratorW": 1,
                "radare2: type=SET_64 USER32.dll_GetSystemMetrics": 1,
                "radare2: type=SET_64 USER32.dll_TranslateMessage": 1,
                "radare2: type=SET_64 USER32.dll_DispatchMessageW": 1,
                "radare2: type=SET_64 USER32.dll_GetMessageW": 1,
                "radare2: type=SET_64 USER32.dll_wsprintfW": 1,
                "radare2: type=SET_64 KERNEL32.dll_QueryDepthSList": 1,
                "radare2: type=SET_64 KERNEL32.dll_ExitProcess": 1,
                "radare2: type=SET_64 KERNEL32.dll_DeleteCriticalSection": 1,
                "radare2: type=SET_64 KERNEL32.dll_InterlockedFlushSList": 1,
                "radare2: type=SET_64 KERNEL32.dll_InitializeSListHead": 1,
                "radare2: type=SET_64 KERNEL32.dll_HeapSize": 1,
                "radare2: type=SET_64 KERNEL32.dll_DecodePointer": 1,
                "radare2: type=SET_64 KERNEL32.dll_EncodePointer": 1,
                "radare2: type=SET_64 KERNEL32.dll_HeapReAlloc": 1,
                "radare2: type=SET_64 KERNEL32.dll_InterlockedPushEntrySList": 1,
                "radare2: type=SET_64 KERNEL32.dll_InterlockedPopEntrySList": 1,
                "radare2: type=SET_64 KERNEL32.dll_EnterCriticalSection": 1,
                "radare2: type=SET_64 KERNEL32.dll_LeaveCriticalSection": 1,
                "radare2: type=SET_64 KERNEL32.dll_HeapAlloc": 1,
                "radare2: type=SET_64 gdiplus.dll_GdiplusStartup": 1,
                "radare2: type=SET_64 gdiplus.dll_GdiplusShutdown": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipSaveImageToFile": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipCloneImage": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipDisposeImage": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipCreateBitmapFromHBITMAP": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipGetImageEncodersSize": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipGetImageEncoders": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipAlloc": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipFree": 1,
                "radare2: type=SET_64 SHELL32.dll_SHGetSpecialFolderPathW": 1,
                "radare2: type=SET_64 SHELL32.dll_SHGetFolderPathW": 1,
                "radare2: type=SET_64 GDI32.dll_DeleteObject": 1,
                "radare2: type=SET_64 GDI32.dll_SelectObject": 1,
                "radare2: type=SET_64 GDI32.dll_CreateCompatibleDC": 1,
                "radare2: type=SET_64 GDI32.dll_BitBlt": 1,
                "radare2: type=SET_64 GDI32.dll_CreateCompatibleBitmap": 1,
                "radare2: type=SET_64 WS2_32.dll_htons": 1,
                "radare2: type=SET_64 WS2_32.dll_inet_addr": 1,
                "radare2: type=SET_64 WS2_32.dll_closesocket": 1,
                "radare2: type=SET_64 WS2_32.dll_WSAStartup": 1,
                "radare2: type=SET_64 WS2_32.dll_WSACleanup": 1,
                "radare2: type=SET_64 WS2_32.dll_select": 1,
                "radare2: type=SET_64 WS2_32.dll_sendto": 1,
                "radare2: type=SET_64 WS2_32.dll_socket": 1,
                "radare2: type=SET_64 WS2_32.dll_recv": 1,
                "radare2: type=SET_64 ole32.dll_CoCreateGuid": 1,
                "radare2: type=SET_64 ole32.dll_StringFromGUID2": 1,
                "radare2: 958464": 1,
                "clamav: bytecode: JIT disabled": 1,
                "clamav: Cannot prepare for JIT, LLVM is not compiled or not linked": 1,
                "clamav: Bytecode: 0 bytecode prepared with JIT, 94 prepared with interpreter, 94 total": 1,
                "clamav: Recognized MS-EXE/DLL file": 1,
                "clamav: in cli_peheader": 1,
                "clamav: Matched signature for file type PE": 1,
                "clamav: Matched signature for file type ZIP-SFX at 1?????": 1,
                "clamav: cli_scanicon: scanned a total of 0[0 actual] icons across 0 groups": 2,
                "clamav: Running bytecode for logical signature match": 1,
                "clamav: Bytecode 37 returned code: 0": 1,
                "clamav: ZIP/ZIP-SFX signature found at 1?????": 1,
                "clamav: in cli_unzip_single": 1,
                "clamav: cli_unzip: lh - ZMDNAME:0:\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0002\ufffd\ufffdL\ufffd?H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffde(\ufffd\ufffdu\u001dH\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdu": 1,
                "clamav: D\ufffd}(A\ufffd\ufffd\bE\u0003\ufffd\ufffd\b\ufffd\ufffdE\ufffd\ufffd\u000fE\ufffdL\ufffd'H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffdm(\ufffd\u0405\ufffdu2H\ufffdU(I\ufffd\ufffd\ufffdt\ufffd\ufffd\ufffd\ufffd\u0405\ufffdu \ufffdE(\ufffd\ufffd\bA\u0003\u0149E(\ufffd\ufffdu\u001c\ufffdO8D\ufffdk\ufffd;\ufffdt<A\ufffd\ufffd\ufffd\u0012A\ufffd\u0189E(\ufffd\ufffdt\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\u0010\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\u000fE\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0010\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffdA\u000fE\ufffd\ufffd\u03c5\ufffdu\u0010\ufffdG@9E(t\bA\ufffd\ufffd\bA\u000fD\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0004:2?????????:3?????????:4928558d:5????:0:1": 1,
                "clamav: CDBNAME:CL_TYPE_ZIP:3?????????:\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0002\ufffd\ufffdL\ufffd?H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffde(\ufffd\ufffdu\u001dH\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdu": 1,
                "clamav: D\ufffd}(A\ufffd\ufffd\bE\u0003\ufffd\ufffd\b\ufffd\ufffdE\ufffd\ufffd\u000fE\ufffdL\ufffd'H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffdm(\ufffd\u0405\ufffdu2H\ufffdU(I\ufffd\ufffd\ufffdt\ufffd\ufffd\ufffd\ufffd\u0405\ufffdu \ufffdE(\ufffd\ufffd\bA\u0003\u0149E(\ufffd\ufffdu\u001c\ufffdO8D\ufffdk\ufffd;\ufffdt<A\ufffd\ufffd\ufffd\u0012A\ufffd\u0189E(\ufffd\ufffdt\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\u0010\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\u000fE\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0010\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffdA\u000fE\ufffd\ufffd\u03c5\ufffdu\u0010\ufffdG@9E(t\bA\ufffd\ufffd\bA\u000fD\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0004:3?????????:2?????????:0:0:1?????????:0x0": 1,
                "clamav: cli_unzip: lh - has data desc": 1,
                "clamav: e_lfanew == 2??": 1,
                "clamav: Machine type: AMD64": 1,
                "clamav: NumberOfSections: 6": 1,
                "clamav: TimeDateStamp: Sun Oct  8 22:21:57 2???": 1,
                "clamav: SizeOfOptionalHeader: f0": 1,
                "clamav: File format: PE32+": 1,
                "clamav: MajorLinkerVersion: 12": 1,
                "clamav: MinorLinkerVersion: 0": 1,
                "clamav: SizeOfCode: 0xa????": 1,
                "clamav: AddressOfEntryPoint: 0x6????": 1,
                "clamav: BaseOfCode: 0x1???": 1,
                "clamav: SectionAlignment: 0x1???": 1,
                "clamav: FileAlignment: 0x2??": 1,
                "clamav: MajorSubsystemVersion: 5": 1,
                "clamav: MinorSubsystemVersion: 2": 1,
                "clamav: SizeOfImage: 0xe????": 1,
                "clamav: SizeOfHeaders: 0x4??": 1,
                "clamav: NumberOfRvaAndSizes: 16": 1,
                "clamav: Subsystem: Win32 GUI": 1,
                "clamav: Section 0": 1,
                "clamav: Section name: .text": 1,
                "clamav: Section data (from headers - in memory)": 6,
                "clamav: VirtualSize: 0xa???? 0xa????": 1,
                "clamav: VirtualAddress: 0x1??? 0x1???": 1,
                "clamav: SizeOfRawData: 0xa???? 0xa????": 1,
                "clamav: PointerToRawData: 0x1??? 0x1???": 1,
                "clamav: Section contains executable code": 1,
                "clamav: Section's memory is executable": 1,
                "clamav: MDB hashset: 6?????:8317150e841bd04fcefe612944efc005": 1,
                "clamav: Section 1": 1,
                "clamav: Section name: .rdata": 1,
                "clamav: VirtualSize: 0x3???? 0x3????": 1,
                "clamav: VirtualAddress: 0xa???? 0xa????": 1,
                "clamav: SizeOfRawData: 0x3???? 0x3????": 1,
                "clamav: PointerToRawData: 0xa???? 0xa????": 1,
                "clamav: MDB hashset: 2?????:181f4bc9702e6e3ae893e9b7cd79eb5a": 1,
                "clamav: Section 2": 1,
                "clamav: Section name: .data": 1,
                "clamav: VirtualSize: 0x8??? 0x8???": 2,
                "clamav: VirtualAddress: 0xd???? 0xd????": 2,
                "clamav: SizeOfRawData: 0x8??? 0x8???": 2,
                "clamav: PointerToRawData: 0xd???? 0xd????": 2,
                "clamav: Section's memory is writeable": 1,
                "clamav: MDB hashset: 3????:e1848f93f8cffa512675493e7c857bb7": 1,
                "clamav: Section 3": 1,
                "clamav: Section name: .pdata": 1,
                "clamav: MDB hashset: 3????:9b065020f0f62845fb96df4dfac5703e": 1,
                "clamav: Section 4": 1,
                "clamav: Section name: .rsrc": 1,
                "clamav: VirtualSize: 0x1??? 0x1???": 1,
                "clamav: VirtualAddress: 0xe???? 0xe????": 2,
                "clamav: SizeOfRawData: 0x1??? 0x1???": 1,
                "clamav: PointerToRawData: 0xe???? 0xe????": 2,
                "clamav: MDB hashset: 4???:b3fac958b02e1df4bbb8c178afec3004": 1,
                "clamav: Section 5": 1,
                "clamav: Section name: .reloc": 1,
                "clamav: VirtualSize: 0x2??? 0x2???": 1,
                "clamav: SizeOfRawData: 0x2??? 0x2???": 1,
                "clamav: MDB hashset: 8???:f04432d8d43eb25e93af86f0ce115712": 1,
                "clamav: EntryPoint offset: 0x6???? (4?????)": 1,
                "clamav: cli_magic_scandesc: returning 0  at line 2???": 1,
                "clamav: D\ufffd}(A\ufffd\ufffd\bE\u0003\ufffd\ufffd\b\ufffd\ufffdE\ufffd\ufffd\u000fE\ufffdL\ufffd'H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffdm(\ufffd\u0405\ufffdu2H\ufffdU(I\ufffd\ufffd\ufffdt\ufffd\ufffd\ufffd\ufffd\u0405\ufffdu \ufffdE(\ufffd\ufffd\bA\u0003\u0149E(\ufffd\ufffdu\u001c\ufffdO8D\ufffdk\ufffd;\ufffdt<A\ufffd\ufffd\ufffd\u0012A\ufffd\u0189E(\ufffd\ufffdt\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\u0010\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\u000fE\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0010\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffdA\u000fE\ufffd\ufffd\u03c5\ufffdu\u0010\ufffdG@9E(t\bA\ufffd\ufffd\bA\u000fD\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0004": 1,
                "clamav: OK": 1,
                "clamav: Scanned files: 1": 1,
                "clamav: Infected files: 0": 1,
                "radare2: -r-x .text;radare2: -r-- .rdata": 1,
                "radare2: -r-- .rdata;radare2: -rw- .data": 1,
                "radare2: -rw- .data;radare2: -r-- .pdata": 1,
                "radare2: -r-- .pdata;radare2: -r-- .rsrc": 1,
                "radare2: -r-- .rsrc;radare2: -r-- .reloc": 1,
                "radare2: -r-- .reloc;radare2: type=program": 1,
                "radare2: type=program;radare2: KERNEL32.dll_DecodePointer": 1,
                "radare2: KERNEL32.dll_DecodePointer;radare2: KERNEL32.dll_CreateThread": 1,
                "radare2: KERNEL32.dll_CreateThread;radare2: KERNEL32.dll_SetEvent": 1,
                "radare2: KERNEL32.dll_SetEvent;radare2: KERNEL32.dll_WaitForSingleObject": 1,
                "radare2: KERNEL32.dll_WaitForSingleObject;radare2: KERNEL32.dll_HeapAlloc": 1,
                "radare2: KERNEL32.dll_HeapAlloc;radare2: KERNEL32.dll_HeapFree": 1,
                "radare2: KERNEL32.dll_HeapFree;radare2: KERNEL32.dll_HeapReAlloc": 1,
                "radare2: KERNEL32.dll_HeapReAlloc;radare2: KERNEL32.dll_HeapSize": 1,
                "radare2: KERNEL32.dll_HeapSize;radare2: KERNEL32.dll_GetProcessHeap": 1,
                "radare2: KERNEL32.dll_GetProcessHeap;radare2: KERNEL32.dll_Sleep": 1,
                "radare2: KERNEL32.dll_Sleep;radare2: KERNEL32.dll_CreateTimerQueue": 1,
                "radare2: KERNEL32.dll_CreateTimerQueue;radare2: KERNEL32.dll_CreateEventW": 1,
                "radare2: KERNEL32.dll_CreateEventW;radare2: KERNEL32.dll_CreateTimerQueueTimer": 1,
                "radare2: KERNEL32.dll_CreateTimerQueueTimer;radare2: KERNEL32.dll_DeleteTimerQueueTimer": 1,
                "radare2: KERNEL32.dll_DeleteTimerQueueTimer;radare2: KERNEL32.dll_DeleteTimerQueue": 1,
                "radare2: KERNEL32.dll_DeleteTimerQueue;radare2: KERNEL32.dll_GetCurrentProcessId": 1,
                "radare2: KERNEL32.dll_GetCurrentProcessId;radare2: KERNEL32.dll_CreateToolhelp32Snapshot": 1,
                "radare2: KERNEL32.dll_CreateToolhelp32Snapshot;radare2: KERNEL32.dll_Process32NextW": 1,
                "radare2: KERNEL32.dll_Process32NextW;radare2: KERNEL32.dll_SetConsoleCtrlHandler": 1,
                "radare2: KERNEL32.dll_SetConsoleCtrlHandler;radare2: KERNEL32.dll_SetErrorMode": 1,
                "radare2: KERNEL32.dll_SetErrorMode;radare2: KERNEL32.dll_SetUnhandledExceptionFilter": 1,
                "radare2: KERNEL32.dll_SetUnhandledExceptionFilter;radare2: KERNEL32.dll_CreateFileA": 1,
                "radare2: KERNEL32.dll_CreateFileA;radare2: KERNEL32.dll_SetFilePointer": 1,
                "radare2: KERNEL32.dll_SetFilePointer;radare2: KERNEL32.dll_ReadFile": 1,
                "radare2: KERNEL32.dll_ReadFile;radare2: KERNEL32.dll_SystemTimeToFileTime": 1,
                "radare2: KERNEL32.dll_SystemTimeToFileTime;radare2: KERNEL32.dll_GetCurrentDirectoryW": 1,
                "radare2: KERNEL32.dll_GetCurrentDirectoryW;radare2: KERNEL32.dll_MultiByteToWideChar": 1,
                "radare2: KERNEL32.dll_MultiByteToWideChar;radare2: KERNEL32.dll_LocalFileTimeToFileTime": 1,
                "radare2: KERNEL32.dll_LocalFileTimeToFileTime;radare2: KERNEL32.dll_GetFileAttributesW": 1,
                "radare2: KERNEL32.dll_GetFileAttributesW;radare2: KERNEL32.dll_CreateDirectoryW": 1,
                "radare2: KERNEL32.dll_CreateDirectoryW;radare2: KERNEL32.dll_CreateFileW": 1,
                "radare2: KERNEL32.dll_CreateFileW;radare2: KERNEL32.dll_WriteFile": 1,
                "radare2: KERNEL32.dll_WriteFile;radare2: KERNEL32.dll_SetFileTime": 1,
                "radare2: KERNEL32.dll_SetFileTime;radare2: KERNEL32.dll_CloseHandle": 1,
                "radare2: KERNEL32.dll_CloseHandle;radare2: KERNEL32.dll_FindFirstFileW": 1,
                "radare2: KERNEL32.dll_FindFirstFileW;radare2: KERNEL32.dll_GetModuleFileNameW": 1,
                "radare2: KERNEL32.dll_GetModuleFileNameW;radare2: KERNEL32.dll_CreateProcessW": 1,
                "radare2: KERNEL32.dll_CreateProcessW;radare2: KERNEL32.dll_GetConsoleWindow": 1,
                "radare2: KERNEL32.dll_GetConsoleWindow;radare2: KERNEL32.dll_FindNextFileW": 1,
                "radare2: KERNEL32.dll_FindNextFileW;radare2: KERNEL32.dll_FindClose": 1,
                "radare2: KERNEL32.dll_FindClose;radare2: KERNEL32.dll_OpenProcess": 1,
                "radare2: KERNEL32.dll_OpenProcess;radare2: KERNEL32.dll_TerminateProcess": 1,
                "radare2: KERNEL32.dll_TerminateProcess;radare2: KERNEL32.dll_GetFileAttributesA": 1,
                "radare2: KERNEL32.dll_GetFileAttributesA;radare2: KERNEL32.dll_GetWindowsDirectoryW": 1,
                "radare2: KERNEL32.dll_GetWindowsDirectoryW;radare2: KERNEL32.dll_GetCurrentProcess": 1,
                "radare2: KERNEL32.dll_GetCurrentProcess;radare2: KERNEL32.dll_GetSystemInfo": 1,
                "radare2: KERNEL32.dll_GetSystemInfo;radare2: KERNEL32.dll_FileTimeToSystemTime": 1,
                "radare2: KERNEL32.dll_FileTimeToSystemTime;radare2: KERNEL32.dll_GetFileInformationByHandle": 1,
                "radare2: KERNEL32.dll_GetFileInformationByHandle;radare2: KERNEL32.dll_GetFileSize": 1,
                "radare2: KERNEL32.dll_GetFileSize;radare2: KERNEL32.dll_UnmapViewOfFile": 1,
                "radare2: KERNEL32.dll_UnmapViewOfFile;radare2: KERNEL32.dll_GetLocalTime": 1,
                "radare2: KERNEL32.dll_GetLocalTime;radare2: KERNEL32.dll_GetTickCount": 1,
                "radare2: KERNEL32.dll_GetTickCount;radare2: KERNEL32.dll_SetEndOfFile": 1,
                "radare2: KERNEL32.dll_SetEndOfFile;radare2: KERNEL32.dll_LoadLibraryW": 1,
                "radare2: KERNEL32.dll_LoadLibraryW;radare2: KERNEL32.dll_ReadConsoleW": 1,
                "radare2: KERNEL32.dll_ReadConsoleW;radare2: KERNEL32.dll_WriteConsoleW": 1,
                "radare2: KERNEL32.dll_WriteConsoleW;radare2: KERNEL32.dll_SetStdHandle": 1,
                "radare2: KERNEL32.dll_SetStdHandle;radare2: KERNEL32.dll_GetTimeZoneInformation": 1,
                "radare2: KERNEL32.dll_GetTimeZoneInformation;radare2: KERNEL32.dll_UnregisterWaitEx": 1,
                "radare2: KERNEL32.dll_UnregisterWaitEx;radare2: KERNEL32.dll_QueryDepthSList": 1,
                "radare2: KERNEL32.dll_QueryDepthSList;radare2: KERNEL32.dll_InterlockedFlushSList": 1,
                "radare2: KERNEL32.dll_InterlockedFlushSList;radare2: KERNEL32.dll_InterlockedPushEntrySList": 1,
                "radare2: KERNEL32.dll_InterlockedPushEntrySList;radare2: KERNEL32.dll_InterlockedPopEntrySList": 1,
                "radare2: KERNEL32.dll_InterlockedPopEntrySList;radare2: KERNEL32.dll_DeleteCriticalSection": 1,
                "radare2: KERNEL32.dll_DeleteCriticalSection;radare2: KERNEL32.dll_InitializeCriticalSectionAndSpinCount": 1,
                "radare2: KERNEL32.dll_InitializeCriticalSectionAndSpinCount;radare2: KERNEL32.dll_GetLastError": 1,
                "radare2: KERNEL32.dll_GetLastError;radare2: KERNEL32.dll_RaiseException": 1,
                "radare2: KERNEL32.dll_RaiseException;radare2: KERNEL32.dll_DeleteFileW": 1,
                "radare2: KERNEL32.dll_DeleteFileW;radare2: KERNEL32.dll_WideCharToMultiByte": 1,
                "radare2: KERNEL32.dll_WideCharToMultiByte;radare2: KERNEL32.dll_InitializeSListHead": 1,
                "radare2: KERNEL32.dll_InitializeSListHead;radare2: KERNEL32.dll_ReleaseSemaphore": 1,
                "radare2: KERNEL32.dll_ReleaseSemaphore;radare2: KERNEL32.dll_DuplicateHandle": 1,
                "radare2: KERNEL32.dll_DuplicateHandle;radare2: KERNEL32.dll_VirtualProtect": 1,
                "radare2: KERNEL32.dll_VirtualProtect;radare2: KERNEL32.dll_VirtualFree": 1,
                "radare2: KERNEL32.dll_VirtualFree;radare2: KERNEL32.dll_VirtualAlloc": 1,
                "radare2: KERNEL32.dll_VirtualAlloc;radare2: KERNEL32.dll_GetVersionExW": 1,
                "radare2: KERNEL32.dll_GetVersionExW;radare2: KERNEL32.dll_GetModuleHandleA": 1,
                "radare2: KERNEL32.dll_GetModuleHandleA;radare2: KERNEL32.dll_FreeLibraryAndExitThread": 1,
                "radare2: KERNEL32.dll_FreeLibraryAndExitThread;radare2: KERNEL32.dll_GetThreadTimes": 1,
                "radare2: KERNEL32.dll_GetThreadTimes;radare2: KERNEL32.dll_OutputDebugStringW": 1,
                "radare2: KERNEL32.dll_OutputDebugStringW;radare2: KERNEL32.dll_FreeEnvironmentStringsW": 1,
                "radare2: KERNEL32.dll_FreeEnvironmentStringsW;radare2: KERNEL32.dll_GetEnvironmentStringsW": 1,
                "radare2: KERNEL32.dll_GetEnvironmentStringsW;radare2: KERNEL32.dll_QueryPerformanceCounter": 1,
                "radare2: KERNEL32.dll_QueryPerformanceCounter;radare2: KERNEL32.dll_GetModuleFileNameA": 1,
                "radare2: KERNEL32.dll_GetModuleFileNameA;radare2: KERNEL32.dll_FlushFileBuffers": 1,
                "radare2: KERNEL32.dll_FlushFileBuffers;radare2: KERNEL32.dll_SetFilePointerEx": 1,
                "radare2: KERNEL32.dll_SetFilePointerEx;radare2: KERNEL32.dll_GetFileType": 1,
                "radare2: KERNEL32.dll_GetFileType;radare2: KERNEL32.dll_MoveFileExW": 1,
                "radare2: KERNEL32.dll_MoveFileExW;radare2: KERNEL32.dll_LoadLibraryExW": 1,
                "radare2: KERNEL32.dll_LoadLibraryExW;radare2: KERNEL32.dll_FreeLibrary": 1,
                "radare2: KERNEL32.dll_FreeLibrary;radare2: KERNEL32.dll_GetStdHandle": 1,
                "radare2: KERNEL32.dll_GetStdHandle;radare2: KERNEL32.dll_GetCurrentThread": 1,
                "radare2: KERNEL32.dll_GetCurrentThread;radare2: KERNEL32.dll_GetOEMCP": 1,
                "radare2: KERNEL32.dll_GetOEMCP;radare2: KERNEL32.dll_GetACP": 1,
                "radare2: KERNEL32.dll_GetACP;radare2: KERNEL32.dll_IsValidCodePage": 1,
                "radare2: KERNEL32.dll_IsValidCodePage;radare2: KERNEL32.dll_GetConsoleMode": 1,
                "radare2: KERNEL32.dll_GetConsoleMode;radare2: KERNEL32.dll_SetEnvironmentVariableA": 1,
                "radare2: KERNEL32.dll_SetEnvironmentVariableA;radare2: KERNEL32.dll_GetConsoleCP": 1,
                "radare2: KERNEL32.dll_GetConsoleCP;radare2: KERNEL32.dll_EnumSystemLocalesW": 1,
                "radare2: KERNEL32.dll_EnumSystemLocalesW;radare2: KERNEL32.dll_GetUserDefaultLCID": 1,
                "radare2: KERNEL32.dll_GetUserDefaultLCID;radare2: KERNEL32.dll_IsValidLocale": 1,
                "radare2: KERNEL32.dll_IsValidLocale;radare2: KERNEL32.dll_GetLocaleInfoW": 1,
                "radare2: KERNEL32.dll_GetLocaleInfoW;radare2: KERNEL32.dll_LCMapStringW": 1,
                "radare2: KERNEL32.dll_LCMapStringW;radare2: KERNEL32.dll_CompareStringW": 1,
                "radare2: KERNEL32.dll_CompareStringW;radare2: KERNEL32.dll_GetTimeFormatW": 1,
                "radare2: KERNEL32.dll_GetTimeFormatW;radare2: KERNEL32.dll_GetDateFormatW": 1,
                "radare2: KERNEL32.dll_GetDateFormatW;radare2: KERNEL32.dll_CreateSemaphoreW": 1,
                "radare2: KERNEL32.dll_CreateSemaphoreW;radare2: KERNEL32.dll_GetStartupInfoW": 1,
                "radare2: KERNEL32.dll_GetStartupInfoW;radare2: KERNEL32.dll_SetLastError": 1,
                "radare2: KERNEL32.dll_SetLastError;radare2: KERNEL32.dll_UnhandledExceptionFilter": 1,
                "radare2: KERNEL32.dll_UnhandledExceptionFilter;radare2: KERNEL32.dll_RtlVirtualUnwind": 1,
                "radare2: KERNEL32.dll_RtlVirtualUnwind;radare2: KERNEL32.dll_RtlCaptureContext": 1,
                "radare2: KERNEL32.dll_RtlCaptureContext;radare2: KERNEL32.dll_UnregisterWait": 1,
                "radare2: KERNEL32.dll_UnregisterWait;radare2: KERNEL32.dll_RegisterWaitForSingleObject": 1,
                "radare2: KERNEL32.dll_RegisterWaitForSingleObject;radare2: KERNEL32.dll_SetThreadAffinityMask": 1,
                "radare2: KERNEL32.dll_SetThreadAffinityMask;radare2: KERNEL32.dll_GetCurrentThreadId": 1,
                "radare2: KERNEL32.dll_GetCurrentThreadId;radare2: KERNEL32.dll_GetStringTypeW": 1,
                "radare2: KERNEL32.dll_GetStringTypeW;radare2: KERNEL32.dll_EncodePointer": 1,
                "radare2: KERNEL32.dll_EncodePointer;radare2: KERNEL32.dll_EnterCriticalSection": 1,
                "radare2: KERNEL32.dll_EnterCriticalSection;radare2: KERNEL32.dll_LeaveCriticalSection": 1,
                "radare2: KERNEL32.dll_LeaveCriticalSection;radare2: KERNEL32.dll_GetSystemTimeAsFileTime": 1,
                "radare2: KERNEL32.dll_GetSystemTimeAsFileTime;radare2: KERNEL32.dll_IsDebuggerPresent": 1,
                "radare2: KERNEL32.dll_IsDebuggerPresent;radare2: KERNEL32.dll_IsProcessorFeaturePresent": 1,
                "radare2: KERNEL32.dll_IsProcessorFeaturePresent;radare2: KERNEL32.dll_ExitProcess": 1,
                "radare2: KERNEL32.dll_ExitProcess;radare2: KERNEL32.dll_GetModuleHandleExW": 1,
                "radare2: KERNEL32.dll_GetModuleHandleExW;radare2: KERNEL32.dll_GetProcAddress": 1,
                "radare2: KERNEL32.dll_GetProcAddress;radare2: KERNEL32.dll_AreFileApisANSI": 1,
                "radare2: KERNEL32.dll_AreFileApisANSI;radare2: KERNEL32.dll_GetCPInfo": 1,
                "radare2: KERNEL32.dll_GetCPInfo;radare2: KERNEL32.dll_GetCommandLineA": 1,
                "radare2: KERNEL32.dll_GetCommandLineA;radare2: KERNEL32.dll_RtlPcToFileHeader": 1,
                "radare2: KERNEL32.dll_RtlPcToFileHeader;radare2: KERNEL32.dll_RtlLookupFunctionEntry": 1,
                "radare2: KERNEL32.dll_RtlLookupFunctionEntry;radare2: KERNEL32.dll_RtlUnwindEx": 1,
                "radare2: KERNEL32.dll_RtlUnwindEx;radare2: KERNEL32.dll_WaitForSingleObjectEx": 1,
                "radare2: KERNEL32.dll_WaitForSingleObjectEx;radare2: KERNEL32.dll_SignalObjectAndWait": 1,
                "radare2: KERNEL32.dll_SignalObjectAndWait;radare2: KERNEL32.dll_SwitchToThread": 1,
                "radare2: KERNEL32.dll_SwitchToThread;radare2: KERNEL32.dll_SetThreadPriority": 1,
                "radare2: KERNEL32.dll_SetThreadPriority;radare2: KERNEL32.dll_GetThreadPriority": 1,
                "radare2: KERNEL32.dll_GetThreadPriority;radare2: KERNEL32.dll_TlsAlloc": 1,
                "radare2: KERNEL32.dll_TlsAlloc;radare2: KERNEL32.dll_TlsGetValue": 1,
                "radare2: KERNEL32.dll_TlsGetValue;radare2: KERNEL32.dll_TlsSetValue": 1,
                "radare2: KERNEL32.dll_TlsSetValue;radare2: KERNEL32.dll_TlsFree": 1,
                "radare2: KERNEL32.dll_TlsFree;radare2: KERNEL32.dll_GetLogicalProcessorInformation": 1,
                "radare2: KERNEL32.dll_GetLogicalProcessorInformation;radare2: KERNEL32.dll_ChangeTimerQueueTimer": 1,
                "radare2: KERNEL32.dll_ChangeTimerQueueTimer;radare2: KERNEL32.dll_GetModuleHandleW": 1,
                "radare2: KERNEL32.dll_GetModuleHandleW;radare2: KERNEL32.dll_GetNumaHighestNodeNumber": 1,
                "radare2: KERNEL32.dll_GetNumaHighestNodeNumber;radare2: KERNEL32.dll_GetProcessAffinityMask": 1,
                "radare2: KERNEL32.dll_GetProcessAffinityMask;radare2: USER32.dll_TranslateMessage": 1,
                "radare2: USER32.dll_TranslateMessage;radare2: USER32.dll_GetSystemMetrics": 1,
                "radare2: USER32.dll_GetSystemMetrics;radare2: USER32.dll_GetDC": 1,
                "radare2: USER32.dll_GetDC;radare2: USER32.dll_LoadAcceleratorsW": 1,
                "radare2: USER32.dll_LoadAcceleratorsW;radare2: USER32.dll_TranslateAcceleratorW": 1,
                "radare2: USER32.dll_TranslateAcceleratorW;radare2: USER32.dll_wsprintfW": 1,
                "radare2: USER32.dll_wsprintfW;radare2: USER32.dll_ReleaseDC": 1,
                "radare2: USER32.dll_ReleaseDC;radare2: USER32.dll_DispatchMessageW": 1,
                "radare2: USER32.dll_DispatchMessageW;radare2: USER32.dll_GetDesktopWindow": 1,
                "radare2: USER32.dll_GetDesktopWindow;radare2: USER32.dll_GetMessageW": 1,
                "radare2: USER32.dll_GetMessageW;radare2: GDI32.dll_BitBlt": 1,
                "radare2: GDI32.dll_BitBlt;radare2: GDI32.dll_SelectObject": 1,
                "radare2: GDI32.dll_SelectObject;radare2: GDI32.dll_CreateCompatibleDC": 1,
                "radare2: GDI32.dll_CreateCompatibleDC;radare2: GDI32.dll_CreateCompatibleBitmap": 1,
                "radare2: GDI32.dll_CreateCompatibleBitmap;radare2: GDI32.dll_DeleteObject": 1,
                "radare2: GDI32.dll_DeleteObject;radare2: SHELL32.dll_SHGetFolderPathW": 1,
                "radare2: SHELL32.dll_SHGetFolderPathW;radare2: SHELL32.dll_SHGetSpecialFolderPathW": 1,
                "radare2: SHELL32.dll_SHGetSpecialFolderPathW;radare2: ole32.dll_CoCreateGuid": 1,
                "radare2: ole32.dll_CoCreateGuid;radare2: ole32.dll_StringFromGUID2": 1,
                "radare2: ole32.dll_StringFromGUID2;radare2: gdiplus.dll_GdipDisposeImage": 1,
                "radare2: gdiplus.dll_GdipDisposeImage;radare2: gdiplus.dll_GdipSaveImageToFile": 1,
                "radare2: gdiplus.dll_GdipSaveImageToFile;radare2: gdiplus.dll_GdiplusShutdown": 1,
                "radare2: gdiplus.dll_GdiplusShutdown;radare2: gdiplus.dll_GdipAlloc": 1,
                "radare2: gdiplus.dll_GdipAlloc;radare2: gdiplus.dll_GdipGetImageEncodersSize": 1,
                "radare2: gdiplus.dll_GdipGetImageEncodersSize;radare2: gdiplus.dll_GdipGetImageEncoders": 1,
                "radare2: gdiplus.dll_GdipGetImageEncoders;radare2: gdiplus.dll_GdiplusStartup": 1,
                "radare2: gdiplus.dll_GdiplusStartup;radare2: gdiplus.dll_GdipCreateBitmapFromHBITMAP": 1,
                "radare2: gdiplus.dll_GdipCreateBitmapFromHBITMAP;radare2: gdiplus.dll_GdipCloneImage": 1,
                "radare2: gdiplus.dll_GdipCloneImage;radare2: gdiplus.dll_GdipFree": 1,
                "radare2: gdiplus.dll_GdipFree;radare2: WS2_32.dll_recv": 1,
                "radare2: WS2_32.dll_recv;radare2: WS2_32.dll_inet_addr": 1,
                "radare2: WS2_32.dll_inet_addr;radare2: WS2_32.dll_htons": 1,
                "radare2: WS2_32.dll_htons;radare2: WS2_32.dll_socket": 1,
                "radare2: WS2_32.dll_socket;radare2: WS2_32.dll_WSAStartup": 1,
                "radare2: WS2_32.dll_WSAStartup;radare2: WS2_32.dll_WSACleanup": 1,
                "radare2: WS2_32.dll_WSACleanup;radare2: WS2_32.dll_closesocket": 1,
                "radare2: WS2_32.dll_closesocket;radare2: WS2_32.dll_select": 1,
                "radare2: WS2_32.dll_select;radare2: WS2_32.dll_sendto": 1,
                "radare2: WS2_32.dll_sendto;radare2: PSAPI.DLL_GetProcessMemoryInfo": 1,
                "radare2: PSAPI.DLL_GetProcessMemoryInfo;radare2: PSAPI.DLL_QueryWorkingSet": 1,
                "radare2: PSAPI.DLL_QueryWorkingSet;radare2: .rdata) utf32le ra\u6272\u6277\u6261 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf32le ra\u6272\u6277\u6261 blocks=Basic Latin,CJK Unified Ideographs;radare2: .rdata) utf32le \\n!\"2*": 1,
                "radare2: .rdata) utf32le \\n!\"2*;radare2: .rdata) utf32le \\v#3+": 1,
                "radare2: .rdata) utf32le \\v#3+;radare2: .rdata) utf16le :Sun:Sunday:Mon:Monday:Tue:Tuesday:Wed:Wednesday:Thu:Thursday:Fri:Friday:Sat:Saturday": 1,
                "radare2: .rdata) utf16le :Sun:Sunday:Mon:Monday:Tue:Tuesday:Wed:Wednesday:Thu:Thursday:Fri:Friday:Sat:Saturday;radare2: .rdata) utf16le :Jan:January:Feb:February:Mar:March:Apr:April:May:May:Jun:June:Jul:July:Aug:August:Sep:September:Oct:October:Nov:November:Dec:December": 1,
                "radare2: .rdata) utf16le :Jan:January:Feb:February:Mar:March:Apr:April:May:May:Jun:June:Jul:July:Aug:August:Sep:September:Oct:October:Nov:November:Dec:December;radare2: .rdata) utf16le :AM:am:PM:pm": 1,
                "radare2: .rdata) utf16le :AM:am:PM:pm;radare2: .rdata) utf16le mscoree.dll": 1,
                "radare2: .rdata) utf16le mscoree.dll;radare2: .rdata) utf16le          (((((                  H": 1,
                "radare2: .rdata) utf16le          (((((                  H;radare2: .rdata) utf16le                                  \\b": 1,
                "radare2: .rdata) utf16le                                  \\b;radare2: .rdata) utf16le kernel32.dll": 1,
                "radare2: .rdata) utf16le kernel32.dll;radare2: .rdata) utf16le am/pm": 1,
                "radare2: .rdata) utf16le am/pm;radare2: .rdata) utf16le zh-CHS": 1,
                "radare2: .rdata) utf16le zh-CHS;radare2: .rdata) utf16le ar-SA": 1,
                "radare2: .rdata) utf16le ar-SA;radare2: .rdata) utf16le bg-BG": 1,
                "radare2: .rdata) utf16le bg-BG;radare2: .rdata) utf16le ca-ES": 1,
                "radare2: .rdata) utf16le ca-ES;radare2: .rdata) utf16le zh-TW": 1,
                "radare2: .rdata) utf16le zh-TW;radare2: .rdata) utf16le cs-CZ": 1,
                "radare2: .rdata) utf16le cs-CZ;radare2: .rdata) utf16le da-DK": 1,
                "radare2: .rdata) utf16le da-DK;radare2: .rdata) utf16le de-DE": 1,
                "radare2: .rdata) utf16le de-DE;radare2: .rdata) utf16le el-GR": 1,
                "radare2: .rdata) utf16le el-GR;radare2: .rdata) utf16le en-US": 1,
                "radare2: .rdata) utf16le en-US;radare2: .rdata) utf16le fi-FI": 1,
                "radare2: .rdata) utf16le fi-FI;radare2: .rdata) utf16le fr-FR": 1,
                "radare2: .rdata) utf16le fr-FR;radare2: .rdata) utf16le he-IL": 1,
                "radare2: .rdata) utf16le he-IL;radare2: .rdata) utf16le hu-HU": 1,
                "radare2: .rdata) utf16le hu-HU;radare2: .rdata) utf16le is-IS": 1,
                "radare2: .rdata) utf16le is-IS;radare2: .rdata) utf16le it-IT": 1,
                "radare2: .rdata) utf16le it-IT;radare2: .rdata) utf16le ja-JP": 1,
                "radare2: .rdata) utf16le ja-JP;radare2: .rdata) utf16le ko-KR": 1,
                "radare2: .rdata) utf16le ko-KR;radare2: .rdata) utf16le nl-NL": 1,
                "radare2: .rdata) utf16le nl-NL;radare2: .rdata) utf16le nb-NO": 1,
                "radare2: .rdata) utf16le nb-NO;radare2: .rdata) utf16le pl-PL": 1,
                "radare2: .rdata) utf16le pl-PL;radare2: .rdata) utf16le pt-BR": 1,
                "radare2: .rdata) utf16le pt-BR;radare2: .rdata) utf16le ro-RO": 1,
                "radare2: .rdata) utf16le ro-RO;radare2: .rdata) utf16le ru-RU": 1,
                "radare2: .rdata) utf16le ru-RU;radare2: .rdata) utf16le hr-HR": 1,
                "radare2: .rdata) utf16le hr-HR;radare2: .rdata) utf16le sk-SK": 1,
                "radare2: .rdata) utf16le sk-SK;radare2: .rdata) utf16le sq-AL": 1,
                "radare2: .rdata) utf16le sq-AL;radare2: .rdata) utf16le sv-SE": 1,
                "radare2: .rdata) utf16le sv-SE;radare2: .rdata) utf16le th-TH": 1,
                "radare2: .rdata) utf16le th-TH;radare2: .rdata) utf16le tr-TR": 1,
                "radare2: .rdata) utf16le tr-TR;radare2: .rdata) utf16le ur-PK": 1,
                "radare2: .rdata) utf16le ur-PK;radare2: .rdata) utf16le id-ID": 1,
                "radare2: .rdata) utf16le id-ID;radare2: .rdata) utf16le uk-UA": 1,
                "radare2: .rdata) utf16le uk-UA;radare2: .rdata) utf16le be-BY": 1,
                "radare2: .rdata) utf16le be-BY;radare2: .rdata) utf16le sl-SI": 1,
                "radare2: .rdata) utf16le sl-SI;radare2: .rdata) utf16le et-EE": 1,
                "radare2: .rdata) utf16le et-EE;radare2: .rdata) utf16le lv-LV": 1,
                "radare2: .rdata) utf16le lv-LV;radare2: .rdata) utf16le lt-LT": 1,
                "radare2: .rdata) utf16le lt-LT;radare2: .rdata) utf16le fa-IR": 1,
                "radare2: .rdata) utf16le fa-IR;radare2: .rdata) utf16le vi-VN": 1,
                "radare2: .rdata) utf16le vi-VN;radare2: .rdata) utf16le hy-AM": 1,
                "radare2: .rdata) utf16le hy-AM;radare2: .rdata) utf16le az-AZ-Latn": 1,
                "radare2: .rdata) utf16le az-AZ-Latn;radare2: .rdata) utf16le eu-ES": 1,
                "radare2: .rdata) utf16le eu-ES;radare2: .rdata) utf16le mk-MK": 1,
                "radare2: .rdata) utf16le mk-MK;radare2: .rdata) utf16le tn-ZA": 1,
                "radare2: .rdata) utf16le tn-ZA;radare2: .rdata) utf16le xh-ZA": 1,
                "radare2: .rdata) utf16le xh-ZA;radare2: .rdata) utf16le zu-ZA": 1,
                "radare2: .rdata) utf16le zu-ZA;radare2: .rdata) utf16le af-ZA": 1,
                "radare2: .rdata) utf16le af-ZA;radare2: .rdata) utf16le ka-GE": 1,
                "radare2: .rdata) utf16le ka-GE;radare2: .rdata) utf16le fo-FO": 1,
                "radare2: .rdata) utf16le fo-FO;radare2: .rdata) utf16le hi-IN": 1,
                "radare2: .rdata) utf16le hi-IN;radare2: .rdata) utf16le mt-MT": 1,
                "radare2: .rdata) utf16le mt-MT;radare2: .rdata) utf16le se-NO": 1,
                "radare2: .rdata) utf16le se-NO;radare2: .rdata) utf16le ms-MY": 1,
                "radare2: .rdata) utf16le ms-MY;radare2: .rdata) utf16le kk-KZ": 1,
                "radare2: .rdata) utf16le kk-KZ;radare2: .rdata) utf16le ky-KG": 1,
                "radare2: .rdata) utf16le ky-KG;radare2: .rdata) utf16le sw-KE": 1,
                "radare2: .rdata) utf16le sw-KE;radare2: .rdata) utf16le uz-UZ-Latn": 1,
                "radare2: .rdata) utf16le uz-UZ-Latn;radare2: .rdata) utf16le tt-RU": 1,
                "radare2: .rdata) utf16le tt-RU;radare2: .rdata) utf16le bn-IN": 1,
                "radare2: .rdata) utf16le bn-IN;radare2: .rdata) utf16le pa-IN": 1,
                "radare2: .rdata) utf16le pa-IN;radare2: .rdata) utf16le gu-IN": 1,
                "radare2: .rdata) utf16le gu-IN;radare2: .rdata) utf16le ta-IN": 1,
                "radare2: .rdata) utf16le ta-IN;radare2: .rdata) utf16le te-IN": 1,
                "radare2: .rdata) utf16le te-IN;radare2: .rdata) utf16le kn-IN": 1,
                "radare2: .rdata) utf16le kn-IN;radare2: .rdata) utf16le ml-IN": 1,
                "radare2: .rdata) utf16le ml-IN;radare2: .rdata) utf16le mr-IN": 1,
                "radare2: .rdata) utf16le mr-IN;radare2: .rdata) utf16le sa-IN": 1,
                "radare2: .rdata) utf16le sa-IN;radare2: .rdata) utf16le mn-MN": 1,
                "radare2: .rdata) utf16le mn-MN;radare2: .rdata) utf16le cy-GB": 1,
                "radare2: .rdata) utf16le cy-GB;radare2: .rdata) utf16le gl-ES": 1,
                "radare2: .rdata) utf16le gl-ES;radare2: .rdata) utf16le kok-IN": 1,
                "radare2: .rdata) utf16le kok-IN;radare2: .rdata) utf16le syr-SY": 1,
                "radare2: .rdata) utf16le syr-SY;radare2: .rdata) utf16le div-MV": 1,
                "radare2: .rdata) utf16le div-MV;radare2: .rdata) utf16le quz-BO": 1,
                "radare2: .rdata) utf16le quz-BO;radare2: .rdata) utf16le ns-ZA": 1,
                "radare2: .rdata) utf16le ns-ZA;radare2: .rdata) utf16le mi-NZ": 1,
                "radare2: .rdata) utf16le mi-NZ;radare2: .rdata) utf16le ar-IQ": 1,
                "radare2: .rdata) utf16le ar-IQ;radare2: .rdata) utf16le zh-CN": 1,
                "radare2: .rdata) utf16le zh-CN;radare2: .rdata) utf16le de-CH": 1,
                "radare2: .rdata) utf16le de-CH;radare2: .rdata) utf16le en-GB": 1,
                "radare2: .rdata) utf16le en-GB;radare2: .rdata) utf16le es-MX": 1,
                "radare2: .rdata) utf16le es-MX;radare2: .rdata) utf16le fr-BE": 1,
                "radare2: .rdata) utf16le fr-BE;radare2: .rdata) utf16le it-CH": 1,
                "radare2: .rdata) utf16le it-CH;radare2: .rdata) utf16le nl-BE": 1,
                "radare2: .rdata) utf16le nl-BE;radare2: .rdata) utf16le nn-NO": 1,
                "radare2: .rdata) utf16le nn-NO;radare2: .rdata) utf16le pt-PT": 1,
                "radare2: .rdata) utf16le pt-PT;radare2: .rdata) utf16le sr-SP-Latn": 1,
                "radare2: .rdata) utf16le sr-SP-Latn;radare2: .rdata) utf16le sv-FI": 1,
                "radare2: .rdata) utf16le sv-FI;radare2: .rdata) utf16le az-AZ-Cyrl": 1,
                "radare2: .rdata) utf16le az-AZ-Cyrl;radare2: .rdata) utf16le se-SE": 1,
                "radare2: .rdata) utf16le se-SE;radare2: .rdata) utf16le ms-BN": 1,
                "radare2: .rdata) utf16le ms-BN;radare2: .rdata) utf16le uz-UZ-Cyrl": 1,
                "radare2: .rdata) utf16le uz-UZ-Cyrl;radare2: .rdata) utf16le quz-EC": 1,
                "radare2: .rdata) utf16le quz-EC;radare2: .rdata) utf16le ar-EG": 1,
                "radare2: .rdata) utf16le ar-EG;radare2: .rdata) utf16le zh-HK": 1,
                "radare2: .rdata) utf16le zh-HK;radare2: .rdata) utf16le de-AT": 1,
                "radare2: .rdata) utf16le de-AT;radare2: .rdata) utf16le en-AU": 1,
                "radare2: .rdata) utf16le en-AU;radare2: .rdata) utf16le es-ES": 1,
                "radare2: .rdata) utf16le es-ES;radare2: .rdata) utf16le fr-CA": 1,
                "radare2: .rdata) utf16le fr-CA;radare2: .rdata) utf16le sr-SP-Cyrl": 1,
                "radare2: .rdata) utf16le sr-SP-Cyrl;radare2: .rdata) utf16le se-FI": 1,
                "radare2: .rdata) utf16le se-FI;radare2: .rdata) utf16le quz-PE": 1,
                "radare2: .rdata) utf16le quz-PE;radare2: .rdata) utf16le ar-LY": 1,
                "radare2: .rdata) utf16le ar-LY;radare2: .rdata) utf16le zh-SG": 1,
                "radare2: .rdata) utf16le zh-SG;radare2: .rdata) utf16le de-LU": 1,
                "radare2: .rdata) utf16le de-LU;radare2: .rdata) utf16le en-CA": 1,
                "radare2: .rdata) utf16le en-CA;radare2: .rdata) utf16le es-GT": 1,
                "radare2: .rdata) utf16le es-GT;radare2: .rdata) utf16le fr-CH": 1,
                "radare2: .rdata) utf16le fr-CH;radare2: .rdata) utf16le hr-BA": 1,
                "radare2: .rdata) utf16le hr-BA;radare2: .rdata) utf16le smj-NO": 1,
                "radare2: .rdata) utf16le smj-NO;radare2: .rdata) utf16le ar-DZ": 1,
                "radare2: .rdata) utf16le ar-DZ;radare2: .rdata) utf16le zh-MO": 1,
                "radare2: .rdata) utf16le zh-MO;radare2: .rdata) utf16le de-LI": 1,
                "radare2: .rdata) utf16le de-LI;radare2: .rdata) utf16le en-NZ": 1,
                "radare2: .rdata) utf16le en-NZ;radare2: .rdata) utf16le es-CR": 1,
                "radare2: .rdata) utf16le es-CR;radare2: .rdata) utf16le fr-LU": 1,
                "radare2: .rdata) utf16le fr-LU;radare2: .rdata) utf16le bs-BA-Latn": 1,
                "radare2: .rdata) utf16le bs-BA-Latn;radare2: .rdata) utf16le smj-SE": 1,
                "radare2: .rdata) utf16le smj-SE;radare2: .rdata) utf16le ar-MA": 1,
                "radare2: .rdata) utf16le ar-MA;radare2: .rdata) utf16le en-IE": 1,
                "radare2: .rdata) utf16le en-IE;radare2: .rdata) utf16le es-PA": 1,
                "radare2: .rdata) utf16le es-PA;radare2: .rdata) utf16le fr-MC": 1,
                "radare2: .rdata) utf16le fr-MC;radare2: .rdata) utf16le sr-BA-Latn": 1,
                "radare2: .rdata) utf16le sr-BA-Latn;radare2: .rdata) utf16le sma-NO": 1,
                "radare2: .rdata) utf16le sma-NO;radare2: .rdata) utf16le ar-TN": 1,
                "radare2: .rdata) utf16le ar-TN;radare2: .rdata) utf16le en-ZA": 1,
                "radare2: .rdata) utf16le en-ZA;radare2: .rdata) utf16le es-DO": 1,
                "radare2: .rdata) utf16le es-DO;radare2: .rdata) utf16le sr-BA-Cyrl": 1,
                "radare2: .rdata) utf16le sr-BA-Cyrl;radare2: .rdata) utf16le sma-SE": 1,
                "radare2: .rdata) utf16le sma-SE;radare2: .rdata) utf16le ar-OM": 1,
                "radare2: .rdata) utf16le ar-OM;radare2: .rdata) utf16le en-JM": 1,
                "radare2: .rdata) utf16le en-JM;radare2: .rdata) utf16le es-VE": 1,
                "radare2: .rdata) utf16le es-VE;radare2: .rdata) utf16le sms-FI": 1,
                "radare2: .rdata) utf16le sms-FI;radare2: .rdata) utf16le ar-YE": 1,
                "radare2: .rdata) utf16le ar-YE;radare2: .rdata) utf16le en-CB": 1,
                "radare2: .rdata) utf16le en-CB;radare2: .rdata) utf16le es-CO": 1,
                "radare2: .rdata) utf16le es-CO;radare2: .rdata) utf16le smn-FI": 1,
                "radare2: .rdata) utf16le smn-FI;radare2: .rdata) utf16le ar-SY": 1,
                "radare2: .rdata) utf16le ar-SY;radare2: .rdata) utf16le en-BZ": 1,
                "radare2: .rdata) utf16le en-BZ;radare2: .rdata) utf16le es-PE": 1,
                "radare2: .rdata) utf16le es-PE;radare2: .rdata) utf16le ar-JO": 1,
                "radare2: .rdata) utf16le ar-JO;radare2: .rdata) utf16le en-TT": 1,
                "radare2: .rdata) utf16le en-TT;radare2: .rdata) utf16le es-AR": 1,
                "radare2: .rdata) utf16le es-AR;radare2: .rdata) utf16le ar-LB": 1,
                "radare2: .rdata) utf16le ar-LB;radare2: .rdata) utf16le en-ZW": 1,
                "radare2: .rdata) utf16le en-ZW;radare2: .rdata) utf16le es-EC": 1,
                "radare2: .rdata) utf16le es-EC;radare2: .rdata) utf16le ar-KW": 1,
                "radare2: .rdata) utf16le ar-KW;radare2: .rdata) utf16le en-PH": 1,
                "radare2: .rdata) utf16le en-PH;radare2: .rdata) utf16le es-CL": 1,
                "radare2: .rdata) utf16le es-CL;radare2: .rdata) utf16le ar-AE": 1,
                "radare2: .rdata) utf16le ar-AE;radare2: .rdata) utf16le es-UY": 1,
                "radare2: .rdata) utf16le es-UY;radare2: .rdata) utf16le ar-BH": 1,
                "radare2: .rdata) utf16le ar-BH;radare2: .rdata) utf16le es-PY": 1,
                "radare2: .rdata) utf16le es-PY;radare2: .rdata) utf16le ar-QA": 1,
                "radare2: .rdata) utf16le ar-QA;radare2: .rdata) utf16le es-BO": 1,
                "radare2: .rdata) utf16le es-BO;radare2: .rdata) utf16le es-SV": 1,
                "radare2: .rdata) utf16le es-SV;radare2: .rdata) utf16le es-HN": 1,
                "radare2: .rdata) utf16le es-HN;radare2: .rdata) utf16le es-NI": 1,
                "radare2: .rdata) utf16le es-NI;radare2: .rdata) utf16le es-PR": 1,
                "radare2: .rdata) utf16le es-PR;radare2: .rdata) utf16le zh-CHT": 1,
                "radare2: .rdata) utf16le zh-CHT;radare2: .rdata) utf16le af-za": 1,
                "radare2: .rdata) utf16le af-za;radare2: .rdata) utf16le ar-ae": 1,
                "radare2: .rdata) utf16le ar-ae;radare2: .rdata) utf16le ar-bh": 1,
                "radare2: .rdata) utf16le ar-bh;radare2: .rdata) utf16le ar-dz": 1,
                "radare2: .rdata) utf16le ar-dz;radare2: .rdata) utf16le ar-eg": 1,
                "radare2: .rdata) utf16le ar-eg;radare2: .rdata) utf16le ar-iq": 1,
                "radare2: .rdata) utf16le ar-iq;radare2: .rdata) utf16le ar-jo": 1,
                "radare2: .rdata) utf16le ar-jo;radare2: .rdata) utf16le ar-kw": 1,
                "radare2: .rdata) utf16le ar-kw;radare2: .rdata) utf16le ar-lb": 1,
                "radare2: .rdata) utf16le ar-lb;radare2: .rdata) utf16le ar-ly": 1,
                "radare2: .rdata) utf16le ar-ly;radare2: .rdata) utf16le ar-ma": 1,
                "radare2: .rdata) utf16le ar-ma;radare2: .rdata) utf16le ar-om": 1,
                "radare2: .rdata) utf16le ar-om;radare2: .rdata) utf16le ar-qa": 1,
                "radare2: .rdata) utf16le ar-qa;radare2: .rdata) utf16le ar-sa": 1,
                "radare2: .rdata) utf16le ar-sa;radare2: .rdata) utf16le ar-sy": 1,
                "radare2: .rdata) utf16le ar-sy;radare2: .rdata) utf16le ar-tn": 1,
                "radare2: .rdata) utf16le ar-tn;radare2: .rdata) utf16le ar-ye": 1,
                "radare2: .rdata) utf16le ar-ye;radare2: .rdata) utf16le az-az-cyrl": 1,
                "radare2: .rdata) utf16le az-az-cyrl;radare2: .rdata) utf16le az-az-latn": 1,
                "radare2: .rdata) utf16le az-az-latn;radare2: .rdata) utf16le be-by": 1,
                "radare2: .rdata) utf16le be-by;radare2: .rdata) utf16le bg-bg": 1,
                "radare2: .rdata) utf16le bg-bg;radare2: .rdata) utf16le bn-in": 1,
                "radare2: .rdata) utf16le bn-in;radare2: .rdata) utf16le bs-ba-latn": 1,
                "radare2: .rdata) utf16le bs-ba-latn;radare2: .rdata) utf16le ca-es": 1,
                "radare2: .rdata) utf16le ca-es;radare2: .rdata) utf16le cs-cz": 1,
                "radare2: .rdata) utf16le cs-cz;radare2: .rdata) utf16le cy-gb": 1,
                "radare2: .rdata) utf16le cy-gb;radare2: .rdata) utf16le da-dk": 1,
                "radare2: .rdata) utf16le da-dk;radare2: .rdata) utf16le de-at": 1,
                "radare2: .rdata) utf16le de-at;radare2: .rdata) utf16le de-ch": 1,
                "radare2: .rdata) utf16le de-ch;radare2: .rdata) utf16le de-de": 1,
                "radare2: .rdata) utf16le de-de;radare2: .rdata) utf16le de-li": 1,
                "radare2: .rdata) utf16le de-li;radare2: .rdata) utf16le de-lu": 1,
                "radare2: .rdata) utf16le de-lu;radare2: .rdata) utf16le div-mv": 1,
                "radare2: .rdata) utf16le div-mv;radare2: .rdata) utf16le el-gr": 1,
                "radare2: .rdata) utf16le el-gr;radare2: .rdata) utf16le en-au": 1,
                "radare2: .rdata) utf16le en-au;radare2: .rdata) utf16le en-bz": 1,
                "radare2: .rdata) utf16le en-bz;radare2: .rdata) utf16le en-ca": 1,
                "radare2: .rdata) utf16le en-ca;radare2: .rdata) utf16le en-cb": 1,
                "radare2: .rdata) utf16le en-cb;radare2: .rdata) utf16le en-gb": 1,
                "radare2: .rdata) utf16le en-gb;radare2: .rdata) utf16le en-ie": 1,
                "radare2: .rdata) utf16le en-ie;radare2: .rdata) utf16le en-jm": 1,
                "radare2: .rdata) utf16le en-jm;radare2: .rdata) utf16le en-nz": 1,
                "radare2: .rdata) utf16le en-nz;radare2: .rdata) utf16le en-ph": 1,
                "radare2: .rdata) utf16le en-ph;radare2: .rdata) utf16le en-tt": 1,
                "radare2: .rdata) utf16le en-tt;radare2: .rdata) utf16le en-us": 1,
                "radare2: .rdata) utf16le en-us;radare2: .rdata) utf16le en-za": 1,
                "radare2: .rdata) utf16le en-za;radare2: .rdata) utf16le en-zw": 1,
                "radare2: .rdata) utf16le en-zw;radare2: .rdata) utf16le es-ar": 1,
                "radare2: .rdata) utf16le es-ar;radare2: .rdata) utf16le es-bo": 1,
                "radare2: .rdata) utf16le es-bo;radare2: .rdata) utf16le es-cl": 1,
                "radare2: .rdata) utf16le es-cl;radare2: .rdata) utf16le es-co": 1,
                "radare2: .rdata) utf16le es-co;radare2: .rdata) utf16le es-cr": 1,
                "radare2: .rdata) utf16le es-cr;radare2: .rdata) utf16le es-do": 1,
                "radare2: .rdata) utf16le es-do;radare2: .rdata) utf16le es-ec": 1,
                "radare2: .rdata) utf16le es-ec;radare2: .rdata) utf16le es-es": 1,
                "radare2: .rdata) utf16le es-es;radare2: .rdata) utf16le es-gt": 1,
                "radare2: .rdata) utf16le es-gt;radare2: .rdata) utf16le es-hn": 1,
                "radare2: .rdata) utf16le es-hn;radare2: .rdata) utf16le es-mx": 1,
                "radare2: .rdata) utf16le es-mx;radare2: .rdata) utf16le es-ni": 1,
                "radare2: .rdata) utf16le es-ni;radare2: .rdata) utf16le es-pa": 1,
                "radare2: .rdata) utf16le es-pa;radare2: .rdata) utf16le es-pe": 1,
                "radare2: .rdata) utf16le es-pe;radare2: .rdata) utf16le es-pr": 1,
                "radare2: .rdata) utf16le es-pr;radare2: .rdata) utf16le es-py": 1,
                "radare2: .rdata) utf16le es-py;radare2: .rdata) utf16le es-sv": 1,
                "radare2: .rdata) utf16le es-sv;radare2: .rdata) utf16le es-uy": 1,
                "radare2: .rdata) utf16le es-uy;radare2: .rdata) utf16le es-ve": 1,
                "radare2: .rdata) utf16le es-ve;radare2: .rdata) utf16le et-ee": 1,
                "radare2: .rdata) utf16le et-ee;radare2: .rdata) utf16le eu-es": 1,
                "radare2: .rdata) utf16le eu-es;radare2: .rdata) utf16le fa-ir": 1,
                "radare2: .rdata) utf16le fa-ir;radare2: .rdata) utf16le fi-fi": 1,
                "radare2: .rdata) utf16le fi-fi;radare2: .rdata) utf16le fo-fo": 1,
                "radare2: .rdata) utf16le fo-fo;radare2: .rdata) utf16le fr-be": 1,
                "radare2: .rdata) utf16le fr-be;radare2: .rdata) utf16le fr-ca": 1,
                "radare2: .rdata) utf16le fr-ca;radare2: .rdata) utf16le fr-ch": 1,
                "radare2: .rdata) utf16le fr-ch;radare2: .rdata) utf16le fr-fr": 1,
                "radare2: .rdata) utf16le fr-fr;radare2: .rdata) utf16le fr-lu": 1,
                "radare2: .rdata) utf16le fr-lu;radare2: .rdata) utf16le fr-mc": 1,
                "radare2: .rdata) utf16le fr-mc;radare2: .rdata) utf16le gl-es": 1,
                "radare2: .rdata) utf16le gl-es;radare2: .rdata) utf16le gu-in": 1,
                "radare2: .rdata) utf16le gu-in;radare2: .rdata) utf16le he-il": 1,
                "radare2: .rdata) utf16le he-il;radare2: .rdata) utf16le hi-in": 1,
                "radare2: .rdata) utf16le hi-in;radare2: .rdata) utf16le hr-ba": 1,
                "radare2: .rdata) utf16le hr-ba;radare2: .rdata) utf16le hr-hr": 1,
                "radare2: .rdata) utf16le hr-hr;radare2: .rdata) utf16le hu-hu": 1,
                "radare2: .rdata) utf16le hu-hu;radare2: .rdata) utf16le hy-am": 1,
                "radare2: .rdata) utf16le hy-am;radare2: .rdata) utf16le id-id": 1,
                "radare2: .rdata) utf16le id-id;radare2: .rdata) utf16le is-is": 1,
                "radare2: .rdata) utf16le is-is;radare2: .rdata) utf16le it-ch": 1,
                "radare2: .rdata) utf16le it-ch;radare2: .rdata) utf16le it-it": 1,
                "radare2: .rdata) utf16le it-it;radare2: .rdata) utf16le ja-jp": 1,
                "radare2: .rdata) utf16le ja-jp;radare2: .rdata) utf16le ka-ge": 1,
                "radare2: .rdata) utf16le ka-ge;radare2: .rdata) utf16le kk-kz": 1,
                "radare2: .rdata) utf16le kk-kz;radare2: .rdata) utf16le kn-in": 1,
                "radare2: .rdata) utf16le kn-in;radare2: .rdata) utf16le kok-in": 1,
                "radare2: .rdata) utf16le kok-in;radare2: .rdata) utf16le ko-kr": 1,
                "radare2: .rdata) utf16le ko-kr;radare2: .rdata) utf16le ky-kg": 1,
                "radare2: .rdata) utf16le ky-kg;radare2: .rdata) utf16le lt-lt": 1,
                "radare2: .rdata) utf16le lt-lt;radare2: .rdata) utf16le lv-lv": 1,
                "radare2: .rdata) utf16le lv-lv;radare2: .rdata) utf16le mi-nz": 1,
                "radare2: .rdata) utf16le mi-nz;radare2: .rdata) utf16le mk-mk": 1,
                "radare2: .rdata) utf16le mk-mk;radare2: .rdata) utf16le ml-in": 1,
                "radare2: .rdata) utf16le ml-in;radare2: .rdata) utf16le mn-mn": 1,
                "radare2: .rdata) utf16le mn-mn;radare2: .rdata) utf16le mr-in": 1,
                "radare2: .rdata) utf16le mr-in;radare2: .rdata) utf16le ms-bn": 1,
                "radare2: .rdata) utf16le ms-bn;radare2: .rdata) utf16le ms-my": 1,
                "radare2: .rdata) utf16le ms-my;radare2: .rdata) utf16le mt-mt": 1,
                "radare2: .rdata) utf16le mt-mt;radare2: .rdata) utf16le nb-no": 1,
                "radare2: .rdata) utf16le nb-no;radare2: .rdata) utf16le nl-be": 1,
                "radare2: .rdata) utf16le nl-be;radare2: .rdata) utf16le nl-nl": 1,
                "radare2: .rdata) utf16le nl-nl;radare2: .rdata) utf16le nn-no": 1,
                "radare2: .rdata) utf16le nn-no;radare2: .rdata) utf16le ns-za": 1,
                "radare2: .rdata) utf16le ns-za;radare2: .rdata) utf16le pa-in": 1,
                "radare2: .rdata) utf16le pa-in;radare2: .rdata) utf16le pl-pl": 1,
                "radare2: .rdata) utf16le pl-pl;radare2: .rdata) utf16le pt-br": 1,
                "radare2: .rdata) utf16le pt-br;radare2: .rdata) utf16le pt-pt": 1,
                "radare2: .rdata) utf16le pt-pt;radare2: .rdata) utf16le quz-bo": 1,
                "radare2: .rdata) utf16le quz-bo;radare2: .rdata) utf16le quz-ec": 1,
                "radare2: .rdata) utf16le quz-ec;radare2: .rdata) utf16le quz-pe": 1,
                "radare2: .rdata) utf16le quz-pe;radare2: .rdata) utf16le ro-ro": 1,
                "radare2: .rdata) utf16le ro-ro;radare2: .rdata) utf16le ru-ru": 1,
                "radare2: .rdata) utf16le ru-ru;radare2: .rdata) utf16le sa-in": 1,
                "radare2: .rdata) utf16le sa-in;radare2: .rdata) utf16le se-fi": 1,
                "radare2: .rdata) utf16le se-fi;radare2: .rdata) utf16le se-no": 1,
                "radare2: .rdata) utf16le se-no;radare2: .rdata) utf16le se-se": 1,
                "radare2: .rdata) utf16le se-se;radare2: .rdata) utf16le sk-sk": 1,
                "radare2: .rdata) utf16le sk-sk;radare2: .rdata) utf16le sl-si": 1,
                "radare2: .rdata) utf16le sl-si;radare2: .rdata) utf16le sma-no": 1,
                "radare2: .rdata) utf16le sma-no;radare2: .rdata) utf16le sma-se": 1,
                "radare2: .rdata) utf16le sma-se;radare2: .rdata) utf16le smj-no": 1,
                "radare2: .rdata) utf16le smj-no;radare2: .rdata) utf16le smj-se": 1,
                "radare2: .rdata) utf16le smj-se;radare2: .rdata) utf16le smn-fi": 1,
                "radare2: .rdata) utf16le smn-fi;radare2: .rdata) utf16le sms-fi": 1,
                "radare2: .rdata) utf16le sms-fi;radare2: .rdata) utf16le sq-al": 1,
                "radare2: .rdata) utf16le sq-al;radare2: .rdata) utf16le sr-ba-cyrl": 1,
                "radare2: .rdata) utf16le sr-ba-cyrl;radare2: .rdata) utf16le sr-ba-latn": 1,
                "radare2: .rdata) utf16le sr-ba-latn;radare2: .rdata) utf16le sr-sp-cyrl": 1,
                "radare2: .rdata) utf16le sr-sp-cyrl;radare2: .rdata) utf16le sr-sp-latn": 1,
                "radare2: .rdata) utf16le sr-sp-latn;radare2: .rdata) utf16le sv-fi": 1,
                "radare2: .rdata) utf16le sv-fi;radare2: .rdata) utf16le sv-se": 1,
                "radare2: .rdata) utf16le sv-se;radare2: .rdata) utf16le sw-ke": 1,
                "radare2: .rdata) utf16le sw-ke;radare2: .rdata) utf16le syr-sy": 1,
                "radare2: .rdata) utf16le syr-sy;radare2: .rdata) utf16le ta-in": 1,
                "radare2: .rdata) utf16le ta-in;radare2: .rdata) utf16le te-in": 1,
                "radare2: .rdata) utf16le te-in;radare2: .rdata) utf16le th-th": 1,
                "radare2: .rdata) utf16le th-th;radare2: .rdata) utf16le tn-za": 1,
                "radare2: .rdata) utf16le tn-za;radare2: .rdata) utf16le tr-tr": 1,
                "radare2: .rdata) utf16le tr-tr;radare2: .rdata) utf16le tt-ru": 1,
                "radare2: .rdata) utf16le tt-ru;radare2: .rdata) utf16le uk-ua": 1,
                "radare2: .rdata) utf16le uk-ua;radare2: .rdata) utf16le ur-pk": 1,
                "radare2: .rdata) utf16le ur-pk;radare2: .rdata) utf16le uz-uz-cyrl": 1,
                "radare2: .rdata) utf16le uz-uz-cyrl;radare2: .rdata) utf16le uz-uz-latn": 1,
                "radare2: .rdata) utf16le uz-uz-latn;radare2: .rdata) utf16le vi-vn": 1,
                "radare2: .rdata) utf16le vi-vn;radare2: .rdata) utf16le xh-za": 1,
                "radare2: .rdata) utf16le xh-za;radare2: .rdata) utf16le zh-chs": 1,
                "radare2: .rdata) utf16le zh-chs;radare2: .rdata) utf16le zh-cht": 1,
                "radare2: .rdata) utf16le zh-cht;radare2: .rdata) utf16le zh-cn": 1,
                "radare2: .rdata) utf16le zh-cn;radare2: .rdata) utf16le zh-hk": 1,
                "radare2: .rdata) utf16le zh-hk;radare2: .rdata) utf16le zh-mo": 1,
                "radare2: .rdata) utf16le zh-mo;radare2: .rdata) utf16le zh-sg": 1,
                "radare2: .rdata) utf16le zh-sg;radare2: .rdata) utf16le zh-tw": 1,
                "radare2: .rdata) utf16le zh-tw;radare2: .rdata) utf16le zu-za": 1,
                "radare2: .rdata) utf16le zu-za;radare2: .rdata) utf16le Sunday": 1,
                "radare2: .rdata) utf16le Sunday;radare2: .rdata) utf16le Monday": 1,
                "radare2: .rdata) utf16le Monday;radare2: .rdata) utf16le Tuesday": 1,
                "radare2: .rdata) utf16le Tuesday;radare2: .rdata) utf16le Wednesday": 1,
                "radare2: .rdata) utf16le Wednesday;radare2: .rdata) utf16le Thursday": 1,
                "radare2: .rdata) utf16le Thursday;radare2: .rdata) utf16le Friday": 1,
                "radare2: .rdata) utf16le Friday;radare2: .rdata) utf16le Saturday": 1,
                "radare2: .rdata) utf16le Saturday;radare2: .rdata) utf16le January": 1,
                "radare2: .rdata) utf16le January;radare2: .rdata) utf16le February": 1,
                "radare2: .rdata) utf16le February;radare2: .rdata) utf16le March": 1,
                "radare2: .rdata) utf16le March;radare2: .rdata) utf16le April": 1,
                "radare2: .rdata) utf16le April;radare2: .rdata) utf16le June": 1,
                "radare2: .rdata) utf16le June;radare2: .rdata) utf16le July": 1,
                "radare2: .rdata) utf16le July;radare2: .rdata) utf16le August": 1,
                "radare2: .rdata) utf16le August;radare2: .rdata) utf16le September": 1,
                "radare2: .rdata) utf16le September;radare2: .rdata) utf16le October": 1,
                "radare2: .rdata) utf16le October;radare2: .rdata) utf16le November": 1,
                "radare2: .rdata) utf16le November;radare2: .rdata) utf16le December": 1,
                "radare2: .rdata) utf16le December;radare2: .rdata) utf16le MM/dd/yy": 1,
                "radare2: .rdata) utf16le MM/dd/yy;radare2: .rdata) utf16le dddd, MMMM dd, yyyy": 1,
                "radare2: .rdata) utf16le dddd, MMMM dd, yyyy;radare2: .rdata) utf16le HH:mm:ss": 1,
                "radare2: .rdata) utf16le HH:mm:ss;radare2: .rdata) utf16le LC_ALL": 1,
                "radare2: .rdata) utf16le LC_ALL;radare2: .rdata) utf16le LC_COLLATE": 1,
                "radare2: .rdata) utf16le LC_COLLATE;radare2: .rdata) utf16le LC_CTYPE": 1,
                "radare2: .rdata) utf16le LC_CTYPE;radare2: .rdata) utf16le LC_MONETARY": 1,
                "radare2: .rdata) utf16le LC_MONETARY;radare2: .rdata) utf16le LC_NUMERIC": 1,
                "radare2: .rdata) utf16le LC_NUMERIC;radare2: .rdata) utf16le LC_TIME": 1,
                "radare2: .rdata) utf16le LC_TIME;radare2: .rdata) utf16le (null)": 1,
                "radare2: .rdata) utf16le (null);radare2: .rdata) utf16le R6002\\r\\n- floating point support not loaded\\r\\n": 1,
                "radare2: .rdata) utf16le R6002\\r\\n- floating point support not loaded\\r\\n;radare2: .rdata) utf16le R6008\\r\\n- not enough space for arguments\\r\\n": 1,
                "radare2: .rdata) utf16le R6008\\r\\n- not enough space for arguments\\r\\n;radare2: .rdata) utf16le R6009\\r\\n- not enough space for environment\\r\\n": 1,
                "radare2: .rdata) utf16le R6009\\r\\n- not enough space for environment\\r\\n;radare2: .rdata) utf16le R6010\\r\\n- abort() has been called\\r\\n": 1,
                "radare2: .rdata) utf16le R6010\\r\\n- abort() has been called\\r\\n;radare2: .rdata) utf16le R6016\\r\\n- not enough space for thread data\\r\\n": 1,
                "radare2: .rdata) utf16le R6016\\r\\n- not enough space for thread data\\r\\n;radare2: .rdata) utf16le R6017\\r\\n- unexpected multithread lock error\\r\\n": 1,
                "radare2: .rdata) utf16le R6017\\r\\n- unexpected multithread lock error\\r\\n;radare2: .rdata) utf16le R6018\\r\\n- unexpected heap error\\r\\n": 1,
                "radare2: .rdata) utf16le R6018\\r\\n- unexpected heap error\\r\\n;radare2: .rdata) utf16le R6019\\r\\n- unable to open console device\\r\\n": 1,
                "radare2: .rdata) utf16le R6019\\r\\n- unable to open console device\\r\\n;radare2: .rdata) utf16le R6024\\r\\n- not enough space for _onexit/atexit table\\r\\n": 1,
                "radare2: .rdata) utf16le R6024\\r\\n- not enough space for _onexit/atexit table\\r\\n;radare2: .rdata) utf16le R6025\\r\\n- pure virtual function call\\r\\n": 1,
                "radare2: .rdata) utf16le R6025\\r\\n- pure virtual function call\\r\\n;radare2: .rdata) utf16le R6026\\r\\n- not enough space for stdio initialization\\r\\n": 1,
                "radare2: .rdata) utf16le R6026\\r\\n- not enough space for stdio initialization\\r\\n;radare2: .rdata) utf16le R6027\\r\\n- not enough space for lowio initialization\\r\\n": 1,
                "radare2: .rdata) utf16le R6027\\r\\n- not enough space for lowio initialization\\r\\n;radare2: .rdata) utf16le R6028\\r\\n- unable to initialize heap\\r\\n": 1,
                "radare2: .rdata) utf16le R6028\\r\\n- unable to initialize heap\\r\\n;radare2: .rdata) utf16le R6030\\r\\n- CRT not initialized\\r\\n": 1,
                "radare2: .rdata) utf16le R6030\\r\\n- CRT not initialized\\r\\n;radare2: .rdata) utf16le R6031\\r\\n- Attempt to initialize the CRT more than once.\\nThis indicates a bug in your application.\\r\\n": 1,
                "radare2: .rdata) utf16le R6031\\r\\n- Attempt to initialize the CRT more than once.\\nThis indicates a bug in your application.\\r\\n;radare2: .rdata) utf16le R6032\\r\\n- not enough space for locale information\\r\\n": 1,
                "radare2: .rdata) utf16le R6032\\r\\n- not enough space for locale information\\r\\n;radare2: .rdata) utf16le R6033\\r\\n- Attempt to use MSIL code from this assembly during native code initialization\\nThis indicates a bug in your application. It is most likely the result of calling an MSIL-compiled (/clr) function from a native constructor or from DllMain.\\r\\n": 1,
                "radare2: .rdata) utf16le R6033\\r\\n- Attempt to use MSIL code from this assembly during native code initialization\\nThis indicates a bug in your application. It is most likely the result of calling an MSIL-compiled (/clr) function from a native constructor or from DllMain.\\r\\n;radare2: .rdata) utf16le R6034\\r\\n- inconsistent onexit begin-end variables\\r\\n": 1,
                "radare2: .rdata) utf16le R6034\\r\\n- inconsistent onexit begin-end variables\\r\\n;radare2: .rdata) utf16le DOMAIN error\\r\\n": 1,
                "radare2: .rdata) utf16le DOMAIN error\\r\\n;radare2: .rdata) utf16le SING error\\r\\n": 1,
                "radare2: .rdata) utf16le SING error\\r\\n;radare2: .rdata) utf16le TLOSS error\\r\\n": 1,
                "radare2: .rdata) utf16le TLOSS error\\r\\n;radare2: .rdata) utf16le runtime error": 1,
                "radare2: .rdata) utf16le runtime error;radare2: .rdata) utf16le Runtime Error!\\n\\nProgram:": 1,
                "radare2: .rdata) utf16le Runtime Error!\\n\\nProgram:;radare2: .rdata) utf16le <program name unknown>": 1,
                "radare2: .rdata) utf16le <program name unknown>;radare2: .rdata) utf16le Microsoft Visual C++ Runtime Library": 1,
                "radare2: .rdata) utf16le Microsoft Visual C++ Runtime Library;radare2: .rdata) utf16le UTF-8": 1,
                "radare2: .rdata) utf16le UTF-8;radare2: .rdata) utf16le UTF-16LE": 1,
                "radare2: .rdata) utf16le UTF-16LE;radare2: .rdata) utf16le UNICODE": 1,
                "radare2: .rdata) utf16le UNICODE;radare2: .rdata) utf16le american": 1,
                "radare2: .rdata) utf16le american;radare2: .rdata) utf16le american english": 1,
                "radare2: .rdata) utf16le american english;radare2: .rdata) utf16le american-english": 1,
                "radare2: .rdata) utf16le american-english;radare2: .rdata) utf16le australian": 1,
                "radare2: .rdata) utf16le australian;radare2: .rdata) utf16le belgian": 1,
                "radare2: .rdata) utf16le belgian;radare2: .rdata) utf16le canadian": 1,
                "radare2: .rdata) utf16le canadian;radare2: .rdata) utf16le chinese": 1,
                "radare2: .rdata) utf16le chinese;radare2: .rdata) utf16le chinese-hongkong": 1,
                "radare2: .rdata) utf16le chinese-hongkong;radare2: .rdata) utf16le chinese-simplified": 1,
                "radare2: .rdata) utf16le chinese-simplified;radare2: .rdata) utf16le chinese-singapore": 1,
                "radare2: .rdata) utf16le chinese-singapore;radare2: .rdata) utf16le chinese-traditional": 1,
                "radare2: .rdata) utf16le chinese-traditional;radare2: .rdata) utf16le dutch-belgian": 1,
                "radare2: .rdata) utf16le dutch-belgian;radare2: .rdata) utf16le english-american": 1,
                "radare2: .rdata) utf16le english-american;radare2: .rdata) utf16le english-aus": 1,
                "radare2: .rdata) utf16le english-aus;radare2: .rdata) utf16le english-belize": 1,
                "radare2: .rdata) utf16le english-belize;radare2: .rdata) utf16le english-can": 1,
                "radare2: .rdata) utf16le english-can;radare2: .rdata) utf16le english-caribbean": 1,
                "radare2: .rdata) utf16le english-caribbean;radare2: .rdata) utf16le english-ire": 1,
                "radare2: .rdata) utf16le english-ire;radare2: .rdata) utf16le english-jamaica": 1,
                "radare2: .rdata) utf16le english-jamaica;radare2: .rdata) utf16le english-nz": 1,
                "radare2: .rdata) utf16le english-nz;radare2: .rdata) utf16le english-south africa": 1,
                "radare2: .rdata) utf16le english-south africa;radare2: .rdata) utf16le english-trinidad y tobago": 1,
                "radare2: .rdata) utf16le english-trinidad y tobago;radare2: .rdata) utf16le english-uk": 1,
                "radare2: .rdata) utf16le english-uk;radare2: .rdata) utf16le english-us": 1,
                "radare2: .rdata) utf16le english-us;radare2: .rdata) utf16le english-usa": 1,
                "radare2: .rdata) utf16le english-usa;radare2: .rdata) utf16le french-belgian": 1,
                "radare2: .rdata) utf16le french-belgian;radare2: .rdata) utf16le french-canadian": 1,
                "radare2: .rdata) utf16le french-canadian;radare2: .rdata) utf16le french-luxembourg": 1,
                "radare2: .rdata) utf16le french-luxembourg;radare2: .rdata) utf16le french-swiss": 1,
                "radare2: .rdata) utf16le french-swiss;radare2: .rdata) utf16le german-austrian": 1,
                "radare2: .rdata) utf16le german-austrian;radare2: .rdata) utf16le german-lichtenstein": 1,
                "radare2: .rdata) utf16le german-lichtenstein;radare2: .rdata) utf16le german-luxembourg": 1,
                "radare2: .rdata) utf16le german-luxembourg;radare2: .rdata) utf16le german-swiss": 1,
                "radare2: .rdata) utf16le german-swiss;radare2: .rdata) utf16le irish-english": 1,
                "radare2: .rdata) utf16le irish-english;radare2: .rdata) utf16le italian-swiss": 1,
                "radare2: .rdata) utf16le italian-swiss;radare2: .rdata) utf16le norwegian": 1,
                "radare2: .rdata) utf16le norwegian;radare2: .rdata) utf16le norwegian-bokmal": 1,
                "radare2: .rdata) utf16le norwegian-bokmal;radare2: .rdata) utf16le norwegian-nynorsk": 1,
                "radare2: .rdata) utf16le norwegian-nynorsk;radare2: .rdata) utf16le portuguese-brazilian": 1,
                "radare2: .rdata) utf16le portuguese-brazilian;radare2: .rdata) utf16le spanish-argentina": 1,
                "radare2: .rdata) utf16le spanish-argentina;radare2: .rdata) utf16le spanish-bolivia": 1,
                "radare2: .rdata) utf16le spanish-bolivia;radare2: .rdata) utf16le spanish-chile": 1,
                "radare2: .rdata) utf16le spanish-chile;radare2: .rdata) utf16le spanish-colombia": 1,
                "radare2: .rdata) utf16le spanish-colombia;radare2: .rdata) utf16le spanish-costa rica": 1,
                "radare2: .rdata) utf16le spanish-costa rica;radare2: .rdata) utf16le spanish-dominican republic": 1,
                "radare2: .rdata) utf16le spanish-dominican republic;radare2: .rdata) utf16le spanish-ecuador": 1,
                "radare2: .rdata) utf16le spanish-ecuador;radare2: .rdata) utf16le spanish-el salvador": 1,
                "radare2: .rdata) utf16le spanish-el salvador;radare2: .rdata) utf16le spanish-guatemala": 1,
                "radare2: .rdata) utf16le spanish-guatemala;radare2: .rdata) utf16le spanish-honduras": 1,
                "radare2: .rdata) utf16le spanish-honduras;radare2: .rdata) utf16le spanish-mexican": 1,
                "radare2: .rdata) utf16le spanish-mexican;radare2: .rdata) utf16le spanish-modern": 1,
                "radare2: .rdata) utf16le spanish-modern;radare2: .rdata) utf16le spanish-nicaragua": 1,
                "radare2: .rdata) utf16le spanish-nicaragua;radare2: .rdata) utf16le spanish-panama": 1,
                "radare2: .rdata) utf16le spanish-panama;radare2: .rdata) utf16le spanish-paraguay": 1,
                "radare2: .rdata) utf16le spanish-paraguay;radare2: .rdata) utf16le spanish-peru": 1,
                "radare2: .rdata) utf16le spanish-peru;radare2: .rdata) utf16le spanish-puerto rico": 1,
                "radare2: .rdata) utf16le spanish-puerto rico;radare2: .rdata) utf16le spanish-uruguay": 1,
                "radare2: .rdata) utf16le spanish-uruguay;radare2: .rdata) utf16le spanish-venezuela": 1,
                "radare2: .rdata) utf16le spanish-venezuela;radare2: .rdata) utf16le swedish-finland": 1,
                "radare2: .rdata) utf16le swedish-finland;radare2: .rdata) utf16le swiss": 1,
                "radare2: .rdata) utf16le swiss;radare2: .rdata) utf16le america": 1,
                "radare2: .rdata) utf16le america;radare2: .rdata) utf16le britain": 1,
                "radare2: .rdata) utf16le britain;radare2: .rdata) utf16le china": 1,
                "radare2: .rdata) utf16le china;radare2: .rdata) utf16le czech": 1,
                "radare2: .rdata) utf16le czech;radare2: .rdata) utf16le england": 1,
                "radare2: .rdata) utf16le england;radare2: .rdata) utf16le great britain": 1,
                "radare2: .rdata) utf16le great britain;radare2: .rdata) utf16le holland": 1,
                "radare2: .rdata) utf16le holland;radare2: .rdata) utf16le hong-kong": 1,
                "radare2: .rdata) utf16le hong-kong;radare2: .rdata) utf16le new-zealand": 1,
                "radare2: .rdata) utf16le new-zealand;radare2: .rdata) utf16le pr china": 1,
                "radare2: .rdata) utf16le pr china;radare2: .rdata) utf16le pr-china": 1,
                "radare2: .rdata) utf16le pr-china;radare2: .rdata) utf16le puerto-rico": 1,
                "radare2: .rdata) utf16le puerto-rico;radare2: .rdata) utf16le slovak": 1,
                "radare2: .rdata) utf16le slovak;radare2: .rdata) utf16le south africa": 1,
                "radare2: .rdata) utf16le south africa;radare2: .rdata) utf16le south korea": 1,
                "radare2: .rdata) utf16le south korea;radare2: .rdata) utf16le south-africa": 1,
                "radare2: .rdata) utf16le south-africa;radare2: .rdata) utf16le south-korea": 1,
                "radare2: .rdata) utf16le south-korea;radare2: .rdata) utf16le trinidad & tobago": 1,
                "radare2: .rdata) utf16le trinidad & tobago;radare2: .rdata) utf16le united-kingdom": 1,
                "radare2: .rdata) utf16le united-kingdom;radare2: .rdata) utf16le united-states": 1,
                "radare2: .rdata) utf16le united-states;radare2: .rdata) utf16le USER32.DLL": 1,
                "radare2: .rdata) utf16le USER32.DLL;radare2: .rdata) utf16le combase.dll": 1,
                "radare2: .rdata) utf16le combase.dll;radare2: .rdata) utf16le advapi32.dll": 1,
                "radare2: .rdata) utf16le advapi32.dll;radare2: .rdata) utf32le  0@P`p": 1,
                "radare2: .rdata) utf32le  0@P`p;radare2: .rdata) utf16le CONOUT$": 1,
                "radare2: .rdata) utf16le CONOUT$;radare2: .rdata)  utf8 ?\u02e9:7 blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .rdata)  utf8 ?\u02e9:7 blocks=Basic Latin,Spacing Modifier Letters;radare2: .rdata)  utf8 ?\u06e0*B blocks=Basic Latin,Arabic": 1,
                "radare2: .rdata)  utf8 ?\u06e0*B blocks=Basic Latin,Arabic;radare2: .rdata)  utf8 ?PN\u079f blocks=Basic Latin,Thaana": 1,
                "radare2: .rdata)  utf8 ?PN\u079f blocks=Basic Latin,Thaana;radare2: .rdata)  utf8 l>*>\u05e1+ blocks=Basic Latin,Hebrew": 1,
                "radare2: .rdata)  utf8 l>*>\u05e1+ blocks=Basic Latin,Hebrew;radare2: .rdata)  utf8 T>b\u03f4 blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .rdata)  utf8 T>b\u03f4 blocks=Basic Latin,Greek and Coptic;radare2: .rdata)  utf8 *|\\a>uZ>2": 1,
                "radare2: .rdata)  utf8 *|\\a>uZ>2;radare2: .rdata)  utf8 \u02bbf>$ blocks=Spacing Modifier Letters,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u02bbf>$ blocks=Spacing Modifier Letters,Basic Latin;radare2: .rdata)  utf8 {,\u0306$E> blocks=Basic Latin,Combining Diacritical Marks": 1,
                "radare2: .rdata)  utf8 {,\u0306$E> blocks=Basic Latin,Combining Diacritical Marks;radare2: .rdata) utf16le ERROR : Unable to initialize critical section in CAtlBaseModule\\n": 1,
                "radare2: .rdata) utf16le ERROR : Unable to initialize critical section in CAtlBaseModule\\n;radare2: .rdata) utf16le WinHttpClient": 1,
                "radare2: .rdata) utf16le WinHttpClient;radare2: .rdata) utf32le \\ \\n,-\u6475 blocks=Basic Latin,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf32le \\ \\n,-\u6475 blocks=Basic Latin,CJK Unified Ideographs;radare2: .rdata) utf32le |#!=&/@+vn": 1,
                "radare2: .rdata) utf32le |#!=&/@+vn;radare2: (.rdata) ascii": 1,
                "radare2: (.rdata) ascii;radare2: .rdata) utf16le Microsoft\\Windows": 1,
                "radare2: .rdata) utf16le Microsoft\\Windows;radare2: .rdata) utf16le \\BBTmp988712": 1,
                "radare2: .rdata) utf16le \\BBTmp988712;radare2: .rdata) utf16le \\BTmp988712": 1,
                "radare2: .rdata) utf16le \\BTmp988712;radare2: .rdata) utf16le \\Microsoft\\Windows\\CRMFiles": 1,
                "radare2: .rdata) utf16le \\Microsoft\\Windows\\CRMFiles;radare2: .rdata) utf16le \\Microsoft\\Windows\\TmpFiles": 1,
                "radare2: .rdata) utf16le \\Microsoft\\Windows\\TmpFiles;radare2: .rdata) utf16le .txt": 1,
                "radare2: .rdata) utf16le .txt;radare2: .rdata) utf16le Microsoft\\windows\\Tmp98871": 1,
                "radare2: .rdata) utf16le Microsoft\\windows\\Tmp98871;radare2: .rdata) utf16le \\Microsoft\\Windows\\Tmp9932u1.bat": 1,
                "radare2: .rdata) utf16le \\Microsoft\\Windows\\Tmp9932u1.bat;radare2: .rdata) utf16le Microsoft\\Windows\\TmpFiles\\": 1,
                "radare2: .rdata) utf16le Microsoft\\Windows\\TmpFiles\\;radare2: .rdata) utf16le Microsoft\\Windows\\TmpFiles": 1,
                "radare2: .rdata) utf16le Microsoft\\Windows\\TmpFiles;radare2: .rdata) utf16le": 1,
                "radare2: .rdata) utf16le;radare2: .rdata) utf16le \\ssc": 1,
                "radare2: .rdata) utf16le \\ssc;radare2: .rdata) utf16le swchost": 1,
                "radare2: .rdata) utf16le swchost;radare2: .rdata) utf16le %I64d": 1,
                "radare2: .rdata) utf16le %I64d;radare2: .rdata)  utf8 (kdz": 1,
                "radare2: .rdata)  utf8 (kdz;radare2: .rdata)  utf8 !#\u0133V blocks=Basic Latin,Latin Extended-A": 1,
                "radare2: .rdata)  utf8 !#\u0133V blocks=Basic Latin,Latin Extended-A;radare2: .rdata)  utf8 |\u04cceL blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata)  utf8 |\u04cceL blocks=Basic Latin,Cyrillic;radare2: .rdata)  utf8 \u04b1t9G blocks=Cyrillic,Basic Latin": 1,
                "radare2: .rdata)  utf8 \u04b1t9G blocks=Cyrillic,Basic Latin;radare2: .rdata)  utf8 +\u04c9Zz blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata)  utf8 +\u04c9Zz blocks=Basic Latin,Cyrillic;radare2: .rdata)  utf8 c\uc723ju\\n blocks=Basic Latin,Hangul Syllables": 1,
                "radare2: .rdata)  utf8 c\uc723ju\\n blocks=Basic Latin,Hangul Syllables;radare2: .rdata)  utf8 wn>Jj\u046e blocks=Basic Latin,Cyrillic": 1,
                "radare2: .rdata)  utf8 wn>Jj\u046e blocks=Basic Latin,Cyrillic;radare2: .rdata) utf32le \\a\\a\\b\\b\\t\\t\\n\\n\\v\\v\\f\\f\\r\\r": 1,
                "radare2: .rdata) utf32le \\a\\a\\b\\b\\t\\t\\n\\n\\v\\v\\f\\f\\r\\r;radare2: .rdata) utf32le !1Aa": 1,
                "radare2: .rdata) utf32le !1Aa;radare2: .rdata) utf32le \\a\\b\\t\\n\\v\\r": 1,
                "radare2: .rdata) utf32le \\a\\b\\t\\n\\v\\r;radare2: .rdata) utf32le #+3;CScs": 1,
                "radare2: .rdata) utf32le #+3;CScs;radare2: .rdata) utf16le ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/": 1,
                "radare2: .rdata) utf16le ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/;radare2: .rdata) utf16le Tmp98871": 1,
                "radare2: .rdata) utf16le Tmp98871;radare2: .rdata) utf16le \\..\\": 1,
                "radare2: .rdata) utf16le \\..\\;radare2: .rdata) utf16le \\../": 1,
                "radare2: .rdata) utf16le \\../;radare2: .rdata) utf16le /../": 1,
                "radare2: .rdata) utf16le /../;radare2: .rdata) utf16le /..\\": 1,
                "radare2: .rdata) utf16le /..\\;radare2: .rdata) utf16le %s%s": 1,
                "radare2: .rdata) utf16le %s%s;radare2: .rdata) utf16le %s%s%s": 1,
                "radare2: .rdata) utf16le %s%s%s;radare2: .rdata) utf32le :;>\u3e3e blocks=Basic Latin,CJK Unified Ideographs Extension A": 1,
                "radare2: .rdata) utf32le :;>\u3e3e blocks=Basic Latin,CJK Unified Ideographs Extension A;radare2: .rdata) utf16le \\cmd.exe": 1,
                "radare2: .rdata) utf16le \\cmd.exe;radare2: .rdata) utf16le image/jpeg": 1,
                "radare2: .rdata) utf16le image/jpeg;radare2: .rdata) utf16le .zip": 1,
                "radare2: .rdata) utf16le .zip;radare2: .rdata) utf16le .zoo": 1,
                "radare2: .rdata) utf16le .zoo;radare2: .rdata) utf16le .arc": 1,
                "radare2: .rdata) utf16le .arc;radare2: .rdata) utf16le .lzh": 1,
                "radare2: .rdata) utf16le .lzh;radare2: .rdata) utf16le .arj": 1,
                "radare2: .rdata) utf16le .arj;radare2: .rdata) utf16le .tgz": 1,
                "radare2: .rdata) utf16le .tgz;radare2: .rdata)  utf8 m?\u02fcK blocks=Basic Latin,Spacing Modifier Letters": 1,
                "radare2: .rdata)  utf8 m?\u02fcK blocks=Basic Latin,Spacing Modifier Letters;radare2: .rdata) utf16le \\f!\\n\ue400.\ud400/\uc4000\u74001\u64008\u60a0 blocks=Basic Latin,Private Use Area,Hangul Syllables,CJK Unified Ideographs": 1,
                "radare2: .rdata) utf16le \\f!\\n\ue400.\ud400/\uc4000\u74001\u64008\u60a0 blocks=Basic Latin,Private Use Area,Hangul Syllables,CJK Unified Ideographs;radare2: .rdata) utf16le \\v!\\f\uf400 blocks=Basic Latin,Private Use Area": 1,
                "radare2: .rdata) utf16le \\v!\\f\uf400 blocks=Basic Latin,Private Use Area;radare2: .data) utf32le \\t\\a\\f\\b\\f\\t\\f\\n\\a\\v\\b\\f": 1,
                "radare2: .data) utf32le \\t\\a\\f\\b\\f\\t\\f\\n\\a\\v\\b\\f;radare2: .data) utf32le R\\rS\\rW": 1,
                "radare2: .data) utf32le R\\rS\\rW;radare2: .data) utf32le Y\\vl\\rm p": 1,
                "radare2: .data) utf32le Y\\vl\\rm p;radare2: .data) utf32le \\v\u00a7\\r\u00b7 blocks=Basic Latin,Latin-1 Supplement": 1,
                "radare2: .data) utf32le \\v\u00a7\\r\u00b7 blocks=Basic Latin,Latin-1 Supplement;radare2: (.data) ascii": 1,
                "radare2: (.data) ascii;radare2: .data) utf32le 5\\v@\u03ff blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data) utf32le 5\\v@\u03ff blocks=Basic Latin,Greek and Coptic;radare2: .data)  utf8 HMXB\u49d39;5 blocks=Basic Latin,CJK Unified Ideographs Extension A": 1,
                "radare2: .data)  utf8 HMXB\u49d39;5 blocks=Basic Latin,CJK Unified Ideographs Extension A;radare2: .data)  utf8 ]\u0740nL\u025b blocks=Basic Latin,Syriac,IPA Extensions": 1,
                "radare2: .data)  utf8 ]\u0740nL\u025b blocks=Basic Latin,Syriac,IPA Extensions;radare2: .data)  utf8 ?q=\\n\u05e3p=\\n\u05e3 blocks=Basic Latin,Hebrew": 1,
                "radare2: .data)  utf8 ?q=\\n\u05e3p=\\n\u05e3 blocks=Basic Latin,Hebrew;radare2: .data)  utf8 \u03d4?$# blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .data)  utf8 \u03d4?$# blocks=Greek and Coptic,Basic Latin;radare2: .data)  utf8 \u2f3a;1a blocks=Kangxi Radicals,Basic Latin": 1,
                "radare2: .data)  utf8 \u2f3a;1a blocks=Kangxi Radicals,Basic Latin;radare2: .data)  utf8 zc%C1,<!": 1,
                "radare2: .data)  utf8 zc%C1,<!;radare2: .data)  utf8 ;\u0708X\\b\\e blocks=Basic Latin,Syriac": 1,
                "radare2: .data)  utf8 ;\u0708X\\b\\e blocks=Basic Latin,Syriac;radare2: .data)  utf8 ;\u0184EB\\a blocks=Basic Latin,Latin Extended-B": 1,
                "radare2: .data)  utf8 ;\u0184EB\\a blocks=Basic Latin,Latin Extended-B;radare2: .data)  utf8 Q\u03dbsw\\b blocks=Basic Latin,Greek and Coptic": 1,
                "radare2: .data)  utf8 Q\u03dbsw\\b blocks=Basic Latin,Greek and Coptic;radare2: .data)  utf8 \u039bsw\\b blocks=Greek and Coptic,Basic Latin": 1,
                "radare2: .data)  utf8 \u039bsw\\b blocks=Greek and Coptic,Basic Latin;radare2: .data)  utf8 \u109fsw\\b blocks=Myanmar,Basic Latin": 1,
                "radare2: .data)  utf8 \u109fsw\\b blocks=Myanmar,Basic Latin;radare2: .data)  utf8 \u025bsw\\b blocks=IPA Extensions,Basic Latin": 1,
                "radare2: .data)  utf8 \u025bsw\\b blocks=IPA Extensions,Basic Latin;radare2: arch     x86": 1,
                "radare2: arch     x86;radare2: baddr    0x13f0b0000": 1,
                "radare2: baddr    0x13f0b0000;radare2: binsz    958464": 1,
                "radare2: binsz    958464;radare2: bintype  pe": 1,
                "radare2: bintype  pe;radare2: bits     64": 1,
                "radare2: bits     64;radare2: canary   false": 1,
                "radare2: canary   false;radare2: retguard false": 1,
                "radare2: retguard false;radare2: class    PE32+": 1,
                "radare2: class    PE32+;radare2: cmp.csum 0x000f83b2": 1,
                "radare2: cmp.csum 0x000f83b2;radare2: compiled Mon Oct  9 03:21:57 2017": 1,
                "radare2: compiled Mon Oct  9 03:21:57 2017;radare2: crypto   false": 1,
                "radare2: crypto   false;radare2: endian   little": 1,
                "radare2: endian   little;radare2: havecode true": 1,
                "radare2: havecode true;radare2: hdr.csum 0x504d5544": 1,
                "radare2: hdr.csum 0x504d5544;radare2: laddr    0x0": 1,
                "radare2: laddr    0x0;radare2: linenum  false": 1,
                "radare2: linenum  false;radare2: lsyms    false": 1,
                "radare2: lsyms    false;radare2: machine  AMD 64": 1,
                "radare2: machine  AMD 64;radare2: maxopsz  16": 1,
                "radare2: maxopsz  16;radare2: minopsz  1": 1,
                "radare2: minopsz  1;radare2: nx       true": 1,
                "radare2: nx       true;radare2: os       windows": 1,
                "radare2: os       windows;radare2: overlay  false": 1,
                "radare2: overlay  false;radare2: pcalign  0": 1,
                "radare2: pcalign  0;radare2: pic      true": 1,
                "radare2: pic      true;radare2: relocs   false": 1,
                "radare2: relocs   false;radare2: signed   false": 1,
                "radare2: signed   false;radare2: sanitiz  false": 1,
                "radare2: sanitiz  false;radare2: static   false": 1,
                "radare2: static   false;radare2: stripped false": 1,
                "radare2: stripped false;radare2: subsys   Windows GUI": 1,
                "radare2: subsys   Windows GUI;radare2: va       true": 1,
                "radare2: va       true;radare2: PE file header:": 1,
                "radare2: PE file header:;radare2: IMAGE_NT_HEADERS": 1,
                "radare2: IMAGE_NT_HEADERS;radare2: Signature : 0x4550": 1,
                "radare2: Signature : 0x4550;radare2: IMAGE_FILE_HEADERS": 1,
                "radare2: IMAGE_FILE_HEADERS;radare2: Machine : 0x8664": 1,
                "radare2: Machine : 0x8664;radare2: NumberOfSections : 0x6": 1,
                "radare2: NumberOfSections : 0x6;radare2: TimeDateStamp : 0x59dadd45": 1,
                "radare2: TimeDateStamp : 0x59dadd45;radare2: PointerToSymbolTable : 0x0": 1,
                "radare2: PointerToSymbolTable : 0x0;radare2: NumberOfSymbols : 0x0": 1,
                "radare2: NumberOfSymbols : 0x0;radare2: SizeOfOptionalHeader : 0xf0": 1,
                "radare2: SizeOfOptionalHeader : 0xf0;radare2: Characteristics : 0x22": 1,
                "radare2: Characteristics : 0x22;radare2: IMAGE_OPTIONAL_HEADERS": 1,
                "radare2: IMAGE_OPTIONAL_HEADERS;radare2: Magic : 0x20b": 1,
                "radare2: Magic : 0x20b;radare2: MajorLinkerVersion : 0xc": 1,
                "radare2: MajorLinkerVersion : 0xc;radare2: MinorLinkerVersion : 0x0": 1,
                "radare2: MinorLinkerVersion : 0x0;radare2: SizeOfCode : 0xa1000": 1,
                "radare2: SizeOfCode : 0xa1000;radare2: SizeOfInitializedData : 0x45200": 1,
                "radare2: SizeOfInitializedData : 0x45200;radare2: SizeOfUninitializedData : 0x0": 1,
                "radare2: SizeOfUninitializedData : 0x0;radare2: AddressOfEntryPoint : 0x62ab4": 1,
                "radare2: AddressOfEntryPoint : 0x62ab4;radare2: BaseOfCode : 0x1000": 1,
                "radare2: BaseOfCode : 0x1000;radare2: ImageBase : 0x3f0b0000": 1,
                "radare2: ImageBase : 0x3f0b0000;radare2: SectionAlignment : 0x1000": 1,
                "radare2: SectionAlignment : 0x1000;radare2: FileAlignment : 0x200": 1,
                "radare2: FileAlignment : 0x200;radare2: MajorOperatingSystemVersion : 0x5": 1,
                "radare2: MajorOperatingSystemVersion : 0x5;radare2: MinorOperatingSystemVersion : 0x2": 1,
                "radare2: MinorOperatingSystemVersion : 0x2;radare2: MajorImageVersion : 0x0": 1,
                "radare2: MajorImageVersion : 0x0;radare2: MinorImageVersion : 0x0": 1,
                "radare2: MinorImageVersion : 0x0;radare2: MajorSubsystemVersion : 0x5": 1,
                "radare2: MajorSubsystemVersion : 0x5;radare2: MinorSubsystemVersion : 0x2": 1,
                "radare2: MinorSubsystemVersion : 0x2;radare2: Win32VersionValue : 0x0": 1,
                "radare2: Win32VersionValue : 0x0;radare2: SizeOfImage : 0xea000": 1,
                "radare2: SizeOfImage : 0xea000;radare2: SizeOfHeaders : 0x400": 1,
                "radare2: SizeOfHeaders : 0x400;radare2: CheckSum : 0x504d5544": 1,
                "radare2: CheckSum : 0x504d5544;radare2: Subsystem : 0x2": 1,
                "radare2: Subsystem : 0x2;radare2: DllCharacteristics : 0x8160": 1,
                "radare2: DllCharacteristics : 0x8160;radare2: SizeOfStackReserve : 0x100000": 1,
                "radare2: SizeOfStackReserve : 0x100000;radare2: SizeOfStackCommit : 0x1000": 1,
                "radare2: SizeOfStackCommit : 0x1000;radare2: SizeOfHeapReserve : 0x100000": 1,
                "radare2: SizeOfHeapReserve : 0x100000;radare2: SizeOfHeapCommit : 0x1000": 1,
                "radare2: SizeOfHeapCommit : 0x1000;radare2: LoaderFlags : 0x0": 1,
                "radare2: LoaderFlags : 0x0;radare2: NumberOfRvaAndSizes : 0x10": 1,
                "radare2: NumberOfRvaAndSizes : 0x10;radare2: IMAGE_DIRECTORY_ENTRY_IMPORT": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_IMPORT;radare2: VirtualAddress : 0xd5418": 1,
                "radare2: VirtualAddress : 0xd5418;radare2: Size : 0xb4": 1,
                "radare2: Size : 0xb4;radare2: IMAGE_DIRECTORY_ENTRY_RESOURCE": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_RESOURCE;radare2: VirtualAddress : 0xe7000": 1,
                "radare2: VirtualAddress : 0xe7000;radare2: Size : 0x1e0": 1,
                "radare2: Size : 0x1e0;radare2: IMAGE_DIRECTORY_ENTRY_EXCEPTION": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_EXCEPTION;radare2: VirtualAddress : 0xdf000": 1,
                "radare2: VirtualAddress : 0xdf000;radare2: Size : 0x7b3c": 1,
                "radare2: Size : 0x7b3c;radare2: IMAGE_DIRECTORY_ENTRY_BASERELOC": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_BASERELOC;radare2: VirtualAddress : 0xe8000": 1,
                "radare2: VirtualAddress : 0xe8000;radare2: Size : 0x1374": 1,
                "radare2: Size : 0x1374;radare2: IMAGE_DIRECTORY_ENTRY_DEBUG": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_DEBUG;radare2: VirtualAddress : 0xa27d0": 1,
                "radare2: VirtualAddress : 0xa27d0;radare2: Size : 0x38": 1,
                "radare2: Size : 0x38;radare2: IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG;radare2: VirtualAddress : 0xb9d90": 1,
                "radare2: VirtualAddress : 0xb9d90;radare2: Size : 0x70": 1,
                "radare2: Size : 0x70;radare2: IMAGE_DIRECTORY_ENTRY_IAT": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_IAT;radare2: VirtualAddress : 0xa2000": 1,
                "radare2: VirtualAddress : 0xa2000;radare2: Size : 0x610": 1,
                "radare2: Size : 0x610;radare2: IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT": 1,
                "radare2: IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT;radare2: VirtualAddress : 0x0": 1,
                "radare2: VirtualAddress : 0x0;radare2: Size : 0xffff": 1,
                "radare2: Size : 0xffff;radare2: kernel32.dll": 1,
                "radare2: kernel32.dll;radare2: user32.dll": 1,
                "radare2: user32.dll;radare2: gdi32.dll": 1,
                "radare2: gdi32.dll;radare2: shell32.dll": 1,
                "radare2: shell32.dll;radare2: ole32.dll": 1,
                "radare2: ole32.dll;radare2: gdiplus.dll": 1,
                "radare2: gdiplus.dll;radare2: ws2_32.dll": 1,
                "radare2: ws2_32.dll;radare2: psapi.dll": 1,
                "radare2: psapi.dll;radare2: type=SET_64 KERNEL32.dll_Process32NextW": 1,
                "radare2: type=SET_64 KERNEL32.dll_Process32NextW;radare2: type=SET_64 KERNEL32.dll_CreateToolhelp32Snapshot": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateToolhelp32Snapshot;radare2: type=SET_64 KERNEL32.dll_GetProcessAffinityMask": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetProcessAffinityMask;radare2: type=SET_64 KERNEL32.dll_VirtualProtect": 1,
                "radare2: type=SET_64 KERNEL32.dll_VirtualProtect;radare2: type=SET_64 KERNEL32.dll_MoveFileExW": 1,
                "radare2: type=SET_64 KERNEL32.dll_MoveFileExW;radare2: type=SET_64 KERNEL32.dll_GetTimeZoneInformation": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetTimeZoneInformation;radare2: type=SET_64 KERNEL32.dll_UnregisterWaitEx": 1,
                "radare2: type=SET_64 KERNEL32.dll_UnregisterWaitEx;radare2: type=SET_64 KERNEL32.dll_SetThreadAffinityMask": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetThreadAffinityMask;radare2: type=SET_64 KERNEL32.dll_FreeLibraryAndExitThread": 1,
                "radare2: type=SET_64 KERNEL32.dll_FreeLibraryAndExitThread;radare2: type=SET_64 KERNEL32.dll_FlushFileBuffers": 1,
                "radare2: type=SET_64 KERNEL32.dll_FlushFileBuffers;radare2: type=SET_64 KERNEL32.dll_IsDebuggerPresent": 1,
                "radare2: type=SET_64 KERNEL32.dll_IsDebuggerPresent;radare2: type=SET_64 KERNEL32.dll_GetWindowsDirectoryW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetWindowsDirectoryW;radare2: type=SET_64 KERNEL32.dll_UnregisterWait": 1,
                "radare2: type=SET_64 KERNEL32.dll_UnregisterWait;radare2: type=SET_64 KERNEL32.dll_ChangeTimerQueueTimer": 1,
                "radare2: type=SET_64 KERNEL32.dll_ChangeTimerQueueTimer;radare2: type=SET_64 KERNEL32.dll_CreateTimerQueueTimer": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateTimerQueueTimer;radare2: type=SET_64 KERNEL32.dll_DeleteTimerQueueTimer": 1,
                "radare2: type=SET_64 KERNEL32.dll_DeleteTimerQueueTimer;radare2: type=SET_64 KERNEL32.dll_CreateSemaphoreW": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateSemaphoreW;radare2: type=SET_64 KERNEL32.dll_CreateDirectoryW": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateDirectoryW;radare2: type=SET_64 KERNEL32.dll_DeleteFileW": 1,
                "radare2: type=SET_64 KERNEL32.dll_DeleteFileW;radare2: type=SET_64 KERNEL32.dll_SetFilePointerEx": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetFilePointerEx;radare2: type=SET_64 KERNEL32.dll_FileTimeToSystemTime": 1,
                "radare2: type=SET_64 KERNEL32.dll_FileTimeToSystemTime;radare2: type=SET_64 KERNEL32.dll_SwitchToThread": 1,
                "radare2: type=SET_64 KERNEL32.dll_SwitchToThread;radare2: type=SET_64 KERNEL32.dll_OutputDebugStringW": 1,
                "radare2: type=SET_64 KERNEL32.dll_OutputDebugStringW;radare2: type=SET_64 KERNEL32.dll_GetModuleHandleExW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetModuleHandleExW;radare2: type=SET_64 KERNEL32.dll_GetLocalTime": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetLocalTime;radare2: type=SET_64 KERNEL32.dll_GetDateFormatW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetDateFormatW;radare2: type=SET_64 KERNEL32.dll_GetTimeFormatW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetTimeFormatW;radare2: type=SET_64 KERNEL32.dll_RaiseException": 1,
                "radare2: type=SET_64 KERNEL32.dll_RaiseException;radare2: type=SET_64 KERNEL32.dll_GetVersionExW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetVersionExW;radare2: type=SET_64 KERNEL32.dll_RegisterWaitForSingleObject": 1,
                "radare2: type=SET_64 KERNEL32.dll_RegisterWaitForSingleObject;radare2: type=SET_64 KERNEL32.dll_GetFileSize": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetFileSize;radare2: type=SET_64 KERNEL32.dll_GetFileInformationByHandle": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetFileInformationByHandle;radare2: type=SET_64 KERNEL32.dll_SetFilePointer": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetFilePointer;radare2: type=SET_64 KERNEL32.dll_VirtualFree": 1,
                "radare2: type=SET_64 KERNEL32.dll_VirtualFree;radare2: type=SET_64 KERNEL32.dll_GetFileAttributesA": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetFileAttributesA;radare2: type=SET_64 KERNEL32.dll_ReadFile": 1,
                "radare2: type=SET_64 KERNEL32.dll_ReadFile;radare2: type=SET_64 KERNEL32.dll_TlsFree": 1,
                "radare2: type=SET_64 KERNEL32.dll_TlsFree;radare2: type=SET_64 KERNEL32.dll_CreateFileW": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateFileW;radare2: type=SET_64 KERNEL32.dll_FindNextFileW": 1,
                "radare2: type=SET_64 KERNEL32.dll_FindNextFileW;radare2: type=SET_64 KERNEL32.dll_SetFileTime": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetFileTime;radare2: type=SET_64 KERNEL32.dll_WriteConsoleW": 1,
                "radare2: type=SET_64 KERNEL32.dll_WriteConsoleW;radare2: type=SET_64 KERNEL32.dll_GetCurrentThreadId": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCurrentThreadId;radare2: type=SET_64 KERNEL32.dll_SetEvent": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetEvent;radare2: type=SET_64 KERNEL32.dll_GetCurrentThread": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCurrentThread;radare2: type=SET_64 KERNEL32.dll_GetSystemTimeAsFileTime": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetSystemTimeAsFileTime;radare2: type=SET_64 KERNEL32.dll_CreateEventW": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateEventW;radare2: type=SET_64 KERNEL32.dll_CompareStringW": 1,
                "radare2: type=SET_64 KERNEL32.dll_CompareStringW;radare2: type=SET_64 KERNEL32.dll_GetCurrentProcessId": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCurrentProcessId;radare2: type=SET_64 KERNEL32.dll_MultiByteToWideChar": 1,
                "radare2: type=SET_64 KERNEL32.dll_MultiByteToWideChar;radare2: type=SET_64 KERNEL32.dll_TlsSetValue": 1,
                "radare2: type=SET_64 KERNEL32.dll_TlsSetValue;radare2: type=SET_64 KERNEL32.dll_GetCurrentProcess": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCurrentProcess;radare2: type=SET_64 KERNEL32.dll_DuplicateHandle": 1,
                "radare2: type=SET_64 KERNEL32.dll_DuplicateHandle;radare2: type=SET_64 KERNEL32.dll_GetModuleFileNameA": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetModuleFileNameA;radare2: type=SET_64 KERNEL32.dll_InitializeCriticalSectionAndSpinCount": 1,
                "radare2: type=SET_64 KERNEL32.dll_InitializeCriticalSectionAndSpinCount;radare2: type=SET_64 KERNEL32.dll_QueryPerformanceCounter": 1,
                "radare2: type=SET_64 KERNEL32.dll_QueryPerformanceCounter;radare2: type=SET_64 KERNEL32.dll_CreateThread": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateThread;radare2: type=SET_64 KERNEL32.dll_GetModuleHandleA": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetModuleHandleA;radare2: type=SET_64 KERNEL32.dll_FreeLibrary": 1,
                "radare2: type=SET_64 KERNEL32.dll_FreeLibrary;radare2: type=SET_64 KERNEL32.dll_LoadLibraryExW": 1,
                "radare2: type=SET_64 KERNEL32.dll_LoadLibraryExW;radare2: type=SET_64 KERNEL32.dll_VirtualAlloc": 1,
                "radare2: type=SET_64 KERNEL32.dll_VirtualAlloc;radare2: type=SET_64 KERNEL32.dll_GetCPInfo": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCPInfo;radare2: type=SET_64 KERNEL32.dll_GetEnvironmentStringsW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetEnvironmentStringsW;radare2: type=SET_64 KERNEL32.dll_FreeEnvironmentStringsW": 1,
                "radare2: type=SET_64 KERNEL32.dll_FreeEnvironmentStringsW;radare2: type=SET_64 KERNEL32.dll_SetConsoleCtrlHandler": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetConsoleCtrlHandler;radare2: type=SET_64 KERNEL32.dll_GetSystemInfo": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetSystemInfo;radare2: type=SET_64 KERNEL32.dll_LoadLibraryW": 1,
                "radare2: type=SET_64 KERNEL32.dll_LoadLibraryW;radare2: type=SET_64 KERNEL32.dll_GetACP": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetACP;radare2: type=SET_64 KERNEL32.dll_TlsAlloc": 1,
                "radare2: type=SET_64 KERNEL32.dll_TlsAlloc;radare2: type=SET_64 KERNEL32.dll_GetModuleFileNameW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetModuleFileNameW;radare2: type=SET_64 KERNEL32.dll_GetUserDefaultLCID": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetUserDefaultLCID;radare2: type=SET_64 KERNEL32.dll_GetStartupInfoW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetStartupInfoW;radare2: type=SET_64 KERNEL32.dll_GetStringTypeW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetStringTypeW;radare2: type=SET_64 KERNEL32.dll_IsValidCodePage": 1,
                "radare2: type=SET_64 KERNEL32.dll_IsValidCodePage;radare2: type=SET_64 KERNEL32.dll_IsValidLocale": 1,
                "radare2: type=SET_64 KERNEL32.dll_IsValidLocale;radare2: type=SET_64 KERNEL32.dll_GetLocaleInfoW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetLocaleInfoW;radare2: type=SET_64 KERNEL32.dll_GetThreadPriority": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetThreadPriority;radare2: type=SET_64 KERNEL32.dll_ReleaseSemaphore": 1,
                "radare2: type=SET_64 KERNEL32.dll_ReleaseSemaphore;radare2: type=SET_64 KERNEL32.dll_SetUnhandledExceptionFilter": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetUnhandledExceptionFilter;radare2: type=SET_64 KERNEL32.dll_GetOEMCP": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetOEMCP;radare2: type=SET_64 KERNEL32.dll_FindClose": 1,
                "radare2: type=SET_64 KERNEL32.dll_FindClose;radare2: type=SET_64 KERNEL32.dll_FindFirstFileW": 1,
                "radare2: type=SET_64 KERNEL32.dll_FindFirstFileW;radare2: type=SET_64 KERNEL32.dll_SetErrorMode": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetErrorMode;radare2: type=SET_64 KERNEL32.dll_GetFileAttributesW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetFileAttributesW;radare2: type=SET_64 KERNEL32.dll_GetCurrentDirectoryW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCurrentDirectoryW;radare2: type=SET_64 KERNEL32.dll_OpenProcess": 1,
                "radare2: type=SET_64 KERNEL32.dll_OpenProcess;radare2: type=SET_64 KERNEL32.dll_GetStdHandle": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetStdHandle;radare2: type=SET_64 KERNEL32.dll_SetThreadPriority": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetThreadPriority;radare2: type=SET_64 KERNEL32.dll_LCMapStringW": 1,
                "radare2: type=SET_64 KERNEL32.dll_LCMapStringW;radare2: type=SET_64 KERNEL32.dll_CreateProcessW": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateProcessW;radare2: type=SET_64 KERNEL32.dll_GetCommandLineA": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetCommandLineA;radare2: type=SET_64 KERNEL32.dll_GetTickCount": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetTickCount;radare2: type=SET_64 KERNEL32.dll_WaitForSingleObject": 1,
                "radare2: type=SET_64 KERNEL32.dll_WaitForSingleObject;radare2: type=SET_64 KERNEL32.dll_Sleep": 1,
                "radare2: type=SET_64 KERNEL32.dll_Sleep;radare2: type=SET_64 KERNEL32.dll_TlsGetValue": 1,
                "radare2: type=SET_64 KERNEL32.dll_TlsGetValue;radare2: type=SET_64 KERNEL32.dll_GetLastError": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetLastError;radare2: type=SET_64 KERNEL32.dll_SetLastError": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetLastError;radare2: type=SET_64 KERNEL32.dll_GetFileType": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetFileType;radare2: type=SET_64 KERNEL32.dll_GetConsoleMode": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetConsoleMode;radare2: type=SET_64 KERNEL32.dll_CloseHandle": 1,
                "radare2: type=SET_64 KERNEL32.dll_CloseHandle;radare2: type=SET_64 KERNEL32.dll_WaitForSingleObjectEx": 1,
                "radare2: type=SET_64 KERNEL32.dll_WaitForSingleObjectEx;radare2: type=SET_64 KERNEL32.dll_GetProcessHeap": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetProcessHeap;radare2: type=SET_64 KERNEL32.dll_HeapFree": 1,
                "radare2: type=SET_64 KERNEL32.dll_HeapFree;radare2: type=SET_64 KERNEL32.dll_CreateFileA": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateFileA;radare2: type=SET_64 KERNEL32.dll_SystemTimeToFileTime": 1,
                "radare2: type=SET_64 KERNEL32.dll_SystemTimeToFileTime;radare2: type=SET_64 KERNEL32.dll_UnmapViewOfFile": 1,
                "radare2: type=SET_64 KERNEL32.dll_UnmapViewOfFile;radare2: type=SET_64 KERNEL32.dll_WriteFile": 1,
                "radare2: type=SET_64 KERNEL32.dll_WriteFile;radare2: type=SET_64 KERNEL32.dll_WideCharToMultiByte": 1,
                "radare2: type=SET_64 KERNEL32.dll_WideCharToMultiByte;radare2: type=SET_64 KERNEL32.dll_GetProcAddress": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetProcAddress;radare2: type=SET_64 KERNEL32.dll_GetModuleHandleW": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetModuleHandleW;radare2: type=SET_64 KERNEL32.dll_RtlPcToFileHeader": 1,
                "radare2: type=SET_64 KERNEL32.dll_RtlPcToFileHeader;radare2: type=SET_64 KERNEL32.dll_RtlUnwindEx": 1,
                "radare2: type=SET_64 KERNEL32.dll_RtlUnwindEx;radare2: type=SET_64 KERNEL32.dll_GetConsoleWindow": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetConsoleWindow;radare2: type=SET_64 KERNEL32.dll_GetConsoleCP": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetConsoleCP;radare2: type=SET_64 KERNEL32.dll_DeleteTimerQueue": 1,
                "radare2: type=SET_64 KERNEL32.dll_DeleteTimerQueue;radare2: type=SET_64 KERNEL32.dll_GetThreadTimes": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetThreadTimes;radare2: type=SET_64 KERNEL32.dll_RtlVirtualUnwind": 1,
                "radare2: type=SET_64 KERNEL32.dll_RtlVirtualUnwind;radare2: type=SET_64 KERNEL32.dll_RtlLookupFunctionEntry": 1,
                "radare2: type=SET_64 KERNEL32.dll_RtlLookupFunctionEntry;radare2: type=SET_64 KERNEL32.dll_RtlCaptureContext": 1,
                "radare2: type=SET_64 KERNEL32.dll_RtlCaptureContext;radare2: type=SET_64 KERNEL32.dll_GetLogicalProcessorInformation": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetLogicalProcessorInformation;radare2: type=SET_64 KERNEL32.dll_TerminateProcess": 1,
                "radare2: type=SET_64 KERNEL32.dll_TerminateProcess;radare2: type=SET_64 KERNEL32.dll_SetStdHandle": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetStdHandle;radare2: type=SET_64 KERNEL32.dll_SetEnvironmentVariableA": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetEnvironmentVariableA;radare2: type=SET_64 KERNEL32.dll_SetEndOfFile": 1,
                "radare2: type=SET_64 KERNEL32.dll_SetEndOfFile;radare2: type=SET_64 KERNEL32.dll_LocalFileTimeToFileTime": 1,
                "radare2: type=SET_64 KERNEL32.dll_LocalFileTimeToFileTime;radare2: type=SET_64 KERNEL32.dll_EnumSystemLocalesW": 1,
                "radare2: type=SET_64 KERNEL32.dll_EnumSystemLocalesW;radare2: type=SET_64 KERNEL32.dll_CreateTimerQueue": 1,
                "radare2: type=SET_64 KERNEL32.dll_CreateTimerQueue;radare2: type=SET_64 KERNEL32.dll_AreFileApisANSI": 1,
                "radare2: type=SET_64 KERNEL32.dll_AreFileApisANSI;radare2: type=SET_64 KERNEL32.dll_IsProcessorFeaturePresent": 1,
                "radare2: type=SET_64 KERNEL32.dll_IsProcessorFeaturePresent;radare2: type=SET_64 KERNEL32.dll_GetNumaHighestNodeNumber": 1,
                "radare2: type=SET_64 KERNEL32.dll_GetNumaHighestNodeNumber;radare2: type=SET_64 KERNEL32.dll_ReadConsoleW": 1,
                "radare2: type=SET_64 KERNEL32.dll_ReadConsoleW;radare2: type=SET_64 KERNEL32.dll_SignalObjectAndWait": 1,
                "radare2: type=SET_64 KERNEL32.dll_SignalObjectAndWait;radare2: type=SET_64 KERNEL32.dll_UnhandledExceptionFilter": 1,
                "radare2: type=SET_64 KERNEL32.dll_UnhandledExceptionFilter;radare2: type=SET_64 PSAPI.DLL_GetProcessMemoryInfo": 1,
                "radare2: type=SET_64 PSAPI.DLL_GetProcessMemoryInfo;radare2: type=SET_64 PSAPI.DLL_QueryWorkingSet": 1,
                "radare2: type=SET_64 PSAPI.DLL_QueryWorkingSet;radare2: type=SET_64 USER32.dll_LoadAcceleratorsW": 1,
                "radare2: type=SET_64 USER32.dll_LoadAcceleratorsW;radare2: type=SET_64 USER32.dll_GetDesktopWindow": 1,
                "radare2: type=SET_64 USER32.dll_GetDesktopWindow;radare2: type=SET_64 USER32.dll_GetDC": 1,
                "radare2: type=SET_64 USER32.dll_GetDC;radare2: type=SET_64 USER32.dll_ReleaseDC": 1,
                "radare2: type=SET_64 USER32.dll_ReleaseDC;radare2: type=SET_64 USER32.dll_TranslateAcceleratorW": 1,
                "radare2: type=SET_64 USER32.dll_TranslateAcceleratorW;radare2: type=SET_64 USER32.dll_GetSystemMetrics": 1,
                "radare2: type=SET_64 USER32.dll_GetSystemMetrics;radare2: type=SET_64 USER32.dll_TranslateMessage": 1,
                "radare2: type=SET_64 USER32.dll_TranslateMessage;radare2: type=SET_64 USER32.dll_DispatchMessageW": 1,
                "radare2: type=SET_64 USER32.dll_DispatchMessageW;radare2: type=SET_64 USER32.dll_GetMessageW": 1,
                "radare2: type=SET_64 USER32.dll_GetMessageW;radare2: type=SET_64 USER32.dll_wsprintfW": 1,
                "radare2: type=SET_64 USER32.dll_wsprintfW;radare2: type=SET_64 KERNEL32.dll_QueryDepthSList": 1,
                "radare2: type=SET_64 KERNEL32.dll_QueryDepthSList;radare2: type=SET_64 KERNEL32.dll_ExitProcess": 1,
                "radare2: type=SET_64 KERNEL32.dll_ExitProcess;radare2: type=SET_64 KERNEL32.dll_DeleteCriticalSection": 1,
                "radare2: type=SET_64 KERNEL32.dll_DeleteCriticalSection;radare2: type=SET_64 KERNEL32.dll_InterlockedFlushSList": 1,
                "radare2: type=SET_64 KERNEL32.dll_InterlockedFlushSList;radare2: type=SET_64 KERNEL32.dll_InitializeSListHead": 1,
                "radare2: type=SET_64 KERNEL32.dll_InitializeSListHead;radare2: type=SET_64 KERNEL32.dll_HeapSize": 1,
                "radare2: type=SET_64 KERNEL32.dll_HeapSize;radare2: type=SET_64 KERNEL32.dll_DecodePointer": 1,
                "radare2: type=SET_64 KERNEL32.dll_DecodePointer;radare2: type=SET_64 KERNEL32.dll_EncodePointer": 1,
                "radare2: type=SET_64 KERNEL32.dll_EncodePointer;radare2: type=SET_64 KERNEL32.dll_HeapReAlloc": 1,
                "radare2: type=SET_64 KERNEL32.dll_HeapReAlloc;radare2: type=SET_64 KERNEL32.dll_InterlockedPushEntrySList": 1,
                "radare2: type=SET_64 KERNEL32.dll_InterlockedPushEntrySList;radare2: type=SET_64 KERNEL32.dll_InterlockedPopEntrySList": 1,
                "radare2: type=SET_64 KERNEL32.dll_InterlockedPopEntrySList;radare2: type=SET_64 KERNEL32.dll_EnterCriticalSection": 1,
                "radare2: type=SET_64 KERNEL32.dll_EnterCriticalSection;radare2: type=SET_64 KERNEL32.dll_LeaveCriticalSection": 1,
                "radare2: type=SET_64 KERNEL32.dll_LeaveCriticalSection;radare2: type=SET_64 KERNEL32.dll_HeapAlloc": 1,
                "radare2: type=SET_64 KERNEL32.dll_HeapAlloc;radare2: type=SET_64 gdiplus.dll_GdiplusStartup": 1,
                "radare2: type=SET_64 gdiplus.dll_GdiplusStartup;radare2: type=SET_64 gdiplus.dll_GdiplusShutdown": 1,
                "radare2: type=SET_64 gdiplus.dll_GdiplusShutdown;radare2: type=SET_64 gdiplus.dll_GdipSaveImageToFile": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipSaveImageToFile;radare2: type=SET_64 gdiplus.dll_GdipCloneImage": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipCloneImage;radare2: type=SET_64 gdiplus.dll_GdipDisposeImage": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipDisposeImage;radare2: type=SET_64 gdiplus.dll_GdipCreateBitmapFromHBITMAP": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipCreateBitmapFromHBITMAP;radare2: type=SET_64 gdiplus.dll_GdipGetImageEncodersSize": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipGetImageEncodersSize;radare2: type=SET_64 gdiplus.dll_GdipGetImageEncoders": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipGetImageEncoders;radare2: type=SET_64 gdiplus.dll_GdipAlloc": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipAlloc;radare2: type=SET_64 gdiplus.dll_GdipFree": 1,
                "radare2: type=SET_64 gdiplus.dll_GdipFree;radare2: type=SET_64 SHELL32.dll_SHGetSpecialFolderPathW": 1,
                "radare2: type=SET_64 SHELL32.dll_SHGetSpecialFolderPathW;radare2: type=SET_64 SHELL32.dll_SHGetFolderPathW": 1,
                "radare2: type=SET_64 SHELL32.dll_SHGetFolderPathW;radare2: type=SET_64 GDI32.dll_DeleteObject": 1,
                "radare2: type=SET_64 GDI32.dll_DeleteObject;radare2: type=SET_64 GDI32.dll_SelectObject": 1,
                "radare2: type=SET_64 GDI32.dll_SelectObject;radare2: type=SET_64 GDI32.dll_CreateCompatibleDC": 1,
                "radare2: type=SET_64 GDI32.dll_CreateCompatibleDC;radare2: type=SET_64 GDI32.dll_BitBlt": 1,
                "radare2: type=SET_64 GDI32.dll_BitBlt;radare2: type=SET_64 GDI32.dll_CreateCompatibleBitmap": 1,
                "radare2: type=SET_64 GDI32.dll_CreateCompatibleBitmap;radare2: type=SET_64 WS2_32.dll_htons": 1,
                "radare2: type=SET_64 WS2_32.dll_htons;radare2: type=SET_64 WS2_32.dll_inet_addr": 1,
                "radare2: type=SET_64 WS2_32.dll_inet_addr;radare2: type=SET_64 WS2_32.dll_closesocket": 1,
                "radare2: type=SET_64 WS2_32.dll_closesocket;radare2: type=SET_64 WS2_32.dll_WSAStartup": 1,
                "radare2: type=SET_64 WS2_32.dll_WSAStartup;radare2: type=SET_64 WS2_32.dll_WSACleanup": 1,
                "radare2: type=SET_64 WS2_32.dll_WSACleanup;radare2: type=SET_64 WS2_32.dll_select": 1,
                "radare2: type=SET_64 WS2_32.dll_select;radare2: type=SET_64 WS2_32.dll_sendto": 1,
                "radare2: type=SET_64 WS2_32.dll_sendto;radare2: type=SET_64 WS2_32.dll_socket": 1,
                "radare2: type=SET_64 WS2_32.dll_socket;radare2: type=SET_64 WS2_32.dll_recv": 1,
                "radare2: type=SET_64 WS2_32.dll_recv;radare2: type=SET_64 ole32.dll_CoCreateGuid": 1,
                "radare2: type=SET_64 ole32.dll_CoCreateGuid;radare2: type=SET_64 ole32.dll_StringFromGUID2": 1,
                "radare2: type=SET_64 ole32.dll_StringFromGUID2;radare2: 958464": 1,
                "radare2: 958464;clamav: bytecode: JIT disabled": 1,
                "clamav: bytecode: JIT disabled;clamav: Cannot prepare for JIT, LLVM is not compiled or not linked": 1,
                "clamav: Cannot prepare for JIT, LLVM is not compiled or not linked;clamav: Bytecode: 0 bytecode prepared with JIT, 94 prepared with interpreter, 94 total": 1,
                "clamav: Bytecode: 0 bytecode prepared with JIT, 94 prepared with interpreter, 94 total;clamav: Recognized MS-EXE/DLL file": 1,
                "clamav: Recognized MS-EXE/DLL file;clamav: in cli_peheader": 1,
                "clamav: in cli_peheader;clamav: Matched signature for file type PE": 1,
                "clamav: Matched signature for file type PE;clamav: Matched signature for file type ZIP-SFX at 1?????": 1,
                "clamav: Matched signature for file type ZIP-SFX at 1?????;clamav: cli_scanicon: scanned a total of 0[0 actual] icons across 0 groups": 1,
                "clamav: cli_scanicon: scanned a total of 0[0 actual] icons across 0 groups;clamav: Running bytecode for logical signature match": 1,
                "clamav: Running bytecode for logical signature match;clamav: Bytecode 37 returned code: 0": 1,
                "clamav: Bytecode 37 returned code: 0;clamav: ZIP/ZIP-SFX signature found at 1?????": 1,
                "clamav: ZIP/ZIP-SFX signature found at 1?????;clamav: in cli_unzip_single": 1,
                "clamav: in cli_unzip_single;clamav: cli_unzip: lh - ZMDNAME:0:\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0002\ufffd\ufffdL\ufffd?H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffde(\ufffd\ufffdu\u001dH\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdu": 1,
                "clamav: cli_unzip: lh - ZMDNAME:0:\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0002\ufffd\ufffdL\ufffd?H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffde(\ufffd\ufffdu\u001dH\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdu;clamav: D\ufffd}(A\ufffd\ufffd\bE\u0003\ufffd\ufffd\b\ufffd\ufffdE\ufffd\ufffd\u000fE\ufffdL\ufffd'H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffdm(\ufffd\u0405\ufffdu2H\ufffdU(I\ufffd\ufffd\ufffdt\ufffd\ufffd\ufffd\ufffd\u0405\ufffdu \ufffdE(\ufffd\ufffd\bA\u0003\u0149E(\ufffd\ufffdu\u001c\ufffdO8D\ufffdk\ufffd;\ufffdt<A\ufffd\ufffd\ufffd\u0012A\ufffd\u0189E(\ufffd\ufffdt\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\u0010\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\u000fE\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0010\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffdA\u000fE\ufffd\ufffd\u03c5\ufffdu\u0010\ufffdG@9E(t\bA\ufffd\ufffd\bA\u000fD\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0004:2?????????:3?????????:4928558d:5????:0:1": 1,
                "clamav: D\ufffd}(A\ufffd\ufffd\bE\u0003\ufffd\ufffd\b\ufffd\ufffdE\ufffd\ufffd\u000fE\ufffdL\ufffd'H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffdm(\ufffd\u0405\ufffdu2H\ufffdU(I\ufffd\ufffd\ufffdt\ufffd\ufffd\ufffd\ufffd\u0405\ufffdu \ufffdE(\ufffd\ufffd\bA\u0003\u0149E(\ufffd\ufffdu\u001c\ufffdO8D\ufffdk\ufffd;\ufffdt<A\ufffd\ufffd\ufffd\u0012A\ufffd\u0189E(\ufffd\ufffdt\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\u0010\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\u000fE\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0010\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffdA\u000fE\ufffd\ufffd\u03c5\ufffdu\u0010\ufffdG@9E(t\bA\ufffd\ufffd\bA\u000fD\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0004:2?????????:3?????????:4928558d:5????:0:1;clamav: CDBNAME:CL_TYPE_ZIP:3?????????:\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0002\ufffd\ufffdL\ufffd?H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffde(\ufffd\ufffdu\u001dH\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdu": 1,
                "clamav: CDBNAME:CL_TYPE_ZIP:3?????????:\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0002\ufffd\ufffdL\ufffd?H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffde(\ufffd\ufffdu\u001dH\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdu;clamav: D\ufffd}(A\ufffd\ufffd\bE\u0003\ufffd\ufffd\b\ufffd\ufffdE\ufffd\ufffd\u000fE\ufffdL\ufffd'H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffdm(\ufffd\u0405\ufffdu2H\ufffdU(I\ufffd\ufffd\ufffdt\ufffd\ufffd\ufffd\ufffd\u0405\ufffdu \ufffdE(\ufffd\ufffd\bA\u0003\u0149E(\ufffd\ufffdu\u001c\ufffdO8D\ufffdk\ufffd;\ufffdt<A\ufffd\ufffd\ufffd\u0012A\ufffd\u0189E(\ufffd\ufffdt\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\u0010\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\u000fE\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0010\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffdA\u000fE\ufffd\ufffd\u03c5\ufffdu\u0010\ufffdG@9E(t\bA\ufffd\ufffd\bA\u000fD\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0004:3?????????:2?????????:0:0:1?????????:0x0": 1,
                "clamav: D\ufffd}(A\ufffd\ufffd\bE\u0003\ufffd\ufffd\b\ufffd\ufffdE\ufffd\ufffd\u000fE\ufffdL\ufffd'H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffdm(\ufffd\u0405\ufffdu2H\ufffdU(I\ufffd\ufffd\ufffdt\ufffd\ufffd\ufffd\ufffd\u0405\ufffdu \ufffdE(\ufffd\ufffd\bA\u0003\u0149E(\ufffd\ufffdu\u001c\ufffdO8D\ufffdk\ufffd;\ufffdt<A\ufffd\ufffd\ufffd\u0012A\ufffd\u0189E(\ufffd\ufffdt\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\u0010\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\u000fE\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0010\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffdA\u000fE\ufffd\ufffd\u03c5\ufffdu\u0010\ufffdG@9E(t\bA\ufffd\ufffd\bA\u000fD\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0004:3?????????:2?????????:0:0:1?????????:0x0;clamav: cli_unzip: lh - has data desc": 1,
                "clamav: cli_unzip: lh - has data desc;clamav: e_lfanew == 2??": 1,
                "clamav: e_lfanew == 2??;clamav: Machine type: AMD64": 1,
                "clamav: Machine type: AMD64;clamav: NumberOfSections: 6": 1,
                "clamav: NumberOfSections: 6;clamav: TimeDateStamp: Sun Oct  8 22:21:57 2???": 1,
                "clamav: TimeDateStamp: Sun Oct  8 22:21:57 2???;clamav: SizeOfOptionalHeader: f0": 1,
                "clamav: SizeOfOptionalHeader: f0;clamav: File format: PE32+": 1,
                "clamav: File format: PE32+;clamav: MajorLinkerVersion: 12": 1,
                "clamav: MajorLinkerVersion: 12;clamav: MinorLinkerVersion: 0": 1,
                "clamav: MinorLinkerVersion: 0;clamav: SizeOfCode: 0xa????": 1,
                "clamav: SizeOfCode: 0xa????;clamav: AddressOfEntryPoint: 0x6????": 1,
                "clamav: AddressOfEntryPoint: 0x6????;clamav: BaseOfCode: 0x1???": 1,
                "clamav: BaseOfCode: 0x1???;clamav: SectionAlignment: 0x1???": 1,
                "clamav: SectionAlignment: 0x1???;clamav: FileAlignment: 0x2??": 1,
                "clamav: FileAlignment: 0x2??;clamav: MajorSubsystemVersion: 5": 1,
                "clamav: MajorSubsystemVersion: 5;clamav: MinorSubsystemVersion: 2": 1,
                "clamav: MinorSubsystemVersion: 2;clamav: SizeOfImage: 0xe????": 1,
                "clamav: SizeOfImage: 0xe????;clamav: SizeOfHeaders: 0x4??": 1,
                "clamav: SizeOfHeaders: 0x4??;clamav: NumberOfRvaAndSizes: 16": 1,
                "clamav: NumberOfRvaAndSizes: 16;clamav: Subsystem: Win32 GUI": 1,
                "clamav: Subsystem: Win32 GUI;clamav: Section 0": 1,
                "clamav: Section 0;clamav: Section name: .text": 1,
                "clamav: Section name: .text;clamav: Section data (from headers - in memory)": 1,
                "clamav: Section data (from headers - in memory);clamav: VirtualSize: 0xa???? 0xa????": 1,
                "clamav: VirtualSize: 0xa???? 0xa????;clamav: VirtualAddress: 0x1??? 0x1???": 1,
                "clamav: VirtualAddress: 0x1??? 0x1???;clamav: SizeOfRawData: 0xa???? 0xa????": 1,
                "clamav: SizeOfRawData: 0xa???? 0xa????;clamav: PointerToRawData: 0x1??? 0x1???": 1,
                "clamav: PointerToRawData: 0x1??? 0x1???;clamav: Section contains executable code": 1,
                "clamav: Section contains executable code;clamav: Section's memory is executable": 1,
                "clamav: Section's memory is executable;clamav: MDB hashset: 6?????:8317150e841bd04fcefe612944efc005": 1,
                "clamav: MDB hashset: 6?????:8317150e841bd04fcefe612944efc005;clamav: Section 1": 1,
                "clamav: Section 1;clamav: Section name: .rdata": 1,
                "clamav: Section name: .rdata;clamav: VirtualSize: 0x3???? 0x3????": 1,
                "clamav: VirtualSize: 0x3???? 0x3????;clamav: VirtualAddress: 0xa???? 0xa????": 1,
                "clamav: VirtualAddress: 0xa???? 0xa????;clamav: SizeOfRawData: 0x3???? 0x3????": 1,
                "clamav: SizeOfRawData: 0x3???? 0x3????;clamav: PointerToRawData: 0xa???? 0xa????": 1,
                "clamav: PointerToRawData: 0xa???? 0xa????;clamav: MDB hashset: 2?????:181f4bc9702e6e3ae893e9b7cd79eb5a": 1,
                "clamav: MDB hashset: 2?????:181f4bc9702e6e3ae893e9b7cd79eb5a;clamav: Section 2": 1,
                "clamav: Section 2;clamav: Section name: .data": 1,
                "clamav: Section name: .data;clamav: VirtualSize: 0x8??? 0x8???": 1,
                "clamav: VirtualSize: 0x8??? 0x8???;clamav: VirtualAddress: 0xd???? 0xd????": 1,
                "clamav: VirtualAddress: 0xd???? 0xd????;clamav: SizeOfRawData: 0x8??? 0x8???": 1,
                "clamav: SizeOfRawData: 0x8??? 0x8???;clamav: PointerToRawData: 0xd???? 0xd????": 1,
                "clamav: PointerToRawData: 0xd???? 0xd????;clamav: Section's memory is writeable": 1,
                "clamav: Section's memory is writeable;clamav: MDB hashset: 3????:e1848f93f8cffa512675493e7c857bb7": 1,
                "clamav: MDB hashset: 3????:e1848f93f8cffa512675493e7c857bb7;clamav: Section 3": 1,
                "clamav: Section 3;clamav: Section name: .pdata": 1,
                "clamav: Section name: .pdata;clamav: MDB hashset: 3????:9b065020f0f62845fb96df4dfac5703e": 1,
                "clamav: MDB hashset: 3????:9b065020f0f62845fb96df4dfac5703e;clamav: Section 4": 1,
                "clamav: Section 4;clamav: Section name: .rsrc": 1,
                "clamav: Section name: .rsrc;clamav: VirtualSize: 0x1??? 0x1???": 1,
                "clamav: VirtualSize: 0x1??? 0x1???;clamav: VirtualAddress: 0xe???? 0xe????": 1,
                "clamav: VirtualAddress: 0xe???? 0xe????;clamav: SizeOfRawData: 0x1??? 0x1???": 1,
                "clamav: SizeOfRawData: 0x1??? 0x1???;clamav: PointerToRawData: 0xe???? 0xe????": 1,
                "clamav: PointerToRawData: 0xe???? 0xe????;clamav: MDB hashset: 4???:b3fac958b02e1df4bbb8c178afec3004": 1,
                "clamav: MDB hashset: 4???:b3fac958b02e1df4bbb8c178afec3004;clamav: Section 5": 1,
                "clamav: Section 5;clamav: Section name: .reloc": 1,
                "clamav: Section name: .reloc;clamav: VirtualSize: 0x2??? 0x2???": 1,
                "clamav: VirtualSize: 0x2??? 0x2???;clamav: SizeOfRawData: 0x2??? 0x2???": 1,
                "clamav: SizeOfRawData: 0x2??? 0x2???;clamav: MDB hashset: 8???:f04432d8d43eb25e93af86f0ce115712": 1,
                "clamav: MDB hashset: 8???:f04432d8d43eb25e93af86f0ce115712;clamav: EntryPoint offset: 0x6???? (4?????)": 1,
                "clamav: EntryPoint offset: 0x6???? (4?????);clamav: cli_magic_scandesc: returning 0  at line 2???": 1,
                "clamav: cli_magic_scandesc: returning 0  at line 2???;clamav: D\ufffd}(A\ufffd\ufffd\bE\u0003\ufffd\ufffd\b\ufffd\ufffdE\ufffd\ufffd\u000fE\ufffdL\ufffd'H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffdm(\ufffd\u0405\ufffdu2H\ufffdU(I\ufffd\ufffd\ufffdt\ufffd\ufffd\ufffd\ufffd\u0405\ufffdu \ufffdE(\ufffd\ufffd\bA\u0003\u0149E(\ufffd\ufffdu\u001c\ufffdO8D\ufffdk\ufffd;\ufffdt<A\ufffd\ufffd\ufffd\u0012A\ufffd\u0189E(\ufffd\ufffdt\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\u0010\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\u000fE\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0010\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffdA\u000fE\ufffd\ufffd\u03c5\ufffdu\u0010\ufffdG@9E(t\bA\ufffd\ufffd\bA\u000fD\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0004": 1,
                "clamav: D\ufffd}(A\ufffd\ufffd\bE\u0003\ufffd\ufffd\b\ufffd\ufffdE\ufffd\ufffd\u000fE\ufffdL\ufffd'H\ufffdU(I\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdD\ufffdm(\ufffd\u0405\ufffdu2H\ufffdU(I\ufffd\ufffd\ufffdt\ufffd\ufffd\ufffd\ufffd\u0405\ufffdu \ufffdE(\ufffd\ufffd\bA\u0003\u0149E(\ufffd\ufffdu\u001c\ufffdO8D\ufffdk\ufffd;\ufffdt<A\ufffd\ufffd\ufffd\u0012A\ufffd\u0189E(\ufffd\ufffdt\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\u0010\ufffd\ufffd\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\u000fE\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0010\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffdA\u000fE\ufffd\ufffd\u03c5\ufffdu\u0010\ufffdG@9E(t\bA\ufffd\ufffd\bA\u000fD\ufffdH\ufffd\u000fH\ufffdU(\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdt\u0004;clamav: OK": 1,
                "clamav: OK;clamav: Scanned files: 1": 1,
                "clamav: Scanned files: 1;clamav: Infected files: 0": 1,
                "blob file types: ": 1
            }
        }
    ]
}